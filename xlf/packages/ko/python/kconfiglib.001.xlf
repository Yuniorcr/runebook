<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/kconfiglib/">
    <body>
      <group id="kconfiglib">
        <trans-unit id="1c0fb393ee5d2c0681ad54f77c62e70bda5ed414" translate="yes" xml:space="preserve">
          <source># CONFIG_FOO is not set</source>
          <target state="translated"># CONFIG_FOO가 설정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="078a6bc36919d8d84b59a4497dc0d28433683007" translate="yes" xml:space="preserve">
          <source>$(FOO)</source>
          <target state="translated">$ (FOO)</target>
        </trans-unit>
        <trans-unit id="7375b555c095008bf4061c3dbe7e245a405584d6" translate="yes" xml:space="preserve">
          <source>$FOO</source>
          <target state="translated">$ FOO</target>
        </trans-unit>
        <trans-unit id="6d39bf13c6db1fd0b766084a95fb0660bad12f34" translate="yes" xml:space="preserve">
          <source>$KCONFIG_CONFIG.old</source>
          <target state="translated">$ KCONFIG_CONFIG.old</target>
        </trans-unit>
        <trans-unit id="441b07506887250949957913abfc2b9e6a5b6b23" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;s</source>
          <target state="translated">'에스</target>
        </trans-unit>
        <trans-unit id="8a0219aa4a21b3954eaaea242843f6593007044b" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/e8b4ecb6ff6ccc1c7be0818314fbccda2ef2b2ee&quot;&gt;1&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/db633015a4d7b0ba1e882f665e191f350932b2af&quot;&gt;2&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/8983f7eb297dd614faf0beee3129559bc8ba338e&quot;&gt;3&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/cbf32e29a130d22bc734b7778e6304ac9df2a3e8&quot;&gt;4&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/eb6c21a9b33a2d6e2bed9882d4f930d0cab2f03b&quot;&gt;5&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/c19fc11355b13d75d97286402c7a933fb23d3b70&quot;&gt;6&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/7a428aa415606820a44291f475248b08e3952c4b&quot;&gt;7&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/f247ddf618ad29718e5efd3e69f8baf75d4d347b&quot;&gt;8&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/4fed39d9271ceb68be4157ab3f96a45b94f77dc0&quot;&gt;9&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/55bc8c380869ea663092212e8fe388ad7abae596&quot;&gt;10&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/21b4c1e3b6e2867b9a0788d21a358f6b1f581d86&quot;&gt;Windows packaging change&lt;/a&gt;,
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/9e0a8d29fa76adcb3f27bb2e20f16fefc2a8591e&quot;&gt;Python 3 hashbang change&lt;/a&gt;),
which is why the major version is at 14 rather than 2. I do major version bumps
for all behavior changes, even tiny ones, and most of these were fixes for baby
issues in the early days of the Kconfiglib 2 API.</source>
          <target state="translated">( &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/e8b4ecb6ff6ccc1c7be0818314fbccda2ef2b2ee&quot;&gt;1&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/db633015a4d7b0ba1e882f665e191f350932b2af&quot;&gt;2&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/8983f7eb297dd614faf0beee3129559bc8ba338e&quot;&gt;3&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/cbf32e29a130d22bc734b7778e6304ac9df2a3e8&quot;&gt;4&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/eb6c21a9b33a2d6e2bed9882d4f930d0cab2f03b&quot;&gt;5&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/c19fc11355b13d75d97286402c7a933fb23d3b70&quot;&gt;6&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/7a428aa415606820a44291f475248b08e3952c4b&quot;&gt;7&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/f247ddf618ad29718e5efd3e69f8baf75d4d347b&quot;&gt;8&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/4fed39d9271ceb68be4157ab3f96a45b94f77dc0&quot;&gt;9&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/55bc8c380869ea663092212e8fe388ad7abae596&quot;&gt;10&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/21b4c1e3b6e2867b9a0788d21a358f6b1f581d86&quot;&gt;Windows 패키징 변경&lt;/a&gt; , &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/commit/9e0a8d29fa76adcb3f27bb2e20f16fefc2a8591e&quot;&gt;Python 3 해시 뱅 변경&lt;/a&gt; ), 이것이 주 버전이 2가 아닌 14 인 이유입니다. 모든 동작 변경, 심지어 아주 작은 것까지, 이들 중 대부분은 Kconfiglib 2 API 초기의 아기 문제에 대한 수정이었습니다.</target>
        </trans-unit>
        <trans-unit id="8ea45520b9f085b753a70077bd3ad62fe4afaa76" translate="yes" xml:space="preserve">
          <source>(a
Make comment) in</source>
          <target state="translated">(댓글 작성)</target>
        </trans-unit>
        <trans-unit id="99d40c955cf7e623d732b36e95916d5473224d74" translate="yes" xml:space="preserve">
          <source>(gives new options their default value). Entering the</source>
          <target state="translated">(새 옵션에 기본값을 부여합니다). 입력</target>
        </trans-unit>
        <trans-unit id="541550177b571e14153cb56ca2ec77d42106880e" translate="yes" xml:space="preserve">
          <source>(minimal configuration) files are
character-for-character identical to what the C implementation would generate
(except for the header comment). The test suite relies on this, as it
compares the generated files.</source>
          <target state="translated">(최소 구성) 파일은 C 구현이 생성하는 것과 동일한 문자 단위입니다 (헤더 주석 제외). 테스트 스위트는 생성 된 파일을 비교할 때 이것에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="c961199bb047c67b6aedb2b3739b0b3f96fa551f" translate="yes" xml:space="preserve">
          <source>(or, more generally, to</source>
          <target state="translated">(또는 더 일반적으로</target>
        </trans-unit>
        <trans-unit id="3e774f64704eb23c21ed7c920879f6f88fb43f8c" translate="yes" xml:space="preserve">
          <source>(prompts for values for new options)
or</source>
          <target state="translated">(새 옵션 값에 대한 프롬프트) 또는</target>
        </trans-unit>
        <trans-unit id="4bb2443df59063de72e670d9448c906c92bd3bfe" translate="yes" xml:space="preserve">
          <source>(the latest version).</source>
          <target state="translated">(최신 버전).</target>
        </trans-unit>
        <trans-unit id="41b497e822e32be30227af2181689e6bfeb8e39f" translate="yes" xml:space="preserve">
          <source>(the new syntax) and as</source>
          <target state="translated">(새 구문) 및</target>
        </trans-unit>
        <trans-unit id="528780bef445e8419b11338529267f3a56192705" translate="yes" xml:space="preserve">
          <source>(the old syntax). The old syntax is
deprecated, but will probably be supported for a long time, as it&amp;rsquo;s needed to
stay compatible with older Linux kernels. The major version will be increased
if support is ever dropped. Using the old syntax with an undefined environment
variable keeps the string as is.</source>
          <target state="translated">(이전 구문). 이전 구문은 더 이상 사용되지 않지만 이전 Linux 커널과의 호환성을 유지하는 데 필요하므로 오랫동안 지원 될 것입니다. 지원이 중단되면 주 버전이 증가합니다. 정의되지 않은 환경 변수와 함께 이전 구문을 사용하면 문자열이 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="7fe44761f6004c07e073ba27b6baaefdea3d4f73" translate="yes" xml:space="preserve">
          <source>) is available, where file paths
are specified relative to the directory of the current Kconfig file. An</source>
          <target state="translated">)를 사용할 수 있습니다. 여기서 파일 경로는 현재 Kconfig 파일의 디렉토리에 상대적으로 지정됩니다. 안</target>
        </trans-unit>
        <trans-unit id="ddb9a9ec182deb3ac22312e1f7658063b065c053" translate="yes" xml:space="preserve">
          <source>) mirror functionality
available in the C tools.</source>
          <target state="translated">) C 도구에서 사용할 수있는 미러 기능.</target>
        </trans-unit>
        <trans-unit id="5fb29f46d1ac140d01049a125e33a8471b50e05c" translate="yes" xml:space="preserve">
          <source>) on top of Kconfiglib, for use e.g. with &lt;a href=&quot;scons.org&quot;&gt;SCons&lt;/a&gt;.</source>
          <target state="translated">) Kconfiglib 위에, 예를 들어 &lt;a href=&quot;scons.org&quot;&gt;SCons&lt;/a&gt; 와 함께 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="31df8a5489fb1ea9699eada1169a0786dd00859d" translate="yes" xml:space="preserve">
          <source>) returns its
definition in Kconfig format. This also works for symbols defined in multiple
locations.</source>
          <target state="translated">)는 Kconfig 형식으로 정의를 반환합니다. 이는 여러 위치에 정의 된 기호에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>,
and</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="3f6a83b3361f62114d3fc97cab70c8a063e07f8e" translate="yes" xml:space="preserve">
          <source>,
it supports showing all symbols (with invisible symbols in red) and jumping
directly to symbols. Symbol values can also be changed directly from the
jump-to dialog.</source>
          <target state="translated">, 모든 기호 (보이지 않는 기호가 빨간색으로 표시됨)를 표시하고 기호로 바로 이동할 수 있습니다. 기호 값은 이동 대화 상자에서 직접 변경할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="010511af4781aabbbeeff25a0d1baaab08eac900" translate="yes" xml:space="preserve">
          <source>, allowing</source>
          <target state="translated">, 허용</target>
        </trans-unit>
        <trans-unit id="00b1f86d7c98ca6f78264800ea0ef033fcb9deb0" translate="yes" xml:space="preserve">
          <source>, allowing them to be tested with</source>
          <target state="translated">, 테스트 가능</target>
        </trans-unit>
        <trans-unit id="81b075697522c7d1e86bbe64b5ab41f8b6df6714" translate="yes" xml:space="preserve">
          <source>, and so didn&amp;rsquo;t have them available.
Blame me for any workarounds.</source>
          <target state="translated">, 그래서 사용할 수 없었습니다. 해결 방법에 대해 나를 비난하십시오.</target>
        </trans-unit>
        <trans-unit id="360d9959456077660b52363c3b03ccb85c00025d" translate="yes" xml:space="preserve">
          <source>, but dumps the tree as it would appear in</source>
          <target state="translated">, 그러나 표시되는대로 트리를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="538663003425593c7c82f94319e6bc9574be5149" translate="yes" xml:space="preserve">
          <source>, including values. This can be handy for visually diffing between</source>
          <target state="translated">, 값 포함. 이것은 시각적으로 비교하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9240b8c6036d46c411514e992009f685174f9a7" translate="yes" xml:space="preserve">
          <source>, so building will normally not be affected by
having an outdated configuration.</source>
          <target state="translated">, 따라서 건물은 일반적으로 구식 구성의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f978338fdd894f0e22a1293fe39f2b11cd657d9d" translate="yes" xml:space="preserve">
          <source>, to make it
possible to distinguish them from symbol references.</source>
          <target state="translated">, 기호 참조와 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf7a216a0a32195b7b07cef641850ea56ac29988" translate="yes" xml:space="preserve">
          <source>, warnings will be generated
for all assignments to undefined symbols within</source>
          <target state="translated">, 내 정의되지 않은 기호에 대한 모든 할당에 대해 경고가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="df72d0f81e7dbc13456c5b8fab840ecd2f35192d" translate="yes" xml:space="preserve">
          <source>, warnings will be generated for all
references to undefined symbols within Kconfig files. The only gotcha is
that all hex literals must be prefixed with</source>
          <target state="translated">, Kconfig 파일 내의 정의되지 않은 기호에 대한 모든 참조에 대해 경고가 생성됩니다. 유일한 문제는 모든 16 진수 리터럴에 접두사를 붙여야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c6575ea40a37c7da5eca4c88031ba90146e44580" translate="yes" xml:space="preserve">
          <source>, where it doesn&amp;rsquo;t have time to warm up since
the scripts are run via</source>
          <target state="translated">, 스크립트가 다음을 통해 실행되므로 워밍업 할 시간이 없습니다.</target>
        </trans-unit>
        <trans-unit id="20dbf03835e94280dea8fe17b25a09cf0f9b5013" translate="yes" xml:space="preserve">
          <source>, which is backwards-compatible.
A warning is printed by default if</source>
          <target state="translated">, 이전 버전과 호환됩니다. 다음과 같은 경우 기본적으로 경고가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="dbc6e033f0805e4e38ded41b0fda92e7ba45a47d" translate="yes" xml:space="preserve">
          <source>--config-out &amp;lt;filename&amp;gt;</source>
          <target state="translated">--config-out &amp;lt;파일 이름&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">--도움</target>
        </trans-unit>
        <trans-unit id="786550f3f8053d0c40c4ebb9c21a8a4f3b32f764" translate="yes" xml:space="preserve">
          <source>--sync-deps</source>
          <target state="translated">--sync-deps</target>
        </trans-unit>
        <trans-unit id="75931c0179e17586cfdb0af90fc84c0f7c5481b7" translate="yes" xml:space="preserve">
          <source>--user</source>
          <target state="translated">--사용자</target>
        </trans-unit>
        <trans-unit id="e50e1ca49e94ececb574f4895be5fc5ade2539a9" translate="yes" xml:space="preserve">
          <source>-valued</source>
          <target state="translated">가치</target>
        </trans-unit>
        <trans-unit id="55b84beaebd3dd9ce3fdbc2382374c7a228132cc" translate="yes" xml:space="preserve">
          <source>-w</source>
          <target state="translated">-w</target>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="7fb766b1d57d9d4fe3e9ec8ac6d9710a1e8592aa" translate="yes" xml:space="preserve">
          <source>. It&amp;rsquo;s deliberately kept as simple as possible to demonstrate just the core concepts.</source>
          <target state="translated">. 핵심 개념 만 보여주기 위해 의도적으로 최대한 단순하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="04c6a6c73505043c3419c59385e19567ee884d4d" translate="yes" xml:space="preserve">
          <source>. Note that the Linux kernel Kconfigs are absolutely massive
(over 14k symbols for x86) compared to most projects, and also have overhead
from running shell commands via the Kconfig preprocessor.</source>
          <target state="translated">. Linux 커널 Kconfig는 대부분의 프로젝트에 비해 절대적으로 방대하며 (x86의 경우 14k 기호 이상) Kconfig 전처리기를 통해 셸 명령을 실행하는 데 따른 오버 헤드도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ab2728286900dc1aa35ecacb752bc405b221e1a" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/issues/77&quot;&gt;this issue&lt;/a&gt;.</source>
          <target state="translated">. &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/issues/77&quot;&gt;이 문제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb2a149a8d99e9d4125eb18ecddab0e88e129c58" translate="yes" xml:space="preserve">
          <source>. The configuration is saved as</source>
          <target state="translated">. 구성은 다음으로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="e174496c826fb519825c5473b4d11f5175914623" translate="yes" xml:space="preserve">
          <source>. The image files
can be found in the &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/tree/screenshots/guiconfig&quot;&gt;screenshots&lt;/a&gt;
branch.</source>
          <target state="translated">. 이미지 파일은 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/tree/screenshots/guiconfig&quot;&gt;스크린 샷&lt;/a&gt; 분기 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e857b36b858e9da5ff49285cdf68fafa75df9299" translate="yes" xml:space="preserve">
          <source>. To use separate GIF files instead, change</source>
          <target state="translated">. 대신 별도의 GIF 파일을 사용하려면</target>
        </trans-unit>
        <trans-unit id="3e63a20fd24d82d9e81a5f39ccdc550b85a2182a" translate="yes" xml:space="preserve">
          <source>.config</source>
          <target state="translated">.config</target>
        </trans-unit>
        <trans-unit id="518cd79d8924938ab76fddf7a201d1d552fd8c4d" translate="yes" xml:space="preserve">
          <source>.config.old</source>
          <target state="translated">.config.old</target>
        </trans-unit>
        <trans-unit id="79854e52752d02d886cecd248ab4073d810e3072" translate="yes" xml:space="preserve">
          <source>0X</source>
          <target state="translated">0X</target>
        </trans-unit>
        <trans-unit id="1a349dcc540a3978584510d982075f838b17cd6d" translate="yes" xml:space="preserve">
          <source>0x</source>
          <target state="translated">0x</target>
        </trans-unit>
        <trans-unit id="15d7956aa387be46d7c706f3317aaaa9fea8fc89" translate="yes" xml:space="preserve">
          <source>2&amp;gt;/dev/null</source>
          <target state="translated">2&amp;gt; / dev / null</target>
        </trans-unit>
        <trans-unit id="5afb19e7c72296c9ffe0f407ac0d49ef9652c194" translate="yes" xml:space="preserve">
          <source>: If set to</source>
          <target state="translated">: 설정된 경우</target>
        </trans-unit>
        <trans-unit id="72cd84897c5c5179c2c84e335d7b326e86ebaeee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#installation&quot;&gt;Install&lt;/a&gt; the library and the utilities.</source>
          <target state="translated">&lt;a href=&quot;#installation&quot;&gt;&lt;/a&gt;라이브러리와 유틸리티를 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="5b0812f0097a6f0087f5dedd309ab1126d2d0046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://git.denx.de/?p=u-boot.git;a=blob;f=tools/genboardscfg.py;hb=HEAD&quot;&gt;genboardscfg.py&lt;/a&gt; from &lt;a href=&quot;http://www.denx.de/wiki/U-Boot&quot;&gt;Das U-Boot&lt;/a&gt; generates some sort of legacy board database by pulling information from a newly added Kconfig-based configuration system (as far as I understand it :).</source>
          <target state="translated">&lt;a href=&quot;http://git.denx.de/?p=u-boot.git;a=blob;f=tools/genboardscfg.py;hb=HEAD&quot;&gt;genboardscfg.py&lt;/a&gt; 에서 &lt;a href=&quot;http://www.denx.de/wiki/U-Boot&quot;&gt;다스 U-부팅이&lt;/a&gt; 새로 추가 kconfig를 기반 구성 시스템의 정보를 당겨 기존 보드 데이터베이스의 일종 (나는 :) 이해까지로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f67bdfeec4ef705d4b731b16ba96f951cf39887f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://semver.org/&quot;&gt;Semantic versioning&lt;/a&gt; is used. There&amp;rsquo;s been ten small
changes to the behavior of the API, a Windows packaging change, and a hashbang
change to use</source>
          <target state="translated">&lt;a href=&quot;http://semver.org/&quot;&gt;시맨틱 버전 관리&lt;/a&gt; 가 사용됩니다. API 동작, Windows 패키징 변경 및 사용할 해시 뱅 변경에 10 가지 작은 변경 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fccad36acf2f1d0b0783b745d6531a8d0c9359e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/dubiousjim/5638961&quot;&gt;kconfig-diff.py&lt;/a&gt; &amp;ndash; a script by &lt;a href=&quot;https://github.com/dubiousjim&quot;&gt;dubiousjim&lt;/a&gt; that compares kernel configurations.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/dubiousjim/5638961&quot;&gt;kconfig-diff.py&lt;/a&gt; &amp;ndash; 커널 구성을 비교 하는 &lt;a href=&quot;https://github.com/dubiousjim&quot;&gt;dubiousjim&lt;/a&gt; 의 스크립트 .</target>
        </trans-unit>
        <trans-unit id="46e479ae520880516c850d1474dd306e8b677774" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git.busybox.net/buildroot/tree/support/scripts/gen-manual-lists.py?id=5676a2deea896f38123b99781da0a612865adeb0&quot;&gt;gen-manual-lists.py&lt;/a&gt; generated listings for an appendix in the &lt;a href=&quot;https://buildroot.org&quot;&gt;Buildroot&lt;/a&gt; manual. (The listing has since been removed.)</source>
          <target state="translated">&lt;a href=&quot;https://git.busybox.net/buildroot/tree/support/scripts/gen-manual-lists.py?id=5676a2deea896f38123b99781da0a612865adeb0&quot;&gt;gen-manual-lists.py&lt;/a&gt; 는 &lt;a href=&quot;https://buildroot.org&quot;&gt;Buildroot&lt;/a&gt; 매뉴얼 의 부록에 대한 목록을 생성했습니다 . (이후 목록이 삭제되었습니다.)</target>
        </trans-unit>
        <trans-unit id="01c8b2fc420e753b015796bcc2c6bafd7ff7a65d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/CoryXie/SConf&quot;&gt;SConf&lt;/a&gt; builds an interactive configuration interface (like</source>
          <target state="translated">&lt;a href=&quot;https://github.com/CoryXie/SConf&quot;&gt;SConf&lt;/a&gt; 는 대화 형 구성 인터페이스 (예 :</target>
        </trans-unit>
        <trans-unit id="4780248fc614da769c02ac8d5e92600282181903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/RomaVis/pymenuconfig&quot;&gt;pymenuconfig&lt;/a&gt;, built by &lt;a href=&quot;https://github.com/RomaVis&quot;&gt;RomaVis&lt;/a&gt;, is an older portable Python 2/3 TkInter
menuconfig implementation.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/RomaVis/pymenuconfig&quot;&gt;RomaVis&lt;/a&gt; 에 의해 구축 된 &lt;a href=&quot;https://github.com/RomaVis&quot;&gt;pymenuconfig&lt;/a&gt; 는 이전의 휴대용 Python 2/3 TkInter menuconfig 구현입니다.</target>
        </trans-unit>
        <trans-unit id="ee1b11cf7e3870f94cac78161c2247c59ecd3e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/espressif/esp-idf/blob/master/docs/gen-kconfig-doc.py&quot;&gt;gen_kconfig_doc.py&lt;/a&gt; from the &lt;a href=&quot;https://github.com/espressif/esp-idf&quot;&gt;esp-idf&lt;/a&gt; project generates documentation from Kconfig files.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/espressif/esp-idf/blob/master/docs/gen-kconfig-doc.py&quot;&gt;gen_kconfig_doc.py&lt;/a&gt; 로부터 &lt;a href=&quot;https://github.com/espressif/esp-idf&quot;&gt;ESP-IDF의&lt;/a&gt; 프로젝트는 kconfig를 파일에서 문서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2a63b0ae1bcc909c3cc1dcb675686e0434716ef2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/espressif/esp-idf/tree/master/tools/kconfig_new&quot;&gt;CMake and IDE integration&lt;/a&gt; from
the ESP-IDF project, via a configuration server program.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/espressif/esp-idf/tree/master/tools/kconfig_new&quot;&gt;&lt;/a&gt;구성 서버 프로그램을 통해 ESP-IDF 프로젝트에서 CMake 및 IDE 통합 .</target>
        </trans-unit>
        <trans-unit id="1c01dcf1ce8bc2a167ca212bb5c6cadf543c33ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/google/syzkaller/blob/master/dashboard/config/kconfiglib-merge-usb-configs.py&quot;&gt;A script for turning on USB-related options&lt;/a&gt;,
from the &lt;a href=&quot;https://github.com/google/syzkaller&quot;&gt;syzkaller&lt;/a&gt; project.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/google/syzkaller/blob/master/dashboard/config/kconfiglib-merge-usb-configs.py&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/google/syzkaller&quot;&gt;syzkaller&lt;/a&gt; 프로젝트 에서 USB 관련 옵션을 켜는 스크립트입니다 .</target>
        </trans-unit>
        <trans-unit id="16d9fce12a57c5b658ad2bdb5f26a92a7ea82c7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/projectacrn/acrn-hypervisor/tree/master/scripts/kconfig&quot;&gt;Various utilities&lt;/a&gt;
from the &lt;a href=&quot;https://projectacrn.org/&quot;&gt;ACRN&lt;/a&gt; project</source>
          <target state="translated">&lt;a href=&quot;https://github.com/projectacrn/acrn-hypervisor/tree/master/scripts/kconfig&quot;&gt;다양한 유틸리티&lt;/a&gt; 로부터 &lt;a href=&quot;https://projectacrn.org/&quot;&gt;ACRN의&lt;/a&gt; 프로젝트</target>
        </trans-unit>
        <trans-unit id="af778690bba77e7898ee9c241d15f6d2d3aa0d1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/eval_expr.py&quot;&gt;eval_expr.py&lt;/a&gt; evaluates an expression in the context of a configuration.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/eval_expr.py&quot;&gt;eval_expr.py&lt;/a&gt; 는 구성 컨텍스트에서 표현식을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="a521338beca973aad90c40097ee18f5342365325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/find_symbol.py&quot;&gt;find_symbol.py&lt;/a&gt; searches through expressions to find references to a symbol, also printing a &amp;ldquo;backtrace&amp;rdquo; with parents for each reference found.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/find_symbol.py&quot;&gt;find_symbol.py&lt;/a&gt; 는 기호에 대한 참조를 찾기 위해 표현식을 검색하고 발견 된 각 참조에 대해 상위와 함께 &quot;역 추적&quot;을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="09b5cb730b1874f427122eb065479f9fe4af3e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/help_grep.py&quot;&gt;help_grep.py&lt;/a&gt; searches for a string in all help texts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/help_grep.py&quot;&gt;help_grep.py&lt;/a&gt; 는 모든 도움말 텍스트에서 문자열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="dbf80fdfee6eb82602536e5c52b9ccaf353cccdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/list_undefined.py&quot;&gt;list_undefined.py&lt;/a&gt; finds references to symbols that are not defined by any architecture in the Linux kernel.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/list_undefined.py&quot;&gt;list_undefined.py&lt;/a&gt; 는 Linux 커널의 아키텍처에 의해 정의되지 않은 기호에 대한 참조를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="7ff8508a671e299eddee2e92304d5f00960819c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/menuconfig_example.py&quot;&gt;menuconfig_example.py&lt;/a&gt; implements a configuration interface that uses notation similar to</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/menuconfig_example.py&quot;&gt;menuconfig_example.py&lt;/a&gt; 는 다음과 유사한 표기법을 사용하는 구성 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="0e8d87c438a7afadfcf47484d4ad7eaa2c0e90b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/merge_config.py&quot;&gt;merge_config.py&lt;/a&gt; merges configuration fragments to produce a complete .config, similarly to</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/merge_config.py&quot;&gt;merge_config.py&lt;/a&gt; 는 구성 조각을 병합하여 완전한 .config를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="21b48d7cacf414ac992e53dfe471a02835866af1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/print_config_tree.py&quot;&gt;print_config_tree.py&lt;/a&gt; is similar to</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/print_config_tree.py&quot;&gt;print_config_tree.py&lt;/a&gt; 는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="a1eb888306859c20131ce5c7b92de639662c8bff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/print_tree.py&quot;&gt;print_tree.py&lt;/a&gt; prints a tree of all configuration items.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/print_tree.py&quot;&gt;print_tree.py&lt;/a&gt; 는 모든 구성 항목의 트리를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="a494a448742494ebbde1aad8b149068bdb23ff5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/guiconfig.py&quot;&gt;guiconfig.py&lt;/a&gt; is a
graphical configuration interface written in &lt;a href=&quot;https://docs.python.org/3/library/tkinter.html&quot;&gt;Tkinter&lt;/a&gt;. Like</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/guiconfig.py&quot;&gt;guiconfig.py&lt;/a&gt; 는 &lt;a href=&quot;https://docs.python.org/3/library/tkinter.html&quot;&gt;Tkinter로&lt;/a&gt; 작성된 그래픽 구성 인터페이스입니다 . 처럼</target>
        </trans-unit>
        <trans-unit id="db6570119bda5babec328e9d52c621b6e58bc50a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/menuconfig.py&quot;&gt;menuconfig.py&lt;/a&gt;
is a terminal-based configuration interface implemented using the standard
Python</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/menuconfig.py&quot;&gt;menuconfig.py&lt;/a&gt; 는 표준 Python을 사용하여 구현 된 터미널 기반 구성 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="44e3808854db571f883aafc10eef4e22fccde18a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/zephyrproject-rtos/ci-tools/blob/master/scripts/check_compliance.py&quot;&gt;Various automated checks&lt;/a&gt;,
including a check for references to undefined Kconfig symbols in source code.
See the</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zephyrproject-rtos/ci-tools/blob/master/scripts/check_compliance.py&quot;&gt;&lt;/a&gt;소스 코드에서 정의되지 않은 Kconfig 기호에 대한 참조 확인을 포함하여 다양한 자동 확인 . 참조</target>
        </trans-unit>
        <trans-unit id="63905f7cde309054284b876625339ee42cdeae2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/blob/master/doc/scripts/genrest.py&quot;&gt;genrest.py&lt;/a&gt;
generates a Kconfig symbol cross-reference, which can be viewed &lt;a href=&quot;http://docs.zephyrproject.org/reference/kconfig/index.html&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/blob/master/doc/scripts/genrest.py&quot;&gt;genrest.py&lt;/a&gt; 는 &lt;a href=&quot;http://docs.zephyrproject.org/reference/kconfig/index.html&quot;&gt;여기에서&lt;/a&gt; 볼 수있는 Kconfig 기호 상호 참조를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="df823604d7bbac4dce02ff008d9af7445705fbf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/blob/master/scripts/kconfig/kconfig.py&quot;&gt;kconfig.py&lt;/a&gt;
from the &lt;a href=&quot;https://www.zephyrproject.org/&quot;&gt;Zephyr&lt;/a&gt; project handles</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/blob/master/scripts/kconfig/kconfig.py&quot;&gt;kconfig.py&lt;/a&gt; 으로부터 &lt;a href=&quot;https://www.zephyrproject.org/&quot;&gt;서풍의&lt;/a&gt; 프로젝트 핸들</target>
        </trans-unit>
        <trans-unit id="3af74ad029c53775d027996c9c0017d2e5656b4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypy.org/&quot;&gt;pypy&lt;/a&gt; works too, and is much speedier for everything except</source>
          <target state="translated">&lt;a href=&quot;https://pypy.org/&quot;&gt;pypy도&lt;/a&gt; 작동하며</target>
        </trans-unit>
        <trans-unit id="e41768a7618d44c023523c24fc50b0fd88d8832a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;There is now also a show-help mode that shows the help text of the currently
selected symbol in the help window at the bottom.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이제 하단의 도움말 창에 현재 선택된 기호의 도움말 텍스트를 표시하는 도움말 표시 모드도 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe8b059a71c651fd3a65e85daea7a135eeb8bef4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generates more warnings than the C implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C 구현보다 더 많은 경고를 생성합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc0f02ef8ae76e38cc9e8885df8f18099786b9fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Implement incremental builds&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;증분 빌드 구현&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93ae52ade8bad49ba5d61c066c17e9ffa88b6de6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inspect expressions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;표현식 검사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f410da7c5e57a1907dfb47ed964a3b596139fae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inspect symbols&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;기호 검사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5878639587cf67536d7d122f170c230fba88da2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inspect the menu tree&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;메뉴 트리 검사&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37501428d70d2f0011a7bb88d8b6f31958212043" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internals that (mostly) mirror the C implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;(대부분) C 구현을 반영하는 내부&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dd6cc22a0b8f9333bb5bbb6d5411c8872a15bfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: Forgetting to apply the Makefile patch will cause some tests that compare generated configurations to fail&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : Makefile 패치를 적용하지 않으면 생성 된 구성을 비교하는 일부 테스트가 실패합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2433800c2be91ef2990ac6354551424e7e54717" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: The test suite overwrites .config in the kernel root, so make sure to back it up.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : 테스트 스위트는 커널 루트의 .config를 덮어 쓰므로 백업해야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9862e3fdb2b0aa61bb79b194fe3923a552428a6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not horribly slow despite being a pure Python implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;순수한 Python 구현 임에도 불구하고 끔찍하게 느리지 않음&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eadb4cb23911f3c593254ee96d6d8e202b66517" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you install Kconfiglib with</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 다음을 사용하여 Kconfiglib를 설치하는 경우</target>
        </trans-unit>
        <trans-unit id="190214877917979693f5c7f633eb837a1784ddde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Programmatically get and set symbol values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;프로그래밍 방식으로 기호 값 가져 오기 및 설정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5cf499829c90897d13bb193e5f49d0cf6cf4e3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Read and write .config and defconfig files&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;.config 및 defconfig 파일 읽기 및 쓰기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91b6984eba654c2a09ed01681359e0727c07bc06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Robust and highly compatible with the C Kconfig tools&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C Kconfig 도구와 견고하고 호환성이 높습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51d082a44c9fd46d5ab84fb38c74386407b5248e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single-file implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단일 파일 구현&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="291e4682012027c68d5fe9ab32fbafe61969c3a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unicode support&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;유니 코드 지원&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e09bf7977f9edfe9282b6b802518ff3be9fd511" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows support&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows 지원&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7934496f975092ea336f26f041df4f9eb6e72569" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Write C headers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C 헤더 작성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c47c17cbb062c4dde3ef12e5b1dd9bb4802ef05b" translate="yes" xml:space="preserve">
          <source>&lt;tt&gt;windows-curses&lt;/tt&gt; is no longer automatically installed on Windows</source>
          <target state="translated">&lt;tt&gt;windows-curses&lt;/tt&gt; 는 더 이상 Windows에 자동으로 설치되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e8c1d6c16be1d88d6377f226731fa95205ef7e4c" translate="yes" xml:space="preserve">
          <source>A comprehensive suite of selftests is included as well.</source>
          <target state="translated">포괄적 인 자체 테스트 제품군도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d092b6edb6c75f773c573797b5d5fa267fb642bd" translate="yes" xml:space="preserve">
          <source>A flexible Python Kconfig implementation</source>
          <target state="translated">유연한 Python Kconfig 구현</target>
        </trans-unit>
        <trans-unit id="28c6577992119970460e9cbbd553f44a7408f1c9" translate="yes" xml:space="preserve">
          <source>A good starting point for learning the library is to read the module docstring
(which you could also just read directly at the beginning of &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt;). It
gives an introduction to symbol values, the menu tree, and expressions.</source>
          <target state="translated">라이브러리를 배우기위한 좋은 출발점은 모듈 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;독 스트링&lt;/a&gt; 을 읽는 것 입니다 ( kconfiglib.py 시작 부분에서 직접 읽을 수도 있습니다 ). 기호 값, 메뉴 트리 및 표현식에 대한 소개를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f8228150468850047f43ffcdad77d1d618785e59" translate="yes" xml:space="preserve">
          <source>A helpful</source>
          <target state="translated">도움이</target>
        </trans-unit>
        <trans-unit id="30291100b0910a827ac1b4437f0d39578e472b45" translate="yes" xml:space="preserve">
          <source>A lot of time is spent waiting around for</source>
          <target state="translated">많은 시간을 기다리며</target>
        </trans-unit>
        <trans-unit id="14b69f42a9efc8e88d87e877c1b071eddabcff96" translate="yes" xml:space="preserve">
          <source>A recent Python 3 version is recommended if you have a choice, as it&amp;rsquo;ll give
you better Unicode handling.</source>
          <target state="translated">더 나은 유니 코드 처리를 제공 할 수 있으므로 선택할 수있는 경우 최신 Python 3 버전을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="34781d1b3bf3460684f17062414d6474462742ad" translate="yes" xml:space="preserve">
          <source>A relative</source>
          <target state="translated">친척</target>
        </trans-unit>
        <trans-unit id="3dbc8afa8b42d0231498e90a066ea52830d20cf0" translate="yes" xml:space="preserve">
          <source>A separate</source>
          <target state="translated">분리 된</target>
        </trans-unit>
        <trans-unit id="8b365f23626cf641bfbdd157b43cb97615224c7f" translate="yes" xml:space="preserve">
          <source>Adding new configuration output formats should be relatively straightforward.
See the implementation of</source>
          <target state="translated">새로운 구성 출력 형식을 추가하는 것은 비교적 간단해야합니다. 구현보기</target>
        </trans-unit>
        <trans-unit id="af2a419e55fb7e5a47d2e0e3c7593d5277c08c58" translate="yes" xml:space="preserve">
          <source>After reading the module docstring, a good next step is to read the</source>
          <target state="translated">모듈 독 스트링을 읽은 후 좋은 다음 단계는</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">모두</target>
        </trans-unit>
        <trans-unit id="476af4cfe343e9fe26f9d3103f48675ac6f10a3a" translate="yes" xml:space="preserve">
          <source>All releases have a corresponding tag in the git repository, e.g.</source>
          <target state="translated">모든 릴리스에는 git 저장소에 해당 태그가 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="b77e0ae7c490559acdac95fbb3bcfd80151134c9" translate="yes" xml:space="preserve">
          <source>All warnings point out the location(s) in the</source>
          <target state="translated">모든 경고는</target>
        </trans-unit>
        <trans-unit id="4849678d8084e9c154f2dcbd17c4a759f0aad43d" translate="yes" xml:space="preserve">
          <source>Arch:</source>
          <target state="translated">아치:</target>
        </trans-unit>
        <trans-unit id="f7df1ab8cd86f2262629532379dc6cdc0dd2fdf2" translate="yes" xml:space="preserve">
          <source>Before writing a header file or other configuration output, Kconfiglib
compares the old contents of the file against the new contents. If there&amp;rsquo;s
no change, the write is skipped. This avoids updating file metadata like the
modification time, and might save work depending on your build setup.</source>
          <target state="translated">헤더 파일이나 다른 구성 출력을 쓰기 전에 Kconfiglib는 파일의 이전 내용을 새 내용과 비교합니다. 변경 사항이 없으면 쓰기를 건너 뜁니다. 이렇게하면 수정 시간과 같은 파일 메타 데이터 업데이트가 방지되고 빌드 설정에 따라 작업이 절약 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0682be26339d58114b3768892eeb3707a1b24e0c" translate="yes" xml:space="preserve">
          <source>Choice</source>
          <target state="translated">선택</target>
        </trans-unit>
        <trans-unit id="5ac98315ac17f9562ac2d55fe8c92b5aa0d799b4" translate="yes" xml:space="preserve">
          <source>Clear Linux:</source>
          <target state="translated">명확한 Linux :</target>
        </trans-unit>
        <trans-unit id="84c7e227f3421fd164651443c6c954eb12764b68" translate="yes" xml:space="preserve">
          <source>Dependency loop with recent linux-next kernels</source>
          <target state="translated">최신 Linux-Next 커널과의 종속성 루프</target>
        </trans-unit>
        <trans-unit id="d5f0ce2e7b87819ff325a4e59232851d282dead8" translate="yes" xml:space="preserve">
          <source>Despite being part of the Python standard library,</source>
          <target state="translated">Python 표준 라이브러리의 일부 임에도 불구하고</target>
        </trans-unit>
        <trans-unit id="cd1a166b9410cf77a2f58d05c7b0bbbf60e3b891" translate="yes" xml:space="preserve">
          <source>Documentation for other modules can be viewed in the same way (though a plain</source>
          <target state="translated">다른 모듈에 대한 문서는 동일한 방식으로 볼 수 있습니다 (비록</target>
        </trans-unit>
        <trans-unit id="2e932a7f404db8f915ddd15663ef9dc2cc442674" translate="yes" xml:space="preserve">
          <source>Due to Kconfig semantics, simply loading an old</source>
          <target state="translated">Kconfig 의미론으로 인해 단순히 오래된</target>
        </trans-unit>
        <trans-unit id="68ea1b169f9447fff3a2d5cb8e4fca461c2b31a4" translate="yes" xml:space="preserve">
          <source>Environment variables are expanded directly in e.g.</source>
          <target state="translated">환경 변수는 예를 들어 직접 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="2b084c866174eb0df2c61e12ca2cf712de70b447" translate="yes" xml:space="preserve">
          <source>Example scripts</source>
          <target state="translated">예제 스크립트</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="ea72e4d99fb90bdc3702aeff5c3b457fc4e6ff40" translate="yes" xml:space="preserve">
          <source>Expressions use a simple tuple-based format that can be processed manually
if needed. Expression printing and evaluation functions are provided,
implemented with public APIs.</source>
          <target state="translated">식은 필요한 경우 수동으로 처리 할 수있는 간단한 튜플 기반 형식을 사용합니다. 식 인쇄 및 평가 기능이 제공되며 공용 API로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="56bfac64ed43b70b1953cfac2c135560f9511d1c" translate="yes" xml:space="preserve">
          <source>Fedora:</source>
          <target state="translated">페도라 :</target>
        </trans-unit>
        <trans-unit id="deb20f23cedd1a2d9de17b9fabdac4a1547079a7" translate="yes" xml:space="preserve">
          <source>For HTML output, add</source>
          <target state="translated">HTML 출력의 경우</target>
        </trans-unit>
        <trans-unit id="810ce15aaa7fd4b1e57a545f205d636e6e3bc585" translate="yes" xml:space="preserve">
          <source>For long-running jobs, &lt;a href=&quot;https://pypy.org/&quot;&gt;PyPy&lt;/a&gt; gives a big performance
boost. CPython is faster for short-running jobs as PyPy needs some time to
warm up.</source>
          <target state="translated">장기 실행 작업의 경우 &lt;a href=&quot;https://pypy.org/&quot;&gt;PyPy&lt;/a&gt; 는 성능을 크게 향상시킵니다. CPython은 PyPy가 워밍업하는 데 약간의 시간이 필요하므로 단기 실행 작업의 경우 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="794efae64c7c26ffd86e32d0b2b8cde32075b740" translate="yes" xml:space="preserve">
          <source>For more advanced projects, the</source>
          <target state="translated">고급 프로젝트의 경우</target>
        </trans-unit>
        <trans-unit id="932dc82a04bd8cc867d41f4c1cfd28dd25ade84f" translate="yes" xml:space="preserve">
          <source>Generate an initial configuration with e.g.</source>
          <target state="translated">예를 들어 초기 구성 생성</target>
        </trans-unit>
        <trans-unit id="f2ce5a26c8b6859c4dc030c70e17d49cda28a541" translate="yes" xml:space="preserve">
          <source>Generates the same warnings as the C implementation, plus additional ones.
Also detects dependency and</source>
          <target state="translated">C 구현과 동일한 경고와 추가 경고를 생성합니다. 또한 종속성을 감지하고</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="96047a65f7ab1a02c00ac400c9a769bf71662591" translate="yes" xml:space="preserve">
          <source>I did my best with the images, but some are definitely only art adjacent.
Touch-ups are welcome. :)</source>
          <target state="translated">나는 이미지로 최선을 다했지만 일부는 분명히 인접한 예술 일뿐입니다. 수정도 환영합니다. :)</target>
        </trans-unit>
        <trans-unit id="38289c53cda1e702088d3c274b67ea73460cdf4a" translate="yes" xml:space="preserve">
          <source>I sometimes see people add custom output formats, which is pretty
straightforward to do (see the implementations of</source>
          <target state="translated">나는 때때로 사람들이 사용자 정의 출력 형식을 추가하는 것을 봅니다. 이는 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="a14737ea817e23b59435980907b5ac81fe56e0c4" translate="yes" xml:space="preserve">
          <source>IS_ENABLED()</source>
          <target state="translated">사용 가능()</target>
        </trans-unit>
        <trans-unit id="e51b2988a4546a29f8c9c8ffe4b902ca00b40755" translate="yes" xml:space="preserve">
          <source>If you make use of this, you might want to pass</source>
          <target state="translated">이것을 사용하면 통과하고 싶을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="41fb10bf832524090b9ab05176d0ed5567a508f5" translate="yes" xml:space="preserve">
          <source>If you use</source>
          <target state="translated">당신이 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="3fdeb6ad6a1c82c0dd4294da58ea7018aef63a9d" translate="yes" xml:space="preserve">
          <source>Incremental building</source>
          <target state="translated">증분 건물</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="4df42371cb1b1f21e2427a3e46ea733293e00ce9" translate="yes" xml:space="preserve">
          <source>Installation for the Linux kernel</source>
          <target state="translated">Linux 커널 용 설치</target>
        </trans-unit>
        <trans-unit id="28d8f450cdfb0beb94e389d3eb2bf55f91ba5300" translate="yes" xml:space="preserve">
          <source>Installation with pip</source>
          <target state="translated">pip로 설치</target>
        </trans-unit>
        <trans-unit id="edbbcf2bd4c49478f757a2c4c0427b6fee50552b" translate="yes" xml:space="preserve">
          <source>Just drop</source>
          <target state="translated">그냥 드롭</target>
        </trans-unit>
        <trans-unit id="4257d42896048a836462e762f3f2fe2080a17f7a" translate="yes" xml:space="preserve">
          <source>KCONFIG_STRICT</source>
          <target state="translated">KCONFIG_STRICT</target>
        </trans-unit>
        <trans-unit id="af60f46580432126146d253e28e0604aa7b449b4" translate="yes" xml:space="preserve">
          <source>KCONFIG_WARN_UNDEF</source>
          <target state="translated">KCONFIG_WARN_UNDEF</target>
        </trans-unit>
        <trans-unit id="46bbb70fe7fbe7b766d1249e77565cce2f06a990" translate="yes" xml:space="preserve">
          <source>KCONFIG_WARN_UNDEF_ASSIGN</source>
          <target state="translated">KCONFIG_WARN_UNDEF_ASSIGN</target>
        </trans-unit>
        <trans-unit id="2057f42a28208d71eaa896e629b85f5660938f9f" translate="yes" xml:space="preserve">
          <source>Kconfig</source>
          <target state="translated">Kconfig</target>
        </trans-unit>
        <trans-unit id="6dac7fe743eb0eb59568f1381cc2b44c29f1e603" translate="yes" xml:space="preserve">
          <source>Kconfig extensions</source>
          <target state="translated">Kconfig 확장</target>
        </trans-unit>
        <trans-unit id="c571fa640f36676da24060a0860ea45c60d3eb0c" translate="yes" xml:space="preserve">
          <source>Kconfig.sync_deps()</source>
          <target state="translated">Kconfig.sync_deps ()</target>
        </trans-unit>
        <trans-unit id="2c2c360f161cf06dc13cc975975600d62f5af309" translate="yes" xml:space="preserve">
          <source>Kconfig.warn_assign_undef</source>
          <target state="translated">Kconfig.warn_assign_undef</target>
        </trans-unit>
        <trans-unit id="97eed837fc2883ba60f7e7e2086409cd067de095" translate="yes" xml:space="preserve">
          <source>KconfigCheck</source>
          <target state="translated">KconfigCheck</target>
        </trans-unit>
        <trans-unit id="565de48294ae413574108527432482c3b521c7f4" translate="yes" xml:space="preserve">
          <source>Kconfiglib also works well with the
&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;multiprocessing&lt;/a&gt;
module. No global state is kept.</source>
          <target state="translated">Kconfiglib는 &lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html&quot;&gt;다중 처리&lt;/a&gt; 모듈 에서도 잘 작동 합니다. 글로벌 상태가 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="728e3a9ffb9ad54e4972781704436c4b2744dfcb" translate="yes" xml:space="preserve">
          <source>Kconfiglib and all utilities run under both Python 2.7 and Python 3.2 and
later. The code mostly uses basic Python features and has no third-party
dependencies, so keeping it backwards-compatible is pretty low effort.</source>
          <target state="translated">Kconfiglib 및 모든 유틸리티는 Python 2.7 및 Python 3.2 이상에서 실행됩니다. 코드는 대부분 기본 Python 기능을 사용하고 타사 종속성이 없으므로 이전 버전과의 호환성을 유지하는 것은 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="2873827573894df95e9e967aab11d47870db81cc" translate="yes" xml:space="preserve">
          <source>Kconfiglib assumes the modules symbol is</source>
          <target state="translated">Kconfiglib는 모듈 기호가 다음과 같다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="4df08936402426f61904036fc97d52b3b850e112" translate="yes" xml:space="preserve">
          <source>Kconfiglib can do the following, among other things:</source>
          <target state="translated">Kconfiglib는 무엇보다도 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce41cb0848d1f4e8e55dc85b0df7ee034a19a89f" translate="yes" xml:space="preserve">
          <source>Kconfiglib comes with extensive documentation in the form of docstrings. To view it, run e.g.
the following command:</source>
          <target state="translated">Kconfiglib는 독 스트링 형태의 광범위한 문서와 함께 제공됩니다. 이를 보려면 예를 들어 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6114a468404ab3d297b7fa3b00f670fb838012e4" translate="yes" xml:space="preserve">
          <source>Kconfiglib implements the recently added &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-macro-language.rst&quot;&gt;Kconfig preprocessor&lt;/a&gt;.
For backwards compatibility, environment variables can be referenced both as</source>
          <target state="translated">Kconfiglib는 최근에 추가 된 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-macro-language.rst&quot;&gt;Kconfig 전처리기를&lt;/a&gt; 구현합니다 . 이전 버전과의 호환성을 위해 환경 변수는 다음과 같이 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4006d7ec02e90adecc1732b9c94cd022d23cbb8f" translate="yes" xml:space="preserve">
          <source>Kconfiglib is a &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-language.rst&quot;&gt;Kconfig&lt;/a&gt;
implementation in Python 2/3. It started out as a helper library, but now has a
enough functionality to also work well as a standalone Kconfig implementation
(including &lt;a href=&quot;#menuconfig-interfaces&quot;&gt;terminal and GUI menuconfig interfaces&lt;/a&gt;
and &lt;a href=&quot;#kconfig-extensions&quot;&gt;Kconfig extensions&lt;/a&gt;).</source>
          <target state="translated">Kconfiglib는 Python 2/3 의 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-language.rst&quot;&gt;Kconfig&lt;/a&gt; 구현입니다. 헬퍼 라이브러리로 시작했지만 이제는 독립형 Kconfig 구현 ( &lt;a href=&quot;#menuconfig-interfaces&quot;&gt;터미널 및 GUI menuconfig 인터페이스&lt;/a&gt; 및 &lt;a href=&quot;#kconfig-extensions&quot;&gt;Kconfig 확장 포함&lt;/a&gt; ) 에서도 잘 작동 할 수있는 충분한 기능이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adedba8cdfefe618100677811bf628ff21f586bb" translate="yes" xml:space="preserve">
          <source>Kconfiglib is available on &lt;a href=&quot;https://pypi.python.org/pypi/kconfiglib/&quot;&gt;PyPI&lt;/a&gt; and can be
installed with e.g.</source>
          <target state="translated">Kconfiglib는 &lt;a href=&quot;https://pypi.python.org/pypi/kconfiglib/&quot;&gt;PyPI&lt;/a&gt; 에서 사용할 수 있으며 다음과 함께 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac5e66f97309b588623131bb3ac6013ac9037f5f" translate="yes" xml:space="preserve">
          <source>Kconfiglib is especially speedy in cases where multiple</source>
          <target state="translated">Kconfiglib는 특히 여러</target>
        </trans-unit>
        <trans-unit id="17ad1f033c1bf375c2a088d74aba5841cfe9183c" translate="yes" xml:space="preserve">
          <source>Kconfiglib is used exclusively by e.g. the &lt;a href=&quot;https://www.zephyrproject.org/&quot;&gt;Zephyr&lt;/a&gt;, &lt;a href=&quot;https://github.com/espressif/esp-idf&quot;&gt;esp-idf&lt;/a&gt;, and &lt;a href=&quot;https://projectacrn.org/&quot;&gt;ACRN&lt;/a&gt; projects. It is also used for many small helper
scripts in various projects.</source>
          <target state="translated">Kconfiglib는 &lt;a href=&quot;https://www.zephyrproject.org/&quot;&gt;Zephyr&lt;/a&gt; , &lt;a href=&quot;https://github.com/espressif/esp-idf&quot;&gt;esp-idf&lt;/a&gt; 및 &lt;a href=&quot;https://projectacrn.org/&quot;&gt;ACRN&lt;/a&gt; 프로젝트 에서만 독점적으로 사용됩니다 . 다양한 프로젝트의 많은 작은 도우미 스크립트에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a58cba880cc79416e27c786c65fd63665c157b7" translate="yes" xml:space="preserve">
          <source>Let me know if you need proper</source>
          <target state="translated">적절한 것이 필요하면 알려주세요</target>
        </trans-unit>
        <trans-unit id="fd70e598fcf927041c896f6dc4b87e917b2286bf" translate="yes" xml:space="preserve">
          <source>Library documentation</source>
          <target state="translated">도서관 문서</target>
        </trans-unit>
        <trans-unit id="1ca30982b1bbf9fa6a34598686144ccd0b751409" translate="yes" xml:space="preserve">
          <source>Library features</source>
          <target state="translated">라이브러리 기능</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">모듈</target>
        </trans-unit>
        <trans-unit id="08cad249a9bf9e30cfb3069ef8526ea7341e3562" translate="yes" xml:space="preserve">
          <source>Manual installation</source>
          <target state="translated">수동 설치</target>
        </trans-unit>
        <trans-unit id="0514fabc68b6215f0bf12876a216355b77ad1b04" translate="yes" xml:space="preserve">
          <source>MenuNode</source>
          <target state="translated">MenuNode</target>
        </trans-unit>
        <trans-unit id="37dbf990c1c87aea4287da9d1e9d4e4f65e97e9f" translate="yes" xml:space="preserve">
          <source>Menuconfig interfaces</source>
          <target state="translated">Menuconfig 인터페이스</target>
        </trans-unit>
        <trans-unit id="be54d9c5dfaa44255934cf01bf2e836275648b07" translate="yes" xml:space="preserve">
          <source>Microsoft Windows is supported.</source>
          <target state="translated">Microsoft Windows가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="34c808d0a63f277e04fb23a5f76cc83d0a3e024b" translate="yes" xml:space="preserve">
          <source>News</source>
          <target state="translated">뉴스</target>
        </trans-unit>
        <trans-unit id="aa1fdb8cf9a9ddd8814c5f600fb555fd7e12d800" translate="yes" xml:space="preserve">
          <source>Normally,</source>
          <target state="translated">일반적으로</target>
        </trans-unit>
        <trans-unit id="801f20d2853cf76828cf7b21b427bf0f139443a4" translate="yes" xml:space="preserve">
          <source>Note: See &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/issues/47&quot;&gt;this issue&lt;/a&gt; if
you run into a &amp;ldquo;macro expanded to blank string&amp;rdquo; error with kernel 4.18+.</source>
          <target state="translated">참고 : 커널 4.18+에서 &quot;빈 문자열로 확장 된 매크로&quot;오류가 발생하는 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/issues/47&quot;&gt;경우이 문제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">노트</target>
        </trans-unit>
        <trans-unit id="070cd58f8a45e0c3f2519c5c9578d86dba28dbb3" translate="yes" xml:space="preserve">
          <source>Nothing Linux-specific is used. Universal newlines mode is used for both
Python 2 and Python 3.</source>
          <target state="translated">Linux 전용은 사용되지 않습니다. 범용 줄 바꿈 모드는 Python 2와 Python 3 모두에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7949590a9d76730e3477f4526e42bc1aee78382b" translate="yes" xml:space="preserve">
          <source>Originally, Kconfiglib was used in chapter 4 of my &lt;a href=&quot;http://liu.diva-portal.org/smash/get/diva2:473038/FULLTEXT01.pdf&quot;&gt;master&amp;rsquo;s thesis&lt;/a&gt; to automatically generate a &amp;ldquo;minimal&amp;rdquo; kernel for a given system. Parts of it bother me a bit now, but that&amp;rsquo;s how it goes with old work.</source>
          <target state="translated">원래, Kconfiglib는 주어진 시스템에 대한 &quot;최소한&quot;커널을 자동으로 생성하기 위해 내 &lt;a href=&quot;http://liu.diva-portal.org/smash/get/diva2:473038/FULLTEXT01.pdf&quot;&gt;석사 논문의&lt;/a&gt; 4 장에서 사용되었습니다 . 그것의 일부는 지금 나를 조금 괴롭히지 만 그것이 오래된 작업과 함께하는 방식입니다.</target>
        </trans-unit>
        <trans-unit id="14be7a9cc678ff8d2acac3f8d22e39b9c8a4df32" translate="yes" xml:space="preserve">
          <source>Other features</source>
          <target state="translated">다른 기능들</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="09bd6a353a7bb8a33e37cfee71ada9fc9ce37d89" translate="yes" xml:space="preserve">
          <source>PATH</source>
          <target state="translated">통로</target>
        </trans-unit>
        <trans-unit id="7ff1380a605f76a574315fc414f1be9f149f2702" translate="yes" xml:space="preserve">
          <source>Please tell me if something is unclear or can be explained better.</source>
          <target state="translated">불분명하거나 더 잘 설명 할 수있는 것이 있으면 알려주세요.</target>
        </trans-unit>
        <trans-unit id="db86ff244c80163320e922c8983bab3ff40c9cfc" translate="yes" xml:space="preserve">
          <source>Preprocessor user functions can be defined in Python, which makes it simple
to integrate information from existing Python tools into Kconfig (e.g. to
have Kconfig symbols depend on hardware information stored in some other
format).</source>
          <target state="translated">전 처리기 사용자 함수는 Python에서 정의 할 수 있으므로 기존 Python 도구의 정보를 Kconfig로 간단하게 통합 할 수 있습니다 (예 : Kconfig 기호가 다른 형식으로 저장된 하드웨어 정보에 의존하도록 함).</target>
        </trans-unit>
        <trans-unit id="40b46d39b65dc865b0248784c407d46bcc3a8a32" translate="yes" xml:space="preserve">
          <source>Printing a symbol or other item (which calls</source>
          <target state="translated">기호 또는 기타 항목 인쇄 (</target>
        </trans-unit>
        <trans-unit id="ff135398d75e13811e6ebf82a16b2815fa64bd33" translate="yes" xml:space="preserve">
          <source>Python version compatibility (2.7/3.2+)</source>
          <target state="translated">Python 버전 호환성 (2.7 / 3.2 +)</target>
        </trans-unit>
        <trans-unit id="09be0cc4ab7ed6d01e270b08bfbebf40a961b4b4" translate="yes" xml:space="preserve">
          <source>Rarely, the output from the C tools is changed slightly (most recently due to a
&lt;a href=&quot;https://www.spinics.net/lists/linux-kbuild/msg17074.html&quot;&gt;change&lt;/a&gt; I added).
If you get test suite failures, try running the test suite again against the
&lt;a href=&quot;https://www.kernel.org/doc/man-pages/linux-next.html&quot;&gt;linux-next tree&lt;/a&gt;,
which has all the latest changes. I will make it clear if any
non-backwards-compatible changes appear.</source>
          <target state="translated">드물게 C 도구의 출력이 약간 변경됩니다 (가장 최근에 추가 한 &lt;a href=&quot;https://www.spinics.net/lists/linux-kbuild/msg17074.html&quot;&gt;변경 사항&lt;/a&gt; 으로 인해 ). 테스트 스위트 실패 가 발생하면 모든 최신 변경 사항이 있는 &lt;a href=&quot;https://www.kernel.org/doc/man-pages/linux-next.html&quot;&gt;linux-next tree&lt;/a&gt; 에 대해 테스트 스위트를 다시 실행 해보십시오 . 이전 버전과 호환되지 않는 변경 사항이 나타나는지 명확히하겠습니다.</target>
        </trans-unit>
        <trans-unit id="02fb6098c6ce54052e599149255e481880e285e5" translate="yes" xml:space="preserve">
          <source>Real-world examples</source>
          <target state="translated">실제 사례</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">운영</target>
        </trans-unit>
        <trans-unit id="e38883357fe5dfa1b06f4ae79bc2d3c5e633ddac" translate="yes" xml:space="preserve">
          <source>Running the</source>
          <target state="translated">실행</target>
        </trans-unit>
        <trans-unit id="58fabfa70811950fc1a8c6e0d56faec87e4e08cb" translate="yes" xml:space="preserve">
          <source>Sample</source>
          <target state="translated">견본</target>
        </trans-unit>
        <trans-unit id="55909dc14634d4bdfda5f1070974e3d6949ad5bd" translate="yes" xml:space="preserve">
          <source>Sample &lt;tt&gt;make iscriptconfig&lt;/tt&gt; session</source>
          <target state="translated">샘플 &lt;tt&gt;make iscriptconfig&lt;/tt&gt; 세션</target>
        </trans-unit>
        <trans-unit id="4b238fda32c5b4277e859a2c4b495c1e5f3e0e6a" translate="yes" xml:space="preserve">
          <source>Screenshot below, with show-all mode enabled and the jump-to dialog open:</source>
          <target state="translated">모두 표시 모드가 활성화되고 점프 대화 상자가 열린 아래 스크린 샷 :</target>
        </trans-unit>
        <trans-unit id="5c96694964975723b945c61f8a11cb4ed7294c54" translate="yes" xml:space="preserve">
          <source>Screenshot below:</source>
          <target state="translated">아래 스크린 샷 :</target>
        </trans-unit>
        <trans-unit id="939c9cd3fdeacc5b765c412911793afa8ffb12b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.zephyrproject.org/latest/guides/kconfig/tips.html&quot;&gt;this page&lt;/a&gt; for some
Kconfig tips and best practices.</source>
          <target state="translated">Kconfig 팁과 모범 사례는 &lt;a href=&quot;https://docs.zephyrproject.org/latest/guides/kconfig/tips.html&quot;&gt;이 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7965f6bd439c04314413564b84856f545fec8ec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;. SPDX license identifiers are used in the
source code.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/LICENSE.txt&quot;&gt;LICENSE.txt를&lt;/a&gt; 참조하십시오 . SPDX 라이센스 식별자는 소스 코드에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e6cfb46b160c1c3320e54065973266f01099612b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/allnoconfig.py&quot;&gt;allnoconfig.py&lt;/a&gt; and
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/allyesconfig.py&quot;&gt;allyesconfig.py&lt;/a&gt;,
which are automatically verified to produce identical output to the standard</source>
          <target state="translated">표준과 동일한 출력을 생성하도록 자동으로 확인되는 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/allnoconfig.py&quot;&gt;allnoconfig.py&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/allyesconfig.py&quot;&gt;allyesconfig.py를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="28cf8b683622a2ad621571fc2000cac40f5556a4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/menuconfig.py&quot;&gt;menuconfig.py&lt;/a&gt;/&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/guiconfig.py&quot;&gt;guiconfig.py&lt;/a&gt; and the
minimalistic &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/menuconfig_example.py&quot;&gt;menuconfig_example.py&lt;/a&gt;
example.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/menuconfig.py&quot;&gt;menuconfig.py&lt;/a&gt; / &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/guiconfig.py&quot;&gt;guiconfig.py&lt;/a&gt; 및 최소한의 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples/menuconfig_example.py&quot;&gt;menuconfig_example.py&lt;/a&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="acc2c52c24a5f8259e0f2ce1e052d9cf22c641ab" translate="yes" xml:space="preserve">
          <source>See the</source>
          <target state="translated">참조</target>
        </trans-unit>
        <trans-unit id="ccc22b8f5670525bbd55a2a9c9c15f3a1260f221" translate="yes" xml:space="preserve">
          <source>See the &lt;em&gt;Kconfig extensions&lt;/em&gt; section in the
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt;
module docstring for more information.</source>
          <target state="translated">참고 항목 &lt;em&gt;kconfig를 확장&lt;/em&gt; 섹션 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py에&lt;/a&gt; 대한 자세한 내용은 모듈의 문서화 문자열을.</target>
        </trans-unit>
        <trans-unit id="ceb34f0402d4e603200610fda707f1ff143b9a47" translate="yes" xml:space="preserve">
          <source>See the docstring at the top of &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/menuconfig.py&quot;&gt;menuconfig.py&lt;/a&gt; for
more information about the terminal menuconfig implementation.</source>
          <target state="translated">터미널 menuconfig 구현에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/menuconfig.py&quot;&gt;menuconfig.py&lt;/a&gt; 상단에있는 docstring을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea1e200a97b7ae778cc662baacdee8cf5fd50a1d" translate="yes" xml:space="preserve">
          <source>See the docstring for</source>
          <target state="translated">에 대한 독 스트링 참조</target>
        </trans-unit>
        <trans-unit id="4babc4aba281ce3ca68b5502d0c65c684377caef" translate="yes" xml:space="preserve">
          <source>See the module docstring at the top of &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt; 맨 위에있는 모듈 독 스트링을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f335274b55678fad850f940bdf35caad9b2d56b0" translate="yes" xml:space="preserve">
          <source>Since Kconfiglib is based around a library, it can be used e.g. to generate a
&lt;a href=&quot;https://docs.zephyrproject.org/latest/reference/kconfig/index.html&quot;&gt;Kconfig cross-reference&lt;/a&gt;, using
the same robust Kconfig parser used for other Kconfig tools, instead of brittle
ad-hoc parsing. The documentation generation script can be found &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/blob/master/doc/scripts/genrest.py&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Kconfiglib는 라이브러리를 기반으로하기 때문에 취약한 임시 파싱 대신 다른 Kconfig 도구에 사용되는 동일한 강력한 Kconfig 파서를 사용하여 &lt;a href=&quot;https://docs.zephyrproject.org/latest/reference/kconfig/index.html&quot;&gt;Kconfig 상호 참조&lt;/a&gt; 를 생성하는 데 사용할 수 있습니다 . 문서 생성 스크립트는 &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/blob/master/doc/scripts/genrest.py&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca193e99606860be61dc596914b5e125096352b0" translate="yes" xml:space="preserve">
          <source>Some projects (e.g. the Linux kernel) use multiple Kconfig trees with many
shared Kconfig files, leading to some safe undefined symbol references.</source>
          <target state="translated">일부 프로젝트 (예 : Linux 커널)는 많은 공유 Kconfig 파일과 함께 여러 Kconfig 트리를 사용하여 안전한 정의되지 않은 기호 참조로 이어집니다.</target>
        </trans-unit>
        <trans-unit id="f4483ed7d3afec06beaa430f8a3f86be6c71b035" translate="yes" xml:space="preserve">
          <source>Sorry if this change caused problems!</source>
          <target state="translated">이 변경으로 인해 문제가 발생한 경우 죄송합니다!</target>
        </trans-unit>
        <trans-unit id="3bd78692f1cb9531340d49ceb6256ca4b4f240fd" translate="yes" xml:space="preserve">
          <source>Starting with Kconfiglib 12.2.0,</source>
          <target state="translated">Kconfiglib 12.2.0부터</target>
        </trans-unit>
        <trans-unit id="ffb850dfd5f122e4d51774bae9970c2c0b17f07c" translate="yes" xml:space="preserve">
          <source>Starting with Kconfiglib 13.0.0, the &lt;a href=&quot;https://github.com/zephyrproject-rtos/windows-curses&quot;&gt;windows-curses&lt;/a&gt; package is no longer
automatically installed on Windows, and needs to be installed manually for the
terminal</source>
          <target state="translated">Kconfiglib 13.0.0부터 &lt;a href=&quot;https://github.com/zephyrproject-rtos/windows-curses&quot;&gt;windows-curses&lt;/a&gt; 패키지가 더 이상 Windows에 자동으로 설치되지 않으며 터미널에 대해 수동으로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2f2d934d867fad5b1d35f4e5a0af71e15a29fb0" translate="yes" xml:space="preserve">
          <source>Starting with Kconfiglib version 12.2.0, all utilities are compatible with both
Python 2 and Python 3. Previously,</source>
          <target state="translated">Kconfiglib 버전 12.2.0부터 모든 유틸리티는 Python 2 및 Python 3과 호환됩니다. 이전에는</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">상징</target>
        </trans-unit>
        <trans-unit id="87690d7878e20ad47ac8cbd2efeaaed76736677b" translate="yes" xml:space="preserve">
          <source>Symbol.config_string</source>
          <target state="translated">Symbol.config_string</target>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="5f967f7d2e1f440aeb4c91e854d76b62157077cf" translate="yes" xml:space="preserve">
          <source>Test suite</source>
          <target state="translated">테스트 스위트</target>
        </trans-unit>
        <trans-unit id="97cba4858411c435e526dd651157aac20178222c" translate="yes" xml:space="preserve">
          <source>Thanks</source>
          <target state="translated">감사</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="f80165000ff7d87d16b48837fb71cfc64f58c20d" translate="yes" xml:space="preserve">
          <source>The 3.2 requirement comes from</source>
          <target state="translated">3.2 요구 사항은</target>
        </trans-unit>
        <trans-unit id="d670eed801ca96ef87d6da4464a5cbdb9b2100c7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/include/linux/kconfig.h&quot;&gt;include/linux/kconfig.h&lt;/a&gt;
header in the Linux kernel defines some useful helper macros for testing
Kconfig configuration values.</source>
          <target state="translated">Linux 커널 의 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/include/linux/kconfig.h&quot;&gt;include / linux / kconfig.h&lt;/a&gt; 헤더는 Kconfig 구성 값을 테스트하는 데 유용한 몇 가지 도우미 매크로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dea024dab988019e571bb3b23addb5f0fe9a8f02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/allyesconfig.py&quot;&gt;allyesconfig.py&lt;/a&gt;
script currently runs in about 1.3 seconds on the Linux kernel on a Core i7
2600K (with a warm file cache), including the</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/allyesconfig.py&quot;&gt;allyesconfig.py의&lt;/a&gt; 스크립트는 현재 코어에 리눅스 커널 1.3에 대한 초 단위로 실행이 등 (따뜻한 파일 캐시) 2600K i7 용 베어 본</target>
        </trans-unit>
        <trans-unit id="cdba3b739b6d4b074a75406b10f23f37b4170c8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples&quot;&gt;examples/&lt;/a&gt; directory contains some simple example scripts. Among these are the following ones. Make sure you run them with the latest version of Kconfiglib, as they might make use of newly added features.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/examples&quot;&gt;예 /&lt;/a&gt; 디렉토리는 몇 가지 간단한 예제 스크립트가 포함되어 있습니다. 그중에는 다음과 같은 것들이 있습니다. 새로 추가 된 기능을 사용할 수 있으므로 최신 버전의 Kconfiglib로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f7473adbfa17778e029531262bb535703a5cfbab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/tests/reltest&quot;&gt;tests/reltest&lt;/a&gt; script runs the test suite
and all the example scripts for both Python 2 and Python 3, verifying that everything works.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/tests/reltest&quot;&gt;시험 / reltest&lt;/a&gt; 스크립트는 테스트 스위트, 그 모든 작업을 확인하는 두 파이썬이 파이썬 3에 대한 모든 예제 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fb21ea04c69a767a5ea995f5ae389a5d7b1d4001" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/testsuite.py&quot;&gt;test suite&lt;/a&gt;
automatically compares output from Kconfiglib and the C tools
by diffing the generated</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/testsuite.py&quot;&gt;테스트 세트는&lt;/a&gt; 자동으로 생성 diffing의 Kconfiglib 및 C 툴로부터 출력 된 비교</target>
        </trans-unit>
        <trans-unit id="c59f1ee15826262c68dbc45296a8ae11f58bd13f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.zephyrproject.org/&quot;&gt;Zephyr&lt;/a&gt; project uses Kconfiglib to
generate</source>
          <target state="translated">&lt;a href=&quot;https://www.zephyrproject.org/&quot;&gt;제퍼의&lt;/a&gt; 프로젝트를 생성하는 Kconfiglib를 사용</target>
        </trans-unit>
        <trans-unit id="1d8dd906e6eb27340bd9ae5aa4747d27a91ca22a" translate="yes" xml:space="preserve">
          <source>The C tools have dropped support for</source>
          <target state="translated">C 도구는</target>
        </trans-unit>
        <trans-unit id="a682566cff662743b14fae1bd4d4898981d8d49f" translate="yes" xml:space="preserve">
          <source>The entire library is contained in &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt;.</source>
          <target state="translated">전체 라이브러리는 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py에&lt;/a&gt; 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1e0707e417967f47060a042ce0a952822922bf8" translate="yes" xml:space="preserve">
          <source>The entire library is contained in &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt;. The
bundled scripts are implemented on top of it. Implementing your own scripts
should be relatively easy, if needed.</source>
          <target state="translated">전체 라이브러리는 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py에&lt;/a&gt; 포함되어 있습니다 . 번들 스크립트는 그 위에 구현됩니다. 필요한 경우 자체 스크립트를 구현하는 것은 비교적 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="299755da9e1847bc38af13c0648c8abf63c584b9" translate="yes" xml:space="preserve">
          <source>The following Kconfig extensions are available:</source>
          <target state="translated">다음 Kconfig 확장을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b13b3808a3a1275f224ae1fcdcd16260d5562e0c" translate="yes" xml:space="preserve">
          <source>The following log should give some idea of the functionality available in the API:</source>
          <target state="translated">다음 로그는 API에서 사용할 수있는 기능에 대한 아이디어를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="421392ec47f9aa7c5b15161858c106552142b119" translate="yes" xml:space="preserve">
          <source>The generated</source>
          <target state="translated">생성</target>
        </trans-unit>
        <trans-unit id="cc10e6e33e755cf6bd1d17a548b006ac7103d3e1" translate="yes" xml:space="preserve">
          <source>The generated headers use the same format as</source>
          <target state="translated">생성 된 헤더는 다음과 같은 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="95c5419f04e6ec03dfc6a45fe02fe1dc39dbc4ce" translate="yes" xml:space="preserve">
          <source>The test suite consists of a set of selftests and a set of compatibility tests that
compare configurations generated by Kconfiglib with
configurations generated by the C tools, for a number of cases. See
&lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/testsuite.py&quot;&gt;testsuite.py&lt;/a&gt;
for the available options.</source>
          <target state="translated">테스트 스위트는 여러 경우에 대해 Kconfiglib에서 생성 된 구성과 C 도구에서 생성 된 구성을 비교하는 일련의 자체 테스트와 호환성 테스트로 구성됩니다. 사용 가능한 옵션 은 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/testsuite.py&quot;&gt;testsuite.py&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="561943a807482214cd8462919e0fefcc9dd64a2d" translate="yes" xml:space="preserve">
          <source>The test suite is run with</source>
          <target state="translated">테스트 스위트는</target>
        </trans-unit>
        <trans-unit id="57993817bd10321d52fc1dc28f1a4827d02fc870" translate="yes" xml:space="preserve">
          <source>The test suite must be run from the top-level kernel directory. It requires that the
Kconfiglib git repository has been cloned into it and that the makefile patch has been applied.</source>
          <target state="translated">테스트 스위트는 최상위 커널 디렉토리에서 실행되어야합니다. Kconfiglib git 저장소가 여기에 복제되었고 makefile 패치가 적용되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1ce6c044d69c8f04ebacc9cb3ca62b7a10477113" translate="yes" xml:space="preserve">
          <source>The tools implemented on top of it are one file each.</source>
          <target state="translated">그 위에 구현 된 도구는 각각 하나의 파일입니다.</target>
        </trans-unit>
        <trans-unit id="32d6d3c77d1125606da5ea6c274f7950cb9df973" translate="yes" xml:space="preserve">
          <source>The underlying menu tree is exposed, including submenus created implicitly
from symbols depending on preceding symbols. This can be used e.g. to
implement menuconfig-like functionality.</source>
          <target state="translated">이전 기호에 따라 기호에서 암시 적으로 생성 된 하위 메뉴를 포함하여 기본 메뉴 트리가 표시됩니다. 이것은 예를 들어 menuconfig와 같은 기능을 구현하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0c35c5817110670e658f9ac8833ce0f0308c8ad" translate="yes" xml:space="preserve">
          <source>There are no third-party dependencies on *nix. On Windows,
the</source>
          <target state="translated">* nix에는 타사 종속성이 없습니다. Windows에서는</target>
        </trans-unit>
        <trans-unit id="2a4845cb1c57dd4844573fbf31f1522cc140e9ed" translate="yes" xml:space="preserve">
          <source>These can be useful in projects that make use of symbols defined in multiple
locations, and remove some Kconfig inconsistency.</source>
          <target state="translated">이는 여러 위치에 정의 된 기호를 사용하고 일부 Kconfig 불일치를 제거하는 프로젝트에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="569b56df949a7b8d026dfb9d28ebf3f0c3f8969d" translate="yes" xml:space="preserve">
          <source>These use the older Kconfiglib 1 API, which was clunkier and not as general
(functions instead of properties, no direct access to the menu structure or
properties, uglier</source>
          <target state="translated">이들은 이전 Kconfiglib 1 API를 사용합니다. 이는 더 복잡하고 일반적이지 않습니다 (속성 대신 기능, 메뉴 구조 또는 속성에 대한 직접 액세스 없음, 추악</target>
        </trans-unit>
        <trans-unit id="4e40f2069a753e8b827d031c6513600c0fe2a7b8" translate="yes" xml:space="preserve">
          <source>This currently involves comparing the output for 36 ARCHes and 498 defconfig
files (or over 18000 ARCH/defconfig combinations in &amp;ldquo;obsessive&amp;rdquo; test suite
mode). All tests are expected to pass.</source>
          <target state="translated">여기에는 현재 36 개의 ARCH와 498 개의 defconfig 파일 (또는 &quot;강박&quot;테스트 스위트 모드에서 18000 개 이상의 ARCH / defconfig 조합)에 대한 출력 비교가 포함됩니다. 모든 테스트는 통과 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="a31ccac761dbd3384d991827cd34bb1e13ee5286" translate="yes" xml:space="preserve">
          <source>This fixes installation of Kconfiglib on MSYS2, which is not compatible with</source>
          <target state="translated">이것은 MSYS2에서 Kconfiglib의 설치를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="e50f2e9e3be171240f161b3188beccdaeef148b5" translate="yes" xml:space="preserve">
          <source>This is the standard behavior with the new &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-macro-language.rst&quot;&gt;Kconfig preprocessor&lt;/a&gt;,
which Kconfiglib implements.</source>
          <target state="translated">이것은 Kconfiglib가 구현 하는 새로운 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-macro-language.rst&quot;&gt;Kconfig 전 처리기&lt;/a&gt; 의 표준 동작입니다 .</target>
        </trans-unit>
        <trans-unit id="646c67f8eb135bac71e6a725a6c08e78b47708db" translate="yes" xml:space="preserve">
          <source>This is version 2 of Kconfiglib, which is not backwards-compatible with
Kconfiglib 1. A summary of changes between Kconfiglib 1 and Kconfiglib
2 can be found &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/screenshots/kconfiglib-2-changes.txt&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이것은 Kconfiglib 1과 역 호환되지 않는 Kconfiglib 버전 2입니다. Kconfiglib 1과 Kconfiglib 2 사이의 변경 사항 요약은 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/screenshots/kconfiglib-2-changes.txt&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8aedfda52bd879b55461b46c9b297b42da94c9c" translate="yes" xml:space="preserve">
          <source>This uses the same scheme as the</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="32c8c5a342b3da8a5e2b5de7cc2a30284d6fc31a" translate="yes" xml:space="preserve">
          <source>This uses wheels built from &lt;a href=&quot;https://github.com/zephyrproject-rtos/windows-curses&quot;&gt;this repository&lt;/a&gt;, which is in turn
based on Christoph Gohlke&amp;rsquo;s &lt;a href=&quot;https://www.lfd.uci.edu/~gohlke/pythonlibs/#curses&quot;&gt;Python Extension Packages for Windows&lt;/a&gt;.</source>
          <target state="translated">이것은 Christoph Gohlke의 &lt;a href=&quot;https://www.lfd.uci.edu/~gohlke/pythonlibs/#curses&quot;&gt;Windows 용 Python 확장 패키지를&lt;/a&gt; 기반으로하는 &lt;a href=&quot;https://github.com/zephyrproject-rtos/windows-curses&quot;&gt;이 저장소&lt;/a&gt; 에서 빌드 된 휠을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="a99700db8489dae7ef20890ac8d925aaef8feefd" translate="yes" xml:space="preserve">
          <source>This warning can also be enabled/disabled by setting</source>
          <target state="translated">이 경고는 다음을 설정하여 활성화 / 비활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4f864eadae5f04153d9154c4f1c9e62e69fdc33" translate="yes" xml:space="preserve">
          <source>This will also work after installing Kconfiglib with</source>
          <target state="translated">이것은 Kconfiglib를 설치 한 후에도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e12eff487bf0a2bf9ba16e9089e5e47964c1941d" translate="yes" xml:space="preserve">
          <source>Three configuration interfaces are currently available:</source>
          <target state="translated">현재 세 가지 구성 인터페이스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c60eac3cec6aa767c496f0a9eae6ca9ca41ba8cc" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;https://github.com/RomaVis&quot;&gt;RomaVis&lt;/a&gt;, for making
&lt;a href=&quot;https://github.com/RomaVis/pymenuconfig&quot;&gt;pymenuconfig&lt;/a&gt; and suggesting
the</source>
          <target state="translated">에 &lt;a href=&quot;https://github.com/RomaVis&quot;&gt;RomaVis&lt;/a&gt; 만들기위한, &lt;a href=&quot;https://github.com/RomaVis/pymenuconfig&quot;&gt;pymenuconfig을&lt;/a&gt; 하고 제안</target>
        </trans-unit>
        <trans-unit id="38514630af54d3130460e5dadf8126719b07fa6c" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;https://github.com/philipc&quot;&gt;Philip Craig&lt;/a&gt; for adding
support for the</source>
          <target state="translated">에 대한 지원을 추가 한 &lt;a href=&quot;https://github.com/philipc&quot;&gt;Philip Craig&lt;/a&gt; 에게</target>
        </trans-unit>
        <trans-unit id="57c800b9a0c36442ef860f8de15d04303fd1bc61" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;https://github.com/pinkfluid&quot;&gt;Mitja Horvat&lt;/a&gt;, for adding support
for user-defined styles to the terminal menuconfig.</source>
          <target state="translated">행 &lt;a href=&quot;https://github.com/pinkfluid&quot;&gt;미챠 호르 바트&lt;/a&gt; 단말 menuconfig를 사용자에 정의 된 스타일에 대한 지원을 추가.</target>
        </trans-unit>
        <trans-unit id="dd81293769e7d8c5708a7aef670cc90173c2c4f1" translate="yes" xml:space="preserve">
          <source>To avoid having to carry around a bunch of GIFs, the image data is embedded
in</source>
          <target state="translated">여러 GIF를 가지고 다닐 필요가 없도록 이미지 데이터가</target>
        </trans-unit>
        <trans-unit id="e0f6c60e26b68a462a5a53541325020fac3f76ec" translate="yes" xml:space="preserve">
          <source>To fix issues with dependency loops on recent linux-next kernels, apply &lt;a href=&quot;https://www.spinics.net/lists/linux-kbuild/msg23455.html&quot;&gt;this
patch&lt;/a&gt;. Hopefully,
it will be in</source>
          <target state="translated">최신 linux-next 커널의 종속성 루프 문제를 해결하려면 &lt;a href=&quot;https://www.spinics.net/lists/linux-kbuild/msg23455.html&quot;&gt;이 패치를&lt;/a&gt; 적용 하십시오 . 바라건대, 그것은</target>
        </trans-unit>
        <trans-unit id="1d9bc7a8c1ce800129f971757514d104ba261a47" translate="yes" xml:space="preserve">
          <source>To get rid of warnings generated for the kernel</source>
          <target state="translated">커널에 대해 생성 된 경고를 제거하려면</target>
        </trans-unit>
        <trans-unit id="b05bb462e78b54f793efbb4f75fa3eaf679767c4" translate="yes" xml:space="preserve">
          <source>To update an old</source>
          <target state="translated">오래된 것을 업데이트하려면</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">진실</target>
        </trans-unit>
        <trans-unit id="12cde6cf537e9f7a10a41f71ff125068b63a4dcc" translate="yes" xml:space="preserve">
          <source>Two extra optional warnings can be enabled by setting environment variables,
covering cases that are easily missed when making changes to Kconfig files:</source>
          <target state="translated">Kconfig 파일을 변경할 때 쉽게 놓칠 수있는 경우를 포함하여 환경 변수를 설정하여 두 가지 추가 선택적 경고를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b76a8dde3feda0fcbc3cfe14474a143b8e75575" translate="yes" xml:space="preserve">
          <source>Ubuntu:</source>
          <target state="translated">Ubuntu :</target>
        </trans-unit>
        <trans-unit id="d9ed97a71d29927fd2c0b5f7fed187da806819b9" translate="yes" xml:space="preserve">
          <source>Unicode characters in string literals in</source>
          <target state="translated">문자열 리터럴의 유니 코드 문자</target>
        </trans-unit>
        <trans-unit id="609d15f71c6aa5d4d2c305dde57a7388e6c7b3ad" translate="yes" xml:space="preserve">
          <source>Useful helper macros</source>
          <target state="translated">유용한 도우미 매크로</target>
        </trans-unit>
        <trans-unit id="c25de2e83e9fceeee022a34e378748baf14ac201" translate="yes" xml:space="preserve">
          <source>Using</source>
          <target state="translated">사용</target>
        </trans-unit>
        <trans-unit id="627fd85864c011ffb4575f795b4077b6d104e43c" translate="yes" xml:space="preserve">
          <source>Using &lt;tt&gt;.config&lt;/tt&gt; files as Make input</source>
          <target state="translated">사용 &lt;tt&gt;의 .config&lt;/tt&gt; 만들기 입력으로 파일을</target>
        </trans-unit>
        <trans-unit id="c3e84bd9df1fe79c0b065a8532b1454cde5a241f" translate="yes" xml:space="preserve">
          <source>When single-menu mode is enabled, a single menu is shown at a time, like in
the terminal menuconfig. Only this mode distinguishes between symbols defined
with</source>
          <target state="translated">단일 메뉴 모드가 활성화되면 터미널 menuconfig에서와 같이 한 번에 하나의 메뉴가 표시됩니다. 이 모드 만이로 정의 된 기호를 구별합니다.</target>
        </trans-unit>
        <trans-unit id="ac8772fd1ba38e54bdd434574513c3df997734fc" translate="yes" xml:space="preserve">
          <source>Whenever</source>
          <target state="translated">할때는 언제나</target>
        </trans-unit>
        <trans-unit id="0f41e856b1b596420e8040d9bafcb6b62d4d06d9" translate="yes" xml:space="preserve">
          <source>While being simpler to understand and tweak.</source>
          <target state="translated">이해하고 조정하기가 더 간단합니다.</target>
        </trans-unit>
        <trans-unit id="0d6ca0d45241e8fd049d62c0b384c6c7a71aedeb" translate="yes" xml:space="preserve">
          <source>While working on the terminal menuconfig implementation, I added a few APIs
to Kconfiglib that turned out to be handy.</source>
          <target state="translated">터미널 menuconfig 구현을 작업하는 동안 Kconfiglib에 편리한 것으로 밝혀진 몇 가지 API를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="74223077b5712a46b75a649a16ec00e6b071c4f6" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-language.rst&quot;&gt;Kconfig&lt;/a&gt;
files that describe the available configuration options. See &lt;a href=&quot;https://docs.zephyrproject.org/latest/guides/kconfig/tips.html&quot;&gt;this page&lt;/a&gt; for some
general Kconfig advice.</source>
          <target state="translated">사용 가능한 구성 옵션을 설명하는 &lt;a href=&quot;https://github.com/torvalds/linux/blob/master/Documentation/kbuild/kconfig-language.rst&quot;&gt;Kconfig&lt;/a&gt; 파일을 작성 합니다. 일반적인 Kconfig 조언 은 &lt;a href=&quot;https://docs.zephyrproject.org/latest/guides/kconfig/tips.html&quot;&gt;이 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8133c15af92d80820763dfc91c30ea1f6db3d9bb" translate="yes" xml:space="preserve">
          <source>_USE_EMBEDDED_IMAGES</source>
          <target state="translated">_USE_EMBEDDED_IMAGES</target>
        </trans-unit>
        <trans-unit id="d303a7c31eef6c5540f4020ca44eac35763e5d84" translate="yes" xml:space="preserve">
          <source>__repr__()</source>
          <target state="translated">__repr __ ()</target>
        </trans-unit>
        <trans-unit id="dec9f144c258f4d76fabfc623e9eabd994480939" translate="yes" xml:space="preserve">
          <source>__str__()</source>
          <target state="translated">__str __ ()</target>
        </trans-unit>
        <trans-unit id="cd3b1b00ca12b5a06a3f2906c2ae0feb7ba68ade" translate="yes" xml:space="preserve">
          <source>alldefconfig</source>
          <target state="translated">alldefconfig</target>
        </trans-unit>
        <trans-unit id="0aca9ca4fa20321baa03e026d573ccb56e4b5c74" translate="yes" xml:space="preserve">
          <source>allmodconfig</source>
          <target state="translated">allmodconfig</target>
        </trans-unit>
        <trans-unit id="3d5f5ebb524a33512388fcf52acc4b10dc1abeed" translate="yes" xml:space="preserve">
          <source>allnoconfig</source>
          <target state="translated">allnoconfig</target>
        </trans-unit>
        <trans-unit id="64190596095b89e36873e8114f448ad3fa52a206" translate="yes" xml:space="preserve">
          <source>allnoconfig.py</source>
          <target state="translated">allnoconfig.py</target>
        </trans-unit>
        <trans-unit id="b962829b78695bef4d75c3dd5890f02394877379" translate="yes" xml:space="preserve">
          <source>allnoconfig_simpler.py</source>
          <target state="translated">allnoconfig_simpler.py</target>
        </trans-unit>
        <trans-unit id="65129e7eadcd940f20c41f6e8028bab0057c4a3e" translate="yes" xml:space="preserve">
          <source>allnoconfig_y</source>
          <target state="translated">allnoconfig_y</target>
        </trans-unit>
        <trans-unit id="6672fa83733d709a5d59d628098b58e7c6120221" translate="yes" xml:space="preserve">
          <source>allyesconfig</source>
          <target state="translated">allyesconfig</target>
        </trans-unit>
        <trans-unit id="fb211455ac70f73b447f668635ac4f514de3522f" translate="yes" xml:space="preserve">
          <source>allyesconfig.py</source>
          <target state="translated">allyesconfig.py</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="60ccee277a218839aea3978ccd70ff68ba26bbb1" translate="yes" xml:space="preserve">
          <source>and header file generation, also doing configuration fragment
merging</source>
          <target state="translated">및 헤더 파일 생성, 구성 조각 병합도 수행</target>
        </trans-unit>
        <trans-unit id="dda73a0d759430658c29b8ae8c826d33612475ae" translate="yes" xml:space="preserve">
          <source>and include the configuration file it generates instead of
including</source>
          <target state="translated">포함하는 대신 생성하는 구성 파일을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="fac028ee58da975fe0dff680655d354a22f9600e" translate="yes" xml:space="preserve">
          <source>and symbols defined with</source>
          <target state="translated">및로 정의 된 기호</target>
        </trans-unit>
        <trans-unit id="3c39b29a11e3bb1555e4defb628f92c6c9cb4d8e" translate="yes" xml:space="preserve">
          <source>and the C utilities (which need to reparse all the
Kconfig files for each defconfig test). Adding some multiprocessing to the test suite would make sense
too.</source>
          <target state="translated">및 C 유틸리티 (각 defconfig 테스트에 대해 모든 Kconfig 파일을 재분석해야 함). 테스트 스위트에 멀티 프로세싱을 추가하는 것도 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d5b7d509ce2e39b23d03c550f5f7f218c53f7cb" translate="yes" xml:space="preserve">
          <source>and the scripts you want somewhere. There are no
third-party dependencies, but the terminal</source>
          <target state="translated">그리고 어딘가에 원하는 스크립트. 타사 종속성은 없지만 터미널</target>
        </trans-unit>
        <trans-unit id="75bfc90b24b7a7d242bc7b2741cf879bf515c3a9" translate="yes" xml:space="preserve">
          <source>are available in addition to</source>
          <target state="translated">이외에도 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e750ee7c231477c66be61075d1aafe532a03970f" translate="yes" xml:space="preserve">
          <source>argparse</source>
          <target state="translated">argparse</target>
        </trans-unit>
        <trans-unit id="0701ebc01bec98b604009c8cfa3f65e60d5f3294" translate="yes" xml:space="preserve">
          <source>before rebuilding with an
outdated</source>
          <target state="translated">구식으로 재건하기 전에</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">부울</target>
        </trans-unit>
        <trans-unit id="8d9ba88e967a7906c92bbcf1d94603a06d499b23" translate="yes" xml:space="preserve">
          <source>by default.</source>
          <target state="translated">기본적으로.</target>
        </trans-unit>
        <trans-unit id="630af549b66857e8b3c7a90fcd2a87d1e8130b7d" translate="yes" xml:space="preserve">
          <source>choice</source>
          <target state="translated">선택</target>
        </trans-unit>
        <trans-unit id="5ffe9243f2e56b82ccd642c88ab14a893e06569f" translate="yes" xml:space="preserve">
          <source>class documentation, and then the documentation for the</source>
          <target state="translated">클래스 문서, 다음에 대한 문서</target>
        </trans-unit>
        <trans-unit id="db5f6869b5f0574b5bb750d7a83d523f28ed9c61" translate="yes" xml:space="preserve">
          <source>class.</source>
          <target state="translated">수업.</target>
        </trans-unit>
        <trans-unit id="f9398d00d00befb9ea12e07f577ae7db3e417655" translate="yes" xml:space="preserve">
          <source>classes.</source>
          <target state="translated">클래스.</target>
        </trans-unit>
        <trans-unit id="118a9989815489c24b81b160782015890ed2085e" translate="yes" xml:space="preserve">
          <source>comment</source>
          <target state="translated">논평</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="03461db87a24c8a99f7e61a96ba5df4ef9e79d47" translate="yes" xml:space="preserve">
          <source>config.h</source>
          <target state="translated">config.h</target>
        </trans-unit>
        <trans-unit id="4c69edc4585507050a968b8a17155991b5bc6e59" translate="yes" xml:space="preserve">
          <source>curses</source>
          <target state="translated">저주</target>
        </trans-unit>
        <trans-unit id="6a6978234df1d443376b05059bc4da854cfb3e99" translate="yes" xml:space="preserve">
          <source>def_bool</source>
          <target state="translated">def_bool</target>
        </trans-unit>
        <trans-unit id="4725028bff0adc82625e88d1e2b18ca1f798f8bc" translate="yes" xml:space="preserve">
          <source>def_hex</source>
          <target state="translated">def_hex</target>
        </trans-unit>
        <trans-unit id="7c5ba37a6c26ecaa22bda9fc755298396c34949a" translate="yes" xml:space="preserve">
          <source>def_int</source>
          <target state="translated">def_int</target>
        </trans-unit>
        <trans-unit id="2c8cd56a2e48fc9cbee335e1d421197ae8920fee" translate="yes" xml:space="preserve">
          <source>def_string</source>
          <target state="translated">def_string</target>
        </trans-unit>
        <trans-unit id="34614a6d05a228220280ed4d0bbffc877eddd9b7" translate="yes" xml:space="preserve">
          <source>def_tristate</source>
          <target state="translated">def_tristate</target>
        </trans-unit>
        <trans-unit id="bcd5dbad496c12fd4c9abf199dd9bc09c58636ba" translate="yes" xml:space="preserve">
          <source>defconfig</source>
          <target state="translated">defconfig</target>
        </trans-unit>
        <trans-unit id="b2bd4d21502f001a6657d3d00624fe0ea2b76299" translate="yes" xml:space="preserve">
          <source>deps/auto.conf</source>
          <target state="translated">deps / auto.conf</target>
        </trans-unit>
        <trans-unit id="cf53d885b969a4048d25c32dc10a96e2685d2551" translate="yes" xml:space="preserve">
          <source>directly. This has the advantage that the generated
configuration file will always be a &amp;ldquo;full&amp;rdquo; configuration file, even if</source>
          <target state="translated">직접. 이렇게하면 생성 된 구성 파일이 항상 &quot;전체&quot;구성 파일이된다는 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d914e3e61315f22e61b6bcd1202d91da2fdf2bf" translate="yes" xml:space="preserve">
          <source>directory in the kernel:
Symbols are translated into files that are touched when the symbol&amp;rsquo;s value
changes between builds, which can be used to avoid having to do a full
rebuild whenever the configuration is changed.</source>
          <target state="translated">커널의 디렉토리 : 심볼은 심볼의 값이 빌드 사이에 변경 될 때 터치되는 파일로 변환되며, 구성이 변경 될 때마다 전체 재 빌드를 수행하지 않아도되도록 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="886ae0c464df637d33e0166b92e4c5f1b2f26d84" translate="yes" xml:space="preserve">
          <source>dnf install python2-tkinter</source>
          <target state="translated">dnf 설치 python2-tkinter</target>
        </trans-unit>
        <trans-unit id="d61331c66abe7b99f09728310b6b2812e2ccb05a" translate="yes" xml:space="preserve">
          <source>dnf install python3-tkinter</source>
          <target state="translated">dnf 설치 python3-tkinter</target>
        </trans-unit>
        <trans-unit id="ffed391ca2a6c8bb0b20f95bace87ef78d0c9f59" translate="yes" xml:space="preserve">
          <source>during</source>
          <target state="translated">...동안</target>
        </trans-unit>
        <trans-unit id="f1be651fd6b6ed7d8aca510dd997d8779a4a1fe7" translate="yes" xml:space="preserve">
          <source>features like showing invisible symbols and
showing symbol names are included, and it&amp;rsquo;s possible to jump directly to a symbol
in the menu tree (even if it&amp;rsquo;s currently invisible).</source>
          <target state="translated">보이지 않는 심볼 표시 및 심볼 이름 표시와 같은 기능이 포함되어 있으며 메뉴 트리의 심볼로 직접 이동할 수 있습니다 (현재 보이지 않는 경우에도).</target>
        </trans-unit>
        <trans-unit id="9b77efe8feb440e3deb00737e16c63b6459c8314" translate="yes" xml:space="preserve">
          <source>file after the Kconfig files have changed (e.g.
to add new options), run</source>
          <target state="translated">Kconfig 파일이 변경된 후 (예 : 새 옵션 추가) 파일을 실행하려면</target>
        </trans-unit>
        <trans-unit id="d317ce6dad59ced0ed3a8934e66aa16e5a4f7e05" translate="yes" xml:space="preserve">
          <source>file performs an
implicit</source>
          <target state="translated">파일은 암시 적</target>
        </trans-unit>
        <trans-unit id="93ddda0298441ddb51d88f08aa0fbe9508589d14" translate="yes" xml:space="preserve">
          <source>file).</source>
          <target state="translated">파일).</target>
        </trans-unit>
        <trans-unit id="519f51735573cac5a8aab0ec4477fe46c20b90ee" translate="yes" xml:space="preserve">
          <source>files
need to be processed, because the</source>
          <target state="translated">파일을 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="844730985e045fd36f92b88b24e456cd9af13df1" translate="yes" xml:space="preserve">
          <source>files and C headers on Linux as well as Windows.</source>
          <target state="translated">Linux 및 Windows의 파일 및 C 헤더.</target>
        </trans-unit>
        <trans-unit id="1d53d1a7f4f5afedd88c27b844435172cbaddf05" translate="yes" xml:space="preserve">
          <source>files and different versions of</source>
          <target state="translated">파일 및 다른 버전</target>
        </trans-unit>
        <trans-unit id="126fc9627ac273ac47d460b8b6fdfb15d65e5efe" translate="yes" xml:space="preserve">
          <source>files are
correctly handled. This support mostly comes for free from Python.</source>
          <target state="translated">파일이 올바르게 처리됩니다. 이 지원은 대부분 Python에서 무료로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c8d5925ce8337a6b5f56cf288efa3cbb1e7e5108" translate="yes" xml:space="preserve">
          <source>files as Make input</source>
          <target state="translated">입력으로 파일</target>
        </trans-unit>
        <trans-unit id="70a02be93d120ca7fb48165af5dc50454e3c425a" translate="yes" xml:space="preserve">
          <source>files for the real kernel Kconfig and
defconfig files, for all ARCHes.</source>
          <target state="translated">모든 ARCH에 대한 실제 커널 Kconfig 및 defconfig 파일에 대한 파일.</target>
        </trans-unit>
        <trans-unit id="09c2278b4327e975abd96d2c7e6fd75566fe0eb3" translate="yes" xml:space="preserve">
          <source>files use Make syntax and can be included directly in Makefiles to
read configuration values from there. This is why</source>
          <target state="translated">파일은 Make 구문을 사용하며 Makefile에 직접 포함되어 구성 값을 읽을 수 있습니다. 이는 이유</target>
        </trans-unit>
        <trans-unit id="d8310c0577715c59f33c517a2b8b945c9736cbed" translate="yes" xml:space="preserve">
          <source>files where a
symbol is defined, where applicable.</source>
          <target state="translated">해당하는 경우 기호가 정의 된 파일.</target>
        </trans-unit>
        <trans-unit id="c4c966ab3469c86a61b235a13f4aebc005de228c" translate="yes" xml:space="preserve">
          <source>files will only need to be parsed
once.</source>
          <target state="translated">파일은 한 번만 구문 분석하면됩니다.</target>
        </trans-unit>
        <trans-unit id="793c16c39ec323ca3e20542c844bf60c6c404881" translate="yes" xml:space="preserve">
          <source>files, add</source>
          <target state="translated">파일, 추가</target>
        </trans-unit>
        <trans-unit id="71519aea90da85c4823b5f442c8903cd72256cd1" translate="yes" xml:space="preserve">
          <source>files.</source>
          <target state="translated">파일.</target>
        </trans-unit>
        <trans-unit id="13b1771531b7ace86f6073fb971ae15c6b9d1cb5" translate="yes" xml:space="preserve">
          <source>files. By
default, no such warnings are generated.</source>
          <target state="translated">파일. 기본적으로 이러한 경고는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ab6804192a423864d832f4e1445f925bf0f1882" translate="yes" xml:space="preserve">
          <source>flag, make sure
that your</source>
          <target state="translated">깃발, 당신의</target>
        </trans-unit>
        <trans-unit id="1638f30e27bdafbefa516003387806549e92bf4a" translate="yes" xml:space="preserve">
          <source>for a template, and also the documentation of the</source>
          <target state="translated">템플릿 및 문서에 대한</target>
        </trans-unit>
        <trans-unit id="85a618650f27717dd9526faeeb422adff26f6263" translate="yes" xml:space="preserve">
          <source>format()</source>
          <target state="translated">체재()</target>
        </trans-unit>
        <trans-unit id="518a632aeaa402888d9b5a46bc71f0bb5588d926" translate="yes" xml:space="preserve">
          <source>from the Linux kernel. Output for symbols appears in the order that they&amp;rsquo;re
defined, unlike in the C tools (where the order depends on the hash table
implementation).</source>
          <target state="translated">Linux 커널에서. 기호에 대한 출력은 C 도구 (순서는 해시 테이블 구현에 따라 달라짐)와 달리 정의 된 순서대로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="c124dfb183a4c588db17e19b7306bc91042de9e9" translate="yes" xml:space="preserve">
          <source>from the kernel.</source>
          <target state="translated">커널에서.</target>
        </trans-unit>
        <trans-unit id="1ef3de2dc4557699cf5563067be776a5b35b0adb" translate="yes" xml:space="preserve">
          <source>function for more information.</source>
          <target state="translated">자세한 내용은 기능을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="34fae9c88c90478e7388a62e875c8d1356bf99eb" translate="yes" xml:space="preserve">
          <source>gcc -MD &amp;lt;source file&amp;gt;</source>
          <target state="translated">gcc -MD &amp;lt;소스 파일&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ee2d8452ffb0aa6db3d9907b77ea88825a7faaea" translate="yes" xml:space="preserve">
          <source>genconfig</source>
          <target state="translated">genconfig</target>
        </trans-unit>
        <trans-unit id="efe4c22c39381588fc26f1ce8212974b095124f6" translate="yes" xml:space="preserve">
          <source>get_wch()</source>
          <target state="translated">get_wch ()</target>
        </trans-unit>
        <trans-unit id="d56a06c8af478df6adc931a80037605269eabc14" translate="yes" xml:space="preserve">
          <source>guiconfig</source>
          <target state="translated">guiconfig</target>
        </trans-unit>
        <trans-unit id="4ebe391e32173e94c17d530e6a21d8184fd65d40" translate="yes" xml:space="preserve">
          <source>guiconfig.py</source>
          <target state="translated">guiconfig.py</target>
        </trans-unit>
        <trans-unit id="5c69d5e0d1cb7915c9e3577e7d150bb0b4b9dd3a" translate="yes" xml:space="preserve">
          <source>has been tested on X11, Windows, and macOS, and is
compatible with both Python 2 and Python 3.</source>
          <target state="translated">X11, Windows 및 macOS에서 테스트되었으며 Python 2 및 Python 3과 모두 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="7994ebae30a63934992a16deca856d50596bc1a9" translate="yes" xml:space="preserve">
          <source>hex</source>
          <target state="translated">마녀</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">만약</target>
        </trans-unit>
        <trans-unit id="29c09fdb950dd0de9a80e6c107781414135221b3" translate="yes" xml:space="preserve">
          <source>ifdef</source>
          <target state="translated">ifdef</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="3faf86e2d7c6a17b2c88dfe2ff1e1c3dcb737529" translate="yes" xml:space="preserve">
          <source>in
Make.</source>
          <target state="translated">Make.</target>
        </trans-unit>
        <trans-unit id="05af71e558292f2cf7a794eb74ee139a61386d5d" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt; for hints
on implementing incremental builds (rebuilding just source files that reference
changed configuration values).</source>
          <target state="translated">에 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt; 증분 구현에 대한 힌트 (기준이 설정 값을 변경하는 것이 단지 소스 파일을 재 구축) 만든다.</target>
        </trans-unit>
        <trans-unit id="6e3d7c12a1d30868d60100970b2eb8125ac8e8bc" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt;.
The documentation for the</source>
          <target state="translated">에 &lt;a href=&quot;https://github.com/ulfalizer/Kconfiglib/blob/master/kconfiglib.py&quot;&gt;kconfiglib.py&lt;/a&gt; . 에 대한 문서</target>
        </trans-unit>
        <trans-unit id="e860de92531dae8e38d49c5b02d990a9b3c79a35" translate="yes" xml:space="preserve">
          <source>include/config</source>
          <target state="translated">포함 / 구성</target>
        </trans-unit>
        <trans-unit id="cfc6b6a32f750e3c7b7bba604e0d05bc95eeb870" translate="yes" xml:space="preserve">
          <source>include/generated/autoconf.h</source>
          <target state="translated">include / generated / autoconf.h</target>
        </trans-unit>
        <trans-unit id="01022183d17c6632213b372e2828ab509885911c" translate="yes" xml:space="preserve">
          <source>includes the directory where the executables end up. You can
list the installed files with</source>
          <target state="translated">실행 파일이 끝나는 디렉토리를 포함합니다. 다음을 사용하여 설치된 파일을 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f97444c153c88cb2a1b4d15e2558540bc4d9bac" translate="yes" xml:space="preserve">
          <source>installation will give you both the base library and the following
executables. All but two (</source>
          <target state="translated">설치하면 기본 라이브러리와 다음 실행 파일이 모두 제공됩니다. 둘을 제외한 모두 (</target>
        </trans-unit>
        <trans-unit id="12b94475268560c3bdcd133001a2e267f675406f" translate="yes" xml:space="preserve">
          <source>instead, which is also a full configuration file.</source>
          <target state="translated">대신 전체 구성 파일이기도합니다.</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="8c27b7a3a56efecc9c31bd04f7275a96ae48b63d" translate="yes" xml:space="preserve">
          <source>interface and saving the configuration will
also update it (the configuration interfaces always prompt for saving
on exit if it would modify the contents of the</source>
          <target state="translated">인터페이스를 설정하고 저장하면 구성도 업데이트됩니다 (구성 인터페이스는 항상</target>
        </trans-unit>
        <trans-unit id="6543f3ae8cc8d0f4ecf6af6936c8cc103b0e7694" translate="yes" xml:space="preserve">
          <source>is  on all objects too.</source>
          <target state="translated">모든 개체에도 있습니다.</target>
        </trans-unit>
        <trans-unit id="02f01993fefb255090bbe97076d07ad538c2348a" translate="yes" xml:space="preserve">
          <source>is an older alias for this environment variable,
supported for backwards compatibility.</source>
          <target state="translated">이전 버전과의 호환성을 위해 지원되는이 환경 변수의 이전 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="e5cd309fc4935b3b5be6e710a5149120ad53aea7" translate="yes" xml:space="preserve">
          <source>is generally useful, allowing configuration values to be
tested in</source>
          <target state="translated">일반적으로 유용하며 구성 값을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73e1cb4544c8a22420f91523469db0c2ebb75598" translate="yes" xml:space="preserve">
          <source>is intended to be run at build time. It generates a C header from
the configuration and (optionally) information that can be used to rebuild only
files that reference Kconfig symbols that have changed value.</source>
          <target state="translated">빌드시 실행되도록되어 있습니다. 값이 변경된 Kconfig 기호를 참조하는 파일 만 다시 빌드하는 데 사용할 수있는 구성 및 정보 (선택 사항)에서 C 헤더를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4f25a1d35546d2df5b3c90a13b3dd20caf819138" translate="yes" xml:space="preserve">
          <source>is no longer automatically installed on Windows</source>
          <target state="translated">Windows에 더 이상 자동으로 설치되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="47a49a1d72c9fcd66708109e51aaa4fe6f05a013" translate="yes" xml:space="preserve">
          <source>is not available in the</source>
          <target state="translated">에서 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="d6d3fd6265e5cd2230a230887b587220772b9344" translate="yes" xml:space="preserve">
          <source>is outdated. Otherwise, it might be necessary to run</source>
          <target state="translated">구식입니다. 그렇지 않으면 실행해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="940059c7dc8418c7b5637859fb51f5855f3de369" translate="yes" xml:space="preserve">
          <source>is overwritten, the previous version of the file is saved
to</source>
          <target state="translated">덮어 쓰여지면 파일의 이전 버전이</target>
        </trans-unit>
        <trans-unit id="59e7a1a3357f85d9d3adbbb66bae04ed783a0df8" translate="yes" xml:space="preserve">
          <source>is set on some other symbol.</source>
          <target state="translated">다른 기호에 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b814afaf7d2ce26a92998f77480e3ae5ee2a663" translate="yes" xml:space="preserve">
          <source>is still supported.</source>
          <target state="translated">여전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9ea3ddea75160b3fecedc0a48daed2ad492bac4b" translate="yes" xml:space="preserve">
          <source>is used as well.</source>
          <target state="translated">사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0221ed6ad6ee15896aaa889de589027e65711cfc" translate="yes" xml:space="preserve">
          <source>is used to force certain symbols
to</source>
          <target state="translated">특정 기호를 강제하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d0b6ebca5096fd7195500796cf768431133f9efb" translate="yes" xml:space="preserve">
          <source>is useful in projects that only have a single
Kconfig tree though.</source>
          <target state="translated">그러나 Kconfig 트리가 하나만있는 프로젝트에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d40dc065d2b291844834c4706376fe966a4c4c22" translate="yes" xml:space="preserve">
          <source>kconfiglib.py</source>
          <target state="translated">kconfiglib.py</target>
        </trans-unit>
        <trans-unit id="b0e0595272ec83057e1eda3ea09ec01d5bedaff7" translate="yes" xml:space="preserve">
          <source>keyword.</source>
          <target state="translated">예어.</target>
        </trans-unit>
        <trans-unit id="68fe7a10558622aaa9ba76cc57a61ad60485868b" translate="yes" xml:space="preserve">
          <source>linux-next</source>
          <target state="translated">리눅스 다음</target>
        </trans-unit>
        <trans-unit id="0c3c153f562e6184176ac727dc5506a49c437d82" translate="yes" xml:space="preserve">
          <source>listnewconfig</source>
          <target state="translated">listnewconfig</target>
        </trans-unit>
        <trans-unit id="25caa6fa9695d8b2aff537cbb92980cf4064d61f" translate="yes" xml:space="preserve">
          <source>loops.</source>
          <target state="translated">루프.</target>
        </trans-unit>
        <trans-unit id="973b6ef48c65b63883ddbce069c3f69d829f7bb9" translate="yes" xml:space="preserve">
          <source>mainmenu</source>
          <target state="translated">메인 메뉴</target>
        </trans-unit>
        <trans-unit id="5821eb27d7b71c9078000da31a5a654c97e401b9" translate="yes" xml:space="preserve">
          <source>make</source>
          <target state="translated">하다</target>
        </trans-unit>
        <trans-unit id="1e8307bd6866c197099dfc90e7a9e26f3acf11fe" translate="yes" xml:space="preserve">
          <source>make
scriptconfig</source>
          <target state="translated">scriptconfig 만들기</target>
        </trans-unit>
        <trans-unit id="9aec5fc4ec99a384dc0ac6b848f5f3d15e479574" translate="yes" xml:space="preserve">
          <source>make allnoconfig</source>
          <target state="translated">allnoconfig 만들기</target>
        </trans-unit>
        <trans-unit id="675c9ffee90570e8f92035936650b5beaabfc7e8" translate="yes" xml:space="preserve">
          <source>make allyesconfig</source>
          <target state="translated">allyesconfig 만들기</target>
        </trans-unit>
        <trans-unit id="5e6b6057e72eb893bd9c718d31ff31f3694f9e4d" translate="yes" xml:space="preserve">
          <source>make iscriptconfig</source>
          <target state="translated">iscriptconfig 만들기</target>
        </trans-unit>
        <trans-unit id="ff6fcb4beadb4d7c647fcf766e35eb8cda1fa72b" translate="yes" xml:space="preserve">
          <source>make menuconfig</source>
          <target state="translated">menuconfig 만들기</target>
        </trans-unit>
        <trans-unit id="96d8d1523e8877115f5eb65c2a5d210aa1e591ac" translate="yes" xml:space="preserve">
          <source>menuconfig</source>
          <target state="translated">menuconfig</target>
        </trans-unit>
        <trans-unit id="255f8ac1b72cfca65f4523f9bdaf0f9216e86219" translate="yes" xml:space="preserve">
          <source>menuconfig.py</source>
          <target state="translated">menuconfig.py</target>
        </trans-unit>
        <trans-unit id="2326828b961e96cfadbdf9e532c94675472e7fbb" translate="yes" xml:space="preserve">
          <source>methods are deliberately implemented
with just public APIs, so all symbol information can be fetched separately as
well.</source>
          <target state="translated">메소드는 의도적으로 공용 API로 구현되므로 모든 기호 정보를 별도로 가져올 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="40a7d9e5e84aea1705f95eafd8391e0b906030b2" translate="yes" xml:space="preserve">
          <source>might give you an idea of how it all fits together.</source>
          <target state="translated">이 모든 것이 어떻게 결합되는지에 대한 아이디어를 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="132199f5246ff992a8eb0a7821c2105208358222" translate="yes" xml:space="preserve">
          <source>module can&amp;rsquo;t be imported on Windows.</source>
          <target state="translated">모듈은 Windows에서 가져올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="73cf2e4e181b5d347a7d505c0707e1935845cb52" translate="yes" xml:space="preserve">
          <source>module on Python 2).</source>
          <target state="translated">Python 2의 모듈).</target>
        </trans-unit>
        <trans-unit id="a21867509c883fff7a024de5f5d5839d06e9f445" translate="yes" xml:space="preserve">
          <source>module.</source>
          <target state="translated">기준 치수.</target>
        </trans-unit>
        <trans-unit id="b59eedfb2e6be7d8f5eb7202a0acce9c52b53943" translate="yes" xml:space="preserve">
          <source>modules is not available by default, but support
can be added by installing the</source>
          <target state="translated">모듈은 기본적으로 사용할 수 없지만 다음을 설치하여 지원을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">엔</target>
        </trans-unit>
        <trans-unit id="3d1aa9a54258a2099f9514236020c4d158cefd21" translate="yes" xml:space="preserve">
          <source>now shows a hint re. installing</source>
          <target state="translated">이제 다시 힌트를 보여줍니다. 설치</target>
        </trans-unit>
        <trans-unit id="5214ab13657992fcd99fe6fab7e39205bc88bdcd" translate="yes" xml:space="preserve">
          <source>often isn&amp;rsquo;t
included by default in Python installations on Linux. These commands will
install it on a few different distributions:</source>
          <target state="translated">Linux의 Python 설치에는 기본적으로 포함되지 않는 경우가 많습니다. 이 명령은 몇 가지 다른 배포판에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="2d489d8e2f4d5dfa4af9e128ee1a1de2df9e3827" translate="yes" xml:space="preserve">
          <source>old(def)config</source>
          <target state="translated">이전 (def) 구성</target>
        </trans-unit>
        <trans-unit id="85b9bbcff326e37acd8be9fb8d79797bf57d6809" translate="yes" xml:space="preserve">
          <source>oldconfig</source>
          <target state="translated">oldconfig</target>
        </trans-unit>
        <trans-unit id="54e66f5c1d699cb1fd03570032fd14582e5ada41" translate="yes" xml:space="preserve">
          <source>olddefconfig</source>
          <target state="translated">olddefconfig</target>
        </trans-unit>
        <trans-unit id="03675f45f932dd0a447a010757e84eab04ebc34f" translate="yes" xml:space="preserve">
          <source>only ran under Python 3
(i.e., it&amp;rsquo;s now more backwards compatible than before).</source>
          <target state="translated">Python 3에서만 실행되었습니다 (즉, 이전보다 이전 버전과 더 호환 됨).</target>
        </trans-unit>
        <trans-unit id="f77a1fda03e2cf5765218cd2af81ebce188b15c0" translate="yes" xml:space="preserve">
          <source>option and fixing an obscure issue
with</source>
          <target state="translated">옵션 및 모호한 문제 수정</target>
        </trans-unit>
        <trans-unit id="7d7ebecd95e65395ec83dccdb1bbc7d8b6305e84" translate="yes" xml:space="preserve">
          <source>option env</source>
          <target state="translated">옵션 환경</target>
        </trans-unit>
        <trans-unit id="0ff22291ae53fdb211e82fb356b4986bd2fc17b0" translate="yes" xml:space="preserve">
          <source>option modules</source>
          <target state="translated">옵션 모듈</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="2a7991ad3dc8ce4d1428261e6e12f781bfd9f517" translate="yes" xml:space="preserve">
          <source>orsource</source>
          <target state="translated">orsource</target>
        </trans-unit>
        <trans-unit id="174a80ab361c7e26b5c2f44a0a6cf559196f3212" translate="yes" xml:space="preserve">
          <source>osource</source>
          <target state="translated">osource</target>
        </trans-unit>
        <trans-unit id="5f8d58a0748dc6fdab29cfd09e9b8ab7ad5caefb" translate="yes" xml:space="preserve">
          <source>output):</source>
          <target state="translated">산출):</target>
        </trans-unit>
        <trans-unit id="eead277db733b1ceffd46c6bf8b1f05145dec5da" translate="yes" xml:space="preserve">
          <source>overhead from</source>
          <target state="translated">오버 헤드</target>
        </trans-unit>
        <trans-unit id="feac2e72858e6aacadfda0ac55b74ac3719313cb" translate="yes" xml:space="preserve">
          <source>package:</source>
          <target state="translated">꾸러미:</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="d843b2b373b280344e5bb998871aefdfee33d6e5" translate="yes" xml:space="preserve">
          <source>pip(3)</source>
          <target state="translated">핍 (3)</target>
        </trans-unit>
        <trans-unit id="3dc5769109c9f528c28e3ca53e2b4d97e8f965a9" translate="yes" xml:space="preserve">
          <source>pip(3) show -f kconfiglib</source>
          <target state="translated">pip (3) show -f kconfiglib</target>
        </trans-unit>
        <trans-unit id="f231fe713a814573e59ead4384fb97cba7ea970a" translate="yes" xml:space="preserve">
          <source>predates</source>
          <target state="translated">이전</target>
        </trans-unit>
        <trans-unit id="1a85a0a659a4656cc9746a398f6fc791b9497f9a" translate="yes" xml:space="preserve">
          <source>print_tree.py</source>
          <target state="translated">print_tree.py</target>
        </trans-unit>
        <trans-unit id="9fff0608d5a400c4066674d2404eb7b3be41714e" translate="yes" xml:space="preserve">
          <source>property has some tips as
well.</source>
          <target state="translated">속성에도 몇 가지 팁이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ee8a98b8b43cc28cd8fa4d6a694515c52b3849f" translate="yes" xml:space="preserve">
          <source>property). If you come up with something you think
might be useful to other people, I&amp;rsquo;m happy to take it in upstream. Batteries
included and all that.</source>
          <target state="translated">특성). 다른 사람에게 유용 할 것이라고 생각되는 무언가를 생각해 내면이를 업스트림으로 가져갈 수있어서 기쁩니다. 배터리 포함 및 모든 것.</target>
        </trans-unit>
        <trans-unit id="8d929e8306a95ce56b49c95e443240d475357953" translate="yes" xml:space="preserve">
          <source>pymenuconfig</source>
          <target state="translated">pymenuconfig</target>
        </trans-unit>
        <trans-unit id="80dd0a3e16d05b975a9fa37f27c78d7608caf7ae" translate="yes" xml:space="preserve">
          <source>python3</source>
          <target state="translated">python3</target>
        </trans-unit>
        <trans-unit id="4c9cc32c9afb56123eb47fd35c28d2512e471042" translate="yes" xml:space="preserve">
          <source>rsource</source>
          <target state="translated">rsource</target>
        </trans-unit>
        <trans-unit id="f645ad4a87fed234d36fd40a453a9744b1bf101b" translate="yes" xml:space="preserve">
          <source>runs under both Python 2
and Python 3 (previously, it only ran under Python 3, so this was a
backport). Running it under Python 3 provides better support for Unicode text
entry (</source>
          <target state="translated">Python 2와 Python 3 모두에서 실행됩니다 (이전에는 Python 3에서만 실행되었으므로 백 포트였습니다). Python 3에서 실행하면 유니 코드 텍스트 입력 (</target>
        </trans-unit>
        <trans-unit id="59e95f55d512a2a52da5003d8de3ce2810db59a1" translate="yes" xml:space="preserve">
          <source>s (that didn&amp;rsquo;t affect correctness but
made outputs differ).</source>
          <target state="translated">s (정확성에 영향을주지 않았지만 출력이 달라짐).</target>
        </trans-unit>
        <trans-unit id="defc8dac9e25395a4440e798744237b664529c41" translate="yes" xml:space="preserve">
          <source>s inside</source>
          <target state="translated">s 내부</target>
        </trans-unit>
        <trans-unit id="437d758d7b1d2174a87446c2d86469a342c0390f" translate="yes" xml:space="preserve">
          <source>savedefconfig</source>
          <target state="translated">savedefconfig</target>
        </trans-unit>
        <trans-unit id="28b8c79625dba1fef0c582724a9effee72b78f50" translate="yes" xml:space="preserve">
          <source>scripts/basic/fixdep.c</source>
          <target state="translated">scripts / basic / fixdep.c</target>
        </trans-unit>
        <trans-unit id="083c91c706e01d17c998271f37ad978c71e4d35f" translate="yes" xml:space="preserve">
          <source>scripts/kconfig/merge_config.sh</source>
          <target state="translated">scripts / kconfig / merge_config.sh</target>
        </trans-unit>
        <trans-unit id="fcbdc4c271c889825d8338d2d8f10b6e5e95c171" translate="yes" xml:space="preserve">
          <source>session</source>
          <target state="translated">세션</target>
        </trans-unit>
        <trans-unit id="a73407d00357be740b322fcd5d8e3b9faeb80680" translate="yes" xml:space="preserve">
          <source>setconfig</source>
          <target state="translated">setconfig</target>
        </trans-unit>
        <trans-unit id="045a437c8a79c72805e0d614cffba3ed8ede5a18" translate="yes" xml:space="preserve">
          <source>soon.</source>
          <target state="translated">곧.</target>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">출처</target>
        </trans-unit>
        <trans-unit id="bd4b24832c75ba5d61792b54e091cbc8dceec6b1" translate="yes" xml:space="preserve">
          <source>statement (</source>
          <target state="translated">문 (</target>
        </trans-unit>
        <trans-unit id="46f35633bc1d5cf225e126c23f2bb5c5076667fc" translate="yes" xml:space="preserve">
          <source>statement is available as well, analogous to</source>
          <target state="translated">성명도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe758b5ed0f1e9728fd230806bd872c1bfb75216" translate="yes" xml:space="preserve">
          <source>statement is available for cases where it&amp;rsquo;s okay for
the pattern to match no files (in which case</source>
          <target state="translated">문은 패턴이 파일과 일치하지 않아도 괜찮은 경우에 사용할 수 있습니다 (이 경우</target>
        </trans-unit>
        <trans-unit id="8a1f7673938d4a2f100c366836562d6a69ce476a" translate="yes" xml:space="preserve">
          <source>statements with no runtime overhead.</source>
          <target state="translated">런타임 오버 헤드가없는 문.</target>
        </trans-unit>
        <trans-unit id="2fc72607acf2cfb23a2fba1d8f1a91eded75814c" translate="yes" xml:space="preserve">
          <source>statements, meaning</source>
          <target state="translated">진술, 의미</target>
        </trans-unit>
        <trans-unit id="351eb7019c1640acf10c265cc31c377fd68443b5" translate="yes" xml:space="preserve">
          <source>stderr</source>
          <target state="translated">stderr</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">끈</target>
        </trans-unit>
        <trans-unit id="12814e2232fa95730c84d77e0bca43feb376a91a" translate="yes" xml:space="preserve">
          <source>sudo apt install python-tk</source>
          <target state="translated">sudo apt install python-tk</target>
        </trans-unit>
        <trans-unit id="8862fcec0c0b250d74d7b65f128b9d08a133c9d6" translate="yes" xml:space="preserve">
          <source>sudo apt install python3-tk</source>
          <target state="translated">sudo apt 설치 python3-tk</target>
        </trans-unit>
        <trans-unit id="3f972e772c5d6ff383e19255d85a8dcc1ec0e1e3" translate="yes" xml:space="preserve">
          <source>sudo pacman -S tk</source>
          <target state="translated">sudo 팩맨 -S tk</target>
        </trans-unit>
        <trans-unit id="50d4459b4b37469f9c6396a4b0704775b373f190" translate="yes" xml:space="preserve">
          <source>sudo swupd bundle-addpython3-tcl</source>
          <target state="translated">sudo swupd bundle-addpython3-tcl</target>
        </trans-unit>
        <trans-unit id="c1318a7f9371901b951088e8aa8d4b32537cb68d" translate="yes" xml:space="preserve">
          <source>support. It wouldn&amp;rsquo;t be that
hard to add.</source>
          <target state="translated">지원하다. 추가하기가 그렇게 어렵지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="9bfc2fa6e0821cb5ba830ad68b5540e8d4c56bb2" translate="yes" xml:space="preserve">
          <source>supports glob patterns and includes each matching file. A pattern
is required to match at least one file.</source>
          <target state="translated">glob 패턴을 지원하고 일치하는 각 파일을 포함합니다. 하나 이상의 파일과 일치하려면 패턴이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8de36e1b36c58cda33b5d1eb397a863ab63996a2" translate="yes" xml:space="preserve">
          <source>symbol always
matched the environment variable. Compatibility with older Linux kernels is
the main reason</source>
          <target state="translated">기호는 항상 환경 변수와 일치합니다. 이전 Linux 커널과의 호환성이 주된 이유입니다.</target>
        </trans-unit>
        <trans-unit id="b74d01cfb4598a055486ac8a4f3ec6aa3d0f6299" translate="yes" xml:space="preserve">
          <source>symbols are accepted but ignored, which leads the caveat that
they must have the same name as the environment variables they reference
(Kconfiglib warns if the names differ). This keeps Kconfiglib compatible with
older Linux kernels, where the name of the</source>
          <target state="translated">기호는 허용되지만 무시되므로 참조하는 환경 변수와 이름이 동일해야한다는 경고가 발생합니다 (Kconfiglib는 이름이 다를 경우 경고합니다). 이렇게하면 Kconfiglib가 이전 Linux 커널과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="ce1d4fef47f5fa7258d03341ca4867aee498c194" translate="yes" xml:space="preserve">
          <source>symbols are redundant.</source>
          <target state="translated">기호는 중복됩니다.</target>
        </trans-unit>
        <trans-unit id="6444eaec199311852fb077b30a17db6b31f120eb" translate="yes" xml:space="preserve">
          <source>symbols to be given a type and a default at the same time.</source>
          <target state="translated">유형과 기본값을 동시에 제공 할 기호.</target>
        </trans-unit>
        <trans-unit id="cb82c0e324e5f33cdbd849628d3651ef47340f9d" translate="yes" xml:space="preserve">
          <source>sync_deps()</source>
          <target state="translated">sync_deps ()</target>
        </trans-unit>
        <trans-unit id="db08f34074e1cf182023241822bb5fdfc1839fcc" translate="yes" xml:space="preserve">
          <source>tkinter</source>
          <target state="translated">Tkinter</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="3eb6e95cb2489f6533bd1e3ec53ebbe912630fcc" translate="yes" xml:space="preserve">
          <source>to generate a header file. By default, it is saved as</source>
          <target state="translated">헤더 파일을 생성합니다. 기본적으로 다음과 같이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="64d2aa8253f6cd976e9a1f0834ed01728243488b" translate="yes" xml:space="preserve">
          <source>to generate incremental build information, you can
include</source>
          <target state="translated">증분 빌드 정보를 생성하려면 다음을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecf3c14f05631910648d9366eb4147191496a976" translate="yes" xml:space="preserve">
          <source>to improve coverage.</source>
          <target state="translated">적용 범위를 개선합니다.</target>
        </trans-unit>
        <trans-unit id="37650b029ce53f24f94f31516b82ea6e0dfc1760" translate="yes" xml:space="preserve">
          <source>to the command to
discard</source>
          <target state="translated">버리라는 명령에</target>
        </trans-unit>
        <trans-unit id="3dc95e370b4161ae14fc2be2e850d7266815e749" translate="yes" xml:space="preserve">
          <source>to work.</source>
          <target state="translated">일하다.</target>
        </trans-unit>
        <trans-unit id="c01eac1c3c32996edeea483c2d680787a7a172cb" translate="yes" xml:space="preserve">
          <source>tool from the kernel on the output of</source>
          <target state="translated">의 출력에 대한 커널의 도구</target>
        </trans-unit>
        <trans-unit id="5729e18494cb61c4480818393512e124a0257e3a" translate="yes" xml:space="preserve">
          <source>tristate</source>
          <target state="translated">삼국</target>
        </trans-unit>
        <trans-unit id="f01944640cb5896a19bc1d3c9e7c648d2418e44a" translate="yes" xml:space="preserve">
          <source>turns into a no-op).</source>
          <target state="translated">작동하지 않음).</target>
        </trans-unit>
        <trans-unit id="cdf265f78e974437638686206eb9b08802fdaaa0" translate="yes" xml:space="preserve">
          <source>utility can be used to
generate the initial configuration from an existing configuration file.
Usually, this existing configuration file would be a minimal configuration
file, as generated by e.g.</source>
          <target state="translated">유틸리티를 사용하여 기존 구성 파일에서 초기 구성을 생성 할 수 있습니다. 일반적으로이 기존 구성 파일은 예를 들어 생성 된 최소 구성 파일입니다.</target>
        </trans-unit>
        <trans-unit id="14779f946b932681a83f05ecd3299d2d5712e58f" translate="yes" xml:space="preserve">
          <source>v14.1.0</source>
          <target state="translated">v14.1.0</target>
        </trans-unit>
        <trans-unit id="f4b829edc411a6bc6cadc8c39d843c0621924c05" translate="yes" xml:space="preserve">
          <source>values are written out as</source>
          <target state="translated">값은 다음과 같이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="ba9a8ff702b112995e6a272d3b17355039bd0520" translate="yes" xml:space="preserve">
          <source>when the</source>
          <target state="translated">때</target>
        </trans-unit>
        <trans-unit id="c4f88bee9a184178eaccfe444353b61249bc26fe" translate="yes" xml:space="preserve">
          <source>will work when they&amp;rsquo;re run as executables):</source>
          <target state="translated">실행 파일로 실행될 때 작동합니다) :</target>
        </trans-unit>
        <trans-unit id="b8d918f7c0519308166de75b82efda6452bcaa62" translate="yes" xml:space="preserve">
          <source>windows-curses</source>
          <target state="translated">창문 저주</target>
        </trans-unit>
        <trans-unit id="0eda9e4161787cb237aa18f2f42a81ec90cc5407" translate="yes" xml:space="preserve">
          <source>with unnumbered</source>
          <target state="translated">번호가없는</target>
        </trans-unit>
        <trans-unit id="e5bb0c8d87715dd3284f7503ccf9a17496ba2a9d" translate="yes" xml:space="preserve">
          <source>won&amp;rsquo;t work on Windows
unless a package like &lt;a href=&quot;https://github.com/zephyrproject-rtos/windows-curses&quot;&gt;windows-curses&lt;/a&gt; is installed.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zephyrproject-rtos/windows-curses&quot;&gt;windows-curses&lt;/a&gt; 와 같은 패키지 가 설치되어 있지 않으면 Windows에서 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="151cb1fe933d72fcbfc144eab52b23b978a5c712" translate="yes" xml:space="preserve">
          <source>would be run automatically as part of the build.</source>
          <target state="translated">빌드의 일부로 자동으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="f74df640d948bd1f24d6382c8b8cfed31935ae00" translate="yes" xml:space="preserve">
          <source>write_autoconf()</source>
          <target state="translated">write_autoconf ()</target>
        </trans-unit>
        <trans-unit id="7b50b49aa93f1f6ab80f329e63bb1128d3de8cd0" translate="yes" xml:space="preserve">
          <source>write_config()</source>
          <target state="translated">write_config ()</target>
        </trans-unit>
        <trans-unit id="5a21ba73ad8980e5b3a7cfff3e9623aabf32b1f3" translate="yes" xml:space="preserve">
          <source>xconfig</source>
          <target state="translated">xconfig</target>
        </trans-unit>
        <trans-unit id="95cb0bfd2977c761298d9624e4b4d4c72a39974a" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="translated">와이</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
