<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/asn1ate/">
    <body>
      <group id="asn1ate">
        <trans-unit id="571e45aab407b8f6cabccf0399d27094e2d021de" translate="yes" xml:space="preserve">
          <source>&amp;ndash; a code generator to transform a semantic model into</source>
          <target state="translated">&amp;ndash; 의미 론적 모델을 다음으로 변환하는 코드 생성기</target>
        </trans-unit>
        <trans-unit id="a94b847949ea06f42027b25aa8223ab8e59d7a6e" translate="yes" xml:space="preserve">
          <source>&amp;ndash; a semantic ASN.1 object model, which can be constructed from
the AST generated by</source>
          <target state="translated">-의미 론적 ASN.1 객체 모델, 이는 다음에 의해 생성 된 AST로부터 구성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2a8150af55db3899aea97e386bffd5ffced4f0c" translate="yes" xml:space="preserve">
          <source>&amp;ndash; a support library for generating Python code.</source>
          <target state="translated">&amp;ndash; Python 코드 생성을위한 지원 라이브러리.</target>
        </trans-unit>
        <trans-unit id="45088e7984ba2c553d17c7aa93f00691285e4e99" translate="yes" xml:space="preserve">
          <source>&amp;ndash; a tokenizing parser for ASN.1 per X.680. It currently
recognizes a naive sub-set of X.680</source>
          <target state="translated">&amp;ndash; X.680 당 ASN.1에 대한 토큰 화 파서. 현재 X.680의 순진한 하위 집합을 인식합니다.</target>
        </trans-unit>
        <trans-unit id="4f1e0b84295463a6ab89a5d3a28ec9df95396448" translate="yes" xml:space="preserve">
          <source>) which may be annotated tokens, lists or
simple values. This gives a very discoverable tree structure, but there are
probably cleaner AST representations we could use. Patches welcome.</source>
          <target state="translated">) 주석이 달린 토큰, 목록 또는 단순 값일 수 있습니다. 이것은 매우 발견 가능한 트리 구조를 제공하지만 우리가 사용할 수있는 더 깨끗한 AST 표현이있을 것입니다. 패치를 환영합니다.</target>
        </trans-unit>
        <trans-unit id="3b7e0caaa63f055b8970b56ce5c835ed59f256ce" translate="yes" xml:space="preserve">
          <source>, etc. I&amp;rsquo;ve tried to stay with token types as named in X.680,
but added custom ones or suppressed others, as necessary to get the AST in a
useful shape.</source>
          <target state="translated">, 등등. 나는 X.680에서 명명 된 토큰 유형을 유지하려고 노력했지만 AST를 유용한 모양으로 만들기 위해 필요에 따라 사용자 정의 유형을 추가하거나 다른 유형을 억제했습니다.</target>
        </trans-unit>
        <trans-unit id="54a18277e5ff67c1db0738adb7e0a0363d802a31" translate="yes" xml:space="preserve">
          <source>ASN.1 grammar is very incomplete in some places. Known issues:</source>
          <target state="translated">ASN.1 문법은 어떤 곳에서는 매우 불완전합니다. 알려진 문제 :</target>
        </trans-unit>
        <trans-unit id="6691fc303043458a2f09c82a86affecd221a5ecf" translate="yes" xml:space="preserve">
          <source>ASN.1 translation library.</source>
          <target state="translated">ASN.1 번역 라이브러리.</target>
        </trans-unit>
        <trans-unit id="3951c0492234d5b398466279e7515923d5135521" translate="yes" xml:space="preserve">
          <source>Allow for semantic analysis, e.g. validity check, warnings for problematic
constructs, etc.</source>
          <target state="translated">의미 분석 (예 : 유효성 검사, 문제 구조에 대한 경고 등)을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="657d445772eda12dc2c400c14f0bf35d94315b87" translate="yes" xml:space="preserve">
          <source>Although</source>
          <target state="translated">이기는 하지만</target>
        </trans-unit>
        <trans-unit id="4b11ef8ee66b28b74201bb9fe53ee3fe1030bb15" translate="yes" xml:space="preserve">
          <source>Annotated tokens are represented by a simple class containing the type name and
a list of children (called</source>
          <target state="translated">주석이 달린 토큰은 유형 이름과 하위 목록 (</target>
        </trans-unit>
        <trans-unit id="d01b7bc2d8bcb3e8147c5617d5cc44c01b525846" translate="yes" xml:space="preserve">
          <source>But</source>
          <target state="translated">그러나</target>
        </trans-unit>
        <trans-unit id="09dbd187de708ee21b01806ae5b0ca883102654a" translate="yes" xml:space="preserve">
          <source>Caveat</source>
          <target state="translated">경고</target>
        </trans-unit>
        <trans-unit id="a330c116e4781378ce5d2c5b40a07241f6c62827" translate="yes" xml:space="preserve">
          <source>Caveat #2</source>
          <target state="translated">주의 사항 # 2</target>
        </trans-unit>
        <trans-unit id="2cf607d3f7484b97c8cad2ce8995f426d04befc1" translate="yes" xml:space="preserve">
          <source>Codegen is designed to be extensible. In-house we have a set of code generators
to build an entire protocol stack based on an ASN.1 source, but</source>
          <target state="translated">Codegen은 확장 가능하도록 설계되었습니다. 사내에는 ASN.1 소스를 기반으로 전체 프로토콜 스택을 구축하기위한 일련의 코드 생성기가 있지만</target>
        </trans-unit>
        <trans-unit id="8a2dbed3556dab0f87d467f44173b6d04d3ee887" translate="yes" xml:space="preserve">
          <source>Constraint syntax is currently limited to simple value range constraints (&lt;a&gt;ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12.asn&lt;/a&gt;, line 53)</source>
          <target state="translated">제약 조건 구문은 현재 단순 값 범위 제약 조건으로 제한됩니다 ( &lt;a&gt;ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12.asn&lt;/a&gt; , 53 행).</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="ca5ffa1ff2511b4bf15f18d7a672a126f9977950" translate="yes" xml:space="preserve">
          <source>Design notes</source>
          <target state="translated">디자인 노트</target>
        </trans-unit>
        <trans-unit id="e6a08932b02900c378ed8f2443565b23e2fd9de6" translate="yes" xml:space="preserve">
          <source>HACK/TODO/BUGs need to be fixed</source>
          <target state="translated">해킹 / 할 일 / 버그를 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">식별자</target>
        </trans-unit>
        <trans-unit id="28bb68ab714045aed596521cb5792683e4219579" translate="yes" xml:space="preserve">
          <source>Improve parser error handling/reporting</source>
          <target state="translated">파서 오류 처리 /보고 개선</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="dc09174623059acd5cd9d66593c44d11f0459220" translate="yes" xml:space="preserve">
          <source>It will print the</source>
          <target state="translated">그것은 인쇄 할 것입니다</target>
        </trans-unit>
        <trans-unit id="0c2458d1e22f02ee19d5838076ea86d643732eb3" translate="yes" xml:space="preserve">
          <source>My understanding of ASN.1 syntax and semantics is limited. As I learn and
discover more, the design &lt;em&gt;will&lt;/em&gt; change. I will always prioritize a better model
before API stability for the foreseeable future.</source>
          <target state="translated">ASN.1 구문과 의미에 대한 나의 이해는 제한적입니다. 더 많이 배우고 발견하면 디자인 &lt;em&gt;이&lt;/em&gt; 바뀔 것입니다. 가까운 장래에 API 안정성보다 항상 더 나은 모델을 우선시 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="2681c331cd632722965d38c3bdd2e6a28a27d0f2" translate="yes" xml:space="preserve">
          <source>Python 2.7.14</source>
          <target state="translated">파이썬 2.7.14</target>
        </trans-unit>
        <trans-unit id="7055dcf7d45b9806156569817b8ed9dcff76e6b1" translate="yes" xml:space="preserve">
          <source>Python 3.6.3</source>
          <target state="translated">파이썬 3.6.3</target>
        </trans-unit>
        <trans-unit id="8116cf2e5deeba45edfbd179719c0a40ef15d461" translate="yes" xml:space="preserve">
          <source>PythonFragment</source>
          <target state="translated">PythonFragment</target>
        </trans-unit>
        <trans-unit id="87271ccdc73f20850136948053eb13c07e18012f" translate="yes" xml:space="preserve">
          <source>PythonWriter</source>
          <target state="translated">PythonWriter</target>
        </trans-unit>
        <trans-unit id="c4122d205f8a35d8b7bc95aa77bbfb9594b6cd58" translate="yes" xml:space="preserve">
          <source>Reference syntax is not accepted at all (&lt;a&gt;ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12.asn&lt;/a&gt;, line 74)</source>
          <target state="translated">참조 구문이 전혀 허용되지 않습니다 ( &lt;a&gt;ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12.asn&lt;/a&gt; , 74 행).</target>
        </trans-unit>
        <trans-unit id="15ff3c7437a6d184ddd6c2db1d0f845f8bc8acc7" translate="yes" xml:space="preserve">
          <source>Regression test suite</source>
          <target state="translated">회귀 테스트 스위트</target>
        </trans-unit>
        <trans-unit id="2e4c80149db4be71c0f4e746d74570d0adbae232" translate="yes" xml:space="preserve">
          <source>So if you&amp;rsquo;re using</source>
          <target state="translated">따라서 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="dc32f6c90c360909cee07b8b5700534482aaa84a" translate="yes" xml:space="preserve">
          <source>The ASN.1 parser is very ad-hoc, I&amp;rsquo;ve experimented with the grammar until I
found something that accepted our proprietary ASN.1 definition. It&amp;rsquo;s based on</source>
          <target state="translated">ASN.1 파서는 매우 임시적입니다. 저는 우리의 독점적 인 ASN.1 정의를 수용하는 것을 찾을 때까지 문법을 실험했습니다. 기반으로</target>
        </trans-unit>
        <trans-unit id="6c37de459f216b9fce4d5032dcd4fb70a21bdb1c" translate="yes" xml:space="preserve">
          <source>The immediate use of</source>
          <target state="translated">즉시 사용</target>
        </trans-unit>
        <trans-unit id="79e5b028f16e41f59d2b9f61ce255d24bc26cde1" translate="yes" xml:space="preserve">
          <source>The in-tree</source>
          <target state="translated">인트 리</target>
        </trans-unit>
        <trans-unit id="8004b87b8703d8a6e72477f422980587bdfbb692" translate="yes" xml:space="preserve">
          <source>The most notable members of</source>
          <target state="translated">가장 주목할만한 회원</target>
        </trans-unit>
        <trans-unit id="8e42f674ded5de56d7d2bfb369021358adc313bb" translate="yes" xml:space="preserve">
          <source>The only third-party dependency is</source>
          <target state="translated">유일한 타사 종속성은</target>
        </trans-unit>
        <trans-unit id="708f04c399440860437a9fd9292c829ecc69f7cd" translate="yes" xml:space="preserve">
          <source>This is very much an alpha-quality prototype. Things that need doing:</source>
          <target state="translated">이것은 알파 품질의 프로토 타입입니다. 해야 할 일 :</target>
        </trans-unit>
        <trans-unit id="a0fe96089bffaaa2c67d4eeb68bb499e81099f15" translate="yes" xml:space="preserve">
          <source>TypeAssignment</source>
          <target state="translated">유형 할당</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="7eae353c56126eb30f48f1dcb0527e7de3b9c594" translate="yes" xml:space="preserve">
          <source>are probably the</source>
          <target state="translated">아마도</target>
        </trans-unit>
        <trans-unit id="3039a5064894d7c1e9be87a16b0d4662c29396fe" translate="yes" xml:space="preserve">
          <source>as a library for custom codegen, please be aware
that every release will likely break something for you.</source>
          <target state="translated">사용자 정의 코드 생성을위한 라이브러리로서 모든 릴리스가 당신을 위해 뭔가를 깨뜨릴 수 있다는 점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="f7b36a4bd6e0442a55ad3c60851398ef140aff3a" translate="yes" xml:space="preserve">
          <source>asn1ate</source>
          <target state="translated">asn1ate</target>
        </trans-unit>
        <trans-unit id="afdf9bcd66cc73b751adcc738a68958d32115530" translate="yes" xml:space="preserve">
          <source>asn1ate &amp;ndash; ASN.1 translation library.
Copyright 2013-2017 Schneider Electric Buildings AB</source>
          <target state="translated">asn1ate &amp;ndash; ASN.1 번역 라이브러리. 저작권 2013-2017 Schneider Electric Buildings AB</target>
        </trans-unit>
        <trans-unit id="7d5dd1b6d7895b6adc3d735cda9ad9b1793758a9" translate="yes" xml:space="preserve">
          <source>asn1ate.parser</source>
          <target state="translated">asn1ate.parser</target>
        </trans-unit>
        <trans-unit id="6a226c7ba1a173baa9e2487df069e80ca64bd635" translate="yes" xml:space="preserve">
          <source>asn1ate.pyasn1gen</source>
          <target state="translated">asn1ate.pyasn1gen</target>
        </trans-unit>
        <trans-unit id="fe717a18499ef617f8fa341c08fbfb1b7dd9ecf4" translate="yes" xml:space="preserve">
          <source>asn1ate.sema</source>
          <target state="translated">asn1ate.sema</target>
        </trans-unit>
        <trans-unit id="778c322bc26718f6cb8027016dcdbc2a8db6811a" translate="yes" xml:space="preserve">
          <source>asn1ate.support</source>
          <target state="translated">asn1ate.support</target>
        </trans-unit>
        <trans-unit id="de37ac0f3225ed834aba56e6c12ef56457dc0878" translate="yes" xml:space="preserve">
          <source>but sets up parse actions to build an annotated AST. Every node of
interest is annotated with a string denoting its type, e.g.</source>
          <target state="translated">그러나 주석이 달린 AST를 빌드하기 위해 구문 분석 작업을 설정합니다. 관심있는 모든 노드는 유형을 나타내는 문자열로 주석 처리됩니다. 예 :</target>
        </trans-unit>
        <trans-unit id="8556cba12af06714c9a89399568b13c1d0c126b8" translate="yes" xml:space="preserve">
          <source>classes, which simplify generation of
correctly indented Python code.</source>
          <target state="translated">올바르게 들여 쓰기 된 Python 코드의 생성을 단순화하는 클래스.</target>
        </trans-unit>
        <trans-unit id="2d0b1672377c53b3ccf9115f4ef9ff2577b26113" translate="yes" xml:space="preserve">
          <source>code generator will be kept up-to-date, of course, and
may serve as an example of different codegen tasks,</source>
          <target state="translated">코드 생성기는 물론 최신 상태로 유지되며 다른 코드 생성 작업의 예가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63f810aec846d1e3e3035cc03578544e97466eb5" translate="yes" xml:space="preserve">
          <source>definitions from
ASN.1 definitions. The command to do this is:</source>
          <target state="translated">ASN.1 정의의 정의. 이를 수행하는 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6851b3982dec35e29a2f2f6d0b028f8311aa1a47" translate="yes" xml:space="preserve">
          <source>elements</source>
          <target state="translated">집단</target>
        </trans-unit>
        <trans-unit id="f637e9f9db007d567883c7d4bc6bfb84e796d433" translate="yes" xml:space="preserve">
          <source>equivalent of</source>
          <target state="translated">동등한</target>
        </trans-unit>
        <trans-unit id="faea2931f718be8cd4560331e4ef78a07cf732ae" translate="yes" xml:space="preserve">
          <source>into a more semantic model
with proper Python objects.</source>
          <target state="translated">적절한 Python 객체를 사용하여 더 의미 론적 모델로.</target>
        </trans-unit>
        <trans-unit id="23fc09c31b5ebc9fc7a2886e480c8d792ecbd661" translate="yes" xml:space="preserve">
          <source>is a Python library for translating ASN.1 into other forms.
It is intended for code generation from formal ASN.1 definitions, and a
code generator for</source>
          <target state="translated">ASN.1을 다른 형식으로 변환하기위한 Python 라이브러리입니다. 공식 ASN.1 정의에서 코드를 생성하고 다음을위한 코드 생성기입니다.</target>
        </trans-unit>
        <trans-unit id="f76d9b553fa79a60281c36f591624724923421eb" translate="yes" xml:space="preserve">
          <source>is also designed to be usable as a library, to allow reuse of
the ASN.1 parser for custom code generation.</source>
          <target state="translated">또한 사용자 지정 코드 생성을 위해 ASN.1 파서를 재사용 할 수 있도록 라이브러리로 사용할 수 있도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="c17aba6bda36f57d4b462d6f38a90bc488883e5d" translate="yes" xml:space="preserve">
          <source>is an object model that represents ASN.1 constructs. It
describes everything from type assignments to default values and tags, but still
only the parts of ASN.1 we happen to use here. Most of the logic revolves around
transforming the AST produced by</source>
          <target state="translated">ASN.1 구조를 나타내는 개체 모델입니다. 유형 할당부터 기본값 및 태그에 이르기까지 모든 것을 설명하지만 여기서는 ASN.1의 일부만 사용합니다. 대부분의 논리는 다음에 의해 생성 된 AST를 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="178e633698d208b094acdff510c254df2331c2f2" translate="yes" xml:space="preserve">
          <source>is included.</source>
          <target state="translated">포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6ede01d49ef9af0016769048a5ff512c656b27b0" translate="yes" xml:space="preserve">
          <source>is released under a 3-clause BSD license. For details, see
LICENSE.txt.</source>
          <target state="translated">3 절 BSD 라이선스로 출시됩니다. 자세한 내용은 LICENSE.txt를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="42b2472ddb7806532ac9d65a414dee84ab1f691b" translate="yes" xml:space="preserve">
          <source>is to generate</source>
          <target state="translated">생성하는 것입니다</target>
        </trans-unit>
        <trans-unit id="0990ff22748b1d3bea7c300bc559c160241d1963" translate="yes" xml:space="preserve">
          <source>only
includes the generally useful one,</source>
          <target state="translated">일반적으로 유용한 것만 포함합니다.</target>
        </trans-unit>
        <trans-unit id="405c644d7b77c9d55b81593cec798e837ebc3d8e" translate="yes" xml:space="preserve">
          <source>package is designed along the same lines as a compiler with a
driver, a parser, a semantic model and a convention for code generators.</source>
          <target state="translated">패키지는 드라이버, 파서, 시맨틱 모델 및 코드 생성기 규칙이있는 컴파일러와 동일한 라인을 따라 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="77854cb29b06a660365af1fea97a57a69df07acc" translate="yes" xml:space="preserve">
          <source>parser.py</source>
          <target state="translated">parser.py</target>
        </trans-unit>
        <trans-unit id="b5dcbc368ff67246cac71e75fd4b374c41deda35" translate="yes" xml:space="preserve">
          <source>pyasn1</source>
          <target state="translated">pyasn1</target>
        </trans-unit>
        <trans-unit id="d2583dbe62df0cfbc91709e93f2616dc04d6c4d6" translate="yes" xml:space="preserve">
          <source>pyasn1gen.py</source>
          <target state="translated">pyasn1gen.py</target>
        </trans-unit>
        <trans-unit id="b07843f08065a3c6e0b6d6d71a533e1fe4a5f303" translate="yes" xml:space="preserve">
          <source>pyparsing</source>
          <target state="translated">pyparsing</target>
        </trans-unit>
        <trans-unit id="e60b2f8b5495f0027eaa1228aa5ad6a86910efb4" translate="yes" xml:space="preserve">
          <source>sema.py</source>
          <target state="translated">sema.py</target>
        </trans-unit>
        <trans-unit id="8ac71600e61787bd24f8cf19f946e4fc010b228a" translate="yes" xml:space="preserve">
          <source>source.asn1</source>
          <target state="translated">source.asn1</target>
        </trans-unit>
        <trans-unit id="703be890d54e6c353c44d222d641982f3f169a7c" translate="yes" xml:space="preserve">
          <source>support/pygen.py</source>
          <target state="translated">support / pygen.py</target>
        </trans-unit>
        <trans-unit id="8a10ca4021fbb2ff66f6318f90dc6aab73a318c4" translate="yes" xml:space="preserve">
          <source>syntax. This can be used as a script in which case it will dump
output to stdout.</source>
          <target state="translated">통사론. 이것은 출력을 stdout에 덤프하는 스크립트로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f8ece0df5b1e720cbaf3b702dbb2d5c627db0ec" translate="yes" xml:space="preserve">
          <source>to stdout.</source>
          <target state="translated">stdout에.</target>
        </trans-unit>
        <trans-unit id="02316206fc8508c2cf5720998b83cb3ee6bbd8bf" translate="yes" xml:space="preserve">
          <source>was initially developed on Python 3.2, it has been tested
with Python 2.7 and should port to older Python versions easily. Latest release
tested with:</source>
          <target state="translated">처음에는 Python 3.2에서 개발되었으며 Python 2.7로 테스트되었으며 이전 Python 버전으로 쉽게 이식되어야합니다. 테스트 된 최신 릴리스 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
