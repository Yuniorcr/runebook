<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fbpygif/">
    <body>
      <group id="fbpygif">
        <trans-unit id="4bb923aa2c91851746b420d82668e39e60b744ee" translate="yes" xml:space="preserve">
          <source># FBpyGIF</source>
          <target state="translated"># FBpyGIF</target>
        </trans-unit>
        <trans-unit id="816c8a05a228e2dc8b095769e81e97d57cd72b89" translate="yes" xml:space="preserve">
          <source>## Description</source>
          <target state="translated">## 설명</target>
        </trans-unit>
        <trans-unit id="7e81eef3177d8f71b7892e9ecc465cf38fc4d9fa" translate="yes" xml:space="preserve">
          <source>### How to install</source>
          <target state="translated">### 설치하는 방법</target>
        </trans-unit>
        <trans-unit id="9ea91bb9a7993d00d0281cf5f6ed908dd38f20f8" translate="yes" xml:space="preserve">
          <source>### How to use</source>
          <target state="translated">### 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="547fb134895b29e002245595465d7630a30757f6" translate="yes" xml:space="preserve">
          <source>### Tested on</source>
          <target state="translated">### 테스트</target>
        </trans-unit>
        <trans-unit id="bc54c8539eb3a0dac84de1912acda56976fc7118" translate="yes" xml:space="preserve">
          <source>### To-do</source>
          <target state="translated">### 할 것</target>
        </trans-unit>
        <trans-unit id="4bd9d72befc52cb15338470d7c26a8f466969f1c" translate="yes" xml:space="preserve">
          <source>#### Features</source>
          <target state="translated">#### 기능</target>
        </trans-unit>
        <trans-unit id="af3219fea8b6bf72332ad31dc4430b50287cce11" translate="yes" xml:space="preserve">
          <source>#### Note</source>
          <target state="translated">#### 노트</target>
        </trans-unit>
        <trans-unit id="e9d95720e2200efbf8a8fbe12545f8743dd08dcd" translate="yes" xml:space="preserve">
          <source>#### Problem domain</source>
          <target state="translated">#### 문제 도메인</target>
        </trans-unit>
        <trans-unit id="0013ab1b287c9446bb85b809b2fbdb2e7b4e5bc3" translate="yes" xml:space="preserve">
          <source>- Archlinux (No, not with the ARM version on RPi, but the one on a vagrant VM)</source>
          <target state="translated">-Archlinux (아니요, RPi의 ARM 버전이 아니라 방랑 VM의 버전)</target>
        </trans-unit>
        <trans-unit id="34a560d38d65a656c9118bf862b27925bc12d2bf" translate="yes" xml:space="preserve">
          <source>- Latest Raspbian on Raspberry pi 2 B+</source>
          <target state="translated">-Raspberry pi 2 B +의 최신 Raspbian</target>
        </trans-unit>
        <trans-unit id="0b70d3d4c816a2d63972de4cac179177eecdf30a" translate="yes" xml:space="preserve">
          <source>- Library and script is written for Python &amp;gt;= 3.</source>
          <target state="translated">-라이브러리 및 스크립트는 Python&amp;gt; = 3 용으로 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="83a2391476dbcc4a7199d1edca157a76a118d1a1" translate="yes" xml:space="preserve">
          <source>- Ubuntu Mate Xenial on Odroid C2</source>
          <target state="translated">-Odroid C2의 Ubuntu Mate Xenial</target>
        </trans-unit>
        <trans-unit id="643537ba7930a623561db4629e48f1200221a8fd" translate="yes" xml:space="preserve">
          <source>- Utility</source>
          <target state="translated">-유틸리티</target>
        </trans-unit>
        <trans-unit id="47165d4d3a928a5662d85a0b2b643acab8d81438" translate="yes" xml:space="preserve">
          <source>- Writing directly to frame buffer driver needs superuser priviledge.</source>
          <target state="translated">-프레임 버퍼 드라이버에 직접 쓰기를하려면 수퍼 유저 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="46e5d7d0fc16763e9727e23c312e70d70830b79a" translate="yes" xml:space="preserve">
          <source>- [ ] Add more options to program</source>
          <target state="translated">-[] 프로그램에 더 많은 옵션 추가</target>
        </trans-unit>
        <trans-unit id="a3ccf9e070f34c8d9e18dae6d8cbc4f20812bde8" translate="yes" xml:space="preserve">
          <source>- [ ] Background loading of next animation file to reduce loading delay between them</source>
          <target state="translated">-[] 다음 애니메이션 파일의 백그라운드 로딩을 ​​통한 로딩 지연 감소</target>
        </trans-unit>
        <trans-unit id="764823f049045a6205efdaf6f45c1669f4603c86" translate="yes" xml:space="preserve">
          <source>- [ ] Bugfix with wrong ioctl command. `dmesg` shows `bcm2708_fb soc:fb: Unknown ioctl 0x5401`</source>
          <target state="translated">-[] 잘못된 ioctl 명령으로 버그 수정. `dmesg`는`bcm2708_fb soc : fb : Unknown ioctl 0x5401`을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7b09778f62f6a2dfb35904d392aab451852b31b0" translate="yes" xml:space="preserve">
          <source>- [ ] Layer support</source>
          <target state="translated">-[] 레이어 지원</target>
        </trans-unit>
        <trans-unit id="f22b60e1f047e0779863dcf37be472734da50c8c" translate="yes" xml:space="preserve">
          <source>- [ ] Optimize with setting screen to RGB mode by sending mailbox message (RGB_to_BGR function will be unused)</source>
          <target state="translated">-[] 메일 박스 메시지 전송으로 화면 설정을 RGB 모드로 최적화 (RGB_to_BGR 기능은 사용하지 않음)</target>
        </trans-unit>
        <trans-unit id="487f4352c4cd149c1043708650e08cc90f42d3d2" translate="yes" xml:space="preserve">
          <source>- [ ] Picture frame</source>
          <target state="translated">- [ ] 사진 프레임</target>
        </trans-unit>
        <trans-unit id="b1d9d4b5740eeb1bd9baec49e9ac6dbe45323e14" translate="yes" xml:space="preserve">
          <source>- [ ] Wiki documentation about ioctl and mmap with pure Python.</source>
          <target state="translated">-[] 순수 Python을 사용하는 ioctl 및 mmap에 대한 위키 문서.</target>
        </trans-unit>
        <trans-unit id="f3fc116f44edbf5465a1abbdfde896f2529c4fa1" translate="yes" xml:space="preserve">
          <source>- [x] Checking Python version</source>
          <target state="translated">-[x] Python 버전 확인</target>
        </trans-unit>
        <trans-unit id="f86ca693cab85954f2a201701b3419b85a77e0b9" translate="yes" xml:space="preserve">
          <source>- [x] Custom clearing</source>
          <target state="translated">-[x] 커스텀 클리어링</target>
        </trans-unit>
        <trans-unit id="72e992f27273f4a649393cfa43cad30f0fcb52b9" translate="yes" xml:space="preserve">
          <source>- [x] Make installation script</source>
          <target state="translated">-[x] 설치 스크립트 만들기</target>
        </trans-unit>
        <trans-unit id="2bffb0117e50e75d0740e48788bfa31b1ae43927" translate="yes" xml:space="preserve">
          <source>- [x] Proper animtation time delay on every frames</source>
          <target state="translated">-[x] 모든 프레임에서 적절한 애니메이션 시간 지연</target>
        </trans-unit>
        <trans-unit id="19696027018df765882c4dcb5e63f6b3b533a253" translate="yes" xml:space="preserve">
          <source>- [x] Shuffling</source>
          <target state="translated">-[x] 셔플</target>
        </trans-unit>
        <trans-unit id="3e575b80528a77081d4e5fe8b0b3d8dc4f2e3ab4" translate="yes" xml:space="preserve">
          <source>- [x] Standard argument style launcher</source>
          <target state="translated">-[x] 표준 인수 스타일 실행기</target>
        </trans-unit>
        <trans-unit id="d0d7077f3f0956c3e611816970724f2ce64bb441" translate="yes" xml:space="preserve">
          <source>- [x] Upload on PyPi to let it be installable with `pip install`.</source>
          <target state="translated">-[x] PyPi에 업로드하여`pip install`로 설치할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="2c3c9a4b9bbde9dec73a85f540b861e118a02f4a" translate="yes" xml:space="preserve">
          <source>- `FBpyGIF --help` to see all commands.</source>
          <target state="translated">-모든 명령을 보려면`FBpyGIF --help`.</target>
        </trans-unit>
        <trans-unit id="6d3c01b4bb5d6e8476a238aec60d4467cda0519e" translate="yes" xml:space="preserve">
          <source>- `FBpyGIF -ct` will put you into color test mode. (Aware of hypnotising screen ;) )</source>
          <target state="translated">-`FBpyGIF -ct`는 색상 테스트 모드로 들어갑니다. (최면 화면 인식;))</target>
        </trans-unit>
        <trans-unit id="a0933ea304e4ad3661d58b9cff25b85ecb5a14fe" translate="yes" xml:space="preserve">
          <source>- `python3 -m FBpyGIF.util size_cat ~/pictures` will categorize pictures based on its sizes and move into folders horizontal, vertical, square under the directory you run it.</source>
          <target state="translated">-`python3 -m FBpyGIF.util size_cat ~ / pictures`는 크기에 따라 사진을 분류하고 실행 한 디렉토리 아래의 수평, 수직, 정사각형 폴더로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5040ca9b95a9fd757119e7ee11cec47cfa584e77" translate="yes" xml:space="preserve">
          <source>- option1: use pip</source>
          <target state="translated">-option1 : pip 사용</target>
        </trans-unit>
        <trans-unit id="0620c2cbec1f1f5db6e63ad4db827ca32e2d8247" translate="yes" xml:space="preserve">
          <source>- option2: use git and setup.py</source>
          <target state="translated">-option2 : git 및 setup.py 사용</target>
        </trans-unit>
        <trans-unit id="25deb8bf1a3c47ee19e33b38425a6f5cacb69cce" translate="yes" xml:space="preserve">
          <source>- prerequisite for pillow (for fresh raspbian)</source>
          <target state="translated">-베개 전제 조건 (신선한 라즈 비안 용)</target>
        </trans-unit>
        <trans-unit id="4435f2726f203c52fb91d6e7b9d018caae4a8b5f" translate="yes" xml:space="preserve">
          <source>Frame Buffer drawing libray with GIF support for Python3</source>
          <target state="translated">Python3에 대한 GIF 지원이 포함 된 프레임 버퍼 그리기 libray</target>
        </trans-unit>
        <trans-unit id="6eda95af1964a092119ae808a3a2651f2694d25d" translate="yes" xml:space="preserve">
          <source>Pure Python implemented Memory-mapped Frame Buffer mainly for GIF animation on Raspberry pi</source>
          <target state="translated">Pure Python은 주로 Raspberry Pi의 GIF 애니메이션을 위해 메모리 매핑 된 프레임 버퍼를 구현했습니다.</target>
        </trans-unit>
        <trans-unit id="052334a9c20f4ddc36d57ea4bf161a2030425c4d" translate="yes" xml:space="preserve">
          <source>Recent Raspberry pi and similar single-board computers which needs efficient way to show image usually uses [fbi](https://www.kraxel.org/blog/linux/fbida/).</source>
          <target state="translated">이미지를 효율적으로 표시해야하는 최근 Raspberry pi 및 유사한 단일 보드 컴퓨터는 일반적으로 [fbi] (https://www.kraxel.org/blog/linux/fbida/)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0c8734834efbafd2f0dd5aff96347968066c9b1e" translate="yes" xml:space="preserve">
          <source>So I decided to make almost pure Python implemented library that is utilizing frame buffer and memory mapping.</source>
          <target state="translated">그래서 저는 프레임 버퍼와 메모리 매핑을 활용하는 거의 순수한 파이썬 구현 라이브러리를 만들기로 결정했습니다.</target>
        </trans-unit>
        <trans-unit id="3adc42563f2357c6c6f9a5fe03808a5c6c1c5ef9" translate="yes" xml:space="preserve">
          <source>The only a thing about 'pure' with this library is that it uses PIL library that is default installed python libarary on official Raspbian to convert image formats into raw BGR(A) and is also providing ways to use imagemagick as decompressor.</source>
          <target state="translated">이 라이브러리의 '순수'에 대한 유일한 점은 공식 Raspbian에 기본 설치된 Python 라이브러리 인 PIL 라이브러리를 사용하여 이미지 형식을 원시 BGR (A)로 변환하고 imagemagick을 압축 해제기로 사용하는 방법을 제공한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7b959b1146937a650c242d63616c5f1b6ea7fd97" translate="yes" xml:space="preserve">
          <source>There are many documents online how to mmap frame buffer with C, but none of similar are with Python, which also has mmap library by default. Actually there aren't so many examples about Python mmap library either. Hope this code helps you to understand how to ioctl and mmap not only frame buffers but also general Linux drivers with pure Python.</source>
          <target state="translated">C로 프레임 버퍼를 mmap하는 방법에 대한 온라인 문서가 많이 있지만 Python에는 기본적으로 mmap 라이브러리도있는 유사한 문서가 없습니다. 실제로 Python mmap 라이브러리에 대한 예제도 많지 않습니다. 이 코드가 프레임 버퍼뿐만 아니라 순수한 Python을 사용하는 일반 Linux 드라이버를 ioctl 및 mmap하는 방법을 이해하는 데 도움이되기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="a02df26e7fb7bea7dd5afeff6d60e482ec1672ea" translate="yes" xml:space="preserve">
          <source>These three are identical.</source>
          <target state="translated">이 세 가지는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a85745ae74d49ed0e05e8ffd40cb98672ca749de" translate="yes" xml:space="preserve">
          <source>This pack of C libraries and programs are able to show GIF image properly thorugh direct frame buffer, but in lack of function to play GIF animation files.</source>
          <target state="translated">이 C 라이브러리 및 프로그램 팩은 직접 프레임 버퍼를 통해 GIF 이미지를 제대로 표시 할 수 있지만 GIF ​​애니메이션 파일을 재생하는 기능이 부족합니다.</target>
        </trans-unit>
        <trans-unit id="bbc0aff80688baeb01a5a4cb720794fe808ad957" translate="yes" xml:space="preserve">
          <source>```</source>
          <target state="translated">```</target>
        </trans-unit>
        <trans-unit id="567ca4398233937443d73bc1a1a7417c9218347d" translate="yes" xml:space="preserve">
          <source>cd FBpyGIF</source>
          <target state="translated">cd FBpyGIF</target>
        </trans-unit>
        <trans-unit id="f863e71e5f8adb9de37e4a32c50433c85eaaaf04" translate="yes" xml:space="preserve">
          <source>git clone https://github.com/chidea/FBpyGIF</source>
          <target state="translated">git clone https://github.com/chidea/FBpyGIF</target>
        </trans-unit>
        <trans-unit id="11652d1e38cf9ca3683f86b771467e5b1513dfb1" translate="yes" xml:space="preserve">
          <source>sudo FBpyGIF [directory or file list...]</source>
          <target state="translated">sudo FBpyGIF [디렉토리 또는 파일 목록 ...]</target>
        </trans-unit>
        <trans-unit id="cb2cefe463cf8c3332282ffcb80249fa7c38f603" translate="yes" xml:space="preserve">
          <source>sudo apt install git</source>
          <target state="translated">sudo apt install git</target>
        </trans-unit>
        <trans-unit id="9d89f022a28aa4ad7ec393eac5251c560ef307e4" translate="yes" xml:space="preserve">
          <source>sudo apt install libjpeg8-dev libfreetype6-dev libwebp-dev -y</source>
          <target state="translated">sudo apt install libjpeg8-dev libfreetype6-dev libwebp-dev -y</target>
        </trans-unit>
        <trans-unit id="a6422a9ece63e25da4b9ff45fea57968d5c2ffab" translate="yes" xml:space="preserve">
          <source>sudo apt install python3-pip</source>
          <target state="translated">sudo apt install python3-pip</target>
        </trans-unit>
        <trans-unit id="609a600fe2fce5c34a6db475037539de9dec9270" translate="yes" xml:space="preserve">
          <source>sudo pip3 install fbpygif</source>
          <target state="translated">sudo pip3 설치 fbpygif</target>
        </trans-unit>
        <trans-unit id="829add41fc3bbd80a2969aa4314acadde0b76e0e" translate="yes" xml:space="preserve">
          <source>sudo python3 -m FBpyGIF [...]</source>
          <target state="translated">sudo python3 -m FBpyGIF [...]</target>
        </trans-unit>
        <trans-unit id="41430818b2a1cf86cb6f4bace5ee1414812bf6d7" translate="yes" xml:space="preserve">
          <source>sudo python3 -m FBpyGIF.main [...]</source>
          <target state="translated">sudo python3 -m FBpyGIF.main [...]</target>
        </trans-unit>
        <trans-unit id="a6a36aa482f8363b82abc089359d6eb2aca3c2a5" translate="yes" xml:space="preserve">
          <source>sudo python3 setup.py install</source>
          <target state="translated">sudo python3 setup.py 설치</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
