<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/collective-recipe-template/">
    <body>
      <group id="collective-recipe-template">
        <trans-unit id="a6532a087747029707b3e46fcf4b0afd71eb0ae7" translate="yes" xml:space="preserve">
          <source>(By accident the 1.1 release was marked as 1.2. So in fact they are
the same.)</source>
          <target state="translated">(우연히 1.1 릴리스는 1.2로 표시되었습니다. 따라서 실제로는 동일합니다.)</target>
        </trans-unit>
        <trans-unit id="c3279b3cc5c90255674bca6ff726d6926dd741ff" translate="yes" xml:space="preserve">
          <source>(instead of</source>
          <target state="translated">(대신에</target>
        </trans-unit>
        <trans-unit id="77c629506a4bb8bb4f325d405c4729acbfb0434d" translate="yes" xml:space="preserve">
          <source>) to specify URL.
[aclark]</source>
          <target state="translated">)를 사용하여 URL을 지정하십시오. [아 클락]</target>
        </trans-unit>
        <trans-unit id="b7f7b1f0bc51f1d2347a971878d06c63d64e6018" translate="yes" xml:space="preserve">
          <source>, the
current part through</source>
          <target state="translated">, 현재 부분을 통해</target>
        </trans-unit>
        <trans-unit id="f5ea07472107c0112c4923eb9e3e77b8d05860a8" translate="yes" xml:space="preserve">
          <source>.
[fschulze]</source>
          <target state="translated">. [fschulze]</target>
        </trans-unit>
        <trans-unit id="3e795f33344295ab02efd5622b3001e3c5dc889d" translate="yes" xml:space="preserve">
          <source>1.0 - 2008-10-16</source>
          <target state="translated">1.0-2008-10-16</target>
        </trans-unit>
        <trans-unit id="527b5cfa89ec1bf337359a83c2ade74b18d7a2c7" translate="yes" xml:space="preserve">
          <source>1.0rc1 - 2008-07-04</source>
          <target state="translated">1.0rc1-2008-07-04</target>
        </trans-unit>
        <trans-unit id="f67d428e42b2d658bcbff0815022294a185a5f52" translate="yes" xml:space="preserve">
          <source>1.0rc2 - 2008-07-04</source>
          <target state="translated">1.0rc2-2008-07-04</target>
        </trans-unit>
        <trans-unit id="d2173028af875b365cf4935334aaa80e71307cb4" translate="yes" xml:space="preserve">
          <source>1.1 - 2008-12-09</source>
          <target state="translated">1.1-2008-12-09</target>
        </trans-unit>
        <trans-unit id="9e761b62df21081397c75f3b21e8ba3c358eaf5b" translate="yes" xml:space="preserve">
          <source>1.10 - 2012-02-26</source>
          <target state="translated">1.10-2012-02-26</target>
        </trans-unit>
        <trans-unit id="1d9d8f42604cb1f6ba7e8b4545eb1a7e5390c348" translate="yes" xml:space="preserve">
          <source>1.11 - 2014-02-07</source>
          <target state="translated">1.11-2014-02-07</target>
        </trans-unit>
        <trans-unit id="96a82483d1de043f38f865dbdbad368fff6a306c" translate="yes" xml:space="preserve">
          <source>1.12 - 2015-07-23</source>
          <target state="translated">1.12-2015-07-23</target>
        </trans-unit>
        <trans-unit id="16203c4b29029a901f304326a48e9fde304ff2e7" translate="yes" xml:space="preserve">
          <source>1.13 (2015-10-20)</source>
          <target state="translated">1.13 (2015-10-20)</target>
        </trans-unit>
        <trans-unit id="747fc4a8b8852d34d0917298084692c17266ad55" translate="yes" xml:space="preserve">
          <source>1.2 - 2008-12-09</source>
          <target state="translated">1.2-2008-12-09</target>
        </trans-unit>
        <trans-unit id="d79e7618568b7d024a82a8ff50169b38d419e7bc" translate="yes" xml:space="preserve">
          <source>1.3 - 2009-04-28</source>
          <target state="translated">1.3-2009-04-28</target>
        </trans-unit>
        <trans-unit id="11145202601b38dfef556819ecf113f3a9b7c7ef" translate="yes" xml:space="preserve">
          <source>1.4 - 2009-07-29</source>
          <target state="translated">1.4-2009-07-29</target>
        </trans-unit>
        <trans-unit id="3cdaf2de4db5f57e70f2ccf90be4f2e633df1496" translate="yes" xml:space="preserve">
          <source>1.5 - 2010-02-23</source>
          <target state="translated">1.5-2010-02-23</target>
        </trans-unit>
        <trans-unit id="8faca39e8adc003a9851523f114639d5702327df" translate="yes" xml:space="preserve">
          <source>1.6 - 2010-02-24</source>
          <target state="translated">1.6-2010-02-24</target>
        </trans-unit>
        <trans-unit id="be8223223b008768f6697e79e56fbcd21767c83e" translate="yes" xml:space="preserve">
          <source>1.7 - 2010-05-21</source>
          <target state="translated">1.7-2010-05-21</target>
        </trans-unit>
        <trans-unit id="cda17c4756cf93c3c2440f963aa5381c7b4b5be3" translate="yes" xml:space="preserve">
          <source>1.8 - 2010-06-08</source>
          <target state="translated">1.8-2010-06-08</target>
        </trans-unit>
        <trans-unit id="980e95b6feaf33288f2e09feb93123422f170f29" translate="yes" xml:space="preserve">
          <source>1.9 - 2011-06-19</source>
          <target state="translated">1.9-2011-06-19</target>
        </trans-unit>
        <trans-unit id="c8987235a1f94ce142f8f7a88e3ed459c8a7b722" translate="yes" xml:space="preserve">
          <source>2.0 (2017-01-17)</source>
          <target state="translated">2.0 (2017-01-17)</target>
        </trans-unit>
        <trans-unit id="caaed1d83f4347405fff5c48c69e7d23026c5cdd" translate="yes" xml:space="preserve">
          <source>2.1 (2018-07-14)</source>
          <target state="translated">2.1 (2018-07-14)</target>
        </trans-unit>
        <trans-unit id="81d3fa39af2936ba8a61b44a0dbd713275a0fc48" translate="yes" xml:space="preserve">
          <source>A short example:</source>
          <target state="translated">간단한 예 :</target>
        </trans-unit>
        <trans-unit id="9d2a9f44ab35a63bb8dc344975ee63d1320e850b" translate="yes" xml:space="preserve">
          <source>Add Python 3 support using 2to3 flag in setup.
[mitchellrj]</source>
          <target state="translated">설정에서 2to3 플래그를 사용하여 Python 3 지원을 추가합니다. [mitchellrj]</target>
        </trans-unit>
        <trans-unit id="69533e434027520d275a5ca46d02ea779a2d88ae" translate="yes" xml:space="preserve">
          <source>Add a MANIFEST.in with instructions to include docs/, otherwise the package
will not install.
[wichert]</source>
          <target state="translated">docs /를 포함하는 지침과 함께 MANIFEST.in을 추가하십시오. 그렇지 않으면 패키지가 설치되지 않습니다. [위서 트]</target>
        </trans-unit>
        <trans-unit id="37ee611b6e9e65798abf175c0ceb11a4645e8d0c" translate="yes" xml:space="preserve">
          <source>Add missing link in README.
[wichert]</source>
          <target state="translated">README에 누락 된 링크를 추가합니다. [위서 트]</target>
        </trans-unit>
        <trans-unit id="99a14f1adf6ec499f36a5919eadfbaa3ae95dd2a" translate="yes" xml:space="preserve">
          <source>Add support for URL input. Use</source>
          <target state="translated">URL 입력 지원을 추가합니다. 사용하다</target>
        </trans-unit>
        <trans-unit id="d72c45116ab60fd6050c9d355b97ea1f8544d5a3" translate="yes" xml:space="preserve">
          <source>Add support for explicitly setting the output file mode.
[witsch]</source>
          <target state="translated">출력 파일 모드를 명시 적으로 설정하기위한 지원을 추가합니다. [재치]</target>
        </trans-unit>
        <trans-unit id="566ecf74a1bfdc6f86fb8cc2b390e890c8de7ad7" translate="yes" xml:space="preserve">
          <source>Add support for inline templates.
[witsch]</source>
          <target state="translated">인라인 템플릿에 대한 지원을 추가합니다. [재치]</target>
        </trans-unit>
        <trans-unit id="f74adf80b3df0715816fb6dcb9e859285eef6f67" translate="yes" xml:space="preserve">
          <source>Add support for output path creation. You can do:</source>
          <target state="translated">출력 경로 생성에 대한 지원을 추가합니다. 넌 할 수있어:</target>
        </trans-unit>
        <trans-unit id="54c127f487f2976fb76abf6428467e65bcb6a0da" translate="yes" xml:space="preserve">
          <source>Add tests.
[ulif]</source>
          <target state="translated">테스트를 추가하십시오. [ulif]</target>
        </trans-unit>
        <trans-unit id="703277643a50caf3b0ea456445bc8e237f3f73d8" translate="yes" xml:space="preserve">
          <source>Add timeout configuration option.
[davidjb]</source>
          <target state="translated">제한 시간 구성 옵션을 추가하십시오. [davidjb]</target>
        </trans-unit>
        <trans-unit id="2f2221496c5de5fa66362dfa82cda650c0bf5b11" translate="yes" xml:space="preserve">
          <source>Added overwrite option - possibility to disable overwrite output file after
re-execute buildout.
[mstaniszczak]</source>
          <target state="translated">덮어 쓰기 옵션 추가-빌드 아웃을 재실행 한 후 출력 파일 덮어 쓰기를 비활성화 할 수 있습니다. [mstaniszczak]</target>
        </trans-unit>
        <trans-unit id="ecbdebbd611068e9d09d62a5fc41dfd6d8dac82c" translate="yes" xml:space="preserve">
          <source>Added support for genshi text templates. Use them with this as the
recipe:</source>
          <target state="translated">genshi 텍스트 템플릿에 대한 지원이 추가되었습니다. 이것을 레시피로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a25800e3d7c0d13b7c555eb0589dcdab496d91e6" translate="yes" xml:space="preserve">
          <source>Also creation of several subdirectories is supported:</source>
          <target state="translated">또한 여러 하위 디렉터리 생성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="888d6a246d31d397f772887076d055d88cd923dd" translate="yes" xml:space="preserve">
          <source>As an extension to the buildout syntax you can reference variables from
the current buildout part directly. For example:</source>
          <target state="translated">빌드 아웃 구문의 확장으로 현재 빌드 아웃 파트의 변수를 직접 참조 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="23631b0634b84333995f4f5b5347df2f3083a84b" translate="yes" xml:space="preserve">
          <source>Back compatibility with zc.buildout 1.7.1 [#11]
[mstaniszczak]</source>
          <target state="translated">zc.buildout 1.7.1과의 역 호환성 [# 11] [mstaniszczak]</target>
        </trans-unit>
        <trans-unit id="abd498299e4d7427146440ae6fa800791a6f70c6" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;http://pypi.python.org/pypi/iw.recipe.template&quot;&gt;iw.recipe.template&lt;/a&gt; and &lt;a href=&quot;http://pypi.python.org/pypi/inquant.recipe.textfile&quot;&gt;inquant.recipe.textfile&lt;/a&gt; claim to do the
same thing. I have found them to be undocumented and too buggy for real
world use, and neither are in a public repository where I could fix them. In
addition this implementation leverages the buildout variable substitution
code, making it a lot simpler.</source>
          <target state="translated">&lt;a href=&quot;http://pypi.python.org/pypi/iw.recipe.template&quot;&gt;iw.recipe.template&lt;/a&gt; 과 &lt;a href=&quot;http://pypi.python.org/pypi/inquant.recipe.textfile&quot;&gt;inquant.recipe.textfile은&lt;/a&gt; 모두 같은 일을 한다고 주장합니다. 나는 그것들이 문서화되지 않았고 실제 사용하기에는 너무 버그가 많다는 것을 발견했으며, 둘 다 내가 수정할 수있는 공용 저장소에 없습니다. 또한이 구현은 빌드 아웃 변수 대체 코드를 활용하여 훨씬 간단하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f0a42f4f8628e618e42a7b9048523548fa76ec5f" translate="yes" xml:space="preserve">
          <source>Buildout recipe to generate a text file from a template</source>
          <target state="translated">템플릿에서 텍스트 파일을 생성하는 빌드 아웃 레시피</target>
        </trans-unit>
        <trans-unit id="4c80c8ced8e7f3ca20e9105e0c7034a5e0f247da" translate="yes" xml:space="preserve">
          <source>By default re-execute buildout, makes that output file is overwrited, by new
output file. But, if you want generate this file ONLY when it doesn&amp;rsquo;t exist,
you can use overwrite option:</source>
          <target state="translated">기본적으로 빌드 아웃을 다시 실행하면 새 출력 파일이 해당 출력 파일을 덮어 씁니다. 그러나이 파일이 존재하지 않을 때만 생성하려면 덮어 쓰기 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="485823871f105bb3fb66938a7c9357d5400127d9" translate="yes" xml:space="preserve">
          <source>Change the template:</source>
          <target state="translated">템플릿 변경 :</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="deda70e4d7dd7b6b9a387f5afc1665f1024d29c2" translate="yes" xml:space="preserve">
          <source>Claim support for Python 3.5 and drop support for Python 2.6.
[sallner]</source>
          <target state="translated">Python 3.5에 대한 지원을 요청하고 Python 2.6에 대한 지원을 중단합니다. [판매자]</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">내용</target>
        </trans-unit>
        <trans-unit id="f306439810af5006ee2b66a5d785009676ea4708" translate="yes" xml:space="preserve">
          <source>Copy the mode of the input file to the output file. This makes it possible
to create executable scripts.
[wichert]</source>
          <target state="translated">입력 파일의 모드를 출력 파일에 복사합니다. 이를 통해 실행 가능한 스크립트를 만들 수 있습니다. [위서 트]</target>
        </trans-unit>
        <trans-unit id="55f58d922cb53b90bebdc18a8cdb0c9245adc9d3" translate="yes" xml:space="preserve">
          <source>Correct handling of multiple variables in a line. Bugreport and patch from
Roman Susi.
[wichert]</source>
          <target state="translated">한 줄에 여러 변수를 올바르게 처리합니다. Roman Susi의 버그 보고서 및 패치. [위서 트]</target>
        </trans-unit>
        <trans-unit id="fffd153e2caabed3d0b3ba489234d55fc6592ba4" translate="yes" xml:space="preserve">
          <source>Creating a template in a variable path</source>
          <target state="translated">가변 경로에 템플릿 만들기</target>
        </trans-unit>
        <trans-unit id="671d6ca76ebde09a016591457b902088888cd26d" translate="yes" xml:space="preserve">
          <source>Creating missing paths</source>
          <target state="translated">누락 된 경로 만들기</target>
        </trans-unit>
        <trans-unit id="07beaaf32aa96a2fa64c2c069726dbba855185fe" translate="yes" xml:space="preserve">
          <source>Delete script before writing to it, this way we avoid chmod permission errors
when the current user is not the script owner.
[alecghica]</source>
          <target state="translated">쓰기 전에 스크립트를 삭제하면 현재 사용자가 스크립트 소유자가 아닐 때 chmod 권한 오류를 방지 할 수 있습니다. [alecghica]</target>
        </trans-unit>
        <trans-unit id="4b642b9b1e0f9f1a58a1d2d903ea82de3a4206c0" translate="yes" xml:space="preserve">
          <source>Detailed Description</source>
          <target state="translated">상세 설명</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="5f4325cfcbbdbcce8edd5c985285f76aad970e95" translate="yes" xml:space="preserve">
          <source>Fix encoding problem in python 3.
[cedricmessiant]</source>
          <target state="translated">파이썬 3에서 인코딩 문제 수정. [cedricmessiant]</target>
        </trans-unit>
        <trans-unit id="b6278d1f5fd44e01ab87e8772ace29fecfdd1363" translate="yes" xml:space="preserve">
          <source>Fixed the way variables in templates are substituted to allow buildout to
determine dependencies on other parts and prepare those correctly. [tlotze]</source>
          <target state="translated">빌드 아웃이 다른 부품에 대한 종속성을 결정하고 올바르게 준비 할 수 있도록 템플릿의 변수가 대체되는 방식을 수정했습니다. [tlotze]</target>
        </trans-unit>
        <trans-unit id="35b6ba4b08c47fd39983f6d4088f65f2205b12b3" translate="yes" xml:space="preserve">
          <source>For example an input file can look like this:</source>
          <target state="translated">예를 들어 입력 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2d145745d3d25cefa1c861e7219c79b2ecf1f83" translate="yes" xml:space="preserve">
          <source>For very short script it can make sense to put the source directly into</source>
          <target state="translated">매우 짧은 스크립트의 경우 소스를</target>
        </trans-unit>
        <trans-unit id="4e6ce5c37651f4b8da91cf885548571a8f62986b" translate="yes" xml:space="preserve">
          <source>Genshi text templates</source>
          <target state="translated">Genshi 텍스트 템플릿</target>
        </trans-unit>
        <trans-unit id="8d8aa316e9925864e2332a77bdf67d6a18480905" translate="yes" xml:space="preserve">
          <source>If an output file should be created in a path that does not yet exist,
then the missing items will be created for us:</source>
          <target state="translated">아직 존재하지 않는 경로에 출력 파일을 생성해야하는 경우 누락 된 항목이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="66a2fb36429880443e9fc7626adfd01da2da8b9e" translate="yes" xml:space="preserve">
          <source>Import genshi modules very late to prevent issues with zc.buildout.
[fschulze]</source>
          <target state="translated">zc.buildout 문제를 방지하기 위해 genshi 모듈을 매우 늦게 가져옵니다. [fschulze]</target>
        </trans-unit>
        <trans-unit id="26cda6f8d65f3635febcd643b7fe1e5357575fc2" translate="yes" xml:space="preserve">
          <source>In the template you can use the exact same variables as you can use
in the buildout configuration, but instead of colons as the separator you
either have to use attribute access, or for options with a dash dictionary
syntax. The global buildout config is accessible through</source>
          <target state="translated">템플릿에서 빌드 아웃 구성에서 사용할 수있는 것과 똑같은 변수를 사용할 수 있지만 구분 기호로 콜론 대신 속성 액세스를 사용하거나 대시 사전 구문이있는 옵션을 사용해야합니다. 글로벌 빌드 아웃 구성은 다음을 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06831bf064874a84c080829012e24bcd9a90e16c" translate="yes" xml:space="preserve">
          <source>In the template you can use the exact same variables as you can use
in the buildout configuration. For example an input file can look like this:</source>
          <target state="translated">템플릿에서 빌드 아웃 구성에서 사용할 수있는 것과 정확히 동일한 변수를 사용할 수 있습니다. 예를 들어 입력 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="79f0521f53cb5a612df61414fc97e4f477c45432" translate="yes" xml:space="preserve">
          <source>Initial release.
[wichert]</source>
          <target state="translated">초판. [위서 트]</target>
        </trans-unit>
        <trans-unit id="c3e247e312604f249b09a376b2d93080ffe11ddb" translate="yes" xml:space="preserve">
          <source>Inline template can now be specified with the inline option.
[elro]</source>
          <target state="translated">이제 인라인 옵션을 사용하여 인라인 템플릿을 지정할 수 있습니다. [elro]</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="f415f618fd74b57abf8fe9cdf9c2c72741b1a591" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s change this file::</source>
          <target state="translated">이 파일을 변경해 보겠습니다. :</target>
        </trans-unit>
        <trans-unit id="8aba6a703f7fec920bf4479672101f6f6b126fdd" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check content now:</source>
          <target state="translated">이제 콘텐츠를 확인하겠습니다.</target>
        </trans-unit>
        <trans-unit id="cd34e5f625287251dd9222f4c442e11f0f31df0e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check output file again - it shouldn&amp;rsquo;t be modyfied this time:</source>
          <target state="translated">출력 파일을 다시 확인해 보겠습니다. 이번에는 수정하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="071e25b31eb3d6c9d1409cc882ddde9cce95581d" translate="yes" xml:space="preserve">
          <source>Lets create a minimal</source>
          <target state="translated">최소한의</target>
        </trans-unit>
        <trans-unit id="084ca063e53c6b65c5237b30c4ba0d7f7dc2c5a9" translate="yes" xml:space="preserve">
          <source>Like you see, re-execute buildout, caused overwrite ourmodified file. Let&amp;rsquo;s try
to prevent this behavior. So we must modify buildout.cfg, re-execute buildout,
and then modify again output file:</source>
          <target state="translated">보시다시피 빌드 아웃을 다시 실행하여 수정 된 파일을 덮어 씁니다. 이 동작을 방지하도록 노력합시다. 따라서 buildout.cfg를 수정하고 빌드 아웃을 다시 실행 한 다음 출력 파일을 다시 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="be820728481317a3d30326e27188b21e2060a801" translate="yes" xml:space="preserve">
          <source>Normally the file mode gets copied from the template, but it can also be
specified manually, which especially makes sense in this case:</source>
          <target state="translated">일반적으로 파일 모드는 템플릿에서 복사되지만 수동으로 지정할 수도 있습니다.이 경우 특히 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="65e6476d8f219551227f09b0e22e2ff20d2a2bfb" translate="yes" xml:space="preserve">
          <source>Note the mtime of the output file:</source>
          <target state="translated">출력 파일의 mtime을 참고하십시오.</target>
        </trans-unit>
        <trans-unit id="7cbb4e41e4278feec04871039b7be48419dddd2a" translate="yes" xml:space="preserve">
          <source>Now try re-execute buildout, and then check our file again:</source>
          <target state="translated">이제 빌드 아웃을 다시 실행 한 다음 파일을 다시 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2489e31e584340d4c73a13eb0b085a0a28ced688" translate="yes" xml:space="preserve">
          <source>Now we can run buildout:</source>
          <target state="translated">이제 빌드 아웃을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d703b478f30ed59196aa2afeb93e9c759b4f171" translate="yes" xml:space="preserve">
          <source>On update, do not rewrite the output file (thus preserving its
modification timestamp) unless its content has changed.
[dairiki]</source>
          <target state="translated">업데이트시 내용이 변경되지 않는 한 출력 파일을 다시 작성하지 마십시오 (따라서 수정 타임 스탬프 유지). [다이 리키]</target>
        </trans-unit>
        <trans-unit id="28bed0a352e0177489668fe934e8b369b1d23202" translate="yes" xml:space="preserve">
          <source>Once again check output file content:</source>
          <target state="translated">다시 한 번 출력 파일 내용을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7ea5b8787c0ceb69995a8eddacb6d45536060c5d" translate="yes" xml:space="preserve">
          <source>Output file mode is now assumed to be octal, like chmod.
[elro]</source>
          <target state="translated">출력 파일 모드는 이제 chmod와 같이 8 진수로 간주됩니다. [elro]</target>
        </trans-unit>
        <trans-unit id="538060dd16dbbe9c44121614f300e3361c3777b6" translate="yes" xml:space="preserve">
          <source>Overriding output file</source>
          <target state="translated">출력 파일 재정의</target>
        </trans-unit>
        <trans-unit id="120d4a139295e9be15759196acc3dca3a44735cb" translate="yes" xml:space="preserve">
          <source>Python 3 support for Genshi and doctests.
[mitchellrj]</source>
          <target state="translated">Genshi 및 doctest에 대한 Python 3 지원. [mitchellrj]</target>
        </trans-unit>
        <trans-unit id="834c03c05eaab9c1d813702555fd9a9a1097a783" translate="yes" xml:space="preserve">
          <source>Rerun the buildout:</source>
          <target state="translated">빌드 아웃을 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e327ebec77cde69b7b40469968998b27f6f4daea" translate="yes" xml:space="preserve">
          <source>Run buildout again</source>
          <target state="translated">빌드 아웃을 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="698e3975c90441b2d05029cf42526e9af0b3f4f4" translate="yes" xml:space="preserve">
          <source>Similarly, you may want to read input from a URL, e.g.:</source>
          <target state="translated">마찬가지로 URL에서 입력을 읽을 수도 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="ea37eba48c47835b47d9fcafc60f7a7227935b8c" translate="yes" xml:space="preserve">
          <source>Simple creation of a file out of a template</source>
          <target state="translated">템플릿에서 간단한 파일 생성</target>
        </trans-unit>
        <trans-unit id="f3ac3bbdb4c58a6564b06ee594e96b2b99328442" translate="yes" xml:space="preserve">
          <source>Starting with version 1.12, you can specify</source>
          <target state="translated">버전 1.12부터 다음을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19b2e4672aceb1be2c20cea9bb25698e1f10a885" translate="yes" xml:space="preserve">
          <source>Starting with version 1.3, you can also specify a path to the output
file and the path will be created if it does not exist.</source>
          <target state="translated">버전 1.3부터는 출력 파일에 대한 경로를 지정할 수도 있으며 존재하지 않는 경우 경로가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4201bd38e7e00bb7adbf19dd88a8e52340c0d4bd" translate="yes" xml:space="preserve">
          <source>Starting with version 1.5, you can use inline templates.</source>
          <target state="translated">버전 1.5부터 인라인 템플릿을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f29346c1a8b3e0fa2049c52628eccfe5114bc2f8" translate="yes" xml:space="preserve">
          <source>Starting with version 1.7, you can use &lt;a href=&quot;http://genshi.edgewall.org/wiki/Documentation/text-templates.html&quot;&gt;genshi text templates&lt;/a&gt;.</source>
          <target state="translated">버전 1.7부터는 &lt;a href=&quot;http://genshi.edgewall.org/wiki/Documentation/text-templates.html&quot;&gt;genshi 텍스트 템플릿을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="746b292f176763a6d09eff177dab488f55f5dad3" translate="yes" xml:space="preserve">
          <source>Starting with version 1.9, you can use a URL to specify template input.</source>
          <target state="translated">버전 1.9부터 URL을 사용하여 템플릿 입력을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="610bb79bb64edae23aedd7b0be04506aaf4e655e" translate="yes" xml:space="preserve">
          <source>Starting with version 2.1, you can set</source>
          <target state="translated">버전 2.1부터 다음을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea0e422e0feff3ea1bd56eeae1df021958e922ff" translate="yes" xml:space="preserve">
          <source>Substituting variables with options of other parts</source>
          <target state="translated">변수를 다른 부품의 옵션으로 대체</target>
        </trans-unit>
        <trans-unit id="5f946ab193794f085a460926bacb2d20271cfa78" translate="yes" xml:space="preserve">
          <source>Support new</source>
          <target state="translated">새로운 지원</target>
        </trans-unit>
        <trans-unit id="4d31fd30db84f787f1dd8e0136141e43f21b9833" translate="yes" xml:space="preserve">
          <source>The file&amp;rsquo;s mtime is changed:</source>
          <target state="translated">파일의 mtime이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="996588670dbf133c23d50b166bde23cfa550c2b8" translate="yes" xml:space="preserve">
          <source>The file&amp;rsquo;s mtime is not changed:</source>
          <target state="translated">파일의 mtime은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef3c6edb611a6de109f7014640d9abdd19434e57" translate="yes" xml:space="preserve">
          <source>The output has changed:</source>
          <target state="translated">출력이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="9ec228bf060e5966f5c70a982b327dd9358cfed3" translate="yes" xml:space="preserve">
          <source>The template should have been created:</source>
          <target state="translated">템플릿이 생성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0fee9d9f81ca426cfef320edfbf7b560142e130e" translate="yes" xml:space="preserve">
          <source>The template should have the specified file mode:</source>
          <target state="translated">템플릿에는 지정된 파일 모드가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9a21845244d6e6e667db4a5d61df658403d3e467" translate="yes" xml:space="preserve">
          <source>The template was indeed created:</source>
          <target state="translated">템플릿은 실제로 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="e391fc7e8f2a7d559a2c0e27d3adbf3a386734c7" translate="yes" xml:space="preserve">
          <source>The variable</source>
          <target state="translated">변수</target>
        </trans-unit>
        <trans-unit id="bfc46a67db7e0826b4c9b13a3f795ea82343dfeb" translate="yes" xml:space="preserve">
          <source>There is a security risk inherent with using URL input.
Please be careful.</source>
          <target state="translated">URL 입력 사용에는 내재 된 보안 위험이 있습니다. 조심하세요.</target>
        </trans-unit>
        <trans-unit id="93253583465fa519e0aab61eeaa1508c807d568a" translate="yes" xml:space="preserve">
          <source>This recipe can be used to generate textfiles from a (text)
template.</source>
          <target state="translated">이 레시피는 (텍스트) 템플릿에서 텍스트 파일을 생성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39b95a0d6f059f64cf99307995afd4d7531b9eda" translate="yes" xml:space="preserve">
          <source>To demonstrate this, first we create a template file:</source>
          <target state="translated">이를 증명하기 위해 먼저 템플릿 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6cf085072210e4353c554299dc290a2d25195819" translate="yes" xml:space="preserve">
          <source>Unchanged output files are not rewritten on update</source>
          <target state="translated">변경되지 않은 출력 파일은 업데이트시 다시 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7452982082eb07ff4d1146d0eb0c3fbe1414a3e0" translate="yes" xml:space="preserve">
          <source>Use a dot between the section name and the option name instead of a colon.
[fschulze]</source>
          <target state="translated">섹션 이름과 옵션 이름 사이에 콜론 대신 점을 사용하십시오. [fschulze]</target>
        </trans-unit>
        <trans-unit id="9b67cf979ae8a492856417b34676fd5d8f5c283e" translate="yes" xml:space="preserve">
          <source>Using URL input</source>
          <target state="translated">URL 입력 사용</target>
        </trans-unit>
        <trans-unit id="dd53f24b4903718de161c59f53bc3e8c11a02288" translate="yes" xml:space="preserve">
          <source>Using inline input</source>
          <target state="translated">인라인 입력 사용</target>
        </trans-unit>
        <trans-unit id="b6c19eceba288cdd3a71eb8b3e6eae38d5f3a2fd" translate="yes" xml:space="preserve">
          <source>WARNING! Backward incompatible change for Genshi templates.
It wasn&amp;rsquo;t possible to access parts with a dash in the name, so now you have
to use ${parts.partname} or ${parts[&amp;lsquo;part-name&amp;rsquo;]}. In addition it is now
possible to access the current part with</source>
          <target state="translated">경고! Genshi 템플릿에 대해 역 호환되지 않는 변경 사항입니다. 이름에 대시가있는 부품에 액세스 할 수 없었으므로 이제 $ {parts.partname} 또는 $ {parts [ 'part-name']}를 사용해야합니다. 또한 이제 다음을 사용하여 현재 부품에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd20dfda45b8e052da5fef3f14a9884b1473b330" translate="yes" xml:space="preserve">
          <source>Wait until new files get a different mtime</source>
          <target state="translated">새 파일이 다른 mtime을 얻을 때까지 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">경고</target>
        </trans-unit>
        <trans-unit id="482eaae36b17a6157214d4c7c63391b8cd383992" translate="yes" xml:space="preserve">
          <source>We create a template file:</source>
          <target state="translated">템플릿 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9db62bf87444164a7ce20225c56d30aee5850a0c" translate="yes" xml:space="preserve">
          <source>When changes happen to the output path, then the old path is removed
on uninstall. Therefore the</source>
          <target state="translated">출력 경로가 변경되면 제거시 이전 경로가 제거됩니다. 따라서</target>
        </trans-unit>
        <trans-unit id="0e4646cb98e9d8879214d2bb79d0f8f35a4bd404" translate="yes" xml:space="preserve">
          <source>When output content is unchanged, the output file is not rewritten on update.
The advantage is that the modification timestamp of the file is not changed.
(E.g. systemd notices if the timestamp of any unit files change, and issues
helpful &amp;ldquo;nags&amp;rdquo; reminding the user to rerun &amp;ldquo;systemctl daemon-reload&amp;rdquo;.)</source>
          <target state="translated">출력 내용이 변경되지 않으면 출력 파일이 업데이트시 다시 작성되지 않습니다. 장점은 파일의 수정 타임 스탬프가 변경되지 않는다는 것입니다. (예 : systemd는 단위 파일의 타임 스탬프가 변경되면이를 알리고 사용자에게 &quot;systemctl daemon-reload&quot;를 다시 실행하도록 상기시키는 유용한 &quot;nags&quot;를 발행합니다.)</target>
        </trans-unit>
        <trans-unit id="9a2f5aca533c86ef59c191383f0d180e4d35040e" translate="yes" xml:space="preserve">
          <source>When substituting variables in a template, dependencies on other buildout
parts can occur. Buildout will resolve them by determining the values of those
other parts&amp;rsquo; options first. To see this, we create a buildout involving a
template that uses a variable computed by a part that would not otherwise be
built:</source>
          <target state="translated">템플릿에서 변수를 대체 할 때 다른 빌드 아웃 부품에 대한 종속성이 발생할 수 있습니다. Buildout은 다른 부품의 옵션 값을 먼저 결정하여 문제를 해결합니다. 이를 확인하기 위해 다른 방법으로는 제작되지 않을 부품에 의해 계산 된 변수를 사용하는 템플릿을 포함하는 빌드 아웃을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="15992110c5cd678d5663090e2f203977e05b0717" translate="yes" xml:space="preserve">
          <source>Why another template recipe?</source>
          <target state="translated">왜 다른 템플릿 레시피입니까?</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="3e4029faeccd1675fca596e931cb88444d13d9d1" translate="yes" xml:space="preserve">
          <source>and intermediate path items will be created if they do not exist.
[ulif]</source>
          <target state="translated">중간 경로 항목이 없으면 생성됩니다. [ulif]</target>
        </trans-unit>
        <trans-unit id="fc521664b0f42d8f10c5f1a187893df3ceaa7109" translate="yes" xml:space="preserve">
          <source>as an option to
configure</source>
          <target state="translated">구성 옵션으로</target>
        </trans-unit>
        <trans-unit id="c3b72c781cc7e2dcff1868f7aa93b7a343e60aa2" translate="yes" xml:space="preserve">
          <source>buildout.cfg</source>
          <target state="translated">buildout.cfg</target>
        </trans-unit>
        <trans-unit id="0b5f7a0b01cc6ddd53f498c6ab684cc8e195450f" translate="yes" xml:space="preserve">
          <source>buildout:directory</source>
          <target state="translated">빌드 아웃 : 디렉토리</target>
        </trans-unit>
        <trans-unit id="4af1db86ac52b8ff32b502d27d828ace3d90bb3f" translate="yes" xml:space="preserve">
          <source>directory created above has
vanished now:</source>
          <target state="translated">위에서 만든 디렉토리가 이제 사라졌습니다.</target>
        </trans-unit>
        <trans-unit id="b63eccca6e614b549a494338b32d7c87f094e725" translate="yes" xml:space="preserve">
          <source>etc/</source>
          <target state="translated">기타/</target>
        </trans-unit>
        <trans-unit id="47822d33e49504ad1369ede254dea3c4901f938f" translate="yes" xml:space="preserve">
          <source>file. This time the output should
happen in a variable path:</source>
          <target state="translated">파일. 이번에는 출력이 변수 경로에서 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="d0998110d4f271571ea799f05b153504a56056c0" translate="yes" xml:space="preserve">
          <source>file:</source>
          <target state="translated">파일:</target>
        </trans-unit>
        <trans-unit id="33abd55970504df037fd2bad93c45ee62ab1bb43" translate="yes" xml:space="preserve">
          <source>input =</source>
          <target state="translated">입력 =</target>
        </trans-unit>
        <trans-unit id="10e1f4a61854e86ecde79313c61d7fac2c24c8a8" translate="yes" xml:space="preserve">
          <source>input-encoding</source>
          <target state="translated">입력 인코딩</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">옵션</target>
        </trans-unit>
        <trans-unit id="d3b3a19bd3de84efcf6dce28665d549fb438e58a" translate="yes" xml:space="preserve">
          <source>options.
[fschulze]</source>
          <target state="translated">옵션. [fschulze]</target>
        </trans-unit>
        <trans-unit id="6467e3dc4e049c4fb299f167bccd65521d354d4a" translate="yes" xml:space="preserve">
          <source>output-encoding</source>
          <target state="translated">출력 인코딩</target>
        </trans-unit>
        <trans-unit id="909e6bf0ca53b6aa378c1e94b0db124a102075e2" translate="yes" xml:space="preserve">
          <source>parts</source>
          <target state="translated">부속</target>
        </trans-unit>
        <trans-unit id="7b3df7567abe8fcac92afa25fba89915a603dc44" translate="yes" xml:space="preserve">
          <source>recipe = collective.recipe.template[genshi]:genshi</source>
          <target state="translated">레시피 = Collective.recipe.template [genshi] : genshi</target>
        </trans-unit>
        <trans-unit id="914a9d8a5db34691411a5539b69f3f83b9bfd654" translate="yes" xml:space="preserve">
          <source>requests.</source>
          <target state="translated">요청.</target>
        </trans-unit>
        <trans-unit id="56d3c9490be2608ac36f5a4805bfec2f21f7f982" translate="yes" xml:space="preserve">
          <source>timeout</source>
          <target state="translated">타임 아웃</target>
        </trans-unit>
        <trans-unit id="1f174c4baeea5bedd7917de828ed9fad0bee5cc1" translate="yes" xml:space="preserve">
          <source>to specify the character encoding.</source>
          <target state="translated">문자 인코딩을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="26d9887e530c9e2a0289d9eb72ee3a7a361224df" translate="yes" xml:space="preserve">
          <source>url =</source>
          <target state="translated">URL =</target>
        </trans-unit>
        <trans-unit id="fb92779359ce8e324b8624c09aebfad958e599c6" translate="yes" xml:space="preserve">
          <source>urllib2</source>
          <target state="translated">urllib2</target>
        </trans-unit>
        <trans-unit id="e087ad8fc668149001c1014f3828aa5da64ebb59" translate="yes" xml:space="preserve">
          <source>was also substituted by a path.</source>
          <target state="translated">경로로도 대체되었습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
