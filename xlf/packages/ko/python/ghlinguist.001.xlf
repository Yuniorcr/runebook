<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/ghlinguist/">
    <body>
      <group id="ghlinguist">
        <trans-unit id="8a5bd700778dc76504e8c5fee1a507a6d1580c37" translate="yes" xml:space="preserve">
          <source>Both cases simply return the string &lt;code&gt;Python&lt;/code&gt; or &lt;code&gt;Fortran&lt;/code&gt; etc.</source>
          <target state="translated">두 경우 모두 &lt;code&gt;Python&lt;/code&gt; 또는 &lt;code&gt;Fortran&lt;/code&gt; 등 의 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="b48f894948f31dd3913f643828d8617bd0aa51f1" translate="yes" xml:space="preserve">
          <source>From Terminal:</source>
          <target state="translated">터미널에서 :</target>
        </trans-unit>
        <trans-unit id="fbdb39e7e67a0cb8fade1ceee82341e66bdafa79" translate="yes" xml:space="preserve">
          <source>If the directory is not a Git repo, &lt;code&gt;None&lt;/code&gt; is returned</source>
          <target state="translated">디렉토리가 Git 리포지토리가 아닌 경우 &lt;code&gt;None&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0edf96811dd7fe4c662c9af0aca999b27f833497" translate="yes" xml:space="preserve">
          <source>If you don't already have RubyGems setup on Linux:</source>
          <target state="translated">Linux에서 RubyGems를 아직 설정하지 않은 경우 :</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="e1d2620dd4bd10e7f24bac2c0aa0156cbd7080ed" translate="yes" xml:space="preserve">
          <source>Install Linguist as usual:</source>
          <target state="translated">평소와 같이 Linguist를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="68bf86483f265ba4441455aa31328c19360b8c8a" translate="yes" xml:space="preserve">
          <source>Install this Python wrapper:</source>
          <target state="translated">이 Python 래퍼를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="d6470d742c6be68bf3b3f1ee242925b542f261df" translate="yes" xml:space="preserve">
          <source>Linux prereqs</source>
          <target state="translated">Linux 전제 조건</target>
        </trans-unit>
        <trans-unit id="a235b3bf89b84dc848864641fccb756ceea4e4d2" translate="yes" xml:space="preserve">
          <source>Linux: see Notes section at bottom of this README</source>
          <target state="translated">Linux :이 README 하단의 참고 섹션 참조</target>
        </trans-unit>
        <trans-unit id="dca3d21fe2f53655fc3772681afd132fa7e5f5e4" translate="yes" xml:space="preserve">
          <source>MacOS / Linux Homebrew: &lt;code&gt;brew install ruby&lt;/code&gt;</source>
          <target state="translated">MacOS / Linux Homebrew : &lt;code&gt;brew install ruby&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">노트</target>
        </trans-unit>
        <trans-unit id="ff583663796e0b564f9763cd45af7ad5db3f48d6" translate="yes" xml:space="preserve">
          <source>Or import as a Python module.</source>
          <target state="translated">또는 Python 모듈로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="16ec4d428b5458baa8dd2e6da390acc3c805afcc" translate="yes" xml:space="preserve">
          <source>Pure Python command-line wrapper of Ruby-based Github &lt;a href=&quot;https://github.com/github/linguist&quot;&gt;Linguist&lt;/a&gt;.
Linguist detects the language of a Git repo based on the &lt;code&gt;commit&lt;/code&gt;ed files.
The repo file
&lt;a href=&quot;https://github.com/github/linguist#using-gitattributes&quot;&gt;.gitattributes&lt;/a&gt;
is used to configure Linguist to not get distracted by &lt;code&gt;docs&lt;/code&gt; or archive files, etc. using several straightforward rules.</source>
          <target state="translated">Ruby 기반 Github &lt;a href=&quot;https://github.com/github/linguist&quot;&gt;Linguist&lt;/a&gt; 의 순수 Python 명령 줄 래퍼입니다 . Linguist는 &lt;code&gt;commit&lt;/code&gt; 파일을 기반으로 Git 저장소의 언어를 감지 합니다. repo 파일 &lt;a href=&quot;https://github.com/github/linguist#using-gitattributes&quot;&gt;.gitattributes&lt;/a&gt; 는 몇 가지 간단한 규칙을 사용하여 &lt;code&gt;docs&lt;/code&gt; 또는 아카이브 파일 등에 의해 산만 해지지 않도록 Linguist를 구성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c9d7d8665b5ae6fee9f8bb1f12823f160d4e3e3" translate="yes" xml:space="preserve">
          <source>Ruby is required for Linguist:</source>
          <target state="translated">Linguist에는 Ruby가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ca6b8bdf028b0bb502ffbd2b56398c1e6c1b57bf" translate="yes" xml:space="preserve">
          <source>The functions return a list of tuples like:</source>
          <target state="translated">이 함수는 다음과 같은 튜플 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="211ceccc6fb63b8fd670e94c934c468bac772b91" translate="yes" xml:space="preserve">
          <source>The primary reason behind creating this Python Linguist wrapper is automatically detecting the repo type, so that appropriate templates can be applied &lt;em&gt;en masse&lt;/em&gt; to a large number of repos.
Thus to get the repo language from the command line, as GitHub would:</source>
          <target state="translated">이 Python Linguist 래퍼를 만드는 주된 이유는 저장소 유형을 자동으로 감지하여 적절한 템플릿을 많은 저장소에 &lt;em&gt;한꺼번에&lt;/em&gt; 적용 할 수 있기 때문 입니다. 따라서 GitHub와 같이 명령 줄에서 repo 언어를 가져 오려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="559b3fc86a0855fc35e01ae9c70039440c888689" translate="yes" xml:space="preserve">
          <source>This Python wrapper makes Linguist more intuitive by warning users of uncommitted changes or additions that could make Linguist silently give inaccurate results, since Linguist only works on files that have been &lt;code&gt;git commit&lt;/code&gt;ed.</source>
          <target state="translated">이 Python 래퍼는 Linguist가 &lt;code&gt;git commit&lt;/code&gt; 된 파일에서만 작동하기 때문에 Linguist가 자동으로 부정확 한 결과를 제공 할 수있는 커밋되지 않은 변경이나 추가 사항을 사용자에게 경고하여 Linguist를보다 직관적으로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="27394ea7f87d336660b39fa869bce5d239f9d7c4" translate="yes" xml:space="preserve">
          <source>Windows: Windows Subsystem for Linux is recommended.</source>
          <target state="translated">Windows : Linux 용 Windows 하위 시스템이 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="bf6be3cb41737bb28edfafaabfd3d0f9ecb706da" translate="yes" xml:space="preserve">
          <source>be sure Gems are installed to home directory, NOT system (no sudo) by adding to &lt;code&gt;~/.bashrc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;~/.bashrc&lt;/code&gt; 에 추가하여 Gems가 시스템 (sudo 없음)이 아닌 홈 디렉토리에 설치되었는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="56b451f54b68d9f36d287c09e0a7391e3ea33ffb" translate="yes" xml:space="preserve">
          <source>ghLinguist parses text output from
&lt;a href=&quot;https://github.com/github/linguist#using-emacs-or-vim-modelines&quot;&gt;GitHub Linguist&lt;/a&gt;,
which is a Ruby program.
We call &lt;code&gt;github-linguist&lt;/code&gt; executable since &lt;code&gt;linguist&lt;/code&gt; overlaps with QT Lingiust.</source>
          <target state="translated">ghLinguist는 Ruby 프로그램 인 &lt;a href=&quot;https://github.com/github/linguist#using-emacs-or-vim-modelines&quot;&gt;GitHub Linguist의&lt;/a&gt; 텍스트 출력을 구문 분석합니다 . 우리는 전화 &lt;code&gt;github-linguist&lt;/code&gt; 이후 실행 &lt;code&gt;linguist&lt;/code&gt; QT Lingiust와 중복을.</target>
        </trans-unit>
        <trans-unit id="00e9cc64724de9876183ed4dc70c94468f4ed019" translate="yes" xml:space="preserve">
          <source>linguist-python</source>
          <target state="translated">언어 학자-비단뱀</target>
        </trans-unit>
        <trans-unit id="bac07d3773f55cec82ae1d604535d01380d65d7d" translate="yes" xml:space="preserve">
          <source>or as a Python module:</source>
          <target state="translated">또는 Python 모듈로 :</target>
        </trans-unit>
        <trans-unit id="2ecc7c4120f0ec157d3e20717e910ab2671b53c3" translate="yes" xml:space="preserve">
          <source>setup RubyGems:</source>
          <target state="translated">RubyGems 설정 :</target>
        </trans-unit>
        <trans-unit id="fb0192163d85b7478b9917e2c047d695d724deba" translate="yes" xml:space="preserve">
          <source>simple command-line parser of GitHub Linguist Ruby program.</source>
          <target state="translated">GitHub Linguist Ruby 프로그램의 간단한 명령 줄 파서.</target>
        </trans-unit>
        <trans-unit id="0cc38a6f537dad17a95e6e9d8a15103810527d81" translate="yes" xml:space="preserve">
          <source>where the second number is the percentage of code detected for that language.</source>
          <target state="translated">여기서 두 번째 숫자는 해당 언어에 대해 감지 된 코드의 비율입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
