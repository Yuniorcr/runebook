<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/kiss-headers/">
    <body>
      <group id="kiss-headers">
        <trans-unit id="1bc9183d41d3d6a6a2e03b757010468a1a9bdf54" translate="yes" xml:space="preserve">
          <source>1st example usage</source>
          <target state="translated">첫 번째 예제 사용</target>
        </trans-unit>
        <trans-unit id="c87ad62f6fdcbd807f10197353687146a7c666e3" translate="yes" xml:space="preserve">
          <source>2nd example usage</source>
          <target state="translated">두 번째 예제 사용</target>
        </trans-unit>
        <trans-unit id="9dcd14954aec464895f0d048a537f9b5f2cbc248" translate="yes" xml:space="preserve">
          <source>90% test coverage.</source>
          <target state="translated">90 % 테스트 범위.</target>
        </trans-unit>
        <trans-unit id="003fc819d323f7ea97f955febd966673f3593b7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kiss-headers&lt;/code&gt; is a basic library that allow you to handle headers as objects.</source>
          <target state="translated">&lt;code&gt;kiss-headers&lt;/code&gt; 는 헤더를 객체로 처리 할 수있는 기본 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="1fd3aeae9b7a2e45ae9a263afbcac62acbe6fd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse_it()&lt;/code&gt; method takes &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;fp&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;email.Message&lt;/code&gt; or even a &lt;code&gt;requests.Response&lt;/code&gt; or &lt;code&gt;httpx._models.Response&lt;/code&gt; itself and returns a &lt;code&gt;Headers&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;parse_it()&lt;/code&gt; 메서드는 &lt;code&gt;bytes&lt;/code&gt; , &lt;code&gt;str&lt;/code&gt; , &lt;code&gt;fp&lt;/code&gt; , &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;email.Message&lt;/code&gt; 또는 &lt;code&gt;requests.Response&lt;/code&gt; 또는 &lt;code&gt;httpx._models.Response&lt;/code&gt; 자체를 취하고 &lt;code&gt;Headers&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5c19ad2ce4176f2e4e8ef4cfb14173f7865df4b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw_headers&lt;/code&gt; now retain the following :</source>
          <target state="translated">&lt;code&gt;raw_headers&lt;/code&gt; 는 이제 다음을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="a361d312d05694ca665adf08e2da7cc322424700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No more of that!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;더 이상!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67991185dfe0b6ecaf965a87b3817d597bcbf37f" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Object oriented headers, parser and builder.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;객체 지향 헤더, 파서 및 빌더.&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="79e092c627d74fc36a3d18ee0056f042da2b01b5" translate="yes" xml:space="preserve">
          <source>A backwards-compatible syntax using bracket style.</source>
          <target state="translated">대괄호 스타일을 사용하는 이전 버전과 호환되는 구문입니다.</target>
        </trans-unit>
        <trans-unit id="c33c078a333fc2120b74c38a17002af4fa7119bf" translate="yes" xml:space="preserve">
          <source>Ability to parse any object and extract recognized headers from it, it also supports UTF-8 encoded headers.</source>
          <target state="translated">모든 객체를 구문 분석하고 인식 된 헤더를 추출하는 기능은 UTF-8 인코딩 헤더도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d1816b2553f5629a926e62cc680570764afd781c" translate="yes" xml:space="preserve">
          <source>Any syntax you like, we like.</source>
          <target state="translated">당신이 좋아하는 어떤 구문이든 우리는 좋아합니다.</target>
        </trans-unit>
        <trans-unit id="601dfd24b2adf2b17dc546cd6662031162c1a8e3" translate="yes" xml:space="preserve">
          <source>Automatically unquote and unfold the value of an attribute when retrieving it.</source>
          <target state="translated">속성을 검색 할 때 자동으로 인용을 해제하고 속성 값을 펼칩니다.</target>
        </trans-unit>
        <trans-unit id="93cdf7dc4b9a6c6390e2aa76b939fe1f2db033f1" translate="yes" xml:space="preserve">
          <source>Capability to alter headers using simple, human-readable operator notation &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">간단하고 사람이 읽을 수있는 연산자 표기법 &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;-&lt;/code&gt; 를 사용하여 헤더를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd9bc1a28da0e4f73768b8f567800f413076c400" translate="yes" xml:space="preserve">
          <source>Capable of parsing &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;fp&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;email.Message&lt;/code&gt;, &lt;code&gt;requests.Response&lt;/code&gt;, &lt;code&gt;httpx._models.Response&lt;/code&gt; and &lt;code&gt;urllib3.HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; , &lt;code&gt;fp&lt;/code&gt; , &lt;code&gt;str&lt;/code&gt; , &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;email.Message&lt;/code&gt; , &lt;code&gt;requests.Response&lt;/code&gt; , &lt;code&gt;httpx._models.Response&lt;/code&gt; 및 &lt;code&gt;urllib3.HTTPResponse&lt;/code&gt; 를 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c0df11b00d5b63def555a6b4f49da2c03baf721" translate="yes" xml:space="preserve">
          <source>Case insensitive with header name and attribute key.</source>
          <target state="translated">헤더 이름 및 속성 키에서 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc24a8ac99727f06c03f9975b971744c23617a72" translate="yes" xml:space="preserve">
          <source>Character &lt;code&gt;-&lt;/code&gt; equal &lt;code&gt;_&lt;/code&gt; in addition of above feature.</source>
          <target state="translated">문자 &lt;code&gt;-&lt;/code&gt; 위의 기능에 더해 동일 &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e34d430e4c6e6171d535010dd80bfc2fc3fc351d" translate="yes" xml:space="preserve">
          <source>Contributions, issues and feature requests are very much welcome.</source>
          <target state="translated">기여, 문제 및 기능 요청은 대단히 환영합니다.</target>
        </trans-unit>
        <trans-unit id="a0cc444297c4ee145e3be44242383b1c0e58a561" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2020 &lt;a href=&quot;https://github.com/Ousret&quot;&gt;Ahmed TAHRI @Ousret&lt;/a&gt;.</source>
          <target state="translated">저작권 &amp;copy; 2020 &lt;a href=&quot;https://github.com/Ousret&quot;&gt;Ahmed TAHRI @Ousret&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d4512e3e0e56b99a8e2a79895ba3344163b5ca7" translate="yes" xml:space="preserve">
          <source>Do not forget that headers are not OneToOne. One header can be repeated multiple times and attributes can have multiple values within the same header.</source>
          <target state="translated">헤더가 OneToOne이 아님을 잊지 마십시오. 하나의 헤더는 여러 번 반복 될 수 있으며 속성은 동일한 헤더 내에서 여러 값을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e842328c25d370169833f165c3ba9885db2ba03" translate="yes" xml:space="preserve">
          <source>Feel free to check &lt;a href=&quot;https://github.com/Ousret/kiss-headers/issues&quot;&gt;issues page&lt;/a&gt; if you want to contribute.</source>
          <target state="translated">기여하고 싶다면 &lt;a href=&quot;https://github.com/Ousret/kiss-headers/issues&quot;&gt;이슈 페이지&lt;/a&gt; 를 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7aa88249b494020451c7bb56217de6219e0c1d55" translate="yes" xml:space="preserve">
          <source>Firstly, after getting your own local copy, run &lt;code&gt;./scripts/install&lt;/code&gt; to initialize your virtual environment.
Then run &lt;code&gt;./scripts/check&lt;/code&gt; before you commit, make sure everything is still working.</source>
          <target state="translated">첫째, 자신의 로컬 사본을 얻은 후 &lt;code&gt;./scripts/install&lt;/code&gt; 을 실행 하여 가상 환경을 초기화하십시오. 그런 다음 커밋하기 전에 &lt;code&gt;./scripts/check&lt;/code&gt; 를 실행 하고 모든 것이 여전히 작동하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8f06ef4b3f6416aa2658aa2a090b25541b5bde85" translate="yes" xml:space="preserve">
          <source>Flexibility if headers are from an email or HTTP, use as you need with one library.</source>
          <target state="translated">헤더가 이메일 또는 HTTP의 경우 유연성, 하나의 라이브러리에서 필요에 따라 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d24208a47b68ac8653f668f73a44ab0a65c41da6" translate="yes" xml:space="preserve">
          <source>Fully type-annotated.</source>
          <target state="translated">완전한 유형 주석.</target>
        </trans-unit>
        <trans-unit id="e415853a3ea0c4ee38b65a23bfc9cee9cf5b0062" translate="yes" xml:space="preserve">
          <source>HTTP Headers for Humans 👋</source>
          <target state="translated">인간을위한 HTTP 헤더 👋</target>
        </trans-unit>
        <trans-unit id="61f434b31c4d51ee43c248462db1b18c87f8ee65" translate="yes" xml:space="preserve">
          <source>I have seen so many chunks of code trying to deal with these headers; often I saw this implementation:</source>
          <target state="translated">나는 이러한 헤더를 다루려고 시도하는 많은 코드 덩어리를 보았다. 종종이 구현을 보았습니다.</target>
        </trans-unit>
        <trans-unit id="5ed7ecf99bcf1bd921e22466ad8c5bf5ea92df6a" translate="yes" xml:space="preserve">
          <source>Introduced in the version 2.0, kiss-headers now allow you to create headers with more than 40+ ready-to-use, fully documented, header objects.</source>
          <target state="translated">버전 2.0에 도입 된 kiss-headers는 이제 40 개 이상의 즉시 사용 가능하고 완전히 문서화 된 헤더 개체로 헤더를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57fba4396332d5d009deb235ac3f05ba3bd319ad" translate="yes" xml:space="preserve">
          <source>Just a note: Accessing a header that has the same name as a reserved keyword must be done this way :</source>
          <target state="translated">참고 : 예약 된 키워드와 이름이 같은 헤더에 액세스하려면 다음과 같이해야합니다.</target>
        </trans-unit>
        <trans-unit id="23afabaf774d33a55eca82c4a2aa041ac30c8d52" translate="yes" xml:space="preserve">
          <source>Keep headers and attributes ordering.</source>
          <target state="translated">헤더 및 속성 순서를 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="e85cd0232956306e94cece15c2e12080c687faf8" translate="yes" xml:space="preserve">
          <source>No dependencies. And never will be.</source>
          <target state="translated">종속성이 없습니다. 그리고 결코 없을 것입니다.</target>
        </trans-unit>
        <trans-unit id="306464efd2c4c0ea29971fd9a5a93f66c9ec6569" translate="yes" xml:space="preserve">
          <source>No matter if you are currently building software using HTTP or IMAP &lt;em&gt;(message, email)&lt;/em&gt;, you should not worry about easily accessing header and associated attributes, adjectives or values.</source>
          <target state="translated">현재 HTTP 또는 IMAP &lt;em&gt;(메시지, 이메일)을&lt;/em&gt; 사용하여 소프트웨어를 구축하고 있든 관계없이 헤더 및 관련 속성, 형용사 또는 값에 쉽게 액세스하는 것에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="88284747b38162f94457c046729257179e7f298b" translate="yes" xml:space="preserve">
          <source>Plus all the features that you would expect from handling headers...</source>
          <target state="translated">또한 헤더 처리에서 기대할 수있는 모든 기능 ...</target>
        </trans-unit>
        <trans-unit id="94c5828f079646587be9afb7d51dbecbf7690e12" translate="yes" xml:space="preserve">
          <source>Properties syntax for headers and attribute in header.</source>
          <target state="translated">헤더의 헤더 및 속성에 대한 속성 구문입니다.</target>
        </trans-unit>
        <trans-unit id="3bba2c00634a1fdf3a99ed1fe3c71267f95587fb" translate="yes" xml:space="preserve">
          <source>Provide great auto-completion in Python interpreter or any capable IDE.</source>
          <target state="translated">Python 인터프리터 또는 모든 가능한 IDE에서 뛰어난 자동 완성 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2ab5abb153596cfb8681c30c7e7dfde4c787635a" translate="yes" xml:space="preserve">
          <source>Python package for object oriented headers, HTTP/1.1 style. Also parse headers.</source>
          <target state="translated">객체 지향 헤더 용 Python 패키지, HTTP / 1.1 스타일. 또한 헤더를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="b342f020314b26a7fba16949f44e287503b5ee8f" translate="yes" xml:space="preserve">
          <source>Quick start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="2190574d0475d8daaceceda4233ca11d4134827c" translate="yes" xml:space="preserve">
          <source>Remember to keep it sweet and simple when contributing to this project.</source>
          <target state="translated">이 프로젝트에 기여할 때 달콤하고 단순하게 유지하는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="146c1e3d77db235b200d0b44a302ed9abd6ac8cf" translate="yes" xml:space="preserve">
          <source>See the complete list of available header class in the full documentation.
Also, you can create your own custom header object using the class &lt;code&gt;kiss_headers.CustomHeader&lt;/code&gt;.</source>
          <target state="translated">전체 문서에서 사용 가능한 헤더 클래스의 전체 목록을 참조하십시오. 또한 &lt;code&gt;kiss_headers.CustomHeader&lt;/code&gt; 클래스를 사용하여 사용자 정의 헤더 객체를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f610a7c29db2cebb534807d1f96d81cab95202db" translate="yes" xml:space="preserve">
          <source>See the full documentation for advanced usages : &lt;a href=&quot;https://www.kiss-headers.tech/&quot;&gt;www.kiss-headers.tech&lt;/a&gt;</source>
          <target state="translated">고급 사용법에 대해서는 전체 문서를 참조하십시오 : &lt;a href=&quot;https://www.kiss-headers.tech/&quot;&gt;www.kiss-headers.tech&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e513da7b7b91ac1aa21c7440020e42464d545df9" translate="yes" xml:space="preserve">
          <source>Since v2.1 you can transform an Header object to its target &lt;code&gt;CustomHeader&lt;/code&gt; subclass to access more methods.</source>
          <target state="translated">v2.1부터는 Header 객체를 대상 &lt;code&gt;CustomHeader&lt;/code&gt; 하위 클래스로 변환하여 더 많은 메서드에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57540b4001dcab087cff17710f9a99931cbabf99" translate="yes" xml:space="preserve">
          <source>Supports headers and attributes OneToOne, OneToMany and ManySquashedIntoOne.</source>
          <target state="translated">헤더 및 속성 OneToOne, OneToMany 및 ManySquashedIntoOne을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7e431ae035b07ea63e0458ca33ac3c4cfea9792a" translate="yes" xml:space="preserve">
          <source>This project is &lt;a href=&quot;https://github.com/Ousret/kiss-headers/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt; licensed.</source>
          <target state="translated">이 프로젝트는 &lt;a href=&quot;https://github.com/Ousret/kiss-headers/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt; 라이센스를 받았습니다.</target>
        </trans-unit>
        <trans-unit id="f9ff0c66bf7772910457b86dcde6f19ba16cd763" translate="yes" xml:space="preserve">
          <source>Whatever you like, use &lt;code&gt;pipenv&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt;, it simply works. Requires Python 3.6+ installed.</source>
          <target state="translated">원하는 &lt;code&gt;pipenv&lt;/code&gt; 또는 &lt;code&gt;pip&lt;/code&gt; 를 사용하면 간단하게 작동합니다. Python 3.6 이상이 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9c6238a1ef8e80997f992ce5158d0e578d9d944f" translate="yes" xml:space="preserve">
          <source>✨ Installation</source>
          <target state="translated">✨ 설치</target>
        </trans-unit>
        <trans-unit id="c0f1cc865b450429eb785818ae5fa6ba16f9d082" translate="yes" xml:space="preserve">
          <source>❓ Why</source>
          <target state="translated">❓ 이유</target>
        </trans-unit>
        <trans-unit id="496fef518dc033f7214307560be14d86a6674d06" translate="yes" xml:space="preserve">
          <source>🍰 Usage</source>
          <target state="translated">🍰 사용법</target>
        </trans-unit>
        <trans-unit id="c540a547196d8e9fa5c608ad0d2c4163d9bb6f72" translate="yes" xml:space="preserve">
          <source>👤 Contributing</source>
          <target state="translated">👤 기여</target>
        </trans-unit>
        <trans-unit id="44eeb6a0c637ec3b2a472a37242ef171a3e9b65e" translate="yes" xml:space="preserve">
          <source>📜 Documentation</source>
          <target state="translated">📜 문서</target>
        </trans-unit>
        <trans-unit id="137a5179f79c4e116423dc2b9e08e115bcc6da25" translate="yes" xml:space="preserve">
          <source>📝 License</source>
          <target state="translated">📝 라이선스</target>
        </trans-unit>
        <trans-unit id="572de72efcb9db1607ffb8baf301c1f933aa7c0c" translate="yes" xml:space="preserve">
          <source>🔪 Features</source>
          <target state="translated">🔪 특징</target>
        </trans-unit>
        <trans-unit id="c7ecb1c408dc5ff79fb67abe922579d2487488bf" translate="yes" xml:space="preserve">
          <source>🛠️ Create headers from objects</source>
          <target state="translated">🛠️ 개체에서 헤더 만들기</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
