<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/brokkr/">
    <body>
      <group id="brokkr">
        <trans-unit id="df0e7c3bb2d179b4e325c6bb0b758f9021382cbf" translate="yes" xml:space="preserve">
          <source>(e.g. &lt;code&gt;brokkr configure-system hamma /home/pi/dev/mjolnir-hamma&lt;/code&gt;)</source>
          <target state="translated">(예 : &lt;code&gt;brokkr configure-system hamma /home/pi/dev/mjolnir-hamma&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5a2a00e69d563c38709b6ad1ed5b83319f0bd448" translate="yes" xml:space="preserve">
          <source>(e.g. &lt;code&gt;brokkr configure-unit 1 --network-interface wlan0&lt;/code&gt;)</source>
          <target state="translated">(예 : &lt;code&gt;brokkr configure-unit 1 --network-interface wlan0&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="68e7ae8485381fb1c4693b195d4c6be085c79d46" translate="yes" xml:space="preserve">
          <source>A client for data ingest/logging/uplink, remote management and autonomous &amp; central control of scientific IoT sensors as part of the Mjolnir system.</source>
          <target state="translated">Mjolnir 시스템의 일부인 데이터 수집 / 로깅 / 업 링크, 원격 관리 및 과학 IoT 센서의 자율 및 중앙 제어를위한 클라이언트입니다.</target>
        </trans-unit>
        <trans-unit id="89e3cae78745b4a188589c0d16b1e26265b5a6b1" translate="yes" xml:space="preserve">
          <source>A client for data ingest/logging/uplink, remote management and autonomous &amp;amp; central control of scientific IoT sensors as part of the Mjolnir system.
Originally developed to receive science data and status information from a local HAMMA2 lightning sensor and a Sunsaver MPPT-15L charge controller, store it locally, and transmit it back to a central server (generally, but not necessarily one running the Sindri package), but is now being evolved to be extensible and configurable for a wide variety of applications, from low-cost, low-power arrays of hundreds of environmental monitoring sensors, to sophisticated instruments mounted on aircraft and UAVs.
Further, it can maintain a reverse SSH tunnel to an accessible server for remote access, and receive and execute power, processing system and sensor control commands forwarded as TCP packets over said connection.</source>
          <target state="translated">Mjolnir 시스템의 일부인 데이터 수집 / 로깅 / 업 링크, 원격 관리 및 과학 IoT 센서의 자율 및 중앙 제어를위한 클라이언트입니다. 원래는 로컬 HAMMA2 번개 센서 및 Sunsaver MPPT-15L 충전 컨트롤러에서 과학 데이터 및 상태 정보를 수신하고 로컬에 저장 한 다음 중앙 서버로 다시 전송하도록 개발되었지만 (일반적으로 Sindri 패키지를 실행하는 서버는 아님) 현재 수백 개의 환경 모니터링 센서의 저비용 저전력 어레이에서 항공기 및 UAV에 장착 된 정교한 기기에 이르기까지 다양한 애플리케이션에 맞게 확장 및 구성 가능하도록 진화하고 있습니다. 또한 원격 액세스를 위해 액세스 가능한 서버에 대한 역 SSH 터널을 유지하고 전원을 수신하고 실행할 수 있으며,상기 연결을 통해 TCP 패킷으로 전달되는 처리 시스템 및 센서 제어 명령.</target>
        </trans-unit>
        <trans-unit id="9334f3dc0e7b236462064e977fc295b5892f9c84" translate="yes" xml:space="preserve">
          <source>A major design goal of Brokkr and the Mjolnir system is extensive, flexible and straightforward reconfiguration for different sensor networks and changing needs.
All the system configuration is normally handled through the Mjolnir-HAMMA system config package in the standard Mjolnir config schema developed for this system (located at ~/dev/mjolnir-hamma), aside from a few high-level elements specific to each unit which all have interactive configuration commands as below.</source>
          <target state="translated">Brokkr 및 Mjolnir 시스템의 주요 설계 목표는 다양한 센서 네트워크와 변화하는 요구 사항에 맞게 광범위하고 유연하며 간단한 재구성입니다. 모든 시스템 구성은 일반적으로이 시스템 용으로 개발 된 표준 Mjolnir 구성 스키마 (~ / dev / mjolnir-hamma에 있음)의 Mjolnir-HAMMA 시스템 구성 패키지를 통해 처리됩니다. 모두 아래와 같은 대화 형 구성 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbdcbd0b3ca0410196eb27a75ad7b5b2609a213a" translate="yes" xml:space="preserve">
          <source>A sample bash script will be provided that runs steps 3-9 of this workflow automatically, and can be customized to the needs of a specific system.</source>
          <target state="translated">이 워크 플로의 3-9 단계를 자동으로 실행하는 샘플 bash 스크립트가 제공되며 특정 시스템의 요구에 맞게 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cfbde6dd40b5f5e9f1a33150236c89770ab0398" translate="yes" xml:space="preserve">
          <source>A typical semi-automated install flow might look like the following</source>
          <target state="translated">일반적인 반자동 설치 흐름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e6d67902f8b25a3a2010f3b3daa75b03a203e2b7" translate="yes" xml:space="preserve">
          <source>After flashing the Pi and activating the appropriate venv, run &lt;code&gt;brokkr setup-device&lt;/code&gt; to regenerate the harnesses device-specific items (password, hashes, SSH keys, etc). You&amp;rsquo;ll need to enter the Pi&amp;rsquo;s current and desired password at the interactive prompt.</source>
          <target state="translated">Pi를 플래시하고 적절한 venv를 활성화 한 후 &lt;code&gt;brokkr setup-device&lt;/code&gt; 를 실행 하여 하네스 장치 별 항목 (비밀번호, 해시, SSH 키 등)을 재생성합니다. 대화 형 프롬프트에서 Pi의 현재 암호와 원하는 암호를 입력해야합니다.</target>
        </trans-unit>
        <trans-unit id="76441228b4024c4f569f4cc8fb76baa1924d651a" translate="yes" xml:space="preserve">
          <source>Automated clean install</source>
          <target state="translated">자동화 된 새로 설치</target>
        </trans-unit>
        <trans-unit id="a773001a7b51a529380a55f0d6c16fb10adb4af9" translate="yes" xml:space="preserve">
          <source>Basic status check and latest log output</source>
          <target state="translated">기본 상태 확인 및 최신 로그 출력</target>
        </trans-unit>
        <trans-unit id="ca0de5a9a3a53a189f55ba58efbc4ed03c5a21e1" translate="yes" xml:space="preserve">
          <source>Brokkr</source>
          <target state="translated">Brokkr</target>
        </trans-unit>
        <trans-unit id="bc19da936e001381b6f4aa20228e146bd7a68c97" translate="yes" xml:space="preserve">
          <source>Built and tested under Python 3.7 (but should be compatible with Python &amp;gt;=3.6; lack thereof should be considered a bug), and should be forward-compatible with Python 3.8 (albeit as yet not fully tested).
Compatible and tested with recent (&amp;gt;= 2019) versions of the packages listed in the &lt;code&gt;requirements.txt&lt;/code&gt; file.
Works best on Linux, but is tested to be fully functional (aside from service features) on Windows (and &lt;em&gt;should&lt;/em&gt; work equally macOS) under the Anaconda distribution.</source>
          <target state="translated">Python 3.7에서 빌드 및 테스트되었으며 (그러나 Python&amp;gt; = 3.6과 호환되어야하며, 부족하면 버그로 간주되어야 함) Python 3.8과 포워드 호환되어야합니다 (아직 완전히 테스트되지는 않았지만). &lt;code&gt;requirements.txt&lt;/code&gt; 파일에 나열된 최신 (&amp;gt; = 2019) 버전의 패키지와 호환 및 테스트되었습니다 . Linux에서 가장 잘 작동하지만 Anaconda 배포 에서 Windows에서 (서비스 기능을 제외하고) 완전히 작동하는 것으로 테스트되었습니다 ( macOS 와 동일하게 작동 &lt;em&gt;해야&lt;/em&gt; 함).</target>
        </trans-unit>
        <trans-unit id="4310a244bc3994bea41ec2d0b5a9905d781f0327" translate="yes" xml:space="preserve">
          <source>Built-in support for dozens of different sensors including ECH2O EC-5, EC-10, EC-20, DS18S20, DS1822, DS18B20, DS28EA00, DS1825, MAX31850K, HIH6130, Si7021, SHT31D, MPL3115A2, MLX90614, HTU21D, DHT11, DHT22, BMP280, BME280, MPPT-15L, HAMMA2, ADS1015, ADS1115, and generic switch, counter, GPIO and analog anemometer dir and speed, plus time, runtime, ping, and more</source>
          <target state="translated">ECH2O EC-5, EC-10, EC-20, DS18S20, DS1822, DS18B20, DS28EA00, DS1825, MAX31850K, HIH6130, Si7021, SHT31D, MPL3115A2, MLX90614, HTU21D, DHT11, DHT22를 포함한 수십 가지 센서에 대한 내장 지원 , BMP280, BME280, MPPT-15L, HAMMA2, ADS1015, ADS1115 및 일반 스위치, 카운터, GPIO 및 아날로그 풍속계 디렉토리 및 속도, 시간, 런타임, 핑 등</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="2e6a92a2c2438a218ce2871c3365ab82c4ceb3a8" translate="yes" xml:space="preserve">
          <source>Configuration files are located under the XDG-standard &lt;code&gt;~/.config/brokkr&lt;/code&gt; directory in the ini-like &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; format; they can be generated by running &lt;code&gt;brokkr configure-init&lt;/code&gt; (which will not overwrite them if they already exist), and reset to defaults with &lt;code&gt;brokkr configure-reset&lt;/code&gt;.</source>
          <target state="translated">구성 파일은 XDG 표준 &lt;code&gt;~/.config/brokkr&lt;/code&gt; 디렉토리에 ini와 유사한 &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; 형식으로 있습니다. &lt;code&gt;brokkr configure-init&lt;/code&gt; (이미 존재하는 경우 덮어 쓰지 않음) 을 실행하여 생성하고 brokkr configure- reset을 사용하여 기본값으로 &lt;code&gt;brokkr configure-reset&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="c62734684ddc3a0c843654a434c8b5c4471e12db" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2019-2020 C.A.M. Gerlach, the UAH HAMMA Group and the Project Mjolnir Contributors</source>
          <target state="translated">저작권 &amp;copy; 2019-2020 CAM Gerlach, UAH HAMMA 그룹 및 프로젝트 Mjolnir 기여자</target>
        </trans-unit>
        <trans-unit id="88fbf6c7efe3420519716388447833ffcdaec62b" translate="yes" xml:space="preserve">
          <source>Create and activate venv, &lt;code&gt;pip install brokkr --no-dependencies&lt;/code&gt; from offline sdist and copy system config dir and any keyfiles</source>
          <target state="translated">venv, &lt;code&gt;pip install brokkr --no-dependencies&lt;/code&gt; 오프라인 sdist에서 종속성 없음을 생성 및 활성화 하고 시스템 구성 디렉토리 및 모든 키 파일을 복사합니다.</target>
        </trans-unit>
        <trans-unit id="319ef02997738bb295b73861dfe0914f01984714" translate="yes" xml:space="preserve">
          <source>Create venv for Sindri and &lt;code&gt;pip install sindri&lt;/code&gt; it (optional)</source>
          <target state="translated">Sindri에 대한 venv를 &lt;code&gt;pip install sindri&lt;/code&gt; it을 pip 설치 합니다 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="b3a74fa260a0c87102115e66a35b00b46070607e" translate="yes" xml:space="preserve">
          <source>Drop-in, declarative preset system for supporting new sensors, devices and protocols; presets can be enabled with as little as 1 line in the master config file, and extensively customized via config options</source>
          <target state="translated">새로운 센서, 장치 및 프로토콜을 지원하기위한 드롭 인 선언적 사전 설정 시스템 사전 설정은 마스터 구성 파일에서 단 1 줄로 활성화 할 수 있으며 구성 옵션을 통해 광범위하게 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1a7d2f60f2f6c70f49c674d8d2b780a4ae32cd8" translate="yes" xml:space="preserve">
          <source>Easy to use, powerful plugin framework with a simple API and minimal boilterplate for input, processing and output steps; can be either simple Python files placed in a specific directory, or proper Python packages</source>
          <target state="translated">간단한 API와 입력, 처리 및 출력 단계를위한 최소한의 boilterplate가있는 사용하기 쉽고 강력한 플러그인 프레임 워크 특정 디렉토리에있는 간단한 Python 파일이거나 적절한 Python 패키지 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c60172a320014c676f21894dfa08aa4e753267d" translate="yes" xml:space="preserve">
          <source>Enable/disable running on startup</source>
          <target state="translated">시작시 실행 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="b4d79af590a8426842de51ff637e6f0b73579b90" translate="yes" xml:space="preserve">
          <source>Finally, on site, once the final unit configuration is set (or after it is changed in the future), perform on-site setup as below</source>
          <target state="translated">마지막으로 현장에서 최종 장치 구성이 설정되면 (또는 향후 변경된 후) 아래와 같이 현장 설정을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="42c90ed8eed700cd227dbeb6ce26a99c1c3e9991" translate="yes" xml:space="preserve">
          <source>Finally, you can check that Brokkr is working with &lt;code&gt;brokkr --version&lt;/code&gt;, &lt;code&gt;brokkr status&lt;/code&gt; and the other commands detailed in &lt;code&gt;brokkr --help&lt;/code&gt;.
Simply reboot to automatically complete setup and start the &lt;code&gt;brokkr&lt;/code&gt; service, or on all platforms you can manually execute it on the command line immediately with &lt;code&gt;brokkr start&lt;/code&gt;.</source>
          <target state="translated">마지막으로, Brokkr이 &lt;code&gt;brokkr --version&lt;/code&gt; , &lt;code&gt;brokkr status&lt;/code&gt; 및 &lt;code&gt;brokkr --help&lt;/code&gt; 에 자세히 설명 된 기타 명령과 함께 작동하는지 확인할 수 있습니다 . 자동으로 설정을 완료하고 &lt;code&gt;brokkr&lt;/code&gt; 서비스를 시작하려면 재부팅하기 만하면됩니다 . 또는 모든 플랫폼에서 &lt;code&gt;brokkr start&lt;/code&gt; 를 사용 하여 즉시 명령 줄에서 수동으로 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c05de758095d676ce000f3ea513ad075a2d4607" translate="yes" xml:space="preserve">
          <source>Finally, you can run the post-installation setup steps as needed for your system.
For a simple system, to just install the systemd service unit to run Brokkr on startup and restart it if it fails,</source>
          <target state="translated">마지막으로 시스템에 필요한 설치 후 설정 단계를 실행할 수 있습니다. 간단한 시스템의 경우 시작시 Brokkr을 실행하기 위해 systemd 서비스 유닛을 설치하고 실패 할 경우 다시 시작하려면,</target>
        </trans-unit>
        <trans-unit id="2c96f39e2e3366555d77bb09b610defc75b37609" translate="yes" xml:space="preserve">
          <source>First activate the appropriate Python virtual environment (&lt;code&gt;source ENV_DIR/bin/activate&lt;/code&gt;).</source>
          <target state="translated">먼저 적절한 Python 가상 환경 ( &lt;code&gt;source ENV_DIR/bin/activate&lt;/code&gt; )을 활성화 합니다.</target>
        </trans-unit>
        <trans-unit id="13b8b1ac534f3e18026c2dca8a1eb3f714e389b4" translate="yes" xml:space="preserve">
          <source>Flash SD card with OS image</source>
          <target state="translated">OS 이미지가있는 플래시 SD 카드</target>
        </trans-unit>
        <trans-unit id="ba224c48ff55deae165226f595e06e3e0e24af72" translate="yes" xml:space="preserve">
          <source>Flashing Brokkr onto a prepared card</source>
          <target state="translated">준비된 카드에 Brokkr 깜박임</target>
        </trans-unit>
        <trans-unit id="3257407a911a22d819768bebacbc7e073b8ca753" translate="yes" xml:space="preserve">
          <source>For the avoidance of doubt, per the terms of the LGPL, plugins, presets and configuration packages are not considered integral parts of the covered work, and may be released under any license, free or proprietary.</source>
          <target state="translated">의심의 여지를 없애기 위해 LGPL의 조건에 따라 플러그인, 사전 설정 및 구성 패키지는 적용되는 작업의 필수 부분으로 간주되지 않으며 무료 또는 독점 라이선스에 따라 릴리스 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a1cee1c31b1b6afbad1fb01f853c69387364179" translate="yes" xml:space="preserve">
          <source>Full log output (also logged to text file &lt;code&gt;~/brokkr/hamma/brokkr_hamma_NNN.log&lt;/code&gt;)</source>
          <target state="translated">전체 로그 출력 (텍스트 파일 &lt;code&gt;~/brokkr/hamma/brokkr_hamma_NNN.log&lt;/code&gt; 에도 기록됨 )</target>
        </trans-unit>
        <trans-unit id="77daedc1ef71a364b59a4c80fc13606ffa6b3d7b" translate="yes" xml:space="preserve">
          <source>Generate empty local per-system (i.e. override) config files if not already present:</source>
          <target state="translated">아직없는 경우 빈 로컬 시스템 별 (즉, 재정의) 구성 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fa21b581851e8a4cd6a81c8379ea846fef644298" translate="yes" xml:space="preserve">
          <source>Generate local config files</source>
          <target state="translated">로컬 구성 파일 생성</target>
        </trans-unit>
        <trans-unit id="47888729520073516f52bdb2fb6f6626f8d7ffbe" translate="yes" xml:space="preserve">
          <source>Generate, install and enable service automatically</source>
          <target state="translated">자동으로 서비스 생성, 설치 및 활성화</target>
        </trans-unit>
        <trans-unit id="cf744f6ef6edc5eaca194b11a27882d111b0429b" translate="yes" xml:space="preserve">
          <source>Hierarchical configuration system, allowing for multiple levels of settings and overrides</source>
          <target state="translated">여러 수준의 설정 및 재정의를 허용하는 계층 적 구성 시스템</target>
        </trans-unit>
        <trans-unit id="97b80cce75217a34624e11819d56cbddd17b45f8" translate="yes" xml:space="preserve">
          <source>High-level local setting configuration</source>
          <target state="translated">고급 로컬 설정 구성</target>
        </trans-unit>
        <trans-unit id="12ed95d92250a5f18f64fe6504b5b7c3960ea249" translate="yes" xml:space="preserve">
          <source>However, for setup on typical IoT devices (i.e. single-board computers like the Raspberry Pi) running a clean copy of a modern Linux-based operating system, Brokkr features a comprehensive setup routine that can bootstrap all key aspects of a factory-fresh system to be ready for deployment in the field.
Simply declare the configuration files you want copied, packages and services you want installed/enabled/disabled/removed, firewall ports you want open closed, and other custom actions (move files, sed scripts, commands run, etc) for each phase of the install as part of the system config package, and on your command, brokkr will do the rest.</source>
          <target state="translated">그러나 최신 Linux 기반 운영 체제의 깨끗한 복사본을 실행하는 일반적인 IoT 장치 (예 : Raspberry Pi와 같은 단일 보드 컴퓨터)에서의 설정을 위해 Brokkr은 공장에서 새로 나온 시스템의 모든 주요 측면을 부트 스트랩 할 수있는 포괄적 인 설정 루틴을 제공합니다. 현장에 배치 할 준비가되었습니다. 복사 할 구성 파일, 설치 / 활성화 / 비활성화 / 제거 할 패키지 및 서비스, 닫히고 싶은 방화벽 포트 및 각 단계에 대한 기타 사용자 지정 작업 (파일 이동, sed 스크립트, 명령 실행 등)을 선언하기 만하면됩니다. 시스템 구성 패키지의 일부로 설치하면 명령에 따라 brokkr이 나머지 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="d1bc328ee1c7ab3d5c2a3c02b01b45e48272f0fd" translate="yes" xml:space="preserve">
          <source>However, if local customization is needed beyond the high-level options specified here, instead of modifying the version-control-tracked system config package directly, the config system built for this is fully hierarchical and all settings can be fully overridden via the corresponding local config in ~/.config/brokkr/hamma
Brokkr fully supports configuration, logging, operation and output of any number of Mjolnir systems simultaneously, all on the same Pi.</source>
          <target state="translated">그러나 여기에 지정된 상위 수준 옵션 외에 로컬 사용자 지정이 필요한 경우 버전 제어 추적 시스템 구성 패키지를 직접 수정하는 대신이를 위해 빌드 된 구성 시스템은 완전히 계층 적이며 모든 설정은 해당 로컬을 통해 완전히 재정의 될 수 있습니다. ~ / .config / brokkr / hamma의 config Brokkr은 동일한 Pi에서 모든 Mjolnir 시스템의 구성, 로깅, 작동 및 출력을 동시에 완벽하게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="97d12a184a5d895dd8d79249f8f8c7cad4f33cb2" translate="yes" xml:space="preserve">
          <source>If a card is already prepared via the steps mentioned in the &quot;Automated clean install&quot; section (minus the &lt;code&gt;brokkr setup-device&lt;/code&gt; step), flashing it onto another device and preparing it for deployment is simple.</source>
          <target state="translated">&quot;자동 새로 설치&quot;섹션 ( &lt;code&gt;brokkr setup-device&lt;/code&gt; 단계 제외)에 언급 된 단계를 통해 카드가 이미 준비된 경우 다른 장치에 플래시하고 배포를 준비하는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="a8f39a0eaff1e31685a2b14797108f08b8c37cd0" translate="yes" xml:space="preserve">
          <source>Installation and Setup</source>
          <target state="translated">설치 및 설정</target>
        </trans-unit>
        <trans-unit id="5d015b02f115b4632d48e12bcb7cae89f82ea237" translate="yes" xml:space="preserve">
          <source>Interactive Use (Foreground)</source>
          <target state="translated">대화 형 사용 (전경)</target>
        </trans-unit>
        <trans-unit id="c961da4e3b66e2f97987a7afe330011eb7cb4e36" translate="yes" xml:space="preserve">
          <source>Key Features</source>
          <target state="translated">주요 특징들</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="fa1d2b711c5f0d36162d373298d2f21f32702b2f" translate="yes" xml:space="preserve">
          <source>Lightweight realtime monitoring (prints to screen, can also write to file): &lt;code&gt;brokkr monitor&lt;/code&gt;</source>
          <target state="translated">경량 실시간 모니터링 (화면에 인쇄, 파일에 쓰기 가능) : &lt;code&gt;brokkr monitor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46f3d390d11a7da4256c70225dd592812540005" translate="yes" xml:space="preserve">
          <source>Main foreground start command, for testing: &lt;code&gt;brokkr start&lt;/code&gt;</source>
          <target state="translated">테스트 용 기본 포 그라운드 시작 명령 : &lt;code&gt;brokkr start&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e991aaeb0eee65f54df8d54a85f87b0368489d6" translate="yes" xml:space="preserve">
          <source>On Linux, Brokkr can be installed like any other Python package via &lt;code&gt;pip&lt;/code&gt; into a virtual environment like so (with the venv created inside &lt;code&gt;ENV_NAME&lt;/code&gt; in the current working directory), with the extra packages needed to support specific sensor types (e.g. &lt;code&gt;modbus&lt;/code&gt;, &lt;code&gt;serial&lt;/code&gt;, &lt;code&gt;adafruit&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; etc) installed as desired:</source>
          <target state="translated">Linux에서 Brokkr은 &lt;code&gt;pip&lt;/code&gt; 를 통해 다른 Python 패키지 와 같이 ( 현재 작업 디렉토리의 &lt;code&gt;ENV_NAME&lt;/code&gt; 내에 생성 된 venv를 사용하여 ) 특정 센서 유형 (예 : &lt;code&gt;modbus&lt;/code&gt; , &lt;code&gt;serial&lt;/code&gt; ,) 을 지원하는 데 필요한 추가 패키지와 함께 가상 환경에 설치할 수 있습니다 . &lt;code&gt;adafruit&lt;/code&gt; , &lt;code&gt;all&lt;/code&gt; etc) 원하는대로 설치 :</target>
        </trans-unit>
        <trans-unit id="399eaf4c2397a460e71f0736af04329d0162e90f" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, use of Anaconda/Miniconda is recommended, substituting conda environments for venvs. While these platforms are supported for development, some functionality specific to running Brokkr in production may be unavailable.</source>
          <target state="translated">Windows 및 Mac에서는 Anaconda / Miniconda를 사용하는 것이 좋으며 conda 환경을 venvs로 대체합니다. 이러한 플랫폼은 개발 용으로 지원되지만 프로덕션 환경에서 Brokkr을 실행하는 특정 기능을 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="716a2c8c4fde889342cd7e06d095fce13857168b" translate="yes" xml:space="preserve">
          <source>On site, you'll want to take a couple additional actions to pair a specific device with a specific site, and test connectivity.</source>
          <target state="translated">사이트에서 특정 장치를 특정 사이트와 페어링하고 연결을 테스트하기 위해 몇 가지 추가 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51493e8a9de2950a334522f0e43858485a6251d1" translate="yes" xml:space="preserve">
          <source>On-site setup</source>
          <target state="translated">현장 설정</target>
        </trans-unit>
        <trans-unit id="17241a9c4a9c68dd062916f1b9b70e43b884fb5b" translate="yes" xml:space="preserve">
          <source>Once on-site, perform unit configuration (see below)</source>
          <target state="translated">현장에서 장치 구성을 수행합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="78505fd9911563f1eb2775ffce5297c91559915c" translate="yes" xml:space="preserve">
          <source>Oneshot status output: &lt;code&gt;brokkr status&lt;/code&gt;</source>
          <target state="translated">Oneshot 상태 출력 : &lt;code&gt;brokkr status&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="72089056cb494d3993d84660abfe5bb0f108bdc4" translate="yes" xml:space="preserve">
          <source>Perform basic raspi-config, Fedora, etc. setup; change username if desired</source>
          <target state="translated">기본 raspi-config, Fedora 등 설정을 수행합니다. 원하는 경우 사용자 이름 변경</target>
        </trans-unit>
        <trans-unit id="06c8d1a41ced8c0c0de9fcab6174175734fd0cc9" translate="yes" xml:space="preserve">
          <source>Plugins for alerts/triggered actions, Slack notifications, REST/web APIs and much more</source>
          <target state="translated">경고 / 트리거 된 작업, Slack 알림, REST / 웹 API 등을위한 플러그인</target>
        </trans-unit>
        <trans-unit id="554dbf4b2a66f718b1b7bae772adb8b807e3d059" translate="yes" xml:space="preserve">
          <source>Power off the device, connect it to all desired hardware and reboot</source>
          <target state="translated">장치의 전원을 끄고 원하는 모든 하드웨어에 연결 한 다음 재부팅하십시오.</target>
        </trans-unit>
        <trans-unit id="85b4bfa3efef108eceac05a5eb2c69ae56267c4f" translate="yes" xml:space="preserve">
          <source>Register a Mjolnir system:</source>
          <target state="translated">Mjolnir 시스템 등록 :</target>
        </trans-unit>
        <trans-unit id="e853357f89a151a530194feb38e01e74806c384b" translate="yes" xml:space="preserve">
          <source>Register, update and remove systems</source>
          <target state="translated">시스템 등록, 업데이트 및 제거</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="1d7c76d34a5f676f0c4ae7099ecae62255f24167" translate="yes" xml:space="preserve">
          <source>Reset configuration</source>
          <target state="translated">구성 재설정</target>
        </trans-unit>
        <trans-unit id="42578e5d9e1ad91e419b4eea2cf554b538b9e239" translate="yes" xml:space="preserve">
          <source>Reset unit and local override configuration (optionally minus system registry):</source>
          <target state="translated">장치 및 로컬 재정의 구성 재설정 (선택적으로 시스템 레지스트리 제외) :</target>
        </trans-unit>
        <trans-unit id="51235016e6ea8a9a323dfad0689066c96d2d7995" translate="yes" xml:space="preserve">
          <source>Robust error handling, status logging, automatic installation, service configuration and multiprocess management infrastructure</source>
          <target state="translated">강력한 오류 처리, 상태 로깅, 자동 설치, 서비스 구성 및 다중 프로세스 관리 인프라</target>
        </trans-unit>
        <trans-unit id="bfee5010ffc750fb03e7c28edbb83063393f7751" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr configure-system &amp;lt;systemname&amp;gt; &amp;lt;systempath&amp;gt;&lt;/code&gt; to set the system config dir path</source>
          <target state="translated">실행 &lt;code&gt;brokkr configure-system &amp;lt;systemname&amp;gt; &amp;lt;systempath&amp;gt;&lt;/code&gt; 시스템 설정의 디렉토리 경로를 설정합니다</target>
        </trans-unit>
        <trans-unit id="87b210d27e06dbcbfe42cf4f3d8a5072ae1770a5" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr configure-unit &amp;lt;unit-number&amp;gt; --network-interface &amp;lt;network-interface&amp;gt;&lt;/code&gt; to set up the basic unit configuration</source>
          <target state="translated">실행 &lt;code&gt;brokkr configure-unit &amp;lt;unit-number&amp;gt; --network-interface &amp;lt;network-interface&amp;gt;&lt;/code&gt; 기본 단위 구성을 설정하려면</target>
        </trans-unit>
        <trans-unit id="f0b6ea222868a07efe49133de868fdd47d59c887" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr install --phase 1&lt;/code&gt; to perform the necessary steps to enable Internet</source>
          <target state="translated">실행 &lt;code&gt;brokkr install --phase 1&lt;/code&gt; 인터넷을 사용하는 데 필요한 단계를 수행</target>
        </trans-unit>
        <trans-unit id="5ee83b0ebef19d7e3584a21696a0c3d46cb3bc51" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr install --phase 2&lt;/code&gt; to install remaining items</source>
          <target state="translated">&lt;code&gt;brokkr install --phase 2&lt;/code&gt; 를 실행 하여 나머지 항목을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="3b93bd0e50d94913ace4049d712917d3fe3d330f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr setup-device&lt;/code&gt; to trigger device-specific setup actions</source>
          <target state="translated">실행 &lt;code&gt;brokkr setup-device&lt;/code&gt; 트리거 장치 별 설치 작업에</target>
        </trans-unit>
        <trans-unit id="4c4bd4d957efb581c943efb812de55f75a03aad6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr setup-unit&lt;/code&gt; to perform final per-unit on-site setup, register and test the link to the sensor, and verify connectivity to the upstream server</source>
          <target state="translated">실행 &lt;code&gt;brokkr setup-unit&lt;/code&gt; , 최종 원단위 현장 설치를 수행하는 등록 및 상기 센서로의 링크를 테스트 업스트림 서버로의 연결을 확인하십시오</target>
        </trans-unit>
        <trans-unit id="ccbbd3b891e1d62d7afb7fe8b8360f7e8aa9e74b" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;brokkr status&lt;/code&gt; command to get a snapshot of the monitoring data, and the &lt;code&gt;brokkr monitor&lt;/code&gt; command to get a pretty-printed display of all the main monitoring variables, updated in real time (1s) as you watch.</source>
          <target state="translated">&lt;code&gt;brokkr status&lt;/code&gt; 명령을 실행하여 모니터링 데이터의 스냅 샷을 가져오고, &lt;code&gt;brokkr monitor&lt;/code&gt; 명령을 실행하여 모든 주요 모니터링 변수의 예쁘게 인쇄 된 디스플레이를 확인하고 실시간으로 (1 초) 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="94cf566341875b58d9b39bc87b5f65577df3a464" translate="yes" xml:space="preserve">
          <source>Running Brokkr as a Service (Background)</source>
          <target state="translated">Brokkr을 서비스로 실행 (백그라운드)</target>
        </trans-unit>
        <trans-unit id="563158da254be63c56174e1d19fea05370059346" translate="yes" xml:space="preserve">
          <source>Set per-unit configuration</source>
          <target state="translated">장치 별 구성 설정</target>
        </trans-unit>
        <trans-unit id="d094472ebcd2d75164a0dc2a4a20cfa832aed869" translate="yes" xml:space="preserve">
          <source>Standard install</source>
          <target state="translated">표준 설치</target>
        </trans-unit>
        <trans-unit id="8bc2be80f7224446b77d2c9b05d01f3f5d3bfcb8" translate="yes" xml:space="preserve">
          <source>Start/stop</source>
          <target state="translated">시작 멈춤</target>
        </trans-unit>
        <trans-unit id="960a81e0b68cdb65421b7df897591e20d4ed392b" translate="yes" xml:space="preserve">
          <source>Support for SPI, I2C, GPIO, Analog, SMBus, UART, Modbus, TCP, UDP, and more as inputs, and print/pretty print, file and system logging, CSV, and TCP packets as output built into the core</source>
          <target state="translated">입력으로 SPI, I2C, GPIO, 아날로그, SMBus, UART, Modbus, TCP, UDP 등을 지원하고 코어에 내장 된 출력으로 인쇄 / 예쁜 인쇄, 파일 및 시스템 로깅, CSV 및 TCP 패킷 지원</target>
        </trans-unit>
        <trans-unit id="c2145d4397e46337b1ff56b05f5f7ad48893fa52" translate="yes" xml:space="preserve">
          <source>System-independent and fully multi-system capable; all metadata, config, plugins and presets stored within VCS-trackable self-contained package for easy management</source>
          <target state="translated">시스템 독립적이고 완전한 다중 시스템 가능; 손쉬운 관리를 위해 VCS 추적 가능한 독립형 패키지에 저장된 모든 메타 데이터, 구성, 플러그인 및 사전 설정</target>
        </trans-unit>
        <trans-unit id="e96d9e81dc6029dd77e151b1f8cb398566ae2b9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brokkr install-*&lt;/code&gt; commands perform installation functions and the &lt;code&gt;brokkr configure-*&lt;/code&gt; scripts help set up a new or updated &lt;code&gt;brokkr&lt;/code&gt; install.
Use &lt;code&gt;brokkr --help&lt;/code&gt; to get help, &lt;code&gt;brokkr --version&lt;/code&gt; to get the current version.
On Linux, the &lt;code&gt;brokkr&lt;/code&gt; systemd service can be interacted with via the standard systemd commands, e.g. &lt;code&gt;sudo systemd {start, stop, enable, disable} brokkr-hamma&lt;/code&gt;, &lt;code&gt;systemd status brokkr-hamma&lt;/code&gt;, &lt;code&gt;journalctl -u brokkr-hamma&lt;/code&gt;, etc, and the same for &lt;code&gt;autossh-brokkr&lt;/code&gt; which controls remote SSH connectivity.</source>
          <target state="translated">&lt;code&gt;brokkr install-*&lt;/code&gt; 명령은 설치 기능을 수행하고 &lt;code&gt;brokkr configure-*&lt;/code&gt; 스크립트의 도움을 새로 설정하거나 업데이트 &lt;code&gt;brokkr&lt;/code&gt; 설치합니다. &lt;code&gt;brokkr --help&lt;/code&gt; 을 얻으려면 brokkr --help 를 사용 하고 현재 버전을 얻으려면 &lt;code&gt;brokkr --version&lt;/code&gt; 을 사용하십시오 . Linux에서 &lt;code&gt;brokkr&lt;/code&gt; systemd 서비스는 표준 systemd 명령 (예 : &lt;code&gt;sudo systemd {start, stop, enable, disable} brokkr-hamma&lt;/code&gt; , &lt;code&gt;systemd status brokkr-hamma&lt;/code&gt; , &lt;code&gt;journalctl -u brokkr-hamma&lt;/code&gt; 등) 을 통해 상호 작용할 수 있습니다 . 원격 SSH 연결을 제어하는 &lt;code&gt;autossh-brokkr&lt;/code&gt; 에 대해서도 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="2687badc746fe70d4db188c2e9b0a0cf37b3178e" translate="yes" xml:space="preserve">
          <source>The code at the following paths are released under the MIT (Expat) License, Copyright &amp;copy; C.A.M. Gerlach 2019-2020, and subject to future independent release:</source>
          <target state="translated">다음 경로의 코드는 MIT (Expat) 라이선스, Copyright &amp;copy; CAM Gerlach 2019-2020에 따라 릴리스되며 향후 독립 릴리스에 따라 달라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e78bb63a768515f4d7bd7470aca0bca61f701b34" translate="yes" xml:space="preserve">
          <source>The goal of Project Mjolnir is to make it easy for PIs or students without a coding background to easily get started gathering and analyzing data from low-cost sensors right away, and allowing those with basic programming experience to easily develop, test and share their own plugins to work with new types of sensors, outputs and more with little or no extra work over a &quot;quick and dirty&quot; approach but major long-term benefits.
The long-term vision is to create an ecosystem of open-source presets, plugins, examples and more for a wide variety of low-cost scientific IoT sensors.</source>
          <target state="translated">Project Mjolnir의 목표는 코딩 배경이없는 PI 또는 학생이 저렴한 센서에서 즉시 데이터를 쉽게 수집 및 분석하고 기본 프로그래밍 경험이있는 사람들이 쉽게 개발, 테스트 및 공유 할 수 있도록하는 것입니다. 플러그인은 &quot;빠르고 더티&quot;접근 방식에 대한 추가 작업이 거의 또는 전혀없이 새로운 유형의 센서, 출력 등과 함께 작동하지만 장기적인 이점이 있습니다. 장기적인 비전은 다양한 저가형 과학 IoT 센서를위한 오픈 소스 사전 설정, 플러그인, 예제 등의 에코 시스템을 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="10e872cab5fb3b580c0b7dfff98cc73a6fd5a69a" translate="yes" xml:space="preserve">
          <source>Then, you need to take a few more steps to get your environment set up: clone the system config package(s) you want to use with Brokkr (replace the example &lt;code&gt;mjolnir-config-template&lt;/code&gt; path with yours), register them, and set up your config and unit information.
&lt;code&gt;SYSTEM_SHORTNAME&lt;/code&gt; is whatever name you want to register the system with in the system file, and &lt;code&gt;UNIT_NUMBER&lt;/code&gt; is the integer number (arbitrary, but should be unique) you want to designate the device you're installing on.</source>
          <target state="translated">그런 다음 환경 설정을 위해 몇 가지 단계를 더 수행해야합니다. Brokkr에서 사용할 시스템 구성 패키지를 복제하고 (예제 &lt;code&gt;mjolnir-config-template&lt;/code&gt; 경로를 사용자의 것으로 대체 ) 등록하고 설정합니다. 구성 및 단위 정보를 설정하십시오. &lt;code&gt;SYSTEM_SHORTNAME&lt;/code&gt; 은 시스템 파일에 시스템을 등록하려는 이름이고 &lt;code&gt;UNIT_NUMBER&lt;/code&gt; 는 설치할 장치를 지정할 정수 (임의이지만 고유해야 함)입니다.</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">그때:</target>
        </trans-unit>
        <trans-unit id="42f822f2b109856b4b6a9dc55420460d9d276977" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.</source>
          <target state="translated">이 프로그램은 유용 할 것이라는 희망으로 배포되지만 어떠한 보증도 없습니다. 상품성 또는 특정 목적에의 적합성에 대한 묵시적 보증도 없습니다. 자세한 내용은 GNU Lesser General Public License를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="acaabdd95d8cc1cd1584cf7bb05e48d8f0ed363d" translate="yes" xml:space="preserve">
          <source>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.</source>
          <target state="translated">이 프로그램은 무료 소프트웨어입니다. Free Software Foundation에서 게시 한 GNU Lesser General Public License, 라이선스 버전 3 또는 이후 버전 (귀하의 선택에 따라)에 따라 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90db4de6cf0fe6fc9e7973ae53828c714bdb6c0e" translate="yes" xml:space="preserve">
          <source>Update all packages to latest (&lt;code&gt;apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove&lt;/code&gt;) and reinstall brokkr with all packages (&lt;code&gt;pip uninstall brokkr &amp;amp;&amp;amp; pip install brokkr&lt;/code&gt;)</source>
          <target state="translated">모든 패키지를 최신으로 업데이트하고 ( &lt;code&gt;apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove&lt;/code&gt; ) 모든 패키지와 함께 brokkr을 다시 설치합니다 ( &lt;code&gt;pip uninstall brokkr &amp;amp;&amp;amp; pip install brokkr&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="2fb41479dc6421d4c643d86f661f2e3684be68d4" translate="yes" xml:space="preserve">
          <source>You can also use this command to remove, update, verify and set default systems with the appropriate arguments, see brokkr configure-system --help``</source>
          <target state="translated">이 명령을 사용하여 적절한 인수로 기본 시스템을 제거, 업데이트, 확인 및 설정할 수도 있습니다. brokkr configure-system --help를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b9f0d03fa5a402a18c38ed6eb7d7ab0e4b5dd9eb" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see &lt;a href=&quot;https://www.gnu.org/licenses/&quot;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.</source>
          <target state="translated">이 프로그램과 함께 GNU Lesser General Public License의 사본을 받았을 것입니다. 그렇지 않은 경우 &lt;a href=&quot;https://www.gnu.org/licenses/&quot;&gt;https://www.gnu.org/licenses/를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e64d4e68bb2e9025c291a1148c58a88aae8b9191" translate="yes" xml:space="preserve">
          <source>or for a full install of all post-setup tasks, including the config files, firewall access, and (on Linux) serial port access, Brokkr systemd service, and SSH/AutoSSH service and configuration:</source>
          <target state="translated">또는 구성 파일, 방화벽 액세스 및 (Linux의 경우) 직렬 포트 액세스, Brokkr 시스템 서비스, SSH / AutoSSH 서비스 및 구성을 포함한 모든 설치 후 작업의 전체 설치 :</target>
        </trans-unit>
        <trans-unit id="ee34e52140cdf4b8a1a9b589b5b22ba65591ef25" translate="yes" xml:space="preserve">
          <source>or, to install a development version:</source>
          <target state="translated">또는 개발 버전을 설치하려면 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
