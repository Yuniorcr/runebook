<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/plantuml-markdown/">
    <body>
      <group id="plantuml-markdown">
        <trans-unit id="1a5106ff2e085e537be7c751d722a94bed1390e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; Extension for &lt;a href=&quot;https://python-markdown.github.io/&quot;&gt;Python-Markdown&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; Extension for &lt;a href=&quot;https://python-markdown.github.io/&quot;&gt;Python-Markdown&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="456404ea4a8cb7fa2c783e929a4cdffd4ea100f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alt&lt;/code&gt;: text to show when image is not available. Defaults to &lt;code&gt;uml diagram&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;alt&lt;/code&gt; : text to show when image is not available. Defaults to &lt;code&gt;uml diagram&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3a9d1333b0de9f61e2c8326c658ef4795e9a571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base_dir&lt;/code&gt;: path where to search for external diagrams files</source>
          <target state="translated">&lt;code&gt;base_dir&lt;/code&gt; : path where to search for external diagrams files</target>
        </trans-unit>
        <trans-unit id="8af3b4d33e13222f5102ea32418aa8aa7f55fd49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cachedir&lt;/code&gt;: directory for caching of diagrams. Defaults to &lt;code&gt;''&lt;/code&gt;, no caching</source>
          <target state="translated">&lt;code&gt;cachedir&lt;/code&gt; : directory for caching of diagrams. Defaults to &lt;code&gt;''&lt;/code&gt; , no caching</target>
        </trans-unit>
        <trans-unit id="6c9138ad14dbdfaeeb40e59b223e11eb9b1dae58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classes&lt;/code&gt;: space separated list of classes for the generated image. Defaults to &lt;code&gt;uml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;classes&lt;/code&gt; : space separated list of classes for the generated image. Defaults to &lt;code&gt;uml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8489a3bd5fb45e77ec0e841d1e74b74b6c146cef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt;: format of image to generate (&lt;code&gt;png&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt; or &lt;code&gt;txt&lt;/code&gt;). Defaults to &lt;code&gt;png&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; : format of image to generate ( &lt;code&gt;png&lt;/code&gt; , &lt;code&gt;svg&lt;/code&gt; or &lt;code&gt;txt&lt;/code&gt; ). Defaults to &lt;code&gt;png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c5f50d90dd436ef536728303caa52646f977713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;png&lt;/code&gt;: HTML &lt;code&gt;img&lt;/code&gt; tag with embedded png image</source>
          <target state="translated">&lt;code&gt;png&lt;/code&gt; : HTML &lt;code&gt;img&lt;/code&gt; tag with embedded png image</target>
        </trans-unit>
        <trans-unit id="c0dadda9463702f1d0d3aada8a84633cddc86a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt;: extension priority. Higher values means the extension is applied sooner than others. Defaults to &lt;code&gt;23&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; : extension priority. Higher values means the extension is applied sooner than others. Defaults to &lt;code&gt;23&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c4c7057c545f25c6d62460c0c98e8c3e8112c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server&lt;/code&gt;: PlantUML server url, for remote rendering. Defaults to &lt;code&gt;''&lt;/code&gt;, use local command</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; : PlantUML server url, for remote rendering. Defaults to &lt;code&gt;''&lt;/code&gt; , use local command</target>
        </trans-unit>
        <trans-unit id="68178c8b92bf92c893d969d9dd7872fc47f19935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; parameter is used for inclusion of an external source diagram instead on an inline code. Here's an example in GitLab/GitHub block syntax.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; parameter is used for inclusion of an external source diagram instead on an inline code. Here's an example in GitLab/GitHub block syntax.</target>
        </trans-unit>
        <trans-unit id="7817ccef33170464fedc6618937b55bceec3eb67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;svg&lt;/code&gt;: HTML &lt;code&gt;img&lt;/code&gt; tag with embedded svg image (links are not navigable)</source>
          <target state="translated">&lt;code&gt;svg&lt;/code&gt; : HTML &lt;code&gt;img&lt;/code&gt; tag with embedded svg image (links are not navigable)</target>
        </trans-unit>
        <trans-unit id="fa5ffb379ac8835dd8d139ec3159610a7dab3799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;svg_inline&lt;/code&gt;: HTML5 &lt;code&gt;svg&lt;/code&gt; tag with inline svg image source (links are navigable, can be manipulated with CSS rules)</source>
          <target state="translated">&lt;code&gt;svg_inline&lt;/code&gt; : HTML5 &lt;code&gt;svg&lt;/code&gt; tag with inline svg image source (links are navigable, can be manipulated with CSS rules)</target>
        </trans-unit>
        <trans-unit id="be5902538b85ec7b97dc4fecc60a046aed781506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;svg_object&lt;/code&gt;: HTML &lt;code&gt;object&lt;/code&gt; tag with embedded svg image (links are navigable)</source>
          <target state="translated">&lt;code&gt;svg_object&lt;/code&gt; : HTML &lt;code&gt;object&lt;/code&gt; tag with embedded svg image (links are navigable)</target>
        </trans-unit>
        <trans-unit id="f77cee7780094158f0a3bff328e23e783e7d28b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;title&lt;/code&gt;: tooltip for the diagram</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; : tooltip for the diagram</target>
        </trans-unit>
        <trans-unit id="3ea3d81f470b40d37e26189eb01e2c58d14597c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;txt&lt;/code&gt;: plain text diagrams.</source>
          <target state="translated">&lt;code&gt;txt&lt;/code&gt; : plain text diagrams.</target>
        </trans-unit>
        <trans-unit id="aa96e813c72de42d789f4473060b11ac953e58bb" translate="yes" xml:space="preserve">
          <source>A PlantUML plugin for Markdown</source>
          <target state="translated">A PlantUML plugin for Markdown</target>
        </trans-unit>
        <trans-unit id="85777c3bdfc3022998f814a03a7f01670750500e" translate="yes" xml:space="preserve">
          <source>After installed, you can use this plugin by activating it in the &lt;code&gt;markdown_py&lt;/code&gt; command. For example:</source>
          <target state="translated">After installed, you can use this plugin by activating it in the &lt;code&gt;markdown_py&lt;/code&gt; command. For example:</target>
        </trans-unit>
        <trans-unit id="7101cbd48ba01f4b085d3d571bde3edc1fe01832" translate="yes" xml:space="preserve">
          <source>Before to run tests, install the required dependencies:</source>
          <target state="translated">Before to run tests, install the required dependencies:</target>
        </trans-unit>
        <trans-unit id="83b12c22b6fd9e0e627eaeb3267f1315feca9910" translate="yes" xml:space="preserve">
          <source>But before to use it, you need to configure which &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; binary to use: a local binary, or a remote server.</source>
          <target state="translated">But before to use it, you need to configure which &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; binary to use: a local binary, or a remote server.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">ì˜ˆ:</target>
        </trans-unit>
        <trans-unit id="e9c2e6225f7fed94c12882e3a124336afa18bd8b" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://www.gentoo.org&quot;&gt;Gentoo Linux&lt;/a&gt; there is an ebuild at &lt;a href=&quot;http://gpo.zugaina.org/dev-util/plantuml/RDep&quot;&gt;http://gpo.zugaina.org/dev-util/plantuml/RDep&lt;/a&gt;: you can download
the ebuild and the &lt;code&gt;files&lt;/code&gt; subfolder or you can add the &lt;code&gt;zugaina&lt;/code&gt; repository with &lt;a href=&quot;http://wiki.gentoo.org/wiki/Layman&quot;&gt;layman&lt;/a&gt;
(recommended).</source>
          <target state="translated">For &lt;a href=&quot;http://www.gentoo.org&quot;&gt;Gentoo Linux&lt;/a&gt; there is an ebuild at &lt;a href=&quot;http://gpo.zugaina.org/dev-util/plantuml/RDep&quot;&gt;http://gpo.zugaina.org/dev-util/plantuml/RDep&lt;/a&gt;: you can download the ebuild and the &lt;code&gt;files&lt;/code&gt; subfolder or you can add the &lt;code&gt;zugaina&lt;/code&gt; repository with &lt;a href=&quot;http://wiki.gentoo.org/wiki/Layman&quot;&gt;layman&lt;/a&gt; (recommended).</target>
        </trans-unit>
        <trans-unit id="fef214f71a23eb8d50fb6b9a17966d2f4f49255b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;markdown_py&lt;/code&gt;, simply write a YAML file with the configurations and use the &lt;code&gt;-c&lt;/code&gt; option on the command line.
See the &lt;a href=&quot;#using-plantuml-server&quot;&gt;Using a PlantUML server&lt;/a&gt; section for an example.</source>
          <target state="translated">For &lt;code&gt;markdown_py&lt;/code&gt; , simply write a YAML file with the configurations and use the &lt;code&gt;-c&lt;/code&gt; option on the command line. See the &lt;a href=&quot;#using-plantuml-server&quot;&gt;Using a PlantUML server&lt;/a&gt; section for an example.</target>
        </trans-unit>
        <trans-unit id="3767693570a529ca8fcd7d0c7c01285a32487879" translate="yes" xml:space="preserve">
          <source>For passing options to the &lt;code&gt;plantuml_plugin&lt;/code&gt; see the documentation of the tool you are using.</source>
          <target state="translated">For passing options to the &lt;code&gt;plantuml_plugin&lt;/code&gt; see the documentation of the tool you are using.</target>
        </trans-unit>
        <trans-unit id="51846af6b402feee56fbe67e1a396385d8dcb52a" translate="yes" xml:space="preserve">
          <source>From version &lt;code&gt;2.0&lt;/code&gt; a &lt;a href=&quot;http://plantuml.com/server&quot;&gt;PlantUML server&lt;/a&gt; can be used for rendering diagrams. This speedups a
lot the diagrams rendering but needs to send the diagram source to a server.</source>
          <target state="translated">From version &lt;code&gt;2.0&lt;/code&gt; a &lt;a href=&quot;http://plantuml.com/server&quot;&gt;PlantUML server&lt;/a&gt; can be used for rendering diagrams. This speedups a lot the diagrams rendering but needs to send the diagram source to a server.</target>
        </trans-unit>
        <trans-unit id="b4860e4c190a4a4817912a4bd925515b7e3c742e" translate="yes" xml:space="preserve">
          <source>In either cases you need to specify the URL of the server in a configuration file like:</source>
          <target state="translated">In either cases you need to specify the URL of the server in a configuration file like:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">ì„¤ì¹˜</target>
        </trans-unit>
        <trans-unit id="b31afd8ed3b2ebb53197c18fbffb2ff6ee3e4a55" translate="yes" xml:space="preserve">
          <source>Make sure the &lt;code&gt;plantuml.bat&lt;/code&gt; is on the path.</source>
          <target state="translated">Make sure the &lt;code&gt;plantuml.bat&lt;/code&gt; is on the path.</target>
        </trans-unit>
        <trans-unit id="dcab5c55e34b5522815f6331285eab3d74654cfe" translate="yes" xml:space="preserve">
          <source>On Windows can be used the following &lt;code&gt;plantuml.bat&lt;/code&gt; (many thanks to &lt;a href=&quot;https://github.com/henn1001&quot;&gt;henn1001&lt;/a&gt;):</source>
          <target state="translated">On Windows can be used the following &lt;code&gt;plantuml.bat&lt;/code&gt; (many thanks to &lt;a href=&quot;https://github.com/henn1001&quot;&gt;henn1001&lt;/a&gt;):</target>
        </trans-unit>
        <trans-unit id="5a2a0cfee4cea5ed56265a5d1d5d73c7cd70b79c" translate="yes" xml:space="preserve">
          <source>Options are optional (otherwise the wouldn't be options), but if present must be specified in the order &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;classes&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;source&lt;/code&gt;.
The option value may be enclosed in single or double quotes.</source>
          <target state="translated">Options are optional (otherwise the wouldn't be options), but if present must be specified in the order &lt;code&gt;format&lt;/code&gt; , &lt;code&gt;classes&lt;/code&gt; , &lt;code&gt;alt&lt;/code&gt; , &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; , and &lt;code&gt;source&lt;/code&gt; . The option value may be enclosed in single or double quotes.</target>
        </trans-unit>
        <trans-unit id="434fabe960173c54dbff54dc5e9a705c01e2cb63" translate="yes" xml:space="preserve">
          <source>Plugin options</source>
          <target state="translated">Plugin options</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">í…ŒìŠ¤íŠ¸ ì‹¤í–‰</target>
        </trans-unit>
        <trans-unit id="cb78041bc60849df97f020df96013f11b6bedb96" translate="yes" xml:space="preserve">
          <source>Supported values for &lt;code&gt;format&lt;/code&gt; parameter are:</source>
          <target state="translated">Supported values for &lt;code&gt;format&lt;/code&gt; parameter are:</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="0ad87b7ca48b236388e9d40f2c006d9a4dd7c5c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PLANTUML_JAVAOPTS&lt;/code&gt; variable can be used to set specific Java options, such as memory tuning options,
or to set system variable used by PlantUML, such as then include search path. This would avoid modifications of the
&lt;code&gt;plantuml&lt;/code&gt; script.
For example, with a diagram like:</source>
          <target state="translated">The &lt;code&gt;PLANTUML_JAVAOPTS&lt;/code&gt; variable can be used to set specific Java options, such as memory tuning options, or to set system variable used by PlantUML, such as then include search path. This would avoid modifications of the &lt;code&gt;plantuml&lt;/code&gt; script. For example, with a diagram like:</target>
        </trans-unit>
        <trans-unit id="3af47e130d1758fd7911cdc3643706fb37607583" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; options must include a &lt;a href=&quot;https://www.w3schools.com/cssref/css_units.asp&quot;&gt;CSS unit&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; options must include a &lt;a href=&quot;https://www.w3schools.com/cssref/css_units.asp&quot;&gt;CSS unit&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="08db4a8a5c1ed37220fe7f0bf7d3889c81cc2897" translate="yes" xml:space="preserve">
          <source>The GitLab/GitHub block syntax is also recognized. Example:</source>
          <target state="translated">The GitLab/GitHub block syntax is also recognized. Example:</target>
        </trans-unit>
        <trans-unit id="c144c0269e55a8b6d01d3e65fbc50f7a8c5dd73f" translate="yes" xml:space="preserve">
          <source>The plugin has several configuration option:</source>
          <target state="translated">The plugin has several configuration option:</target>
        </trans-unit>
        <trans-unit id="1cc556bb9c9a19dd14cedecf57913fc9b463720c" translate="yes" xml:space="preserve">
          <source>The same thing can be done using the environment variable &lt;code&gt;_JAVA_OPTIONS&lt;/code&gt;, which is readed by default by the &lt;code&gt;java&lt;/code&gt;
executable.</source>
          <target state="translated">The same thing can be done using the environment variable &lt;code&gt;_JAVA_OPTIONS&lt;/code&gt; , which is readed by default by the &lt;code&gt;java&lt;/code&gt; executable.</target>
        </trans-unit>
        <trans-unit id="8ff11571e6d0b308a69a948a875c030fd524830a" translate="yes" xml:space="preserve">
          <source>The test execution requires a specific version of &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; (the image generated can be different with different
&lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; versions).</source>
          <target state="translated">The test execution requires a specific version of &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; (the image generated can be different with different &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; versions).</target>
        </trans-unit>
        <trans-unit id="f9d854b314f2fcf9262a7f991d1167fb7b8d1467" translate="yes" xml:space="preserve">
          <source>Then you need to specify the configuration file on the command line:</source>
          <target state="translated">Then you need to specify the configuration file on the command line:</target>
        </trans-unit>
        <trans-unit id="467db5aa81bf230a12d6c2fa15e8452877273292" translate="yes" xml:space="preserve">
          <source>This command uses a custom version of the &lt;code&gt;plantuml&lt;/code&gt; command which will download the expected version of &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; for
tests execution without clobbering the system.</source>
          <target state="translated">This command uses a custom version of the &lt;code&gt;plantuml&lt;/code&gt; command which will download the expected version of &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; for tests execution without clobbering the system.</target>
        </trans-unit>
        <trans-unit id="da65706d2312b23b3fdf5175d3f88e9175e685b5" translate="yes" xml:space="preserve">
          <source>This plugin implements a block extension which can be used to specify a &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; diagram which will be
converted into an image and inserted in the document.</source>
          <target state="translated">This plugin implements a block extension which can be used to specify a &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; diagram which will be converted into an image and inserted in the document.</target>
        </trans-unit>
        <trans-unit id="d05c0584391b86852831b16bc5d78e5b5d066c00" translate="yes" xml:space="preserve">
          <source>To run the tests, execute the following command:</source>
          <target state="translated">To run the tests, execute the following command:</target>
        </trans-unit>
        <trans-unit id="0f43bdf8c8bb611b58eefb9e33a2b2c5c151d70b" translate="yes" xml:space="preserve">
          <source>To use the plugin with &lt;a href=&quot;https://python-markdown.github.io/&quot;&gt;Python-Markdown&lt;/a&gt; you have these choices:</source>
          <target state="translated">To use the plugin with &lt;a href=&quot;https://python-markdown.github.io/&quot;&gt;Python-Markdown&lt;/a&gt; you have these choices:</target>
        </trans-unit>
        <trans-unit id="11ff0cc2e745f36379d0932cacaee8833d10ee90" translate="yes" xml:space="preserve">
          <source>Using a PlantUML server</source>
          <target state="translated">Using a PlantUML server</target>
        </trans-unit>
        <trans-unit id="3da97959c9868ebbe69e85cfd2a12f1cba64c44d" translate="yes" xml:space="preserve">
          <source>Using a local PlantUML binary</source>
          <target state="translated">Using a local PlantUML binary</target>
        </trans-unit>
        <trans-unit id="d6fee6e4bbf3cfc2100b7665ec4168e7a2002356" translate="yes" xml:space="preserve">
          <source>You can download the &lt;a href=&quot;http://sourceforge.net/projects/plantuml/files/plantuml.war/download&quot;&gt;war&lt;/a&gt; and deploy in a servlet
container, or you can run it as a &lt;a href=&quot;https://hub.docker.com/r/plantuml/plantuml-server/&quot;&gt;docker container&lt;/a&gt;.</source>
          <target state="translated">You can download the &lt;a href=&quot;http://sourceforge.net/projects/plantuml/files/plantuml.war/download&quot;&gt;war&lt;/a&gt; and deploy in a servlet container, or you can run it as a &lt;a href=&quot;https://hub.docker.com/r/plantuml/plantuml-server/&quot;&gt;docker container&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d2c21d243e946cd7d3bc97287d38c7d27a6bec01" translate="yes" xml:space="preserve">
          <source>You must export &lt;code&gt;PYTHONPATH&lt;/code&gt; before running &lt;code&gt;markdown_py&lt;/code&gt;, or you can put the definition in &lt;code&gt;~/.bashrc&lt;/code&gt;.</source>
          <target state="translated">You must export &lt;code&gt;PYTHONPATH&lt;/code&gt; before running &lt;code&gt;markdown_py&lt;/code&gt; , or you can put the definition in &lt;code&gt;~/.bashrc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4d5c0915dc0340aaff5aed8246fd5b243c44e46" translate="yes" xml:space="preserve">
          <source>You need to install &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; (see the site for details) and &lt;a href=&quot;http://www.graphviz.org&quot;&gt;Graphviz&lt;/a&gt; 2.26.3 or later.
The plugin expects a program &lt;code&gt;plantuml&lt;/code&gt; in the classpath. If not installed by your package
manager, you can create a shell script and place it somewhere in the classpath. For example,
save te following into &lt;code&gt;/usr/local/bin/plantuml&lt;/code&gt; (supposing &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; installed into
&lt;code&gt;/opt/plantuml&lt;/code&gt;):</source>
          <target state="translated">You need to install &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; (see the site for details) and &lt;a href=&quot;http://www.graphviz.org&quot;&gt;Graphviz&lt;/a&gt; 2.26.3 or later. The plugin expects a program &lt;code&gt;plantuml&lt;/code&gt; in the classpath. If not installed by your package manager, you can create a shell script and place it somewhere in the classpath. For example, save te following into &lt;code&gt;/usr/local/bin/plantuml&lt;/code&gt; (supposing &lt;a href=&quot;http://plantuml.sourceforge.net/&quot;&gt;PlantUML&lt;/a&gt; installed into &lt;code&gt;/opt/plantuml&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="7dd026014b0f970f137dcceb740122ae9a45b169" translate="yes" xml:space="preserve">
          <source>basic.puml</source>
          <target state="translated">basic.puml</target>
        </trans-unit>
        <trans-unit id="f9477183d88ca8e94442f7d0cea4b18aaedaf869" translate="yes" xml:space="preserve">
          <source>copy the file &lt;code&gt;plantuml-markdown.py&lt;/code&gt; in the &lt;code&gt;extensions&lt;/code&gt; folder of &lt;a href=&quot;https://python-markdown.github.io/&quot;&gt;Python-Markdown&lt;/a&gt;. For example, for Python 2.7
you must do:</source>
          <target state="translated">copy the file &lt;code&gt;plantuml-markdown.py&lt;/code&gt; in the &lt;code&gt;extensions&lt;/code&gt; folder of &lt;a href=&quot;https://python-markdown.github.io/&quot;&gt;Python-Markdown&lt;/a&gt;. For example, for Python 2.7 you must do:</target>
        </trans-unit>
        <trans-unit id="c91f8b7d6fdad39014d9d36b1bb5b757ee4420ea" translate="yes" xml:space="preserve">
          <source>copy the file somewhere in your home. A good choice may be the &lt;code&gt;user-site&lt;/code&gt; path, for example (&lt;code&gt;bash&lt;/code&gt; syntax):</source>
          <target state="translated">copy the file somewhere in your home. A good choice may be the &lt;code&gt;user-site&lt;/code&gt; path, for example ( &lt;code&gt;bash&lt;/code&gt; syntax):</target>
        </trans-unit>
        <trans-unit id="b8d322cca13b7303167b216a3efe71db4e1687a1" translate="yes" xml:space="preserve">
          <source>index.md</source>
          <target state="translated">index.md</target>
        </trans-unit>
        <trans-unit id="21804cbde6a1e857a2cb126b6a18500a993cb098" translate="yes" xml:space="preserve">
          <source>on Windows you can use &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, a package manager for Windows: do a
&lt;code&gt;choco install plantuml&lt;/code&gt; and you are ready to work (this command will install all dependencies, Java and Graphviz
included, see &lt;a href=&quot;https://chocolatey.org/packages/plantuml&quot;&gt;https://chocolatey.org/packages/plantuml&lt;/a&gt; for details)</source>
          <target state="translated">on Windows you can use &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, a package manager for Windows: do a &lt;code&gt;choco install plantuml&lt;/code&gt; and you are ready to work (this command will install all dependencies, Java and Graphviz included, see &lt;a href=&quot;https://chocolatey.org/packages/plantuml&quot;&gt;https://chocolatey.org/packages/plantuml&lt;/a&gt; for details)</target>
        </trans-unit>
        <trans-unit id="6f4931c042a490ab45c08ee897307fc0ca308d1f" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;pip&lt;/code&gt;, do a simple &lt;code&gt;pip install plantuml-markdown&lt;/code&gt;, and the plugin should be ready to be used</source>
          <target state="translated">with &lt;code&gt;pip&lt;/code&gt; , do a simple &lt;code&gt;pip install plantuml-markdown&lt;/code&gt; , and the plugin should be ready to be used</target>
        </trans-unit>
        <trans-unit id="0f505ec728978234afd927fe34b5683b244fe57a" translate="yes" xml:space="preserve">
          <source>you can do:</source>
          <target state="translated">ë„Œ í•  ìˆ˜ìžˆì–´:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
