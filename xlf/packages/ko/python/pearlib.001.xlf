<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pearlib/">
    <body>
      <group id="pearlib">
        <trans-unit id="8ec3fa81af57eabff0783475b7adc06c78731139" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; import pearlib</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; import pearlib</target>
        </trans-unit>
        <trans-unit id="639f8b7aaba60deaed3521b5e01c29c45fcb328c" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; python3 main.py</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; python3 main.py</target>
        </trans-unit>
        <trans-unit id="fb7e5fa4a6983e6d683811019ec3b6ad3a567f20" translate="yes" xml:space="preserve">
          <source>- All bias vectors should be named &quot;b&quot; followed by the number of the layer they belong to. Example: the bias vector of the first layer will be called &quot;b1&quot;.</source>
          <target state="translated">- All bias vectors should be named &quot;b&quot; followed by the number of the layer they belong to. Example: the bias vector of the first layer will be called &quot;b1&quot;.</target>
        </trans-unit>
        <trans-unit id="8236edb68ad1b46b764617c9c25d3de69622b2dd" translate="yes" xml:space="preserve">
          <source>- All weight matrices should be named &quot;W&quot; followed by the number of the layer they belong to. Example: the weight matrix of the first layer will be called &quot;W1&quot;.</source>
          <target state="translated">- All weight matrices should be named &quot;W&quot; followed by the number of the layer they belong to. Example: the weight matrix of the first layer will be called &quot;W1&quot;.</target>
        </trans-unit>
        <trans-unit id="135bdf20be8a8c668613ec667d4d250448036d7c" translate="yes" xml:space="preserve">
          <source>And neural networks appear</source>
          <target state="translated">And neural networks appear</target>
        </trans-unit>
        <trans-unit id="063c152b23757eac83070ad07ebcc704d783aa8b" translate="yes" xml:space="preserve">
          <source>Ap'Pear, a graphical user interface for Pear is available for download here: https://lc.cx/gPgP</source>
          <target state="translated">Ap'Pear, a graphical user interface for Pear is available for download here: https://lc.cx/gPgP</target>
        </trans-unit>
        <trans-unit id="0ec9cb87fc994cfbe1034dbff87af4a08b0694f0" translate="yes" xml:space="preserve">
          <source>Example networks for Lena, with different numbers of parameters are available in the &quot;example&quot; folder, as well as an example running file &quot;example.py&quot; showing how to use Pear to visualize your network.</source>
          <target state="translated">Example networks for Lena, with different numbers of parameters are available in the &quot;example&quot; folder, as well as an example running file &quot;example.py&quot; showing how to use Pear to visualize your network.</target>
        </trans-unit>
        <trans-unit id="d634a6ef0d1fb5f4011a94ab5f50d3f267ba4b3c" translate="yes" xml:space="preserve">
          <source>Example networks for Lena, with different numbers of parameters, as well as an example file example.py are available in example.zip, downloadable at: https://lc.cx/gPgP</source>
          <target state="translated">Example networks for Lena, with different numbers of parameters, as well as an example file example.py are available in example.zip, downloadable at: https://lc.cx/gPgP</target>
        </trans-unit>
        <trans-unit id="b1ea7667b3f7bf01681e262e9629527b8b1d58f1" translate="yes" xml:space="preserve">
          <source>Installing Pear will also install the following packages (if they are not already installed on your system): numpy, Pillow, matplotlib, tensorflow, webcolors.</source>
          <target state="translated">Installing Pear will also install the following packages (if they are not already installed on your system): numpy, Pillow, matplotlib, tensorflow, webcolors.</target>
        </trans-unit>
        <trans-unit id="547a82ee0d8700eed69fd310f4138d46af5b2379" translate="yes" xml:space="preserve">
          <source>Pear</source>
          <target state="translated">Pear</target>
        </trans-unit>
        <trans-unit id="ef928ac6f7e526106937e05799f9d10f0982b661" translate="yes" xml:space="preserve">
          <source>Pear is a library that aims at offering a visual representation of neural networks. It can read networks built using Google's TensorFlow in and, for each requested layer, draw the associated decision boundaries.</source>
          <target state="translated">Pear is a library that aims at offering a visual representation of neural networks. It can read networks built using Google's TensorFlow in and, for each requested layer, draw the associated decision boundaries.</target>
        </trans-unit>
        <trans-unit id="1429eede7d49a05e8058921ff7eecf782e8fe60b" translate="yes" xml:space="preserve">
          <source>Pear is not yet able to work will all types of network: only networks with 2 inputs and 1 output are accepted so far. Moreover, to simplify the parameters extraction, the input networks must follow the following naming convention:</source>
          <target state="translated">Pear is not yet able to work will all types of network: only networks with 2 inputs and 1 output are accepted so far. Moreover, to simplify the parameters extraction, the input networks must follow the following naming convention:</target>
        </trans-unit>
        <trans-unit id="522a15b659bbf420af7347b7340023a051583dc4" translate="yes" xml:space="preserve">
          <source>Pear is still in the development process.</source>
          <target state="translated">Pear is still in the development process.</target>
        </trans-unit>
        <trans-unit id="45c90c5716d974d17a834fd4b5717332015daca7" translate="yes" xml:space="preserve">
          <source>The library that makes neural networks appear</source>
          <target state="translated">The library that makes neural networks appear</target>
        </trans-unit>
        <trans-unit id="1a00487cbcc84db2775cbf9e79a4356a52a4b0d8" translate="yes" xml:space="preserve">
          <source>To start it, unzip the file and do in your command terminal::</source>
          <target state="translated">To start it, unzip the file and do in your command terminal::</target>
        </trans-unit>
        <trans-unit id="38b612523d4d507c1bb03b61b580a002509da5d5" translate="yes" xml:space="preserve">
          <source>To use, do::</source>
          <target state="translated">To use, do::</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
