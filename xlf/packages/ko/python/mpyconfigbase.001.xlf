<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/mpyconfigbase/">
    <body>
      <group id="mpyconfigbase">
        <trans-unit id="159473b4c9e4672db314182c77c9d4327949dc12" translate="yes" xml:space="preserve">
          <source>Best practice</source>
          <target state="translated">모범 사례</target>
        </trans-unit>
        <trans-unit id="921df8a5520c7407106b9e4e820907c500e03cfe" translate="yes" xml:space="preserve">
          <source>Configure MicroPython WLAN/AP/WebRepl startup with your own code</source>
          <target state="translated">자신의 코드로 MicroPython WLAN / AP / WebRepl 시작 구성</target>
        </trans-unit>
        <trans-unit id="56b1c22c93ba08f11e3afc67a2b449629dd1c458" translate="yes" xml:space="preserve">
          <source>Configure automatic startup of MicroPython WLAN / AP / WebRepl / NTP time during boot</source>
          <target state="translated">부팅 중 MicroPython WLAN / AP / WebRepl / NTP 시간의 자동 시작 구성</target>
        </trans-unit>
        <trans-unit id="0dc4c32611a44849c42424a8cace261adec27414" translate="yes" xml:space="preserve">
          <source>During wlan start the time from NTP is fetched by default.</source>
          <target state="translated">무선 랜 시작 중에는 기본적으로 NTP에서 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="69163a43cc66c60b73f2f02bdb4c33556f0bbfa5" translate="yes" xml:space="preserve">
          <source>General information</source>
          <target state="translated">일반 정보</target>
        </trans-unit>
        <trans-unit id="3009ea2d879ec7ef72637b9360174880934d481d" translate="yes" xml:space="preserve">
          <source>Installation during deployment</source>
          <target state="translated">배포 중 설치</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">한계</target>
        </trans-unit>
        <trans-unit id="f34f831ca8c298cc3e2902ca503e161930d49c25" translate="yes" xml:space="preserve">
          <source>MPyConfigBase</source>
          <target state="translated">MPyConfigBase</target>
        </trans-unit>
        <trans-unit id="aa8ee3e1acc0694472393da74e6e4f85a9f44fb8" translate="yes" xml:space="preserve">
          <source>Reset the board during the deployment is required since MicroPython needs to bring in the new code before the configuration can take place. If you follow the best practice given above this dont needs to be done.</source>
          <target state="translated">MicroPython은 구성을 수행하기 전에 새 코드를 가져와야하므로 배포 중에 보드를 재설정해야합니다. 위에 제공된 모범 사례를 따르면이 작업을 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e612fbf2d980318ade28d3964daf6dfe241cf61c" translate="yes" xml:space="preserve">
          <source>Sample Code (deployment)</source>
          <target state="translated">샘플 코드 (배포)</target>
        </trans-unit>
        <trans-unit id="03e8ff054dbe4d92788f0cd505a5c25ccdeb5e44" translate="yes" xml:space="preserve">
          <source>Sample Code (in boot.py)</source>
          <target state="translated">샘플 코드 (boot.py)</target>
        </trans-unit>
        <trans-unit id="209c2edabef14148f2bc75f82e6a262a0af00b0f" translate="yes" xml:space="preserve">
          <source>Some sample code for automatic deployment and configuration. In case of timeouts (error message: could not enter raw-repl) consider to use &lt;code&gt;with mpyc.timeout(1) as tout:&lt;/code&gt; code block.</source>
          <target state="translated">자동 배포 및 구성을위한 일부 샘플 코드입니다. 시간 초과 (오류 메시지 : raw-repl을 입력 할 수 없음)의 경우 &lt;code&gt;with mpyc.timeout(1) as tout:&lt;/code&gt; 코드 블록 으로 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="233e8c02c9a4b4f89db2eddc8adf54b252a1cc90" translate="yes" xml:space="preserve">
          <source>The code is also available &lt;a href=&quot;https://github.com/kr-g/mpyconfigbase&quot;&gt;here on github&lt;/a&gt;</source>
          <target state="translated">코드는 &lt;a href=&quot;https://github.com/kr-g/mpyconfigbase&quot;&gt;github&lt;/a&gt; 에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f8396922bc11a29bcfe4d705fabf0935a58d232" translate="yes" xml:space="preserve">
          <source>The information given in the files &lt;code&gt;wlan.cfg&lt;/code&gt;, &lt;code&gt;softap.cfg&lt;/code&gt; and &lt;code&gt;webrepl_cfg.py&lt;/code&gt; are used for configuration.</source>
          <target state="translated">&lt;code&gt;wlan.cfg&lt;/code&gt; , &lt;code&gt;softap.cfg&lt;/code&gt; 및 &lt;code&gt;webrepl_cfg.py&lt;/code&gt; 파일에 제공된 정보 가 구성에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b302496dcaa5ff773dd4d18a6b34891fb5d0722d" translate="yes" xml:space="preserve">
          <source>The python class code can be retrieved by calling:</source>
          <target state="translated">파이썬 클래스 코드는 다음을 호출하여 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="d49e8fd897d6c5820796b94d13de61ea49f88ab1" translate="yes" xml:space="preserve">
          <source>Use this together with &lt;a href=&quot;https://pypi.org/project/mpycntrl/&quot;&gt;mpycntrl&lt;/a&gt; for automation of the setup/deployment and configuration of MicroPython base interfaces. see also &lt;a href=&quot;https://github.com/kr-g/mpycntrl&quot;&gt;mpycntrl on github&lt;/a&gt;</source>
          <target state="translated">MicroPython 기본 인터페이스의 설정 / 배포 및 구성 자동화를 위해 &lt;a href=&quot;https://pypi.org/project/mpycntrl/&quot;&gt;mpycntrl&lt;/a&gt; 과 함께 사용하십시오 . &lt;a href=&quot;https://github.com/kr-g/mpycntrl&quot;&gt;github의 mpycntrl&lt;/a&gt; 도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4fc999ec523ba82554bf00c681bfde75cb3bb911" translate="yes" xml:space="preserve">
          <source>on esp32 it will work :-)</source>
          <target state="translated">esp32에서는 작동합니다 :-)</target>
        </trans-unit>
        <trans-unit id="28299317ed61183e68eb89984c8ab5c64ffd031d" translate="yes" xml:space="preserve">
          <source>on esp8266 the combined startup with &lt;code&gt;start&lt;/code&gt; will probably fail.</source>
          <target state="translated">esp8266에서 시작과 결합 된 &lt;code&gt;start&lt;/code&gt; 은 아마도 실패 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="d23bedd2c5fd49924fd7cdf2882c0639581fb98c" translate="yes" xml:space="preserve">
          <source>send cntrl+c</source>
          <target state="translated">cntrl + c 보내기</target>
        </trans-unit>
        <trans-unit id="901c2882899472ca5bbb9e066c8ec0b535b232da" translate="yes" xml:space="preserve">
          <source>send reset</source>
          <target state="translated">재설정 보내기</target>
        </trans-unit>
        <trans-unit id="4213c64f5811fa08d29b64a70ac167ba8ab62c27" translate="yes" xml:space="preserve">
          <source>upload the module file along with the configuration files directly (the config files are &lt;code&gt;wlan.cfg&lt;/code&gt;, &lt;code&gt;softap.cfg&lt;/code&gt; and &lt;code&gt;webrepl_cfg.py&lt;/code&gt;)</source>
          <target state="translated">구성 파일과 함께 모듈 파일을 직접 업로드합니다 (구성 파일은 &lt;code&gt;wlan.cfg&lt;/code&gt; , &lt;code&gt;softap.cfg&lt;/code&gt; 및 &lt;code&gt;webrepl_cfg.py&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="91e6cebc002dd464db53aaa65ad7f2a7d90ed9fa" translate="yes" xml:space="preserve">
          <source>webrepl_cfg.py is a python file containing a single line like</source>
          <target state="translated">webrepl_cfg.py는 다음과 같은 한 줄을 포함하는 파이썬 파일입니다.</target>
        </trans-unit>
        <trans-unit id="15c97e87fdb6397f17dff49e6a9c29ed5a1dc8e4" translate="yes" xml:space="preserve">
          <source>wlan.cfg and softap.cfg are text files containing ESSID and password in 2 lines</source>
          <target state="translated">wlan.cfg 및 softap.cfg는 ESSID 및 암호가 2 줄로 포함 된 텍스트 파일입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
