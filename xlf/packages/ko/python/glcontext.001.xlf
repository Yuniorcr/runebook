<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/glcontext/">
    <body>
      <group id="glcontext">
        <trans-unit id="d9030ab71c57aa51f9184b98ed0a9ad025c2181c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detect&lt;/code&gt;: Will detect an existing active OpenGL context.</source>
          <target state="translated">&lt;code&gt;detect&lt;/code&gt; : 기존 활성 OpenGL 컨텍스트를 감지합니다.</target>
        </trans-unit>
        <trans-unit id="83555bf1847c1dcc3c0f080620f44626a5e3040a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gdi32.lib&lt;/code&gt; on windows</source>
          <target state="translated">&lt;code&gt;gdi32.lib&lt;/code&gt; Windows의 gdi32.lib</target>
        </trans-unit>
        <trans-unit id="80dfa15cdfc3f05c32b6801d42bb0f8cb9436908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glversion&lt;/code&gt; (&lt;code&gt;int&lt;/code&gt;): The minimum OpenGL version for the context</source>
          <target state="translated">&lt;code&gt;glversion&lt;/code&gt; ( &lt;code&gt;int&lt;/code&gt; ) : 컨텍스트에 대한 최소 OpenGL 버전</target>
        </trans-unit>
        <trans-unit id="dbd31035b638d557603201df668c8cb10821f0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libdl.a&lt;/code&gt; on linux</source>
          <target state="translated">&lt;code&gt;libdl.a&lt;/code&gt; Linux의 libdl.a</target>
        </trans-unit>
        <trans-unit id="1e688d9367293e7e32e2d03bca6b76c0433aba2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libegl&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Name of gl library to load (default: &lt;code&gt;libEGL.so&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;libegl&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) :로드 할 gl 라이브러리의 이름 (기본값 : &lt;code&gt;libEGL.so&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c9fe993ae30e1503f0c81aa5d0a68f9468de3075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libgl&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Name of gl library to load (default: &lt;code&gt;libGL.so&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;libgl&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) :로드 할 gl 라이브러리 이름 (기본값 : &lt;code&gt;libGL.so&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="082f4fc7eabcbfcea6286deb5571e9298658fcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libgl&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Name of gl library to load (default: &lt;code&gt;opengl32.dll&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;libgl&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) :로드 할 gl 라이브러리 이름 (기본값 : &lt;code&gt;opengl32.dll&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e24b13ea8f8c1f6cda110428255e6b5990e12c04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libx11&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Name of x11 library to load (default: &lt;code&gt;libX11.so&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;libx11&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) :로드 할 x11 라이브러리의 이름 (기본값 : &lt;code&gt;libX11.so&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="203712d981e86facb9a0debbbc1e5dcd00ef4ac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Creation mode. &lt;code&gt;detect&lt;/code&gt; | &lt;code&gt;standalone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) : 생성 모드. &lt;code&gt;detect&lt;/code&gt; | &lt;code&gt;standalone&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19840f9609c0abf56c6ddecbeb5f27ca580a8e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Creation mode. &lt;code&gt;detect&lt;/code&gt; | &lt;code&gt;standalone&lt;/code&gt; | &lt;code&gt;share&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) : 생성 모드. &lt;code&gt;detect&lt;/code&gt; | &lt;code&gt;standalone&lt;/code&gt; | &lt;code&gt;share&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c366b4d62e146ff8bfae69b5939743b687664a51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; (&lt;code&gt;str&lt;/code&gt;): Creation mode. &lt;code&gt;standalone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; ( &lt;code&gt;str&lt;/code&gt; ) : 생성 모드. &lt;code&gt;standalone&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ee73adcf1d3afb22fe931dbc155179fecb9111d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;share&lt;/code&gt;: Creates a new context sharing objects with the currently active context (headless)</source>
          <target state="translated">&lt;code&gt;share&lt;/code&gt; : 현재 활성 컨텍스트 (헤드리스)로 새 컨텍스트 공유 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2b2d83162720e1fca69a21cda7e8a799e63963f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;standalone&lt;/code&gt;: Crates a headless OpenGL context</source>
          <target state="translated">&lt;code&gt;standalone&lt;/code&gt; : 헤드리스 OpenGL 컨텍스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="52429727258511482310d3d8a697846c8400139f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;glcontext&lt;/strong&gt; is a library providing OpenGL implementation for ModernGL on multiple platforms.</source>
          <target state="translated">&lt;strong&gt;glcontext&lt;/strong&gt; 는 여러 플랫폼에서 ModernGL을위한 OpenGL 구현을 제공하는 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="6de6433c805b3a3658284050ef19f9cd1a4b2aab" translate="yes" xml:space="preserve">
          <source>A backend must be lightweight, its size must fit within reasonable limits.</source>
          <target state="translated">백엔드는 가벼워 야하며 크기는 합리적인 한도 내에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="04611936867898fa99c22cb73c09cbefd496ad97" translate="yes" xml:space="preserve">
          <source>A glcontext backend is either an extension or a submodule of the glcontext package.
The package itself does not import any of the backends.
Importing the base package &lt;code&gt;glcontext&lt;/code&gt; must safe and lightweight.</source>
          <target state="translated">glcontext 백엔드는 glcontext 패키지의 확장 또는 하위 모듈입니다. 패키지 자체는 백엔드를 가져 오지 않습니다. 기본 패키지 &lt;code&gt;glcontext&lt;/code&gt; 를 가져 오는 것은 안전하고 가벼워 야합니다.</target>
        </trans-unit>
        <trans-unit id="7c88d63b327975bcde2a30b7342e1efaabe911aa" translate="yes" xml:space="preserve">
          <source>An &quot;portable&quot; backend implementation must load its dependency at runtime.
This rule is for simplifying the build of the entire package.
If an implementation cannot provide a &quot;portable&quot; backend, it will not be added to this library.
Non &quot;portable&quot; backends are welcome as third party libraries.</source>
          <target state="translated">&quot;이동 가능한&quot;백엔드 구현은 런타임에 종속성을로드해야합니다. 이 규칙은 전체 패키지의 빌드를 단순화하기위한 것입니다. 구현에서 &quot;이동 가능한&quot;백엔드를 제공 할 수없는 경우이 라이브러리에 추가되지 않습니다. &quot;휴대용&quot;이 아닌 백엔드는 타사 라이브러리로 환영합니다.</target>
        </trans-unit>
        <trans-unit id="b3776d63ad7b7a84bfe20d9c6d4a53a2b25d0e43" translate="yes" xml:space="preserve">
          <source>Backends</source>
          <target state="translated">백엔드</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="cd1c6c22f2a5175d1098b3ed4717c093f3da6272" translate="yes" xml:space="preserve">
          <source>Contribution is welcome.</source>
          <target state="translated">기부를 환영합니다.</target>
        </trans-unit>
        <trans-unit id="01e813a5aef54dc819e46e077268d4c45fa5a89a" translate="yes" xml:space="preserve">
          <source>Current backends</source>
          <target state="translated">현재 백엔드</target>
        </trans-unit>
        <trans-unit id="471a27afae0881d0361aaa5b499dd8ceb2e2dc57" translate="yes" xml:space="preserve">
          <source>Development Guide</source>
          <target state="translated">개발 가이드</target>
        </trans-unit>
        <trans-unit id="efa09787574bee9f38d4b3a2cacda5e990d690c4" translate="yes" xml:space="preserve">
          <source>Each backend supports a &lt;code&gt;glversion&lt;/code&gt; and &lt;code&gt;mode&lt;/code&gt; parameters as a minimum.
The &lt;code&gt;glversion&lt;/code&gt; is the minimum OpenGL version required while &lt;code&gt;mode&lt;/code&gt;
decides how the context is created.</source>
          <target state="translated">각 백엔드는 최소한 &lt;code&gt;glversion&lt;/code&gt; 및 &lt;code&gt;mode&lt;/code&gt; 매개 변수를 지원합니다 . &lt;code&gt;glversion&lt;/code&gt; 는 동안 필요한 최소의 OpenGL 버전 &lt;code&gt;mode&lt;/code&gt; 컨텍스트가 생성되는 방법을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="d9d8fa0c65d9505c391f3a136d4eda20833c62aa" translate="yes" xml:space="preserve">
          <source>Environment variables can be set to configure backends.
These will get first priority if defined.</source>
          <target state="translated">환경 변수를 설정하여 백엔드를 구성 할 수 있습니다. 정의 된 경우 이러한 항목이 우선 순위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="21d6aa14e56b6ffa1e7940a125f13a82ad5c7a39" translate="yes" xml:space="preserve">
          <source>Every backend of glcontext must provide a factory function:</source>
          <target state="translated">glcontext의 모든 백엔드는 팩토리 기능을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="af3c0c9d27cb0d396e46d394ba7c7dce34018d63" translate="yes" xml:space="preserve">
          <source>Example for platform specific dependencies:</source>
          <target state="translated">플랫폼 별 종속성의 예 :</target>
        </trans-unit>
        <trans-unit id="10ed3c6c124bd54c4de8aed04f32f6a92b00aece" translate="yes" xml:space="preserve">
          <source>For prototypes, pure python implementations using ctypes are also welcome.
We will probably port it to a proper extension in the future.</source>
          <target state="translated">프로토 타입의 경우 ctypes를 사용하는 순수한 파이썬 구현도 환영합니다. 향후 적절한 확장으로 이식 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="beaf588b0c1a18f892d0db7dec433014478adc48" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;libgl&lt;/code&gt; and/or &lt;code&gt;libegl&lt;/code&gt; is not passed in the backend will try to locate
GL and/or EGL library using &lt;code&gt;ctypes.utils.find_library&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;libgl&lt;/code&gt; 및 / 또는 &lt;code&gt;libegl&lt;/code&gt; 이 백엔드에 전달되지 사용 GL 및 / 또는 EGL 라이브러리를 찾으려고합니다 &lt;code&gt;ctypes.utils.find_library&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="db090df39d32f490766655d466bccb18ace08261" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;libgl&lt;/code&gt; is not passed in the backend will try to locate
the GL library using &lt;code&gt;ctypes.utils.find_library&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;libgl&lt;/code&gt; 이 백엔드에서 전달되지 않으면 ctypes.utils.find_library를 사용하여 GL 라이브러리를 &lt;code&gt;ctypes.utils.find_library&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f63acaee09eb2e6eb00af121e232dfd98803ba10" translate="yes" xml:space="preserve">
          <source>ModernGL</source>
          <target state="translated">ModernGL</target>
        </trans-unit>
        <trans-unit id="79f5b225cffab11e22dc40b6f05abef1d33d1561" translate="yes" xml:space="preserve">
          <source>Modes</source>
          <target state="translated">모드</target>
        </trans-unit>
        <trans-unit id="621389eb9201a56ca276f04176d249a87b98278f" translate="yes" xml:space="preserve">
          <source>Only supports standalone mode.</source>
          <target state="translated">독립형 모드 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">매개 변수</target>
        </trans-unit>
        <trans-unit id="4cc5782d385a9de50a7b6fa6a4ad4e58c0f99484" translate="yes" xml:space="preserve">
          <source>Please ask questions &lt;a href=&quot;https://github.com/moderngl/glcontext/issues&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/moderngl/glcontext/issues&quot;&gt;여기에서&lt;/a&gt; 질문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba8a7cf4af1469dcec2119db0e0ca9e391a1fcd4" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;libGL.so&lt;/code&gt; is loaded dinamically by the backends.</source>
          <target state="translated">있습니다 &lt;code&gt;libGL.so&lt;/code&gt; 는 백엔드에 의해 dinamically로드됩니다.</target>
        </trans-unit>
        <trans-unit id="b81d75f87ba0eae984832c7b73a4dcef3b142d16" translate="yes" xml:space="preserve">
          <source>Portable OpenGL Context</source>
          <target state="translated">이식 가능한 OpenGL 컨텍스트</target>
        </trans-unit>
        <trans-unit id="711d2166cb95bb032e0a94e94ee9de0bd217b269" translate="yes" xml:space="preserve">
          <source>Pull Requests will be merged if they match the Development Guide.</source>
          <target state="translated">Pull Request가 개발 가이드와 일치하면 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="9482c5d5bfbed584fddcc442794dd8d3d9813064" translate="yes" xml:space="preserve">
          <source>Structure</source>
          <target state="translated">구조</target>
        </trans-unit>
        <trans-unit id="9b2abc67129616195f574841896c0c947b17fe56" translate="yes" xml:space="preserve">
          <source>The create_context method can take any number of positional and keyword arguments.
The factory function must return an object supporting the following methods:</source>
          <target state="translated">create_context 메소드는 여러 위치 및 키워드 인수를 사용할 수 있습니다. 팩토리 함수는 다음 메소드를 지원하는 객체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="c992519480512aa2adfbc4d2e7260cf8f3758d7e" translate="yes" xml:space="preserve">
          <source>The enter method calls &lt;code&gt;___MakeCurrent&lt;/code&gt; to make the GLContext the calling thread's current rendering context.
&lt;code&gt;___MakeCurrent&lt;/code&gt; stands for &lt;code&gt;wglMakeCurrent&lt;/code&gt;, &lt;code&gt;glxMakeCurrent&lt;/code&gt;, ...</source>
          <target state="translated">enter 메서드는 &lt;code&gt;___MakeCurrent&lt;/code&gt; 를 호출 하여 GLContext를 호출 스레드의 현재 렌더링 컨텍스트로 만듭니다. &lt;code&gt;___MakeCurrent&lt;/code&gt; 는 &lt;code&gt;wglMakeCurrent&lt;/code&gt; , &lt;code&gt;glxMakeCurrent&lt;/code&gt; , ...</target>
        </trans-unit>
        <trans-unit id="1cb72c906fb44bcc60ea28c9a6b9f858baf26e73" translate="yes" xml:space="preserve">
          <source>The exit method calls &lt;code&gt;___MakeCurrent&lt;/code&gt; to make the GLContext no longer current.</source>
          <target state="translated">종료 메소드는 &lt;code&gt;___MakeCurrent&lt;/code&gt; 를 호출 하여 GLContext를 더 이상 최신 상태로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b80976479974f911b195bb29f7456d1be28ce052" translate="yes" xml:space="preserve">
          <source>The load method takes an OpenGL function name as an input and returns a C/C++ function pointer as a python integer.
The return value must be 0 for not implemented functions.</source>
          <target state="translated">load 메소드는 OpenGL 함수 이름을 입력으로 사용하고 C / C ++ 함수 포인터를 Python 정수로 반환합니다. 구현되지 않은 함수의 경우 반환 값은 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="fe13bc73f9b163a170a6e9e8d825a434247fb50f" translate="yes" xml:space="preserve">
          <source>The release method destroys the OpenGL context.</source>
          <target state="translated">릴리스 메소드는 OpenGL 컨텍스트를 파괴합니다.</target>
        </trans-unit>
        <trans-unit id="a93f105ae87c08fbe176e7cfb7641a580a56ba85" translate="yes" xml:space="preserve">
          <source>There are &quot;empty&quot; example backends provided for developers to help adding new backends to the library.
There is a pure python example in empty.py and an extension example in empty.cpp.
Besides their name match, they do not depend on each other, they are independent submodules of glcontext.</source>
          <target state="translated">개발자가 라이브러리에 새 백엔드를 추가하는 데 도움을주기 위해 제공되는 &quot;빈&quot;예제 백엔드가 있습니다. empty.py에는 순수한 파이썬 예제가 있고 empty.cpp에는 확장 예제가 있습니다. 이름 일치 외에도 서로 의존하지 않고 glcontext의 독립적 인 하위 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="0adf00e73e8efd906f85ebadea2e5e546ec51320" translate="yes" xml:space="preserve">
          <source>To add support for new platforms one must edit the &lt;code&gt;setup.py&lt;/code&gt; too.
Platform specific dependencies are exceptions from the &quot;portability&quot; rule.</source>
          <target state="translated">새로운 플랫폼에 대한 지원을 추가하려면 &lt;code&gt;setup.py&lt;/code&gt; 도 편집해야합니다 . 플랫폼 별 종속성은 &quot;이동성&quot;규칙의 예외입니다.</target>
        </trans-unit>
        <trans-unit id="1de1fd5fb341ef5f8b177d5c353f17432d290849" translate="yes" xml:space="preserve">
          <source>Will create the the highest core context available.</source>
          <target state="translated">사용 가능한 가장 높은 핵심 컨텍스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="34dc8e1804c0a14aeb717e91af443219be617042" translate="yes" xml:space="preserve">
          <source>darwin</source>
          <target state="translated">다윈</target>
        </trans-unit>
        <trans-unit id="095e1e0a285ca7fad1e244a380179c82dc6fcc02" translate="yes" xml:space="preserve">
          <source>egl</source>
          <target state="translated">egl</target>
        </trans-unit>
        <trans-unit id="83a14d3af69065990a96a791035195b1e77b754d" translate="yes" xml:space="preserve">
          <source>glcontext</source>
          <target state="translated">glcontext</target>
        </trans-unit>
        <trans-unit id="a84be087a43f451690f84db09f8e6eecd5562e05" translate="yes" xml:space="preserve">
          <source>glcontext on github</source>
          <target state="translated">github의 glcontext</target>
        </trans-unit>
        <trans-unit id="c3f8e07e8d43110274e30046b3c7b52fb73aa822" translate="yes" xml:space="preserve">
          <source>glcontext on pypi</source>
          <target state="translated">pypi의 glcontext</target>
        </trans-unit>
        <trans-unit id="90ed77f075b30104fd153a98c5ae76876d5c063e" translate="yes" xml:space="preserve">
          <source>wgl</source>
          <target state="translated">wgl</target>
        </trans-unit>
        <trans-unit id="5c93987587fcbf9fdc0c30495ad19aca7d09b897" translate="yes" xml:space="preserve">
          <source>x11</source>
          <target state="translated">x11</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
