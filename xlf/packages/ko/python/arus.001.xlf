<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/arus/">
    <body>
      <group id="arus">
        <trans-unit id="c158a1daebfd720ca67c1fe3c26671bb7dfa2dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[demo]&lt;/code&gt;: This optional component installs dependency supports for running the demo app that demonstrates a real-time interactive activity recognition training and testing program.</source>
          <target state="translated">&lt;code&gt;arus[demo]&lt;/code&gt; :이 선택적 구성 요소는 실시간 대화 형 활동 인식 교육 및 테스트 프로그램을 보여주는 데모 앱 실행을위한 종속성 지원을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="efbad0c56155b6009f39d1e39b0adc6b734fb507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[dev]&lt;/code&gt;: These optional component installs dependency supports for running some package and version management functions in the &lt;code&gt;arus.dev&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;arus[dev]&lt;/code&gt; : 이러한 선택적 구성 요소는 &lt;code&gt;arus.dev&lt;/code&gt; 모듈 에서 일부 패키지 및 버전 관리 기능을 실행하기위한 종속성 지원을 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="36ed836dd82bc20e5a01c217602fba9bb4faf86d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[metawear]&lt;/code&gt;: This optional component installs dependency supports for streaming data from Bluetooth metawear sensors.</source>
          <target state="translated">&lt;code&gt;arus[metawear]&lt;/code&gt; :이 선택적 구성 요소는 Bluetooth 메타웨어 센서의 스트리밍 데이터에 대한 종속성 지원을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="c886f1ecd6b2986111f72eabbc60e5577287de55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[nn]&lt;/code&gt;: The optional component installs dependency supports for PyTorch and Tensorboard, which are required by &lt;code&gt;arus.models.report&lt;/code&gt; module. Note that for Windows, you should install the &lt;code&gt;torch&lt;/code&gt; package manually using &lt;code&gt;pip&lt;/code&gt; following the &lt;code&gt;pytorch.org&lt;/code&gt; instruction.</source>
          <target state="translated">&lt;code&gt;arus[nn]&lt;/code&gt; : 선택적 구성 요소는 &lt;code&gt;arus.models.report&lt;/code&gt; 모듈에 필요한 PyTorch 및 Tensorboard에 대한 종속성 지원을 설치합니다 . Windows의 경우 &lt;code&gt;pytorch.org&lt;/code&gt; 지침에 따라 &lt;code&gt;pip&lt;/code&gt; 를 사용하여 수동으로 &lt;code&gt;torch&lt;/code&gt; 패키지를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="55af0c35a2a8df37a3e28045a349907dd0a02028" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ARUS&lt;/strong&gt; python package provides a computational and experimental framework to manage and process sensory data or wireless devices, to develop and run activity recognition algorithms on the data, and to create interactive programs using the algorithms and wireless devices.</source>
          <target state="translated">&lt;strong&gt;ARUS&lt;/strong&gt; python 패키지는 감각 데이터 또는 무선 장치를 관리 및 처리하고, 데이터에 대한 활동 인식 알고리즘을 개발 및 실행하고, 알고리즘 및 무선 장치를 사용하여 대화 형 프로그램을 생성하기위한 계산 및 실험 프레임 워크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="453e6cf801535612fc7b1ff0715e98614260c42e" translate="yes" xml:space="preserve">
          <source>Activity Recognition with Ubiquitous Sensing</source>
          <target state="translated">유비쿼터스 감지를 통한 활동 인식</target>
        </trans-unit>
        <trans-unit id="afe7e466b52539ac12bef91712f8bc82d1d0b2de" translate="yes" xml:space="preserve">
          <source>After commits, even not bumping and releasing the package, you may run &lt;code&gt;arus package docs --release&lt;/code&gt; to update the documentation website, where the developer version changelogs will be updated immediately.</source>
          <target state="translated">커밋 후 패키지를 범핑 및 릴리스하지 않더라도 &lt;code&gt;arus package docs --release&lt;/code&gt; 를 실행 하여 문서 웹 사이트를 업데이트 할 수 있습니다. 여기서 개발자 버전 변경 로그는 즉시 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="b4939b44af0db8e69fcca6fe36f957cc79f6b3ba" translate="yes" xml:space="preserve">
          <source>Changelogs are automatically generated when building the documentation website, do not create it manually.</source>
          <target state="translated">변경 로그는 문서 웹 사이트를 구축 할 때 자동으로 생성되며 수동으로 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c01130de5f80e76f155af53c037504beb58e7af7" translate="yes" xml:space="preserve">
          <source>Development conventions</source>
          <target state="translated">개발 규칙</target>
        </trans-unit>
        <trans-unit id="b125ea73b5247d8e1ead3d46fe0c55d734957c4c" translate="yes" xml:space="preserve">
          <source>Get started for development</source>
          <target state="translated">개발 시작</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="945853de658aa735720564f8498a773b45d85db9" translate="yes" xml:space="preserve">
          <source>Optional components</source>
          <target state="translated">선택적 구성 요소</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="df85c3cce8d09ba96fceaf55a12dc0f1cae20a52" translate="yes" xml:space="preserve">
          <source>Prerequists</source>
          <target state="translated">전제 조건</target>
        </trans-unit>
        <trans-unit id="fb9ab6e27152138eca8f6311695f8ccda76dd027" translate="yes" xml:space="preserve">
          <source>Pypi release will be handled by github action &lt;code&gt;deploy.yml&lt;/code&gt;, which will be triggered whenever a new tag is pushed. Therefore, developers should only tag release versions.</source>
          <target state="translated">Pypi 릴리스는 새 태그가 푸시 될 때마다 트리거 되는 github 작업 &lt;code&gt;deploy.yml&lt;/code&gt; 에 의해 처리됩니다 . 따라서 개발자는 릴리스 버전에만 태그를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="16d78941db1b98928536a6c08478394a8bbfb0cf" translate="yes" xml:space="preserve">
          <source>This package is licensed under &lt;a href=&quot;https://qutang.github.io/arus/LICENSE/&quot;&gt;GPL version 3&lt;/a&gt;.</source>
          <target state="translated">이 패키지는 &lt;a href=&quot;https://qutang.github.io/arus/LICENSE/&quot;&gt;GPL 버전 3에&lt;/a&gt; 따라 사용이 허가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="02359ebc426c745cbd847136a1fe205a601f291c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;arus package release VERSION --release&lt;/code&gt; to bump and tag versions. &lt;code&gt;VERSION&lt;/code&gt; can be manual version code following semantic versioning, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;minor&lt;/code&gt;, or &lt;code&gt;major&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arus package release VERSION --release&lt;/code&gt; 를 사용 하여 버전 을 범프하고 태그하십시오. &lt;code&gt;VERSION&lt;/code&gt; 은 시맨틱 버전 관리, &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;minor&lt;/code&gt; 또는 &lt;code&gt;major&lt;/code&gt; 수동 버전 코드 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce34905552a2c5ec1536daedfaa0f514115af8cd" translate="yes" xml:space="preserve">
          <source>Use Google's python coding guidance: &lt;a href=&quot;http://google.github.io/styleguide/pyguide.html&quot;&gt;http://google.github.io/styleguide/pyguide.html&lt;/a&gt;.</source>
          <target state="translated">Google의 Python 코딩 지침을 사용하십시오 : &lt;a href=&quot;http://google.github.io/styleguide/pyguide.html&quot;&gt;http://google.github.io/styleguide/pyguide.html&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
