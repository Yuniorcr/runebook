<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/packit/">
    <body>
      <group id="packit">
        <trans-unit id="a79e2d394cc8e9a3bd14eceaef7d15cc50b8f0f8" translate="yes" xml:space="preserve">
          <source>&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.a.post1&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.a.post1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9be9318d3af9e260f6ef41e1f583e0870259f61" translate="yes" xml:space="preserve">
          <source>&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.dev.post1&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.dev.post1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cac78eacab701221d84fb07e9af7500f8e499c21" translate="yes" xml:space="preserve">
          <source>&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.dev.post2&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.dev.post2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89239660b7c723b620250008fdd835e922b33da4" translate="yes" xml:space="preserve">
          <source>&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.post1&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.post1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4eebd8766b14551ea7dff411535b2e1c9a356272" translate="yes" xml:space="preserve">
          <source>&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.post2&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git commit&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.post2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ea26273f5593c4226f0549fc6ce039c83da6ec0" translate="yes" xml:space="preserve">
          <source>&amp;lt;git tag -a 1.2.3 -m &quot;Release 1.2.3&quot;&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git tag -a 1.2.3 -m &quot;Release 1.2.3&quot;&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f47d57ba5fbcca6eae3b0d05d4531dbd68831422" translate="yes" xml:space="preserve">
          <source>&amp;lt;git tag -a 1.2.3.a -m &quot;Release 1.2.3.a&quot;&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.a&lt;/code&gt;</source>
          <target state="translated">&amp;lt;git tag -a 1.2.3.a -m &quot;Release 1.2.3.a&quot;&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4346528ec94c1dd7dd05cbe4bd46989a3c42bba4" translate="yes" xml:space="preserve">
          <source>&amp;lt;without extension&amp;gt;</source>
          <target state="translated">&amp;lt;without extension&amp;gt;</target>
        </trans-unit>
        <trans-unit id="710c683239437c9e023c75cc891b2344ffd2fba3" translate="yes" xml:space="preserve">
          <source>.markdown</source>
          <target state="translated">.markdown</target>
        </trans-unit>
        <trans-unit id="a2c73572c9a46182d78f5820cc0cf08dd9886359" translate="yes" xml:space="preserve">
          <source>.md</source>
          <target state="translated">.md</target>
        </trans-unit>
        <trans-unit id="a9aa02808fafeec9ddfeb87c8df524e9686b233f" translate="yes" xml:space="preserve">
          <source>.mkdn</source>
          <target state="translated">.mkdn</target>
        </trans-unit>
        <trans-unit id="e99d7a5015e116a065a903b233f051979f14ce7b" translate="yes" xml:space="preserve">
          <source>.pip</source>
          <target state="translated">.pip</target>
        </trans-unit>
        <trans-unit id="6292c4d46d925a594b83af0b1e9244ea24fd9ea0" translate="yes" xml:space="preserve">
          <source>.rst</source>
          <target state="translated">.rst</target>
        </trans-unit>
        <trans-unit id="cf72d9de8581ebf56b49fdd346ca73f65775d152" translate="yes" xml:space="preserve">
          <source>.text</source>
          <target state="translated">.text</target>
        </trans-unit>
        <trans-unit id="39cb42ed04010c3ce1112ee8fdbe978799a17590" translate="yes" xml:space="preserve">
          <source>.txt</source>
          <target state="translated">.txt</target>
        </trans-unit>
        <trans-unit id="f41fa1908d20c95c843c6625faf74acbe8718058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto-package-data&lt;/code&gt; will not work if your Python package is not at the
root of your git repository (&lt;code&gt;setup.py&lt;/code&gt; is not next to &lt;code&gt;.git&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;auto-package-data&lt;/code&gt; will not work if your Python package is not at the root of your git repository ( &lt;code&gt;setup.py&lt;/code&gt; is not next to &lt;code&gt;.git&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8ddbbb6c0e46dede5f8c51b43333d20d97c9671" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Contents:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Contents:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42eba5ee349dfc8fbea30c39ccba04fe11ac5bba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No change in setup.cfg is required.&lt;/strong&gt; Putting the files here will cause the
packaging system to notice them and install them in the same arrangement next
to your Python files, but inside the virtualenv where your package is
installed.</source>
          <target state="translated">&lt;strong&gt;No change in setup.cfg is required.&lt;/strong&gt; Putting the files here will cause the packaging system to notice them and install them in the same arrangement next to your Python files, but inside the virtualenv where your package is installed.</target>
        </trans-unit>
        <trans-unit id="bf2c3b1201a2b538e7e408db25238302bb2d9d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can use vcs project urls and/or archive urls/paths&lt;/strong&gt; as described
in &lt;a href=&quot;https://pip.pypa.io/en/latest/reference/pip_install.html#usage&quot;&gt;pip
usage&lt;/a&gt; -
they will be split in dependency links and package names during package
creation and will be properly handled by pip/easyinstall during
installation. Remember that you can also make &quot;includes&quot; relationships
between &lt;code&gt;requirements.txt&lt;/code&gt; files by including a line like &lt;code&gt;-r other-requires-file.txt&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;You can use vcs project urls and/or archive urls/paths&lt;/strong&gt; as described in &lt;a href=&quot;https://pip.pypa.io/en/latest/reference/pip_install.html#usage&quot;&gt;pip usage&lt;/a&gt; - they will be split in dependency links and package names during package creation and will be properly handled by pip/easyinstall during installation. Remember that you can also make &quot;includes&quot; relationships between &lt;code&gt;requirements.txt&lt;/code&gt; files by including a line like &lt;code&gt;-r other-requires-file.txt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61fffbbc7859aca4c4ea9fb17ee5f57dbf2091cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-clean&lt;/strong&gt; - configurable clean jobs</source>
          <target state="translated">&lt;strong&gt;auto-clean&lt;/strong&gt; - configurable clean jobs</target>
        </trans-unit>
        <trans-unit id="7f0944e540da4de7daee88d2ae2634a7e6d92c28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-coverage&lt;/strong&gt; (?) - produce coverage reports while running tests</source>
          <target state="translated">&lt;strong&gt;auto-coverage&lt;/strong&gt; (?) - produce coverage reports while running tests</target>
        </trans-unit>
        <trans-unit id="a40f4482cf156d239620d0c9faad3529322b20dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-dependencies&lt;/strong&gt; - populate &lt;code&gt;install_requires&lt;/code&gt; and
&lt;em&gt;test_requires&lt;/em&gt; from requirement files</source>
          <target state="translated">&lt;strong&gt;auto-dependencies&lt;/strong&gt; - populate &lt;code&gt;install_requires&lt;/code&gt; and &lt;em&gt;test_requires&lt;/em&gt; from requirement files</target>
        </trans-unit>
        <trans-unit id="c3f61a1a67f99a9a907a197afd60b0c5759f5440" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-description&lt;/strong&gt; - set package long description</source>
          <target state="translated">&lt;strong&gt;auto-description&lt;/strong&gt; - set package long description</target>
        </trans-unit>
        <trans-unit id="7d45691f19f345df56401e58562a3bf23ab90598" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-docs&lt;/strong&gt; - API docs generation</source>
          <target state="translated">&lt;strong&gt;auto-docs&lt;/strong&gt; - API docs generation</target>
        </trans-unit>
        <trans-unit id="f4ca5199f4138304a5e5d7be167c1c8f0a73be16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-extra-meta&lt;/strong&gt; - add useful options to the metadata config
section</source>
          <target state="translated">&lt;strong&gt;auto-extra-meta&lt;/strong&gt; - add useful options to the metadata config section</target>
        </trans-unit>
        <trans-unit id="ac0c99cc6d2af42d542a12ac735be651fd8849e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-license&lt;/strong&gt; - fill out license information</source>
          <target state="translated">&lt;strong&gt;auto-license&lt;/strong&gt; - fill out license information</target>
        </trans-unit>
        <trans-unit id="a0d679ba850883bde7846ba73609a2dca8c60b79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-license&lt;/strong&gt; - include license file into distribution</source>
          <target state="translated">&lt;strong&gt;auto-license&lt;/strong&gt; - include license file into distribution</target>
        </trans-unit>
        <trans-unit id="439b2a75eef3f8371e59ce66d488ca6bf1b505f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-package-data&lt;/strong&gt; - include all files tracked by &lt;code&gt;git&lt;/code&gt; from
package dirs only.</source>
          <target state="translated">&lt;strong&gt;auto-package-data&lt;/strong&gt; - include all files tracked by &lt;code&gt;git&lt;/code&gt; from package dirs only.</target>
        </trans-unit>
        <trans-unit id="6580120074c837bac1d555ff0f19baafa5a6716d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-packages&lt;/strong&gt; - discover packages to include in distribution.</source>
          <target state="translated">&lt;strong&gt;auto-packages&lt;/strong&gt; - discover packages to include in distribution.</target>
        </trans-unit>
        <trans-unit id="1c6125d556e94d96fe5a1632b890b71d683c0e1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-pep8&lt;/strong&gt; - produce style-check reports</source>
          <target state="translated">&lt;strong&gt;auto-pep8&lt;/strong&gt; - produce style-check reports</target>
        </trans-unit>
        <trans-unit id="f7c10922ade6d747677283d38740ae033e672ad4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-plate&lt;/strong&gt; - integration with
&lt;a href=&quot;http://platter.pocoo.org/&quot;&gt;platter&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;auto-plate&lt;/strong&gt; - integration with &lt;a href=&quot;http://platter.pocoo.org/&quot;&gt;platter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="629bca6861a7336bc1f2bda82976426cc5c56423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-tests&lt;/strong&gt; - make &lt;code&gt;python setup.py test&lt;/code&gt; run tests with &lt;code&gt;tox&lt;/code&gt; or
&lt;code&gt;pytest&lt;/code&gt; (depending on &lt;code&gt;tox.ini&lt;/code&gt; presence).</source>
          <target state="translated">&lt;strong&gt;auto-tests&lt;/strong&gt; - make &lt;code&gt;python setup.py test&lt;/code&gt; run tests with &lt;code&gt;tox&lt;/code&gt; or &lt;code&gt;pytest&lt;/code&gt; (depending on &lt;code&gt;tox.ini&lt;/code&gt; presence).</target>
        </trans-unit>
        <trans-unit id="19a8b04859a4652c06962004fa25f420cc0db9d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auto-version&lt;/strong&gt; - set package version depending on selected
versioning strategy.</source>
          <target state="translated">&lt;strong&gt;auto-version&lt;/strong&gt; - set package version depending on selected versioning strategy.</target>
        </trans-unit>
        <trans-unit id="dcf92f8044d13d16d279a8352cf0f131cd73bb40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_pure&lt;/strong&gt; - allows you to override 'purity' flag for
distribution, i.e. you can explicitly say whether your distribution
is platform-specific or no.</source>
          <target state="translated">&lt;strong&gt;is_pure&lt;/strong&gt; - allows you to override 'purity' flag for distribution, i.e. you can explicitly say whether your distribution is platform-specific or no.</target>
        </trans-unit>
        <trans-unit id="a04b6c5deb9e4e20249f1cf02ce9c8fc5bd9f9ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pytest&lt;/strong&gt; with
&lt;a href=&quot;https://pypi.python.org/pypi/pytest-gitignore/&quot;&gt;pytest-gitignore&lt;/a&gt;
and
&lt;a href=&quot;https://pypi.python.org/pypi/teamcity-messages/&quot;&gt;teamcity-messages&lt;/a&gt;
plugins enabled by default otherwise (if you need any other plugins
just add them to test requirements) and activate them with
additional options (see below)</source>
          <target state="translated">&lt;strong&gt;pytest&lt;/strong&gt; with &lt;a href=&quot;https://pypi.python.org/pypi/pytest-gitignore/&quot;&gt;pytest-gitignore&lt;/a&gt; and &lt;a href=&quot;https://pypi.python.org/pypi/teamcity-messages/&quot;&gt;teamcity-messages&lt;/a&gt; plugins enabled by default otherwise (if you need any other plugins just add them to test requirements) and activate them with additional options (see below)</target>
        </trans-unit>
        <trans-unit id="d7d70b19db45ffbd9861069f61a2ef3a294e8a14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tox&lt;/strong&gt; if &lt;code&gt;tox.ini&lt;/code&gt; is present</source>
          <target state="translated">&lt;strong&gt;tox&lt;/strong&gt; if &lt;code&gt;tox.ini&lt;/code&gt; is present</target>
        </trans-unit>
        <trans-unit id="68c47121bebfc5a45bda287938b6085530382b30" translate="yes" xml:space="preserve">
          <source>Add tests</source>
          <target state="translated">테스트 추가</target>
        </trans-unit>
        <trans-unit id="ff660c50c5dd969032c27b3337783004f3f48d36" translate="yes" xml:space="preserve">
          <source>Adding them to git version control.</source>
          <target state="translated">Adding them to git version control.</target>
        </trans-unit>
        <trans-unit id="da645953192e641a3a0729d9f1714276e3a51bf1" translate="yes" xml:space="preserve">
          <source>Allow extension through entry points</source>
          <target state="translated">Allow extension through entry points</target>
        </trans-unit>
        <trans-unit id="2b0d7374198b6556227eeaca9bb7a483048f82a7" translate="yes" xml:space="preserve">
          <source>Alternatively, setuptools has a special way to directly invoke a Python
function from the command line, called the &lt;code&gt;console_scripts&lt;/code&gt; entry
point. &lt;code&gt;pull-sp-sub&lt;/code&gt; is an internal package that uses this:</source>
          <target state="translated">Alternatively, setuptools has a special way to directly invoke a Python function from the command line, called the &lt;code&gt;console_scripts&lt;/code&gt; entry point. &lt;code&gt;pull-sp-sub&lt;/code&gt; is an internal package that uses this:</target>
        </trans-unit>
        <trans-unit id="fff5a41fcc6ed685eabcb728b6db4ab8a79978f8" translate="yes" xml:space="preserve">
          <source>And... if you're not doing anything tricky in your package then that's
enough! And if you do, take a look at the section below.</source>
          <target state="translated">And... if you're not doing anything tricky in your package then that's enough! And if you do, take a look at the section below.</target>
        </trans-unit>
        <trans-unit id="719ee0415500d28505ab99deb53cc7c91ff33b84" translate="yes" xml:space="preserve">
          <source>Available facilities</source>
          <target state="translated">Available facilities</target>
        </trans-unit>
        <trans-unit id="1c497fbb3a46b78edf04cc2a2fa33f67e3ffbe2a" translate="yes" xml:space="preserve">
          <source>CHANGELOG</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="881b4eb6fc0969fa279c029d2db3f56e6a31f344" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;setup.py&lt;/code&gt; in your project dir: :</source>
          <target state="translated">Create a &lt;code&gt;setup.py&lt;/code&gt; in your project dir: :</target>
        </trans-unit>
        <trans-unit id="07a1a12a7d2bc8cbe02dc2f75ad23bb931fdabe1" translate="yes" xml:space="preserve">
          <source>Creating python packages is routine operation that involves a lot of
actions that could be automated. Although there are petty good tools
like &lt;a href=&quot;http://docs.openstack.org/developer/pbr/&quot;&gt;pbr&lt;/a&gt; for that purpose,
they miss some features and lack flexibility by trying to enforce some
strongly opinionated decisions upon you. PacKit tries to solve this by
providing a simple, convenient, and flexible way to create and build
packages while aiming for following goals:</source>
          <target state="translated">Creating python packages is routine operation that involves a lot of actions that could be automated. Although there are petty good tools like &lt;a href=&quot;http://docs.openstack.org/developer/pbr/&quot;&gt;pbr&lt;/a&gt; for that purpose, they miss some features and lack flexibility by trying to enforce some strongly opinionated decisions upon you. PacKit tries to solve this by providing a simple, convenient, and flexible way to create and build packages while aiming for following goals:</target>
        </trans-unit>
        <trans-unit id="8b5c2291f9132a0843a46cd14a1deff0844ee223" translate="yes" xml:space="preserve">
          <source>Currently all available facilities are enabled by default. Though you
can easily turn them off by using &lt;code&gt;facilities&lt;/code&gt; section in your
&lt;code&gt;setup.cfg&lt;/code&gt;:</source>
          <target state="translated">Currently all available facilities are enabled by default. Though you can easily turn them off by using &lt;code&gt;facilities&lt;/code&gt; section in your &lt;code&gt;setup.cfg&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="603d07214e3d1c9dcc95b03f99ce9a103cfcf75f" translate="yes" xml:space="preserve">
          <source>Each of these files will be tried with following extensions:</source>
          <target state="translated">Each of these files will be tried with following extensions:</target>
        </trans-unit>
        <trans-unit id="f42dd44b27fffcd4c72a3a211d252cb105bdb153" translate="yes" xml:space="preserve">
          <source>Example: 1. &amp;lt;git tag -a 1.2.3.dev -m &quot;dev release 1.2.3.dev&quot;&amp;gt; -&amp;gt;
version is &lt;code&gt;1.2.3.dev&lt;/code&gt;</source>
          <target state="translated">Example: 1. &amp;lt;git tag -a 1.2.3.dev -m &quot;dev release 1.2.3.dev&quot;&amp;gt; -&amp;gt; version is &lt;code&gt;1.2.3.dev&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c88d5bf9deb4002fb9e6b0b6fc0652eff845989d" translate="yes" xml:space="preserve">
          <source>Execute command specified in &lt;code&gt;value&lt;/code&gt; (it's required when this strategy
is used) under &lt;code&gt;auto-version&lt;/code&gt; section in &lt;code&gt;setup.cfg&lt;/code&gt;, read a line from
&lt;code&gt;stdout&lt;/code&gt;, strip it and use as a version</source>
          <target state="translated">Execute command specified in &lt;code&gt;value&lt;/code&gt; (it's required when this strategy is used) under &lt;code&gt;auto-version&lt;/code&gt; section in &lt;code&gt;setup.cfg&lt;/code&gt; , read a line from &lt;code&gt;stdout&lt;/code&gt; , strip it and use as a version</target>
        </trans-unit>
        <trans-unit id="9d0a833e883c67f6559509334a96f848be9e54ed" translate="yes" xml:space="preserve">
          <source>Facilities</source>
          <target state="translated">Facilities</target>
        </trans-unit>
        <trans-unit id="c1ca1ba7eb98fbe60fbdb261d08b476a6aface57" translate="yes" xml:space="preserve">
          <source>Facility-specific defaults and configuration options described below.</source>
          <target state="translated">Facility-specific defaults and configuration options described below.</target>
        </trans-unit>
        <trans-unit id="ff082f7c152249c83c1c10a983bb23145d3bdbce" translate="yes" xml:space="preserve">
          <source>For each path following extensions will be tried</source>
          <target state="translated">For each path following extensions will be tried</target>
        </trans-unit>
        <trans-unit id="2dc350c74bf3879bdf409797f402576934bf3014" translate="yes" xml:space="preserve">
          <source>For installation requirements following paths will be tried:</source>
          <target state="translated">For installation requirements following paths will be tried:</target>
        </trans-unit>
        <trans-unit id="14e8f61d25c2e2c01b13b40ca30bbb2fee1a0f12" translate="yes" xml:space="preserve">
          <source>For testing requirements following paths will be tried:</source>
          <target state="translated">For testing requirements following paths will be tried:</target>
        </trans-unit>
        <trans-unit id="0185406bbf65df9d85e9af1876ef8c112a5635e9" translate="yes" xml:space="preserve">
          <source>Further Development</source>
          <target state="translated">Further Development</target>
        </trans-unit>
        <trans-unit id="405e03aa20d165594b7be74b00c65e9175f7b680" translate="yes" xml:space="preserve">
          <source>Generate &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/&quot;&gt;PEP440&lt;/a&gt;-compliant
version from &lt;strong&gt;annotated&lt;/strong&gt;&lt;code&gt;git&lt;/code&gt; tags. It's expected that you are using
git tags that follow &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/#public-version-identifiers&quot;&gt;public version
identifier&lt;/a&gt;
description and &lt;code&gt;git-pep440&lt;/code&gt; will just append number of commits since
tag was applied to your tag value (the &lt;code&gt;N&lt;/code&gt; in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/#public-version-identifiers&quot;&gt;public version
identifier&lt;/a&gt;
description).</source>
          <target state="translated">Generate &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/&quot;&gt;PEP440&lt;/a&gt;-compliant version from &lt;strong&gt;annotated&lt;/strong&gt; &lt;code&gt;git&lt;/code&gt; tags. It's expected that you are using git tags that follow &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/#public-version-identifiers&quot;&gt;public version identifier&lt;/a&gt; description and &lt;code&gt;git-pep440&lt;/code&gt; will just append number of commits since tag was applied to your tag value (the &lt;code&gt;N&lt;/code&gt; in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/#public-version-identifiers&quot;&gt;public version identifier&lt;/a&gt; description).</target>
        </trans-unit>
        <trans-unit id="21ab52a199121c11ad139465d02e68c21db5e3ea" translate="yes" xml:space="preserve">
          <source>Has no additional configuration options [yet].</source>
          <target state="translated">Has no additional configuration options [yet].</target>
        </trans-unit>
        <trans-unit id="5bef3874632e865d62228fb637231988ca7cfaa7" translate="yes" xml:space="preserve">
          <source>Here's a brief overview of currently implemented facilities and the list
will be extended as new ones will be added.</source>
          <target state="translated">Here's a brief overview of currently implemented facilities and the list will be extended as new ones will be added.</target>
        </trans-unit>
        <trans-unit id="48d4c3babf5c7e53eecb10d6cf3701de3cc7f209" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;exclude&lt;/code&gt; not provided the following defaults will be used: &lt;code&gt;test&lt;/code&gt;,
&lt;code&gt;docs&lt;/code&gt;, &lt;code&gt;.tox&lt;/code&gt; and &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">If &lt;code&gt;exclude&lt;/code&gt; not provided the following defaults will be used: &lt;code&gt;test&lt;/code&gt; , &lt;code&gt;docs&lt;/code&gt; , &lt;code&gt;.tox&lt;/code&gt; and &lt;code&gt;env&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9790855c156be6c3352f6fb81893382564884369" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;include&lt;/code&gt; not provided, &lt;code&gt;auto-packages&lt;/code&gt; will try the following steps
in order to generate it:</source>
          <target state="translated">If &lt;code&gt;include&lt;/code&gt; not provided, &lt;code&gt;auto-packages&lt;/code&gt; will try the following steps in order to generate it:</target>
        </trans-unit>
        <trans-unit id="64cb44c2faaf828eaeca60ccbbfac395c9d952eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;packages_root&lt;/code&gt; value provided under &lt;code&gt;files&lt;/code&gt; section in
&lt;code&gt;setup.cfg&lt;/code&gt;, it will be used.</source>
          <target state="translated">If &lt;code&gt;packages_root&lt;/code&gt; value provided under &lt;code&gt;files&lt;/code&gt; section in &lt;code&gt;setup.cfg&lt;/code&gt; , it will be used.</target>
        </trans-unit>
        <trans-unit id="140b3b9a97efb32ffc509ad36fb0477b57333c62" translate="yes" xml:space="preserve">
          <source>If facility is explicitly disabled it won't be used even if
facility-specific configuration section is present.</source>
          <target state="translated">If facility is explicitly disabled it won't be used even if facility-specific configuration section is present.</target>
        </trans-unit>
        <trans-unit id="961ae667685c1ec162ac5395edccc13ef9408ef8" translate="yes" xml:space="preserve">
          <source>If license file name is not provided the facility will try to discover
it in the current dir trying following file names:</source>
          <target state="translated">If license file name is not provided the facility will try to discover it in the current dir trying following file names:</target>
        </trans-unit>
        <trans-unit id="d73eaaed864c4e5ee994d7137e4fc46b86f57f24" translate="yes" xml:space="preserve">
          <source>If no file name provided, it will be discovered automatically by trying
following list of files:</source>
          <target state="translated">If no file name provided, it will be discovered automatically by trying following list of files:</target>
        </trans-unit>
        <trans-unit id="82737b380d16c0ab5079bbd6507fc5210cc0b01b" translate="yes" xml:space="preserve">
          <source>If number of commits since tag equal to 0 (your building the tagged
version) the &lt;code&gt;N&lt;/code&gt; value won't be appended. Otherwise, it will be appended
and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/#local-version-identifiers&quot;&gt;local version
identifier&lt;/a&gt;
equal to first 7 chars of commit hash will be also added.</source>
          <target state="translated">If number of commits since tag equal to 0 (your building the tagged version) the &lt;code&gt;N&lt;/code&gt; value won't be appended. Otherwise, it will be appended and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0440/#local-version-identifiers&quot;&gt;local version identifier&lt;/a&gt; equal to first 7 chars of commit hash will be also added.</target>
        </trans-unit>
        <trans-unit id="f898860669780342419fcd63cde425448bc38e50" translate="yes" xml:space="preserve">
          <source>If requirements file names not provided then the facility will try to
discover them automatically.</source>
          <target state="translated">If requirements file names not provided then the facility will try to discover them automatically.</target>
        </trans-unit>
        <trans-unit id="de573e95411c3652d149871d4c2cabf932b9529f" translate="yes" xml:space="preserve">
          <source>If you don't see desired facilities or have cool features in mind feel
free to contact us and tell about your ideas.</source>
          <target state="translated">If you don't see desired facilities or have cool features in mind feel free to contact us and tell about your ideas.</target>
        </trans-unit>
        <trans-unit id="9bf763890df5232b952a5b1aba6c71f1d0b46f34" translate="yes" xml:space="preserve">
          <source>If you have some scripts already, the easiest thing is to collect them
in one directory, then use &lt;code&gt;scripts&lt;/code&gt;:</source>
          <target state="translated">If you have some scripts already, the easiest thing is to collect them in one directory, then use &lt;code&gt;scripts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be0e04045327321834d3e089c37127dc71806334" translate="yes" xml:space="preserve">
          <source>If you need to include a &lt;strong&gt;compiled executable file&lt;/strong&gt; in your package, this
is a convenient way to do it - include &lt;code&gt;bin = bin/**&lt;/code&gt; for example. See
the &lt;code&gt;fastatools&lt;/code&gt; package for an example of this.  There is also a
&lt;a href=&quot;https://confluence.ncbi.nlm.nih.gov/x/TVA0Aw&quot;&gt;confluence page with more details on including compiled
programs&lt;/a&gt;.</source>
          <target state="translated">If you need to include a &lt;strong&gt;compiled executable file&lt;/strong&gt; in your package, this is a convenient way to do it - include &lt;code&gt;bin = bin/**&lt;/code&gt; for example. See the &lt;code&gt;fastatools&lt;/code&gt; package for an example of this. There is also a &lt;a href=&quot;https://confluence.ncbi.nlm.nih.gov/x/TVA0Aw&quot;&gt;confluence page with more details on including compiled programs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0d40fe035f6d5c78285fa646d90a984a3b8b28d1" translate="yes" xml:space="preserve">
          <source>If your Python package is not in the root of your Git repository (so
&lt;code&gt;setup.py&lt;/code&gt; is not in the same directory as &lt;code&gt;.git&lt;/code&gt;), then
&lt;code&gt;auto-package-data&lt;/code&gt; will not work.</source>
          <target state="translated">If your Python package is not in the root of your Git repository (so &lt;code&gt;setup.py&lt;/code&gt; is not in the same directory as &lt;code&gt;.git&lt;/code&gt; ), then &lt;code&gt;auto-package-data&lt;/code&gt; will not work.</target>
        </trans-unit>
        <trans-unit id="fd7c709426d6a095a02630ceb5dc4751426a3f55" translate="yes" xml:space="preserve">
          <source>If your packages live inside a &lt;code&gt;src&lt;/code&gt; directory, you do need to include
that in the &lt;code&gt;extra_files&lt;/code&gt; path:</source>
          <target state="translated">If your packages live inside a &lt;code&gt;src&lt;/code&gt; directory, you do need to include that in the &lt;code&gt;extra_files&lt;/code&gt; path:</target>
        </trans-unit>
        <trans-unit id="a663a94538b63d8a00fa21f4987af2bf91d24e8f" translate="yes" xml:space="preserve">
          <source>Improve docs</source>
          <target state="translated">Improve docs</target>
        </trans-unit>
        <trans-unit id="d32b99ab09f53969b5c82679867a37c8d3c38c30" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;dest_dir&lt;/code&gt; will be created within the top level of the
virtualenv. The contents of &lt;code&gt;src_dir&lt;/code&gt; will be placed inside it, along
with &lt;code&gt;file_to_put_there&lt;/code&gt;.</source>
          <target state="translated">In this example, &lt;code&gt;dest_dir&lt;/code&gt; will be created within the top level of the virtualenv. The contents of &lt;code&gt;src_dir&lt;/code&gt; will be placed inside it, along with &lt;code&gt;file_to_put_there&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a37f512090c9b3d900adab0c17798f9ff681e64" translate="yes" xml:space="preserve">
          <source>Including Files Other than Python Libraries</source>
          <target state="translated">Including Files Other than Python Libraries</target>
        </trans-unit>
        <trans-unit id="1c7cbc1b86055cb2bce75f10a56be1645650f52b" translate="yes" xml:space="preserve">
          <source>Including Python scripts</source>
          <target state="translated">Including Python scripts</target>
        </trans-unit>
        <trans-unit id="2a48e6e2255a5062c3e3d10ebc743a81c8a54286" translate="yes" xml:space="preserve">
          <source>Including compiled shared libraries in both source and binary packages</source>
          <target state="translated">Including compiled shared libraries in both source and binary packages</target>
        </trans-unit>
        <trans-unit id="7f78f2d4e1cba4a39b6acb8a51dc871b2b537a96" translate="yes" xml:space="preserve">
          <source>Including uncompiled C extensions (including Cython)</source>
          <target state="translated">Including uncompiled C extensions (including Cython)</target>
        </trans-unit>
        <trans-unit id="a36a5c9995e9500486a95c47d5339d87baafb363" translate="yes" xml:space="preserve">
          <source>It operates using &lt;code&gt;exclude&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; values that can be specified
under &lt;code&gt;auto-packages&lt;/code&gt; section within &lt;code&gt;setup.cfg&lt;/code&gt;.</source>
          <target state="translated">It operates using &lt;code&gt;exclude&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; values that can be specified under &lt;code&gt;auto-packages&lt;/code&gt; section within &lt;code&gt;setup.cfg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5eb2e96d5a2e449ec5139da6c20b0c4feb3cbd7" translate="yes" xml:space="preserve">
          <source>It's OK to define 'extra' version components and not use them but it's
an error to not define any of components mentioned in composite version
template.</source>
          <target state="translated">It's OK to define 'extra' version components and not use them but it's an error to not define any of components mentioned in composite version template.</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">알려진 문제</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="60d872d7083a032cd8981cf8d238e68a1ba68ac0" translate="yes" xml:space="preserve">
          <source>More configuration options for existing facilities</source>
          <target state="translated">More configuration options for existing facilities</target>
        </trans-unit>
        <trans-unit id="4923932a82d8357a81c03b3dad6bd3db6f4b525e" translate="yes" xml:space="preserve">
          <source>New facilities</source>
          <target state="translated">New facilities</target>
        </trans-unit>
        <trans-unit id="6b736f877c0d45365f1763e83eb056f11f8233e1" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;extra_files&lt;/code&gt; is different from &lt;code&gt;data_files&lt;/code&gt; which we used
above.</source>
          <target state="translated">Notice that &lt;code&gt;extra_files&lt;/code&gt; is different from &lt;code&gt;data_files&lt;/code&gt; which we used above.</target>
        </trans-unit>
        <trans-unit id="7bb59e7be784913d9d6134e6d3da338fc51db47b" translate="yes" xml:space="preserve">
          <source>Now let's create a &lt;code&gt;setup.cfg&lt;/code&gt; that you will use in order to configure
your package:</source>
          <target state="translated">Now let's create a &lt;code&gt;setup.cfg&lt;/code&gt; that you will use in order to configure your package:</target>
        </trans-unit>
        <trans-unit id="09d0e2b5defc6e19c5ee3fcb53b728fd5a696bd9" translate="yes" xml:space="preserve">
          <source>Often, you need to include a data file, or another program, or some
other kind of file, with your Python package. Here are a number of
common situations, and how to accomplish them using packit:</source>
          <target state="translated">Often, you need to include a data file, or another program, or some other kind of file, with your Python package. Here are a number of common situations, and how to accomplish them using packit:</target>
        </trans-unit>
        <trans-unit id="f1eab90d7edf8befa98e9ffc345beb923e26941e" translate="yes" xml:space="preserve">
          <source>On top of that PacKit forces easy_install to honor following &lt;a href=&quot;https://pip.pypa.io/en/latest/user_guide.html#configuration&quot;&gt;PIP's
fetch
directives&lt;/a&gt;:</source>
          <target state="translated">On top of that PacKit forces easy_install to honor following &lt;a href=&quot;https://pip.pypa.io/en/latest/user_guide.html#configuration&quot;&gt;PIP's fetch directives&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="327c93d48377ac663f3c27f862dae895800fb2df" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;include&lt;/code&gt; value is determined, the resulting packages list will be
generated using following algorithm:</source>
          <target state="translated">Once &lt;code&gt;include&lt;/code&gt; value is determined, the resulting packages list will be generated using following algorithm:</target>
        </trans-unit>
        <trans-unit id="38ae2ff3fe3ffbb2c640bbb6120790d79a2015cd" translate="yes" xml:space="preserve">
          <source>Once a file is found, PacKit stops looking for more files.</source>
          <target state="translated">Once a file is found, PacKit stops looking for more files.</target>
        </trans-unit>
        <trans-unit id="5d74bfd3e2b07df707815af02e1cdf553e680866" translate="yes" xml:space="preserve">
          <source>Once this is done, you have several easy options for accessing them, and all of
these should work the same way in development and once installed:</source>
          <target state="translated">Once this is done, you have several easy options for accessing them, and all of these should work the same way in development and once installed:</target>
        </trans-unit>
        <trans-unit id="345aac9872517a6c4b8acf7d4ab5bbf06d5932a4" translate="yes" xml:space="preserve">
          <source>Otherwise the current working dir will be scanned for any python
packages (dirs with __init__.py) while honoring exclude &lt;code&gt;value&lt;/code&gt;.
&lt;em&gt;This packages also will be included into the resulting list of
packages.&lt;/em&gt;</source>
          <target state="translated">Otherwise the current working dir will be scanned for any python packages (dirs with __init__.py) while honoring exclude &lt;code&gt;value&lt;/code&gt; . &lt;em&gt;This packages also will be included into the resulting list of packages.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="84913d0c4b85884bfdd3ed37b70c660f03e3b8dd" translate="yes" xml:space="preserve">
          <source>PacKit</source>
          <target state="translated">PacKit</target>
        </trans-unit>
        <trans-unit id="df8a8a9704a9aeb41963b803a3b7f8bc4d76220f" translate="yes" xml:space="preserve">
          <source>PacKit is wrapper around &lt;a href=&quot;http://docs.openstack.org/developer/pbr/&quot;&gt;pbr&lt;/a&gt;
though it only uses it for interaction with setuptools/distutils through
simplified interface. None of
&lt;a href=&quot;http://docs.openstack.org/developer/pbr/&quot;&gt;pbr&lt;/a&gt; functions are exposed
but instead PacKit provides its own interface.</source>
          <target state="translated">PacKit is wrapper around &lt;a href=&quot;http://docs.openstack.org/developer/pbr/&quot;&gt;pbr&lt;/a&gt; though it only uses it for interaction with setuptools/distutils through simplified interface. None of &lt;a href=&quot;http://docs.openstack.org/developer/pbr/&quot;&gt;pbr&lt;/a&gt; functions are exposed but instead PacKit provides its own interface.</target>
        </trans-unit>
        <trans-unit id="38343e056f608dbb7d74084e1ea3f92af536a084" translate="yes" xml:space="preserve">
          <source>Packit can coexist with setuptools's support for C extensions. Here is
an &lt;a href=&quot;https://bitbucket.ncbi.nlm.nih.gov/projects/PY/repos/is_xml_encodable/browse/setup.py&quot;&gt;example with a C file that will be compiled on the user's
system&lt;/a&gt;.
In that particular package, the author chose to require Cython for
developers but not for end users, so the distribution and the git repo
include both the &lt;code&gt;.pyx&lt;/code&gt; file and the &lt;code&gt;.c&lt;/code&gt; file it's translated to.</source>
          <target state="translated">Packit can coexist with setuptools's support for C extensions. Here is an &lt;a href=&quot;https://bitbucket.ncbi.nlm.nih.gov/projects/PY/repos/is_xml_encodable/browse/setup.py&quot;&gt;example with a C file that will be compiled on the user's system&lt;/a&gt;. In that particular package, the author chose to require Cython for developers but not for end users, so the distribution and the git repo include both the &lt;code&gt;.pyx&lt;/code&gt; file and the &lt;code&gt;.c&lt;/code&gt; file it's translated to.</target>
        </trans-unit>
        <trans-unit id="3a5fe96facdcfcf2bf76e5440f386a0584dc1367" translate="yes" xml:space="preserve">
          <source>Placing data files relative to the virtual environment</source>
          <target state="translated">Placing data files relative to the virtual environment</target>
        </trans-unit>
        <trans-unit id="e9e7230d78d26188424c775bf90fb36fc7724444" translate="yes" xml:space="preserve">
          <source>Placing data files with the code that uses them: auto-package-data</source>
          <target state="translated">Placing data files with the code that uses them: auto-package-data</target>
        </trans-unit>
        <trans-unit id="4afd25deb67b966a1180de41f0aeaa81e7c32476" translate="yes" xml:space="preserve">
          <source>Placing them inside a Python package directory (so next to an &lt;code&gt;__init__.py&lt;/code&gt;
or in a subdirectory), and</source>
          <target state="translated">Placing them inside a Python package directory (so next to an &lt;code&gt;__init__.py&lt;/code&gt; or in a subdirectory), and</target>
        </trans-unit>
        <trans-unit id="c77b26895168ac8f522dd09ee158e1b984f3e01a" translate="yes" xml:space="preserve">
          <source>Planned facilities</source>
          <target state="translated">Planned facilities</target>
        </trans-unit>
        <trans-unit id="089084f83b055bc14f0c45073e357efe92434580" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;output&lt;/code&gt; directives used here only for reference (to
show that they can be used anywhere) and are not required.</source>
          <target state="translated">Please note that &lt;code&gt;output&lt;/code&gt; directives used here only for reference (to show that they can be used anywhere) and are not required.</target>
        </trans-unit>
        <trans-unit id="ea944298f3257a81f6aca36234c0bcfefc507264" translate="yes" xml:space="preserve">
          <source>Please note: you must create an &lt;strong&gt;annotated&lt;/strong&gt; tag, otherwise it will be
ignored.</source>
          <target state="translated">Please note: you must create an &lt;strong&gt;annotated&lt;/strong&gt; tag, otherwise it will be ignored.</target>
        </trans-unit>
        <trans-unit id="424e6895d38473b7f82a31e4b53453c7050d1b17" translate="yes" xml:space="preserve">
          <source>Python packaging in declarative way (wrapping pbr to make it flexible)</source>
          <target state="translated">Python packaging in declarative way (wrapping pbr to make it flexible)</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">읽어보기</target>
        </trans-unit>
        <trans-unit id="98365abf7a35b55e3b549f20aa17daee9fe3c995" translate="yes" xml:space="preserve">
          <source>Rationale</source>
          <target state="translated">이론적 해석</target>
        </trans-unit>
        <trans-unit id="28e13da098e06faa74cfff630a4061f227a29ac1" translate="yes" xml:space="preserve">
          <source>Read a line using UTF-8 encoding from the file specified in &lt;code&gt;value&lt;/code&gt;
(it's required when this strategy is used) under &lt;code&gt;auto-version&lt;/code&gt; section
in &lt;code&gt;setup.cfg&lt;/code&gt;, strip it and use as a version.</source>
          <target state="translated">Read a line using UTF-8 encoding from the file specified in &lt;code&gt;value&lt;/code&gt; (it's required when this strategy is used) under &lt;code&gt;auto-version&lt;/code&gt; section in &lt;code&gt;setup.cfg&lt;/code&gt; , strip it and use as a version.</target>
        </trans-unit>
        <trans-unit id="a521e980658935c60a3962c8ef2683ab5f226ac5" translate="yes" xml:space="preserve">
          <source>Requirement files could be specified by &lt;code&gt;install&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; fields
under the &lt;code&gt;auto-dependencies&lt;/code&gt; section of the &lt;code&gt;setup.cfg&lt;/code&gt;.</source>
          <target state="translated">Requirement files could be specified by &lt;code&gt;install&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; fields under the &lt;code&gt;auto-dependencies&lt;/code&gt; section of the &lt;code&gt;setup.cfg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1b542ee7af294aebb9ffaa9510acbd2f864a49d" translate="yes" xml:space="preserve">
          <source>Right now, only 1 extra option supported:</source>
          <target state="translated">Right now, only 1 extra option supported:</target>
        </trans-unit>
        <trans-unit id="2f74fc0e953a92b32f860a2e6e2baa628f677fb6" translate="yes" xml:space="preserve">
          <source>Scripts created this way are slightly slower to start up than scripts
that directly run a Python file. Also, setuptools seems to do more
dependency checking when starting a script like this, so if you
regularly live with broken dependencies inside your virtualenv, this
will be frustrating for you. On the other hand, scripts made this way
will work better on Windows, if that's one of your target environments.</source>
          <target state="translated">Scripts created this way are slightly slower to start up than scripts that directly run a Python file. Also, setuptools seems to do more dependency checking when starting a script like this, so if you regularly live with broken dependencies inside your virtualenv, this will be frustrating for you. On the other hand, scripts made this way will work better on Windows, if that's one of your target environments.</target>
        </trans-unit>
        <trans-unit id="97d9465c892a128c8c9ef3cdf822d82380e17f57" translate="yes" xml:space="preserve">
          <source>Scripts need to be treated specially, and not just dropped into &lt;code&gt;bin&lt;/code&gt;
using &lt;code&gt;data_files&lt;/code&gt;, because Python changes the shebang (&lt;code&gt;#!&lt;/code&gt;) line to
match the virtualenv's python interpreter. This means you can directly
run a script without activating a virtualenv - e.g. &lt;code&gt;env/bin/pip install attrs&lt;/code&gt; will work even if &lt;code&gt;env&lt;/code&gt; isn't activated.[1]</source>
          <target state="translated">Scripts need to be treated specially, and not just dropped into &lt;code&gt;bin&lt;/code&gt; using &lt;code&gt;data_files&lt;/code&gt; , because Python changes the shebang ( &lt;code&gt;#!&lt;/code&gt; ) line to match the virtualenv's python interpreter. This means you can directly run a script without activating a virtualenv - e.g. &lt;code&gt;env/bin/pip install attrs&lt;/code&gt; will work even if &lt;code&gt;env&lt;/code&gt; isn't activated.[1]</target>
        </trans-unit>
        <trans-unit id="30ac0d73512fde9398b51b022601a7b572f5ab73" translate="yes" xml:space="preserve">
          <source>See the next section.</source>
          <target state="translated">See the next section.</target>
        </trans-unit>
        <trans-unit id="604656fe2e78bece041812dce0695a4f997c3741" translate="yes" xml:space="preserve">
          <source>That was the first and the last time you touched that file for your
project.</source>
          <target state="translated">That was the first and the last time you touched that file for your project.</target>
        </trans-unit>
        <trans-unit id="17e8ff5784fe1aa3bea029446f430bdfe513e20f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto-package-data&lt;/code&gt; section has configuration options, but they
don't do anything right now
(&lt;a href=&quot;https://jira.ncbi.nlm.nih.gov/browse/PY-504&quot;&gt;PY-504&lt;/a&gt;).</source>
          <target state="translated">The &lt;code&gt;auto-package-data&lt;/code&gt; section has configuration options, but they don't do anything right now (&lt;a href=&quot;https://jira.ncbi.nlm.nih.gov/browse/PY-504&quot;&gt;PY-504&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="53219387e9397493073532671110eb50a894312b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readme&lt;/code&gt; file name could be specified with &lt;code&gt;file&lt;/code&gt; field under
&lt;code&gt;auto-description&lt;/code&gt; section.</source>
          <target state="translated">The &lt;code&gt;readme&lt;/code&gt; file name could be specified with &lt;code&gt;file&lt;/code&gt; field under &lt;code&gt;auto-description&lt;/code&gt; section.</target>
        </trans-unit>
        <trans-unit id="85a5186cc1550f81625ff0356274621f6cdbe252" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; field in composite version strategy should be a valid
&lt;a href=&quot;https://docs.python.org/2/library/string.html#string-formatting&quot;&gt;string format
expression&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;value&lt;/code&gt; field in composite version strategy should be a valid &lt;a href=&quot;https://docs.python.org/2/library/string.html#string-formatting&quot;&gt;string format expression&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5117d8a8a75451f67811ea314a4227573593be2c" translate="yes" xml:space="preserve">
          <source>The default is that the &lt;code&gt;auto-package-data&lt;/code&gt; facility is enabled. In this
configuration, you can include data files for your python library very
easily by just:</source>
          <target state="translated">The default is that the &lt;code&gt;auto-package-data&lt;/code&gt; facility is enabled. In this configuration, you can include data files for your python library very easily by just:</target>
        </trans-unit>
        <trans-unit id="40498ecfb9ca39e5ea8e64533aff18e0db1ed0fa" translate="yes" xml:space="preserve">
          <source>The facility automatically downloads underlying test framework and
install it - you don't need to worry about it.</source>
          <target state="translated">The facility automatically downloads underlying test framework and install it - you don't need to worry about it.</target>
        </trans-unit>
        <trans-unit id="c05a035b6b7278c867bf0655df58dc9c267dad74" translate="yes" xml:space="preserve">
          <source>The least magical way is &lt;code&gt;pathlib.Path(__file__).parent / 'somedata.csv'&lt;/code&gt;,
or some equivalent with &lt;code&gt;os.path&lt;/code&gt; calls.  This makes your package non-zip-safe,
so it can't be used in a &lt;code&gt;pex&lt;/code&gt; or &lt;code&gt;zipapp&lt;/code&gt; application.</source>
          <target state="translated">The least magical way is &lt;code&gt;pathlib.Path(__file__).parent / 'somedata.csv'&lt;/code&gt; , or some equivalent with &lt;code&gt;os.path&lt;/code&gt; calls. This makes your package non-zip-safe, so it can't be used in a &lt;code&gt;pex&lt;/code&gt; or &lt;code&gt;zipapp&lt;/code&gt; application.</target>
        </trans-unit>
        <trans-unit id="d55f37b3346c1ba6546beaca086acb630ea3aa13" translate="yes" xml:space="preserve">
          <source>The license file name could be specified by the &lt;code&gt;file&lt;/code&gt; field within
&lt;code&gt;auto-license&lt;/code&gt; section.</source>
          <target state="translated">The license file name could be specified by the &lt;code&gt;file&lt;/code&gt; field within &lt;code&gt;auto-license&lt;/code&gt; section.</target>
        </trans-unit>
        <trans-unit id="5a6f857049b07e6d50204ffe3d80b2e1245ff9cc" translate="yes" xml:space="preserve">
          <source>The most advanced version strategy designed for special cases. It allows
you to generate complex version values based on other version
strategies. The usage is pretty simple though:</source>
          <target state="translated">The most advanced version strategy designed for special cases. It allows you to generate complex version values based on other version strategies. The usage is pretty simple though:</target>
        </trans-unit>
        <trans-unit id="7a00e1bb8c86052d8bf7900ca17bceff88284950" translate="yes" xml:space="preserve">
          <source>The new hotness is &lt;code&gt;importlib.resources.open_text('nicelib', 'somedata.csv')&lt;/code&gt; and &lt;a href=&quot;https://docs.python.org/3/library/importlib.html#module-importlib.resources&quot;&gt;related
functions&lt;/a&gt;,
available in the stdlib in Python 3.7+ or as a backport in the
&lt;code&gt;importlib_resources&lt;/code&gt; PyPI package.  One limitation is this does &lt;em&gt;not&lt;/em&gt;
support putting resources deeper in subdirectories.</source>
          <target state="translated">The new hotness is &lt;code&gt;importlib.resources.open_text('nicelib', 'somedata.csv')&lt;/code&gt; and &lt;a href=&quot;https://docs.python.org/3/library/importlib.html#module-importlib.resources&quot;&gt;related functions&lt;/a&gt;, available in the stdlib in Python 3.7+ or as a backport in the &lt;code&gt;importlib_resources&lt;/code&gt; PyPI package. One limitation is this does &lt;em&gt;not&lt;/em&gt; support putting resources deeper in subdirectories.</target>
        </trans-unit>
        <trans-unit id="db05dca2d5d786c67ad2c4f634618e99bb5fe6bd" translate="yes" xml:space="preserve">
          <source>The previous standard has been &lt;code&gt;pkg_resources.resource_stream('nicelib', 'somedata.csv')&lt;/code&gt; and &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;related
functions&lt;/a&gt;.
This supports deeper subdirectories, but is &lt;em&gt;much&lt;/em&gt; slower than
&lt;code&gt;importlib.resources&lt;/code&gt;.  You shouldn't need to install &lt;code&gt;pkg_resources&lt;/code&gt;,
it's part of &lt;code&gt;setuptools&lt;/code&gt;, which is always available these days.</source>
          <target state="translated">The previous standard has been &lt;code&gt;pkg_resources.resource_stream('nicelib', 'somedata.csv')&lt;/code&gt; and &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;related functions&lt;/a&gt;. This supports deeper subdirectories, but is &lt;em&gt;much&lt;/em&gt; slower than &lt;code&gt;importlib.resources&lt;/code&gt; . You shouldn't need to install &lt;code&gt;pkg_resources&lt;/code&gt; , it's part of &lt;code&gt;setuptools&lt;/code&gt; , which is always available these days.</target>
        </trans-unit>
        <trans-unit id="91b3b80c470b951c5ecc4ec3dcf95109a6cac18e" translate="yes" xml:space="preserve">
          <source>The readme file will be included in the package data.</source>
          <target state="translated">The readme file will be included in the package data.</target>
        </trans-unit>
        <trans-unit id="6a2fb51f3746c5ce9a3f49fa9a4433fdca57ed6b" translate="yes" xml:space="preserve">
          <source>This includes things that use the C++ Toolkit (see &lt;code&gt;python-applog&lt;/code&gt; and
&lt;code&gt;cpp-toolkit-validators&lt;/code&gt; for examples). These &lt;code&gt;.so&lt;/code&gt; files should get
placed inside the python package hierarchy. Presumably, if you're
compiling them, they are build artifacts that won't be tracked by git,
so they won't be included automatically by &lt;code&gt;auto-package-data&lt;/code&gt;. Instead,
once they are there, use &lt;code&gt;extra_files&lt;/code&gt; to have the packaging system
notice them:</source>
          <target state="translated">This includes things that use the C++ Toolkit (see &lt;code&gt;python-applog&lt;/code&gt; and &lt;code&gt;cpp-toolkit-validators&lt;/code&gt; for examples). These &lt;code&gt;.so&lt;/code&gt; files should get placed inside the python package hierarchy. Presumably, if you're compiling them, they are build artifacts that won't be tracked by git, so they won't be included automatically by &lt;code&gt;auto-package-data&lt;/code&gt; . Instead, once they are there, use &lt;code&gt;extra_files&lt;/code&gt; to have the packaging system notice them:</target>
        </trans-unit>
        <trans-unit id="c5c4e6893110ace9e015d52b0783b7727298d34d" translate="yes" xml:space="preserve">
          <source>This works because the NCBI Python/Linux environment is so homogeneous,
but it does cause problems - these compiled items are linux- and
architecture-specific, but this doesn't tell Python's packaging system
about that.  So for example if you run &lt;code&gt;pip install applog&lt;/code&gt; on a Mac,
it will claim to succeed, but the library won't work.  See the next
section for how to do this in a more robust way.</source>
          <target state="translated">This works because the NCBI Python/Linux environment is so homogeneous, but it does cause problems - these compiled items are linux- and architecture-specific, but this doesn't tell Python's packaging system about that. So for example if you run &lt;code&gt;pip install applog&lt;/code&gt; on a Mac, it will claim to succeed, but the library won't work. See the next section for how to do this in a more robust way.</target>
        </trans-unit>
        <trans-unit id="20c3ca170e674a025cebcc829770d50592431b99" translate="yes" xml:space="preserve">
          <source>To explain that last line, it's &lt;em&gt;name-of-the-script&lt;/em&gt;&lt;code&gt;=&lt;/code&gt;&lt;em&gt;dotted-path-of-the-python-module&lt;/em&gt;&lt;code&gt;:&lt;/code&gt;&lt;em&gt;name-of-the-python-function&lt;/em&gt;. So
with this configuration, once the package is installed, setuptools
creates a script at &lt;code&gt;$VIRTUAL_ENV/bin/pull-sp-sub&lt;/code&gt; which activates the
virtualenv and then calls the &lt;code&gt;main&lt;/code&gt; function in the &lt;code&gt;pull_sp_sub&lt;/code&gt;
module.</source>
          <target state="translated">To explain that last line, it's &lt;em&gt;name-of-the-script&lt;/em&gt; &lt;code&gt;=&lt;/code&gt; &lt;em&gt;dotted-path-of-the-python-module&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;name-of-the-python-function&lt;/em&gt;. So with this configuration, once the package is installed, setuptools creates a script at &lt;code&gt;$VIRTUAL_ENV/bin/pull-sp-sub&lt;/code&gt; which activates the virtualenv and then calls the &lt;code&gt;main&lt;/code&gt; function in the &lt;code&gt;pull_sp_sub&lt;/code&gt; module.</target>
        </trans-unit>
        <trans-unit id="d56269ed5a45f63e774189fe23022ecdca01d755" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;source env/bin/activate&lt;/code&gt;, this does not change the &lt;code&gt;$PATH&lt;/code&gt;
or set &lt;code&gt;$VIRTUAL_ENV&lt;/code&gt;, so there are a few rare circumstances where
it's not good enough: if your script needs to start another script
using &lt;code&gt;subprocess&lt;/code&gt; or &lt;code&gt;popen&lt;/code&gt;, or if it tries to access data using a
path relative to &lt;code&gt;$VIRTUAL_ENV&lt;/code&gt;. Take a look at
&lt;code&gt;env/bin/activate_this.py&lt;/code&gt; if you encounter this problem.</source>
          <target state="translated">Unlike &lt;code&gt;source env/bin/activate&lt;/code&gt; , this does not change the &lt;code&gt;$PATH&lt;/code&gt; or set &lt;code&gt;$VIRTUAL_ENV&lt;/code&gt; , so there are a few rare circumstances where it's not good enough: if your script needs to start another script using &lt;code&gt;subprocess&lt;/code&gt; or &lt;code&gt;popen&lt;/code&gt; , or if it tries to access data using a path relative to &lt;code&gt;$VIRTUAL_ENV&lt;/code&gt; . Take a look at &lt;code&gt;env/bin/activate_this.py&lt;/code&gt; if you encounter this problem.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="54b60bd90524550d59d614974c14450b150a103f" translate="yes" xml:space="preserve">
          <source>Use value specified in &lt;code&gt;value&lt;/code&gt; (it's required when this strategy is
used) under &lt;code&gt;auto-version&lt;/code&gt; section in &lt;code&gt;setup.cfg&lt;/code&gt;:</source>
          <target state="translated">Use value specified in &lt;code&gt;value&lt;/code&gt; (it's required when this strategy is used) under &lt;code&gt;auto-version&lt;/code&gt; section in &lt;code&gt;setup.cfg&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e7d9663d25609da9b3f766d2175737eef7109a6b" translate="yes" xml:space="preserve">
          <source>Versioning strategy can be selected using &lt;code&gt;type&lt;/code&gt; field under
&lt;code&gt;auto-version&lt;/code&gt; section within &lt;code&gt;setup.cfg&lt;/code&gt;. The default is:</source>
          <target state="translated">Versioning strategy can be selected using &lt;code&gt;type&lt;/code&gt; field under &lt;code&gt;auto-version&lt;/code&gt; section within &lt;code&gt;setup.cfg&lt;/code&gt; . The default is:</target>
        </trans-unit>
        <trans-unit id="879366d66d34f1ab3c05fc8f3af6fec705b858c3" translate="yes" xml:space="preserve">
          <source>When enabled and no packages provided in &lt;code&gt;setup.cfg&lt;/code&gt; through &lt;code&gt;packages&lt;/code&gt;
option under &lt;code&gt;files&lt;/code&gt; section will try to automatically find out all
packages in current dir recursively.</source>
          <target state="translated">When enabled and no packages provided in &lt;code&gt;setup.cfg&lt;/code&gt; through &lt;code&gt;packages&lt;/code&gt; option under &lt;code&gt;files&lt;/code&gt; section will try to automatically find out all packages in current dir recursively.</target>
        </trans-unit>
        <trans-unit id="7c8a96829e54b9cca20c7d317827bf36a657a063" translate="yes" xml:space="preserve">
          <source>When enabled will fill &lt;code&gt;install_requires&lt;/code&gt; and &lt;code&gt;test_requires&lt;/code&gt; from
requirement files.</source>
          <target state="translated">When enabled will fill &lt;code&gt;install_requires&lt;/code&gt; and &lt;code&gt;test_requires&lt;/code&gt; from requirement files.</target>
        </trans-unit>
        <trans-unit id="af150595864d4515fe030a5104f0b404e0449152" translate="yes" xml:space="preserve">
          <source>When enabled will fill out &lt;code&gt;long_description&lt;/code&gt; for package from a readme.</source>
          <target state="translated">When enabled will fill out &lt;code&gt;long_description&lt;/code&gt; for package from a readme.</target>
        </trans-unit>
        <trans-unit id="d3d7ee3502e7411f3a188d2cb23aca7f0c5b8bbc" translate="yes" xml:space="preserve">
          <source>When enabled will include the license file into the distribution.</source>
          <target state="translated">When enabled will include the license file into the distribution.</target>
        </trans-unit>
        <trans-unit id="5d17876fa36e3b302269e4c5f3796c7adf7024af" translate="yes" xml:space="preserve">
          <source>When enabled, &lt;code&gt;auto-version&lt;/code&gt; will generate and set package version
according to selected versioning strategy.</source>
          <target state="translated">When enabled, &lt;code&gt;auto-version&lt;/code&gt; will generate and set package version according to selected versioning strategy.</target>
        </trans-unit>
        <trans-unit id="3c533787523132564edfff88c7f34a873f6e0ba5" translate="yes" xml:space="preserve">
          <source>When enabled, adds a number of additional options to 'metadata' section.</source>
          <target state="translated">When enabled, adds a number of additional options to 'metadata' section.</target>
        </trans-unit>
        <trans-unit id="24fe26b20b93d5e2d52c8447dad09538bedfd161" translate="yes" xml:space="preserve">
          <source>When enabled, the &lt;code&gt;python setup.py test&lt;/code&gt; is equal to running:</source>
          <target state="translated">When enabled, the &lt;code&gt;python setup.py test&lt;/code&gt; is equal to running:</target>
        </trans-unit>
        <trans-unit id="6d99d1c91be667d8088a1bfa500aaf9621530eab" translate="yes" xml:space="preserve">
          <source>You can also place files relative to the virtualenv, rather than inside
the package hierarchy (which would be in
&lt;code&gt;virtualenv/lib/python*/site-packages/something&lt;/code&gt;). This is often used
for things like static files in a Django project, so that they are easy
to find for an external web server. The syntax for this is:</source>
          <target state="translated">You can also place files relative to the virtualenv, rather than inside the package hierarchy (which would be in &lt;code&gt;virtualenv/lib/python*/site-packages/something&lt;/code&gt; ). This is often used for things like static files in a Django project, so that they are easy to find for an external web server. The syntax for this is:</target>
        </trans-unit>
        <trans-unit id="a61dbb11a5af34f618aafb9d260c4699867baaae" translate="yes" xml:space="preserve">
          <source>You can pass additional parameters to the underlying test framework with
'-a' or '--additional-test-args='.</source>
          <target state="translated">You can pass additional parameters to the underlying test framework with '-a' or '--additional-test-args='.</target>
        </trans-unit>
        <trans-unit id="c663c97bdbb42b54f54bcf8d5b4d7614ab6c2698" translate="yes" xml:space="preserve">
          <source>You can turn off the &lt;code&gt;auto-package-data&lt;/code&gt; facility if you &lt;strong&gt;don't&lt;/strong&gt; want this
file inclusion mechanism to happen:</source>
          <target state="translated">You can turn off the &lt;code&gt;auto-package-data&lt;/code&gt; facility if you &lt;strong&gt;don't&lt;/strong&gt; want this file inclusion mechanism to happen:</target>
        </trans-unit>
        <trans-unit id="9886c8e3d92087abce6fed0c7d88609dc125c0bc" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;output&lt;/code&gt; field to ask PacKit to write generated version
value into specified filename. The specified filename do not need to
exist but the parent directories should exist. Provided path should
always use forward slashes.</source>
          <target state="translated">You can use &lt;code&gt;output&lt;/code&gt; field to ask PacKit to write generated version value into specified filename. The specified filename do not need to exist but the parent directories should exist. Provided path should always use forward slashes.</target>
        </trans-unit>
        <trans-unit id="16918b1f8209c04e08b8c0c858483ce69a22c736" translate="yes" xml:space="preserve">
          <source>auto-dependencies</source>
          <target state="translated">auto-dependencies</target>
        </trans-unit>
        <trans-unit id="0ee20445d2a6e47215647584676545e3143ec881" translate="yes" xml:space="preserve">
          <source>auto-description</source>
          <target state="translated">auto-description</target>
        </trans-unit>
        <trans-unit id="643099908c9f0d5cafbde895a90752a9e0b0f2ae" translate="yes" xml:space="preserve">
          <source>auto-extra-meta</source>
          <target state="translated">auto-extra-meta</target>
        </trans-unit>
        <trans-unit id="02917a11ee29cc008a4089341656e1d73cd013fb" translate="yes" xml:space="preserve">
          <source>auto-license</source>
          <target state="translated">auto-license</target>
        </trans-unit>
        <trans-unit id="45f4a0abddce93fdf1f34d58889743756407ab57" translate="yes" xml:space="preserve">
          <source>auto-package-data</source>
          <target state="translated">auto-package-data</target>
        </trans-unit>
        <trans-unit id="ba01bf4ff69fae7b6b68a1d940eb872130bdc14d" translate="yes" xml:space="preserve">
          <source>auto-packages</source>
          <target state="translated">auto-packages</target>
        </trans-unit>
        <trans-unit id="df7dca8468cb91540493349a0ee995ac5ed32201" translate="yes" xml:space="preserve">
          <source>auto-tests</source>
          <target state="translated">auto-tests</target>
        </trans-unit>
        <trans-unit id="8c0f6c0664d352ed59a30a751e21e1ab7ee54f0e" translate="yes" xml:space="preserve">
          <source>auto-version</source>
          <target state="translated">auto-version</target>
        </trans-unit>
        <trans-unit id="46e2bfdf35ce8caa4b542110e7ed030b6b9fb042" translate="yes" xml:space="preserve">
          <source>changelog</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="6288c74c2945ac771cee3a87e5544b41d367921b" translate="yes" xml:space="preserve">
          <source>composite</source>
          <target state="translated">합성물</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">파일</target>
        </trans-unit>
        <trans-unit id="e8a44be09de3e76e2464de157af6905b92cec3a4" translate="yes" xml:space="preserve">
          <source>find_links</source>
          <target state="translated">find_links</target>
        </trans-unit>
        <trans-unit id="7bc555991dbab41aa198fbd77899d49a277d4d6d" translate="yes" xml:space="preserve">
          <source>fixed</source>
          <target state="translated">fixed</target>
        </trans-unit>
        <trans-unit id="bba4417e3ed1742f1a717f2dd021af55ee1e0b40" translate="yes" xml:space="preserve">
          <source>git-pep440</source>
          <target state="translated">git-pep440</target>
        </trans-unit>
        <trans-unit id="00b41c1a0088d5bfda88e62dc9363d26b4a57478" translate="yes" xml:space="preserve">
          <source>index_url</source>
          <target state="translated">index_url</target>
        </trans-unit>
        <trans-unit id="23457129b871d690a3b4d86a51ded0c27ba29a9c" translate="yes" xml:space="preserve">
          <source>license</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="e1df22b5f89d1dd6b54ebe66ca1eb49e9a242b90" translate="yes" xml:space="preserve">
          <source>open for extension</source>
          <target state="translated">open for extension</target>
        </trans-unit>
        <trans-unit id="f78a71af8bbf8cc2f6f313549d4da14bd3771359" translate="yes" xml:space="preserve">
          <source>readme</source>
          <target state="translated">readme</target>
        </trans-unit>
        <trans-unit id="c229e002603cffe65db82056ec148e150c2867f7" translate="yes" xml:space="preserve">
          <source>reasonable defaults</source>
          <target state="translated">reasonable defaults</target>
        </trans-unit>
        <trans-unit id="ed2eb3742618bb10d3b2ba0231ab69fecc8d716b" translate="yes" xml:space="preserve">
          <source>requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="6677e5b20cf9a6b4fdd274b7bf994cc50b3d3bff" translate="yes" xml:space="preserve">
          <source>requirements-test</source>
          <target state="translated">requirements-test</target>
        </trans-unit>
        <trans-unit id="1b1969ab3ef0eadad749f6d16b24e15cac636490" translate="yes" xml:space="preserve">
          <source>requirements/base</source>
          <target state="translated">requirements/base</target>
        </trans-unit>
        <trans-unit id="bd39345aef2f07bbc1880d6e1000479d0ceee4b9" translate="yes" xml:space="preserve">
          <source>requirements/install</source>
          <target state="translated">requirements/install</target>
        </trans-unit>
        <trans-unit id="93dced93aaff6782f1b7bbcb769912f2aa49f458" translate="yes" xml:space="preserve">
          <source>requirements/main</source>
          <target state="translated">requirements/main</target>
        </trans-unit>
        <trans-unit id="4b95107eea4685759230e51e3ab4948ebc7b9e4f" translate="yes" xml:space="preserve">
          <source>requirements/prod</source>
          <target state="translated">requirements/prod</target>
        </trans-unit>
        <trans-unit id="db4712486408cb9eda0c9742bdf1445b54d38582" translate="yes" xml:space="preserve">
          <source>requirements/release</source>
          <target state="translated">requirements/release</target>
        </trans-unit>
        <trans-unit id="d4ec5427c1d45c0269986d4b233335144a94aa0c" translate="yes" xml:space="preserve">
          <source>requirements/test</source>
          <target state="translated">requirements/test</target>
        </trans-unit>
        <trans-unit id="228d11ca875bff5a1c3fd6d2e21791d6607d9612" translate="yes" xml:space="preserve">
          <source>requirements_test</source>
          <target state="translated">requirements_test</target>
        </trans-unit>
        <trans-unit id="d6e7cd005c0ada962cf1ca31f4b64e6f45e1f24b" translate="yes" xml:space="preserve">
          <source>requires</source>
          <target state="translated">필요</target>
        </trans-unit>
        <trans-unit id="ec122f54cf16a175b3e22979e240684f7734079a" translate="yes" xml:space="preserve">
          <source>shell</source>
          <target state="translated">껍질</target>
        </trans-unit>
        <trans-unit id="ee4099b276b665876e25c8e346872e9393778b04" translate="yes" xml:space="preserve">
          <source>simple declarative way to configure your package through &lt;code&gt;setup.cfg&lt;/code&gt;
following &lt;a href=&quot;http://alexis.notmyidea.org/distutils2/setupcfg.html&quot;&gt;distutils2 setup.cfg
syntax&lt;/a&gt;</source>
          <target state="translated">simple declarative way to configure your package through &lt;code&gt;setup.cfg&lt;/code&gt; following &lt;a href=&quot;http://alexis.notmyidea.org/distutils2/setupcfg.html&quot;&gt;distutils2 setup.cfg syntax&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9f838afa19892f6e2eb636ad9c402a464b92752" translate="yes" xml:space="preserve">
          <source>test-requirements</source>
          <target state="translated">test-requirements</target>
        </trans-unit>
        <trans-unit id="f6acdd16b6467e0898a8482933e1c0f7dcd5e4ff" translate="yes" xml:space="preserve">
          <source>test-requires</source>
          <target state="translated">test-requires</target>
        </trans-unit>
        <trans-unit id="0189b3c341fb875f975243e65361829718a515d1" translate="yes" xml:space="preserve">
          <source>test_requirements</source>
          <target state="translated">test_requirements</target>
        </trans-unit>
        <trans-unit id="fae84b649a33f32904bc9c55277bba54d8811b21" translate="yes" xml:space="preserve">
          <source>test_requires</source>
          <target state="translated">test_requires</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
