<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/mplfinance/">
    <body>
      <group id="mplfinance">
        <trans-unit id="5953b919692b2f8cac6a6f55d81e6972a1bf7b9e" translate="yes" xml:space="preserve">
          <source>2019-11-05 09:30:00</source>
          <target state="translated">2019-11-05 09:30:00</target>
        </trans-unit>
        <trans-unit id="4d2674431e216b7980accfa420de9467f9a7baa7" translate="yes" xml:space="preserve">
          <source>2019-11-05 09:31:00</source>
          <target state="translated">2019-11-05 09:31:00</target>
        </trans-unit>
        <trans-unit id="a3f7beb9629936ec740b4053fd80968a61562083" translate="yes" xml:space="preserve">
          <source>2019-11-05 09:32:00</source>
          <target state="translated">2019-11-05 09:32:00</target>
        </trans-unit>
        <trans-unit id="cc52ed1b3237033db7d168a33e945c67147a7e36" translate="yes" xml:space="preserve">
          <source>2019-11-08 15:57:00</source>
          <target state="translated">2019-11-08 15:57:00</target>
        </trans-unit>
        <trans-unit id="0093afebf4f296b81ec0564427ca2f8c97a4b98a" translate="yes" xml:space="preserve">
          <source>2019-11-08 15:58:00</source>
          <target state="translated">2019-11-08 15:58:00</target>
        </trans-unit>
        <trans-unit id="094526345e35a9fa5564e8da754c93bfb76188ad" translate="yes" xml:space="preserve">
          <source>2019-11-08 15:59:00</source>
          <target state="translated">2019-11-08 15:59:00</target>
        </trans-unit>
        <trans-unit id="ce449562885c5b9b6d6844e309845a95ede02496" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;More importantly, &lt;strong&gt;the new API automatically does the extra matplotlib work that the user previously had to do &quot;manually&quot; with the old API.&lt;/strong&gt;&lt;/em&gt;   (The old API is still available within this package; see below).</source>
          <target state="translated">&lt;em&gt;더 중요한 것은 &lt;strong&gt;새 API가 사용자가 이전 API로 &quot;수동으로&quot;수행해야했던 추가 matplotlib 작업을 자동으로 수행한다는 것입니다. &lt;/strong&gt;&lt;/em&gt; (이전 API는이 패키지 내에서 계속 사용할 수 있습니다. 아래 참조).</target>
        </trans-unit>
        <trans-unit id="2c7e30cfc7e98bd34538b9653664ce23e2632eac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#history&quot;&gt;Some Background History About This Package&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#history&quot;&gt;이 패키지에 대한 배경 역사&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dbb3238a6f12e043fa5bc8dba8c285ba519d5a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#newapi&quot;&gt;The New API&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#newapi&quot;&gt;새로운 API&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e8a50530cd0a19faeef746aac985f7cddb76246" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#oldapi&quot;&gt;Old API Availability&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#oldapi&quot;&gt;이전 API 가용성&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ab61f436359c6ec63aa6328f2305c214d1462f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#tutorials&quot;&gt;Tutorials&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#tutorials&quot;&gt;튜토리얼&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1ba5f550c5b2b91051656f459242016553ec9fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#usage&quot;&gt;기본 사용법&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="734ef3f6f541327947072970e0885818012dd4eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/addplot.ipynb&quot;&gt;Adding Your Own Technical Studies to Plots&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/addplot.ipynb&quot;&gt;플롯에 자체 기술 연구 추가&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c8b1c9858abe7ca932b87f0b9af958abd37814c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/price-movement_plots.ipynb&quot;&gt;Price-Movement Plots (Renko, P&amp;amp;F, etc)&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/price-movement_plots.ipynb&quot;&gt;가격 움직임 도표 (Renko, P &amp;amp; F 등)&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1499ed3b3d3d451f962279af17647f52aa367b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/savefig.ipynb&quot;&gt;Saving the Plot to a File&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/savefig.ipynb&quot;&gt;플롯을 파일에 저장&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2ca0397afa7c7eaa310d1581687d5f40e6e459a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/using_lines.ipynb&quot;&gt;Trends, Support, Resistance, and Trading Lines&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/using_lines.ipynb&quot;&gt;추세, 지원, 저항 및 거래선&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d64ebb75ccb1b82ccf59334059a1d116e564800" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/markdown/animation.md&quot;&gt;Animation/Updating your plots in realtime&lt;/a&gt;&lt;/strong&gt; (&lt;strong&gt;New: August 2020&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/markdown/animation.md&quot;&gt;실시간으로 플롯 애니메이션 / 업데이트&lt;/a&gt;&lt;/strong&gt; (&lt;strong&gt; 신규 : 2020 년 8 월&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="7a454c891f75198a33faffdea0b797da45183b83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/markdown/customization_and_styles.md&quot;&gt;Customizing the Appearance of Plots&lt;/a&gt;&lt;/strong&gt; (New features: June 2020)</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/markdown/customization_and_styles.md&quot;&gt;플롯 모양 사용자 지정&lt;/a&gt;&lt;/strong&gt; (새로운 기능 : 2020 년 6 월)</target>
        </trans-unit>
        <trans-unit id="7b7f4426412758e9f1c2f966d7c1d940c26a9a43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/markdown/subplots.md&quot;&gt;Subplots: Multiple Plots on a Single Figure&lt;/a&gt;&lt;/strong&gt; (&lt;strong&gt;New features: August 2020&lt;/strong&gt;)</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/markdown/subplots.md&quot;&gt;서브 플롯 : 단일 그림에 대한 다중 플롯&lt;/a&gt;&lt;/strong&gt; (&lt;strong&gt; 새로운 기능 : 2020 년 8 월&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="82afca57ec850501a1148d6ec530f349bdd10273" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With this new &lt;code&gt;mplfinance&lt;/code&gt; package installed, in addition to the new API, users can still access the old API&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;이 새로운 &lt;code&gt;mplfinance&lt;/code&gt; 패키지가 설치되면 새 API 외에도 사용자는 이전 API에 계속 액세스 할 수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8895c8e5b1e289619cbc2b4f89b1111e0ccb542a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;에서:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="680c416760fbabdcddbbb498e966dddc5ec737f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;to:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;에:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfba468c84069021eedc1512da7c826520c6d46b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;⇾ &lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/RELEASE_NOTES.md&quot;&gt;Latest Release Info&lt;/a&gt; ⇽&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;⇾ &lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/RELEASE_NOTES.md&quot;&gt;최신 출시 정보&lt;/a&gt; ⇽&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b8b5a75975b66b91e17cc3af083ee4c582e1900" translate="yes" xml:space="preserve">
          <source>Adj Close</source>
          <target state="translated">Adj 닫기</target>
        </trans-unit>
        <trans-unit id="f0b04d16bc53336ced4ea472fb1d44f413095e85" translate="yes" xml:space="preserve">
          <source>After importing mplfinance, plotting OHLC data is as simple as calling &lt;code&gt;mpf.plot()&lt;/code&gt; on the dataframe</source>
          <target state="translated">mplfinance를 가져온 후 OHLC 데이터 플로팅은 데이터 프레임에서 &lt;code&gt;mpf.plot()&lt;/code&gt; 을 호출하는 것만 큼 간단 합니다.</target>
        </trans-unit>
        <trans-unit id="0304c12e953ef600bdaa83d0f74c526dd8f9ef7e" translate="yes" xml:space="preserve">
          <source>Announcing Version 0.12.7</source>
          <target state="translated">버전 0.12.7 발표</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="cdcd832894acc3134d23a17c1f4a486c840567e5" translate="yes" xml:space="preserve">
          <source>Below: 4 days of intraday data with &lt;code&gt;show_nontrading=True&lt;/code&gt;</source>
          <target state="translated">아래 : &lt;code&gt;show_nontrading=True&lt;/code&gt; 인 4 일간의 일일 데이터</target>
        </trans-unit>
        <trans-unit id="5a9f5435c18ea080ff0dc9f963e7749bfb3ad0ba" translate="yes" xml:space="preserve">
          <source>Below: Daily data spanning across a year boundary automatically adds the &lt;em&gt;YEAR&lt;/em&gt; to the DATE format</source>
          <target state="translated">아래 : 연도 경계에 걸친 일일 데이터는 자동으로 DATE 형식에 &lt;em&gt;YEAR&lt;/em&gt; 을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="9c4b18600a50adbc0e5f7a85f3e26221702113ba" translate="yes" xml:space="preserve">
          <source>Below: the same 4 days of intraday data with &lt;code&gt;show_nontrading&lt;/code&gt; defaulted to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">아래 : &lt;code&gt;show_nontrading&lt;/code&gt; 이 기본값 인 &lt;code&gt;False&lt;/code&gt; 로 설정된 동일한 4 일의 일일 데이터 .</target>
        </trans-unit>
        <trans-unit id="bbfa773e5a63a5ea58c9b6207e608ca0120e592a" translate="yes" xml:space="preserve">
          <source>Close</source>
          <target state="translated">닫기</target>
        </trans-unit>
        <trans-unit id="210cfb58836b6a5515c039038265b85204137237" translate="yes" xml:space="preserve">
          <source>Contents and Tutorials</source>
          <target state="translated">내용 및 튜토리얼</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="6a3721b82e58c9ea61b4aa8c4f0bd5d19a18c826" translate="yes" xml:space="preserve">
          <source>Details on how to call the new API can be found below under &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#usage&quot;&gt;Basic Usage&lt;/a&gt;&lt;/strong&gt;, as well as in the jupyter notebooks in the &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/&quot;&gt;examples&lt;/a&gt;&lt;/strong&gt; folder.</source>
          <target state="translated">새 API를 호출하는 방법에 대한 자세한 내용은 아래의 &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance#usage&quot;&gt;기본 사용법&lt;/a&gt;&lt;/strong&gt; 및 &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/&quot;&gt;examples&lt;/a&gt;&lt;/strong&gt; 폴더 의 jupyter 노트북에서 확인할 수 &lt;strong&gt;있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f11403068562720290e71fa6390f1f0b3920b402" translate="yes" xml:space="preserve">
          <source>External Axes Mode and Animation Support.</source>
          <target state="translated">외부 축 모드 및 애니메이션 지원.</target>
        </trans-unit>
        <trans-unit id="6446b8e3e7f0ed05ac8a4b97021904edcc680916" translate="yes" xml:space="preserve">
          <source>For example, in the chart below, you can easily see weekends, as well as a gap at Thursday, November 28th for the U.S. Thanksgiving holiday.</source>
          <target state="translated">예를 들어, 아래 차트에서 주말과 미국 추수 감사절 휴일 인 11 월 28 일 목요일의 간격을 쉽게 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46346a246c7dc2829e91827c57ddcbb4cb91485a" translate="yes" xml:space="preserve">
          <source>For more examples of using mplfinance, please see the jupyter notebooks in the &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/&quot;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; directory.</source>
          <target state="translated">mplfinance 사용에 대한 더 많은 예제는 &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/blob/master/examples/&quot;&gt; &lt;code&gt;examples&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt; 디렉토리 의 jupyter 노트북을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1a5954a483f8f8b0207385095f74aeb409b3f80" translate="yes" xml:space="preserve">
          <source>High</source>
          <target state="translated">높은</target>
        </trans-unit>
        <trans-unit id="0440377337df59d0500b085b0b7d47889d901a4e" translate="yes" xml:space="preserve">
          <source>However, sometimes people like to see these gaps, so that they can tell, with a quick glance, where the weekends and holidays fall.</source>
          <target state="translated">그러나 때때로 사람들은 주말과 공휴일이 어디에 있는지 한눈에 알 수 있도록 이러한 간격을보고 싶어합니다.</target>
        </trans-unit>
        <trans-unit id="22bb4473553c8ff943415bf9ff41f937b7b455d8" translate="yes" xml:space="preserve">
          <source>I am very interested to hear from you regarding what you think of the new &lt;code&gt;mplfinance&lt;/code&gt;, plus any suggestions you may have for improvement.  You can reach me at &lt;strong&gt;&lt;a href=&quot;mailto:dgoldfarb.github@gmail.com&quot;&gt;dgoldfarb.github@gmail.com&lt;/a&gt;&lt;/strong&gt;  or, if you prefer, provide feedback or a ask question on our &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/issues/new/choose&quot;&gt;issues page.&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">새로운 &lt;code&gt;mplfinance&lt;/code&gt; 에 대한 귀하의 생각과 개선을위한 제안 사항에 대해 귀하의 의견을 듣고 싶습니다 . &lt;strong&gt;&lt;a href=&quot;mailto:dgoldfarb.github@gmail.com&quot;&gt;dgoldfarb.github@gmail.com으로&lt;/a&gt;&lt;/strong&gt; 저에게 &lt;strong&gt;연락&lt;/strong&gt; 하거나 원하는 경우 &lt;strong&gt;&lt;a href=&quot;https://github.com/matplotlib/mplfinance/issues/new/choose&quot;&gt;문제 페이지&lt;/a&gt;&lt;/strong&gt; 에서 피드백을 제공하거나 질문 할 수 &lt;strong&gt;있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5981b7d0e1c143716d518bd129b6516819e1e064" translate="yes" xml:space="preserve">
          <source>In the plot below, we see what an intraday plot looks like when we &lt;strong&gt;display non-trading time periods&lt;/strong&gt; with &lt;strong&gt;&lt;code&gt;show_nontrading=True&lt;/code&gt;&lt;/strong&gt; for intraday data spanning into two or more days.</source>
          <target state="translated">아래 플롯에서 2 일 이상에 걸쳐있는 일중 데이터에 대해 &lt;strong&gt; &lt;code&gt;show_nontrading=True&lt;/code&gt; &lt;/strong&gt; 로 &lt;strong&gt;비 거래 기간&lt;/strong&gt; 을 &lt;strong&gt;표시&lt;/strong&gt; 할 때 일중 플롯이 어떻게 보이는지 확인합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="9c1f7309e25ec5995bbccd033064b3faf06b4402" translate="yes" xml:space="preserve">
          <source>It is my intention to archive the &lt;code&gt;matplotlib/mpl-finance&lt;/code&gt; repository soon, and direct everyone to &lt;code&gt;matplotlib/mplfinance&lt;/code&gt;.  The main reason for the rename is to avoid confusion with the hyphen and the underscore: As it was, &lt;code&gt;mpl-finance&lt;/code&gt; was &lt;em&gt;installed with the hyphen, but imported with an underscore &lt;code&gt;mpl_finance&lt;/code&gt;.&lt;/em&gt;  Going forward it will be a simple matter of both installing and importing &lt;code&gt;mplfinance&lt;/code&gt;.</source>
          <target state="translated">곧 &lt;code&gt;matplotlib/mpl-finance&lt;/code&gt; 저장소 를 보관하고 모든 사람을 &lt;code&gt;matplotlib/mplfinance&lt;/code&gt; 로 안내 하는 것이 제 의도 입니다. 이름을 변경하는 주된 이유는 하이픈 및 밑줄과의 혼동을 피하기위한 것입니다. 그대로 &lt;code&gt;mpl-finance&lt;/code&gt; 는 &lt;em&gt;하이픈 &lt;code&gt;mpl_finance&lt;/code&gt; &lt;/em&gt; 으로 &lt;em&gt;설치되었지만 밑줄 &lt;/em&gt;&lt;em&gt;mpl_finance로&lt;/em&gt;&lt;em&gt; 가져 &lt;/em&gt;&lt;em&gt;왔습니다&lt;/em&gt;&lt;em&gt; . &lt;/em&gt; 앞으로는 &lt;code&gt;mplfinance&lt;/code&gt; 를 설치하고 가져 오는 간단한 문제가 될 것입니다 .</target>
        </trans-unit>
        <trans-unit id="a124947cbd2d1d92b47e027274c3269ff0c7a84b" translate="yes" xml:space="preserve">
          <source>Low</source>
          <target state="translated">낮은</target>
        </trans-unit>
        <trans-unit id="73fb41559fd12edbbfa06e8a88f12c8a9183b7e8" translate="yes" xml:space="preserve">
          <source>My name is Daniel Goldfarb.  In November 2019, I became the maintainer of &lt;code&gt;matplotlib/mpl-finance&lt;/code&gt;.  That module is being deprecated in favor of the current &lt;code&gt;matplotlib/mplfinance&lt;/code&gt;.  The old &lt;code&gt;mpl-finance&lt;/code&gt; consisted of code extracted from the deprecated &lt;code&gt;matplotlib.finance&lt;/code&gt; module along with a few examples of usage.  It has been mostly un-maintained for the past three years.</source>
          <target state="translated">제 이름은 Daniel Goldfarb입니다. 2019 년 11 월에 저는 &lt;code&gt;matplotlib/mpl-finance&lt;/code&gt; 의 관리자가되었습니다 . 해당 모듈은 현재 &lt;code&gt;matplotlib/mplfinance&lt;/code&gt; 대신 사용되지 않습니다 . 이전 &lt;code&gt;mpl-finance&lt;/code&gt; 는 사용 의 몇 가지 예와 함께 더 이상 사용되지 않는 &lt;code&gt;matplotlib.finance&lt;/code&gt; 모듈 에서 추출 된 코드로 구성되었습니다 . 지난 3 년 동안 대부분 유지 관리되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4e152f5b7b869efb47855648976d0fb64212301f" translate="yes" xml:space="preserve">
          <source>Non-trading days can be displayed with the &lt;code&gt;show_nontrading&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;show_nontrading&lt;/code&gt; 키워드로 비 거래일을 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f55dec05886ecb7bdeea076a57c89c4486f3d1e6" translate="yes" xml:space="preserve">
          <source>Notice, in the above chart, there are no gaps along the x-coordinate, even though there are days on which there was no trading.  &lt;em&gt;&lt;strong&gt;Non-trading days are simply not shown&lt;/strong&gt;&lt;/em&gt; (since there are no prices for those days).</source>
          <target state="translated">위의 차트에서 거래가 없었던 날이 있더라도 x 좌표를 따라 틈이 없습니다. &lt;em&gt;&lt;strong&gt;비 거래일은 단순히 표시되지 않습니다&lt;/strong&gt;&lt;/em&gt; (당일 가격이 없기 때문에).</target>
        </trans-unit>
        <trans-unit id="cf9b77061f7b3126b49d50a6fa68f7ca8c26b7a3" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">열다</target>
        </trans-unit>
        <trans-unit id="ef0ce2e68c0e86a475c09f222ea2bcfc5f304205" translate="yes" xml:space="preserve">
          <source>Some History</source>
          <target state="translated">일부 역사</target>
        </trans-unit>
        <trans-unit id="88d7f7c0be6bb5ea541e44764d82f6e960f4d7ec" translate="yes" xml:space="preserve">
          <source>Start with a Pandas DataFrame containing OHLC data.  For example,</source>
          <target state="translated">OHLC 데이터가 포함 된 Pandas DataFrame으로 시작합니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="0407764836f04bb5e78b85417bac8e9a075a6f40" translate="yes" xml:space="preserve">
          <source>The &quot;time-interpretation&quot; of the &lt;code&gt;mav&lt;/code&gt; integers depends on the frequency of the data, because the mav integers are the &lt;em&gt;number of data points&lt;/em&gt; used in the Moving Average (not the number of days or minutes, etc).  Notice above that for intraday data the x-axis automatically displays TIME &lt;em&gt;instead of&lt;/em&gt; date.  Below we see that if the intraday data spans into two (or more) trading days the x-axis automatically displays &lt;em&gt;BOTH&lt;/em&gt; TIME and DATE</source>
          <target state="translated">의 &quot;시간-해석&quot; &lt;code&gt;mav&lt;/code&gt; MAV 정수가 있기 때문에 정수는 데이터의 주파수에 따라 &lt;em&gt;데이터 포인트의 번호&lt;/em&gt; 이동 평균에 사용 (안 등 일 분의 수). 위의 일중 데이터의 경우 x 축 &lt;em&gt;에&lt;/em&gt; 날짜 &lt;em&gt;대신&lt;/em&gt; TIME이 자동으로 표시됩니다 . 아래에서 일중 데이터가 2 일 (또는 그 이상)의 거래일에 걸쳐있는 경우 x 축은 자동으로 시간과 날짜를 &lt;em&gt;모두&lt;/em&gt; 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1476ed172cfddbf34dd861f61583137e9893bd6d" translate="yes" xml:space="preserve">
          <source>The New API</source>
          <target state="translated">새로운 API</target>
        </trans-unit>
        <trans-unit id="cec42aaa1c212ab22c53744d99c5b9ce12a5e476" translate="yes" xml:space="preserve">
          <source>The above dataframe contains Open,High,Low,Close data at 1 minute intervervals for the S&amp;amp;P 500 stock index for November 5, 6, 7 and 8, 2019.  Let's look at the last hour of trading on November 6th, with a 7 minute and 12 minute moving average.</source>
          <target state="translated">위의 데이터 프레임에는 2019 년 11 월 5 일, 6 일, 7 일, 8 일의 S &amp;amp; P 500 주가 지수에 대한 1 분 간격의 Open, High, Low, Close 데이터가 포함되어 있습니다. 11 월 6 일의 마지막 거래 시간을 7 분으로 살펴 보겠습니다. 그리고 12 분 이동 평균.</target>
        </trans-unit>
        <trans-unit id="a6a766dc01c7152d8e730aa1646c85f561901023" translate="yes" xml:space="preserve">
          <source>The conventional way to import the new API is as follows:</source>
          <target state="translated">새 API를 가져 오는 일반적인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="afc0797fe3155c4ed36fc92518157e0ee25c04fa" translate="yes" xml:space="preserve">
          <source>The default plot type, as you can see above, is &lt;code&gt;'ohlc'&lt;/code&gt;.  Other plot types can be specified with the keyword argument &lt;code&gt;type&lt;/code&gt;, for example, &lt;code&gt;type='candle'&lt;/code&gt;, &lt;code&gt;type='line'&lt;/code&gt;, &lt;code&gt;type='renko'&lt;/code&gt;, or &lt;code&gt;type='pnf'&lt;/code&gt;</source>
          <target state="translated">위에서 볼 수 있듯이 기본 플롯 유형은 &lt;code&gt;'ohlc'&lt;/code&gt; 입니다. 다른 플롯 유형은 키워드 argument &lt;code&gt;type&lt;/code&gt; 으로 지정할 수 있습니다 ( 예 : &lt;code&gt;type='candle'&lt;/code&gt; , &lt;code&gt;type='line'&lt;/code&gt; , &lt;code&gt;type='renko'&lt;/code&gt; , &lt;code&gt;type='pnf'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cf25d259024a349598c0873e398178cf87220a24" translate="yes" xml:space="preserve">
          <source>The most common usage is then to call</source>
          <target state="translated">가장 일반적인 사용법은 다음을 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="053b5f0c81b4be6485b058c50820fc0de9e5acf7" translate="yes" xml:space="preserve">
          <source>The old API may be removed some day, but for the foreseeable future we will keep it ... at least until we are very confident that users of the old API can accomplish the same things with the new API.</source>
          <target state="translated">이전 API는 언젠가 제거 될 수 있지만 가까운 장래에 우리는 그것을 유지할 것입니다 ... 적어도 이전 API 사용자가 새 API로 동일한 작업을 수행 할 수 있다는 확신이있을 때까지 유지합니다.</target>
        </trans-unit>
        <trans-unit id="e67f71e5d1f00ceb5638636b4ecdfb7dbde7e50f" translate="yes" xml:space="preserve">
          <source>This repository, &lt;code&gt;matplotlib/mplfinance&lt;/code&gt;, contains a new &lt;strong&gt;matplotlib finance&lt;/strong&gt; API that makes it easier to create financial plots.  It interfaces nicely with &lt;strong&gt;Pandas&lt;/strong&gt; DataFrames.</source>
          <target state="translated">이 저장소 &lt;code&gt;matplotlib/mplfinance&lt;/code&gt; 에는 재무 도표를 더 쉽게 생성 할 수 있는 새로운 &lt;strong&gt;matplotlib 금융&lt;/strong&gt; API가 포함되어 있습니다 . &lt;strong&gt;Pandas&lt;/strong&gt; DataFrames 와 잘 어울립니다.</target>
        </trans-unit>
        <trans-unit id="da2064f54454a20e1ce918b288d583a1c3d69228" translate="yes" xml:space="preserve">
          <source>To access the old API with the new &lt;code&gt;mplfinance&lt;/code&gt; package installed, change the old import statments</source>
          <target state="translated">새 &lt;code&gt;mplfinance&lt;/code&gt; 패키지가 설치된 이전 API에 액세스하려면 이전 가져 오기 구문을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="430915133271fdffcd1273b539fc469f946e2fdc" translate="yes" xml:space="preserve">
          <source>Utilities for the visualization, and visual analysis, of financial data</source>
          <target state="translated">재무 데이터의 시각화 및 시각적 분석을위한 유틸리티</target>
        </trans-unit>
        <trans-unit id="3b18e8e332500f3dfedb21b0aed686cfa9832cfe" translate="yes" xml:space="preserve">
          <source>Volume</source>
          <target state="translated">음량</target>
        </trans-unit>
        <trans-unit id="cec589a1ef44735788087b2ed94827e03b658691" translate="yes" xml:space="preserve">
          <source>We can also display &lt;code&gt;Volume&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Volume&lt;/code&gt; 도 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46c4c51f7bf32fea414444bc3265fffd3db74f73" translate="yes" xml:space="preserve">
          <source>We can also plot intraday data:</source>
          <target state="translated">일중 데이터를 플로팅 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf9179a6f54a4ad9297a325f69680eea32fc73f6" translate="yes" xml:space="preserve">
          <source>We can also plot moving averages with the &lt;code&gt;mav&lt;/code&gt; keyword</source>
          <target state="translated">&lt;code&gt;mav&lt;/code&gt; 키워드를 사용하여 이동 평균을 그릴 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4c91e8699ed50c78635a8cf024b3ec9d7d1df65" translate="yes" xml:space="preserve">
          <source>matplotlib utilities for the visualization, and visual analysis, of financial data</source>
          <target state="translated">재무 데이터의 시각화 및 시각적 분석을위한 matplotlib 유틸리티</target>
        </trans-unit>
        <trans-unit id="8c02afb07f849c6db69d1b51a7fcbed7b8236236" translate="yes" xml:space="preserve">
          <source>mplfinance</source>
          <target state="translated">mplfinance</target>
        </trans-unit>
        <trans-unit id="1f1795eca9c06c51a72ae1f874a87ac11bb53c79" translate="yes" xml:space="preserve">
          <source>mplfinance requires &lt;a href=&quot;https://pypi.org/project/matplotlib/&quot;&gt;matplotlib&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/project/pandas/&quot;&gt;pandas&lt;/a&gt;</source>
          <target state="translated">mplfinance에는 &lt;a href=&quot;https://pypi.org/project/matplotlib/&quot;&gt;matplotlib&lt;/a&gt; 및 &lt;a href=&quot;https://pypi.org/project/pandas/&quot;&gt;pandas&lt;/a&gt; 가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b19ad35d5fcede7384362c64460e3b0734e46d82" translate="yes" xml:space="preserve">
          <source>old API availability</source>
          <target state="translated">이전 API 가용성</target>
        </trans-unit>
        <trans-unit id="471d2b22ed02c2bd5c517f9ae21024fbb17de9eb" translate="yes" xml:space="preserve">
          <source>use a scalar for a single moving average</source>
          <target state="translated">단일 이동 평균에 스칼라 사용</target>
        </trans-unit>
        <trans-unit id="0f2aba37d1f269846b16210479e11779cfee8ea9" translate="yes" xml:space="preserve">
          <source>use a tuple or list of integers for multiple moving averages</source>
          <target state="translated">다중 이동 평균을 위해 튜플 또는 정수 목록 사용</target>
        </trans-unit>
        <trans-unit id="934bf17a93969492330fe092b7a53d569fdca615" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;method&amp;gt;&lt;/code&gt; indicates the method you want to import, for example:</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;method&amp;gt;&lt;/code&gt; 는 가져올 방법을 나타냅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e2aa855bae0974148fa147e8191ca2e60ff6a13" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;data&lt;/code&gt; is a &lt;code&gt;Pandas DataFrame&lt;/code&gt; object containing Open, High, Low and Close data, with a Pandas &lt;code&gt;DatetimeIndex&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;data&lt;/code&gt; 는 Pandas &lt;code&gt;DatetimeIndex&lt;/code&gt; 와 함께 Open, High, Low 및 Close 데이터를 포함 하는 &lt;code&gt;Pandas DataFrame&lt;/code&gt; 객체 입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
