<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/lifx-control-panel/">
    <body>
      <group id="lifx-control-panel">
        <trans-unit id="29365c4a0db8030ca9ce4f6f710b1a7eae0b6031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIFX-Control-Panel-demo.exe&lt;/code&gt; features several &quot;Dummy&quot; bulbs in addition to any real devices on your network. You can use
this distribution to test the software on computers that do not have a LIFX device on the LAN.</source>
          <target state="translated">&lt;code&gt;LIFX-Control-Panel-demo.exe&lt;/code&gt; 는 네트워크의 실제 장치 외에도 여러 &quot;더미&quot;전구를 제공합니다. 이 배포를 사용하여 LAN에 LIFX 장치가없는 컴퓨터에서 소프트웨어를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f5f6acb5e62342068e8cce3d8e91311b4b22e28" translate="yes" xml:space="preserve">
          <source>An open source application for controlling your LIFX brand lights</source>
          <target state="translated">LIFX 브랜드 조명을 제어하기위한 오픈 소스 애플리케이션</target>
        </trans-unit>
        <trans-unit id="7fb67cb28f54e8f7a3d0c29bda7730d1b21bce72" translate="yes" xml:space="preserve">
          <source>Average Screen Color</source>
          <target state="translated">평균 화면 색상</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">건물</target>
        </trans-unit>
        <trans-unit id="c9590767d31359b1c3b09132097ec289afc7792b" translate="yes" xml:space="preserve">
          <source>Color Averaging Demo (Click for Video):</source>
          <target state="translated">색상 평균화 데모 (동영상 클릭) :</target>
        </trans-unit>
        <trans-unit id="65fc24eabc765fb8da0564892f97c317f52ecba8" translate="yes" xml:space="preserve">
          <source>Color Eyedropper</source>
          <target state="translated">컬러 스포이드</target>
        </trans-unit>
        <trans-unit id="e14891e6fb781e3db955d1494b841a6c2661143b" translate="yes" xml:space="preserve">
          <source>Custom color palette</source>
          <target state="translated">커스텀 컬러 팔레트</target>
        </trans-unit>
        <trans-unit id="95345e276ffbb748fffc3a9b8c9322bd0b489d39" translate="yes" xml:space="preserve">
          <source>Donate</source>
          <target state="translated">기부</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">피드백</target>
        </trans-unit>
        <trans-unit id="4e380dbda205d475865e13cfb6753fd62b4506eb" translate="yes" xml:space="preserve">
          <source>Go over to &lt;a href=&quot;https://github.com/samclane/LIFX-Control-Panel/releases&quot;&gt;releases&lt;/a&gt; and download the latest &lt;code&gt;.exe&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/samclane/LIFX-Control-Panel/releases&quot;&gt;릴리스로&lt;/a&gt; 이동 하여 최신 &lt;code&gt;.exe&lt;/code&gt; 파일을 다운로드 하십시오.</target>
        </trans-unit>
        <trans-unit id="1ff996382d9ece97f09eaa556c8adc662fedf959" translate="yes" xml:space="preserve">
          <source>Head on over to &lt;a href=&quot;https://sourceforge.net/projects/lifx-control-panel/&quot;&gt;SourceForge&lt;/a&gt;</source>
          <target state="translated">에 이상에 머리 &lt;a href=&quot;https://sourceforge.net/projects/lifx-control-panel/&quot;&gt;소스 포지 (SourceForge)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c7ede504f29e09e0c4e9d4663195b4fd38c37fe" translate="yes" xml:space="preserve">
          <source>I have currently only tested on the following operating systems:</source>
          <target state="translated">현재 다음 운영 체제에서만 테스트했습니다.</target>
        </trans-unit>
        <trans-unit id="a9725e84530455518c4e0eb0600565c84060ac54" translate="yes" xml:space="preserve">
          <source>If you enjoy LIFX-Control-Panel, please Like and leave a review on &lt;a href=&quot;https://alternativeto.net/software/lifx-control-panel/&quot;&gt;AlternativeTo&lt;/a&gt;.</source>
          <target state="translated">LIFX-Control-Panel이 마음에 들면 좋아요를 누르고 &lt;a href=&quot;https://alternativeto.net/software/lifx-control-panel/&quot;&gt;AlternativeTo에&lt;/a&gt; 리뷰를 남겨주세요 .</target>
        </trans-unit>
        <trans-unit id="511196ade62a2596461ab6aea346de8bd4da1573" translate="yes" xml:space="preserve">
          <source>If you have any comments or concerns, please feel free to make a post on the &lt;a href=&quot;https://github.com/samclane/LIFX-Control-Panel/issues&quot;&gt;Issues page&lt;/a&gt;.</source>
          <target state="translated">의견이나 우려 사항이 있으시면 언제든지 &lt;a href=&quot;https://github.com/samclane/LIFX-Control-Panel/issues&quot;&gt;문제 페이지&lt;/a&gt; 에 게시물을 작성해주십시오 .</target>
        </trans-unit>
        <trans-unit id="15f8aa69f4a24a6ba7c3f621cce366c991920738" translate="yes" xml:space="preserve">
          <source>If you need help using PyInstaller, more instructions are located &lt;a href=&quot;https://pythonhosted.org/PyInstaller/usage.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">PyInstaller 사용에 도움이 필요한 경우 &lt;a href=&quot;https://pythonhosted.org/PyInstaller/usage.html&quot;&gt;여기에&lt;/a&gt; 자세한 지침이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2cc8ec97bf0278d6ea5a1e7e27f117cb103c0fd7" translate="yes" xml:space="preserve">
          <source>Keybindings</source>
          <target state="translated">키 바인딩</target>
        </trans-unit>
        <trans-unit id="392e3719d204259072e317a2b069357f80f4a40c" translate="yes" xml:space="preserve">
          <source>LIFX A13 Firmware v2.76</source>
          <target state="translated">LIFX A13 펌웨어 v2.76</target>
        </trans-unit>
        <trans-unit id="081c85a168edffa31b0368a2081b914a948d4038" translate="yes" xml:space="preserve">
          <source>LIFX A19 Firmware v2.76</source>
          <target state="translated">LIFX A19 펌웨어 v2.76</target>
        </trans-unit>
        <trans-unit id="a776ae437f0482c4dfc5b9aa5fd0ee27c57829fd" translate="yes" xml:space="preserve">
          <source>LIFX Beam Support Coming Soon!</source>
          <target state="translated">LIFX 빔 지원이 곧 제공됩니다!</target>
        </trans-unit>
        <trans-unit id="cbbd26230c735bb860328646333b90e094d85d63" translate="yes" xml:space="preserve">
          <source>LIFX Mini White Firmware v3.41</source>
          <target state="translated">LIFX 미니 화이트 펌웨어 v3.41</target>
        </trans-unit>
        <trans-unit id="6cc6928c2f12a53c722a3a62fd34941f8c2ee27d" translate="yes" xml:space="preserve">
          <source>LIFX Z   Firmware v1.22</source>
          <target state="translated">LIFX Z 펌웨어 v1.22</target>
        </trans-unit>
        <trans-unit id="6a27d733fe8353fd2277f3fab3f6a6cc8bd89f84" translate="yes" xml:space="preserve">
          <source>LIFX-Control-Panel</source>
          <target state="translated">LIFX- 제어판</target>
        </trans-unit>
        <trans-unit id="330e5ef85f2dc696eb0c53b3da1b9293226e6b28" translate="yes" xml:space="preserve">
          <source>LIFX-Control-Panel is an open source application for controlling your LIFX brand lights. It integrates simple features,
such as monitoring and changing bulb color, with more advanced ones, like:</source>
          <target state="translated">LIFX-Control-Panel은 LIFX 브랜드 조명을 제어하기위한 오픈 소스 애플리케이션입니다. 전구 색상 모니터링 및 변경과 같은 간단한 기능을 다음과 같은 고급 기능과 통합합니다.</target>
        </trans-unit>
        <trans-unit id="f13a3e7c9db9fb334e6de96fb7f62406933a2487" translate="yes" xml:space="preserve">
          <source>LIFX-Control-Panel uses PyInstaller. After downloading the repository, open a command window in the &lt;code&gt;LIFX-Control-Panel&lt;/code&gt;
directory, and run &lt;code&gt;pyinstaller __main__.pyw&lt;/code&gt;. This should generate the necessary file structure to build the project.
Note: Delete &lt;code&gt;gui.spec&lt;/code&gt;, we will be using one of the following &lt;code&gt;.spec&lt;/code&gt; files included in the repository:</source>
          <target state="translated">LIFX-Control-Panel은 PyInstaller를 사용합니다. 저장소를 다운로드 한 후 &lt;code&gt;LIFX-Control-Panel&lt;/code&gt; 디렉토리 에서 명령 창을 열고 &lt;code&gt;pyinstaller __main__.pyw&lt;/code&gt; 실행 하십시오 . 이렇게하면 프로젝트를 빌드하는 데 필요한 파일 구조가 생성됩니다. 참고 : &lt;code&gt;gui.spec&lt;/code&gt; 을 삭제하십시오. 저장소에 포함 된 다음 &lt;code&gt;.spec&lt;/code&gt; 파일 중 하나를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="6d4a0a6597963279df34638454e61aa7fa4b0243" translate="yes" xml:space="preserve">
          <source>LIFX-Control-Panel will always be free and open source. However, if you appreciate the work I'm doing and would like to
contribute financially, you can donate below. Thanks for your support!</source>
          <target state="translated">LIFX-Control-Panel은 항상 무료이며 오픈 소스입니다. 하지만 제가하는 일에 감사하고 재정적으로 기여하고 싶다면 아래에서 기부 할 수 있습니다. 귀하의 지원에 감사드립니다!</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="b1b0fb7d371795750a4128321e4af1836261431a" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;pip install lifx-control-panel&lt;/code&gt;. To start run &lt;code&gt;python -m lifx_control_panel&lt;/code&gt;.</source>
          <target state="translated">실행 &lt;code&gt;pip install lifx-control-panel&lt;/code&gt; . 시작하려면 &lt;code&gt;python -m lifx_control_panel&lt;/code&gt; 을 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4426a3ba561a43a6b8ac3fd03cb01600d0edabbc" translate="yes" xml:space="preserve">
          <source>Running the source code</source>
          <target state="translated">소스 코드 실행</target>
        </trans-unit>
        <trans-unit id="063b967a3a89481cf116e33d9db045b9df460e18" translate="yes" xml:space="preserve">
          <source>Starting the program takes a moment, as it first must scan your LAN for any LIFX devices.</source>
          <target state="translated">프로그램을 시작하려면 먼저 LAN에서 LIFX 장치를 검색해야하므로 잠시 시간이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="8b92579786be4e97f8d388ef0aed09cee8052fb5" translate="yes" xml:space="preserve">
          <source>Testing progress</source>
          <target state="translated">테스트 진행</target>
        </trans-unit>
        <trans-unit id="d5ed767b122ebb981b34ada819f7d3ebcb075eb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LIFX-Control-Panel-debug.exe&lt;/code&gt; is a debug version that runs with a console in the background, and uses a verbose
&lt;code&gt;lifxlan&lt;/code&gt; network logger.</source>
          <target state="translated">&lt;code&gt;LIFX-Control-Panel-debug.exe&lt;/code&gt; 디버그 버전입니다 백그라운드에서 콘솔을 실행하고, 자세한를 사용 &lt;code&gt;lifxlan&lt;/code&gt; 네트워크 로거.</target>
        </trans-unit>
        <trans-unit id="858e17077304ec23695a67c85aaae24e686303a5" translate="yes" xml:space="preserve">
          <source>The application uses &lt;a href=&quot;https://github.com/mclarkk&quot;&gt;mclarkk&lt;/a&gt;'s &lt;a href=&quot;https://github.com/mclarkk/lifxlan&quot;&gt;lifxlan&lt;/a&gt; module to
discover and send commands to the lights.</source>
          <target state="translated">응용 프로그램은 &lt;a href=&quot;https://github.com/mclarkk&quot;&gt;mclarkk&lt;/a&gt; 의 &lt;a href=&quot;https://github.com/mclarkk/lifxlan&quot;&gt;lifxlan&lt;/a&gt; 모듈을 사용하여 명령을 검색하고 조명에 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4d98ee8e07183639d546a70b2cb115db1b71c1f6" translate="yes" xml:space="preserve">
          <source>The demo mode simulates adding several &quot;dummy&quot; lights to the LAN, allowing the software to be demonstrated on networks
that do not have any LIFX devices on them.</source>
          <target state="translated">데모 모드는 LAN에 여러 &quot;더미&quot;조명을 추가하는 것을 시뮬레이션하여 LIFX 장치가없는 네트워크에서 소프트웨어를 시연 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e09085efbccf69e2c5efb4a200cb906de58da4fd" translate="yes" xml:space="preserve">
          <source>There are &lt;del&gt;2&lt;/del&gt;&lt;strong&gt;3&lt;/strong&gt; ways to install:</source>
          <target state="translated">있습니다 &lt;del&gt;2&lt;/del&gt;&lt;strong&gt;3&lt;/strong&gt; 가지 설치 방법 :</target>
        </trans-unit>
        <trans-unit id="325b9d26ed3a8e5c65dda90c0334001bc8f61f9a" translate="yes" xml:space="preserve">
          <source>This is the file that is used to build the main binary. The console, as well as verbose logging methods, are disabled.</source>
          <target state="translated">기본 바이너리를 빌드하는 데 사용되는 파일입니다. 자세한 로깅 방법뿐만 아니라 콘솔도 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="e650e1ece602d09c3d0dd5fb43517b1b3140d0bb" translate="yes" xml:space="preserve">
          <source>This spec file enables the console to run in the background, as well as verbose logging.</source>
          <target state="translated">이 사양 파일을 사용하면 콘솔이 백그라운드에서 실행될뿐만 아니라 자세한 로깅이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="3e87141424f8accb6deb66678cb422784265c5c9" translate="yes" xml:space="preserve">
          <source>To build the project, simply open a command window in the same folder and run &lt;code&gt;build_all.bat&lt;/code&gt; in the command prompt. It will
call &lt;code&gt;pyinstaller&lt;/code&gt; on all 3 &lt;code&gt;spec&lt;/code&gt; files previously mentioned. This should generate an &lt;code&gt;.exe&lt;/code&gt; in the &lt;code&gt;/dist&lt;/code&gt;
folder of the project.</source>
          <target state="translated">프로젝트를 빌드하려면 동일한 폴더에서 명령 창을 열고 명령 프롬프트에서 &lt;code&gt;build_all.bat&lt;/code&gt; 를 실행 하면됩니다. 이전에 언급 한 3 가지 &lt;code&gt;spec&lt;/code&gt; 파일 모두에서 &lt;code&gt;pyinstaller&lt;/code&gt; 를 호출 합니다. 프로젝트 의 &lt;code&gt;/dist&lt;/code&gt; 폴더에 &lt;code&gt;.exe&lt;/code&gt; 가 생성되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f8da18bed86e7d868631385a9f4b613b9c89bc16" translate="yes" xml:space="preserve">
          <source>To manually install the dependencies, run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;. PyHook3 has given me some grief installing from pip
in the past, but your millage may vary.</source>
          <target state="translated">종속성을 수동으로 설치하려면 &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; 를 실행 하세요. PyHook3는 과거에 pip에서 설치하는 데 약간의 슬픔을 주었지만 귀하의 millage는 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a8a9ec64878d4523b615c676574770b3205b5e5" translate="yes" xml:space="preserve">
          <source>To run the code from source, simply run &lt;code&gt;python gui.pyw&lt;/code&gt; from the command line. To run with &quot;Dummy&quot; devices included,
run &lt;code&gt;python dummy_devices.py&lt;/code&gt;.</source>
          <target state="translated">소스에서 코드를 실행하려면 명령 줄에서 &lt;code&gt;python gui.pyw&lt;/code&gt; 를 실행 하면됩니다. 포함 된 '더미'기기로 실행하려면 &lt;code&gt;python dummy_devices.py&lt;/code&gt; 를 실행 하세요 .</target>
        </trans-unit>
        <trans-unit id="1cb7956bf146a8ba0806fced6a0163472a25a83e" translate="yes" xml:space="preserve">
          <source>Windows 10</source>
          <target state="translated">윈도우 10</target>
        </trans-unit>
        <trans-unit id="59a6974bbabfc317cd4a36b001adf62d4e53ae6f" translate="yes" xml:space="preserve">
          <source>You can now install through PyPI, by running &lt;code&gt;pip install lifx-control-panel&lt;/code&gt;. This will automatically install dependencies.</source>
          <target state="translated">이제 &lt;code&gt;pip install lifx-control-panel&lt;/code&gt; 을 실행하여 PyPI를 통해 설치할 수 있습니다 . 그러면 종속성이 자동으로 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="3eaf5a3bee7afa0faa4909e88c4ec505fc751db7" translate="yes" xml:space="preserve">
          <source>and on the following LIFX devices:</source>
          <target state="translated">및 다음 LIFX 장치에서 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
