<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/basilisp/">
    <body>
      <group id="basilisp">
        <trans-unit id="bd2a292dc72acee1a6419cd2562fb3e505080ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disclaimer:&lt;/strong&gt;&lt;em&gt;Basilisp is a project I created to learn about Python, Clojure,
and hosted languages generally. It should not be used in a production setting.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;면책 조항 : &lt;/strong&gt;&lt;em&gt;Basilisp는 Python, Clojure 및 일반적으로 호스팅되는 언어에 대해 배우기 위해 만든 프로젝트입니다. 프로덕션 환경에서 사용해서는 안됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d660e03cee1c9d70eaa1d89d3c1ffd4b0e9c45bc" translate="yes" xml:space="preserve">
          <source>A Clojure-like lisp written for Python</source>
          <target state="translated">Python 용으로 작성된 Clojure와 유사한 lisp</target>
        </trans-unit>
        <trans-unit id="f2b1907633ab16d426541451cee4e7a81c306e5c" translate="yes" xml:space="preserve">
          <source>A Lisp dialect inspired by Clojure targeting Python 3.</source>
          <target state="translated">Python 3을 대상으로하는 Clojure에서 영감을받은 Lisp 방언.</target>
        </trans-unit>
        <trans-unit id="95fb017236c5324dc34601fdac94c155ec4b55b8" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;&lt;code&gt;pyenv&lt;/code&gt;&lt;/a&gt; is recommended to
manage versions of Python readily on your local development environment.
Setup of &lt;code&gt;pyenv&lt;/code&gt; is somewhat more specific to your environment, so see
the documentation in the repository for more information.</source>
          <target state="translated">또한 로컬 개발 환경에서 Python 버전을 쉽게 관리하려면 &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt; &lt;code&gt;pyenv&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다. &lt;code&gt;pyenv&lt;/code&gt; 설정은 사용자 환경에 따라 다소 다르 므로 자세한 내용은 저장소의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e6807caa1c3f8212c5195854cf9d1dd39b365938" translate="yes" xml:space="preserve">
          <source>Afterwards, you can start up the REPL for development with a simple:</source>
          <target state="translated">그 후 다음과 같은 간단한 방법으로 개발 용 REPL을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e0b59f3daaece652e84b68116b3ddc8e5bb8fa" translate="yes" xml:space="preserve">
          <source>Basilisp &lt;a href=&quot;https://basilisp.readthedocs.io&quot;&gt;documentation&lt;/a&gt; can help guide your
exploration at the REPL. Additionally, Basilisp features many of the same functions
and idioms as &lt;a href=&quot;https://clojure.org/&quot;&gt;Clojure&lt;/a&gt; so you may find guides and
documentation there helpful for getting started.</source>
          <target state="translated">Basilisp &lt;a href=&quot;https://basilisp.readthedocs.io&quot;&gt;문서&lt;/a&gt; 는 REPL에서 탐색하는 데 도움이 될 수 있습니다. 또한 Basilisp에는 &lt;a href=&quot;https://clojure.org/&quot;&gt;Clojure&lt;/a&gt; 와 동일한 기능과 관용구가 많이 있으므로 시작하는 데 도움이되는 가이드와 문서를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3e60e60b39e407d489020e932bf7b6de3a02b5b" translate="yes" xml:space="preserve">
          <source>Basilisp automates linting, running tests, and type checking using
&lt;a href=&quot;https://github.com/tox-dev/tox&quot;&gt;Tox&lt;/a&gt;. All three steps can be performed
using a simple &lt;code&gt;make&lt;/code&gt; target:</source>
          <target state="translated">Basilisp는 &lt;a href=&quot;https://github.com/tox-dev/tox&quot;&gt;Tox를&lt;/a&gt; 사용하여 Linting, 실행 테스트 및 유형 검사를 자동화 합니다. 간단한 &lt;code&gt;make&lt;/code&gt; target을 사용하여 세 단계를 모두 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f766dc954439ad40e45a9bae091b0c78fcdce0f5" translate="yes" xml:space="preserve">
          <source>Basilisp is developed on &lt;a href=&quot;https://github.com/chrisrink10/basilisp&quot;&gt;GitHub&lt;/a&gt;
and hosted on &lt;a href=&quot;https://pypi.python.org/pypi/basilisp&quot;&gt;PyPI&lt;/a&gt;. You can
fetch Basilisp using a simple:</source>
          <target state="translated">Basilisp는 &lt;a href=&quot;https://github.com/chrisrink10/basilisp&quot;&gt;GitHub에서&lt;/a&gt; 개발 되고 &lt;a href=&quot;https://pypi.python.org/pypi/basilisp&quot;&gt;PyPI에서&lt;/a&gt; 호스팅됩니다 . 다음을 사용하여 Basilisp를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dbbb6f6b29ef6a26fe2618145a835dcf37a556e" translate="yes" xml:space="preserve">
          <source>Developing on Basilisp</source>
          <target state="translated">Basilisp에서 개발</target>
        </trans-unit>
        <trans-unit id="916827e43c8025b9217629e6b704f06ff2e41708" translate="yes" xml:space="preserve">
          <source>Eclipse Public License 1.0</source>
          <target state="translated">Eclipse Public License 1.0</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="5fbb8962bf52214aa95b38e07c71d560877524bb" translate="yes" xml:space="preserve">
          <source>If dependencies are added or changed afterwards, you may need to
&lt;code&gt;make setup-dev&lt;/code&gt; again before attempting to start the REPL again or
run tests.</source>
          <target state="translated">나중에 종속성이 추가되거나 변경 되면 REPL을 다시 시작하거나 테스트를 실행하기 전에 &lt;code&gt;make setup-dev&lt;/code&gt; 다시 만들어야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="aef432948844d57a65a3c5fbb16061c485439293" translate="yes" xml:space="preserve">
          <source>Linting, Running Tests, and Type Checking</source>
          <target state="translated">Linting, 실행 테스트 및 유형 검사</target>
        </trans-unit>
        <trans-unit id="fc7ce75e75050bf836ac8263897ffdcfa8382712" translate="yes" xml:space="preserve">
          <source>Once Basilisp is installed, you can enter into the REPL using:</source>
          <target state="translated">Basilisp가 설치되면 다음을 사용하여 REPL에 들어갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="ffa46845965a3ae6b9274c6638b91f20514ec7ad" translate="yes" xml:space="preserve">
          <source>Testing is performed using &lt;a href=&quot;https://github.com/pytest-dev/pytest/&quot;&gt;PyTest&lt;/a&gt;.
Type checking is performed by &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;MyPy&lt;/a&gt;. Linting is
performed using &lt;a href=&quot;https://prospector.landscape.io/en/master/&quot;&gt;Prospector&lt;/a&gt;.</source>
          <target state="translated">테스트는 &lt;a href=&quot;https://github.com/pytest-dev/pytest/&quot;&gt;PyTest를&lt;/a&gt; 사용하여 수행됩니다 . 유형 검사는 &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;MyPy에&lt;/a&gt; 의해 수행됩니다 . Linting은 &lt;a href=&quot;https://prospector.landscape.io/en/master/&quot;&gt;Prospector를&lt;/a&gt; 사용하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="defdd2482a9f0fa0dee8f3a9e0ea266319edf853" translate="yes" xml:space="preserve">
          <source>This project uses &lt;a href=&quot;https://github.com/kennethreitz/pipenv&quot;&gt;&lt;code&gt;pipenv&lt;/code&gt;&lt;/a&gt; to
manage the Python virtual environment and project dependencies. &lt;code&gt;pipenv&lt;/code&gt;
can be installed using Homebrew (on OS X) or &lt;code&gt;pip&lt;/code&gt; otherwise:</source>
          <target state="translated">이 프로젝트는 &lt;a href=&quot;https://github.com/kennethreitz/pipenv&quot;&gt; &lt;code&gt;pipenv&lt;/code&gt; &lt;/a&gt; 를 사용하여 Python 가상 환경 및 프로젝트 종속성을 관리합니다. &lt;code&gt;pipenv&lt;/code&gt; 는 Homebrew (OS X에서) 또는 &lt;code&gt;pip&lt;/code&gt; 를 사용하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de924c48a6375ee1c0e412b36a818104b801bddb" translate="yes" xml:space="preserve">
          <source>To prepare your &lt;code&gt;pipenv&lt;/code&gt; environment, you need to install dependencies
and install Basilisp as an editable dependency:</source>
          <target state="translated">&lt;code&gt;pipenv&lt;/code&gt; 환경 을 준비 하려면 종속성을 설치하고 Basilisp를 편집 가능한 종속성으로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e38ae9abf23829e8cb496df78a98ed8fd6d204d" translate="yes" xml:space="preserve">
          <source>🐍 basilisp 🐍</source>
          <target state="translated">🐍 바실리 스프 🐍</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
