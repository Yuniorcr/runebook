<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/md-recipe-celery/">
    <body>
      <group id="md-recipe-celery">
        <trans-unit id="bac5bb7cc16d2b95e688f63335032b62e3d05819" translate="yes" xml:space="preserve">
          <source># Execute at midnight</source>
          <target state="translated"># 자정에 실행</target>
        </trans-unit>
        <trans-unit id="f4a9d0f0a97615f11daa04680e4c80a8ebfb13fd" translate="yes" xml:space="preserve">
          <source># Execute every 30 seconds</source>
          <target state="translated"># 30 초마다 실행</target>
        </trans-unit>
        <trans-unit id="b0fbdaa99b083c99cd028240a30da437d6a8d201" translate="yes" xml:space="preserve">
          <source># Execute every hour</source>
          <target state="translated"># 매시간 실행</target>
        </trans-unit>
        <trans-unit id="0fa35845ea6cc689fd5b3cc3a21f429c4813e2ab" translate="yes" xml:space="preserve">
          <source>#!/Users/rwendt/Projects/python/bin/python</source>
          <target state="translated">#! / Users / rwendt / Projects / python / bin / python</target>
        </trans-unit>
        <trans-unit id="43d5a0547c4de1f8b0b7768715f7ac5932e6de17" translate="yes" xml:space="preserve">
          <source>${buildout:eggs}</source>
          <target state="translated">$ {buildout : eggs}</target>
        </trans-unit>
        <trans-unit id="7cb3e9b5f5f5e2f887a14313e35b04a8be8960a0" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; cat(sample_buildout, 'bin', 'celeryctl')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; cat (sample_buildout, 'bin', 'celeryctl')</target>
        </trans-unit>
        <trans-unit id="eca3ad18b026afad9bc2a67da758165a8533c91c" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; ls(sample_buildout, 'bin')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; ls (sample_buildout, 'bin')</target>
        </trans-unit>
        <trans-unit id="6c1a881ad242573a54ab937944130d75a400dc27" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; ls(sample_buildout, 'parts', 'celery')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; ls (sample_buildout, 'parts', 'celery')</target>
        </trans-unit>
        <trans-unit id="8e2e6915297c3f640ebc1c6acaea7e0a73067aa5" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; print system(buildout)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; 인쇄 시스템 (빌드 아웃)</target>
        </trans-unit>
        <trans-unit id="164ce345fe2d21de094ae8b7c25d703e817ba472" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; print system(buildout),</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; 인쇄 시스템 (빌드 아웃),</target>
        </trans-unit>
        <trans-unit id="badfb5c0ba28fc02ed5563dd93c743e32dd345d5" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; print(system(join(sample_buildout, 'bin', 'celeryctl')))</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; print (system (join (sample_buildout, 'bin', 'celeryctl')))</target>
        </trans-unit>
        <trans-unit id="25b949819ebaf471095de2144cf942e8187be72a" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; write(sample_buildout, 'buildout.cfg',</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; write (sample_buildout, 'buildout.cfg',</target>
        </trans-unit>
        <trans-unit id="4ddc8bcec7eb1fe3f745fd8320fa7919213c543b" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; write(sample_buildout, 'celery.ini',</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; write (sample_buildout, 'celery.ini',</target>
        </trans-unit>
        <trans-unit id="002c256a95064a011e12e75213ca5aac46a61f83" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; write(sample_buildout, 'logging.ini',</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; write (sample_buildout, 'logging.ini',</target>
        </trans-unit>
        <trans-unit id="ba055b4d73911396c450589c68f38051ff8aebdf" translate="yes" xml:space="preserve">
          <source>&amp;lt;BLANKLINE&amp;gt;</source>
          <target state="translated">&amp;lt;공백&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f9d1ba7c3ca781a8e71d74239f27d762f2b45304" translate="yes" xml:space="preserve">
          <source>'/sample-buildout/eggs/celery-2.3.0-py2.7.egg',</source>
          <target state="translated">'/sample-buildout/eggs/celery-2.3.0-py2.7.egg',</target>
        </trans-unit>
        <trans-unit id="002918fc1b9de043154395a2e8e5eba095ee1b7a" translate="yes" xml:space="preserve">
          <source>'/sample-buildout/eggs/other-1.0-py2.7.egg',</source>
          <target state="translated">'/sample-buildout/eggs/other-1.0-py2.7.egg',</target>
        </trans-unit>
        <trans-unit id="540b9b813aceb1c7d6d172eebf186d87f146a988" translate="yes" xml:space="preserve">
          <source>'/sample-buildout/parts/celery',</source>
          <target state="translated">'/ 샘플 빌드 아웃 / 부품 / 셀러리',</target>
        </trans-unit>
        <trans-unit id="23b27e1d17fcebde0f389ba96580452901c1fc68" translate="yes" xml:space="preserve">
          <source>'task': 'myapp.tasks.Task1'},</source>
          <target state="translated">'task': 'myapp.tasks.Task1'},</target>
        </trans-unit>
        <trans-unit id="f16a317169f5e8b8679e764d338546dcff2c62a0" translate="yes" xml:space="preserve">
          <source>'task': 'myapp.tasks.Task2'},</source>
          <target state="translated">'task': 'myapp.tasks.Task2'},</target>
        </trans-unit>
        <trans-unit id="bdee1c040334b968aac9a46d7770d89af863cb90" translate="yes" xml:space="preserve">
          <source>'task': 'otherapp.tasks.Task3'}}),</source>
          <target state="translated">'task': 'otherapp.tasks.Task3'}}),</target>
        </trans-unit>
        <trans-unit id="caf6cca4a146fbbdaf3333cffdd078d9f8536739" translate="yes" xml:space="preserve">
          <source>'task2': {'schedule': datetime.timedelta(0, 30),</source>
          <target state="translated">'task2': { 'schedule': datetime.timedelta (0, 30),</target>
        </trans-unit>
        <trans-unit id="e74971bc0a69d067876964753dbd832df0c4a8f0" translate="yes" xml:space="preserve">
          <source>'task3': {'schedule': &amp;lt;crontab: 0 0 * * * (m/h/d/dM/MY)&amp;gt;,</source>
          <target state="translated">'task3': { 'schedule': &amp;lt;crontab : 00 * * * (m / h / d / dM / MY)&amp;gt;,</target>
        </trans-unit>
        <trans-unit id="6d40361cbda83831bed6458bac5f9aae02bcffae" translate="yes" xml:space="preserve">
          <source>('CELERYBEAT_SCHEDULE',</source>
          <target state="translated">( 'CELERYBEAT_SCHEDULE',</target>
        </trans-unit>
        <trans-unit id="3273ed226ba2121fa87407638d7558338d237878" translate="yes" xml:space="preserve">
          <source>('CELERYD_HIJACK_ROOT_LOGGER', False),</source>
          <target state="translated">( 'CELERYD_HIJACK_ROOT_LOGGER', False),</target>
        </trans-unit>
        <trans-unit id="6969da367c994a4149f6c77bb951da60b9bf0dd6" translate="yes" xml:space="preserve">
          <source>('CELERY_IMPORTS', ['myapp.tasks', 'otherapp.tasks']),</source>
          <target state="translated">( 'CELERY_IMPORTS', [ 'myapp.tasks', 'otherapp.tasks']),</target>
        </trans-unit>
        <trans-unit id="d00223b90e2ae16ea60c2386902ed46594d673ee" translate="yes" xml:space="preserve">
          <source>('CELERY_RESULT_BACKEND', 'sqlite:///celery_results.db'),</source>
          <target state="translated">( 'CELERY_RESULT_BACKEND', 'sqlite : ///celery_results.db'),</target>
        </trans-unit>
        <trans-unit id="651db82306b0e517545d17022fdfa432e2da182f" translate="yes" xml:space="preserve">
          <source>('CELERY_RESULT_SERIALIZER', 'json')]</source>
          <target state="translated">( 'CELERY_RESULT_SERIALIZER', 'json')]</target>
        </trans-unit>
        <trans-unit id="36c3eaa0e1e290f41e2810bae8d9502c785e92d9" translate="yes" xml:space="preserve">
          <source>***</source>
          <target state="translated">***</target>
        </trans-unit>
        <trans-unit id="6e923028492ac2b07c5c6cd628542b7dec55479f" translate="yes" xml:space="preserve">
          <source>-  buildout</source>
          <target state="translated">-빌드 아웃</target>
        </trans-unit>
        <trans-unit id="b3d3afa3b3b16a54b8bb70bfa8ca3a60a2ba551c" translate="yes" xml:space="preserve">
          <source>-  celeryctl</source>
          <target state="translated">-셀러 리틀</target>
        </trans-unit>
        <trans-unit id="0113cc0d9885ac5e61c006f5a9fc9463d5468e38" translate="yes" xml:space="preserve">
          <source>-  celeryd</source>
          <target state="translated">-셀러리</target>
        </trans-unit>
        <trans-unit id="1ca27f27c33e983d787acba8c0a0f788a18a3fbe" translate="yes" xml:space="preserve">
          <source>- Add missing files to Manifest.</source>
          <target state="translated">-누락 된 파일을 매니페스트에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="790e94b617e1ef8a048367634a6aa577e30eb428" translate="yes" xml:space="preserve">
          <source>- Initial release. Based loosely on collective.recipe.celery.</source>
          <target state="translated">- 초판. Collective.recipe.celery를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="f96cbfd035c81d3353e3b08e66c69569544b44e7" translate="yes" xml:space="preserve">
          <source>- loader.py</source>
          <target state="translated">-loader.py</target>
        </trans-unit>
        <trans-unit id="14508b779c69a7c0833f53ba17d7bbf2a31a9452" translate="yes" xml:space="preserve">
          <source>- zopeloader.py</source>
          <target state="translated">-zopeloader.py</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="fad7a7f043f47fc0d404b8c9db4bd38eb1765e1f" translate="yes" xml:space="preserve">
          <source>...     celeryd</source>
          <target state="translated">... 셀러리</target>
        </trans-unit>
        <trans-unit id="01a9f3619bcb3bb8f24e1640b1eec1b50bc35e51" translate="yes" xml:space="preserve">
          <source>...     other</source>
          <target state="translated">... 기타</target>
        </trans-unit>
        <trans-unit id="d2cead97a7a849bc4705b6cf299d563880aecde0" translate="yes" xml:space="preserve">
          <source>...     server=link_server))</source>
          <target state="translated">... 서버 = 링크 _ 서버))</target>
        </trans-unit>
        <trans-unit id="0d1b491d5c5c7b31e174bef491372591bb7390bc" translate="yes" xml:space="preserve">
          <source>... &quot;&quot;&quot;</source>
          <target state="translated">... &quot;&quot; &quot;</target>
        </trans-unit>
        <trans-unit id="2c598dabf10cd011e6f198f5d56576549f9c08da" translate="yes" xml:space="preserve">
          <source>... &quot;&quot;&quot;% dict(</source>
          <target state="translated">... &quot;&quot; &quot;% dict (</target>
        </trans-unit>
        <trans-unit id="64cfecda9e616b2e96a3370ae825c99c5c91fa7a" translate="yes" xml:space="preserve">
          <source>... &quot;&quot;&quot;% dict(server=link_server))</source>
          <target state="translated">... &quot;&quot; &quot;% dict (server = link_server))</target>
        </trans-unit>
        <trans-unit id="1ba6633250f6dd82da1f3c1a857b16d7d7b125bd" translate="yes" xml:space="preserve">
          <source>... # Execute at midnight</source>
          <target state="translated">... # 자정에 실행</target>
        </trans-unit>
        <trans-unit id="853447c5e316c77fe62e0fb65896e56073df333b" translate="yes" xml:space="preserve">
          <source>... # Execute every 30 seconds</source>
          <target state="translated">... # 30 초마다 실행</target>
        </trans-unit>
        <trans-unit id="b10eff5acad5bf6f13b9e7fccfcc0ce8a911fc45" translate="yes" xml:space="preserve">
          <source>... # Execute every hour</source>
          <target state="translated">... # 매시간 실행</target>
        </trans-unit>
        <trans-unit id="5a468fe5527c321dcf2d1674b64e2806e7432d70" translate="yes" xml:space="preserve">
          <source>... BROKER_URL = sqlite:///celery_broker.db</source>
          <target state="translated">... BROKER_URL = sqlite : ///celery_broker.db</target>
        </trans-unit>
        <trans-unit id="77f0124e2ce849ea55863c9ddaf94afa1cb484c5" translate="yes" xml:space="preserve">
          <source>... CELERY_IMPORTS = myapp.tasks,otherapp.tasks</source>
          <target state="translated">... CELERY_IMPORTS = myapp.tasks, otherapp.tasks</target>
        </trans-unit>
        <trans-unit id="34dc5e89cb0d7ab3782d93b606d0eb0e63f0cf41" translate="yes" xml:space="preserve">
          <source>... CELERY_RESULT_BACKEND = sqlite:///celery_results.db</source>
          <target state="translated">... CELERY_RESULT_BACKEND = sqlite : ///celery_results.db</target>
        </trans-unit>
        <trans-unit id="5bd12ea960cfb6e7c5313cd389d258ae3ecb228d" translate="yes" xml:space="preserve">
          <source>... CELERY_RESULT_SERIALIZER = json</source>
          <target state="translated">... CELERY_RESULT_SERIALIZER = json</target>
        </trans-unit>
        <trans-unit id="97235bf0a12efe80fd9f4077de747a1d41bd6557" translate="yes" xml:space="preserve">
          <source>... [buildout]</source>
          <target state="translated">... [빌드 아웃]</target>
        </trans-unit>
        <trans-unit id="b3782938876922ee731499081f962d967b0713fa" translate="yes" xml:space="preserve">
          <source>... [celery]</source>
          <target state="translated">... [셀러리]</target>
        </trans-unit>
        <trans-unit id="1bc3a6049a97754481f8837b5ae0fbb394ea0047" translate="yes" xml:space="preserve">
          <source>... [celerybeat:task1]</source>
          <target state="translated">... [celerybeat : task1]</target>
        </trans-unit>
        <trans-unit id="79dcb785fb7dbac766a16ebee6eb43f91acff72d" translate="yes" xml:space="preserve">
          <source>... [celerybeat:task2]</source>
          <target state="translated">... [celerybeat : task2]</target>
        </trans-unit>
        <trans-unit id="d94dd860febecbd0523f4ee5b1944a49ff71bc01" translate="yes" xml:space="preserve">
          <source>... [celerybeat:task3]</source>
          <target state="translated">... [celerybeat : task3]</target>
        </trans-unit>
        <trans-unit id="113f7f4b4b87f25bd763f969dc5c5a971841dfcc" translate="yes" xml:space="preserve">
          <source>... [formatter_generic]</source>
          <target state="translated">... [포맷터 _ 일반]</target>
        </trans-unit>
        <trans-unit id="22cac0fea2f2b1d5a31aafa30a23528a3d04e4a5" translate="yes" xml:space="preserve">
          <source>... [formatters]</source>
          <target state="translated">... [포맷터]</target>
        </trans-unit>
        <trans-unit id="6145562cc15c71fcaedb29690ff235742f926b26" translate="yes" xml:space="preserve">
          <source>... [handler_console]</source>
          <target state="translated">... [handler_console]</target>
        </trans-unit>
        <trans-unit id="3d3dc3afe04e5e6647217e12448f0ea0737c39a2" translate="yes" xml:space="preserve">
          <source>... [handlers]</source>
          <target state="translated">... [핸들러]</target>
        </trans-unit>
        <trans-unit id="b576fb4fc2f36998459418489b73c82c81bc9774" translate="yes" xml:space="preserve">
          <source>... [logger_root]</source>
          <target state="translated">... [logger_root]</target>
        </trans-unit>
        <trans-unit id="76240f6d445e23b487db45556aefb8996e00fdd8" translate="yes" xml:space="preserve">
          <source>... [loggers]</source>
          <target state="translated">... [로거]</target>
        </trans-unit>
        <trans-unit id="2965052230a3d99631a47010497c0e94eb36fcfc" translate="yes" xml:space="preserve">
          <source>... [versions]</source>
          <target state="translated">... [버전]</target>
        </trans-unit>
        <trans-unit id="66b62445d48e595f48614518062e319123d14ccb" translate="yes" xml:space="preserve">
          <source>... args = (sys.stderr,)</source>
          <target state="translated">... args = (sys.stderr,)</target>
        </trans-unit>
        <trans-unit id="747b5d8001b33ea834841057bbbda2deaf2ec8cb" translate="yes" xml:space="preserve">
          <source>... celery = 2.3.0</source>
          <target state="translated">... 셀러리 = 2.3.0</target>
        </trans-unit>
        <trans-unit id="998fff8778fcceeb21152ec4736427c381b0aab6" translate="yes" xml:space="preserve">
          <source>... celery_conf = celery.ini</source>
          <target state="translated">... celery_conf = celery.ini</target>
        </trans-unit>
        <trans-unit id="78835e9014a03e1e75894f5a662075ee3af7521f" translate="yes" xml:space="preserve">
          <source>... class = StreamHandler</source>
          <target state="translated">... 클래스 = StreamHandler</target>
        </trans-unit>
        <trans-unit id="f9fad5ff0b1fc645cd7822e2917f58d30540b1b2" translate="yes" xml:space="preserve">
          <source>... eggs =</source>
          <target state="translated">... 계란 =</target>
        </trans-unit>
        <trans-unit id="e138f09a1e4c188fa21b4d2cefbaf76947ee68dc" translate="yes" xml:space="preserve">
          <source>... find-links = %(server)s</source>
          <target state="translated">... 링크 찾기 = % (서버) s</target>
        </trans-unit>
        <trans-unit id="7c193241eaa7b162043847dfa802a710c848b8bf" translate="yes" xml:space="preserve">
          <source>... format = %(asctime)s %(levelname)s [%(name)s] %(message)s&quot;&quot;&quot;)</source>
          <target state="translated">... format = % (asctime) s % (levelname) s [% (name) s] % (message) s &quot;&quot; &quot;)</target>
        </trans-unit>
        <trans-unit id="edd3dc1498fad5ee4a7c8aa64a186662582c7222" translate="yes" xml:space="preserve">
          <source>... formatter = generic</source>
          <target state="translated">... 포맷터 = 일반</target>
        </trans-unit>
        <trans-unit id="b9518c5120e466ed599e13fcb0864b8930eaa0b2" translate="yes" xml:space="preserve">
          <source>... handlers = console</source>
          <target state="translated">... 핸들러 = 콘솔</target>
        </trans-unit>
        <trans-unit id="1fc49823b68fc81332749b169ef3572457f5d9c9" translate="yes" xml:space="preserve">
          <source>... index = %(server)s/index</source>
          <target state="translated">... index = % (server) s / index</target>
        </trans-unit>
        <trans-unit id="68d8c8d4d4ab9f1656e9a2810e209912bab8d38e" translate="yes" xml:space="preserve">
          <source>... keys = console</source>
          <target state="translated">... 키 = 콘솔</target>
        </trans-unit>
        <trans-unit id="65bea02347c2e1882b1fce0d43b27ebd5edd7ae7" translate="yes" xml:space="preserve">
          <source>... keys = generic</source>
          <target state="translated">... 키 = 일반</target>
        </trans-unit>
        <trans-unit id="44c2a3a3c8457d9e29df9850aeb75add602c6382" translate="yes" xml:space="preserve">
          <source>... keys = root</source>
          <target state="translated">... 키 = 루트</target>
        </trans-unit>
        <trans-unit id="85eb0fcc8c3269f08513dcf30ef5463873c6d662" translate="yes" xml:space="preserve">
          <source>... level = INFO</source>
          <target state="translated">... 레벨 = 정보</target>
        </trans-unit>
        <trans-unit id="e8e82933b95069403d1c13197843342f72683203" translate="yes" xml:space="preserve">
          <source>... level = NOTSET</source>
          <target state="translated">... 레벨 = NOTSET</target>
        </trans-unit>
        <trans-unit id="406841336b7e4c800b0b26fdf22c9a4e7abb16dc" translate="yes" xml:space="preserve">
          <source>... logging_conf = logging.ini</source>
          <target state="translated">... logging_conf = logging.ini</target>
        </trans-unit>
        <trans-unit id="fb213d3babaee1d714a41eafa8fbae93c63e3b3b" translate="yes" xml:space="preserve">
          <source>... parts = celery</source>
          <target state="translated">... 부품 = 셀러리</target>
        </trans-unit>
        <trans-unit id="2edaf2ee4ff76b97ffec8e78cc870c09ccfdcd05" translate="yes" xml:space="preserve">
          <source>... recipe = md.recipe.celery</source>
          <target state="translated">... 레시피 = md.recipe.celery</target>
        </trans-unit>
        <trans-unit id="3c6893c9a3f44e2c42f23268c5c541d73dd89e94" translate="yes" xml:space="preserve">
          <source>... schedule = {&quot;hour&quot;: 0, &quot;minute&quot;: 0}&quot;&quot;&quot;)</source>
          <target state="translated">... 일정 = { &quot;시간&quot;: 0, &quot;분&quot;: 0} &quot;&quot; &quot;)</target>
        </trans-unit>
        <trans-unit id="0e3b85d72426b87b5359100a7aeb4b8b93769a3e" translate="yes" xml:space="preserve">
          <source>... schedule = {&quot;minute&quot;: 0}</source>
          <target state="translated">... 일정 = { &quot;분&quot;: 0}</target>
        </trans-unit>
        <trans-unit id="a3b3cbde15cbfb296836e573d9fc6e3fa9c2f08e" translate="yes" xml:space="preserve">
          <source>... schedule = {&quot;seconds&quot;: 30}</source>
          <target state="translated">... 일정 = { &quot;초&quot;: 30}</target>
        </trans-unit>
        <trans-unit id="7f604d28d88b990ea0c908bd56ac7e1dc41ac458" translate="yes" xml:space="preserve">
          <source>... scripts =</source>
          <target state="translated">... 스크립트 =</target>
        </trans-unit>
        <trans-unit id="b78101f779e6f74c765928a3a259b868a7f53f70" translate="yes" xml:space="preserve">
          <source>... task = myapp.tasks.Task1</source>
          <target state="translated">... 작업 = myapp.tasks.Task1</target>
        </trans-unit>
        <trans-unit id="5b7033ff3591ae05667e1e63aca791adec2b4454" translate="yes" xml:space="preserve">
          <source>... task = myapp.tasks.Task2</source>
          <target state="translated">... 작업 = myapp.tasks.Task2</target>
        </trans-unit>
        <trans-unit id="4910901a738816574c1e6d66759e2ccee623e56d" translate="yes" xml:space="preserve">
          <source>... task = otherapp.tasks.Task3</source>
          <target state="translated">... 작업 = otherapp.tasks.Task3</target>
        </trans-unit>
        <trans-unit id="5390a7ca7b1264cacd01b5e36f1edcfb8821b6ce" translate="yes" xml:space="preserve">
          <source>... type = crontab</source>
          <target state="translated">... 유형 = crontab</target>
        </trans-unit>
        <trans-unit id="e497bcb93c64631e8776156cd04ae569699d2c92" translate="yes" xml:space="preserve">
          <source>... type = timedelta</source>
          <target state="translated">... 유형 = timedelta</target>
        </trans-unit>
        <trans-unit id="b43c4b25ed9bab259a617f8688fc6a17e92ee9cc" translate="yes" xml:space="preserve">
          <source>... zope_conf = zope.conf</source>
          <target state="translated">... zope_conf = zope.conf</target>
        </trans-unit>
        <trans-unit id="345aef311d70cc34eba706d61a1969a567f5eb19" translate="yes" xml:space="preserve">
          <source>1.0 (2013-12-18)</source>
          <target state="translated">1.0 (2013-12-18)</target>
        </trans-unit>
        <trans-unit id="c053bbb3888b4591a81f75434ce74bbd4fa4e26f" translate="yes" xml:space="preserve">
          <source>1.1 (2013-12-19)</source>
          <target state="translated">1.1 (2013-12-19)</target>
        </trans-unit>
        <trans-unit id="09b98468cc40d90f787c600ad105ce799f7105c4" translate="yes" xml:space="preserve">
          <source>A list of additional eggs you want to make available to Celery. Use this to</source>
          <target state="translated">셀러리에 제공 할 추가 계란 목록입니다. 이것을 사용하여</target>
        </trans-unit>
        <trans-unit id="f36beca34d99bfb6f836f3d54600d116b04a8b40" translate="yes" xml:space="preserve">
          <source>BROKER_URL = sqlite:///celery_broker.db</source>
          <target state="translated">BROKER_URL = sqlite : ///celery_broker.db</target>
        </trans-unit>
        <trans-unit id="1ee2827768700d6ad4909abb0c0b837f53664437" translate="yes" xml:space="preserve">
          <source>Buildout recipe for installing Celery for use with Zope's ZCA and configuring</source>
          <target state="translated">Zope의 ZCA와 함께 사용하기 위해 Celery를 설치하고 구성하기위한 빌드 아웃 레시피</target>
        </trans-unit>
        <trans-unit id="db7de57b7bbef4637be98c9a531550a33707d520" translate="yes" xml:space="preserve">
          <source>Buildout recipe for installing celery for use with Zope's ZCA and configuring it using an ini file.</source>
          <target state="translated">Zope의 ZCA와 함께 사용하기 위해 셀러리를 설치하고 ini 파일을 사용하여 구성하기위한 빌드 아웃 레시피입니다.</target>
        </trans-unit>
        <trans-unit id="11f5961fd00f85f791bd935ac195b95ad565db28" translate="yes" xml:space="preserve">
          <source>CELERY_IMPORTS = myapp.tasks,otherapp.tasks</source>
          <target state="translated">CELERY_IMPORTS = myapp.tasks, otherapp.tasks</target>
        </trans-unit>
        <trans-unit id="455efdf0bbba9ebdcedbb528c7baebaff9494f70" translate="yes" xml:space="preserve">
          <source>CELERY_RESULT_BACKEND = sqlite:///celery_results.db</source>
          <target state="translated">CELERY_RESULT_BACKEND = sqlite : ///celery_results.db</target>
        </trans-unit>
        <trans-unit id="fcaf836170c04dc9e3a80cf0cd53eceb20729d17" translate="yes" xml:space="preserve">
          <source>CELERY_RESULT_SERIALIZER = json</source>
          <target state="translated">CELERY_RESULT_SERIALIZER = json</target>
        </trans-unit>
        <trans-unit id="a2feb6ed0257c21c6672793ee2f94eaadc10c72c" translate="yes" xml:space="preserve">
          <source>CHANGES</source>
          <target state="translated">변경 사항</target>
        </trans-unit>
        <trans-unit id="5ba6153bd8b54eb3fe751bc6f01ad208bf11a442" translate="yes" xml:space="preserve">
          <source>Check that we got the celery loaders::</source>
          <target state="translated">셀러리 로더가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9a81046f7554e170d9a470bfa780820806858612" translate="yes" xml:space="preserve">
          <source>Check that we have the celery scripts::</source>
          <target state="translated">셀러리 스크립트가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="7f5d3663d9ca2a8ea10e1a72d1af81bc6a436946" translate="yes" xml:space="preserve">
          <source>Create a celery ini file holding your celery configuration::</source>
          <target state="translated">셀러리 구성을 포함하는 셀러리 ini 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8f5e44afeaeac42ebf2b9a86f62dcf38d221fe6d" translate="yes" xml:space="preserve">
          <source>Example of an ini file that could be used by this recipe::</source>
          <target state="translated">이 레시피에서 사용할 수있는 ini 파일의 예 ::</target>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="5bcb5f8aaf1a9e559046fd7b5b3d79bbe4d3f426" translate="yes" xml:space="preserve">
          <source>General options</source>
          <target state="translated">일반 옵션</target>
        </trans-unit>
        <trans-unit id="89120b21be66b4dccb1cb552fdfc2f33b156eb0e" translate="yes" xml:space="preserve">
          <source>Generated script '/sample-buildout/bin/celeryctl'.</source>
          <target state="translated">생성 된 스크립트 '/ sample-buildout / bin / celeryctl'.</target>
        </trans-unit>
        <trans-unit id="9e59a65afc70af98c4d1b1ba38655c05e1f7914f" translate="yes" xml:space="preserve">
          <source>Generated script '/sample-buildout/bin/celeryd'.</source>
          <target state="translated">생성 된 스크립트 '/ sample-buildout / bin / celeryd'.</target>
        </trans-unit>
        <trans-unit id="4e79005f7a30247b876699e480ee8ff46c67479a" translate="yes" xml:space="preserve">
          <source>Generated script '/sample-buildout/bin/distutilsscript'.</source>
          <target state="translated">생성 된 스크립트 '/ sample-buildout / bin / distutilsscript'.</target>
        </trans-unit>
        <trans-unit id="3d2b399839fa9543795cf6a2ae191a6462ebd7ba" translate="yes" xml:space="preserve">
          <source>Getting distribution for 'celery'.</source>
          <target state="translated">'셀러리'배포를 받고 있습니다.</target>
        </trans-unit>
        <trans-unit id="15cd317923875ab1f07490f83b8f3b015427782c" translate="yes" xml:space="preserve">
          <source>Getting distribution for 'celery==2.3.0'.</source>
          <target state="translated">'celery == 2.3.0'에 대한 배포를 가져 오는 중입니다.</target>
        </trans-unit>
        <trans-unit id="e7cd83ae50ef4ff59415034c15efbf77b1f793bc" translate="yes" xml:space="preserve">
          <source>Getting distribution for 'other'.</source>
          <target state="translated">'기타'에 대한 배포를 가져 오는 중입니다.</target>
        </trans-unit>
        <trans-unit id="9b8f5bd20c1367fff3816a65d698dd2f616b72b6" translate="yes" xml:space="preserve">
          <source>Got celery 2.3.0.</source>
          <target state="translated">셀러리 2.3.0을 얻었습니다.</target>
        </trans-unit>
        <trans-unit id="80de9b336b816cf5e017d296e8f4f1b18f1fd2a3" translate="yes" xml:space="preserve">
          <source>Got celery 2.3.1.</source>
          <target state="translated">셀러리를 얻었다 2.3.1.</target>
        </trans-unit>
        <trans-unit id="f0226b20caf5688a2cad00fddd431ced5966f89f" translate="yes" xml:space="preserve">
          <source>Got other 1.0.</source>
          <target state="translated">다른 1.0이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1897a57a0a2db827c0bfaff7eb63638b9afc454e" translate="yes" xml:space="preserve">
          <source>If no value is given, then script generation is disabled::</source>
          <target state="translated">값이 제공되지 않으면 스크립트 생성이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="fdc5c5c43743b0fba0e335479b04deae7fe701d5" translate="yes" xml:space="preserve">
          <source>If we run the celeryd script, it prints out the config data::</source>
          <target state="translated">celeryd 스크립트를 실행하면 구성 데이터가 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd5b6592da534b65840db4175eee0ea1489b118" translate="yes" xml:space="preserve">
          <source>Installing celery.</source>
          <target state="translated">셀러리 설치.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="0331848750e2181fb0adbf88452d9bfeacfd6b98" translate="yes" xml:space="preserve">
          <source>Let's create the celeryd script only::</source>
          <target state="translated">celeryd 스크립트 만 생성 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="bb4052ac424476a7295dc42c79fc6acadf4beb49" translate="yes" xml:space="preserve">
          <source>Location of the Celery configuration .ini file.</source>
          <target state="translated">Celery 구성 .ini 파일의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="486cd16c28dd21db11af85aeae7935ea94fdeaf3" translate="yes" xml:space="preserve">
          <source>Location of the file containing the python logging setup</source>
          <target state="translated">Python 로깅 설정이 포함 된 파일의 위치</target>
        </trans-unit>
        <trans-unit id="9219b5bc221ffc04ab4d627cb861926a1138ce8b" translate="yes" xml:space="preserve">
          <source>Location of the zope configuration file.</source>
          <target state="translated">zope 구성 파일의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="ad35419259f9755a767990c904725c885b631c79" translate="yes" xml:space="preserve">
          <source>Next create a logging config::</source>
          <target state="translated">다음으로 로깅 구성을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="116769874195f063f62f14653ee81cfb92069166" translate="yes" xml:space="preserve">
          <source>Running the buildout gives us::</source>
          <target state="translated">빌드 아웃을 실행하면 다음이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="89bc1824e398cf96683dfbc223ebb34785115277" translate="yes" xml:space="preserve">
          <source>Supported options</source>
          <target state="translated">지원되는 옵션</target>
        </trans-unit>
        <trans-unit id="39481c395ed228e693851dafa2a34cb2a7c26427" translate="yes" xml:space="preserve">
          <source>The [celery] section defines all the celery options. Every [celerybeat]</source>
          <target state="translated">[celery] 섹션은 모든 셀러리 옵션을 정의합니다. 모든 [셀러리 비트]</target>
        </trans-unit>
        <trans-unit id="898c2b492a81e33b68e3ffcbee0258eb90d1f8a9" translate="yes" xml:space="preserve">
          <source>The recipe should handle updates as well, trigger this by pinning celery to</source>
          <target state="translated">레시피는 업데이트도 처리해야합니다. 셀러리를</target>
        </trans-unit>
        <trans-unit id="5be0d5016872ace3aeb7985d6eea4ab9b96a94d2" translate="yes" xml:space="preserve">
          <source>Then we'll create a buildout that uses the recipe::</source>
          <target state="translated">그런 다음 레시피를 사용하는 빌드 아웃을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="27b59e04802691a460d6d17a7416d372271294ea" translate="yes" xml:space="preserve">
          <source>This allows you to generate the configuration by using a template for</source>
          <target state="translated">이를 통해 템플릿을 사용하여 구성을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5655d45fe1146146d10155b53f4527dac6b04f0c" translate="yes" xml:space="preserve">
          <source>This file could be generated by a template such as collective.recipe.template.</source>
          <target state="translated">이 파일은 Collective.recipe.template과 같은 템플릿으로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a09d4a3ead953a904f27055a660a3a3205221c3d" translate="yes" xml:space="preserve">
          <source>This recipe was originally based on collective.recipe.celery,</source>
          <target state="translated">이 레시피는 원래 집합체. 레시피. 셀러리를 기반으로했습니다.</target>
        </trans-unit>
        <trans-unit id="bbbf7632d97f14a287f14a743214349deb377ade" translate="yes" xml:space="preserve">
          <source>Uninstalling celery.</source>
          <target state="translated">셀러리 제거.</target>
        </trans-unit>
        <trans-unit id="8361fd4e68fb3fabb5c5fadde4fcae39a24eaa3c" translate="yes" xml:space="preserve">
          <source>Updating celery.</source>
          <target state="translated">셀러리 업데이트.</target>
        </trans-unit>
        <trans-unit id="f76d946c3c77ea56a0c565707a579bde9a1f16b3" translate="yes" xml:space="preserve">
          <source>We can control which scripts are generated using the scripts option.</source>
          <target state="translated">scripts 옵션을 사용하여 생성되는 스크립트를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c36fefd61c136e5912f9004164506e6b28e88976" translate="yes" xml:space="preserve">
          <source>We can include additional eggs using the eggs option::</source>
          <target state="translated">계란 옵션을 사용하여 추가 계란을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0467086898814e5fd10e1c00c3e8858882fbf5b" translate="yes" xml:space="preserve">
          <source>You can use it in a part like this::</source>
          <target state="translated">다음과 같은 부분에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff10c95778481800874389b364aee1d4ef9e7f03" translate="yes" xml:space="preserve">
          <source>[('BROKER_URL', 'sqlite:///celery_broker.db'),</source>
          <target state="translated">[( 'BROKER_URL', 'sqlite : ///celery_broker.db'),</target>
        </trans-unit>
        <trans-unit id="420c2c08945ec32f32e5f8a8673eda514b30cac1" translate="yes" xml:space="preserve">
          <source>[celery]</source>
          <target state="translated">[셀러리]</target>
        </trans-unit>
        <trans-unit id="4196d6e464116842efcc6324037b0167db58bcb2" translate="yes" xml:space="preserve">
          <source>[celerybeat:task1]</source>
          <target state="translated">[celerybeat : task1]</target>
        </trans-unit>
        <trans-unit id="fdac74d74dd7afd7609226c31a81bf9e4b01718e" translate="yes" xml:space="preserve">
          <source>[celerybeat:task2]</source>
          <target state="translated">[celerybeat : task2]</target>
        </trans-unit>
        <trans-unit id="c59cf7a23c56cd58571e21a3fc991021cc88cec6" translate="yes" xml:space="preserve">
          <source>[celerybeat:task3]</source>
          <target state="translated">[celerybeat : task3]</target>
        </trans-unit>
        <trans-unit id="4ff447b8ef42ca51fa6fb287bed8d40f49be58f1" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="translated">]</target>
        </trans-unit>
        <trans-unit id="041cb24e0d88c4d80a93b2b8b28ed57eaaad6a1a" translate="yes" xml:space="preserve">
          <source>add additional dependencies such as ``kombu-sqlalchemy`` or the module(s)</source>
          <target state="translated">``kombu-sqlalchemy ''또는 모듈과 같은 추가 종속성 추가</target>
        </trans-unit>
        <trans-unit id="d2889b747edf0a292586402dda5c86cffa615a9a" translate="yes" xml:space="preserve">
          <source>another version and checking one of the outputted scripts.</source>
          <target state="translated">다른 버전과 출력 된 스크립트 중 하나를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="922548d935089de425ab58411c2dd0d2c24b1035" translate="yes" xml:space="preserve">
          <source>but differs greatly so that it now has become its own package. This recipe</source>
          <target state="translated">그러나 크게 달라서 이제는 자체 패키지가되었습니다. 이 레시피</target>
        </trans-unit>
        <trans-unit id="6a16fe1d34415fd026e69a6eedb61d34fdf9af42" translate="yes" xml:space="preserve">
          <source>celery: Creating directory /sample-buildout/parts/celery.</source>
          <target state="translated">celery : / sample-buildout / parts / celery 디렉토리 생성.</target>
        </trans-unit>
        <trans-unit id="ba2206e9f56753288cfee16d8e43ef99faab8220" translate="yes" xml:space="preserve">
          <source>celery: Generated loader file /sample-buildout/parts/celery/zopeloader.py.</source>
          <target state="translated">celery : 생성 된 로더 파일 /sample-buildout/parts/celery/zopeloader.py.</target>
        </trans-unit>
        <trans-unit id="0879e15c1afa313c8525016048bda57ab67d9312" translate="yes" xml:space="preserve">
          <source>celery[redis]</source>
          <target state="translated">셀러리 [레디 스]</target>
        </trans-unit>
        <trans-unit id="26d42359a60a5c5907097a710971384587c2bd44" translate="yes" xml:space="preserve">
          <source>celery_conf</source>
          <target state="translated">celery_conf</target>
        </trans-unit>
        <trans-unit id="1bbd318ee9186ca63075fe89146e29317fa534ee" translate="yes" xml:space="preserve">
          <source>celery_conf = etc/celery.ini</source>
          <target state="translated">celery_conf = etc / celery.ini</target>
        </trans-unit>
        <trans-unit id="813657ceeddfcdc97f5b984f9329c9145811a68e" translate="yes" xml:space="preserve">
          <source>containing your task definitions.</source>
          <target state="translated">작업 정의를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0c7109557066ab12783cd1bd48e0d143ef9eff27" translate="yes" xml:space="preserve">
          <source>defines a custom loader that can read celery configuration from an ini file.</source>
          <target state="translated">ini 파일에서 셀러리 구성을 읽을 수있는 사용자 정의 로더를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bd111dcb4b343de4ec0a79d2d5ec55a3919c79c4" translate="yes" xml:space="preserve">
          <source>eggs</source>
          <target state="translated">달걀</target>
        </trans-unit>
        <trans-unit id="a3a0e8f820d50fd40f9e51def11ebc004e0e9b23" translate="yes" xml:space="preserve">
          <source>eggs =</source>
          <target state="translated">계란 =</target>
        </trans-unit>
        <trans-unit id="0d475c8b69c3ea3da0eec1370d1d64e144e0bb77" translate="yes" xml:space="preserve">
          <source>example, using collective.recipe.template. The custom loader also bootstraps</source>
          <target state="translated">예를 들어, collect.recipe.template을 사용합니다. 커스텀 로더는 또한 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="83d8e9e427df3deb280a3b972592bbf4c6fc0816" translate="yes" xml:space="preserve">
          <source>import sys</source>
          <target state="translated">수입 시스템</target>
        </trans-unit>
        <trans-unit id="2760ac17dfae5416e6088571d3db899fc6bb4f93" translate="yes" xml:space="preserve">
          <source>it using an ini file.</source>
          <target state="translated">ini 파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="735b341f2b4279e93a82c39f4d74f0db5332b27a" translate="yes" xml:space="preserve">
          <source>logging_conf</source>
          <target state="translated">logging_conf</target>
        </trans-unit>
        <trans-unit id="4b2386df693e4213ebb4bcc5b40a50445b7bdbfb" translate="yes" xml:space="preserve">
          <source>logging_conf = etc/logging.ini</source>
          <target state="translated">logging_conf = etc / logging.ini</target>
        </trans-unit>
        <trans-unit id="ceed171bf219ebb4ff64221c1a80b709af49d264" translate="yes" xml:space="preserve">
          <source>recipe = md.recipe.celery</source>
          <target state="translated">레시피 = md.recipe.celery</target>
        </trans-unit>
        <trans-unit id="c32c10705dda4cde4897cbee740556aa7e5ecaec" translate="yes" xml:space="preserve">
          <source>schedule = {&quot;hour&quot;: 0, &quot;minute&quot;: 0}</source>
          <target state="translated">일정 = { &quot;시간&quot;: 0, &quot;분&quot;: 0}</target>
        </trans-unit>
        <trans-unit id="a7d4ee83856ef043b271c633e78cc3c2ae840c7d" translate="yes" xml:space="preserve">
          <source>schedule = {&quot;minute&quot;: 0}</source>
          <target state="translated">일정 = { &quot;분&quot;: 0}</target>
        </trans-unit>
        <trans-unit id="ca66873faf1a08499df72fb1866ef82d2f9e6945" translate="yes" xml:space="preserve">
          <source>schedule = {&quot;seconds&quot;: 30}</source>
          <target state="translated">일정 = { &quot;초&quot;: 30}</target>
        </trans-unit>
        <trans-unit id="7c8c8bddfc61f4d2fff9cf983742696ac1bb871b" translate="yes" xml:space="preserve">
          <source>section defines an individual task.</source>
          <target state="translated">섹션은 개별 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ccdbe50e75a4a842379219e3774ad6bf4e8ed05b" translate="yes" xml:space="preserve">
          <source>sys.path[0:0] = [</source>
          <target state="translated">sys.path [0 : 0] = [</target>
        </trans-unit>
        <trans-unit id="2821f445a0ffea29b358f8baa84e345255371af0" translate="yes" xml:space="preserve">
          <source>task = myapp.tasks.Task1</source>
          <target state="translated">task = myapp.tasks.Task1</target>
        </trans-unit>
        <trans-unit id="204a2cb8bdf665449ce882002df4d54f118aa514" translate="yes" xml:space="preserve">
          <source>task = myapp.tasks.Task2</source>
          <target state="translated">task = myapp.tasks.Task2</target>
        </trans-unit>
        <trans-unit id="8e7b91fab621f8579f06d94b19ba8b002ebc6dca" translate="yes" xml:space="preserve">
          <source>task = otherapp.tasks.Task3</source>
          <target state="translated">task = otherapp.tasks.Task3</target>
        </trans-unit>
        <trans-unit id="a5ac5c90a393a197baea3ae68e98b401f6883472" translate="yes" xml:space="preserve">
          <source>the ZCA automatically when a worker initializes.</source>
          <target state="translated">작업자가 초기화되면 ZCA가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="72952dd6846e3285207f35209f6f92f2656d107b" translate="yes" xml:space="preserve">
          <source>type = crontab</source>
          <target state="translated">유형 = crontab</target>
        </trans-unit>
        <trans-unit id="5a4363aa93cb6d2f4e47bf9f80129880fd2be0f4" translate="yes" xml:space="preserve">
          <source>type = timedelta</source>
          <target state="translated">유형 = timedelta</target>
        </trans-unit>
        <trans-unit id="765e7bed9a77e2a26aa6e42d422fc16c406442ed" translate="yes" xml:space="preserve">
          <source>zope_conf</source>
          <target state="translated">zope_conf</target>
        </trans-unit>
        <trans-unit id="f00d10e01e6e922747c2292b499754ae13d07275" translate="yes" xml:space="preserve">
          <source>zope_conf = etc/zope.conf</source>
          <target state="translated">zope_conf = etc / zope.conf</target>
        </trans-unit>
        <trans-unit id="07699dba6133bd88c5c26b4d18834b6d0e2758bb" translate="yes" xml:space="preserve">
          <source>{'task1': {'schedule': &amp;lt;crontab: 0 * * * * (m/h/d/dM/MY)&amp;gt;,</source>
          <target state="translated">{ 'task1': { 'schedule': &amp;lt;crontab : 0 * * * * (m / h / d / dM / MY)&amp;gt;,</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
