<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-mail-queue/">
    <body>
      <group id="django-mail-queue">
        <trans-unit id="4b73166a70c3ce456db7670ca8ce8ae541c80487" translate="yes" xml:space="preserve">
          <source>(Alternative) Manual install from Git</source>
          <target state="translated">(대안) Git에서 수동 설치</target>
        </trans-unit>
        <trans-unit id="f47682c3e57eaf56b7d4ef1f55a92e860218d3e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;django-mail-queue&lt;/code&gt; maintains high compatibility, from as old as Django 1.8 on Python 2.7, up to Django 2.2 on
Python 3.7</source>
          <target state="translated">&lt;code&gt;django-mail-queue&lt;/code&gt; 는 Python 2.7의 Django 1.8에서 Python 3.7의 Django 2.2까지 높은 호환성을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="667e56e006bd9f655832bc9a46c709fbdd5cfc5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option 1 - Use pip to install straight from Github&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;옵션 1-pip를 사용하여 Github에서 직접 설치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7270829641e22358852f5c863a655b477d893d65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option 2 - Clone and install manually&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;옵션 2-수동 복제 및 설치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5ac950051090224b2111e1f5c721a7939c0814a" translate="yes" xml:space="preserve">
          <source>Add the below settings, and adjust as needed:</source>
          <target state="translated">아래 설정을 추가하고 필요에 따라 조정합니다.</target>
        </trans-unit>
        <trans-unit id="36c41688b96ebca8546b978b079367e1aa359e74" translate="yes" xml:space="preserve">
          <source>Basic configuration</source>
          <target state="translated">기본 구성</target>
        </trans-unit>
        <trans-unit id="761b2e6735c47586615aa9576ebe49141b91c018" translate="yes" xml:space="preserve">
          <source>Basic usage of the queue programmatically</source>
          <target state="translated">프로그래밍 방식으로 큐의 기본 사용법</target>
        </trans-unit>
        <trans-unit id="2bde5ae656bd2139264044f07a1a6989d69db520" translate="yes" xml:space="preserve">
          <source>Derek passed on ownership of the original &lt;code&gt;django-mail-queue&lt;/code&gt; PyPi package to Privex on 17 Sep 2019</source>
          <target state="translated">Derek은 원본 &lt;code&gt;django-mail-queue&lt;/code&gt; PyPi 패키지의 소유권을 2019 년 9 월 17 일 Privex에 넘겼습니다.</target>
        </trans-unit>
        <trans-unit id="a51a3a9da7c0659fdf3e5aa7a78f9ff79154954f" translate="yes" xml:space="preserve">
          <source>Django Mail Queue</source>
          <target state="translated">Django 메일 대기열</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="df5f930ddf6d3c199ed51c54e0158ce5d4408675" translate="yes" xml:space="preserve">
          <source>Download and install from PyPi using pip (recommended)</source>
          <target state="translated">pip를 사용하여 PyPi에서 다운로드 및 설치 (권장)</target>
        </trans-unit>
        <trans-unit id="bfd1b25a2767184ce0e95e6e2c1add645efcd777" translate="yes" xml:space="preserve">
          <source>First install the package into your project (see above).</source>
          <target state="translated">먼저 프로젝트에 패키지를 설치합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="b89907ff8795459ca187bb2e6cf0e865b7b02352" translate="yes" xml:space="preserve">
          <source>If not using Celery, simply add a cron to your system to run &lt;code&gt;manage.py send_queued_messages&lt;/code&gt; every minute (or however
often you want).</source>
          <target state="translated">Celery를 사용하지 않는 경우 시스템에 크론을 추가하여 &lt;code&gt;manage.py send_queued_messages&lt;/code&gt; 마다 (또는 원하는 빈도로) manage.py send_queued_messages 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="7258eb8d933a675d3ba1e09417cb7646762339cc" translate="yes" xml:space="preserve">
          <source>If our fork has helped you, consider
&lt;a href=&quot;https://www.privex.io/&quot;&gt;grabbing a VPS or Dedicated Server from Privex&lt;/a&gt; - prices start at as little
as US$0.99/mo (yes that's 99 cents a month, and we take cryptocurrency!)</source>
          <target state="translated">포크가 도움이 &lt;a href=&quot;https://www.privex.io/&quot;&gt;되었다면 Privex에서 VPS 또는 전용 서버를 구입하는&lt;/a&gt; 것을 고려해보십시오. 가격은 월 $ 0.99부터 시작합니다 (예, 월 99 센트이며 암호 화폐를받습니다!).</target>
        </trans-unit>
        <trans-unit id="35b22e8840c025d8294173f4f788c3c6a7abef10" translate="yes" xml:space="preserve">
          <source>If you have questions/problems/suggestions the quickest way to reach me to is simply add a GitHub issue to this project.</source>
          <target state="translated">질문 / 문제 / 제안이있는 경우 저에게 연락하는 가장 빠른 방법은이 프로젝트에 GitHub 문제를 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="c18895c2b3efbf62612a4d94cd90da466cf6d874" translate="yes" xml:space="preserve">
          <source>Mail Queue provides an admin interface to view all attempted emails and actions for resending failed messages.</source>
          <target state="translated">메일 대기열은 실패한 메시지를 재전송하기 위해 시도 된 모든 이메일 및 작업을 볼 수있는 관리 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f667e6489dbeb490c28535001eb41d11b9dced12" translate="yes" xml:space="preserve">
          <source>Mail Queue provides an easy and simple way to send email.  Each email is saved and queued up either in
real time or with Celery.  As always, feedback, bugs, and suggestions are welcome.</source>
          <target state="translated">메일 대기열은 이메일을 보내는 쉽고 간단한 방법을 제공합니다. 각 이메일은 실시간으로 또는 Celery를 통해 저장되고 대기열에 추가됩니다. 언제나 그렇듯이 피드백, 버그 및 제안을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="ea5ec94e5688c05860bbb75ec663551f021422fc" translate="yes" xml:space="preserve">
          <source>Once you've added mailqueue to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; plus the basic config in settings.py, run the
migrations to create the tables needed:</source>
          <target state="translated">&lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에 메일 대기열 과 settings.py의 기본 구성 을 추가했으면 마이그레이션을 실행하여 필요한 테이블을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="004425d435d42abd2596ff77792078ef056f7ce7" translate="yes" xml:space="preserve">
          <source>Open settings.py and add mailqueue to your INSTALLED_APPS:</source>
          <target state="translated">settings.py를 열고 INSTALLED_APPS에 메일 대기열을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6633761104ff00592d5d173b0b168a67735dee96" translate="yes" xml:space="preserve">
          <source>Privex publishes the fork under the original PyPi package &lt;code&gt;django-mail-queue&lt;/code&gt; (since v3.2.0).</source>
          <target state="translated">Privex는 원래 PyPi 패키지 &lt;code&gt;django-mail-queue&lt;/code&gt; (v3.2.0 이후)로 포크를 게시합니다 .</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="d277ef578a76655c713bf6ae8962ae6969cf3dea" translate="yes" xml:space="preserve">
          <source>Running the Tests Locally</source>
          <target state="translated">로컬에서 테스트 실행</target>
        </trans-unit>
        <trans-unit id="202b50f5752e22cfbd6dc9ce2ae4c1dab62f5be3" translate="yes" xml:space="preserve">
          <source>Running the migrations</source>
          <target state="translated">마이그레이션 실행</target>
        </trans-unit>
        <trans-unit id="f4ea45d1a6e94ed35fefe5d9df14972f7673ef1f" translate="yes" xml:space="preserve">
          <source>Simple Mail Queuing for Django</source>
          <target state="translated">Django 용 Simple Mail Queuing</target>
        </trans-unit>
        <trans-unit id="d4c07541bdbfa5074759e71d6d796adfc2ff6b19" translate="yes" xml:space="preserve">
          <source>Simply save an email to the database using &lt;code&gt;MailerMessage&lt;/code&gt;, and the queue will pick it up on it's next run.</source>
          <target state="translated">&lt;code&gt;MailerMessage&lt;/code&gt; 를 사용하여 이메일을 데이터베이스에 저장하기 만하면 대기열이 다음 실행시이를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="ad985137d59afb750919aa355aef45cb9a731dfa" translate="yes" xml:space="preserve">
          <source>Support/Help/Spam/Hate Mail</source>
          <target state="translated">지원 / 도움말 / 스팸 / 증오 메일</target>
        </trans-unit>
        <trans-unit id="be1cef3d2f410b13740ac44b7723cbab8fad4317" translate="yes" xml:space="preserve">
          <source>This fork is considered to be actively maintained by Privex for both bug fixes and feature additions since
December 2018.</source>
          <target state="translated">이 포크는 2018 년 12 월 이후로 버그 수정 및 기능 추가를 위해 Privex에서 적극적으로 유지 관리하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f3f56d2abd650483eb33f4ae5555d466b24947e8" translate="yes" xml:space="preserve">
          <source>This is a fork of &lt;a href=&quot;http://github.com/dstegelman/django-mail-queue&quot;&gt;http://github.com/dstegelman/django-mail-queue&lt;/a&gt; maintained by &lt;a href=&quot;https://www.privex.io/&quot;&gt;Privex Inc.&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;https://www.privex.io/&quot;&gt;Privex Inc.에서&lt;/a&gt; 관리하는 &lt;a href=&quot;http://github.com/dstegelman/django-mail-queue&quot;&gt;http://github.com/dstegelman/django-mail-queue&lt;/a&gt; 의 포크입니다 .</target>
        </trans-unit>
        <trans-unit id="d0419da317063feb48ece6fe6fc2c42344793cee" translate="yes" xml:space="preserve">
          <source>To check the compatibility, see &lt;a href=&quot;https://travis-ci.org/Privex/django-mail-queue&quot;&gt;Travis CI&lt;/a&gt;, which runs the unit
tests on a variety of Python and Django versions.</source>
          <target state="translated">호환성을 확인하려면 다양한 Python 및 Django 버전에서 단위 테스트를 실행하는 &lt;a href=&quot;https://travis-ci.org/Privex/django-mail-queue&quot;&gt;Travis CI를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="bb6b89cac481ee5a4a6dc2c4c7ae9ec2cb76a622" translate="yes" xml:space="preserve">
          <source>To send emails in the queue (without Celery), use the management command:</source>
          <target state="translated">Celery없이 대기열에있는 이메일을 보내려면 관리 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="54c3a2409cb1037bdefdc55aa0c9e4bdf28860e8" translate="yes" xml:space="preserve">
          <source>Triggering the queue runner</source>
          <target state="translated">큐 러너 트리거</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
