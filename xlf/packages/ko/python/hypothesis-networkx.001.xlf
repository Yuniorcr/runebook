<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/hypothesis-networkx/">
    <body>
      <group id="hypothesis-networkx">
        <trans-unit id="18f2f0397b5d67e51e6a9db22c3474da8118ea11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://networkx.github.io/documentation/stable/index.html&quot;&gt;Networkx&lt;/a&gt;&lt;a href=&quot;https://hypothesis.readthedocs.io/en/latest/index.html&quot;&gt;Hypothesis&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://networkx.github.io/documentation/stable/index.html&quot;&gt;Networkx &lt;/a&gt;&lt;a href=&quot;https://hypothesis.readthedocs.io/en/latest/index.html&quot;&gt;가설&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f80c5c884248f060994a75117898fe5ce1efb904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connected&lt;/code&gt;: If True, the generated graph is guaranteed to be a single
connected component.</source>
          <target state="translated">&lt;code&gt;connected&lt;/code&gt; : True이면 생성 된 그래프가 하나의 연결된 컴포넌트임을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="14c4e552871dc2e6868b2c99d4f91fc57a994149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edge_data&lt;/code&gt;: The strategy from which edge attributes will be drawn.</source>
          <target state="translated">&lt;code&gt;edge_data&lt;/code&gt; : 에지 속성이 그려지는 전략.</target>
        </trans-unit>
        <trans-unit id="fb2877027fd6a3969a9a3491fd03e49c7e00c88e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;graph_type&lt;/code&gt;: This function (or class) will be called without arguments to
create an empty initial graph.</source>
          <target state="translated">&lt;code&gt;graph_type&lt;/code&gt; :이 함수 (또는 클래스)는 빈 초기 그래프를 생성하기 위해 인수없이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="228813ee7833ade54fe1830fa3e5c191e241f799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_edges&lt;/code&gt; and &lt;code&gt;max_edges&lt;/code&gt;: The minimum and maximum number of edges the
produced graphs will contain. Note that less
edges than &lt;code&gt;min_edges&lt;/code&gt; may be added if there
are not enough nodes, and more than
&lt;code&gt;max_edges&lt;/code&gt; if &lt;code&gt;connected&lt;/code&gt; is True.</source>
          <target state="translated">&lt;code&gt;min_edges&lt;/code&gt; 및 &lt;code&gt;max_edges&lt;/code&gt; : 생성 된 그래프에 포함될 최소 및 최대 간선 수입니다. 노드가 충분하지 않으면 &lt;code&gt;min_edges&lt;/code&gt; 보다 적은 가장자리가 추가 될 수 있고 &lt;code&gt;connected&lt;/code&gt; 경우 &lt;code&gt;max_edges&lt;/code&gt; 보다 많은 가장자리 가 True 인 경우 추가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1523680675ea1464e6039db43234a3915a8de1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_nodes&lt;/code&gt; and &lt;code&gt;max_nodes&lt;/code&gt;: The minimum and maximum number of nodes the
produced graphs will contain.</source>
          <target state="translated">&lt;code&gt;min_nodes&lt;/code&gt; 및 &lt;code&gt;max_nodes&lt;/code&gt; : 생성 된 그래프에 포함될 최소 및 최대 노드 수입니다.</target>
        </trans-unit>
        <trans-unit id="3077b4bc5a32c53a07e0d806d290324ef80dada0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node_data&lt;/code&gt;: The strategy from which node attributes will be drawn.</source>
          <target state="translated">&lt;code&gt;node_data&lt;/code&gt; : 노드 속성을 가져올 전략입니다.</target>
        </trans-unit>
        <trans-unit id="23974fec5117e3befb1a5b2764e6e2a66a390603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node_keys&lt;/code&gt;: Either the strategy from which node keys will be draw, or
None. If None, node keys will be integers from the range (0, number of nodes).</source>
          <target state="translated">&lt;code&gt;node_keys&lt;/code&gt; : 노드 키를 가져올 전략 또는 None. None이면 노드 키는 (0, 노드 수) 범위의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="c6a94e7974062ebfcde4a9198b24d5fc73b7d10c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self_loops&lt;/code&gt;: If False, there will be no self-loops in the generated graph.
Self-loops are edges between a node and itself.</source>
          <target state="translated">&lt;code&gt;self_loops&lt;/code&gt; : False이면 생성 된 그래프에 자체 루프가 없습니다. 자체 루프는 노드와 자체 사이의 가장자리입니다.</target>
        </trans-unit>
        <trans-unit id="68d27e8b9ea8b459f28c2b6e73a6dddc9ac17a64" translate="yes" xml:space="preserve">
          <source>A Hypothesis strategy for generating NetworkX graphs</source>
          <target state="translated">NetworkX 그래프 생성을위한 가설 전략</target>
        </trans-unit>
        <trans-unit id="a33873a3af34018cafd36c00fa03a370d894aa4f" translate="yes" xml:space="preserve">
          <source>Graph generation may be slow for large graphs.</source>
          <target state="translated">큰 그래프의 경우 그래프 생성이 느릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0622434c0ec44e164d7ab784ccf5dd7ab4d72b1" translate="yes" xml:space="preserve">
          <source>Hypothesis-networkx</source>
          <target state="translated">가설 -networkx</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="54f19b28d6d63b310435b8731e6a40479943cb27" translate="yes" xml:space="preserve">
          <source>It currently works for Python 2.7, but this is considered deprecated and
may stop working without notice.</source>
          <target state="translated">현재 Python 2.7에서 작동하지만 더 이상 사용되지 않는 것으로 간주되며 예고없이 작동이 중지 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b36c6077a62ee3e8bd61bbeb730cb7130516f528" translate="yes" xml:space="preserve">
          <source>Known limitations</source>
          <target state="translated">알려진 제한 사항</target>
        </trans-unit>
        <trans-unit id="96e54657f07eedc7877d2e7da4d43b0bb2fd4807" translate="yes" xml:space="preserve">
          <source>Of course this builder is a valid hypothesis strategy, and using it to just
make examples is not super useful. Instead, you can (and should) use it in
your testing framework:</source>
          <target state="translated">물론이 빌더는 유효한 가설 전략이며 예제를 만드는 데 사용하는 것은 그다지 유용하지 않습니다. 대신 테스트 프레임 워크에서 사용할 수 있으며 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="7940867e4c556d32590ca19e1dda8dabf6237141" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max_edges&lt;/code&gt; argument is not always respected if &lt;code&gt;connected&lt;/code&gt; is True.</source>
          <target state="translated">&lt;code&gt;max_edges&lt;/code&gt; 의 경우 인수는 항상 존중하지 않는 &lt;code&gt;connected&lt;/code&gt; True입니다.</target>
        </trans-unit>
        <trans-unit id="d7e176d5f3f3f5b6140f6e08bf0cf1f430c283fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min_edges&lt;/code&gt; argument is not always respected when the produced graph
is too small.</source>
          <target state="translated">&lt;code&gt;min_edges&lt;/code&gt; 의 생성 그래프가 너무 작은 경우 인수는 항상 존중되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="864c9bbbb0d285259c9634b172b73f2f6673d0d9" translate="yes" xml:space="preserve">
          <source>The meaning of the arguments given to &lt;code&gt;graph_builder&lt;/code&gt; are pretty
self-explanatory, but they &lt;em&gt;must&lt;/em&gt; be given as keyword arguments.</source>
          <target state="translated">&lt;code&gt;graph_builder&lt;/code&gt; 에 주어진 인자의 의미는 자명하지만 키워드 인자로 주어져야 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3ec6ea452a26ebff7c1533e6d829b68e45a0bd16" translate="yes" xml:space="preserve">
          <source>The module exposes a single function: &lt;code&gt;graph_builder&lt;/code&gt;. This function is a
hypothesis composite strategy for building graphs. You can use it as follows:</source>
          <target state="translated">모듈은 &lt;code&gt;graph_builder&lt;/code&gt; 라는 단일 함수를 노출합니다 . 이 함수는 그래프 작성을위한 가설 복합 전략입니다. 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e31262ea04bd9fd83ea9773cfe4538cdc9a2ee1" translate="yes" xml:space="preserve">
          <source>There are a few (minor) outstanding issues with this module:</source>
          <target state="translated">이 모듈에는 몇 가지 (사소한) 미해결 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2450516298a0241d1926408cc81afbe4effea91b" translate="yes" xml:space="preserve">
          <source>This module can be installed via &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">이 모듈은 &lt;code&gt;pip&lt;/code&gt; 를 통해 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="302593ac8c660cd1101319f39025a954b334172a" translate="yes" xml:space="preserve">
          <source>This module provides a Hypothesis strategy for generating networkx graphs.
This can be used to efficiently and thoroughly test your code.</source>
          <target state="translated">이 모듈은 networkx 그래프를 생성하기위한 가설 전략을 제공합니다. 이는 코드를 효율적이고 철저하게 테스트하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a907a2a9e2d8f2282b25aa37fedd952420dd3fa" translate="yes" xml:space="preserve">
          <source>User guide</source>
          <target state="translated">사용자 설명서</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
