<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/mikemech/">
    <body>
      <group id="mikemech">
        <trans-unit id="8cb028c41ac8dddff09f8bd884763fee6b047939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mech init&lt;/code&gt; can be used to pull a box file which will be installed and
generate a Mechfile in the current directory. You can also pull boxes
from Vagrant Cloud with &lt;code&gt;mech init freebsd/FreeBSD-11.1-RELEASE&lt;/code&gt;.
See the &lt;code&gt;mech up -h&lt;/code&gt; page for more information.</source>
          <target state="translated">&lt;code&gt;mech init&lt;/code&gt; 는 설치 될 박스 파일을 가져와 현재 디렉토리에 Mechfile을 생성하는 데 사용할 수 있습니다. &lt;code&gt;mech init freebsd/FreeBSD-11.1-RELEASE&lt;/code&gt; 를 사용 하여 Vagrant Cloud에서 상자를 가져올 수도 있습니다 . 자세한 내용은 &lt;code&gt;mech up -h&lt;/code&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d06d13e27ec033cbb806130a20a80837fb97cf61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Newly added &lt;code&gt;mech cloud&lt;/code&gt; capability.&lt;/em&gt; See &lt;code&gt;mech cloud --help&lt;/code&gt; for more info. Ever want to start a VM on another desktop/laptop? With 'mech cloud' you can do just that. 'mech cloud' is similar to the the &lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/context/&quot;&gt;docker context&lt;/a&gt; option. (Note: 'mech cloud' was written before discovering 'docker context', otherwise would have borrowed some of docker's interface/terms.)</source>
          <target state="translated">&lt;em&gt;새로 추가 된 기계 &lt;code&gt;mech cloud&lt;/code&gt; 기능. &lt;/em&gt;자세한 내용은 &lt;code&gt;mech cloud --help&lt;/code&gt; 를 참조하십시오. 다른 데스크톱 / 노트북에서 VM을 시작하고 싶습니까? 'mech cloud'를 사용하면 그렇게 할 수 있습니다. 'mech cloud'는 &lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/context/&quot;&gt;docker 컨텍스트&lt;/a&gt; 옵션 과 유사합니다 . (참고 : 'mech cloud'는 'docker context'를 발견하기 전에 작성되었습니다. 그렇지 않으면 docker의 인터페이스 / 용어 중 일부를 차용했을 것입니다.)</target>
        </trans-unit>
        <trans-unit id="1fe53af1b076e4c0c134246bd64b6f72b0291f72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Newly added virtualbox functionality.&lt;/em&gt; By default, the provider will be &lt;code&gt;vmware&lt;/code&gt;. Tested on Ubuntu (using VMware Workstation and VirtualBox) and Mac (using VirtualBox and VMware Fusion).</source>
          <target state="translated">&lt;em&gt;새로 추가 된 버추얼 박스 기능. &lt;/em&gt;기본적으로 제공자는 &lt;code&gt;vmware&lt;/code&gt; 입니다. Ubuntu (VMware Workstation 및 VirtualBox 사용) 및 Mac (VirtualBox 및 VMware Fusion 사용)에서 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="a5dd195c755fa8213938e06adea9a144d73b7550" translate="yes" xml:space="preserve">
          <source>All &quot;state&quot; will be saved in .mech directory. (boxes and instances)</source>
          <target state="translated">모든 &quot;상태&quot;는 .mech 디렉토리에 저장됩니다. (상자 및 인스턴스)</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">배경</target>
        </trans-unit>
        <trans-unit id="49ee3d97c47674bace9187bcfadb1f23f652fdd1" translate="yes" xml:space="preserve">
          <source>Can have multiple instances of the same box. The default instance name is 'first'.</source>
          <target state="translated">동일한 상자의 여러 인스턴스를 가질 수 있습니다. 기본 인스턴스 이름은 'first'입니다.</target>
        </trans-unit>
        <trans-unit id="ba0f57e26f3ff932c3b2b9a4a592e766ed7ad1ef" translate="yes" xml:space="preserve">
          <source>Copy script to path above</source>
          <target state="translated">위의 경로에 스크립트 복사</target>
        </trans-unit>
        <trans-unit id="6fa247fc52bc94bbf95ba68f69597a9fe743113f" translate="yes" xml:space="preserve">
          <source>Copy script to something in fpath (Note: Run &lt;code&gt;echo $fpath&lt;/code&gt; to show value.)</source>
          <target state="translated">스크립트를 fpath의 항목에 복사합니다 (참고 : 값을 표시하려면 &lt;code&gt;echo $fpath&lt;/code&gt; 를 실행하십시오 .)</target>
        </trans-unit>
        <trans-unit id="44210aefec67da6851b9bd0fd855dd6b425b0fb0" translate="yes" xml:space="preserve">
          <source>Did you know you can now &lt;em&gt;provision&lt;/em&gt; using &lt;code&gt;pyinfra&lt;/code&gt;? See &lt;code&gt;mech provision --help&lt;/code&gt; for more info or look at &lt;a href=&quot;https://github.com/mkinney/mech/blob/master/tests/int/provision/Mechfile#L59&quot;&gt;one of the integration tests&lt;/a&gt; for how to specify &lt;code&gt;pyinfra&lt;/code&gt; provisioning from a remote file. You can also have local files for provisioning.</source>
          <target state="translated">이제 &lt;code&gt;pyinfra&lt;/code&gt; 를 사용하여 &lt;em&gt;프로비저닝&lt;/em&gt; 할 수 있다는 것을 알고 계셨습니까 ? 자세한 내용은 &lt;code&gt;mech provision --help&lt;/code&gt; 를 참조하거나 원격 파일에서 &lt;code&gt;pyinfra&lt;/code&gt; 프로비저닝 을 지정하는 방법에 대한 &lt;a href=&quot;https://github.com/mkinney/mech/blob/master/tests/int/provision/Mechfile#L59&quot;&gt;통합 테스트 중 하나를&lt;/a&gt; 살펴보세요 . 프로비저닝을위한 로컬 파일을 가질 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="83703ee73aae83e9c3e091cfe4a588426c0e4770" translate="yes" xml:space="preserve">
          <source>Example using mech</source>
          <target state="translated">mech 사용 예</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">예 :</target>
        </trans-unit>
        <trans-unit id="6720b418451a36affb85a0c8e370bb5b55f86752" translate="yes" xml:space="preserve">
          <source>For help on any individual command run &lt;code&gt;mech &amp;lt;command&amp;gt; -h&lt;/code&gt;</source>
          <target state="translated">개별 명령에 대한 도움말을 보려면 &lt;code&gt;mech &amp;lt;command&amp;gt; -h&lt;/code&gt; 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="f0cabee218e142f49b36154bc7ef2369407d67df" translate="yes" xml:space="preserve">
          <source>Here is the help info for adding a new instance:</source>
          <target state="translated">다음은 새 인스턴스 추가에 대한 도움말 정보입니다.</target>
        </trans-unit>
        <trans-unit id="d3820cada3522226d850857513421da6b9c88086" translate="yes" xml:space="preserve">
          <source>Here is what it would look like having multiple instance with different providers:</source>
          <target state="translated">다음은 서로 다른 공급자가있는 여러 인스턴스를 갖는 모습입니다.</target>
        </trans-unit>
        <trans-unit id="24f2a1edff3cd012455aa1c1b2849a6f855444c8" translate="yes" xml:space="preserve">
          <source>If having a problem with a command, add the &quot;--debug&quot; option like this:</source>
          <target state="translated">명령에 문제가있는 경우 다음과 같이 &quot;--debug&quot;옵션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8c8b984f321796807c5cc208ea95dd9e943a656c" translate="yes" xml:space="preserve">
          <source>If the box you init was created properly, you will be able to access
the host's current working directory in &lt;code&gt;/mnt/hgfs/mech&lt;/code&gt;. If you are
having trouble with an Ubuntu guest, try running:</source>
          <target state="translated">초기화 한 상자가 올바르게 생성 된 경우 &lt;code&gt;/mnt/hgfs/mech&lt;/code&gt; 에 있는 호스트의 현재 작업 디렉토리에 액세스 할 수 있습니다 . Ubuntu 게스트에 문제가있는 경우 다음을 실행 해보십시오.</target>
        </trans-unit>
        <trans-unit id="a1b88aae34e6633579436978806e4936dc03631f" translate="yes" xml:space="preserve">
          <source>Initializing and using a box from HashiCorp's Vagrant Cloud:</source>
          <target state="translated">HashiCorp의 Vagrant Cloud에서 상자 초기화 및 사용 :</target>
        </trans-unit>
        <trans-unit id="a68c9aa2924b9b2a36923ca1a04c96d0c8f7df6f" translate="yes" xml:space="preserve">
          <source>Initializing and using a machine from HashiCorp's Vagrant Cloud:</source>
          <target state="translated">HashiCorp의 Vagrant Cloud에서 머신 초기화 및 사용 :</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3ac964bc198240bd72a482c33965d4c9be46a7f4" translate="yes" xml:space="preserve">
          <source>One of the authors made this because they don't like VirtualBox and wanted to use vagrant
with VMmare Fusion but was too cheap to buy the Vagrant plugin.</source>
          <target state="translated">저자 중 한 명이 VirtualBox를 좋아하지 않고 VMmare Fusion과 함께 vagrant를 사용하고 싶었지만 Vagrant 플러그인을 구입하기에는 너무 저렴했기 때문에 이것을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="c72a6b88bbcbfb4a06f20d6c0e67941aa5206916" translate="yes" xml:space="preserve">
          <source>Please test and provide any feedback/issues.</source>
          <target state="translated">피드백 / 문제를 테스트하고 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="25bf659f83cf8f69ca10fb2ac5b91007cbcbd7bb" translate="yes" xml:space="preserve">
          <source>Reload .bash_profile</source>
          <target state="translated">.bash_profile 다시로드</target>
        </trans-unit>
        <trans-unit id="43756d57cbbde23ae4782612a1c598787b9b15e5" translate="yes" xml:space="preserve">
          <source>Reload zsh</source>
          <target state="translated">zsh 새로 고침</target>
        </trans-unit>
        <trans-unit id="6297cbef2db228ad2cacf997a1b0bd6e7e3321d2" translate="yes" xml:space="preserve">
          <source>Shared Folders</source>
          <target state="translated">공유 폴더</target>
        </trans-unit>
        <trans-unit id="3167b4265ff4c77bbc92cc4eab731d686fe969e5" translate="yes" xml:space="preserve">
          <source>There is &lt;code&gt;--help&lt;/code&gt; on every operation.</source>
          <target state="translated">모든 작업 에는 &lt;code&gt;--help&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fb358dc8395681d707dd965ee105c855cdb7600" translate="yes" xml:space="preserve">
          <source>To install:</source>
          <target state="translated">설치하기 위해서:</target>
        </trans-unit>
        <trans-unit id="4c281815549b0872f72910d0dc989f228e67b456" translate="yes" xml:space="preserve">
          <source>Tool for command line virtual machines</source>
          <target state="translated">명령 줄 가상 머신 용 도구</target>
        </trans-unit>
        <trans-unit id="3da9948dbd0d32b6147c4b3b39f8c98e220e1e55" translate="yes" xml:space="preserve">
          <source>Try it out by typing &lt;code&gt;mech &amp;lt;tab&amp;gt;&lt;/code&gt;. It should show the options available.</source>
          <target state="translated">&lt;code&gt;mech &amp;lt;tab&amp;gt;&lt;/code&gt; 을 입력하여 사용해보십시오 . 사용 가능한 옵션이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5d2c775e04e910afcacdbf73907b7e2085787fb5" translate="yes" xml:space="preserve">
          <source>Want bash completion for commands/options (aka &quot;tab completion&quot;)?</source>
          <target state="translated">명령 / 옵션에 대한 bash 완성 ( &quot;탭 완성&quot;이라고도 함)을 원하십니까?</target>
        </trans-unit>
        <trans-unit id="437e48de1a0a1c857059c056a45c351ebcca73b6" translate="yes" xml:space="preserve">
          <source>Want zsh completion for commands/options (aka &quot;tab completion&quot;)?</source>
          <target state="translated">명령 / 옵션에 대한 zsh 완성 ( &quot;탭 완성&quot;이라고도 함)을 원하십니까?</target>
        </trans-unit>
        <trans-unit id="2c135ff4ddb4291e8a925fe035d06329fc512847" translate="yes" xml:space="preserve">
          <source>add these lines to ~/.bash_profile</source>
          <target state="translated">이 줄을 ~ / .bash_profile에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c22de15f3b91e5de235e70629b2f2f9ef4d52d10" translate="yes" xml:space="preserve">
          <source>add these lines to ~/.zshrc</source>
          <target state="translated">이 줄을 ~ / .zshrc에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="951f120ff31d9ffa4990456740576c71f454fd6f" translate="yes" xml:space="preserve">
          <source>followed by</source>
          <target state="translated">뒤에</target>
        </trans-unit>
        <trans-unit id="e7fa8f38396ef1332a60b629ba69257c462cbf3b" translate="yes" xml:space="preserve">
          <source>mech</source>
          <target state="translated">기계화</target>
        </trans-unit>
        <trans-unit id="ccaee64a990413a79ea0a0bc86ea24baf7373fcd" translate="yes" xml:space="preserve">
          <source>mech --help</source>
          <target state="translated">mech --help</target>
        </trans-unit>
        <trans-unit id="e753bde131e2fe6949c888483d08788080762ace" translate="yes" xml:space="preserve">
          <source>mech add --help</source>
          <target state="translated">mech add --help</target>
        </trans-unit>
        <trans-unit id="e2e024dbc07c44912c7993d6827d7ae393ad4467" translate="yes" xml:space="preserve">
          <source>mech list</source>
          <target state="translated">기계 목록</target>
        </trans-unit>
        <trans-unit id="d6c8397c654ca8bc0a196c537c7685ced1a4c73c" translate="yes" xml:space="preserve">
          <source>mech up --help</source>
          <target state="translated">mech up --help</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="98be2c19774e620a92e91acb852d45cb5d9c44ac" translate="yes" xml:space="preserve">
          <source>or for the latest:</source>
          <target state="translated">또는 최신 정보 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
