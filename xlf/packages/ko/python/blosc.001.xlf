<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/blosc/">
    <body>
      <group id="blosc">
        <trans-unit id="306f7d8f592613b6ffb22a3c50e9e6cdf296c0b7" translate="yes" xml:space="preserve">
          <source>) on this build-path with the appropriate
OS environment variables</source>
          <target state="translated">) 적절한 OS 환경 변수를 사용하여이 빌드 경로에</target>
        </trans-unit>
        <trans-unit id="ca273357bc1f6243f21cd300385f2cd522cf0998" translate="yes" xml:space="preserve">
          <source>) or disabled (</source>
          <target state="translated">) 또는 비활성화 (</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8c0d479d4bf0f3462961008326688ca35d7abd75" translate="yes" xml:space="preserve">
          <source>. By default all the codecs in Blosc are enabled except Snappy
(due to some issues with C++ with the</source>
          <target state="translated">. 기본적으로 Snappy를 제외한 Blosc의 모든 코덱은 활성화됩니다 (C ++의 일부 문제로 인해</target>
        </trans-unit>
        <trans-unit id="24cebc7d579a65c1685a019a4fda49673f4b29cd" translate="yes" xml:space="preserve">
          <source>. This often causes
trouble with the Snappy codec, which is written in C++, and as a result Snappy
is no longer compiled by default. This problem is not known to affect MSVC or
clang. Snappy is considered optional in Blosc as its compression performance
is below that of the other codecs.</source>
          <target state="translated">. 이로 인해 C ++로 작성된 Snappy 코덱에 문제가 발생하여 Snappy가 더 이상 기본적으로 컴파일되지 않습니다. 이 문제는 MSVC 또는 clang에 영향을 미치는 것으로 알려져 있지 않습니다. Snappy는 압축 성능이 다른 코덱보다 낮기 때문에 Blosc에서 선택 사항으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="75297e2457f06bb491e17495af9d323154ab0d9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enjoy data!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;데이터를 즐기십시오!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8ac573d6d9b75d461d7e1ca9c85ccc7319a3d17" translate="yes" xml:space="preserve">
          <source>After compiling, you can quickly check that the package is sane by
running the doctests in</source>
          <target state="translated">컴파일 후 doctests를 실행하여 패키지가 정상인지 빠르게 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c0b51aa9b1f4d1a6887b4524e2c81517e87f76e" translate="yes" xml:space="preserve">
          <source>Also, Blosc works quite well on ARM processors (even without NEON support yet):</source>
          <target state="translated">또한 Blosc는 ARM 프로세서에서 매우 잘 작동합니다 (아직 NEON을 지원하지 않더라도).</target>
        </trans-unit>
        <trans-unit id="30afc21a61b60c236beb0f946f8bcb31d34b58f5" translate="yes" xml:space="preserve">
          <source>Also, some examples are available on python-blosc wiki page:</source>
          <target state="translated">또한 python-blosc 위키 페이지에서 몇 가지 예를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcc9896e3686796a7f15958417961a869dd71f1a" translate="yes" xml:space="preserve">
          <source>Anaconda:</source>
          <target state="translated">아나콘다:</target>
        </trans-unit>
        <trans-unit id="569390ae26ca5da1c1e096e574657d275ef2d29e" translate="yes" xml:space="preserve">
          <source>Any codec can be enabled (</source>
          <target state="translated">모든 코덱을 활성화 할 수 있습니다 (</target>
        </trans-unit>
        <trans-unit id="71ddc1bc8336589cdd49da454cb853d0937840f3" translate="yes" xml:space="preserve">
          <source>Appveyor:</source>
          <target state="translated">Appveyor :</target>
        </trans-unit>
        <trans-unit id="844550ab738ea00a30b8da99f16182fb8c79d223" translate="yes" xml:space="preserve">
          <source>Author:</source>
          <target state="translated">저자:</target>
        </trans-unit>
        <trans-unit id="6f3b2ca2746598a5c0c336c60d7f1e5542f3b64a" translate="yes" xml:space="preserve">
          <source>Benchmarking</source>
          <target state="translated">벤치마킹</target>
        </trans-unit>
        <trans-unit id="b8e58409dd8ba30f4054eb8efd5a862026c8105a" translate="yes" xml:space="preserve">
          <source>Blosc (&lt;a href=&quot;http://blosc.org&quot;&gt;http://blosc.org&lt;/a&gt;) is a high performance compressor optimized for
binary data.  It has been designed to transmit data to the processor
cache faster than the traditional, non-compressed, direct memory fetch
approach via a memcpy() OS call.</source>
          <target state="translated">Blosc ( &lt;a href=&quot;http://blosc.org&quot;&gt;http://blosc.org&lt;/a&gt; )는 바이너리 데이터에 최적화 된 고성능 압축기입니다. memcpy () OS 호출을 통해 기존의 비 압축 직접 메모리 페치 방식보다 빠르게 데이터를 프로세서 캐시로 전송하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="e6b23e86b7740f8c02b821ca4e934cb6446735a5" translate="yes" xml:space="preserve">
          <source>Blosc data compressor</source>
          <target state="translated">Blosc 데이터 압축기</target>
        </trans-unit>
        <trans-unit id="0fd55b51a04b628cfbcbfb156f94b3cff34aa285" translate="yes" xml:space="preserve">
          <source>Blosc works well for compressing numerical arrays that contains data
with relatively low entropy, like sparse data, time series, grids with
regular-spaced values, etc.</source>
          <target state="translated">Blosc는 희소 데이터, 시계열, 일정한 간격 값이있는 그리드 등과 같이 상대적으로 엔트로피가 낮은 데이터를 포함하는 숫자 배열을 압축하는 데 적합합니다.</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">건물</target>
        </trans-unit>
        <trans-unit id="c5a976de7b5231fa616fbeac8a2d2805c1e84ee2" translate="yes" xml:space="preserve">
          <source>CC</source>
          <target state="translated">CC</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">행동 강령</target>
        </trans-unit>
        <trans-unit id="c173852c1bde916154f0fd3dd8a4e279eb8fd1dd" translate="yes" xml:space="preserve">
          <source>Compiler specific optimisations are automatically enabled by inspecting
the CPU flags building Blosc. They can be manually disabled by setting
the following environmental variables:</source>
          <target state="translated">Blosc를 빌드하는 CPU 플래그를 검사하면 컴파일러 별 최적화가 자동으로 활성화됩니다. 다음 환경 변수를 설정하여 수동으로 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31d20aaa7a4f83b38f279c72da2082275b6834b2" translate="yes" xml:space="preserve">
          <source>Compiling with an installed Blosc library</source>
          <target state="translated">설치된 Blosc 라이브러리로 컴파일</target>
        </trans-unit>
        <trans-unit id="fb2f2ecf23eaf92105cedede8225f24465fcbbb2" translate="yes" xml:space="preserve">
          <source>Contact:</source>
          <target state="translated">접촉:</target>
        </trans-unit>
        <trans-unit id="97bb9934dcd21913a557d0f866f2f6f6900895ae" translate="yes" xml:space="preserve">
          <source>DISABLE_BLOSC_AVX2</source>
          <target state="translated">DISABLE_BLOSC_AVX2</target>
        </trans-unit>
        <trans-unit id="a989e5ec78309b53b60f23de30b35e7503a72071" translate="yes" xml:space="preserve">
          <source>DISABLE_BLOSC_SSE2</source>
          <target state="translated">DISABLE_BLOSC_SSE2</target>
        </trans-unit>
        <trans-unit id="7ca18cd9bc5ff3607a326944fe72195eca705ea4" translate="yes" xml:space="preserve">
          <source>Discussion about this module is welcome in the Blosc list:</source>
          <target state="translated">이 모듈에 대한 토론은 Blosc 목록에서 환영합니다.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="e40ede28fd5990dd24adf36f95917d01627691b9" translate="yes" xml:space="preserve">
          <source>For details on the ARM benchmark see: &lt;a href=&quot;https://github.com/Blosc/python-blosc/issues/105&quot;&gt;https://github.com/Blosc/python-blosc/issues/105&lt;/a&gt;</source>
          <target state="translated">ARM 벤치 마크에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/Blosc/python-blosc/issues/105&quot;&gt;https://github.com/Blosc/python-blosc/issues/105를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bbbe05154cadab8f07232ad344b56d87ab5d0e3c" translate="yes" xml:space="preserve">
          <source>Francesc Alted</source>
          <target state="translated">Francesc Alted</target>
        </trans-unit>
        <trans-unit id="1e9554d33659f8e6e1da82514dd1ba33ad0a8d35" translate="yes" xml:space="preserve">
          <source>Github:</source>
          <target state="translated">Github :</target>
        </trans-unit>
        <trans-unit id="4154018fa4fe8d89dae4d2c12358d35a42de2fc6" translate="yes" xml:space="preserve">
          <source>Gitter:</source>
          <target state="translated">Gitter :</target>
        </trans-unit>
        <trans-unit id="ea9853c03f2ea48721d16ee4813dfb5ff51f5701" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://github.com/Blosc/c-blosc/releases&quot;&gt;https://github.com/Blosc/c-blosc/releases&lt;/a&gt; and download and install
the C-Blosc library.  Then, you can tell python-blosc where is the
C-Blosc library in a couple of ways:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Blosc/c-blosc/releases&quot;&gt;https://github.com/Blosc/c-blosc/releases로&lt;/a&gt; 이동 하여 C-Blosc 라이브러리를 다운로드하여 설치합니다. 그런 다음 몇 가지 방법으로 python-blosc에 C-Blosc 라이브러리가 어디에 있는지 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="539f9075f1115963b758ca3c1539818b9f6c48a1" translate="yes" xml:space="preserve">
          <source>INCLUDE_LZ4</source>
          <target state="translated">INCLUDE_LZ4</target>
        </trans-unit>
        <trans-unit id="92b8f338b217a513f4b13d5dc8e87c461cbb0644" translate="yes" xml:space="preserve">
          <source>INCLUDE_SNAPPY</source>
          <target state="translated">INCLUDE_SNAPPY</target>
        </trans-unit>
        <trans-unit id="aeb8b6622d9d05946d04c010b0e005bb966b63a0" translate="yes" xml:space="preserve">
          <source>INCLUDE_ZLIB</source>
          <target state="translated">INCLUDE_ZLIB</target>
        </trans-unit>
        <trans-unit id="2212a8db764cc45767a86acd14cf340c4573dadf" translate="yes" xml:space="preserve">
          <source>If curious, you may want to run a small benchmark that compares a plain
NumPy array copy against compression through different compressors in
your Blosc build:</source>
          <target state="translated">궁금하다면 Blosc 빌드의 여러 압축기를 통해 압축과 일반 NumPy 배열 사본을 비교하는 작은 벤치 마크를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aac94de6f3cdf07ffec6de88c6304cdfb6bcb8e" translate="yes" xml:space="preserve">
          <source>If you need more control, there are different ways to compile python-blosc,
depending if you want to link with an already installed Blosc library or not.</source>
          <target state="translated">더 많은 제어가 필요한 경우 이미 설치된 Blosc 라이브러리와 연결 하려는지 여부에 따라 python-blosc를 컴파일하는 다른 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f7c74202d54b235dac151ebb60f6c1361f85b32" translate="yes" xml:space="preserve">
          <source>In case you find your own results interesting, please report them back
to the authors!</source>
          <target state="translated">자신의 결과가 흥미로울 경우 저자에게 다시보고하십시오!</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">설치 중</target>
        </trans-unit>
        <trans-unit id="c9db08fa8a8423097b53c88f73664924e3af0150" translate="yes" xml:space="preserve">
          <source>Installing via setuptools</source>
          <target state="translated">setuptools를 통해 설치</target>
        </trans-unit>
        <trans-unit id="b38aeb2f302ef256e3a3b48ac9b724fdc64fea65" translate="yes" xml:space="preserve">
          <source>Just to whet your appetite, here are the results for an Intel Xeon
E5-2695 v3 @ 2.30GHz, running Python 3.5, CentOS 7, but YMMV (and
will vary!):</source>
          <target state="translated">식욕을 자극하기 위해 다음은 Python 3.5, CentOS 7을 실행하는 Intel Xeon E5-2695 v3 @ 2.30GHz에 대한 결과입니다.</target>
        </trans-unit>
        <trans-unit id="0d95e238387210ec6d40b15964d300b404128167" translate="yes" xml:space="preserve">
          <source>Lastly, here is the &lt;a href=&quot;https://www.youtube.com/watch?v=rilU44j_wUU&amp;amp;list=PLNkWzv63CorW83NY3U93gUar645jTXpJF&amp;amp;index=15&quot;&gt;recording&lt;/a&gt;
and the &lt;a href=&quot;http://www.blosc.org/docs/haenel-ep14-compress-me-stupid.pdf&quot;&gt;slides&lt;/a&gt; from the talk
&amp;ldquo;Compress me stupid&amp;rdquo; at the EuroPython 2014.</source>
          <target state="translated">마지막으로 EuroPython 2014에서 &quot;Compress me stupid&quot;강연 의 &lt;a href=&quot;https://www.youtube.com/watch?v=rilU44j_wUU&amp;amp;list=PLNkWzv63CorW83NY3U93gUar645jTXpJF&amp;amp;index=15&quot;&gt;녹음&lt;/a&gt; 과 &lt;a href=&quot;http://www.blosc.org/docs/haenel-ep14-compress-me-stupid.pdf&quot;&gt;슬라이드가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="d2a1123e6461654a07e49c2ea0e3f5b116e7bf06" translate="yes" xml:space="preserve">
          <source>Mailing list</source>
          <target state="translated">메일 링리스트</target>
        </trans-unit>
        <trans-unit id="5ca136fe28a0fd907c7bd7ec4f7d90933bda6008" translate="yes" xml:space="preserve">
          <source>Once installed, you can re-run the tests at any time with:</source>
          <target state="translated">일단 설치되면 다음을 사용하여 언제든지 테스트를 다시 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed41f3a91c4efb0dafdb3aa557d78cf0dcbbe317" translate="yes" xml:space="preserve">
          <source>Or alternatively, you can use the third-party</source>
          <target state="translated">또는 타사를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c826bab3ea34178653f4ea0f0686a8176c6fb9b2" translate="yes" xml:space="preserve">
          <source>Or, install it as a typical Python source package (requires c-compiler and
Python headers) from PyPi using</source>
          <target state="translated">또는 다음을 사용하여 PyPi에서 일반적인 Python 소스 패키지 (c- 컴파일러 및 Python 헤더 필요)로 설치합니다.</target>
        </trans-unit>
        <trans-unit id="2ce9f8ea41cba6368bf2ed457bba86fa278483eb" translate="yes" xml:space="preserve">
          <source>PyPi:</source>
          <target state="translated">PyPi :</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">테스팅</target>
        </trans-unit>
        <trans-unit id="308be0a98cca2304771da77ffe97f0d6090fc34b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all. You can proceed with testing section now.</source>
          <target state="translated">그게 다야. 지금 테스트 섹션을 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ef40047112237951589b1399580a61acf6831c8" translate="yes" xml:space="preserve">
          <source>The Blosc community has adopted a Code of Conduct that we expect project
participants to adhere to.  Please read the &lt;a href=&quot;CODE_OF_CONDUCT.md&quot;&gt;full text&lt;/a&gt;
so that you can understand what actions will and will not be tolerated.</source>
          <target state="translated">Blosc 커뮤니티는 프로젝트 참가자가 준수해야 할 행동 강령을 채택했습니다. 어떤 행동이 용인되고 용인되지 않는지 이해할 수 있도록 &lt;a href=&quot;CODE_OF_CONDUCT.md&quot;&gt;전체 텍스트를&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="ea74ef142347113e92939064cdbcea8f037842f1" translate="yes" xml:space="preserve">
          <source>The Sphinx based documentation is here:</source>
          <target state="translated">Sphinx 기반 문서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2d9de4f417e9427d4ef5d7ffab47f6cf69eb4f62" translate="yes" xml:space="preserve">
          <source>The software is licenses under a 3-Clause BSD licsense. A copy of the
python-blosc license can be found in &lt;a href=&quot;LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;. A copy of all licenses can be
found in &lt;a href=&quot;LICENSES/&quot;&gt;LICENSES/&lt;/a&gt;.</source>
          <target state="translated">이 소프트웨어는 3-Clause BSD 라이선스에 따른 라이선스입니다. python-blosc 라이센스의 사본은 &lt;a href=&quot;LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; 에서 찾을 수 있습니다 . 모든 라이선스의 사본은 &lt;a href=&quot;LICENSES/&quot;&gt;LICENSES /&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58e26d28fc690962e157dd98c876b78b26347ff5" translate="yes" xml:space="preserve">
          <source>This approach uses pre-built, fully optimized versions of Blosc built via
CMake.</source>
          <target state="translated">이 접근 방식은 CMake를 통해 빌드 된 Blosc의 사전 빌드되고 완전히 최적화 된 버전을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="052f6d688a3afdd321af78da204ac5569b57b883" translate="yes" xml:space="preserve">
          <source>Travis CI:</source>
          <target state="translated">Travis CI :</target>
        </trans-unit>
        <trans-unit id="4274d554b3145370c23778bbf09ce9ba3452fd2a" translate="yes" xml:space="preserve">
          <source>URL:</source>
          <target state="translated">URL :</target>
        </trans-unit>
        <trans-unit id="7bec331040f3f70e2d692a486355511b0f3c666a" translate="yes" xml:space="preserve">
          <source>Using a flag:</source>
          <target state="translated">플래그 사용 :</target>
        </trans-unit>
        <trans-unit id="e3ac499ec5fc66c5e2423f485e2a2e22781c5cbb" translate="yes" xml:space="preserve">
          <source>Using an environment variable:</source>
          <target state="translated">환경 변수 사용 :</target>
        </trans-unit>
        <trans-unit id="8e94246307cfc5038f114589e093dcb0ea2704ae" translate="yes" xml:space="preserve">
          <source>Valentin Haenel</source>
          <target state="translated">발렌틴 헤넬</target>
        </trans-unit>
        <trans-unit id="f8c94a3b4b1ef4285d46fa4ec2b367def151945e" translate="yes" xml:space="preserve">
          <source>What it is</source>
          <target state="translated">그것은 무엇입니까</target>
        </trans-unit>
        <trans-unit id="73758d71bb35948d9d84a937a59d064e14d18382" translate="yes" xml:space="preserve">
          <source>You can install binary packages with</source>
          <target state="translated">바이너리 패키지를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="5f7cdeb1e9f5dd079ce43da43c52ebf6c4e68dcf" translate="yes" xml:space="preserve">
          <source>blosc/test.py</source>
          <target state="translated">blosc / test.py</target>
        </trans-unit>
        <trans-unit id="9ac0de4daba957020c6a15ddddd1c03d76de4098" translate="yes" xml:space="preserve">
          <source>blosc@googlegroups.com</source>
          <target state="translated">blosc@googlegroups.com</target>
        </trans-unit>
        <trans-unit id="c15554fb9cc74ff0bedcd0e95cb60daf8fe29dda" translate="yes" xml:space="preserve">
          <source>comes with the Blosc sources with it and can be built with:</source>
          <target state="translated">Blosc 소스와 함께 제공되며 다음으로 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93e9a081a8643853030bf2c6cdb69e594aea735a" translate="yes" xml:space="preserve">
          <source>conda</source>
          <target state="translated">콘다</target>
        </trans-unit>
        <trans-unit id="bbf2891940e505c4b9e433226b4e5c30e8a637ea" translate="yes" xml:space="preserve">
          <source>faltet@gmail.com</source>
          <target state="translated">faltet@gmail.com</target>
        </trans-unit>
        <trans-unit id="fce79b7fe1fee3a977fa1bd4efbd9e9a06c29c14" translate="yes" xml:space="preserve">
          <source>gcc</source>
          <target state="translated">gcc</target>
        </trans-unit>
        <trans-unit id="ce229d12ad5b8faddeceb209090e87fc7c9e0e27" translate="yes" xml:space="preserve">
          <source>is limited to using the compiler specified in the environment
variable</source>
          <target state="translated">환경 변수에 지정된 컴파일러 사용으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="ed02b419c71a40639ee3cab560c7f968bea3ca80" translate="yes" xml:space="preserve">
          <source>nosetests</source>
          <target state="translated">코 테스트</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="fe483860332488bc52b4a123ce793fe2880b2e2b" translate="yes" xml:space="preserve">
          <source>python-blosc</source>
          <target state="translated">파이썬 -blosc</target>
        </trans-unit>
        <trans-unit id="4ae0bf4f975c855af7528a539a12a585a85a3712" translate="yes" xml:space="preserve">
          <source>python-blosc a Python package that wraps Blosc.  python-blosc supports
Python 3.6 or higher versions.</source>
          <target state="translated">python-blosc Blosc를 래핑하는 Python 패키지. python-blosc는 Python 3.6 이상 버전을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="97cb05aa36628f817f4bc82cf0a9b29de7c3ad90" translate="yes" xml:space="preserve">
          <source>python-blosc: a Python wrapper for the extremely fast Blosc compression library</source>
          <target state="translated">python-blosc : 매우 빠른 Blosc 압축 라이브러리를위한 Python 래퍼</target>
        </trans-unit>
        <trans-unit id="543ba5faab29be163929a8cd3b2c4bafb96cdc17" translate="yes" xml:space="preserve">
          <source>script:</source>
          <target state="translated">스크립트:</target>
        </trans-unit>
        <trans-unit id="bff5288d43b5b0b423a623fd27ab60ad387791d3" translate="yes" xml:space="preserve">
          <source>setuptools</source>
          <target state="translated">설정 도구</target>
        </trans-unit>
        <trans-unit id="073ba70e5cbdde5f61f4ad1444171350b89e0e3b" translate="yes" xml:space="preserve">
          <source>toolchain).</source>
          <target state="translated">툴체인).</target>
        </trans-unit>
        <trans-unit id="4d788a4791b20ad4dbd4ea5ca6d6816777cd3816" translate="yes" xml:space="preserve">
          <source>valentin@haenel.co</source>
          <target state="translated">valentin@haenel.co</target>
        </trans-unit>
        <trans-unit id="74bf0e2b143e404ea881b20d88b63c3722a08121" translate="yes" xml:space="preserve">
          <source>which on posix systems is usually</source>
          <target state="translated">posix 시스템에서는 일반적으로</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
