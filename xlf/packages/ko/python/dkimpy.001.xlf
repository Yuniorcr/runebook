<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/dkimpy/">
    <body>
      <group id="dkimpy">
        <trans-unit id="8d3a086dffca43ad509cc1ba3ccf3318d8e9d04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;python2.7 ./testarc.py sign runners/arcsigntest.py&lt;/code&gt;&lt;code&gt;python2.7 ./testarc.py validate runners/arcverifytest.py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;python2.7 ./testarc.py sign runners/arcsigntest.py&lt;/code&gt; &lt;code&gt;python2.7 ./testarc.py validate runners/arcverifytest.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc0f6b52af9dad59773440644b7aa4d7fc9369e0" translate="yes" xml:space="preserve">
          <source>A non-tlsrpt signed with a key record with s=tlsrpt won't verify.  Since the
service type (s=) is optional in the DKIM public key record, it is not
required by RFC 8460.  When checking for a tlsrpt signature, set the tlsrpt=
flag when verifying the signature:</source>
          <target state="translated">s = tlsrpt로 키 레코드로 서명 된 비 tlsrpt는 확인되지 않습니다. 서비스 유형 (s =)은 DKIM 공개 키 레코드에서 선택 사항이므로 RFC 8460에서는 필요하지 않습니다. tlsrpt 서명을 확인할 때 서명을 확인할 때 tlsrpt = 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="11e6893885b0568469a52a9f24d8217239c2d375" translate="yes" xml:space="preserve">
          <source>ARC (Authenticated Receive Chain)</source>
          <target state="translated">ARC (Authenticated Receive Chain)</target>
        </trans-unit>
        <trans-unit id="f8ef5951b6b04fb2e2752cd47024b392d06fb952" translate="yes" xml:space="preserve">
          <source>ASYNC SUPPORT</source>
          <target state="translated">ASYNC 지원</target>
        </trans-unit>
        <trans-unit id="aca6e1554e0e3b9b985f937f066a01451158ca5e" translate="yes" xml:space="preserve">
          <source>Alternatively, if you have testrepository installed:</source>
          <target state="translated">또는 testrepository가 설치된 경우 :</target>
        </trans-unit>
        <trans-unit id="e77ebc34423221e8ef95c9546dbcb813a3d8700c" translate="yes" xml:space="preserve">
          <source>An online version of the package documentation for the most recent release can
be found at:</source>
          <target state="translated">최신 릴리스에 대한 패키지 문서의 온라인 버전은 다음에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce8a3fd464ba3c0c7f6a9a8b0b44dac95d817624" translate="yes" xml:space="preserve">
          <source>As of 0.6.0, all tests pass for both python2.7 and python3. The test suite
ships with test runners for dkimpy.  After downloading the test suite, you
can run the signing and validation tests like this:</source>
          <target state="translated">0.6.0부터 모든 테스트는 python2.7 및 python3 모두에 대해 통과합니다. 테스트 스위트는 dkimpy 용 테스트 실행기와 함께 제공됩니다. 테스트 스위트를 다운로드 한 후 다음과 같이 서명 및 유효성 검사 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3dec25d5698a95a2aa3f1369f43c5952e450174" translate="yes" xml:space="preserve">
          <source>As of version 0.6.0, dkimpy provides experimental support for ARC (Authenticated
Received Chain).  See RFC 8617 for the current version of ARC:</source>
          <target state="translated">0.6.0 버전부터 dkimpy는 ARC (Authenticated Received Chain)에 대한 실험적 지원을 제공합니다. ARC의 최신 버전은 RFC 8617을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f389fc5f7b8a2b5dda9548a6d0045f21462eb523" translate="yes" xml:space="preserve">
          <source>As of version 0.7, experimental signing and verifying of DKIM Ed25519
signatures is supported as described in draft-ietf-dcrup-dkim-crypto:</source>
          <target state="translated">버전 0.7부터는 draft-ietf-dcrup-dkim-crypto에 설명 된대로 DKIM Ed25519 서명의 실험적 서명 및 확인이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0a6ddba6491f62e7c1b97ba155889d2d911c480b" translate="yes" xml:space="preserve">
          <source>As of version 0.7, the dkimpy defaults largely support these requirements.</source>
          <target state="translated">버전 0.7부터 dkimpy 기본값은 주로 이러한 요구 사항을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="59328b3f4d6903db2528edd2f47886a5880c85a4" translate="yes" xml:space="preserve">
          <source>As of version 1.0, an alternative to dkim.verify for use in an async
environment is provied.  It requires aiodns, &lt;a href=&quot;https://pypi.org/project/aiodns/&quot;&gt;https://pypi.org/project/aiodns/&lt;/a&gt;.
Here is a simple example of dkim.verify_async usage:</source>
          <target state="translated">버전 1.0부터는 비동기 환경에서 사용하기위한 dkim.verify의 대안이 제공됩니다. aiodns, &lt;a href=&quot;https://pypi.org/project/aiodns/&quot;&gt;https://pypi.org/project/aiodns/&lt;/a&gt; 가 필요합니다 . 다음은 dkim.verify_async 사용법의 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="ce0c28fb1b1b61540fd3e229db11ad5f78ce4671" translate="yes" xml:space="preserve">
          <source>As of version 1.0, the RFC 8460 tlsrpt service type is supported:</source>
          <target state="translated">버전 1.0부터 RFC 8460 tlsrpt 서비스 유형이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="44d429f652912126866fef5f933aa37deb70bb54" translate="yes" xml:space="preserve">
          <source>Both DKIM ed25519 and ARC are now considered stable (no longer experimantal).</source>
          <target state="translated">DKIM ed25519와 ARC는 이제 안정적인 것으로 간주됩니다 (더 이상 실험적이지 않음).</target>
        </trans-unit>
        <trans-unit id="bcc2a38a09252bcaee19abe06a73826b80af8197" translate="yes" xml:space="preserve">
          <source>Bug reports may be submitted to the bug tracker for the dkimpy project on
launchpad.</source>
          <target state="translated">런치 패드에서 dkimpy 프로젝트의 버그 추적기에 버그 보고서를 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f263fd820c8e6435c6f63c52c018c23fb95a54a3" translate="yes" xml:space="preserve">
          <source>DKIM (DomainKeys Identified Mail), ARC (Authenticated Receive Chain), and TLSRPT (TLS Report) email signing and verification</source>
          <target state="translated">DKIM (DomainKeys Identified Mail), ARC (Authenticated Receive Chain) 및 TLSRPT (TLS Report) 이메일 서명 및 확인</target>
        </trans-unit>
        <trans-unit id="ec9fadb3d4e74c3f8498356ae70d7e1a22f4bd72" translate="yes" xml:space="preserve">
          <source>DKIM RSA MODERNIZATION (RFC 8301)</source>
          <target state="translated">DKIM RSA 현대화 (RFC 8301)</target>
        </trans-unit>
        <trans-unit id="e1214415c84a58cfd9aa22a1f3f96e8a7cdffb15" translate="yes" xml:space="preserve">
          <source>DKIM SCRIPTS</source>
          <target state="translated">DKIM 스크립트</target>
        </trans-unit>
        <trans-unit id="96cc00d75846a718bd722cef8a33a50a6d0f5535" translate="yes" xml:space="preserve">
          <source>DOCUMENTATION</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="bd59b56eac0dd84f3f89df05a9075965e7765103" translate="yes" xml:space="preserve">
          <source>Dependencies will be automatically included for normal DKIM usage.  The
extras_requires feature 'ed25519' will add the dependencies needed for signing
and verifying using the new DCRUP ed25519-sha256 algorithm.  The
extras_requires feature 'ARC' will add the extra dependencies needed for ARC.
Similarly, extras_requires feature 'asyncio' will add the extra dependencies
needed for asyncio.</source>
          <target state="translated">일반적인 DKIM 사용을 위해 종속성이 자동으로 포함됩니다. extras_requires 기능 'ed25519'는 새로운 DCRUP ed25519-sha256 알고리즘을 사용하여 서명 및 확인하는 데 필요한 종속성을 추가합니다. extras_requires 기능 'ARC'는 ARC에 필요한 추가 종속성을 추가합니다. 마찬가지로 extras_requires 기능 'asyncio'는 asyncio에 필요한 추가 종속성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a849d1a30c8b30689e4bee6c0a3b115989082d3d" translate="yes" xml:space="preserve">
          <source>ED25519 (RFC 8463) SUPPORT</source>
          <target state="translated">ED25519 (RFC 8463) 지원</target>
        </trans-unit>
        <trans-unit id="489edc9160737f1f5321c8439e0d90f85d95108c" translate="yes" xml:space="preserve">
          <source>FEEDBACK</source>
          <target state="translated">피드백</target>
        </trans-unit>
        <trans-unit id="a8d32bf50a033f9c0c87f1e48c4003946cbdf5d5" translate="yes" xml:space="preserve">
          <source>Friendly fork of:
&lt;a href=&quot;http://hewgill.com/pydkim/&quot;&gt;http://hewgill.com/pydkim/&lt;/a&gt;</source>
          <target state="translated">친절한 포크 : &lt;a href=&quot;http://hewgill.com/pydkim/&quot;&gt;http://hewgill.com/pydkim/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d09dba09f4e15504911bf4a5e67189762904dd8" translate="yes" xml:space="preserve">
          <source>INSTALLATION</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="0270ca97abe5bddc53ed95fb7179da4406621a18" translate="yes" xml:space="preserve">
          <source>INTRODUCTION</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="71cf1d137d52afa699a3484264318134b460e560" translate="yes" xml:space="preserve">
          <source>If tlsrpt='strict', only public key records with s=tlsrpt will be considered
valid.  If set to tlsrpt=True, the service type is not required, but other
RFC 8460 requirements are applied.</source>
          <target state="translated">tlsrpt = 'strict'인 경우 s = tlsrpt 인 공개 키 레코드 만 유효한 것으로 간주됩니다. tlsrpt = True로 설정하면 서비스 유형이 필요하지 않지만 다른 RFC 8460 요구 사항이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="74d03048827618ae51470b9ae637726fb980ffb6" translate="yes" xml:space="preserve">
          <source>In addition to arcsign and arcverify, the dkim module now provides
arc_sign and arc_verify functions as well as an ARC class.</source>
          <target state="translated">arcsign 및 arcverify 외에도 dkim 모듈은 이제 arc_sign 및 arc_verify 함수와 ARC 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0dc0921e896028f9658fbbee5267443a03b4aaa9" translate="yes" xml:space="preserve">
          <source>In version 0.9.0, the default set of header fields that are oversigned was
changed from 'from', 'subject', 'date' to 'from' to reduce fragility of
signatures.  To restore the previous behavior, you can add them back after
instantiating your DKIM class using the add_frozen function as shown in the
following example:</source>
          <target state="translated">버전 0.9.0에서는 서명의 취약성을 줄이기 위해 오버 서명 된 헤더 필드의 기본 세트가 'from', 'subject', 'date'에서 'from'으로 변경되었습니다. 이전 동작을 복원하려면 다음 예제와 같이 add_frozen 함수를 사용하여 DKIM 클래스를 인스턴스화 한 후 다시 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab969599892cadb52ed87bf3fab0cd05f5a80dd2" translate="yes" xml:space="preserve">
          <source>It is possible to override the minimum key size to a lower value, but this is
strongly discouraged.  As of 2018, keys much smaller than the minimum are not
difficult to factor.</source>
          <target state="translated">최소 키 크기를 더 낮은 값으로 재정의 할 수 있지만 이는 권장되지 않습니다. 2018 년 현재 최소값보다 훨씬 작은 키는 고려하기 어렵지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d12b0674e1b8bc9ae3fb271e0e358c2d83fa64b6" translate="yes" xml:space="preserve">
          <source>It removed use of rsa-sha1.</source>
          <target state="translated">rsa-sha1의 사용을 제거했습니다.</target>
        </trans-unit>
        <trans-unit id="24fcd5145fab2b2b850be3672cf33e0107a335c1" translate="yes" xml:space="preserve">
          <source>It set the minimum valid RSA key size to 1024 bits.</source>
          <target state="translated">최소 유효 RSA 키 크기를 1024 비트로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f065b8a3f0869a873c16354cafdc505f7f200ec1" translate="yes" xml:space="preserve">
          <source>PyNaCl.  Needed for use of ed25519 capability.</source>
          <target state="translated">PyNaCl. ed25519 기능 사용에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cef2f67f3f2fc797a473c66a5d02939002e43852" translate="yes" xml:space="preserve">
          <source>Python 2.x &amp;gt;= 2.7, or Python 3.x &amp;gt;= 3.5.  Recent versions have not been
tested on python &amp;lt; 2.7 or python3 &amp;lt; 3.4, but may still work on python2.6
and python 3.1 - 3.3.</source>
          <target state="translated">Python 2.x&amp;gt; = 2.7 또는 Python 3.x&amp;gt; = 3.5. 최신 버전은 python &amp;lt;2.7 또는 python3 &amp;lt;3.4에서 테스트되지 않았지만 여전히 python2.6 및 python 3.1-3.3에서 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f121318efb144a8b6001419391a5b20c6c3f189" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="ad6a3aaa6803d6890b4d7e8ddea3c0ee7043bee3" translate="yes" xml:space="preserve">
          <source>RFC8301 updated DKIM requirements in two ways:</source>
          <target state="translated">RFC8301은 두 가지 방법으로 DKIM 요구 사항을 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="cb73eb0155af5a3da3bb4a63646b40201ab650c4" translate="yes" xml:space="preserve">
          <source>TESTING</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="13140b8510e3ac35b8de3de35a3e066617f9bc67" translate="yes" xml:space="preserve">
          <source>TLSRPT (TLS Report)</source>
          <target state="translated">TLSRPT (TLS 보고서)</target>
        </trans-unit>
        <trans-unit id="75fbb2b5f3cd99fcaedd44f9393bf3d038d837e1" translate="yes" xml:space="preserve">
          <source>The RFC that documents ed25519 DKIM signatures, RFC 8463, has been released
and dkimpy 0.7 and later are aligned to its requirements.  As of 0.8, ed25519
need not be considered experimental.  The dkimpy implementation has
successfully interoperated with three other implementations and the technical
parameters for ed25519-sha256 are defined and stable.</source>
          <target state="translated">ed25519 DKIM 서명을 문서화하는 RFC 인 RFC 8463이 출시되었으며 dkimpy 0.7 이상이 해당 요구 사항에 부합합니다. 0.8부터 ed25519는 실험적인 것으로 간주 할 필요가 없습니다. dkimpy 구현은 다른 세 가지 구현과 성공적으로 상호 운용되었으며 ed25519-sha256에 대한 기술 매개 변수가 정의되고 안정적입니다.</target>
        </trans-unit>
        <trans-unit id="d4d386e3fdf317fbd4355cba3435eabd31287f90" translate="yes" xml:space="preserve">
          <source>The code for rsa-sha1 signing and verification is retained, but not used for
signing by default.  Future releases will raise warnings and then errors when
verifying rsa-sha1 signatures.  There are still some significant users of
rsa-sha1 signatures, so operationally it's premature to disable verification
of rsa-sha1.</source>
          <target state="translated">rsa-sha1 서명 및 확인을위한 코드는 유지되지만 기본적으로 서명에 사용되지 않습니다. 향후 릴리스에서는 rsa-sha1 서명을 확인할 때 경고와 오류가 발생합니다. 여전히 rsa-sha1 서명의 중요한 사용자가 있으므로 운영상 rsa-sha1 확인을 비활성화하는 것은 시기상조입니다.</target>
        </trans-unit>
        <trans-unit id="d4f4e2b3ddd7d5643d5cd83412c4234ef09db56f" translate="yes" xml:space="preserve">
          <source>The dkimpy library offers one module called dkim. The sign() function takes an
RFC822 formatted message, along with some signing options, and returns a
DKIM-Signature header line that can be prepended to the message. The verify()
function takes an RFC822 formatted message, and returns True or False depending
on whether the signature verifies correctly.  There is also a DKIM class which
can be used to perform these functions in a more modern way.</source>
          <target state="translated">dkimpy 라이브러리는 dkim이라는 모듈을 제공합니다. sign () 함수는 일부 서명 옵션과 함께 RFC822 형식의 메시지를 가져와 메시지 앞에 추가 할 수있는 DKIM-Signature 헤더 행을 반환합니다. verify () 함수는 RFC822 형식의 메시지를 사용하고 서명이 올바르게 확인되는지 여부에 따라 True 또는 False를 반환합니다. 이러한 기능을보다 현대적인 방식으로 수행하는 데 사용할 수있는 DKIM 클래스도 있습니다.</target>
        </trans-unit>
        <trans-unit id="64ca33a38391fc255920285ab7bd173b508288af" translate="yes" xml:space="preserve">
          <source>The identity is optional and defaults to &quot;@domain&quot;.</source>
          <target state="translated">ID는 선택 사항이며 기본값은 &quot;@domain&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="e52a96aeb69d61380b4729d3b39cdae36a933903" translate="yes" xml:space="preserve">
          <source>The included ARC tests are very limited.  The primary testing method for ARC
is using the ARC test suite: &lt;a href=&quot;https://github.com/ValiMail/arc_test_suite&quot;&gt;https://github.com/ValiMail/arc_test_suite&lt;/a&gt;</source>
          <target state="translated">포함 된 ARC 테스트는 매우 제한적입니다. ARC의 기본 테스트 방법은 ARC 테스트 스위트를 사용하는 것입니다 : &lt;a href=&quot;https://github.com/ValiMail/arc_test_suite&quot;&gt;https://github.com/ValiMail/arc_test_suite&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04bc06f57ace77f5f4fdff9e612003021e240f42" translate="yes" xml:space="preserve">
          <source>This feature requires python3.5 or newer.</source>
          <target state="translated">이 기능을 사용하려면 python3.5 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c8aa6b3456fcbe37292e75fae1592f248e050070" translate="yes" xml:space="preserve">
          <source>This is dkimpy 1.0.5.</source>
          <target state="translated">이것은 dkimpy 1.0.5입니다.</target>
        </trans-unit>
        <trans-unit id="1235c266da2f83d4a9cc879c51a66b2e6921596b" translate="yes" xml:space="preserve">
          <source>This package includes a scripts and man pages.  For those to be installed when
installing using setup.py, the following incantation is required because
setuptools developers decided not being able to do this by default is a
feature:</source>
          <target state="translated">이 패키지에는 스크립트와 매뉴얼 페이지가 포함되어 있습니다. setup.py를 사용하여 설치할 때 설치되는 항목의 경우, setuptools 개발자가 기본적으로이 작업을 수행 할 수없는 것이 기능이라고 결정했기 때문에 다음과 같은 명령이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2d99093de9a7aaf0e70ea34614ee21556d956127" translate="yes" xml:space="preserve">
          <source>Three helper programs are also supplied: dknewkey, dkimsign and
dkimverify</source>
          <target state="translated">세 가지 도우미 프로그램도 제공됩니다 : dknewkey, dkimsign 및 dkimverify</target>
        </trans-unit>
        <trans-unit id="76f5486cbdbbf6438521a6ba1202a8052cfe4b5f" translate="yes" xml:space="preserve">
          <source>To install from pypi with the required optional depenencies, use the ed25519
option:</source>
          <target state="translated">필수 선택적 종속성으로 pypi에서 설치하려면 ed25519 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9943d636201e14a401ee5b6c460169811adfc869" translate="yes" xml:space="preserve">
          <source>To run dkimpy's test suite:</source>
          <target state="translated">dkimpy의 테스트 스위트를 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="cf3bfa9a159c5a5ddc20da1eccd6bbddbdc037e4" translate="yes" xml:space="preserve">
          <source>USAGE</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">버전</target>
        </trans-unit>
        <trans-unit id="ce4d281d05b0ac9f3393e1ea27028a7203d449e1" translate="yes" xml:space="preserve">
          <source>You should install all optional dependencies required for the test suite, e.g.
by creating a virtualenv and using:</source>
          <target state="translated">가상 환경을 만들고 다음을 사용하여 테스트 스위트에 필요한 모든 선택적 종속성을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="1f1a4ec3397fba515eb323af80cab62d90e8db74" translate="yes" xml:space="preserve">
          <source>aiodns.  Needed for asycnio (Requires python3.5 or later)</source>
          <target state="translated">aiodns. asycnio에 필요 (python3.5 이상 필요)</target>
        </trans-unit>
        <trans-unit id="c34e4fc23f6d61858bf221763be15c45c8dee057" translate="yes" xml:space="preserve">
          <source>argparse.  Standard library in python2.7 and later.</source>
          <target state="translated">argparse. python2.7 이상의 표준 라이브러리.</target>
        </trans-unit>
        <trans-unit id="e07464e2a9c9851a4e7e547acd9e6aead83b1572" translate="yes" xml:space="preserve">
          <source>authres.  Needed for ARC.</source>
          <target state="translated">authres. ARC에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="933676bf55e4c9eedad95fa27526d4596ad8147d" translate="yes" xml:space="preserve">
          <source>dkimpy - DKIM (DomainKeys Identified Mail)
&lt;a href=&quot;https://launchpad.net/dkimpy/&quot;&gt;https://launchpad.net/dkimpy/&lt;/a&gt;</source>
          <target state="translated">dkimpy-DKIM (DomainKeys Identified Mail) &lt;a href=&quot;https://launchpad.net/dkimpy/&quot;&gt;https://launchpad.net/dkimpy/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d138d38490a80f7a6d20cdd29770954815c11dc4" translate="yes" xml:space="preserve">
          <source>dkimpy is a library that implements DKIM (DomainKeys Identified Mail) email
signing and verification.  Basic DKIM requirements are defined in RFC 6376:</source>
          <target state="translated">dkimpy는 DKIM (DomainKeys Identified Mail) 이메일 서명 및 확인을 구현하는 라이브러리입니다. 기본 DKIM 요구 사항은 RFC 6376에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b75a5c75eb4452a16e6984c6208a88a20a7b986d" translate="yes" xml:space="preserve">
          <source>dkimsign is a filter that reads an RFC822 message on standard input, and
writes the same message on standard output with a DKIM-Signature line
prepended. The signing options are specified on the command line:</source>
          <target state="translated">dkimsign은 표준 입력에서 RFC822 메시지를 읽고 DKIM-Signature 줄이 추가 된 표준 출력에 동일한 메시지를 쓰는 필터입니다. 서명 옵션은 명령 줄에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="8e07edccb9aa166168b1c2c5a7d5f28b0543e377" translate="yes" xml:space="preserve">
          <source>dkimsign selector domain privatekeyfile [identity]</source>
          <target state="translated">dkimsign 선택기 도메인 privatekeyfile [ID]</target>
        </trans-unit>
        <trans-unit id="c75e12b05478826886debeb5f8bc58fa966c8f64" translate="yes" xml:space="preserve">
          <source>dkimverify reads an RFC822 message on standard input, and returns with exit
code 0 if the signature verifies successfully. Otherwise, it returns with exit
code 1.</source>
          <target state="translated">dkimverify는 표준 입력에서 RFC822 메시지를 읽고 서명이 성공적으로 확인되면 종료 코드 0과 함께 반환합니다. 그렇지 않으면 종료 코드 1과 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="894d20d36bb855cf9808f9c5cb125a8abebeb8b4" translate="yes" xml:space="preserve">
          <source>dknewkey is s script that produces private and public key pairs suitable
for use with DKIM.  Note that the private key file format used for ed25519 is
not standardized (there is no standard) and is unique to dkimpy.</source>
          <target state="translated">dknewkey는 DKIM과 함께 사용하기에 적합한 개인 및 공개 키 쌍을 생성하는 스크립트입니다. ed25519에 사용되는 개인 키 파일 형식은 표준화되지 않았으며 (표준 없음) dkimpy에 고유합니다.</target>
        </trans-unit>
        <trans-unit id="d1f13101d92d168c3d5fcad13d13f82ebbe5fd38" translate="yes" xml:space="preserve">
          <source>dnspython or pydns. dnspython is preferred if both are present and
installed to satisfy the DNS module requirement if neither are installed.</source>
          <target state="translated">dnspython 또는 pydns. dnspython은 둘 다 설치되어 있고 둘 다 설치되어 있지 않은 경우 DNS 모듈 요구 사항을 충족하기 위해 설치된 경우 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
