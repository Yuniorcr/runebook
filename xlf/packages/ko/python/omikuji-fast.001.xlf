<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/omikuji-fast/">
    <body>
      <group id="omikuji-fast">
        <trans-unit id="25ca63db2033d5e29d0ae2d6810a2dd5069f7834" translate="yes" xml:space="preserve">
          <source>(balanced,</source>
          <target state="translated">(balanced,</target>
        </trans-unit>
        <trans-unit id="85316970a34b8c223b2c0870c6ce63e64022734d" translate="yes" xml:space="preserve">
          <source>(unbalanced,</source>
          <target state="translated">(unbalanced,</target>
        </trans-unit>
        <trans-unit id="51bb90cb2a4d5adcbc2147ae31b072e44aba1f71" translate="yes" xml:space="preserve">
          <source>1,153s</source>
          <target state="translated">1,153s</target>
        </trans-unit>
        <trans-unit id="4ccec8045416e6a6df67ba55e165bc9a78e59100" translate="yes" xml:space="preserve">
          <source>1,649s</source>
          <target state="translated">1,649s</target>
        </trans-unit>
        <trans-unit id="ab5f9e33da92232921a9f16a3759062515ccd3a9" translate="yes" xml:space="preserve">
          <source>1,753s</source>
          <target state="translated">1,753s</target>
        </trans-unit>
        <trans-unit id="9c5f517e0003d9602aa803fd916d8ae081cb7543" translate="yes" xml:space="preserve">
          <source>11,156s</source>
          <target state="translated">11,156s</target>
        </trans-unit>
        <trans-unit id="57f2683cb7a6d4def721cdae92a4b8927b12fb2d" translate="yes" xml:space="preserve">
          <source>14s</source>
          <target state="translated">14s</target>
        </trans-unit>
        <trans-unit id="eceb51b7ae79e388aae7f7b8331ff75759f3df6f" translate="yes" xml:space="preserve">
          <source>16s</source>
          <target state="translated">16s</target>
        </trans-unit>
        <trans-unit id="ce31513cb6e3e0a74121e78c1f00942d1083af51" translate="yes" xml:space="preserve">
          <source>18s</source>
          <target state="translated">18s</target>
        </trans-unit>
        <trans-unit id="7d5062c20d65164c0b6fadbe22641bdea93522dc" translate="yes" xml:space="preserve">
          <source>19s</source>
          <target state="translated">19s</target>
        </trans-unit>
        <trans-unit id="6211cfdfd1ff0f1eeb2f5d86aff553f0fd5ff721" translate="yes" xml:space="preserve">
          <source>234s</source>
          <target state="translated">234s</target>
        </trans-unit>
        <trans-unit id="15caba9af97a0dcf81eba58d33f2b6caa9b6172c" translate="yes" xml:space="preserve">
          <source>3,028s</source>
          <target state="translated">3,028s</target>
        </trans-unit>
        <trans-unit id="e09bd3d78e84b09817b67424fec2494af702b8cb" translate="yes" xml:space="preserve">
          <source>4,259s</source>
          <target state="translated">4,259s</target>
        </trans-unit>
        <trans-unit id="e6a654e0569c176835d03d8d0b0d8373b27b7a6c" translate="yes" xml:space="preserve">
          <source>404s</source>
          <target state="translated">404s</target>
        </trans-unit>
        <trans-unit id="be6ff7d631a6c312e2d0618e45a3813d5b334cfc" translate="yes" xml:space="preserve">
          <source>460s</source>
          <target state="translated">460s</target>
        </trans-unit>
        <trans-unit id="caa1bb55e50703b604e0f6cb583dbb56380e98d5" translate="yes" xml:space="preserve">
          <source>5,759s</source>
          <target state="translated">5,759s</target>
        </trans-unit>
        <trans-unit id="455602a0a4b3cf2cf2f25273cb92aa2b5a61e39d" translate="yes" xml:space="preserve">
          <source>659s</source>
          <target state="translated">659s</target>
        </trans-unit>
        <trans-unit id="8dd27568b332cc28692773fa2784dc7c13930200" translate="yes" xml:space="preserve">
          <source>87s</source>
          <target state="translated">87s</target>
        </trans-unit>
        <trans-unit id="a48ff90e0dc310438d14b0772a0596c281db205e" translate="yes" xml:space="preserve">
          <source>959s</source>
          <target state="translated">959s</target>
        </trans-unit>
        <trans-unit id="95a8ec9ba8d165ef6d5e9b7d4327cebe9f708c1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;*Precision numbers as reported in the paper; our machine doesn't have enough memory to run the full prediction with their implementation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;*Precision numbers as reported in the paper; our machine doesn't have enough memory to run the full prediction with their implementation.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7228e33e82e855ac8cfb275ee136045095d359a0" translate="yes" xml:space="preserve">
          <source>A simple Python binding is also available for training and prediction. It can be install via &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">A simple Python binding is also available for training and prediction. It can be install via &lt;code&gt;pip&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="76b71a4c125def0086bde0acce9a2cdfd9d395ee" translate="yes" xml:space="preserve">
          <source>Amazon-670K</source>
          <target state="translated">Amazon-670K</target>
        </trans-unit>
        <trans-unit id="688df8c19d860654b9fea8b58c0929ee841b9aaa" translate="yes" xml:space="preserve">
          <source>An alternative way for building balanced, shallow and wide trees is to collapse adjacent layers, similar to the tree compression step used in AttentionXML (You et al., 2019): intermediate layers are removed, and their children replace them as the children of their parents. For example, with balanced 2-means clustering, if we collapse 5 layers after each layer, we can increase the tree arity from 2 to 2‚Åµ‚Å∫&amp;sup1; = 64.</source>
          <target state="translated">An alternative way for building balanced, shallow and wide trees is to collapse adjacent layers, similar to the tree compression step used in AttentionXML (You et al., 2019): intermediate layers are removed, and their children replace them as the children of their parents. For example, with balanced 2-means clustering, if we collapse 5 layers after each layer, we can increase the tree arity from 2 to 2‚Åµ‚Å∫&amp;sup1; = 64.</target>
        </trans-unit>
        <trans-unit id="a9f70fa486c8c1a22c320d93f280b06df9895e2c" translate="yes" xml:space="preserve">
          <source>An efficient implementation of Partitioned Label Trees (Prabhu et al., 2018) and its variations for extreme multi-label classification, written in Rustü¶Ä with loveüíñ.</source>
          <target state="translated">An efficient implementation of Partitioned Label Trees (Prabhu et al., 2018) and its variations for extreme multi-label classification, written in Rustü¶Ä with loveüíñ.</target>
        </trans-unit>
        <trans-unit id="4e77536d83f9b7b44a2d983081dfc6f7424d691c" translate="yes" xml:space="preserve">
          <source>Balanced k-means for balanced shallow trees</source>
          <target state="translated">Balanced k-means for balanced shallow trees</target>
        </trans-unit>
        <trans-unit id="0a5b3c1fd18722b86ba21240dc7c0f9c0e90231f" translate="yes" xml:space="preserve">
          <source>Bonsai</source>
          <target state="translated">Bonsai</target>
        </trans-unit>
        <trans-unit id="7fff1036736e9d2675224aee7bcd5b71ca8103e9" translate="yes" xml:space="preserve">
          <source>Build &amp;amp; Install</source>
          <target state="translated">Build &amp;amp; Install</target>
        </trans-unit>
        <trans-unit id="efe95731547c004005f556e25540629ba4584f7e" translate="yes" xml:space="preserve">
          <source>Data format</source>
          <target state="translated">Îç∞Ïù¥ÌÑ∞ ÌòïÏãù</target>
        </trans-unit>
        <trans-unit id="1052689464e38f5066d86e3788d5e61cde890281" translate="yes" xml:space="preserve">
          <source>Dataset</source>
          <target state="translated">Dataset</target>
        </trans-unit>
        <trans-unit id="0761ea8f86e325a2f41c0682ecba1bcc865709c8" translate="yes" xml:space="preserve">
          <source>EURLex-4K</source>
          <target state="translated">EURLex-4K</target>
        </trans-unit>
        <trans-unit id="b2978586634d4b6a09e10039893439c9629516ef" translate="yes" xml:space="preserve">
          <source>Features &amp;amp; Performance</source>
          <target state="translated">Features &amp;amp; Performance</target>
        </trans-unit>
        <trans-unit id="c39ea90689ad8aef4bd456e70c00946af289a431" translate="yes" xml:space="preserve">
          <source>Following Bonsai (Khandagale et al., 2019), Omikuji supports using regular k-means instead of balanced 2-means clustering for tree construction, which results in wider, shallower and unbalanced trees that train slower but have better precision. Comparing to the &lt;a href=&quot;https://github.com/xmc-aalto/bonsai&quot;&gt;original Bonsai implementation&lt;/a&gt;, Omikuji also achieves the same precisions while training 2.6x to 4.6x faster on our quad-core machine. (Similarly, further speed-up is possible if more CPU cores are available.)</source>
          <target state="translated">Following Bonsai (Khandagale et al., 2019), Omikuji supports using regular k-means instead of balanced 2-means clustering for tree construction, which results in wider, shallower and unbalanced trees that train slower but have better precision. Comparing to the &lt;a href=&quot;https://github.com/xmc-aalto/bonsai&quot;&gt;original Bonsai implementation&lt;/a&gt;, Omikuji also achieves the same precisions while training 2.6x to 4.6x faster on our quad-core machine. (Similarly, further speed-up is possible if more CPU cores are available.)</target>
        </trans-unit>
        <trans-unit id="f68542ccd3f2b0d719d3de0a13dfaabccbf23166" translate="yes" xml:space="preserve">
          <source>G. Tsoumakas, I. Katakis, and I. Vlahavas, &amp;ldquo;Effective and efficient multilabel classification in domains with large number of labels,&amp;rdquo; ECML, 2008.</source>
          <target state="translated">G. Tsoumakas, I. Katakis, and I. Vlahavas, &amp;ldquo;Effective and efficient multilabel classification in domains with large number of labels,&amp;rdquo; ECML, 2008.</target>
        </trans-unit>
        <trans-unit id="fad997dfb1f730fd5420d7c44424e368cb802747" translate="yes" xml:space="preserve">
          <source>Layer collapsing for balanced shallow trees</source>
          <target state="translated">Layer collapsing for balanced shallow trees</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ÌäπÌóà</target>
        </trans-unit>
        <trans-unit id="b2bb7604c825f95a49cbb58b776a65bf15a636d5" translate="yes" xml:space="preserve">
          <source>Metric</source>
          <target state="translated">ÎØ∏ÌÑ∞Î≤ï</target>
        </trans-unit>
        <trans-unit id="e5ba856bba0a11f49f5da74ec8cff3eb8892e2db" translate="yes" xml:space="preserve">
          <source>Note that you might still need to install Cargo should compilation become necessary.</source>
          <target state="translated">Note that you might still need to install Cargo should compilation become necessary.</target>
        </trans-unit>
        <trans-unit id="ac20ccea9a7622a7c41ebfd00509095f67e6e07e" translate="yes" xml:space="preserve">
          <source>Omikuji</source>
          <target state="translated">Omikuji</target>
        </trans-unit>
        <trans-unit id="2ae3e26dafc5be5b824afede5818a328ede4f1c3" translate="yes" xml:space="preserve">
          <source>Omikuji can be easily built &amp;amp; installed with &lt;a href=&quot;https://doc.rust-lang.org/cargo/getting-started/installation.html&quot;&gt;Cargo&lt;/a&gt; as a CLI app:</source>
          <target state="translated">Omikuji can be easily built &amp;amp; installed with &lt;a href=&quot;https://doc.rust-lang.org/cargo/getting-started/installation.html&quot;&gt;Cargo&lt;/a&gt; as a CLI app:</target>
        </trans-unit>
        <trans-unit id="917dbcf8dba8395d9e5d5d7e97ea48a39477d036" translate="yes" xml:space="preserve">
          <source>Omikuji has has been tested on datasets from the &lt;a href=&quot;http://manikvarma.org/downloads/XC/XMLRepository.html&quot;&gt;Extreme Classification Repository&lt;/a&gt;. All tests below are run on a quad-core Intel&amp;reg; Core&amp;trade; i7-6700 CPU, and we allowed as many cores to be utilized as possible. We measured training time, and calculated precisions at 1, 3, and 5. (Note that, due to randomness, results might vary from run to run, especially for smaller datasets.)</source>
          <target state="translated">Omikuji has has been tested on datasets from the &lt;a href=&quot;http://manikvarma.org/downloads/XC/XMLRepository.html&quot;&gt;Extreme Classification Repository&lt;/a&gt;. All tests below are run on a quad-core Intel&amp;reg; Core&amp;trade; i7-6700 CPU, and we allowed as many cores to be utilized as possible. We measured training time, and calculated precisions at 1, 3, and 5. (Note that, due to randomness, results might vary from run to run, especially for smaller datasets.)</target>
        </trans-unit>
        <trans-unit id="3d57c7b630cbe90efecb2f0d16ed8ad72c0537b4" translate="yes" xml:space="preserve">
          <source>Omikuji is licensed under the MIT License.</source>
          <target state="translated">Omikuji is licensed under the MIT License.</target>
        </trans-unit>
        <trans-unit id="fde084d0340c6fcb923be17b2fbd24b192601ffe" translate="yes" xml:space="preserve">
          <source>Omikuji provides a more parallelized implementation of Parabel (Prabhu et al., 2018) that trains faster when more CPU cores are available. Compared to the &lt;a href=&quot;http://manikvarma.org/code/Parabel/download.html&quot;&gt;original implementation&lt;/a&gt; written in C++, which can only utilize the same number of CPU cores as the number of trees (3 by default), Omikuji maintains the same level of precision but trains 1.3x to 1.7x faster on our quad-core machine. &lt;strong&gt;Further speed-up is possible if more CPU cores are available&lt;/strong&gt;.</source>
          <target state="translated">Omikuji provides a more parallelized implementation of Parabel (Prabhu et al., 2018) that trains faster when more CPU cores are available. Compared to the &lt;a href=&quot;http://manikvarma.org/code/Parabel/download.html&quot;&gt;original implementation&lt;/a&gt; written in C++, which can only utilize the same number of CPU cores as the number of trees (3 by default), Omikuji maintains the same level of precision but trains 1.3x to 1.7x faster on our quad-core machine. &lt;strong&gt;Further speed-up is possible if more CPU cores are available&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="8417cd744505110f1acd2e1e5a93d1fb20437acf" translate="yes" xml:space="preserve">
          <source>Or install from the latest source:</source>
          <target state="translated">Or install from the latest source:</target>
        </trans-unit>
        <trans-unit id="2e6729932a8432c8cbfb608ec66a2564b52a2d8b" translate="yes" xml:space="preserve">
          <source>Our implementation takes dataset files formatted as those provided in the &lt;a href=&quot;http://manikvarma.org/downloads/XC/XMLRepository.html&quot;&gt;Extreme Classification Repository&lt;/a&gt;. A data file starts with a header line with three space-separated integers: total number of examples, number of features, and number of labels. Following the header line, there is one line per each example, starting with comma-separated labels, followed by space-separated feature:value pairs:</source>
          <target state="translated">Our implementation takes dataset files formatted as those provided in the &lt;a href=&quot;http://manikvarma.org/downloads/XC/XMLRepository.html&quot;&gt;Extreme Classification Repository&lt;/a&gt;. A data file starts with a header line with three space-separated integers: total number of examples, number of features, and number of labels. Following the header line, there is one line per each example, starting with comma-separated labels, followed by space-separated feature:value pairs:</target>
        </trans-unit>
        <trans-unit id="4babe79083d245acc851a19c46a8938f1e8b379d" translate="yes" xml:space="preserve">
          <source>P@1</source>
          <target state="translated">P@1</target>
        </trans-unit>
        <trans-unit id="45bc98f63a18edee0853e1e9a87caf81d977ea44" translate="yes" xml:space="preserve">
          <source>P@3</source>
          <target state="translated">P@3</target>
        </trans-unit>
        <trans-unit id="c934a5ca931a48de679c316ff53dadd48e829fe5" translate="yes" xml:space="preserve">
          <source>P@5</source>
          <target state="translated">P@5</target>
        </trans-unit>
        <trans-unit id="e9297393298de49dd3235f2da33418b3e3a8c193" translate="yes" xml:space="preserve">
          <source>Parabel</source>
          <target state="translated">Parabel</target>
        </trans-unit>
        <trans-unit id="d3a1ace7384ca27b7e268882e8dad51dde0edc36" translate="yes" xml:space="preserve">
          <source>Parabel, better parallelized</source>
          <target state="translated">Parabel, better parallelized</target>
        </trans-unit>
        <trans-unit id="816ced2800a00d46a69967a8fd76f4a715d9dfb9" translate="yes" xml:space="preserve">
          <source>Python Binding</source>
          <target state="translated">Python Binding</target>
        </trans-unit>
        <trans-unit id="c09c8c5fd4e17bede3b7c94402599ff275a72201" translate="yes" xml:space="preserve">
          <source>Python binding to Omikuji, an efficient implementation of Partioned Label Trees and its variations for extreme multi-label classification</source>
          <target state="translated">Python binding to Omikuji, an efficient implementation of Partioned Label Trees and its variations for extreme multi-label classification</target>
        </trans-unit>
        <trans-unit id="fd533d70059daabb8dc052e000025890c30bca1d" translate="yes" xml:space="preserve">
          <source>R. You, S. Dai, Z. Zhang, H. Mamitsuka, and S. Zhu, &amp;ldquo;AttentionXML: Extreme Multi-Label Text Classification with Multi-Label Attention Based Recurrent Neural Networks,&amp;rdquo; Jun. 2019.</source>
          <target state="translated">R. You, S. Dai, Z. Zhang, H. Mamitsuka, and S. Zhu, &amp;ldquo;AttentionXML: Extreme Multi-Label Text Classification with Multi-Label Attention Based Recurrent Neural Networks,&amp;rdquo; Jun. 2019.</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">Ï∞∏Í≥† Î¨∏Ìóå</target>
        </trans-unit>
        <trans-unit id="586f66340d974cda179952299b2d34b8ea8ee5e3" translate="yes" xml:space="preserve">
          <source>Regular k-means for shallow trees</source>
          <target state="translated">Regular k-means for shallow trees</target>
        </trans-unit>
        <trans-unit id="8f7ce5b010038a6c4eab52494ea6f95a2fc2907a" translate="yes" xml:space="preserve">
          <source>S. Khandagale, H. Xiao, and R. Babbar, &amp;ldquo;Bonsai - Diverse and Shallow Trees for Extreme Multi-label Classification,&amp;rdquo; Apr. 2019.</source>
          <target state="translated">S. Khandagale, H. Xiao, and R. Babbar, &amp;ldquo;Bonsai - Diverse and Shallow Trees for Extreme Multi-label Classification,&amp;rdquo; Apr. 2019.</target>
        </trans-unit>
        <trans-unit id="e82d9c9b93b11b52474de9b7a3a032249e4a2b44" translate="yes" xml:space="preserve">
          <source>Sometimes it's desirable to have shallow and wide trees that are also balanced, in which case Omikuji supports the balanced k-means algorithm used by HOMER (Tsoumakas et al., 2008) for clustering as well.</source>
          <target state="translated">Sometimes it's desirable to have shallow and wide trees that are also balanced, in which case Omikuji supports the balanced k-means algorithm used by HOMER (Tsoumakas et al., 2008) for clustering as well.</target>
        </trans-unit>
        <trans-unit id="c55a0afae086e0f66d79396c64e9790583954124" translate="yes" xml:space="preserve">
          <source>The CLI app will be available as &lt;code&gt;omikuji_fast&lt;/code&gt;. For example, to reproduce the results on the EURLex-4K dataset:</source>
          <target state="translated">The CLI app will be available as &lt;code&gt;omikuji_fast&lt;/code&gt; . For example, to reproduce the results on the EURLex-4K dataset:</target>
        </trans-unit>
        <trans-unit id="6ffe7b6f1ee0509ba53677e9cf953aff92d7e073" translate="yes" xml:space="preserve">
          <source>The following script demonstrates how to use the Python binding to train a model and make predictions:</source>
          <target state="translated">The following script demonstrates how to use the Python binding to train a model and make predictions:</target>
        </trans-unit>
        <trans-unit id="cb6353bd81d62b75f40c0b88537fc5155583b94c" translate="yes" xml:space="preserve">
          <source>The project name comes from &lt;a href=&quot;https://en.wikipedia.org/wiki/O-mikuji&quot;&gt;o-mikuji&lt;/a&gt; (Âæ°Á•ûÁ±§), which are predictions about one's future written on strips of paper (labels?) at jinjas and temples in Japan, often tied to branches of pine trees after they are read.</source>
          <target state="translated">The project name comes from &lt;a href=&quot;https://en.wikipedia.org/wiki/O-mikuji&quot;&gt;o-mikuji&lt;/a&gt; (Âæ°Á•ûÁ±§), which are predictions about one's future written on strips of paper (labels?) at jinjas and temples in Japan, often tied to branches of pine trees after they are read.</target>
        </trans-unit>
        <trans-unit id="ce0b2741470cedd377faeba191ae946233caae1d" translate="yes" xml:space="preserve">
          <source>Train Time</source>
          <target state="translated">Train Time</target>
        </trans-unit>
        <trans-unit id="286e721a1890a58c29a5c4014f7f586f56cc077f" translate="yes" xml:space="preserve">
          <source>Trivia</source>
          <target state="translated">ÌïòÏ∞ÆÏùÄ Ïùº</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Ïö©Î≤ï</target>
        </trans-unit>
        <trans-unit id="78ce269cf65513695e752dfe0281e463247d0fee" translate="yes" xml:space="preserve">
          <source>WikiLSHTC-325K</source>
          <target state="translated">WikiLSHTC-325K</target>
        </trans-unit>
        <trans-unit id="43e47b9b60097eb6b2837ad77073771f101a389d" translate="yes" xml:space="preserve">
          <source>Y. Prabhu, A. Kag, S. Harsola, R. Agrawal, and M. Varma, &amp;ldquo;Parabel: Partitioned Label Trees for Extreme Classification with Application to Dynamic Search Advertising,&amp;rdquo; in Proceedings of the 2018 World Wide Web Conference, 2018, pp. 993&amp;ndash;1002.</source>
          <target state="translated">Y. Prabhu, A. Kag, S. Harsola, R. Agrawal, and M. Varma, &amp;ldquo;Parabel: Partitioned Label Trees for Extreme Classification with Application to Dynamic Search Advertising,&amp;rdquo; in Proceedings of the 2018 World Wide Web Conference, 2018, pp. 993&amp;ndash;1002.</target>
        </trans-unit>
        <trans-unit id="a73009f8a732dbe853ed11591eb3b32e9b085eda" translate="yes" xml:space="preserve">
          <source>You can also install from the latest source:</source>
          <target state="translated">You can also install from the latest source:</target>
        </trans-unit>
        <trans-unit id="d6a6b9d4d41b4b897f0c7ff61c537358dc123ffc" translate="yes" xml:space="preserve">
          <source>cluster.k=100)</source>
          <target state="translated">cluster.k=100)</target>
        </trans-unit>
        <trans-unit id="32ee2c8876b1b49e3338dff4a36484f57ca0ac82" translate="yes" xml:space="preserve">
          <source>cluster.k=100,</source>
          <target state="translated">cluster.k=100,</target>
        </trans-unit>
        <trans-unit id="0033fec4e9467e74b723f31a6482b268e2a6f9c5" translate="yes" xml:space="preserve">
          <source>cluster.k=2)</source>
          <target state="translated">cluster.k=2)</target>
        </trans-unit>
        <trans-unit id="0653816ef8c38cb0e6f0437ac1f25d15ce9264bf" translate="yes" xml:space="preserve">
          <source>cluster.k=2,</source>
          <target state="translated">cluster.k=2,</target>
        </trans-unit>
        <trans-unit id="338bcb3190506bde30c31af542c31577ba7041f1" translate="yes" xml:space="preserve">
          <source>collapse 5 layers)</source>
          <target state="translated">collapse 5 layers)</target>
        </trans-unit>
        <trans-unit id="0b3ac6bfd99e37dd19b4bd31b781b8a389cbc118" translate="yes" xml:space="preserve">
          <source>max_depth=3)</source>
          <target state="translated">max_depth=3)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
