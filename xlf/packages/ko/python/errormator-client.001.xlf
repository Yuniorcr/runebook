<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/errormator-client/">
    <body>
      <group id="errormator-client">
        <trans-unit id="7d14e81b60902e6174c6843a662a055002aa816a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;client source&lt;/strong&gt;: &lt;a href=&quot;https://github.com/AppEnlight/errormator-client-python&quot;&gt;https://github.com/AppEnlight/errormator-client-python&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;클라이언트 소스&lt;/strong&gt; : &lt;a href=&quot;https://github.com/AppEnlight/errormator-client-python&quot;&gt;https://github.com/AppEnlight/errormator-client-python&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4dce4e964e86c1ed7a498c680d7639e24988b3a1" translate="yes" xml:space="preserve">
          <source>Additionally middleware stack needs to be modified with additional middleware:</source>
          <target state="translated">또한 미들웨어 스택은 추가 미들웨어로 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b4e3d6750aa738b23e591ef3d2e7b83b8266a8f" translate="yes" xml:space="preserve">
          <source>Before you can use the client inside your application you first need to
navigate to the directory that stores your application configuration and issue
following command:</source>
          <target state="translated">애플리케이션 내에서 클라이언트를 사용하려면 먼저 애플리케이션 구성을 저장하는 디렉토리로 이동하고 다음 명령을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="855be219c2d231b6eb2e25617884d37c5c38b5b8" translate="yes" xml:space="preserve">
          <source>Changing default scaffold configuration in Pyramid Web Framework</source>
          <target state="translated">Pyramid 웹 프레임 워크에서 기본 스캐 폴드 구성 변경</target>
        </trans-unit>
        <trans-unit id="97aa98b640b56300f9fceeedb3d672e8aeaefe98" translate="yes" xml:space="preserve">
          <source>Client for Errormator reporting -  supporting WSGI and django  (http://errormator.com)</source>
          <target state="translated">Errormator보고 용 클라이언트-WSGI 및 django 지원 (http://errormator.com)</target>
        </trans-unit>
        <trans-unit id="2c3cc16cad2b5edc0f8db88bd90b975c7f9d840e" translate="yes" xml:space="preserve">
          <source>Configuring errormator and django</source>
          <target state="translated">Errormator 및 Django 구성</target>
        </trans-unit>
        <trans-unit id="e244eee5ba3bdf85a0839e833eb0401d9cda29e6" translate="yes" xml:space="preserve">
          <source>Default scaffolds in pyramid 1.3 have a section called &lt;em&gt;[app:main]&lt;/em&gt; -
errormator client expects that you are using &lt;em&gt;wsgi pipeline&lt;/em&gt; instead to
position itself in it.</source>
          <target state="translated">피라미드 1.3의 기본 스캐 폴드에는 &lt;em&gt;[app : main]&lt;/em&gt; 이라는 섹션이 &lt;em&gt;있습니다.&lt;/em&gt; errormator 클라이언트는 &lt;em&gt;wsgi 파이프 라인을&lt;/em&gt; 대신 사용하고 있다고 예상 합니다.</target>
        </trans-unit>
        <trans-unit id="46f64ea4c179fac99cd57fd7d995363d6a272bd9" translate="yes" xml:space="preserve">
          <source>Documentation: &lt;a href=&quot;https://errormator.com/page/api/main&quot;&gt;https://errormator.com/page/api/main&lt;/a&gt;</source>
          <target state="translated">문서 : &lt;a href=&quot;https://errormator.com/page/api/main&quot;&gt;https://errormator.com/page/api/main&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e344309b877cd0d602894777980101e11b48429a" translate="yes" xml:space="preserve">
          <source>Errormator client provides slow call and datastore timing capabilities,
currently out of the box folliwing libraries are supported:</source>
          <target state="translated">Errormator 클라이언트는 느린 호출 및 데이터 저장소 타이밍 기능을 제공하며 현재 즉시 사용 가능한 라이브러리가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5e7ba9262cef163705f4c52df66f50ad5494a563" translate="yes" xml:space="preserve">
          <source>Errormator developer documentation contains most up to date information,
including implementation guides in popular python web frameworks.</source>
          <target state="translated">Errormator 개발자 문서에는 인기있는 Python 웹 프레임 워크의 구현 가이드를 포함한 최신 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="87fb2a6a64534fc7dfe61ea8dd52fec551861153" translate="yes" xml:space="preserve">
          <source>Errormator will try to import foo.bar.baz and use callable_name as the function
that accepts parameters (structure, section) and returns altered data structure.</source>
          <target state="translated">Errormator는 foo.bar.baz를 가져오고 매개 변수 (구조, 섹션)를 받아들이고 변경된 데이터 구조를 반환하는 함수로 callable_name을 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="236478ec81ca372b4898e5f32542cd15ebfeb31c" translate="yes" xml:space="preserve">
          <source>Exception views in Pyramid Web Framework and Errormator</source>
          <target state="translated">Pyramid Web Framework 및 Errormator의 예외보기</target>
        </trans-unit>
        <trans-unit id="2e00f1a18b3cc015bc3fdef7867390b3648b4737" translate="yes" xml:space="preserve">
          <source>For django framework there is separate compatible middleware provided.</source>
          <target state="translated">django 프레임 워크의 경우 별도의 호환 가능한 미들웨어가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="623b95755f8f5b838855de6bd94cd7b29890246a" translate="yes" xml:space="preserve">
          <source>If for some reason you want to disable timing of specific library - just set the
time value to false.</source>
          <target state="translated">어떤 이유로 특정 라이브러리의 타이밍을 비활성화하려면 시간 값을 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3ecb5119bf3fa5e3134fbf2b8f952643218ed62f" translate="yes" xml:space="preserve">
          <source>In your INI file you need to add:</source>
          <target state="translated">INI 파일에 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="a8f39a0eaff1e31685a2b14797108f08b8c37cd0" translate="yes" xml:space="preserve">
          <source>Installation and Setup</source>
          <target state="translated">설치 및 설정</target>
        </trans-unit>
        <trans-unit id="2f520e5407b45fb8d348011a7544bc2ab00a956f" translate="yes" xml:space="preserve">
          <source>LEGACY MODE</source>
          <target state="translated">레거시 모드</target>
        </trans-unit>
        <trans-unit id="66c4faf220fce02700ddc98e32839f4ba5eef5e4" translate="yes" xml:space="preserve">
          <source>Main Documentation location</source>
          <target state="translated">주요 문서 위치</target>
        </trans-unit>
        <trans-unit id="d740a6cff82b4c4ee888d7f71135a73dedfd77ea" translate="yes" xml:space="preserve">
          <source>Modify your settings file to contain:</source>
          <target state="translated">다음을 포함하도록 설정 파일을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d0d9df17c773b2846afa9688352037c4642ddc" translate="yes" xml:space="preserve">
          <source>Or by altering your ini file to contain a new include:</source>
          <target state="translated">또는 새 포함을 포함하도록 ini 파일을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f45aaf551f23e832535b15915e0162f657d72b9c" translate="yes" xml:space="preserve">
          <source>Please note that errormator middleware should be the first one in stack to
function properly.</source>
          <target state="translated">errormator 미들웨어가 제대로 작동하려면 스택의 첫 번째 미들웨어 여야합니다.</target>
        </trans-unit>
        <trans-unit id="552b0b5317743f764234aa65db4cf43b07af76ea" translate="yes" xml:space="preserve">
          <source>Please note that this functionality can be used to alter things like errormator
grouping  mechanism - you can set this variable based on values present in structure
generated by the client</source>
          <target state="translated">이 기능은 오류 발생기 그룹화 메커니즘과 같은 것을 변경하는 데 사용될 수 있습니다. 클라이언트가 생성 한 구조에있는 값을 기반으로이 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecffe29719d5de22b71a496c3c9a8077f7164b34" translate="yes" xml:space="preserve">
          <source>Run your django app providing ERRORMATOR_INI env variable containing absolute
path to your config file.</source>
          <target state="translated">구성 파일의 절대 경로를 포함하는 ERRORMATOR_INI env 변수를 제공하는 django 앱을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="1f3419e660d2c62d60d19dd4080b1a982fe78f75" translate="yes" xml:space="preserve">
          <source>Sensitive data filtering</source>
          <target state="translated">민감한 데이터 필터링</target>
        </trans-unit>
        <trans-unit id="ef8dfd5589968601220c493b933ec95969eb3913" translate="yes" xml:space="preserve">
          <source>The client by default blanks out COOKIE,POST,GET for keys like:
&amp;lsquo;password&amp;rsquo;,&amp;rsquo;passwd&amp;rsquo;,&amp;rsquo;pwd&amp;rsquo;,&amp;rsquo;auth_tkt&amp;rsquo;</source>
          <target state="translated">클라이언트는 기본적으로 'password', 'passwd', 'pwd', 'auth_tkt'와 같은 키에 대해 COOKIE, POST, GET을 비워 둡니다.</target>
        </trans-unit>
        <trans-unit id="d8c7ac17f7413ca45f380d9356604cf5d5108489" translate="yes" xml:space="preserve">
          <source>The easiest way to accomplish that is to alter your configuration file to look
like this:</source>
          <target state="translated">이를 수행하는 가장 쉬운 방법은 다음과 같이 구성 파일을 변경하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ee969725535004b6e37adedef09630719aa1e341" translate="yes" xml:space="preserve">
          <source>This behaviour can be altered to filter all kinds of data from the structures
that get sent to the server by passing dotted module name in configuration:</source>
          <target state="translated">이 동작은 구성에서 점으로 구분 된 모듈 이름을 전달하여 서버로 전송되는 구조에서 모든 종류의 데이터를 필터링하도록 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32eaea95a31df4a0b5c9a24667fddcd3599c9c13" translate="yes" xml:space="preserve">
          <source>This client will be no longer maintained. The new version of the client is available here: &lt;a href=&quot;https://pypi.python.org/pypi/appenlight-client&quot;&gt;https://pypi.python.org/pypi/appenlight-client&lt;/a&gt;
Migration in most cases should require you to change import namespace and config keys from</source>
          <target state="translated">이 클라이언트는 더 이상 유지되지 않습니다. 클라이언트의 새 버전은 여기에서 사용할 수 있습니다. &lt;a href=&quot;https://pypi.python.org/pypi/appenlight-client&quot;&gt;https://pypi.python.org/pypi/appenlight-client&lt;/a&gt; 대부분의 경우 마이그레이션을 수행하려면 가져 오기 네임 스페이스 및 구성 키를</target>
        </trans-unit>
        <trans-unit id="12d7a4f04bd0b818bb82f58c76c22c5ddffa0072" translate="yes" xml:space="preserve">
          <source>To minimize configuration complexity, the client by default will look for
ERRORMATOR_INI environment variable that will supply absolute path
to config file.</source>
          <target state="translated">구성 복잡성을 최소화하기 위해 클라이언트는 기본적으로 구성 파일에 대한 절대 경로를 제공 할 ERRORMATOR_INI 환경 변수를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="2f4642cc151acc626b02851c1955b6b580ca5bbd" translate="yes" xml:space="preserve">
          <source>Usage (example for pyramid or other WSGI pipeline compatible solutions like Zope):</source>
          <target state="translated">사용법 (피라미드 또는 Zope와 같은 기타 WSGI 파이프 라인 호환 솔루션의 예) :</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">경고</target>
        </trans-unit>
        <trans-unit id="3d547a179927f89398e2f561be986e0c8c8ca3a4" translate="yes" xml:space="preserve">
          <source>You also need to add errormator tween to your application, you can do this in
two ways:</source>
          <target state="translated">또한 응용 프로그램에 errormator 트윈을 추가해야합니다. 다음 두 가지 방법으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0af2ae948ec3bb3ff734f6b54cac77e58a59c188" translate="yes" xml:space="preserve">
          <source>and add in your ini:</source>
          <target state="translated">ini를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="24fb1decd1fb31519afbd9ff27dfd4345759314e" translate="yes" xml:space="preserve">
          <source>and inside your configuration, &lt;strong&gt;above [server:main]&lt;/strong&gt; directive following
directive should appear:</source>
          <target state="translated">구성 내에서 &lt;strong&gt;위의 [server : main]&lt;/strong&gt; 지시문 다음 지시문이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="78cb14f54202e5c517161383509fbd75974a12a2" translate="yes" xml:space="preserve">
          <source>appenlight</source>
          <target state="translated">Appenlight</target>
        </trans-unit>
        <trans-unit id="e9b59ef9006d7cfae646641c463cf9c6966ae08a" translate="yes" xml:space="preserve">
          <source>django templates</source>
          <target state="translated">장고 템플릿</target>
        </trans-unit>
        <trans-unit id="026826bf94c8a2b1709cba42bd5d04602f87345a" translate="yes" xml:space="preserve">
          <source>errormator</source>
          <target state="translated">에러 메이터</target>
        </trans-unit>
        <trans-unit id="574f1ebc75c1a993ad98c76eed816fd22d710c87" translate="yes" xml:space="preserve">
          <source>errormator_client</source>
          <target state="translated">errormator_client</target>
        </trans-unit>
        <trans-unit id="b6005b9e971106359f7f46e59e5c9ead8d3248d6" translate="yes" xml:space="preserve">
          <source>errormator_client is BSD licensed, consult LICENSE for details.</source>
          <target state="translated">errormator_client는 BSD 라이선스입니다. 자세한 내용은 LICENSE를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="5696b7bd4e8005c6b2984f2342ab08a6e42a5ba0" translate="yes" xml:space="preserve">
          <source>for pylons app you can modify config/middleware.py:
import the callable and add this lines:</source>
          <target state="translated">pylons 앱의 경우 config / middleware.py를 수정할 수 있습니다. 콜 러블을 가져오고 다음 줄을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="dac64351208ab58a776426a8e4c57d6c830a539a" translate="yes" xml:space="preserve">
          <source>httplib</source>
          <target state="translated">httplib</target>
        </trans-unit>
        <trans-unit id="d79ccea9ef3a26d4005d793ab8ff00e991a22d2e" translate="yes" xml:space="preserve">
          <source>jinja2 templates</source>
          <target state="translated">jinja2 템플릿</target>
        </trans-unit>
        <trans-unit id="ee23fa3b360d2174bb0aaa990428cb0bd95548b1" translate="yes" xml:space="preserve">
          <source>mako templates</source>
          <target state="translated">마코 템플릿</target>
        </trans-unit>
        <trans-unit id="7f1c982e835a68959859b5d3da2b8e4b3af30b31" translate="yes" xml:space="preserve">
          <source>mongodb</source>
          <target state="translated">Mongodb</target>
        </trans-unit>
        <trans-unit id="65a9ca056042ae14f7fa1bf798c7972afeb54d03" translate="yes" xml:space="preserve">
          <source>most used dbapi2 drivers</source>
          <target state="translated">가장 많이 사용되는 dbapi2 드라이버</target>
        </trans-unit>
        <trans-unit id="77036807718db3771b0e18ce31e8a0a6ee232bb2" translate="yes" xml:space="preserve">
          <source>pysolr</source>
          <target state="translated">pysolr</target>
        </trans-unit>
        <trans-unit id="54faec366d11efdac0f9d2da560e273f92288c2a" translate="yes" xml:space="preserve">
          <source>requests</source>
          <target state="translated">요청</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="3822d782ad529813b3145b8766bf6e025d43bd00" translate="yes" xml:space="preserve">
          <source>urllib</source>
          <target state="translated">urllib</target>
        </trans-unit>
        <trans-unit id="fb92779359ce8e324b8624c09aebfad958e599c6" translate="yes" xml:space="preserve">
          <source>urllib2</source>
          <target state="translated">urllib2</target>
        </trans-unit>
        <trans-unit id="4508ac3d2b45d6d14dd583b78643c278deba1c69" translate="yes" xml:space="preserve">
          <source>urllib3</source>
          <target state="translated">urllib3</target>
        </trans-unit>
        <trans-unit id="ab8633001e3f62c5b993b9b099cacfb54437f2e5" translate="yes" xml:space="preserve">
          <source>using pip:</source>
          <target state="translated">pip 사용 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
