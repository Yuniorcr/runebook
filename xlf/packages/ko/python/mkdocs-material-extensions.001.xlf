<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/mkdocs-material-extensions/">
    <body>
      <group id="mkdocs-material-extensions">
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="f5e1055bf37b3ff6b56485d2613a913655a7cde0" translate="yes" xml:space="preserve">
          <source>Extension pack for Python Markdown.</source>
          <target state="translated">Python Markdown 용 확장 팩.</target>
        </trans-unit>
        <trans-unit id="17c076391013450ceb7b86b199052bb1fe65bdf3" translate="yes" xml:space="preserve">
          <source>If an icon name is already in the index, the icon will not be added. It is recommended to always have your icons in
sub-folders to help namespace them to avoid name collisions. In the example above, &lt;code&gt;bird&lt;/code&gt; was under &lt;code&gt;animals&lt;/code&gt; which
created the name &lt;code&gt;:animals-bird:&lt;/code&gt; and helped create a more unique name with less of a chance of creating a duplicate
name with existing emoji and Material icons.</source>
          <target state="translated">아이콘 이름이 이미 색인에 있으면 아이콘이 추가되지 않습니다. 이름 충돌을 피하기 위해 네임 스페이스를 사용할 수 있도록 항상 하위 폴더에 아이콘을 두는 것이 좋습니다. 위의 예에서 &lt;code&gt;bird&lt;/code&gt; 는 &lt;code&gt;:animals-bird:&lt;/code&gt; 라는 이름을 만든 &lt;code&gt;animals&lt;/code&gt; 아래에 있었고 기존 이모 지와 머티리얼 아이콘으로 중복 된 이름을 만들 가능성이 적은보다 고유 한 이름을 만드는 데 도움이되었습니다.</target>
        </trans-unit>
        <trans-unit id="59beb8d3be9596cd1e36a12dfec4b37770ab9d5b" translate="yes" xml:space="preserve">
          <source>If given an icon at &lt;code&gt;my_project/my_icons/animals/bird.svg&lt;/code&gt;, the icon would be available using the emoji syntax as
&lt;code&gt;:animals-bird:&lt;/code&gt;. Notice that the base folder that is provided doesn't contribute to the icon's name. Also, folders
are separated with &lt;code&gt;-&lt;/code&gt;. Folder names and icon names should be compatible with the emoji syntax, so special characters
should be avoided -- &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; are okay.</source>
          <target state="translated">에서 아이콘 주어진 경우 &lt;code&gt;my_project/my_icons/animals/bird.svg&lt;/code&gt; 아이콘이 같은 이모티콘 구문을 사용하여 사용할 수 있습니다 것입니다 &lt;code&gt;:animals-bird:&lt;/code&gt; . 제공된 기본 폴더는 아이콘 이름에 영향을주지 않습니다. 또한 폴더는 &lt;code&gt;-&lt;/code&gt; 로 구분됩니다 . 폴더 이름과 아이콘 이름은 이모티콘 구문과 호환되어야하므로 특수 문자는 피해야합니다 &lt;code&gt;-&lt;/code&gt; 및 &lt;code&gt;_&lt;/code&gt; 는 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="2cd94e53848fe9fc6efc914b3d450c583ad80aed" translate="yes" xml:space="preserve">
          <source>In MkDocs, you can override theme assets locally, and even add assets to the theme. Unfortunately, the Markdown parsing
process isn't aware of the MkDocs environment. Luckily, if you are using PyMdown Extensions 7.1, you can pass in custom
icon paths that will be used when constructing the emoji index and include your custom SVG assets. If a folder path of
&lt;code&gt;theme/my_icons&lt;/code&gt; was given to the index builder, all icons under &lt;code&gt;my_project/my_icons&lt;/code&gt;, even in sub-folders, would
become part of the index.</source>
          <target state="translated">MkDocs에서 테마 자산을 로컬로 재정의하고 테마에 자산을 추가 할 수도 있습니다. 불행히도 Markdown 구문 분석 프로세스는 MkDocs 환경을 인식하지 못합니다. 운 좋게도 PyMdown Extensions 7.1을 사용하는 경우 이모 지 인덱스를 구성 할 때 사용할 사용자 지정 아이콘 경로를 전달하고 사용자 지정 SVG 자산을 포함 할 수 있습니다. &lt;code&gt;theme/my_icons&lt;/code&gt; 폴더 경로가 색인 빌더에 제공되면 하위 폴더에서도 &lt;code&gt;my_project/my_icons&lt;/code&gt; 아래의 모든 아이콘 이 색인의 일부가됩니다.</target>
        </trans-unit>
        <trans-unit id="3c2611898371c8785487e231908db3e8c1afbf25" translate="yes" xml:space="preserve">
          <source>In addition to the custom index, you must also specify the associated custom generator. This will will find the
appropriate icon and insert it into your Markdown content as an inlined SVG.</source>
          <target state="translated">사용자 지정 색인 외에도 연결된 사용자 지정 생성기를 지정해야합니다. 그러면 적절한 아이콘을 찾아 마크 다운 콘텐츠에 인라인 SVG로 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="5e67a02373654838808b08db96cc409aef257a3f" translate="yes" xml:space="preserve">
          <source>Inline SVG Icons</source>
          <target state="translated">인라인 SVG 아이콘</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="7115e8eb4fe680a3052f9e3ec9d4c28b69e5204f" translate="yes" xml:space="preserve">
          <source>Markdown extension resources for &lt;a href=&quot;https://github.com/squidfunk/mkdocs-material&quot;&gt;MkDocs for Material&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/squidfunk/mkdocs-material&quot;&gt;MkDocs for Material에&lt;/a&gt; 대한 마크 다운 확장 리소스</target>
        </trans-unit>
        <trans-unit id="cbb07f930fa392fac74ad3f7c65e2dfb001979c7" translate="yes" xml:space="preserve">
          <source>MkDocs Material Extensions</source>
          <target state="translated">MkDocs 재료 확장</target>
        </trans-unit>
        <trans-unit id="7b383e3c8b17a4876e8fcfa6789a9202fe17a44b" translate="yes" xml:space="preserve">
          <source>MkDocs Material provides numerous icons from Material, FontAwesome, and Octicons, but it does so by inlining the SVG
icons into the source. Currently there is no easy way access these icons and arbitrarily insert them into Markdown
content. Users must include the icon fonts themselves and do it with HTML.</source>
          <target state="translated">MkDocs Material은 Material, FontAwesome 및 Octicons의 다양한 아이콘을 제공하지만 SVG 아이콘을 소스에 인라인하여 제공합니다. 현재 이러한 아이콘에 쉽게 액세스하고 마크 다운 콘텐츠에 임의로 삽입하는 방법은 없습니다. 사용자는 아이콘 글꼴 자체를 포함하고 HTML로 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b421e36b31ba979e30bb4cf179a2ffb4a4de1e43" translate="yes" xml:space="preserve">
          <source>Then, using the folder structure of Material's &lt;code&gt;.icons&lt;/code&gt; folder, you can specify icons:</source>
          <target state="translated">그런 다음 Material의 &lt;code&gt;.icons&lt;/code&gt; 폴더 의 폴더 구조를 사용하여 아이콘을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df8642c2b8f3937719aa838b896a029ff02ae4f3" translate="yes" xml:space="preserve">
          <source>This module allows you to use PyMdown Extensions' &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/&quot;&gt;Emoji&lt;/a&gt; extension to enable easy insertion of MkDocs Material's
SVG assets using simple &lt;code&gt;:emoji-syntax:&lt;/code&gt;.  This is done by creating our own &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-indexes&quot;&gt;emoji index&lt;/a&gt; and
&lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-generators&quot;&gt;emoji generator&lt;/a&gt;. The custom index provides a modified version of the Emoji extensions Twemoji
index.</source>
          <target state="translated">이 모듈을 사용하면 PyMdown Extensions의 &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/&quot;&gt;Emoji&lt;/a&gt; 확장을 사용하여 간단한 &lt;code&gt;:emoji-syntax:&lt;/code&gt; 사용하여 MkDocs Material의 SVG 자산을 쉽게 삽입 할 수 있습니다 . 이것은 우리 자신의 &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-indexes&quot;&gt;이모 지 인덱스&lt;/a&gt; 와 &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-generators&quot;&gt;이모 지 생성기&lt;/a&gt; 를 생성함으로써 이루어집니다 . 사용자 지정 인덱스는 Emoji 확장 Twemoji 인덱스의 수정 된 버전을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e48c75e79062c267d2f499c2d095f4d23411a4c6" translate="yes" xml:space="preserve">
          <source>Using Local Custom Icons</source>
          <target state="translated">로컬 사용자 지정 아이콘 사용</target>
        </trans-unit>
        <trans-unit id="858c84947a51f344057d4e099f892ba1e11652f2" translate="yes" xml:space="preserve">
          <source>You can provide as many paths as you would like, and they will be evaluated in the order that they are specified. The
Material theme's own icons will be evaluated after all custom paths. This allows a user to override Material's icons if
desired.</source>
          <target state="translated">원하는만큼 경로를 제공 할 수 있으며 지정된 순서대로 평가됩니다. 머티리얼 테마의 자체 아이콘은 모든 사용자 지정 경로 후에 평가됩니다. 이것은 사용자가 원한다면 머티리얼의 아이콘을 덮어 쓸 수 있도록합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
