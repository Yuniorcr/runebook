<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/filediffs/">
    <body>
      <group id="filediffs">
        <trans-unit id="3dbca386b3bf4c0c03ea3c64d065f726c26a64b7" translate="yes" xml:space="preserve">
          <source>1. Installation</source>
          <target state="translated">1. 설치</target>
        </trans-unit>
        <trans-unit id="1890e90747d4915d71d85929b24dd8e0b9fd87d9" translate="yes" xml:space="preserve">
          <source>1.1 Pypi:</source>
          <target state="translated">1.1 Pypi :</target>
        </trans-unit>
        <trans-unit id="8938f0efd65e7170b9fd34ec09bd7437129b01ab" translate="yes" xml:space="preserve">
          <source>1.2 Github:</source>
          <target state="translated">1.2 Github :</target>
        </trans-unit>
        <trans-unit id="27c9154004442bddeb2b9720fe30da3c4e7bdea1" translate="yes" xml:space="preserve">
          <source>2. Usage:</source>
          <target state="translated">2. 사용법 :</target>
        </trans-unit>
        <trans-unit id="30103a3797b12a6a805e311982645994d5457acb" translate="yes" xml:space="preserve">
          <source>2.1 Interactive in Python</source>
          <target state="translated">2.1 Python에서 대화 형</target>
        </trans-unit>
        <trans-unit id="511e2c2557ae526044ac2e798171eafbc349b260" translate="yes" xml:space="preserve">
          <source>2.2 From the terminal</source>
          <target state="translated">2.2 터미널에서</target>
        </trans-unit>
        <trans-unit id="8deac8ee3b0c92691914be570ab68134a9cc341c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filediffs&lt;/code&gt; takes two files and separates them into</source>
          <target state="translated">&lt;code&gt;filediffs&lt;/code&gt; 는 두 개의 파일을 가져 와서</target>
        </trans-unit>
        <trans-unit id="fd6c2dff42ceb60fc22b86e87b01b9ac57e6be9f" translate="yes" xml:space="preserve">
          <source>Code inspired by &lt;a href=&quot;https://www.splinter.com.au/reconcilingcomparing-huge-data-sets-with-c/&quot;&gt;https://www.splinter.com.au/reconcilingcomparing-huge-data-sets-with-c/&lt;/a&gt;
and implemented using &lt;a href=&quot;https://cython.readthedocs.io/en/latest/&quot;&gt;Cython&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.splinter.com.au/reconcilingcomparing-huge-data-sets-with-c/&quot;&gt;https://www.splinter.com.au/reconcilingcomparing-huge-data-sets-with-c/에서&lt;/a&gt; 영감을 받고 &lt;a href=&quot;https://cython.readthedocs.io/en/latest/&quot;&gt;Cython을&lt;/a&gt; 사용하여 구현 된 코드</target>
        </trans-unit>
        <trans-unit id="34cc0564b697f74f8dd91400b176f90e175f205c" translate="yes" xml:space="preserve">
          <source>Currently, &lt;strong&gt;only wheels for Linux&lt;/strong&gt; are build using &lt;a href=&quot;https://github.com/pypa/manylinux&quot;&gt;manylinux&lt;/a&gt;.</source>
          <target state="translated">현재 &lt;strong&gt;Linux 용 wheel 만 &lt;/strong&gt;&lt;a href=&quot;https://github.com/pypa/manylinux&quot;&gt;manylinux를&lt;/a&gt; 사용하여 빌드됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2bafc9745ee9eb6226f9492565e02864a421f22" translate="yes" xml:space="preserve">
          <source>For Dependency management, &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;Pipenv&lt;/a&gt; is used.</source>
          <target state="translated">종속성 관리의 경우 &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;Pipenv&lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9598910db98f977c4947705ef81b153f5967e715" translate="yes" xml:space="preserve">
          <source>If the output arguments are not passed to the function, the output will be saved into
the working directory.</source>
          <target state="translated">출력 인수가 함수에 전달되지 않으면 출력이 작업 디렉토리에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="9060adba6be1b877bf80fdf66c590e32645af4fc" translate="yes" xml:space="preserve">
          <source>In addition, three optional output arguments can be passed to the functions, defining the output
files.</source>
          <target state="translated">또한 출력 파일을 정의하는 세 가지 선택적 출력 인수를 함수에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48c9622e31425486641071900b87f67c664613b5" translate="yes" xml:space="preserve">
          <source>Lines found in both files are not kept in memory but written to
disk every 5.000.000 lines to preserve memory.</source>
          <target state="translated">두 파일에서 발견 된 행은 메모리에 보관되지 않고 메모리를 보존하기 위해 5.000.000 행마다 디스크에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="811a92a4f2b2f55703bee6f97b854b771d2a6055" translate="yes" xml:space="preserve">
          <source>On other OS, please install the package as described in the following section.</source>
          <target state="translated">다른 OS에서는 다음 섹션에 설명 된대로 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="a6ff5526d955ec93901ee850d31bc7ee30e8da72" translate="yes" xml:space="preserve">
          <source>Separate two files into three files, each containing lines observed in both files/first file only/second file only. Programmed using Cython.</source>
          <target state="translated">두 파일을 세 개의 파일로 분리하십시오. 각 파일에는 두 파일 / 첫 번째 파일 만 / 두 번째 파일에서만 관찰되는 행이 포함됩니다. Cython을 사용하여 프로그래밍되었습니다.</target>
        </trans-unit>
        <trans-unit id="8720103a05cc72d604fb0ab5ce10e5df09e29616" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file_diffs&lt;/code&gt; function requires two arguments, &lt;code&gt;filename_1&lt;/code&gt; and &lt;code&gt;filename_2&lt;/code&gt;, with the path to the files you wish to compare.</source>
          <target state="translated">&lt;code&gt;file_diffs&lt;/code&gt; 의 함수는 두 개의 인수가 필요 &lt;code&gt;filename_1&lt;/code&gt; 및 &lt;code&gt;filename_2&lt;/code&gt; 비교할하고자하는 파일의 경로를.</target>
        </trans-unit>
        <trans-unit id="e32647f2bac00c8f1a05961a5ba975a2022bcab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filediffs&lt;/code&gt; package</source>
          <target state="translated">&lt;code&gt;filediffs&lt;/code&gt; 의 패키지</target>
        </trans-unit>
        <trans-unit id="17258d740750f5ee7c45d59fc7d7d58adf1bee76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filediffs&lt;/code&gt; package comes with a build in command line interface. This way it can be used to separate files from the terminal:</source>
          <target state="translated">&lt;code&gt;filediffs&lt;/code&gt; 의 패키지는 명령 줄 인터페이스에서 빌드와 함께 제공됩니다. 이렇게하면 터미널에서 파일을 분리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c3b5e1efdfa0269b0e269d62134eacf3a1ec32b" translate="yes" xml:space="preserve">
          <source>The Pipfile defines the python version and package requirements.</source>
          <target state="translated">Pipfile은 Python 버전 및 패키지 요구 사항을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d07d2c498a88ce44f92612f0a2dd41526ab4df57" translate="yes" xml:space="preserve">
          <source>The cpp files can be build using &lt;code&gt;pipenv run python setup.py build_ext --inplace&lt;/code&gt;.</source>
          <target state="translated">cpp 파일은 &lt;code&gt;pipenv run python setup.py build_ext --inplace&lt;/code&gt; 를 사용하여 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fe7e9cdb355d1869717bd77e2caa9f1aec06af1" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;setup.py&lt;/code&gt; defines the cython build process.</source>
          <target state="translated">&lt;code&gt;setup.py&lt;/code&gt; 파일 은 cython 빌드 프로세스를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b989467bda6c1abd10c78f979591afa0fa108550" translate="yes" xml:space="preserve">
          <source>This way, even very large files can be separated.
Only the diff has to fit in memory.</source>
          <target state="translated">이렇게하면 매우 큰 파일도 분리 할 수 ​​있습니다. diff 만 메모리에 맞아야합니다.</target>
        </trans-unit>
        <trans-unit id="5fa9027f7059c3003a3782ce69b7923ac79ede2e" translate="yes" xml:space="preserve">
          <source>You can clone the package from Github and transpile the Cython code to C++ on
your machine.</source>
          <target state="translated">Github에서 패키지를 복제하고 Cython 코드를 컴퓨터의 C ++로 트랜스 파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30bc189edbb52ac8c28002941f608a969c08ecc4" translate="yes" xml:space="preserve">
          <source>You can create a virtual environment for the package with
Pipenv by</source>
          <target state="translated">Pipenv를 사용하여 패키지에 대한 가상 환경을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c37730fe81df1298eb3956200eb87c025793522" translate="yes" xml:space="preserve">
          <source>calling &lt;code&gt;pipenv install&lt;/code&gt; to install from Pipfile.lock</source>
          <target state="translated">&lt;code&gt;pipenv install&lt;/code&gt; 을 호출하여 Pipfile.lock에서 설치</target>
        </trans-unit>
        <trans-unit id="c32966b7210465732a4071ffca4c269700bf714a" translate="yes" xml:space="preserve">
          <source>filediffs is available on &lt;a href=&quot;https://pypi.org/project/filediffs/&quot;&gt;pypi&lt;/a&gt; and can therefore be installed via pip</source>
          <target state="translated">filediffs는 &lt;a href=&quot;https://pypi.org/project/filediffs/&quot;&gt;pypi&lt;/a&gt; 에서 사용할 수 있으므로 pip를 통해 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4f794532a03603c326ee779f9c82d886ce27d8a" translate="yes" xml:space="preserve">
          <source>installing pipenv &lt;code&gt;pip install pipenv&lt;/code&gt;</source>
          <target state="translated">pipenv &lt;code&gt;pip install pipenv&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd878633541fb199435ffadf54bdf8b80637a0ed" translate="yes" xml:space="preserve">
          <source>lines found in both files</source>
          <target state="translated">두 파일에있는 줄</target>
        </trans-unit>
        <trans-unit id="d7c955654c4048fc5aaff713506830b06affdbb6" translate="yes" xml:space="preserve">
          <source>lines found only in file 1</source>
          <target state="translated">파일 1에만있는 행</target>
        </trans-unit>
        <trans-unit id="62c45cd1d5d4d6041c66cd4134f6d7b28049fb92" translate="yes" xml:space="preserve">
          <source>lines found only in file 2</source>
          <target state="translated">파일 2에만있는 행</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
