<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/hikari/">
    <body>
      <group id="hikari">
        <trans-unit id="ea6ccb4c34e1d511ab173e6c362d19432c7740e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gitlab.com/tandemdude/lightbulb&quot;&gt;&lt;code&gt;lightbulb&lt;/code&gt;&lt;/a&gt; - a simple and easy to
use command framework for Hikari.</source>
          <target state="translated">&lt;a href=&quot;https://gitlab.com/tandemdude/lightbulb&quot;&gt; &lt;code&gt;lightbulb&lt;/code&gt; &lt;/a&gt; -Hikari를위한 간단하고 사용하기 쉬운 명령 프레임 워크.</target>
        </trans-unit>
        <trans-unit id="bc3e29640658ccd10bfa2da5bca18f2946943b40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hikari&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;히카리&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9a5d492a9f9f850cd8f6182f79e72a0db1d364f" translate="yes" xml:space="preserve">
          <source>A sane Discord API for Python 3 built on asyncio and good intentions</source>
          <target state="translated">asyncio 및 좋은 의도에 기반한 Python 3 용 건전한 Discord API</target>
        </trans-unit>
        <trans-unit id="4af012143b87e78fd09c3553c249878aa3f0d115" translate="yes" xml:space="preserve">
          <source>Additional libraries</source>
          <target state="translated">추가 라이브러리</target>
        </trans-unit>
        <trans-unit id="a95d116d11a21699563cc79343bc7c9a5642a7c0" translate="yes" xml:space="preserve">
          <source>An opinionated, static typed Discord API for Python3 and asyncio.</source>
          <target state="translated">Python3 및 asyncio를위한 독창적이고 정적 인 형식의 Discord API입니다.</target>
        </trans-unit>
        <trans-unit id="a9daadded8706d906a16d1d91a438ee44cfe769a" translate="yes" xml:space="preserve">
          <source>Built on good intentions and the hope that it will be extendable and reusable,
rather than an obstacle for future development.</source>
          <target state="translated">미래 개발의 장애물이 아니라 확장 및 재사용이 가능할 것이라는 좋은 의도와 희망을 바탕으로 구축되었습니다.</target>
        </trans-unit>
        <trans-unit id="e2b7655b1913574cc2a05d5b3cf3d9fa25d2728d" translate="yes" xml:space="preserve">
          <source>Check out the issues tab on GitHub. If you are nervous, look for issues
marked as</source>
          <target state="translated">GitHub의 문제 탭을 확인하세요. 긴장되면 다음과 같이 표시된 문제를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="60f2edef27999e0fa42be7cc0d1eddfce113d4e1" translate="yes" xml:space="preserve">
          <source>Developing Hikari</source>
          <target state="translated">히카리 개발</target>
        </trans-unit>
        <trans-unit id="d3cf44255c508c22459413bc5cccec5ac3994639" translate="yes" xml:space="preserve">
          <source>Events are determined by the type annotation on the event parameter, or
alternatively as a type passed to the &lt;code&gt;@bot.listen()&lt;/code&gt; decorator, if you do not
want to use type hints.</source>
          <target state="translated">이벤트는 이벤트 매개 변수의 유형 주석에 의해 결정되거나 유형 힌트를 사용하지 않으려는 경우 &lt;code&gt;@bot.listen()&lt;/code&gt; 데코레이터에 전달 된 유형으로 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ea7afb656f7244db8715a9a85c41f7463711ca50" translate="yes" xml:space="preserve">
          <source>Hikari does not include a command framework by default, so you will want to pick
a third party library to do it.</source>
          <target state="translated">Hikari에는 기본적으로 명령 프레임 워크가 포함되어 있지 않으므로이를 수행 할 타사 라이브러리를 선택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f5248def3b998cccb9293d56d1d0eb5df1ec8a43" translate="yes" xml:space="preserve">
          <source>If you wish to contribute something, you should first start by cloning the
repository.</source>
          <target state="translated">무언가를 기여하고 싶다면 먼저 저장소를 복제하여 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad252d260f46cb950998be45433a0369abdcfb81" translate="yes" xml:space="preserve">
          <source>Install hikari from PyPI with the following command:</source>
          <target state="translated">다음 명령을 사용하여 PyPI에서 hikari를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="cd19e3e7b6538e9f963740ce1615b2d275da5234" translate="yes" xml:space="preserve">
          <source>Once this is complete, you can run &lt;code&gt;nox&lt;/code&gt; without any arguments to ensure
everything builds and is correct.</source>
          <target state="translated">이 작업이 완료되면 인수없이 &lt;code&gt;nox&lt;/code&gt; 를 실행 하여 모든 것이 빌드되고 올바른지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02d659d53900a328df4def10cd1c20f85872f46c" translate="yes" xml:space="preserve">
          <source>The first thing you should run is &lt;code&gt;pip install nox&lt;/code&gt; to install nox. This handles
running predefined tasks and pipelines.</source>
          <target state="translated">가장 먼저 실행해야 할 것은 &lt;code&gt;pip install nox&lt;/code&gt; 를 설치하기 위해 pip install nox입니다. 이는 사전 정의 된 작업 및 파이프 라인 실행을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="b594f872797befbe4605c87ea3c944e0c3f54c15" translate="yes" xml:space="preserve">
          <source>To initialize a development environment and install everything you need, simply
run &lt;code&gt;nox -s init&lt;/code&gt;. This will create a venv and install everything you need in it
to get started.</source>
          <target state="translated">개발 환경을 초기화하고 필요한 모든 것을 설치하려면 &lt;code&gt;nox -s init&lt;/code&gt; 를 실행하면 됩니다. 이것은 venv를 만들고 시작하는 데 필요한 모든 것을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6c3f49edae8ad72ae3f01b0b49a3def8cac57630" translate="yes" xml:space="preserve">
          <source>Where can I start?</source>
          <target state="translated">어디서부터 시작할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="11030985398efe6c6d0dca8fc303c184ac354ddd" translate="yes" xml:space="preserve">
          <source>You may wish to use a command framework on top of Hikari so that you can start
writing a bot quickly without implementing your own command handler.</source>
          <target state="translated">Hikari 위에 명령 프레임 워크를 사용하여 자체 명령 처리기를 구현하지 않고도 봇 작성을 빠르게 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="233eba443446298ee9826162e36f6df30b4175a7" translate="yes" xml:space="preserve">
          <source>for
something easy to start with!</source>
          <target state="translated">쉽게 시작할 수 있습니다!</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
