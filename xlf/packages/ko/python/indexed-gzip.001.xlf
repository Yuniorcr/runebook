<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/indexed-gzip/">
    <body>
      <group id="indexed-gzip">
        <trans-unit id="6e4f5731b9e3c8ebae0bfadb9f6a61fb0e5e9af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vinlyx/mgzip/&quot;&gt;&lt;code&gt;mgzip&lt;/code&gt;&lt;/a&gt; provides an accelerated
GZIP compression and decompression library.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vinlyx/mgzip/&quot;&gt; &lt;code&gt;mgzip&lt;/code&gt; &lt;/a&gt; 은 가속 GZIP 압축 및 압축 해제 라이브러리를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ed6a7fb1004159d7b825f4180e699189dc3b190c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; does not currently have any support for writing. Currently if you
wish to write to a file, you will need to save the file by alternate means (e.g.
via &lt;code&gt;gzip&lt;/code&gt; or &lt;code&gt;nibabel&lt;/code&gt;), and then re-create a new &lt;code&gt;IndexedGzipFile&lt;/code&gt; instance.
For example:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 은 현재 쓰기를 지원하지 않습니다. 현재 파일에 쓰려면 다른 방법 (예 : &lt;code&gt;gzip&lt;/code&gt; 또는 &lt;code&gt;nibabel&lt;/code&gt; )으로 파일을 저장 한 다음 새 &lt;code&gt;IndexedGzipFile&lt;/code&gt; 인스턴스 를 다시 만들어야 합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="b636c51c11789cbc04399c748c66d22d506e6e01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; inherits the &lt;a href=&quot;http://www.zlib.net&quot;&gt;zlib&lt;/a&gt; license, available for
perusal in the &lt;a href=&quot;LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 은 &lt;a href=&quot;LICENSE&quot;&gt;LICENSE&lt;/a&gt; 파일 에서 열람 할 수 있는 &lt;a href=&quot;http://www.zlib.net&quot;&gt;zlib&lt;/a&gt; 라이선스를 상속 합니다.</target>
        </trans-unit>
        <trans-unit id="8dc06aa0d3cb731383efc41c65d1493aaadcc404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; is available on &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPi&lt;/a&gt; - to
install, simply type:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 를 볼 수 있습니다 &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPi&lt;/a&gt; - 설치, 단순히 입력 :</target>
        </trans-unit>
        <trans-unit id="ab2efac6fc4be9fe73ce6778bf3918501de110bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; was originally inspired by Zalan Rajna's (@zrajna)
&lt;a href=&quot;https://github.com/zrajna/zindex&quot;&gt;zindex&lt;/a&gt; project:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 은 원래 Zalan Rajna (@zrajna) &lt;a href=&quot;https://github.com/zrajna/zindex&quot;&gt;zindex&lt;/a&gt; 프로젝트 에서 영감을 받았습니다 .</target>
        </trans-unit>
        <trans-unit id="c1abf17866e1953c3798e28b3a4b8428cf0222a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; was written to allow fast random access of compressed
&lt;a href=&quot;http://nifti.nimh.nih.gov/&quot;&gt;NIFTI&lt;/a&gt; image files (for which GZIP is the
de-facto compression standard), but will work with any GZIP file.
&lt;code&gt;indexed_gzip&lt;/code&gt; is easy to use with &lt;code&gt;nibabel&lt;/code&gt; (&lt;a href=&quot;http://nipy.org/nibabel/&quot;&gt;http://nipy.org/nibabel/&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 은 압축 된 &lt;a href=&quot;http://nifti.nimh.nih.gov/&quot;&gt;NIFTI&lt;/a&gt; 이미지 파일 (GZIP이 사실상 압축 표준 임)에 대한 빠른 임의 액세스를 허용하도록 작성 되었지만 모든 GZIP 파일에서 작동합니다. &lt;code&gt;indexed_gzip&lt;/code&gt; 은 &lt;code&gt;nibabel&lt;/code&gt; ( &lt;a href=&quot;http://nipy.org/nibabel/&quot;&gt;http://nipy.org/nibabel/&lt;/a&gt; ) 과 함께 사용하기 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="77a62590e4951de5f1ec880227d393657c98545b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fast random access of gzip files in Python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Python에서 gzip 파일에 대한 빠른 임의 액세스&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28b133adc96818c4f7d9932892bf37ccdb56f428" translate="yes" xml:space="preserve">
          <source>@DarioDaF: Windows overflow bug (#30)</source>
          <target state="translated">@DarioDaF : Windows 오버플로 버그 (# 30)</target>
        </trans-unit>
        <trans-unit id="adb269c7e47357d13a5c217a8e8acc83f08975eb" translate="yes" xml:space="preserve">
          <source>A small &lt;a href=&quot;indexed_gzip/tests/benchmark.py&quot;&gt;test script&lt;/a&gt; is included with
&lt;code&gt;indexed_gzip&lt;/code&gt;; this script compares the performance of the &lt;code&gt;IndexedGzipFile&lt;/code&gt;
class with the &lt;code&gt;gzip.GzipFile&lt;/code&gt; class. This script does the following:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 에는 작은 &lt;a href=&quot;indexed_gzip/tests/benchmark.py&quot;&gt;테스트 스크립트&lt;/a&gt; 가 포함되어 있습니다 . 이 스크립트의 성능 비교 &lt;code&gt;IndexedGzipFile&lt;/code&gt; 의 와 클래스 &lt;code&gt;gzip.GzipFile&lt;/code&gt; 의 클래스를. 이 스크립트는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">감사의 말</target>
        </trans-unit>
        <trans-unit id="a7edd5812773f63b3a3898cd2c35d55013cb6dcd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IndexedGzipFile&lt;/code&gt; instance gets around this performance limitation by
building an index, which contains &lt;em&gt;seek points&lt;/em&gt;, mappings between
corresponding locations in the compressed and uncompressed data streams. Each
seek point is accompanied by a chunk (32KB) of uncompressed data which is used
to initialise the decompression algorithm, allowing us to start reading from
any seek point. If the index is built with a seek point spacing of 1MB, we
only have to decompress (on average) 512KB of data to read from any location
in the file.</source>
          <target state="translated">&lt;code&gt;IndexedGzipFile&lt;/code&gt; 의 인스턴스를 포함하는 인덱스 구축함으로써 이러한 성능 제한을 걸어 다니는 &lt;em&gt;점을 추구를&lt;/em&gt; 압축 및 압축 해제 된 데이터 스트림에 대응하는 위치 사이의 매핑. 각 탐색 지점에는 압축 해제 알고리즘을 초기화하는 데 사용되는 압축되지 않은 데이터 청크 (32KB)가 수반되어 모든 탐색 지점에서 읽기를 시작할 수 있습니다. 인덱스가 1MB의 탐색 지점 간격으로 빌드 된 경우 파일의 모든 위치에서 읽기 위해 평균 512KB의 데이터 만 압축 해제하면됩니다.</target>
        </trans-unit>
        <trans-unit id="9d8dfb8db8455ecd5d0870b56c91dc170b678608" translate="yes" xml:space="preserve">
          <source>Chris Markiewicz (@effigies): Option to drop file handles (#6)</source>
          <target state="translated">Chris Markiewicz (@effigies) : 파일 핸들 삭제 옵션 (# 6)</target>
        </trans-unit>
        <trans-unit id="4724151f158c86fd8c19ea81d859245f4fd0545b" translate="yes" xml:space="preserve">
          <source>Compression formats other than GZIP, such as &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;xz&lt;/code&gt;, have better
support for random access.</source>
          <target state="translated">&lt;code&gt;bzip2&lt;/code&gt; 및 &lt;code&gt;xz&lt;/code&gt; 와 같은 GZIP 이외의 압축 형식 은 임의 액세스를 더 잘 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8d7e5dce1e5273e8681a7ae6d358695755094df8" translate="yes" xml:space="preserve">
          <source>Fast random access of gzip files in Python</source>
          <target state="translated">Python에서 gzip 파일에 대한 빠른 임의 액세스</target>
        </trans-unit>
        <trans-unit id="e9b1b5a87b548242c94848e77f8d1e0fa7a0546f" translate="yes" xml:space="preserve">
          <source>Generates a specified number of seek locations, uniformly spaced
throughout the test file.</source>
          <target state="translated">테스트 파일 전체에 균일 한 간격으로 지정된 수의 검색 위치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0e478fd73983d6a952d844cee52beaca8399a1ab" translate="yes" xml:space="preserve">
          <source>Generates a test file.</source>
          <target state="translated">테스트 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="793479ab82770db726673e6d0463757c5c88b515" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;nibabel&lt;/code&gt; 2.2.x, you need to explicitly set the &lt;code&gt;keep_file_open&lt;/code&gt;
flag:</source>
          <target state="translated">&lt;code&gt;nibabel&lt;/code&gt; 2.2.x를 사용 하는 경우 &lt;code&gt;keep_file_open&lt;/code&gt; 플래그 를 명시 적으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="76355982b037f5e729b9c23c23eb4a4878706af5" translate="yes" xml:space="preserve">
          <source>If you have a large file, you may wish to pre-generate the index once, and
save it out to an index file:</source>
          <target state="translated">큰 파일이있는 경우 색인을 한 번 미리 생성하여 색인 파일에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38bad926c3319ce2fb2d8d50c28c85b267624507" translate="yes" xml:space="preserve">
          <source>Index import/export</source>
          <target state="translated">색인 가져 오기 / 내보내기</target>
        </trans-unit>
        <trans-unit id="c504bbb7149053e98f10eba72c01361dda5975e5" translate="yes" xml:space="preserve">
          <source>Initial work on &lt;code&gt;indexed_gzip&lt;/code&gt; took place at
&lt;a href=&quot;http://www.brainhack.org/&quot;&gt;Brainhack&lt;/a&gt; Paris, at the Institut Pasteur,
24th-26th February 2016, with the support of the
&lt;a href=&quot;https://www.ndcn.ox.ac.uk/divisions/fmrib/&quot;&gt;FMRIB Centre&lt;/a&gt;, at the
University of Oxford, UK.</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 에 대한 초기 작업은 영국 옥스퍼드 대학의 &lt;a href=&quot;https://www.ndcn.ox.ac.uk/divisions/fmrib/&quot;&gt;FMRIB 센터&lt;/a&gt; 의 지원으로 2016 년 2 월 24 일부터 26 일까지 파스퇴르 연구소의 &lt;a href=&quot;http://www.brainhack.org/&quot;&gt;Brainhack&lt;/a&gt; Paris 에서 진행되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="6a3d46bf66ddc40ec12e9d3af6134e402710be86" translate="yes" xml:space="preserve">
          <source>Intended use</source>
          <target state="translated">사용 목적</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="7d35dcdda699d27ffd38e20ef674e85d0ecd15d6" translate="yes" xml:space="preserve">
          <source>Many thanks to the following contributors (listed chronologically):</source>
          <target state="translated">다음 기여자에게 많은 감사를드립니다 (연대순으로 나열 됨).</target>
        </trans-unit>
        <trans-unit id="cc51c52136198a7f0538584cf0f16618a6281cd4" translate="yes" xml:space="preserve">
          <source>Martin Craig (@mcraig-ibme): porting &lt;code&gt;indexed_gzip&lt;/code&gt; to Windows (#3)</source>
          <target state="translated">Martin Craig (@ mcraig-ibme) : &lt;code&gt;indexed_gzip&lt;/code&gt; 을 Windows로 이식 (# 3)</target>
        </trans-unit>
        <trans-unit id="e9857c7320ae409fa2aa0c2ee7d6d2c24464938e" translate="yes" xml:space="preserve">
          <source>Omer Ozarslan (@ozars): Index import/export (#8)</source>
          <target state="translated">Omer Ozarslan (@ozars) : 인덱스 가져 오기 / 내보내기 (# 8)</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">공연</target>
        </trans-unit>
        <trans-unit id="e7714211bba202f1959d33709e80c783541c00a4" translate="yes" xml:space="preserve">
          <source>Randomly shuffles these locations</source>
          <target state="translated">이 위치를 무작위로 섞습니다.</target>
        </trans-unit>
        <trans-unit id="233bbb94333a484f5ed0de6182087d0049c994b2" translate="yes" xml:space="preserve">
          <source>Seeks to each location, and reads a chunk of data from the file.</source>
          <target state="translated">각 위치를 검색하고 파일에서 데이터 청크를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ab864b09e57961fbe0cba2aa1e7545f8d61b858e" translate="yes" xml:space="preserve">
          <source>Sławomir Zborowski (@szborows): &lt;code&gt;seek_points&lt;/code&gt; method (#35), README fixes
(#34)</source>
          <target state="translated">Sławomir Zborowski (@szborows) : &lt;code&gt;seek_points&lt;/code&gt; 메서드 (# 35), README 수정 (# 34)</target>
        </trans-unit>
        <trans-unit id="ca3fe20a76eef5b93fc813096f74194ff14e340e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexed_gzip&lt;/code&gt; project is a Python extension which aims to provide a
drop-in replacement for the built-in Python &lt;code&gt;gzip.GzipFile&lt;/code&gt; class, the
&lt;code&gt;IndexedGzipFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 의 프로젝트는 드롭 인 (drop-in) 내장 파이썬 교체 제공하는 것을 목표로 파이썬 확장 &lt;code&gt;gzip.GzipFile&lt;/code&gt; 의 클래스는 &lt;code&gt;IndexedGzipFile&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="2020c8688dfec0531156ded271b7fbbfab60304b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexed_gzip&lt;/code&gt; project is based upon the &lt;code&gt;zran.c&lt;/code&gt; example (written by Mark
Alder) which ships with the &lt;a href=&quot;http://www.zlib.net/&quot;&gt;zlib&lt;/a&gt; source code.</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 의 프로젝트는에 기초 &lt;code&gt;zran.c&lt;/code&gt; 의 (마크 알더에 의해 작성) 예제에있는 선박 &lt;a href=&quot;http://www.zlib.net/&quot;&gt;ZLIB의&lt;/a&gt; 소스 코드.</target>
        </trans-unit>
        <trans-unit id="571108e734514a628d39943aec1102e7f10b83c3" translate="yes" xml:space="preserve">
          <source>The next time you open the same file, you can load in the index:</source>
          <target state="translated">다음에 동일한 파일을 열 때 색인에서로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="636c5d89ac9f1f727dad82399c7938d516d23ead" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;gzip.GzipFile&lt;/code&gt; class exposes a random access-like interface (via
its &lt;code&gt;seek&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods), but every time you seek to a new point in the
uncompressed data stream, the &lt;code&gt;GzipFile&lt;/code&gt; instance has to start decompressing
from the beginning of the file, until it reaches the requested location.</source>
          <target state="translated">표준 &lt;code&gt;gzip.GzipFile&lt;/code&gt; 클래스는 &lt;code&gt;seek&lt;/code&gt; 및 &lt;code&gt;read&lt;/code&gt; 메서드 를 통해 임의 액세스와 유사한 인터페이스를 노출 하지만 압축되지 않은 데이터 스트림에서 새 지점을 찾을 때마다 &lt;code&gt;GzipFile&lt;/code&gt; 인스턴스는 파일의 시작 부분부터 압축 해제를 시작해야합니다. , 요청한 위치에 도달 할 때까지.</target>
        </trans-unit>
        <trans-unit id="836e9fff95ab4a5fe2bf4b555e9c067ea9d1d493" translate="yes" xml:space="preserve">
          <source>This plot shows the results of this test for a few compresed files of varying
sizes, with 500 seeks:</source>
          <target state="translated">이 플롯은 500 개의 탐색으로 다양한 크기의 몇 가지 압축 파일에 대한이 테스트의 결과를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d123ab8a3f3d78a085aca5754e3a5c9941e494a4" translate="yes" xml:space="preserve">
          <source>To compile &lt;code&gt;indexed_gzip&lt;/code&gt;, make sure you have &lt;a href=&quot;http://cython.org/&quot;&gt;cython&lt;/a&gt;
installed (and &lt;code&gt;numpy&lt;/code&gt; if you want to compile the tests), and then run:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 을 컴파일하려면 &lt;a href=&quot;http://cython.org/&quot;&gt;cython이&lt;/a&gt; 설치되어 있는지 확인 하고 (테스트를 컴파일하려면 &lt;code&gt;numpy&lt;/code&gt; ) 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="13e1d3e99a0f0b17e452fdde430ccea790d0e994" translate="yes" xml:space="preserve">
          <source>To run the tests, type the following; you will need &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;pytest&lt;/code&gt;
and &lt;code&gt;pytest-cov&lt;/code&gt; installed:</source>
          <target state="translated">테스트를 실행하려면 다음을 입력하십시오. 당신이 필요합니다 &lt;code&gt;numpy&lt;/code&gt; , &lt;code&gt;pytest&lt;/code&gt; 및 &lt;code&gt;pytest-cov&lt;/code&gt; 설치 :</target>
        </trans-unit>
        <trans-unit id="37fc0f7f827f334cf88e3cac9a4f13ff294c82f7" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;indexed_gzip&lt;/code&gt; with &lt;code&gt;nibabel&lt;/code&gt; 2.1.0 or older, you need to do a little
more work:</source>
          <target state="translated">사용하려면 &lt;code&gt;indexed_gzip&lt;/code&gt; 와 &lt;code&gt;nibabel&lt;/code&gt; 2.1.0 또는 그 이상, 당신은 조금 더 많은 작업을 수행해야합니다</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="acb4470b21baa9bf78c366acae859a6a5a76e3c6" translate="yes" xml:space="preserve">
          <source>Using with &lt;code&gt;nibabel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nibabel&lt;/code&gt; 과 함께 사용</target>
        </trans-unit>
        <trans-unit id="15ced7a0e986222ea72d01a3804ddf11a636f252" translate="yes" xml:space="preserve">
          <source>Write support</source>
          <target state="translated">쓰기 지원</target>
        </trans-unit>
        <trans-unit id="5565c659f2414dfd3fa517b1ec534b07786d9152" translate="yes" xml:space="preserve">
          <source>You can also install &lt;code&gt;indexed_gzip&lt;/code&gt; from conda-forge:</source>
          <target state="translated">또한 설치할 수 있습니다 &lt;code&gt;indexed_gzip&lt;/code&gt; CONDA - 단조에서 :</target>
        </trans-unit>
        <trans-unit id="593b84192482bf5ebb5c0c754db92afbc5f1ca4f" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;indexed_gzip&lt;/code&gt; with &lt;code&gt;nibabel&lt;/code&gt;. &lt;code&gt;nibabel&lt;/code&gt; &amp;gt;= 2.3.0 will
automatically use &lt;code&gt;indexed_gzip&lt;/code&gt; if it is present:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 과 함께 &lt;code&gt;nibabel&lt;/code&gt; 사용할 수 있습니다 . &lt;code&gt;nibabel&lt;/code&gt; &amp;gt; = 2.3.0은 &lt;code&gt;indexed_gzip&lt;/code&gt; 이 있으면 자동으로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="2e6da209495418136ac6cff6badd9f7644e2d780" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;indexed_gzip&lt;/code&gt; module directly:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 모듈을 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36b11df25d44eda04c68df4ba7c2aa6f6a889355" translate="yes" xml:space="preserve">
          <source>You may find &lt;code&gt;indexed_gzip&lt;/code&gt; useful if you need to read from large GZIP files.
A major advantage of &lt;code&gt;indexed_gzip&lt;/code&gt; is that it will work with any GZIP file.
However, if you have control over the creation of your GZIP files, you may
wish to consider some alternatives:</source>
          <target state="translated">당신은 찾을 수 &lt;code&gt;indexed_gzip&lt;/code&gt; 당신이 큰 GZIP 파일을 읽을 수 있도록해야하는 경우 유용합니다. &lt;code&gt;indexed_gzip&lt;/code&gt; 의 주요 이점은 모든 GZIP 파일에서 작동한다는 것입니다. 그러나 GZIP 파일 생성을 제어 할 수있는 경우 몇 가지 대안을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55a76ae0d0d2bd2d1305e5fec70b297f002e48a7" translate="yes" xml:space="preserve">
          <source>Zalan Rajna (@zrajna): bug fixes (#2)</source>
          <target state="translated">Zalan Rajna (@zrajna) : 버그 수정 (# 2)</target>
        </trans-unit>
        <trans-unit id="00d3560860ce3645f9ea13e12b5de77cf558cd9e" translate="yes" xml:space="preserve">
          <source>indexed_gzip</source>
          <target state="translated">indexed_gzip</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
