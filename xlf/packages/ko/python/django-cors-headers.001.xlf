<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-cors-headers/">
    <body>
      <group id="django-cors-headers">
        <trans-unit id="b1bbb4351735821e4a2252410b193634571373b3" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;file://&amp;rsquo;</source>
          <target state="translated">'파일://'</target>
        </trans-unit>
        <trans-unit id="f1087c00c2a228914b3753c47ae2f5b8d7c3e741" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;null&amp;rsquo;</source>
          <target state="translated">'없는'</target>
        </trans-unit>
        <trans-unit id="b222a68b063cba63d0862f90237f9e59f33cd0a5" translate="yes" xml:space="preserve">
          <source>'Lax'</source>
          <target state="translated">'Lax'</target>
        </trans-unit>
        <trans-unit id="0e64b616ad5120beb238fe2d1e6e394eb93d999c" translate="yes" xml:space="preserve">
          <source>(one day).</source>
          <target state="translated">(하루).</target>
        </trans-unit>
        <trans-unit id="8368012b30708d17387d830033b63a4e8179feea" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;https://adamj.eu/tech/2020/06/29/why-does-python-raise-modulenotfounderror-when-modifying-installed-apps/&quot;&gt;this blog
post&lt;/a&gt;).</source>
          <target state="translated">( &lt;a href=&quot;https://adamj.eu/tech/2020/06/29/why-does-python-raise-modulenotfounderror-when-modifying-installed-apps/&quot;&gt;이 블로그 게시물&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7c373a82e5cd8be06ae24821d2b40d2c5a253510" translate="yes" xml:space="preserve">
          <source>(see more below).</source>
          <target state="translated">(아래 참조).</target>
        </trans-unit>
        <trans-unit id="f142c48f73d627d3979cdbd637d42cb8ef1b23da" translate="yes" xml:space="preserve">
          <source>) to determine what requests the server
actually accepts. Read more about it in the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Preflighted_requests&quot;&gt;CORS MDN article&lt;/a&gt;.</source>
          <target state="translated">)을 사용하여 서버가 실제로 수락하는 요청을 확인합니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Preflighted_requests&quot;&gt;CORS MDN 기사&lt;/a&gt; 에서 자세한 내용을 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="fb665f290614383c36b3f1f861f00b7be3e6caec" translate="yes" xml:space="preserve">
          <source>**kwargs</source>
          <target state="translated">** kwargs</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="e00ac940b7f7cd473cc40b75ca058f6f4d814b23" translate="yes" xml:space="preserve">
          <source>, all origins will be allowed. Other settings restricting allowed
origins will be ignored. Defaults to</source>
          <target state="translated">, 모든 출처가 허용됩니다. 허용 된 출처를 제한하는 다른 설정은 무시됩니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="b0f1a7570a2d50df71dfcf60c15525c071bda0d8" translate="yes" xml:space="preserve">
          <source>, cookies will be allowed to be included in cross-site HTTP
requests. Defaults to</source>
          <target state="translated">, 쿠키가 교차 사이트 HTTP 요청에 포함될 수 있습니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="ed81e9763917f7c181d3b2a7089d8c8b72eebc34" translate="yes" xml:space="preserve">
          <source>, i.e. match all URL&amp;rsquo;s. Useful when you only need CORS
on a part of your site, e.g. an API at</source>
          <target state="translated">즉, 모든 URL과 일치합니다. 사이트의 일부에서만 CORS가 필요할 때 유용합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="3c744d3add299b39fddc15a7a2eb0ee8b44c40d6" translate="yes" xml:space="preserve">
          <source>, this setting does not allow you to
distinguish between domains that are trusted to &lt;em&gt;read&lt;/em&gt; resources by CORS and
domains that are trusted to &lt;em&gt;change&lt;/em&gt; resources by avoiding CSRF protection.</source>
          <target state="translated">,이 설정을 사용하면 CORS에서 리소스 를 &lt;em&gt;읽을&lt;/em&gt; 수 있도록 신뢰할 수있는 도메인과 CSRF 보호를 방지 하여 리소스 를 &lt;em&gt;변경&lt;/em&gt; 하도록 신뢰할 수있는 도메인을 구분할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="69a4bb339264eb1970eda1199b6d841abf32d8ec" translate="yes" xml:space="preserve">
          <source>, which still works
as an alias, with the new name taking precedence.</source>
          <target state="translated">, 여전히 별칭으로 작동하며 새 이름이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="e2be6f1b66791278f0e69cfdcd431c994c287a10" translate="yes" xml:space="preserve">
          <source>.
Default ports (HTTPS = 443, HTTP = 80) are optional here.</source>
          <target state="translated">. 여기서 기본 포트 (HTTPS = 443, HTTP = 80)는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="9a2382b5b1bc419f6afadaef8ed448e48b3dce10" translate="yes" xml:space="preserve">
          <source>. If it is not before, it will not be able
to add the CORS headers to these responses.</source>
          <target state="translated">. 이전이 아니면 이러한 응답에 CORS 헤더를 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fdef94a8b8def3d49ed3cd46b4333ca76876f7a5" translate="yes" xml:space="preserve">
          <source>. Useful when</source>
          <target state="translated">. 유용 할 때</target>
        </trans-unit>
        <trans-unit id="357322ae39f93f572e23cd9edd3307e2ac5a321f" translate="yes" xml:space="preserve">
          <source>/api/</source>
          <target state="translated">/ api /</target>
        </trans-unit>
        <trans-unit id="72ca7130c47e21a3d4b74511e7dbb3179618c42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/signals/&quot;&gt;Django signal&lt;/a&gt;, which
provides the</source>
          <target state="translated">&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/signals/&quot;&gt;Django 신호&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="9564d09f10c1a65ff7336e89ad79c403ee954687" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Are your tests slow?&lt;/strong&gt;
Check out my book &lt;a href=&quot;https://gumroad.com/l/suydt&quot;&gt;Speed Up Your Django Tests&lt;/a&gt; which covers loads of best practices so you can write faster, more accurate tests.</source>
          <target state="translated">&lt;strong&gt;테스트가 느립니까? &lt;/strong&gt;더 빠르고 정확한 테스트를 작성할 수 있도록 많은 모범 사례를 다루는 내 책 &lt;a href=&quot;https://gumroad.com/l/suydt&quot;&gt;Speed ​​Up Your Django Tests&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b24b1731f9bfcedba10d43b9549fb9efb4cb157f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; A preflight request is an extra request that is made when making a
&amp;ldquo;not-so-simple&amp;rdquo; request (e.g.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 실행 전 요청은 &quot;그렇지 않은&quot;요청 (예 :</target>
        </trans-unit>
        <trans-unit id="cd05a74b9c873422ffe1b336692253d3bef2db5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;django-cors-headers&lt;/strong&gt; has had &lt;a href=&quot;https://github.com/adamchainz/django-cors-headers/graphs/contributors&quot;&gt;40+ contributors&lt;/a&gt;
in its time; thanks to every one of them.</source>
          <target state="translated">&lt;strong&gt;django-cors-headers&lt;/strong&gt; 는 그 당시에 &lt;a href=&quot;https://github.com/adamchainz/django-cors-headers/graphs/contributors&quot;&gt;40 명 이상의 기여자&lt;/a&gt; 가있었습니다 . 그들 모두에게 감사합니다.</target>
        </trans-unit>
        <trans-unit id="58ebfbe5f93d9a7ad9e5978fe361598cf283ef57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;django-cors-headers&lt;/strong&gt; was created in January 2013 by Otto Yiu. It went
unmaintained from August 2015 and was forked in January 2016 to the package
&lt;a href=&quot;https://github.com/zestedesavoir/django-cors-middleware&quot;&gt;django-cors-middleware&lt;/a&gt;
by Laville Augustin at Zeste de Savoir.
In September 2016, Adam Johnson, Ed Morley, and others gained maintenance
responsibility for &lt;strong&gt;django-cors-headers&lt;/strong&gt;
(&lt;a href=&quot;https://github.com/adamchainz/django-cors-headers/issues/110&quot;&gt;Issue 110&lt;/a&gt;)
from Otto Yiu.
Basically all of the changes in the forked &lt;strong&gt;django-cors-middleware&lt;/strong&gt; were
merged back, or re-implemented in a different way, so it should be possible to
switch back. If there&amp;rsquo;s a feature that hasn&amp;rsquo;t been merged, please open an issue
about it.</source>
          <target state="translated">&lt;strong&gt;django-cors-headers&lt;/strong&gt; 는 2013 년 1 월 Otto Yiu가 만들었습니다. 2015 년 8 월부터 유지 관리되지 않았으며 2016 년 1 월 Zeste de Savoir의 Laville Augustin에 의해 &lt;a href=&quot;https://github.com/zestedesavoir/django-cors-middleware&quot;&gt;django-&lt;/a&gt; cors -middleware 패키지로 분기되었습니다 . 2016 년 9 월 Adam Johnson, Ed Morley 등은 Otto Yiu의 &lt;strong&gt;django-cors-headers&lt;/strong&gt; ( &lt;a href=&quot;https://github.com/adamchainz/django-cors-headers/issues/110&quot;&gt;Issue 110&lt;/a&gt; )에 대한 유지 관리 책임을 얻었습니다 . 기본적으로 분기 된 &lt;strong&gt;django-cors-middleware의&lt;/strong&gt; 모든 변경 사항은 다시 병합되거나 다른 방식으로 다시 구현되었으므로 다시 전환 할 수 있습니다. 병합되지 않은 기능이있는 경우 관련 문제를여십시오.</target>
        </trans-unit>
        <trans-unit id="5d7ab18a0a53ed9afe75cf03c76cff139b14c526" translate="yes" xml:space="preserve">
          <source>A Django App that adds Cross-Origin Resource Sharing (CORS) headers to
responses. This allows in-browser requests to your Django application from
other origins.</source>
          <target state="translated">응답에 CORS (Cross-Origin Resource Sharing) 헤더를 추가하는 Django 앱. 이를 통해 다른 출처의 Django 애플리케이션에 대한 브라우저 내 요청이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="962a5aea65a503a97eeb2b2c56207143b063fd08" translate="yes" xml:space="preserve">
          <source>A common use case for the signal is to allow &lt;em&gt;all&lt;/em&gt; origins to access a subset
of URL&amp;rsquo;s, whilst allowing a normal set of origins to access &lt;em&gt;all&lt;/em&gt; URL&amp;rsquo;s. This
isn&amp;rsquo;t possible using just the normal configuration, but it can be achieved with
a signal handler.</source>
          <target state="translated">신호의 일반적인 사용 사례는 &lt;em&gt;모든&lt;/em&gt; 출처가 URL의 하위 집합에 액세스하도록 허용하는 반면 일반 출처 집합은 &lt;em&gt;모든&lt;/em&gt; URL 에 액세스 할 수 있도록 허용하는 것 입니다. 이것은 정상적인 구성만으로는 불가능하지만 신호 처리기로 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2839dc12b66b6dd79e075cd4c99c7b89726ab729" translate="yes" xml:space="preserve">
          <source>A list of HTTP verbs that are allowed for the actual request. Defaults to:</source>
          <target state="translated">실제 요청에 허용되는 HTTP 동사 목록입니다. 기본값 :</target>
        </trans-unit>
        <trans-unit id="2cf93a42b8913816b68aa2785f7159cfd8d7cefd" translate="yes" xml:space="preserve">
          <source>A list of origins that are authorized to make cross-site HTTP requests.
Defaults to</source>
          <target state="translated">교차 사이트 HTTP 요청을 할 수있는 권한이있는 출처 목록입니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="a8aebf2dfe1aabff97781ad1e1b45cd2ee3d7a88" translate="yes" xml:space="preserve">
          <source>A list of strings representing regexes that match Origins that are authorized
to make cross-site HTTP requests. Defaults to</source>
          <target state="translated">교차 사이트 HTTP 요청을 할 권한이있는 Origin과 일치하는 정규식을 나타내는 문자열 목록입니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="88f00c9fe7f29b05858923db0efdc70db2866a05" translate="yes" xml:space="preserve">
          <source>A regex which restricts the URL&amp;rsquo;s for which the CORS headers will be sent.
Defaults to</source>
          <target state="translated">CORS 헤더가 전송 될 URL을 제한하는 정규식입니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">약</target>
        </trans-unit>
        <trans-unit id="32cafb2da678c90406f9408ac41d05b198667379" translate="yes" xml:space="preserve">
          <source>About CORS</source>
          <target state="translated">CORS 정보</target>
        </trans-unit>
        <trans-unit id="1671cd7712d05aaf2ade6ba2f5d639a0ee952d56" translate="yes" xml:space="preserve">
          <source>Adding CORS headers allows your resources to be accessed on other domains. It&amp;rsquo;s
important you understand the implications before adding the headers, since you
could be unintentionally opening up your site&amp;rsquo;s private data to others.</source>
          <target state="translated">CORS 헤더를 추가하면 다른 도메인에서 리소스에 액세스 할 수 있습니다. 의도 치 않게 사이트의 개인 데이터를 다른 사람에게 공개 할 수 있으므로 헤더를 추가하기 전에 의미를 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="84782b16661db03de9153e57247ce0e54c445246" translate="yes" xml:space="preserve">
          <source>Also if you are using</source>
          <target state="translated">또한 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="2b9778b672ab88bf91782f17c0e9d774aa4c94c5" translate="yes" xml:space="preserve">
          <source>An Origin is defined by
&lt;a href=&quot;https://tools.ietf.org/html/rfc6454#section-3.2&quot;&gt;the CORS RFC Section 3.2&lt;/a&gt;
as a URI scheme + hostname + port, or one of the special values</source>
          <target state="translated">Origin은 &lt;a href=&quot;https://tools.ietf.org/html/rfc6454#section-3.2&quot;&gt;CORS RFC 섹션 3.2&lt;/a&gt; 에 의해 URI 체계 + 호스트 이름 + 포트 또는 특수 값 중 하나로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="542706c24d4067a38bec3ca799c3592fd7409915" translate="yes" xml:space="preserve">
          <source>CORS_ALLOWED_ORIGINS</source>
          <target state="translated">CORS_ALLOWED_ORIGINS</target>
        </trans-unit>
        <trans-unit id="58d9d152481d6d9008810e7d09ad8f140df2bc67" translate="yes" xml:space="preserve">
          <source>CORS_ALLOWED_ORIGIN_REGEXES</source>
          <target state="translated">CORS_ALLOWED_ORIGIN_REGEXES</target>
        </trans-unit>
        <trans-unit id="c47b43a8c7ade4b484f37bb190a576a69e034973" translate="yes" xml:space="preserve">
          <source>CORS_ALLOW_ALL_ORIGINS</source>
          <target state="translated">CORS_ALLOW_ALL_ORIGINS</target>
        </trans-unit>
        <trans-unit id="83ce1e50fdb41952196e090fc1f2239c05071f70" translate="yes" xml:space="preserve">
          <source>CORS_ALLOW_CREDENTIALS</source>
          <target state="translated">CORS_ALLOW_CREDENTIALS</target>
        </trans-unit>
        <trans-unit id="0e6045e7c37ebfcc3cf394087cfd61d08a1f16e4" translate="yes" xml:space="preserve">
          <source>CORS_ALLOW_HEADERS</source>
          <target state="translated">CORS_ALLOW_HEADERS</target>
        </trans-unit>
        <trans-unit id="79b860a03049bdc81d7dbe27022edd4841b1913d" translate="yes" xml:space="preserve">
          <source>CORS_ALLOW_METHODS</source>
          <target state="translated">CORS_ALLOW_METHODS</target>
        </trans-unit>
        <trans-unit id="759a7521f1b86428cd117ec1943df8b4baddea0e" translate="yes" xml:space="preserve">
          <source>CORS_EXPOSE_HEADERS</source>
          <target state="translated">CORS_EXPOSE_HEADERS</target>
        </trans-unit>
        <trans-unit id="0ba6e7b6b967bc92f705abcd91c128acff7cd918" translate="yes" xml:space="preserve">
          <source>CORS_ORIGIN_ALLOW_ALL</source>
          <target state="translated">CORS_ORIGIN_ALLOW_ALL</target>
        </trans-unit>
        <trans-unit id="a5d204cc0c5b2b3b9deb560d12832662582d9ab9" translate="yes" xml:space="preserve">
          <source>CORS_ORIGIN_REGEX_WHITELIST</source>
          <target state="translated">CORS_ORIGIN_REGEX_WHITELIST</target>
        </trans-unit>
        <trans-unit id="cfc0041cbd18b84fb1c2e8301a6f190b6cd767fc" translate="yes" xml:space="preserve">
          <source>CORS_ORIGIN_WHITELIST</source>
          <target state="translated">CORS_ORIGIN_WHITELIST</target>
        </trans-unit>
        <trans-unit id="4f7a0ef5a32f859cca69ff97d8530015d4556990" translate="yes" xml:space="preserve">
          <source>CORS_PREFLIGHT_MAX_AGE</source>
          <target state="translated">CORS_PREFLIGHT_MAX_AGE</target>
        </trans-unit>
        <trans-unit id="7d8cded306500dd9816080288e86138fecbf448a" translate="yes" xml:space="preserve">
          <source>CORS_REPLACE_HTTPS_REFERER</source>
          <target state="translated">CORS_REPLACE_HTTPS_REFERER</target>
        </trans-unit>
        <trans-unit id="a4845f468dd8581e100514a6be741351bf94577e" translate="yes" xml:space="preserve">
          <source>CORS_URLS_REGEX</source>
          <target state="translated">CORS_URLS_REGEX</target>
        </trans-unit>
        <trans-unit id="c0678fc026aa08a98fcaf1a27200cdae6971785f" translate="yes" xml:space="preserve">
          <source>CSRF Integration</source>
          <target state="translated">CSRF 통합</target>
        </trans-unit>
        <trans-unit id="a2e9ce0766b566b18d81eaf041890b3c7e1112fb" translate="yes" xml:space="preserve">
          <source>CSRF_TRUSTED_ORIGINS</source>
          <target state="translated">CSRF_TRUSTED_ORIGINS</target>
        </trans-unit>
        <trans-unit id="093218b75283254673173596448cb1da27894fb3" translate="yes" xml:space="preserve">
          <source>CommonMiddleware</source>
          <target state="translated">CommonMiddleware</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="a4926ae21092cf80683b4bd70a5c7c08d24d4ef8" translate="yes" xml:space="preserve">
          <source>Configure the middleware&amp;rsquo;s behaviour in your Django settings. You must set at
least one of three following settings:</source>
          <target state="translated">Django 설정에서 미들웨어의 동작을 구성하십시오. 다음 세 가지 설정 중 하나 이상을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="77d12b97ba61ffccb079e0dd2ef6809c1e957255" translate="yes" xml:space="preserve">
          <source>Content-Type</source>
          <target state="translated">컨텐츠 타입</target>
        </trans-unit>
        <trans-unit id="299665d161b12569b15086b5eb72b07b838e6fbb" translate="yes" xml:space="preserve">
          <source>CorsMiddleware</source>
          <target state="translated">CorsMiddleware</target>
        </trans-unit>
        <trans-unit id="18533deb170f81c37efc7c36d6cc4247e168f231" translate="yes" xml:space="preserve">
          <source>CsrfViewMiddleware</source>
          <target state="translated">CsrfView 미들웨어</target>
        </trans-unit>
        <trans-unit id="9522fba70d57c7dcbfaa56cc1e9fa790e281f892" translate="yes" xml:space="preserve">
          <source>Django 2.2 to 3.0 supported.</source>
          <target state="translated">Django 2.2 ~ 3.0 지원.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="2ee62a1978edd627c6970d10cba873be39deeb91" translate="yes" xml:space="preserve">
          <source>First set</source>
          <target state="translated">첫 번째 세트</target>
        </trans-unit>
        <trans-unit id="3ef9846ab118010184c6359e04bfb2326f3541c8" translate="yes" xml:space="preserve">
          <source>For example you might define a handler like this:</source>
          <target state="translated">예를 들어 다음과 같은 핸들러를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">만약</target>
        </trans-unit>
        <trans-unit id="d2de8bcb79dd444220ca809e7973bc32bb5276bc" translate="yes" xml:space="preserve">
          <source>If you have a use case that requires more than just the above configuration,
you can attach code to check if a given request should be allowed. For example,
this can be used to read the list of origins you allow from a model. Attach any
number of handlers to the</source>
          <target state="translated">위의 구성 이상이 필요한 사용 사례가있는 경우 코드를 첨부하여 주어진 요청을 허용해야하는지 확인할 수 있습니다. 예를 들어, 이것은 모델에서 허용하는 출처 목록을 읽는 데 사용할 수 있습니다. 원하는 수의 핸들러를</target>
        </trans-unit>
        <trans-unit id="95effd3313e24ca8f50b3ba8cc47d2dea9cb69f4" translate="yes" xml:space="preserve">
          <source>Install from &lt;strong&gt;pip&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;pip&lt;/strong&gt; 에서 설치 :</target>
        </trans-unit>
        <trans-unit id="38da06d6f9a58a38c26780db8ee54d1993aa87fb" translate="yes" xml:space="preserve">
          <source>Julia Evans&amp;rsquo; &lt;a href=&quot;https://drawings.jvns.ca/cors/&quot;&gt;introductory comic&lt;/a&gt;</source>
          <target state="translated">줄리아 에반스의 &lt;a href=&quot;https://drawings.jvns.ca/cors/&quot;&gt;입문 만화&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcbe1f29f8808bbb8f2d5fe03807c2da860b8830" translate="yes" xml:space="preserve">
          <source>MIDDLEWARE_CLASSES</source>
          <target state="translated">MIDDLEWARE_CLASSES</target>
        </trans-unit>
        <trans-unit id="c894bbd1f652a4aaaa4ba7a565e497d3601d3bae" translate="yes" xml:space="preserve">
          <source>Make sure you add the trailing comma or you might get a</source>
          <target state="translated">후행 쉼표를 추가했는지 확인하십시오. 그렇지 않으면</target>
        </trans-unit>
        <trans-unit id="4dc7c7ee2e220614ae05c4256b05b12812ad8cf9" translate="yes" xml:space="preserve">
          <source>ModuleNotFoundError</source>
          <target state="translated">ModuleNotFoundError</target>
        </trans-unit>
        <trans-unit id="50e4377c9e9a6bd373896a76f08b880a078b045a" translate="yes" xml:space="preserve">
          <source>Most sites will need to take advantage of the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/csrf/&quot;&gt;Cross-Site Request Forgery
protection&lt;/a&gt; that Django
offers. CORS and CSRF are separate, and Django has no way of using your CORS
configuration to exempt sites from the</source>
          <target state="translated">대부분의 사이트는 Django가 제공 하는 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/csrf/&quot;&gt;Cross-Site Request Forgery 보호 기능&lt;/a&gt; 을 활용해야 합니다. CORS와 CSRF는 별개이며 Django는 CORS 구성을 사용하여 사이트를</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>
        </trans-unit>
        <trans-unit id="8227bf744b78a163f5df2b3f622bd509d1f6bb06" translate="yes" xml:space="preserve">
          <source>Note that unlike</source>
          <target state="translated">달리</target>
        </trans-unit>
        <trans-unit id="66bf3206b8dfb456adadc644fa240657046ef514" translate="yes" xml:space="preserve">
          <source>Note: in Django 2.1 the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt;SESSION_COOKIE_SAMESITE&lt;/a&gt; setting was added, set to</source>
          <target state="translated">참고 : Django 2.1에서는 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt;SESSION_COOKIE_SAMESITE&lt;/a&gt; 설정이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="29e33b6943441bcdef2701bd577522f0175dfafa" translate="yes" xml:space="preserve">
          <source>Previously this setting was called</source>
          <target state="translated">이전에이 설정은</target>
        </trans-unit>
        <trans-unit id="a9f056c0b208888f74045b0cacc406a8d7efc308" translate="yes" xml:space="preserve">
          <source>Python 3.5 to 3.8 supported.</source>
          <target state="translated">Python 3.5 ~ 3.8이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="699b2fb0910ccc7c0854d17a2041a907709ed3c1" translate="yes" xml:space="preserve">
          <source>Referer</source>
          <target state="translated">추천인</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="10dbcc555dad87ad7179268103867549e44e29e2" translate="yes" xml:space="preserve">
          <source>Setting this to</source>
          <target state="translated">이것을로 설정</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">신호</target>
        </trans-unit>
        <trans-unit id="403faf0ebfc085a316be4c53d60538f29423b6a8" translate="yes" xml:space="preserve">
          <source>Some good resources to read on the subject are:</source>
          <target state="translated">주제에 대해 읽을 수있는 몇 가지 좋은 자료는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a914aefa0b385db09b30c59a1535b2dac9659021" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;MDN Article&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;MDN 제&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5c538cfc3b4c6e24deb915e543f1c8ff12dbd8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;Wikipedia Page&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;위키 백과 페이지&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11856082cda86b71d2ee45db64f70ee309327975" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.html5rocks.com/en/tutorials/cors/&quot;&gt;HTML5 Rocks Tutorial&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.html5rocks.com/en/tutorials/cors/&quot;&gt;HTML5는 튜토리얼 록스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48534b4f42556cee387eb3fab6aa9959924c6fcf" translate="yes" xml:space="preserve">
          <source>The default can be imported as</source>
          <target state="translated">기본값은 다음과 같이 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98795d989af3311129fb48471bc9140e7c4e90fb" translate="yes" xml:space="preserve">
          <source>The following are optional settings, for which the defaults probably suffice.</source>
          <target state="translated">다음은 선택적 설정이며 기본값으로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="544ccd87e9b5d5404b6ca4a45692016d35d0fd75" translate="yes" xml:space="preserve">
          <source>The list of HTTP headers that are to be exposed to the browser. Defaults to</source>
          <target state="translated">브라우저에 노출 될 HTTP 헤더 목록입니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="7b39334b9e6d391f090e4cbf786a4a4a1b8ecabf" translate="yes" xml:space="preserve">
          <source>The list of non-standard HTTP headers that can be used when making the actual
request. Defaults to:</source>
          <target state="translated">실제 요청을 할 때 사용할 수있는 비표준 HTTP 헤더 목록입니다. 기본값 :</target>
        </trans-unit>
        <trans-unit id="02fc2a8714fc12f30409c03efc191c173c2f71c9" translate="yes" xml:space="preserve">
          <source>The number of seconds a client/browser can cache the preflight response. If
this is 0 (or any falsey value), no max age header will be sent. Defaults to</source>
          <target state="translated">클라이언트 / 브라우저가 프리 플라이트 응답을 캐시 할 수있는 시간 (초)입니다. 이것이 0 (또는 거짓 값)이면 max age 헤더가 전송되지 않습니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="af99d53bd2ed5bb13ec63b90c47289279927dbca" translate="yes" xml:space="preserve">
          <source>The special value</source>
          <target state="translated">특별한 가치</target>
        </trans-unit>
        <trans-unit id="b03a0bc9fceaf0c74b2413f9ed3ee6d85015c47c" translate="yes" xml:space="preserve">
          <source>Then connect it at app ready time using a &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/applications/&quot;&gt;Django AppConfig&lt;/a&gt;:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/applications/&quot;&gt;Django AppConfig를&lt;/a&gt; 사용하여 앱 준비 시간에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">진실</target>
        </trans-unit>
        <trans-unit id="df42d83951f4cd63703453bbc2f232e0d871dcde" translate="yes" xml:space="preserve">
          <source>WhiteNoiseMiddleware</source>
          <target state="translated">WhiteNoise 미들웨어</target>
        </trans-unit>
        <trans-unit id="e1481beb4bf1c5a9c9efe51d437dfc3c7955ba6f" translate="yes" xml:space="preserve">
          <source>With this feature enabled you should also add</source>
          <target state="translated">이 기능을 활성화하면</target>
        </trans-unit>
        <trans-unit id="c45ecdcd9d11c1b137ea81ae297e620326cd1d7a" translate="yes" xml:space="preserve">
          <source>You will also need to add a middleware class to listen in on responses:</source>
          <target state="translated">또한 응답을 수신하기 위해 미들웨어 클래스를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">후</target>
        </trans-unit>
        <trans-unit id="cec25ded32eda11078ed2ab986fa0e9b69e93cc3" translate="yes" xml:space="preserve">
          <source>and then add it to your installed apps:</source>
          <target state="translated">그런 다음 설치된 앱에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d6849af2ec582d2e5ba2ee543ca6818d1b03ac" translate="yes" xml:space="preserve">
          <source>application/x-www-form-urlencoded</source>
          <target state="translated">응용 프로그램 / x-www-form-urlencoded</target>
        </trans-unit>
        <trans-unit id="4bcbcfdfa2eae99e417625a430f6424c3c2f28ac" translate="yes" xml:space="preserve">
          <source>argument (use</source>
          <target state="translated">인수 (사용</target>
        </trans-unit>
        <trans-unit id="e927297ed80ef819807aedc1b8145a1cd3c9e66f" translate="yes" xml:space="preserve">
          <source>by default, which will prevent Django&amp;rsquo;s session cookie being sent
cross-domain. Change it to</source>
          <target state="translated">기본적으로 Django의 세션 쿠키가 도메인 간 전송되는 것을 방지합니다. 다음으로 변경</target>
        </trans-unit>
        <trans-unit id="61d2a340d4175b05b5fee527e6467310a9e0de0d" translate="yes" xml:space="preserve">
          <source>can be &lt;em&gt;dangerous&lt;/em&gt;, as it allows any website to make
cross-origin requests to yours. Generally you&amp;rsquo;ll want to restrict the list of
allowed origins with</source>
          <target state="translated">모든 웹 사이트가 귀하의 사이트에 교차 출처 요청을 할 수 있도록 허용 &lt;em&gt;하므로 위험&lt;/em&gt; 할 수 있습니다 . 일반적으로 허용 된 출처 목록을 다음과 같이 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd6442af522752f4c5504ac530cd9910848f257a" translate="yes" xml:space="preserve">
          <source>check_request_enabled</source>
          <target state="translated">check_request_enabled</target>
        </trans-unit>
        <trans-unit id="e649dd3f9ea1d7eaba4f97159afb7956c305ad01" translate="yes" xml:space="preserve">
          <source>checking that it does on
secure requests. The way to do that is with its &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/settings/#csrf-trusted-origins&quot;&gt;CSRF_TRUSTED_ORIGINS setting&lt;/a&gt;.
For example:</source>
          <target state="translated">보안 요청에서 수행되는지 확인합니다. 이를 수행하는 방법은 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/settings/#csrf-trusted-origins&quot;&gt;CSRF_TRUSTED_ORIGINS 설정을 사용하는 것&lt;/a&gt; 입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="bef904529d943dd782b0eae3f0c81efe7f71a591" translate="yes" xml:space="preserve">
          <source>corsheaders.defaults.default_headers</source>
          <target state="translated">corsheaders.defaults.default_headers</target>
        </trans-unit>
        <trans-unit id="9c817ce5e034d6fe82fcc799935bce56a9734e54" translate="yes" xml:space="preserve">
          <source>corsheaders.defaults.default_methods</source>
          <target state="translated">corsheaders.defaults.default_methods</target>
        </trans-unit>
        <trans-unit id="806ff92dacce8a1bca2ecddf664e26301bdcb6ba" translate="yes" xml:space="preserve">
          <source>corsheaders.middleware.CorsPostCsrfMiddleware</source>
          <target state="translated">corsheaders.middleware.CorsPostCsrfMiddleware</target>
        </trans-unit>
        <trans-unit id="3ef25193ebcd840dd3a203e07fabab48ee9ff7b8" translate="yes" xml:space="preserve">
          <source>django-cors-headers is a Django application for handling the server headers required for Cross-Origin Resource Sharing (CORS).</source>
          <target state="translated">django-cors-headers는 CORS (Cross-Origin Resource Sharing)에 필요한 서버 헤더를 처리하기위한 Django 애플리케이션입니다.</target>
        </trans-unit>
        <trans-unit id="e88d6a81fece31e423a0616ea84d888b1b51a622" translate="yes" xml:space="preserve">
          <source>django.middleware.csrf.CsrfViewMiddleware</source>
          <target state="translated">django.middleware.csrf.CsrfViewMiddleware</target>
        </trans-unit>
        <trans-unit id="c731dce6c65a410526481676c798d64c1a1a4847" translate="yes" xml:space="preserve">
          <source>domain.
The special value</source>
          <target state="translated">도메인. 특별한 가치</target>
        </trans-unit>
        <trans-unit id="a91e4897ca9f429677afc57ed00d90de8d3c7001" translate="yes" xml:space="preserve">
          <source>file://</source>
          <target state="translated">파일://</target>
        </trans-unit>
        <trans-unit id="ebf230eeed19ed40e47bfc499cb21855da252829" translate="yes" xml:space="preserve">
          <source>header to something
that will pass Django&amp;rsquo;s CSRF checks whenever the CORS checks pass. Defaults to</source>
          <target state="translated">CORS 검사가 통과 할 때마다 Django의 CSRF 검사를 통과 할 무언가에 대한 헤더. 기본값은</target>
        </trans-unit>
        <trans-unit id="d4b6b3f2b6b781c53aa997df940a92ca4148f1d1" translate="yes" xml:space="preserve">
          <source>in your</source>
          <target state="translated">당신의</target>
        </trans-unit>
        <trans-unit id="dd823611d458b4ade2cb9b562a4e0d73f652ac54" translate="yes" xml:space="preserve">
          <source>in your handler to protect
against any future arguments being added). If any handler attached to the
signal returns a truthy value, the request will be allowed.</source>
          <target state="translated">앞으로 추가되는 인수로부터 보호하기 위해 처리기에서). 신호에 연결된 핸들러가 진실 값을 반환하면 요청이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">이다</target>
        </trans-unit>
        <trans-unit id="0193984122c8372446e4d16e6fad0607aa8df491" translate="yes" xml:space="preserve">
          <source>is impractical, such as when you have a large number
of subdomains.</source>
          <target state="translated">하위 도메인이 많은 경우와 같이 비실용적입니다.</target>
        </trans-unit>
        <trans-unit id="e82fdbe87df063bbd6188f48b5ff47c8f53b5e5b" translate="yes" xml:space="preserve">
          <source>is not</source>
          <target state="translated">아니다</target>
        </trans-unit>
        <trans-unit id="3a9c8d4f71d342a91662d099c03c7d22fe42fa48" translate="yes" xml:space="preserve">
          <source>is sent accidentally by some versions of Chrome on
Android as per &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=991107&quot;&gt;this bug&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=991107&quot;&gt;이 버그&lt;/a&gt; 에 따라 Android의 일부 Chrome 버전에서 실수로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="f4c18e6d3a44710c9b69fafbd3ea0648eeb9cc27" translate="yes" xml:space="preserve">
          <source>is sent by the browser in
&lt;a href=&quot;https://tools.ietf.org/html/rfc6454#section-6&quot;&gt;&amp;ldquo;privacy-sensitive contexts&amp;rdquo;&lt;/a&gt;,
such as when the client is running from a</source>
          <target state="translated">브라우저가 &lt;a href=&quot;https://tools.ietf.org/html/rfc6454#section-6&quot;&gt;&quot;개인 정보에 민감한 컨텍스트&quot;&lt;/a&gt; 로 전송됩니다 ( 예 : 클라이언트가</target>
        </trans-unit>
        <trans-unit id="26acf96dfdfb7d390b9f776fab3d23de784532aa" translate="yes" xml:space="preserve">
          <source>it should be placed before
Django&amp;rsquo;s</source>
          <target state="translated">Django의 앞에 배치되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">없는</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="e3727a6f124e12ca4bd8693960c2bcc31d63ff04" translate="yes" xml:space="preserve">
          <source>or
Whitenoise&amp;rsquo;s</source>
          <target state="translated">또는 Whitenoise</target>
        </trans-unit>
        <trans-unit id="105b709a07040b95c90c40e815e3937c5ed91f37" translate="yes" xml:space="preserve">
          <source>r'^.*$'</source>
          <target state="translated">r '^. * $'</target>
        </trans-unit>
        <trans-unit id="26b3cd9ee9019b277bc13efe6da1d908109e5e26" translate="yes" xml:space="preserve">
          <source>replacement:</source>
          <target state="translated">바꿔 놓음:</target>
        </trans-unit>
        <trans-unit id="088e29b0ab0079560dea5d3e5aeb2f7868af661e" translate="yes" xml:space="preserve">
          <source>request</source>
          <target state="translated">의뢰</target>
        </trans-unit>
        <trans-unit id="b101b7f18ea1538e470c527a5e2208960b633cec" translate="yes" xml:space="preserve">
          <source>should be placed as high as possible, especially before any
middleware that can generate responses such as Django&amp;rsquo;s</source>
          <target state="translated">특히 Django와 같은 응답을 생성 할 수있는 미들웨어 앞에는 가능한 한 높게 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="bce2ed730271f9f279b2cbb784b11de909672084" translate="yes" xml:space="preserve">
          <source>so you
can extend it with your custom headers. This allows you to keep up to date with
any future changes. For example:</source>
          <target state="translated">사용자 정의 헤더로 확장 할 수 있습니다. 이를 통해 향후 변경 사항을 최신 상태로 유지할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="207fd5ef87f57dc640c07dde69ee9e22b1a49cf2" translate="yes" xml:space="preserve">
          <source>so you
can just extend it with your custom methods. This allows you to keep up to date
with any future changes. For example:</source>
          <target state="translated">사용자 지정 메서드로 확장 할 수 있습니다. 이를 통해 향후 변경 사항을 최신 상태로 유지할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="e61ea27bc8cb936e28546cc99a67f6733d80aac5" translate="yes" xml:space="preserve">
          <source>to
undo the</source>
          <target state="translated">취소하려면</target>
        </trans-unit>
        <trans-unit id="1096cf24f93329d68024376b88c03a687ed8d97c" translate="yes" xml:space="preserve">
          <source>to allow CORS regardless of the origin for the
unrestricted URL&amp;rsquo;s. For example:</source>
          <target state="translated">무제한 URL의 출처에 관계없이 CORS를 허용합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2ad4668a69b6ab71f7ca0685c3efa20a48df65ae" translate="yes" xml:space="preserve">
          <source>to bypass this security restriction.</source>
          <target state="translated">이 보안 제한을 우회합니다.</target>
        </trans-unit>
        <trans-unit id="ad1ef4844ea364c0ad9c770126801c4b094e3e2c" translate="yes" xml:space="preserve">
          <source>to the list of trusted origins that are
allowed to access every URL, and then add a handler to</source>
          <target state="translated">모든 URL에 액세스 할 수있는 신뢰할 수있는 출처 목록에 추가 한 다음</target>
        </trans-unit>
        <trans-unit id="3e7ebb926f9d18210e2cf0caaedec55d7cd2f7b8" translate="yes" xml:space="preserve">
          <source>was introduced in Django 1.9, so users of earlier
versions will need an alternate solution. If</source>
          <target state="translated">Django 1.9에서 도입되었으므로 이전 버전의 사용자는 대체 솔루션이 필요합니다. 만약</target>
        </trans-unit>
        <trans-unit id="34344e3d783a6144e2ab488b5291c352b8a37ef6" translate="yes" xml:space="preserve">
          <source>will change the</source>
          <target state="translated">변경됩니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
