<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pylint-junit/">
    <body>
      <group id="pylint-junit">
        <trans-unit id="18cfa915c69558daaa2dc52f6cf7842f56298577" translate="yes" xml:space="preserve">
          <source>Add following lines into your .pylintrc:</source>
          <target state="translated">Add following lines into your .pylintrc:</target>
        </trans-unit>
        <trans-unit id="9bac9046334efe3f7d322a3dccb3dbf7c3468ffe" translate="yes" xml:space="preserve">
          <source>After the plugin has been installed there are few options to take it into use.</source>
          <target state="translated">After the plugin has been installed there are few options to take it into use.</target>
        </trans-unit>
        <trans-unit id="87cf90078d64a90dd46c5561c6d9c81fb6b5a78d" translate="yes" xml:space="preserve">
          <source>At the time of writing, few tools existed that where able to generate
JUnit format from pylint output. Both of these projects where not
handling &amp;ldquo;empty&amp;rdquo; results scenario well, eg both cases generated an empty
file and that caused issues in ci as the resulting document was not
proper xml file. Another issue was that issues found by pylint where
marked under single testcase failure and this caused atleast Azure to
report a single item per file even thought there could have been multiple.</source>
          <target state="translated">At the time of writing, few tools existed that where able to generate JUnit format from pylint output. Both of these projects where not handling &amp;ldquo;empty&amp;rdquo; results scenario well, eg both cases generated an empty file and that caused issues in ci as the resulting document was not proper xml file. Another issue was that issues found by pylint where marked under single testcase failure and this caused atleast Azure to report a single item per file even thought there could have been multiple.</target>
        </trans-unit>
        <trans-unit id="9aa69e236b023bae50c3f579c2acdf1ddb2f346e" translate="yes" xml:space="preserve">
          <source>Bugs / Feedback</source>
          <target state="translated">Bugs / Feedback</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="8ba1547b939b46374b4e4e77cc85b826cfafec06" translate="yes" xml:space="preserve">
          <source>Install the package with</source>
          <target state="translated">Install the package with</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="b18d29f729c76555f17ded1484ae33efda3cfb77" translate="yes" xml:space="preserve">
          <source>Or, without making any changes to your pylint configuration, you can just pass the class
as report formatter like this:</source>
          <target state="translated">Or, without making any changes to your pylint configuration, you can just pass the class as report formatter like this:</target>
        </trans-unit>
        <trans-unit id="68eeb05fcec7902f3815f4643f67cddb9e855ff6" translate="yes" xml:space="preserve">
          <source>Pylint plugin that generates JUnit based report that can be consumed
by CI environments like Jenkins, Azure Devops and such.</source>
          <target state="translated">Pylint plugin that generates JUnit based report that can be consumed by CI environments like Jenkins, Azure Devops and such.</target>
        </trans-unit>
        <trans-unit id="99521f1ed85c799a7a6b6cf9f8eda71355badf2b" translate="yes" xml:space="preserve">
          <source>This does set the default output to junit, so if still want to run pylint and get
normal output, you might want to consider omitting the &amp;ldquo;output-format=junit&amp;rdquo;
portion and only when junit format is needed, provide it via command line like this:</source>
          <target state="translated">This does set the default output to junit, so if still want to run pylint and get normal output, you might want to consider omitting the &amp;ldquo;output-format=junit&amp;rdquo; portion and only when junit format is needed, provide it via command line like this:</target>
        </trans-unit>
        <trans-unit id="faad7e3a2fcbd580b7d07d44dde86f4341e73085" translate="yes" xml:space="preserve">
          <source>Thus, pylint_junit was written.</source>
          <target state="translated">Thus, pylint_junit was written.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="a561b115f50408584416d847883c741eaaefa6e3" translate="yes" xml:space="preserve">
          <source>Use Github Issues Tracker @ &lt;a href=&quot;https://github.com/salabs/pylint_junit/issues&quot;&gt;https://github.com/salabs/pylint_junit/issues&lt;/a&gt;</source>
          <target state="translated">Use Github Issues Tracker @ &lt;a href=&quot;https://github.com/salabs/pylint_junit/issues&quot;&gt;https://github.com/salabs/pylint_junit/issues&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba09fa6b55a3bdb0facb3573158b662f2856f540" translate="yes" xml:space="preserve">
          <source>Why ?</source>
          <target state="translated">왜 ?</target>
        </trans-unit>
        <trans-unit id="07cd58c0fb0270de25e72092d0c43a3725903808" translate="yes" xml:space="preserve">
          <source>junit_xml</source>
          <target state="translated">junit_xml</target>
        </trans-unit>
        <trans-unit id="6a56f88d6e1e554133b34e05dc9ce615f9da3ed6" translate="yes" xml:space="preserve">
          <source>or add it to your requirements.</source>
          <target state="translated">or add it to your requirements.</target>
        </trans-unit>
        <trans-unit id="0de915d6944ce0d5717e2dad9712a93fb112b650" translate="yes" xml:space="preserve">
          <source>pylint reporter for junit format.</source>
          <target state="translated">pylint reporter for junit format.</target>
        </trans-unit>
        <trans-unit id="5438e647a841f77614e2422810d1dd8d859d792f" translate="yes" xml:space="preserve">
          <source>pylint_junit</source>
          <target state="translated">pylint_junit</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
