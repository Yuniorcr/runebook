<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/ipopt/">
    <body>
      <group id="ipopt">
        <trans-unit id="26bb61eaa536d64b69b58e01a29de88d6e306b29" translate="yes" xml:space="preserve">
          <source>(Requires that you have Vagrant+VirtualBox
installed). Then you can access the system by:</source>
          <target state="translated">(Vagrant + VirtualBox가 설치되어 있어야합니다). 그런 다음 다음을 통해 시스템에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6f803035231285552fdbf41272be8d18c64098a" translate="yes" xml:space="preserve">
          <source>(prepend</source>
          <target state="translated">(앞에</target>
        </trans-unit>
        <trans-unit id="5a0f80c1dd9e01383c6f4deea16ac8c9b1152c4a" translate="yes" xml:space="preserve">
          <source>, for example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d053244dadb3d38d2773c7b0a8c613128923e124" translate="yes" xml:space="preserve">
          <source>.  Also, if you get</source>
          <target state="translated">. 또한</target>
        </trans-unit>
        <trans-unit id="d04b75a46854766cd0eea3e971138c2f7e25d156" translate="yes" xml:space="preserve">
          <source>. Download the</source>
          <target state="translated">. 다운로드</target>
        </trans-unit>
        <trans-unit id="523ef3faabe09aa0cc12317349c052e59c172ff1" translate="yes" xml:space="preserve">
          <source>. Then you can start the container by:</source>
          <target state="translated">. 그런 다음 다음을 수행하여 컨테이너를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40883354042932bf2a770287d468db649686eea4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://projects.coin-or.org/Ipopt&quot;&gt;Ipopt&lt;/a&gt; (Interior Point OPTimizer, pronounced eye-pea-opt) is a software package
for large-scale nonlinear optimization. Ipopt is available from the &lt;a href=&quot;https://projects.coin-or.org/&quot;&gt;COIN-OR&lt;/a&gt;
initiative, under the Eclipse Public License (EPL).</source>
          <target state="translated">&lt;a href=&quot;https://projects.coin-or.org/Ipopt&quot;&gt;Ipopt&lt;/a&gt; (Interior Point OPTimizer, 뚜렷한 eye-pea-opt)는 대규모 비선형 최적화를위한 소프트웨어 패키지입니다. Ipopt는 Eclipse Public License (EPL)에 따라 &lt;a href=&quot;https://projects.coin-or.org/&quot;&gt;COIN-OR&lt;/a&gt; 이니셔티브 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="972bdb8fd75d78d204deadef18685ebe50896f1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Only conda Python has been tested to work at the moment, and &lt;em&gt;not&lt;/em&gt;
the official python.org distribution. There is likely a binary compatibility
issue between the C compiler used to build IPOPT and that used for compiling
Python extensions in the official Python distribution (see
&lt;a href=&quot;https://github.com/matthias-k/cyipopt/issues/52&quot;&gt;https://github.com/matthias-k/cyipopt/issues/52&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; conda Python 만 현재 작동하도록 테스트되었으며 공식 python.org 배포판이 &lt;em&gt;아닙니다&lt;/em&gt; . IPOPT를 빌드하는 데 사용되는 C 컴파일러와 공식 Python 배포판에서 Python 확장을 컴파일하는 데 사용되는 컴파일러간에 바이너리 호환성 문제가있을 수 있습니다 ( &lt;a href=&quot;https://github.com/matthias-k/cyipopt/issues/52&quot;&gt;https://github.com/matthias-k/cyipopt/issues/52 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0f0d6eb362baa216f332f667f143f8416790f9a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This repository was forked from https://bitbucket.org/amitibo/cyipopt and is
now considered the primary repository.&lt;/strong&gt; The fork includes a SciPy-style
interface, ability to handle exceptions in the callback functions, and docker
container for easy usage.</source>
          <target state="translated">&lt;strong&gt;이 저장소는 https://bitbucket.org/amitibo/cyipopt에서 분기되었으며 이제 기본 저장소로 간주됩니다. &lt;/strong&gt;포크에는 SciPy 스타일 인터페이스, 콜백 함수에서 예외 처리 기능, 간편한 사용을위한 도커 컨테이너가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f6a8971d3c7b9b31275f693e7d81abb1d3685c8" translate="yes" xml:space="preserve">
          <source>A Cython wrapper to the IPOPT optimization package</source>
          <target state="translated">IPOPT 최적화 패키지에 대한 Cython 래퍼</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">더하다</target>
        </trans-unit>
        <trans-unit id="5dfa4e4cb546ffc272b87392b467a8157229b880" translate="yes" xml:space="preserve">
          <source>Additionally, make sure you have a C compiler setup to compile Python C
extensions, e.g. Visual C++. Build tools for VS2019
&lt;a href=&quot;https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019&quot;&gt;https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019&lt;/a&gt;
have been tested to work for conda Python 3.7 (see
&lt;a href=&quot;https://github.com/matthias-k/cyipopt/issues/52&quot;&gt;https://github.com/matthias-k/cyipopt/issues/52&lt;/a&gt;).</source>
          <target state="translated">또한 Python C 확장 (예 : Visual C ++)을 컴파일하기위한 C 컴파일러 설정이 있는지 확인하십시오. VS2019 용 빌드 도구 &lt;a href=&quot;https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019&quot;&gt;https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019&lt;/a&gt; 는 conda Python 3.7에서 작동하도록 테스트되었습니다 ( &lt;a href=&quot;https://github.com/matthias-k/cyipopt/issues/52&quot;&gt;https://github.com/matthias-k 참조). / cyipopt / issues / 52&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7000cab8e7b578478c74f23f21dc5d32fe900d42" translate="yes" xml:space="preserve">
          <source>After installing:</source>
          <target state="translated">설치 후 :</target>
        </trans-unit>
        <trans-unit id="1ff63a770979d055c4a40cdda74e88bdd1d01b58" translate="yes" xml:space="preserve">
          <source>All of the dependencies can be installed with Ubuntu&amp;rsquo;s package manager:</source>
          <target state="translated">모든 종속성은 Ubuntu의 패키지 관리자를 사용하여 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd7e023829520b025a25ab35fc0a1e0500737138" translate="yes" xml:space="preserve">
          <source>Anaconda</source>
          <target state="translated">아나콘다</target>
        </trans-unit>
        <trans-unit id="d89c67869dbc2a0a778ac3b73cfaf564836482a6" translate="yes" xml:space="preserve">
          <source>And finally install the package into Python&amp;rsquo;s default package directory:</source>
          <target state="translated">마지막으로 패키지를 Python의 기본 패키지 디렉토리에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="118c3cc4d2fd3eaf6cb350896c32dedfebaae237" translate="yes" xml:space="preserve">
          <source>Appveyor</source>
          <target state="translated">Appveyor</target>
        </trans-unit>
        <trans-unit id="d52fa77841d05e6552fcaad8f99322028494b2d2" translate="yes" xml:space="preserve">
          <source>Build Ipopt:</source>
          <target state="translated">Ipopt 빌드 :</target>
        </trans-unit>
        <trans-unit id="06ce34ebbbdf0f7fad10b47b5836e24b0c197e6e" translate="yes" xml:space="preserve">
          <source>C/C++ compiler</source>
          <target state="translated">C / C ++ 컴파일러</target>
        </trans-unit>
        <trans-unit id="76da41dae405f0bcc67118b2de563c1fa414a33d" translate="yes" xml:space="preserve">
          <source>Check that everything linked correctly with</source>
          <target state="translated">모든 것이 올바르게 연결되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c2f3e610efaad31893ca9eea02ebda3f70c91261" translate="yes" xml:space="preserve">
          <source>Compile</source>
          <target state="translated">엮다</target>
        </trans-unit>
        <trans-unit id="a16ed73a1edbbbd0b70b4718c1e0f9b62ca41333" translate="yes" xml:space="preserve">
          <source>Compile Ipopt</source>
          <target state="translated">Ipopt 컴파일</target>
        </trans-unit>
        <trans-unit id="c0e68277228acf61e40371f6f86b075b7e040c31" translate="yes" xml:space="preserve">
          <source>Conditions of use</source>
          <target state="translated">이용 약관</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="41e3c91f262ee5fb7508443240bffb13d372304a" translate="yes" xml:space="preserve">
          <source>Create a temporary environment variable pointing to the Ipopt directory:</source>
          <target state="translated">Ipopt 디렉토리를 가리키는 임시 환경 변수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2a7f345730ddf543bc08f9192c5e99ca930aa75e" translate="yes" xml:space="preserve">
          <source>Docker container</source>
          <target state="translated">Docker 컨테이너</target>
        </trans-unit>
        <trans-unit id="8e11d249e509abc8537ffaf90fe55c006d953737" translate="yes" xml:space="preserve">
          <source>Download Ipopt source code. Choose the version that you would like to have from
&amp;lt;&lt;a href=&quot;https://www.coin-or.org/download/source/Ipopt/&quot;&gt;https://www.coin-or.org/download/source/Ipopt/&lt;/a&gt;&amp;gt;. For example:</source>
          <target state="translated">Ipopt 소스 코드를 다운로드하십시오. &amp;lt; &lt;a href=&quot;https://www.coin-or.org/download/source/Ipopt/&quot;&gt;https://www.coin-or.org/download/source/Ipopt/&lt;/a&gt; &amp;gt; 에서 원하는 버전을 선택하십시오 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="bf73e80d9566cd9c50ef2645523f2caeeb132199" translate="yes" xml:space="preserve">
          <source>Download a precompiled version of Ipopt that includes the DLL files from
&lt;a href=&quot;http://www.coin-or.org/download/binary/Ipopt/&quot;&gt;http://www.coin-or.org/download/binary/Ipopt/&lt;/a&gt;. Note that the current setup only
supports Ipopt &amp;gt;= 3.10.1. It is advised to use the build 3.11.0 by downloading
the &lt;a href=&quot;https://www.coin-or.org/download/binary/Ipopt/Ipopt-3.11.0-Win32-Win64-dll.7z&quot;&gt;Ipopt-3.11.0-Win32-Win64-dll.7z&lt;/a&gt;
archive. After Ipopt is extracted, the</source>
          <target state="translated">&lt;a href=&quot;http://www.coin-or.org/download/binary/Ipopt/&quot;&gt;http://www.coin-or.org/download/binary/Ipopt/&lt;/a&gt; 에서 DLL 파일이 포함 된 사전 컴파일 된 버전의 Ipopt를 다운로드합니다 . 현재 설정은 Ipopt&amp;gt; = 3.10.1 만 지원합니다. &lt;a href=&quot;https://www.coin-or.org/download/binary/Ipopt/Ipopt-3.11.0-Win32-Win64-dll.7z&quot;&gt;Ipopt-3.11.0-Win32-Win64-dll.7z&lt;/a&gt; 아카이브 를 다운로드하여 빌드 3.11.0을 사용하는 것이 좋습니다 . Ipopt가 추출 된 후</target>
        </trans-unit>
        <trans-unit id="e0c3ad018ea89ef4e78e9990861ac17de466ebe9" translate="yes" xml:space="preserve">
          <source>Download and extract the cyipopt source code from Github or PyPi.</source>
          <target state="translated">Github 또는 PyPi에서 cyipopt 소스 코드를 다운로드하고 추출합니다.</target>
        </trans-unit>
        <trans-unit id="795fde8583cd6f01130dbfbf7c99cd5c44e997b0" translate="yes" xml:space="preserve">
          <source>Download the source files of cyipopt and update</source>
          <target state="translated">cyipopt의 소스 파일을 다운로드하고 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="77914342d7ddb3d50bf1e7d003f5a223f69aa2ca" translate="yes" xml:space="preserve">
          <source>Example Installation on Ubuntu 18.04 Using Dependencies Installed Via APT</source>
          <target state="translated">APT를 통해 설치된 종속성을 사용하여 Ubuntu 18.04에 설치하는 예</target>
        </trans-unit>
        <trans-unit id="81918688db8f8be72dc4e12e0928620f96774f9f" translate="yes" xml:space="preserve">
          <source>Example Installation on Ubuntu 18.04 With Custom Compiled IPOPT</source>
          <target state="translated">사용자 지정 컴파일 된 IPOPT를 사용하여 Ubuntu 18.04에 설치하는 예</target>
        </trans-unit>
        <trans-unit id="6d84ceaf60a66c278aca37fae32385bf018a47e8" translate="yes" xml:space="preserve">
          <source>Extract</source>
          <target state="translated">추출물</target>
        </trans-unit>
        <trans-unit id="0fc3f1e74693674644e45f70991ab22946654264" translate="yes" xml:space="preserve">
          <source>Extract the Ipopt source code:</source>
          <target state="translated">Ipopt 소스 코드를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="23e9f8df73fef806bc46e0e806099a89a4bb101d" translate="yes" xml:space="preserve">
          <source>Finally, execute:</source>
          <target state="translated">마지막으로 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="51ddd35caaddbedb2435d7f8b177ec6576bc0ed6" translate="yes" xml:space="preserve">
          <source>For bug reports use the github issue tracker. You can also send wishes,
comments, patches, etc. to &lt;a href=&quot;mailto:matthias.kuemmerer%40bethgelab.org&quot;&gt;matthias.kuemmerer@bethgelab.org&lt;/a&gt;</source>
          <target state="translated">버그 보고서의 경우 github 문제 추적기를 사용하십시오. &lt;a href=&quot;mailto:matthias.kuemmerer%40bethgelab.org&quot;&gt;matthias.kuemmerer@bethgelab.org&lt;/a&gt; 로 소원, 의견, 패치 등을 보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0dc5b855af8b859ae3042495f530fb635346692" translate="yes" xml:space="preserve">
          <source>For simple cases where you do not need the full power of sparse and structured
Jacobians etc,</source>
          <target state="translated">희소하고 구조화 된 Jacobians 등의 완전한 힘이 필요하지 않은 간단한 경우,</target>
        </trans-unit>
        <trans-unit id="d600deecd9fabec09865ba5fbee27a4731d8713b" translate="yes" xml:space="preserve">
          <source>From source</source>
          <target state="translated">소스에서</target>
        </trans-unit>
        <trans-unit id="821d4ec013cc7a0bb0401261b6f4acd7d6a54544" translate="yes" xml:space="preserve">
          <source>From source on Windows</source>
          <target state="translated">Windows의 소스에서</target>
        </trans-unit>
        <trans-unit id="49425cd23a4d72feaa88de99090d152ddd5584be" translate="yes" xml:space="preserve">
          <source>Get help from this web-page if you get errors in setting environments:</source>
          <target state="translated">환경 설정에서 오류가 발생하면이 웹 페이지에서 도움을 받으십시오.</target>
        </trans-unit>
        <trans-unit id="96b940ddbf9baa5a4db243ccddf4fa0e42879245" translate="yes" xml:space="preserve">
          <source>HSL</source>
          <target state="translated">HSL</target>
        </trans-unit>
        <trans-unit id="0fba51fdb603342ab3adafc4d2c83eda6b5d5784" translate="yes" xml:space="preserve">
          <source>IPOPTWINDIR</source>
          <target state="translated">IPOPTWINDIR</target>
        </trans-unit>
        <trans-unit id="e3cddcb4bcdf716c8fdd8ba1bccb6568740100f0" translate="yes" xml:space="preserve">
          <source>If it could be run successfully, the optimization will start with the following
descriptions:</source>
          <target state="translated">성공적으로 실행될 수있는 경우 최적화는 다음 설명과 함께 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="923afae781f2373455050a85a89614a5beacbf9d" translate="yes" xml:space="preserve">
          <source>If there is no error, then you have compiled</source>
          <target state="translated">오류가 없으면 컴파일 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="b41115cacf52f496072cd742b58a74a90f290002" translate="yes" xml:space="preserve">
          <source>Install system wide dependencies:</source>
          <target state="translated">시스템 전체 종속성 설치 :</target>
        </trans-unit>
        <trans-unit id="b1f579c0e114775fadce6d829343cf2f3c2aad91" translate="yes" xml:space="preserve">
          <source>Install the dependencies with conda (Anaconda or Miniconda):</source>
          <target state="translated">conda (Anaconda 또는 Miniconda)를 사용하여 종속성을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="2fab72b1c83a13633fcfea6d1578e3a5aad6684c" translate="yes" xml:space="preserve">
          <source>Ipopt [&amp;lt;3.13.0 and &amp;gt;= 3.10.1 for Windows]</source>
          <target state="translated">Ipopt [Windows의 경우 &amp;lt;3.13.0 및&amp;gt; = 3.10.1]</target>
        </trans-unit>
        <trans-unit id="af61d4c7929a8ed19aaa1b0ab0d49e8cceccbc20" translate="yes" xml:space="preserve">
          <source>Ipopt-3.12.11/ThirdParty/HSL</source>
          <target state="translated">Ipopt-3.12.11 / 타사 / HSL</target>
        </trans-unit>
        <trans-unit id="31a999d2e445df6d94c2d10d2f899c4b7a408247" translate="yes" xml:space="preserve">
          <source>LD_LIBRARY_PATH</source>
          <target state="translated">LD_LIBRARY_PATH</target>
        </trans-unit>
        <trans-unit id="c7b2c55d5250e41021d8faabcca53ca0dacf89ad" translate="yes" xml:space="preserve">
          <source>Note that you may or may not want to install this package system wide, i.e.
prepend</source>
          <target state="translated">이 패키지를 시스템 전체에 설치할 수도 있고 원하지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e6ed97206cec747b55eb00e5a27a7a8ce16e564" translate="yes" xml:space="preserve">
          <source>Now compile</source>
          <target state="translated">이제 컴파일</target>
        </trans-unit>
        <trans-unit id="b502363c9d43a3258b18dcc28321bf168995d38c" translate="yes" xml:space="preserve">
          <source>Now run</source>
          <target state="translated">이제 실행</target>
        </trans-unit>
        <trans-unit id="f4c60202f016536723574134bc6149b4aa989c8d" translate="yes" xml:space="preserve">
          <source>Now you should be able to run a</source>
          <target state="translated">이제 당신은 실행할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4a25fbe20b820196b079d765735245b28c96cdd3" translate="yes" xml:space="preserve">
          <source>On Linux and Mac</source>
          <target state="translated">Linux 및 Mac에서</target>
        </trans-unit>
        <trans-unit id="765ef37edf29de7830ce5296015f356e1bf35f50" translate="yes" xml:space="preserve">
          <source>PKG_CONFIG_PATH</source>
          <target state="translated">PKG_CONFIG_PATH</target>
        </trans-unit>
        <trans-unit id="643619899deccf1c9a941c05486245c8e5ade051" translate="yes" xml:space="preserve">
          <source>PyPi</source>
          <target state="translated">PyPi</target>
        </trans-unit>
        <trans-unit id="99ea8677f484963e18b1d3257dc99229cd458e20" translate="yes" xml:space="preserve">
          <source>Python 2.7 or 3.6+</source>
          <target state="translated">Python 2.7 또는 3.6 이상</target>
        </trans-unit>
        <trans-unit id="365cd7741aa59016e6cfec3ff3743ae505efd347" translate="yes" xml:space="preserve">
          <source>README for cyipopt</source>
          <target state="translated">cyipopt 용 README</target>
        </trans-unit>
        <trans-unit id="7fb2e54dedc726618d17f410e5cf17584f725ebf" translate="yes" xml:space="preserve">
          <source>Reading the docs</source>
          <target state="translated">문서 읽기</target>
        </trans-unit>
        <trans-unit id="64b62fd5baf4f3fecf44fc4b7d5697a4c0969226" translate="yes" xml:space="preserve">
          <source>Set environment variables:</source>
          <target state="translated">환경 변수 설정 :</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">상태</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">테스팅</target>
        </trans-unit>
        <trans-unit id="5b0f7f5f6d33b45f2cd646c27baf0633c1082a7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.continuum.io/why-anaconda&quot;&gt;Anaconda Python Distribution&lt;/a&gt; is
one of the easiest ways to install Python and associated pre-complied packages
for Linux, Mac, and Windows. Once Anaconda (or miniconda) is installed, you can
install cyipopt on &lt;strong&gt;Linux and Mac&lt;/strong&gt; from the Conda Forge channel with:</source>
          <target state="translated">&lt;a href=&quot;https://www.continuum.io/why-anaconda&quot;&gt;아나콘다 파이썬 배포는&lt;/a&gt; 리눅스, Mac 및 Windows 용 파이썬과 관련된 사전 준수 패키지를 설치하는 가장 쉬운 방법 중 하나입니다. Anaconda (또는 miniconda)가 설치되면 다음을 사용하여 Conda Forge 채널에서 &lt;strong&gt;Linux 및 Mac&lt;/strong&gt; 에 cyipopt를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e7b7c0e9c41f7cc4c7f1a8857fdbc7c50c543ef4" translate="yes" xml:space="preserve">
          <source>The Ipopt compilation instructions are derived from
&lt;a href=&quot;https://www.coin-or.org/Ipopt/documentation/node14.html&quot;&gt;https://www.coin-or.org/Ipopt/documentation/node14.html&lt;/a&gt;. If you get errors,
start there for help.</source>
          <target state="translated">Ipopt 컴파일 지침은 &lt;a href=&quot;https://www.coin-or.org/Ipopt/documentation/node14.html&quot;&gt;https://www.coin-or.org/Ipopt/documentation/node14.html&lt;/a&gt; 에서 파생됩니다 . 오류가 발생하면 거기에서 시작하여 도움을 받으십시오.</target>
        </trans-unit>
        <trans-unit id="937e1a6507615577e7c26b560437ca5bba3a568b" translate="yes" xml:space="preserve">
          <source>The NumPy and IPOPT libs and headers are installed in standard locations, so
you should not need to set</source>
          <target state="translated">NumPy 및 IPOPT 라이브러리와 헤더는 표준 위치에 설치되므로 설정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e46a568aaaeaa948e26f03d0eb34c1d0665f82ed" translate="yes" xml:space="preserve">
          <source>The above command will install binary versions of all the necessary
dependencies and cyipopt. Note that there currently are no Windows binaries.
You will have to install from source from Windows or if you want a customized
installation, e.g. with MKL, HSL, etc.</source>
          <target state="translated">위의 명령은 필요한 모든 종속성과 cyipopt의 바이너리 버전을 설치합니다. 현재 Windows 바이너리가 없습니다. Windows의 소스에서 설치하거나 MKL, HSL 등과 같은 사용자 지정 설치를 원할 경우 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f9677e592dab99c9e6bfec9378e079a9020ece68" translate="yes" xml:space="preserve">
          <source>The binaries and header files of the Ipopt package can be obtained from
&lt;a href=&quot;http://www.coin-or.org/download/binary/Ipopt/&quot;&gt;http://www.coin-or.org/download/binary/Ipopt/&lt;/a&gt;. These include a version compiled
against the MKL library. Or you can build Ipopt from source. The remaining
dependencies can be installed with conda or other package managers.</source>
          <target state="translated">Ipopt 패키지의 바이너리 및 헤더 파일은 &lt;a href=&quot;http://www.coin-or.org/download/binary/Ipopt/&quot;&gt;http://www.coin-or.org/download/binary/Ipopt/&lt;/a&gt; 에서 얻을 수 있습니다 . 여기에는 MKL 라이브러리에 대해 컴파일 된 버전이 포함됩니다. 또는 소스에서 Ipopt를 빌드 할 수 있습니다. 나머지 종속성은 conda 또는 다른 패키지 관리자를 사용하여 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="155b012a2dac8cb6b56ab689fc3332e522a51573" translate="yes" xml:space="preserve">
          <source>The subdirectory</source>
          <target state="translated">하위 디렉토리</target>
        </trans-unit>
        <trans-unit id="93e278e26a00687985a8ceeb75e16b2660465645" translate="yes" xml:space="preserve">
          <source>Then use</source>
          <target state="translated">그런 다음 사용</target>
        </trans-unit>
        <trans-unit id="d4ee3df7c4cd006348b5134f909b8c072241396e" translate="yes" xml:space="preserve">
          <source>Then, direct your browser to</source>
          <target state="translated">그런 다음 브라우저를</target>
        </trans-unit>
        <trans-unit id="bd3bbc1da9bc9c828b560fff155e5f53fc3e1718" translate="yes" xml:space="preserve">
          <source>Then, execute:</source>
          <target state="translated">그런 다음 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1f866e64386481b6a08282d7f107eac60a26d88b" translate="yes" xml:space="preserve">
          <source>To begin installing from source you will need to install the following
dependencies:</source>
          <target state="translated">소스에서 설치를 시작하려면 다음 종속성을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="9dd0e4773e807b447d8759bcce32b13725171fb1" translate="yes" xml:space="preserve">
          <source>To use</source>
          <target state="translated">쓰다</target>
        </trans-unit>
        <trans-unit id="36d503a353cafce668d7d1f540aaa576a67bf74e" translate="yes" xml:space="preserve">
          <source>To use linear solvers other than the default mumps, e.g.</source>
          <target state="translated">기본 볼거리 이외의 선형 솔버를 사용하려면</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">트래비스 CI</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="c8b09ebab26d825ad2d59de372cc76b035b41e8e" translate="yes" xml:space="preserve">
          <source>Using conda</source>
          <target state="translated">conda 사용</target>
        </trans-unit>
        <trans-unit id="a324204022589d9c36de2dbdf56160f54b745216" translate="yes" xml:space="preserve">
          <source>Vagrant environment</source>
          <target state="translated">방랑자 환경</target>
        </trans-unit>
        <trans-unit id="880a33829d0929ef6c5bb535e6f72195c0d9b644" translate="yes" xml:space="preserve">
          <source>Vagrantfile</source>
          <target state="translated">Vagrantfile</target>
        </trans-unit>
        <trans-unit id="f311a630013eba9cb533a81cc305eb04127cd4cd" translate="yes" xml:space="preserve">
          <source>You can add this to your shell&amp;rsquo;s configuration file if you want it set every
time you open your shell, for example the following line can it can be added to
your</source>
          <target state="translated">셸을 열 때마다 설정하려면 셸의 구성 파일에 추가 할 수 있습니다. 예를 들어 다음 줄을 셸에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0b18211e25ada7a0b62e50e77f7afea722f1eec" translate="yes" xml:space="preserve">
          <source>You can check that everything linked correctly with</source>
          <target state="translated">모든 것이 올바르게 연결되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60429ea04ab11345a62e4b7a50204f6f13aeb403" translate="yes" xml:space="preserve">
          <source>You can test the installation by running the examples under the folder</source>
          <target state="translated">폴더 아래의 예제를 실행하여 설치를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="35e5ad987176c1b4a1aa1d26f9411cd4e824207e" translate="yes" xml:space="preserve">
          <source>and copy it in the HSL folder:</source>
          <target state="translated">HSL 폴더에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="bb2213039e5c6ffb18db2e81e24ed734690ee134" translate="yes" xml:space="preserve">
          <source>and either call</source>
          <target state="translated">그리고 전화</target>
        </trans-unit>
        <trans-unit id="800fa1b181a77bdddd98cbe82237f34fa550a538" translate="yes" xml:space="preserve">
          <source>are not setup to find ipopt on their own.</source>
          <target state="translated">ipopt를 스스로 찾을 수 있도록 설정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f1f82ab322af132ef5e65247fb5cc8efb28f412" translate="yes" xml:space="preserve">
          <source>build/html/index.html</source>
          <target state="translated">build / html / index.html</target>
        </trans-unit>
        <trans-unit id="a575cee62aea2419365a2b59e46f314fe9a8ca12" translate="yes" xml:space="preserve">
          <source>can be downloaded from its
official website &amp;lt;&lt;a href=&quot;http://www.hsl.rl.ac.uk/ipopt/&quot;&gt;http://www.hsl.rl.ac.uk/ipopt/&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">공식 웹 사이트 &amp;lt; &lt;a href=&quot;http://www.hsl.rl.ac.uk/ipopt/&quot;&gt;http://www.hsl.rl.ac.uk/ipopt/&lt;/a&gt; &amp;gt; 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c52ad7f83acfa748fdc13b12801a87448a74b26" translate="yes" xml:space="preserve">
          <source>coinhsl</source>
          <target state="translated">Coinhsl</target>
        </trans-unit>
        <trans-unit id="aad040214a5c98f280baf3f5cedcd21a57dff0ef" translate="yes" xml:space="preserve">
          <source>contains a</source>
          <target state="translated">포함</target>
        </trans-unit>
        <trans-unit id="dc402bd5553ae35640944e0b5fbbab302316f583" translate="yes" xml:space="preserve">
          <source>contains a docker container with preinstalled ipopt
and cyipopt.  To build the container, cd into the</source>
          <target state="translated">ipopt 및 cyipopt가 사전 설치된 도커 컨테이너를 포함합니다. 컨테이너를 빌드하려면</target>
        </trans-unit>
        <trans-unit id="d10810e1ef94ef7c058a7f32ddb29fc2c446dcb5" translate="yes" xml:space="preserve">
          <source>cyipopt</source>
          <target state="translated">cyipopt</target>
        </trans-unit>
        <trans-unit id="ba9e8d4ad5d7ef38efbe5684b619de78479e0dcd" translate="yes" xml:space="preserve">
          <source>cyipopt is a Python wrapper around Ipopt. It enables using Ipopt from the
comfort of the Python programming language.</source>
          <target state="translated">cyipopt는 Ipopt를 둘러싼 Python 래퍼입니다. Python 프로그래밍 언어의 편안함에서 Ipopt를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d749dcac7bd9eeebf7c6fccc60d79055c3f5ce1a" translate="yes" xml:space="preserve">
          <source>cyipopt is open-source code released under the &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;EPL&lt;/a&gt; license.</source>
          <target state="translated">cyipopt는 &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;EPL&lt;/a&gt; 라이선스에 따라 공개 된 오픈 소스 코드 입니다.</target>
        </trans-unit>
        <trans-unit id="46f5d9313209265d72bf50e9146cfc547471404a" translate="yes" xml:space="preserve">
          <source>cython</source>
          <target state="translated">Cython</target>
        </trans-unit>
        <trans-unit id="af77576f69e2426382cb6c1d3a1f165a8ed32dd1" translate="yes" xml:space="preserve">
          <source>directly or start a ipython shell and</source>
          <target state="translated">직접 또는 ipython 셸을 시작하고</target>
        </trans-unit>
        <trans-unit id="831f45b3646c98729d260df338a402e3ff2c5267" translate="yes" xml:space="preserve">
          <source>directly or start a python shell and</source>
          <target state="translated">직접 또는 파이썬 셸을 시작하고</target>
        </trans-unit>
        <trans-unit id="eb61c29731c042eafddab5c216593e92ac22f644" translate="yes" xml:space="preserve">
          <source>directories.</source>
          <target state="translated">디렉토리.</target>
        </trans-unit>
        <trans-unit id="b5505add25fe5cd6be0b2ea08ba41ef67704b743" translate="yes" xml:space="preserve">
          <source>directory and run</source>
          <target state="translated">디렉토리 및 실행</target>
        </trans-unit>
        <trans-unit id="c438066d026ef5e2d3be81bc746e720426691ec7" translate="yes" xml:space="preserve">
          <source>directory, the vagrant provision will detect and add them in the
ipopt compiling process, and then you will have ma57, ma27, and other solvers
available on ipopt binary (ma97 and mc68 were removed to avoid compilation
errors).</source>
          <target state="translated">방랑 프로 비전이 ipopt 컴파일 프로세스에서이를 감지하고 추가하면 ipopt 바이너리에서 사용할 수있는 ma57, ma27 및 기타 솔버가 있습니다 (컴파일 오류를 피하기 위해 ma97 및 mc68이 제거됨).</target>
        </trans-unit>
        <trans-unit id="e982f17bcbe0f724063b708a4f76db211a999304" translate="yes" xml:space="preserve">
          <source>docker</source>
          <target state="translated">docker</target>
        </trans-unit>
        <trans-unit id="830059337dbee577058de0a2e8b19404a2744635" translate="yes" xml:space="preserve">
          <source>does, or setup a virtual
environment with tools like venv or conda. If you use virtual environments you
will need to be careful about selecting headers and libraries for packages in
or out of the virtual environments in the build step. Note that six, cython,
and numpy could alternatively be installed using Python specific package
managers, e.g.</source>
          <target state="translated">또는 venv 또는 conda와 같은 도구를 사용하여 가상 환경을 설정합니다. 가상 환경을 사용하는 경우 빌드 단계에서 가상 환경 안팎의 패키지에 대한 헤더 및 라이브러리를 선택하는 데주의해야합니다. six, cython 및 numpy는 Python 특정 패키지 관리자를 사용하여 대안으로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b58d80edf0d9a5f19d17ce43b0b4205bab0262a4" translate="yes" xml:space="preserve">
          <source>example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="d3e08dd48bfd8a6c0bcf0d51fb056a1faea89b7e" translate="yes" xml:space="preserve">
          <source>file.
Alternatively, you can set the environment variable</source>
          <target state="translated">파일. 또는 환경 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97b91917caa005c934503d59a4f316d5e86e72b1" translate="yes" xml:space="preserve">
          <source>folders should
be in the root cyipopt directory, i.e. adjacent to the</source>
          <target state="translated">폴더는 루트 cyipopt 디렉토리에 있어야합니다. 즉,</target>
        </trans-unit>
        <trans-unit id="c4bd33404505900b6bc9e87e38e85e32e760a2e0" translate="yes" xml:space="preserve">
          <source>for compiling and linking. Make
sure both of these are pointing to the correct libraries and headers. They will
look something like this (formatted and commented for easy viewing here):</source>
          <target state="translated">컴파일 및 링크. 둘 다 올바른 라이브러리와 헤더를 가리키는 지 확인하십시오. 다음과 같이 표시됩니다 (여기에서 쉽게 볼 수 있도록 형식이 지정되고 주석 처리됨).</target>
        </trans-unit>
        <trans-unit id="d848c9713eb1c248d99ae01d257fe9b269623d27" translate="yes" xml:space="preserve">
          <source>future</source>
          <target state="translated">미래</target>
        </trans-unit>
        <trans-unit id="fce79b7fe1fee3a977fa1bd4efbd9e9a06c29c14" translate="yes" xml:space="preserve">
          <source>gcc</source>
          <target state="translated">gcc</target>
        </trans-unit>
        <trans-unit id="a80fa09ae0be3148ae5fa1c70fc16e0bf94bd3d5" translate="yes" xml:space="preserve">
          <source>if you want a system wide install):</source>
          <target state="translated">시스템 전체 설치를 원하는 경우) :</target>
        </trans-unit>
        <trans-unit id="3027797fd67ecc5f27578a8482ba843b5f5e972c" translate="yes" xml:space="preserve">
          <source>if you want a system wide install.</source>
          <target state="translated">시스템 전체 설치를 원하는 경우.</target>
        </trans-unit>
        <trans-unit id="21e7cf6903c5a5a1b01c00dd9aa577f1c4c39cb0" translate="yes" xml:space="preserve">
          <source>import ipopt</source>
          <target state="translated">수입 ipopt</target>
        </trans-unit>
        <trans-unit id="d3ecb0d890368d7659ee54010045b835dacb8efe" translate="yes" xml:space="preserve">
          <source>include</source>
          <target state="translated">포함</target>
        </trans-unit>
        <trans-unit id="cdcf2f6a94a22565e8dd0e9b659df33d252d10da" translate="yes" xml:space="preserve">
          <source>ipopt</source>
          <target state="translated">ipopt</target>
        </trans-unit>
        <trans-unit id="0ea586e04b216d42c71772901283c3b029959267" translate="yes" xml:space="preserve">
          <source>ldd</source>
          <target state="translated">ldd</target>
        </trans-unit>
        <trans-unit id="9d062bafff17ba8b9a1215c4c51485134d509d91" translate="yes" xml:space="preserve">
          <source>lib</source>
          <target state="translated">lib</target>
        </trans-unit>
        <trans-unit id="19c148b432c17da6d312d184a996f46d3c18a1e9" translate="yes" xml:space="preserve">
          <source>ma27, ma57, ma86</source>
          <target state="translated">ma27, ma57, ma86</target>
        </trans-unit>
        <trans-unit id="5821eb27d7b71c9078000da31a5a654c97e401b9" translate="yes" xml:space="preserve">
          <source>make</source>
          <target state="translated">하다</target>
        </trans-unit>
        <trans-unit id="8ac56d2d6c13acc3594f87eb880d15f820a757b2" translate="yes" xml:space="preserve">
          <source>make install</source>
          <target state="translated">설치하다</target>
        </trans-unit>
        <trans-unit id="4f48f7a48b8f325d00d2171ec97a80528da424db" translate="yes" xml:space="preserve">
          <source>minimize_ipopt</source>
          <target state="translated">최소화 _ipopt</target>
        </trans-unit>
        <trans-unit id="4eeed17fa5dc44d4ff213b3b71cf47e6cf3bcf31" translate="yes" xml:space="preserve">
          <source>mkl [windows]</source>
          <target state="translated">mkl [창]</target>
        </trans-unit>
        <trans-unit id="a65e1d3845cf3b10a01939410842cdd6a3d0a6de" translate="yes" xml:space="preserve">
          <source>numpy</source>
          <target state="translated">numpy</target>
        </trans-unit>
        <trans-unit id="7cb0476be08cfb29884612c6f72c69b831a49a40" translate="yes" xml:space="preserve">
          <source>of coinhsl and put it in the</source>
          <target state="translated">coinhsl의</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="3e4674019b04cda6c3ab23415ba6503e6048305b" translate="yes" xml:space="preserve">
          <source>package are needed.</source>
          <target state="translated">패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="344006de0603ca91629e5ed671b103937ce5465e" translate="yes" xml:space="preserve">
          <source>pip install --user</source>
          <target state="translated">pip 설치-사용자</target>
        </trans-unit>
        <trans-unit id="9ecfcdaedc0b3a2a7204dc86792cb5b1eaccbfb3" translate="yes" xml:space="preserve">
          <source>pip install six cython numpy</source>
          <target state="translated">pip install six cython numpy</target>
        </trans-unit>
        <trans-unit id="96f752737848b765bda65a755b5ab2a3605d3971" translate="yes" xml:space="preserve">
          <source>pkg-config [only for Linux and Mac]</source>
          <target state="translated">pkg-config [Linux 및 Mac 전용]</target>
        </trans-unit>
        <trans-unit id="999a192a02a9f4a722c7a7714121831bd26ddd8c" translate="yes" xml:space="preserve">
          <source>pkg_config</source>
          <target state="translated">pkg_config</target>
        </trans-unit>
        <trans-unit id="8a92e743cc02fac93dd65c965740baa49ebf89c3" translate="yes" xml:space="preserve">
          <source>provides the function</source>
          <target state="translated">기능 제공</target>
        </trans-unit>
        <trans-unit id="a40fbef056b006033b550afeb9cb9bc48de70488" translate="yes" xml:space="preserve">
          <source>python setup.py build</source>
          <target state="translated">python setup.py 빌드</target>
        </trans-unit>
        <trans-unit id="0fcf67b7fd8f5c1f5e9fd110b6add619349e97de" translate="yes" xml:space="preserve">
          <source>scipy [optional]</source>
          <target state="translated">scipy [선택 사항]</target>
        </trans-unit>
        <trans-unit id="dd0c88ff10b7c831e37e3a0c303a9da90eb967d8" translate="yes" xml:space="preserve">
          <source>scipy.optimize.minimize</source>
          <target state="translated">scipy.optimize.minimize</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="bff5288d43b5b0b423a623fd27ab60ad387791d3" translate="yes" xml:space="preserve">
          <source>setuptools</source>
          <target state="translated">설정 도구</target>
        </trans-unit>
        <trans-unit id="bec9703f7a456cd2b4ab5fb3220ae016e3e394e3" translate="yes" xml:space="preserve">
          <source>six</source>
          <target state="translated">육</target>
        </trans-unit>
        <trans-unit id="da690adb1a0a296e8bd7fae962ed078fde04aef4" translate="yes" xml:space="preserve">
          <source>so all Python packages can be installed via</source>
          <target state="translated">따라서 모든 Python 패키지는 다음을 통해 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8594cfc28b45ffea731cae92a14cae0efcf53c90" translate="yes" xml:space="preserve">
          <source>solvers, the</source>
          <target state="translated">솔버,</target>
        </trans-unit>
        <trans-unit id="f526a4829b728937d1233fced8337cc14f1a365e" translate="yes" xml:space="preserve">
          <source>source code after you get it. Rename the extracted folder to</source>
          <target state="translated">당신이 그것을 얻은 후에 소스 코드. 추출 된 폴더의 이름을</target>
        </trans-unit>
        <trans-unit id="4ff93948aa763451d142730b8fbc5a4b25a1ae4a" translate="yes" xml:space="preserve">
          <source>source code from PyPi, for
example:</source>
          <target state="translated">PyPi의 소스 코드, 예 :</target>
        </trans-unit>
        <trans-unit id="19cf895760a378c7f195d9b82195e7c054c119b9" translate="yes" xml:space="preserve">
          <source>source files
&amp;lt;http://www.coin-or.org/download/binary/Ipopt/&amp;gt;</source>
          <target state="translated">소스 파일 &amp;lt;http://www.coin-or.org/download/binary/Ipopt/&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85193e237d55185fa99df9f3a73c538c8af45be0" translate="yes" xml:space="preserve">
          <source>successfully</source>
          <target state="translated">성공적으로</target>
        </trans-unit>
        <trans-unit id="836c626d52f3fb2ea543ad89ef448e969161b5be" translate="yes" xml:space="preserve">
          <source>sudo</source>
          <target state="translated">sudo</target>
        </trans-unit>
        <trans-unit id="3262cdda15ab14fcf090f149b9f2a127545820f9" translate="yes" xml:space="preserve">
          <source>test\</source>
          <target state="translated">테스트\</target>
        </trans-unit>
        <trans-unit id="9dda6e6d1e670521bb0d0dada6c25707dc0cce96" translate="yes" xml:space="preserve">
          <source>that installs ipopt and
cyipopt in OS provision. To build the environment, cd into the</source>
          <target state="translated">OS 프로비저닝에 ipopt 및 cyipopt를 설치합니다. 환경을 구축하려면</target>
        </trans-unit>
        <trans-unit id="283314edb21ef53513f2b5f78ed5134db9bbbe51" translate="yes" xml:space="preserve">
          <source>to compile cyipopt. In the output of this
command you should see two calls to</source>
          <target state="translated">cyipopt를 컴파일합니다. 이 명령의 출력에서 ​​다음 두 번의 호출을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8be99d35488194ae46e018a03d501e313f067127" translate="yes" xml:space="preserve">
          <source>to install the following packages:</source>
          <target state="translated">다음 패키지를 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="136827113e06443416ce182d2dd76fb8370933be" translate="yes" xml:space="preserve">
          <source>to point to
the directory that contains the</source>
          <target state="translated">포함하는 디렉토리를 가리 키도록</target>
        </trans-unit>
        <trans-unit id="7a756b49c7be66aefc80c807794964c530e57313" translate="yes" xml:space="preserve">
          <source>to point to
your Ipopt install if you did not install it to a standard location. For
example:</source>
          <target state="translated">표준 위치에 설치하지 않은 경우 Ipopt 설치를 가리 킵니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="a3a53aae12a639a3ee08acd2766e49657d56f933" translate="yes" xml:space="preserve">
          <source>to point to the
header files and binaries of the Ipopt package, if</source>
          <target state="translated">Ipopt 패키지의 헤더 파일과 바이너리를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="edf3838ac48538e4e99d74e5fa90b693916072d1" translate="yes" xml:space="preserve">
          <source>to the above command, but it is safest to install into your
user space, i.e. what</source>
          <target state="translated">위의 명령에 대한 것이지만 사용자 공간에 설치하는 것이 가장 안전합니다.</target>
        </trans-unit>
        <trans-unit id="b03fe988f8d55b87dbd2223ee1a8a37a0f882d6e" translate="yes" xml:space="preserve">
          <source>vagrant</source>
          <target state="translated">방랑자</target>
        </trans-unit>
        <trans-unit id="30a5c5f2f385722e89bbc2052f960ca8534f7f93" translate="yes" xml:space="preserve">
          <source>vagrant up</source>
          <target state="translated">방랑하다</target>
        </trans-unit>
        <trans-unit id="b7c5a92fad093acfc0601641f8f1a8140bcbaa38" translate="yes" xml:space="preserve">
          <source>which has
the same behaviour as</source>
          <target state="translated">동일한 동작을</target>
        </trans-unit>
        <trans-unit id="244596f3471a59b44f2f122fc1a89c1a09672920" translate="yes" xml:space="preserve">
          <source>you will need to set the</source>
          <target state="translated">당신은 설정해야합니다</target>
        </trans-unit>
        <trans-unit id="29c02a319f6df076cb694a29a0b53747878f515e" translate="yes" xml:space="preserve">
          <source>~/.bashrc</source>
          <target state="translated">~ / .bashrc</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
