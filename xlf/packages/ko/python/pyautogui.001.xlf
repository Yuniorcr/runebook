<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pyautogui/">
    <body>
      <group id="pyautogui">
        <trans-unit id="202eb3ad6b625156efa453e441d97f25a5201842" translate="yes" xml:space="preserve">
          <source>(PyAutoGUI uses Pillow for image-related features.)</source>
          <target state="translated">(PyAutoGUI는 이미지 관련 기능에 Pillow를 사용합니다.)</target>
        </trans-unit>
        <trans-unit id="05ac9896333eda3d99460bd8cfac0880c10eb7e9" translate="yes" xml:space="preserve">
          <source>All keyboard presses done by PyAutoGUI are sent to the window that currently has focus, as if you had pressed the physical keyboard key.</source>
          <target state="translated">PyAutoGUI가 수행 한 모든 키보드 누름은 마치 실제 키보드 키를 누른 것처럼 현재 포커스가있는 창으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="5d7ce03e101b6264634b1cb019f0c496ed956409" translate="yes" xml:space="preserve">
          <source>Currently, PyAutoGUI only works on the primary monitor. PyAutoGUI isn't reliable for the screen of a second monitor (the mouse functions may or may not work on multi-monitor setups depending on your operating system and version).</source>
          <target state="translated">현재 PyAutoGUI는 기본 모니터에서만 작동합니다. PyAutoGUI는 두 번째 모니터의 화면에서 신뢰할 수 없습니다 (마우스 기능은 운영 체제 및 버전에 따라 다중 모니터 설정에서 작동하거나 작동하지 않을 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="4eecc85916d3f4103cc44e8a00a210eaeced5682" translate="yes" xml:space="preserve">
          <source>Display Message Boxes</source>
          <target state="translated">메시지 상자 표시</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="44151068638967b9c10220f5399ab80894a558fb" translate="yes" xml:space="preserve">
          <source>Full documentation available at &lt;a href=&quot;https://pyautogui.readthedocs.org&quot;&gt;https://pyautogui.readthedocs.org&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://pyautogui.readthedocs.org&quot;&gt;https://pyautogui.readthedocs.org&lt;/a&gt; 에서 사용 가능한 전체 문서</target>
        </trans-unit>
        <trans-unit id="a8c5cae5c1fb1c66b9896a9ca342b06858e4f467" translate="yes" xml:space="preserve">
          <source>How Does PyAutoGUI Work?</source>
          <target state="translated">PyAutoGUI는 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="d5a2af830a9a5f488f2eb29e1f88ffbd09fa1e3a" translate="yes" xml:space="preserve">
          <source>If you need help installing Python, visit &lt;a href=&quot;https://installpython3.com/&quot;&gt;https://installpython3.com/&lt;/a&gt;</source>
          <target state="translated">Python 설치에 도움이 필요하면 &lt;a href=&quot;https://installpython3.com/&quot;&gt;https://installpython3.com/을&lt;/a&gt; 방문 하세요.</target>
        </trans-unit>
        <trans-unit id="f3bf382e0edb392f9d0ef49d14c2da179c4512e2" translate="yes" xml:space="preserve">
          <source>If you want to do development and contribute to PyAutoGUI, you will need to install these modules from PyPI:</source>
          <target state="translated">개발을하고 PyAutoGUI에 기여하려면 PyPI에서 다음 모듈을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="7f4c1af6c5ae4a25631f709c410df83f41d6cffd" translate="yes" xml:space="preserve">
          <source>Keyboard and Mouse Control</source>
          <target state="translated">키보드 및 마우스 제어</target>
        </trans-unit>
        <trans-unit id="1a41bed2f81bfe8544b8761ec2722f54c4bf7a51" translate="yes" xml:space="preserve">
          <source>Linux needs the python3-xlib (or python-xlib for Python 2) module installed.</source>
          <target state="translated">Linux에는 python3-xlib (또는 Python 2의 경우 python-xlib) 모듈이 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5e576adf528aea16a9b18523aebede08c15d3d84" translate="yes" xml:space="preserve">
          <source>On Linux, PyAutoGUI uses the &lt;code&gt;Xlib&lt;/code&gt; module to access the X11 or X Window System.</source>
          <target state="translated">Linux에서 PyAutoGUI는 &lt;code&gt;Xlib&lt;/code&gt; 모듈을 사용하여 X11 또는 X Window System에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="260dfc308da0c052defd12a96b8c1dd5fd532b2b" translate="yes" xml:space="preserve">
          <source>On Windows, PyAutoGUI accesses the Windows API (also called the WinAPI or win32 API) through the built-in &lt;code&gt;ctypes&lt;/code&gt; module. The &lt;code&gt;nicewin&lt;/code&gt; module at &lt;a href=&quot;https://github.com/asweigart/nicewin&quot;&gt;https://github.com/asweigart/nicewin&lt;/a&gt; provides a demonstration for how Windows API calls can be made through Python.</source>
          <target state="translated">Windows에서 PyAutoGUI는 기본 제공 &lt;code&gt;ctypes&lt;/code&gt; 모듈을 통해 Windows API (WinAPI 또는 win32 API라고도 함)에 액세스합니다 . &lt;a href=&quot;https://github.com/asweigart/nicewin&quot;&gt;https://github.com/asweigart/nicewin&lt;/a&gt; 의 &lt;code&gt;nicewin&lt;/code&gt; 모듈은 Python을 통해 Windows API 호출을 수행하는 방법에 대한 데모를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b16ff2f77b8d60a33f82b5d603472769dd9fa773" translate="yes" xml:space="preserve">
          <source>On macOS, PyAutoGUI uses the &lt;code&gt;rubicon-objc&lt;/code&gt; module to access the Cocoa API.</source>
          <target state="translated">macOS에서 PyAutoGUI는 &lt;code&gt;rubicon-objc&lt;/code&gt; 모듈을 사용하여 Cocoa API에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="9b8e3b2d0bd8968b3f490c54de934a4059aa6e3e" translate="yes" xml:space="preserve">
          <source>Pillow needs to be installed, and on Linux you may need to install additional libraries to make sure Pillow's PNG/JPEG works correctly. See:</source>
          <target state="translated">Pillow를 설치해야하며 Linux에서는 Pillow의 PNG / JPEG가 올바르게 작동하는지 확인하기 위해 추가 라이브러리를 설치해야 할 수 있습니다. 보다:</target>
        </trans-unit>
        <trans-unit id="cf94505c199dfda475e646fbe4d684531616488b" translate="yes" xml:space="preserve">
          <source>PyAutoGUI</source>
          <target state="translated">PyAutoGUI</target>
        </trans-unit>
        <trans-unit id="f411182cb8c13a6fbb61a6d2db7c20459d60042c" translate="yes" xml:space="preserve">
          <source>PyAutoGUI is a  cross-platform GUI automation Python module for human beings. Used to programmatically control the mouse &amp;amp; keyboard.</source>
          <target state="translated">PyAutoGUI는 인간을위한 크로스 플랫폼 GUI 자동화 Python 모듈입니다. 마우스 및 키보드를 프로그래밍 방식으로 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9e7c73c050765c16066184e978b0340fa37c0445" translate="yes" xml:space="preserve">
          <source>PyAutoGUI lets Python control the mouse and keyboard, and other GUI automation tasks. For Windows, macOS, and Linux, on Python 3 and 2.</source>
          <target state="translated">PyAutoGUI를 사용하면 Python이 마우스와 키보드, 기타 GUI 자동화 작업을 제어 할 수 있습니다. Windows, macOS 및 Linux의 경우 Python 3 및 2에서.</target>
        </trans-unit>
        <trans-unit id="3d2fbdeee99ce55ca2d6592b123c0f4372456c54" translate="yes" xml:space="preserve">
          <source>PyAutoGUI supports Python 2 and 3. If you are installing PyAutoGUI from PyPI using pip:</source>
          <target state="translated">PyAutoGUI는 Python 2 및 3을 지원합니다. pip를 사용하여 PyPI에서 PyAutoGUI를 설치하는 경우 :</target>
        </trans-unit>
        <trans-unit id="b29ec2a2eda52cf18655622d94d55bbd73367d22" translate="yes" xml:space="preserve">
          <source>Screenshot Functions</source>
          <target state="translated">스크린 샷 기능</target>
        </trans-unit>
        <trans-unit id="2eb30866ad903d0f9ddada307270aa3f5be83ba0" translate="yes" xml:space="preserve">
          <source>Simplified Chinese documentation available at &lt;a href=&quot;https://muxuezi.github.io/posts/doc-pyautogui.html&quot;&gt;https://muxuezi.github.io/posts/doc-pyautogui.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://muxuezi.github.io/posts/doc-pyautogui.html&quot;&gt;https://muxuezi.github.io/posts/doc-pyautogui.html&lt;/a&gt; 에서 사용할 수있는 중국어 간체 문서</target>
        </trans-unit>
        <trans-unit id="454ac17ccd3792469affb539e728e89d2b3fe04d" translate="yes" xml:space="preserve">
          <source>Source code available at &lt;a href=&quot;https://github.com/asweigart/pyautogui&quot;&gt;https://github.com/asweigart/pyautogui&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/asweigart/pyautogui&quot;&gt;https://github.com/asweigart/pyautogui&lt;/a&gt; 에서 사용 가능한 소스 코드</target>
        </trans-unit>
        <trans-unit id="30c76a125bc662b4c5bf293c950378819a1346f2" translate="yes" xml:space="preserve">
          <source>The locateCenterOnScreen() function returns the center of this match region:</source>
          <target state="translated">LocateCenterOnScreen () 함수는이 일치 영역의 중심을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b4efd1f3302e362ebc1db722d2c7b0863bdf748e" translate="yes" xml:space="preserve">
          <source>The three major operating systems (Windows, macOS, and Linux) each have different ways to programmatically control the mouse and keyboard. This can often involve confusing, obscure, and deeply technical details. The job of PyAutoGUI is to hide all of this complexity behind a simple API.</source>
          <target state="translated">세 가지 주요 운영 체제 (Windows, macOS 및 Linux)는 각각 마우스와 키보드를 프로그래밍 방식으로 제어하는 ​​다른 방법을 가지고 있습니다. 여기에는 종종 혼란스럽고 모호하며 깊이있는 기술적 세부 사항이 포함될 수 있습니다. PyAutoGUI의 역할은 간단한 API 뒤에이 모든 복잡성을 숨기는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e37f860fcef032b99ab9f357ba658157aa736b71" translate="yes" xml:space="preserve">
          <source>The x, y coordinates used by PyAutoGUI has the 0, 0 origin coordinates in the top left corner of the screen. The x coordinates increase going to the right (just as in mathematics) but the y coordinates increase going down (the opposite of mathematics). On a screen that is 1920 x 1080 pixels in size, coordinates 0, 0 are for the top left while 1919, 1079 is for the bottom right.</source>
          <target state="translated">PyAutoGUI에서 사용하는 x, y 좌표는 화면 왼쪽 상단 모서리에 0, 0 원점 좌표를 가지고 있습니다. x 좌표는 오른쪽으로 갈수록 증가하지만 (수학에서와 같이) y 좌표는 아래로 갈수록 증가합니다 (수학의 반대). 1920 x 1080 픽셀 크기의 화면에서 좌표 0, 0은 왼쪽 상단에, 1919, 1079는 오른쪽 하단에 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ad2e18c7a1c5dc1c40b029ef1f6ab6b27be74dd" translate="yes" xml:space="preserve">
          <source>Windows has no dependencies. The Win32 extensions do not need to be installed.</source>
          <target state="translated">Windows에는 종속성이 없습니다. Win32 확장은 설치할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4ac0a9d0a49d88ea53f0bba761b1ed484bef32c2" translate="yes" xml:space="preserve">
          <source>You can also locate where an image is on the screen:</source>
          <target state="translated">화면에서 이미지가있는 위치를 찾을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="88c5e83edc63a1cdaa765befee42f92fdca847f3" translate="yes" xml:space="preserve">
          <source>macOS needs the rubicon-objc module installed (in that order).</source>
          <target state="translated">macOS에는 rubicon-objc 모듈이 설치되어 있어야합니다 (순서대로).</target>
        </trans-unit>
        <trans-unit id="2a4ec5bba9f28ed5672bd2bd6a87c38134856cd1" translate="yes" xml:space="preserve">
          <source>pymsgbox</source>
          <target state="translated">pymsgbox</target>
        </trans-unit>
        <trans-unit id="d95aea7f45f9e36138de3f168f496bb3b72efba2" translate="yes" xml:space="preserve">
          <source>pyscreeze</source>
          <target state="translated">삐걱 거리다</target>
        </trans-unit>
        <trans-unit id="7788fc593a6e027b60bb08599ae617d73af68eb0" translate="yes" xml:space="preserve">
          <source>pytweening</source>
          <target state="translated">파이트 위닝</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
