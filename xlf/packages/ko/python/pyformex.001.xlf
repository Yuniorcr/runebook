<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pyformex/">
    <body>
      <group id="pyformex">
        <trans-unit id="aa7e5cd214ceee079f0aeddf98b993f1ac8e3d1e" translate="yes" xml:space="preserve">
          <source>geometrical models of 3D structures by sequences of mathematical operations.
Unlike traditional CAD systems, pyFormex provides a powerful (Python based)
scripting language as the basic user input, making it very well suited
for automated and repeated (parametric) design procedures.
It provides a wide range of operations on meshes, like STL type triangulated
surfaces and FEA or CFD grids. Nurbs curves and surfaces are under
development.
pyFormex is often used to create models from medical scan images, or as a
pre- and post-processor for Finite Element analysis programs. But it could
just as well be used to just create some nice 3D renderings.</source>
          <target state="translated">geometrical models of 3D structures by sequences of mathematical operations. Unlike traditional CAD systems, pyFormex provides a powerful (Python based) scripting language as the basic user input, making it very well suited for automated and repeated (parametric) design procedures. It provides a wide range of operations on meshes, like STL type triangulated surfaces and FEA or CFD grids. Nurbs curves and surfaces are under development. pyFormex is often used to create models from medical scan images, or as a pre- and post-processor for Finite Element analysis programs. But it could just as well be used to just create some nice 3D renderings.</target>
        </trans-unit>
        <trans-unit id="88bd7f3fa9bde7b3ab10e2b8372e911a95de1cb8" translate="yes" xml:space="preserve">
          <source>program to create 3D geometry from Python scripts.</source>
          <target state="translated">program to create 3D geometry from Python scripts.</target>
        </trans-unit>
        <trans-unit id="18ab7bb9b6226876fbd705f5726bde09d15b7ed1" translate="yes" xml:space="preserve">
          <source>pyFormex can be used to generate, transform and manipulate large</source>
          <target state="translated">pyFormex can be used to generate, transform and manipulate large</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
