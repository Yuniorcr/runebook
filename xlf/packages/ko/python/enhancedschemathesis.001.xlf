<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/enhancedschemathesis/">
    <body>
      <group id="enhancedschemathesis">
        <trans-unit id="6b2bf7d08f3db21cad9efed21017aec09250cb4b" translate="yes" xml:space="preserve">
          <source>(check out the &lt;a href=&quot;https://github.com/sdispater/poetry#installation&quot;&gt;installation guide&lt;/a&gt;) and run this command inside the project root:</source>
          <target state="translated">( &lt;a href=&quot;https://github.com/sdispater/poetry#installation&quot;&gt;설치 가이드&lt;/a&gt; 확인 ) 프로젝트 루트 내에서 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="dc5e167c3bdb220872f8e5e5cc1fdb51582f5251" translate="yes" xml:space="preserve">
          <source>, etc):</source>
          <target state="translated">등) :</target>
        </trans-unit>
        <trans-unit id="c7dcb3e611b657d827e408d832916f3589619775" translate="yes" xml:space="preserve">
          <source>, etc.
They provide a lot of useful information about what happens during tests, but handling of these events is your responsibility.
You can take some inspiration from Schemathesis &lt;a href=&quot;https://github.com/kiwicom/schemathesis/blob/master/src/schemathesis/cli/__init__.py#L230&quot;&gt;CLI implementation&lt;/a&gt;.
See full description of events in the &lt;a href=&quot;https://github.com/kiwicom/schemathesis/blob/master/src/schemathesis/runner/events.py&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">, 등. 테스트 중에 발생하는 일에 대한 유용한 정보를 많이 제공하지만 이러한 이벤트를 처리하는 것은 사용자의 책임입니다. Schemathesis &lt;a href=&quot;https://github.com/kiwicom/schemathesis/blob/master/src/schemathesis/cli/__init__.py#L230&quot;&gt;CLI 구현&lt;/a&gt; 에서 영감을 얻을 수 있습니다 . &lt;a href=&quot;https://github.com/kiwicom/schemathesis/blob/master/src/schemathesis/runner/events.py&quot;&gt;소스 코드&lt;/a&gt; 에서 이벤트에 대한 전체 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b35da16ef477df1664032d938769567784c83a5c" translate="yes" xml:space="preserve">
          <source>, you agree that your contributions
will be licensed under its MIT license.</source>
          <target state="translated">, 귀하는 귀하의 기여가 MIT 라이선스에 따라 라이선스가 부여된다는 데 동의합니다.</target>
        </trans-unit>
        <trans-unit id="82796785006a91e18b0c488bf917e1ad1671d92b" translate="yes" xml:space="preserve">
          <source>- HTTP headers</source>
          <target state="translated">-HTTP 헤더</target>
        </trans-unit>
        <trans-unit id="0be61f4f77ed907c050edccb34a3375c32bfda64" translate="yes" xml:space="preserve">
          <source>- HTTP method</source>
          <target state="translated">-HTTP 방식</target>
        </trans-unit>
        <trans-unit id="8362d2cdf60576ff2ab4067030f1b67a43b76a45" translate="yes" xml:space="preserve">
          <source>- accepts multipart data</source>
          <target state="translated">-멀티 파트 데이터 허용</target>
        </trans-unit>
        <trans-unit id="8c8b3c5bfd82d84e40f86bcdf0a212e8e721ca41" translate="yes" xml:space="preserve">
          <source>- always returns</source>
          <target state="translated">-항상 반환</target>
        </trans-unit>
        <trans-unit id="5e4c7e92f2fe522de25e7480192e84c10f80b860" translate="yes" xml:space="preserve">
          <source>- always returns 500</source>
          <target state="translated">-항상 500을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5945be1e46036d33ee78d5b38e4651c587241502" translate="yes" xml:space="preserve">
          <source>- full endpoint path</source>
          <target state="translated">-전체 엔드 포인트 경로</target>
        </trans-unit>
        <trans-unit id="a3c3ccb5c002fcf81d91dfd32e48b1dcaa06eba0" translate="yes" xml:space="preserve">
          <source>- invalid parameter definition. Uses</source>
          <target state="translated">-잘못된 매개 변수 정의. 용도</target>
        </trans-unit>
        <trans-unit id="4d23b741f81bdc07eeb06044920753f858f46f5e" translate="yes" xml:space="preserve">
          <source>- parameters for this endpoint are impossible to generate</source>
          <target state="translated">-이 끝점에 대한 매개 변수를 생성 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a0bbc16bd4f4ebfa7753e22c338cc5c001e8532" translate="yes" xml:space="preserve">
          <source>- query parameters</source>
          <target state="translated">-쿼리 매개 변수</target>
        </trans-unit>
        <trans-unit id="a8aa32454423f7e24b96549942c4e9720f287c31" translate="yes" xml:space="preserve">
          <source>- request body</source>
          <target state="translated">-요청 본문</target>
        </trans-unit>
        <trans-unit id="0421d82a063cfbb1e1c0b4f17795295de08dfc5f" translate="yes" xml:space="preserve">
          <source>- returns</source>
          <target state="translated">-반품</target>
        </trans-unit>
        <trans-unit id="f450db9b6a0688e4559b87c72a02eb7933c49083" translate="yes" xml:space="preserve">
          <source>- returns 1/1 ratio of 200/500 responses</source>
          <target state="translated">-200/500 응답의 1/1 비율을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="66b7744dbb114790e837279c8010f71c14a306eb" translate="yes" xml:space="preserve">
          <source>- returns 418 status code, that is not listed in the schema</source>
          <target state="translated">-스키마에 나열되지 않은 418 상태 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8a9535a0aa1172dc84907e7e448ef76f979a254" translate="yes" xml:space="preserve">
          <source>- returns malformed JSON with</source>
          <target state="translated">-형식이 잘못된 JSON을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cd167cbc2ac7211d026fb375983940c03386749" translate="yes" xml:space="preserve">
          <source>--app</source>
          <target state="translated">--앱</target>
        </trans-unit>
        <trans-unit id="b6da9da775795ae4d3cb20069998f24c2ce425c3" translate="yes" xml:space="preserve">
          <source>--auth</source>
          <target state="translated">--auth</target>
        </trans-unit>
        <trans-unit id="dd8446b5c240a43b36a3d7d2d92c901701e5c24d" translate="yes" xml:space="preserve">
          <source>--endpoints</source>
          <target state="translated">-엔드 포인트</target>
        </trans-unit>
        <trans-unit id="983c23ee573cd38fbf1683449ed1c652c608c781" translate="yes" xml:space="preserve">
          <source>--header</source>
          <target state="translated">--헤더</target>
        </trans-unit>
        <trans-unit id="1a68d75bfbb08f4d32e913b41dfb7988e399d400" translate="yes" xml:space="preserve">
          <source>--hypothesis-</source>
          <target state="translated">-가설-</target>
        </trans-unit>
        <trans-unit id="53c67e661288e4a2d261875cea709ced43582e49" translate="yes" xml:space="preserve">
          <source>--hypothesis-phases=explicit</source>
          <target state="translated">-가설 단계 = 명시 적</target>
        </trans-unit>
        <trans-unit id="fcd2632ef86c1a118edcedcbf7fcc8c6d7e1efbe" translate="yes" xml:space="preserve">
          <source>--network=host</source>
          <target state="translated">--network = host</target>
        </trans-unit>
        <trans-unit id="b1a7021109e5b0b0cde12489a24b0b454a9ced29" translate="yes" xml:space="preserve">
          <source>--pre-run</source>
          <target state="translated">-사전 실행</target>
        </trans-unit>
        <trans-unit id="dfcc13fa01e2611ed65fbfca4af8580d488c5d67" translate="yes" xml:space="preserve">
          <source>--validate-schema=false</source>
          <target state="translated">--validate-schema = false</target>
        </trans-unit>
        <trans-unit id="ff8015eb2b1855f53bb4336bf8d4411ac6c84c5b" translate="yes" xml:space="preserve">
          <source>-E</source>
          <target state="translated">-이자형</target>
        </trans-unit>
        <trans-unit id="a865f5c84febf7bb127859a28c7f9921091e23e9" translate="yes" xml:space="preserve">
          <source>-M</source>
          <target state="translated">-미디엄</target>
        </trans-unit>
        <trans-unit id="332ec780f224383a9f30f4660fe42ecd1206e248" translate="yes" xml:space="preserve">
          <source>-T</source>
          <target state="translated">-티</target>
        </trans-unit>
        <trans-unit id="ea7b99bc31b5e531d382d19b669632cb1fdb42e6" translate="yes" xml:space="preserve">
          <source>-based server with the following endpoints in Swagger 2.0 schema:</source>
          <target state="translated">Swagger 2.0 스키마에 다음과 같은 엔드 포인트가있는 기반 서버 :</target>
        </trans-unit>
        <trans-unit id="ddbfe46d29072725b61a3ee03c6abfefa0973acd" translate="yes" xml:space="preserve">
          <source>-c</source>
          <target state="translated">-씨</target>
        </trans-unit>
        <trans-unit id="303a4ff048b20a11bcaa3951c326d9307907aa6a" translate="yes" xml:space="preserve">
          <source>-w/--workers</source>
          <target state="translated">-w /-근로자</target>
        </trans-unit>
        <trans-unit id="66b01e919c5465f97f43e8d0d693b1a60e16a073" translate="yes" xml:space="preserve">
          <source>.  Examples handled with</source>
          <target state="translated">. 처리되는 예</target>
        </trans-unit>
        <trans-unit id="5fb87889c57a791c19a38c1366b9e25c26e6a9e3" translate="yes" xml:space="preserve">
          <source>. All of them are prefixed with</source>
          <target state="translated">. 그들 모두는</target>
        </trans-unit>
        <trans-unit id="42099b4af021e53fd8fd4e056c2568d7c2e3ffa8" translate="yes" xml:space="preserve">
          <source>/</source>
          <target state="translated">/</target>
        </trans-unit>
        <trans-unit id="7f14fefa96c56d96c31379ddc69df2692d1d5bf2" translate="yes" xml:space="preserve">
          <source>/api/failure</source>
          <target state="translated">/ api / failure</target>
        </trans-unit>
        <trans-unit id="3cc1c655d550bfc482101649a8be3da19a51387c" translate="yes" xml:space="preserve">
          <source>/api/flaky</source>
          <target state="translated">/ api / flaky</target>
        </trans-unit>
        <trans-unit id="ecbbfd44443f044693b14461ae06465bc8772056" translate="yes" xml:space="preserve">
          <source>/api/invalid</source>
          <target state="translated">/ api / 잘못된</target>
        </trans-unit>
        <trans-unit id="2dfa70c9a9dfe3cc77ea257d4961f861eabc7b81" translate="yes" xml:space="preserve">
          <source>/api/malformed_json</source>
          <target state="translated">/ api / malformed_json</target>
        </trans-unit>
        <trans-unit id="815572e90164b1f70f77f56ba83944318b681078" translate="yes" xml:space="preserve">
          <source>/api/multipart</source>
          <target state="translated">/ api / multipart</target>
        </trans-unit>
        <trans-unit id="f5d3ea724eec2a0df9c3b41e4945350fde9a23f7" translate="yes" xml:space="preserve">
          <source>/api/slow</source>
          <target state="translated">/ api / slow</target>
        </trans-unit>
        <trans-unit id="96e81738269f538cad425237d934f96d011937ea" translate="yes" xml:space="preserve">
          <source>/api/success</source>
          <target state="translated">/ api / 성공</target>
        </trans-unit>
        <trans-unit id="36a41328f8ecfc116efabdfcf1ca2ec0129d0510" translate="yes" xml:space="preserve">
          <source>/api/teapot</source>
          <target state="translated">/ api / teapot</target>
        </trans-unit>
        <trans-unit id="61fb1f5a5b5ff9a7411ae1e6446c3c58ae7f4ce7" translate="yes" xml:space="preserve">
          <source>/api/text</source>
          <target state="translated">/ api / text</target>
        </trans-unit>
        <trans-unit id="00b3651e2197b17b1c8c595bcb2e8358df852520" translate="yes" xml:space="preserve">
          <source>/api/unsatisfiable</source>
          <target state="translated">/ api / 불만족</target>
        </trans-unit>
        <trans-unit id="6594477053ae4cbdc5f21d5346f1b2f6eef8bf14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;. Global hooks are applied first.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; . 글로벌 후크가 먼저 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="951825328cde8268f845a29abbcea9fbac9c0075" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;. Look for</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; . 찾다</target>
        </trans-unit>
        <trans-unit id="fa3ca7e97bcc1c9ac29d91858568edf148736378" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;. Schemathesis does not support examples in individual properties that are specified inside Schema Object.
But examples in &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameter-object&quot;&gt;Parameter Object&lt;/a&gt;, &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#mediaTypeObject&quot;&gt;Media Type Object&lt;/a&gt; and &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object&quot;&gt;Schema Object&lt;/a&gt; are supported.
See below:</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; . Schemathesis는 Schema Object 내부에 지정된 개별 속성의 예제를 지원하지 않습니다. 그러나 &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameter-object&quot;&gt;Parameter Object&lt;/a&gt; , &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#mediaTypeObject&quot;&gt;Media Type Object&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object&quot;&gt;Schema Object의&lt;/a&gt; 예제 는 지원됩니다. 아래 참조 :</target>
        </trans-unit>
        <trans-unit id="ea57152aae408e8e1675fa53f0384804e9120aa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;. This option should be passed before the</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; . 이 옵션은</target>
        </trans-unit>
        <trans-unit id="ecb51ae23d8cf743ffafde8a4c2e75f1b961ffae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: the used fixture should return a valid schema that could be created via</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 사용 된 조명기는 다음을 통해 생성 될 수있는 유효한 스키마를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf9f23ab6993a4edb986a1d67e15d305fbe905f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other properties that could be tested&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;테스트 할 수있는 기타 속성&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="f92b925d9a8097a84167f9aa2cbf9215a770ade0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported specification versions&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;지원되는 사양 버전&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="f25b33a3a1fc67f41b1e34439a50ccd0de54ddd8" translate="yes" xml:space="preserve">
          <source>@schema.parametrize()</source>
          <target state="translated">@ schema.parametrize ()</target>
        </trans-unit>
        <trans-unit id="6bca98c494f65e47d63e86af2757d27c01aa1588" translate="yes" xml:space="preserve">
          <source>A basic test, that will verify that any data, that fit into the schema will not cause any internal server error could
look like this:</source>
          <target state="translated">스키마에 맞는 데이터가 내부 서버 오류를 일으키지 않는지 확인하는 기본 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb5e3f20cdf69c1a3001fef725dfa1ad1860e2dd" translate="yes" xml:space="preserve">
          <source>A full URL;</source>
          <target state="translated">전체 URL</target>
        </trans-unit>
        <trans-unit id="6f422beb630dd0134d85e5c923be7459bf09be6d" translate="yes" xml:space="preserve">
          <source>A network call to the running application;</source>
          <target state="translated">실행중인 애플리케이션에 대한 네트워크 호출</target>
        </trans-unit>
        <trans-unit id="6329876da8b6af61edc46625e699a57eb18a94c5" translate="yes" xml:space="preserve">
          <source>After registration, your checks will be available in Schemathesis CLI and you can use them via</source>
          <target state="translated">등록 후 Schemathesis CLI에서 수표를 사용할 수 있으며 다음을 통해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0df459ba6a61004103a69ad006437cc9e9c50a80" translate="yes" xml:space="preserve">
          <source>AfterExecution</source>
          <target state="translated">AfterExecution</target>
        </trans-unit>
        <trans-unit id="b550d33fb17944fc7769c4a4132eb78386e1f619" translate="yes" xml:space="preserve">
          <source>An existing filesystem path;</source>
          <target state="translated">기존 파일 시스템 경로.</target>
        </trans-unit>
        <trans-unit id="823186989d34a0ce5a3a909643abfd0601c382f4" translate="yes" xml:space="preserve">
          <source>Any call will be processed in &amp;lt;50 ms - you can verify the app performance;</source>
          <target state="translated">모든 통화는 50ms 미만으로 처리됩니다. 앱 성능을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1eb83c910c979de0cbbdcbb5b62b2f100a8cf54" translate="yes" xml:space="preserve">
          <source>Any contribution in development, testing or any other area is highly appreciated and useful to the project.</source>
          <target state="translated">개발, 테스트 또는 기타 영역에 대한 모든 기여는 프로젝트에 매우 높이 평가되고 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d5a53ffb05d23028cd9d833b929267ce9c4a131f" translate="yes" xml:space="preserve">
          <source>Any unauthorized access will end with 401 HTTP response code;</source>
          <target state="translated">무단 액세스는 401 HTTP 응답 코드로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="bee1c76d6b60e1be40a6d30985ffd2e3e6dd9a80" translate="yes" xml:space="preserve">
          <source>BeforeExecution</source>
          <target state="translated">BeforeExecution</target>
        </trans-unit>
        <trans-unit id="bf18c2afceb9a2f8d690d838460376eb03d2d421" translate="yes" xml:space="preserve">
          <source>Built with:</source>
          <target state="translated">다음으로 구축 :</target>
        </trans-unit>
        <trans-unit id="41dabcd5aec5ee1b14667332a873f6a07e26481c" translate="yes" xml:space="preserve">
          <source>By default, there will be 100 test cases per endpoint/method combination.
To limit the number of examples you could use</source>
          <target state="translated">기본적으로 엔드 포인트 / 메소드 조합 당 100 개의 테스트 케이스가 있습니다. 사용할 수있는 예제 수를 제한하려면</target>
        </trans-unit>
        <trans-unit id="6c6b8829402c93e8232508529104eba2a811e38c" translate="yes" xml:space="preserve">
          <source>CLI is pretty simple to use and requires no coding, in-code approach gives more flexibility.</source>
          <target state="translated">CLI는 사용이 매우 간단하고 코딩이 필요하지 않습니다. 코드 내 접근 방식은 더 많은 유연성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2e304231b36ec3ebd591c07c53558c24a9af9486" translate="yes" xml:space="preserve">
          <source>CLI option:</source>
          <target state="translated">CLI 옵션 :</target>
        </trans-unit>
        <trans-unit id="872d222f59600f8b5c612d61ea03e896c3700f73" translate="yes" xml:space="preserve">
          <source>CLI supports passing options to</source>
          <target state="translated">CLI는 옵션 전달을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">케이스</target>
        </trans-unit>
        <trans-unit id="afae3d04ad8f9d075554a9916ccb3da39f21900f" translate="yes" xml:space="preserve">
          <source>Changing data generation behavior</source>
          <target state="translated">데이터 생성 동작 변경</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">커맨드 라인 인터페이스</target>
        </trans-unit>
        <trans-unit id="8deddb0850b36758f38ee22f180f784570e29ddf" translate="yes" xml:space="preserve">
          <source>Content type conformance. Asserts that response&amp;rsquo;s content type is listed in the schema;</source>
          <target state="translated">콘텐츠 유형 적합성. 응답의 콘텐츠 유형이 스키마에 나열되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">창조하다</target>
        </trans-unit>
        <trans-unit id="75a7921f04dec420d34d0ebe8bf839b6deed790a" translate="yes" xml:space="preserve">
          <source>Custom string strategies</source>
          <target state="translated">사용자 지정 문자열 전략</target>
        </trans-unit>
        <trans-unit id="2b33b29bbb46ba8a1e12bdfbeb92aa3a23bc00eb" translate="yes" xml:space="preserve">
          <source>Direct strategies access</source>
          <target state="translated">직접 전략 액세스</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="bc10cdcf63839981fae2f4735415b31e8ca01d52" translate="yes" xml:space="preserve">
          <source>Each hook accepts a Hypothesis strategy and should return a Hypothesis strategy:</source>
          <target state="translated">각 후크는 가설 전략을 받아들이고 가설 전략을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e51fda38d6a6e3c3874bc72278c85d9ce3690e83" translate="yes" xml:space="preserve">
          <source>Each test function should have the</source>
          <target state="translated">각 테스트 기능에는</target>
        </trans-unit>
        <trans-unit id="d309ac07181a96988b0a6c017ab093239ae758d5" translate="yes" xml:space="preserve">
          <source>Explicit examples</source>
          <target state="translated">명시적인 예</target>
        </trans-unit>
        <trans-unit id="c12b20d49856d7b2be6d4ebff6274e0bc0c14ac3" translate="yes" xml:space="preserve">
          <source>Extending schemathesis</source>
          <target state="translated">도식 확장</target>
        </trans-unit>
        <trans-unit id="34efcdefc1d1e9ccef2146b2c00b464c1169aeb7" translate="yes" xml:space="preserve">
          <source>First, you need to prepare a virtual environment with &lt;a href=&quot;https://github.com/sdispater/poetry&quot;&gt;poetry&lt;/a&gt;.
Install</source>
          <target state="translated">먼저 &lt;a href=&quot;https://github.com/sdispater/poetry&quot;&gt;시&lt;/a&gt; 와 함께 가상 환경을 준비해야합니다 . 설치</target>
        </trans-unit>
        <trans-unit id="d4b94bddd4b0ff71131e672a63c12240d08c7cb6" translate="yes" xml:space="preserve">
          <source>For convenience you can explore the schemas and strategies manually:</source>
          <target state="translated">편의를 위해 스키마와 전략을 수동으로 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfd3de692856892d5cd1a7c90b86771c0abf5f9d" translate="yes" xml:space="preserve">
          <source>For each test, Schemathesis will generate a bunch of random inputs acceptable by the schema.
This data could be used to verify that your application works in the way as described in the schema or that schema describes expected behavior.</source>
          <target state="translated">각 테스트에 대해 Schemathesis는 스키마에서 허용 할 수있는 무작위 입력을 생성합니다. 이 데이터는 애플리케이션이 스키마에 설명 된 방식으로 작동하는지 또는 스키마가 예상되는 동작을 설명하는지 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="170746e8c5c387c3eaf120dcf11b423ae22619a4" translate="yes" xml:space="preserve">
          <source>For simpler local development Schemathesis includes a</source>
          <target state="translated">보다 간단한 로컬 개발을 위해 Schemathesis에는</target>
        </trans-unit>
        <trans-unit id="8ed0f2746c76ccf00ebff5325a9d3518ccf8e72d" translate="yes" xml:space="preserve">
          <source>For such cases it is possible to register custom strategies:</source>
          <target state="translated">이러한 경우 사용자 지정 전략을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="777b7c18264410eb115ba94f6679c3439d401641" translate="yes" xml:space="preserve">
          <source>For the full documentation, please see &lt;a href=&quot;https://schemathesis.readthedocs.io/en/latest/&quot;&gt;https://schemathesis.readthedocs.io/en/latest/&lt;/a&gt; (WIP)</source>
          <target state="translated">전체 문서는 &lt;a href=&quot;https://schemathesis.readthedocs.io/en/latest/&quot;&gt;https://schemathesis.readthedocs.io/en/latest/(WIP&lt;/a&gt; ) 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="6d8d0e22b046db24b541939908d80da1b80de1dc" translate="yes" xml:space="preserve">
          <source>For the full list of options, run:</source>
          <target state="translated">전체 옵션 목록을 보려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="146f14f9ff7e18efad452ccd70bd6565bf4c2d58" translate="yes" xml:space="preserve">
          <source>Gitter: &lt;a href=&quot;https://gitter.im/kiwicom/schemathesis&quot;&gt;https://gitter.im/kiwicom/schemathesis&lt;/a&gt;</source>
          <target state="translated">Gitter : &lt;a href=&quot;https://gitter.im/kiwicom/schemathesis&quot;&gt;https://gitter.im/kiwicom/schemathesis&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6deb3210283d471687b532501fca7b9632f76b25" translate="yes" xml:space="preserve">
          <source>Global, which are applied to all schemas;</source>
          <target state="translated">모든 스키마에 적용되는 글로벌.</target>
        </trans-unit>
        <trans-unit id="2e0e62a638640e5d916e10f45b450f492989a002" translate="yes" xml:space="preserve">
          <source>Hypothesis strategies for Open API / Swagger schemas</source>
          <target state="translated">Open API / Swagger 스키마에 대한 가설 전략</target>
        </trans-unit>
        <trans-unit id="60b28a7964da3a815334fe8e68954876cb5939a2" translate="yes" xml:space="preserve">
          <source>If the schema contains parameters examples, then they will be additionally included in the generated cases.</source>
          <target state="translated">스키마에 매개 변수 예제가 포함 된 경우 생성 된 케이스에 추가로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="46b5d5863c66ba46b39e63d75ee639d34bf464f0" translate="yes" xml:space="preserve">
          <source>If you are looking for more information, then there is an article about Schemathesis: &lt;a href=&quot;https://code.kiwi.com/schemathesis-property-based-testing-for-api-schemas-52811fd2b0a4&quot;&gt;https://code.kiwi.com/schemathesis-property-based-testing-for-api-schemas-52811fd2b0a4&lt;/a&gt;</source>
          <target state="translated">자세한 정보를 찾고 있다면 Schemathesis에 대한 기사가 있습니다 : &lt;a href=&quot;https://code.kiwi.com/schemathesis-property-based-testing-for-api-schemas-52811fd2b0a4&quot;&gt;https://code.kiwi.com/schemathesis-property-based-testing-for-api-schemas-52811fd2b0a4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f18ab8bc6df10b7a14a9942312daa0fa6ff18c64" translate="yes" xml:space="preserve">
          <source>If you have a schema that is not available when the tests are collected, for example it is build with tools
like</source>
          <target state="translated">테스트를 수집 할 때 사용할 수없는 스키마가있는 경우, 예를 들어 다음과 같은 도구로 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="33910146c25d94b77c6dbb2296ce4ff42dcd2022" translate="yes" xml:space="preserve">
          <source>If you want to customize how data is generated, then you can use hooks of three types:</source>
          <target state="translated">데이터 생성 방법을 사용자 정의하려면 다음 세 가지 유형의 후크를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afd1519b32fd7ece8853df5df5e1680a75590025" translate="yes" xml:space="preserve">
          <source>If you want to use Schemathesis CLI with your custom checks, look at &lt;a href=&quot;https://github.com/kiwicom/schemathesis/tree/dd/deprecate-execute#registering-custom-checks-for-cli&quot;&gt;this section&lt;/a&gt;</source>
          <target state="translated">사용자 지정 검사와 함께 Schemathesis CLI를 사용하려면 &lt;a href=&quot;https://github.com/kiwicom/schemathesis/tree/dd/deprecate-execute#registering-custom-checks-for-cli&quot;&gt;이 섹션을 참조하십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3bfd67edb765a46924cb9da892968900892eb7c" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to test only examples provided in the schema, you could utilize</source>
          <target state="translated">스키마에 제공된 예제 만 테스트하려면 다음을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d507488c7cb7a0aac2536509a755142cc626cf0a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to test your web app (Flask or AioHTTP for example) then there is</source>
          <target state="translated">웹 앱 (예 : Flask 또는 AioHTTP)을 테스트하려면 다음이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8340e238ce35eb83c41df9da4a157d3c0b07467" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking for a way to extend</source>
          <target state="translated">확장 할 방법을 찾고 있다면</target>
        </trans-unit>
        <trans-unit id="e51c5011b03d69b9fb1153ab6fa03e7964e17272" translate="yes" xml:space="preserve">
          <source>If your application requires authorization then you can use</source>
          <target state="translated">응용 프로그램에 승인이 필요한 경우 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">중대한</target>
        </trans-unit>
        <trans-unit id="cb62ae43a62bbbe5573f8f178adb4403be9cb8d1" translate="yes" xml:space="preserve">
          <source>In the example above all tests will be distributed among 8 worker threads.</source>
          <target state="translated">위의 예에서 모든 테스트는 8 개의 작업자 스레드에 분산됩니다.</target>
        </trans-unit>
        <trans-unit id="c3c8af3308311fcf2315d1eae1838bfa974c6830" translate="yes" xml:space="preserve">
          <source>In this case the test body will be used as a sub-test via</source>
          <target state="translated">이 경우 테스트 본문은 다음을 통해 하위 테스트로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2a246fc008d20949c95219a77bf287fa5b1a705b" translate="yes" xml:space="preserve">
          <source>In-app endpoint with schema.</source>
          <target state="translated">스키마가있는 인앱 엔드 포인트.</target>
        </trans-unit>
        <trans-unit id="d147f2eb10f869b371e06652e705c808f28daba6" translate="yes" xml:space="preserve">
          <source>In-code</source>
          <target state="translated">인 코드</target>
        </trans-unit>
        <trans-unit id="64cd5d48ba28ffc1fde2ecddc283a55590c221a0" translate="yes" xml:space="preserve">
          <source>Inspired by wonderful &lt;a href=&quot;https://github.com/olipratt/swagger-conformance&quot;&gt;swagger-conformance&lt;/a&gt; project.</source>
          <target state="translated">멋진 &lt;a href=&quot;https://github.com/olipratt/swagger-conformance&quot;&gt;swagger-conformance&lt;/a&gt; 프로젝트에서 영감을 얻었습니다 .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="57b878984e329192c3e1d4bc5d5aa94442199666" translate="yes" xml:space="preserve">
          <source>It consists of four main parts:</source>
          <target state="translated">네 가지 주요 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="f329409e357c6beeb44e4e01b5bf7321fe296e4b" translate="yes" xml:space="preserve">
          <source>It is possible to configure available endpoints via</source>
          <target state="translated">다음을 통해 사용 가능한 엔드 포인트를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b63291a7f0a474930ab1e4bff0550d3d00e133f1" translate="yes" xml:space="preserve">
          <source>It might be useful if you want to exclude certain cases that you don&amp;rsquo;t want to test, or modify the generated data, so it
will be more meaningful for the application - add existing IDs from the database, custom auth header, etc.</source>
          <target state="translated">테스트하고 싶지 않은 특정 사례를 제외하거나 생성 된 데이터를 수정하려는 경우 유용 할 수 있으므로 데이터베이스의 기존 ID, 사용자 지정 인증 헤더 등을 추가하면 애플리케이션에 더 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3754b6214bad3391084e32470646d50ba3cdf1be" translate="yes" xml:space="preserve">
          <source>It reads the application schema and generates test cases which will ensure that your application is compliant with its schema.</source>
          <target state="translated">애플리케이션 스키마를 읽고 애플리케이션이 스키마를 준수하는지 확인하는 테스트 케이스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8745c3d3f236ee4ba968248b7004084810969715" translate="yes" xml:space="preserve">
          <source>Lazy loading</source>
          <target state="translated">게으른 로딩</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="a9f2b667d8a7e968e57efbac3b0079d087846a61" translate="yes" xml:space="preserve">
          <source>Local development</source>
          <target state="translated">지역 개발</target>
        </trans-unit>
        <trans-unit id="def2eba59562958fa4a005f8070d692ef8502312" translate="yes" xml:space="preserve">
          <source>Mapping</source>
          <target state="translated">매핑</target>
        </trans-unit>
        <trans-unit id="b61c1132c301dbc695de3201e87e4c2e4dbdf470" translate="yes" xml:space="preserve">
          <source>More API specifications will be added in the future.</source>
          <target state="translated">앞으로 더 많은 API 사양이 추가 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="6c29b41c3a7e159190694c1dc317696ef18b0c30" translate="yes" xml:space="preserve">
          <source>Not a server error. Asserts that response&amp;rsquo;s status code is less than 500;</source>
          <target state="translated">서버 오류가 아닙니다. 응답의 상태 코드가 500 미만임을 주장합니다.</target>
        </trans-unit>
        <trans-unit id="657f8bf61af1263431775a9d1d6231ba6a943ec2" translate="yes" xml:space="preserve">
          <source>Open API 3.0.x</source>
          <target state="translated">오픈 API 3.0.x</target>
        </trans-unit>
        <trans-unit id="ca9de45c59cbaf216cbf0bd95099ddc4db6cc919" translate="yes" xml:space="preserve">
          <source>Optionally provide predicate function to filter values</source>
          <target state="translated">선택적으로 값을 필터링하는 조건 자 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4d01e5a4848d59a8194c6310c0c9ee52847278c2" translate="yes" xml:space="preserve">
          <source>Or add this decorator to your test if you use Schemathesis in your Python tests:</source>
          <target state="translated">또는 Python 테스트에서 Schemathesis를 사용하는 경우이 데코레이터를 테스트에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fb883a48c3512577f8c0eba7ea980e27317e9d53" translate="yes" xml:space="preserve">
          <source>Or you can look at the</source>
          <target state="translated">또는 당신은 볼 수 있습니다</target>
        </trans-unit>
        <trans-unit id="187278a4a8bbfbaf840e9be20bacf68ebf95dcee" translate="yes" xml:space="preserve">
          <source>Please, see the &lt;a href=&quot;https://github.com/kiwicom/schemathesis/blob/master/CONTRIBUTING.rst&quot;&gt;CONTRIBUTING.rst&lt;/a&gt; file for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/kiwicom/schemathesis/blob/master/CONTRIBUTING.rst&quot;&gt;CONTRIBUTING.rst&lt;/a&gt; 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b3757b19e005ac876ed7a8e69fcb53fee143a6da" translate="yes" xml:space="preserve">
          <source>Pre-run CLI hook</source>
          <target state="translated">사전 실행 CLI 후크</target>
        </trans-unit>
        <trans-unit id="db70255115b041d55796d20d6895e371b81029e1" translate="yes" xml:space="preserve">
          <source>Python support</source>
          <target state="translated">Python 지원</target>
        </trans-unit>
        <trans-unit id="db463b7cf69caef1637e9da960b1309bfd6444de" translate="yes" xml:space="preserve">
          <source>Register it via</source>
          <target state="translated">그것을 통해 등록</target>
        </trans-unit>
        <trans-unit id="b5eebcfdf3a9c1bb096120647aeebad375e3f351" translate="yes" xml:space="preserve">
          <source>Registering custom checks for CLI</source>
          <target state="translated">CLI에 대한 사용자 지정 검사 등록</target>
        </trans-unit>
        <trans-unit id="411e26c47350a0f1f4140d41ccfc6a77f723ac18" translate="yes" xml:space="preserve">
          <source>Response schema conformance. Asserts that response&amp;rsquo;s content conforms to the declared schema;</source>
          <target state="translated">응답 스키마 준수. 응답 내용이 선언 된 스키마를 준수하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="985f931492a51fdf5b1ff4ac57a6bf3dac6f2635" translate="yes" xml:space="preserve">
          <source>Run the tests via</source>
          <target state="translated">다음을 통해 테스트 실행</target>
        </trans-unit>
        <trans-unit id="7efac1ffe82ddee1885487b57a92a435619fff86" translate="yes" xml:space="preserve">
          <source>Run the tests:</source>
          <target state="translated">테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="17c09c5d7e6836ac58198abd56da6a0fe0075167" translate="yes" xml:space="preserve">
          <source>Schema instances implement</source>
          <target state="translated">스키마 인스턴스 구현</target>
        </trans-unit>
        <trans-unit id="116ddd21ef35cc12b5a0154765a381b91e89580e" translate="yes" xml:space="preserve">
          <source>Schema preparation;</source>
          <target state="translated">스키마 준비;</target>
        </trans-unit>
        <trans-unit id="5c671e1eea511b35188ffdab3b142f05d8fe10a2" translate="yes" xml:space="preserve">
          <source>Schema validation</source>
          <target state="translated">스키마 유효성 검사</target>
        </trans-unit>
        <trans-unit id="066f3033caefc84fa1aab800cc4ddc79176a9a19" translate="yes" xml:space="preserve">
          <source>Schema-local, which are applied only for specific schema instance;</source>
          <target state="translated">특정 스키마 인스턴스에만 적용되는 Schema-local</target>
        </trans-unit>
        <trans-unit id="d926ce8e81cffc7096fdf2f93c7650a9a9102f03" translate="yes" xml:space="preserve">
          <source>Schemathesis CLI also available as a docker image</source>
          <target state="translated">도커 이미지로도 사용 가능한 Schemathesis CLI</target>
        </trans-unit>
        <trans-unit id="53866e81343803fc99be72a13a8150a5d6cb0890" translate="yes" xml:space="preserve">
          <source>Schemathesis is a tool for testing your web applications built with Open API / Swagger specifications.</source>
          <target state="translated">Schemathesis는 Open API / Swagger 사양으로 구축 된 웹 애플리케이션을 테스트하기위한 도구입니다.</target>
        </trans-unit>
        <trans-unit id="ca7a9ae3580858ddeb3c1321c22f55366cb69a17" translate="yes" xml:space="preserve">
          <source>Schemathesis supports Python 3.6, 3.7 and 3.8.</source>
          <target state="translated">Schemathesis는 Python 3.6, 3.7 및 3.8을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a0909048f970929431829b631e3330a68f4f569a" translate="yes" xml:space="preserve">
          <source>Schemathesis supports Python&amp;rsquo;s built-in</source>
          <target state="translated">Schemathesis는 Python의 내장 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6bde01d742bed8399c70545cf5c58c80a41372c8" translate="yes" xml:space="preserve">
          <source>Schemathesis supports making calls to WSGI-compliant applications instead of real network calls, in this case
the test execution will go much faster.</source>
          <target state="translated">Schemathesis는 실제 네트워크 호출 대신 WSGI 호환 응용 프로그램에 대한 호출을 지원합니다.이 경우 테스트 실행이 훨씬 빨라집니다.</target>
        </trans-unit>
        <trans-unit id="d9ac174058747fd92bf30e12cf98fc01f48edf70" translate="yes" xml:space="preserve">
          <source>Setup &amp;amp; run your application, so it is accessible via the network;</source>
          <target state="translated">네트워크를 통해 액세스 할 수 있도록 애플리케이션을 설정하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8d072c3c01d00eb860f5cfc98002a9de3af369a0" translate="yes" xml:space="preserve">
          <source>Some string fields could use custom format and validators,
e.g.</source>
          <target state="translated">일부 문자열 필드는 사용자 정의 형식 및 유효성 검사기를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18d90ac8654131ee08c1e1bca47830a2540a5f34" translate="yes" xml:space="preserve">
          <source>Sometimes you need to execute custom code before the CLI run, for example setup an environment,
register custom string format strategies or modify Schemathesis behavior in runtime you can use</source>
          <target state="translated">CLI를 실행하기 전에 사용자 지정 코드를 실행해야하는 경우가 있습니다 (예 : 환경 설정, 사용자 지정 문자열 형식 전략 등록 또는 사용할 수있는 런타임에서 Schemathesis 동작 수정).</target>
        </trans-unit>
        <trans-unit id="24d3b78a096c61a90347dc5e073a440665e79591" translate="yes" xml:space="preserve">
          <source>Status code conformance. Asserts that response&amp;rsquo;s status code is listed in the schema;</source>
          <target state="translated">상태 코드 준수. 응답의 상태 코드가 스키마에 나열되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a9db7412335b7e9f1166b0717653ed9e90fe615a" translate="yes" xml:space="preserve">
          <source>Suppose you have your application running on</source>
          <target state="translated">응용 프로그램을 실행한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="347a390d6843aa3dadfce26134507b440297c06f" translate="yes" xml:space="preserve">
          <source>Swagger 2.0</source>
          <target state="translated">Swagger 2.0</target>
        </trans-unit>
        <trans-unit id="07cd068cff90419c591ef2f540a111a2004a9d8b" translate="yes" xml:space="preserve">
          <source>Test function specific, they are applied only for a specific test function;</source>
          <target state="translated">특정 테스트 기능, 특정 테스트 기능에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="a118103b79758abb58796b62505022ed389b18c4" translate="yes" xml:space="preserve">
          <source>Test parametrization;</source>
          <target state="translated">테스트 매개 변수화;</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="4ac585922036ef9b7a1be39d8ad35a1b58f5f534" translate="yes" xml:space="preserve">
          <source>The acceptable values are regexps or list of regexps (matched with</source>
          <target state="translated">허용되는 값은 정규식 또는 정규식 목록 (</target>
        </trans-unit>
        <trans-unit id="b84fb51277c74e788f017526dbc8bfc12ac6bd6f" translate="yes" xml:space="preserve">
          <source>The application under test could be written in any language, the only thing you need is a valid API schema in a supported format.</source>
          <target state="translated">테스트중인 애플리케이션은 모든 언어로 작성할 수 있으며 필요한 것은 지원되는 형식의 유효한 API 스키마뿐입니다.</target>
        </trans-unit>
        <trans-unit id="fda910cce32c15de33df17d051d833370833ec62" translate="yes" xml:space="preserve">
          <source>The built-in checks list includes the following:</source>
          <target state="translated">기본 제공 검사 목록에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8b69a9343c74dc9124e4c399e8478a92e885ad81" translate="yes" xml:space="preserve">
          <source>The code in this project is licensed under &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.
By contributing to</source>
          <target state="translated">이 프로젝트의 코드는 &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT 라이선스에&lt;/a&gt; 따라 사용이 허가되었습니다 . 에 기여함으로써</target>
        </trans-unit>
        <trans-unit id="1152a41e5cfd3686ee1e10f5766ee5b3ab3c9ffa" translate="yes" xml:space="preserve">
          <source>The passed value will be processed as an importable Python path, where you can execute your code.
An example - &lt;a href=&quot;https://github.com/kiwicom/schemathesis#custom-string-strategies&quot;&gt;https://github.com/kiwicom/schemathesis#custom-string-strategies&lt;/a&gt;</source>
          <target state="translated">전달 된 값은 코드를 실행할 수있는 가져올 수있는 Python 경로로 처리됩니다. 예 &lt;a href=&quot;https://github.com/kiwicom/schemathesis#custom-string-strategies&quot;&gt;-https&lt;/a&gt; : //github.com/kiwicom/schemathesis#custom-string-strategies</target>
        </trans-unit>
        <trans-unit id="35e491cac8608d0a33f79becab4665cf590493cf" translate="yes" xml:space="preserve">
          <source>The registered check should accept a</source>
          <target state="translated">등록 된 수표는</target>
        </trans-unit>
        <trans-unit id="ae9c33232459933906bb28ed82be75f832b7fe09" translate="yes" xml:space="preserve">
          <source>Then you could use CLI against this server:</source>
          <target state="translated">그런 다음이 서버에 대해 CLI를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41513267e27dc35569ee73040681fc3654f917cb" translate="yes" xml:space="preserve">
          <source>There are 6 places, where hooks can be applied and you need to pass it as the first argument to</source>
          <target state="translated">후크를 적용 할 수있는 6 곳이 있으며이를 첫 번째 인수로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="44c3223fabfc37b8c41cf7c18a0591f3f8b0de74" translate="yes" xml:space="preserve">
          <source>There are two basic ways to use Schemathesis:</source>
          <target state="translated">Schemathesis를 사용하는 두 가지 기본 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="caa387478fc0912f5f91902594f2638b3c5539cb" translate="yes" xml:space="preserve">
          <source>This method is significantly faster for WSGI apps, since it doesn&amp;rsquo;t involve network.</source>
          <target state="translated">이 방법은 네트워크를 포함하지 않기 때문에 WSGI 앱의 경우 훨씬 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="141d861ba60d13381d5433e9569dec1a0578fa24" translate="yes" xml:space="preserve">
          <source>To add a new check for the Schemathesis CLI there is a special function</source>
          <target state="translated">Schemathesis CLI에 대한 새 검사를 추가하려면 특수 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1aaf3450d81d5f9fd96e2c230c4370a7026bfc7" translate="yes" xml:space="preserve">
          <source>To avoid obscure and hard to debug errors during test runs Schemathesis validates input schemas for conformance with the relevant spec.
If you&amp;rsquo;d like to disable this behavior use</source>
          <target state="translated">테스트 실행 중에 모호하고 디버그하기 어려운 오류를 방지하기 위해 Schemathesis는 관련 사양에 맞는 입력 스키마를 검증합니다. 이 동작을 비활성화하려면</target>
        </trans-unit>
        <trans-unit id="264b028100da8c92e843e251e6b9df66a93c45a1" translate="yes" xml:space="preserve">
          <source>To examine your application with Schemathesis you need to:</source>
          <target state="translated">Schemathesis로 애플리케이션을 검사하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="84fb2b3a8e78cb07ecf71adb52f5296c873ca95a" translate="yes" xml:space="preserve">
          <source>To filter your tests by endpoint name, HTTP method or Open API tags you could use</source>
          <target state="translated">엔드 포인트 이름, HTTP 메서드 또는 Open API 태그로 테스트를 필터링하려면 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2120de568ddd0ef758d202bf91c8a3bc9589264f" translate="yes" xml:space="preserve">
          <source>To install Schemathesis via</source>
          <target state="translated">Schemathesis를 설치하려면</target>
        </trans-unit>
        <trans-unit id="b05ccbb5f573cc338dcd355769c0292f1fde2e7d" translate="yes" xml:space="preserve">
          <source>To narrow down the scope of the schemathesis tests it is possible to filter by method or endpoint:</source>
          <target state="translated">스키마 테스트의 범위를 좁히기 위해 메서드 또는 엔드 포인트별로 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42fbca6682480aac41b90bd771d863f3d398265d" translate="yes" xml:space="preserve">
          <source>To run it against localhost server add</source>
          <target state="translated">localhost 서버에 대해 실행하려면</target>
        </trans-unit>
        <trans-unit id="9c92f8ba959916a9fcb8bce363c7ad020eeb5b19" translate="yes" xml:space="preserve">
          <source>To speed up the testing process Schemathesis provides</source>
          <target state="translated">Schemathesis가 제공하는 테스트 프로세스의 속도를 높이기 위해</target>
        </trans-unit>
        <trans-unit id="fbadf1275b65c4181d24456c2ab283e804a0faaa" translate="yes" xml:space="preserve">
          <source>To start the server:</source>
          <target state="translated">서버를 시작하려면 :</target>
        </trans-unit>
        <trans-unit id="161b166c41ce84e34da9e5e2331f7522a3e9d205" translate="yes" xml:space="preserve">
          <source>Unittest support</source>
          <target state="translated">Unittest 지원</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="8c026dc03177e2825f79094baa26510326f0c686" translate="yes" xml:space="preserve">
          <source>Verifying a property you&amp;rsquo;d like to test; In the example, we verify that any app response will not indicate a server-side error (HTTP codes 5xx).</source>
          <target state="translated">테스트 할 속성을 확인합니다. 이 예에서는 모든 앱 응답이 서버 측 오류 (HTTP 코드 5xx)를 나타내지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fdb53863c0564fe012de4c7e62cb9a2b506aa2d4" translate="yes" xml:space="preserve">
          <source>WSGI applications support</source>
          <target state="translated">WSGI 애플리케이션 지원</target>
        </trans-unit>
        <trans-unit id="7caf2aeda59f2df34cbc458a13469649b50167e4" translate="yes" xml:space="preserve">
          <source>With this Swagger schema example, there will be a case with body</source>
          <target state="translated">이 Swagger 스키마 예제를 사용하면 본문이있는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5c66e17aef4b9b7862ba82e30bf206fa5c5b2f9" translate="yes" xml:space="preserve">
          <source>Write a couple of tests in Python;</source>
          <target state="translated">Python으로 몇 가지 테스트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="b28464cdda5a4537d4257b5e422d2ed84b56fd16" translate="yes" xml:space="preserve">
          <source>Writing tests in Python</source>
          <target state="translated">Python으로 테스트 작성</target>
        </trans-unit>
        <trans-unit id="f3c27a3a2b761660fbfa56ef747d2415efab998a" translate="yes" xml:space="preserve">
          <source>You can provide your custom checks to the execute function, the check is a callable that accepts one argument of</source>
          <target state="translated">실행 함수에 사용자 정의 검사를 제공 할 수 있습니다. 검사는 다음 중 하나의 인수를 허용하는 콜 러블입니다.</target>
        </trans-unit>
        <trans-unit id="46a247b92f871873734f77484a493a24806fbf21" translate="yes" xml:space="preserve">
          <source>You can use them manually in network calls or can convert to a dictionary acceptable by</source>
          <target state="translated">네트워크 호출에서 수동으로 사용하거나 허용되는 사전으로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="975ead6106c8fae03ab29dfeb35b8d7e71868461" translate="yes" xml:space="preserve">
          <source>You could run tests via</source>
          <target state="translated">다음을 통해 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd5110297c8095d1a9c1b710162fbd12349dede" translate="yes" xml:space="preserve">
          <source>You need to specify an importable path to the module where your app instance resides and a variable name after</source>
          <target state="translated">앱 인스턴스가있는 모듈에 대한 가져 오기 가능한 경로를 지정하고 뒤에 변수 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0271e267e0e8bae33f22c0ba0d8a8cb777e79522" translate="yes" xml:space="preserve">
          <source>after 250 ms delay</source>
          <target state="translated">250ms 지연 후</target>
        </trans-unit>
        <trans-unit id="1a65c1510798d9222f547e1c203980daddaf7a30" translate="yes" xml:space="preserve">
          <source>aiohttp</source>
          <target state="translated">aiohttp</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="102a72fb16ec68f0a3508251060ba1313a2d401b" translate="yes" xml:space="preserve">
          <source>and Luhn algorithm validator.</source>
          <target state="translated">및 Luhn 알고리즘 유효성 검사기.</target>
        </trans-unit>
        <trans-unit id="c7d06886db407d7259f235f63b9b949a4c7e1899" translate="yes" xml:space="preserve">
          <source>and its
schema is available at</source>
          <target state="translated">스키마는</target>
        </trans-unit>
        <trans-unit id="ad55b57323d51598af4d57e908127eb674d37902" translate="yes" xml:space="preserve">
          <source>and requires an application instance available, then you can parametrize the tests from a pytest fixture.</source>
          <target state="translated">사용 가능한 애플리케이션 인스턴스가 필요하면 pytest 픽스처에서 테스트를 매개 변수화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb9d2c0b78ab0bf289bcbb32112cca0604b6be88" translate="yes" xml:space="preserve">
          <source>apispec</source>
          <target state="translated">apispec</target>
        </trans-unit>
        <trans-unit id="ca9fd0b2414177b79ac2ea7ad76252e4ef6dd65c" translate="yes" xml:space="preserve">
          <source>application/json</source>
          <target state="translated">응용 프로그램 / json</target>
        </trans-unit>
        <trans-unit id="52bd31aa13e4dee486542ebb4665c0f3b9cb3d9f" translate="yes" xml:space="preserve">
          <source>argument in loaders.</source>
          <target state="translated">로더의 인수.</target>
        </trans-unit>
        <trans-unit id="dca4fd294fc8a69c543aebf62f0122de0124719f" translate="yes" xml:space="preserve">
          <source>attributes:</source>
          <target state="translated">속성 :</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">몸</target>
        </trans-unit>
        <trans-unit id="59e0ec91c0cc35060bb0da876f6418a098b1ce2a" translate="yes" xml:space="preserve">
          <source>card_number</source>
          <target state="translated">카드 번호</target>
        </trans-unit>
        <trans-unit id="6406510c31e0c9925733c7f21414bf6428333ed2" translate="yes" xml:space="preserve">
          <source>case</source>
          <target state="translated">케이스</target>
        </trans-unit>
        <trans-unit id="69a2d99e5304c9c5983965fbc8ce3098c42d6c79" translate="yes" xml:space="preserve">
          <source>case.call</source>
          <target state="translated">case.call</target>
        </trans-unit>
        <trans-unit id="c26f2f3473c40bc52fe828e7fdd12d789ff219cf" translate="yes" xml:space="preserve">
          <source>command can be used to perform Schemathesis test cases:</source>
          <target state="translated">명령을 사용하여 Schemathesis 테스트 케이스를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f7c914b6b7386931cee6cda90ad76a007dc3fcd" translate="yes" xml:space="preserve">
          <source>command line option.</source>
          <target state="translated">명령 행 옵션.</target>
        </trans-unit>
        <trans-unit id="1fadb7851613e61ca94b0c56737a07dad9d9677a" translate="yes" xml:space="preserve">
          <source>content type header</source>
          <target state="translated">콘텐츠 유형 헤더</target>
        </trans-unit>
        <trans-unit id="d2bd354967d6da5d68c9540c90a6352e927c88c6" translate="yes" xml:space="preserve">
          <source>cookies</source>
          <target state="translated">쿠키</target>
        </trans-unit>
        <trans-unit id="d46038d765c0ff12fd497feb0466b6fcf3269f26" translate="yes" xml:space="preserve">
          <source>creates a generator that yields events of different kinds -</source>
          <target state="translated">다양한 종류의 이벤트를 생성하는 생성기를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="07d53ef17dd72b416d8726cdb730626b94055c03" translate="yes" xml:space="preserve">
          <source>decorator from Hypothesis, more info about its behavior is &lt;a href=&quot;https://hypothesis.readthedocs.io/en/latest/reproducing.html#providing-explicit-examples&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">가설의 데코레이터, 그 동작에 대한 자세한 정보는 &lt;a href=&quot;https://hypothesis.readthedocs.io/en/latest/reproducing.html#providing-explicit-examples&quot;&gt;여기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b16702703b4ee74e3ed91f3d69cef78139e2a06" translate="yes" xml:space="preserve">
          <source>decorator on your test functions:</source>
          <target state="translated">테스트 함수의 데코레이터 :</target>
        </trans-unit>
        <trans-unit id="f3c7c3db165bed67a7a06284360dd02f9ce4e1fa" translate="yes" xml:space="preserve">
          <source>directory in the repository.</source>
          <target state="translated">저장소의 디렉토리.</target>
        </trans-unit>
        <trans-unit id="8727e37cfc0902f9de8dbb42bad04ecc6fe90a31" translate="yes" xml:space="preserve">
          <source>docs/</source>
          <target state="translated">docs /</target>
        </trans-unit>
        <trans-unit id="f924ae0b7c3fafc8dd4ef0a7848c93a7dc6a4e3a" translate="yes" xml:space="preserve">
          <source>does it.</source>
          <target state="translated">그렇습니다.</target>
        </trans-unit>
        <trans-unit id="c3499c2729730a7f807efb8676a92dcb6f8a3f8f" translate="yes" xml:space="preserve">
          <source>example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="d68049bb85454c0b8c56ffbb73c45e8adee41b21" translate="yes" xml:space="preserve">
          <source>failure</source>
          <target state="translated">실패</target>
        </trans-unit>
        <trans-unit id="4713d49c862cbadd51d331805b4034aab88712d4" translate="yes" xml:space="preserve">
          <source>fixture, that represents a single test case.</source>
          <target state="translated">하나의 테스트 케이스를 나타내는 Fixture.</target>
        </trans-unit>
        <trans-unit id="2a5f5fbd94c94ec40d07ba5fe23af6378dba3305" translate="yes" xml:space="preserve">
          <source>form_data</source>
          <target state="translated">form_data</target>
        </trans-unit>
        <trans-unit id="b32e9f42217fff3a84f22d57e559e50c18b99229" translate="yes" xml:space="preserve">
          <source>formatted_path</source>
          <target state="translated">formatted_path</target>
        </trans-unit>
        <trans-unit id="b69f2ca8601ae55281ff1e7acd5744c29db43cf3" translate="yes" xml:space="preserve">
          <source>framework out of the box,
you only need to specify strategies for</source>
          <target state="translated">기본 프레임 워크를 사용하려면 전략을 지정하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5346c6522cc4f467479672f4e17e362f3f7c1f42" translate="yes" xml:space="preserve">
          <source>from_dict</source>
          <target state="translated">from_dict</target>
        </trans-unit>
        <trans-unit id="faade01b039d5b0c01b15a7554c78bbcf903f756" translate="yes" xml:space="preserve">
          <source>from_file</source>
          <target state="translated">from_file</target>
        </trans-unit>
        <trans-unit id="a3f79dd37b914bcf408a83e4c18aa632ef18bdd0" translate="yes" xml:space="preserve">
          <source>from_path</source>
          <target state="translated">from_path</target>
        </trans-unit>
        <trans-unit id="f8d00c5b6cd4bb55bf7581bfb796b3087b9d66f8" translate="yes" xml:space="preserve">
          <source>from_uri</source>
          <target state="translated">from_uri</target>
        </trans-unit>
        <trans-unit id="3ec730769c68101cd9eb10566d74e902e218d32b" translate="yes" xml:space="preserve">
          <source>from_wsgi</source>
          <target state="translated">from_wsgi</target>
        </trans-unit>
        <trans-unit id="09d4913b5eb9b050e40c0c5f54e1625da49faf94" translate="yes" xml:space="preserve">
          <source>generates separate tests for all endpoint/method combination available in the schema.</source>
          <target state="translated">스키마에서 사용 가능한 모든 엔드 포인트 / 메소드 조합에 대해 별도의 테스트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="26b47e3d825258ae534f85838d81e93ddd46db1f" translate="yes" xml:space="preserve">
          <source>headers</source>
          <target state="translated">헤더</target>
        </trans-unit>
        <trans-unit id="8aebc8069972bbb157d4807a79a206f26dd19d25" translate="yes" xml:space="preserve">
          <source>hook:</source>
          <target state="translated">훅:</target>
        </trans-unit>
        <trans-unit id="ed4b436c75459c858b3198e9e021f32cfa7ec531" translate="yes" xml:space="preserve">
          <source>hypothesis</source>
          <target state="translated">가설</target>
        </trans-unit>
        <trans-unit id="8a8558c9d6e7950ade8b861c5708d11a7ad159f1" translate="yes" xml:space="preserve">
          <source>hypothesis.given</source>
          <target state="translated">가설. 주어진</target>
        </trans-unit>
        <trans-unit id="795f4f9df253c3a6e4b42281b05046a4cc5e28ea" translate="yes" xml:space="preserve">
          <source>hypothesis.settings</source>
          <target state="translated">hypothesis.settings</target>
        </trans-unit>
        <trans-unit id="c472b297fe15f0020ca30545ad0227c62c9733a1" translate="yes" xml:space="preserve">
          <source>hypothesis.strategies.SearchStrategy</source>
          <target state="translated">hypothesis.strategies.SearchStrategy</target>
        </trans-unit>
        <trans-unit id="3fc0817134906d65b81d3bcfc58cfb08845ac831" translate="yes" xml:space="preserve">
          <source>hypothesis_jsonschema</source>
          <target state="translated">hypothesis_jsonschema</target>
        </trans-unit>
        <trans-unit id="50931ccbbe51dae4b753bc2f80805c3691d72510" translate="yes" xml:space="preserve">
          <source>in CLI and</source>
          <target state="translated">CLI 및</target>
        </trans-unit>
        <trans-unit id="7508c08d0b9f05e901f9828fd8f737752be3af23" translate="yes" xml:space="preserve">
          <source>in your current environment:</source>
          <target state="translated">현재 환경에서 :</target>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="translated">대신에</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">정수</target>
        </trans-unit>
        <trans-unit id="9077bdb27b2b8fc9d2176658752393ca1567f26a" translate="yes" xml:space="preserve">
          <source>library.</source>
          <target state="translated">도서관.</target>
        </trans-unit>
        <trans-unit id="bfbaf8b2d1cdf92bf83857fe1748c0f68de03d47" translate="yes" xml:space="preserve">
          <source>method</source>
          <target state="translated">방법</target>
        </trans-unit>
        <trans-unit id="de965f29aef27b3e47bc09c7b6ba4711cd512e55" translate="yes" xml:space="preserve">
          <source>module might be helpful for you.
It can run tests against the given schema URI and will do some simple checks for you.</source>
          <target state="translated">모듈이 도움이 될 수 있습니다. 주어진 스키마 URI에 대해 테스트를 실행할 수 있으며 몇 가지 간단한 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="58e00836a443f87aeeb525c2355bb8d6602e83d2" translate="yes" xml:space="preserve">
          <source>option for Basic Auth and</source>
          <target state="translated">기본 인증 및</target>
        </trans-unit>
        <trans-unit id="9d5d420e691b07e40abc4840fbf74898e92023d6" translate="yes" xml:space="preserve">
          <source>option for concurrent test execution:</source>
          <target state="translated">동시 테스트 실행 옵션 :</target>
        </trans-unit>
        <trans-unit id="6a8d62dd12dde4228ed0d91b3f7898ce50771564" translate="yes" xml:space="preserve">
          <source>option for you:</source>
          <target state="translated">당신을위한 옵션 :</target>
        </trans-unit>
        <trans-unit id="0d9d2898e0b8cf3b40aed7e2ed7a9872f4ddda8e" translate="yes" xml:space="preserve">
          <source>option.
The value is expected to be a comma separated string with endpoint names (</source>
          <target state="translated">선택권. 값은 끝점 이름 (</target>
        </trans-unit>
        <trans-unit id="5c4e6abd633a3a3bf12d5781e1ac0edf20d91eaf" translate="yes" xml:space="preserve">
          <source>options respectively.</source>
          <target state="translated">각각 옵션.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="0de798bf22251cb54cdeda4aab2c97d6e213ef43" translate="yes" xml:space="preserve">
          <source>or other</source>
          <target state="translated">또는 기타</target>
        </trans-unit>
        <trans-unit id="b20d631ece4394aa816327fc3e83c335841b9b65" translate="yes" xml:space="preserve">
          <source>or reuse it in your own application, then</source>
          <target state="translated">또는 자신의 애플리케이션에서 재사용 한 다음</target>
        </trans-unit>
        <trans-unit id="8cabd9c2d77efc69b825e16be0b2a99fd3aac9cb" translate="yes" xml:space="preserve">
          <source>package provides multiple ways to initialize the schema -</source>
          <target state="translated">패키지는 스키마를 초기화하는 여러 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bd2a0f5ff9872c4fb53012a32fc945714cec69e7" translate="yes" xml:space="preserve">
          <source>parameter:</source>
          <target state="translated">매개 변수 :</target>
        </trans-unit>
        <trans-unit id="99e7ee52da75b9d2d0cc615b68bac1cbd12750dc" translate="yes" xml:space="preserve">
          <source>part.</source>
          <target state="translated">부품.</target>
        </trans-unit>
        <trans-unit id="f188c63c5795e3fcdac0049436669540294907ba" translate="yes" xml:space="preserve">
          <source>path_parameters</source>
          <target state="translated">path_parameters</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="231ab6b91bc76a765b8f7e93cdda352e807314e9" translate="yes" xml:space="preserve">
          <source>plain/text</source>
          <target state="translated">일반 텍스트</target>
        </trans-unit>
        <trans-unit id="0e23246b5c43f521f267ce0e4e1f12bf6e47d647" translate="yes" xml:space="preserve">
          <source>poetry</source>
          <target state="translated">시</target>
        </trans-unit>
        <trans-unit id="b702c35a642dc0d363452d56f72020080261aeaa" translate="yes" xml:space="preserve">
          <source>protocol.</source>
          <target state="translated">실험 계획안.</target>
        </trans-unit>
        <trans-unit id="0eaa389e1fdb3a1917c0f987514bd561be5718ee" translate="yes" xml:space="preserve">
          <source>pytest</source>
          <target state="translated">pytest</target>
        </trans-unit>
        <trans-unit id="785db1ed037432519d76b54813f470d72a6fa0c2" translate="yes" xml:space="preserve">
          <source>pytest-subtests</source>
          <target state="translated">pytest-subtests</target>
        </trans-unit>
        <trans-unit id="7cd9148ec5a552dbf68de5a6debcf8e4d974db72" translate="yes" xml:space="preserve">
          <source>query</source>
          <target state="translated">질문</target>
        </trans-unit>
        <trans-unit id="b1c8218a16e0432911790a8efb0351ef6195bb1f" translate="yes" xml:space="preserve">
          <source>re.search</source>
          <target state="translated">연구</target>
        </trans-unit>
        <trans-unit id="1152a0a10e0ed838651d373fbb6b02c905187610" translate="yes" xml:space="preserve">
          <source>requests.Response</source>
          <target state="translated">requests.Response</target>
        </trans-unit>
        <trans-unit id="7f705d2b054dd3d7b0683e6bedf21a1c06b31599" translate="yes" xml:space="preserve">
          <source>requests.request</source>
          <target state="translated">requests.request</target>
        </trans-unit>
        <trans-unit id="0ec6d150549780250a9772c06b619bcc46a0e560" translate="yes" xml:space="preserve">
          <source>response</source>
          <target state="translated">응답</target>
        </trans-unit>
        <trans-unit id="009b56155c4ad28335583117abff0071c8d40d47" translate="yes" xml:space="preserve">
          <source>responses, which are not declared in the schema</source>
          <target state="translated">스키마에 선언되지 않은 응답</target>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">운영</target>
        </trans-unit>
        <trans-unit id="ef29ebea62e25378544fc8284c1bdfc055988c60" translate="yes" xml:space="preserve">
          <source>run the following command:</source>
          <target state="translated">다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="63a5fd3bc5f45a0490e4deca178d288050e26803" translate="yes" xml:space="preserve">
          <source>runner</source>
          <target state="translated">runner</target>
        </trans-unit>
        <trans-unit id="d8495bfc436460980eaf0950d5a3b3b3e8600bae" translate="yes" xml:space="preserve">
          <source>runner.prepare</source>
          <target state="translated">runner.prepare</target>
        </trans-unit>
        <trans-unit id="b8105fdf630e2392f9b7638302f2fc17ece8a103" translate="yes" xml:space="preserve">
          <source>schema.register_hook</source>
          <target state="translated">schema.register_hook</target>
        </trans-unit>
        <trans-unit id="fd476208a96bd499a2dbc5f4b62141d762a37dd9" translate="yes" xml:space="preserve">
          <source>schemathesis</source>
          <target state="translated">도식</target>
        </trans-unit>
        <trans-unit id="b20bcdbd0d58b80a6181d12bfa0db8ab04d7eb3a" translate="yes" xml:space="preserve">
          <source>schemathesis.from_</source>
          <target state="translated">schemathesis.from_</target>
        </trans-unit>
        <trans-unit id="77f6d4332ea44e39dc7baf87c48ade67ccc8e8cf" translate="yes" xml:space="preserve">
          <source>schemathesis.from_dict</source>
          <target state="translated">schemathesis.from_dict</target>
        </trans-unit>
        <trans-unit id="10dd52c8f2b905107b9dec207d0b7c14707af5f6" translate="yes" xml:space="preserve">
          <source>schemathesis.hooks.register</source>
          <target state="translated">schemathesis.hooks.register</target>
        </trans-unit>
        <trans-unit id="e4067136001e2b5d254f99f97ee5e2ebf0d9c88b" translate="yes" xml:space="preserve">
          <source>schemathesis.models.Case</source>
          <target state="translated">schemathesis.models.Case</target>
        </trans-unit>
        <trans-unit id="def8d636f5a26c00ad62e4385876475f03f7964d" translate="yes" xml:space="preserve">
          <source>schemathesis.register_string_format</source>
          <target state="translated">schemathesis.register_string_format</target>
        </trans-unit>
        <trans-unit id="8438917c8a7151c4a9fc0924a19849c98949b331" translate="yes" xml:space="preserve">
          <source>schemathesis.utils.WSGIResponse</source>
          <target state="translated">schemathesis.utils.WSGIResponse</target>
        </trans-unit>
        <trans-unit id="57e8a7776d6892a83f2a49678f8141f4fb883e62" translate="yes" xml:space="preserve">
          <source>slow</source>
          <target state="translated">느린</target>
        </trans-unit>
        <trans-unit id="53a5687cb26dc41f2ab4033e97e13adefd3740d6" translate="yes" xml:space="preserve">
          <source>success</source>
          <target state="translated">성공</target>
        </trans-unit>
        <trans-unit id="ac969a65869f3cb620d641c3d8f7a1601193b53a" translate="yes" xml:space="preserve">
          <source>that points
to your app. &lt;strong&gt;Note&lt;/strong&gt;, app factories are not supported. The schema location could be:</source>
          <target state="translated">앱을 가리 킵니다. &lt;strong&gt;참고&lt;/strong&gt; 로 앱 팩토리는 지원되지 않습니다. 스키마 위치는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c7fb5916ced482db0ac49a5ddb1ef7e3e42de055" translate="yes" xml:space="preserve">
          <source>to specify
custom headers to be sent with each request.</source>
          <target state="translated">각 요청과 함께 보낼 사용자 지정 헤더를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7bdf31978c0210720b3420242d2f1d74927c098c" translate="yes" xml:space="preserve">
          <source>tox</source>
          <target state="translated">독극물</target>
        </trans-unit>
        <trans-unit id="d53baa8c493e770c7856a9d9f9657dee0d56e267" translate="yes" xml:space="preserve">
          <source>type and</source>
          <target state="translated">유형 및</target>
        </trans-unit>
        <trans-unit id="c1e7e23c9d7c1dc650f0d98f72356b3068127801" translate="yes" xml:space="preserve">
          <source>type.</source>
          <target state="translated">유형.</target>
        </trans-unit>
        <trans-unit id="94e060874450b5ea724bb6ce5ca7be4f6a73416b" translate="yes" xml:space="preserve">
          <source>unittest</source>
          <target state="translated">unittest</target>
        </trans-unit>
        <trans-unit id="b931a1b1bfffdd151869780bb65427950a252351" translate="yes" xml:space="preserve">
          <source>usage &lt;a href=&quot;https://github.com/kiwicom/schemathesis#wsgi&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kiwicom/schemathesis#wsgi&quot;&gt;아래&lt;/a&gt; 사용법</target>
        </trans-unit>
        <trans-unit id="e3001754a89ef27ae211691b685337d6d4c1e398" translate="yes" xml:space="preserve">
          <source>validate_schema=False</source>
          <target state="translated">validate_schema = False</target>
        </trans-unit>
        <trans-unit id="5debcdb21de5907718008c1e5ba732be7bc177d1" translate="yes" xml:space="preserve">
          <source>variations.</source>
          <target state="translated">변형.</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">와</target>
        </trans-unit>
        <trans-unit id="1beb0685dfd093a089d1f6c614dd4d7c182620ba" translate="yes" xml:space="preserve">
          <source>{&quot;name&quot;: &quot;Doggo&quot;}</source>
          <target state="translated">{ &quot;name&quot;: &quot;Doggo&quot;}</target>
        </trans-unit>
        <trans-unit id="c4a15d9c55ed1fb2c3d7cd84207c95440eba2290" translate="yes" xml:space="preserve">
          <source>{&quot;slow&quot;: true}</source>
          <target state="translated">{ &quot;slow&quot;: true}</target>
        </trans-unit>
        <trans-unit id="484b3032619fa1acd135d114565b0a5166281c22" translate="yes" xml:space="preserve">
          <source>{&quot;success&quot;: true}</source>
          <target state="translated">{ &quot;성공&quot;: 참}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
