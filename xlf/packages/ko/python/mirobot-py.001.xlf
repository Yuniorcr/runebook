<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/mirobot-py/">
    <body>
      <group id="mirobot-py">
        <trans-unit id="362025236ef642c6b751ee681f51209de39b7060" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;Matthew's library&lt;/a&gt; takes the traditional approach to recieving output from the robot as they appear. Basically this replicates the live terminal feedback in a client similar to Wlkata's Studio program. The original code has a thread listening the background for new messages and displays them as they appear.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;Matthew의 라이브러리&lt;/a&gt; 는 로봇이 나타나는대로 출력을 수신하는 전통적인 접근 방식을 사용합니다. 기본적으로 이것은 Wlkata의 Studio 프로그램과 유사한 클라이언트에서 라이브 터미널 피드백을 복제합니다. 원래 코드에는 새 메시지에 대한 배경을 수신하는 스레드가 있으며 나타나는대로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a17c36d438ad8622c804ab3519ec91865c391827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mirobot&lt;/code&gt; is a python module that can be used to control the &lt;a href=&quot;http://www.wlkata.com/site/index.html&quot;&gt;WLkata Mirobot&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; 은 &lt;a href=&quot;http://www.wlkata.com/site/index.html&quot;&gt;WLkata Mirobot&lt;/a&gt; 을 제어하는 ​​데 사용할 수있는 Python 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="8afa3c0c2ad7485fc26a2a95e3990ba726705a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mirobot&lt;/code&gt; requires Python &amp;gt;= 3.6. Use &lt;code&gt;pip3&lt;/code&gt; to install it:</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; 에는 Python 3.6 이상이 필요합니다. &lt;code&gt;pip3&lt;/code&gt; 을 사용 하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="23f40b725ca4c86b9fe54ff02b310fea19490a95" translate="yes" xml:space="preserve">
          <source>A Python interface library for WKlata's Mirobot</source>
          <target state="translated">WKlata의 Mirobot 용 Python 인터페이스 라이브러리</target>
        </trans-unit>
        <trans-unit id="afb73331b2572947237b16f9ce516386484f6c17" translate="yes" xml:space="preserve">
          <source>And that's it! Now if you want to save keystrokes, here's a even more minimal version:</source>
          <target state="translated">그리고 그게 다야! 이제 키 입력을 저장하려면 훨씬 더 최소한의 버전이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9389fb235c0e40f0d6714cb38b6338207f4f91ec" translate="yes" xml:space="preserve">
          <source>Big thanks to Mattew Wachter for laying down the framework for this library-- please check out his links below:</source>
          <target state="translated">이 라이브러리의 프레임 워크를 마련 해준 Mattew Wachter에게 감사드립니다. 아래 링크를 확인하세요.</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">크레딧</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">기술</target>
        </trans-unit>
        <trans-unit id="e8a60d9416df2c4413a94ab176f954f4add08ba4" translate="yes" xml:space="preserve">
          <source>Differences from source repository</source>
          <target state="translated">소스 저장소와의 차이점</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="f2972a004a2cd00b7b0ab7e2bd7312f929551f3e" translate="yes" xml:space="preserve">
          <source>In the end, while developing this approach to error responsibility, I realized that this would probably not suit everyone's needs-- sometimes people just want a live feed of output. That is why I think Matthew's continued work would be great for the community. I don't want this repository and its beliefs to consume another. I also do not see a way to combine both approaches-- they are inherently incompatible at the core level.</source>
          <target state="translated">결국 오류 책임에 대한 이러한 접근 방식을 개발하는 동안 나는 이것이 아마도 모든 사람의 요구에 적합하지 않을 것임을 깨달았습니다. 때로는 사람들이 출력의 라이브 피드를 원합니다. 그렇기 때문에 Matthew의 지속적인 작업이 커뮤니티에 좋을 것이라고 생각합니다. 나는이 저장소와 그 신념이 다른 저장소를 소비하는 것을 원하지 않습니다. 또한 두 가지 접근 방식을 결합하는 방법은 보이지 않습니다. 본질적으로 핵심 수준에서 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="7c8493cf9aba35c8dea23fc91c483c0e2886798d" translate="yes" xml:space="preserve">
          <source>It is my belief that people who are looking to do significant scripting and logic-testing routines will benefit greatly from this library. People who are looking to use a CLI-friendly framework should instead use Matthew's &lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;&lt;code&gt;py-mirobot&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">중요한 스크립팅 및 논리 테스트 루틴을 수행하려는 사람들이이 라이브러리를 통해 큰 도움이 될 것이라고 믿습니다. CLI 친화적 프레임 워크를 사용하려는 사람들은 대신 Matthew의 &lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt; &lt;code&gt;py-mirobot&lt;/code&gt; &lt;/a&gt; 라이브러리를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="a1b9ee166c86baccfbab5d0551c3b7661bee5648" translate="yes" xml:space="preserve">
          <source>License: &lt;a href=&quot;https://github.com/rirze/mirobot-py/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;</source>
          <target state="translated">라이센스 : &lt;a href=&quot;https://github.com/rirze/mirobot-py/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0d5980b800d0dc1b1982551f33943af7bbebfb" translate="yes" xml:space="preserve">
          <source>Make sure to &lt;strong&gt;not&lt;/strong&gt; install the &lt;code&gt;mirobot&lt;/code&gt; package-- that package is unrelated to this one.</source>
          <target state="translated">을 확인 &lt;strong&gt;하지&lt;/strong&gt; 설치 &lt;code&gt;mirobot&lt;/code&gt; 을 해당 패키지가이 일에 관련이 package--.</target>
        </trans-unit>
        <trans-unit id="d01c2d48eaec7523f72c7389d6756e2910114cf3" translate="yes" xml:space="preserve">
          <source>Many of the functions and structures in this library are documented. The documentation is hosted &lt;a href=&quot;https://rirze.github.io/mirobot-py/&quot;&gt;here&lt;/a&gt;. If anything is unclear in the docs, please open a Github issue.</source>
          <target state="translated">이 라이브러리의 많은 기능과 구조가 문서화되어 있습니다. 설명서는 &lt;a href=&quot;https://rirze.github.io/mirobot-py/&quot;&gt;여기에서&lt;/a&gt; 호스팅 됩니다 . 문서에 명확하지 않은 내용이 있으면 Github 문제를여십시오.</target>
        </trans-unit>
        <trans-unit id="60e4a7e9c69c428a2a0ca9dea63e556a01264850" translate="yes" xml:space="preserve">
          <source>Matthew Wachter</source>
          <target state="translated">매튜 워터</target>
        </trans-unit>
        <trans-unit id="c356ca9f0745648468b1e7bd350cf44080c0d7b9" translate="yes" xml:space="preserve">
          <source>Reasons to fork (and not merge upstream)</source>
          <target state="translated">포크 (업스트림 병합 아님) 이유</target>
        </trans-unit>
        <trans-unit id="7439c4a034ab3fedb79765047a4b14d30c04e941" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mirobot&lt;/code&gt; class can detect existing open serial ports and &quot;guess&quot; which one to use as the Mirobot. There's no need to specify a portname for most cases!</source>
          <target state="translated">&lt;code&gt;Mirobot&lt;/code&gt; 의 클래스는 하나가 Mirobot으로 사용할 열린 시리얼 포트와 &quot;추측&quot;기존 검색 할 수 있습니다. 대부분의 경우 포트 이름을 지정할 필요가 없습니다!</target>
        </trans-unit>
        <trans-unit id="e4deffc302c6e805cc8803dbc9b1dd7d562b14cf" translate="yes" xml:space="preserve">
          <source>This library uses the G code protocol to communicate with the Mirobot over a serial connection. The official &lt;strong&gt;G code instruction set&lt;/strong&gt; and &lt;strong&gt;driver download&lt;/strong&gt; for the Mirobot can be found at the &lt;a href=&quot;http://www.wlkata.com/site/downloads.html&quot;&gt;WLkata Download Page&lt;/a&gt;</source>
          <target state="translated">이 라이브러리는 G 코드 프로토콜을 사용하여 직렬 연결을 통해 Mirobot과 통신합니다. Mirobot 의 공식 &lt;strong&gt;G 코드 지침 세트&lt;/strong&gt; 및 &lt;strong&gt;드라이버 다운로드&lt;/strong&gt; 는 &lt;a href=&quot;http://www.wlkata.com/site/downloads.html&quot;&gt;WLkata 다운로드 페이지&lt;/a&gt; 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c5c7ece530ede971ca700ba24973f87ece75417" translate="yes" xml:space="preserve">
          <source>This repository intends to take a more programmatic approach to this behavior. Specifically it narrows down the path to responsibility by explicitly pairing each command to its output. In a stream-messages-as-they-come approach to output messaging, it is not clear (or atleast easy) to determine which command failed and how to ensure scripts stop execution at exactly the point of failure (and not after). That is why each instruction in this library has a dedicated output, ensuring success and having its own message output as a return value. This approach is a lot harder to construct and relies on adapting to the idiosyncrasies of gcode and Mirobot programming.</source>
          <target state="translated">이 저장소는이 동작에 대해보다 프로그래밍 방식의 접근 방식을 취하려고합니다. 특히 각 명령을 출력에 명시 적으로 쌍으로 연결하여 책임 경로를 좁 힙니다. 출력 메시징에 대한 stream-messages-as-the-come 접근 방식에서는 실패한 명령과 스크립트가 정확히 실패 지점 (이후가 아님)에서 실행을 중지하도록하는 방법을 확인하는 것이 명확하지 않습니다 (또는 적어도 쉬운 방법). 이것이이 라이브러리의 각 명령어에 전용 출력이있어 성공을 보장하고 자체 메시지 출력을 반환 값으로 갖는 이유입니다. 이 접근 방식은 구성하기가 훨씬 더 어렵고 gcode 및 Mirobot 프로그래밍의 특이성에 적응하는 데 의존합니다.</target>
        </trans-unit>
        <trans-unit id="85d96bf4f4b7ec862016aae49d12e3351453f180" translate="yes" xml:space="preserve">
          <source>VT Pro Design</source>
          <target state="translated">VT Pro 디자인</target>
        </trans-unit>
        <trans-unit id="dee403b61717691c434f2d196144026802c27fec" translate="yes" xml:space="preserve">
          <source>While based of the same code initially, this repository has developed in a different direction with opinionated views on how one should use a robotics library. Specifically, there is the problem of 'output' when operating a gcode-programmed machine like Mirobot.</source>
          <target state="translated">처음에는 동일한 코드를 기반으로했지만이 저장소는 로봇 라이브러리를 어떻게 사용해야하는지에 대한 견해를 가지고 다른 방향으로 개발되었습니다. 특히 미 로봇과 같이 gcode로 프로그램 된 기계를 작동 할 때 '출력'문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="deeea39e2cbd3497d1ef37331ccf63692811f1ff" translate="yes" xml:space="preserve">
          <source>mirobot</source>
          <target state="translated">미 로봇</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
