<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/foxyproxy/">
    <body>
      <group id="foxyproxy">
        <trans-unit id="cf7a1017396fa857ee4613e245b8a909033d9304" translate="yes" xml:space="preserve">
          <source>*Note: each request to the RESTful API has to hav an X-Auth-Token header. The secrets
are defined in the configuration of each CloudFoxy RESTful server.</source>
          <target state="translated">* 참고 : RESTful API에 대한 각 요청에는 X-Auth-Token 헤더가 있어야합니다. 비밀은 각 CloudFoxy RESTful 서버의 구성에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff592baf8e9ca1f3b3f9e9ce157b90370f204f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supervisorctl&lt;/code&gt; - is a client, which shows status of processes - it has commands like:</source>
          <target state="translated">&lt;code&gt;supervisorctl&lt;/code&gt; - 프로세스 상태를 보여주는 클라이언트입니다. 다음과 같은 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd30e788d498e033c2164e4125483076fc918d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;systemctl enable supervisord&lt;/code&gt;   # auto restart after reboot</source>
          <target state="translated">&lt;code&gt;systemctl enable supervisord&lt;/code&gt; # 재부팅 후 자동 재시작</target>
        </trans-unit>
        <trans-unit id="6950c319b6191db2123c0747c7b331b76f2e5a95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 1 - abstrakt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;예제 1-abstrakt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0168f2c9e97bce8218dc6e420229671e9d37756c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;예 2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="caefa69cabf4ebb2b0bb7c7a87d7ae6d90090796" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 3&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;예제 3&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c98e8ad0e12efeb51cdfa176f868a965e5ce502" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;with a subsequent response to this request:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;이 요청에 대한 후속 응답 :&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6177601921d2257c5c02f27d7b60d94f793ea852" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;with a subsequent response&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;후속 응답으로&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb5db5e74ed3720058c4e5b0517a807ddcb44517" translate="yes" xml:space="preserve">
          <source>ALIASES - return a list of names from certificates in connected smartcards,
names are base64 encoded as they may
contain utf-8 characters; names are separated with &quot;|&quot;</source>
          <target state="translated">별칭-연결된 스마트 카드의 인증서에서 이름 목록을 반환합니다. 이름은 utf-8 문자를 포함 할 수 있으므로 base64로 인코딩됩니다. 이름은 &quot;|&quot;로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="f74c5f0f6f7078e86d5d8796a4a1470e11ce4348" translate="yes" xml:space="preserve">
          <source>APDU - send a command according to ISO7816 specifications</source>
          <target state="translated">APDU-ISO7816 사양에 따라 명령 보내기</target>
        </trans-unit>
        <trans-unit id="f7e56668dacb4544373d5976bb71c05ee0533181" translate="yes" xml:space="preserve">
          <source>Assuming the RESTful API is running at the &lt;em&gt;&lt;a href=&quot;http://restful.cloudfoxy.com:8081&quot;&gt;http://restful.cloudfoxy.com:8081&lt;/a&gt;&lt;/em&gt;
address.</source>
          <target state="translated">RESTful API가 &lt;em&gt;&lt;a href=&quot;http://restful.cloudfoxy.com:8081&quot;&gt;http://restful.cloudfoxy.com:8081&lt;/a&gt;&lt;/em&gt; 주소 에서 실행되고 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="2611768dd39cf743ae64aa96d9076b29ce693bed" translate="yes" xml:space="preserve">
          <source>CHAIN - return certificate chain for a particular alias</source>
          <target state="translated">CHAIN-특정 별칭에 대한 인증서 체인 반환</target>
        </trans-unit>
        <trans-unit id="c954a3473b10bdc1fb63fede669bdb2bbdd7322b" translate="yes" xml:space="preserve">
          <source>Client -&amp;gt; foxyproxy</source>
          <target state="translated">클라이언트-&amp;gt; foxyproxy</target>
        </trans-unit>
        <trans-unit id="1488f26f473956061fb16e9246c0c5552df1a113" translate="yes" xml:space="preserve">
          <source>CloudFoxy - FoxyProxy</source>
          <target state="translated">CloudFoxy-FoxyProxy</target>
        </trans-unit>
        <trans-unit id="ca4333190d550143c120d0a9599d279081a51dfa" translate="yes" xml:space="preserve">
          <source>CloudFoxy RESTful - Other Endpoints</source>
          <target state="translated">CloudFoxy RESTful-기타 엔드 포인트</target>
        </trans-unit>
        <trans-unit id="25d27d549344dfd3bb218f7b3dba3695f27498f9" translate="yes" xml:space="preserve">
          <source>CloudFoxy RESTful -&amp;gt; foxyproxy</source>
          <target state="translated">CloudFoxy RESTful-&amp;gt; foxyproxy</target>
        </trans-unit>
        <trans-unit id="c665e4685e53c427b5394aaa701ec59f3564c7ce" translate="yes" xml:space="preserve">
          <source>CloudFoxy RESTful returns a response to each of the GET requests, which will be
a simple text response if the &lt;code&gt;/api/v1/basic&lt;/code&gt; endpoint is used.</source>
          <target state="translated">CloudFoxy RESTful은 각 GET 요청에 대한 응답을 반환하며, 이는 &lt;code&gt;/api/v1/basic&lt;/code&gt; 엔드 포인트가 사용되는 경우 간단한 텍스트 응답 입니다.</target>
        </trans-unit>
        <trans-unit id="223909583dc63f0a2dc802a9f1c1be04fdf46078" translate="yes" xml:space="preserve">
          <source>CloudFoxy Smartcards</source>
          <target state="translated">CloudFoxy 스마트 카드</target>
        </trans-unit>
        <trans-unit id="e4574b4431b7ba7234008f579d1a84da2277fa22" translate="yes" xml:space="preserve">
          <source>CloudFoxy can interface smartcards connected via USB ports - as shown in the
example above, butthe primary reason why we built it was to provide a convenient
interface to the CloudFoxy hardware platform, which can host up to 120 smartcards.</source>
          <target state="translated">CloudFoxy는 USB 포트를 통해 연결된 스마트 카드를 인터페이스 할 수 있습니다. 위의 예에서 볼 수 있듯이, CloudFoxy를 구축 한 주된 이유는 최대 120 개의 스마트 카드를 호스팅 할 수있는 CloudFoxy 하드웨어 플랫폼에 편리한 인터페이스를 제공하기 위해서였습니다.</target>
        </trans-unit>
        <trans-unit id="b8949f2b56f1a9cb498d20583e0be0afcbb278c8" translate="yes" xml:space="preserve">
          <source>CloudFoxy server</source>
          <target state="translated">CloudFoxy 서버</target>
        </trans-unit>
        <trans-unit id="8171a9373981f90906c44b680653c8a3bda79961" translate="yes" xml:space="preserve">
          <source>EMPTYLINE - a helper command that will make the proxy wait for an empty new line to finish listening to the client</source>
          <target state="translated">EMPTYLINE-프록시가 클라이언트 수신을 완료하기 위해 빈 새 줄을 기다리도록 만드는 도우미 명령</target>
        </trans-unit>
        <trans-unit id="7907003999593f939c465625925eac4401eb6f14" translate="yes" xml:space="preserve">
          <source>ENUM - return a list of smart-card readers with valid signing certificates - names of readers are base64
encoded, separated with &quot;|&quot;</source>
          <target state="translated">ENUM-유효한 서명 인증서가있는 스마트 카드 판독기 목록을 반환합니다. 판독기 이름은 &quot;|&quot;로 구분 된 base64로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="54206d8b4b291cff230e30c3f97edc03de55ff57" translate="yes" xml:space="preserve">
          <source>Each request consists of at least 2 lines:</source>
          <target state="translated">각 요청은 최소 2 줄로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2740cd075557569830447006bbd4855888245a" translate="yes" xml:space="preserve">
          <source>End-to-End Dataflow Example</source>
          <target state="translated">종단 간 데이터 흐름 예</target>
        </trans-unit>
        <trans-unit id="8fdb5d77c0ea69e962db331c0331d4ccd1f6e481" translate="yes" xml:space="preserve">
          <source>External dependencies</source>
          <target state="translated">외부 의존성</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="4fabd31668195edb5125718d8d665e8e1347e73c" translate="yes" xml:space="preserve">
          <source>Install supervisor for automatic restarts</source>
          <target state="translated">자동 재시작을위한 감독자 설치</target>
        </trans-unit>
        <trans-unit id="2fed6cca1c573eff620eb03ca4a11854f68dea51" translate="yes" xml:space="preserve">
          <source>Install the application</source>
          <target state="translated">응용 프로그램 설치</target>
        </trans-unit>
        <trans-unit id="1fd7d88c2c3ec80e82b4f368ab1a838ca2ef3124" translate="yes" xml:space="preserve">
          <source>LIST - return a list of all smart-card readers - names of readers are base64 encoded, separated with &quot;|&quot;</source>
          <target state="translated">LIST-모든 스마트 카드 판독기 목록을 반환합니다. 판독기 이름은 &quot;|&quot;로 구분하여 base64로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="c5f70fff6b5d3257cecc5cd3e4dad9188a2e08ea" translate="yes" xml:space="preserve">
          <source>RESET - reset a particular smartcard</source>
          <target state="translated">RESET-특정 스마트 카드 재설정</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">의뢰</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">응답</target>
        </trans-unit>
        <trans-unit id="813583cbd954b87db0255a5d720c6d5e0fbc2e6f" translate="yes" xml:space="preserve">
          <source>Restart the supervisor:</source>
          <target state="translated">감독자를 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="bc80d25d3210b5825916cd4587e370c1ab02dc28" translate="yes" xml:space="preserve">
          <source>SIGN - request a signature from a particular smartcard</source>
          <target state="translated">SIGN-특정 스마트 카드에서 서명 요청</target>
        </trans-unit>
        <trans-unit id="2cc1f218515a34d92377971aee499e3b920861d3" translate="yes" xml:space="preserve">
          <source>TCP Commands</source>
          <target state="translated">TCP 명령</target>
        </trans-unit>
        <trans-unit id="fb202101663918cc6b574209279f34bb324f5357" translate="yes" xml:space="preserve">
          <source>TCP Interface</source>
          <target state="translated">TCP 인터페이스</target>
        </trans-unit>
        <trans-unit id="35b94c11da57b8dc2c487ab3ba80637ccb20198d" translate="yes" xml:space="preserve">
          <source>TCP clients can send multiple commands over a period of time as the server keeps
connections opened until its clients close them.</source>
          <target state="translated">TCP 클라이언트는 클라이언트가 연결을 닫을 때까지 서버가 연결을 열어두기 때문에 일정 기간 동안 여러 명령을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d4e1a4fb197744fa39c1fa8f7141d70282f4f07" translate="yes" xml:space="preserve">
          <source>TCP proxy will combine the responses and send all in one message back to the client:</source>
          <target state="translated">TCP 프록시는 응답을 결합하고 하나의 메시지로 모두 클라이언트로 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="1610ec8d0e81a955e313ce2eecb2cf9f5036ea55" translate="yes" xml:space="preserve">
          <source>TCP/RESTful proxy for Cloud Foxy - cloud platform for smart cards</source>
          <target state="translated">Cloud Foxy 용 TCP / RESTful 프록시-스마트 카드 용 클라우드 플랫폼</target>
        </trans-unit>
        <trans-unit id="a5858e2659d4f58857361200998ceb033a968655" translate="yes" xml:space="preserve">
          <source>The CloudFoxy RESTful server can connect to a multiple of them and provide access
to thousands of smartcards.</source>
          <target state="translated">CloudFoxy RESTful 서버는 여러 서버에 연결하여 수천 개의 스마트 카드에 대한 액세스를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec613bd2ae907fdef67e103e3a15e29b79668c69" translate="yes" xml:space="preserve">
          <source>The CloudFoxy smartcards have the following name format:</source>
          <target state="translated">CloudFoxy 스마트 카드의 이름 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="daddf5097b7a3f871618494154a601632b9e6a5c" translate="yes" xml:space="preserve">
          <source>The TCP interface of the proxy starts listening on port 4001. The port can be
adjusted with a command line parameter &lt;code&gt;-p&amp;lt;port&amp;gt;&lt;/code&gt;. Similarly, the address of the
RESTful server can be set with the &lt;code&gt;-s&amp;lt;url:port&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">프록시의 TCP 인터페이스는 포트 4001에서 수신 대기를 시작합니다. 포트는 명령 줄 매개 변수 &lt;code&gt;-p&amp;lt;port&amp;gt;&lt;/code&gt; 사용하여 조정할 수 있습니다 . 마찬가지로 RESTful 서버의 주소는 &lt;code&gt;-s&amp;lt;url:port&amp;gt;&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d636565ebc0d7d7579a89b3a0f309dc862d02580" translate="yes" xml:space="preserve">
          <source>The first line creates a regular expression for selecting a set of card readers,
the optional numerical parameter of the ENUM command limits the number of terminals
returned to the client.</source>
          <target state="translated">첫 번째 줄은 카드 리더 세트를 선택하기위한 정규식을 생성하고, ENUM 명령의 선택적 숫자 매개 변수는 클라이언트에 반환되는 터미널 수를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="fd6f8c96684697078cbd1028991848d1f8c57bd1" translate="yes" xml:space="preserve">
          <source>The first three are low-level commands, either directly sent to smartcards, or
just return a list of smartcard names. The ALIASES, CHAIN and
SIGN are abstract commands tailored to particular smartcards - eIDAS smartcards
sold by [http://ica.cz](I.CA - a Czech company). They show how the API can be
extended, although the CloudFoxy RESTful API also allows definitions of abstract
commands via protocols defines with a simple JSON notation.</source>
          <target state="translated">처음 세 개는 스마트 카드로 직접 전송되거나 스마트 카드 이름 목록을 반환하는 저수준 명령입니다. ALIASES, CHAIN ​​및 SIGN은 [http://ica.cz] (I.CA-체코 회사)에서 판매하는 eIDAS 스마트 카드와 같은 특정 스마트 카드에 맞게 조정 된 추상 명령입니다. CloudFoxy RESTful API는 간단한 JSON 표기법으로 정의하는 프로토콜을 통해 추상 명령을 정의 할 수도 있지만 API를 확장 할 수있는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cfa0da2eb1c0fbcad1f3fd0b9a070db4aedd24ab" translate="yes" xml:space="preserve">
          <source>There are currently four commands implemented for the TCP interface:</source>
          <target state="translated">현재 TCP 인터페이스에 대해 구현 된 네 가지 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3181d85d9763b16e7e3eb93b720d95348ef80d0" translate="yes" xml:space="preserve">
          <source>There are two requests above, they may provide separate responses, which look like:</source>
          <target state="translated">위의 두 가지 요청이 있으며 다음과 같은 별도의 응답을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcbf67e284c0c8f129ffea67c9b9259dddfa87d9" translate="yes" xml:space="preserve">
          <source>This is a side note about other options for using CloudFoxy RESTful. If you use</source>
          <target state="translated">이것은 CloudFoxy RESTful을 사용하기위한 다른 옵션에 대한 추가 정보입니다. 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="199da6fb37a6cc6cefc9721fb9adb26771b542b0" translate="yes" xml:space="preserve">
          <source>This proxy connects clients implementing simple TCP requests with the CloudFoxy
RESTful API. You can send any support request via GitLab issues or open a
support ticket at
&lt;a href=&quot;https://keychest.freshdesk.com/support/tickets/new&quot;&gt;https://keychest.freshdesk.com&lt;/a&gt;</source>
          <target state="translated">이 프록시는 CloudFoxy RESTful API를 사용하여 간단한 TCP 요청을 구현하는 클라이언트를 연결합니다. GitLab 문제를 통해 지원 요청을 보내거나 &lt;a href=&quot;https://keychest.freshdesk.com/support/tickets/new&quot;&gt;https://keychest.freshdesk.com&lt;/a&gt; 에서 지원 티켓을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a365f4d4b3c35329b6c5a7f81ca58c9d948fcd84" translate="yes" xml:space="preserve">
          <source>While a detailed description of the CloudFoxy RESTful API can be found
&lt;a href=&quot;https://gitlab.com/cloudfoxy/RESTfulFoxy&quot;&gt;here&lt;/a&gt;, it makes sense to demonstrate the
whole dataflow, which compromises:</source>
          <target state="translated">CloudFoxy RESTful API에 대한 자세한 설명은 &lt;a href=&quot;https://gitlab.com/cloudfoxy/RESTfulFoxy&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있지만 다음을 손상시키는 전체 데이터 흐름을 보여주는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b19f5365f78319221d712850bd0ced1be3fb2faf" translate="yes" xml:space="preserve">
          <source>You can adjust parameters as required.</source>
          <target state="translated">필요에 따라 매개 변수를 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c6cf7d46eca95f8efdfee417ed8a1e2952d3fa9" translate="yes" xml:space="preserve">
          <source>and create folder &lt;code&gt;/opt/cloudfoxy&lt;/code&gt;, where we can store or related files and data</source>
          <target state="translated">&lt;code&gt;/opt/cloudfoxy&lt;/code&gt; 폴더를 생성합니다 . 여기서 또는 관련 파일 및 데이터를 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f48940ad2a3d2b4edb7991524436b595b2714a" translate="yes" xml:space="preserve">
          <source>and fill it with the following contents</source>
          <target state="translated">다음 내용으로 채워주세요</target>
        </trans-unit>
        <trans-unit id="d6d7cb3efd10c38df830bdd382d6ce1d86c356f9" translate="yes" xml:space="preserve">
          <source>card reader identification</source>
          <target state="translated">카드 리더 식별</target>
        </trans-unit>
        <trans-unit id="b7cd151b67e46c63b25df6cd67b7dc6a1e61c40d" translate="yes" xml:space="preserve">
          <source>find a line with &lt;em&gt;inet_http_server&lt;/em&gt; and uncomment it (the section name), and the
first line, which is something like &quot;port=127.0.0.1:9001&quot;</source>
          <target state="translated">&lt;em&gt;inet_http_server가&lt;/em&gt; 있는 줄을 찾아 주석 처리 (섹션 이름)와 &quot;port = 127.0.0.1 : 9001&quot;과 같은 첫 번째 줄</target>
        </trans-unit>
        <trans-unit id="4f482f7b134839dca6bf1095a3ef069bfa418849" translate="yes" xml:space="preserve">
          <source>foxyproxy</source>
          <target state="translated">폭시 프록시</target>
        </trans-unit>
        <trans-unit id="8b0c4200fa1d26a2a59812000b30fda7e42500be" translate="yes" xml:space="preserve">
          <source>foxyproxy -&amp;gt; CloudFoxy RESTful</source>
          <target state="translated">foxyproxy-&amp;gt; CloudFoxy RESTful</target>
        </trans-unit>
        <trans-unit id="fca375ea00ba9c7605257aebfb8a367e54df64ab" translate="yes" xml:space="preserve">
          <source>foxyproxy -&amp;gt; client</source>
          <target state="translated">foxyproxy-&amp;gt; 클라이언트</target>
        </trans-unit>
        <trans-unit id="11a705eff49a1ec39b858a2eab39e47bc36c0da3" translate="yes" xml:space="preserve">
          <source>one or more commands - each in a separate line</source>
          <target state="translated">하나 이상의 명령-각각 별도의 줄에</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="066ceadebbddd6b37d84eabf17c817e0f43bcbec" translate="yes" xml:space="preserve">
          <source>reload  # loads the new configuration to use for future commands</source>
          <target state="translated">reload # 향후 명령에 사용할 새 구성을로드합니다.</target>
        </trans-unit>
        <trans-unit id="137991e58757a17990db9387844cf1cc0ecaac1f" translate="yes" xml:space="preserve">
          <source>reread  # reads configuration files and shows changes</source>
          <target state="translated">reread # 구성 파일을 읽고 변경 사항을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fbd443d0c53426af9e7cc2bf745cd53523350382" translate="yes" xml:space="preserve">
          <source>response 1: &lt;code&gt;6F048400A5009000&lt;/code&gt;</source>
          <target state="translated">응답 1 : &lt;code&gt;6F048400A5009000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="853109a8806128440e49f2bc4c1cc564fc1c4629" translate="yes" xml:space="preserve">
          <source>response 2: &lt;code&gt;9000&lt;/code&gt;</source>
          <target state="translated">응답 2 : &lt;code&gt;9000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f74abff9ddd6093c61927206cf5cdebe7c662d8e" translate="yes" xml:space="preserve">
          <source>restart &amp;lt;name&amp;gt;</source>
          <target state="translated">&amp;lt;이름&amp;gt; 다시 시작</target>
        </trans-unit>
        <trans-unit id="187f5b60d6a0a95498de266f4d86280c0f60e3d6" translate="yes" xml:space="preserve">
          <source>start &amp;lt;name&amp;gt;</source>
          <target state="translated">&amp;lt;이름&amp;gt; 시작</target>
        </trans-unit>
        <trans-unit id="041a94fd862b6da4d6e8065f43a795f8e0745cda" translate="yes" xml:space="preserve">
          <source>stop &amp;lt;name&amp;gt;</source>
          <target state="translated">중지 &amp;lt;이름&amp;gt;</target>
        </trans-unit>
        <trans-unit id="35e51bb08c6629204295fbb3f6b0688fbd47fe9c" translate="yes" xml:space="preserve">
          <source>sudo yum install gcc libffi-devel python-devel openssl-devel</source>
          <target state="translated">sudo yum install gcc libffi-devel python-devel openssl-devel</target>
        </trans-unit>
        <trans-unit id="f3573c0d5c002d5a2e0ec3d4767db480f52fd289" translate="yes" xml:space="preserve">
          <source>which is an enriched format of a geeky &lt;code&gt;/&amp;lt;IP address&amp;gt; |&quot;@&quot;|&amp;lt;id&amp;gt;&lt;/code&gt;, e.g., &lt;code&gt;/192.168.42.10@120&lt;/code&gt;</source>
          <target state="translated">괴상한 &lt;code&gt;/&amp;lt;IP address&amp;gt; |&quot;@&quot;|&amp;lt;id&amp;gt;&lt;/code&gt; 의 풍부한 형식입니다. 예 : &lt;code&gt;/192.168.42.10@120&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05bdf87d2dc3f4e5c855ad6be4887781284de56b" translate="yes" xml:space="preserve">
          <source>your application / telnet / script / APDUPlay (a Windows PC/SC library)</source>
          <target state="translated">애플리케이션 / 텔넷 / 스크립트 / APDUPlay (Windows PC / SC 라이브러리)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
