<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/eliot/">
    <body>
      <group id="eliot">
        <trans-unit id="84807ab2c40bcd6b7289e52e6ade968243a55479" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Eliot has made tracking down causes of failure (in complex external integrations and internal uses) tremendously easier. Our errors are logged to Sentry with the Eliot task UUID. That means we can go from a Sentry notification to a high-level trace of operations&amp;mdash;with important metadata at each operation&amp;mdash;in a few seconds. We immediately know which user did what in which part of the system.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;Eliot은 (복잡한 외부 통합 및 내부 사용에서) 실패 원인을 매우 쉽게 추적 할 수 있도록했습니다. 우리의 오류는 Eliot 작업 UUID와 함께 Sentry에 기록됩니다. 즉, Sentry 알림에서 높은 수준의 작업 추적 (각 작업에서 중요한 메타 데이터 포함)으로 몇 초 만에 이동할 수 있습니다. 어떤 사용자가 시스템의 어느 부분에서 무엇을했는지 즉시 알 수 있습니다. &quot;</target>
        </trans-unit>
        <trans-unit id="18a6dbe0371690907e41a82af17c5914148979db" translate="yes" xml:space="preserve">
          <source>&amp;mdash;Jonathan Jacobs</source>
          <target state="translated">-조나단 제이콥스</target>
        </trans-unit>
        <trans-unit id="ee262619e8bb46dc8409dc5c17bc04674be69d21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://eliot.readthedocs.io&quot;&gt;Read the documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://eliot.readthedocs.io&quot;&gt;설명서를 읽으십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb1f0fd7c51a185827686b80e37cdfe55f6ff832" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://eliot.readthedocs.io/en/stable/generating/asyncio.html&quot;&gt;Asyncio and Trio coroutines&lt;/a&gt; and the &lt;a href=&quot;https://eliot.readthedocs.io/en/stable/generating/twisted.html&quot;&gt;Twisted networking framework&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://eliot.readthedocs.io/en/stable/generating/asyncio.html&quot;&gt;Asyncio 및 Trio 코 루틴&lt;/a&gt; 과 &lt;a href=&quot;https://eliot.readthedocs.io/en/stable/generating/twisted.html&quot;&gt;Twisted 네트워킹 프레임 워크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d9a912327c6970031f6f9785c88245f950fd17a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Commercial support&lt;/strong&gt; is available from &lt;a href=&quot;https://pythonspeed.com/services/#eliot&quot;&gt;Python&amp;rArr;Speed&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;&lt;a href=&quot;https://pythonspeed.com/services/#eliot&quot;&gt;Python&amp;rArr;Speed&lt;/a&gt; 에서 &lt;strong&gt;상업적 지원&lt;/strong&gt; 이 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="c67cd29aa92d699535f85e96e8e74fbdd579a279" translate="yes" xml:space="preserve">
          <source>But with a better model you could understand what and why things happened in your application.
You could pinpoint performance bottlenecks, you could understand what happened when, who called what.</source>
          <target state="translated">그러나 더 나은 모델을 사용하면 애플리케이션에서 무슨 일이 일어나고 왜 발생했는지 이해할 수 있습니다. 성능 병목 지점을 정확히 찾아 내고 언제 무슨 일이 일어 났는지, 누가 무엇을 호출했는지 이해할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec13cdca380aed0e46a651b2b29db7e5080cb037" translate="yes" xml:space="preserve">
          <source>Causal tracing across a distributed system.</source>
          <target state="translated">분산 시스템에 대한 인과 추적.</target>
        </trans-unit>
        <trans-unit id="20076c00b33608667c61b3b89a6c690e7b0c56cc" translate="yes" xml:space="preserve">
          <source>Download from &lt;a href=&quot;https://pypi.python.org/pypi/eliot&quot;&gt;PyPI&lt;/a&gt; or &lt;a href=&quot;https://anaconda.org/conda-forge/eliot&quot;&gt;conda-forge&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/eliot&quot;&gt;PyPI&lt;/a&gt; 또는 &lt;a href=&quot;https://anaconda.org/conda-forge/eliot&quot;&gt;conda-forge&lt;/a&gt; 에서 다운로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="03866140ee3dc0abbb73e41b803bae440f74e2bd" translate="yes" xml:space="preserve">
          <source>Eliot is only used to generate your logs; you will might need tools like Logstash and ElasticSearch to aggregate and store logs if you are using multiple processes across multiple machines.</source>
          <target state="translated">Eliot는 로그를 생성하는 데만 사용됩니다. 여러 시스템에서 여러 프로세스를 사용하는 경우 로그를 집계하고 저장하려면 Logstash 및 ElasticSearch와 같은 도구가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff41324383515fc75b6d98c5cd694ddd798f7355" translate="yes" xml:space="preserve">
          <source>Eliot supports Python 3.5, 3.6, 3.7, and 3.8, as well as PyPy3.
It is maintained by Itamar Turner-Trauring, and released under the Apache 2.0 License.</source>
          <target state="translated">Eliot는 Python 3.5, 3.6, 3.7, 3.8과 PyPy3를 지원합니다. Itamar Turner-Trauring에서 유지 관리하며 Apache 2.0 라이선스에 따라 릴리스됩니다.</target>
        </trans-unit>
        <trans-unit id="0296eef97a8d9e0e6b2712a52f62f795dc750a56" translate="yes" xml:space="preserve">
          <source>Eliot supports a range of use cases and 3rd party libraries:</source>
          <target state="translated">Eliot는 다양한 사용 사례와 타사 라이브러리를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="22b29c993d4eb9d7d6112a76ad284b4fa3194f5e" translate="yes" xml:space="preserve">
          <source>Logging library that tells you why it happened</source>
          <target state="translated">발생한 이유를 알려주는 로깅 라이브러리</target>
        </trans-unit>
        <trans-unit id="deb0eb1a352599d63e0375a7bb9719d8afa7df4d" translate="yes" xml:space="preserve">
          <source>Logging within a single process.</source>
          <target state="translated">단일 프로세스 내에서 로깅.</target>
        </trans-unit>
        <trans-unit id="b24b580390f4874c9fd0cd22af0d78542868d9b2" translate="yes" xml:space="preserve">
          <source>Need help or have any questions? &lt;a href=&quot;https://github.com/itamarst/eliot/issues/new&quot;&gt;File an issue&lt;/a&gt; on GitHub.</source>
          <target state="translated">도움이 필요하거나 질문이 있습니까? GitHub에 &lt;a href=&quot;https://github.com/itamarst/eliot/issues/new&quot;&gt;문제&lt;/a&gt; 를 신고하세요.</target>
        </trans-unit>
        <trans-unit id="ecd001f3f5e1bff04aa969b8ba7e4bd71480570d" translate="yes" xml:space="preserve">
          <source>Python 2.7 is in legacy support mode, with the last release supported being 1.7; see &lt;a href=&quot;https://eliot.readthedocs.io/en/stable/python2.html&quot;&gt;here&lt;/a&gt; for details.</source>
          <target state="translated">Python 2.7은 레거시 지원 모드이며 지원되는 마지막 릴리스는 1.7입니다. 자세한 내용은 &lt;a href=&quot;https://eliot.readthedocs.io/en/stable/python2.html&quot;&gt;여기&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bfbf6b8de90c321b6a06f5e6a19c979b4d1c3be0" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s built-in</source>
          <target state="translated">Python의 내장</target>
        </trans-unit>
        <trans-unit id="6ccc9a88ec011922c26316f24ef378ca746b7738" translate="yes" xml:space="preserve">
          <source>Scientific computing, with &lt;a href=&quot;https://eliot.readthedocs.io/en/stable/scientific-computing.html&quot;&gt;built-in support for NumPy and Dask&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://eliot.readthedocs.io/en/stable/scientific-computing.html&quot;&gt;NumPy 및 Dask에 대한 지원&lt;/a&gt; 이 내장 된 과학 컴퓨팅 .</target>
        </trans-unit>
        <trans-unit id="e4378449b42446512cc9478e5a29a2f64fd088ed" translate="yes" xml:space="preserve">
          <source>Standard logging can&amp;rsquo;t answer these questions.</source>
          <target state="translated">표준 로깅은 이러한 질문에 답할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2c2cd2ae8ff170115855201664f8bc10a106aa1d" translate="yes" xml:space="preserve">
          <source>Testimonials</source>
          <target state="translated">추천 글</target>
        </trans-unit>
        <trans-unit id="8758ff48301960e9e83e6270e2448420c0356629" translate="yes" xml:space="preserve">
          <source>That is what Eliot does.</source>
          <target state="translated">그것이 Eliot가하는 일입니다.</target>
        </trans-unit>
        <trans-unit id="e88af7eda2e15ed9264b6b61e112f94244c64ee0" translate="yes" xml:space="preserve">
          <source>What caused this code path to be chosen?</source>
          <target state="translated">이 코드 경로를 선택한 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="717a0e621eb6dfd5b067d47d5bec7450e6a429d8" translate="yes" xml:space="preserve">
          <source>Why did this error happen?</source>
          <target state="translated">이 오류가 발생한 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="3298e1d6e2981a474e5b3baba59296d0ef0683b7" translate="yes" xml:space="preserve">
          <source>Why is your application slow?</source>
          <target state="translated">응용 프로그램이 느린 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="14c4c012559d92c59b3d8ac09a2e022bccd2775e" translate="yes" xml:space="preserve">
          <source>and other similar systems output a stream of factoids: they&amp;rsquo;re interesting, but you can&amp;rsquo;t really tell what&amp;rsquo;s going on.</source>
          <target state="translated">그리고 다른 유사한 시스템은 팩 토이 드의 흐름을 출력합니다. 흥미롭지 만 실제로 무슨 일이 일어나고 있는지 알 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="73528cb02ee3477ce1ac4789f9c89485ebc34fe6" translate="yes" xml:space="preserve">
          <source>eliot</source>
          <target state="translated">엘리엇</target>
        </trans-unit>
        <trans-unit id="5a0768718fc39d35e653fb3d4e90f856a1fec266" translate="yes" xml:space="preserve">
          <source>is a Python logging system that outputs causal chains of &lt;strong&gt;actions&lt;/strong&gt;: actions can spawn other actions, and eventually they either &lt;strong&gt;succeed or fail&lt;/strong&gt;.
The resulting logs tell you the story of what your software did: what happened, and what caused it.</source>
          <target state="translated">&lt;strong&gt;행동의&lt;/strong&gt; 인과 적 사슬을 출력하는 파이썬 로깅 시스템입니다 . 행동은 다른 행동을 생성 할 수 있으며 결국 &lt;strong&gt;성공하거나 실패&lt;/strong&gt; 합니다. 결과 로그는 소프트웨어가 수행 한 작업 (발생한 작업 및 원인)에 대한 스토리를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="translated">벌채 반출</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
