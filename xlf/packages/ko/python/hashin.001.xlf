<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/hashin/">
    <body>
      <group id="hashin">
        <trans-unit id="6acfe6b4438e6e5495cdda7851032216e1344342" translate="yes" xml:space="preserve">
          <source># check out foo==1.0</source>
          <target state="translated"># foo == 1.0 확인</target>
        </trans-unit>
        <trans-unit id="866935b11ed52f3748e513191d75407bc05b656f" translate="yes" xml:space="preserve">
          <source>(Internal) All tests have been rewritten as plain pytest functions.</source>
          <target state="translated">(내부) 모든 테스트는 일반 pytest 함수로 다시 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="cd66c58c836a7a391d6546de5d75ec704bff0d0a" translate="yes" xml:space="preserve">
          <source>(alias</source>
          <target state="translated">(별명</target>
        </trans-unit>
        <trans-unit id="0aa341d7fbab54caacb8c798320251b03cc5664d" translate="yes" xml:space="preserve">
          <source>(in this case, that&amp;rsquo;s not even a
package) but allows that syntax into your</source>
          <target state="translated">(이 경우에는 패키지도 아닙니다) 그러나 해당 구문을</target>
        </trans-unit>
        <trans-unit id="d2d57dc9a88af0efa564dc3e99f1b9b0d43df563" translate="yes" xml:space="preserve">
          <source>(when you use</source>
          <target state="translated">(사용할 때</target>
        </trans-unit>
        <trans-unit id="bec24f7566bc438cb1e08e4cefba05aa3d5129f2" translate="yes" xml:space="preserve">
          <source>)
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/103&quot;&gt;https://github.com/peterbe/hashin/issues/103&lt;/a&gt;</source>
          <target state="translated">) &lt;a href=&quot;https://github.com/peterbe/hashin/issues/103&quot;&gt;https://github.com/peterbe/hashin/issues/103 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baa033027c1c18fa575e3093ca1eaa9ce2e9a93c" translate="yes" xml:space="preserve">
          <source>) and these will be passed
through when re-writing the</source>
          <target state="translated">) 그리고 이것들은 재 작성할 때 통과됩니다.</target>
        </trans-unit>
        <trans-unit id="eff8442f941e49395b7aeb25cd37547e692add79" translate="yes" xml:space="preserve">
          <source>) will iterate over all outdated
versions in your requirements file and ask, for each one, if you want to
updated it.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/90&quot;&gt;https://github.com/peterbe/hashin/issues/90&lt;/a&gt;</source>
          <target state="translated">)은 요구 사항 파일의 모든 오래된 버전을 반복하고 업데이트 할 것인지 묻습니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/90&quot;&gt;https://github.com/peterbe/hashin/issues/90를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="406053a318f37681b42d5e924af3acb407a49820" translate="yes" xml:space="preserve">
          <source>) will parse the requirements file,
ignore the version, and update all packages that have new versions.
See &lt;a href=&quot;https://github.com/peterbe/hashin/pull/88&quot;&gt;https://github.com/peterbe/hashin/pull/88&lt;/a&gt;</source>
          <target state="translated">)는 요구 사항 파일을 구문 분석하고 버전을 무시하며 새 버전이있는 모든 패키지를 업데이트합니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/pull/88&quot;&gt;https://github.com/peterbe/hashin/pull/88를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="c6999977723d3bd5a2aaad952155236ac2692705" translate="yes" xml:space="preserve">
          <source>--algorithm</source>
          <target state="translated">--연산</target>
        </trans-unit>
        <trans-unit id="4a5b73828b0004e31f126b1580a5b2020079233a" translate="yes" xml:space="preserve">
          <source>--dry-run</source>
          <target state="translated">-드라 이런</target>
        </trans-unit>
        <trans-unit id="dbfd2d5e5b72e20735b73ba2d287c7ccc6901aed" translate="yes" xml:space="preserve">
          <source>--include-prereleases</source>
          <target state="translated">-프리 릴리즈 포함</target>
        </trans-unit>
        <trans-unit id="e0f441e57e078b0672b9144beb28284dd8c7dc9b" translate="yes" xml:space="preserve">
          <source>--index-url</source>
          <target state="translated">--index-url</target>
        </trans-unit>
        <trans-unit id="80fc287d09ff8e08f902b6686e57b0326822038d" translate="yes" xml:space="preserve">
          <source>--interactive</source>
          <target state="translated">--인터렉티브</target>
        </trans-unit>
        <trans-unit id="6126413521fe52c23afec315fa2ae4954162a99c" translate="yes" xml:space="preserve">
          <source>--python-version</source>
          <target state="translated">--python- 버전</target>
        </trans-unit>
        <trans-unit id="ed2ecb982028297a21bedb30c72284cd0f17e738" translate="yes" xml:space="preserve">
          <source>--requirements-file</source>
          <target state="translated">-요구 사항-파일</target>
        </trans-unit>
        <trans-unit id="8f925501b9dc676cc02b407763736444e0dce866" translate="yes" xml:space="preserve">
          <source>--update-all</source>
          <target state="translated">--모두 업데이트</target>
        </trans-unit>
        <trans-unit id="f2860556708260c3603c4f244db1aa03e85301b6" translate="yes" xml:space="preserve">
          <source>--verbose</source>
          <target state="translated">--말 수가 많은</target>
        </trans-unit>
        <trans-unit id="90cdb7ea49538fa14a6fddf9d2eb1811417d042f" translate="yes" xml:space="preserve">
          <source>-r</source>
          <target state="translated">-아르 자형</target>
        </trans-unit>
        <trans-unit id="2c2dcf44f1bc9aa15d180db1d30d26a50922272d" translate="yes" xml:space="preserve">
          <source>-u</source>
          <target state="translated">-유</target>
        </trans-unit>
        <trans-unit id="0f6525b05021a293131fbbf888152ce61db7a74c" translate="yes" xml:space="preserve">
          <source>.
&lt;a href=&quot;https://github.com/peterbe/hashin/pull/67&quot;&gt;Thanks @danfoster!&lt;/a&gt;</source>
          <target state="translated">. &lt;a href=&quot;https://github.com/peterbe/hashin/pull/67&quot;&gt;감사합니다 @danfoster!&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dcdfdf93fd9e778b07ef1d720dfa044cff5f004" translate="yes" xml:space="preserve">
          <source>.
This means we no longer need to &lt;em&gt;import&lt;/em&gt;</source>
          <target state="translated">. 즉, 더 이상 &lt;em&gt;가져올&lt;/em&gt; 필요가 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a53bab6a580c22009d49ac5c1b4f57046ab5081" translate="yes" xml:space="preserve">
          <source>. Doesn&amp;rsquo;t
actually get hashes for</source>
          <target state="translated">. 실제로 해시를 얻지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d580f6ce28b8a061084d07876ec3cd15c2d0343" translate="yes" xml:space="preserve">
          <source>. Thanks @nmacinnis
See &lt;a href=&quot;https://github.com/peterbe/hashin/pull/107&quot;&gt;https://github.com/peterbe/hashin/pull/107&lt;/a&gt;</source>
          <target state="translated">. 감사합니다 @nmacinnis 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/pull/107&quot;&gt;https://github.com/peterbe/hashin/pull/107&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76c59d66dd512cc53f59c1d613b6373f09358ac3" translate="yes" xml:space="preserve">
          <source>. To run all code style checks, use</source>
          <target state="translated">. 모든 코드 스타일 검사를 실행하려면</target>
        </trans-unit>
        <trans-unit id="a0892e9736fd9980028f13a84a058892e9155d78" translate="yes" xml:space="preserve">
          <source>. You can also specify
these exact identifiers directly, if you need something specific.</source>
          <target state="translated">. 특정 항목이 필요한 경우 이러한 정확한 식별자를 직접 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5ce22ed78ed58b5afa529a0c9a1383f4d973186" translate="yes" xml:space="preserve">
          <source>. You can either do this:</source>
          <target state="translated">. 다음 중 하나를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e7a7266e17abcb53538263c19893022706b03e9" translate="yes" xml:space="preserve">
          <source>.msi</source>
          <target state="translated">.msi</target>
        </trans-unit>
        <trans-unit id="2df7728a5ee76def4558ad39336d347de3acce61" translate="yes" xml:space="preserve">
          <source>.tgz</source>
          <target state="translated">.tgz</target>
        </trans-unit>
        <trans-unit id="21434e93b3897809f5dc08878b94e29ca8ca8a05" translate="yes" xml:space="preserve">
          <source>.whl</source>
          <target state="translated">.whl</target>
        </trans-unit>
        <trans-unit id="05a79f06cf3f67f726dae68d18a2290f6c9a50c9" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>
        </trans-unit>
        <trans-unit id="78b85108d8ce9f19cad052fda7663a0abd770cde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.python.org/pypi/peep/&quot;&gt;https://pypi.python.org/pypi/peep/&lt;/a&gt; but the functionality of</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/peep/&quot;&gt;https://pypi.python.org/pypi/peep/&lt;/a&gt; 하지만</target>
        </trans-unit>
        <trans-unit id="7c7c87285d13abb315b0b3a7b73470ebe5421655" translate="yes" xml:space="preserve">
          <source>A Word of Warning!</source>
          <target state="translated">경고의 말씀!</target>
        </trans-unit>
        <trans-unit id="9af2762dd569e5db6b1adf748ebeab3e9218d910" translate="yes" xml:space="preserve">
          <source>Ability to make</source>
          <target state="translated">만드는 능력</target>
        </trans-unit>
        <trans-unit id="57cebc57e443f42e3f0d7681fb923fd7d53eb7e3" translate="yes" xml:space="preserve">
          <source>Ability to pass</source>
          <target state="translated">통과 능력</target>
        </trans-unit>
        <trans-unit id="2f604ce48d97348a536fde1afcf9b9eeca2306ae" translate="yes" xml:space="preserve">
          <source>Ability to run</source>
          <target state="translated">달리는 능력</target>
        </trans-unit>
        <trans-unit id="2ec34292cced40b2f7aed217e974cea55a137f89" translate="yes" xml:space="preserve">
          <source>Add filtering of package releases by Python version.</source>
          <target state="translated">Python 버전별로 패키지 릴리스 필터링을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="42390e65f91eef68d5d281e6d06e2305c68cab20" translate="yes" xml:space="preserve">
          <source>After you have cloned the project, created a virtual environment and run:</source>
          <target state="translated">프로젝트를 복제 한 후 가상 환경을 만들고 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4acd663a40fa44dd135597fa75d2ffad011c3531" translate="yes" xml:space="preserve">
          <source>All HTTP GET work to fetch information about packages from PyPI is done in
concurrent threads. Requires backport for Python 2.7.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/101&quot;&gt;https://github.com/peterbe/hashin/issues/101&lt;/a&gt;</source>
          <target state="translated">PyPI에서 패키지에 대한 정보를 가져 오는 모든 HTTP GET 작업은 동시 스레드에서 수행됩니다. Python 2.7 용 백 포트가 필요합니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/101&quot;&gt;https://github.com/peterbe/hashin/issues/101를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a337f986e95ac9d23bed819725af88ef60409ef2" translate="yes" xml:space="preserve">
          <source>All Python code should be run through &lt;a href=&quot;https://pypi.org/project/black/&quot;&gt;Black&lt;/a&gt;.
This is checked in CI and you can test it locally with</source>
          <target state="translated">모든 Python 코드는 &lt;a href=&quot;https://pypi.org/project/black/&quot;&gt;Black을&lt;/a&gt; 통해 실행되어야합니다 . 이것은 CI에서 확인되며 로컬에서 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ac3cbc22425acc630a038f46ad7c1aaf68d702d" translate="yes" xml:space="preserve">
          <source>All code is now formatted with &lt;a href=&quot;https://pypi.org/project/black/&quot;&gt;Black&lt;/a&gt;.</source>
          <target state="translated">이제 모든 코드가 &lt;a href=&quot;https://pypi.org/project/black/&quot;&gt;Black&lt;/a&gt; 형식으로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="6173657fa2739ccd4a970fb8c36b19308e5b5b9a" translate="yes" xml:space="preserve">
          <source>All hashes, per package, are sorted (by the hash) to make it more
predictable.</source>
          <target state="translated">패키지 당 모든 해시는 예측 가능성을 높이기 위해 (해시별로) 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="3a5a11ec8a2ba14449d85b25d1d446dd439aa057" translate="yes" xml:space="preserve">
          <source>Also, this project uses &lt;a href=&quot;https://pypi.org/project/therapist/&quot;&gt;therapist&lt;/a&gt;
which helps with checking code style as a git pre-commit hook.</source>
          <target state="translated">또한이 프로젝트는 git pre-commit hook으로 코드 스타일을 확인하는 데 도움이되는 &lt;a href=&quot;https://pypi.org/project/therapist/&quot;&gt;치료사&lt;/a&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="357c3ea37be9e6409285f50f489dc15c3860b8e6" translate="yes" xml:space="preserve">
          <source>An example of this might be:</source>
          <target state="translated">이에 대한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="20667c65541284c16ddf1dde092ab6aec6ece03f" translate="yes" xml:space="preserve">
          <source>And if you want to limit it to certain Python versions, here&amp;rsquo;s an example:</source>
          <target state="translated">특정 Python 버전으로 제한하려는 경우 다음 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a35075f310a816c5659093407139000df06a0a0" translate="yes" xml:space="preserve">
          <source>Better error if you typo the package name since it&amp;rsquo;ll 404 on PyPI.</source>
          <target state="translated">PyPI에서 404가되기 때문에 패키지 이름을 입력하면 더 나은 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="796b15f71d7d1f0ed155906ba286749bd5abb8f3" translate="yes" xml:space="preserve">
          <source>Better error message when no versions, but some pre-releases found.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/76&quot;&gt;https://github.com/peterbe/hashin/issues/76&lt;/a&gt;</source>
          <target state="translated">버전이 없지만 일부 시험판이 발견 될 때 더 나은 오류 메시지가 표시됩니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/76&quot;&gt;https://github.com/peterbe/hashin/issues/76를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fac5192c48f81b623271ceb42a77ef9842acb01" translate="yes" xml:space="preserve">
          <source>Bugfix for new</source>
          <target state="translated">새로운 버그 수정</target>
        </trans-unit>
        <trans-unit id="9314c5f036387917642398c26237bf03490cfd4b" translate="yes" xml:space="preserve">
          <source>By default</source>
          <target state="translated">기본적으로</target>
        </trans-unit>
        <trans-unit id="376da7a254a7a6761e7ef611190aaefe2dd0591a" translate="yes" xml:space="preserve">
          <source>Code Style</source>
          <target state="translated">코드 스타일</target>
        </trans-unit>
        <trans-unit id="ad9a74df0112a98a43332e1ff7c50a56e81417d5" translate="yes" xml:space="preserve">
          <source>Cope with leading zeros in version numbers when figuring out what
the latest version is.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/39&quot;&gt;https://github.com/peterbe/hashin/issues/39&lt;/a&gt;</source>
          <target state="translated">최신 버전이 무엇인지 알아낼 때 버전 번호의 선행 0에 대처하십시오. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/39&quot;&gt;https://github.com/peterbe/hashin/issues/39를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">디버깅</target>
        </trans-unit>
        <trans-unit id="6e01dc37de435a6b70abbdb74282928a61a0c8a6" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t show URLs when using</source>
          <target state="translated">사용할 때 URL 표시 안함</target>
        </trans-unit>
        <trans-unit id="86bb043a7120b66e3bef23ffd8f8758fbf0faa77" translate="yes" xml:space="preserve">
          <source>Download the</source>
          <target state="translated">다운로드</target>
        </trans-unit>
        <trans-unit id="ca0ba3b61cb5569ebdfdbbc5e76144d0b2be272f" translate="yes" xml:space="preserve">
          <source>Dry run mode</source>
          <target state="translated">드라 이런 모드</target>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">편집하다</target>
        </trans-unit>
        <trans-unit id="13954db8c2742fd981c0d7cf5f898a133b4bf6b5" translate="yes" xml:space="preserve">
          <source>Edits your requirements.txt by hashing them in</source>
          <target state="translated">requirements.txt를 해싱하여 편집합니다.</target>
        </trans-unit>
        <trans-unit id="c67fa51d80fcb1f3a341f7bcf01b20e33d2c6ff5" translate="yes" xml:space="preserve">
          <source>Everything you can do with</source>
          <target state="translated">할 수있는 모든 것</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="46fd7f132ee7a7090e47e624ff142b2b5e973b7c" translate="yes" xml:space="preserve">
          <source>Filtering releases by Python version</source>
          <target state="translated">Python 버전별로 릴리스 필터링</target>
        </trans-unit>
        <trans-unit id="2c4117fb22c4c2feab6359c4a018c990a7ff821a" translate="yes" xml:space="preserve">
          <source>First, hopefully, working version.</source>
          <target state="translated">첫째, 제대로 작동하는 버전입니다.</target>
        </trans-unit>
        <trans-unit id="720a769903d52f2e026f7d4cc801c1d1a84df589" translate="yes" xml:space="preserve">
          <source>Fix PackageError if no Python version is defined.</source>
          <target state="translated">Python 버전이 정의되지 않은 경우 PackageError를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="41aa9b0a351f84a494bcee34d90503be783d231b" translate="yes" xml:space="preserve">
          <source>Fix compatibility issue with pip 8.1.2 and 8.1.1-2ubuntu0.1 and drop
support for Python 2.6</source>
          <target state="translated">pip 8.1.2 및 8.1.1-2ubuntu0.1과의 호환성 문제 수정 및 Python 2.6 지원 중단</target>
        </trans-unit>
        <trans-unit id="ae44ee17865d17de208a450cbdbc570996d78e3a" translate="yes" xml:space="preserve">
          <source>Fixed a bug where it would fail to install a package whose name is
partially part of an existing (installed) package.
E.g. installing</source>
          <target state="translated">이름이 기존 (설치된) 패키지의 일부인 패키지를 설치하지 못하는 버그를 수정했습니다. 예 : 설치</target>
        </trans-unit>
        <trans-unit id="d4b7a3d7199bdd4d093073d4cb083e8a00a81b4d" translate="yes" xml:space="preserve">
          <source>Fixes bug related to installing platform specific archives
See &lt;a href=&quot;https://github.com/peterbe/hashin/pull/33&quot;&gt;https://github.com/peterbe/hashin/pull/33&lt;/a&gt; Thanks @mythmon</source>
          <target state="translated">플랫폼 별 아카이브 설치와 관련된 버그 수정 &lt;a href=&quot;https://github.com/peterbe/hashin/pull/33&quot;&gt;https://github.com/peterbe/hashin/pull/33&lt;/a&gt; 감사합니다 @mythmon</target>
        </trans-unit>
        <trans-unit id="bffbbe302261255488cedcaf66d413bfbf36c6ca" translate="yes" xml:space="preserve">
          <source>For example, the</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">미래</target>
        </trans-unit>
        <trans-unit id="e79533b620f3edfec36dac1c884a3f3053d6d555" translate="yes" xml:space="preserve">
          <source>Go to pypi for that package</source>
          <target state="translated">해당 패키지의 pypi로 이동</target>
        </trans-unit>
        <trans-unit id="cdf692817eb6cc917872bb9668b92f7f89896f1c" translate="yes" xml:space="preserve">
          <source>Helps you write your</source>
          <target state="translated">당신이 당신의</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">역사</target>
        </trans-unit>
        <trans-unit id="e13e18f3a4a56aeb9973b0c1bdfe43af2d3c3e20" translate="yes" xml:space="preserve">
          <source>How to use it</source>
          <target state="translated">사용 방법</target>
        </trans-unit>
        <trans-unit id="61dac0606bcd22dad61e45b5cb61c90e998b79c7" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s no output, it worked. Check how it edited your
requirements file.</source>
          <target state="translated">출력이 없으면 작동합니다. 요구 사항 파일을 어떻게 편집했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d7d8e9e441e1a84088f764405efe97e2527fd393" translate="yes" xml:space="preserve">
          <source>If this script proves itself to work and be useful, I hope we can
put it directly into</source>
          <target state="translated">이 스크립트가 자체적으로 작동하고 유용하다고 입증되면</target>
        </trans-unit>
        <trans-unit id="da1cdfc182e48225c270fc03ad75a523184e5e60" translate="yes" xml:space="preserve">
          <source>If you need to support multiple versions, you can pass this option multiple
times:</source>
          <target state="translated">여러 버전을 지원해야하는 경우이 옵션을 여러 번 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41fb10bf832524090b9ab05176d0ed5567a508f5" translate="yes" xml:space="preserve">
          <source>If you use</source>
          <target state="translated">당신이 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="1f258ec3d8c1f23bf2ee85b4c4f975edc8ab7056" translate="yes" xml:space="preserve">
          <source>If you want to add a package or edit the version of one you&amp;rsquo;re currently
using you have to do the following steps:</source>
          <target state="translated">패키지를 추가하거나 현재 사용중인 버전을 편집하려면 다음 단계를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="42556c926bfff7caa28393d8436e377cf553521d" translate="yes" xml:space="preserve">
          <source>Important bug fix. As an example, if you had</source>
          <target state="translated">중요한 버그 수정. 예를 들어,</target>
        </trans-unit>
        <trans-unit id="a4411a362d66ec72eda92feedf04202c588f34cd" translate="yes" xml:space="preserve">
          <source>In Python 3, if the package can&amp;rsquo;t be found you get a more explicit exception
pointing out which package (URL) that failed.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/87&quot;&gt;https://github.com/peterbe/hashin/issues/87&lt;/a&gt;</source>
          <target state="translated">Python 3에서 패키지를 찾을 수없는 경우 실패한 패키지 (URL)를 나타내는 더 명확한 예외가 발생합니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/87&quot;&gt;https://github.com/peterbe/hashin/issues/87를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4d31c09e1c0ae826fb020d5930b9d94e90294b8" translate="yes" xml:space="preserve">
          <source>Indentation in the requirements file is preserved.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/112&quot;&gt;https://github.com/peterbe/hashin/issues/112&lt;/a&gt; Thanks @techtonik</source>
          <target state="translated">요구 사항 파일의 들여 쓰기가 유지됩니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/112&quot;&gt;https://github.com/peterbe/hashin/issues/112&lt;/a&gt; 감사 @techtonik</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3d1d028394028ac12f46a6614655d419362341d1" translate="yes" xml:space="preserve">
          <source>Issue a warning for users of Python before version 2.7.9.</source>
          <target state="translated">버전 2.7.9 이전의 Python 사용자에게 경고를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="88fbfd41aa330d36087404b36a36607e88a8b44e" translate="yes" xml:space="preserve">
          <source>Last character a &lt;em&gt;single&lt;/em&gt; newline. Not two.</source>
          <target state="translated">마지막 문자는 &lt;em&gt;하나의&lt;/em&gt; 개행입니다. 두 개가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="968a20fc7f3402007f9fec47050b855db72f7dc1" translate="yes" xml:space="preserve">
          <source>Latest version is now figured out by looking at all version numbers
in the list of releases from the JSON payload. The pre releases are
skipped.</source>
          <target state="translated">이제 최신 버전은 JSON 페이로드의 릴리스 목록에서 모든 버전 번호를 확인하여 파악됩니다. 사전 릴리스는 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="a9f2b667d8a7e968e57efbac3b0079d087846a61" translate="yes" xml:space="preserve">
          <source>Local development</source>
          <target state="translated">지역 개발</target>
        </trans-unit>
        <trans-unit id="0d1929903a622704c67591d89a8a86b5ac293a43" translate="yes" xml:space="preserve">
          <source>Makes it possible to install</source>
          <target state="translated">설치 가능</target>
        </trans-unit>
        <trans-unit id="c2bd218fd61d64054188949cef9df0914ac31091" translate="yes" xml:space="preserve">
          <source>Match Python versions as</source>
          <target state="translated">Python 버전을 다음과 일치</target>
        </trans-unit>
        <trans-unit id="8a91def5c72f01b8383d5f4e6b27012311a84849" translate="yes" xml:space="preserve">
          <source>New flag</source>
          <target state="translated">새 플래그</target>
        </trans-unit>
        <trans-unit id="20212f55faa7489599706389e8a30c5be24ed05f" translate="yes" xml:space="preserve">
          <source>New parameter</source>
          <target state="translated">새로운 매개 변수</target>
        </trans-unit>
        <trans-unit id="f55c0747aac05f13ad0fd7d334482ddef04e4e2c" translate="yes" xml:space="preserve">
          <source>Now, to run it you can use the installed executable</source>
          <target state="translated">이제 실행하려면 설치된 실행 파일을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed0fe6ebb375d8d651206cf62b7dd2e5328d8795" translate="yes" xml:space="preserve">
          <source>Or with specific version, algorithm and certain Python versions:</source>
          <target state="translated">또는 특정 버전, 알고리즘 및 특정 Python 버전 :</target>
        </trans-unit>
        <trans-unit id="cac5a6e8dad8dfd2cb02dfb2a2e87d0779511c6c" translate="yes" xml:space="preserve">
          <source>Or you can be specific about exactly which version you want:</source>
          <target state="translated">또는 원하는 버전을 정확히 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49c895073837f5aa6f3721f1bd951809b7c3d59a" translate="yes" xml:space="preserve">
          <source>Order of hashes should not affect if a package in the requirements file
should be replaced or not.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/93&quot;&gt;https://github.com/peterbe/hashin/issues/93&lt;/a&gt;</source>
          <target state="translated">해시 순서는 요구 사항 파일의 패키지를 교체해야하는지 여부에 영향을주지 않습니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/93&quot;&gt;https://github.com/peterbe/hashin/issues/93를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa937828c934f389156bbeb9a45e32cd20000e66" translate="yes" xml:space="preserve">
          <source>PEP-0496 Environment Markers</source>
          <target state="translated">PEP-0496 환경 마커</target>
        </trans-unit>
        <trans-unit id="086aa052f7b9afc161b1cb955717534d3bb7f51d" translate="yes" xml:space="preserve">
          <source>Package matching is now case insensitive. E.g.</source>
          <target state="translated">패키지 일치는 이제 대소 문자를 구분하지 않습니다. 예</target>
        </trans-unit>
        <trans-unit id="c641e2fb25b41cd23e9f4b5db6353b226bc0e8a9" translate="yes" xml:space="preserve">
          <source>PackageErrors happening in CLI suppressed just the error message out on
stderr. No full traceback any more.</source>
          <target state="translated">CLI에서 발생하는 PackageErrors는 stderr에서 오류 메시지 만 표시하지 않습니다. 더 이상 완전한 추적이 없습니다.</target>
        </trans-unit>
        <trans-unit id="76e9b26fdab4b65ad371bbeb0407f076f17cbe7b" translate="yes" xml:space="preserve">
          <source>Paste-2.0.3-py34-none-any.whl</source>
          <target state="translated">붙여 넣기 -2.0.3-py34-none-any.whl</target>
        </trans-unit>
        <trans-unit id="d178b8273973f68320ffa40df4a0ec5ff8f61942" translate="yes" xml:space="preserve">
          <source>Possibly download the</source>
          <target state="translated">다운로드 가능</target>
        </trans-unit>
        <trans-unit id="6781656bdce0853a4e211366e4675f53effb9477" translate="yes" xml:space="preserve">
          <source>Requirements can use &lt;a href=&quot;https://www.python.org/dev/peps/pep-0496/&quot;&gt;PEP-0496&lt;/a&gt; style specifiers (e.g. like</source>
          <target state="translated">요구 사항은 &lt;a href=&quot;https://www.python.org/dev/peps/pep-0496/&quot;&gt;PEP-0496&lt;/a&gt; 스타일 지정자를 사용할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">운영</target>
        </trans-unit>
        <trans-unit id="2ed16138b6dc63c984e8b5df285152eba661a6a9" translate="yes" xml:space="preserve">
          <source>Run continuous integration tests with Python 3.6 too.</source>
          <target state="translated">Python 3.6에서도 지속적 통합 테스트를 실행하세요.</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="c1f42ff0b69db7b46ac73157bc7b4a406d002d7b" translate="yes" xml:space="preserve">
          <source>Running tests with test coverage</source>
          <target state="translated">테스트 커버리지로 테스트 실행</target>
        </trans-unit>
        <trans-unit id="f478c3f8ab9a3057fc28bf345862b638c9d77b0e" translate="yes" xml:space="preserve">
          <source>Simply run:</source>
          <target state="translated">간단히 실행 :</target>
        </trans-unit>
        <trans-unit id="04f989eb3f83876d89db16ac120496c760e03cd0" translate="yes" xml:space="preserve">
          <source>Some requirements have many releases built for different versions of Python and
different architectures. These hashes aren&amp;rsquo;t useful in some cases, if those
wheels don&amp;rsquo;t work with your project.</source>
          <target state="translated">일부 요구 사항에는 서로 다른 버전의 Python 및 서로 다른 아키텍처 용으로 빌드 된 많은 릴리스가 있습니다. 이러한 해시는 프로젝트에서 작동하지 않는 경우에 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2af33e3107e39d02dadabe53f639b6b7571d4e5" translate="yes" xml:space="preserve">
          <source>Support for &amp;ldquo;extras syntax&amp;rdquo;. E.g.</source>
          <target state="translated">&quot;추가 구문&quot;지원. 예</target>
        </trans-unit>
        <trans-unit id="257f422711239f588c8dad0a8e5c22ea68ba2485" translate="yes" xml:space="preserve">
          <source>Support for PyPI links that have a hash in the file URL.</source>
          <target state="translated">파일 URL에 해시가있는 PyPI 링크 지원.</target>
        </trans-unit>
        <trans-unit id="3b9d833129737ab952fea094acbe5ba27cd104f7" translate="yes" xml:space="preserve">
          <source>Support windows binaries packaged as a</source>
          <target state="translated">Windows 바이너리를</target>
        </trans-unit>
        <trans-unit id="868794e2d24e143ff2bcdca99b6d1e7b7e4a4abb" translate="yes" xml:space="preserve">
          <source>Suppose you don&amp;rsquo;t have a</source>
          <target state="translated">당신이 가지고 있지 않다고 가정하십시오</target>
        </trans-unit>
        <trans-unit id="ad426791bb007b6b822c0e89b1bd9d16d4f50b5c" translate="yes" xml:space="preserve">
          <source>Suppose you want to install</source>
          <target state="translated">설치를 원한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="ceed6f1acd8682f751971a63d8d857a9de39f912" translate="yes" xml:space="preserve">
          <source>Switch from</source>
          <target state="translated">다음에서 전환</target>
        </trans-unit>
        <trans-unit id="d5fc8d81c5f20dc96719d92c78a91113bd38514f" translate="yes" xml:space="preserve">
          <source>Testing no runs Python 2.6 and Python 3.3.</source>
          <target state="translated">테스트는 Python 2.6 및 Python 3.3을 실행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="fee38dc272fc628786974748a60555edf8635ebd" translate="yes" xml:space="preserve">
          <source>The requirements file and algorithm arguments are now keyword
arguments. Now, the second, third, nth positional argument are
additional arguments. Thanks @https://github.com/ahal</source>
          <target state="translated">요구 사항 파일 및 알고리즘 인수는 이제 키워드 인수입니다. 이제 두 번째, 세 번째, n 번째 위치 인수는 추가 인수입니다. 감사합니다 @https : //github.com/ahal</target>
        </trans-unit>
        <trans-unit id="47e96e102d51e767a331000e005824af3b1ee46d" translate="yes" xml:space="preserve">
          <source>The whole point of hashing is that you &lt;strong&gt;vet the packages&lt;/strong&gt; that you use
on your laptop and that they haven&amp;rsquo;t been tampered with. Then you
can confidently install them on a server.</source>
          <target state="translated">해싱의 요점은 랩톱에서 사용 &lt;strong&gt;하는 패키지&lt;/strong&gt; 를 확인하고 변조되지 않았 음을 확인하는 것입니다. 그런 다음 자신있게 서버에 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="629b89dd65c5df86a01fe171c32e7ad90eb0604d" translate="yes" xml:space="preserve">
          <source>There are some use cases, when you maybe don&amp;rsquo;t want to edit your</source>
          <target state="translated">몇 가지 사용 사례가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe2c54f3f84bf26b264e223aaa8623542d9b79a2" translate="yes" xml:space="preserve">
          <source>This is something you only do or ever need in a development
environment. Ie. your laptop:</source>
          <target state="translated">이것은 개발 환경에서만 수행하거나 필요한 작업입니다. 즉. 노트북 :</target>
        </trans-unit>
        <trans-unit id="fa93738c7b1ba57df6ac7f583f8e35182f10e0ae" translate="yes" xml:space="preserve">
          <source>This program is a &amp;ldquo;fork&amp;rdquo; of &lt;a href=&quot;https://pypi.python.org/pypi/peepin&quot;&gt;https://pypi.python.org/pypi/peepin&lt;/a&gt;</source>
          <target state="translated">이 프로그램은 &lt;a href=&quot;https://pypi.python.org/pypi/peepin&quot;&gt;https://pypi.python.org/pypi/peepin&lt;/a&gt; 의 &quot;포크&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="8d34bfb79e772254a3d7ef779fd75381914d7e5e" translate="yes" xml:space="preserve">
          <source>This script does all those things.
Hackishly wonderfully so.</source>
          <target state="translated">이 스크립트는 이러한 모든 작업을 수행합니다. 놀랍게도 그렇게.</target>
        </trans-unit>
        <trans-unit id="6d459b2c85c1ac96d2bb4cf5de7f7b3f17a54426" translate="yes" xml:space="preserve">
          <source>This tool downloads from PyPI (over HTTPS) and runs</source>
          <target state="translated">이 도구는 PyPI (HTTPS를 통해)에서 다운로드하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6ef87ebbe6589c5abc645bf93841e88eac4c0a81" translate="yes" xml:space="preserve">
          <source>This will print out:</source>
          <target state="translated">다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="fba00e7368f9f164c975a040945ebb37ebb4c614" translate="yes" xml:space="preserve">
          <source>To avoid having to install</source>
          <target state="translated">설치하지 않으려면</target>
        </trans-unit>
        <trans-unit id="c8c031d2029bc417d37bd4dd236b240bd6739982" translate="yes" xml:space="preserve">
          <source>To run the tests with test coverage, with</source>
          <target state="translated">테스트 커버리지로 테스트를 실행하려면</target>
        </trans-unit>
        <trans-unit id="5d50442a2c9ca1f3c681047c9083f367d587507a" translate="yes" xml:space="preserve">
          <source>Two new dependencies for</source>
          <target state="translated">에 대한 두 가지 새로운 종속성</target>
        </trans-unit>
        <trans-unit id="23674a7983484afacacda451135fafd399a9db45" translate="yes" xml:space="preserve">
          <source>Use of underscore or hyphens in package names is corrected
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/116&quot;&gt;https://github.com/peterbe/hashin/issues/116&lt;/a&gt; Thanks @caphrim007</source>
          <target state="translated">패키지 이름에 밑줄 또는 하이픈 사용이 수정 됨 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/116&quot;&gt;https://github.com/peterbe/hashin/issues/116 참조&lt;/a&gt; 감사합니다 @ caphrim007</target>
        </trans-unit>
        <trans-unit id="ed980c001e0ca1cd7c01f1f0ca505f52ef0ceed3" translate="yes" xml:space="preserve">
          <source>Using as a Python library</source>
          <target state="translated">Python 라이브러리로 사용</target>
        </trans-unit>
        <trans-unit id="6974ab729b6242600700a81b1ec6d4d1a48c0a94" translate="yes" xml:space="preserve">
          <source>Version History</source>
          <target state="translated">버전 기록</target>
        </trans-unit>
        <trans-unit id="f7ee732871c7b8b43fe2973d514b7807acd539cd" translate="yes" xml:space="preserve">
          <source>When using</source>
          <target state="translated">사용할 때</target>
        </trans-unit>
        <trans-unit id="245dbfbbee9714cd7071a25c2641fadfa06bfed6" translate="yes" xml:space="preserve">
          <source>When writing down hashes, they are now done in a lexigraphically ordered
way. This makes the writes to the requirements file more predictable.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/105&quot;&gt;https://github.com/peterbe/hashin/issues/105&lt;/a&gt;</source>
          <target state="translated">해시를 기록 할 때 이제 사전 순서대로 처리됩니다. 이렇게하면 요구 사항 파일에 대한 쓰기가 더 예측 가능해집니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/105&quot;&gt;https://github.com/peterbe/hashin/issues/105를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc4bcf9de739295968f25374fa0b9b82393e8d47" translate="yes" xml:space="preserve">
          <source>When you use</source>
          <target state="translated">사용할 때</target>
        </trans-unit>
        <trans-unit id="fa7e465f2127773a606265284546668016b041f0" translate="yes" xml:space="preserve">
          <source>Which will download the latest version tarball (and wheel) and
calculate their pip hash and edit your</source>
          <target state="translated">최신 버전의 tarball (및 휠)을 다운로드하고 pip 해시를 계산하고</target>
        </trans-unit>
        <trans-unit id="eec67622d4720d417f32ca31944bba25875f2a4d" translate="yes" xml:space="preserve">
          <source>Would result in a printout on the command line:</source>
          <target state="translated">명령 줄에 출력이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="76c1503ccc7f21f40e8057cdd2430a439912813f" translate="yes" xml:space="preserve">
          <source>You can also specify more than one package at a time:</source>
          <target state="translated">한 번에 둘 이상의 패키지를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac03cfc5262cc753bf9b789383ad5c0794cd4cc" translate="yes" xml:space="preserve">
          <source>You can now pass PEP-0496 Environment Markers together with the package
name, and they get passed into the</source>
          <target state="translated">이제 패키지 이름과 함께 PEP-0496 환경 마커를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afd22a2f63d1fbb5fbf15874a2241e2167c7e1cb" translate="yes" xml:space="preserve">
          <source>You might not have time to go through the lines one by one
but you should be aware that the vetting process is your
responsibility.</source>
          <target state="translated">라인을 하나씩 살펴볼 시간이 없을 수도 있지만 심사 과정은 귀하의 책임이라는 것을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0dc6c054c3061a3b2a8dcc8cd9f2c3fb455db3e0" translate="yes" xml:space="preserve">
          <source>You should check that the packages that are downloaded
are sane and not tampered with. The way you do that is to run</source>
          <target state="translated">다운로드 한 패키지가 정상이고 변조되지 않았는지 확인해야합니다. 그렇게하는 방법은</target>
        </trans-unit>
        <trans-unit id="a4bb7706ca87791004fe7056cdcc27c614392a42" translate="yes" xml:space="preserve">
          <source>additionally. Solves
problem with installing packages with files like</source>
          <target state="translated">추가로. 다음과 같은 파일로 패키지를 설치할 때 발생하는 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="dd13148caa523e1b817b47f88b056a13df148c43" translate="yes" xml:space="preserve">
          <source>already in your</source>
          <target state="translated">이미 당신의</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="c13552b99acf8cec4603734359ca8270cf2e0e8c" translate="yes" xml:space="preserve">
          <source>and do things
like:</source>
          <target state="translated">다음과 같은 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="56039375f48f5470e755d453c39c95b73c47441e" translate="yes" xml:space="preserve">
          <source>and forget the</source>
          <target state="translated">그리고 잊어</target>
        </trans-unit>
        <trans-unit id="19b52830bea67c7f573facfbc88de0b6b7971f73" translate="yes" xml:space="preserve">
          <source>and parsing requirements file it could be fooled
by comments that look like package specs (e.g</source>
          <target state="translated">요구 사항 파일을 구문 분석하면 패키지 사양과 같은 주석 (예 :</target>
        </trans-unit>
        <trans-unit id="ee1fd9a94854239779e9c82318bd108b75128d82" translate="yes" xml:space="preserve">
          <source>and rely on private
APIs.
&lt;a href=&quot;https://github.com/peterbe/hashin/pull/59&quot;&gt;Thanks @di!&lt;/a&gt;
This also means you can no longer install</source>
          <target state="translated">비공개 API에 의존합니다. &lt;a href=&quot;https://github.com/peterbe/hashin/pull/59&quot;&gt;감사합니다 @di! &lt;/a&gt; 이것은 또한 더 이상 설치할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2d47dca6dc071f7ecbce487ed5f80062fb5fccbf" translate="yes" xml:space="preserve">
          <source>argument to show the diff, so you
can preview the changes to your</source>
          <target state="translated">비교를 표시하는 인수이므로 변경 사항을 미리 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbded1c42febb83a50d3f50aa4882a2769f9ce9d" translate="yes" xml:space="preserve">
          <source>argument:</source>
          <target state="translated">논의:</target>
        </trans-unit>
        <trans-unit id="6086dbbe65c5d690ba1138b84ee56211d853e88c" translate="yes" xml:space="preserve">
          <source>as normal but with the</source>
          <target state="translated">정상적으로하지만</target>
        </trans-unit>
        <trans-unit id="1192ff0fa255f59ad36ef2fdcc5e539a0ed08a60" translate="yes" xml:space="preserve">
          <source>as of version 8.</source>
          <target state="translated">버전 8 기준.</target>
        </trans-unit>
        <trans-unit id="33a74591a1a7e5fe6d9bf7029204fdf7d4da2bcc" translate="yes" xml:space="preserve">
          <source>but
make sure your version of</source>
          <target state="translated">그러나 귀하의 버전을 확인하십시오</target>
        </trans-unit>
        <trans-unit id="5198ab12d7acf7831299495ecb7bb59a12a7c727" translate="yes" xml:space="preserve">
          <source>can filter on the Python
version to skip these extraneous hashes.</source>
          <target state="translated">이러한 불필요한 해시를 건너 뛰도록 Python 버전을 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee8bb33337494368efcd3955a27100e757f10629" translate="yes" xml:space="preserve">
          <source>cffi</source>
          <target state="translated">cffi</target>
        </trans-unit>
        <trans-unit id="06692a63f0e47da6406aa2795874daf7d0448932" translate="yes" xml:space="preserve">
          <source>cffi==1.5.2; python_version &amp;gt;= '3.4'</source>
          <target state="translated">cffi == 1.5.2; python_version&amp;gt; = '3.4'</target>
        </trans-unit>
        <trans-unit id="5df19f31dc100e5bb34a0a4248c98f21970fd204" translate="yes" xml:space="preserve">
          <source>cp3.5</source>
          <target state="translated">cp3.5</target>
        </trans-unit>
        <trans-unit id="97c11a501d49785bb951fe8e98a69c1329076f85" translate="yes" xml:space="preserve">
          <source>django-redis==a.b.c</source>
          <target state="translated">django-redis == abc</target>
        </trans-unit>
        <trans-unit id="1417bef85bf9c69fd0671e009b0c0898135898d0" translate="yes" xml:space="preserve">
          <source>doesn&amp;rsquo;t
parse the specifiers themselves and will take anything after the
semicolon. If you are using</source>
          <target state="translated">지정자 자체를 구문 분석하지 않으며 세미콜론 다음의 항목을 취합니다. 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">파일</target>
        </trans-unit>
        <trans-unit id="cc3619f906ea66187f22e4621d58b78176522c06" translate="yes" xml:space="preserve">
          <source>file and add</source>
          <target state="translated">파일 및 추가</target>
        </trans-unit>
        <trans-unit id="e1ae90fc2f86d79825a96562add0919aed98dd02" translate="yes" xml:space="preserve">
          <source>file.</source>
          <target state="translated">파일.</target>
        </trans-unit>
        <trans-unit id="6d0f5cb30e6b33b41575e73a32959f8980508cbb" translate="yes" xml:space="preserve">
          <source>file.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/70&quot;&gt;https://github.com/peterbe/hashin/issues/70&lt;/a&gt;</source>
          <target state="translated">파일. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/70&quot;&gt;https://github.com/peterbe/hashin/issues/70를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6eed3f715d737e3b4cd7774e6aedb877a16dc8b4" translate="yes" xml:space="preserve">
          <source>file.
Thanks @meejah</source>
          <target state="translated">파일. 감사합니다 @meejah</target>
        </trans-unit>
        <trans-unit id="d0998110d4f271571ea799f05b153504a56056c0" translate="yes" xml:space="preserve">
          <source>file:</source>
          <target state="translated">파일:</target>
        </trans-unit>
        <trans-unit id="b81e137044e222bb257e920d7e107e3d6ea7067a" translate="yes" xml:space="preserve">
          <source>flag. When you do that
it will print where it downloaded the relevant files and those
files are not deleted. For example:</source>
          <target state="translated">깃발. 그렇게하면 관련 파일을 다운로드 한 위치가 인쇄되며 해당 파일은 삭제되지 않습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="f6bfaeae02ade7e4840719847b7aaf3a7d757fa8" translate="yes" xml:space="preserve">
          <source>futures</source>
          <target state="translated">선물</target>
        </trans-unit>
        <trans-unit id="7f570c4aa9c1751513e3385f3c80533e6de6306e" translate="yes" xml:space="preserve">
          <source>has been put directly into</source>
          <target state="translated">직접 투입되었습니다</target>
        </trans-unit>
        <trans-unit id="8a09930b502c7e5e688978e56ed040a2cb7dc4d8" translate="yes" xml:space="preserve">
          <source>hashes are used, but this can be overridden using the</source>
          <target state="translated">해시가 사용되지만 이것은</target>
        </trans-unit>
        <trans-unit id="b6712debeb2c258ee712825dbaa2d0fffb0b235c" translate="yes" xml:space="preserve">
          <source>hashin</source>
          <target state="translated">해신</target>
        </trans-unit>
        <trans-unit id="4511b360fd3983cb61e976acb6614a60b5d259d5" translate="yes" xml:space="preserve">
          <source>hashin &quot;requests[security]&quot;</source>
          <target state="translated">hashin &quot;요청 [보안]&quot;</target>
        </trans-unit>
        <trans-unit id="21bcca423df927be4e20e25208a01ca42dfc66b1" translate="yes" xml:space="preserve">
          <source>hashin --version</source>
          <target state="translated">hashin-버전</target>
        </trans-unit>
        <trans-unit id="de4b11d18a5d4e9fb5a8401d75b210c98dbc983b" translate="yes" xml:space="preserve">
          <source>hashin dJaNgO</source>
          <target state="translated">hashin dJaNgO</target>
        </trans-unit>
        <trans-unit id="c9949c773d2950121c802398e7402a27dfaa3c12" translate="yes" xml:space="preserve">
          <source>if files don&amp;rsquo;t need to be
downloaded. See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/73&quot;&gt;https://github.com/peterbe/hashin/issues/73&lt;/a&gt;</source>
          <target state="translated">파일을 다운로드 할 필요가없는 경우. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/73&quot;&gt;https://github.com/peterbe/hashin/issues/73를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c6753af66c2c1670168a41bedc7e9804f0ef8d" translate="yes" xml:space="preserve">
          <source>if you&amp;rsquo;re trying to add
a package that &lt;em&gt;only&lt;/em&gt; has pre-releases.</source>
          <target state="translated">시험판 &lt;em&gt;만&lt;/em&gt; 있는 패키지를 추가하려는 경우 .</target>
        </trans-unit>
        <trans-unit id="583347708b04369f4a9687805bcc199ef8993a73" translate="yes" xml:space="preserve">
          <source>is built on a Python 3.</source>
          <target state="translated">Python 3을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="41a52b891619e7b04869d26b42c07f740a72fe6c" translate="yes" xml:space="preserve">
          <source>is used in</source>
          <target state="translated">사용됩니다</target>
        </trans-unit>
        <trans-unit id="57104e088ac9548ed9fa4814b5c689e4dd5250a1" translate="yes" xml:space="preserve">
          <source>it will install</source>
          <target state="translated">그것은 설치할 것이다</target>
        </trans-unit>
        <trans-unit id="f136a76efc5299dfd21988faa37ed24e23948517" translate="yes" xml:space="preserve">
          <source>it would touch the line with</source>
          <target state="translated">그것은 선에 닿을 것입니다</target>
        </trans-unit>
        <trans-unit id="146d57c930cf81ba8d818c0e8c15c94b8da74ecb" translate="yes" xml:space="preserve">
          <source>just to test it or debug a feature
you can simply just run it like this:</source>
          <target state="translated">테스트하거나 기능을 디버그하려면 다음과 같이 실행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="96562e929a94a074b8f651077e59af5d1be7fc7c" translate="yes" xml:space="preserve">
          <source>nltk</source>
          <target state="translated">nltk</target>
        </trans-unit>
        <trans-unit id="ffd446d5c5f4a57cb7e7dd98f6e992b680f232db" translate="yes" xml:space="preserve">
          <source>on Python 2.6 and
Python</source>
          <target state="translated">Python 2.6 및 Python</target>
        </trans-unit>
        <trans-unit id="c244f49d5d77df1e4cff13a1d6ae80a3f0e2de77" translate="yes" xml:space="preserve">
          <source>on Windows.
&lt;a href=&quot;https://github.com/peterbe/hashin/pull/72&quot;&gt;Thanks @chrispbailey!&lt;/a&gt;</source>
          <target state="translated">Windows에서. &lt;a href=&quot;https://github.com/peterbe/hashin/pull/72&quot;&gt;감사합니다 @chrispbailey!&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bebaa04c557f8e8fdfd742a19151d559a865f21c" translate="yes" xml:space="preserve">
          <source>on the command line you can do
in running Python too. For example:</source>
          <target state="translated">명령 줄에서 Python을 실행할 수도 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="4aab6f207534479e63954fecc4364481b57b0dfd" translate="yes" xml:space="preserve">
          <source>on the downloaded files.</source>
          <target state="translated">다운로드 한 파일에.</target>
        </trans-unit>
        <trans-unit id="7d97913c3eec77c29ce267768ed8d6cea0c8ad8e" translate="yes" xml:space="preserve">
          <source>option feature in version 0.14.3.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/108&quot;&gt;https://github.com/peterbe/hashin/issues/108&lt;/a&gt;</source>
          <target state="translated">버전 0.14.3의 옵션 기능. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/108&quot;&gt;https://github.com/peterbe/hashin/issues/108를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc43695f5295bc5aa1b42c813c85825b5ac4b05b" translate="yes" xml:space="preserve">
          <source>option:</source>
          <target state="translated">선택권:</target>
        </trans-unit>
        <trans-unit id="36c89e543947887319ea9b626f02b5e219085c3a" translate="yes" xml:space="preserve">
          <source>package offers wheels built for many versions of
CPython from 2.6 to 3.5. To select only one of them, you can use the</source>
          <target state="translated">패키지는 2.6에서 3.5까지 다양한 버전의 CPython 용으로 제작 된 휠을 제공합니다. 그중 하나만 선택하려면</target>
        </trans-unit>
        <trans-unit id="8f3d75921992f46611714588e6ec00450ed9dcb6" translate="yes" xml:space="preserve">
          <source>packaging</source>
          <target state="translated">포장</target>
        </trans-unit>
        <trans-unit id="4f47a55d5a83dd3c384518fbeb90e1ab50006306" translate="yes" xml:space="preserve">
          <source>peep</source>
          <target state="translated">출현</target>
        </trans-unit>
        <trans-unit id="7246d25df2d4a9973743315b6303ce909f140a73" translate="yes" xml:space="preserve">
          <source>peepin</source>
          <target state="translated">엿보다</target>
        </trans-unit>
        <trans-unit id="7d8acecfe5baa031fcfcb665935a7211ac935996" translate="yes" xml:space="preserve">
          <source>pep8 cleanups.</source>
          <target state="translated">pep8 정리.</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="f4f1837f57712995c65ae1f8f6d82942a8dd91eb" translate="yes" xml:space="preserve">
          <source>pip hash</source>
          <target state="translated">핍 해시</target>
        </trans-unit>
        <trans-unit id="aec8e96f7b530f2d31abdacb382d164c2cc37517" translate="yes" xml:space="preserve">
          <source>pip hash downloadedpackage-1.2.3.tgz</source>
          <target state="translated">pip 해시 다운로드 됨 package-1.2.3.tgz</target>
        </trans-unit>
        <trans-unit id="7c49cf616f5925c51698116e2ec17723baac4332" translate="yes" xml:space="preserve">
          <source>pip hash downloadedpackage-1.2.3.whl</source>
          <target state="translated">pip 해시 다운로드 됨 package-1.2.3.whl</target>
        </trans-unit>
        <trans-unit id="7e4bca28d74028c53784b24aeece222fd4d2b8b8" translate="yes" xml:space="preserve">
          <source>pip install &quot;.[dev]&quot;</source>
          <target state="translated">pip 설치 &quot;. [dev]&quot;</target>
        </trans-unit>
        <trans-unit id="b06fdcb73f3145fdc92ab6aa2d1d4da6e396a3da" translate="yes" xml:space="preserve">
          <source>pip install --require-hashes-r ...</source>
          <target state="translated">pip 설치 --require-hashes-r ...</target>
        </trans-unit>
        <trans-unit id="43df0d0c0bc0f066a1d2473a0abe893f255b67f8" translate="yes" xml:space="preserve">
          <source>pip install -e &amp;ldquo;.[dev]&amp;rdquo;</source>
          <target state="translated">pip install -e&amp;ldquo;. [dev]&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1dd564e626e18d7adfd3cffb4d0efe66cab1e4bc" translate="yes" xml:space="preserve">
          <source>pip-api</source>
          <target state="translated">pip-api</target>
        </trans-unit>
        <trans-unit id="b02568ef8ec307fb2fbfe4cccd9a70fe9f551fe7" translate="yes" xml:space="preserve">
          <source>py2.py3</source>
          <target state="translated">py2.py3</target>
        </trans-unit>
        <trans-unit id="4cfeb3acc864001ba7ef3cc5247481343328243e" translate="yes" xml:space="preserve">
          <source>py3</source>
          <target state="translated">py3</target>
        </trans-unit>
        <trans-unit id="cba819d350724c171e683b4efe84d3d0fffd3073" translate="yes" xml:space="preserve">
          <source>py3.5</source>
          <target state="translated">py3.5</target>
        </trans-unit>
        <trans-unit id="918de2b7e7bd43df582f39e3686309306dc6bd02" translate="yes" xml:space="preserve">
          <source>pypi.org/pypi/&amp;lt;package&amp;gt;/json</source>
          <target state="translated">pypi.org/pypi/ &amp;lt;패키지&amp;gt; / json</target>
        </trans-unit>
        <trans-unit id="f209027658c7f0a8be135539794b9bb5b5b28df3" translate="yes" xml:space="preserve">
          <source>pypi.python.org/pypi/&amp;lt;package&amp;gt;/json</source>
          <target state="translated">pypi.python.org/pypi/ &amp;lt;패키지&amp;gt; / json</target>
        </trans-unit>
        <trans-unit id="0eaa389e1fdb3a1917c0f987514bd561be5718ee" translate="yes" xml:space="preserve">
          <source>pytest</source>
          <target state="translated">pytest</target>
        </trans-unit>
        <trans-unit id="634ab9bfbfa156a17ee99a7fbe1b5e7cb479a3bb" translate="yes" xml:space="preserve">
          <source>pytest-selenium</source>
          <target state="translated">pytest- 셀레늄</target>
        </trans-unit>
        <trans-unit id="bfd6aabfd4add6663463249af8e9c77a4823ca6f" translate="yes" xml:space="preserve">
          <source>pytest-selenium==...</source>
          <target state="translated">pytest-selenium == ...</target>
        </trans-unit>
        <trans-unit id="9c66301e9c21489b2a36fbb4478325e0ccadbc42" translate="yes" xml:space="preserve">
          <source>python_version</source>
          <target state="translated">python_version</target>
        </trans-unit>
        <trans-unit id="3922989ed6fb6c5fb18d0e1f852853b24dc8967b" translate="yes" xml:space="preserve">
          <source>py{major}{minor}</source>
          <target state="translated">py {major} {minor}</target>
        </trans-unit>
        <trans-unit id="351f60e84938091ec656fb698a8cbe9b13eabdad" translate="yes" xml:space="preserve">
          <source>redis==x.y.z</source>
          <target state="translated">redis == xyz</target>
        </trans-unit>
        <trans-unit id="ddc45d68d6653afa65c711fc4ba90aabf606d426" translate="yes" xml:space="preserve">
          <source>release is always automatically included.</source>
          <target state="translated">릴리스는 항상 자동으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="19359a61ae2446b51b549167b014da2fcf265768" translate="yes" xml:space="preserve">
          <source>requirements.txt</source>
          <target state="translated">requirements.txt</target>
        </trans-unit>
        <trans-unit id="e1478fe553a9dff47447dca08e802f47fbc58bf4" translate="yes" xml:space="preserve">
          <source>right away. You can use the</source>
          <target state="translated">곧. 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="16ac3567b4296fe2f0437ed8e253746578047e2a" translate="yes" xml:space="preserve">
          <source>right there in the same
directory you can specify</source>
          <target state="translated">지정할 수있는 동일한 디렉토리에</target>
        </trans-unit>
        <trans-unit id="cb9a3f1e1cf922cd126664cc4036f2a6335aab53" translate="yes" xml:space="preserve">
          <source>run something like
this:</source>
          <target state="translated">다음과 같이 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8eec7bc461808e0b8a28783d0bec1a3a22eb0821" translate="yes" xml:space="preserve">
          <source>security</source>
          <target state="translated">보안</target>
        </trans-unit>
        <trans-unit id="ad13bf13ccd41c8fda0836afd8b5a21926e88fd5" translate="yes" xml:space="preserve">
          <source>selenium==x.y.z</source>
          <target state="translated">셀레늄 == xyz</target>
        </trans-unit>
        <trans-unit id="b310da45b1ebf444106a41b7832ab2fbe25dab41" translate="yes" xml:space="preserve">
          <source>sha256</source>
          <target state="translated">sha256</target>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">출처</target>
        </trans-unit>
        <trans-unit id="cbcbe46084f65e236884cc6e9855d5767ce177d9" translate="yes" xml:space="preserve">
          <source>therapist</source>
          <target state="translated">치료사</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="f38787f8c26961bfa51cc9160273f01d861b7711" translate="yes" xml:space="preserve">
          <source>to get the hash.</source>
          <target state="translated">해시를 얻으려면.</target>
        </trans-unit>
        <trans-unit id="408e6888afe321e63738c19183b18c3c4eafe87b" translate="yes" xml:space="preserve">
          <source>to see what version of hashin is
installed.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/41&quot;&gt;https://github.com/peterbe/hashin/issues/41&lt;/a&gt;</source>
          <target state="translated">설치된 hashin의 버전을 확인합니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/41&quot;&gt;https://github.com/peterbe/hashin/issues/41를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b47f0da3aa6e0a239f5e94e0877b31f25e13bf8a" translate="yes" xml:space="preserve">
          <source>too.</source>
          <target state="translated">너무.</target>
        </trans-unit>
        <trans-unit id="7bdf31978c0210720b3420242d2f1d74927c098c" translate="yes" xml:space="preserve">
          <source>tox</source>
          <target state="translated">독극물</target>
        </trans-unit>
        <trans-unit id="aefcd29680b9de55648fbda6a2fcdf817d285afb" translate="yes" xml:space="preserve">
          <source>tox -e lint</source>
          <target state="translated">tox -e 보풀</target>
        </trans-unit>
        <trans-unit id="31cfce240576da939f87d13364cd8c68465d39e9" translate="yes" xml:space="preserve">
          <source>was
already in the requirements file.</source>
          <target state="translated">이미 요구 사항 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="e740b5e404d93e7577c9562661089bc55917a102" translate="yes" xml:space="preserve">
          <source>was a companion to the program</source>
          <target state="translated">프로그램의 동반자</target>
        </trans-unit>
        <trans-unit id="30603fa9e0f620c305cd627ab0ff138a960c48bd" translate="yes" xml:space="preserve">
          <source>when</source>
          <target state="translated">언제</target>
        </trans-unit>
        <trans-unit id="d5b086028114b0e2c8dd40476dbcd73b9209c06e" translate="yes" xml:space="preserve">
          <source>when specifying your
requirements file, instead of complaining, it corrects the intentions.
See &lt;a href=&quot;https://github.com/peterbe/hashin/issues/104&quot;&gt;https://github.com/peterbe/hashin/issues/104&lt;/a&gt;</source>
          <target state="translated">요구 사항 파일을 지정할 때 불평하는 대신 의도를 수정합니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/issues/104&quot;&gt;https://github.com/peterbe/hashin/issues/104를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f05523722b22c33d677e4857fbc52a80a68eb660" translate="yes" xml:space="preserve">
          <source>which allows to override the default which
is</source>
          <target state="translated">기본값을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9233e17ebd5fae4b75a2221ffed5517a0d71bc2" translate="yes" xml:space="preserve">
          <source>which also means the sha256 hash is part
of the JSON payload immediately instead of having to download and run</source>
          <target state="translated">이는 sha256 해시가 다운로드하여 실행하는 대신 즉시 JSON 페이로드의 일부임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c0d8a2623f748cf71ae51689d4a45f7dd83d10bf" translate="yes" xml:space="preserve">
          <source>which prints a diff of what it &lt;em&gt;would&lt;/em&gt;
do to your requirements file. See &lt;a href=&quot;https://github.com/peterbe/hashin/pull/78&quot;&gt;https://github.com/peterbe/hashin/pull/78&lt;/a&gt;</source>
          <target state="translated">요구 사항 파일에 대해 수행 &lt;em&gt;할&lt;/em&gt; 작업 의 차이를 인쇄 합니다. 참조 &lt;a href=&quot;https://github.com/peterbe/hashin/pull/78&quot;&gt;https://github.com/peterbe/hashin/pull/78를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d096aa32d75de7c9473812cde5ab78a9bbe15273" translate="yes" xml:space="preserve">
          <source>which will result it something like this in the</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a5048fc1782f896c1d0c1dc731198de4465cb7f" translate="yes" xml:space="preserve">
          <source>which you can use
to run the full test suites (plus linting) in different Python environments:</source>
          <target state="translated">다른 Python 환경에서 전체 테스트 스위트 (린팅 포함)를 실행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7caf8dc6f76209242faba8c82a07bca8f049bc29" translate="yes" xml:space="preserve">
          <source>will expand these Python versions to a full list of identifers that
could be found on PyPI. For example,</source>
          <target state="translated">이 Python 버전을 PyPI에서 찾을 수있는 전체 식별자 목록으로 확장합니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="96cd7e4aa36a6f144a52277dc1287dc2ad72413e" translate="yes" xml:space="preserve">
          <source>will expand to match any of</source>
          <target state="translated">다음 중 하나와 일치하도록 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="b80f9054e28f2f4098e8be234a833b1eb7892ade" translate="yes" xml:space="preserve">
          <source>will use
this as a fallback in the case a suitable wheel cannot be found.</source>
          <target state="translated">적절한 휠을 찾을 수없는 경우이를 대체 수단으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="909b609a7db229db542b83d19a436217ca757198" translate="yes" xml:space="preserve">
          <source>with hashes so you can
install with</source>
          <target state="translated">해시로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d467b54761ab71f88b6a2b6a5147c709a39fb9c0" translate="yes" xml:space="preserve">
          <source>work as a library. Thanks @jayfk !</source>
          <target state="translated">도서관으로 일하십시오. 감사합니다 @jayfk!</target>
        </trans-unit>
        <trans-unit id="f93d1cb2dc8bf410a27a939e1c926139e3e4d548" translate="yes" xml:space="preserve">
          <source>you will still need to
pass appropriate options if you don&amp;rsquo;t want every available hash.</source>
          <target state="translated">사용 가능한 모든 해시를 원하지 않는 경우에도 적절한 옵션을 전달해야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
