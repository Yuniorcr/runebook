<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/bdateutil/">
    <body>
      <group id="bdateutil">
        <trans-unit id="c6a2db76feb84be87491cc2c9962f2264c4ded96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;Pull Requests&lt;/a&gt; are always welcome.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;이슈&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;풀 리퀘스트&lt;/a&gt; 는 언제나 환영합니다.</target>
        </trans-unit>
        <trans-unit id="1be273a0f8002b29bf6f4f31ce1e1cfd2612e163" translate="yes" xml:space="preserve">
          <source>A new function &lt;code&gt;isbday&lt;/code&gt; which returns &lt;code&gt;True&lt;/code&gt; if the argument
passed to it falls on a business day and &lt;code&gt;False&lt;/code&gt; if it is a weekend or
holiday. Option keyword argument &lt;code&gt;holidays&lt;/code&gt; adds the ability to take
into account a specific set of holidays.</source>
          <target state="translated">인수가 업무 일에 해당하면 &lt;code&gt;True&lt;/code&gt; 를 반환 하고 주말이나 공휴일이면 &lt;code&gt;False&lt;/code&gt; 를 반환 하는 새 함수 &lt;code&gt;isbday&lt;/code&gt; 입니다 . 옵션 키워드 인수 &lt;code&gt;holidays&lt;/code&gt; 은 특정 휴일 집합을 고려하는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3aecf00c9ac3214c61cb9cf72de8cb19f502b130" translate="yes" xml:space="preserve">
          <source>A new, optional, keyword argument &lt;code&gt;bdays&lt;/code&gt; is available when using
relativedelta to add or remove time to a datetime object.</source>
          <target state="translated">relativedelta를 사용하여 datetime 개체에 시간을 추가하거나 제거 할 때 새로운 선택적 키워드 인수 &lt;code&gt;bdays&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d52f769f98c104490db3f5b36e626ac9b452174" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.</source>
          <target state="translated">python-dateutil에 영업일 논리 및 향상된 데이터 유형 유연성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c952082357224df8dfe4780645521bf97219589b" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.
100% backwards compatible with python-dateutil, simply replace &lt;code&gt;dateutil&lt;/code&gt;
imports with &lt;code&gt;bdateutil&lt;/code&gt;.</source>
          <target state="translated">python-dateutil에 영업일 논리 및 향상된 데이터 유형 유연성을 추가합니다. python-dateutil과 100 % 역 호환되며 &lt;code&gt;dateutil&lt;/code&gt; imports를 &lt;code&gt;bdateutil&lt;/code&gt; 로 바꾸면 됩니다.</target>
        </trans-unit>
        <trans-unit id="b4eda2fbedb81256ca8293a03548ea21f9fcbf05" translate="yes" xml:space="preserve">
          <source>Another new, optional, keyword argument &lt;code&gt;holidays&lt;/code&gt; is available when
using relativedelta to support the &lt;code&gt;bdays&lt;/code&gt; feature. Without holidays
business days are only calculated using weekdays. By passing a list of
holidays a more accurate and useful business day calculation can be
performed. The Python package &lt;code&gt;holidays.py&lt;/code&gt; is installed as a
requirement with bdateutil and that is the prefered way to generate
holidays.</source>
          <target state="translated">&lt;code&gt;bdays&lt;/code&gt; 기능 을 지원하기 위해 relativedelta를 사용할 때 또 다른 새로운 선택적 키워드 인수 &lt;code&gt;holidays&lt;/code&gt; 를 사용할 수 있습니다. 공휴일이없는 영업일은 평일 만 사용하여 계산됩니다. 휴일 목록을 전달하면 더 정확하고 유용한 영업일 계산을 수행 할 수 있습니다. 파이썬 패키지 &lt;code&gt;holidays.py&lt;/code&gt; 은 bdateutil와 요구 사항으로 설치되고 해당 공휴일을 생성하는 선호하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="e276e3de7d758cf4c9cba9cadf6c02d820098425" translate="yes" xml:space="preserve">
          <source>Code and documentation are available according to the MIT License
(see &lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt;).</source>
          <target state="translated">MIT 라이선스에 따라 코드와 문서를 사용할 수 있습니다 ( &lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">적용 범위</target>
        </trans-unit>
        <trans-unit id="3b2fd4ec2592a60a39c5a925470fa44f8d46d6aa" translate="yes" xml:space="preserve">
          <source>Development Version</source>
          <target state="translated">개발 버전</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="7efdb52575026e30170fcb12e99298e7a5bb425e" translate="yes" xml:space="preserve">
          <source>If the above fails, please use easy_install instead:</source>
          <target state="translated">위의 방법이 실패하면 easy_install을 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ff653d773e8dd454b8236149f3ea5869cd555830" translate="yes" xml:space="preserve">
          <source>Import shortcuts are available that make importing the bdateutil features a
little easier than python-dateutil. However, importing from bdateutil using
the longer method used by python-dateutil still works to remain 100%
backwards compatibility.</source>
          <target state="translated">bdateutil 기능을 python-dateutil보다 조금 더 쉽게 가져올 수있는 가져 오기 바로 가기를 사용할 수 있습니다. 그러나 python-dateutil에서 사용하는 더 긴 방법을 사용하여 bdateutil에서 가져 오는 것은 여전히 ​​100 % 이전 버전과의 호환성을 유지하도록 작동합니다.</target>
        </trans-unit>
        <trans-unit id="973142621f185d8147d34352e131c396b6dc2ac3" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt; types, relativedelta works
with all strings/bytes regardless of encoding and integer/float timestamps.
It does this by running all date/datetime parameters through the
&lt;code&gt;parse&lt;/code&gt; function which has been modified to accept many different
types than strings, including date/datetime which will return without
modifications. This allows you to call &lt;code&gt;parse(dt)&lt;/code&gt; on an object
regardless of type and ensure a datetime object is returned.</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; 및 &lt;code&gt;date&lt;/code&gt; 유형 외에도 relativedelta는 인코딩 및 정수 / 부동 타임 스탬프에 관계없이 모든 문자열 / 바이트에서 작동합니다. 수정없이 반환되는 날짜 / 날짜 시간을 포함하여 문자열 이외의 다양한 유형을 허용하도록 수정 된 &lt;code&gt;parse&lt;/code&gt; 함수를 통해 모든 날짜 / 날짜 / 시간 매개 변수를 실행 하여이를 수행합니다. 이를 통해 유형에 관계없이 객체에 대해 &lt;code&gt;parse(dt)&lt;/code&gt; 를 호출 하고 datetime 객체가 반환되는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="0643938b9ff7bc45b4a1e703bd0e242ce253edfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rrule&lt;/code&gt; feature has a new &lt;code&gt;BDAILY&lt;/code&gt; option for use as the &lt;code&gt;freq&lt;/code&gt; argument.
This will create a generator which yields business days. Rrule also will now
accept an optional &lt;code&gt;holidays&lt;/code&gt; keyword argument which affects the
&lt;code&gt;BDAILY&lt;/code&gt; freq only. The existing &lt;code&gt;dtstart&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt;
arugments can now be passed as any type resembling a date/datetime.</source>
          <target state="translated">&lt;code&gt;rrule&lt;/code&gt; 기능은 새가 &lt;code&gt;BDAILY&lt;/code&gt; 의 로 사용 옵션 &lt;code&gt;freq&lt;/code&gt; 인수를. 이것은 영업일을 산출하는 발전기를 생성합니다. Rrule은 이제 &lt;code&gt;BDAILY&lt;/code&gt; 주파수에만 영향을주는 선택적인 &lt;code&gt;holidays&lt;/code&gt; 키워드 인수도 허용합니다 . 기존 &lt;code&gt;dtstart&lt;/code&gt; 및 &lt;code&gt;until&lt;/code&gt; arugments는 이제 날짜 / 날짜 시간과 유사한 유형으로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="334597efb34b5ccf530650c298d5ee47398a89df" translate="yes" xml:space="preserve">
          <source>The latest development version can be installed directly from GitHub:</source>
          <target state="translated">최신 개발 버전은 GitHub에서 직접 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93de043e205c48ecd0e520c7ca8c2bcb0c95c963" translate="yes" xml:space="preserve">
          <source>The latest stable version can always be installed or updated via pip:</source>
          <target state="translated">최신 안정 버전은 항상 pip를 통해 설치하거나 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b9616eaeaa514ec9e018618e5cbed82c61fe0e4" translate="yes" xml:space="preserve">
          <source>This section will outline the additional functionality of bdateutil only. For
full documentation on the features provided by python-dateutil please see its
documentation at &lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 bdateutil의 추가 기능에 대해서만 설명합니다. python-dateutil에서 제공하는 기능에 대한 전체 문서는 &lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil&lt;/a&gt; 의 문서를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="92c23e1bbcaa6fa57e61d36eb923d91999e1419a" translate="yes" xml:space="preserve">
          <source>When passing two datetime arguments to relativedelta, the resulting
relativedelta object will contain a &lt;code&gt;bdays&lt;/code&gt; attribute with the number
of business days between the datetime arguments.</source>
          <target state="translated">두 개의 datetime 인수를 relativedelta에 전달할 때 결과 relativedelta 개체에는 datetime 인수 사이의 영업일 수가 있는 &lt;code&gt;bdays&lt;/code&gt; 속성 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="789efc0771c509982e172ccecac3212fac56a420" translate="yes" xml:space="preserve">
          <source>bdateutil is 100% backwards compatible with python-dateutil. You can replace
&lt;code&gt;dateutil&lt;/code&gt; with &lt;code&gt;bdateutil&lt;/code&gt; across your entire project and
everything will continue to work the same but you will have access to the
following additional features:</source>
          <target state="translated">bdateutil은 python-dateutil과 100 % 역 호환됩니다. 전체 프로젝트에서 &lt;code&gt;dateutil&lt;/code&gt; 을 &lt;code&gt;bdateutil&lt;/code&gt; 로 바꿀 수 있으며 모든 것이 계속 동일하게 작동하지만 다음과 같은 추가 기능에 액세스 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
