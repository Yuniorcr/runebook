<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pyasn/">
    <body>
      <group id="pyasn">
        <trans-unit id="46f42ce7f2f4e4535b87511a77fdcb78e0e64d0a" translate="yes" xml:space="preserve">
          <source>/usr/local/bin</source>
          <target state="translated">/ usr / local / bin</target>
        </trans-unit>
        <trans-unit id="fa5215c342a6fc8a68eb1dfcba3f7ef80c3b3f55" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyasn&lt;/em&gt; is developed and maintained by researchers at the Economics of Cybersecurity research group at Delft
University of Technology (&lt;a href=&quot;http://econsec.tbm.tudlft.nl&quot;&gt;http://econsec.tbm.tudlft.nl&lt;/a&gt;). The package is used on an almost daily basis and bugs
are fixed pretty quickly.  The package is largely developed and maintained by Hadi Asghari and Arman Noroozian.
Please report any bugs via GitHub (&lt;a href=&quot;https://github.com/hadiasghari/pyasn&quot;&gt;https://github.com/hadiasghari/pyasn&lt;/a&gt;) or email the developers.</source>
          <target state="translated">&lt;em&gt;pyasn&lt;/em&gt; 은 Delft University of Technology ( &lt;a href=&quot;http://econsec.tbm.tudlft.nl&quot;&gt;http://econsec.tbm.tudlft.nl&lt;/a&gt; ) 의 사이버 보안 경제학 연구 그룹의 연구원이 개발하고 유지 관리합니다 . 이 패키지는 거의 매일 사용되며 버그는 매우 빠르게 수정됩니다. 이 패키지는 주로 Hadi Asghari와 Arman Noroozian이 개발하고 유지 관리합니다. GitHub ( &lt;a href=&quot;https://github.com/hadiasghari/pyasn&quot;&gt;https://github.com/hadiasghari/pyasn&lt;/a&gt; ) 를 통해 버그를보고 하거나 개발자에게 이메일을 보내주세요.</target>
        </trans-unit>
        <trans-unit id="60f84bbf297cdf30082de9e5ed53222280982093" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyasn&lt;/em&gt; is different from other ASN lookup tools in that it provides &lt;strong&gt;offline&lt;/strong&gt; and &lt;strong&gt;historical&lt;/strong&gt; lookups.
It provides utility scripts for users to build their own lookup databases based on any MRT/RIB archive.
This makes &lt;em&gt;pyasn&lt;/em&gt; much faster than online dig/whois/json lookups.</source>
          <target state="translated">&lt;em&gt;pyasn&lt;/em&gt; 은 &lt;strong&gt;오프라인&lt;/strong&gt; 및 &lt;strong&gt;기록&lt;/strong&gt; 조회를 제공한다는 점에서 다른 ASN 조회 도구와 다릅니다 . 사용자가 MRT / RIB 아카이브를 기반으로 자체 조회 데이터베이스를 구축 할 수있는 유틸리티 스크립트를 제공합니다. 이것은 &lt;em&gt;pyasn을&lt;/em&gt; 온라인 dig / whois / json 조회보다 훨씬 빠르게 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="cf00cc3950f3e68e17f92ac30f8d86e918db30b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyasn&lt;/em&gt; is licensed under the MIT license.</source>
          <target state="translated">&lt;em&gt;pyasn&lt;/em&gt; 은 MIT 라이센스에 따라 라이센스가 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="a3993651b37c3cd8625832e777be80788dd8ecc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; These scripts are by default installed to</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이러한 스크립트는 기본적으로 다음 위치에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="c9064bc428a6310aad156e3c2ae0b2f356bc66fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New in v1.6:&lt;/strong&gt; To save disk space, you can gzip IPASN data files. The load time will be slighlty longer.</source>
          <target state="translated">&lt;strong&gt;v1.6의 새로운 기능 :&lt;/strong&gt; 디스크 공간을 절약하기 위해 IPASN 데이터 파일을 gzip 할 수 있습니다. 로드 시간이 길어집니다.</target>
        </trans-unit>
        <trans-unit id="eeb5f5504903a9861805a281e41eacbf832b7062" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New in v1.6:&lt;/strong&gt; pyasn_util_convert.py offers a &amp;lsquo;&amp;ndash;dump-screen&amp;rsquo; option which shows the MRT/RIB archive contents and
the chosen origin-AS.</source>
          <target state="translated">&lt;strong&gt;v1.6의 새로운 기능 :&lt;/strong&gt; pyasn_util_convert.py는 MRT / RIB 아카이브 내용과 선택한 origin-AS를 표시하는 '&amp;ndash;dump-screen'옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dfcebbf19032313026d7982a8008037967d8ffc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removing PyASN version 1.2&lt;/strong&gt;: &lt;em&gt;pyasn&lt;/em&gt; v1.5/1.6 and v1.2 can be installed side by side (due to lower-cased package
name). To avoid mistakes, you can uninstall the old &lt;strong&gt;PyASN&lt;/strong&gt; by deleting the following files from your Python
installation:</source>
          <target state="translated">&lt;strong&gt;PyASN 버전 1.2 제거&lt;/strong&gt; : &lt;em&gt;pyasn&lt;/em&gt; v1.5 / 1.6 및 v1.2를 나란히 설치할 수 있습니다 (소문자 패키지 이름으로 인해). 실수를 방지하기 위해 Python 설치에서 다음 파일을 삭제하여 이전 &lt;strong&gt;PyASN&lt;/strong&gt; 을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4cfa72fe0bca6f80ee4fe982b5287e54e2433b1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pyasn&lt;/strong&gt; is a Python extension module that enables very fast IP address to Autonomous System Number lookups.
Current state and Historical lookups can be done, based on the MRT/RIB BGP archive used as input.</source>
          <target state="translated">&lt;strong&gt;pyasn&lt;/strong&gt; 은 Autonomous System Number 조회에 대한 매우 빠른 IP 주소를 가능하게하는 Python 확장 모듈입니다. 입력으로 사용 된 MRT / RIB BGP 아카이브를 기반으로 현재 상태 및 기록 조회를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59e92407aa318828bd9775f71463e7c1f2215d41" translate="yes" xml:space="preserve">
          <source>A handful of GitHub developers have contributed features and bug fixes to the latest releases.
Many thanks to all of them.</source>
          <target state="translated">소수의 GitHub 개발자가 최신 릴리스에 기능과 버그 수정을 제공했습니다. 그들 모두에게 감사합니다.</target>
        </trans-unit>
        <trans-unit id="55a28d83afd35188e1898c8e81024c18876775c5" translate="yes" xml:space="preserve">
          <source>A limited number of unit tests are provided in the</source>
          <target state="translated">제한된 수의 단위 테스트가</target>
        </trans-unit>
        <trans-unit id="4b18904f70c19f49291de6162612c3d2c3973e50" translate="yes" xml:space="preserve">
          <source>A simple example that demonstrates most of the features:</source>
          <target state="translated">대부분의 기능을 보여주는 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="41c2037fcc15cf23d1691d12611bdaba33e7b1fc" translate="yes" xml:space="preserve">
          <source>Building the C module on Windows, using either pip or from source, requires Microsoft Visual C++ to be installed.
pyasn has been tested using Visual C++ Express 2010, available freely from Microsoft&amp;rsquo;s website, on both the
official Python 3.4 release and Miniconda3. Other versions of Python, Visual Studio, and Cygwin could also work
with minor modifications.</source>
          <target state="translated">pip 또는 from source를 사용하여 Windows에서 C 모듈을 빌드하려면 Microsoft Visual C ++를 설치해야합니다. pyasn은 공식 Python 3.4 릴리스와 Miniconda3 모두에서 Microsoft 웹 사이트에서 무료로 제공되는 Visual C ++ Express 2010을 사용하여 테스트되었습니다. Python, Visual Studio 및 Cygwin의 다른 버전도 약간의 수정으로 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea6eb078a0508de4379b5eedd1a42712ff9d3073" translate="yes" xml:space="preserve">
          <source>IPASN Data Files</source>
          <target state="translated">IPASN 데이터 파일</target>
        </trans-unit>
        <trans-unit id="c8e116152fcee7bbe97095030ca2afbde6eb69c7" translate="yes" xml:space="preserve">
          <source>IPASN data files are a long list of prefixes used to lookup AS number for IPs. An excerpt from such a file looks
like this:</source>
          <target state="translated">IPASN 데이터 파일은 IP에 대한 AS 번호를 조회하는 데 사용되는 긴 접두사 목록입니다. 이러한 파일에서 발췌 한 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2cb90939be38aab54562e593a4a2a6f61c1e23ec" translate="yes" xml:space="preserve">
          <source>IPASN data files can be created by downloading MRT/RIB BGP archives from Routeviews (or similar sources),
and parsing them using provided scripts that tail the BGP AS-Path. This can be done simply as follows:</source>
          <target state="translated">IPASN 데이터 파일은 Routeviews (또는 유사한 소스)에서 MRT / RIB BGP 아카이브를 다운로드하고 BGP AS-Path를 뒤 따르는 제공된 스크립트를 사용하여 파싱하여 생성 할 수 있습니다. 다음과 같이 간단하게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d262f355de2cda9d4e61cfb7a27333ffb4d09b28" translate="yes" xml:space="preserve">
          <source>If you built and installed the package your self use the recorded log to remove the installed files.</source>
          <target state="translated">패키지를 빌드하고 설치 한 경우 기록 된 로그를 사용하여 설치된 파일을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="b20d2dcb6e8c2720a5a437f39c506f73ffec05a3" translate="yes" xml:space="preserve">
          <source>Initial loading of a IPASN data file is the most heavy operation of the package. For fast lookups using multiple
IPASN data files, for instance for historical lookups on multiple dates, we recommend caching of loaded data files
for better performance.</source>
          <target state="translated">IPASN 데이터 파일의 초기로드는 패키지에서 가장 무거운 작업입니다. 여러 날짜에 대한 기록 조회와 같이 여러 IPASN 데이터 파일을 사용하는 빠른 조회의 경우 성능 향상을 위해로드 된 데이터 파일을 캐싱하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="9bbeee5b1eb9b2ff52b3814d30fae29021698f89" translate="yes" xml:space="preserve">
          <source>Installation is a breeze via pip:</source>
          <target state="translated">설치는 pip를 통해 간단합니다.</target>
        </trans-unit>
        <trans-unit id="d137f4aef51f20dd8053faf7c52a69bb6b7d874c" translate="yes" xml:space="preserve">
          <source>It extends code from py-radix (Michael J. Schultz and Damien Miller),  and improves upon it in several ways, for
instance in lowering memory usage and adding bulk prefix/origin load. The underlying radix tree implementation is
taken (and modified) from MRTd. These are all subject to their respective licenses.  Please see the LICENSE file
for details.</source>
          <target state="translated">py-radix (Michael J. Schultz 및 Damien Miller)의 코드를 확장하고, 예를 들어 메모리 사용량을 낮추고 대량 접두사 / 원점로드를 추가하는 등 여러 가지 방법으로 코드를 개선합니다. 기본 기수 트리 구현은 MRTd에서 가져오고 수정됩니다. 이들은 모두 해당 라이선스의 적용을받습니다. 자세한 내용은 LICENSE 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dae8cb639b13cf00147d81d370f0d551d1f3f228" translate="yes" xml:space="preserve">
          <source>License &amp;amp; Acknowledgments</source>
          <target state="translated">라이센스 및 승인</target>
        </trans-unit>
        <trans-unit id="6e424b60e3d5f8ffecf9637038d6d65b4659863e" translate="yes" xml:space="preserve">
          <source>Offline IP address to Autonomous System Number lookup module.</source>
          <target state="translated">자율 시스템 번호 조회 모듈에 대한 오프라인 IP 주소.</target>
        </trans-unit>
        <trans-unit id="75a8913bef0afa479f9d61f45def9ce815cb07ae" translate="yes" xml:space="preserve">
          <source>Or with the standard Python:</source>
          <target state="translated">또는 표준 Python을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="66178be2e2f7c1c1d69a43e87a4a87688ef517d7" translate="yes" xml:space="preserve">
          <source>Package Structure</source>
          <target state="translated">패키지 구조</target>
        </trans-unit>
        <trans-unit id="84f11017dbe9ff4912eff88bc1a097e2f7e3b38f" translate="yes" xml:space="preserve">
          <source>Performance Tip</source>
          <target state="translated">성능 팁</target>
        </trans-unit>
        <trans-unit id="e2b7336b129f6f92839fa91f02e05a33fa18c398" translate="yes" xml:space="preserve">
          <source>Testing pyasn Sources</source>
          <target state="translated">pyasn 소스 테스트</target>
        </trans-unit>
        <trans-unit id="2db9c13c9bbb80a1cbdaf786ef6f0c1d3e75a871" translate="yes" xml:space="preserve">
          <source>Thanks to Dr. Chris Lee (of Shadowserver) for proposing the use of radix trees.</source>
          <target state="translated">기수 트리의 사용을 제안한 Dr. Chris Lee (Shadowserver)에게 감사드립니다.</target>
        </trans-unit>
        <trans-unit id="f79bd47e5540a0ab0e953083a1e2ea191543b476" translate="yes" xml:space="preserve">
          <source>The main portions of the directory tree are as follows:</source>
          <target state="translated">디렉토리 트리의 주요 부분은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab6721006ed3b94f240edee306ced3c451a6a7b9" translate="yes" xml:space="preserve">
          <source>The module is written in C and Python, and cross-compiles on Linux and Windows. Underneath, it uses a radix tree
data structure for storage of IP addresses. In the current version, it borrows code from &lt;em&gt;py-radix&lt;/em&gt; to support
both IPV4 and IPV6 network prefixes. The current release is a beta. Compared to the previous version, it provides
support for Python 2 and 3; adds new functionality, performance improvements, and unit-tests.</source>
          <target state="translated">이 모듈은 C 및 Python으로 작성되며 Linux 및 Windows에서 교차 컴파일됩니다. 아래에서는 IP 주소 저장을 위해 기수 트리 데이터 구조를 사용합니다. 현재 버전에서는 &lt;em&gt;py-radix&lt;/em&gt; 에서 코드를 빌려 IPV4 및 IPV6 네트워크 접두사를 모두 지원합니다. 현재 릴리스는 베타 버전입니다. 이전 버전과 비교하여 Python 2 및 3을 지원합니다. 새로운 기능, 성능 향상 및 단위 테스트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b59767323f12d69cad3a2e22ebfbdf70bd463556" translate="yes" xml:space="preserve">
          <source>This beta release has been tested under python version 2.6, 2.7, and 3.3 to 3.8. We appreciate contributions towards
testing &lt;em&gt;pyasn&lt;/em&gt;!</source>
          <target state="translated">이 베타 릴리스는 Python 버전 2.6, 2.7 및 3.3 ~ 3.8에서 테스트되었습니다. &lt;em&gt;pyasn&lt;/em&gt; 테스트에 &lt;em&gt;기여해&lt;/em&gt; 주셔서 감사합니다 !</target>
        </trans-unit>
        <trans-unit id="dfdaf81103ee7c2a80255a5f9efefd9b7d6b9331" translate="yes" xml:space="preserve">
          <source>Uninstalling pyasn</source>
          <target state="translated">pyasn 제거</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="d37050d2a4a9ab879152a9c585ed6f9b5da5efd0" translate="yes" xml:space="preserve">
          <source>We also provide download links to a large number of previously generated IPASN data files. These are based on
weekly  snapshots of the Routeviews data from 2005-2015, accessible here:
&lt;a href=&quot;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&quot;&gt;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&lt;/a&gt;</source>
          <target state="translated">또한 이전에 생성 된 많은 IPASN 데이터 파일에 대한 다운로드 링크를 제공합니다. 이는 2005-2015 년의 Routeviews 데이터의 주간 스냅 샷을 기반으로하며 여기에서 액세스 할 수 있습니다. &lt;a href=&quot;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&quot;&gt;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12fd9122b41e2b0744138ed5a2f416031e775727" translate="yes" xml:space="preserve">
          <source>We plan to release &lt;em&gt;pyasn&lt;/em&gt; packages to major Linux repositories once it is out of beta.</source>
          <target state="translated">베타가 종료되면 &lt;em&gt;pyasn&lt;/em&gt; 패키지를 주요 Linux 저장소 에 릴리스 할 계획 입니다.</target>
        </trans-unit>
        <trans-unit id="59c01730688c198664f1093691a1331ebb53f18e" translate="yes" xml:space="preserve">
          <source>You can remove &lt;em&gt;pyasn&lt;/em&gt; as follows:</source>
          <target state="translated">다음과 같이 &lt;em&gt;pyasn&lt;/em&gt; 을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02fc16edd78e11a4eb4775f14745eeb852536e97" translate="yes" xml:space="preserve">
          <source>You will need to have pip, setuptools and build essentials installed if you build the package manually. On
Ubuntu/Debian you can get them using the following command:</source>
          <target state="translated">패키지를 수동으로 빌드하는 경우 pip, setuptools 및 빌드 필수 사항이 설치되어 있어야합니다. Ubuntu / Debian에서는 다음 명령을 사용하여 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f6264533b4cb04e566bbc76995880bc2df1167f" translate="yes" xml:space="preserve">
          <source>and can be executed directly. If you installed
the package to a user directory, these scripts will not be on the path and you will have to invoke them by navigating
to the folder in which they have been copied (e.g.</source>
          <target state="translated">직접 실행할 수 있습니다. 패키지를 사용자 디렉터리에 설치 한 경우 이러한 스크립트는 경로에 있지 않으며 복사 된 폴더로 이동하여 스크립트를 호출해야합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="d8c54f097eda64593277fdb68db2ac95dca0f3d3" translate="yes" xml:space="preserve">
          <source>directory when downlading the sources. They can be
run with the following command:</source>
          <target state="translated">소스를 다운로드 할 때 디렉토리. 다음 명령으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f3e62dfcea822a1ea035215281319be5c57049" translate="yes" xml:space="preserve">
          <source>pyasn</source>
          <target state="translated">Pyasn</target>
        </trans-unit>
        <trans-unit id="9ab6f8330a5f1b7f1b115e30ab7fd19a40f7a42e" translate="yes" xml:space="preserve">
          <source>tests/</source>
          <target state="translated">tests/</target>
        </trans-unit>
        <trans-unit id="78f893f65e7d780118c300267c4872cbf401188f" translate="yes" xml:space="preserve">
          <source>~/.local/bin</source>
          <target state="translated">~ / .local / bin</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
