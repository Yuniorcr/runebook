<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pelican-precompress/">
    <body>
      <group id="pelican-precompress">
        <trans-unit id="856c7b732331fe46b74e6c07bcc08921d00e768d" translate="yes" xml:space="preserve">
          <source>(Set[str])</source>
          <target state="translated">(Set[str])</target>
        </trans-unit>
        <trans-unit id="0c38e6b0600c167753ded0449e229c1571bebcd4" translate="yes" xml:space="preserve">
          <source>(bool, default is False)</source>
          <target state="translated">(bool, default is False)</target>
        </trans-unit>
        <trans-unit id="b390ed3bb2e8a6bd8abb1181cd3b3a0a81258231" translate="yes" xml:space="preserve">
          <source>(bool, default is True if brotli is installed)</source>
          <target state="translated">(bool, default is True if brotli is installed)</target>
        </trans-unit>
        <trans-unit id="512264a869eb5a257d6209927afb7fe90804e8d7" translate="yes" xml:space="preserve">
          <source>(bool, default is True if zopfli is installed)</source>
          <target state="translated">(bool, default is True if zopfli is installed)</target>
        </trans-unit>
        <trans-unit id="f434e7178d1ff4ec1dfb4b087365b713199eb2de" translate="yes" xml:space="preserve">
          <source>(bool, default is True)</source>
          <target state="translated">(bool, default is True)</target>
        </trans-unit>
        <trans-unit id="58ff948c29e1a7c0758de01361d10a947dffdb3c" translate="yes" xml:space="preserve">
          <source>(int, default is 20)</source>
          <target state="translated">(int, default is 20)</target>
        </trans-unit>
        <trans-unit id="2dd509f4ddff6b8c1b2b53850cea4d46db8a87e5" translate="yes" xml:space="preserve">
          <source>, if you set this to</source>
          <target state="translated">, if you set this to</target>
        </trans-unit>
        <trans-unit id="c45e85ed750b781068ac58763645244b00e3fc33" translate="yes" xml:space="preserve">
          <source>.
For example, you might turn this off during development.</source>
          <target state="translated">. For example, you might turn this off during development.</target>
        </trans-unit>
        <trans-unit id="573388774f3a82f678aad026736dec0b26b880fe" translate="yes" xml:space="preserve">
          <source>.
You might set this to</source>
          <target state="translated">. You might set this to</target>
        </trans-unit>
        <trans-unit id="5889c3a473c03b9af9a5033b0cc391bbaef1c563" translate="yes" xml:space="preserve">
          <source>1. Install the Python modules</source>
          <target state="translated">1. Install the Python modules</target>
        </trans-unit>
        <trans-unit id="c117838a161aae1272b70cb508811d4a8bd1904a" translate="yes" xml:space="preserve">
          <source>2. Configure Pelican</source>
          <target state="translated">2. Configure Pelican</target>
        </trans-unit>
        <trans-unit id="46ff1f6562e7dac378c4dc2003a8db2985672a42" translate="yes" xml:space="preserve">
          <source>3. Configure nginx</source>
          <target state="translated">3. Configure nginx</target>
        </trans-unit>
        <trans-unit id="453b31723136e416f02ab72c59b48f92b1dc383e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pre-compress your Pelican site using gzip, zopfli, and brotli!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Pre-compress your Pelican site using gzip, zopfli, and brotli!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbfa1aa832daf5eff044ae4dbbd564ac14b1df45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pelican_precompress&lt;/strong&gt; has 100% test coverage. If you&amp;rsquo;d like to test the
code yourself, clone the git repository and run these commands:</source>
          <target state="translated">&lt;strong&gt;pelican_precompress&lt;/strong&gt; has 100% test coverage. If you&amp;rsquo;d like to test the code yourself, clone the git repository and run these commands:</target>
        </trans-unit>
        <trans-unit id="ad917b547ce70559caabd625df928e6dcfbfea8b" translate="yes" xml:space="preserve">
          <source>Are you using &lt;a href=&quot;https://getpelican.com/&quot;&gt;Pelican&lt;/a&gt;, the static site generator? If so, great!
Are you pre-compressing your static files to have the fastest site possible?
If not, install &lt;strong&gt;pelican_precompress&lt;/strong&gt; today!
It&amp;rsquo;s the plugin that makes your visitors happy and saves you money!</source>
          <target state="translated">Are you using &lt;a href=&quot;https://getpelican.com/&quot;&gt;Pelican&lt;/a&gt;, the static site generator? If so, great! Are you pre-compressing your static files to have the fastest site possible? If not, install &lt;strong&gt;pelican_precompress&lt;/strong&gt; today! It&amp;rsquo;s the plugin that makes your visitors happy and saves you money!</target>
        </trans-unit>
        <trans-unit id="27604ad15f8fa049898d6c1a02c585def3560651" translate="yes" xml:space="preserve">
          <source>At minimum, you&amp;rsquo;ll need to install the pelican_precompress plugin.
It will automatically generate gzip files because gzip is built into the
Python standard library.</source>
          <target state="translated">At minimum, you&amp;rsquo;ll need to install the pelican_precompress plugin. It will automatically generate gzip files because gzip is built into the Python standard library.</target>
        </trans-unit>
        <trans-unit id="343cacf1074bba4719177f6afbc79cadb6b3d8c1" translate="yes" xml:space="preserve">
          <source>At the time of writing, nginx doesn&amp;rsquo;t natively support brotli compression.
To get it, you&amp;rsquo;ll need to compile the static brotli module as an nginx
dynamic module, or recompile nginx from scratch. When it&amp;rsquo;s done you&amp;rsquo;ll
add something like this to your nginx configuration file:</source>
          <target state="translated">At the time of writing, nginx doesn&amp;rsquo;t natively support brotli compression. To get it, you&amp;rsquo;ll need to compile the static brotli module as an nginx dynamic module, or recompile nginx from scratch. When it&amp;rsquo;s done you&amp;rsquo;ll add something like this to your nginx configuration file:</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="9b93a81c4cbab0fa9b259098835cd6ed4cd6cd8f" translate="yes" xml:space="preserve">
          <source>Configure Pelican to use the pelican_precompress plugin.</source>
          <target state="translated">Configure Pelican to use the pelican_precompress plugin.</target>
        </trans-unit>
        <trans-unit id="6401c0072eaddcd9d54524d3d9801e47a4366953" translate="yes" xml:space="preserve">
          <source>Configure your web server to use static, pre-compressed files.</source>
          <target state="translated">Configure your web server to use static, pre-compressed files.</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="8281a24d0f9e41aa2c87f33d90879c33441391ed" translate="yes" xml:space="preserve">
          <source>Further reading: &lt;a href=&quot;https://docs.getpelican.com/en/latest/plugins.html&quot;&gt;Pelican plugins&lt;/a&gt;</source>
          <target state="translated">Further reading: &lt;a href=&quot;https://docs.getpelican.com/en/latest/plugins.html&quot;&gt;Pelican plugins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8e4100af3fb01ff1d8e524779fea97c17a9ce20" translate="yes" xml:space="preserve">
          <source>Further reading: &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static&quot;&gt;gzip_static&lt;/a&gt;, &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary&quot;&gt;gzip_vary&lt;/a&gt;, &lt;a href=&quot;https://github.com/google/ngx_brotli&quot;&gt;nginx brotli module&lt;/a&gt;</source>
          <target state="translated">Further reading: &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static&quot;&gt;gzip_static&lt;/a&gt;, &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary&quot;&gt;gzip_vary&lt;/a&gt;, &lt;a href=&quot;https://github.com/google/ngx_brotli&quot;&gt;nginx brotli module&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79fdfbce2a4c316e052a5b1e796de89085731d22" translate="yes" xml:space="preserve">
          <source>Further reading: &lt;a href=&quot;https://pypi.org/project/zopfli/&quot;&gt;zopfli&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/Brotli/&quot;&gt;brotli&lt;/a&gt;</source>
          <target state="translated">Further reading: &lt;a href=&quot;https://pypi.org/project/zopfli/&quot;&gt;zopfli&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/Brotli/&quot;&gt;brotli&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe3ee02f494fa17088d9e25371af289eb0283694" translate="yes" xml:space="preserve">
          <source>Further reading: &lt;a href=&quot;https://tox.readthedocs.io/en/latest/&quot;&gt;tox&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv&lt;/a&gt;, &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;, &lt;a href=&quot;https://jmcgeheeiv.github.io/pyfakefs/release/&quot;&gt;pyfakefs&lt;/a&gt;, &lt;a href=&quot;https://coverage.readthedocs.io/en/latest/&quot;&gt;coverage&lt;/a&gt;</source>
          <target state="translated">Further reading: &lt;a href=&quot;https://tox.readthedocs.io/en/latest/&quot;&gt;tox&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/library/venv.html&quot;&gt;venv&lt;/a&gt;, &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;, &lt;a href=&quot;https://jmcgeheeiv.github.io/pyfakefs/release/&quot;&gt;pyfakefs&lt;/a&gt;, &lt;a href=&quot;https://coverage.readthedocs.io/en/latest/&quot;&gt;coverage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="480293978c9a8367e2639d8f87a5ec1b2fd76e3c" translate="yes" xml:space="preserve">
          <source>However, if you want highly-optimized gzip files you&amp;rsquo;ll need the zopfli module.
And if you want to have the very best compression currently available, you&amp;rsquo;ll
need to install the brotli module (which will require extra work in step 3).</source>
          <target state="translated">However, if you want highly-optimized gzip files you&amp;rsquo;ll need the zopfli module. And if you want to have the very best compression currently available, you&amp;rsquo;ll need to install the brotli module (which will require extra work in step 3).</target>
        </trans-unit>
        <trans-unit id="a56138c0b4b4a48ae901439e6eb4984853de0cab" translate="yes" xml:space="preserve">
          <source>If the brotli module is installed this will default to</source>
          <target state="translated">If the brotli module is installed this will default to</target>
        </trans-unit>
        <trans-unit id="0b9315b56d32febd5b8c146965fd72507eb17534" translate="yes" xml:space="preserve">
          <source>If the zopfli module is installed this will default to</source>
          <target state="translated">If the zopfli module is installed this will default to</target>
        </trans-unit>
        <trans-unit id="6d858e959e33bd365839fcc62a5b0a8d4ff18b5f" translate="yes" xml:space="preserve">
          <source>If you modify this setting in the Pelican configuration file it will
completely replace the default extensions!</source>
          <target state="translated">If you modify this setting in the Pelican configuration file it will completely replace the default extensions!</target>
        </trans-unit>
        <trans-unit id="87c929255e4e906d0fe5180e6aa0a3cd231d8624" translate="yes" xml:space="preserve">
          <source>Install the plugin and any supporting Python packages you want.</source>
          <target state="translated">Install the plugin and any supporting Python packages you want.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="9655e234edaee3552c60cb476da9f8606fbc93d2" translate="yes" xml:space="preserve">
          <source>PRECOMPRESS_BROTLI</source>
          <target state="translated">PRECOMPRESS_BROTLI</target>
        </trans-unit>
        <trans-unit id="200d13b469fe17c58d52936c0923031a44149af5" translate="yes" xml:space="preserve">
          <source>PRECOMPRESS_GZIP</source>
          <target state="translated">PRECOMPRESS_GZIP</target>
        </trans-unit>
        <trans-unit id="ce8cc8d11735136ee0594652110f39d5dd5f366f" translate="yes" xml:space="preserve">
          <source>PRECOMPRESS_MIN_SIZE</source>
          <target state="translated">PRECOMPRESS_MIN_SIZE</target>
        </trans-unit>
        <trans-unit id="ae6434e632682df19790b75d949d0c764b9db884" translate="yes" xml:space="preserve">
          <source>PRECOMPRESS_OVERWRITE</source>
          <target state="translated">PRECOMPRESS_OVERWRITE</target>
        </trans-unit>
        <trans-unit id="d98d74edbf8d21bb59ea6293fa3fb7fd7cc040f7" translate="yes" xml:space="preserve">
          <source>PRECOMPRESS_TEXT_EXTENSIONS</source>
          <target state="translated">PRECOMPRESS_TEXT_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="f3b9fbf1e298944ad1a009a345a9fac170877008" translate="yes" xml:space="preserve">
          <source>PRECOMPRESS_ZOPFLI</source>
          <target state="translated">PRECOMPRESS_ZOPFLI</target>
        </trans-unit>
        <trans-unit id="f975810b0c5c18f14d819bafb0f0b006332a9d5a" translate="yes" xml:space="preserve">
          <source>Pre-compress your Pelican site using gzip, zopfli, and brotli!</source>
          <target state="translated">Pre-compress your Pelican site using gzip, zopfli, and brotli!</target>
        </trans-unit>
        <trans-unit id="b19759667866f42b212b70c580d9279f62a1f3a1" translate="yes" xml:space="preserve">
          <source>Small files tend to result in a larger file size when compressed, and any
improvement is likely to be marginal. The default setting is chosen to
avoid speculatively compressing files that are likely to result in a
larger file size after compression.</source>
          <target state="translated">Small files tend to result in a larger file size when compressed, and any improvement is likely to be marginal. The default setting is chosen to avoid speculatively compressing files that are likely to result in a larger file size after compression.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">테스팅</target>
        </trans-unit>
        <trans-unit id="9c9a606f8b3e3441229f7c705838cc27a396e9af" translate="yes" xml:space="preserve">
          <source>The test suite uses tox to setup multiple environments with varying
dependencies using multiple Python interpreters; pytest allows the
test suite to have parametrized tests; pyfakefs creates a fake
filesystem that the tests can run against; and coverage keeps track
of which lines of code (and which branches) have been run.</source>
          <target state="translated">The test suite uses tox to setup multiple environments with varying dependencies using multiple Python interpreters; pytest allows the test suite to have parametrized tests; pyfakefs creates a fake filesystem that the tests can run against; and coverage keeps track of which lines of code (and which branches) have been run.</target>
        </trans-unit>
        <trans-unit id="7803b75cbb75d8bf39c784fdb5b44eb1a216ad27" translate="yes" xml:space="preserve">
          <source>There are a small number of configuration options available.
You set them in your Pelican configuration file.</source>
          <target state="translated">There are a small number of configuration options available. You set them in your Pelican configuration file.</target>
        </trans-unit>
        <trans-unit id="199c09234ee094b0e8a8c369cf86f349d7316d00" translate="yes" xml:space="preserve">
          <source>There are three steps required to start using static compression:</source>
          <target state="translated">There are three steps required to start using static compression:</target>
        </trans-unit>
        <trans-unit id="cb88845929137eeb4ca6ccb7f797f0f8eb9c724b" translate="yes" xml:space="preserve">
          <source>This is always</source>
          <target state="translated">This is always</target>
        </trans-unit>
        <trans-unit id="16acd67aa67693fa9b894cead0f7a344404836c4" translate="yes" xml:space="preserve">
          <source>This setting controls which file extensions will be pre-compressed.</source>
          <target state="translated">This setting controls which file extensions will be pre-compressed.</target>
        </trans-unit>
        <trans-unit id="a7daf9e950861cb5b3ec68cf0f1b9633362327f9" translate="yes" xml:space="preserve">
          <source>To try compressing every file regardless of size, set this to</source>
          <target state="translated">To try compressing every file regardless of size, set this to</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">진실</target>
        </trans-unit>
        <trans-unit id="5f7ef3946e01fd4994291be58962bf1a996644fc" translate="yes" xml:space="preserve">
          <source>When pelican_precompress encounters an existing compressed file
it will refuse to overwrite it. If you want the plugin to overwrite
files you can set this to</source>
          <target state="translated">When pelican_precompress encounters an existing compressed file it will refuse to overwrite it. If you want the plugin to overwrite files you can set this to</target>
        </trans-unit>
        <trans-unit id="0f09d59a443112f074ba38eff75a1a28e7f4a7cf" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to import the plugin and add it to the list of active plugins.
Feel free to copy and paste the code below into your Pelican configuration file.
Just uncomment and edit the configuration lines to your liking&amp;hellip;or leave
them alone because the defaults are awesome!</source>
          <target state="translated">You&amp;rsquo;ll need to import the plugin and add it to the list of active plugins. Feel free to copy and paste the code below into your Pelican configuration file. Just uncomment and edit the configuration lines to your liking&amp;hellip;or leave them alone because the defaults are awesome!</target>
        </trans-unit>
        <trans-unit id="10ac72d92456f61023d5dfc7864a494334264284" translate="yes" xml:space="preserve">
          <source>during development.
Like</source>
          <target state="translated">during development. Like</target>
        </trans-unit>
        <trans-unit id="6b3d614861b927eee3185d9fa5b50b2d7f3c28cf" translate="yes" xml:space="preserve">
          <source>during development.
Note that if you try to enable zopfli compression but the module
isn&amp;rsquo;t installed then nothing will happen.</source>
          <target state="translated">during development. Note that if you try to enable zopfli compression but the module isn&amp;rsquo;t installed then nothing will happen.</target>
        </trans-unit>
        <trans-unit id="8788ffd43b61823f5ed55c90a76c9274cbdd1bc4" translate="yes" xml:space="preserve">
          <source>nginx supports gzip compression right out of the box.
To enable it, add something like this to your nginx configuration file:</source>
          <target state="translated">nginx supports gzip compression right out of the box. To enable it, add something like this to your nginx configuration file:</target>
        </trans-unit>
        <trans-unit id="1aced813628f955fa68662b6b82600ccf4f2c16c" translate="yes" xml:space="preserve">
          <source>unless you set this to</source>
          <target state="translated">unless you set this to</target>
        </trans-unit>
        <trans-unit id="9bf48e3dfdaae2bd59a5ce43ebdeaf80c6c485fb" translate="yes" xml:space="preserve">
          <source>when the
brotli module isn&amp;rsquo;t installed then nothing will happen.</source>
          <target state="translated">when the brotli module isn&amp;rsquo;t installed then nothing will happen.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
