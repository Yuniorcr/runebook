<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/aws-cdk-app-delivery/">
    <body>
      <group id="aws-cdk-app-delivery">
        <trans-unit id="58b63e273b964039d6ef432a415df3f177c818e5" translate="yes" xml:space="preserve">
          <source>---</source>
          <target state="translated">---</target>
        </trans-unit>
        <trans-unit id="2ff098050ce5c23807641de3877712d9748c5d1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CodePipelineStack&lt;/code&gt; manages the &lt;em&gt;CodePipeline&lt;/em&gt; resources, and self-updates before deploying any other stack</source>
          <target state="translated">&lt;code&gt;CodePipelineStack&lt;/code&gt; 은 &lt;em&gt;CodePipeline&lt;/em&gt; 리소스를 관리하고 다른 스택을 배포하기 전에 자체 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="767a011a2c83a50d972eefd9c2bd491c51eee3b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServiceStackA&lt;/code&gt; and &lt;code&gt;ServiceStackB&lt;/code&gt; are service infrastructure stacks, and need to be deployed in this order</source>
          <target state="translated">&lt;code&gt;ServiceStackA&lt;/code&gt; 및 &lt;code&gt;ServiceStackB&lt;/code&gt; 는 서비스 인프라 스택 이며이 순서로 배포해야합니다.</target>
        </trans-unit>
        <trans-unit id="19532f2ec88e0f5aeda4b032fb56339fc04a40c1" translate="yes" xml:space="preserve">
          <source>Continuous Integration / Continuous Delivery for CDK Applications</source>
          <target state="translated">CDK 애플리케이션을위한 지속적인 통합 / 지속적인 제공</target>
        </trans-unit>
        <trans-unit id="69553aebcbc528ad394cae6e387c1d4ad764cd26" translate="yes" xml:space="preserve">
          <source>For example, a &lt;em&gt;TypeScript&lt;/em&gt; or &lt;em&gt;Javascript&lt;/em&gt; CDK App can add the following &lt;code&gt;buildspec.yml&lt;/code&gt;
at the root of the repository:</source>
          <target state="translated">예를 들어 &lt;em&gt;TypeScript&lt;/em&gt; 또는 &lt;em&gt;Javascript&lt;/em&gt; CDK 앱은 저장소의 루트에 다음 &lt;code&gt;buildspec.yml&lt;/code&gt; 을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="35850d52fbbb85f6e382ac425eaf4a9399f85bf8" translate="yes" xml:space="preserve">
          <source>In order to add the &lt;code&gt;PipelineDeployStackAction&lt;/code&gt; to your &lt;em&gt;CodePipeline&lt;/em&gt;, you need to have a &lt;em&gt;CodePipeline&lt;/em&gt; artifact that
contains the result of invoking &lt;code&gt;cdk synth -o &amp;lt;dir&amp;gt;&lt;/code&gt; on your &lt;em&gt;CDK App&lt;/em&gt;. You can for example achieve this using a
&lt;em&gt;CodeBuild&lt;/em&gt; project.</source>
          <target state="translated">&lt;code&gt;PipelineDeployStackAction&lt;/code&gt; 을 &lt;em&gt;CodePipeline&lt;/em&gt; 에 추가하려면 &lt;em&gt;CDK 앱&lt;/em&gt; 에서 &lt;code&gt;cdk synth -o &amp;lt;dir&amp;gt;&lt;/code&gt; 호출 결과를 포함 하는 &lt;em&gt;CodePipeline&lt;/em&gt; 아티팩트가 있어야합니다 . 예를 들어 &lt;em&gt;CodeBuild&lt;/em&gt; 프로젝트를 사용하여이를 달성 할 수 있습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="88395486ab1a54ed8e7f2466e1e8a6bdb035d0f4" translate="yes" xml:space="preserve">
          <source>It can only deploy stacks that are hosted in the same AWS account and region as the &lt;em&gt;CodePipeline&lt;/em&gt; is.</source>
          <target state="translated">&lt;em&gt;CodePipeline&lt;/em&gt; 과 동일한 AWS 계정 및 리전에서 호스팅되는 스택 만 배포 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">한계</target>
        </trans-unit>
        <trans-unit id="ad1fa438a598d641eb75e0bc3da1b3f6af607fb4" translate="yes" xml:space="preserve">
          <source>Replacement recommended</source>
          <target state="translated">교체 권장</target>
        </trans-unit>
        <trans-unit id="e2236ca8d06ff8c72e044c42e26c9e4b8a3ae87c" translate="yes" xml:space="preserve">
          <source>Stacks that make use of &lt;code&gt;Asset&lt;/code&gt;s cannot be deployed successfully.</source>
          <target state="translated">&lt;code&gt;Asset&lt;/code&gt; 을 사용하는 스택은 성공적으로 배포 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3be1f3990c2162cf7e3876dbde3ee217dac3c3b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PipelineDeployStackAction&lt;/code&gt; expects it's &lt;code&gt;input&lt;/code&gt; to contain the result of
synthesizing a CDK App using the &lt;code&gt;cdk synth -o &amp;lt;directory&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PipelineDeployStackAction&lt;/code&gt; 은 그것의 예상 &lt;code&gt;input&lt;/code&gt; 사용 CDK 앱 합성 결과를 포함 &lt;code&gt;cdk synth -o &amp;lt;directory&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a572e34fd568855ec4ff73090bc274890189c794" translate="yes" xml:space="preserve">
          <source>The construct library in it's current form has the following limitations:</source>
          <target state="translated">현재 형식의 구성 라이브러리에는 다음과 같은 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3cbbccc936cff03f6d576ecf451700aef86ee97" translate="yes" xml:space="preserve">
          <source>The example below defines a &lt;em&gt;CDK App&lt;/em&gt; that contains 3 stacks:</source>
          <target state="translated">아래 예 는 3 개의 스택이 포함 된 &lt;em&gt;CDK 앱&lt;/em&gt; 을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="529c5707defdd37995857a9e67767e31ee636739" translate="yes" xml:space="preserve">
          <source>The repository can contain a file at the root level named &lt;code&gt;buildspec.yml&lt;/code&gt;, or
you can in-line the buildspec. Note that &lt;code&gt;buildspec.yaml&lt;/code&gt; is not compatible.</source>
          <target state="translated">저장소에는 &lt;code&gt;buildspec.yml&lt;/code&gt; 이라는 루트 수준의 파일이 포함 되거나 buildspec을 인라인 할 수 있습니다. 참고 &lt;code&gt;buildspec.yaml&lt;/code&gt; 은 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d735750f52d7bf0b5bdca6f8eb0cf053dead7e4" translate="yes" xml:space="preserve">
          <source>This API may emit warnings. Backward compatibility is not guaranteed.</source>
          <target state="translated">이 API는 경고를 내 보냅니다. 이전 버전과의 호환성은 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c973d12b3f2bfb3212c42aaa0e64cf39838cca25" translate="yes" xml:space="preserve">
          <source>This library has been deprecated. We recommend you use the
&lt;a href=&quot;https://docs.aws.amazon.com/cdk/api/latest/docs/pipelines.html&quot;&gt;@aws-cdk/pipelines&lt;/a&gt; module instead.</source>
          <target state="translated">이 라이브러리는 더 이상 사용되지 않습니다. 대신 &lt;a href=&quot;https://docs.aws.amazon.com/cdk/api/latest/docs/pipelines.html&quot;&gt;@ aws-cdk / pipelines&lt;/a&gt; 모듈 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0a065b5f7a09a3916a2b81eca6739524fcc98425" translate="yes" xml:space="preserve">
          <source>This library includes a &lt;em&gt;CodePipeline&lt;/em&gt; composite Action for deploying AWS CDK Applications.</source>
          <target state="translated">이 라이브러리에는 AWS CDK 애플리케이션 배포를위한 &lt;em&gt;CodePipeline&lt;/em&gt; 복합 작업 이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="745f2621fef06c3ff60545a14222c9e7e389350c" translate="yes" xml:space="preserve">
          <source>This module is part of the &lt;a href=&quot;https://github.com/aws/aws-cdk&quot;&gt;AWS Cloud Development Kit&lt;/a&gt; project.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/aws/aws-cdk&quot;&gt;AWS Cloud Development Kit&lt;/a&gt; 프로젝트의 일부입니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
