<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/opencv-contrib-python/">
    <body>
      <group id="opencv-contrib-python">
        <trans-unit id="eef3ce61cec32e1f1462f376a3af2508c17f6d2b" translate="yes" xml:space="preserve">
          <source>3.5 (EOL in 2020-09-13, builds for 3.5 will not be provided after this)</source>
          <target state="translated">3.5 (2020-09-13의 EOL, 이후 3.5 용 빌드가 제공되지 않음)</target>
        </trans-unit>
        <trans-unit id="0d35d14aa1a0bbc0b4f0032b1cfaefe8602abcd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CI_BUILD&lt;/code&gt;. Set to &lt;code&gt;1&lt;/code&gt; to emulate the CI environment build behaviour. Used only in CI builds to force certain build flags on in &lt;code&gt;setup.py&lt;/code&gt;. Do not use this unless you know what you are doing.</source>
          <target state="translated">&lt;code&gt;CI_BUILD&lt;/code&gt; . CI 환경 빌드 동작을 에뮬레이트하려면 &lt;code&gt;1&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;setup.py&lt;/code&gt; 에서 특정 빌드 플래그를 설정하기 위해 CI 빌드에서만 사용됩니다 . 당신이 무엇을하고 있는지 알지 못한다면 이것을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3b817c4b6fcaf2f7426e295beca6aaf9543695ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_ARGS&lt;/code&gt;. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.</source>
          <target state="translated">&lt;code&gt;CMAKE_ARGS&lt;/code&gt; . OpenCV의 CMake 호출에 대한 추가 인수입니다. 이를 사용하여 사용자 지정 빌드를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aae9c340a781c5a235cb3ad5d5171747054d6dcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; and &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt;. Set to &lt;code&gt;1&lt;/code&gt; to build the contrib and/or headless version</source>
          <target state="translated">&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; 및 &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt; . 기여 및 / 또는 헤드리스 버전을 빌드하려면 &lt;code&gt;1&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="12ad39d8037131bcde0f7d453d738145c280d646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENABLE_JAVA&lt;/code&gt;, Set to &lt;code&gt;1&lt;/code&gt; to enable the Java client build.  This is disabled by default.</source>
          <target state="translated">&lt;code&gt;ENABLE_JAVA&lt;/code&gt; , Java 클라이언트 빌드를 사용하려면 &lt;code&gt;1&lt;/code&gt; 로 설정하십시오. 이것은 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="60345bea60a436263f6ef6085b7bcf7848935d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cv_major.cv_minor.cv_revision+git_hash_of_this_repo&lt;/code&gt; e.g. &lt;code&gt;3.1.0+14a8d39&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cv_major.cv_minor.cv_revision+git_hash_of_this_repo&lt;/code&gt; 예 : &lt;code&gt;3.1.0+14a8d39&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2262213727e68f97384f00952c65c81c055d3d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cv_major.cv_minor.cv_revision.package_revision&lt;/code&gt; e.g. &lt;code&gt;3.1.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cv_major.cv_minor.cv_revision.package_revision&lt;/code&gt; 예 : &lt;code&gt;3.1.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdb27f0bac09bfee6d9534ce0c50e8862023f583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_version.py&lt;/code&gt; script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string. It saves the version information to &lt;code&gt;version.py&lt;/code&gt; file under &lt;code&gt;cv2&lt;/code&gt; in addition to some other flags.</source>
          <target state="translated">&lt;code&gt;find_version.py&lt;/code&gt; 스크립트는 OpenCV 소스에서 버전 정보를 검색하고이 저장소에 특정한 개정 번호도 버전 문자열에 추가합니다. 그것은에 버전 정보 저장 &lt;code&gt;version.py&lt;/code&gt; 에서 파일 &lt;code&gt;cv2&lt;/code&gt; 다른 플래그에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9f7d69417504ae2e94cfb550c685df2c36fbcf01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Do I need to install also OpenCV separately?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : OpenCV도 별도로 설치해야합니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0d9591cc84b3f1d006523f25d372e22adbc524b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: I have some other import errors?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : 다른 가져 오기 오류가 있습니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06a787acaf7b1542f41eecc38603cae26fe86724" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Import fails on Windows: &lt;code&gt;ImportError: DLL load failed: The specified module could not be found.&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : Windows에서 가져 오기 실패 : &lt;code&gt;ImportError: DLL load failed: The specified module could not be found.&lt;/code&gt; ?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dae636d3c71e0030adf19ae51afada3984a844f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Pip install fails with &lt;code&gt;Could not find a version that satisfies the requirement ...&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : &lt;code&gt;Could not find a version that satisfies the requirement ...&lt;/code&gt; ?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb5da4d47c1a0dad31ba9c993ac5c273ba14e587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Pip install fails with &lt;code&gt;ModuleNotFoundError: No module named 'skbuild'&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : &lt;code&gt;ModuleNotFoundError: No module named 'skbuild'&lt;/code&gt; Pip 설치가 실패 합니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26c1a145278d34fcc62d21ba71f35722dfad7ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Why the package and import are different (opencv-python vs. cv2)?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : 패키지와 가져 오기가 다른 이유는 무엇입니까 (opencv-python 대 cv2)?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e66fbeb7d0d225e13c30648fbd354d0dab4edb8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Why the packages do not include non-free algorithms?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q : 패키지에 비 자유 알고리즘이 포함되지 않은 이유는 무엇입니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91fe8b643c6dacb31053a9a2df2b03b51b02133c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unofficial&lt;/strong&gt; pre-built OpenCV packages for Python.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Python 용으로 사전 빌드 된 &lt;strong&gt;비공식&lt;/strong&gt; OpenCV 패키지.</target>
        </trans-unit>
        <trans-unit id="65be52049304c320afbf1208e6c270feb2dff1c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;a.&lt;/strong&gt; Packages for standard desktop environments (Windows, macOS, almost any GNU/Linux distribution)</source>
          <target state="translated">&lt;strong&gt;ㅏ. &lt;/strong&gt;표준 데스크탑 환경 (Windows, macOS, 거의 모든 GNU / Linux 배포판) 용 패키지</target>
        </trans-unit>
        <trans-unit id="c348dd346de67debca982f63462a090421a0940d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;b.&lt;/strong&gt; Packages for server (headless) environments</source>
          <target state="translated">&lt;strong&gt;비. &lt;/strong&gt;서버 (헤드리스) 환경 용 패키지</target>
        </trans-unit>
        <trans-unit id="fee3bab91e308d3bbe36ed69240bf1ba4f61c00f" translate="yes" xml:space="preserve">
          <source>A release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:</source>
          <target state="translated">새 태그가 마스터 브랜치에 푸시되면 릴리스가 생성되고 PyPI에 업로드됩니다. 이러한 태그는 패키지를 구분하며 (이 저장소에는 수정 사항이있을 수 있지만 OpenCV 버전은 동일하게 유지됨) 순차적으로 증가해야합니다. 실제로 릴리스 버전 번호는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c2defb728105bfc82a0c94298eef3033f8ceb30" translate="yes" xml:space="preserve">
          <source>A: If the import fails on Windows, make sure you have &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48145&quot;&gt;Visual C++ redistributable 2015&lt;/a&gt; installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, &lt;a href=&quot;https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows&quot;&gt;Universal C Runtime&lt;/a&gt; might be also required.</source>
          <target state="translated">A : Windows에서 가져 오기가 실패하면 &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48145&quot;&gt;Visual C ++ 재배포 가능 패키지 2015가&lt;/a&gt; 설치되어 있는지 확인하십시오 . Windows 10보다 이전 Windows 버전을 사용하고 있고 최신 시스템 업데이트가 설치되지 않은 경우 &lt;a href=&quot;https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows&quot;&gt;Universal C Runtime&lt;/a&gt; 도 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5286b718798b738a402cc16011b7c65ed69dd16" translate="yes" xml:space="preserve">
          <source>A: It's easier for users to understand &lt;code&gt;opencv-python&lt;/code&gt; than &lt;code&gt;cv2&lt;/code&gt; and it makes it easier to find the package with search engines. &lt;code&gt;cv2&lt;/code&gt; (old interface in old OpenCV versions was named as &lt;code&gt;cv&lt;/code&gt;) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the &lt;code&gt;import cv2&lt;/code&gt;.</source>
          <target state="translated">A : 사용자 가 &lt;code&gt;cv2&lt;/code&gt; 보다 &lt;code&gt;opencv-python&lt;/code&gt; 을 이해 하는 것이 더 쉽고 검색 엔진으로 패키지를 더 쉽게 찾을 수 있습니다. &lt;code&gt;cv2&lt;/code&gt; (이전 OpenCV 버전의 이전 인터페이스는 &lt;code&gt;cv&lt;/code&gt; 로 명명 됨 )는 OpenCV 개발자가 바인딩 생성기를 만들 때 선택한 이름입니다. 이것은 인터넷에서 다른 종류의 튜토리얼과 일치하도록 가져 오기 이름으로 유지됩니다. 가져 오기 이름이나 동작을 변경하는 것은 &lt;code&gt;import cv2&lt;/code&gt; 에 익숙한 숙련 된 사용자에게도 혼란 스러울 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c412169e7d1889fac51d89ceadbf5dae1fce4b20" translate="yes" xml:space="preserve">
          <source>A: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).</source>
          <target state="translated">A : OpenCV Python 바인딩 (사이트 패키지의 cv2.so 또는 cv2.pyd)의 이전 수동 설치를 제거했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bb201b01cd2fda2117cf9ce5cae709e807e3f615" translate="yes" xml:space="preserve">
          <source>A: Most likely the issue is related to too old pip and can be fixed by running &lt;code&gt;pip install --upgrade pip&lt;/code&gt;. Note that the wheel (especially manylinux) format does not currently support properly ARM architecture so there are no packages for ARM based platforms in PyPI. However, &lt;code&gt;opencv-python&lt;/code&gt; packages for Raspberry Pi can be found from &lt;a href=&quot;https://www.piwheels.org/&quot;&gt;https://www.piwheels.org/&lt;/a&gt;.</source>
          <target state="translated">A :이 문제는 너무 오래된 pip와 관련이있을 가능성이 높으며 &lt;code&gt;pip install --upgrade pip&lt;/code&gt; 를 실행하여 해결할 수 있습니다 . wheel (특히 manylinux) 형식은 현재 ARM 아키텍처를 제대로 지원하지 않으므로 PyPI에는 ARM 기반 플랫폼 용 패키지가 없습니다. 그러나 Raspberry Pi 용 &lt;code&gt;opencv-python&lt;/code&gt; 패키지는 &lt;a href=&quot;https://www.piwheels.org/&quot;&gt;https://www.piwheels.org/&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5855ec3443c09944b960cb910181bf030e9c945c" translate="yes" xml:space="preserve">
          <source>A: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.</source>
          <target state="translated">A : 아니요, 패키지는 특수 휠 바이너리 패키지이며 이미 정적으로 빌드 된 OpenCV 바이너리를 포함하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd22fa3e514270d23e5625037ca02792f1d04a45" translate="yes" xml:space="preserve">
          <source>A: Non-free algorithms such as SURF are not included in these packages because they are patented / non-free and therefore cannot be distributed as built binaries. Note that SIFT is included in the builds due to patent expiration since OpenCV versions 4.3.0 and 3.4.10. See this issue for more info: &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/126&quot;&gt;https://github.com/skvark/opencv-python/issues/126&lt;/a&gt;</source>
          <target state="translated">A : SURF와 같은 비 자유 알고리즘은 특허 / 비 자유이므로 빌드 된 바이너리로 배포 할 수 없기 때문에 이러한 패키지에 포함되지 않습니다. OpenCV 버전 4.3.0 및 3.4.10 이후 특허 만료로 인해 SIFT가 빌드에 포함됩니다. 자세한 정보는이 문제를 참조하십시오 : &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/126&quot;&gt;https://github.com/skvark/opencv-python/issues/126&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28834acbbc216ed1a7f8c707f9bda3b2e3923890" translate="yes" xml:space="preserve">
          <source>Add custom Cmake flags if needed, for example: &lt;code&gt;export CMAKE_ARGS=&quot;-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF&quot;&lt;/code&gt; (in Windows you need to set environment variables differently depending on Command Line or PowerShell)</source>
          <target state="translated">필요한 경우 사용자 지정 Cmake 플래그를 추가합니다. 예 : &lt;code&gt;export CMAKE_ARGS=&quot;-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF&quot;&lt;/code&gt; (Windows에서는 명령 줄 또는 PowerShell에 따라 환경 변수를 다르게 설정해야 함)</target>
        </trans-unit>
        <trans-unit id="d31137698c052b0d28b578c2a1d017cd13976be2" translate="yes" xml:space="preserve">
          <source>All packages contain haarcascade files. &lt;code&gt;cv2.data.haarcascades&lt;/code&gt; can be used as a shortcut to the data folder. For example:</source>
          <target state="translated">모든 패키지에는 haarcascade 파일이 포함되어 있습니다. &lt;code&gt;cv2.data.haarcascades&lt;/code&gt; 는 데이터 폴더의 바로 가기로 사용할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="e5d0869d4bb2b3e943082d76a8b28b4a921829a9" translate="yes" xml:space="preserve">
          <source>All wheels ship with &lt;a href=&quot;http://ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&quot;&gt;LGPLv2.1&lt;/a&gt;.</source>
          <target state="translated">모든 휠 은 &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&quot;&gt;LGPLv2.1에&lt;/a&gt; 따라 라이센스가 부여 된 &lt;a href=&quot;http://ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; 와 함께 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="23a7808b48afc84b0dceb9136590ca7bfdbb9b77" translate="yes" xml:space="preserve">
          <source>Backward compatibility</source>
          <target state="translated">하위 호환성</target>
        </trans-unit>
        <trans-unit id="51a7c742c1af01bd741e224fb64c35ee77efc585" translate="yes" xml:space="preserve">
          <source>Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.</source>
          <target state="translated">새 호를 열기 전에 아래 FAQ를 읽고 이미 열려있는 다른 호를 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="ed8be40119bb404acece481d9977c53a6312208d" translate="yes" xml:space="preserve">
          <source>Build OpenCV</source>
          <target state="translated">OpenCV 빌드</target>
        </trans-unit>
        <trans-unit id="c829cb4d9806fbd919121f46e8b185019b2c859e" translate="yes" xml:space="preserve">
          <source>CI build process</source>
          <target state="translated">CI 구축 프로세스</target>
        </trans-unit>
        <trans-unit id="1428bcac99c18e46b7ea28b1e507c8d4b0c5b287" translate="yes" xml:space="preserve">
          <source>Checkout repository and submodules</source>
          <target state="translated">체크 아웃 저장소 및 하위 모듈</target>
        </trans-unit>
        <trans-unit id="96cd4a478a777929649e65dfeefd175585b0e6a4" translate="yes" xml:space="preserve">
          <source>Clone this repository: &lt;code&gt;git clone --recursive https://github.com/skvark/opencv-python.git&lt;/code&gt;</source>
          <target state="translated">이 저장소 &lt;code&gt;git clone --recursive https://github.com/skvark/opencv-python.git&lt;/code&gt; : git clone --recursive https://github.com/skvark/opencv-python.git</target>
        </trans-unit>
        <trans-unit id="0b00068709d2d2e0450334c2a4b719476924161e" translate="yes" xml:space="preserve">
          <source>Contrib modules are also included as a submodule</source>
          <target state="translated">Contrib 모듈은 하위 모듈로도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="da0ae4bd6efeeaf942c1849cb0803873fa702b46" translate="yes" xml:space="preserve">
          <source>Currently, builds for following Python versions are provided:</source>
          <target state="translated">현재 다음 Python 버전 용 빌드가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e749149ae2a4a4f247688f8c5aa59dc434e5d5ea" translate="yes" xml:space="preserve">
          <source>Development builds</source>
          <target state="translated">개발 빌드</target>
        </trans-unit>
        <trans-unit id="4771fc506234b8cd368c7216c7da29d9919eedc7" translate="yes" xml:space="preserve">
          <source>Documentation for opencv-python</source>
          <target state="translated">opencv-python에 대한 문서</target>
        </trans-unit>
        <trans-unit id="a07b4f571bcf753bfa5d1fa9d9a4bf202de4f732" translate="yes" xml:space="preserve">
          <source>Every commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:</source>
          <target state="translated">이 저장소의 마스터 브랜치에 대한 모든 커밋이 빌드됩니다. 가능한 빌드 아티팩트는 로컬 버전 식별자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f39b0e05ba2013500991746afbeaaaa496098560" translate="yes" xml:space="preserve">
          <source>Find OpenCV version from the sources</source>
          <target state="translated">소스에서 OpenCV 버전 찾기</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="395c83eb8e23b0df758007923ffc1f7ae68b6926" translate="yes" xml:space="preserve">
          <source>If some dependency is not enabled in the pre-built wheels, you can also run the build locally to create a custom wheel.</source>
          <target state="translated">사전 빌드 된 휠에서 일부 종속성이 활성화되지 않은 경우 로컬에서 빌드를 실행하여 사용자 정의 휠을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d0899c6ca142e453a98b8d204fb64443010105d" translate="yes" xml:space="preserve">
          <source>If the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/36&quot;&gt;this issue&lt;/a&gt; for a manual fix.</source>
          <target state="translated">위의 방법이 도움이되지 않으면 Anaconda를 사용하고 있는지 확인하십시오. 이전 Anaconda 버전에는 오류를 일으키는 버그 가 있습니다. 수동 수정 은 &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/36&quot;&gt;이 문제&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bc9ea7898090286e66cd13a2af7f633ab4f2c73" translate="yes" xml:space="preserve">
          <source>If you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called &quot;Media Foundation&quot; in the Server Manager. Beware, some posts advise to install &quot;Windows Server Essentials Media Pack&quot;, but this one requires the &quot;Windows Server Essentials Experience&quot; role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the &quot;Media Foundation&quot; should be a safer choice.</source>
          <target state="translated">Windows Server 2012+가있는 경우 미디어 DLL도 누락되었을 수 있습니다. 서버 관리자에서 &quot;Media Foundation&quot;이라는 기능을 설치하십시오. 일부 게시물은 &quot;Windows Server Essentials Media Pack&quot;을 설치하도록 권장하지만이 경우에는 &quot;Windows Server Essentials Experience&quot;역할이 필요하며이 역할은 Windows Server 구성 (Active Directory 통합 등을 시행하여)에 깊은 영향을 미칩니다. 따라서 &quot;미디어 파운데이션&quot;을 설치하는 것이 더 안전한 선택이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6fc9598089c860b777e90289e0e2f79fe3e607c9" translate="yes" xml:space="preserve">
          <source>If you have previous/other manually installed (= not installed via &lt;code&gt;pip&lt;/code&gt;) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.</source>
          <target state="translated">OpenCV의 이전 / 기타 수동 설치 (= &lt;code&gt;pip&lt;/code&gt; 를 통해 설치되지 않음 ) 버전이 설치되어있는 경우 (예 : Python 사이트 패키지의 루트에있는 cv2 모듈) 충돌을 방지하기 위해 설치 전에 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a80aaa7111b6bdf3b0886b3354e4bf5eb8b6c669" translate="yes" xml:space="preserve">
          <source>If you need contrib modules or headless version, just change the package name (step 4 in the previous section is not needed). However, any additional CMake flags can be provided via environment variables as described in step 3 of the manual build section. If none are provided, OpenCV's CMake scripts will attempt to find and enable any suitable dependencies. Headless distributions have hard coded CMake flags which disable all possible GUI dependencies.</source>
          <target state="translated">contrib 모듈이나 헤드리스 버전이 필요한 경우 패키지 이름 만 변경하면됩니다 (이전 섹션의 4 단계는 필요하지 않음). 그러나 수동 빌드 섹션의 3 단계에 설명 된대로 환경 변수를 통해 추가 CMake 플래그를 제공 할 수 있습니다. 아무 것도 제공되지 않으면 OpenCV의 CMake 스크립트는 적절한 종속성을 찾아 활성화하려고 시도합니다. 헤드리스 배포에는 가능한 모든 GUI 종속성을 비활성화하는 하드 코딩 된 CMake 플래그가 있습니다.</target>
        </trans-unit>
        <trans-unit id="48837e74de4819b04913c2d7d3cd76cdad62d560" translate="yes" xml:space="preserve">
          <source>If you still encounter the error after you have checked all the previous solutions, download &lt;a href=&quot;https://github.com/lucasg/Dependencies&quot;&gt;Dependencies&lt;/a&gt; and open the &lt;code&gt;cv2.pyd&lt;/code&gt; (located usually at &lt;code&gt;C:\Users\username\AppData\Local\Programs\Python\PythonXX\Lib\site-packages\cv2&lt;/code&gt;) file with it to debug missing DLL issues.</source>
          <target state="translated">이전 솔루션을 모두 확인한 후에도 오류가 계속 발생하면 &lt;a href=&quot;https://github.com/lucasg/Dependencies&quot;&gt;Dependencies를&lt;/a&gt; 다운로드 하고 &lt;code&gt;cv2.pyd&lt;/code&gt; (일반적으로 &lt;code&gt;C:\Users\username\AppData\Local\Programs\Python\PythonXX\Lib\site-packages\cv2&lt;/code&gt; ) 파일을 사용하여 누락 된 DLL 문제를 디버깅합니다.</target>
        </trans-unit>
        <trans-unit id="a4880e1e81fd1273a065c5bf46f7f94e421d1078" translate="yes" xml:space="preserve">
          <source>Import the package:</source>
          <target state="translated">패키지 가져 오기 :</target>
        </trans-unit>
        <trans-unit id="b571a43cbe752bc2f9bc5fb79c2c28c47b425733" translate="yes" xml:space="preserve">
          <source>In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against</source>
          <target state="translated">Linux 및 MacOS 빌드 : 우리가 컴파일하는 OpenCV의 선택적 C 종속성 가져 오기</target>
        </trans-unit>
        <trans-unit id="1dc8bf455308db2639bcf41ed9e41878acba6091" translate="yes" xml:space="preserve">
          <source>Install the generated wheel</source>
          <target state="translated">생성 된 휠 설치</target>
        </trans-unit>
        <trans-unit id="c606fdbf6de357bfc1116bac2ce0d38a13ee0476" translate="yes" xml:space="preserve">
          <source>Installation and Usage</source>
          <target state="translated">설치 및 사용법</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">라이센싱</target>
        </trans-unit>
        <trans-unit id="3d65823f4614ddda57e25c1eb5dd4642b744e50c" translate="yes" xml:space="preserve">
          <source>Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly</source>
          <target state="translated">Linux 및 macOS 휠은 auditwheel으로 변환되고 그에 따라 배포됩니다.</target>
        </trans-unit>
        <trans-unit id="84a6aaa8ae799345a833b3b8583acff6e481c1f6" translate="yes" xml:space="preserve">
          <source>Linux builds run in manylinux Docker containers (CentOS 5)</source>
          <target state="translated">Linux 빌드는 많은 Linux Docker 컨테이너 (CentOS 5)에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8acd7c56f9e74bc54f208459154c66e000c564a4" translate="yes" xml:space="preserve">
          <source>Linux wheels are built using &lt;a href=&quot;https://github.com/pypa/python-manylinux-demo&quot;&gt;manylinux&lt;/a&gt;. These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.</source>
          <target state="translated">Linux 휠은 &lt;a href=&quot;https://github.com/pypa/python-manylinux-demo&quot;&gt;manylinux를&lt;/a&gt; 사용하여 빌드 됩니다. 이러한 휠은 이전 버전의 glibc에 대해 빌드되었으므로 대부분의 배포판 (GNU C 표준 라이브러리 사용)에서 즉시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c1a62b5595acffff194d1cbab9f2577c207235c6" translate="yes" xml:space="preserve">
          <source>Manual builds</source>
          <target state="translated">수동 빌드</target>
        </trans-unit>
        <trans-unit id="70c160d16fc6657e80d9eab19d0459c7ca874a5d" translate="yes" xml:space="preserve">
          <source>Manylinux wheels</source>
          <target state="translated">Manylinux 바퀴</target>
        </trans-unit>
        <trans-unit id="4727565afc44f086995098036df23d10dc4a1e3f" translate="yes" xml:space="preserve">
          <source>Non-headless Linux and MacOS wheels ship with &lt;a href=&quot;http://doc.qt.io/qt-5/lgpl.html&quot;&gt;Qt 5&lt;/a&gt; licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;LGPLv3&lt;/a&gt;.</source>
          <target state="translated">헤드리스가 아닌 Linux 및 MacOS 휠 은 &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;LGPLv3에&lt;/a&gt; 따라 라이센스가 부여 된 &lt;a href=&quot;http://doc.qt.io/qt-5/lgpl.html&quot;&gt;Qt 5&lt;/a&gt; 와 함께 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="ed8ed2e52bb669fdcaacf72f5c3cc54078a14a4a" translate="yes" xml:space="preserve">
          <source>OpenCV is included as submodule and the version is updated
manually by maintainers when a new OpenCV release has been made</source>
          <target state="translated">OpenCV는 하위 모듈로 포함되며 새 OpenCV 릴리스가 만들어지면 관리자가 수동으로 버전을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6ed23106254f524388275919f59d1a7c80ab903b" translate="yes" xml:space="preserve">
          <source>OpenCV itself is available under &lt;a href=&quot;https://github.com/opencv/opencv/blob/master/LICENSE&quot;&gt;3-clause BSD License&lt;/a&gt;.</source>
          <target state="translated">OpenCV 자체는 &lt;a href=&quot;https://github.com/opencv/opencv/blob/master/LICENSE&quot;&gt;3-clause BSD License&lt;/a&gt; 하에 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="fefac029e2b79731f94eb99fc8d4b3bfe3c7dfc6" translate="yes" xml:space="preserve">
          <source>OpenCV on Wheels</source>
          <target state="translated">바퀴에 OpenCV</target>
        </trans-unit>
        <trans-unit id="be518637d7a809f6f83132187e62fc3645e83706" translate="yes" xml:space="preserve">
          <source>Opencv-python package (scripts in this repository) is available under MIT license.</source>
          <target state="translated">Opencv-python 패키지 (이 저장소의 스크립트)는 MIT 라이선스에 따라 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="908086bb08c7a1ac21b25e6d7ff63ad81addd951" translate="yes" xml:space="preserve">
          <source>Optional: on Linux use the &lt;code&gt;manylinux&lt;/code&gt; images as a build hosts if maximum portability is needed and run &lt;code&gt;auditwheel&lt;/code&gt; for the wheel after build</source>
          <target state="translated">선택 사항 : Linux에서 최대 이식성이 필요한 경우 &lt;code&gt;manylinux&lt;/code&gt; Linux 이미지를 빌드 호스트로 사용하고 빌드 후 휠에 대한 &lt;code&gt;auditwheel&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="53d296ab5e224ca4ee0b4d1a690dfd44b841f1a7" translate="yes" xml:space="preserve">
          <source>Optional: on macOS use &lt;code&gt;delocate&lt;/code&gt; (same as &lt;code&gt;auditwheel&lt;/code&gt; but for macOS)</source>
          <target state="translated">선택 사항 : 맥 OS 사용에 &lt;code&gt;delocate&lt;/code&gt; (동일 &lt;code&gt;auditwheel&lt;/code&gt; 하지만 맥 OS 용)</target>
        </trans-unit>
        <trans-unit id="4a05d49a8e6c5a228f104e23a0801c52969e8ded" translate="yes" xml:space="preserve">
          <source>Please note that build tools and &lt;code&gt;numpy&lt;/code&gt; are required for the build to succeed. On slow systems such as Raspberry Pi the full build may take several hours. On a 8-core Ryzen 7 3700X the build takes about 6 minutes.</source>
          <target state="translated">빌드가 성공하려면 빌드 도구와 &lt;code&gt;numpy&lt;/code&gt; 가 필요합니다. Raspberry Pi와 같은 느린 시스템에서는 전체 빌드에 몇 시간이 걸릴 수 있습니다. 8 코어 Ryzen 7 3700X에서 빌드하는 데 약 6 분이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="36306c8036ecbf620c41451e2befd59172ccc71b" translate="yes" xml:space="preserve">
          <source>Python 3.x releases are provided for officially supported versions (not in EOL).</source>
          <target state="translated">Python 3.x 릴리스는 EOL이 아닌 공식적으로 지원되는 버전으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f90f1a0d4ff492e82c95ecf2a9e61bed9e7a034c" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV 문서&lt;/a&gt; 읽기</target>
        </trans-unit>
        <trans-unit id="479d8086b04986dca20311f3d645e1438e0d40ae" translate="yes" xml:space="preserve">
          <source>Rearrange OpenCV's build result, add our custom files and generate wheel</source>
          <target state="translated">OpenCV의 빌드 결과를 재정렬하고 사용자 정의 파일을 추가하고 휠을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">릴리스</target>
        </trans-unit>
        <trans-unit id="9bebeb1391a426d579391391fc4fb6f1e895146c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;pip wheel . --verbose&lt;/code&gt;. NOTE: make sure you have the latest &lt;code&gt;pip&lt;/code&gt;, the &lt;code&gt;pip wheel&lt;/code&gt; command replaces the old &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt; command which does not support &lt;code&gt;pyproject.toml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pip wheel . --verbose&lt;/code&gt; 실행합니다 . --verbose . 참고 : 메이크업은 반드시 최신이 &lt;code&gt;pip&lt;/code&gt; 의 &lt;code&gt;pip wheel&lt;/code&gt; 명령에 이전 대체 &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt; 지원하지 않는 명령 &lt;code&gt;pyproject.toml&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="d1e4ac244a004b1c83781a7bc8fee8b617c2b8ce" translate="yes" xml:space="preserve">
          <source>See the next section for more info about manual builds outside the CI environment.</source>
          <target state="translated">CI 환경 외부의 수동 빌드에 대한 자세한 내용은 다음 섹션을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="1174823c443db8aeb2ae801944640c46f41d3b59" translate="yes" xml:space="preserve">
          <source>Select the correct package for your environment:</source>
          <target state="translated">환경에 맞는 올바른 패키지를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="288b0ab2242f27457dfb41f6cab90deeacb6e3a5" translate="yes" xml:space="preserve">
          <source>Select the version which you wish to build with &lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; and &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt;: i.e. &lt;code&gt;export ENABLE_CONTRIB=1&lt;/code&gt; if you wish to build &lt;code&gt;opencv-contrib-python&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; 및 &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt; 로 빌드하려는 버전을 선택하십시오 . 즉, &lt;code&gt;opencv-contrib-python&lt;/code&gt; 을 빌드하려면 &lt;code&gt;export ENABLE_CONTRIB=1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="29261adc76e88820b8310623b11636328203fe8e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;opencv-python&lt;/code&gt; version 4.3.0.*, &lt;code&gt;manylinux1&lt;/code&gt; wheels were replaced by &lt;code&gt;manylinux2014&lt;/code&gt; wheels. If your pip is too old, it will try to use the new source distribution introduced in 4.3.0.38 to manually build OpenCV because it does not know how to install &lt;code&gt;manylinux2014&lt;/code&gt; wheels. However, source build will also fail because of too old &lt;code&gt;pip&lt;/code&gt; because it does not understand build dependencies in &lt;code&gt;pyproject.toml&lt;/code&gt;. To use the new &lt;code&gt;manylinux2014&lt;/code&gt; pre-built wheels (or to build from source), your &lt;code&gt;pip&lt;/code&gt; version must be &amp;gt;= 19.3. Please upgrade &lt;code&gt;pip&lt;/code&gt; with &lt;code&gt;pip install --upgrade pip&lt;/code&gt;.</source>
          <target state="translated">이후 &lt;code&gt;opencv-python&lt;/code&gt; 버전 4.3.0. * &lt;code&gt;manylinux1&lt;/code&gt; 의 바퀴로 대체 하였다 &lt;code&gt;manylinux2014&lt;/code&gt; 바퀴. pip가 너무 오래된 경우 4.3.0.38에 도입 된 새로운 소스 배포를 사용하여 OpenCV를 수동으로 빌드 &lt;code&gt;manylinux2014&lt;/code&gt; 합니다. 이는 많은 linux2014 휠 을 설치하는 방법을 모르기 때문 입니다. 그러나 소스 빌드는 &lt;code&gt;pyproject.toml&lt;/code&gt; 의 빌드 종속성을 이해하지 못하기 때문에 너무 오래된 &lt;code&gt;pip&lt;/code&gt; 때문에 실패 합니다. 새로운 &lt;code&gt;manylinux2014&lt;/code&gt; 사전 빌드 된 휠 을 사용하려면 (또는 소스에서 빌드하려면) &lt;code&gt;pip&lt;/code&gt; 버전이&amp;gt; = 19.3이어야합니다. &lt;code&gt;pip install --upgrade pip&lt;/code&gt; &lt;code&gt;pip&lt;/code&gt; 로 pip를 업그레이드하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2a2dadb62a32e8f79cce8c1815f2f8edf07c04b" translate="yes" xml:space="preserve">
          <source>Since OpenCV version 4.3.0, also source distributions are provided in PyPI. This means that if your system is not compatible with any of the wheels in PyPI, &lt;code&gt;pip&lt;/code&gt; will attempt to build OpenCV from sources.</source>
          <target state="translated">OpenCV 버전 4.3.0부터 소스 배포도 PyPI에서 제공됩니다. 즉, 시스템이 PyPI의 휠과 호환되지 않으면 &lt;code&gt;pip&lt;/code&gt; 가 소스에서 OpenCV를 빌드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="d3d4fb9ddfc4beb11245a82e465f66d6fc2a3f97" translate="yes" xml:space="preserve">
          <source>Source distributions</source>
          <target state="translated">소스 분포</target>
        </trans-unit>
        <trans-unit id="0d769c67cd466c08214f053cb3a7a14c68ec04dc" translate="yes" xml:space="preserve">
          <source>Starting from 4.2.0 and 3.4.9 builds the macOS Travis build environment was updated to XCode 9.4. The change effectively dropped support for older than 10.13 macOS versions.</source>
          <target state="translated">4.2.0 및 3.4.9 빌드부터 macOS Travis 빌드 환경이 XCode 9.4로 업데이트되었습니다. 변경으로 인해 10.13 macOS 이전 버전에 대한 지원이 사실상 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="f64296398f9f6dcbc0c267ef640ab9cf604dd06f" translate="yes" xml:space="preserve">
          <source>Starting from 4.3.0 and 3.4.10 builds the Linux build environment was updated from &lt;code&gt;manylinux1&lt;/code&gt; to &lt;code&gt;manylinux2014&lt;/code&gt;. This dropped support for old Linux distributions.</source>
          <target state="translated">4.3.0 및 3.4.10에서 시작하면 리눅스 빌드 환경에서 업데이트 된 빌드 &lt;code&gt;manylinux1&lt;/code&gt; 에 &lt;code&gt;manylinux2014&lt;/code&gt; . 이로 인해 이전 Linux 배포에 대한 지원이 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="f8faa602b194ed58b7e194b8c29b84a215908892" translate="yes" xml:space="preserve">
          <source>Steps 1--4 are handled by &lt;code&gt;pip wheel&lt;/code&gt;.</source>
          <target state="translated">1 ~ 4 단계는 &lt;code&gt;pip wheel&lt;/code&gt; 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="08ba552fef49ea2b5a1c7d81969ccab1af7c640a" translate="yes" xml:space="preserve">
          <source>Supported Python versions</source>
          <target state="translated">Supported Python versions</target>
        </trans-unit>
        <trans-unit id="80da1c8ca729fb248bb8ebe52fdcca97b72f9b15" translate="yes" xml:space="preserve">
          <source>Test that Python can import the library and run some sanity checks</source>
          <target state="translated">Python이 라이브러리를 가져오고 온 전성 검사를 실행할 수 있는지 테스트</target>
        </trans-unit>
        <trans-unit id="d69382be5d67aad7b7354d52fe7ed27b44b7508a" translate="yes" xml:space="preserve">
          <source>The aim of this repository is to provide means to package each new &lt;a href=&quot;https://github.com/opencv/opencv/releases&quot;&gt;OpenCV release&lt;/a&gt; for the most used Python versions and platforms.</source>
          <target state="translated">이 저장소의 목적은 가장 많이 사용되는 Python 버전 및 플랫폼에 대해 각각의 새로운 &lt;a href=&quot;https://github.com/opencv/opencv/releases&quot;&gt;OpenCV 릴리스&lt;/a&gt; 를 패키지화하는 수단을 제공하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e4b2a943392a23b93c37c9a43689d68b7d4071db" translate="yes" xml:space="preserve">
          <source>The build can be customized with environment variables. In addition to any variables that OpenCV's build accepts, we recognize:</source>
          <target state="translated">빌드는 환경 변수로 사용자 정의 할 수 있습니다. OpenCV의 빌드가 허용하는 모든 변수 외에도 다음을 인식합니다.</target>
        </trans-unit>
        <trans-unit id="228758fcec052c632058ab426f2399fac97a5cb0" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;manylinux&lt;/code&gt; images have been extended with some OpenCV dependencies. See &lt;a href=&quot;https://github.com/skvark/opencv-python/tree/master/docker&quot;&gt;Docker folder&lt;/a&gt; for more info.</source>
          <target state="translated">기본 &lt;code&gt;manylinux&lt;/code&gt; 이미지는 일부 OpenCV 종속성으로 확장되었습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/skvark/opencv-python/tree/master/docker&quot;&gt;Docker 폴더&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="2d5bce5c03e622c70e84bee1d8f93f421f19380a" translate="yes" xml:space="preserve">
          <source>The master branch follows OpenCV master branch releases. 3.4 branch follows OpenCV 3.4 bugfix releases.</source>
          <target state="translated">마스터 브랜치는 OpenCV 마스터 브랜치 릴리스를 따릅니다. 3.4 브랜치는 OpenCV 3.4 버그 수정 릴리스를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="4b07b42d28c101c8ee273097b1bf85e01e7a5d12" translate="yes" xml:space="preserve">
          <source>The packages include also other binaries. Full list of licenses can be found from &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;.</source>
          <target state="translated">패키지에는 다른 바이너리도 포함됩니다. 전체 라이선스 목록은 &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8efa7864d43e5cca9a222df760aac72cbabf98a8" translate="yes" xml:space="preserve">
          <source>The project is structured like a normal Python package with a standard &lt;code&gt;setup.py&lt;/code&gt; file.
The build process for a single entry in the build matrices is as follows (see for example &lt;code&gt;appveyor.yml&lt;/code&gt; file):</source>
          <target state="translated">프로젝트는 표준 &lt;code&gt;setup.py&lt;/code&gt; 파일이 있는 일반 Python 패키지처럼 구성 됩니다. 빌드 매트릭스의 단일 항목에 대한 빌드 프로세스는 다음과 같습니다 (예 : &lt;code&gt;appveyor.yml&lt;/code&gt; 파일 참조 ).</target>
        </trans-unit>
        <trans-unit id="d86ad4ba7983f04196af0c6309e5a99f01e132f5" translate="yes" xml:space="preserve">
          <source>There are four different packages and you should &lt;strong&gt;select only one of them&lt;/strong&gt;. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (&lt;code&gt;cv2&lt;/code&gt;). If you installed multiple different packages in the same environment, uninstall them all with &lt;code&gt;pip uninstall&lt;/code&gt; and reinstall only one package.</source>
          <target state="translated">네 가지 패키지가 있으며 &lt;strong&gt;그중 하나만 선택&lt;/strong&gt; 해야 &lt;strong&gt;합니다&lt;/strong&gt; . 동일한 환경에 여러 개의 다른 패키지를 설치하지 마십시오. 플러그인 아키텍처는 없습니다. 모든 패키지는 동일한 네임 스페이스 ( &lt;code&gt;cv2&lt;/code&gt; )를 사용합니다. 동일한 환경에 여러 개의 다른 패키지를 설치 한 경우 &lt;code&gt;pip uninstall&lt;/code&gt; 으로 모두 제거 하고 하나의 패키지 만 다시 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="80bc18bc5d9fa1f7eb0cde0a1542a75bffecf74b" translate="yes" xml:space="preserve">
          <source>These artifacts can't be and will not be uploaded to PyPI.</source>
          <target state="translated">이러한 아티팩트는 PyPI에 업로드 될 수 없으며 업로드되지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="ae9af5ee1c7f1a7f919099882178e70f1b9c0fb2" translate="yes" xml:space="preserve">
          <source>These packages do not contain any GUI functionality. They are smaller and suitable for more restricted environments.</source>
          <target state="translated">이 패키지에는 GUI 기능이 포함되어 있지 않습니다. 더 작고 제한된 환경에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="7fa23e24b613ba0341eb0144512496605ab7e430" translate="yes" xml:space="preserve">
          <source>Third party package licenses are at &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;.</source>
          <target state="translated">타사 패키지 라이선스는 &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="da07910edd84663c51c0e8e16fc20bf16ce198c3" translate="yes" xml:space="preserve">
          <source>Use twine to upload the generated wheel to PyPI (only in release builds)</source>
          <target state="translated">twine을 사용하여 생성 된 휠을 PyPI에 업로드합니다 (릴리스 빌드에서만).</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">버전 관리</target>
        </trans-unit>
        <trans-unit id="b072e2244b4098070c4794dc85bc4b4abbc354ad" translate="yes" xml:space="preserve">
          <source>Windows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also &lt;a href=&quot;https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions&quot;&gt;Windows Media Feature Pack&lt;/a&gt;.</source>
          <target state="translated">Windows N 및 KN 버전에는 OpenCV에 필요한 미디어 기능 팩이 포함되어 있지 않습니다. Windows N 또는 KN 버전을 사용하는 경우 &lt;a href=&quot;https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions&quot;&gt;Windows Media 기능 팩&lt;/a&gt; 도 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1ba26270de64803b222b63013e41ec8dc5a65e6" translate="yes" xml:space="preserve">
          <source>Wrapper package for OpenCV python bindings.</source>
          <target state="translated">OpenCV 파이썬 바인딩을위한 래퍼 패키지.</target>
        </trans-unit>
        <trans-unit id="e1029785330a41d62b485656887e0e78951cb780" translate="yes" xml:space="preserve">
          <source>You can also force &lt;code&gt;pip&lt;/code&gt; to build the wheels from the source distribution. Some examples:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 가 소스 배포판에서 바퀴를 만들 도록 강제 할 수도 있습니다 . 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="fb4c74623c75857933bac5606cb7b8114c3c81f0" translate="yes" xml:space="preserve">
          <source>You'll have the wheel file in the &lt;code&gt;dist&lt;/code&gt; folder and you can do with that whatever you wish</source>
          <target state="translated">&lt;code&gt;dist&lt;/code&gt; 폴더 에 wheel 파일이 있고 원하는대로 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="370f6982fa966b078349dde951ef044a609ee79f" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-contrib-python-headless&lt;/code&gt; if you need both main and contrib modules (check extra modules listing from &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;)</source>
          <target state="translated">main 및 contrib 모듈이 모두 필요한 경우 &lt;code&gt;pip install opencv-contrib-python-headless&lt;/code&gt; 를 실행 하십시오 ( &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV 문서&lt;/a&gt; 에서 추가 모듈 목록 확인 ).</target>
        </trans-unit>
        <trans-unit id="a529d7d500fa8b6306f02d25d839d140374d5b71" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-contrib-python&lt;/code&gt; if you need both main and contrib modules (check extra modules listing from &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;)</source>
          <target state="translated">main 및 contrib 모듈이 모두 필요한 경우 &lt;code&gt;pip install opencv-contrib-python&lt;/code&gt; 을 실행 하십시오 ( &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV 문서&lt;/a&gt; 에서 추가 모듈 목록 확인 ).</target>
        </trans-unit>
        <trans-unit id="7dfe1942eb4688bcc4c30da3e7684a6bc31aaae2" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-python-headless&lt;/code&gt; if you need only main modules</source>
          <target state="translated">주 모듈 만 필요한 경우 &lt;code&gt;pip install opencv-python-headless&lt;/code&gt; 를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9348c7347d7f0923e0460ee59c968829333d3aff" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-python&lt;/code&gt; if you need only main modules</source>
          <target state="translated">주 모듈 만 필요한 경우 &lt;code&gt;pip install opencv-python&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="d551e1881ef81217e97f4db8cb2ebdb46e61ad5e" translate="yes" xml:space="preserve">
          <source>source distributions are separate entries in the build matrix</source>
          <target state="translated">소스 배포는 빌드 매트릭스에서 별도의 항목입니다.</target>
        </trans-unit>
        <trans-unit id="0370216d60c6160041cfb82e3574bd9dac2caa6d" translate="yes" xml:space="preserve">
          <source>tests are disabled, otherwise build time increases too much</source>
          <target state="translated">테스트가 비활성화됩니다. 그렇지 않으면 빌드 시간이 너무 많이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="60cf39a5f73e0806b468683704787cdbdf29901a" translate="yes" xml:space="preserve">
          <source>there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)</source>
          <target state="translated">각 빌드 조합에 대해 4 개의 빌드 매트릭스 항목이 있습니다 : contrib 모듈 유무, GUI 유무 (헤드리스)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
