<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/aistac-foundation/">
    <body>
      <group id="aistac-foundation">
        <trans-unit id="a5c6d2ad46a2e210b7aa3e3cc2a532710d8940a9" translate="yes" xml:space="preserve">
          <source>&amp;lt;name&amp;gt;_key</source>
          <target state="translated">&amp;lt;이름&amp;gt; _key</target>
        </trans-unit>
        <trans-unit id="5ee33ef03a5b78dce421fab51637d7a4b78d25db" translate="yes" xml:space="preserve">
          <source>. Likewise
the</source>
          <target state="translated">. 마찬가지로</target>
        </trans-unit>
        <trans-unit id="674b9795aad292630b1f71d5d68cbba28b0944cf" translate="yes" xml:space="preserve">
          <source>1&amp;nbsp;&amp;nbsp;&amp;nbsp;What is Project Hadron</source>
          <target state="translated">1 프로젝트 하드론이란?</target>
        </trans-unit>
        <trans-unit id="13095088d3313284c1951208f1c40f516dffc5f9" translate="yes" xml:space="preserve">
          <source>1. Machine Learning Capability Mapping - Separation of capabilities, breaking the machine learning vertical into a set
of decoupled and targeted layers of discrete and refined actions that collectively present a human lead (ethical AI)
base truth to the next set of capabilities. This not only allows improved transparency of, what is, a messy and
sometimes confusing set of discovery orientated coded ideas but also loosely couples and targets activities that are,
generally, complex and specialized into identifiable and discrete capabilities that can be chained as separately
allocated activities.</source>
          <target state="translated">1. Machine Learning Capability Mapping - Separation of capabilities, breaking the machine learning vertical into a set of decoupled and targeted layers of discrete and refined actions that collectively present a human lead (ethical AI) base truth to the next set of capabilities. This not only allows improved transparency of, what is, a messy and sometimes confusing set of discovery orientated coded ideas but also loosely couples and targets activities that are, generally, complex and specialized into identifiable and discrete capabilities that can be chained as separately allocated activities.</target>
        </trans-unit>
        <trans-unit id="f05f4394da2d1d4c93c9019868af944dd0a7d43d" translate="yes" xml:space="preserve">
          <source>2&amp;nbsp;&amp;nbsp;&amp;nbsp;Main features</source>
          <target state="translated">2 주요 기능</target>
        </trans-unit>
        <trans-unit id="d7ae31f090f44671f31f40899f3c8069300bd2e5" translate="yes" xml:space="preserve">
          <source>2. Parametrized Intent - A unique technique extracting the ideas and thinking of the data scientist from their
discovery code and capturing it as intent with parameters that can be replayed against productionized code and data.
This decoupling and Separation of Concern between data, code and the intent of actions from that code on that data,
considerably improves time to market, code reuse, transparency of actions and the communication of ideas between data
scientists and product delivery specialists.</source>
          <target state="translated">2. 매개 변수화 된 의도-발견 코드에서 데이터 과학자의 아이디어와 생각을 추출하고 생산 된 코드 및 데이터에 대해 재생할 수있는 매개 변수를 사용하여 의도로 캡처하는 고유 한 기술입니다. 데이터, 코드 및 해당 데이터에 대한 해당 코드의 작업 의도 간의 이러한 분리 및 분리는 시장 출시 시간, 코드 재사용, 작업의 투명성 및 데이터 과학자와 제품 제공 전문가 간의 아이디어 전달을 크게 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="841dc6b5cae3c9252dd134d2e75eef911a5fbd48" translate="yes" xml:space="preserve">
          <source>3&amp;nbsp;&amp;nbsp;&amp;nbsp;Overview</source>
          <target state="translated">3 개요</target>
        </trans-unit>
        <trans-unit id="e697e8e6cfa32211f788af59afa058fc046ed7b5" translate="yes" xml:space="preserve">
          <source>3. Discovery Transitioning - Discovery Transitioning - is a foundation of the sepatation of concerns between data
provisioning and feature selection. As part of the Accelerated ML discovery Vertical, Transitioning is a foundation
base truth facilitating a transparent transition of the raw canonical dataset to a fit-for-purpose canonical dataset
to enable the optimisation of discovery analysis and the identification of features-of-interest, for the data scientist
and created boundary separation of capabilities decoupling the Data Scientist for the Data Engineer. As output it also
provides &amp;lsquo;intelligent Communication&amp;rsquo;, not only to the Data Scientist through canonical fit-for-purpose datasets, but
more generally offers powerful visual discovery tools and artefact generation for production architects, data and
business SME&amp;rsquo;s, Stakeholders and is the initiator of Augmented Knowledge for an enriched and transparent shared view of
the extended data knowledge.</source>
          <target state="translated">3. Discovery Transitioning (검색 전환)-Discovery Transitioning (검색 전환)은 데이터 프로비저닝과 기능 선택 사이의 문제 분리의 기초입니다. Accelerated ML Discovery Vertical의 일부인 Transitioning은 원시 표준 데이터 세트를 목적에 맞는 표준 데이터 세트로 투명하게 전환하여 검색 분석을 최적화하고 관심 기능을 식별 할 수 있도록 지원하는 기본 기본 정보입니다. 데이터 과학자를 위해 데이터 엔지니어를 위해 데이터 과학자를 분리하는 기능의 경계 분리를 만들었습니다. 결과적으로 그것은 또한 목적에 맞는 표준 데이터 세트를 통해 데이터 과학자에게 '지능형 통신'을 제공 할뿐만 아니라,보다 일반적으로 생산 설계자, 데이터 및 비즈니스 SME를위한 강력한 시각적 발견 도구 및 인공물 생성을 제공합니다.이해 관계자이며 확장 된 데이터 지식에 대한 풍부하고 투명한 공유 관점을 제공하는 증강 지식의 창시자입니다.</target>
        </trans-unit>
        <trans-unit id="baf42aae5709d3877f1171ee0219c0bbfc5c7bef" translate="yes" xml:space="preserve">
          <source>4&amp;nbsp;&amp;nbsp;&amp;nbsp;Background</source>
          <target state="translated">4 배경</target>
        </trans-unit>
        <trans-unit id="9ba986219595a08a3c8836134c08f46ef1ebf422" translate="yes" xml:space="preserve">
          <source>4. Feature Cataloguing &amp;ndash; With cross over skills within machine learning and advanced data heuristics,
investigation identified commonality and separation across customer engagements that particularly challenged our
Ph.D data scientists in their effective delivery of customer success. As a result the project designed and developed
Feature Cataloguing, a machine learning technique of extracting and engineering features and their characteristics
appropriately parameterized for model selection.  This technique implements a juxta view of how features are
characterized and presented to the modelling layer. Traditionally features are directly mapped as a representation
of the underlying data set. Feature Cataloguing treats each individual feature as its own individual set of
characteristics as its representation. The resulting outcome considerably improves experimentation, cross feature
association, even when unrelated in the original data sets, and the reuse of identified features-of-interest across
use case and business domains.</source>
          <target state="translated">4. 기능 카탈로그 &amp;ndash; 머신 러닝 및 고급 데이터 휴리스틱 스 내의 교차 기술을 통해 조사를 통해 고객 성공을 효과적으로 제공하는 데있어 박사 데이터 과학자에게 특히 어려움을 겪었던 고객 참여 전반의 공통성과 분리를 확인했습니다. 그 결과이 프로젝트는 모델 선택을 위해 적절하게 매개 변수화 된 특성과 특성을 추출하고 엔지니어링하는 기계 학습 기술인 특성 카탈로그를 설계하고 개발했습니다. 이 기술은 피쳐가 특성화되고 모델링 계층에 표시되는 방식에 대한 병치보기를 구현합니다. 전통적으로 기능은 기본 데이터 세트의 표현으로 직접 매핑됩니다. 기능 카탈로그는 각 개별 기능을 표현으로서의 고유 한 개별 특성 집합으로 취급합니다.그 결과 원래 데이터 세트에서 관련이없는 경우에도 실험, 교차 기능 연관, 사용 사례 및 비즈니스 도메인에서 식별 된 관심 기능의 재사용이 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="cdd47ea44a3c363d7b951e8d5a17e4740554dc1f" translate="yes" xml:space="preserve">
          <source>5&amp;nbsp;&amp;nbsp;&amp;nbsp;Installation</source>
          <target state="translated">5 설치</target>
        </trans-unit>
        <trans-unit id="53f5853b2f0024d7927f58d4245dc873d0921713" translate="yes" xml:space="preserve">
          <source>5. Augmented Knowledge - This the ability to capture information on data, activities and the rich stream of subject
matter expertise, injected into the machine learning discovery vertical to provide an Augmented n-view of the model
build. This includes security, sensitivity, data value scaling, dictionary, observations, performance, optimization,
bias, etc. This enriched view of data allows, amongst other things, improved knowledge share, AI explainability,
feature transparency, and accountability that feeds into AI ethics, and insight analysis.</source>
          <target state="translated">5. 증강 된 지식-모델 빌드의 증강 된 n- 뷰를 제공하기 위해 머신 러닝 발견 분야에 주입 된 데이터, 활동 및 주제별 전문 지식의 풍부한 스트림에 대한 정보를 캡처하는 기능입니다. 여기에는 보안, 민감도, 데이터 가치 확장, 사전, 관찰, 성능, 최적화, 편향 등이 포함됩니다. 이렇게 풍부한 데이터보기를 통해 무엇보다도 지식 공유, AI 설명 가능성, 기능 투명성 및 AI 윤리에 영향을주는 책임 성을 개선 할 수 있습니다. 및 통찰력 분석.</target>
        </trans-unit>
        <trans-unit id="34c843cd434032e2b27b45c164ef8c9d57f47b99" translate="yes" xml:space="preserve">
          <source>6&amp;nbsp;&amp;nbsp;&amp;nbsp;Package Overview</source>
          <target state="translated">6 패키지 개요</target>
        </trans-unit>
        <trans-unit id="695f36c3f97ae299bd327f3fb303c2f120a88856" translate="yes" xml:space="preserve">
          <source>6.1&amp;nbsp;&amp;nbsp;&amp;nbsp;AbstractComponent</source>
          <target state="translated">6.1 AbstractComponent</target>
        </trans-unit>
        <trans-unit id="6e2da09f8e1db066421529626d1135139ff8fff2" translate="yes" xml:space="preserve">
          <source>6.2&amp;nbsp;&amp;nbsp;&amp;nbsp;AbstractPropertyManager</source>
          <target state="translated">6.2 AbstractPropertyManager</target>
        </trans-unit>
        <trans-unit id="e851ce8073bb77c422931b852ac8c6e3edd4aece" translate="yes" xml:space="preserve">
          <source>6.3&amp;nbsp;&amp;nbsp;&amp;nbsp;AbstractIntentModel</source>
          <target state="translated">6.3 AbstractIntentModel</target>
        </trans-unit>
        <trans-unit id="2f44cc5a4cb23763964da49156dc86033537473d" translate="yes" xml:space="preserve">
          <source>7&amp;nbsp;&amp;nbsp;&amp;nbsp;Reference</source>
          <target state="translated">7 참조</target>
        </trans-unit>
        <trans-unit id="5221fd6253e4309658a7a243e7597b4ae941c70a" translate="yes" xml:space="preserve">
          <source>7.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Python version</source>
          <target state="translated">7.1 Python 버전</target>
        </trans-unit>
        <trans-unit id="50cdf766be3211c25033ac0e25435474fbf23ba5" translate="yes" xml:space="preserve">
          <source>7.2&amp;nbsp;&amp;nbsp;&amp;nbsp;GitHub Project</source>
          <target state="translated">7.2 GitHub 프로젝트</target>
        </trans-unit>
        <trans-unit id="3ebe69442e6c352eea1888e55b86690ad9c254c1" translate="yes" xml:space="preserve">
          <source>7.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Change log</source>
          <target state="translated">7.3 변경 로그</target>
        </trans-unit>
        <trans-unit id="584b74517537788646c24a475bd4aadaaecd31d1" translate="yes" xml:space="preserve">
          <source>7.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Licence</source>
          <target state="translated">7.4 라이센스</target>
        </trans-unit>
        <trans-unit id="d4f3abfcf2fa0029db5e7de668610b3f675f48de" translate="yes" xml:space="preserve">
          <source>7.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Authors</source>
          <target state="translated">7.5 저자</target>
        </trans-unit>
        <trans-unit id="677373092ea5f9722d119e21593299344b12cf6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://opengrass.io&quot;&gt;Gigas64&lt;/a&gt;  (&lt;a href=&quot;https://twitter.com/gigas64&quot;&gt;@gigas64&lt;/a&gt;) created aistac-foundation.</source>
          <target state="translated">&lt;a href=&quot;http://opengrass.io&quot;&gt;Gigas64&lt;/a&gt; ( &lt;a href=&quot;https://twitter.com/gigas64&quot;&gt;@ gigas64&lt;/a&gt; )는 aistac 재단을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="70d24955aa60a155473bb771af3fdf44bfe26fbd" translate="yes" xml:space="preserve">
          <source>Abstract AI Single Task Application Component (AI-STAC) Class for Parameterised Intent containing parameterised
intent registration methods</source>
          <target state="translated">매개 변수화 된 의도 등록 방법을 포함하는 매개 변수화 된 의도에 대한 추상 AI 단일 작업 애플리케이션 구성 요소 (AI-STAC) 클래스</target>
        </trans-unit>
        <trans-unit id="3e08cb986f46c1dd3957928c1440f0548e5b0d45" translate="yes" xml:space="preserve">
          <source>Abstract AI Single Task Application Component (AI-STAC) class that creates a super class for all properties
managers</source>
          <target state="translated">모든 속성 관리자를위한 슈퍼 클래스를 생성하는 추상 AI AI-STAC (Single Task Application Component) 클래스</target>
        </trans-unit>
        <trans-unit id="ddef1c57ef9443143c5c237cdb8cf821a72eb977" translate="yes" xml:space="preserve">
          <source>Abstract AI Single Task Application Component (AI-STAC) component class provides all the basic building blocks
of a components build including property management, augmented knowledge notes and parameterised intent pipeline.</source>
          <target state="translated">Abstract AI-STAC (AI Single Task Application Component) 구성 요소 클래스는 속성 관리, 증강 된 지식 노트 및 매개 변수화 된 의도 파이프 라인을 포함하여 구성 요소 빌드의 모든 기본 빌딩 블록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="689993eb16f472bb974d3fa57a0eb608e214a0de" translate="yes" xml:space="preserve">
          <source>AbstractComponent</source>
          <target state="translated">AbstractComponent</target>
        </trans-unit>
        <trans-unit id="d40ca470d9fe192b8be77bdbb5e4acec566cebb4" translate="yes" xml:space="preserve">
          <source>AbstractIntentModel</source>
          <target state="translated">AbstractIntentModel</target>
        </trans-unit>
        <trans-unit id="88efe87f7e08269bd2ec584f63355f637b9e57fd" translate="yes" xml:space="preserve">
          <source>AbstractPropertiesManager</source>
          <target state="translated">AbstractPropertiesManager</target>
        </trans-unit>
        <trans-unit id="403882d98790b59b630a1fc323c3d87afe27a473" translate="yes" xml:space="preserve">
          <source>As an example concrete implementation of this method:</source>
          <target state="translated">이 메소드의 구체적인 구현 예 :</target>
        </trans-unit>
        <trans-unit id="fcb1a9243ebd2c75fcaebf1bbfad2f0f7cd55e41" translate="yes" xml:space="preserve">
          <source>As an example of a run_pipeline that iteratively updates a canonical with each intent</source>
          <target state="translated">각 인 텐트로 표준을 반복적으로 업데이트하는 run_pipeline의 예</target>
        </trans-unit>
        <trans-unit id="0c9fe9c6505aae2fb405de1b9fd38d042a3a3a0f" translate="yes" xml:space="preserve">
          <source>As an example of an initialisation method</source>
          <target state="translated">초기화 방법의 예</target>
        </trans-unit>
        <trans-unit id="ab0e533f9e742e7dbb2a01f35bc7246910ed567e" translate="yes" xml:space="preserve">
          <source>Augmented Intent Single Task Adaptive Components</source>
          <target state="translated">증강 의도 단일 작업 적응 구성 요소</target>
        </trans-unit>
        <trans-unit id="2184c5264fe6f18192e7621ec0db27fb854b77cf" translate="yes" xml:space="preserve">
          <source>Augmented Knowledge</source>
          <target state="translated">증강 된 지식</target>
        </trans-unit>
        <trans-unit id="e0b8cdfc31df0fb871e325bd701adf4f503893ef" translate="yes" xml:space="preserve">
          <source>BSD-3-Clause: &lt;a href=&quot;https://github.com/project-hadron-cs/aistac-foundation/blob/master/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt;.</source>
          <target state="translated">BSD-3-Clause : &lt;a href=&quot;https://github.com/project-hadron-cs/aistac-foundation/blob/master/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="791975da55b74adb81a49d117aaca1aad31078ba" translate="yes" xml:space="preserve">
          <source>Born out of the frustration of time constraints and the inability to show business value
within a business expectation, this project aims to provide a set of tools to quickly
produce visual and observational results. It also aims to improve the communication
outputs needed by ML delivery to talk to Pre-Sales, Stakholders, Business SME&amp;rsquo;s, Data SME&amp;rsquo;s
product coders and tooling engineers while still remaining within familiar code paragigms.</source>
          <target state="translated">시간 제약의 좌절과 비즈니스 기대 내에서 비즈니스 가치를 보여줄 수없는 상황에서 태어난이 프로젝트는 시각적 및 관찰 결과를 신속하게 생성 할 수있는 도구 세트를 제공하는 것을 목표로합니다. 또한 사전 판매, Stakholders, Business SME, Data SME의 제품 코더 및 툴링 엔지니어와 대화하기 위해 ML 전달에 필요한 커뮤니케이션 출력을 개선하는 동시에 익숙한 코드 패러 지그 내에서 유지하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">내용</target>
        </trans-unit>
        <trans-unit id="cb96a381f16a6eab9fca4980a12d8b95aa60feef" translate="yes" xml:space="preserve">
          <source>Discovery Transitioning</source>
          <target state="translated">디스커버리 전환</target>
        </trans-unit>
        <trans-unit id="228371874f06ff810c6eaf9e872ab6cdbc638a16" translate="yes" xml:space="preserve">
          <source>Feature Cataloguing</source>
          <target state="translated">기능 카탈로그</target>
        </trans-unit>
        <trans-unit id="4cf11f2337246465d9f8d52337c3960f2b5cfb82" translate="yes" xml:space="preserve">
          <source>For convenience there are two Factory Initialisation methods available</source>
          <target state="translated">편의를 위해 두 가지 공장 초기화 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28f378ad68f358211656840a2db3d2fcc3b61e2d" translate="yes" xml:space="preserve">
          <source>For example if we were using an AWS S3 where the schema is s3:// the Factory method be similar to:</source>
          <target state="translated">예를 들어 스키마가 s3 : // 인 AWS S3를 사용하는 경우 Factory 메서드는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="f47f1874656a22f66a4b07d6646a69594a5bb322" translate="yes" xml:space="preserve">
          <source>Here is a default example of an initialisation method:</source>
          <target state="translated">다음은 초기화 방법의 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="2d86caf30d0c1b4620b68fb31d32bf006065fd64" translate="yes" xml:space="preserve">
          <source>In addition the need to remove the opaque nature of the machine learning end-to-end required better transparency and
traceability, to better inform to the broadest of interested parties and be able to adapt without leaving being the
code &amp;lsquo;sludge&amp;rsquo; of redundant ideas. Project Hadron is a disruptive innovation, changing the way we approach the
challenges of Machine Learning and Augmented Inelegance, introduces the ideas of &amp;lsquo;Single Task Adaptive Component&amp;rsquo;
around the core concept of &amp;lsquo;Parameterised Intent&amp;rsquo;</source>
          <target state="translated">또한 머신 러닝의 불투명 한 특성을 제거하려면 더 나은 투명성과 추적 성을 필요로하고, 가장 광범위한 이해 당사자에게 더 잘 알리고 중복 아이디어의 코드 '슬러지'를 남기지 않고 적응할 수 있어야했습니다. Project Hadron은 파괴적인 혁신으로, 우리가 머신 러닝 및 증강 된 Inelegance의 과제에 접근하는 방식을 바꾸고 '매개 변수화 된 의도'의 핵심 개념을 중심으로 '단일 작업 적응 구성 요소'의 아이디어를 소개합니다.</target>
        </trans-unit>
        <trans-unit id="f4d8d0c50aeb55934d4345ef3dbd42aef73ba564" translate="yes" xml:space="preserve">
          <source>Machine Learning Capability Mapping</source>
          <target state="translated">기계 학습 기능 매핑</target>
        </trans-unit>
        <trans-unit id="4aaab7e45d60d8771ea82f58c210864d267af4df" translate="yes" xml:space="preserve">
          <source>More complex</source>
          <target state="translated">더 복잡한</target>
        </trans-unit>
        <trans-unit id="b0b968f930a2fe0f1a460631e5afb02a1019e96d" translate="yes" xml:space="preserve">
          <source>Parametrised Intent</source>
          <target state="translated">매개 변수화 된 의도</target>
        </trans-unit>
        <trans-unit id="866a1ffbcb2a016111dac6020436b0f953d5aff0" translate="yes" xml:space="preserve">
          <source>Project Hadron is a change of approach in terms of improving productivity of the data
scientists. This approach deconstructs the machine learning discovery vertical into a set of capabilities, ideas and
knowledge.  It presents a completely novel approach to the traditional process automation and model wrapping that is
broadly offered as a solution to solve the considerable challenges that currently restrict the effectiveness of
machine learning in the enterprise business.</source>
          <target state="translated">프로젝트 Hadron은 데이터 과학자의 생산성 향상 측면에서 접근 방식의 변화입니다. 이 접근 방식은 기계 학습 발견 수직을 기능, 아이디어 및 지식의 집합으로 분해합니다. 현재 엔터프라이즈 비즈니스에서 머신 러닝의 효율성을 제한하는 상당한 과제를 해결하기위한 솔루션으로 광범위하게 제공되는 기존 프로세스 자동화 및 모델 래핑에 대한 완전히 새로운 접근 방식을 제시합니다.</target>
        </trans-unit>
        <trans-unit id="88b4b20002cf3fb615168325b357eee7751139f0" translate="yes" xml:space="preserve">
          <source>Project Hadron is based on &amp;lsquo;Augmented Intent - Single Task Adaptive Components&amp;rsquo; (AI-STAC) is a unique approach to
data recovery, discovery, synthesis and modeling that innovates the approach to data science and it&amp;rsquo;s transition to
production. it&amp;rsquo;s origins came from an incubator project that shadowed a team of Ph.D. data scientists in connection
with the development and delivery of machine learning initiatives to define measurable benefit propositions for
customer success. From this, a number of observable &amp;lsquo;capabilities&amp;rsquo; were identified as unique and separate concerns.
The challenges of the data scientist, and in turn the production teams, were to effectively leveraging that separation
of concern and distribute and loosely couple the specialist capability needs to the appropriate skills set.</source>
          <target state="translated">Project Hadron은 'Augmented Intent-Single Task Adaptive Components'(AI-STAC)를 기반으로하며 데이터 과학에 대한 접근 방식을 혁신하고 프로덕션으로 전환하는 데이터 복구, 발견, 합성 및 모델링에 대한 고유 한 접근 방식입니다. 그 기원은 Ph.D 팀을 숨긴 인큐베이터 프로젝트에서 비롯되었습니다. 고객 성공을위한 측정 가능한 이익 제안을 정의하기 위해 머신 러닝 이니셔티브의 개발 및 제공과 관련된 데이터 과학자. 이로부터 관찰 가능한 많은 '기능'이 고유하고 별개의 관심사로 식별되었습니다. 데이터 과학자와 생산 팀의 과제는 우려 사항의 분리를 효과적으로 활용하고 전문가 역량을 적절한 기술 세트에 느슨하게 연결하는 것이 었습니다.</target>
        </trans-unit>
        <trans-unit id="2fd4fa0c71446cd8cfb5d7e25e51865d87981710" translate="yes" xml:space="preserve">
          <source>Python 2.6 and 2.7 are not supported nor is Python 3.5. Although Python 3.6 is supported, it is recommended to install</source>
          <target state="translated">Python 2.6 및 2.7은 지원되지 않으며 Python 3.5도 지원되지 않습니다. Python 3.6이 지원되지만 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3f095aefc4f5ecd63cfbd3f5ce2e22c4bafac5f1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/project-hadron/aistac-foundation/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/project-hadron/aistac-foundation/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="3584de7b8f56d8214030eba6561ff1bc74d09264" translate="yes" xml:space="preserve">
          <source>The Class initialisation is abstracted and is the only abstracted method. A concrete implementation of the
overloaded</source>
          <target state="translated">클래스 초기화는 추상화되며 유일한 추상화 방법입니다. 과부하의 구체적인 구현</target>
        </trans-unit>
        <trans-unit id="8d9e27ad1067ef3e67b45519ac870151f571a3e5" translate="yes" xml:space="preserve">
          <source>The best way to install this package is directly from the Python Package Index repository using pip</source>
          <target state="translated">이 패키지를 설치하는 가장 좋은 방법은 pip를 사용하여 Python Package Index 저장소에서 직접 가져 오는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ba449176d21e12f0b21747267e90a66168d9bb29" translate="yes" xml:space="preserve">
          <source>The following is a code snippet of setting a ConnectorContract and loading its content</source>
          <target state="translated">다음은 ConnectorContract를 설정하고 해당 콘텐츠를로드하는 코드 스 니펫입니다.</target>
        </trans-unit>
        <trans-unit id="8a86eeedbf5b7cc4ac766b2861994b9e986f6ee8" translate="yes" xml:space="preserve">
          <source>The package looks to build a set of outputs as part of standard data wrangling and ML exploration
that, by their nature, are familiar tools to the various reliant people and processes. For example
Data dictionaries for SME&amp;rsquo;s, Visual representations for clients and stakeholders and configuration
contracts for architects, tool builders and data ingestion.</source>
          <target state="translated">이 패키지는 본질적으로 다양한 의존하는 사람과 프로세스에 익숙한 도구 인 표준 데이터 랭 글링 및 ML 탐색의 일부로 출력 세트를 빌드합니다. 예를 들어 SME 용 데이터 사전, 클라이언트 및 이해 관계자를위한 시각적 표현, 설계자, 도구 빌더 및 데이터 수집을위한 구성 계약.</target>
        </trans-unit>
        <trans-unit id="4633582420520921b0fe54d53d8d1e5c492149ee" translate="yes" xml:space="preserve">
          <source>The property manager is not responsible for persisting the properties but provides the methods to load and persist
its in memory structure. To initialise the load and persist a ConnectorContract must be set up.</source>
          <target state="translated">속성 관리자는 속성 유지에 대한 책임이 없지만 메모리 구조에서로드하고 유지하는 메서드를 제공합니다. 로드를 초기화하고 지속하려면 ConnectorContract를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe1cacb6ab711e06c879496343eb4d54a89f3d4b" translate="yes" xml:space="preserve">
          <source>To achieve this, the project offers advanced and specialized programming methods that are unique in approach and novel
while maintaining familiarity within common tooling can be identified in four constructs.</source>
          <target state="translated">이를 달성하기 위해 프로젝트는 접근 방식이 독특하고 참신한 고급 및 전문 프로그래밍 방법을 제공하는 동시에 공통 도구 내에서 친숙 함을 유지하는 것은 네 가지 구성으로 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11888901be7cabb0a9d9ddd688aed7497d4d4fd0" translate="yes" xml:space="preserve">
          <source>To implement a new remote class Factory Method follow the method naming convention &amp;lsquo;_from_remote_&amp;lt;schema&amp;gt;()&amp;rsquo;
where &amp;lt;schema&amp;gt; is the uri schema name. this method should be a @classmethod and return a tuple of
module_name and handler.</source>
          <target state="translated">새로운 원격 클래스 팩토리 메소드를 구현하려면 메소드 명명 규칙 '_from_remote_ &amp;lt;schema&amp;gt; ()'를 따르십시오. 여기서 &amp;lt;schema&amp;gt;는 uri 스키마 이름입니다. 이 메소드는 @classmethod 여야하며 module_name 및 핸들러의 튜플을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="6bf4049bcfea2f5e04573401ff2b05cf801f81d9" translate="yes" xml:space="preserve">
          <source>When using the property manager it will not automatically persist its properties and must be explicitely managed in
the component class. This removes the persist decision making away from the property manager. To persist the
properties use the method call</source>
          <target state="translated">속성 관리자를 사용하면 속성이 자동으로 유지되지 않으며 구성 요소 클래스에서 명시 적으로 관리되어야합니다. 이렇게하면 속성 관리자로부터 지속적인 의사 결정이 제거됩니다. 속성을 유지하려면 메서드 호출을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1939f247b3ae06244a8d50fa7dabbcc975c6fc4c" translate="yes" xml:space="preserve">
          <source>__init__</source>
          <target state="translated">__init__</target>
        </trans-unit>
        <trans-unit id="c0f0a333afe51fe39af27a80ab08125f6e8c40f4" translate="yes" xml:space="preserve">
          <source>_init_properties(...)</source>
          <target state="translated">_init_properties (...)</target>
        </trans-unit>
        <trans-unit id="6bb80fff9fd27f82a0d5cc30ad4dbd8f28388c90" translate="yes" xml:space="preserve">
          <source>_intent_builder(...)</source>
          <target state="translated">_intent_builder (...)</target>
        </trans-unit>
        <trans-unit id="ece5d61cd3c036a551beae1b0c03214c96ebdc74" translate="yes" xml:space="preserve">
          <source>_set_intend_signature(...)</source>
          <target state="translated">_set_intend_signature (...)</target>
        </trans-unit>
        <trans-unit id="915032717c67e84b7459ee925a622289b45be5c5" translate="yes" xml:space="preserve">
          <source>adds a catalog key to the restricted catalog keys.</source>
          <target state="translated">제한된 카탈로그 키에 카탈로그 키를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="df5431f2014b80f85c8b367e58d23476ba37b343" translate="yes" xml:space="preserve">
          <source>adds a key
property reference to the root of the properties and can be referenced directly with</source>
          <target state="translated">속성의 루트에 키 속성 참조를 추가하고 다음으로 직접 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e9c1869efe03216e760f53204f1399cfbd0d70" translate="yes" xml:space="preserve">
          <source>against the latest Python 3.7&amp;gt; whenever possible.
Python 3 is the default for Homebrew installations starting with version 0.9.4.</source>
          <target state="translated">가능한 한 최신 Python 3.7&amp;gt;에 대해. Python 3은 버전 0.9.4부터 Homebrew 설치의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="b6934de966153c6aa596b4841ccc0bb70f7e356e" translate="yes" xml:space="preserve">
          <source>aistac-foundation</source>
          <target state="translated">Aistac 재단</target>
        </trans-unit>
        <trans-unit id="d401c2d007d34f81592fb9a0acf78ec67b25dc0c" translate="yes" xml:space="preserve">
          <source>aistac-foundation: &lt;a href=&quot;https://github.com/project-hadron/aistac-foundation&quot;&gt;https://github.com/project-hadron/aistac-foundation&lt;/a&gt;.</source>
          <target state="translated">aistac-foundation : &lt;a href=&quot;https://github.com/project-hadron/aistac-foundation&quot;&gt;https://github.com/project-hadron/aistac-foundation&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="c371d021e913ff51464256510dd93eb4ddfd4912" translate="yes" xml:space="preserve">
          <source>base.primary_key</source>
          <target state="translated">base.primary_key</target>
        </trans-unit>
        <trans-unit id="52c8f5812c77efd43677e7bffd110b9b547ac28d" translate="yes" xml:space="preserve">
          <source>base.secondary_key</source>
          <target state="translated">base.secondary_key</target>
        </trans-unit>
        <trans-unit id="e38efa87e9cdad2f184e3068e995a9db2160d0f0" translate="yes" xml:space="preserve">
          <source>boolean and a</source>
          <target state="translated">부울 및</target>
        </trans-unit>
        <trans-unit id="6d0314e16634e1f851b1ba2db14d95ad5ddaeee3" translate="yes" xml:space="preserve">
          <source>class is a foundation class for the component build. It provides an encapsulated view of
the Property Management and Parameterised Intent</source>
          <target state="translated">class는 구성 요소 빌드의 기초 클래스입니다. 속성 관리 및 매개 변수화 된 의도에 대한 캡슐화 된보기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f366b0b1f8c4ea779affc513922a5d05e9ff540e" translate="yes" xml:space="preserve">
          <source>constructs, where a grouping of keys might be desirable, passing a dictionary of name
value pairs as part of the list allows a root base to group related next level keys. For example</source>
          <target state="translated">키 그룹화가 바람직 할 수있는 구성, 목록의 일부로 이름 값 쌍 사전을 전달하면 루트 기반이 관련된 다음 레벨 키를 그룹화 할 수 있습니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="733acbda533c96f5a818f1efa1b9220f8e741eef" translate="yes" xml:space="preserve">
          <source>default_intent_level</source>
          <target state="translated">default_intent_level</target>
        </trans-unit>
        <trans-unit id="1fcc919f7e1d3390dd6d17ac725d78b46a3253fd" translate="yes" xml:space="preserve">
          <source>default_save_intent</source>
          <target state="translated">default_save_intent</target>
        </trans-unit>
        <trans-unit id="11ab8daec55f9956e073ab0d05f1a95ed457d4d3" translate="yes" xml:space="preserve">
          <source>facilitates the Parameterised Intent, giving the base methods to record and replay intent.</source>
          <target state="translated">Parameterised Intent를 용이하게하여 의도를 기록하고 재생하는 기본 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d25e94af8c2c8921363fc78b1d42665b8c16244f" translate="yes" xml:space="preserve">
          <source>facilitates the management of all the contract properties  including that of the
connector handlers, parameterised intent and Augmented Knowledge</source>
          <target state="translated">커넥터 핸들러, 매개 변수화 된 의도 및 증강 지식을 포함한 모든 계약 속성의 관리를 용이하게합니다.</target>
        </trans-unit>
        <trans-unit id="12f8efe6978bdc7fc400fb035c9a2a19a7717e1d" translate="yes" xml:space="preserve">
          <source>for this construct. The</source>
          <target state="translated">이 구조를 위해. 그만큼</target>
        </trans-unit>
        <trans-unit id="c9a71f07696c42e051e1385147ebcdd7984a31a3" translate="yes" xml:space="preserve">
          <source>from_env(...)</source>
          <target state="translated">from_env (...)</target>
        </trans-unit>
        <trans-unit id="87feb63014fa0c7ed04680616bab7226f6a52b08" translate="yes" xml:space="preserve">
          <source>from_uri(...)</source>
          <target state="translated">from_uri (...)</target>
        </trans-unit>
        <trans-unit id="8fb6bb6d249572bdbf89928f67eddc5f88e10ea1" translate="yes" xml:space="preserve">
          <source>if you want to upgrade your current version then using pip</source>
          <target state="translated">현재 버전을 업그레이드하려면 pip를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bcc1c22721415c54682c50f5c4b2481ebe8aca8f" translate="yes" xml:space="preserve">
          <source>in order to define the run pattern for the component task</source>
          <target state="translated">구성 요소 작업에 대한 실행 패턴을 정의하기 위해</target>
        </trans-unit>
        <trans-unit id="bf080f7907000124f8e81cf154b25d0715764c15" translate="yes" xml:space="preserve">
          <source>intent_param_exclude</source>
          <target state="translated">intent_param_exclude</target>
        </trans-unit>
        <trans-unit id="3f784f49502435a02d4eac52c8df692e5d493a2e" translate="yes" xml:space="preserve">
          <source>is an abstracted method
that defines the run pipeline of the intent.</source>
          <target state="translated">인 텐트의 실행 파이프 라인을 정의하는 추상화 된 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="1547d3cbfebe55146e18a64e35d37c4e71ab60ae" translate="yes" xml:space="preserve">
          <source>it is creating a construct initialisation to allow for the control and definition of an</source>
          <target state="translated">제어 및 정의를 허용하는 구성 초기화를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f11c10413aab69c09237cd85b184f6c4a1fc1b54" translate="yes" xml:space="preserve">
          <source>knowledge_key</source>
          <target state="translated">지식 _ 키</target>
        </trans-unit>
        <trans-unit id="d4089c732d5b338cd66e8b11f7ee8d02933d5ae3" translate="yes" xml:space="preserve">
          <source>list,</source>
          <target state="translated">명부,</target>
        </trans-unit>
        <trans-unit id="062ec143b012d7846fd249d20148850c49670939" translate="yes" xml:space="preserve">
          <source>manages the</source>
          <target state="translated">관리</target>
        </trans-unit>
        <trans-unit id="89b5453393be011c28304677631c787cbf6fd4c4" translate="yes" xml:space="preserve">
          <source>methods to set the properties connector</source>
          <target state="translated">속성 커넥터를 설정하는 방법</target>
        </trans-unit>
        <trans-unit id="126dc2cb6ed2eaa206f6222d59a4410d966d3c2b" translate="yes" xml:space="preserve">
          <source>package install</source>
          <target state="translated">패키지 설치</target>
        </trans-unit>
        <trans-unit id="579c681d2addfe864a7282487d529bf4a36cb68b" translate="yes" xml:space="preserve">
          <source>persist_properties()</source>
          <target state="translated">persist_properties ()</target>
        </trans-unit>
        <trans-unit id="2a68b6131c574194e46a97c3b83455bad8cce450" translate="yes" xml:space="preserve">
          <source>root_key</source>
          <target state="translated">root_key</target>
        </trans-unit>
        <trans-unit id="ad79d34bf406ac2b66ff0f6c9d52a9654c83369d" translate="yes" xml:space="preserve">
          <source>run_intent_pipeline(...)</source>
          <target state="translated">run_intent_pipeline (...)</target>
        </trans-unit>
        <trans-unit id="9cbdbd87569c1ee9c9f2fcee7ecc59f6481dd817" translate="yes" xml:space="preserve">
          <source>the
second being an abstract method. This factory method initialises the concrete PropertyManager and IntentModel
classes and should use the parent</source>
          <target state="translated">두 번째는 추상적 인 방법입니다. 이 팩토리 메서드는 구체적인 PropertyManager 및 IntentModel 클래스를 초기화하며 부모</target>
        </trans-unit>
        <trans-unit id="befad9abb9a5375db8e47e1d73f1ce1460d081e2" translate="yes" xml:space="preserve">
          <source>to the list of keys.</source>
          <target state="translated">키 목록에.</target>
        </trans-unit>
        <trans-unit id="345c822266c73d960e7e049d7d44d3fac7c7ec19" translate="yes" xml:space="preserve">
          <source>value.</source>
          <target state="translated">값.</target>
        </trans-unit>
        <trans-unit id="8244267d76ea66adb3d3dc4686a1ee8a22a782ab" translate="yes" xml:space="preserve">
          <source>would add</source>
          <target state="translated">추가 할 것이다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
