<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/kotlin-jupyter-kernel/">
    <body>
      <group id="kotlin-jupyter-kernel">
        <trans-unit id="e449df9ed360cee162d4183283fb925a7c6e38e2" translate="yes" xml:space="preserve">
          <source>*All fields are optional</source>
          <target state="translated">* 모든 필드는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="6fd25beec38ddde8db8d7ff00560bd5bb5efccca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/JetBrains/Exposed&quot;&gt;exposed&lt;/a&gt; - Kotlin SQL framework</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/Exposed&quot;&gt;노출&lt;/a&gt; -Kotlin SQL 프레임 워크</target>
        </trans-unit>
        <trans-unit id="26b40a809ee6be82984222a8b1b800824791ca83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/JetBrains/lets-plot-kotlin&quot;&gt;lets-plot&lt;/a&gt; - ggplot-like interactive visualization for Kotlin</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JetBrains/lets-plot-kotlin&quot;&gt;lets-plot&lt;/a&gt; -Kotlin 용 ggplot과 유사한 대화 형 시각화</target>
        </trans-unit>
        <trans-unit id="8ccb7c28e7427d0618b6c8d910e1947ddfc60b26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Kotlin/kotlin-numpy&quot;&gt;numpy&lt;/a&gt; - Kotlin wrapper for Python NumPy package</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Kotlin/kotlin-numpy&quot;&gt;numpy&lt;/a&gt; -Python NumPy 패키지 용 Kotlin 래퍼</target>
        </trans-unit>
        <trans-unit id="6052c39d04444798496bedec8d007bd53f312a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/apache/spark&quot;&gt;spark&lt;/a&gt; - Unified analytics engine for large-scale data processing</source>
          <target state="translated">&lt;a href=&quot;https://github.com/apache/spark&quot;&gt;spark-&lt;/a&gt; 대규모 데이터 처리를위한 통합 분석 엔진</target>
        </trans-unit>
        <trans-unit id="7613dd7fce318bbb1b1ee6e9d924c2e26c35a92f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cbeust/klaxon&quot;&gt;klaxon&lt;/a&gt; - JSON parser for Kotlin</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cbeust/klaxon&quot;&gt;klaxon&lt;/a&gt; -Kotlin 용 JSON 파서</target>
        </trans-unit>
        <trans-unit id="c0b0302662ef049ffe71fbac1162154e89af7cad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/eclipse/deeplearning4j&quot;&gt;deeplearning4j&lt;/a&gt; - Deep learning library for the JVM</source>
          <target state="translated">&lt;a href=&quot;https://github.com/eclipse/deeplearning4j&quot;&gt;deeplearning4j&lt;/a&gt; -JVM 용 딥 러닝 라이브러리</target>
        </trans-unit>
        <trans-unit id="236a81db4002d36b380e4569558f18bae0d86444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/eseifert/gral&quot;&gt;gral&lt;/a&gt; - Java library for displaying plots</source>
          <target state="translated">&lt;a href=&quot;https://github.com/eseifert/gral&quot;&gt;gral-&lt;/a&gt; 플롯을 표시하기위한 Java 라이브러리</target>
        </trans-unit>
        <trans-unit id="8c6f6915e6e79249838e4d4c86b0dce2bc9aa24b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/haifengl/smile&quot;&gt;smile&lt;/a&gt; - Statistical Machine Intelligence and Learning Engine</source>
          <target state="translated">&lt;a href=&quot;https://github.com/haifengl/smile&quot;&gt;smile-&lt;/a&gt; 통계 기계 지능 및 학습 엔진</target>
        </trans-unit>
        <trans-unit id="9615b1f35107f061b4300384e63f72a3e5995468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/holgerbrandl/krangl&quot;&gt;krangl&lt;/a&gt; - Kotlin DSL for data wrangling</source>
          <target state="translated">&lt;a href=&quot;https://github.com/holgerbrandl/krangl&quot;&gt;krangl-&lt;/a&gt; 데이터 랭 글링을 위한 Kotlin DSL</target>
        </trans-unit>
        <trans-unit id="07c1b9be3de9c04b40539b0fc4bf53ff90c566f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/holgerbrandl/kravis&quot;&gt;kravis&lt;/a&gt; - Kotlin grammar for data visualization</source>
          <target state="translated">&lt;a href=&quot;https://github.com/holgerbrandl/kravis&quot;&gt;kravis-&lt;/a&gt; 데이터 시각화를위한 Kotlin 문법</target>
        </trans-unit>
        <trans-unit id="79450a0ab9df075d4349452cc452d1b92dac5534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mipt-npm/kmath&quot;&gt;kmath&lt;/a&gt; - Kotlin mathematical library analogous to NumPy</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mipt-npm/kmath&quot;&gt;kmath&lt;/a&gt; -NumPy와 유사한 Kotlin 수학 라이브러리</target>
        </trans-unit>
        <trans-unit id="9ec7bea2ccf7291a2f8d9712d79a1b1241ecd569" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mysql/mysql-connector-j&quot;&gt;mysql&lt;/a&gt; - MySql JDBC Connector</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mysql/mysql-connector-j&quot;&gt;mysql&lt;/a&gt; -MySql JDBC 커넥터</target>
        </trans-unit>
        <trans-unit id="01e4d1acd4c3dac7acce10a838b162fda17c487b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/thomasnield/kotlin-statistics&quot;&gt;kotlin-statistics&lt;/a&gt; - Idiomatic statistical operators for Kotlin</source>
          <target state="translated">&lt;a href=&quot;https://github.com/thomasnield/kotlin-statistics&quot;&gt;kotlin-statistics-&lt;/a&gt; Kotlin 용 관용적 통계 연산자</target>
        </trans-unit>
        <trans-unit id="9f470e6e8d0bcabba9f7ce60b192628410568022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://koma.kyonifer.com/index.html&quot;&gt;koma&lt;/a&gt; - Scientific computing library</source>
          <target state="translated">&lt;a href=&quot;https://koma.kyonifer.com/index.html&quot;&gt;koma-&lt;/a&gt; 과학 컴퓨팅 라이브러리</target>
        </trans-unit>
        <trans-unit id="6631e6af35bda9b5b10dc3227133fb0c36bab260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://kotlinlang.org/&quot;&gt;Kotlin&lt;/a&gt; (1.4.0) kernel for &lt;a href=&quot;https://jupyter.org&quot;&gt;Jupyter&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://kotlinlang.org/&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://jupyter.org&quot;&gt;Jupyter&lt;/a&gt; 용 Kotlin (1.4.0) 커널 .</target>
        </trans-unit>
        <trans-unit id="991f3e03c95edd5241b65360d7de46ec7f6ef6de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;libraries&quot;&gt;libraries&lt;/a&gt; directory at the latest master branch of &lt;code&gt;https://github.com/Kotlin/kotlin-jupyter&lt;/code&gt; repository</source>
          <target state="translated">&lt;a href=&quot;libraries&quot;&gt;&lt;/a&gt; &lt;code&gt;https://github.com/Kotlin/kotlin-jupyter&lt;/code&gt; 저장소 의 최신 마스터 브랜치에있는 라이브러리 디렉토리</target>
        </trans-unit>
        <trans-unit id="c16c9f8e27586a95c049be716a473476aa587ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%output [options]&lt;/code&gt; - output capturing settings.</source>
          <target state="translated">&lt;code&gt;%output [options]&lt;/code&gt; -출력 캡처 설정.</target>
        </trans-unit>
        <trans-unit id="c81bb04a328419b606ad69925f6d410647c6bdc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%trackClasspath&lt;/code&gt; - logs any changes of current classpath. Useful for debugging artifact resolution failures</source>
          <target state="translated">&lt;code&gt;%trackClasspath&lt;/code&gt; 현재 클래스 경로의 변경 사항을 기록합니다. 아티팩트 해결 실패 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="45d9ada3245267f4f525e76ef2a823d2d5c3cef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%trackExecution&lt;/code&gt; - logs pieces of code that are going to be executed. Useful for debugging of libraries support</source>
          <target state="translated">&lt;code&gt;%trackExecution&lt;/code&gt; 실행될 코드 조각을 기록합니다. 라이브러리 지원 디버깅에 유용</target>
        </trans-unit>
        <trans-unit id="cb21230339e90cc02b4d59ed09a07064961ac019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%use &amp;lt;lib1&amp;gt;, &amp;lt;lib2&amp;gt; ...&lt;/code&gt; - injects code for supported libraries: artifact resolution, default imports, initialization code, type renderers</source>
          <target state="translated">&lt;code&gt;%use &amp;lt;lib1&amp;gt;, &amp;lt;lib2&amp;gt; ...&lt;/code&gt; 지원되는 라이브러리에 대한 코드 삽입 : 아티팩트 해결, 기본 가져 오기, 초기화 코드, 유형 렌더러</target>
        </trans-unit>
        <trans-unit id="ce405227103d4aec9d0d0cff23861f9df488b1d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:classpath&lt;/code&gt; - displays current classpath</source>
          <target state="translated">&lt;code&gt;:classpath&lt;/code&gt; - 현재 클래스 경로를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fa4046d015486fded29e5a06b3738f4c218fcc12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:help&lt;/code&gt; - displays REPL commands help</source>
          <target state="translated">&lt;code&gt;:help&lt;/code&gt; -REPL 명령 도움말을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0c61dd8088b9ca5c10503028e63c6b6b7844b0c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@file:DependsOn(&amp;lt;coordinates&amp;gt;)&lt;/code&gt; - adds artifacts to classpath. Supports absolute and relative paths to class directories or jars, ivy and maven artifacts represented by colon separated string</source>
          <target state="translated">&lt;code&gt;@file:DependsOn(&amp;lt;coordinates&amp;gt;)&lt;/code&gt; -클래스 경로에 아티팩트를 추가합니다. 콜론으로 구분 된 문자열로 표시되는 클래스 디렉토리 또는 jar, ivy 및 maven 아티팩트에 대한 절대 및 상대 경로를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d20a0ca3090dbdef81adbcc1b20c4e35ba9b00f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@file:Repository(&amp;lt;absolute-path&amp;gt;)&lt;/code&gt; - adds a directory for relative path resolution or ivy/maven repository.
To specify Maven local, use &lt;code&gt;@file:Repository(&quot;*mavenLocal&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@file:Repository(&amp;lt;absolute-path&amp;gt;)&lt;/code&gt; -상대 경로 확인 또는 ivy / maven 저장소를위한 디렉토리를 추가합니다. Maven 로컬을 지정하려면 &lt;code&gt;@file:Repository(&quot;*mavenLocal&quot;)&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1001af5afbd4dae4823b66dd315adb133e8f30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt;: fully-qualified class name for the type to be rendered</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; : 렌더링 할 유형의 정규화 된 클래스 이름</target>
        </trans-unit>
        <trans-unit id="a0145af95c71e481c97dd73eabc41eca20702894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conda install -c jetbrains kotlin-jupyter-kernel&lt;/code&gt; (&lt;a href=&quot;https://anaconda.org/jetbrains/kotlin-jupyter-kernel&quot;&gt;package home&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;conda install -c jetbrains kotlin-jupyter-kernel&lt;/code&gt; ( &lt;a href=&quot;https://anaconda.org/jetbrains/kotlin-jupyter-kernel&quot;&gt;패키지 홈&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ac0c47c2cc3b667a23d17f561e23c28e74e1e691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conda install -c jetbrains-dev kotlin-jupyter-kernel&lt;/code&gt; (&lt;a href=&quot;https://anaconda.org/jetbrains-dev/kotlin-jupyter-kernel&quot;&gt;package home&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;conda install -c jetbrains-dev kotlin-jupyter-kernel&lt;/code&gt; ( &lt;a href=&quot;https://anaconda.org/jetbrains-dev/kotlin-jupyter-kernel&quot;&gt;패키지 홈&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e50f3f8d924e67fc35b333cb9edceb7170053b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt;: a list of library dependencies</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; : 라이브러리 종속성 목록</target>
        </trans-unit>
        <trans-unit id="34da6114a009b08e1b9f31b380b95502c2947510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt;: a list of default imports for library</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; : 라이브러리의 기본 가져 오기 목록</target>
        </trans-unit>
        <trans-unit id="66fdb2b4112f12a308bbc3202fee28b53bfb561a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: a list of code snippets to be executed when library is included</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; : 라이브러리가 포함될 때 실행할 코드 스 니펫 목록</target>
        </trans-unit>
        <trans-unit id="952d1d263c4fed41eedb9181055b4e1b53cd586d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initCell&lt;/code&gt;: a list of code snippets to be executed before execution of any cell</source>
          <target state="translated">&lt;code&gt;initCell&lt;/code&gt; : 셀 실행 전에 실행할 코드 스 니펫 목록</target>
        </trans-unit>
        <trans-unit id="661be96a4204c8c71ed20d7505fe3a9512cea366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&lt;/code&gt;: a link to library homepage. This link will be displayed in &lt;code&gt;:help&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; : 도서관 홈페이지 링크. 이 링크는 &lt;code&gt;:help&lt;/code&gt; 명령에 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="898153d2361c2bba4765c641fc22fb413264a615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minKernelVersion&lt;/code&gt;: a minimal version of Kotlin kernel which may be used with this descriptor</source>
          <target state="translated">&lt;code&gt;minKernelVersion&lt;/code&gt; :이 설명자와 함께 사용할 수있는 Kotlin 커널의 최소 버전</target>
        </trans-unit>
        <trans-unit id="926fc67c5b500850da4acdd89f94caaacedbe2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties&lt;/code&gt;: a dictionary of properties that are used within library descriptor</source>
          <target state="translated">&lt;code&gt;properties&lt;/code&gt; : 라이브러리 설명자 내에서 사용되는 속성 사전</target>
        </trans-unit>
        <trans-unit id="33d0e353825f2c7c99841617ca5c8e309f3ed2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;renderers&lt;/code&gt;: a list of type converters for special rendering of particular types</source>
          <target state="translated">&lt;code&gt;renderers&lt;/code&gt; : 특정 유형의 특수 렌더링을위한 유형 변환기 목록</target>
        </trans-unit>
        <trans-unit id="608032b90700122eb81321faa03720f225a427b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repositories&lt;/code&gt;: a list of maven or ivy repositories to search for dependencies</source>
          <target state="translated">&lt;code&gt;repositories&lt;/code&gt; : 종속성을 검색하기위한 Maven 또는 ivy 저장소 목록</target>
        </trans-unit>
        <trans-unit id="2f39a557673f1f0e21cf469059dc4a64dc157a69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result&lt;/code&gt;: expression that produces output value. Source object is referenced as &lt;code&gt;$it&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;result&lt;/code&gt; : 출력값을 생성하는 표현식. 소스 개체는 &lt;code&gt;$it&lt;/code&gt; 로 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="41f127bad4392aed664ca5ab634d5b3455b20218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutdown&lt;/code&gt;: a list of code snippets to be executed on kernel shutdown. Any cleanup code goes here</source>
          <target state="translated">&lt;code&gt;shutdown&lt;/code&gt; : 커널 종료시 실행할 코드 스 니펫 목록입니다. 모든 정리 코드가 여기에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a4a8a636193d35e9bbbede14dbd7014dec9651cf" translate="yes" xml:space="preserve">
          <source>Adding new libraries</source>
          <target state="translated">새 라이브러리 추가</target>
        </trans-unit>
        <trans-unit id="7c4bc52ea6254d2318ba57f9976329ea69a4c174" translate="yes" xml:space="preserve">
          <source>Alpha version. Tested with Jupyter 6.0.1 on OS X so far.</source>
          <target state="translated">알파 버전. 지금까지 OS X에서 Jupyter 6.0.1로 테스트했습니다.</target>
        </trans-unit>
        <trans-unit id="77e34557d12c3934ebab000ce624a714a763e5d1" translate="yes" xml:space="preserve">
          <source>Attach remote debugger to JVM with specified port</source>
          <target state="translated">지정된 포트로 JVM에 원격 디버거 연결</target>
        </trans-unit>
        <trans-unit id="a4696360f61ce7b39a54fa976acbcf3c37e4dd61" translate="yes" xml:space="preserve">
          <source>Autocompletion</source>
          <target state="translated">자동 완성</target>
        </trans-unit>
        <trans-unit id="f022ffd76ed8f5a3bdc1662ecb7c2a5dcb5ed363" translate="yes" xml:space="preserve">
          <source>Bintray JCenter</source>
          <target state="translated">Bintray JCenter</target>
        </trans-unit>
        <trans-unit id="5845f490b77ee2875b356e425f3ab80308f6d9c1" translate="yes" xml:space="preserve">
          <source>By default the return values from REPL statements are displayed in the text form. To use richer representations, e.g.
to display graphics or html, it is possible to send MIME-encoded result to the client using the &lt;code&gt;MIME&lt;/code&gt; helper function:</source>
          <target state="translated">기본적으로 REPL 문의 반환 값은 텍스트 형식으로 표시됩니다. 예를 들어 그래픽 또는 html을 표시하기 위해 더 풍부한 표현을 사용하려면 &lt;code&gt;MIME&lt;/code&gt; 도우미 기능을 사용하여 MIME 인코딩 결과를 클라이언트에 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2b454fa9e66e8689e9a58a06bee046a5f76292d" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;libraries&quot;&gt;libraries&lt;/a&gt; directory to see examples of library descriptors.</source>
          <target state="translated">확인 &lt;a href=&quot;libraries&quot;&gt;라이브러리&lt;/a&gt; 라이브러리 설명의 예를 참조하는 디렉토리.</target>
        </trans-unit>
        <trans-unit id="ecf2e3b26ea2414a35178b19b8880b296c3d6d18" translate="yes" xml:space="preserve">
          <source>Conda</source>
          <target state="translated">콘다</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">디버깅</target>
        </trans-unit>
        <trans-unit id="591f6ee0f17464560bfe7ba51e8c397d805bdafa" translate="yes" xml:space="preserve">
          <source>Default installation path is &lt;code&gt;~/.ipython/kernels/kotlin/&lt;/code&gt;. To install to some other location use option &lt;code&gt;-PinstallPath=&lt;/code&gt;, but note that Jupyter looks for kernel specs files only in predefined places</source>
          <target state="translated">기본 설치 경로는 &lt;code&gt;~/.ipython/kernels/kotlin/&lt;/code&gt; 입니다. 다른 위치에 설치하려면 &lt;code&gt;-PinstallPath=&lt;/code&gt; 옵션을 사용 하지만 Jupyter는 미리 정의 된 위치에서만 커널 사양 파일을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="1d36764022c37557f6f0f1cf3711482d131fdde2" translate="yes" xml:space="preserve">
          <source>Default repositories</source>
          <target state="translated">기본 저장소</target>
        </trans-unit>
        <trans-unit id="8e60b30e19f7a16d75a4698a89f9003c8b41abf8" translate="yes" xml:space="preserve">
          <source>Dependencies resolving annotations</source>
          <target state="translated">주석을 해결하는 종속성</target>
        </trans-unit>
        <trans-unit id="c07eabacb63f23bc8d4ec85d3892522efab9c340" translate="yes" xml:space="preserve">
          <source>Dev:
&lt;code&gt;pip install -i https://test.pypi.org/simple/ kotlin-jupyter-kernel&lt;/code&gt; (&lt;a href=&quot;https://test.pypi.org/project/kotlin-jupyter-kernel/&quot;&gt;package home&lt;/a&gt;)</source>
          <target state="translated">개발자 : &lt;code&gt;pip install -i https://test.pypi.org/simple/ kotlin-jupyter-kernel&lt;/code&gt; ( &lt;a href=&quot;https://test.pypi.org/project/kotlin-jupyter-kernel/&quot;&gt;패키지 홈&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">예 :</target>
        </trans-unit>
        <trans-unit id="4a74fe173067b193537b553d49e87839ff7100c1" translate="yes" xml:space="preserve">
          <source>Error analysis</source>
          <target state="translated">오류 분석</target>
        </trans-unit>
        <trans-unit id="c0d3e6ce94a8a88990b892852dd284d0f8122e07" translate="yes" xml:space="preserve">
          <source>Example notebooks can be found in the &lt;a href=&quot;samples&quot;&gt;samples&lt;/a&gt; folder</source>
          <target state="translated">예제 노트북은 &lt;a href=&quot;samples&quot;&gt;샘플&lt;/a&gt; 폴더 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea25deeccee9ee19f6a4cb4ea9a7cfc977066514" translate="yes" xml:space="preserve">
          <source>Fields for type renderer:</source>
          <target state="translated">유형 렌더러에 대한 필드 :</target>
        </trans-unit>
        <trans-unit id="9521a557a3a477394694addff9603af11073d8e0" translate="yes" xml:space="preserve">
          <source>For private usage - add it to local settings folder &lt;code&gt;&amp;lt;UserHome&amp;gt;/.jupyter_kotlin/libraries&lt;/code&gt;</source>
          <target state="translated">개인용-로컬 설정 폴더 &lt;code&gt;&amp;lt;UserHome&amp;gt;/.jupyter_kotlin/libraries&lt;/code&gt; 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="f46053399605bc3317690bfd64484ee47cccde2b" translate="yes" xml:space="preserve">
          <source>For sharing with community - commit it to &lt;a href=&quot;libraries&quot;&gt;libraries&lt;/a&gt; directory and create pull request.</source>
          <target state="translated">커뮤니티와 공유하려면 &lt;a href=&quot;libraries&quot;&gt;라이브러리&lt;/a&gt; 디렉토리에 커밋하고 풀 요청을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4096750433ded6b0d29d371eefc43fc226d06bf2" translate="yes" xml:space="preserve">
          <source>From sources</source>
          <target state="translated">출처에서</target>
        </trans-unit>
        <trans-unit id="1c414bbb1e46e1faf5e3da1de5490c013c8eb7a6" translate="yes" xml:space="preserve">
          <source>HTML outputs can also be rendered with &lt;code&gt;HTML&lt;/code&gt; helper function:</source>
          <target state="translated">HTML 출력은 &lt;code&gt;HTML&lt;/code&gt; 도우미 기능 으로 렌더링 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8595ecf88c3a11cd40ff419f5fd7a08a76d172f" translate="yes" xml:space="preserve">
          <source>If a library descriptor with the same name is found in several locations, the following resolution priority is used:</source>
          <target state="translated">동일한 이름의 라이브러리 설명자가 여러 위치에서 발견되면 다음 해결 우선 순위가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0f214e45237714cc56386919d5fda199b7b82513" translate="yes" xml:space="preserve">
          <source>If library descriptor defines more than one property, property names should be used:</source>
          <target state="translated">라이브러리 설명자가 둘 이상의 속성을 정의하는 경우 속성 이름을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bd4d074efeec8b88745458db4888cf877cdb83d" translate="yes" xml:space="preserve">
          <source>If you are maintaining some library and want to update your library descriptor, just create pull request with your update. After your request is accepted,
new version of your library will be available to all Kotlin Jupyter users immediately on next kernel startup (no kernel update is needed).</source>
          <target state="translated">일부 라이브러리를 유지하고 있고 라이브러리 설명자를 업데이트하려면 업데이트로 풀 요청을 생성하면됩니다. 요청이 수락되면 다음 커널 시작시 모든 Kotlin Jupyter 사용자가 즉시 새 버전의 라이브러리를 사용할 수 있습니다 (커널 업데이트가 필요하지 않음).</target>
        </trans-unit>
        <trans-unit id="94c8672f7bab50bdd8aadf80837c1cb1bfd089e2" translate="yes" xml:space="preserve">
          <source>If you don't want some library to be updated automatically, put fixed version of its library descriptor into local settings folder.</source>
          <target state="translated">일부 라이브러리가 자동으로 업데이트되지 않도록하려면 라이브러리 설명 자의 고정 버전을 로컬 설정 폴더에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="be314856e8d8a57ddd2de53d0384ee0c78c602c0" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;conda&lt;/code&gt; installed, just run the following command to install stable package version:</source>
          <target state="translated">&lt;code&gt;conda&lt;/code&gt; 가 설치되어 있는 경우 다음 명령을 실행하여 안정적인 패키지 버전을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="b8ac9a6663dbe186b419cdbd45837060bd8daf7d" translate="yes" xml:space="preserve">
          <source>If you use Jupyter Notebook as Jupyter client, you will also see that compilation errors and warnings are underlined in
red and in yellow correspondingly. This is achieved by kernel-level extension of Jupyter notebook which sends
error-analysis requests to kernel and renders their results. If you hover the cursor over underlined text, you will get
an error message which can help you to fix the error.</source>
          <target state="translated">Jupyter 노트북을 Jupyter 클라이언트로 사용하는 경우 컴파일 오류 및 경고가 빨간색과 노란색으로 밑줄이 그어진 것을 볼 수 있습니다. 이는 커널에 오류 분석 요청을 보내고 결과를 렌더링하는 Jupyter 노트북의 커널 수준 확장에 의해 달성됩니다. 밑줄이 그어진 텍스트 위로 커서를 가져 가면 오류 수정에 도움이되는 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="d5db19eaa4b567ff363a4524d68f7bc189b3420d" translate="yes" xml:space="preserve">
          <source>It is possible to add dynamic dependencies to the notebook using the following annotations:</source>
          <target state="translated">다음 주석을 사용하여 노트북에 동적 종속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62fa673632fa4d685c980b041028e50409d1c19d" translate="yes" xml:space="preserve">
          <source>JitPack</source>
          <target state="translated">JitPack</target>
        </trans-unit>
        <trans-unit id="834e4bd808150b1ffb1e44d5c685b4c3ce50f88e" translate="yes" xml:space="preserve">
          <source>Kernel installation directory</source>
          <target state="translated">커널 설치 디렉토리</target>
        </trans-unit>
        <trans-unit id="e4ba0335f607ecf43d57fe4a18b52d33661fe2dc" translate="yes" xml:space="preserve">
          <source>Kotlin kernel for IPython/Jupyter</source>
          <target state="translated">IPython / Jupyter 용 Kotlin 커널</target>
        </trans-unit>
        <trans-unit id="6ea9d46d770da8841c3b523b810febfd0b32bf18" translate="yes" xml:space="preserve">
          <source>Kotlin kernel for Jupyter notebooks</source>
          <target state="translated">Jupyter 노트북 용 Kotlin 커널</target>
        </trans-unit>
        <trans-unit id="632ba9a4b0796b561221d7f4f3b2a04a1bcee6e8" translate="yes" xml:space="preserve">
          <source>Library descriptor is a &lt;code&gt;&amp;lt;libName&amp;gt;.json&lt;/code&gt; file with the following fields:</source>
          <target state="translated">라이브러리 설명자는 다음 필드 가있는 &lt;code&gt;&amp;lt;libName&amp;gt;.json&lt;/code&gt; 파일입니다.</target>
        </trans-unit>
        <trans-unit id="e171a9c0069e11d8f0c95920a662fb79ac12a47a" translate="yes" xml:space="preserve">
          <source>Library properties can be used in any parts of library descriptor as &lt;code&gt;$property&lt;/code&gt;</source>
          <target state="translated">라이브러리 속성은 &lt;code&gt;$property&lt;/code&gt; 로 라이브러리 설명 자의 모든 부분에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0208d259b19d6c1cde0bbb27660b2fa0680bc658" translate="yes" xml:space="preserve">
          <source>Line Magics</source>
          <target state="translated">라인 매직</target>
        </trans-unit>
        <trans-unit id="578bb8efddeb3a3f2b07451db0472df2149cfc77" translate="yes" xml:space="preserve">
          <source>List of supported libraries:</source>
          <target state="translated">지원되는 라이브러리 목록 :</target>
        </trans-unit>
        <trans-unit id="2dfed0495d4d4695db9dfb77822794d18a13627a" translate="yes" xml:space="preserve">
          <source>Local settings folder (highest priority)</source>
          <target state="translated">로컬 설정 폴더 (가장 높은 우선 순위)</target>
        </trans-unit>
        <trans-unit id="b3bb074152c56a357c6848fc5907b8eb691543c6" translate="yes" xml:space="preserve">
          <source>Maven Central</source>
          <target state="translated">메이븐 센트럴</target>
        </trans-unit>
        <trans-unit id="df7e87a2b835c76ef79a8b9b48bb21c69a06f1b7" translate="yes" xml:space="preserve">
          <source>Name of the file is a library name that is passed to '%use' command</source>
          <target state="translated">파일 이름은 '% use'명령에 전달되는 라이브러리 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d44c6e1656e0a61fcf626ba93d32a884337ca551" translate="yes" xml:space="preserve">
          <source>Note that dependencies in remote repositories are resolved via Ivy resolver.
Caches are stored in &lt;code&gt;~/.ivy2/cache&lt;/code&gt; folder by default. Sometimes, due to network
issues or running several artifacts resolutions in parallel, caches may get corrupted.
If you have some troubles with artifacts resolution, please remove caches, restart kernel
and try again.</source>
          <target state="translated">원격 저장소의 종속성은 Ivy resolver를 통해 해결됩니다. 캐시는 기본적으로 &lt;code&gt;~/.ivy2/cache&lt;/code&gt; 폴더에 저장됩니다. 때로는 네트워크 문제 또는 여러 아티팩트 해결을 병렬로 실행하기 때문에 캐시가 손상 될 수 있습니다. 아티팩트 해결에 문제가있는 경우 캐시를 제거하고 커널을 다시 시작한 다음 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="9b0d5ac39f0a0b2baf8fc3c29b3743e9cc748063" translate="yes" xml:space="preserve">
          <source>Pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="c501d8c92cfa1c8d2bf7441a20ae7667ff1eef4d" translate="yes" xml:space="preserve">
          <source>Press &lt;code&gt;TAB&lt;/code&gt; to get the list of suggested items for completion. In Jupyter Notebook, you don't need to press &lt;code&gt;TAB&lt;/code&gt;,
completion is requested automatically. Completion works for all globally defined symbols and for local symbols
which were loaded into notebook during cells evaluation.</source>
          <target state="translated">완료를 위해 제안 된 항목 목록을 가져 오려면 &lt;code&gt;TAB&lt;/code&gt; 을 누르십시오 . Jupyter Notebook에서는 &lt;code&gt;TAB&lt;/code&gt; 키 를 누를 필요가 없으며 자동으로 완료가 요청됩니다. 완성은 전역 적으로 정의 된 모든 기호 및 셀 평가 중에 노트북에로드 된 로컬 기호에 대해 작동합니다.</target>
        </trans-unit>
        <trans-unit id="80b9c3a504e05bb9f487d000332e77e497c07ee5" translate="yes" xml:space="preserve">
          <source>REPL commands</source>
          <target state="translated">REPL 명령</target>
        </trans-unit>
        <trans-unit id="4638893316e18a6c95b96f8c9e492f98974701e9" translate="yes" xml:space="preserve">
          <source>Rich output</source>
          <target state="translated">풍부한 출력</target>
        </trans-unit>
        <trans-unit id="4592eed08a20c6aba21cde29b305a026fb72f8b7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;./gradlew installDebug&lt;/code&gt;. Use option &lt;code&gt;-PdebugPort=&lt;/code&gt; to specify port address for debugger. Default port is 1044.</source>
          <target state="translated">&lt;code&gt;./gradlew installDebug&lt;/code&gt; 를 실행하십시오 . 디버거의 포트 주소를 지정 하려면 &lt;code&gt;-PdebugPort=&lt;/code&gt; 옵션을 사용하십시오 . 기본 포트는 1044입니다.</target>
        </trans-unit>
        <trans-unit id="a37b791904293b54078ebc548cad8348f3c8d237" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;jupyter-notebook&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;jupyter-notebook&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="f7792b525308d8af5b551fc1c707c0bbe869fe4b" translate="yes" xml:space="preserve">
          <source>See detailed info about line magics &lt;a href=&quot;doc/magics.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;doc/magics.md&quot;&gt;여기에서&lt;/a&gt; 라인 매직에 대한 자세한 정보를 확인 하세요 .</target>
        </trans-unit>
        <trans-unit id="82f8afff61ab15ec59084c59df246fdb23448899" translate="yes" xml:space="preserve">
          <source>Several libraries can be included in single &lt;code&gt;%use&lt;/code&gt; statement, separated by &lt;code&gt;,&lt;/code&gt;:</source>
          <target state="translated">여러 라이브러리는 하나에 포함 할 수 &lt;code&gt;%use&lt;/code&gt; 에 의해 분리 된 문 &lt;code&gt;,&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5b4fffbddfe3b2651cced32947eb462bdfc6729b" translate="yes" xml:space="preserve">
          <source>Stable:
&lt;code&gt;pip install kotlin-jupyter-kernel&lt;/code&gt; (&lt;a href=&quot;https://pypi.org/project/kotlin-jupyter-kernel/&quot;&gt;package home&lt;/a&gt;)</source>
          <target state="translated">안정 : &lt;code&gt;pip install kotlin-jupyter-kernel&lt;/code&gt; ( &lt;a href=&quot;https://pypi.org/project/kotlin-jupyter-kernel/&quot;&gt;package home&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="de8e00b9ed80e561f87219ebd9ee13511e122c06" translate="yes" xml:space="preserve">
          <source>Supported Libraries</source>
          <target state="translated">지원되는 라이브러리</target>
        </trans-unit>
        <trans-unit id="3e8971a7ab528909509abeffa44285ab14dbaa3d" translate="yes" xml:space="preserve">
          <source>Supported functionality</source>
          <target state="translated">지원되는 기능</target>
        </trans-unit>
        <trans-unit id="ff7c1c2d3b25a47c10ed08df6521c4eb9c6251f4" translate="yes" xml:space="preserve">
          <source>The following REPL commands are supported:</source>
          <target state="translated">다음 REPL 명령이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7b52c2f441c4634bd7efbcf4a0169bfd5e23022d" translate="yes" xml:space="preserve">
          <source>The following line magics are supported:</source>
          <target state="translated">다음과 같은 라인 매직이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="95a3a2e46f5eb6a302f1dae644503e6676f81b0d" translate="yes" xml:space="preserve">
          <source>The following maven repositories are included by default:</source>
          <target state="translated">다음 Maven 저장소가 기본적으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="06aa41d298e1ed8f3b4436174aa68ab0d45f41b8" translate="yes" xml:space="preserve">
          <source>There are three ways to install kernel:</source>
          <target state="translated">커널을 설치하는 방법에는 세 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b8f912531b61d1cba26eeafb74692907514086a" translate="yes" xml:space="preserve">
          <source>This behavior is defined by &lt;code&gt;json&lt;/code&gt; library descriptor. Descriptors for all supported libraries can be found in &lt;a href=&quot;libraries&quot;&gt;libraries&lt;/a&gt; directory.
A library descriptor may provide a set of properties with default values that can be overridden when library is included.
The major use case for library properties is to specify particular version of library. If descriptor has only one property, it can be
defined without naming:</source>
          <target state="translated">이 동작은 &lt;code&gt;json&lt;/code&gt; 라이브러리 설명자에 의해 정의됩니다 . 지원되는 모든 라이브러리에 대한 설명 &lt;a href=&quot;libraries&quot;&gt;자는 라이브러리&lt;/a&gt; 디렉토리 에서 찾을 수 있습니다 . 라이브러리 설명자는 라이브러리가 포함될 때 재정의 될 수있는 기본값이있는 속성 집합을 제공 할 수 있습니다. 라이브러리 속성의 주요 사용 사례는 특정 버전의 라이브러리를 지정하는 것입니다. 설명자에 속성이 하나만있는 경우 이름을 지정하지 않고 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9df900ddfdfd6b207d8891a56e7cdaed99a737d3" translate="yes" xml:space="preserve">
          <source>To install conda package from the dev channel:</source>
          <target state="translated">개발 채널에서 conda 패키지를 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="71c6865e0e6956ea38a6b17990d0e983e49348fe" translate="yes" xml:space="preserve">
          <source>To register new library descriptor:</source>
          <target state="translated">새 라이브러리 설명자를 등록하려면 :</target>
        </trans-unit>
        <trans-unit id="cf4b30b2bc343c10801bafa3850664f6743df20d" translate="yes" xml:space="preserve">
          <source>To start using &lt;code&gt;kotlin&lt;/code&gt; kernel inside Jupyter Notebook or JupyterLab create a new notebook with &lt;code&gt;kotlin&lt;/code&gt; kernel.</source>
          <target state="translated">Jupyter Notebook 또는 JupyterLab에서 &lt;code&gt;kotlin&lt;/code&gt; 커널 사용을 시작하려면 kotlin 커널을 사용하여 새 노트북을 &lt;code&gt;kotlin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbbf838e68ce349e64ff53f8431435f336f75145" translate="yes" xml:space="preserve">
          <source>To start using Kotlin kernel for Jupyter take a look at &lt;a href=&quot;https://github.com/cheptsov/kotlin-jupyter-demo/blob/master/index.ipynb&quot;&gt;introductory guide&lt;/a&gt;.</source>
          <target state="translated">Jupyter 용 Kotlin 커널 사용을 시작하려면 &lt;a href=&quot;https://github.com/cheptsov/kotlin-jupyter-demo/blob/master/index.ipynb&quot;&gt;소개 가이드를 참조&lt;/a&gt; 하세요.</target>
        </trans-unit>
        <trans-unit id="1288317b94a648fb82feeb22a997454b4d94e962" translate="yes" xml:space="preserve">
          <source>To support new &lt;code&gt;JVM&lt;/code&gt; library and make it available via &lt;code&gt;%use&lt;/code&gt; magic command you need to create a library descriptor for it.</source>
          <target state="translated">새로운 &lt;code&gt;JVM&lt;/code&gt; 라이브러리 를 지원 하고 &lt;code&gt;%use&lt;/code&gt; 매직 명령을 통해 사용 가능하게 하려면 라이브러리 설명자를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="22de73dc150ebe74c19427abc96e68eb3edbfe33" translate="yes" xml:space="preserve">
          <source>Try samples online:</source>
          <target state="translated">온라인으로 샘플을 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="bd21378b88d3091cbee3513a3459d7b86e19d841" translate="yes" xml:space="preserve">
          <source>Uninstall: &lt;code&gt;./gradlew uninstall&lt;/code&gt;</source>
          <target state="translated">제거 : &lt;code&gt;./gradlew uninstall&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cd33898486accb27cfcb31e95fca7ae633e3e03" translate="yes" xml:space="preserve">
          <source>Uninstall: &lt;code&gt;conda remove kotlin-jupyter-kernel&lt;/code&gt;</source>
          <target state="translated">제거 : &lt;code&gt;conda remove kotlin-jupyter-kernel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e58c2248bdeb78c559c077c0d53d81a0ffe90569" translate="yes" xml:space="preserve">
          <source>Uninstall: &lt;code&gt;pip uninstall kotlin-jupyter-kernel&lt;/code&gt;</source>
          <target state="translated">제거 : &lt;code&gt;pip uninstall kotlin-jupyter-kernel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="79251c12b9c8d468b0d259f53e7157e02130f8eb" translate="yes" xml:space="preserve">
          <source>When a library is included with &lt;code&gt;%use&lt;/code&gt; keyword, the following functionality is added to the notebook:</source>
          <target state="translated">&lt;code&gt;%use&lt;/code&gt; 키워드 와 함께 라이브러리가 포함 되면 노트북에 다음 기능이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3449b02c614d5c8b2d74b205bb06702d727aa9fa" translate="yes" xml:space="preserve">
          <source>You can also install this package through &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 를 통해이 패키지를 설치할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fcc828659288bca49e057db6cd9b7908c9332d6a" translate="yes" xml:space="preserve">
          <source>artifact dependencies</source>
          <target state="translated">아티팩트 종속성</target>
        </trans-unit>
        <trans-unit id="36d811dd0a959545cb939e827b553f06f42e4e37" translate="yes" xml:space="preserve">
          <source>default imports</source>
          <target state="translated">기본 가져 오기</target>
        </trans-unit>
        <trans-unit id="e5d878f2bedb9f3a06c7b089a149c7f625a389d8" translate="yes" xml:space="preserve">
          <source>library initialization code</source>
          <target state="translated">라이브러리 초기화 코드</target>
        </trans-unit>
        <trans-unit id="a8ae4437c9f41fddb20431c52224909b374808f9" translate="yes" xml:space="preserve">
          <source>renderers for special types, e.g. charts and data frames</source>
          <target state="translated">특수 유형 (예 : 차트 및 데이터 프레임)을위한 렌더러</target>
        </trans-unit>
        <trans-unit id="e598e42b6aec0dd61d9455e8512f21c008f65998" translate="yes" xml:space="preserve">
          <source>repositories to search for library artifacts</source>
          <target state="translated">라이브러리 아티팩트를 검색하기위한 저장소</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
