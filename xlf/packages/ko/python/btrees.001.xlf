<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/btrees/">
    <body>
      <group id="btrees">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="b8d459d6b2f6fc2839730d8bb8f42f33cd59a740" translate="yes" xml:space="preserve">
          <source>,
respectively, in both implementations. Previously, pure-Python
raised a</source>
          <target state="translated">두 구현 모두에서 각각. 이전에 pure-Python은</target>
        </trans-unit>
        <trans-unit id="805a8a3bde5405d128151f30828fb324b3b0c51e" translate="yes" xml:space="preserve">
          <source>, avoid poisoning
the user&amp;rsquo;s global wheel cache.</source>
          <target state="translated">, 사용자의 전역 휠 캐시를 오염시키지 마십시오.</target>
        </trans-unit>
        <trans-unit id="47d099125211b7101ce5a0a14085f56bee6f1d15" translate="yes" xml:space="preserve">
          <source>, respectively.
Previously, CPython raised a</source>
          <target state="translated">, 각각. 이전에 CPython은</target>
        </trans-unit>
        <trans-unit id="68e74e01e509c19702df17863e5ce50256cc25dc" translate="yes" xml:space="preserve">
          <source>, return the default and return</source>
          <target state="translated">, 기본값을 반환하고</target>
        </trans-unit>
        <trans-unit id="c02a513e7fc611c91025ba62476eb5ac51c1fd92" translate="yes" xml:space="preserve">
          <source>, returned the default, and raised a</source>
          <target state="translated">, 기본값을 반환하고</target>
        </trans-unit>
        <trans-unit id="9133c2758343754f1231c78101b5304d98a268a2" translate="yes" xml:space="preserve">
          <source>, the default value, and</source>
          <target state="translated">, 기본값 및</target>
        </trans-unit>
        <trans-unit id="8399978fa0d11cd40af32792f8d480503591bd64" translate="yes" xml:space="preserve">
          <source>, while CPython raised</source>
          <target state="translated">, CPython은</target>
        </trans-unit>
        <trans-unit id="ce3d3fe3dfbac097734c7d5023c2236415f31aee" translate="yes" xml:space="preserve">
          <source>, while the Python implementation functioned as
expected. See &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/140&quot;&gt;issue 140&lt;/a&gt;.</source>
          <target state="translated">, Python 구현은 예상대로 작동했습니다. &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/140&quot;&gt;문제 140을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da447554f7e55d6ed92c26935c40e7acbe7f0578" translate="yes" xml:space="preserve">
          <source>.
Now they return False, the default value, and False, respectively in
both versions if the tested value would overflow or underflow.
Previously, the C implementation would raise</source>
          <target state="translated">. 이제 테스트 된 값이 오버플로되거나 언더 플로되면 두 버전 모두에서 각각 False, 기본값 및 False를 반환합니다. 이전에는 C 구현이</target>
        </trans-unit>
        <trans-unit id="844c1335ee1be8b1db228a5a87b900dbc88cf6a7" translate="yes" xml:space="preserve">
          <source>.  (PR #3)</source>
          <target state="translated">. (홍보 # 3)</target>
        </trans-unit>
        <trans-unit id="8a7b58262d45454b90fb5f23e52ae013b35ffcde" translate="yes" xml:space="preserve">
          <source>.  See
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/106&quot;&gt;issue 106&lt;/a&gt;.</source>
          <target state="translated">. &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/106&quot;&gt;106 호&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="86070619197f3b94b1eee1de021ce52be50c5d62" translate="yes" xml:space="preserve">
          <source>. See
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/pull/55&quot;&gt;https://github.com/zopefoundation/BTrees/pull/55&lt;/a&gt;</source>
          <target state="translated">. 참조 &lt;a href=&quot;https://github.com/zopefoundation/BTrees/pull/55&quot;&gt;https://github.com/zopefoundation/BTrees/pull/55를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42099b4af021e53fd8fd4e056c2568d7c2e3ffa8" translate="yes" xml:space="preserve">
          <source>/</source>
          <target state="translated">/</target>
        </trans-unit>
        <trans-unit id="b74901d03a7c26a8942ca9d5faa1b463436fe0f2" translate="yes" xml:space="preserve">
          <source>100% unit test coverage.</source>
          <target state="translated">100 % 단위 테스트 적용.</target>
        </trans-unit>
        <trans-unit id="69ff5e6cec9c7845896a59d67c7063327c7b53cb" translate="yes" xml:space="preserve">
          <source>4.0.0 (2012-10-20)</source>
          <target state="translated">4.0.0 (2012-10-20)</target>
        </trans-unit>
        <trans-unit id="e86d91812d2fb248f1b8de139d823cdce0e0bd4e" translate="yes" xml:space="preserve">
          <source>4.0.1 (2012-10-21)</source>
          <target state="translated">4.0.1 (2012-10-21)</target>
        </trans-unit>
        <trans-unit id="371ac3d7cc658330f62b9cd04bf4b3ff10626648" translate="yes" xml:space="preserve">
          <source>4.0.2 (2013-01-03)</source>
          <target state="translated">4.0.2 (2013-01-03)</target>
        </trans-unit>
        <trans-unit id="a30fde0fc22929fdb400e53de68bc1e3346f985b" translate="yes" xml:space="preserve">
          <source>4.0.3 (2013-01-04)</source>
          <target state="translated">4.0.3 (2013-01-04)</target>
        </trans-unit>
        <trans-unit id="df299ea1f9f6544586bc0e776e30320efdea84a8" translate="yes" xml:space="preserve">
          <source>4.0.4 (2013-01-12)</source>
          <target state="translated">4.0.4 (2013-01-12)</target>
        </trans-unit>
        <trans-unit id="0e240248088a5d83dbf623acbb19c657cd69ef30" translate="yes" xml:space="preserve">
          <source>4.0.5 (2013-01-15)</source>
          <target state="translated">4.0.5 (2013-01-15)</target>
        </trans-unit>
        <trans-unit id="4d46033dce3000b58e8bea4a6f1f6b33f9ff6076" translate="yes" xml:space="preserve">
          <source>4.0.6 (2013-05-14)</source>
          <target state="translated">4.0.6 (2013-05-14)</target>
        </trans-unit>
        <trans-unit id="d18b11d5cd4c9ff74f11d4c922f2769a6593c20f" translate="yes" xml:space="preserve">
          <source>4.0.7 (2013-05-22)</source>
          <target state="translated">4.0.7 (2013-05-22)</target>
        </trans-unit>
        <trans-unit id="eb621e006b776edbf67496df0c81388b281bd0d4" translate="yes" xml:space="preserve">
          <source>4.0.8 (2013-05-25)</source>
          <target state="translated">4.0.8 (2013-05-25)</target>
        </trans-unit>
        <trans-unit id="cec9f532b5b0401312afc764ba382fbd387d2257" translate="yes" xml:space="preserve">
          <source>4.1.0 (2014-12-26)</source>
          <target state="translated">4.1.0 (2014-12-26)</target>
        </trans-unit>
        <trans-unit id="cff2606eee872c8f4c2e7f44427b2ffd83fed8ef" translate="yes" xml:space="preserve">
          <source>4.1.1 (2014-12-27)</source>
          <target state="translated">4.1.1 (2014-12-27)</target>
        </trans-unit>
        <trans-unit id="83a3fd4c92d2d5db052bb4b9e2681961ce7c90d4" translate="yes" xml:space="preserve">
          <source>4.1.2 (2015-04-07)</source>
          <target state="translated">4.1.2 (2015-04-07)</target>
        </trans-unit>
        <trans-unit id="4f965413026f86630f4d5eeb2fdc57bbe64b4395" translate="yes" xml:space="preserve">
          <source>4.1.3 (2015-05-19)</source>
          <target state="translated">4.1.3 (2015-05-19)</target>
        </trans-unit>
        <trans-unit id="4b79b5dca1fb44bb448dff62a471a4097b93337e" translate="yes" xml:space="preserve">
          <source>4.1.4 (2015-06-02)</source>
          <target state="translated">4.1.4 (2015-06-02)</target>
        </trans-unit>
        <trans-unit id="8742a15265527d79e0717bf605c19eeff0476205" translate="yes" xml:space="preserve">
          <source>4.2.0 (2015-11-13)</source>
          <target state="translated">4.2.0 (2015-11-13)</target>
        </trans-unit>
        <trans-unit id="f756b93d168fd732fd7eb72c9d4d1ceb7c06103f" translate="yes" xml:space="preserve">
          <source>4.3.0 (2016-05-10)</source>
          <target state="translated">4.3.0 (2016-05-10)</target>
        </trans-unit>
        <trans-unit id="ac38c250f5a6128873de83c6bff7fbf976530738" translate="yes" xml:space="preserve">
          <source>4.3.1 (2016-05-16)</source>
          <target state="translated">4.3.1 (2016-05-16)</target>
        </trans-unit>
        <trans-unit id="5930a59ec232ed141bffad989219f607819292ad" translate="yes" xml:space="preserve">
          <source>4.3.2 (2017-01-05)</source>
          <target state="translated">4.3.2 (2017-01-05)</target>
        </trans-unit>
        <trans-unit id="37bbe3278777f500c14c805cd4e3e01274962a1d" translate="yes" xml:space="preserve">
          <source>4.4.0 (2017-01-11)</source>
          <target state="translated">4.4.0 (2017-01-11)</target>
        </trans-unit>
        <trans-unit id="3f81b3371147196b5f36a197ab4a7ac261f09b47" translate="yes" xml:space="preserve">
          <source>4.4.1 (2017-01-24)</source>
          <target state="translated">4.4.1 (2017-01-24)</target>
        </trans-unit>
        <trans-unit id="8dbfe74f44c7ff95441a9141e95d743a90479c0a" translate="yes" xml:space="preserve">
          <source>4.5.0 (2018-04-23)</source>
          <target state="translated">4.5.0 (2018-04-23)</target>
        </trans-unit>
        <trans-unit id="3940507bd8d4735ffecad3c2c9a4963ae0c888f5" translate="yes" xml:space="preserve">
          <source>4.5.1 (2018-08-09)</source>
          <target state="translated">4.5.1 (2018-08-09)</target>
        </trans-unit>
        <trans-unit id="0741692fa8df784aad4540f3a2b58912213b117f" translate="yes" xml:space="preserve">
          <source>4.6.0 (2019-07-30)</source>
          <target state="translated">4.6.0 (2019-07-30)</target>
        </trans-unit>
        <trans-unit id="989c5d9c9518dd964907dbb64d272a4575705c92" translate="yes" xml:space="preserve">
          <source>4.6.1 (2019-11-07)</source>
          <target state="translated">4.6.1 (2019-11-07)</target>
        </trans-unit>
        <trans-unit id="f3488b982c96190ca9224acd5d177fe0ff1eb5d5" translate="yes" xml:space="preserve">
          <source>4.7.0 (2020-03-17)</source>
          <target state="translated">4.7.0 (2020-03-17)</target>
        </trans-unit>
        <trans-unit id="ce2123a7baae81455545ad2bd7c65e533a6aa595" translate="yes" xml:space="preserve">
          <source>4.7.1 (2020-03-22)</source>
          <target state="translated">4.7.1 (2020-03-22)</target>
        </trans-unit>
        <trans-unit id="8392e3453543583498f04c2521d645708c373927" translate="yes" xml:space="preserve">
          <source>4.7.2 (2020-04-07)</source>
          <target state="translated">4.7.2 (2020-04-07)</target>
        </trans-unit>
        <trans-unit id="4e76654f5b3968a949a84215ef9dd6fc6152219a" translate="yes" xml:space="preserve">
          <source>:  tests now
run with</source>
          <target state="translated">: 이제 테스트 실행</target>
        </trans-unit>
        <trans-unit id="8f57a2da0bba2adf0053af3e7719c57efea13547" translate="yes" xml:space="preserve">
          <source>Accomodate buildout to the fact that we no longer bundle a copy
of &amp;lsquo;persistent.h&amp;rsquo;.</source>
          <target state="translated">우리가 더 이상 'persistent.h'의 사본을 번들로 묶지 않는다는 사실을 수용하십시오.</target>
        </trans-unit>
        <trans-unit id="409642dc2ff1977e6ddb7b94292d0b10dff8d04d" translate="yes" xml:space="preserve">
          <source>Accomodate long values in pure-Python OLBTrees.</source>
          <target state="translated">순수 Python OLBTrees에서 긴 값을 수용합니다.</target>
        </trans-unit>
        <trans-unit id="af050ca7166b6ab56c81454630a17123ec32152e" translate="yes" xml:space="preserve">
          <source>Add support for PyPy and PyPy3.</source>
          <target state="translated">PyPy 및 PyPy3에 대한 지원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="01ef7fb57d56f45516afbee8aa1cbe1e9b3d8ad0" translate="yes" xml:space="preserve">
          <source>Add support for Python 3.4.</source>
          <target state="translated">Python 3.4에 대한 지원을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="2a6b56f39cea6e89d41e6910020de2238a4a66a1" translate="yes" xml:space="preserve">
          <source>Add support for Python 3.5.</source>
          <target state="translated">Python 3.5에 대한 지원을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e76fa7750160b8c8d4bdb303ffe835d814bf82d5" translate="yes" xml:space="preserve">
          <source>Add support for Python 3.6 and 3.7.</source>
          <target state="translated">Python 3.6 및 3.7에 대한 지원을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="bd655f8766cc26d43dab946ebc0f29c44f9738f7" translate="yes" xml:space="preserve">
          <source>Add support for Python 3.8.</source>
          <target state="translated">Python 3.8에 대한 지원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="336f3f6221701faade8e43aeb9d0a6365634b1a4" translate="yes" xml:space="preserve">
          <source>Add unsigned variants of the trees. These use the initial &amp;ldquo;U&amp;rdquo; for
32-bit data and &amp;ldquo;Q&amp;rdquo; for 64-bit data (for &amp;ldquo;quad&amp;rdquo;, which is similar to
what the C</source>
          <target state="translated">서명되지 않은 나무 변형을 추가합니다. 32 비트 데이터의 경우 초기 &quot;U&quot;를 사용하고 64 비트 데이터의 경우 &quot;Q&quot;를 사용합니다 ( &quot;quad&quot;의 경우 C</target>
        </trans-unit>
        <trans-unit id="b68734c259106d131c65a8db8af829cf4fc02fda" translate="yes" xml:space="preserve">
          <source>Added</source>
          <target state="translated">추가됨</target>
        </trans-unit>
        <trans-unit id="907121be8098af0b1b0a4b69592a0572ed40bdfa" translate="yes" xml:space="preserve">
          <source>Added API reference, generated via Spinx&amp;rsquo; autodoc.</source>
          <target state="translated">Spinx의 autodoc을 통해 생성 된 API 참조가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="68585cc27892690ca2a2907df80e01042d0cbf9b" translate="yes" xml:space="preserve">
          <source>Added Sphinx documentation based on ZODB Guide (snippets are exercised
via &amp;lsquo;tox&amp;rsquo;).</source>
          <target state="translated">ZODB 가이드를 기반으로 한 Sphinx 문서가 추가되었습니다 (스 니펫은 'tox'를 통해 실행됩니다).</target>
        </trans-unit>
        <trans-unit id="30f586d3c1171b840c92f5431c29d6189025ddc5" translate="yes" xml:space="preserve">
          <source>Added explicit support for Python 3.2, Python 3.3, and PyPy.
Note that the C extensions are not (yet) available on PyPy.</source>
          <target state="translated">Python 3.2, Python 3.3 및 PyPy에 대한 명시 적 지원이 추가되었습니다. C 확장은 (아직) PyPy에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="97c5003b8d9776af7ee80062e76032169ed93454" translate="yes" xml:space="preserve">
          <source>Added support for continuous integration using</source>
          <target state="translated">연속 통합에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="bb05424f0ee93600ab64679ad0eb4e2f00da390a" translate="yes" xml:space="preserve">
          <source>All covered platforms tested under</source>
          <target state="translated">테스트 대상이되는 모든 플랫폼</target>
        </trans-unit>
        <trans-unit id="a0199c662ed832f9bcac40a0f976c0c85e7e725c" translate="yes" xml:space="preserve">
          <source>Allow None as a special key (sorted smaller than all others).</source>
          <target state="translated">없음을 특수 키로 허용합니다 (다른 모든 키보다 작게 정렬 됨).</target>
        </trans-unit>
        <trans-unit id="b075a13a0fca4ef9c02f9a101cd6b8280b5ec31f" translate="yes" xml:space="preserve">
          <source>Always attempt to build the C extensions, but make their success
optional.</source>
          <target state="translated">항상 C 확장을 빌드하려고 시도하되 성공을 선택적으로 만드십시오.</target>
        </trans-unit>
        <trans-unit id="e30390c6b25519953f15954ce4132cba67fdd587" translate="yes" xml:space="preserve">
          <source>AttributeError</source>
          <target state="translated">AttributeError</target>
        </trans-unit>
        <trans-unit id="dea1f785c1c3f973457038bba466edb82cdbdd17" translate="yes" xml:space="preserve">
          <source>Avoid creating invalid objects when unpickling empty BTrees in a pure-Python
environment.</source>
          <target state="translated">순수 Python 환경에서 빈 BTree를 언 피클 할 때 유효하지 않은 객체를 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="84f05c02ae6bef587d15c4add6a90a65fdd743f9" translate="yes" xml:space="preserve">
          <source>BTree subclasses can define</source>
          <target state="translated">BTree 서브 클래스는</target>
        </trans-unit>
        <trans-unit id="70f440fe2d2ca490b8556e4fd453ee71a70ad103" translate="yes" xml:space="preserve">
          <source>BTrees</source>
          <target state="translated">BTrees</target>
        </trans-unit>
        <trans-unit id="3efc3508869fc940c48ee0cc5d5bb3fb608ed666" translate="yes" xml:space="preserve">
          <source>BTrees Changelog</source>
          <target state="translated">BTrees 변경 로그</target>
        </trans-unit>
        <trans-unit id="82129b1fa4ed77454b52a8e6d3e773ae0b1ff922" translate="yes" xml:space="preserve">
          <source>BTrees.OIBTree.using64bits</source>
          <target state="translated">BTrees.OIBTree.using64bits</target>
        </trans-unit>
        <trans-unit id="2ab109cd446a6e088917fdc7f638644477154e3b" translate="yes" xml:space="preserve">
          <source>BTrees:  scalable persistent components</source>
          <target state="translated">BTrees : 확장 가능한 영구 구성 요소</target>
        </trans-unit>
        <trans-unit id="c63a717320cabcbb8d768dc2f363273767cf32cb" translate="yes" xml:space="preserve">
          <source>C extension is not available.
Previously this could result in an odd</source>
          <target state="translated">C 확장을 사용할 수 없습니다. 이전에는 이것이 이상한 결과를 초래할 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="04e08bc9f6d704f566c444b26e0c8455add32a36" translate="yes" xml:space="preserve">
          <source>Changed the</source>
          <target state="translated">변경</target>
        </trans-unit>
        <trans-unit id="494e67ac33b5c7d03533f7c82c6e55e2983f1141" translate="yes" xml:space="preserve">
          <source>DeprecationWarning</source>
          <target state="translated">DeprecationWarning</target>
        </trans-unit>
        <trans-unit id="5a79be2c98345347a5fc40dce1c47db6f0b89516" translate="yes" xml:space="preserve">
          <source>Detect integer overflow on 32-bit machines correctly under Python 3.</source>
          <target state="translated">Python 3에서 32 비트 컴퓨터의 정수 오버플로를 올바르게 감지합니다.</target>
        </trans-unit>
        <trans-unit id="762cc49a15b84444698fa43aa8f3296909b4a7ce" translate="yes" xml:space="preserve">
          <source>Documentation Changes</source>
          <target state="translated">문서 변경</target>
        </trans-unit>
        <trans-unit id="acaf23d1c0f7f900b5e8070668e70915fce0517a" translate="yes" xml:space="preserve">
          <source>Drop support for Python 2.6 and 3.2.</source>
          <target state="translated">Python 2.6 및 3.2에 대한 드롭 지원.</target>
        </trans-unit>
        <trans-unit id="00d5a1d188f9f83e6cf15eeb0681bcc70f0775dc" translate="yes" xml:space="preserve">
          <source>Drop support for Python 3.3.</source>
          <target state="translated">Python 3.3에 대한 드롭 지원.</target>
        </trans-unit>
        <trans-unit id="5a8806d829d38c5d76e1d6ad1202a4eda0a2586a" translate="yes" xml:space="preserve">
          <source>Drop support for Python 3.4.</source>
          <target state="translated">Python 3.4에 대한 지원 중단.</target>
        </trans-unit>
        <trans-unit id="3eab142f465c9d4bec1b735bbff83bfb98ca183a" translate="yes" xml:space="preserve">
          <source>Dropped dependency on</source>
          <target state="translated">의존성 제거</target>
        </trans-unit>
        <trans-unit id="ca5d6cc197b3127f9d5cdbeab9aa5e354a24492c" translate="yes" xml:space="preserve">
          <source>Dropped support for Python &amp;lt; 2.6.</source>
          <target state="translated">Python &amp;lt;2.6에 대한 지원이 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="e940bdabcfe385d6d52dbc828071c6363a9cb29e" translate="yes" xml:space="preserve">
          <source>Emulate the (private) iterators used by the C extension modules from
pure Python.  This change is &amp;ldquo;cosmetic&amp;rdquo; only:  it prevents the ZCML</source>
          <target state="translated">순수 Python의 C 확장 모듈에서 사용하는 (개인) 반복기를 에뮬레이트합니다. 이 변경은 &quot;외관 적&quot;일뿐입니다. ZCML을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="d50a2ed0437ec84ddb1dc7f01be7e0b5c9355964" translate="yes" xml:space="preserve">
          <source>Ensure that pure-Python Bucket and Set objects have a human readable</source>
          <target state="translated">순수 Python Bucket 및 Set 객체가 사람이 읽을 수 있는지 확인</target>
        </trans-unit>
        <trans-unit id="52bc092caff7b4703f7faebc008be3a932265b30" translate="yes" xml:space="preserve">
          <source>Ensure that pure-Python implementation of</source>
          <target state="translated">순수 Python 구현이</target>
        </trans-unit>
        <trans-unit id="db99e60031f99750b90a9b17b8468084a1d290f0" translate="yes" xml:space="preserve">
          <source>Ensure that the pure-Python implementation, used on PyPy and when a C
compiler isn&amp;rsquo;t available for CPython, pickles identically to the C
version. Unpickling will choose the best available implementation.
This change prevents interoperability problems and database corruption if
both implementations are in use. While it is no longer possible to
pickle a Python implementation and have it unpickle to the Python
implementation if the C implementation is available, existing Python
pickles will still unpickle to the Python implementation (until
pickled again). See:
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/19&quot;&gt;https://github.com/zopefoundation/BTrees/issues/19&lt;/a&gt;</source>
          <target state="translated">PyPy에서 사용되며 CPython에 C 컴파일러를 사용할 수없는 경우 순수 Python 구현이 C 버전과 동일하게 피클되는지 확인합니다. Unpickling은 사용 가능한 최상의 구현을 선택합니다. 이 변경은 두 구현이 모두 사용중인 경우 상호 운용성 문제와 데이터베이스 손상을 방지합니다. 더 이상 Python 구현을 피클하고 C 구현을 사용할 수있는 경우 Python 구현으로 피클을 해제 할 수 없지만 기존 Python 피클은 여전히 ​​Python 구현으로 피클을 해제합니다 (다시 피클 할 때까지). 참조 : &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/19&quot;&gt;https://github.com/zopefoundation/BTrees/issues/19&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe2e3ca9d9a2caafe43251ea913acd0c2d31adf9" translate="yes" xml:space="preserve">
          <source>Ensure the interface resolution order of all objects is consistent.
See &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/137&quot;&gt;issue 137&lt;/a&gt;.</source>
          <target state="translated">모든 개체의 인터페이스 확인 순서가 일치하는지 확인합니다. &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/137&quot;&gt;문제 137을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af6fc1e90e4fedc13e85bf8a7cc5e89a3422d701" translate="yes" xml:space="preserve">
          <source>Factored</source>
          <target state="translated">팩토링</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="12e3eb87e5e38175cadb40904a5d1154c19fd856" translate="yes" xml:space="preserve">
          <source>Fit the</source>
          <target state="translated">맞는</target>
        </trans-unit>
        <trans-unit id="99a423164819c464ad91761b94c3e9df171d91a1" translate="yes" xml:space="preserve">
          <source>Fix</source>
          <target state="translated">고치다</target>
        </trans-unit>
        <trans-unit id="7c9abe29d2b008470e1120aeeb2a2293bbaafff6" translate="yes" xml:space="preserve">
          <source>Fix a</source>
          <target state="translated">수정</target>
        </trans-unit>
        <trans-unit id="29538310609b9c16356de2599cf81644aa680de6" translate="yes" xml:space="preserve">
          <source>Fix more cases of C and Python inconsistency. The C implementation
now behaves like the Python implementation when it comes to integer
overflow for the integer keys for</source>
          <target state="translated">더 많은 C 및 Python 불일치 사례를 수정합니다. C 구현은 이제 정수 키에 대한 정수 오버플로와 관련하여 Python 구현처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="15a4a7ea39d16f19d89d272ea9c2f102a2dc6a1d" translate="yes" xml:space="preserve">
          <source>Fix segmentation fault in</source>
          <target state="translated">세분화 오류 수정</target>
        </trans-unit>
        <trans-unit id="704d350ae8e97c5281e8ffde443a48bc3bd48647" translate="yes" xml:space="preserve">
          <source>Fix test failures on Windows:  no longer rely on overflows from</source>
          <target state="translated">Windows에서 테스트 실패 수정 : 더 이상 오버플로에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fe1c72c7de130b1b3f03dc7c4232276d7705317e" translate="yes" xml:space="preserve">
          <source>Fix tests against persistent 4.4.</source>
          <target state="translated">지속적 4.4에 대한 테스트 수정.</target>
        </trans-unit>
        <trans-unit id="88303235a546ba18d31e7ab5aea87cfa20c36ae7" translate="yes" xml:space="preserve">
          <source>Fix the definitions of</source>
          <target state="translated">정의 수정</target>
        </trans-unit>
        <trans-unit id="aeea9d2f8298921e1804a8dc9222e9fc524b11d8" translate="yes" xml:space="preserve">
          <source>Fix the possibility of a rare crash in the C extension when
deallocating items. See &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/75&quot;&gt;https://github.com/zopefoundation/BTrees/issues/75&lt;/a&gt;</source>
          <target state="translated">항목 할당을 취소 할 때 C 확장에서 드물게 충돌 할 가능성을 수정합니다. 참조 &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/75&quot;&gt;https://github.com/zopefoundation/BTrees/issues/75를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a59b26c93a7c4dcca141f40353c67252d6abe944" translate="yes" xml:space="preserve">
          <source>Fix the value for</source>
          <target state="translated">값 수정</target>
        </trans-unit>
        <trans-unit id="a79937cf76b9044e3e2868a31ea7478d25debc42" translate="yes" xml:space="preserve">
          <source>Fix unexpected</source>
          <target state="translated">예상치 못한 수정</target>
        </trans-unit>
        <trans-unit id="8737ef8880b577631086d0abad94e0cebfbe45db" translate="yes" xml:space="preserve">
          <source>Fix value-based comparison for objects under Py3k:  addresses invalid
merges of</source>
          <target state="translated">Py3k에서 개체에 대한 값 기반 비교 수정 : 잘못된 병합 문제 해결</target>
        </trans-unit>
        <trans-unit id="9832d95e615b7f4b93e292ff875ac735cd4b08da" translate="yes" xml:space="preserve">
          <source>Fixed Python version check in</source>
          <target state="translated">Python 버전 체크인 수정</target>
        </trans-unit>
        <trans-unit id="162f20e261a45fbda452b5ad79f032adbcfacb06" translate="yes" xml:space="preserve">
          <source>Fixed a packaging bug that caused extra files to be included (some of
which caused problems in some platforms).</source>
          <target state="translated">추가 파일이 포함되도록하는 패키징 버그를 수정했습니다 (일부 플랫폼에서 문제를 일으킴).</target>
        </trans-unit>
        <trans-unit id="361838ee748707501d1086cda1d546a0bca541ea" translate="yes" xml:space="preserve">
          <source>ImportError</source>
          <target state="translated">ImportError</target>
        </trans-unit>
        <trans-unit id="c15ec4f2073dda1a5f58f46331ea1e2ffe71b8c5" translate="yes" xml:space="preserve">
          <source>Issue #2:  compilation error on 32-bit mode of OS/X.</source>
          <target state="translated">문제 # 2 : OS / X의 32 비트 모드에서 컴파일 오류.</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="38e1f51ae0e7bfa5a1cc71459dbb01acda86c91a" translate="yes" xml:space="preserve">
          <source>Likewise, non-integer keys in integer-keyed trees
will raise</source>
          <target state="translated">마찬가지로, 정수 키 트리의 정수가 아닌 키는</target>
        </trans-unit>
        <trans-unit id="56fc838a61e84cb91c88ae5dd8439e1f495f67b1" translate="yes" xml:space="preserve">
          <source>Make the Bucket types consistent with the BTree types as updated in
versions 4.3.2: Querying for keys with default comparisons or that
are not integers no longer raises</source>
          <target state="translated">버전 4.3.2에서 업데이트 된 BTree 유형과 일관된 버킷 유형 만들기 : 기본 비교를 사용하거나 정수가 아닌 키에 대한 쿼리가 더 이상 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa61a1659a1a940bb62c23f611a722e4eae0c489" translate="yes" xml:space="preserve">
          <source>Make the CPython implementation consistent with the pure-Python
implementation and no longer raise</source>
          <target state="translated">CPython 구현을 순수 Python 구현과 일관되게 만들고 더 이상 올리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="165df87b5347044fcfb3d930cf6d2fee2e4f0ddb" translate="yes" xml:space="preserve">
          <source>Make the CPython implementation consistent with the pure-Python
implementation and only check object keys for default comparison
when setting keys. In Python 2 this makes it possible to remove keys
that were added using a less restrictive version of BTrees. (In
Python 3 keys that are unorderable still cannot be removed.)
Likewise, all versions can unpickle trees that already had such
keys. See: &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/53&quot;&gt;https://github.com/zopefoundation/BTrees/issues/53&lt;/a&gt; and
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/51&quot;&gt;https://github.com/zopefoundation/BTrees/issues/51&lt;/a&gt;</source>
          <target state="translated">CPython 구현을 순수 Python 구현과 일관되게 만들고 키를 설정할 때 기본 비교를 위해 객체 키만 확인하십시오. Python 2에서는 덜 제한적인 버전의 BTree를 사용하여 추가 된 키를 제거 할 수 있습니다. (순서 할 수없는 Python 3 키는 여전히 제거 할 수 없습니다.) 마찬가지로 모든 버전은 이미 그러한 키가있는 트리를 언 피클 할 수 있습니다. 참조 : &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/53&quot;&gt;https://github.com/zopefoundation/BTrees/issues/53&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/51&quot;&gt;https://github.com/zopefoundation/BTrees/issues/51&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d93bea9fec1cf00ab852cbc427341c9cbf3226a2" translate="yes" xml:space="preserve">
          <source>Make the Python implementation consistent with the CPython
implementation and check object key identity before checking
equality and performing comparisons. This can allow fixing trees
that have keys that now have broken comparison functions. See
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/50&quot;&gt;https://github.com/zopefoundation/BTrees/issues/50&lt;/a&gt;</source>
          <target state="translated">Python 구현이 CPython 구현과 일치하도록 만들고 동등성을 확인하고 비교를 수행하기 전에 객체 키 ID를 확인합니다. 이렇게하면 비교 기능이 깨진 키가있는 트리를 수정할 수 있습니다. 참조 &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/50&quot;&gt;https://github.com/zopefoundation/BTrees/issues/50를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b62816e94ee6808aa93f6bcd41ad5382a3883cc" translate="yes" xml:space="preserve">
          <source>Make the errors that are raised when values are out of range more
consistent between Python 2 and Python 3 and between 32-bit and
64-bit variants.</source>
          <target state="translated">값이 범위를 벗어 났을 때 발생하는 오류를 Python 2와 Python 3 사이, 32 비트와 64 비트 변형 사이에서보다 일관되게 만드십시오.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">노트</target>
        </trans-unit>
        <trans-unit id="37de9a0207fb7cb363cfe12353b14f8f046b055e" translate="yes" xml:space="preserve">
          <source>OOBTree.byValue</source>
          <target state="translated">OOBTree.byValue</target>
        </trans-unit>
        <trans-unit id="2463e229a293d9ce0593fb8c001c99bade0b894d" translate="yes" xml:space="preserve">
          <source>OverflowError</source>
          <target state="translated">OverflowError</target>
        </trans-unit>
        <trans-unit id="61dec12b17809a2d9502ab48ac5b67827356fac1" translate="yes" xml:space="preserve">
          <source>PURE_PYTHON</source>
          <target state="translated">PURE_PYTHON</target>
        </trans-unit>
        <trans-unit id="b0a348abd20010a47e1a2545a6f80888baa10f7f" translate="yes" xml:space="preserve">
          <source>Packaging:  fix password used to automate wheel creation on Travis.</source>
          <target state="translated">포장 : Travis에서 휠 생성을 자동화하는 데 사용되는 비밀번호 수정.</target>
        </trans-unit>
        <trans-unit id="0611dd463a9d3d310353cbe4d66f16457db6ca0b" translate="yes" xml:space="preserve">
          <source>Platform Changes</source>
          <target state="translated">플랫폼 변경</target>
        </trans-unit>
        <trans-unit id="3fb4d3afbe136e7dbda985f1f807176736d70fb8" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;http://btrees.readthedocs.io/&quot;&gt;the Sphinx documentation&lt;/a&gt; for further
information.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;http://btrees.readthedocs.io/&quot;&gt;은 Sphinx 문서&lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="218c2967523db739b1e6ae649ee8372bccfc8357" translate="yes" xml:space="preserve">
          <source>Produce binary wheels for Python 3.7.</source>
          <target state="translated">Python 3.7 용 바이너리 휠을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="20f2d662dc326dab901af97c9d28d8e62d654fb4" translate="yes" xml:space="preserve">
          <source>Provide local fallback for persistent C header inclusion if the
persistent distribution isn&amp;rsquo;t installed. This makes the winbot happy.</source>
          <target state="translated">영구 배포가 설치되지 않은 경우 영구 C 헤더 포함을위한 로컬 대체를 제공합니다. 이것은 winbot을 행복하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8ac606e5e39c941eab577b626015386dd9217e8d" translate="yes" xml:space="preserve">
          <source>Python reference implementations now tested separately from the C
verions on all platforms.</source>
          <target state="translated">Python 참조 구현은 이제 모든 플랫폼에서 C 버전과 별도로 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="5f871a889547d6249b855718597f57108b9fcbec" translate="yes" xml:space="preserve">
          <source>Raise an</source>
          <target state="translated">올리기</target>
        </trans-unit>
        <trans-unit id="d9fef0114f229c0713bcddbd77ba2a8909ed0e69" translate="yes" xml:space="preserve">
          <source>Respect the</source>
          <target state="translated">존중</target>
        </trans-unit>
        <trans-unit id="25296c6309317d111610188133d73bd1853e353a" translate="yes" xml:space="preserve">
          <source>Scalable persistent object containers</source>
          <target state="translated">확장 가능한 영구 개체 컨테이너</target>
        </trans-unit>
        <trans-unit id="a8bbd38a4fa95159d3262290300fa4db02a5b792" translate="yes" xml:space="preserve">
          <source>Sphinx</source>
          <target state="translated">스핑크스</target>
        </trans-unit>
        <trans-unit id="bb2f94734591e89dce9dd2916703eec3ab672090" translate="yes" xml:space="preserve">
          <source>Stop accidentally installing the &amp;lsquo;terryfy&amp;rsquo; package in macOS wheels.
See &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/98&quot;&gt;issue 98&lt;/a&gt;.</source>
          <target state="translated">macOS 휠에 실수로 'terryfy'패키지를 설치하지 마십시오. &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/98&quot;&gt;98 호&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="d299fa472068af14ec8ea5dc81aa4ce4c80b25d5" translate="yes" xml:space="preserve">
          <source>Suppress testing 64-bit values in OLBTrees on 32 bit machines.
See:  &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/9&quot;&gt;https://github.com/zopefoundation/BTrees/issues/9&lt;/a&gt;</source>
          <target state="translated">32 비트 시스템의 OLBTrees에서 64 비트 값 테스트를 억제합니다. 참조 : &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/9&quot;&gt;https://github.com/zopefoundation/BTrees/issues/9&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="9b75c5d564254d1b0250d239adf80d1434931168" translate="yes" xml:space="preserve">
          <source>Testing Changes</source>
          <target state="translated">변경 사항 테스트</target>
        </trans-unit>
        <trans-unit id="d5e6348b5ba40600be4f9d655d00bb06b4a46af3" translate="yes" xml:space="preserve">
          <source>The unspecified true return values of</source>
          <target state="translated">지정되지 않은 true 반환 값</target>
        </trans-unit>
        <trans-unit id="b3b84fb59567fb36364bf8c8a4f4b1d1921c71bf" translate="yes" xml:space="preserve">
          <source>This is a bit of a return to BTrees 3 behavior in that Nones are
allowed as keys again.  Other objects with default ordering are
still not allowed as keys.</source>
          <target state="translated">이것은 Nones가 다시 키로 허용된다는 점에서 BTrees 3 동작으로의 약간의 반환입니다. 기본 순서가있는 다른 개체는 여전히 키로 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5a4a790a869e74d1aaebf52eb936aa9138293b0" translate="yes" xml:space="preserve">
          <source>This package contains a set of persistent object containers built around
a modified BTree data structure.  The trees are optimized for use inside
ZODB&amp;rsquo;s &amp;ldquo;optimistic concurrency&amp;rdquo; paradigm, and include explicit resolution
of conflicts detected by that mechanism.</source>
          <target state="translated">이 패키지에는 수정 된 BTree 데이터 구조를 중심으로 구축 된 영구 개체 컨테이너 세트가 포함되어 있습니다. 트리는 ZODB의 &quot;낙관적 동시성&quot;패러다임 내에서 사용하도록 최적화되어 있으며 해당 메커니즘에 의해 감지 된 충돌의 명시적인 해결을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="b39d5b2c9c997da8ae760408c259d9b31bcf8afb" translate="yes" xml:space="preserve">
          <source>Update pure-Python and C trees / sets to accept explicit None to indicate
max / min value for</source>
          <target state="translated">pure-Python 및 C 트리 / 세트를 업데이트하여 명시 적 없음을 허용하여 최대 / 최소 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7b671d69bdeae371518f2ade54b82ff383519d7c" translate="yes" xml:space="preserve">
          <source>Update pure-Python trees / sets to accept explicit None to indicate
open ranges for</source>
          <target state="translated">공개 범위를 나타 내기 위해 명시 적 없음을 허용하도록 순수 Python 트리 / 세트를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="0c46b983dfa082999f5ef10ae783882c25043fa5" translate="yes" xml:space="preserve">
          <source>Updated Trove classifiers.</source>
          <target state="translated">Trove 분류 기가 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="ca6c36e6dd64fe41f8f656208afdd65eafa063d4" translate="yes" xml:space="preserve">
          <source>Use pyproject.toml to specify build dependencies. This requires pip
18 or later to build from source.</source>
          <target state="translated">pyproject.toml을 사용하여 빌드 종속성을 지정하십시오. 소스에서 빌드하려면 pip 18 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dee0ee81440ed7401cafac8d0c73837321b457cc" translate="yes" xml:space="preserve">
          <source>When testing</source>
          <target state="translated">테스트 할 때</target>
        </trans-unit>
        <trans-unit id="48cf13177db6e55882c7bf7964bfab0f3c57aad9" translate="yes" xml:space="preserve">
          <source>ZODB</source>
          <target state="translated">ZODB</target>
        </trans-unit>
        <trans-unit id="6c2ada2b88bb107629fc962d24fa1eed82c9f5c8" translate="yes" xml:space="preserve">
          <source>ZODB3</source>
          <target state="translated">ZODB3</target>
        </trans-unit>
        <trans-unit id="4ac6ace023587574287516b4598487d73f5a6ef1" translate="yes" xml:space="preserve">
          <source>[OLI]OBTrees/OBuckets</source>
          <target state="translated">[OLI] OBTrees / OBuckets</target>
        </trans-unit>
        <trans-unit id="1a465e64ec3a32b87779899ca953655184748311" translate="yes" xml:space="preserve">
          <source>__all__</source>
          <target state="translated">__모두__</target>
        </trans-unit>
        <trans-unit id="27f4d2f24fb01668d7628034c810f68c5a73ab28" translate="yes" xml:space="preserve">
          <source>__getitem__</source>
          <target state="translated">__getitem__</target>
        </trans-unit>
        <trans-unit id="395777f8b50476a108c6a1df0386069175ee519e" translate="yes" xml:space="preserve">
          <source>__repr__</source>
          <target state="translated">__repr__</target>
        </trans-unit>
        <trans-unit id="7653d3b61221d2cb8895ff0faaebe3b866718dff" translate="yes" xml:space="preserve">
          <source>_p_changed</source>
          <target state="translated">_p_changed</target>
        </trans-unit>
        <trans-unit id="b2aaeb7b259c8049bfabb585e6a64d9ab149658f" translate="yes" xml:space="preserve">
          <source>alias (installs</source>
          <target state="translated">별칭 (설치</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="cd6a028fe6ea06fd5ad517d222f27fd0b4b2e670" translate="yes" xml:space="preserve">
          <source>as a separate distribution.</source>
          <target state="translated">별도의 배포로.</target>
        </trans-unit>
        <trans-unit id="0a0ca0818906fdef50d5811078b8af7b35231edd" translate="yes" xml:space="preserve">
          <source>bucket_repr()</source>
          <target state="translated">bucket_repr ()</target>
        </trans-unit>
        <trans-unit id="fd3793dc76893ba6322187142808196403fc60cc" translate="yes" xml:space="preserve">
          <source>consistently on Python 3 if the C extension for
BTrees is used but the</source>
          <target state="translated">BTrees에 대한 C 확장이 사용되지만 Python 3에서 일관되게</target>
        </trans-unit>
        <trans-unit id="6dafbcf610e9f81897b65ee9142715ab2e793f9e" translate="yes" xml:space="preserve">
          <source>coverage</source>
          <target state="translated">적용 범위</target>
        </trans-unit>
        <trans-unit id="574f9cf4a6ba188e2c2b796a03f50121b09a6904" translate="yes" xml:space="preserve">
          <source>environment variable at runtime even if
the C extensions are available. See
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/78&quot;&gt;https://github.com/zopefoundation/BTrees/issues/78&lt;/a&gt;</source>
          <target state="translated">C 확장을 사용할 수있는 경우에도 런타임시 환경 변수. 참조 &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/78&quot;&gt;https://github.com/zopefoundation/BTrees/issues/78를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f68f03a230c5258d626037a51990ba383eac40d2" translate="yes" xml:space="preserve">
          <source>environment variable support:  if set, the C
extensions will not be built, imported, or tested.</source>
          <target state="translated">환경 변수 지원 : 설정하면 C 확장이 빌드, 가져 오기 또는 테스트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9eb87f63c5e323077dc3dd7c922da1233167634f" translate="yes" xml:space="preserve">
          <source>environments under</source>
          <target state="translated">아래 환경</target>
        </trans-unit>
        <trans-unit id="44f00232cc983f3590956b8a3a0028bb810dcdaa" translate="yes" xml:space="preserve">
          <source>extra to require only the real</source>
          <target state="translated">진짜 만 요구하는 추가</target>
        </trans-unit>
        <trans-unit id="7f569c2e5878af8411871d81dc405cbdb2dd9358" translate="yes" xml:space="preserve">
          <source>for an object key
(in object-keyed trees) with default comparison on</source>
          <target state="translated">기본 비교가 설정된 객체 키 (객체 키가 지정된 트리)</target>
        </trans-unit>
        <trans-unit id="9786f6c283a53f7e531a8cdc708ee09e892af4c6" translate="yes" xml:space="preserve">
          <source>from failing.  The emulated
classes are &lt;strong&gt;not&lt;/strong&gt; functional, and should be considered implementation
details.</source>
          <target state="translated">실패에서. 에뮬레이트 된 클래스는 작동 &lt;strong&gt;하지 않으며&lt;/strong&gt; 구현 세부 사항으로 간주되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2b2e07511f40cc286f8a65fb08bd263b12795d64" translate="yes" xml:space="preserve">
          <source>function uses and the Python struct module
uses).</source>
          <target state="translated">함수 사용 및 Python 구조체 모듈 사용).</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">가져 오기</target>
        </trans-unit>
        <trans-unit id="fd49684145061f7b30d575626fd5212cd29d551b" translate="yes" xml:space="preserve">
          <source>has_key</source>
          <target state="translated">has_key</target>
        </trans-unit>
        <trans-unit id="f9ad049ce611426cde3a5571e31f6ebead745e9e" translate="yes" xml:space="preserve">
          <source>have changed.</source>
          <target state="translated">변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="240a2b181a49697eb0ce3459c4451a89a4b7d284" translate="yes" xml:space="preserve">
          <source>in all three cases.</source>
          <target state="translated">세 가지 경우 모두.</target>
        </trans-unit>
        <trans-unit id="06fa36f2d973a726c0b43920b80c232ecd48b2d1" translate="yes" xml:space="preserve">
          <source>in modules. In 4.7.0, they
incorrectly left out names. See &lt;a href=&quot;https://github.com/zopefoundation/BTrees/pull/132&quot;&gt;PR 132&lt;/a&gt;.</source>
          <target state="translated">모듈에서. 4.7.0에서는 이름이 잘못 누락되었습니다. &lt;a href=&quot;https://github.com/zopefoundation/BTrees/pull/132&quot;&gt;PR 132를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="62e2d2391d209f7796730badf57a03d7449ec5b5" translate="yes" xml:space="preserve">
          <source>in those cases, while the
Python implementation behaved as specified.</source>
          <target state="translated">이 경우 Python 구현은 지정된대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="33ba4d9f273855a3ce5c07957285a71c35dd91e9" translate="yes" xml:space="preserve">
          <source>is in the environment).</source>
          <target state="translated">환경에 있음).</target>
        </trans-unit>
        <trans-unit id="7316c8b2e74870d9d7e9d30bbc28ecf4cdf945ee" translate="yes" xml:space="preserve">
          <source>items</source>
          <target state="translated">항목</target>
        </trans-unit>
        <trans-unit id="d95b56ce41a2e1ac4cecdd398defd7414407cc08" translate="yes" xml:space="preserve">
          <source>jenkins</source>
          <target state="translated">젠킨스</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">열쇠</target>
        </trans-unit>
        <trans-unit id="64272352d9e2395ed5d0ff26dbdc9ce351f0215f" translate="yes" xml:space="preserve">
          <source>like the C versions.</source>
          <target state="translated">C 버전처럼.</target>
        </trans-unit>
        <trans-unit id="3891cfc022d8a014975923416ebf7cd12747b90b" translate="yes" xml:space="preserve">
          <source>matches
semantics (reversed-sort) of C implementation.</source>
          <target state="translated">C 구현의 의미론 (역 정렬)과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9cfb0e122a157027ca0cb90e658c449de6d34c61" translate="yes" xml:space="preserve">
          <source>maxKey</source>
          <target state="translated">maxKey</target>
        </trans-unit>
        <trans-unit id="61ceec97008ede79e1b7e519a99b9dfbd87123f2" translate="yes" xml:space="preserve">
          <source>max_internal_size</source>
          <target state="translated">max_internal_size</target>
        </trans-unit>
        <trans-unit id="9e599f4aa35c0a697c7639b518bd987bc36c1295" translate="yes" xml:space="preserve">
          <source>max_leaf_size</source>
          <target state="translated">max_leaf_size</target>
        </trans-unit>
        <trans-unit id="d9a4a9db17e7d150114abb2b7748f99f28acdfee" translate="yes" xml:space="preserve">
          <source>metapackage:  depending on the version used,
the metapackage could pull in stale versions of &lt;strong&gt;this&lt;/strong&gt; package and</source>
          <target state="translated">메타 패키지 : 사용 된 버전에 따라 메타 패키지 는 &lt;strong&gt;이&lt;/strong&gt; 패키지의 오래된 버전을 가져올 수 있으며</target>
        </trans-unit>
        <trans-unit id="8e6c1d2b950f474a2c95c5c0604a9166069c10af" translate="yes" xml:space="preserve">
          <source>minKey</source>
          <target state="translated">minKey</target>
        </trans-unit>
        <trans-unit id="1a1f58c9adc75e11a9c4c108e39bb79bfb4435ac" translate="yes" xml:space="preserve">
          <source>nose</source>
          <target state="translated">코</target>
        </trans-unit>
        <trans-unit id="31d2a9602570a3678d534e056d644212361ad499" translate="yes" xml:space="preserve">
          <source>of bucket objects, which could contain garbage
characters.</source>
          <target state="translated">쓰레기 문자를 포함 할 수있는 버킷 객체의.</target>
        </trans-unit>
        <trans-unit id="2a7ba9c8b788ecbaade836fbd6d25f4a0a0f26fa" translate="yes" xml:space="preserve">
          <source>operations. Instead, the results will be a</source>
          <target state="translated">작업. 대신 결과는</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="fe298b49b728d62b9ef695a79deb4a81243e1061" translate="yes" xml:space="preserve">
          <source>package,
rather than the</source>
          <target state="translated">패키지가 아닌</target>
        </trans-unit>
        <trans-unit id="112ade0f456886f6bc6137919e38762d86d95558" translate="yes" xml:space="preserve">
          <source>persistent</source>
          <target state="translated">지속성 있는</target>
        </trans-unit>
        <trans-unit id="df39b4caf493869772ff3a0f95cca6a9ae7934dc" translate="yes" xml:space="preserve">
          <source>printf</source>
          <target state="translated">printf</target>
        </trans-unit>
        <trans-unit id="58e9994cddc3a1e108ecb3b3281b891f536de6b6" translate="yes" xml:space="preserve">
          <source>repoze.sphinx.autointerface</source>
          <target state="translated">repoze.sphinx.autointerface</target>
        </trans-unit>
        <trans-unit id="516b1d4aaa0aea5fe9033dbd475ba5cdb853c7e5" translate="yes" xml:space="preserve">
          <source>repr</source>
          <target state="translated">repr</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="2b83d19e030c483bc7c79cb5bd4f165ef7eccf89" translate="yes" xml:space="preserve">
          <source>setup.py dev</source>
          <target state="translated">setup.py dev</target>
        </trans-unit>
        <trans-unit id="d8939efd1e9bbf786a23306d5473835d93a22d95" translate="yes" xml:space="preserve">
          <source>setup.py docs</source>
          <target state="translated">setup.py 문서</target>
        </trans-unit>
        <trans-unit id="2a4f239ff320ded2ac6b9d83e147ec78b7b4d43f" translate="yes" xml:space="preserve">
          <source>setup.py test</source>
          <target state="translated">setup.py 테스트</target>
        </trans-unit>
        <trans-unit id="2b6a63f0b547964e40e6d3acda888c6939eff5f6" translate="yes" xml:space="preserve">
          <source>setup_requires==['persistent']</source>
          <target state="translated">setup_requires == [ '영구']</target>
        </trans-unit>
        <trans-unit id="726e9cc4c734a430d2d400283705d08ed9f1b45c" translate="yes" xml:space="preserve">
          <source>sys.maxint</source>
          <target state="translated">sys.maxint</target>
        </trans-unit>
        <trans-unit id="68e2788df808604917fe718caa30855a1a89de20" translate="yes" xml:space="preserve">
          <source>that could come from I and L objects in
Python 2 in pure-Python mode. See &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/79&quot;&gt;https://github.com/zopefoundation/BTrees/issues/79&lt;/a&gt;</source>
          <target state="translated">순수 Python 모드에서 Python 2의 I 및 L 객체에서 올 수 있습니다. 참조 &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/79&quot;&gt;https://github.com/zopefoundation/BTrees/issues/79를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="390d4b4ee1822c9a6684f39e92e083d3c7b768dd" translate="yes" xml:space="preserve">
          <source>to control maximum sizes for Bucket/Set and BTree/TreeSet nodes.</source>
          <target state="translated">Bucket / Set 및 BTree / TreeSet 노드의 최대 크기를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="7bdf31978c0210720b3420242d2f1d74927c098c" translate="yes" xml:space="preserve">
          <source>tox</source>
          <target state="translated">독극물</target>
        </trans-unit>
        <trans-unit id="048b0cb1b94379c74e7e8c8ede496e3edbea3386" translate="yes" xml:space="preserve">
          <source>values</source>
          <target state="translated">가치</target>
        </trans-unit>
        <trans-unit id="0a526cc05b49998d59e2cf55041080e0e5a812aa" translate="yes" xml:space="preserve">
          <source>when adding items to small pure-Python
BTrees/TreeSets. See:
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/11&quot;&gt;https://github.com/zopefoundation/BTrees/issues/11&lt;/a&gt;</source>
          <target state="translated">작은 순수 Python BTrees / TreeSets에 항목을 추가 할 때. 참조 : &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/11&quot;&gt;https://github.com/zopefoundation/BTrees/issues/11&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e971414e6bba372194b03f41ecdb14a70b32b75" translate="yes" xml:space="preserve">
          <source>when passing 64bit values to long
keys / values on Win64.  See:
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/32&quot;&gt;https://github.com/zopefoundation/BTrees/issues/32&lt;/a&gt;</source>
          <target state="translated">64 비트 값을 Win64의 긴 키 / 값에 전달할 때. 참조 : &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/32&quot;&gt;https://github.com/zopefoundation/BTrees/issues/32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e02ce41db2bce2f8510443d7d9c67979d303b52e" translate="yes" xml:space="preserve">
          <source>when removing items from small pure-Python
BTrees/TreeSets and when adding items to small pure-Python Sets. See:
&lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/13&quot;&gt;https://github.com/zopefoundation/BTrees/issues/13&lt;/a&gt;</source>
          <target state="translated">작은 순수 Python BTrees / TreeSet에서 항목을 제거하고 작은 순수 Python 세트에 항목을 추가 할 때. 참조 : &lt;a href=&quot;https://github.com/zopefoundation/BTrees/issues/13&quot;&gt;https://github.com/zopefoundation/BTrees/issues/13&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbd172c67a48a8261dc1273aeafa6c8a5efc30b3" translate="yes" xml:space="preserve">
          <source>when using the pure Python
implementation (PyPy and when</source>
          <target state="translated">순수 Python 구현을 사용할 때 (PyPy 및</target>
        </trans-unit>
        <trans-unit id="bcca95bfc8be221c4a54b40c67fc2a18c085e8ff" translate="yes" xml:space="preserve">
          <source>zope.app.security:permission.zcml</source>
          <target state="translated">zope.app.security:permission.zcml</target>
        </trans-unit>
        <trans-unit id="5b3ab346fe331966a245e0ad188039ecd28d0fd6" translate="yes" xml:space="preserve">
          <source>zope.testing</source>
          <target state="translated">zope.testing</target>
        </trans-unit>
        <trans-unit id="38d6da84461bfe3ace374f6feabf9759774c0edf" translate="yes" xml:space="preserve">
          <source>zope.testrunner</source>
          <target state="translated">zope.testrunner</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
