<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/falcon/">
    <body>
      <group id="falcon">
        <trans-unit id="47ffdbbd14daa10bb38719f58a11e44b2d1bc933" translate="yes" xml:space="preserve">
          <source>$ xdg-open docs/_build/html/index.html</source>
          <target state="translated">$ xdg-open docs / _build / html / index.html</target>
        </trans-unit>
        <trans-unit id="987dc9b6845074c013fdfd0ad40a0731cd2e367b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Falcon is rock solid and it&amp;rsquo;s fast.&amp;rdquo;</source>
          <target state="translated">&quot;팔콘은 견고하고 빠릅니다.&quot;</target>
        </trans-unit>
        <trans-unit id="ff1a1ce11f3e966a139e7d980322e4604f3c17c8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Falcon looks great so far. I hacked together a quick test for a
tiny server of mine and was ~40% faster with only 20 minutes of
work.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;팔콘은 지금까지 훌륭해 보입니다. 작은 서버에 대한 빠른 테스트를 해킹했으며 20 분의 작업만으로 ~ 40 % 더 빨랐습니다.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="38cdb6353f0df1d3444fef5bfc78559fbc3638c2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;I feel like I&amp;rsquo;m just talking HTTP at last, with nothing in the
middle. Falcon seems like the requests of backend.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;중간에 아무것도없는 상태에서 마지막으로 HTTP를 사용하는 것 같습니다. 팔콘은 백엔드 요청처럼 보입니다.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4b60856cac7099fb678e501e54cc608214024152" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;I&amp;rsquo;m loving #falconframework! Super clean and simple, I finally
have the speed and flexibility I need!&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;#falconframework를 좋아합니다! 매우 깨끗하고 간단합니다. 마침내 필요한 속도와 유연성을 갖추게되었습니다!&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a701e27daff8acc26230529120c26eedb6998897" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;The source code for Falcon is so good, I almost prefer it to
documentation. It basically can&amp;rsquo;t be wrong.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;Falcon의 소스 코드는 매우 훌륭해서 문서화보다 거의 선호합니다. 기본적으로 틀릴 수는 없습니다.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1954c176b4fb4901c89087d1cd880d8f28a9199c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;We have been using Falcon as a replacement for [framework] and we simply love the performance (three times faster) and code base size (easily half of our original [framework] code).&amp;rdquo;</source>
          <target state="translated">&quot;우리는 [프레임 워크] 대신 Falcon을 사용해 왔으며 성능 (3 배 더 빠름)과 코드베이스 크기 (원래 [프레임 워크] 코드의 절반 정도)가 마음에 듭니다.&quot;</target>
        </trans-unit>
        <trans-unit id="1bebe06c37fc9792864c909c11d0dac7776ed9b0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;What other framework has integrated support for 786 TRY IT NOW ?&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;다른 어떤 프레임 워크가 786 TRY IT NOW에 대한 지원을 통합 했습니까?</target>
        </trans-unit>
        <trans-unit id="f2b3122dfc617597edd298c7eb3d974f67d1f69a" translate="yes" xml:space="preserve">
          <source>, which will in turn detect the presence of Cython
and then compile (AKA cythonize) the Falcon framework with the system&amp;rsquo;s
default C compiler.</source>
          <target state="translated">, 그러면 Cython의 존재를 감지 한 다음 시스템의 기본 C 컴파일러로 Falcon 프레임 워크를 컴파일 (일명 cythonize)합니다.</target>
        </trans-unit>
        <trans-unit id="75262c839fe7bdce825dee598401d72dc8394722" translate="yes" xml:space="preserve">
          <source>-v</source>
          <target state="translated">-V</target>
        </trans-unit>
        <trans-unit id="88f83d5feb7c22b5e9553dc817e91eec62859a55" translate="yes" xml:space="preserve">
          <source>7ideas</source>
          <target state="translated">7 아이디어</target>
        </trans-unit>
        <trans-unit id="7c958e6846c515af33c4c8ad9e6e5b0f189936b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://pypy.org/&quot;&gt;PyPy&lt;/a&gt; is the fastest way to run your Falcon app.
Both PyPy2.7 and PyPy3.5 are supported as of PyPy v5.10.</source>
          <target state="translated">&lt;a href=&quot;http://pypy.org/&quot;&gt;PyPy&lt;/a&gt; 는 Falcon 앱을 실행하는 가장 빠른 방법입니다. PyPy2.7 및 PyPy3.5는 모두 PyPy v5.10부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="48b713fa01669ca9ea3a39d18c67317459c215af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://falconframework.org&quot;&gt;Falcon&lt;/a&gt; is a reliable,
high-performance Python web framework for building
large-scale app backends and microservices. It encourages the REST
architectural style, and tries to do as little as possible while
remaining highly effective.</source>
          <target state="translated">&lt;a href=&quot;https://falconframework.org&quot;&gt;Falcon&lt;/a&gt; 은 대규모 앱 백엔드 및 마이크로 서비스를 구축하기위한 안정적인 고성능 Python 웹 프레임 워크입니다. REST 아키텍처 스타일을 장려하고 가능한 한 적은 작업을 수행하면서 높은 효율성을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="3e43e25f6223f565dca759f571c57750860bb5d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry/dev for Falcon contributors&lt;/a&gt; @ Gitter</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;Falcon 컨트&lt;/a&gt; 리뷰 터 @ Gitter를 위한 falconry / dev</target>
        </trans-unit>
        <trans-unit id="cfa0111ce52e2c7b73f0813c0cb8c46c3b6fe2a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;falconry/user for Falcon users&lt;/a&gt; @ Gitter</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;팔콘 사용자&lt;/a&gt; @ 거터 @ 매</target>
        </trans-unit>
        <trans-unit id="67f91d1ca140fecb368aba1f496fa949ba0989c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;- Antoine de Saint-Exup&amp;eacute;ry&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-앙투안 드 생 텍쥐페리&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1cb5058b74e7cf413e7a88730fe773866defbe5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debuggable.&lt;/strong&gt; Falcon eschews magic. It&amp;rsquo;s easy to tell which inputs
lead to which outputs. Unhandled exceptions are never encapsulated or
masked. Potentially surprising behaviors, such as automatic request body
parsing, are well-documented and disabled by default. Finally, when it
comes to the framework itself, we take care to keep logic paths simple
and understandable. All this makes it easier to reason about the code
and to debug edge cases in large-scale deployments.</source>
          <target state="translated">&lt;strong&gt;디버깅 가능 &lt;/strong&gt;팔콘은 마법을 피합니다. 어떤 입력이 어떤 출력으로 연결되는지 쉽게 알 수 있습니다. 처리되지 않은 예외는 캡슐화되거나 마스킹되지 않습니다. 자동 요청 본문 구문 분석과 같은 잠재적으로 놀라운 동작은 기본적으로 잘 문서화되고 비활성화되어 있습니다. 마지막으로, 프레임 워크 자체와 관련하여 논리 경로를 단순하고 이해하기 쉽게 유지합니다. 이 모든 것이 코드에 대한 추론을 쉽게하고 대규모 배포에서 엣지 사례를 디버그하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="d4fc576374150903e4da607d935600ed9ecf5c59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fast.&lt;/strong&gt; Same hardware, more requests. Falcon turns around
requests several times faster than most other Python frameworks. For
an extra speed boost, Falcon compiles itself with Cython when
available, and also works well with &lt;a href=&quot;https://pypy.org&quot;&gt;PyPy&lt;/a&gt;.
Considering a move to another programming language? Benchmark with
Falcon + PyPy first.</source>
          <target state="translated">&lt;strong&gt;빠른. &lt;/strong&gt;동일한 하드웨어, 더 많은 요청. Falcon은 대부분의 다른 Python 프레임 워크보다 몇 배나 빠른 요청을 처리합니다. 추가 속도 향상을 위해 Falcon은 사용 가능한 경우 Cython으로 자체 컴파일하고 &lt;a href=&quot;https://pypy.org&quot;&gt;PyPy&lt;/a&gt; 에서도 잘 작동합니다 . 다른 프로그래밍 언어로의 전환을 고려하고 있습니까? 먼저 Falcon + PyPy로 벤치 마크하십시오.</target>
        </trans-unit>
        <trans-unit id="c744ced3ca5f2a74639d8b9a5d9db12bb2c99ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flexible.&lt;/strong&gt; Falcon leaves a lot of decisions and implementation
details to you, the API developer. This gives you a lot of freedom to
customize and tune your implementation. Due to Falcon&amp;rsquo;s minimalist
design, Python community members are free to independently innovate on
&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon add-ons and complementary packages&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;융통성 있는. &lt;/strong&gt;Falcon은 많은 결정과 구현 세부 사항을 API 개발자에게 맡깁니다. 이를 통해 구현을 사용자 정의하고 조정할 수 있습니다. Falcon의 미니멀리스트 디자인으로 인해 Python 커뮤니티 회원은 &lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon 애드온 및 보완 패키지&lt;/a&gt; 를 독립적으로 혁신 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a850502bae1f427adc3517c437b7e307839a2047" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Installing on OS X&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;OS X에 설치&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39cf29289e092b732525795f51819e30740b7f9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reliable.&lt;/strong&gt; We go to great lengths to avoid introducing
breaking changes, and when we do they are fully documented and only
introduced (in the spirit of
&lt;a href=&quot;http://semver.org/&quot;&gt;SemVer&lt;/a&gt;) with a major version
increment. The code is rigorously tested with numerous inputs and we
require 100% coverage at all times. Falcon does not depend on any
external Python packages.</source>
          <target state="translated">&lt;strong&gt;신뢰할 수 있습니다. &lt;/strong&gt;우리는 주요 변경 사항을 도입하지 않기 위해 많은 노력을 &lt;a href=&quot;http://semver.org/&quot;&gt;기울이고&lt;/a&gt; 있으며, 그렇게 할 때 완전히 문서화되고 주 버전 증분으로 만 도입됩니다 ( SemVer 의 정신으로 ). 코드는 수많은 입력으로 엄격하게 테스트되었으며 항상 100 % 적용 범위가 필요합니다. Falcon은 외부 Python 패키지에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c534ebb5db5df1cac602a6e41637d1d1a18249a" translate="yes" xml:space="preserve">
          <source>A more complex example</source>
          <target state="translated">더 복잡한 예</target>
        </trans-unit>
        <trans-unit id="e332cccd28f9d33eb4afbb0ba6f5e96e9c76b914" translate="yes" xml:space="preserve">
          <source>A number of Falcon add-ons, templates, and complementary packages are
available for use in your projects. We&amp;rsquo;ve listed several of these on the
&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wiki&lt;/a&gt; as a starting
point, but you may also wish to search PyPI for additional resources.</source>
          <target state="translated">프로젝트에서 여러 가지 Falcon 애드온, 템플릿 및 보완 패키지를 사용할 수 있습니다. &lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wiki&lt;/a&gt; 에서이 중 몇 가지를 시작점으로 나열 했지만 PyPI에서 추가 리소스를 검색 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ae4de082167bd69886283d58fc776d53edd3ccb" translate="yes" xml:space="preserve">
          <source>APPSEC(riker): In all trust, there is the possibility for betrayal.</source>
          <target state="translated">APPSEC (riker) : 모든 신뢰에는 배신의 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="39e7013369f95cb36ddf9d7e2c58567c6aa444fd" translate="yes" xml:space="preserve">
          <source>An unladen web framework for building APIs and app backends.</source>
          <target state="translated">API 및 앱 백엔드를 구축하기위한 무부하 웹 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="abd629313c9209739dc2af7e50536221a8fcc407" translate="yes" xml:space="preserve">
          <source>Before submitting a pull request, please ensure you have added/updated
the appropriate tests (and that all existing tests still pass with your
changes), and that your coding style follows PEP 8 and doesn&amp;rsquo;t cause
pyflakes to complain.</source>
          <target state="translated">풀 요청을 제출하기 전에 적절한 테스트를 추가 / 업데이트했는지 (그리고 기존의 모든 테스트가 여전히 변경 사항과 함께 통과하는지), 코딩 스타일이 PEP 8을 따르고 pyflakes가 불평하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3348cc07058a464ebb973af5bfdb70ca7968c2db" translate="yes" xml:space="preserve">
          <source>CPython</source>
          <target state="translated">CPython</target>
        </trans-unit>
        <trans-unit id="8c247b055f1e59fe3f6f0d430c6df285d1cef3aa" translate="yes" xml:space="preserve">
          <source>CPython 2.7, CPython 3.5+, PyPy2.7, and PyPy3.5 support</source>
          <target state="translated">CPython 2.7, CPython 3.5+, PyPy2.7 및 PyPy3.5 지원</target>
        </trans-unit>
        <trans-unit id="198fc4e0b715dea305d8c73f215116b5ad3112ca" translate="yes" xml:space="preserve">
          <source>Comments follow &lt;a href=&quot;https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments&quot;&gt;Google&amp;rsquo;s style guide&lt;/a&gt;,
with the additional requirement of prefixing inline comments using your
GitHub nick and an appropriate prefix:</source>
          <target state="translated">주석은 GitHub 닉과 적절한 접두사를 사용하여 인라인 주석 접두사를 추가해야하는 &lt;a href=&quot;https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments&quot;&gt;Google의 스타일 가이드를&lt;/a&gt; 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="26e3591fb254ea5f02e84a9f4b42fe69b726eb43" translate="yes" xml:space="preserve">
          <source>Commit messages should be formatted using &lt;a href=&quot;https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines&quot;&gt;AngularJS
conventions&lt;/a&gt;.</source>
          <target state="translated">커밋 메시지는 &lt;a href=&quot;https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines&quot;&gt;AngularJS 규칙을&lt;/a&gt; 사용하여 형식을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">커뮤니티</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="03d6abbbd5f0d35502a6680bc0b2b9f7da842571" translate="yes" xml:space="preserve">
          <source>Copyright 2013-2019 by Individual and corporate contributors as
noted in the individual source files.</source>
          <target state="translated">개별 소스 파일에 명시된 개인 및 기업 기여자의 저작권 2013-2019.</target>
        </trans-unit>
        <trans-unit id="2173925ca03217e63463d2a77316cf649645885b" translate="yes" xml:space="preserve">
          <source>Cronitor</source>
          <target state="translated">Cronitor</target>
        </trans-unit>
        <trans-unit id="d599667d492faa0d4dc25235bb3f1908820235e5" translate="yes" xml:space="preserve">
          <source>DRY request processing via middleware components and hooks</source>
          <target state="translated">미들웨어 구성 요소 및 후크를 통한 DRY 요청 처리</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="6156a516dbfc6ea31bca7b52f7d996c965a0b36f" translate="yes" xml:space="preserve">
          <source>EMC</source>
          <target state="translated">EMC</target>
        </trans-unit>
        <trans-unit id="7a5cfd205582374128d08fa3eed383f40815420b" translate="yes" xml:space="preserve">
          <source>Easy access to headers and bodies through request and response
classes</source>
          <target state="translated">요청 및 응답 클래스를 통해 헤더 및 본문에 쉽게 액세스</target>
        </trans-unit>
        <trans-unit id="ff48f03e1496cdfcab9efde703a6ff29f4c06783" translate="yes" xml:space="preserve">
          <source>Falcon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;lives on GitHub&lt;/a&gt;, making the
code easy to browse, download, fork, etc. Pull requests are always welcome! Also,
please remember to star the project if it makes you happy. :)</source>
          <target state="translated">팔콘 &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;은 GitHub&lt;/a&gt; 에 있으며 코드를 쉽게 탐색, 다운로드, 포크 등으로 쉽게 만들 수 있습니다. 풀 요청은 언제나 환영합니다! 또한 행복하다면 프로젝트에 별표를 표시해야합니다. :)</target>
        </trans-unit>
        <trans-unit id="2ff92c93236f195dd672d7d5152b84a0ce77a3ac" translate="yes" xml:space="preserve">
          <source>Falcon add-ons and complementary packages</source>
          <target state="translated">팔콘 애드온 및 보완 패키지</target>
        </trans-unit>
        <trans-unit id="002b14694690e328be54f6c23431c08d2c5df58d" translate="yes" xml:space="preserve">
          <source>Falcon also fully supports
&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.7 and 3.5+.</source>
          <target state="translated">Falcon은 &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.7 및 3.5+ 도 완벽하게 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="77812327df461b35042a24d25e99dababb29a1ca" translate="yes" xml:space="preserve">
          <source>Falcon apps work with any WSGI server, and run like a champ under
CPython 2.7, CPython 3.5+, PyPy2.7, and PyPy3.5.</source>
          <target state="translated">Falcon 앱은 모든 WSGI 서버에서 작동하며 CPython 2.7, CPython 3.5+, PyPy2.7 및 PyPy3.5에서 챔피언처럼 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="bfa24d4ce865aa72cfef302695b40332439ab154" translate="yes" xml:space="preserve">
          <source>Falcon does not require the installation of any other packages, although if
Cython has been installed into the environment, it will be used to optimize
the framework when not using a manylinux wheel, as explained above.</source>
          <target state="translated">Falcon은 다른 패키지를 설치할 필요가 없지만 Cython이 환경에 설치되어 있다면 위에서 설명한 것처럼 많은 Linux 휠을 사용하지 않을 때 프레임 워크를 최적화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="15a321e1fd9a0e3086dac6f948202f8b6bbcc6a7" translate="yes" xml:space="preserve">
          <source>Falcon image courtesy of &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Brown-Falcon,-Vic,-3.1.2008.jpg&quot;&gt;John
O&amp;rsquo;Neill&lt;/a&gt;.</source>
          <target state="translated">Falcon 이미지 제공 : &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Brown-Falcon,-Vic,-3.1.2008.jpg&quot;&gt;John O'Neill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e693fff89fba4cc021a57b3ebb6d7f3af5f9c8c5" translate="yes" xml:space="preserve">
          <source>Falcon is used around the world by a growing number of organizations,
including:</source>
          <target state="translated">팔콘은 다음을 포함하여 점점 더 많은 조직에서 전 세계적으로 사용되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2cf57886dfd94a138ab528debe4d7f89ff1901" translate="yes" xml:space="preserve">
          <source>Falcon speaks WSGI, and so in order to serve a Falcon app, you will
need a WSGI server. Gunicorn and uWSGI are some of the more popular
ones out there, but anything that can load a WSGI app will do.</source>
          <target state="translated">Falcon은 WSGI를 사용하므로 Falcon 앱을 제공하려면 WSGI 서버가 필요합니다. Gunicorn과 uWSGI는 가장 인기있는 것들이지만 WSGI 앱을로드 할 수있는 모든 것이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="00b805955b6ca46c1f5fe233004ea2255ebc74ef" translate="yes" xml:space="preserve">
          <source>Falcon talks, podcasts, and blog posts</source>
          <target state="translated">팔콘 대화, 팟 캐스트 및 블로그 게시물</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="c4cad81e998cd6e254b92361c04556874d95a05e" translate="yes" xml:space="preserve">
          <source>Has Falcon helped you make an awesome app? Show your support today with a one-time donation or by becoming a patron. Supporters get cool gear, an opportunity to promote their brand to Python developers, and
prioritized support.</source>
          <target state="translated">Falcon이 멋진 앱을 만드는 데 도움이 되었나요? 일회성 기부 또는 후원자가되어 오늘 귀하의 지원을 보여주십시오. 서포터는 멋진 장비, Python 개발자에게 브랜드를 홍보 할 수있는 기회, 우선 지원을받습니다.</target>
        </trans-unit>
        <trans-unit id="1cbc952e8c63914134e2eede89ef63a1c732924d" translate="yes" xml:space="preserve">
          <source>Here is a more involved example that demonstrates reading headers and
query parameters, handling errors, and working with request and response
bodies.</source>
          <target state="translated">다음은 헤더와 쿼리 매개 변수를 읽고, 오류를 처리하고, 요청 및 응답 본문을 사용하는 방법을 보여주는보다 관련성있는 예입니다.</target>
        </trans-unit>
        <trans-unit id="73d4ef1bd486057b10a87588b9e1345e026d2f84" translate="yes" xml:space="preserve">
          <source>Here is a simple, contrived example showing how to create a Falcon-based
API.</source>
          <target state="translated">다음은 Falcon 기반 API를 만드는 방법을 보여주는 간단하고 인위적인 예제입니다.</target>
        </trans-unit>
        <trans-unit id="c764fba7f0ff6cdb79f8d9ac8fe3052d5b821e23" translate="yes" xml:space="preserve">
          <source>Highly-optimized, extensible code base</source>
          <target state="translated">고도로 최적화되고 확장 가능한 코드 기반</target>
        </trans-unit>
        <trans-unit id="6b350e685accbcb696e9f21fed781eca73acb604" translate="yes" xml:space="preserve">
          <source>How is Falcon Different?</source>
          <target state="translated">팔콘은 어떻게 다른가요?</target>
        </trans-unit>
        <trans-unit id="843d7bd0a3c1afa93060c8650324bda7c63c03a6" translate="yes" xml:space="preserve">
          <source>Hurricane Electric</source>
          <target state="translated">허리케인 전기</target>
        </trans-unit>
        <trans-unit id="8414b4fd22c852e869cd79ac92f078aafd072b6f" translate="yes" xml:space="preserve">
          <source>Idiomatic HTTP error responses</source>
          <target state="translated">관용적 인 HTTP 오류 응답</target>
        </trans-unit>
        <trans-unit id="9df4e83e5b0f2301e105772694047456e209f5a1" translate="yes" xml:space="preserve">
          <source>If you are using the Falcon framework for a community or commercial
project, please consider adding your information to our wiki under
&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;Who&amp;rsquo;s Using Falcon?&lt;/a&gt;</source>
          <target state="translated">커뮤니티 또는 상업용 프로젝트에 Falcon 프레임 워크를 사용하는 경우 Falcon을 사용하는 &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;사람&lt;/a&gt; 아래의 Wiki에 정보를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa396e2e252f871b7636db728e114d44d9a490c2" translate="yes" xml:space="preserve">
          <source>If you want to verify that Cython is being invoked, simply
pass</source>
          <target state="translated">Cython이 호출되고 있는지 확인하려면 간단히</target>
        </trans-unit>
        <trans-unit id="8f92054db21d8198ff200efa373df38c77d4a3c6" translate="yes" xml:space="preserve">
          <source>If you would like to contribute but don&amp;rsquo;t already have something in mind,
we invite you to take a look at the issues listed under our
&lt;a href=&quot;https://github.com/falconry/falcon/milestones&quot;&gt;next milestone&lt;/a&gt;.
If you see one you&amp;rsquo;d like to work on, please leave a quick comment so that we don&amp;rsquo;t
end up with duplicated effort. Thanks in advance!</source>
          <target state="translated">기여하고 싶지만 아직 염두에 두지 않은 사항이있는 경우 &lt;a href=&quot;https://github.com/falconry/falcon/milestones&quot;&gt;다음 마일스톤&lt;/a&gt; 아래에 나열된 문제를 살펴 보시기 바랍니다 . 작업하고 싶은 것이 있으면 중복 된 노력으로 끝나지 않도록 빠른 댓글을 남겨주세요. 미리 감사드립니다!</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="20c52e00f1813458387eeb6afc3de39bf772d139" translate="yes" xml:space="preserve">
          <source>Installing one of the pre-built Falcon wheels is a great way to get up and
running quickly. However, when deploying your application in production, you
may wish to compile Falcon via Cython yourself, using the target system&amp;rsquo;s
native toolchain.</source>
          <target state="translated">미리 제작 된 Falcon 휠 중 하나를 설치하는 것은 빠르게 시작하고 실행할 수있는 좋은 방법입니다. 그러나 프로덕션에 애플리케이션을 배포 할 때 타겟 시스템의 기본 도구 모음을 사용하여 Cython을 통해 직접 Falcon을 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d10567ff32e2cdcd410d4f313e69bc56c6cb04b6" translate="yes" xml:space="preserve">
          <source>Intuitive routing via URI templates and REST-inspired resource
classes</source>
          <target state="translated">URI 템플릿 및 REST 기반 리소스 클래스를 통한 직관적 인 라우팅</target>
        </trans-unit>
        <trans-unit id="0645c2efb43274d5ee05ebcaa28c7710a5611f1a" translate="yes" xml:space="preserve">
          <source>John Vrbanac (&lt;strong&gt;jmvrbanac&lt;/strong&gt; on GH and Gitter, and &lt;strong&gt;jvrbanac&lt;/strong&gt; on Twitter)</source>
          <target state="translated">존 Vrbanac ( &lt;strong&gt;jmvrbanac&lt;/strong&gt; GH와 Gitter에, 그리고 &lt;strong&gt;jvrbanac&lt;/strong&gt; 트위터)</target>
        </trans-unit>
        <trans-unit id="b7032fbdf250b19104a49e3eeed551cd92141e7b" translate="yes" xml:space="preserve">
          <source>Kurt Griffiths, Project Lead (&lt;strong&gt;kgriffs&lt;/strong&gt; on GH, Gitter, and Twitter)</source>
          <target state="translated">Kurt Griffiths, 프로젝트 책임자 ( GH, Gitter 및 Twitter의 &lt;strong&gt;kgriffs&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="30ee8e7c3e291db43f99c5ce645f3f9d498b40ca" translate="yes" xml:space="preserve">
          <source>Leadpages</source>
          <target state="translated">리드 페이지</target>
        </trans-unit>
        <trans-unit id="56fe269a49915241cd1dffdd3ebc1d8257dd4d77" translate="yes" xml:space="preserve">
          <source>Learn how to support Falcon development</source>
          <target state="translated">Falcon 개발 지원 방법 알아보기</target>
        </trans-unit>
        <trans-unit id="902c91d94e0fd512d0a7f41cf7f018ee6f01bf85" translate="yes" xml:space="preserve">
          <source>Legal</source>
          <target state="translated">적법한</target>
        </trans-unit>
        <trans-unit id="53303f5c4015e5bf0c239033576655234d3a8b53" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;); you may
not use any portion of the Falcon framework except in compliance with
the License. Contributors agree to license their work under the same
License. You may obtain a copy of the License at
&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;</source>
          <target state="translated">Apache 라이선스 버전 2.0 ( &quot;라이선스&quot;)에 따라 사용이 허가되었습니다. 라이선스 준수를 제외하고는 Falcon 프레임 워크의 어떤 부분도 사용할 수 없습니다. 기여자는 동일한 라이선스에 따라 자신의 작업에 라이선스를 부여하는 데 동의합니다. &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt; 에서 라이센스 사본을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b0afb702cf776869dbe10b48edbb7ac514b462f" translate="yes" xml:space="preserve">
          <source>NOTE(riker): Well, that&amp;rsquo;s certainly good to know.</source>
          <target state="translated">참고 (riker) : 확실히 알아두면 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1214f3732c4253ef4383d07893f77051d67bd11b" translate="yes" xml:space="preserve">
          <source>Nick Zaccardi (&lt;strong&gt;nZac&lt;/strong&gt; on GH and Gitter)</source>
          <target state="translated">Nick Zaccardi ( GH 및 Gitter의 &lt;strong&gt;nZac&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="c9fc352cefc141d44ae45888de551723388e2571" translate="yes" xml:space="preserve">
          <source>Once the docs have been built, you can view them by opening the following
index page in your browser. On OS X it&amp;rsquo;s as simple as:</source>
          <target state="translated">문서가 작성되면 브라우저에서 다음 색인 페이지를 열어서 볼 수 있습니다. OS X에서는 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="9c6f9bc1cfe0a36fa875aa95eae59b41d61bd809" translate="yes" xml:space="preserve">
          <source>Once you have cloned the repo or downloaded a tarball from GitHub, you
can install Falcon like this:</source>
          <target state="translated">repo를 복제하거나 GitHub에서 tarball을 다운로드하면 다음과 같이 Falcon을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="619dcf8e8b26d26cbbf2f58aff969858596e90a6" translate="yes" xml:space="preserve">
          <source>Online docs are available at: &lt;a href=&quot;https://falcon.readthedocs.io&quot;&gt;https://falcon.readthedocs.io&lt;/a&gt;</source>
          <target state="translated">온라인 문서는 &lt;a href=&quot;https://falcon.readthedocs.io&quot;&gt;https://falcon.readthedocs.io&lt;/a&gt; 에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d8bd6f9a145c81ba3f59062586c5cf6108400d0" translate="yes" xml:space="preserve">
          <source>OpenStack</source>
          <target state="translated">OpenStack</target>
        </trans-unit>
        <trans-unit id="ec88fcb6d25d5b1be71e82bce96f86acb7be89b1" translate="yes" xml:space="preserve">
          <source>Opera Software</source>
          <target state="translated">오페라 소프트웨어</target>
        </trans-unit>
        <trans-unit id="ed83cc1138b01c27b6845a510ae0c03e6fb942b4" translate="yes" xml:space="preserve">
          <source>Or on Linux:</source>
          <target state="translated">또는 Linux에서 :</target>
        </trans-unit>
        <trans-unit id="25f4768f2d0bf2d9493d3f638e85e7c78f3db953" translate="yes" xml:space="preserve">
          <source>Or, if you want to edit the code, first fork the main repo, clone the fork
to your desktop, and then run the following to install it using symbolic
linking, so that when you change your code, the changes will be automagically
available to your app without having to reinstall the package:</source>
          <target state="translated">또는 코드를 편집하려면 먼저 기본 저장소를 포크하고 포크를 데스크탑에 복제 한 다음 기호 링크를 사용하여 다음을 실행하여 코드를 변경할 때 변경 사항을 자동으로 사용할 수 있도록하십시오. 패키지를 다시 설치할 필요없이 앱 :</target>
        </trans-unit>
        <trans-unit id="c5b258f43418d6aa5bca2b2f7856e2cbaa25764b" translate="yes" xml:space="preserve">
          <source>Or, to install the latest beta or release candidate, if any:</source>
          <target state="translated">또는 최신 베타 또는 릴리스 후보를 설치하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="fb9e852068a0bd991030aaafb5a1ac94af3ec5cf" translate="yes" xml:space="preserve">
          <source>Or, to run the default set of tests:</source>
          <target state="translated">또는 기본 테스트 세트를 실행하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="3b58ec54d5832dabf6e505062e5305085b435a4b" translate="yes" xml:space="preserve">
          <source>PERF(riker): Travel time to the nearest starbase?</source>
          <target state="translated">PERF (riker) : 가장 가까운 스타베이스까지 이동하는 시간?</target>
        </trans-unit>
        <trans-unit id="db29affa7d0b37eec3a63ced5e9423cd3f52ef05" translate="yes" xml:space="preserve">
          <source>Per our
&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;,
we expect everyone who participates in community discussions to act
professionally, and lead by example in encouraging constructive
discussions. Each individual in the community is responsible for
creating a positive, constructive, and productive culture.</source>
          <target state="translated">우리 당 &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;행동 강령&lt;/a&gt; , 우리는 커뮤니티 토론에 참여하는 모든 사람들이 전문적으로 행동하고, 건설적인 토론을 장려에 솔선 수범 할 전망이다. 지역 사회의 각 개인은 긍정적이고 건설적이며 생산적인 문화를 조성 할 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="89285d2a833db68bbdb2e0703c2fb6bfb0962ec3" translate="yes" xml:space="preserve">
          <source>Perfection is finally attained not when there is no longer anything
to add, but when there is no longer anything to take away.</source>
          <target state="translated">더 이상 추가 할 항목이 없을 때가 아니라 더 이상 제거 할 항목이 없을 때 완벽하게됩니다.</target>
        </trans-unit>
        <trans-unit id="ca4f2f41584370112a98a174a02c38c8abf411a5" translate="yes" xml:space="preserve">
          <source>Please don&amp;rsquo;t hesitate to reach out if you have any questions, or just need a
little help getting started. You can find us in
&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry/dev&lt;/a&gt; on Gitter.</source>
          <target state="translated">궁금한 점이 있거나 시작하는 데 약간의 도움이 필요하면 언제든지 문의 해주세요. Gitter의 &lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry / dev&lt;/a&gt; 에서 우리를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="192e200e349afc7e9747d57b0f4ad2e3068c9ba4" translate="yes" xml:space="preserve">
          <source>Please note that all contributors and maintainers of this project are subject to our &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">이 프로젝트의 모든 기여자와 관리자는 우리 &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;의 행동 강령의&lt;/a&gt; 적용을받습니다 .</target>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="translated">파이 파이</target>
        </trans-unit>
        <trans-unit id="917bcf00a5f43df11b199071267499daef7275d9" translate="yes" xml:space="preserve">
          <source>Quick Links</source>
          <target state="translated">빠른 링크</target>
        </trans-unit>
        <trans-unit id="2637a04add25ca378ec74004768868e8b4d48576" translate="yes" xml:space="preserve">
          <source>Rackspace</source>
          <target state="translated">Rackspace</target>
        </trans-unit>
        <trans-unit id="d4a74b503a1543250fe9facd1ec8c2b031a7e575" translate="yes" xml:space="preserve">
          <source>Read the docs</source>
          <target state="translated">문서를 읽으십시오</target>
        </trans-unit>
        <trans-unit id="cd5024cdd958df478f96e23b02b7cde852f39f71" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/tox.ini&quot;&gt;tox.ini&lt;/a&gt;
file for a full list of available environments.</source>
          <target state="translated">사용 가능한 전체 환경 목록은 &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/tox.ini&quot;&gt;tox.ini&lt;/a&gt; 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="074adae60995c34ba8079e85fd4c661bf13e4f85" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b98c2c148cc55f43358c84052c0a677a5b68fef" translate="yes" xml:space="preserve">
          <source>Shiftgig</source>
          <target state="translated">Shiftgig</target>
        </trans-unit>
        <trans-unit id="4a540a31340238b7255a499672950eb2f1bd6896" translate="yes" xml:space="preserve">
          <source>Snappy unit testing through WSGI helpers and mocks</source>
          <target state="translated">WSGI 헬퍼 및 모의를 통한 Snappy 단위 테스트</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">소스 코드</target>
        </trans-unit>
        <trans-unit id="b5ae3ef33e83e257a6d9f01f8f5e3b2c8b064a1d" translate="yes" xml:space="preserve">
          <source>Straightforward exception handling</source>
          <target state="translated">간단한 예외 처리</target>
        </trans-unit>
        <trans-unit id="f5a4773e69c7f71a18e6e9baecc0757901feca3b" translate="yes" xml:space="preserve">
          <source>Support Falcon Development</source>
          <target state="translated">팔콘 개발 지원</target>
        </trans-unit>
        <trans-unit id="7c7eec7867809f5c836c829912a023cf4977d510" translate="yes" xml:space="preserve">
          <source>TODO(riker): Damage report!</source>
          <target state="translated">TODO (riker) : 피해 신고!</target>
        </trans-unit>
        <trans-unit id="ecfda3a905e095bc4d5530c609cff5072e12fcab" translate="yes" xml:space="preserve">
          <source>Thanks for your interest in the project! We welcome pull requests from
developers of all skill levels. To get started, simply fork the master branch
on GitHub to your personal account and then clone the fork into your
development environment.</source>
          <target state="translated">프로젝트에 관심을 가져 주셔서 감사합니다! 모든 기술 수준의 개발자의 풀 요청을 환영합니다. 시작하려면 GitHub의 마스터 브랜치를 개인 계정으로 포크 한 다음 포크를 개발 환경에 복제하면됩니다.</target>
        </trans-unit>
        <trans-unit id="1da20795f84bb9c5e16697aea34f14720e38fc37" translate="yes" xml:space="preserve">
          <source>Thanks!</source>
          <target state="translated">감사!</target>
        </trans-unit>
        <trans-unit id="e21d7c49012994e774a11f0973067fce75e4bcd3" translate="yes" xml:space="preserve">
          <source>The Clang compiler treats unrecognized command-line options as
errors, for example:</source>
          <target state="translated">Clang 컴파일러는 인식 할 수없는 명령 줄 옵션을 오류로 처리합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d9ddac2b2a870aaf2a0e0d40984dc0e7f390490e" translate="yes" xml:space="preserve">
          <source>The Falcon Web Framework</source>
          <target state="translated">팔콘 웹 프레임 워크</target>
        </trans-unit>
        <trans-unit id="c03671cd560e5b6adbfb6500836db13ed6c21d36" translate="yes" xml:space="preserve">
          <source>The Falconry community on Gitter is a great place to ask questions and
share your ideas. You can find us in &lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;falconry/user&lt;/a&gt;. We also have a
&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry/dev&lt;/a&gt; room for discussing
the design and development of the framework itself.</source>
          <target state="translated">Gitter의 Falconry 커뮤니티는 질문을하고 아이디어를 공유 할 수있는 좋은 장소입니다. &lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;falconry / user&lt;/a&gt; 에서 우리를 찾을 수 있습니다 . 또한 프레임 워크 자체의 설계 및 개발에 대해 논의 할 수있는 &lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;매 사냥 / 개발실&lt;/a&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6fc072218026286a7c3f845d921ece3899f7075f" translate="yes" xml:space="preserve">
          <source>The core Falcon project maintainers are:</source>
          <target state="translated">핵심 Falcon 프로젝트 관리자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ffffae6301364db865374e600a6f6857d22f85f" translate="yes" xml:space="preserve">
          <source>The docstrings in the Falcon code base are quite extensive, and we
recommend keeping a REPL running while learning the framework so that
you can query the various modules and classes as you have questions.</source>
          <target state="translated">Falcon 코드베이스의 독 스트링은 매우 광범위하며, 질문이있을 때 다양한 모듈과 클래스를 쿼리 할 수 ​​있도록 프레임 워크를 학습하는 동안 REPL을 계속 실행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c433ce15540cbc15721c82777f9a59a106fdf8f5" translate="yes" xml:space="preserve">
          <source>The following commands tell pip to install Cython, and then to invoke
Falcon&amp;rsquo;s</source>
          <target state="translated">다음 명령은 pip에 Cython을 설치 한 다음 Falcon의</target>
        </trans-unit>
        <trans-unit id="058ff83bf433fdce34d17ad46cb30fd2b9c0f837" translate="yes" xml:space="preserve">
          <source>Then, in another terminal:</source>
          <target state="translated">그런 다음 다른 터미널에서 :</target>
        </trans-unit>
        <trans-unit id="0aa6825aba3252c5cebbc0305750407b383e14f4" translate="yes" xml:space="preserve">
          <source>Universal and manylinux wheels are available on PyPI for the Falcon
framework. Installation is as simple as:</source>
          <target state="translated">Falcon 프레임 워크 용 PyPI에서 범용 및 많은 Linux 휠을 사용할 수 있습니다. 설치는 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="bf36c74e851db7c2ce95b5900cf8acc21ac10271" translate="yes" xml:space="preserve">
          <source>Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.</source>
          <target state="translated">해당 법률에서 요구하거나 서면으로 동의하지 않는 한, 라이센스에 따라 배포 된 소프트웨어는 명시 적이든 묵시적이든 어떠한 종류의 보증이나 조건없이 &quot;있는 그대로&quot;배포됩니다. 라이센스에 따른 특정 언어 관리 권한 및 제한 사항에 대해서는 라이센스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="75f1a9bb07b099caf683e0ef3f59fe6444658eed" translate="yes" xml:space="preserve">
          <source>Vytautas Liuolia (&lt;strong&gt;vytas7&lt;/strong&gt; on GH and Gitter)</source>
          <target state="translated">Vytautas Liuolia ( GH 및 Gitter의 &lt;strong&gt;vytas7&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="2c7fda5d092b0a9b1af3f0f496ee105b32f8db7e" translate="yes" xml:space="preserve">
          <source>WSGI Server</source>
          <target state="translated">WSGI 서버</target>
        </trans-unit>
        <trans-unit id="11c1278fd3553d645ff750d02cd067ccb361bc86" translate="yes" xml:space="preserve">
          <source>We designed Falcon to support the demanding needs of large-scale
microservices and responsive app backends. Falcon complements more
general Python web frameworks by providing bare-metal performance,
reliability, and flexibility wherever you need it.</source>
          <target state="translated">Falcon은 대규모 마이크로 서비스 및 반응 형 앱 백엔드의 까다로운 요구를 지원하도록 Falcon을 설계했습니다. Falcon은 필요할 때마다 베어 메탈 성능, 안정성 및 유연성을 제공하여보다 일반적인 Python 웹 프레임 워크를 보완합니다.</target>
        </trans-unit>
        <trans-unit id="1dc23e9126d4d3ffedcd374faff18887fd6788e1" translate="yes" xml:space="preserve">
          <source>What People are Saying</source>
          <target state="translated">사람들이 말하는 것</target>
        </trans-unit>
        <trans-unit id="a1cb97c392a99daad01e60de73a0ba6de2e7eea7" translate="yes" xml:space="preserve">
          <source>Who&amp;rsquo;s Using Falcon?</source>
          <target state="translated">누가 팔콘을 사용하고 있습니까?</target>
        </trans-unit>
        <trans-unit id="63dbb48f79311b945d143d6838d8a92702053301" translate="yes" xml:space="preserve">
          <source>Xcode Command Line Tools are required to compile Cython. Install them
with this command:</source>
          <target state="translated">Cython을 컴파일하려면 Xcode 명령 행 도구가 필요합니다. 이 명령으로 설치하십시오 :</target>
        </trans-unit>
        <trans-unit id="69241970aa05f43202cdbee663577d138feb8e4c" translate="yes" xml:space="preserve">
          <source>You can build the same docs locally as follows:</source>
          <target state="translated">다음과 같이 로컬에서 동일한 문서를 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="536278b7175149e76eeaaf6ea6df40dd2dce2ae6" translate="yes" xml:space="preserve">
          <source>You can manually test changes to the Falcon framework by switching to the
directory of the cloned repo and then running pytest:</source>
          <target state="translated">복제 된 저장소의 디렉토리로 전환 한 다음 pytest를 실행하여 Falcon 프레임 워크의 변경 사항을 수동으로 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8213796246cc13c7a664c2b4cff5b6ee3472e803" translate="yes" xml:space="preserve">
          <source>You can run the above example using any WSGI server, such as uWSGI or
Gunicorn. For example:</source>
          <target state="translated">uWSGI 또는 Gunicorn과 같은 WSGI 서버를 사용하여 위 예제를 실행할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="68093482c3d1393ed1022814b68c7d5988e22976" translate="yes" xml:space="preserve">
          <source>You might also see warnings about unused functions. You can work around
these issues by setting additional Clang C compiler flags as follows:</source>
          <target state="translated">사용하지 않는 기능에 대한 경고가 표시 될 수도 있습니다. 다음과 같이 추가 Clang C 컴파일러 플래그를 설정하여 이러한 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="91a58bbf6422870801d8bf676712611df0dc19ca" translate="yes" xml:space="preserve">
          <source>tempfil.es</source>
          <target state="translated">tempfil.es</target>
        </trans-unit>
        <trans-unit id="393b2d63c932471ac3d8d61c1a9b61c8515ea1a0" translate="yes" xml:space="preserve">
          <source>to pip in order to echo the compilation commands:</source>
          <target state="translated">컴파일 명령을 에코하기 위해 pip를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="70cc91e5ef505e485c1f0e4bffac914c20c63cec" translate="yes" xml:space="preserve">
          <source>~20% speed boost under CPython when Cython is available</source>
          <target state="translated">Cython을 사용할 수있을 때 CPython에서 ~ 20 % 속도 향상</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
