<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/brainy-mind/">
    <body>
      <group id="brainy-mind">
        <trans-unit id="7d8a9b015b955fd985bca1e5bad1cb26d1797ea3" translate="yes" xml:space="preserve">
          <source>##About &lt;em&gt;brainy&lt;/em&gt;</source>
          <target state="translated">## &lt;em&gt;브리니&lt;/em&gt; 소개&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c270a4161d4ec41203b066c95cb5d2742ef34fe" translate="yes" xml:space="preserve">
          <source>##Documentation</source>
          <target state="translated">##선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="ce5f5333c8c769c04ddefd1974c98610d3673447" translate="yes" xml:space="preserve">
          <source>##Getting started</source>
          <target state="translated">##시작하기</target>
        </trans-unit>
        <trans-unit id="0a7c65f02f635a14539e24f4650028f0efe4fa4d" translate="yes" xml:space="preserve">
          <source>##Installation</source>
          <target state="translated">##설치</target>
        </trans-unit>
        <trans-unit id="8ea08731dbd9ac66e106e01521f5fb98bd0b3768" translate="yes" xml:space="preserve">
          <source>##Tests</source>
          <target state="translated">## 테스트</target>
        </trans-unit>
        <trans-unit id="921761bb199a9f9d6f32871e747e9749ad427b4a" translate="yes" xml:space="preserve">
          <source>##iBRAIN</source>
          <target state="translated">## 아이 브레인</target>
        </trans-unit>
        <trans-unit id="19097e97263994e7afd2eec1886908ed78246d4f" translate="yes" xml:space="preserve">
          <source>&amp;gt; On Mac: brew install libyaml</source>
          <target state="translated">&amp;gt; Mac : brew install libyaml</target>
        </trans-unit>
        <trans-unit id="d22443cd4581794345f62a30004dd99d7d771db6" translate="yes" xml:space="preserve">
          <source>&amp;gt; On Ubuntu (debian): sudo apt-get install python-setuptools git &amp;amp;&amp;amp; sudo easy_install pip</source>
          <target state="translated">&amp;gt; Ubuntu (debian) : sudo apt-get install python-setuptools git &amp;amp;&amp;amp; sudo easy_install pip</target>
        </trans-unit>
        <trans-unit id="c155272e6e7dbb1f8a074d1b95f9600e04513cf1" translate="yes" xml:space="preserve">
          <source>&amp;gt; Supported OS/platforms are &lt;strong&gt;Linux&lt;/strong&gt; and &lt;strong&gt;Mac OSX&lt;/strong&gt;.</source>
          <target state="translated">&amp;gt; 지원되는 OS / 플랫폼은 &lt;strong&gt;Linux&lt;/strong&gt; 및 &lt;strong&gt;Mac OSX&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6b90ea01568b9fe8575b65e6d839cfc8376dff83" translate="yes" xml:space="preserve">
          <source>&amp;gt; Tip: get help about the commands you need by saying</source>
          <target state="translated">&amp;gt; 팁 : 다음과 같이 말하여 필요한 명령에 대한 도움말을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="974092c5e55a54a7bad1ae63c6da6fc2b81d9c25" translate="yes" xml:space="preserve">
          <source>&amp;gt;It is strongly recommended to use [conda](&lt;a href=&quot;http://conda.pydata.org/docs/&quot;&gt;http://conda.pydata.org/docs/&lt;/a&gt;) as python 2.7+ environment.</source>
          <target state="translated">&amp;gt; python 2.7+ 환경으로 [conda] ( &lt;a href=&quot;http://conda.pydata.org/docs/&quot;&gt;http://conda.pydata.org/docs/&lt;/a&gt; ) 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="e5d9c7f1c03342c9a4e8b7c52308db745b690f8a" translate="yes" xml:space="preserve">
          <source>&amp;lt;p align=&amp;rdquo;center&amp;rdquo;&amp;gt;&amp;lt;img src=&amp;rdquo;&lt;a href=&quot;https://github.com/pelkmanslab/brainy/raw/master/ui/web/assets/images/brainy_logo.png&quot;&gt;https://github.com/pelkmanslab/brainy/raw/master/ui/web/assets/images/brainy_logo.png&lt;/a&gt;&amp;rdquo; alt=&amp;rdquo;logo&amp;rdquo; height=&amp;rdquo;121&amp;rdquo; width=&amp;rdquo;121&amp;rdquo;&amp;gt;&amp;lt;/p&amp;gt;</source>
          <target state="translated">&amp;lt;p align =&amp;rdquo;center&amp;rdquo;&amp;gt; &amp;lt;img src =&amp;rdquo; &lt;a href=&quot;https://github.com/pelkmanslab/brainy/raw/master/ui/web/assets/images/brainy_logo.png&quot;&gt;https://github.com/pelkmanslab/brainy/raw/master/ui/web/assets/images/brainy_logo.png&lt;/a&gt; &amp;rdquo;alt =&amp;rdquo;logo&amp;rdquo;height =&amp;rdquo;121 &amp;rdquo;width =&amp;rdquo;121&amp;rdquo;&amp;gt; &amp;lt;/ p&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e80207414ca2ba71498a9354cb0731014e4599da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;brainy&lt;/em&gt; is a nimble workflow managing tool, at the core of [iBRAIN](&lt;a href=&quot;https://github.com/pelkmanslab/iBRAIN/&quot;&gt;https://github.com/pelkmanslab/iBRAIN/&lt;/a&gt;) functionality. It allows creation of projects according to the expected framework layout. It also oversees the execution of the projects and provides monitoring of any relevant progress of the conducted computation.</source>
          <target state="translated">&lt;em&gt;머리가 좋은은&lt;/em&gt; [iBRAIN (의 핵심 민첩 워크 플로우 관리 도구이다 &lt;a href=&quot;https://github.com/pelkmanslab/iBRAIN/&quot;&gt;https://github.com/pelkmanslab/iBRAIN/&lt;/a&gt; ) 기능. 예상되는 프레임 워크 레이아웃에 따라 프로젝트를 생성 할 수 있습니다. 또한 프로젝트 실행을 감독하고 수행 된 계산의 관련 진행 상황을 모니터링합니다.</target>
        </trans-unit>
        <trans-unit id="8e5dd84b5a675d1eaa39885394ace6d79fde7d09" translate="yes" xml:space="preserve">
          <source>A really good place to understand what is</source>
          <target state="translated">무엇인지 이해하기에 정말 좋은 곳</target>
        </trans-unit>
        <trans-unit id="be69f3bd79c7cb8cf29ac9e22c3338a56cf68353" translate="yes" xml:space="preserve">
          <source>Create you first project</source>
          <target state="translated">첫 번째 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="d6fb13f1ae6ecd696686b156bb3f936bad70a63a" translate="yes" xml:space="preserve">
          <source>Go inside the project folder and adjust settings in your pipelines. Afterwards run the project.</source>
          <target state="translated">프로젝트 폴더로 이동하여 파이프 라인의 설정을 조정합니다. 나중에 프로젝트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8fc832aea40d3b625c4902b5b7504584e7586434" translate="yes" xml:space="preserve">
          <source>If things are looking good, continue by submitting your project into the &lt;em&gt;cloud&lt;/em&gt;. Find out how to do this in the [Cloud](&lt;a href=&quot;https://github.com/pelkmanslab/brainy/wiki/User-Manual#Cloud&quot;&gt;https://github.com/pelkmanslab/brainy/wiki/User-Manual#Cloud&lt;/a&gt;) section of the brainy&amp;rsquo;s User Manual.</source>
          <target state="translated">괜찮아 보이면 계속해서 프로젝트를 &lt;em&gt;클라우드&lt;/em&gt; 에 제출하세요 . 이 작업을 수행하는 방법 은 brainy 사용자 매뉴얼 의 [Cloud] ( &lt;a href=&quot;https://github.com/pelkmanslab/brainy/wiki/User-Manual#Cloud&quot;&gt;https://github.com/pelkmanslab/brainy/wiki/User-Manual#Cloud&lt;/a&gt; ) 섹션에서 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="e313e18b3f25f01d81e4b8ed3f541cd1d8a39c50" translate="yes" xml:space="preserve">
          <source>Once installed, inspect the state of configuration in</source>
          <target state="translated">설치되면 다음에서 구성 상태를 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="3c4813b0519fe6695632c959c567362e2f200cd0" translate="yes" xml:space="preserve">
          <source>Remember that you can generate</source>
          <target state="translated">당신이 생성 할 수 있다는 것을 기억하십시오</target>
        </trans-unit>
        <trans-unit id="2a2bf3e378bc235adb2f0b95cb681f579200b0ec" translate="yes" xml:space="preserve">
          <source>The package is available on [PyPI](&lt;a href=&quot;https://pypi.python.org/pypi/brainy-mind/&quot;&gt;https://pypi.python.org/pypi/brainy-mind/&lt;/a&gt;).</source>
          <target state="translated">패키지는 [PyPI] ( &lt;a href=&quot;https://pypi.python.org/pypi/brainy-mind/&quot;&gt;https://pypi.python.org/pypi/brainy-mind/&lt;/a&gt; ) 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c74c94684e278c20d00174d84d9a8e9cec44f58" translate="yes" xml:space="preserve">
          <source>To get the bleedding edge version you have to clone the repository and install brainy in developer mode from local folder:</source>
          <target state="translated">최신 버전을 얻으려면 저장소를 복제하고 로컬 폴더에서 개발자 모드로 brainy를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b70581ac082a0c25a5b6d8dfc4dd60e22c285525" translate="yes" xml:space="preserve">
          <source>To run nose tests navigate into</source>
          <target state="translated">코 테스트를 실행하려면</target>
        </trans-unit>
        <trans-unit id="6dbed972319cc7063ecbfa19c01c6af58d85ddd5" translate="yes" xml:space="preserve">
          <source>To see the report in your local web browser, do</source>
          <target state="translated">로컬 웹 브라우저에서 보고서를 보려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f8a51bdf9d5cdc758e716e5ed67c741b0801bc63" translate="yes" xml:space="preserve">
          <source>You will have to edit the template that has been copied according to your cluster scheduler settings and so on.</source>
          <target state="translated">클러스터 스케줄러 설정 등에 따라 복사 된 템플릿을 편집해야합니다.</target>
        </trans-unit>
        <trans-unit id="89021861522c7254a82d9e8ca85120562a973c79" translate="yes" xml:space="preserve">
          <source>[Developer Documentation](&lt;a href=&quot;https://github.com/pelkmanslab/brainy/wiki/Developer-Documentation&quot;&gt;https://github.com/pelkmanslab/brainy/wiki/Developer-Documentation&lt;/a&gt;)</source>
          <target state="translated">[개발자 문서] ( &lt;a href=&quot;https://github.com/pelkmanslab/brainy/wiki/Developer-Documentation&quot;&gt;https://github.com/pelkmanslab/brainy/wiki/Developer-Documentation&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="284bb797cd9f4e510288e59155bdf5791e3b1d74" translate="yes" xml:space="preserve">
          <source>[User manual](&lt;a href=&quot;https://github.com/pelkmanslab/brainy/wiki/User-Manual&quot;&gt;https://github.com/pelkmanslab/brainy/wiki/User-Manual&lt;/a&gt;)</source>
          <target state="translated">[사용자 설명서] ( &lt;a href=&quot;https://github.com/pelkmanslab/brainy/wiki/User-Manual&quot;&gt;https://github.com/pelkmanslab/brainy/wiki/User-Manual&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="198d273b5a6e36880ad1c39a215ffe2c6725a814" translate="yes" xml:space="preserve">
          <source>`
brainy create project PureAwesomeness --from demo
`</source>
          <target state="translated">`브레인 생성 프로젝트 PureAwesomeness-데모에서`</target>
        </trans-unit>
        <trans-unit id="ffb05c2f0604a22d5e5e4bdaab2d80bc9e4dce20" translate="yes" xml:space="preserve">
          <source>`
brainy init config
`</source>
          <target state="translated">`똑똑한 초기화 설정`</target>
        </trans-unit>
        <trans-unit id="b99084b7da05def26be579d62424bbd773e2afac" translate="yes" xml:space="preserve">
          <source>`
brainy ui serve
`</source>
          <target state="translated">`똑똑한 UI 서브`</target>
        </trans-unit>
        <trans-unit id="9f85d513acabedca859c445510cec8b4a8dcbd48" translate="yes" xml:space="preserve">
          <source>`
cd &amp;amp;&amp;amp; git clone https://github.com/pelkmanslab/brainy
cd brainy &amp;amp;&amp;amp; pip install -e .
`</source>
          <target state="translated">`cd &amp;amp;&amp;amp; git clone https://github.com/pelkmanslab/brainy cd brainy &amp;amp;&amp;amp; pip install -e. `</target>
        </trans-unit>
        <trans-unit id="bf2d87859ac3fb738fd09cb36b5c9e829b2258ae" translate="yes" xml:space="preserve">
          <source>`
cd PureAwesomeness
# Adjust settings in .brainy &amp;lt;project settings&amp;gt; and hello.br &amp;lt;pipe description&amp;gt; YAML files
brainy run project
`</source>
          <target state="translated">`cd PureAwesomeness # .brainy &amp;lt;project settings&amp;gt; 및 hello.br &amp;lt;pipe description&amp;gt; YAML 파일 brainy run project에서 설정 조정`</target>
        </trans-unit>
        <trans-unit id="249d79b3125b5007a071a2b513be55fb9a7c9528" translate="yes" xml:space="preserve">
          <source>`
cd tests &amp;amp;&amp;amp; nosetests -s
`</source>
          <target state="translated">`cd 테스트 &amp;amp;&amp;amp; nosetests -s`</target>
        </trans-unit>
        <trans-unit id="5548d70a5db380e3aab541b93c71a42f2af6b9d6" translate="yes" xml:space="preserve">
          <source>`
pip install brainy-mind
`</source>
          <target state="translated">`pip install brainy-mind`</target>
        </trans-unit>
        <trans-unit id="de4468c0bf7999dc86030b1a5c619dc71e0b8519" translate="yes" xml:space="preserve">
          <source>brainy</source>
          <target state="translated">똑똑한</target>
        </trans-unit>
        <trans-unit id="39171cf26a1b03d42c58cccdcacfb97ebd5c166f" translate="yes" xml:space="preserve">
          <source>brainy help</source>
          <target state="translated">똑똑한 도움</target>
        </trans-unit>
        <trans-unit id="244e3eb4400756f5db70ac0d7b1fe9cdc4c84bd8" translate="yes" xml:space="preserve">
          <source>brainy help project</source>
          <target state="translated">똑똑한 도움 프로젝트</target>
        </trans-unit>
        <trans-unit id="b90126562bd37a5042451aad3ed61e2bf78ef235" translate="yes" xml:space="preserve">
          <source>brainy is a nimble workflow managing tool which is a part of iBRAIN framework for scientific computation primarily applied for BigData analysis in context of HPC and HTS</source>
          <target state="translated">brainy는 HPC 및 HTS의 맥락에서 BigData 분석에 주로 적용되는 과학 계산을위한 iBRAIN 프레임 워크의 일부인 민첩한 워크 플로우 관리 도구입니다.</target>
        </trans-unit>
        <trans-unit id="d8434826715d3b3aa19ffefdffadb122d01422d6" translate="yes" xml:space="preserve">
          <source>folder.</source>
          <target state="translated">폴더.</target>
        </trans-unit>
        <trans-unit id="ba24b2586d6d535d3eee84fb948e64b75a147eae" translate="yes" xml:space="preserve">
          <source>from the template again by</source>
          <target state="translated">템플릿에서 다시</target>
        </trans-unit>
        <trans-unit id="72965b135a45c0de999a1f0b3dea68b99a225e79" translate="yes" xml:space="preserve">
          <source>iBRAIN is a software framework for scientific computation primarily applied for BigData extraction and analysis in context of HPC and HTS as well as large bioinformatical analysis.</source>
          <target state="translated">iBRAIN은 HPC 및 HTS의 맥락에서 빅 데이터 추출 및 분석과 대규모 생물 정보 분석에 주로 적용되는 과학적 계산을위한 소프트웨어 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="020010f5a5b87624766906b9319238ae821d7ea9" translate="yes" xml:space="preserve">
          <source>is to read the &lt;em&gt;user manual&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;사용자 설명서&lt;/em&gt; 를 읽는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="971b804932d4d59ed76db5f1a97c4a5f28a1f00b" translate="yes" xml:space="preserve">
          <source>~/.brainy/</source>
          <target state="translated">~ / .brainy /</target>
        </trans-unit>
        <trans-unit id="c7890a19a24d1af428c23a81de8ebc894c98186a" translate="yes" xml:space="preserve">
          <source>~/.brainy/config</source>
          <target state="translated">~ / .brainy / config</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
