<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/museval/">
    <body>
      <group id="museval">
        <trans-unit id="0b1dae957ad059a3d14aaa4106982c398622108b" translate="yes" xml:space="preserve">
          <source>1. Pull Docker Container</source>
          <target state="translated">1. Docker 컨테이너 가져 오기</target>
        </trans-unit>
        <trans-unit id="52b836a07f90a0dafb65b73f11316adc4df89f60" translate="yes" xml:space="preserve">
          <source>2. Run evaluation</source>
          <target state="translated">2. 평가 실행</target>
        </trans-unit>
        <trans-unit id="4c4cb4b30ce20299f4b44b9620f998be8764a6fa" translate="yes" xml:space="preserve">
          <source>:bulb: you use the &lt;code&gt;--iswav&lt;/code&gt; flag to use the decoded wav &lt;em&gt;musdb&lt;/em&gt; dataset.</source>
          <target state="translated">: bulb : 디코딩 된 wav &lt;em&gt;musdb&lt;/em&gt; 데이터 세트 를 사용하려면 &lt;code&gt;--iswav&lt;/code&gt; 플래그를 사용합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91fb3372715803a18d3f0fc50fd72cd93c9f41e1" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;museval&lt;/code&gt; requires a significant amount of memory for the evaluation. Evaluating all five targets for &lt;em&gt;MUSDB18&lt;/em&gt; may require more than 4GB of RAM. If you use multiprocessing by using the &lt;code&gt;-p&lt;/code&gt; switch in &lt;code&gt;museval&lt;/code&gt;, this results in 16GB of RAM. It is recommended to adjust your Docker preferences, because the docker container might just quit if its out of memory.</source>
          <target state="translated">: warning : &lt;code&gt;museval&lt;/code&gt; 은 평가를 위해 상당한 양의 메모리가 필요합니다. &lt;em&gt;MUSDB18의&lt;/em&gt; 5 개 목표를 모두 평가 하려면 4GB 이상의 RAM이 필요할 수 있습니다. &lt;code&gt;museval&lt;/code&gt; 에서 &lt;code&gt;-p&lt;/code&gt; 스위치를 사용하여 다중 처리를 사용하면 16GB RAM이됩니다. Docker 컨테이너가 메모리가 부족하면 종료 될 수 있으므로 Docker 환경 설정을 조정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f894ad4e677e493ff7d4f3c5efd5f49b1d93605e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;estimatesdir&lt;/code&gt; will stand here for the absolute path to the estimates directory. (For instance &lt;code&gt;/home/faroit/dev/mymethod/musdboutput&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;estimatesdir&lt;/code&gt; 은 여기에서 예상 디렉토리에 대한 절대 경로를 나타냅니다. (예 : &lt;code&gt;/home/faroit/dev/mymethod/musdboutput&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="aea721b294f1d298f12b51c7cdf3fde1f456b1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;musdbdir&lt;/code&gt; will stand here for the absolute path to the root folder of musdb. (For instance &lt;code&gt;/home/faroit/dev/data/musdb18&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;musdbdir&lt;/code&gt; 은 musdb 의 루트 폴더에 대한 절대 경로를 나타냅니다. (예 : &lt;code&gt;/home/faroit/dev/data/musdb18&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="affae19a7f15ce3b1c1d75b7445687b8452f1668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputdir&lt;/code&gt; will stand here for the absolute path to the output directory. (For instance &lt;code&gt;/home/faroit/dev/mymethod/scores&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;outputdir&lt;/code&gt; 은 여기에 출력 디렉토리의 절대 경로를 나타냅니다. (예 : &lt;code&gt;/home/faroit/dev/mymethod/scores&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5bda406e508e1442ecd2e818e692ce913bdd8884" translate="yes" xml:space="preserve">
          <source>A python package to evaluate source separation results using the &lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18&lt;/a&gt; dataset. This package was part of the &lt;a href=&quot;https://sisec.inria.fr/home/2018-professionally-produced-music-recordings/&quot;&gt;MUS task&lt;/a&gt; of the &lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;Signal Separation Evaluation Campaign (SISEC)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18&lt;/a&gt; 데이터 세트를 사용하여 소스 분리 결과를 평가하는 Python 패키지 . 이 패키지는 &lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;신호 분리 평가 캠페인 (SISEC)&lt;/a&gt; 의 &lt;a href=&quot;https://sisec.inria.fr/home/2018-professionally-produced-music-recordings/&quot;&gt;MUS 작업&lt;/a&gt; 의 일부였습니다 .</target>
        </trans-unit>
        <trans-unit id="51cc03d6f04f594e75b71e73893e0f15b48eeebb" translate="yes" xml:space="preserve">
          <source>A. If you use the &lt;code&gt;museval&lt;/code&gt; in the context of source separation evaluation comparing a method it to other methods of &lt;a href=&quot;http://sisec18.unmix.app/&quot;&gt;SiSEC 2018&lt;/a&gt;, please cite</source>
          <target state="translated">A. &lt;code&gt;museval&lt;/code&gt; 을 &lt;a href=&quot;http://sisec18.unmix.app/&quot;&gt;SiSEC 2018&lt;/a&gt; 의 다른 방법과 비교하는 소스 분리 평가의 맥락에서 사용하는 경우 다음을 인용하십시오.</target>
        </trans-unit>
        <trans-unit id="05b75891acc19ac0aa2e1ffb0148215fd38a218d" translate="yes" xml:space="preserve">
          <source>Aggregate and Analyze Scores</source>
          <target state="translated">점수 집계 및 분석</target>
        </trans-unit>
        <trans-unit id="0f48147765a2e6058c1ebdd20ac5b097428faf73" translate="yes" xml:space="preserve">
          <source>B. if you use the software for any other purpose, you can cite the software release</source>
          <target state="translated">B. 다른 목적으로 소프트웨어를 사용하는 경우 소프트웨어 릴리스를 인용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="faa7c1aedffe0265552568c29cf738efe6cbd63b" translate="yes" xml:space="preserve">
          <source>BSSEval v4</source>
          <target state="translated">BSSEval v4</target>
        </trans-unit>
        <trans-unit id="8e7103c3030f2cc7a65b256b0330c89a3238e6a9" translate="yes" xml:space="preserve">
          <source>Commandline tool</source>
          <target state="translated">명령 줄 도구</target>
        </trans-unit>
        <trans-unit id="a6f2a3cb0dc490bd66e79c6c852a5777d249d7a2" translate="yes" xml:space="preserve">
          <source>Evaluate MUSDB18 tracks later</source>
          <target state="translated">나중에 MUSDB18 트랙 평가</target>
        </trans-unit>
        <trans-unit id="b7e92509815591b1f03d60d3782bb78ff944c3e6" translate="yes" xml:space="preserve">
          <source>Evaluation tools for the SIGSEP MUS database</source>
          <target state="translated">SIGSEP MUS 데이터베이스 용 평가 도구</target>
        </trans-unit>
        <trans-unit id="6216dda44ef392d90f9b88eafd182872c5b5dd6f" translate="yes" xml:space="preserve">
          <source>For this package, we enabled the option of having &lt;em&gt;time invariant&lt;/em&gt; distortion filters, instead of necessarily taking them as varying over time as done in the previous versions of BSS eval. First, enabling this option &lt;em&gt;significantly reduces&lt;/em&gt; the computational cost for evaluation because matching needs to be done only once for the whole signal. Second, it introduces much more dynamics in the evaluation, because time-varying matching filters turn out to over-estimate performance. Third, this makes matching more robust, because true sources are not silent throughout the whole recording, while they often were for short windows.</source>
          <target state="translated">이 패키지 의 경우 BSS eval의 이전 버전에서 수행 한 것처럼 시간이 지남에 따라 달라지는 대신 &lt;em&gt;시간 불변&lt;/em&gt; 왜곡 필터 를 사용하는 옵션을 활성화했습니다 . 첫째,이 옵션을 활성화 하면 전체 신호에 대해 일치를 한 번만 수행하면되므로 평가를위한 계산 비용 이 &lt;em&gt;크게 줄어 듭니다&lt;/em&gt; . 둘째, 시간에 따라 달라지는 매칭 필터가 성능을 과대 평가하기 때문에 평가에 훨씬 더 많은 역학을 도입합니다. 셋째, 실제 소스는 전체 레코딩 동안 침묵하지 않고 짧은 창을위한 경우가 많기 때문에 일치를 더욱 강력하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ab3693d82950b9cfe47093dc304a2be055b0863e" translate="yes" xml:space="preserve">
          <source>If you don't want to set up a Python environment to run the evaluation, we would recommend to use &lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;. Assuming you have already computed your estimates and installed docker in your machine, you just need to run the following two lines in your terminal:</source>
          <target state="translated">평가를 실행하기 위해 Python 환경을 설정하지 않으려면 &lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt; 를 사용하는 것이 좋습니다 . 이미 추정치를 계산하고 컴퓨터에 docker를 설치했다고 가정하면 터미널에서 다음 두 줄을 실행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="a9cb6ebdbc46ecc62428437618235f999bc9a654" translate="yes" xml:space="preserve">
          <source>If you have already computed your estimates, we provide you with an easy-to-use function to process evaluation results afterwards.</source>
          <target state="translated">이미 견적을 계산 한 경우 나중에 평가 결과를 처리 할 수있는 사용하기 쉬운 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="82f5ee2bb893b60eaf63625024cf7e186daf4f29" translate="yes" xml:space="preserve">
          <source>If you want to perform evaluation while processing your source separation results, you can make use &lt;code&gt;musdb&lt;/code&gt; track objects.
Here is an example for such a function separating the mixture into a &lt;strong&gt;vocals&lt;/strong&gt; and &lt;strong&gt;accompaniment&lt;/strong&gt; track:</source>
          <target state="translated">소스 분리 결과를 처리하는 동안 평가를 수행하려면 &lt;code&gt;musdb&lt;/code&gt; 트랙 객체를 사용할 수 있습니다 . 다음은 믹스를 &lt;strong&gt;보컬&lt;/strong&gt; 과 &lt;strong&gt;반주&lt;/strong&gt; 트랙 으로 분리하는 기능의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="06afbe0b83817d883d08034e1192f3604ccca0ee" translate="yes" xml:space="preserve">
          <source>In the line above, replace &lt;code&gt;estimatesdir&lt;/code&gt;, &lt;code&gt;musdbdir&lt;/code&gt; and &lt;code&gt;outputdir&lt;/code&gt; by the absolute paths for your setting.  Please note that docker requires absolute paths so you have to rely on your command line environment to convert relative paths to absolute paths (e.g. by using &lt;code&gt;$HOME/&lt;/code&gt; on Unix).</source>
          <target state="translated">위의 줄에서 &lt;code&gt;estimatesdir&lt;/code&gt; , &lt;code&gt;musdbdir&lt;/code&gt; 및 &lt;code&gt;outputdir&lt;/code&gt; 을 설정에 대한 절대 경로로 바꿉니다 . docker에는 절대 경로가 필요하므로 명령 줄 환경에 의존하여 상대 경로를 절대 경로로 변환해야합니다 (예 : Unix에서 &lt;code&gt;$HOME/&lt;/code&gt; 사용 ).</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="8a7ec5636ae09a194c950c4def88cc5e2a9891cd" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;output_dir&lt;/code&gt; is set. &lt;code&gt;museval&lt;/code&gt; will recreate the &lt;code&gt;musdb&lt;/code&gt; file structure in that folder and write the evaluation results to this folder.</source>
          <target state="translated">&lt;code&gt;output_dir&lt;/code&gt; 이 설정되어 있는지 확인하십시오 . &lt;code&gt;museval&lt;/code&gt; 은 해당 폴더에 &lt;code&gt;musdb&lt;/code&gt; 파일 구조를 다시 만들고 평가 결과를이 폴더에 씁니다.</target>
        </trans-unit>
        <trans-unit id="77ca84718e0ad8247dcc8f32f65ce5736bf1270f" translate="yes" xml:space="preserve">
          <source>Package installation</source>
          <target state="translated">패키지 설치</target>
        </trans-unit>
        <trans-unit id="455e35c86ca328841291a9f407befe2e5e1baf02" translate="yes" xml:space="preserve">
          <source>Pull our precompiled &lt;code&gt;sigsep-mus-eval&lt;/code&gt; image from &lt;a href=&quot;https://hub.docker.com/r/faroit/sigsep-mus-eval/&quot;&gt;dockerhub&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;sigsep-mus-eval&lt;/code&gt; 미리 컴파일 된 sigsep-mus-eval 이미지를 가져 &lt;a href=&quot;https://hub.docker.com/r/faroit/sigsep-mus-eval/&quot;&gt;옵니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">참고 문헌</target>
        </trans-unit>
        <trans-unit id="cc7635f28ae3288eac8bd8a380bb1d7629b35001" translate="yes" xml:space="preserve">
          <source>Scores for each track can also be aggregated in a pandas DataFrame for easier analysis or the creation of boxplots.
To aggregate multiple tracks in a DataFrame, create &lt;code&gt;museval.EvalStore()&lt;/code&gt; object and add the track scores successively.</source>
          <target state="translated">각 트랙의 점수는 pandas DataFrame에 집계되어 더 쉽게 분석하거나 상자 그림을 만들 수도 있습니다. DataFrame에서 여러 트랙을 집계하려면 &lt;code&gt;museval.EvalStore()&lt;/code&gt; 객체를 만들고 트랙 점수를 연속적으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f69ea6473306b2d6254f0d96a0b499ddc1e23959" translate="yes" xml:space="preserve">
          <source>Separate MUSDB18 tracks and Evaluate on-the-fly</source>
          <target state="translated">MUSDB18 트랙을 분리하고 즉시 평가</target>
        </trans-unit>
        <trans-unit id="a104a1211164d9bd43244ac6bfaca16254bb004e" translate="yes" xml:space="preserve">
          <source>Simply use the &lt;code&gt;museval.eval_mus_dir&lt;/code&gt; to evaluate your &lt;code&gt;estimates_dir&lt;/code&gt; and write the results into the &lt;code&gt;output_dir&lt;/code&gt;. For convenience, the &lt;code&gt;eval_mus_dir&lt;/code&gt; function accepts all parameters of the &lt;code&gt;musdb.run()&lt;/code&gt;. That way e.g. multiprocessing can easily be enabled by setting &lt;code&gt;parallel=True&lt;/code&gt;:</source>
          <target state="translated">간단하게 사용 &lt;code&gt;museval.eval_mus_dir&lt;/code&gt; 을 당신의 평가 &lt;code&gt;estimates_dir&lt;/code&gt; 을 하고에 결과를 쓰기 &lt;code&gt;output_dir&lt;/code&gt; 를 . 편의를 위해 &lt;code&gt;eval_mus_dir&lt;/code&gt; 함수는 &lt;code&gt;musdb.run()&lt;/code&gt; 의 모든 매개 변수를 허용합니다 . 그런 식으로 &lt;code&gt;parallel=True&lt;/code&gt; 설정하여 다중 처리를 쉽게 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="571c5f16641539a79af38d9b64ae2ea2e2be10ce" translate="yes" xml:space="preserve">
          <source>The BSSEval metrics, as implemented in the &lt;a href=&quot;http://bass-db.gforge.inria.fr/bss_eval/&quot;&gt;MATLAB toolboxes&lt;/a&gt; and their re-implementation in &lt;a href=&quot;http://craffel.github.io/mir_eval/#module-mir_eval.separation&quot;&gt;mir_eval&lt;/a&gt; are widely used in the audio separation literature. One particularity of BSSEval is to compute the metrics after optimally matching the estimates to the true sources through linear distortion filters. This allows the criteria to be robust to some linear mismatches. Apart from the optional evaluation for all possible permutations of the sources, this matching is the reason for most of the computation cost of BSSEval, especially considering it is done for each evaluation window when the metrics are computed on a framewise basis.</source>
          <target state="translated">BSSEval 메트릭의 구현으로 &lt;a href=&quot;http://bass-db.gforge.inria.fr/bss_eval/&quot;&gt;MATLAB의 도구 상자&lt;/a&gt; 와 자신의 재 구현 &lt;a href=&quot;http://craffel.github.io/mir_eval/#module-mir_eval.separation&quot;&gt;mir_eval이&lt;/a&gt; 널리 오디오 분리 문헌에 사용된다. BSSEval의 한 가지 특징은 선형 왜곡 필터를 통해 추정치를 실제 소스에 최적으로 일치시킨 후 메트릭을 계산하는 것입니다. 이를 통해 기준이 일부 선형 불일치에 대해 강건 할 수 있습니다. 소스의 가능한 모든 순열에 대한 선택적 평가 외에도,이 일치는 BSSEval의 계산 비용 대부분의 이유이며, 특히 메트릭이 프레임 단위로 계산 될 때 각 평가 창에 대해 수행된다는 점을 고려할 때 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="1e2db5a13873f5efd3e5f196bebf771738384775" translate="yes" xml:space="preserve">
          <source>The purpose of this package is to evaluate source separation results and write out validated &lt;code&gt;json&lt;/code&gt; files. We want to encourage users to use this evaluation output format as the standardized way to share source separation results. &lt;code&gt;museval&lt;/code&gt; is designed to work in conjuction with the &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-db&quot;&gt;musdb&lt;/a&gt; tools and the MUSDB18 dataset (however, &lt;code&gt;museval&lt;/code&gt; can also be used without &lt;code&gt;musdb&lt;/code&gt;).</source>
          <target state="translated">이 패키지의 목적은 소스 분리 결과를 평가하고 검증 된 &lt;code&gt;json&lt;/code&gt; 파일을 작성하는 것 입니다. 사용자가 소스 분리 결과를 공유하는 표준화 된 방법으로이 평가 출력 형식을 사용하도록 권장합니다. &lt;code&gt;museval&lt;/code&gt; 은 &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-db&quot;&gt;musdb&lt;/a&gt; 도구 및 MUSDB18 데이터 세트와 함께 작동하도록 설계되었습니다 (그러나 &lt;code&gt;museval&lt;/code&gt; 은 &lt;code&gt;musdb&lt;/code&gt; 없이도 사용할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="42ba84c6bb591dbd5e3e2912945476bed8d3b692" translate="yes" xml:space="preserve">
          <source>To compare against participants from &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-2018&quot;&gt;SiSEC MUS 2018&lt;/a&gt;, we provide a convenient method to load the existing scores on demand using &lt;code&gt;methods.add_sisec18()&lt;/code&gt;. For the creation of plots and statistical significance tests we refer to our &lt;a href=&quot;/examples&quot;&gt;list of examples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sigsep/sigsep-mus-2018&quot;&gt;SiSEC MUS 2018&lt;/a&gt; 참가자와 비교 하기 위해 &lt;code&gt;methods.add_sisec18()&lt;/code&gt; 사용하여 필요에 따라 기존 점수를로드 할 수있는 편리한 방법을 제공합니다 . 플롯 생성 및 통계적 유의성 테스트에 대해서는 &lt;a href=&quot;/examples&quot;&gt;예제 목록을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aeacdc87793d62885e0b31c5a4df71dd70c22edb" translate="yes" xml:space="preserve">
          <source>To compare multiple methods, create a &lt;code&gt;museval.MethodStore()&lt;/code&gt; object add the results</source>
          <target state="translated">여러 메서드를 비교하려면 &lt;code&gt;museval.MethodStore()&lt;/code&gt; 개체를 만들고 결과를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1c2d42f3921c7db9d3936a82cfeafa1381cba112" translate="yes" xml:space="preserve">
          <source>To run the evaluation inside of the docker, three absolute paths are required:</source>
          <target state="translated">도커 내에서 평가를 실행하려면 세 가지 절대 경로가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="cc5d3eba3df6350193fb868f0abedb0713eb72eb" translate="yes" xml:space="preserve">
          <source>Using Docker for Evaluation</source>
          <target state="translated">평가를 위해 Docker 사용</target>
        </trans-unit>
        <trans-unit id="3d889acaf74f5348937d02868d1946f27ad8b75b" translate="yes" xml:space="preserve">
          <source>We just mount these directories into the docker container using the &lt;code&gt;-v&lt;/code&gt; flags and start the docker instance:</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; 플래그를 사용하여 이러한 디렉토리를 docker 컨테이너에 마운트 하고 docker 인스턴스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2582e9ed151ee1d02df636cec15b95f5f71f7bed" translate="yes" xml:space="preserve">
          <source>We provide a command line wrapper of &lt;code&gt;eval_mus_dir&lt;/code&gt; by calling the &lt;code&gt;museval&lt;/code&gt; command line tool. The following example is equivalent to the code example above:</source>
          <target state="translated">우리의 명령 행 래퍼 제공 &lt;code&gt;eval_mus_dir&lt;/code&gt; 를 호출하여 &lt;code&gt;museval&lt;/code&gt; 명령 줄 도구를. 다음 예제는 위의 코드 예제와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f5673699af77525be1c3fa4b3778577547332862" translate="yes" xml:space="preserve">
          <source>When all tracks have been added, the aggregated scores can be shown using &lt;code&gt;print(results)&lt;/code&gt; and results may be saved as a pandas DataFrame &lt;code&gt;results.save('my_method.pandas')&lt;/code&gt;.</source>
          <target state="translated">모든 트랙이 추가되면 &lt;code&gt;print(results)&lt;/code&gt; 사용하여 집계 된 점수를 표시 할 수 있으며 결과는 pandas DataFrame &lt;code&gt;results.save('my_method.pandas')&lt;/code&gt; 로 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b25189e837cce7fb54efaec70b16a21e86875885" translate="yes" xml:space="preserve">
          <source>You can install the &lt;code&gt;museval&lt;/code&gt; parsing package using pip:</source>
          <target state="translated">pip를 사용하여 &lt;code&gt;museval&lt;/code&gt; 구문 분석 패키지를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="542dd89ace1ba604f84195cf9a71a01598ffdfc1" translate="yes" xml:space="preserve">
          <source>museval</source>
          <target state="translated">뮤즈 발</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
