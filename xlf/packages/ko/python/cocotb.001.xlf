<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/cocotb/">
    <body>
      <group id="cocotb">
        <trans-unit id="b201baf7fdea776d4f3b633ef42ee53a5b09c94f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cocotb/cocotb/issues/new&quot;&gt;Raise a bug / request an enhancement&lt;/a&gt; (Requires a GitHub account)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cocotb/cocotb/issues/new&quot;&gt;버그 발생 / 개선 요청&lt;/a&gt; (GitHub 계정 필요)</target>
        </trans-unit>
        <trans-unit id="b82d7e1d57ede6ef79a674e28620114d4df1627f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;!!! Windows Users !!!&lt;/strong&gt; See &lt;a href=&quot;https://docs.cocotb.org/en/stable/install.html&quot;&gt;here&lt;/a&gt; for installation instructions.</source>
          <target state="translated">&lt;strong&gt;!!! Windows 사용자 !!! &lt;/strong&gt;설치 지침 은 &lt;a href=&quot;https://docs.cocotb.org/en/stable/install.html&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="05d4991198406a5d1bb36ee3a5ddac59380067a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cocotb&lt;/strong&gt; is a coroutine based cosimulation library for writing VHDL and Verilog testbenches in Python.</source>
          <target state="translated">&lt;strong&gt;cocotb&lt;/strong&gt; 는 Python으로 VHDL 및 Verilog 테스트 벤치를 작성하기위한 코 루틴 기반 공동 시뮬레이션 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="3ea5fd7ac9be36255ef9155761cc743987a1cf9f" translate="yes" xml:space="preserve">
          <source>A C++11 compiler</source>
          <target state="translated">C ++ 11 컴파일러</target>
        </trans-unit>
        <trans-unit id="650f43ccdf87fb35d10406b150a20824767179d5" translate="yes" xml:space="preserve">
          <source>A simple Makefile:</source>
          <target state="translated">간단한 Makefile :</target>
        </trans-unit>
        <trans-unit id="38d6757ce77d29b08e8947745bb48f93378beab3" translate="yes" xml:space="preserve">
          <source>After installing these dependencies, the latest stable version of cocotb can be installed with pip.</source>
          <target state="translated">이러한 종속성을 설치 한 후 pip를 사용하여 안정적인 최신 버전의 cocotb를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="090170b8110707a32a9c04d64c3813202c58d2e8" translate="yes" xml:space="preserve">
          <source>An HDL simulator (such as &lt;a href=&quot;http://iverilog.icarus.com/&quot;&gt;Icarus Verilog&lt;/a&gt;)</source>
          <target state="translated">HDL 시뮬레이터 (예 : &lt;a href=&quot;http://iverilog.icarus.com/&quot;&gt;Icarus Verilog&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3691868e07be5b6a1f05d3e18d3e33d281cba4ee" translate="yes" xml:space="preserve">
          <source>An example of a simple randomized cocotb testbench:</source>
          <target state="translated">간단한 무작위 cocotb 테스트 벤치의 예 :</target>
        </trans-unit>
        <trans-unit id="5972239bcaa375adabbaef2616d88658159a3b62" translate="yes" xml:space="preserve">
          <source>As a first trivial introduction to cocotb, the following example &quot;tests&quot; a flip-flop.</source>
          <target state="translated">cocotb에 대한 첫 번째 사소한 소개로서 다음 예제는 플립 플롭을 &quot;테스트&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="994abce46f2750e91b759b6626d1a4eb52eb6537" translate="yes" xml:space="preserve">
          <source>Cocotb based USB 1.1 test suite for FPGA IP, with testbenches for a variety of open source USB cores</source>
          <target state="translated">FPGA IP 용 Cocotb 기반 USB 1.1 테스트 스위트, 다양한 오픈 소스 USB 코어 용 테스트 벤치 포함</target>
        </trans-unit>
        <trans-unit id="e243d6dace379c88069b5d4e4a224e0fa7c8da2b" translate="yes" xml:space="preserve">
          <source>Cocotb requires:</source>
          <target state="translated">Cocotb에는 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dac016247c6c9a2d2bb73be3912fc366211d6d8c" translate="yes" xml:space="preserve">
          <source>Endian Swapper tutorial</source>
          <target state="translated">엔디안 스와 퍼 튜토리얼</target>
        </trans-unit>
        <trans-unit id="0fdc45daf5f40fb3f569e0e8980bc2190ad4e5bb" translate="yes" xml:space="preserve">
          <source>First, we need a hardware design which we can test. For this example, create a file &lt;code&gt;dff.sv&lt;/code&gt; with SystemVerilog code for a simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Flip-flop_(electronics)#D_flip-flop&quot;&gt;D flip-flop&lt;/a&gt;. You could also use any other language a &lt;a href=&quot;https://docs.cocotb.org/en/stable/simulator_support.html&quot;&gt;cocotb-supported simulator&lt;/a&gt; understands, e.g. VHDL.</source>
          <target state="translated">먼저 테스트 할 수있는 하드웨어 설계가 필요합니다. 이 예에서는 간단한 &lt;a href=&quot;https://en.wikipedia.org/wiki/Flip-flop_(electronics)#D_flip-flop&quot;&gt;D flip-flop에&lt;/a&gt; 대한 SystemVerilog 코드를 사용하여 &lt;code&gt;dff.sv&lt;/code&gt; 파일을 만듭니다 . &lt;a href=&quot;https://docs.cocotb.org/en/stable/simulator_support.html&quot;&gt;cocotb 지원 시뮬레이터가&lt;/a&gt; 이해 하는 다른 언어 ( 예 : VHDL)를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="be0ba4d48f6d2157299e97e45cf87ca8123d85ad" translate="yes" xml:space="preserve">
          <source>For detail on how to install the &lt;em&gt;development&lt;/em&gt; version of cocotb, see &lt;a href=&quot;https://docs.cocotb.org/en/latest/install_devel.html#install-devel&quot;&gt;the lastest documentation&lt;/a&gt;.</source>
          <target state="translated">cocotb 의 &lt;em&gt;개발&lt;/em&gt; 버전 을 설치하는 방법에 대한 자세한 내용 &lt;a href=&quot;https://docs.cocotb.org/en/latest/install_devel.html#install-devel&quot;&gt;은 최신 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="27c4d65c7353904ae27bc3011f0188b243e20deb" translate="yes" xml:space="preserve">
          <source>For more details on installation, including prerequisites, see &lt;a href=&quot;https://docs.cocotb.org/en/stable/install.html&quot;&gt;the documentation&lt;/a&gt;.</source>
          <target state="translated">필수 구성 요소를 포함하여 설치에 대한 자세한 내용 &lt;a href=&quot;https://docs.cocotb.org/en/stable/install.html&quot;&gt;은 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbdffe41b31e134d7f668ef2e11baee36751927d" translate="yes" xml:space="preserve">
          <source>For more information please see the &lt;a href=&quot;https://docs.cocotb.org/&quot;&gt;cocotb documentation&lt;/a&gt; and the &lt;a href=&quot;https://github.com/cocotb/cocotb/wiki&quot;&gt;wiki&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://docs.cocotb.org/&quot;&gt;cocotb 문서&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/cocotb/cocotb/wiki&quot;&gt;wiki&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4b821258876d05ad708d0ac0d92d4efd4d59d35" translate="yes" xml:space="preserve">
          <source>For more related resources please check the &lt;a href=&quot;https://github.com/cocotb/cocotb/wiki/Further-Resources&quot;&gt;wiki&lt;/a&gt; and the &lt;a href=&quot;https://github.com/cocotb/cocotb/network/dependents&quot;&gt;list of projects depending on cocotb&lt;/a&gt;.</source>
          <target state="translated">더 많은 관련 리소스 &lt;a href=&quot;https://github.com/cocotb/cocotb/network/dependents&quot;&gt;는 cocotb에 따라 &lt;/a&gt;&lt;a href=&quot;https://github.com/cocotb/cocotb/wiki/Further-Resources&quot;&gt;위키&lt;/a&gt; 와 프로젝트 목록을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="071035c51cb9437657fe569bdba90d7d14994d8c" translate="yes" xml:space="preserve">
          <source>Functional Coverage and Constrained Randomization Extensions for Cocotb</source>
          <target state="translated">Cocotb에 대한 기능적 범위 및 제한적 무작위 화 확장</target>
        </trans-unit>
        <trans-unit id="785c8c471fc8ff30809a1d40b1bb1f69e76017bc" translate="yes" xml:space="preserve">
          <source>Get involved:</source>
          <target state="translated">참여하다:</target>
        </trans-unit>
        <trans-unit id="f64f4cdd121a63a4b2540ec46595cb8da410b3da" translate="yes" xml:space="preserve">
          <source>In order to run the test with Icarus Verilog, execute:</source>
          <target state="translated">Icarus Verilog로 테스트를 실행하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="ef52a06c1759ad2cfa3ad86317c4ad3310c8924c" translate="yes" xml:space="preserve">
          <source>Join the Gitter chat room</source>
          <target state="translated">Gitter 채팅방에 참여하세요</target>
        </trans-unit>
        <trans-unit id="dc46f4e0b25cb591e40effdffe3e79fc5950dc9a" translate="yes" xml:space="preserve">
          <source>Join the mailing list</source>
          <target state="translated">메일 링리스트에 가입</target>
        </trans-unit>
        <trans-unit id="eaef2ad33ac6bde03f7a3c81853810f9547e7e4d" translate="yes" xml:space="preserve">
          <source>Ping using TUN/TAP tutorial</source>
          <target state="translated">TUN / TAP 자습서를 사용하여 핑</target>
        </trans-unit>
        <trans-unit id="769122f135910e46e3e49288118dc65130f6542d" translate="yes" xml:space="preserve">
          <source>Python 3.5+</source>
          <target state="translated">Python 3.5 이상</target>
        </trans-unit>
        <trans-unit id="45eb061a0401625b46899d705edfa658d766234c" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://docs.cocotb.org&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.cocotb.org&quot;&gt;문서&lt;/a&gt; 읽기</target>
        </trans-unit>
        <trans-unit id="a6534c5def1b633bea02980508cbc128fd4a726d" translate="yes" xml:space="preserve">
          <source>Tutorials, examples and related projects</source>
          <target state="translated">튜토리얼, 예제 및 관련 프로젝트</target>
        </trans-unit>
        <trans-unit id="dc781c3e76e74e046eb80f78bb1095be05d34203" translate="yes" xml:space="preserve">
          <source>UVM 1.2 port to Python</source>
          <target state="translated">Python에 UVM 1.2 포트</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="16013394f06cdd4378377a4cfb213c84f47c1b97" translate="yes" xml:space="preserve">
          <source>cocotb is a coroutine based cosimulation library for writing VHDL and Verilog testbenches in Python.</source>
          <target state="translated">cocotb는 Python으로 VHDL 및 Verilog 테스트 벤치를 작성하기위한 코 루틴 기반 공동 시뮬레이션 라이브러리입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
