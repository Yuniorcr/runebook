<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/optimuspyspark/">
    <body>
      <group id="optimuspyspark">
        <trans-unit id="4d14fe8053086dacebd27af943b6b4edfd55e646" translate="yes" xml:space="preserve">
          <source>&quot;In OpenRefine, clustering refers to the operation of &quot;finding groups of different values that might be alternative representations of the same thing&quot;. For example, the two strings &quot;New York&quot; and &quot;new york&quot; are very likely to refer to the same concept and just have capitalization differences. Likewise, &quot;G&amp;ouml;del&quot; and &quot;Godel&quot; probably refer to the same person.&quot;</source>
          <target state="translated">&quot;OpenRefine에서 클러스터링은&quot;동일한 것을 대체 할 수있는 다른 값의 그룹 찾기 &quot;작업을 의미합니다. 예를 들어&quot;New York &quot;과&quot;new york &quot;이라는 두 문자열은 동일한 항목을 참조 할 가능성이 매우 높습니다. 대소 문자 차이 만 있습니다. 마찬가지로 &quot;G&amp;ouml;del&quot;과 &quot;Godel&quot;은 같은 사람을 가리킬 것입니다. &quot;</target>
        </trans-unit>
        <trans-unit id="f94f3d12eb049a1a8b46cda8906673bff6ccd2bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/docs/source&quot;&gt;Documentation&lt;/a&gt; updates, enhancements, designs, or   bugfixes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/docs/source&quot;&gt;문서&lt;/a&gt; 업데이트, 개선, 디자인 또는 버그 수정.</target>
        </trans-unit>
        <trans-unit id="a444d24a2bfd2d9604721453ba0dca28110f3993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hioptimus.com/category/blog/&quot;&gt;Blogging, speaking about, or creating tutorials&lt;/a&gt;   about Optimus and its many features.</source>
          <target state="translated">&lt;a href=&quot;https://hioptimus.com/category/blog/&quot;&gt;&lt;/a&gt;Optimus 및 다양한 기능에 대한 블로깅, 말하기 또는 튜토리얼 작성 .</target>
        </trans-unit>
        <trans-unit id="b39cc4550d7c3f3683a586bc3406628a6f4dcbf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://twitter.com/search?q=optimusdata&quot;&gt;Searching #optimusdata on twitter&lt;/a&gt; and helping someone else who needs help.</source>
          <target state="translated">&lt;a href=&quot;https://twitter.com/search?q=optimusdata&quot;&gt;트위터에서 #optimusdata를 검색&lt;/a&gt; 하고 도움이 필요한 다른 사람을 돕습니다.</target>
        </trans-unit>
        <trans-unit id="5dfa22eb03d5e4e8b6f3cc445dc50fd1fd3ab06d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: We are working hard in version 3.0 &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/develop-3.0&quot;&gt;https://github.com/ironmussa/Optimus/tree/develop-3.0&lt;/a&gt;. in which you could use pandas, cudf, Dask, Dask/cudf as backend using a unified API.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : 버전 3.0 &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/develop-3.0&quot;&gt;https://github.com/ironmussa/Optimus/tree/develop-3.0&lt;/a&gt; 에서 열심히 노력하고 있습니다 . 통합 API를 사용하여 pandas, cudf, Dask, Dask / cudf를 백엔드로 사용할 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f28100b7b9410799303a48f9e4b0d72d56607409" translate="yes" xml:space="preserve">
          <source>Adding unit, or functional &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/tests&quot;&gt;tests&lt;/a&gt;</source>
          <target state="translated">단위 또는 기능 &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/tests&quot;&gt;테스트&lt;/a&gt; 추가</target>
        </trans-unit>
        <trans-unit id="5a7fe27838c05306fa98b1a213519043a42e8dac" translate="yes" xml:space="preserve">
          <source>Also if you want to a suggestion or feature request use &lt;a href=&quot;https://github.com/ironmussa/optimus/issues&quot;&gt;https://github.com/ironmussa/optimus/issues&lt;/a&gt;</source>
          <target state="translated">또한 제안이나 기능 요청이 필요한 경우 &lt;a href=&quot;https://github.com/ironmussa/optimus/issues&quot;&gt;https://github.com/ironmussa/optimus/issues를&lt;/a&gt; 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="ccffb6f8d2a70dbf4e238f9525387d7f5f4dd0e3" translate="yes" xml:space="preserve">
          <source>Also you can create a dataframe from a panda dataframe</source>
          <target state="translated">또한 panda 데이터 프레임에서 데이터 프레임을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae80296465e7b2d56ced3ba44e1d720336be89b5" translate="yes" xml:space="preserve">
          <source>Also you can create a dataframe from scratch</source>
          <target state="translated">또한 처음부터 데이터 프레임을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44098a317afdcb405601a636a06f08879735e1ce" translate="yes" xml:space="preserve">
          <source>Also you can go to the &lt;a href=&quot;examples/&quot;&gt;examples&lt;/a&gt; folder to found specific notebooks about data cleaning, data munging, profiling, data enrichment and how to create ML and DL models.</source>
          <target state="translated">또한 &lt;a href=&quot;examples/&quot;&gt;examples&lt;/a&gt; 폴더로 이동하여 데이터 정리, 데이터 정리, 프로파일 링, 데이터 보강 및 ML 및 DL 모델 생성 방법에 대한 특정 노트북을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9623366d47462decfeab98a941369cbf2e4cf854" translate="yes" xml:space="preserve">
          <source>Also you can load data from oracle, redshift, mysql and postgres. See &lt;em&gt;&lt;strong&gt;Database connection&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">또한 oracle, redshift, mysql 및 postgres에서 데이터를로드 할 수 있습니다. &lt;em&gt;&lt;strong&gt;데이터베이스 연결&lt;/strong&gt;&lt;/em&gt; 참조&lt;em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00527151b2a5583f94ba8fa29b10a42be77782af" translate="yes" xml:space="preserve">
          <source>Also you can save data to oracle, redshift, mysql and postgres. See &lt;em&gt;&lt;strong&gt;Database connection&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">또한 데이터를 oracle, redshift, mysql 및 postgres에 저장할 수 있습니다. &lt;em&gt;&lt;strong&gt;데이터베이스 연결&lt;/strong&gt;&lt;/em&gt; 참조&lt;em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c01e50396b269c6b07d0382253ca889245cd82f0" translate="yes" xml:space="preserve">
          <source>Apache 2.0 &amp;copy;</source>
          <target state="translated">Apache 2.0 &amp;copy;</target>
        </trans-unit>
        <trans-unit id="6d0002dbcf3f5e3f42c123efb8183554561a5a48" translate="yes" xml:space="preserve">
          <source>Apache Spark created a library called MLlib where they coded great algorithms for Machine Learning. Now
with the ML library we can take advantage of the Dataframe API and its optimization to create Machine Learning Pipelines easily.</source>
          <target state="translated">Apache Spark는 MLlib라는 라이브러리를 만들어 머신 러닝을위한 훌륭한 알고리즘을 코딩했습니다. 이제 ML 라이브러리를 통해 Dataframe API 및 최적화를 활용하여 Machine Learning Pipeline을 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b64899a2bdc5b82518d0aa1d53407cb40ea64271" translate="yes" xml:space="preserve">
          <source>Apache Spark&amp;gt;= 2.4.0</source>
          <target state="translated">Apache Spark&amp;gt; = 2.4.0</target>
        </trans-unit>
        <trans-unit id="143b54ceee9211cfe2dd5cba55d7902dc55fc52d" translate="yes" xml:space="preserve">
          <source>Argenis Leon</source>
          <target state="translated">아르 게 니스 레온</target>
        </trans-unit>
        <trans-unit id="6fd1df7dfa78cabba847e0dde68d6d658f085ff6" translate="yes" xml:space="preserve">
          <source>Backers</source>
          <target state="translated">후원자</target>
        </trans-unit>
        <trans-unit id="d9952600de28d03ed79e04ced140a6c129cacd6b" translate="yes" xml:space="preserve">
          <source>Besides check the &lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/ironmussa/Optimus/blob/master/docs/cheatsheet/optimus_cheat_sheet.html&quot;&gt;Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/ironmussa/Optimus/blob/master/docs/cheatsheet/optimus_cheat_sheet.html&quot;&gt;치트 시트&lt;/a&gt; 확인 외에도</target>
        </trans-unit>
        <trans-unit id="75c9c06ddcaae908df34f4e711c15b1a3a80558d" translate="yes" xml:space="preserve">
          <source>Besides histograms and frequency plots you also have scatter plots and box plots. All powered by Apache by pyspark</source>
          <target state="translated">히스토그램과 주파수 플롯 외에도 산점도와 상자 플롯도 있습니다. 모두 pyspark의 Apache 기반</target>
        </trans-unit>
        <trans-unit id="9f148a70dea99c79a6a47ae323868f352202d0ae" translate="yes" xml:space="preserve">
          <source>Cleaning and Processing</source>
          <target state="translated">청소 및 처리</target>
        </trans-unit>
        <trans-unit id="d8c3d53c906d2dd170a8596124fbf2f967344d48" translate="yes" xml:space="preserve">
          <source>Clustering Strings</source>
          <target state="translated">클러스터링 문자열</target>
        </trans-unit>
        <trans-unit id="22ca0897fc6982e71f87e7929084c43a6ab7a29a" translate="yes" xml:space="preserve">
          <source>Contributing to Optimus</source>
          <target state="translated">Optimus에 기여</target>
        </trans-unit>
        <trans-unit id="f2635b7b0ed569c022b022ba6007e92017d47267" translate="yes" xml:space="preserve">
          <source>Contributions go far beyond pull requests and commits. We are very happy to receive any kind of contributions</source>
          <target state="translated">기여는 풀 리퀘스트와 커밋을 훨씬 뛰어 넘습니다. 우리는 어떤 종류의 기부를 받게되어 매우 기쁩니다.</target>
        </trans-unit>
        <trans-unit id="8086adb5746e504bbe3902757baf1389e8c9f958" translate="yes" xml:space="preserve">
          <source>Contributors:</source>
          <target state="translated">기여자 :</target>
        </trans-unit>
        <trans-unit id="c1174865dc451c21b895e949b274d7ea1e9b90ef" translate="yes" xml:space="preserve">
          <source>Core Team</source>
          <target state="translated">핵심 팀</target>
        </trans-unit>
        <trans-unit id="52cf7f8d5b2139a264e0c1c8417d153748adbf8a" translate="yes" xml:space="preserve">
          <source>Create dataframes</source>
          <target state="translated">데이터 프레임 생성</target>
        </trans-unit>
        <trans-unit id="253deb0b4c3f25b5d0a8ab69ab15a0a5e8a1bbf9" translate="yes" xml:space="preserve">
          <source>Custom functions</source>
          <target state="translated">맞춤형 기능</target>
        </trans-unit>
        <trans-unit id="fd5611faec913bc587e10f784ae2c907e58313ca" translate="yes" xml:space="preserve">
          <source>Data enrichment</source>
          <target state="translated">데이터 강화</target>
        </trans-unit>
        <trans-unit id="099dccef26c430d514bb04516655f1fc1871153b" translate="yes" xml:space="preserve">
          <source>Data profiling</source>
          <target state="translated">데이터 프로파일 링</target>
        </trans-unit>
        <trans-unit id="56b1f3c77e89f25574edd3a96c9fb62795f51729" translate="yes" xml:space="preserve">
          <source>Database connection</source>
          <target state="translated">데이터베이스 연결</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="48722e5be3bba84358ac63702a8027f8a1c4e657" translate="yes" xml:space="preserve">
          <source>Even though this task is not extremely hard, it is not easy. The way most Machine Learning models work on Spark
are not straightforward, and they need lots of feature engineering to work. That's why we created the feature engineering
section inside Optimus.</source>
          <target state="translated">이 작업이 그다지 어렵지는 않지만 쉽지는 않습니다. 대부분의 기계 학습 모델이 Spark에서 작동하는 방식은 간단하지 않으며 작동하려면 많은 기능 엔지니어링이 필요합니다. 이것이 우리가 Optimus 내부에 기능 엔지니어링 섹션을 만든 이유입니다.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">피드백</target>
        </trans-unit>
        <trans-unit id="81d491964033aed7e6a234630d82d03105881aaf" translate="yes" xml:space="preserve">
          <source>Feedback is what drive Optimus future, so please take a couple of minutes to help shape the Optimus' Roadmap:  &lt;a href=&quot;http://bit.ly/optimus_survey&quot;&gt;http://bit.ly/optimus_survey&lt;/a&gt;</source>
          <target state="translated">피드백은 Optimus의 미래를 이끄는 요소이므로 Optimus의 로드맵을 구성하는 데 몇 분 정도 시간을 할애하십시오. &lt;a href=&quot;http://bit.ly/optimus_survey&quot;&gt;http://bit.ly/optimus_survey&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ec72eab087de454a1888a04353532ab6bdd7c4a" translate="yes" xml:space="preserve">
          <source>For dates data types Optimus can give you extra information</source>
          <target state="translated">날짜 데이터 유형의 경우 Optimus는 추가 정보를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c91cea6cde8e0b6f747e53b935e7a8e4507af64" translate="yes" xml:space="preserve">
          <source>For example you can load data from a url, transform and apply some predefined cleaning functions:</source>
          <target state="translated">예를 들어 URL에서 데이터를로드하고 미리 정의 된 일부 정리 기능을 변환 및 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd03d183677c1ca394c4df4b71ed497f9131247e" translate="yes" xml:space="preserve">
          <source>For more informacion see this:
&lt;a href=&quot;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&quot;&gt;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&lt;/a&gt;</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&quot;&gt;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ae14b6c0988ac95bdedf36da2d4ed80ae6c5b89" translate="yes" xml:space="preserve">
          <source>Get the ouliers using tukey</source>
          <target state="translated">tukey를 사용하여 ouliers 가져 오기</target>
        </trans-unit>
        <trans-unit id="acea85e5fa226bf29f03f18bbe6b583c782bda4e" translate="yes" xml:space="preserve">
          <source>Handling Spark jars, packages and repositories</source>
          <target state="translated">Spark jar, 패키지 및 리포지토리 처리</target>
        </trans-unit>
        <trans-unit id="351dbcc3ae6252820c722dc1b3b0fcc3a6d0bfe6" translate="yes" xml:space="preserve">
          <source>Handling column output</source>
          <target state="translated">열 출력 처리</target>
        </trans-unit>
        <trans-unit id="73a0f5a1427e7ea76b5b97f1d724bcc512ed2f47" translate="yes" xml:space="preserve">
          <source>Helping others on &lt;a href=&quot;https://img.shields.io/discord/579030865468719104.svg&quot;&gt;Discord&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://img.shields.io/discord/579030865468719104.svg&quot;&gt;Discord에서&lt;/a&gt; 다른 사람 돕기</target>
        </trans-unit>
        <trans-unit id="225c92a02117e16bc8a9084b75440c31379706cf" translate="yes" xml:space="preserve">
          <source>Here a quote from its site:</source>
          <target state="translated">다음은 해당 사이트의 인용문입니다.</target>
        </trans-unit>
        <trans-unit id="e043b4221f71c79974691a407d97e9e2dc852f0d" translate="yes" xml:space="preserve">
          <source>Here you apply a function to the &quot;billingid&quot; column. Sum 1 and 2 to the current column value. All powered by Pandas UDF</source>
          <target state="translated">여기서 &quot;billingid&quot;열에 함수를 적용합니다. 현재 열 값에 1과 2를 더합니다. 모두 Pandas UDF 기반</target>
        </trans-unit>
        <trans-unit id="95ad823182c8526f5d6a850e990a354c316fb467" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;list&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;list&lt;/strong&gt; is passed in &lt;strong&gt;out_cols&lt;/strong&gt; Optimus will output every input column in the respective output column</source>
          <target state="translated">경우 &lt;strong&gt;리스트&lt;/strong&gt; 에 전달 &lt;strong&gt;input_cols&lt;/strong&gt; 및 &lt;strong&gt;리스트&lt;/strong&gt; 에 전달 &lt;strong&gt;out_cols&lt;/strong&gt; 각 출력 열에가 출력 옵티마다 입력란을</target>
        </trans-unit>
        <trans-unit id="3b4928a399e8e1305ef7347ccaad8060349b441d" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;list&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;out_cols&lt;/strong&gt; Optimus will concatenate the list with every element in the list to create a new column name with the output</source>
          <target state="translated">경우 &lt;strong&gt;목록&lt;/strong&gt; 에 전달 &lt;strong&gt;input_cols&lt;/strong&gt; 하고 &lt;strong&gt;문자열이&lt;/strong&gt; 전달됩니다 &lt;strong&gt;out_cols&lt;/strong&gt; 옵티머스 출력과 새 열 이름을 만들 목록에있는 모든 요소 목록을 연결합니다</target>
        </trans-unit>
        <trans-unit id="112348424b2fbe5ef93be2c463be508902fcb017" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and &lt;strong&gt;output_cols&lt;/strong&gt; is not defined the result from the operation is going to be saved in the same input column</source>
          <target state="translated">경우 &lt;strong&gt;문자열&lt;/strong&gt; 에 전달 &lt;strong&gt;input_cols&lt;/strong&gt; 및 &lt;strong&gt;output_cols&lt;/strong&gt; 동작의 결과가 정의되지 않은 동일한 입력 항목에 저장하려고</target>
        </trans-unit>
        <trans-unit id="2f67aeb095042bddf7e1402e86ac60fffc91ea72" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;output_cols&lt;/strong&gt; the output is going to be saved in the output column</source>
          <target state="translated">경우 &lt;strong&gt;문자열이&lt;/strong&gt; 전달됩니다 &lt;strong&gt;input_cols&lt;/strong&gt; 하고 &lt;strong&gt;문자열&lt;/strong&gt; 로 전달된다 &lt;strong&gt;output_cols&lt;/strong&gt; 출력이 출력 컬럼에 저장하는 것입니다</target>
        </trans-unit>
        <trans-unit id="af08144db1541754ca59a16a0f56ce793cf0f34a" translate="yes" xml:space="preserve">
          <source>If you want to apply a Column Expression use &lt;code&gt;apply_expr()&lt;/code&gt; like this. In this case we pass an argument 10 to divide the actual column value</source>
          <target state="translated">열 표현식을 적용하려면 다음 과 같이 &lt;code&gt;apply_expr()&lt;/code&gt; 사용 하십시오. 이 경우 실제 열 값을 나누기 위해 인수 10을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9b4de938a4e9fe687dc20ff2f6af9ac174587912" translate="yes" xml:space="preserve">
          <source>In your terminal just type  &lt;code&gt;pip install optimuspyspark&lt;/code&gt;</source>
          <target state="translated">터미널에 &lt;code&gt;pip install optimuspyspark&lt;/code&gt; 를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="605d82caa33e3e8cfa09db3546bb282d9af04f98" translate="yes" xml:space="preserve">
          <source>Installation (pip):</source>
          <target state="translated">설치 (pip) :</target>
        </trans-unit>
        <trans-unit id="a00f74a53d5eedf3a1cd6d0d801d4fb76b93de5c" translate="yes" xml:space="preserve">
          <source>Into this</source>
          <target state="translated">이것으로</target>
        </trans-unit>
        <trans-unit id="a87058f0a1f68dfc71b04f8a59e58dc31002f1f0" translate="yes" xml:space="preserve">
          <source>Keycolision</source>
          <target state="translated">Keycolision</target>
        </trans-unit>
        <trans-unit id="485999aadd7f73d21af416e165768fff9d4110c3" translate="yes" xml:space="preserve">
          <source>Let's load a &quot;big&quot; dataset</source>
          <target state="translated">&quot;큰&quot;데이터 세트를로드 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="df0ea4a1b61af9dc45f0e4e89319efc67f28b7c2" translate="yes" xml:space="preserve">
          <source>Let's load a tiny dataset we can enrich</source>
          <target state="translated">보강 할 수있는 작은 데이터 세트를로드하겠습니다.</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">특허:</target>
        </trans-unit>
        <trans-unit id="ffa42d904be90d9cc75f8ce5b379c6fd7af8c23f" translate="yes" xml:space="preserve">
          <source>Loading data</source>
          <target state="translated">데이터로드</target>
        </trans-unit>
        <trans-unit id="f97db96938c3125697cc24ed503988866799c024" translate="yes" xml:space="preserve">
          <source>Machine Learning</source>
          <target state="translated">기계 학습</target>
        </trans-unit>
        <trans-unit id="6d650f6e78d279358a1452410fcada035f1d3021" translate="yes" xml:space="preserve">
          <source>Machine Learning is one of the last steps, and the goal for most Data Science WorkFlows.</source>
          <target state="translated">기계 학습은 마지막 단계 중 하나이며 대부분의 데이터 과학 워크 플로우의 목표입니다.</target>
        </trans-unit>
        <trans-unit id="1786c24866d6ea107cece1d5a4392b1aebef85a5" translate="yes" xml:space="preserve">
          <source>Nearest Neighbor Methods</source>
          <target state="translated">최근 접 이웃 방법</target>
        </trans-unit>
        <trans-unit id="5b0015426b1a5705cc29013903b274ea6b63f863" translate="yes" xml:space="preserve">
          <source>Note that you can use Optimus functions and Spark functions(&lt;code&gt;.WithColumn()&lt;/code&gt;) and all the df function availables in a Spark Dataframe at the same time. To know about all the Optimus functionality please go to this &lt;a href=&quot;examples/&quot;&gt;notebooks&lt;/a&gt;</source>
          <target state="translated">Optimus 함수와 Spark 함수 ( &lt;code&gt;.WithColumn()&lt;/code&gt; ) 및 Spark Dataframe에서 사용 가능한 모든 df 함수를 동시에 사용할 수 있습니다. 모든 Optimus 기능에 대해 알아 보려면이 &lt;a href=&quot;examples/&quot;&gt;노트북으로&lt;/a&gt; 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="c4d639e2b3de5627d2201837d4055c423ecdfe8d" translate="yes" xml:space="preserve">
          <source>Now Optimus can load data in csv, json, parquet, avro, excel from a local file or URL.</source>
          <target state="translated">이제 Optimus는 로컬 파일 또는 URL에서 csv, json, parquet, avro, excel로 데이터를로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="0e07a46de25f6377b1ffdf9cab12b584b61b5a1f" translate="yes" xml:space="preserve">
          <source>One of the best &quot;tree&quot; models for machine learning is Random Forest. What about creating a RF model with just
one line? With Optimus is really easy.</source>
          <target state="translated">기계 학습을위한 최고의 &quot;트리&quot;모델 중 하나는 Random Forest입니다. 단 하나의 라인으로 RF 모델을 생성하는 것은 어떻습니까? Optimus를 사용하면 정말 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="49a082f76ace2f07c67d69b56065dada5d841f72" translate="yes" xml:space="preserve">
          <source>Optimus V2 was created to make data cleaning a breeze. The API was designed to be super easy to newcomers and very familiar for people that comes from Pandas.
Optimus expands the Spark DataFrame functionality adding .rows and .cols attributes.</source>
          <target state="translated">Optimus V2는 데이터 정리를 쉽게하기 위해 만들어졌습니다. API는 초보자에게 매우 쉽고 Pandas에서 온 사람들에게 매우 친숙하도록 설계되었습니다. Optimus는 .rows 및 .cols 속성을 추가하여 Spark DataFrame 기능을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="0a049d1036baf67d842cc2c328333eb70491379c" translate="yes" xml:space="preserve">
          <source>Optimus comes with a powerful and unique data profiler. Besides basic and advance stats like min, max, kurtosis, mad etc,
it also let you know what type of data has every column. For example if a string column have string, integer, float, bool, date Optimus can give you an unique overview about your data.
Just run &lt;code&gt;df.profile(&quot;*&quot;)&lt;/code&gt; to profile all the columns. For more info about the profiler please go to this &lt;a href=&quot;./examples/profiler.ipynb&quot;&gt;notebook&lt;/a&gt;.</source>
          <target state="translated">Optimus는 강력하고 고유 한 데이터 프로파일 러와 함께 제공됩니다. min, max, kurtosis, mad 등과 같은 기본 및 고급 통계 외에도 모든 열에 어떤 유형의 데이터가 있는지 알려줍니다. 예를 들어 문자열 열에 문자열, 정수, 부동 소수점, 부울, 날짜가있는 경우 Optimus는 데이터에 대한 고유 한 개요를 제공 할 수 있습니다. &lt;code&gt;df.profile(&quot;*&quot;)&lt;/code&gt; 을 실행 하여 모든 열을 프로파일 링하십시오. 프로파일 러에 대한 자세한 내용은이 &lt;a href=&quot;./examples/profiler.ipynb&quot;&gt;노트북으로&lt;/a&gt; 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f13d53339395bd7da551c6ddc5593c384dca018" translate="yes" xml:space="preserve">
          <source>Optimus has a tiny API so you can use any plotting library. For example, you can use &lt;code&gt;df.cols.scatter()&lt;/code&gt;, &lt;code&gt;df.cols.frequency()&lt;/code&gt;, &lt;code&gt;df.cols.boxplot()&lt;/code&gt; or &lt;code&gt;df.cols.hist()&lt;/code&gt; to output a JSON that you can process to adapt the data to any plotting library.</source>
          <target state="translated">Optimus에는 작은 API가 있으므로 모든 플로팅 라이브러리를 사용할 수 있습니다. 예를 들어 &lt;code&gt;df.cols.scatter()&lt;/code&gt; , &lt;code&gt;df.cols.frequency()&lt;/code&gt; , &lt;code&gt;df.cols.boxplot()&lt;/code&gt; 또는 &lt;code&gt;df.cols.hist()&lt;/code&gt; 를 사용하여 데이터를 조정하기 위해 처리 할 수있는 JSON을 출력 할 수 있습니다. 모든 플로팅 라이브러리.</target>
        </trans-unit>
        <trans-unit id="bd5b27005e74eb22a1ec115deb958daa573b0c03" translate="yes" xml:space="preserve">
          <source>Optimus have handy tools to connect to databases and extract informacion. Optimus can handle &lt;strong&gt;redshift&lt;/strong&gt;, &lt;strong&gt;postgres&lt;/strong&gt;, &lt;strong&gt;oracle&lt;/strong&gt; and &lt;strong&gt;mysql&lt;/strong&gt;</source>
          <target state="translated">Optimus에는 데이터베이스에 연결하고 정보를 추출 할 수있는 편리한 도구가 있습니다. Optimus는 &lt;strong&gt;redshift&lt;/strong&gt; , &lt;strong&gt;postgres&lt;/strong&gt; , &lt;strong&gt;oracle&lt;/strong&gt; 및 &lt;strong&gt;mysql을&lt;/strong&gt; 처리 할 수 ​​있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="749dba28b73aa7dd9669a93e1def006267e04a03" translate="yes" xml:space="preserve">
          <source>Optimus implements some funciton to cluster Strings. We get graet inspiration from OpenRefine</source>
          <target state="translated">Optimus는 문자열을 클러스터링하기 위해 몇 가지 기능을 구현합니다. OpenRefine에서 훌륭한 영감을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="741a6fa4f68a91ec5d4eaf75967c8df131fcbc63" translate="yes" xml:space="preserve">
          <source>Optimus is the missing framework for cleaning and pre-processing data in a distributed fashion with pyspark.</source>
          <target state="translated">Optimus는 pyspark를 사용하여 분산 된 방식으로 데이터를 정리하고 사전 처리하기위한 누락 된 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="5de1be387bf1294d6b0e044a93d57ea7e355e271" translate="yes" xml:space="preserve">
          <source>Optimus is the missing framework to profile, clean, process and do ML in a distributed fashion using Apache Spark(PySpark).</source>
          <target state="translated">Optimus는 Apache Spark (PySpark)를 사용하여 분산 된 방식으로 ML을 프로파일 링, 정리, 처리 및 수행하기위한 누락 된 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="2391c08fc249856b1c54e1ed7752ff81621c2f54" translate="yes" xml:space="preserve">
          <source>Outliers</source>
          <target state="translated">이상치</target>
        </trans-unit>
        <trans-unit id="9c7f732592c60c73495ab8cfa2ee876c5d38a75b" translate="yes" xml:space="preserve">
          <source>Plots</source>
          <target state="translated">플롯</target>
        </trans-unit>
        <trans-unit id="6daf9b127f4e79e79d38466b13f3d7eb1cf895de" translate="yes" xml:space="preserve">
          <source>Processing Dates</source>
          <target state="translated">처리 날짜</target>
        </trans-unit>
        <trans-unit id="a6bebceebc7168fb5c3c23eb88206fb5594f59d5" translate="yes" xml:space="preserve">
          <source>Profiler Speed</source>
          <target state="translated">프로파일 러 속도</target>
        </trans-unit>
        <trans-unit id="3d5e552928a7cf576c5c54d1d0cee15508a078ab" translate="yes" xml:space="preserve">
          <source>Python&amp;gt;=3.6</source>
          <target state="translated">Python&amp;gt; = 3.6</target>
        </trans-unit>
        <trans-unit id="3a8fb719124ec75125cf20f89fb39b569e7f38ea" translate="yes" xml:space="preserve">
          <source>README.md corrections or redesigns.</source>
          <target state="translated">README.md 수정 또는 재 설계.</target>
        </trans-unit>
        <trans-unit id="517ee675246bfcfecf9d244c2c99d3de71305378" translate="yes" xml:space="preserve">
          <source>Remove the outliers using tukey</source>
          <target state="translated">tukey를 사용하여 이상 값 제거</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="98a0b85afae07ada377061c63a7066485e66ebb5" translate="yes" xml:space="preserve">
          <source>Saving Data</source>
          <target state="translated">데이터 저장</target>
        </trans-unit>
        <trans-unit id="4a6821a915e3cc10e41229edf6d22998283c456b" translate="yes" xml:space="preserve">
          <source>So lets see the prediction compared with the actual label:</source>
          <target state="translated">따라서 실제 레이블과 비교하여 예측을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b1574dadc6e954073386e178cfa6d1573b49b451" translate="yes" xml:space="preserve">
          <source>Spark has multiple ways to transform your data like rdd, Column Expression, udf and pandas udf. In Optimus we created the &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;apply_expr&lt;/code&gt; which handles all the implementation complexity.</source>
          <target state="translated">Spark에는 rdd, Column Expression, udf 및 pandas udf와 같은 데이터를 변환하는 여러 방법이 있습니다. Optimus에서 모든 구현 복잡성을 처리 하는 &lt;code&gt;apply()&lt;/code&gt; 및 &lt;code&gt;apply_expr&lt;/code&gt; 을 만들었습니다 .</target>
        </trans-unit>
        <trans-unit id="d8b7e7f32ed35848c9cc60c69053a5983fa5b6d7" translate="yes" xml:space="preserve">
          <source>Spelling or grammar fixes.</source>
          <target state="translated">맞춤법 또는 문법 수정.</target>
        </trans-unit>
        <trans-unit id="82cebd0cac45c28817fad5367f93a5bced93dca0" translate="yes" xml:space="preserve">
          <source>Sponsors</source>
          <target state="translated">스폰서</target>
        </trans-unit>
        <trans-unit id="4b2e320b95c30a01a67dc4b759deab8d882230a0" translate="yes" xml:space="preserve">
          <source>Start Optimus</source>
          <target state="translated">Optimus 시작</target>
        </trans-unit>
        <trans-unit id="f392cfce3b6819a0d1e67ff0575fb76872a1d1df" translate="yes" xml:space="preserve">
          <source>The rf_model variable contains the Random Forest model for analysis.</source>
          <target state="translated">rf_model 변수에는 분석을위한 Random Forest 모델이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1609b07c3671906dfb737f735df050f37e036e97" translate="yes" xml:space="preserve">
          <source>This will create a DataFrame with the predictions of the Random Forest model.</source>
          <target state="translated">그러면 Random Forest 모델의 예측으로 DataFrame이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="80244c81a374a8ac242c48a3f2feb46a072fb40f" translate="yes" xml:space="preserve">
          <source>To launch a live notebook server to test optimus using binder or Colab, click on one of the following badges:</source>
          <target state="translated">바인더 또는 Colab을 사용하여 옵티머스를 테스트하기 위해 라이브 노트북 서버를 시작하려면 다음 배지 중 하나를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="cc890e574a48085553a3c66f5e7b0b8905329e56" translate="yes" xml:space="preserve">
          <source>To return to HTML just:</source>
          <target state="translated">HTML로 돌아가려면 :</target>
        </trans-unit>
        <trans-unit id="dc1087570abb61a7c2645a8f8aee8a3fc7f02982" translate="yes" xml:space="preserve">
          <source>Triaging GitHub issues -- especially determining whether an issue still persists or is reproducible.</source>
          <target state="translated">GitHub 문제 심사-특히 문제가 여전히 지속되는지 또는 재현 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="47e5418187692bc55e287967965e23498ba6daf2" translate="yes" xml:space="preserve">
          <source>Using other plotting libraries</source>
          <target state="translated">다른 플로팅 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="0710dbbf09341848f24211b2bca05cdf5b4274b8" translate="yes" xml:space="preserve">
          <source>With .table() you have a beautifull way to show your data. You have extra information like column number, column data type and marked white spaces</source>
          <target state="translated">.table ()을 사용하면 데이터를 아름답게 표시 할 수 있습니다. 열 번호, 열 데이터 유형 및 표시된 공백과 같은 추가 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="22e0ffabd067ed0d7f66a8e811a63e8aea610b5a" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;relative_error&lt;/strong&gt; and &lt;strong&gt;approx_count&lt;/strong&gt; params you can control how some operations are caculated so you can speedup the profiling in case is needed.</source>
          <target state="translated">로 &lt;strong&gt;relative_error&lt;/strong&gt; 및 &lt;strong&gt;approx_count&lt;/strong&gt; PARAMS 당신은 당신이 필요한 경우에는 프로파일 링하는 속도를 빠르게 할 수 있도록 몇 가지 작업이 caculated하는 방법을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49936fd43ebe6f75a550101929b0cc757d457f4e" translate="yes" xml:space="preserve">
          <source>With Optimus you can handle how the output column from a transformation in going to be handled.</source>
          <target state="translated">Optimus를 사용하면 변환의 출력 열이 처리되는 방식을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f55abcf262823440a1dc4af596c98253fd4cc28e" translate="yes" xml:space="preserve">
          <source>With optimus is easy to loading jars, packages and repos. You can init optimus/spark like</source>
          <target state="translated">Optimus를 사용하면 jar, 패키지 및 저장소를 쉽게로드 할 수 있습니다. 옵티머스 / 스파크를 다음과 같이 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ccddab032707039d30ed3327be0108ba91269a1" translate="yes" xml:space="preserve">
          <source>You also can use an already created Spark session:</source>
          <target state="translated">이미 생성 된 Spark 세션을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="882e46634ed62075c97171db09004fcbe03a5990" translate="yes" xml:space="preserve">
          <source>You can also use z_score, modified_z_score or mad</source>
          <target state="translated">z_score, modified_z_score 또는 mad를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="06bb78db3d29fc8fe670096f1cee9381f788b9a5" translate="yes" xml:space="preserve">
          <source>You can change the table output back to ascii if you wish</source>
          <target state="translated">원하는 경우 테이블 출력을 다시 ascii로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="419fea641f757fb8fcb9827d945874bba97c6714" translate="yes" xml:space="preserve">
          <source>You can connect to any external API to enrich your data using Optimus. Optimus uses MongoDB to download the data and then merge it with the Spark Dataframe. You need to install MongoDB</source>
          <target state="translated">Optimus를 사용하여 데이터를 보강하기 위해 외부 API에 연결할 수 있습니다. Optimus는 MongoDB를 사용하여 데이터를 다운로드 한 다음 Spark Dataframe과 병합합니다. MongoDB를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5aa8511f4fc3788fadeb7cb558d000ed370beae8" translate="yes" xml:space="preserve">
          <source>You can go to the 10 minutes to Optimus &lt;a href=&quot;https://github.com/ironmussa/Optimus/blob/master/examples/10_min_from_spark_to_pandas_with_optimus.ipynb&quot;&gt;notebook&lt;/a&gt; where you can find the basic to start working.</source>
          <target state="translated">작업을 시작하기위한 기본 사항을 찾을 수있는 Optimus &lt;a href=&quot;https://github.com/ironmussa/Optimus/blob/master/examples/10_min_from_spark_to_pandas_with_optimus.ipynb&quot;&gt;노트북으로&lt;/a&gt; 10 분을 이동할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87efdfdf5b9ad3c37371f183937665401245fd4f" translate="yes" xml:space="preserve">
          <source>You can output to the notebook or as an image</source>
          <target state="translated">노트북 또는 이미지로 출력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d075e4329646b313f2d5700676201fe1e7c0a4cc" translate="yes" xml:space="preserve">
          <source>You transform this</source>
          <target state="translated">당신은 이것을 변형</target>
        </trans-unit>
        <trans-unit id="9f7c47dbf6344c8e10018f45814af56dd70d87d6" translate="yes" xml:space="preserve">
          <source>[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;Become a backer&lt;/a&gt;] and get your image on our README on Github with a link to your site.</source>
          <target state="translated">[ &lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;후원자되기&lt;/a&gt; ] 귀하의 사이트 링크와 함께 Github의 README에서 이미지를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="10bb1eb46cdc42726b6a25926b04ff3ea0e8eaf7" translate="yes" xml:space="preserve">
          <source>[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;Become a sponsor&lt;/a&gt;] and get your image on our README on Github with a link to your site.</source>
          <target state="translated">[ &lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;스폰서되기&lt;/a&gt; ] 귀하의 사이트에 대한 링크가있는 Github의 README에서 이미지를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="ceb250e61e71c8fad372f47251f5fd3302e96b5b" translate="yes" xml:space="preserve">
          <source>approx_count: Use &lt;code&gt;approx_count_distinct&lt;/code&gt; or &lt;code&gt;countDistinct&lt;/code&gt;. &lt;code&gt;approx_count_distinct&lt;/code&gt; is faster</source>
          <target state="translated">approx_count : &lt;code&gt;approx_count_distinct&lt;/code&gt; 또는 &lt;code&gt;countDistinct&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;approx_count_distinct&lt;/code&gt; 가 더 빠름</target>
        </trans-unit>
        <trans-unit id="0941a7de527ef8d70925bf8e132d2d331c9b9ca7" translate="yes" xml:space="preserve">
          <source>including:</source>
          <target state="translated">포함 :</target>
        </trans-unit>
        <trans-unit id="63e989a6f377267dc402891b3cade81ae30309dc" translate="yes" xml:space="preserve">
          <source>relative_error: Relative Error for quantile discretizer calculation. 1 is Faster, 0 Slower</source>
          <target state="translated">relative_error : Quantile Discretizer 계산의 상대 오류입니다. 1은 더 빠르며 0은 느립니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
