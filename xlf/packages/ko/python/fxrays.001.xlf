<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fxrays/">
    <body>
      <group id="fxrays">
        <trans-unit id="f7218e2cb77fc23e935487057a9e980e62ebf1a9" translate="yes" xml:space="preserve">
          <source>Computes extremal rays with filtering</source>
          <target state="translated">필터링을 사용하여 극한 광선을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b6955302bb0b12f8356599f6b88675ed062d73b4" translate="yes" xml:space="preserve">
          <source>The algorithm is due to Dave Letscher, and incorporates ideas of Komei
Fukuda&amp;rsquo;s.</source>
          <target state="translated">알고리즘은 Dave Letscher에 의한 것이며 Komei Fukuda의 아이디어를 통합합니다.</target>
        </trans-unit>
        <trans-unit id="5d44e4b17c5d82fa041f21841f64771d5138d50f" translate="yes" xml:space="preserve">
          <source>The setup is this.  Define the support of a vector v in R^n to be the
set of indices i such that v_i is non-zero.  We are given an integer
matrix M, typically with many more columns than rows, and a list of
&amp;ldquo;illegal supports&amp;rdquo;.  The support of a vector is illegal if its support
contains one of the illegal supports on the list.</source>
          <target state="translated">설정은 이쪽입니다. v_i가 0이 아닌 인덱스 i의 집합이되도록 R ^ n에서 벡터 v의 지원을 정의합니다. 일반적으로 행보다 더 많은 열과 &quot;불법 지원&quot;목록이있는 정수 행렬 M이 제공됩니다. 벡터 지원은 목록에있는 불법 지원 중 하나가 포함 된 경우 불법입니다.</target>
        </trans-unit>
        <trans-unit id="ad296dffab31909f480bc6fd3d7a488cc377c7fc" translate="yes" xml:space="preserve">
          <source>This package is a small, fast implementation of an algorithm for
finding extremal rays of a polyhedral cone, with filtering.  It is
intended for finding normal surfaces in triangulated 3-manifolds, and
therefore does not implement various features that might be useful for
general extremal ray problems.</source>
          <target state="translated">이 패키지는 필터링을 사용하여 다면체 원뿔의 극한 광선을 찾는 알고리즘의 작고 빠른 구현입니다. 삼각 측량 된 3- 다양체에서 일반 표면을 찾기위한 것이므로 일반적인 극한 광선 문제에 유용 할 수있는 다양한 기능을 구현하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6781db64db5c583fd06d1f1436d6f433611fb4ac" translate="yes" xml:space="preserve">
          <source>We want to find all the extremal rays of the cone
(Null space of M) intersect (positive orthant),
which are generated by vectors with legal support. (The restriction to
vector with legal support is what is meant by &amp;ldquo;filtering&amp;rdquo;.)</source>
          <target state="translated">법적 지원을받는 벡터에 의해 생성되는 원뿔의 모든 극한 광선 (M의 Null 공간)이 교차 (양수 직교)를 찾고 싶습니다. (법적 지원이있는 벡터에 대한 제한은 &quot;필터링&quot;을 의미합니다.)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
