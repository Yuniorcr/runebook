<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fmmap/">
    <body>
      <group id="fmmap">
        <trans-unit id="87fb3f45f04d8c080a3eea842b6a7503f90e6ea2" translate="yes" xml:space="preserve">
          <source>, and afterwards
preferably</source>
          <target state="translated">, 그리고 나중에 가급적</target>
        </trans-unit>
        <trans-unit id="6f1f298715f0b42faed0e248838baab91e409d68" translate="yes" xml:space="preserve">
          <source>A fast reimplementation of mmap</source>
          <target state="translated">mmap의 빠른 재 구현</target>
        </trans-unit>
        <trans-unit id="ec77ed3bc2e83cc24d7b90c0e7ecca1b81370612" translate="yes" xml:space="preserve">
          <source>A number of features, bug fixes and API changes introduced in the standard
library between Python 3.5 - Python 3.9 are supported in fmmap when running on
older versions, notably:</source>
          <target state="translated">Python 3.5-Python 3.9 사이의 표준 라이브러리에 도입 된 여러 기능, 버그 수정 및 API 변경은 이전 버전에서 실행할 때 특히 다음과 같은 fmmap에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="55af645a8beefdd86426610df271a0ec82a15838" translate="yes" xml:space="preserve">
          <source>BSD systems (FreeBSD, NetBSD, OpenBSD)</source>
          <target state="translated">BSD 시스템 (FreeBSD, NetBSD, OpenBSD)</target>
        </trans-unit>
        <trans-unit id="f6baa25029fca18f91b0092e1c1ef67310c60f43" translate="yes" xml:space="preserve">
          <source>Change some code</source>
          <target state="translated">일부 코드 변경</target>
        </trans-unit>
        <trans-unit id="54ba3f3e76210d726df50c4d588f1ed4bbb4f75e" translate="yes" xml:space="preserve">
          <source>Clone this repository (</source>
          <target state="translated">이 저장소 복제 (</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="9c32e1537d380c6aa6262eb854cea03f8af5d2f0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2020 &lt;a href=&quot;https://fwolff.net.za/&quot;&gt;Friedel Wolff&lt;/a&gt;.</source>
          <target state="translated">저작권 (c) 2020 &lt;a href=&quot;https://fwolff.net.za/&quot;&gt;Friedel Wolff&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e0b1c8364090fb2fe436342b4703a4147a61de8" translate="yes" xml:space="preserve">
          <source>Create a virtualenv</source>
          <target state="translated">virtualenv 생성</target>
        </trans-unit>
        <trans-unit id="566ce3017e96ab617c0b07f0a303102fe0db330a" translate="yes" xml:space="preserve">
          <source>Credits and Resources</source>
          <target state="translated">크레딧 및 리소스</target>
        </trans-unit>
        <trans-unit id="707fa3d262114758e2309bf6b11840103f0e3b98" translate="yes" xml:space="preserve">
          <source>For non-Windows platforms fmmap currently assumes that your platform has an</source>
          <target state="translated">Windows가 아닌 플랫폼의 경우 fmmap은 현재 플랫폼에</target>
        </trans-unit>
        <trans-unit id="8de3723fcea0a0a057e4e22f63b0c39af1ad77a8" translate="yes" xml:space="preserve">
          <source>Further reading on Wikipedia:</source>
          <target state="translated">Wikipedia에 대한 추가 읽기 :</target>
        </trans-unit>
        <trans-unit id="11d35b58f05876ab5e6383bf0c39ebd23a000a3d" translate="yes" xml:space="preserve">
          <source>Generate the compiled module:</source>
          <target state="translated">컴파일 된 모듈을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7b39816bb1fca8cbfb8fa16a38bd72c974e1fdba" translate="yes" xml:space="preserve">
          <source>Import in Python under the name</source>
          <target state="translated">이름으로 Python에서 가져 오기</target>
        </trans-unit>
        <trans-unit id="fdf2d6ca7f599d32b5a400d053d8d0bf81ec1a16" translate="yes" xml:space="preserve">
          <source>Install on the command line:</source>
          <target state="translated">명령 줄에서 설치 :</target>
        </trans-unit>
        <trans-unit id="e6b261b35c88939d05c691fe931306b09d59bed5" translate="yes" xml:space="preserve">
          <source>Install package dependencies:</source>
          <target state="translated">패키지 종속성 설치 :</target>
        </trans-unit>
        <trans-unit id="0e46575c81d585db86b5ce4541863a515b37a83c" translate="yes" xml:space="preserve">
          <source>Install package in development mode:</source>
          <target state="translated">개발 모드에서 패키지 설치 :</target>
        </trans-unit>
        <trans-unit id="430cfa2ffa08472e1a8b0173ed5f5afc49ed140f" translate="yes" xml:space="preserve">
          <source>Interpreters: CPython.</source>
          <target state="translated">통역사 : CPython.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">리눅스</target>
        </trans-unit>
        <trans-unit id="5fee3b2a7858fb6c2f1b338a9ff7b056245e5ea0" translate="yes" xml:space="preserve">
          <source>MADV_...</source>
          <target state="translated">MADV _...</target>
        </trans-unit>
        <trans-unit id="4ad6ce5dfc48908f6c4f73b2061c68ed0c8e35ae" translate="yes" xml:space="preserve">
          <source>Memory mapping is a technique of providing access to a file by mapping it into
the virtual address space of the process and letting the operating system
handle the input and output instead of explicitly reading from or writing to
the file. It can provide better performance over normal file access in some
cases. The builtin mmap module in Python exposes this functionality, but some
of the implementation is not as fast as possible.</source>
          <target state="translated">메모리 매핑은 파일을 프로세스의 가상 주소 공간에 매핑하고 파일에서 명시 적으로 읽거나 쓰는 대신 운영 체제가 입력 및 출력을 처리하도록하여 파일에 대한 액세스를 제공하는 기술입니다. 경우에 따라 일반 파일 액세스보다 더 나은 성능을 제공 할 수 있습니다. Python의 내장 mmap 모듈은이 기능을 노출하지만 일부 구현은 가능한 한 빠르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f6cadecec99a61a8622e4ec9af08e41468625fb" translate="yes" xml:space="preserve">
          <source>Memory-mapped file</source>
          <target state="translated">메모리 매핑 파일</target>
        </trans-unit>
        <trans-unit id="1c152dd41bee9fe3ee4031312cfba92779b1288f" translate="yes" xml:space="preserve">
          <source>Operating systems:</source>
          <target state="translated">운영체제:</target>
        </trans-unit>
        <trans-unit id="09bd6a353a7bb8a33e37cfee71ada9fc9ce37d89" translate="yes" xml:space="preserve">
          <source>PATH</source>
          <target state="translated">통로</target>
        </trans-unit>
        <trans-unit id="bc89dcaa81888ed4a7a00664e8583c478aecc04e" translate="yes" xml:space="preserve">
          <source>Python versions: 3.4, 3.5, 3.6, 3.7, 3.8.</source>
          <target state="translated">Python 버전 : 3.4, 3.5, 3.6, 3.7, 3.8.</target>
        </trans-unit>
        <trans-unit id="2a8a7fb142c2c8f17fffa0dd9b96de37129ab2d2" translate="yes" xml:space="preserve">
          <source>Requirements and Assumptions</source>
          <target state="translated">요구 사항 및 가정</target>
        </trans-unit>
        <trans-unit id="a6e81bfa3563d560da306ff77e64066f556e0450" translate="yes" xml:space="preserve">
          <source>Run the tests: in the project root simply execute</source>
          <target state="translated">테스트 실행 : 프로젝트 루트에서 간단히 실행</target>
        </trans-unit>
        <trans-unit id="8078161824382b72c12536451b3e5cd3ba7cb9ba" translate="yes" xml:space="preserve">
          <source>Submit a pull request and check for any errors reported by the Continuous
Integration service.</source>
          <target state="translated">풀 요청을 제출하고 지속적 통합 서비스에서보고 된 오류를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0466a8ac88f693befdd3d6c8957aff675b326367" translate="yes" xml:space="preserve">
          <source>Summary of the project status:</source>
          <target state="translated">프로젝트 상태 요약 :</target>
        </trans-unit>
        <trans-unit id="75501ccb8cff4511877fba8fe1336b55f2c6b855" translate="yes" xml:space="preserve">
          <source>SunOS/Solaris (illumos/OpenIndiana)</source>
          <target state="translated">SunOS / Solaris (illumos / OpenIndiana)</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="8ebbd8af561b439716818ae100c35dd22b843479" translate="yes" xml:space="preserve">
          <source>The API of</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="6fe6803ab4eafb4c76dc4b0f12dc220365d6a11d" translate="yes" xml:space="preserve">
          <source>The MPL 2.0 License</source>
          <target state="translated">MPL 2.0 라이선스</target>
        </trans-unit>
        <trans-unit id="c2a3959441fc9a9475b752280bc9797815e6b64f" translate="yes" xml:space="preserve">
          <source>The code and tests in this project are based on the standard library&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/mmap.html&quot;&gt;mmap&lt;/a&gt;
module. Additional tests from the pypy project are also duplicated here which
helped to identify a few bugs. Most functionality is just inherited from the
current runtime. The rest is implemented in optimized Cython code.</source>
          <target state="translated">이 프로젝트의 코드와 테스트는 표준 라이브러리의 &lt;a href=&quot;https://docs.python.org/3/library/mmap.html&quot;&gt;mmap&lt;/a&gt; 모듈을 기반으로합니다 . pypy 프로젝트의 추가 테스트도 여기에 복제되어 몇 가지 버그를 식별하는 데 도움이됩니다. 대부분의 기능은 현재 런타임에서 상속됩니다. 나머지는 최적화 된 Cython 코드로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="536d074cf6f8a2cfd3b80809fcaddafdae2f1f84" translate="yes" xml:space="preserve">
          <source>The following operating systems receive limited testing, but should work:</source>
          <target state="translated">다음 운영 체제는 제한된 테스트를 받지만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f0e0c45295449982f6d5ac3f78a2c28df7339eba" translate="yes" xml:space="preserve">
          <source>The following requirements are supported and tested:</source>
          <target state="translated">다음 요구 사항이 지원되고 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="524b15dd24d9bb3185c940f4ddc9e4830f34a9f6" translate="yes" xml:space="preserve">
          <source>The mmap(2) system call</source>
          <target state="translated">mmap (2) 시스템 호출</target>
        </trans-unit>
        <trans-unit id="b3989fcbab158cd1cd2b1e27e658b1dcd437fd9f" translate="yes" xml:space="preserve">
          <source>This module is a reimplementation of Python&amp;rsquo;s builtin module mmap. It aims to
provide better performance while being API compatible with the builtin module.
Development tracks new Python versions, therefore this module is mostly usable
as a backport to older Python versions &amp;ndash; consult the documentation about any
changes to the mmap API in Python. You should be able to shadow the builtin
module and forget about it.</source>
          <target state="translated">이 모듈은 Python의 내장 모듈 mmap을 다시 구현 한 것입니다. 내장 모듈과 API 호환이되는 동시에 더 나은 성능을 제공하는 것을 목표로합니다. 개발은 새로운 Python 버전을 추적하므로이 모듈은 대부분 이전 Python 버전의 백 포트로 사용할 수 있습니다. Python의 mmap API 변경 사항에 대한 문서를 참조하세요. 내장 모듈을 섀도 잉하고 잊어 버릴 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e9481da3937daaf0f0d547dca291e96ef87e3ea9" translate="yes" xml:space="preserve">
          <source>To implement the searching functionality, fmmap makes use of functions in the C
library. The performance characteristics therefore are platform and version
dependent. Recent versions of glibc is known to be very good. Some
characteristics of your data can also influence performance. The performance of
fmmap should be better than the built-in mmap module in most cases.</source>
          <target state="translated">검색 기능을 구현하기 위해 fmmap은 C 라이브러리의 함수를 사용합니다. 따라서 성능 특성은 플랫폼 및 버전에 따라 다릅니다. glibc의 최신 버전은 매우 좋은 것으로 알려져 있습니다. 데이터의 일부 특성도 성능에 영향을 미칠 수 있습니다. fmmap의 성능은 대부분의 경우 내장 된 mmap 모듈보다 우수해야합니다.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">윈도우</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="ec6dc119abf4544dddd98e8c2740961bb4a7b8ec" translate="yes" xml:space="preserve">
          <source>constants are exposed.</source>
          <target state="translated">상수가 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="37959e9e95b803c51ea49d8542323af519aaf085" translate="yes" xml:space="preserve">
          <source>cythonize src/fmmap.pyx</source>
          <target state="translated">cythonize src / fmmap.pyx</target>
        </trans-unit>
        <trans-unit id="50a5ec9dfac6392d33b80d2a933061980440f9bf" translate="yes" xml:space="preserve">
          <source>find()</source>
          <target state="translated">찾기()</target>
        </trans-unit>
        <trans-unit id="403501eefc882c64f009f4c854129a92af05289d" translate="yes" xml:space="preserve">
          <source>flush()</source>
          <target state="translated">플러시()</target>
        </trans-unit>
        <trans-unit id="72fb1ae8f219ce0d358ad3af9d8a03d906ffa77e" translate="yes" xml:space="preserve">
          <source>functions in fmmap should be faster than the
version in the standard library. These two functions also release the global
interpreter lock (GIL) while searching, which might provide some benefit if
you have multi-threaded code.</source>
          <target state="translated">fmmap의 함수는 표준 라이브러리의 버전보다 빠릅니다. 이 두 함수는 검색하는 동안 GIL (Global Interpreter Lock)도 해제하므로 다중 스레드 코드가있는 경우 약간의 이점을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be8cd5949269ae898d935bdba6f4683a8387672a" translate="yes" xml:space="preserve">
          <source>git clone ...</source>
          <target state="translated">git clone ...</target>
        </trans-unit>
        <trans-unit id="0d83f2022d5d9b0706a84020621e9991852d9688" translate="yes" xml:space="preserve">
          <source>implementation and the header file &amp;lt;sys/mman.h&amp;gt;.</source>
          <target state="translated">구현 및 헤더 파일 &amp;lt;sys / mman.h&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="3f964cd2532eb70932d4c827c585d42afdb94542" translate="yes" xml:space="preserve">
          <source>is implemented and most of the</source>
          <target state="translated">구현되고 대부분의</target>
        </trans-unit>
        <trans-unit id="6afe33f16e4c7b6fa975dfa584221a7814cbc782" translate="yes" xml:space="preserve">
          <source>is often
sufficient).</source>
          <target state="translated">충분합니다).</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">맥 OS</target>
        </trans-unit>
        <trans-unit id="232d14ac34cc85687964449013a733a816de9096" translate="yes" xml:space="preserve">
          <source>madvise()</source>
          <target state="translated">madvise ()</target>
        </trans-unit>
        <trans-unit id="f1d2f20f838b74a4c4ff7d60cb0753e570605b7f" translate="yes" xml:space="preserve">
          <source>madvise(2)</source>
          <target state="translated">madvise (2)</target>
        </trans-unit>
        <trans-unit id="be5bdb476e16154f57ec85e9241f10c4fa50bf3d" translate="yes" xml:space="preserve">
          <source>mmap</source>
          <target state="translated">mmap</target>
        </trans-unit>
        <trans-unit id="c8bb769da2038cda6d96bcd2a75fc4ff21952be7" translate="yes" xml:space="preserve">
          <source>pip install --upgrade pytest tox</source>
          <target state="translated">pip 설치-pytest tox 업그레이드</target>
        </trans-unit>
        <trans-unit id="0d862ec4c48d8bf536d3ac6dd16c4790afb05d5a" translate="yes" xml:space="preserve">
          <source>pip install -e .</source>
          <target state="translated">pip install -e.</target>
        </trans-unit>
        <trans-unit id="0eaa389e1fdb3a1917c0f987514bd561be5718ee" translate="yes" xml:space="preserve">
          <source>pytest</source>
          <target state="translated">pytest</target>
        </trans-unit>
        <trans-unit id="4e86e5b4adc6a5a6ac211e403027169cdf27797c" translate="yes" xml:space="preserve">
          <source>rfind()</source>
          <target state="translated">rfind ()</target>
        </trans-unit>
        <trans-unit id="0ca5ea5953b1fdc09fe4410d100bd5443bd4f199" translate="yes" xml:space="preserve">
          <source>to test the full test matrix. Consider installing as many
supported interpreters as possible (having them in your</source>
          <target state="translated">전체 테스트 매트릭스를 테스트합니다. 지원되는 인터프리터를 가능한 한 많이 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7bdf31978c0210720b3420242d2f1d74927c098c" translate="yes" xml:space="preserve">
          <source>tox</source>
          <target state="translated">독극물</target>
        </trans-unit>
        <trans-unit id="e0cdb83639889532e585b8549bc22a19ac01d80d" translate="yes" xml:space="preserve">
          <source>works like Python &amp;gt; 3.7.</source>
          <target state="translated">Python&amp;gt; 3.7처럼 작동합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
