<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/ibmdbpy/">
    <body>
      <group id="ibmdbpy">
        <trans-unit id="9595bd9d6dadc2d2ddba3519d2b4528f59a1d236" translate="yes" xml:space="preserve">
          <source>A Pandas-like SQL-wrapper for in-database analytics with IBM Db2 Warehouse.</source>
          <target state="translated">IBM Db2 Warehouse를 사용한 데이터베이스 내 분석을위한 Pandas와 유사한 SQL 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="c8ae95e2a4e7613c064212af1be1fe1273abb8f0" translate="yes" xml:space="preserve">
          <source>A few sample data sets are included in ibmdbpy for you to experiment. We can firstly load the well-known IRIS table into this Db2 database.</source>
          <target state="translated">실험 할 수 있도록 몇 가지 샘플 데이터 세트가 ibmdbpy에 포함되어 있습니다. 먼저 잘 알려진 IRIS 테이블을이 Db2 데이터베이스에로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9f61a44894906a9ae9f232beef6435bfce0419e" translate="yes" xml:space="preserve">
          <source>A more detailed roadmap is available on Github, in the</source>
          <target state="translated">더 자세한 로드맵은 Github의</target>
        </trans-unit>
        <trans-unit id="c4676681c9e5885470c47670bee4677788dba1dd" translate="yes" xml:space="preserve">
          <source>Accelerating Python Analytics by In-Database Processing</source>
          <target state="translated">In-Database 처리로 Python 분석 가속화</target>
        </trans-unit>
        <trans-unit id="d7489296e45e62b90e0952c757235ac3b8c9fbbf" translate="yes" xml:space="preserve">
          <source>Add more functions and improve what already exists</source>
          <target state="translated">더 많은 기능을 추가하고 이미 존재하는 것을 개선하십시오</target>
        </trans-unit>
        <trans-unit id="4eca9f13fa681e7408b19c916b3e6a11c8ba9385" translate="yes" xml:space="preserve">
          <source>Add wrappers for several ML-Algorithms (Linear regression, Sequential patterns&amp;hellip;)</source>
          <target state="translated">여러 ML 알고리즘에 대한 래퍼 추가 (선형 회귀, 순차 패턴&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="ab37488cd210bec23485c1e425448b2e197db3b5" translate="yes" xml:space="preserve">
          <source>Assuming that all ODBC connection parameters are correctly set, issue the following statements to connect to a database (in this case, a Db2 database named BLUDB) via ODBC:</source>
          <target state="translated">모든 ODBC 연결 매개 변수가 올바르게 설정되었다고 가정하고 다음 명령문을 실행하여 ODBC를 통해 데이터베이스 (이 경우 BLUDB라는 Db2 데이터베이스)에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="79da6dd267a1af7c49de528a0958693f9d1cc7f9" translate="yes" xml:space="preserve">
          <source>Avipsa Roy (geospatial extension)</source>
          <target state="translated">Avipsa Roy (지리 공간 확장)</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">기여자</target>
        </trans-unit>
        <trans-unit id="53274ddc6816e9168a41a5ba0319121b830188a6" translate="yes" xml:space="preserve">
          <source>Craig Blaha (documentation)</source>
          <target state="translated">Craig Blaha (문서)</target>
        </trans-unit>
        <trans-unit id="b8f43cb5b8831bfea0a762aa5645eeb66493b00b" translate="yes" xml:space="preserve">
          <source>Edouard Fouch&amp;eacute; (core)</source>
          <target state="translated">Edouard Fouch&amp;eacute; (코어)</target>
        </trans-unit>
        <trans-unit id="39a860ec2e7ba65e8fe8de7be96bedff7714060e" translate="yes" xml:space="preserve">
          <source>Et voil&amp;agrave; !</source>
          <target state="translated">Et voil&amp;agrave;!</target>
        </trans-unit>
        <trans-unit id="715d6865751ba9bda8dd0f407d4e440cd697eb0a" translate="yes" xml:space="preserve">
          <source>Eva Feillet (core, geospatial extension, documentation)</source>
          <target state="translated">Eva Feillet (핵심, 지리 공간 확장, 문서)</target>
        </trans-unit>
        <trans-unit id="1e2bfc0d574ebb3c0866208d70d9a4defc9229e8" translate="yes" xml:space="preserve">
          <source>Feature Selection</source>
          <target state="translated">기능 선택</target>
        </trans-unit>
        <trans-unit id="66131ffb4d284b6d4e38da3ad143ee53b0e4c901" translate="yes" xml:space="preserve">
          <source>Full test coverage (a basic coverage is already provided)</source>
          <target state="translated">전체 테스트 범위 (기본 범위는 이미 제공됨)</target>
        </trans-unit>
        <trans-unit id="4cf3e293068617d183148bc7815b586c691d1c50" translate="yes" xml:space="preserve">
          <source>How ibmdbpy works</source>
          <target state="translated">ibmdbpy의 작동 원리</target>
        </trans-unit>
        <trans-unit id="91a2f768088a321921cfe914f09b51c436e8d7f0" translate="yes" xml:space="preserve">
          <source>How the geospatial functions work</source>
          <target state="translated">지리 공간 함수의 작동 방식</target>
        </trans-unit>
        <trans-unit id="407a2341028c18119bf47ef501bda9e3bc71a44a" translate="yes" xml:space="preserve">
          <source>How to contribute</source>
          <target state="translated">기여하는 방법</target>
        </trans-unit>
        <trans-unit id="52c3c814dafd8e9352ef8d651003b7f1194ae204" translate="yes" xml:space="preserve">
          <source>IBM Db2 is a database management system. The ibmdbpy project can be used by Python developers with very little additional knowledge, because it copies the well-known interface of the Pandas library for data manipulation and the Scikit-learn library for the use of machine learning algorithms.</source>
          <target state="translated">IBM Db2는 데이터베이스 관리 시스템입니다. ibmdbpy 프로젝트는 데이터 조작을위한 Pandas 라이브러리와 기계 학습 알고리즘 사용을위한 Scikit-learn 라이브러리의 잘 알려진 인터페이스를 복사하기 때문에 추가 지식이 거의없는 Python 개발자가 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56afd812f0100877e160ac2dc743312e5be77056" translate="yes" xml:space="preserve">
          <source>Ibmdbpy provides a range of functions to support efficient in-database feature selection, e.g. to estimate the relevance of attributes with respect to a particular target. Functions and documentation can be found in the submodule</source>
          <target state="translated">Ibmdbpy는 효율적인 데이터베이스 내 기능 선택을 지원하는 다양한 기능을 제공합니다 (예 : 특정 대상에 대한 속성의 관련성을 추정). 기능 및 문서는 하위 모듈에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36b6482dd26073ef5da62027036a2a30cf724577" translate="yes" xml:space="preserve">
          <source>If you are a member of the ibmdbanalytics group, you can create branchs and merge them to master. Otherwise, you can fork the project and do a pull request. You are very welcome to contribute to the code and to the documentation.</source>
          <target state="translated">ibmdbanalytics 그룹의 구성원 인 경우 분기를 작성하고 마스터에 병합 할 수 있습니다. 그렇지 않으면 프로젝트를 포크하고 풀 요청을 수행 할 수 있습니다. 코드와 문서에 기여하는 것을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="3cb0afc721e0866ed6111fd7039a57e4f6e7e249" translate="yes" xml:space="preserve">
          <source>In the background, ibmdbpy looks for numerical columns in the table and builds an SQL request that returns the correlation between each pair of columns. Here is the SQL request that was executed for this example:</source>
          <target state="translated">백그라운드에서 ibmdbpy는 테이블에서 숫자 열을 찾고 각 열 쌍 간의 상관 관계를 반환하는 SQL 요청을 빌드합니다. 이 예에서 실행 된 SQL 요청은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5f91bb3b05543fd44739c40a0dde7a2ce9e87b6b" translate="yes" xml:space="preserve">
          <source>In the background, ibmdbpy looks for the column defined as &lt;strong&gt;geometry&lt;/strong&gt; in the table and builds an SQL request that returns the area of each ST_MULTIPOLYGON object (a multipolygon is a collection of polygons).
Here is the SQL request that was executed for this example:</source>
          <target state="translated">백그라운드에서 ibmdbpy는 테이블에서 &lt;strong&gt;기하학&lt;/strong&gt; 으로 정의 된 열을 찾고 각 ST_MULTIPOLYGON 오브젝트의 영역을 리턴하는 SQL 요청을 빌드합니다 (다중 다각형은 다각형 모음입니다). 이 예에서 실행 된 SQL 요청은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06fc890d73f5303d61e38339be6e01d75873c3c4" translate="yes" xml:space="preserve">
          <source>Michael Wurst (core)</source>
          <target state="translated">Michael Wurst (핵심)</target>
        </trans-unit>
        <trans-unit id="0139e3498911eda6527df96e4ec57cd4ef1b4f2e" translate="yes" xml:space="preserve">
          <source>Next, we can create an IDA data frame (IDA stands for in-database Analytics) that points to the table we just uploaded. Let&amp;rsquo;s use this one:</source>
          <target state="translated">다음으로 방금 업로드 한 테이블을 가리키는 IDA 데이터 프레임 (IDA는 In-DB Analytics의 약자)을 만들 수 있습니다. 이것을 사용합시다 :</target>
        </trans-unit>
        <trans-unit id="9b3e833ac4c94506c8a79c6b32a3f8b7da9bd88b" translate="yes" xml:space="preserve">
          <source>Nicole Schoen (core)</source>
          <target state="translated">Nicole Schoen (핵심)</target>
        </trans-unit>
        <trans-unit id="f099176e41bf1db03dae3424d37788676254f3f6" translate="yes" xml:space="preserve">
          <source>Note that to create an IDA data frame using the IdaDataFrame object, we need to specify our previously opened IdaDataBase object, because it holds the connection.</source>
          <target state="translated">IdaDataFrame 개체를 사용하여 IDA 데이터 프레임을 만들려면 연결을 유지하기 때문에 이전에 열린 IdaDataBase 개체를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="9729a229e99064ddd7f6c82c7812d74ffd1a7dcb" translate="yes" xml:space="preserve">
          <source>Note that to create an IdaGeoDataframe using the IdaDataFrame object, we need to specify our previously opened IdaDataBase object, because it holds the connection.</source>
          <target state="translated">IdaDataFrame 개체를 사용하여 IdaGeoDataframe을 만들려면 연결을 유지하기 때문에 이전에 연 IdaDataBase 개체를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="38729b3a0a266dcdda680ca8e8d697354d871bde" translate="yes" xml:space="preserve">
          <source>Now let us compute the area of the counties in the GEO_COUNTY table. The result of the area will be stored as a new column &amp;lsquo;area&amp;rsquo; in the IdaGeoDataFrame:</source>
          <target state="translated">이제 GEO_COUNTY 테이블에서 카운티의 면적을 계산해 보겠습니다. 영역의 결과는 IdaGeoDataFrame에 새 열 'area'로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="eabe7bce51b6c96f0b7323fdcacd72247dc6fa62" translate="yes" xml:space="preserve">
          <source>Now let us compute the correlation matrix:</source>
          <target state="translated">이제 상관 행렬을 계산해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="c7e0729ac4f2f8f68be5d7f509ba0772b52f9120" translate="yes" xml:space="preserve">
          <source>Project Roadmap</source>
          <target state="translated">프로젝트 로드맵</target>
        </trans-unit>
        <trans-unit id="4c29dbf9b35d69cc32ca294e6562b7b424e6bbc2" translate="yes" xml:space="preserve">
          <source>ROADMAP.txt</source>
          <target state="translated">ROADMAP.txt</target>
        </trans-unit>
        <trans-unit id="125d184be9e6977845c21c9495db6a97a0a8480d" translate="yes" xml:space="preserve">
          <source>Rafael Rodriguez Morales (geospatial extension, core)</source>
          <target state="translated">Rafael Rodriguez Morales (지리 공간 확장, 코어)</target>
        </trans-unit>
        <trans-unit id="82b8713f1d9f4393aa66500fda3cc306f7a29606" translate="yes" xml:space="preserve">
          <source>The following scenario illustrates how ibmdbpy works.</source>
          <target state="translated">다음 시나리오는 ibmdbpy의 작동 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="46fa8faf402c0e4193dbdd749f4c5fa7fceb8651" translate="yes" xml:space="preserve">
          <source>The following scenario illustrates how spatial functions work by creating an IDA geospatial data frame that points to a sample table in Db2:</source>
          <target state="translated">다음 시나리오는 Db2의 샘플 테이블을 가리키는 IDA 지리 공간 데이터 프레임을 작성하여 공간 함수가 작동하는 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d064c24e4df4d708201d9ffcc00b898949f24c04" translate="yes" xml:space="preserve">
          <source>The ibmdbpy package provides a Python interface to the in-database geospatial functions of IBM Db2 Spatial Extender (db2gse). It identifies the geometry column for spatial tables and lets you perform spatial queries based upon this column. The results are fetched and formatted into the corresponding data structure, for example, an IdaGeoDataframe.</source>
          <target state="translated">ibmdbpy 패키지는 IBM Db2 Spatial Extender (db2gse)의 데이터베이스 내 지리 공간 기능에 대한 Python 인터페이스를 제공합니다. 공간 테이블의 기하학 열을 식별하고이 열을 기반으로 공간 쿼리를 수행 할 수 있습니다. 결과는 해당 데이터 구조 (예 : IdaGeoDataframe)로 가져 와서 형식이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="efb66699f9844ce4046a473c9f211f5460c2bf1c" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project is compatible with Python releases 2.7 up to 3.6 and can be connected to Db2 databases via ODBC or JDBC.</source>
          <target state="translated">ibmdbpy 프로젝트는 Python 릴리스 2.7 ~ 3.6과 호환되며 ODBC 또는 JDBC를 통해 Db2 데이터베이스에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22a7c215290aea6d778ea12717e38c34a879eb98" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project provides a Python interface for data manipulation and access to in-database algorithms in IBM Db2. It accelerates Python analytics by seamlessly pushing operations written in Python into the underlying database for execution, thereby benefitting from in-database performance-enhancing features, such as columnar storage and parallel processing.</source>
          <target state="translated">ibmdbpy 프로젝트는 IBM Db2의 데이터베이스 내 알고리즘에 대한 데이터 조작 및 액세스를위한 Python 인터페이스를 제공합니다. Python으로 작성된 작업을 실행을 위해 기본 데이터베이스로 원활하게 푸시함으로써 Python 분석을 가속화하므로 컬럼 형 스토리지 및 병렬 처리와 같은 데이터베이스 내 성능 향상 기능의 이점을 누릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97700c64a496f6a372f997ec7617b9b25bdffbba" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project translates Pandas-like syntax into SQL and uses a middleware API (pypyodbc/JayDeBeApi) to send it to an ODBC or JDBC-connected database for execution. After fetching the results, printing them will look similar to printing a pandas.DataFrame or a pandas.Series. Ibmdbpy essential abstractions are IdaDataFrames, similar to Pandas.DataFrames, and IdaSeries, similar to Pandas.Series.Ibmdbpy also provides you with tools dedicated to geospatial data: you will use IdaGeoDataFrames which can be compared to the GeoDataFrames from GeoPandas, the geospatial extension of Pandas.</source>
          <target state="translated">ibmdbpy 프로젝트는 Pandas와 유사한 구문을 SQL로 변환하고 미들웨어 API (pypyodbc / JayDeBeApi)를 사용하여 실행을 위해 ODBC 또는 JDBC 연결 데이터베이스로 보냅니다. 결과를 가져온 후 인쇄하면 pandas.DataFrame 또는 pandas.Series를 인쇄하는 것과 비슷합니다. Ibmdbpy 필수 추상화는 Pandas.DataFrames와 유사한 IdaDataFrames 및 Pandas.Series와 유사한 IdaSeries입니다 .Ibmdbpy는 또한 지리 공간 데이터 전용 도구를 제공합니다. 판다.</target>
        </trans-unit>
        <trans-unit id="eab32dcf40b426cf256d20020c6ca242ee001f42" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project was initiated in April 2015 at IBM Deutschland Reasearch &amp;amp; Development, B&amp;ouml;blingen.
Here is the list of the persons who contributed to the project, in the chronological order of their contribution:</source>
          <target state="translated">ibmdbpy 프로젝트는 2015 년 4 월 IBM Deutschland Reasearch &amp;amp; Development, B&amp;ouml;blingen에서 시작되었습니다. 다음은 프로젝트에 기여한 사람의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ad23c9db1abd65151ceea214af4201c956b5c99d" translate="yes" xml:space="preserve">
          <source>The latest version of ibmdbpy is available on the &lt;a href=&quot;https://pypi.python.org/pypi/ibmdbpy&quot;&gt;Python Package Index&lt;/a&gt; and &lt;a href=&quot;https://github.com/ibmdbanalytics/ibmdbpy&quot;&gt;Github&lt;/a&gt;.</source>
          <target state="translated">최신 버전의 ibmdbpy는 &lt;a href=&quot;https://pypi.python.org/pypi/ibmdbpy&quot;&gt;Python 패키지 색인&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/ibmdbanalytics/ibmdbpy&quot;&gt;Github&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c01d763fb2bb42be93332b5b006b178185fdacf" translate="yes" xml:space="preserve">
          <source>The project is still at an early stage and many of its features are still in development. However, several experiments have already demonstrated that it provides significant performance advantages when operating on medium or large amounts of data, that is, on tables of 1 million rows or more.</source>
          <target state="translated">이 프로젝트는 아직 초기 단계에 있으며 많은 기능이 아직 개발 중입니다. 그러나 여러 실험에서 이미 중간 또는 많은 양의 데이터, 즉 1 백만 행 이상의 테이블에서 작업 할 때 상당한 성능 이점을 제공한다는 사실이 입증되었습니다.</target>
        </trans-unit>
        <trans-unit id="56c73fd133bbac3454bd1177d4dbf95d90a20549" translate="yes" xml:space="preserve">
          <source>The result fetched by ibmdbpy is a tuple containing all values of the matrix. This tuple is formatted back into a Pandas.DataFrame and then returned:</source>
          <target state="translated">ibmdbpy에서 가져온 결과는 행렬의 모든 값을 포함하는 튜플입니다. 이 튜플은 다시 Pandas.DataFrame으로 포맷 된 후 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9fd31dd7bec0b91101c3db1a61e9c8b126f875a4" translate="yes" xml:space="preserve">
          <source>There are many ways to contribute. If you find bugs and have improvement ideas or need some new specific features, please open a ticket! We do care about it.</source>
          <target state="translated">기여하는 방법에는 여러 가지가 있습니다. 버그를 발견하고 개선 아이디어가 있거나 새로운 특정 기능이 필요하면 티켓을여십시오! 우리는 그것에 대해 관심이 있습니다.</target>
        </trans-unit>
        <trans-unit id="812bcc2e2b4e742ce3885244c72e77b382a23735" translate="yes" xml:space="preserve">
          <source>Toni Bollinger (core)</source>
          <target state="translated">Toni Bollinger (코어)</target>
        </trans-unit>
        <trans-unit id="9986b5ce0489055c6c4caec728a8bd643f12f871" translate="yes" xml:space="preserve">
          <source>William Moore (documentation)</source>
          <target state="translated">William Moore (문서)</target>
        </trans-unit>
        <trans-unit id="6cf14d59304d33400f8c8f44f06697e469654e43" translate="yes" xml:space="preserve">
          <source>You want to contribute? That&amp;rsquo;s great! There are many things you can do.</source>
          <target state="translated">기여하고 싶습니까? 훌륭합니다! 할 수있는 일이 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">파일</target>
        </trans-unit>
        <trans-unit id="a9574b7b2cb02ba5a93dc214f1aadfbe4fc4415f" translate="yes" xml:space="preserve">
          <source>ibmdbpy.feature_selection</source>
          <target state="translated">ibmdbpy.feature_selection</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
