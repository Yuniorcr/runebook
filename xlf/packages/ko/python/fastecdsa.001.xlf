<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fastecdsa/">
    <body>
      <group id="fastecdsa">
        <trans-unit id="1abbbd166a07f43a17fcd532d5c2bc2bd25d2fe0" translate="yes" xml:space="preserve">
          <source>11m39.53s</source>
          <target state="translated">11 분 39.53 초</target>
        </trans-unit>
        <trans-unit id="2498420c9ad919074b497f3192fbf0b51f8cf8f8" translate="yes" xml:space="preserve">
          <source>12.11s</source>
          <target state="translated">12.11 초</target>
        </trans-unit>
        <trans-unit id="7e24de468378a50393aa8d0760dbafe41cfa3f1e" translate="yes" xml:space="preserve">
          <source>1m35.49s</source>
          <target state="translated">1 : 35.49</target>
        </trans-unit>
        <trans-unit id="5e9e2ea3e72483ba6798b4cede6025e58a9079ff" translate="yes" xml:space="preserve">
          <source>22.21s</source>
          <target state="translated">22.21 초</target>
        </trans-unit>
        <trans-unit id="595362244536ad838a378a22264ea919edffe339" translate="yes" xml:space="preserve">
          <source>2m13.42s</source>
          <target state="translated">2 : 13.42s</target>
        </trans-unit>
        <trans-unit id="3a7f59bab13f4f754a1e8dffe83c3c8b863f057b" translate="yes" xml:space="preserve">
          <source>2m52.43s</source>
          <target state="translated">2 : 52.43s</target>
        </trans-unit>
        <trans-unit id="061de031685e5e1a0c7318657e57e17cadfcb9c7" translate="yes" xml:space="preserve">
          <source>2m57.19s</source>
          <target state="translated">2 : 57.19s</target>
        </trans-unit>
        <trans-unit id="bcf924c9980c0a6d726a2a183653e839791fc597" translate="yes" xml:space="preserve">
          <source>3.62s</source>
          <target state="translated">3.62 초</target>
        </trans-unit>
        <trans-unit id="ee62fb1647c1d78ce7d60df838ee8d451ed50ca0" translate="yes" xml:space="preserve">
          <source>4.50s</source>
          <target state="translated">4.50 초</target>
        </trans-unit>
        <trans-unit id="9afe45d1d811eb5dd931a43536c951add1ea3a2c" translate="yes" xml:space="preserve">
          <source>5.92s</source>
          <target state="translated">5.92 초</target>
        </trans-unit>
        <trans-unit id="79738666e304fdc7752d1ba15634e80b7ac8b667" translate="yes" xml:space="preserve">
          <source>6.15s</source>
          <target state="translated">6.15 초</target>
        </trans-unit>
        <trans-unit id="7c584cd59a19170dcab8a53a95c5e7e2aaa7c964" translate="yes" xml:space="preserve">
          <source>6m21.01s</source>
          <target state="translated">6 : 21.01</target>
        </trans-unit>
        <trans-unit id="8af203e7cc940624fdfa3d913f75632da6ac6b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecdsa&lt;/code&gt; time</source>
          <target state="translated">&lt;code&gt;ecdsa&lt;/code&gt; 시간</target>
        </trans-unit>
        <trans-unit id="4b791a98c29aec71399bf390b8b57ec07f5c0265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fastecdsa&lt;/code&gt; time</source>
          <target state="translated">&lt;code&gt;fastecdsa&lt;/code&gt; 시간</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">약</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">감사의 말</target>
        </trans-unit>
        <trans-unit id="c488cad885b7f6a854dca0dc9cc79d9a9dd54bff" translate="yes" xml:space="preserve">
          <source>Any hash function in the &lt;code&gt;hashlib&lt;/code&gt; module (&lt;code&gt;md5, sha1, sha224, sha256, sha384, sha512&lt;/code&gt;)
will work, as will any hash function that implements the same interface / core functionality as the
those in &lt;code&gt;hashlib&lt;/code&gt;. For instance, if you wish to use SHA3 as the hash function the
&lt;code&gt;pysha3&lt;/code&gt; package will work with this library as long as it is at version &amp;gt;=1.0b1 (as previous
versions didn&amp;rsquo;t work with the &lt;code&gt;hmac&lt;/code&gt; module which is used in nonce generation). Note
that &lt;code&gt;sha3_224, sha3_256, sha3_384, sha3_512&lt;/code&gt; are all in &lt;code&gt;hashlib&lt;/code&gt; as of python3.6.</source>
          <target state="translated">어떠한 해시 함수 &lt;code&gt;hashlib&lt;/code&gt; 의 (모듈 &lt;code&gt;md5, sha1, sha224, sha256, sha384, sha512&lt;/code&gt; ) 일 것 같은 것 어떤 해시 기능이 구현에서와 동일한 인터페이스 / 핵심 기능 &lt;code&gt;hashlib&lt;/code&gt; . 예를 들어 SHA3를 해시 함수로 사용하려는 경우 &lt;code&gt;pysha3&lt;/code&gt; 패키지는 버전&amp;gt; = 1.0b1 인 한이 라이브러리에서 작동합니다 (이전 버전은 nonce 생성에 사용되는 &lt;code&gt;hmac&lt;/code&gt; 모듈에서 작동하지 않았으므로 ). 참고 &lt;code&gt;sha3_224, sha3_256, sha3_384, sha3_512&lt;/code&gt; 에 모두 &lt;code&gt;hashlib&lt;/code&gt; python3.6를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9791b58b72f0abe543c98926d7545ffb2a57a518" translate="yes" xml:space="preserve">
          <source>Arbitrary Curves</source>
          <target state="translated">임의 곡선</target>
        </trans-unit>
        <trans-unit id="f82a56254ae98c550b265077108cc027c348f8bf" translate="yes" xml:space="preserve">
          <source>Arbitrary Elliptic Curve Arithmetic</source>
          <target state="translated">임의 타원 곡선 산술</target>
        </trans-unit>
        <trans-unit id="c3d65d3d3712e3c127a7b6ca4b4ea698bec097be" translate="yes" xml:space="preserve">
          <source>As of version 1.5.1 construction of arbitrary curves in Weierstrass form
(&lt;code&gt;y^2 = x^3 + ax + b (mod p)&lt;/code&gt;) is supported. I advise against using custom curves for any
security critical applications. It&amp;rsquo;s up to you to make sure that the parameters you pass here are
correct, no validation of the base point is done, and in general no sanity checks are done. Use
at your own risk.</source>
          <target state="translated">버전 1.5.1부터 Weierstrass 형식 ( &lt;code&gt;y^2 = x^3 + ax + b (mod p)&lt;/code&gt; ) 의 임의 곡선 구성 이 지원됩니다. 보안에 중요한 응용 프로그램에 대해 사용자 지정 곡선을 사용하지 않는 것이 좋습니다. 여기에서 전달하는 매개 변수가 올바른지, 기준점의 유효성 검사가 수행되지 않았는지, 일반적으로 온 전성 검사가 수행되지 않았는지 확인하는 것은 사용자의 몫입니다. 자신의 책임하에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="22166bd15c9ddba16d29e0da734874e4a72378bc" translate="yes" xml:space="preserve">
          <source>BSI</source>
          <target state="translated">BSI</target>
        </trans-unit>
        <trans-unit id="6f3b2ca2746598a5c0c336c60d7f1e5542f3b64a" translate="yes" xml:space="preserve">
          <source>Benchmarking</source>
          <target state="translated">벤치마킹</target>
        </trans-unit>
        <trans-unit id="47a22f238697e2421192f6fd97f8b4f809a2fed1" translate="yes" xml:space="preserve">
          <source>Certicom</source>
          <target state="translated">Certicom</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">수업</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">내용</target>
        </trans-unit>
        <trans-unit id="21e77e8c6244a97357d1f4d310170c134535ac4f" translate="yes" xml:space="preserve">
          <source>Current Issues</source>
          <target state="translated">현재 이슈</target>
        </trans-unit>
        <trans-unit id="12c5d44822ce8578763628268f606f8d0fb0f649" translate="yes" xml:space="preserve">
          <source>Currently it does elliptic curve arithmetic significantly faster than the &lt;code&gt;ecdsa&lt;/code&gt;
package. You can see the times for 1,000 signature and verification operations over
various curves below. These were run on an early 2014 MacBook Air with a 1.4 GHz Intel
Core i5.</source>
          <target state="translated">현재 &lt;code&gt;ecdsa&lt;/code&gt; 패키지 보다 훨씬 빠르게 타원 곡선 연산을 수행 합니다. 아래의 다양한 곡선에서 1,000 회 서명 및 확인 작업에 대한 시간을 볼 수 있습니다. 이는 1.4GHz Intel Core i5가 장착 된 2014 년 초 MacBook Air에서 실행되었습니다.</target>
        </trans-unit>
        <trans-unit id="916f09aff8581def400950df77b1473df959cb52" translate="yes" xml:space="preserve">
          <source>Curve</source>
          <target state="translated">곡선</target>
        </trans-unit>
        <trans-unit id="1f709e41fbe841f662313d40d0fed9d0261ba3ae" translate="yes" xml:space="preserve">
          <source>Curves over Prime Fields</source>
          <target state="translated">프라임 필드 위의 곡선</target>
        </trans-unit>
        <trans-unit id="f02bd8f09b76d0b9f6acbdc03613caf6fc893a60" translate="yes" xml:space="preserve">
          <source>DER encoding of ECDSA signatures as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2459&quot;&gt;RFC2459&lt;/a&gt; is also supported. The
&lt;code&gt;fastecdsa.encoding.der&lt;/code&gt; provides the &lt;code&gt;DEREncoder&lt;/code&gt; class which encodes signatures:</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2459&quot;&gt;RFC2459에&lt;/a&gt; 정의 된 ECDSA 서명의 DER 인코딩 도 지원됩니다. &lt;code&gt;fastecdsa.encoding.der&lt;/code&gt; 는 제공 &lt;code&gt;DEREncoder&lt;/code&gt; 의 서명을 인코딩 클래스를 :</target>
        </trans-unit>
        <trans-unit id="5e872fac267b9b7da33ad6b7ac9040dea12546ef" translate="yes" xml:space="preserve">
          <source>Encoding Signatures</source>
          <target state="translated">서명 인코딩</target>
        </trans-unit>
        <trans-unit id="008ec2c197d2d0553db0073402a5f1fc80d5dffa" translate="yes" xml:space="preserve">
          <source>Fast elliptic curve digital signatures</source>
          <target state="translated">빠른 타원 곡선 디지털 서명</target>
        </trans-unit>
        <trans-unit id="c6ce968783b8e6c124bf886fa2a77b21bf538586" translate="yes" xml:space="preserve">
          <source>Generating Keys</source>
          <target state="translated">키 생성</target>
        </trans-unit>
        <trans-unit id="fb017d04335c5958f6953095940e64dfeaf241a6" translate="yes" xml:space="preserve">
          <source>Hash Functions</source>
          <target state="translated">해시 함수</target>
        </trans-unit>
        <trans-unit id="23d81a63d6402319dd695c301e0dbbea9cb2696a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to benchmark performance on your machine you can do so using the command:</source>
          <target state="translated">컴퓨터의 성능을 벤치마킹하려면 다음 명령을 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="ada959c6e080dacc28186bfbe8166136f6ce5b6f" translate="yes" xml:space="preserve">
          <source>Importing and Exporting Keys</source>
          <target state="translated">키 가져 오기 및 내보내기</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">설치 중</target>
        </trans-unit>
        <trans-unit id="322d2720fa9e376bee26165f4018f8ab1701594d" translate="yes" xml:space="preserve">
          <source>JJChiDguez</source>
          <target state="translated">JJChiDguez</target>
        </trans-unit>
        <trans-unit id="7cd5c5a2fed542419e00e6da7e8e69f40673755e" translate="yes" xml:space="preserve">
          <source>Keys stored in this format can also be imported. The import function will figure out if the key
is a public or private key and parse it accordingly:</source>
          <target state="translated">이 형식으로 저장된 키도 가져올 수 있습니다. 가져 오기 기능은 키가 공개 키인지 개인 키인지 파악하고 그에 따라 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="2f2a6c39fc947b6d8b3b1b1f04e5ea279529e076" translate="yes" xml:space="preserve">
          <source>Minerva - see issue #40</source>
          <target state="translated">Minerva-문제 # 40 참조</target>
        </trans-unit>
        <trans-unit id="ef74421f91874ba0262403abf7025f0015bc41d9" translate="yes" xml:space="preserve">
          <source>NIST / NSA</source>
          <target state="translated">NIST / NSA</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>
        </trans-unit>
        <trans-unit id="eba9fa003bcddbad1befe2585dbae1a251ced88c" translate="yes" xml:space="preserve">
          <source>NotStatilko</source>
          <target state="translated">NotStatilko</target>
        </trans-unit>
        <trans-unit id="3b8792738ef3118cd8433aa360ce1c14ecb83cef" translate="yes" xml:space="preserve">
          <source>Operating Systems Supported</source>
          <target state="translated">지원되는 운영 체제</target>
        </trans-unit>
        <trans-unit id="fcbe1dfb34bac7de50ec5ac825a0e1dcf4bffd31" translate="yes" xml:space="preserve">
          <source>Other encoding formats can also be specified, such as &lt;a href=&quot;http://www.secg.org/sec1-v2.pdf&quot;&gt;SEC1&lt;/a&gt; for public keys. This is done using
classes found in the &lt;code&gt;fastecdsa.encoding&lt;/code&gt; package, and passing them as keyword args to
the key functions:</source>
          <target state="translated">공개 키의 경우 &lt;a href=&quot;http://www.secg.org/sec1-v2.pdf&quot;&gt;SEC1&lt;/a&gt; 과 같은 다른 인코딩 형식도 지정할 수 있습니다 . 이는 &lt;code&gt;fastecdsa.encoding&lt;/code&gt; 패키지 에있는 클래스를 사용하여 수행 되며 키워드 인수로 키 함수에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="000b2cd3378d4ebdf9097d68413920239fef266c" translate="yes" xml:space="preserve">
          <source>P192</source>
          <target state="translated">P192</target>
        </trans-unit>
        <trans-unit id="2c9cb1cf67a9ca70851152c20c8d5f4e88e99333" translate="yes" xml:space="preserve">
          <source>P192 / secp192r1</source>
          <target state="translated">P192 / secp192r1</target>
        </trans-unit>
        <trans-unit id="62036612004ab2531c22854abe6ea0821d8bb313" translate="yes" xml:space="preserve">
          <source>P224</source>
          <target state="translated">P224</target>
        </trans-unit>
        <trans-unit id="c07acb2b8ea2e0dcf1bda91dae5b6a97aac09583" translate="yes" xml:space="preserve">
          <source>P224 / secp224r1</source>
          <target state="translated">P224 / secp224r1</target>
        </trans-unit>
        <trans-unit id="8d3399e56d712faf2aedfe0cbfa8745b17c89264" translate="yes" xml:space="preserve">
          <source>P256</source>
          <target state="translated">P256</target>
        </trans-unit>
        <trans-unit id="afe1e4fdf41ca16e56d89b5610cc5fb3c60a534a" translate="yes" xml:space="preserve">
          <source>P256 / secp256r1</source>
          <target state="translated">P256 / secp256r1</target>
        </trans-unit>
        <trans-unit id="580d00a9ea1cc7e74e58f50142b9fa253162acfc" translate="yes" xml:space="preserve">
          <source>P384</source>
          <target state="translated">P384</target>
        </trans-unit>
        <trans-unit id="996b25af87a3f445ee2b9591a0c853db62f424fc" translate="yes" xml:space="preserve">
          <source>P384 / secp384r1</source>
          <target state="translated">P384 / secp384r1</target>
        </trans-unit>
        <trans-unit id="a3966ff5e26423d950b645ddae6d3980024b80b8" translate="yes" xml:space="preserve">
          <source>P521</source>
          <target state="translated">P521</target>
        </trans-unit>
        <trans-unit id="d65b41ee7fc8a8468ee4960513e19452fd293c81" translate="yes" xml:space="preserve">
          <source>P521 / secp521r1</source>
          <target state="translated">P521 / secp521r1</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">공연</target>
        </trans-unit>
        <trans-unit id="6bfc9e54394ee5ad616e5594e6f89764460a2ab5" translate="yes" xml:space="preserve">
          <source>Proposed By</source>
          <target state="translated">에 의해 제안</target>
        </trans-unit>
        <trans-unit id="46b979d680604e279296cb0e44e0abb5d8dc4ce6" translate="yes" xml:space="preserve">
          <source>Python Versions Supported</source>
          <target state="translated">지원되는 Python 버전</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">보안</target>
        </trans-unit>
        <trans-unit id="a9d804662ae2fb4c77f29644a69abf4a2d58db97" translate="yes" xml:space="preserve">
          <source>Signing and Verifying</source>
          <target state="translated">서명 및 확인</target>
        </trans-unit>
        <trans-unit id="3009d02dd084f53e3f351d9d8eecc22e21edbe76" translate="yes" xml:space="preserve">
          <source>Some basic usage is shown below:</source>
          <target state="translated">몇 가지 기본적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec00edb305f5467efc568d8d173f3496354073f1" translate="yes" xml:space="preserve">
          <source>Speedup</source>
          <target state="translated">속력을 올리다</target>
        </trans-unit>
        <trans-unit id="be2390e4944b5098bb718fb20c29054a8d3db493" translate="yes" xml:space="preserve">
          <source>Supported Primitives</source>
          <target state="translated">지원되는 프리미티브</target>
        </trans-unit>
        <trans-unit id="336f589105816b7021931e266354620f911b8e52" translate="yes" xml:space="preserve">
          <source>Thanks to those below for contributing improvements:</source>
          <target state="translated">개선에 기여해 주신 아래 분들께 감사드립니다.</target>
        </trans-unit>
        <trans-unit id="cb228bbb46e8ecc79d0a8fed6085a3e9babef772" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point&lt;/code&gt; class allows arbitrary arithmetic to be performed over curves. The two main
operations are point addition and point multiplication (by a scalar) which can be done via the
standard python operators (&lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; respectively):</source>
          <target state="translated">&lt;code&gt;Point&lt;/code&gt; 클래스는 임의의 연산이 곡선을 통해 수행 될 수있다. 두 가지 주요 연산은 점 덧셈과 점 곱셈 (스칼라에 의한)이며 표준 파이썬 연산자 ( 각각 &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;*&lt;/code&gt; ) 를 통해 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ff950bd5575240b69d4a03e51bb3fc054cc959a" translate="yes" xml:space="preserve">
          <source>The initial release of this package was targeted at python2.7. Earlier versions may work but have
no guarantee of correctness or stability. As of release 1.2.1+ python3 is supported as well. Due to
python2&amp;rsquo;s EOL on January 1st 2020 release 2.x of this package only supports python3.5+.</source>
          <target state="translated">이 패키지의 초기 릴리스는 python2.7을 대상으로했습니다. 이전 버전은 작동 할 수 있지만 정확성이나 안정성을 보장하지 않습니다. 릴리스 1.2.1+부터 python3도 지원됩니다. 2020 년 1 월 1 일 python2의 EOL로 인해이 패키지의 릴리스 2.x는 python3.5 + 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="049b1034d3bca1cba47bab39395e0ba171793998" translate="yes" xml:space="preserve">
          <source>There is no nonce reuse, no branching on secret material,
and all points are validated before any operations are performed on them. Timing side challenges
are mitigated via Montgomery point multiplication. Nonces are generated per &lt;a href=&quot;https://tools.ietf.org/html/rfc6979&quot;&gt;RFC6979&lt;/a&gt;. The default
curve used throughout the package is P256 which provides 128 bits of security. If you require a
higher level of security you can specify the curve parameter in a method to use a curve over a
bigger field e.g. P384. All that being said, crypto is tricky and I&amp;rsquo;m not beyond making mistakes.
Please use a more established and reviewed library for security critical applications. Open an
issue or email me if you see any security issue or risk with this library.</source>
          <target state="translated">nonce 재사용, 비밀 자료에 대한 분기가 없으며 작업이 수행되기 전에 모든 포인트가 검증됩니다. 타이밍 측면 문제는 몽고메리 포인트 곱셈을 통해 완화됩니다. Nonce는 RFC6979에 따라 생성됩니다 &lt;a href=&quot;https://tools.ietf.org/html/rfc6979&quot;&gt;.&lt;/a&gt; . 패키지 전체에 사용되는 기본 곡선은 128 비트 보안을 제공하는 P256입니다. 더 높은 수준의 보안이 필요한 경우 더 큰 필드 (예 : P384)에서 곡선을 사용하는 방법에 곡선 매개 변수를 지정할 수 있습니다. 말하자면, 암호는 까다 롭고 실수를 넘어서는 것이 아닙니다. 보안에 중요한 응용 프로그램에 대해보다 확립되고 검토 된 라이브러리를 사용하십시오. 이 라이브러리에 보안 문제 나 위험이 있으면 문제를 열거 나 이메일을 보내주세요.</target>
        </trans-unit>
        <trans-unit id="dbc09be8085261842a02908bee7c6a650b755782" translate="yes" xml:space="preserve">
          <source>This is a python package for doing fast elliptic curve cryptography, specifically
digital signatures.</source>
          <target state="translated">이것은 빠른 타원 곡선 암호화, 특히 디지털 서명을 수행하기위한 파이썬 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="2d9842f75a100b78b815bb6ffa2df1aa83c70d7d" translate="yes" xml:space="preserve">
          <source>This package is targeted at the Linux and MacOS operating systems. Due to the the dependency on
the GMP C library building this package on Windows is difficult and no official support or
distributions are provided for Windows OSes. See &lt;a href=&quot;https://github.com/AntonKueltz/fastecdsa/issues/11&quot;&gt;issue11&lt;/a&gt; for what users have done to get things
building.</source>
          <target state="translated">이 패키지는 Linux 및 MacOS 운영 체제를 대상으로합니다. GMP C 라이브러리에 대한 종속성으로 인해 Windows에서이 패키지를 구축하는 것은 어렵고 Windows OS에 대한 공식적인 지원이나 배포가 제공되지 않습니다. 사용자가 작업을 구축하기 위해 수행 한 작업 은 &lt;a href=&quot;https://github.com/AntonKueltz/fastecdsa/issues/11&quot;&gt;issue11&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9700d5bb5d5d8aaa6909c9ff32dbe03297350bd" translate="yes" xml:space="preserve">
          <source>This will use the &lt;code&gt;timeit&lt;/code&gt; module to benchmark 1000 signature and verification operations
for each curve supported by this package. Alternatively, if you have not cloned the repo but
have installed the package via e.g. &lt;code&gt;pip&lt;/code&gt; you can use the following command:</source>
          <target state="translated">이것은 &lt;code&gt;timeit&lt;/code&gt; 모듈을 사용 하여이 패키지가 지원하는 각 곡선에 대해 1000 개의 서명 및 검증 작업을 벤치마킹합니다. 또는 저장소를 복제하지 않았지만 예를 들어 &lt;code&gt;pip&lt;/code&gt; 를 통해 패키지를 설치 한 경우 다음 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="c6ca6147b26658d153f7572290385e10ce471253" translate="yes" xml:space="preserve">
          <source>You can also export keys as files, ASN.1 encoded and formatted per &lt;a href=&quot;https://tools.ietf.org/html/rfc5480&quot;&gt;RFC5480&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5915&quot;&gt;RFC5915&lt;/a&gt;. Both
private keys and public keys can be exported as follows:</source>
          <target state="translated">또한 &lt;a href=&quot;https://tools.ietf.org/html/rfc5480&quot;&gt;RFC5480&lt;/a&gt; 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc5915&quot;&gt;RFC5915에&lt;/a&gt; 따라 ASN.1 인코딩 및 형식이 지정된 파일로 키를 내보낼 수 있습니다 . 개인 키와 공개 키는 모두 다음과 같이 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5462734c272764945efe830f924158354e42cb8" translate="yes" xml:space="preserve">
          <source>You can use pip: &lt;code&gt;$ pip install fastecdsa&lt;/code&gt; or clone the repo and use
&lt;code&gt;$ python setup.py install&lt;/code&gt;. Note that you need to have a C compiler.
You  also need to have &lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt; on your system as the underlying
C code in this package includes the &lt;code&gt;gmp.h&lt;/code&gt; header (and links against gmp
via the &lt;code&gt;-lgmp&lt;/code&gt; flag). You can install all dependencies as follows:</source>
          <target state="translated">pip : &lt;code&gt;$ pip install fastecdsa&lt;/code&gt; 를 사용 하거나 repo를 복제하고 &lt;code&gt;$ python setup.py install&lt;/code&gt; 을 사용할 수 있습니다 . C 컴파일러가 필요합니다. 또한 이 패키지의 기본 C 코드에는 &lt;code&gt;gmp.h&lt;/code&gt; 헤더 (및 &lt;code&gt;-lgmp&lt;/code&gt; 플래그 를 통해 gmp에 대한 링크)가 포함되어 있으므로 시스템에 &lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt; 가 있어야합니다 . 다음과 같이 모든 종속성을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1ebbdb92ebb4bfc9920227625106f5e52386366" translate="yes" xml:space="preserve">
          <source>You can use this package to generate keys if you like. Recall that private keys on elliptic curves
are integers, and public keys are points i.e. integer pairs.</source>
          <target state="translated">원하는 경우이 패키지를 사용하여 키를 생성 할 수 있습니다. 타원 곡선의 개인 키는 정수이고 공개 키는 점, 즉 정수 쌍임을 상기하십시오.</target>
        </trans-unit>
        <trans-unit id="2f5d98a7a5323fbccd4cb7aa3417ebef6bd04a19" translate="yes" xml:space="preserve">
          <source>apt</source>
          <target state="translated">적절한</target>
        </trans-unit>
        <trans-unit id="9b96c19c25079a6d37f38330b65a3faeb4b323a1" translate="yes" xml:space="preserve">
          <source>bbbrumley</source>
          <target state="translated">Bbbrumley</target>
        </trans-unit>
        <trans-unit id="d9a4a0611e3e301b3838b8984a21e917d9c51819" translate="yes" xml:space="preserve">
          <source>boneyard93501</source>
          <target state="translated">뼈 마당 93501</target>
        </trans-unit>
        <trans-unit id="97aaa0aa9c67c91eb8764074c51053b85f5e583b" translate="yes" xml:space="preserve">
          <source>brainpoolP160r1</source>
          <target state="translated">brainpoolP160r1</target>
        </trans-unit>
        <trans-unit id="8345af1837db664ef95121e9c6b3cfb90d163a36" translate="yes" xml:space="preserve">
          <source>brainpoolP192r1</source>
          <target state="translated">brainpoolP192r1</target>
        </trans-unit>
        <trans-unit id="de8004669d048860aae2d119a8abbd392330e299" translate="yes" xml:space="preserve">
          <source>brainpoolP224r1</source>
          <target state="translated">brainpoolP224r1</target>
        </trans-unit>
        <trans-unit id="07bf238cba9e0fbc46d3a9122147265fd115cb66" translate="yes" xml:space="preserve">
          <source>brainpoolP256r1</source>
          <target state="translated">brainpoolP256r1</target>
        </trans-unit>
        <trans-unit id="55875450b1aeb59267756f98d8e96c99cdd4e061" translate="yes" xml:space="preserve">
          <source>brainpoolP320r1</source>
          <target state="translated">brainpoolP320r1</target>
        </trans-unit>
        <trans-unit id="b5de63ac163e0e37287fd96aa424cc502a171699" translate="yes" xml:space="preserve">
          <source>brainpoolP384r1</source>
          <target state="translated">brainpoolP384r1</target>
        </trans-unit>
        <trans-unit id="8f370f5701a64cedb9738f12460c12cff6e133ea" translate="yes" xml:space="preserve">
          <source>brainpoolP512r1</source>
          <target state="translated">brainpoolP512r1</target>
        </trans-unit>
        <trans-unit id="9df715b447ac2b552ae61aca3f565a353214e7e4" translate="yes" xml:space="preserve">
          <source>clouds56</source>
          <target state="translated">구름 56</target>
        </trans-unit>
        <trans-unit id="a65ce8cb358f4953b4869aa3313f31de03cefa51" translate="yes" xml:space="preserve">
          <source>luinxz</source>
          <target state="translated">Luinxz</target>
        </trans-unit>
        <trans-unit id="7216a71e23c06b514d28bc69f2c09a39d34ab6fc" translate="yes" xml:space="preserve">
          <source>m-kus</source>
          <target state="translated">m-kus</target>
        </trans-unit>
        <trans-unit id="d7c740d6ed936795844177164f5522daeedc6957" translate="yes" xml:space="preserve">
          <source>secp192k1</source>
          <target state="translated">secp192k1</target>
        </trans-unit>
        <trans-unit id="3b9657cbe26d17049ff1ba3d7adb9803a0b78ed0" translate="yes" xml:space="preserve">
          <source>secp224k1</source>
          <target state="translated">secp224k1</target>
        </trans-unit>
        <trans-unit id="1d7cf6efa0f7424f664d816f6db2507be8918318" translate="yes" xml:space="preserve">
          <source>secp256k1</source>
          <target state="translated">secp256k1</target>
        </trans-unit>
        <trans-unit id="5d0cf80bdc3e5097dda03b6aa8348823f0547766" translate="yes" xml:space="preserve">
          <source>secp256k1 (bitcoin curve)</source>
          <target state="translated">secp256k1 (비트 코인 곡선)</target>
        </trans-unit>
        <trans-unit id="a73e8f17643ebc1d60fb655876dd93e3c9077176" translate="yes" xml:space="preserve">
          <source>sirk390</source>
          <target state="translated">sirk390</target>
        </trans-unit>
        <trans-unit id="f9d6cc68dd88a482db16693dbe751c67ac5c51e6" translate="yes" xml:space="preserve">
          <source>targon</source>
          <target state="translated">타곤</target>
        </trans-unit>
        <trans-unit id="3c14423e8df2e904b8d7543f12428253b7451183" translate="yes" xml:space="preserve">
          <source>yum</source>
          <target state="translated">냠</target>
        </trans-unit>
        <trans-unit id="a95adb0d473aec283ffc5e16a1ae47560b8a671e" translate="yes" xml:space="preserve">
          <source>~26x</source>
          <target state="translated">~ 26 배</target>
        </trans-unit>
        <trans-unit id="0500696edac33e0367aa386b6c3f69df7e77d663" translate="yes" xml:space="preserve">
          <source>~28x</source>
          <target state="translated">~ 28 배</target>
        </trans-unit>
        <trans-unit id="4ea945357b5f50fb84fbe65c773070ad175b74ae" translate="yes" xml:space="preserve">
          <source>~29x</source>
          <target state="translated">~ 29 배</target>
        </trans-unit>
        <trans-unit id="e4352bfed1c6b9ef7b5ce299d3f181ee4b5632f3" translate="yes" xml:space="preserve">
          <source>~30x</source>
          <target state="translated">~ 30 배</target>
        </trans-unit>
        <trans-unit id="070877fa17b63cefbf6dc5c85d0c822533ebe3cf" translate="yes" xml:space="preserve">
          <source>~31x</source>
          <target state="translated">~ 31 배</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
