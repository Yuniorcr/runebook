<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/aiomisc/">
    <body>
      <group id="aiomisc">
        <trans-unit id="467748b87a9515088a43b125fed91dadef8b5326" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;s argument</source>
          <target state="translated">의 주장</target>
        </trans-unit>
        <trans-unit id="04b75e23f0a252f58798cb967cc30421176d36b7" translate="yes" xml:space="preserve">
          <source>(keyword only) is a predicate function which can decide by a given
exception if we should continue to do retries.</source>
          <target state="translated">(키워드 만 해당) 재 시도를 계속해야하는 경우 주어진 예외로 결정할 수있는 술어 함수입니다.</target>
        </trans-unit>
        <trans-unit id="e1c2cfafa464be075d84cbaa03e776f07972ffc7" translate="yes" xml:space="preserve">
          <source>(keyword only) is maximum count of execution attempts (&amp;gt;= 1).</source>
          <target state="translated">(키워드 전용)은 최대 실행 시도 횟수입니다 (&amp;gt; = 1).</target>
        </trans-unit>
        <trans-unit id="80d0da597787e63f847aae91aaa7093fe5ebd49b" translate="yes" xml:space="preserve">
          <source>(see Threaded generator decorator).</source>
          <target state="translated">(스레드 생성기 데코레이터 참조).</target>
        </trans-unit>
        <trans-unit id="f8d9680ad6eca0dfb5a4512f2f2d62cd9606b244" translate="yes" xml:space="preserve">
          <source>, and will be started
after event loop has been created.</source>
          <target state="translated">, 이벤트 루프가 생성 된 후 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="c1f59ba2befbf5c3757b3b861415ad3fec023dcd" translate="yes" xml:space="preserve">
          <source>, but remember that callback registration
should be proceeded before start</source>
          <target state="translated">하지만 콜백 등록은 시작하기 전에 진행해야합니다.</target>
        </trans-unit>
        <trans-unit id="845a484f29611b2c2f5557f3785369725f6c308e" translate="yes" xml:space="preserve">
          <source>- forbids call</source>
          <target state="translated">-전화 금지</target>
        </trans-unit>
        <trans-unit id="459d56b6d010e298f9eee32dc7676641dfa5113c" translate="yes" xml:space="preserve">
          <source>- it&amp;rsquo;s a base class for writing TCP servers with TLS.
Just implement</source>
          <target state="translated">-TLS로 TCP 서버를 작성하기위한 기본 클래스입니다. 그냥 구현</target>
        </trans-unit>
        <trans-unit id="08ec0e5fff3f29735f6cc99bc4f05a6fe1cba5cf" translate="yes" xml:space="preserve">
          <source>- it&amp;rsquo;s a base class for writing TCP servers.
Just implement</source>
          <target state="translated">-TCP 서버 작성을위한 기본 클래스입니다. 그냥 구현</target>
        </trans-unit>
        <trans-unit id="70f87418fdc759e449c335e675300a2aae8a55a8" translate="yes" xml:space="preserve">
          <source>- it&amp;rsquo;s a base class for writing UDP servers.
Just implement</source>
          <target state="translated">-UDP 서버 작성을위한 기본 클래스입니다. 그냥 구현</target>
        </trans-unit>
        <trans-unit id="8fbfb68aa0cc6f92d29115108046e154a4190f0c" translate="yes" xml:space="preserve">
          <source>- uncaught event loop exceptions will failling test.</source>
          <target state="translated">-포착되지 않은 이벤트 루프 예외는 테스트에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f443cfc79f1dc26fd5da05bcffc8f98cfb0d5d64" translate="yes" xml:space="preserve">
          <source>-object will be created when</source>
          <target state="translated">-객체는</target>
        </trans-unit>
        <trans-unit id="df64cf714f649608b6bd21f48f693d4928c3959f" translate="yes" xml:space="preserve">
          <source>.close()</source>
          <target state="translated">.닫기()</target>
        </trans-unit>
        <trans-unit id="5fb136a240b12c395a0df4f502be1fa9b070eb88" translate="yes" xml:space="preserve">
          <source>@threaded</source>
          <target state="translated">@threaded</target>
        </trans-unit>
        <trans-unit id="a3b311219c5468fbaaf2ef9d298949a3893879d3" translate="yes" xml:space="preserve">
          <source>@threaded_separate</source>
          <target state="translated">안녕하세요.</target>
        </trans-unit>
        <trans-unit id="d1a00cbbb4a9e6bd7f92942ac1eca093748eef49" translate="yes" xml:space="preserve">
          <source>AIOHTTPSSLService</source>
          <target state="translated">AIOHTTPSSLService</target>
        </trans-unit>
        <trans-unit id="42a20b1558f01c44a369b9b0308ecb422cdd99c3" translate="yes" xml:space="preserve">
          <source>AIOHTTPService</source>
          <target state="translated">AIOHTTPService</target>
        </trans-unit>
        <trans-unit id="7dbc36e5131c6e361c4e8538637718ed401fa853" translate="yes" xml:space="preserve">
          <source>Abstract connection pool</source>
          <target state="translated">추상 연결 풀</target>
        </trans-unit>
        <trans-unit id="0179691fc528319e1916e8a926d796448fee9b1d" translate="yes" xml:space="preserve">
          <source>Abstraction:</source>
          <target state="translated">추출:</target>
        </trans-unit>
        <trans-unit id="82c928dbe7a96b3b9e87604592df39361e5d0a0b" translate="yes" xml:space="preserve">
          <source>All following decorators and functions support</source>
          <target state="translated">다음의 모든 데코레이터 및 함수 지원</target>
        </trans-unit>
        <trans-unit id="d5284b2561e58332489eeed912d31f6691967d9b" translate="yes" xml:space="preserve">
          <source>All passed tasks will be cancelled and task will be returned:</source>
          <target state="translated">전달 된 모든 작업이 취소되고 작업이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3c1cd5cf787b4f820f901fa20f7386d813165982" translate="yes" xml:space="preserve">
          <source>Async backoff</source>
          <target state="translated">비동기 백 오프</target>
        </trans-unit>
        <trans-unit id="fa696fce789319a3d23748ea2164354e3a4940bb" translate="yes" xml:space="preserve">
          <source>Async entrypoint with logging and useful arguments:</source>
          <target state="translated">로깅 및 유용한 인수가있는 비동기 진입 점 :</target>
        </trans-unit>
        <trans-unit id="7de5521bd66a55947de79b464bc2e96e0551305a" translate="yes" xml:space="preserve">
          <source>Asynchronous files operations. Based on thread-pool under the hood.</source>
          <target state="translated">비동기 파일 작업. 후드 아래의 실 풀을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="55babfd2f39438d6e92981ff1ed76edf11d2510f" translate="yes" xml:space="preserve">
          <source>Awailable as fixture</source>
          <target state="translated">고정물로 사용 가능</target>
        </trans-unit>
        <trans-unit id="ec942fb67fdccc1096aab6ce636cfaa8d9f5f6d9" translate="yes" xml:space="preserve">
          <source>Based on [croniter](&lt;a href=&quot;https://github.com/taichino/croniter&quot;&gt;https://github.com/taichino/croniter&lt;/a&gt;)
You can register async coroutine method with</source>
          <target state="translated">[croniter] ( &lt;a href=&quot;https://github.com/taichino/croniter&quot;&gt;https://github.com/taichino/croniter&lt;/a&gt; ) 기반으로 비동기 코 루틴 메소드를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="f7d79810e01284d77b6be8a22137573ac73db10a" translate="yes" xml:space="preserve">
          <source>Bind socket</source>
          <target state="translated">바인딩 소켓</target>
        </trans-unit>
        <trans-unit id="d109f9491d947b2767e83f8f32f051842092b3b4" translate="yes" xml:space="preserve">
          <source>Bind socket and set</source>
          <target state="translated">바인딩 소켓 및 설정</target>
        </trans-unit>
        <trans-unit id="71e80f40218644febe56600ac5a9f4e07ae9af23" translate="yes" xml:space="preserve">
          <source>Buffered log handler</source>
          <target state="translated">버퍼링 된 로그 핸들러</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">수업</target>
        </trans-unit>
        <trans-unit id="ead0902eb85e252fd11ed07b2246f649f6a3f9a0" translate="yes" xml:space="preserve">
          <source>Close current event loop and install a new one:</source>
          <target state="translated">현재 이벤트 루프를 닫고 새 루프를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="1d0c8304baedcf8e3a78982c2e7c0b04622bf2a0" translate="yes" xml:space="preserve">
          <source>Color</source>
          <target state="translated">색깔</target>
        </trans-unit>
        <trans-unit id="9182251d9a50f8527aad46b97b15d765e309744f" translate="yes" xml:space="preserve">
          <source>Complete example:</source>
          <target state="translated">완전한 예 :</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">문맥</target>
        </trans-unit>
        <trans-unit id="8687de206186b12b5fe73c33af7873743b198d97" translate="yes" xml:space="preserve">
          <source>Cron callback</source>
          <target state="translated">크론 콜백</target>
        </trans-unit>
        <trans-unit id="b4f6bf005e1a05afa7a862a0554b183ed0de9106" translate="yes" xml:space="preserve">
          <source>CronCallback's</source>
          <target state="translated">CronCallback의</target>
        </trans-unit>
        <trans-unit id="e92a2262b31bc6ec45d69f12e2b99709caf97099" translate="yes" xml:space="preserve">
          <source>CronService</source>
          <target state="translated">CronService</target>
        </trans-unit>
        <trans-unit id="ea045dad6f6279e1e30ede0994d8cdf4d180becb" translate="yes" xml:space="preserve">
          <source>Cross dependent services might await or set each others data via the context.</source>
          <target state="translated">교차 종속 서비스는 컨텍스트를 통해 서로 데이터를 기다리거나 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d815d90174d9a94184eace715262a40e476a035b" translate="yes" xml:space="preserve">
          <source>Current event-loop will be set before</source>
          <target state="translated">현재 이벤트 루프는 이전에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="fc6bb16948b67af14fa14bf2e34474f7e3ff955a" translate="yes" xml:space="preserve">
          <source>Decorator that ensures that</source>
          <target state="translated">보장하는 데코레이터</target>
        </trans-unit>
        <trans-unit id="d7269ebf3dfb8c19f01d1d34df74612923f8c6a2" translate="yes" xml:space="preserve">
          <source>Decorator that ensures the execution time limit for decorated function is met.</source>
          <target state="translated">데코 레이팅 된 기능의 실행 시간 제한을 충족시키는 데코레이터입니다.</target>
        </trans-unit>
        <trans-unit id="83d0dba05a65bd9ae1cd110313d708e62eb89033" translate="yes" xml:space="preserve">
          <source>Decorator wraps function and returns a function which returns awaitable object.
In case than a function returns a future, the original future will be returned.
In case then the function returns a coroutine, the original coroutine will
be returned. In case than function returns non-awaitable object, it&amp;rsquo;s will
be wrapped to a new coroutine which just returns this object. It&amp;rsquo;s useful
when you don&amp;rsquo;t want to check function result before
use it in</source>
          <target state="translated">데코레이터는 함수를 래핑하고 대기 가능한 객체를 반환하는 함수를 반환합니다. 함수가 미래를 반환하는 경우보다 원래 미래가 반환됩니다. 함수가 코 루틴을 반환하는 경우 원래 코 루틴이 반환됩니다. 함수가 대기 할 수없는 객체를 반환하는 경우이 객체를 반환하는 새 코 루틴으로 래핑됩니다. 사용하기 전에 기능 결과를 확인하고 싶지 않을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="05b56ae112cb3c02f01c2a0cf46d974862ecbcfc" translate="yes" xml:space="preserve">
          <source>During graceful shutdown method</source>
          <target state="translated">정상 종료 방법 중</target>
        </trans-unit>
        <trans-unit id="753e8699215cb9627e0d3ff4190b89e660b42dd1" translate="yes" xml:space="preserve">
          <source>Event loop policy overriding</source>
          <target state="translated">이벤트 루프 정책 재정의</target>
        </trans-unit>
        <trans-unit id="ad41bb6f3f2687bc1cf9ebc03557f57dbe6db436" translate="yes" xml:space="preserve">
          <source>Example for</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="2e4ccc244461fd2a12825ef96a60da2329e2ce3c" translate="yes" xml:space="preserve">
          <source>Example output:</source>
          <target state="translated">출력 예 :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">예 :</target>
        </trans-unit>
        <trans-unit id="375ef4e495096302198c6bc85803be77b4fe8ae3" translate="yes" xml:space="preserve">
          <source>Following example reads itself file, chains hashes of every line with
hash of previous line and sends hash and content via TCP:</source>
          <target state="translated">다음 예제는 자체 파일을 읽고 이전 줄의 해시로 모든 줄의 해시를 연결하고 TCP를 통해 해시와 콘텐츠를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="26b4e6eb84c67d11ad8bf7458356431550073c79" translate="yes" xml:space="preserve">
          <source>For service instances</source>
          <target state="translated">서비스 인스턴스의 경우</target>
        </trans-unit>
        <trans-unit id="95b9874383209c8ce388b7c02fc4c2bda39d183e" translate="yes" xml:space="preserve">
          <source>For setting up developer environment just type</source>
          <target state="translated">개발자 환경을 설정하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="1f955b8a7e5b8448d593579fde969b5828c9b50f" translate="yes" xml:space="preserve">
          <source>Functions running in thread can&amp;rsquo;t call and wait result from coroutines
by default. This function is helper for send coroutine to event loop
and wait it in current thread.</source>
          <target state="translated">스레드에서 실행되는 함수는 기본적으로 코 루틴의 결과를 호출하고 기다릴 수 없습니다. 이 함수는 코 루틴을 이벤트 루프로 보내고 현재 스레드에서 대기하는 도우미입니다.</target>
        </trans-unit>
        <trans-unit id="b478d07c8e93929a1fdd8e04a285f46f8e7835f5" translate="yes" xml:space="preserve">
          <source>GNU Make as</source>
          <target state="translated">GNU Make as</target>
        </trans-unit>
        <trans-unit id="70d38ff19acfdc8b507249650ae854aa06469cb5" translate="yes" xml:space="preserve">
          <source>How to develop?</source>
          <target state="translated">개발하는 방법?</target>
        </trans-unit>
        <trans-unit id="1606a7b69b55dffa663f51f014cd46a22278e037" translate="yes" xml:space="preserve">
          <source>In case function is a generator function</source>
          <target state="translated">함수가 생성기 함수 인 경우</target>
        </trans-unit>
        <trans-unit id="3628daa54d60aa15602e1ca619541de594dc6839" translate="yes" xml:space="preserve">
          <source>In case of exception function will be called again with similar arguments after</source>
          <target state="translated">예외의 경우 다음과 같은 인수로 다시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9574693601e168e5c9c3fb8478328f8f0de2293f" translate="yes" xml:space="preserve">
          <source>In generic case the entrypoint helper creates event loop and cancels already
running coroutines on exit.</source>
          <target state="translated">일반적인 경우 진입 점 도우미는 이벤트 루프를 생성하고 종료시 이미 실행중인 코 루틴을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="ca1910455cf1460e2d68d1a92ae12082a47a2df7" translate="yes" xml:space="preserve">
          <source>In order to make your plugin discoverable by aiomisc you should add</source>
          <target state="translated">aiomisc에서 플러그인을 검색 할 수 있도록하려면 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="b2decdc1a551ccd8681e80b79181f6e042a40a28" translate="yes" xml:space="preserve">
          <source>In some cases you should wait only one of multiple tasks.</source>
          <target state="translated">어떤 경우에는 여러 작업 중 하나만 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="0b9c788d8f2176982a06c71d5ff9552b77c06349" translate="yes" xml:space="preserve">
          <source>Install event loop on program start:</source>
          <target state="translated">프로그램 시작시 이벤트 루프 설치 :</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="1c50641bab3940bf071ff9b7936b8a6238d0cfa3" translate="yes" xml:space="preserve">
          <source>Installing from github.com:</source>
          <target state="translated">github.com에서 설치 :</target>
        </trans-unit>
        <trans-unit id="28187afe3a710a7ae7a2f9e30e50d4a4e687e718" translate="yes" xml:space="preserve">
          <source>Installing from pypi:</source>
          <target state="translated">pypi에서 설치 :</target>
        </trans-unit>
        <trans-unit id="3aa98e10e1eb368aa1f6342ac999bc240e474a50" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not a silver bullet. In base case services can be configured by
passing kwargs to the service</source>
          <target state="translated">은색 총알이 아닙니다. 기본 사례에서 서비스는 kwargs를 서비스에 전달하여 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dbea495944c028a03d60c813a69f24633c27700" translate="yes" xml:space="preserve">
          <source>IteratorWrapper</source>
          <target state="translated">IteratorWrapper</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="110cc2194815eeaea7da1cc90e81be57cdf785fb" translate="yes" xml:space="preserve">
          <source>Keyword arguments notation:</source>
          <target state="translated">키워드 인수 표기 :</target>
        </trans-unit>
        <trans-unit id="5fbd87880adfdfc9077e510fbb0afb6ae65626e7" translate="yes" xml:space="preserve">
          <source>List of all supported log formats is available from</source>
          <target state="translated">지원되는 모든 로그 형식 목록은</target>
        </trans-unit>
        <trans-unit id="2ebee8b95304d6f2641fb64aa8296a4b89bfa1d6" translate="yes" xml:space="preserve">
          <source>Logging configuration</source>
          <target state="translated">로깅 구성</target>
        </trans-unit>
        <trans-unit id="9e5201c0e031c177f5f7b6aea29db39c66226fb9" translate="yes" xml:space="preserve">
          <source>Memory Tracer</source>
          <target state="translated">메모리 트레이서</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">방법</target>
        </trans-unit>
        <trans-unit id="2aa958b5a1fd533c7a9336278fbb175e339edce8" translate="yes" xml:space="preserve">
          <source>Miscellaneous utils for asyncio.</source>
          <target state="translated">asyncio에 대한 기타 유틸리티.</target>
        </trans-unit>
        <trans-unit id="e99a274889f07b11425a4b1e7b2860d6cd271c5d" translate="yes" xml:space="preserve">
          <source>Modules which provided in</source>
          <target state="translated">제공된 모듈</target>
        </trans-unit>
        <trans-unit id="335ecb17d26aa5ef6645209463965865bc843513" translate="yes" xml:space="preserve">
          <source>Multiple services</source>
          <target state="translated">여러 서비스</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">노트</target>
        </trans-unit>
        <trans-unit id="cc38f7c39eb540d71928b1f61611e839c5871bdc" translate="yes" xml:space="preserve">
          <source>Output example:</source>
          <target state="translated">출력 예 :</target>
        </trans-unit>
        <trans-unit id="66a410f3471068bac3a522089b7d1674fc867f4c" translate="yes" xml:space="preserve">
          <source>Overview:</source>
          <target state="translated">개요 :</target>
        </trans-unit>
        <trans-unit id="90e3d7a63ee1f07f012363e6391e9e7be5f9bd6d" translate="yes" xml:space="preserve">
          <source>Package contains some useful markers for pytest:</source>
          <target state="translated">패키지에는 pytest에 대한 몇 가지 유용한 마커가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">매개 변수</target>
        </trans-unit>
        <trans-unit id="e016bb5f633edf2db8ca54cf71b7c42ac02452d5" translate="yes" xml:space="preserve">
          <source>Pass several service instances to the</source>
          <target state="translated">여러 서비스 인스턴스를</target>
        </trans-unit>
        <trans-unit id="563019eedda79896e01297e55eb26660ca1df703" translate="yes" xml:space="preserve">
          <source>Passing default context</source>
          <target state="translated">기본 컨텍스트 전달</target>
        </trans-unit>
        <trans-unit id="2bf6c8825fde2ec53524f3f6583bc17d9d26fba9" translate="yes" xml:space="preserve">
          <source>Periodic callback</source>
          <target state="translated">주기적 콜백</target>
        </trans-unit>
        <trans-unit id="999acab70dfa71a0b900b764b1bf63869e79cc52" translate="yes" xml:space="preserve">
          <source>PeriodicCallback</source>
          <target state="translated">주기적 콜백</target>
        </trans-unit>
        <trans-unit id="a60cd45fbe86aa6a14e3a8ad1afdb08937b1c45d" translate="yes" xml:space="preserve">
          <source>PeriodicService</source>
          <target state="translated">정기 서비스</target>
        </trans-unit>
        <trans-unit id="12355f96fd657f64026ec2254cf26213d2fcea29" translate="yes" xml:space="preserve">
          <source>Please avoid using</source>
          <target state="translated">사용을 피하십시오</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">플러그인</target>
        </trans-unit>
        <trans-unit id="d6158a30192b0ff2cf39157670249e8603b87580" translate="yes" xml:space="preserve">
          <source>Position arguments notation:</source>
          <target state="translated">위치 인수 표기 :</target>
        </trans-unit>
        <trans-unit id="31da1961bbfc7c4ddeb384d30515cc288fec6568" translate="yes" xml:space="preserve">
          <source>Profiler</source>
          <target state="translated">프로파일 러</target>
        </trans-unit>
        <trans-unit id="6ea6d882b698ad763f232fec96f993ba81131e8a" translate="yes" xml:space="preserve">
          <source>Pytest plugin</source>
          <target state="translated">Pytest 플러그인</target>
        </trans-unit>
        <trans-unit id="ee9280c20081d082338c55e7b2820bef5a575931" translate="yes" xml:space="preserve">
          <source>Python 3.5+ as</source>
          <target state="translated">Python 3.5 이상</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="abb72f4dc1b5adfd55720b847c8ed6672eccbe9f" translate="yes" xml:space="preserve">
          <source>Redefine</source>
          <target state="translated">재정의</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">운영</target>
        </trans-unit>
        <trans-unit id="6eb131d20ff069c3193d7dc641c9a8ef6112e3c2" translate="yes" xml:space="preserve">
          <source>Run iterables on dedicated thread pool:</source>
          <target state="translated">전용 스레드 풀에서 이터 러블을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="601b58460d24fcfe0f6b5c9a31022795fc075551" translate="yes" xml:space="preserve">
          <source>Run iterables on separate thread:</source>
          <target state="translated">별도의 스레드에서 iterables를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3feae925faa946191bffc53e1db5720fd35d8b38" translate="yes" xml:space="preserve">
          <source>Running entrypoint from async code</source>
          <target state="translated">비동기 코드에서 진입 점 실행</target>
        </trans-unit>
        <trans-unit id="2c79044b8925b90408d4a8a4f53faab206fc8b54" translate="yes" xml:space="preserve">
          <source>Runs coroutine function periodically with an optional delay of the first execution.</source>
          <target state="translated">첫 번째 실행의 선택적 지연을 사용하여 주기적으로 코 루틴 함수를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fadfbcb63f972a59a8493b240d0ceb5b0240eafc" translate="yes" xml:space="preserve">
          <source>Runs coroutine function with cron scheduling execution.</source>
          <target state="translated">cron 스케줄링 실행과 함께 코 루틴 기능을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8598222918d3c6e513d63060cf55e2971ded729a" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="translated">고르다</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">서비스</target>
        </trans-unit>
        <trans-unit id="95bfddb03c1ce02be8b38667aecb4a9a2c18697a" translate="yes" xml:space="preserve">
          <source>Service class accepts required</source>
          <target state="translated">서비스 클래스는 필수 허용</target>
        </trans-unit>
        <trans-unit id="1f011af7bfc5e2f384fa0c211ae7fe8fbb1b1a62" translate="yes" xml:space="preserve">
          <source>Service instance should be passed to the</source>
          <target state="translated">서비스 인스턴스는</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">서비스</target>
        </trans-unit>
        <trans-unit id="5d06ef1d26f32b122dc93e06d5377aca169400f7" translate="yes" xml:space="preserve">
          <source>Services can require each others data. In this case you should use</source>
          <target state="translated">서비스에는 서로 데이터가 필요할 수 있습니다. 이 경우에는</target>
        </trans-unit>
        <trans-unit id="4aea5b167147dfc4ffe45c74ee986b103f9a3040" translate="yes" xml:space="preserve">
          <source>Setting as a default thread pool:</source>
          <target state="translated">기본 스레드 풀로 설정 :</target>
        </trans-unit>
        <trans-unit id="d0b59c759963a0a8b7e1a028ce907f10644a7b49" translate="yes" xml:space="preserve">
          <source>Setting up colorized logs:</source>
          <target state="translated">색상이 지정된 로그 설정 :</target>
        </trans-unit>
        <trans-unit id="864daab648ee744eaa23a624177856ab5a715957" translate="yes" xml:space="preserve">
          <source>Setting up json logs:</source>
          <target state="translated">json 로그 설정 :</target>
        </trans-unit>
        <trans-unit id="8fd7074ffb52e33ef19824551613091e7f6448b7" translate="yes" xml:space="preserve">
          <source>Should be installed:</source>
          <target state="translated">설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">신호</target>
        </trans-unit>
        <trans-unit id="a60d124035fabcfbad7349dd3b1aa2497ee3615e" translate="yes" xml:space="preserve">
          <source>Simple TCP proxy for emulate network problems.</source>
          <target state="translated">네트워크 문제를 에뮬레이트하기위한 간단한 TCP 프록시.</target>
        </trans-unit>
        <trans-unit id="8f6412c6659961c324f4dec08b96bf01e7f82aba" translate="yes" xml:space="preserve">
          <source>Simple and useful service for logging large python
objects allocated in memory.</source>
          <target state="translated">메모리에 할당 된 큰 파이썬 객체를 로깅하기위한 간단하고 유용한 서비스입니다.</target>
        </trans-unit>
        <trans-unit id="b99d69a705f68d3d2bc54839ac237baef9bf8a82" translate="yes" xml:space="preserve">
          <source>Simple service for profiling.
Optional</source>
          <target state="translated">프로파일 링을위한 간단한 서비스. 선택 과목</target>
        </trans-unit>
        <trans-unit id="fa5759978602e0fa347526198e20ed43cc048568" translate="yes" xml:space="preserve">
          <source>Simple usage example:</source>
          <target state="translated">간단한 사용 예 :</target>
        </trans-unit>
        <trans-unit id="f690332c340255c046b9ab60150aa93a22439c77" translate="yes" xml:space="preserve">
          <source>TCPProxy</source>
          <target state="translated">TCPProxy</target>
        </trans-unit>
        <trans-unit id="986bd55891fdd953ab6471a3fe44bcc7a8a9e0de" translate="yes" xml:space="preserve">
          <source>TCPServer</source>
          <target state="translated">TCP 서버</target>
        </trans-unit>
        <trans-unit id="6d793a8cfbe13a4348c0fa3ee536392261f7a4be" translate="yes" xml:space="preserve">
          <source>TLSServer</source>
          <target state="translated">TLS 서버</target>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="bbd8606c3b49cd89a758e2dbe7c15b53a76c29e0" translate="yes" xml:space="preserve">
          <source>Testing services</source>
          <target state="translated">테스트 서비스</target>
        </trans-unit>
        <trans-unit id="06ea94f35bd6aa3df935f5f8d353b942caee16fa" translate="yes" xml:space="preserve">
          <source>This is a fast thread pool implementation.</source>
          <target state="translated">이것은 빠른 스레드 풀 구현입니다.</target>
        </trans-unit>
        <trans-unit id="5129f71b7a823d32c09dbdeaa7342dd7311e7343" translate="yes" xml:space="preserve">
          <source>This is a simple process pool executor implementation.</source>
          <target state="translated">이것은 간단한 프로세스 풀 실행기 구현입니다.</target>
        </trans-unit>
        <trans-unit id="7369d73f8ec532e3f1612444ea656fc9cf0a3251" translate="yes" xml:space="preserve">
          <source>This package contains plugin for pytest.</source>
          <target state="translated">이 패키지에는 pytest 용 플러그인이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5648054931a500cc0891370a04b6a48b926965e8" translate="yes" xml:space="preserve">
          <source>This package contains some useful base classes for simple services writing.</source>
          <target state="translated">이 패키지에는 간단한 서비스 작성을위한 몇 가지 유용한 기본 클래스가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="32f62aa963ce5032198249592ba643bd7d94f1af" translate="yes" xml:space="preserve">
          <source>This software follows &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;</source>
          <target state="translated">이 소프트웨어는 &lt;a href=&quot;http://semver.org/&quot;&gt;시맨틱 버전 관리를&lt;/a&gt; 따릅니다.</target>
        </trans-unit>
        <trans-unit id="380848b29983262c8d548e0ac000bef6f598f44d" translate="yes" xml:space="preserve">
          <source>Thread pool overriding</source>
          <target state="translated">스레드 풀 재정의</target>
        </trans-unit>
        <trans-unit id="d0de5053edff59979471f73de0ba1367f5f5f28c" translate="yes" xml:space="preserve">
          <source>Threaded iterator decorator</source>
          <target state="translated">스레드 반복기 데코레이터</target>
        </trans-unit>
        <trans-unit id="b7b1caaf66cf4f527ae5261b19f3416111651a7c" translate="yes" xml:space="preserve">
          <source>UDPServer</source>
          <target state="translated">UDP 서버</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">버전 관리</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">경고</target>
        </trans-unit>
        <trans-unit id="65737a7a5dfdcbf36cdb00394ad21fc288c8391a" translate="yes" xml:space="preserve">
          <source>When you don&amp;rsquo;t want to cancel pending tasks pass</source>
          <target state="translated">보류중인 작업 패스를 취소하지 않으려는 경우</target>
        </trans-unit>
        <trans-unit id="b863505ee3cbb698b35450f153a2b440d03ee9d1" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://pypi.org/project/aiohttp&quot;&gt;aiohttp&lt;/a&gt;:</source>
          <target state="translated">와 &lt;a href=&quot;https://pypi.org/project/aiohttp&quot;&gt;aiohttp&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2d9185bdb328e58207afb624566afbc46d63ac17" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://pypi.org/project/uvloop&quot;&gt;uvloop&lt;/a&gt;:</source>
          <target state="translated">와 &lt;a href=&quot;https://pypi.org/project/uvloop&quot;&gt;uvloop&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9d6d7f52d1d150a89cde4bda127b7602fe0e15d9" translate="yes" xml:space="preserve">
          <source>Working with threads</source>
          <target state="translated">스레드 작업</target>
        </trans-unit>
        <trans-unit id="4c04af2738b56fa44ae292e5ce1e197ce4948d98" translate="yes" xml:space="preserve">
          <source>Wraps blocking function and runs it in
the different thread or thread pool.</source>
          <target state="translated">차단 기능을 래핑하고 다른 스레드 또는 스레드 풀에서 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3f4967b7540464f76c99714b88b3e7caa33b075c" translate="yes" xml:space="preserve">
          <source>Wraps blocking function and runs it in a new separate thread.
Highly recommended for long background tasks:</source>
          <target state="translated">차단 기능을 래핑하고 별도의 새 스레드에서 실행합니다. 긴 백그라운드 작업에 적극 권장 :</target>
        </trans-unit>
        <trans-unit id="81c66dcfcd4a926a87b446e96d70692a5283ebc6" translate="yes" xml:space="preserve">
          <source>Wraps blocking function and runs it in the current thread pool.</source>
          <target state="translated">차단 기능을 래핑하고 현재 스레드 풀에서 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c89ea81088414c45b569e9aed5aa4d36a4a56afc" translate="yes" xml:space="preserve">
          <source>Wraps blocking generator function and runs it in the current thread pool or
on a new separate thread.</source>
          <target state="translated">차단 생성기 함수를 래핑하고 현재 스레드 풀 또는 새 별도 스레드에서 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3cbb5b83e151bbf705ddafa2047115a52c96df48" translate="yes" xml:space="preserve">
          <source>You can also inherit from</source>
          <target state="translated">다음에서 상속 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="17ab00508e30a363ee84ea5e4da49d3403ac54ca" translate="yes" xml:space="preserve">
          <source>You can register async callback functions for specific events of an entrypoint.</source>
          <target state="translated">진입 점의 특정 이벤트에 대해 비동기 콜백 함수를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10a6f5d6102207fc7c2a6a2bdf855a3230212c09" translate="yes" xml:space="preserve">
          <source>You should use async context managers in case when your generator works
infinity, or you have to await the</source>
          <target state="translated">생성기가 무한대로 작동하는 경우 비동기 컨텍스트 관리자를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1939f247b3ae06244a8d50fa7dabbcc975c6fc4c" translate="yes" xml:space="preserve">
          <source>__init__</source>
          <target state="translated">__init__</target>
        </trans-unit>
        <trans-unit id="3a1306b78628f10f0a16f0b021de3b2b0ee60895" translate="yes" xml:space="preserve">
          <source>accepts</source>
          <target state="translated">수락</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">주소</target>
        </trans-unit>
        <trans-unit id="b2f1e021520c5312a9f2c6f00a0b0d041aa5fdfb" translate="yes" xml:space="preserve">
          <source>aiohttp application can be started as a service:</source>
          <target state="translated">aiohttp 애플리케이션은 서비스로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="936486bfcedf40d191113faa43b1fb0a5973d85f" translate="yes" xml:space="preserve">
          <source>aiohttp service</source>
          <target state="translated">aiohttp 서비스</target>
        </trans-unit>
        <trans-unit id="ca3b4bdec18e01f691c7c2dcd504325bb139859a" translate="yes" xml:space="preserve">
          <source>aiohttp test client</source>
          <target state="translated">aiohttp 테스트 클라이언트</target>
        </trans-unit>
        <trans-unit id="f7431d65c2bacc630b417dedd746878beca53b6a" translate="yes" xml:space="preserve">
          <source>aiomisc - miscellaneous utils for asyncio</source>
          <target state="translated">aiomisc-asyncio를위한 기타 유틸리티</target>
        </trans-unit>
        <trans-unit id="9f4a6a90f093b6df9053807674b283df2199a627" translate="yes" xml:space="preserve">
          <source>aiomisc can be extended with plugins as separate packages. Plugins can
enhance aiomisc by mean of &lt;a href=&quot;#signal&quot;&gt;signals&lt;/a&gt;.</source>
          <target state="translated">aiomisc는 플러그인을 사용하여 별도의 패키지로 확장 할 수 있습니다. 플러그인은 &lt;a href=&quot;#signal&quot;&gt;신호를&lt;/a&gt; 통해 aiomisc를 향상시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05bae35f9daacba21f1d7ab932c62b9a27099e23" translate="yes" xml:space="preserve">
          <source>aiomisc.IteratorWrapper</source>
          <target state="translated">aiomisc.IteratorWrapper</target>
        </trans-unit>
        <trans-unit id="9dd31e48aaa7ad5055b89f156a62e36d63206cc1" translate="yes" xml:space="preserve">
          <source>aiomisc.IteratorWrapperSeparate</source>
          <target state="translated">aiomisc.IteratorWrapperSeparate</target>
        </trans-unit>
        <trans-unit id="2feb6ec61a499ba396f652f204b9c262edb84419" translate="yes" xml:space="preserve">
          <source>aiomisc.PoolBase</source>
          <target state="translated">aiomisc.PoolBase</target>
        </trans-unit>
        <trans-unit id="9d21915d8b3da809859e28a9184e2c1dca4dabc0" translate="yes" xml:space="preserve">
          <source>aiomisc.ProcessPoolExecutor</source>
          <target state="translated">aiomisc.ProcessPoolExecutor</target>
        </trans-unit>
        <trans-unit id="1cd1728088b98296457ee08f1fac107edbb68cb9" translate="yes" xml:space="preserve">
          <source>aiomisc.ThreadPoolExecutor</source>
          <target state="translated">aiomisc.ThreadPoolExecutor</target>
        </trans-unit>
        <trans-unit id="cd7c25bdd6273b763b338fceff52e310ac7b9e59" translate="yes" xml:space="preserve">
          <source>aiomisc.log.LogFormat.choices()</source>
          <target state="translated">aiomisc.log.LogFormat.choices ()</target>
        </trans-unit>
        <trans-unit id="34654d1e3b6acc6c55f621edf41f9a0941c35a72" translate="yes" xml:space="preserve">
          <source>aiomisc.plugins</source>
          <target state="translated">aiomisc.plugins</target>
        </trans-unit>
        <trans-unit id="d6f700a75b59ce73bba10cfd450ebcc860d8e033" translate="yes" xml:space="preserve">
          <source>aiomisc.sync_wait_coroutine</source>
          <target state="translated">aiomisc.sync_wait_coroutine</target>
        </trans-unit>
        <trans-unit id="071b7ca717b6948156f575957e1ce9a984eb873f" translate="yes" xml:space="preserve">
          <source>aioredis</source>
          <target state="translated">Aioredis</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="81c8e073eab4a1cbd3c83f03879f77da27a50f28" translate="yes" xml:space="preserve">
          <source>applicable for passing context variables through the
execution stack but created task can not change parent context variables
because</source>
          <target state="translated">실행 스택을 통해 컨텍스트 변수를 전달하는 데 적용 가능하지만 생성 된 태스크는 상위 컨텍스트 변수를 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c86b02f3384fbc675f2db3b2deab008e39013bb" translate="yes" xml:space="preserve">
          <source>argument (&amp;ldquo;cumulative&amp;rdquo; by default).</source>
          <target state="translated">인수 (기본적으로 &quot;누적&quot;).</target>
        </trans-unit>
        <trans-unit id="f0711b5e55a78423f8dc142c71a43aad2673cc77" translate="yes" xml:space="preserve">
          <source>argument - cron like format:</source>
          <target state="translated">인수-형식과 같은 cron :</target>
        </trans-unit>
        <trans-unit id="99d76e8356e345731e7e6104ef7e91e3a85e403f" translate="yes" xml:space="preserve">
          <source>argument - periodic execution delay in seconds (0 by default).</source>
          <target state="translated">인수-주기적 실행 지연 (초) (기본적으로 0).</target>
        </trans-unit>
        <trans-unit id="698431ef89d070a4d03173ccc096b7d3a35fd6d3" translate="yes" xml:space="preserve">
          <source>argument - periodic interval
in seconds and
optional</source>
          <target state="translated">인수-주기적 간격 (초) 및 선택 사항</target>
        </trans-unit>
        <trans-unit id="e5587dabd7e47bdbbb47a6797070a946b73945f1" translate="yes" xml:space="preserve">
          <source>argument can be provided to dump complete profiling data,
which can be later used by, for example, snakeviz.
Also can change ordering with</source>
          <target state="translated">전체 프로파일 링 데이터를 덤프하기 위해 인수를 제공 할 수 있으며, 나중에이를 사용할 수 있습니다 (예 : snakeviz). 또한 주문을 변경할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="9aba603f45cd76011b28d04ec07b1825380e736d" translate="yes" xml:space="preserve">
          <source>argument of</source>
          <target state="translated">인수</target>
        </trans-unit>
        <trans-unit id="7ba3f7e95df4c3ceefe6d911d2f5d441788a73bc" translate="yes" xml:space="preserve">
          <source>argument.
In this case you have to handle task completion manually or get warnings.</source>
          <target state="translated">논의. 이 경우 작업 완료를 수동으로 처리하거나 경고를 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="beb59530cbfe8d8f1218cd20977f9109642743c6" translate="yes" xml:space="preserve">
          <source>as a base class and override</source>
          <target state="translated">기본 클래스 및 재정의</target>
        </trans-unit>
        <trans-unit id="c843691c9052c5d7c80690e30d763545825ebbf6" translate="yes" xml:space="preserve">
          <source>as a service and waits for
running callback to complete on stop. You need to use</source>
          <target state="translated">서비스로 사용하고 중지시 콜백 실행이 완료되기를 기다립니다. 당신은 사용해야합니다</target>
        </trans-unit>
        <trans-unit id="3e73f557dbe404a1bad8f8e0fdcb5fe330b07468" translate="yes" xml:space="preserve">
          <source>as a service and waits for
running callbacks to complete on stop.</source>
          <target state="translated">서비스로 사용하고 중지시 실행중인 콜백이 완료 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="3300bdaf612a9d69d667841bfcee4675cf2eaff6" translate="yes" xml:space="preserve">
          <source>as attributes.</source>
          <target state="translated">속성으로.</target>
        </trans-unit>
        <trans-unit id="9d565a66b372ea1184c98693e6878cc93f2ab2d7" translate="yes" xml:space="preserve">
          <source>async coroutine method.</source>
          <target state="translated">비동기 코 루틴 방법.</target>
        </trans-unit>
        <trans-unit id="a66402de90d490badeec25a75a75cf05574e53a7" translate="yes" xml:space="preserve">
          <source>asynchronous file operations</source>
          <target state="translated">비동기 파일 작업</target>
        </trans-unit>
        <trans-unit id="0f0718e8314460df0da70ecd9bf2619124fdaf56" translate="yes" xml:space="preserve">
          <source>asynchronous fuxture example:</source>
          <target state="translated">비동기식 미래 예 :</target>
        </trans-unit>
        <trans-unit id="847a632b34675096ece794eecc2f91c4f6d3fdd0" translate="yes" xml:space="preserve">
          <source>asyncio.get_event_loop</source>
          <target state="translated">asyncio.get_event_loop</target>
        </trans-unit>
        <trans-unit id="d78432982198e83a6a189981d27d3e088cd52ee3" translate="yes" xml:space="preserve">
          <source>asyncio.get_event_loop()</source>
          <target state="translated">asyncio.get_event_loop ()</target>
        </trans-unit>
        <trans-unit id="a34561614bd4d169f1e14b66473424b5998459a2" translate="yes" xml:space="preserve">
          <source>attempt_timeout</source>
          <target state="translated">시도 _ 시간 초과</target>
        </trans-unit>
        <trans-unit id="30118aa1aa8a06fa5365743b3a5db69fc62b9760" translate="yes" xml:space="preserve">
          <source>await</source>
          <target state="translated">기다리다</target>
        </trans-unit>
        <trans-unit id="d84ac9b5c7f275c461c0209d05d0f358357b5bec" translate="yes" xml:space="preserve">
          <source>awaitable</source>
          <target state="translated">기다릴 수있는</target>
        </trans-unit>
        <trans-unit id="e27bd6478345d84ebbd6dadf24290637ddd0108b" translate="yes" xml:space="preserve">
          <source>buffered=True</source>
          <target state="translated">buffered = 참</target>
        </trans-unit>
        <trans-unit id="3b2be9ba3975adadc738129f2ff65a62ae1fd097" translate="yes" xml:space="preserve">
          <source>but creates HTTPS
server. You must pass SSL-required options (see</source>
          <target state="translated">하지만 HTTPS 서버를 만듭니다. SSL 필수 옵션을 전달해야합니다 (</target>
        </trans-unit>
        <trans-unit id="68b9aa33a8593c38d78dcb7334eeeb81a8591cf9" translate="yes" xml:space="preserve">
          <source>call in</source>
          <target state="translated">전화하다</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">콜백</target>
        </trans-unit>
        <trans-unit id="f474e8f2ab5476dd96eb3425c89333a4d77f9b07" translate="yes" xml:space="preserve">
          <source>cancel=False</source>
          <target state="translated">cancel = 거짓</target>
        </trans-unit>
        <trans-unit id="d5518d2de8a2d827a120df3bbaa45b0ee564e34e" translate="yes" xml:space="preserve">
          <source>cancel_tasks</source>
          <target state="translated">cancel_tasks</target>
        </trans-unit>
        <trans-unit id="447af7ed9b5194cad51c415f5d35d2f9164d3424" translate="yes" xml:space="preserve">
          <source>catch_loop_exceptions</source>
          <target state="translated">catch_loop_exceptions</target>
        </trans-unit>
        <trans-unit id="209b8e4c258f8a8c0a3c8f5bb0d6d1f7a8806285" translate="yes" xml:space="preserve">
          <source>class
allows it because do not copying context variables.</source>
          <target state="translated">클래스는 컨텍스트 변수를 복사하지 않기 때문에 허용합니다.</target>
        </trans-unit>
        <trans-unit id="0324e3ea0e9e0dae5e3b2d4a6e55615c19f6b138" translate="yes" xml:space="preserve">
          <source>class).</source>
          <target state="translated">수업).</target>
        </trans-unit>
        <trans-unit id="db5f6869b5f0574b5bb750d7a83d523f28ed9c61" translate="yes" xml:space="preserve">
          <source>class.</source>
          <target state="translated">수업.</target>
        </trans-unit>
        <trans-unit id="1d7b63144180933529c6d02f6974f9f8716719ec" translate="yes" xml:space="preserve">
          <source>context manager will set it by default.</source>
          <target state="translated">컨텍스트 관리자가 기본적으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b74d824c11bc03bc1275ebc62910848a69cf3fe5" translate="yes" xml:space="preserve">
          <source>contextvars</source>
          <target state="translated">contextvars</target>
        </trans-unit>
        <trans-unit id="a5b2055e06ecd5ae7a3761700bfb5adc56737b51" translate="yes" xml:space="preserve">
          <source>contextvars support</source>
          <target state="translated">contextvars 지원</target>
        </trans-unit>
        <trans-unit id="fe4ce38c7b644b94d3cf5fcb56e9c7041d8a56cd" translate="yes" xml:space="preserve">
          <source>creates as a separate task that can run forever. But in
this case</source>
          <target state="translated">영원히 실행할 수있는 별도의 작업으로 만듭니다. 하지만이 경우</target>
        </trans-unit>
        <trans-unit id="d49daa8789e1ea74357c491e4f25fa47963c93fd" translate="yes" xml:space="preserve">
          <source>creates lightweight copy.</source>
          <target state="translated">간단한 사본을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e23839cd729a3f6017fc6cbf5ef21eeb64d77cdf" translate="yes" xml:space="preserve">
          <source>deadline</source>
          <target state="translated">마감 시간</target>
        </trans-unit>
        <trans-unit id="4621ed4a10fb28aef5a004171270f562bfec0fee" translate="yes" xml:space="preserve">
          <source>decorator will return</source>
          <target state="translated">데코레이터는</target>
        </trans-unit>
        <trans-unit id="ab464f0252045aaf075411f0f1a6aed0797306c1" translate="yes" xml:space="preserve">
          <source>delay</source>
          <target state="translated">지연</target>
        </trans-unit>
        <trans-unit id="56444c9a40ca0fc0c48fdd117cf7ca654d522e41" translate="yes" xml:space="preserve">
          <source>during test case.</source>
          <target state="translated">테스트 케이스 동안.</target>
        </trans-unit>
        <trans-unit id="d61404fcf5437020e05e44156a841a66b806c738" translate="yes" xml:space="preserve">
          <source>enables memory buffer that flushes logs in a thread.</source>
          <target state="translated">스레드에서 로그를 플러시하는 메모리 버퍼를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="f1d6f37c3bcdc1cd425d7e3e37184ac0941a2d45" translate="yes" xml:space="preserve">
          <source>entry to entry to</source>
          <target state="translated">항목에 항목</target>
        </trans-unit>
        <trans-unit id="01afe3d261536c82f94b915eedd0304ee1382df3" translate="yes" xml:space="preserve">
          <source>entry_points</source>
          <target state="translated">entry_points</target>
        </trans-unit>
        <trans-unit id="e89dd390584c1a3296045a66b7f352f412364578" translate="yes" xml:space="preserve">
          <source>entrypoint</source>
          <target state="translated">진입 지점</target>
        </trans-unit>
        <trans-unit id="861ee466f9ea728829007679616cb9da99f4f5c5" translate="yes" xml:space="preserve">
          <source>entrypoint arguments</source>
          <target state="translated">진입 점 인수</target>
        </trans-unit>
        <trans-unit id="be51ea0d2df953559db847ba84b885b258389873" translate="yes" xml:space="preserve">
          <source>exceptions</source>
          <target state="translated">예외</target>
        </trans-unit>
        <trans-unit id="6fb80c97f082a203793d927e3fd195a4d0883830" translate="yes" xml:space="preserve">
          <source>explicitly inside</source>
          <target state="translated">명시 적으로 내부</target>
        </trans-unit>
        <trans-unit id="06ab5a91b32356c13550535f80f07aedcca3f501" translate="yes" xml:space="preserve">
          <source>expression.</source>
          <target state="translated">표현.</target>
        </trans-unit>
        <trans-unit id="04c7c07dba14496448915e773856d4046628837e" translate="yes" xml:space="preserve">
          <source>fixture in your test module:</source>
          <target state="translated">테스트 모듈의 고정 장치 :</target>
        </trans-unit>
        <trans-unit id="d59436757b90b98efb4f8124cf537dde266dd591" translate="yes" xml:space="preserve">
          <source>for just created socket.
This detects</source>
          <target state="translated">방금 생성 된 소켓 용. 이것은</target>
        </trans-unit>
        <trans-unit id="76abe150239a1d90645a76451c5536626f5d8700" translate="yes" xml:space="preserve">
          <source>forbid_get_event_loop</source>
          <target state="translated">forbid_get_event_loop</target>
        </trans-unit>
        <trans-unit id="e53f98c16a0e735aeb25f51fdf48d6d488d3090c" translate="yes" xml:space="preserve">
          <source>format and select socket family automatically.</source>
          <target state="translated">소켓 패밀리를 자동으로 포맷하고 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f7c3b78af69f8275de8661bd556f29c0e17cc225" translate="yes" xml:space="preserve">
          <source>function returns current context.</source>
          <target state="translated">함수는 현재 컨텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ce3ea7caf36aa2f14e2e2412617ef427dadb568" translate="yes" xml:space="preserve">
          <source>function.
This functions would be called by aiomisc and must contain signals connecting.</source>
          <target state="translated">함수. 이 함수는 aiomisc에 의해 호출되며 연결되는 신호를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d45bfa907df6ecb0f1f9cde8202d2a63e2095c4" translate="yes" xml:space="preserve">
          <source>get_context()</source>
          <target state="translated">get_context ()</target>
        </trans-unit>
        <trans-unit id="c1908a2cba1e490ae68d447210006357a26b91da" translate="yes" xml:space="preserve">
          <source>giveup</source>
          <target state="translated">포기</target>
        </trans-unit>
        <trans-unit id="079381ec2933d555e69b6df2f5c9d825d67874ea" translate="yes" xml:space="preserve">
          <source>handle_client(reader, writer)</source>
          <target state="translated">handle_client (reader, writer)</target>
        </trans-unit>
        <trans-unit id="2de972217699f1dede0bce86967d419de43f062b" translate="yes" xml:space="preserve">
          <source>handle_datagram(data, addr)</source>
          <target state="translated">handle_datagram (데이터, 주소)</target>
        </trans-unit>
        <trans-unit id="b76b8d4005216ba22dbb93550bff2b8eb0efb8a6" translate="yes" xml:space="preserve">
          <source>has different use cases then</source>
          <target state="translated">다른 사용 사례가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a02967c010fa0833d82e7a3d8bc397c9b164658c" translate="yes" xml:space="preserve">
          <source>instead:</source>
          <target state="translated">대신 :</target>
        </trans-unit>
        <trans-unit id="84f4675c98d93edd17ec2f6ed54e9f3ee1086612" translate="yes" xml:space="preserve">
          <source>interval</source>
          <target state="translated">간격</target>
        </trans-unit>
        <trans-unit id="684f8a4450c94e140480bf781654d58566c7e0bd" translate="yes" xml:space="preserve">
          <source>is a repository associated with the running</source>
          <target state="translated">실행과 관련된 저장소입니다</target>
        </trans-unit>
        <trans-unit id="97aee3ae421ee55fa4cfaa4eaf34566ec84595be" translate="yes" xml:space="preserve">
          <source>is abstraction to help organize lots of different
tasks in one process. Each service must implement</source>
          <target state="translated">하나의 프로세스에서 많은 다른 작업을 구성하는 데 도움이되는 추상화입니다. 각 서비스는</target>
        </trans-unit>
        <trans-unit id="9fc8cf7374533b2f888521c28bc1e96969eb8a2f" translate="yes" xml:space="preserve">
          <source>is an abstract class for implementation user defined
connection pool.</source>
          <target state="translated">구현 사용자 정의 연결 풀에 대한 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9678b166e5cbc3d8704335f51137110527b92867" translate="yes" xml:space="preserve">
          <source>is available since</source>
          <target state="translated">이후 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c146f68980ab5fc0cb13219c8a6d9b26837a19d3" translate="yes" xml:space="preserve">
          <source>is maximum execution time for all execution attempts.</source>
          <target state="translated">모든 실행 시도에 대한 최대 실행 시간입니다.</target>
        </trans-unit>
        <trans-unit id="ad4c57ca784538817b760c7745c5cd073256bc75" translate="yes" xml:space="preserve">
          <source>is maximum execution time for one execution attempt.</source>
          <target state="translated">한 번의 실행 시도에 대한 최대 실행 시간입니다.</target>
        </trans-unit>
        <trans-unit id="3589fc3352579649fca0db639c2393be88743f9c" translate="yes" xml:space="preserve">
          <source>is similar to</source>
          <target state="translated">비슷하다</target>
        </trans-unit>
        <trans-unit id="9f19d403a7e56db8c63c3688772ffa267a3b777a" translate="yes" xml:space="preserve">
          <source>is time gap between execution attempts.</source>
          <target state="translated">실행 시도 사이의 시간 차이입니다.</target>
        </trans-unit>
        <trans-unit id="bdf82fa2731eaabd98b57300ed1fff3df4260255" translate="yes" xml:space="preserve">
          <source>limits thread pool size.</source>
          <target state="translated">스레드 풀 크기를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="65eafcad3e9352bbb3eade7e4cc73e8e910c7483" translate="yes" xml:space="preserve">
          <source>listener in the terminal and run this example</source>
          <target state="translated">리스너를 입력하고이 예제를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f6daac740ba75a3ca3767713a28e3c8366ec1ff7" translate="yes" xml:space="preserve">
          <source>log_format</source>
          <target state="translated">log_format</target>
        </trans-unit>
        <trans-unit id="5821eb27d7b71c9078000da31a5a654c97e401b9" translate="yes" xml:space="preserve">
          <source>make</source>
          <target state="translated">하다</target>
        </trans-unit>
        <trans-unit id="b34a389b4430eaf8437f3b1eff0165353d3d90b9" translate="yes" xml:space="preserve">
          <source>max_tries</source>
          <target state="translated">max_tries</target>
        </trans-unit>
        <trans-unit id="cdd15776ab0391e208934c3242335747bd69ca60" translate="yes" xml:space="preserve">
          <source>metaclass accepts all kwargs and will set it
to</source>
          <target state="translated">메타 클래스는 모든 kwargs를 허용하고 다음으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8763e3186fadf07e68bdcf6bd8024f3b18eccf31" translate="yes" xml:space="preserve">
          <source>method and can
implement</source>
          <target state="translated">방법 및 구현할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="5cb24a8ef34a87bb43874d42eed5350687cffc88" translate="yes" xml:space="preserve">
          <source>method called.
The event loop will be set as current for this thread.</source>
          <target state="translated">메서드가 호출되었습니다. 이벤트 루프는이 스레드에 대해 현재로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="19aba2e8caf7e7f2b62b0cfdfb18c4f0cf6791ff" translate="yes" xml:space="preserve">
          <source>method when you avoid context managers.</source>
          <target state="translated">컨텍스트 관리자를 피할 때 방법.</target>
        </trans-unit>
        <trans-unit id="946465000bd9e24c032001a54783f3574c94142e" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="translated">방법.</target>
        </trans-unit>
        <trans-unit id="297f6ca3fabb335aaced0c60c84fce3414f74c7d" translate="yes" xml:space="preserve">
          <source>method. Use</source>
          <target state="translated">방법. 사용하다</target>
        </trans-unit>
        <trans-unit id="9cc4b99ea42322626bebc1603ca7328ae86785e9" translate="yes" xml:space="preserve">
          <source>module,
from PyPI for python earlier 3.7 and builtin standard library for python 3.7.</source>
          <target state="translated">모듈, Python 3.7 이전 버전의 PyPI 및 Python 3.7 용 내장 표준 라이브러리.</target>
        </trans-unit>
        <trans-unit id="8ec45b7271aa9736d42a4a9e5ef4480f97b8e869" translate="yes" xml:space="preserve">
          <source>netcat</source>
          <target state="translated">넷캣</target>
        </trans-unit>
        <trans-unit id="953d6c844ccd5f617ff0bdcf575384cabc1d8442" translate="yes" xml:space="preserve">
          <source>of a plugin.</source>
          <target state="translated">플러그인</target>
        </trans-unit>
        <trans-unit id="105f4a2269edb372e6d99c4dab7e55d323b01884" translate="yes" xml:space="preserve">
          <source>or using extras:</source>
          <target state="translated">또는 엑스트라 사용 :</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">주문</target>
        </trans-unit>
        <trans-unit id="99e2f561ae151e34791c2987abeb857ab96daded" translate="yes" xml:space="preserve">
          <source>parameter for configure it.</source>
          <target state="translated">구성을위한 매개 변수.</target>
        </trans-unit>
        <trans-unit id="3150ecd5e0294534a81ae047ddac559de481d774" translate="yes" xml:space="preserve">
          <source>path</source>
          <target state="translated">통로</target>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">중지</target>
        </trans-unit>
        <trans-unit id="661b7afdb01f5d2fecb6778cc3f3c368875e6f11" translate="yes" xml:space="preserve">
          <source>pool_size</source>
          <target state="translated">풀 _ 크기</target>
        </trans-unit>
        <trans-unit id="2790ac222bb54e523584fa55893e6e49c50274f0" translate="yes" xml:space="preserve">
          <source>post_stop</source>
          <target state="translated">post_stop</target>
        </trans-unit>
        <trans-unit id="9fc59da70eb719214452ec234b87c21ead81c981" translate="yes" xml:space="preserve">
          <source>pre_start</source>
          <target state="translated">시작 전</target>
        </trans-unit>
        <trans-unit id="790bdf7a2d323afbd2d57a3ec5f22002d92f15c5" translate="yes" xml:space="preserve">
          <source>pytest markers</source>
          <target state="translated">pytest 마커</target>
        </trans-unit>
        <trans-unit id="80dd0a3e16d05b975a9fa37f27c78d7608caf7ae" translate="yes" xml:space="preserve">
          <source>python3</source>
          <target state="translated">python3</target>
        </trans-unit>
        <trans-unit id="60a2cc0bc74d26f72f80e93e6292fe844df3b4df" translate="yes" xml:space="preserve">
          <source>requires installed [croniter](&lt;a href=&quot;https://github.com/taichino/croniter&quot;&gt;https://github.com/taichino/croniter&lt;/a&gt;):</source>
          <target state="translated">[croniter] 설치 필요 ( &lt;a href=&quot;https://github.com/taichino/croniter&quot;&gt;https://github.com/taichino/croniter&lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="a11748c89927c19f5d39f21e13c25d7b7c3f3c9a" translate="yes" xml:space="preserve">
          <source>requires installed aiohttp:</source>
          <target state="translated">설치된 aiohttp가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0d8b2e6b31e13a8a29b090c2c264a8ca35ed6937" translate="yes" xml:space="preserve">
          <source>retrying when this exceptions was raised.</source>
          <target state="translated">이 예외가 발생했을 때 다시 시도합니다.</target>
        </trans-unit>
        <trans-unit id="71b3f0bbe7d5671e0f5a6fa55107670cc7ac87a1" translate="yes" xml:space="preserve">
          <source>runs</source>
          <target state="translated">달리다</target>
        </trans-unit>
        <trans-unit id="07ba64ff59db983836f003f15fb858fd0b12e2c3" translate="yes" xml:space="preserve">
          <source>seconds.</source>
          <target state="translated">초.</target>
        </trans-unit>
        <trans-unit id="81448fe273247b533b9f018e96c158cab7901247" translate="yes" xml:space="preserve">
          <source>select</source>
          <target state="translated">고르다</target>
        </trans-unit>
        <trans-unit id="40380bc1d358a6f8665b37bbdc8c7ccc6c38a861" translate="yes" xml:space="preserve">
          <source>self</source>
          <target state="translated">본인</target>
        </trans-unit>
        <trans-unit id="1c2b9d8829f23d201bca11703626281d0902c506" translate="yes" xml:space="preserve">
          <source>self.context</source>
          <target state="translated">self.context</target>
        </trans-unit>
        <trans-unit id="6d8ec2a3b43ea62d0e2e81181c28b4b5039c1d06" translate="yes" xml:space="preserve">
          <source>self.loop</source>
          <target state="translated">self.loop</target>
        </trans-unit>
        <trans-unit id="15740a601e7a880f24a5cd6a82ce5c456123d703" translate="yes" xml:space="preserve">
          <source>self.start_event.set()</source>
          <target state="translated">self.start_event.set ()</target>
        </trans-unit>
        <trans-unit id="3e7aaa79601ad9b577f333a67d082c3752b7e357" translate="yes" xml:space="preserve">
          <source>services</source>
          <target state="translated">서비스</target>
        </trans-unit>
        <trans-unit id="6c810db4e5181828d80da61148d485cb92fe3aa4" translate="yes" xml:space="preserve">
          <source>setblocking(False)</source>
          <target state="translated">setblocking (False)</target>
        </trans-unit>
        <trans-unit id="80437a44a661d141174209119d54125a59a64b2a" translate="yes" xml:space="preserve">
          <source>setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="9d6a7dc9f84fcf4a8ed0710cc5099b5b71d62abe" translate="yes" xml:space="preserve">
          <source>should be called for notifying</source>
          <target state="translated">통지를 위해 호출되어야합니다</target>
        </trans-unit>
        <trans-unit id="a820f073971278126f963a1872b969243daf7398" translate="yes" xml:space="preserve">
          <source>should have</source>
          <target state="translated">있어야한다</target>
        </trans-unit>
        <trans-unit id="664cb43bd57d05c5fcd6976da8023a5f61ee621d" translate="yes" xml:space="preserve">
          <source>signal occurs on entrypoint shutdown after all services have been
stopped.</source>
          <target state="translated">모든 서비스가 중지 된 후 진입 점 종료시 신호가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="89f18959a6c641e64c10ac6079d0a3a4b15beada" translate="yes" xml:space="preserve">
          <source>signal occurs on entrypoint start up before any service have started.</source>
          <target state="translated">신호는 서비스가 시작되기 전에 진입 점 시작시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="078772725d009dfa127dbc9e3ac5682a60a9b371" translate="yes" xml:space="preserve">
          <source>spec</source>
          <target state="translated">투기</target>
        </trans-unit>
        <trans-unit id="37f15271a103049639c600ea9d3ce08bf1c7863b" translate="yes" xml:space="preserve">
          <source>start()</source>
          <target state="translated">스타트()</target>
        </trans-unit>
        <trans-unit id="b450182fd211f44de2ad37c15c89e10d68592248" translate="yes" xml:space="preserve">
          <source>started. In other cases</source>
          <target state="translated">시작되었습니다. 다른 경우</target>
        </trans-unit>
        <trans-unit id="32ad6dec22c5098703060336ac61fe8e812606bf" translate="yes" xml:space="preserve">
          <source>starts and linked
to the running event loop.</source>
          <target state="translated">시작되고 실행중인 이벤트 루프에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="2391ebebb2e141a6296591ac99a4157e9c94c126" translate="yes" xml:space="preserve">
          <source>stop()</source>
          <target state="translated">중지()</target>
        </trans-unit>
        <trans-unit id="d1b2cb425384d49bdd632b2e5c8b6bce44088947" translate="yes" xml:space="preserve">
          <source>tcp_proxy</source>
          <target state="translated">tcp_proxy</target>
        </trans-unit>
        <trans-unit id="9694d3581c5912527bd127d0db91352153976f2f" translate="yes" xml:space="preserve">
          <source>time
limits are met by decorated function.</source>
          <target state="translated">시간 제한은 장식 기능으로 충족됩니다.</target>
        </trans-unit>
        <trans-unit id="21b1eed07edb519ab8e7ca9a18cec7ad2c665237" translate="yes" xml:space="preserve">
          <source>timeout decorator</source>
          <target state="translated">타임 아웃 데코레이터</target>
        </trans-unit>
        <trans-unit id="0554d3e0d8cf1aa278a56ef80bbc38eca0f0ab44" translate="yes" xml:space="preserve">
          <source>to run all of them.
After exiting the entrypoint service instances will be gracefully shut down.</source>
          <target state="translated">모두 실행합니다. 진입 점 서비스 인스턴스를 종료하면 정상적으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="59e10b23297bb9001da525c3ed0aea567ba40f64" translate="yes" xml:space="preserve">
          <source>to use it.</source>
          <target state="translated">그것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fd3e2ebf7bd54402b7055af9ea9a035226639dee" translate="yes" xml:space="preserve">
          <source>virtualenv</source>
          <target state="translated">virtualenv</target>
        </trans-unit>
        <trans-unit id="5ca2f74571c810c577156329e87cc0ddfcca5e2a" translate="yes" xml:space="preserve">
          <source>waits first passed awaitable object and returns list of results.</source>
          <target state="translated">먼저 전달 된 대기 가능 객체를 대기하고 결과 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="98423fae88eb35dd6b1c08b415a858f73ca49566" translate="yes" xml:space="preserve">
          <source>will be called first,
and after that all running tasks will be cancelled (including</source>
          <target state="translated">먼저 호출 된 후 실행중인 모든 작업이 취소됩니다 (</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
