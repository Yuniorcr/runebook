<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fluent-logger/">
    <body>
      <group id="fluent-logger">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="a21a8a881b6a752307e8dfd0430826ee85f9f556" translate="yes" xml:space="preserve">
          <source>, so it&amp;rsquo;s
just a matter of importing from a different module.</source>
          <target state="translated">이므로 다른 모듈에서 가져 오기만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="ea595cbc278adbcaf2a36a0c85082fe36f53145c" translate="yes" xml:space="preserve">
          <source>- there are also corresponding asynchronous versions in</source>
          <target state="translated">-해당하는 비동기 버전도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b70ddc24849145e9a1e00ab4f3f9c00176de4ed5" translate="yes" xml:space="preserve">
          <source>. By doing so the thread doing the logging won&amp;rsquo;t block
even when the queue is full, the new event will be added to the queue by discarding the oldest one.</source>
          <target state="translated">. 이렇게하면 큐가 가득 차도 로깅을 수행하는 스레드가 차단되지 않고 가장 오래된 이벤트를 삭제하여 새 이벤트가 큐에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5de810e0f59c2172744fbb3111ee803356b40da3" translate="yes" xml:space="preserve">
          <source>. If an error happens in</source>
          <target state="translated">. 오류가 발생하면</target>
        </trans-unit>
        <trans-unit id="216b446b07e7c4162a7469e027cda332c8bbf1ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fluent/fluentd&quot;&gt;Fluentd&lt;/a&gt; solves that problem by
having: easy installation, small footprint, plugins, reliable buffering,
log forwarding, etc.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fluent/fluentd&quot;&gt;Fluentd&lt;/a&gt; 는 간편한 설치, 작은 설치 공간, 플러그인, 안정적인 버퍼링, 로그 전달 등을 통해 이러한 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="60a2a58672f80e060bc7b9b6f2b8a6cedb764bf3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Version 0.8.0 is the last version supporting Python 2.6, 3.2 and 3.3</source>
          <target state="translated">&lt;strong&gt;중요&lt;/strong&gt; : 버전 0.8.0은 Python 2.6, 3.2 및 3.3을 지원하는 마지막 버전입니다.</target>
        </trans-unit>
        <trans-unit id="3c1527caf4277d226017b3394ed2d48ddeac041e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: please note that it&amp;rsquo;s important to close the sender or the handler at program termination. This will make
sure the communication thread terminates and it&amp;rsquo;s joined correctly. Otherwise the program won&amp;rsquo;t exit, waiting for
the thread, unless forcibly killed.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 프로그램 종료시 발신자 또는 처리기를 닫는 것이 중요합니다. 이렇게하면 통신 스레드가 종료되고 올바르게 결합됩니다. 그렇지 않으면 강제로 종료되지 않는 한 프로그램이 종료되지 않고 스레드를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="58210e5c57d0eb9c889c78cf5b86ab511b64ebf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: setting</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 설정</target>
        </trans-unit>
        <trans-unit id="9b8bdd5906b2473abcf9da54746f8ad244bd2d0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fluent-logger-python&lt;/strong&gt; is a Python library, to record the events from
Python application.</source>
          <target state="translated">&lt;strong&gt;fluent-logger-python&lt;/strong&gt; 은 Python 애플리케이션의 이벤트를 기록하는 Python 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="d8bd5092e9624958cd47257c6b06c5f8409eb291" translate="yes" xml:space="preserve">
          <source>A Python logging handler for Fluentd event collector</source>
          <target state="translated">Fluentd 이벤트 수집기를위한 Python 로깅 처리기</target>
        </trans-unit>
        <trans-unit id="ac3460a57df0a3917d6dbab7b32a0549e4e84f5b" translate="yes" xml:space="preserve">
          <source>A sample configuration</source>
          <target state="translated">샘플 구성</target>
        </trans-unit>
        <trans-unit id="b1eb8e6e4efec052fab27c8d56577098488c63d9" translate="yes" xml:space="preserve">
          <source>After that, type following command:</source>
          <target state="translated">그 후 다음 명령을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="8038e0fed9c1eeb7200740c230a8de9bf439e1be" translate="yes" xml:space="preserve">
          <source>Apache License, Version 2.0</source>
          <target state="translated">Apache 라이센스, 버전 2.0</target>
        </trans-unit>
        <trans-unit id="58bd2fe76169f5403bf47169a6773a253151dc9c" translate="yes" xml:space="preserve">
          <source>Asynchronous Communication</source>
          <target state="translated">비동기 통신</target>
        </trans-unit>
        <trans-unit id="30082596023a17e7154e72d585fc89dcef1a43ec" translate="yes" xml:space="preserve">
          <source>Besides the regular interfaces - the event-based one provided by</source>
          <target state="translated">일반 인터페이스 외에-이벤트 기반 인터페이스</target>
        </trans-unit>
        <trans-unit id="979a800136b21987cbd1b870075b511a6d57a7ac" translate="yes" xml:space="preserve">
          <source>By default, the logger assumes fluentd daemon is launched locally. You
can also specify remote logger by passing the options.</source>
          <target state="translated">기본적으로 로거는 fluentd 데몬이 로컬로 시작되었다고 가정합니다. 옵션을 전달하여 원격 로거를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="00100112fcb334f093b99f54cf7ebd3007d9eec9" translate="yes" xml:space="preserve">
          <source>Circular queue mode</source>
          <target state="translated">순환 대기열 모드</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">기여자</target>
        </trans-unit>
        <trans-unit id="3993e83e41540a6e6f1d640fbba557239ea07c67" translate="yes" xml:space="preserve">
          <source>Event-Based Interface</source>
          <target state="translated">이벤트 기반 인터페이스</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="2bf9753b533bea49b7a93bfebb18a4761147c35f" translate="yes" xml:space="preserve">
          <source>First, you need to call</source>
          <target state="translated">먼저 전화해야합니다.</target>
        </trans-unit>
        <trans-unit id="96c31c589eac40152741fc3d74698e0ef3269fbc" translate="yes" xml:space="preserve">
          <source>FluentHandler</source>
          <target state="translated">FluentHandler</target>
        </trans-unit>
        <trans-unit id="c9ae4e5b776cd264db9d5466d6a422df72d2d7fa" translate="yes" xml:space="preserve">
          <source>FluentSender</source>
          <target state="translated">FluentSender</target>
        </trans-unit>
        <trans-unit id="332e8c8c029d72c0d6efa837b0fb15469a5ee9a9" translate="yes" xml:space="preserve">
          <source>FluentSender Interface</source>
          <target state="translated">FluentSender 인터페이스</target>
        </trans-unit>
        <trans-unit id="53b565c46ccbc1717fa3617d1b0113ce7fb55f0a" translate="yes" xml:space="preserve">
          <source>Fluentd daemon must be launched with a tcp source configuration:</source>
          <target state="translated">Fluentd 데몬은 tcp 소스 구성으로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="e925f0bfa9ad083353d470016428dfbf1706a2d6" translate="yes" xml:space="preserve">
          <source>For instance, for the event-based interface:</source>
          <target state="translated">예를 들어 이벤트 기반 인터페이스의 경우 :</target>
        </trans-unit>
        <trans-unit id="39eb1c4d671b887c01206612e03bf1b364ce9808" translate="yes" xml:space="preserve">
          <source>For sending event, call</source>
          <target state="translated">이벤트를 보내려면</target>
        </trans-unit>
        <trans-unit id="42ea5308a914664d7b9cd09a3cee5c2964212cb6" translate="yes" xml:space="preserve">
          <source>Handler for buffer overflow</source>
          <target state="translated">버퍼 오버 플로우 처리기</target>
        </trans-unit>
        <trans-unit id="a4d23d184303812522a35f65be63e515cf61405c" translate="yes" xml:space="preserve">
          <source>If you want to shutdown the client, call</source>
          <target state="translated">클라이언트를 종료하려면 다음을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="f17de7905fbefeda5b80f7b6fc052b152489c915" translate="yes" xml:space="preserve">
          <source>In some applications it can be especially important to guarantee that the logging process won&amp;rsquo;t block under &lt;em&gt;any&lt;/em&gt;
circumstance, even when it&amp;rsquo;s logging faster than the sending thread could handle (&lt;em&gt;backpressure&lt;/em&gt;). In this case it&amp;rsquo;s
possible to enable the</source>
          <target state="translated">일부 애플리케이션에서는 전송 스레드가 처리 할 수있는 것보다 더 빠르게 로깅 &lt;em&gt;하는&lt;/em&gt; 경우에도 ( &lt;em&gt;backpressure&lt;/em&gt; ) 로깅 프로세스가 &lt;em&gt;어떤&lt;/em&gt; 상황에서도 차단되지 않도록 보장하는 것이 특히 중요 할 수 있습니다 . 이 경우 활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a8e735381d08033b7f0a7d02b237864e33305abf" translate="yes" xml:space="preserve">
          <source>Initialization code of Event-Based API is below:</source>
          <target state="translated">이벤트 기반 API의 초기화 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="7f2c7143bb55398574c9fa448c3e00a4d8dd91bf" translate="yes" xml:space="preserve">
          <source>Many web/mobile applications generate huge amount of event logs (c,f.
login, logout, purchase, follow, etc). To analyze these event logs could
be really valuable for improving the service. However, the challenge is
collecting these logs easily and reliably.</source>
          <target state="translated">많은 웹 / 모바일 애플리케이션은 엄청난 양의 이벤트 로그 (c, f. 로그인, 로그 아웃, 구매, 팔로우 등)를 생성합니다. 이러한 이벤트 로그를 분석하는 것은 서비스를 개선하는 데 매우 유용 할 수 있습니다. 그러나 문제는 이러한 로그를 쉽고 안정적으로 수집하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b45f0eb56832ae32d3b4a389cfee7552abeff3f1" translate="yes" xml:space="preserve">
          <source>Need wheel package.</source>
          <target state="translated">휠 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dd2a4355b5b74bc0475e338b6e435429f1001c8f" translate="yes" xml:space="preserve">
          <source>Other methods for Event-Based Interface.</source>
          <target state="translated">이벤트 기반 인터페이스를위한 기타 방법.</target>
        </trans-unit>
        <trans-unit id="72e6526fcd4929cf5d2dc77b7ab15a36652874e7" translate="yes" xml:space="preserve">
          <source>Patches contributed by &lt;a href=&quot;https://github.com/fluent/fluent-logger-python/contributors&quot;&gt;those
people&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fluent/fluent-logger-python/contributors&quot;&gt;그 사람들이&lt;/a&gt; 제공 한 패치 .</target>
        </trans-unit>
        <trans-unit id="b8b32846f6d3c1a9fdb83a976c0b02f5767fd4f2" translate="yes" xml:space="preserve">
          <source>Python 2.7 or 3.4+</source>
          <target state="translated">Python 2.7 또는 3.4 이상</target>
        </trans-unit>
        <trans-unit id="071d87d3eb51c9578f9cc0a641968eba91b6ad2f" translate="yes" xml:space="preserve">
          <source>Python logging.Handler interface</source>
          <target state="translated">Python logging.Handler 인터페이스</target>
        </trans-unit>
        <trans-unit id="d41f56cea1ac933d25c57aebc6522e2b6c58eb87" translate="yes" xml:space="preserve">
          <source>Release</source>
          <target state="translated">해제</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">테스팅</target>
        </trans-unit>
        <trans-unit id="b1d473d6e5c9c193cd1c9eab41692e30f5cb1872" translate="yes" xml:space="preserve">
          <source>Testing can be done using
&lt;a href=&quot;https://nose.readthedocs.org/en/latest/&quot;&gt;nose&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://nose.readthedocs.org/en/latest/&quot;&gt;코를&lt;/a&gt; 사용하여 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c0cb1002d5452b40b90796409464637cf309723" translate="yes" xml:space="preserve">
          <source>The interfaces in</source>
          <target state="translated">의 인터페이스</target>
        </trans-unit>
        <trans-unit id="5690fb26e272d2c256af906fc72c4dee7462db20" translate="yes" xml:space="preserve">
          <source>Then, please create the events like this. This will send the event to
fluentd, with tag &amp;lsquo;app.follow&amp;rsquo; and the attributes &amp;lsquo;from&amp;rsquo; and &amp;lsquo;to&amp;rsquo;.</source>
          <target state="translated">그런 다음 이와 같은 이벤트를 만드십시오. 그러면 이벤트가 'app.follow'태그와 'from'및 'to'속성과 함께 fluentd로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="87bfe669bd3c7b443feb7d794ca3fbd99806f226" translate="yes" xml:space="preserve">
          <source>This API is a wrapper for</source>
          <target state="translated">이 API는</target>
        </trans-unit>
        <trans-unit id="27b8911d5e6673232e84add5c0cc9d493eabb2f5" translate="yes" xml:space="preserve">
          <source>This client-library also has</source>
          <target state="translated">이 클라이언트 라이브러리에는</target>
        </trans-unit>
        <trans-unit id="0555a169862aa43d30511518bad8774bd928539b" translate="yes" xml:space="preserve">
          <source>This handler is also called when pending events exist during</source>
          <target state="translated">이 핸들러는 보류중인 이벤트가</target>
        </trans-unit>
        <trans-unit id="9aa6c17b6a04f9445c78a61307d9141b1b27f01a" translate="yes" xml:space="preserve">
          <source>This library is distributed as &amp;lsquo;fluent-logger&amp;rsquo; python package. Please
execute the following command to install it.</source>
          <target state="translated">이 라이브러리는 'fluent-logger'python 패키지로 배포됩니다. 설치하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="266b6a7f698f00c1e776de52a94bf7607dcf19a5" translate="yes" xml:space="preserve">
          <source>To quickly test your setup, add a matcher that logs to the stdout:</source>
          <target state="translated">설정을 빠르게 테스트하려면 stdout에 기록하는 매처를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="cdd219e355d1ce77e1cc572f47cf753e588ae044" translate="yes" xml:space="preserve">
          <source>To send events with nanosecond-precision timestamps (Fluent 0.14 and up),
specify</source>
          <target state="translated">나노초 정밀도 타임 스탬프 (Fluent 0.14 이상)로 이벤트를 보내려면 다음을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">진실</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="f353a2dc478d9577b16ee57a328acb3b230d422b" translate="yes" xml:space="preserve">
          <source>You can also customize formatter via logging.config.dictConfig</source>
          <target state="translated">logging.config.dictConfig를 통해 포맷터를 사용자 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5740ea28df3434ced96cd5c1c2c6686fd2bbd9b6" translate="yes" xml:space="preserve">
          <source>You can detect an error via return value of</source>
          <target state="translated">반환 값을 통해 오류를 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f61ef350222de5de074ddb9a4e15b8ad2227163f" translate="yes" xml:space="preserve">
          <source>You can inject your own custom proc to handle buffer overflow in the event of connection failure. This will mitigate the loss of data instead of simply throwing data away.</source>
          <target state="translated">연결 실패시 버퍼 오버플로를 처리하기 위해 사용자 지정 proc을 삽입 할 수 있습니다. 이렇게하면 단순히 데이터를 버리는 대신 데이터 손실을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f54fdc5d5b8af7ed6080f6a94698ccfe833666dd" translate="yes" xml:space="preserve">
          <source>You should handle any exception in handler. fluent-logger ignores exceptions from</source>
          <target state="translated">핸들러에서 모든 예외를 처리해야합니다. fluent-logger는 예외를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="80bdc1068071cf0482d59c1e8d742a9f3c925bc3" translate="yes" xml:space="preserve">
          <source>and get an error object using</source>
          <target state="translated">사용하여 오류 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b9307d41990bad33d3dd6a246dd1c1b725a773fd" translate="yes" xml:space="preserve">
          <source>and the python logging one
provided by</source>
          <target state="translated">에서 제공하는 파이썬 로깅 하나</target>
        </trans-unit>
        <trans-unit id="094df23c23c6fb9436eefeb96a1ed9cd85846696" translate="yes" xml:space="preserve">
          <source>are exactly the same as those in</source>
          <target state="translated">의 그것과 정확히 동일합니다</target>
        </trans-unit>
        <trans-unit id="5ab76696f55628281d61d93906bf8707719bb28d" translate="yes" xml:space="preserve">
          <source>asynchandler</source>
          <target state="translated">비동기 처리기</target>
        </trans-unit>
        <trans-unit id="e7d959699191959799c6227313a38acb3f8f8fe0" translate="yes" xml:space="preserve">
          <source>asynchandler.FluentHandler</source>
          <target state="translated">asynchandler.FluentHandler</target>
        </trans-unit>
        <trans-unit id="92c47b763eaaf4e9689af2c24f6278e223cc69bb" translate="yes" xml:space="preserve">
          <source>asyncsender</source>
          <target state="translated">비동기 발신자</target>
        </trans-unit>
        <trans-unit id="475b86f7d41b0c29a3cf4d188cfa70a114fc81d2" translate="yes" xml:space="preserve">
          <source>asyncsender.FluentSender</source>
          <target state="translated">asyncsender.FluentSender</target>
        </trans-unit>
        <trans-unit id="445bd0e792c24c12a2ff4e95192da41053074725" translate="yes" xml:space="preserve">
          <source>buffer_overflow_handler</source>
          <target state="translated">buffer_overflow_handler</target>
        </trans-unit>
        <trans-unit id="ea4e6c11f33118988ec3a207b737a7a7b2cce9b4" translate="yes" xml:space="preserve">
          <source>circular queue</source>
          <target state="translated">순환 대기열</target>
        </trans-unit>
        <trans-unit id="6b2b33de79989e971af670279210e2106b3fe227" translate="yes" xml:space="preserve">
          <source>class for Python logging
module.</source>
          <target state="translated">Python 로깅 모듈 용 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2553a9bd0bdcd6eb0bf6c9b17385b6c5a9a5420a" translate="yes" xml:space="preserve">
          <source>close()</source>
          <target state="translated">닫기()</target>
        </trans-unit>
        <trans-unit id="2e96e89125f4c1aef797410a4bfdb32c0632ef0c" translate="yes" xml:space="preserve">
          <source>emit</source>
          <target state="translated">방출하다</target>
        </trans-unit>
        <trans-unit id="74893a875dfd2526247611a38ba00f85e6cc1b78" translate="yes" xml:space="preserve">
          <source>event.Event</source>
          <target state="translated">event.Event</target>
        </trans-unit>
        <trans-unit id="31a81ec93db3740ee3984fc40e34a60b0412643d" translate="yes" xml:space="preserve">
          <source>handler</source>
          <target state="translated">매니저</target>
        </trans-unit>
        <trans-unit id="7265a26268e1b6be1d2a902862877c36f4160816" translate="yes" xml:space="preserve">
          <source>handler.FluentHandler</source>
          <target state="translated">handler.FluentHandler</target>
        </trans-unit>
        <trans-unit id="80cc38321e4cd5534ccaea8135f041417988045f" translate="yes" xml:space="preserve">
          <source>has one limitation which can&amp;rsquo;t return success/failure result.</source>
          <target state="translated">성공 / 실패 결과를 반환 할 수없는 한 가지 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f39bf585644f4cb979f1182ddc9154dc97f3a89" translate="yes" xml:space="preserve">
          <source>in the</source>
          <target state="translated">에서</target>
        </trans-unit>
        <trans-unit id="5de6d4c8d9b3334c86ee31b760c9c22dfce242be" translate="yes" xml:space="preserve">
          <source>is a structured event logger for Fluentd.</source>
          <target state="translated">Fluentd 용 구조화 된 이벤트 로거입니다.</target>
        </trans-unit>
        <trans-unit id="79834a5a40480a8072c01a517c2a44ee27982372" translate="yes" xml:space="preserve">
          <source>last_error</source>
          <target state="translated">last_error</target>
        </trans-unit>
        <trans-unit id="aa0f455e347e36c51df6a59c28daf3290191be09" translate="yes" xml:space="preserve">
          <source>logger
instance. This call needs to be called only once, at the beginning of
the application for example.</source>
          <target state="translated">로거 인스턴스. 이 호출은 예를 들어 응용 프로그램 시작시 한 번만 호출하면됩니다.</target>
        </trans-unit>
        <trans-unit id="52899af8348da562189740c937c96981ca3defec" translate="yes" xml:space="preserve">
          <source>logging.yaml</source>
          <target state="translated">logging.yaml</target>
        </trans-unit>
        <trans-unit id="c3ebeb46278c9a05719cf3ae6a81f99e2ad831d0" translate="yes" xml:space="preserve">
          <source>method with your event. Following example will send the event to
fluentd, with tag &amp;lsquo;app.follow&amp;rsquo; and the attributes &amp;lsquo;from&amp;rsquo; and &amp;lsquo;to&amp;rsquo;.</source>
          <target state="translated">이벤트 방법. 다음 예제는 'app.follow'태그와 'from'및 'to'속성과 함께 fluentd에 이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="946465000bd9e24c032001a54783f3574c94142e" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="translated">방법.</target>
        </trans-unit>
        <trans-unit id="db91a23b57b4372ad3361fcacec0e65611b851c4" translate="yes" xml:space="preserve">
          <source>mode, by passing</source>
          <target state="translated">모드, 통과하여</target>
        </trans-unit>
        <trans-unit id="b3eb9bd934f07f98fb01761443b5bfd7ac1521d5" translate="yes" xml:space="preserve">
          <source>msgpack-python</source>
          <target state="translated">msgpack-python</target>
        </trans-unit>
        <trans-unit id="24183108a923daa19d96cd2486cfa5b57961d2a7" translate="yes" xml:space="preserve">
          <source>nanosecond_precision</source>
          <target state="translated">나노초 _ 정밀</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">의 위에</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="7067ae9936228297efbec4036f087d50468ce194" translate="yes" xml:space="preserve">
          <source>or for the python logging interface:</source>
          <target state="translated">또는 파이썬 로깅 인터페이스의 경우 :</target>
        </trans-unit>
        <trans-unit id="aa92df48663b19ec217434b2529739ea5fcc868f" translate="yes" xml:space="preserve">
          <source>parameter of</source>
          <target state="translated">매개 변수</target>
        </trans-unit>
        <trans-unit id="18a93a90f5c548a1b29a92118734174b68fb4b51" translate="yes" xml:space="preserve">
          <source>queue_circular</source>
          <target state="translated">queue_circular</target>
        </trans-unit>
        <trans-unit id="ecea3d23b1b921417af2af45446c25f8cd32d9cb" translate="yes" xml:space="preserve">
          <source>respectively. These versions use a separate thread to handle the communication with the remote fluentd
server. In this way the client of the library won&amp;rsquo;t be blocked during the logging of the events, and won&amp;rsquo;t risk going
into timeout if the fluentd server becomes unreachable. Also it won&amp;rsquo;t be slowed down by the network overhead.</source>
          <target state="translated">각기. 이러한 버전은 별도의 스레드를 사용하여 원격 fluentd 서버와의 통신을 처리합니다. 이런 식으로 라이브러리의 클라이언트는 이벤트 로깅 중에 차단되지 않으며 fluentd 서버에 연결할 수 없게 되더라도 시간 초과 위험이 없습니다. 또한 네트워크 오버 헤드로 인해 속도가 느려지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="414e681ebabcd2f23de1f32468992b9c81c5f909" translate="yes" xml:space="preserve">
          <source>returns</source>
          <target state="translated">보고</target>
        </trans-unit>
        <trans-unit id="acc6a31daa43161b626de8ab3de5e1e70ad5a4c0" translate="yes" xml:space="preserve">
          <source>sender</source>
          <target state="translated">보내는 사람</target>
        </trans-unit>
        <trans-unit id="70bedb1384711af39b9c5d52704672a6d66cd4c8" translate="yes" xml:space="preserve">
          <source>sender.FluentSender</source>
          <target state="translated">sender.FluentSender</target>
        </trans-unit>
        <trans-unit id="566103808d9956bc0eca2983dde7b44f38929167" translate="yes" xml:space="preserve">
          <source>sender.setup()</source>
          <target state="translated">sender.setup ()</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="7286623d3e3e75ec5192f068b1babb59ba2d7549" translate="yes" xml:space="preserve">
          <source>to create global</source>
          <target state="translated">글로벌 만들기</target>
        </trans-unit>
        <trans-unit id="9ab96d9690092a50c81fdfe97f6f46121f20c643" translate="yes" xml:space="preserve">
          <source>will cause loss of events if the queue fills up completely! Make sure
that this doesn&amp;rsquo;t happen, or it&amp;rsquo;s acceptable for your application.</source>
          <target state="translated">대기열이 완전히 차면 이벤트가 손실됩니다! 이런 일이 발생하지 않거나 귀하의 응용 프로그램에 허용되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a0ebc00ce2803c4b05ae16c519fdb6afbeecd7c8" translate="yes" xml:space="preserve">
          <source>would be:</source>
          <target state="translated">될 것입니다 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
