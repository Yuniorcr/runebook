<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/itemadapter/">
    <body>
      <group id="itemadapter">
        <trans-unit id="c39044a34ace40d0679da61028735406025f0c46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;&lt;code&gt;dataclass&lt;/code&gt;&lt;/a&gt;-based classes</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt; &lt;code&gt;dataclass&lt;/code&gt; &lt;/a&gt; 클래스 기반 클래스</target>
        </trans-unit>
        <trans-unit id="a51b05fcc6934e135d543dbe39a24076691602c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.field&quot;&gt;&lt;code&gt;dataclasses.field.metadata&lt;/code&gt;&lt;/a&gt;
for &lt;code&gt;dataclass&lt;/code&gt;-based items</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.field&quot;&gt; &lt;code&gt;dataclasses.field.metadata&lt;/code&gt; &lt;/a&gt; &lt;code&gt;dataclass&lt;/code&gt; 기반 항목에 대한 dataclasses.field.metadata</target>
        </trans-unit>
        <trans-unit id="2a685997855c6062388e252abe15cbd0584d6b96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.scrapy.org/en/latest/topics/items.html#item-fields&quot;&gt;&lt;code&gt;scrapy.item.Field&lt;/code&gt;&lt;/a&gt;
for &lt;code&gt;scrapy.item.Item&lt;/code&gt;s</source>
          <target state="translated">&lt;a href=&quot;https://docs.scrapy.org/en/latest/topics/items.html#item-fields&quot;&gt; &lt;code&gt;scrapy.item.Field&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;code&gt;scrapy.item.Item&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="428cd65e0d42273e0eed5ddcbd5e369c6accc3e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/attrs/&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;: optional, needed to interact with &lt;code&gt;attrs&lt;/code&gt;-based items</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/attrs/&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt; : 선택 사항, &lt;code&gt;attrs&lt;/code&gt; 기반 항목과 상호 작용하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9a1b9a65a63b018999fd9353b4421b3ecf6fb5a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://scrapy.org/&quot;&gt;&lt;code&gt;scrapy&lt;/code&gt;&lt;/a&gt;: optional, needed to interact with &lt;code&gt;scrapy&lt;/code&gt; items</source>
          <target state="translated">&lt;a href=&quot;https://scrapy.org/&quot;&gt; &lt;code&gt;scrapy&lt;/code&gt; &lt;/a&gt; : 선택 사항, &lt;code&gt;scrapy&lt;/code&gt; 아이템과 상호 작용하는 데 필요</target>
        </trans-unit>
        <trans-unit id="e3eb4c78aa3f9bcdc674e8c224aa7d823a893b48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.attrs.org&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;-based classes</source>
          <target state="translated">&lt;a href=&quot;https://www.attrs.org&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt; 기반 클래스</target>
        </trans-unit>
        <trans-unit id="f1cd14203a604ccf9ff25e3be5879faa6e508e6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.attrs.org/en/stable/examples.html#metadata&quot;&gt;&lt;code&gt;attr.Attribute.metadata&lt;/code&gt;&lt;/a&gt;
for &lt;code&gt;attrs&lt;/code&gt;-based items</source>
          <target state="translated">&lt;a href=&quot;https://www.attrs.org/en/stable/examples.html#metadata&quot;&gt; &lt;code&gt;attr.Attribute.metadata&lt;/code&gt; &lt;/a&gt; &lt;code&gt;attrs&lt;/code&gt; 기반 항목에 대한 attr.Attribute.metadata</target>
        </trans-unit>
        <trans-unit id="04626f8da1040f84eb1a1f2a1e2fda5b0c4ba0d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ItemAdapter&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="b2e5c6af1b5dd09726cc8043369e442047883342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ItemAdapter&lt;/code&gt; implements the
&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;MutableMapping&lt;/code&gt; interface&lt;/a&gt;,
providing a &lt;code&gt;dict&lt;/code&gt;-like API to manipulate data for the object it wraps
(which is modified in-place).</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 는 &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;MutableMapping&lt;/code&gt; 인터페이스를&lt;/a&gt; 구현하여 래핑하는 객체 (제자리에서 수정 됨)에 대한 데이터를 조작하기 위해 &lt;code&gt;dict&lt;/code&gt; 와 유사한 API를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6572433208ea22a136508e4b9ed29c3019712f75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;attrs&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="b666f0a69430a45ee9556a45793b81544d20e7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataclass&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;dataclass&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="e60927b95542343be704bb379ab2e85d4aadba20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataclasses&lt;/code&gt; (&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;stdlib&lt;/a&gt; in Python 3.7+,
or its &lt;a href=&quot;https://pypi.org/project/dataclasses/&quot;&gt;backport&lt;/a&gt; in Python 3.6): optional, needed
to interact with &lt;code&gt;dataclass&lt;/code&gt;-based items</source>
          <target state="translated">&lt;code&gt;dataclasses&lt;/code&gt; ( Python 3.7+의 &lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;stdlib&lt;/a&gt; 또는 Python 3.6 의 &lt;a href=&quot;https://pypi.org/project/dataclasses/&quot;&gt;백 포트&lt;/a&gt; ) : 선택 사항이며 데이터 &lt;code&gt;dataclass&lt;/code&gt; 기반 항목 과 상호 작용하는 데 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="7c5d6c730313397cb38e2f5c14fe475727214db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_item&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;is_item&lt;/code&gt; 함수</target>
        </trans-unit>
        <trans-unit id="b1f085a739a6cdae392a63f03c4afc0cd5d8f1f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemadapter&lt;/code&gt; is available on &lt;a href=&quot;https://pypi.python.org/pypi/itemadapter&quot;&gt;&lt;code&gt;PyPI&lt;/code&gt;&lt;/a&gt;, it can be installed with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;itemadapter&lt;/code&gt; 는 &lt;a href=&quot;https://pypi.python.org/pypi/itemadapter&quot;&gt; &lt;code&gt;PyPI&lt;/code&gt; &lt;/a&gt; 에서 사용할 수 있으며 &lt;code&gt;pip&lt;/code&gt; 와 함께 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58fe69cf64ad126b2fef520c812b3e2df87d0ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemadapter&lt;/code&gt; is distributed under a &lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;BSD-3&lt;/a&gt; license.</source>
          <target state="translated">&lt;code&gt;itemadapter&lt;/code&gt; 는 &lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;BSD-3&lt;/a&gt; 라이센스에 따라 배포됩니다 .</target>
        </trans-unit>
        <trans-unit id="af048327686669361f83938ef8fdb24b6f64a775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scrapy.item.Item&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;scrapy.item.Item&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="0d6c636da292825f031cdcebee082fb7f8970d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scrapy.item.Item&lt;/code&gt;, &lt;code&gt;dataclass&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt; objects allow the inclusion of
arbitrary field metadata, which can be retrieved with the
&lt;code&gt;ItemAdapter.get_field_meta&lt;/code&gt; method. The definition procedure depends on the
underlying type.</source>
          <target state="translated">&lt;code&gt;scrapy.item.Item&lt;/code&gt; , &lt;code&gt;dataclass&lt;/code&gt; 및 &lt;code&gt;attrs&lt;/code&gt; 객체는 &lt;code&gt;ItemAdapter.get_field_meta&lt;/code&gt; 메소드 로 검색 할 수있는 임의의 필드 메타 데이터를 포함 할 수 있습니다 . 정의 절차는 기본 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="27effa6cc4f099a76e07b24e8641dbc1acfd303d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;itemadapter.utils.is_item(obj: Any) -&amp;gt; bool&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;itemadapter.utils.is_item(obj: Any) -&amp;gt; bool&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f4aa11fd91c3e564c645b0ae99572ee470c22dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;class &lt;code&gt;itemadapter.adapter.ItemAdapter(item: Any)&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;class &lt;code&gt;itemadapter.adapter.ItemAdapter(item: Any)&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="a1182e754041448e40dbd4c28d8b35739f3c38be" translate="yes" xml:space="preserve">
          <source>Common interface for data container classes</source>
          <target state="translated">데이터 컨테이너 클래스를위한 공통 인터페이스</target>
        </trans-unit>
        <trans-unit id="062e6d76df4420148c10d5486428e80b60b06f5d" translate="yes" xml:space="preserve">
          <source>Converting to dict</source>
          <target state="translated">dict로 변환</target>
        </trans-unit>
        <trans-unit id="19c955e31072e31bcb91c9787e822e106fc97599" translate="yes" xml:space="preserve">
          <source>Currently supported types are:</source>
          <target state="translated">현재 지원되는 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="67489a913609246287d502a6858a01bbbef318e8" translate="yes" xml:space="preserve">
          <source>Metadata support</source>
          <target state="translated">메타 데이터 지원</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">더 많은 예</target>
        </trans-unit>
        <trans-unit id="8e780abb4027d7a01b5a4c7af1256f534d29fc21" translate="yes" xml:space="preserve">
          <source>Note that just passing an adapter object to the &lt;code&gt;dict&lt;/code&gt; built-in also works,
but it doesn't traverse the object recursively converting nested items:</source>
          <target state="translated">어댑터 객체를 &lt;code&gt;dict&lt;/code&gt; 내장에 전달하는 것만 으로도 작동하지만 중첩 된 항목을 재귀 적으로 변환하는 객체를 탐색하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">퍼블릭 API</target>
        </trans-unit>
        <trans-unit id="769122f135910e46e3e49288118dc65130f6542d" translate="yes" xml:space="preserve">
          <source>Python 3.5+</source>
          <target state="translated">Python 3.5 이상</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="21d19a6ae534e3c50608c858bca51068c284d9bd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the given object belongs to one of the supported types,
&lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;True&lt;/code&gt; 주어진 객체가 지원되는 유형 중 하나에 속하는 경우 &lt;code&gt;False&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="f78535db5407b83f4cd79002b8ba5fd225c3bf02" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.KeysView&quot;&gt;keys view&lt;/a&gt;
with the names of all the defined fields for the item.</source>
          <target state="translated">항목에 대해 정의 된 모든 필드의 이름이 있는 &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.KeysView&quot;&gt;키보기&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1b567976a904701d7e415370f5656731bffde745" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3/library/types.html#types.MappingProxyType&quot;&gt;&lt;code&gt;MappingProxyType&lt;/code&gt;&lt;/a&gt;
object, which is a read-only mapping with metadata about the given field. If the item class does not
support field metadata, or there is no metadata for the given field, an empty object is returned.</source>
          <target state="translated">지정된 필드에 대한 메타 데이터가있는 읽기 전용 매핑 인 &lt;a href=&quot;https://docs.python.org/3/library/types.html#types.MappingProxyType&quot;&gt; &lt;code&gt;MappingProxyType&lt;/code&gt; &lt;/a&gt; 개체를 반환 합니다. 항목 클래스가 필드 메타 데이터를 지원하지 않거나 지정된 필드에 대한 메타 데이터가없는 경우 빈 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8dd5769f6df8f92971895f76dc0130965df6aee2" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;dict&lt;/code&gt; object with the contents of the adapter. This works slightly different than
calling &lt;code&gt;dict(adapter)&lt;/code&gt;, because it's applied recursively to nested items (if there are any).</source>
          <target state="translated">어댑터의 내용이 포함 된 &lt;code&gt;dict&lt;/code&gt; 객체를 반환합니다 . 중첩 된 항목 (있는 경우)에 재귀 적으로 적용되기 때문에 &lt;code&gt;dict(adapter)&lt;/code&gt; 호출과 약간 다르게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="25acdd32606a08d4f7ebd1a1c76f85dbf3894dfd" translate="yes" xml:space="preserve">
          <source>Some additional methods are available:</source>
          <target state="translated">몇 가지 추가 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8899cbe0a2a5e23f302e9ffef69b8fc95edd54f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ItemAdapter&lt;/code&gt; class is a wrapper for data container objects, providing a
common interface to handle objects of different types in an uniform manner,
regardless of their underlying implementation.</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 의 클래스는 관계없이 근본적인 구현, 균일 한 방식으로 다양한 유형의 목적 처리하는 공통 인터페이스를 제공하는 데이터 컨테이너 객체에 대한 래퍼이다.</target>
        </trans-unit>
        <trans-unit id="fcea3a28ba8fa773559884252c3f3f539c016d05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ItemAdapter&lt;/code&gt; class provides the &lt;code&gt;asdict&lt;/code&gt; method, which converts
nested items recursively. Consider the following example:</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 의 클래스는 제공 &lt;code&gt;asdict&lt;/code&gt; 의 재귀 적으로 중첩 된 항목을 변환하는 방법을. 다음 예를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="3dacca9388b578435819aa3c25693b6fb0c590f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ItemAdapter&lt;/code&gt; object can be treated much like a dictionary:</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 의 객체는 많은 사전처럼 취급 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="7fb7ea8184f198150f1e392e56c990ff688b522c" translate="yes" xml:space="preserve">
          <source>The following is a simple example using a &lt;code&gt;dataclass&lt;/code&gt; object.
Consider the following type definition:</source>
          <target state="translated">다음은 데이터 &lt;code&gt;dataclass&lt;/code&gt; 객체 를 사용하는 간단한 예제 입니다. 다음 유형 정의를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="92cb01be30a6c1b44bbc7667411ad48bc1b6562d" translate="yes" xml:space="preserve">
          <source>The returned value is taken from the following sources, depending on the item type:</source>
          <target state="translated">반환 된 값은 항목 유형에 따라 다음 소스에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d4004f72dce53eaf45dc8a5a627b15a836ba6ea9" translate="yes" xml:space="preserve">
          <source>The wrapped object is modified in-place:</source>
          <target state="translated">래핑 된 개체는 내부에서 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="97fe7f728d9454979c2e9de966c0313459206279" translate="yes" xml:space="preserve">
          <source>itemadapter</source>
          <target state="translated">itemadapter</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
