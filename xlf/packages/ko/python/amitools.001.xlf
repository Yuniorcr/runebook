<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/amitools/">
    <body>
      <group id="amitools">
        <trans-unit id="d9f195e299ddca93f5e5a85a2326b688e5f96728" translate="yes" xml:space="preserve">
          <source>(I use the mingw gcc compiler here to build the extension)</source>
          <target state="translated">(여기에서는 mingw gcc 컴파일러를 사용하여 확장을 빌드합니다)</target>
        </trans-unit>
        <trans-unit id="1a7b87abf847dd610c5038e20e29b51559792571" translate="yes" xml:space="preserve">
          <source>.fd File Parser &lt;code&gt;amitools.fd&lt;/code&gt;</source>
          <target state="translated">.fd 파일 파서 &lt;code&gt;amitools.fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="afc4ee41c58df8b221539ceca70fa1dfe7559599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;docs/vamos.md&quot;&gt;vamos&lt;/a&gt;&lt;strong&gt;V)irtual AM)iga OS&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;docs/vamos.md&quot;&gt;vamos &lt;/a&gt;&lt;strong&gt;V) irtual AM) iga OS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a46da1e54a42955b8053738ee4d40a36d1808c15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cython.org&quot;&gt;cython&lt;/a&gt;: (version &amp;gt;= &lt;strong&gt;0.25&lt;/strong&gt;) required to rebuild the native module</source>
          <target state="translated">&lt;a href=&quot;https://cython.org&quot;&gt;cython&lt;/a&gt; : 네이티브 모듈을 다시 빌드하려면 (버전&amp;gt; = &lt;strong&gt;0.25&lt;/strong&gt; ) 필요</target>
        </trans-unit>
        <trans-unit id="17a05a43090b90826786b1120b6a498a4bc966d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/FrodeSolheim/python-lhafile&quot;&gt;lhafile - FS Edition&lt;/a&gt;: required to use &lt;code&gt;.lha&lt;/code&gt; file scanner</source>
          <target state="translated">&lt;a href=&quot;https://github.com/FrodeSolheim/python-lhafile&quot;&gt;lhafile-FS Edition&lt;/a&gt; : &lt;code&gt;.lha&lt;/code&gt; 파일 스캐너 사용에 필요</target>
        </trans-unit>
        <trans-unit id="9d13e512e5bc7090e104e66c329f27ec953a278b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;amitools&lt;/code&gt; is a collection of Python 3 tools that I've written to work with
&lt;em&gt;Amiga OS&lt;/em&gt; binaries and files on Mac OS X and all other *nix-like platforms
supporting Python. Windows might work as
well, but is heavily untested. However, patches are welcome.</source>
          <target state="translated">&lt;code&gt;amitools&lt;/code&gt; 는 Mac OS X 및 Python을 지원하는 기타 모든 * nix 유사 플랫폼 에서 &lt;em&gt;Amiga OS&lt;/em&gt; 바이너리 및 파일과 함께 작업하기 위해 작성한 Python 3 도구 모음입니다 . Windows도 작동 할 수 있지만 테스트를 많이 거치지 않았습니다. 그러나 패치는 환영합니다.</target>
        </trans-unit>
        <trans-unit id="f80a1daad9464a83bfbdb8e144804079c857fca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Developer Setup&lt;/strong&gt; only links this code into your installation and allows
you to change/develop the code and test it immediately. (I prefer user install here)</source>
          <target state="translated">&lt;strong&gt;개발자 설정&lt;/strong&gt; 은이 코드를 설치에 연결하기 만하면 코드를 변경 / 개발하고 즉시 테스트 할 수 있습니다. (여기에 사용자 설치를 선호합니다)</target>
        </trans-unit>
        <trans-unit id="83a74c8dcdc9657c8b8ad75e3edb91b33910180a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Global Install&lt;/strong&gt; is available for all users of your system and needs root privileges</source>
          <target state="translated">&lt;strong&gt;전역 설치&lt;/strong&gt; 는 시스템의 모든 사용자가 사용할 수 있으며 루트 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9a2bb432a83bda6f4553d72db6999fde9a1a1986" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Run In Place&lt;/strong&gt; allows you to run the binaries directly from the &lt;code&gt;bin&lt;/code&gt; directory
without any installation. You need &lt;code&gt;make&lt;/code&gt; only to build the native library
of vamos:</source>
          <target state="translated">&lt;strong&gt;Run In Place를&lt;/strong&gt; 사용하면 설치없이 &lt;code&gt;bin&lt;/code&gt; 디렉토리 에서 직접 바이너리를 실행할 수 있습니다 . vamos의 네이티브 라이브러리를 빌드 하려면 &lt;code&gt;make&lt;/code&gt; 만 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="407fc5a545e53d1731bed8ce0b00077b3250d3d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User Install&lt;/strong&gt; is available for your user only but does not require special privileges</source>
          <target state="translated">&lt;strong&gt;사용자 설치&lt;/strong&gt; 는 사용자 만 사용할 수 있지만 특별한 권한이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="542a3cc81ff60918d11af450823115d676609fae" translate="yes" xml:space="preserve">
          <source>A package to support development with classic Amiga m68k systems</source>
          <target state="translated">클래식 Amiga m68k 시스템으로 개발을 지원하는 패키지</target>
        </trans-unit>
        <trans-unit id="1361de6d0606e92a7c6835269851fecc3c64fe8f" translate="yes" xml:space="preserve">
          <source>A tool to inspect, dissect, and build Amiga Kickstart ROM images to be
used with emulators, run with soft kickers or burned into flash ROMs.</source>
          <target state="translated">에뮬레이터와 함께 사용하거나 소프트 키커로 실행하거나 플래시 ROM에 레코딩 할 Amiga Kickstart ROM 이미지를 검사, 해부 및 빌드하는 도구입니다.</target>
        </trans-unit>
        <trans-unit id="f9900e2262cb1237e276663bdd785c5693c69898" translate="yes" xml:space="preserve">
          <source>Centos</source>
          <target state="translated">Centos</target>
        </trans-unit>
        <trans-unit id="60e1ab45bd1438d8c4dd13d45047267a71ff6032" translate="yes" xml:space="preserve">
          <source>Clone the Git repo: &lt;a href=&quot;https://github.com/cnvogelg/amitools&quot;&gt;amitools@git&lt;/a&gt;</source>
          <target state="translated">Git 저장소 복제 : &lt;a href=&quot;https://github.com/cnvogelg/amitools&quot;&gt;amitools @ git&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">내용</target>
        </trans-unit>
        <trans-unit id="333adcb1453499faba4f38b6bfc359b126f00799" translate="yes" xml:space="preserve">
          <source>Create and modify ADF or HDF disk image files.</source>
          <target state="translated">ADF 또는 HDF 디스크 이미지 파일을 만들고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="d7f2b81f3efff6bb006aa16037764e329815aaea" translate="yes" xml:space="preserve">
          <source>Create or modify Amiga's OFS and FFS file system structures</source>
          <target state="translated">Amiga의 OFS 및 FFS 파일 시스템 구조 생성 또는 수정</target>
        </trans-unit>
        <trans-unit id="5cb9263db856379d6e0a24b98c5d4c4879e80598" translate="yes" xml:space="preserve">
          <source>Create or modify disk images with Rigid Disk Block (RDB)</source>
          <target state="translated">RDB (Rigid Disk Block)를 사용하여 디스크 이미지 생성 또는 수정</target>
        </trans-unit>
        <trans-unit id="71348be5140025a5d54784f1fc0a24a79b899a41" translate="yes" xml:space="preserve">
          <source>Developers</source>
          <target state="translated">개발자</target>
        </trans-unit>
        <trans-unit id="2b2923ef505aa8710f994409956736e472162a12" translate="yes" xml:space="preserve">
          <source>ELF library &lt;code&gt;amitools.binfmt.elf&lt;/code&gt;</source>
          <target state="translated">ELF 라이브러리 &lt;code&gt;amitools.binfmt.elf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f547b97658725bd42582cc18d0488ce39cdc423" translate="yes" xml:space="preserve">
          <source>Ensure to have Cython (version &amp;gt;= &lt;strong&gt;0.25&lt;/strong&gt;) installed:</source>
          <target state="translated">Cython (버전&amp;gt; = &lt;strong&gt;0.25&lt;/strong&gt; )이 설치되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="24a6f630711ce900cc218360f3e4be42416671a6" translate="yes" xml:space="preserve">
          <source>File Scanners &lt;code&gt;amitools.scan&lt;/code&gt;</source>
          <target state="translated">파일 스캐너 &lt;code&gt;amitools.scan&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e88ce7043bbb1333b9b4d45de4f5417c478bfa97" translate="yes" xml:space="preserve">
          <source>First make sure to have the Python package installer &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">먼저 Python 패키지 설치 프로그램이 &lt;code&gt;pip&lt;/code&gt; 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="70a39a6b02893a7ba72ff41a1900415563ed9042" translate="yes" xml:space="preserve">
          <source>Follow this route if you want to hack around with the amitools codebase</source>
          <target state="translated">amitools 코드베이스로 해킹하려면이 경로를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="d8bb7a51b2f9dee5b6933ceadd475e1848e0e3f4" translate="yes" xml:space="preserve">
          <source>Homebrew Package Manager</source>
          <target state="translated">Homebrew 패키지 관리자</target>
        </trans-unit>
        <trans-unit id="378719e130120fddaefa886ca449fc9fe9921a05" translate="yes" xml:space="preserve">
          <source>Hunk library &lt;code&gt;amitools.binfmt.hunk&lt;/code&gt;</source>
          <target state="translated">Hunk 라이브러리 &lt;code&gt;amitools.binfmt.hunk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="316fb3e3951ed4fbf3a3e63a88f36e2ec0264077" translate="yes" xml:space="preserve">
          <source>I focus with my tools on classic Amiga setups, i.e. a 680x0 based system with
Amiga OS 1.x - 3.x running on it. However, this is an open project, so you can
provide other Amiga support, too.</source>
          <target state="translated">나는 고전적인 Amiga 설정, 즉 Amiga OS 1.x-3.x가 실행되는 680x0 기반 시스템에 내 도구를 집중합니다. 그러나 이것은 공개 프로젝트이므로 다른 Amiga 지원도 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="587c5287a094f9222c02e72f3c5d3fdad63838a1" translate="yes" xml:space="preserve">
          <source>I've written some scanners that walk through file trees and retrieve the
file data for further processing. I support file trees on the file system,
in lha archives or in adf/hdf disk images</source>
          <target state="translated">파일 트리를 살펴보고 추가 처리를 위해 파일 데이터를 검색하는 스캐너를 작성했습니다. 파일 시스템, lha 아카이브 또는 adf / hdf 디스크 이미지에서 파일 트리를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="630d2422c4764dcb3b52e8e8fbfd400e184c162e" translate="yes" xml:space="preserve">
          <source>Initial update is done with: (Open shell first)</source>
          <target state="translated">초기 업데이트는 다음으로 수행됩니다 : (먼저 셸 열기)</target>
        </trans-unit>
        <trans-unit id="4fc292783bc9eb26da6f42daa2acd4b15aa0d452" translate="yes" xml:space="preserve">
          <source>Install pip</source>
          <target state="translated">핍 설치</target>
        </trans-unit>
        <trans-unit id="84f8fb2fd0215c523f85d96aadc3afb03a371d84" translate="yes" xml:space="preserve">
          <source>Install the latest native Windows Python &amp;gt;= 3.4 from &lt;a href=&quot;https://www.python.org&quot;&gt;python.org&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org&quot;&gt;python.org&lt;/a&gt; 에서 최신 기본 Windows Python&amp;gt; = 3.4 설치</target>
        </trans-unit>
        <trans-unit id="a6c6d9304b65877aadbaa6679403630e9b8b8860" translate="yes" xml:space="preserve">
          <source>Install with exe installer</source>
          <target state="translated">exe 설치 프로그램으로 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="ec0f600f52efa5a0c1defa7755c83bb3c94a7af4" translate="yes" xml:space="preserve">
          <source>Linux/Ubuntu</source>
          <target state="translated">Linux / Ubuntu</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">노트 :</target>
        </trans-unit>
        <trans-unit id="c6757b7038dc13cba96ae5e41ec34730dd20d5d9" translate="yes" xml:space="preserve">
          <source>Now close shell and re-open a new dev shell (&lt;code&gt;MinGW-w64 Win64 Shell&lt;/code&gt;)</source>
          <target state="translated">이제 셸을 닫고 새 개발 셸을 다시 엽니 다 ( &lt;code&gt;MinGW-w64 Win64 Shell&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7cd685fc48ae9c8855768232f4cce1f45b8f94f0" translate="yes" xml:space="preserve">
          <source>OFS and FFS File System Tools &lt;code&gt;amitools.fs&lt;/code&gt;</source>
          <target state="translated">OFS 및 FFS 파일 시스템 도구 &lt;code&gt;amitools.fs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82c0886f106a785b8cb38b26e498e810e90bb5e8" translate="yes" xml:space="preserve">
          <source>On Linux Ubuntu use the provided packages &lt;code&gt;python-pip&lt;/code&gt;</source>
          <target state="translated">Linux Ubuntu에서는 제공된 패키지 &lt;code&gt;python-pip&lt;/code&gt; 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="83567aee7d7fe4aad8e5bf13f40ec98405aff2e8" translate="yes" xml:space="preserve">
          <source>On Windows with &lt;a href=&quot;https://github.com/msys2/msys2/wiki&quot;&gt;MSYS2&lt;/a&gt; (use x86_64 version if possible):</source>
          <target state="translated">&lt;a href=&quot;https://github.com/msys2/msys2/wiki&quot;&gt;MSYS2가&lt;/a&gt; 설치된 Windows (가능한 경우 x86_64 버전 사용) :</target>
        </trans-unit>
        <trans-unit id="af486260646bb915ea9ff0c6691157fe521cee3b" translate="yes" xml:space="preserve">
          <source>On macOS you have multiple ways of installing &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">macOS에서는 여러 가지 방법으로 &lt;code&gt;pip&lt;/code&gt; 를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34ee539233f1fe7b7601db26449e1cbd00bd0b49" translate="yes" xml:space="preserve">
          <source>Open the Command Shell of the Compiler and run</source>
          <target state="translated">컴파일러의 명령 셸을 열고 실행</target>
        </trans-unit>
        <trans-unit id="74f0b0e577949f85373c14e3f53a7899369aa4d8" translate="yes" xml:space="preserve">
          <source>Optional Packages</source>
          <target state="translated">옵션 패키지</target>
        </trans-unit>
        <trans-unit id="2c8db84cb1c0e03f205c66efbe46930b33b42c43" translate="yes" xml:space="preserve">
          <source>Parse function descriptions shipped by Commodore to describe the Amiga APIs</source>
          <target state="translated">Amiga API를 설명하기 위해 Commodore에서 제공하는 함수 설명을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">전제 조건</target>
        </trans-unit>
        <trans-unit id="75516ef87716ece14317a2e21d9db005b9fdc057" translate="yes" xml:space="preserve">
          <source>Python &amp;gt;= &lt;code&gt;3.5&lt;/code&gt;</source>
          <target state="translated">Python&amp;gt; = &lt;code&gt;3.5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2158da53b86579ffbeac22e9226236a88c80e0ea" translate="yes" xml:space="preserve">
          <source>Python Libraries</source>
          <target state="translated">Python 라이브러리</target>
        </trans-unit>
        <trans-unit id="f154c00376e1ea4207646a99d12aebfce7795743" translate="yes" xml:space="preserve">
          <source>Scan directory trees for ADF or HDF disk image files and verify the contents.</source>
          <target state="translated">ADF 또는 HDF 디스크 이미지 파일의 디렉터리 트리를 스캔하고 내용을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3126f823b9c09c6096c10c325018200b2463e3cb" translate="yes" xml:space="preserve">
          <source>System Python</source>
          <target state="translated">시스템 파이썬</target>
        </trans-unit>
        <trans-unit id="b6bcb8985873d4c3293ca46fb1c8ce816d307240" translate="yes" xml:space="preserve">
          <source>The Easy Way for Users</source>
          <target state="translated">사용자를위한 쉬운 방법</target>
        </trans-unit>
        <trans-unit id="84dd857587ae4b3dd92dfd5a49b74dd4b32fcb38" translate="yes" xml:space="preserve">
          <source>The hunktool uses amitools' hunk library to load a hunk-based amiga
binary. Currently, its main purpose is to display the contents of the
files in various formats.</source>
          <target state="translated">hunktool은 amitools의 hunk 라이브러리를 사용하여 hunk 기반 amiga 바이너리를로드합니다. 현재 주요 목적은 다양한 형식으로 파일의 내용을 표시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2aac892ff3b14c6cb4b99275edbb8a71fcdad20b" translate="yes" xml:space="preserve">
          <source>The new Documentation of &lt;code&gt;amitools&lt;/code&gt; is hosted on &lt;a href=&quot;https://amitools.readthedocs.io/&quot;&gt;readthedocs&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;amitools&lt;/code&gt; 의 새로운 문서는 readthedocs 에서 호스팅됩니다 &lt;a href=&quot;https://amitools.readthedocs.io/&quot;&gt;.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2614b7733ae9ff44fb59140036f3ad95be389eed" translate="yes" xml:space="preserve">
          <source>The tools are mostly developer-oriented, so a background in Amiga programming
will be very helpful.</source>
          <target state="translated">도구는 대부분 개발자 중심이므로 Amiga 프로그래밍에 대한 배경 지식이 있으면 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e068cc98a8b02d231f4877cd4d149f8766904e52" translate="yes" xml:space="preserve">
          <source>There is a special Edition for Visual Studio available that allows
to compile Python 3.x modules: Install &lt;a href=&quot;https://www.microsoft.com/en-gb/download/details.aspx?id=44266&quot;&gt;VCpython3&lt;/a&gt;</source>
          <target state="translated">Python 3.x 모듈을 컴파일 할 수있는 Visual Studio 용 특별 에디션이 있습니다. &lt;a href=&quot;https://www.microsoft.com/en-gb/download/details.aspx?id=44266&quot;&gt;VCpython3&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="c15179f3d3ef6db84379546f7713af9b3d18c64a" translate="yes" xml:space="preserve">
          <source>This library allows to read Amiga OS loadSeg()able binaries and represent
them in a python structure. You could query all items found there,
retrieve the code, data, and bss segments and even relocate them to target
addresses</source>
          <target state="translated">이 라이브러리는 Amiga OS loadSeg () 가능한 바이너리를 읽고 파이썬 구조로 표현할 수 있습니다. 거기에서 발견 된 모든 항목을 쿼리하고 코드, 데이터 및 BS 세그먼트를 검색하고 대상 주소로 재배치 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cad11feefa3520d8d3487bee86dd42709f302f05" translate="yes" xml:space="preserve">
          <source>This library allows to read a subset of the ELF format mainly used in
AROS m68k.</source>
          <target state="translated">이 라이브러리를 사용하면 AROS m68k에서 주로 사용되는 ELF 형식의 하위 집합을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8ba94139f13c6fe367b7743eefc4e3b501c0f25" translate="yes" xml:space="preserve">
          <source>This little tool is a companion for vamos. It allows you to dump and get
further information on the API C structure of AmigaOS used in vamos.</source>
          <target state="translated">이 작은 도구는 vamos의 동반자입니다. vamos에서 사용되는 AmigaOS의 API C 구조에 대한 추가 정보를 덤프하고 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b3907e209a9015cfbbc1afe6f2ab761c9b9eafe" translate="yes" xml:space="preserve">
          <source>This tool reads the fd (function description) files Commodore supplied for
all of their libraries and dumps their contents in different formats
including a code structure used in vamos.</source>
          <target state="translated">이 도구는 Commodore가 모든 라이브러리에 대해 제공 한 fd (함수 설명) 파일을 읽고 vamos에서 사용되는 코드 구조를 포함하여 다양한 형식으로 내용을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="2ab5b6c16d5968885dd74706829b442e9abc1a43" translate="yes" xml:space="preserve">
          <source>To get pip run:</source>
          <target state="translated">pip 실행을 얻으려면 :</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">도구</target>
        </trans-unit>
        <trans-unit id="f3f737feadb8f290b7214c013d720fb1a0c885a4" translate="yes" xml:space="preserve">
          <source>Windows with MSYS2</source>
          <target state="translated">MSYS2가 설치된 Windows</target>
        </trans-unit>
        <trans-unit id="312119bee0e21c158f39c65a48bfd86229a46a96" translate="yes" xml:space="preserve">
          <source>Windows with Visual Studio</source>
          <target state="translated">Visual Studio가있는 Windows</target>
        </trans-unit>
        <trans-unit id="c57ef2a5bdae7b2801c5bd2a5bd178f7bdd5cb2a" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; package manager (&lt;code&gt;pip&lt;/code&gt; is included in the &lt;code&gt;python3&lt;/code&gt; package):</source>
          <target state="translated">&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; 패키지 관리자를 사용하면 ( &lt;code&gt;pip&lt;/code&gt; 는 &lt;code&gt;python3&lt;/code&gt; 패키지에 포함되어 있습니다 ) :</target>
        </trans-unit>
        <trans-unit id="a1e951b8a16fe6c23ece21f74351e9755b322f84" translate="yes" xml:space="preserve">
          <source>You can load hunk-based binaries, libraries, and object files. Even
overlayed binary files are supporte.</source>
          <target state="translated">덩어리 기반 바이너리, 라이브러리 및 개체 파일을로드 할 수 있습니다. 오버레이 된 바이너리 파일도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8ff0c96ebd864859df9efb2155ecaeaf0e365ef2" translate="yes" xml:space="preserve">
          <source>You can query functions and find their jump table offset.</source>
          <target state="translated">함수를 쿼리하고 해당 점프 테이블 오프셋을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d8de73d31de3e4b9f286c7df6ff7cb3985201c2" translate="yes" xml:space="preserve">
          <source>You have multiple variants to install the tools with Python's &lt;code&gt;setuptools&lt;/code&gt;:</source>
          <target state="translated">Python의 &lt;code&gt;setuptools&lt;/code&gt; 로 도구를 설치할 여러 변형이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adecf287f053e932850d1b72b71b59d10ddff048" translate="yes" xml:space="preserve">
          <source>amitools - various AmigaOS tools for other platforms</source>
          <target state="translated">amitools-다른 플랫폼을위한 다양한 AmigaOS 도구</target>
        </trans-unit>
        <trans-unit id="898b8998f3c9691bd4cfb5dc75436abf86b83d4b" translate="yes" xml:space="preserve">
          <source>fdtool</source>
          <target state="translated">fdtool</target>
        </trans-unit>
        <trans-unit id="c6e8fa83c9e64ec3fd2dfd0da773d93d4202a3af" translate="yes" xml:space="preserve">
          <source>hunktool</source>
          <target state="translated">헝 크툴</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">맥 OS</target>
        </trans-unit>
        <trans-unit id="1e4457c3eb1c61a0cf05f86abd723dddd566329f" translate="yes" xml:space="preserve">
          <source>on Linux/macOS may use &lt;code&gt;sudo&lt;/code&gt; to install for all users</source>
          <target state="translated">Linux / macOS에서는 &lt;code&gt;sudo&lt;/code&gt; 를 사용하여 모든 사용자에게 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cade4c0307bd650c871159350dcbd5cab800ea1" translate="yes" xml:space="preserve">
          <source>or if you have installed &lt;code&gt;GNU make&lt;/code&gt; simply use:</source>
          <target state="translated">또는 &lt;code&gt;GNU make&lt;/code&gt; 설치 한 경우 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="dfe968fd356fbe4d608a25c97843f341bea9b5ee" translate="yes" xml:space="preserve">
          <source>rdbtool</source>
          <target state="translated">rdbtool</target>
        </trans-unit>
        <trans-unit id="0e6815055e54332ef33d5e8fca60fc8d63bba2f2" translate="yes" xml:space="preserve">
          <source>requires a host C compiler to compile the extension.</source>
          <target state="translated">확장을 컴파일하려면 호스트 C 컴파일러가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a0272c723ba9ef665fd8516095bc998048e125d4" translate="yes" xml:space="preserve">
          <source>romtool</source>
          <target state="translated">롬툴</target>
        </trans-unit>
        <trans-unit id="68f60c1747943c3e54bc5d437490d007e2f0556b" translate="yes" xml:space="preserve">
          <source>typetool</source>
          <target state="translated">유형 도구</target>
        </trans-unit>
        <trans-unit id="75b531609dd4076fdd06feeb064dacf6951a30ad" translate="yes" xml:space="preserve">
          <source>under the GNU Public License V2</source>
          <target state="translated">GNU Public License V2에 따라</target>
        </trans-unit>
        <trans-unit id="6cc7c80ab65115a1c26c2c1e9937023a9fef1f71" translate="yes" xml:space="preserve">
          <source>vamos allows you to run command line (CLI) Amiga programs on your host
Mac or PC. vamos is an API level Amiga OS Emulator that replaces exec
and dos calls with its own implementation and maps all file access to
your local file system.</source>
          <target state="translated">vamos를 사용하면 호스트 Mac 또는 PC에서 명령 줄 (CLI) Amiga 프로그램을 실행할 수 있습니다. vamos는 exec를 대체하고 자체 구현으로 호출을 수행하고 모든 파일 액세스를 로컬 파일 시스템에 매핑하는 API 레벨 Amiga OS 에뮬레이터입니다.</target>
        </trans-unit>
        <trans-unit id="39dc2cee509d321be03521735ecd59fe79449ee3" translate="yes" xml:space="preserve">
          <source>written by Christian Vogelgsang &lt;a href=&quot;mailto:chris@vogelgsang.org&quot;&gt;chris@vogelgsang.org&lt;/a&gt;</source>
          <target state="translated">작성자 : Christian Vogelgsang &lt;a href=&quot;mailto:chris@vogelgsang.org&quot;&gt;chris@vogelgsang.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e891ec36f59a2286e0ceb89e52978153114d7e96" translate="yes" xml:space="preserve">
          <source>xdfscan</source>
          <target state="translated">xdfscan</target>
        </trans-unit>
        <trans-unit id="2d9b1ec36bcfd08e2d3f12557a963211a844767f" translate="yes" xml:space="preserve">
          <source>xdftool</source>
          <target state="translated">xdftool</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
