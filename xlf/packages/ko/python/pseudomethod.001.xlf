<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pseudomethod/">
    <body>
      <group id="pseudomethod">
        <trans-unit id="c9eb1db6faf03ff59f2e6bcda862d120fd799a50" translate="yes" xml:space="preserve">
          <source>&quot;ab&quot;             ..add_to_self ( &quot;c&quot;  ),</source>
          <target state="translated">&quot;ab&quot;..add_to_self ( &quot;c&quot;),</target>
        </trans-unit>
        <trans-unit id="5923f88fa1a1bbd192cb4154141b7986fe13898c" translate="yes" xml:space="preserve">
          <source>## copy this to file pseudomethod_ex1.py</source>
          <target state="translated">## 이것을 pseudomethod_ex1.py 파일에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="c33569788b24d79df54862fe84ad2332a2821f0c" translate="yes" xml:space="preserve">
          <source>## copy this to file pseudomethod_ex2.py</source>
          <target state="translated">## 이것을 pseudomethod_ex2.py 파일에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="ad5650496e3a93705662a4a550b29a7c7f4cfe7e" translate="yes" xml:space="preserve">
          <source>## elegant ^_^</source>
          <target state="translated">## 우아함 ^ _ ^</target>
        </trans-unit>
        <trans-unit id="532a59119fa4106f721ccae9d16799a282477602" translate="yes" xml:space="preserve">
          <source>## ugly, Ugly, UGLY !!!</source>
          <target state="translated">## 못생긴, 못생긴, 못생긴 !!!</target>
        </trans-unit>
        <trans-unit id="7860406435e0dd193683be7fc03baefe2cf97fd7" translate="yes" xml:space="preserve">
          <source>################################################################</source>
          <target state="translated">################################################# ##############</target>
        </trans-unit>
        <trans-unit id="f4f1928ac0c281c6d266327858cfcf10f2687964" translate="yes" xml:space="preserve">
          <source>$ python3.0</source>
          <target state="translated">$ python3.0</target>
        </trans-unit>
        <trans-unit id="e47c12cdce8d4d83a00da8bc862afd5737a1ead8" translate="yes" xml:space="preserve">
          <source>&amp;amp; enhances python's functional programming ability.</source>
          <target state="translated">&amp;amp; 파이썬의 기능적 프로그래밍 능력을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="87b49276bb4d83c06cce1d4c7b47642047e52b6c" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt;</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="55da96a79807c870b183807c5fb7d08c3edcb8b4" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; import pseudomethod</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; 가상 메소드 가져 오기</target>
        </trans-unit>
        <trans-unit id="da87158e36af1d8906038b5ff629f5da53fcf503" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; import pseudomethod_ex1</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pseudomethod_ex1 가져 오기</target>
        </trans-unit>
        <trans-unit id="aa7774d5b69b65406dd2d473cf252fccf2096c12" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; import pseudomethod_ex2</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pseudomethod_ex2 가져 오기</target>
        </trans-unit>
        <trans-unit id="b04e079b70afe46675d7d34e58ee97fcc78deeae" translate="yes" xml:space="preserve">
          <source>(http://pypi.python.org/pypi/asciiporn)</source>
          <target state="translated">(http://pypi.python.org/pypi/asciiporn)</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="3d35521355b1a26451fecea1d0fdb8e861ae1a63" translate="yes" xml:space="preserve">
          <source>),</source>
          <target state="translated">),</target>
        </trans-unit>
        <trans-unit id="8ff1ad3b54a94d1577e43d5dff6b1ac4f7b9a18a" translate="yes" xml:space="preserve">
          <source>- for python2.6, see py3to2 (which has pseudomethods enabled by default)</source>
          <target state="translated">-python2.6의 경우 py3to2 (기본적으로 의사 메서드가 활성화되어 있음)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bbc5877630344343fd8f5f5f2d0410d333cfedc8" translate="yes" xml:space="preserve">
          <source>- importer - import hook for handling scripts containing pseudomethod</source>
          <target state="translated">-importer-pseudomethod를 포함하는 스크립트 처리를위한 import hook</target>
        </trans-unit>
        <trans-unit id="1a914bbcc8987faac2883a2bd495764099ec7852" translate="yes" xml:space="preserve">
          <source>- parser - string &amp;amp; ast parser for pseudomethod syntax</source>
          <target state="translated">-파서-의사 메서드 구문에 대한 문자열 및 ast 파서</target>
        </trans-unit>
        <trans-unit id="c8cec1938d2d849280b39f614b1e7899634e7500" translate="yes" xml:space="preserve">
          <source>- python3.0 or higher</source>
          <target state="translated">-python3.0 이상</target>
        </trans-unit>
        <trans-unit id="2174e37f581a99dcacca0f8487954788abc22146" translate="yes" xml:space="preserve">
          <source>- removed limitation where parser disallows use of keyword &quot;__pseudomethod__&quot;</source>
          <target state="translated">-파서가 &quot;__pseudomethod__&quot;키워드 사용을 허용하지 않는 제한 제거</target>
        </trans-unit>
        <trans-unit id="a3bfa24e263a17348e255fd986ee8da6f1ac05d8" translate="yes" xml:space="preserve">
          <source>- tobias rodaebel points out &quot;..&quot; is used in relative imports as well.</source>
          <target state="translated">-tobias rodaebel은 &quot;..&quot;이 상대적 수입품에도 사용된다는 점을 지적합니다.</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="80f569da28b2e4ffd5f013da1f6482d811f436b5" translate="yes" xml:space="preserve">
          <source>..list() \</source>
          <target state="translated">..list () \</target>
        </trans-unit>
        <trans-unit id="88528f9aad2f7d3ba9e58d894b28cedabbbec274" translate="yes" xml:space="preserve">
          <source>..print()</source>
          <target state="translated">..인쇄()</target>
        </trans-unit>
        <trans-unit id="cc6bc6bec119be1a41faec84c9837ebb806bc1a7" translate="yes" xml:space="preserve">
          <source>..zip(range(2, 5)) \</source>
          <target state="translated">..zip (범위 (2, 5)) \</target>
        </trans-unit>
        <trans-unit id="4f9b1d97b0f1925d8f20f5a2edefdabbd0ab7ddc" translate="yes" xml:space="preserve">
          <source>1                ..add_to_self ( 2    ),</source>
          <target state="translated">1 ..add_to_self (2),</target>
        </trans-unit>
        <trans-unit id="23ea222cae6cbe4996adc94e6243108c6f10d893" translate="yes" xml:space="preserve">
          <source>1 pseudomethod first initializes an import hook</source>
          <target state="translated">1 pseudomethod는 먼저 가져 오기 후크를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f54fc5525bece811e49ffc716be6f9e05f1d564f" translate="yes" xml:space="preserve">
          <source>1 this module installs an import hook to detect if a script contains the</source>
          <target state="translated">1이 모듈은 스크립트에 다음이 포함되어 있는지 감지하기 위해 가져 오기 후크를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="1a2b67957db5591285749f572d416e62bf6d838e" translate="yes" xml:space="preserve">
          <source>2 add the MAGIC LINE:</source>
          <target state="translated">2 MAGIC LINE 추가 :</target>
        </trans-unit>
        <trans-unit id="39ef36c4c6e59a37f7753fa318bfdd99edf51871" translate="yes" xml:space="preserve">
          <source>2 the script is preparsed, replacing the &quot;..&quot; notation w/ &quot;.__pseudomethod__.&quot;</source>
          <target state="translated">2 스크립트가 준비되어 &quot;..&quot;표기법을 &quot;.__ pseudomethod__&quot;로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="73b13074998e5337d669a90c612a89b2893a7810" translate="yes" xml:space="preserve">
          <source>20081121 created pseudomethod package</source>
          <target state="translated">20081121은 pseudomethod 패키지를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="a9883a4558b8ac7b70e43ad1c4dd10d6d5a581bb" translate="yes" xml:space="preserve">
          <source>3 the script is compiled into an ast object.  the ast is recursively searched</source>
          <target state="translated">3 스크립트는 ast 객체로 컴파일됩니다. ast는 재귀 적으로 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="3a77048a5a142765bd7704c7f61519a1aa982b1a" translate="yes" xml:space="preserve">
          <source>@ least one argument (the self/type object its passed to b temporarily bound).</source>
          <target state="translated">@ 적어도 하나의 인수 (b에 일시적으로 바인딩 된 자체 / 유형 개체).</target>
        </trans-unit>
        <trans-unit id="1fa34c708b568a18f82defb7c65abeb748121e30" translate="yes" xml:space="preserve">
          <source>API:</source>
          <target state="translated">API :</target>
        </trans-unit>
        <trans-unit id="78274ae4b2caff8c24f00e0c139bac1f63dfe489" translate="yes" xml:space="preserve">
          <source>AUTHOR:</source>
          <target state="translated">저자:</target>
        </trans-unit>
        <trans-unit id="2365fe8336059405f5576518d49e9a79c96d6724" translate="yes" xml:space="preserve">
          <source>Foo()..function(*args, **kwds) ## function temporarily bound to Foo</source>
          <target state="translated">Foo () .. function (* args, ** kwds) ## Foo에 일시적으로 바인딩 된 함수</target>
        </trans-unit>
        <trans-unit id="856e975ca80f7d0362a23d74972f55720dccc748" translate="yes" xml:space="preserve">
          <source>Foo().method(*args, **kwds)</source>
          <target state="translated">Foo (). method (* args, ** kwds)</target>
        </trans-unit>
        <trans-unit id="3655c2bf45dcdd6f3a4bf65f0cdb02249a7f35fa" translate="yes" xml:space="preserve">
          <source>INSTALL:</source>
          <target state="translated">설치:</target>
        </trans-unit>
        <trans-unit id="c716084845f60944f0ccfd3046e9665113c093b0" translate="yes" xml:space="preserve">
          <source>MAGIC</source>
          <target state="translated">마법</target>
        </trans-unit>
        <trans-unit id="f2933a72a3bee6d4e81ddbef4ce4b44f39d43a8b" translate="yes" xml:space="preserve">
          <source>MAGIC LINE:</source>
          <target state="translated">매직 라인 :</target>
        </trans-unit>
        <trans-unit id="d2dbd3671936908c488440f53cb50a15a3ae61d2" translate="yes" xml:space="preserve">
          <source>MECHANISM:</source>
          <target state="translated">기구:</target>
        </trans-unit>
        <trans-unit id="689358377c4b4e27048c9681a304dc53cc455b2e" translate="yes" xml:space="preserve">
          <source>Python 3.0rc2 (r30rc2:67114, Nov  9 2008, 21:30:06)</source>
          <target state="translated">Python 3.0rc2 (r30rc2 : 67114, 2008 년 11 월 9 일, 21:30:06)</target>
        </trans-unit>
        <trans-unit id="2c43f9f47db46f0cc3a19329c837157d404d6765" translate="yes" xml:space="preserve">
          <source>RECENT CHANGEs:</source>
          <target state="translated">최근 변경 사항 :</target>
        </trans-unit>
        <trans-unit id="5ad75e5994a4d57d9a42f8193b4b56d6175556a4" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS:</source>
          <target state="translated">요구 사항 :</target>
        </trans-unit>
        <trans-unit id="39a66445ffe55de58b570157806f5ccb72880aa3" translate="yes" xml:space="preserve">
          <source>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</source>
          <target state="translated">자세한 내용은 &quot;도움말&quot;, &quot;저작권&quot;, &quot;신용&quot;또는 &quot;라이센스&quot;를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="526e17802d5e428ad056a5fb1638e0d3f633a4c9" translate="yes" xml:space="preserve">
          <source>USAGE:</source>
          <target state="translated">용법:</target>
        </trans-unit>
        <trans-unit id="8c02431d2bec26958b24d0902cfaff5c84146c78" translate="yes" xml:space="preserve">
          <source>[((0, 4), 2), ((1, 5), 3), ((2, 3), 4)]</source>
          <target state="translated">[((0, 4), 2), ((1, 5), 3), ((2, 3), 4)]</target>
        </trans-unit>
        <trans-unit id="339accf4efe7325a97eaaae996d4ae828aad7e97" translate="yes" xml:space="preserve">
          <source>[(2,3), (0,4), (1,5)] ..sorted(key = lambda x: x[0]) \</source>
          <target state="translated">[(2,3), (0,4), (1,5)] ..sorted (key = lambda x : x [0]) \</target>
        </trans-unit>
        <trans-unit id="e33e428821df9c6d1489d277a678fdc50126752f" translate="yes" xml:space="preserve">
          <source>[(2,3), (0,4), (1,5)],</source>
          <target state="translated">[(2,3), (0,4), (1,5)],</target>
        </trans-unit>
        <trans-unit id="974ba2282f59b44fe9e72036d622a4481cd30a45" translate="yes" xml:space="preserve">
          <source>[1, 2]           ..add_to_self ( [3]  ),</source>
          <target state="translated">[1, 2] ..add_to_self ([3]),</target>
        </trans-unit>
        <trans-unit id="e5bf1a804d3254382fc1f46560cd2b11fdd20443" translate="yes" xml:space="preserve">
          <source>[GCC 3.4.6 20060404 (Red Hat 3.4.6-10)] on linux2</source>
          <target state="translated">linux2의 [GCC 3.4.6 20060404 (Red Hat 3.4.6-10)]</target>
        </trans-unit>
        <trans-unit id="a34f826fab659b9cc55ea48d53762345f5fac996" translate="yes" xml:space="preserve">
          <source>a method is normally called by the &quot;.&quot; notation:</source>
          <target state="translated">메서드는 일반적으로 &quot;.&quot;에 의해 호출됩니다. 표기법:</target>
        </trans-unit>
        <trans-unit id="b91e74e9b6b7cdf43194da9b3505c4714957c072" translate="yes" xml:space="preserve">
          <source>a( b( c( d ) ) )       &amp;lt;==&amp;gt;  d ..c() ..b() ..a()</source>
          <target state="translated">a (b (c (d))) &amp;lt;==&amp;gt; d ..c () ..b () ..a ()</target>
        </trans-unit>
        <trans-unit id="8b9eec2f8b50359b51a5f149e254512f5146e190" translate="yes" xml:space="preserve">
          <source>a( b, *args, **kwds )  &amp;lt;==&amp;gt;  b ..a( *args, **kwds )</source>
          <target state="translated">a (b, * args, ** kwds) &amp;lt;==&amp;gt; b ..a (* args, ** kwds)</target>
        </trans-unit>
        <trans-unit id="006e47181f4d1bda8417feba7a3ae20c00681f7c" translate="yes" xml:space="preserve">
          <source>abc bytearray(b'abc') 3 [1, 2, 3]</source>
          <target state="translated">abc bytearray (b'abc ') 3 [1, 2, 3]</target>
        </trans-unit>
        <trans-unit id="cfee5530222b47850c5f95fe7e5deaa8ac9475c0" translate="yes" xml:space="preserve">
          <source>application asciiporn @:</source>
          <target state="translated">응용 프로그램 asciiporn @ :</target>
        </trans-unit>
        <trans-unit id="67b6e652c23e34a174dde2fd7ac694b19c828f3d" translate="yes" xml:space="preserve">
          <source>bytearray(b&quot;ab&quot;) ..add_to_self ( b&quot;c&quot; ),</source>
          <target state="translated">bytearray (b &quot;ab&quot;) ..add_to_self (b &quot;c&quot;),</target>
        </trans-unit>
        <trans-unit id="b48cb02a7b3860b204684aeae6bd3bdc58917852" translate="yes" xml:space="preserve">
          <source>call almost any function on-the-fly as a method</source>
          <target state="translated">거의 모든 함수를 즉시 메서드로 호출</target>
        </trans-unit>
        <trans-unit id="cc1d4bb67b68b1e265470b519dfd3541ef7a9bfa" translate="yes" xml:space="preserve">
          <source>class Foo:</source>
          <target state="translated">클래스 Foo :</target>
        </trans-unit>
        <trans-unit id="331b3754f83dcfe9f198b5fbc923a3de096b8713" translate="yes" xml:space="preserve">
          <source>class Foo: pass</source>
          <target state="translated">클래스 Foo : 패스</target>
        </trans-unit>
        <trans-unit id="2f5f024cd2cc748ce5e42cde755caa188ba4b9f1" translate="yes" xml:space="preserve">
          <source>def add_to_self(self, x): return self + x</source>
          <target state="translated">def add_to_self (self, x) : return self + x</target>
        </trans-unit>
        <trans-unit id="644f51b03857e2423060788cc458b43de04cf3c9" translate="yes" xml:space="preserve">
          <source>def function(self, *args, **kwds):</source>
          <target state="translated">def 함수 (self, * args, ** kwds) :</target>
        </trans-unit>
        <trans-unit id="741beee063d1cd8770639d636f5d61e8e8bd7be5" translate="yes" xml:space="preserve">
          <source>def method(self, *args, **kwds):</source>
          <target state="translated">def 메서드 (self, * args, ** kwds) :</target>
        </trans-unit>
        <trans-unit id="83fa85a275f0818c4579228663246ada0a66f1cc" translate="yes" xml:space="preserve">
          <source>fixed pseudomethod 2 b compatible w/ this</source>
          <target state="translated">고정 의사 방법 2 b 호환 가능</target>
        </trans-unit>
        <trans-unit id="40082ba2516a1709929a629ae36464f46a848c96" translate="yes" xml:space="preserve">
          <source>for a real-world application using pseudomethod, check out the py3to2</source>
          <target state="translated">의사 방법을 사용하는 실제 응용 프로그램의 경우 py3to2를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="162fbfe82ae9d5a94f3893b662e33201b81abf30" translate="yes" xml:space="preserve">
          <source>for functional-style programming,</source>
          <target state="translated">함수형 프로그래밍의 경우</target>
        </trans-unit>
        <trans-unit id="8374541ec197be226222379adb884799752153e7" translate="yes" xml:space="preserve">
          <source>for the attribute &quot;__pseudomethod__&quot; where some symbol rearrangement occurs.</source>
          <target state="translated">일부 기호 재 배열이 발생하는 &quot;__pseudomethod__&quot;속성에 대해.</target>
        </trans-unit>
        <trans-unit id="5808d2b2d7ee6da9a655c35534c5d56fc13b1084" translate="yes" xml:space="preserve">
          <source>from __future__ import pseudomethod</source>
          <target state="translated">__future__에서 가상 메소드 가져 오기</target>
        </trans-unit>
        <trans-unit id="409e1777000ff00f54744e814db55cc7d0e8426d" translate="yes" xml:space="preserve">
          <source>functional programming in python</source>
          <target state="translated">파이썬의 함수형 프로그래밍</target>
        </trans-unit>
        <trans-unit id="585901877b5012d0462b885f97e7a6cadd34ca23" translate="yes" xml:space="preserve">
          <source>http://pypi.python.org/pypi/asciiporn</source>
          <target state="translated">http://pypi.python.org/pypi/asciiporn</target>
        </trans-unit>
        <trans-unit id="31c6aac3671ac926a265ba539a7f15c161cbde9f" translate="yes" xml:space="preserve">
          <source>in scripts</source>
          <target state="translated">스크립트에서</target>
        </trans-unit>
        <trans-unit id="2fc23551e68e5d6ddea43290f565c5c3d0b311e5" translate="yes" xml:space="preserve">
          <source>in this respect, the &quot;..&quot; notation could b thought of as a &quot;flattener&quot;,</source>
          <target state="translated">이 점에서 &quot;..&quot;표기법은 &quot;플랫 터&quot;로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbfa13cf7afbb3d09035c6f0b6613aca40183fdf" translate="yes" xml:space="preserve">
          <source>it adds the &quot;..&quot; notation for calling regular functions as methods.</source>
          <target state="translated">정규 함수를 메서드로 호출하기위한 &quot;..&quot;표기법을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f12cb2a38332a63353e1e15e5bc678f96f26ae47" translate="yes" xml:space="preserve">
          <source>kai zhu</source>
          <target state="translated">카이 주</target>
        </trans-unit>
        <trans-unit id="fdff8bb4c1b52e7ddc5c6a87382b36e5131ef700" translate="yes" xml:space="preserve">
          <source>kaizhu256@gmail.com</source>
          <target state="translated">kaizhu256@gmail.com</target>
        </trans-unit>
        <trans-unit id="cc20eed977fed03ee60ebbc00bd070e6ab1b410a" translate="yes" xml:space="preserve">
          <source>key = lambda x: x[0]</source>
          <target state="translated">키 = 람다 x : x [0]</target>
        </trans-unit>
        <trans-unit id="4205f2c7256b56d44613e4184f31f6a88a41d629" translate="yes" xml:space="preserve">
          <source>list(</source>
          <target state="translated">명부(</target>
        </trans-unit>
        <trans-unit id="9b987ba61393a5bb3c6d47905137123214d9b207" translate="yes" xml:space="preserve">
          <source>print(</source>
          <target state="translated">인쇄(</target>
        </trans-unit>
        <trans-unit id="b2f234687a6ca6a0cb72dbdc0060f63a513b156a" translate="yes" xml:space="preserve">
          <source>pseudomethod allows u to call normal functions on-the-fly as methods</source>
          <target state="translated">pseudomethod를 사용하면 일반 함수를 즉시 메서드로 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6a28e90a6c2895299ed35ec43c22584888ff977" translate="yes" xml:space="preserve">
          <source>pseudomethod is an extended language feature for python3.0.</source>
          <target state="translated">pseudomethod는 python3.0의 확장 된 언어 기능입니다.</target>
        </trans-unit>
        <trans-unit id="07c0720df3f0414bae9209c49c804c00910b093e" translate="yes" xml:space="preserve">
          <source>pseudomethod module:</source>
          <target state="translated">pseudomethod 모듈 :</target>
        </trans-unit>
        <trans-unit id="13f10571d66f1b06e3004bd087c313b4c916c610" translate="yes" xml:space="preserve">
          <source>pseudomethods are quite useful for cleaning up ugly nested arguments:</source>
          <target state="translated">의사 메서드는 추악한 중첩 인수를 정리하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="28f575790a4a9168baf7c3c91b6dfc125c46ec3e" translate="yes" xml:space="preserve">
          <source>pseudomethods r liberally used in the py3to2 application asciiporn</source>
          <target state="translated">py3to2 응용 프로그램 asciiporn에서 자유롭게 사용되는 pseudomethods r</target>
        </trans-unit>
        <trans-unit id="b5ece54b1633fe21ee53ab591f6da11d6d3a72f6" translate="yes" xml:space="preserve">
          <source>python3.0 setup.py dev --quicktest</source>
          <target state="translated">python3.0 setup.py dev --quicktest</target>
        </trans-unit>
        <trans-unit id="f2e3817418525b0ae1af542cdd2ef1f1236c3646" translate="yes" xml:space="preserve">
          <source>python3.0 setup.py install</source>
          <target state="translated">python3.0 setup.py 설치</target>
        </trans-unit>
        <trans-unit id="0410cb62e9fc657c19890cb2fd314d6d8749775f" translate="yes" xml:space="preserve">
          <source>range(2, 5)</source>
          <target state="translated">범위 (2, 5)</target>
        </trans-unit>
        <trans-unit id="48cf7bcfc204b6ebd0718298b6b7526099401cdc" translate="yes" xml:space="preserve">
          <source>removing nesting of the 1st argument, &amp;amp; allowing an elegant style of</source>
          <target state="translated">첫 번째 인수의 중첩 제거 및 우아한 스타일 허용</target>
        </trans-unit>
        <trans-unit id="eeabb20c13b06b79285e53a6211266b28157f43d" translate="yes" xml:space="preserve">
          <source>sorted(</source>
          <target state="translated">정렬 됨 (</target>
        </trans-unit>
        <trans-unit id="7d0974a874472a054e1e4628f28dacd7b2fb43fb" translate="yes" xml:space="preserve">
          <source>start up the python3.0 interpreter &amp;amp; import pseudomethod:</source>
          <target state="translated">python3.0 인터프리터를 시작하고 pseudomethod를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="246a2031cb16ad5682d7d36ca8d45d9f34beea92" translate="yes" xml:space="preserve">
          <source>syntax</source>
          <target state="translated">syntax</target>
        </trans-unit>
        <trans-unit id="8d8b3568a4a795fa9baa280ad96e68145c2ea745" translate="yes" xml:space="preserve">
          <source>the only requirement for a function to b a pseudomethod is that it must accept</source>
          <target state="translated">ba pseudomethod에 대한 함수의 유일한 요구 사항은</target>
        </trans-unit>
        <trans-unit id="e0f780138303807e5b5666cd18797bde06ea600e" translate="yes" xml:space="preserve">
          <source>this allows u to extend any class or object on-the-fly w/o subclassing</source>
          <target state="translated">이것은 u가 서브 클래 싱없이 즉석에서 어떤 클래스 나 객체를 확장 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="c63a1109264b03df788118645f345e5b805beb32" translate="yes" xml:space="preserve">
          <source>this is a pure python3.0 module.</source>
          <target state="translated">이것은 순수한 python3.0 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="3e831a015bc0be933f48d8749eefc48563b83aa3" translate="yes" xml:space="preserve">
          <source>to keep the python parser happy</source>
          <target state="translated">파이썬 파서를 행복하게 유지하려면</target>
        </trans-unit>
        <trans-unit id="0c1b4bf8c7f4d717723bb81946d0b8307274e7cc" translate="yes" xml:space="preserve">
          <source>to ur script &amp;amp; the import hook will take care of the rest</source>
          <target state="translated">ur 스크립트에 가져 오기 후크가 나머지를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="44cde89040dc3a36d129209d88cf8f39d45c3306" translate="yes" xml:space="preserve">
          <source>try out this simple pseudomethod script:</source>
          <target state="translated">이 간단한 의사 방법 스크립트를 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="01f0ef7acc3c7c2967ea2fc0a895bf32f455a735" translate="yes" xml:space="preserve">
          <source>type &quot;help(pseudomethod)&quot; for more details</source>
          <target state="translated">자세한 내용을 보려면 &quot;help (pseudomethod)&quot;를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="657a85f5ca7cc5ff564d7ef8214c695f9e87034e" translate="yes" xml:space="preserve">
          <source>using the &quot;..&quot; notation:</source>
          <target state="translated">&quot;..&quot;표기법 사용 :</target>
        </trans-unit>
        <trans-unit id="1b92f9776f33fd8ca3e114a3df5684cfe4f50f71" translate="yes" xml:space="preserve">
          <source>what actually happens is just simple rearrangement of symbols:</source>
          <target state="translated">실제로 일어나는 일은 기호의 단순한 재 배열입니다.</target>
        </trans-unit>
        <trans-unit id="e573db592ae5660286df69d09544605c4ad54e00" translate="yes" xml:space="preserve">
          <source>zip(</source>
          <target state="translated">지퍼(</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
