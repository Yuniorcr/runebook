<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-fixture-magic/">
    <body>
      <group id="django-fixture-magic">
        <trans-unit id="572025c9a9646d6043d62376823bafc151f50f23" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;current_version.files.all.0&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;current_version.files.all.0&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="fe1b4978e75b66e5c5ca5a59a3f6faae8ce5f3d3" translate="yes" xml:space="preserve">
          <source>--no-follow</source>
          <target state="translated">-따르지 않음</target>
        </trans-unit>
        <trans-unit id="0ace42b134af27744073a5a9b86cbb5fdd35ccb1" translate="yes" xml:space="preserve">
          <source>.  This command takes a single file
and several model names (in</source>
          <target state="translated">. 이 명령은 단일 파일과 여러 모델 이름 (in</target>
        </trans-unit>
        <trans-unit id="d074ccabd27626cc0b7dfb52750f59fd02dbfab1" translate="yes" xml:space="preserve">
          <source>.  This command takes several fixture
files and does a simple de-dupe operation (based on model and pk) and returns a
clean json file.  This is helpful if you have multiple json fixtures that might
have redundant data:</source>
          <target state="translated">. 이 명령은 여러 픽스처 파일을 사용하고 간단한 중복 제거 작업 (모델 및 pk 기반)을 수행하고 깨끗한 json 파일을 반환합니다. 중복 데이터가있을 수있는 여러 json 픽스처가있는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7cc45f7c1dbba9697b238a32972d76190de944af" translate="yes" xml:space="preserve">
          <source>.  This reads a setting</source>
          <target state="translated">. 이것은 설정을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b9eb30e75e6c5c9ee5147310962593a52e3e9675" translate="yes" xml:space="preserve">
          <source>. This
is useful if your target database is already partially setup. Here is and example default output of dump_object:</source>
          <target state="translated">. 이는 대상 데이터베이스가 이미 부분적으로 설정된 경우에 유용합니다. 다음은 dump_object의 기본 출력 예입니다.</target>
        </trans-unit>
        <trans-unit id="f2b72be84a7269a16decac09125e044441a76953" translate="yes" xml:space="preserve">
          <source>./manage.py dump_object APP.Book &amp;ndash;no-follow</source>
          <target state="translated">./manage.py dump_object APP.Book &amp;ndash;no-follow</target>
        </trans-unit>
        <trans-unit id="4e330672fb68a5d872f4045d90eb524b0d694b73" translate="yes" xml:space="preserve">
          <source>: Defines additional properties/methods to dump the return values
of. Magic will convert</source>
          <target state="translated">: 반환 값을 덤프 할 추가 속성 / 메서드를 정의합니다. 마법이 변환됩니다</target>
        </trans-unit>
        <trans-unit id="b8a7db28babe995526c602f20491a7b81a3e752b" translate="yes" xml:space="preserve">
          <source>: Specify an order in which objects should be dumped based on their
model class. In the above example, all app1.model1 objects will preceed any
app2.model2 objects, which will preceed any objects of any other model class.</source>
          <target state="translated">: 모델 클래스를 기준으로 객체를 덤프해야하는 순서를 지정합니다. 위의 예에서 모든 app1.model1 개체는 모든 app2.model2 개체보다 우선하며, 이는 다른 모델 클래스의 개체보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="057999266d1fb1d113b0e79a54a32b8113ad0693" translate="yes" xml:space="preserve">
          <source>: Specify an order to dump objects of one or more particular model
classes. In the above example, all app1.model1 objects with a truthy</source>
          <target state="translated">: 하나 이상의 특정 모델 클래스의 객체를 덤프하는 순서를 지정합니다. 위의 예에서 모든 app1.model1 객체는</target>
        </trans-unit>
        <trans-unit id="87e5fb369ddcbad5afb02bfe18ded907938f5a8e" translate="yes" xml:space="preserve">
          <source>A few extra management tools to handle fixtures.</source>
          <target state="translated">고정물을 처리하기위한 몇 가지 추가 관리 도구.</target>
        </trans-unit>
        <trans-unit id="ef008670f5c732e0627361d038dc59a9616f4413" translate="yes" xml:space="preserve">
          <source>By default, fixture magic will dump related fixtures to your model in your fixture.
This can be disabled by passing the option</source>
          <target state="translated">기본적으로 조명기 매직은 조명기의 모델에 관련 조명기를 덤프합니다. 옵션을 전달하여 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a54de61f5bf939b318c62be83c89defe86f1192" translate="yes" xml:space="preserve">
          <source>CUSTOM_DUMPS</source>
          <target state="translated">CUSTOM_DUMPS</target>
        </trans-unit>
        <trans-unit id="e649c15865a62a1793188609afe2719e9d51d352" translate="yes" xml:space="preserve">
          <source>Django 1.8 - 2.1</source>
          <target state="translated">장고 1.8-2.1</target>
        </trans-unit>
        <trans-unit id="4266fc491b1c10019162e36a0c52f903f20f5dcd" translate="yes" xml:space="preserve">
          <source>For use in python3 install the following:</source>
          <target state="translated">python3에서 사용하려면 다음을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="f20870c5fe9f8118e8fb4eca60c4dcb38053af40" translate="yes" xml:space="preserve">
          <source>INSTALLED_APPS</source>
          <target state="translated">INSTALLED_APPS</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="551399843bb1a11c3e2d58f7d757e3ebd54dcaf1" translate="yes" xml:space="preserve">
          <source>It runs the equivalent of</source>
          <target state="translated">그것은</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">노트 :</target>
        </trans-unit>
        <trans-unit id="1d3e112458438c736fdf8f4f82eb254d52146cea" translate="yes" xml:space="preserve">
          <source>Or you can get all objects with all dependencies by passing an asterisk:</source>
          <target state="translated">또는 별표를 전달하여 모든 종속성이있는 모든 개체를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">또는:</target>
        </trans-unit>
        <trans-unit id="c8efa39b3c6494dfdceabd4cc2591b6b7d49072a" translate="yes" xml:space="preserve">
          <source>Python 2.7, 3.6</source>
          <target state="translated">Python 2.7, 3.6</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="af8d7520e005de5b07bab574132a6aacb875fccb" translate="yes" xml:space="preserve">
          <source>Running with the</source>
          <target state="translated">함께 실행</target>
        </trans-unit>
        <trans-unit id="363cdee0623c6b0835525828d0f1d32fec9b3cb6" translate="yes" xml:space="preserve">
          <source>The above example assumes that an Author with an ID of 5 exists in the target database.</source>
          <target state="translated">위의 예에서는 ID가 5 인 작성자가 대상 데이터베이스에 존재한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="63af33647728ec87d35cb60225dcb0970a08bb93" translate="yes" xml:space="preserve">
          <source>The development version can be installed with:</source>
          <target state="translated">개발 버전은 다음과 같이 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3c70a2331a6f9a78ee60f22187d13ed1966346c" translate="yes" xml:space="preserve">
          <source>The fourth command is</source>
          <target state="translated">네 번째 명령은</target>
        </trans-unit>
        <trans-unit id="ff080fda4fbea2e3bbc9f94986fca189e6a491c4" translate="yes" xml:space="preserve">
          <source>The second command is</source>
          <target state="translated">두 번째 명령은</target>
        </trans-unit>
        <trans-unit id="e281ec45a326cd304607917fb47e95927469847c" translate="yes" xml:space="preserve">
          <source>The third command is</source>
          <target state="translated">세 번째 명령은</target>
        </trans-unit>
        <trans-unit id="111b3f899bd670077652da8566d07b889b85cfad" translate="yes" xml:space="preserve">
          <source>There are four commands.</source>
          <target state="translated">네 가지 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6aad000af334f6bcfc148a101b78617e04b64c68" translate="yes" xml:space="preserve">
          <source>This package requires:</source>
          <target state="translated">이 패키지에는 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7631ed7ae753df49c93ec5857c84c3549e7f5add" translate="yes" xml:space="preserve">
          <source>Unspecified models will be appended to the end.</source>
          <target state="translated">지정되지 않은 모델은 끝에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="820094daccc07c0ff291d0296af329a0600f18f6" translate="yes" xml:space="preserve">
          <source>You can get fixture-magic from pypi with:</source>
          <target state="translated">다음을 사용하여 pypi에서 fixture-magic을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a468d2cb7c132f67db1db153c8067fe60398d8ce" translate="yes" xml:space="preserve">
          <source>You can now safely load</source>
          <target state="translated">이제 안전하게로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="76954e11676372eeed6e10ce8b227edec5488e29" translate="yes" xml:space="preserve">
          <source>app.model</source>
          <target state="translated">app.model</target>
        </trans-unit>
        <trans-unit id="e12eefd2ee363cf4ae2eb0a5e96b49d17c568dc6" translate="yes" xml:space="preserve">
          <source>are
optional.</source>
          <target state="translated">선택적입니다.</target>
        </trans-unit>
        <trans-unit id="db6473e6030ba5c3a72f939c7c0336a9aaceefc8" translate="yes" xml:space="preserve">
          <source>attribute will come after any other app1.model1 object that
does not have a truthy value for this attribute. A sort operation is called on
the list of all objects of that model type, with the value associated with a
model name being passed to the sort function as the</source>
          <target state="translated">속성은이 속성에 대한 진리 값이없는 다른 app1.model1 객체 뒤에옵니다. 해당 모델 유형의 모든 개체 목록에서 정렬 작업이 호출되며 모델 이름과 관련된 값이 정렬 기능에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d57c84a706f9935ea2f6fda88acbbde7447e1150" translate="yes" xml:space="preserve">
          <source>custom_dump</source>
          <target state="translated">custom_dump</target>
        </trans-unit>
        <trans-unit id="7fce68c4c5a6ff35499139995905f8f7fd201305" translate="yes" xml:space="preserve">
          <source>dependents</source>
          <target state="translated">부양 가족</target>
        </trans-unit>
        <trans-unit id="1745ab6853134e9b6c3c0486aef2794fb1b175ac" translate="yes" xml:space="preserve">
          <source>dump_object</source>
          <target state="translated">dump_object</target>
        </trans-unit>
        <trans-unit id="431908e37722f2b7ed70fe42aa100e9ae25af6af" translate="yes" xml:space="preserve">
          <source>fixture-magic adds two commands to</source>
          <target state="translated">fixture-magic은 두 개의 명령을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fddd8280f713e29173e06217d36d48e9e6955b22" translate="yes" xml:space="preserve">
          <source>format as they are specified in
fixture files).  This reorders your fixtures so the models you specifiy first
show up in the fixture first.  This is helpful if you tend to get foreign-key
errors when loading models:</source>
          <target state="translated">고정 장치 파일에 지정된 형식). 이것은 당신의 조명기를 재정렬하여 당신이 지정한 모델이 먼저 조명기에 나타나도록합니다. 모델을로드 할 때 외래 키 오류가 발생하는 경향이있는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="e02417956ea1c46d2cf9a55d9005cd82fb893849" translate="yes" xml:space="preserve">
          <source>in a test without foreign key i
errors.</source>
          <target state="translated">외래 키가없는 테스트에서 i 오류.</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">키</target>
        </trans-unit>
        <trans-unit id="207c796a782137b3a74313cd76470c3caf37216e" translate="yes" xml:space="preserve">
          <source>keyword argument.
Keep in mind that the model objects will have already been serialized to a
dictionary object prior to the sort operation.</source>
          <target state="translated">키워드 인수. 모델 개체는 정렬 작업 전에 사전 개체로 이미 직렬화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3156ad13e4d695cd526bbb7b031016ecba842270" translate="yes" xml:space="preserve">
          <source>manage.py</source>
          <target state="translated">manage.py</target>
        </trans-unit>
        <trans-unit id="879ca203250b76e56521d55830df6dfae2983f41" translate="yes" xml:space="preserve">
          <source>merge_fixtures</source>
          <target state="translated">merge_fixtures</target>
        </trans-unit>
        <trans-unit id="ca98b30426d4917825a64219586b202fd21fec1f" translate="yes" xml:space="preserve">
          <source>my_new_fixture.json</source>
          <target state="translated">my_new_fixture.json</target>
        </trans-unit>
        <trans-unit id="cba3ecd5285fad5a1f1dbcb740e058962f51b03c" translate="yes" xml:space="preserve">
          <source>object.current_version.files.all()[0]</source>
          <target state="translated">object.current_version.files.all () [0]</target>
        </trans-unit>
        <trans-unit id="aabed890c6e939309bd9bc8eabbdc22d50d34ee5" translate="yes" xml:space="preserve">
          <source>on the dependents (which in turn pick
up the primary object).  The JSON dumps are then merged together.  Very handy
for dumping multi-dependent objects.</source>
          <target state="translated">종속 항목 (이는 차례로 기본 개체를 선택 함). 그런 다음 JSON 덤프가 함께 병합됩니다. 다중 종속 개체를 덤프하는 데 매우 편리합니다.</target>
        </trans-unit>
        <trans-unit id="081568f9d9ac8bf7338350eae5773f1525a32f59" translate="yes" xml:space="preserve">
          <source>options yields:</source>
          <target state="translated">옵션 결과 :</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">주문</target>
        </trans-unit>
        <trans-unit id="70f04e08f409fca14521593888d0b62ae8f67df6" translate="yes" xml:space="preserve">
          <source>order_cond</source>
          <target state="translated">order_cond</target>
        </trans-unit>
        <trans-unit id="cfebe7069523fd4c5e2ae22e5dec83d7b266a2af" translate="yes" xml:space="preserve">
          <source>reorder_fixtures</source>
          <target state="translated">reorder_fixtures</target>
        </trans-unit>
        <trans-unit id="445886f65e67a0cd87e80578d06cd6b652a5a0da" translate="yes" xml:space="preserve">
          <source>returns the json representation of
a specific object as well as all its dependencies (as defined by ForeignKeys):</source>
          <target state="translated">특정 객체의 json 표현과 모든 종속성 (ForeignKeys에 정의 된대로)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02e3bd782b090ba02a595f565256bdf497436247" translate="yes" xml:space="preserve">
          <source>self.parent_model1</source>
          <target state="translated">self.parent_model1</target>
        </trans-unit>
        <trans-unit id="888c15d72e41c9f0f1882f4aea4c2d19f1a044eb" translate="yes" xml:space="preserve">
          <source>settings.py</source>
          <target state="translated">settings.py</target>
        </trans-unit>
        <trans-unit id="01302d6d940627baa5397a4cab369299b48b30ab" translate="yes" xml:space="preserve">
          <source>therefore you should add it to
your</source>
          <target state="translated">따라서 당신은 당신의</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">에</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
