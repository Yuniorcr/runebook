<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/advent-of-code-py/">
    <body>
      <group id="advent-of-code-py">
        <trans-unit id="7b2a4827f04c945c4d6965a82b6ee4254136101f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://adventofcode.com&quot;&gt;Advent of Code&lt;/a&gt; helper CLI and library for python projects.</source>
          <target state="translated">&lt;a href=&quot;https://adventofcode.com&quot;&gt;&lt;/a&gt;Python 프로젝트를위한 코드 도우미 CLI 및 라이브러리의 출현 .</target>
        </trans-unit>
        <trans-unit id="45473cf4b37509ac18fe6725b75805fd71cc3ed4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;
Currently it is still in beta stage which may have lots of bug please report out bug if you find any</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 현재 아직 베타 단계에 있으며 버그가 많을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8e01739d5b6815e58b82ad6033855dbc821cb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;또는&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b83a85778c679b9e06aa3e66df827b42f3ca4888" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Status &amp;amp; Info:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;상태 및 정보 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="478aa102b5505992e20ea6b219818dff98106809" translate="yes" xml:space="preserve">
          <source>Advent of Code helper CLI and library</source>
          <target state="translated">코드 도우미 CLI 및 라이브러리의 출현</target>
        </trans-unit>
        <trans-unit id="1b840df8380a00e8de899b16b4c28066f7a7ccc0" translate="yes" xml:space="preserve">
          <source>Advent-of-code-py</source>
          <target state="translated">코드 파이의 출현</target>
        </trans-unit>
        <trans-unit id="a2aa9bb49898e921b6952e14539b4bc8c54a44b7" translate="yes" xml:space="preserve">
          <source>After calling out function &lt;code&gt;final_output&lt;/code&gt; value will be submitted out to Advent of Code server for 2018 year day 3
problem then returns out whether submitted answer was correct or not. If session value is not provided then
solution will be submitted to all session value set out.</source>
          <target state="translated">함수를 호출하면 &lt;code&gt;final_output&lt;/code&gt; 값이 2018 년 3 일 문제에 대한 Advent of Code 서버에 제출되고 제출 된 답변이 올바른지 여부를 반환합니다. 세션 값이 제공되지 않으면 설정된 모든 세션 값에 솔루션이 제출됩니다.</target>
        </trans-unit>
        <trans-unit id="f924e465a73a97ed7b5720dc9fb7ed69786d803e" translate="yes" xml:space="preserve">
          <source>After importing a library you can now use out either two decorator solve or submit decorator for a function of puzzle</source>
          <target state="translated">라이브러리를 가져온 후 이제 두 개의 데코레이터 해결을 사용하거나 퍼즐 기능을 위해 데코레이터를 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68ec0fe32b2d18d85cdb9db5f8c2098693757141" translate="yes" xml:space="preserve">
          <source>Code style</source>
          <target state="translated">코드 스타일</target>
        </trans-unit>
        <trans-unit id="68961f48637c1b050f125709987172ccbb4d6a51" translate="yes" xml:space="preserve">
          <source>For example:-</source>
          <target state="translated">예 :-</target>
        </trans-unit>
        <trans-unit id="b07c839f5cb108da010e5f09b90e9a12b1bcb12e" translate="yes" xml:space="preserve">
          <source>Initially for advent-of-code-py to work out it need session value or session ID which you can obtain out by viewing out cookie while visiting advent of code server.
After collecting session cookie value you need to add those value in config using advent-of-code-py CLI</source>
          <target state="translated">처음에 코드의 출현을 해결하려면 코드 서버의 출현을 방문하는 동안 쿠키를 확인하여 얻을 수있는 세션 값 또는 세션 ID가 필요합니다. 세션 쿠키 값을 수집 한 후 advent-of-code-py CLI를 사용하여 구성에 해당 값을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="82ef6df9befbce3b0454be04ab0a6bcb3b9d14dd" translate="yes" xml:space="preserve">
          <source>Now after decorating out function now you can call out function</source>
          <target state="translated">이제 함수를 꾸미고 나면 이제 함수를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ac528e3be9257fc9580ea49c07dec09677542b4" translate="yes" xml:space="preserve">
          <source>Now you can import out library by using</source>
          <target state="translated">이제 다음을 사용하여 라이브러리를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9d399ed0b836177414ef15401e87ba52a7b05a0" translate="yes" xml:space="preserve">
          <source>Now you can set out main_cli as entry points and it will create out CLI with appropriate name and function which was added.
So for example to run out function puzzle_2018_3_1() you have to run out command as &lt;code&gt;entry-point-name run p_3_1&lt;/code&gt; which
will run appropriate function as well as submit as desired.</source>
          <target state="translated">이제 main_cli를 진입 점으로 설정하면 추가 된 적절한 이름과 기능으로 CLI가 생성됩니다. 따라서 예를 들어 puzzle_2018_3_1 () 함수를 실행하려면 원하는대로 제출할뿐만 아니라 적절한 함수를 실행하는 &lt;code&gt;entry-point-name run p_3_1&lt;/code&gt; 로 명령을 실행 해야합니다.</target>
        </trans-unit>
        <trans-unit id="7aa66aded3b648554f99cca03909ed9dc938adab" translate="yes" xml:space="preserve">
          <source>Project Version</source>
          <target state="translated">프로젝트 버전</target>
        </trans-unit>
        <trans-unit id="411cd8f1f45ff4bead2b0535792853492f1405fa" translate="yes" xml:space="preserve">
          <source>To install out advent-of-code-py run out following command which install out advent-of-code-py cli and advent_of_code_py library.</source>
          <target state="translated">advent-of-code-py를 설치하려면 advent-of-code-py cli 및 advent_of_code_py 라이브러리를 설치하는 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1334dcf503cbd66f1ebc30c955cf1458852c98ef" translate="yes" xml:space="preserve">
          <source>Travis Build Status</source>
          <target state="translated">트래비스 빌드 상태</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="e47810bfe7d233b72c8a8fe9eaf6f92c478134fe" translate="yes" xml:space="preserve">
          <source>You can also use out advent-of-code-py builtin Initializer and runner to create out appropriate CLI
tool for problem so problem can be run easily
To set advent-of-code-py puzzle as CLI</source>
          <target state="translated">또한 advent-of-code-py 내장 이니셜 라이저 및 러너를 사용하여 문제에 대한 적절한 CLI 도구를 생성하여 문제를 쉽게 실행할 수 있습니다. 코드의 출현 퍼즐을 CLI로 설정하려면</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
