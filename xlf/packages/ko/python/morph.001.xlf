<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/morph/">
    <body>
      <group id="morph">
        <trans-unit id="15263ae554d4706fcfebb3d6888e152863ab6f93" translate="yes" xml:space="preserve">
          <source>(This is primarily useful when dealing with INI files, which can only
be flat: the</source>
          <target state="translated">(이는 플랫 일 수있는 INI 파일을 다룰 때 주로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fb2cbfabdb8e737b0d06483c62e1324811531752" translate="yes" xml:space="preserve">
          <source>(note that
lists cannot be unflattened).</source>
          <target state="translated">(목록은 분리 할 수 ​​없습니다).</target>
        </trans-unit>
        <trans-unit id="b2357079b956ff72c55c5066adf40ed6f8d9d7f6" translate="yes" xml:space="preserve">
          <source>(which defaults to</source>
          <target state="translated">(기본값은</target>
        </trans-unit>
        <trans-unit id="f42079a69ed8aee641cf555c14823f4b26a6116c" translate="yes" xml:space="preserve">
          <source>) or square brackets (</source>
          <target state="translated">) 또는 대괄호 (</target>
        </trans-unit>
        <trans-unit id="bcd6c92092ccba6b9fe58ac0ff2894b906b56a71" translate="yes" xml:space="preserve">
          <source>), returns that;
otherwise throws a ValueError exception.</source>
          <target state="translated">), 그것을 반환합니다; 그렇지 않으면 ValueError 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f334120f4ec9b1ed6b6330bdd37fc6b7f7f507d6" translate="yes" xml:space="preserve">
          <source>**kws</source>
          <target state="translated">** kw</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="ad73b3a7b0550b040a0a3aa4d90d35208d483360" translate="yes" xml:space="preserve">
          <source>, passed as the second
argument to</source>
          <target state="translated">, 두 번째 인수로 전달됨</target>
        </trans-unit>
        <trans-unit id="a10e9926e0e929587afb1394c2f7ff1dffdc1235" translate="yes" xml:space="preserve">
          <source>, should always support an arbitrary number
of keyword parameters (i.e. should always end the parameter list with
something like</source>
          <target state="translated">, 항상 임의의 수의 키워드 매개 변수를 지원해야합니다 (예 : 항상 매개 변수 목록을 다음과 같이 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e7ce2ada0e18f9c80f35a8bbd780fd239ca1004" translate="yes" xml:space="preserve">
          <source>, specifies that keys that start with the specified value
should be stripped from the returned dict.</source>
          <target state="translated">, 지정된 값으로 시작하는 키가 반환 된 dict에서 제거되어야 함을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="030b220b5d05b2b4046d2478bd033a87b32d316d" translate="yes" xml:space="preserve">
          <source>, specifies that only keys that start with the specified
string will be returned (and also filtered for the specified keys),
with the prefix stripped from the keys. If no keys are specified,
this will simply return only the keys with the specified prefix.</source>
          <target state="translated">, 지정된 문자열로 시작하는 키만 반환되도록 지정합니다 (지정된 키에 대해서도 필터링 됨). 접두사는 키에서 제거됩니다. 키를 지정하지 않으면 지정된 접두사가있는 키만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="261a6839aaf407a37d31249da271b9f4f83754ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dict&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;사전&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="905364791955e4760e61abfc678bfb1889a23173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;접두사&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="394fca637af302045f285921799f43776483cd7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tree&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;나무&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="367f9d3e711e56b68193ff217c3e45ded25b78a3" translate="yes" xml:space="preserve">
          <source>A collection of routines to help identify and morph objects.</source>
          <target state="translated">개체를 식별하고 변형하는 데 도움이되는 루틴 모음입니다.</target>
        </trans-unit>
        <trans-unit id="c694364fdeb56817df59134c924e14b4adcb130d" translate="yes" xml:space="preserve">
          <source>Converse of</source>
          <target state="translated">컨버스</target>
        </trans-unit>
        <trans-unit id="872d9a7e434a3f8eac01f8a956be9ef98e1065ef" translate="yes" xml:space="preserve">
          <source>Converts</source>
          <target state="translated">변환</target>
        </trans-unit>
        <trans-unit id="b458bf596556352820d6f7b75b73543215f89864" translate="yes" xml:space="preserve">
          <source>Converts a multi-dimensional list or dict type
to a one-dimensional list or dict.</source>
          <target state="translated">다차원 목록 또는 dict 유형을 1 차원 목록 또는 dict로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">예:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">예 :</target>
        </trans-unit>
        <trans-unit id="3365992453c130e29136383b891582245412c563" translate="yes" xml:space="preserve">
          <source>Extracts a subset of key/value pairs from a
dict-like object where the key is a specific
value or has a specific prefix.</source>
          <target state="translated">키가 특정 값이거나 특정 접두사가있는 dict-like 객체에서 키 / 값 쌍의 하위 집합을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="68839cce52f25f5e722d684d280b2b741a295de7" translate="yes" xml:space="preserve">
          <source>Flattening</source>
          <target state="translated">평탄화</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">에 대한</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">기능성</target>
        </trans-unit>
        <trans-unit id="7f4338fb13cf2368a58e80c63471c618c1e6db92" translate="yes" xml:space="preserve">
          <source>If specified and truthy, then the keys specified to either</source>
          <target state="translated">지정되고 진실이면 다음 중 하나에 지정된 키</target>
        </trans-unit>
        <trans-unit id="079bc3b6a59d995ce86a46665da2718451aea120" translate="yes" xml:space="preserve">
          <source>Is</source>
          <target state="translated">이다</target>
        </trans-unit>
        <trans-unit id="9de98aaac7b886db78e7b039c54eb9f3d19dfddb" translate="yes" xml:space="preserve">
          <source>Morph provides the following functions to help identify object types:</source>
          <target state="translated">Morph는 객체 유형을 식별하는 데 도움이되는 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8b445b91a85f865e232afcb3a4f9e1eb4b88ca28" translate="yes" xml:space="preserve">
          <source>Morph provides the following functions to help morph objects:</source>
          <target state="translated">Morph는 개체를 변형하는 데 도움이되는 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="74132370c3837494a5d4046ad003db251256d2fd" translate="yes" xml:space="preserve">
          <source>Morph&amp;rsquo;s</source>
          <target state="translated">Morph의</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>
        </trans-unit>
        <trans-unit id="f1b2ae84cb59204a2e53d29c4d050b8e94e906cf" translate="yes" xml:space="preserve">
          <source>Note that lists can never be unflattened, and unflattening dicts is
not garanteed to be round-trip consistent. The latter can happen if
the dict-to-be-flattened had keys with special characters in them,
such as a period (</source>
          <target state="translated">목록은 평탄화되지 않을 수 있으며 평탄화되지 않은 딕셔너리는 왕복 일관성이 보장되지 않습니다. 후자는 병합 될 dict에 마침표 ()와 같은 특수 문자가 포함 된 키가있는 경우 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdb2a6361bb0172ab78782a74ec6921f44d95c09" translate="yes" xml:space="preserve">
          <source>Note that the callback function</source>
          <target state="translated">콜백 함수는</target>
        </trans-unit>
        <trans-unit id="2ad06f04bfbf5b72d03d4af0b584e23bc7c19bdd" translate="yes" xml:space="preserve">
          <source>Picking and Omitting</source>
          <target state="translated">따기 및 생략</target>
        </trans-unit>
        <trans-unit id="dfc481d600b4b81fb6cdf8966f040ef140473662" translate="yes" xml:space="preserve">
          <source>Recursively transforms sequences &amp;amp; dicts in</source>
          <target state="translated">시퀀스 및 사전을 재귀 적으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1475cd289e44455ecdf27a73928d30c906cfdbec" translate="yes" xml:space="preserve">
          <source>Reverses the effects of</source>
          <target state="translated">효과를 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="e0a2d14ab2f474f3a08ce175db9ee0e87c1beff1" translate="yes" xml:space="preserve">
          <source>Specifies the class type that should be returned, which defaults
to the standard python</source>
          <target state="translated">반환되어야하는 클래스 유형을 지정합니다. 기본값은 표준 파이썬입니다.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">변환</target>
        </trans-unit>
        <trans-unit id="ca5e1888f7ff9f4679a3377b455596a48d014681" translate="yes" xml:space="preserve">
          <source>ValueError</source>
          <target state="translated">ValueError</target>
        </trans-unit>
        <trans-unit id="6bafa40ada13db972fa2bd005ec8f46294f1321d" translate="yes" xml:space="preserve">
          <source>When flattening a dict-like object, it collapses list- and dict-
subkeys into indexed and dotted top-level keys. For example:</source>
          <target state="translated">dict-like 개체를 평면화 할 때 목록 및 dict- 하위 키를 인덱싱되고 점으로 구분 된 최상위 키로 축소합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2aa78b04fc68da30832b366c50d22a81560a56cf" translate="yes" xml:space="preserve">
          <source>When flattening a sequence-like object (i.e. list or tuple),</source>
          <target state="translated">시퀀스와 유사한 객체 (예 : 목록 또는 튜플)를 평면화 할 때</target>
        </trans-unit>
        <trans-unit id="e053eec5f5e782282a0d1c8a83e9c3122c0daff5" translate="yes" xml:space="preserve">
          <source>With some limitations, this also works on object properties. For
example:</source>
          <target state="translated">몇 가지 제한 사항이 있지만 이것은 객체 속성에서도 작동합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="b94f1f069c4f8dcf66fdcb2b34da7feb40477fea" translate="yes" xml:space="preserve">
          <source>a dict-like type? This means that it
must have at least the following methods:</source>
          <target state="translated">dict-like 유형? 이는 최소한 다음 방법이 있어야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="eade0daf9ecfb0e6b76ba603340e74d8e9d712ea" translate="yes" xml:space="preserve">
          <source>a sequence-like (i.e. iterable) type
(but not a string or dict)?</source>
          <target state="translated">시퀀스와 같은 (즉, 반복 가능한) 유형 (문자열이나 dict는 아님)?</target>
        </trans-unit>
        <trans-unit id="f8b528cfa42edcb5624d9cdf970d95c1311748f0" translate="yes" xml:space="preserve">
          <source>a string?</source>
          <target state="translated">문자열?</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="9738e486d9f6d57cfbbc4e2fb154a09c670b9574" translate="yes" xml:space="preserve">
          <source>are evaluated as a multi-dimensional item addresses like
those produced by</source>
          <target state="translated">에서 생성 된 것과 같은 다차원 항목 주소로 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">기본</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">dict</target>
        </trans-unit>
        <trans-unit id="b9c7b42de27fde88448357eef801bbafbf848468" translate="yes" xml:space="preserve">
          <source>flat</source>
          <target state="translated">플랫</target>
        </trans-unit>
        <trans-unit id="bacef8c5a0403758a34a8d363562e7b7769cb548" translate="yes" xml:space="preserve">
          <source>flatten</source>
          <target state="translated">반음 낮추다</target>
        </trans-unit>
        <trans-unit id="a585197e0ed22e03b24a006c0287e7b73c65871f" translate="yes" xml:space="preserve">
          <source>functions allow converting
between complex structures and flat INI files).</source>
          <target state="translated">함수는 복잡한 구조와 플랫 INI 파일 간의 변환을 허용합니다.)</target>
        </trans-unit>
        <trans-unit id="c8be8c2ce8e681bcacce5f0ca4c796bdf2e31217" translate="yes" xml:space="preserve">
          <source>functions allow you to extract a set of keys
(or properties) from a dict-like object (or plain object). These
functions will aggressively return a valid dict, regardless of the
supplied value &amp;ndash; i.e. if</source>
          <target state="translated">함수를 사용하면 dict-like 객체 (또는 일반 객체)에서 키 (또는 속성) 집합을 추출 할 수 있습니다. 이러한 함수는 제공된 값에 관계없이 적극적으로 유효한 dict를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="72004cf8aac76471573dc78d5fc0b32685a79253" translate="yes" xml:space="preserve">
          <source>helper function can be used to recursively transform
all the items in a list &amp;amp; dictionary tree &amp;ndash; this effectively allows
the ease of list comprehensions to be applied to nested list/dict
structures.</source>
          <target state="translated">도우미 함수를 사용하여 목록 및 사전 트리의 모든 항목을 재귀 적으로 변환 할 수 있습니다.이를 통해 목록 이해가 중첩 된 목록 / 딕셔너리 구조에 쉽게 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6e4f784011e1fbb03e7a2a9049da1e17b960c20" translate="yes" xml:space="preserve">
          <source>is
truthy, the default), and otherwise returns a
list with itself as single object.</source>
          <target state="translated">진실, 기본값), 그렇지 않으면 자체가 단일 객체 인 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3967a89da4a12e7520bdccc41ae49e6ec8254b9e" translate="yes" xml:space="preserve">
          <source>is given as a source, an empty dict
is returned. Furthermore, the following optional keyword parameters
are accepted:</source>
          <target state="translated">소스로 제공되면 빈 dict가 반환됩니다. 또한 다음과 같은 선택적 키워드 매개 변수가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="196c5627adc844f20fe17c2ef02d7116dec834fa" translate="yes" xml:space="preserve">
          <source>is truthy, the default); if
sequence-like, returns itself converted to a list
(optionally flattened if keyword</source>
          <target state="translated">진실, 기본값입니다. 시퀀스와 유사한 경우 목록으로 변환 된 자체를 반환합니다 (선택적으로 if 키워드</target>
        </trans-unit>
        <trans-unit id="45df03f6982dee80f2e029129ae75e0048f371b1" translate="yes" xml:space="preserve">
          <source>items()</source>
          <target state="translated">항목 ()</target>
        </trans-unit>
        <trans-unit id="02c5870c446f2d6370d3611295dcf86df5b32cea" translate="yes" xml:space="preserve">
          <source>keys()</source>
          <target state="translated">키 ()</target>
        </trans-unit>
        <trans-unit id="6f85c5c07720f2ceb1f27f7efce7d4e1a656afc0" translate="yes" xml:space="preserve">
          <source>morph.flatten</source>
          <target state="translated">morph.flatten</target>
        </trans-unit>
        <trans-unit id="8d1a621447e91388402dd39d386e6ff1976eaa9d" translate="yes" xml:space="preserve">
          <source>morph.flatten(obj)</source>
          <target state="translated">morph.flatten (obj)</target>
        </trans-unit>
        <trans-unit id="73885d2f1c6e878f86dd439096bad144eb111ad6" translate="yes" xml:space="preserve">
          <source>morph.isdict(obj)</source>
          <target state="translated">morph.isdict (obj)</target>
        </trans-unit>
        <trans-unit id="e036b4277031ccc341bce61d58482fb59eed2c06" translate="yes" xml:space="preserve">
          <source>morph.isseq(obj)</source>
          <target state="translated">morph.isseq (obj)</target>
        </trans-unit>
        <trans-unit id="b9e6dfe26866c04fe1b44a2aa1d48c83b6cf3d50" translate="yes" xml:space="preserve">
          <source>morph.isstr(obj)</source>
          <target state="translated">morph.isstr (obj)</target>
        </trans-unit>
        <trans-unit id="94c1dd04a8d64fef6dd66c51075352e7306c2993" translate="yes" xml:space="preserve">
          <source>morph.omit(...)</source>
          <target state="translated">morph.omit (...)</target>
        </trans-unit>
        <trans-unit id="98a10406950ebdb85ee5dc2d5ab86c065e903e7f" translate="yes" xml:space="preserve">
          <source>morph.pick()</source>
          <target state="translated">morph.pick ()</target>
        </trans-unit>
        <trans-unit id="02dc41d03f6336f8189114854e7eea68728817ed" translate="yes" xml:space="preserve">
          <source>morph.pick(...)</source>
          <target state="translated">morph.pick (...)</target>
        </trans-unit>
        <trans-unit id="5b25cf75b82ee27e22e009eac841dc369538297d" translate="yes" xml:space="preserve">
          <source>morph.tobool(obj)</source>
          <target state="translated">morph.tobool (obj)</target>
        </trans-unit>
        <trans-unit id="89fd1c0a1794cc403053221cf717dd386d61ebe0" translate="yes" xml:space="preserve">
          <source>morph.tolist(obj)</source>
          <target state="translated">morph.tolist (obj)</target>
        </trans-unit>
        <trans-unit id="613031ba90dd6b1af1561d99a00aab2a33feaf72" translate="yes" xml:space="preserve">
          <source>morph.unflatten(obj)</source>
          <target state="translated">morph.unflatten (obj)</target>
        </trans-unit>
        <trans-unit id="4e564da6aa9f57a28b2c7993caec7dad663c4d2b" translate="yes" xml:space="preserve">
          <source>morph.xform</source>
          <target state="translated">morph.xform</target>
        </trans-unit>
        <trans-unit id="9f710881b18886613679f3d186416c54dbf47684" translate="yes" xml:space="preserve">
          <source>morph.xform(obj, func)</source>
          <target state="translated">morph.xform (obj, func)</target>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">obj</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="0f189b4a857c01fc184fa0a206d26a49a6fa2d5e" translate="yes" xml:space="preserve">
          <source>omit</source>
          <target state="translated">생략하다</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="e8fb7396dfe54e9d49f629d842bcb834eb35a9e9" translate="yes" xml:space="preserve">
          <source>parameter is not</source>
          <target state="translated">매개 변수가 아닙니다</target>
        </trans-unit>
        <trans-unit id="4c2e8554e331d42c11b4f804c340783b34447b3c" translate="yes" xml:space="preserve">
          <source>pick</source>
          <target state="translated">선택</target>
        </trans-unit>
        <trans-unit id="fae60010450bd8c73194900a74c256fd6d91dbda" translate="yes" xml:space="preserve">
          <source>recursively reduces multi-dimensional arrays to a
single dimension, but only for elements of each descended list that
are list-like. For example:</source>
          <target state="translated">다차원 배열을 재귀 적으로 단일 차원으로 줄이지 만 목록과 유사한 각 하위 목록의 요소에 대해서만. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">스플릿</target>
        </trans-unit>
        <trans-unit id="657412ebc9ee3d7cead0fd5ae863c8d1fc1ceaaa" translate="yes" xml:space="preserve">
          <source>to a bool; if string-like, it
is matched against a list of &amp;ldquo;truthy&amp;rdquo; or &amp;ldquo;falsy&amp;rdquo;
strings; if bool-like, returns itself; then, if
the</source>
          <target state="translated">부울에; 문자열과 유사한 경우 &quot;진정한&quot;또는 &quot;거짓&quot;문자열 목록과 일치합니다. bool과 같은 경우 자체를 반환합니다. 그런 다음</target>
        </trans-unit>
        <trans-unit id="2f8539b1e397be919869ad28e36720a03a39a8bb" translate="yes" xml:space="preserve">
          <source>to a list; if string-like, it
splits it according to Unix shell semantics (if
keyword</source>
          <target state="translated">목록에; 문자열과 같은 경우 Unix 쉘 의미론에 따라 분할합니다 (</target>
        </trans-unit>
        <trans-unit id="c1e7e23c9d7c1dc650f0d98f72356b3068127801" translate="yes" xml:space="preserve">
          <source>type.</source>
          <target state="translated">유형.</target>
        </trans-unit>
        <trans-unit id="f4db7f09384f465cc5269fbd1cd0fdfcfc73e527" translate="yes" xml:space="preserve">
          <source>unflatten</source>
          <target state="translated">평평하지 않게하다</target>
        </trans-unit>
        <trans-unit id="e28357700f15fb0774e5a47c6c8abe8eac68b036" translate="yes" xml:space="preserve">
          <source>values()</source>
          <target state="translated">값 ()</target>
        </trans-unit>
        <trans-unit id="abcfcdca4ad93b28ec49bf52844bbe0ee0073acb" translate="yes" xml:space="preserve">
          <source>xformer</source>
          <target state="translated">xformer</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
