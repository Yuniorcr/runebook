<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/percol/">
    <body>
      <group id="percol">
        <trans-unit id="1ef4f49291ae4574bc400ec737e374739e1fb234" translate="yes" xml:space="preserve">
          <source>Adds flavor of interactive filtering to the traditional pipe concept of shell</source>
          <target state="translated">Adds flavor of interactive filtering to the traditional pipe concept of shell</target>
        </trans-unit>
        <trans-unit id="6cd44538579eb5e4b155714bc903c4faeabd148d" translate="yes" xml:space="preserve">
          <source>Adds flavor of interactive filtering to the traditional pipe concept of shell.
Try:</source>
          <target state="translated">Adds flavor of interactive filtering to the traditional pipe concept of shell. Try:</target>
        </trans-unit>
        <trans-unit id="01c996af20736b9d06fe94cc27760b97c45ea6b0" translate="yes" xml:space="preserve">
          <source>Full details at &lt;a href=&quot;https://github.com/mooz/percol&quot;&gt;https://github.com/mooz/percol&lt;/a&gt;</source>
          <target state="translated">Full details at &lt;a href=&quot;https://github.com/mooz/percol&quot;&gt;https://github.com/mooz/percol&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="125916a2efbdb4b04184d6e3059584de4b436856" translate="yes" xml:space="preserve">
          <source>and you can display the output of command A and filter it interactively and then pass it to command B.
The interface of percol is highly inspired by anything.el for Emacs.</source>
          <target state="translated">and you can display the output of command A and filter it interactively and then pass it to command B. The interface of percol is highly inspired by anything.el for Emacs.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
