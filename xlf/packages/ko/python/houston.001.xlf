<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/houston/">
    <body>
      <group id="houston">
        <trans-unit id="38245b727e0bb71499e2005c0d16ec68f341a7de" translate="yes" xml:space="preserve">
          <source>, but when deployed it will be prefixed and versioned
appropriately as</source>
          <target state="translated">, 그러나 배포시 다음과 같이 적절하게 접두어 및 버전이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="52ab2ff563ae04129c6123312667326462818f61" translate="yes" xml:space="preserve">
          <source>Application deployment on CoreOS clusters using fleetd and Consul</source>
          <target state="translated">fleetd 및 Consul을 사용하여 CoreOS 클러스터에 애플리케이션 배포</target>
        </trans-unit>
        <trans-unit id="bdecc2a67cf0b6e62a8a73ac0a1e0028662296e3" translate="yes" xml:space="preserve">
          <source>Available at &lt;a href=&quot;https://houston.readthedocs.org/en/latest/history.html&quot;&gt;https://houston.readthedocs.org/en/latest/history.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://houston.readthedocs.org/en/latest/history.html&quot;&gt;https://houston.readthedocs.org/en/latest/history.html&lt;/a&gt; 에서 사용 가능</target>
        </trans-unit>
        <trans-unit id="0e94611fc543a36f09fd07c588917241dc9caeb5" translate="yes" xml:space="preserve">
          <source>Deployment Types</source>
          <target state="translated">배포 유형</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="b1505038ce3dfc9e8bbcc056d0c7b395e0db4d3c" translate="yes" xml:space="preserve">
          <source>Documentation is available on &lt;a href=&quot;https://houston.readthedocs.org/en/latest&quot;&gt;ReadTheDocs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://houston.readthedocs.org/en/latest&quot;&gt;ReadTheDocs&lt;/a&gt; 에서 문서를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="894ab23a678cace4784db9d25fff7bb2124e0ada" translate="yes" xml:space="preserve">
          <source>Easy docker stack deployment to &lt;a href=&quot;https://coreos.com&quot;&gt;CoreOS&lt;/a&gt; clusters using
&lt;a href=&quot;http://github.com/coreos/fleet&quot;&gt;Fleet&lt;/a&gt; and &lt;a href=&quot;https://www.consul.io&quot;&gt;Consul&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://github.com/coreos/fleet&quot;&gt;Fleet&lt;/a&gt; 및 &lt;a href=&quot;https://www.consul.io&quot;&gt;Consul을&lt;/a&gt; 사용하여 &lt;a href=&quot;https://coreos.com&quot;&gt;CoreOS&lt;/a&gt; 클러스터에 쉽게 도커 스택 배포 .</target>
        </trans-unit>
        <trans-unit id="11b3dc4a591837114646330975ae2790b7eefdc5" translate="yes" xml:space="preserve">
          <source>Example of deploying a full stack application:</source>
          <target state="translated">전체 스택 애플리케이션 배포의 예 :</target>
        </trans-unit>
        <trans-unit id="ac65c26e0ed8195ab1347dcf9130cd9bc4a0992c" translate="yes" xml:space="preserve">
          <source>Finally it will check to see if any other file archive versions exist in Consul&amp;rsquo;s for the
service, removing them if so.</source>
          <target state="translated">마지막으로 서비스를 위해 Consul에 다른 파일 아카이브 버전이 있는지 확인하고 있다면 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0d18e336310c0c00d6717631dd579c486549ba8f" translate="yes" xml:space="preserve">
          <source>Global deployments place a single list of units intended to be shared across all or a majority of CoreOS instances.</source>
          <target state="translated">전역 배포는 모든 또는 대부분의 CoreOS 인스턴스에서 공유 할 단일 장치 목록을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="dd1b97a65f86a5a7c2fbe690dbea2e317ce7bd38" translate="yes" xml:space="preserve">
          <source>Global file deployments happen after the unit files are deployed so that Consul can be up and running prior to the placement of the global files.</source>
          <target state="translated">전역 파일 배포는 단위 파일이 배포 된 후에 발생하므로 전역 파일을 배치하기 전에 Consul을 실행하고 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d915d898671cb872755e692606d5aae86f7045a8" translate="yes" xml:space="preserve">
          <source>Houston deployments allow for files to be placed onto the host OS, the deployment
of dependency containers, confirmed startup of a container using Consul, and
teardown of previous container versions in a single run.</source>
          <target state="translated">휴스턴 배포를 통해 파일을 호스트 OS에 배치하고, 종속성 컨테이너를 배포하고, Consul을 사용하여 컨테이너 시작을 확인하고, 단일 실행으로 이전 컨테이너 버전을 해체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdf858e6048c741f049a5e0e8f7918b92e78fffa" translate="yes" xml:space="preserve">
          <source>Houston has 3 deployment types: global, standalone stacks, and services. All three types allow for file archive deployments &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; using a &lt;a href=&quot;http://cloudinit.readthedocs.org/en/latest/topics/examples.html#writing-out-arbitrary-files&quot;&gt;cloud-init style&lt;/a&gt;</source>
          <target state="translated">Houston에는 글로벌, 독립 실행 형 스택 및 서비스의 세 가지 배포 유형이 있습니다. 세 가지 유형 모두 &lt;a href=&quot;http://cloudinit.readthedocs.org/en/latest/topics/examples.html#writing-out-arbitrary-files&quot;&gt;cloud-init 스타일을&lt;/a&gt; 사용하여 파일 아카이브 배포 &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; 를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="596b987ac49a252dfbae6525a1bd8d4bf2703de2" translate="yes" xml:space="preserve">
          <source>Houston installs as a command-line application and is meant to be used for automated
deployment of Dockerized application stacks.</source>
          <target state="translated">Houston은 명령 줄 애플리케이션으로 설치되며 Dockerized 애플리케이션 스택의 자동화 된 배포에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a9a53042ec40cfa18cad56e1adbd41ee36064908" translate="yes" xml:space="preserve">
          <source>Houston may be installed via the &lt;a href=&quot;http://pypi.python.org&quot;&gt;Python package index&lt;/a&gt;
with the tool of your choice:</source>
          <target state="translated">Houston은 선택한 도구와 함께 &lt;a href=&quot;http://pypi.python.org&quot;&gt;Python 패키지 색인&lt;/a&gt; 을 통해 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e853d821e4f4a1979f71f722f8d7e55432a619c6" translate="yes" xml:space="preserve">
          <source>In the next step, it iterates through the dependency containers specified in the
&lt;a href=&quot;examples/manifest.yaml&quot;&gt;manifest&lt;/a&gt;, submitting and starting each unit, waiting
until a unit is listed as</source>
          <target state="translated">다음 단계에서는 &lt;a href=&quot;examples/manifest.yaml&quot;&gt;매니페스트에&lt;/a&gt; 지정된 종속성 컨테이너를 반복 하여 각 단위를 제출하고 시작하며 단위가 다음과 같이 나열 될 때까지 기다 립니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="04405a7c90e09db56f844bcb748145bdb39aa2bc" translate="yes" xml:space="preserve">
          <source>Once a deployment has been confirmed, it looks at all units submitted to fleet,
checking to see if there are other versions of containers running than what it deployed.
If so, it will destroy those other containers with fleet.</source>
          <target state="translated">배포가 확인되면 플릿에 제출 된 모든 유닛을 살펴보고 배포 한 것보다 실행중인 다른 버전의 컨테이너가 있는지 확인합니다. 그렇다면 함대와 함께 다른 컨테이너를 파괴합니다.</target>
        </trans-unit>
        <trans-unit id="f2868da3e2e00839915b99c527d68e0097c13a06" translate="yes" xml:space="preserve">
          <source>One of the more interesting parts for managing stack deployment is the namespacing
of the shared stack elements in fleet, so that updating one stack does not impact
another.  For example, in the configuration, a service may be referred to as only</source>
          <target state="translated">스택 배포를 관리하는 데있어 가장 흥미로운 부분 중 하나는 플릿에서 공유 스택 요소의 네임 스페이스 지정이므로 한 스택을 업데이트해도 다른 스택에 영향을주지 않습니다. 예를 들어, 구성에서 서비스는</target>
        </trans-unit>
        <trans-unit id="7591e2557f5b316fd9e46ab50ab05186329ab88f" translate="yes" xml:space="preserve">
          <source>One the dependency containers have started, it starts the example service,
waiting for systemd to report it as active. It then queries Consul for the version
of the service that has started, ensuring that it is running on all the expected
nodes that fleet says it has deployed it to.</source>
          <target state="translated">종속성 컨테이너가 시작되면 systemd가 활성 상태로보고 할 때까지 대기하면서 예제 서비스를 시작합니다. 그런 다음 Consul에 시작된 서비스 버전을 쿼리하여 플릿이 배포했다고 말하는 모든 예상 노드에서 실행되고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b61da4027470165f200d2f48fd4338c1e9eacd91" translate="yes" xml:space="preserve">
          <source>Service deployments allow for the deployment of a single unit and the shared units that it is dependent upon</source>
          <target state="translated">서비스 배포를 통해 단일 장치 및 해당 장치가 종속 된 공유 장치를 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c87fcbaadf0e9e794a475fa0d2aadc3453eda2fc" translate="yes" xml:space="preserve">
          <source>Standalone deployments are like the global deployment but allows for more targeted deployments with file archives deployed first.</source>
          <target state="translated">독립 실행 형 배포는 전역 배포와 비슷하지만 먼저 배포 된 파일 아카이브를 사용하여보다 구체적인 배포를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="d5f5c5cf3d7169fecce2b6baf81298481412c56c" translate="yes" xml:space="preserve">
          <source>There is also an &lt;a href=&quot;example/&quot;&gt;example configuration directory&lt;/a&gt;.</source>
          <target state="translated">도있다 &lt;a href=&quot;example/&quot;&gt;예를 구성 디렉토리&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="6974ab729b6242600700a81b1ec6d4d1a48c0a94" translate="yes" xml:space="preserve">
          <source>Version History</source>
          <target state="translated">버전 기록</target>
        </trans-unit>
        <trans-unit id="3c899de050479c961ded04ad94f796075ca4500c" translate="yes" xml:space="preserve">
          <source>When executed, houston creates a tarball of files from the &lt;a href=&quot;example/files/blog.yaml&quot;&gt;service&amp;rsquo;s file manifest&lt;/a&gt;
and uploads it to Consul&amp;rsquo;s KV database. It then deploys a dynamically created systemd unit to fleet,
which pulls the tarball from Consul and extracts the files to the CoreOS filesystem.</source>
          <target state="translated">실행되면 houston은 &lt;a href=&quot;example/files/blog.yaml&quot;&gt;서비스의 파일 매니페스트에서 파일&lt;/a&gt; 타르볼을 만들어 Consul의 KV 데이터베이스에 업로드합니다. 그런 다음 동적으로 생성 된 시스템 유닛을 플릿에 배포하여 Consul에서 tarball을 가져와 CoreOS 파일 시스템으로 파일을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">유효한</target>
        </trans-unit>
        <trans-unit id="c3499c2729730a7f807efb8676a92dcb6f8a3f8f" translate="yes" xml:space="preserve">
          <source>example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="205dd4ef9311500de0ce2291cef0447100e5e940" translate="yes" xml:space="preserve">
          <source>example-pgbouncer@f20fb494</source>
          <target state="translated">example-pgbouncer @ f20fb494</target>
        </trans-unit>
        <trans-unit id="70e5f9c3e8c08234e91824be06e05d68e5183784" translate="yes" xml:space="preserve">
          <source>if the service name is</source>
          <target state="translated">서비스 이름이</target>
        </trans-unit>
        <trans-unit id="1de40ee66424c4cb67cb695f02321951e7202087" translate="yes" xml:space="preserve">
          <source>in systemd for all nodes, and then
moves on to the next.</source>
          <target state="translated">모든 노드에 대해 systemd에서 다음으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="532374162760e6313b7f7546a8e6ebaaacfecf6c" translate="yes" xml:space="preserve">
          <source>pgbouncer:f20fb494</source>
          <target state="translated">pgbouncer : f20fb494</target>
        </trans-unit>
        <trans-unit id="9367e446b1460653788bd97ed548b89ec0ccad68" translate="yes" xml:space="preserve">
          <source>section.</source>
          <target state="translated">부분.</target>
        </trans-unit>
        <trans-unit id="a0fad99be8b9e5cdbaf6d0ced63d55c59ee3d58f" translate="yes" xml:space="preserve">
          <source>write_files</source>
          <target state="translated">write_files</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
