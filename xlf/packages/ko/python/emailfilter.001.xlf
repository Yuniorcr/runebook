<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/emailfilter/">
    <body>
      <group id="emailfilter">
        <trans-unit id="073359573c1c366aae63b8eba6b5d84f4ba40599" translate="yes" xml:space="preserve">
          <source>&amp;ndash; which name it will be depends
on which specific flavor of Unix/Linux you are running).</source>
          <target state="translated">&amp;ndash; 어떤 이름은 실행중인 Unix / Linux의 특정 버전에 따라 다릅니다.)</target>
        </trans-unit>
        <trans-unit id="1e1407a87015e8d38b47ba2685a76f0ccc461910" translate="yes" xml:space="preserve">
          <source>, but as above, filtering will be
significantly slower).</source>
          <target state="translated">그러나 위와 같이 필터링이 상당히 느려집니다.)</target>
        </trans-unit>
        <trans-unit id="9370b0f96df8f69289e644aa5162c86a18683f78" translate="yes" xml:space="preserve">
          <source>, can automatically detect if
you don&amp;rsquo;t have PLIB installed, and if so, it will download
and install it for you before installing EMailFilter.</source>
          <target state="translated">, PLIB가 설치되어 있지 않은지 자동으로 감지 할 수 있으며, 설치되어있는 경우 EMailFilter를 설치하기 전에 다운로드하여 설치합니다.</target>
        </trans-unit>
        <trans-unit id="345ba69cc2fea67ce22656b09e83f149b6b96534" translate="yes" xml:space="preserve">
          <source>, or the</source>
          <target state="translated">, 아니면 그</target>
        </trans-unit>
        <trans-unit id="ddbfe46d29072725b61a3ee03c6abfefa0973acd" translate="yes" xml:space="preserve">
          <source>-c</source>
          <target state="translated">-씨</target>
        </trans-unit>
        <trans-unit id="d868a680affb6ad2c7e2392566b6adc4e3201dea" translate="yes" xml:space="preserve">
          <source>-n</source>
          <target state="translated">-엔</target>
        </trans-unit>
        <trans-unit id="1ffa835f18b0d84b7be1c7c0ecd4eb3e149bf81a" translate="yes" xml:space="preserve">
          <source>-t</source>
          <target state="translated">-티</target>
        </trans-unit>
        <trans-unit id="0a49e354e9dd17267d29d87941a4a2580e28e534" translate="yes" xml:space="preserve">
          <source>. However, the helper module used by EMailFilter&amp;rsquo;s
setup script,</source>
          <target state="translated">. 그러나 EMailFilter의 설정 스크립트에서 사용하는 도우미 모듈은</target>
        </trans-unit>
        <trans-unit id="ad5f0d3aa968bd29b8485d520075dd9cb51f5e7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTER.PY&lt;/strong&gt;: the core filter logic; it allows
you to add as many Python filtering modules as you
want, and will give each filtering module a chance
to examine each e-mail message and (possibly) add
&amp;lsquo;X-&amp;lsquo; headers to record its findings.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTER.PY&lt;/strong&gt; : 핵심 필터 로직; 원하는만큼 파이썬 필터링 모듈을 추가 할 수 있으며 각 필터링 모듈에 각 전자 메일 메시지를 검사하고 (가능하면) 'X-'헤더를 추가하여 결과를 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa8d57d3cbd88502fdef1c39e6aa7ad930c22c3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERC.PY&lt;/strong&gt;: a command-line client program that
takes its standard input, sends it through a socket
to the daemon on the appropriate port, receives the processed
data back, and writes it to standard output. This
is &lt;em&gt;not&lt;/em&gt; the preferred method of talking to the daemon;
see the</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERC.PY&lt;/strong&gt; : 표준 입력을 받아 소켓을 통해 적절한 포트의 데몬으로 보내고 처리 된 데이터를 다시 받아 표준 출력에 쓰는 명령 줄 클라이언트 프로그램입니다. 이것은 데몬과 통신하는 데 선호되는 방법 이 &lt;em&gt;아닙니다&lt;/em&gt; . 참조</target>
        </trans-unit>
        <trans-unit id="aca13ba9112e07888524011116d4f9b185493d74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERC&lt;/strong&gt;: a shell script to invoke the client; it
can use</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERC&lt;/strong&gt; : 클라이언트를 호출하는 쉘 스크립트. 그것은 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="43e28b97931ae8774ded8800848c1df77a8a250b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERD.PY&lt;/strong&gt;: the preferred mode of operation
for EMailFilter; it wraps EMAILFILTER.PY in a daemon
that listens on a user-specific port (currently the
port number is 5590 + the user id) and processes each e-mail
message sent to it through that port.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERD.PY&lt;/strong&gt; : &lt;strong&gt;EMailFilter&lt;/strong&gt; 의 기본 작동 모드입니다. 사용자 별 포트 (현재 포트 번호는 5590 + 사용자 ID)를 수신하는 데몬에서 EMAILFILTER.PY를 래핑하고 해당 포트를 통해 전송 된 각 전자 메일 메시지를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="bfc33bdcdd6c9d7ba330bf647fe9011021b54c24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERD&lt;/strong&gt;: a shell script to invoke the daemon.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERD&lt;/strong&gt; : 데몬을 호출하는 쉘 스크립트.</target>
        </trans-unit>
        <trans-unit id="3882a5e89594b54a693e8745093c07f93888526e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERDEFS.PY&lt;/strong&gt;: common definitions for all
the above modules.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERDEFS.PY&lt;/strong&gt; : 위의 모든 모듈에 대한 공통 정의.</target>
        </trans-unit>
        <trans-unit id="63101d61d4a65613435628c0ffdc7bf7addd6d36" translate="yes" xml:space="preserve">
          <source>A customizable e-mail content filter.</source>
          <target state="translated">사용자 지정 가능한 전자 메일 콘텐츠 필터입니다.</target>
        </trans-unit>
        <trans-unit id="cf3ebf8f74eecd27b471c2991ee7b17d7bd42691" translate="yes" xml:space="preserve">
          <source>EMailFilter is a customizable e-mail content filter
written in Python. It consists of the following
Python modules and shell scripts:</source>
          <target state="translated">EMailFilter는 Python으로 작성된 사용자 지정 가능한 전자 메일 콘텐츠 필터입니다. 다음 Python 모듈과 셸 스크립트로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="711f86046eadedee098296749c20990e9058dcfb" translate="yes" xml:space="preserve">
          <source>EMailFilter requires the PLIB Python library package,
which is available from the Python Package Index under the
name</source>
          <target state="translated">EMailFilter에는 PLIB Python 라이브러리 패키지가 필요합니다.이 패키지는 Python 패키지 색인에서 이름으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3ec77ccb09e48d1f860fa56530f9662f05a37bf3" translate="yes" xml:space="preserve">
          <source>Most e-mail clients can be set up to invoke any
desired filter program, sending it messages on standard
input and receiving processed messages on standard output;
thus, to use EMailFilter, simply tell your e-mail client
to invoke</source>
          <target state="translated">대부분의 전자 메일 클라이언트는 원하는 필터 프로그램을 호출하여 표준 입력으로 메시지를 보내고 표준 출력으로 처리 된 메시지를 수신하도록 설정할 수 있습니다. 따라서 EMailFilter를 사용하려면 전자 메일 클라이언트에</target>
        </trans-unit>
        <trans-unit id="15a857bf81f2e990d31ecb018928fa65cad0d691" translate="yes" xml:space="preserve">
          <source>SetupHelper</source>
          <target state="translated">SetupHelper</target>
        </trans-unit>
        <trans-unit id="942a5f363da15c6ed14d297e3245489fb1e30628" translate="yes" xml:space="preserve">
          <source>To install EMailFilter, you can simply run:</source>
          <target state="translated">EMailFilter를 설치하려면 다음을 실행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="f66fcce01612266ae8c11ccb435d30c667263134" translate="yes" xml:space="preserve">
          <source>above if necessary, but this
is slow because it requires a new instance of the Python
interpreter to be loaded for each e-mail message (the
message comes in on standard input and the processed
message is written to standard output). The preferred
method is to use either the CFilter program (available on
SourceForge, see &lt;a href=&quot;http://cfilter.sourceforge.net&quot;&gt;http://cfilter.sourceforge.net&lt;/a&gt;) as
the client (this is done by invoking this script with
the</source>
          <target state="translated">위의 필요에 따라이 속도가 느리지 만 각 전자 메일 메시지에 대해 Python 인터프리터의 새 인스턴스를로드해야하기 때문에 속도가 느립니다 (메시지는 표준 입력으로 들어오고 처리 된 메시지는 표준 출력에 기록됨). 선호하는 방법은 CFilter 프로그램 (SourceForge에서 사용 가능, &lt;a href=&quot;http://cfilter.sourceforge.net&quot;&gt;http://cfilter.sourceforge.net&lt;/a&gt; 참조 )을 클라이언트로 사용하는 것입니다 (이는이 스크립트를</target>
        </trans-unit>
        <trans-unit id="e57f6b460138b1d45df955eea7ba00d8e555a4c9" translate="yes" xml:space="preserve">
          <source>as the filter program (you
can leave out the</source>
          <target state="translated">필터 프로그램으로 (당신은</target>
        </trans-unit>
        <trans-unit id="92ca2409efcc85724c7881aa28584cc2c5b98c76" translate="yes" xml:space="preserve">
          <source>at a shell prompt from the directory into which you
unzipped the source tarball (the same directory that this
README file is in). This will install EMailFilter, and then
run each of the post-install scripts in the scripts
directory.</source>
          <target state="translated">소스 tarball의 압축을 푼 디렉토리 (이 README 파일이있는 동일한 디렉토리)의 쉘 프롬프트에서. 이렇게하면 EMailFilter가 설치되고 스크립트 디렉토리에서 각 설치 후 스크립트가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="055b9ec50e882a652bb6b94ed3558c4b76174325" translate="yes" xml:space="preserve">
          <source>emailfilterc</source>
          <target state="translated">emailfilterc</target>
        </trans-unit>
        <trans-unit id="e0583ea28d3f33c20c587d8ffcbeb1a154436e87" translate="yes" xml:space="preserve">
          <source>emailfilterc -c</source>
          <target state="translated">emailfilterc -c</target>
        </trans-unit>
        <trans-unit id="f6c01ef30e273de25f3fcc8ddf8aa2044e0c70d3" translate="yes" xml:space="preserve">
          <source>emailfilterc.py</source>
          <target state="translated">emailfilterc.py</target>
        </trans-unit>
        <trans-unit id="e04227249fdfdd11253d2eef9789589a54d09a93" translate="yes" xml:space="preserve">
          <source>nc</source>
          <target state="translated">체크 안함</target>
        </trans-unit>
        <trans-unit id="8ec45b7271aa9736d42a4a9e5ef4480f97b8e869" translate="yes" xml:space="preserve">
          <source>netcat</source>
          <target state="translated">넷캣</target>
        </trans-unit>
        <trans-unit id="547da0e78c6ea30a33af11350d7b80683bdd74f7" translate="yes" xml:space="preserve">
          <source>option if it goes by the
command name</source>
          <target state="translated">명령 이름으로 이동하는 경우 옵션</target>
        </trans-unit>
        <trans-unit id="0367d0c037ef1044bfb5864f4b4c17f36f577acf" translate="yes" xml:space="preserve">
          <source>option) or the &amp;ldquo;TCP/IP swiss army knife&amp;rdquo;
netcat program (this is done by invoking the script with
either the</source>
          <target state="translated">옵션) 또는 &quot;TCP / IP swiss army knife&quot;netcat 프로그램 (이는 다음 중 하나를 사용하여 스크립트를 호출하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7547ef5f0c956cc20103a8f103523725806e114b" translate="yes" xml:space="preserve">
          <source>option, if netcat goes by the command
name</source>
          <target state="translated">옵션 (netcat이 명령 이름으로 이동하는 경우)</target>
        </trans-unit>
        <trans-unit id="73bfbbb9813abafc85c333f40f13bd6aab71f8a8" translate="yes" xml:space="preserve">
          <source>plib</source>
          <target state="translated">plib</target>
        </trans-unit>
        <trans-unit id="b5014390e1322352942183b3996e62228665f1e1" translate="yes" xml:space="preserve">
          <source>shell script below.</source>
          <target state="translated">아래의 쉘 스크립트.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
