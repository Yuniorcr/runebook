<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/dhash/">
    <body>
      <group id="dhash">
        <trans-unit id="b20123c7be5e78c7f4918a7ce53e98c80dfc8f46" translate="yes" xml:space="preserve">
          <source>. To format the hash value in various ways, use
the</source>
          <target state="translated">. 다양한 방식으로 해시 값의 형식을 지정하려면</target>
        </trans-unit>
        <trans-unit id="6c95fe6b452314dfc2a751a417f900c710e3a9dc" translate="yes" xml:space="preserve">
          <source>Calculate difference hash (perceptual hash) for a given image, useful for detecting duplicates</source>
          <target state="translated">주어진 이미지에 대한 차이 해시 (지각 해시)를 계산하여 중복을 감지하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3164ab66bbfd73f5605b444b7deb3a465bd3631c" translate="yes" xml:space="preserve">
          <source>Combine the two values to produce the final 128-bit hash value</source>
          <target state="translated">두 값을 결합하여 최종 128 비트 해시 값을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fbdc9b9d2df345c6355b840fd0bf37ef7dbe7a89" translate="yes" xml:space="preserve">
          <source>Convert the image to grayscale</source>
          <target state="translated">이미지를 회색조로 변환</target>
        </trans-unit>
        <trans-unit id="d182807327b04c6b3fb90c83712c5dbc943f8996" translate="yes" xml:space="preserve">
          <source>Do the same to produce a 64-bit &amp;ldquo;column hash&amp;rdquo; in the y direction</source>
          <target state="translated">동일한 작업을 수행하여 y 방향으로 64 비트 &quot;열 해시&quot;를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6d185f74700b92ce8a470a6c59f34133a5cbca52" translate="yes" xml:space="preserve">
          <source>Downsize it to a 9x9 thumbnail (size=8 means an 8+1 by 8+1 image)</source>
          <target state="translated">9x9 미리보기 이미지로 축소 (size = 8은 8 + 1 x 8 + 1 이미지를 의미 함)</target>
        </trans-unit>
        <trans-unit id="170a6c18e38c81a59b30d3d059698080396dd6bc" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;ve found that the dhash is great for detecting near duplicates (at
&lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt; we find dupes using a size 8 dhash with a maximum delta of 2
bits). But because of the simplicity of the algorithm, it&amp;rsquo;s not great at
finding similar images or duplicate-but-cropped images &amp;ndash; you&amp;rsquo;d need a more
sophisticated image fingerprint if you want that. However, the dhash is good
for finding exact duplicates and near duplicates, for example, the same image
with slightly altered lighting, a few pixels of cropping, or very light
photoshopping.</source>
          <target state="translated">나는 dhash가 거의 중복을 감지하는 데 훌륭하다는 것을 발견했습니다 ( &lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt; 에서는 최대 델타가 2 비트 인 크기 8 dhash를 사용하여 dupes를 찾습니다). 그러나 알고리즘의 단순성 때문에 유사한 이미지 나 중복되지만 잘린 이미지를 찾는 데는 좋지 않습니다. 원하는 경우 더 정교한 이미지 지문이 필요합니다. 그러나 dhash는 조명이 약간 변경된 동일한 이미지, 몇 픽셀의 자르기 또는 매우 가벼운 포토샵과 같이 정확한 복제본과 가까운 복제본을 찾는 데 적합합니다.</target>
        </trans-unit>
        <trans-unit id="88f95bc8c830d452bc79f445c4c4be8da65f2e40" translate="yes" xml:space="preserve">
          <source>If you have both libraries installed, dhash will use wand by default. To
override this and force use of Pillow/PIL, call</source>
          <target state="translated">두 라이브러리를 모두 설치 한 경우 dhash는 기본적으로 wand를 사용합니다. 이를 무시하고 Pillow / PIL을 강제로 사용하려면 다음을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="d79a9b0f747a565bd655ac8e0ec13b936cda089f" translate="yes" xml:space="preserve">
          <source>If you have your own library to convert an image to grayscale and downsize it
to 9x9 (or 17x17 for size=16), you can pass</source>
          <target state="translated">이미지를 그레이 스케일로 변환하고 9x9 (크기 = 16의 경우 17x17)로 축소 할 자체 라이브러리가있는 경우 다음을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb1675e9ac57664031c0e4b54ceb753a43d2c084" translate="yes" xml:space="preserve">
          <source>Produce a 64-bit &amp;ldquo;row hash&amp;rdquo;: a 1 bit means the pixel intensity is increasing
in the x direction, 0 means it&amp;rsquo;s decreasing</source>
          <target state="translated">64 비트 &quot;행 해시&quot;생성 : 1 비트는 픽셀 강도가 x 방향으로 증가하고 있음을 의미하고 0은 감소 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b3b15ea3e75a15225f58c7c7d86ddc524cbb9c6b" translate="yes" xml:space="preserve">
          <source>Read the code in &lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/dhash.py&quot;&gt;dhash.py&lt;/a&gt; for more details &amp;ndash; it&amp;rsquo;s pretty small!</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/dhash.py&quot;&gt;dhash.py&lt;/a&gt; 의 코드를 읽으십시오 &amp;ndash; 매우 작습니다!</target>
        </trans-unit>
        <trans-unit id="1593b2a81f88e19df33c3e552290ecee9e765baf" translate="yes" xml:space="preserve">
          <source>The algorithm to create a difference hash is very simple:</source>
          <target state="translated">차이 해시를 생성하는 알고리즘은 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="c559cde8733dc6d54f9ac83a82fcd2e7c5542e0a" translate="yes" xml:space="preserve">
          <source>The library defaults to producing a size 8 dhash, but you can override this
easily by passing</source>
          <target state="translated">라이브러리는 기본적으로 크기 8 dhash를 생성하지만 다음을 전달하여 쉽게 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3aca01c2ebf1d5a6e183b0f8afe8d72458fb9cc1" translate="yes" xml:space="preserve">
          <source>The library is &lt;a href=&quot;https://pypi.python.org/pypi/dhash&quot;&gt;on the Python Package Index (PyPI)&lt;/a&gt; and works on both Python
3 and Python 2.7. To install it, fire up a command prompt, activate your
virtual environment if you&amp;rsquo;re using one, and type:</source>
          <target state="translated">라이브러리는 &lt;a href=&quot;https://pypi.python.org/pypi/dhash&quot;&gt;Python 패키지 색인 (PyPI)&lt;/a&gt; 에 있으며 Python 3 및 Python 2.7에서 모두 작동합니다. 설치하려면 명령 프롬프트를 실행하고 가상 환경을 사용중인 경우 활성화 한 후 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="a45498a668cef02a35314d50f8ecbb2c9d6825d1" translate="yes" xml:space="preserve">
          <source>To compute the number of bits different (hamming distance) between two
hashes, you can use the</source>
          <target state="translated">두 해시간에 서로 다른 비트 수 (해밍 거리)를 계산하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a2a907ef188ab680ad0206f995d454d5733635f" translate="yes" xml:space="preserve">
          <source>To produce a dhash value using Pillow:</source>
          <target state="translated">Pillow를 사용하여 dhash 값을 생성하려면 :</target>
        </trans-unit>
        <trans-unit id="85f3376c096addc14cb1d44beb618ccc5b82ffcb" translate="yes" xml:space="preserve">
          <source>To produce a dhash value using wand:</source>
          <target state="translated">wand를 사용하여 dhash 값을 생성하려면 :</target>
        </trans-unit>
        <trans-unit id="4c51b69b19ec20c4ed5e4bde682cdff2357a7f54" translate="yes" xml:space="preserve">
          <source>To produce the hash value as a 128-bit integer directly, use</source>
          <target state="translated">해시 값을 128 비트 정수로 직접 생성하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0d5290235a3ad693ef42bfb9e36433aa43a701ce" translate="yes" xml:space="preserve">
          <source>To use the dhash library, you need either the &lt;a href=&quot;https://pypi.python.org/pypi/Wand&quot;&gt;wand&lt;/a&gt; ImageMagick binding or
the &lt;a href=&quot;https://pypi.python.org/pypi/Pillow&quot;&gt;Pillow (PIL)&lt;/a&gt; library installed. Pick one and stick with it &amp;ndash; they will
produce slightly different dhash values due to differences in their grayscale
conversion and resizing algorithms.</source>
          <target state="translated">dhash 라이브러리를 사용하려면 &lt;a href=&quot;https://pypi.python.org/pypi/Wand&quot;&gt;완드&lt;/a&gt; ImageMagick 바인딩 또는 &lt;a href=&quot;https://pypi.python.org/pypi/Pillow&quot;&gt;Pillow (PIL)&lt;/a&gt; 라이브러리가 설치되어 있어야합니다. 하나를 고르고 고수하십시오. 그레이 스케일 변환 및 크기 조정 알고리즘의 차이로 인해 약간 다른 dhash 값이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="12fbbd681c47aac3f8ee7173e3578b4c7e76bebf" translate="yes" xml:space="preserve">
          <source>You can also use dhash to generate the difference hash for a specific image
from the command line:</source>
          <target state="translated">또한 dhash를 사용하여 명령 줄에서 특정 이미지에 대한 차이 해시를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52e56f0b6a6123f4ea0cb3062a6c6d3229f6a7cd" translate="yes" xml:space="preserve">
          <source>a list of
integer pixel intensities (for example, from 0 to 255). For example:</source>
          <target state="translated">정수 픽셀 강도 목록 (예 : 0 ~ 255) 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="ba5efb43f91833a508552e8c77468e414237e743" translate="yes" xml:space="preserve">
          <source>as a keyword argument to most functions. For
example, you can produce a more accurate (but slower to work with) dhash of
512 bits by specifying</source>
          <target state="translated">대부분의 함수에 대한 키워드 인수로. 예를 들어 다음을 지정하여 512 비트의 더 정확한 (하지만 작업 속도가 느림) dhash를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a573069697334dfc6499a661d4494acf22a8b06e" translate="yes" xml:space="preserve">
          <source>before
using the library.</source>
          <target state="translated">라이브러리를 사용하기 전에.</target>
        </trans-unit>
        <trans-unit id="251ad61d85986190aa9516acdd4cd7caf31e980b" translate="yes" xml:space="preserve">
          <source>dhash is a Python library that generates a &amp;ldquo;difference hash&amp;rdquo; for a given image
&amp;ndash; a &lt;a href=&quot;https://en.wikipedia.org/wiki/Perceptual_hashing&quot;&gt;perceptual hash&lt;/a&gt; based on Neal Krawetz&amp;rsquo;s dHash algorithm in &lt;a href=&quot;http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html&quot;&gt;this
&amp;ldquo;Hacker Factor&amp;rdquo; blog entry&lt;/a&gt;.</source>
          <target state="translated">dhash는 주어진 이미지에 대해 &quot;차이 해시&quot;를 생성하는 Python 라이브러리입니다 . &lt;a href=&quot;http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html&quot;&gt;이 &quot;해커 팩터&quot;블로그 항목&lt;/a&gt; 에있는 Neal Krawetz의 dHash 알고리즘을 기반으로 하는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Perceptual_hashing&quot;&gt;지각 해시&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6bfd8d7b12163fc78f9b7468d60b23cfa4930fe6" translate="yes" xml:space="preserve">
          <source>dhash was written by &lt;a href=&quot;http://benhoyt.com/&quot;&gt;Ben Hoyt&lt;/a&gt; for &lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt; and is licensed with a
permissive MIT license (see &lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;).</source>
          <target state="translated">dhash는 &lt;a href=&quot;http://benhoyt.com/&quot;&gt;Ben Hoyt&lt;/a&gt; 가 &lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt; 용 으로 작성했으며 허용 MIT 라이선스로 라이선스가 부여되었습니다 ( &lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f18b8f9bd69f09406b087db45fb87b90c553e8a1" translate="yes" xml:space="preserve">
          <source>dhash.force_pil()</source>
          <target state="translated">dhash.force_pil ()</target>
        </trans-unit>
        <trans-unit id="ec7bcb12a07cd00928c2398f59344fb49a0e33ab" translate="yes" xml:space="preserve">
          <source>dhash_int(image, size=N)</source>
          <target state="translated">dhash_int (이미지, 크기 = N)</target>
        </trans-unit>
        <trans-unit id="fd721112b89e47ee41d294fd5d18b6c867df37ff" translate="yes" xml:space="preserve">
          <source>dhash_row_col()</source>
          <target state="translated">dhash_row_col ()</target>
        </trans-unit>
        <trans-unit id="aa7622925a4a7e40de940dd315d6e39ba3214642" translate="yes" xml:space="preserve">
          <source>format_*</source>
          <target state="translated">체재_*</target>
        </trans-unit>
        <trans-unit id="93d24119ea238d4822b69f04dbebbb29017321f5" translate="yes" xml:space="preserve">
          <source>functions:</source>
          <target state="translated">기능 :</target>
        </trans-unit>
        <trans-unit id="b7c9f7f3a6494c3b573908f69a9aa9370ab69b42" translate="yes" xml:space="preserve">
          <source>get_num_bits_different(hash1, hash2)</source>
          <target state="translated">get_num_bits_different (hash1, hash2)</target>
        </trans-unit>
        <trans-unit id="cb1382a723f04c8a79621164f9e612538f9586d0" translate="yes" xml:space="preserve">
          <source>helper
function:</source>
          <target state="translated">도우미 기능 :</target>
        </trans-unit>
        <trans-unit id="dbc17dd99ad59b3919d75ad18a695ebbacdede22" translate="yes" xml:space="preserve">
          <source>size=16</source>
          <target state="translated">size = 16</target>
        </trans-unit>
        <trans-unit id="2cb52da80ce04bc35a6aed352a99d9d19e5f7187" translate="yes" xml:space="preserve">
          <source>size=N</source>
          <target state="translated">크기 = N</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
