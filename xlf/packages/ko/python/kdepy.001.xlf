<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/kdepy/">
    <body>
      <group id="kdepy">
        <trans-unit id="c99f0b9d31471b0af78db7f1d6c5655e61e65fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#fftkde&quot;&gt;&lt;code&gt;FFTKDE&lt;/code&gt;&lt;/a&gt; - A very fast convolution-based computation. Supports weighted d-dimensional data and many kernels, but not variable bandwidth. Must be evaluated on an equidistant grid, the finer the grid the higher the accuracy. Data points may not be outside of the grid.</source>
          <target state="translated">&lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#fftkde&quot;&gt; &lt;code&gt;FFTKDE&lt;/code&gt; -&lt;/a&gt; 매우 빠른 컨볼 루션 기반 계산입니다. 가중 d 차원 데이터와 많은 커널을 지원하지만 가변 대역폭은 지원하지 않습니다. 등거리 그리드에서 평가해야하며 그리드가 미세할수록 정확도가 높아집니다. 데이터 포인트는 그리드 외부에있을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="636d237551ab3cdebe5edb3137acb16988f4c242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#naivekde&quot;&gt;&lt;code&gt;NaiveKDE&lt;/code&gt;&lt;/a&gt; - A naive computation. Supports d-dimensional data, variable bandwidth, weighted data and many kernel functions. Very slow on large data sets.</source>
          <target state="translated">&lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#naivekde&quot;&gt; &lt;code&gt;NaiveKDE&lt;/code&gt; -&lt;/a&gt; 순진한 계산. d 차원 데이터, 가변 대역폭, 가중 데이터 및 많은 커널 기능을 지원합니다. 큰 데이터 세트에서는 매우 느립니다.</target>
        </trans-unit>
        <trans-unit id="03734f0b067fc99d39534ed0195ca0675069d02b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#treekde&quot;&gt;&lt;code&gt;TreeKDE&lt;/code&gt;&lt;/a&gt; - A tree-based computation. Supports the same features as the naive algorithm, but is faster at the expense of small inaccuracy when using a kernel without finite support. Good for evaluation on non-uniform, arbitrary grids.</source>
          <target state="translated">&lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#treekde&quot;&gt; &lt;code&gt;TreeKDE&lt;/code&gt; -&lt;/a&gt; 트리 기반 계산. 순진한 알고리즘과 동일한 기능을 지원하지만 유한 지원없이 커널을 사용할 때 약간의 부정확성을 희생하면서 더 빠릅니다. 균일하지 않은 임의의 그리드에 대한 평가에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="e2a5a5bfcadd92d124185f8599e6a1d3454f4a7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The code generating the above graph is found in &lt;a href=&quot;https://github.com/tommyod/KDEpy/blob/master/docs/source/examples.py&quot;&gt;examples.py&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;위 그래프를 생성하는 코드는 &lt;a href=&quot;https://github.com/tommyod/KDEpy/blob/master/docs/source/examples.py&quot;&gt;examples.py에&lt;/a&gt; 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">약</target>
        </trans-unit>
        <trans-unit id="6a383a5dd286fbf36aac8b2bce4e189a88cf75e5" translate="yes" xml:space="preserve">
          <source>Below is an example showing an unweighted and weighted kernel density.
From the code below, it should be clear how to set the &lt;em&gt;kernel&lt;/em&gt;, &lt;em&gt;bandwidth&lt;/em&gt; (variance of the kernel) and &lt;em&gt;weights&lt;/em&gt;.
See the &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/examples.html&quot;&gt;documentation&lt;/a&gt; for more examples.</source>
          <target state="translated">아래는 가중 및 가중 커널 밀도를 보여주는 예입니다. 아래 코드에서 &lt;em&gt;커널&lt;/em&gt; , &lt;em&gt;대역폭&lt;/em&gt; (커널의 분산) 및 &lt;em&gt;가중치&lt;/em&gt; 를 설정하는 방법이 명확해야합니다 . 더 많은 예제 는 &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/examples.html&quot;&gt;문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8ef7e01a390d77e8c2704fe743f9145752b7ccb" translate="yes" xml:space="preserve">
          <source>Cite literature and implement recent methods.</source>
          <target state="translated">문헌을 인용하고 최신 방법을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="039ee8fa0137d6d3df84856c316f86da37e81acc" translate="yes" xml:space="preserve">
          <source>Employ object orientation, but resist the temptation to implement many methods -- stick to the basics.</source>
          <target state="translated">객체 지향을 사용하되 많은 방법을 구현하려는 유혹에 저항하고 기본을 고수하십시오.</target>
        </trans-unit>
        <trans-unit id="c53641251bb42e21b532b268269611dad7a5ae47" translate="yes" xml:space="preserve">
          <source>Example code and documentation</source>
          <target state="translated">예제 코드 및 문서</target>
        </trans-unit>
        <trans-unit id="e37a902d276c68b4f38e84911f2beb18ac5a51b3" translate="yes" xml:space="preserve">
          <source>Follow PEP8.</source>
          <target state="translated">PEP8을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="8d9b106449d22507978468d2a969e8e322e4507f" translate="yes" xml:space="preserve">
          <source>If you are having trouble using the package, please let me know by creating an &lt;a href=&quot;https://github.com/tommyod/KDEpy/issues&quot;&gt;Issue on GitHub&lt;/a&gt; and I'll get back to you.</source>
          <target state="translated">패키지 사용에 문제가있는 경우 &lt;a href=&quot;https://github.com/tommyod/KDEpy/issues&quot;&gt;GitHub&lt;/a&gt; 에서 문제를 작성하여 알려 주시면 다시 연락 드리겠습니다.</target>
        </trans-unit>
        <trans-unit id="538e8333a9a65d05872e6e64ad44cc19c558cf32" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;https://github.com/tommyod/KDEpy/issues/11&quot;&gt;trouble on Ubuntu&lt;/a&gt;, try running &lt;code&gt;sudo apt install libpython3.X-dev&lt;/code&gt;, where &lt;code&gt;3.X&lt;/code&gt; is your Python version.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tommyod/KDEpy/issues/11&quot;&gt;Ubuntu에 문제&lt;/a&gt; 가있는 경우 &lt;code&gt;sudo apt install libpython3.X-dev&lt;/code&gt; 를 실행 해보 십시오. 여기서 &lt;code&gt;3.X&lt;/code&gt; 는 Python 버전입니다.</target>
        </trans-unit>
        <trans-unit id="eae848f94f6909e669951751a0aa57a5c7aa0e67" translate="yes" xml:space="preserve">
          <source>Import as few external dependencies as possible.</source>
          <target state="translated">가능한 한 적은 외부 종속성을 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">이슈</target>
        </trans-unit>
        <trans-unit id="d64a59bd5d6c959e85de9c14c3d62017ee97cbc9" translate="yes" xml:space="preserve">
          <source>Issues and contributing</source>
          <target state="translated">문제 및 기여</target>
        </trans-unit>
        <trans-unit id="e5d57ad186cff65110ff0a8a70bca6d0292c6f35" translate="yes" xml:space="preserve">
          <source>KDEpy</source>
          <target state="translated">KDEpy</target>
        </trans-unit>
        <trans-unit id="aac6a647bf28b639818b2ca1a33f9ab590c0dc28" translate="yes" xml:space="preserve">
          <source>KDEpy is available through &lt;a href=&quot;https://pypi.org/project/KDEpy/&quot;&gt;PyPI&lt;/a&gt;, and may be installed using &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">KDEpy는 &lt;a href=&quot;https://pypi.org/project/KDEpy/&quot;&gt;PyPI를&lt;/a&gt; 통해 사용할 수 있으며 &lt;code&gt;pip&lt;/code&gt; 를 사용하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09df48dd2dd7735c731377c250fc48c71710c7ed" translate="yes" xml:space="preserve">
          <source>Kernel Density Estimation in Python.</source>
          <target state="translated">Python의 커널 밀도 추정.</target>
        </trans-unit>
        <trans-unit id="3365de89b694176dc008a524133c1df5fa7d53f4" translate="yes" xml:space="preserve">
          <source>The package consists of three algorithms. Here's a brief explanation:</source>
          <target state="translated">패키지는 세 가지 알고리즘으로 구성됩니다. 다음은 간단한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="b3f0f3fb6b4d6cc1f8b2da1d9d86c5daae5ea7b4" translate="yes" xml:space="preserve">
          <source>This Python 3.6+ package implements various kernel density estimators (KDE).
Three algorithms are implemented through the same API: &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#naivekde&quot;&gt;&lt;code&gt;NaiveKDE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#treekde&quot;&gt;&lt;code&gt;TreeKDE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#fftkde&quot;&gt;&lt;code&gt;FFTKDE&lt;/code&gt;&lt;/a&gt;.
The class &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#fftkde&quot;&gt;&lt;code&gt;FFTKDE&lt;/code&gt;&lt;/a&gt; outperforms other popular implementations, see the &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/comparison.html&quot;&gt;comparison page&lt;/a&gt;.
&lt;strong&gt;The code is stable and in widespread by practitioners and in other packages.&lt;/strong&gt;</source>
          <target state="translated">이 Python 3.6+ 패키지는 다양한 커널 밀도 추정기 (KDE)를 구현합니다. 동일한 API를 통해 &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#naivekde&quot;&gt; &lt;code&gt;NaiveKDE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#treekde&quot;&gt; &lt;code&gt;TreeKDE&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#fftkde&quot;&gt; &lt;code&gt;FFTKDE&lt;/code&gt; 의&lt;/a&gt; 세 가지 알고리즘이 구현됩니다 . &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/API.html#fftkde&quot;&gt; &lt;code&gt;FFTKDE&lt;/code&gt; &lt;/a&gt; 클래스는 다른 인기있는 구현보다 성능이 뛰어납니다 . &lt;a href=&quot;https://kdepy.readthedocs.io/en/latest/comparison.html&quot;&gt;비교 페이지를 참조하십시오&lt;/a&gt; . &lt;strong&gt;코드는 안정적이고 실무자와 다른 패키지에 널리 퍼져 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69597518aa90e15520456a3f580954df84ac73b" translate="yes" xml:space="preserve">
          <source>Unless it's a bottleneck computation, readability trumps speed.</source>
          <target state="translated">병목 계산이 아니라면 가독성이 속도보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="9c5bd1fa1f623990f295ddd692c80cdd997cacde" translate="yes" xml:space="preserve">
          <source>Use test driven development, have tests and docs for every method.</source>
          <target state="translated">테스트 주도 개발을 사용하고 모든 방법에 대한 테스트 및 문서를 보유하십시오.</target>
        </trans-unit>
        <trans-unit id="4d9c3915e6eb7d86fa1045f7d4c975175df0c703" translate="yes" xml:space="preserve">
          <source>Whatever your mathematical and Python background is, you are very welcome to contribute to KDEpy.
To contribute, fork the project, create a branch and submit and Pull Request.
Please follow these guidelines:</source>
          <target state="translated">수학적 및 Python 배경이 무엇이든 KDEpy에 기여하는 것을 환영합니다. 기여하려면 프로젝트를 포크하고 브랜치를 생성 한 후 요청을 제출하고 가져 오세요. 다음 지침을 따르십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
