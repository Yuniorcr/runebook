<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/mfdfloods/">
    <body>
      <group id="mfdfloods">
        <trans-unit id="bc06e5b427f2f7851def5fbe302875dbd55220fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Area&lt;/strong&gt; is the file on the &lt;code&gt;data/&lt;/code&gt; folder with your DTM in GeoTiff format.</source>
          <target state="translated">&lt;strong&gt;Area&lt;/strong&gt; 는 GeoTiff 형식의 DTM이 있는 &lt;code&gt;data/&lt;/code&gt; 폴더 의 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="8f31bc0337d0eaa42bd0a801036e981618f2ea24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X&lt;/strong&gt; is the longitude in your reference dtm distance units.</source>
          <target state="translated">&lt;strong&gt;X&lt;/strong&gt; 는 참조 dtm 거리 단위의 경도입니다.</target>
        </trans-unit>
        <trans-unit id="c0794aa58ba76761785356904aa3c7ad800c0dfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Y&lt;/strong&gt; is the latitude in your reference dtm distance units.</source>
          <target state="translated">&lt;strong&gt;Y&lt;/strong&gt; 는 참조 dtm 거리 단위의 위도입니다.</target>
        </trans-unit>
        <trans-unit id="ccab1d5fb5651f3f011521d30ce0c1e16141c43a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;base_flow&lt;/strong&gt; is the base income flow after the initial pic.</source>
          <target state="translated">&lt;strong&gt;base_flow&lt;/strong&gt; 는 초기 그림 이후의 기본 소득 흐름입니다.</target>
        </trans-unit>
        <trans-unit id="79e81b3ac94c19b45fa707aa26e54fb08b80f6aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;break_flow&lt;/strong&gt; is the start income flow.</source>
          <target state="translated">&lt;strong&gt;break_flow&lt;/strong&gt; 는 시작 소득 흐름입니다.</target>
        </trans-unit>
        <trans-unit id="d44ac671f9d3cbab10d45a1f510eb4c2fa8da3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;break_time&lt;/strong&gt; is the time that has to pass in seconds to go from the break_flow to the base_flow.</source>
          <target state="translated">&lt;strong&gt;break_time&lt;/strong&gt; 은 &lt;strong&gt;break_flow에서 base_flow&lt;/strong&gt; 로 이동하기 위해 초 단위로 경과 &lt;strong&gt;해야하는&lt;/strong&gt; 시간입니다.</target>
        </trans-unit>
        <trans-unit id="bb0ec8e9489401073a4e7ec44baf3840e8f95f61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cellsize&lt;/strong&gt; is the size of your DTM cellsize.</source>
          <target state="translated">&lt;strong&gt;cellize&lt;/strong&gt; 는 DTM cellize의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="254c6742375724259abe401d1e8abbd76218601d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;radius&lt;/strong&gt; is the maximum extension of the output flood in your dtm distance units.</source>
          <target state="translated">&lt;strong&gt;반경&lt;/strong&gt; 은 dtm 거리 단위에서 출력 홍수의 최대 확장입니다.</target>
        </trans-unit>
        <trans-unit id="97710e5d75064b439a16aaa671a7a7dac4d128dd" translate="yes" xml:space="preserve">
          <source>A python script to model hidrologic behavior of downstream drainpaths. With a DTM cover of your study area you can define longitude and latitude (in the DTM distance unit) as a start point and an income flow to see how the water will flood the territory.</source>
          <target state="translated">다운 스트림 배수 경로의 계층 적 동작을 모델링하는 Python 스크립트입니다. 연구 지역의 DTM 커버를 사용하여 경도와 위도 (DTM 거리 단위)를 시작점으로 정의하고 수입 흐름을 정의하여 물이 어떻게 영토에 범람하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ee08065432628f7db4012dc88bc614aff4481ba" translate="yes" xml:space="preserve">
          <source>A python script to modelate hidrologic behavior of downstream drainpaths</source>
          <target state="translated">다운 스트림 배수로의 계층 적 동작을 모델링하는 Python 스크립트</target>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="translated">인수 :</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="90a757edf1a9a92912fa6f8ea818ddb0408d92b1" translate="yes" xml:space="preserve">
          <source>Execute test.py from inside the folder to test the algorithm.</source>
          <target state="translated">폴더 내부에서 test.py를 실행하여 알고리즘을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="b259e4090dd5bd859052d9fccf6a643f52040707" translate="yes" xml:space="preserve">
          <source>From source &lt;code&gt;python setup.py install&lt;/code&gt;</source>
          <target state="translated">소스 &lt;code&gt;python setup.py install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6964c76ded634a71b253081e8e88c5e0ae745ce7" translate="yes" xml:space="preserve">
          <source>Include mfdfloods as a module on your scripts with &lt;code&gt;from mfd import MFD&lt;/code&gt; then instantiate the class MFD to execute its drainpaths method.</source>
          <target state="translated">&lt;code&gt;from mfd import MFD&lt;/code&gt; 를 사용하여 스크립트에 mfdfloods를 모듈로 포함시킨 다음 클래스 MFD를 인스턴스화하여 drainpaths 메서드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3a49b91aa4d44fa8a2a68035c082f78b672b960e" translate="yes" xml:space="preserve">
          <source>MFD Floods</source>
          <target state="translated">MFD 홍수</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="c475797b74803365347705579d8ece6bb0b5fa6b" translate="yes" xml:space="preserve">
          <source>The output will be placed in your &lt;code&gt;data/&lt;/code&gt; floder as three files with the name &lt;em&gt;drainpaths_{x}-{y}_(draft|flood|speed).tif&lt;/em&gt;.</source>
          <target state="translated">출력은 이름이 &lt;em&gt;drainpaths_ {x}-{y} _ (draft | flood | speed) .tif 인&lt;/em&gt; 3 개의 파일로 &lt;code&gt;data/&lt;/code&gt; 플로 더에 배치됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78c812a71591b035f41255a90b0ee47165f1deb0" translate="yes" xml:space="preserve">
          <source>The script requires GDAL installed on your system and python-gdal as a python dependency.</source>
          <target state="translated">스크립트를 사용하려면 시스템에 GDAL이 설치되어 있고 python-gdal이 python 종속성으로 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5d200481b73414858e90877ade81c7a13c085c48" translate="yes" xml:space="preserve">
          <source>The test.py is a script that call the class MFD and execute its modelization with the datasource from the &lt;code&gt;data/&lt;/code&gt; folder. There you have to place your GeoJSON files with the modelized line geometry.</source>
          <target state="translated">test.py는 MFD 클래스를 호출하고 &lt;code&gt;data/&lt;/code&gt; 폴더 의 데이터 소스로 모델링을 실행하는 스크립트입니다 . 거기에 모델링 된 선 지오메트리와 함께 GeoJSON 파일을 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="02e8b4e9a67997ec94a2b318c9fe85a2720d1537" translate="yes" xml:space="preserve">
          <source>To install GDAL execute &lt;code&gt;apt install gdal-bin libgdal-dev&lt;/code&gt;.</source>
          <target state="translated">GDAL을 설치하려면 &lt;code&gt;apt install gdal-bin libgdal-dev&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="15f014cafddcf542830f40c7d6215c1e412c8933" translate="yes" xml:space="preserve">
          <source>To install python-gdal execute &lt;code&gt;pip install &quot;GDAL==$(osgeo-config --version)&quot;&lt;/code&gt;.</source>
          <target state="translated">python-gdal을 설치하려면 &lt;code&gt;pip install &quot;GDAL==$(osgeo-config --version)&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">사용하다</target>
        </trans-unit>
        <trans-unit id="d0954aec53137f93e8db46319455e84a14480aa2" translate="yes" xml:space="preserve">
          <source>With pip &lt;code&gt;pip install mfdfloods&lt;/code&gt;</source>
          <target state="translated">pip &lt;code&gt;pip install mfdfloods&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
