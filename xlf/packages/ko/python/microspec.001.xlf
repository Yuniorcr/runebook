<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/microspec/">
    <body>
      <group id="microspec">
        <trans-unit id="8d3489696e966184bfbd09ec5a450d68e8b8a6b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;microspeclib&lt;/code&gt; accesses this USB interface using &lt;code&gt;pyserial&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;microspeclib&lt;/code&gt; 는 &lt;code&gt;pyserial&lt;/code&gt; 을 사용 하여이 USB 인터페이스에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="dbe7bcb85f91b25723ea61e2da7017dbc2a02d45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sean Cusack&lt;/strong&gt; - &lt;em&gt;Initial version&lt;/em&gt; - &lt;a href=&quot;https://github.com/eruciform&quot;&gt;GitHub&lt;/a&gt;&lt;a href=&quot;https://eruciform.com&quot;&gt;Blog&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;숀 쿠색&lt;/strong&gt; - &lt;em&gt;초기 버전&lt;/em&gt; - &lt;a href=&quot;https://github.com/eruciform&quot;&gt;GitHub의의 &lt;/a&gt;&lt;a href=&quot;https://eruciform.com&quot;&gt;블로그&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">저자</target>
        </trans-unit>
        <trans-unit id="d90dc3484f569562ac7b0d677dd34abe3ca6dbdd" translate="yes" xml:space="preserve">
          <source>Command Line API</source>
          <target state="translated">명령 줄 API</target>
        </trans-unit>
        <trans-unit id="b1b9124cd443317b1d7031d33b3a00ce4ac3b5e0" translate="yes" xml:space="preserve">
          <source>Developers may want to install additional packages required for
running unit tests and rebuilding documentation.</source>
          <target state="translated">개발자는 단위 테스트를 실행하고 문서를 다시 작성하는 데 필요한 추가 패키지를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8374e342e62c9bfe0e0f090eb41483bf476ce03d" translate="yes" xml:space="preserve">
          <source>Emulate hardware with &lt;code&gt;-e&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; 로 하드웨어 에뮬레이션</target>
        </trans-unit>
        <trans-unit id="50b5d5f867e2a12edf487b172da0ff6c375be08f" translate="yes" xml:space="preserve">
          <source>Emulator</source>
          <target state="translated">에뮬레이터</target>
        </trans-unit>
        <trans-unit id="16aae584ec26cc4b4ee75e3dd51aa0193aae5b1f" translate="yes" xml:space="preserve">
          <source>For example, to set the exposure and cycles and then get 3
capture frames spaced 1.5 seconds apart, with a timeout of 0.2
seconds on each, and print it in CSV format:</source>
          <target state="translated">예를 들어 노출과주기를 설정 한 다음 각각에 0.2 초의 시간 제한을두고 1.5 초 간격으로 3 개의 캡처 프레임을 가져 와서 CSV 형식으로 인쇄하려면 :</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="818e5c5dc4016723f858a4c50a20de2adadbac20" translate="yes" xml:space="preserve">
          <source>For now, this is only supported on Linux and MacOSX, and requires
the &lt;code&gt;socat&lt;/code&gt; executable to be installed and available on your PATH.</source>
          <target state="translated">현재로서는 Linux 및 MacOSX에서만 지원되며 PATH 에서 &lt;code&gt;socat&lt;/code&gt; 실행 파일을 설치하고 사용할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c126d74e5215b6b617751426756a6f70acbaeede" translate="yes" xml:space="preserve">
          <source>If &quot;Load VCP&quot; is not enabled, &lt;code&gt;pyserial&lt;/code&gt; cannot communicate with
the dev-kit and &lt;code&gt;microspec&lt;/code&gt; will report that it does not see a
connected USB device.</source>
          <target state="translated">&quot;Load VCP&quot;가 활성화되지 않은 경우 &lt;code&gt;pyserial&lt;/code&gt; 은 dev-kit과 통신 할 수 없으며 &lt;code&gt;microspec&lt;/code&gt; 은 연결된 USB 장치를 볼 수 없다고보고합니다.</target>
        </trans-unit>
        <trans-unit id="1d6f877a0a3f64cc110b6b183183dde31a651f46" translate="yes" xml:space="preserve">
          <source>Import the API in a Python script or at a Python REPL:</source>
          <target state="translated">Python 스크립트 또는 Python REPL에서 API를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0937a6d6cc904d7233f5be11755faf3ca2d2a9b1" translate="yes" xml:space="preserve">
          <source>Install extra requirements for testing and documentation</source>
          <target state="translated">테스트 및 문서화를위한 추가 요구 사항 설치</target>
        </trans-unit>
        <trans-unit id="847401c2e0e8c56d026910487f74d5918dbab74c" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;microspec&lt;/code&gt; project with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 로 &lt;code&gt;microspec&lt;/code&gt; 프로젝트를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="eaf76b75c4c78bc43ce5f5cc760fbbc9540a91b8" translate="yes" xml:space="preserve">
          <source>Install the Python API</source>
          <target state="translated">Python API 설치</target>
        </trans-unit>
        <trans-unit id="8abd8774fb619c639fa28d7d35414945e050caa5" translate="yes" xml:space="preserve">
          <source>Many of the &lt;code&gt;microspec&lt;/code&gt; unit tests use an emulator to fake the
dev-kit hardware. The emulator requires utility &lt;code&gt;socat&lt;/code&gt;, which is
only available for Mac and Linux.</source>
          <target state="translated">많은 &lt;code&gt;microspec&lt;/code&gt; 단위 테스트는 에뮬레이터를 사용하여 dev-kit 하드웨어를 위조합니다. 에뮬레이터에는 Mac 및 Linux에서만 사용할 수있는 &lt;code&gt;socat&lt;/code&gt; 유틸리티가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="6eabf943315982a3887e38d315474c823b18a0be" translate="yes" xml:space="preserve">
          <source>MicroSpec Overview</source>
          <target state="translated">MicroSpec 개요</target>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="translated">추가 정보</target>
        </trans-unit>
        <trans-unit id="faf3d338e9591fca66e750be54909653b3a6c8cd" translate="yes" xml:space="preserve">
          <source>Note that if you have no hardware connected, you can (on Linux
and MacOSX) add a &quot;-e&quot; flag to use the emulator. It won't return
very interesting capture frame data, but it will give an
opportunity to test the interface.</source>
          <target state="translated">연결된 하드웨어가없는 경우 (Linux 및 MacOSX에서) &quot;-e&quot;플래그를 추가하여 에뮬레이터를 사용할 수 있습니다. 매우 흥미로운 캡처 프레임 데이터를 반환하지는 않지만 인터페이스를 테스트 할 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="868f17a167263f286c40c603461b022662fa7faf" translate="yes" xml:space="preserve">
          <source>Now &quot;Load VCP&quot; is enabled every time the dev-kit is connected to
this Windows computer.</source>
          <target state="translated">이제 개발 키트가이 Windows 컴퓨터에 연결될 때마다 &quot;Load VCP&quot;가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="01bfd4536f81b0e979d8498919afa6a97428b781" translate="yes" xml:space="preserve">
          <source>On Windows, replace &lt;code&gt;microspec_cmdline.py&lt;/code&gt; in the above lines
with &lt;code&gt;microspec_cmdline.exe&lt;/code&gt;.</source>
          <target state="translated">Windows에서 교체 &lt;code&gt;microspec_cmdline.py&lt;/code&gt; 을 가진 위의 라인에 &lt;code&gt;microspec_cmdline.exe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="653216e3f5c4d69191d4aa7805903e962eda87f9" translate="yes" xml:space="preserve">
          <source>On Windows, when connecting the dev-kit for the first time:</source>
          <target state="translated">Windows에서 처음으로 dev-kit을 연결할 때 :</target>
        </trans-unit>
        <trans-unit id="f90971f3e163858cccdd2de4a23c00ac50494bd5" translate="yes" xml:space="preserve">
          <source>Open Device Manager:</source>
          <target state="translated">장치 관리자를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="df25d3b26fb586c6c1b1ae8c88896c1daa50dd37" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;microspeclib&lt;/code&gt; is a Python API for the Chromation
spectrometer dev-kit.</source>
          <target state="translated">패키지 &lt;code&gt;microspeclib&lt;/code&gt; 는 Chromation 분광계 개발 키트 용 Python API입니다.</target>
        </trans-unit>
        <trans-unit id="cdeb0e3c9288946537518a8548e039af5ae86d97" translate="yes" xml:space="preserve">
          <source>Please see the project homepage for more information:</source>
          <target state="translated">자세한 내용은 프로젝트 홈페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b2b6077dbdbab0d4c19af1d6a081a21e224ada5d" translate="yes" xml:space="preserve">
          <source>Python API for the Chromation spectrometer dev-kit</source>
          <target state="translated">Chromation 분광기 개발 키트 용 Python API</target>
        </trans-unit>
        <trans-unit id="a108d46613ed9b29aa476a181580b0b23edfdeee" translate="yes" xml:space="preserve">
          <source>Spectrometer Hardware</source>
          <target state="translated">분광계 하드웨어</target>
        </trans-unit>
        <trans-unit id="f512f4e60bcee8e72ccd48b2e754aa5bdde659f8" translate="yes" xml:space="preserve">
          <source>The -t timeout is how long it will wait for the command each
time, and if it fails it will print None and move on. If a -r
repeat is specified, it will run the command that many times.
And if it is repeating, a -w wait will wait that long in between
commands. All times are in fractional seconds.</source>
          <target state="translated">-t 시간 ​​초과는 매번 명령을 기다리는 시간이며 실패하면 None을 인쇄하고 계속 진행합니다. -r 반복이 지정되면 명령을 여러 번 실행합니다. 그리고 반복되는 경우 -w wait는 명령 사이에 오래 기다립니다. 모든 시간은 초 단위입니다.</target>
        </trans-unit>
        <trans-unit id="39d8c08485b7d505319fa61287e3bb0ebcb9c565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microspec&lt;/code&gt; project also includes:</source>
          <target state="translated">&lt;code&gt;microspec&lt;/code&gt; 의 프로젝트도 포함</target>
        </trans-unit>
        <trans-unit id="165e12da050870c7d565836ccd13b66cefbdbb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microspec_cmdline.py&lt;/code&gt; executable will run a single command
and print the reply to stdout, optionally in CSV format. The
default is to look for hardware, but -f FILE can be used to point
it to either a device file or the name of a port, as in &quot;COM3&quot;,
if necessary. The command itself is case-insensitive, and after
the command are key=value pairs of options for the command, if
necessary, such as &lt;code&gt;led_num=0&lt;/code&gt; or &lt;code&gt;cycles=100&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;microspec_cmdline.py&lt;/code&gt; 의 실행 파일은 하나의 명령을 실행하고 선택적으로 CSV 형식으로, 표준 출력에 응답을 인쇄합니다. 기본값은 하드웨어를 찾는 것이지만 필요한 경우 &quot;COM3&quot;에서와 같이 -f FILE을 사용하여 장치 파일 또는 포트 이름을 가리킬 수 있습니다. 명령 자체는 대소 문자를 구분하지 않으며 명령 뒤에는 필요한 경우 명령에 대한 키 = 값 쌍 (예 : &lt;code&gt;led_num=0&lt;/code&gt; 또는 &lt;code&gt;cycles=100&lt;/code&gt; )이 있습니다.</target>
        </trans-unit>
        <trans-unit id="81327bf4980ba1c3ebb317786f4e07950e124302" translate="yes" xml:space="preserve">
          <source>The API is a set of commands for configuring the spectrometer and
acquiring data.</source>
          <target state="translated">API는 분광계를 구성하고 데이터를 수집하기위한 일련의 명령입니다.</target>
        </trans-unit>
        <trans-unit id="114b532f122e5eded490c183a4ec88bbe6a3aacb" translate="yes" xml:space="preserve">
          <source>The Chromation spectrometer is a surface-mount PCB package
consisting of a linear photodiode array and optical components.</source>
          <target state="translated">Chromation 분광기는 선형 포토 다이오드 어레이와 광학 부품으로 구성된 표면 실장 PCB 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="389dcc605b79c272c1126161259325753e9975b5" translate="yes" xml:space="preserve">
          <source>The Python API communicates with firmware on the two
microcontrollers in the dev-kit, one on each of the stacked PCBs.</source>
          <target state="translated">Python API는 dev-kit에있는 두 개의 마이크로 컨트롤러에있는 펌웨어와 통신합니다.</target>
        </trans-unit>
        <trans-unit id="e707ba1dc1984462002736d6139d7b03d6443770" translate="yes" xml:space="preserve">
          <source>The command line utility is a &lt;code&gt;.exe&lt;/code&gt; on Windows</source>
          <target state="translated">명령 줄 유틸리티는 Windows 에서 &lt;code&gt;.exe&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="462080da4170fe3f63f2636ab587465e912dd235" translate="yes" xml:space="preserve">
          <source>The documentation is built with Sphinx. Developers extending
the API will need to rebuild the documentation. Install the
Sphinx-related requirements by adding &lt;code&gt;[dev]&lt;/code&gt; to the &lt;code&gt;install&lt;/code&gt;
command:</source>
          <target state="translated">이 문서는 Sphinx로 작성되었습니다. API를 확장하는 개발자는 문서를 다시 빌드해야합니다. &lt;code&gt;install&lt;/code&gt; 명령어에 &lt;code&gt;[dev]&lt;/code&gt; 를 추가하여 Sphinx 관련 요구 사항을 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="224229d8f145a2494ff5d90d40ea20535dfffced" translate="yes" xml:space="preserve">
          <source>The following will connect to the dev-kit USB hardware, capture a
single frame, then print the status, number of pixels, and the
value of the 3rd pixel.</source>
          <target state="translated">다음은 dev-kit USB 하드웨어에 연결하고 단일 프레임을 캡처 한 다음 상태, 픽셀 수 및 세 번째 픽셀의 값을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="5737e7815ab81b75a7e93a640fca71d334eb97cb" translate="yes" xml:space="preserve">
          <source>The microcontroller on the PCB stacked above provides a USB
bridge that turns the SPI interface into a USB interface.</source>
          <target state="translated">위에 적층 된 PCB의 마이크로 컨트롤러는 SPI 인터페이스를 USB 인터페이스로 바꾸는 USB 브리지를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9a6edeb0aab435e406e78531d2d4da6eeb972f84" translate="yes" xml:space="preserve">
          <source>The microcontroller on the bottom of the stack provides a SPI
interface to the Chromation spectrometer.</source>
          <target state="translated">스택 하단의 마이크로 컨트롤러는 Chromation 분광기에 대한 SPI 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fc5858ef08d93cdeca720307d93d4442456c8064" translate="yes" xml:space="preserve">
          <source>There is one method for each command. Commands are
camelCaseFormatted. Commands return the received reply object. If
there is an error or a timeout, the reply is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">각 명령에 대해 하나의 방법이 있습니다. 명령은 camelCaseFormatted입니다. 명령은 수신 된 응답 객체를 반환합니다. 오류 또는 시간 초과가있는 경우 응답은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3c73a0f25bfedf2b17af6cd86c2d283dc2643d87" translate="yes" xml:space="preserve">
          <source>To extend/customize/repurpose the API, clone the repository from
the project homepage:
&lt;a href=&quot;https://github.com/microspectrometer/microspec&quot;&gt;https://github.com/microspectrometer/microspec&lt;/a&gt; and install in
&lt;code&gt;--editable&lt;/code&gt; mode.</source>
          <target state="translated">API를 확장 / 사용자 지정 / &lt;code&gt;--editable&lt;/code&gt; 하려면 프로젝트 홈페이지 ( &lt;a href=&quot;https://github.com/microspectrometer/microspec&quot;&gt;https://github.com/microspectrometer/microspec)&lt;/a&gt; 에서 리포지토리를 복제하고 --editable 모드로 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="69fc6d9baf70bfb2c7a0b51e6df53eee49d53039" translate="yes" xml:space="preserve">
          <source>Use the Python API</source>
          <target state="translated">Python API 사용</target>
        </trans-unit>
        <trans-unit id="8d49a259d8a069f3951444cd08bacff109b59d02" translate="yes" xml:space="preserve">
          <source>Use the emulator with the &lt;code&gt;microspeclib.simple&lt;/code&gt; or
&lt;code&gt;microspeclib.expert&lt;/code&gt; API with keyword argument &lt;code&gt;emulation=True&lt;/code&gt;.</source>
          <target state="translated">키워드 인수 &lt;code&gt;emulation=True&lt;/code&gt; 와 함께 &lt;code&gt;microspeclib.simple&lt;/code&gt; 또는 &lt;code&gt;microspeclib.expert&lt;/code&gt; API와 함께 에뮬레이터를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="6d6641a4b775c660652c3d0f0d161f7d75b000c7" translate="yes" xml:space="preserve">
          <source>Use the emulator with the command-line utility by adding a &quot;-e&quot;
flag.</source>
          <target state="translated">&quot;-e&quot;플래그를 추가하여 명령 줄 유틸리티와 함께 ​​에뮬레이터를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d5290d603f71bb44d2e81d553866f50b91fb6680" translate="yes" xml:space="preserve">
          <source>Windows Load VCP</source>
          <target state="translated">Windows로드 VCP</target>
        </trans-unit>
        <trans-unit id="f7f4ced23003b2fdc74d5628b2d86cdcb21f50de" translate="yes" xml:space="preserve">
          <source>an emulator (Mac and Linux only) for faking the dev-kit
hardware in unit tests</source>
          <target state="translated">단위 테스트에서 개발 키트 하드웨어를 위조하기위한 에뮬레이터 (Mac 및 Linux 전용)</target>
        </trans-unit>
        <trans-unit id="0eac7662880bd24bfd91de305ab0b6f463809707" translate="yes" xml:space="preserve">
          <source>check &quot;Load VCP&quot;</source>
          <target state="translated">&quot;Load VCP&quot;확인</target>
        </trans-unit>
        <trans-unit id="c289e0598edc757eb75192cff25e37d289276343" translate="yes" xml:space="preserve">
          <source>command line utility &lt;code&gt;microspec-cmdline&lt;/code&gt; for running basic
measurements without developing a Python application</source>
          <target state="translated">Python 애플리케이션을 개발하지 않고 기본 측정을 ​​실행하기위한 명령 줄 유틸리티 &lt;code&gt;microspec-cmdline&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="561a0bbf9bedd2fba52c6d00449a376a62d04bb0" translate="yes" xml:space="preserve">
          <source>cycle power to the dev-kit (unplug/plug the USB cable)</source>
          <target state="translated">dev-kit의 전원을 껐다가 켭니다 (USB 케이블 분리 / 연결).</target>
        </trans-unit>
        <trans-unit id="c8866f88fd76d7ad83e2e039b3655438a609f4df" translate="yes" xml:space="preserve">
          <source>go to tab &quot;Advanced&quot;</source>
          <target state="translated">&quot;고급&quot;탭으로 이동</target>
        </trans-unit>
        <trans-unit id="9c59e4e6bbe7309e82cfb2ce1134e108962557f0" translate="yes" xml:space="preserve">
          <source>right-click on USB Serial Converter</source>
          <target state="translated">USB 직렬 변환기를 마우스 오른쪽 버튼으로 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="f6d1d67049efa081c649ae3245612171373225f8" translate="yes" xml:space="preserve">
          <source>select Properties</source>
          <target state="translated">속성 선택</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
