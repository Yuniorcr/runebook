<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pyclp/">
    <body>
      <group id="pyclp">
        <trans-unit id="95cc2cbbcb403b222f08433cc3f1833353ac6ee0" translate="yes" xml:space="preserve">
          <source>(check
&lt;a href=&quot;http://www.eclipseclp.org/doc/embedding/embroot008.html#toc11&quot;&gt;3.1.2  Building ECLiPSe terms&lt;/a&gt; ) function.
In ECLiPSe standard interfaces compound terms are destroyed after resume while in PyCLP are
stored in a reference that survives after resuming. PyCLP will destroy the reference only when python
destroys the linked python object (garbage collection). This consumes more memory but now
the python object and the related ECLiPSe object have the same &lt;em&gt;lifetime&lt;/em&gt;.</source>
          <target state="translated">( &lt;a href=&quot;http://www.eclipseclp.org/doc/embedding/embroot008.html#toc11&quot;&gt;3.1.2 Building ECLiPSe 용어&lt;/a&gt; 확인 ) 기능. ECLiPSe 표준 인터페이스에서 복합 용어는 재개 후 파괴되고 PyCLP에서는 재개 후에도 유지되는 참조에 저장됩니다. PyCLP는 파이썬이 연결된 파이썬 객체 (가비지 수집)를 파괴 할 때만 참조를 파괴합니다. 이것은 더 많은 메모리를 소비하지만 이제 python 객체와 관련 ECLiPSe 객체는 동일한 &lt;em&gt;수명을&lt;/em&gt; 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="ef05baf85ad56f014411d6e02488c355e1b38da1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://sourceforge.net/projects/pyclp&quot;&gt;PyCLP&lt;/a&gt;
is a Python library to interface ECLiPSe Constraint Programmig System.</source>
          <target state="translated">&lt;a href=&quot;https://sourceforge.net/projects/pyclp&quot;&gt;PyCLP&lt;/a&gt; 는 ECLiPSe Constraint Programmig System과 인터페이스하는 Python 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="7b1b97e45d9b0e558e51d62c25677ccd089290a3" translate="yes" xml:space="preserve">
          <source>Extend functionality of set_option function</source>
          <target state="translated">set_option 기능 확장</target>
        </trans-unit>
        <trans-unit id="b8c65aa03c350963cf6a2fcef01b18d264654dd7" translate="yes" xml:space="preserve">
          <source>Interface to ECLiPSe CLP</source>
          <target state="translated">ECLiPSe CLP에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="1db8ee3055252e182066631837854b219445392c" translate="yes" xml:space="preserve">
          <source>Major differences from ECLiPSe standard interface libraries</source>
          <target state="translated">ECLiPSe 표준 인터페이스 라이브러리와의 주요 차이점</target>
        </trans-unit>
        <trans-unit id="17efb1c4168f84fd3a98548dd9b7a96e571814cc" translate="yes" xml:space="preserve">
          <source>Moreover, in the definition of the API I tried to take advantage of a common property of python and
ECLiPSe: both are weak typed languages.</source>
          <target state="translated">또한 API 정의에서 python과 ECLiPSe의 공통 속성을 활용하려고했습니다. 둘 다 약한 유형 언어입니다.</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">다음 단계</target>
        </trans-unit>
        <trans-unit id="3cc68c7b79898175088611d59111de8d02890376" translate="yes" xml:space="preserve">
          <source>The main difference compared to embedded interface provided  by ECLiPSe system is
the persistence of constructed terms after calling the</source>
          <target state="translated">ECLiPSe 시스템에서 제공하는 임베디드 인터페이스와 비교하여 가장 큰 차이점은 호출 후 구성된 용어의 지속성입니다.</target>
        </trans-unit>
        <trans-unit id="b2f61ac920e66a7b1cf420ef8c992cec63584a78" translate="yes" xml:space="preserve">
          <source>This module try to implement a pythonic interface to &lt;a href=&quot;http://www.eclipseclp.org/&quot;&gt;ECLiPSe&lt;/a&gt;
(alias easy to use) by compromising on a little bit on performance.</source>
          <target state="translated">이 모듈 은 성능을 약간 저하 시켜 &lt;a href=&quot;http://www.eclipseclp.org/&quot;&gt;ECLiPSe&lt;/a&gt; (사용하기 쉬운 별칭)에 대한 파이썬 인터페이스를 구현하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="01102d6e2d675b36e644003d9bb8236f83798555" translate="yes" xml:space="preserve">
          <source>pyclp.resume</source>
          <target state="translated">pyclp.resume</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
