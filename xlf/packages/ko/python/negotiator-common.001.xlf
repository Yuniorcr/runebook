<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/negotiator-common/">
    <body>
      <group id="negotiator-common">
        <trans-unit id="77ddc1b2685d7ee9e8387548792298e291f744e7" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2019 Peter Odding.</source>
          <target state="translated">&amp;copy; 2019 피터 오딩.</target>
        </trans-unit>
        <trans-unit id="f3514d5b828bde47d688a63d928667982ad0098a" translate="yes" xml:space="preserve">
          <source>&amp;lt;devices&amp;gt;</source>
          <target state="translated">&amp;lt;장치&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3d7a13ed446a38d07fc9b9d7e2c4d0da13b231e9" translate="yes" xml:space="preserve">
          <source>) you can
omit the</source>
          <target state="translated">) 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="4452f1a891e5ac9c71dfff2a0c26c011b75abe8e" translate="yes" xml:space="preserve">
          <source>--character-device=PATH</source>
          <target state="translated">--character-device = PATH</target>
        </trans-unit>
        <trans-unit id="d16a74cc60045082a582e6d6f4ce0c9d08ca199a" translate="yes" xml:space="preserve">
          <source>--daemon</source>
          <target state="translated">--악마</target>
        </trans-unit>
        <trans-unit id="c333b64b57e5b934b0cf6e734ff16c9b7fb211ee" translate="yes" xml:space="preserve">
          <source>--execute=COMMAND</source>
          <target state="translated">--execute = COMMAND</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">--도움</target>
        </trans-unit>
        <trans-unit id="8107ababc10c56b676bbbe0c122793dd546583bc" translate="yes" xml:space="preserve">
          <source>--list-commands</source>
          <target state="translated">-목록 명령</target>
        </trans-unit>
        <trans-unit id="0b96f3adff937f253f2b226f6ba4197ac771d6c4" translate="yes" xml:space="preserve">
          <source>--list-guests</source>
          <target state="translated">-손님 명단</target>
        </trans-unit>
        <trans-unit id="6cbbb80c43a022aacd54c2000f8d74f1f4dc928e" translate="yes" xml:space="preserve">
          <source>--quiet</source>
          <target state="translated">--조용한</target>
        </trans-unit>
        <trans-unit id="666819eb2fdb66a35df58bb6cc9955b3e4413900" translate="yes" xml:space="preserve">
          <source>--timeout=SECONDS</source>
          <target state="translated">--timeout = SECONDS</target>
        </trans-unit>
        <trans-unit id="f2860556708260c3603c4f244db1aa03e85301b6" translate="yes" xml:space="preserve">
          <source>--verbose</source>
          <target state="translated">--말 수가 많은</target>
        </trans-unit>
        <trans-unit id="ddbfe46d29072725b61a3ee03c6abfefa0973acd" translate="yes" xml:space="preserve">
          <source>-c</source>
          <target state="translated">-씨</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-디</target>
        </trans-unit>
        <trans-unit id="2360917b9377a0f8f526499aa422e769e1252d5b" translate="yes" xml:space="preserve">
          <source>-e</source>
          <target state="translated">-이자형</target>
        </trans-unit>
        <trans-unit id="86b401141a846fdf2da850b1b4d471a9ccb60b51" translate="yes" xml:space="preserve">
          <source>-g</source>
          <target state="translated">-지</target>
        </trans-unit>
        <trans-unit id="3c3003f7f0bedaf2a7334f932c515378a93f1402" translate="yes" xml:space="preserve">
          <source>-h</source>
          <target state="translated">-h</target>
        </trans-unit>
        <trans-unit id="41ecbf5c742a07d94719d70cfc27033de855195e" translate="yes" xml:space="preserve">
          <source>-l</source>
          <target state="translated">-엘</target>
        </trans-unit>
        <trans-unit id="ac33d7b02f2a5c6708f6060ad24e0c1c16b31e96" translate="yes" xml:space="preserve">
          <source>-q</source>
          <target state="translated">-큐</target>
        </trans-unit>
        <trans-unit id="1ffa835f18b0d84b7be1c7c0ecd4eb3e149bf81a" translate="yes" xml:space="preserve">
          <source>-t</source>
          <target state="translated">-티</target>
        </trans-unit>
        <trans-unit id="75262c839fe7bdce825dee598401d72dc8394722" translate="yes" xml:space="preserve">
          <source>-v</source>
          <target state="translated">-V</target>
        </trans-unit>
        <trans-unit id="625d7af3967b268f4ffdeabadf7953db4929e41c" translate="yes" xml:space="preserve">
          <source>. Open the file
in your favorite text editor (Vim? :-) and add the the following XML snippet
inside the</source>
          <target state="translated">. 선호하는 텍스트 편집기 (Vim? :-)에서 파일을 열고 다음 XML 스 니펫을</target>
        </trans-unit>
        <trans-unit id="214a91eb44c24287c4b7b3ee97f046a75054f7a4" translate="yes" xml:space="preserve">
          <source>/dev/vport[0-9]p[0-9]</source>
          <target state="translated">/ dev / vport [0-9] p [0-9]</target>
        </trans-unit>
        <trans-unit id="67ba61aa10a697340cc401824eed20363e91c25b" translate="yes" xml:space="preserve">
          <source>/etc/libvirt/qemu</source>
          <target state="translated">/ etc / libvirt / qemu</target>
        </trans-unit>
        <trans-unit id="ae7b988dc81ab7613a2cdc3fb312ded899803dfa" translate="yes" xml:space="preserve">
          <source>/usr/lib/negotiator/commands</source>
          <target state="translated">/ usr / lib / negotiator / 명령</target>
        </trans-unit>
        <trans-unit id="3286fe6656d8342c32d5e03ccd6639296f002d7d" translate="yes" xml:space="preserve">
          <source>/var/lib/libvirt/qemu/channel/target</source>
          <target state="translated">/ var / lib / libvirt / qemu / channel / target</target>
        </trans-unit>
        <trans-unit id="e32e1a9633e7fa807cee507295117b4e28cf8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extensibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;확장 성&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8c0b9b9a3cd1a1c77bfde33b0e59ca31b090058" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Platform support&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;플랫폼 지원&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="955b02d0b49c6fe23c13f7f2b04cd48e633a44ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원되는 옵션 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;용법:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65464fef87096f3b03f2a49cd0378fa01cf12d48" translate="yes" xml:space="preserve">
          <source>After adding the configuration snippet you have to activate it:</source>
          <target state="translated">구성 스 니펫을 추가 한 후 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="96023ffaf5ee60e118b212a94a06bcbb539febc0" translate="yes" xml:space="preserve">
          <source>After installation the</source>
          <target state="translated">설치 후</target>
        </trans-unit>
        <trans-unit id="9b3be33cf815881243cfd7b8cc0a40a9488e01bd" translate="yes" xml:space="preserve">
          <source>After installation you need to find a way to run the</source>
          <target state="translated">설치 후에는 실행 방법을 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="73182254bfa9400277f370e262baa62bcfde35b7" translate="yes" xml:space="preserve">
          <source>Again this should just be part of the KVM/QEMU system packages, but whatever.
The Negotiator project is playing with new-ish functionality so I pretty much
know to expect sharp edges :-)</source>
          <target state="translated">다시 말하지만 이것은 KVM / QEMU 시스템 패키지의 일부일뿐입니다. Negotiator 프로젝트는 새로운 기능으로 재생되므로 날카로운 모서리를 기대할 수 있습니다. :-)</target>
        </trans-unit>
        <trans-unit id="11bb82dc89ea6a7a44c470ae0e4961670d43820c" translate="yes" xml:space="preserve">
          <source>Because the user defines the commands that hosts and guests can execute, the
user controls the amount of influence that hosts and guests have over each
other (there are several built-in commands, these are all read only).</source>
          <target state="translated">사용자가 호스트와 게스트가 실행할 수있는 명령을 정의하기 때문에 사용자는 호스트와 게스트가 서로에게 미치는 영향의 정도를 제어합니다 (여러 내장 명령이 있으며 모두 읽기 전용 임).</target>
        </trans-unit>
        <trans-unit id="7f5bcc486b15cefa278516c7272039943330defa" translate="yes" xml:space="preserve">
          <source>Broken channels on KVM/QEMU hosts</source>
          <target state="translated">KVM / QEMU 호스트의 깨진 채널</target>
        </trans-unit>
        <trans-unit id="6f52f36e1c343eee1f652856ac23d4edb7533c68" translate="yes" xml:space="preserve">
          <source>By default the appropriate character device is automatically selected based
on /sys/class/virtio-ports/*/name. If the automatic selection doesn&amp;rsquo;t work,
you can set the absolute pathname of the character device that&amp;rsquo;s used to
communicate with the negotiator-host daemon running on the KVM/QEMU host.</source>
          <target state="translated">기본적으로 적절한 문자 장치는 / sys / class / virtio-ports / * / name에 따라 자동으로 선택됩니다. 자동 선택이 작동하지 않으면 KVM / QEMU 호스트에서 실행중인 협상자-호스트 데몬과 통신하는 데 사용되는 문자 장치의 절대 경로 이름을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a343fb2339c41f55a8f2938f250ccb751d87f476" translate="yes" xml:space="preserve">
          <source>Character device detection fails</source>
          <target state="translated">캐릭터 장치 감지 실패</target>
        </trans-unit>
        <trans-unit id="3ba358e74699493a040a6c62cfad6e831cdb4bcc" translate="yes" xml:space="preserve">
          <source>Communicate from a KVM/QEMU guest system to its host or start the
guest daemon to allow the host to execute commands on its guests.</source>
          <target state="translated">KVM / QEMU 게스트 시스템에서 호스트로 통신하거나 게스트 데몬을 시작하여 호스트가 게스트에서 명령을 실행할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="a871901673cbc3f5c4db1e1bf96ccc66bc64d96c" translate="yes" xml:space="preserve">
          <source>Communicate from a KVM/QEMU host system with running guest systems using a
guest agent daemon running inside the guests.</source>
          <target state="translated">게스트 내부에서 실행되는 게스트 에이전트 데몬을 사용하여 실행중인 게스트 시스템과 KVM / QEMU 호스트 시스템에서 통신합니다.</target>
        </trans-unit>
        <trans-unit id="b37456c4530be810dc040f50da72eda09addfb0a" translate="yes" xml:space="preserve">
          <source>Contact</source>
          <target state="translated">접촉</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">내용</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">디버깅</target>
        </trans-unit>
        <trans-unit id="1baffd82c8181c16a357b0b25e257ade8ba12c22" translate="yes" xml:space="preserve">
          <source>Decrease logging verbosity (can be repeated).</source>
          <target state="translated">로깅의 자세한 정도를 줄입니다 (반복 가능).</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">기술</target>
        </trans-unit>
        <trans-unit id="665fc74effce4fb0ca864698426af84853c455a0" translate="yes" xml:space="preserve">
          <source>Despite considerable effort I haven&amp;rsquo;t been able to get a recent version of
the QEMU guest agent running on older Linux distributions (e.g. Ubuntu Linux
10.04). Older versions of the guest agent can be succesfully compiled for
such distributions but don&amp;rsquo;t support the features I require. By creating my
own guest agent I have more control over platform support (given the
primitives required for communication).</source>
          <target state="translated">상당한 노력에도 불구하고 이전 Linux 배포판 (예 : Ubuntu Linux 10.04)에서 실행되는 QEMU 게스트 에이전트의 최신 버전을 얻을 수 없었습니다. 이전 버전의 게스트 에이전트는 이러한 배포를 위해 성공적으로 컴파일 할 수 있지만 필요한 기능을 지원하지 않습니다. 나만의 게스트 에이전트를 만들면 플랫폼 지원을 더 잘 제어 할 수 있습니다 (통신에 필요한 기본 요소를 고려할 때).</target>
        </trans-unit>
        <trans-unit id="2b25b006f98dfa31cd218a2f2554c295fb125817" translate="yes" xml:space="preserve">
          <source>Execute the given command inside GUEST_NAME. The standard output stream of
the command inside the guest is intercepted and copied to the standard
output stream on the host. If the command exits with a nonzero status code
the negotiator-host program will also exit with a nonzero status code.</source>
          <target state="translated">GUEST_NAME 내에서 주어진 명령을 실행합니다. 게스트 내부 명령의 표준 출력 스트림은 가로 채서 호스트의 표준 출력 스트림에 복사됩니다. 명령이 0이 아닌 상태 코드로 종료되면 협상자 호스트 프로그램도 0이 아닌 상태 코드로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="3a898a220f117d6338573502d4d959fe61b35b30" translate="yes" xml:space="preserve">
          <source>Execute the given command on the KVM/QEMU host. The standard output stream
of the command on the host is intercepted and copied to the standard output
stream on the guest. If the command exits with a nonzero status code the
negotiator-guest program will also exit with a nonzero status code.</source>
          <target state="translated">KVM / QEMU 호스트에서 주어진 명령을 실행합니다. 호스트에있는 명령의 표준 출력 스트림은 가로 채서 게스트의 표준 출력 스트림에 복사됩니다. 명령이 0이 아닌 상태 코드로 종료되면 협상자-게스트 프로그램도 0이 아닌 상태 코드로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="9ae6736d83331e7f0a8eeca4049404ba3820d58e" translate="yes" xml:space="preserve">
          <source>First you have to add two virtual devices to your QEMU guest. You can do so
by editing the guest&amp;rsquo;s XML definition file. On Ubuntu Linux KVM/QEMU hosts
these files are found in the directory</source>
          <target state="translated">먼저 QEMU 게스트에 두 개의 가상 장치를 추가해야합니다. 게스트의 XML 정의 파일을 편집하여이를 수행 할 수 있습니다. Ubuntu Linux KVM / QEMU 호스트에서이 파일은 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ce22e681e8002af28f4cf33f62644685392ae65" translate="yes" xml:space="preserve">
          <source>GUEST_NAME</source>
          <target state="translated">손님 이름</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="9080335da88e183ba6d391eab19b840841995a4d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to install the &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;negotiator-host&lt;/a&gt; package on your host(s):</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;호스트에 협상자-호스트&lt;/a&gt; 패키지 를 설치하는 방법은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="45f142a430ca0cf173b65241db97d2aecc13b467" translate="yes" xml:space="preserve">
          <source>If the instructions below are not enough to get you started, take a look at the
&lt;em&gt;Debugging&lt;/em&gt; section below for hints about what to do when things don&amp;rsquo;t work as
expected.</source>
          <target state="translated">아래 지침으로 시작하기에 충분하지 않은 경우 아래의 &lt;em&gt;디버깅&lt;/em&gt; 섹션 에서 예상대로 작동하지 않을 때 수행 할 작업에 대한 힌트를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0a8a0ef7f4f87835a72882fe61f84ef115a1972c" translate="yes" xml:space="preserve">
          <source>If you prefer you can install the Python package in a virtual environment:</source>
          <target state="translated">원하는 경우 가상 환경에 Python 패키지를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="943ecf889d4ca35a4d2d9b2bb272abea3e3bffaf" translate="yes" xml:space="preserve">
          <source>Increase logging verbosity (can be repeated).</source>
          <target state="translated">로깅 상세도를 높입니다 (반복 가능).</target>
        </trans-unit>
        <trans-unit id="d9bb80dac4b5bb87324acf79227c5388c91a01bb" translate="yes" xml:space="preserve">
          <source>Inside the guest special character devices are created that allow reading and
writing. These character devices are</source>
          <target state="translated">게스트 내부에는 읽고 쓸 수있는 특수 문자 장치가 생성됩니다. 이러한 문자 장치는</target>
        </trans-unit>
        <trans-unit id="3809cb4b2b9cf66bb0ae873ebb168a6cbdcf43f8" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;negotiator-guest&lt;/a&gt; package on your guest(s):</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;게스트에 negotiator-guest&lt;/a&gt; 패키지를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="f611d35cde9cbcd6de1165cd826650cdbfc9e2d9" translate="yes" xml:space="preserve">
          <source>List the commands that the guest exposes to its host.</source>
          <target state="translated">게스트가 호스트에 노출하는 명령을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="0eb0a1ed3a357727445a7085cf6e496bd9b96031" translate="yes" xml:space="preserve">
          <source>List the commands that the host exposes to its guests.</source>
          <target state="translated">호스트가 게스트에게 노출하는 명령을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="7db7aef4c3cf19f6cb78eb0d4a5e24f992bf57f7" translate="yes" xml:space="preserve">
          <source>List the names of the guests that have the appropriate channel.</source>
          <target state="translated">적절한 채널을 가진 게스트의 이름을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="a9b6c6823d17695fd5b47479a29d478299cdf3ca" translate="yes" xml:space="preserve">
          <source>Note that just rebooting the guest will not add the new virtual devices, you
have to actually stop the guest and then start it again!</source>
          <target state="translated">게스트를 재부팅하면 새 가상 장치가 추가되지 않으므로 실제로 게스트를 중지 한 다음 다시 시작해야합니다!</target>
        </trans-unit>
        <trans-unit id="41ebc01f38a4b94ffaa8571ac5aa168137c6e58a" translate="yes" xml:space="preserve">
          <source>Note that my project in no way tries to replace the official QEMU guest agent.
For example I have no intention of implementing freezing and thawing of file
systems because the official agent already does that just fine :-). In other
words the two projects share a lot of ideas but have very different goals.</source>
          <target state="translated">내 프로젝트는 공식 QEMU 게스트 에이전트를 대체하지 않습니다. 예를 들어, 공식 에이전트가 이미 잘 수행하기 때문에 파일 시스템의 동결 및 해동을 구현할 의도가 없습니다. :-). 즉, 두 프로젝트는 많은 아이디어를 공유하지만 목표는 매우 다릅니다.</target>
        </trans-unit>
        <trans-unit id="16e687f53071e1fc35389d8dcc94b4c2e4284a7d" translate="yes" xml:space="preserve">
          <source>Now go and create some scripts in</source>
          <target state="translated">이제 가서 스크립트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="df1bbc05710b5421c42d5c59b5aa54db1777ee68" translate="yes" xml:space="preserve">
          <source>Now you need to shut down the guest and then start it again:</source>
          <target state="translated">이제 게스트를 종료 한 다음 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="ca5eb643b45278d40c47c504f71930890f0f6c85" translate="yes" xml:space="preserve">
          <source>On KVM/QEMU guests</source>
          <target state="translated">KVM / QEMU 게스트에서</target>
        </trans-unit>
        <trans-unit id="ebddc6adcd351e6e613d336e26f10fee50291fcd" translate="yes" xml:space="preserve">
          <source>On KVM/QEMU hosts</source>
          <target state="translated">KVM / QEMU 호스트에서</target>
        </trans-unit>
        <trans-unit id="c930b1ffd32a61c33d63883da51e496e6fecb554" translate="yes" xml:space="preserve">
          <source>On the host UNIX domain sockets are created that are connected to the
character devices inside the guest. On Ubuntu Linux KVM/QEMU hosts,
these UNIX domain sockets are created in the directory</source>
          <target state="translated">호스트에서 게스트 내부의 문자 장치에 연결된 UNIX 도메인 소켓이 생성됩니다. Ubuntu Linux KVM / QEMU 호스트에서 이러한 UNIX 도메인 소켓은 디렉토리에 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">선택권</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">바꾸다</target>
        </trans-unit>
        <trans-unit id="02516f9bd6015bc15a4af72e12d9492cd450103e" translate="yes" xml:space="preserve">
          <source>Scriptable KVM/QEMU guest agent (common functionality)</source>
          <target state="translated">스크립팅 가능한 KVM / QEMU 게스트 에이전트 (공통 기능)</target>
        </trans-unit>
        <trans-unit id="c06dc468629c67697047e70049ee2460739dd64c" translate="yes" xml:space="preserve">
          <source>Set the number of seconds before a remote call without a response times
out. A value of zero disables the timeout (in this case the command can
hang indefinitely). The default is 10 seconds.</source>
          <target state="translated">응답이없는 원격 호출이 시간 초과되기 전까지의 시간 (초)을 설정합니다. 값이 0이면 시간 초과가 비활성화됩니다 (이 경우 명령이 무기한 중단 될 수 있음). 기본값은 10 초입니다.</target>
        </trans-unit>
        <trans-unit id="580ec778c80ff9d26566506ab696381af3c1d907" translate="yes" xml:space="preserve">
          <source>Show this message and exit.</source>
          <target state="translated">이 메시지를 표시하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="343a50b82557de3e98bcaea6e9a157444c4ab04c" translate="yes" xml:space="preserve">
          <source>Some points to consider:</source>
          <target state="translated">고려해야 할 몇 가지 사항 :</target>
        </trans-unit>
        <trans-unit id="3bccaad880e45ab91a8850238a4f57ba71cb04ad" translate="yes" xml:space="preserve">
          <source>Start the guest daemon. When using this command line option the
&amp;ldquo;negotiator-guest&amp;rdquo; program never returns (unless an unexpected error
condition occurs).</source>
          <target state="translated">게스트 데몬을 시작합니다. 이 명령 줄 옵션을 사용하면 &quot;negotiator-guest&quot;프로그램이 반환되지 않습니다 (예기치 않은 오류 조건이 발생하지 않는 한).</target>
        </trans-unit>
        <trans-unit id="17876854afd493fe3c3c336f77405450bcab527d" translate="yes" xml:space="preserve">
          <source>Start the host daemon that answers real time requests from guests.</source>
          <target state="translated">게스트의 실시간 요청에 응답하는 호스트 데몬을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">상태</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="8e9d45953f1c0e815a16f9eb3124244e86f6c4ef" translate="yes" xml:space="preserve">
          <source>The Negotiator project does what I expect from it: realtime bidirectional
communication between Linux based KVM/QEMU hosts and guests.</source>
          <target state="translated">Negotiator 프로젝트는 내가 기대하는대로 Linux 기반 KVM / QEMU 호스트와 게스트 간의 실시간 양방향 통신을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="83fcc7fcda5b285f87c326bcad9f9bcb18f66372" translate="yes" xml:space="preserve">
          <source>The Python packages &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;negotiator-host&lt;/a&gt;, &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;negotiator-guest&lt;/a&gt; and &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-common&quot;&gt;negotiator-common&lt;/a&gt;
together implement a scriptable &lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine&quot;&gt;KVM&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; guest agent infrastructure in
Python. This infrastructure supports realtime bidirectional communication
between &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux&quot;&gt;Linux&lt;/a&gt; hosts and guests which allows the hosts and guests to invoke
user defined commands on &amp;lsquo;the other side&amp;rsquo;.</source>
          <target state="translated">Python 패키지 &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;negotiator-host&lt;/a&gt; , &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;negotiator-guest&lt;/a&gt; 및 &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-common&quot;&gt;negotiator-common&lt;/a&gt; 은 스크립트 가능한 &lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine&quot;&gt;KVM&lt;/a&gt; / &lt;a href=&quot;https://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; 게스트 에이전트 인프라를 Python으로 구현합니다. 이 인프라는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux&quot;&gt;Linux&lt;/a&gt; 호스트와 게스트 간의 실시간 양방향 통신을 지원하므로 호스트와 게스트가 '다른 쪽'에서 사용자 정의 명령을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8a9d958cbcad24168e1651962e72d0fcb57bc8e" translate="yes" xml:space="preserve">
          <source>The QEMU project provides an &lt;a href=&quot;http://wiki.libvirt.org/page/Qemu_guest_agent&quot;&gt;official guest agent&lt;/a&gt; and this agent is very
useful to increase integration between QEMU hosts and guests. However the
official QEMU guest agent has two notable shortcomings (for me at least):</source>
          <target state="translated">QEMU 프로젝트는 &lt;a href=&quot;http://wiki.libvirt.org/page/Qemu_guest_agent&quot;&gt;공식 게스트 에이전트를&lt;/a&gt; 제공하며이 에이전트는 QEMU 호스트와 게스트 간의 통합을 높이는 데 매우 유용합니다. 그러나 공식 QEMU 게스트 에이전트에는 두 가지 주목할만한 단점이 있습니다 (적어도 저에게는) :</target>
        </trans-unit>
        <trans-unit id="3fc1f2e3128acb4d446f9052ac9f28e463578b60" translate="yes" xml:space="preserve">
          <source>The above should be done by the KVM/QEMU system packages if you ask me, but
anyway. On top of this if you are running Ubuntu with AppArmor enabled (the
default) you may need to apply the following patch:</source>
          <target state="translated">위의 작업은 KVM / QEMU 시스템 패키지에 의해 수행되어야합니다. 또한 AppArmor가 활성화 된 상태 (기본값)로 Ubuntu를 실행하는 경우 다음 패치를 적용해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2800d0a7c5cb217e4673401197cead49d229ecaf" translate="yes" xml:space="preserve">
          <source>The kernel module</source>
          <target state="translated">커널 모듈</target>
        </trans-unit>
        <trans-unit id="4e651dc5449474dd97ef6c540edb40ca90313c55" translate="yes" xml:space="preserve">
          <source>The latest version of</source>
          <target state="translated">최신 버전</target>
        </trans-unit>
        <trans-unit id="e8c4f88e0dcf9f24c87bd3441ac9dd97f0bcb9e5" translate="yes" xml:space="preserve">
          <source>The negotiator-guest program</source>
          <target state="translated">협상자-게스트 프로그램</target>
        </trans-unit>
        <trans-unit id="7115445ea2ee3b083001c4c012ca6973928bbcaa" translate="yes" xml:space="preserve">
          <source>The negotiator-host program</source>
          <target state="translated">협상자 호스트 프로그램</target>
        </trans-unit>
        <trans-unit id="9326a0909f20e392859ad9866b570a10c5095e56" translate="yes" xml:space="preserve">
          <source>The official QEMU guest agent has some generic mechanisms like being able to
write files inside guests, but this is a far cry from a generic, extensible
architecture. Ideally given the host and guest&amp;rsquo;s permission we should be able
to transfer arbitrary data and execute user defined logic on both sides.</source>
          <target state="translated">공식 QEMU 게스트 에이전트에는 게스트 내부에 파일을 쓸 수있는 것과 같은 일반적인 메커니즘이 있지만 이것은 일반적인 확장 가능한 아키텍처와는 거리가 멀습니다. 이상적으로 호스트와 게스트의 허가가 주어지면 임의의 데이터를 전송하고 양쪽에서 사용자 정의 논리를 실행할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8cfef9a49f17fb78bf42bd0639a80d4edd0b3c18" translate="yes" xml:space="preserve">
          <source>The project doesn&amp;rsquo;t have an automated test suite, although its functionality
has been extensively tested during development and is being used in a
production environment on more than 100 virtual machines (for non-critical
tasks).</source>
          <target state="translated">이 프로젝트에는 자동화 된 테스트 제품군이 없지만 개발 과정에서 그 기능이 광범위하게 테스트되었으며 100 개 이상의 가상 머신 (중요하지 않은 작업용)의 프로덕션 환경에서 사용되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="daca0246b2bf86bda789705bf25e85725142e289" translate="yes" xml:space="preserve">
          <source>The project has not been peer reviewed with regards to security. My primary
use case is KVM/QEMU hosts and guests that trust each other to some extent
(think private clouds, not shared hosting :-).</source>
          <target state="translated">이 프로젝트는 보안과 관련하여 동료 검토를 거치지 않았습니다. 내 주요 사용 사례는 KVM / QEMU 호스트와 어느 정도 서로를 신뢰하는 게스트입니다 (공유 호스팅이 아닌 사설 클라우드를 생각해보십시오. :-).</target>
        </trans-unit>
        <trans-unit id="9fd1ad507259f47e4a76a6ead2a65ce58cad822f" translate="yes" xml:space="preserve">
          <source>The scriptable guest agent infrastructure uses &lt;a href=&quot;http://www.linux-kvm.org/page/VMchannel_Requirements&quot;&gt;the same mechanism&lt;/a&gt; that the
official QEMU guest agent does:</source>
          <target state="translated">스크립팅 가능한 게스트 에이전트 인프라는 공식 QEMU 게스트 에이전트가 수행 &lt;a href=&quot;http://www.linux-kvm.org/page/VMchannel_Requirements&quot;&gt;하는 것과 동일한 메커니즘&lt;/a&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="a0840fd47900c0d8b2ce64a212be89a7f085dfb3" translate="yes" xml:space="preserve">
          <source>The virtual channel(s) have not been correctly configured or the correct
configuration hasn&amp;rsquo;t been applied yet. Please carefully follow the
instructions in the &lt;em&gt;Getting started&lt;/em&gt; section above.</source>
          <target state="translated">가상 채널이 올바르게 구성되지 않았거나 올바른 구성이 아직 적용되지 않았습니다. 위의 &lt;em&gt;시작하기&lt;/em&gt; 섹션 의 지침을주의 깊게 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="be60dbec8141ee6092cacc7e201687558fd4f4b0" translate="yes" xml:space="preserve">
          <source>This section contains hints about what to do when things don&amp;rsquo;t work as
expected.</source>
          <target state="translated">이 섹션에는 예상대로 작동하지 않을 때 수행 할 작업에 대한 힌트가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="96d2f955c4f81c05467e0cbaaf0cfab3bd72f720" translate="yes" xml:space="preserve">
          <source>This section documents the command line interfaces of the programs running on
hosts and guests. For information on the Python API please refer to the online
documentation on &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;Read the Docs&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 호스트 및 게스트에서 실행되는 프로그램의 명령 줄 인터페이스에 대해 설명합니다. Python API에 대한 자세한 내용은 &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;Read the Docs&lt;/a&gt; 의 온라인 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f27a0dc4aa2c3bb4dbe16bb6623bff3027267eb7" translate="yes" xml:space="preserve">
          <source>This software is licensed under the &lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">이 소프트웨어는 &lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT 라이선스에&lt;/a&gt; 따라 사용이 허가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="55f3e3f1e06a97818ce0ffb33865599309fb29ae" translate="yes" xml:space="preserve">
          <source>When the</source>
          <target state="translated">때</target>
        </trans-unit>
        <trans-unit id="204721858c578d7afb633e24fdcc63727a5999f1" translate="yes" xml:space="preserve">
          <source>Whether you want to get the official QEMU guest agent or the Negotiator project
running, you will need a working bidirectional channel. I&amp;rsquo;m testing Negotiator
on an Ubuntu 14.04 KVM/QEMU host and I needed several changes to get things
working properly:</source>
          <target state="translated">공식 QEMU 게스트 에이전트 또는 Negotiator 프로젝트를 실행하려면 작동하는 양방향 채널이 필요합니다. Ubuntu 14.04 KVM / QEMU 호스트에서 Negotiator를 테스트하고 있으며 제대로 작동하려면 몇 가지 변경이 필요했습니다.</target>
        </trans-unit>
        <trans-unit id="983ae02300568c3bc2a932c4e983fe6a8ff03e00" translate="yes" xml:space="preserve">
          <source>Why another guest agent?</source>
          <target state="translated">왜 다른 게스트 에이전트인가요?</target>
        </trans-unit>
        <trans-unit id="033b86555fcb28d8095af6d08eeafe906a6f9ba2" translate="yes" xml:space="preserve">
          <source>and try
to execute them from the other side! Once you start writing your own
commands it&amp;rsquo;s useful to know that commands on the KVM/QEMU host side have
access to some &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/#negotiator_host.GuestChannel.prepare_environment&quot;&gt;environment variables&lt;/a&gt;.</source>
          <target state="translated">그리고 다른 쪽에서 그들을 실행하십시오! 사용자 고유의 명령 작성을 시작하면 KVM / QEMU 호스트 측의 명령이 일부 &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/#negotiator_host.GuestChannel.prepare_environment&quot;&gt;환경 변수에&lt;/a&gt; 액세스 할 수 있음을 아는 것이 유용 합니다 .</target>
        </trans-unit>
        <trans-unit id="db302db3b72ed6c911515b1818306e8a0b9681e2" translate="yes" xml:space="preserve">
          <source>attribute because libvirt will fill it in
automatically when it reloads the guest&amp;rsquo;s XML definition file (in step 2).</source>
          <target state="translated">libvirt가 게스트의 XML 정의 파일을 다시로드 할 때 (2 단계에서) 자동으로 채워지기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="5c6678ec80dc14208f62e95285a445ab1a6dc44e" translate="yes" xml:space="preserve">
          <source>command as a daemon. I have good
experiences with &lt;a href=&quot;http://supervisord.org/&quot;&gt;supervisord&lt;/a&gt;, here&amp;rsquo;s how to set that up:</source>
          <target state="translated">데몬으로 명령. &lt;a href=&quot;http://supervisord.org/&quot;&gt;supervisord에&lt;/a&gt; 대한 좋은 경험 이 있습니다. 설정하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5344a7c5fd8a94d9510c0eb1fbff77c51b544a34" translate="yes" xml:space="preserve">
          <source>command. If
the module is not loaded you&amp;rsquo;ll need to install and boot to a kernel that
does have the module.</source>
          <target state="translated">명령. 모듈이로드되지 않은 경우 모듈이있는 커널을 설치하고 부팅해야합니다.</target>
        </trans-unit>
        <trans-unit id="25e868ca1b350451ce3cb39389b5ffd23cafe20e" translate="yes" xml:space="preserve">
          <source>is available on &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;PyPI&lt;/a&gt; and &lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub&lt;/a&gt;. You can
find the documentation on &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;Read The Docs&lt;/a&gt;. For bug reports please create an
issue on &lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub&lt;/a&gt;. If you have questions, suggestions, etc. feel free to send me
an e-mail at &lt;a href=&quot;mailto:peter%40peterodding.com&quot;&gt;peter@peterodding.com&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;PyPI&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub&lt;/a&gt; 에서 사용할 수 있습니다 . 문서 &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;읽기&lt;/a&gt; 에서 문서를 찾을 수 있습니다 . 버그 보고서의 경우 &lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub에&lt;/a&gt; 문제를 생성하십시오 . 질문, 제안 등이 있으시면 &lt;a href=&quot;mailto:peter%40peterodding.com&quot;&gt;peter@peterodding.com&lt;/a&gt; 으로 이메일을 보내주십시오 .</target>
        </trans-unit>
        <trans-unit id="0e242d61cbc2b093aad9135cc8b0d93e8e4001a0" translate="yes" xml:space="preserve">
          <source>is not loaded because it is not
available in your kernel. You can check by using the</source>
          <target state="translated">커널에서 사용할 수 없기 때문에로드되지 않았습니다. 다음을 사용하여 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd456d0f92f028a22386d0c592292c5ac024451b" translate="yes" xml:space="preserve">
          <source>lsmod</source>
          <target state="translated">lsmod</target>
        </trans-unit>
        <trans-unit id="f7a6194fe5eb3d84df2b251dc107c2d467d7a82b" translate="yes" xml:space="preserve">
          <source>negotiator</source>
          <target state="translated">양도인</target>
        </trans-unit>
        <trans-unit id="72f867e934d98010d53ee6627eaef9b7e527a1ff" translate="yes" xml:space="preserve">
          <source>negotiator-guest</source>
          <target state="translated">협상가-게스트</target>
        </trans-unit>
        <trans-unit id="b33291aa12cd5bff0329b93c6d8be0b22ac52322" translate="yes" xml:space="preserve">
          <source>negotiator-guest [OPTIONS]</source>
          <target state="translated">협상자-게스트 [옵션]</target>
        </trans-unit>
        <trans-unit id="f867e345fb4dfc7c83c7a56e92870a3adfaf73f5" translate="yes" xml:space="preserve">
          <source>negotiator-host</source>
          <target state="translated">협상자 호스트</target>
        </trans-unit>
        <trans-unit id="0632c5826c138066e694eaafe419408e1c6394cf" translate="yes" xml:space="preserve">
          <source>negotiator-host [OPTIONS] GUEST_NAME</source>
          <target state="translated">협상자-주최자 [옵션] GUEST_NAME</target>
        </trans-unit>
        <trans-unit id="d0f5c7d898defc1932817c11c0d2b2423317b6b8" translate="yes" xml:space="preserve">
          <source>option. Now you need to
find a way to run the</source>
          <target state="translated">선택권. 이제 실행 방법을 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="d558fa883be3771fe23328b0dd48686330d3bdc1" translate="yes" xml:space="preserve">
          <source>packages and their dependencies are compatible with Python 2.7
and newer and are all pure Python. This means you don&amp;rsquo;t need a compiler
toolchain to install the</source>
          <target state="translated">패키지 및 해당 종속성은 Python 2.7 이상과 호환되며 모두 순수 Python입니다. 즉, 설치하는 데 컴파일러 도구 모음이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="787b65845defdfcda30752b67ef0122de3eaac92" translate="yes" xml:space="preserve">
          <source>packages. This is a design decision and
so won&amp;rsquo;t be changed.</source>
          <target state="translated">패키지. 이것은 디자인 결정이므로 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ee79d206fc6f8ade9c40a52dca4b43ba6537a986" translate="yes" xml:space="preserve">
          <source>path='...'</source>
          <target state="translated">경로 = '...'</target>
        </trans-unit>
        <trans-unit id="f03d53a0e1d66b8d5d4e9538166adc4fcc891d41" translate="yes" xml:space="preserve">
          <source>program fails to detect the correct character
devices it will complain loudly and point you here. Here are some of things
I&amp;rsquo;ve run into that can cause this:</source>
          <target state="translated">프로그램이 올바른 문자 장치를 감지하지 못하여 큰 소리로 불평하고 여기로 안내합니다. 이 문제를 일으킬 수있는 몇 가지 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="51050409c3562eeb585d7e37e99f49cfa7fa81dc" translate="yes" xml:space="preserve">
          <source>program is available. The usage
message will help you get started, try the</source>
          <target state="translated">프로그램을 사용할 수 있습니다. 사용법 메시지는 시작하는 데 도움이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="a56be4a67b583f1345391ed9b2315737f2e22642" translate="yes" xml:space="preserve">
          <source>section:</source>
          <target state="translated">부분:</target>
        </trans-unit>
        <trans-unit id="350851c150d667d702542ad00c3438d8e4ef5daa" translate="yes" xml:space="preserve">
          <source>virsh --version</source>
          <target state="translated">virsh-버전</target>
        </trans-unit>
        <trans-unit id="b3b275a5aada795be951d4eacc1a367795b48f14" translate="yes" xml:space="preserve">
          <source>virtio_console</source>
          <target state="translated">virtio_console</target>
        </trans-unit>
        <trans-unit id="e5ac45b686a695ae557ae22695a1b6c79654cc2b" translate="yes" xml:space="preserve">
          <source>with the name of your guest in both places. If you
use libvirt 1.0.6 or newer (you can check with</source>
          <target state="translated">두 곳 모두에서 손님의 이름과 함께. libvirt 1.0.6 이상을 사용하는 경우 (다음으로 확인할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
