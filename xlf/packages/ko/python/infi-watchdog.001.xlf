<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/infi-watchdog/">
    <body>
      <group id="infi-watchdog">
        <trans-unit id="39e070679264b4a57187faeffb43a5bf8314e210" translate="yes" xml:space="preserve">
          <source>*.py</source>
          <target state="translated">* .py</target>
        </trans-unit>
        <trans-unit id="66a0b4183a95527da99d266a151cb85fe27e533a" translate="yes" xml:space="preserve">
          <source>*.txt</source>
          <target state="translated">* .txt</target>
        </trans-unit>
        <trans-unit id="5488b397077c6c53567e23e589c0e743ed4b4e9a" translate="yes" xml:space="preserve">
          <source>.
Please type</source>
          <target state="translated">. 입력하세요</target>
        </trans-unit>
        <trans-unit id="5ddbc292369d2f2f90f10fe85cfd8c3f23f2e23a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.apple.com/technologies/tools/xcode.html&quot;&gt;XCode&lt;/a&gt; (only on Mac OS X)</source>
          <target state="translated">&lt;a href=&quot;http://developer.apple.com/technologies/tools/xcode.html&quot;&gt;XCode&lt;/a&gt; (Mac OS X에만 해당)</target>
        </trans-unit>
        <trans-unit id="96e30712b2304b37dea67fdec50d2cfef4c64e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://pypi.python.org/pypi/select_backport&quot;&gt;select_backport&lt;/a&gt; (select.kqueue replacement for Python2.5/2.6 on BSD/Mac OS X)</source>
          <target state="translated">&lt;a href=&quot;http://pypi.python.org/pypi/select_backport&quot;&gt;select_backport&lt;/a&gt; (BSD / Mac OS X에서 Python2.5 / 2.6에 대한 select.kqueue 대체)</target>
        </trans-unit>
        <trans-unit id="7fb4bb2ecdb8328b75eaed78134ccfc1ccbf5dff" translate="yes" xml:space="preserve">
          <source>A simple program that uses watchdog to monitor directories specified
as command-line arguments and logs events generated:</source>
          <target state="translated">워치 독을 사용하여 명령 줄 인수로 지정된 디렉터리를 모니터링하고 생성 된 이벤트를 기록하는 간단한 프로그램 :</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">약</target>
        </trans-unit>
        <trans-unit id="24648bde65daed3a06aae236abcb5b76db977304" translate="yes" xml:space="preserve">
          <source>About using watchdog with editors like Vim</source>
          <target state="translated">Vim과 같은 편집기에서 워치 독 사용에 관하여</target>
        </trans-unit>
        <trans-unit id="9ea26de5566952ec524cedbb60ee90bf6c1be0e2" translate="yes" xml:space="preserve">
          <source>An example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="7e41767407d17ecf5939104ac620af02ba2140f0" translate="yes" xml:space="preserve">
          <source>Copyright 2011 &lt;a href=&quot;mailto:yesudeep%40gmail.com&quot;&gt;Yesudeep Mangalapilly&lt;/a&gt;.</source>
          <target state="translated">저작권 2011 &lt;a href=&quot;mailto:yesudeep%40gmail.com&quot;&gt;Yesudeep Mangalapilly&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43ed8288418a5697150d2ea466b12b763b88ec02" translate="yes" xml:space="preserve">
          <source>Copyright 2012 Google, Inc.</source>
          <target state="translated">Copyright 2012 Google, Inc.</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="fbb3ede109a0c5147e43813e1c95953fe91b808b" translate="yes" xml:space="preserve">
          <source>Example API Usage</source>
          <target state="translated">API 사용 예</target>
        </trans-unit>
        <trans-unit id="d16811fcc1827b633469e2e171d9253e84418034" translate="yes" xml:space="preserve">
          <source>Filesystem events monitoring</source>
          <target state="translated">파일 시스템 이벤트 모니터링</target>
        </trans-unit>
        <trans-unit id="ed75f2a4c739b141b763cfb42b1909c10f04e839" translate="yes" xml:space="preserve">
          <source>FreeBSD/BSD (kqueue)</source>
          <target state="translated">FreeBSD / BSD (kqueue)</target>
        </trans-unit>
        <trans-unit id="9b880ed7c299af31ae630d5eb5083ca1d2589875" translate="yes" xml:space="preserve">
          <source>Here is how you can log the current directory recursively
for events related only to</source>
          <target state="translated">다음은 다음과 관련된 이벤트에 대해서만 현재 디렉토리를 재귀 적으로 기록하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="c8e2ad70835438681d2c45c9eeb72a42591144c2" translate="yes" xml:space="preserve">
          <source>Installation Caveats</source>
          <target state="translated">설치주의 사항</target>
        </trans-unit>
        <trans-unit id="45a7ea61a74151c9f0ad9645e620e8c692b1dabb" translate="yes" xml:space="preserve">
          <source>Installing from PyPI using</source>
          <target state="translated">다음을 사용하여 PyPI에서 설치</target>
        </trans-unit>
        <trans-unit id="335b23dbbe5968dd292eba60d0d48eb84607078e" translate="yes" xml:space="preserve">
          <source>Installing from source:</source>
          <target state="translated">소스에서 설치 :</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">라이센싱</target>
        </trans-unit>
        <trans-unit id="e57623a2479d1da7536d5be2438e3659a600cf24" translate="yes" xml:space="preserve">
          <source>Linux 2.6 (inotify)</source>
          <target state="translated">Linux 2.6 (inotify)</target>
        </trans-unit>
        <trans-unit id="67cb9437a14ad72db7e497036f0fc1ecd5de01e0" translate="yes" xml:space="preserve">
          <source>Mac OS X (FSEvents, kqueue)</source>
          <target state="translated">Mac OS X (FSEvents, kqueue)</target>
        </trans-unit>
        <trans-unit id="b61dfd9ae10a9964b193210521609a87f1132ef3" translate="yes" xml:space="preserve">
          <source>Note that when using watchdog with kqueue, you need the
number of file descriptors allowed to be opened by programs
running on your system to be increased to more than the
number of files that you will be monitoring. The easiest way
to do that is to edit your</source>
          <target state="translated">kqueue와 함께 watchdog을 사용하는 경우 시스템에서 실행중인 프로그램이 열 수있는 파일 설명 자의 수가 모니터링 할 파일 수보다 더 많이 증가해야합니다. 이를 수행하는 가장 쉬운 방법은</target>
        </trans-unit>
        <trans-unit id="415622b4afec4f5df880f4683a4927c93b8197d5" translate="yes" xml:space="preserve">
          <source>OS-independent (polling the disk for directory snapshots and comparing them
periodically; slow and not recommended)</source>
          <target state="translated">OS 독립적 (디렉터리 스냅 샷용 디스크 폴링 및 주기적으로 비교, 느리고 권장되지 않음)</target>
        </trans-unit>
        <trans-unit id="15caa3abbe0410d494fd77abfc2f0ce01d769d52" translate="yes" xml:space="preserve">
          <source>On Linux, use your favorite package manager to install LibYAML. Here&amp;rsquo;s how you
do it on Ubuntu:</source>
          <target state="translated">Linux에서는 선호하는 패키지 관리자를 사용하여 LibYAML을 설치합니다. Ubuntu에서 수행하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="126bb924520f18aaa9807d5b24cb32ad87d2dcc5" translate="yes" xml:space="preserve">
          <source>On Windows, please install &lt;a href=&quot;http://www.pyyaml.org/&quot;&gt;PyYAML&lt;/a&gt; using the binaries they provide.</source>
          <target state="translated">Windows에서는 제공하는 바이너리를 사용하여 &lt;a href=&quot;http://www.pyyaml.org/&quot;&gt;PyYAML&lt;/a&gt; 을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="44def5798cf5cd33a8aa207d0ef4b1711c553785" translate="yes" xml:space="preserve">
          <source>Please see the help information for these commands by typing:</source>
          <target state="translated">다음을 입력하여 이러한 명령에 대한 도움말 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5404da836e5cae1148f8c75148cf5d6e9a2cb839" translate="yes" xml:space="preserve">
          <source>Project &lt;a href=&quot;http://github.com/gorakhargosh/watchdog&quot;&gt;source code&lt;/a&gt; is available at Github. Please report bugs and file
enhancement requests at the &lt;a href=&quot;http://github.com/gorakhargosh/watchdog/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">프로젝트 &lt;a href=&quot;http://github.com/gorakhargosh/watchdog&quot;&gt;소스 코드&lt;/a&gt; 는 Github에서 사용할 수 있습니다. &lt;a href=&quot;http://github.com/gorakhargosh/watchdog/issues&quot;&gt;이슈 트래커&lt;/a&gt; 에서 버그 및 파일 개선 요청을보고하십시오 .</target>
        </trans-unit>
        <trans-unit id="477683feb282c113a76e18a660bf4a22d7e29c4f" translate="yes" xml:space="preserve">
          <source>PyYAML</source>
          <target state="translated">PyYAML</target>
        </trans-unit>
        <trans-unit id="f9f637f31afc0384f37a5aa84130e7ef9db70a08" translate="yes" xml:space="preserve">
          <source>Python 2.5 or above.</source>
          <target state="translated">Python 2.5 이상.</target>
        </trans-unit>
        <trans-unit id="e017b9c0890c2155056d699ab091dbb3494ebc0a" translate="yes" xml:space="preserve">
          <source>Python API and shell utilities to monitor file system events.</source>
          <target state="translated">파일 시스템 이벤트를 모니터링하기위한 Python API 및 셸 유틸리티.</target>
        </trans-unit>
        <trans-unit id="1d8c70347662d93922b7ad5108337f6f26cd41fd" translate="yes" xml:space="preserve">
          <source>Shell Utilities</source>
          <target state="translated">쉘 유틸리티</target>
        </trans-unit>
        <trans-unit id="1a182e900ad0b28f084dbe30c2f1ab8dc81f123a" translate="yes" xml:space="preserve">
          <source>Supported Platforms</source>
          <target state="translated">지원되는 플랫폼</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="7748b842c8e2f04ddf24899dbc278f8778a9e3d8" translate="yes" xml:space="preserve">
          <source>The directory containing the</source>
          <target state="translated">포함하는 디렉토리</target>
        </trans-unit>
        <trans-unit id="c8787be5e0d96b4fa350ed007e40b4d77d31cf28" translate="yes" xml:space="preserve">
          <source>This is an inherent problem with kqueue because it uses
file descriptors to monitor files. That plus the enormous
amount of bookkeeping that watchdog needs to do in order
to monitor file descriptors just makes this a painful way
to monitor files and directories. In essence, kqueue is
not a very scalable way to monitor a deeply nested
directory of files and directories with a large number of
files.</source>
          <target state="translated">이는 파일 설명자를 사용하여 파일을 모니터링하기 때문에 kqueue의 고유 한 문제입니다. 여기에 파일 디스크립터를 모니터링하기 위해 워치 독이 수행해야하는 엄청난 양의 부기가 파일과 디렉토리를 모니터링하는 데 고통스러운 방법이됩니다. 본질적으로 kqueue는 많은 수의 파일이있는 파일 및 디렉토리의 깊이 중첩 된 디렉토리를 모니터링하는 확장 가능한 방법이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a2c8c3089d37a58a6bfe238d1d10ecda8fe587f6" translate="yes" xml:space="preserve">
          <source>Too many people tried to do the same thing and none did what I needed Python
to do:</source>
          <target state="translated">너무 많은 사람들이 똑같은 일을하려고했지만 아무도 파이썬이해야 할 일을하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a819dd7bbb608d3f47711204360ccd4aea2ec078" translate="yes" xml:space="preserve">
          <source>Tricks</source>
          <target state="translated">트릭</target>
        </trans-unit>
        <trans-unit id="a10cfbb51bba0628c440c51ad66403d5fa028ae3" translate="yes" xml:space="preserve">
          <source>Tricks will be included in the 0.5.0 release. I need community input about them.
Please file enhancement requests at the &lt;a href=&quot;http://github.com/gorakhargosh/watchdog/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">트릭은 0.5.0 릴리스에 포함됩니다. 그들에 대한 커뮤니티 의견이 필요합니다. &lt;a href=&quot;http://github.com/gorakhargosh/watchdog/issues&quot;&gt;이슈 트래커&lt;/a&gt; 에서 개선 요청을 제출하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea1d5d9e021bc3df6d0c18c4f615a3d7009a581a" translate="yes" xml:space="preserve">
          <source>Vim does not modify files unless directed to do so.
It creates backup files and then swaps them in to replace
the files you are editing on the disk. This means that
if you use Vim to edit your files, the on-modified events
for those files will not be triggered by watchdog.
You may need to configure Vim to appropriately to disable
this feature.</source>
          <target state="translated">Vim은 지시가없는 한 파일을 수정하지 않습니다. 백업 파일을 만든 다음 교체하여 디스크에서 편집중인 파일을 바꿉니다. 즉, Vim을 사용하여 파일을 편집하는 경우 해당 파일에 대한 수정 된 이벤트가 워치 독에 의해 트리거되지 않습니다. 이 기능을 비활성화하려면 Vim을 적절하게 구성해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="50dcd639514193ad4b4bdda4184fe846819d807e" translate="yes" xml:space="preserve">
          <source>Watchdog comes with a utility script called</source>
          <target state="translated">Watchdog은 다음과 같은 유틸리티 스크립트와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="81015b9641e5c93683b80192dbf267e88c60f5f2" translate="yes" xml:space="preserve">
          <source>Watchdog is licensed under the terms of the &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache License, version 2.0&lt;/a&gt;.</source>
          <target state="translated">Watchdog은 &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 라이선스, 버전 2.0&lt;/a&gt; 조건에 따라 라이선스가 부여됩니다 .</target>
        </trans-unit>
        <trans-unit id="deb341d910e13e504f1d570b0742eb999b6acdf2" translate="yes" xml:space="preserve">
          <source>Why Watchdog?</source>
          <target state="translated">왜 Watchdog인가?</target>
        </trans-unit>
        <trans-unit id="71d46095de1f4ec7a487aa907ff4c0480f963aa6" translate="yes" xml:space="preserve">
          <source>Windows (ReadDirectoryChangesW with I/O completion ports;
ReadDirectoryChangesW worker threads)</source>
          <target state="translated">Windows (I / O 완료 포트가있는 ReadDirectoryChangesW, ReadDirectoryChangesW 작업자 스레드)</target>
        </trans-unit>
        <trans-unit id="adb97eecae50b896b3fc7ede6d2c77e6cba13223" translate="yes" xml:space="preserve">
          <source>You can browse the latest release &lt;a href=&quot;http://packages.python.org/watchdog/&quot;&gt;documentation&lt;/a&gt; online.</source>
          <target state="translated">온라인 에서 최신 릴리스 &lt;a href=&quot;http://packages.python.org/watchdog/&quot;&gt;문서를&lt;/a&gt; 찾아 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3fb1ba31b7bb70797db8871d22e8485dc4a5fb88" translate="yes" xml:space="preserve">
          <source>You can use the</source>
          <target state="translated">당신은 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="f8b62e0dbff1f8e4528435310824511b19d6c6a0" translate="yes" xml:space="preserve">
          <source>and are written by plugin authors. Trick
classes are augmented with a few additional features that regular event handlers
don&amp;rsquo;t need.</source>
          <target state="translated">플러그인 작성자가 작성했습니다. 트릭 클래스는 일반 이벤트 핸들러가 필요로하지 않는 몇 가지 추가 기능으로 강화됩니다.</target>
        </trans-unit>
        <trans-unit id="8c4283eb05f1472ca88addea0dcc275ffe830b4e" translate="yes" xml:space="preserve">
          <source>argh</source>
          <target state="translated">argh</target>
        </trans-unit>
        <trans-unit id="83f6f2e9da9e3a9eb5b1b43664dcb9e8cddaaf5b" translate="yes" xml:space="preserve">
          <source>at the shell prompt to
know more about this tool.</source>
          <target state="translated">이 도구에 대해 자세히 알아 보려면 쉘 프롬프트에서.</target>
        </trans-unit>
        <trans-unit id="652ea0a6cda515fdc1563dd1a8715778b6d279b9" translate="yes" xml:space="preserve">
          <source>can read</source>
          <target state="translated">읽을 수있다</target>
        </trans-unit>
        <trans-unit id="892c732ffaf61c186a3d61e68201e4f633656cfe" translate="yes" xml:space="preserve">
          <source>easy_install</source>
          <target state="translated">easy_install</target>
        </trans-unit>
        <trans-unit id="8a1bdb959df087d376881df153e435f3d42e67fd" translate="yes" xml:space="preserve">
          <source>file and add
a line similar to:</source>
          <target state="translated">파일을 열고 다음과 유사한 행을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8f1d6fa3927a293f3365f686cb796945b827ddba" translate="yes" xml:space="preserve">
          <source>file as
arguments and events are fed to an instance of this class as they arrive.</source>
          <target state="translated">파일을 인수로 사용하고 이벤트는 도착할 때이 클래스의 인스턴스에 공급됩니다.</target>
        </trans-unit>
        <trans-unit id="41ad22dc09fb618662337dbe4f08864c4ad69fd3" translate="yes" xml:space="preserve">
          <source>file will be monitored. Each trick
class is initialized with its corresponding keys in the</source>
          <target state="translated">파일이 모니터링됩니다. 각 트릭 클래스는 해당 키로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="26f428058982d4a696d6b9d58915c52f19262027" translate="yes" xml:space="preserve">
          <source>file.monitor</source>
          <target state="translated">file.monitor</target>
        </trans-unit>
        <trans-unit id="d0998110d4f271571ea799f05b153504a56056c0" translate="yes" xml:space="preserve">
          <source>file:</source>
          <target state="translated">파일:</target>
        </trans-unit>
        <trans-unit id="2f28d22fc895071d4171e395ad0b620212d3d0a8" translate="yes" xml:space="preserve">
          <source>files and execute tricks within them in
response to file system events. Tricks are actually event handlers that
subclass</source>
          <target state="translated">파일 시스템 이벤트에 대한 응답으로 파일 내에서 트릭을 실행합니다. 트릭은 실제로 하위 클래스의 이벤트 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="1b4b818c26364fd2b87fcf3e398b2ab9c4ce3fdd" translate="yes" xml:space="preserve">
          <source>files while
ignoring all directory events:</source>
          <target state="translated">모든 디렉토리 이벤트를 무시하는 동안 파일 :</target>
        </trans-unit>
        <trans-unit id="78d95ca28c3273bcb3890155850fe9806b32e7f4" translate="yes" xml:space="preserve">
          <source>fsmonitor</source>
          <target state="translated">fsmonitor</target>
        </trans-unit>
        <trans-unit id="c7e42d43b0a326f8979eb4bbeb3655f7deb91f40" translate="yes" xml:space="preserve">
          <source>guard</source>
          <target state="translated">가드</target>
        </trans-unit>
        <trans-unit id="0823899384fa4d46904e97c4f5b93a64104fc877" translate="yes" xml:space="preserve">
          <source>inotify-tools</source>
          <target state="translated">inotify 도구</target>
        </trans-unit>
        <trans-unit id="b907477dbd1a73f71cc3674135dd96db5beab453" translate="yes" xml:space="preserve">
          <source>jnotify</source>
          <target state="translated">jnotify</target>
        </trans-unit>
        <trans-unit id="ea52ec4fcb4d05f65c1834d724a9a5231e7d7423" translate="yes" xml:space="preserve">
          <source>pathtools</source>
          <target state="translated">경로 도구</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="e4e6eb33058dfd96e495c7d648008d1d9420f68c" translate="yes" xml:space="preserve">
          <source>pnotify</source>
          <target state="translated">찌르다</target>
        </trans-unit>
        <trans-unit id="d701a635e3acd165c8e42b11d39f2faebc9c3701" translate="yes" xml:space="preserve">
          <source>pyfilesystem</source>
          <target state="translated">pyfilesystem</target>
        </trans-unit>
        <trans-unit id="2b58f43e5af41f4a147ba62f181ecad1ae5d7a25" translate="yes" xml:space="preserve">
          <source>pyinotify</source>
          <target state="translated">pyinotify</target>
        </trans-unit>
        <trans-unit id="dc0d935baad15feb66a16b193fcb91b8c3f6a418" translate="yes" xml:space="preserve">
          <source>script depends on &lt;a href=&quot;http://www.pyyaml.org/&quot;&gt;PyYAML&lt;/a&gt; which links with &lt;a href=&quot;http://pyyaml.org/wiki/LibYAML&quot;&gt;LibYAML&lt;/a&gt;,
which brings a performance boost to the PyYAML parser. However, installing
&lt;a href=&quot;http://pyyaml.org/wiki/LibYAML&quot;&gt;LibYAML&lt;/a&gt; is optional but recommended. On Mac OS X, you can use &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;homebrew&lt;/a&gt;
to install LibYAML:</source>
          <target state="translated">스크립트는 &lt;a href=&quot;http://www.pyyaml.org/&quot;&gt;LibYAML&lt;/a&gt; 과 연결되는 &lt;a href=&quot;http://pyyaml.org/wiki/LibYAML&quot;&gt;PyYAML&lt;/a&gt; 에 의존 하여 PyYAML 파서의 성능을 향상시킵니다. 그러나 &lt;a href=&quot;http://pyyaml.org/wiki/LibYAML&quot;&gt;LibYAML&lt;/a&gt; 설치 는 선택 사항이지만 권장됩니다. Mac OS X에서는 &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;homebrew&lt;/a&gt; 를 사용하여 LibYAML을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f23166f903e72bba9ab5a7c4b54eed805bf73027" translate="yes" xml:space="preserve">
          <source>shell-command</source>
          <target state="translated">쉘 명령</target>
        </trans-unit>
        <trans-unit id="a0a138cd57a56ab50a950b5a2e14f3e335cbff06" translate="yes" xml:space="preserve">
          <source>subcommand to execute shell commands in
response to events:</source>
          <target state="translated">이벤트에 대한 응답으로 쉘 명령을 실행하는 부속 명령 :</target>
        </trans-unit>
        <trans-unit id="5119f5474ba25f964bc72be730d55eedbd9e2b25" translate="yes" xml:space="preserve">
          <source>treewalker</source>
          <target state="translated">트리 워커</target>
        </trans-unit>
        <trans-unit id="a6ff4c8876bc2280a5b41bdf4347ab6acd2422ab" translate="yes" xml:space="preserve">
          <source>tricks.yaml</source>
          <target state="translated">tricks.yaml</target>
        </trans-unit>
        <trans-unit id="6b587cd3a58d49d324f824ca2bd0e3066474ded3" translate="yes" xml:space="preserve">
          <source>unison fsmonitor</source>
          <target state="translated">한마음 fsmonitor</target>
        </trans-unit>
        <trans-unit id="b03f14e559d9cbdd1896d0a99c4b25667a77427d" translate="yes" xml:space="preserve">
          <source>watchdog.tricks.Trick</source>
          <target state="translated">watchdog.tricks.Trick</target>
        </trans-unit>
        <trans-unit id="2aa93b1102e773b32cdb717b3effc79e5e8d92cb" translate="yes" xml:space="preserve">
          <source>watchmedo</source>
          <target state="translated">Watchmedo</target>
        </trans-unit>
        <trans-unit id="d1f983cbaca85e5fcfdb540df94b94e02f9aabcc" translate="yes" xml:space="preserve">
          <source>watchmedo --help</source>
          <target state="translated">watchmedo-도움말</target>
        </trans-unit>
        <trans-unit id="ef0bed839170e28b3d97aaa30f755c4f95f7454f" translate="yes" xml:space="preserve">
          <source>~/.profile</source>
          <target state="translated">~ / .profile</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
