<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/py4j/">
    <body>
      <group id="py4j">
        <trans-unit id="d5aec1159ad16734a2acde522978e0e11264c871" translate="yes" xml:space="preserve">
          <source>Enables Python programs to dynamically access arbitrary Java objects</source>
          <target state="translated">Python 프로그램이 임의의 Java 객체에 동적으로 액세스 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="b6ac65fdb763f2dc93f5e87d182204197e9cf580" translate="yes" xml:space="preserve">
          <source>Py4J enables Python programs running in a Python interpreter to dynamically access Java objects in a Java Virtual Machine. Methods are called as if the Java objects resided in the Python interpreter and Java collections can be accessed through standard Python collection methods. Py4J also enables Java programs to call back Python objects.</source>
          <target state="translated">Py4J를 사용하면 Python 인터프리터에서 실행되는 Python 프로그램이 Java Virtual Machine의 Java 개체에 동적으로 액세스 할 수 있습니다. Java 객체가 Python 인터프리터에있는 것처럼 메서드가 호출되고 Java 컬렉션은 표준 Python 컬렉션 메서드를 통해 액세스 할 수 있습니다. Py4J는 또한 자바 프로그램이 Python 객체를 콜백 할 수 있도록합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
