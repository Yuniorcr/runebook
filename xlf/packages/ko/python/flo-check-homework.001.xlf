<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/flo-check-homework/">
    <body>
      <group id="flo-check-homework">
        <trans-unit id="80fc287d09ff8e08f902b6686e57b0326822038d" translate="yes" xml:space="preserve">
          <source>--interactive</source>
          <target state="translated">--인터렉티브</target>
        </trans-unit>
        <trans-unit id="ffd2f1f485d108570820e83c9139dfd8d3a434b8" translate="yes" xml:space="preserve">
          <source>A program that allows to run other programs only after a set of questions have been correctly answered</source>
          <target state="translated">일련의 질문에 올바르게 대답 한 후에 만 ​​다른 프로그램을 실행할 수있는 프로그램</target>
        </trans-unit>
        <trans-unit id="e4c1a61cbf505ca7b31a1850e03b687eb27fc032" translate="yes" xml:space="preserve">
          <source>A way to consolidate calculus and grammar skills</source>
          <target state="translated">미적분과 문법 기술을 통합하는 방법</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="5962d284fa8eaed04540374257bf768292aff88d" translate="yes" xml:space="preserve">
          <source>Advanced tips (or hacks)</source>
          <target state="translated">고급 팁 (또는 해킹)</target>
        </trans-unit>
        <trans-unit id="2ae6ee7da3e41d74ae626a49c556d3582a7bbbe8" translate="yes" xml:space="preserve">
          <source>All images, as the rest of the package, are free according to the &lt;a href=&quot;http://www.debian.org/social_contract#guidelines&quot;&gt;Debian Free
Software Guidelines&lt;/a&gt; (DFSG-free for short). I wanted to use photos of
angry-looking dogs easily found with Google Images, but unfortunately, they
all appear to be non-free. If you have good suggestions of free
software-licensed images to improve this program, please advise.</source>
          <target state="translated">패키지의 나머지 부분과 마찬가지로 모든 이미지는 &lt;a href=&quot;http://www.debian.org/social_contract#guidelines&quot;&gt;데비안 자유 소프트웨어 지침&lt;/a&gt; (줄여서 DFSG 없음)에 따라 무료입니다. Google 이미지에서 쉽게 찾을 수있는 화난 개 사진을 사용하고 싶었지만 안타깝게도 모두 무료가 아닌 것 같습니다. 이 프로그램을 개선하기 위해 무료 소프트웨어 라이선스 이미지에 대한 좋은 제안이 있다면 조언 해주십시오.</target>
        </trans-unit>
        <trans-unit id="93c2b225b1f93a8ab0b96d862930f2d6dbb16c55" translate="yes" xml:space="preserve">
          <source>AllowExitBeforeChild</source>
          <target state="translated">AllowExitBeforeChild</target>
        </trans-unit>
        <trans-unit id="fd3e3e3a6c5c78509eaa48d39b9f171cbecec906" translate="yes" xml:space="preserve">
          <source>Currently, the questions are designed to help consolidate simple additions,
substractions, multiplications, euclidian divisions and conjugations of French
verbs. The questionnaires are built at run-time and can be customized to some
extent via a configuration file
(~/.config/Florent Rougon/flo-check-homework.ini on Unix-like systems). It is
easy for a Python programmer to add new question generators, questionnaires or
subquestionnaires.</source>
          <target state="translated">현재 질문은 프랑스어 동사의 간단한 덧셈, 뺄셈, 곱셈, 유클리드 나누기 및 활용을 통합하는 데 도움이되도록 설계되었습니다. 설문지는 런타임에 작성되며 구성 파일 (유닉스 계열 시스템의 경우 ~ / .config / Florent Rougon / flo-check-homework.ini)을 통해 어느 정도 사용자 정의 할 수 있습니다. Python 프로그래머는 새로운 질문 생성기, 질문지 또는 하위 질문지를 쉽게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="665f4ce958b0a1bbc5b29473741899e6e7addc1f" translate="yes" xml:space="preserve">
          <source>Either let the super magic token expire by itself, or launch
flo-check-homework and use the appropriate item from the Magic menu to
remove it.</source>
          <target state="translated">수퍼 매직 토큰이 저절로 만료되도록하거나 flo-check-homework를 시작하고 매직 메뉴에서 적절한 항목을 사용하여 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="cd1645e897882589cb2e3eda1e13baade07b2ebc" translate="yes" xml:space="preserve">
          <source>Ensure the child has done his work correctly, be it with flo-check-homework,
yourself, or any way that seems reasonable to you.</source>
          <target state="translated">자녀가 자신의 과제를 올바르게 수행했는지 확인하십시오. 플로 체크 숙제를 사용하든, 본인이든 또는 여러분에게 합리적으로 보이는 방식이든 상관 없습니다.</target>
        </trans-unit>
        <trans-unit id="030481c43e867f8fe37468374f11b58c43f91745" translate="yes" xml:space="preserve">
          <source>Enter the super magic word in flo-check-homework. This grants you a virtual
&amp;ldquo;super magic token&amp;rdquo; stored on the filesystem that persists even after
flo-check-homework has been ended (the storage location being under
&amp;lsquo;~/.config/Florent Rougon&amp;rsquo; on Unix-like systems).</source>
          <target state="translated">flo-check-homework에 마법의 단어를 입력하세요. 이렇게하면 flo-check-homework가 종료 된 후에도 지속되는 파일 시스템에 저장된 가상 &quot;슈퍼 매직 토큰&quot;이 부여됩니다 (저장 위치는 Unix 계열 시스템의 '~ / .config / Florent Rougon'아래에 있음).</target>
        </trans-unit>
        <trans-unit id="798a79a87bcd390915a0f7e1c0f990754cb1ffa7" translate="yes" xml:space="preserve">
          <source>For installation instructions, please refer to INSTALL.txt.</source>
          <target state="translated">설치 지침은 INSTALL.txt를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7565e1fad70a1b6ae5c2952de6827b907ad2f6f3" translate="yes" xml:space="preserve">
          <source>ForceInteractive</source>
          <target state="translated">ForceInteractive</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">일반</target>
        </trans-unit>
        <trans-unit id="56c5a89e19b4fe04021988b2e90bba54d677c525" translate="yes" xml:space="preserve">
          <source>General idea</source>
          <target state="translated">일반적인 아이디어</target>
        </trans-unit>
        <trans-unit id="880609180f38118f09532768032a83fd6d8afa6f" translate="yes" xml:space="preserve">
          <source>In flo-check-homework&amp;rsquo;s graphical user interface, a &amp;ldquo;magic word&amp;rdquo; button allows
one to bypass the test in case the pupil has already done his homework in
another way. It also makes it possible to exit the program immediately.</source>
          <target state="translated">flo-check-homework의 그래픽 사용자 인터페이스에서 &quot;마법의 단어&quot;버튼을 사용하면 학생이 이미 다른 방법으로 숙제를 완료 한 경우 시험을 건너 뛸 수 있습니다. 또한 프로그램을 즉시 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1e4d05fbc6aa0cc48d92ee9a8d49fa68df6ba8f" translate="yes" xml:space="preserve">
          <source>In short, the suggested use of this feature is the following:</source>
          <target state="translated">간단히 말해서이 기능의 권장 사용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdd540d41c5e2c8dcfc5030b213717d0e8dc411d" translate="yes" xml:space="preserve">
          <source>In this mode, flo-check-homework uses a call from the exec*(2) family
(execvp(2) in version 0.10.0) without forking beforehand. Consequently, it
doesn&amp;rsquo;t consume any resource whatsoever once the decorated program is started,
and the exit code returned is exactly the same as if the decorated program had
been run without flo-check-homework intervening. This is why this mode is said
to allow transparent execution of the decorated programs.</source>
          <target state="translated">이 모드에서 flo-check-homework는 미리 분기하지 않고 exec * (2) 계열 (버전 0.10.0의 execvp (2))에서 호출을 사용합니다. 따라서 데코 레이팅 된 프로그램이 시작되면 리소스를 전혀 소비하지 않으며, 반환 된 종료 코드는 플로-체크-숙제없이 데코 레이팅 된 프로그램이 실행 된 것과 똑같습니다. 이것이이 모드가 데코 레이팅 된 프로그램의 투명한 실행을 허용하는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="2b16c8dc952e322001104c5878a4536b787b7846" translate="yes" xml:space="preserve">
          <source>Indeed, flo-check-homework refuses to quit immediately unless option -e was
given or a sufficient score was obtained; this is done so as to avoid the
children validating the whole questionnaire with incorrect answers only to get
corrections that they can blindly copy after rerunning the program. For the
same reason, some of the question generators purposedly don&amp;rsquo;t remember
incorrect answers, in contrast with the initial design.</source>
          <target state="translated">사실, flo-check-homework는 옵션 -e가 주어 지거나 충분한 점수를 얻지 않으면 즉시 그만두기를 거부합니다. 이것은 아이들이 프로그램을 다시 실행 한 후 맹목적으로 복사 할 수있는 수정을 얻기 위해 오답으로 전체 설문지를 확인하는 것을 방지하기 위해 수행됩니다. 같은 이유로 일부 질문 생성기는 초기 설계와 달리 의도적으로 잘못된 답변을 기억하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="161f3e746be72aa6cb96db0b38395155cb083397" translate="yes" xml:space="preserve">
          <source>It is possible to run flo-check-homework from a clone of that repository, but
two things that are not part of it have to be set up in order for everything
to work properly:</source>
          <target state="translated">해당 저장소의 복제본에서 flo-check-homework를 실행할 수 있지만 모든 것이 제대로 작동하려면 해당 저장소의 일부가 아닌 두 가지를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="133c5a89f68af948c2da128b0d53975350219af3" translate="yes" xml:space="preserve">
          <source>It is possible to setup launcher scripts that call flo-check-homework with the
appropriate parameters depending on the script (and parameters passed to the
script). The flo-check-homework-decorate-games program from the &amp;lsquo;tools&amp;rsquo;
directory is provided to help automate such a setup. Basically, you write a
list of programs/games in an XML file which we&amp;rsquo;ll call DATAFILE for the sake
of the example. You may look at flo-check-homework-decorate-games.xml from the
tools/flo-check-homework-decorate-games folder or run
&amp;lsquo;flo-check-homework-decorate-games &amp;ndash;help&amp;rsquo; for an example of such a file. Once
you have a proper DATAFILE, run the following command as a user who has
permission to write to /usr/local/games:</source>
          <target state="translated">스크립트 (및 스크립트에 전달 된 매개 변수)에 따라 적절한 매개 변수를 사용하여 flo-check-homework를 호출하는 실행기 스크립트를 설정할 수 있습니다. 이러한 설정을 자동화하기 위해 'tools'디렉토리에있는 flo-check-homework-decorate-games 프로그램이 제공됩니다. 기본적으로 XML 파일에 프로그램 / 게임 목록을 작성합니다.이 파일은 예제를 위해 DATAFILE이라고합니다. tools / flo-check-homework-decorate-games 폴더에서 flo-check-homework-decorate-games.xml을 보거나 'flo-check-homework-decorate-games &amp;ndash;help'를 실행하여 이러한 예를 볼 수 있습니다. 파일. 적절한 DATAFILE이 있으면 / usr / local / games에 대한 쓰기 권한이있는 사용자로 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8ec69a406f54aa6f7db3e5219710ccc258f8d176" translate="yes" xml:space="preserve">
          <source>Let the child play with any of the decorated games without
flo-check-homework interfering during the validity period of the super
magic token.</source>
          <target state="translated">슈퍼 매직 토큰의 유효 기간 동안 어린이가 플로 체크 숙제를 방해하지 않고 장식 된 게임을 플레이하게하십시오.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">노트 :</target>
        </trans-unit>
        <trans-unit id="5627db6dbc837d76a10e6b37103eb01f82730feb" translate="yes" xml:space="preserve">
          <source>Note: there is still some locking performed when flo-check-homework runs the
decorated game &amp;ldquo;transparently&amp;rdquo; after finding out that the user has a valid
super magic token. However, it is very short, the lock being released before
the decorated game is started. Therefore, several decorated programs/games may
be run concurrently this way, even though the corresponding flo-check-homework
processes may block each other for a short time because of the locking
performed in order to protect the QSettings.</source>
          <target state="translated">참고 : flo-check-homework가 장식 된 게임을 &quot;투명하게&quot;실행할 때 사용자가 유효한 슈퍼 매직 토큰을 가지고 있음을 확인한 후 여전히 일부 잠금이 수행됩니다. 그러나 매우 짧아 장식 된 게임이 시작되기 전에 잠금이 해제됩니다. 따라서 QSettings를 보호하기 위해 수행되는 잠금으로 인해 해당 flo-check-homework 프로세스가 짧은 시간 동안 서로 차단 될 수 있지만 여러 데코 레이팅 된 프로그램 / 게임이 이와 같이 동시에 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4450e4719d8f5fdd09242d06cf4a3a418ab4dbea" translate="yes" xml:space="preserve">
          <source>PyQt&amp;nbsp;4.10.3 is known to work, version 4.9 should be enough and older
versions will most probably not work with this version of
flo-check-homework.</source>
          <target state="translated">PyQt 4.10.3은 작동하는 것으로 알려져 있으며 버전 4.9이면 충분하며 이전 버전은이 버전의 flo-check-homework에서 작동하지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="9b95704072a5fb3ef3f8759520dabc6a71d42c18" translate="yes" xml:space="preserve">
          <source>Python&amp;nbsp;3.1 or later in the 3 series;</source>
          <target state="translated">3 시리즈의 Python 3.1 이상;</target>
        </trans-unit>
        <trans-unit id="9b0dcbbc2e073c0aab824f74d6b2c4fcca46ce24" translate="yes" xml:space="preserve">
          <source>Qt&amp;nbsp;4.8 or later;</source>
          <target state="translated">Qt 4.8 이상;</target>
        </trans-unit>
        <trans-unit id="810eaa30191e2b0db016b43617505a9d527c4f0d" translate="yes" xml:space="preserve">
          <source>Quit flo-check-homework (or accept to be limited to the game and parameters
given on flo-check-homework&amp;rsquo;s command line as specified in the previous
step).</source>
          <target state="translated">flo-check-homework를 종료합니다 (또는 이전 단계에서 지정한대로 flo-check-homework의 명령 줄에 지정된 게임 및 매개 변수로 제한되도록 허용).</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="196440dd80c5af06d8d9ca6bf02d644f0c8a61fc" translate="yes" xml:space="preserve">
          <source>Running flo-check-homework from the Git repository</source>
          <target state="translated">Git 저장소에서 flo-check-homework 실행</target>
        </trans-unit>
        <trans-unit id="6bea7a2357d85a5d57ac42ecb3ab4a3d4be6eab7" translate="yes" xml:space="preserve">
          <source>Seen objects (used to remember which items of a given type have been seen
in the current session) can be shared between several question generators.
This avoids asking the same question twice in case several question
generators are likely to generate the same question.</source>
          <target state="translated">본 개체 (현재 세션에서 본 유형의 항목을 기억하는 데 사용됨)는 여러 질문 생성기간에 공유 할 수 있습니다. 이렇게하면 여러 질문 생성자가 동일한 질문을 생성 할 가능성이있는 경우 동일한 질문을 두 번 묻는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="10aede5886f6ed1e9eaf125bf18147de7e8c8381" translate="yes" xml:space="preserve">
          <source>Since flo-check-homework-decorate-games is currently only able to generate
shell scripts, it is not expected to be of any use on platforms that cannot
run them. This means that you can fill in questionnaires on these platforms
but can&amp;rsquo;t expect to be able to run the desired program/games from
flo-check-homework after a good enough work without some adaptation for such
platforms. (For Windows platforms, one might use Cygwin or adapt
flo-check-homework-decorate-games to generate batch files, or something else,
let Windows experts decide in this matter&amp;hellip;)</source>
          <target state="translated">flo-check-homework-decorate-games는 현재 쉘 스크립트 만 생성 할 수 있으므로 실행할 수없는 플랫폼에서는 사용할 수 없을 것으로 예상됩니다. 즉, 이러한 플랫폼에서 설문지를 작성할 수 있지만 이러한 플랫폼에 대한 약간의 적응 없이는 충분한 작업을 수행 한 후 flo-check-homework에서 원하는 프로그램 / 게임을 실행할 수있을 것으로 기대할 수 없습니다. (Windows 플랫폼의 경우 Cygwin을 사용하거나 flo-check-homework-decorate-games를 사용하여 배치 파일을 생성하거나 다른 것을 적용하여 Windows 전문가가이 문제를 결정할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="02a2664b4ef8d7bc3fbab92cc0ebe1eebdb77eb5" translate="yes" xml:space="preserve">
          <source>Since version 0.10.0, a new kind of magic word, creatively called the &amp;ldquo;super
magic word&amp;rdquo;, allows one to run the decorated games more easily and
transparently. When one chooses this function from the Magic menu (added in
version 0.10.0) or from the toolbar, one is asked to enter the super magic
word, similarly to the simple &amp;ldquo;magic word&amp;rdquo;. If the given answer is correct, a
&amp;ldquo;super magic token&amp;rdquo; is granted that allows one to run all decorated programs
(likely to be games) in a transparent manner. This special permission is valid
for some time that depends on the super magic word that was given (see the
source!). Once the token has been granted, it is possible to launch the
predefined game from flo-check-homework&amp;rsquo;s GUI, as for a simple &amp;ldquo;magic word&amp;rdquo;.
However, in order to run different games under the super magic token super
powers, one should rather quit flo-check-homework first, otherwise the locking
mechanism used to protect the QSettings against eventual corruption caused by
several concurrent uses would prevent other instances of flo-check-homework
from running normally, and therefore make it impossible to run other decorated
games until the instance that is holding the lock is ended.</source>
          <target state="translated">0.10.0 버전부터 창의적으로 &quot;슈퍼 매직 워드&quot;라고 불리는 새로운 종류의 매직 워드를 사용하면 장식 된 게임을보다 쉽고 투명하게 실행할 수 있습니다. Magic 메뉴 (버전 0.10.0에 추가됨) 또는 도구 모음에서이 기능을 선택하면 간단한 &quot;마법 단어&quot;와 유사하게 슈퍼 매직 단어를 입력하라는 메시지가 표시됩니다. 주어진 답이 맞다면, 모든 데코 레이팅 된 프로그램 (게임처럼 보이는)을 투명한 방식으로 실행할 수있는 &quot;슈퍼 매직 토큰&quot;이 부여됩니다. 이 특별 허가는 주어진 슈퍼 매직 단어에 따라 얼마 동안 유효합니다 (출처 참조!). 토큰이 부여되면 간단한 &quot;마법의 단어&quot;와 같이 flo-check-homework의 GUI에서 사전 정의 된 게임을 시작할 수 있습니다. 그러나 슈퍼 매직 토큰 슈퍼 파워 아래에서 다른 게임을 실행하기 위해서는먼저 flo-check-homework를 종료해야합니다. 그렇지 않으면 여러 동시 사용으로 인한 최종 손상으로부터 QSettings를 보호하는 데 사용되는 잠금 메커니즘이 다른 flo-check-homework 인스턴스가 정상적으로 실행되는 것을 막아서 다른 실행을 불가능하게 만듭니다. 잠금을 유지하는 인스턴스가 종료 될 때까지 데코 레이팅 된 게임.</target>
        </trans-unit>
        <trans-unit id="2bf9153113f97a52d096223d75939351b81ac95a" translate="yes" xml:space="preserve">
          <source>Since version 0.10.0, it is possible to tell flo-check-homework to use an
intermediate launcher to start the desired program (game or whatever you
want). This is done by setting ProgramLauncher in the configuration file to
the name or path to the launcher executable. This results in a command where
the value of ProgramLauncher is prepended to the command line for the desired
program. Of course, if ProgramLauncher is empty or unset, no intermediate
launcher is used.</source>
          <target state="translated">버전 0.10.0부터, 원하는 프로그램 (게임 또는 원하는 모든 것)을 시작하기 위해 중간 런처를 사용하도록 flo-check-homework에 지시 할 수 있습니다. 이는 구성 파일의 ProgramLauncher를 실행 파일의 이름 또는 경로로 설정하여 수행됩니다. 그러면 원하는 프로그램의 명령 줄 앞에 ProgramLauncher 값이 추가되는 명령이 생성됩니다. 물론 ProgramLauncher가 비어 있거나 설정되어 있지 않으면 중간 런처가 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="87eb05079ed92eedec39183ff490d67db145909b" translate="yes" xml:space="preserve">
          <source>Since version 0.10.0, there is a new feature called &lt;em&gt;super magic word&lt;/em&gt; that
gives, if properly entered, a &lt;em&gt;super magic token&lt;/em&gt; which is valid for a limited
amount of time (see &lt;a href=&quot;#the-super-magic-word&quot;&gt;The super magic word&lt;/a&gt; below). This allows more freedom
to run the available games once the token has been granted. Since my goal is
definitely not to use technical means in order to limit the pleasure children
can have with games, a successful work does grant a super magic token, just as
if the super magic word had been entered.</source>
          <target state="translated">버전 0.10.0부터는 제대로 입력 하면 제한된 시간 동안 유효한 &lt;em&gt;슈퍼 매직 토큰&lt;/em&gt; 을 제공하는 &lt;em&gt;슈퍼 매직 단어&lt;/em&gt; 라는 새로운 기능 이 있습니다 ( 아래 &lt;a href=&quot;#the-super-magic-word&quot;&gt;슈퍼 매직 단어&lt;/a&gt; 참조). 이를 통해 토큰이 부여되면 사용 가능한 게임을 더 자유롭게 실행할 수 있습니다. 제 목표는 아이들이 게임으로 가질 수있는 즐거움을 제한하기 위해 기술적 수단을 사용하지 않는 것이기 때문에, 성공한 작업은 마치 슈퍼 매직 단어가 입력 된 것처럼 슈퍼 매직 토큰을 부여합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b96c3a8635c3770d08ff63f990bca8d89bad88c9" translate="yes" xml:space="preserve">
          <source>The ItemGenerator class, which is the basis for many question generators, has
the following properties:</source>
          <target state="translated">많은 질문 생성기의 기반이되는 ItemGenerator 클래스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="409f40293679c2d1e2ac9d442bea77f60166e849" translate="yes" xml:space="preserve">
          <source>The above trick, based on the PATH environment variable, also works if the
game is started from the &lt;a href=&quot;http://www.freedesktop.org/&quot;&gt;freedesktop&lt;/a&gt; menu, because freedesktop .desktop files
usually don&amp;rsquo;t specify a full path to the executable (when they do, the only
recourse is to fix the .desktop file manually and report a bug to the game in
question). The format of .desktop files is described in the &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec&quot;&gt;Desktop Entry
specification&lt;/a&gt;.</source>
          <target state="translated">freedesktop .desktop 파일은 일반적으로 실행 파일에 대한 전체 경로를 지정하지 않기 때문에 PATH 환경 변수를 기반으로하는 위의 트릭은 &lt;a href=&quot;http://www.freedesktop.org/&quot;&gt;freedesktop&lt;/a&gt; 메뉴 에서 게임을 시작하는 경우에도 작동합니다. .desktop 파일을 수동으로 수정하고 문제의 게임에 버그를보고합니다). .desktop 파일의 형식은 &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec&quot;&gt;Desktop Entry 사양에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="60225f7b23bfb9495a8f953a0350cd6cd19fa99d" translate="yes" xml:space="preserve">
          <source>The following software is required to run flo-check-homework:</source>
          <target state="translated">flo-check-homework를 실행하려면 다음 소프트웨어가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="feef7c6180b57c3f200e43cc876f0855a059b4a8" translate="yes" xml:space="preserve">
          <source>The setup described in the previous paragraph requires a little modification
to wrapper scripts, which by default check the executable bit of the program
to run. In this case, the check would necessarily fail and should be skipped.
Invoking flo-check-homework-decorate-games with the &amp;ndash;no-exec-check option
generates scripts that don&amp;rsquo;t perform such a check.</source>
          <target state="translated">이전 단락에서 설명한 설정은 기본적으로 실행할 프로그램의 실행 가능한 비트를 확인하는 래퍼 스크립트를 약간 수정해야합니다. 이 경우 검사는 반드시 실패하므로 건너 뛰어야합니다. &amp;ndash;no-exec-check 옵션과 함께 flo-check-homework-decorate-games를 호출하면 이러한 검사를 수행하지 않는 스크립트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e43070a5897719cd5959ea93548910643d35ad7f" translate="yes" xml:space="preserve">
          <source>The super magic word</source>
          <target state="translated">슈퍼 매직 워드</target>
        </trans-unit>
        <trans-unit id="60c12f98bc7315368e4cd10260700dc33b2d836e" translate="yes" xml:space="preserve">
          <source>This new feature can be used in a setup where for instance /usr/games does not
have the executable bit set for the user running flo-check-homework, but does
have it for a particular group which we&amp;rsquo;ll call gamers for the sake of this
discussion. If you create a custom launcher program in C that uses the
setgroups(2) system call to add the gamers group to the list of supplementary
groups for the calling process before using execve(2) to run the desired
program, then it becomes possible for the user to run the desired program
through flo-check-homework even though it would appear to be impossible at
first (of course, the launcher program is the one providing the required
privileges here, and is also accessible to the user in such a setup).</source>
          <target state="translated">이 새로운 기능은 예를 들어 / usr / games에 flo-check-homework를 실행하는 사용자에 대해 실행 가능한 비트가 설정되어 있지 않지만 게이머라고 부르는 특정 그룹에 대해서는 설정에서 사용할 수 있습니다. 이 토론의. execve (2)를 사용하여 원하는 프로그램을 실행하기 전에 setgroups (2) 시스템 호출을 사용하여 게이머 그룹을 호출 프로세스에 대한 추가 그룹 목록에 추가하는 C에서 사용자 지정 런처 프로그램을 만들면 다음을 수행 할 수 있습니다. 사용자는 처음에는 불가능 해 보이지만 flo-check-homework를 통해 원하는 프로그램을 실행하도록합니다 (물론 런처 프로그램은 여기에서 필요한 권한을 제공하는 프로그램이며 이러한 설정에서 사용자도 액세스 할 수 있습니다. ).</target>
        </trans-unit>
        <trans-unit id="8746abde09188a2d2feddfef59d920ee59aa3609" translate="yes" xml:space="preserve">
          <source>This will create an appropriate launcher script in /usr/local/games for every
program listed in DATAFILE. If /usr/local/games is prepended to the system
PATH, then the launcher scripts will take precedence over the corresponding
game executables when a user tries to run a game, unless a full path to the
game executable is specified. So, when using wrapper scripts, the call chain
looks like the following:</source>
          <target state="translated">그러면 DATAFILE에 나열된 모든 프로그램에 대해 / usr / local / games에 적절한 실행 스크립트가 생성됩니다. / usr / local / games가 시스템 PATH 앞에 추가되면 게임 실행 파일에 대한 전체 경로가 지정되지 않는 한 사용자가 게임을 실행하려고 할 때 실행기 스크립트가 해당 게임 실행 파일보다 우선합니다. 따라서 래퍼 스크립트를 사용할 때 콜 체인은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e38e2a91667d4e9a3d49f8d76a4a0af12cde5f1f" translate="yes" xml:space="preserve">
          <source>To be of any use, a launcher program as described above would need the
CAP_SETGID capability on Linux. As a consequence, it would require great
care in writing and installing. For a start, the GID of the group passed in
the aforementioned setgroups(2) system call &lt;em&gt;must not&lt;/em&gt; be something that
unprivileged users can choose, and that group should have no more powers
than being able to access /usr/games in a read-only manner. Additionally,
the launcher program should be installed on a partition where unprivileged
users have absolutely no write access, otherwise they could make a hard link
to the executable that would defeat the purpose of a security update (this
is a general issue to consider whenever using setuid or setgid executables
or, as described here, programs with special capabilities&amp;mdash;in the specific
sense this word has for Linux, as documented in the capabilities(7) manual
page). For all these reasons, and because of its obvious side effects (such
as not being able to execute fortune(6) normally, if installed in
/usr/games), this kind of setup should only be adopted if really necessary
(not to mention the fact that it can be easily defeated; as announced in the
title, it is a hack!).</source>
          <target state="translated">사용하려면 위에서 설명한 런처 프로그램은 Linux에서 CAP_SETGID 기능이 필요합니다. 결과적으로 작성 및 설치에 많은주의가 필요합니다. 처음에는, 그룹의 GID는 상기 setgroups을 전달 (2) 시스템 호출 &lt;em&gt;되지해야합니다&lt;/em&gt;권한이없는 사용자가 선택할 수 있고 그 그룹은 읽기 전용 방식으로 / usr / games에 액세스 할 수있는 것보다 더 많은 권한을 가져서는 안됩니다. 또한 실행 프로그램은 권한이없는 사용자에게 쓰기 권한이 전혀없는 파티션에 설치해야합니다. 그렇지 않으면 보안 업데이트의 목적을 무력화하는 실행 파일에 대한 하드 링크를 만들 수 있습니다 (이것은 setuid를 사용할 때마다 고려해야 할 일반적인 문제입니다. 또는 setgid 실행 파일 또는 여기에 설명 된대로 특별한 기능을 가진 프로그램 (capabilities (7) 매뉴얼 페이지에 설명 된대로이 단어가 Linux에 대해 갖는 특정 의미에서). 이러한 모든 이유와 명백한 부작용 (예 : / usr / games에 설치된 경우 fortune (6)을 정상적으로 실행할 수 없음)으로 인해이런 종류의 설정은 정말 필요한 경우에만 채택해야합니다 (쉽게 패배 할 수 있다는 사실은 말할 것도없고 제목에서 발표 한대로 해킹입니다!).</target>
        </trans-unit>
        <trans-unit id="fbc41e061314de114e40f81514ee23bd859c111a" translate="yes" xml:space="preserve">
          <source>Version 0.10.0 also introduced the</source>
          <target state="translated">버전 0.10.0은 또한</target>
        </trans-unit>
        <trans-unit id="318bae7670c0efadc90cd642b101b2b0de0913bc" translate="yes" xml:space="preserve">
          <source>Version 0.11.1 of flo-check-homework has been tested on Linux with
Python&amp;nbsp;3.5.1, Qt&amp;nbsp;4.8.7 and PyQt&amp;nbsp;4.11.4. It should work on any platform with
the aforementioned dependencies installed, but trivial bugs are likely to pop
up on non-Unix platforms as no test whatsoever has been done on them. Please
report.</source>
          <target state="translated">flo-check-homework 0.11.1 버전은 Python 3.5.1, Qt 4.8.7 및 PyQt 4.11.4가 설치된 Linux에서 테스트되었습니다. 앞서 언급 한 종속성이 설치된 모든 플랫폼에서 작동해야하지만, 유닉스가 아닌 플랫폼에서는 테스트가 수행되지 않았기 때문에 사소한 버그가 나타날 가능성이 있습니다. 신고 해주세요.</target>
        </trans-unit>
        <trans-unit id="486025537dad6adaf0f34522902145eaf2a7135c" translate="yes" xml:space="preserve">
          <source>When flo-check-homework is started, it can operate in two distinct modes:
either the graphical interface is displayed, or the program specified on the
command line is automatically run. The former is called &lt;em&gt;interactive mode&lt;/em&gt; and
the latter &lt;em&gt;transparent mode&lt;/em&gt;. Interactive mode is chosen if, and only if:</source>
          <target state="translated">flo-check-homework가 시작되면 그래픽 인터페이스가 표시되거나 명령 줄에 지정된 프로그램이 자동으로 실행되는 두 가지 모드로 작동 할 수 있습니다. 전자는 &lt;em&gt;대화 형 모드&lt;/em&gt; 라고 하고 후자는 &lt;em&gt;투명 모드&lt;/em&gt; 라고 &lt;em&gt;합니다&lt;/em&gt; . 대화 형 모드는 다음과 같은 경우에만 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="ecda100d7a6ddf2e0f8b363e19da0fc751a72513" translate="yes" xml:space="preserve">
          <source>configuration
file parameter in the</source>
          <target state="translated">구성 파일 매개 변수</target>
        </trans-unit>
        <trans-unit id="8fdbf7390fc60fdb3e3f668eb1e8c566a85ee022" translate="yes" xml:space="preserve">
          <source>cycles through all items but does not yield an item that has already been
seen in the current session (unless all items have been seen)</source>
          <target state="translated">모든 항목을 순환하지만 현재 세션에서 이미 본 항목을 생성하지 않습니다 (모든 항목이 표시되지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="21ea12c431c8259ca7275d9da727ac407e2857d5" translate="yes" xml:space="preserve">
          <source>flo-check-homework is maintained in a &lt;a href=&quot;https://github.com/frougon/flo-check-homework&quot;&gt;Git repository&lt;/a&gt; that can be cloned with:</source>
          <target state="translated">flo-check-homework는 다음을 사용하여 복제 할 수 있는 &lt;a href=&quot;https://github.com/frougon/flo-check-homework&quot;&gt;Git 저장소에&lt;/a&gt; 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="15c5c3b38ffb24b00ac2eb8e071b2d777826d46e" translate="yes" xml:space="preserve">
          <source>flo-check-homework presents one or more questionnaires to the user. Once all
questions have been answered, and if the score exceeds a predefined threshold,
a special button is enabled. When pressed, this button launches the program
(with optional arguments) that was specified on flo-check-homework&amp;rsquo;s command
line. For instance, the following command:</source>
          <target state="translated">flo-check-homework는 사용자에게 하나 이상의 설문지를 제공합니다. 모든 질문에 답하고 점수가 미리 정의 된 임계 값을 초과하면 특수 단추가 활성화됩니다. 이 버튼을 누르면 flo-check-homework의 명령 줄에 지정된 프로그램 (옵션 인수 포함)이 시작됩니다. 예를 들어, 다음 명령 :</target>
        </trans-unit>
        <trans-unit id="abbc3782c92a22ff4cf2dff5e70febeb0f376869" translate="yes" xml:space="preserve">
          <source>flo-check-homework-decorate-games has options to customize the paths such as
/usr/games and /usr/local/games, as well as options to choose which locale to
use when a launcher script starts flo-check-homework, and when
flo-check-homework runs a game. See the output of
&amp;lsquo;flo-check-homework-decorate-games &amp;ndash;help&amp;rsquo; for more information.</source>
          <target state="translated">flo-check-homework-decorate-games에는 / usr / games 및 / usr / local / games와 같은 경로를 사용자 정의하는 옵션과 실행기 스크립트가 flo-check-homework를 시작할 때 사용할 로케일을 선택하는 옵션이 있습니다. 그리고 flo-check-homework가 게임을 할 때. 자세한 내용은 'flo-check-homework-decorate-games &amp;ndash;help'출력을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="6c34eedb49cc89c966d5c2826f17f97c28a0047a" translate="yes" xml:space="preserve">
          <source>option has been given or;</source>
          <target state="translated">옵션이 주어 졌거나;</target>
        </trans-unit>
        <trans-unit id="035055fb5e044a5edb8224d63f50f407ac595779" translate="yes" xml:space="preserve">
          <source>or;</source>
          <target state="translated">또는;</target>
        </trans-unit>
        <trans-unit id="9c35afdee62e0ac638c479b971dd4e9291491d3a" translate="yes" xml:space="preserve">
          <source>section of the
configuration file is equal to</source>
          <target state="translated">구성 파일의 섹션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d89c73a62a8a33e33a5e28c5794a4c5ffcaf684b" translate="yes" xml:space="preserve">
          <source>section, defaulting to 1. If set to 0,
quitting is also forbidden as long as the program specified on the command
line (&amp;ldquo;desired program&amp;rdquo;) is running&amp;mdash;assuming it was started from
flo-check-homework. This can be useful with kids misusing a super magic
token to run dozens of games simultaneously.</source>
          <target state="translated">섹션, 기본값은 1입니다. 0으로 설정하면 명령 줄에 지정된 프로그램 ( &quot;원하는 프로그램&quot;)이 실행 중이면 종료도 금지됩니다 (flo-check-homework에서 시작되었다고 가정). 이것은 아이들이 슈퍼 매직 토큰을 오용하여 동시에 수십 개의 게임을 실행하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d8d13e8df1a87bdeac8f3285a54d4ed93447d38" translate="yes" xml:space="preserve">
          <source>setting in the</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="93792e8ea52eb13ae554efa3d25fc71ca840fae0" translate="yes" xml:space="preserve">
          <source>starts with items that have been incorrectly answered in previous sessions</source>
          <target state="translated">이전 세션에서 오답 한 항목으로 시작</target>
        </trans-unit>
        <trans-unit id="bbccdf2efb33b52e6c9d0a14dd70b2d415fbea6e" translate="yes" xml:space="preserve">
          <source>the</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="a34602e05906320153590326dff5a3194012161b" translate="yes" xml:space="preserve">
          <source>the .qm files (used for translations) that are relevant to your locale
settings must be generated from the corresponding .ts source files; this
can be done automatically with the Makefile shipped in the top-level
directory of the Git repository, provided you have GNU Make (run &amp;lsquo;make&amp;rsquo;).</source>
          <target state="translated">로케일 설정과 관련된 .qm 파일 (번역에 사용됨)은 해당 .ts 소스 파일에서 생성되어야합니다. GNU Make ( 'make'실행)가있는 경우 Git 저장소의 최상위 디렉토리에 제공된 Makefile을 사용하여 자동으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df0f736415947135da47f1e6a701d071ca19def3" translate="yes" xml:space="preserve">
          <source>the flo_check_homework/images directory tree containing icons and &amp;ldquo;reward
images&amp;rdquo; must be copied from a release tarball, otherwise there will be an
error when all questions have been answered and the program tries to show
an image;</source>
          <target state="translated">아이콘과&amp;ldquo;보상 이미지&amp;rdquo;를 포함하는 flo_check_homework / images 디렉토리 트리는 릴리스 tarball에서 복사해야합니다. 그렇지 않으면 모든 질문에 답하고 프로그램이 이미지를 표시하려고 할 때 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cfceded82883405c2241fa5de5c43ac2122cf721" translate="yes" xml:space="preserve">
          <source>the user has no valid super magic token.</source>
          <target state="translated">사용자에게 유효한 슈퍼 매직 토큰이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a2f3a53ad672bb407ba64ebb77a56e551f73b61b" translate="yes" xml:space="preserve">
          <source>where each arrow indicates a different process. &amp;ldquo;some options&amp;rdquo; typically
contains -p (&amp;ndash;pretty-name) to tell flo-check-homework the &amp;ldquo;pretty name&amp;rdquo; of
program &amp;lsquo;foo&amp;rsquo;, for displaying in the graphical user interface.</source>
          <target state="translated">각 화살표는 다른 프로세스를 나타냅니다. &quot;일부 옵션&quot;에는 일반적으로 그래픽 사용자 인터페이스에 표시하기위한 프로그램 'foo'의 &quot;예쁜 이름&quot;을 flo-check-homework에 알리기 위해 -p (&amp;ndash;pretty-name)가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6df9ca3870af8ed36f477739e3fc08da5c815836" translate="yes" xml:space="preserve">
          <source>will start flo-check-homework without any option and allow the pupil to run,
if the questionnaires receive good enough answers, the program &amp;lsquo;prog&amp;rsquo; with 3
arguments: &amp;lsquo;arg1&amp;rsquo;, &amp;lsquo;arg2&amp;rsquo; and &amp;lsquo;arg3&amp;rsquo;. To see all available command line
options, you may run:</source>
          <target state="translated">선택 사항없이 flo-check-homework를 시작하고, 질문지가 충분히 좋은 답을 받으면 'arg1', 'arg2', 'arg3'의 3 가지 인수가있는 'prog'프로그램을 실행하도록합니다. 사용 가능한 모든 명령 줄 옵션을 보려면 다음을 실행할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
