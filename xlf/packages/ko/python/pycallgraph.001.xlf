<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pycallgraph/">
    <body>
      <group id="pycallgraph">
        <trans-unit id="20b1c8be7ea8d0795cfd8e57f9513da1d0dddebb" translate="yes" xml:space="preserve">
          <source>A simple use of the API is:</source>
          <target state="translated">API의 간단한 사용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7cae0de4d9e45cdee81ef599935c3e7f86435fc2" translate="yes" xml:space="preserve">
          <source>Click on the images below to see a larger version and the source code that generated them.</source>
          <target state="translated">아래 이미지를 클릭하면 더 큰 버전과이를 생성 한 소스 코드를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61fe4c3a88349b54123eb42b61cfac99c165fa57" translate="yes" xml:space="preserve">
          <source>Customisable colors. You can programatically set the colors based on number of calls, time taken, memory usage, etc.</source>
          <target state="translated">사용자 정의 가능한 색상. 호출 횟수, 소요 시간, 메모리 사용량 등에 따라 프로그래밍 방식으로 색상을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="8d2f34badaf463772892fb8fb1c5883d4d617d71" translate="yes" xml:space="preserve">
          <source>Easily extendable to create your own output formats.</source>
          <target state="translated">자신 만의 출력 형식을 만들기 위해 쉽게 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d6e0561f9e24a82dfcd6ed1a66901d60298db11" translate="yes" xml:space="preserve">
          <source>Execute pycallgraph from the command line or import it in your code.</source>
          <target state="translated">명령 줄에서 pycallgraph를 실행하거나 코드에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="f9350c90561f751027414617d00b633509e1e96c" translate="yes" xml:space="preserve">
          <source>Feel free to browse the &lt;a href=&quot;http://pycallgraph.slowchop.com/en/master/&quot;&gt;documentation of pycallgraph&lt;/a&gt; for the &lt;a href=&quot;http://pycallgraph.slowchop.com/en/master/guide/index.html&quot;&gt;usage guide&lt;/a&gt; and &lt;a href=&quot;http://pycallgraph.slowchop.com/en/master/api/api.html&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://pycallgraph.slowchop.com/en/master/guide/index.html&quot;&gt;사용 가이드&lt;/a&gt; 및 &lt;a href=&quot;http://pycallgraph.slowchop.com/en/master/api/api.html&quot;&gt;API 참조에&lt;/a&gt; 대한 &lt;a href=&quot;http://pycallgraph.slowchop.com/en/master/&quot;&gt;pycallgraph 문서를&lt;/a&gt; 자유롭게 찾아보세요 .</target>
        </trans-unit>
        <trans-unit id="52ab363c292e6044e7ca878f395abe8e245363f5" translate="yes" xml:space="preserve">
          <source>Installation is easy as:</source>
          <target state="translated">다음과 같이 설치가 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="52e1ce8aa30421cf971a9b86ac5a1be2c87fcdc9" translate="yes" xml:space="preserve">
          <source>Modules can be visually grouped together.</source>
          <target state="translated">모듈은 시각적으로 함께 그룹화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cb0bee5478facc7715136ce6ca34b0fe11136cb" translate="yes" xml:space="preserve">
          <source>Project Status</source>
          <target state="translated">프로젝트 상태</target>
        </trans-unit>
        <trans-unit id="212ef7701fed6e5cbc79a48795ced2f6eea88547" translate="yes" xml:space="preserve">
          <source>Python Call Graph is a library and command line tool that visualises the flow of your Python application.  See http://pycallgraph.slowchop.com/ for more information.</source>
          <target state="translated">Python Call Graph는 Python 애플리케이션의 흐름을 시각화하는 라이브러리 및 명령 줄 도구입니다. 자세한 내용은 http://pycallgraph.slowchop.com/을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="597b6356e6cec2dc6c115de0a3154ffa0f393e1d" translate="yes" xml:space="preserve">
          <source>Screenshots</source>
          <target state="translated">스크린 샷</target>
        </trans-unit>
        <trans-unit id="a5c033a6aa08f5f7291195a30061b0a6c3fadf93" translate="yes" xml:space="preserve">
          <source>Static visualizations of the call graph using various tools such as Graphviz and Gephi.</source>
          <target state="translated">Graphviz 및 Gephi와 같은 다양한 도구를 사용하여 호출 그래프의 정적 시각화.</target>
        </trans-unit>
        <trans-unit id="0e01c18b91addfe584c390b4cbe13a11f2be92fa" translate="yes" xml:space="preserve">
          <source>Support for Python 2.7+ and Python 3.3+.</source>
          <target state="translated">Python 2.7+ 및 Python 3.3+ 지원.</target>
        </trans-unit>
        <trans-unit id="7395eab1ab167e3bb0bac1faca780a7063e8629d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/gak/pycallgraph/#python-call-graph&quot;&gt;project lives on GitHub&lt;/a&gt;, where you can &lt;a href=&quot;https://github.com/gak/pycallgraph/issues&quot;&gt;report issues&lt;/a&gt;, contribute to the project by &lt;a href=&quot;https://help.github.com/articles/fork-a-repo&quot;&gt;forking the project&lt;/a&gt; then creating a &lt;a href=&quot;https://help.github.com/articles/using-pull-requests&quot;&gt;pull request&lt;/a&gt;, or just &lt;a href=&quot;https://github.com/gak/pycallgraph/&quot;&gt;browse the source code&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gak/pycallgraph/#python-call-graph&quot;&gt;GitHub의에 프로젝트 생활&lt;/a&gt; 을 수행 할 수 있습니다, &lt;a href=&quot;https://github.com/gak/pycallgraph/issues&quot;&gt;문제를보고는&lt;/a&gt; ,하여 프로젝트에 기여하는 &lt;a href=&quot;https://help.github.com/articles/fork-a-repo&quot;&gt;프로젝트를 분기&lt;/a&gt; 후 생성 &lt;a href=&quot;https://help.github.com/articles/using-pull-requests&quot;&gt;풀 요청을&lt;/a&gt; , 아니면 그냥 &lt;a href=&quot;https://github.com/gak/pycallgraph/&quot;&gt;소스 코드를 검색&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="196e7b00961aaff90dbaf739757f0b6f07f02b62" translate="yes" xml:space="preserve">
          <source>The command-line method of running pycallgraph is:</source>
          <target state="translated">pycallgraph를 실행하는 명령 줄 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="759bb64402683b14818c20e903bf138489e175fb" translate="yes" xml:space="preserve">
          <source>The documentation needs some work stiil. Feel free to contribute :)</source>
          <target state="translated">문서에는 약간의 작업이 필요합니다. 자유롭게 기여하십시오 :)</target>
        </trans-unit>
        <trans-unit id="ea26db46c67895b220d95fc26ea83b7289ca5ce7" translate="yes" xml:space="preserve">
          <source>The following examples specify graphviz as the outputter, so it&amp;rsquo;s required to be installed. They will generate a file called &lt;strong&gt;pycallgraph.png&lt;/strong&gt;.</source>
          <target state="translated">다음 예제에서는 graphviz를 출력기로 지정하므로 설치해야합니다. &lt;strong&gt;pycallgraph.png&lt;/strong&gt; 라는 파일이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7891a95a5b60af2fa1514b98cd87a52ccfb8eb1" translate="yes" xml:space="preserve">
          <source>The latest version is &lt;strong&gt;1.0.1&lt;/strong&gt; which was released on 2013-09-17, and is a backwards incompatbile from the previous release.</source>
          <target state="translated">최신 버전은 2013-09-17에 릴리스 된 &lt;strong&gt;1.0.1&lt;/strong&gt; 이며 이전 릴리스와 역 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1bc116eb9175fb1dab228261ec6ffac1f0170a8f" translate="yes" xml:space="preserve">
          <source>Welcome! Python Call Graph is a &lt;a href=&quot;http://www.python.org&quot;&gt;Python&lt;/a&gt; module that creates &lt;a href=&quot;http://en.wikipedia.org/wiki/Call_graph&quot;&gt;call graph&lt;/a&gt; visualizations for Python applications.</source>
          <target state="translated">어서 오십시오! Python Call Graph는 Python 애플리케이션에 대한 &lt;a href=&quot;http://en.wikipedia.org/wiki/Call_graph&quot;&gt;호출 그래프&lt;/a&gt; 시각화를 생성 하는 &lt;a href=&quot;http://www.python.org&quot;&gt;Python&lt;/a&gt; 모듈입니다 .</target>
        </trans-unit>
        <trans-unit id="a83f5ac1dabc8a059bfd771d9a42093340add1c2" translate="yes" xml:space="preserve">
          <source>You can either use the &lt;a href=&quot;http://pycallgraph.slowchop.com/en/develop/guide/command_line_usage.html&quot;&gt;command-line interface&lt;/a&gt; for a quick visualization of your Python script, or the &lt;a href=&quot;http://pycallgraph.slowchop.com/en/develop/api/pycallgraph.html&quot;&gt;pycallgraph module&lt;/a&gt; for more fine-grained settings.</source>
          <target state="translated">Python 스크립트의 빠른 시각화를 위해 &lt;a href=&quot;http://pycallgraph.slowchop.com/en/develop/guide/command_line_usage.html&quot;&gt;명령 줄 인터페이스&lt;/a&gt; 를 사용 하거나 보다 세분화 된 설정을 위해 &lt;a href=&quot;http://pycallgraph.slowchop.com/en/develop/api/pycallgraph.html&quot;&gt;pycallgraph 모듈을&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
