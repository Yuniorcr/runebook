<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pycarddav/">
    <body>
      <group id="pycarddav">
        <trans-unit id="072e81d133fb0e8ee851c89d4e989aeeb0bcc2b2" translate="yes" xml:space="preserve">
          <source>(or rather: limitations)</source>
          <target state="translated">(또는 오히려 : 제한)</target>
        </trans-unit>
        <trans-unit id="4aa24d21797b6d799c751a4a47512ae2f601b765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; can add email addresses directly from mutt</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 mutt에서 직접 이메일 주소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9424bab0c30b17041cbd09262f9e540cb2902d3f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; can backup and import to/from .vcf files</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 .vcf 파일로 /에서 백업하고 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7831820375e8d3087baa90a34d032257be089da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; can import the sender&amp;rsquo;s address directly from mutt</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 mutt에서 직접 보낸 사람의 주소를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e48b2cf56b25e40cd6b7969cc52d79b4fae8e7fc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; consists of &lt;em&gt;pycardsyncer&lt;/em&gt;, a program for syncing your CardDAV
resource into a local database and of &lt;em&gt;pc_query&lt;/em&gt;, a program for querying the
local database. &lt;em&gt;pyCardDAV&lt;/em&gt; is some ugly &lt;a href=&quot;http://python.org/&quot;&gt;python&lt;/a&gt; code (actually, it&amp;rsquo;s not
&lt;em&gt;that&lt;/em&gt; bad anymore&amp;hellip;) that holds together &lt;a href=&quot;http://vobject.skyhouseconsulting.com/&quot;&gt;vobject&lt;/a&gt;, &lt;a href=&quot;http://lxml.de/&quot;&gt;lxml&lt;/a&gt;, &lt;a href=&quot;http://python-requests.org&quot;&gt;requests&lt;/a&gt; and
&lt;a href=&quot;http://code.google.com/p/pysqlite/&quot;&gt;pysqlite&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;pyCardDAV는&lt;/em&gt; 구성 &lt;em&gt;pycardsyncer&lt;/em&gt; , 로컬 데이터베이스로 그리고 당신의 CardDAV를 리소스를 동기화하는 프로그램 &lt;em&gt;pc_query&lt;/em&gt; , 로컬 데이터베이스를 조회하는 프로그램. &lt;em&gt;pyCardDAV는&lt;/em&gt; 못생긴입니다 &lt;a href=&quot;http://python.org/&quot;&gt;파이썬&lt;/a&gt; 코드 (실제로는 그렇지 않은 &lt;em&gt;것을&lt;/em&gt; 함께 보유하고 나쁜 더 이상 ...) &lt;a href=&quot;http://vobject.skyhouseconsulting.com/&quot;&gt;vobject&lt;/a&gt; , &lt;a href=&quot;http://lxml.de/&quot;&gt;LXML&lt;/a&gt; , &lt;a href=&quot;http://python-requests.org&quot;&gt;요청&lt;/a&gt; 및 &lt;a href=&quot;http://code.google.com/p/pysqlite/&quot;&gt;pysqlite을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b711303c88cc61fd97855c6c02f2ba99b021c59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; consists of three scripts, &lt;em&gt;pycardsyncer&lt;/em&gt; which is used to sync the
local database with the server, &lt;em&gt;pc_query&lt;/em&gt; to interact with the local database
and &lt;em&gt;pycard-import&lt;/em&gt; to import email addresses from mutt.</source>
          <target state="translated">&lt;em&gt;pyCardDAV는&lt;/em&gt; 세 개의 스크립트로 구성 &lt;em&gt;pycardsyncer&lt;/em&gt; 서버와 로컬 데이터베이스를 동기화하는 데 사용됩니다, &lt;em&gt;pc_query는&lt;/em&gt; 로컬 데이터베이스와 상호 작용하는 &lt;em&gt;pycard 가져 오기&lt;/em&gt; 똥개에서 수입 이메일 주소로.</target>
        </trans-unit>
        <trans-unit id="04562a683ce09a29a6f5f48c84b9fae734b043e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; has so far been successfully tested on recent versions of FreeBSD,
NetBSD, Debian and Ubuntu with python 2.6 and 2.7 and against davical 0.9.9.4 -
1.0.1 (later versions should be ok, too, but 0.9.9.3 and earlier don&amp;rsquo;t seem
to work), owncloud and sabredav.</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 지금까지 최신 버전의 FreeBSD, NetBSD, Debian 및 Ubuntu에서 python 2.6 및 2.7과 davical 0.9.9.4-1.0.1에 대해 성공적으로 테스트되었습니다 (이후 버전도 괜찮지 만 0.9.9.3 및 이전 버전은 그렇지 않습니다. 작동하는 것 같음), owncloud 및 sabredav.</target>
        </trans-unit>
        <trans-unit id="4829d80db5c9444dd242a22f4923e6810432fb6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; is a simple to use &lt;a href=&quot;http://en.wikipedia.org/wiki/CardDAV&quot;&gt;CardDAV&lt;/a&gt; CLI client. It has built in support for
mutt&amp;rsquo;s &lt;em&gt;query_command&lt;/em&gt; but also works very well solo (and with other MUAs).</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 사용이 간편한 &lt;a href=&quot;http://en.wikipedia.org/wiki/CardDAV&quot;&gt;CardDAV&lt;/a&gt; CLI 클라이언트입니다. 그것은 mutt의 &lt;em&gt;query_command에&lt;/em&gt; 대한 지원을 내장하고 있지만 솔로 (그리고 다른 MUA와 함께)도 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b94f5fcef40f26b280a2b0ff5b3368306af8da06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; is not python 3 compatible yet</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 아직 python 3과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5998d232c1cbc35f925e0756aad848e09d667d43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; is only tested against davical, owncloud and sabredav</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 davical, owncloud 및 sabredav에 대해서만 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="8f14593a8ed6bba52b16cffb8bd66f10a253feae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; is released under the Expat/MIT License:</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 Expat / MIT 라이선스에 따라 출시되었습니다.</target>
        </trans-unit>
        <trans-unit id="c4e25b32c2771ddd09df35a41893bed1f53944bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyCardDAV&lt;/em&gt; only understands VCard 3.0</source>
          <target state="translated">&lt;em&gt;pyCardDAV&lt;/em&gt; 는 VCard 3.0 만 이해합니다.</target>
        </trans-unit>
        <trans-unit id="2b2b50758cf0f99f31f3e09730ce0909a2a6e9a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pycarddav&lt;/em&gt; can be configured to use different CardDAV accounts, see the example
config for details. An account can be specified with &lt;em&gt;-a account_name&lt;/em&gt; with all
three utilies. If no account is chosen all searching and syncing actions will
use all configured accounts, while on adding cards the first configured account
will be used.</source>
          <target state="translated">&lt;em&gt;pycarddav&lt;/em&gt; 는 다른 CardDAV 계정을 사용하도록 구성 할 수 있습니다. 자세한 내용은 구성 예제를 참조하십시오. 세 가지 유틸리티가 모두 포함 된 &lt;em&gt;-a account_name을&lt;/em&gt; 사용 하여 계정을 지정할 수 있습니다 . 계정을 선택하지 않으면 모든 검색 및 동기화 작업이 구성된 모든 계정을 사용하고 카드를 추가 할 때 처음 구성된 계정이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0ab98b729bf65a3c74e37e4e1898d5b6455012ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pycarddav&lt;/em&gt; supports &lt;a href=&quot;https://pypi.python.org/pypi/keyring&quot;&gt;keyring&lt;/a&gt;, (version &amp;gt;=3.0). To use it, you need to add a
password to the keyring via:</source>
          <target state="translated">&lt;em&gt;pycarddav&lt;/em&gt; 는 &lt;a href=&quot;https://pypi.python.org/pypi/keyring&quot;&gt;키링을&lt;/a&gt; 지원합니다 (버전&amp;gt; = 3.0). 사용하려면 다음을 통해 키링에 비밀번호를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="af59a432d1ed56b044b2213ee22d7747e1cb5a40" translate="yes" xml:space="preserve">
          <source>A CardDAV based address book tool</source>
          <target state="translated">CardDAV 기반 주소록 도구</target>
        </trans-unit>
        <trans-unit id="ecfe29ef8fcfc7c6552fb9793fd0884a7b9c0a8b" translate="yes" xml:space="preserve">
          <source>Additional Information</source>
          <target state="translated">추가 정보</target>
        </trans-unit>
        <trans-unit id="6fe0b118a45291f27afd18efd782d8ae915a28fc" translate="yes" xml:space="preserve">
          <source>Also, you should be able to use &lt;em&gt;pyCardDAV&lt;/em&gt;&amp;rsquo;s CardDAV implementation for other
projects. See the &lt;em&gt;CardDAV&lt;/em&gt; class in &lt;em&gt;pycarddav/carddav.py&lt;/em&gt;.</source>
          <target state="translated">또한 다른 프로젝트에 &lt;em&gt;pyCardDAV&lt;/em&gt; 의 CardDAV 구현 을 사용할 수 있어야합니다 . &lt;em&gt;pycarddav / carddav.py&lt;/em&gt; 의 &lt;em&gt;CardDAV&lt;/em&gt; 클래스를 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="759064f23c6aa22563c6c8e9baaaf99ecd926f5f" translate="yes" xml:space="preserve">
          <source>By default &lt;em&gt;pyCardDAV&lt;/em&gt; only prints the names, email addresses and telephone
numbers of contacts matching the search string, to see all vCard properties use
the &amp;ldquo;-A&amp;rdquo; option.</source>
          <target state="translated">기본적으로 &lt;em&gt;pyCardDAV&lt;/em&gt; 는 검색 문자열과 일치하는 연락처의 이름, 이메일 주소 및 전화 번호 만 인쇄합니다. 모든 vCard 속성은 &quot;-A&quot;옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="18f5e901871579e4412dcaa627c5192fedb5f220" translate="yes" xml:space="preserve">
          <source>Conflict Resolution</source>
          <target state="translated">갈등 해결</target>
        </trans-unit>
        <trans-unit id="0fd4ea5fdf8be3277fd632f40a312bcaecd69cc2" translate="yes" xml:space="preserve">
          <source>Copy and edit the supplied pycard.conf.sample file (default location is
~/.config/pycard/pycard.conf). If you don&amp;rsquo;t want to store the password in
clear text in the config file, &lt;em&gt;pyCardDAV&lt;/em&gt; will ask for it while syncing.</source>
          <target state="translated">제공된 pycard.conf.sample 파일 (기본 위치는 ~ / .config / pycard / pycard.conf)을 복사하고 편집합니다. 구성 파일에 일반 텍스트로 암호를 저장하지 않으려면 &lt;em&gt;pyCardDAV&lt;/em&gt; 가 동기화하는 동안 &lt;em&gt;암호&lt;/em&gt; 를 묻습니다.</target>
        </trans-unit>
        <trans-unit id="9d204dce0d291602339f87bf1d73420ed9ad99f2" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011-2014 Christian Geier and contributors</source>
          <target state="translated">Copyright (c) 2011-2014 Christian Geier 및 기고자</target>
        </trans-unit>
        <trans-unit id="b63a4867a1a1a94ba5ec636485113df89818cce6" translate="yes" xml:space="preserve">
          <source>Debian Wheezy Quickstart</source>
          <target state="translated">Debian Wheezy 빠른 시작</target>
        </trans-unit>
        <trans-unit id="df5718cc28129258a1cc8c4060c6acdbd38c3c08" translate="yes" xml:space="preserve">
          <source>Example from .muttrc:</source>
          <target state="translated">.muttrc의 예 :</target>
        </trans-unit>
        <trans-unit id="d8269b8688cffd6812915d39c326db4ac6d8e141" translate="yes" xml:space="preserve">
          <source>Execute pycardsyncer to sync your addresses to the local database. You can test
pc_query with:</source>
          <target state="translated">pycardsyncer를 실행하여 주소를 로컬 데이터베이스에 동기화합니다. 다음을 사용하여 pc_query를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">피드백</target>
        </trans-unit>
        <trans-unit id="30f81d264e9f9ccc27bacc8b2181972399687444" translate="yes" xml:space="preserve">
          <source>For now, VCard properties that have no value are not shown.</source>
          <target state="translated">지금은 값이없는 VCard 속성이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="276431aa70dd2bc8b45d68714585ccd25fd90bdc" translate="yes" xml:space="preserve">
          <source>For usage with mutt etc., &lt;em&gt;pyCardDAV&lt;/em&gt; can also print only email addresses in a
mutt friendly format (with the &amp;ldquo;-m&amp;rdquo; option). Edit your mutt configuration so
that query_command uses pc_query:</source>
          <target state="translated">mutt 등과 함께 사용하기 위해 &lt;em&gt;pyCardDAV&lt;/em&gt; 는 또한 mutt 친화적 인 형식 (&amp;ldquo;-m&amp;rdquo;옵션 사용)으로 이메일 주소 만 인쇄 할 수 있습니다. query_command가 pc_query를 사용하도록 mutt 구성을 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="8715dc61b31f1cae1561664ddd4ce6148aea7d93" translate="yes" xml:space="preserve">
          <source>If you use SSL to interact with your CardDAV Server (you probably should) and
you don&amp;rsquo;t have a certificate signed by a CA your OS Vendor trusts (like a
self-signed certificate or one signed by CAcert) you can set &lt;em&gt;verify&lt;/em&gt; to a path
to the CA&amp;rsquo;s root file (must be in pem format). If you don&amp;rsquo;t want any certificate
checking set &lt;em&gt;verify&lt;/em&gt; to &lt;em&gt;false&lt;/em&gt; to disable &lt;em&gt;any&lt;/em&gt; ssl certificate checking (this
is not recommended).</source>
          <target state="translated">SSL을 사용하여 CardDAV 서버와 상호 작용하고 (아마도 그래야 함) OS 공급 업체가 신뢰하는 CA에서 서명 한 인증서 (예 : 자체 서명 된 인증서 또는 CAcert에서 서명 한 인증서)가없는 경우 &lt;em&gt;확인&lt;/em&gt; 을 CA의 루트 파일 경로 (pem 형식이어야 함). 인증서 검사를 원하지 않는 경우 &lt;em&gt;verify&lt;/em&gt; 를 &lt;em&gt;false&lt;/em&gt; 로 설정 &lt;em&gt;하여&lt;/em&gt; SSL 인증서 검사 를 비활성화 &lt;em&gt;합니다&lt;/em&gt; (권장되지 않음).</target>
        </trans-unit>
        <trans-unit id="6f17ee7f1124448e140d8d8297bdbfca0abc539a" translate="yes" xml:space="preserve">
          <source>Import Addresses from Mutt</source>
          <target state="translated">Mutt에서 주소 가져 오기</target>
        </trans-unit>
        <trans-unit id="62edcc033c3da3b11017886ed6ed6563c751e1f9" translate="yes" xml:space="preserve">
          <source>In accordance with RFC 6352 all VCards that are imported or changed by pyCardDAV
will automatically get a random UID (if they haven&amp;rsquo;t one already), as some
CardDAV servers, e.g. Owncloud require these.</source>
          <target state="translated">RFC 6352에 따라 pyCardDAV에 의해 가져 오거나 변경된 모든 VCard는 자동으로 임의의 UID를받습니다 (아직없는 경우). 일부 CardDAV 서버 (예 : Owncloud)에서 필요하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="3e74c1471bb6c892671fc47b2188eef15b58ff34" translate="yes" xml:space="preserve">
          <source>In case of conflicting edits (local VCard changed while remote VCard also
changed), are &amp;ldquo;resolved&amp;rdquo; by pycarddav through overwriting the local VCard with
the remote one (meaning local edits are lost in this case). Syncing more
frequently can prevent this.</source>
          <target state="translated">편집 내용이 충돌하는 경우 (로컬 VCard가 변경되고 원격 VCard도 변경됨) 로컬 VCard를 원격 VCard로 덮어 써서 pycarddav에 의해 &quot;해결&quot;됩니다 (이 경우 로컬 편집 내용이 손실 됨). 더 자주 동기화하면이를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="fe6bdd3639c4ef0d50a8dbb357beeab1ead35430" translate="yes" xml:space="preserve">
          <source>Keyring support</source>
          <target state="translated">키링 지원</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="e4a1eb699c2a986238be52682c571b27b212fa8b" translate="yes" xml:space="preserve">
          <source>Make sure you have sqlite3 (normally available by default), vobject, lxml(&amp;gt;2),
requests (&amp;gt;0.10), urwid (&amp;gt;0.9) pyxdg, installed. Users of python 2.6 will also
need to install argparse.</source>
          <target state="translated">sqlite3 (일반적으로 기본적으로 사용 가능), vobject, lxml (&amp;gt; 2), 요청 (&amp;gt; 0.10), urwid (&amp;gt; 0.9) pyxdg가 설치되어 있는지 확인하십시오. 파이썬 2.6 사용자는 argparse도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4428df60996dd395af6c51238f43c71d4400a7fa" translate="yes" xml:space="preserve">
          <source>Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
&amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:</source>
          <target state="translated">사용, 복사, 수정, 병합 권한을 포함하되 이에 국한되지 않는 제한없이 소프트웨어를 처리 할 수있는 권한이이 소프트웨어 및 관련 문서 파일 (이하 &quot;소프트웨어&quot;)의 사본을 획득 한 모든 사람에게 무료로 부여됩니다. 다음 조건에 따라 소프트웨어 사본을, 게시, 배포, 재 라이센스 및 / 또는 판매하고 소프트웨어를 제공받은 사람이 그렇게하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="b6d14b050a26a3edbe90878a688bcddd352036a2" translate="yes" xml:space="preserve">
          <source>Please do provide feedback if &lt;em&gt;pyCardDAV&lt;/em&gt; works for you or even more importantly
if it doesn&amp;rsquo;t. You can reach me by email at pycarddav (at) lostpackets (dot) de , by
jabber/XMPP at geier (at) jabber (dot) lostpackets (dot) de or via &lt;a href=&quot;https://github.com/geier/pycarddav/&quot;&gt;github&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;pyCardDAV가&lt;/em&gt; 작동하는 경우 피드백을 제공 하고 그렇지 않은 경우 더욱 중요합니다. pycarddav (at) lostpackets (dot) de, jabber / XMPP at geier (at) jabber (dot) lostpackets (dot) de 또는 &lt;a href=&quot;https://github.com/geier/pycarddav/&quot;&gt;github&lt;/a&gt; 를 통해 저에게 연락 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78bb8826fcc2504583e625386c238563e6207595" translate="yes" xml:space="preserve">
          <source>SSL</source>
          <target state="translated">SSL</target>
        </trans-unit>
        <trans-unit id="97c99e783b5c6995773458002b7ef53284d704b4" translate="yes" xml:space="preserve">
          <source>THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</source>
          <target state="translated">소프트웨어는 상품성, 특정 목적에의 적합성 및 비 침해에 대한 보증을 포함하되 이에 국한되지 않는 어떠한 종류의 명시 적 또는 묵시적 보증없이 &quot;있는 그대로&quot;제공됩니다. 어떠한 경우에도 작성자 또는 저작권 보유자는 계약, 불법 행위 또는 기타 방식으로 소프트웨어 또는 소프트웨어의 사용 또는 기타 거래와 관련하여 발생하는 모든 청구, 손해 또는 기타 책임에 대해 책임을지지 않습니다. 소프트웨어.</target>
        </trans-unit>
        <trans-unit id="abf94dbab29db68325894cd60a65f3c2a1fc56fa" translate="yes" xml:space="preserve">
          <source>The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.</source>
          <target state="translated">상기 저작권 고지 및이 허가 고지는 소프트웨어의 모든 사본 또는 상당 부분에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c0a4b26e5c48396bcdc8990f2f9c4ad2c8470357" translate="yes" xml:space="preserve">
          <source>The current version features experimental write support. If you want to
test this, first make sure &lt;strong&gt;you have a backup of your data&lt;/strong&gt; (but please do
&lt;em&gt;NOT&lt;/em&gt; rely on &lt;em&gt;pc_query &amp;ndash;backup&lt;/em&gt; for this just yet), then you can put the
line:</source>
          <target state="translated">현재 버전은 실험적인 쓰기 지원을 제공합니다. 이를 테스트하려면 먼저 &lt;strong&gt;데이터 백업이&lt;/strong&gt; 있는지 확인한 &lt;strong&gt;다음&lt;/strong&gt; ( 아직 &lt;em&gt;pc_query &amp;ndash;backup&lt;/em&gt; 에 의존 하지 &lt;em&gt;마십시오&lt;/em&gt; ) 다음 줄을 입력 할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="689844ab5e6fbb12250a1fde494433eafcb6868b" translate="yes" xml:space="preserve">
          <source>You can also import, delete or backup single cards (backup also works for the
whole collection, but please don&amp;rsquo;t rely on it just yet). See &lt;em&gt;pc_query &amp;ndash;help&lt;/em&gt;
for how to use these and for some more options.</source>
          <target state="translated">또한 단일 카드를 가져 오거나 삭제하거나 백업 할 수 있습니다 (백업은 전체 컬렉션에서도 작동하지만 아직 의존하지 마십시오). 사용 방법과 추가 옵션 은 &lt;em&gt;pc_query &amp;ndash;help&lt;/em&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="02a5aae0e3b6c6d0b0deb3675332fcaa9f05fac1" translate="yes" xml:space="preserve">
          <source>You can directly add sender addresses from mutt to &lt;em&gt;pyCardDAV&lt;/em&gt;, either adding
them to existing contacts or creating a new one. If write support is enabled,
they will be uploaded on the server during the next sync.</source>
          <target state="translated">발신자 주소를 mutt에서 &lt;em&gt;pyCardDAV로&lt;/em&gt; 직접 추가 하여 기존 연락처에 추가하거나 새 연락처를 만들 수 있습니다. 쓰기 지원이 활성화 된 경우 다음 동기화 중에 서버에 업로드됩니다.</target>
        </trans-unit>
        <trans-unit id="d45b457848d3401dc4f0f7dd7299b30a14df4eca" translate="yes" xml:space="preserve">
          <source>You can download &lt;em&gt;pyCardDAV&lt;/em&gt; either from the above download link or check it
out from git (at github). Then install &lt;em&gt;pyCardDAV&lt;/em&gt; by executing &lt;em&gt;python setup.py install&lt;/em&gt;.
If you feel more adventurous you can always the &lt;em&gt;develop&lt;/em&gt; branch on github, which
&lt;em&gt;should&lt;/em&gt; always be in a usable state. pyCardDAV is also available on &lt;a href=&quot;https://pypi.python.org/pypi/pyCardDAV/&quot;&gt;pypi&lt;/a&gt; and can
be installed via pip install pycarddav or easy_install pycarddav.</source>
          <target state="translated">당신은 다운로드 할 수 있습니다 &lt;em&gt;pyCardDAV을&lt;/em&gt; 위의 다운로드 링크에서 하나 또는 (GitHub의에서) 자식에서 체크 아웃. 그런 다음 &lt;em&gt;python setup.py install&lt;/em&gt; 을 실행 하여 &lt;em&gt;pyCardDAV&lt;/em&gt; 를 &lt;em&gt;설치&lt;/em&gt; 합니다. 더 모험심을 느낀다면 항상 github 에서 &lt;em&gt;개발&lt;/em&gt; 브랜치를 사용할 수 있으며, 항상 사용 가능한 상태 &lt;em&gt;여야합니다&lt;/em&gt; . pyCardDAV는 &lt;a href=&quot;https://pypi.python.org/pypi/pyCardDAV/&quot;&gt;pypi에서도&lt;/a&gt; 사용할 수 있으며 pip install pycarddav 또는 easy_install pycarddav를 통해 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba5d7cf46a73e9ccf83e435e7bea055f9f05f426" translate="yes" xml:space="preserve">
          <source>apt-get install python-requests python-vobject python-pytest python-urwid python-lxml python-pyxdg
sudo python setup.py install
mkdir -p ~/.config/pycard
chmod 700 ~/.config/pycard
cp pycard.conf.sample ~/.config/pycard/pycard.conf</source>
          <target state="translated">apt-get install python-requests python-vobject python-pytest python-urwid python-lxml python-pyxdg sudo python setup.py install mkdir -p ~ / .config / pycard chmod 700 ~ / .config / pycard cp pycard.conf. ~ / .config / pycard / pycard.conf 샘플</target>
        </trans-unit>
        <trans-unit id="eed9be1a311ed68ece803427218c6a7e89bd6a74" translate="yes" xml:space="preserve">
          <source>in your config file (needs to be put into each &lt;em&gt;Account&lt;/em&gt; section you want to
enable write support for).</source>
          <target state="translated">구성 파일에서 ( 쓰기 지원을 활성화하려는 각 &lt;em&gt;계정&lt;/em&gt; 섹션에 넣어야 함 ).</target>
        </trans-unit>
        <trans-unit id="5321ceff6b33bf7e0c900f23c4d046f862c3fc32" translate="yes" xml:space="preserve">
          <source>where $account is the name of an account as configured in your configuration
file and $username is the corresponding username (and then have no password
configured for that account). For more details on configuring keyring have a
look at its &lt;a href=&quot;https://pypi.python.org/pypi/keyring&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">여기서 $ account는 구성 파일에 구성된 계정의 이름이고 $ username은 해당 사용자 이름입니다 (그러면 해당 계정에 대해 구성된 암호가 없음). 키링 구성에 대한 자세한 내용은 &lt;a href=&quot;https://pypi.python.org/pypi/keyring&quot;&gt;설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
