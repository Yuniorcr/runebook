<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/hgtools/">
    <body>
      <group id="hgtools">
        <trans-unit id="b61cc2376d4620a532af9b88468d873bf4f22f9c" translate="yes" xml:space="preserve">
          <source>) will only prevent you from getting
bug fixes. Only specify an upper bound if you require support for older
versions of Python.</source>
          <target state="translated">)는 버그 수정을 막을뿐입니다. 이전 버전의 Python에 대한 지원이 필요한 경우에만 상한을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ac2c20d90a3333d40ac118dacd1a5ac07f9d7fd9" translate="yes" xml:space="preserve">
          <source>, set it to a non-empty dictionary with
one or more of the following parameters:</source>
          <target state="translated">, 다음 매개 변수 중 하나 이상을 사용하여 비어 있지 않은 사전으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c6ba5655483872bbd7c0997c86a25f87c73707f6" translate="yes" xml:space="preserve">
          <source>. An
in-process RepoManager for Mercurial exists but has been disabled due to
issues that arise when run in certain environments (namely setuptools
sandboxing).</source>
          <target state="translated">. In-process RepoManager for Mercurial이 존재하지만 특정 환경에서 실행할 때 발생하는 문제 (즉, setuptools 샌드 박싱)로 인해 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="4d0a658fc0562a11539101c81d8133d9357d0a79" translate="yes" xml:space="preserve">
          <source>:
A Python function with the following signature:</source>
          <target state="translated">: 다음 서명이있는 Python 함수 :</target>
        </trans-unit>
        <trans-unit id="92781ec5c0a74731a752705e3530aa5f15d6f999" translate="yes" xml:space="preserve">
          <source>:
A string indicating the default version increment for the project.
By default, this value is &amp;lsquo;0.1&amp;rsquo;, meaning hgtools will use the version
&amp;lsquo;1.1dev&amp;rsquo; for builds following the 1.0 release and &amp;lsquo;1.10dev&amp;rsquo; for builds
following a 1.9.3 release. Set this value to &amp;lsquo;1.0&amp;rsquo; or &amp;lsquo;0.0.1&amp;rsquo; for the
current tree to help hgtools guess the target version.</source>
          <target state="translated">: 프로젝트의 기본 버전 증분을 나타내는 문자열입니다. 기본적으로이 값은 '0.1'입니다. 즉, hgtools는 1.0 릴리스 이후 빌드에 '1.1dev'버전을 사용하고 1.9.3 릴리스 이후 빌드에 '1.10dev'버전을 사용합니다. hgtools가 대상 버전을 추측 할 수 있도록 현재 트리에 대해이 값을 '1.0'또는 '0.0.1'로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d363846f311f88ebc59eb8bbadd0475a03b0e99d" translate="yes" xml:space="preserve">
          <source>A distutils hook has been created to hack setuptools to use this version
information automatically. To use this functionality, just use the</source>
          <target state="translated">이 버전 정보를 자동으로 사용하기 위해 setuptools를 해킹하기 위해 distutils 후크가 생성되었습니다. 이 기능을 사용하려면</target>
        </trans-unit>
        <trans-unit id="81815d4f34d3921772adc0172f04ad9dd1e572a9" translate="yes" xml:space="preserve">
          <source>Auto Version Numbering</source>
          <target state="translated">자동 버전 번호 지정</target>
        </trans-unit>
        <trans-unit id="e2a9616834d880a07d1efbea6246653ed597e99f" translate="yes" xml:space="preserve">
          <source>Classes and setuptools plugin for Mercurial and Git repositories</source>
          <target state="translated">Mercurial 및 Git 리포지토리 용 클래스 및 설정 도구 플러그인</target>
        </trans-unit>
        <trans-unit id="84f7e9505916512510fce551fa69ebcb5af24043" translate="yes" xml:space="preserve">
          <source>For example, if the repo contains the tags 0.1, 0.2, and 0.3 and the
repo is not on any of those tags, get_current_version will return
&amp;lsquo;0.3.1dev&amp;rsquo; and get_current_version(increment=&amp;rsquo;0.1&amp;rsquo;) will return
&amp;lsquo;0.4dev&amp;rsquo;.</source>
          <target state="translated">예를 들어, 리포지토리에 0.1, 0.2, 0.3 태그가 포함되어 있고 리포지토리가 해당 태그에없는 경우 get_current_version은 '0.3.1dev'를 반환하고 get_current_version (increment = '0.1')은 '0.4dev'를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="91871abfa62ca87bdee8debb581524939dc6e1ab" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple example of a setup.py that uses hgtools:</source>
          <target state="translated">다음은 hgtools를 사용하는 setup.py의 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="d78393d5efaedc1e591c4407ac13f4ccd794be08" translate="yes" xml:space="preserve">
          <source>If the value supplied to use_vcs_version resolves to True, hgtools will
use the tagged version to determine the version of the
package (based on get_current_version). If an sdist is created, hgtools
will store the calculated version in the tag_build of the setup.cfg and
will use that version when deploying remotely. Therefore, if you are
using auto-versioning, you should not use setuptools tags explicitly.</source>
          <target state="translated">use_vcs_version에 제공된 값이 True로 확인되면 hgtools는 태그가 지정된 버전을 사용하여 패키지 버전을 확인합니다 (get_current_version 기반). sdist가 생성되면 hgtools는 계산 된 버전을 setup.cfg의 tag_build에 저장하고 원격으로 배포 할 때 해당 버전을 사용합니다. 따라서 자동 버전 관리를 사용하는 경우 setuptools 태그를 명시 적으로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="56d3afee85b316dd5f5255cfe960c09993039ce5" translate="yes" xml:space="preserve">
          <source>If you run the setup.py above, setuptools will automatically download
hgtools to the directory where the setup.py is located at (and won&amp;rsquo;t
install it anywhere else) to get all package data files from the
sourec code repository.</source>
          <target state="translated">위의 setup.py를 실행하면 setuptools는 sourec 코드 저장소에서 모든 패키지 데이터 파일을 가져 오기 위해 setup.py가있는 디렉토리에 hgtools를 자동으로 다운로드합니다 (다른 곳에 설치하지 않습니다).</target>
        </trans-unit>
        <trans-unit id="590cb1fa14a0c6202823ca228c90c778175af6c8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to pass keyword parameters to use_vcs_version to
tweak how it generates version numbers. To pass parameters, instead of
setting</source>
          <target state="translated">키워드 매개 변수를 use_vcs_version에 전달하여 버전 번호를 생성하는 방법을 조정할 수도 있습니다. 설정 대신 매개 변수를 전달하려면</target>
        </trans-unit>
        <trans-unit id="8875df48c18030126ef5ef5a6f5c93b23451fb9f" translate="yes" xml:space="preserve">
          <source>MANIFEST.in</source>
          <target state="translated">MANIFEST.in</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">노트</target>
        </trans-unit>
        <trans-unit id="2a11b23105469306f81c6e15df0d07d427e9978e" translate="yes" xml:space="preserve">
          <source>Released versions currently must conform to the StrictVersion in
distutils. Any tags that don&amp;rsquo;t match this scheme will be ignored.
Future releases may relax this restriction.</source>
          <target state="translated">릴리스 된 버전은 현재 distutils의 StrictVersion을 준수해야합니다. 이 체계와 일치하지 않는 모든 태그는 무시됩니다. 향후 릴리스에서는이 제한을 완화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b5751263628fdccff7f35b400c9b4eb688655ef" translate="yes" xml:space="preserve">
          <source>Repo tags are used to indicate released versions.</source>
          <target state="translated">Repo 태그는 릴리스 된 버전을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f91920649f40890a7ca725576d3053521dc2e8a9" translate="yes" xml:space="preserve">
          <source>See the jaraco.util setup.py for an example of this technique.</source>
          <target state="translated">이 기술의 예는 jaraco.util setup.py를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c688c76fe5480518dbbe4af59c96043c386f45f7" translate="yes" xml:space="preserve">
          <source>Tag names are specified as the version only (i.e. 0.1 and not
v0.1 or release-0.1)</source>
          <target state="translated">태그 이름은 버전으로 만 지정됩니다 (예 : v0.1 또는 릴리스 -0.1이 아닌 0.1).</target>
        </trans-unit>
        <trans-unit id="2b10ea0d9ad5955abe1b74f0a3591ecc20fc18e9" translate="yes" xml:space="preserve">
          <source>The classes provided by hgtools are designed to use subprocess invocation to
leverage the command-line interfaces of the VCS tools</source>
          <target state="translated">hgtools에서 제공하는 클래스는 VCS 도구의 명령 줄 인터페이스를 활용하기 위해 하위 프로세스 호출을 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="b631c1a700af8aefbc537c5208355ded4386de62" translate="yes" xml:space="preserve">
          <source>The first thing to note is the mgr does not yet provide a nice
interface for getting anything but the tags for a revision, so the
example digs into the underlying API to extract the ID. hgtools should
provide better support in the HGRepoManager classes in future releases.</source>
          <target state="translated">가장 먼저 주목해야 할 점은 mgr은 개정에 대한 태그 외에는 아무것도 가져 오는 데 좋은 인터페이스를 제공하지 않기 때문에 예제에서는 ID를 추출하기 위해 기본 API를 조사합니다. hgtools는 향후 릴리스에서 HGRepoManager 클래스에서 더 나은 지원을 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="d62d034d2084062e9012ef4856f4d360b38020c5" translate="yes" xml:space="preserve">
          <source>The setuptools feature</source>
          <target state="translated">setuptools 기능</target>
        </trans-unit>
        <trans-unit id="616d0acba8f71c8a3dd57d4b7c35c03a69d63d5a" translate="yes" xml:space="preserve">
          <source>Thereafter, you may use the RepoManager.get_current_version to
determine the version of your product. If the current revision is tagged
with a valid version, that version will be used. Otherwise, the tags in
the repo will be searched, the latest release will be found, and hgtools
will infer the upcoming release version.</source>
          <target state="translated">그 후 RepoManager.get_current_version을 사용하여 제품 버전을 확인할 수 있습니다. 현재 개정에 유효한 버전이 태그되어 있으면 해당 버전이 사용됩니다. 그렇지 않으면 리포지토리의 태그가 검색되고 최신 릴리스가 발견되며 hgtools는 다가오는 릴리스 버전을 유추합니다.</target>
        </trans-unit>
        <trans-unit id="bc75dc75eb02324d15c1b6838072ecd9e422855b" translate="yes" xml:space="preserve">
          <source>To use this feature, your project must follow the following assumptions:</source>
          <target state="translated">이 기능을 사용하려면 프로젝트가 다음 가정을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="afdbba727aca55d7b2a8a7db5ac3a5ff1cb8011a" translate="yes" xml:space="preserve">
          <source>Use this feature with caution. If you have not already read the
&lt;a href=&quot;http://packages.python.org/distribute/setuptools.html#specifying-your-project-s-version&quot;&gt;setuptools documentation on specifying a project version&lt;/a&gt;,
the author recommends you do read that.</source>
          <target state="translated">이 기능은주의해서 사용하십시오. &lt;a href=&quot;http://packages.python.org/distribute/setuptools.html#specifying-your-project-s-version&quot;&gt;프로젝트 버전 지정에&lt;/a&gt; 대한 setuptools 문서를 아직 읽지 않았다면 저자는 읽어 보길 권장합니다.</target>
        </trans-unit>
        <trans-unit id="3f9f81536afc0d8d427d8c12c75f277ccc3b9502" translate="yes" xml:space="preserve">
          <source>Use this option, for example, to include the commit hash or local
revision ID in the version:</source>
          <target state="translated">예를 들어이 옵션을 사용하여 버전에 커밋 해시 또는 로컬 개정 ID를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f9ade127815a5a850be91997c41302e9647508f4" translate="yes" xml:space="preserve">
          <source>Versioning Parameters</source>
          <target state="translated">버전 지정 매개 변수</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">경고</target>
        </trans-unit>
        <trans-unit id="3f50a04dacf116eaf1e1759066b3719ec7922560" translate="yes" xml:space="preserve">
          <source>With the 0.4 release, hgtools adds support for automatically generating
project version numbers from the repository in which the
project is developed.</source>
          <target state="translated">0.4 릴리스에서 hgtools는 프로젝트가 개발 된 저장소에서 프로젝트 버전 번호를 자동으로 생성하기위한 지원을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="10bab2af6c25a0cde01d46eef37804b9866ec419" translate="yes" xml:space="preserve">
          <source>You can read about the setuptools plugin provided by hgtools in the
&lt;a href=&quot;http://pythonhosted.org/setuptools/setuptools.html#adding-support-for-other-revision-control-systems&quot;&gt;setuptools documentation&lt;/a&gt;. It basically returns a list of files that are
under VCS when running the</source>
          <target state="translated">&lt;a href=&quot;http://pythonhosted.org/setuptools/setuptools.html#adding-support-for-other-revision-control-systems&quot;&gt;setuptools 문서&lt;/a&gt; 에서 hgtools가 제공하는 setuptools 플러그인에 대해 읽을 수 있습니다 . 기본적으로 실행할 때 VCS 아래에있는 파일 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cef52f1f64b265da06f17f5e14b4757d37ddebd5" translate="yes" xml:space="preserve">
          <source>You should not need to, and I recommend you don&amp;rsquo;t, install hgtools in
your site-packages directory. Let setuptools grab it on demand. Also,
try not to specify an upper bound for the requirement. Usually, simply
specifying &amp;lsquo;hgtools&amp;rsquo; will get the latest version, which is likely to
remain compatible (as a plugin) for the life of the project. Specifying
an upper bound (i.e.</source>
          <target state="translated">사이트 패키지 디렉토리에 hgtools를 설치할 필요가 없으며 설치하지 않는 것이 좋습니다. 필요에 따라 setuptools를 사용하세요. 또한 요구 사항에 대한 상한을 지정하지 마십시오. 일반적으로 'hgtools'를 지정하면 프로젝트 수명 동안 호환되는 (플러그인으로) 최신 버전을 얻을 수 있습니다. 상한 지정 (예 :</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="3a687c0ba24a0460c8ed4f8cf0eb706f8fc160fc" translate="yes" xml:space="preserve">
          <source>function, e.g. if
you create a source and binary distribution. It&amp;rsquo;s a simple yet effective way
of not having to define package data (non-Python files) manually in MANIFEST
templates (</source>
          <target state="translated">함수, 예를 들어 소스 및 이진 배포를 만드는 경우. MANIFEST 템플릿에서 패키지 데이터 (비 Python 파일)를 수동으로 정의 할 필요가없는 간단하면서도 효과적인 방법입니다 (</target>
        </trans-unit>
        <trans-unit id="46f1a0bd5592a2f9244ca321b129902a06b53e03" translate="yes" xml:space="preserve">
          <source>git</source>
          <target state="translated">자식</target>
        </trans-unit>
        <trans-unit id="b821103a5881b0d768dd9f697df6b0b7951110b2" translate="yes" xml:space="preserve">
          <source>hg</source>
          <target state="translated">HG</target>
        </trans-unit>
        <trans-unit id="dec92a8d7e06d720238bd2ba8e208cd516fbb6f7" translate="yes" xml:space="preserve">
          <source>hgtools builds on the setuptools_hg plugin for setuptools. hgtools
provides classes for inspecting and working with repositories in the
Mercurial and Git version control systems (VCS).</source>
          <target state="translated">hgtools는 setuptools 용 setuptools_hg 플러그인을 기반으로합니다. hgtools는 Mercurial 및 Git VCS (버전 제어 시스템)에서 리포지토리를 검사하고 작업하기위한 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0f94930a31fcfa405adb72f661137ad21465581f" translate="yes" xml:space="preserve">
          <source>hgtools is defunct. It has been largely superseded by the
&lt;a href=&quot;https://pypi.python.org/pypi/setuptools_scm&quot;&gt;setuptools_scm&lt;/a&gt;
project.</source>
          <target state="translated">hgtools는 작동하지 않습니다. 대부분 &lt;a href=&quot;https://pypi.python.org/pypi/setuptools_scm&quot;&gt;setuptools_scm&lt;/a&gt; 프로젝트로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1ca3f04bdde3abecbf0d1f53d11a21fc830b1011" translate="yes" xml:space="preserve">
          <source>hgtools provides a plugin for setuptools that enables setuptools to find
files managed by the VCS (currently only Mercurial support is implemented).</source>
          <target state="translated">hgtools는 setuptools가 VCS에서 관리하는 파일을 찾을 수 있도록하는 setuptools 용 플러그인을 제공합니다 (현재 Mercurial 지원 만 구현 됨).</target>
        </trans-unit>
        <trans-unit id="99dd74f43f26de87d1def9d6a0726530e987052d" translate="yes" xml:space="preserve">
          <source>hgtools will use this function instead of its default implementation
to customize the version number calculation. The</source>
          <target state="translated">hgtools는 기본 구현 대신이 함수를 사용하여 버전 번호 계산을 사용자 정의합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="8bf746949ca19c92e04815919f507fcd6805d5e0" translate="yes" xml:space="preserve">
          <source>hgtools&amp;lt;1.1</source>
          <target state="translated">hgtools &amp;lt;1.1</target>
        </trans-unit>
        <trans-unit id="38795d1bfff7a891aaae8b44417581b73fdda905" translate="yes" xml:space="preserve">
          <source>hgtools.managers.base.RepoManager</source>
          <target state="translated">hgtools.managers.base.RepoManager</target>
        </trans-unit>
        <trans-unit id="1f7b3e48ea8357510fab79f2492a09b42e30cd82" translate="yes" xml:space="preserve">
          <source>increment</source>
          <target state="translated">증가</target>
        </trans-unit>
        <trans-unit id="02454a4a815dab0c360abedc00453b163161f7d6" translate="yes" xml:space="preserve">
          <source>is the dictionary passed to use_vcs_version.</source>
          <target state="translated">use_vcs_version에 전달 된 사전입니다.</target>
        </trans-unit>
        <trans-unit id="5bfcfbe428cce428952787978643f2a5993438aa" translate="yes" xml:space="preserve">
          <source>mgr</source>
          <target state="translated">관리자</target>
        </trans-unit>
        <trans-unit id="80edcefd108bb666ca3e9fbc3cb6e859cb19ff72" translate="yes" xml:space="preserve">
          <source>object is the</source>
          <target state="translated">개체는</target>
        </trans-unit>
        <trans-unit id="6406de31c54c294c75bef84387fb15d2ef9b1eb1" translate="yes" xml:space="preserve">
          <source>object referencing the local repo
and the</source>
          <target state="translated">로컬 저장소를 참조하는 객체와</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">옵션</target>
        </trans-unit>
        <trans-unit id="b79917c8065e7f8f07c97ea1b61210626030b308" translate="yes" xml:space="preserve">
          <source>parameter to setup.
For example:</source>
          <target state="translated">설정할 매개 변수. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="80437a44a661d141174209119d54125a59a64b2a" translate="yes" xml:space="preserve">
          <source>setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="10ed01f7dbb37d335c5677f94a1218817accf0f4" translate="yes" xml:space="preserve">
          <source>use_vcs_version</source>
          <target state="translated">use_vcs_version</target>
        </trans-unit>
        <trans-unit id="aef7921eb0816c05013b3f4c0a7ad2512b5ca8fa" translate="yes" xml:space="preserve">
          <source>use_vcs_version = True</source>
          <target state="translated">use_vcs_version = True</target>
        </trans-unit>
        <trans-unit id="c2da37669328d462b5be7798f96d347a5276a3bc" translate="yes" xml:space="preserve">
          <source>version_handler</source>
          <target state="translated">version_handler</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
