<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/codechat/">
    <body>
      <group id="codechat">
        <trans-unit id="09b3dbcc35b97f008313b0e4b5aa3109e5add9e9" translate="yes" xml:space="preserve">
          <source>.tex</source>
          <target state="translated">.tex</target>
        </trans-unit>
        <trans-unit id="d6f4f17452c4f73f3a597ea45979c4a3f6ae9db2" translate="yes" xml:space="preserve">
          <source>.w</source>
          <target state="translated">.w</target>
        </trans-unit>
        <trans-unit id="13ec13a330dec27dadb7be649604516016804e45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/README.html&quot;&gt;CodeChat&lt;/a&gt; transforms source code into a web page, allowing developers to view their program as a beautiful and descriptive document by adding headings, formatting, hyperlinks, diagrams, images, and other forms of rich content to capture the ideas and insights that naturally flow from the process of writing a program. It also provides a blank slate in which to plan ahead, by sketching out an algorithm before committing it to code or laying out a design document which can evolve as the code does. This &lt;a href=&quot;http://www.literateprogramming.com/&quot;&gt;literate programming&lt;/a&gt; paradigm changes the way developers think by intermingling ideas with their implementation as code, dramatically improving a programmer&amp;rsquo;s abilities.</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/README.html&quot;&gt;CodeChat&lt;/a&gt; 은 소스 코드를 웹 페이지로 변환하여 개발자가 제목, 서식, 하이퍼 링크, 다이어그램, 이미지 및 기타 형식의 풍부한 콘텐츠를 추가하여 자신의 프로그램을 아름답고 설명적인 문서로 볼 수 있도록하여 자연스럽게 유입되는 아이디어와 통찰력을 포착합니다. 프로그램 작성 과정. 또한 코드에 적용하기 전에 알고리즘을 스케치하거나 코드처럼 발전 할 수있는 디자인 문서를 배치하여 미리 계획 할 수있는 빈 슬레이트를 제공합니다. 이 &lt;a href=&quot;http://www.literateprogramming.com/&quot;&gt;문학적 프로그래밍&lt;/a&gt; 패러다임은 아이디어를 코드로 구현하여 개발자가 생각하는 방식을 변화시켜 프로그래머의 능력을 극적으로 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="3594eb97b7c8a87a7fd63fd88f75c5abce050061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pyinstaller-sample-hook.readthedocs.io/en/latest/&quot;&gt;Documentation&lt;/a&gt; for integrating a PyInstaller hook into a distribution.</source>
          <target state="translated">&lt;a href=&quot;https://pyinstaller-sample-hook.readthedocs.io/en/latest/&quot;&gt;&lt;/a&gt;PyInstaller 후크를 배포에 통합하기위한 문서 입니다.</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">배경</target>
        </trans-unit>
        <trans-unit id="ccd9aa449370636c2b6335449c9a3a7f8c05cb0d" translate="yes" xml:space="preserve">
          <source>Code examples in a course on &lt;a href=&quot;http://www.ece.msstate.edu/courses/ece3724/main_pic24/docs/sphinx/textbook_examples.html&quot;&gt;microprocessors&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.ece.msstate.edu/courses/ece3724/main_pic24/docs/sphinx/textbook_examples.html&quot;&gt;마이크로 프로세서&lt;/a&gt; 과정의 코드 예제</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="translated">추가 정보</target>
        </trans-unit>
        <trans-unit id="052533e59d4ffd074657a5de716813bdd738edad" translate="yes" xml:space="preserve">
          <source>Put simply, literate programming (LP) is the realization that a program is a document written to and for fellow programmers, not simply a list of instructions for a computer. LP tools therefore produce a nicely-formatted document which contains the code intermixed with explanatory prose. &lt;a href=&quot;http://en.wikipedia.org/wiki/Donald_Knuth&quot;&gt;Donald Knuth&lt;/a&gt; introduced literate programming using his WEB tool in his seminal &lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;paper&lt;/a&gt;. Per Figure 1 of this &lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;paper&lt;/a&gt;, the WEB system takes a</source>
          <target state="translated">간단히 말해서, 문해력있는 프로그래밍 (LP)은 프로그램이 단순히 컴퓨터에 대한 명령 목록이 아니라 동료 프로그래머를 위해 작성된 문서라는 것을 깨닫는 것입니다. 따라서 LP 도구는 설명 산문과 혼합 된 코드를 포함하는 멋진 형식의 문서를 생성합니다. &lt;a href=&quot;http://en.wikipedia.org/wiki/Donald_Knuth&quot;&gt;도널드 크 누스는&lt;/a&gt; 자신의 정액에서 자신의 웹 도구를 사용하여 글을 읽고 프로그래밍 소개 &lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;종이&lt;/a&gt; . 이 &lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;백서&lt;/a&gt; 의 그림 1에 따라 웹 시스템은</target>
        </trans-unit>
        <trans-unit id="b70f2c9643f19f2f7a45ecc584b93e5963be496d" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;http://codechat.readthedocs.io/en/latest&quot;&gt;CodeChat docuumentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://codechat.readthedocs.io/en/latest&quot;&gt;CodeChat 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59dbbd3433e1ce13041b878645a377e0e3badc95" translate="yes" xml:space="preserve">
          <source>Some examples of literate programming using CodeChat:</source>
          <target state="translated">CodeChat을 사용한 문맹 프로그래밍의 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="43901d5b1e7a0b4df9a9633e146034e02f1bfa84" translate="yes" xml:space="preserve">
          <source>The CodeChat system for software documentation</source>
          <target state="translated">소프트웨어 문서화를위한 CodeChat 시스템</target>
        </trans-unit>
        <trans-unit id="f9d07df9c9f594005fd14f254b45dba780e53a9b" translate="yes" xml:space="preserve">
          <source>Use of a</source>
          <target state="translated">사용</target>
        </trans-unit>
        <trans-unit id="3e036e1a3ed2e9e4e7fed7e9b1af6d895baccbcf" translate="yes" xml:space="preserve">
          <source>Use of a numbered list to explain a &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#summary-and-implementation&quot;&gt;simple state machine&lt;/a&gt;.</source>
          <target state="translated">번호가 매겨진 목록을 사용하여 &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#summary-and-implementation&quot;&gt;단순 상태 머신&lt;/a&gt; 을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="6316801373c2c29bc8d4c9cd028f2aab1032547b" translate="yes" xml:space="preserve">
          <source>Use of fonts to show what</source>
          <target state="translated">글꼴을 사용하여 무엇을 표시</target>
        </trans-unit>
        <trans-unit id="c3f78e5f16a7e76e120bf6503d6ff601746dfa8b" translate="yes" xml:space="preserve">
          <source>Use of hyperlinks to provide reference information for all &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/conf.py.html&quot;&gt;Sphinx configuration values&lt;/a&gt;.</source>
          <target state="translated">하이퍼 링크를 사용하여 모든 &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/conf.py.html&quot;&gt;Sphinx 구성 값에&lt;/a&gt; 대한 참조 정보를 제공 합니다 .</target>
        </trans-unit>
        <trans-unit id="295b8ccca5f3fca3e9ada55ed8c49414e2f01244" translate="yes" xml:space="preserve">
          <source>Use of tables to help design a &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#step-5-of-lexer-to-rest&quot;&gt;simple parser&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#step-5-of-lexer-to-rest&quot;&gt;간단한 파서를&lt;/a&gt; 설계하는 데 도움이되는 테이블 사용 .</target>
        </trans-unit>
        <trans-unit id="aa4352b968c73dff491a2a0fcc512112f7ee9e37" translate="yes" xml:space="preserve">
          <source>commands to run</source>
          <target state="translated">실행할 명령</target>
        </trans-unit>
        <trans-unit id="c459a58aeff9f607a36f3b75a342a8866e7b1a0e" translate="yes" xml:space="preserve">
          <source>directive to categorize all source files in &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/&quot;&gt;CodeChat itself&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/&quot;&gt;CodeChat 자체의&lt;/a&gt; 모든 소스 파일을 분류하는 지시문</target>
        </trans-unit>
        <trans-unit id="33eb18b8de1c779b8be1aa8b0e14a179c3e53c95" translate="yes" xml:space="preserve">
          <source>document as input then produces either a &amp;ldquo;tangled&amp;rdquo; source file for compilation or a &amp;ldquo;woven&amp;rdquo; document as a</source>
          <target state="translated">문서를 입력으로 사용하면 컴파일 용 &quot;얽힌&quot;소스 파일이 생성되거나</target>
        </trans-unit>
        <trans-unit id="a8cd4f13eafdf715804211547339728f665302e4" translate="yes" xml:space="preserve">
          <source>file. The document is beautiful; the WEB source is difficult to digest (see Figure 2a-c); the source code is completely unreadable (see Figure 3). While a plethora of &lt;a href=&quot;http://en.wikipedia.org/wiki/Literate_programming#Tools&quot;&gt;tools&lt;/a&gt; developed over the years attempt to address these problems, only one &lt;a href=&quot;http://rant.gulbrandsen.priv.no/udoc/history&quot;&gt;LP-inspired&lt;/a&gt; variant has gained widespread acceptance: documentation generators, such as &lt;a href=&quot;http://www.doxygen.org&quot;&gt;Doxygen&lt;/a&gt; and &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html&quot;&gt;JavaDoc&lt;/a&gt;, which extract documentation directly from source code, rather than extracting source code from the documentation, as WEB and most LP tools do. CodeChat addresses these LP weaknesses by producing a document directly from the code; employing human-readable markup (reStructuredText); and by supporting a GUI to make editing an LP document-program faster and easier.</source>
          <target state="translated">파일. 문서는 아름답습니다. 웹 소스는 소화하기 어렵습니다 (그림 2a-c 참조). 소스 코드를 완전히 읽을 수 없습니다 (그림 3 참조). 수년에 걸쳐 개발 된 과다한 &lt;a href=&quot;http://en.wikipedia.org/wiki/Literate_programming#Tools&quot;&gt;도구가&lt;/a&gt; 이러한 문제를 해결하려고 시도했지만 &lt;a href=&quot;http://rant.gulbrandsen.priv.no/udoc/history&quot;&gt;LP에서 영감을받은&lt;/a&gt; 변형 중 하나만 널리 수용되었습니다. &lt;a href=&quot;http://www.doxygen.org&quot;&gt;Doxygen&lt;/a&gt; 및 &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html&quot;&gt;JavaDoc&lt;/a&gt; 과 같은 문서 생성기 는 웹 및 대부분의 LP 도구와 마찬가지로 문서. CodeChat은 코드에서 직접 문서를 생성하여 이러한 LP 약점을 해결합니다. 사람이 읽을 수있는 마크 업 (reStructuredText) 사용 그리고 GUI를 지원하여 LP 문서 프로그램을 더 빠르고 쉽게 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="60c429e65647070146bf6d2cad045c35c2801f27" translate="yes" xml:space="preserve">
          <source>toctree</source>
          <target state="translated">toctree</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
