<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/botstory/">
    <body>
      <group id="botstory">
        <trans-unit id="92cb2e399d74445cfa4bae39899b135fd0a31625" translate="yes" xml:space="preserve">
          <source># Background</source>
          <target state="translated"># 배경</target>
        </trans-unit>
        <trans-unit id="07186e07613e81d08686710e87dd72ef311fb5e7" translate="yes" xml:space="preserve">
          <source># Contributing</source>
          <target state="translated"># 기여</target>
        </trans-unit>
        <trans-unit id="5ae1505bc17669d3b58bd0c71fce334e94153a10" translate="yes" xml:space="preserve">
          <source># Examples</source>
          <target state="translated"># 예</target>
        </trans-unit>
        <trans-unit id="065de20d1931026a9af9ca22bb69f861b2383acb" translate="yes" xml:space="preserve">
          <source># Features</source>
          <target state="translated"># 특징</target>
        </trans-unit>
        <trans-unit id="f4d09489a082d063d2285e169ec6199c47b2bec3" translate="yes" xml:space="preserve">
          <source># Get Started</source>
          <target state="translated"># 시작하다</target>
        </trans-unit>
        <trans-unit id="29bde77842ea1bc37ca486afdab8bcac508dba32" translate="yes" xml:space="preserve">
          <source># Install</source>
          <target state="translated"># 설치</target>
        </trans-unit>
        <trans-unit id="275dc4f730c8110d4d858ea5747cf66d138ce495" translate="yes" xml:space="preserve">
          <source># License</source>
          <target state="translated"># 라이선스</target>
        </trans-unit>
        <trans-unit id="09635eded899829f3683a0b717d22f326e5fd539" translate="yes" xml:space="preserve">
          <source># Loop version</source>
          <target state="translated"># 루프 버전</target>
        </trans-unit>
        <trans-unit id="26785c91d582741b488803c19e5c86072f9b0bd1" translate="yes" xml:space="preserve">
          <source># News and Changelog</source>
          <target state="translated"># 뉴스 및 변경 내역</target>
        </trans-unit>
        <trans-unit id="2f07ef1a4ad97810d83587941d7cc82570f9760f" translate="yes" xml:space="preserve">
          <source># State [![support python versions](https://img.shields.io/pypi/pyversions/botstory.svg)](https://pypi.python.org/pypi/botstory/) [![PyPI version](https://img.shields.io/pypi/v/botstory.svg)](https://pypi.python.org/pypi/botstory/) [![Build Status](https://travis-ci.org/botstory/botstory.svg?branch=develop)](https://travis-ci.org/botstory/botstory) [![Coverage Status](https://coveralls.io/repos/github/botstory/botstory/badge.svg?branch=develop)](https://coveralls.io/github/botstory/botstory?branch=develop) [![](https://img.shields.io/pypi/l/botstory.svg)](https://github.com/botstory/botstory/blob/develop/LICENSE.txt)</source>
          <target state="translated"># 상태 [! [python 버전 지원] (https://img.shields.io/pypi/pyversions/botstory.svg)] (https://pypi.python.org/pypi/botstory/) [! [PyPI 버전 ] (https://img.shields.io/pypi/v/botstory.svg)] (https://pypi.python.org/pypi/botstory/) [! [빌드 상태] (https : // travis- ci.org/botstory/botstory.svg?branch=develop)](https://travis-ci.org/botstory/botstory) [! [보장 상태] (https://coveralls.io/repos/github/botstory /botstory/badge.svg?branch=develop)](https://coveralls.io/github/botstory/botstory?branch=develop) [! [] (https://img.shields.io/pypi/l/ botstory.svg)] (https://github.com/botstory/botstory/blob/develop/LICENSE.txt)</target>
        </trans-unit>
        <trans-unit id="fd448bef72d151acb16bdd091600e806436c6643" translate="yes" xml:space="preserve">
          <source># db interface</source>
          <target state="translated"># db 인터페이스</target>
        </trans-unit>
        <trans-unit id="4474b2133d6a539939331f6a6ee8ec4de5120733" translate="yes" xml:space="preserve">
          <source># facebook integration</source>
          <target state="translated"># 페이스 북 통합</target>
        </trans-unit>
        <trans-unit id="4b3e1cf4cbce2ec324372606e414b4315c517ae2" translate="yes" xml:space="preserve">
          <source># http interface</source>
          <target state="translated"># http 인터페이스</target>
        </trans-unit>
        <trans-unit id="883b0c9c0e2a5a18b0f34b3da45051f7fb432b04" translate="yes" xml:space="preserve">
          <source># match user queries</source>
          <target state="translated">일치하는 사용자 검색어 # 개</target>
        </trans-unit>
        <trans-unit id="3213732149d0ff254e0c1acc284071733d8cb9f7" translate="yes" xml:space="preserve">
          <source># render page of list ....</source>
          <target state="translated"># 목록의 렌더링 페이지 ....</target>
        </trans-unit>
        <trans-unit id="36e4b653657fec66872c91f53ebe5ad9074c35ca" translate="yes" xml:space="preserve">
          <source># setup modules</source>
          <target state="translated"># 설정 모듈</target>
        </trans-unit>
        <trans-unit id="36c3be8daac5c5c14770488988274afc0bbd0c48" translate="yes" xml:space="preserve">
          <source># start service</source>
          <target state="translated"># 서비스 시작</target>
        </trans-unit>
        <trans-unit id="e8e48980ce9af7d4c6eeeddb17a41bf4eb4f43aa" translate="yes" xml:space="preserve">
          <source>## Forking of Dialog (bifurcations)</source>
          <target state="translated">## 대화 분기 (분기)</target>
        </trans-unit>
        <trans-unit id="530afb80dca0b25a0beff6db39c7a4348b9365ef" translate="yes" xml:space="preserve">
          <source>## Linear dialog</source>
          <target state="translated">## 선형 대화 상자</target>
        </trans-unit>
        <trans-unit id="0dbcb0ebc376df8e1b215c6c97035c9437dcff13" translate="yes" xml:space="preserve">
          <source>## Reuse parts of Dialog (callable) and Dialog Loops</source>
          <target state="translated">## Dialog (호출 가능) 및 Dialog Loops의 일부 재사용</target>
        </trans-unit>
        <trans-unit id="d825005e8f67159f3ddb54d8610b3c000af7f76f" translate="yes" xml:space="preserve">
          <source>'Give me a minute I will find you right spaceship!',</source>
          <target state="translated">'잠시만 기다려주십시오. 올바른 우주선을 찾을 수 있습니다!',</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="8ebaeedc5e9547db6a92bd5843bf0ccc5c046ce8" translate="yes" xml:space="preserve">
          <source>*Botstory is heavily based on brand new Python features, like async/await.</source>
          <target state="translated">* Botstory는 async / await와 같은 새로운 Python 기능을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="578f9b7f8b32e291ceb175293c8346df2047a081" translate="yes" xml:space="preserve">
          <source>*Code is covered by tests except few trivial places.</source>
          <target state="translated">* 코드는 사소한 곳을 제외하고 테스트에 의해 다루어집니다.</target>
        </trans-unit>
        <trans-unit id="59c01b5a0d8b45e3d07e6e965e544e43456833cc" translate="yes" xml:space="preserve">
          <source>*MIT licence gives you many rights. And we are very open for your</source>
          <target state="translated">* MIT 라이센스는 많은 권리를 제공합니다. 그리고 우리는 당신을 위해 매우 열려 있습니다</target>
        </trans-unit>
        <trans-unit id="821a1a729a794b8d8f399e4c63997e8a912724b2" translate="yes" xml:space="preserve">
          <source>*Match user queries, lead, fork and loop dialogs.*</source>
          <target state="translated">* 사용자 쿼리, 리드, 포크 및 루프 대화 상자를 일치시킵니다. *</target>
        </trans-unit>
        <trans-unit id="9ad38333f5a4b9a8ea7b9bf1bd51d3e58a142193" translate="yes" xml:space="preserve">
          <source>*Right now botstory supports only fb Messengers, but we are going to</source>
          <target state="translated">* 현재 봇 스토리는 fb 메신저 만 지원하지만</target>
        </trans-unit>
        <trans-unit id="ff6580f675b7bf280f27952f1852b12a7005d399" translate="yes" xml:space="preserve">
          <source>*We focus on micro-services and especially on Docker. So you can</source>
          <target state="translated">* 우리는 마이크로 서비스, 특히 Docker에 중점을 둡니다. 그래서 당신은 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4827e58b1d1f686910b9f70543a2af1f944c8e46" translate="yes" xml:space="preserve">
          <source>*We remember user context and could return it any time and on any</source>
          <target state="translated">* 우리는 사용자 컨텍스트를 기억하며 언제 어디서나 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c52cbd9855c27f4eaf19228dc993e39f1b81aff" translate="yes" xml:space="preserve">
          <source>- **All messengers in one place**</source>
          <target state="translated">-** 모든 메신저를 한 곳에서 **</target>
        </trans-unit>
        <trans-unit id="cebd7a26b225dd2755ffa5258faa3122cd134e11" translate="yes" xml:space="preserve">
          <source>- **Declarative user dialogs**</source>
          <target state="translated">-** 선언적 사용자 대화 상자 **</target>
        </trans-unit>
        <trans-unit id="273454d4342026afb169fed48f9291579327a8e4" translate="yes" xml:space="preserve">
          <source>- **Easily scale**</source>
          <target state="translated">-** 쉽게 확장 **</target>
        </trans-unit>
        <trans-unit id="f1812e2baebae7b9abbeb8241bbf3bfee4f616c4" translate="yes" xml:space="preserve">
          <source>- **More than 90% test coverage**</source>
          <target state="translated">-** 90 % 이상의 테스트 범위 **</target>
        </trans-unit>
        <trans-unit id="5cb50c027866206a4f9052f7abb1ff6674a5d74c" translate="yes" xml:space="preserve">
          <source>- **Open source**</source>
          <target state="translated">-** 오픈 소스 **</target>
        </trans-unit>
        <trans-unit id="48240149613f4519dc72dc0e86d327b4d3e1c08f" translate="yes" xml:space="preserve">
          <source>- **Store use session**</source>
          <target state="translated">-** 매장 사용 세션 **</target>
        </trans-unit>
        <trans-unit id="9f2014b709b029cc0f163e8e055f451e1f1851a3" translate="yes" xml:space="preserve">
          <source>- **Use frontier features of Python**</source>
          <target state="translated">-** Python의 프론티어 기능 사용 **</target>
        </trans-unit>
        <trans-unit id="0f2f365d24fefe1deaa73cf8d07cffda536bdb6c" translate="yes" xml:space="preserve">
          <source>- [TODO bot](https://github.com/botstory/todo-bot) - support fb messenger</source>
          <target state="translated">-[TODO 봇] (https://github.com/botstory/todo-bot)-fb 메신저 지원</target>
        </trans-unit>
        <trans-unit id="e0e2a22e0567c2dce3e92c550a5907b447996908" translate="yes" xml:space="preserve">
          <source>- stateless story. it stores context of story (current question and results) somewhere (maybe DB)</source>
          <target state="translated">-무국적 이야기. 이야기의 맥락 (현재 질문 및 결과)을 어딘가에 저장합니다 (아마도 DB).</target>
        </trans-unit>
        <trans-unit id="36b82bdb5999a85ef17c9f1b707af46608686d23" translate="yes" xml:space="preserve">
          <source>@story.callable()</source>
          <target state="translated">@ story.callable ()</target>
        </trans-unit>
        <trans-unit id="a2d1e8dd366730c9f0ad650ae87d20f3f77fda21" translate="yes" xml:space="preserve">
          <source>@story.case('planets')</source>
          <target state="translated">@ story.case ( '행성')</target>
        </trans-unit>
        <trans-unit id="3e95019f551b7e6b68965bd17f6df927a29c3525" translate="yes" xml:space="preserve">
          <source>@story.case('stars')</source>
          <target state="translated">@ story.case ( '별')</target>
        </trans-unit>
        <trans-unit id="a9120378a400a8279761071c504ff6b5ee3dae16" translate="yes" xml:space="preserve">
          <source>@story.case(default=True)</source>
          <target state="translated">@ story.case (기본값 = True)</target>
        </trans-unit>
        <trans-unit id="e7f4cb52b0e5008a3002f126356423e7d79e1860" translate="yes" xml:space="preserve">
          <source>@story.loop()</source>
          <target state="translated">@ story.loop ()</target>
        </trans-unit>
        <trans-unit id="bb8479d7875e226bba30e94ec011105cae7465d9" translate="yes" xml:space="preserve">
          <source>@story.on('Hello')</source>
          <target state="translated">@ story.on ( '안녕하세요')</target>
        </trans-unit>
        <trans-unit id="84e30eca8634983b1dc0ac85194aaac4eda819bc" translate="yes" xml:space="preserve">
          <source>@story.on('lets go!')</source>
          <target state="translated">@ story.on ( '가자!')</target>
        </trans-unit>
        <trans-unit id="746ab497e0811819257bc7ee4dec7bc0ae763d2e" translate="yes" xml:space="preserve">
          <source>@story.on([</source>
          <target state="translated">@ story.on ([</target>
        </trans-unit>
        <trans-unit id="1453bf8d831aa00a7edbb617aa1d87050b3dbf0a" translate="yes" xml:space="preserve">
          <source>@story.part()</source>
          <target state="translated">@ story.part ()</target>
        </trans-unit>
        <trans-unit id="df0a68b7695311274887ccde1a60c5dfbb2c1d04" translate="yes" xml:space="preserve">
          <source>As well it is too hard to use git for store versions of diagrams.</source>
          <target state="translated">또한 다이어그램의 저장소 버전에 git을 사용하는 것은 너무 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="f97f9067e570ba436250f430d2932980f2323392" translate="yes" xml:space="preserve">
          <source>Async framework for bots</source>
          <target state="translated">봇용 비동기 프레임 워크</target>
        </trans-unit>
        <trans-unit id="c98962daf218a51928311c902fbee2fcfe5a5471" translate="yes" xml:space="preserve">
          <source>Bot asks user about destination of space travelling.</source>
          <target state="translated">봇은 사용자에게 우주 여행 목적지를 묻습니다.</target>
        </trans-unit>
        <trans-unit id="9d9be8e534a75bac9b5432f58a3e633ef74869b8" translate="yes" xml:space="preserve">
          <source>Contributions of all sizes are welcome.</source>
          <target state="translated">모든 규모의 참여를 환영합니다.</target>
        </trans-unit>
        <trans-unit id="bb3fc86955fe19cfc185e646381e557d9a66daa8" translate="yes" xml:space="preserve">
          <source>Key problem is async nature of any dialog -</source>
          <target state="translated">주요 문제는 모든 대화의 비동기 특성입니다.</target>
        </trans-unit>
        <trans-unit id="4a7cf7b7f9c1a2d382b2f06bed82403f0bae1c0c" translate="yes" xml:space="preserve">
          <source>Sure dialog can be made in diagrams but my thought that code should</source>
          <target state="translated">물론 다이어그램에서 대화를 만들 수 있지만 코드는</target>
        </trans-unit>
        <trans-unit id="01240b3b5bfd60cb331b3308330f3461b754fa38" translate="yes" xml:space="preserve">
          <source>That way we are almost sure that any changes won't break other</source>
          <target state="translated">이렇게하면 변경 사항이 다른 항목을 손상시키지 않을 것이라고 거의 확신합니다.</target>
        </trans-unit>
        <trans-unit id="27315b040d3b132a0887bab6a07b299810b2aec0" translate="yes" xml:space="preserve">
          <source>Under active development. API could change so please follow for changes.</source>
          <target state="translated">활발한 개발 중입니다. API가 변경 될 수 있으므로 변경 사항을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="dd93003674b65982dfc2ef8ea2f83994dff6208a" translate="yes" xml:space="preserve">
          <source>We always focus on its evolution and don't support legacy versions (&amp;lt;3.5).*</source>
          <target state="translated">우리는 항상 진화에 초점을 맞추고 레거시 버전 (&amp;lt;3.5)을 지원하지 않습니다. *</target>
        </trans-unit>
        <trans-unit id="ce1954a8646f6ae3a55dfc03dad35e58a3d66638" translate="yes" xml:space="preserve">
          <source>We are developing botstory mindful of the need to have easily reading API</source>
          <target state="translated">우리는 API를 쉽게 읽을 필요가 있음을 염두에두고 봇 스토리를 개발하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef76f70b8284e693a788c5341294fd3d067de90c" translate="yes" xml:space="preserve">
          <source>[CHANGELOG.md](CHANGELOG.md)</source>
          <target state="translated">[CHANGELOG.md] (CHANGELOG.md)</target>
        </trans-unit>
        <trans-unit id="4be00cf78b176048b863ec6d268cbc50c4fe8726" translate="yes" xml:space="preserve">
          <source>[MIT](LICENSE.txt)</source>
          <target state="translated">[MIT] (LICENSE.txt)</target>
        </trans-unit>
        <trans-unit id="1d8e97a544081d483f518355cd0f55c119a3ed7e" translate="yes" xml:space="preserve">
          <source>])</source>
          <target state="translated">])</target>
        </trans-unit>
        <trans-unit id="bbc0aff80688baeb01a5a4cb720794fe808ad957" translate="yes" xml:space="preserve">
          <source>```</source>
          <target state="translated">```</target>
        </trans-unit>
        <trans-unit id="8dc414a245b0bcfc15d735dff9ec63b6e400997b" translate="yes" xml:space="preserve">
          <source>```bash</source>
          <target state="translated">```bash</target>
        </trans-unit>
        <trans-unit id="ab8ac90cc808fea2e113f156accf1bd424c1596b" translate="yes" xml:space="preserve">
          <source>```python</source>
          <target state="translated">```파이썬</target>
        </trans-unit>
        <trans-unit id="0991af78e6c4d8e94d5d631eea6fd3fb7dcf1a25" translate="yes" xml:space="preserve">
          <source>and many other features</source>
          <target state="translated">및 기타 많은 기능</target>
        </trans-unit>
        <trans-unit id="5b524f92279f659d139cf473a227acbd4001e990" translate="yes" xml:space="preserve">
          <source>and show sequence of questions and reactions.</source>
          <target state="translated">일련의 질문과 반응을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b960ef6abb9bb624b9e29ac6030a5212ab0c8c98" translate="yes" xml:space="preserve">
          <source>app instance. So you can scale app, and start and stop it without</source>
          <target state="translated">앱 인스턴스. 따라서 앱을 확장하고 시작 및 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f5f68e49d5b1f26624beda1c13d067fb59a386b" translate="yes" xml:space="preserve">
          <source>async def ask_destination(ctx):</source>
          <target state="translated">비동기 def ask_destination (ctx) :</target>
        </trans-unit>
        <trans-unit id="90e2545d05a386ad3ceecc991c09c713de40a517" translate="yes" xml:space="preserve">
          <source>async def ask_origin(ctx):</source>
          <target state="translated">비동기 정의 ask_origin (ctx) :</target>
        </trans-unit>
        <trans-unit id="ce515486388a845a29e36c941f383e88f197a3c5" translate="yes" xml:space="preserve">
          <source>async def choose_from_top10_planets(ctx):</source>
          <target state="translated">async def choose_from_top10_planets (ctx) :</target>
        </trans-unit>
        <trans-unit id="f522aa2c401e128fdd7710c4fb89380efcc1191c" translate="yes" xml:space="preserve">
          <source>async def list_of_tasks(ctx):</source>
          <target state="translated">async def list_of_tasks (ctx) :</target>
        </trans-unit>
        <trans-unit id="ef4b4a330a91dca1ecc77e445988f7cc4c285c5a" translate="yes" xml:space="preserve">
          <source>async def receive_destination(ctx):</source>
          <target state="translated">async def receive_destination (ctx) :</target>
        </trans-unit>
        <trans-unit id="39043957bd7207365b0ad752fb6893b6e32305b2" translate="yes" xml:space="preserve">
          <source>async def receive_destination_options(ctx):</source>
          <target state="translated">async def receive_destination_options (ctx) :</target>
        </trans-unit>
        <trans-unit id="a56aa264120b70f5940164187d0ce1fa42cd7c91" translate="yes" xml:space="preserve">
          <source>async def request_destination(ctx):</source>
          <target state="translated">async def request_destination (ctx) :</target>
        </trans-unit>
        <trans-unit id="f65d7ea0eb3dd20885aad57826571a5baf858b68" translate="yes" xml:space="preserve">
          <source>async def request_origin(ctx):</source>
          <target state="translated">async def request_origin (ctx) :</target>
        </trans-unit>
        <trans-unit id="29f8b04506c77591442389cea41b5c7aa642bcf0" translate="yes" xml:space="preserve">
          <source>async def say_hi(ctx):</source>
          <target state="translated">비동기 정의 say_hi (ctx) :</target>
        </trans-unit>
        <trans-unit id="8c29fb216207bc4e02306c5f7ec0aa76407f6cd2" translate="yes" xml:space="preserve">
          <source>async def show_list_next_page(ctx):</source>
          <target state="translated">비동기 정의 show_list_next_page (ctx) :</target>
        </trans-unit>
        <trans-unit id="0faa4977ad5894a79166c8cc3140d02054c218b3" translate="yes" xml:space="preserve">
          <source>async def show_part_of_list(ctx):</source>
          <target state="translated">비동기 정의 show_part_of_list (ctx) :</target>
        </trans-unit>
        <trans-unit id="579734b692029ae163ef29f8dce3813e86134641" translate="yes" xml:space="preserve">
          <source>async def show_zero_page(ctx):</source>
          <target state="translated">비동기 정의 show_zero_page (ctx) :</target>
        </trans-unit>
        <trans-unit id="26bb56b8c173b0f1f11dfabfef89938aa581f431" translate="yes" xml:space="preserve">
          <source>async def thanks(ctx):</source>
          <target state="translated">비동기 정의 감사 (ctx) :</target>
        </trans-unit>
        <trans-unit id="49b4cee22939c1835000821e4d66cc04d9c53304" translate="yes" xml:space="preserve">
          <source>asyncio.get_event_loop().run_until_complete(story.start())</source>
          <target state="translated">asyncio.get_event_loop (). run_until_complete (story.start ())</target>
        </trans-unit>
        <trans-unit id="08b9eedc9ffcef5d8b76bf3aaa30c98372ffa590" translate="yes" xml:space="preserve">
          <source>await story.say('Hello {}!'.format(ctx['user'].name))</source>
          <target state="translated">await story.say ( 'Hello {}!'. format (ctx [ 'user']. name))</target>
        </trans-unit>
        <trans-unit id="c5bfe493c682fb1684955879773476f01849c2a8" translate="yes" xml:space="preserve">
          <source>clear enough to show story of dialog and should be open for modification.</source>
          <target state="translated">대화의 스토리를 보여주기에 충분하고 수정을 위해 열려 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f42ffe13822979cef1888db693a7115d7960ce9d" translate="yes" xml:space="preserve">
          <source>contribution and would love to hear about your experience.*</source>
          <target state="translated">귀하의 경험에 대해 듣고 싶습니다. *</target>
        </trans-unit>
        <trans-unit id="a78b69928789b85d5ceebc9d52f3935b31e27204" translate="yes" xml:space="preserve">
          <source>ctx,</source>
          <target state="translated">ctx,</target>
        </trans-unit>
        <trans-unit id="b0bebc8f2066a1db09670e2b7f42605ef14a1819" translate="yes" xml:space="preserve">
          <source>db_name=os.environ.get('MONGODB_DB_NAME', 'todobot'),</source>
          <target state="translated">db_name = os.environ.get ( 'MONGODB_DB_NAME', 'todobot'),</target>
        </trans-unit>
        <trans-unit id="fe50c0807a3c59d4ed29c9d186350f4d904b8348" translate="yes" xml:space="preserve">
          <source>def hello_story():</source>
          <target state="translated">def hello_story () :</target>
        </trans-unit>
        <trans-unit id="be373fc2e3d036a7e051c6ecf4272e2e3e41c09d" translate="yes" xml:space="preserve">
          <source>def list_loop():</source>
          <target state="translated">def list_loop () :</target>
        </trans-unit>
        <trans-unit id="c055201fa117d507b3ef033ab0bcb95a04d63be2" translate="yes" xml:space="preserve">
          <source>def list_of_tasks_story():</source>
          <target state="translated">def list_of_tasks_story () :</target>
        </trans-unit>
        <trans-unit id="71ed659643d58422e816b34a7e21ce46ddd8e66d" translate="yes" xml:space="preserve">
          <source>def next_page():</source>
          <target state="translated">def next_page () :</target>
        </trans-unit>
        <trans-unit id="a167155ef5dfdeb96489beec0eb63222ab64e516" translate="yes" xml:space="preserve">
          <source>def other():</source>
          <target state="translated">def other () :</target>
        </trans-unit>
        <trans-unit id="caac620102a474d9e0141a9c699dcf5be25fb8fe" translate="yes" xml:space="preserve">
          <source>def pagination_loop():</source>
          <target state="translated">def pagination_loop () :</target>
        </trans-unit>
        <trans-unit id="2ecd4afbc9ef0309240bad3dee6156f9f6b9bc3f" translate="yes" xml:space="preserve">
          <source>def planets():</source>
          <target state="translated">def planets () :</target>
        </trans-unit>
        <trans-unit id="2e845a1c8d349b9d02d4882ab2bda912c1123c5a" translate="yes" xml:space="preserve">
          <source>def stars():</source>
          <target state="translated">데프 별 () :</target>
        </trans-unit>
        <trans-unit id="344a1bff537d31511d47bd7b78c88a3e8d834243" translate="yes" xml:space="preserve">
          <source>def stateless_story():</source>
          <target state="translated">def stateless_story () :</target>
        </trans-unit>
        <trans-unit id="195bdbe0eb2499dd26c9a2f111623878016041af" translate="yes" xml:space="preserve">
          <source>def stateless_story_with_bifurcation():</source>
          <target state="translated">def stateless_story_with_bifurcation () :</target>
        </trans-unit>
        <trans-unit id="433b73cf4f29c756683a2ebe82f6ff5c37246d23" translate="yes" xml:space="preserve">
          <source>fair of bot amnesia.*</source>
          <target state="translated">공정한 봇 기억 상실증 *</target>
        </trans-unit>
        <trans-unit id="d10fec537f5f31ba396a7083661123524bc8ad3a" translate="yes" xml:space="preserve">
          <source>from botstory.ast import callable, loop, story_context</source>
          <target state="translated">botstory.ast에서 가져 오기 호출 가능, 루프, story_context</target>
        </trans-unit>
        <trans-unit id="2a375e5ecf45413a2172be64eba8a0d02caae2c9" translate="yes" xml:space="preserve">
          <source>from botstory.integrations import aiohttp, fb, mongodb</source>
          <target state="translated">botstory.integrations에서 import aiohttp, fb, mongodb</target>
        </trans-unit>
        <trans-unit id="e618d9845e790f43cb22583ed062f82a89f12599" translate="yes" xml:space="preserve">
          <source>from botstory.middlewares import option, sticker, text</source>
          <target state="translated">botstory.middlewares 가져 오기 옵션, 스티커, 텍스트에서</target>
        </trans-unit>
        <trans-unit id="20a846db5b2ac8f16a544d8176919b449b75bc28" translate="yes" xml:space="preserve">
          <source>from todo import reflection</source>
          <target state="translated">todo import 반영에서</target>
        </trans-unit>
        <trans-unit id="01db41e0b36eb421e322ac960242f71adc5dae0e" translate="yes" xml:space="preserve">
          <source>functionality. And any breaking features won't come hidden.*</source>
          <target state="translated">기능. 그리고 어떤 주요 기능도 숨겨지지 않습니다. *</target>
        </trans-unit>
        <trans-unit id="533c75310ef45ce51aed274d7f6e3ec079233b3d" translate="yes" xml:space="preserve">
          <source>if not await _show_list_next_page(ctx):</source>
          <target state="translated">기다리지 않으면 _show_list_next_page (ctx) :</target>
        </trans-unit>
        <trans-unit id="e9e4c73ab6c9783e22a47bee9fbb0c85bf6f7089" translate="yes" xml:space="preserve">
          <source>if not await show_list_next_page(ctx):</source>
          <target state="translated">대기하지 않는 경우 show_list_next_page (ctx) :</target>
        </trans-unit>
        <trans-unit id="0c3cdc9285c8b32b90c699c51852255f345bcfec" translate="yes" xml:space="preserve">
          <source>import botstory</source>
          <target state="translated">봇 스토리 가져 오기</target>
        </trans-unit>
        <trans-unit id="ee75be10d6957b8efcbf1b2fa2a2c53afb6254bd" translate="yes" xml:space="preserve">
          <source>import emoji</source>
          <target state="translated">그림 이모티콘 가져 오기</target>
        </trans-unit>
        <trans-unit id="1e7b9f543d36c914a20cd54018787360917b8ea0" translate="yes" xml:space="preserve">
          <source>import logging</source>
          <target state="translated">가져 오기 로깅</target>
        </trans-unit>
        <trans-unit id="89ed1aae8d339dc9d09bf407a430d236fa089e16" translate="yes" xml:space="preserve">
          <source>import os</source>
          <target state="translated">수입 OS</target>
        </trans-unit>
        <trans-unit id="7930225e42cd310c32fcd6f39751e5f7391f4847" translate="yes" xml:space="preserve">
          <source>list_title = user_data['list_title']</source>
          <target state="translated">list_title = user_data [ 'list_title']</target>
        </trans-unit>
        <trans-unit id="02a8f2b8685b345718de1bd90208875fcc5ecc80" translate="yes" xml:space="preserve">
          <source>list_title='List of actual tasks:',</source>
          <target state="translated">list_title = '실제 작업 목록 :',</target>
        </trans-unit>
        <trans-unit id="b1fccfafa7a1cf3271505b8905eea5cf4e370ae2" translate="yes" xml:space="preserve">
          <source>list_type = user_data.get('list_type', 'pure')</source>
          <target state="translated">list_type = user_data.get ( 'list_type', 'pure')</target>
        </trans-unit>
        <trans-unit id="408181aa2468c0241f71340f3dfd2b107c35ca84" translate="yes" xml:space="preserve">
          <source>list_type='template',</source>
          <target state="translated">list_type = '템플릿',</target>
        </trans-unit>
        <trans-unit id="4476b5616cab4f710f9d0340ef02ecee3ded5896" translate="yes" xml:space="preserve">
          <source>logger.info('list of tasks')</source>
          <target state="translated">logger.info ( '작업 목록')</target>
        </trans-unit>
        <trans-unit id="652c3d81a00efc11340acb8c3562c50954fc10dc" translate="yes" xml:space="preserve">
          <source>option.Match('NEXT_PAGE_OF_A_LIST'),</source>
          <target state="translated">option.Match ( 'NEXT_PAGE_OF_A_LIST'),</target>
        </trans-unit>
        <trans-unit id="a11a50ca701239aea5ba5869f0f40273872af07c" translate="yes" xml:space="preserve">
          <source>page_index = user_data.get('page_index', 0)</source>
          <target state="translated">page_index = user_data.get ( 'page_index', 0)</target>
        </trans-unit>
        <trans-unit id="ee1478b8d2b9541eb79371b4dbe837ac52d0f5e0" translate="yes" xml:space="preserve">
          <source>page_length = user_data['page_length']</source>
          <target state="translated">page_length = user_data [ 'page_length']</target>
        </trans-unit>
        <trans-unit id="2d43e5051525fec5fb3d895dd544ae9f253bdfe0" translate="yes" xml:space="preserve">
          <source>page_length=os.environ.get('LIST_PAGE_LENGTH', 4),</source>
          <target state="translated">page_length = os.environ.get ( 'LIST_PAGE_LENGTH', 4),</target>
        </trans-unit>
        <trans-unit id="30536a898f12c9f5ce9dac2c5cb216c6a26d8980" translate="yes" xml:space="preserve">
          <source>pip install botstory</source>
          <target state="translated">pip 설치 봇 스토리</target>
        </trans-unit>
        <trans-unit id="dc076b1adaf7bd18449a600306eb560843a3bd7f" translate="yes" xml:space="preserve">
          <source>platform and seamlessly organize communication between them. As well</source>
          <target state="translated">플랫폼과 그들 간의 커뮤니케이션을 원활하게 구성합니다. 게다가</target>
        </trans-unit>
        <trans-unit id="f3807d5b058b4708d40d0342a525dffd489e23b4" translate="yes" xml:space="preserve">
          <source>port=int(os.environ.get('PORT', 8080)),</source>
          <target state="translated">port = int (os.environ.get ( 'PORT', 8080)),</target>
        </trans-unit>
        <trans-unit id="6b056bb6caf857505d442d413d2157429a1a111a" translate="yes" xml:space="preserve">
          <source>return None</source>
          <target state="translated">반환 없음</target>
        </trans-unit>
        <trans-unit id="40fb8b3b3f491c22670a81c8ad232ce83bcc9858" translate="yes" xml:space="preserve">
          <source>return await choose_option(top10_planets,</source>
          <target state="translated">return await choose_option (top10_planets,</target>
        </trans-unit>
        <trans-unit id="eb344a63b236c8137a1dc8be707d06afac23e9bd" translate="yes" xml:space="preserve">
          <source>return await pagination_list.pagination_loop(</source>
          <target state="translated">return await pagination_list.pagination_loop (</target>
        </trans-unit>
        <trans-unit id="3d0afb31bd1efc7af1645c650ba03d9143489a1b" translate="yes" xml:space="preserve">
          <source>return await story.ask('Where do you go?',</source>
          <target state="translated">return await story.ask ( '어디로 가니?',</target>
        </trans-unit>
        <trans-unit id="e2c424da45d14109663edd80fade50b03c5a863e" translate="yes" xml:space="preserve">
          <source>return await story.ask('Where do you now?',</source>
          <target state="translated">return await story.ask ( '지금 어디 계세요?',</target>
        </trans-unit>
        <trans-unit id="b08a28f576bff628a12ba792cdab16fded1b4042" translate="yes" xml:space="preserve">
          <source>return await story.ask('Which planet do you prefer?',</source>
          <target state="translated">return await story.ask ( '당신은 어느 행성을 선호합니까?',</target>
        </trans-unit>
        <trans-unit id="a3e6a7e5090d11fab13d8740c0af48772429f5a2" translate="yes" xml:space="preserve">
          <source>return await story.ask('Which star do you prefer?',</source>
          <target state="translated">return await story.ask ( '어떤 스타를 선호하세요?',</target>
        </trans-unit>
        <trans-unit id="2f5c71a875201e7b1c3b8f4d3b8378c4fd95e953" translate="yes" xml:space="preserve">
          <source>return await story.say('Thanks! Give me a minute I will find you right spaceship!',</source>
          <target state="translated">return await story.say ( '감사합니다! 잠시만 기다려주세요. 올바른 우주선을 찾을 수 있습니다!',</target>
        </trans-unit>
        <trans-unit id="0c8429cf56e7ebfdd6b5a8562fddad754e56cda6" translate="yes" xml:space="preserve">
          <source>return await story.say('Thanks!\n'</source>
          <target state="translated">return await story.say ( '감사합니다! \ n'</target>
        </trans-unit>
        <trans-unit id="d704e4428eb235893b13131a231f8a04021b2b30" translate="yes" xml:space="preserve">
          <source>return callable.EndOfStory()</source>
          <target state="translated">callable.EndOfStory ()를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="07173262b703c9ce2a0280113bf802da9e7869a5" translate="yes" xml:space="preserve">
          <source>return loop.BreakLoop()</source>
          <target state="translated">return loop.BreakLoop ()</target>
        </trans-unit>
        <trans-unit id="acf1fa79951484cb58f77c7ef39eb54179232d50" translate="yes" xml:space="preserve">
          <source>should be here, just drop PR with unit tests.*</source>
          <target state="translated">여기에 있어야합니다. 단위 테스트로 PR을 떨어 뜨립니다. *</target>
        </trans-unit>
        <trans-unit id="d467ad1c7b06d45c518eec21a035f2723324d2bc" translate="yes" xml:space="preserve">
          <source>sticker.Like(),</source>
          <target state="translated">sticker.Like (),</target>
        </trans-unit>
        <trans-unit id="8f2b8205430b3a58efa4df58c5a73b91a7336e5e" translate="yes" xml:space="preserve">
          <source>store_destination(ctx['message']['location'])</source>
          <target state="translated">store_destination (ctx [ 'message'] [ 'location'])</target>
        </trans-unit>
        <trans-unit id="5da6b0d9f193c24247c6a8782a113b20d86599a0" translate="yes" xml:space="preserve">
          <source>store_origin(ctx['message']['location'])</source>
          <target state="translated">store_origin (ctx [ 'message'] [ 'location'])</target>
        </trans-unit>
        <trans-unit id="4c3cf461a9a8bada8486a2562188517e471472e4" translate="yes" xml:space="preserve">
          <source>story = botstory.Story()</source>
          <target state="translated">스토리 = botstory.Story ()</target>
        </trans-unit>
        <trans-unit id="8ab4efc5eced2ab09c7b8bf99e0e77681cf920dc" translate="yes" xml:space="preserve">
          <source>story.use(aiohttp.AioHttpInterface(</source>
          <target state="translated">story.use (aiohttp.AioHttpInterface (</target>
        </trans-unit>
        <trans-unit id="c0f325fd090cbf6c9094c202a991e717d3b2decb" translate="yes" xml:space="preserve">
          <source>story.use(fb.FBInterface(</source>
          <target state="translated">story.use (fb.FBInterface (</target>
        </trans-unit>
        <trans-unit id="f052258760c8dd1eabe55400e7b7b7284aaf3897" translate="yes" xml:space="preserve">
          <source>story.use(mongodb.MongodbInterface(</source>
          <target state="translated">story.use (mongodb.MongodbInterface (</target>
        </trans-unit>
        <trans-unit id="b291962be36690625d418d2e8435e4b969312bb4" translate="yes" xml:space="preserve">
          <source>subtitle_renderer=reflection.class_to_str(tasks_document.task_details_renderer),</source>
          <target state="translated">subtitle_renderer = reflection.class_to_str (tasks_document.task_details_renderer),</target>
        </trans-unit>
        <trans-unit id="af3475fb691dcd60a5211506c23ce323e33e8f2c" translate="yes" xml:space="preserve">
          <source>support many others. So you can use common code base for different</source>
          <target state="translated">많은 다른 사람들을 지원하십시오. 따라서 서로 다른 공통 코드베이스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d9bf68ba877845a7f19faf5d27b6ff0c68d49bb" translate="yes" xml:space="preserve">
          <source>target_document=reflection.class_to_str(tasks_document.TaskDocument),</source>
          <target state="translated">target_document = reflection.class_to_str (tasks_document.TaskDocument),</target>
        </trans-unit>
        <trans-unit id="b2182de6c68851bd291f3b164a24266fb20f04cc" translate="yes" xml:space="preserve">
          <source>text.EqualCaseIgnore('todo'),</source>
          <target state="translated">text.EqualCaseIgnore ( 'todo'),</target>
        </trans-unit>
        <trans-unit id="50f473cf4a1718b9b5491dca45ef6fc703413dcf" translate="yes" xml:space="preserve">
          <source>text.text.EqualCaseIgnore('more'),</source>
          <target state="translated">text.text.EqualCaseIgnore ( 'more'),</target>
        </trans-unit>
        <trans-unit id="f6eab96e7c67580c7b456f95701e3c1f74656f2c" translate="yes" xml:space="preserve">
          <source>text.text.EqualCaseIgnore('next'),</source>
          <target state="translated">text.text.EqualCaseIgnore ( 'next'),</target>
        </trans-unit>
        <trans-unit id="708ff43e0bc50e7980a7ffd68e7e299af30d53e0" translate="yes" xml:space="preserve">
          <source>text='Here is the most popular places. Maybe you would like to choose one?',</source>
          <target state="translated">text = '가장 인기있는 장소입니다. 하나를 선택 하시겠습니까? ',</target>
        </trans-unit>
        <trans-unit id="099e5363a1afce6c99e4d0c250bc53aa653c7706" translate="yes" xml:space="preserve">
          <source>title_field = user_data['title_field']</source>
          <target state="translated">title_field = user_data [ 'title_field']</target>
        </trans-unit>
        <trans-unit id="0229c7e8503b3eb7ac9dc0b2a6c2153c4ddef425" translate="yes" xml:space="preserve">
          <source>title_field='description',</source>
          <target state="translated">title_field = 'description',</target>
        </trans-unit>
        <trans-unit id="5858e27f9bcd4f0cae9b7f45aaf33d312620007d" translate="yes" xml:space="preserve">
          <source>until that. As well dialog structure should be simply and clear</source>
          <target state="translated">그 전까지. 또한 대화 구조는 간단하고 명확해야합니다.</target>
        </trans-unit>
        <trans-unit id="ae2b39ea282dfc1140f82c2a33aaf7941ec09b5a" translate="yes" xml:space="preserve">
          <source>uri=os.environ.get('MONGODB_URI', 'mongo'),</source>
          <target state="translated">uri = os.environ.get ( 'MONGODB_URI', 'mongo'),</target>
        </trans-unit>
        <trans-unit id="8541d375186948cc2f7cae9e4555fb5155bbcc06" translate="yes" xml:space="preserve">
          <source>user=ctx['user'])</source>
          <target state="translated">user = ctx [ 'user'])</target>
        </trans-unit>
        <trans-unit id="1779d0d2c1239b53c5c68eb634c47c9200a33e76" translate="yes" xml:space="preserve">
          <source>user_data = story_context.get_user_data(ctx)</source>
          <target state="translated">user_data = story_context.get_user_data (ctx)</target>
        </trans-unit>
        <trans-unit id="632da6ec05e3c64edb7370d84226810911237305" translate="yes" xml:space="preserve">
          <source>v0.0.63</source>
          <target state="translated">v0.0.63</target>
        </trans-unit>
        <trans-unit id="da4bd56a50a5372110ac4a738f25f146a5652a22" translate="yes" xml:space="preserve">
          <source>very easy scale any part of the system.*</source>
          <target state="translated">시스템의 모든 부분을 매우 쉽게 확장 할 수 있습니다. *</target>
        </trans-unit>
        <trans-unit id="07685d7a1084f81e1f4834355c9bb5a529d5c6a9" translate="yes" xml:space="preserve">
          <source>we always open for contribution. And if you sure that one platform</source>
          <target state="translated">우리는 항상 공헌을 위해 열려 있습니다. 그리고 하나의 플랫폼이</target>
        </trans-unit>
        <trans-unit id="96c3d92e3921b5e7fb3ac078ad58b351929d7367" translate="yes" xml:space="preserve">
          <source>we can wait answer from user for are months and should store context</source>
          <target state="translated">사용자의 답변을 몇 달 동안 기다릴 수 있으며 컨텍스트를 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="4156b786665f8d14a942387f7195ec4cc17da043" translate="yes" xml:space="preserve">
          <source>webhook_token=os.environ.get('FB_WEBHOOK_TOKEN', None),</source>
          <target state="translated">webhook_token = os.environ.get ( 'FB_WEBHOOK_TOKEN', 없음),</target>
        </trans-unit>
        <trans-unit id="eab93066125f0281c9a42ab5082f4bed7b6e32dc" translate="yes" xml:space="preserve">
          <source>webhook_url='/webhook{}'.format(os.environ.get('FB_WEBHOOK_URL_SECRET_PART', '')),</source>
          <target state="translated">webhook_url = '/ webhook {}'. format (os.environ.get ( 'FB_WEBHOOK_URL_SECRET_PART', '')),</target>
        </trans-unit>
        <trans-unit id="0d69e527d35f0cdc2df5d9f29402f0ccb8bad63f" translate="yes" xml:space="preserve">
          <source>which describe dialogues (scenario) of bots in Python language.</source>
          <target state="translated">Python 언어로 봇의 대화 (시나리오)를 설명합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
