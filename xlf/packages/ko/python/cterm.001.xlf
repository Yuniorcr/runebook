<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/cterm/">
    <body>
      <group id="cterm">
        <trans-unit id="b6faedcb37879700e2ab299f973aa02ac26a5433" translate="yes" xml:space="preserve">
          <source>ClusterTerminal (&lt;code&gt;cterm&lt;/code&gt;) forwards all keystrokes from a master window to multiple slave windows. Use &lt;code&gt;cterm&lt;/code&gt; as a method for performing ad hoc tasks, not as a substitute for automation frameworks.</source>
          <target state="translated">ClusterTerminal ( &lt;code&gt;cterm&lt;/code&gt; )은 마스터 창에서 여러 슬레이브 창으로 모든 키 입력을 전달합니다. 자동화 프레임 워크를 대체하는 것이 아니라 임시 작업을 수행하는 방법으로 &lt;code&gt;cterm&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="30c607c1ce495fd43196f51f663bdc43fefef9d4" translate="yes" xml:space="preserve">
          <source>ClusterTerminal uses the built-in Terminal application of macOS.</source>
          <target state="translated">ClusterTerminal은 macOS의 내장 터미널 애플리케이션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0dc0c0ef67d9dd647692f7a466b46ffb3c9375f8" translate="yes" xml:space="preserve">
          <source>Command Arguments</source>
          <target state="translated">명령 인수</target>
        </trans-unit>
        <trans-unit id="f67758af6a0222c84dcb530f2be73dc70d6d883a" translate="yes" xml:space="preserve">
          <source>Fork your input to multiple Terminal windows</source>
          <target state="translated">입력을 여러 터미널 창으로 포크</target>
        </trans-unit>
        <trans-unit id="a9ef2e8a2c5ec416146780bc7d286a0e6f4496c7" translate="yes" xml:space="preserve">
          <source>If you specify the same argument twice, the last instance is the one used. This is useful since you may want to overwrite part of your alias, but not all of it. For example, the following will use screen 1:</source>
          <target state="translated">동일한 인수를 두 번 지정하면 마지막 인스턴스가 사용됩니다. 별칭의 일부만 덮어 쓰고 싶을 수 있기 때문에 유용합니다. 예를 들어 다음은 화면 1을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="747119db8de0928d62663ae0d3e1c8dc60a301b0" translate="yes" xml:space="preserve">
          <source>If you want to pass arguments to the command, include it as part of the command. Beware of character escaping where necessary. For example:</source>
          <target state="translated">명령에 인수를 전달하려면 명령의 일부로 포함하십시오. 필요한 경우 캐릭터 이스케이프에주의하십시오. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3f30f837748df9f2bdeeaba74a5d1c6d9ca0ceeb" translate="yes" xml:space="preserve">
          <source>In addition to the master window, the above will create two slaves windows, like so:</source>
          <target state="translated">마스터 창 외에도 위는 다음과 같이 두 개의 슬레이브 창을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bff456637ee939860b64bedeaccf9b6cbe19f7e0" translate="yes" xml:space="preserve">
          <source>In an alias, you can save your normal settings, like &lt;code&gt;alias cssh=&quot;cterm --screen 2 ssh&quot;&lt;/code&gt; to change the default screen.</source>
          <target state="translated">별칭에서 &lt;code&gt;alias cssh=&quot;cterm --screen 2 ssh&quot;&lt;/code&gt; 와 같은 일반 설정을 저장하여 기본 화면을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="a61ce6a70060906cbd15dcb9e18feb85093edae9" translate="yes" xml:space="preserve">
          <source>Item Arguments</source>
          <target state="translated">항목 인수</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">한계</target>
        </trans-unit>
        <trans-unit id="6e468a1b1e5eec2afc0e61c1b7d2d3e2a44a61f0" translate="yes" xml:space="preserve">
          <source>Similar to a command, you can pass per-item arguments (again, beware of character escaping):</source>
          <target state="translated">명령과 유사하게 항목 당 인수를 전달할 수 있습니다 (다시 말하지만 문자 이스케이프에주의하십시오).</target>
        </trans-unit>
        <trans-unit id="5030c2839fc40ad6fc43c73863850b2570d13f61" translate="yes" xml:space="preserve">
          <source>The most common use case is controlling multiple SSH sessions simultaneously:</source>
          <target state="translated">가장 일반적인 사용 사례는 여러 SSH 세션을 동시에 제어하는 ​​것입니다.</target>
        </trans-unit>
        <trans-unit id="6e16cd94ae0fe162acde2b3f786d49c61b1eebfb" translate="yes" xml:space="preserve">
          <source>The window must be completely opaque as the scripting capabilities of Terminal ignore the alpha component.</source>
          <target state="translated">터미널의 스크립팅 기능이 알파 구성 요소를 무시하므로 창은 완전히 불투명해야합니다.</target>
        </trans-unit>
        <trans-unit id="09266d16ded24a5e0f511e853aac96b3da5f049f" translate="yes" xml:space="preserve">
          <source>This is mostly just something I wanted to do out of fun; plenty of similar solutions out there, &lt;code&gt;tmux&lt;/code&gt; being a very popular one.</source>
          <target state="translated">이것은 대부분 내가 재미로하고 싶었던 것입니다. 비슷한 솔루션이 많이 있으며 &lt;code&gt;tmux&lt;/code&gt; 는 매우 인기있는 솔루션 입니다.</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">팁</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="bb2d320a679ad84ccd6aa37f7db6302ba55f26bf" translate="yes" xml:space="preserve">
          <source>You could've also used &lt;code&gt;cterm &quot;ssh -l 'some user'&quot; host1 host2&lt;/code&gt; to get the same outcome; I only escaped quotes to demo purposes.</source>
          <target state="translated">또한 사용했습니다 수 &lt;code&gt;cterm &quot;ssh -l 'some user'&quot; host1 host2&lt;/code&gt; 같은 결과를 얻을; 데모 목적으로 만 따옴표를 이스케이프했습니다.</target>
        </trans-unit>
        <trans-unit id="5af11b1700e6ce3632959aaa5d242092ebd3c16a" translate="yes" xml:space="preserve">
          <source>You might want to set up an alias for cluster ssh in your &lt;code&gt;~/.bash_profile&lt;/code&gt;. For instance, &lt;code&gt;alias cssh=&quot;cterm ssh&quot;&lt;/code&gt;, and then call it using &lt;code&gt;cssh host1 host2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;~/.bash_profile&lt;/code&gt; 에 클러스터 ssh의 별칭을 설정할 수 있습니다 . 예를 들어 &lt;code&gt;alias cssh=&quot;cterm ssh&quot;&lt;/code&gt; 를 입력 한 다음 &lt;code&gt;cssh host1 host2&lt;/code&gt; 를 사용하여 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b1ae76ac855ca66e46bc177be9e9b6ae45ced3a3" translate="yes" xml:space="preserve">
          <source>which will expand to:</source>
          <target state="translated">다음으로 확장됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
