<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/gems/">
    <body>
      <group id="gems">
        <trans-unit id="1997d8ab6807c39815dd08464c8cec0d4efb0d81" translate="yes" xml:space="preserve">
          <source>Currently, the following objects are available (this list will grow with time and feedback):</source>
          <target state="translated">현재 다음 개체를 사용할 수 있습니다 (이 목록은 시간과 피드백에 따라 늘어남).</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">기술</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="6bfe87295d30f233fcb80f1e8abc3c6d836a50dd" translate="yes" xml:space="preserve">
          <source>Documentation for the package can be found &lt;a href=&quot;http://gems.readthedocs.io/en/latest/index.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">패키지에 대한 문서는 &lt;a href=&quot;http://gems.readthedocs.io/en/latest/index.html&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6437fd9f67563e1ea311bd8f5e3902dc66baf4c" translate="yes" xml:space="preserve">
          <source>File an issue in the &lt;a href=&quot;https://github.com/bprinty/gems/issues&quot;&gt;GitHub issue tracker&lt;/a&gt;.</source>
          <target state="translated">에서 문제를 파일 &lt;a href=&quot;https://github.com/bprinty/gems/issues&quot;&gt;GitHub의 문제 추적기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="823121aeb38d9dc03a711ded2e6e4bf8a6089082" translate="yes" xml:space="preserve">
          <source>In the example above, an arbitrary data structure is provided as an argument to the</source>
          <target state="translated">위의 예에서 임의의 데이터 구조는</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="a85eb1b151c356331cbda434eeb2032aea1b3eee" translate="yes" xml:space="preserve">
          <source>JSON-like data structure for easy data traversal.</source>
          <target state="translated">손쉬운 데이터 탐색을위한 JSON과 유사한 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="0e76c168b108d0679efb83c8b8297c8248a2498e" translate="yes" xml:space="preserve">
          <source>JSON-like data structure for easy filesystem traversal.</source>
          <target state="translated">쉬운 파일 시스템 탐색을위한 JSON과 유사한 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>
        </trans-unit>
        <trans-unit id="15b3b3f8c8e7be573187a1019c0e218d359b1f10" translate="yes" xml:space="preserve">
          <source>Other operations like this also can be used with the</source>
          <target state="translated">이와 같은 다른 작업도</target>
        </trans-unit>
        <trans-unit id="e67d768a99378f8ecf3247b67ace259a8ea070ed" translate="yes" xml:space="preserve">
          <source>Python utilities for data manipulation and management.</source>
          <target state="translated">데이터 조작 및 관리를위한 Python 유틸리티.</target>
        </trans-unit>
        <trans-unit id="09d5a64e9c36b9d112a6c8a69c07fafec57c5070" translate="yes" xml:space="preserve">
          <source>Questions/Feedback</source>
          <target state="translated">질문 / 피드백</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="96b94449c5d7ce6131a8938b76b58e18253ed1e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://github.com/bprinty/gems&quot;&gt;gems&lt;/a&gt; module provides specialized data structures to augment development. It&amp;rsquo;s similar to the &lt;a href=&quot;https://docs.python.org/2/library/collections.html&quot;&gt;collections&lt;/a&gt; module, but contains different types of objects.</source>
          <target state="translated">&lt;a href=&quot;http://github.com/bprinty/gems&quot;&gt;보석&lt;/a&gt; 모듈은 기능 보강 개발에 데이터 구조를 전문 제공합니다. &lt;a href=&quot;https://docs.python.org/2/library/collections.html&quot;&gt;컬렉션&lt;/a&gt; 모듈 과 비슷 하지만 다른 유형의 개체를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fd3e32dc3801c914e67aabe3919f7dfda7d9f0e6" translate="yes" xml:space="preserve">
          <source>There are also operations tied to</source>
          <target state="translated">관련 작업도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dafd5845def04f19596241318ef83997b47ebf4" translate="yes" xml:space="preserve">
          <source>Traversal of a filetree is typically a pain in python. You could use</source>
          <target state="translated">파일 트리 순회는 일반적으로 파이썬에서 고통입니다. 당신은 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="219ea4450f39d9bebc5c85607cd64bfa7e1bf546" translate="yes" xml:space="preserve">
          <source>Using JSON-based access is much easier and cleaner than doing many</source>
          <target state="translated">JSON 기반 액세스를 사용하는 것은 많은 작업을 수행하는 것보다 훨씬 쉽고 깔끔합니다.</target>
        </trans-unit>
        <trans-unit id="c8c12438f8738eefff21d484cda3d3d907486669" translate="yes" xml:space="preserve">
          <source>Via github:</source>
          <target state="translated">github를 통해 :</target>
        </trans-unit>
        <trans-unit id="968c00074f8b60668476e710706515403faee8cd" translate="yes" xml:space="preserve">
          <source>Via pip:</source>
          <target state="translated">pip를 통해 :</target>
        </trans-unit>
        <trans-unit id="cf1cd3e93c33d36025cf08259e4a6a097d547675" translate="yes" xml:space="preserve">
          <source>comes in handy. Here is an example of how to use the</source>
          <target state="translated">편리합니다. 다음은 사용 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="6288c74c2945ac771cee3a87e5544b41d367921b" translate="yes" xml:space="preserve">
          <source>composite</source>
          <target state="translated">합성물</target>
        </trans-unit>
        <trans-unit id="3f22939af1209665727c71e695acc4563574ce9a" translate="yes" xml:space="preserve">
          <source>filetree</source>
          <target state="translated">파일 트리</target>
        </trans-unit>
        <trans-unit id="23aca54a270800dfb3133a90b2114462bd4c9d0e" translate="yes" xml:space="preserve">
          <source>gems</source>
          <target state="translated">보석</target>
        </trans-unit>
        <trans-unit id="acffb0674bcb91fe92e927dc09ce22ee29e0f2bc" translate="yes" xml:space="preserve">
          <source>gems.filetree</source>
          <target state="translated">gems.filetree</target>
        </trans-unit>
        <trans-unit id="3f0c18076d70425943e43cac3e4ed301a4f30437" translate="yes" xml:space="preserve">
          <source>object abstracts away the complexity associated with managing heavily nested JSON-based structures, allowing easier access to internal properties, and providing operators that work with the data in an intuitive way. Here is a simple example of how to use the</source>
          <target state="translated">객체는 많이 중첩 된 JSON 기반 구조를 관리하는 것과 관련된 복잡성을 제거하여 내부 속성에 더 쉽게 액세스 할 수 있도록하고 직관적 인 방식으로 데이터를 다루는 연산자를 제공합니다. 다음은 사용 방법에 대한 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="ac0fd33f5d0e43b611beff5f0e2871f10d9fda5c" translate="yes" xml:space="preserve">
          <source>object as a result that combines the objects in an intuitive way:</source>
          <target state="translated">객체를 직관적 인 방식으로 결합한 결과 :</target>
        </trans-unit>
        <trans-unit id="912faf68b637433babda0368240f0e78ac7451c6" translate="yes" xml:space="preserve">
          <source>object, and is transformed into an object where properties can be traversed more gracefully (syntactically). You can also load a composite object from a json or yaml file like so:</source>
          <target state="translated">객체로, 속성을보다 우아하게 (구문 적으로) 순회 할 수있는 객체로 변환됩니다. 다음과 같이 json 또는 yaml 파일에서 복합 객체를로드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a32c82787be6c77195d658bf8b91438e1f5d5982" translate="yes" xml:space="preserve">
          <source>object. For example:</source>
          <target state="translated">목적. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="e4100dc242f4e94678b089b84f1befafe08a62d2" translate="yes" xml:space="preserve">
          <source>objects. If two composite objects or a composite object and another similar type are added, you get a</source>
          <target state="translated">사물. 두 개의 복합 객체 또는 하나의 복합 객체와 다른 유사한 유형이 추가되면</target>
        </trans-unit>
        <trans-unit id="1b31e7e6547b1025cd7387caea08a4a77e83a5b1" translate="yes" xml:space="preserve">
          <source>operations to create the full paths to objects on your filesystem.</source>
          <target state="translated">파일 시스템의 개체에 대한 전체 경로를 만드는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="625864cb1b36afd30da06b77f8e0a80fe79f7c4d" translate="yes" xml:space="preserve">
          <source>os.path.join</source>
          <target state="translated">os.path.join</target>
        </trans-unit>
        <trans-unit id="5bb6417d65ae3f277f3a6b6552851d56a5756752" translate="yes" xml:space="preserve">
          <source>os.path.walk</source>
          <target state="translated">os.path.walk</target>
        </trans-unit>
        <trans-unit id="d4cb884b7fc7279ec04557b99326052b6de26755" translate="yes" xml:space="preserve">
          <source>structure also allows for traversal of the file data like so:</source>
          <target state="translated">구조는 또한 다음과 같이 파일 데이터의 순회를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a44cac4b820eaf8cdb5becd1524e72afc7e6ac40" translate="yes" xml:space="preserve">
          <source>to within a recursive function to accomplish it, but there should be an easier way. That&amp;rsquo;s where the</source>
          <target state="translated">재귀 함수 내에서 수행 할 수 있지만 더 쉬운 방법이 있어야합니다. 그게</target>
        </trans-unit>
        <trans-unit id="06b55cf49afc6f86f62f9f15ff98cbeda4685883" translate="yes" xml:space="preserve">
          <source>type in a project:</source>
          <target state="translated">프로젝트에 입력 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
