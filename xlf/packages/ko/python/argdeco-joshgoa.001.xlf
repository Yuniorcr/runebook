<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/argdeco-joshgoa/">
    <body>
      <group id="argdeco-joshgoa">
        <trans-unit id="a7f18b66ff596d1e271735d1f9916cb0e1c7d04b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The &lt;em&gt;EXACT&lt;/em&gt; same decorating order as regular argparse &lt;em&gt;MUST&lt;/em&gt; be respected</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 다음 &lt;em&gt;EXACT&lt;/em&gt; 일반 argparse와 같은 장식의 순서는 &lt;em&gt;반드시&lt;/em&gt; 존중되어야</target>
        </trans-unit>
        <trans-unit id="5b8427a6940f118f708778630446a3e62d1c1366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ardeco.add_mutually_exclusive_group&lt;/strong&gt;(required=False)</source>
          <target state="translated">&lt;strong&gt;ardeco.add_mutually_exclusive_group&lt;/strong&gt; (필수 = False)</target>
        </trans-unit>
        <trans-unit id="5c1196d1aca5f7983150193877f48a6c116e2695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.add_argument&lt;/strong&gt;(name or flags..., group=None, [, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])</source>
          <target state="translated">&lt;strong&gt;argdeco.add_argument&lt;/strong&gt; (이름 또는 플래그 ..., group = None, [, action] [, nargs] [, const] [, default] [, type] [, choices] [, required] [, help] [, metavar ] [, dest])</target>
        </trans-unit>
        <trans-unit id="1eb2cb893c805042d68f7016b34e3cc95ace2363" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.add_argument_group&lt;/strong&gt;(title=None, description=None)</source>
          <target state="translated">&lt;strong&gt;argdeco.add_argument_group&lt;/strong&gt; (제목 = 없음, 설명 = 없음)</target>
        </trans-unit>
        <trans-unit id="b5a88ebdcded36dd74d801dad7f9001d907906d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.add_subparsers&lt;/strong&gt;(wrapped=None, [title][, description][, prog][, parser_class][, action][, option_string][, dest][, required][, help][, metavar])</source>
          <target state="translated">&lt;strong&gt;argdeco.add_subparsers&lt;/strong&gt; (wrapped = None, [title] [, description] [, prog] [, parser_class] [, action] [, option_string] [, dest] [, required] [, help] [, metavar])</target>
        </trans-unit>
        <trans-unit id="e315888d47add042b209cca861510ab33022a2a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.argument_parser&lt;/strong&gt;(wrapped=None, parser_class=argparse.ArgumentParser, ctx=False, prog=None, usage=None, description=None, epilog=None, parents=[], formatter_class=argparse.HelpFormatter, prefix_chars=&quot;-&quot;, fromfile_prefix_chars=None, argument_default=None, conflict_handler=&quot;error&quot;, add_help=True, allow_abbrev=True)</source>
          <target state="translated">&lt;strong&gt;argdeco.argument_parser&lt;/strong&gt; (wrapped = None, parser_class = argparse.ArgumentParser, ctx = False, prog = None, usage = None, description = None, epilog = None, parent = [], formatter_class = argparse.HelpFormatter, prefix_chars = &quot;-&quot; , fromfile_prefix_chars = None, argument_default = None, conflict_handler = &quot;error&quot;, add_help = True, allow_abbrev = True)</target>
        </trans-unit>
        <trans-unit id="110f5501b8a8b1e1e498eb41bc9c0e33fc8986c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco&lt;/strong&gt; does &lt;em&gt;NOT&lt;/em&gt; override decorated functions so that they can be accessed by the user easily if needed. In order to access the &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance, it is recommended to use context forwarding.</source>
          <target state="translated">&lt;strong&gt;argdeco&lt;/strong&gt; 는 필요한 경우 사용자가 쉽게 액세스 할 수 있도록 데코 레이팅 된 함수를 재정의 하지 &lt;em&gt;않습니다&lt;/em&gt; . &lt;strong&gt;argparse&lt;/strong&gt; 컨텍스트 또는 파서 인스턴스 에 액세스 하려면 컨텍스트 전달을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c5b8781a2e0f49608d24254388ed0a9538345f59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco&lt;/strong&gt; supports class callback method decoration, unlike the big majority of CLI decorator libraries, without any difference as regular callback callable decoration.</source>
          <target state="translated">&lt;strong&gt;argdeco&lt;/strong&gt; 는 대부분의 CLI 데코레이터 라이브러리와 달리 일반 콜백 호출 가능 데코레이션과 차이없이 클래스 콜백 메소드 데코레이션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="89c25a6e98b7d12432623429744aea6cf501424a" translate="yes" xml:space="preserve">
          <source>API reference</source>
          <target state="translated">API 참조</target>
        </trans-unit>
        <trans-unit id="e9aa1070458c71e8dfa7843126288e26142d4365" translate="yes" xml:space="preserve">
          <source>Accessing attributes</source>
          <target state="translated">속성 액세스</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">고급 사용법</target>
        </trans-unit>
        <trans-unit id="f06703d4ee169a2df88810906ccf6cb1a4741ea9" translate="yes" xml:space="preserve">
          <source>By default, ArgumentParser groups command-line arguments into &amp;ldquo;positional arguments&amp;rdquo; and &amp;ldquo;optional arguments&amp;rdquo; when displaying help messages. When there is a better conceptual grouping of arguments than this default one, appropriate groups can be created using the add_argument_group() method:</source>
          <target state="translated">기본적으로 ArgumentParser는 도움말 메시지를 표시 할 때 명령 줄 인수를 &quot;위치 인수&quot;및 &quot;선택 인수&quot;로 그룹화합니다. 이 기본 인수보다 더 나은 개념적 인수 그룹이있는 경우 add_argument_group () 메서드를 사용하여 적절한 그룹을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6038979db56bf75b5b4a45ad68227c2545616e28" translate="yes" xml:space="preserve">
          <source>Class callback method context or parser instance forwarding is still respected on decorated class methods.</source>
          <target state="translated">클래스 콜백 메서드 컨텍스트 또는 파서 인스턴스 전달은 데코 레이팅 된 클래스 메서드에서 여전히 존중됩니다.</target>
        </trans-unit>
        <trans-unit id="d3761d64d52b354057683284a19bff79ad2ff2bb" translate="yes" xml:space="preserve">
          <source>Class method decoration</source>
          <target state="translated">수업 방식 장식</target>
        </trans-unit>
        <trans-unit id="c7e15bfc847aa9f34a9a600d7630ac9de4d5634e" translate="yes" xml:space="preserve">
          <source>Context forwarding</source>
          <target state="translated">컨텍스트 전달</target>
        </trans-unit>
        <trans-unit id="0b38454212aed7e51006cd7ebccd502bc3fcd9b0" translate="yes" xml:space="preserve">
          <source>Create a new ArgumentParser object. All parameters should be passed as keyword arguments. Each parameter has its own more detailed description below, but in short they are:</source>
          <target state="translated">새 ArgumentParser 객체를 만듭니다. 모든 매개 변수는 키워드 인수로 전달되어야합니다. 각 매개 변수에는 아래에 더 자세한 설명이 있지만 간단히 말해 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="645a41729eae20ef920e713b9fa58f18d5313a56" translate="yes" xml:space="preserve">
          <source>Decorated callback callables can get access to the &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance.</source>
          <target state="translated">데코 레이팅 된 콜백 콜 &lt;strong&gt;러블&lt;/strong&gt; 은 &lt;strong&gt;argparse&lt;/strong&gt; 컨텍스트 또는 파서 인스턴스에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b9b1d323a6d34cd45b93a2493527fb4444468f8" translate="yes" xml:space="preserve">
          <source>Decorating a class will forward the arguments to the &lt;em&gt;__init__&lt;/em&gt; method (usually not the desired behaviour), as decorated callbacks will &lt;em&gt;ALWAYS&lt;/em&gt; be treated as callables.</source>
          <target state="translated">데코 레이팅 된 콜백은 &lt;em&gt;항상 콜러 블로&lt;/em&gt; 처리되기 때문에 클래스를 장식하면 인수가 &lt;em&gt;__init__&lt;/em&gt; 메서드 (일반적으로 원하는 동작이 아님)로 전달됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3038dd2489869ab5fbcdd8c3bf1ac9ef78d03566" translate="yes" xml:space="preserve">
          <source>Decorating the &lt;em&gt;__call__&lt;/em&gt; method will forward the arguments to the class itself, following standard decorator usage as specified by &lt;a href=&quot;https://wrapt.readthedocs.io/en/latest/decorators.html#decorating-class-methods&quot;&gt;wrapt&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;__call__&lt;/em&gt; 메소드를 장식하면 &lt;a href=&quot;https://wrapt.readthedocs.io/en/latest/decorators.html#decorating-class-methods&quot;&gt;wrapt에&lt;/a&gt; 지정된대로 표준 데코레이터 사용에 따라 인수를 클래스 자체에 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="0ea4c81be540a9da7d64fcb6c25f2d35c8309048" translate="yes" xml:space="preserve">
          <source>Define how a single command-line argument should be parsed. Each parameter has its own more detailed description below, but in short they are:</source>
          <target state="translated">단일 명령 행 인수를 구문 분석하는 방법을 정의하십시오. 각 매개 변수는 아래에 더 자세한 설명이 있지만 간단히 말하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="09dac122e8953867260f1e16deb240632cdc29cd" translate="yes" xml:space="preserve">
          <source>Description of parameters:</source>
          <target state="translated">매개 변수 설명 :</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="8ad3d736ba19e67c41d72812f96929fff3fbe2d1" translate="yes" xml:space="preserve">
          <source>Many programs split up their functionality into a number of sub-commands, for example, the svn program can invoke sub-commands like svn checkout, svn update, and svn commit. Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. ArgumentParser supports the creation of such sub-commands with the add_subparsers() method. The add_subparsers() method is normally called with no arguments and returns a special action object. This object has a single method, add_parser(), which takes a command name and any ArgumentParser constructor arguments, and returns an ArgumentParser object that can be modified as usual.</source>
          <target state="translated">많은 프로그램은 기능을 여러 하위 명령으로 분할합니다. 예를 들어 svn 프로그램은 svn checkout, svn update 및 svn commit과 같은 하위 명령을 호출 할 수 있습니다. 이러한 방식으로 기능을 분할하는 것은 프로그램이 다른 종류의 명령 줄 인수를 필요로하는 여러 다른 기능을 수행 할 때 특히 좋은 생각이 될 수 있습니다. ArgumentParser는 add_subparsers () 메서드를 사용하여 이러한 하위 명령의 생성을 지원합니다. add_subparsers () 메서드는 일반적으로 인수없이 호출되며 특수 작업 객체를 반환합니다. 이 객체에는 명령 이름과 ArgumentParser 생성자 인수를 취하고 평소와 같이 수정할 수있는 ArgumentParser 객체를 반환하는 단일 메서드 add_parser ()가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a578cd592bdce36ffc58256bcb20bca416915a8" translate="yes" xml:space="preserve">
          <source>The installation into a &lt;a href=&quot;https://github.com/pypa/virtualenv&quot;&gt;virtualenv&lt;/a&gt; (or &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;pipenv&lt;/a&gt;) is heavily recommended.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pypa/virtualenv&quot;&gt;virtualenv&lt;/a&gt; (또는 &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;pipenv&lt;/a&gt; )에 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0613a0ecff9361d38f97cba660e8938737cb4379" translate="yes" xml:space="preserve">
          <source>There are so many libraries out there for writing command line utilities; why does &lt;strong&gt;argdeco&lt;/strong&gt; exist?</source>
          <target state="translated">명령 줄 유틸리티를 작성하기위한 많은 라이브러리가 있습니다. &lt;strong&gt;argdeco&lt;/strong&gt; 가 존재하는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a463c569e85538f2350685a8e3592be18c41cb06" translate="yes" xml:space="preserve">
          <source>This question is easy to answer: because there is not a single command line utility for Python out there which ticks the following boxes: (&lt;a href=&quot;https://click.palletsprojects.com/en/7.x/why/&quot;&gt;sound familiar?&lt;/a&gt;)</source>
          <target state="translated">이 질문에 대답하기 쉬운 다음 상자 틱 거기 파이썬에 대한 단일 명령 줄 유틸리티 없기 때문에 ( &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/why/&quot;&gt;? 익숙한 소리를&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="bd35682e13c89e4579b11121d5e8c193aa5bdee8" translate="yes" xml:space="preserve">
          <source>Unopinionated argparse wrapper</source>
          <target state="translated">unopinionated argparse 래퍼</target>
        </trans-unit>
        <trans-unit id="6cc9119157ed9d1605ab58e82ba549461e8941fd" translate="yes" xml:space="preserve">
          <source>Why &lt;strong&gt;argdeco&lt;/strong&gt;?</source>
          <target state="translated">왜 &lt;strong&gt;argdeco&lt;/strong&gt; 인가?</target>
        </trans-unit>
        <trans-unit id="7fd33a09827ea0f06465a11f07fb181684d743c2" translate="yes" xml:space="preserve">
          <source>You can get the library directly from PyPI:</source>
          <target state="translated">PyPI에서 직접 라이브러리를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91b57573ae4fae8abe7f04f23341b760821f296e" translate="yes" xml:space="preserve">
          <source>action - The basic type of action to be taken when this argument is encountered at the command line.</source>
          <target state="translated">action-명령 줄에서이 인수가 발견 될 때 취할 기본 조치 유형입니다.</target>
        </trans-unit>
        <trans-unit id="0f62c1f0377daf7ece6f9e7f5cdf59801458b804" translate="yes" xml:space="preserve">
          <source>action - the basic type of action to be taken when this argument is encountered at the command line</source>
          <target state="translated">action-명령 행에서이 인수가 발견 될 때 취할 기본 조치 유형</target>
        </trans-unit>
        <trans-unit id="6dcb61ff42dee9d36d4e0deea99a2c303ae92006" translate="yes" xml:space="preserve">
          <source>add_help - Add a -h/--help option to the parser (default: True)</source>
          <target state="translated">add_help-파서에 -h /-help 옵션을 추가합니다 (기본값 : True).</target>
        </trans-unit>
        <trans-unit id="005609e28f949056739115329cc24b6a08c6ec57" translate="yes" xml:space="preserve">
          <source>allow_abbrev - Allows long options to be abbreviated if the abbreviation is unambiguous. (default: True)</source>
          <target state="translated">allow_abbrev-약어가 모호하지 않은 경우 긴 옵션을 축약 할 수 있습니다. (기본값 : True)</target>
        </trans-unit>
        <trans-unit id="913621c0db72e453062525c100abde3086ea911b" translate="yes" xml:space="preserve">
          <source>argdeco</source>
          <target state="translated">아르 데코</target>
        </trans-unit>
        <trans-unit id="0e70ba91954cab2900f6430cdff6f630d32422e5" translate="yes" xml:space="preserve">
          <source>argument_default - The global default value for arguments (default: None)</source>
          <target state="translated">argument_default-인수의 전역 기본값 (기본값 : 없음)</target>
        </trans-unit>
        <trans-unit id="f36fd2fd01ada64c5b9dce774867f15f9aab31c5" translate="yes" xml:space="preserve">
          <source>choices - A container of the allowable values for the argument.</source>
          <target state="translated">선택-인수에 허용되는 값의 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="03c15d5dc6bc8764e953a645657d2c20561e0163" translate="yes" xml:space="preserve">
          <source>conflict_handler - The strategy for resolving conflicting optionals (usually unnecessary)</source>
          <target state="translated">충돌 처리기-충돌하는 옵션을 해결하기위한 전략 (일반적으로 불필요 함)</target>
        </trans-unit>
        <trans-unit id="ef8dffc588d64927429aa17a280e375a45c3c226" translate="yes" xml:space="preserve">
          <source>const - A constant value required by some action and nargs selections.</source>
          <target state="translated">const-일부 작업 및 nargs 선택에 필요한 상수 값입니다.</target>
        </trans-unit>
        <trans-unit id="7d466698be17ab196f643a9e432a397997562a47" translate="yes" xml:space="preserve">
          <source>ctx - Pass the &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance to the callback callable (default: False)</source>
          <target state="translated">ctx- &lt;strong&gt;argparse&lt;/strong&gt; 컨텍스트 또는 파서 인스턴스를 콜백 호출 가능에 전달 (기본값 : False)</target>
        </trans-unit>
        <trans-unit id="15c254be539b07fb2fe66395f9fd3afa16d98cf7" translate="yes" xml:space="preserve">
          <source>default - The value produced if the argument is absent from the command line.</source>
          <target state="translated">default-명령 줄에 인수가없는 경우 생성되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="79d322772a51c7eccf8756f2e330b72c53a112af" translate="yes" xml:space="preserve">
          <source>description - Text to display before the argument help (default: &lt;strong&gt;doc&lt;/strong&gt;)</source>
          <target state="translated">설명-인수 도움말 앞에 표시 할 텍스트 (기본값 : &lt;strong&gt;doc&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="4881098dafaf49a485b9fc71ad1aad0fcf1ec856" translate="yes" xml:space="preserve">
          <source>description - description for the sub-parser group in help output, by default None</source>
          <target state="translated">description-도움말 출력의 하위 구문 분석기 그룹에 대한 설명 (기본값 없음)</target>
        </trans-unit>
        <trans-unit id="132b39dd0926992034f613a25650ced45f23c21e" translate="yes" xml:space="preserve">
          <source>dest - The name of the attribute to be added to the object returned by parse_args().</source>
          <target state="translated">dest-parse_args ()가 반환하는 객체에 추가 할 속성의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c98db1ffd87dbb84085dc20c0e6a25c04515d449" translate="yes" xml:space="preserve">
          <source>dest - name of the attribute under which sub-command name will be stored; by default None and no value is stored</source>
          <target state="translated">dest-하위 명령 이름이 저장 될 속성의 이름입니다. 기본적으로 없음이며 값이 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="580c20fd848bbd1774ef01e5b5586da9bb62fe04" translate="yes" xml:space="preserve">
          <source>epilog - Text to display after the argument help (default: none)</source>
          <target state="translated">epilog-인수 도움말 뒤에 표시 할 텍스트 (기본값 : 없음)</target>
        </trans-unit>
        <trans-unit id="d386788fca86677d0109d8e5f32e3f708fb6bdae" translate="yes" xml:space="preserve">
          <source>formatter_class - A class for customizing the help output</source>
          <target state="translated">formatter_class-도움말 출력을 사용자 정의하기위한 클래스</target>
        </trans-unit>
        <trans-unit id="05e2e36e44acc9367918b0f1aed96d54da408354" translate="yes" xml:space="preserve">
          <source>fromfile_prefix_chars - The set of characters that prefix files from which additional arguments should be read (default: None)</source>
          <target state="translated">fromfile_prefix_chars-추가 인수를 읽어야하는 파일의 접두어가되는 문자 세트 (기본값 : 없음)</target>
        </trans-unit>
        <trans-unit id="255b2262e7f425029e08f05ffa36c26faf409c21" translate="yes" xml:space="preserve">
          <source>group - The group to add the argument. (default: None)</source>
          <target state="translated">group-인수를 추가 할 그룹입니다. (기본값 : 없음)</target>
        </trans-unit>
        <trans-unit id="f4388b5b008d69888b29e9dcb12de8640ddad9c6" translate="yes" xml:space="preserve">
          <source>help - A brief description of what the argument does.</source>
          <target state="translated">help-인수가 수행하는 작업에 대한 간략한 설명.</target>
        </trans-unit>
        <trans-unit id="250387d77f25799607da225c81e082afe9e69906" translate="yes" xml:space="preserve">
          <source>help - help for sub-parser group in help output, by default None</source>
          <target state="translated">help-도움말 출력의 하위 구문 분석기 그룹에 대한 도움말, 기본적으로 없음</target>
        </trans-unit>
        <trans-unit id="20580895dc6a57ece54def68c7f001aceb201ca3" translate="yes" xml:space="preserve">
          <source>metavar - A name for the argument in usage messages.</source>
          <target state="translated">metavar-사용법 메시지의 인수 이름입니다.</target>
        </trans-unit>
        <trans-unit id="27addbe397aeb18137197b024adf84c96d811e65" translate="yes" xml:space="preserve">
          <source>metavar - string presenting available sub-commands in help; by default it is None and presents sub-commands in form {cmd1, cmd2, ..}</source>
          <target state="translated">metavar-도움말에서 사용 가능한 하위 명령을 나타내는 문자열입니다. 기본적으로 None이며 {cmd1, cmd2, ..} 형식으로 하위 명령을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a8e76d4a65f55c18078c9181a9dc398f6ef72bff" translate="yes" xml:space="preserve">
          <source>name or flags - Either a name or a list of option strings, e.g. foo or -f, --foo.</source>
          <target state="translated">이름 또는 플래그-이름 또는 옵션 문자열 목록 (예 : foo 또는 -f, --foo).</target>
        </trans-unit>
        <trans-unit id="e86ecb01b3ea8ebc38d4b97bf72d74b887fdabce" translate="yes" xml:space="preserve">
          <source>nargs - The number of command-line arguments that should be consumed.</source>
          <target state="translated">nargs-사용해야하는 명령 줄 인수의 수입니다.</target>
        </trans-unit>
        <trans-unit id="f600f5f91b5997d8f126d20c1c3cc54cf427f7c2" translate="yes" xml:space="preserve">
          <source>parents - A list of ArgumentParser objects whose arguments should also be included</source>
          <target state="translated">parent-인수도 포함되어야하는 ArgumentParser 객체 목록</target>
        </trans-unit>
        <trans-unit id="af0155dba0f70844d8be294bb74bf2a256f57f22" translate="yes" xml:space="preserve">
          <source>parser_class - The class to instantiate the parser (default: argparse.ArgumentParser)</source>
          <target state="translated">parser_class-파서를 인스턴스화하는 클래스 (기본값 : argparse.ArgumentParser)</target>
        </trans-unit>
        <trans-unit id="66a8e4ab807a3068f427103cd3859ae953863a36" translate="yes" xml:space="preserve">
          <source>parser_class - class which will be used to create sub-parser instances, by default the class of the current parser (e.g. ArgumentParser)</source>
          <target state="translated">parser_class-기본적으로 현재 파서의 클래스 (예 : ArgumentParser)로 하위 파서 인스턴스를 만드는 데 사용될 클래스</target>
        </trans-unit>
        <trans-unit id="9276bf97b120d6475223088f07c0888abdea6c5b" translate="yes" xml:space="preserve">
          <source>prefix_chars - The set of characters that prefix optional arguments (default: &quot;-&quot;)</source>
          <target state="translated">prefix_chars-선택적 인수 앞에 붙는 문자 집합 (기본값 : &quot;-&quot;)</target>
        </trans-unit>
        <trans-unit id="a8988ae12fb0997451ba9d150871f427e4105bb0" translate="yes" xml:space="preserve">
          <source>prog - The name of the program (default: sys.argv[0])</source>
          <target state="translated">prog-프로그램 이름 (기본값 : sys.argv [0])</target>
        </trans-unit>
        <trans-unit id="ae26143d33c9a0822ee23df3faaa9bd9f1b98adc" translate="yes" xml:space="preserve">
          <source>prog - usage information that will be displayed with sub-command help, by default the name of the program and any positional arguments before the subparser argument</source>
          <target state="translated">prog-기본적으로 프로그램 이름 및 하위 구문 분석기 인수 앞의 위치 인수와 함께 하위 명령 도움말과 함께 표시되는 사용법 정보</target>
        </trans-unit>
        <trans-unit id="cae819f1f59b40cf42ec0206828a41f33a10ce1f" translate="yes" xml:space="preserve">
          <source>required - Whether or not a subcommand must be provided, by default False (added in 3.7)</source>
          <target state="translated">필수-하위 명령을 제공해야하는지 여부, 기본적으로 False (3.7에 추가됨)</target>
        </trans-unit>
        <trans-unit id="56402d5511c6a2455803525df0b18682dadf54e8" translate="yes" xml:space="preserve">
          <source>required - Whether or not the command-line option may be omitted (optionals only).</source>
          <target state="translated">required-명령 줄 옵션을 생략 할 수 있는지 여부입니다 (선택 사항 만 해당).</target>
        </trans-unit>
        <trans-unit id="9c24ef0deb8e512ae7ff3e432925ddf6367d58a4" translate="yes" xml:space="preserve">
          <source>shares the &lt;em&gt;EXACT&lt;/em&gt; same API as &lt;strong&gt;argparse&lt;/strong&gt; using decorators</source>
          <target state="translated">데코레이터를 사용하여 &lt;strong&gt;argparse&lt;/strong&gt; 와 &lt;em&gt;정확히&lt;/em&gt; 동일한 API를 공유합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3d31e1394f8d3b448561e71ba4a2d6178fdaacd" translate="yes" xml:space="preserve">
          <source>supports callback callable instance binding with &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance forwarding</source>
          <target state="translated">&lt;strong&gt;argparse&lt;/strong&gt; 컨텍스트 또는 파서 인스턴스 전달 을 &lt;strong&gt;통한&lt;/strong&gt; 콜백 호출 가능 인스턴스 바인딩 지원</target>
        </trans-unit>
        <trans-unit id="710b9d92ee06c7e707c588e057074a5389c5820f" translate="yes" xml:space="preserve">
          <source>supports class callback method decoration and method instance binding with class instance forwarding (thank you &lt;a href=&quot;https://github.com/GrahamDumpleton&quot;&gt;Graham Dumpleton&lt;/a&gt; for &lt;a href=&quot;https://github.com/GrahamDumpleton/wrapt&quot;&gt;wrapt&lt;/a&gt;!)</source>
          <target state="translated">클래스 콜백 메소드 장식과 클래스 인스턴스 전송 바인딩 메서드 인스턴스를 지원 (당신에게 감사 &lt;a href=&quot;https://github.com/GrahamDumpleton&quot;&gt;그레이엄 Dumpleton을&lt;/a&gt; 위한 &lt;a href=&quot;https://github.com/GrahamDumpleton/wrapt&quot;&gt;wrapt&lt;/a&gt; !)</target>
        </trans-unit>
        <trans-unit id="686c12c6e2e8fcd4dcff231dfa1cb660b410b9e4" translate="yes" xml:space="preserve">
          <source>title - title for the sub-parser group in help output; by default &amp;ldquo;subcommands&amp;rdquo; if description is provided, otherwise uses title for positional arguments</source>
          <target state="translated">title-도움말 출력의 하위 구문 분석기 그룹 제목입니다. 설명이 제공되면 기본적으로 &quot;하위 명령&quot;, 그렇지 않으면 위치 인수에 제목을 사용함</target>
        </trans-unit>
        <trans-unit id="8a9de5198521fc780d0bedea49cfc46054bb885b" translate="yes" xml:space="preserve">
          <source>type - The type to which the command-line argument should be converted.</source>
          <target state="translated">type-명령 줄 인수를 변환해야하는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5d04ba015d06eb10afbbc2602bd53c84d1f5cd86" translate="yes" xml:space="preserve">
          <source>usage - The string describing the program usage (default: generated from arguments added to parser)</source>
          <target state="translated">usage-프로그램 사용을 설명하는 문자열 (기본값 : 파서에 추가 된 인수에서 생성됨)</target>
        </trans-unit>
        <trans-unit id="27b2990f4ef44e7d22e2448c29644f50b652da7c" translate="yes" xml:space="preserve">
          <source>wrapped - The callback callable (default: None)</source>
          <target state="translated">Wrapped-콜백 호출 가능 (기본값 : 없음)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
