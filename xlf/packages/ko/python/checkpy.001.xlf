<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/checkpy/">
    <body>
      <group id="checkpy">
        <trans-unit id="8c32c03f15296ba63092150af044908b009399e3" translate="yes" xml:space="preserve">
          <source>) which comes from the second returned value of the</source>
          <target state="translated">)의 두 번째 반환 값에서</target>
        </trans-unit>
        <trans-unit id="f774efd52c30ff0af5dd738658bce60b4bb104f2" translate="yes" xml:space="preserve">
          <source>), and takes in an instance of</source>
          <target state="translated">)의 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d0e0e61b86f4e7db2c572e70ef45f5d3fe99e350" translate="yes" xml:space="preserve">
          <source>, the corresponding test must be named</source>
          <target state="translated">, 해당 테스트의 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-디</target>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="b79513adcd30d4e4a93ad9fe521472456fec65b4" translate="yes" xml:space="preserve">
          <source>.
checkPy assumes that all methods in the test file are tests, as such one
should not use the</source>
          <target state="translated">. checkPy는 테스트 파일의 모든 메소드가 테스트라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="e035f162a21d714000ae586017a4d772055bb2a4" translate="yes" xml:space="preserve">
          <source>. Note that besides defining the</source>
          <target state="translated">. 정의하는 것 외에</target>
        </trans-unit>
        <trans-unit id="5fd68f5dc3139ab8eea6b7a12d89aca0289e9c1a" translate="yes" xml:space="preserve">
          <source>. Tests are executed in order,
lowest first.</source>
          <target state="translated">. 테스트는 가장 낮은 순서로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="08bba4d01d6358af274cafa772dba42c9590835c" translate="yes" xml:space="preserve">
          <source>. The abstract methods</source>
          <target state="translated">. 추상적 인 방법</target>
        </trans-unit>
        <trans-unit id="71c484208806666c3e00e862ea1a12fdccdf99be" translate="yes" xml:space="preserve">
          <source>. These provide the tester with
a function from the source file and the complete print output
respectively. Calling</source>
          <target state="translated">. 이들은 테스터에게 소스 파일의 기능과 전체 인쇄 출력을 각각 제공합니다. 부름</target>
        </trans-unit>
        <trans-unit id="55508ed4aee628adf0442ebac1ca8fce3ce66ff9" translate="yes" xml:space="preserve">
          <source>. This instance is provided by the decorator</source>
          <target state="translated">. 이 인스턴스는 데코레이터에서 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ea7d920bbe395ecf4a7202ebe07fc44f49f5ac6" translate="yes" xml:space="preserve">
          <source>A Python tool for running tests on Python source files. Intended to be
used by students whom are taking courses in the &lt;a href=&quot;http://www.mprog.nl/&quot;&gt;Minor
Programming&lt;/a&gt; at the
&lt;a href=&quot;http://www.uva.nl/&quot;&gt;UvA&lt;/a&gt;.</source>
          <target state="translated">Python 소스 파일에서 테스트를 실행하기위한 Python 도구입니다. &lt;a href=&quot;http://www.uva.nl/&quot;&gt;UvA&lt;/a&gt; 에서 &lt;a href=&quot;http://www.mprog.nl/&quot;&gt;마이너 프로그래밍&lt;/a&gt; 과정을 수강하는 학생들이 사용하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="500897887433b356acf8dc3d26762002a6dbcb9e" translate="yes" xml:space="preserve">
          <source>A simple python testing framework for educational purposes</source>
          <target state="translated">교육 목적을위한 간단한 파이썬 테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="80a125e26fbcde53d5990a5b8cf9c530e724139e" translate="yes" xml:space="preserve">
          <source>A test minimally consists of the following:</source>
          <target state="translated">테스트는 최소한 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="9ea26de5566952ec524cedbb60ee90bf6c1be0e2" translate="yes" xml:space="preserve">
          <source>An example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="abfbc9cc10d268194a81df74d099f579093f9007" translate="yes" xml:space="preserve">
          <source>Besides installing checkPy, you might want to download some tests along with it. Simply run checkPy with the</source>
          <target state="translated">checkPy를 설치하는 것 외에도 몇 가지 테스트를 함께 다운로드 할 수 있습니다. 간단히 checkPy를</target>
        </trans-unit>
        <trans-unit id="02f5e0261f73faae5ca4f0eb2c4e74dc8d76b0ac" translate="yes" xml:space="preserve">
          <source>CheckPy can download tests directly from Github repos.
The requirement is that a folder called</source>
          <target state="translated">CheckPy는 Github 저장소에서 직접 테스트를 다운로드 할 수 있습니다. 요구 사항은 폴더가</target>
        </trans-unit>
        <trans-unit id="d3cb925da056491c7c28fa02ee30e085a711911c" translate="yes" xml:space="preserve">
          <source>CheckPy docs</source>
          <target state="translated">CheckPy 문서</target>
        </trans-unit>
        <trans-unit id="7788da42edb51cb3bcca1a28fb20db81c5e695e7" translate="yes" xml:space="preserve">
          <source>Distributing tests</source>
          <target state="translated">테스트 배포</target>
        </trans-unit>
        <trans-unit id="e0b445fe9b204acfa03314501cac034abed15c87" translate="yes" xml:space="preserve">
          <source>Execution of tests can be made dependable on the outcome of other
tests</source>
          <target state="translated">테스트 실행은 다른 테스트의 결과에 따라 신뢰할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="379cb4aab81e17b849e0d4a8ff84a8ac4f6b2b3c" translate="yes" xml:space="preserve">
          <source>For inspiration inspect some existing collections like the tests for &lt;a href=&quot;https://github.com/Jelleas/progNS2016Tests&quot;&gt;progNS&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jelleas/progIKTests&quot;&gt;progIK&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jelleas/progbeta2017tests&quot;&gt;Semester of Code&lt;/a&gt; or &lt;a href=&quot;https://github.com/Jelleas/progBG2017Tests&quot;&gt;progBG&lt;/a&gt;.</source>
          <target state="translated">영감을 얻으 &lt;a href=&quot;https://github.com/Jelleas/progNS2016Tests&quot;&gt;려면 progNS&lt;/a&gt; , &lt;a href=&quot;https://github.com/Jelleas/progIKTests&quot;&gt;progIK&lt;/a&gt; , &lt;a href=&quot;https://github.com/Jelleas/progbeta2017tests&quot;&gt;Semester of Code&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/Jelleas/progBG2017Tests&quot;&gt;progBG에&lt;/a&gt; 대한 테스트와 같은 기존 컬렉션을 검사 하십시오 .</target>
        </trans-unit>
        <trans-unit id="56688b1b76d6fa12434bc0e45bb89821d8155ecd" translate="yes" xml:space="preserve">
          <source>From top to bottom:</source>
          <target state="translated">위에서 아래로 :</target>
        </trans-unit>
        <trans-unit id="079c5e7f2154d8fefc2dbba448dcf5cef30ca7b1" translate="yes" xml:space="preserve">
          <source>Full control over displayed information</source>
          <target state="translated">표시된 정보에 대한 모든 권한</target>
        </trans-unit>
        <trans-unit id="5859664f12dc5a3ec4504f6763db773490ef043b" translate="yes" xml:space="preserve">
          <source>Here the method</source>
          <target state="translated">여기 방법</target>
        </trans-unit>
        <trans-unit id="335680d9826bc72afa0a47b609f874389226ab40" translate="yes" xml:space="preserve">
          <source>If you are unsure whether multiple tests exist with the same name, you can target a specific test by specifying its module:</source>
          <target state="translated">이름이 같은 여러 테스트가 있는지 확실하지 않은 경우 모듈을 지정하여 특정 테스트를 대상으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc80c54bd1c08d2280dd8f3bf4ff2ba5c79c7425" translate="yes" xml:space="preserve">
          <source>If you want to test all files from a module within your current working directory, then this is the command for you:</source>
          <target state="translated">현재 작업 디렉토리 내의 모듈에서 모든 파일을 테스트하려면 다음 명령이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="8cdc50956a04bc61c5ba9f2c93bb74faac286af5" translate="yes" xml:space="preserve">
          <source>No infinite loops, automatically kills tests after a user defined timeout.</source>
          <target state="translated">무한 루프가 없으며 사용자 정의 시간 초과 후 자동으로 테스트를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="286c1e4a1a578d22aa2addd14e419bc888166a68" translate="yes" xml:space="preserve">
          <source>On line 6 the</source>
          <target state="translated">6 행에서</target>
        </trans-unit>
        <trans-unit id="feef1e4faa6499864863ba858c6e8d8da7ceb76f" translate="yes" xml:space="preserve">
          <source>On line 7 the</source>
          <target state="translated">7 행</target>
        </trans-unit>
        <trans-unit id="2fff8485ff7c4ee7ae3edfe688e80ae1c469fa9a" translate="yes" xml:space="preserve">
          <source>On line 8 the</source>
          <target state="translated">8 행</target>
        </trans-unit>
        <trans-unit id="59a74dbc311ccc39b5352e7e584a65eb7fb1af2f" translate="yes" xml:space="preserve">
          <source>Support for grouping tests in modules,
allowing the user to target tests from a specific module or run all tests in a module with a single command.</source>
          <target state="translated">모듈의 테스트 그룹화를 지원하여 사용자가 특정 모듈의 테스트를 대상으로 지정하거나 단일 명령으로 모듈의 모든 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ad9b05830ed531da6eb286f328a92f3c0dd8c60" translate="yes" xml:space="preserve">
          <source>Support for importing modules without executing scripts that are not
wrapped by</source>
          <target state="translated">래핑되지 않은 스크립트를 실행하지 않고 모듈 가져 오기 지원</target>
        </trans-unit>
        <trans-unit id="7fd6fbff76197b45aef8b82d50a7db2fbe4b17da" translate="yes" xml:space="preserve">
          <source>Support for ordering of tests</source>
          <target state="translated">테스트 주문 지원</target>
        </trans-unit>
        <trans-unit id="86a9dd7bd48023030726378dde8022585c1f5b5d" translate="yes" xml:space="preserve">
          <source>Support for overriding functions from imports in order to for
instance prevent blocking function calls</source>
          <target state="translated">예를 들어 함수 호출 차단을 방지하기 위해 가져 오기에서 함수 재정의 지원</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="cd22c07488d14a896df4e9763a8506c000747792" translate="yes" xml:space="preserve">
          <source>Test methods are discovered in checkPy by filename. If you want to test
a file called</source>
          <target state="translated">테스트 메서드는 checkPy에서 파일 이름으로 검색됩니다. 다음과 같은 파일을 테스트하려면</target>
        </trans-unit>
        <trans-unit id="9328d26707b809fd03bd31398451568a9db5462b" translate="yes" xml:space="preserve">
          <source>Testing CheckPy</source>
          <target state="translated">CheckPy 테스트</target>
        </trans-unit>
        <trans-unit id="01888f345be33f86bbb4be9b4583c73db3cb1a3b" translate="yes" xml:space="preserve">
          <source>Tests are kept up to date as checkpy will periodically look for updates from the downloaded test repos.</source>
          <target state="translated">checkpy는 다운로드 한 테스트 저장소에서 업데이트를 주기적으로 검색하므로 테스트는 최신 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="498f1f7a59308243320bb58163460ee0eba3cf9f" translate="yes" xml:space="preserve">
          <source>Tests in checkPy are collections of abstract methods that you as a test
designer need to implement. A test may look something like the
following:</source>
          <target state="translated">checkPy의 테스트는 테스트 디자이너가 구현해야하는 추상 메서드 모음입니다. 테스트는 다음과 같이 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b897fabf9d4a2e4927cb87d088f7b515cc3ed4d" translate="yes" xml:space="preserve">
          <source>The decorator</source>
          <target state="translated">데코레이터</target>
        </trans-unit>
        <trans-unit id="87337bde1dfbe4f8fa596f6974c377ba621fbbb2" translate="yes" xml:space="preserve">
          <source>The full scope of Python is available when designing tests</source>
          <target state="translated">테스트를 설계 할 때 Python의 전체 범위를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="846f2bf58609158a1aedf1db512263c984c2bcb1" translate="yes" xml:space="preserve">
          <source>The method definition on line 5 describes the name of the test
(</source>
          <target state="translated">5 행의 메소드 정의는 테스트의 이름을 설명합니다 (</target>
        </trans-unit>
        <trans-unit id="77831264361c48f62d018ae6e221da4905500146" translate="yes" xml:space="preserve">
          <source>The test designer need not concern herself with exception handling
and printing</source>
          <target state="translated">테스트 디자이너는 예외 처리 및 인쇄에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b271136effeb6bbfc859d8eb4d611dff82d818de" translate="yes" xml:space="preserve">
          <source>To simply test a single file, call:</source>
          <target state="translated">단일 파일을 간단히 테스트하려면 다음을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="60aabffa5965bc07ff0aaed6e9e2ea984305d50c" translate="yes" xml:space="preserve">
          <source>When providing a concrete implementation for the test method one should
take a closer look at</source>
          <target state="translated">테스트 방법에 대한 구체적인 구현을 제공 할 때 자세히 살펴보아야합니다.</target>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="translated">작문 시험</target>
        </trans-unit>
        <trans-unit id="e4d1f0ce29b0356f5e998a976def0a8548d5bdc1" translate="yes" xml:space="preserve">
          <source>also provides several
decorators for introducing test dependencies such as</source>
          <target state="translated">또한 다음과 같은 테스트 종속성을 도입하기위한 여러 데코레이터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="676607532eaa840a235240e0de309cc29a4f639e" translate="yes" xml:space="preserve">
          <source>are
implemented as these are the only methods that necessarily require
implementation. For more information on tests and their abstract methods
you should refer to</source>
          <target state="translated">구현이 반드시 필요한 유일한 방법이기 때문에 구현됩니다. 테스트 및 그 추상 방법에 대한 자세한 내용은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86fd0dd374e7b71d4752d9214e52f40811ae44fc" translate="yes" xml:space="preserve">
          <source>arg as follows:</source>
          <target state="translated">arg는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a962e6f0ff32f7a0ce277392a90aee87d077fea1" translate="yes" xml:space="preserve">
          <source>argument and pass your github repo url.
Tests will then be automatically downloaded and installed.</source>
          <target state="translated">인수하고 github 저장소 URL을 전달하십시오. 그러면 테스트가 자동으로 다운로드되고 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="731a866b21495b062611d2ada703f687e74389e1" translate="yes" xml:space="preserve">
          <source>assertlib.py</source>
          <target state="translated">assertlib.py</target>
        </trans-unit>
        <trans-unit id="7e26a32f903aa5b45e9517c70d6ca5363fa20230" translate="yes" xml:space="preserve">
          <source>class and its abstract methods,</source>
          <target state="translated">클래스 및 추상 메서드,</target>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">포함</target>
        </trans-unit>
        <trans-unit id="57c2ad5e444197f9e4464b33f3125cbb9a7315f6" translate="yes" xml:space="preserve">
          <source>contains the number</source>
          <target state="translated">숫자를 포함</target>
        </trans-unit>
        <trans-unit id="cb329146a0dd0d566b0628744d67936558741ffa" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="translated">기술</target>
        </trans-unit>
        <trans-unit id="b55e22fe7830e8fe49f48f834b913ef8618f0521" translate="yes" xml:space="preserve">
          <source>exact</source>
          <target state="translated">정확한</target>
        </trans-unit>
        <trans-unit id="1301d50187580f7bae41f99a4057f7b6e06f0496" translate="yes" xml:space="preserve">
          <source>exists within the repo that contains only tests and folders (which checkpy treats as modules).
There must also be at least one release in the Github repo. Checkpy will automatically target the latest release.
Simply call checkPy with the optional</source>
          <target state="translated">테스트 및 폴더 (checkpy가 모듈로 취급) 만 포함하는 저장소 내에 존재합니다. Github 리포지토리에 릴리스가 하나 이상 있어야합니다. Checkpy는 자동으로 최신 릴리스를 대상으로합니다. 선택 사항으로 checkPy를 호출하기 만하면</target>
        </trans-unit>
        <trans-unit id="a602e216eb44a3ac5e096036eeaaef6bb9159677" translate="yes" xml:space="preserve">
          <source>fail</source>
          <target state="translated">불합격</target>
        </trans-unit>
        <trans-unit id="5f5f8758f5f22d523e531f58123b6db9161683a4" translate="yes" xml:space="preserve">
          <source>failed</source>
          <target state="translated">실패한</target>
        </trans-unit>
        <trans-unit id="0f5843fe4a2bd32647fb23a438d1e43b1342c4aa" translate="yes" xml:space="preserve">
          <source>foo.py</source>
          <target state="translated">foo.py</target>
        </trans-unit>
        <trans-unit id="68bfecc700027495301d759a9a354f67eec35305" translate="yes" xml:space="preserve">
          <source>fooTest.py</source>
          <target state="translated">fooTest.py</target>
        </trans-unit>
        <trans-unit id="5e16c675e856d10b08d41868ac540462c09e63c3" translate="yes" xml:space="preserve">
          <source>found in</source>
          <target state="translated">발견</target>
        </trans-unit>
        <trans-unit id="93b8047fef86875634ed5a5fc53865017a574524" translate="yes" xml:space="preserve">
          <source>from ... import ...</source>
          <target state="translated">...에서 가져 오기 ...</target>
        </trans-unit>
        <trans-unit id="3f4e3d78ccdcdb3302ed254fd2f5b4e863117c39" translate="yes" xml:space="preserve">
          <source>getFunction</source>
          <target state="translated">getFunction</target>
        </trans-unit>
        <trans-unit id="b2877bb7e8b5ba1bb13a94bbcb2251f588af993e" translate="yes" xml:space="preserve">
          <source>has checkpy import the to be
tested code and retrieves only said function from the resulting module.</source>
          <target state="translated">검사 할 코드를 가져오고 결과 모듈에서 해당 함수 만 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ba47034de070e96b2d83b1d79f1d28ec198dd3ba" translate="yes" xml:space="preserve">
          <source>if __name__ == &quot;__main__&quot;</source>
          <target state="translated">__name__ == &quot;__main__&quot;인 경우</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">정보</target>
        </trans-unit>
        <trans-unit id="224105300536953ae704e60c1184f0d9ced2b82e" translate="yes" xml:space="preserve">
          <source>is marked as test by the decorator</source>
          <target state="translated">데코레이터에 의해 테스트로 표시됨</target>
        </trans-unit>
        <trans-unit id="786cf6836e374dcffdbb211a683176fc6782040a" translate="yes" xml:space="preserve">
          <source>lib.py</source>
          <target state="translated">lib.py</target>
        </trans-unit>
        <trans-unit id="98feb6bf4fc447d0e031529db6aa832af91962ba" translate="yes" xml:space="preserve">
          <source>method is bound to a lambda which describes
the test that is to be executed. In this case asserting that the
print output of</source>
          <target state="translated">메서드는 실행될 테스트를 설명하는 람다에 바인딩됩니다. 이 경우 인쇄 출력이</target>
        </trans-unit>
        <trans-unit id="e220d90afbd544cec5568ad0d3dc8c197795a63b" translate="yes" xml:space="preserve">
          <source>method is bound to a lambda which when
called produces a string message describing the intent of the test.</source>
          <target state="translated">메서드는 호출 될 때 테스트의 의도를 설명하는 문자열 메시지를 생성하는 람다에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="db04601aa6c515cb0a383162b2684bbeffc0f59a" translate="yes" xml:space="preserve">
          <source>method is bound to a lambda. This method is
used to provide information that should be shown to the user in case
the test fails. The method takes in a
message (</source>
          <target state="translated">메서드는 람다에 바인딩됩니다. 이 방법은 테스트가 실패 할 경우 사용자에게 표시되어야하는 정보를 제공하는 데 사용됩니다. 이 메서드는 메시지 (</target>
        </trans-unit>
        <trans-unit id="0886b319a28f3988b873957457c30cbe1a5cbd4a" translate="yes" xml:space="preserve">
          <source>method. This message can be used to relay information found during
execution of the test to the user.</source>
          <target state="translated">방법. 이 메시지는 테스트 실행 중에 찾은 정보를 사용자에게 전달하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="881e5469e856323e68aa327322045d09cb85c2c3" translate="yes" xml:space="preserve">
          <source>must have failed for the following tests to execute.</source>
          <target state="translated">다음 테스트를 실행하려면 실패해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f4bd29a8175a25fd7af847fa026ded8c66949fb" translate="yes" xml:space="preserve">
          <source>on
the previous line.</source>
          <target state="translated">이전 줄에.</target>
        </trans-unit>
        <trans-unit id="9ea2c98d999cb83d85df8215c4a5bf41e29f0bcb" translate="yes" xml:space="preserve">
          <source>on line 3 defines a precondition. The test</source>
          <target state="translated">라인 3은 전제 조건을 정의합니다. 시험</target>
        </trans-unit>
        <trans-unit id="0ba62a4e77402764ecdaab91b300483dfca2c285" translate="yes" xml:space="preserve">
          <source>on line 4 prescribes that the following method
creates a test with order number</source>
          <target state="translated">라인 4는 다음 방법이 주문 번호로 테스트를 생성하도록 규정합니다.</target>
        </trans-unit>
        <trans-unit id="5d095255992bcc1b8b45960b33cfe00033299a10" translate="yes" xml:space="preserve">
          <source>outputOf</source>
          <target state="translated">outputOf</target>
        </trans-unit>
        <trans-unit id="48806d37531850dc952bafabf902471d7a65d349" translate="yes" xml:space="preserve">
          <source>provides a collection of assertions that one may find useful when
implementing tests.</source>
          <target state="translated">테스트를 구현할 때 유용 할 수있는 어설 션 모음을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bb2e50e8eee7b37c37950becc49bcac54607272f" translate="yes" xml:space="preserve">
          <source>provides a collection of useful functions to help implement tests. Most
notably</source>
          <target state="translated">테스트 구현에 도움이되는 유용한 기능 모음을 제공합니다. 특히</target>
        </trans-unit>
        <trans-unit id="5dc1d76eb453b2450ac415763839deb687b1fc4a" translate="yes" xml:space="preserve">
          <source>refers to the to be tested
source file. Besides resulting in a boolean indicating passing or
failing the test, the test method may also return a message. This
message can be used in other methods to provide valuable information
to the user. In this case however, no message is provided.</source>
          <target state="translated">테스트 할 소스 파일을 나타냅니다. 테스트 통과 또는 실패를 나타내는 부울 외에도 테스트 메서드는 메시지를 반환 할 수도 있습니다. 이 메시지는 다른 방법으로 사용자에게 중요한 정보를 제공하는 데 사용할 수 있습니다. 그러나이 경우 메시지가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cec35f4d623d8ec4dc9bf4426fdd1269fc4155c1" translate="yes" xml:space="preserve">
          <source>someTest</source>
          <target state="translated">someTest</target>
        </trans-unit>
        <trans-unit id="992457601ad0f6fce3e18c368045eb4e9f32bb3d" translate="yes" xml:space="preserve">
          <source>statement when importing
modules.</source>
          <target state="translated">모듈을 가져올 때 문.</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="1e0dc6b0d47dfe48c94dc909bdbc03fe4f69b2e2" translate="yes" xml:space="preserve">
          <source>test.fileName</source>
          <target state="translated">test.fileName</target>
        </trans-unit>
        <trans-unit id="a36e355ddb203d7d4133221f339dc406cb9f480f" translate="yes" xml:space="preserve">
          <source>test.py</source>
          <target state="translated">test.py</target>
        </trans-unit>
        <trans-unit id="04d13fd0aa6f0197cf2c999019a607c36c81eb9f" translate="yes" xml:space="preserve">
          <source>tests</source>
          <target state="translated">테스트</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
