<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/camai-castleguarders/">
    <body>
      <group id="camai-castleguarders">
        <trans-unit id="181e92678a1a0c5bc05bfd2d8012000a13aca2bb" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Alerts_Storage.png
:width: 50
:height: 150
:alt: Storage Alert Image</source>
          <target state="translated">.. image :: docs / Alerts_Storage.png : width : 50 : height : 150 : alt : Storage Alert Image</target>
        </trans-unit>
        <trans-unit id="4cba7969c2799287f18026a367919069feb447c9" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Alerts_Storage.png
:width: 50
:height: 150
:alt: Verbal Warning</source>
          <target state="translated">.. image :: docs / Alerts_Storage.png : width : 50 : height : 150 : alt : 구두 경고</target>
        </trans-unit>
        <trans-unit id="e39e4bd00cd2f24fd77cfb0a4c7ad5013e61d920" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Email_Alert_with_Image.png
:width: 50
:height: 150
:alt: Email Alert with Image</source>
          <target state="translated">.. image :: docs / Email_Alert_with_Image.png : width : 50 : height : 150 : alt : 이미지가있는 이메일 알림</target>
        </trans-unit>
        <trans-unit id="21c9b5617a7c79dc4b9264d640ff5d0c49cae40f" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Email_Alert_with_Video.png
:width: 50
:height: 150
:alt: Email Alert with Video</source>
          <target state="translated">.. image :: docs / Email_Alert_with_Video.png : width : 50 : height : 150 : alt : 동영상이 포함 된 이메일 알림</target>
        </trans-unit>
        <trans-unit id="9e32b31d2ca63a25a8c23c7e03225f4f6ed82e61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alerts&lt;/strong&gt;
The following types of alerts are supported.</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; 다음 유형의 경고가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="448687b4c05f31ae6733ace77b95d049d165884f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cameras&lt;/strong&gt;
There has to be one or more camera sections. This section contains camera specific configuration and policy information. The camera section consists of a main section and a sub section. The sub section is used to specify one or more objects of interest for this camera and the object specific settings.</source>
          <target state="translated">&lt;strong&gt;카메라&lt;/strong&gt; 카메라 섹션이 하나 이상 있어야합니다. 이 섹션에는 카메라 별 구성 및 정책 정보가 포함되어 있습니다. 카메라 섹션은 메인 섹션과 하위 섹션으로 구성됩니다. 하위 섹션은이 카메라에 대한 하나 이상의 관심 객체와 객체 별 설정을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f3b66e4719b5e51b849606011f6f323a95d1c6a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Choosing the Camera Operating Mode&lt;/strong&gt;
CamAi supports four operating modes. The mode is configurable on a per camera basis. The default mode generated by the</source>
          <target state="translated">&lt;strong&gt;카메라 작동 모드 선택&lt;/strong&gt; CamAi는 4 가지 작동 모드를 지원합니다. 모드는 카메라별로 구성 할 수 있습니다. 에 의해 생성 된 기본 모드</target>
        </trans-unit>
        <trans-unit id="32d74b1970382aa2b620afe7705d9839678490dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Email Section&lt;/strong&gt;
This contains one Email Sender and zero or more Email Recepient sections</source>
          <target state="translated">&lt;strong&gt;이메일 섹션&lt;/strong&gt; 여기에는 하나의 이메일 발신자와 0 개 이상의 이메일 수신자 섹션이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="482846d9be502df0df5c01156a8456ba8a55e27b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Manager Section&lt;/strong&gt;
This section has CamAi runtime defaults. If the user doesn't specify a per camera directory, the manager sections basedir variable is used as the parent for each camera.::</source>
          <target state="translated">&lt;strong&gt;관리자 섹션&lt;/strong&gt; 이 섹션에는 CamAi 런타임 기본값이 있습니다. 사용자가 카메라 별 디렉토리를 지정하지 않으면 관리자 섹션 basedir 변수가 각 카메라의 부모로 사용됩니다. ::</target>
        </trans-unit>
        <trans-unit id="d7a75f8fccd473422aa0805c263cbfc50e2c4e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Setting up Face Recognition&lt;/strong&gt;
Create a known faces directory. Follow the sample directory heirarchy.
Put this under camai directory for now. Pictures in standard
formats like jpg/gif/png/bmp should work. Each picture should only have
the face of the person whose name is the parent directory.::</source>
          <target state="translated">&lt;strong&gt;얼굴 인식 설정&lt;/strong&gt; 알려진 얼굴 디렉터리를 만듭니다. 샘플 디렉토리 계층을 따릅니다. 지금은 camai 디렉토리에 넣으십시오. jpg / gif / png / bmp와 같은 표준 형식의 사진이 작동합니다. 각 사진에는 이름이 상위 디렉토리 인 사람의 얼굴 만 있어야합니다. ::</target>
        </trans-unit>
        <trans-unit id="0e3e0f77d5848d0c894de6cac0337669a35233dd" translate="yes" xml:space="preserve">
          <source>=====
CamAI</source>
          <target state="translated">===== CamAI</target>
        </trans-unit>
        <trans-unit id="0d83fed963e78ba3a6d313951030d59987e66912" translate="yes" xml:space="preserve">
          <source>============
Installation</source>
          <target state="translated">============ 설치</target>
        </trans-unit>
        <trans-unit id="b97e5b53a98883ed99461f2a493fcd53fa8073a3" translate="yes" xml:space="preserve">
          <source>==============
Configuration</source>
          <target state="translated">============== 구성</target>
        </trans-unit>
        <trans-unit id="3dbc915ccfb311c841b83da473a97f6cb5f6b874" translate="yes" xml:space="preserve">
          <source>AI based Camera monitor and alerting system</source>
          <target state="translated">AI 기반 카메라 모니터 및 경고 시스템</target>
        </trans-unit>
        <trans-unit id="cbde445f0ca43b81c4a725fbf0be410fe1c70305" translate="yes" xml:space="preserve">
          <source>Below is an example configuration file that the camcli.py --discover option generates. The configuration file can be hand crafted. There are three main sections.</source>
          <target state="translated">다음은 camcli.py --discover 옵션이 생성하는 구성 파일의 예입니다. 구성 파일은 손으로 만들 수 있습니다. 세 가지 주요 섹션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5402fdbf5d70229a41a99e676d92993027eb719b" translate="yes" xml:space="preserve">
          <source>CamAi takes an AI first approach to monitoring and description of a video stream. Traditional open source packages like ZoneMinder and others largely rely on motion detection and handcrafted &quot;zones&quot; to try to reduce false detections. Modern Cameras support much higher resolutions (FHD, 4MP, 5MP, 4K etc) and this requires consistently low latency handling of the video streams, which the older systems seem to be having issues coping with.</source>
          <target state="translated">CamAi는 비디오 스트림의 모니터링 및 설명에 AI 우선 접근 방식을 사용합니다. ZoneMinder와 같은 기존의 오픈 소스 패키지는 오 탐지를 줄이기 위해 주로 모션 감지 및 수작업 &quot;영역&quot;에 의존합니다. 최신 카메라는 훨씬 더 높은 해상도 (FHD, 4MP, 5MP, 4K 등)를 지원하며,이를 위해서는 비디오 스트림의 지연 시간을 지속적으로 줄여야하는데, 이는 이전 시스템에서 대처하는 데 문제가있는 것처럼 보입니다.</target>
        </trans-unit>
        <trans-unit id="86cae3924e595a0e2af52b65e0ec41cc90314a85" translate="yes" xml:space="preserve">
          <source>CamAi tries to take advantange of the 'many cpu cores' and is heavily threaded to ensure reliable high resolution video stream processing of 'many' sources. It also uses more modern approaches like Instance Segmentation, Face Detection and Face Recognition to reduce the false alarm rates. While this requires a GPU/s to get reasonable performance, inference engines bundled with traditional cpu cores are the future. It takes a data science approach to enable learning over time what might be normal or otherwise and get closer to a human in taking actions. Some of these features are available in the &quot;cloud&quot; cameras like Ring :sup:&lt;code&gt;tm&lt;/code&gt;;, Nest :sup:&lt;code&gt;tm&lt;/code&gt;;, which requires the video streams to be sent to 'their' cloud, and come with many involuntary 'sharing' features. CamAi can do this all within the network, with or without any external connectivity for the camera streams.</source>
          <target state="translated">CamAi는 '많은 CPU 코어'의 장점을 취하려고하며 '다수'소스의 안정적인 고해상도 비디오 스트림 처리를 보장하기 위해 많은 스레드를 사용합니다. 또한 인스턴스 분할, 얼굴 감지 및 얼굴 인식과 같은 더 현대적인 접근 방식을 사용하여 잘못된 경보 비율을 줄입니다. 합리적인 성능을 얻으려면 GPU / s가 필요하지만 기존 CPU 코어와 함께 번들로 제공되는 추론 엔진은 미래입니다. 시간이 지남에 따라 정상일 수도 있고 그렇지 않을 수도있는 학습을 가능하게하고 행동을 취할 때 인간에게 더 가까이 다가 갈 수 있도록 데이터 과학 접근 방식이 필요합니다. 이러한 기능 중 일부는 Ring : sup : &lt;code&gt;tm&lt;/code&gt; ;, Nest : sup : &lt;code&gt;tm&lt;/code&gt; 과 같은 &quot;클라우드&quot;카메라에서 사용할 수 있습니다 .;, 비디오 스트림을 '자신의'클라우드로 전송해야하며 많은 비자발적 '공유'기능이 제공됩니다. CamAi는 카메라 스트림에 대한 외부 연결 유무에 관계없이 네트워크 내에서이 모든 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a916d053c58179702d52c67cac86a593b3e0927f" translate="yes" xml:space="preserve">
          <source>Install Nvidia CUDA for tensorflow acceleration
Cuda 10.0(not 10.1), CuDNN 7.5 and Tensorflow 1.13/1.14 was used for testing
Any compatible combination after these versions should work.</source>
          <target state="translated">Tensorflow 가속을위한 Nvidia CUDA 설치 Cuda 10.0 (10.1이 아님), CuDNN 7.5 및 Tensorflow 1.13 / 1.14는 이러한 버전이 작동 한 후 모든 호환 가능한 조합을 테스트하는 데 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="228ae36d683139e9ce3da91d2d68a8b312407042" translate="yes" xml:space="preserve">
          <source>Install Pip3 packages in requirements.txt
Optional but Recommended: Create a virtual env for camai
mkdir camai
# If you do not have virtualenv already, or want to use a more current version
pip3 install virtualenv --user
virtualenv -p python3.7 venv37</source>
          <target state="translated">requirements.txt에 Pip3 패키지 설치 선택 사항이지만 권장 : camai 용 가상 환경 생성 mkdir camai # virtualenv가 아직 없거나 최신 버전을 사용하려는 경우 pip3 install virtualenv --user virtualenv -p python3.7 venv37</target>
        </trans-unit>
        <trans-unit id="d82895eea9421706862b494836d0a974f7b3dff1" translate="yes" xml:space="preserve">
          <source>Install Ubuntu Packages in ubuntu_deps.txt.
bash ./ubuntu-deps.txt</source>
          <target state="translated">ubuntu_deps.txt에 Ubuntu 패키지를 설치합니다. bash ./ubuntu-deps.txt</target>
        </trans-unit>
        <trans-unit id="8780d6f35466ed5ad2837c69b8f8f6754579c976" translate="yes" xml:space="preserve">
          <source>It is certainly possible to try to 'graft' these features to existing systems. However it would have resulted in a mish mash of languages and technologies (perl/c++/windows only) or only partially open source. CamAI aims to have a more modern, maintainable and extensible code base that is fully be open source, and cross platform (over time) and modern, without having to jettison control and visibility to 'cloud' cameras.</source>
          <target state="translated">이러한 기능을 기존 시스템에 '접목'하는 것은 확실히 가능합니다. 그러나 그것은 언어와 기술 (perl / c ++ / windows 만 해당) 또는 부분적으로 오픈 소스의 혼란을 초래했을 것입니다. CamAI는 '클라우드'카메라에 대한 제어 및 가시성을 제거 할 필요없이 완전히 오픈 소스, 크로스 플랫폼 (시간이 지남에 따라) 및 현대적인보다 현대적이고 유지 관리 가능하며 확장 가능한 코드 기반을 보유하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="0aac8d3e306bb99a9576d02631562cac7afdb8ee" translate="yes" xml:space="preserve">
          <source>Quick Run
Discover onvif compatible cameras on your network and generate a configuration file</source>
          <target state="translated">빠른 실행 네트워크에서 onvif 호환 카메라 검색 및 구성 파일 생성</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="62a213509d3ffd4a20a29da48ee31cf971db43b1" translate="yes" xml:space="preserve">
          <source>The development has been primarily on a ubuntu 18.04 base.</source>
          <target state="translated">개발은 주로 우분투 18.04 기반에서 이루어졌습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
