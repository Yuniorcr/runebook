<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/3to2/">
    <body>
      <group id="3to2">
        <trans-unit id="5d32a5a1e93117c3d8f1b2dbf67c02ce69649966" translate="yes" xml:space="preserve">
          <source>3to2 will either produce working Python 2 code or warn about why it did not.
Any other behavior is a bug and should be reported.</source>
          <target state="translated">3to2는 작동하는 Python 2 코드를 생성하거나 그렇지 않은 이유에 대해 경고합니다. 다른 모든 동작은 버그이므로보고해야합니다.</target>
        </trans-unit>
        <trans-unit id="d79da395b5d7a09c6439a5f2660d8c568186ab7e" translate="yes" xml:space="preserve">
          <source>Abstract</source>
          <target state="translated">요약</target>
        </trans-unit>
        <trans-unit id="09ce2964297c2126f51a48d3ccfe7dcee26e49af" translate="yes" xml:space="preserve">
          <source>Because of the nature of the subject matter, 3to2 is not perfect, so check all
output manually.  3to2 does the bulk of the work, but there is code that simply
cannot be converted into a Python 2 equivalent for one reason or another.</source>
          <target state="translated">주제의 특성상 3to2는 완벽하지 않으므로 모든 출력을 수동으로 확인하십시오. 3to2는 대부분의 작업을 수행하지만 어떤 이유로 든 Python 2에 해당하는 코드로 변환 할 수없는 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">다운로드</target>
        </trans-unit>
        <trans-unit id="fff745f8d82f9e72354e81256a290ac8c5fb8045" translate="yes" xml:space="preserve">
          <source>If you are root, you can also install with &amp;ldquo;./setup.py build&amp;rdquo; and
&amp;ldquo;./setup.py install&amp;rdquo; (&amp;ldquo;make install&amp;rdquo; does this for you).</source>
          <target state="translated">루트 인 경우 &quot;./setup.py build&quot;및 &quot;./setup.py install&quot;을 사용하여 설치할 수도 있습니다 ( &quot;make install&quot;이 자동으로 수행).</target>
        </trans-unit>
        <trans-unit id="a9246ec7dab61d70d494cab1c0baf191af9f7fe3" translate="yes" xml:space="preserve">
          <source>Intention</source>
          <target state="translated">의향</target>
        </trans-unit>
        <trans-unit id="a44717f703852719fa3936b9e1b34cba93521b88" translate="yes" xml:space="preserve">
          <source>Refactors valid 3.x syntax into valid 2.x syntax, if a syntactical conversion is possible</source>
          <target state="translated">구문 변환이 가능한 경우 유효한 3.x 구문을 유효한 2.x 구문으로 리팩터링합니다.</target>
        </trans-unit>
        <trans-unit id="a1f4d8237776ada267a1d2353b374f807dd1af4b" translate="yes" xml:space="preserve">
          <source>Relationship with lib2to3</source>
          <target state="translated">lib2to3와의 관계</target>
        </trans-unit>
        <trans-unit id="1eaca0593e93f590a9f041d523f810ff00a157f3" translate="yes" xml:space="preserve">
          <source>Release for 2.7 and 3.x (last version I tested was 3.4.3): &lt;a href=&quot;https://pypi.python.org/pypi/3to2&quot;&gt;https://pypi.python.org/pypi/3to2&lt;/a&gt;</source>
          <target state="translated">2.7 및 3.x 릴리스 (테스트 한 마지막 버전은 3.4.3 임) : &lt;a href=&quot;https://pypi.python.org/pypi/3to2&quot;&gt;https://pypi.python.org/pypi/3to2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="312386841084261c610413fa4de8b7505f469407" translate="yes" xml:space="preserve">
          <source>Repository</source>
          <target state="translated">저장소</target>
        </trans-unit>
        <trans-unit id="0f27bc10f14c254c14f034f9646c47cde0e8258d" translate="yes" xml:space="preserve">
          <source>Run &amp;ldquo;./3to2&amp;rdquo; to convert stdin (&amp;ldquo;-&amp;ldquo;), files or directories given as
arguments.  By default, the tool outputs a unified diff-formatted patch on
standard output and a &amp;ldquo;what was changed&amp;rdquo; summary on standard error, but the
&amp;ldquo;-w&amp;rdquo; option can be given to write back converted files, creating
&amp;ldquo;.bak&amp;rdquo;-named backup files.</source>
          <target state="translated">&quot;./3to2&quot;를 실행하여 stdin ( &quot;-&quot;), 인수로 지정된 파일 또는 디렉토리를 변환합니다. 기본적으로이 도구는 표준 출력에 통합 된 diff 형식의 패치를 출력하고 표준 오류에 대한 &quot;변경된 사항&quot;요약을 출력하지만 &quot;-w&quot;옵션을 지정하여 변환 된 파일을 다시 작성하여 &quot;.bak&quot;라는 이름의 파일을 만들 수 있습니다. 백업 파일.</target>
        </trans-unit>
        <trans-unit id="11093ca51ef6a9aaf2640ccdc8ff879cfece3cc0" translate="yes" xml:space="preserve">
          <source>Some of the fixers for lib3to2 are directly copy-pasted from their 2to3
equivalent, with the element of PATTERN and the corresponding transformation
switched places.  Most fixers written for this program with a corresponding
2to3 fixer started from a clone of the 2to3 fixer, then modifying that fixer to
work in reverse.  I do not claim original authorship of these fixers, but I do
claim that they will work for 3to2, independent of how they work for 2to3.
In addition, this program depends on lib2to3 to implement fixers, test cases,
refactoring, and grammar.  Some portions of lib2to3 were modified to be more
generic to support lib3to2&amp;rsquo;s calls.</source>
          <target state="translated">lib3to2에 대한 일부 수정 프로그램은 PATTERN의 요소와 해당 변환 위치가 바뀐 2to3 등가물에서 직접 복사하여 붙여 넣습니다. 해당 2to3 수정 프로그램을 사용하여이 프로그램 용으로 작성된 대부분의 수정 프로그램은 2to3 수정 프로그램의 복제본에서 시작된 다음 해당 수정 프로그램이 반대로 작동하도록 수정합니다. 나는이 픽서의 원 저작권을 주장하지 않지만, 2to3에서 작동하는 방식에 관계없이 3to2에서 작동 할 것이라고 주장합니다. 또한이 프로그램은 lib2to3에 의존하여 수정 프로그램, 테스트 케이스, 리팩토링 및 문법을 구현합니다. lib2to3의 일부 부분은 lib3to2의 호출을 지원하기 위해 좀 더 일반적으로 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">상태</target>
        </trans-unit>
        <trans-unit id="26bd7ef8d4ac0808af99072183804f27491f3f67" translate="yes" xml:space="preserve">
          <source>There are some features of Python 3 that have no equivalent in Python 2, and
though lib3to2 tries to fix as many of these as it can, some features are
beyond its grasp.  This is especially true of features not readily detectable
by their syntax alone and extremely subtle features, so make sure that code
using lib3to2 is thoroughly tested.</source>
          <target state="translated">Python 2에는 동등한 기능이없는 Python 3의 몇 가지 기능이 있으며 lib3to2는 이러한 기능을 최대한 많이 수정하려고하지만 일부 기능은 이해가 불가능합니다. 이는 구문만으로는 쉽게 감지 할 수없는 기능과 매우 미묘한 기능에 특히 해당되므로 lib3to2를 사용하는 코드를 철저히 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="9bde9d84026a7218435fc84077b0a91f0c83f361" translate="yes" xml:space="preserve">
          <source>This branch of 3to2 must be run with Python 3.</source>
          <target state="translated">이 3to2 분기는 Python 3으로 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="aa764e653fec491971cb447a19121cd437784da7" translate="yes" xml:space="preserve">
          <source>This project came about as a Google Summer of Code (TM) project in 2009.</source>
          <target state="translated">이 프로젝트는 2009 년 Google Summer of Code (TM) 프로젝트로 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="ee1e2ace74a4b55a7704ec852f0760c6a4bfe1ee" translate="yes" xml:space="preserve">
          <source>To install locally (used for running tests as a non-privileged user), the
scripts assume you are using python3.1.  Modify accordingly if you are not.</source>
          <target state="translated">로컬로 설치하려면 (권한이없는 사용자로 테스트를 실행하는 데 사용됨) 스크립트는 python3.1을 사용하고 있다고 가정합니다. 그렇지 않은 경우 적절하게 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="032c442a2c2ecd1593875a4c51511194cc6ae504" translate="yes" xml:space="preserve">
          <source>You should use the latest version of lib2to3 from the Python sandbox rather
than the version (if any) that comes with Python.  As a convenience,
&amp;ldquo;two2three&amp;rdquo; from the Python Package Index is a recent enough version of lib2to3
renamed to avoid conflicts.  To use this package, replace all usage of
&amp;ldquo;lib2to3&amp;rdquo; with &amp;ldquo;two2three&amp;rdquo; within the 3to2 source files after installing
&amp;ldquo;two2three&amp;rdquo; from the PyPI.  Depending on the developer&amp;rsquo;s mood, a version of
3to2 may be provided with this change already made.</source>
          <target state="translated">Python과 함께 제공되는 버전 (있는 경우)이 아닌 Python 샌드 박스에서 최신 버전의 lib2to3을 사용해야합니다. 편의상 Python 패키지 색인의 &quot;two2three&quot;는 충돌을 피하기 위해 이름이 바뀐 lib2to3의 최신 버전입니다. 이 패키지를 사용하려면 PyPI에서 &quot;two2three&quot;를 설치 한 후 3to2 소스 파일에서 &quot;lib2to3&quot;의 모든 사용을 &quot;two2three&quot;로 바꾸십시오. 개발자의 기분에 따라 이미 변경된 3to2 버전이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e639e3f69482a71b4eb2d853c7ee23a837710ee6" translate="yes" xml:space="preserve">
          <source>lib3to2 is a set of fixers that are intended to backport code written for
Python version 3.x into Python version 2.x.  The final target 2.x version is
the latest version of the 2.7 branch, as that is the last release in the Python
2.x branch.  Some attempts have been made, however, to make code compatible as
much as possible with versions of Python back to 2.5, and bug reports are still
welcome for Python features only present in 2.6+ that are not addressed by
lib3to2.</source>
          <target state="translated">lib3to2는 Python 버전 3.x 용으로 작성된 코드를 Python 버전 2.x로 백 포트하기위한 수정 프로그램 세트입니다. 최종 타겟 2.x 버전은 Python 2.x 브랜치의 마지막 릴리스 인 2.7 브랜치의 최신 버전입니다. 그러나 코드를 가능한 한 많이 파이썬 2.5 버전과 호환되도록 만들려는 시도가 있었으며, lib3to2에서 해결되지 않은 2.6 이상에만있는 Python 기능에 대한 버그 보고서는 여전히 환영합니다.</target>
        </trans-unit>
        <trans-unit id="ec8f4020ddbd2de6d843c95a71a9925fc60150b1" translate="yes" xml:space="preserve">
          <source>lib3to2 is intended to be a tool in the process of developing code that is
backwards-compatible between Python 3 and Python 2.  It is not intended to be a
complete solution for directly backporting Python 3 code, though it can often
be used for this purpose without issue.  Sufficiently large packages should be
developed with lib3to2 used throughout the process to avoid backwards-
incompatible code from becoming too embedded.</source>
          <target state="translated">lib3to2는 Python 3과 Python 2간에 역 호환되는 코드를 개발하는 과정에서 도구로 사용됩니다. Python 3 코드를 직접 백 포팅하기위한 완전한 솔루션은 아니지만이 목적으로 자주 사용할 수 있습니다. 문제없이. 이전 버전과 호환되지 않는 코드가 너무 삽입되는 것을 방지하기 위해 프로세스 전체에 사용되는 lib3to2로 충분히 큰 패키지를 개발해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c55caee792c770fd1c90ded2f80f93c63b8e8b8" translate="yes" xml:space="preserve">
          <source>lib3to2 resides at &lt;a href=&quot;http://bitbucket.org/amentajo/lib3to2&quot;&gt;http://bitbucket.org/amentajo/lib3to2&lt;/a&gt;, where the bug tracker
can be found at &lt;a href=&quot;http://bitbucket.org/amentajo/lib3to2/issues&quot;&gt;http://bitbucket.org/amentajo/lib3to2/issues&lt;/a&gt;</source>
          <target state="translated">lib3to2는 &lt;a href=&quot;http://bitbucket.org/amentajo/lib3to2&quot;&gt;http://bitbucket.org/amentajo/lib3to2&lt;/a&gt; 에 있으며 버그 추적기는 &lt;a href=&quot;http://bitbucket.org/amentajo/lib3to2/issues&quot;&gt;http://bitbucket.org/amentajo/lib3to2/issues&lt;/a&gt; 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb896c55cb16aabdb584324ab217a31445fa1d16" translate="yes" xml:space="preserve">
          <source>lib3to2&amp;rsquo;s fixers are somewhat well-tested individually, but there is no testing
that is done on interactions between multiple fixers, so most of the bugs in
the future will likely be found there.</source>
          <target state="translated">lib3to2의 픽서는 개별적으로 잘 테스트되었지만 여러 픽서 간의 상호 작용에 대해 수행되는 테스트가 없으므로 향후 대부분의 버그가 그곳에서 발견 될 것입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
