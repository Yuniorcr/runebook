<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/esp32-machine-emulator/">
    <body>
      <group id="esp32-machine-emulator">
        <trans-unit id="a74eead1affc259b8ae0cd96e9a50190a446abd4" translate="yes" xml:space="preserve">
          <source>ESP32 Machine Emulator</source>
          <target state="translated">ESP32 머신 에뮬레이터</target>
        </trans-unit>
        <trans-unit id="ee083710cf57f22515aafee8c9a5c4f7ab030845" translate="yes" xml:space="preserve">
          <source>Emulating sending a GPIO digital out signal, and verifying the signal value.</source>
          <target state="translated">GPIO 디지털 출력 신호를 전송하고 신호 값을 확인하는 에뮬레이션.</target>
        </trans-unit>
        <trans-unit id="aaa558ed445bd952e613a371f20373f78a65bfc3" translate="yes" xml:space="preserve">
          <source>Emulating the read pulse value of an input pin, such as that received by
the echo pin of an HCSR04 Ultrasonic Distance Sensor.</source>
          <target state="translated">HCSR04 초음파 거리 센서의 에코 핀에서 수신 한 것과 같은 입력 핀의 읽기 펄스 값을 에뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="ec35c626d48559fe8dd0e31ff55213ab2a39186d" translate="yes" xml:space="preserve">
          <source>Extending the time library to support sleep_ns() and sleep_ms()</source>
          <target state="translated">sleep_ns () 및 sleep_ms ()를 지원하도록 시간 라이브러리 확장</target>
        </trans-unit>
        <trans-unit id="c7453dd02d811fe1970d7c71bfd25bf1a7c5d1a0" translate="yes" xml:space="preserve">
          <source>Full emulation of HCSR04 Ultrasonic Distance Sensor in examples</source>
          <target state="translated">예제에서 HCSR04 초음파 거리 센서의 전체 에뮬레이션</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="f3d6dee0cc15748b5feb9e9caf02c6b926d02d20" translate="yes" xml:space="preserve">
          <source>Here is the github repo for this project:
&lt;a href=&quot;https://github.com/tflander/esp32-machine-emulator&quot;&gt;https://github.com/tflander/esp32-machine-emulator&lt;/a&gt;</source>
          <target state="translated">이 프로젝트의 github 저장소는 다음과 같습니다. &lt;a href=&quot;https://github.com/tflander/esp32-machine-emulator&quot;&gt;https://github.com/tflander/esp32-machine-emulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcc76986de7699de787d44a107e1a95ff84a9507" translate="yes" xml:space="preserve">
          <source>Here is the project on PyPi:
&lt;a href=&quot;https://pypi.org/project/esp32-machine-emulator&quot;&gt;https://pypi.org/project/esp32-machine-emulator&lt;/a&gt;</source>
          <target state="translated">다음은 PyPi의 프로젝트입니다. &lt;a href=&quot;https://pypi.org/project/esp32-machine-emulator&quot;&gt;https://pypi.org/project/esp32-machine-emulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b50a5adc575cb249c1da38eead92b784535e1fa" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with the benefits of TDD or test-driving python, I
encourage you to take some time to Google and learn.  I prefer the pytest
library over the unittest library that comes with python3, but you are free
to test as you choose.</source>
          <target state="translated">TDD 또는 테스트 구동 Python의 이점에 익숙하지 않은 경우 Google에 시간을내어 배우는 것이 좋습니다. python3과 함께 제공되는 unittest 라이브러리보다 pytest 라이브러리를 선호하지만 원하는대로 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31800e4bdaf801712a70a5bf35976e05f091042c" translate="yes" xml:space="preserve">
          <source>Note that the examples are only in the GitHub repo, and are not part of the
PyPi distribution.</source>
          <target state="translated">예제는 GitHub 리포지토리에만 있으며 PyPi 배포의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="48012bbbd369e7cf9dbf01a37cf616f579aef634" translate="yes" xml:space="preserve">
          <source>Supported Features</source>
          <target state="translated">지원되는 기능</target>
        </trans-unit>
        <trans-unit id="4f938311b8a06de9f55ed657652ae4880b71a1c5" translate="yes" xml:space="preserve">
          <source>Take a look at the examples folder in the GitHub repository.  Like I said,
as of this writing, the library emulates a very small slice of the API,
so if you don&amp;rsquo;t see an example for something you want to do, the feature
is not available.  Feel free to contact me or fork the repo and send me
a pull request for the feature.</source>
          <target state="translated">GitHub 저장소의 예제 폴더를 살펴보십시오. 내가 말했듯이이 글을 쓰는 시점에서 라이브러리는 API의 아주 작은 조각을 에뮬레이트하므로 원하는 작업에 대한 예제가 표시되지 않으면 기능을 사용할 수 없습니다. 저에게 연락하거나 리포지토리를 포크하고 기능에 대한 풀 요청을 보내주십시오.</target>
        </trans-unit>
        <trans-unit id="3fbe6fb41426ad4026df9bd88424d993a9fffb8b" translate="yes" xml:space="preserve">
          <source>The purpose of this package is to enable you to test-drive (TDD) your
MicroPython code in an IDE running on your computer.  It seems a lot
of people are test-driving python, but not many are test-driving MicroPython.
That&amp;rsquo;s understandable, since many MicroPython projects are simple, and
emulating real hardware in a test environment is difficult.</source>
          <target state="translated">이 패키지의 목적은 컴퓨터에서 실행되는 IDE에서 MicroPython 코드를 테스트 드라이브 (TDD) 할 수 있도록하는 것입니다. 많은 사람들이 파이썬을 테스트하는 것처럼 보이지만 MicroPython을 테스트하는 사람은 많지 않습니다. 많은 MicroPython 프로젝트가 간단하고 테스트 환경에서 실제 하드웨어를 에뮬레이션하기가 어렵 기 때문에 이해할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="602a8b79861d980da2b562cad9bf4dfd3dea5350" translate="yes" xml:space="preserve">
          <source>The typical approach to emulating hardware is to replicate the hardware
programming interface (the API).  As of this writing, this library emulates
a very small slice of the ESP32 API.  I don&amp;rsquo;t know if the library will mature.
Hopefully I&amp;rsquo;ll either flesh it out, someone else will take over, or a
replacement will emerge.</source>
          <target state="translated">하드웨어 에뮬레이션에 대한 일반적인 접근 방식은 하드웨어 프로그래밍 인터페이스 (API)를 복제하는 것입니다. 이 글을 쓰는 시점에서이 라이브러리는 ESP32 API의 아주 작은 조각을 에뮬레이트합니다. 도서관이 성숙할지 모르겠습니다. 바라건대 내가 그것을 구체화하거나 다른 누군가가 인수하거나 교체가 나타날 것입니다.</target>
        </trans-unit>
        <trans-unit id="9c549c9dc3a66a7bd81a9e08299b99c86345cf30" translate="yes" xml:space="preserve">
          <source>esp32 machine package for test-driving code off-chip</source>
          <target state="translated">테스트 구동 코드 오프 칩을위한 esp32 머신 패키지</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
