<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/cornichon/">
    <body>
      <group id="cornichon">
        <trans-unit id="5b674af464f857fbe767b457f68f6885e23edc12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpp/cppunittest&lt;/code&gt; - Microsoft's Visual C++ test framework</source>
          <target state="translated">&lt;code&gt;cpp/cppunittest&lt;/code&gt; -Microsoft의 Visual C ++ 테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="1d686bf0b21cedb54729155346c4713036add90c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpp/googletest&lt;/code&gt; - Google Test</source>
          <target state="translated">&lt;code&gt;cpp/googletest&lt;/code&gt; -Google 테스트</target>
        </trans-unit>
        <trans-unit id="9aff7ef90acc07762174ff593b74b63e4a1f22ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cs/nunit&lt;/code&gt; - NUnit</source>
          <target state="translated">&lt;code&gt;cs/nunit&lt;/code&gt; -NUnit</target>
        </trans-unit>
        <trans-unit id="d53052e00b62f929b231dc6fbcd5286354fc71aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cs/unittesting&lt;/code&gt; - Microsoft's Unit Testing framework</source>
          <target state="translated">&lt;code&gt;cs/unittesting&lt;/code&gt; -Microsoft의 단위 테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="2ef482dfda7e149c6851d888c3b0fd0b455e3400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;py/pytests&lt;/code&gt; - pytest, the pytest framework</source>
          <target state="translated">&lt;code&gt;py/pytests&lt;/code&gt; -pytest, pytest 프레임 워크</target>
        </trans-unit>
        <trans-unit id="1f5c1b2e993990cd89b8d239308ad14599d0f676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;py/pyunit_tests&lt;/code&gt; - unittest, the standard Python unit testing framework</source>
          <target state="translated">&lt;code&gt;py/pyunit_tests&lt;/code&gt; - 표준 Python 단위 테스트 프레임 워크 인 unittest</target>
        </trans-unit>
        <trans-unit id="9097de20d4564b101eec14c958c4a60870dc008c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vb/nunit&lt;/code&gt; - NUnit</source>
          <target state="translated">&lt;code&gt;vb/nunit&lt;/code&gt; -NUnit</target>
        </trans-unit>
        <trans-unit id="a21ad50d10372282f150d39d7ada005236a79ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vb/unittesting&lt;/code&gt; - Microsoft's Unit Testing framework</source>
          <target state="translated">&lt;code&gt;vb/unittesting&lt;/code&gt; -Microsoft의 단위 테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="30c3de6f2d29fb0352487fe8491ad553cfbd7273" translate="yes" xml:space="preserve">
          <source>A small Gherkin DSL parser that generates stub code</source>
          <target state="translated">스텁 코드를 생성하는 작은 Gherkin DSL 파서</target>
        </trans-unit>
        <trans-unit id="e6f07f9846bac42cec319cce451c2cd774e26352" translate="yes" xml:space="preserve">
          <source>A small Gherkin DSL parser which reads in a feature file and produces stub code
against a given test framework. This allows BDD to be integrated into new and existing
projects without the need to depend on &lt;a href=&quot;https://cucumber.io/&quot;&gt;Cucumber&lt;/a&gt;.</source>
          <target state="translated">기능 파일을 읽고 주어진 테스트 프레임 워크에 대해 스텁 코드를 생성하는 작은 Gherkin DSL 파서. 이를 통해 &lt;a href=&quot;https://cucumber.io/&quot;&gt;Cucumber&lt;/a&gt; 에 의존 할 필요없이 BDD를 신규 및 기존 프로젝트에 통합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d174812bbefc5c454d236edbe5123586d3834be" translate="yes" xml:space="preserve">
          <source>A very basic test generator might look like</source>
          <target state="translated">매우 기본적인 테스트 생성기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4db1a9b924b6119cb64ba2df60a1197f8b337cb6" translate="yes" xml:space="preserve">
          <source>An explanation of those values can be printed,</source>
          <target state="translated">해당 값에 대한 설명을 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4bc4b1059294a74bcda71cd96a0c1b71757d094" translate="yes" xml:space="preserve">
          <source>C#</source>
          <target state="translated">씨#</target>
        </trans-unit>
        <trans-unit id="fc2b4216164cfb01ac45112054b3fedda8b56c86" translate="yes" xml:space="preserve">
          <source>C++</source>
          <target state="translated">C ++</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="9f5192005fd75cbd0a79f7da4d25535a1f9f6be1" translate="yes" xml:space="preserve">
          <source>Contributions are welcome. Please read the testing documentation.</source>
          <target state="translated">기부를 환영합니다. 테스트 문서를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="52ad050e786e39eb08930f8cf033920e58886248" translate="yes" xml:space="preserve">
          <source>Cornichon</source>
          <target state="translated">Cornichon</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">파이썬</target>
        </trans-unit>
        <trans-unit id="1932a47dccd68c9f52ee1f407179af558b734725" translate="yes" xml:space="preserve">
          <source>Test frameworks</source>
          <target state="translated">테스트 프레임 워크</target>
        </trans-unit>
        <trans-unit id="46204515d8aabcc8e75a2eeaf09f751708b122f1" translate="yes" xml:space="preserve">
          <source>The generated code is split into two files - the tests themselves and a set of scenario classes.
This is to allow for:</source>
          <target state="translated">생성 된 코드는 테스트 자체와 시나리오 클래스 세트의 두 파일로 분할됩니다. 이것은 다음을 허용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="4fcbe10004d241841b4159d65f5aac93e18071e5" translate="yes" xml:space="preserve">
          <source>The list of available output types can be printed,</source>
          <target state="translated">사용 가능한 출력 유형 목록을 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd449d3bbb434bc7a7887397c6d1c45e61fec16" translate="yes" xml:space="preserve">
          <source>The parser is written in Python and loads plug-ins for the desired output type.</source>
          <target state="translated">파서는 Python으로 작성되고 원하는 출력 유형에 대한 플러그인을로드합니다.</target>
        </trans-unit>
        <trans-unit id="a21b4dce8bf3f6b790f36252b3300795d37359cd" translate="yes" xml:space="preserve">
          <source>The scenario classes are generated using &lt;code&gt;cpp/cppscenarios&lt;/code&gt;.</source>
          <target state="translated">시나리오 클래스는 &lt;code&gt;cpp/cppscenarios&lt;/code&gt; 를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d556ab7b2d092506fb74e9fe2addacdc5ba6b4c" translate="yes" xml:space="preserve">
          <source>The scenario classes are generated using &lt;code&gt;cs/csscenarios&lt;/code&gt;.</source>
          <target state="translated">시나리오 클래스는 &lt;code&gt;cs/csscenarios&lt;/code&gt; 를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff430f7318de3f0d237a1888b8cec604aaf94ce1" translate="yes" xml:space="preserve">
          <source>The scenario classes are generated using &lt;code&gt;py/pyscenarios&lt;/code&gt;.</source>
          <target state="translated">시나리오 클래스는 &lt;code&gt;py/pyscenarios&lt;/code&gt; 를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1de2e8f0a6d356c5647a9df9f375c205681912d2" translate="yes" xml:space="preserve">
          <source>The scenario classes are generated using &lt;code&gt;vb/vbscenarios&lt;/code&gt;.</source>
          <target state="translated">시나리오 클래스는 &lt;code&gt;vb/vbscenarios&lt;/code&gt; 를 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c30a29bc56e2ca51ca7b8918bde75e8b331a893b" translate="yes" xml:space="preserve">
          <source>The supported frameworks are:</source>
          <target state="translated">지원되는 프레임 워크는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8a22a7e01195e934caab8fd373994c26f532797" translate="yes" xml:space="preserve">
          <source>The values of the settings can be listed,</source>
          <target state="translated">설정 값을 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="fdb213bdcdf0cd2010aa6da6dd451da89155bcc7" translate="yes" xml:space="preserve">
          <source>Visual Basic</source>
          <target state="translated">비주얼 베이직</target>
        </trans-unit>
        <trans-unit id="c68f1d6fb5ea905c6c7a8c6f081dc8983fca30de" translate="yes" xml:space="preserve">
          <source>easier version control of the source code</source>
          <target state="translated">소스 코드의 더 쉬운 버전 관리</target>
        </trans-unit>
        <trans-unit id="62d05d1a7a117120eced3943fca4d882e74fd211" translate="yes" xml:space="preserve">
          <source>re-use of the scenario classes generation between unit test frameworks for the same language</source>
          <target state="translated">동일한 언어에 대한 단위 테스트 프레임 워크 간의 시나리오 클래스 생성 재사용</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
