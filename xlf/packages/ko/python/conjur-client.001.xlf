<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/conjur-client/">
    <body>
      <group id="conjur-client">
        <trans-unit id="03edf78efb5b87be0e2a141d7cad0ea3b644e211" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Status&lt;/strong&gt;: Alpha</source>
          <target state="translated">&lt;strong&gt;상태&lt;/strong&gt; : 알파</target>
        </trans-unit>
        <trans-unit id="4e4210652077688a9469c93ad9a639f1c1bad9aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: Naming and APIs are still subject to breaking changes!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;경고 : 이름 지정 및 API는 여전히 주요 변경 사항이 적용됩니다!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="3201128c5bfb6aa155bc7bcf49d0ec049b0e2485" translate="yes" xml:space="preserve">
          <source>APIs for interacting with the Conjur v5 appliance</source>
          <target state="translated">Conjur v5 어플라이언스와 상호 작용하기위한 API</target>
        </trans-unit>
        <trans-unit id="3bcd718d45a79aea0830d82491bcaea3e921cd44" translate="yes" xml:space="preserve">
          <source>Applies a file-based YAML to a named policy. This method only
supports additive changes. Result is a dictionary object constructed
from the returned JSON data.</source>
          <target state="translated">파일 기반 YAML을 명명 된 정책에 적용합니다. 이 방법은 추가 변경 만 지원합니다. 결과는 반환 된 JSON 데이터에서 생성 된 사전 객체입니다.</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="8e1aa66668c81460db74c880a06d1c679b86ea3b" translate="yes" xml:space="preserve">
          <source>CLI can either be used with the included executable script:</source>
          <target state="translated">CLI는 포함 된 실행 스크립트와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="99cf28c082332b4e4ff5bea2c6f7ea3225634123" translate="yes" xml:space="preserve">
          <source>Currently supported client methods:</source>
          <target state="translated">현재 지원되는 클라이언트 방법 :</target>
        </trans-unit>
        <trans-unit id="0497f9c6f240debffc9e9a2160d24cab3f0d8f5e" translate="yes" xml:space="preserve">
          <source>From PyPI</source>
          <target state="translated">PyPI에서</target>
        </trans-unit>
        <trans-unit id="d600deecd9fabec09865ba5fbee27a4731d8713b" translate="yes" xml:space="preserve">
          <source>From source</source>
          <target state="translated">소스에서</target>
        </trans-unit>
        <trans-unit id="a957c877b8144b3a9c1fe2947b6a17d05f9eb73f" translate="yes" xml:space="preserve">
          <source>Gets a variable value based on its ID. Variable is binary data
that should be decoded to your system's encoding (e.g.
&lt;code&gt;get(variable_id).decode('utf-8')&lt;/code&gt;.</source>
          <target state="translated">ID를 기반으로 변수 값을 가져옵니다. 변수는 시스템의 인코딩으로 디코딩되어야하는 바이너리 데이터입니다 (예 : &lt;code&gt;get(variable_id).decode('utf-8')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44a997b212f7645cb9715c97af416eb3cfd8217f" translate="yes" xml:space="preserve">
          <source>Gets multiple variable values based on their IDs. Variables are
returned in a dictionary that maps the variable name to its value.</source>
          <target state="translated">ID를 기반으로 여러 변수 값을 가져옵니다. 변수 이름을 해당 값에 매핑하는 사전에 변수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="aaf1402743b6c36deab31403d97be38f795a79de" translate="yes" xml:space="preserve">
          <source>Installing the code</source>
          <target state="translated">코드 설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="b287913c2b8080d0bebcf2fd51f13e43c1419be5" translate="yes" xml:space="preserve">
          <source>Modifies an existing Conjur policy. Data may be explicitly
deleted using the !delete, !revoke, and !deny statements. Unlike
&quot;replace&quot; mode, no data is ever implicitly deleted. Result is a
dictionary object constructed from the returned JSON data.</source>
          <target state="translated">기존 Conjur 정책을 수정합니다. ! delete,! revoke 및! deny 문을 사용하여 데이터를 명시 적으로 삭제할 수 있습니다. &quot;바꾸기&quot;모드와 달리 데이터는 암시 적으로 삭제되지 않습니다. 결과는 반환 된 JSON 데이터에서 생성 된 사전 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1686b34adcbb7d06dfa2fc95312ed705e3d4c1c2" translate="yes" xml:space="preserve">
          <source>Most usage is done by creating a Client instance and then invoking the API on it:</source>
          <target state="translated">대부분의 사용은 Client 인스턴스를 만든 다음 API를 호출하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="bfeaf1511075b22ee5de187ec21d45aaa15f4f15" translate="yes" xml:space="preserve">
          <source>Note: On some machines, you have to use &lt;code&gt;pip&lt;/code&gt; instead of &lt;code&gt;pip3&lt;/code&gt; but in most cases,
you will want to use &lt;code&gt;pip3&lt;/code&gt; if it's available for your platform.</source>
          <target state="translated">참고 : 일부 머신에서는 &lt;code&gt;pip3&lt;/code&gt; 대신 &lt;code&gt;pip&lt;/code&gt; 를 사용해야 하지만 대부분의 경우 플랫폼에서 사용할 수있는 경우 &lt;code&gt;pip3&lt;/code&gt; 를 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1ffa41c88cf391197e1a91788c517ac6fcf43f70" translate="yes" xml:space="preserve">
          <source>Note: Policy to create the variable must have been already loaded
otherwise you will get a 404 error during invocation.</source>
          <target state="translated">참고 : 변수를 만드는 정책은 이미로드되어 있어야합니다. 그렇지 않으면 호출 중에 404 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d554e86625c57a868e44247858c5fd6a8f70d20e" translate="yes" xml:space="preserve">
          <source>Or through the installed module:</source>
          <target state="translated">또는 설치된 모듈을 통해 :</target>
        </trans-unit>
        <trans-unit id="35b17543c9e56f9cbbf0319f3b093fedd2515d01" translate="yes" xml:space="preserve">
          <source>Python3-based API SDK for &lt;a href=&quot;https://www.conjur.org/&quot;&gt;Conjur OSS&lt;/a&gt;. The repo
also includes a self-contained CLI tool (&lt;code&gt;conjur-cli&lt;/code&gt;) that wraps the API
in a simple executable script/binary.</source>
          <target state="translated">Conjur &lt;a href=&quot;https://www.conjur.org/&quot;&gt;OSS&lt;/a&gt; 용 Python3 기반 API SDK . 저장소에는 API를 간단한 실행 스크립트 / 바이너리로 래핑 하는 자체 포함 된 CLI 도구 ( &lt;code&gt;conjur-cli&lt;/code&gt; ) 도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e77e32f8f068572e8d38bab12b9400b289c9ed84" translate="yes" xml:space="preserve">
          <source>Replaces a named policy with one from the provided file. This is
usually a destructive invocation. Result is a dictionary object
constructed from the returned JSON data.</source>
          <target state="translated">명명 된 정책을 제공된 파일의 정책으로 바꿉니다. 이것은 일반적으로 파괴적인 호출입니다. 결과는 반환 된 JSON 데이터에서 생성 된 사전 객체입니다.</target>
        </trans-unit>
        <trans-unit id="454c4dc1d5bf03565f773c8d3590fda23dc65eca" translate="yes" xml:space="preserve">
          <source>Returns a Python list of all the available resources for the current
account.</source>
          <target state="translated">현재 계정에 사용할 수있는 모든 리소스의 Python 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a44ab1dcd425b49639c7e14620682b9cdd2ce37" translate="yes" xml:space="preserve">
          <source>Sets a variable to a specific value based on its ID.</source>
          <target state="translated">ID를 기반으로 변수를 특정 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="09cca4762120f40d52f8446ac381772ea4caee20" translate="yes" xml:space="preserve">
          <source>This project is &lt;a href=&quot;LICENSE.md&quot;&gt;licensed under Apache License v2.0&lt;/a&gt;</source>
          <target state="translated">이 프로젝트는 &lt;a href=&quot;LICENSE.md&quot;&gt;Apache License v2.0에 따라 사용&lt;/a&gt; 이 허가되었습니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="e66f898347ea7ec3c164b3317ecd90a716b0bfe5" translate="yes" xml:space="preserve">
          <source>We store instructions for development and guidelines for how to build and test this
project in the &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; - please refer to that document
if you would like to contribute.</source>
          <target state="translated">&lt;a href=&quot;CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; 에이 프로젝트를 빌드하고 테스트하는 방법에 대한 개발 지침과 지침을 저장합니다. 기여 하려면 해당 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c5704bb2af382b2abde6c52cb11ac68740d967c5" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;.netrc&lt;/code&gt; and &lt;code&gt;.conjurrc&lt;/code&gt; settings</source>
          <target state="translated">로 &lt;code&gt;.netrc&lt;/code&gt; 및 &lt;code&gt;.conjurrc&lt;/code&gt; 설정</target>
        </trans-unit>
        <trans-unit id="409f2746956d65d409e1fa6a649a91c62a08f644" translate="yes" xml:space="preserve">
          <source>With login ID and password</source>
          <target state="translated">로그인 ID와 비밀번호로</target>
        </trans-unit>
        <trans-unit id="337295ac41fadd5586ffdc7be18e845e83f6eae8" translate="yes" xml:space="preserve">
          <source>With login Id and API key</source>
          <target state="translated">로그인 ID 및 API 키 사용</target>
        </trans-unit>
        <trans-unit id="96fbcc86d5cc8bda99fe7d2a893ae93cb4680784" translate="yes" xml:space="preserve">
          <source>Write the code same as in the first example but create the client with the following arguments:</source>
          <target state="translated">첫 번째 예제와 동일한 코드를 작성하되 다음 인수를 사용하여 클라이언트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c7bfeaaa7d7b78215b67d0a0b167c7af322108b2" translate="yes" xml:space="preserve">
          <source>conjur-api-python3</source>
          <target state="translated">conjur-api-python3</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
