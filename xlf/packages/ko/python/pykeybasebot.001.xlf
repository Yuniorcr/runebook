<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pykeybasebot/">
    <body>
      <group id="pykeybasebot">
        <trans-unit id="8f42be4f0d8864aab92a11a441424626ccf11d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://flake8.pycqa.org&quot;&gt;flake8&lt;/a&gt; (linting)</source>
          <target state="translated">&lt;a href=&quot;http://flake8.pycqa.org&quot;&gt;flake8&lt;/a&gt; (linting)</target>
        </trans-unit>
        <trans-unit id="1b27ffe02ef85899f816ac86b3461f7ada595037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://pre-commit.com/#install&quot;&gt;Install&lt;/a&gt; the &lt;code&gt;pre-commit&lt;/code&gt; utility.</source>
          <target state="translated">&lt;a href=&quot;http://pre-commit.com/#install&quot;&gt;Install&lt;/a&gt; the &lt;code&gt;pre-commit&lt;/code&gt; utility.</target>
        </trans-unit>
        <trans-unit id="a51809d8c164eb0a6e6d4f719cc769ac0331bb2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.mypy-lang.org/&quot;&gt;mypy&lt;/a&gt; (Type checking)</source>
          <target state="translated">&lt;a href=&quot;http://www.mypy-lang.org/&quot;&gt;mypy&lt;/a&gt; (Type checking)</target>
        </trans-unit>
        <trans-unit id="59bf724e5fa178f7fbeb702297a165f68cdd10f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/psf/black&quot;&gt;black&lt;/a&gt; (code formatting)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/psf/black&quot;&gt;black&lt;/a&gt; (code formatting)</target>
        </trans-unit>
        <trans-unit id="463e0c60746e3a321efa8451572fcab0cc42477a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/timothycrosley/isort&quot;&gt;isort&lt;/a&gt; (import formatting)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/timothycrosley/isort&quot;&gt;isort&lt;/a&gt; (import formatting)</target>
        </trans-unit>
        <trans-unit id="b0d8454e1d7d61c4f43aadccd645b3531c58cb16" translate="yes" xml:space="preserve">
          <source>Configure via &lt;code&gt;pre-commit install&lt;/code&gt;</source>
          <target state="translated">Configure via &lt;code&gt;pre-commit install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="939939c8dd2b7d31c79f57029362a446f22f8177" translate="yes" xml:space="preserve">
          <source>Create a bot. You &lt;em&gt;must&lt;/em&gt; initialize this with the handler function to call with each event. You &lt;em&gt;may&lt;/em&gt; optionally pass in: (1) the username and/or paperkey for the bot's identity (it'll default to the currently logged-in user otherwise), (1) the event loop that you want new tasks to be sent to (this is necessary if you want to lock on async behavior -- see the examples), (2) the location of the running keybase app (defaults to &lt;code&gt;keybase&lt;/code&gt; which is fine if it's in your PATH), your user's home directory, or pid_file. These three are more useful for complicated local development with multiple accounts and less useful if you're running in a docker container or as the only user on your system.</source>
          <target state="translated">Create a bot. You &lt;em&gt;must&lt;/em&gt; initialize this with the handler function to call with each event. You &lt;em&gt;may&lt;/em&gt; optionally pass in: (1) the username and/or paperkey for the bot's identity (it'll default to the currently logged-in user otherwise), (1) the event loop that you want new tasks to be sent to (this is necessary if you want to lock on async behavior -- see the examples), (2) the location of the running keybase app (defaults to &lt;code&gt;keybase&lt;/code&gt; which is fine if it's in your PATH), your user's home directory, or pid_file. These three are more useful for complicated local development with multiple accounts and less useful if you're running in a docker container or as the only user on your system.</target>
        </trans-unit>
        <trans-unit id="9547dad2eafd09f9bfdf2df3fcfa4491776e7f29" translate="yes" xml:space="preserve">
          <source>Create a handler function that takes event objects and does something with them. This function will get called with your bot instance (described below) and the KbEvent instance.</source>
          <target state="translated">Create a handler function that takes event objects and does something with them. This function will get called with your bot instance (described below) and the KbEvent instance.</target>
        </trans-unit>
        <trans-unit id="68bc1413caf5224b095825c66cd18b46dedf6ac1" translate="yes" xml:space="preserve">
          <source>Definitely definitely check out the examples. We're really counting on them to make it clear how to use this library.</source>
          <target state="translated">Definitely definitely check out the examples. We're really counting on them to make it clear how to use this library.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="22b407769ad0867acb1f473424004ee51d767c09" translate="yes" xml:space="preserve">
          <source>Generally speaking, here's what you need to do:</source>
          <target state="translated">Generally speaking, here's what you need to do:</target>
        </trans-unit>
        <trans-unit id="7b83e451bd59b1db8c55633dbe015d70df66e139" translate="yes" xml:space="preserve">
          <source>If you are not already running on a logged-in device, you need to do that. We recommend doing this with the &lt;code&gt;oneshot&lt;/code&gt; command. It's in the examples.</source>
          <target state="translated">If you are not already running on a logged-in device, you need to do that. We recommend doing this with the &lt;code&gt;oneshot&lt;/code&gt; command. It's in the examples.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="67f5e16add68b4c3198151507581a71bb9ba8bd7" translate="yes" xml:space="preserve">
          <source>Most of the types the bot uses are generated from definitions defined in the &lt;a href=&quot;https://github.com/keybase/client/tree/master/protocol&quot;&gt;&lt;code&gt;protocol/&lt;/code&gt;&lt;/a&gt; directory inside the Keybase client repo. This ensures that the types that the bot uses are consistent across bots and always up to date with the output of the API.</source>
          <target state="translated">Most of the types the bot uses are generated from definitions defined in the &lt;a href=&quot;https://github.com/keybase/client/tree/master/protocol&quot;&gt; &lt;code&gt;protocol/&lt;/code&gt; &lt;/a&gt; directory inside the Keybase client repo. This ensures that the types that the bot uses are consistent across bots and always up to date with the output of the API.</target>
        </trans-unit>
        <trans-unit id="0f4792316b0fd9a4f8467cdb920da3f603ae4c8f" translate="yes" xml:space="preserve">
          <source>Officially supported Keybase python bot client library</source>
          <target state="translated">Officially supported Keybase python bot client library</target>
        </trans-unit>
        <trans-unit id="d7007d9478cf1b831323096540f0173fb9c7a72e" translate="yes" xml:space="preserve">
          <source>Once you have the right Python version, you can run:</source>
          <target state="translated">Once you have the right Python version, you can run:</target>
        </trans-unit>
        <trans-unit id="4ec818c8ae493c2ec43409c8b128b951a59da8fa" translate="yes" xml:space="preserve">
          <source>PRs are extremely welcome. To start:</source>
          <target state="translated">PRs are extremely welcome. To start:</target>
        </trans-unit>
        <trans-unit id="2bf64e1892a73af25e349a6cd0392f8972c160ff" translate="yes" xml:space="preserve">
          <source>Poetry can build and publish packages to PyPI. We've run into some issues with uploading to PyPI and Poetry, though, so for now we're recommending building with Poetry and uploading with Twine.</source>
          <target state="translated">Poetry can build and publish packages to PyPI. We've run into some issues with uploading to PyPI and Poetry, though, so for now we're recommending building with Poetry and uploading with Twine.</target>
        </trans-unit>
        <trans-unit id="338b45a6751558a0e49cb2d757f64736adc58f12" translate="yes" xml:space="preserve">
          <source>Publishing</source>
          <target state="translated">출판</target>
        </trans-unit>
        <trans-unit id="ed2d9a3125bdb75b90788fac51960527711f98c2" translate="yes" xml:space="preserve">
          <source>Python 3.7 or greater, please. And it's all async, so you'll need to call into it with that in mind.</source>
          <target state="translated">Python 3.7 or greater, please. And it's all async, so you'll need to call into it with that in mind.</target>
        </trans-unit>
        <trans-unit id="2a5fb5b2ac37d0605dd7882f1d6195f009b1e371" translate="yes" xml:space="preserve">
          <source>Remember that if you're making changes to pykeybasebot and want to test them
locally, you'll need to first uninstall previously installed pykeybasebot,
then install your local version:</source>
          <target state="translated">Remember that if you're making changes to pykeybasebot and want to test them locally, you'll need to first uninstall previously installed pykeybasebot, then install your local version:</target>
        </trans-unit>
        <trans-unit id="abc7b714e253b8ef498cd215b2fbf8d271861a08" translate="yes" xml:space="preserve">
          <source>Remove any existing pre-commit hooks via &lt;code&gt;rm .git/hooks/pre-commit&lt;/code&gt;</source>
          <target state="translated">Remove any existing pre-commit hooks via &lt;code&gt;rm .git/hooks/pre-commit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="3918fcfd9e48b8db981d8ac1532c29e32cb95f2b" translate="yes" xml:space="preserve">
          <source>Should you need to remove all the types for some reason, you can run &lt;code&gt;make clean&lt;/code&gt;.</source>
          <target state="translated">Should you need to remove all the types for some reason, you can run &lt;code&gt;make clean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b24a40cb327558a8e7473bdfda92577c6f953921" translate="yes" xml:space="preserve">
          <source>Static code analysis tools</source>
          <target state="translated">Static code analysis tools</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">테스팅</target>
        </trans-unit>
        <trans-unit id="49398e451b1b157bb9ace9ffaebe798d2b8bf4e9" translate="yes" xml:space="preserve">
          <source>Tests are admittedly weak. You could change that!</source>
          <target state="translated">Tests are admittedly weak. You could change that!</target>
        </trans-unit>
        <trans-unit id="eca9c5e45e4f50fdfd7edba1d9318fafdb2e2261" translate="yes" xml:space="preserve">
          <source>Then proceed as normal.</source>
          <target state="translated">Then proceed as normal.</target>
        </trans-unit>
        <trans-unit id="867f31acf0cc215242d206863e79c77dcb036d5f" translate="yes" xml:space="preserve">
          <source>Then you can generate the types by using the provided Makefile in this repo.</source>
          <target state="translated">Then you can generate the types by using the provided Makefile in this repo.</target>
        </trans-unit>
        <trans-unit id="cda0bd7bdaa4bc71ce0fbe9e83e23f1a863dbb20" translate="yes" xml:space="preserve">
          <source>There are also similar libraries for &lt;a href=&quot;https://github.com/keybase/keybase-bot&quot;&gt;JavaScript&lt;/a&gt; and &lt;a href=&quot;https://github.com/keybase/go-keybase-chat-bot&quot;&gt;Go&lt;/a&gt;.</source>
          <target state="translated">There are also similar libraries for &lt;a href=&quot;https://github.com/keybase/keybase-bot&quot;&gt;JavaScript&lt;/a&gt; and &lt;a href=&quot;https://github.com/keybase/go-keybase-chat-bot&quot;&gt;Go&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="412b3ff0090054daa57557277aea71e8e95471e6" translate="yes" xml:space="preserve">
          <source>This is the officially support Keybase Python library. It is an unopinionated, simple wrapper around the Keybase CLI API for creating an interactive bot or general scripting. This library does not attempt to do intent parsing or manage state at all. You'll have to build that yourself, but with the examples, this library will hopefully make whatever you want to build much much easier &lt;code&gt;:)&lt;/code&gt;.</source>
          <target state="translated">This is the officially support Keybase Python library. It is an unopinionated, simple wrapper around the Keybase CLI API for creating an interactive bot or general scripting. This library does not attempt to do intent parsing or manage state at all. You'll have to build that yourself, but with the examples, this library will hopefully make whatever you want to build much much easier &lt;code&gt;:)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ba2c09909ec8e3139a5951d0a783e9c024eb4e0" translate="yes" xml:space="preserve">
          <source>This library is very far from exhaustively covering the complete Keybase API, but it is our hope that it will be easy to add to (see chat_client.py for the pattern). It currently does reading from channels and writing messages/reactions pretty well. That's enough for the vast majority of basic functionality. Future work can add teams behavior, more wallet functionality (e.g. sending money), ...</source>
          <target state="translated">This library is very far from exhaustively covering the complete Keybase API, but it is our hope that it will be easy to add to (see chat_client.py for the pattern). It currently does reading from channels and writing messages/reactions pretty well. That's enough for the vast majority of basic functionality. Future work can add teams behavior, more wallet functionality (e.g. sending money), ...</target>
        </trans-unit>
        <trans-unit id="80c5c6e76f707846cb0001e265adcab94120fecb" translate="yes" xml:space="preserve">
          <source>This will set up a virtualenv for you and install all the dependencies needed into it!</source>
          <target state="translated">This will set up a virtualenv for you and install all the dependencies needed into it!</target>
        </trans-unit>
        <trans-unit id="d0e6787c4d4557e6488485965e902c42ef78d69c" translate="yes" xml:space="preserve">
          <source>To build the types for the Python bot, you'll need to clone the &lt;code&gt;client&lt;/code&gt; repo. This requires &lt;a href=&quot;https://golang.org/&quot;&gt;Go&lt;/a&gt; and your &lt;a href=&quot;https://github.com/golang/go/wiki/SettingGOPATH&quot;&gt;GOPATH&lt;/a&gt; to be set up.</source>
          <target state="translated">To build the types for the Python bot, you'll need to clone the &lt;code&gt;client&lt;/code&gt; repo. This requires &lt;a href=&quot;https://golang.org/&quot;&gt;Go&lt;/a&gt; and your &lt;a href=&quot;https://github.com/golang/go/wiki/SettingGOPATH&quot;&gt;GOPATH&lt;/a&gt; to be set up.</target>
        </trans-unit>
        <trans-unit id="fe4133dccfc8cb94f47fb73446d3116b6529493a" translate="yes" xml:space="preserve">
          <source>To run tests, type</source>
          <target state="translated">To run tests, type</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="7e2281587b0e68f164179e8021812ae8e44eab8b" translate="yes" xml:space="preserve">
          <source>We check all git commits with the above tools with
&lt;a href=&quot;http://pre-commit.com&quot;&gt;pre-commit.com&lt;/a&gt; pre-commit hooks.
To enable use of these pre-commit hooks:</source>
          <target state="translated">We check all git commits with the above tools with &lt;a href=&quot;http://pre-commit.com&quot;&gt;pre-commit.com&lt;/a&gt; pre-commit hooks. To enable use of these pre-commit hooks:</target>
        </trans-unit>
        <trans-unit id="412f52c7b8db0eacb6aa48d8f05759bd0edc2ce9" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://poetry.eustace.io/&quot;&gt;Poetry&lt;/a&gt; to handle our packaging. Go check out their website for installation instructions. To start Poetry, you'll need the &lt;code&gt;python&lt;/code&gt; executable in your path to link to Python 3.7. We recommend using &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;pyenv&lt;/a&gt; to handle different versions of Python on your machine. With pyenv installed, it should automatically set &lt;code&gt;python&lt;/code&gt; to 3.7 when you &lt;code&gt;cd&lt;/code&gt; into this repo.</source>
          <target state="translated">We use &lt;a href=&quot;https://poetry.eustace.io/&quot;&gt;Poetry&lt;/a&gt; to handle our packaging. Go check out their website for installation instructions. To start Poetry, you'll need the &lt;code&gt;python&lt;/code&gt; executable in your path to link to Python 3.7. We recommend using &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;pyenv&lt;/a&gt; to handle different versions of Python on your machine. With pyenv installed, it should automatically set &lt;code&gt;python&lt;/code&gt; to 3.7 when you &lt;code&gt;cd&lt;/code&gt; into this repo.</target>
        </trans-unit>
        <trans-unit id="a33280d56722fbe5058acac99d0c073f1b54fe96" translate="yes" xml:space="preserve">
          <source>We use a few different static analysis tools to perform linting, type-checking, formatting, etc. The correct versions should be install when you run &lt;code&gt;poetry install&lt;/code&gt;, but you'll probably want to configure your editor to work with:</source>
          <target state="translated">We use a few different static analysis tools to perform linting, type-checking, formatting, etc. The correct versions should be install when you run &lt;code&gt;poetry install&lt;/code&gt; , but you'll probably want to configure your editor to work with:</target>
        </trans-unit>
        <trans-unit id="79ce5a1b1488615fb47ee39fdce6e91e9f7e063a" translate="yes" xml:space="preserve">
          <source>and install the necessary dependencies for compiling the protocol files. This requires &lt;a href=&quot;https://nodejs.org&quot;&gt;node.js&lt;/a&gt; and &lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;.</source>
          <target state="translated">and install the necessary dependencies for compiling the protocol files. This requires &lt;a href=&quot;https://nodejs.org&quot;&gt;node.js&lt;/a&gt; and &lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="424b4ba3e40ce8820e59aeec63a57b75bb2f5fef" translate="yes" xml:space="preserve">
          <source>pre-commit hooks</source>
          <target state="translated">사전 커밋 후크</target>
        </trans-unit>
        <trans-unit id="c62b65d5b6eb721feb685d43bc34e68b10cf1d9e" translate="yes" xml:space="preserve">
          <source>pykeybasebot</source>
          <target state="translated">pykeybasebot</target>
        </trans-unit>
        <trans-unit id="c43c13c7c6a7aa0df3ad00ffce18c537307e4eb8" translate="yes" xml:space="preserve">
          <source>start the bot inside the asyncio event loop. This bot command wraps &lt;code&gt;keybase chat api-listen&lt;/code&gt;, (and it takes basically the same exact options) and fires off events to your handler function.</source>
          <target state="translated">start the bot inside the asyncio event loop. This bot command wraps &lt;code&gt;keybase chat api-listen&lt;/code&gt; , (and it takes basically the same exact options) and fires off events to your handler function.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
