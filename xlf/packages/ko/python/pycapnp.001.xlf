<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pycapnp/">
    <body>
      <group id="pycapnp">
        <trans-unit id="80e388e261b3f872d3aa55d0f31dd6f3a9025f29" translate="yes" xml:space="preserve">
          <source>(thanks to
@aldanor)</source>
          <target state="translated">(@aldanor에게 감사드립니다)</target>
        </trans-unit>
        <trans-unit id="561bc98009d65c10f0082296485225b460dee40a" translate="yes" xml:space="preserve">
          <source>(thanks to @plesner)</source>
          <target state="translated">(@plesner에게 감사드립니다)</target>
        </trans-unit>
        <trans-unit id="8e27c1ee5dcb928166f63701eade61f96fc4166f" translate="yes" xml:space="preserve">
          <source>(thanks to @tsh56)</source>
          <target state="translated">(@ tsh56에게 감사드립니다)</target>
        </trans-unit>
        <trans-unit id="afaf7f1e63ed625294d7ccc44f50f7cc00a30ed5" translate="yes" xml:space="preserve">
          <source>,
which behaves much like</source>
          <target state="translated">, 매우 유사하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bebe1dcce51e0eb89d463ca474d12c6c112426d4" translate="yes" xml:space="preserve">
          <source>, and then run</source>
          <target state="translated">을 실행 한 다음</target>
        </trans-unit>
        <trans-unit id="01065283d4bcc46003ec94fe6e1414260c51b9f2" translate="yes" xml:space="preserve">
          <source>, then
you need to cythonize fist. This can be done with:</source>
          <target state="translated">, 그런 다음 주먹을 cythonize해야합니다. 이것은 다음으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bf4dd236f33e89d0d71380a12ff017a2778cccb" translate="yes" xml:space="preserve">
          <source>. You can set the CC environment
variable to control which compiler is used, ie</source>
          <target state="translated">. CC 환경 변수를 설정하여 사용되는 컴파일러를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe91e22cc4d4bc8f5bdf0f1e28d3ceb0b0fbf60d" translate="yes" xml:space="preserve">
          <source>0.2.0 (2013-08-12)</source>
          <target state="translated">0.2.0 (2013-08-12)</target>
        </trans-unit>
        <trans-unit id="087a14d9c3bcfaf096707e3963c0b5d5adfe38ab" translate="yes" xml:space="preserve">
          <source>0.2.1 (2013-08-13)</source>
          <target state="translated">0.2.1 (2013-08-13)</target>
        </trans-unit>
        <trans-unit id="ea47fab679ddf52004cfc048d704cac4dfd0bd35" translate="yes" xml:space="preserve">
          <source>0.3.0 (2013-08-21)</source>
          <target state="translated">0.3.0 (2013-08-21)</target>
        </trans-unit>
        <trans-unit id="a0c0e3823f8ccfb7eb1923f91c692603ecec05a4" translate="yes" xml:space="preserve">
          <source>0.4.0 (2013-12-12)</source>
          <target state="translated">0.4.0 (2013-12-12)</target>
        </trans-unit>
        <trans-unit id="e1aaadce2b9dd5f1ddfb04362593fb132431cdfb" translate="yes" xml:space="preserve">
          <source>0.4.1 (2013-12-18)</source>
          <target state="translated">0.4.1 (2013-12-18)</target>
        </trans-unit>
        <trans-unit id="921935deb3e9385681d7dd78725941d9a7e05801" translate="yes" xml:space="preserve">
          <source>A cython wrapping of the C++ Cap'n Proto library</source>
          <target state="translated">C ++ Cap'n Proto 라이브러리의 cython 래핑</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">더하다</target>
        </trans-unit>
        <trans-unit id="9067f94a78526beb5391dba7904b084c1cc40f07" translate="yes" xml:space="preserve">
          <source>Add &amp;ndash;libcapnp-url option in installer to allow installing arbitrary
libcapnp versions</source>
          <target state="translated">임의의 libcapnp 버전을 설치할 수 있도록 설치 프로그램에 &amp;ndash;libcapnp-url 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f31df223f394b079f753a9263ea60327dc96fd01" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;DynamicStructBuilder.to&lt;/em&gt;bytes() and .from_bytes()</source>
          <target state="translated">추가 &lt;em&gt;DynamicStructBuilder.to가&lt;/em&gt; ) ((바이트) 및 .from_bytes</target>
        </trans-unit>
        <trans-unit id="93e8a84bfb32131d16bfccc638bf97c5d2d4e912" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;short&lt;/em&gt;str function for use in capnp_test_pycapnp.py</source>
          <target state="translated">capnp_test_pycapnp.py에서 사용할 &lt;em&gt;짧은&lt;/em&gt; str 함수 추가</target>
        </trans-unit>
        <trans-unit id="816cc91d335e9bbfd769d54400c7770c859023e5" translate="yes" xml:space="preserve">
          <source>Add Builder and Reader ABCs for each struct type</source>
          <target state="translated">각 구조체 유형에 대한 빌더 및 리더 ABC 추가</target>
        </trans-unit>
        <trans-unit id="e0ab5eefd918515c2ac6cdb620ba8157c5152c99" translate="yes" xml:space="preserve">
          <source>Add C++ library version check</source>
          <target state="translated">C ++ 라이브러리 버전 확인 추가</target>
        </trans-unit>
        <trans-unit id="b26d00126a3e5a280a2ee5f91059a6f6e5fdcf1b" translate="yes" xml:space="preserve">
          <source>Add DynamicOrphan</source>
          <target state="translated">DynamicOrphan 추가</target>
        </trans-unit>
        <trans-unit id="b350a19b134551e7c9e15a954952b31385676bf1" translate="yes" xml:space="preserve">
          <source>Add ListSchema class and schemas for native types under</source>
          <target state="translated">아래에 네이티브 유형에 대한 ListSchema 클래스 및 스키마 추가</target>
        </trans-unit>
        <trans-unit id="526d269a4e8b58606c99dc41d9ff0e9795ef8c2c" translate="yes" xml:space="preserve">
          <source>Add MANIFEST.in to include README</source>
          <target state="translated">README를 포함하도록 MANIFEST.in 추가</target>
        </trans-unit>
        <trans-unit id="8dcd14b9ea509c51049d5192e4b5de29393cd68c" translate="yes" xml:space="preserve">
          <source>Add ReaderOptions to read/read_packed/from_bytes</source>
          <target state="translated">read / read_packed / from_bytes에 ReaderOptions 추가</target>
        </trans-unit>
        <trans-unit id="f8ea105ae7359bde3c0e9da7ec27c7ccd930b515" translate="yes" xml:space="preserve">
          <source>Add _capnp for original Cython module. Meant for testing.</source>
          <target state="translated">원래 Cython 모듈에 _capnp를 추가합니다. 테스트를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="73aed92782256eef629dd1a1ebde173205498d51" translate="yes" xml:space="preserve">
          <source>Add a ton of docstrings and add to official docs</source>
          <target state="translated">수많은 독 스트링을 추가하고 공식 문서에 추가</target>
        </trans-unit>
        <trans-unit id="9426d9cc54268ed0065e38fab728e37d1d206ee8" translate="yes" xml:space="preserve">
          <source>Add ability to import modules with dashes or spaces. Use underscores
in place of them</source>
          <target state="translated">대시 또는 공백이있는 모듈을 가져 오는 기능을 추가합니다. 대신 밑줄 사용</target>
        </trans-unit>
        <trans-unit id="33aa31f390a3df155c2068272813ba38622c133b" translate="yes" xml:space="preserve">
          <source>Add accesible version numbers for C++ libcapnp</source>
          <target state="translated">C ++ libcapnp에 대한 액세스 가능한 버전 번호 추가</target>
        </trans-unit>
        <trans-unit id="73f2a504b568e19634cec91ef66003e8b0093826" translate="yes" xml:space="preserve">
          <source>Add automatic build of C++ libcapnp if it&amp;rsquo;s not detected on the
system. Also add flags &amp;ndash;force-bundled-libcapnp and
&amp;ndash;force-system-libcapnp respectively</source>
          <target state="translated">시스템에서 감지되지 않는 경우 C ++ libcapnp의 자동 빌드를 추가합니다. 또한 &amp;ndash;force-bundled-libcapnp 및 &amp;ndash;force-system-libcapnp 플래그를 각각 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6a2b8f248361ba10e2366632d12d6a3775e467b2" translate="yes" xml:space="preserve">
          <source>Add bootstrap RPC methods</source>
          <target state="translated">부트 스트랩 RPC 메서드 추가</target>
        </trans-unit>
        <trans-unit id="d28a94ae127aaea0eb4249f4e36480e6b8c01fa6" translate="yes" xml:space="preserve">
          <source>Add bootstrap method to TwoPartyServer</source>
          <target state="translated">TwoPartyServer에 부트 스트랩 메소드 추가</target>
        </trans-unit>
        <trans-unit id="9f39c6a92ff724e754816b1f870332f0c6341d21" translate="yes" xml:space="preserve">
          <source>Add capnp-json serializer script. Also fix bugs in from_dict</source>
          <target state="translated">capnp-json serializer 스크립트를 추가합니다. from_dict의 버그 수정</target>
        </trans-unit>
        <trans-unit id="c62b3b0f12fcdcfc2ebfc4d496bf283cb0802347" translate="yes" xml:space="preserve">
          <source>Add capnp.pxd for public declarations of cython classes</source>
          <target state="translated">cython 클래스의 공개 선언을 위해 capnp.pxd 추가</target>
        </trans-unit>
        <trans-unit id="f2bf2beb94a28785af61ccfbce0afe727f8db94c" translate="yes" xml:space="preserve">
          <source>Add defaults flag to capnp-json. Also remove &amp;lsquo;which&amp;rsquo; field</source>
          <target state="translated">capnp-json에 기본 플래그를 추가합니다. '어떤'필드도 제거</target>
        </trans-unit>
        <trans-unit id="d16e76476f36d6f2f37c1bc54fe0532e398e76bb" translate="yes" xml:space="preserve">
          <source>Add docstrings for new functions and _DynamicResizableListBuilder</source>
          <target state="translated">새 함수 및 _DynamicResizableListBuilder에 대한 독 스트링 추가</target>
        </trans-unit>
        <trans-unit id="989db7b0ff826560207cbb24a4124e585650bd81" translate="yes" xml:space="preserve">
          <source>Add from_dict</source>
          <target state="translated">from_dict 추가</target>
        </trans-unit>
        <trans-unit id="ce0a3ee44bcdf4c5c1c8eb14f40b96e828bb9aab" translate="yes" xml:space="preserve">
          <source>Add full orphan functionality. Also, allow special orphan lists</source>
          <target state="translated">완전한 고아 기능을 추가합니다. 또한 특수 고아 목록 허용</target>
        </trans-unit>
        <trans-unit id="9f91757de0e0caf9a5bae6b27e9edbf6465888ce" translate="yes" xml:space="preserve">
          <source>Add get_root_as_any to _MessageReader</source>
          <target state="translated">_MessageReader에 get_root_as_any 추가</target>
        </trans-unit>
        <trans-unit id="079a72a7b9a10ae836da4fcf50700feff3b64237" translate="yes" xml:space="preserve">
          <source>Add handling of DynamicObject</source>
          <target state="translated">DynamicObject 처리 추가</target>
        </trans-unit>
        <trans-unit id="df921d685148976853fe24644deddd4749a40d47" translate="yes" xml:space="preserve">
          <source>Add handling of constants in schemas</source>
          <target state="translated">스키마에서 상수 처리 추가</target>
        </trans-unit>
        <trans-unit id="b46088e4199c26a9714e93026d9fe463e9f6d133" translate="yes" xml:space="preserve">
          <source>Add import monkey patch function.</source>
          <target state="translated">가져 오기 원숭이 패치 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3ffdcf089cb588d3769b1bcf1b5bb7585eac9750" translate="yes" xml:space="preserve">
          <source>Add initial tests</source>
          <target state="translated">초기 테스트 추가</target>
        </trans-unit>
        <trans-unit id="cc2297dd9b3a73095f346ac69e9a21fad2dd71cf" translate="yes" xml:space="preserve">
          <source>Add intersphinx for linking to python docs</source>
          <target state="translated">Python 문서에 연결하기 위해 intersphinx 추가</target>
        </trans-unit>
        <trans-unit id="c35eba567ebde54f524ed10b3fa9e5fee8637f1f" translate="yes" xml:space="preserve">
          <source>Add not having installed the C++ libcapnp library to &amp;lsquo;Common
Problems&amp;rsquo;</source>
          <target state="translated">C ++ libcapnp 라이브러리를 설치하지 않은 경우 '일반적인 문제'에 추가</target>
        </trans-unit>
        <trans-unit id="f6eafeba384cd221a893ef0f154dd2d91fe81361" translate="yes" xml:space="preserve">
          <source>Add querying unnamed enums to structs</source>
          <target state="translated">구조체에 명명되지 않은 열거 형 쿼리 추가</target>
        </trans-unit>
        <trans-unit id="43d4fff4f9362549ece4c1a3c897c017d2216afa" translate="yes" xml:space="preserve">
          <source>Add read_multiple_bytes/read_multiple_bytes_packed methods</source>
          <target state="translated">read_multiple_bytes / read_multiple_bytes_packed 메소드 추가</target>
        </trans-unit>
        <trans-unit id="3fe7821f2ede51aee1bcdb94922ef013c4b87a3a" translate="yes" xml:space="preserve">
          <source>Add reraise_kj_exception to the prettyPrint functions. (thanks to
@kdienes)</source>
          <target state="translated">prettyPrint 함수에 reraise_kj_exception을 추가합니다. (@kdienes에게 감사드립니다)</target>
        </trans-unit>
        <trans-unit id="2eb2d602ea8d21a7c8cca89fb8e7bd13b4894cb3" translate="yes" xml:space="preserve">
          <source>Add shortcuts for reading from / writing to files. In Python, it
doesn&amp;rsquo;t make much sense to force people to muck around with
MessageReaders and MessageBuilders since everything is landing on the
heap anyway. Instead, let&amp;rsquo;s make it easy:
MyType.read[Packed]From(file) reads a file and returns a MyType
reader. MyType.newMessage() returns a MyType builder representing the
root of a new message. You can call this builder&amp;rsquo;s
write[Packed]To(file) method to write it to a file.</source>
          <target state="translated">파일 읽기 / 쓰기 단축키를 추가합니다. Python에서는 어쨌든 모든 것이 힙에 도착하기 때문에 사람들이 MessageReaders 및 MessageBuilder를 사용하도록 강제하는 것은별로 의미가 없습니다. 대신, 간단하게 만들어 보겠습니다. MyType.read [Packed] From (file)은 파일을 읽고 MyType 리더를 반환합니다. MyType.newMessage ()는 새 메시지의 루트를 나타내는 MyType 빌더를 리턴합니다. 이 빌더의 write [Packed] To (file) 메소드를 호출하여 파일에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42319c11dad5d84f5b44f0d83d97054c67984ff7" translate="yes" xml:space="preserve">
          <source>Add some useful _StructSchema, reader, and builder methods</source>
          <target state="translated">유용한 _StructSchema, 리더 및 빌더 메소드 추가</target>
        </trans-unit>
        <trans-unit id="916b384e7dd198aff976a743abe0886352d8d8db" translate="yes" xml:space="preserve">
          <source>Add support for buffers/memoryviews in</source>
          <target state="translated">버퍼 / 메모리 뷰에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="4ea7d004ecae3334ce08d87883f58673871d9cdc" translate="yes" xml:space="preserve">
          <source>Add support for segment (de)serialization (thanks to @gcv). See
to_segments/from_segments methods.</source>
          <target state="translated">세그먼트 (비) 직렬화에 대한 지원을 추가합니다 (@gcv 덕분에). to_segments / from_segments 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c1cce4c66cd7056659555397f723b8f20c496406" translate="yes" xml:space="preserve">
          <source>Add support for unix sockets in RPC</source>
          <target state="translated">RPC에서 유닉스 소켓에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="1f81c44bfa58e908c958166f41d4119933fb8d47" translate="yes" xml:space="preserve">
          <source>Add support for using keyword arguments with a named struct in an RPC</source>
          <target state="translated">RPC에서 명명 된 구조체와 함께 키워드 인수 사용에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="0efae34c68c25953e73e0342f158b9359e061c10" translate="yes" xml:space="preserve">
          <source>Add test for large reads</source>
          <target state="translated">대량 읽기에 대한 테스트 추가</target>
        </trans-unit>
        <trans-unit id="9c333f0aa441a6ad4bee41f32275ccaa1068fe9e" translate="yes" xml:space="preserve">
          <source>Add test script for testing with &lt;a href=&quot;https://github.com/kaos/capnp_test&quot;&gt;https://github.com/kaos/capnp_test&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kaos/capnp_test&quot;&gt;https://github.com/kaos/capnp_test&lt;/a&gt; 로 테스트 할 테스트 스크립트 추가</target>
        </trans-unit>
        <trans-unit id="1740e075d2250072b958f5d6e9819378ea2978d3" translate="yes" xml:space="preserve">
          <source>Add tests based on TestAllTypes from the C++ test.capnp. Fix problems
uncovered in capnp.pyx.</source>
          <target state="translated">C ++ test.capnp에서 TestAllTypes를 기반으로하는 테스트를 추가합니다. capnp.pyx에서 발견 된 문제를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="01de0be843ebf821d32a065aa748198705b9c758" translate="yes" xml:space="preserve">
          <source>Add traversal_limit_in_words and nesting_limit to RPC classes
(thanks to @asilversempirical)</source>
          <target state="translated">traversal_limit_in_words 및 nesting_limit를 RPC 클래스에 추가합니다 (@asilversempirical 덕분에).</target>
        </trans-unit>
        <trans-unit id="4dcac7e594ad7bb9910c07b4ea34899a879027a4" translate="yes" xml:space="preserve">
          <source>Add travis CI</source>
          <target state="translated">트래비스 CI 추가</target>
        </trans-unit>
        <trans-unit id="20ce38234dd0c3ce7b8606b1845a674ccb57ee39" translate="yes" xml:space="preserve">
          <source>Add warning when writing the same message more than once</source>
          <target state="translated">동일한 메시지를 두 번 이상 쓸 때 경고 추가</target>
        </trans-unit>
        <trans-unit id="6485d397da17e8f8e95fcbe7d3f0e93bec4074f8" translate="yes" xml:space="preserve">
          <source>Add warnings for using old restorer methods. You should use</source>
          <target state="translated">이전 복원 방법 사용에 대한 경고를 추가합니다. 당신은 사용해야합니다</target>
        </trans-unit>
        <trans-unit id="1960cbab0f334d98e20d0c364cf77e941e20ca6c" translate="yes" xml:space="preserve">
          <source>Added Python 3.4 to the travis build matrix</source>
          <target state="translated">Travis 빌드 매트릭스에 Python 3.4 추가</target>
        </trans-unit>
        <trans-unit id="43e6a6220d1306f74cb447eb7c3bd2a0f4b85828" translate="yes" xml:space="preserve">
          <source>Allow import paths in the schema loader</source>
          <target state="translated">스키마 로더에서 가져 오기 경로 허용</target>
        </trans-unit>
        <trans-unit id="ae451a3e5ac8237b8557913141a68d7b11517e4f" translate="yes" xml:space="preserve">
          <source>Allow restoring a null objectId by passing None to restore</source>
          <target state="translated">None을 전달하여 복원하여 null objectId 복원 허용</target>
        </trans-unit>
        <trans-unit id="488c39f93754c4c4ff7f480cff520114ac90f27d" translate="yes" xml:space="preserve">
          <source>Allow setting lists with python tuples (thanks to @chaoflow)</source>
          <target state="translated">파이썬 튜플이있는 설정 목록 허용 (@chaoflow 덕분에)</target>
        </trans-unit>
        <trans-unit id="0f1be5770fbee1e4a406609f8349d3d0c0725986" translate="yes" xml:space="preserve">
          <source>Allow setting of fields with python dicts.</source>
          <target state="translated">파이썬 사전으로 필드 설정을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="46cd58b57422283c68d064857c29c9de3e394325" translate="yes" xml:space="preserve">
          <source>Also change</source>
          <target state="translated">또한 변경</target>
        </trans-unit>
        <trans-unit id="8ec9756c123bd7a2500d339a37ab2b5bd13c3632" translate="yes" xml:space="preserve">
          <source>Also, pycapnp has gained RPC features that include pipelining and a
promise style API. Refer to the calculator example in the examples
directory for a much better demonstration:</source>
          <target state="translated">또한 pycapnp는 파이프 라이닝 및 promise 스타일 API를 포함하는 RPC 기능을 얻었습니다. 더 나은 데모를 보려면 examples 디렉토리의 계산기 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3302107da721d7d7d62101ea3d51f21550ccf41f" translate="yes" xml:space="preserve">
          <source>Binary Packages</source>
          <target state="translated">바이너리 패키지</target>
        </trans-unit>
        <trans-unit id="31b090102646dad52364a3dd5d2b53472fb5896b" translate="yes" xml:space="preserve">
          <source>Building a Python wheel distributiion:</source>
          <target state="translated">Python 휠 배포 빌드 :</target>
        </trans-unit>
        <trans-unit id="1e6ef923b2e4c87bac3a3e73a7b7952041db84f3" translate="yes" xml:space="preserve">
          <source>Building a dumb binary distribution:</source>
          <target state="translated">멍청한 바이너리 배포판 만들기 :</target>
        </trans-unit>
        <trans-unit id="d9f97d89715c9946fd250f14374a0825aecec4d4" translate="yes" xml:space="preserve">
          <source>Building and installation</source>
          <target state="translated">건물 및 설치</target>
        </trans-unit>
        <trans-unit id="7934474767e5e88ffd043854779f9e44cbcedb7a" translate="yes" xml:space="preserve">
          <source>Bump bundled capnp version to v0.5.3.1</source>
          <target state="translated">v0.5.3.1에 번들로 제공되는 capnp 버전 범프</target>
        </trans-unit>
        <trans-unit id="7de20bf70547c21dd294b1ee22f285522e74ebd6" translate="yes" xml:space="preserve">
          <source>Bump bundled capnp version to v0.6.1 (thanks to @E8Yuval)</source>
          <target state="translated">v0.6.1로 번들 된 capnp 버전을 범프 (@ E8Yuval 덕분에)</target>
        </trans-unit>
        <trans-unit id="4c398dbfb6e245c11486c3bfc6e67736675d1408" translate="yes" xml:space="preserve">
          <source>Bump version for bundled C++ libcapnp to v0.5.1</source>
          <target state="translated">번들 C ++ libcapnp를 v0.5.1에 ​​대한 범프 버전</target>
        </trans-unit>
        <trans-unit id="597213fb481f7d9a0a8146424075cf5f73a81e6b" translate="yes" xml:space="preserve">
          <source>CC=gcc-4.8 pip install pycapnp</source>
          <target state="translated">CC = gcc-4.8 pip 설치 pycapnp</target>
        </trans-unit>
        <trans-unit id="aabe04d0ee1e6511da67c8f24ba2db3493a705bc" translate="yes" xml:space="preserve">
          <source>CFLAGS</source>
          <target state="translated">CFLAGS</target>
        </trans-unit>
        <trans-unit id="825105366c3f26ec33c0fa0ba35eeda28dc43434" translate="yes" xml:space="preserve">
          <source>Change == on StructSchema to return cbool</source>
          <target state="translated">StructSchema에서 ==를 변경하여 cbool을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e8c8c09cee198748d72210effb483f5f91f8f634" translate="yes" xml:space="preserve">
          <source>Change DynamicValue.Reader lists to be returned as
_DynamicListReader</source>
          <target state="translated">DynamicValue.Reader 목록이 _DynamicListReader로 반환되도록 변경</target>
        </trans-unit>
        <trans-unit id="78aa115bf99c83aa70dd8a8543ebe3c04f0308d5" translate="yes" xml:space="preserve">
          <source>Change all references to old project name (change from
capnpc-python-cpp to pycapnp)</source>
          <target state="translated">이전 프로젝트 이름에 대한 모든 참조 변경 (capnpc-python-cpp에서 pycapnp로 변경)</target>
        </trans-unit>
        <trans-unit id="984fd843b95c01d073e464ffa125a4fa23bc7dd1" translate="yes" xml:space="preserve">
          <source>Change exception wrapper to detect and raise AttributeError for field
lookup exceptions (Fixes problem in Python3.x</source>
          <target state="translated">필드 조회 예외에 대한 AttributeError를 감지하고 발생하도록 예외 래퍼를 변경합니다 (Python3.x의 문제 수정</target>
        </trans-unit>
        <trans-unit id="9838e9b15edf9926b97f3e46f6b6191f63a6b905" translate="yes" xml:space="preserve">
          <source>Change import hook to require modules to end in &amp;lsquo;_capnp&amp;rsquo;</source>
          <target state="translated">모듈이 '_capnp'로 끝나도록 가져 오기 후크 변경</target>
        </trans-unit>
        <trans-unit id="581909daf0828cf38c4ca580abc77fb8288350ac" translate="yes" xml:space="preserve">
          <source>Change load to use a global SchemaParser. Make structs settable as
field</source>
          <target state="translated">전역 SchemaParser를 사용하도록 부하를 변경합니다. 구조체를 필드로 설정 가능하게 만들기</target>
        </trans-unit>
        <trans-unit id="b12ed933c55448c228a38a00f1d325585290ff12" translate="yes" xml:space="preserve">
          <source>Change naming for functions to conform to PEP 8. Also deprecate old
read/write API</source>
          <target state="translated">PEP 8을 준수하도록 함수의 이름 지정을 변경합니다. 또한 이전 읽기 / 쓰기 API를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="060fa30cef29610fb713810c988c7b88f8f2d261" translate="yes" xml:space="preserve">
          <source>Change naming of ReaderOption parameters to be pep8 compliant</source>
          <target state="translated">ReaderOption 매개 변수의 이름을 pep8과 호환되도록 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="c9fe936e059fbf8c82eb15063798dda2b65397fc" translate="yes" xml:space="preserve">
          <source>Change read_multiple and read_multiple_packed to copy by default</source>
          <target state="translated">read_multiple 및 read_multiple_packed를 기본적으로 복사하도록 변경합니다.</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="68e6b7a72a599174521c2e124750dc23a939c347" translate="yes" xml:space="preserve">
          <source>Common Problems</source>
          <target state="translated">일반적인 문제</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">데이터</target>
        </trans-unit>
        <trans-unit id="cda7c577483d8b9af79bb87980d4b35182fb4b48" translate="yes" xml:space="preserve">
          <source>Default to no longer using cython</source>
          <target state="translated">더 이상 cython을 사용하지 않는 기본값</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">개발</target>
        </trans-unit>
        <trans-unit id="4a16cc515d9bd8d9162f8aabe2fbef644ed9463a" translate="yes" xml:space="preserve">
          <source>Documentation/Example</source>
          <target state="translated">문서 / 예제</target>
        </trans-unit>
        <trans-unit id="ca9dcff393499f4d5a0c5e876a1412bc36153ee4" translate="yes" xml:space="preserve">
          <source>Expose SchemaParser in Cython header</source>
          <target state="translated">Cython 헤더에 SchemaParser 노출</target>
        </trans-unit>
        <trans-unit id="b74f029ae16d64c20272685ae7dcf0012337be46" translate="yes" xml:space="preserve">
          <source>Expose _StructSchema&amp;rsquo;s raw node</source>
          <target state="translated">_StructSchema의 원시 노드 노출</target>
        </trans-unit>
        <trans-unit id="4d3a635a1efed4a7bf2b5ee1311b5b3082166567" translate="yes" xml:space="preserve">
          <source>Finish up adding docstrings to all public classes/methods</source>
          <target state="translated">모든 공개 클래스 / 메소드에 독 스트링 추가 완료</target>
        </trans-unit>
        <trans-unit id="125ed25257e41e411a8b4a0f01f9c2f962b03805" translate="yes" xml:space="preserve">
          <source>First working version of capability interfaces</source>
          <target state="translated">기능 인터페이스의 첫 번째 작동 버전</target>
        </trans-unit>
        <trans-unit id="99a423164819c464ad91761b94c3e9df171d91a1" translate="yes" xml:space="preserve">
          <source>Fix</source>
          <target state="translated">고치다</target>
        </trans-unit>
        <trans-unit id="da81d95335b4024e7ecef862068d2a4af4957a44" translate="yes" xml:space="preserve">
          <source>Fix KjException init (missing wrapper). (thanks to @E8-Storage)</source>
          <target state="translated">KjException init (래퍼 누락) 수정. (@ E8-Storage 덕분에)</target>
        </trans-unit>
        <trans-unit id="f4c011704fe248edde656bf243778f63606be840" translate="yes" xml:space="preserve">
          <source>Fix Void namespace change</source>
          <target state="translated">Void 네임 스페이스 변경 수정</target>
        </trans-unit>
        <trans-unit id="6e343ad76bc1b2f60059895662b1a0d54a8d6689" translate="yes" xml:space="preserve">
          <source>Fix a memleak in RemotePromise (thanks to @E8Yuval)</source>
          <target state="translated">RemotePromise에서 memleak 수정 (@ E8Yuval 덕분에)</target>
        </trans-unit>
        <trans-unit id="9979d87239d617c22daff562871a25551ab50698" translate="yes" xml:space="preserve">
          <source>Fix a serious bug in TwoPartyServer that was preventing it from
working when passed a string address.</source>
          <target state="translated">TwoPartyServer의 심각한 버그를 수정하여 문자열 주소를 전달할 때 작동하지 못하게했습니다.</target>
        </trans-unit>
        <trans-unit id="9906139c50d90f58113be0894f6fd3c3099a9fab" translate="yes" xml:space="preserve">
          <source>Fix bug in exception handling for which(). Also standardize
exceptions.</source>
          <target state="translated">which ()에 대한 예외 처리 버그 수정. 또한 예외를 표준화하십시오.</target>
        </trans-unit>
        <trans-unit id="a63bdc35fe7ac8c1f275fbfa49ef9208ae96876a" translate="yes" xml:space="preserve">
          <source>Fix bug that prevented event loop from actually being lazy
initialized</source>
          <target state="translated">이벤트 루프가 실제로 지연 초기화되는 것을 막는 버그 수정</target>
        </trans-unit>
        <trans-unit id="fb142e6107c5fe90f78ae30076015cda7997d5a0" translate="yes" xml:space="preserve">
          <source>Fix bugs in</source>
          <target state="translated">버그 수정</target>
        </trans-unit>
        <trans-unit id="b330390c1e8ddf5fd287a944cf9bb0322c42292b" translate="yes" xml:space="preserve">
          <source>Fix bugs that were exposed by defining KJDEBUG (thanks @davidcarne
for finding this)</source>
          <target state="translated">KJDEBUG를 정의하여 노출 된 버그 수정 (이것을 찾아 주신 @davidcarne에게 감사드립니다)</target>
        </trans-unit>
        <trans-unit id="b4816e2b361a173cd701807cb1bfd563e1a1f70d" translate="yes" xml:space="preserve">
          <source>Fix build for clang/python3. Also remove -fpermissive</source>
          <target state="translated">clang / python3 용 빌드 수정. -fpermissive도 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="04520ef28abd4f52e865012ee79d89175244a93c" translate="yes" xml:space="preserve">
          <source>Fix build for new 0.21 release of Cython. 0.21 is now the minimum
supported version of Cython.</source>
          <target state="translated">Cython의 새 0.21 릴리스에 대한 빌드를 수정합니다. 0.21은 이제 Cython의 최소 지원 버전입니다.</target>
        </trans-unit>
        <trans-unit id="e71fb81f9c5640a4799c3021168cbf27b91d27cf" translate="yes" xml:space="preserve">
          <source>Fix build problem with Cython v0.24</source>
          <target state="translated">Cython v0.24의 빌드 문제 수정</target>
        </trans-unit>
        <trans-unit id="d51e0b8f230c5b87fead9bc5d28d7a1f27f2e0a2" translate="yes" xml:space="preserve">
          <source>Fix changed API for DynamicObject/ObjectPointer</source>
          <target state="translated">DynamicObject / ObjectPointer에 대한 변경된 API 수정</target>
        </trans-unit>
        <trans-unit id="278cd3518f3e3573779f4f7ef6d5a846f80849ca" translate="yes" xml:space="preserve">
          <source>Fix compilation problem with gcc 4.8</source>
          <target state="translated">gcc 4.8로 컴파일 문제 수정</target>
        </trans-unit>
        <trans-unit id="4fb85fab6abb8e1c4acfc5f4f4d2e6cf28f14df6" translate="yes" xml:space="preserve">
          <source>Fix enum interface change for benchmark</source>
          <target state="translated">벤치 마크에 대한 열거 형 인터페이스 변경 수정</target>
        </trans-unit>
        <trans-unit id="6962fcce41ef98e9cc2b1a9e67a35b6f543e6a99" translate="yes" xml:space="preserve">
          <source>Fix for the removal of DynamicUnion from the C++ API</source>
          <target state="translated">C ++ API에서 DynamicUnion 제거에 대한 수정</target>
        </trans-unit>
        <trans-unit id="cc025e876280f2abc246bf8bc566a8a0b62dad05" translate="yes" xml:space="preserve">
          <source>Fix handling of empty path &amp;lsquo;&amp;rsquo; in load_module</source>
          <target state="translated">load_module에서 빈 경로 ''처리 수정</target>
        </trans-unit>
        <trans-unit id="3991386454215cd0743fe3bae9925f4dee975826" translate="yes" xml:space="preserve">
          <source>Fix lists of lists or dicts for from_dict</source>
          <target state="translated">from_dict에 대한 목록 또는 사전 수정</target>
        </trans-unit>
        <trans-unit id="6877126d3665310094cf3fcfc482ec17271fcffb" translate="yes" xml:space="preserve">
          <source>Fix memleak with KjException (thanks to @tsh56)</source>
          <target state="translated">KjException으로 memleak 수정 (@ tsh56 덕분에)</target>
        </trans-unit>
        <trans-unit id="6d876e628244e1bef278bb2f7e5910dc282be3a3" translate="yes" xml:space="preserve">
          <source>Fix mistakenly discarding the file parameter on reads</source>
          <target state="translated">읽기시 파일 매개 변수를 실수로 버리는 문제 수정</target>
        </trans-unit>
        <trans-unit id="09bd7a4b86daaccab2e93e0712808e87f5497fd3" translate="yes" xml:space="preserve">
          <source>Fix new error with DynamicValue.Builder no longer being copyable</source>
          <target state="translated">DynamicValue.Builder가 더 이상 복사 할 수없는 새로운 오류 수정</target>
        </trans-unit>
        <trans-unit id="17c372cb8793a3bda75702f797bf185f2e1038a3" translate="yes" xml:space="preserve">
          <source>Fix possible crash due to bad destructor ordering in MessageReader
(by @JohnEmhoff)</source>
          <target state="translated">MessageReader의 잘못된 소멸자 순서로 인한 충돌 가능성 수정 (@JohnEmhoff 작성)</target>
        </trans-unit>
        <trans-unit id="24fa2d68e7f9390b89723a49b75c09b1a563db44" translate="yes" xml:space="preserve">
          <source>Fix possible recursive loop in KjException</source>
          <target state="translated">KjException에서 가능한 재귀 루프 수정</target>
        </trans-unit>
        <trans-unit id="892ef247589a433e136378c623cec7bd8303873a" translate="yes" xml:space="preserve">
          <source>Fix possible segfault when importing multiple schemas</source>
          <target state="translated">여러 스키마를 가져올 때 가능한 segfault 수정</target>
        </trans-unit>
        <trans-unit id="89932859d759ead073de8d24bc4968449ef0ecbc" translate="yes" xml:space="preserve">
          <source>Fix problem with to_dict</source>
          <target state="translated">to_dict로 문제 수정</target>
        </trans-unit>
        <trans-unit id="35db33a31ce07e51c96f9141c630100dd4659431" translate="yes" xml:space="preserve">
          <source>Fix problem with uninitialized unions in _from_dict</source>
          <target state="translated">_from_dict에서 초기화되지 않은 공용체 문제 수정</target>
        </trans-unit>
        <trans-unit id="ceb32556f310215cef9d38ce2fbebca9a690f514" translate="yes" xml:space="preserve">
          <source>Fix problems compiling with gcc4.7</source>
          <target state="translated">gcc4.7로 컴파일 문제 해결</target>
        </trans-unit>
        <trans-unit id="856884c881d070bb204b54367db31257f3f57e18" translate="yes" xml:space="preserve">
          <source>Fix problems with null characters in Text/Data fields. Fixes #19</source>
          <target state="translated">텍스트 / 데이터 필드의 null 문자 문제를 수정합니다. 수정 # 19</target>
        </trans-unit>
        <trans-unit id="aae5f49e5cd42bdfc0247c7c1ad3cc7fea516b2c" translate="yes" xml:space="preserve">
          <source>Fix response objects not referencing parents correctly</source>
          <target state="translated">상위를 올바르게 참조하지 않는 응답 개체 수정</target>
        </trans-unit>
        <trans-unit id="768388f12051afd9a4cd78771800af38f7ec489d" translate="yes" xml:space="preserve">
          <source>Fix setting string fields to support all types of strings</source>
          <target state="translated">모든 유형의 문자열을 지원하도록 설정 문자열 필드 수정</target>
        </trans-unit>
        <trans-unit id="85c1a1fc68e78d67f77ae79acbf617dcd719d4d7" translate="yes" xml:space="preserve">
          <source>Fix traversal_limit_in_words and nesting_limit being ignored by</source>
          <target state="translated">traversal_limit_in_words 및 nesting_limit가 무시되는 문제 수정</target>
        </trans-unit>
        <trans-unit id="5408ce257a5828c95c0e1f4e07fe80c6e20218c2" translate="yes" xml:space="preserve">
          <source>Fix warning from PyEventPort</source>
          <target state="translated">PyEventPort의 경고 수정</target>
        </trans-unit>
        <trans-unit id="cbd9aa0a2a624512ab797113c39f7c86d2baeb2c" translate="yes" xml:space="preserve">
          <source>Fixed upload to PyPi (forgot to cythonize)</source>
          <target state="translated">PyPi에 대한 고정 업로드 (cythonize를 잊음)</target>
        </trans-unit>
        <trans-unit id="e9439a94fbe73d000cbb03dca8a17ea3afb134f9" translate="yes" xml:space="preserve">
          <source>Forgot to change project name in setup.py</source>
          <target state="translated">setup.py에서 프로젝트 이름을 변경하는 것을 잊었습니다.</target>
        </trans-unit>
        <trans-unit id="2c100b94d7788af1be68d6b04fdde441372adff4" translate="yes" xml:space="preserve">
          <source>Handle AnyPointers better as arguments to RPC functions</source>
          <target state="translated">AnyPointer를 RPC 함수에 대한 인수로 더 잘 처리</target>
        </trans-unit>
        <trans-unit id="5e17a68a12065b8c94bc0db2c96aa603debd0223" translate="yes" xml:space="preserve">
          <source>If it fails with an error like</source>
          <target state="translated">다음과 같은 오류로 실패하면</target>
        </trans-unit>
        <trans-unit id="efcd57457d9c5b15dcbd2017debc780397be0078" translate="yes" xml:space="preserve">
          <source>If you get an error on installation like:</source>
          <target state="translated">설치시 다음과 같은 오류가 발생하는 경우 :</target>
        </trans-unit>
        <trans-unit id="9597ac7478b4aeead8c12b95cc2f62ec0be6e357" translate="yes" xml:space="preserve">
          <source>If you wish to install using the latest upstream C++ Cap&amp;rsquo;n Proto:</source>
          <target state="translated">최신 업스트림 C ++ Cap'n Proto를 사용하여 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="3031fd165ae6d22d6bd68a8e67434a4ba5478228" translate="yes" xml:space="preserve">
          <source>Implement &lt;strong&gt;str&lt;/strong&gt; and &lt;strong&gt;repr&lt;/strong&gt; for struct and list builders. &lt;strong&gt;str&lt;/strong&gt;
uses prettyPrint while &lt;strong&gt;repr&lt;/strong&gt; shows the type name and the
low-whitespace stringification. Also implement &lt;strong&gt;repr&lt;/strong&gt; for
StructSchema, just because why not?</source>
          <target state="translated">구조체 및 목록 작성기에 대한 &lt;strong&gt;str&lt;/strong&gt; 및 &lt;strong&gt;repr&lt;/strong&gt; 을 구현 합니다. &lt;strong&gt;str&lt;/strong&gt; 은 prettyPrint를 사용하는 반면 &lt;strong&gt;repr&lt;/strong&gt; 은 유형 이름과 낮은 공백 문자열을 표시합니다. StructSchema에 대한 &lt;strong&gt;repr&lt;/strong&gt; 도 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="866ff4822c4fdc5f5c5cc9ab1fadbe2a56e8c062" translate="yes" xml:space="preserve">
          <source>Include class attributes in &lt;strong&gt;dir&lt;/strong&gt;. This allows for code completion
of class methods (thanks to @chaoflow )</source>
          <target state="translated">&lt;strong&gt;dir에&lt;/strong&gt; 클래스 속성을 포함합니다 . 이것은 클래스 메소드의 코드 완성을 허용합니다 (@chaoflow 덕분에).</target>
        </trans-unit>
        <trans-unit id="a39b5767ec0b591802fe06c9662df16abdf5705c" translate="yes" xml:space="preserve">
          <source>Include the changelog in the manifest (should fix install problems if
pandoc is present)</source>
          <target state="translated">매니페스트에 변경 로그를 포함합니다 (pandoc이있는 경우 설치 문제를 수정해야 함).</target>
        </trans-unit>
        <trans-unit id="1a478bf16649280d1015af54dfc64996008582ef" translate="yes" xml:space="preserve">
          <source>Include the traceback in exceptions</source>
          <target state="translated">예외에 역 추적 포함</target>
        </trans-unit>
        <trans-unit id="6caa37ace6fd37d98c2c47f94a02fdda1ce69489" translate="yes" xml:space="preserve">
          <source>Inheritance now works correctly for interfaces (previously inherited
methods were inaccessible from pycapnp)</source>
          <target state="translated">이제 상속이 인터페이스에 대해 올바르게 작동합니다 (이전에는 pycapnp에서 상속 된 메서드에 액세스 할 수 없음).</target>
        </trans-unit>
        <trans-unit id="81d75a86cdff26f3efa66c5a9a6d4d5f6f3f5d89" translate="yes" xml:space="preserve">
          <source>Initial commit of docs</source>
          <target state="translated">문서의 초기 커밋</target>
        </trans-unit>
        <trans-unit id="447e4b80f74a219221c7158e64ef56de349db297" translate="yes" xml:space="preserve">
          <source>Initial working version</source>
          <target state="translated">초기 작업 버전</target>
        </trans-unit>
        <trans-unit id="c9ed1133f7991f7f9c724e45c485553491f248af" translate="yes" xml:space="preserve">
          <source>Initial working version of RPC</source>
          <target state="translated">RPC의 초기 작업 버전</target>
        </trans-unit>
        <trans-unit id="ddeac584a7177e36587a9dbd8736dcc17d3ffd3f" translate="yes" xml:space="preserve">
          <source>Install with</source>
          <target state="translated">함께 설치</target>
        </trans-unit>
        <trans-unit id="b32389286444506fb2c8d5f8ae4c713d855d2f28" translate="yes" xml:space="preserve">
          <source>Lowercase schema so it conforms to member naming conventions</source>
          <target state="translated">멤버 이름 지정 규칙을 준수하도록 소문자 스키마</target>
        </trans-unit>
        <trans-unit id="ac281e8204b9a645081a7c8f5d9b9a630469a617" translate="yes" xml:space="preserve">
          <source>Make enums hashable (thanks to @madeleine-empirical)</source>
          <target state="translated">열거 형을 해시 가능하게 만듭니다 (@ madeleine-empirical 덕분에)</target>
        </trans-unit>
        <trans-unit id="79cb0d39ec6664aa92b4438860c4006a4584971b" translate="yes" xml:space="preserve">
          <source>Make sure to encode to utf-8, not the default encoding (thanks to
@novas0x2a)</source>
          <target state="translated">기본 인코딩이 아닌 utf-8로 인코딩해야합니다 (@ novas0x2a 덕분에).</target>
        </trans-unit>
        <trans-unit id="a07d74dacfeb96d982b7175eb8154e262f3b5145" translate="yes" xml:space="preserve">
          <source>Make the event loop be lazy initialized</source>
          <target state="translated">이벤트 루프를 지연 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="bfeee51ab3ea9ed13848ffeaa2a9e5376c002943" translate="yes" xml:space="preserve">
          <source>More thorough docs are available at &lt;a href=&quot;http://jparyani.github.io/pycapnp/&quot;&gt;http://jparyani.github.io/pycapnp/&lt;/a&gt;.</source>
          <target state="translated">더 자세한 문서는 &lt;a href=&quot;http://jparyani.github.io/pycapnp/&quot;&gt;http://jparyani.github.io/pycapnp/&lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d4472d9c61ad023aa68f536c9a2f8aaef523212" translate="yes" xml:space="preserve">
          <source>Note: for OSX, if using clang from Xcode 5, you may need to set</source>
          <target state="translated">참고 : OSX의 경우 Xcode 5의 clang을 사용하는 경우 다음을 설정해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38914d32b71471a5433d4e45131546937fc3f694" translate="yes" xml:space="preserve">
          <source>One oddity to note is that</source>
          <target state="translated">주목해야 할 한 가지 이상한 점은</target>
        </trans-unit>
        <trans-unit id="11f957f78e5e919d2e697f8b56a96acda592a03c" translate="yes" xml:space="preserve">
          <source>Or you can clone the repo like so:</source>
          <target state="translated">또는 다음과 같이 저장소를 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2956d097dafbde1f57bf86421fd4569c9bdfca31" translate="yes" xml:space="preserve">
          <source>Python 2.7, Python 3.4+, and PyPy 2.1+ are supported.</source>
          <target state="translated">Python 2.7, Python 3.4+ 및 PyPy 2.1+가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3e1aa49b80ef594ab3d4fa29ac1df0b001b63f71" translate="yes" xml:space="preserve">
          <source>Python Versions</source>
          <target state="translated">Python 버전</target>
        </trans-unit>
        <trans-unit id="4b4afb9b7fbc384c964466cf0040f9cba84d8ebe" translate="yes" xml:space="preserve">
          <source>Random formatting cleanup</source>
          <target state="translated">무작위 서식 정리</target>
        </trans-unit>
        <trans-unit id="e65c5871e8f57c126ba72fb7e86a137a344874b3" translate="yes" xml:space="preserve">
          <source>Remove end-of-life Python versions 2.6, 3.2, and 3.3. Add CI tests
for 3.6</source>
          <target state="translated">수명이 다한 Python 버전 2.6, 3.2 및 3.3을 제거합니다. 3.6 용 CI 테스트 추가</target>
        </trans-unit>
        <trans-unit id="caed88b7c045ae254e655dbcad003ffe1984c7ba" translate="yes" xml:space="preserve">
          <source>Remove installation dependency on cython. We now have no dependencies
since libcapnp will automatically build as well.</source>
          <target state="translated">cython에 대한 설치 종속성을 제거하십시오. libcapnp도 자동으로 빌드되기 때문에 이제 종속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="9e981fd67cf51d22fdad713666942cacc471a1e6" translate="yes" xml:space="preserve">
          <source>Remove onDrained since it was removed upstream</source>
          <target state="translated">업스트림에서 제거되었으므로 onDrained 제거</target>
        </trans-unit>
        <trans-unit id="a545c61f3f3e22ee0e84fa2e9255ce5678423ba6" translate="yes" xml:space="preserve">
          <source>Remove python 3.2 from travis tests. Python 3.2 still should work
fine, but it&amp;rsquo;s more trouble than it&amp;rsquo;s worth to write unicode tests
that work in both it and Python2.</source>
          <target state="translated">Travis 테스트에서 Python 3.2를 제거합니다. Python 3.2는 여전히 잘 작동하지만 Python과 Python2에서 모두 작동하는 유니 코드 테스트를 작성하는 것보다 더 많은 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc62b81d3321bc7ce3c27af1e02d14a1350308bd" translate="yes" xml:space="preserve">
          <source>Replace usage of strings as enum type with custom</source>
          <target state="translated">enum 유형으로 문자열 사용을 사용자 정의로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="47f758f8437335363288f51b50b273a0eeabd1eb" translate="yes" xml:space="preserve">
          <source>Rework logic on when to build bundled libcapnp. Fixes
cross-compilation (thanks to @benizl)</source>
          <target state="translated">번들 된 libcapnp를 빌드 할시기에 대한 논리를 재 작업합니다. 교차 컴파일 수정 (@benizl 덕분에)</target>
        </trans-unit>
        <trans-unit id="59d5372f020fbc1862185e43be1ae02d89945ec7" translate="yes" xml:space="preserve">
          <source>Store Builders by value rather than allocate them separately on the
heap (matches treatment of Readers). v0.3 fixes the bug that made
this not work.</source>
          <target state="translated">저장소 빌더는 힙에 별도로 할당하지 않고 값별로 저장합니다 (리더의 처리와 일치). v0.3은 이것이 작동하지 않는 버그를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="49225a140009d47d2de06354a44a69955107d1ab" translate="yes" xml:space="preserve">
          <source>Struct.which</source>
          <target state="translated">Struct.which</target>
        </trans-unit>
        <trans-unit id="12c465e417c209f2e9504874b793c78a899edb98" translate="yes" xml:space="preserve">
          <source>Struct.which()</source>
          <target state="translated">Struct.which ()</target>
        </trans-unit>
        <trans-unit id="167977af5a321abdacb0762403c17e5593391d35" translate="yes" xml:space="preserve">
          <source>Support mmap objects for reading with from_bytes (thanks to
@bpiwowar)</source>
          <target state="translated">from_bytes로 읽기위한 mmap 객체 지원 (@bpiwowar 덕분에)</target>
        </trans-unit>
        <trans-unit id="9857cb39447c5aeda5699c70113b26e92fdee107" translate="yes" xml:space="preserve">
          <source>Support ordered dictionary in</source>
          <target state="translated">주문 된 사전 지원</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">본문</target>
        </trans-unit>
        <trans-unit id="deec156fa6f7ed5a3448a047a251196930c55c91" translate="yes" xml:space="preserve">
          <source>The examples directory has one example that shows off pycapnp quite
nicely. Here it is, reproduced:</source>
          <target state="translated">examples 디렉토리에는 pycapnp를 아주 멋지게 보여주는 하나의 예제가 있습니다. 여기에 재현 :</target>
        </trans-unit>
        <trans-unit id="9efc410d190a02d5807a430ad18df421b8143d33" translate="yes" xml:space="preserve">
          <source>Then you have too old a version of setuptools. Run</source>
          <target state="translated">그렇다면 너무 오래된 버전의 setuptools가 있습니다. 운영</target>
        </trans-unit>
        <trans-unit id="b48f23835f531f42ec92492727b6df8a82810153" translate="yes" xml:space="preserve">
          <source>There is some basic documentation
&lt;a href=&quot;http://jparyani.github.io/pycapnp/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">여기에 몇 가지 기본 문서가 &lt;a href=&quot;http://jparyani.github.io/pycapnp/&quot;&gt;있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4058c64cdb15a2f6b6f6aaa53bc324afd168bdf" translate="yes" xml:space="preserve">
          <source>This project uses
&lt;a href=&quot;http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/&quot;&gt;git-flow&lt;/a&gt;.
Essentially, just make sure you do your changes in the</source>
          <target state="translated">이 프로젝트는 &lt;a href=&quot;http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/&quot;&gt;git-flow를&lt;/a&gt; 사용합니다 . 기본적으로, 변경 사항을</target>
        </trans-unit>
        <trans-unit id="bb45685347ea63e97f280c4437df73ffecce4e91" translate="yes" xml:space="preserve">
          <source>Timer class</source>
          <target state="translated">타이머 클래스</target>
        </trans-unit>
        <trans-unit id="51c69587e2a3686ce3c42e09ea4f914b830e0cf0" translate="yes" xml:space="preserve">
          <source>TwoPartyServer.run_forever() now will handle more than 1
simulataneous connection.</source>
          <target state="translated">TwoPartyServer.run_forever ()는 이제 둘 이상의 동시 연결을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d0eb94e3e549ddb80ffa3e3387e56ac61a3aace7" translate="yes" xml:space="preserve">
          <source>Unify setters for DynamicList and DynamicStruct</source>
          <target state="translated">DynamicList 및 DynamicStruct에 대한 Setter 통합</target>
        </trans-unit>
        <trans-unit id="ebc3b99bc6498e0b8379dc707c346b9726c3692e" translate="yes" xml:space="preserve">
          <source>Update bundled C++ libcapnp to v0.5.1.1 security release</source>
          <target state="translated">번들 C ++ libcapnp를 v0.5.1.1 보안 릴리스로 업데이트</target>
        </trans-unit>
        <trans-unit id="c01f4649534f0abac65d23f295288c0bc1fb5fa9" translate="yes" xml:space="preserve">
          <source>Update bundled C++ libcapnp to v0.5.1.2 security release</source>
          <target state="translated">번들 C ++ libcapnp를 v0.5.1.2 보안 릴리스로 업데이트</target>
        </trans-unit>
        <trans-unit id="2b5b27ecb719d51e1fce0ab782dd2db475870700" translate="yes" xml:space="preserve">
          <source>Update bundled capnp version to v0.6.0 and fix related problems
(thanks to @benmoran)</source>
          <target state="translated">번들 된 capnp 버전을 v0.6.0으로 업데이트하고 관련 문제를 수정합니다 (@benmoran 덕분에).</target>
        </trans-unit>
        <trans-unit id="77a44d7ebd624b76d84c34b0687cf132793f23c4" translate="yes" xml:space="preserve">
          <source>Update bundled libcapnp to v0.5.2</source>
          <target state="translated">번들로 제공되는 libcapnp를 v0.5.2로 업데이트</target>
        </trans-unit>
        <trans-unit id="4723b555b02de7ce75c35f53ebd5103740b6fb68" translate="yes" xml:space="preserve">
          <source>Update docs with lines about upgrading setuptools</source>
          <target state="translated">setuptools 업그레이드에 대한 라인으로 문서 업데이트</target>
        </trans-unit>
        <trans-unit id="5d41b1f057514524365ba0a819e8ce2a4d9bf86d" translate="yes" xml:space="preserve">
          <source>Update preferred method for reading/writing messages from files</source>
          <target state="translated">파일에서 메시지 읽기 / 쓰기를위한 선호 방법 업데이트</target>
        </trans-unit>
        <trans-unit id="f90533fc7f91a92cac8fb8be623b1c1d6faf9e5d" translate="yes" xml:space="preserve">
          <source>Updated capnp schema to conform with new union rules</source>
          <target state="translated">새로운 통합 규칙을 준수하도록 capnp 스키마를 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="bf6a9a6b5579ffe59c83a630a3a0cba4e91f2dc4" translate="yes" xml:space="preserve">
          <source>Wrap InterfaceSchema</source>
          <target state="translated">InterfaceSchema 랩핑</target>
        </trans-unit>
        <trans-unit id="0fb0d155e6339404170c02289f4577780d95029f" translate="yes" xml:space="preserve">
          <source>Wrap MessageBuilder::setRoot().</source>
          <target state="translated">MessageBuilder :: setRoot ()를 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="6729395832dc804408ecda1f329ff5fc5622603a" translate="yes" xml:space="preserve">
          <source>You must destroy and re-create the event loop to get this
functionality (see</source>
          <target state="translated">이 기능을 사용하려면 이벤트 루프를 삭제하고 다시 만들어야합니다 (</target>
        </trans-unit>
        <trans-unit id="08d713f6d5baae90f11dfd051fc2ca07b53f5c0c" translate="yes" xml:space="preserve">
          <source>_DynamicEnum</source>
          <target state="translated">_DynamicEnum</target>
        </trans-unit>
        <trans-unit id="153493a2f8b9871247e89e46b97befeeebb16cef" translate="yes" xml:space="preserve">
          <source>_DynamicEnumField</source>
          <target state="translated">_DynamicEnumField</target>
        </trans-unit>
        <trans-unit id="841ced4a4ba75dea35f8433e8f025457e21db582" translate="yes" xml:space="preserve">
          <source>__dir__</source>
          <target state="translated">__dir__</target>
        </trans-unit>
        <trans-unit id="646638c756c72f2aaed152f66f7db0829237d214" translate="yes" xml:space="preserve">
          <source>and return an enum type (</source>
          <target state="translated">열거 형 (</target>
        </trans-unit>
        <trans-unit id="b572fcbef58f4f407e0c27b1e07dc34029108be4" translate="yes" xml:space="preserve">
          <source>argument wherever message creation
can occur</source>
          <target state="translated">메시지 생성이 발생할 수있는 모든 곳에서 인수</target>
        </trans-unit>
        <trans-unit id="4c889638ead68d2d3ab6d3e2f172a1c127ab9264" translate="yes" xml:space="preserve">
          <source>as_builder</source>
          <target state="translated">as_builder</target>
        </trans-unit>
        <trans-unit id="3c71cc99d2fc1c12a3d3e1b27e448ca612a89a1d" translate="yes" xml:space="preserve">
          <source>bootstrap</source>
          <target state="translated">부트 스트랩</target>
        </trans-unit>
        <trans-unit id="52a006ddf3fe8930232034f0039f605705d086fa" translate="yes" xml:space="preserve">
          <source>branch. You can run the tests by installing pytest with</source>
          <target state="translated">분기. pytest를 설치하여 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac78da71ac8602a84dfaa9bf4e4333057d7cc402" translate="yes" xml:space="preserve">
          <source>capnp.getTimer()</source>
          <target state="translated">capnp.getTimer ()</target>
        </trans-unit>
        <trans-unit id="f4b52c8043ee1946fa3839e7f780a8fdb79cd329" translate="yes" xml:space="preserve">
          <source>capnp.types</source>
          <target state="translated">capnp.types</target>
        </trans-unit>
        <trans-unit id="340d9456273f96b40aa4e4e13ae9363741b05694" translate="yes" xml:space="preserve">
          <source>clang: error: no such file or directory: 'capnp/lib/capnp.cpp'</source>
          <target state="translated">clang : error : no such file or directory : 'capnp / lib / capnp.cpp'</target>
        </trans-unit>
        <trans-unit id="db5f6869b5f0574b5bb750d7a83d523f28ed9c61" translate="yes" xml:space="preserve">
          <source>class.</source>
          <target state="translated">수업.</target>
        </trans-unit>
        <trans-unit id="fa95f6460110a99867c8e93e50f57721ee7f70d5" translate="yes" xml:space="preserve">
          <source>clear_write_flag</source>
          <target state="translated">clear_write_flag</target>
        </trans-unit>
        <trans-unit id="418a6bc4deccf0f7d5182192d51a54e504b3f3c9" translate="yes" xml:space="preserve">
          <source>develop</source>
          <target state="translated">나타나게 하다</target>
        </trans-unit>
        <trans-unit id="cbd9d886e949d7cb382991471b203a63ae721520" translate="yes" xml:space="preserve">
          <source>directory.</source>
          <target state="translated">예배 규칙서.</target>
        </trans-unit>
        <trans-unit id="794adacbaa8a9690e53e06ab3f07c0d509bb1bff" translate="yes" xml:space="preserve">
          <source>fields will always be treated as byte strings.</source>
          <target state="translated">필드는 항상 바이트 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="3bd95e39b992ebffb678e4077ca0684f10096ff1" translate="yes" xml:space="preserve">
          <source>for examples using it</source>
          <target state="translated">그것을 사용하는 예를 들어</target>
        </trans-unit>
        <trans-unit id="48022c60b4d13a5cf9688afa2842ca3ca17758a4" translate="yes" xml:space="preserve">
          <source>from the</source>
          <target state="translated">~로부터</target>
        </trans-unit>
        <trans-unit id="9b09da81661cc9eaec6b681fb8d916f27ad272c3" translate="yes" xml:space="preserve">
          <source>from_bytes</source>
          <target state="translated">from_bytes</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">초기화</target>
        </trans-unit>
        <trans-unit id="571d5bc739cc9f7bbab15b2de12fe6c2903c98a9" translate="yes" xml:space="preserve">
          <source>instead</source>
          <target state="translated">대신</target>
        </trans-unit>
        <trans-unit id="34c0a2595e1e1bad6a398e4195c99341edd05190" translate="yes" xml:space="preserve">
          <source>like so:</source>
          <target state="translated">이렇게 :</target>
        </trans-unit>
        <trans-unit id="7fe25f980462285007e23477a882e386164ba301" translate="yes" xml:space="preserve">
          <source>method to Struct Reader</source>
          <target state="translated">Struct Reader 방법</target>
        </trans-unit>
        <trans-unit id="a71196dd0a152d9ca5dda86d20c663712fb03941" translate="yes" xml:space="preserve">
          <source>method to be a property</source>
          <target state="translated">속성이되는 방법</target>
        </trans-unit>
        <trans-unit id="8bb663fafbb6bf21013598c6f03ecf251054fcca" translate="yes" xml:space="preserve">
          <source>method to builder classes</source>
          <target state="translated">빌더 클래스에 대한 메소드</target>
        </trans-unit>
        <trans-unit id="f920bd89f12b4898f5fbb45d1cb1fae350ff9560" translate="yes" xml:space="preserve">
          <source>method to lists</source>
          <target state="translated">나열하는 방법</target>
        </trans-unit>
        <trans-unit id="5661ccdf180545b4b075b3806a085c5cb1873fd9" translate="yes" xml:space="preserve">
          <source>not converting enums to strings</source>
          <target state="translated">열거 형을 문자열로 변환하지 않음</target>
        </trans-unit>
        <trans-unit id="dd50a101b81dd1fbe47458c30b8c8b4c4a3075ec" translate="yes" xml:space="preserve">
          <source>num_first_segment_words</source>
          <target state="translated">num_first_segment_words</target>
        </trans-unit>
        <trans-unit id="320e96ff2c9a3a07fb81845f8d36d0cd02894ab0" translate="yes" xml:space="preserve">
          <source>pip install -U setuptools</source>
          <target state="translated">pip 설치 -U 설정 도구</target>
        </trans-unit>
        <trans-unit id="c732e3f3bde27c2e3f6391fe92eb69af4c8d7224" translate="yes" xml:space="preserve">
          <source>pip install pycapnp</source>
          <target state="translated">pip 설치 pycapnp</target>
        </trans-unit>
        <trans-unit id="4fe89286c12ec39a29c34f0c03495c18e13ba961" translate="yes" xml:space="preserve">
          <source>pip install pytest</source>
          <target state="translated">pip 설치 pytest</target>
        </trans-unit>
        <trans-unit id="0e043421bf3470cb731f4c32448c91e870f04998" translate="yes" xml:space="preserve">
          <source>py.test</source>
          <target state="translated">py.test</target>
        </trans-unit>
        <trans-unit id="98e3877f1971abc37662fa0eff30e032effbc069" translate="yes" xml:space="preserve">
          <source>pycapnp</source>
          <target state="translated">pycapnp</target>
        </trans-unit>
        <trans-unit id="0cd4acfa67b0df01f0f1f10e142c6c97febcc2a6" translate="yes" xml:space="preserve">
          <source>pycapnp has additional development dependencies, including cython and
py.test. See requirements.txt for them all.</source>
          <target state="translated">pycapnp에는 cython 및 py.test를 포함한 추가 개발 종속성이 있습니다. 그들 모두에 대한 requirements.txt를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc79a8dbec2823a7817252602a8847acb2534d6c" translate="yes" xml:space="preserve">
          <source>pycapnp is now thread-safe and allows an event loop to be run in each
thread</source>
          <target state="translated">pycapnp는 이제 스레드로부터 안전하며 각 스레드에서 이벤트 루프를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ad37e8f059744952af7f5f4bc37f3ad7876e79f" translate="yes" xml:space="preserve">
          <source>pycapnp&amp;rsquo;s distribution has no requirements beyond a C++11 compatible
compiler. GCC 4.8+ or Clang 3.3+ should work fine.</source>
          <target state="translated">pycapnp의 배포판에는 C ++ 11 호환 컴파일러 이상의 요구 사항이 없습니다. GCC 4.8 이상 또는 Clang 3.3 이상이 정상적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bbe210904af72f03c9eac2d3970ae921e7cd9281" translate="yes" xml:space="preserve">
          <source>read_multiple_bytes</source>
          <target state="translated">read_multiple_bytes</target>
        </trans-unit>
        <trans-unit id="ff07b086f8dfe9fabf7701ee74aba6be1a4c7e35" translate="yes" xml:space="preserve">
          <source>result_type</source>
          <target state="translated">결과 _ 유형</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="38f03ad8f23019107d517646154a5d191fb54545" translate="yes" xml:space="preserve">
          <source>test_schema.py</source>
          <target state="translated">test_schema.py</target>
        </trans-unit>
        <trans-unit id="9ddc5ce5d132873194319883b81ae60c0f2eac19" translate="yes" xml:space="preserve">
          <source>test_threads.py</source>
          <target state="translated">test_threads.py</target>
        </trans-unit>
        <trans-unit id="b273a16fe1761d08099ba542b5f1e9a7480502ec" translate="yes" xml:space="preserve">
          <source>then try again.</source>
          <target state="translated">그런 다음 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="46a91b3c8c4ca82b3a858ced351f6bace5229fcc" translate="yes" xml:space="preserve">
          <source>to InterfaceMethodSchema</source>
          <target state="translated">InterfaceMethodSchema로</target>
        </trans-unit>
        <trans-unit id="df5f4f68a38bdd0e2f4608e8420e9d419c501e69" translate="yes" xml:space="preserve">
          <source>to_dict</source>
          <target state="translated">to_dict</target>
        </trans-unit>
        <trans-unit id="e92eb6d06e282b25633d1fa91354b6514ead3e60" translate="yes" xml:space="preserve">
          <source>type fields will be treated as byte
strings under Python 2, and unicode strings under Python 3.</source>
          <target state="translated">유형 필드는 Python 2에서는 바이트 문자열로, Python 3에서는 유니 코드 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="b12feb788ffb38dbb2fc88462f9f3dd7fcb44dd4" translate="yes" xml:space="preserve">
          <source>v0.3.1 (2013-08-21)</source>
          <target state="translated">v0.3.1 (2013-08-21)</target>
        </trans-unit>
        <trans-unit id="88295fa95ec7081b775f3a6b5e18296f2b267efc" translate="yes" xml:space="preserve">
          <source>v0.3.10 (2013-09-01)</source>
          <target state="translated">v0.3.10 (2013-09-01)</target>
        </trans-unit>
        <trans-unit id="189a54a9da60560ae9d5c56b1d14e78e968ec63b" translate="yes" xml:space="preserve">
          <source>v0.3.11 (2013-09-01)</source>
          <target state="translated">v0.3.11 (2013-09-01)</target>
        </trans-unit>
        <trans-unit id="81ec4095d6fd352db1905922d008bba5f74d89f5" translate="yes" xml:space="preserve">
          <source>v0.3.12 (2013-09-03)</source>
          <target state="translated">v0.3.12 (2013-09-03)</target>
        </trans-unit>
        <trans-unit id="c944682ee1dc546174e4a4973f8e02e48e67a88a" translate="yes" xml:space="preserve">
          <source>v0.3.13 (2013-09-04)</source>
          <target state="translated">v0.3.13 (2013-09-04)</target>
        </trans-unit>
        <trans-unit id="48a5887fb6b86c219907da282bb1715ce6dbe813" translate="yes" xml:space="preserve">
          <source>v0.3.14 (2013-09-04)</source>
          <target state="translated">v0.3.14 (2013-09-04)</target>
        </trans-unit>
        <trans-unit id="b9a8de357b32863954f0f439050b1413ad70b604" translate="yes" xml:space="preserve">
          <source>v0.3.15 (2013-09-19)</source>
          <target state="translated">v0.3.15 (2013-09-19)</target>
        </trans-unit>
        <trans-unit id="e9d8c3a0ff6849d7c75b2759e20aca7e9d0a33e6" translate="yes" xml:space="preserve">
          <source>v0.3.16 (2013-10-28)</source>
          <target state="translated">v0.3.16 (2013 년 10 월 28 일)</target>
        </trans-unit>
        <trans-unit id="f8fd201c3a2b239635d6a7c75b83195eb7e866bc" translate="yes" xml:space="preserve">
          <source>v0.3.17 (2013-11-05)</source>
          <target state="translated">v0.3.17 (2013-11-05)</target>
        </trans-unit>
        <trans-unit id="82e292a6a628409347d17ab9b14db661da98f039" translate="yes" xml:space="preserve">
          <source>v0.3.18 (2013-11-05)</source>
          <target state="translated">v0.3.18 (2013-11-05)</target>
        </trans-unit>
        <trans-unit id="d52ff5f44c8bf65c1d0cb4c1a789c1a268353848" translate="yes" xml:space="preserve">
          <source>v0.3.2 (2013-08-21)</source>
          <target state="translated">v0.3.2 (2013-08-21)</target>
        </trans-unit>
        <trans-unit id="ee1e9e6609563c5a8f421fb30cc6f04a9be2bce8" translate="yes" xml:space="preserve">
          <source>v0.3.3 (2013-08-22)</source>
          <target state="translated">v0.3.3 (2013-08-22)</target>
        </trans-unit>
        <trans-unit id="25eff25432235d069af043764dea99384c67fa67" translate="yes" xml:space="preserve">
          <source>v0.3.4 (2013-08-22)</source>
          <target state="translated">v0.3.4 (2013-08-22)</target>
        </trans-unit>
        <trans-unit id="8efcedffc4cde51a5da12c2584b49f4733b410fe" translate="yes" xml:space="preserve">
          <source>v0.3.5 (2013-08-25)</source>
          <target state="translated">v0.3.5 (2013-08-25)</target>
        </trans-unit>
        <trans-unit id="463e83fd7c9289c58836a64ced3bb7c80dc04f60" translate="yes" xml:space="preserve">
          <source>v0.3.6 (2013-08-26)</source>
          <target state="translated">v0.3.6 (2013-08-26)</target>
        </trans-unit>
        <trans-unit id="64f83347050a476c6a3281b7cf044d47176126f4" translate="yes" xml:space="preserve">
          <source>v0.3.7 (2013-08-26)</source>
          <target state="translated">v0.3.7 (2013-08-26)</target>
        </trans-unit>
        <trans-unit id="6b71303ad097911d213096b1bd30485ce4fc4486" translate="yes" xml:space="preserve">
          <source>v0.3.8 (2013-08-29)</source>
          <target state="translated">v0.3.8 (2013-08-29)</target>
        </trans-unit>
        <trans-unit id="5034b7b7750437dc7be3f2da1cf04642e5532894" translate="yes" xml:space="preserve">
          <source>v0.3.9 (2013-08-30)</source>
          <target state="translated">v0.3.9 (2013-08-30)</target>
        </trans-unit>
        <trans-unit id="9a5f31077a8e55a655cdaf896a261fa709fdefcc" translate="yes" xml:space="preserve">
          <source>v0.4.2 (2014-02-13)</source>
          <target state="translated">v0.4.2 (2014-02-13)</target>
        </trans-unit>
        <trans-unit id="71f048c478941e3920950b9d78d9196f691d2609" translate="yes" xml:space="preserve">
          <source>v0.4.3 (2014-02-18)</source>
          <target state="translated">v0.4.3 (2014-02-18)</target>
        </trans-unit>
        <trans-unit id="1bada3feeb3cbb8544eacd349ad8058ab29f3122" translate="yes" xml:space="preserve">
          <source>v0.4.4 (2014-04-25)</source>
          <target state="translated">v0.4.4 (2014-04-25)</target>
        </trans-unit>
        <trans-unit id="ecafdc167b6a8980ced8167372e0e3e2f1e0b943" translate="yes" xml:space="preserve">
          <source>v0.4.5 (2014-6-26)</source>
          <target state="translated">v0.4.5 (2014-6-26)</target>
        </trans-unit>
        <trans-unit id="961f618fb0a9d1949309a84f2a973eb9270b40d6" translate="yes" xml:space="preserve">
          <source>v0.4.6 (2014-9-10)</source>
          <target state="translated">v0.4.6 (2014-9-10)</target>
        </trans-unit>
        <trans-unit id="0867dfe1db466feb56f3ce235e1497b9a1314cd8" translate="yes" xml:space="preserve">
          <source>v0.5.0 (2014-12-15)</source>
          <target state="translated">v0.5.0 (2014-12-15)</target>
        </trans-unit>
        <trans-unit id="931a3faeb447799b45d327858309772f53447109" translate="yes" xml:space="preserve">
          <source>v0.5.1 (2014-12-27)</source>
          <target state="translated">v0.5.1 (2014-12-27)</target>
        </trans-unit>
        <trans-unit id="7e80cf60df8cc7a5a811fe93bcaa3b3904229040" translate="yes" xml:space="preserve">
          <source>v0.5.10 (2016-11-28)</source>
          <target state="translated">v0.5.10 (2016-11-28)</target>
        </trans-unit>
        <trans-unit id="b1a7a8e11386ba3c087006600f9087a867f20f43" translate="yes" xml:space="preserve">
          <source>v0.5.11 (2017-04-10)</source>
          <target state="translated">v0.5.11 (2017-04-10)</target>
        </trans-unit>
        <trans-unit id="601e8aa0f36569312efe6d5a0235864997edf034" translate="yes" xml:space="preserve">
          <source>v0.5.12 (2017-04-18)</source>
          <target state="translated">v0.5.12 (2017-04-18)</target>
        </trans-unit>
        <trans-unit id="342042a718dc44bc459039d74eb476e882faba1d" translate="yes" xml:space="preserve">
          <source>v0.5.2 (2015-02-20)</source>
          <target state="translated">v0.5.2 (2015-02-20)</target>
        </trans-unit>
        <trans-unit id="d1387d335c0fd8292f59f48d05617d8db79cdd43" translate="yes" xml:space="preserve">
          <source>v0.5.3 (2015-02-23)</source>
          <target state="translated">v0.5.3 (2015-02-23)</target>
        </trans-unit>
        <trans-unit id="58d05a8b1d37a9c8d18f76c00078d44add3bb5da" translate="yes" xml:space="preserve">
          <source>v0.5.4 (2015-03-02)</source>
          <target state="translated">v0.5.4 (2015-03-02)</target>
        </trans-unit>
        <trans-unit id="47de9f2ddebeae1c969f17336c59b35f6dfe4d49" translate="yes" xml:space="preserve">
          <source>v0.5.5 (2015-03-06)</source>
          <target state="translated">v0.5.5 (2015-03-06)</target>
        </trans-unit>
        <trans-unit id="2012ca1defc48b3c99b5dca23800a8641e241097" translate="yes" xml:space="preserve">
          <source>v0.5.6 (2015-04-13)</source>
          <target state="translated">v0.5.6 (2015-04-13)</target>
        </trans-unit>
        <trans-unit id="42c241bb41c439a08a49fb7a639fd74758782add" translate="yes" xml:space="preserve">
          <source>v0.5.7 (2015-06-16)</source>
          <target state="translated">v0.5.7 (2015-06-16)</target>
        </trans-unit>
        <trans-unit id="589ca11675e0e966a7103c11c5d4eca7a0ec2a44" translate="yes" xml:space="preserve">
          <source>v0.5.8 (2016-05-27)</source>
          <target state="translated">v0.5.8 (2016-05-27)</target>
        </trans-unit>
        <trans-unit id="45b28ecb378bfbe638e02d7117eb9eca28562282" translate="yes" xml:space="preserve">
          <source>v0.5.9 (2016-07-07)</source>
          <target state="translated">v0.5.9 (2016-07-07)</target>
        </trans-unit>
        <trans-unit id="a791ceb047bb61bdc9e71ebdf7267c3f1eb3bab0" translate="yes" xml:space="preserve">
          <source>v0.6.0 (2017-07-27)</source>
          <target state="translated">v0.6.0 (2017 년 7 월 27 일)</target>
        </trans-unit>
        <trans-unit id="5827e7ef6e8f17833c72f49fd1faa8afb6575500" translate="yes" xml:space="preserve">
          <source>v0.6.1 (2017-07-27)</source>
          <target state="translated">v0.6.1 (2017-07-27)</target>
        </trans-unit>
        <trans-unit id="b36751f41fe3cc45e9c5c9bd5e9864ac8fb77576" translate="yes" xml:space="preserve">
          <source>v0.6.2 (2017-11-30)</source>
          <target state="translated">v0.6.2 (2017-11-30)</target>
        </trans-unit>
        <trans-unit id="d1cd89a10932a6553ca592b928d0a5d920316f87" translate="yes" xml:space="preserve">
          <source>v0.6.3 (2018-01-14)</source>
          <target state="translated">v0.6.3 (2018-01-14)</target>
        </trans-unit>
        <trans-unit id="6a1cf05ae6d6b619aafb61399f98e9c57c2fd9d3" translate="yes" xml:space="preserve">
          <source>v0.6.4 (2019-1-31)</source>
          <target state="translated">v0.6.4 (2019-1-31)</target>
        </trans-unit>
        <trans-unit id="4a2d2f82c9576f824bb16f337dfdc7194efc8811" translate="yes" xml:space="preserve">
          <source>which completes all the Schemas needed to be wrapped.
See</source>
          <target state="translated">랩핑하는 데 필요한 모든 스키마를 완료합니다. 보다</target>
        </trans-unit>
        <trans-unit id="801dfb305749d6db35341845a72751810f67e0c4" translate="yes" xml:space="preserve">
          <source>with builder=True is no longer zero copy. It never
worked correctly, and is much safer now</source>
          <target state="translated">with builder = True는 더 이상 제로 사본이 아닙니다. 제대로 작동하지 않았으며 이제 훨씬 안전합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
