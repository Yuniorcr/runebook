<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/dependency-injector/">
    <body>
      <group id="dependency-injector">
        <trans-unit id="3b8349e71f199bbdd203fcf40c4fa339fd883511" translate="yes" xml:space="preserve">
          <source>-like decorators</source>
          <target state="translated">-같은 데코레이터</target>
        </trans-unit>
        <trans-unit id="4872d3bc2cc049937dd04822bea67b6664e81cda" translate="yes" xml:space="preserve">
          <source>. The assembly code might get
duplicated and it&amp;rsquo;ll become harder to change the application structure.</source>
          <target state="translated">. 어셈블리 코드가 중복 될 수 있으며 애플리케이션 구조를 변경하기가 더 어려워집니다.</target>
        </trans-unit>
        <trans-unit id="edd400234e3867a365b6c301db0b56a9ee51807d" translate="yes" xml:space="preserve">
          <source>.override()</source>
          <target state="translated">.우세하다()</target>
        </trans-unit>
        <trans-unit id="c89e012e53df254ea14051716cd1022ea6359609" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does not pollute your code.&lt;/strong&gt; Your application does NOT know and does NOT depend on the framework. No</source>
          <target state="translated">&lt;strong&gt;코드를 오염시키지 않습니다. &lt;/strong&gt;귀하의 응용 프로그램은 프레임 워크를 모르고 의존하지 않습니다. 아니</target>
        </trans-unit>
        <trans-unit id="e3b34d3ccc418140d780588e4500655acca80113" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No autowiring.&lt;/strong&gt; The framework does NOT do any autowiring / autoresolving of the dependencies. You need to specify everything explicitly. Because &lt;em&gt;&amp;ldquo;Explicit is better than implicit&amp;rdquo; (PEP20)&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;자동 배선이 없습니다. &lt;/strong&gt;프레임 워크는 종속성의 자동 연결 / 자동 해결을 수행하지 않습니다. 모든 것을 명시 적으로 지정해야합니다. 때문에 &lt;em&gt;(PEP20) &quot;명시하는 것은 암시보다 낫다&quot;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8c13a79e4ebc84ccf83b003bf0fa01ea4d1b610d" translate="yes" xml:space="preserve">
          <source>@inject</source>
          <target state="translated">@inject</target>
        </trans-unit>
        <trans-unit id="13f2d652f70945cb85fc5562fc3600a535ffb359" translate="yes" xml:space="preserve">
          <source>After:</source>
          <target state="translated">후:</target>
        </trans-unit>
        <trans-unit id="124632435bfa35f86272114b42f6ee13b587b380" translate="yes" xml:space="preserve">
          <source>Aiohttp REST API tutorial</source>
          <target state="translated">Aiohttp REST API 튜토리얼</target>
        </trans-unit>
        <trans-unit id="630df194c5b10abfa95d9d050a3cb36c24a133d2" translate="yes" xml:space="preserve">
          <source>Also</source>
          <target state="translated">또한</target>
        </trans-unit>
        <trans-unit id="72f29c668a8b14f47328aa1ea0613833eae736d3" translate="yes" xml:space="preserve">
          <source>Asyncio monitoring daemon tutorial</source>
          <target state="translated">Asyncio 모니터링 데몬 자습서</target>
        </trans-unit>
        <trans-unit id="842beb51ca9c5417a27f472386d0e0d52dcc074f" translate="yes" xml:space="preserve">
          <source>Before:</source>
          <target state="translated">전에:</target>
        </trans-unit>
        <trans-unit id="7d4e7096cdd861d195c85ded8a5a818a6e19dc90" translate="yes" xml:space="preserve">
          <source>CLI application tutorial</source>
          <target state="translated">CLI 애플리케이션 튜토리얼</target>
        </trans-unit>
        <trans-unit id="26b72f3fe427448eea3beef3dbdfe092853a1bd0" translate="yes" xml:space="preserve">
          <source>Choose one of the following:</source>
          <target state="translated">다음 중 하나를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="c05bafdb56031bb64da1f1d1861f60118932c605" translate="yes" xml:space="preserve">
          <source>Concept</source>
          <target state="translated">개념</target>
        </trans-unit>
        <trans-unit id="483fb1ba22182ca75e86cd36f4333cd8698708c7" translate="yes" xml:space="preserve">
          <source>Dependency Injector</source>
          <target state="translated">의존성 주입기</target>
        </trans-unit>
        <trans-unit id="9fb38379faa7a8f9c5b647696d704f0cc63c430d" translate="yes" xml:space="preserve">
          <source>Dependency injection is a principle that helps to decrease coupling and increase cohesion. Your
code becomes more flexible, clear and it is easier to test it.</source>
          <target state="translated">의존성 주입은 결합을 줄이고 응집력을 높이는 데 도움이되는 원칙입니다. 코드가 더 유연하고 명확 해지며 테스트하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="b724f6450707cb72548a227a948a51df121098a3" translate="yes" xml:space="preserve">
          <source>Dependency injection microframework for Python</source>
          <target state="translated">Python 용 종속성 주입 마이크로 프레임 워크</target>
        </trans-unit>
        <trans-unit id="82ea3f936054a99bd2d984b2e6c622339f1376b7" translate="yes" xml:space="preserve">
          <source>Do no magic to your code.</source>
          <target state="translated">코드에 마법을 적용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="3c98bd168d16d75129410500d4c327423064324d" translate="yes" xml:space="preserve">
          <source>Explicit is better than implicit (PEP20).</source>
          <target state="translated">명시적인 것이 암시적인 것보다 낫습니다 (PEP20).</target>
        </trans-unit>
        <trans-unit id="a2021c6a14ba56981ac0b0f465b8d941b75996a9" translate="yes" xml:space="preserve">
          <source>Flask web application tutorial</source>
          <target state="translated">Flask 웹 애플리케이션 자습서</target>
        </trans-unit>
        <trans-unit id="47cb8cea50ae99b784872cb04de95102c3f51093" translate="yes" xml:space="preserve">
          <source>Flexibility comes with a price: now you need to assemble your objects like this</source>
          <target state="translated">유연성에는 대가가 따릅니다. 이제 이와 같이 개체를 조립해야합니다.</target>
        </trans-unit>
        <trans-unit id="8b19afd09c924aed123c087dfdfea6437d4969be" translate="yes" xml:space="preserve">
          <source>Found a bug?</source>
          <target state="translated">버그를 찾았습니까?</target>
        </trans-unit>
        <trans-unit id="af90cef80988974dd76636b3adb5f472768f785d" translate="yes" xml:space="preserve">
          <source>Frequently asked questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="abf649533a4f7e02df9041f8c9ae5bb220899a24" translate="yes" xml:space="preserve">
          <source>Have a question?</source>
          <target state="translated">질문이 있습니다?</target>
        </trans-unit>
        <trans-unit id="279b9d9929710d290fdd6514dbb6920c8c43cb5d" translate="yes" xml:space="preserve">
          <source>How do I start doing the dependency injection?</source>
          <target state="translated">종속성 주입은 어떻게 시작합니까?</target>
        </trans-unit>
        <trans-unit id="a77955b425c1d573d5803559506c136eb4d03137" translate="yes" xml:space="preserve">
          <source>How does it different from the other frameworks?</source>
          <target state="translated">다른 프레임 워크와 어떻게 다릅니 까?</target>
        </trans-unit>
        <trans-unit id="96d84403df087e8ddbab9116ec67bc60c23faab9" translate="yes" xml:space="preserve">
          <source>How to implement dependency injection?</source>
          <target state="translated">종속성 주입을 구현하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="380dc51b3ee7e178b515a7aad36f9d4928f62ad0" translate="yes" xml:space="preserve">
          <source>It helps in a testing. Also you can use it for configuring project for the different environments:
replace an API client with a stub on the dev or stage.</source>
          <target state="translated">테스트에 도움이됩니다. 또한 다른 환경에 맞게 프로젝트를 구성하는 데 사용할 수 있습니다. API 클라이언트를 개발 또는 단계의 스텁으로 교체합니다.</target>
        </trans-unit>
        <trans-unit id="4c03ea31b7aab80a0b06c0d428dffd46e2388c36" translate="yes" xml:space="preserve">
          <source>It helps you in implementing the dependency injection principle.</source>
          <target state="translated">종속성 주입 원칙을 구현하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="742e9bbdbcf47070665dd0a29433358cb9c9835f" translate="yes" xml:space="preserve">
          <source>It provides you the container and the providers that help you describe objects assembly. When you
need an object you get it from the container. The rest of the assembly work is done by the
framework:</source>
          <target state="translated">개체 어셈블리를 설명하는 데 도움이되는 컨테이너와 공급자를 제공합니다. 개체가 필요할 때 컨테이너에서 가져옵니다. 나머지 어셈블리 작업은 프레임 워크에서 수행합니다.</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">더 많은 예</target>
        </trans-unit>
        <trans-unit id="dd879149f4d376bd5acc9bf6621bb7ad5c763e52" translate="yes" xml:space="preserve">
          <source>Objects do not create each other anymore. They provide a way to inject the needed dependencies
instead.</source>
          <target state="translated">개체는 더 이상 서로를 생성하지 않습니다. 대신 필요한 종속성을 주입하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3e586620568bd06725d8d4dd2f974b4f94152475" translate="yes" xml:space="preserve">
          <source>Open a &lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/issues&quot;&gt;Github Issue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/issues&quot;&gt;Github 이슈&lt;/a&gt; 열기</target>
        </trans-unit>
        <trans-unit id="f69a9a3247acaac19c2aa037e761c97ff344f851" translate="yes" xml:space="preserve">
          <source>Retrieving of the</source>
          <target state="translated">의 검색</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">서비스</target>
        </trans-unit>
        <trans-unit id="54bf0db2530299ad879a7680b8c6a1ad4a993dc1" translate="yes" xml:space="preserve">
          <source>Service(ApiClient(os.getenv('API_KEY'),os.getenv('TIMEOUT')))</source>
          <target state="translated">서비스 (ApiClient (os.getenv ( 'API_KEY'), os.getenv ( 'TIMEOUT')))</target>
        </trans-unit>
        <trans-unit id="de5f3346f5d46556e01e977a409f7f928c5a9c90" translate="yes" xml:space="preserve">
          <source>The documentation is available on the &lt;a href=&quot;http://python-dependency-injector.ets-labs.org/&quot;&gt;Read The Docs&lt;/a&gt;</source>
          <target state="translated">문서는 &lt;a href=&quot;http://python-dependency-injector.ets-labs.org/&quot;&gt;Read The Docs&lt;/a&gt; 에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45632d61c8cfaed8565de97c064fa7cc0da109f7" translate="yes" xml:space="preserve">
          <source>The framework does it for you</source>
          <target state="translated">프레임 워크는 당신을 위해 그것을합니다</target>
        </trans-unit>
        <trans-unit id="47a3e41cc81dd02328dd928829b00cd402901906" translate="yes" xml:space="preserve">
          <source>The package is available on the &lt;a href=&quot;https://pypi.org/project/dependency-injector/&quot;&gt;PyPi&lt;/a&gt;:</source>
          <target state="translated">패키지는 &lt;a href=&quot;https://pypi.org/project/dependency-injector/&quot;&gt;PyPi에서&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ba9fcae44512a766028e2eaa74ac1d4e56a170e" translate="yes" xml:space="preserve">
          <source>The power of the</source>
          <target state="translated">의 힘</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">튜토리얼</target>
        </trans-unit>
        <trans-unit id="3e96892cf1fd888e9db8468833b4277544fa1606" translate="yes" xml:space="preserve">
          <source>Want to contribute?</source>
          <target state="translated">기여하고 싶습니까?</target>
        </trans-unit>
        <trans-unit id="416c94fe04ea08b50c9dc04722849f57add61c8f" translate="yes" xml:space="preserve">
          <source>Want to help?</source>
          <target state="translated">도움이 필요하세요?</target>
        </trans-unit>
        <trans-unit id="9255b047fe7d8e853c2b704c505e06390aeea33a" translate="yes" xml:space="preserve">
          <source>What does Dependency Injector do?</source>
          <target state="translated">Dependency Injector는 무엇을합니까?</target>
        </trans-unit>
        <trans-unit id="c0faed4abc17505972ad676b9a836996b9d82cc8" translate="yes" xml:space="preserve">
          <source>What features does the framework have?</source>
          <target state="translated">프레임 워크에는 어떤 기능이 있습니까?</target>
        </trans-unit>
        <trans-unit id="60970dd5f2c0f385e28b549b8bcd1ef3748b1ada" translate="yes" xml:space="preserve">
          <source>What features the framework does NOT have?</source>
          <target state="translated">프레임 워크에없는 기능은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="9c9e11934cd97180d46c62f36382348b585cc084" translate="yes" xml:space="preserve">
          <source>What is</source>
          <target state="translated">뭐가</target>
        </trans-unit>
        <trans-unit id="c9af7a0a3b710b8a0c141d20390f04063cda90cf" translate="yes" xml:space="preserve">
          <source>What is dependency injection?</source>
          <target state="translated">의존성 주입이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="d2f0d8513c9033ae2faa4fa5784905908d16371f" translate="yes" xml:space="preserve">
          <source>What is the dependency injection?</source>
          <target state="translated">의존성 주입이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="b0964734aa398326e4b566f616b3bbafe15ef8e5" translate="yes" xml:space="preserve">
          <source>What price do I pay and what do I get?</source>
          <target state="translated">어떤 가격을 지불하고 무엇을 얻습니까?</target>
        </trans-unit>
        <trans-unit id="1d852870cca6e0e66c97418542233eda7b34a5fd" translate="yes" xml:space="preserve">
          <source>Why do I need a framework for this?</source>
          <target state="translated">이를위한 프레임 워크가 필요한 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a9d604b41514bafcf8724c2b77a9393acf946cbf" translate="yes" xml:space="preserve">
          <source>Why should I do the dependency injection?</source>
          <target state="translated">왜 의존성 주입을해야합니까?</target>
        </trans-unit>
        <trans-unit id="04eadff4232eca3c35b27fe6a89d506c0fda803b" translate="yes" xml:space="preserve">
          <source>You tell the framework how to assemble your objects</source>
          <target state="translated">프레임 워크에 객체를 어셈블하는 방법을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="4a7fe3c4ccfcfc8474e79790d498b173ab1aee45" translate="yes" xml:space="preserve">
          <source>autowiring / autoresolving of the dependencies</source>
          <target state="translated">종속성 자동 연결 / 자동 해결</target>
        </trans-unit>
        <trans-unit id="10d735e581f1e2505cd69675691925490e447c44" translate="yes" xml:space="preserve">
          <source>branch</source>
          <target state="translated">분기</target>
        </trans-unit>
        <trans-unit id="c2db7d9f059b722d8ec6a946f9150ec688f54550" translate="yes" xml:space="preserve">
          <source>building objects graph</source>
          <target state="translated">건물 개체 그래프</target>
        </trans-unit>
        <trans-unit id="5ed1455f7db464860c6e869dbdeaae4365da7881" translate="yes" xml:space="preserve">
          <source>container.service()</source>
          <target state="translated">container.service ()</target>
        </trans-unit>
        <trans-unit id="18c1c880d2741b80318a7c01ffb3aba41a3bf68c" translate="yes" xml:space="preserve">
          <source>decorators, annotations, patching or any other magic tricks.</source>
          <target state="translated">데코레이터, 주석, 패치 또는 기타 마술.</target>
        </trans-unit>
        <trans-unit id="f359f38caba8809baefad63f4d1ee07c5d61a693" translate="yes" xml:space="preserve">
          <source>dependency injection is a principle that decreases coupling and increases cohesion</source>
          <target state="translated">의존성 주입은 결합을 줄이고 응집력을 높이는 원리입니다.</target>
        </trans-unit>
        <trans-unit id="418a6bc4deccf0f7d5182192d51a54e504b3f3c9" translate="yes" xml:space="preserve">
          <source>develop</source>
          <target state="translated">나타나게 하다</target>
        </trans-unit>
        <trans-unit id="83a556f80693b63aa9a60b2354f9a57a6a58ac67" translate="yes" xml:space="preserve">
          <source>helps you assemble the objects.</source>
          <target state="translated">개체를 조립하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="b225375aaf8ea498c7507359cf31f8af7dd95586" translate="yes" xml:space="preserve">
          <source>instance now is done like this</source>
          <target state="translated">인스턴스는 이제 이렇게 완료됩니다</target>
        </trans-unit>
        <trans-unit id="e795d7c757bdb9c743823d1ad3259c43e0d7eeec" translate="yes" xml:space="preserve">
          <source>is a dependency injection framework for Python.</source>
          <target state="translated">Python 용 종속성 주입 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="be369feca1a57c9f4b6a9d560d2c7a35ff3f4dd7" translate="yes" xml:space="preserve">
          <source>is in its simplicity and straightforwardness. It is a simple tool for the powerful concept.</source>
          <target state="translated">단순성과 직설성에 있습니다. 강력한 개념을위한 간단한 도구입니다.</target>
        </trans-unit>
        <trans-unit id="ff24aa7b6c186e25c1e74c215cdd2ef2679205a7" translate="yes" xml:space="preserve">
          <source>it will be extra work in the beginning</source>
          <target state="translated">처음에는 추가 작업이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="fd5ff45023127808424b74c0b0d35750e6e8b8ef" translate="yes" xml:space="preserve">
          <source>it will payoff when project grows or in two weeks 😊 (when you forget what project was about)</source>
          <target state="translated">프로젝트가 성장할 때 또는 2 주 후에 보상을받을 것입니다 😊 (프로젝트가 무엇인지 잊었을 때)</target>
        </trans-unit>
        <trans-unit id="ce138ac38dc9bbd25b41319d1d558b7d24a37bbd" translate="yes" xml:space="preserve">
          <source>makes a simple contract with you:</source>
          <target state="translated">당신과 간단한 계약을 맺습니다 :</target>
        </trans-unit>
        <trans-unit id="01a46fb52f0c14f92da476120be7afe1ef1ec52d" translate="yes" xml:space="preserve">
          <source>method:</source>
          <target state="translated">방법:</target>
        </trans-unit>
        <trans-unit id="52bf89f90c68250234714c4fc6bd3f2918e5cdeb" translate="yes" xml:space="preserve">
          <source>on the &lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/&quot;&gt;Github&lt;/a&gt;</source>
          <target state="translated">온 &lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/&quot;&gt;Github에서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010d259c3c29d9323e2c06939ea26ad2667532e3" translate="yes" xml:space="preserve">
          <source>overriding of the objects in any part of the graph</source>
          <target state="translated">그래프의 모든 부분에서 객체 재정의</target>
        </trans-unit>
        <trans-unit id="3f8162919fc7582387d620a57f306c540c570aa3" translate="yes" xml:space="preserve">
          <source>positional and keyword context injections</source>
          <target state="translated">위치 및 키워드 컨텍스트 삽입</target>
        </trans-unit>
        <trans-unit id="410ce539c22980b070869f025761e668c76582b0" translate="yes" xml:space="preserve">
          <source>providers: factory, singleton, thread locals registers, etc</source>
          <target state="translated">공급자 : 팩토리, 싱글 톤, 스레드 로컬 레지스터 등</target>
        </trans-unit>
        <trans-unit id="2cae6b21c5b2006b76016a6f576229d38012d6db" translate="yes" xml:space="preserve">
          <source>provides a bonus in overriding any of the providers with the</source>
          <target state="translated">공급자를 재정의하는 데 보너스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ca9b1aa8a7826595715ae6a10c82676afc3e592d" translate="yes" xml:space="preserve">
          <source>smart configuration object</source>
          <target state="translated">스마트 구성 개체</target>
        </trans-unit>
        <trans-unit id="720c758bb527bcda9ef45e0625a86acef0778441" translate="yes" xml:space="preserve">
          <source>stands on two principles:</source>
          <target state="translated">두 가지 원칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="1ad59fdb1204c3b9794958db803e63e0dd56423c" translate="yes" xml:space="preserve">
          <source>the annotations and</source>
          <target state="translated">주석 및</target>
        </trans-unit>
        <trans-unit id="73f4c15e1e146bfa0fce1917dd6206c62415f6f7" translate="yes" xml:space="preserve">
          <source>the container is like a dictionary with the batteries 🔋</source>
          <target state="translated">컨테이너는 배터리가있는 사전과 같습니다 🔋</target>
        </trans-unit>
        <trans-unit id="c3ca10d3ed59a2d6f39ca59372fab962c853f391" translate="yes" xml:space="preserve">
          <source>the providers manage the lifetime of your components, you will need factories, singletons, smart config object etc</source>
          <target state="translated">공급자는 구성 요소의 수명을 관리하므로 팩토리, 싱글 톤, 스마트 구성 개체 등이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="010f01b8b54fbe483f320879080f7ff250093c49" translate="yes" xml:space="preserve">
          <source>this framework gives you the container and the providers</source>
          <target state="translated">이 프레임 워크는 컨테이너와 공급자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="81921117bf6220c83fc584c3cefc133bc31c23f0" translate="yes" xml:space="preserve">
          <source>when you need a component, you get it from the container</source>
          <target state="translated">구성 요소가 필요할 때 컨테이너에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="509bffac85c53741a8f5408524083614a40f1dd5" translate="yes" xml:space="preserve">
          <source>you have no problems when you need to understand how it works or change it 😎</source>
          <target state="translated">작동 방식을 이해하거나 변경해야 할 때 문제가 없습니다 😎</target>
        </trans-unit>
        <trans-unit id="96be278eaac3082c45cec1c7d0abcd748dd2fddb" translate="yes" xml:space="preserve">
          <source>you need the framework for this to not create it by your own</source>
          <target state="translated">직접 만들지 않으려면 프레임 워크가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="11456789f609e3163f85ff0062854839f09c804e" translate="yes" xml:space="preserve">
          <source>you need to explicitly specify the dependencies in the container</source>
          <target state="translated">컨테이너에서 종속성을 명시 적으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e95ca62036afa5956846124080752815e7b9a272" translate="yes" xml:space="preserve">
          <source>you register all of your application components and their dependencies in the container</source>
          <target state="translated">모든 애플리케이션 구성 요소와 해당 종속성을 컨테이너에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="417e2d6a2aa627b057949c8ffcbc17ed38b1781c" translate="yes" xml:space="preserve">
          <source>you start writing the code following the dependency injection principle</source>
          <target state="translated">종속성 주입 원칙에 따라 코드 작성을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="740dce2a38c13e97c15b201dd6e2e2a70ac4a4ce" translate="yes" xml:space="preserve">
          <source>your code becomes more flexible, testable and clear</source>
          <target state="translated">코드가 더 유연하고 테스트 가능하며 명확 해집니다.</target>
        </trans-unit>
        <trans-unit id="d62565bed95a471ff6b38cbf6229f9fbad00ef2a" translate="yes" xml:space="preserve">
          <source>⬅️ Open a pull request to the</source>
          <target state="translated">⬅️ 풀 요청을 열어</target>
        </trans-unit>
        <trans-unit id="968ca54fd2056c566a5da7112807b7f1eed48c8c" translate="yes" xml:space="preserve">
          <source>⭐️ Star the</source>
          <target state="translated">⭐️ 스타 더</target>
        </trans-unit>
        <trans-unit id="22487d3e4a75d9528a6ec94e624b23df21c97368" translate="yes" xml:space="preserve">
          <source>🆕 Start a new project with the</source>
          <target state="translated">🆕 다음으로 새 프로젝트 시작</target>
        </trans-unit>
        <trans-unit id="defbd8101b33869f846847d4d93fd996747ecc44" translate="yes" xml:space="preserve">
          <source>💬 Tell your friend about the</source>
          <target state="translated">💬 친구에게</target>
        </trans-unit>
        <trans-unit id="7a369eb43c7d7028518bbd4d801c65f8dc624961" translate="yes" xml:space="preserve">
          <source>🔀 Fork the project</source>
          <target state="translated">🔀 프로젝트 포크</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
