<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/cql/">
    <body>
      <group id="cql">
        <trans-unit id="899da1919a3b3e439664d02a1c2b62852438edf4" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;     doRowMagic(row)</source>
          <target state="translated">&amp;gt;&amp;gt; doRowMagic (행)</target>
        </trans-unit>
        <trans-unit id="5e22c58617425d29970d999aab89743c8cc36399" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; con = cql.connect(host, port, keyspace)</source>
          <target state="translated">&amp;gt;&amp;gt; con = cql.connect (호스트, 포트, 키 스페이스)</target>
        </trans-unit>
        <trans-unit id="c476d2e830b75eb8d92b2f6a20eb016e2af5de2b" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; con.close()</source>
          <target state="translated">&amp;gt;&amp;gt; con.close ()</target>
        </trans-unit>
        <trans-unit id="06d23f9eebf288ccc36b0b2ba3c7208568183d31" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; cursor = con.cursor()</source>
          <target state="translated">&amp;gt;&amp;gt; 커서 = con.cursor ()</target>
        </trans-unit>
        <trans-unit id="ee04fa6ae61afbe7b85aeedb80535946f5d3c6bc" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; cursor.close()</source>
          <target state="translated">&amp;gt;&amp;gt; cursor.close ()</target>
        </trans-unit>
        <trans-unit id="98c052cb5e8dc6c9c324c67db7fbe47703af7ddb" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; cursor.execute(&quot;ANOTHER QUERY&quot;, **more_kwargs)</source>
          <target state="translated">&amp;gt;&amp;gt; cursor.execute ( &quot;다른 쿼리&quot;, ** more_kwargs)</target>
        </trans-unit>
        <trans-unit id="a642dd4b00f3ab6a8c4be5c4bb05623fb7e6e3cd" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; cursor.execute(&quot;CQL QUERY&quot;, dict(kw='Foo', kw2='Bar, etc...))</source>
          <target state="translated">&amp;gt;&amp;gt; cursor.execute ( &quot;CQL QUERY&quot;, dict (kw = 'Foo', kw2 = 'Bar, etc ...))</target>
        </trans-unit>
        <trans-unit id="d52b07d9e828ab29dad608da7aab90e22bcc994e" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; for row in cursor:  # Iteration is equivalent to lots of fetchone() calls</source>
          <target state="translated">&amp;gt;&amp;gt; for row in cursor : # 반복은 많은 fetchone () 호출과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="36c75f89d0c153d489e6856b5ec8e91436f875c3" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; import cql</source>
          <target state="translated">&amp;gt;&amp;gt; cql 가져 오기</target>
        </trans-unit>
        <trans-unit id="cb732a64b05ef034dad1d64072747d011a72a20f" translate="yes" xml:space="preserve">
          <source>(PEP249, Python Database API Specification v2.0:  http://www.python.org/dev/peps/pep-0249/).</source>
          <target state="translated">(PEP249, Python 데이터베이스 API 사양 v2.0 : http://www.python.org/dev/peps/pep-0249/).</target>
        </trans-unit>
        <trans-unit id="62b14f82f8b806ffe2b8f7cb52a320f723109e1c" translate="yes" xml:space="preserve">
          <source>- Use named parameters and a dictionary of names and values.</source>
          <target state="translated">-명명 된 매개 변수와 이름 및 값 사전을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6445d3f9515b905d8124df44e13b3dea58322825" translate="yes" xml:space="preserve">
          <source>- cursor.arraysize    # variable size of a fetchmany call</source>
          <target state="translated">-cursor.arraysize # fetchmany 호출의 가변 크기</target>
        </trans-unit>
        <trans-unit id="b070990d7a4ab888ca3b8b6ab30ebbdcaf2eeb75" translate="yes" xml:space="preserve">
          <source>- cursor.description  # None initially, list of N tuples that represent</source>
          <target state="translated">-cursor.description # 처음에는 없음, 나타내는 N 개의 튜플 목록</target>
        </trans-unit>
        <trans-unit id="4251261ea02350bee11de48722feb6f721d64356" translate="yes" xml:space="preserve">
          <source>- cursor.fetchall()   # returns  all rows, don't do this.</source>
          <target state="translated">-cursor.fetchall () # 모든 행을 반환합니다. 이렇게하지 마세요.</target>
        </trans-unit>
        <trans-unit id="b84bac238c59fe438e63681ea7c0dcaaa54040a5" translate="yes" xml:space="preserve">
          <source>- cursor.fetchmany()  # returns  self.arraysize # of rows</source>
          <target state="translated">-cursor.fetchmany () # self.arraysize 반환 행 수</target>
        </trans-unit>
        <trans-unit id="8e2cf1978c5a621f1b9c55f7fb8db1c3b05a3fa0" translate="yes" xml:space="preserve">
          <source>- cursor.fetchone()   # returns  a single row</source>
          <target state="translated">-cursor.fetchone () # 단일 행을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0ccc1fe38227fc1387046c938b58b2cbce03b87e" translate="yes" xml:space="preserve">
          <source>- cursor.rowcount     # -1 initially, N after an execute</source>
          <target state="translated">-cursor.rowcount # 처음에는 -1, 실행 후 N</target>
        </trans-unit>
        <trans-unit id="b32a08474e82baaa386d3e0acfd95e496983d8ea" translate="yes" xml:space="preserve">
          <source>A Python driver for CQL that adheres to py-dbapi v2</source>
          <target state="translated">py-dbapi v2를 준수하는 CQL 용 Python 드라이버</target>
        </trans-unit>
        <trans-unit id="d20e04aed11fce75ce6d13e582ccf598456162af" translate="yes" xml:space="preserve">
          <source>Cassandra Query Language driver</source>
          <target state="translated">Cassandra 쿼리 언어 드라이버</target>
        </trans-unit>
        <trans-unit id="6f039261fac0a3d7c0c2b14397309c0427fa9ea9" translate="yes" xml:space="preserve">
          <source>Query substitution:</source>
          <target state="translated">쿼리 대체 :</target>
        </trans-unit>
        <trans-unit id="93eabb648649ad3c520e994ce71b24c95de923b1" translate="yes" xml:space="preserve">
          <source>Standard use:</source>
          <target state="translated">표준 사용 :</target>
        </trans-unit>
        <trans-unit id="bf46abd32cffae1c74ab0b01b083991fdc7e159b" translate="yes" xml:space="preserve">
          <source>contains type and name info, not values.</source>
          <target state="translated">값이 아닌 유형 및 이름 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b2a7b652352ce63a494689d449046de00656a274" translate="yes" xml:space="preserve">
          <source>e.g. execute(&quot;SELECT * FROM CF WHERE name=:name&quot;, {&quot;name&quot;: &quot;Foo&quot;})</source>
          <target state="translated">예를 들어 execute ( &quot;SELECT * FROM CF WHERE name = : name&quot;, { &quot;name&quot;: &quot;Foo&quot;})</target>
        </trans-unit>
        <trans-unit id="908c6aafbe85b0ac14a71ae42cf900fc778e7336" translate="yes" xml:space="preserve">
          <source>the N columns in a row after an execute. Only</source>
          <target state="translated">실행 후 행의 N 개 열. 뿐</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
