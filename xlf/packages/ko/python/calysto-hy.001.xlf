<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/calysto-hy/">
    <body>
      <group id="calysto-hy">
        <trans-unit id="b31dca22f4b9b880d1f8337f310d1e8efc9668fb" translate="yes" xml:space="preserve">
          <source># Calysto Hy</source>
          <target state="translated"># Calysto Hy</target>
        </trans-unit>
        <trans-unit id="f3fb36a464b39957c3ece0a95960beca0b329366" translate="yes" xml:space="preserve">
          <source>## Install</source>
          <target state="translated">## 설치</target>
        </trans-unit>
        <trans-unit id="82effc9b4e591f61a2d0bbe58b24eac0f40b4fd2" translate="yes" xml:space="preserve">
          <source>## Use</source>
          <target state="translated">## 사용하다</target>
        </trans-unit>
        <trans-unit id="725ee43b306fab0adc9397b6b651b87f81e3401b" translate="yes" xml:space="preserve">
          <source>A Hy kernel for Jupyter based on MetaKernel</source>
          <target state="translated">MetaKernel 기반 Jupyter 용 Hy 커널</target>
        </trans-unit>
        <trans-unit id="bf4b73a080c3cea32547eeaf403321ba4da83424" translate="yes" xml:space="preserve">
          <source>Calysto Hy is a Hy kernel for Jupyter based on [Metakernel](&lt;a href=&quot;https://github.com/Calysto/metakernel&quot;&gt;https://github.com/Calysto/metakernel&lt;/a&gt;). [Hy is a language](&lt;a href=&quot;https://github.com/hylang/hy&quot;&gt;https://github.com/hylang/hy&lt;/a&gt;) that converts Lisp-like syntax to Python semantics.</source>
          <target state="translated">Calysto Hy는 [Metakernel] ( &lt;a href=&quot;https://github.com/Calysto/metakernel&quot;&gt;https://github.com/Calysto/metakernel&lt;/a&gt; )을 기반으로하는 Jupyter 용 Hy 커널입니다 . [Hy는 언어입니다] ( &lt;a href=&quot;https://github.com/hylang/hy&quot;&gt;https://github.com/hylang/hy&lt;/a&gt; ) Lisp와 유사한 구문을 Python 시맨틱으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="195e010475e8c98b8ee6d848cb4a262ac5e158a8" translate="yes" xml:space="preserve">
          <source>If installing into the system, you may want to:</source>
          <target state="translated">시스템에 설치하는 경우 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce42ae25585a25de21bf7a975477d3ebd6358698" translate="yes" xml:space="preserve">
          <source>If you want to enjoy full code completion by [kaschalk/jedhy](&lt;a href=&quot;https://github.com/ekaschalk/jedhy&quot;&gt;https://github.com/ekaschalk/jedhy&lt;/a&gt;) you have
use bleeding edge and install hy master (&amp;gt; 0.13.1), jedhy and toolz first because jedhy is using new hy syntax.
Otherwise calysto_hy falls back to is normal completion.</source>
          <target state="translated">[kaschalk / jedhy] ( &lt;a href=&quot;https://github.com/ekaschalk/jedhy&quot;&gt;https://github.com/ekaschalk/jedhy&lt;/a&gt; )로 완전한 코드 완성을 즐기고 싶다면 bleeding edge를 사용하고 hy master (&amp;gt; 0.13.1), jedhy 및 toolz를 먼저 설치해야합니다. 새로운 hy 구문을 사용합니다. 그렇지 않으면 calysto_hy가 다시 정상적으로 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="f41fffb94875089b1c5b47d75fcf1adc99df917c" translate="yes" xml:space="preserve">
          <source>Or into a virtualenv, when it is already activated:</source>
          <target state="translated">또는 이미 활성화 된 경우 virtualenv로 :</target>
        </trans-unit>
        <trans-unit id="a8996aa29bfd203de23cbf8b222d73167b8e15fd" translate="yes" xml:space="preserve">
          <source>Or into your personal space:</source>
          <target state="translated">또는 개인 공간으로 :</target>
        </trans-unit>
        <trans-unit id="263a7e1216cd57249d6159e6ab53473367c858c9" translate="yes" xml:space="preserve">
          <source>This kernel is based on [bollwyvl/hy_kernel/](&lt;a href=&quot;https://github.com/bollwyvl/hy_kernel/&quot;&gt;https://github.com/bollwyvl/hy_kernel/&lt;/a&gt;) That kernel treats Hy as a Python preprocessor, and can therefore use the standard IPython tools. Calysto Hy treats Hy as a full language. Because of this, it uses the MetaKernel to gain magics, shell, parallel processing, etc.</source>
          <target state="translated">이 커널은 [bollwyvl / hy_kernel /] ( &lt;a href=&quot;https://github.com/bollwyvl/hy_kernel/&quot;&gt;https://github.com/bollwyvl/hy_kernel/&lt;/a&gt; )을 기반으로 합니다.이 커널은 Hy를 Python 전처리 기로 취급하므로 표준 IPython 도구를 사용할 수 있습니다. Calysto Hy는 Hy를 완전한 언어로 취급합니다. 이 때문에 MetaKernel을 사용하여 마법, 쉘, 병렬 처리 등을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="33c302d579e2d02dff20a6f419b801b04ed5e464" translate="yes" xml:space="preserve">
          <source>You can use Calysto Hy in Jupyter notebook by selecting the &amp;ldquo;Calysto Hy&amp;rdquo; kernel. See example [notebooks](&lt;a href=&quot;https://github.com/Calysto/calysto_hy/tree/master/notebooks&quot;&gt;https://github.com/Calysto/calysto_hy/tree/master/notebooks&lt;/a&gt;).</source>
          <target state="translated">&quot;Calysto Hy&quot;커널을 선택하여 Jupyter 노트북에서 Calysto Hy를 사용할 수 있습니다. 예제 [notebooks] ( &lt;a href=&quot;https://github.com/Calysto/calysto_hy/tree/master/notebooks&quot;&gt;https://github.com/Calysto/calysto_hy/tree/master/notebooks&lt;/a&gt; )를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c8cf8e1f9ce4a9a0e3db030ad79fbe3b4eda118" translate="yes" xml:space="preserve">
          <source>`shell
jupyter console --kernel calysto_hy
`</source>
          <target state="translated">`shell jupyter console --kernel calysto_hy`</target>
        </trans-unit>
        <trans-unit id="275a6e1f2f5eb35bf41ce5642c401e3b662e4612" translate="yes" xml:space="preserve">
          <source>`shell
pip3 install git+https://github.com/ekaschalk/jedhy.git
pip3 install git+https://github.com/Calysto/calysto_hy.git
python3 -m calysto_hy install
`</source>
          <target state="translated">`shell pip3 install git + https : //github.com/ekaschalk/jedhy.git pip3 install git + https : //github.com/Calysto/calysto_hy.git python3 -m calysto_hy install`</target>
        </trans-unit>
        <trans-unit id="2ca40a77711cd95d026c5443d1b71e6e769fc982" translate="yes" xml:space="preserve">
          <source>`shell
pip3 install git+https://github.com/ekaschalk/jedhy.git
pip3 install git+https://github.com/Calysto/calysto_hy.git
python3 -m calysto_hy install --sys-prefix
`</source>
          <target state="translated">`shell pip3 install git + https : //github.com/ekaschalk/jedhy.git pip3 install git + https : //github.com/Calysto/calysto_hy.git python3 -m calysto_hy install --sys-prefix`</target>
        </trans-unit>
        <trans-unit id="3f34beb6d05bc3cd369a22549fcabbecc63444eb" translate="yes" xml:space="preserve">
          <source>`shell
pip3 install git+https://github.com/ekaschalk/jedhy.git--user
pip3 install git+https://github.com/Calysto/calysto_hy.git--user
python3 -m calysto_hy install --user
`</source>
          <target state="translated">`shell pip3 install git + https : //github.com/ekaschalk/jedhy.git--user pip3 install git + https : //github.com/Calysto/calysto_hy.git--user python3 -m calysto_hy install --user `</target>
        </trans-unit>
        <trans-unit id="d23d17e4da0ccbd80c7e84278ff4989b1627ba00" translate="yes" xml:space="preserve">
          <source>`shell
sudo pip3 install git+https://github.com/ekaschalk/jedhy.git
sudo pip3 install git+https://github.com/Calysto/calysto_hy.git
sudo python3 -m calysto_hy install
`</source>
          <target state="translated">`shell sudo pip3 install git + https : //github.com/ekaschalk/jedhy.git sudo pip3 install git + https : //github.com/Calysto/calysto_hy.git sudo python3 -m calysto_hy install`</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
