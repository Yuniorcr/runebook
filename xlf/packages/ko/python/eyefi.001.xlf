<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/eyefi/">
    <body>
      <group id="eyefi">
        <trans-unit id="475144e4e531f3a6ea02c1638f44db7ef05db5be" translate="yes" xml:space="preserve">
          <source>After associating with one of the configured wireless networks,
the card authenticates a session with the server. The shared
secret needs to be obtained from the settings of the Win/OSX
application. The server can cope with multiple cards that are
identified by their MAC address. After authentication, the card
pushes the images that have not yet been posted to the server.
The server unpacks the tarred bundle (optionally in a directory
per MAC address). It then resolves the wireless networks that were
logged by the card at the time the picture was taken into a
geolocation using the Google API. The geolocation data is stored
in an XMP sidecar. Finally, you can trigger your own scripts
on complete upload, extraction and tagging.</source>
          <target state="translated">구성된 무선 네트워크 중 하나와 연결 한 후 카드는 서버와의 세션을 인증합니다. 공유 비밀은 Win / OSX 애플리케이션의 설정에서 얻어야합니다. 서버는 MAC 주소로 식별되는 여러 카드를 처리 할 수 ​​있습니다. 인증 후 카드는 아직 서버에 게시되지 않은 이미지를 푸시합니다. 서버는 tar 된 번들의 압축을 풉니 다 (선택적으로 MAC 주소 당 디렉토리에 있음). 그런 다음 Google API를 사용하여 사진을 지리적 위치로 가져올 때 카드에 기록 된 무선 네트워크를 확인합니다. 지리적 위치 데이터는 XMP 사이드카에 저장됩니다. 마지막으로 전체 업로드, 추출 및 태그 지정시 고유 한 스크립트를 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="569494533c94be55518941d5feffa05b921bf327" translate="yes" xml:space="preserve">
          <source>EyeFi Server Framework</source>
          <target state="translated">EyeFi 서버 프레임 워크</target>
        </trans-unit>
        <trans-unit id="2e965268fb0c93a28147b6d204ef615267153d61" translate="yes" xml:space="preserve">
          <source>The EyeFi cards include both some 2-8GB of SDHC storage and an</source>
          <target state="translated">EyeFi 카드에는 약 2-8GB의 SDHC 스토리지와</target>
        </trans-unit>
        <trans-unit id="344b637c52822d1fd473e292725930fb5a54aaf1" translate="yes" xml:space="preserve">
          <source>embedded microprocessor with WiFi (802.11bgn) that can upload
images as soon as they have been captured. While the software
bundled with the cards is closed and Win/OSX only, the protocol
is decently clean SOAP (like XML RPC via HTTP) and can be
implemented with twisted and soappy.</source>
          <target state="translated">캡처되는 즉시 이미지를 업로드 할 수있는 WiFi (802.11bgn)가있는 내장형 마이크로 프로세서. 카드와 함께 번들로 제공되는 소프트웨어는 닫혀 있고 Win / OSX 만 가능하지만 프로토콜은 상당히 깨끗한 SOAP (예 : HTTP를 통한 XML RPC)이며 트위스트 및 비눗물로 구현할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
