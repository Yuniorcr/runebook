<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/advent-of-code-sample/">
    <body>
      <group id="advent-of-code-sample">
        <trans-unit id="ae719bcadca89e3662b3a4d6cc522d257535f599" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;mypackage&lt;/code&gt; to whatever package or module name is used to import your stuff.
The name &lt;code&gt;mysolve&lt;/code&gt; should resolve to a callable in your package's namespace which accepts three named arguments &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt; (any order ok) and returns two values, e.g.:</source>
          <target state="translated">&lt;code&gt;mypackage&lt;/code&gt; 를 항목을 가져 오는 데 사용되는 패키지 또는 모듈 이름으로 변경하십시오 . 이름의 &lt;code&gt;mysolve&lt;/code&gt; 은 세 개의 명명 된 인수 받아 패키지의 네임 스페이스의 호출에 해결해야 &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;data&lt;/code&gt; (모든 주문 확인) 반환 두 값을, 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="0f238e6a50702023f6aa0601fabfb8f580b7c908" translate="yes" xml:space="preserve">
          <source>How to hook into your code:</source>
          <target state="translated">코드에 연결하는 방법 :</target>
        </trans-unit>
        <trans-unit id="f7e4f35d75348608fdcd43f3661536605a0e3912" translate="yes" xml:space="preserve">
          <source>Inside the entry-point you can do whatever you need in order to delegate to your code. For example, write out data to a scratch file then run a script, or import a function and just pass in the data directly as an argument.
The only requirement is that this entry-point should return a tuple of two values, with the answers for that day's puzzle, the rest is up to you.
You could fork this repo and edit it, or just write your own plugin manually.</source>
          <target state="translated">진입 점 내에서 코드에 위임하기 위해 필요한 모든 작업을 수행 할 수 있습니다. 예를 들어 스크래치 파일에 데이터를 쓴 다음 스크립트를 실행하거나 함수를 가져 와서 데이터를 인수로 직접 전달합니다. 유일한 요구 사항은이 진입 점이 그날의 퍼즐에 대한 답과 함께 두 값의 튜플을 반환해야한다는 것입니다. 나머지는 귀하에게 달려 있습니다. 이 저장소를 포크하고 편집하거나 직접 플러그인을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d91e9a1c3fd7959a8b9cb75a01f4b5b12584be1c" translate="yes" xml:space="preserve">
          <source>Provides a working example plugin structure for using the &lt;code&gt;aoc&lt;/code&gt; runner script provided by &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-data&quot;&gt;advent-of-code-data&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-data&quot;&gt;advent-of-code-data에서&lt;/a&gt; 제공 하는 &lt;code&gt;aoc&lt;/code&gt; 실행기 스크립트 를 사용하기위한 작업 예제 플러그인 구조를 제공 합니다 .</target>
        </trans-unit>
        <trans-unit id="cde56e49e86442c4c60c829504b6ff1de1c1e1cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aoc&lt;/code&gt; runner allows you to easily verify your &lt;a href=&quot;https://adventofcode.com/&quot;&gt;Advent of Code&lt;/a&gt; solutions against multiple datasets, or verify other user's code against your own dataset.</source>
          <target state="translated">&lt;code&gt;aoc&lt;/code&gt; 주자는 쉽게 확인할 수 있습니다 &lt;a href=&quot;https://adventofcode.com/&quot;&gt;강림 코드의&lt;/a&gt; 여러 데이터 세트에 대한 솔루션을, 또는 자신의 데이터 세트에 대해 다른 사용자의 코드를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d2b583798c1ea05ae27c6f22c4b9705824e477e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aoc&lt;/code&gt; runner uses setuptools' &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;dynamic discovery of services and plugins&lt;/a&gt; feature to locate and run your code.
Define your plugin's entry point in &lt;code&gt;setup.py&lt;/code&gt;. The group name to use is &quot;adventofcode.user&quot;:</source>
          <target state="translated">&lt;code&gt;aoc&lt;/code&gt; 러너 용도의 setuptools에 ' &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;서비스 및 플러그인의 동적 검색이&lt;/a&gt; 찾아 코드를 실행할 수 있습니다. &lt;code&gt;setup.py&lt;/code&gt; 에서 플러그인의 진입 점을 정의하십시오 . 사용할 그룹 이름은 &quot;adventofcode.user&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="bc782dfaebfbd6230c3f74e86fe92dc03dc3b3db" translate="yes" xml:space="preserve">
          <source>advent-of-code-sample:</source>
          <target state="translated">코드 샘플 출현 :</target>
        </trans-unit>
        <trans-unit id="de66b9ebd3feabeaa12c62ed249834205d2635c9" translate="yes" xml:space="preserve">
          <source>myusername's solutions for https://adventofcode.com/</source>
          <target state="translated">https://adventofcode.com/에 대한 myusername의 솔루션</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
