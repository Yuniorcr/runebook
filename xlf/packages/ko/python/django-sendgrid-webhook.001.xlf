<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-sendgrid-webhook/">
    <body>
      <group id="django-sendgrid-webhook">
        <trans-unit id="ce13015dd1665551dcd2d2e26a96e29708466e1d" translate="yes" xml:space="preserve">
          <source># Sendgrid event hooks</source>
          <target state="translated"># Sendgrid 이벤트 후크</target>
        </trans-unit>
        <trans-unit id="35a53c26ccbd3a0397eaf8c9137da126992c53e4" translate="yes" xml:space="preserve">
          <source>'',</source>
          <target state="translated">'',</target>
        </trans-unit>
        <trans-unit id="8030ca9c271e0eac1cfa3567d35b594ecb795e74" translate="yes" xml:space="preserve">
          <source>'sendgrid': 'sendgrid.south_migrations',</source>
          <target state="translated">'sendgrid': 'sendgrid.south_migrations',</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="3b75b846b5fcf4d9e084d252c7eec95962904859" translate="yes" xml:space="preserve">
          <source>1. `pip install django-sendgrid-webhook`</source>
          <target state="translated">1.`pip install django-sendgrid-webhook`</target>
        </trans-unit>
        <trans-unit id="cff625a61c2cea9e9d6a2f1d28d7239028e5c270" translate="yes" xml:space="preserve">
          <source>2. Add app to INSTALLED_APPS</source>
          <target state="translated">2. INSTALLED_APPS에 앱 추가</target>
        </trans-unit>
        <trans-unit id="89a86ee3885ab2f12fac322d35fedd0f978c49dd" translate="yes" xml:space="preserve">
          <source>3. South compatibility (Django &amp;lt; 1.7)</source>
          <target state="translated">3. South 호환성 (Django &amp;lt;1.7)</target>
        </trans-unit>
        <trans-unit id="00dc96c559755da38268b2dced8de0e89b0b78c6" translate="yes" xml:space="preserve">
          <source>4. Run `python manage.py syncdb` to install the new Email model</source>
          <target state="translated">4.`python manage.py syncdb`를 실행하여 새 이메일 모델을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="27287b99b19d5aba54bcd27570a2da804afe9f64" translate="yes" xml:space="preserve">
          <source>5. Include `sendgrid.urls` at some point in your url structure. E.g. in `/urls.py`:</source>
          <target state="translated">5. URL 구조의 특정 지점에`sendgrid.urls`를 포함합니다. 예 :`/ urls.py` :</target>
        </trans-unit>
        <trans-unit id="ca35b01b20bec5e5e0d6374628c39e77e575c16f" translate="yes" xml:space="preserve">
          <source>6. Go to https://sendgrid.com/app and add the App `Event Notification`.</source>
          <target state="translated">6. https://sendgrid.com/app로 이동하여 앱 '이벤트 알림'을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0e414f28f1b3438480fcc99b8ad56073a410c397" translate="yes" xml:space="preserve">
          <source>7. Configure the App to send the events you'd like to and add the Callback URL. If you included `sendgrid.urls` like</source>
          <target state="translated">7. 원하는 이벤트를 보내도록 앱을 구성하고 콜백 URL을 추가합니다. `sendgrid.urls`를 포함했다면</target>
        </trans-unit>
        <trans-unit id="e0a9b97c3254857ee977c9c16bbfb8a2efc8e640" translate="yes" xml:space="preserve">
          <source>A small django app around sendgrid and its webhooks</source>
          <target state="translated">sendgrid 및 웹훅 주변의 작은 django 앱</target>
        </trans-unit>
        <trans-unit id="e48b7c39f4b6bf4721f7a98c75f05e96f88ed7e5" translate="yes" xml:space="preserve">
          <source>Adding `SENDGRID_EVENTS_IGNORE_MISSING = True` to your settings will silently ignore callbacks for emails which are</source>
          <target state="translated">설정에`SENDGRID_EVENTS_IGNORE_MISSING = True`를 추가하면 다음과 같은 이메일에 대한 콜백이 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="b8577c99aaca7f628cb921ee68fce4bf962909c4" translate="yes" xml:space="preserve">
          <source>Configuration Options</source>
          <target state="translated">구성 옵션</target>
        </trans-unit>
        <trans-unit id="42a4663f227cfb9f8548635601892de9ebfa86ee" translate="yes" xml:space="preserve">
          <source>Currently we only have one configuration option which can be added to the django settings.</source>
          <target state="translated">현재 장고 설정에 추가 할 수있는 구성 옵션은 하나뿐입니다.</target>
        </trans-unit>
        <trans-unit id="515caa58e5d43ece59871409c22368dc9a62844a" translate="yes" xml:space="preserve">
          <source>Django versions in `django.core.mail`. In fact the easiest transition is to just replace every use of</source>
          <target state="translated">'django.core.mail'의 Django 버전. 사실 가장 쉬운 전환은</target>
        </trans-unit>
        <trans-unit id="10ea72b30bf742bb1aa97401d7822fee29bb3835" translate="yes" xml:space="preserve">
          <source>Every time a new object is created or a callback is received, the signal `sendgrid.signals.email_event` is dispatched.</source>
          <target state="translated">새 객체가 생성되거나 콜백이 수신 될 때마다 'sendgrid.signals.email_event'신호가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="c6be2f4a9317fa19d3c8e4f92fd6ad30d4c2be90" translate="yes" xml:space="preserve">
          <source>From then on every email you send will include an UUID parameter to track the callback, and a new instance of the</source>
          <target state="translated">그때부터 보내는 모든 이메일에는 콜백을 추적하는 UUID 매개 변수와</target>
        </trans-unit>
        <trans-unit id="ab08540fc7e0399c1f612c27592da14c960bb582" translate="yes" xml:space="preserve">
          <source>INSTALLED_APPS += 'sendgrid'</source>
          <target state="translated">INSTALLED_APPS + = 'sendgrid'</target>
        </trans-unit>
        <trans-unit id="0df9421321019859ac4cdc3f67db75a2d6cad50a" translate="yes" xml:space="preserve">
          <source>If you're using Django &amp;gt;= 1.7 you don't have to do anything. For users with older versions, South tries to use the new Django migrations instead of the South migrations. Please add the following code snippet to your settings:</source>
          <target state="translated">Django&amp;gt; = 1.7을 사용하는 경우 아무것도 할 필요가 없습니다. 이전 버전을 사용하는 사용자의 경우 South는 South 마이그레이션 대신 새로운 Django 마이그레이션을 사용하려고합니다. 설정에 다음 코드 스 니펫을 추가하세요.</target>
        </trans-unit>
        <trans-unit id="7fb25cbaa922984b14eafbb82391bf8ef48d305c" translate="yes" xml:space="preserve">
          <source>In theory you can send messages yourself by adding a UUID parameter to the `unique_args` parameter in the SMTP header</source>
          <target state="translated">이론상 SMTP 헤더의 ʻunique_args` 매개 변수에 UUID 매개 변수를 추가하여 직접 메시지를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="82848ff034906614ece832fa1f80e52d214008e9" translate="yes" xml:space="preserve">
          <source>Our classes in `sendgrid.utils` are inheriting from the default classes of `django.core.mail`, so you just need to</source>
          <target state="translated">`sendgrid.utils`의 클래스는`django.core.mail`의 기본 클래스에서 상속되므로</target>
        </trans-unit>
        <trans-unit id="5cb5e6fbbfd64866964aac07caffa0c98bc570f9" translate="yes" xml:space="preserve">
          <source>SOUTH_MIGRATION_MODULES = {</source>
          <target state="translated">SOUTH_MIGRATION_MODULES = {</target>
        </trans-unit>
        <trans-unit id="e7eed0990307bc19b08063abdeb600c72def19c3" translate="yes" xml:space="preserve">
          <source>See https://docs.djangoproject.com/en/dev/topics/signals/ for more details on Django signals.</source>
          <target state="translated">Django 신호에 대한 자세한 내용은 https://docs.djangoproject.com/en/dev/topics/signals/를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ded129de8f6ea942ea4e5d20d5a6d6b7fa6f1bf" translate="yes" xml:space="preserve">
          <source>Sending emails (the easy way)</source>
          <target state="translated">이메일 보내기 (쉬운 방법)</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">신호</target>
        </trans-unit>
        <trans-unit id="1e22670a2dc034f8f6f0e8d9f49437dfa5f5e880" translate="yes" xml:space="preserve">
          <source>This django app enables you to send emails to sendgrid and receive callbacks to monitor the status of all your emails.</source>
          <target state="translated">이 django 앱을 사용하면 sendgrid에 이메일을 보내고 모든 이메일의 상태를 모니터링하는 콜백을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d99fc9764eb7e9405d21cf6b88268a82bde8775d" translate="yes" xml:space="preserve">
          <source>This will add the callback path `/sendgrid_callback/`.</source>
          <target state="translated">그러면 콜백 경로`/ sendgrid_callback /`이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="27005810c052f98a768ecb8de88b3d8dece56169" translate="yes" xml:space="preserve">
          <source>You can also attach a related object to the `Email` object by passing an `obj` parameter in the `.send()` function of</source>
          <target state="translated">또한의`.send ()`함수에 ʻobj` 매개 변수를 전달하여 ʻEmail` 객체에 관련 객체를 첨부 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="abae8958e7b01c958d25fee392fc449c4da25784" translate="yes" xml:space="preserve">
          <source>You can also attach them to a related object in your own app. A signal will be dispatched every time a new callback is</source>
          <target state="translated">자체 앱의 관련 개체에 연결할 수도 있습니다. 새로운 콜백이있을 때마다 신호가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f74b57fa874f8ea9029bda76d4227e0e269c2da1" translate="yes" xml:space="preserve">
          <source>[![Build Status](https://api.travis-ci.org/resmio/django-sendgrid.png)](https://travis-ci.org/resmio/django-sendgrid) [![Join the chat at https://gitter.im/resmio/django-sendgrid](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/resmio/django-sendgrid?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge)</source>
          <target state="translated">[! [빌드 상태] (https://api.travis-ci.org/resmio/django-sendgrid.png)] (https://travis-ci.org/resmio/django-sendgrid) [! [가입 https://gitter.im/resmio/django-sendgrid에서 채팅] (https://badges.gitter.im/Join%20Chat.svg)] (https://gitter.im/resmio/django-sendgrid?utm_source = badge &amp;amp; utm_medium = badge &amp;amp; utm_campaign = pr-badge &amp;amp; utm_content = badge)</target>
        </trans-unit>
        <trans-unit id="f7a69efee8ed60dd69217d1664fc5d695900b1dd" translate="yes" xml:space="preserve">
          <source>`SendgridEmailMessage` or `SendgridEmailMultiAlternatives`.</source>
          <target state="translated">`SendgridEmailMessage` 또는`SendgridEmailMultiAlternatives`.</target>
        </trans-unit>
        <trans-unit id="05e6e570915075d7923829fb536ad243c024c593" translate="yes" xml:space="preserve">
          <source>`X-SMTPAPI` as specified in https://sendgrid.com/docs/API_Reference/SMTP_API/unique_arguments.html . But you can also</source>
          <target state="translated">https://sendgrid.com/docs/API_Reference/SMTP_API/unique_arguments.html에 지정된`X-SMTPAPI`. 그러나 당신은 또한 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="bbc0aff80688baeb01a5a4cb720794fe808ad957" translate="yes" xml:space="preserve">
          <source>```</source>
          <target state="translated">```</target>
        </trans-unit>
        <trans-unit id="ab8ac90cc808fea2e113f156accf1bd424c1596b" translate="yes" xml:space="preserve">
          <source>```python</source>
          <target state="translated">```파이썬</target>
        </trans-unit>
        <trans-unit id="133c42e859335044911b0f30bfd4e3bbb51e9512" translate="yes" xml:space="preserve">
          <source>`from django.core.mail import EmailMessage` with `from sendgrid.utils import SendgridEmailMessage as EmailMessage`.</source>
          <target state="translated">`from django.core.mail import EmailMessage`와`from sendgrid.utils import SendgridEmailMessage as EmailMessage`.</target>
        </trans-unit>
        <trans-unit id="16043ada2d0cd1aa84ead82efab6db491ae8c03f" translate="yes" xml:space="preserve">
          <source>`sendgrid.utils.SendgridEmailMessage` and `sendgrid.utils.SendgridEmailMultiAlternatives` can be used instead of the</source>
          <target state="translated">`sendgrid.utils.SendgridEmailMessage` 및`sendgrid.utils.SendgridEmailMultiAlternatives`를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad09e4c06bfc8f6fa1ee3d7428ed06bb2d0eeeb3" translate="yes" xml:space="preserve">
          <source>and would try to re-deliver the same message for 24h until giving up sending messages altogether. So unless you're</source>
          <target state="translated">메시지 전송을 완전히 포기할 때까지 24 시간 동안 동일한 메시지를 다시 전송하려고합니다. 그래서 당신이</target>
        </trans-unit>
        <trans-unit id="eaf8db4af8fbaa17f7e38a7a581d35dd8b9f8bc3" translate="yes" xml:space="preserve">
          <source>configure your SMTP settings as shown in https://docs.djangoproject.com/en/dev/topics/email/#smtp-backend to use them.</source>
          <target state="translated">https://docs.djangoproject.com/en/dev/topics/email/#smtp-backend에 표시된대로 SMTP 설정을 구성하여 사용합니다.</target>
        </trans-unit>
        <trans-unit id="57a76b8d1275ac01abedd662d995177a77ea03f9" translate="yes" xml:space="preserve">
          <source>email classes in `django.core.mail` which means you can transparently switch out the django classes with ours.</source>
          <target state="translated">'django.core.mail'의 이메일 클래스는 우리와 함께 django 클래스를 투명하게 전환 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a240017289c51ad2a60fd364b3def02ee4c6f134" translate="yes" xml:space="preserve">
          <source>mentioned above it would be : `http://test.com/sendgrid_callback/`</source>
          <target state="translated">위에서 언급했듯이 :`http : // test.com / sendgrid_callback /`</target>
        </trans-unit>
        <trans-unit id="754f17d8e85c42f65e4feaf773e733dc0bd187ad" translate="yes" xml:space="preserve">
          <source>model `sendgrid.models.Email` will be created and updated on every callback received.</source>
          <target state="translated">콜백을받을 때마다 모델`sendgrid.models.Email`이 생성되고 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="407b0fbe83c52074cae0dce359a98c081d5cb66f" translate="yes" xml:space="preserve">
          <source>received (and also when the email is created for the first time). We also provide helper classes which inherit from the</source>
          <target state="translated">수신 됨 (또한 이메일이 처음 생성 된 경우). 우리는 또한</target>
        </trans-unit>
        <trans-unit id="76fcb973ab11c468b9345aa37a183ce596fcb9e7" translate="yes" xml:space="preserve">
          <source>save yourself the work and read the next section.</source>
          <target state="translated">작업을 저장하고 다음 섹션을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="7e044f0baf90404e36a20bacb99f767569b72d9b" translate="yes" xml:space="preserve">
          <source>sent without a UUID. This is very helpful because Sendgrid would otherwise receive a non-200 answer from our webhook</source>
          <target state="translated">UUID없이 전송됩니다. Sendgrid가 웹훅에서 200 개가 아닌 응답을 받기 때문에 이것은 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7576b8fc7e37587257cd352d59074eb5a9398831" translate="yes" xml:space="preserve">
          <source>url(r'^', include('sendgrid.urls')),</source>
          <target state="translated">url (r '^', include ( 'sendgrid.urls')),</target>
        </trans-unit>
        <trans-unit id="d9f741c9186714b6b9ec71f4c036f8518cef6877" translate="yes" xml:space="preserve">
          <source>urlpatterns += patterns(</source>
          <target state="translated">urlpatterns + = 패턴 (</target>
        </trans-unit>
        <trans-unit id="b793b899c0d1a3879958da191424e96c1a2c8270" translate="yes" xml:space="preserve">
          <source>very sure this will never happen, you should probably enable this.</source>
          <target state="translated">이런 일이 절대 일어나지 않을 것입니다. 아마도 이것을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2b7df6201fdd3362399091f0a29550df3505b6a" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
