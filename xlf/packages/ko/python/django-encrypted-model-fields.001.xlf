<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-encrypted-model-fields/">
    <body>
      <group id="django-encrypted-model-fields">
        <trans-unit id="a2441ad740af884fdb2bb9f4318bbfab0fced533" translate="yes" xml:space="preserve">
          <source>$ pip install django-encrypted-model-fields</source>
          <target state="translated">$ pip install django-encrypted-model-fields</target>
        </trans-unit>
        <trans-unit id="bcac6f45f9dd6974d6f1b178baef3676736ba1df" translate="yes" xml:space="preserve">
          <source>./manage.py generate_encryption_key</source>
          <target state="translated">./manage.py generate_encryption_key</target>
        </trans-unit>
        <trans-unit id="263081ee68a86718c04251a3a795c0edbde7053c" translate="yes" xml:space="preserve">
          <source>A set of django fields that internally are encrypted using the cryptography.io native python encryption library.</source>
          <target state="translated">cryptography.io 네이티브 Python 암호화 라이브러리를 사용하여 내부적으로 암호화되는 django 필드 집합입니다.</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">약</target>
        </trans-unit>
        <trans-unit id="ad80fe101c94e922c130a5c3c56ab4b571b8b0bd" translate="yes" xml:space="preserve">
          <source>Add &amp;ldquo;encrypted_model_fields&amp;rdquo; to your INSTALLED_APPS setting like this:</source>
          <target state="translated">다음과 같이 INSTALLED_APPS 설정에 &quot;encrypted_model_fields&quot;를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9625ebbcaf4a1ebdcbe6c03db955407066dbce0d" translate="yes" xml:space="preserve">
          <source>Add the requisite versions to the local version:</source>
          <target state="translated">로컬 버전에 필수 버전을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="4ed77d1aa6d36f7a98667440e47608fcc88a4614" translate="yes" xml:space="preserve">
          <source>Added Tox for testing with different versions of Django and Python.  To get started:</source>
          <target state="translated">다른 버전의 Django 및 Python으로 테스트하기 위해 Tox를 추가했습니다. 시작하려면 :</target>
        </trans-unit>
        <trans-unit id="33b718e3426ebb543a11c3c5fcd59853368c8fdd" translate="yes" xml:space="preserve">
          <source>Development Environment</source>
          <target state="translated">개발 환경</target>
        </trans-unit>
        <trans-unit id="652d9f1af226016a0e79d60f9d7a8e46c29f58aa" translate="yes" xml:space="preserve">
          <source>Due to the nature of the encrypted data, filtering by values contained in
encrypted fields won&amp;rsquo;t work properly. Sorting is also not supported.</source>
          <target state="translated">암호화 된 데이터의 특성으로 인해 암호화 된 필드에 포함 된 값으로 필터링이 제대로 작동하지 않습니다. 정렬도 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bde2fbb6f581d23ee4f9298b214a9d7380ea040f" translate="yes" xml:space="preserve">
          <source>Encrypted</source>
          <target state="translated">암호화 됨</target>
        </trans-unit>
        <trans-unit id="726b0919abac697dd3dfca8df0289a3029778e91" translate="yes" xml:space="preserve">
          <source>EncryptedCharField(max_length=3)</source>
          <target state="translated">EncryptedCharField (최대 _ 길이 = 3)</target>
        </trans-unit>
        <trans-unit id="87542b1c18e720fdc3aefb6538266ffb67ce9b7c" translate="yes" xml:space="preserve">
          <source>FIELD_ENCRYPTION_KEY</source>
          <target state="translated">FIELD_ENCRYPTION_KEY</target>
        </trans-unit>
        <trans-unit id="3b80875fe4a561aca5b5090c2cbb0a6a53b1ccdc" translate="yes" xml:space="preserve">
          <source>FIELD_ENCRYPTION_KEY = os.environ.get(&amp;lsquo;FIELD_ENCRYPTION_KEY&amp;rsquo;, &amp;lsquo;&amp;rsquo;)</source>
          <target state="translated">FIELD_ENCRYPTION_KEY = os.environ.get ( 'FIELD_ENCRYPTION_KEY', '')</target>
        </trans-unit>
        <trans-unit id="400962eff621cc793f6519150ff4d9f2cf751d76" translate="yes" xml:space="preserve">
          <source>For fields that require</source>
          <target state="translated">필요한 필드</target>
        </trans-unit>
        <trans-unit id="a20bdff265e8357a7ac353764f8d87c6ae3a1383" translate="yes" xml:space="preserve">
          <source>Generating an Encryption Key</source>
          <target state="translated">암호화 키 생성</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">운영</target>
        </trans-unit>
        <trans-unit id="11c8575e9c23f6a4e2fd8f92e1c76b6753855162" translate="yes" xml:space="preserve">
          <source>Running this command will print an encryption key to the terminal, which can
be configured in your environment or settings file.</source>
          <target state="translated">이 명령을 실행하면 환경 또는 설정 파일에서 구성 할 수있는 암호화 키가 터미널에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="6b29b1ac47dc9705925d63ba88a5625365c5e4ec" translate="yes" xml:space="preserve">
          <source>There is a Django management command</source>
          <target state="translated">Django 관리 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="830213a0d1aaaca09a58fbd42076c33dc5c946c2" translate="yes" xml:space="preserve">
          <source>This is a fork of &lt;a href=&quot;https://github.com/foundertherapy/django-cryptographic-fields&quot;&gt;https://github.com/foundertherapy/django-cryptographic-fields&lt;/a&gt;.
It has been renamed, and updated to properly support Python3 and latest versions
of Django.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://github.com/foundertherapy/django-cryptographic-fields&quot;&gt;https://github.com/foundertherapy/django-cryptographic-fields&lt;/a&gt; 의 포크입니다 . Python3 및 최신 버전의 Django를 올바르게 지원하도록 이름이 변경되고 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="f6925f33e7a880cfe2bad953e2444a77d1bfe18b" translate="yes" xml:space="preserve">
          <source>To use an encrypted field in a Django model, use one of the fields from the</source>
          <target state="translated">Django 모델에서 암호화 된 필드를 사용하려면 다음 필드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="691d7f33621029ddd827c106d6567b3b489194c2" translate="yes" xml:space="preserve">
          <source>While keyczar is an excellent tool to use for encryption, it&amp;rsquo;s not compatible
with Python 3, and it requires, for hosts like Heroku, that you either check
your key file into your git repository for deployment, or implement manual
post-deployment processing to write the key stored in an environment variable
into a file that keyczar can read.</source>
          <target state="translated">keyczar는 암호화에 사용할 수있는 훌륭한 도구이지만 Python 3과 호환되지 않으며 Heroku와 같은 호스트의 경우 배포를 위해 키 파일을 git 저장소에 체크인하거나 수동 배포 후 처리를 구현하여 작성해야합니다. 환경 변수에 저장된 키를 keyczar가 읽을 수있는 파일로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="bb07ed32928a99b9346b89e890f724afcae04641" translate="yes" xml:space="preserve">
          <source>add the requisite python interpreters:</source>
          <target state="translated">필수 파이썬 인터프리터를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e84044fc708f8800d997a58ff2c5930249bc66be" translate="yes" xml:space="preserve">
          <source>class EncryptedFieldModel(models.Model):</source>
          <target state="translated">클래스 EncryptedFieldModel (models.Model) :</target>
        </trans-unit>
        <trans-unit id="308fecd569a9bff5975a3e1c01f7251e16dcd70f" translate="yes" xml:space="preserve">
          <source>django-encrypted-model-fields</source>
          <target state="translated">장고 암호화 모델 필드</target>
        </trans-unit>
        <trans-unit id="ec267d5bad962437c0d9f29b3c119c7c64055c11" translate="yes" xml:space="preserve">
          <source>encrypted_char_field = EncryptedCharField(max_length=100)</source>
          <target state="translated">encrypted_char_field = EncryptedCharField (최대 _ 길이 = 100)</target>
        </trans-unit>
        <trans-unit id="feffab5f8df15261a2a32d3e46749c5c6bb09aff" translate="yes" xml:space="preserve">
          <source>encrypted_model_fields</source>
          <target state="translated">encrypted_model_fields</target>
        </trans-unit>
        <trans-unit id="49f7d3f991a94c67fc4595d54a970c48b102439f" translate="yes" xml:space="preserve">
          <source>expects the encryption key to be specified
using</source>
          <target state="translated">암호화 키가 다음을 사용하여 지정 될 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="bc272c5c3bab5adedfeabd6eb24ab963053748cb" translate="yes" xml:space="preserve">
          <source>file. For
example, to load it from the local environment:</source>
          <target state="translated">파일. 예를 들어, 로컬 환경에서로드하려면 :</target>
        </trans-unit>
        <trans-unit id="81882a7c1e26b420520c49d7f9c5110394a23b09" translate="yes" xml:space="preserve">
          <source>from encrypted_model_fields.fields import EncryptedCharField</source>
          <target state="translated">encrypted_model_fields.fields에서 가져 오기 EncryptedCharField</target>
        </trans-unit>
        <trans-unit id="4c774b03cd7607418444e938ae104a8a9288a71a" translate="yes" xml:space="preserve">
          <source>generate_encryption_key</source>
          <target state="translated">generate_encryption_key</target>
        </trans-unit>
        <trans-unit id="89ed1aae8d339dc9d09bf407a430d236fa089e16" translate="yes" xml:space="preserve">
          <source>import os</source>
          <target state="translated">수입 OS</target>
        </trans-unit>
        <trans-unit id="2845a172d95217a5c478784887b4231246ee7fcf" translate="yes" xml:space="preserve">
          <source>in your project&amp;rsquo;s</source>
          <target state="translated">프로젝트의</target>
        </trans-unit>
        <trans-unit id="6a1ec99dad4cc63514da320edc8d6a9eed906e0c" translate="yes" xml:space="preserve">
          <source>is set of fields that wrap standard Django
fields with encryption provided by the python cryptography library. These
fields are much more compatible with a 12-factor design since they take their
encryption key from the settings file instead of a file on disk used by</source>
          <target state="translated">python 암호화 라이브러리에서 제공하는 암호화로 표준 Django 필드를 래핑하는 필드 세트입니다. 이 필드는에서 사용하는 디스크의 파일 대신 설정 파일에서 암호화 키를 가져 오기 때문에 12 단계 설계와 훨씬 더 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="df7614250cf825ce49ccd1794afad60108faf9d9" translate="yes" xml:space="preserve">
          <source>is specified.</source>
          <target state="translated">지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d9702b2ddba6c74cfbfdbcf6d922cd7735fcefc" translate="yes" xml:space="preserve">
          <source>keyczar</source>
          <target state="translated">Keyczar</target>
        </trans-unit>
        <trans-unit id="066c8fb10b1dfe1fb4b5669ec6dc7d44d28cdff8" translate="yes" xml:space="preserve">
          <source>library. Use this command to generate a new
encryption key to set as</source>
          <target state="translated">도서관. 이 명령을 사용하여 다음과 같이 설정할 새 암호화 키를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="a1b36622d712c404b8cead2377c73aee345deebc" translate="yes" xml:space="preserve">
          <source>max_length</source>
          <target state="translated">max_length</target>
        </trans-unit>
        <trans-unit id="d1bf2e17e7158e60062b4c38d952e84b30ef30c3" translate="yes" xml:space="preserve">
          <source>module:</source>
          <target state="translated">module:</target>
        </trans-unit>
        <trans-unit id="4e07af08096210cd90233d4671fc115c17c6a859" translate="yes" xml:space="preserve">
          <source>pip install -r dev-requirements.txt</source>
          <target state="translated">pip install -r dev-requirements.txt</target>
        </trans-unit>
        <trans-unit id="1e6cc9aaaba4dc7917607387558f95c3221975d0" translate="yes" xml:space="preserve">
          <source>provided
with the</source>
          <target state="translated">함께 제공</target>
        </trans-unit>
        <trans-unit id="77439450e3126eca7553842e877e9be7280fc269" translate="yes" xml:space="preserve">
          <source>pyenv</source>
          <target state="translated">pyenv</target>
        </trans-unit>
        <trans-unit id="9bc5696a8cc85fccea72c5f98f92cff8894d7b18" translate="yes" xml:space="preserve">
          <source>pyenv install 3.6.5
pyenv install 3.5.5
pyenv install 2.7.15</source>
          <target state="translated">pyenv 설치 3.6.5 pyenv 설치 3.5.5 pyenv 설치 2.7.15</target>
        </trans-unit>
        <trans-unit id="2bbc2384e6f0c570a61174faf3c57a89f61890ed" translate="yes" xml:space="preserve">
          <source>pyenv local 2.7.15 3.5.5 3.6.5</source>
          <target state="translated">pyenv 로컬 2.7.15 3.5.5 3.6.5</target>
        </trans-unit>
        <trans-unit id="e88f6f2b1252402deb0c24f99821ec551477629a" translate="yes" xml:space="preserve">
          <source>settings.FIELD_ENCRYPTION_KEY</source>
          <target state="translated">settings.FIELD_ENCRYPTION_KEY</target>
        </trans-unit>
        <trans-unit id="888c15d72e41c9f0f1882f4aea4c2d19f1a044eb" translate="yes" xml:space="preserve">
          <source>settings.py</source>
          <target state="translated">settings.py</target>
        </trans-unit>
        <trans-unit id="fef511ec1c4c1b81cd87fc395afd0cfeacf16c34" translate="yes" xml:space="preserve">
          <source>to be specified, the</source>
          <target state="translated">지정하려면</target>
        </trans-unit>
        <trans-unit id="7bdf31978c0210720b3420242d2f1d74927c098c" translate="yes" xml:space="preserve">
          <source>tox</source>
          <target state="translated">독극물</target>
        </trans-unit>
        <trans-unit id="92bd75ebd8fd2b0179172217b15350cc6d4002f0" translate="yes" xml:space="preserve">
          <source>using</source>
          <target state="translated">using</target>
        </trans-unit>
        <trans-unit id="904f9de9e819c792c61121d3bc72abd26fc05650" translate="yes" xml:space="preserve">
          <source>variants of those fields will automatically increase the size of the database
field to hold the encrypted form of the content. For example, a 3 character
CharField will automatically specify a database field size of 100 characters
when</source>
          <target state="translated">이러한 필드의 변형은 암호화 된 형태의 콘텐츠를 유지하기 위해 데이터베이스 필드의 크기를 자동으로 증가시킵니다. 예를 들어 3 자 CharField는 다음과 같은 경우 데이터베이스 필드 크기를 100 자로 자동으로 지정합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
