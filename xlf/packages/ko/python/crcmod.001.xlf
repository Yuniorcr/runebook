<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/crcmod/">
    <body>
      <group id="crcmod">
        <trans-unit id="28d303f1280b8b00db095bc23b5edb51ee3a6483" translate="yes" xml:space="preserve">
          <source>, which contains unit
tests for both</source>
          <target state="translated">, 둘 다에 대한 단위 테스트를 포함</target>
        </trans-unit>
        <trans-unit id="4be45b09e251ac4729aa08bb2166009e211b98b3" translate="yes" xml:space="preserve">
          <source>, you should run the unit tests to make sure
everything is installed properly.  The test script performs a number of tests
including a comparison to the direct method which uses a class implementing
polynomials over the integers mod 2.</source>
          <target state="translated">, 모든 것이 제대로 설치되었는지 확인하기 위해 단위 테스트를 실행해야합니다. 테스트 스크립트는 정수 mod 2에 대해 다항식을 구현하는 클래스를 사용하는 직접 메서드와의 비교를 포함하여 여러 테스트를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="d00c3339b246f06d4016d266361fa05d1539372e" translate="yes" xml:space="preserve">
          <source>.
Run the following command:</source>
          <target state="translated">. 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="b52fc10a104e9dca5ffe7376a710f4bd51a915c5" translate="yes" xml:space="preserve">
          <source>.
You may also use the</source>
          <target state="translated">. 당신은 또한 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="20edd3045532ba1df350086595418d0faede93f0" translate="yes" xml:space="preserve">
          <source>.  The generated code was checked to make
sure it compiles with the GCC compiler.</source>
          <target state="translated">. 생성 된 코드는 GCC 컴파일러로 컴파일되는지 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="493af3014138d1d8c2f9ce4fecc7ed908edeba2f" translate="yes" xml:space="preserve">
          <source>.  Use</source>
          <target state="translated">. 사용하다</target>
        </trans-unit>
        <trans-unit id="2bf06e52d5606204175b06b2717f9b98e06ad7d5" translate="yes" xml:space="preserve">
          <source>Alternatively, in the</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="66744080714fb06bedf26298f921a433930670b7" translate="yes" xml:space="preserve">
          <source>Building C extension</source>
          <target state="translated">건물 C 확장</target>
        </trans-unit>
        <trans-unit id="04b1edfa5605aca13be435c54632bf49a7da6634" translate="yes" xml:space="preserve">
          <source>CRC Generator</source>
          <target state="translated">CRC 생성기</target>
        </trans-unit>
        <trans-unit id="d0078b16e6e193ac2fab2fcfbc625d4cc9fdb7f5" translate="yes" xml:space="preserve">
          <source>Code Generation</source>
          <target state="translated">코드 생성</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">기여자</target>
        </trans-unit>
        <trans-unit id="911cfed2dfb85e7ac7e9127db628e093caab8030" translate="yes" xml:space="preserve">
          <source>Craig McQueen</source>
          <target state="translated">크레이그 맥퀸</target>
        </trans-unit>
        <trans-unit id="ffbfc278c4d34c720f85d74c895bf0a2e09e7039" translate="yes" xml:space="preserve">
          <source>Crc</source>
          <target state="translated">Crc</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="befbbac1befca1ef472d2906501e1332b68cb27b" translate="yes" xml:space="preserve">
          <source>Documentation is available from the doc strings.  It is up to you to decide
what polynomials to use in your application.  If someone has not specified the
polynomials to use, you will need to do some research to find one suitable for
your application.  Examples are available in the unit test script</source>
          <target state="translated">문서는 문서 문자열에서 사용할 수 있습니다. 애플리케이션에서 사용할 다항식을 결정하는 것은 사용자에게 달려 있습니다. 누군가 사용할 다항식을 지정하지 않은 경우 애플리케이션에 적합한 다항식을 찾기 위해 조사를해야합니다. 단위 테스트 스크립트에서 예제를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be8bf7cb01dec1c43b40f75a63510276ccda14db" translate="yes" xml:space="preserve">
          <source>For Python 3.x, the install process is the same but you need to use the 3.x
interpreter.</source>
          <target state="translated">Python 3.x의 경우 설치 프로세스는 동일하지만 3.x 인터프리터를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="52e4738c9581759e12f023419cbdd91bc9695ebf" translate="yes" xml:space="preserve">
          <source>For Windows users who want to use the mingw32 compiler, run this command:</source>
          <target state="translated">mingw32 컴파일러를 사용하려는 Windows 사용자의 경우 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c7f24d7254f1f5bc2d1c8f383cd594f9649c1b58" translate="yes" xml:space="preserve">
          <source>For the 2.x versions of Python, these versions have been tested:</source>
          <target state="translated">2.x 버전의 Python의 경우 다음 버전이 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="850aa53b7d6670cbb7e242dde2f94084f895d5f6" translate="yes" xml:space="preserve">
          <source>For the 3.x versions of Python, these versions have been tested:</source>
          <target state="translated">3.x 버전의 Python의 경우 다음 버전이 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">지침</target>
        </trans-unit>
        <trans-unit id="eb576c484dc0906234a76b6397fd1839dece2700" translate="yes" xml:space="preserve">
          <source>If the extension module builds, it will be installed.  Otherwise, the
installation will include the pure Python version.  This will run significantly
slower than the extension module but will allow the package to be used.</source>
          <target state="translated">확장 모듈이 빌드되면 설치됩니다. 그렇지 않으면 설치에 순수 Python 버전이 포함됩니다. 이것은 확장 모듈보다 훨씬 느리게 실행되지만 패키지를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="091cce68b2c0c019c285795f085a0b95ac7c9998" translate="yes" xml:space="preserve">
          <source>If you need to generate code for another language, I suggest you subclass the</source>
          <target state="translated">다른 언어에 대한 코드를 생성해야하는 경우</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="a97a262c83c3ed0910948209493576ab7450e526" translate="yes" xml:space="preserve">
          <source>It may still work on earlier versions of Python 2.x, but these have not been
recently tested.</source>
          <target state="translated">이전 버전의 Python 2.x에서 여전히 작동 할 수 있지만 최근에 테스트되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="e67dd06503d322ddb37aa204244ecbcc12419ca8" translate="yes" xml:space="preserve">
          <source>Python Version</source>
          <target state="translated">Python 버전</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="1df69e4816b1287ed18296090abb1955b1c8d54d" translate="yes" xml:space="preserve">
          <source>The crcmod package is capable of generating C functions that can be compiled
with a C or C++ compiler.  In the test directory, there is an examples.py
script that demonstrates how to use the code generator.  The result of this is
written out to the file</source>
          <target state="translated">crcmod 패키지는 C 또는 C ++ 컴파일러로 컴파일 할 수있는 C 함수를 생성 할 수 있습니다. 테스트 디렉토리에는 코드 생성기를 사용하는 방법을 보여주는 examples.py 스크립트가 있습니다. 이 결과는 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="5a41772ee53d0756a2677bd38de04ff0b8a42df4" translate="yes" xml:space="preserve">
          <source>The crcmod package is installed using</source>
          <target state="translated">crcmod 패키지는 다음을 사용하여 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="90b3a87fc7a28ad594a210e1d1e62b9cb09f5c05" translate="yes" xml:space="preserve">
          <source>The package has separate code to support the 2.x and 3.x Python series.</source>
          <target state="translated">패키지에는 2.x 및 3.x Python 시리즈를 지원하는 별도의 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8cd32ce0a3d5cec5ac7d73539092dbf2b68467e" translate="yes" xml:space="preserve">
          <source>The software in this package is a Python module for generating objects that
compute the Cyclic Redundancy Check (CRC).  There is no attempt in this package
to explain how the CRC works.  There are a number of resources on the web that
give a good explanation of the algorithms.  Just do a Google search for &amp;ldquo;crc
calculation&amp;rdquo; and browse till you find what you need.  Another resource can be
found in chapter 20 of the book &amp;ldquo;Numerical Recipes in C&amp;rdquo; by Press et. al.</source>
          <target state="translated">이 패키지의 소프트웨어는 CRC (Cyclic Redundancy Check)를 계산하는 객체를 생성하기위한 Python 모듈입니다. 이 패키지에는 CRC의 작동 방식을 설명하려는 시도가 없습니다. 알고리즘에 대한 좋은 설명을 제공하는 많은 리소스가 웹에 있습니다. &quot;crc 계산&quot;에 대한 Google 검색을 수행하고 필요한 것을 찾을 때까지 탐색하십시오. 또 다른 리소스는 Press et의 &quot;Numerical Recipes in C&quot;책 20 장에서 찾을 수 있습니다. al.</target>
        </trans-unit>
        <trans-unit id="e004781af13617b28a83b8d786f8a40fc15e6e11" translate="yes" xml:space="preserve">
          <source>This package allows the use of any 8, 16, 24, 32, or 64 bit CRC.  You can
generate a Python function for the selected polynomial or an instance of the
Crc class which provides the same interface as the</source>
          <target state="translated">이 패키지는 8, 16, 24, 32 또는 64 비트 CRC를 사용할 수 있습니다. 선택한 다항식에 대한 Python 함수 또는 다음과 동일한 인터페이스를 제공하는 Crc 클래스의 인스턴스를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10f2c988d83d0d304518b58240636a2218470238" translate="yes" xml:space="preserve">
          <source>To build the C extension, the appropriate compiler tools for your platform must
be installed. Refer to the Python documentation for building C extensions for
details.</source>
          <target state="translated">C 확장을 빌드하려면 플랫폼에 적합한 컴파일러 도구를 설치해야합니다. 자세한 내용은 C 확장 빌드에 대한 Python 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0828ec98ea476fa479dfacee0dbfcd0cc91bbb3f" translate="yes" xml:space="preserve">
          <source>To run the unit tests on Python &amp;gt;=2.5:</source>
          <target state="translated">Python&amp;gt; = 2.5에서 단위 테스트를 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="c6c14e820d6075211924c681507d8cacb82ddcbe" translate="yes" xml:space="preserve">
          <source>When you first install</source>
          <target state="translated">처음 설치할 때</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="e1a927710e3bfbdd35253ac1370ba9ea3e9dfe76" translate="yes" xml:space="preserve">
          <source>as
a model for the new version.</source>
          <target state="translated">새 버전의 모델로.</target>
        </trans-unit>
        <trans-unit id="c6b761bbd485802a68f894af97c2718ab83f5fc1" translate="yes" xml:space="preserve">
          <source>class and replace the method</source>
          <target state="translated">클래스 및 메소드 교체</target>
        </trans-unit>
        <trans-unit id="1ecf2de728e6b18f2cd0adf6194e22233f8ea162" translate="yes" xml:space="preserve">
          <source>class instance can also generate
C/C++ source code that can be used in another application.</source>
          <target state="translated">클래스 인스턴스는 다른 애플리케이션에서 사용할 수있는 C / C ++ 소스 코드를 생성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4f0454286dad8d92b98e8c355762c870ba7a16f" translate="yes" xml:space="preserve">
          <source>crcmod</source>
          <target state="translated">crcmod</target>
        </trans-unit>
        <trans-unit id="14a7304b13f45cd0af6a323ce7011e82954595a8" translate="yes" xml:space="preserve">
          <source>crcmod.predefined</source>
          <target state="translated">crcmod.predefined</target>
        </trans-unit>
        <trans-unit id="410275fe0a3ef7d9f2dd234cb8b9775f5e6e04b3" translate="yes" xml:space="preserve">
          <source>crcmod.test</source>
          <target state="translated">crcmod.test</target>
        </trans-unit>
        <trans-unit id="0bcdf200d7a54c08a3b362ef3dfccc6a504ae823" translate="yes" xml:space="preserve">
          <source>directory run:</source>
          <target state="translated">디렉토리 실행 :</target>
        </trans-unit>
        <trans-unit id="9d5c61b50b1fb9f50174dc923990e3b1afb8515b" translate="yes" xml:space="preserve">
          <source>distutils</source>
          <target state="translated">distutils</target>
        </trans-unit>
        <trans-unit id="dbad997bd0bb4630b70fce61ead288ad1372a9b1" translate="yes" xml:space="preserve">
          <source>examples.c</source>
          <target state="translated">examples.c</target>
        </trans-unit>
        <trans-unit id="1ab20b233b709fe74ad493bf3beb80496e261452" translate="yes" xml:space="preserve">
          <source>file for details.</source>
          <target state="translated">자세한 내용은 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8d3f56b2f4b1e37016b14905e3b13e8e8801cba8" translate="yes" xml:space="preserve">
          <source>generateCode</source>
          <target state="translated">generateCode</target>
        </trans-unit>
        <trans-unit id="c1ea94f7e524679d0cf34ab7b0b28abe41ba732b" translate="yes" xml:space="preserve">
          <source>md5</source>
          <target state="translated">md5</target>
        </trans-unit>
        <trans-unit id="dd2441428475dceb091a758b515387983351739d" translate="yes" xml:space="preserve">
          <source>module to select one of the standard
polynomials.</source>
          <target state="translated">모듈을 사용하여 표준 다항식 중 하나를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9fd1c6c48fd95954002b9791e34fe069e8c4a9b3" translate="yes" xml:space="preserve">
          <source>modules
from the Python standard library.  A</source>
          <target state="translated">Python 표준 라이브러리의 모듈. ㅏ</target>
        </trans-unit>
        <trans-unit id="b2706f64c65fd288215d073181ed84f4fc724556" translate="yes" xml:space="preserve">
          <source>package has a module</source>
          <target state="translated">패키지에 모듈이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e333a49dda1b33b63344e1648dd5cf8e538b2db" translate="yes" xml:space="preserve">
          <source>package is released under the MIT license. See the</source>
          <target state="translated">패키지는 MIT 라이센스로 출시되었습니다. 참조</target>
        </trans-unit>
        <trans-unit id="182289100048348805f5f7f70e9cbbe3fd0e6d0c" translate="yes" xml:space="preserve">
          <source>predefined</source>
          <target state="translated">미리 정의 된</target>
        </trans-unit>
        <trans-unit id="d8f4590320e1343a915b6394170650a8f35d6926" translate="yes" xml:space="preserve">
          <source>sha</source>
          <target state="translated">샤</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="a36e355ddb203d7d4133221f339dc406cb9f480f" translate="yes" xml:space="preserve">
          <source>test.py</source>
          <target state="translated">test.py</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
