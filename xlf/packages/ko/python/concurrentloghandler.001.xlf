<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/concurrentloghandler/">
    <body>
      <group id="concurrentloghandler">
        <trans-unit id="e07f8e23c0c928d716c6dd95a411fd0fe5999554" translate="yes" xml:space="preserve">
          <source>, here is an example:</source>
          <target state="translated">, 다음은 예입니다.</target>
        </trans-unit>
        <trans-unit id="0c517ef6bd2f1729176842d7685d39a4ad223c36" translate="yes" xml:space="preserve">
          <source>, which will
strictly adhere to the maximum file size.</source>
          <target state="translated">, 최대 파일 크기를 엄격하게 준수합니다.</target>
        </trans-unit>
        <trans-unit id="6aa54f386b7bdcb03cc56d0f4c5ef0269eb2d943" translate="yes" xml:space="preserve">
          <source>.  Extra care is taken to ensure that logs
can be safely rotated before the rotation process is started. (This module works
around the file rename issue with</source>
          <target state="translated">. 회전 프로세스가 시작되기 전에 로그를 안전하게 회전 할 수 있도록 각별히주의해야합니다. (이 모듈은 파일 이름 변경 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="12e324934490e515b4bfb40e5fc7042448a6384a" translate="yes" xml:space="preserve">
          <source>. This class
is now available using</source>
          <target state="translated">. 이 클래스는 이제 다음을 사용하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15b6dab431df6b039db89d2e28de6e41f4699dd0" translate="yes" xml:space="preserve">
          <source>. This module uses file
locking so that multiple processes can concurrently log to a single file without
dropping or clobbering log events. This module provides a file rotation scheme
like with</source>
          <target state="translated">. 이 모듈은 파일 잠금을 사용하므로 여러 프로세스가 로그 이벤트를 삭제하거나 방해하지 않고 단일 파일에 동시에 로깅 할 수 있습니다. 이 모듈은 다음과 같은 파일 순환 구성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8e1254db18c1bae88fc9c6f7982aca9051973602" translate="yes" xml:space="preserve">
          <source>. You should not attempt to mix
and match</source>
          <target state="translated">. 믹스 앤 매치를 시도해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a573f475c3b2e4d24fcbf5efa759b2e4876973f1" translate="yes" xml:space="preserve">
          <source>0.7.4:  Minor bug fix</source>
          <target state="translated">0.7.4 : 사소한 버그 수정</target>
        </trans-unit>
        <trans-unit id="f746b55e9763219b42397accf967e34a612cff29" translate="yes" xml:space="preserve">
          <source>0.8.0:  Minor feature release</source>
          <target state="translated">0.8.0 : 부 기능 릴리스</target>
        </trans-unit>
        <trans-unit id="2389b7958f82b15b1c5dcb0bccc3939177885a13" translate="yes" xml:space="preserve">
          <source>0.8.1:  Minor bug fix release</source>
          <target state="translated">0.8.1 : 사소한 버그 수정 릴리스</target>
        </trans-unit>
        <trans-unit id="fcdae8f8a112e5dc020d1108ee61ac435c56494d" translate="yes" xml:space="preserve">
          <source>0.8.2:  Minor bug fix release (again)</source>
          <target state="translated">0.8.2 : 사소한 버그 수정 릴리스 (다시)</target>
        </trans-unit>
        <trans-unit id="2389078deadd6b10716b0c66bc79697a4a09ab60" translate="yes" xml:space="preserve">
          <source>0.8.3:  Fixed a log file rotation bug and updated docs</source>
          <target state="translated">0.8.3 : 로그 파일 회전 버그 수정 및 문서 업데이트</target>
        </trans-unit>
        <trans-unit id="89011b6e34a427d3084f36593f9c81a4ab2700ac" translate="yes" xml:space="preserve">
          <source>0.8.4:  Fixed lock-file naming issue</source>
          <target state="translated">0.8.4 : 잠금 파일 이름 지정 문제 수정</target>
        </trans-unit>
        <trans-unit id="c2a97259a2ceb51495a14fd16a8da13440af0e4a" translate="yes" xml:space="preserve">
          <source>0.8.5:  Fixed ValueError: I/O operation on closed file</source>
          <target state="translated">0.8.5 : 고정 값 오류 : 닫힌 파일에 대한 I / O 작업</target>
        </trans-unit>
        <trans-unit id="81ebf9a842bbfdaab0a9686fd4b7ed01ef7e81dd" translate="yes" xml:space="preserve">
          <source>0.8.6:  Fixed packaging bug with test script</source>
          <target state="translated">0.8.6 : 테스트 스크립트의 패키징 버그 수정</target>
        </trans-unit>
        <trans-unit id="ee524e1e9bdc1b0e0e9945583538c10485eec9a4" translate="yes" xml:space="preserve">
          <source>0.9.0:  Now requires Python 2.6+</source>
          <target state="translated">0.9.0 : 이제 Python 2.6 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d2b92c45ccb2ec17a8d69beadaccf3535b05dd38" translate="yes" xml:space="preserve">
          <source>0.9.1:  Bug fixes - &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199332&quot;&gt;LP Bug 1199332&lt;/a&gt; and &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199333&quot;&gt;LP Bug 1199333&lt;/a&gt;.</source>
          <target state="translated">0.9.1 : 버그 수정 &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199332&quot;&gt;-LP 버그 1199332&lt;/a&gt; 및 &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199333&quot;&gt;LP 버그 1199333&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3100c4e69d3e58aa0be234c10b6cae3d3333f9cb" translate="yes" xml:space="preserve">
          <source>Add better support for using</source>
          <target state="translated">사용에 대한 더 나은 지원 추가</target>
        </trans-unit>
        <trans-unit id="c4e6de36ab0de1430b1aa9e4771ce2ce83ce0ccc" translate="yes" xml:space="preserve">
          <source>Add the &amp;lsquo;delay&amp;rsquo; parameter (delayed log file opening) to better match the
core logging functionality in more recent version of Python.</source>
          <target state="translated">최신 버전의 Python에서 핵심 로깅 기능과 더 잘 일치하도록 'delay'매개 변수 (지연된 로그 파일 열기)를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="53880d1b550ef1c8c3547454e9094347ecf9c9d2" translate="yes" xml:space="preserve">
          <source>Added a change log; which you are reading now.</source>
          <target state="translated">변경 로그를 추가했습니다. 지금 읽고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd888b57ec8cea5ffcc65c29e5bdf323b1419b7" translate="yes" xml:space="preserve">
          <source>Automatic fallback example</source>
          <target state="translated">자동 대체 예</target>
        </trans-unit>
        <trans-unit id="5ea2c0d0d9b03ca14d6d6d281f2f3bc6b4bca171" translate="yes" xml:space="preserve">
          <source>Big thanks to Dan Callaghan for forwarding these issues and patches.</source>
          <target state="translated">이러한 문제와 패치를 전달해 주신 Dan Callaghan에게 큰 감사를드립니다.</target>
        </trans-unit>
        <trans-unit id="9c74fb571984d7f3e781ea8b013e5f74bcd16389" translate="yes" xml:space="preserve">
          <source>Change Log</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="6d448766a5fe4c1b8aa4deb1cab3ce7c0144ba4e" translate="yes" xml:space="preserve">
          <source>Cleanup the docs. (aka &amp;ldquo;the page you are reading right now&amp;rdquo;) I fixed some
silly mistakes and typos&amp;hellip; who writes this stuff?</source>
          <target state="translated">문서를 정리하십시오. (일명&amp;ldquo;지금 읽고있는 페이지&amp;rdquo;) 어리석은 실수와 오타를 고쳤습니다. 누가이 글을 쓰나요?</target>
        </trans-unit>
        <trans-unit id="b6614773086afbebc5c6952e20ab5ae21cd2977a" translate="yes" xml:space="preserve">
          <source>Concurrent logging handler (drop-in replacement for RotatingFileHandler) Python 2.6+</source>
          <target state="translated">동시 로깅 처리기 (RotatingFileHandler의 드롭 인 대체) Python 2.6 이상</target>
        </trans-unit>
        <trans-unit id="1b28af8c3a1495f4847afb98eb455a75bac21fe6" translate="yes" xml:space="preserve">
          <source>ConcurrentLogHandler</source>
          <target state="translated">ConcurrentLogHandler</target>
        </trans-unit>
        <trans-unit id="252106d5210fdbd5c7fd5a0832019d80400c2c0a" translate="yes" xml:space="preserve">
          <source>ConcurrentRotatingFileHandler</source>
          <target state="translated">ConcurrentRotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="5d0355535f712761cd5201c136989cc42aae49f7" translate="yes" xml:space="preserve">
          <source>Config file example</source>
          <target state="translated">구성 파일 예</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">세부</target>
        </trans-unit>
        <trans-unit id="253b515d0eeb3f8296e6237afd95c0a302518957" translate="yes" xml:space="preserve">
          <source>Example Python code:</source>
          <target state="translated">Python 코드 예 :</target>
        </trans-unit>
        <trans-unit id="ebf00a274c6977681a376459f36dd8b2146ac132" translate="yes" xml:space="preserve">
          <source>Example config file:</source>
          <target state="translated">구성 파일 예 :</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="7b157c5085b418b69189811f4781f323a1b3c1c6" translate="yes" xml:space="preserve">
          <source>Fix a small packaging bug from the 0.8.5 release.  (Thanks to Bj&amp;ouml;rn H&amp;auml;user
for bringing this to my attention.)</source>
          <target state="translated">0.8.5 릴리스의 작은 패키징 버그를 수정합니다. (이 점을 주목 해 주신 Bj&amp;ouml;rn H&amp;auml;user에게 감사드립니다.)</target>
        </trans-unit>
        <trans-unit id="bf172c93d2bc3efba5e569fe47f7c647a46958ba" translate="yes" xml:space="preserve">
          <source>Fixed a bug that happens after log rotation when multiple processes are
witting to the same log file. Each process ends up writing to their own
log file (&amp;ldquo;log.1&amp;rdquo; or &amp;ldquo;log.2&amp;rdquo; instead of &amp;ldquo;log&amp;rdquo;). The fix is simply to reopen
the log file and check the size again.  I do not believe this bug results in
data loss; however, this certainly was not the desired behavior.  (A big
thanks goes to Oliver Tonnhofer for finding, documenting, and providing a
patch for this bug.)</source>
          <target state="translated">여러 프로세스가 동일한 로그 파일에 기록 될 때 로그 회전 후 발생하는 버그를 수정했습니다. 각 프로세스는 자신의 로그 파일 ( &quot;log&quot;대신 &quot;log.1&quot;또는 &quot;log.2&quot;)에 기록합니다. 해결 방법은 단순히 로그 파일을 다시 열고 크기를 다시 확인하는 것입니다. 이 버그가 데이터 손실을 초래한다고 생각하지 않습니다. 그러나 이것은 확실히 바람직한 행동이 아니 었습니다. (이 버그에 대한 패치를 찾고, 문서화하고, 제공 한 Oliver Tonnhofer에게 큰 감사를드립니다.)</target>
        </trans-unit>
        <trans-unit id="8cf0d5b810af174252c95b8fbf9e535462b359f6" translate="yes" xml:space="preserve">
          <source>Fixed a typo in the package description (incorrect class name)</source>
          <target state="translated">패키지 설명의 오타를 수정했습니다 (잘못된 클래스 이름).</target>
        </trans-unit>
        <trans-unit id="ae3c1d93fe9fd70b0948209e311a61bfccd4ec71" translate="yes" xml:space="preserve">
          <source>Fixed minor spelling mistakes</source>
          <target state="translated">사소한 철자 오류 수정</target>
        </trans-unit>
        <trans-unit id="1e743b0b91f69142ae8cf27d6a9d4941c7120af5" translate="yes" xml:space="preserve">
          <source>Fixed the</source>
          <target state="translated">수정</target>
        </trans-unit>
        <trans-unit id="5fd950ce63193af2d4699a5523f6640ad2409690" translate="yes" xml:space="preserve">
          <source>For anyone still using Python 2.3-2.5, please use the latest 0.8.x release</source>
          <target state="translated">아직 Python 2.3-2.5를 사용하는 사람은 최신 0.8.x 릴리스를 사용하세요.</target>
        </trans-unit>
        <trans-unit id="6a5f920c23e00c90b84313ae6a37c9568a1d9ee7" translate="yes" xml:space="preserve">
          <source>Found and resolved another issue with older logging packages that do not
support encoding.</source>
          <target state="translated">인코딩을 지원하지 않는 이전 로깅 패키지의 또 다른 문제를 발견하고 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="a9b5bcfdd83ac7019e46fa338d531c88f101270c" translate="yes" xml:space="preserve">
          <source>Handle logging.shutdown() in Python 2.7+. Close the lock file stream via
close().</source>
          <target state="translated">Python 2.7 이상에서 logging.shutdown ()을 처리합니다. close ()를 통해 잠금 파일 스트림을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="838120fff8d6be71ef54cf7952fa67ea584bf69a" translate="yes" xml:space="preserve">
          <source>Here is a example demonstrating how to use this module directly (from within
Python code):</source>
          <target state="translated">다음은이 모듈을 Python 코드 내에서 직접 사용하는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="b50417bf1327026fb3df8de5c929f6bae9cfe73b" translate="yes" xml:space="preserve">
          <source>If you are distributing your code and you are unsure if the</source>
          <target state="translated">코드를 배포하고 있고</target>
        </trans-unit>
        <trans-unit id="8ca35add8370298abe65b8542611934195a91208" translate="yes" xml:space="preserve">
          <source>If you are installing from source, you can use:</source>
          <target state="translated">소스에서 설치하는 경우 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="481ed98a35c1305512719dad3b4f91271f9630d6" translate="yes" xml:space="preserve">
          <source>If you have multiple instances of a script (or multiple scripts) all running at
the same time and writing to the same log file, then &lt;em&gt;all&lt;/em&gt; of the scripts should
be using</source>
          <target state="translated">한 스크립트 (또는 여러 스크립트)의 여러 인스턴스가 모두 동시에 실행되고 동일한 로그 파일에 기록되는 경우 &lt;em&gt;모든&lt;/em&gt; 스크립트는</target>
        </trans-unit>
        <trans-unit id="a1a1db1c9f7b0b7c96fdfd1ba07226a56eab12bd" translate="yes" xml:space="preserve">
          <source>Initial Python 3 support (needs more testing)</source>
          <target state="translated">초기 Python 3 지원 (더 많은 테스트 필요)</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="960432724edb9cae58ccc74001b698ecabdc7a98" translate="yes" xml:space="preserve">
          <source>Minor changes in how the</source>
          <target state="translated">방법의 사소한 변경</target>
        </trans-unit>
        <trans-unit id="c2b4942c333f9df10cc770fc5d0c33a0086059f2" translate="yes" xml:space="preserve">
          <source>More gracefully handle out of disk space scenarios. Prevent release() from
throwing an exception.</source>
          <target state="translated">디스크 공간 부족 시나리오를보다 적절하게 처리합니다. release ()에서 예외가 발생하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="aa944a28eda3e7deb14b1414484ae0c5124badec" translate="yes" xml:space="preserve">
          <source>Now importing &amp;ldquo;codecs&amp;rdquo; directly; I found some slight differences in the
logging module in different Python 2.4.x releases that caused the module to
fail to load.</source>
          <target state="translated">이제 &quot;코덱&quot;을 직접 가져옵니다. 다른 Python 2.4.x 릴리스의 로깅 모듈에서 약간의 차이가있어 모듈을로드하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="21bd6353604ca4624fa65d83d3e730e737d2d612" translate="yes" xml:space="preserve">
          <source>Resolved a minor issue where lock-files would be improperly named if the
log file contained &amp;ldquo;.log&amp;rdquo; in the middle of the log name.  For example, if
you log file was &amp;ldquo;/var/log/mycompany.logging.mysource.log&amp;rdquo;, the lock file
would be named &amp;ldquo;/var/log/mycompany.ging.mysource.lock&amp;rdquo;, which is not correct.
Thanks to Dirk Rothe for pointing this out.  Since this introduce a slight
lock-file behavior difference, make sure all concurrent writers are updated
to 0.8.4 at the same time if this issue effects you.</source>
          <target state="translated">로그 파일의 로그 이름 중간에 &quot;.log&quot;가 포함 된 경우 잠금 파일의 이름이 잘못 지정되는 사소한 문제가 해결되었습니다. 예를 들어, 로그 파일이 &quot;/var/log/mycompany.logging.mysource.log&quot;인 경우 잠금 파일 이름은 &quot;/var/log/mycompany.ging.mysource.lock&quot;이되며 올바르지 않습니다. 이것을 지적한 Dirk Rothe에게 감사드립니다. 이로 인해 약간의 잠금 파일 동작 차이가 발생하므로이 문제가 영향을 미치는 경우 모든 동시 작성자를 동시에 0.8.4로 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="f550fc849962936098991389a7440b3727fd732f" translate="yes" xml:space="preserve">
          <source>Revamp file opening/closing and file-locking internals (inspired by
feedback from Vinay Sajip.)</source>
          <target state="translated">파일 열기 / 닫기 및 파일 잠금 내부 개선 (Vinay Sajip의 피드백에서 영감을 얻음)</target>
        </trans-unit>
        <trans-unit id="84c242a1292be7c78ad1acc56caac0a8dd07191a" translate="yes" xml:space="preserve">
          <source>RotatingFileHandler</source>
          <target state="translated">RotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="5e304f056e58b6e6eaa24303b5a9eee156ad581f" translate="yes" xml:space="preserve">
          <source>RotatingFileHanler</source>
          <target state="translated">RotatingFileHanler</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">간단한 예</target>
        </trans-unit>
        <trans-unit id="f4f5fd84a0ba5891046137ed24b1a1918ee6f9a9" translate="yes" xml:space="preserve">
          <source>Thanks to Vince Carney, Arif Kasim, Matt Drew, Nick Coghlan, and
Dan Callaghan for bug reports.  Bugs can now be filled here:
&lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler&quot;&gt;https://bugs.launchpad.net/python-concurrent-log-handler&lt;/a&gt;.  Bugs resolved
&lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=858912&quot;&gt;Red Hat Bug #858912&lt;/a&gt; and &lt;a href=&quot;http://bugs.python.org/issue15960&quot;&gt;Python Bug #15960&lt;/a&gt;</source>
          <target state="translated">버그보고를 위해 Vince Carney, Arif Kasim, Matt Drew, Nick Coghlan 및 Dan Callaghan에게 감사드립니다. 이제 &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler&quot;&gt;https://bugs.launchpad.net/python-concurrent-log-handler&lt;/a&gt; 에서 버그를 채울 수 있습니다 . 버그 해결 &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=858912&quot;&gt;Red Hat 버그 # 858912&lt;/a&gt; 및 &lt;a href=&quot;http://bugs.python.org/issue15960&quot;&gt;Python 버그 # 15960&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="7fab5c314c4c97e01b24313cafebf44bb2c31657" translate="yes" xml:space="preserve">
          <source>This example shows you how to use this log handler with the logging config file
parser. This allows you to keep your logging configuration code separate from
your application code.</source>
          <target state="translated">이 예제는 로깅 구성 파일 구문 분석기와 함께이 로그 핸들러를 사용하는 방법을 보여줍니다. 이를 통해 로깅 구성 코드를 애플리케이션 코드와 별도로 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="591fbbfbabf886124da3e228a718d579ede0ac38" translate="yes" xml:space="preserve">
          <source>This module attempts to preserve log records at all cost. This means that log
files will grow larger than the specified maximum (rotation) size. So if disk
space is tight, you may want to stick with</source>
          <target state="translated">이 모듈은 어떤 비용 으로든 로그 레코드를 보존하려고합니다. 이는 로그 파일이 지정된 최대 (회전) 크기보다 커짐을 의미합니다. 따라서 디스크 공간이 부족한 경우</target>
        </trans-unit>
        <trans-unit id="ab311f9f87d9274361b6a5f331584dd5cf7b4941" translate="yes" xml:space="preserve">
          <source>This module has had minimal testing in a multi-threaded process.  I see no
reason why this should be an issue, but no stress-testing has been done in a
threaded situation. If this is important to you, you could always add
threading support to the</source>
          <target state="translated">이 모듈은 다중 스레드 프로세스에서 최소한의 테스트를 거쳤습니다. 이것이 문제가 될 이유는 없지만 스레드 상황에서 스트레스 테스트는 수행되지 않았습니다. 이것이 중요하다면 언제든지 스레딩 지원을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9f5b89e5c0d45f0a790e323e5048199fa9c215f" translate="yes" xml:space="preserve">
          <source>This module provides an additional log handler for Python&amp;rsquo;s standard logging
package (PEP 282). This handler will write log events to log file which is
rotated when the log file reaches a certain size.  Multiple processes can
safely write to the same log file concurrently.</source>
          <target state="translated">이 모듈은 Python의 표준 로깅 패키지 (PEP 282)에 대한 추가 로그 핸들러를 제공합니다. 이 핸들러는 로그 파일이 특정 크기에 도달하면 회전하는 로그 파일에 로그 이벤트를 기록합니다. 여러 프로세스가 동시에 동일한 로그 파일에 안전하게 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a868d044935008956cbb4011585c9147e69c375c" translate="yes" xml:space="preserve">
          <source>This package bundles &lt;a href=&quot;http://code.activestate.com/recipes/65203/&quot;&gt;portalocker&lt;/a&gt; to deal with file locking.  Please be aware
that portalocker only supports Unix (posix) an NT platforms at this time, and
therefore this package only supports those platforms as well.</source>
          <target state="translated">이 패키지 는 파일 잠금을 처리하기 위해 &lt;a href=&quot;http://code.activestate.com/recipes/65203/&quot;&gt;portalocker&lt;/a&gt; 를 번들 로 제공합니다. Portalocker는 현재 NT 플랫폼 인 Unix (posix) 만 지원하므로이 패키지는 해당 플랫폼 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7939660430e4cce43c10138b94042e02743cf5f6" translate="yes" xml:space="preserve">
          <source>To-do</source>
          <target state="translated">할 것</target>
        </trans-unit>
        <trans-unit id="7ef379c5669e534519847d1455279fa57e3cd4b2" translate="yes" xml:space="preserve">
          <source>Updated ez_setup.py to 0.6c11</source>
          <target state="translated">ez_setup.py를 0.6c11로 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="fe6f69855bbda1debd08927eac1157f9145b262b" translate="yes" xml:space="preserve">
          <source>Updated ez_setup.py to 0.7.7</source>
          <target state="translated">ez_setup.py를 0.7.7로 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="507ff62859907be4cb3a2ad7eced9cf1519784d1" translate="yes" xml:space="preserve">
          <source>Updated portalocker to 0.3 (now maintained by Rick van Hattem)</source>
          <target state="translated">portalocker를 0.3으로 업데이트했습니다 (현재 Rick van Hattem에서 유지 관리).</target>
        </trans-unit>
        <trans-unit id="c71517071fdd54a8179d6045cb86fb6c5c8285a8" translate="yes" xml:space="preserve">
          <source>Updated stresstest.py to always use the correct python version when
launching sub-processes instead of the system&amp;rsquo;s default &amp;ldquo;python&amp;rdquo;.</source>
          <target state="translated">시스템의 기본&amp;ldquo;python&amp;rdquo;대신 하위 프로세스를 시작할 때 항상 올바른 Python 버전을 사용하도록 stresstest.py를 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="74e0788da0ada826238ddfc60fffbd7ddc0f253c" translate="yes" xml:space="preserve">
          <source>Use the following command to install this package:</source>
          <target state="translated">이 패키지를 설치하려면 다음 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="13cce7fd076299c81b4986166f3d822791c9490e" translate="yes" xml:space="preserve">
          <source>app.py</source>
          <target state="translated">app.py</target>
        </trans-unit>
        <trans-unit id="f06c85e6af13f13bf2d2737584bab320feb822c1" translate="yes" xml:space="preserve">
          <source>class is a drop-in replacement for
Python&amp;rsquo;s standard log handler</source>
          <target state="translated">클래스는 Python의 표준 로그 핸들러의 드롭 인 대체품입니다.</target>
        </trans-unit>
        <trans-unit id="531039cb2e0902f99711796108453af33f232f17" translate="yes" xml:space="preserve">
          <source>class=handlers.ConcurrentRotatingFileHandler</source>
          <target state="translated">class = handlers.ConcurrentRotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="2553a9bd0bdcd6eb0bf6c9b17385b6c5a9a5420a" translate="yes" xml:space="preserve">
          <source>close()</source>
          <target state="translated">닫기()</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">파일 이름</target>
        </trans-unit>
        <trans-unit id="4c7c166129f06380d97de36b173359e6227788b8" translate="yes" xml:space="preserve">
          <source>logging.config.fileConfig()</source>
          <target state="translated">logging.config.fileConfig ()</target>
        </trans-unit>
        <trans-unit id="d3a23f55db3ef4ca04b49ef38c66b3c1f75f0d19" translate="yes" xml:space="preserve">
          <source>logging.ini</source>
          <target state="translated">logging.ini</target>
        </trans-unit>
        <trans-unit id="2df60f69ee74ecf27ea5e85076b617da0aed1ead" translate="yes" xml:space="preserve">
          <source>method to no longer assume that stream is still
open.</source>
          <target state="translated">더 이상 스트림이 아직 열려 있다고 가정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e9702e970720874da53f588b6ca91ed5ca1fcc3" translate="yes" xml:space="preserve">
          <source>on Windows, where a
rotation failure means that all subsequent log events are dropped).</source>
          <target state="translated">Windows에서 회전 실패는 모든 후속 로그 이벤트가 삭제됨을 의미 함).</target>
        </trans-unit>
        <trans-unit id="15cbfd057853a767a14eb00bcefd25b67f69e542" translate="yes" xml:space="preserve">
          <source>package has been installed everywhere your code will run,
Python makes it easy to gracefully fallback to the built in</source>
          <target state="translated">코드가 실행될 모든 곳에 패키지가 설치되어 있습니다. Python을 사용하면 내장 된</target>
        </trans-unit>
        <trans-unit id="d80bb01ec045b4ec0982ea33d24bd2f2986db0b2" translate="yes" xml:space="preserve">
          <source>parameter is handled when given a
relative path.</source>
          <target state="translated">매개 변수는 상대 경로가 주어지면 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="bd6d165fd10d5312ed5565eabd2ba2c8e453af97" translate="yes" xml:space="preserve">
          <source>script and send me the patch.</source>
          <target state="translated">스크립트를 작성하고 패치를 보내주세요.</target>
        </trans-unit>
        <trans-unit id="4f91fb4c69a069c3817d655e8765afa21659d905" translate="yes" xml:space="preserve">
          <source>stresstest.py</source>
          <target state="translated">stresstest.py</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
