<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/livereload/">
    <body>
      <group id="livereload">
        <trans-unit id="081beb50f6c4dc5e76355974fb78f352f6467ec4" translate="yes" xml:space="preserve">
          <source>'livereload'</source>
          <target state="translated">'livereload'</target>
        </trans-unit>
        <trans-unit id="be1e6a613e204620f017c3063edbfe700aac3863" translate="yes" xml:space="preserve">
          <source>, for starting a server in a directory.</source>
          <target state="translated">, 디렉토리에서 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8dbff69149a8667550c7d56b0f7e6b7b2110850e" translate="yes" xml:space="preserve">
          <source>./manage.py livereload</source>
          <target state="translated">./manage.py livereload</target>
        </trans-unit>
        <trans-unit id="82243e0988dd1633eb18d18c3312ba5d397045c7" translate="yes" xml:space="preserve">
          <source>./manage.py livereload -h</source>
          <target state="translated">./manage.py livereload -h</target>
        </trans-unit>
        <trans-unit id="3b8ac6c75a9274bd6c7b12be1395b5c22b3a06be" translate="yes" xml:space="preserve">
          <source>Bottle</source>
          <target state="translated">병</target>
        </trans-unit>
        <trans-unit id="ae06a732b088c296d5b86a05207844bbe7c9ebd3" translate="yes" xml:space="preserve">
          <source>By default, it will listen to port 35729, the common port for &lt;a href=&quot;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-&quot;&gt;LiveReload browser extensions&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-&quot;&gt;LiveReload 브라우저 확장&lt;/a&gt; 의 공통 포트 인 포트 35729 를 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">커맨드 라인 인터페이스</target>
        </trans-unit>
        <trans-unit id="45e199c34f2e47d26bd6cf3b0bc418229f9353d7" translate="yes" xml:space="preserve">
          <source>Developer Guide</source>
          <target state="translated">개발자 안내서</target>
        </trans-unit>
        <trans-unit id="b6c95e2580609775eb2b7302ad50c369810daef6" translate="yes" xml:space="preserve">
          <source>Django</source>
          <target state="translated">장고</target>
        </trans-unit>
        <trans-unit id="b58aa96da1fdda8eb190071552ee01b4b1984e55" translate="yes" xml:space="preserve">
          <source>Download on PyPi</source>
          <target state="translated">PyPi에서 다운로드</target>
        </trans-unit>
        <trans-unit id="f749d85face6d985a84c2dd0bb2da0a1fcb65288" translate="yes" xml:space="preserve">
          <source>Flask</source>
          <target state="translated">플라스크</target>
        </trans-unit>
        <trans-unit id="40922b194282f4e05b2268f92c6ebd130edc0400" translate="yes" xml:space="preserve">
          <source>For Django there is a management command included.</source>
          <target state="translated">Django의 경우 관리 명령이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="154e5e355681ddde38277eb897d0a7b563146de5" translate="yes" xml:space="preserve">
          <source>For available options like host and ports please refer to</source>
          <target state="translated">호스트 및 포트와 같은 사용 가능한 옵션은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="04f6698ca97926daebce763358ab791c3b369601" translate="yes" xml:space="preserve">
          <source>Frameworks Integration</source>
          <target state="translated">프레임 워크 통합</target>
        </trans-unit>
        <trans-unit id="b01514bd91d2d8cd6d9e0ace6dc91840382cf92c" translate="yes" xml:space="preserve">
          <source>Guardfile</source>
          <target state="translated">Guardfile</target>
        </trans-unit>
        <trans-unit id="5c2f91339a044e3c27ac63aae69edae0156efeab" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple example script that rebuilds Sphinx documentation:</source>
          <target state="translated">다음은 Sphinx 문서를 다시 빌드하는 간단한 예제 스크립트입니다.</target>
        </trans-unit>
        <trans-unit id="f20870c5fe9f8118e8fb4eca60c4dcb38053af40" translate="yes" xml:space="preserve">
          <source>INSTALLED_APPS</source>
          <target state="translated">INSTALLED_APPS</target>
        </trans-unit>
        <trans-unit id="6a06e46176aee33a71fcaa2b488f3c7e948d477a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have pip installed, try easy_install:</source>
          <target state="translated">pip가 설치되어 있지 않은 경우 easy_install을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="691b993d2c87d8ea1d2bd6f10d1f06821b2405a4" translate="yes" xml:space="preserve">
          <source>Install Python LiveReload with pip:</source>
          <target state="translated">pip로 Python LiveReload를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="74a60901efa52be67e7f19bca0b4dff842291f94" translate="yes" xml:space="preserve">
          <source>Livereload can work seamlessly with your favorite framework.</source>
          <target state="translated">Livereload는 선호하는 프레임 워크와 원활하게 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ddea612a501a2add9bf3ca14810bbd7810197c4" translate="yes" xml:space="preserve">
          <source>Older versions of Python LiveReload used a</source>
          <target state="translated">이전 버전의 Python LiveReload는</target>
        </trans-unit>
        <trans-unit id="54982317ae3f211dbe87a62fae75a58649924f0e" translate="yes" xml:space="preserve">
          <source>Python LiveReload is an awesome tool for web developers</source>
          <target state="translated">Python LiveReload는 웹 개발자를위한 멋진 도구입니다.</target>
        </trans-unit>
        <trans-unit id="0dde2e17ce4f305b29c4e224fa39392744326e39" translate="yes" xml:space="preserve">
          <source>Python LiveReload is designed for web developers who know Python.</source>
          <target state="translated">Python LiveReload는 Python을 알고있는 웹 개발자를 위해 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="b856f323bfebfa1a5a2533840d3df68d288abe8e" translate="yes" xml:space="preserve">
          <source>Python LiveReload provides a command line utility,</source>
          <target state="translated">Python LiveReload는 명령 줄 유틸리티를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="eec171a0092cae83bdd307618b04d521ac8ee105" translate="yes" xml:space="preserve">
          <source>Run it, then open &lt;a href=&quot;http://localhost:5500/&quot;&gt;http://localhost:5500/&lt;/a&gt; and you can see the documentation changes in real time.</source>
          <target state="translated">실행 한 다음 &lt;a href=&quot;http://localhost:5500/&quot;&gt;http : // localhost : 5500 /&lt;/a&gt; 를 열고 문서 변경 사항을 실시간으로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f78c15a08b49e9a530e76efccebbb371f08e4308" translate="yes" xml:space="preserve">
          <source>Script example: Sphinx</source>
          <target state="translated">스크립트 예 : 스핑크스</target>
        </trans-unit>
        <trans-unit id="e05a50e02c7b708cc9b7ec3cefc9482bffbe2109" translate="yes" xml:space="preserve">
          <source>Security Report</source>
          <target state="translated">보안 보고서</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">섬기는 사람</target>
        </trans-unit>
        <trans-unit id="7e7361f3deb5086df72b1730b50ee20c04bc9052" translate="yes" xml:space="preserve">
          <source>Setup a server with</source>
          <target state="translated">다음을 사용하여 서버 설정</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="3521e58828372bca0792a48be0b58ea2cd5c1cff" translate="yes" xml:space="preserve">
          <source>The new livereload server is designed for developers. It can power a
wsgi application now:</source>
          <target state="translated">새로운 livereload 서버는 개발자를 위해 설계되었습니다. 이제 wsgi 애플리케이션을 구동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62b4e09a4fa475ce18873677009d717ffbceca7b" translate="yes" xml:space="preserve">
          <source>The powerful</source>
          <target state="translated">강력한</target>
        </trans-unit>
        <trans-unit id="3132fbe2010bcb0126ec47aa54c38c465f6581cc" translate="yes" xml:space="preserve">
          <source>This is a brand new LiveReload in version 2.0.0.</source>
          <target state="translated">이것은 버전 2.0.0의 새로운 LiveReload입니다.</target>
        </trans-unit>
        <trans-unit id="7ef2cbe9b2bb79e88a59a54b9548d5a52210955a" translate="yes" xml:space="preserve">
          <source>To automagically serve static files like the native</source>
          <target state="translated">네이티브와 같은 정적 파일을 자동으로 제공하려면</target>
        </trans-unit>
        <trans-unit id="4b5392cfdf232f6cc068904b2d9b657e651e978e" translate="yes" xml:space="preserve">
          <source>To report a security vulnerability, please use the
&lt;a href=&quot;https://tidelift.com/security&quot;&gt;Tidelift security contact&lt;/a&gt;.
Tidelift will coordinate the fix and disclosure.</source>
          <target state="translated">보안 취약점을보고하려면 &lt;a href=&quot;https://tidelift.com/security&quot;&gt;Tidelift 보안 연락처&lt;/a&gt; 를 사용하십시오 . Tidelift는 수정 및 공개를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="136d808d7dc02d86355aa6f3dc62c83719ff6b0c" translate="yes" xml:space="preserve">
          <source>To use simply</source>
          <target state="translated">간단하게 사용하려면</target>
        </trans-unit>
        <trans-unit id="34b90c493df25f8dd7c1eec42d3b91b94fb3bbe8" translate="yes" xml:space="preserve">
          <source>Wrap Flask with livereload is much simpler:</source>
          <target state="translated">livereload로 Flask를 감싸는 것이 훨씬 간단합니다.</target>
        </trans-unit>
        <trans-unit id="c193784a78c178a03f0f524af358f707624909ce" translate="yes" xml:space="preserve">
          <source>Wrap the</source>
          <target state="translated">포장</target>
        </trans-unit>
        <trans-unit id="28903806b591994133c023d649022c5f95e08bd3" translate="yes" xml:space="preserve">
          <source>You can also use other library (for example: formic) for more powerful
file adding:</source>
          <target state="translated">보다 강력한 파일 추가를 위해 다른 라이브러리 (예 : formic)를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2a8cc9df3a914fc3cf2268bdc052380df9deff1" translate="yes" xml:space="preserve">
          <source>You can delay a certain seconds to send the reload signal:</source>
          <target state="translated">재 장전 신호를 보내기 위해 특정 시간을 지연시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a18c8bbc8efa0489e5aa8fa3586e07fcaa49e89" translate="yes" xml:space="preserve">
          <source>`server.setHeader`</source>
          <target state="translated">`server.setHeader`</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">더하다</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="04ad2745057c2fbbeb338919d915810c65d9ff07" translate="yes" xml:space="preserve">
          <source>app with livereload server:</source>
          <target state="translated">livereload 서버가있는 앱 :</target>
        </trans-unit>
        <trans-unit id="5877bcac762338cb0f5b44ccb63013ea670898d0" translate="yes" xml:space="preserve">
          <source>app: a wsgi application</source>
          <target state="translated">app : wsgi 애플리케이션</target>
        </trans-unit>
        <trans-unit id="7d87d5e6ff9f43cc2dc34c0e9483e87fe3b22755" translate="yes" xml:space="preserve">
          <source>can be used to add one or more headers to the HTTP
response:</source>
          <target state="translated">HTTP 응답에 하나 이상의 헤더를 추가하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b39340dda9d98232e9491acb47af96d37c4ca086" translate="yes" xml:space="preserve">
          <source>can watch a filepath, a directory and a glob pattern:</source>
          <target state="translated">파일 경로, 디렉토리 및 glob 패턴을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="083107986b283a77e9345c116244ffa11348caf5" translate="yes" xml:space="preserve">
          <source>class accepts parameters:</source>
          <target state="translated">클래스는 매개 변수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="aef6a569e8828be430a06e46b4a13e3ac5747764" translate="yes" xml:space="preserve">
          <source>command you have to use &lt;a href=&quot;https://github.com/kennethreitz/dj-static&quot;&gt;dj-static&lt;/a&gt;. (follow the simple instructions there).</source>
          <target state="translated">명령은 &lt;a href=&quot;https://github.com/kennethreitz/dj-static&quot;&gt;dj-static&lt;/a&gt; 을 사용해야 합니다. (간단한 지침을 따르십시오).</target>
        </trans-unit>
        <trans-unit id="c2b301c8d9c8ae9f195bf828ab9c243510dc260b" translate="yes" xml:space="preserve">
          <source>function will help you to execute shell commands. You
can use it with</source>
          <target state="translated">함수는 쉘 명령을 실행하는 데 도움이됩니다. 함께 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="637023bdbf92e77e6a8c9b0b44a95f214e13e6b4" translate="yes" xml:space="preserve">
          <source>livereload</source>
          <target state="translated">살고있다</target>
        </trans-unit>
        <trans-unit id="86e03f8d415d9b720fa90fc57742fc7e1921d5b0" translate="yes" xml:space="preserve">
          <source>method. It can create a static server
and a livereload server:</source>
          <target state="translated">방법. 정적 서버와 livereload 서버를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fd6c91c108a60273406378da5b889b6f108aed1" translate="yes" xml:space="preserve">
          <source>runserver</source>
          <target state="translated">runserver</target>
        </trans-unit>
        <trans-unit id="3578ec7a3caf062cb7b16544e5bbbfc060e70bb5" translate="yes" xml:space="preserve">
          <source>server.serve</source>
          <target state="translated">server.serve</target>
        </trans-unit>
        <trans-unit id="3ca70e001c2b861106c91a462dc77c7813cd1a40" translate="yes" xml:space="preserve">
          <source>server.setHeader</source>
          <target state="translated">server.setHeader</target>
        </trans-unit>
        <trans-unit id="25147cf2611f4b857d75c96f8a8ff049a10ca3aa" translate="yes" xml:space="preserve">
          <source>server.watch</source>
          <target state="translated">server.watch</target>
        </trans-unit>
        <trans-unit id="ec122f54cf16a175b3e22979e240684f7734079a" translate="yes" xml:space="preserve">
          <source>shell</source>
          <target state="translated">껍질</target>
        </trans-unit>
        <trans-unit id="1c015e3e76ad17cfb144dcab64eacad602c50e6f" translate="yes" xml:space="preserve">
          <source>then run</source>
          <target state="translated">그런 다음 실행</target>
        </trans-unit>
        <trans-unit id="93097c77061395fec2e57eef80ddd438c260cb84" translate="yes" xml:space="preserve">
          <source>to describe optional additional rules for files to watch and build commands to run on changes.  This conflicted with other tools that used the same file for their configuration and is no longer supported since Python LiveReload version 2.0.0.  Instead of a</source>
          <target state="translated">감시 할 파일에 대한 선택적 추가 규칙을 설명하고 변경시 실행할 명령을 빌드합니다. 이는 구성에 동일한 파일을 사용하는 다른 도구와 충돌했으며 Python LiveReload 버전 2.0.0부터 더 이상 지원되지 않습니다. 대신</target>
        </trans-unit>
        <trans-unit id="ab91077b25792e5df5bbb22f17e5b0bda9153722" translate="yes" xml:space="preserve">
          <source>to your</source>
          <target state="translated">너의 ~에게</target>
        </trans-unit>
        <trans-unit id="8989e48c109cabfc13f2ef9a865ad6fe5ccf1f2b" translate="yes" xml:space="preserve">
          <source>watcher: a watcher instance, you don&amp;rsquo;t have to create one</source>
          <target state="translated">감시자 : 감시자 인스턴스, 생성 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="792a38aa93ef974f17fda8f9ddcaaea0569530a3" translate="yes" xml:space="preserve">
          <source>you can now write a Python script using very similar syntax and run it instead of the command line application.</source>
          <target state="translated">이제 매우 유사한 구문을 사용하여 Python 스크립트를 작성하고 명령 줄 응용 프로그램 대신 실행할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
