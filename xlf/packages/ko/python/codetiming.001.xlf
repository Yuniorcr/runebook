<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/codetiming/">
    <body>
      <group id="codetiming">
        <trans-unit id="87aab8e026da52ec550c0e4dcbe984f532a8a686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timer&lt;/code&gt; accepts the following arguments when it's created, all are optional:</source>
          <target state="translated">&lt;code&gt;Timer&lt;/code&gt; 는 생성 될 때 다음 인수를 허용하며 모두 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="ff9768e6a0407cf496fcea90153185b4efa1f8c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codetiming&lt;/code&gt; - A flexible, customizable timer for your Python code</source>
          <target state="translated">&lt;code&gt;codetiming&lt;/code&gt; -Python 코드를위한 유연하고 사용자 정의 가능한 타이머</target>
        </trans-unit>
        <trans-unit id="72cabad100a9b7bb3ae1a100dc491cb6a5b80034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codetiming&lt;/code&gt; is based on a similar module originally developed for the &lt;a href=&quot;https://kartverket.github.io/midgard/&quot;&gt;Midgard Geodesy library&lt;/a&gt; at the &lt;a href=&quot;https://www.kartverket.no/en/&quot;&gt;Norwegian Mapping Authority&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;codetiming&lt;/code&gt; 는 원래 개발 된 유사한 모듈을 기반으로 &lt;a href=&quot;https://kartverket.github.io/midgard/&quot;&gt;미드 측지 라이브러리&lt;/a&gt; 상기 &lt;a href=&quot;https://www.kartverket.no/en/&quot;&gt;노르웨이어 매핑 기관&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e6c9ff45d0a139da206369959d770de0dd5ef2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timers&lt;/code&gt; support &lt;code&gt;.count()&lt;/code&gt;, &lt;code&gt;.total()&lt;/code&gt;, &lt;code&gt;.min()&lt;/code&gt;, &lt;code&gt;.max()&lt;/code&gt;, &lt;code&gt;.mean()&lt;/code&gt;, &lt;code&gt;.median()&lt;/code&gt;, and &lt;code&gt;.stdev()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timers&lt;/code&gt; 지원 &lt;code&gt;.count()&lt;/code&gt; , &lt;code&gt;.total()&lt;/code&gt; , &lt;code&gt;.min()&lt;/code&gt; , &lt;code&gt;.max()&lt;/code&gt; , &lt;code&gt;.mean()&lt;/code&gt; , &lt;code&gt;.median()&lt;/code&gt; 및 &lt;code&gt;.stdev()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a8173bc98b2d3bafa150f68d7568830e064583c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;logger&lt;/code&gt;:&lt;/strong&gt; A function/callable that takes a string argument, and will report the elapsed time when the logger is stopped (default: &lt;code&gt;print()&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;logger&lt;/code&gt; :&lt;/strong&gt; 문자열 인수를 받고 로거가 중지 될 때 경과 시간을보고하는 함수 / 호출 가능 항목 (기본값 : &lt;code&gt;print()&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="46788cc90aed370b9890ab22c78d69e40a6767d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;:&lt;/strong&gt; An optional name for your timer</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;name&lt;/code&gt; :&lt;/strong&gt; 타이머의 선택적 이름</target>
        </trans-unit>
        <trans-unit id="0d3752076d07838fea55c516c7e77e9718fe976b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;text&lt;/code&gt;:&lt;/strong&gt; The text shown when your timer ends. It should contain a &lt;code&gt;{}&lt;/code&gt; placeholder that will be filled by the elapsed time in seconds (default: &lt;code&gt;&quot;Elapsed time: {:.4f} seconds&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;text&lt;/code&gt; :&lt;/strong&gt; 타이머가 종료 될 때 표시되는 텍스트입니다. 경과 시간 (기본값 : &lt;code&gt;&quot;Elapsed time: {:.4f} seconds&quot;&lt;/code&gt; )으로 채워지는 &lt;code&gt;{}&lt;/code&gt; 자리 표시자를포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="438ca784fb753385f5491666dcf6e49ae14bd520" translate="yes" xml:space="preserve">
          <source>A flexible, customizable timer for your Python code</source>
          <target state="translated">Python 코드를위한 유연하고 사용자 지정 가능한 타이머</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">감사의 말</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">인수</target>
        </trans-unit>
        <trans-unit id="c18bbee56bf27a3b2e332817e52b34efd10595df" translate="yes" xml:space="preserve">
          <source>As a &lt;strong&gt;class&lt;/strong&gt;:</source>
          <target state="translated">A와 &lt;strong&gt;클래스&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="3c03c5ce69551d554536a2ac6b771ee47455de7b" translate="yes" xml:space="preserve">
          <source>As a &lt;strong&gt;context manager&lt;/strong&gt;:</source>
          <target state="translated">A와 &lt;strong&gt;컨텍스트 매니저&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="f95cbe63cb1fb8c32a44100c350a4995605dd172" translate="yes" xml:space="preserve">
          <source>As a &lt;strong&gt;decorator&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;데코레이터&lt;/strong&gt; 로서 :</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="a4093bd088c2dbb8bfd10ba4a5d42030b6b3d3b9" translate="yes" xml:space="preserve">
          <source>Capturing the Elapsed Time</source>
          <target state="translated">경과 시간 캡처</target>
        </trans-unit>
        <trans-unit id="76e971641b670eec47428b997a0f329b727c704f" translate="yes" xml:space="preserve">
          <source>For a complete tutorial on how &lt;code&gt;codetiming&lt;/code&gt; works, see &lt;a href=&quot;https://realpython.com/python-timer&quot;&gt;Python Timer Functions: Three Ways to Monitor Your Code&lt;/a&gt; on &lt;a href=&quot;https://realpython.com/&quot;&gt;Real Python&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;codetiming&lt;/code&gt; 작동 방식 에 대한 전체 자습서는 &lt;a href=&quot;https://realpython.com/python-timer&quot;&gt;Python Timer Functions : Three Ways to Monitor Your Code&lt;/a&gt; on &lt;a href=&quot;https://realpython.com/&quot;&gt;Real Python을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f36ce94b2ce9c8714a6de003f5342e6c955799e" translate="yes" xml:space="preserve">
          <source>In the template text, you can also use explicit attributes to refer to the &lt;code&gt;name&lt;/code&gt; of the timer, or log the elapsed time in &lt;code&gt;milliseconds&lt;/code&gt;, &lt;code&gt;seconds&lt;/code&gt; (the default), or &lt;code&gt;minutes&lt;/code&gt;. For example:</source>
          <target state="translated">템플릿 텍스트에서 명시 적 속성을 사용 하여 타이머 &lt;code&gt;name&lt;/code&gt; 을 참조 하거나 경과 시간을 &lt;code&gt;milliseconds&lt;/code&gt; , &lt;code&gt;seconds&lt;/code&gt; (기본값) 또는 &lt;code&gt;minutes&lt;/code&gt; 단위로 기록 할 수도 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="cbdbd680688a0ba661f3604b574dddb29ba4e3b5" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;codetiming&lt;/code&gt; from PyPI:</source>
          <target state="translated">PyPI에서 &lt;code&gt;codetiming&lt;/code&gt; 을 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="0f28b15f0d34f815c8f4e6b3490097559d5fc352" translate="yes" xml:space="preserve">
          <source>Named Timers</source>
          <target state="translated">명명 된 타이머</target>
        </trans-unit>
        <trans-unit id="db9e4d9fa07204abc9e6341c4ff11c014885bde2" translate="yes" xml:space="preserve">
          <source>Named timers are made available in the class dictionary &lt;code&gt;Timer.timers&lt;/code&gt;. The elapsed time will accumulate if the same name or same timer is used several times. Consider the following example:</source>
          <target state="translated">명명 된 타이머는 &lt;code&gt;Timer.timers&lt;/code&gt; 클래스 사전에서 사용할 수 있습니다 . 동일한 이름 또는 동일한 타이머를 여러 번 사용하면 경과 시간이 누적됩니다. 다음 예를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="f02f0d5b8ec5c72c04cc2405fe76ff2cbb6532e2" translate="yes" xml:space="preserve">
          <source>Note that the strings used by &lt;code&gt;text&lt;/code&gt; are &lt;strong&gt;not&lt;/strong&gt; f-strings. Instead they are used as templates that will be populated using &lt;code&gt;.format()&lt;/code&gt; behind the scenes. If you want to combine the &lt;code&gt;text&lt;/code&gt; template with an f-string, you need to use double braces for the template values:</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 사용하는 문자열 은 f- 문자열 이 &lt;strong&gt;아닙니다&lt;/strong&gt; . 대신 &lt;code&gt;.format()&lt;/code&gt; 사용하여 채울 템플릿으로 사용됩니다 . &lt;code&gt;text&lt;/code&gt; 템플릿을 f- 문자열과 결합 하려면 템플릿 값에 이중 중괄호를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b06fee5e0b30fe8e880f9e212ebb3993e918887b" translate="yes" xml:space="preserve">
          <source>The example shows how you can redirect the timer output to the logging module. Note that the elapsed time spent in the two different uses of &lt;code&gt;t&lt;/code&gt; has been accumulated in &lt;code&gt;Timer.timers&lt;/code&gt;.</source>
          <target state="translated">이 예는 타이머 출력을 로깅 모듈로 리디렉션하는 방법을 보여줍니다. &lt;code&gt;t&lt;/code&gt; 의 두 가지 다른 사용에 소요 된 경과 시간 이 &lt;code&gt;Timer.timers&lt;/code&gt; 에 누적되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b1934fdc3aa5335f1bb8810f970510242ee250e7" translate="yes" xml:space="preserve">
          <source>The source code is &lt;a href=&quot;https://github.com/realpython/codetiming&quot;&gt;available at GitHub&lt;/a&gt;.</source>
          <target state="translated">소스 코드는 &lt;a href=&quot;https://github.com/realpython/codetiming&quot;&gt;GitHub에서 사용할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a824073d32e42da83094df0f64c5c66d1e2290d9" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Timer&lt;/code&gt; as a class, you can capture the elapsed time when calling &lt;code&gt;.stop()&lt;/code&gt;:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;Timer&lt;/code&gt; 클래스로 호출 할 때, 당신은 경과 시간을 캡처 할 수 있습니다 &lt;code&gt;.stop()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d0903cbfb7e3cd27ff98672c6c6375e38a19e2ee" translate="yes" xml:space="preserve">
          <source>You can also find the last measured elapsed time in the &lt;code&gt;.last&lt;/code&gt; attribute. The following code will have the same effect as the previous example:</source>
          <target state="translated">&lt;code&gt;.last&lt;/code&gt; 속성 에서 마지막으로 측정 된 경과 시간을 찾을 수도 있습니다 . 다음 코드는 이전 예제와 동일한 효과를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="4071219aef56c5620e29767a6ab7269f61c35e64" translate="yes" xml:space="preserve">
          <source>You can also get simple statistics about your named timers. Continuing from the example above:</source>
          <target state="translated">명명 된 타이머에 대한 간단한 통계를 얻을 수도 있습니다. 위의 예에서 계속 :</target>
        </trans-unit>
        <trans-unit id="22e64aeff8e938456303ef5356b3b8b06504e76f" translate="yes" xml:space="preserve">
          <source>You can turn off explicit reporting of the elapsed time by setting &lt;code&gt;logger=None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logger=None&lt;/code&gt; 을 설정하여 경과 시간에 대한 명시 적보고를 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b950761c5743061e30a963097b96fbf7b258246b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;codetiming.Timer&lt;/code&gt; in several different ways:</source>
          <target state="translated">&lt;code&gt;codetiming.Timer&lt;/code&gt; 를 여러 가지 방법으로 사용할 수 있습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
