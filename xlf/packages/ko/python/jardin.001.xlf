<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/jardin/">
    <body>
      <group id="jardin">
        <trans-unit id="632027a7425dd10aa67198c00eb920060856d35b" translate="yes" xml:space="preserve">
          <source>&amp;ndash; List of tables to join with their
join condition. Can also be a list of classes if the appropriate
associations have been declared. See
&lt;a href=&quot;#inner_join-left_join-arguments&quot;&gt;docs&lt;/a&gt;.</source>
          <target state="translated">&amp;ndash; 조인 조건으로 조인 할 테이블 목록. 적절한 연관이 선언 된 경우 클래스 목록이 될 수도 있습니다. &lt;a href=&quot;#inner_join-left_join-arguments&quot;&gt;문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1debc3c5d16ff146e99219304cae0d778fb0ec14" translate="yes" xml:space="preserve">
          <source>&amp;ndash; The list of columns to return. If not provided, all
columns will be returned.</source>
          <target state="translated">&amp;ndash; 반환 할 열 목록입니다. 제공하지 않으면 모든 열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="793b734967342c5a6ce47686fc872c060da50dc2" translate="yes" xml:space="preserve">
          <source>&amp;ndash; conditions. Many different formats can be used to provide
conditions. See &lt;a href=&quot;#where-argument&quot;&gt;docs&lt;/a&gt;.</source>
          <target state="translated">&amp;ndash; 조건. 다양한 형식을 사용하여 조건을 제공 할 수 있습니다. &lt;a href=&quot;#where-argument&quot;&gt;문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08c62df8daf47cd52a2b82966836acc3e90fc84e" translate="yes" xml:space="preserve">
          <source>&amp;ndash; grouping clause</source>
          <target state="translated">&amp;ndash; 그룹화 절</target>
        </trans-unit>
        <trans-unit id="bc9bc22c8a866e093dc0d519f912c1be0e435ec4" translate="yes" xml:space="preserve">
          <source>&amp;ndash; limit clause</source>
          <target state="translated">&amp;ndash; 제한 조항</target>
        </trans-unit>
        <trans-unit id="4075913718fac3c7a2ce7bf19af2c8b280721627" translate="yes" xml:space="preserve">
          <source>&amp;ndash; list of pre-defined scopes. See docs.</source>
          <target state="translated">&amp;ndash; 사전 정의 된 범위 목록. 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d1209a6aac454c65ce9fbcdaa35767ed5c0229ef" translate="yes" xml:space="preserve">
          <source>&amp;ndash; order clause</source>
          <target state="translated">&amp;ndash; 주문 조항</target>
        </trans-unit>
        <trans-unit id="20fc8f1a0f6e9933712d9d905d940e729bc42c38" translate="yes" xml:space="preserve">
          <source>&amp;ndash; selects where</source>
          <target state="translated">&amp;ndash; 어디에서 선택</target>
        </trans-unit>
        <trans-unit id="df58248c414f342c81e056b40bee12d17a08bf61" translate="yes" xml:space="preserve">
          <source>*</source>
          <target state="translated">*</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="e83e0e90f215afe9fcc0f3ee699832847c92593d" translate="yes" xml:space="preserve">
          <source>-based ORM for Python applications.</source>
          <target state="translated">Python 애플리케이션을위한 기반 ORM.</target>
        </trans-unit>
        <trans-unit id="e4a25b34644940c262ea388a3c390ae06086407f" translate="yes" xml:space="preserve">
          <source>A Pandas dataframe-based ORM</source>
          <target state="translated">Pandas 데이터 프레임 기반 ORM</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">인수</target>
        </trans-unit>
        <trans-unit id="134d6b41e63f8d58f043111b94e89dcdbcc5edb8" translate="yes" xml:space="preserve">
          <source>Associations</source>
          <target state="translated">협회</target>
        </trans-unit>
        <trans-unit id="06d02506cfa6357ab149bda6c8c8a5d0855c3b2c" translate="yes" xml:space="preserve">
          <source>DELETE queries</source>
          <target state="translated">쿼리 삭제</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="28dad50acd3cfdaf2f4e13c6025dadd23891dd99" translate="yes" xml:space="preserve">
          <source>Here are the different ways to feed a condition clause to a query. *</source>
          <target state="translated">쿼리에 조건 절을 제공하는 여러 가지 방법은 다음과 같습니다. *</target>
        </trans-unit>
        <trans-unit id="89fbc893938f523042721475af160832f172d717" translate="yes" xml:space="preserve">
          <source>Here is the basic syntax to select records from the database</source>
          <target state="translated">다음은 데이터베이스에서 레코드를 선택하는 기본 구문입니다.</target>
        </trans-unit>
        <trans-unit id="c87afb976b742d321106f19fe581c35c37fec8d6" translate="yes" xml:space="preserve">
          <source>INSERT queries</source>
          <target state="translated">INSERT 쿼리</target>
        </trans-unit>
        <trans-unit id="b860941ddc33032cc260b32c4220219e3ae5a1d9" translate="yes" xml:space="preserve">
          <source>If you have configured your models associations, see
&lt;a href=&quot;#associations&quot;&gt;here&lt;/a&gt;, you can simply pass the class as argument:</source>
          <target state="translated">모델 연결을 구성한 경우 &lt;a href=&quot;#associations&quot;&gt;여기를&lt;/a&gt; 참조 하십시오 . 클래스를 인수로 간단히 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ae075e5080998848b007e4dd8d8f69c3f7f7159" translate="yes" xml:space="preserve">
          <source>In the console:</source>
          <target state="translated">콘솔에서 :</target>
        </trans-unit>
        <trans-unit id="6fcaa9c17481e5d5403d7301b5d0ee57f62cc63e" translate="yes" xml:space="preserve">
          <source>In your working directory (the root of your app), create a file named</source>
          <target state="translated">작업 디렉터리 (앱의 루트)에서 다음과 같은 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7639d7f95137bda3311c7f888df9d3df80f72510" translate="yes" xml:space="preserve">
          <source>Individual record selection</source>
          <target state="translated">개별 레코드 선택</target>
        </trans-unit>
        <trans-unit id="96cf78232c3d4112ecb30347eb079f378d316a4f" translate="yes" xml:space="preserve">
          <source>It is possible to define associations between models. For example, if
each user has multiple instruments:</source>
          <target state="translated">모델 간의 연관성을 정의 할 수 있습니다. 예를 들어 각 사용자에게 여러 기기가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="e468dc58755ee995b4be692acbdb943b0c731acd" translate="yes" xml:space="preserve">
          <source>Jardin is a</source>
          <target state="translated">Jardin은</target>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">기타</target>
        </trans-unit>
        <trans-unit id="f14851bc0ba897ee89c2ad9dd5f2d5f769d240c4" translate="yes" xml:space="preserve">
          <source>Model#select</source>
          <target state="translated">모델 #select</target>
        </trans-unit>
        <trans-unit id="d28c471111be99bb04f22b41815e829ee1145175" translate="yes" xml:space="preserve">
          <source>Multiple databases</source>
          <target state="translated">여러 데이터베이스</target>
        </trans-unit>
        <trans-unit id="52d666fa0ae6735f53595a92fd4ba854b97a8bf5" translate="yes" xml:space="preserve">
          <source>Note that the returned object is a</source>
          <target state="translated">반환 된 객체는</target>
        </trans-unit>
        <trans-unit id="2b1933909928e43c54f9f72d3cffbcf94f31f5de" translate="yes" xml:space="preserve">
          <source>Or you can declare joins more easily</source>
          <target state="translated">또는 조인을 더 쉽게 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2644b7d942f174a4bbf0bc8675c1badf9352393e" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="translated">쿼리</target>
        </trans-unit>
        <trans-unit id="4918fab27aafdaa0e38ea06daced3fbab5253bc8" translate="yes" xml:space="preserve">
          <source>Queries conditions can be generalized across your app:</source>
          <target state="translated">쿼리 조건은 앱 전체에서 일반화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c54132b8e5a9fa44a9a1a7d30b1be36ab3c4247" translate="yes" xml:space="preserve">
          <source>Record</source>
          <target state="translated">기록</target>
        </trans-unit>
        <trans-unit id="d2ad5bfe036a06f2d49b1f5bb3b9574fe1c7bdb8" translate="yes" xml:space="preserve">
          <source>SELECT queries</source>
          <target state="translated">쿼리 선택</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">범위</target>
        </trans-unit>
        <trans-unit id="679300c8efec3e974bcfc57d25f9fca6bb8107c1" translate="yes" xml:space="preserve">
          <source>The key is the name of the scope, and the value is the conditions to be
applied. Anything that can be fed to the</source>
          <target state="translated">키는 범위의 이름이고 값은 적용 할 조건입니다. 공급할 수있는 모든 것</target>
        </trans-unit>
        <trans-unit id="a51889251ef25b9c21ccbcacafa4a29b2ee6482b" translate="yes" xml:space="preserve">
          <source>The resulting object is a pandas dataframe:</source>
          <target state="translated">결과 개체는 pandas 데이터 프레임입니다.</target>
        </trans-unit>
        <trans-unit id="884e19d70abd53431874bd80bf4b7475280896e9" translate="yes" xml:space="preserve">
          <source>The simplest way to join another table is as follows</source>
          <target state="translated">다른 테이블을 조인하는 가장 간단한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c35a558133296711c95badacca62e99e2f4fc577" translate="yes" xml:space="preserve">
          <source>Then, in your app, say you have a table called</source>
          <target state="translated">그런 다음 앱에서 다음과 같은 테이블이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b0383cc3dd722b6eac96ffcbb4bed74f00cde7ec" translate="yes" xml:space="preserve">
          <source>UPDATE queries</source>
          <target state="translated">UPDATE 쿼리</target>
        </trans-unit>
        <trans-unit id="987a84c4f4220c533eb0213f0f72ca22e6db82c6" translate="yes" xml:space="preserve">
          <source>Use them as such:</source>
          <target state="translated">다음과 같이 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4af774e5f4330cab842a73815fedf60c728dfb43" translate="yes" xml:space="preserve">
          <source>Watermark and trace</source>
          <target state="translated">워터 마크 및 추적</target>
        </trans-unit>
        <trans-unit id="157c1b84ce9ade06e04ecff0e335cabe0306d0b1" translate="yes" xml:space="preserve">
          <source>You can also look-up a single record by id:</source>
          <target state="translated">ID로 단일 레코드를 조회 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc612d14009e6bfdf95ed16771ffe409b2e83ee5" translate="yes" xml:space="preserve">
          <source>and then you can query the associated records:</source>
          <target state="translated">그런 다음 관련 레코드를 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="0f3802314d747bbc5016897875185c3a9fae57bf" translate="yes" xml:space="preserve">
          <source>argument</source>
          <target state="translated">논의</target>
        </trans-unit>
        <trans-unit id="9aba603f45cd76011b28d04ec07b1825380e736d" translate="yes" xml:space="preserve">
          <source>argument of</source>
          <target state="translated">인수</target>
        </trans-unit>
        <trans-unit id="536f158f6dfd529865dcb865a97bb16804e34d70" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="translated">인수</target>
        </trans-unit>
        <trans-unit id="4c6ead0735eda72f01862c4e7fcad3b8cb2adaff" translate="yes" xml:space="preserve">
          <source>can be used to define a scope.</source>
          <target state="translated">범위를 정의하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64292b1c2b2e13ead8788fc8a2b8edc8c1db4ecd" translate="yes" xml:space="preserve">
          <source>group</source>
          <target state="translated">그룹</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">신분증</target>
        </trans-unit>
        <trans-unit id="18704191258c77cb1c479b4b4983bc7fccbe423e" translate="yes" xml:space="preserve">
          <source>inner_join</source>
          <target state="translated">inner_join</target>
        </trans-unit>
        <trans-unit id="7f3f1e13f4119237623a76ce7c3b9cdfa0068225" translate="yes" xml:space="preserve">
          <source>is between 0 and 3 *</source>
          <target state="translated">0에서 3 사이 *</target>
        </trans-unit>
        <trans-unit id="7cb4e8507e51c4b49f50db4becf02476ff297638" translate="yes" xml:space="preserve">
          <source>is in the array *</source>
          <target state="translated">배열에 있음 *</target>
        </trans-unit>
        <trans-unit id="39b28862fd8713d610be39cbe0cf761358f090e4" translate="yes" xml:space="preserve">
          <source>jardin_conf.py</source>
          <target state="translated">jardin_conf.py</target>
        </trans-unit>
        <trans-unit id="2c130060ffaef6d5437b0d04ef61f3ecdc62c628" translate="yes" xml:space="preserve">
          <source>left_join</source>
          <target state="translated">left_join</target>
        </trans-unit>
        <trans-unit id="e4d68c5a97e466323c2fbe2b655ab578066a1cd5" translate="yes" xml:space="preserve">
          <source>limit</source>
          <target state="translated">한도</target>
        </trans-unit>
        <trans-unit id="07bc6cf1e912d607258eb445e6c5b96dbb0ba262" translate="yes" xml:space="preserve">
          <source>object which allows you to
access attributes in those way:</source>
          <target state="translated">이러한 방식으로 속성에 액세스 할 수있는 객체 :</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">주문</target>
        </trans-unit>
        <trans-unit id="8acaf045a28b6885ffbd28fa54f657ed9577d787" translate="yes" xml:space="preserve">
          <source>pandas.DataFrame</source>
          <target state="translated">pandas.DataFrame</target>
        </trans-unit>
        <trans-unit id="e9b64ee90bda7c55691917bd0333fc4f5530c372" translate="yes" xml:space="preserve">
          <source>scopes</source>
          <target state="translated">범위</target>
        </trans-unit>
        <trans-unit id="81448fe273247b533b9f018e96c158cab7901247" translate="yes" xml:space="preserve">
          <source>select</source>
          <target state="translated">고르다</target>
        </trans-unit>
        <trans-unit id="5b7dcd14a4faa2cdd54cf6eb8d4bc35da31914a1" translate="yes" xml:space="preserve">
          <source>users</source>
          <target state="translated">사용자</target>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">어디</target>
        </trans-unit>
        <trans-unit id="96132cd2f03e929b43adb4f64cf58307381bb6fa" translate="yes" xml:space="preserve">
          <source>where = &quot;name = 'John'&quot;</source>
          <target state="translated">where = &quot;name = 'John'&quot;</target>
        </trans-unit>
        <trans-unit id="e7c348dfccaa3c134bd8fca6a4906f8709236885" translate="yes" xml:space="preserve">
          <source>where = [{'id': (0, 10), 'instrument': 'drums'}, [&quot;created_at &amp;gt; %(created_at)s&quot;, {'created_at': '1963-03-22'}]]</source>
          <target state="translated">where = [{ 'id': (0, 10), 'instrument': 'drums'}, [ &quot;created_at&amp;gt; % (created_at) s&quot;, { 'created_at': '1963-03-22'}]]</target>
        </trans-unit>
        <trans-unit id="4a3839dd2df304a1d68c3a799f321c34b53e26be" translate="yes" xml:space="preserve">
          <source>where = {'id': (0, 3)}</source>
          <target state="translated">여기서 = { 'id': (0, 3)}</target>
        </trans-unit>
        <trans-unit id="d39b81de2b44cc6c08a9eb4956bcfa21e2f5f6f4" translate="yes" xml:space="preserve">
          <source>where = {'id': [0, 1, 2]}</source>
          <target state="translated">여기서 = { 'id': [0, 1, 2]}</target>
        </trans-unit>
        <trans-unit id="681d90086dadbf2725c041f533556db7181d04e2" translate="yes" xml:space="preserve">
          <source>where = {'name': 'John'}</source>
          <target state="translated">where = { 'name': 'John'}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
