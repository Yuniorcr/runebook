<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/discovery-transition-ds/">
    <body>
      <group id="discovery-transition-ds">
        <trans-unit id="c5494cfb6844e5d545754387fe4744fc20415322" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Exploratory data analysis can never be the whole story, but nothing else can serve as the foundation stone.&amp;rdquo;
&amp;mdash; John Tukey</source>
          <target state="translated">&quot;탐색 데이터 분석이 전체 이야기가 될 수는 없지만 다른 어떤 것도 기초가 될 수 없습니다.&quot; &amp;mdash; 존 터키</target>
        </trans-unit>
        <trans-unit id="a0f3247be76ea33c301130d2a250dd366ca9bda3" translate="yes" xml:space="preserve">
          <source>(optional) if category type columns should be converted to numeric representations</source>
          <target state="translated">(선택 사항) 카테고리 유형 열을 숫자 표현으로 변환해야하는 경우</target>
        </trans-unit>
        <trans-unit id="95e5a9f62f69abb6110970aa4a516655a63cbf1e" translate="yes" xml:space="preserve">
          <source>(optional) if the intent contract should be saved to the property manager</source>
          <target state="translated">(선택 사항) 의도 계약을 자산 관리자에게 저장해야하는 경우</target>
        </trans-unit>
        <trans-unit id="ed57d7046d9b1381451706de41731c8cb5e0d183" translate="yes" xml:space="preserve">
          <source>(optional) the level of the intent,
If None: default&amp;rsquo;s 0 unless the global intent_next_available is true then -1
if -1: added to a level above any current instance of the intent section, level 0 if not found
if int: added to the level specified, overwriting any that already exist</source>
          <target state="translated">(선택 사항) 인 텐트의 수준, None : 전역 intent_next_available이 true가 아니면 기본값은 0이고, -1이면 -1 : 인 텐트 섹션의 현재 인스턴스보다 높은 수준에 추가되고, int : 추가 된 경우 찾을 수없는 경우 수준 0 지정된 레벨, 이미 존재하는 것을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="e9103d2c347fc347548deb5bd3011ee06b56903c" translate="yes" xml:space="preserve">
          <source>(optional) threshold correlation between columns. default 0.998</source>
          <target state="translated">(선택 사항) 열 간의 임계 값 상관. 기본값 0.998</target>
        </trans-unit>
        <trans-unit id="0eef772567dc103721cee6d2eb65760f1cb10163" translate="yes" xml:space="preserve">
          <source>, and in this case specify this is the</source>
          <target state="translated">,이 경우 지정합니다.</target>
        </trans-unit>
        <trans-unit id="25a8217d6744c581131d8e8c83537f40a2a18162" translate="yes" xml:space="preserve">
          <source>.from_env(...)</source>
          <target state="translated">.from_env (...)</target>
        </trans-unit>
        <trans-unit id="eb142e2d2196c2d37f9c1ab4b8fcb8be22297c09" translate="yes" xml:space="preserve">
          <source>1&amp;nbsp;&amp;nbsp;&amp;nbsp;What is AI-STAC</source>
          <target state="translated">1 AI-STAC이란</target>
        </trans-unit>
        <trans-unit id="13095088d3313284c1951208f1c40f516dffc5f9" translate="yes" xml:space="preserve">
          <source>1. Machine Learning Capability Mapping - Separation of capabilities, breaking the machine learning vertical into a set
of decoupled and targeted layers of discrete and refined actions that collectively present a human lead (ethical AI)
base truth to the next set of capabilities. This not only allows improved transparency of, what is, a messy and
sometimes confusing set of discovery orientated coded ideas but also loosely couples and targets activities that are,
generally, complex and specialized into identifiable and discrete capabilities that can be chained as separately
allocated activities.</source>
          <target state="translated">1. Machine Learning Capability Mapping - Separation of capabilities, breaking the machine learning vertical into a set of decoupled and targeted layers of discrete and refined actions that collectively present a human lead (ethical AI) base truth to the next set of capabilities. This not only allows improved transparency of, what is, a messy and sometimes confusing set of discovery orientated coded ideas but also loosely couples and targets activities that are, generally, complex and specialized into identifiable and discrete capabilities that can be chained as separately allocated activities.</target>
        </trans-unit>
        <trans-unit id="54dd110f5c967211ae743240d1c8eafb43a553a5" translate="yes" xml:space="preserve">
          <source>10&amp;nbsp;&amp;nbsp;&amp;nbsp;Reference</source>
          <target state="translated">10 참조</target>
        </trans-unit>
        <trans-unit id="949ab38cd4ca6b99a9a2154441381ef5c342b1d8" translate="yes" xml:space="preserve">
          <source>10.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Python version</source>
          <target state="translated">10.1 Python 버전</target>
        </trans-unit>
        <trans-unit id="0e4a68e0e3b218d43d55baef6b492be2dd596667" translate="yes" xml:space="preserve">
          <source>10.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Pandas version</source>
          <target state="translated">10.2 판다 버전</target>
        </trans-unit>
        <trans-unit id="81ea30b570923fc23edd1053d7fc30885e7f2f5b" translate="yes" xml:space="preserve">
          <source>10.3&amp;nbsp;&amp;nbsp;&amp;nbsp;GitHub Project</source>
          <target state="translated">10.3 GitHub 프로젝트</target>
        </trans-unit>
        <trans-unit id="bca0b069fb8727a725931e1f1b43e7c7593a2095" translate="yes" xml:space="preserve">
          <source>10.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Change log</source>
          <target state="translated">10.4 변경 로그</target>
        </trans-unit>
        <trans-unit id="d7de26ac53fe1258b36c605473c24cf0a0f0d53c" translate="yes" xml:space="preserve">
          <source>10.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Licence</source>
          <target state="translated">10.5 라이선스</target>
        </trans-unit>
        <trans-unit id="8be861089274c65921bde825e6f475b5f49609d7" translate="yes" xml:space="preserve">
          <source>10.6&amp;nbsp;&amp;nbsp;&amp;nbsp;Authors</source>
          <target state="translated">10.6 저자</target>
        </trans-unit>
        <trans-unit id="f05f4394da2d1d4c93c9019868af944dd0a7d43d" translate="yes" xml:space="preserve">
          <source>2&amp;nbsp;&amp;nbsp;&amp;nbsp;Main features</source>
          <target state="translated">2 주요 기능</target>
        </trans-unit>
        <trans-unit id="29fdba379b669e2abcd22ef02bd4f6419661be33" translate="yes" xml:space="preserve">
          <source>2. Add the export command for each environment variable setting your preferred paths in this example I am setting
them to a demo projects folder</source>
          <target state="translated">2.이 예제에서 원하는 경로를 설정하는 각 환경 변수에 대한 내보내기 명령을 추가합니다. 데모 프로젝트 폴더로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d7ae31f090f44671f31f40899f3c8069300bd2e5" translate="yes" xml:space="preserve">
          <source>2. Parametrized Intent - A unique technique extracting the ideas and thinking of the data scientist from their
discovery code and capturing it as intent with parameters that can be replayed against productionized code and data.
This decoupling and Separation of Concern between data, code and the intent of actions from that code on that data,
considerably improves time to market, code reuse, transparency of actions and the communication of ideas between data
scientists and product delivery specialists.</source>
          <target state="translated">2. 매개 변수화 된 의도-발견 코드에서 데이터 과학자의 아이디어와 생각을 추출하고 생산 된 코드 및 데이터에 대해 재생할 수있는 매개 변수를 사용하여 의도로 캡처하는 고유 한 기술입니다. 데이터, 코드 및 해당 데이터에 대한 해당 코드의 작업 의도 간의 이러한 분리 및 분리는 시장 출시 시간, 코드 재사용, 작업의 투명성 및 데이터 과학자와 제품 제공 전문가 간의 아이디어 전달을 크게 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="841dc6b5cae3c9252dd134d2e75eef911a5fbd48" translate="yes" xml:space="preserve">
          <source>3&amp;nbsp;&amp;nbsp;&amp;nbsp;Overview</source>
          <target state="translated">3 개요</target>
        </trans-unit>
        <trans-unit id="e697e8e6cfa32211f788af59afa058fc046ed7b5" translate="yes" xml:space="preserve">
          <source>3. Discovery Transitioning - Discovery Transitioning - is a foundation of the sepatation of concerns between data
provisioning and feature selection. As part of the Accelerated ML discovery Vertical, Transitioning is a foundation
base truth facilitating a transparent transition of the raw canonical dataset to a fit-for-purpose canonical dataset
to enable the optimisation of discovery analysis and the identification of features-of-interest, for the data scientist
and created boundary separation of capabilities decoupling the Data Scientist for the Data Engineer. As output it also
provides &amp;lsquo;intelligent Communication&amp;rsquo;, not only to the Data Scientist through canonical fit-for-purpose datasets, but
more generally offers powerful visual discovery tools and artefact generation for production architects, data and
business SME&amp;rsquo;s, Stakeholders and is the initiator of Augmented Knowledge for an enriched and transparent shared view of
the extended data knowledge.</source>
          <target state="translated">3. Discovery Transitioning (검색 전환)-Discovery Transitioning (검색 전환)은 데이터 프로비저닝과 기능 선택 사이의 문제 분리의 기초입니다. Accelerated ML Discovery Vertical의 일부인 Transitioning은 원시 표준 데이터 세트를 목적에 맞는 표준 데이터 세트로 투명하게 전환하여 검색 분석을 최적화하고 관심 기능을 식별 할 수 있도록 지원하는 기본 기본 정보입니다. 데이터 과학자를 위해 데이터 엔지니어를 위해 데이터 과학자를 분리하는 기능의 경계 분리를 만들었습니다. 결과적으로 그것은 또한 목적에 맞는 표준 데이터 세트를 통해 데이터 과학자에게 '지능형 통신'을 제공 할뿐만 아니라,보다 일반적으로 생산 설계자, 데이터 및 비즈니스 SME를위한 강력한 시각적 발견 도구 및 인공물 생성을 제공합니다.이해 관계자이며 확장 된 데이터 지식에 대한 풍부하고 투명한 공유 관점을 제공하는 증강 지식의 창시자입니다.</target>
        </trans-unit>
        <trans-unit id="95042b6566349ceaf48b74fd8d20de343896c806" translate="yes" xml:space="preserve">
          <source>3. In addition to the default environment variables you can set specific component environment variables. This is
particularly useful with the Transition component as source data tends to sit separate from our interim storage.
For Transition you replace the</source>
          <target state="translated">3. 기본 환경 변수 외에도 특정 구성 요소 환경 변수를 설정할 수 있습니다. 소스 데이터가 중간 저장소와 분리되는 경향이 있으므로 Transition 구성 요소에서 특히 유용합니다. 전환의 경우</target>
        </trans-unit>
        <trans-unit id="baf42aae5709d3877f1171ee0219c0bbfc5c7bef" translate="yes" xml:space="preserve">
          <source>4&amp;nbsp;&amp;nbsp;&amp;nbsp;Background</source>
          <target state="translated">4 배경</target>
        </trans-unit>
        <trans-unit id="9ba986219595a08a3c8836134c08f46ef1ebf422" translate="yes" xml:space="preserve">
          <source>4. Feature Cataloguing &amp;ndash; With cross over skills within machine learning and advanced data heuristics,
investigation identified commonality and separation across customer engagements that particularly challenged our
Ph.D data scientists in their effective delivery of customer success. As a result the project designed and developed
Feature Cataloguing, a machine learning technique of extracting and engineering features and their characteristics
appropriately parameterized for model selection.  This technique implements a juxta view of how features are
characterized and presented to the modelling layer. Traditionally features are directly mapped as a representation
of the underlying data set. Feature Cataloguing treats each individual feature as its own individual set of
characteristics as its representation. The resulting outcome considerably improves experimentation, cross feature
association, even when unrelated in the original data sets, and the reuse of identified features-of-interest across
use case and business domains.</source>
          <target state="translated">4. 기능 카탈로그 &amp;ndash; 머신 러닝 및 고급 데이터 휴리스틱 스 내의 교차 기술을 통해 조사를 통해 고객 성공을 효과적으로 제공하는 데있어 박사 데이터 과학자에게 특히 어려움을 겪었던 고객 참여 전반의 공통성과 분리를 확인했습니다. 그 결과이 프로젝트는 모델 선택을 위해 적절하게 매개 변수화 된 특성과 특성을 추출하고 엔지니어링하는 기계 학습 기술인 특성 카탈로그를 설계하고 개발했습니다. 이 기술은 피쳐가 특성화되고 모델링 계층에 표시되는 방식에 대한 병치보기를 구현합니다. 전통적으로 기능은 기본 데이터 세트의 표현으로 직접 매핑됩니다. 기능 카탈로그는 각 개별 기능을 표현으로서의 고유 한 개별 특성 집합으로 취급합니다.그 결과 원래 데이터 세트에서 관련이없는 경우에도 실험, 교차 기능 연관, 사용 사례 및 비즈니스 도메인에서 식별 된 관심 기능의 재사용이 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="659c0c88bbc33edd6dcb938f99f4a56b0899301f" translate="yes" xml:space="preserve">
          <source>4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Discovery Transition</source>
          <target state="translated">4.1 발견 전환</target>
        </trans-unit>
        <trans-unit id="251dfae742969cd32801dcac89c89b4536e2ddd3" translate="yes" xml:space="preserve">
          <source>4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Conceptuasl Eight stages of Model preparation</source>
          <target state="translated">4.2 개념 모델 준비의 8 단계</target>
        </trans-unit>
        <trans-unit id="3ee20e18dc1c2d3bc69309c0e2c35dd821c47540" translate="yes" xml:space="preserve">
          <source>4.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Layered approach and Capability Mapping</source>
          <target state="translated">4.3 계층화 된 접근 및 기능 매핑</target>
        </trans-unit>
        <trans-unit id="c401ce25931068687381393fbefea80cd21b57a1" translate="yes" xml:space="preserve">
          <source>5&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting Started</source>
          <target state="translated">5 시작하기</target>
        </trans-unit>
        <trans-unit id="53f5853b2f0024d7927f58d4245dc873d0921713" translate="yes" xml:space="preserve">
          <source>5. Augmented Knowledge - This the ability to capture information on data, activities and the rich stream of subject
matter expertise, injected into the machine learning discovery vertical to provide an Augmented n-view of the model
build. This includes security, sensitivity, data value scaling, dictionary, observations, performance, optimization,
bias, etc. This enriched view of data allows, amongst other things, improved knowledge share, AI explainability,
feature transparency, and accountability that feeds into AI ethics, and insight analysis.</source>
          <target state="translated">5. 증강 된 지식-모델 빌드의 증강 된 n- 뷰를 제공하기 위해 머신 러닝 발견 분야에 주입 된 데이터, 활동 및 주제별 전문 지식의 풍부한 스트림에 대한 정보를 캡처하는 기능입니다. 여기에는 보안, 민감도, 데이터 가치 확장, 사전, 관찰, 성능, 최적화, 편향 등이 포함됩니다. 이렇게 풍부한 데이터보기를 통해 무엇보다도 지식 공유, AI 설명 가능성, 기능 투명성 및 AI 윤리에 영향을주는 책임 성을 개선 할 수 있습니다. 및 통찰력 분석.</target>
        </trans-unit>
        <trans-unit id="4d41b6bd38ab45bc00b8e8d9bb372bcdcc74863a" translate="yes" xml:space="preserve">
          <source>6&amp;nbsp;&amp;nbsp;&amp;nbsp;Installation</source>
          <target state="translated">6 설치</target>
        </trans-unit>
        <trans-unit id="d4efa9b38ed7bdbe6d42e9fe79987de9d9e0c7c5" translate="yes" xml:space="preserve">
          <source>6.1&amp;nbsp;&amp;nbsp;&amp;nbsp;package install</source>
          <target state="translated">6.1 패키지 설치</target>
        </trans-unit>
        <trans-unit id="022fb009a90b9f0884a1f839c75deb8ea56c899a" translate="yes" xml:space="preserve">
          <source>6.2&amp;nbsp;&amp;nbsp;&amp;nbsp;First Time Env Setup</source>
          <target state="translated">6.2 처음 환경 설정</target>
        </trans-unit>
        <trans-unit id="cdbd548232a980d9c2657a687dea0b5411a72d7d" translate="yes" xml:space="preserve">
          <source>7&amp;nbsp;&amp;nbsp;&amp;nbsp;Transition Task - Setup</source>
          <target state="translated">7 전환 작업-설정</target>
        </trans-unit>
        <trans-unit id="83e24b30205576048fa3d501c3bc7bcab30e66b5" translate="yes" xml:space="preserve">
          <source>7.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Instantiation</source>
          <target state="translated">7.1 인스턴스화</target>
        </trans-unit>
        <trans-unit id="d797adc4b1432ac7e67ad55858caaf48b8389e88" translate="yes" xml:space="preserve">
          <source>7.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Augmented Knowledge</source>
          <target state="translated">7.2 증강 된 지식</target>
        </trans-unit>
        <trans-unit id="f9ce3e8ec2b15ce61b3a415890fc910928ac2b66" translate="yes" xml:space="preserve">
          <source>7.3&amp;nbsp;&amp;nbsp;&amp;nbsp;One-Time Connectors Settings</source>
          <target state="translated">7.3 일회성 커넥터 설정</target>
        </trans-unit>
        <trans-unit id="11a943127a9944cc53abe2b876e4795c812f5a32" translate="yes" xml:space="preserve">
          <source>7.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Source Contract</source>
          <target state="translated">7.3.1 소스 계약</target>
        </trans-unit>
        <trans-unit id="faf8edc1d84d4d755424daa79db14eeef731cea5" translate="yes" xml:space="preserve">
          <source>7.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Persist Contract</source>
          <target state="translated">7.3.2 계약 유지</target>
        </trans-unit>
        <trans-unit id="2c1f4608aea7c92be9c9830e1851c9bc2d3c4294" translate="yes" xml:space="preserve">
          <source>7.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Dictionary Contract</source>
          <target state="translated">7.3.3 사전 계약</target>
        </trans-unit>
        <trans-unit id="1044fad6d52f1f05d9abde7b166774fdfbfddbdf" translate="yes" xml:space="preserve">
          <source>8&amp;nbsp;&amp;nbsp;&amp;nbsp;Transition Task - Intent</source>
          <target state="translated">8 전환 작업-의도</target>
        </trans-unit>
        <trans-unit id="363927ee91ebacef44a7601d1410e90ad0863323" translate="yes" xml:space="preserve">
          <source>8.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Instantiate the Task</source>
          <target state="translated">8.1 태스크 인스턴스화</target>
        </trans-unit>
        <trans-unit id="f1f00439433f04b7f267f62d9df62106ba1e6ced" translate="yes" xml:space="preserve">
          <source>8.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Loading the Source Canonical</source>
          <target state="translated">8.2 소스 표준로드</target>
        </trans-unit>
        <trans-unit id="2181791e7ec0bf31e2240e87fa3b475e1038fa8a" translate="yes" xml:space="preserve">
          <source>8.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Canonical Reporting</source>
          <target state="translated">8.3 정식보고</target>
        </trans-unit>
        <trans-unit id="23ef2852bd553d5fd8919c089201c646e30298f6" translate="yes" xml:space="preserve">
          <source>8.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Parameterised Intent</source>
          <target state="translated">8.4 매개 변수화 된 의도</target>
        </trans-unit>
        <trans-unit id="9dd74bb3e11cbb695a270da9a4096dfb73aa37a7" translate="yes" xml:space="preserve">
          <source>8.4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;auto_clean_header</source>
          <target state="translated">8.4.1 auto_clean_header</target>
        </trans-unit>
        <trans-unit id="3c7c52bd1b48fa70b951e9bbb7db180e777dd664" translate="yes" xml:space="preserve">
          <source>8.4.10&amp;nbsp;&amp;nbsp;&amp;nbsp;to_normalised</source>
          <target state="translated">8.4.10 to_normalised</target>
        </trans-unit>
        <trans-unit id="5b0acfb607e7b201357c2e18aed580e3b3ff554a" translate="yes" xml:space="preserve">
          <source>8.4.11&amp;nbsp;&amp;nbsp;&amp;nbsp;to_numeric_type</source>
          <target state="translated">8.4.11 to_numeric_type</target>
        </trans-unit>
        <trans-unit id="d64a43befec487a6419fd00c887f07752ae054f2" translate="yes" xml:space="preserve">
          <source>8.4.12&amp;nbsp;&amp;nbsp;&amp;nbsp;to_remove</source>
          <target state="translated">8.4.12 to_remove</target>
        </trans-unit>
        <trans-unit id="15afef4f38d81aec1098f33718d3771d1f22b2fb" translate="yes" xml:space="preserve">
          <source>8.4.13&amp;nbsp;&amp;nbsp;&amp;nbsp;to_select</source>
          <target state="translated">8.4.13 to_select</target>
        </trans-unit>
        <trans-unit id="8d3c8229207ea34a8af0d1c31f58643e56ee2591" translate="yes" xml:space="preserve">
          <source>8.4.14&amp;nbsp;&amp;nbsp;&amp;nbsp;to_str_type</source>
          <target state="translated">8.4.14 to_str_type</target>
        </trans-unit>
        <trans-unit id="fee1b9708b3798b8263deb53646cf85b5814aea1" translate="yes" xml:space="preserve">
          <source>8.4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;auto_drop_correlated</source>
          <target state="translated">8.4.2 auto_drop_correlated</target>
        </trans-unit>
        <trans-unit id="836979d1072cb817e264a1da9002630b2869d2db" translate="yes" xml:space="preserve">
          <source>8.4.3&amp;nbsp;&amp;nbsp;&amp;nbsp;auto_remove_columns</source>
          <target state="translated">8.4.3 auto_remove_columns</target>
        </trans-unit>
        <trans-unit id="1b5680ec77c068a5fa5ef97e01bcb93c13956dcb" translate="yes" xml:space="preserve">
          <source>8.4.4&amp;nbsp;&amp;nbsp;&amp;nbsp;auto_to_category</source>
          <target state="translated">8.4.4 auto_to_category</target>
        </trans-unit>
        <trans-unit id="e858cc12195d33fed1abf728a04784335ec68e78" translate="yes" xml:space="preserve">
          <source>8.4.5&amp;nbsp;&amp;nbsp;&amp;nbsp;to_bool_type</source>
          <target state="translated">8.4.5 to_bool_type</target>
        </trans-unit>
        <trans-unit id="fafd11a1520ad1e62b3357b2e23696d0c6e3b9f5" translate="yes" xml:space="preserve">
          <source>8.4.6&amp;nbsp;&amp;nbsp;&amp;nbsp;to_category_type</source>
          <target state="translated">8.4.6 to_category_type</target>
        </trans-unit>
        <trans-unit id="5d85d63ca3f835002fded15dc106e7ce5a2bdd9a" translate="yes" xml:space="preserve">
          <source>8.4.7&amp;nbsp;&amp;nbsp;&amp;nbsp;to_date_type</source>
          <target state="translated">8.4.7 to_date_type</target>
        </trans-unit>
        <trans-unit id="62fa9c7ef3c8c35c752ffefbb40202241bf8f5c4" translate="yes" xml:space="preserve">
          <source>8.4.8&amp;nbsp;&amp;nbsp;&amp;nbsp;to_float_type</source>
          <target state="translated">8.4.8 to_float_type</target>
        </trans-unit>
        <trans-unit id="7e2db41cf3cc02b227b63272e6048d2ad95ea4a5" translate="yes" xml:space="preserve">
          <source>8.4.9&amp;nbsp;&amp;nbsp;&amp;nbsp;to_int_type</source>
          <target state="translated">8.4.9 to_int_type</target>
        </trans-unit>
        <trans-unit id="111490d1d501fc41cf1472033bb12e3bc5f5192f" translate="yes" xml:space="preserve">
          <source>8.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Persist the Transitioned Canonical</source>
          <target state="translated">8.5 전환 된 표준 유지</target>
        </trans-unit>
        <trans-unit id="42d7b2eff4506251448746caaafcb099efe53837" translate="yes" xml:space="preserve">
          <source>8.5.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Save Clean Canonical</source>
          <target state="translated">8.5.1 깨끗한 표준 저장</target>
        </trans-unit>
        <trans-unit id="e7e1963b9aa8aedf4f8002a04a825cd09c01fca4" translate="yes" xml:space="preserve">
          <source>8.5.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Save Data Dictionary</source>
          <target state="translated">8.5.2 데이터 사전 저장</target>
        </trans-unit>
        <trans-unit id="90c6407eea76d315a1f0b8b3263521b652e12c2a" translate="yes" xml:space="preserve">
          <source>8.6&amp;nbsp;&amp;nbsp;&amp;nbsp;Run Pipeline</source>
          <target state="translated">8.6 파이프 라인 실행</target>
        </trans-unit>
        <trans-unit id="5d9e0e1a2fa33425a2a2e38e5ad7b0fd85383e5b" translate="yes" xml:space="preserve">
          <source>8.6.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Locally</source>
          <target state="translated">8.6.1 로컬</target>
        </trans-unit>
        <trans-unit id="0bc24e6c95d7ce3d4028eb67a7ed0cf09857d411" translate="yes" xml:space="preserve">
          <source>8.6.2&amp;nbsp;&amp;nbsp;&amp;nbsp;End-to-End</source>
          <target state="translated">8.6.2 종단 간</target>
        </trans-unit>
        <trans-unit id="d61070f386f27745e35cd1f3cd1355ae2e05b7a3" translate="yes" xml:space="preserve">
          <source>9&amp;nbsp;&amp;nbsp;&amp;nbsp;Transparency and Traceability</source>
          <target state="translated">9 투명성과 추적 성</target>
        </trans-unit>
        <trans-unit id="60e415dff8911d9abbafe94d2a3a4ada8b2b2001" translate="yes" xml:space="preserve">
          <source>9.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Environ Report</source>
          <target state="translated">9.1 환경 보고서</target>
        </trans-unit>
        <trans-unit id="373469207a21af1d17fd2543f20d4dcabd371914" translate="yes" xml:space="preserve">
          <source>9.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Connectors Report</source>
          <target state="translated">9.2 커넥터 보고서</target>
        </trans-unit>
        <trans-unit id="aea169fbff3b6835a454e8f3fb23851ab4849a0a" translate="yes" xml:space="preserve">
          <source>9.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Intent Report</source>
          <target state="translated">9.3 의도 보고서</target>
        </trans-unit>
        <trans-unit id="d769b78def2dbb30961676e7c24ec783c456e39c" translate="yes" xml:space="preserve">
          <source>9.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Run Book Report</source>
          <target state="translated">9.4 책 보고서 실행</target>
        </trans-unit>
        <trans-unit id="6d16fcc03a3425d2a145c2f7092393527b4b8e82" translate="yes" xml:space="preserve">
          <source>9.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Notes Report</source>
          <target state="translated">9.5 메모 보고서</target>
        </trans-unit>
        <trans-unit id="7ee94b38b6a5d470a096b5d2adc998dc306632cd" translate="yes" xml:space="preserve">
          <source>9.6&amp;nbsp;&amp;nbsp;&amp;nbsp;Schema Report</source>
          <target state="translated">9.6 스키마 보고서</target>
        </trans-unit>
        <trans-unit id="105123608ea65574a438fd784766b09ee8ed8bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://opengrass.io&quot;&gt;Gigas64&lt;/a&gt;  (&lt;a href=&quot;https://twitter.com/gigas64&quot;&gt;@gigas64&lt;/a&gt;) created discovery-transition-ds.</source>
          <target state="translated">&lt;a href=&quot;http://opengrass.io&quot;&gt;Gigas64&lt;/a&gt; ( &lt;a href=&quot;https://twitter.com/gigas64&quot;&gt;@ gigas64&lt;/a&gt; )는 discovery-transition-ds를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="7f64f79befe67cdd02bf8d24a3664b634664d1e3" translate="yes" xml:space="preserve">
          <source>AI-STAC is a change of approach in terms of improving productivity of the data
scientists. This approach deconstructs the machine learning discovery vertical into a set of capabilities, ideas and
knowledge.  It presents a completely novel approach to the traditional process automation and model wrapping that is
broadly offered as a solution to solve the considerable challenges that currently restrict the effectiveness of
machine learning in the enterprise business.</source>
          <target state="translated">AI-STAC는 데이터 과학자의 생산성 향상 측면에서 접근 방식의 변화입니다. 이 접근 방식은 기계 학습 발견 수직을 기능, 아이디어 및 지식의 집합으로 분해합니다. 현재 엔터프라이즈 비즈니스에서 머신 러닝의 효율성을 제한하는 상당한 과제를 해결하기위한 솔루션으로 광범위하게 제공되는 기존 프로세스 자동화 및 모델 래핑에 대한 완전히 새로운 접근 방식을 제시합니다.</target>
        </trans-unit>
        <trans-unit id="b9d2dc9de341b5a9b0d88b8ac2b82d1eb783c5bc" translate="yes" xml:space="preserve">
          <source>Advanced data cleaning, data wrangling and feature extraction tools for ML engineers</source>
          <target state="translated">ML 엔지니어를위한 고급 데이터 정리, 데이터 랭 글링 및 특징 추출 도구</target>
        </trans-unit>
        <trans-unit id="892c489b5372104b3b62cf398d3ff7b612ac407e" translate="yes" xml:space="preserve">
          <source>Augmented Intent - Single Task Accelerator components (AI-STAC) is a unique approach to data recovery, discovery, synthesis
and modeling that innovates the approach to data science and it&amp;rsquo;s transition to production. it&amp;rsquo;s origins came
from an incubator project that shadowed a team of Ph.D. data scientists in connection with the development and delivery
of machine learning initiatives to define measurable benefit propositions for customer success. From this, a number of
observable &amp;lsquo;capabilities&amp;rsquo; were identified as unique and separate concerns. The challenges of the data scientist, and in
turn the production teams, were to effectively leveraging that separation of concern and distribute and loosely couple
the specialist capability needs to the appropriate skills set.</source>
          <target state="translated">증강 의도-단일 작업 가속기 구성 요소 (AI-STAC)는 데이터 과학에 대한 접근 방식을 혁신하고 프로덕션으로 전환하는 데이터 복구, 발견, 합성 및 모델링에 대한 고유 한 접근 방식입니다. 그 기원은 Ph.D 팀을 숨긴 인큐베이터 프로젝트에서 비롯되었습니다. 고객 성공을위한 측정 가능한 이익 제안을 정의하기 위해 머신 러닝 이니셔티브의 개발 및 제공과 관련된 데이터 과학자. 이로부터 다수의 관찰 가능한 '기능'이 고유하고 별개의 관심사로 식별되었습니다. 데이터 과학자와 생산 팀의 과제는 우려 사항의 분리를 효과적으로 활용하고 전문가 역량을 적절한 기술 세트에 느슨하게 연결하는 것이 었습니다.</target>
        </trans-unit>
        <trans-unit id="2184c5264fe6f18192e7621ec0db27fb854b77cf" translate="yes" xml:space="preserve">
          <source>Augmented Knowledge</source>
          <target state="translated">증강 된 지식</target>
        </trans-unit>
        <trans-unit id="4ca78eb4739ecc5be25a7881229c41a8dcb8db8d" translate="yes" xml:space="preserve">
          <source>Augmented Knowledge (observation, visualisation, knowledge, value scale)</source>
          <target state="translated">증강 지식 (관찰, 시각화, 지식, 가치 척도)</target>
        </trans-unit>
        <trans-unit id="a8d13365a7a1cef997a895f30f6c3560bf1bbba0" translate="yes" xml:space="preserve">
          <source>BSD-3-Clause: &lt;a href=&quot;https://github.com/doatridge-cs/discovery-transition-ds/blob/master/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt;.</source>
          <target state="translated">BSD-3-Clause : &lt;a href=&quot;https://github.com/doatridge-cs/discovery-transition-ds/blob/master/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="791975da55b74adb81a49d117aaca1aad31078ba" translate="yes" xml:space="preserve">
          <source>Born out of the frustration of time constraints and the inability to show business value
within a business expectation, this project aims to provide a set of tools to quickly
produce visual and observational results. It also aims to improve the communication
outputs needed by ML delivery to talk to Pre-Sales, Stakholders, Business SME&amp;rsquo;s, Data SME&amp;rsquo;s
product coders and tooling engineers while still remaining within familiar code paragigms.</source>
          <target state="translated">시간 제약의 좌절과 비즈니스 기대 내에서 비즈니스 가치를 보여줄 수없는 상황에서 태어난이 프로젝트는 시각적 및 관찰 결과를 신속하게 생성 할 수있는 도구 세트를 제공하는 것을 목표로합니다. 또한 사전 판매, Stakholders, Business SME, Data SME의 제품 코더 및 툴링 엔지니어와 대화하기 위해 ML 전달에 필요한 커뮤니케이션 출력을 개선하는 동시에 익숙한 코드 패러 지그 내에서 유지하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="a460c2bf4ff70325c015a822874516f1ac40b5b2" translate="yes" xml:space="preserve">
          <source>Connectivity (data sourcing and persisting, fit-for-purpose, quality, quantity, veracity, connectivity)</source>
          <target state="translated">연결성 (데이터 소싱 및 지속성, 목적에 적합, 품질, 수량, 정확성, 연결성)</target>
        </trans-unit>
        <trans-unit id="32372bb7c0a9a73a6297911f586e783c06650866" translate="yes" xml:space="preserve">
          <source>Connector Contract</source>
          <target state="translated">커넥터 계약</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">내용</target>
        </trans-unit>
        <trans-unit id="c189207a55da45305c884fe2b50e086fcad4724b" translate="yes" xml:space="preserve">
          <source>DEFAULT</source>
          <target state="translated">기본</target>
        </trans-unit>
        <trans-unit id="7624393b4a9b60e4cefb2f0217e7471a02f47200" translate="yes" xml:space="preserve">
          <source>Data Attribution (attribute mapping, quantitative attribute characterisation. predictor selection)</source>
          <target state="translated">데이터 기여 (속성 매핑, 정량적 속성 특성화, 예측 자 선택)</target>
        </trans-unit>
        <trans-unit id="77e4bca5d3f4ce44d82ecd4b4de94fd957f3141a" translate="yes" xml:space="preserve">
          <source>Data Discovery (filter, selection, typing, cleaning, valuing, validating)</source>
          <target state="translated">데이터 검색 (필터, 선택, 입력, 정리, 평가, 유효성 검사)</target>
        </trans-unit>
        <trans-unit id="e2c559a529f9935af457820b8869c58594711b59" translate="yes" xml:space="preserve">
          <source>Data Preparation</source>
          <target state="translated">데이터 준비</target>
        </trans-unit>
        <trans-unit id="e4383769115cd37f1650c682fbb6f3c62b27656b" translate="yes" xml:space="preserve">
          <source>Discovery Transition is first and key part of an end to end process of discovery, productization and tooling. It defines
the &amp;lsquo;intelligence&amp;rsquo; and business differentiators of everything downstream.</source>
          <target state="translated">Discovery Transition은 발견, 제품화 및 툴링의 종단 간 프로세스의 첫 번째이자 핵심 부분입니다. 다운 스트림 모든 것의 '지능'과 비즈니스 차별화 요소를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="cb96a381f16a6eab9fca4980a12d8b95aa60feef" translate="yes" xml:space="preserve">
          <source>Discovery Transitioning</source>
          <target state="translated">디스커버리 전환</target>
        </trans-unit>
        <trans-unit id="228371874f06ff810c6eaf9e872ab6cdbc638a16" translate="yes" xml:space="preserve">
          <source>Feature Cataloguing</source>
          <target state="translated">기능 카탈로그</target>
        </trans-unit>
        <trans-unit id="12ca2a82c069a6b71c4a2413d85271590b9a50c8" translate="yes" xml:space="preserve">
          <source>Feature Engineering</source>
          <target state="translated">기능 엔지니어링</target>
        </trans-unit>
        <trans-unit id="b8a8e3fdf2c14d8de28fdf210cf89df24b1819d4" translate="yes" xml:space="preserve">
          <source>Feature Engineering (feature modelling, dirty clustering, time series, qualitative feature characterisation)</source>
          <target state="translated">기능 엔지니어링 (기능 모델링, 더티 클러스터링, 시계열, 정 성적 기능 특성화)</target>
        </trans-unit>
        <trans-unit id="0702afb996447617a30725c5c1ecab3da5f5c9c2" translate="yes" xml:space="preserve">
          <source>Feature Framing (hypothesis function, specialisation, custom model framing, model/feature selection)</source>
          <target state="translated">특징 프레이밍 (가설 기능, 전문화, 맞춤형 모델 프레이밍, 모델 / 특징 선택)</target>
        </trans-unit>
        <trans-unit id="3a81dc7ea63799440828856a0c7fd67053878379" translate="yes" xml:space="preserve">
          <source>Finally, and optionally, we set up a Data Dictionary Connector that allows us to output a data dictionary of the source
or persist schema to a persisted state that can be shared with other parties of interest.
.. code-block:: python</source>
          <target state="translated">마지막으로, 선택적으로 소스의 데이터 사전을 출력하거나 스키마를 다른 관심 당사자와 공유 할 수있는 지속 상태로 유지할 수있는 데이터 사전 커넥터를 설정합니다. .. 코드 블록 :: 파이썬</target>
        </trans-unit>
        <trans-unit id="3a3052e82ae1dfb40249f70a2cc4b78cbe16aaa0" translate="yes" xml:space="preserve">
          <source>Firstly we need to set up the &amp;lsquo;Source Contract&amp;rsquo; that specifies the data to be sourced. Because we are taking advantage
of the environment variable</source>
          <target state="translated">먼저 소싱 할 데이터를 지정하는 '소스 계약'을 설정해야합니다. 환경 변수를 활용하고 있기 때문에</target>
        </trans-unit>
        <trans-unit id="f548246f5d350cd093628ea3dba7ec846a9bfe72" translate="yes" xml:space="preserve">
          <source>HADRON_TRANSITION_SOURCE_PATH</source>
          <target state="translated">HADRON_TRANSITION_SOURCE_PATH</target>
        </trans-unit>
        <trans-unit id="f9a9b04cd9de6627f15a91a88209943232a508e2" translate="yes" xml:space="preserve">
          <source>If you are on linux or MacOS:</source>
          <target state="translated">Linux 또는 MacOS를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="3680ed8425b173753574a3322a3623c30ba0891f" translate="yes" xml:space="preserve">
          <source>In addition the need to remove the opaque nature of the machine learning end-to-end required better transparency and
traceability, to better inform to the broadest of interested parties and be able to adapt without leaving being the
code &amp;lsquo;sludge&amp;rsquo; of redundant ideas. AI-STAC is a disruptive innovation, changing the way we approach the challenges of
Machine Learning and Augmented Inelegance, introduces the ideas of &amp;lsquo;Single Task Adaptive Component&amp;rsquo; around the
core concept of &amp;lsquo;Parameterised Intent&amp;rsquo;</source>
          <target state="translated">또한 머신 러닝 엔드 투 엔드의 불투명 한 특성을 제거하려면 더 나은 투명성과 추적 성을 필요로했고, 가장 광범위한 이해 당사자에게 더 잘 알리고 중복 아이디어의 코드 '슬러지'를 남기지 않고 적응할 수 있어야했습니다. AI-STAC는 파괴적인 혁신으로, 기계 학습 및 증강 된 비 우아함의 문제에 접근하는 방식을 바꾸고 '매개 변수화 된 의도'의 핵심 개념을 중심으로 '단일 작업 적응 구성 요소'아이디어를 소개합니다.</target>
        </trans-unit>
        <trans-unit id="7119ad7512c922fbaf8a5a8f36c623078543faad" translate="yes" xml:space="preserve">
          <source>In order to ease the startup of tasks a number of environment variables are available to pre-assign where and how
configuration and data can be collected. This can considerable improve the burden of setup and help in the migration
of the outcome contracts between environments.</source>
          <target state="translated">작업 시작을 용이하게하기 위해 구성 및 데이터를 수집 할 수있는 위치와 방법을 미리 할당 할 수있는 여러 환경 변수를 사용할 수 있습니다. 이는 설정 부담을 상당히 개선하고 환경 간의 결과 계약 마이그레이션에 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d594f0580ef2889c1f2b5b44ac0c8e073d77334" translate="yes" xml:space="preserve">
          <source>In the following example we are assuming a local file reference and are using the default AI-STAC Connector Contracts
for Data Sourcing and Persisting, but this is not the limit of how one can use connect to data retrieval and storage.
Examples of other connectors include AWS S3, Hive, Redis, MongoDB, Azure Blob Storage, or specific connectors can be
created very quickly using the AS-STAC foundation abstracts.</source>
          <target state="translated">다음 예에서는 로컬 파일 참조를 가정하고 데이터 소싱 및 지속을 위해 기본 AI-STAC 커넥터 계약을 사용하고 있지만 이것이 데이터 검색 및 저장에 연결을 사용할 수있는 방법의 제한은 아닙니다. 다른 커넥터의 예로는 AWS S3, Hive, Redis, MongoDB, Azure Blob Storage가 포함되거나 AS-STAC 기초 요약을 사용하여 매우 빠르게 특정 커넥터를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ef48ea3cf8cb84700d5144d6fb27954a0518846" translate="yes" xml:space="preserve">
          <source>In this section we will look at a couple of primary environment variables and demonstrate later how these are used
in the Component. In the following example we are assuming a local file reference but this is not the limit of how one
can use the environment variables to locate date from multiple different connection mediums. Examples of other
connectors include AWS S3, Hive, Redis, MongoDB, Azure Blob Storage, or specific connectors can be created very
quickly using the AS-STAC foundation abstracts.</source>
          <target state="translated">이 섹션에서는 몇 가지 기본 환경 변수를 살펴보고 나중에 구성 요소에서 사용되는 방법을 보여줍니다. 다음 예제에서 우리는 로컬 파일 참조를 가정하고 있지만 이것은 환경 변수를 사용하여 여러 다른 연결 매체에서 날짜를 찾는 방법에 대한 제한이 아닙니다. 다른 커넥터의 예로는 AWS S3, Hive, Redis, MongoDB, Azure Blob Storage가 포함되거나 AS-STAC 기초 요약을 사용하여 매우 빠르게 특정 커넥터를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d8d0c50aeb55934d4345ef3dbd42aef73ba564" translate="yes" xml:space="preserve">
          <source>Machine Learning Capability Mapping</source>
          <target state="translated">기계 학습 기능 매핑</target>
        </trans-unit>
        <trans-unit id="7c763a638b2a66c528d49976f23b6228513cb8e4" translate="yes" xml:space="preserve">
          <source>Model Predict (learning, feedback loops, opacity testing, insight, profiling, stabilization)</source>
          <target state="translated">모델 예측 (학습, 피드백 루프, 불투명도 테스트, 통찰력, 프로파일 링, 안정화)</target>
        </trans-unit>
        <trans-unit id="ca8b4ab73d99a953db7c3df2c405bd9ee8f2371b" translate="yes" xml:space="preserve">
          <source>Model Train (selection, optimisation, testing, training)</source>
          <target state="translated">모델 학습 (선택, 최적화, 테스트, 학습)</target>
        </trans-unit>
        <trans-unit id="3ad69816f920183f033377a148f67b213cd2f067" translate="yes" xml:space="preserve">
          <source>Model selection and optimisation</source>
          <target state="translated">모델 선택 및 최적화</target>
        </trans-unit>
        <trans-unit id="83d1989169af685cb643328b3d36989311db48ad" translate="yes" xml:space="preserve">
          <source>Note: the description should be a short summary of the task. If we need to be more verbose, and as good practice,
we can also add notes, that are timestamped and cataloged, to help augment knowledge about this
task that is carried as part of the Property Contract.</source>
          <target state="translated">참고 : 설명은 작업에 대한 간략한 요약이어야합니다. 좀 더 자세한 정보가 필요하고 모범 사례로 타임 스탬프 및 카탈로그가있는 메모를 추가하여 부동산 계약의 일부로 수행되는이 작업에 대한 지식을 늘릴 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="81edf3deb5d4efabdbced05ead6d167efb89ad00" translate="yes" xml:space="preserve">
          <source>Now we have set up the Connector Contracts we no longer need to reference this code again as the information as been
stored in the Property Contract. We will look later how we can report on these connectors and observe their settings</source>
          <target state="translated">이제 커넥터 계약을 설정 했으므로 더 이상 속성 계약에 저장된 정보로이 코드를 다시 참조 할 필요가 없습니다. 이 커넥터에 대해보고하고 설정을 관찰하는 방법은 나중에 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="51a60f56bc249d705a8344772ccc12c8bc59c7a1" translate="yes" xml:space="preserve">
          <source>Once you have instantiated the Transition Task it is important to add a description of the task as a future remind,
for others using this task and when using the MasterLedger component (not covered in this tutorial) it allows for a
quick reference overview of all the tasks in the ledger.</source>
          <target state="translated">전환 작업을 인스턴스화 한 후에는 향후 알림으로 작업에 대한 설명을 추가하는 것이 중요합니다.이 작업을 사용하는 다른 사용자를 위해이 작업을 사용하고 MasterLedger 구성 요소 (이 자습서에서 다루지 않음)를 사용할 때 모든 작업에 대한 빠른 참조 개요를 제공합니다. 원장의 작업.</target>
        </trans-unit>
        <trans-unit id="e965918da2b19e3dff266fc1b1cf5ab817fa6715" translate="yes" xml:space="preserve">
          <source>Open the current user&amp;rsquo;s profile into a text editor.</source>
          <target state="translated">현재 사용자의 프로필을 텍스트 편집기로 엽니 다.</target>
        </trans-unit>
        <trans-unit id="428d4e1e1ac84dd1bcd749a53c1a3f571c707719" translate="yes" xml:space="preserve">
          <source>Pandas 0.25.x and above are supported but It is highly recommended to use the latest 1.0.x release as the first
major release of Pandas.</source>
          <target state="translated">Pandas 0.25.x 이상이 지원되지만 Pandas의 첫 번째 주요 릴리스로 최신 1.0.x 릴리스를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="75cbeefc2e45d737df087964a8ff6f549e47583d" translate="yes" xml:space="preserve">
          <source>Parameterised intent is a core concept and represents the intended action and defining functions of the component.
Each method is known as a component intent and the parameters the task parameterisation of that intent. The intent
and its parameters are saved and can be replayed using the</source>
          <target state="translated">매개 변수화 된 의도는 핵심 개념이며 의도 된 작업을 나타내고 구성 요소의 기능을 정의합니다. 각 방법은 컴포넌트 인 텐트라고하며 매개 변수는 해당 인 텐트의 태스크 매개 변수화입니다. 인 텐트 및 해당 매개 변수가 저장되고 다음을 사용하여 재생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0b968f930a2fe0f1a460631e5afb02a1019e96d" translate="yes" xml:space="preserve">
          <source>Parametrised Intent</source>
          <target state="translated">매개 변수화 된 의도</target>
        </trans-unit>
        <trans-unit id="dbb6960c2d25996690423fa1b3ec5cd916d0dbfa" translate="yes" xml:space="preserve">
          <source>Python 2.6,  2.7 or 3.5 are not supported. Although Python 3.6 is supported, it is recommended to install</source>
          <target state="translated">Python 2.6, 2.7 또는 3.5는 지원되지 않습니다. Python 3.6이 지원되지만 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e9ae0ed784fa4b84ae7b592fd74578fd81749524" translate="yes" xml:space="preserve">
          <source>SOURCE</source>
          <target state="translated">출처</target>
        </trans-unit>
        <trans-unit id="152590a7c04065a52634d69bfe1d730db29ab7ef" translate="yes" xml:space="preserve">
          <source>Secondly we need to specify where we are going to persist our data once we have transitioned it. Again we are going
to take advantage of what our Factory Initialisation method set up for us and allow the Transition task to define our
output based on constructed template Connector Contracts.</source>
          <target state="translated">둘째, 데이터를 전환 한 후 데이터를 유지할 위치를 지정해야합니다. 다시 우리는 공장 초기화 방법이 우리를 위해 설정된 것을 활용하고 전환 작업이 구성된 템플릿 커넥터 계약을 기반으로 출력을 정의 할 수 있도록 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="1892d458b98995ad78a3f562ee6a2f7127a7565b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/doatridge-cs/discovery-transition-ds/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/doatridge-cs/discovery-transition-ds/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbdcde2024cc9cf926d8fd7ce396ac5305d5d1aa" translate="yes" xml:space="preserve">
          <source>TRANSITION</source>
          <target state="translated">전이</target>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">직무</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="e5ff5579c8d6ff558e5995757baccc15ed087fbc" translate="yes" xml:space="preserve">
          <source>The AI-STAC component package for the Transition is</source>
          <target state="translated">Transition 용 AI-STAC 구성 요소 패키지는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="785a6a35159d79a102d43e37b884c537c7b3ccf6" translate="yes" xml:space="preserve">
          <source>The Transition Component is a &amp;lsquo;Capability&amp;rsquo; component and a &amp;lsquo;Separation of Concern&amp;rsquo; dealing specifically with the
transition of data from connectivity of data source to the persistence of &amp;lsquo;data-of-interest&amp;rsquo; that has been prepared
appropriate for the language canonical, in this case &amp;lsquo;Pandas DataFrame&amp;rsquo;.</source>
          <target state="translated">전환 구성 요소는 '기능'구성 요소이며 특히 데이터 소스의 연결에서 언어 표준에 맞게 준비된 '관심 데이터'의 지속성으로의 데이터 전환을 다루는 '관심의 분리'입니다. 이 경우는 'Pandas DataFrame'입니다.</target>
        </trans-unit>
        <trans-unit id="df70e05ef552f3483e84fd31cb63fc0947e6566c" translate="yes" xml:space="preserve">
          <source>The best way to install AI-STAC component packages is directly from the Python Package Index repository using pip.
All AI-STAC components are based on a pure python foundation package</source>
          <target state="translated">AI-STAC 구성 요소 패키지를 설치하는 가장 좋은 방법은 pip를 사용하여 Python Package Index 저장소에서 직접 가져 오는 것입니다. 모든 AI-STAC 구성 요소는 순수한 Python 기반 패키지를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="40e71e1d594c39a4115cbb798c28a7cae82a08b3" translate="yes" xml:space="preserve">
          <source>The building and discovery of an ML model can be broken down into three Separation of Concerns (SoC)
or Scope of Responsibility (SoR) for the ML engineer and ML model builder.</source>
          <target state="translated">ML 모델의 구축 및 발견은 ML 엔지니어 및 ML 모델 빌더를 위해 세 가지 우려 사항 분리 (SoC) 또는 책임 범위 (SoR)로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="744a8cf4d6e249bfecedd04b1954395fe4eb21d6" translate="yes" xml:space="preserve">
          <source>The concept of being able to quickly run over a single aspect of the ML discovery and then present a stable base for
the next layer to iterate against. this micro-iteration approach allows for quick to market adaptive delivery.</source>
          <target state="translated">ML 발견의 단일 측면을 빠르게 실행 한 다음 반복 할 다음 계층에 대한 안정적인 기반을 제공 할 수 있다는 개념입니다. 이 마이크로 반복 접근 방식을 통해 시장에 신속하게 적응할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd6beb5ba5f5a76581801762e6c561bae3967887" translate="yes" xml:space="preserve">
          <source>The easiest way to instantiate the</source>
          <target state="translated">인스턴스화하는 가장 쉬운 방법은</target>
        </trans-unit>
        <trans-unit id="67f1f5e1a4717935e25923382c21ca18a4b81350" translate="yes" xml:space="preserve">
          <source>The following sections are a brief description of the intent and its parameters. To retrieve the list of available
intent methods in code run:</source>
          <target state="translated">다음 섹션은 인 텐트 및 해당 매개 변수에 대한 간략한 설명입니다. 코드에서 사용 가능한 인 텐트 메소드 목록을 검색하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c3ccc204b62bfa1212613bfc3116337c0c7eb53f" translate="yes" xml:space="preserve">
          <source>The idea behind the conceptual eight stages of Machine Learning is to layer the preparation and reuse of the activities
undertaken by the ML Data Engineer and ML Modeller. To provide a platform for micro iterations rather than a
constant repetition of repeatable tasks through the stack. It also facilitates contractual definitions between
the different disciplines that allows loose coupling and automated regeneration of the different stages of model
build. Finally it reduces the cross discipline commitments by creating a &amp;lsquo;by-design&amp;rsquo; set of contracts targeted
at, and written in, the language of the consumer.</source>
          <target state="translated">기계 학습의 개념적 8 단계 뒤에있는 아이디어는 ML 데이터 엔지니어와 ML 모델러가 수행 한 활동의 ​​준비 및 재사용을 계층화하는 것입니다. 스택을 통해 반복 가능한 작업을 지속적으로 반복하는 대신 마이크로 반복을위한 플랫폼을 제공합니다. 또한 모델 빌드의 여러 단계에서 느슨한 결합 및 자동 재생성을 허용하는 여러 분야 간의 계약 정의를 용이하게합니다. 마지막으로 소비자의 언어를 겨냥하고 작성된 '설계 별'계약 세트를 만들어 교차 규율 약속을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="8a86eeedbf5b7cc4ac766b2861994b9e986f6ee8" translate="yes" xml:space="preserve">
          <source>The package looks to build a set of outputs as part of standard data wrangling and ML exploration
that, by their nature, are familiar tools to the various reliant people and processes. For example
Data dictionaries for SME&amp;rsquo;s, Visual representations for clients and stakeholders and configuration
contracts for architects, tool builders and data ingestion.</source>
          <target state="translated">이 패키지는 본질적으로 다양한 의존하는 사람과 프로세스에 익숙한 도구 인 표준 데이터 랭 글링 및 ML 탐색의 일부로 출력 세트를 빌드합니다. 예를 들어 SME 용 데이터 사전, 클라이언트 및 이해 관계자를위한 시각적 표현, 설계자, 도구 빌더 및 데이터 수집을위한 구성 계약.</target>
        </trans-unit>
        <trans-unit id="2c2e54298cc859935923f06d707b086e379499a7" translate="yes" xml:space="preserve">
          <source>Though conceptual they do represent a set of needed disciplines and the complexity of the journey to quality output.</source>
          <target state="translated">개념적이지만 이는 필요한 분야의 집합과 양질의 결과물을 향한 여정의 복잡성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="799ac3df625a9ae152e0befe6f0f285beada241e" translate="yes" xml:space="preserve">
          <source>Though we can define as many Connector Contract as we like, by its nature, the Transition task has three key connectors
that need to be set up as a &amp;lsquo;one-off&amp;rsquo; task. Once these are set they are stored in the Property Contract and thus do not
need to be set again.</source>
          <target state="translated">커넥터 계약을 원하는만큼 정의 할 수 있지만 그 특성상 전환 작업에는 '일회성'작업으로 설정해야하는 세 가지 주요 커넥터가 있습니다. 일단 설정되면 속성 계약에 저장되므로 다시 설정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe1cacb6ab711e06c879496343eb4d54a89f3d4b" translate="yes" xml:space="preserve">
          <source>To achieve this, the project offers advanced and specialized programming methods that are unique in approach and novel
while maintaining familiarity within common tooling can be identified in four constructs.</source>
          <target state="translated">이를 달성하기 위해 프로젝트는 접근 방식이 독특하고 참신한 고급 및 전문 프로그래밍 방법을 제공하는 동시에 공통 도구 내에서 친숙 함을 유지하는 것은 네 가지 구성으로 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cf3da89cef3bfa07d5565367ea5fa02728c9c16" translate="yes" xml:space="preserve">
          <source>To become effective in the Discovery Transition phase, the ability to be able to micro-iterate within distinct layers
enables the needed adaptive delivery and quicker returns on ML use case.</source>
          <target state="translated">Discovery Transition 단계에서 효과적이려면 별개의 계층 내에서 마이크로 반복 할 수있는 기능을 통해 필요한 적응 형 전달과 ML 사용 사례에서 더 빠른 수익을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d6eb17984e7759afdbe0de925a098e8345ab62b" translate="yes" xml:space="preserve">
          <source>To retrieve the list of allowed</source>
          <target state="translated">허용 목록을 검색하려면</target>
        </trans-unit>
        <trans-unit id="4ead496f48fa5f6d2d96f52143b2d7c60b4140d3" translate="yes" xml:space="preserve">
          <source>Transition</source>
          <target state="translated">전이</target>
        </trans-unit>
        <trans-unit id="d5f946c447dc02a194997a61acfb036545491f7c" translate="yes" xml:space="preserve">
          <source>We are ready to go. The Transition task is ready to use.</source>
          <target state="translated">우리는 갈 준비가되었습니다. 전환 작업을 사용할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d4631ad057c62c18090d2fe890bc727024a335c7" translate="yes" xml:space="preserve">
          <source>We now have our Transition instance and had we previously set it up it will contain all the previously set
Property Contract</source>
          <target state="translated">이제 Transition 인스턴스가 있고 이전에 설정 한 경우 이전에 설정 한 모든 Property Contract가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6145afc0a6109fb8bf926f25a642cff80e4bbb01" translate="yes" xml:space="preserve">
          <source>With each component task we need to set up its connectivity defining three</source>
          <target state="translated">각 구성 요소 작업에서 세 가지를 정의하는 연결을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f09d5c89af17f08d08a3a77b7732ee4d175d76b" translate="yes" xml:space="preserve">
          <source>a list of headers to drop or filter on type</source>
          <target state="translated">유형에 따라 드롭하거나 필터링 할 헤더 목록</target>
        </trans-unit>
        <trans-unit id="c3c3aa6527e16f289576f4c803a0fe151ee63a97" translate="yes" xml:space="preserve">
          <source>a mapping of what to make True and False</source>
          <target state="translated">참과 거짓으로 만드는 매핑</target>
        </trans-unit>
        <trans-unit id="3afe1b26a9db7990cd2f511a92b902b836f49bde" translate="yes" xml:space="preserve">
          <source>a random state should be applied to the test train split. Default is None</source>
          <target state="translated">무작위 상태가 테스트 트레인 분할에 적용되어야합니다. 기본값은 없음</target>
        </trans-unit>
        <trans-unit id="d64c4baa5f3426892f9124a5d17b43cb5a26cb09" translate="yes" xml:space="preserve">
          <source>a regular expression to search the headers</source>
          <target state="translated">헤더를 검색하는 정규식</target>
        </trans-unit>
        <trans-unit id="d2741987cc2e3e98e246de187da3dfd23239e040" translate="yes" xml:space="preserve">
          <source>a sample percentage between 0.5 and 1 to avoid over-fitting. Default is 0.85</source>
          <target state="translated">과적 합을 방지하기 위해 0.5에서 1 사이의 샘플 비율. 기본값은 0.85입니다.</target>
        </trans-unit>
        <trans-unit id="9d98dc7e3f89822c3012ca052c95fec44b2f4acd" translate="yes" xml:space="preserve">
          <source>a test percentage split from the df to avoid over-fitting. Default is 0 for no split</source>
          <target state="translated">과적 합을 방지하기 위해 df에서 분할 된 테스트 백분율. 분할하지 않는 경우 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="b2f41dd58491c6983c6b9621865474e978c6e954" translate="yes" xml:space="preserve">
          <source>a value to fill nulls that then can be identified as a category type</source>
          <target state="translated">카테고리 유형으로 식별 될 수있는 널을 채우는 값</target>
        </trans-unit>
        <trans-unit id="8841a8585799ecec190ebd38a0d1eb3b5c0272a3" translate="yes" xml:space="preserve">
          <source>against the latest Python 3.8.x whenever possible.</source>
          <target state="translated">가능한 한 최신 Python 3.8.x에 대해.</target>
        </trans-unit>
        <trans-unit id="b6934de966153c6aa596b4841ccc0bb70f7e356e" translate="yes" xml:space="preserve">
          <source>aistac-foundation</source>
          <target state="translated">Aistac 재단</target>
        </trans-unit>
        <trans-unit id="ea1e9a2ea976cce492e3069d11a25af40f89f6ca" translate="yes" xml:space="preserve">
          <source>also drop any rows where all the values are empty</source>
          <target state="translated">모든 값이 비어있는 행도 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="60d001a00d6464e252923d4600368f39becb782f" translate="yes" xml:space="preserve">
          <source>and are object dtype</source>
          <target state="translated">객체 dtype입니다</target>
        </trans-unit>
        <trans-unit id="5f5a6b880e70cf7d8dd14c8caef499ef1f93189b" translate="yes" xml:space="preserve">
          <source>and pip installed with:</source>
          <target state="translated">다음과 함께 설치된 pip :</target>
        </trans-unit>
        <trans-unit id="bde08e6045e724a616c6b5ddfd955bbf3fa8b48a" translate="yes" xml:space="preserve">
          <source>as_num:</source>
          <target state="translated">as_num :</target>
        </trans-unit>
        <trans-unit id="508cc283b9a5f8a78cf089aabed6af75baced806" translate="yes" xml:space="preserve">
          <source>auto categorises columns that have a max number of uniqueness with a min number of nulls</source>
          <target state="translated">자동은 최소 Null 수로 고유성이 최대 인 열을 분류합니다.</target>
        </trans-unit>
        <trans-unit id="aa3d55f88563d8b1278acd513ffa0222d092c2c4" translate="yes" xml:space="preserve">
          <source>auto removes columns that are np.NaN, a single value or have a predominant value greater than.</source>
          <target state="translated">auto는 np.NaN, 단일 값이거나 주된 값이 다음보다 큰 열을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f6cec6d59d2f7f3486aced4e103b8595f745738b" translate="yes" xml:space="preserve">
          <source>auto_contract:</source>
          <target state="translated">auto_contract :</target>
        </trans-unit>
        <trans-unit id="6ba89c82e0a4ee3accb9d5739eb7ed55675c5c23" translate="yes" xml:space="preserve">
          <source>bool_map:</source>
          <target state="translated">bool_map :</target>
        </trans-unit>
        <trans-unit id="c80e455695a7bbb3e3c1d993495f57a73cf0833f" translate="yes" xml:space="preserve">
          <source>can be any reference label</source>
          <target state="translated">모든 참조 레이블이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb4e652e481b68fb581f5627eb1e92d01e5a2a20" translate="yes" xml:space="preserve">
          <source>can be boolean or a list:
if boolean and True then null_list equals [&amp;lsquo;NaN&amp;rsquo;, &amp;lsquo;nan&amp;rsquo;, &amp;lsquo;null&amp;rsquo;, &amp;lsquo;&amp;rsquo;, &amp;lsquo;None&amp;rsquo;, &amp;lsquo; &amp;lsquo;]
if list then this is considered potential null values.</source>
          <target state="translated">부울 또는 목록 일 수 있습니다. 부울이고 True이면 null_list가 [ 'NaN', 'nan', 'null', '', 'None', '']와 같으면 목록이면 잠재적 인 null 값으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="fc3ac058b2376cfea42802f44a0846f472fad183" translate="yes" xml:space="preserve">
          <source>can be boolean or a list:
if boolean and True then null_list equals [&amp;lsquo;NaN&amp;rsquo;, &amp;lsquo;nan&amp;rsquo;, &amp;lsquo;null&amp;rsquo;, &amp;lsquo;&amp;rsquo;, &amp;lsquo;None&amp;rsquo;. np.nan, None]
if list then this is considered potential null values.</source>
          <target state="translated">부울 또는 목록 일 수 있습니다. 부울이고 True이면 null_list는 [ 'NaN', 'nan', 'null', '', 'None'과 같습니다. np.nan, None] 목록이면 잠재적 인 null 값으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="07c1a68367a3ce2e1e1409174525e88044a43911" translate="yes" xml:space="preserve">
          <source>can have multiple</source>
          <target state="translated">여러 개를 가질 수 있습니다</target>
        </trans-unit>
        <trans-unit id="41dabae7b9269b285d97d343465fadf2fc075403" translate="yes" xml:space="preserve">
          <source>catalog</source>
          <target state="translated">목록</target>
        </trans-unit>
        <trans-unit id="23505a38f0d43d4938ed38feb4e9396f601b0f8b" translate="yes" xml:space="preserve">
          <source>class is the encapsulating class for the Transitioning Capability, providing a wrapper for
transitioning functionality. and imported as:</source>
          <target state="translated">class는 전환 기능을위한 래퍼를 제공하는 전환 기능에 대한 캡슐화 클래스입니다. 다음으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b8799d3ded252c2ae47fe3b96102a4de57c99eec" translate="yes" xml:space="preserve">
          <source>class is to use Factory Instantiation method</source>
          <target state="translated">클래스는 Factory 인스턴스화 방법을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="96aad030d0aabbe46970e95b7b13ac8e5c0d7a13" translate="yes" xml:space="preserve">
          <source>converts column to bool based on the map</source>
          <target state="translated">지도를 기반으로 열을 부울로 변환</target>
        </trans-unit>
        <trans-unit id="ab4f803b9991f61a27b28b2725cdf42a5f864d63" translate="yes" xml:space="preserve">
          <source>converts columns to categories</source>
          <target state="translated">열을 범주로 변환</target>
        </trans-unit>
        <trans-unit id="c8f1c523f3ad6c43b0a488d05fc9461568d5bdf3" translate="yes" xml:space="preserve">
          <source>converts columns to date types</source>
          <target state="translated">열을 날짜 유형으로 변환</target>
        </trans-unit>
        <trans-unit id="478b02b64065054270db849552cd8123ef5dc8f3" translate="yes" xml:space="preserve">
          <source>converts columns to float type</source>
          <target state="translated">열을 부동 유형으로 변환</target>
        </trans-unit>
        <trans-unit id="457c37c51cb2b237f9484e89e6916856669dd87e" translate="yes" xml:space="preserve">
          <source>converts columns to int type</source>
          <target state="translated">열을 int 유형으로 변환</target>
        </trans-unit>
        <trans-unit id="b7652d11d440d8df2c2132be4148905b93d09b37" translate="yes" xml:space="preserve">
          <source>converts columns to object type</source>
          <target state="translated">열을 객체 유형으로 변환</target>
        </trans-unit>
        <trans-unit id="6fd29350611039ad6ef0e1cc908c14da1556e817" translate="yes" xml:space="preserve">
          <source>data: the Canonical data to drop duplicates from</source>
          <target state="translated">data : 중복을 삭제할 표준 데이터</target>
        </trans-unit>
        <trans-unit id="954d8243abaa54a5b5150007a9d2c5dd3b1deefb" translate="yes" xml:space="preserve">
          <source>date_format:</source>
          <target state="translated">날짜 형식:</target>
        </trans-unit>
        <trans-unit id="3b306f2e2342f8e912527bacdf4a1832533909d2" translate="yes" xml:space="preserve">
          <source>day_first:</source>
          <target state="translated">day_first :</target>
        </trans-unit>
        <trans-unit id="de038cdd62fcf7350fd35cbb2cd4e28aab797769" translate="yes" xml:space="preserve">
          <source>df:</source>
          <target state="translated">df :</target>
        </trans-unit>
        <trans-unit id="fe5ecd5b1f0f0669d313b896e4834c968156324b" translate="yes" xml:space="preserve">
          <source>discovery-transition-ds</source>
          <target state="translated">디스커버리 전환 DS</target>
        </trans-unit>
        <trans-unit id="675bbde13f26ec7178719874289f657da58dd8fd" translate="yes" xml:space="preserve">
          <source>discovery-transition-ds: &lt;a href=&quot;https://github.com/Gigas64/discovery-transition-ds&quot;&gt;https://github.com/Gigas64/discovery-transition-ds&lt;/a&gt;.</source>
          <target state="translated">discovery-transition-ds : &lt;a href=&quot;https://github.com/Gigas64/discovery-transition-ds&quot;&gt;https://github.com/Gigas64/discovery-transition-ds&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dff23e8b804519e703fe69c75bf512285970681" translate="yes" xml:space="preserve">
          <source>drop:</source>
          <target state="translated">하락:</target>
        </trans-unit>
        <trans-unit id="e2a35fac769fea4fe5f34b7e270dfe12fd4a780e" translate="yes" xml:space="preserve">
          <source>drop_empty_row:</source>
          <target state="translated">drop_empty_row :</target>
        </trans-unit>
        <trans-unit id="43728a5de40d260ceeff9656c0d3d2c5a289a04a" translate="yes" xml:space="preserve">
          <source>dtype:</source>
          <target state="translated">dtype :</target>
        </trans-unit>
        <trans-unit id="b32f279e548b6fceef4343170778273bfe60658c" translate="yes" xml:space="preserve">
          <source>each</source>
          <target state="translated">마다</target>
        </trans-unit>
        <trans-unit id="ca8959da607cafaf20c0908f3063ce1d2520e9db" translate="yes" xml:space="preserve">
          <source>encoding=</source>
          <target state="translated">인코딩 =</target>
        </trans-unit>
        <trans-unit id="6c356f88f83f3aa320a2ced0b19deacc12dab49e" translate="yes" xml:space="preserve">
          <source>errors:</source>
          <target state="translated">오류 :</target>
        </trans-unit>
        <trans-unit id="de612d8ebfcf23f20ea50f3b780b826a5f34e35c" translate="yes" xml:space="preserve">
          <source>exclude:</source>
          <target state="translated">들어오지 못하게 하다:</target>
        </trans-unit>
        <trans-unit id="d89c7ddc0cc5aaee518b62bc8050e97cdc861dc6" translate="yes" xml:space="preserve">
          <source>fill_nulls:</source>
          <target state="translated">fill_nulls :</target>
        </trans-unit>
        <trans-unit id="2baa5a159b5f508fae34e1cd4b13b276b0c31420" translate="yes" xml:space="preserve">
          <source>fillna:</source>
          <target state="translated">필나 :</target>
        </trans-unit>
        <trans-unit id="dda1ad006ede399920779b7ebff20dc9a6f2cd86" translate="yes" xml:space="preserve">
          <source>headers:</source>
          <target state="translated">헤더 :</target>
        </trans-unit>
        <trans-unit id="9aedef6efc4eff6a9e215bb27f3ea301dd78f03f" translate="yes" xml:space="preserve">
          <source>how many decimal places to set the return values. if None then the number is unchanged</source>
          <target state="translated">반환 값을 설정할 소수 자릿수입니다. None이면 숫자는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74a394f1b9404377d0ddba3e9a108f3f2aaca047" translate="yes" xml:space="preserve">
          <source>if inplace, returns a formatted cleaner contract for this method, else a deep copy Canonical,.</source>
          <target state="translated">제자리에 있으면이 메서드에 대해 형식이 지정된 클리너 계약을 반환하고 그렇지 않으면 전체 복사 Canonical을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c167650f1efa41a678a58dc952b859a0ecd757d6" translate="yes" xml:space="preserve">
          <source>if inplace, returns a formatted cleaner contract for this method, else a deep copy pandas.DataFrame.</source>
          <target state="translated">inplace 인 경우이 메서드에 대한 형식화 된 클리너 계약을 반환하고 그렇지 않으면 딥 카피 pandas.DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f5cbc89d2d268648fea91b3c7429efbf4e7ed37" translate="yes" xml:space="preserve">
          <source>if the auto_category or to_category should be returned</source>
          <target state="translated">auto_category 또는 to_category가 반환되어야하는 경우</target>
        </trans-unit>
        <trans-unit id="1dbba84cff942c2735f1e2e9ca4e7c8c45240599" translate="yes" xml:space="preserve">
          <source>if the date can&amp;rsquo;t be inferred uses date format eg format=&amp;rsquo;%Y%m%d&amp;rsquo;</source>
          <target state="translated">날짜를 추론 할 수없는 경우 날짜 형식을 사용합니다 (예 : format = '% Y % m % d').</target>
        </trans-unit>
        <trans-unit id="4e7cc0187092137bd27d8606499ce708aa2dcd12" translate="yes" xml:space="preserve">
          <source>if the dtype &amp;lsquo;string&amp;rsquo; should be used or keep as object type</source>
          <target state="translated">dtype 'string'을 사용하거나 객체 유형으로 유지해야하는 경우</target>
        </trans-unit>
        <trans-unit id="f17029ccf094a2f846ecdb7d4f1aec3ff93a5e7d" translate="yes" xml:space="preserve">
          <source>if the passed Canonical, should be used or a deep copy</source>
          <target state="translated">전달 된 Canonical을 사용하거나 딥 카피를 사용해야하는 경우</target>
        </trans-unit>
        <trans-unit id="85ed0d38dac9ed147801021384133d0b773c0315" translate="yes" xml:space="preserve">
          <source>if the passed pandas.DataFrame should be used or a deep copy</source>
          <target state="translated">전달 된 pandas.DataFrame을 사용해야하는 경우 또는 전체 복사</target>
        </trans-unit>
        <trans-unit id="88d9d3d69ae15ca71ccf439cf3b0c362dc39d6e6" translate="yes" xml:space="preserve">
          <source>if to change the passed pandas.DataFrame or return a copy (see return)</source>
          <target state="translated">전달 된 pandas.DataFrame을 변경하거나 복사본을 반환하는 경우 (return 참조)</target>
        </trans-unit>
        <trans-unit id="0f219cbf67e018b64b8fa4fc8dcccd2fb223b29c" translate="yes" xml:space="preserve">
          <source>if true returns number of days since 0001-01-01 00:00:00 with fraction being hours/mins/secs</source>
          <target state="translated">true 인 경우 0001-01-01 00:00:00 이후의 일 수를 반환하고 분수는 시간 / 분 / 초입니다.</target>
        </trans-unit>
        <trans-unit id="0215408ab494cbab092910af84bfc888c8f812c7" translate="yes" xml:space="preserve">
          <source>if true returns the category as a category code</source>
          <target state="translated">true이면 범주를 범주 코드로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="231e69c5bf85a559bfbc5bc3c91c4fbaad0ec078" translate="yes" xml:space="preserve">
          <source>if you want to upgrade your current version then using pip install upgrade with:</source>
          <target state="translated">현재 버전을 업그레이드하려면 다음과 함께 pip install upgrade를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2895ee96f95c58269a22c656fb76387e6034dea5" translate="yes" xml:space="preserve">
          <source>in the Transition Component notes are cataloged within five named sections:
* source - notes about the source data that help in what it is, where it came from and any SME knowledge of interest
* schema - data schemas to capture and report on the outcome data set
* observations - observations of interest or enhancement of the understanding of the task
* actions - actions needed, to be taken or have been taken within the task</source>
          <target state="translated">전환 구성 요소의 메모는 5 개의 명명 된 섹션으로 분류됩니다. * 출처-출처, 출처 및 관심있는 SME 지식에 도움이되는 출처 데이터에 대한 메모 * 스키마-결과 데이터를 캡처하고보고하기위한 데이터 스키마 세트 * 관찰-관심 관찰 또는 작업 이해 향상 * 작업-작업 내에서 취하거나 취해야하는 조치</target>
        </trans-unit>
        <trans-unit id="7706f3518e029865fae5703d78696a0bb2a6bf1f" translate="yes" xml:space="preserve">
          <source>inc_category:</source>
          <target state="translated">inc_category :</target>
        </trans-unit>
        <trans-unit id="70a321cdd6fe4bfd9a08fbc4dca99d0f2997e7ca" translate="yes" xml:space="preserve">
          <source>inplace:</source>
          <target state="translated">제자리 :</target>
        </trans-unit>
        <trans-unit id="7b0c5875acd4e66ff895b904ed18b6cf961f0275" translate="yes" xml:space="preserve">
          <source>intent_level:</source>
          <target state="translated">intent_level :</target>
        </trans-unit>
        <trans-unit id="c7775e9214ae79db6716acbac8529400a4aff25c" translate="yes" xml:space="preserve">
          <source>labels</source>
          <target state="translated">labels</target>
        </trans-unit>
        <trans-unit id="df9a476c2cffced9035e31ae9dc79f03867bfc0f" translate="yes" xml:space="preserve">
          <source>maximum number of null in the column between 0 and 1. default to 0.7 (70% nulls allowed)</source>
          <target state="translated">0과 1 사이의 열에있는 최대 null 수는 기본적으로 0.7 (70 % null 허용)입니다.</target>
        </trans-unit>
        <trans-unit id="bfbaf8b2d1cdf92bf83857fe1748c0f68de03d47" translate="yes" xml:space="preserve">
          <source>method</source>
          <target state="translated">방법</target>
        </trans-unit>
        <trans-unit id="85fdb5c762f1111f7e01d64b9645ba741cc65e31" translate="yes" xml:space="preserve">
          <source>name that we can use going forward to retrieve
or re-create our Transition instance with all its &amp;lsquo;Intent&amp;rsquo;</source>
          <target state="translated">앞으로 모든 'Intent'로 Transition 인스턴스를 검색하거나 다시 생성하는 데 사용할 수있는 이름</target>
        </trans-unit>
        <trans-unit id="8678a8c4b278797684192c21be4dba7631d48909" translate="yes" xml:space="preserve">
          <source>null_max:</source>
          <target state="translated">null_max :</target>
        </trans-unit>
        <trans-unit id="14dda75bee90913c78b8d0c457cbb08945e040f9" translate="yes" xml:space="preserve">
          <source>null_min:</source>
          <target state="translated">null_min :</target>
        </trans-unit>
        <trans-unit id="8b76fa5b32053c11da8756e1c665b27ee7e5a83f" translate="yes" xml:space="preserve">
          <source>nulls_list:</source>
          <target state="translated">nulls_list :</target>
        </trans-unit>
        <trans-unit id="60f7d944261f27054ac4aaa5cab0dee6236aec19" translate="yes" xml:space="preserve">
          <source>package is a python/pandas implementation of the AI-STAC Transition component,
specifically aimed at Python, Numpy and Pandas based Data Science activities. It is build to be very light weight
in terms of package dependencies requiring nothing beyond what would be found in an basic Data Science environment.
Its designed to be used easily within multiple python based interfaces such as Jupyter, IDE or command-line python.</source>
          <target state="translated">package는 특히 Python, Numpy 및 Pandas 기반 데이터 과학 활동을 목표로하는 AI-STAC 전환 구성 요소의 python / pandas 구현입니다. 기본 데이터 과학 환경에서 찾을 수있는 것 이상으로 아무것도 요구하지 않는 패키지 종속성 측면에서 매우 경량으로 빌드되었습니다. Jupyter, IDE 또는 명령 줄 Python과 같은 여러 Python 기반 인터페이스 내에서 쉽게 사용되도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="3150ecd5e0294534a81ae047ddac559de481d774" translate="yes" xml:space="preserve">
          <source>path</source>
          <target state="translated">통로</target>
        </trans-unit>
        <trans-unit id="db44bc555c20d2c7a27f6bc52752e8e42de20ce9" translate="yes" xml:space="preserve">
          <source>potential null values to replace.</source>
          <target state="translated">대체 할 잠재적 널값.</target>
        </trans-unit>
        <trans-unit id="3684fb7aa2c534d15714a912113f4578a02e4408" translate="yes" xml:space="preserve">
          <source>precision:</source>
          <target state="translated">정도:</target>
        </trans-unit>
        <trans-unit id="b37db7a73ca8db0dc05fe6c0f77f7d8bcdc5ccaa" translate="yes" xml:space="preserve">
          <source>predominant_max:</source>
          <target state="translated">predominant_max :</target>
        </trans-unit>
        <trans-unit id="3aa3528a058ee293c9f4c60fb7d480f254cce8d1" translate="yes" xml:space="preserve">
          <source>random_state:</source>
          <target state="translated">random_state :</target>
        </trans-unit>
        <trans-unit id="db02ba305ba3788c7705583aec5f2a00fe1ca45e" translate="yes" xml:space="preserve">
          <source>re-run your bash_profile and check the variables have been set</source>
          <target state="translated">bash_profile을 다시 실행하고 변수가 설정되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82cbad0ce5320b588f9e77f07fffbed8cae13de0" translate="yes" xml:space="preserve">
          <source>re_ignore_case:</source>
          <target state="translated">re_ignore_case :</target>
        </trans-unit>
        <trans-unit id="fc55356e832f0ee4fc5f6d0d8e11ef5b3a743b86" translate="yes" xml:space="preserve">
          <source>regex:</source>
          <target state="translated">정규식 :</target>
        </trans-unit>
        <trans-unit id="0c62063c47d8224ac3e806f8e44c50d5c20efed1" translate="yes" xml:space="preserve">
          <source>remove columns from the pandas.DataFrame</source>
          <target state="translated">pandas.DataFrame에서 열 제거</target>
        </trans-unit>
        <trans-unit id="16d5b8682c3a26a9796edf701565e17ddf378f51" translate="yes" xml:space="preserve">
          <source>return:</source>
          <target state="translated">반환:</target>
        </trans-unit>
        <trans-unit id="8055ddd069a916263fa43e28009c8e6c805be57c" translate="yes" xml:space="preserve">
          <source>run_intent_pipeline(canonical)</source>
          <target state="translated">run_intent_pipeline (표준)</target>
        </trans-unit>
        <trans-unit id="2c88e9626e73f94d5dc5c97dd37379491174b058" translate="yes" xml:space="preserve">
          <source>sample_percent:</source>
          <target state="translated">sample_percent :</target>
        </trans-unit>
        <trans-unit id="789db22e507fd6e107d4d8ad11088c15b357eeed" translate="yes" xml:space="preserve">
          <source>save your changes</source>
          <target state="translated">변경 사항 저장</target>
        </trans-unit>
        <trans-unit id="0c1812cc16e190b6e3c888e4cb78ecfe2a038658" translate="yes" xml:space="preserve">
          <source>save_intent:</source>
          <target state="translated">save_intent :</target>
        </trans-unit>
        <trans-unit id="e6f48d498f7d39c74bffff6dd743b572d85e381f" translate="yes" xml:space="preserve">
          <source>sections we use the property method:</source>
          <target state="translated">속성 메서드를 사용하는 섹션 :</target>
        </trans-unit>
        <trans-unit id="cfc7e2084c3f19b577722bff54b2b543246ae4e4" translate="yes" xml:space="preserve">
          <source>selects columns from the pandas.DataFrame</source>
          <target state="translated">pandas.DataFrame에서 열을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="38443cabe64e31a674938f7c81035aede9278cc1" translate="yes" xml:space="preserve">
          <source>sep=</source>
          <target state="translated">sep =</target>
        </trans-unit>
        <trans-unit id="f752207eb5525211a813556f050db3864b395f84" translate="yes" xml:space="preserve">
          <source>set by default to 0.998.</source>
          <target state="translated">기본적으로 0.998로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3bf71034a95731e6229bd0bab7d2f062c6858c5e" translate="yes" xml:space="preserve">
          <source>specifies if to parse with the day first
If True, parses dates with the day first, eg %d-%m-%Y.
If False default to the a prefered preference, normally %m-%d-%Y (but not strict)</source>
          <target state="translated">날짜를 먼저 구문 분석할지 여부를 지정합니다. True이면 날짜를 먼저 구문 분석합니다 (예 : % d- % m- % Y). False 인 경우 기본 설정이 기본 설정이며 일반적으로 % m- % d- % Y (엄격하지는 않음)</target>
        </trans-unit>
        <trans-unit id="b053446cb8f83ba08e3fe84139d4392d6ea2571a" translate="yes" xml:space="preserve">
          <source>specifies if to parse with the year first
If True parses dates with the year first, eg 10/11/12 is parsed as 2010-11-12.
If both dayfirst and yearfirst are True, yearfirst is preceded (same as dateutil).</source>
          <target state="translated">연도를 먼저 구문 분석할지 여부를 지정합니다. True가 연도를 먼저 구문 분석하는 경우 예를 들어 10/11/12는 2010-11-12로 구문 분석됩니다. dayfirst와 yearfirst가 모두 True이면 yearfirst가 앞에옵니다 (dateutil과 동일).</target>
        </trans-unit>
        <trans-unit id="4a015a897119f8bdcbb97771daf273705bb97e14" translate="yes" xml:space="preserve">
          <source>test_size:</source>
          <target state="translated">test_size :</target>
        </trans-unit>
        <trans-unit id="0702ad3e8364784e639adbdce467c4e8d570e196" translate="yes" xml:space="preserve">
          <source>that takes advantage of our environment variables set up in the previous section. in order to differentiate each
instance of the Transition Component, we assign it a</source>
          <target state="translated">이전 섹션에서 설정 한 환경 변수를 활용합니다. Transition Component의 각 인스턴스를 구별하기 위해</target>
        </trans-unit>
        <trans-unit id="1e0f171cca42a9c318095757cb4e1f243ca9100a" translate="yes" xml:space="preserve">
          <source>the Pandas.DataFrame to get the column headers from</source>
          <target state="translated">Pandas.DataFrame을 사용하여 열 헤더를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="acbe1bd845ff95a3fe08686ac2f87db9bbd0f49d" translate="yes" xml:space="preserve">
          <source>the column types to include or exclude. Default None else int, float, bool, object, &amp;lsquo;number&amp;rsquo;</source>
          <target state="translated">포함하거나 제외 할 열 유형. 기본값 없음 else int, float, bool, object, 'number'</target>
        </trans-unit>
        <trans-unit id="db92a693d8e14d5a010b6f3270421cf4b51ae7bf" translate="yes" xml:space="preserve">
          <source>the following example adds a description to the source catalogue</source>
          <target state="translated">다음 예제는 소스 카탈로그에 설명을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="aac77e4fb2fd6336fe33bf6a54448fd343945d36" translate="yes" xml:space="preserve">
          <source>the max number of unique values in the column. default to 20</source>
          <target state="translated">열에있는 고유 값의 최대 수입니다. 기본값은 20</target>
        </trans-unit>
        <trans-unit id="14ea4738ae4dd355fd0cd8ca249cf61e243bbe56" translate="yes" xml:space="preserve">
          <source>the minimum number of null values default to 0.998 (99.8%) nulls</source>
          <target state="translated">최소 null 값 수는 기본적으로 0.998 (99.8 %) null입니다.</target>
        </trans-unit>
        <trans-unit id="f36578bfba0236f7a7838b546a473ec3d421ac81" translate="yes" xml:space="preserve">
          <source>the pandas.DataFrame to auto categorise</source>
          <target state="translated">자동 분류 할 pandas.DataFrame</target>
        </trans-unit>
        <trans-unit id="1de99f48d797c10dee726ab6825eeddcfe1880b7" translate="yes" xml:space="preserve">
          <source>the pandas.DataFrame to auto remove</source>
          <target state="translated">자동 제거 할 pandas.DataFrame</target>
        </trans-unit>
        <trans-unit id="c46d13a420d345ea544cec346e2cd75c428b958a" translate="yes" xml:space="preserve">
          <source>the percentage max a single field predominates default is 0.998</source>
          <target state="translated">단일 필드가 기본값을 지배하는 최대 백분율은 0.998입니다.</target>
        </trans-unit>
        <trans-unit id="ea2f4d8926167fc6ef94163bddd05fd55d2314c1" translate="yes" xml:space="preserve">
          <source>threshold:</source>
          <target state="translated">문지방:</target>
        </trans-unit>
        <trans-unit id="256d804d73a48b86eb4f220e24cc0de6525b6c27" translate="yes" xml:space="preserve">
          <source>to drop or not drop the headers</source>
          <target state="translated">헤더를 삭제하거나 삭제하지 않으려면</target>
        </trans-unit>
        <trans-unit id="39ed59fd4607ca9d7e6ea09a29c96a13f352a5c4" translate="yes" xml:space="preserve">
          <source>to exclude or include the dtypes</source>
          <target state="translated">dtypes 제외 또는 포함</target>
        </trans-unit>
        <trans-unit id="70bcd44f1105ae3100a6fbb7d61e6eb38cbca542" translate="yes" xml:space="preserve">
          <source>tr.set_dictionary()</source>
          <target state="translated">tr.set_dictionary ()</target>
        </trans-unit>
        <trans-unit id="e80d6b5df633a9600b63128f47a360bfe31ca1e1" translate="yes" xml:space="preserve">
          <source>true if the regex should ignore case. Default is False</source>
          <target state="translated">정규식이 대소 문자를 무시해야하는 경우 true입니다. 기본값은 False입니다.</target>
        </trans-unit>
        <trans-unit id="fb406b32a091de8ba437f5a5713b677684d1015b" translate="yes" xml:space="preserve">
          <source>unique_max:</source>
          <target state="translated">unique_max :</target>
        </trans-unit>
        <trans-unit id="31009db86f025e1f8c9156229dd3ca052de9e741" translate="yes" xml:space="preserve">
          <source>use_string_type:</source>
          <target state="translated">use_string_type :</target>
        </trans-unit>
        <trans-unit id="86906395598f2d9a86b84ce6a2f68940bbfc5d0b" translate="yes" xml:space="preserve">
          <source>uses &amp;lsquo;brute force&amp;rsquo; techniques to removes highly correlated columns based on the threshold,</source>
          <target state="translated">'brute force'기술을 사용하여 임계 값을 기준으로 상관 관계가 높은 열을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="2a8fb9cfd77510c52503ece17e5e8b6f497c2893" translate="yes" xml:space="preserve">
          <source>we only need to pass the source file name. In this
example we are also going to pass two &amp;lsquo;optional&amp;rsquo; extra parameters that get passed directly to the Source reader,</source>
          <target state="translated">소스 파일 이름 만 전달하면됩니다. 이 예에서는 소스 리더에 직접 전달되는 두 개의 '선택적'추가 매개 변수도 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c9a125cc5984142570131031b6ad8283f75ee026" translate="yes" xml:space="preserve">
          <source>which control the
loose coupling of where data is sourced and persisted to the code that uses it. Though we can define up each Connect
Contract, it is easier to take advantage of template connectors set up as part of the Factory initialisation method.</source>
          <target state="translated">이는 데이터가 공급되는 위치의 느슨한 결합을 제어하고이를 사용하는 코드에 유지됩니다. 각 연결 계약을 정의 할 수 있지만 공장 초기화 방법의 일부로 설정된 템플릿 커넥터를 활용하는 것이 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="51c9dd2c461e6f85660ed443a9b0a0b010c1cc04" translate="yes" xml:space="preserve">
          <source>whick in tern can have multiple text entries, each text keyed by
timestamp. through the catalog set is fixed,</source>
          <target state="translated">whick in tern은 여러 텍스트 항목을 가질 수 있으며 각 텍스트는 타임 스탬프로 입력됩니다. 카탈로그 세트를 통해 고정,</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">와</target>
        </trans-unit>
        <trans-unit id="5cc5daa8e2b643af6033aaffe6df4993689839c7" translate="yes" xml:space="preserve">
          <source>with a forth discipline of insight, interpretation and profiling as an outcome. these three SoC&amp;rsquo;s can be perceived as
eight distinct disciplines</source>
          <target state="translated">결과로서 통찰력, 해석 및 프로파일 링의 네 번째 규율과 함께. 이 세 가지 SoC는 8 개의 개별 분야로 인식 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="159cc884e08bc91f44053960758601acc61fcf83" translate="yes" xml:space="preserve">
          <source>year_first:</source>
          <target state="translated">year_first :</target>
        </trans-unit>
        <trans-unit id="aaebf143672e40374a7af4357626062c6310f400" translate="yes" xml:space="preserve">
          <source>{ num_value, &amp;lsquo;mean&amp;rsquo;, &amp;lsquo;mode&amp;rsquo;, &amp;lsquo;median&amp;rsquo; }. Default to 0
- If num_value, then replaces NaN with this number value
- If &amp;lsquo;mean&amp;rsquo;, then replaces NaN with the mean of the column
- If &amp;lsquo;mode&amp;rsquo;, then replaces NaN with a mode of the column. random sample if more than 1
- If &amp;lsquo;median&amp;rsquo;, then replaces NaN with the median of the column</source>
          <target state="translated">{num_value, 'mean', 'mode', 'median'}. 기본값은 0-num_value이면 NaN을이 숫자 값으로 바꿉니다.- 'mean'이면 NaN을 열의 평균으로 바꿉니다.- 'mode'이면 NaN을 열 모드로 바꿉니다. 1보다 큰 경우 임의 표본- '중앙값'이면 NaN을 열의 중앙값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="5278dea96d4376d835ecc33660f5d28b9adc6f8a" translate="yes" xml:space="preserve">
          <source>{ num_value, &amp;lsquo;mean&amp;rsquo;, &amp;lsquo;mode&amp;rsquo;, &amp;lsquo;median&amp;rsquo; }. Default to np.nan
- If num_value, then replaces NaN with this number value
- If &amp;lsquo;mean&amp;rsquo;, then replaces NaN with the mean of the column
- If &amp;lsquo;mode&amp;rsquo;, then replaces NaN with a mode of the column. random sample if more than 1
- If &amp;lsquo;median&amp;rsquo;, then replaces NaN with the median of the column</source>
          <target state="translated">{num_value, 'mean', 'mode', 'median'}. 기본값은 np.nan-num_value이면 NaN을이 숫자 값으로 바꿉니다.- 'mean'이면 NaN을 열의 평균으로 바꿉니다.- 'mode'이면 NaN을 열 모드로 바꿉니다. 1보다 큰 경우 임의 표본- '중앙값'이면 NaN을 열의 중앙값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="b96c23c0277641fd0cf77b29ebeb7792380bd6bd" translate="yes" xml:space="preserve">
          <source>{ num_value, &amp;lsquo;mean&amp;rsquo;, &amp;lsquo;mode&amp;rsquo;, &amp;lsquo;median&amp;rsquo; }. Default to np.nan
- If num_value, then replaces NaN with this number value. Must be a value not a string
- If &amp;lsquo;mean&amp;rsquo;, then replaces NaN with the mean of the column
- If &amp;lsquo;mode&amp;rsquo;, then replaces NaN with a mode of the column. random sample if more than 1
- If &amp;lsquo;median&amp;rsquo;, then replaces NaN with the median of the column</source>
          <target state="translated">{num_value, 'mean', 'mode', 'median'}. 기본값은 np.nan-num_value이면 NaN을이 숫자 값으로 바꿉니다. 문자열이 아닌 값이어야합니다.- '평균'이면 NaN을 열의 평균으로 바꿉니다.- '모드'이면 NaN을 열의 모드로 바꿉니다. 1보다 큰 경우 임의 표본- '중앙값'이면 NaN을 열의 중앙값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="20f3a1bc8bd374869a178fb063cd34e5844f9e2a" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;ignore&amp;rsquo;, &amp;lsquo;raise&amp;rsquo;, &amp;lsquo;coerce&amp;rsquo;}, default &amp;lsquo;coerce&amp;rsquo;
- If &amp;lsquo;raise&amp;rsquo;, then invalid parsing will raise an exception
- If &amp;lsquo;coerce&amp;rsquo;, then invalid parsing will be set as NaN
- If &amp;lsquo;ignore&amp;rsquo;, then invalid parsing will return the input</source>
          <target state="translated">{ 'ignore', 'raise', 'coerce'}, default 'coerce'- 'raise'인 경우 잘못된 구문 분석은 예외를 발생시킵니다.- 'coerce'인 경우 잘못된 구문 분석은 NaN으로 설정됩니다.- 'ignore'인 경우 이면 잘못된 구문 분석이 입력을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b75e08d84a86e34314c6e96d840dad0132d3876b" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;ignore&amp;rsquo;, &amp;lsquo;raise&amp;rsquo;, &amp;lsquo;coerce&amp;rsquo;}, default &amp;lsquo;coerce&amp;rsquo; }. Default to &amp;lsquo;coerce&amp;rsquo;
- If &amp;lsquo;raise&amp;rsquo;, then invalid parsing will raise an exception
- If &amp;lsquo;coerce&amp;rsquo;, then invalid parsing will be set as NaN
- If &amp;lsquo;ignore&amp;rsquo;, then invalid parsing will return the input</source>
          <target state="translated">{ 'ignore', 'raise', 'coerce'}, 기본 'coerce'}. 기본값은 'coerce'입니다.- 'raise'이면 잘못된 구문 분석이 예외를 발생시킵니다.- 'coerce'이면 잘못된 구문 분석이 NaN으로 설정됩니다.- 'ignore'이면 잘못된 구문 분석이 입력을 반환합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
