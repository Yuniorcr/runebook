<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/clients/">
    <body>
      <group id="clients">
        <trans-unit id="970ca26b5b0505052fb80616991b5be9c2abadd9" translate="yes" xml:space="preserve">
          <source>100% branch coverage.</source>
          <target state="translated">100 % 지점 커버리지.</target>
        </trans-unit>
        <trans-unit id="005a006aace07a1a184f36f077c4f39783e2080b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsyncClient&lt;/code&gt; default params</source>
          <target state="translated">&lt;code&gt;AsyncClient&lt;/code&gt; 기본 매개 변수</target>
        </trans-unit>
        <trans-unit id="d83bc4fa97105cdb78f30a561eca89cbbcf00cdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Graph&lt;/code&gt; and &lt;code&gt;AsyncGraph&lt;/code&gt; execute GraphQL queries</source>
          <target state="translated">&lt;code&gt;Graph&lt;/code&gt; 및 &lt;code&gt;AsyncGraph&lt;/code&gt; 는 GraphQL 쿼리를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7ae71e57560678ee162985c1082e7bb933e20e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; and &lt;code&gt;AsyncProxy&lt;/code&gt; clients</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 및 &lt;code&gt;AsyncProxy&lt;/code&gt; 클라이언트</target>
        </trans-unit>
        <trans-unit id="60f230bb37fc088bb7c94d99d8d59ec9d8467324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Remote&lt;/code&gt; and &lt;code&gt;AsyncRemote&lt;/code&gt; procedure calls</source>
          <target state="translated">&lt;code&gt;Remote&lt;/code&gt; 및 &lt;code&gt;AsyncRemote&lt;/code&gt; 프로 시저 호출</target>
        </trans-unit>
        <trans-unit id="98372d2ce2d0746646a6a38460720bbe09e66f57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__call__&lt;/code&gt; implements GET request with params</source>
          <target state="translated">&lt;code&gt;__call__&lt;/code&gt; 은 매개 변수로 GET 요청을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="628c9c266677c0831733fd2264d68a44e25f1ba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aiohttp&lt;/code&gt; has made several incompatible changes, including forbidding subclassing.
So the async client has switched to &lt;code&gt;httpx&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;aiohttp&lt;/code&gt; 는 서브 클래 싱 금지를 포함하여 몇 가지 호환되지 않는 변경 사항을 적용했습니다. 따라서 비동기 클라이언트는 &lt;code&gt;httpx&lt;/code&gt; 로 전환되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b13d2e1e504b61670aed91721e13cf89d52a2087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create&lt;/code&gt; implements POST request and returns Location header</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 는 POST 요청을 구현하고 Location 헤더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="09dc157b200d5dba29336b76e90303d78d0f19a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iter&lt;/code&gt; and &lt;code&gt;download&lt;/code&gt; implement GET requests with streamed content</source>
          <target state="translated">&lt;code&gt;iter&lt;/code&gt; 및 &lt;code&gt;download&lt;/code&gt; 는 스트리밍 된 콘텐츠로 GET 요청을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="14c92701831aeadfda6d6702edb21b44256712d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;singleton&lt;/code&gt; decorator</source>
          <target state="translated">&lt;code&gt;singleton&lt;/code&gt; 데코레이터</target>
        </trans-unit>
        <trans-unit id="7d2f0362465b1fcb0a5e4c29461e3135e4fd2e78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt; implements PATCH request with json params</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 는 json 매개 변수로 PATCH 요청을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="3365d95270adc510e4b9a7d6b222774576afb33a" translate="yes" xml:space="preserve">
          <source>Allow missing content-type</source>
          <target state="translated">누락 된 콘텐츠 유형 허용</target>
        </trans-unit>
        <trans-unit id="3f272f4197eb45157d32c27ac7b132466d1f91ec" translate="yes" xml:space="preserve">
          <source>Async switched to httpx</source>
          <target state="translated">비동기가 httpx로 전환되었습니다.</target>
        </trans-unit>
        <trans-unit id="7132e6b74fefdd5a99b3208ef67efe46e053702a" translate="yes" xml:space="preserve">
          <source>Asynchronous clients and resources</source>
          <target state="translated">비동기 클라이언트 및 리소스</target>
        </trans-unit>
        <trans-unit id="563b1de32901d81034810a50499bb40cb13d44e0" translate="yes" xml:space="preserve">
          <source>Being session based, Clients work seamlessly with other &lt;a href=&quot;https://python-requests.org&quot;&gt;requests&lt;/a&gt; adapters,
such as &lt;a href=&quot;https://cachecontrol.readthedocs.org&quot;&gt;CacheControl&lt;/a&gt;.
Asynchronous variants of all client types are provided in &lt;a href=&quot;https://python3statement.org&quot;&gt;Python 3&lt;/a&gt;,
using &lt;a href=&quot;https://www.encode.io/httpx&quot;&gt;httpx&lt;/a&gt; instead of &lt;a href=&quot;https://python-requests.org&quot;&gt;requests&lt;/a&gt;.
Additional clients for &lt;a href=&quot;https://en.wikipedia.org/wiki/Remote_procedure_call&quot;&gt;RPC&lt;/a&gt;,
&lt;a href=&quot;http://graphql.org&quot;&gt;GraphQL&lt;/a&gt;, and proxies also provided.</source>
          <target state="translated">세션 기반이기 때문에 클라이언트 는 &lt;a href=&quot;https://cachecontrol.readthedocs.org&quot;&gt;CacheControl&lt;/a&gt; 과 같은 다른 &lt;a href=&quot;https://python-requests.org&quot;&gt;요청&lt;/a&gt; 어댑터 와 원활하게 작동 합니다 . 모든 클라이언트 유형의 비동기 변형 은 &lt;a href=&quot;https://python-requests.org&quot;&gt;요청&lt;/a&gt; 대신 &lt;a href=&quot;https://www.encode.io/httpx&quot;&gt;httpx&lt;/a&gt; 를 사용하여 &lt;a href=&quot;https://python3statement.org&quot;&gt;Python 3&lt;/a&gt; 에서 제공됩니다 . &lt;a href=&quot;https://en.wikipedia.org/wiki/Remote_procedure_call&quot;&gt;RPC&lt;/a&gt; , &lt;a href=&quot;http://graphql.org&quot;&gt;GraphQL&lt;/a&gt; 및 프록시에 대한 추가 클라이언트 도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">변화</target>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">고객</target>
        </trans-unit>
        <trans-unit id="7f7c7bbcbbb27f0c4b8d1fe60af02deece6df96e" translate="yes" xml:space="preserve">
          <source>Clients make using sessions easier, with implicit url joining.</source>
          <target state="translated">클라이언트는 암시 적 URL 조인을 통해 세션을 더 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22de5ba047ead228703756ce05dd92ffd887c082" translate="yes" xml:space="preserve">
          <source>Clients provide &lt;a href=&quot;https://python-requests.org&quot;&gt;requests&lt;/a&gt; and
&lt;a href=&quot;https://www.encode.io/httpx&quot;&gt;httpx&lt;/a&gt; wrappers which encourage best practices,
particularly always using Sessions to connect to the same host or api endpoint.</source>
          <target state="translated">클라이언트는 특히 항상 세션을 사용하여 동일한 호스트 또는 API 엔드 포인트에 연결하도록 권장 하는 &lt;a href=&quot;https://python-requests.org&quot;&gt;요청&lt;/a&gt; 및 &lt;a href=&quot;https://www.encode.io/httpx&quot;&gt;httpx&lt;/a&gt; 래퍼를 제공 합니다 .</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="d857f137a4590abd35ea3fb95bedea2cfbfab007" translate="yes" xml:space="preserve">
          <source>HTTP for humanitarians.</source>
          <target state="translated">인도 주의자를위한 HTTP.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="4ab32b5d14fdbe41270e4c84d6eb464e6476eed5" translate="yes" xml:space="preserve">
          <source>Oauth access tokens supported in authorization header</source>
          <target state="translated">인증 헤더에서 지원되는 Oauth 액세스 토큰</target>
        </trans-unit>
        <trans-unit id="8c2c74a8fc4216155f57daf7f43a34e17701c97d" translate="yes" xml:space="preserve">
          <source>Python 3 required</source>
          <target state="translated">Python 3 필요</target>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">자원</target>
        </trans-unit>
        <trans-unit id="53a2aaea38945e22760eeffc9c6cf0dc425e8fa4" translate="yes" xml:space="preserve">
          <source>Resource attribute upcasts back to a &lt;code&gt;client&lt;/code&gt;</source>
          <target state="translated">자원 속성이 &lt;code&gt;client&lt;/code&gt; 다시 업 캐스트</target>
        </trans-unit>
        <trans-unit id="d3a441958cd76ef9b1383163accb65c30631e6f8" translate="yes" xml:space="preserve">
          <source>Resources also implement syntactic support for methods such as &lt;strong&gt;getattr&lt;/strong&gt; and &lt;strong&gt;call&lt;/strong&gt;,
providing most of the benefits of custom clients as is.</source>
          <target state="translated">또한 리소스는 &lt;strong&gt;getattr&lt;/strong&gt; 및 &lt;strong&gt;call&lt;/strong&gt; 과 같은 메서드에 대한 구문 지원을 구현 하여 사용자 지정 클라이언트의 대부분의 이점을있는 그대로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="255bb417f9e2fe26e984f758bf953b3741725cff" translate="yes" xml:space="preserve">
          <source>Resources extend Clients to implicitly handle response content,
with proper checking of status_code and content-type.</source>
          <target state="translated">리소스는 클라이언트를 확장하여 status_code 및 콘텐츠 유형을 적절히 확인하여 응답 콘텐츠를 암시 적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="8119e7f319c9927b2cee6e398f0a78babf7eebdc" translate="yes" xml:space="preserve">
          <source>Roadmap</source>
          <target state="translated">로드맵</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">테스트</target>
        </trans-unit>
        <trans-unit id="b645f41ee2423e68c0440feb171faefdd27815c6" translate="yes" xml:space="preserve">
          <source>There are no interface changes to the async client itself, other than the different response object.
In the future &lt;code&gt;clients&lt;/code&gt; may switch to only &lt;code&gt;httpx&lt;/code&gt; or &lt;code&gt;requests3&lt;/code&gt;.</source>
          <target state="translated">다른 응답 객체를 제외하고 비동기 클라이언트 자체에 대한 인터페이스 변경 사항은 없습니다. 앞으로 &lt;code&gt;clients&lt;/code&gt; 는 &lt;code&gt;httpx&lt;/code&gt; 또는 &lt;code&gt;requests3&lt;/code&gt; 로만 전환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0f86b0868ad51c3bc2690e8d0e6562b465a92ce" translate="yes" xml:space="preserve">
          <source>Typical &lt;a href=&quot;https://python-requests.org&quot;&gt;requests&lt;/a&gt; usage is redundant and inefficient,
by not taking advantage of connection pooling.</source>
          <target state="translated">일반적인 &lt;a href=&quot;https://python-requests.org&quot;&gt;요청&lt;/a&gt; 사용은 연결 풀링을 이용하지 않기 때문에 중복되고 비효율적입니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="d1b0c02d2edc36da477e6f214ead0a07186ae813" translate="yes" xml:space="preserve">
          <source>Using sessions is the better approach,
but more verbose and in practice requires manual url joining.</source>
          <target state="translated">세션을 사용하는 것이 더 나은 접근 방식이지만 더 자세하고 실제로는 수동 URL 조인이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="384d1bdd525354843c86c05bee88be59194dfd27" translate="yes" xml:space="preserve">
          <source>httpx &amp;gt;=0.11 (if Python &amp;gt;=3.6)</source>
          <target state="translated">httpx&amp;gt; = 0.11 (Python&amp;gt; = 3.6 인 경우)</target>
        </trans-unit>
        <trans-unit id="896d702bf8d0926a347248c4cce40ee1b913b6fa" translate="yes" xml:space="preserve">
          <source>httpx &amp;gt;=0.11 required</source>
          <target state="translated">httpx&amp;gt; = 0.11 필수</target>
        </trans-unit>
        <trans-unit id="72f7bb61be1ea4f46ed844839b5ac0b9b6806ace" translate="yes" xml:space="preserve">
          <source>requests &amp;gt;=2.4.2</source>
          <target state="translated">요청&amp;gt; = 2.4.2</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
