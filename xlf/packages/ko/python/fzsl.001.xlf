<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fzsl/">
    <body>
      <group id="fzsl">
        <trans-unit id="fbef91d71fff3e080b57f1633805f68d6dc9b4bf" translate="yes" xml:space="preserve">
          <source>.  The
priority attribute should be set and the methods</source>
          <target state="translated">. 우선 순위 속성을 설정하고 메소드를</target>
        </trans-unit>
        <trans-unit id="d88a9884a8d6add6be4ee7e7308da7e59812a591" translate="yes" xml:space="preserve">
          <source>:  Binds ctrl-p to launch fuzzy
scanning.  If ctrl-p is not desired, another readline style keybinding can be
specified.  When launched, fzsl will scan the current directory and provide a
UI for updating the current query for fuzzy matching.  On completion the
current command line will be preserved and the matched path will be appended.</source>
          <target state="translated">: ctrl-p를 바인딩하여 퍼지 스캔을 시작합니다. ctrl-p가 필요하지 않은 경우 다른 readline 스타일 키 바인딩을 지정할 수 있습니다. 시작되면 fzsl은 현재 디렉터리를 스캔하고 유사 일치를 위해 현재 쿼리를 업데이트하기위한 UI를 제공합니다. 완료되면 현재 명령 줄이 유지되고 일치하는 경로가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="984bbc97948948bdee2cc0cc6748247eaaee6aad" translate="yes" xml:space="preserve">
          <source>:  Creates the</source>
          <target state="translated">: 생성</target>
        </trans-unit>
        <trans-unit id="f5a667372def49804183746b5c40f11e531cbe65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;*&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="334548b432e022aa2d480940f24d7d6157fee875" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Backspace&lt;/strong&gt;:  Delete the character behind the cursor.</source>
          <target state="translated">&lt;strong&gt;백 스페이스&lt;/strong&gt; : 커서 뒤에있는 문자를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="d29452cb7c2a3e9b7bfb3c1e76d6e4ce74b777d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Down Arrow&lt;/strong&gt;/&lt;strong&gt;ctrl+j&lt;/strong&gt;:  Select the next path in the list.</source>
          <target state="translated">&lt;strong&gt;아래쪽 화살표&lt;/strong&gt; / &lt;strong&gt;ctrl + j&lt;/strong&gt; : 목록에서 다음 경로를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a38d66e6ceca094ff99600e9fcd5c56231cd7967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enter&lt;/strong&gt;:  Finish completion and echo the currently selected path, if any.</source>
          <target state="translated">&lt;strong&gt;Enter&lt;/strong&gt; : 완료를 완료하고 현재 선택된 경로가 있으면 에코합니다.</target>
        </trans-unit>
        <trans-unit id="d90722a5fbbe1355f6f3fe7921983141ee6ff50c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Escape&lt;/strong&gt;/&lt;strong&gt;ctrl+c&lt;/strong&gt;:  Exit the UI without echoing the currently selected path.</source>
          <target state="translated">&lt;strong&gt;Escape&lt;/strong&gt; / &lt;strong&gt;ctrl + c&lt;/strong&gt; : 현재 선택된 경로를 에코하지 않고 UI를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="919021268db753b085aa345b81883a7591aa476a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;F5&lt;/strong&gt;/&lt;strong&gt;ctrl+r&lt;/strong&gt;: If the scanner has a cache, refresh it.</source>
          <target state="translated">&lt;strong&gt;F5&lt;/strong&gt; / &lt;strong&gt;ctrl + r&lt;/strong&gt; : 스캐너에 캐시가 있으면 새로 고 &lt;strong&gt;칩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="294dc36ae2f927781bbfda8b4ad894655196460f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Left Arrow&lt;/strong&gt;:  Move the cursor left.</source>
          <target state="translated">&lt;strong&gt;왼쪽 화살표&lt;/strong&gt; : 커서를 왼쪽으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9d14e43769528cfaa6ea8138fc7b140152482356" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Options&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;옵션&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="cf4bf6483d107b75fd9cf3c195957ad61dab2a32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Right Arrow&lt;/strong&gt;:  Move the cursor right.</source>
          <target state="translated">&lt;strong&gt;오른쪽 화살표&lt;/strong&gt; : 커서를 오른쪽으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="2a5c8a6b059e310b98080cb06e90cf25b8d80f31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Up Arrow&lt;/strong&gt;/&lt;strong&gt;ctrl+k&lt;/strong&gt;:  Select the previous path in the list.</source>
          <target state="translated">&lt;strong&gt;위쪽 화살표&lt;/strong&gt; / &lt;strong&gt;ctrl + k&lt;/strong&gt; : 목록에서 이전 경로를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="90cce32c63581a3f5e59e33286c37a5844194881" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cache&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;은닉처&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9409366039482ceaa5f4bce1e6440e867f6c4e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cmd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;cmd&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fe9cb9ff4f60da08970ab74347340262e67f63a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ctrl+v&lt;/strong&gt;:  Enter verbose move which shows the scores for each path.</source>
          <target state="translated">&lt;strong&gt;ctrl + v&lt;/strong&gt; : 각 경로의 점수를 보여주는 자세한 이동을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="156d0ce1539f489d12b300ba4209c1fa29df6bb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;detect_cmd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;detect_cmd&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a65af86207932fc6210e8a3dd529e8396b4bbe05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;목적&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0117298724713a846d0d4991ed6931bd8a0e494d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;통로&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4d54b094f2919d6766a7ab2118254a241e236cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;priority&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;우선 순위&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72e810f5916efed2a04cada43e09af0f8f17a2a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;root_path&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;root_path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ceb09d09fcfa72e32dd310b1889d27dc8d05fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;유형&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="872b400d8d035e8227f3547611769c544d239991" translate="yes" xml:space="preserve">
          <source>All configuration of fzsl is done in an ini style which is interpreted by the
python ConfigParser module.  Each section defines a new scanner with the
section title used as the scanner name.  Configuration is read from
&lt;em&gt;~/.config/fzslrc&lt;/em&gt; if it exists, if not fzsl will fall back to
&lt;em&gt;/usr/share/fzsl/fzsl.conf&lt;/em&gt;.  The default configuration that ships with fzsl contains
full documentation for all scanner types and should be referenced.  It
currently handles standard directories, git checkouts and scanning for only
directories.  It also has a number of examples for how to define additional
scanners.  Scanners with a priority less than 0 can only be used by passing the
scanner name to fzsl with the &lt;strong&gt;&amp;ndash;rule&lt;/strong&gt; argument.</source>
          <target state="translated">fzsl의 모든 구성은 python ConfigParser 모듈에 의해 해석되는 ini 스타일로 수행됩니다. 각 섹션은 스캐너 이름으로 사용되는 섹션 제목으로 새 스캐너를 정의합니다. 구성은 &lt;em&gt;~ / .config / fzslrc (&lt;/em&gt; 존재하는 경우) 에서 읽습니다 . 그렇지 않은 경우 fzsl은 &lt;em&gt;/usr/share/fzsl/fzsl.conf로&lt;/em&gt; 돌아갑니다 . fzsl과 함께 제공되는 기본 구성에는 모든 스캐너 유형에 대한 전체 설명서가 포함되어 있으므로 참조해야합니다. 현재 표준 디렉토리, git 체크 아웃 및 디렉토리 스캔 만 처리합니다. 또한 추가 스캐너를 정의하는 방법에 대한 많은 예가 있습니다. 우선 순위가 0 미만인 스캐너는 &lt;strong&gt;&amp;ndash;rule&lt;/strong&gt; 인수 를 사용하여 스캐너 이름을 fzsl에 전달하는 방식으로 만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7e2c19a4a57bcc91a55da86958770e1aaa15a7e4" translate="yes" xml:space="preserve">
          <source>Any further options are passed as keyword arguments to the Scanners
constructor.  Note that as they are parsed by &lt;strong&gt;ConfigParser&lt;/strong&gt; they
will be strings.</source>
          <target state="translated">추가 옵션은 Scanners 생성자에 키워드 인수로 전달됩니다. &lt;strong&gt;ConfigParser에&lt;/strong&gt; 의해 구문 분석 되므로 문자열이됩니다.</target>
        </trans-unit>
        <trans-unit id="844550ab738ea00a30b8da99f16182fb8c79d223" translate="yes" xml:space="preserve">
          <source>Author:</source>
          <target state="translated">저자:</target>
        </trans-unit>
        <trans-unit id="f442b9234477d8def500a9840cec8cff9ed97e5a" translate="yes" xml:space="preserve">
          <source>BSD</source>
          <target state="translated">BSD</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">구성</target>
        </trans-unit>
        <trans-unit id="d9cd19d82d2533717328fa486d4d255097da7d91" translate="yes" xml:space="preserve">
          <source>Contributers:</source>
          <target state="translated">기여자 :</target>
        </trans-unit>
        <trans-unit id="060b066a13c8e50518ed175c46b7a5f1adc282b5" translate="yes" xml:space="preserve">
          <source>Errata</source>
          <target state="translated">정오표</target>
        </trans-unit>
        <trans-unit id="5fdb1fdf37fc9338014ee9f1fb4e96b82c83d72d" translate="yes" xml:space="preserve">
          <source>Fuzzy Matching User Interface</source>
          <target state="translated">퍼지 매칭 사용자 인터페이스</target>
        </trans-unit>
        <trans-unit id="d1a7daf14736952aebb4369b6f8d22f2f46e20ae" translate="yes" xml:space="preserve">
          <source>Fuzzy file or path searcher in the shell which provides path completion similar
to the &lt;a href=&quot;https://github.com/kien/ctrlp.vim&quot;&gt;ctrlp&lt;/a&gt; plugin for vim.  Start a command and then hit Ctrl+p to see a list
of possible paths.  Enter search terms to narrow down the list and then select
the appropriate completion using your arrow keys or Ctrl+j/k.</source>
          <target state="translated">vim 용 &lt;a href=&quot;https://github.com/kien/ctrlp.vim&quot;&gt;ctrlp&lt;/a&gt; 플러그인 과 유사한 경로 완성 기능을 제공하는 쉘의 퍼지 파일 또는 경로 검색기 . 명령을 시작한 다음 Ctrl + p를 눌러 가능한 경로 목록을 확인합니다. 검색어를 입력하여 목록의 범위를 좁힌 다음 화살표 키 또는 Ctrl + j / k를 사용하여 적절한 완성을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c15b4a82e3b09801701a8d1360c4463e1ddd5181" translate="yes" xml:space="preserve">
          <source>Fuzzy path searching for shells</source>
          <target state="translated">쉘에 대한 퍼지 경로 검색</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="1b9b365f1506e4c66821bbca72a2495ad7f6e5f5" translate="yes" xml:space="preserve">
          <source>Joshua Downer &amp;lt;&lt;a href=&quot;mailto:joshua.downer%40gmail.com&quot;&gt;joshua.downer@gmail.com&lt;/a&gt;&amp;gt;</source>
          <target state="translated">조슈아 다우 너 &amp;lt; &lt;a href=&quot;mailto:joshua.downer%40gmail.com&quot;&gt;joshua.downer@gmail.com&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="b13c3c40c96dc189ff43e0a66dc020b2174a4b20" translate="yes" xml:space="preserve">
          <source>Justin Bronder &amp;lt;&lt;a href=&quot;mailto:jsbronder%40gmail.com&quot;&gt;jsbronder@gmail.com&lt;/a&gt;&amp;gt;</source>
          <target state="translated">저스틴 브론 더 &amp;lt; &lt;a href=&quot;mailto:jsbronder%40gmail.com&quot;&gt;jsbronder@gmail.com&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">특허:</target>
        </trans-unit>
        <trans-unit id="8335e0360c7f34265b5f927246b1d6a912d0e8b6" translate="yes" xml:space="preserve">
          <source>Name of the</source>
          <target state="translated">의 이름</target>
        </trans-unit>
        <trans-unit id="23fb5e7ff9e44a6dfec446d7b84a1d48bae8b0a2" translate="yes" xml:space="preserve">
          <source>Path to a file that will be used to cache results for for this scanner.  By
default, scanners will use the cache rather than rescanning the entire file
list.  Note that the cache is tied to the scanner, so if the same &lt;strong&gt;cmd&lt;/strong&gt;
needs to be used with two different caches, it will have to be two
different scanners.  If no cache is supplied, results will just be
regenerated on each run.  This is probably fine unless you have a really
large number of files (tens of thousands) to scan or a really slow disk.</source>
          <target state="translated">이 스캐너에 대한 결과를 캐시하는 데 사용할 파일의 경로입니다. 기본적으로 스캐너는 전체 파일 목록을 다시 검색하는 대신 캐시를 사용합니다. 캐시는 스캐너에 연결되어 있으므로 동일한 &lt;strong&gt;cmd&lt;/strong&gt; 를 두 개의 다른 캐시와 함께 사용해야하는 경우 두 개의 다른 스캐너를 사용해야합니다. 캐시가 제공되지 않으면 실행될 때마다 결과가 재생성됩니다. 스캔 할 파일이 정말 많거나 (수만 개) 정말 느린 디스크가 아니라면이 방법은 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="de1458024d8bba4cb2811f7b7f4e53a94db3179c" translate="yes" xml:space="preserve">
          <source>Path to the python file containing the scanner implementation.</source>
          <target state="translated">스캐너 구현을 포함하는 Python 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="956752bd7b0fa93240578bdb72fd272caf74248c" translate="yes" xml:space="preserve">
          <source>Python Scanners</source>
          <target state="translated">Python 스캐너</target>
        </trans-unit>
        <trans-unit id="39140d83724732faa48830fbe346826cc3a27ccc" translate="yes" xml:space="preserve">
          <source>Python scanners offer a deeper level of customization for scanners.  They must
derive from the &lt;strong&gt;fzsl.Scanner&lt;/strong&gt; class.  See</source>
          <target state="translated">Python 스캐너는 스캐너에 대한 더 깊은 수준의 사용자 지정을 제공합니다. &lt;strong&gt;fzsl.Scanner&lt;/strong&gt; 클래스 에서 파생되어야합니다 . 보다</target>
        </trans-unit>
        <trans-unit id="6ee3b593f4af7c77fae3f3aa378ffe91031089fd" translate="yes" xml:space="preserve">
          <source>Shell Functions</source>
          <target state="translated">쉘 기능</target>
        </trans-unit>
        <trans-unit id="5cdf5b1506c63c86d45a7804f4d1ef2c265df01a" translate="yes" xml:space="preserve">
          <source>Simple Scanners</source>
          <target state="translated">간단한 스캐너</target>
        </trans-unit>
        <trans-unit id="1b1a955586a8395e2c29e721dd99d65593b14a4d" translate="yes" xml:space="preserve">
          <source>Simple scanners use shell commands and or functions to check if they are suitable
and to scan for files.  They are very easy to configure and should support the
vast majority of use cases.  Simple scanners are defined by setting two shell
commands that should be executed.  The first detects if the scanner is suitable
for the current working directory and the second performs the scanning.  Simple
scanners should also set a priority for ranking if more than one scanner is
valid.  If the priority is not specified, it defaults to 0.  Finally, a cache
and root path for the scanning command can be set.  For example:</source>
          <target state="translated">간단한 스캐너는 쉘 명령 및 / 또는 기능을 사용하여 적합한 지 확인하고 파일을 스캔합니다. 구성이 매우 쉽고 대부분의 사용 사례를 지원해야합니다. 간단한 스캐너는 실행해야하는 두 개의 셸 명령을 설정하여 정의됩니다. 첫 번째는 스캐너가 현재 작업 디렉토리에 적합한 지 감지하고 두 번째는 스캔을 수행합니다. 두 개 이상의 스캐너가 유효한 경우 단순 스캐너는 순위 우선 순위도 설정해야합니다. 우선 순위가 지정되지 않은 경우 기본값은 0입니다. 마지막으로 스캔 명령에 대한 캐시 및 루트 경로를 설정할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="10426e0eda7e230f07f183b395cf6c4d6fee8417" translate="yes" xml:space="preserve">
          <source>Source/Homepage:</source>
          <target state="translated">출처 / 홈페이지 :</target>
        </trans-unit>
        <trans-unit id="603d6a21f4f2d3cff124505543269e62fe4ad8e1" translate="yes" xml:space="preserve">
          <source>The command to execute in the root directory that will output all possible
matches.  By default, the current working directory of the command will be
the same as that of the caller.  However, if the root_path is specified, it
will be used instead.</source>
          <target state="translated">가능한 모든 일치 항목을 출력하는 루트 디렉토리에서 실행할 명령입니다. 기본적으로 명령의 현재 작업 디렉토리는 호출자의 디렉토리와 동일합니다. 그러나 root_path가 지정되면 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2bc02779d925951a5eeb1dccdd2f33e2514bfef" translate="yes" xml:space="preserve">
          <source>The only requirement for the &lt;strong&gt;cmd&lt;/strong&gt; and &lt;strong&gt;detect_cmd&lt;/strong&gt; is that they are
available in your standard login shell.  For instance, if using bash, they
should be defined in &lt;em&gt;~/.bash_profile&lt;/em&gt;:</source>
          <target state="translated">&lt;strong&gt;cmd&lt;/strong&gt; 및 &lt;strong&gt;detect_cmd에&lt;/strong&gt; 대한 유일한 요구 사항은 표준 로그인 셸에서 사용할 수 있다는 것입니다. 예를 들어 bash를 사용하는 경우 &lt;em&gt;~ / .bash_profile에&lt;/em&gt; 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ef22838475a32dd0658f49f963ba151dea85d76b" translate="yes" xml:space="preserve">
          <source>The priority is used to determine which scanner to use when multiple
scanners are considered suitable.  The higher the priority, the more likely
it will be selected.  Scanners with a priority less than 0 are never
considered unless manually selected via the &lt;strong&gt;&amp;ndash;rule&lt;/strong&gt; argument.</source>
          <target state="translated">우선 순위는 여러 스캐너가 적합한 것으로 간주 될 때 사용할 스캐너를 결정하는 데 사용됩니다. 우선 순위가 높을수록 선택 될 가능성이 높습니다. &lt;strong&gt;&amp;ndash;rule&lt;/strong&gt; 인수 를 통해 수동으로 선택하지 않는 한 우선 순위가 0 미만인 스캐너는 고려되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7ddfe61999a0865e62071cbd05a8e9ffc304dae7" translate="yes" xml:space="preserve">
          <source>The root path has two possible uses.  First, if the current working
directory is a subdirectory of the root path, the scanner will be
considered suitable for use when scanning.  Second, if the root_path is
specified along with detect_cmd, then the root_path will be used as the
current working directory when executing the detect_cmd.</source>
          <target state="translated">루트 경로에는 두 가지 용도가 있습니다. 첫째, 현재 작업 디렉토리가 루트 경로의 하위 디렉토리 인 경우 스캐너는 스캔시 사용하기에 적합한 것으로 간주됩니다. 둘째, detect_cmd와 함께 root_path를 지정하면 detect_cmd를 실행할 때 root_path가 현재 작업 디렉토리로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7dbf6c6d7f39232b5b0d1dac8cc42a812034b62e" translate="yes" xml:space="preserve">
          <source>This command will be executed to determine if the scanner is a possible
match for the current working directory.  The command should return 0 for a
valid directory.</source>
          <target state="translated">이 명령은 스캐너가 현재 작업 디렉터리와 일치하는지 확인하기 위해 실행됩니다. 명령은 유효한 디렉토리에 대해 0을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="f6b810d9ded95c08f1a75f610aa7f484e53d5adc" translate="yes" xml:space="preserve">
          <source>This must be set to &lt;strong&gt;python&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;python&lt;/strong&gt; 으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cb2ff0df1689a62bc17c0e73441a6f3082c168c4" translate="yes" xml:space="preserve">
          <source>This must be set to &lt;strong&gt;simple&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;단순&lt;/strong&gt; 으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6071fb63b1ad330dde2dfe95c5dab4de58a16794" translate="yes" xml:space="preserve">
          <source>To use the stdout of a command rather than a fixed string as the root_path,
preface the root_command with a &lt;strong&gt;!&lt;/strong&gt;.  For example,:</source>
          <target state="translated">고정 된 문자열 대신 명령의 stdout을 root_path로 사용하려면 root_command 앞에 &lt;strong&gt;! &lt;/strong&gt;. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="af88fa8e1fb955e6f81626a34d04c1b0c7575cc1" translate="yes" xml:space="preserve">
          <source>__fzsl_bind_default_matching [BINDING]</source>
          <target state="translated">__fzsl_bind_default_matching [BINDING]</target>
        </trans-unit>
        <trans-unit id="5e0018dbbce84d8d56a90699589d44046087b197" translate="yes" xml:space="preserve">
          <source>__fzsl_create_fzcd [SCANNER]&quot;</source>
          <target state="translated">__fzsl_create_fzcd [스캐너] &quot;</target>
        </trans-unit>
        <trans-unit id="1939f247b3ae06244a8d50fa7dabbcc975c6fc4c" translate="yes" xml:space="preserve">
          <source>__init__</source>
          <target state="translated">__init__</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="bfcade9dfd93748536680ee00fad262247a5a2f2" translate="yes" xml:space="preserve">
          <source>derived class.</source>
          <target state="translated">파생 클래스.</target>
        </trans-unit>
        <trans-unit id="e2c771697dbdc7d00209d2794f75df0cc68afcba" translate="yes" xml:space="preserve">
          <source>function which will
change the current directory to the fuzzily matched path on completion. By
default the shipped &lt;strong&gt;dirs-only&lt;/strong&gt; scanner will be used.  Another scanner can
be specified by passing it as the first argument.</source>
          <target state="translated">완료시 현재 디렉토리를 모호하게 일치하는 경로로 변경하는 함수입니다. 기본적으로 배송 된 &lt;strong&gt;dirs 전용&lt;/strong&gt; 스캐너가 사용됩니다. 다른 스캐너는 첫 번째 인수로 전달하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6670cd9b56157512b41dff027b58b707be4f5c2" translate="yes" xml:space="preserve">
          <source>fzcd</source>
          <target state="translated">fzcd</target>
        </trans-unit>
        <trans-unit id="6f57b56564dde74abb69c1ead4c3554dd5302d44" translate="yes" xml:space="preserve">
          <source>fzsl can be installed via pip or by simply running the included</source>
          <target state="translated">fzsl은 pip를 통해 또는 단순히 포함 된</target>
        </trans-unit>
        <trans-unit id="2ea2d90442bd663b88a1bd6e8eb060391b01bcaa" translate="yes" xml:space="preserve">
          <source>fzsl uses a single matching algorithm but provides the user with a wide variety
of ways to influence how file scanning is performed as it is by far the most
intensive part of this process.  Scanners are selected by first checking if
they are valid for the current working directory and then ranked by a
user-selected priority.</source>
          <target state="translated">fzsl은 단일 일치 알고리즘을 사용하지만 파일 검사가 수행되는 방식에 영향을 미치는 다양한 방법을 사용자에게 제공합니다. 스캐너는 먼저 현재 작업 디렉토리에 대해 유효한지 확인한 다음 사용자가 선택한 우선 순위에 따라 순위가 매겨집니다.</target>
        </trans-unit>
        <trans-unit id="3150576f64a397c6196534a28b5640d5cd1a3828" translate="yes" xml:space="preserve">
          <source>fzsl will launch a ncurses interface when prompted to start matching in the
current directory.  Once the file list has been populated by the scanner, the
user can begin to input characters to be fuzzily matched against the scanned
paths.  As the query is updated, the list of available paths will be trimmed.
A portion of each path will be highlighted to represent which part of it was
best matched against the query.  The user can also move the cursor around to
support editing of the query.  The following keybindings are defined.</source>
          <target state="translated">fzsl은 현재 디렉토리에서 일치를 시작하라는 메시지가 표시되면 ncurses 인터페이스를 시작합니다. 스캐너에 의해 파일 목록이 채워지면 사용자는 스캔 된 경로와 모호하게 일치시킬 문자를 입력하기 시작할 수 있습니다. 쿼리가 업데이트되면 사용 가능한 경로 목록이 잘립니다. 각 경로의 일부가 강조 표시되어 쿼리와 가장 잘 일치하는 부분을 나타냅니다. 사용자는 쿼리 편집을 지원하기 위해 커서를 이동할 수도 있습니다. 다음 키 바인딩이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="25ea397d6e5215394f018a1fccc6bd10708f0930" translate="yes" xml:space="preserve">
          <source>fzsl will not modify your shell by default.  It is up to you to source the
included &lt;em&gt;/usr/share/fzsl/fzsl.bash&lt;/em&gt;.  It defines two functions that will add
fzsl functionality directly to your shell.  See the script for further
documentation.</source>
          <target state="translated">fzsl은 기본적으로 쉘을 수정하지 않습니다. 포함 된 &lt;em&gt;/usr/share/fzsl/fzsl.bash의&lt;/em&gt; 소스는 귀하에게 달려 있습니다 . 셸에 fzsl 기능을 직접 추가하는 두 가지 함수를 정의합니다. 추가 문서는 스크립트를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a00179b4c2fb2ac6ecd027c6556bad9ca5e42f22" translate="yes" xml:space="preserve">
          <source>fzsl.Scanner</source>
          <target state="translated">fzsl. 스캐너</target>
        </trans-unit>
        <trans-unit id="668ca9a2954510ea7ee138b7441b59e490a88ef8" translate="yes" xml:space="preserve">
          <source>is_suitable(self, path)</source>
          <target state="translated">is_suitable (자신, 경로)</target>
        </trans-unit>
        <trans-unit id="ed520f59f0feb98c75d7ee47152b69748c9657b0" translate="yes" xml:space="preserve">
          <source>method as keyword arguments.  Perhaps
the best example is to show how one could create a Simple Scanner using fzsl
itself:</source>
          <target state="translated">메소드를 키워드 인수로 사용합니다. 아마도 가장 좋은 예는 fzsl 자체를 사용하여 간단한 스캐너를 만드는 방법을 보여주는 것입니다.</target>
        </trans-unit>
        <trans-unit id="415e8c3d4423832646289bb0e9be30c7cf17f1b3" translate="yes" xml:space="preserve">
          <source>need to be defined.  Any caching is
left up to the implementor.  Any extra options set in the scanner configuration
are passed to the scanners</source>
          <target state="translated">정의해야합니다. 모든 캐싱은 구현 자에게 달려 있습니다. 스캐너 구성에 설정된 추가 옵션은 스캐너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="90ae6c85fc365e5be2ccec6cd263c262fd63c41f" translate="yes" xml:space="preserve">
          <source>pydoc fzsl.Scanner</source>
          <target state="translated">pydoc fzsl.Scanner</target>
        </trans-unit>
        <trans-unit id="c114cfb03f988720e89aa805e276cb2f2a6c65e5" translate="yes" xml:space="preserve">
          <source>scan(self, path=None, rescan=False)</source>
          <target state="translated">scan (self, path = None, rescan = False)</target>
        </trans-unit>
        <trans-unit id="543ba5faab29be163929a8cd3b2c4bafb96cdc17" translate="yes" xml:space="preserve">
          <source>script:</source>
          <target state="translated">스크립트:</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
