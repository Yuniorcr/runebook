<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/captcha-harvester/">
    <body>
      <group id="captcha-harvester">
        <trans-unit id="7fb505d333ffbfca21839989658311c79424d705" translate="yes" xml:space="preserve">
          <source>&amp;gt; harvester</source>
          <target state="translated">&amp;gt; 수확기</target>
        </trans-unit>
        <trans-unit id="1779e3f54ff270d17ed5708e454502ac09afdfd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The way the harvester is currently setup, if you use the &lt;code&gt;-b&lt;/code&gt; flag to start up the browser, then when you quit either the browser or the server, the other will also terminate.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 하베스터가 현재 설정되어있는 방식으로 &lt;code&gt;-b&lt;/code&gt; 플래그를 사용 하여 브라우저를 시작하면 브라우저 나 서버를 종료하면 다른 하나도 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="072d20f55098e62fcb2f0f0bac460312bf91a3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Without the &lt;code&gt;-b/--browser&lt;/code&gt; only the server will start up, without the browser. You won't
be able to access the site correctly on your normal browsers because the host won't be correctly
mapped to the local server. This could be useful if you want to open the browser with your own
command line options or you already have one running from a previous session.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : &lt;code&gt;-b/--browser&lt;/code&gt; 없으면 브라우저 없이 서버 만 시작됩니다. 호스트가 로컬 서버에 올바르게 매핑되지 않기 때문에 일반 브라우저에서 사이트에 올바르게 액세스 할 수 없습니다. 사용자 고유의 명령 줄 옵션을 사용하여 브라우저를 열거 나 이전 세션에서 이미 실행중인 경우에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="3fe643b265d20b260a59d70a3cde15e9509f7dba" translate="yes" xml:space="preserve">
          <source>Additonally, V3 ReCaptcha's require an action when submitting the captcha. Sometimes they don't
matter if the target site dosen't double check them and you can get away passing anything to (-a/--data-action).
However, it is advised that you grab the correct &lt;code&gt;data-action&lt;/code&gt; attribute when looking for the sitekey, they
should be near each other.</source>
          <target state="translated">추가로 V3 ReCaptcha는 보안 문자를 제출할 때 조치가 필요합니다. 때로는 대상 사이트가 두 번 확인하지 않아도 중요하지 않으며 (-a /-data-action)에 아무것도 전달할 수 있습니다. 그러나 사이트 키를 찾을 때 올바른 &lt;code&gt;data-action&lt;/code&gt; 속성을 확보 하는 것이 좋습니다 . 서로 가까이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3864eeb539c9df959bdb7e6247306ba05b74fcba" translate="yes" xml:space="preserve">
          <source>Any Other Lanuage (via HTTP API)</source>
          <target state="translated">기타 언어 (HTTP API를 통해)</target>
        </trans-unit>
        <trans-unit id="55f45fc0081a5ed9ca7af87f6b119c977ec51d92" translate="yes" xml:space="preserve">
          <source>Basically this sets the DNS record for &lt;code&gt;example.com&lt;/code&gt; to &lt;code&gt;127.0.0.1:5000&lt;/code&gt; rather than querying a DNS server
for the actual IP of the real site. This helps us trick the captcha provider into thinking that the captcha
is actually being loaded on their client's.</source>
          <target state="translated">기본적으로 실제 사이트의 실제 IP를 DNS 서버에 쿼리하는 대신 &lt;code&gt;example.com&lt;/code&gt; 의 DNS 레코드 를 &lt;code&gt;127.0.0.1:5000&lt;/code&gt; 으로 설정합니다 . 이것은 우리가 보안 문자 공급자가 보안 문자가 실제로 클라이언트에로드되고 있다고 생각하도록 속이는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="a4689aa17ba52c30664d1cbd2d626c02440c8871" translate="yes" xml:space="preserve">
          <source>CaptchaHarvester</source>
          <target state="translated">CaptchaHarvester</target>
        </trans-unit>
        <trans-unit id="06eb2f0298434a2205253ad0bafc1893668bddb9" translate="yes" xml:space="preserve">
          <source>CloudProxy</source>
          <target state="translated">CloudProxy</target>
        </trans-unit>
        <trans-unit id="8ac4fa30873706b40c1ce1934cd117d2f81c0310" translate="yes" xml:space="preserve">
          <source>Configuring The Browser</source>
          <target state="translated">브라우저 구성</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">크레딧</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">기술</target>
        </trans-unit>
        <trans-unit id="bccc14ee7da1d20ff06b9ff2497087e8c7d9f28b" translate="yes" xml:space="preserve">
          <source>Discord</source>
          <target state="translated">불일치</target>
        </trans-unit>
        <trans-unit id="6d658e3b4a9ba01dcd5e064f450e95c837f53375" translate="yes" xml:space="preserve">
          <source>For help contact @&lt;code&gt;MacHacker#7322&lt;/code&gt; (Discord)</source>
          <target state="translated">도움이 필요하면 @ &lt;code&gt;MacHacker#7322&lt;/code&gt; (Discord)에 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="ab77231edaee5d3518142f58bef4702fb011d5e1" translate="yes" xml:space="preserve">
          <source>Has CaptchaHarvester saved you money on your project? Consider buying me a coffee for the countless hours I have
spent making your job easier?</source>
          <target state="translated">CaptchaHarvester가 프로젝트 비용을 절감 했습니까? 내가 당신의 일을 더 쉽게 만드는 데 소비 한 수많은 시간 동안 나에게 커피를 사 줄까?</target>
        </trans-unit>
        <trans-unit id="7ca4b5181c2ec33ed753d9712d48363506b456b9" translate="yes" xml:space="preserve">
          <source>How do I use the tokens of the captcha's I solve?</source>
          <target state="translated">내가 해결 한 보안 문자의 토큰을 어떻게 사용하나요?</target>
        </trans-unit>
        <trans-unit id="b813f3dea95a7e7e0342b05d8aae2dd54fbad3cc" translate="yes" xml:space="preserve">
          <source>How do we do this the EASY way?</source>
          <target state="translated">이것을 어떻게 쉽게 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="c95593a768dbcb253cab3337146cd9943707c5bc" translate="yes" xml:space="preserve">
          <source>How do we do this the HARD way?</source>
          <target state="translated">어떻게 이것을 어려운 방식으로 수행합니까?</target>
        </trans-unit>
        <trans-unit id="b8deb3047fa46ff3e7b14411af407cf86ce28159" translate="yes" xml:space="preserve">
          <source>If for some reason you don't want a browser launched on the start of the harvester or you want to configure it
youself, all you have to do is pass the &lt;code&gt;-b/--no-browser&lt;/code&gt; flag.</source>
          <target state="translated">어떤 이유로 하베스터를 시작할 때 브라우저가 실행되는 것을 원하지 않거나 직접 구성하려면 &lt;code&gt;-b/--no-browser&lt;/code&gt; 플래그를 전달하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="09a3cac761c82f30f0a0e0f659520f86b04cad85" translate="yes" xml:space="preserve">
          <source>If you are running MacOS/Windows and have the &lt;a href=&quot;https://brave.com/&quot;&gt;Brave Browser&lt;/a&gt;
or &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt;, all you have to do is pass
the &lt;code&gt;-b/--browser&lt;/code&gt; flag set to either &lt;code&gt;chrome&lt;/code&gt; or &lt;code&gt;brave&lt;/code&gt;. This will automatically open
a new instance of Brave/Chrome under a temporary profile with and map the &lt;code&gt;domain&lt;/code&gt; to the
local server.</source>
          <target state="translated">MacOS / Windows를 실행 중이고 &lt;a href=&quot;https://brave.com/&quot;&gt;Brave Browser&lt;/a&gt; 또는 &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome을&lt;/a&gt; 사용하는 경우 &lt;code&gt;chrome&lt;/code&gt; 또는 &lt;code&gt;brave&lt;/code&gt; 로 설정된 &lt;code&gt;-b/--browser&lt;/code&gt; 플래그를 전달하기 만하면 됩니다. 그러면 임시 프로필에서 Brave / Chrome의 새 인스턴스가 자동으로 열리고 &lt;code&gt;domain&lt;/code&gt; 이 로컬 서버에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="c618109fe21840a7a57a061dbca478b6494ebf8b" translate="yes" xml:space="preserve">
          <source>If you are using this project with PyArmor and or PyInstaller then fear not, it has
already been configured to work seamlessly when packages into an &lt;code&gt;.exe&lt;/code&gt; file. All you
have to do is add the following to your &lt;code&gt;.spec&lt;/code&gt; file's &lt;code&gt;Anaysis&lt;/code&gt; call.</source>
          <target state="translated">이 프로젝트를 PyArmor 및 / 또는 PyInstaller와 함께 사용하는 경우 걱정하지 마십시오. 이미 &lt;code&gt;.exe&lt;/code&gt; 파일 로 패키지 할 때 원활하게 작동하도록 구성되어 있습니다. &lt;code&gt;.spec&lt;/code&gt; 파일의 &lt;code&gt;Anaysis&lt;/code&gt; 호출에 다음을 추가하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="23a20d8519c12cb90bd2a8763406e7fdb60f877f" translate="yes" xml:space="preserve">
          <source>If you need help feel free to swing by my &lt;a href=&quot;https://discord.gg/AAQrkhR&quot;&gt;Discord&lt;/a&gt;!</source>
          <target state="translated">도움이 필요하면 내 &lt;a href=&quot;https://discord.gg/AAQrkhR&quot;&gt;Discord&lt;/a&gt; 를 이용해 주시기 바랍니다 !</target>
        </trans-unit>
        <trans-unit id="0213a1bc3f6dd8dc64018cdb81c30db31844aafa" translate="yes" xml:space="preserve">
          <source>If you want to access the tokens with a Python script, you are in luck! I've included a handy
wrapper for the API which makes things really simple. Just take a look at this example:</source>
          <target state="translated">Python 스크립트로 토큰에 액세스하려면 운이 좋습니다! 정말 간단한 API 용 래퍼를 포함 시켰습니다. 이 예를 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="c3e5bfa09cabd6f79eaa2985ca0febfc9f8f4a4e" translate="yes" xml:space="preserve">
          <source>If you would like to come up with an automated solution for your OS, I am open to PR requests.</source>
          <target state="translated">OS에 대한 자동화 솔루션을 찾고 싶다면 PR 요청에 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd8af2911c37dc7bef6f5dd9a71c47d218a493bc" translate="yes" xml:space="preserve">
          <source>If your lanuage of choice isn't Python, then you can grab tokens by making calls to the API endpoints
that the harvester's server has avalible.</source>
          <target state="translated">선택한 lanuage가 Python이 아닌 경우 하베스터 서버가 사용할 수있는 API 엔드 포인트를 호출하여 토큰을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fbcd400f1cda7a80ec7c0cb7d0f1841ccb95692" translate="yes" xml:space="preserve">
          <source>In most cases you'll probably want to use the API to fetch the tokens.</source>
          <target state="translated">대부분의 경우 API를 사용하여 토큰을 가져오고 싶을 것입니다.</target>
        </trans-unit>
        <trans-unit id="c45c12d89161a29b3c2ee6057ae5a161cc5f9774" translate="yes" xml:space="preserve">
          <source>Inspred by &lt;a href=&quot;https://github.com/Cosmo3904/Recaptcha-Harvester-V2&quot;&gt;Cosmo3904/Recaptcha-Harvester-V2&lt;/a&gt;.</source>
          <target state="translated">Cosmo3904 &lt;a href=&quot;https://github.com/Cosmo3904/Recaptcha-Harvester-V2&quot;&gt;/ Recaptcha-Harvester-V2에&lt;/a&gt; 의해 영향을 받았습니다 .</target>
        </trans-unit>
        <trans-unit id="e2f529c6cbca4fb6f216ccdee95e9b749d5d9f47" translate="yes" xml:space="preserve">
          <source>List[String]</source>
          <target state="translated">목록 [문자열]</target>
        </trans-unit>
        <trans-unit id="3ff97be3cff763af433c29eeb40a4587c764692c" translate="yes" xml:space="preserve">
          <source>Luckily, the easy way is pretty easy. You literally have to do nothing! However, this only works on Mac/Windows (Linux
support coming soon). Additionally, you can pass the path to a &lt;strong&gt;Chromium&lt;/strong&gt; browser binary/&lt;code&gt;.exe&lt;/code&gt; or a browser
that can be found in your $PATH envrionment variable through the &lt;code&gt;-b/--browser&lt;/code&gt;.</source>
          <target state="translated">운 좋게도 쉬운 방법은 매우 쉽습니다. 말 그대로 아무것도하지 않아도됩니다! 그러나 이것은 Mac / Windows에서만 작동합니다 (Linux 지원 예정). 또한 &lt;code&gt;-b/--browser&lt;/code&gt; -browser를 통해 &lt;strong&gt;Chromium&lt;/strong&gt; 브라우저 바이너리 / &lt;code&gt;.exe&lt;/code&gt; 또는 $ PATH 환경 변수에서 찾을 수있는 브라우저 의 경로를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0eeecd8242dfe3e4e5e38f7064e843dbdd7631bc" translate="yes" xml:space="preserve">
          <source>Made with ❤️ by &lt;a href=&quot;https://github.com/NoahCardoza&quot;&gt;@NoahCardoza&lt;/a&gt;</source>
          <target state="translated">@NoahCardoza의 ❤️로 &lt;a href=&quot;https://github.com/NoahCardoza&quot;&gt;제작&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5de29fb047e31888189bff84addf617e55cd52ba" translate="yes" xml:space="preserve">
          <source>Mainly through the use on the &lt;code&gt;--host-rules&lt;/code&gt; Chromium flag. Here's an example:</source>
          <target state="translated">주로 &lt;code&gt;--host-rules&lt;/code&gt; Chromium 플래그를 사용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a8000f6d9a3db4e6f40fa058d82f7cc54b06438e" translate="yes" xml:space="preserve">
          <source>Programtically</source>
          <target state="translated">프로그래밍 방식</target>
        </trans-unit>
        <trans-unit id="4f4d8bd58af9bc33d0a0890bec69a139c1ea36cb" translate="yes" xml:space="preserve">
          <source>PyArmor/PyInstaller</source>
          <target state="translated">PyArmor / PyInstaller</target>
        </trans-unit>
        <trans-unit id="643619899deccf1c9a941c05486245c8e5ade051" translate="yes" xml:space="preserve">
          <source>PyPi</source>
          <target state="translated">PyPi</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">파이썬</target>
        </trans-unit>
        <trans-unit id="c703dec9d9e14de8d799db54bb1883c73ea5695a" translate="yes" xml:space="preserve">
          <source>ReCaptcha: V2 vs. V3</source>
          <target state="translated">ReCaptcha : V2 대 V3</target>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">노선</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="677d54e4a2ad63dc543678fef08950fe8b67884b" translate="yes" xml:space="preserve">
          <source>Solve captchas yourself without having to pay for services like 2captcha for use in automated projects.</source>
          <target state="translated">자동화 된 프로젝트에서 사용하기 위해 2captcha와 같은 서비스 비용을 지불하지 않고도 직접 보안 문자를 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="c0994f61b9aac7e86fcad8a53357959fae9351a8" translate="yes" xml:space="preserve">
          <source>Solveing V2 Captchas with &lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;Buster&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;버스터로&lt;/a&gt; V2 캡차 해결하기</target>
        </trans-unit>
        <trans-unit id="2ff25e18559a1f42918c3d5265e7566c23680cc2" translate="yes" xml:space="preserve">
          <source>Sometimes there will be updates I'm working on that won't be pushed to the master branch/PyPi
because I haven't had time to test them. Sometimes these patches will fix problems you experience
in the stable branch, but if things get buggy don't be surprised.</source>
          <target state="translated">때로는 테스트 할 시간이 없었기 때문에 마스터 브랜치 / PyPi로 푸시되지 않는 업데이트가있을 것입니다. 때때로 이러한 패치는 stable 브랜치에서 경험하는 문제를 해결하지만 버그가 발생하더라도 놀라지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">끈</target>
        </trans-unit>
        <trans-unit id="24beb9985deee2175892e1aaa0b147a522b0e87b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dev&lt;/code&gt; Branch</source>
          <target state="translated">&lt;code&gt;dev&lt;/code&gt; 에 지점</target>
        </trans-unit>
        <trans-unit id="ae890c4e48dc04b8723ea4931e1bf514ba4d0c78" translate="yes" xml:space="preserve">
          <source>The main advantage of setting up the harvester programtically is you can
set multiple interccepter hooks to solve captchas on multiple domains.</source>
          <target state="translated">프로그래밍 방식으로 수확기를 설정하는 주요 이점은 여러 도메인에서 캡차를 해결하기 위해 여러 인터셉터 후크를 설정할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f29fd41939bbc6de937ba90984e9b7c0f45b87b4" translate="yes" xml:space="preserve">
          <source>There are a few other arguments the harvester uses to make things easier and simpler which can be found in
&lt;a href=&quot;https://github.com/NoahCardoza/CaptchaHarvester/blob/master/harvester/browser.py&quot;&gt;/harvester/browser.py&lt;/a&gt;.</source>
          <target state="translated">수확기가 일을 더 쉽고 간단하게 만들기 위해 사용하는 몇 가지 다른 인수가 있습니다 . &lt;a href=&quot;https://github.com/NoahCardoza/CaptchaHarvester/blob/master/harvester/browser.py&quot;&gt;/harvester/browser.py&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a13bca08b02a89f72e982e5a8f6c49a659ef53d" translate="yes" xml:space="preserve">
          <source>This is your most useful endpoint. When called it will pop a token from the queue and return it in plain text. If no tokens are available it will return a &lt;a href=&quot;https://httpstatuses.com/418&quot;&gt;418 status code&lt;/a&gt;.</source>
          <target state="translated">이것이 가장 유용한 엔드 포인트입니다. 호출되면 대기열에서 토큰을 꺼내 일반 텍스트로 반환합니다. 사용할 수있는 토큰이 없으면 &lt;a href=&quot;https://httpstatuses.com/418&quot;&gt;418 상태 코드를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e92ababd0f077baee969e8d7c335b3205114a2b1" translate="yes" xml:space="preserve">
          <source>This project allows you to solve Google's V2 and V3 ReCaptchas as well as
hCaptchas. However, since Google's V3 ReCaptchas are based on a rating
system of your browser and browsing habits, it's slightly less reliable.</source>
          <target state="translated">이 프로젝트를 통해 Google의 V2 및 V3 ReCaptchas와 hCaptchas를 해결할 수 있습니다. 그러나 Google의 V3 ReCaptchas는 브라우저의 등급 시스템과 브라우징 습관을 기반으로하므로 안정성이 약간 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="b7bf46dc58cd014abfbaff664cd514e1b262bd52" translate="yes" xml:space="preserve">
          <source>This project is also natively supported by a newer project of mine which allows you to bypass
Cloudflare's Bot Detection. It's super simlpe to setup, just follow the instructions &lt;a href=&quot;https://github.com/NoahCardoza/CloudProxy#harvester&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 프로젝트는 Cloudflare의 Bot Detection을 우회 할 수있는 새로운 프로젝트에서도 기본적으로 지원됩니다. 설정이 매우 간단합니다 . &lt;a href=&quot;https://github.com/NoahCardoza/CloudProxy#harvester&quot;&gt;여기&lt;/a&gt; 의 지침을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="be1a14e95fb133112162867412861c509b521b40" translate="yes" xml:space="preserve">
          <source>This will return a list of all the avalible tokens in the queue. It is recomended that you never use any tokens you see in this list because then &lt;code&gt;/token&lt;/code&gt; may return an already used token.</source>
          <target state="translated">그러면 대기열에있는 모든 사용 가능한 토큰 목록이 반환됩니다. &lt;code&gt;/token&lt;/code&gt; 이 이미 사용 된 토큰을 반환 할 수 있으므로이 목록에 표시된 토큰을 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a9b8787550aa118283c2f42ab25ddd4a566faa76" translate="yes" xml:space="preserve">
          <source>This will setup an HTTP server at &lt;code&gt;https://127.0.0.1:5000&lt;/code&gt; by default.</source>
          <target state="translated">기본적으로 &lt;code&gt;https://127.0.0.1:5000&lt;/code&gt; 에 HTTP 서버가 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">유형</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="188e999acded8422599aaefff54e44481c3e5600" translate="yes" xml:space="preserve">
          <source>When accessing the server to collect the tokens you have to do it the right way and you can't connect to it
just like any old server. You configure your browser to think that the server is actually the site we want
to collect captcha tokens for</source>
          <target state="translated">토큰을 수집하기 위해 서버에 액세스 할 때 올바른 방법으로 수행해야하며 기존 서버처럼 연결할 수 없습니다. 서버가 실제로 캡차 토큰을 수집하려는 사이트라고 생각하도록 브라우저를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="921cf36ac899ac816dd480faa8b1be9a7c9dbfbe" translate="yes" xml:space="preserve">
          <source>When solving Google's v3 captchas, you should login to a Google Account first. The v3 captcha's
work of a raiting system of your browsing habits. They are a little finicky compared to their v2
predecessors. If the tokens stop working, you should start using a different Google Account or
wait a little bit between reloading the captcha harvester page.</source>
          <target state="translated">Google의 v3 보안 문자 문제를 해결할 때 먼저 Google 계정에 로그인해야합니다. 당신의 브라우징 습관에 대한 평가 시스템의 v3 보안 문자 작업. v2 이전 버전에 비해 약간 까다 롭습니다. 토큰이 작동을 멈 추면 다른 Google 계정을 사용하거나 보안 문자 수확기 페이지를 새로 고침하는 사이에 잠시 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="8eea4e2d81d87dc9dc0e4d1f9ef3e36b86abf6be" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;-b&lt;/code&gt;, a browser instance will be lanuched that's totally disconnected from your main Profile
(unless you pass &lt;code&gt;-r&lt;/code&gt;, which &lt;em&gt;MIGHT&lt;/em&gt; be buggy on Windows).</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; 를 사용할 때 브라우저 인스턴스는 기본 프로필에서 완전히 연결이 끊어진 상태가됩니다 ( Windows에서 버그 가 &lt;em&gt;있을&lt;/em&gt; 수있는 &lt;code&gt;-r&lt;/code&gt; 을 전달하지 않는 한 ).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00761b5837e6754cd93df29269a9e528dbccb587" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; is the domain the harvester was lanuched on. We need this because the harvester supports intercepting multiple domains at a time.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; 은 수확기가 lanuched 된 도메인입니다. 수확기가 한 번에 여러 도메인 차단을 지원하기 때문에 이것이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f91e7f3452ac124fc13d7719c8608082343af961" translate="yes" xml:space="preserve">
          <source>You can check out &lt;a href=&quot;example.py&quot;&gt;example.py&lt;/a&gt; to see how to progamatically
start the server and access the tokens by integrating the harvester with
your existsing (or new) code.</source>
          <target state="translated">&lt;a href=&quot;example.py&quot;&gt;example.py&lt;/a&gt; 를 확인하여 기존 (또는 새로운) 코드와 수확기를 통합하여 서버를 progamatically 시작하고 토큰에 액세스하는 방법을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04fb40e31c0d6d7fc8a915772bd89155c8fb58e2" translate="yes" xml:space="preserve">
          <source>You might find it useful to use &lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;Buster&lt;/a&gt; when solving V2 Captchas.
You can clone and build the extension for chrome, and then pass the path of the built extension
to harvester with the &lt;code&gt;-e/--load-extension&lt;/code&gt; flag.</source>
          <target state="translated">V2 Captchas를 해결할 때 &lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;Buster&lt;/a&gt; 를 사용하는 것이 유용 할 수 있습니다 . 크롬 용 확장을 복제하고 빌드 한 다음 &lt;code&gt;-e/--load-extension&lt;/code&gt; 플래그 를 사용하여 빌드 된 확장의 경로를 수확기에 전달할 수 있습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
