<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/alembic/">
    <body>
      <group id="alembic">
        <trans-unit id="8458b53b78a2e5044af11eb1a958e7075036f4e6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;auto generation&amp;rdquo; of migrations. While real world migrations are far more
complex than what can be automatically determined, Alembic can still
eliminate the initial grunt work in generating new migration directives
from an altered schema.  The</source>
          <target state="translated">마이그레이션의 &quot;자동 생성&quot;. 실제 마이그레이션은 자동으로 결정될 수있는 것보다 훨씬 복잡하지만 Alembic은 변경된 스키마에서 새로운 마이그레이션 지시문을 생성하는 초기의 번거로운 작업을 제거 할 수 있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="32c15aa6bf1cdf50f11797596e4399ff85d05265" translate="yes" xml:space="preserve">
          <source>--autogenerate</source>
          <target state="translated">-자동 생성</target>
        </trans-unit>
        <trans-unit id="79be64fbfcbac730126260737683a2ace8223d9b" translate="yes" xml:space="preserve">
          <source>A database migration tool for SQLAlchemy.</source>
          <target state="translated">SQLAlchemy 용 데이터베이스 마이그레이션 도구입니다.</target>
        </trans-unit>
        <trans-unit id="050cab9398e18c793c185ec23434d1e82433a62e" translate="yes" xml:space="preserve">
          <source>Above all, SQLAlchemy places great emphasis on polite, thoughtful, and
constructive communication between users and developers.
Please see our current Code of Conduct at
&lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">무엇보다도 SQLAlchemy는 사용자와 개발자 간의 정중하고 사려 깊고 건설적인 의사 소통에 중점을 둡니다. 에서 행동의 현재 코드를 참조하십시오 &lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;행동 강령&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed93ccfb2e93cce318ad215757760a5eb6a2215a" translate="yes" xml:space="preserve">
          <source>Alembic is a database migrations tool written by the author
of &lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt;.  A migrations tool
offers the following functionality:</source>
          <target state="translated">Alembic은 &lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt; 작성자가 작성한 데이터베이스 마이그레이션 도구입니다 . 마이그레이션 도구는 다음 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c523d8646d33a476249705c180bd0d84e03f3b92" translate="yes" xml:space="preserve">
          <source>Alembic is distributed under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">Alembic은 &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT 라이선스에&lt;/a&gt; 따라 배포됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6effbd95a98cf3f8922f051b4da82f21479ada3" translate="yes" xml:space="preserve">
          <source>Alembic is part of the &lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy Project&lt;/a&gt; and
adheres to the same standards and conventions as the core project.</source>
          <target state="translated">Alembic은 &lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy 프로젝트의&lt;/a&gt; 일부이며 핵심 프로젝트와 동일한 표준 및 규칙을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="2caf180e7eeeb94982ba97c4515abb7904321377" translate="yes" xml:space="preserve">
          <source>Allows the scripts to execute in some sequential manner.</source>
          <target state="translated">스크립트를 순차적으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b32d49f1401d4f9f889e5d35222bf1ba9ea7be2e" translate="yes" xml:space="preserve">
          <source>At long last, bring SQLite and its inablity to ALTER things into the fold,
but in such a way that SQLite&amp;rsquo;s very special workflow needs are accommodated
in an explicit way that makes the most of a bad situation, through the
concept of a &amp;ldquo;batch&amp;rdquo; migration, where multiple changes to a table can
be batched together to form a series of instructions for a single, subsequent
&amp;ldquo;move-and-copy&amp;rdquo; workflow.   You can even use &amp;ldquo;move-and-copy&amp;rdquo; workflow for
other databases, if you want to recreate a table in the background
on a busy system.</source>
          <target state="translated">마침내 SQLite와 그 무능함을 ALTER 작업에 적용하되, SQLite의 매우 특별한 워크 플로 요구 사항이 &quot;배치&quot;개념을 통해 나쁜 상황을 최대한 활용하는 명시적인 방식으로 수용되도록합니다. 테이블에 대한 여러 변경 사항을 일괄 처리하여 단일 후속 &quot;이동 및 복사&quot;워크 플로에 대한 일련의 지침을 구성 할 수 있습니다. 바쁜 시스템에서 백그라운드로 테이블을 다시 생성하려는 경우 다른 데이터베이스에 대해 &quot;이동 및 복사&quot;워크 플로를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="624f3b913fa937a736c0cd8d54bd5fadc490a2b2" translate="yes" xml:space="preserve">
          <source>Can emit ALTER statements to a database in order to change
the structure of tables and other constructs</source>
          <target state="translated">테이블 및 기타 구성의 구조를 변경하기 위해 데이터베이스에 ALTER 문을 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">행동 강령</target>
        </trans-unit>
        <trans-unit id="77cb3ee1d47bde3bc338c9fbcf0e4be86b1428b5" translate="yes" xml:space="preserve">
          <source>Development / Bug reporting / Pull requests</source>
          <target state="translated">개발 / 버그보고 / 풀 요청</target>
        </trans-unit>
        <trans-unit id="567a6d33bf116fe2ed15d94b82c96f99b93c83d7" translate="yes" xml:space="preserve">
          <source>Documentation and status of Alembic is at &lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/&lt;/a&gt;</source>
          <target state="translated">Alembic의 문서 및 상태는 &lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/에 있습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09eb8faa5de32a52f2a0ce8468cf52b05cd4eb3a" translate="yes" xml:space="preserve">
          <source>Full support for migrations generated as SQL scripts.   Those of us who
work in corporate environments know that direct access to DDL commands on a
production database is a rare privilege, and DBAs want textual SQL scripts.
Alembic&amp;rsquo;s usage model and commands are oriented towards being able to run a
series of migrations into a textual output file as easily as it runs them
directly to a database. Care must be taken in this mode to not invoke other
operations that rely upon in-memory SELECTs of rows - Alembic tries to
provide helper constructs like bulk_insert() to help with data-oriented
operations that are compatible with script-based DDL.</source>
          <target state="translated">SQL 스크립트로 생성 된 마이그레이션을 완벽하게 지원합니다. 기업 환경에서 일하는 사람들은 프로덕션 데이터베이스에서 DDL 명령에 직접 액세스하는 것은 드문 권한이며 DBA는 텍스트 SQL 스크립트를 원합니다. Alembic의 사용 모델 및 명령은 일련의 마이그레이션을 데이터베이스에서 직접 실행하는 것처럼 쉽게 텍스트 출력 파일로 실행할 수 있도록 지향합니다. 이 모드에서는 행의 메모리 내 SELECT에 의존하는 다른 작업을 호출하지 않도록주의해야합니다. Alembic은 스크립트 기반 DDL과 호환되는 데이터 지향 작업을 지원하기 위해 bulk_insert ()와 같은 도우미 구성을 제공하려고합니다.</target>
        </trans-unit>
        <trans-unit id="29352cce3621de5a7556c6dcdd7b05688c414885" translate="yes" xml:space="preserve">
          <source>Full support for transactional DDL.   The default scripts ensure that all
migrations occur within a transaction - for those databases which support
this (Postgresql, Microsoft SQL Server), migrations can be tested with no
need to manually undo changes upon failure.</source>
          <target state="translated">트랜잭션 DDL을 완벽하게 지원합니다. 기본 스크립트는 트랜잭션 내에서 모든 마이그레이션이 발생하도록합니다.이를 지원하는 데이터베이스 (Postgresql, Microsoft SQL Server)의 경우 실패시 변경 사항을 수동으로 실행 취소 할 필요없이 마이그레이션을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="48ec0553f698534a6e66221e7887915615f78c49" translate="yes" xml:space="preserve">
          <source>Minimalist script construction.  Basic operations like renaming
tables/columns, adding/removing columns, changing column attributes can be
performed through one line commands like alter_column(), rename_table(),
add_constraint(). There is no need to recreate full SQLAlchemy Table
structures for simple operations like these - the functions themselves
generate minimalist schema structures behind the scenes to achieve the given
DDL sequence.</source>
          <target state="translated">미니멀리스트 스크립트 구성. 테이블 / 열 이름 바꾸기, 열 추가 / 제거, 열 속성 변경과 같은 기본 작업은 alter_column (), rename_table (), add_constraint ()와 같은 한 줄 명령을 통해 수행 할 수 있습니다. 이와 같은 간단한 작업을 위해 전체 SQLAlchemy 테이블 구조를 다시 만들 필요가 없습니다. 함수 자체가 주어진 DDL 시퀀스를 달성하기 위해이면에서 최소한의 스키마 구조를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3b2e11fb0d5b4303d76fef2652a26da78071e8f3" translate="yes" xml:space="preserve">
          <source>Non-linear, dependency-graph versioning.   Scripts are given UUID
identifiers similarly to a DVCS, and the linkage of one script to the next
is achieved via human-editable markers within the scripts themselves.
The structure of a set of migration files is considered as a
directed-acyclic graph, meaning any migration file can be dependent
on any other arbitrary set of migration files, or none at
all.  Through this open-ended system, migration files can be organized
into branches, multiple roots, and mergepoints, without restriction.
Commands are provided to produce new branches, roots, and merges of
branches automatically.</source>
          <target state="translated">비선형 종속성 그래프 버전 관리. 스크립트에는 DVCS와 유사한 UUID 식별자가 제공되며 스크립트 자체 내에서 사람이 편집 할 수있는 마커를 통해 한 스크립트를 다음 스크립트로 연결합니다. 마이그레이션 파일 세트의 구조는 방향성 비순환 그래프로 간주됩니다. 즉, 마이그레이션 파일은 다른 임의의 마이그레이션 파일 세트에 종속되거나 전혀 종속되지 않을 수 있습니다. 이 개방형 시스템을 통해 마이그레이션 파일을 제한없이 분기, 다중 루트 및 병합 지점으로 구성 할 수 있습니다. 새 분기, 루트 및 분기 병합을 자동으로 생성하는 명령이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3317c96580f9a295a287a36960ca1ac3848d4c9e" translate="yes" xml:space="preserve">
          <source>Please refer to the
&lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemy Community Guide&lt;/a&gt; for
guidelines on coding and participating in this project.</source>
          <target state="translated">이 프로젝트의 코딩 및 참여에 대한 지침 은 &lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemy 커뮤니티 가이드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc1a4a029f51aa104cdb8b00e39f2958c1b5ae01" translate="yes" xml:space="preserve">
          <source>Provide a library of ALTER constructs that can be used by any SQLAlchemy
application. The DDL constructs build upon SQLAlchemy&amp;rsquo;s own DDLElement base
and can be used standalone by any application or script.</source>
          <target state="translated">모든 SQLAlchemy 애플리케이션에서 사용할 수있는 ALTER 구문 라이브러리를 제공합니다. DDL 구성은 SQLAlchemy의 자체 DDLElement 기반을 기반으로하며 모든 응용 프로그램 또는 스크립트에서 독립 실행 형으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88b302d41e9a6a1112e7143e9e6e8f37d1265fa0" translate="yes" xml:space="preserve">
          <source>Provides a system whereby &amp;ldquo;migration scripts&amp;rdquo; may be constructed;
each script indicates a particular series of steps that can &amp;ldquo;upgrade&amp;rdquo; a
target database to a new version, and optionally a series of steps that can
&amp;ldquo;downgrade&amp;rdquo; similarly, doing the same steps in reverse.</source>
          <target state="translated">&quot;마이그레이션 스크립트&quot;를 구성 할 수있는 시스템을 제공합니다. 각 스크립트는 대상 데이터베이스를 새 버전으로 &quot;업그레이드&quot;할 수있는 특정 일련의 단계를 나타내며 선택적으로 동일한 단계를 반대로 수행하여 유사하게 &quot;다운 그레이드&quot;할 수있는 일련의 단계를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="af3ce9a108e869672fca95e25ffe5a0e7aa5cb63" translate="yes" xml:space="preserve">
          <source>The SQLAlchemy Project</source>
          <target state="translated">SQLAlchemy 프로젝트</target>
        </trans-unit>
        <trans-unit id="fea6abb36b5b955e04e2da98b4c5a62bdbcd8831" translate="yes" xml:space="preserve">
          <source>The goals of Alembic are:</source>
          <target state="translated">Alembic의 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa0b572ab1e556153ce0327b9b36c2ed88dd0e24" translate="yes" xml:space="preserve">
          <source>Very open ended and transparent configuration and operation.   A new
Alembic environment is generated from a set of templates which is selected
among a set of options when setup first occurs. The templates then deposit a
series of scripts that define fully how database connectivity is established
and how migration scripts are invoked; the migration scripts themselves are
generated from a template within that series of scripts. The scripts can
then be further customized to define exactly how databases will be
interacted with and what structure new migration files should take.</source>
          <target state="translated">매우 개방적이고 투명한 구성 및 작동. 새로운 Alembic 환경은 처음 설정할 때 옵션 세트 중에서 선택된 템플릿 세트에서 생성됩니다. 그런 다음 템플릿은 데이터베이스 연결이 설정되는 방법과 마이그레이션 스크립트가 호출되는 방법을 완전히 정의하는 일련의 스크립트를 저장합니다. 마이그레이션 스크립트 자체는 해당 스크립트 시리즈 내의 템플릿에서 생성됩니다. 그런 다음 스크립트를 추가로 사용자 정의하여 데이터베이스가 상호 작용하는 방법과 새 마이그레이션 파일이 취해야하는 구조를 정확하게 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac2929a680f8164a191f94e8157db17de75f969f" translate="yes" xml:space="preserve">
          <source>feature will inspect the
current status of a database using SQLAlchemy&amp;rsquo;s schema inspection
capabilities, compare it to the current state of the database model as
specified in Python, and generate a series of &amp;ldquo;candidate&amp;rdquo; migrations,
rendering them into a new migration script as Python directives. The
developer then edits the new file, adding additional directives and data
migrations as needed, to produce a finished migration. Table and column
level changes can be detected, with constraints and indexes to follow as
well.</source>
          <target state="translated">기능은 SQLAlchemy의 스키마 검사 기능을 사용하여 데이터베이스의 현재 상태를 검사하고, Python에 지정된 데이터베이스 모델의 현재 상태와 비교하고, 일련의 &quot;후보&quot;마이그레이션을 생성하여 Python 지시문으로 새 마이그레이션 스크립트로 렌더링합니다. . 그런 다음 개발자는 새 파일을 편집하고 필요에 따라 추가 지시문과 데이터 마이그레이션을 추가하여 완료된 마이그레이션을 생성합니다. 제약 조건 및 인덱스도 따라야하는 테이블 및 열 수준 변경을 감지 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
