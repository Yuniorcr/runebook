<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/audioconverter/">
    <body>
      <group id="audioconverter">
        <trans-unit id="92939daab980ec4da251d31641c4a7cc9b0ba795" translate="yes" xml:space="preserve">
          <source>.aiff</source>
          <target state="translated">.aiff</target>
        </trans-unit>
        <trans-unit id="efc425468bd02a1829732639503062d37e09642a" translate="yes" xml:space="preserve">
          <source>.flac</source>
          <target state="translated">.flac</target>
        </trans-unit>
        <trans-unit id="a1680124621c5adda0066d259ad41ce6b5a2d08a" translate="yes" xml:space="preserve">
          <source>.m4a</source>
          <target state="translated">.m4a</target>
        </trans-unit>
        <trans-unit id="12beb598feedaf30399d20e07f7fbfd2273efcad" translate="yes" xml:space="preserve">
          <source>.mp3</source>
          <target state="translated">.mp3</target>
        </trans-unit>
        <trans-unit id="2bf5d215f67675901a33dbf902e7fc75e8e74861" translate="yes" xml:space="preserve">
          <source>.mp4</source>
          <target state="translated">.mp4</target>
        </trans-unit>
        <trans-unit id="119f601d625e6d42dd015e36d0fd13e76a0d0a94" translate="yes" xml:space="preserve">
          <source>A simple CLI to convert a directory of audio files from  one format
to another. This CLI sits ontop of &lt;code&gt;pydub&lt;/code&gt; and &lt;code&gt;ffmpeg&lt;/code&gt;</source>
          <target state="translated">오디오 파일의 디렉토리를 한 형식에서 다른 형식으로 변환하는 간단한 CLI. 이 CLI는 &lt;code&gt;pydub&lt;/code&gt; 및 &lt;code&gt;ffmpeg&lt;/code&gt; 위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="85876b4b4b4949735b592748a57c87a3bcf9e123" translate="yes" xml:space="preserve">
          <source>Accepted Formats</source>
          <target state="translated">허용되는 형식</target>
        </trans-unit>
        <trans-unit id="d8931cf16ae5d4c8c4f7fdd1a3b9066e590ba0dd" translate="yes" xml:space="preserve">
          <source>Audio Converter CLI</source>
          <target state="translated">오디오 컨버터 CLI</target>
        </trans-unit>
        <trans-unit id="fa3aa15326e2be84191893b4292d8bdee8f56628" translate="yes" xml:space="preserve">
          <source>AudioConverter</source>
          <target state="translated">AudioConverter</target>
        </trans-unit>
        <trans-unit id="789aca07cb59366dcdfc7805d65bb9bd1ddac0a6" translate="yes" xml:space="preserve">
          <source>Due to not being super savvy with audio formats, I hard coded the extensions
that are searched for in the &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; and acceptable &lt;code&gt;TARGET_FORMAT&lt;/code&gt;.
Here is a list of formats I thought were popular:</source>
          <target state="translated">오디오 형식에 능숙하지 않기 때문에 &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; 및 허용되는 &lt;code&gt;TARGET_FORMAT&lt;/code&gt; 에서 검색되는 확장 프로그램을 하드 코딩했습니다 . 다음은 내가 인기가 있다고 생각한 형식 목록입니다.</target>
        </trans-unit>
        <trans-unit id="17a348350e5741060773463325d7810ac70c1916" translate="yes" xml:space="preserve">
          <source>Go follow the &lt;code&gt;pydub&lt;/code&gt;&lt;a href=&quot;https://github.com/jiaaro/pydub#getting-ffmpeg-set-up&quot;&gt;tutorial&lt;/a&gt;
on how to set up &lt;code&gt;ffmpeg&lt;/code&gt; on the various platforms.</source>
          <target state="translated">다양한 플랫폼에서 &lt;code&gt;ffmpeg&lt;/code&gt; 를 설정하는 방법에 대한 &lt;code&gt;pydub&lt;/code&gt; &lt;a href=&quot;https://github.com/jiaaro/pydub#getting-ffmpeg-set-up&quot;&gt;자습서&lt;/a&gt; 를 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="9ae0cc663fdc94d4da5324ac97f587c697267d4a" translate="yes" xml:space="preserve">
          <source>I have some old music in a lossless format. Now that I am constantly
jumping between computers, I wanted it to be converted in
a more universal format such as &lt;code&gt;mp3&lt;/code&gt; so that I can play it with
the simplest of players. I also wanted to avoid having
to stream my music on cloud platforms. Upon a cursory and naive scan
on the web, I found that existing scripts are defunct (again cursory)
or was not as simple as I would like it to be. I did not want to download
a GUI for a one time use or upload a directory of music online to have it
be converted on some server and download it again either. Instead, I wrote
this quick CLI to do it for me.</source>
          <target state="translated">무손실 형식의 오래된 음악이 있습니다. 지금은 계속해서 컴퓨터 사이를 이동하고 있기 때문에 가장 단순한 플레이어로 재생할 수 있도록 &lt;code&gt;mp3&lt;/code&gt; 와 같은보다 보편적 인 형식으로 변환하고 싶었습니다 . 또한 클라우드 플랫폼에서 음악을 스트리밍하지 않아도되고 싶었습니다. 웹에서 피상적이고 순진한 스캔 결과 기존 스크립트가 소멸되었거나 (다시 피상적 임) 내가 원하는만큼 단순하지 않다는 것을 발견했습니다. 한 번 사용하기 위해 GUI를 다운로드하거나 온라인으로 음악 디렉토리를 업로드하여 일부 서버에서 변환하고 다시 다운로드하고 싶지 않았습니다. 대신이 빠른 CLI를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="e6764ce487d3644f2ba99cc1fdd6b3cc3c507c9a" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;ffmpeg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ffmpeg&lt;/code&gt; 설치</target>
        </trans-unit>
        <trans-unit id="0ee131360f441177e6dc4022daeae695138d96aa" translate="yes" xml:space="preserve">
          <source>Install CLI</source>
          <target state="translated">CLI 설치</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">자극</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="be703af06dd0bcd12685f8dc11d3f78f4a961a30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--verbose/-v&lt;/code&gt; flag must be provided before the &lt;code&gt;convert&lt;/code&gt; command. This
will enable debugging logs and allow you to monitor progress.</source>
          <target state="translated">&lt;code&gt;--verbose/-v&lt;/code&gt; 플래그는 전에 제공해야합니다 &lt;code&gt;convert&lt;/code&gt; 명령. 이렇게하면 디버깅 로그가 활성화되고 진행 상황을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d06ffde176be81f4cf66de856d135a385a1c54c9" translate="yes" xml:space="preserve">
          <source>This will recursively search the &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; for files with music
extensions. Each file found will then be converted to the &lt;code&gt;TARGET_FORMAT&lt;/code&gt; and
placed in the &lt;code&gt;OUTPUT_DIRECTORY&lt;/code&gt; with the same name but updated extension.</source>
          <target state="translated">이렇게하면 &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; 에서 음악 확장자가있는 파일을 재귀 적으로 검색합니다 . 그러면 발견 된 각 파일이 &lt;code&gt;TARGET_FORMAT&lt;/code&gt; 으로 변환되고 이름은 같지만 확장자가 업데이트 된 &lt;code&gt;OUTPUT_DIRECTORY&lt;/code&gt; 에 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
