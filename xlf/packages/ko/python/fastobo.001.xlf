<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fastobo/">
    <body>
      <group id="fastobo">
        <trans-unit id="a28b29eb9814bab7c4505b8fae558880dfdc6a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://crates.io/crates/fastobo&quot;&gt;&lt;code&gt;fastobo&lt;/code&gt;&lt;/a&gt; is a Rust library implementing a
reliable parser for the OBO file format 1.4. This extension module exports
idiomatic Python bindings that can be used to load, edit and serialize ontologies
in the OBO format.</source>
          <target state="translated">&lt;a href=&quot;https://crates.io/crates/fastobo&quot;&gt; &lt;code&gt;fastobo&lt;/code&gt; &lt;/a&gt; 는 OBO 파일 형식 1.4를위한 안정적인 파서를 구현하는 Rust 라이브러리입니다. 이 확장 모듈은 OBO 형식으로 온톨로지를로드, 편집 및 직렬화하는 데 사용할 수있는 관용적 Python 바인딩을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c67108b4899130192e447735f9cc67718abcb4c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Comments can be parsed but neither edited nor serialized, because of a limitation
with &lt;code&gt;pyo3&lt;/code&gt; (the library used to generate the Python bindings). They are supported
in the Rust version of &lt;code&gt;fastobo&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;주석은 구문 분석 할 수 있지만 &lt;code&gt;pyo3&lt;/code&gt; (Python 바인딩을 생성하는 데 사용되는 라이브러리) 의 제한으로 인해 편집하거나 직렬화 할 수 없습니다 . &lt;code&gt;fastobo&lt;/code&gt; 의 Rust 버전에서 지원됩니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06787372b14279b22b27fba4f0b9107786351f87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Faultless AST for Open Biomedical Ontologies in Python.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Python의 개방형 생물 의학 온톨로지에 대한 결함없는 AST.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d25bbaa185f3295168f1745bb9d85fff365f4b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Larralde M.&lt;/em&gt;&lt;strong&gt;Developing Python and Rust libraries to improve the ontology ecosystem&lt;/strong&gt;&lt;em&gt;[version 1; not peer reviewed].&lt;/em&gt; F1000Research 2019, 8(ISCB Comm J):1500 (poster)
(&lt;a href=&quot;https://doi.org/10.7490/f1000research.1117405.1&quot;&gt;https://doi.org/10.7490/f1000research.1117405.1&lt;/a&gt;)</source>
          <target state="translated">&lt;em&gt;Larralde M. &lt;/em&gt;&lt;strong&gt;온톨로지 생태계를 개선하기위한 Python 및 Rust 라이브러리 개발 &lt;/strong&gt;&lt;em&gt;[버전 1; 피어 리뷰되지 않음]. &lt;/em&gt;F1000Research 2019, 8 (ISCB Comm J) : 1500 (포스터) ( &lt;a href=&quot;https://doi.org/10.7490/f1000research.1117405.1&quot;&gt;https://doi.org/10.7490/f1000research.1117405.1&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">약</target>
        </trans-unit>
        <trans-unit id="5f3f33f339afa30c15c68ff94cf12e7fc1649d72" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;OboDoc&lt;/code&gt; instance can be instantiated from a path or from a binary file handle
using the &lt;code&gt;fastobo.load&lt;/code&gt; function, or from a string using the &lt;code&gt;fastobo.loads&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;OboDoc&lt;/code&gt; 의 인스턴스는 사용하여 경로 또는 이진 파일 핸들에서 인스턴스화 할 수 &lt;code&gt;fastobo.load&lt;/code&gt; 의 기능 또는 사용하여 문자열에서 &lt;code&gt;fastobo.loads&lt;/code&gt; 의 기능을.</target>
        </trans-unit>
        <trans-unit id="071bceb8fed05536e7cc15990039e62da7ff6d34" translate="yes" xml:space="preserve">
          <source>Faultless AST for Open Biomedical Ontologies in Python.</source>
          <target state="translated">Python의 개방형 생물 의학 온톨로지에 대한 결함없는 AST.</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">피드백</target>
        </trans-unit>
        <trans-unit id="1b628c54ff7dbe9c630bf96d0927fbef96175eb9" translate="yes" xml:space="preserve">
          <source>Found a bug ? Have an enhancement request ? Head over to the
&lt;a href=&quot;https://github.com/fastobo/fastobo-py/issues&quot;&gt;GitHub issue tracker&lt;/a&gt; of the project if
you need to report or ask something. If you are filling in on a bug, please include as much
information as you can about the issue, and try to recreate the same bug in a simple, easily
reproducible situation.</source>
          <target state="translated">버그를 찾았습니까? 개선 요청이 있습니까? 보고하거나 질문이 필요한 경우 프로젝트 의 &lt;a href=&quot;https://github.com/fastobo/fastobo-py/issues&quot;&gt;GitHub 문제 추적기&lt;/a&gt; 로 이동하십시오. 버그를 작성하는 경우 문제에 대해 가능한 한 많은 정보를 포함하고 간단하고 쉽게 재현 가능한 상황에서 동일한 버그를 재현 해보십시오.</target>
        </trans-unit>
        <trans-unit id="54a77a5e4fca8feff874a857fd0e124376ddefab" translate="yes" xml:space="preserve">
          <source>If your platform has no pre-built binaries available, you will need to have the Rust
compiler installed. See the &lt;a href=&quot;https://forge.rust-lang.org/other-installation-methods.html&quot;&gt;documentation on &lt;code&gt;rust-lang.org&lt;/code&gt;&lt;/a&gt;
to learn how to install Rust on your machine.</source>
          <target state="translated">플랫폼에 사용 가능한 사전 빌드 된 바이너리가없는 경우 Rust 컴파일러를 설치해야합니다. 컴퓨터에 Rust를 설치하는 방법을 배우 &lt;a href=&quot;https://forge.rust-lang.org/other-installation-methods.html&quot;&gt; &lt;code&gt;rust-lang.org&lt;/code&gt; &lt;/a&gt; 의 문서를 보세요 .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="d162766694f0aaae8278f024dfda6085b4f095bd" translate="yes" xml:space="preserve">
          <source>Installation is then supported through &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;pip&lt;/code&gt; 를 통해 설치가 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="28d8fb8b07754ea8285a0a4118c33603385ac771" translate="yes" xml:space="preserve">
          <source>Loading from a &lt;code&gt;gzip&lt;/code&gt; file is supported:</source>
          <target state="translated">&lt;code&gt;gzip&lt;/code&gt; 파일 에서로드 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="926b7e80d6969725dea9155577c85021934de048" translate="yes" xml:space="preserve">
          <source>This project was developed by &lt;a href=&quot;https://github.com/althonos&quot;&gt;Martin Larralde&lt;/a&gt;
as part of a Master's Degree internship in the &lt;a href=&quot;http://berkeleybop.org/&quot;&gt;BBOP team&lt;/a&gt; of the
&lt;a href=&quot;https://www.lbl.gov/&quot;&gt;Lawrence Berkeley National Laboratory&lt;/a&gt;, under the supervision of
&lt;a href=&quot;http://biosciences.lbl.gov/profiles/chris-mungall/&quot;&gt;Chris Mungall&lt;/a&gt;. Cite this project as:</source>
          <target state="translated">이 프로젝트에 의해 개발되었다 &lt;a href=&quot;https://github.com/althonos&quot;&gt;마틴 Larralde&lt;/a&gt; 에서 석사 학위 인턴쉽의 일환으로 &lt;a href=&quot;http://berkeleybop.org/&quot;&gt;BBOP 팀&lt;/a&gt; 의 &lt;a href=&quot;https://www.lbl.gov/&quot;&gt;로렌스 버클리 국립 연구소&lt;/a&gt; 의 감독하에, &lt;a href=&quot;http://biosciences.lbl.gov/profiles/chris-mungall/&quot;&gt;크리스 Mungall&lt;/a&gt; . 이 프로젝트를 다음과 같이 인용하십시오.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
