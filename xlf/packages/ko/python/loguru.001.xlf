<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/loguru/">
    <body>
      <group id="loguru">
        <trans-unit id="28a3e70dbf9dd27bc4726382b4cdb9cf6722a53b" translate="yes" xml:space="preserve">
          <source>%(asctime)s</source>
          <target state="translated">% (오름차순) 초</target>
        </trans-unit>
        <trans-unit id="0fb5a1cba394f5b00e9eb3fbcef5e4844731d15e" translate="yes" xml:space="preserve">
          <source>%(created)s</source>
          <target state="translated">% (생성됨)</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="b0048b81eb69dd4ac94a09765b4a4a5f078c6614" translate="yes" xml:space="preserve">
          <source>, logging functions are actually equivalent to</source>
          <target state="translated">, 로깅 기능은 실제로</target>
        </trans-unit>
        <trans-unit id="4b181613aa4b5adb002a398b426e51fac7c1c1ba" translate="yes" xml:space="preserve">
          <source>, naive datetimes without timezone information, not intuitive formatting, etc.</source>
          <target state="translated">, 시간대 정보가없는 순진한 날짜 시간, 직관적 인 서식 등이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b80703a859c2d0753226c2c12acd88ff0666f15e" translate="yes" xml:space="preserve">
          <source>10x faster than built-in logging</source>
          <target state="translated">내장 로깅보다 10 배 빠름</target>
        </trans-unit>
        <trans-unit id="a9ac58374e7fa4540548a521d3cc1bbd78f46307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#time&quot;&gt;fixes it&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#time&quot;&gt;수정&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d26a0f08fbaec425a950d480430c93bf8d34a27c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Loguru&lt;/strong&gt; is a library which aims to bring enjoyable logging in Python.</source>
          <target state="translated">&lt;strong&gt;Loguru&lt;/strong&gt; 는 Python에서 즐거운 로깅을 제공하는 것을 목표로하는 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="translated">API 참조</target>
        </trans-unit>
        <trans-unit id="db83078f15ca68bb1c3d4034f0963fccf75497de" translate="yes" xml:space="preserve">
          <source>All sinks added to the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;logger&lt;/tt&gt;&lt;/a&gt; are thread-safe by default. They are not multiprocess-safe, but you can</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;로거에&lt;/tt&gt;&lt;/a&gt; 추가 된 모든 싱크 는 기본적으로 스레드로부터 안전합니다. 다중 프로세스에 안전하지는 않지만</target>
        </trans-unit>
        <trans-unit id="23dcc2eb7842b79091d8a057fc011551ac849ee4" translate="yes" xml:space="preserve">
          <source>Also, this library is intended to make Python logging less painful by adding a bunch of useful functionalities that solve caveats of the standard loggers. Using logs in your application should be an automatism, &lt;strong&gt;Loguru&lt;/strong&gt; tries to make it both pleasant and powerful.</source>
          <target state="translated">또한이 라이브러리는 표준 로거의주의 사항을 해결하는 유용한 기능을 많이 추가하여 Python 로깅의 고통을 덜어주기위한 것입니다. 애플리케이션에서 로그를 사용하는 것은 자동이어야합니다. &lt;strong&gt;Loguru&lt;/strong&gt; 는이를 쾌적하고 강력하게 만들려고합니다.</target>
        </trans-unit>
        <trans-unit id="cf115947213d99da038b288b4a59178cb2c2e06e" translate="yes" xml:space="preserve">
          <source>Although logging impact on performances is in most cases negligible, a zero-cost logger would allow to use it anywhere without much concern. In an upcoming release, Loguru&amp;rsquo;s critical functions will be implemented in C for maximum speed.</source>
          <target state="translated">성능에 대한 로깅 영향은 대부분의 경우 미미하지만 제로 비용 로거는 큰 걱정없이 어디서나 사용할 수 있습니다. 다가오는 릴리스에서 Loguru의 중요한 기능은 최대 속도를 위해 C로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="bcb4bf116e7b95a439ec08c1a95b30225a03f924" translate="yes" xml:space="preserve">
          <source>Asynchronous, Thread-safe, Multiprocess-safe</source>
          <target state="translated">비동기식, 스레드 안전, 다중 프로세스 안전</target>
        </trans-unit>
        <trans-unit id="584f81f9cd566d8f3848ffcca25ebc621d1634e5" translate="yes" xml:space="preserve">
          <source>Better datetime handling</source>
          <target state="translated">더 나은 날짜 시간 처리</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="8d13bf57da3a3742518c48536c19a9fd07f50805" translate="yes" xml:space="preserve">
          <source>Convenient parser</source>
          <target state="translated">편리한 파서</target>
        </trans-unit>
        <trans-unit id="6abb2b957bec890812914ff80f5f5d2102214df1" translate="yes" xml:space="preserve">
          <source>Coroutine functions used as sinks are also supported and should be awaited with &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.complete&quot;&gt;&lt;tt&gt;complete()&lt;/tt&gt;&lt;/a&gt;.</source>
          <target state="translated">싱크로 사용되는 코 루틴 함수도 지원되며 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.complete&quot;&gt;&lt;tt&gt;complete ()&lt;/tt&gt;&lt;/a&gt; 로 기다려야 합니다.</target>
        </trans-unit>
        <trans-unit id="cd597c819847e7eb5eba28f701a44fbeb4e213a6" translate="yes" xml:space="preserve">
          <source>Customizable levels</source>
          <target state="translated">사용자 정의 가능한 레벨</target>
        </trans-unit>
        <trans-unit id="3f67e8f4eecf241b91f4cc8c976a487ade34d09d" translate="yes" xml:space="preserve">
          <source>DEBUG</source>
          <target state="translated">디버그</target>
        </trans-unit>
        <trans-unit id="b4f9a714042537f57e68843678b1b43c30baeb8c" translate="yes" xml:space="preserve">
          <source>Did you ever feel lazy about configuring a logger and used</source>
          <target state="translated">로거 구성에 대해 게으르다 고 느끼고</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">선적 서류 비치</target>
        </trans-unit>
        <trans-unit id="bf6673b1abcfb0a43aea2275f78da8b1a58d0704" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t like the default logger formatting? Would prefer another</source>
          <target state="translated">기본 로거 형식이 마음에 들지 않습니까? 다른 것을 선호 할 것입니다</target>
        </trans-unit>
        <trans-unit id="d1421c537b52abdf0ddf8561fea0f7a035bd90ea" translate="yes" xml:space="preserve">
          <source>Easier file logging with rotation / retention / compression</source>
          <target state="translated">회전 / 보존 / 압축을 통한 간편한 파일 로깅</target>
        </trans-unit>
        <trans-unit id="c7a3612c2b9381abc0f67660221c8730ae2bd1f5" translate="yes" xml:space="preserve">
          <source>Entirely compatible with standard logging</source>
          <target state="translated">표준 로깅과 완전히 호환</target>
        </trans-unit>
        <trans-unit id="5aad0ff39b6bfd08c23c6568f4ec6f9b400061db" translate="yes" xml:space="preserve">
          <source>Exceptions catching within threads or main</source>
          <target state="translated">스레드 또는 메인 내에서 포착되는 예외</target>
        </trans-unit>
        <trans-unit id="7855951add13531e1ff823674b5cdf01312a0468" translate="yes" xml:space="preserve">
          <source>Exhaustive notifier</source>
          <target state="translated">철저한 알리미</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="58e51d1cf928c438e164b374be2c40780993a077" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.patch&quot;&gt;&lt;tt&gt;patch()&lt;/tt&gt;&lt;/a&gt; method allows dynamic values to be attached to the record dict of each new message:</source>
          <target state="translated">마지막으로 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.patch&quot;&gt;&lt;tt&gt;patch ()&lt;/tt&gt;&lt;/a&gt; 메서드를 사용하면 각 새 메시지의 레코드 사전에 동적 값을 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f043a2192d4c328ac70fb9a10f04bfc682c73123" translate="yes" xml:space="preserve">
          <source>For convenience, it is pre-configured and outputs to</source>
          <target state="translated">편의를 위해 사전 구성되어 있으며</target>
        </trans-unit>
        <trans-unit id="50179800f3b7d034112ec5d1cda4895409d91636" translate="yes" xml:space="preserve">
          <source>Fully descriptive exceptions</source>
          <target state="translated">완전히 설명적인 예외</target>
        </trans-unit>
        <trans-unit id="be0212bf33313087973171061ef96d564becfb55" translate="yes" xml:space="preserve">
          <source>Handler</source>
          <target state="translated">매니저</target>
        </trans-unit>
        <trans-unit id="c9463c447e689a13a36583ecd40505d7fc6c8827" translate="yes" xml:space="preserve">
          <source>Have you ever seen your program crashing unexpectedly without seeing anything in the log file? Did you ever noticed that exceptions occurring in threads were not logged? This can be solved using the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.catch&quot;&gt;&lt;tt&gt;catch()&lt;/tt&gt;&lt;/a&gt; decorator / context manager which ensures that any error is correctly propagated to the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;logger&lt;/tt&gt;&lt;/a&gt;.</source>
          <target state="translated">로그 파일에 아무것도 표시되지 않고 프로그램이 예기치 않게 충돌하는 것을 본 적이 있습니까? 스레드에서 발생하는 예외가 기록되지 않는다는 사실을 알고 계셨습니까? 이 문제는 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.catch&quot;&gt;&lt;tt&gt;catch ()&lt;/tt&gt;&lt;/a&gt; 데코레이터 / 컨텍스트 관리자를 사용하여 해결할 수 있습니다. 이는 오류가 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;로거에&lt;/tt&gt;&lt;/a&gt; 올바르게 전파되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="323d0f599ae32d4eb338b8822d02724b8206a717" translate="yes" xml:space="preserve">
          <source>Help &amp;amp; Guides</source>
          <target state="translated">도움말 및 가이드</target>
        </trans-unit>
        <trans-unit id="7ee3cdd5eadcd3a5fbb5622aa0514b52979b3c56" translate="yes" xml:space="preserve">
          <source>How to add a handler? How to set up logs formatting? How to filter messages? How to set level?</source>
          <target state="translated">핸들러를 추가하는 방법? 로그 형식을 설정하는 방법은 무엇입니까? 메시지를 필터링하는 방법? 레벨 설정 방법?</target>
        </trans-unit>
        <trans-unit id="210151ef0e5a7c07c2d9ecafd8b4743406eafb07" translate="yes" xml:space="preserve">
          <source>If you want to send logged messages to a file, you just have to use a string path as the sink. It can be automatically timed too for convenience:</source>
          <target state="translated">로깅 된 메시지를 파일로 보내려면 문자열 경로를 싱크로 사용하기 만하면됩니다. 편의를 위해 자동으로 시간을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="39aa41dd875a61f786a42f94908ff4db8536e8aa" translate="yes" xml:space="preserve">
          <source>It is also &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#file&quot;&gt;easily configurable&lt;/a&gt; if you need rotating logger, if you want to remove older logs, or if you wish to compress your files at closure.</source>
          <target state="translated">로거 회전이 필요하거나 오래된 로그를 제거하거나 닫을 때 파일을 압축하려는 경우 에도 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#file&quot;&gt;쉽게 구성&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83da4e786f948255740310fc46c856e11cf9e533" translate="yes" xml:space="preserve">
          <source>It is often useful to extract specific information from generated logs, this is why</source>
          <target state="translated">생성 된 로그에서 특정 정보를 추출하는 것이 유용한 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="299b80d0cbf853c4371c2946c7f68f4472f80fca" translate="yes" xml:space="preserve">
          <source>It is possible to modify a context-local state temporarily with &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.contextualize&quot;&gt;&lt;tt&gt;contextualize()&lt;/tt&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.contextualize&quot;&gt;&lt;tt&gt;contextualize ()를 사용&lt;/tt&gt;&lt;/a&gt; 하여 일시적으로 &lt;tt&gt;컨텍스트&lt;/tt&gt; 로컬 상태를 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7dea7a31644f023a8d8798edae2abae50b2133fc" translate="yes" xml:space="preserve">
          <source>Lazy evaluation of expensive functions</source>
          <target state="translated">값 비싼 함수의 지연 평가</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="f0a9a00dfb8c7d10bade1697a0491f6e716caf65" translate="yes" xml:space="preserve">
          <source>Logging exceptions that occur in your code is important to track bugs, but it&amp;rsquo;s quite useless if you don&amp;rsquo;t know why it failed.</source>
          <target state="translated">코드에서 발생하는 예외를 로깅하는 것은 버그를 추적하는 데 중요하지만 실패한 이유를 모르면 쓸모가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d3277c2995ff87c413db3d3fa023e6729e7af4f4" translate="yes" xml:space="preserve">
          <source>Loguru</source>
          <target state="translated">Loguru</target>
        </trans-unit>
        <trans-unit id="dd88ea081857585aff34a581a455a227e11fc4e3" translate="yes" xml:space="preserve">
          <source>Modern string formatting using braces style</source>
          <target state="translated">중괄호 스타일을 사용한 최신 문자열 서식</target>
        </trans-unit>
        <trans-unit id="7eef39bb2f36cd843802d901d412877264c3f669" translate="yes" xml:space="preserve">
          <source>Need to propagate</source>
          <target state="translated">전파해야 함</target>
        </trans-unit>
        <trans-unit id="1fd5e391183bd147674eb7c275d784c371ddfc36" translate="yes" xml:space="preserve">
          <source>No Handler, no Formatter, no Filter: one function to rule them all</source>
          <target state="translated">처리기 없음, 포맷터 없음, 필터 없음 : 모두를 지배하는 하나의 기능</target>
        </trans-unit>
        <trans-unit id="66292818abce5bb478b33954367d686596166733" translate="yes" xml:space="preserve">
          <source>Note that you may also &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.remove&quot;&gt;&lt;tt&gt;remove()&lt;/tt&gt;&lt;/a&gt; a previously added handler by using the identifier returned while adding it. This is particularly useful if you want to supersede the default</source>
          <target state="translated">추가하는 동안 반환 된 식별자를 사용하여 이전에 추가 된 핸들러를 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.remove&quot;&gt;&lt;tt&gt;제거 ()&lt;/tt&gt;&lt;/a&gt; 할 수도 있습니다 . 기본값을 대체하려는 경우 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6f855d39a118f832d6f908e8b4209ad248cb1a4c" translate="yes" xml:space="preserve">
          <source>One answer: the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.add&quot;&gt;&lt;tt&gt;add()&lt;/tt&gt;&lt;/a&gt; function.</source>
          <target state="translated">한 가지 대답은 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.add&quot;&gt;&lt;tt&gt;add ()&lt;/tt&gt;&lt;/a&gt; 함수입니다.</target>
        </trans-unit>
        <trans-unit id="126d7bc261a88792344cb6f31514fd9f1398052a" translate="yes" xml:space="preserve">
          <source>Personalizable defaults through environment variables</source>
          <target state="translated">환경 변수를 통해 개인화 가능한 기본값</target>
        </trans-unit>
        <trans-unit id="1fb9ada4f5eb08dbee0015a6e80bc39069bb7bf8" translate="yes" xml:space="preserve">
          <source>Pretty logging with colors</source>
          <target state="translated">색상으로 예쁜 로깅</target>
        </trans-unit>
        <trans-unit id="8eb415f00edf306423eee32e89f2e8cf102f9033" translate="yes" xml:space="preserve">
          <source>Python logging made (stupidly) simple</source>
          <target state="translated">(어리석게도) 간단한 파이썬 로깅</target>
        </trans-unit>
        <trans-unit id="0830b58e34a5e63da622270540409f6f5fb0c248" translate="yes" xml:space="preserve">
          <source>Ready to use out of the box without boilerplate</source>
          <target state="translated">상용구없이 즉시 사용 가능</target>
        </trans-unit>
        <trans-unit id="b9a40a07d4f5a561fa546caf80f31c0fd649c036" translate="yes" xml:space="preserve">
          <source>Sometime you would like to log verbose information without performance penalty in production, you can use the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.opt&quot;&gt;&lt;tt&gt;opt()&lt;/tt&gt;&lt;/a&gt; method to achieve this.</source>
          <target state="translated">프로덕션에서 성능 저하없이 자세한 정보를 기록하려면 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.opt&quot;&gt;&lt;tt&gt;opt ()&lt;/tt&gt;&lt;/a&gt; 메서드를 사용하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d6ba66f7d7fce93046d8adcf328d2d3212e3346" translate="yes" xml:space="preserve">
          <source>Structured logging as needed</source>
          <target state="translated">필요에 따라 구조화 된 로깅</target>
        </trans-unit>
        <trans-unit id="0c24e9750a9b5726fad487408570b58e0b44fb87" translate="yes" xml:space="preserve">
          <source>Suitable for scripts and libraries</source>
          <target state="translated">스크립트 및 라이브러리에 적합</target>
        </trans-unit>
        <trans-unit id="3a4dad8499d4a19a36c3c238ea08152c4515b29e" translate="yes" xml:space="preserve">
          <source>Take the tour</source>
          <target state="translated">여행을하다</target>
        </trans-unit>
        <trans-unit id="863f3d62fbb2fdad91fe199796bf824f4bfed840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;logger&lt;/tt&gt;&lt;/a&gt; is just an interface which dispatches log messages to configured handlers. Simple, right?</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;로거는&lt;/tt&gt;&lt;/a&gt; 단지 구성 핸들러에 로그 메시지를 전달하는 인터페이스입니다. 간단 하죠?</target>
        </trans-unit>
        <trans-unit id="ab517e2a8ba12a27ab2bbd36c075257a2d62e599" translate="yes" xml:space="preserve">
          <source>The code:</source>
          <target state="translated">코드:</target>
        </trans-unit>
        <trans-unit id="ece6f15d08478eebf60aa2a4daae634569523e11" translate="yes" xml:space="preserve">
          <source>The main concept of</source>
          <target state="translated">주요 개념</target>
        </trans-unit>
        <trans-unit id="95991914da930db276daa8458eb2b96c486b175e" translate="yes" xml:space="preserve">
          <source>The standard logging is bloated with arguments like</source>
          <target state="translated">표준 로깅은 다음과 같은 인수로 가득 차 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ef6b963310201537703bb4d3e68790cc797e09e" translate="yes" xml:space="preserve">
          <source>This function should be used to register &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#sink&quot;&gt;sinks&lt;/a&gt; which are responsible for managing &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#message&quot;&gt;log messages&lt;/a&gt; contextualized with a &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#record&quot;&gt;record dict&lt;/a&gt;. A sink can take many forms: a simple function, a string path, a file-like object, a coroutine function or a built-in Handler.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#record&quot;&gt;레코드 dict로&lt;/a&gt; 컨텍스트 화 된 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#message&quot;&gt;로그 메시지&lt;/a&gt; 를 관리하는 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#sink&quot;&gt;싱크&lt;/a&gt; 를 등록 하는 데 사용해야합니다 . 싱크는 간단한 함수, 문자열 경로, 파일 류 객체, 코 루틴 함수 또는 내장 핸들러와 같은 다양한 형태를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97977d34e1ef53ab3b59882f6b061a4bf9cf3d9a" translate="yes" xml:space="preserve">
          <source>Type hints</source>
          <target state="translated">유형 힌트</target>
        </trans-unit>
        <trans-unit id="fefa06e3c1634026d03c1c996b520370f30ce10a" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.bind&quot;&gt;&lt;tt&gt;bind()&lt;/tt&gt;&lt;/a&gt; you can contextualize your logger messages by modifying the</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.bind&quot;&gt;&lt;tt&gt;bind ()&lt;/tt&gt;&lt;/a&gt; 를 사용하면 다음 을 수정하여 로거 메시지를 컨텍스트화할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="841194853eb0b6c0231da0091bc1913323e0a961" translate="yes" xml:space="preserve">
          <source>Using the logger in your scripts is easy, and you can &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.configure&quot;&gt;&lt;tt&gt;configure()&lt;/tt&gt;&lt;/a&gt; it at start. To use</source>
          <target state="translated">스크립트에서 로거를 사용하는 것은 쉬우 며 시작할 때 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.configure&quot;&gt;&lt;tt&gt;구성 ()&lt;/tt&gt;&lt;/a&gt; 할 수 &lt;tt&gt;있습니다&lt;/tt&gt; . 쓰다</target>
        </trans-unit>
        <trans-unit id="305866de80067e32a63e830e269cf33ccd4e7b2e" translate="yes" xml:space="preserve">
          <source>Want to intercept standard</source>
          <target state="translated">표준을 가로 채고 싶다</target>
        </trans-unit>
        <trans-unit id="4ddba196f16b7f5705baf2d87a81af09f4f30164" translate="yes" xml:space="preserve">
          <source>Want your logs to be serialized for easier parsing or to pass them around? Using the</source>
          <target state="translated">쉽게 구문 분석하거나 전달하기 위해 로그를 직렬화하고 싶으십니까? 사용</target>
        </trans-unit>
        <trans-unit id="6572e27abd4ad7c6aa6cc05da2f89de3c6c06f4a" translate="yes" xml:space="preserve">
          <source>Wish to use built-in logging</source>
          <target state="translated">기본 제공 로깅을 사용하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="68042e66e97b54268178bcdf8dcc3d429ab7727d" translate="yes" xml:space="preserve">
          <source>Would result in:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="feee3dc57c707b891387d70daedd938be9690171" translate="yes" xml:space="preserve">
          <source>You can also have more fine-grained control over your logs by combining &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.bind&quot;&gt;&lt;tt&gt;bind()&lt;/tt&gt;&lt;/a&gt; and</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.bind&quot;&gt;&lt;tt&gt;bind ()&lt;/tt&gt;&lt;/a&gt; 와 결합하여 로그를보다 세밀하게 제어 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="9364c7670651630954dfafa320501809bce80bc0" translate="yes" xml:space="preserve">
          <source>argument, each log message will be converted to a JSON string before being sent to the configured sink.</source>
          <target state="translated">인수를 사용하는 경우 각 로그 메시지는 구성된 싱크로 전송되기 전에 JSON 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="db8309b469b2f8e82f1db94383f5c7423cfddd19" translate="yes" xml:space="preserve">
          <source>as a</source>
          <target state="translated">로</target>
        </trans-unit>
        <trans-unit id="4ed8460840a97380750476ca7869f80f67fed081" translate="yes" xml:space="preserve">
          <source>automatically adds colors to your logs if your terminal is compatible. You can define your favorite style by using &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#color&quot;&gt;markup tags&lt;/a&gt; in the sink format.</source>
          <target state="translated">터미널이 호환되는 경우 자동으로 로그에 색상을 추가합니다. 싱크 형식의 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#color&quot;&gt;마크 업 태그&lt;/a&gt; 를 사용하여 좋아하는 스타일을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb3e902c59941ed1f906e7d6f54a8b7baff70346" translate="yes" xml:space="preserve">
          <source>can easily be combined with the great &lt;a href=&quot;https://github.com/notifiers/notifiers&quot;&gt;&lt;tt&gt;notifiers&lt;/tt&gt;&lt;/a&gt; library (must be installed separately) to receive an e-mail when your program fail unexpectedly or to send many other kind of notifications.</source>
          <target state="translated">프로그램이 예기치 않게 실패 할 때 전자 메일을 받거나 다른 많은 종류의 알림을 보내기 위해 훌륭한 &lt;a href=&quot;https://github.com/notifiers/notifiers&quot;&gt;&lt;tt&gt;알림&lt;/tt&gt;&lt;/a&gt; 라이브러리 (별도로 설치해야 함) 와 쉽게 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5512320f761218cfb3b859495c0ab0660c779ee" translate="yes" xml:space="preserve">
          <source>color? &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#env&quot;&gt;No problem&lt;/a&gt;:</source>
          <target state="translated">색깔? &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#env&quot;&gt;문제 없습니다&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8083ecbdd2dc5414ef9f1e36ad14e7f11f3b9b5d" translate="yes" xml:space="preserve">
          <source>comes with all standard &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#levels&quot;&gt;logging levels&lt;/a&gt; to which &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.trace&quot;&gt;&lt;tt&gt;trace()&lt;/tt&gt;&lt;/a&gt; and &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.success&quot;&gt;&lt;tt&gt;success()&lt;/tt&gt;&lt;/a&gt; are added. Do you need more? Then, just create it by using the &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.level&quot;&gt;&lt;tt&gt;level()&lt;/tt&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.trace&quot;&gt;&lt;tt&gt;trace ()&lt;/tt&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.success&quot;&gt;&lt;tt&gt;success ()&lt;/tt&gt;&lt;/a&gt; 가 추가 되는 모든 표준 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#levels&quot;&gt;로깅 수준&lt;/a&gt; 이 제공됩니다. 더 필요하십니까? 그런 다음 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.level&quot;&gt;&lt;tt&gt;level ()&lt;/tt&gt;&lt;/a&gt; 함수를 사용하여 생성합니다 .&lt;tt&gt;&lt;/tt&gt;&lt;tt&gt;&lt;/tt&gt;&lt;tt&gt;&lt;/tt&gt;</target>
        </trans-unit>
        <trans-unit id="120ccdac8c8cdf73a2891ef951a38e0fc34c1ea0" translate="yes" xml:space="preserve">
          <source>datefmt</source>
          <target state="translated">datefmt</target>
        </trans-unit>
        <trans-unit id="0534892ab534cc1e89de699e86b01772db5a3c96" translate="yes" xml:space="preserve">
          <source>enqueue</source>
          <target state="translated">대기열에 추가</target>
        </trans-unit>
        <trans-unit id="b43c4b82570e182eb1c74072896167113d2c7345" translate="yes" xml:space="preserve">
          <source>extra</source>
          <target state="translated">특별한</target>
        </trans-unit>
        <trans-unit id="f6126b45b9215376d58c4ca8313ddf9bd8fd98f5" translate="yes" xml:space="preserve">
          <source>favors the much more elegant and powerful</source>
          <target state="translated">훨씬 더 우아하고 강력한</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">필터</target>
        </trans-unit>
        <trans-unit id="7cae3d9e060c1fdad5ce6edbc229c9f5a69ada0e" translate="yes" xml:space="preserve">
          <source>formatting over</source>
          <target state="translated">서식 지정</target>
        </trans-unit>
        <trans-unit id="78fcd9bd320ed61588b3e919ec18e16c6606e6f4" translate="yes" xml:space="preserve">
          <source>from inside a library, remember to never call &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.add&quot;&gt;&lt;tt&gt;add()&lt;/tt&gt;&lt;/a&gt; but use &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.disable&quot;&gt;&lt;tt&gt;disable()&lt;/tt&gt;&lt;/a&gt; instead so logging functions become no-op. If a developer wishes to see your library&amp;rsquo;s logs, he can &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.enable&quot;&gt;&lt;tt&gt;enable()&lt;/tt&gt;&lt;/a&gt; it again.</source>
          <target state="translated">도서관 내부에서 결코 호출에 기억 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.add&quot;&gt;&lt;tt&gt;추가 ()&lt;/tt&gt;&lt;/a&gt; 하지만 사용 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.disable&quot;&gt;&lt;tt&gt;) (비활성화&lt;/tt&gt;&lt;/a&gt; 대신 그래서 로깅 기능은 어떤 조합 될 수 없습니다. 개발자가 라이브러리의 로그를 보려면 다시 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.enable&quot;&gt;&lt;tt&gt;활성화 ()&lt;/tt&gt;&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="382a4edee6c8dda34660b8d72d4ec1ea9bf94672" translate="yes" xml:space="preserve">
          <source>from loguru import logger</source>
          <target state="translated">loguru 가져 오기 로거에서</target>
        </trans-unit>
        <trans-unit id="986747992a339888bd737fcf5e62583ecc0124e9" translate="yes" xml:space="preserve">
          <source>handler: just call</source>
          <target state="translated">핸들러 : 그냥 호출</target>
        </trans-unit>
        <trans-unit id="0da48658710fb80f64cb79e3801f4c7556063430" translate="yes" xml:space="preserve">
          <source>helps you identify problems by allowing the entire stack trace to be displayed, including values of variables (thanks &lt;a href=&quot;https://github.com/Qix-/better-exceptions&quot;&gt;&lt;tt&gt;better_exceptions&lt;/tt&gt;&lt;/a&gt; for this!).</source>
          <target state="translated">변수 값을 포함하여 전체 스택 추적이 표시되도록하여 문제를 식별하는 데 도움이됩니다 ( &lt;a href=&quot;https://github.com/Qix-/better-exceptions&quot;&gt;&lt;tt&gt;이에&lt;/tt&gt;&lt;/a&gt; 대한 &lt;tt&gt;better_exceptions&lt;/tt&gt; 감사 합니다!).</target>
        </trans-unit>
        <trans-unit id="d9cfe3bcb05c113e477203f6efd4b0c9d452e29e" translate="yes" xml:space="preserve">
          <source>instead?&amp;hellip; I did, yet logging is fundamental to every application and eases the process of debugging. Using &lt;strong&gt;Loguru&lt;/strong&gt; you have no excuse not to use logging from the start, this is as simple as</source>
          <target state="translated">대신?&amp;hellip; 그래도 로깅은 모든 애플리케이션의 기본이며 디버깅 프로세스를 쉽게 해줍니다. 사용 &lt;strong&gt;Loguru을&lt;/strong&gt; 당신이 처음부터 로깅을 사용하지 않는 변명이 없습니다, 이것은 단순하게하다</target>
        </trans-unit>
        <trans-unit id="692c347b0e61c1e3611da5a6fb8a1a563ed93703" translate="yes" xml:space="preserve">
          <source>is that &lt;strong&gt;there is one and only one&lt;/strong&gt;&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;logger&lt;/tt&gt;&lt;/a&gt;.</source>
          <target state="translated">이다 &lt;strong&gt;하나 하나가 &lt;/strong&gt;&lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger&quot;&gt;&lt;tt&gt;로거&lt;/tt&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc24dfa66a216c1a4aa9f360152a21b4296c35eb" translate="yes" xml:space="preserve">
          <source>logger.remove()</source>
          <target state="translated">logger.remove ()</target>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="translated">벌채 반출</target>
        </trans-unit>
        <trans-unit id="10b09a9892f94f03597f43340b9d61e0686a2b1a" translate="yes" xml:space="preserve">
          <source>messages to standard</source>
          <target state="translated">표준 메시지</target>
        </trans-unit>
        <trans-unit id="14e1bc9a7d593881050258a2a6f6c09de49091cb" translate="yes" xml:space="preserve">
          <source>messages toward your</source>
          <target state="translated">당신에게 보내는 메시지</target>
        </trans-unit>
        <trans-unit id="2e5e565eb069849006d5a14964fde96b2e0636bd" translate="yes" xml:space="preserve">
          <source>msecs</source>
          <target state="translated">밀리 초</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="19c8a5cdef0f37df1bfbc1c66d27412754169588" translate="yes" xml:space="preserve">
          <source>print()</source>
          <target state="translated">인쇄()</target>
        </trans-unit>
        <trans-unit id="44ddd3697b67536ce13dc532171f430ea5a4d8e6" translate="yes" xml:space="preserve">
          <source>provides a &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.parse&quot;&gt;&lt;tt&gt;parse()&lt;/tt&gt;&lt;/a&gt; method which helps to deal with logs and regexes.</source>
          <target state="translated">로그 및 정규식을 처리하는 데 도움이되는 &lt;a href=&quot;https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.parse&quot;&gt;&lt;tt&gt;parse ()&lt;/tt&gt;&lt;/a&gt; 메서드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="eb582028e758870d21b8e177b9d7165c68b8cb37" translate="yes" xml:space="preserve">
          <source>record attribute.</source>
          <target state="translated">레코드 속성.</target>
        </trans-unit>
        <trans-unit id="8b98a923648538ef4b42e662d8e9408deb0bd085" translate="yes" xml:space="preserve">
          <source>serialize</source>
          <target state="translated">직렬화</target>
        </trans-unit>
        <trans-unit id="f8ad2000d6ad5afbb800c6b93284cc349b910ceb" translate="yes" xml:space="preserve">
          <source>sink?</source>
          <target state="translated">싱크대?</target>
        </trans-unit>
        <trans-unit id="f65cc556712cf4f47835e4f840a44d1a719b2d54" translate="yes" xml:space="preserve">
          <source>sinks?</source>
          <target state="translated">싱크?</target>
        </trans-unit>
        <trans-unit id="351eb7019c1640acf10c265cc31c377fd68443b5" translate="yes" xml:space="preserve">
          <source>stderr</source>
          <target state="translated">stderr</target>
        </trans-unit>
        <trans-unit id="0fc97df41ff32f2a7b74207e3037f8b12c10af9b" translate="yes" xml:space="preserve">
          <source>str.format()</source>
          <target state="translated">str.format ()</target>
        </trans-unit>
        <trans-unit id="6e9800dc5b9d670eb71003d392da81106d6dc005" translate="yes" xml:space="preserve">
          <source>the messages to ensure logs integrity. This same argument can also be used if you want async logging.</source>
          <target state="translated">로그 무결성을 보장하기위한 메시지. 비동기 로깅을 원하는 경우에도 동일한 인수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="425514eed08f1c5978bf8a92819f26aca1b7b67a" translate="yes" xml:space="preserve">
          <source>to begin with (but that&amp;rsquo;s entirely configurable).</source>
          <target state="translated">(그러나 그것은 완전히 구성 가능합니다).</target>
        </trans-unit>
        <trans-unit id="4906163cb80c50421ddfee0dd823efbb54d1338d" translate="yes" xml:space="preserve">
          <source>to make a fresh start.</source>
          <target state="translated">새롭게 시작합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
