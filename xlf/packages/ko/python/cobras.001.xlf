<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/cobras/">
    <body>
      <group id="cobras">
        <trans-unit id="39c3694020422be690a8542138c584a3f21e3226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;, the swiss army knife of the internet which provide a very scalable publish/subscribe feature to dispatch messages while retaining them and allowing lookups of old messages (see [Redis Streams] (&lt;a href=&quot;https://redis.io/topics/streams-intro&quot;&gt;https://redis.io/topics/streams-intro&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; , 인터넷의 스위스 군용 칼인 Redis 는 메시지를 유지하면서 오래된 메시지를 조회 할 수있는 확장 가능한 게시 / 구독 기능을 제공합니다 ([Redis Streams] 참조 ( &lt;a href=&quot;https://redis.io/topics/streams-intro&quot;&gt;https://redis.io/topics/streams-intro&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6592b40b27231327f8b41e94aa3b6968d3f7ced3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; (and &lt;a href=&quot;https://realpython.com/async-io-python/&quot;&gt;asyncio&lt;/a&gt;, one of the killer python3 feature !)</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; (및 &lt;a href=&quot;https://realpython.com/async-io-python/&quot;&gt;asyncio&lt;/a&gt; , 킬러 python3 기능 중 하나!)</target>
        </trans-unit>
        <trans-unit id="b89530f0321777545730c6b895736f7e61ff5050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cobras init&lt;/code&gt; needs to be run once to generate an app configuration file, in &lt;code&gt;~/.cobra.yaml&lt;/code&gt;. That file contains all the roles, secrets and apps configured. Clients will use this data to authenticate.</source>
          <target state="translated">&lt;code&gt;cobras init&lt;/code&gt; &lt;code&gt;~/.cobra.yaml&lt;/code&gt; 에 앱 구성 파일을 생성하려면 cobras init 를 한 번 실행해야합니다 . 이 파일에는 구성된 모든 역할, 비밀 및 앱이 포함되어 있습니다. 클라이언트는이 데이터를 사용하여 인증합니다.</target>
        </trans-unit>
        <trans-unit id="c69296765a3c29b1646eab98c99f526d4f19571c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bavarde&lt;/em&gt; is a chat client that runs against the public cobra server. Bring up 2 terminals, runs the 2 commands below and start typing.</source>
          <target state="translated">&lt;em&gt;bavarde&lt;/em&gt; 는 공용 코브라 서버에 대해 실행되는 채팅 클라이언트입니다. 터미널 2 개를 불러오고 아래의 2 개 명령을 실행하고 입력을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="1fae5c2bd318c72cede3e832a6d9a32efc06256f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;publish&lt;/em&gt;: send data to a channel, which will be broadcasted to anyone subscribed to that channel</source>
          <target state="translated">&lt;em&gt;게시&lt;/em&gt; : 채널에 데이터를 전송하여 해당 채널을 구독하는 모든 사람에게 브로드 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="78afe8855622e37067ad27e8cb7a5adb89cc239c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;read&lt;/em&gt;: retrieve data</source>
          <target state="translated">&lt;em&gt;읽기&lt;/em&gt; : 데이터 검색</target>
        </trans-unit>
        <trans-unit id="d586f14b95ac8e9424f7f7aedd1c8e544391b4e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;subscribe&lt;/em&gt;: receive events sent to a channel in real time.</source>
          <target state="translated">&lt;em&gt;구독&lt;/em&gt; : 채널로 전송되는 이벤트를 실시간으로 수신합니다.</target>
        </trans-unit>
        <trans-unit id="24dc2247609ea3fec313ba785084b0b1906d6b63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;write&lt;/em&gt;: record some data (addressed by a key)</source>
          <target state="translated">&lt;em&gt;쓰기&lt;/em&gt; : 일부 데이터를 기록합니다 (키로 주소 지정).</target>
        </trans-unit>
        <trans-unit id="59fcad1df4eee9a7a741ded26cf1fc0f5a6bf51b" translate="yes" xml:space="preserve">
          <source>A realtime messaging server using WebSockets and Redis.</source>
          <target state="translated">WebSockets 및 Redis를 사용하는 실시간 메시징 서버.</target>
        </trans-unit>
        <trans-unit id="cb53a0afb968f47d43997b86a88d99dc8c4b3511" translate="yes" xml:space="preserve">
          <source>Clone this repo first, then:</source>
          <target state="translated">이 저장소를 먼저 복제 한 다음 :</target>
        </trans-unit>
        <trans-unit id="1182390de09a02771262fa86c317d44e77a73b9e" translate="yes" xml:space="preserve">
          <source>Cobra has been used in production receiving heavy traffic for about a year. Since it was written in Python it was named after a snake as an hommage to a great programming language.</source>
          <target state="translated">Cobra는 약 1 년 동안 교통량이 많은 생산에 사용되었습니다. Python으로 작성되었으므로 훌륭한 프로그래밍 언어에 대한 경의로 뱀의 이름을 따서 명명되었습니다.</target>
        </trans-unit>
        <trans-unit id="90761019408a4260102aacb15e279389929a97aa" translate="yes" xml:space="preserve">
          <source>Cobra is a realtime messaging server using Python3, WebSockets and Redis Streams. It was presented in great details during &lt;a href=&quot;https://events.redislabs.com/redis-conf/redis-conf-2019/&quot;&gt;RedisConf 2019&lt;/a&gt;. Since then we've added history support which let cobra retain messages published to a channel that no-one is subscribed to. This makes it easier to blow up your systems through &lt;a href=&quot;https://en.wikipedia.org/wiki/Out_of_memory&quot;&gt;OOMs&lt;/a&gt; and fill your hard drives, but it makes cobra much more useful.</source>
          <target state="translated">Cobra는 Python3, WebSockets 및 Redis Streams를 사용하는 실시간 메시징 서버입니다. &lt;a href=&quot;https://events.redislabs.com/redis-conf/redis-conf-2019/&quot;&gt;RedisConf 2019&lt;/a&gt; 에서 매우 자세하게 발표되었습니다 . 그 이후로 아무도 구독하지 않는 채널에 게시 된 메시지를 코브라가 보관할 수 있도록 히스토리 지원을 추가했습니다. 이렇게하면 &lt;a href=&quot;https://en.wikipedia.org/wiki/Out_of_memory&quot;&gt;OOM을&lt;/a&gt; 통해 시스템을 폭파 하고 하드 드라이브를 채우기가 더 쉬워 지지만 코브라를 훨씬 더 유용하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9cabedc41fbfb184546373913ae07e9f82c14d34" translate="yes" xml:space="preserve">
          <source>Cobra is actively being developed, check out the &lt;a href=&quot;docs/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt; to know what's cooking.</source>
          <target state="translated">Cobra는 활발하게 개발되고 있습니다. &lt;a href=&quot;docs/CHANGELOG.md&quot;&gt;변경 로그&lt;/a&gt; 를 확인하여 무엇이 요리되고 있는지 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="ba484094df5cf1f17df2d69be94f0203733de311" translate="yes" xml:space="preserve">
          <source>Cobra server and test clients</source>
          <target state="translated">Cobra 서버 및 테스트 클라이언트</target>
        </trans-unit>
        <trans-unit id="db4ccf47171ad33eca1932910befc1942493122b" translate="yes" xml:space="preserve">
          <source>For development</source>
          <target state="translated">개발 용</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">일반</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="af285be58404b03ae34d7629ec7e2b557e352d63" translate="yes" xml:space="preserve">
          <source>Interested ? Go read the &lt;a href=&quot;https://machinezone.github.io/cobra/&quot;&gt;docs&lt;/a&gt; ! If things don't work as expected, please create an issue in github, or even better a pull request if you know how to fix your problem.</source>
          <target state="translated">관심이 있으십니까? 가서 &lt;a href=&quot;https://machinezone.github.io/cobra/&quot;&gt;문서를&lt;/a&gt; 읽어 보세요! 일이 예상대로 작동하지 않으면 github에서 문제를 생성하거나 문제를 해결하는 방법을 알고 있다면 더 나은 풀 요청을 만드십시오.</target>
        </trans-unit>
        <trans-unit id="34c808d0a63f277e04fb23a5f76cc83d0a3e024b" translate="yes" xml:space="preserve">
          <source>News</source>
          <target state="translated">뉴스</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">또는 단일 라이너로 :</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="6b50e31a7e1337db9ecb0e2fcb6e65ca27f57df5" translate="yes" xml:space="preserve">
          <source>Thank you</source>
          <target state="translated">감사합니다</target>
        </trans-unit>
        <trans-unit id="955d9eec0d27a7892eb26b005ff874e8faad661f" translate="yes" xml:space="preserve">
          <source>The python &lt;a href=&quot;https://aioredis.readthedocs.io/en/v1.2.0/&quot;&gt;aioredis&lt;/a&gt; library used to talk to Redis. This &lt;a href=&quot;https://redislabs.com/blog/async-await-programming-basics-python-examples/&quot;&gt;redis labs&lt;/a&gt; article explains some pitfalls with asyncio and how to get the best performance out of it.</source>
          <target state="translated">Redis와 통신하는 데 사용되는 Python &lt;a href=&quot;https://aioredis.readthedocs.io/en/v1.2.0/&quot;&gt;aioredis&lt;/a&gt; 라이브러리입니다. 이 &lt;a href=&quot;https://redislabs.com/blog/async-await-programming-basics-python-examples/&quot;&gt;redis 랩&lt;/a&gt; 기사에서는 asyncio의 몇 가지 함정과이를 최대한 활용하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="effc54da61965812eaf7643cdeafe9466cc4ffd3" translate="yes" xml:space="preserve">
          <source>The python &lt;a href=&quot;https://websockets.readthedocs.io/en/stable/intro.html&quot;&gt;websockets&lt;/a&gt; library, very elegantly implementing the &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;WebSockets&lt;/a&gt; protocol using &lt;strong&gt;asyncio&lt;/strong&gt;.</source>
          <target state="translated">파이썬은 &lt;a href=&quot;https://websockets.readthedocs.io/en/stable/intro.html&quot;&gt;WebSocket을&lt;/a&gt; 아주 우아하게 구현 라이브러리 &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;WebSocket을의&lt;/a&gt; 사용 프로토콜 &lt;strong&gt;asyncio을&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="900cd8dee99adbd41ca8d6162b555c06bffa82b2" translate="yes" xml:space="preserve">
          <source>There are 4 operations that a client can execute against a cobra server: &lt;em&gt;publish&lt;/em&gt;, &lt;em&gt;subscribe&lt;/em&gt;, &lt;em&gt;read&lt;/em&gt; and &lt;em&gt;write&lt;/em&gt;. &lt;em&gt;publish&lt;/em&gt; and &lt;em&gt;subscribe&lt;/em&gt; are the 2 operations core to a group-chat. &lt;em&gt;read&lt;/em&gt; and &lt;em&gt;write&lt;/em&gt; are the typical operations that key value stores (such as memcached), or a python dictionnary provide.</source>
          <target state="translated">클라이언트가 cobra 서버에 대해 실행할 수있는 4 개의 작업이 있습니다 : &lt;em&gt;publish&lt;/em&gt; , &lt;em&gt;subscribe&lt;/em&gt; , &lt;em&gt;read&lt;/em&gt; 및 &lt;em&gt;write&lt;/em&gt; . &lt;em&gt;게시&lt;/em&gt; 및 &lt;em&gt;구독&lt;/em&gt; 은 그룹 채팅의 두 가지 작업 핵심입니다. &lt;em&gt;읽기&lt;/em&gt; 및 &lt;em&gt;쓰기&lt;/em&gt; 는 키 값 저장 (예 : memcached) 또는 Python 사전이 제공하는 일반적인 작업입니다.</target>
        </trans-unit>
        <trans-unit id="75a494d1be83f9dff22549a4c86611eea8469b02" translate="yes" xml:space="preserve">
          <source>There would be no cobra without some other amazing open-source projects and tech. Here are 3 very remarkable ones.</source>
          <target state="translated">다른 놀라운 오픈 소스 프로젝트와 기술 없이는 코브라가 없을 것입니다. 여기에 매우 주목할만한 3 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d75a19cb316f58c1531fa3c9a9175d4ad2f489a4" translate="yes" xml:space="preserve">
          <source>To run in production you will need a redis (version &amp;gt; 5) instance. Here are environment variables that you will likely want to tweak, to connect to 2 redis instances (for scalabity), and to bind on 0.0.0.0 so that the internet can see your instance.</source>
          <target state="translated">프로덕션에서 실행하려면 redis (버전&amp;gt; 5) 인스턴스가 필요합니다. 다음은 조정하고, 2 개의 redis 인스턴스에 연결하고 (scalabity의 경우), 인터넷에서 인스턴스를 볼 수 있도록 0.0.0.0에서 바인딩하려는 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="3ce5d747122f6843ed83b85a231589bd1bcc1e20" translate="yes" xml:space="preserve">
          <source>To run the server use &lt;code&gt;cobra run&lt;/code&gt;. You can run a health-check against the server with &lt;code&gt;cobra health&lt;/code&gt;.</source>
          <target state="translated">서버를 실행하려면 &lt;code&gt;cobra run&lt;/code&gt; 을 사용하십시오 . &lt;code&gt;cobra health&lt;/code&gt; 를 사용 하여 서버에 대해 상태 검사를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f0f4c613b4cd38b9bcde4d4b95fcf651bcedabf" translate="yes" xml:space="preserve">
          <source>UNIX one liner</source>
          <target state="translated">UNIX 원 라이너</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="1ad4a023f317d80464d8d793033fad3ad5351b9b" translate="yes" xml:space="preserve">
          <source>With docker</source>
          <target state="translated">도커로</target>
        </trans-unit>
        <trans-unit id="6c77cfc850a767748619c85b8169ef8382927809" translate="yes" xml:space="preserve">
          <source>With docker-compose</source>
          <target state="translated">docker-compose 사용</target>
        </trans-unit>
        <trans-unit id="8a5bf487c45be0856219ac26271b4e9b699b9bf4" translate="yes" xml:space="preserve">
          <source>With pip</source>
          <target state="translated">핍으로</target>
        </trans-unit>
        <trans-unit id="61b5317b4012394dde56783574a2057f61d29fa2" translate="yes" xml:space="preserve">
          <source>You can see what the install script is doing first &lt;a href=&quot;https://github.com/machinezone/cobra/blob/master/tools/install.sh&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/machinezone/cobra/blob/master/tools/install.sh&quot;&gt;여기&lt;/a&gt; 에서 설치 스크립트가 먼저 수행하는 작업을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f674c86ae36591f009f1187c02817678a5ee083" translate="yes" xml:space="preserve">
          <source>bavarde</source>
          <target state="translated">바 바르 드</target>
        </trans-unit>
        <trans-unit id="d11ce424081d27fe82877ed86056b9eb7a0f224c" translate="yes" xml:space="preserve">
          <source>slides</source>
          <target state="translated">슬라이드</target>
        </trans-unit>
        <trans-unit id="d5244a331aad290f924ed5ed8c070d65d2e0633e" translate="yes" xml:space="preserve">
          <source>youtube</source>
          <target state="translated">유튜브</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
