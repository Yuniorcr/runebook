<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/ideograph/">
    <body>
      <group id="ideograph">
        <trans-unit id="f951e9f0e304861b37a3584177f3ae3fac30bf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components()&lt;/code&gt; takes a string consisting of a single ideograph and returns a set of components. Note that the set contains components and the components of those components, and so on, down to the most basic of components contained in the cjkvi-ids data set.</source>
          <target state="translated">&lt;code&gt;components()&lt;/code&gt; 는 단일 표의 문자로 구성된 문자열을 가져 와서 구성 요소 집합을 반환합니다. 이 세트에는 cjkvi-ids 데이터 세트에 포함 된 가장 기본적인 구성 요소까지 구성 요소와 해당 구성 요소의 구성 요소가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9be964882a94e05a3310541771e3d3fe2e33a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; takes a string of ideograph components and returns a set of ideographs that include all of those components.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; 는 표의 문자 구성 요소의 문자열을 취하고 이러한 모든 구성 요소를 포함하는 표의 문자 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2cfd971a0fb1e690969925eda14a7812157aed7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ideograph&lt;/em&gt; consists of a two functions, &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;components()&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;표의 문자&lt;/em&gt; 는 &lt;code&gt;find()&lt;/code&gt; 및 &lt;code&gt;components()&lt;/code&gt; 두 가지 함수로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6b6863c58960962cd0c73a8496f9c353c64f83f" translate="yes" xml:space="preserve">
          <source>A tool to look up ideographs by their components. At the moment, it only contains Han characters, but it could be expanded to include other ideographic scripts such as Tangut or Sumero-Akkadian Cuneiform.</source>
          <target state="translated">구성 요소별로 표의 문자를 조회하는 도구입니다. 현재 한자 만 포함되어 있지만 Tangut 또는 Sumero-Akkadian Cuneiform과 같은 다른 표의 문자를 포함하도록 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aee20835eb757b407fe8ffeb5cce9b708f56d07b" translate="yes" xml:space="preserve">
          <source>Character components are derived from the &lt;a href=&quot;https://github.com/cjkvi/cjkvi-ids&quot;&gt;cjkvi-ids database&lt;/a&gt; (included in this Git repository as a submodule), specifically the &lt;code&gt;ids-cdp.txt&lt;/code&gt; data file. As some components do not currently have a Unicode code point assigned to them, they are given code points in the Private Use Area of Unicode. Note that because of this, some of these characters may be returned by the &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;components()&lt;/code&gt; functions.</source>
          <target state="translated">문자 구성 요소는 &lt;a href=&quot;https://github.com/cjkvi/cjkvi-ids&quot;&gt;cjkvi-ids 데이터베이스&lt;/a&gt; (이 Git 저장소에 하위 모듈로 포함됨), 특히 &lt;code&gt;ids-cdp.txt&lt;/code&gt; 데이터 파일에서 파생 됩니다. 일부 구성 요소에는 현재 유니 코드 코드 포인트가 할당되어 있지 않으므로 유니 코드의 개인 사용 영역에서 코드 포인트가 제공됩니다. 이로 인해 이러한 문자 중 일부는 &lt;code&gt;find()&lt;/code&gt; 및 &lt;code&gt;components()&lt;/code&gt; 함수에 의해 반환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3042174ed567a090fa6e65e478e24e03b2d20924" translate="yes" xml:space="preserve">
          <source>Characters in the component string that are not ideographic components are ignored.</source>
          <target state="translated">표의 구성 요소가 아닌 구성 요소 문자열의 문자는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">데이터</target>
        </trans-unit>
        <trans-unit id="fbcc69c0fd1d2dada1f58a486d7540c81449f9aa" translate="yes" xml:space="preserve">
          <source>Data is stored in a sqlite3 database, which can be regenerated from cjkvi-ids data by running the &lt;code&gt;generate_data.py&lt;/code&gt; script.</source>
          <target state="translated">데이터는 sqlite3 데이터베이스에 저장되며 &lt;code&gt;generate_data.py&lt;/code&gt; 스크립트 를 실행하여 cjkvi-ids 데이터에서 다시 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="be6a8c385922225375429483cdc09541194ab325" translate="yes" xml:space="preserve">
          <source>It can be called from the command line:</source>
          <target state="translated">명령 줄에서 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfbb2b604842904f987d9768e1ae89b880db39d3" translate="yes" xml:space="preserve">
          <source>Note that the current implementation is quite strict and relies on visual distinction for components rather than etymological connection: e.g. &quot;人&quot; &amp;ne; &quot;亻&quot;.</source>
          <target state="translated">현재 구현은 매우 엄격하고 어원 적 연결보다는 구성 요소의 시각적 구분에 의존합니다. 예 : &quot;人&quot;&amp;ne; &quot;亻&quot;.</target>
        </trans-unit>
        <trans-unit id="11141e2ad56bd29ac7c701f8f9d4aa808a94d6bf" translate="yes" xml:space="preserve">
          <source>Tool for finding ideographic (e.g. Han) characters from their components</source>
          <target state="translated">구성 요소에서 표의 문자 (예 : Han)를 찾는 도구</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="214af5f0cce6999498fed75161d1c3f685c02360" translate="yes" xml:space="preserve">
          <source>ideograph</source>
          <target state="translated">표의 문자</target>
        </trans-unit>
        <trans-unit id="9361b7cf849e47ee0b472930362cb398eb6d28f2" translate="yes" xml:space="preserve">
          <source>or imported as a Python package:</source>
          <target state="translated">또는 Python 패키지로 가져 오기 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
