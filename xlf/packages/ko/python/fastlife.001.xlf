<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/fastlife/">
    <body>
      <group id="fastlife">
        <trans-unit id="5324fdb1dc98c3d279280f415a2b1b879d8081c9" translate="yes" xml:space="preserve">
          <source>Alternatively, if you're interested in development, you can download the repository, cd into it and install locally with:</source>
          <target state="translated">또는 개발에 관심이있는 경우 리포지토리를 다운로드하고 CD로 이동 한 후 다음을 사용하여 로컬로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fdcde3b02cd707ce0b534588864243e3313bb37" translate="yes" xml:space="preserve">
          <source>Benchmarks for implementations of Conway's Game of Life</source>
          <target state="translated">Conway의 Game of Life 구현을위한 벤치 마크</target>
        </trans-unit>
        <trans-unit id="44b4d3d888b30e37f30e95b7230c099921ec1153" translate="yes" xml:space="preserve">
          <source>C-bindings Parallel</source>
          <target state="translated">C- 바인딩 병렬</target>
        </trans-unit>
        <trans-unit id="92eb5d19e96812b499446776c525cbe8e00ccabe" translate="yes" xml:space="preserve">
          <source>C-bindings Sequential</source>
          <target state="translated">C- 바인딩 순차</target>
        </trans-unit>
        <trans-unit id="0d9a4c937aa7c45d172dee7f5c42b17b443c76f1" translate="yes" xml:space="preserve">
          <source>Each of these implementations will be benchmarked with significantly sized worlds and the same random seeds to determine how their performance scales. Please see &lt;a href=&quot;https://fastlife.readthedocs.io/en/latest/&quot;&gt;fastlife.readthedocs.io&lt;/a&gt; for more details and the complete write up on the documentation.</source>
          <target state="translated">이러한 각 구현은 성능 확장 방법을 결정하기 위해 상당한 크기의 세계와 동일한 무작위 시드로 벤치마킹됩니다. 자세한 내용과 문서에 대한 완전한 글 은 &lt;a href=&quot;https://fastlife.readthedocs.io/en/latest/&quot;&gt;fastlife.readthedocs.io&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b0da2306bb65a9c98f79c58278d283f485943654" translate="yes" xml:space="preserve">
          <source>Fast Life</source>
          <target state="translated">빠른 생활</target>
        </trans-unit>
        <trans-unit id="b5b9fc6a668304e471b3177e34fb18ca7a45db3e" translate="yes" xml:space="preserve">
          <source>Fast Life is an experiment in Python simulation performance. Python has many excellent simulation frameworks including &lt;a href=&quot;https://simpy.readthedocs.io/en/latest/&quot;&gt;SimPy&lt;/a&gt; and &lt;a href=&quot;https://mesa.readthedocs.io/en/master/index.html&quot;&gt;MESA&lt;/a&gt;, which make it easy to conduct simulations for research and experimental purposes. Fast Life is not intended to be a simulation framework in the same way, instead Fast Life is designed to answer the question: &quot;Can Python be used to create extremely large scale simulations&quot;? To this end, Fast Life implements a seemingly simple simulation: &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&quot;&gt;Conway's Game of Life&lt;/a&gt; -- but scales it up to massive proportions. We then explore several different implementations including:</source>
          <target state="translated">Fast Life는 Python 시뮬레이션 성능 실험입니다. Python에는 &lt;a href=&quot;https://simpy.readthedocs.io/en/latest/&quot;&gt;SimPy&lt;/a&gt; 및 &lt;a href=&quot;https://mesa.readthedocs.io/en/master/index.html&quot;&gt;MESA를&lt;/a&gt; 포함한 우수한 시뮬레이션 프레임 워크가 많이있어 연구 및 실험 목적으로 시뮬레이션을 쉽게 수행 할 수 있습니다. Fast Life는 같은 방식의 시뮬레이션 프레임 워크가 아닙니다. 대신 Fast Life는 &quot;파이썬을 사용하여 대규모 시뮬레이션을 만들 수 있습니까?&quot;라는 질문에 답하도록 설계되었습니다. 이를 위해 Fast Life는 단순 해 보이는 시뮬레이션 인 &lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&quot;&gt;Conway의 Game of&lt;/a&gt; Life를 구현 하지만이를 엄청난 비율로 확장합니다. 그런 다음 다음과 같은 여러 가지 구현을 탐색합니다.</target>
        </trans-unit>
        <trans-unit id="68de86a59eb8deb282eeed35e19a65f7efcc5e57" translate="yes" xml:space="preserve">
          <source>Install the package and the command line tool using the Python package manager as follows:</source>
          <target state="translated">다음과 같이 Python 패키지 관리자를 사용하여 패키지 및 명령 줄 도구를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="2982d5650580eedb5dec4f630072b1a01d2b78dd" translate="yes" xml:space="preserve">
          <source>Note that if you're developing, you should probably set up a virtualenv and all of that good stuff before doing this step. Once done, you should have a CLI script &lt;code&gt;fastlife&lt;/code&gt; installed on your path, check it out as follows:</source>
          <target state="translated">개발중인 경우이 단계를 수행하기 전에 virtualenv 및 모든 좋은 기능을 설정해야합니다. 완료되면 경로에 CLI 스크립트 &lt;code&gt;fastlife&lt;/code&gt; 가 설치되어 있어야합니다. 다음과 같이 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6ba1601ecf34d59ee1920ed6543b5c7e4374b7f0" translate="yes" xml:space="preserve">
          <source>Pure Python Multiprocessing</source>
          <target state="translated">순수 Python 다중 처리</target>
        </trans-unit>
        <trans-unit id="fad10651b4e27c44628c7df33faacc0c07d23ef3" translate="yes" xml:space="preserve">
          <source>Pure Python Sequential</source>
          <target state="translated">순수 파이썬 순차</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="159fe6fdc167e94c9387c51e536ed8a693c51ab1" translate="yes" xml:space="preserve">
          <source>To run a simulation and see the animated action, you would use &lt;code&gt;fastlife run -a&lt;/code&gt; - you can play with the various settings and commands to see different implementations of the simulation.</source>
          <target state="translated">시뮬레이션을 실행하고 애니메이션 된 동작을 보려면 &lt;code&gt;fastlife run -a&lt;/code&gt; 를 사용 합니다. 다양한 설정과 명령을 사용하여 시뮬레이션의 다양한 구현을 볼 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
