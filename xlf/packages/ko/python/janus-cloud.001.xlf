<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/janus-cloud/">
    <body>
      <group id="janus-cloud">
        <trans-unit id="23194bf7adeb980f1ff2388edd705853833046a8" translate="yes" xml:space="preserve">
          <source>1 Why Janus-cloud</source>
          <target state="translated">1 왜 야누스 클라우드</target>
        </trans-unit>
        <trans-unit id="dc18adf10bd09f177f865dadb4347f8484ee643c" translate="yes" xml:space="preserve">
          <source>2 Features</source>
          <target state="translated">2 특징</target>
        </trans-unit>
        <trans-unit id="7496036e0ea1606d2ffbf9223327da0defd5f384" translate="yes" xml:space="preserve">
          <source>3 Components</source>
          <target state="translated">3 구성 요소</target>
        </trans-unit>
        <trans-unit id="95a9a0c07335bc9d3b8cf575674c9323ee4b16ac" translate="yes" xml:space="preserve">
          <source>4 Plugins of Janus-proxy</source>
          <target state="translated">4 Janus-proxy 플러그인</target>
        </trans-unit>
        <trans-unit id="a1d8744328abfc2b1136e38b55cac4fe233a5084" translate="yes" xml:space="preserve">
          <source>5 Topology</source>
          <target state="translated">5 토폴로지</target>
        </trans-unit>
        <trans-unit id="07ab28408027adfb3c5b4a5082b2e949c49835a9" translate="yes" xml:space="preserve">
          <source>6 Installation</source>
          <target state="translated">6 설치</target>
        </trans-unit>
        <trans-unit id="2eb0881f3547cb3f190daa847a88859de0380b55" translate="yes" xml:space="preserve">
          <source>7 Configure and Start</source>
          <target state="translated">7 구성 및 시작</target>
        </trans-unit>
        <trans-unit id="bf0492a84bc352227fde5b688b883113eacbe326" translate="yes" xml:space="preserve">
          <source>8 Requirements for the backend Janus server</source>
          <target state="translated">8 백엔드 Janus 서버에 대한 요구 사항</target>
        </trans-unit>
        <trans-unit id="af24374bb40fa17421bf9b291d3f82eca139f83e" translate="yes" xml:space="preserve">
          <source>9 Directory structure of project source</source>
          <target state="translated">9 프로젝트 소스의 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="4be71d5bc5f63658530bfc55ef2d1749da8c59e9" translate="yes" xml:space="preserve">
          <source>Add support for VP9 and H.264 profile negotiation for videoroom and echotest plugin</source>
          <target state="translated">videoroom 및 echotest 플러그인에 대한 VP9 및 H.264 프로필 협상 지원 추가</target>
        </trans-unit>
        <trans-unit id="a7a7af61e1056dceb2fcd3cbbe976ecb69ee449d" translate="yes" xml:space="preserve">
          <source>Added VideoRoom option to only allow admins to change the recording state</source>
          <target state="translated">관리자 만 녹화 상태를 변경할 수 있도록 VideoRoom 옵션을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="fd24b09c038412fe25fa4b8929b6aa56f9c8b6d7" translate="yes" xml:space="preserve">
          <source>Added support for multichannel Opus audio (surround) for videoroom</source>
          <target state="translated">videoroom 용 다중 채널 Opus 오디오 (서라운드) 지원 추가</target>
        </trans-unit>
        <trans-unit id="3bfa88b4d64927d2e9acd68185eb251d2fa0ace9" translate="yes" xml:space="preserve">
          <source>All notable changes to this project will be documented in this file.</source>
          <target state="translated">이 프로젝트의 모든 주목할만한 변경 사항은이 파일에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="6b35bfeccae8340912d4137d287e493b4249a08d" translate="yes" xml:space="preserve">
          <source>Before installation, the following requirements must be satisfied.</source>
          <target state="translated">설치하기 전에 다음 요구 사항을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="546f218e8529edfe22b87b1951a727e211c68194" translate="yes" xml:space="preserve">
          <source>By now, Janus-proxy / Janus-sentinel only support corresponding with the backend Janus server by WebSocket, not support other transport.</source>
          <target state="translated">지금까지 Janus-proxy / Janus-sentinel은 WebSocket의 백엔드 Janus 서버에 해당하는 것만 지원하고 다른 전송은 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b7674fa4e946cd1282403f3c17a51451a98d995d" translate="yes" xml:space="preserve">
          <source>Calculate the workload of the Janus server</source>
          <target state="translated">Janus 서버의 워크로드 계산</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="4e684aa35816b578efc02729254899c88a1ca469" translate="yes" xml:space="preserve">
          <source>Communicate with the backend Janus server by WebSocket</source>
          <target state="translated">WebSocket으로 백엔드 Janus 서버와 통신</target>
        </trans-unit>
        <trans-unit id="3cb88ec70a66014b480a477c7ec16dbd9103dfd5" translate="yes" xml:space="preserve">
          <source>Consistent API with the Janus server (until v0.9.2), which is compatible with the original client of the Janus server</source>
          <target state="translated">Janus 서버의 원래 클라이언트와 호환되는 Janus 서버 (v0.9.2까지)와 일관된 API</target>
        </trans-unit>
        <trans-unit id="9e06611901ec0313936955642e9e89b68d02ef41" translate="yes" xml:space="preserve">
          <source>Edit the configuration file of Janus-proxy, then type the following commands to start.</source>
          <target state="translated">Janus-proxy의 구성 파일을 편집 한 후 다음 명령을 입력하여 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="86b230fe801944ced1a4112e5e50d9e31e36f93f" translate="yes" xml:space="preserve">
          <source>Edit the configuration file of Janus-sentinel, then type the following commands to start.</source>
          <target state="translated">Janus-sentinel의 구성 파일을 편집 한 후 다음 명령을 입력하여 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="b6e42cf72291c96cd0e1ecb0af311a6c0b3a8334" translate="yes" xml:space="preserve">
          <source>Enable / disable recording while conference is in progress for videoroom</source>
          <target state="translated">비디오 룸에 대한 회의가 진행되는 동안 녹화 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="a6c3a5654b0327a673787cc32a9c96652bfe3947" translate="yes" xml:space="preserve">
          <source>For developer, who want to debug the Janus-cloud, and install it for develop mode:</source>
          <target state="translated">Janus 클라우드를 디버그하고 개발 모드로 설치하려는 개발자의 경우 :</target>
        </trans-unit>
        <trans-unit id="d0949e4f7904bf5ab157fb8954dfc648753fcceb" translate="yes" xml:space="preserve">
          <source>Install from PyPi</source>
          <target state="translated">PyPi에서 설치</target>
        </trans-unit>
        <trans-unit id="613dd18f7e7415ce2c81dc9135790c3041d211be" translate="yes" xml:space="preserve">
          <source>Install from source</source>
          <target state="translated">소스에서 설치</target>
        </trans-unit>
        <trans-unit id="f9f22e45430e8d762e7cd4989e2f5da2aea25642" translate="yes" xml:space="preserve">
          <source>Its APIs is compatible with the videocall plugin of Janus-gateway util v0.9.2.</source>
          <target state="translated">API는 Janus-gateway util v0.9.2의 videocall 플러그인과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="f2c774a8b17b0a37164977ecba78cdd70bfaa895" translate="yes" xml:space="preserve">
          <source>Its APIs is compatible with the videoroom plugin of Janus-gateway util v0.9.5.</source>
          <target state="translated">API는 Janus-gateway util v0.9.5의 videoroom 플러그인과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="e5fb55623ca840e22d6a35d3a1bd376c2b029ab1" translate="yes" xml:space="preserve">
          <source>Janus is an excellent WebRTC server, simple and well-structured. Its pluggable design and sophisticated API is impressive and amazing. But it also comes with some disadvantage.
First, Janus is design to be a standalone server, which cannot be scale to support the huge RTC workload. But in the cloud-based environment, scalability is essential. With the help of Janus-cloud, engineers can easily build a large and scalable cluster system of WebRTC server.
Second, Janus processes the WebRTC signalling, as well as the media data. But in the real communication world, signalling and media are usually divided into two plane, so that more flexibility can be provided. Janus-cloud fulfills this requirement by handling the signalling only and leaving media to Janus-server. Janus-cloud is developed by Python3 language which is more suitable to deal with the signalling, in the other hand, C language, which is used by Janus server, is more suitable to transmit media data in an efficient way .</source>
          <target state="translated">Janus는 간단하고 잘 구성된 훌륭한 WebRTC 서버입니다. 플러그 형 디자인과 정교한 API는 인상적이고 놀랍습니다. 그러나 또한 몇 가지 단점이 있습니다. 첫째, Janus는 거대한 RTC 워크로드를 지원하도록 확장 할 수없는 독립형 서버로 설계되었습니다. 그러나 클라우드 기반 환경에서는 확장 성이 필수적입니다. Janus-cloud의 도움으로 엔지니어는 WebRTC 서버의 크고 확장 가능한 클러스터 시스템을 쉽게 구축 할 수 있습니다. 둘째, Janus는 WebRTC 시그널링과 미디어 데이터를 처리합니다. 그러나 실제 통신 세계에서 시그널링과 미디어는 일반적으로 두 개의 평면으로 나누어 져있어 더 많은 유연성을 제공 할 수 있습니다. Janus-cloud는 신호 만 처리하고 미디어를 Janus-server에 맡김으로써이 요구 사항을 충족합니다.Janus-cloud는 신호 처리에 더 적합한 Python3 언어로 개발 된 반면, Janus 서버에서 사용하는 C 언어는 미디어 데이터를 효율적으로 전송하는 데 더 적합합니다.</target>
        </trans-unit>
        <trans-unit id="fed1fe19451ff72552de86a1b08b972d5550dc5e" translate="yes" xml:space="preserve">
          <source>Janus-cloud</source>
          <target state="translated">야누스 클라우드</target>
        </trans-unit>
        <trans-unit id="f5589755f48ff049c4f45276d983e407c922413a" translate="yes" xml:space="preserve">
          <source>Janus-cloud has two main components, Janus-proxy and Janus-sentinel.</source>
          <target state="translated">Janus-cloud에는 Janus-proxy와 Janus-sentinel의 두 가지 주요 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d32fc3795642df7434e8ecb9b2811cc9efc2f515" translate="yes" xml:space="preserve">
          <source>Janus-cloud is a cluster solution for Janus WebRTC server, by API proxy approach</source>
          <target state="translated">Janus-cloud는 API 프록시 접근 방식으로 Janus WebRTC 서버를위한 클러스터 솔루션입니다.</target>
        </trans-unit>
        <trans-unit id="ffd75b5c9406c6852b86ccbdf179f8684057a41b" translate="yes" xml:space="preserve">
          <source>Janus-cloud is an JANUS API proxy to construct the Janus WebRTC server cluster, which is based on Python3 so that it can be deployed on any platform. A Back-to-Back API proxy would be deployed between the client and the original Janus servers. In one hand, the WebRTC client communicates with Janus-cloud proxy through Janus' original  API, just like with the real Janus server. In the other hand, Janus-cloud proxy would forwards the requests to the back-end Janus server in the cluster on behave of the client. Janus-cloud proxy is only responsible for the API (signalling) processing, while media streams is still left to Janus server to relay, so that the clients would establish the PeerConnections with the back-end Janus server directly, without Janus-cloud involvement. In this case, Janus-cloud proxy can be considered as a WebRTC signal server, while the original Janus server would be downgraded to work as a WebRTC media server.</source>
          <target state="translated">Janus-cloud는 모든 플랫폼에 배포 할 수 있도록 Python3을 기반으로하는 Janus WebRTC 서버 클러스터를 구성하는 JANUS API 프록시입니다. Back-to-Back API 프록시는 클라이언트와 원래 Janus 서버 사이에 배포됩니다. 한편으로 WebRTC 클라이언트는 실제 Janus 서버와 마찬가지로 Janus의 원래 API를 통해 Janus 클라우드 프록시와 통신합니다. 반면 Janus-cloud 프록시는 클라이언트의 동작에 따라 클러스터의 백엔드 Janus 서버로 요청을 전달합니다. Janus-cloud 프록시는 API (시그널링) 처리 만 담당하는 반면 미디어 스트림은 여전히 ​​Janus 서버에 전달되어 릴레이하므로 클라이언트는 Janus 클라우드의 개입없이 직접 백엔드 Janus 서버와 PeerConnections를 설정할 수 있습니다. 이 경우 Janus-cloud 프록시는 WebRTC 신호 서버로 간주 할 수 있습니다.원래 Janus 서버는 WebRTC 미디어 서버로 작동하도록 다운 그레이드됩니다.</target>
        </trans-unit>
        <trans-unit id="f359acba03f43f4bdb24b3c719ee63b0d6c33191" translate="yes" xml:space="preserve">
          <source>Janus-cloud supports python 3.5 and up. It's strongly recommended to install Janus-cloud in a python virtual environment, like &quot;venv&quot;.</source>
          <target state="translated">Janus-cloud는 python 3.5 이상을 지원합니다. &quot;venv&quot;와 같은 Python 가상 환경에 Janus-cloud를 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e7ead6e7558aa2af82ae7fe36341684d4056accb" translate="yes" xml:space="preserve">
          <source>Janus-proxy</source>
          <target state="translated">야누스 프록시</target>
        </trans-unit>
        <trans-unit id="0bedea0f1b557a10fda42863807dd24dc4183ca6" translate="yes" xml:space="preserve">
          <source>Janus-proxy is composed of many plugins, and the business logic of Janus-proxy is implemented by these plugins. The following plugins are provided within Janus-proxy by now.</source>
          <target state="translated">Janus-proxy는 많은 플러그인으로 구성되어 있으며 Janus-proxy의 비즈니스 로직은 이러한 플러그인으로 구현됩니다. 지금까지 Janus-proxy 내에 다음 플러그인이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="fc53c7b441da04ebfbadc0bb7d321001a76e43c7" translate="yes" xml:space="preserve">
          <source>Janus-proxy is often deployed on a standalone machine between WebRTC client(like Browser) and Janus server. All signal  from WebRTC client would be received by Janus-proxy first , then relayed to one of the backend Janus servers.</source>
          <target state="translated">Janus-proxy는 종종 WebRTC 클라이언트 (브라우저와 같은)와 Janus 서버 사이의 독립형 컴퓨터에 배포됩니다. WebRTC 클라이언트의 모든 신호는 Janus-proxy가 먼저 수신 한 다음 백엔드 Janus 서버 중 하나로 릴레이됩니다.</target>
        </trans-unit>
        <trans-unit id="621b96dfe72bb25b72d9e7e064c02317a2e0fff7" translate="yes" xml:space="preserve">
          <source>Janus-proxy is responsible for signal handling, which communicates with the WebRTC client and relay the signal from client to the backend Janus servers. It conceals the detail of the backend Janus server cluster and output the same interface with the original Janus server. Janus-proxy is usually running on a standalone machine which is between the WebRTC client and the backend Janus servers. The WebRTC client interact with Janus-proxy for signal, but transfer to/from the real Janus Server for media. Janus-proxy has the following features/limitation:</source>
          <target state="translated">Janus-proxy는 WebRTC 클라이언트와 통신하고 클라이언트에서 백엔드 Janus 서버로 신호를 릴레이하는 신호 처리를 담당합니다. 백엔드 Janus 서버 클러스터의 세부 사항을 숨기고 원래 Janus 서버와 동일한 인터페이스를 출력합니다. Janus-proxy는 일반적으로 WebRTC 클라이언트와 백엔드 Janus 서버 사이에있는 독립형 컴퓨터에서 실행됩니다. WebRTC 클라이언트는 신호를 위해 Janus-proxy와 상호 작용하지만 미디어를 위해 실제 Janus 서버로 /에서 전송합니다. Janus-proxy에는 다음과 같은 기능 / 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="de94395e4dcdc8ca4c1826746908c78bc8b954a5" translate="yes" xml:space="preserve">
          <source>Janus-proxy support api_secret authorization</source>
          <target state="translated">Janus-proxy 지원 api_secret 인증</target>
        </trans-unit>
        <trans-unit id="000db7e4745d74f0ce05afaa3c7acd747f58cb9e" translate="yes" xml:space="preserve">
          <source>Janus-sentinel</source>
          <target state="translated">야누스 센티넬</target>
        </trans-unit>
        <trans-unit id="691e7afd8827734587439b2a7f69e465c3b1d885" translate="yes" xml:space="preserve">
          <source>Janus-sentinel is often deployed along with the Janus server on the same machine. Janus-sentinel keep Janus process running and monitor its status, then report to Janus-proxy at intervals.</source>
          <target state="translated">Janus-sentinel은 종종 Janus 서버와 함께 동일한 머신에 배포됩니다. Janus-sentinel은 Janus 프로세스를 계속 실행하고 상태를 모니터링 한 다음 간격을두고 Janus-proxy에보고합니다.</target>
        </trans-unit>
        <trans-unit id="33ab00dc15f3cc75f2d8e85d353cf08ee0330d11" translate="yes" xml:space="preserve">
          <source>Janus-sentinel is responsible to care for the Janus server, normally, it runs at the same (virtual) machine with the Janus server. it has the following capabilities:</source>
          <target state="translated">Janus-sentinel은 Janus 서버를 관리 할 책임이 있으며, 일반적으로 Janus 서버와 동일한 (가상) 머신에서 실행됩니다. 다음과 같은 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa4893ce72dd265afcbb40373e95ad90ad9dacc4" translate="yes" xml:space="preserve">
          <source>Janus-sentinel support admin_secret for sending admin API request</source>
          <target state="translated">Janus-sentinel은 admin API 요청을 보내기 위해 admin_secret을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="db8842520ac6d1e672e56b2942d3cbaf0674229c" translate="yes" xml:space="preserve">
          <source>Keep It Simple, and Stupid</source>
          <target state="translated">단순하고 어리석게 유지</target>
        </trans-unit>
        <trans-unit id="6ad306f26ea1f1e6f1b4447c69e610f4ae97351b" translate="yes" xml:space="preserve">
          <source>Monitor the status of the Janus server, and report it to Janus-proxy through HTTP</source>
          <target state="translated">Janus 서버의 상태를 모니터링하고 HTTP를 통해 Janus-proxy에보고합니다.</target>
        </trans-unit>
        <trans-unit id="51c2cbd9aa575946d7dbf6299fa2dfc6761724d8" translate="yes" xml:space="preserve">
          <source>Note: the process of the Janus server can be started and maintained by the other system tools or system administrator manual, instead of Janus-sentinel. In this case, Janus-sentinel is only responsible for monitoring Janus server's status by its WebSocket API. But this approach is not a good idea.</source>
          <target state="translated">참고 : Janus 서버의 프로세스는 Janus-sentinel 대신 다른 시스템 도구 또는 시스템 관리자 설명서로 시작하고 유지 관리 할 수 ​​있습니다. 이 경우 Janus-sentinel은 WebSocket API에 의한 Janus 서버의 상태 모니터링 만 담당합니다. 그러나이 방법은 좋은 생각이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="aa38ad8efd658f7c9ffb75b50f1555fc4c6024db" translate="yes" xml:space="preserve">
          <source>Only provide the WebSocket(s) API, not provide RESTful, RabbitMQ, MQTT, Nanomsg and UnixSockets like Janus</source>
          <target state="translated">WebSocket (s) API 만 제공하고 Janus와 같은 RESTful, RabbitMQ, MQTT, Nanomsg 및 UnixSocket은 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85efcc6390102f6bcdb1a7a67537e8875c9e9f87" translate="yes" xml:space="preserve">
          <source>Pluggable, support the new features through developing the new plugin</source>
          <target state="translated">플러그 가능, 새로운 플러그인 개발을 통해 새로운 기능 지원</target>
        </trans-unit>
        <trans-unit id="ed5eb9491d5f8a2b73f639c8a1b9f9064aeacaed" translate="yes" xml:space="preserve">
          <source>Pluggable. Its business functionality is implemented by the various plugins</source>
          <target state="translated">플러그 가능. 비즈니스 기능은 다양한 플러그인으로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="e4b9eac34cf85f155cf34748d6e80531d30ee3d4" translate="yes" xml:space="preserve">
          <source>Python &amp;gt;= 3.5</source>
          <target state="translated">Python&amp;gt; = 3.5</target>
        </trans-unit>
        <trans-unit id="e6bb8859a2f82dc2eb2920b0c520b16469ee8f8a" translate="yes" xml:space="preserve">
          <source>Scalable, Janus media servers can be added/removed to/from the cluster dynamically</source>
          <target state="translated">확장 가능한 Janus 미디어 서버를 클러스터에 동적으로 추가 / 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f3a3f8425806efc02879be0b9a0df716236a0f8" translate="yes" xml:space="preserve">
          <source>Scalable. The backend Janus server can be added/removed to/from Janus-proxy dynamically</source>
          <target state="translated">확장 가능. 백엔드 Janus 서버는 Janus-proxy에 동적으로 추가 / 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b2388feb3a0d592dc4c0a87fe3fe13c4ae8ebfb" translate="yes" xml:space="preserve">
          <source>Some resource files, like sample configuration(with explanations), html test scripts, and etc, are shipped within the project source.
After installation, these resource would be installed under &lt;strong&gt;&amp;lt;sys.prefix&amp;gt;/opt/janus-cloud&lt;/strong&gt; where &amp;lt;sys.prefix&amp;gt; is the root directory of your filesystem. or the the root directory of virtual environment if install in a virtual environment.</source>
          <target state="translated">샘플 구성 (설명 포함), html 테스트 스크립트 등과 같은 일부 리소스 파일은 프로젝트 소스에 포함되어 있습니다. 설치 후 이러한 리소스는 &lt;strong&gt;&amp;lt;sys.prefix&amp;gt; / opt / janus-cloud에&lt;/strong&gt; 설치됩니다. 여기서 &amp;lt;sys.prefix&amp;gt;는 파일 시스템의 루트 디렉터리입니다. 또는 가상 환경에 설치하는 경우 가상 환경의 루트 디렉토리.</target>
        </trans-unit>
        <trans-unit id="3a2d617d400862e5208f80810848194503222204" translate="yes" xml:space="preserve">
          <source>Supervise the process of the Janus server, and keep it running</source>
          <target state="translated">Janus 서버의 프로세스를 감독하고 계속 실행합니다.</target>
        </trans-unit>
        <trans-unit id="638ad8e7307d8226e233ded56c0ba701cb74785c" translate="yes" xml:space="preserve">
          <source>Support Janus media service self-register, service monitor, circuit breaker</source>
          <target state="translated">Janus 미디어 서비스 자체 등록, 서비스 모니터, 회로 차단기 지원</target>
        </trans-unit>
        <trans-unit id="e073de32adcfb72f0d02d7f99a6735df45e35dbf" translate="yes" xml:space="preserve">
          <source>Support RESTful admin interface</source>
          <target state="translated">RESTful 관리 인터페이스 지원</target>
        </trans-unit>
        <trans-unit id="08c952bff6e4925b2555c8a49aa23d68e7fc3368" translate="yes" xml:space="preserve">
          <source>Support multi algorithm to choose which backend server to relay signal</source>
          <target state="translated">신호를 중계 할 백엔드 서버를 선택하는 다중 알고리즘 지원</target>
        </trans-unit>
        <trans-unit id="9664debc06de13e05160b5547727478f15993848" translate="yes" xml:space="preserve">
          <source>Support post the status/workload statistic to multi HTTP URL</source>
          <target state="translated">다중 HTTP URL에 상태 / 워크로드 통계 게시 지원</target>
        </trans-unit>
        <trans-unit id="ab953b7d4ecf8fa377f63a14bb449d890dd0cf4a" translate="yes" xml:space="preserve">
          <source>The APIs of Videoroom, Videocall, P2pcall is compatible with Janus-gateway of v0.9.2</source>
          <target state="translated">Videoroom, Videocall, P2pcall의 API는 v0.9.2의 Janus-gateway와 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="325052c239093f44ec7b528cabd07953d2b168ae" translate="yes" xml:space="preserve">
          <source>The structure of Janus-cloud would be similar with the below topology.</source>
          <target state="translated">Janus-cloud의 구조는 아래 토폴로지와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="b32bb89fa947270f5232a126844f11bc035ae4c2" translate="yes" xml:space="preserve">
          <source>This is a plugin implementing a videoconferencing SFU, just like videoroom plugin of the Janus server. It tries to keep almost the same API with the videoroom plugin of Janus server, and scale it out by distributing different publishers to different backend Janus server, so that Janus-proxy can support more publishers in one videoconferencing room than single Janus server. Contrast to the videoroom plugin of Janus server, there are some limitations below on this plugin to simplify the code.</source>
          <target state="translated">Janus 서버의 비디오 룸 플러그인처럼 화상 회의 SFU를 구현하는 플러그인입니다. Janus 서버의 videoroom 플러그인으로 거의 동일한 API를 유지하고 Janus-proxy가 단일 Janus 서버보다 하나의 화상 회의 룸에서 더 많은 게시자를 지원할 수 있도록 다른 게시자를 다른 백엔드 Janus 서버에 배포하여 확장하려고합니다. Janus 서버의 videoroom 플러그인과 달리이 플러그인에는 코드를 단순화하기위한 몇 가지 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8ed0f916765df142377d0a04fabcaf231b358f1" translate="yes" xml:space="preserve">
          <source>This is a simple video call plugin which allow two WebRTC peer communicate with each other through the medium Janus server. It achieves the same function and outputs the same APIs with the videocall plugin of Janus server, as well as it can distribute the workload among the backend Janus servers.
Moreover, Janus-proxy also can be scaled out for videocall plugin to handle much more video calls. Different WebRTC peers may be assigned to different Janus-proxies which is able to communicates with each other through admin interface.</source>
          <target state="translated">이것은 두 개의 WebRTC 피어가 중형 Janus 서버를 통해 서로 통신 할 수 있도록하는 간단한 화상 통화 플러그인입니다. Janus 서버의 videocall 플러그인으로 동일한 기능을 수행하고 동일한 API를 출력 할뿐만 아니라 백엔드 Janus 서버간에 워크로드를 분산시킬 수 있습니다. 또한 Janus-proxy는 훨씬 더 많은 화상 통화를 처리하기 위해 videocall 플러그인을 위해 확장 될 수도 있습니다. 다른 WebRTC 피어는 관리자 인터페이스를 통해 서로 통신 할 수있는 다른 Janus 프록시에 할당 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2325337d819df68aabbcf80a34b6ef27975bd6fb" translate="yes" xml:space="preserve">
          <source>This is a trivial EchoTest plugin which is only used for test and show plugin interface of Janus-proxy. It provide developers a skeleton for the new plugin development</source>
          <target state="translated">Janus-proxy의 테스트 및 표시 플러그인 인터페이스에만 사용되는 사소한 EchoTest 플러그인입니다. 개발자에게 새로운 플러그인 개발을위한 골격을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="25946a17cc15fb169d425631ae5e0108460377e7" translate="yes" xml:space="preserve">
          <source>This is an other video call plugin, very similar to the videocall plugin, except that two WebRTC peer communicate with each other in p2p mode. It outputs same APIs like the videocall plugin, and also make Janus-proxy be able to scaled out to handle more video call. However no backend Janus servers is need to handle the media stream, because the WebRTC peers transmit the media data with each other directly.</source>
          <target state="translated">이것은 두 개의 WebRTC 피어가 p2p 모드에서 서로 통신한다는 점을 제외하면 videocall 플러그인과 매우 유사한 다른 화상 통화 플러그인입니다. videocall 플러그인과 같은 API를 출력하고 Janus-proxy를 확장하여 더 많은 화상 통화를 처리 할 수 ​​있습니다. 그러나 WebRTC 피어가 서로 직접 미디어 데이터를 전송하기 때문에 백엔드 Janus 서버는 미디어 스트림을 처리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4dfec7a2443dfed480702d9b3d9eee522dbe453e" translate="yes" xml:space="preserve">
          <source>To install Janus-cloud from PyPi,</source>
          <target state="translated">PyPi에서 Janus-cloud를 설치하려면,</target>
        </trans-unit>
        <trans-unit id="ac4c2f913e4ec7eacb5fdd6f2dfbb198884f31fa" translate="yes" xml:space="preserve">
          <source>To install Janus-cloud from project source</source>
          <target state="translated">프로젝트 소스에서 Janus-cloud를 설치하려면</target>
        </trans-unit>
        <trans-unit id="e091bdc9b16a83b936ff50c437d0a48666a82dd2" translate="yes" xml:space="preserve">
          <source>WebSocket transport must be enabled to correspond with Janus-proxy/Janus-sentinel</source>
          <target state="translated">WebSocket 전송은 Janus-proxy / Janus-sentinel과 일치하도록 활성화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d354cdd36487ebdc2b92040002d37c73cff2e87c" translate="yes" xml:space="preserve">
          <source>Where &amp;lt;project_root&amp;gt; is the root directory of project source, which contains the setup.py file</source>
          <target state="translated">여기서 &amp;lt;project_root&amp;gt;는 setup.py 파일을 포함하는 프로젝트 소스의 루트 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="ba7615aa9ec2e85fa946978ece122db1c50fd0b8" translate="yes" xml:space="preserve">
          <source>[v0.1.0]  - 2020-03-29</source>
          <target state="translated">[v0.1.0]-2020-03-29</target>
        </trans-unit>
        <trans-unit id="30c56d0245e0740614841177c9444ce276935c05" translate="yes" xml:space="preserve">
          <source>[v0.2.0]  - 2020-05-10</source>
          <target state="translated">[v0.2.0]-2020-05-10</target>
        </trans-unit>
        <trans-unit id="b052fa88b2bf9d745c75c64c6b8a5d5c304b3c2c" translate="yes" xml:space="preserve">
          <source>[v0.3.0]  - 2020-06-21</source>
          <target state="translated">[v0.3.0]-2020-06-21</target>
        </trans-unit>
        <trans-unit id="709edb546fc2d9b717e27eb5c2b31536634a9fad" translate="yes" xml:space="preserve">
          <source>add rtp_forward operations to the admin API of videoroom plugin</source>
          <target state="translated">videoroom 플러그인의 관리자 API에 rtp_forward 작업 추가</target>
        </trans-unit>
        <trans-unit id="afbd8a2d1ad7c0a8c233806ccffea23907cd9e18" translate="yes" xml:space="preserve">
          <source>audiolevel_event not support</source>
          <target state="translated">audiolevel_event가 지원되지 않음</target>
        </trans-unit>
        <trans-unit id="36e449bd954cc5f4bf22027606a7d8e79960f7a9" translate="yes" xml:space="preserve">
          <source>echotest</source>
          <target state="translated">에코 테스트</target>
        </trans-unit>
        <trans-unit id="c327d71c9f5c8e728b0e8b1998c076a2af407cd2" translate="yes" xml:space="preserve">
          <source>echotest, videocall, p2pcall, videoroom plugins of janus-proxy are ready</source>
          <target state="translated">janus-proxy의 echotest, videocall, p2pcall, videoroom 플러그인이 준비되었습니다.</target>
        </trans-unit>
        <trans-unit id="9007263c1e1fbbdbf2a143cb0fe6935a11136140" translate="yes" xml:space="preserve">
          <source>initial version released</source>
          <target state="translated">초기 버전 출시</target>
        </trans-unit>
        <trans-unit id="42f20359d1f12f652e0e1f08c5bef2bfc8a0bad2" translate="yes" xml:space="preserve">
          <source>janus-proxy</source>
          <target state="translated">야누스 프록시</target>
        </trans-unit>
        <trans-unit id="03c90eed57dd83eeb6d754767062e29dafa2ae19" translate="yes" xml:space="preserve">
          <source>janus-proxy and janus-sentinel are finished</source>
          <target state="translated">janus-proxy 및 janus-sentinel이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="709f4a2d645f6689f31e6a971bf44a8827d5dec2" translate="yes" xml:space="preserve">
          <source>janus-sentinel</source>
          <target state="translated">야누스 센티넬</target>
        </trans-unit>
        <trans-unit id="3d79ee67b07dd30cce43191d0f775f0fc2f744e7" translate="yes" xml:space="preserve">
          <source>p2pcall</source>
          <target state="translated">p2pcall</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="bff5288d43b5b0b423a623fd27ab60ad387791d3" translate="yes" xml:space="preserve">
          <source>setuptools</source>
          <target state="translated">설정 도구</target>
        </trans-unit>
        <trans-unit id="af0a40ca10d135b205bf9a9f908de4e41e62b17e" translate="yes" xml:space="preserve">
          <source>string_ids not support</source>
          <target state="translated">string_ids는 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7a73ae193ee383a1dc64f98dae66fdaecf66d74e" translate="yes" xml:space="preserve">
          <source>subscriber switch not support</source>
          <target state="translated">구독자 전환이 지원되지 않음</target>
        </trans-unit>
        <trans-unit id="be10da670f2464a2cf78dcef8a14d930ac84eff5" translate="yes" xml:space="preserve">
          <source>support redis to store the backend server info</source>
          <target state="translated">백엔드 서버 정보를 저장하기 위해 redis 지원</target>
        </trans-unit>
        <trans-unit id="2e889bea7a35e5a68464d2ba557a0907adabb778" translate="yes" xml:space="preserve">
          <source>support rtp_forward feature for videoroom</source>
          <target state="translated">videoroom에 대한 rtp_forward 기능 지원</target>
        </trans-unit>
        <trans-unit id="704187f0fb6c2b5ab112b0d1dee82a5e2c5cd3d6" translate="yes" xml:space="preserve">
          <source>there are the following requirements on the backend Janus server when deploying with Janus-cloud:</source>
          <target state="translated">Janus-cloud로 배포 할 때 백엔드 Janus 서버에 대한 다음 요구 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e40c22816f2775685d4383008b025693a4f6b0b8" translate="yes" xml:space="preserve">
          <source>token_auth must be disabled</source>
          <target state="translated">token_auth를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="da28e2e86c6d6c7a7b3f692a8c370aa1e8406cff" translate="yes" xml:space="preserve">
          <source>videocall</source>
          <target state="translated">영상 통화</target>
        </trans-unit>
        <trans-unit id="30aa3d5e84bff79310229e26a9a54a34e4ce2348" translate="yes" xml:space="preserve">
          <source>videoroom</source>
          <target state="translated">비디오 룸</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
