<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/pymodbus3/">
    <body>
      <group id="pymodbus3">
        <trans-unit id="74922952758a54f06f6d48f4daf8c0276617fa76" translate="yes" xml:space="preserve">
          <source>A fully featured modbus protocol stack in python</source>
          <target state="translated">A fully featured modbus protocol stack in python</target>
        </trans-unit>
        <trans-unit id="0d2d134db505cbc6d9bc446e486439584770c382" translate="yes" xml:space="preserve">
          <source>A number of backing contexts (database, redis, a slave device)</source>
          <target state="translated">A number of backing contexts (database, redis, a slave device)</target>
        </trans-unit>
        <trans-unit id="c692f6190963ed1af73527164b50e788b040e679" translate="yes" xml:space="preserve">
          <source>Also, if you have questions, please ask them on the mailing list
so that others can benefit from the results and so that I can
trace them. Also you can write to
&lt;a href=&quot;https://github.com/uzumaxy/pymodbus3/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">Also, if you have questions, please ask them on the mailing list so that others can benefit from the results and so that I can trace them. Also you can write to &lt;a href=&quot;https://github.com/uzumaxy/pymodbus3/issues&quot;&gt;issue tracker&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1f0b9e73dd03c1b612d1314b8d7601eaec599171" translate="yes" xml:space="preserve">
          <source>Although most system administrators will find little need for a Modbus
server on any modern hardware, they may find the need to query devices on
their network for status (PDU, PDR, UPS, etc).  Since the library is written
in python, it allows for easy scripting and/or integration into their existing
solutions.</source>
          <target state="translated">Although most system administrators will find little need for a Modbus server on any modern hardware, they may find the need to query devices on their network for status (PDU, PDR, UPS, etc). Since the library is written in python, it allows for easy scripting and/or integration into their existing solutions.</target>
        </trans-unit>
        <trans-unit id="e6b160998be219b79e46aca4c0f0478875bd8c00" translate="yes" xml:space="preserve">
          <source>Architecture documentation</source>
          <target state="translated">Architecture documentation</target>
        </trans-unit>
        <trans-unit id="00226fe869bfa9577ba9abd9dcfa996e181d9909" translate="yes" xml:space="preserve">
          <source>Can function as a fully implemented modbus server</source>
          <target state="translated">Can function as a fully implemented modbus server</target>
        </trans-unit>
        <trans-unit id="ff9d159f4b57cd4211944c2fe4f5fb2989bdb1ea" translate="yes" xml:space="preserve">
          <source>Client Features</source>
          <target state="translated">Client Features</target>
        </trans-unit>
        <trans-unit id="f9d1da893a501418562b23e1d0b819ba6eb34a25" translate="yes" xml:space="preserve">
          <source>Continuing, most monitoring software needs to be stress tested against
hundreds or even thousands of devices (why this was originally written), but
getting access to that many is unwieldy at best. The pymodbus3 server will allow
a user to test as many devices as their base operating system will allow (&lt;em&gt;allow&lt;/em&gt;
in this case means how many Virtual IP addresses are allowed).</source>
          <target state="translated">Continuing, most monitoring software needs to be stress tested against hundreds or even thousands of devices (why this was originally written), but getting access to that many is unwieldy at best. The pymodbus3 server will allow a user to test as many devices as their base operating system will allow (&lt;em&gt;allow&lt;/em&gt; in this case means how many Virtual IP addresses are allowed).</target>
        </trans-unit>
        <trans-unit id="92b160cca65be8603e8e4b7b2d13d48f0f885720" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2005 S.W.A.C. Bohemia s.r.o., Czech Republic.</source>
          <target state="translated">Copyright (c) 2001-2005 S.W.A.C. Bohemia s.r.o., Czech Republic.</target>
        </trans-unit>
        <trans-unit id="c4899e9b34a68ea3830d67858e5a7b6dcab9b96e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2005 S.W.A.C. GmbH, Germany.</source>
          <target state="translated">Copyright (c) 2001-2005 S.W.A.C. GmbH, Germany.</target>
        </trans-unit>
        <trans-unit id="424c9d03bdf36bdedfc25e919a097f58dcae8c05" translate="yes" xml:space="preserve">
          <source>Current Work In Progress</source>
          <target state="translated">Current Work In Progress</target>
        </trans-unit>
        <trans-unit id="bd752afe1a0cdde931f325e205edf07755b6b9d4" translate="yes" xml:space="preserve">
          <source>Either method will install all the required dependencies
(at their appropriate versions) for your current python distribution.</source>
          <target state="translated">Either method will install all the required dependencies (at their appropriate versions) for your current python distribution.</target>
        </trans-unit>
        <trans-unit id="422445b132a0ddb86add309db860ce13ab867af6" translate="yes" xml:space="preserve">
          <source>Example Code</source>
          <target state="translated">예제 코드</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">풍모</target>
        </trans-unit>
        <trans-unit id="2812856fd301401e145e5f46d3e62742a07114bd" translate="yes" xml:space="preserve">
          <source>Fixing bugs/feature requests</source>
          <target state="translated">Fixing bugs/feature requests</target>
        </trans-unit>
        <trans-unit id="7217ab5839e8c2e81b09ad833345eabc13656de1" translate="yes" xml:space="preserve">
          <source>For more advanced examples, check out the examples included in the
repository. If you have created any utilities that meet a specific
need, feel free to submit them so others can benefit.</source>
          <target state="translated">For more advanced examples, check out the examples included in the repository. If you have created any utilities that meet a specific need, feel free to submit them so others can benefit.</target>
        </trans-unit>
        <trans-unit id="48847b866091e6689e854f1a22eef0312dcb8e3f" translate="yes" xml:space="preserve">
          <source>For more information please browse the
&lt;a href=&quot;http://readthedocs.org/docs/pymodbus3/en/latest/index.html&quot;&gt;project documentation&lt;/a&gt;.</source>
          <target state="translated">For more information please browse the &lt;a href=&quot;http://readthedocs.org/docs/pymodbus3/en/latest/index.html&quot;&gt;project documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4320a65933d9e19c00b11be8c8fe188b4d4e8306" translate="yes" xml:space="preserve">
          <source>For those of you that just want to get started fast, here you go:</source>
          <target state="translated">For those of you that just want to get started fast, here you go:</target>
        </trans-unit>
        <trans-unit id="c534e6c310b392321a45e64e71ebde9113695f96" translate="yes" xml:space="preserve">
          <source>Full read/write protocol on discrete and register</source>
          <target state="translated">Full read/write protocol on discrete and register</target>
        </trans-unit>
        <trans-unit id="a5f47261269dedca3fff52f86da539200ce5032a" translate="yes" xml:space="preserve">
          <source>Full server control context (device information, counters, etc)</source>
          <target state="translated">Full server control context (device information, counters, etc)</target>
        </trans-unit>
        <trans-unit id="28e6d22c5c4eba1d990348c3f1b440ced4a8b420" translate="yes" xml:space="preserve">
          <source>Functional testing against any reference I can find</source>
          <target state="translated">Functional testing against any reference I can find</target>
        </trans-unit>
        <trans-unit id="660cc549f08401dffb48444da860f1efeba7d5f5" translate="yes" xml:space="preserve">
          <source>Hynek Petrak &amp;lt;&lt;a href=&quot;mailto:hynek%40swac.cz&quot;&gt;hynek@swac.cz&lt;/a&gt;&amp;gt;</source>
          <target state="translated">Hynek Petrak &amp;lt;&lt;a href=&quot;mailto:hynek%40swac.cz&quot;&gt;hynek@swac.cz&lt;/a&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fdcbf531b4d13fc96de3db126be4ccf0c3092ca9" translate="yes" xml:space="preserve">
          <source>If you would like to install pymodbus3 without the twisted dependency,
simply edit the setup.py file before running easy_install and comment
out all mentions of twisted.  It should be noted that without twisted,
one will only be able to run the synchronized version as the
asynchronous versions uses twisted for its event loop.</source>
          <target state="translated">If you would like to install pymodbus3 without the twisted dependency, simply edit the setup.py file before running easy_install and comment out all mentions of twisted. It should be noted that without twisted, one will only be able to run the synchronized version as the asynchronous versions uses twisted for its event loop.</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">설치 중</target>
        </trans-unit>
        <trans-unit id="6e1e47cced59124235d8548b6b3d52383754ed73" translate="yes" xml:space="preserve">
          <source>License Information</source>
          <target state="translated">라이센스 정보</target>
        </trans-unit>
        <trans-unit id="9cfe2b53f389df9660148e992f402fdff608fda2" translate="yes" xml:space="preserve">
          <source>Listing of immediate tasks:</source>
          <target state="translated">Listing of immediate tasks:</target>
        </trans-unit>
        <trans-unit id="1101858a0beefce3c8543bc99e23d0fc772b0ef1" translate="yes" xml:space="preserve">
          <source>Most of the extended protocol (diagnostic/file/pipe/setting/information)</source>
          <target state="translated">Most of the extended protocol (diagnostic/file/pipe/setting/information)</target>
        </trans-unit>
        <trans-unit id="fe3853cbf9845d53461bc9a65d882723b33b0040" translate="yes" xml:space="preserve">
          <source>Otherwise you can pull the trunk source and install from there:</source>
          <target state="translated">Otherwise you can pull the trunk source and install from there:</target>
        </trans-unit>
        <trans-unit id="724d836d9f52a55c7c6fa2f8b838127d7e20ed9d" translate="yes" xml:space="preserve">
          <source>Payload builder/decoder utilities</source>
          <target state="translated">Payload builder/decoder utilities</target>
        </trans-unit>
        <trans-unit id="cb27e6edc49728c3439beeb06b10787ace9b0d48" translate="yes" xml:space="preserve">
          <source>Pymodbus is a full Modbus protocol implementation using twisted for its
asynchronous communications core. It can also be used without any third
party dependencies (aside from pyserial) if a more lightweight project is
needed.</source>
          <target state="translated">Pymodbus is a full Modbus protocol implementation using twisted for its asynchronous communications core. It can also be used without any third party dependencies (aside from pyserial) if a more lightweight project is needed.</target>
        </trans-unit>
        <trans-unit id="0fba480d58612bbaae2a1730a4fb8aa57b558097" translate="yes" xml:space="preserve">
          <source>Pymodbus is built on top of code developed from/by:</source>
          <target state="translated">Pymodbus is built on top of code developed from/by:</target>
        </trans-unit>
        <trans-unit id="dfb0a0888fdaf82368d62fdb63786b9efad79849" translate="yes" xml:space="preserve">
          <source>Released under the BSD License</source>
          <target state="translated">Released under the BSD License</target>
        </trans-unit>
        <trans-unit id="b4da61f281c976e5a54521cf4e387a5afb198631" translate="yes" xml:space="preserve">
          <source>Server Features</source>
          <target state="translated">Server Features</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">요약</target>
        </trans-unit>
        <trans-unit id="339d75af48a8ebe6f7dc07af25b2bb30e3b9de61" translate="yes" xml:space="preserve">
          <source>TCP, UDP, Serial ASCII, Serial RTU, and Serial Binary</source>
          <target state="translated">TCP, UDP, Serial ASCII, Serial RTU, and Serial Binary</target>
        </trans-unit>
        <trans-unit id="2560e92145b273b4f543647ead8b68c2cbb0c4ca" translate="yes" xml:space="preserve">
          <source>The remaining edges of the protocol (that I think no one uses)</source>
          <target state="translated">The remaining edges of the protocol (that I think no one uses)</target>
        </trans-unit>
        <trans-unit id="143a74f7060b63849b343c186e2a2d0877ed7e7c" translate="yes" xml:space="preserve">
          <source>Twisted Matrix</source>
          <target state="translated">Twisted Matrix</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="ddcacf83ec0e606433e3cbd5487e17f44ba7818f" translate="yes" xml:space="preserve">
          <source>You can install using pip or easy install by issuing the following
commands in a terminal window (make sure you have correct
permissions or a virtualenv currently running):</source>
          <target state="translated">You can install using pip or easy install by issuing the following commands in a terminal window (make sure you have correct permissions or a virtualenv currently running):</target>
        </trans-unit>
        <trans-unit id="c0b813b0a0cc275357b946e6028166ef8dd0b0fb" translate="yes" xml:space="preserve">
          <source>asynchronous(powered by twisted) and synchronous versions</source>
          <target state="translated">asynchronous(powered by twisted) and synchronous versions</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
