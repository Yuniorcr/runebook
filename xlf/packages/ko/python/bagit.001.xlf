<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/bagit/">
    <body>
      <group id="bagit">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="1017b8187f6519f36e62bfff09141ddc45181dd8" translate="yes" xml:space="preserve">
          <source>,
etc. &amp;ndash; simply use the same name you use to start an interactive Python
shell:</source>
          <target state="translated">등 &amp;ndash; 대화 형 Python 셸을 시작하는 데 사용하는 것과 동일한 이름을 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="50342f03c7b5ccfe0000da3fefc82aeca9a1bca7" translate="yes" xml:space="preserve">
          <source>--contact-name</source>
          <target state="translated">--담당자 이름</target>
        </trans-unit>
        <trans-unit id="8b5216f1e5b264ac8cf7efb4350c91ced690c7fc" translate="yes" xml:space="preserve">
          <source>--fast</source>
          <target state="translated">--빠른</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">--도움</target>
        </trans-unit>
        <trans-unit id="0f22c8eeca735dc10203e5a79c5d8d53e76b9cf7" translate="yes" xml:space="preserve">
          <source>--processes</source>
          <target state="translated">-프로세스</target>
        </trans-unit>
        <trans-unit id="f5e05e720adc9fe09a8133ed822c7067cbdb6bc2" translate="yes" xml:space="preserve">
          <source>And finally, if you&amp;rsquo;d like to parallelize validation to take advantage
of multiple CPUs you can:</source>
          <target state="translated">마지막으로 여러 CPU를 활용하기 위해 유효성 검사를 병렬화하려면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef6155a5eccf4717deb734d482cb9f59d873fb8a" translate="yes" xml:space="preserve">
          <source>Bag</source>
          <target state="translated">가방</target>
        </trans-unit>
        <trans-unit id="a301e7762d12d3f86070d4e7badd2d2bc63d5a45" translate="yes" xml:space="preserve">
          <source>BagValidationError</source>
          <target state="translated">BagValidationError</target>
        </trans-unit>
        <trans-unit id="4f46ac72b3634f96c6860b1ed26d9d4cd71d21aa" translate="yes" xml:space="preserve">
          <source>Benchmarks</source>
          <target state="translated">벤치 마크</target>
        </trans-unit>
        <trans-unit id="9314c5f036387917642398c26237bf03490cfd4b" translate="yes" xml:space="preserve">
          <source>By default</source>
          <target state="translated">기본적으로</target>
        </trans-unit>
        <trans-unit id="60bd676e4e3d0458a49a5b11eeacd442ce5a94ef" translate="yes" xml:space="preserve">
          <source>ChecksumMismatch</source>
          <target state="translated">체크섬 불일치</target>
        </trans-unit>
        <trans-unit id="5c268abe869aaa38f107774f29fed5d23925995b" translate="yes" xml:space="preserve">
          <source>Command Line Usage</source>
          <target state="translated">명령 줄 사용</target>
        </trans-unit>
        <trans-unit id="74491a914f96411d13b65177a8f8699b77c10fc4" translate="yes" xml:space="preserve">
          <source>Configuring BagIt</source>
          <target state="translated">BagIt 구성</target>
        </trans-unit>
        <trans-unit id="80a4e9e2f44b20f7b41a2c11cc6b437a9642a8a1" translate="yes" xml:space="preserve">
          <source>Contributing to bagit-python development</source>
          <target state="translated">bagit-python 개발에 기여</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">창조하다</target>
        </trans-unit>
        <trans-unit id="50753a42848212e4c93a4cdba9efc1299bb7091c" translate="yes" xml:space="preserve">
          <source>Create and validate BagIt packages</source>
          <target state="translated">BagIt 패키지 생성 및 검증</target>
        </trans-unit>
        <trans-unit id="8bf9613e04ce0a5f865eabd2d4153c4342fb14b9" translate="yes" xml:space="preserve">
          <source>FileMissing</source>
          <target state="translated">FileMissing</target>
        </trans-unit>
        <trans-unit id="8c398c85d97963cf19d4c21b7c00201bc4deaa3c" translate="yes" xml:space="preserve">
          <source>Finding Bagit on your system</source>
          <target state="translated">시스템에서 Bagit 찾기</target>
        </trans-unit>
        <trans-unit id="aba8dfe1c2f4eb8cbb9da78ecdac7ee7ca2720f6" translate="yes" xml:space="preserve">
          <source>If you have Docker installed, you can run the tests under Linux inside a
container:</source>
          <target state="translated">Docker가 설치되어있는 경우 컨테이너 내부의 Linux에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3951bc3c06d9170ff99e57dff428a3f8640ae319" translate="yes" xml:space="preserve">
          <source>If you would like to see if a bag is valid, use its</source>
          <target state="translated">가방이 유효한지 확인하려면 가방을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1340a15e90b2acb4fad2d32b220ab104043f1978" translate="yes" xml:space="preserve">
          <source>If you would like to take a quick look at the bag to see if it seems
valid by just examining the structure of the bag, and comparing its
payload-oxum (byte count and number of files) then use the</source>
          <target state="translated">백의 구조를 검사하고 페이로드 -oxum (바이트 수 및 파일 수)을 비교하여 백이 유효한지 확인하기 위해 백을 빠르게 살펴보고 싶다면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ded1fa2f9616819a5234e20619f333af0a9eef17" translate="yes" xml:space="preserve">
          <source>If you would like to validate a bag you can use the &amp;ndash;validate flag.</source>
          <target state="translated">bag의 유효성을 검사하려면 &amp;ndash;validate 플래그를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba8b0c7a1f61610f4f8b31213f1bd94f22f061c0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to get a detailed list of validation errors, execute the</source>
          <target state="translated">자세한 유효성 검사 오류 목록을 얻으려면</target>
        </trans-unit>
        <trans-unit id="00d30f7065605609f0d2e24d42c18aa57f8b1afc" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to see how increasing parallelization of bag creation on
your system effects the time to create a bag try using the included
bench utility:</source>
          <target state="translated">시스템에서 백 생성의 병렬화 증가가 백 생성 시간에 어떤 영향을 미치는지 확인하려면 포함 된 벤치 유틸리티를 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="182626ee59027984a14dc82fcd212e984090f4b9" translate="yes" xml:space="preserve">
          <source>ManifestError</source>
          <target state="translated">ManifestError</target>
        </trans-unit>
        <trans-unit id="85507eec2f74ec38ef2b58a04a00ec7e9432b68d" translate="yes" xml:space="preserve">
          <source>Note: By contributing to this project, you agree to license your work
under the same terms as those that govern this project&amp;rsquo;s distribution.</source>
          <target state="translated">참고 :이 프로젝트에 기여함으로써 귀하는이 프로젝트의 배포를 관리하는 것과 동일한 조건에 따라 작업에 대한 라이선스를 부여하는 데 동의합니다.</target>
        </trans-unit>
        <trans-unit id="e35718a0b8159d6c9190fa2e3dece3fa93fe9da2" translate="yes" xml:space="preserve">
          <source>On some systems Python may have been installed as</source>
          <target state="translated">일부 시스템에서는 Python이 다음과 같이 설치되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97c194057451b8eaa74406d65ce298ee47df00cc" translate="yes" xml:space="preserve">
          <source>Once your code is working, you can use
&lt;a href=&quot;https://tox.readthedocs.io/&quot;&gt;Tox&lt;/a&gt; to run the tests with every
supported version of Python which you have installed on the local
system:</source>
          <target state="translated">코드가 작동하면 &lt;a href=&quot;https://tox.readthedocs.io/&quot;&gt;Tox&lt;/a&gt; 를 사용 하여 로컬 시스템에 설치 한 지원되는 모든 Python 버전으로 테스트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47e7c0add4215ab4de640c14f27ea9236fea9692" translate="yes" xml:space="preserve">
          <source>Python v2.7+ is required.</source>
          <target state="translated">Python v2.7 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1e0883db26345cee9aa196cedada38c2dbef49be" translate="yes" xml:space="preserve">
          <source>Running the tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="d5f643ce4f9eaec755f1f197f21f7f3da3632f6c" translate="yes" xml:space="preserve">
          <source>Since calculating checksums can take a while when creating a bag, you
may want to calculate them in parallel if you are on a multicore
machine. You can do that with the</source>
          <target state="translated">백을 생성 할 때 체크섬을 계산하는 데 시간이 오래 걸릴 수 있으므로 멀티 코어 시스템을 사용하는 경우 병렬로 계산할 수 있습니다. 당신은 그것을 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="9ba4e61ecd3387241059e83a8b38677a441eb06a" translate="yes" xml:space="preserve">
          <source>So for example if you want to print out checksums that failed to
validate you can do this:</source>
          <target state="translated">예를 들어 유효성 검사에 실패한 체크섬을 인쇄하려면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="255213fe92a645b85f64be27b306e2b599ad3ea4" translate="yes" xml:space="preserve">
          <source>The save method takes an optional processes parameter which will
determine how many processes are used to regenerate the checksums. This
can be handy on multicore machines.</source>
          <target state="translated">save 메소드는 체크섬을 재생성하는 데 사용되는 프로세스 수를 결정하는 선택적 프로세스 매개 변수를 사용합니다. 이것은 멀티 코어 머신에서 편리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="40edf222b59d424071cc320e18355deadfd90c1d" translate="yes" xml:space="preserve">
          <source>To create a bag you would do this:</source>
          <target state="translated">가방을 만들려면 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="b26a53af19e68f9540b79dc7d8f0aea1f2f466b3" translate="yes" xml:space="preserve">
          <source>To iterate through a bag&amp;rsquo;s manifest and retrieve checksums for the
payload files use the bag&amp;rsquo;s entries dictionary:</source>
          <target state="translated">bag의 매니페스트를 반복하고 페이로드 파일에 대한 체크섬을 검색하려면 bag의 항목 사전을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f3edc9c77ff2918ddd45b9d00d4737353f15d9e5" translate="yes" xml:space="preserve">
          <source>To specify which checksum algorithm(s) to use when generating the
manifest, use the &amp;ndash;md5, &amp;ndash;sha1, &amp;ndash;sha256 and/or &amp;ndash;sha512 flags (MD5 is
generated by default).</source>
          <target state="translated">매니페스트를 생성 할 때 사용할 체크섬 알고리즘을 지정하려면 &amp;ndash;md5, &amp;ndash;sha1, &amp;ndash;sha256 및 / 또는 &amp;ndash;sha512 플래그를 사용합니다 (MD5는 기본적으로 생성됨).</target>
        </trans-unit>
        <trans-unit id="e9a3646ca1ff6351728f7aa7a716bfa21738ddff" translate="yes" xml:space="preserve">
          <source>UnexpectedFile</source>
          <target state="translated">예기치 않은 파일</target>
        </trans-unit>
        <trans-unit id="6f1dd938e7bed36d3e35370392f7be50b0beffcc" translate="yes" xml:space="preserve">
          <source>Update Bag Manifests</source>
          <target state="translated">Bag Manifest 업데이트</target>
        </trans-unit>
        <trans-unit id="a35e1a62ea0fde2ca7d380b419530ec43c878ea3" translate="yes" xml:space="preserve">
          <source>Update Bag Metadata</source>
          <target state="translated">Bag 메타 데이터 업데이트</target>
        </trans-unit>
        <trans-unit id="835fdeb8e052a917817f67af8de27d14136c3683" translate="yes" xml:space="preserve">
          <source>Using BagIt in your programs</source>
          <target state="translated">프로그램에서 BagIt 사용</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">확인</target>
        </trans-unit>
        <trans-unit id="846adb8837bc7be75a088cec32cf2a3664d5f751" translate="yes" xml:space="preserve">
          <source>When you install bagit you should get a command-line program called
bagit.py which you can use to turn an existing directory into a bag:</source>
          <target state="translated">bagit을 설치할 때 bagit.py라는 명령 줄 프로그램을 가져와야합니다.이 프로그램은 기존 디렉토리를 bag으로 바꾸는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56568cb1617e51a88e973d099b1b7eca2d104376" translate="yes" xml:space="preserve">
          <source>You can also use BagIt programatically in your own Python programs by
importing the</source>
          <target state="translated">당신은 또한 당신의 파이썬 프로그램에서 BagIt을 프로그램 적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5769bba803167d6c7382f2c05d6afe7b1b17309c" translate="yes" xml:space="preserve">
          <source>You can change the metadata persisted to the bag-info.txt by using the</source>
          <target state="translated">다음을 사용하여 bag-info.txt에 지속되는 메타 데이터를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d16e64a0591882168eaaa2263a6af2564188d90f" translate="yes" xml:space="preserve">
          <source>You can pass in key/value metadata for the bag using options like</source>
          <target state="translated">다음과 같은 옵션을 사용하여 백에 대한 키 / 값 메타 데이터를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4e913283b530ab9ce4cf8d633e126f096e3cc05" translate="yes" xml:space="preserve">
          <source>You can quickly run the tests by having setuptools install dependencies:</source>
          <target state="translated">setuptools가 종속성을 설치하도록하여 테스트를 빠르게 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f309f1b2a4f6652242c5004c3fa6a1ec77023eac" translate="yes" xml:space="preserve">
          <source>above, which get persisted to the bag-info.txt. For a
complete list of bag-info.txt properties you can use as commmand line
arguments see</source>
          <target state="translated">위의 내용은 bag-info.txt에 유지됩니다. 명령 줄 인수로 사용할 수있는 bag-info.txt 속성의 전체 목록은</target>
        </trans-unit>
        <trans-unit id="ea19dd0adbc61c7bc45300269918b52815c415c0" translate="yes" xml:space="preserve">
          <source>as a Python module: simply replace</source>
          <target state="translated">Python 모듈로 : 간단히</target>
        </trans-unit>
        <trans-unit id="d340e60debbc806d8fcb0b5d10bcfeb761ceba6d" translate="yes" xml:space="preserve">
          <source>bagit</source>
          <target state="translated">Bagit</target>
        </trans-unit>
        <trans-unit id="903dab2a5eb12b63acf51a243bd9d648a7c5ec8e" translate="yes" xml:space="preserve">
          <source>bagit is a Python library and command line utility for working with
&lt;a href=&quot;http://purl.org/net/bagit&quot;&gt;BagIt&lt;/a&gt; style packages.</source>
          <target state="translated">bagit은 &lt;a href=&quot;http://purl.org/net/bagit&quot;&gt;BagIt&lt;/a&gt; 스타일 패키지 작업을위한 Python 라이브러리 및 명령 줄 유틸리티입니다 .</target>
        </trans-unit>
        <trans-unit id="7f96699eb1c8fe1680ce10a66681ec58c7ec0228" translate="yes" xml:space="preserve">
          <source>bagit.py</source>
          <target state="translated">bagit.py</target>
        </trans-unit>
        <trans-unit id="68441bc7ff10115378405c9a6dd27b42e8030321" translate="yes" xml:space="preserve">
          <source>bagit.py is a single-file python module that you can drop into your
project as needed or you can install globally with:</source>
          <target state="translated">bagit.py는 필요에 따라 프로젝트에 드롭하거나 다음을 사용하여 전역 적으로 설치할 수있는 단일 파일 Python 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="e9711657b066fc8697f6f46ac6be9ce246e43aac" translate="yes" xml:space="preserve">
          <source>details</source>
          <target state="translated">세부</target>
        </trans-unit>
        <trans-unit id="aab27f83b9968beef68a4fbaccf544e5a8e40807" translate="yes" xml:space="preserve">
          <source>exception. If
the bag&amp;rsquo;s manifest was invalid (and it wasn&amp;rsquo;t caught by the payload
oxum) the exception&amp;rsquo;s</source>
          <target state="translated">예외. 가방의 매니페스트가 유효하지 않은 경우 (페이로드 oxum에서 포착되지 않은 경우) 예외의</target>
        </trans-unit>
        <trans-unit id="964992a57d111bb0865d708e942f8599f79c480d" translate="yes" xml:space="preserve">
          <source>flag.</source>
          <target state="translated">깃발.</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">정보</target>
        </trans-unit>
        <trans-unit id="88b28d3917bada0d9b67dfb30beecf6e8588db71" translate="yes" xml:space="preserve">
          <source>is_valid</source>
          <target state="translated">is_valid</target>
        </trans-unit>
        <trans-unit id="d1f6175c48f916fa415e10eb0a648df20e8e8b69" translate="yes" xml:space="preserve">
          <source>make_bag</source>
          <target state="translated">make_bag</target>
        </trans-unit>
        <trans-unit id="f29a7d31c1143e2c1e0e03bb9f83529feb8610fa" translate="yes" xml:space="preserve">
          <source>manifests</source>
          <target state="translated">매니페스트</target>
        </trans-unit>
        <trans-unit id="c3590764c53509d98845a8be360c3af89c0fd535" translate="yes" xml:space="preserve">
          <source>method and catch the</source>
          <target state="translated">방법 및 잡기</target>
        </trans-unit>
        <trans-unit id="01a46fb52f0c14f92da476120be7afe1ef1ec52d" translate="yes" xml:space="preserve">
          <source>method:</source>
          <target state="translated">방법:</target>
        </trans-unit>
        <trans-unit id="a21867509c883fff7a024de5f5d5839d06e9f445" translate="yes" xml:space="preserve">
          <source>module.</source>
          <target state="translated">기준 치수.</target>
        </trans-unit>
        <trans-unit id="fc43695f5295bc5aa1b42c813c85825b5ac4b05b" translate="yes" xml:space="preserve">
          <source>option:</source>
          <target state="translated">선택권:</target>
        </trans-unit>
        <trans-unit id="e6f89c6cf9a5b76ee2c3bddfe07b8569937f5955" translate="yes" xml:space="preserve">
          <source>parameter to True when calling</source>
          <target state="translated">호출시 매개 변수를 True로 설정</target>
        </trans-unit>
        <trans-unit id="e63b67e7037cf2be49dfbe294b9fc5c7549d541b" translate="yes" xml:space="preserve">
          <source>program should be available in your normal command-line
window (Terminal on OS X, Command Prompt or Powershell on Windows,
etc.). If you are unsure where it was installed you can also request
that Python search for</source>
          <target state="translated">프로그램은 일반 명령 줄 창 (OS X의 터미널, Windows의 명령 프롬프트 또는 Powershell 등)에서 사용할 수 있어야합니다. 설치 위치가 확실하지 않은 경우 Python에 다음 검색을 요청할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1279ec562f491d817eac437cf0f532588cd92a23" translate="yes" xml:space="preserve">
          <source>property on a</source>
          <target state="translated">재산</target>
        </trans-unit>
        <trans-unit id="bc9fe1ba1fc4a8cd5f0416f9b3b73bbfdf3e2f8c" translate="yes" xml:space="preserve">
          <source>property will contain a list of</source>
          <target state="translated">속성에는 목록이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="902afd8803af75ececff6075f8929a97915e65be" translate="yes" xml:space="preserve">
          <source>py</source>
          <target state="translated">py</target>
        </trans-unit>
        <trans-unit id="905f52cd9d9b408ac2a2a38e5f394074150510ad" translate="yes" xml:space="preserve">
          <source>python -m bagit</source>
          <target state="translated">파이썬 -m bagit</target>
        </trans-unit>
        <trans-unit id="80dd0a3e16d05b975a9fa37f27c78d7608caf7ae" translate="yes" xml:space="preserve">
          <source>python3</source>
          <target state="translated">python3</target>
        </trans-unit>
        <trans-unit id="5c9884c0f216b123f447ecf074f0611e9fcaec6f" translate="yes" xml:space="preserve">
          <source>returns a Bag instance. If you have a bag already on disk
and would like to create a Bag instance for it, simply call the
constructor directly:</source>
          <target state="translated">Bag 인스턴스를 반환합니다. 이미 디스크에 bag이 있고 이에 대한 Bag 인스턴스를 생성하려면 생성자를 직접 호출하면됩니다.</target>
        </trans-unit>
        <trans-unit id="ee551c2ea74e88cd4f020a4120373f21aeb3d184" translate="yes" xml:space="preserve">
          <source>s that you can introspect on. Each ManifestError,
will be of type</source>
          <target state="translated">성찰 할 수 있습니다. 각 ManifestError는 유형이됩니다.</target>
        </trans-unit>
        <trans-unit id="13a4a11319d31c1b323d5774f44240a9ffc984d0" translate="yes" xml:space="preserve">
          <source>save</source>
          <target state="translated">저장</target>
        </trans-unit>
        <trans-unit id="9e3a33c3449c9bbdc4167612007b2bcbd76614ea" translate="yes" xml:space="preserve">
          <source>to persist bag metadata accidentally
regenerates manifests for an invalid bag. If you have modified the
payload of a bag by adding, modifying or deleting files in the data
directory, and wish to regenerate the manifests set the</source>
          <target state="translated">bag 메타 데이터를 유지하기 위해 실수로 잘못된 bag에 대한 매니페스트를 다시 생성합니다. 데이터 디렉터리에서 파일을 추가, 수정 또는 삭제하여 백의 페이로드를 수정하고 매니페스트를 다시 생성하려면</target>
        </trans-unit>
        <trans-unit id="e204d28a2874f6123747650d3e4003d4357d75eb" translate="yes" xml:space="preserve">
          <source>validate</source>
          <target state="translated">확인</target>
        </trans-unit>
        <trans-unit id="4db0f23b6be7f70adcc38c6575539bde2be36fe9" translate="yes" xml:space="preserve">
          <source>will not update manifests. This guards against a
situation where a call to</source>
          <target state="translated">매니페스트를 업데이트하지 않습니다. 이렇게하면</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">와</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
