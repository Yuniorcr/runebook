<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/githubbuildout/">
    <body>
      <group id="githubbuildout">
        <trans-unit id="8f30d97f95d202eab80ed7b9bb9be7736173590c" translate="yes" xml:space="preserve">
          <source>(please substitute your own GitHub
user name):</source>
          <target state="translated">(자신의 GitHub 사용자 이름으로 대체하십시오) :</target>
        </trans-unit>
        <trans-unit id="b33dbabd7d26f0e6efeafb22294756a705f123ba" translate="yes" xml:space="preserve">
          <source>2012-06-21 0.1:</source>
          <target state="translated">2012-06-21 0.1 :</target>
        </trans-unit>
        <trans-unit id="d0f2d8b33eaae76a2ac3d28b2b901d69fa038d7c" translate="yes" xml:space="preserve">
          <source>2013-04-25 0.2:</source>
          <target state="translated">2013 년 4 월 25 일 0.2 :</target>
        </trans-unit>
        <trans-unit id="cdad7c1234d2f4330f1c743c96899b7537cbd212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important Note:&lt;/strong&gt; As with repository downloads, the url &lt;em&gt;must&lt;/em&gt; use the</source>
          <target state="translated">&lt;strong&gt;중요 참고 :&lt;/strong&gt; 저장소 다운로드와 마찬가지로, URL을 &lt;em&gt;해야한다&lt;/em&gt; 를 사용</target>
        </trans-unit>
        <trans-unit id="19bd7c3f5c4b6a57edc9b13bdd00c12393dfc4ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important Note:&lt;/strong&gt; The url &lt;em&gt;must&lt;/em&gt; use the</source>
          <target state="translated">&lt;strong&gt;중요 참고 :&lt;/strong&gt; URL이 &lt;em&gt;있어야합니다&lt;/em&gt; 를 사용</target>
        </trans-unit>
        <trans-unit id="a71e992107eef3e0d3574b02dbd07ae1c4d35f75" translate="yes" xml:space="preserve">
          <source>API keys are tied to an individual user account.</source>
          <target state="translated">API 키는 개별 사용자 계정에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="3316cd378236d848096155ca28e4b324a9fdea1d" translate="yes" xml:space="preserve">
          <source>Before you can access private repositories from this module, you must create
and store an API key on each system running buildout. Unlike the v2 API where
one key was issued per user, you may create as many keys as you like and
revoke them at will.</source>
          <target state="translated">이 모듈에서 개인 저장소에 액세스하려면 빌드 아웃을 실행하는 각 시스템에서 API 키를 만들고 저장해야합니다. 사용자 당 하나의 키가 발급 된 v2 API와 달리 원하는만큼 키를 만들고 마음대로 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1f8fd3605a9f4d9c99b2ba446db0db5431502ad" translate="yes" xml:space="preserve">
          <source>Buildout extension to enable downloads from private GitHub repositories into buildout find-links and download recipes</source>
          <target state="translated">비공개 GitHub 저장소에서 빌드 아웃 찾기 링크로 다운로드하고 레시피를 다운로드 할 수있는 빌드 아웃 확장</target>
        </trans-unit>
        <trans-unit id="4e31ccf01ea2a9d2c120aee6bdd3c962d9d074a0" translate="yes" xml:space="preserve">
          <source>Buildout from GitHub</source>
          <target state="translated">GitHub에서 빌드 아웃</target>
        </trans-unit>
        <trans-unit id="2530e0d9b18179279549432e4c99e526ec879e49" translate="yes" xml:space="preserve">
          <source>Changes to githubbuildout</source>
          <target state="translated">githubbuildout 변경 사항</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">크레딧</target>
        </trans-unit>
        <trans-unit id="f690e8f8e5fe1a72668fdc99fdc53bd5f098e238" translate="yes" xml:space="preserve">
          <source>Declare a user agent to comply with GitHub&amp;rsquo;s new API requirement (see
&lt;a href=&quot;http://developer.github.com/changes/2013-04-24-user-agent-required/&quot;&gt;http://developer.github.com/changes/2013-04-24-user-agent-required/&lt;/a&gt;):</source>
          <target state="translated">GitHub의 새로운 API 요구 사항을 준수하도록 사용자 에이전트를 선언합니다 ( &lt;a href=&quot;http://developer.github.com/changes/2013-04-24-user-agent-required/&quot;&gt;http://developer.github.com/changes/2013-04-24-user-agent-required/ 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ba451d694c80731a390307448e2f48b27cf2204e" translate="yes" xml:space="preserve">
          <source>For details on managing authorization GitHub&amp;rsquo;s OAuth tokens, see the API
documentation: &lt;a href=&quot;http://developer.github.com/v3/oauth/#oauth-authorizations-api&quot;&gt;http://developer.github.com/v3/oauth/#oauth-authorizations-api&lt;/a&gt;</source>
          <target state="translated">권한 부여 GitHub의 OAuth 토큰 관리에 대한 자세한 내용은 API 문서를 참조하십시오. &lt;a href=&quot;http://developer.github.com/v3/oauth/#oauth-authorizations-api&quot;&gt;http://developer.github.com/v3/oauth/#oauth-authorizations-api&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad7fbd8ade905cd63727615905ea6983d8a12b86" translate="yes" xml:space="preserve">
          <source>GitHub Repository Downloads</source>
          <target state="translated">GitHub 리포지토리 다운로드</target>
        </trans-unit>
        <trans-unit id="424bd129dc86ffe910920731371c24c32f8d86ce" translate="yes" xml:space="preserve">
          <source>GitHub Static Downloads (DEPRECATED)</source>
          <target state="translated">GitHub 정적 다운로드 (지원 중단됨)</target>
        </trans-unit>
        <trans-unit id="46008324e2a9254f596daa9dcf32ba40031e006c" translate="yes" xml:space="preserve">
          <source>GitHub has become a commonly-used SCM tool for software engineering teams.
The purpose of this Buildout extension is to enable the retrieval of source
tarballs and static downloads from private repositories by using the API v3&amp;rsquo;s
token-based authentication, combined with a bit of URL rewriting to retrieve
files using the API server instead of the main website when required.</source>
          <target state="translated">GitHub는 소프트웨어 엔지니어링 팀에서 일반적으로 사용되는 SCM 도구가되었습니다. 이 빌드 아웃 확장의 목적은 API v3의 토큰 기반 인증을 사용하여 비공개 저장소에서 소스 타르볼 및 정적 다운로드를 검색 할 수 있도록하는 것입니다. 필수입니다.</target>
        </trans-unit>
        <trans-unit id="0f9e80863dab832232d6acbc550028c0b82dd4d6" translate="yes" xml:space="preserve">
          <source>IMPORTANT NOTE: Support for static downloads has been deprecated by GitHub
as of 2012-12-11 and will be removed &amp;ldquo;in 90 days&amp;rdquo; (on or around 2013-03-11).
If your project depends on this feature, now would be a good time to make
alternate plans. For details, see the link below:</source>
          <target state="translated">중요 참고 : 정적 다운로드에 대한 지원은 2012-12-11부터 GitHub에서 더 이상 사용되지 않으며 &quot;90 일 후&quot;(2013 년 3 월 11 일 전후) 제거됩니다. 프로젝트가이 기능에 의존하는 경우 지금이 대체 계획을 세우기에 좋은시기입니다. 자세한 내용은 아래 링크를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2b50cc56c13afe6c93d1f3d31109b92131d3c503" translate="yes" xml:space="preserve">
          <source>If you plan to make multiple keys for distribution to different systems (e.g.
automated build environment), you might want to include a description to be
able to distinguish them from one another later:</source>
          <target state="translated">다른 시스템 (예 : 자동화 된 빌드 환경)에 배포하기 위해 여러 키를 만들 계획이라면 나중에 서로 구분할 수 있도록 설명을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e133a1ee93977dca1fbcf49d0a78e32afb3f3912" translate="yes" xml:space="preserve">
          <source>Important Note: You MUST specify the scopes attribute to secure access to
private repositories; leaving the scope blank provides read-only access to
public data.</source>
          <target state="translated">중요 참고 : 개인 저장소에 대한 액세스를 보호하려면 scopes 속성을 지정해야합니다. 범위를 비워두면 공용 데이터에 대한 읽기 전용 액세스가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="70847152115ed5ffd2062d76fb5299e0fda803f8" translate="yes" xml:space="preserve">
          <source>In practice, you would typically use this to retrieve a tarball for
installation as an egg in your buildout file, using a recipe similar to this:</source>
          <target state="translated">실제로, 일반적으로 다음과 유사한 레시피를 사용하여 빌드 아웃 파일에서 달걀로 설치하기위한 tarball을 검색하는 데 이것을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8f74f1d9b552b8d637c4831a5c4e4a8e722b797b" translate="yes" xml:space="preserve">
          <source>Initial Release (based on lovely.buildouthttp)</source>
          <target state="translated">초기 릴리스 (lovely.buildouthttp 기반)</target>
        </trans-unit>
        <trans-unit id="05c0c4b71499ce61cbd650bf29585c7e6bef3b26" translate="yes" xml:space="preserve">
          <source>Note: These URLs will be rewritten during retrieval to use the API v3 URL instead.
If you wish, you can explicitly specify the API server URL for retriving the file:</source>
          <target state="translated">참고 : 이러한 URL은 검색 중에 API v3 URL을 대신 사용하도록 다시 작성됩니다. 원하는 경우 파일 검색을위한 API 서버 URL을 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78c355d22bb44c730088d5f4c9d92f9007ef9f71" translate="yes" xml:space="preserve">
          <source>Now configure the value of github.accesstoken to the hash returned from the
command above:</source>
          <target state="translated">이제 github.accesstoken 값을 위의 명령에서 반환 된 해시로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0e25ed348d057070a4416d72298ee5ea0956d888" translate="yes" xml:space="preserve">
          <source>Please see the sections below for setup and usage instructions.</source>
          <target state="translated">설정 및 사용 지침은 아래 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e75ca03ed9899359e9d54c2afd763a6317ed2c8b" translate="yes" xml:space="preserve">
          <source>Request an API Key</source>
          <target state="translated">API 키 요청</target>
        </trans-unit>
        <trans-unit id="c75f0aa7ae2412c3e875a938342cfa4b3d6b7f3a" translate="yes" xml:space="preserve">
          <source>Since these files can contain static software releases as eggs or anything
else you want (media files, configuration data, etc.) it is up to you how
to use them in your buildout; a common pattern is to install them as a part
in a fashion similar to the following example:</source>
          <target state="translated">이러한 파일은 정적 소프트웨어 릴리스를 계란 또는 원하는 다른 것 (미디어 파일, 구성 데이터 등)으로 포함 할 수 있으므로 빌드 아웃에서 사용하는 방법은 사용자에게 달려 있습니다. 일반적인 패턴은 다음 예제와 유사한 방식으로 부품으로 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5b10bf702063b98ab3f510df7d931d7aa19c1063" translate="yes" xml:space="preserve">
          <source>Static downloads that have been previously uploaded to your GitHub project
may also be retrieved using the same URL you would use in your browser,
formed as follows:</source>
          <target state="translated">이전에 GitHub 프로젝트에 업로드 된 정적 다운로드는 브라우저에서 사용하는 것과 동일한 URL을 사용하여 검색 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="633170f64ef9078b5e224ac0388881ead8906819" translate="yes" xml:space="preserve">
          <source>Store API Key in Git Config</source>
          <target state="translated">Git 구성에 API 키 저장</target>
        </trans-unit>
        <trans-unit id="0874d38d70f513e999c96009d487be7c5ec1e8f9" translate="yes" xml:space="preserve">
          <source>Thanks to Bernd Dorn, J&amp;uuml;rgen Kartnaller, Bernd R&amp;ouml;ssl and the rest at Lovely
Systems for lovely.buildouthttp (upon which this project is based), and to
Clayton Parker and Tarek Ziade for bugfixes and extensions.</source>
          <target state="translated">Bernd Dorn, J&amp;uuml;rgen Kartnaller, Bernd R&amp;ouml;ssl 및 lovely.buildouthttp (이 프로젝트의 기반)에 대한 Lovely Systems의 나머지와 버그 수정 및 확장에 대해 Clayton Parker와 Tarek Ziade에게 감사드립니다.</target>
        </trans-unit>
        <trans-unit id="1c88dfaf3761d6821f035b3856e1c00855d9059c" translate="yes" xml:space="preserve">
          <source>You can create API v3 key using</source>
          <target state="translated">다음을 사용하여 API v3 키를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eb941dc5258094f3224f7f24890d9c23b034c1f" translate="yes" xml:space="preserve">
          <source>You can instruct Buildout to download a tarball of any refid from your
repository by specifying the same URL as you would use in your browser to
retrieve it, using the following syntax:</source>
          <target state="translated">다음 구문을 사용하여 브라우저에서 검색하는 데 사용하는 것과 동일한 URL을 지정하여 Buildout에게 저장소에서 refid의 tarball을 다운로드하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5300d17a1d695bd411e4cdf96f9548c23ced6175" translate="yes" xml:space="preserve">
          <source>curl</source>
          <target state="translated">곱슬 곱슬하다</target>
        </trans-unit>
        <trans-unit id="7a8a9dac492165c302cbc834885555e4838bbb6c" translate="yes" xml:space="preserve">
          <source>githubbuildout/$version zc.buildout</source>
          <target state="translated">githubbuildout / $ version zc.buildout</target>
        </trans-unit>
        <trans-unit id="77b5f8e343a90f6f597751021fb8b7a08fe83083" translate="yes" xml:space="preserve">
          <source>http</source>
          <target state="translated">http</target>
        </trans-unit>
        <trans-unit id="c3437dbc7c1255d3a21d444d86ebf2e9234c22bd" translate="yes" xml:space="preserve">
          <source>https</source>
          <target state="translated">https</target>
        </trans-unit>
        <trans-unit id="b4fa914936d63a0643d899c64a6e0f521cc6c771" translate="yes" xml:space="preserve">
          <source>protocol to be retrieved
using this extension; URLs using the</source>
          <target state="translated">이 확장을 사용하여 검색 할 프로토콜; 다음을 사용하는 URL</target>
        </trans-unit>
        <trans-unit id="f94a718960fc1aacbc3e30ffaf57a6e29035417a" translate="yes" xml:space="preserve">
          <source>protocol to be retrieved.</source>
          <target state="translated">검색 할 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="64ced3c82232f08f1b54cb408c4b5047c0f78f22" translate="yes" xml:space="preserve">
          <source>protocol will be ignored.</source>
          <target state="translated">프로토콜은 무시됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
