<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/monostyle/">
    <body>
      <group id="monostyle">
        <trans-unit id="f1242d7f8204aad31863de9b05ca2c96717fbb82" translate="yes" xml:space="preserve">
          <source>--cached, --staged</source>
          <target state="translated">-캐시 됨,-스테이지 됨</target>
        </trans-unit>
        <trans-unit id="be0f6e7c20af7dc7d0b9c2ef53bce4d4c38e15f6" translate="yes" xml:space="preserve">
          <source>-a, --autofix</source>
          <target state="translated">-a, --autofix</target>
        </trans-unit>
        <trans-unit id="a12d7d622136d11936491cc3446522433c9c55e8" translate="yes" xml:space="preserve">
          <source>-e, --external</source>
          <target state="translated">-e,-외부</target>
        </trans-unit>
        <trans-unit id="e4f59f0932c948a18705eb02510c96e78e711f45" translate="yes" xml:space="preserve">
          <source>-f, --file</source>
          <target state="translated">-f,-파일</target>
        </trans-unit>
        <trans-unit id="8669756634b227b5f20a65623dc991d49c7cf636" translate="yes" xml:space="preserve">
          <source>-i, --internal</source>
          <target state="translated">-i,-내부</target>
        </trans-unit>
        <trans-unit id="68985b07ef441d316ddf35db549505ba3afdb1ef" translate="yes" xml:space="preserve">
          <source>-o, --open</source>
          <target state="translated">-o,-열기</target>
        </trans-unit>
        <trans-unit id="a60b668e9aa773220051ff1ba52ff0773881d4a4" translate="yes" xml:space="preserve">
          <source>-p, --patch</source>
          <target state="translated">-p,-패치</target>
        </trans-unit>
        <trans-unit id="c9ca1d27ba6568ad5b4cfc03083725e4a9631fa7" translate="yes" xml:space="preserve">
          <source>-r, --root</source>
          <target state="translated">-r, --root</target>
        </trans-unit>
        <trans-unit id="64a1d6923a13bd21568de72a619f08998739c65f" translate="yes" xml:space="preserve">
          <source>-u, --update</source>
          <target state="translated">-u, --update</target>
        </trans-unit>
        <trans-unit id="718e684d8ec32e48b60f250469277db410b0ae75" translate="yes" xml:space="preserve">
          <source>A framework for style checking and linting</source>
          <target state="translated">스타일 확인 및 린팅을위한 프레임 워크</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">많은</target>
        </trans-unit>
        <trans-unit id="e85aeb44f30045b2c61fbec9e40e3c8026847eec" translate="yes" xml:space="preserve">
          <source>Apply autofixes. This also does an update if the changes are external.</source>
          <target state="translated">자동 수정을 적용합니다. 변경 사항이 외부인 경우에도 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="d0ab6f227ac2f6b6f795cf70f0ba6ccfc7877187" translate="yes" xml:space="preserve">
          <source>For more info on command line arguments use the &lt;code&gt;--help&lt;/code&gt; command.
The tools can be applied individually by executing the script files. Then the tools will loop over the whole project.</source>
          <target state="translated">명령 줄 인수에 대한 자세한 내용은 &lt;code&gt;--help&lt;/code&gt; 명령을 사용하십시오 . 스크립트 파일을 실행하여 도구를 개별적으로 적용 할 수 있습니다. 그러면 도구가 전체 프로젝트에서 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="50df189d4a4193538dc22f87c02fce7b77f36846" translate="yes" xml:space="preserve">
          <source>For spell checking a dictionary has to build.
On first run you have to confirm to start this (or also if the dictionary file is not found).</source>
          <target state="translated">맞춤법 검사를 위해 사전을 구축해야합니다. 처음 실행할 때이를 시작하도록 확인해야합니다 (또는 사전 파일을 찾을 수없는 경우).</target>
        </trans-unit>
        <trans-unit id="a46ff8bdf38902b08985df878f6ddfdaad42c3f5" translate="yes" xml:space="preserve">
          <source>Its tools are applied on new or changed content
which makes it fast and it allows a wider range of tools,
because they can have false positives.
For example style guide rules that have exceptions which can't be filtered out.
Supported for versioning are SVN and Git (experimental).</source>
          <target state="translated">이 도구는 새롭거나 변경된 콘텐츠에 적용되어 신속하게 만들고 오 탐지를 가질 수 있기 때문에 더 넓은 범위의 도구를 허용합니다. 예를 들어 필터링 할 수없는 예외가있는 스타일 가이드 규칙입니다. 버전 관리에 지원되는 것은 SVN 및 Git (시험용)입니다.</target>
        </trans-unit>
        <trans-unit id="88b0c8022c5ad23af413a435de3f18450cd8e8cd" translate="yes" xml:space="preserve">
          <source>Monostyle</source>
          <target state="translated">모노 스타일</target>
        </trans-unit>
        <trans-unit id="9f78e88ddfdd3f2d4e0a6bcc5afe833495f12887" translate="yes" xml:space="preserve">
          <source>Monostyle has four modes:</source>
          <target state="translated">Monostyle에는 네 가지 모드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbd48371b4c0fedf6f7464a61cdc180898b59115" translate="yes" xml:space="preserve">
          <source>Monostyle is a framework for documentation style checking and linting covering all parts of a style guide.</source>
          <target state="translated">Monostyle은 스타일 가이드의 모든 부분을 다루는 문서 스타일 검사 및 linting을위한 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="e21a3bf4a4c63e69c1477a0407e20a92851f1318" translate="yes" xml:space="preserve">
          <source>Monostyle is build as a framework and not as a ready-made tool
because the tools require customization like markup filtering or you might not want to use Chicago style title case.
It includes its own RST parser and a port of the &lt;a href=&quot;https://metacpan.org/pod/Text::Reflow&quot;&gt;Reflow line wrapper&lt;/a&gt;.
Its utilities can also be used for text editing with scripts.</source>
          <target state="translated">Monostyle은 도구에 마크 업 필터링과 같은 사용자 정의가 필요하거나 Chicago 스타일 제목 케이스를 사용하지 않을 수 있기 때문에 기성 도구가 아닌 프레임 워크로 빌드됩니다. 여기에는 자체 RST 파서와 &lt;a href=&quot;https://metacpan.org/pod/Text::Reflow&quot;&gt;리플 로우 라인 래퍼&lt;/a&gt; 의 포트가 포함됩니다 . 이 유틸리티는 스크립트를 사용한 텍스트 편집에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1df1950396dcb4f46dda62068d003d1680b97a0e" translate="yes" xml:space="preserve">
          <source>Open a file in a text editor if the report has a severity higher than specified.
      Please check if your editor of choice is available (else please make a I/PR to add it).</source>
          <target state="translated">보고서의 심각도가 지정된 것보다 높은 경우 텍스트 편집기에서 파일을 엽니 다. 선택한 편집기를 사용할 수 있는지 확인하십시오 (그렇지 않으면 I / PR을 만들어 추가하십시오).</target>
        </trans-unit>
        <trans-unit id="bd83ee5cbd41dcbab989823550559458b89eeca1" translate="yes" xml:space="preserve">
          <source>Post processing:</source>
          <target state="translated">후 처리 :</target>
        </trans-unit>
        <trans-unit id="0ff8b8a530eadcbd9f771128884d2d0161228801" translate="yes" xml:space="preserve">
          <source>Requirements: When using SVN the command line client tools need to be installed.</source>
          <target state="translated">요구 사항 : SVN을 사용할 때 명령 줄 클라이언트 도구를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="9042844a817f13d189c9d137d9d4965f0249d426" translate="yes" xml:space="preserve">
          <source>Running Monostyle</source>
          <target state="translated">Monostyle 실행</target>
        </trans-unit>
        <trans-unit id="1bcad2f25a10449e85da2f7cdb16d98c41d7a8ba" translate="yes" xml:space="preserve">
          <source>Running Monostyle does not replace building the project with Sphinx.
Markup errors can lead to false negatives, so Monostyle has to be run again or
the affected section has to be checked manually.</source>
          <target state="translated">Monostyle을 실행해도 프로젝트 빌드가 Sphinx로 대체되지는 않습니다. 마크 업 오류는 거짓 부정으로 이어질 수 있으므로 Monostyle을 다시 실행하거나 영향을받는 섹션을 수동으로 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="fba0b0bfd03f7d8a044a370063b4fffc4cfd6a8b" translate="yes" xml:space="preserve">
          <source>Set the diff cached option (Git only).</source>
          <target state="translated">diff 캐시 옵션을 설정합니다 (Git 만 해당).</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="e624f215421b1d3d5d2003dde191afa14ad71820" translate="yes" xml:space="preserve">
          <source>The dictionary has to be updated from time to time or after a new topic has been added
to include new words (of cause the whole project has to be spell-checked).
To do this run the &lt;code&gt;spelling&lt;/code&gt; script:</source>
          <target state="translated">사전은 수시로 또는 새 항목이 추가 된 후에 새 단어를 포함하도록 업데이트되어야합니다 (전체 프로젝트의 맞춤법 검사가 필요함). 이렇게하려면 &lt;code&gt;spelling&lt;/code&gt; 스크립트를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c1e86cf8d559f47296ee90df4a2b1263665b371" translate="yes" xml:space="preserve">
          <source>The root is the absolute path to the project directory or where the patch file was created.
      If not set the directory where Monostyle is run from is used as the root.</source>
          <target state="translated">루트는 프로젝트 디렉토리 또는 패치 파일이 생성 된 위치의 절대 경로입니다. 설정하지 않으면 Monostyle이 실행되는 디렉토리가 루트로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f859d6da68a77ae68906081b8b69abbb8da3bc27" translate="yes" xml:space="preserve">
          <source>To check a file or directory.</source>
          <target state="translated">파일 또는 디렉토리를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6490fa29f335c0352347317c37b1088ffd75a1ad" translate="yes" xml:space="preserve">
          <source>To check changes in a patch-file.</source>
          <target state="translated">패치 파일의 변경 사항을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3ac14841208521249a9e8594462482e3dc84b2ea" translate="yes" xml:space="preserve">
          <source>To check changes made to the repository by others.
      Run this before you update your working copy with Git or SVN.</source>
          <target state="translated">다른 사람이 저장소에 변경 한 사항을 확인합니다. Git 또는 SVN으로 작업 복사본을 업데이트하기 전에 이것을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="d550b0e7275336eb78f29eed8dc96b22d0e82868" translate="yes" xml:space="preserve">
          <source>To check your own changes (the default).</source>
          <target state="translated">자신의 변경 사항을 확인하려면 (기본값).</target>
        </trans-unit>
        <trans-unit id="f95390642ca1dd2a229100889696eac018b3d249" translate="yes" xml:space="preserve">
          <source>Update the working copy.</source>
          <target state="translated">작업 사본을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="292da42d3198c7e24b8f9da53e8bd3a377f8d6ba" translate="yes" xml:space="preserve">
          <source>You can set a commit/revision for internal, external and update (SVN only).
With Git these are passed unaltered to diff.
However, with SVN these can be colon separated or dash separated for the &quot;change&quot; syntax.
When a side is omitted e.g. &quot;:ARG&quot; it will default to BASE (your working copy) on the left and
on the right to HEAD (the latest revision in the repository).
For external revisions the &quot;change&quot; syntax is used for single arguments &quot;ARG&quot;.</source>
          <target state="translated">내부, 외부 및 업데이트에 대한 커밋 / 수정을 설정할 수 있습니다 (SVN 만 해당). Git을 사용하면 변경되지 않고 diff로 전달됩니다. 그러나 SVN을 사용하면 &quot;변경&quot;구문에 대해 콜론으로 구분하거나 대시로 구분할 수 있습니다. &quot;: ARG&quot;와 같은면이 생략되면 기본적으로 왼쪽은 BASE (작업 복사본), 오른쪽은 HEAD (저장소의 최신 개정판)입니다. 외부 개정의 경우 &quot;ARG&quot;단일 인수에 &quot;변경&quot;구문이 사용됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
