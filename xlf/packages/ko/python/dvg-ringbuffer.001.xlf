<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/dvg-ringbuffer/">
    <body>
      <group id="dvg-ringbuffer">
        <trans-unit id="54f697a1ff421e46f37022813a88d0937a82090c" translate="yes" xml:space="preserve">
          <source>&amp;amp;</source>
          <target state="translated">&amp;amp;</target>
        </trans-unit>
        <trans-unit id="64dd00b8577dedcc9d94ca606c9b62cc51decb1a" translate="yes" xml:space="preserve">
          <source>(N, 2)</source>
          <target state="translated">(N, 2)</target>
        </trans-unit>
        <trans-unit id="28bdd697b5ce8db8834d6e1bafeb93dd82d97e16" translate="yes" xml:space="preserve">
          <source>(float, 2)</source>
          <target state="translated">(부동, 2)</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="9cdb626109deaa5163d814352eaf6c2281254c06" translate="yes" xml:space="preserve">
          <source>, optional):</source>
          <target state="translated">, 선택 사항) :</target>
        </trans-unit>
        <trans-unit id="44c94e8eac661208cc13a0e78b2d41b65b9a8410" translate="yes" xml:space="preserve">
          <source>, that benefit from being fed with
contiguous arrays at the same memory address each time again, such that compiler
optimizations and data planning are made possible.</source>
          <target state="translated">, 컴파일러 최적화 및 데이터 계획이 가능하도록 매번 동일한 메모리 주소에서 연속 배열을 제공함으로써 이익을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a47dd3c0c471740fb0369f74f2f15eaa8cb372c8" translate="yes" xml:space="preserve">
          <source>, throw an IndexError when trying to append to an
already full buffer.</source>
          <target state="translated">, 이미 가득 찬 버퍼에 추가하려고하면 IndexError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="32e382f29931762057d9bfd18a65b8f382ceabf3" translate="yes" xml:space="preserve">
          <source>1.0.0 (2020-07-21)</source>
          <target state="translated">1.0.0 (2020-07-21)</target>
        </trans-unit>
        <trans-unit id="7c605be3bd59760bd91ccd60ab89bea5fb48872e" translate="yes" xml:space="preserve">
          <source>1.0.1 (2020-07-21)</source>
          <target state="translated">1.0.1 (2020-07-21)</target>
        </trans-unit>
        <trans-unit id="32ef9a2823368a2155611736a8a20e5c1e4dff55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/numpy_ringbuffer/&quot;&gt;https://pypi.org/project/numpy_ringbuffer/&lt;/a&gt; by Eric Wieser.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/numpy_ringbuffer/&quot;&gt;https://pypi.org/project/numpy_ringbuffer/&lt;/a&gt; by Eric Wieser.</target>
        </trans-unit>
        <trans-unit id="aba11d19244c91cf6c34b9124ae72a6c734b5912" translate="yes" xml:space="preserve">
          <source>Append a single value to the ring buffer from the left side.</source>
          <target state="translated">왼쪽에서 링 버퍼에 단일 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="016981ba7e25fad4a1c8375f1aa1451ccab6c7ff" translate="yes" xml:space="preserve">
          <source>Append a single value to the ring buffer.</source>
          <target state="translated">링 버퍼에 단일 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b6075aed00d09ffa3057c99d13847e6be9606a66" translate="yes" xml:space="preserve">
          <source>Args:</source>
          <target state="translated">Args :</target>
        </trans-unit>
        <trans-unit id="989456163f54d452e92ce0b3f4137a800d4fdc82" translate="yes" xml:space="preserve">
          <source>Based on:</source>
          <target state="translated">기반 :</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">변경 로그</target>
        </trans-unit>
        <trans-unit id="48577291905741f73874c9d428ce8c5d99e69a66" translate="yes" xml:space="preserve">
          <source>Commonly,</source>
          <target state="translated">천하게,</target>
        </trans-unit>
        <trans-unit id="a576b7933f426d53be2b8232cef741b17eb04980" translate="yes" xml:space="preserve">
          <source>Create a new ring buffer with the given capacity and element type.</source>
          <target state="translated">주어진 용량과 요소 유형으로 새 링 버퍼를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">기본:</target>
        </trans-unit>
        <trans-unit id="2b3bc5815548bea48d43e316b66c7d69514bd268" translate="yes" xml:space="preserve">
          <source>Desired type of buffer elements. Use a type like</source>
          <target state="translated">원하는 유형의 버퍼 요소. 다음과 같은 유형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7569d474332fcaf38a01f151c3ca4d69613eadbc" translate="yes" xml:space="preserve">
          <source>DvG_RingBuffer</source>
          <target state="translated">DvG_RingBuffer</target>
        </trans-unit>
        <trans-unit id="d504f6cd9d999d32882fc53a863dd468271a5065" translate="yes" xml:space="preserve">
          <source>Extend the ring buffer with a list of values from the left side.</source>
          <target state="translated">왼쪽의 값 목록으로 링 버퍼를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="7d9cf0e3ea311f2772a6d43d221de8011e356ecb" translate="yes" xml:space="preserve">
          <source>Extend the ring buffer with a list of values.</source>
          <target state="translated">값 목록으로 링 버퍼를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="d4a29906c68c5d8c87100cd30c25d6669befa6ff" translate="yes" xml:space="preserve">
          <source>First release on PyPI</source>
          <target state="translated">PyPI의 첫 번째 릴리스</target>
        </trans-unit>
        <trans-unit id="1b96add1d8d2c7b3800524791c296e3ec369f0ac" translate="yes" xml:space="preserve">
          <source>Github: &lt;a href=&quot;https://github.com/Dennis-van-Gils/python-dvg-ringbuffer&quot;&gt;https://github.com/Dennis-van-Gils/python-dvg-ringbuffer&lt;/a&gt;</source>
          <target state="translated">Github : &lt;a href=&quot;https://github.com/Dennis-van-Gils/python-dvg-ringbuffer&quot;&gt;https://github.com/Dennis-van-Gils/python-dvg-ringbuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">만약</target>
        </trans-unit>
        <trans-unit id="96e614d5b2bcc36681da50b0ebd1735746991837" translate="yes" xml:space="preserve">
          <source>If, and only if the ring buffer is completely full, will it return its array
data as a contiguous C-style numpy array at a single fixed memory address per
ring buffer instance. It does so by unwrapping the discontiguous ring buffer
array into a second extra &lt;em&gt;unwrap&lt;/em&gt; buffer that is a private member of the ring
buffer class. This is advantegeous for other accelerated computations by, e.g.,</source>
          <target state="translated">링 버퍼가 완전히 꽉 찬 경우에만 링 버퍼 인스턴스 당 단일 고정 메모리 주소에서 배열 데이터를 연속 C 스타일 numpy 배열로 반환합니다. 이것은 불연속 링 버퍼 배열을 링 버퍼 클래스의 개인 멤버 인 두 번째 추가 &lt;em&gt;언랩&lt;/em&gt; 버퍼 로 언 래핑하여 수행합니다 . 이것은 예를 들어 다음과 같은 다른 가속 계산에 유리합니다.</target>
        </trans-unit>
        <trans-unit id="9a3d33b36331c859ed9d30945c3a56862361ec05" translate="yes" xml:space="preserve">
          <source>Indexing &amp;amp; slicing</source>
          <target state="translated">인덱싱 및 슬라이싱</target>
        </trans-unit>
        <trans-unit id="8a8fb4a4cd5fda8de8e5e587a3b6e7dd2ecddb15" translate="yes" xml:space="preserve">
          <source>Installation:</source>
          <target state="translated">설치:</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">행동 양식</target>
        </trans-unit>
        <trans-unit id="2ae7511ea5c5f2bfe1a01618fb2be74627b2ce4e" translate="yes" xml:space="preserve">
          <source>Numpy ring buffer at a &lt;em&gt;fixed&lt;/em&gt; memory address to allow for significantly
sped up</source>
          <target state="translated">&lt;em&gt;고정&lt;/em&gt; 메모리 주소의 Numpy 링 버퍼 를 통해 상당한 속도 향상 가능</target>
        </trans-unit>
        <trans-unit id="827955f846b1432ca84569cdeb84cacbe343c78c" translate="yes" xml:space="preserve">
          <source>Numpy ringbuffer at a fixed memory address to allow for significantly sped up numpy, sigpy, numba &amp; pyFFTW calculations.</source>
          <target state="translated">numpy, sigpy, numba 및 pyFFTW 계산 속도를 크게 높일 수 있도록 고정 메모리 주소의 Numpy 링 버퍼.</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">속성</target>
        </trans-unit>
        <trans-unit id="8a8430cca9799e0f48a2a6bb548b8fdf613eff5d" translate="yes" xml:space="preserve">
          <source>PyPI: &lt;a href=&quot;https://pypi.org/project/dvg-ringbuffer&quot;&gt;https://pypi.org/project/dvg-ringbuffer&lt;/a&gt;</source>
          <target state="translated">PyPI : &lt;a href=&quot;https://pypi.org/project/dvg-ringbuffer&quot;&gt;https://pypi.org/project/dvg-ringbuffer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d6c0a4505fc3d89fff6e9f3b8bdfecc6a40b92e" translate="yes" xml:space="preserve">
          <source>Remove the left-most item from the ring buffer and return it.</source>
          <target state="translated">링 버퍼에서 가장 왼쪽에있는 항목을 제거하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ef041d28274ecf8adb458be1b154b22675c91b8" translate="yes" xml:space="preserve">
          <source>Remove the right-most item from the ring buffer and return it.</source>
          <target state="translated">링 버퍼에서 맨 오른쪽 항목을 제거하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e7cab9de8218f7ab1806e99e70501b1a42780a19" translate="yes" xml:space="preserve">
          <source>RingBuffer(capacity, dtype=np.float64, allow_overwrite=True)</source>
          <target state="translated">RingBuffer (용량, dtype = np.float64, allow_overwrite = True)</target>
        </trans-unit>
        <trans-unit id="5ababa633edc4045ef74497f3b582dd432ca103b" translate="yes" xml:space="preserve">
          <source>The data array that is returned by a full ring buffer is a pass by
reference of the &lt;em&gt;unwrap&lt;/em&gt; buffer. It is not a copy! Hence, changing
values in the returned data array is identical to changing values in the
&lt;em&gt;unwrap&lt;/em&gt; buffer.</source>
          <target state="translated">풀 링 버퍼에 의해 반환되는 데이터 배열은 &lt;em&gt;언랩&lt;/em&gt; 버퍼의 참조에 의한 전달 입니다. 사본이 아닙니다! 따라서 반환 된 데이터 배열의 값을 변경하는 것은 &lt;em&gt;unwrap&lt;/em&gt; 버퍼의 값을 변경하는 것과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="27f640135c2ccd5e3f53f057697d458bf4b897af" translate="yes" xml:space="preserve">
          <source>The maximum capacity of the ring buffer</source>
          <target state="translated">링 버퍼의 최대 용량</target>
        </trans-unit>
        <trans-unit id="af54fe425072c66f5d72d4eb4391676952586ac3" translate="yes" xml:space="preserve">
          <source>This ring buffer is not thread safe. You&amp;rsquo;ll have to implement your own
mutex locks when using this ring buffer in multithreaded operations.</source>
          <target state="translated">이 링 버퍼는 스레드로부터 안전하지 않습니다. 다중 스레드 작업에서이 링 버퍼를 사용할 때 고유 한 뮤텍스 잠금을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">진실</target>
        </trans-unit>
        <trans-unit id="c774687fbaa134e20ef62762c8007adb51719fd2" translate="yes" xml:space="preserve">
          <source>Updated documentation</source>
          <target state="translated">업데이트 된 문서</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">경고</target>
        </trans-unit>
        <trans-unit id="77d1713c7a557e36ad0759a1d8b77e9279d153a8" translate="yes" xml:space="preserve">
          <source>When the ring buffer is not completely full, it will return its data as a
contiguous C-style numpy array, but at different memory addresses. This is how
the original</source>
          <target state="translated">링 버퍼가 완전히 꽉 차 있지 않으면 데이터를 연속적인 C 스타일 numpy 배열로 반환하지만 다른 메모리 주소에서 반환합니다. 이것이 원본</target>
        </trans-unit>
        <trans-unit id="e7e2be0f754a9e0478a307c101be9f2b8f8123f5" translate="yes" xml:space="preserve">
          <source>allow_overwrite (</source>
          <target state="translated">allow_overwrite (</target>
        </trans-unit>
        <trans-unit id="f26775717508dc502d30cf6dc1618e6f43f88513" translate="yes" xml:space="preserve">
          <source>already returns numpy arrays it will outperform a</source>
          <target state="translated">이미 numpy 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="653d55e3255f2edb34821f18ce917b7c5082b5d8" translate="yes" xml:space="preserve">
          <source>always operates.</source>
          <target state="translated">항상 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2d2c752d59991b6796117ec68ad0ae285d53074d" translate="yes" xml:space="preserve">
          <source>and provides several optimizations and extra features,
but requires Python 3.</source>
          <target state="translated">여러 최적화 및 추가 기능을 제공하지만 Python 3이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e71a4d686aa55980d1b7aee84d26b3c83a1e4331" translate="yes" xml:space="preserve">
          <source>append(value)</source>
          <target state="translated">추가 (값)</target>
        </trans-unit>
        <trans-unit id="cef6593fb8c0f34a27e7c722ab1703d3a67ab3d6" translate="yes" xml:space="preserve">
          <source>appendleft(value)</source>
          <target state="translated">appendleft (값)</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">부울</target>
        </trans-unit>
        <trans-unit id="247dc32c728de4198f488a89defea9f075611ee1" translate="yes" xml:space="preserve">
          <source>calculations.</source>
          <target state="translated">계산.</target>
        </trans-unit>
        <trans-unit id="9e145f33f5283953cfa85f930b8acc9aa1cc319f" translate="yes" xml:space="preserve">
          <source>can be used as a drop-in replacement for</source>
          <target state="translated">드롭 인 교체로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f8503591cb02ef4d364a4d03a2794c7194aec76" translate="yes" xml:space="preserve">
          <source>capacity (</source>
          <target state="translated">용량 (</target>
        </trans-unit>
        <trans-unit id="af6ab064a94fb3e9fd590a99e474c2ed6fe59e97" translate="yes" xml:space="preserve">
          <source>clear()</source>
          <target state="translated">명확한()</target>
        </trans-unit>
        <trans-unit id="a605eff5f277b9952febaf320560f6684d69fdcc" translate="yes" xml:space="preserve">
          <source>collections.deque()</source>
          <target state="translated">collections.deque ()</target>
        </trans-unit>
        <trans-unit id="f029d4f09539006f642c113750ef5cde1ae43f1d" translate="yes" xml:space="preserve">
          <source>current_address</source>
          <target state="translated">현재 주소</target>
        </trans-unit>
        <trans-unit id="6b122a9ea5230c43bd4d33f128fedb6d28091865" translate="yes" xml:space="preserve">
          <source>data-type</source>
          <target state="translated">데이터 형식</target>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="3875385a549df8cd868024df18d96c4e63f95b17" translate="yes" xml:space="preserve">
          <source>dtype (</source>
          <target state="translated">dtype (</target>
        </trans-unit>
        <trans-unit id="223fc99238e50a0ae4c72fe981b00ca903b03eff" translate="yes" xml:space="preserve">
          <source>easily, tested to be a factor of ~60.</source>
          <target state="translated">쉽게, ~ 60의 요소로 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="31724e24691d54384699fa99ff735ce60351f157" translate="yes" xml:space="preserve">
          <source>extend(values)</source>
          <target state="translated">확장 (값)</target>
        </trans-unit>
        <trans-unit id="2019d34f6d9399c9652f3b7ea45b686dbcbf901b" translate="yes" xml:space="preserve">
          <source>extendleft(values)</source>
          <target state="translated">extendleft (값)</target>
        </trans-unit>
        <trans-unit id="b55ad81ad51c05180b9fe5c7f3e553a19b67618f" translate="yes" xml:space="preserve">
          <source>including negative indices and slicing</source>
          <target state="translated">음수 지수 및 슬라이싱 포함</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="330139270649303a1662357dbbf0d8362c7d3840" translate="yes" xml:space="preserve">
          <source>is used to act as a ring buffer. The
benefits of a deque is that it is thread safe and fast (enough) for most
situations. However, there is an overhead whenever the deque &amp;ndash; a list-like
container &amp;ndash; needs to be transformed into a numpy array. Because</source>
          <target state="translated">링 버퍼 역할을하는 데 사용됩니다. deque의 장점은 대부분의 상황에서 스레드로부터 안전하고 빠르다는 것입니다. 그러나 목록과 같은 컨테이너 인 deque를 numpy 배열로 변환해야 할 때마다 오버 헤드가 발생합니다. 때문에</target>
        </trans-unit>
        <trans-unit id="1f11f6408545300d793492755637db52a6a2a9ef" translate="yes" xml:space="preserve">
          <source>is_full</source>
          <target state="translated">가득</target>
        </trans-unit>
        <trans-unit id="ab57a25af8231f76afabaa0c5cd8df987f8f4506" translate="yes" xml:space="preserve">
          <source>maxlen</source>
          <target state="translated">Maxlen</target>
        </trans-unit>
        <trans-unit id="b4c917c78523ecbd6252dd037b029b9d396283c6" translate="yes" xml:space="preserve">
          <source>np.float64</source>
          <target state="translated">np.float64</target>
        </trans-unit>
        <trans-unit id="06cfe17f91e1462f0d2025c991b6b3eec1b39d40" translate="yes" xml:space="preserve">
          <source>numba</source>
          <target state="translated">누바</target>
        </trans-unit>
        <trans-unit id="a65e1d3845cf3b10a01939410842cdd6a3d0a6de" translate="yes" xml:space="preserve">
          <source>numpy</source>
          <target state="translated">numpy</target>
        </trans-unit>
        <trans-unit id="b560b3922e67a39d201c5fc998e5860af33f868e" translate="yes" xml:space="preserve">
          <source>numpy-buffer</source>
          <target state="translated">numpy 버퍼</target>
        </trans-unit>
        <trans-unit id="ece3a227b5c9aa67b328b2fad85b153cbdfa7ea4" translate="yes" xml:space="preserve">
          <source>numpy_ringbuffer</source>
          <target state="translated">numpy_ringbuffer</target>
        </trans-unit>
        <trans-unit id="fe1c1388093ee4c0e4116949da1d3aea2c47b396" translate="yes" xml:space="preserve">
          <source>pip install dvg-ringbuffer</source>
          <target state="translated">pip 설치 dvg-ringbuffer</target>
        </trans-unit>
        <trans-unit id="1d3a532fb96ca83691e70c9c7f5620091a52f5d4" translate="yes" xml:space="preserve">
          <source>pop()</source>
          <target state="translated">팝()</target>
        </trans-unit>
        <trans-unit id="56e4c4bfcb64befbae8ebd0b24b2f8789e42384b" translate="yes" xml:space="preserve">
          <source>popleft()</source>
          <target state="translated">popleft ()</target>
        </trans-unit>
        <trans-unit id="9ef09675298fd207b9f0975319239e53fe09be2e" translate="yes" xml:space="preserve">
          <source>pyFFTW</source>
          <target state="translated">pyFFTW</target>
        </trans-unit>
        <trans-unit id="5080fd62c27826c4bad11cdabea225200a35a04c" translate="yes" xml:space="preserve">
          <source>shape</source>
          <target state="translated">모양</target>
        </trans-unit>
        <trans-unit id="acacd7d5ab98ddf3f9d0142876fb5f358465e5da" translate="yes" xml:space="preserve">
          <source>sigpy</source>
          <target state="translated">시그 피</target>
        </trans-unit>
        <trans-unit id="06e498c7241e0fc6344f33da4ec019f743eb356c" translate="yes" xml:space="preserve">
          <source>to produce a buffer with shape</source>
          <target state="translated">모양을 가진 버퍼를 생산하기 위해</target>
        </trans-unit>
        <trans-unit id="d042534d2a3084d82fedeb7450c540f34e8bf4fa" translate="yes" xml:space="preserve">
          <source>unwrap_address</source>
          <target state="translated">unwrap_address</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
