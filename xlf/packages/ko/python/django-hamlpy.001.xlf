<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-hamlpy/">
    <body>
      <group id="django-hamlpy">
        <trans-unit id="cf7e7ea9bc679ec0d8301abf431450c1e117a4f3" translate="yes" xml:space="preserve">
          <source>&amp;hellip; and do something more fun with all the time you save not typing angle
brackets and remembering to close tags?</source>
          <target state="translated">&amp;hellip; 꺾쇠 괄호를 입력하지 않고 태그를 닫는 것을 기억하는 시간을 절약하면서 더 재미있는 일을하십니까?</target>
        </trans-unit>
        <trans-unit id="a5c978f6dd7ae6e57a086af487b2350795dd964d" translate="yes" xml:space="preserve">
          <source>&amp;ndash; The character that should wrap element
attributes. Defaults to</source>
          <target state="translated">&amp;ndash; 요소 속성을 래핑해야하는 문자. 기본값은</target>
        </trans-unit>
        <trans-unit id="0bb3bf8dfbd3e8165f7d63d7674533f44b7ff7ea" translate="yes" xml:space="preserve">
          <source>&amp;ndash; Whether to support</source>
          <target state="translated">&amp;ndash; 지원 여부</target>
        </trans-unit>
        <trans-unit id="53511e9cdba46d591c1099876b11bf45457460c1" translate="yes" xml:space="preserve">
          <source>(an apostrophe).</source>
          <target state="translated">(아포스트로피).</target>
        </trans-unit>
        <trans-unit id="ce23618fb2907ab1ce2c72231730e7ee7b344f11" translate="yes" xml:space="preserve">
          <source>*.haml</source>
          <target state="translated">* .haml</target>
        </trans-unit>
        <trans-unit id="5ca02b907664fd74812b9849ee4ac29a47fcc429" translate="yes" xml:space="preserve">
          <source>*.hamlpy</source>
          <target state="translated">* .hamlpy</target>
        </trans-unit>
        <trans-unit id="ae03f270e559c6a5f40189a3ac22db57ef0df2e2" translate="yes" xml:space="preserve">
          <source>. Defaults to</source>
          <target state="translated">. 기본값은</target>
        </trans-unit>
        <trans-unit id="85e81e274fb271aee4958e99c28cd51c2dab160f" translate="yes" xml:space="preserve">
          <source>.haml</source>
          <target state="translated">.haml</target>
        </trans-unit>
        <trans-unit id="115903b0d516df101c6a30c07311b8f2596e38ff" translate="yes" xml:space="preserve">
          <source>.hamlpy</source>
          <target state="translated">.hamlpy</target>
        </trans-unit>
        <trans-unit id="fdd9cb5528e768c7b02b1250d2c45a9aa49cbf29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;needs&lt;/em&gt; to be first in the
inheritance list.</source>
          <target state="translated">&lt;em&gt;요구&lt;/em&gt; 상속 목록의 첫 번째가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c289c665f95f6e2aed0e45ed38c22073aeb817f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; If you run into build errors, then you may need to install
&lt;a href=&quot;http://stackoverflow.com/a/21530768/2896976&quot;&gt;python&amp;rsquo;s development
package&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 빌드 오류가 발생하면 &lt;a href=&quot;http://stackoverflow.com/a/21530768/2896976&quot;&gt;python의 개발 패키지&lt;/a&gt; 를 설치해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="3cd778b266466c36908c2ed60173e07caa2a128f" translate="yes" xml:space="preserve">
          <source>All views are importable from</source>
          <target state="translated">모든보기는 다음에서 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e1e81234165fc8c9419f91c914bdc08733427de" translate="yes" xml:space="preserve">
          <source>Almost all of the syntax of Haml is preserved.</source>
          <target state="translated">Haml의 거의 모든 구문이 보존됩니다.</target>
        </trans-unit>
        <trans-unit id="c1419f51508fe93e785bbfc7cb05f15187328fad" translate="yes" xml:space="preserve">
          <source>And the latest development version can be installed directly from
GitHub:</source>
          <target state="translated">최신 개발 버전은 GitHub에서 직접 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="499292b481bdb6dcef14b988b56d0838eb43b050" translate="yes" xml:space="preserve">
          <source>ArchiveIndexView</source>
          <target state="translated">ArchiveIndexView</target>
        </trans-unit>
        <trans-unit id="71c20b93affd1ce252c4f2c53144cb076e8e488e" translate="yes" xml:space="preserve">
          <source>Check out the
&lt;a href=&quot;http://github.com/nyaruka/django-hamlpy/blob/master/REFERENCE.md&quot;&gt;reference&lt;/a&gt;
file for the complete syntax reference and more examples.</source>
          <target state="translated">전체 구문 참조 및 더 많은 예제 는 &lt;a href=&quot;http://github.com/nyaruka/django-hamlpy/blob/master/REFERENCE.md&quot;&gt;참조&lt;/a&gt; 파일을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="da7f712bb4cf181b5742106173dc467adf34d6d5" translate="yes" xml:space="preserve">
          <source>Class Based Views</source>
          <target state="translated">클래스 기반 뷰</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="5d1593c09ccf477001ced1c40981c569df0005e8" translate="yes" xml:space="preserve">
          <source>Create message files for translation</source>
          <target state="translated">번역 할 메시지 파일 만들기</target>
        </trans-unit>
        <trans-unit id="ed0b079ebe6a72415ccdd4f0cf8b11627dd7c4e1" translate="yes" xml:space="preserve">
          <source>CreateView</source>
          <target state="translated">CreateView</target>
        </trans-unit>
        <trans-unit id="22b6fb057789622f31299c3882272f34dd7a264c" translate="yes" xml:space="preserve">
          <source>Date related views:</source>
          <target state="translated">날짜 관련보기 :</target>
        </trans-unit>
        <trans-unit id="8adc7b899585dd67420daffc9b0b7c3144314e70" translate="yes" xml:space="preserve">
          <source>DateDetailView</source>
          <target state="translated">DateDetailView</target>
        </trans-unit>
        <trans-unit id="8102851e24b6fe926389ab09106720f5b8b35c1d" translate="yes" xml:space="preserve">
          <source>DayArchiveView</source>
          <target state="translated">DayArchiveView</target>
        </trans-unit>
        <trans-unit id="d1843d2f75fa48a99cc9b16c1ce7f66cd31a3eea" translate="yes" xml:space="preserve">
          <source>DeleteView</source>
          <target state="translated">DeleteView</target>
        </trans-unit>
        <trans-unit id="7eba9daa89569a1bed41431ccab624cc9e464039" translate="yes" xml:space="preserve">
          <source>DetailView</source>
          <target state="translated">자세한 내용</target>
        </trans-unit>
        <trans-unit id="bd1e9a6ffbc0dffec4c161568cdc6997f8a247ee" translate="yes" xml:space="preserve">
          <source>Display views:</source>
          <target state="translated">디스플레이보기 :</target>
        </trans-unit>
        <trans-unit id="b4c2a9beb1df02a69ee937441da41d82fbb698de" translate="yes" xml:space="preserve">
          <source>Edit views:</source>
          <target state="translated">보기 편집 :</target>
        </trans-unit>
        <trans-unit id="7ecac065bffe41b9161e74a7dc99d35f3f0510d7" translate="yes" xml:space="preserve">
          <source>Ensure they are listed before the standard Django template loaders or
these loaders will try to process your Haml templates.</source>
          <target state="translated">표준 Django 템플릿 로더 앞에 나열되어 있는지 확인하십시오. 그렇지 않으면 이러한 로더가 Haml 템플릿을 처리하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">그릇된</target>
        </trans-unit>
        <trans-unit id="96085d775d49e8d5ad736d08cbc06d2dd145e74e" translate="yes" xml:space="preserve">
          <source>HAMLPY_ATTR_WRAPPER</source>
          <target state="translated">HAMLPY_ATTR_WRAPPER</target>
        </trans-unit>
        <trans-unit id="116ef0a0baa7f672ddd7016335384c80e26196f1" translate="yes" xml:space="preserve">
          <source>HAMLPY_DJANGO_INLINE_STYLE</source>
          <target state="translated">HAMLPY_DJANGO_INLINE_STYLE</target>
        </trans-unit>
        <trans-unit id="d5cb442f6fc5ccee0a43436b94e14438c24713ca" translate="yes" xml:space="preserve">
          <source>Haml like syntax for Django templates.</source>
          <target state="translated">Django 템플릿에 대한 Haml 유사 구문.</target>
        </trans-unit>
        <trans-unit id="025c27bf90f4d58dde3cec2a1d234dcb1803a318" translate="yes" xml:space="preserve">
          <source>HamlExtensionTemplateView</source>
          <target state="translated">HamlExtensionTemplateView</target>
        </trans-unit>
        <trans-unit id="c31ca98585d1b7e03de112bc1d0db39afa63410d" translate="yes" xml:space="preserve">
          <source>HamlPy must first be included in Django&amp;rsquo;s list of apps, i.e.</source>
          <target state="translated">HamlPy는 먼저 Django의 앱 목록에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">설치 중</target>
        </trans-unit>
        <trans-unit id="192847b15c33bd4913e8c554131ed60b7aeaed65" translate="yes" xml:space="preserve">
          <source>ListView</source>
          <target state="translated">목록보기</target>
        </trans-unit>
        <trans-unit id="74d6f6ac96614837701b21d0d26b24a8dc580355" translate="yes" xml:space="preserve">
          <source>MonthArchiveView</source>
          <target state="translated">MonthArchiveView</target>
        </trans-unit>
        <trans-unit id="8a470c00002025702d6eacdd0d0fd0be4b133b73" translate="yes" xml:space="preserve">
          <source>Option 1: Template loaders</source>
          <target state="translated">옵션 1 : 템플릿 로더</target>
        </trans-unit>
        <trans-unit id="97c9f32c194812b0806d2e51490f6ffded5275c7" translate="yes" xml:space="preserve">
          <source>Option 2: Watcher</source>
          <target state="translated">옵션 2 : 감시자</target>
        </trans-unit>
        <trans-unit id="027e564e7a309e633c8ba27e5de70195c8c27b3f" translate="yes" xml:space="preserve">
          <source>Please write tests for any new features and always ensure the current
tests pass. To run the tests, use:</source>
          <target state="translated">새로운 기능에 대한 테스트를 작성하고 항상 현재 테스트가 통과하는지 확인하십시오. 테스트를 실행하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">참고</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">통사론</target>
        </trans-unit>
        <trans-unit id="56adede8c8aff35136ac545b7250a41054a0ee42" translate="yes" xml:space="preserve">
          <source>Template caching</source>
          <target state="translated">템플릿 캐싱</target>
        </trans-unit>
        <trans-unit id="bacd3f4fbb65f215586c2df0e29728f2047eda6f" translate="yes" xml:space="preserve">
          <source>The available view classes are:</source>
          <target state="translated">사용 가능한 뷰 클래스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ed52dacfb3727994a72c64f49374df319541784" translate="yes" xml:space="preserve">
          <source>The latest stable version can be installed using
&lt;a href=&quot;http://pypi.python.org/pypi/pip/&quot;&gt;pip&lt;/a&gt;:</source>
          <target state="translated">최신 안정 버전은 &lt;a href=&quot;http://pypi.python.org/pypi/pip/&quot;&gt;pip를&lt;/a&gt; 사용하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c3cfe448268b2e3db2d2f766bd346fe63b96d86" translate="yes" xml:space="preserve">
          <source>The library can also be used as a stand-alone program. There is a
watcher script which will monitor Haml files in a given directory and
convert them to HTML as they are edited.</source>
          <target state="translated">라이브러리는 독립형 프로그램으로도 사용할 수 있습니다. 주어진 디렉토리에서 Haml 파일을 모니터링하고 편집 할 때 HTML로 변환하는 감시자 스크립트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d172712bbb8e50d061f3e53568fd349ba8fe401" translate="yes" xml:space="preserve">
          <source>The main difference is instead of interpreting Ruby, or even Python we
instead can create Django tags and variables. For example:</source>
          <target state="translated">가장 큰 차이점은 Ruby 나 Python을 해석하는 대신 Django 태그와 변수를 만들 수 있다는 것입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="fa8d8fe187895731f2ee587bd0afa05cca0a726e" translate="yes" xml:space="preserve">
          <source>The syntax above is &lt;a href=&quot;http://www.haml-lang.com&quot;&gt;Haml&lt;/a&gt; - a templating
language used extensively in the Ruby on Rails community. This library
lets Django developers use a Haml like syntax in their templates. It&amp;rsquo;s
not a template engine in itself, but simply a compiler which will
convert &amp;ldquo;HamlPy&amp;rdquo; files into templates that Django can understand.</source>
          <target state="translated">위의 구문은 &lt;a href=&quot;http://www.haml-lang.com&quot;&gt;Haml&lt;/a&gt; -Ruby on Rails 커뮤니티에서 광범위하게 사용되는 템플릿 언어입니다. 이 라이브러리를 통해 Django 개발자는 템플릿에서 Haml과 같은 구문을 사용할 수 있습니다. 그 자체로는 템플릿 엔진이 아니라 &quot;HamlPy&quot;파일을 Django가 이해할 수있는 템플릿으로 변환하는 컴파일러입니다.</target>
        </trans-unit>
        <trans-unit id="c8cd2afb67dc8f1171d425cb3523ca1fc9cf3822" translate="yes" xml:space="preserve">
          <source>Then just include your Haml templates along with all the other files
which contain translatable strings, e.g.</source>
          <target state="translated">그런 다음 번역 가능한 문자열을 포함하는 다른 모든 파일과 함께 Haml 템플릿을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="00c4604a30901d1044f2e9cb8b8fcd1a31ab060a" translate="yes" xml:space="preserve">
          <source>There are two different ways to use this library.</source>
          <target state="translated">이 라이브러리를 사용하는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ecc57c809f0b05a860e708afc703910c1fe2da0" translate="yes" xml:space="preserve">
          <source>These are Django template loaders which will convert any templates with</source>
          <target state="translated">이것은 Django 템플릿 로더입니다.</target>
        </trans-unit>
        <trans-unit id="da832fb408010e7e31cda261da516fc0e6a9b693" translate="yes" xml:space="preserve">
          <source>This library also provides &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/class-based-views/generic-display/&quot;&gt;the same class based generic views than
django&lt;/a&gt;
with the enhancement that they start by looking for templates endings
with</source>
          <target state="translated">이 라이브러리는 또한 &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/class-based-views/generic-display/&quot;&gt;django&lt;/a&gt; 와 동일한 클래스 기반 제네릭 뷰를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="7d9ef7e7c44df5b0177bbd9763154f464507970d" translate="yes" xml:space="preserve">
          <source>This project is a fork of the no longer maintained
&lt;a href=&quot;https://github.com/jessemiller/HamlPy&quot;&gt;HamlPy&lt;/a&gt;. It introduces Python
3 support, support for new Django versions, and a host of new features
and bug fixes. Note that the package name is now &lt;em&gt;django-hamlpy&lt;/em&gt;.</source>
          <target state="translated">이 프로젝트는 더 이상 유지되지 않는 &lt;a href=&quot;https://github.com/jessemiller/HamlPy&quot;&gt;HamlPy&lt;/a&gt; 의 포크입니다 . Python 3 지원, 새로운 Django 버전 지원, 다양한 새로운 기능 및 버그 수정을 소개합니다. 패키지 이름은 이제 &lt;em&gt;django-hamlpy&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c3366f92bf780a868eb3cfe01e4d39039fafacd4" translate="yes" xml:space="preserve">
          <source>To run the performance test, use:</source>
          <target state="translated">성능 테스트를 실행하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a8f885819fc15c16d1f98ca74730d7aa083f9349" translate="yes" xml:space="preserve">
          <source>TodayArchiveView</source>
          <target state="translated">TodayArchiveView</target>
        </trans-unit>
        <trans-unit id="36a8ba5cf5d671507ac876f3e15396759d10f499" translate="yes" xml:space="preserve">
          <source>UpdateView</source>
          <target state="translated">UpdateView</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="2eaea23167225e5ec6f4c499247584f439cbbefb" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re always happy to have contributions to this project. To get started
you&amp;rsquo;ll need to clone the project and install the dependencies:</source>
          <target state="translated">우리는 항상이 프로젝트에 기여하게되어 기쁩니다. 시작하려면 프로젝트를 복제하고 종속성을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="e45a52407ccfb2e6f3aa7b67283797eff94d31ec" translate="yes" xml:space="preserve">
          <source>WeekArchiveView</source>
          <target state="translated">WeekArchiveView</target>
        </trans-unit>
        <trans-unit id="ac6b47ce8395ddd6e0d8a239a7817d478a877860" translate="yes" xml:space="preserve">
          <source>Why type:</source>
          <target state="translated">입력해야하는 이유 :</target>
        </trans-unit>
        <trans-unit id="0e5b8a80b577d8618e45d61190911f2c86c9fae6" translate="yes" xml:space="preserve">
          <source>YearArchiveView</source>
          <target state="translated">YearArchiveView</target>
        </trans-unit>
        <trans-unit id="71c0e8158c977a829261e64664b563dc48113b01" translate="yes" xml:space="preserve">
          <source>You can configure the Haml compiler with the following Django settings:</source>
          <target state="translated">다음 Django 설정으로 Haml 컴파일러를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89f035d6c66e67b80d042276d8dd02d296d14800" translate="yes" xml:space="preserve">
          <source>You can use these loaders with template caching - just add</source>
          <target state="translated">템플릿 캐싱과 함께 이러한 로더를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="b9a1a7feb2b775ec7eb7ef4380142dd64a70413e" translate="yes" xml:space="preserve">
          <source>and are built
using the</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="3363e0f7cb98da88976cf74a7c5bcba2c12b437d" translate="yes" xml:space="preserve">
          <source>becomes&amp;hellip;</source>
          <target state="translated">된다&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cf76321a5885462a7312d53e80093189371d4c40" translate="yes" xml:space="preserve">
          <source>django.template.loaders.cached.Loader</source>
          <target state="translated">django.template.loaders.cached.Loader</target>
        </trans-unit>
        <trans-unit id="8139fc1745ea17c69410d29aced7b86b5722c466" translate="yes" xml:space="preserve">
          <source>extensions to regular Django templates whenever
they are requested by a Django view. To use them, add them to the list
of template loaders in your Django settings, e.g.</source>
          <target state="translated">Django 뷰에서 요청할 때마다 일반 Django 템플릿에 대한 확장입니다. 이를 사용하려면 Django 설정의 템플릿 로더 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a8a4dcb51184ffcb56d114f85b959fd712aef90c" translate="yes" xml:space="preserve">
          <source>hamlpy.views.generic</source>
          <target state="translated">hamlpy.views.generic</target>
        </trans-unit>
        <trans-unit id="c2c43536dd263dfa2e8825092189983a9de90a84" translate="yes" xml:space="preserve">
          <source>in addition to their default templates.
Apart from that, they are exactly the same class based generic views.
For example:</source>
          <target state="translated">기본 템플릿 외에도 그 외에는 정확히 동일한 클래스 기반 제네릭 뷰입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="0e39e3b3dc78768e96f553108ee331feecdbae57" translate="yes" xml:space="preserve">
          <source>mixin which you can use to
create your own custom Haml-using views. For example:</source>
          <target state="translated">사용자 정의 Haml 사용 뷰를 만드는 데 사용할 수있는 mixin. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="b1676fae22b3b49220a53e7a73be1df8bddc4a87" translate="yes" xml:space="preserve">
          <source>syntax
for inline variables in addition to</source>
          <target state="translated">인라인 변수에 대한 구문</target>
        </trans-unit>
        <trans-unit id="ac48c0dd8af737693a04736d4837c26392b708a6" translate="yes" xml:space="preserve">
          <source>to your list of loaders, e.g.</source>
          <target state="translated">로더 목록에 추가합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="0418763162b172ebab60e0e18bf506e36638d0ef" translate="yes" xml:space="preserve">
          <source>turns into:</source>
          <target state="translated">다음으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="f460ee0c057755d124d34aca08c37dd32e91cf48" translate="yes" xml:space="preserve">
          <source>when you can just type:</source>
          <target state="translated">다음을 입력하면됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
