<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/bdateutil/">
    <body>
      <group id="bdateutil">
        <trans-unit id="c6a2db76feb84be87491cc2c9962f2264c4ded96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;Pull Requests&lt;/a&gt; are always welcome.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;Los problemas&lt;/a&gt; y las &lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;solicitudes de extracci&amp;oacute;n&lt;/a&gt; siempre son bienvenidos.</target>
        </trans-unit>
        <trans-unit id="1be273a0f8002b29bf6f4f31ce1e1cfd2612e163" translate="yes" xml:space="preserve">
          <source>A new function &lt;code&gt;isbday&lt;/code&gt; which returns &lt;code&gt;True&lt;/code&gt; if the argument
passed to it falls on a business day and &lt;code&gt;False&lt;/code&gt; if it is a weekend or
holiday. Option keyword argument &lt;code&gt;holidays&lt;/code&gt; adds the ability to take
into account a specific set of holidays.</source>
          <target state="translated">Una nueva funci&amp;oacute;n &lt;code&gt;isbday&lt;/code&gt; que devuelve &lt;code&gt;True&lt;/code&gt; si el argumento que se le pasa cae en un d&amp;iacute;a h&amp;aacute;bil y &lt;code&gt;False&lt;/code&gt; si es un fin de semana o feriado. &lt;code&gt;holidays&lt;/code&gt; argumento de argumento de palabra clave de opci&amp;oacute;n agrega la capacidad de tener en cuenta un conjunto espec&amp;iacute;fico de vacaciones.</target>
        </trans-unit>
        <trans-unit id="3aecf00c9ac3214c61cb9cf72de8cb19f502b130" translate="yes" xml:space="preserve">
          <source>A new, optional, keyword argument &lt;code&gt;bdays&lt;/code&gt; is available when using
relativedelta to add or remove time to a datetime object.</source>
          <target state="translated">Un nuevo argumento de palabra clave opcional &lt;code&gt;bdays&lt;/code&gt; est&amp;aacute; disponible cuando se usa relateddelta para agregar o quitar tiempo a un objeto de fecha y hora.</target>
        </trans-unit>
        <trans-unit id="1d52f769f98c104490db3f5b36e626ac9b452174" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.</source>
          <target state="translated">Añade la lógica del día laboral y la flexibilidad mejorada del tipo de datos a python-dateutil.</target>
        </trans-unit>
        <trans-unit id="c952082357224df8dfe4780645521bf97219589b" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.
100% backwards compatible with python-dateutil, simply replace &lt;code&gt;dateutil&lt;/code&gt;
imports with &lt;code&gt;bdateutil&lt;/code&gt;.</source>
          <target state="translated">Agrega l&amp;oacute;gica de d&amp;iacute;a h&amp;aacute;bil y flexibilidad mejorada de tipos de datos a python-dateutil. 100% compatible con versiones anteriores de python-dateutil, simplemente reemplace &lt;code&gt;dateutil&lt;/code&gt; importaciones de &lt;code&gt;bdateutil&lt;/code&gt; con bdateutil .</target>
        </trans-unit>
        <trans-unit id="b4eda2fbedb81256ca8293a03548ea21f9fcbf05" translate="yes" xml:space="preserve">
          <source>Another new, optional, keyword argument &lt;code&gt;holidays&lt;/code&gt; is available when
using relativedelta to support the &lt;code&gt;bdays&lt;/code&gt; feature. Without holidays
business days are only calculated using weekdays. By passing a list of
holidays a more accurate and useful business day calculation can be
performed. The Python package &lt;code&gt;holidays.py&lt;/code&gt; is installed as a
requirement with bdateutil and that is the prefered way to generate
holidays.</source>
          <target state="translated">Otro nuevo, opcional, &lt;code&gt;holidays&lt;/code&gt; argumento de palabra clave est&amp;aacute; disponible cuando se usa &lt;code&gt;bdays&lt;/code&gt; para admitir la funci&amp;oacute;n bdays . Sin d&amp;iacute;as festivos, los d&amp;iacute;as laborales solo se calculan en d&amp;iacute;as laborables. Al pasar una lista de d&amp;iacute;as festivos, se puede realizar un c&amp;aacute;lculo de d&amp;iacute;as h&amp;aacute;biles m&amp;aacute;s preciso y &amp;uacute;til. El paquete de Python &lt;code&gt;holidays.py&lt;/code&gt; se instala como requisito con bdateutil y esa es la forma preferida de generar vacaciones.</target>
        </trans-unit>
        <trans-unit id="e276e3de7d758cf4c9cba9cadf6c02d820098425" translate="yes" xml:space="preserve">
          <source>Code and documentation are available according to the MIT License
(see &lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt;).</source>
          <target state="translated">El c&amp;oacute;digo y la documentaci&amp;oacute;n est&amp;aacute;n disponibles de acuerdo con la licencia MIT (ver &lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENCIA&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">Contribuciones</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">Cobertura</target>
        </trans-unit>
        <trans-unit id="3b2fd4ec2592a60a39c5a925470fa44f8d46d6aa" translate="yes" xml:space="preserve">
          <source>Development Version</source>
          <target state="translated">Versión de desarrollo</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentación</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">Ejemplo de uso</target>
        </trans-unit>
        <trans-unit id="7efdb52575026e30170fcb12e99298e7a5bb425e" translate="yes" xml:space="preserve">
          <source>If the above fails, please use easy_install instead:</source>
          <target state="translated">Si lo anterior falla,por favor use easy_install en su lugar:</target>
        </trans-unit>
        <trans-unit id="ff653d773e8dd454b8236149f3ea5869cd555830" translate="yes" xml:space="preserve">
          <source>Import shortcuts are available that make importing the bdateutil features a
little easier than python-dateutil. However, importing from bdateutil using
the longer method used by python-dateutil still works to remain 100%
backwards compatibility.</source>
          <target state="translated">Existen atajos de importación que hacen que la importación de las características de bdateutil sea un poco más fácil que la de python-dateutil.Sin embargo,la importación desde bdateutil utilizando el método más largo utilizado por python-dateutil sigue funcionando para mantener el 100% de compatibilidad hacia atrás.</target>
        </trans-unit>
        <trans-unit id="973142621f185d8147d34352e131c396b6dc2ac3" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt; types, relativedelta works
with all strings/bytes regardless of encoding and integer/float timestamps.
It does this by running all date/datetime parameters through the
&lt;code&gt;parse&lt;/code&gt; function which has been modified to accept many different
types than strings, including date/datetime which will return without
modifications. This allows you to call &lt;code&gt;parse(dt)&lt;/code&gt; on an object
regardless of type and ensure a datetime object is returned.</source>
          <target state="translated">Adem&amp;aacute;s de los tipos de &lt;code&gt;date&lt;/code&gt; y &lt;code&gt;datetime&lt;/code&gt; y fecha , relativo delta funciona con todas las cadenas / bytes independientemente de la codificaci&amp;oacute;n y las marcas de tiempo enteras / flotantes. Lo hace ejecutando todos los par&amp;aacute;metros de fecha / fecha y hora a trav&amp;eacute;s de la funci&amp;oacute;n de &lt;code&gt;parse&lt;/code&gt; que se ha modificado para aceptar muchos tipos diferentes de cadenas, incluida la fecha / fecha y hora, que volver&amp;aacute; sin modificaciones. Esto le permite llamar a &lt;code&gt;parse(dt)&lt;/code&gt; en un objeto independientemente del tipo y garantizar que se devuelva un objeto de fecha y hora.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Instalar</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Licencia</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">Pruebas de funcionamiento</target>
        </trans-unit>
        <trans-unit id="0643938b9ff7bc45b4a1e703bd0e242ce253edfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rrule&lt;/code&gt; feature has a new &lt;code&gt;BDAILY&lt;/code&gt; option for use as the &lt;code&gt;freq&lt;/code&gt; argument.
This will create a generator which yields business days. Rrule also will now
accept an optional &lt;code&gt;holidays&lt;/code&gt; keyword argument which affects the
&lt;code&gt;BDAILY&lt;/code&gt; freq only. The existing &lt;code&gt;dtstart&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt;
arugments can now be passed as any type resembling a date/datetime.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;rrule&lt;/code&gt; tiene una nueva opci&amp;oacute;n &lt;code&gt;BDAILY&lt;/code&gt; para usar como argumento de &lt;code&gt;freq&lt;/code&gt; . Esto crear&amp;aacute; un generador que rinde d&amp;iacute;as laborales. Rrule ahora tambi&amp;eacute;n aceptar&amp;aacute; un argumento de palabra clave de &lt;code&gt;holidays&lt;/code&gt; opcional que afecta solo a la &lt;code&gt;BDAILY&lt;/code&gt; . Los &lt;code&gt;dtstart&lt;/code&gt; y &lt;code&gt;until&lt;/code&gt; existentes ahora se pueden pasar como cualquier tipo que se parezca a una fecha / fecha y hora.</target>
        </trans-unit>
        <trans-unit id="334597efb34b5ccf530650c298d5ee47398a89df" translate="yes" xml:space="preserve">
          <source>The latest development version can be installed directly from GitHub:</source>
          <target state="translated">La última versión de desarrollo puede ser instalada directamente desde GitHub:</target>
        </trans-unit>
        <trans-unit id="93de043e205c48ecd0e520c7ca8c2bcb0c95c963" translate="yes" xml:space="preserve">
          <source>The latest stable version can always be installed or updated via pip:</source>
          <target state="translated">La última versión estable siempre puede ser instalada o actualizada a través de pip:</target>
        </trans-unit>
        <trans-unit id="3b9616eaeaa514ec9e018618e5cbed82c61fe0e4" translate="yes" xml:space="preserve">
          <source>This section will outline the additional functionality of bdateutil only. For
full documentation on the features provided by python-dateutil please see its
documentation at &lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil&lt;/a&gt;.</source>
          <target state="translated">Esta secci&amp;oacute;n describir&amp;aacute; la funcionalidad adicional de bdateutil &amp;uacute;nicamente. Para obtener documentaci&amp;oacute;n completa sobre las funciones proporcionadas por python-dateutil, consulte su documentaci&amp;oacute;n en &lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92c23e1bbcaa6fa57e61d36eb923d91999e1419a" translate="yes" xml:space="preserve">
          <source>When passing two datetime arguments to relativedelta, the resulting
relativedelta object will contain a &lt;code&gt;bdays&lt;/code&gt; attribute with the number
of business days between the datetime arguments.</source>
          <target state="translated">Al pasar dos argumentos de fecha y hora a relativadelta, el objeto relativo &lt;code&gt;bdays&lt;/code&gt; resultante contendr&amp;aacute; un atributo bdays con el n&amp;uacute;mero de d&amp;iacute;as h&amp;aacute;biles entre los argumentos de fecha y hora.</target>
        </trans-unit>
        <trans-unit id="789efc0771c509982e172ccecac3212fac56a420" translate="yes" xml:space="preserve">
          <source>bdateutil is 100% backwards compatible with python-dateutil. You can replace
&lt;code&gt;dateutil&lt;/code&gt; with &lt;code&gt;bdateutil&lt;/code&gt; across your entire project and
everything will continue to work the same but you will have access to the
following additional features:</source>
          <target state="translated">bdateutil es 100% compatible con python-dateutil. Puede reemplazar &lt;code&gt;dateutil&lt;/code&gt; con &lt;code&gt;bdateutil&lt;/code&gt; en todo su proyecto y todo seguir&amp;aacute; funcionando igual, pero tendr&amp;aacute; acceso a las siguientes funciones adicionales:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
