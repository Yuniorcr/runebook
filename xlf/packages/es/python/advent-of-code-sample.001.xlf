<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/advent-of-code-sample/">
    <body>
      <group id="advent-of-code-sample">
        <trans-unit id="ae719bcadca89e3662b3a4d6cc522d257535f599" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;mypackage&lt;/code&gt; to whatever package or module name is used to import your stuff.
The name &lt;code&gt;mysolve&lt;/code&gt; should resolve to a callable in your package's namespace which accepts three named arguments &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt; (any order ok) and returns two values, e.g.:</source>
          <target state="translated">Cambie &lt;code&gt;mypackage&lt;/code&gt; a cualquier paquete o nombre de m&amp;oacute;dulo que se use para importar sus cosas. El nombre &lt;code&gt;mysolve&lt;/code&gt; debe resolverse en un invocable en el espacio de nombres de su paquete que acepta tres argumentos con nombre &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;data&lt;/code&gt; (cualquier orden correcto) y devuelve dos valores, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0f238e6a50702023f6aa0601fabfb8f580b7c908" translate="yes" xml:space="preserve">
          <source>How to hook into your code:</source>
          <target state="translated">Cómo engancharse a tu código:</target>
        </trans-unit>
        <trans-unit id="f7e4f35d75348608fdcd43f3661536605a0e3912" translate="yes" xml:space="preserve">
          <source>Inside the entry-point you can do whatever you need in order to delegate to your code. For example, write out data to a scratch file then run a script, or import a function and just pass in the data directly as an argument.
The only requirement is that this entry-point should return a tuple of two values, with the answers for that day's puzzle, the rest is up to you.
You could fork this repo and edit it, or just write your own plugin manually.</source>
          <target state="translated">Dentro del punto de entrada puedes hacer lo que necesites para delegar en tu código.Por ejemplo,escribir datos en un archivo de rascado y luego ejecutar un script,o importar una función y sólo pasar los datos directamente como un argumento.El único requisito es que este punto de entrada devuelva una tupla de dos valores,con las respuestas para el rompecabezas de ese día,el resto depende de ti.Podrías bifurcar este repo y editarlo,o simplemente escribir tu propio plugin manualmente.</target>
        </trans-unit>
        <trans-unit id="d91e9a1c3fd7959a8b9cb75a01f4b5b12584be1c" translate="yes" xml:space="preserve">
          <source>Provides a working example plugin structure for using the &lt;code&gt;aoc&lt;/code&gt; runner script provided by &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-data&quot;&gt;advent-of-code-data&lt;/a&gt;.</source>
          <target state="translated">Proporciona una estructura de complemento de ejemplo funcional para usar el script de &lt;code&gt;aoc&lt;/code&gt; proporcionado por &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-data&quot;&gt;advent-of-code-data&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cde56e49e86442c4c60c829504b6ff1de1c1e1cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aoc&lt;/code&gt; runner allows you to easily verify your &lt;a href=&quot;https://adventofcode.com/&quot;&gt;Advent of Code&lt;/a&gt; solutions against multiple datasets, or verify other user's code against your own dataset.</source>
          <target state="translated">El corredor &lt;code&gt;aoc&lt;/code&gt; le permite verificar f&amp;aacute;cilmente sus soluciones &lt;a href=&quot;https://adventofcode.com/&quot;&gt;de Advent of Code&lt;/a&gt; contra m&amp;uacute;ltiples conjuntos de datos, o verificar el c&amp;oacute;digo de otro usuario contra su propio conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="d2b583798c1ea05ae27c6f22c4b9705824e477e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aoc&lt;/code&gt; runner uses setuptools' &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;dynamic discovery of services and plugins&lt;/a&gt; feature to locate and run your code.
Define your plugin's entry point in &lt;code&gt;setup.py&lt;/code&gt;. The group name to use is &quot;adventofcode.user&quot;:</source>
          <target state="translated">El corredor de &lt;code&gt;aoc&lt;/code&gt; utiliza la funci&amp;oacute;n de &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;descubrimiento din&amp;aacute;mico de servicios y complementos de&lt;/a&gt; setuptools para localizar y ejecutar su c&amp;oacute;digo. Defina el punto de entrada de su complemento en &lt;code&gt;setup.py&lt;/code&gt; . El nombre de grupo a utilizar es &quot;adventofcode.user&quot;:</target>
        </trans-unit>
        <trans-unit id="bc782dfaebfbd6230c3f74e86fe92dc03dc3b3db" translate="yes" xml:space="preserve">
          <source>advent-of-code-sample:</source>
          <target state="translated">la llegada de la muestra del código:</target>
        </trans-unit>
        <trans-unit id="de66b9ebd3feabeaa12c62ed249834205d2635c9" translate="yes" xml:space="preserve">
          <source>myusername's solutions for https://adventofcode.com/</source>
          <target state="translated">soluciones de myusername para https://adventofcode.com/</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
