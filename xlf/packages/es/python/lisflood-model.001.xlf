<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/lisflood-model/">
    <body>
      <group id="lisflood-model">
        <trans-unit id="f5a70ebf38e5204631f154037e88711a35c8e56d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ec-jrc/lisflood-code&quot;&gt;https://github.com/ec-jrc/lisflood-code&lt;/a&gt; (this repository)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ec-jrc/lisflood-code&quot;&gt;https://github.com/ec-jrc/lisflood-code&lt;/a&gt; (este repositorio)</target>
        </trans-unit>
        <trans-unit id="f9a56caeef5914fb0e23b98d65cf00abd25d9b22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Documentation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Documentaci&amp;oacute;n&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f92e515a09c6556d3e4d74bf9bcdb65752d32b2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Project&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Proyecto&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9884d83477481e3e4a02a37194f54a67783273c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C&amp;oacute;digo fuente&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1cc1d86ad3dec745808f7f2e62ec9e1fc92052b3" translate="yes" xml:space="preserve">
          <source>After this command, you can find all files to run a test against a catchment under the directory you mapped: &lt;code&gt;/absolute_path/to/my/local/folder/TestCatchment1&lt;/code&gt;</source>
          <target state="translated">Despu&amp;eacute;s de este comando, puede encontrar todos los archivos para ejecutar una prueba contra una cuenca en el directorio que asign&amp;oacute;: &lt;code&gt;/absolute_path/to/my/local/folder/TestCatchment1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2550d9ef4edfb8b4e32da8b929e99d174b6bdbd3" translate="yes" xml:space="preserve">
          <source>Calibration tool</source>
          <target state="translated">Herramienta de calibración</target>
        </trans-unit>
        <trans-unit id="6d7e0ad55992656c65f95da8077f6ff9d5d18727" translate="yes" xml:space="preserve">
          <source>Clone the master branch of this repository (you need to have git installed on your machine).</source>
          <target state="translated">Clonar la rama maestra de este repositorio (necesitas tener instalado git en tu máquina).</target>
        </trans-unit>
        <trans-unit id="09e5be92217f34fd97102791fb83c603429aa9ed" translate="yes" xml:space="preserve">
          <source>Collaborate</source>
          <target state="translated">Colaborar</target>
        </trans-unit>
        <trans-unit id="6dbf52f8a91c0112ba71cf1a8ac73765ffb1d516" translate="yes" xml:space="preserve">
          <source>Command above will also install the executable &lt;code&gt;lisflood&lt;/code&gt; in the virtualenv, so that you can run LISFLOOD with the following:</source>
          <target state="translated">El comando anterior tambi&amp;eacute;n instalar&amp;aacute; el ejecutable &lt;code&gt;lisflood&lt;/code&gt; en virtualenv, para que pueda ejecutar LISFLOOD con lo siguiente:</target>
        </trans-unit>
        <trans-unit id="99ccd8cefc5a97400a8da81fc14e1e8d76212ff0" translate="yes" xml:space="preserve">
          <source>Compile the cython module kinematic_wave_parallel_tool</source>
          <target state="translated">Compilar el módulo de cython herramienta de ondas cinemáticas paralelas</target>
        </trans-unit>
        <trans-unit id="75e9eb550ef8830df4087ed3e618e418590b5323" translate="yes" xml:space="preserve">
          <source>Copy catchment files from container to your host, using mapped directories:</source>
          <target state="translated">Copie los archivos de captura del contenedor a su anfitrión,usando directorios mapeados:</target>
        </trans-unit>
        <trans-unit id="96c9832311d686e35ab40bdc7cfd6f32ecd3c52b" translate="yes" xml:space="preserve">
          <source>Delete the files *.so (if any) in directory hydrological-modules</source>
          <target state="translated">Eliminar los archivos *.so (si los hay)en el directorio hydrological-modules</target>
        </trans-unit>
        <trans-unit id="2fccb4697e15d7027e2840920bb6fda8e3795dcc" translate="yes" xml:space="preserve">
          <source>Docker image</source>
          <target state="translated">Imagen del muelle</target>
        </trans-unit>
        <trans-unit id="68a4194227be4ab74bc3d32363417c0fc1f30055" translate="yes" xml:space="preserve">
          <source>Docs</source>
          <target state="translated">Docs</target>
        </trans-unit>
        <trans-unit id="caa68eafd379e07405ef3d18542c81bb1cea0898" translate="yes" xml:space="preserve">
          <source>Execute lisflood with a Docker image:</source>
          <target state="translated">Ejecutar lisflood con una imagen de Docker:</target>
        </trans-unit>
        <trans-unit id="82f564fcee3ff8dc3056b530d43342e2d261cf59" translate="yes" xml:space="preserve">
          <source>GDAL should be installed as well. To install GDAL C library and gdal python library on debian/ubuntu systems, we found good instructions &lt;a href=&quot;https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n deber&amp;iacute;a instalarse GDAL. Para instalar la biblioteca GDAL C y la biblioteca gdal python en sistemas debian / ubuntu, encontramos buenas instrucciones &lt;a href=&quot;https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ca9d0c71408c6a6852839b2197eab62ac1f4278" translate="yes" xml:space="preserve">
          <source>If the command above successed without errors, producing dis.nc into tests/data/TestCatchment1/outputs folder, your lisflood installation was correct.</source>
          <target state="translated">Si el comando anterior tuvo éxito sin errores,produciendo dis.nc en la carpeta tests/datos/TestCatchment1/outputs,su instalación de lisflood fue correcta.</target>
        </trans-unit>
        <trans-unit id="2b9bbe592c37baa4c78ab2875e9a710517c6383d" translate="yes" xml:space="preserve">
          <source>If you already have GDAL installed in your computer, make sure that the GDAL and the python gdal library have the same version.</source>
          <target state="translated">Si ya tienes instalado el GDAL en tu ordenador,asegúrate de que el GDAL y la biblioteca de python gdal tienen la misma versión.</target>
        </trans-unit>
        <trans-unit id="5bf4502cfc076a9c2ad05a0d1e24c9a05b55b9d9" translate="yes" xml:space="preserve">
          <source>If you find an issue in our code, please follow the &lt;a href=&quot;https://guides.github.com/introduction/flow/&quot;&gt;GitHub flow&lt;/a&gt; to propose your changes (Fork, commit your changes and ask for a Pull Request).
When you develop, you need to run our unit tests before to propose a pull request.
Simply execute &lt;code&gt;tox&lt;/code&gt; or &lt;code&gt;pytest&lt;/code&gt; on command line from project folder.</source>
          <target state="translated">Si encuentra un problema en nuestro c&amp;oacute;digo, siga el &lt;a href=&quot;https://guides.github.com/introduction/flow/&quot;&gt;flujo de GitHub&lt;/a&gt; para proponer sus cambios (bifurque, confirme sus cambios y solicite una solicitud de extracci&amp;oacute;n). Cuando desarrolle, debe ejecutar nuestras pruebas unitarias antes de proponer una solicitud de extracci&amp;oacute;n. Simplemente ejecute &lt;code&gt;tox&lt;/code&gt; o &lt;code&gt;pytest&lt;/code&gt; en la l&amp;iacute;nea de comando desde la carpeta del proyecto.</target>
        </trans-unit>
        <trans-unit id="9611e74d64102180a0eb54d2a1866236589092a1" translate="yes" xml:space="preserve">
          <source>Important: the module has to be compiled on the machine where the model is run - the resulting binary is not portable.</source>
          <target state="translated">Importante:el módulo debe ser compilado en la máquina donde se ejecuta el modelo-el binario resultante no es portátil.</target>
        </trans-unit>
        <trans-unit id="984cd4284bc5646539efa1c933ab3ee699f4ebd4" translate="yes" xml:space="preserve">
          <source>Inside the hydrological_modules folder, execute &quot;python compile_kinematic_wave_parallel_tools.py build_ext --inplace&quot;</source>
          <target state="translated">Dentro de la carpeta hydrological_modules,ejecuta &quot;python compile_kinematic_wave_parallel_tools.py build_ext --inplace&quot;</target>
        </trans-unit>
        <trans-unit id="72569447fc3cefa3c6e3fa3fdb0f03a77a50b741" translate="yes" xml:space="preserve">
          <source>Install requirements into a Python 3 virtualenv.
We recommend to follow the instructions on &lt;a href=&quot;https://virtualenv.pypa.io/en/latest/&quot;&gt;virtualenv docs&lt;/a&gt;.
Assuming you've activated your virtual environment, you can now install requirements with pip:</source>
          <target state="translated">Instale los requisitos en un virtualenv de Python 3. Recomendamos seguir las instrucciones de los &lt;a href=&quot;https://virtualenv.pypa.io/en/latest/&quot;&gt;documentos virtualenv&lt;/a&gt; . Suponiendo que haya activado su entorno virtual, ahora puede instalar requisitos con pip:</target>
        </trans-unit>
        <trans-unit id="9639a1640ed3297e6e9e54047bf09e6afd36f13c" translate="yes" xml:space="preserve">
          <source>LISFLOOD is also distributed as a standard python package. You can install the pip package in your Python 3 virtualenv:</source>
          <target state="translated">LISFLOOD también se distribuye como un paquete estándar de pitón.Puedes instalar el paquete pip en tu Python 3 virtualenv:</target>
        </trans-unit>
        <trans-unit id="d33062e21cd4cf97f04c936d18f71f12067b1d8b" translate="yes" xml:space="preserve">
          <source>LISFLOOD model python module</source>
          <target state="translated">Módulo de pitón modelo LISFLOOD</target>
        </trans-unit>
        <trans-unit id="5dd5fa74710baff78d8910353e7f6cb137d665fc" translate="yes" xml:space="preserve">
          <source>Lisflood</source>
          <target state="translated">Lisflood</target>
        </trans-unit>
        <trans-unit id="6904f96606b8308e1edd02cbaf1569120d340827" translate="yes" xml:space="preserve">
          <source>Lisflood OS</source>
          <target state="translated">Lisflood OS</target>
        </trans-unit>
        <trans-unit id="e72f3af253c5368a1c5ab922f5774f151e55e089" translate="yes" xml:space="preserve">
          <source>Lisflood Usecases</source>
          <target state="translated">Usos de Lisflood</target>
        </trans-unit>
        <trans-unit id="d497aeb6b8181fa03b11ab0530d6a1cd234b45c0" translate="yes" xml:space="preserve">
          <source>Lisflood Utilities</source>
          <target state="translated">Utilidades de Lisflood</target>
        </trans-unit>
        <trans-unit id="af7ac08fe444302fcf967e887c640a037860e09f" translate="yes" xml:space="preserve">
          <source>Lisvap</source>
          <target state="translated">Lisvap</target>
        </trans-unit>
        <trans-unit id="6029b82adea2d88a40994be36142e94d93797f6d" translate="yes" xml:space="preserve">
          <source>Model docs</source>
          <target state="translated">Documentos modelo</target>
        </trans-unit>
        <trans-unit id="d98b3357ed1732017e20a7b4283fb1f7ec7891ff" translate="yes" xml:space="preserve">
          <source>Now your environment should be set up to run lisflood. Try with a prepared settings file for one of the two test catchments:</source>
          <target state="translated">Ahora tu entorno debería estar preparado para que funcione Lisflood.Inténtalo con un archivo de configuración preparado para una de las dos cuencas de prueba:</target>
        </trans-unit>
        <trans-unit id="286081987f85b323e4f97f4897df7d6b3f1518cf" translate="yes" xml:space="preserve">
          <source>Now, you can run LISFLOOD as a docker container to test included catchments. Only thing you need to do is to map the TestCatchment1 folder to the container folder &lt;code&gt;input&lt;/code&gt;, by using -v option.
In the XML settings file, all paths are adjusted to be relative to the very same settings file, so you don't need to edit paths, as long as you keep same folders structure.</source>
          <target state="translated">Ahora, puede ejecutar LISFLOOD como un contenedor de ventana acoplable para probar las captaciones incluidas. Lo &amp;uacute;nico que debe hacer es asignar la carpeta TestCatchment1 a la &lt;code&gt;input&lt;/code&gt; carpeta contenedora , utilizando la opci&amp;oacute;n -v. En el archivo de configuraci&amp;oacute;n XML, todas las rutas se ajustan para que sean relativas al mismo archivo de configuraci&amp;oacute;n, por lo que no es necesario editar las rutas, siempre que mantenga la misma estructura de carpetas.</target>
        </trans-unit>
        <trans-unit id="bcee8eb5d4eb54a05e43e4969ca7785a3a847f48" translate="yes" xml:space="preserve">
          <source>Once LISFLOOD finished, you find reported maps in &lt;code&gt;/absolute_path/to/my/local/folder/TestCatchment/outputs/&lt;/code&gt; folder.</source>
          <target state="translated">Una vez que LISFLOOD finaliz&amp;oacute;, encontrar&amp;aacute; los mapas informados en &lt;code&gt;/absolute_path/to/my/local/folder/TestCatchment/outputs/&lt;/code&gt; ruta_absoluta / a / mi / local / carpeta / TestCatchment / salidas / carpeta.</target>
        </trans-unit>
        <trans-unit id="071846331a4fbf6d22d1f577ca4b03db90e84064" translate="yes" xml:space="preserve">
          <source>Other useful resources</source>
          <target state="translated">Otros recursos útiles</target>
        </trans-unit>
        <trans-unit id="d5cab98a44e31c7078e90f4eab8005d71ee982ae" translate="yes" xml:space="preserve">
          <source>Pull image from repository:</source>
          <target state="translated">Saque la imagen del depósito:</target>
        </trans-unit>
        <trans-unit id="d14740d63c1b28ba6dadec5cd587e9634468a4f2" translate="yes" xml:space="preserve">
          <source>Pypi packaged LISFLOOD</source>
          <target state="translated">Pypi empaquetó LISFLOOD</target>
        </trans-unit>
        <trans-unit id="b342f020314b26a7fba16949f44e287503b5ee8f" translate="yes" xml:space="preserve">
          <source>Quick start</source>
          <target state="translated">Un comienzo rápido...</target>
        </trans-unit>
        <trans-unit id="c5f55d2f7a5b3d22b88b0048a560841f934b9835" translate="yes" xml:space="preserve">
          <source>Run a cold run for the test catchment</source>
          <target state="translated">Haz un ensayo general de la cuenca de prueba...</target>
        </trans-unit>
        <trans-unit id="7c997b69c234fba79de979660eea389fbabe7fbd" translate="yes" xml:space="preserve">
          <source>Run tests in image:</source>
          <target state="translated">Hagan pruebas en la imagen:</target>
        </trans-unit>
        <trans-unit id="bdb60ecf7f3f9dfc72f52a132d9fafc262ef2554" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;official website&lt;/a&gt; for more info about pytest.</source>
          <target state="translated">Consulte el &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;sitio web oficial&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre pytest.</target>
        </trans-unit>
        <trans-unit id="da2e976462110467f5f0d87ac80728472e8b5a3e" translate="yes" xml:space="preserve">
          <source>Then in the settings file the option &quot;numberParallelThreadsKinematicWave&quot; may take the following values:
- &quot;0&quot;           : auto-detection of the machine/node's number of CPUs (all CPUs are used minus 1) (do not set it if other simulations are running on the same machine/node)
- &quot;1&quot;           : serial execution (not parallel)
- &quot;2&quot;, &quot;3&quot;, ... : manual setting of the number of parallel threads.
(if exceeding the number of CPUs, the option is set to &quot;0&quot;) --&amp;gt;</source>
          <target state="translated">Luego, en el archivo de configuraci&amp;oacute;n, la opci&amp;oacute;n &quot;numberParallelThreadsKinematicWave&quot; puede tomar los siguientes valores: - &quot;0&quot;: detecci&amp;oacute;n autom&amp;aacute;tica del n&amp;uacute;mero de CPU de la m&amp;aacute;quina / nodo (todas las CPU se usan menos 1) (no lo configure si se est&amp;aacute;n ejecutando otras simulaciones en la misma m&amp;aacute;quina / nodo) - &quot;1&quot;: ejecuci&amp;oacute;n en serie (no en paralelo) - &quot;2&quot;, &quot;3&quot;, ...: configuraci&amp;oacute;n manual del n&amp;uacute;mero de subprocesos paralelos. (si excede el n&amp;uacute;mero de CPU, la opci&amp;oacute;n se establece en &quot;0&quot;) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="773e27a9ff328adf3821461b29377e617bd1a08d" translate="yes" xml:space="preserve">
          <source>This repository hosts source code of LISFLOOD model.
Go to &lt;a href=&quot;https://ec-jrc.github.io/lisflood/&quot;&gt;Lisflood OS page&lt;/a&gt; for more information.</source>
          <target state="translated">Este repositorio aloja el c&amp;oacute;digo fuente del modelo LISFLOOD. Vaya a la &lt;a href=&quot;https://ec-jrc.github.io/lisflood/&quot;&gt;p&amp;aacute;gina&lt;/a&gt; de Lisflood OS para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="863218ecd4bd19a52d11d513030b7ec979fe4634" translate="yes" xml:space="preserve">
          <source>To compile this Cython module to enable OpenMP multithreading (parallel kinematic wave):</source>
          <target state="translated">Compilar este módulo de Cython para habilitar el multihilo OpenMP (onda cinemática paralela):</target>
        </trans-unit>
        <trans-unit id="100bdf67dec2dca99cc9f783954ef6fe26135005" translate="yes" xml:space="preserve">
          <source>Tox tests can last minutes. You can also just use pytest and run tests in a single environment (e.g. Python 3.7).
This is often enough and will save you some time if you need to run tests frequently.</source>
          <target state="translated">Los análisis de tóxicos pueden durar minutos.También puedes usar pytest y hacer pruebas en un solo ambiente (por ejemplo,Python 3.7).Esto es suficiente y le ahorrará algo de tiempo si necesita realizar pruebas con frecuencia.</target>
        </trans-unit>
        <trans-unit id="9a907a2a9e2d8f2282b25aa37fedd952420dd3fa" translate="yes" xml:space="preserve">
          <source>User guide</source>
          <target state="translated">Guía del usuario</target>
        </trans-unit>
        <trans-unit id="8805808855a21562903815a7c7fe4554162584ef" translate="yes" xml:space="preserve">
          <source>You can download code and datasets for testing the model.
Follow this instruction for a basic test (included in this repository under &lt;a href=&quot;https://github.com/ec-jrc/lisflood-code/tree/master/tests/data/TestCatchment1&quot;&gt;tests/data/TestCatchment1&lt;/a&gt;)</source>
          <target state="translated">Puede descargar c&amp;oacute;digos y conjuntos de datos para probar el modelo. Siga estas instrucciones para una prueba b&amp;aacute;sica (incluida en este repositorio en &lt;a href=&quot;https://github.com/ec-jrc/lisflood-code/tree/master/tests/data/TestCatchment1&quot;&gt;tests / data / TestCatchment1&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e1bd048441a7158d9b72de646e746f13bce9481c" translate="yes" xml:space="preserve">
          <source>You can use the updated docker image to run lisflood, so without taking care to install dependencies on your system.</source>
          <target state="translated">Puedes usar la imagen docker actualizada para ejecutar lisflood,así que sin tener cuidado de instalar dependencias en tu sistema.</target>
        </trans-unit>
        <trans-unit id="8b0e71e596d783b7ae40a69281fb10bf2862d109" translate="yes" xml:space="preserve">
          <source>You need to install PCRaster (4.2.x is first version which works with Python3) and include its python interface in PYTHONPATH environment variable.
For details, please follow instruction on &lt;a href=&quot;http://pcraster.geo.uu.nl/getting-started/pcraster-on-linux/&quot;&gt;official docs&lt;/a&gt;.</source>
          <target state="translated">Debe instalar PCRaster (4.2.x es la primera versi&amp;oacute;n que funciona con Python3) e incluir su interfaz de Python en la variable de entorno PYTHONPATH. Para obtener m&amp;aacute;s informaci&amp;oacute;n, siga las instrucciones de &lt;a href=&quot;http://pcraster.geo.uu.nl/getting-started/pcraster-on-linux/&quot;&gt;los documentos oficiales&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
