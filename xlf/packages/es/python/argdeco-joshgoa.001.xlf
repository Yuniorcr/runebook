<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/argdeco-joshgoa/">
    <body>
      <group id="argdeco-joshgoa">
        <trans-unit id="a7f18b66ff596d1e271735d1f9916cb0e1c7d04b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The &lt;em&gt;EXACT&lt;/em&gt; same decorating order as regular argparse &lt;em&gt;MUST&lt;/em&gt; be respected</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Se &lt;em&gt;DEBE&lt;/em&gt; respetar el mismo orden de decoraci&amp;oacute;n &lt;em&gt;EXACTO&lt;/em&gt; que el argparse regular&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b8427a6940f118f708778630446a3e62d1c1366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ardeco.add_mutually_exclusive_group&lt;/strong&gt;(required=False)</source>
          <target state="translated">&lt;strong&gt;ardeco.add_mutually_exclusive_group&lt;/strong&gt; (obligatorio = Falso)</target>
        </trans-unit>
        <trans-unit id="5c1196d1aca5f7983150193877f48a6c116e2695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.add_argument&lt;/strong&gt;(name or flags..., group=None, [, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])</source>
          <target state="translated">&lt;strong&gt;argdeco.add_argument&lt;/strong&gt; (nombre o banderas ..., grupo = Ninguno, [, acci&amp;oacute;n] [, nargs] [, const] [, predeterminado] [, tipo] [, opciones] [, requerido] [, ayuda] [, metavar ] [, dest])</target>
        </trans-unit>
        <trans-unit id="1eb2cb893c805042d68f7016b34e3cc95ace2363" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.add_argument_group&lt;/strong&gt;(title=None, description=None)</source>
          <target state="translated">&lt;strong&gt;argdeco.add_argument_group&lt;/strong&gt; (t&amp;iacute;tulo = Ninguno, descripci&amp;oacute;n = Ninguno)</target>
        </trans-unit>
        <trans-unit id="b5a88ebdcded36dd74d801dad7f9001d907906d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.add_subparsers&lt;/strong&gt;(wrapped=None, [title][, description][, prog][, parser_class][, action][, option_string][, dest][, required][, help][, metavar])</source>
          <target state="translated">&lt;strong&gt;argdeco.add_subparsers&lt;/strong&gt; (envuelto = None, [title] [, description] [, prog] [, parser_class] [, action] [, option_string] [, dest] [, required] [, help] [, metavar])</target>
        </trans-unit>
        <trans-unit id="e315888d47add042b209cca861510ab33022a2a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco.argument_parser&lt;/strong&gt;(wrapped=None, parser_class=argparse.ArgumentParser, ctx=False, prog=None, usage=None, description=None, epilog=None, parents=[], formatter_class=argparse.HelpFormatter, prefix_chars=&quot;-&quot;, fromfile_prefix_chars=None, argument_default=None, conflict_handler=&quot;error&quot;, add_help=True, allow_abbrev=True)</source>
          <target state="translated">&lt;strong&gt;argdeco.argument_parser&lt;/strong&gt; (envuelto = Ninguno, parser_class = argparse.ArgumentParser, ctx = False, prog = Ninguno, uso = Ninguno, descripci&amp;oacute;n = Ninguno, epilog = Ninguno, padres = [], formatter_class = argparse.HelpFormatter, prefix_chars = &quot;-&quot; , fromfile_prefix_chars = None, argument_default = None, conflict_handler = &quot;error&quot;, add_help = True, allow_abbrev = True)</target>
        </trans-unit>
        <trans-unit id="110f5501b8a8b1e1e498eb41bc9c0e33fc8986c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco&lt;/strong&gt; does &lt;em&gt;NOT&lt;/em&gt; override decorated functions so that they can be accessed by the user easily if needed. In order to access the &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance, it is recommended to use context forwarding.</source>
          <target state="translated">&lt;strong&gt;argdeco&lt;/strong&gt; qu&amp;eacute; &lt;em&gt;no&lt;/em&gt; sobrecargar las funciones decoradas de manera que puedan ser accedidos por el usuario f&amp;aacute;cilmente si es necesario. Para acceder al contexto &lt;strong&gt;argparse&lt;/strong&gt; o la instancia del analizador, se recomienda utilizar el reenv&amp;iacute;o de contexto.</target>
        </trans-unit>
        <trans-unit id="c5b8781a2e0f49608d24254388ed0a9538345f59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;argdeco&lt;/strong&gt; supports class callback method decoration, unlike the big majority of CLI decorator libraries, without any difference as regular callback callable decoration.</source>
          <target state="translated">&lt;strong&gt;argdeco&lt;/strong&gt; admite la decoraci&amp;oacute;n del m&amp;eacute;todo de devoluci&amp;oacute;n de llamada de clase, a diferencia de la gran mayor&amp;iacute;a de las bibliotecas de decoradores CLI, sin ninguna diferencia como decoraci&amp;oacute;n de devoluci&amp;oacute;n de llamada normal.</target>
        </trans-unit>
        <trans-unit id="89c25a6e98b7d12432623429744aea6cf501424a" translate="yes" xml:space="preserve">
          <source>API reference</source>
          <target state="translated">Referencia API</target>
        </trans-unit>
        <trans-unit id="e9aa1070458c71e8dfa7843126288e26142d4365" translate="yes" xml:space="preserve">
          <source>Accessing attributes</source>
          <target state="translated">Atributos de acceso</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">Uso avanzado</target>
        </trans-unit>
        <trans-unit id="f06703d4ee169a2df88810906ccf6cb1a4741ea9" translate="yes" xml:space="preserve">
          <source>By default, ArgumentParser groups command-line arguments into &amp;ldquo;positional arguments&amp;rdquo; and &amp;ldquo;optional arguments&amp;rdquo; when displaying help messages. When there is a better conceptual grouping of arguments than this default one, appropriate groups can be created using the add_argument_group() method:</source>
          <target state="translated">De forma predeterminada, ArgumentParser agrupa los argumentos de la l&amp;iacute;nea de comandos en &quot;argumentos posicionales&quot; y &quot;argumentos opcionales&quot; al mostrar mensajes de ayuda. Cuando hay una mejor agrupaci&amp;oacute;n conceptual de argumentos que esta predeterminada, se pueden crear los grupos apropiados usando el m&amp;eacute;todo add_argument_group ():</target>
        </trans-unit>
        <trans-unit id="6038979db56bf75b5b4a45ad68227c2545616e28" translate="yes" xml:space="preserve">
          <source>Class callback method context or parser instance forwarding is still respected on decorated class methods.</source>
          <target state="translated">El contexto del método de devolución de clase o el reenvío de la instancia de análisis aún se respeta en los métodos de clase decorados.</target>
        </trans-unit>
        <trans-unit id="d3761d64d52b354057683284a19bff79ad2ff2bb" translate="yes" xml:space="preserve">
          <source>Class method decoration</source>
          <target state="translated">Decoración del método de la clase</target>
        </trans-unit>
        <trans-unit id="c7e15bfc847aa9f34a9a600d7630ac9de4d5634e" translate="yes" xml:space="preserve">
          <source>Context forwarding</source>
          <target state="translated">Envío de contexto</target>
        </trans-unit>
        <trans-unit id="0b38454212aed7e51006cd7ebccd502bc3fcd9b0" translate="yes" xml:space="preserve">
          <source>Create a new ArgumentParser object. All parameters should be passed as keyword arguments. Each parameter has its own more detailed description below, but in short they are:</source>
          <target state="translated">Crear un nuevo objeto ArgumentParser.Todos los parámetros deben ser pasados como argumentos de palabras clave.Cada parámetro tiene su propia descripción más detallada a continuación,pero en resumen son:</target>
        </trans-unit>
        <trans-unit id="645a41729eae20ef920e713b9fa58f18d5313a56" translate="yes" xml:space="preserve">
          <source>Decorated callback callables can get access to the &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance.</source>
          <target state="translated">Los llamables de devoluci&amp;oacute;n de llamada decorados pueden obtener acceso al contexto &lt;strong&gt;argparse&lt;/strong&gt; o la instancia del analizador.</target>
        </trans-unit>
        <trans-unit id="2b9b1d323a6d34cd45b93a2493527fb4444468f8" translate="yes" xml:space="preserve">
          <source>Decorating a class will forward the arguments to the &lt;em&gt;__init__&lt;/em&gt; method (usually not the desired behaviour), as decorated callbacks will &lt;em&gt;ALWAYS&lt;/em&gt; be treated as callables.</source>
          <target state="translated">Decorar una clase enviar&amp;aacute; los argumentos al m&amp;eacute;todo &lt;em&gt;__init__&lt;/em&gt; (generalmente no es el comportamiento deseado), ya que las devoluciones de llamada decoradas &lt;em&gt;SIEMPRE&lt;/em&gt; se tratar&amp;aacute;n como invocables.</target>
        </trans-unit>
        <trans-unit id="3038dd2489869ab5fbcdd8c3bf1ac9ef78d03566" translate="yes" xml:space="preserve">
          <source>Decorating the &lt;em&gt;__call__&lt;/em&gt; method will forward the arguments to the class itself, following standard decorator usage as specified by &lt;a href=&quot;https://wrapt.readthedocs.io/en/latest/decorators.html#decorating-class-methods&quot;&gt;wrapt&lt;/a&gt;.</source>
          <target state="translated">Decorar el m&amp;eacute;todo &lt;em&gt;__call__&lt;/em&gt; enviar&amp;aacute; los argumentos a la clase en s&amp;iacute;, siguiendo el uso est&amp;aacute;ndar del decorador seg&amp;uacute;n lo especificado por &lt;a href=&quot;https://wrapt.readthedocs.io/en/latest/decorators.html#decorating-class-methods&quot;&gt;wrapt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ea4c81be540a9da7d64fcb6c25f2d35c8309048" translate="yes" xml:space="preserve">
          <source>Define how a single command-line argument should be parsed. Each parameter has its own more detailed description below, but in short they are:</source>
          <target state="translated">Definir cómo se debe analizar un argumento de línea de comandos.Cada parámetro tiene su propia descripción más detallada a continuación,pero en resumen son:</target>
        </trans-unit>
        <trans-unit id="09dac122e8953867260f1e16deb240632cdc29cd" translate="yes" xml:space="preserve">
          <source>Description of parameters:</source>
          <target state="translated">Descripción de los parámetros:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="8ad3d736ba19e67c41d72812f96929fff3fbe2d1" translate="yes" xml:space="preserve">
          <source>Many programs split up their functionality into a number of sub-commands, for example, the svn program can invoke sub-commands like svn checkout, svn update, and svn commit. Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. ArgumentParser supports the creation of such sub-commands with the add_subparsers() method. The add_subparsers() method is normally called with no arguments and returns a special action object. This object has a single method, add_parser(), which takes a command name and any ArgumentParser constructor arguments, and returns an ArgumentParser object that can be modified as usual.</source>
          <target state="translated">Muchos programas dividen su funcionalidad en varios subcomandos,por ejemplo,el programa svn puede invocar subcomandos como svn checkout,svn update y svn commit.Dividir la funcionalidad de esta manera puede ser una idea particularmente buena cuando un programa realiza varias funciones diferentes que requieren diferentes tipos de argumentos en la línea de comandos.ArgumentParser soporta la creación de tales subcomandos con el método add_subparsers().El método add_subparsers()normalmente se llama sin argumentos y devuelve un objeto de acción especial.Este objeto tiene un único método,add_parser(),que toma un nombre de comando y cualquier argumento constructor ArgumentParser,y devuelve un objeto ArgumentParser que puede ser modificado como es habitual.</target>
        </trans-unit>
        <trans-unit id="0a578cd592bdce36ffc58256bcb20bca416915a8" translate="yes" xml:space="preserve">
          <source>The installation into a &lt;a href=&quot;https://github.com/pypa/virtualenv&quot;&gt;virtualenv&lt;/a&gt; (or &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;pipenv&lt;/a&gt;) is heavily recommended.</source>
          <target state="translated">Se recomienda encarecidamente la instalaci&amp;oacute;n en un &lt;a href=&quot;https://github.com/pypa/virtualenv&quot;&gt;virtualenv&lt;/a&gt; (o &lt;a href=&quot;https://github.com/pypa/pipenv&quot;&gt;pipenv&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0613a0ecff9361d38f97cba660e8938737cb4379" translate="yes" xml:space="preserve">
          <source>There are so many libraries out there for writing command line utilities; why does &lt;strong&gt;argdeco&lt;/strong&gt; exist?</source>
          <target state="translated">Hay tantas bibliotecas para escribir utilidades de l&amp;iacute;nea de comandos; &amp;iquest;Por &lt;strong&gt;qu&amp;eacute;&lt;/strong&gt; existe &lt;strong&gt;argdeco&lt;/strong&gt; ?</target>
        </trans-unit>
        <trans-unit id="a463c569e85538f2350685a8e3592be18c41cb06" translate="yes" xml:space="preserve">
          <source>This question is easy to answer: because there is not a single command line utility for Python out there which ticks the following boxes: (&lt;a href=&quot;https://click.palletsprojects.com/en/7.x/why/&quot;&gt;sound familiar?&lt;/a&gt;)</source>
          <target state="translated">Esta pregunta es f&amp;aacute;cil de responder: porque no existe una sola utilidad de l&amp;iacute;nea de comando para Python que marque las siguientes casillas: (&amp;iquest;te &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/why/&quot;&gt;suena familiar?&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="bd35682e13c89e4579b11121d5e8c193aa5bdee8" translate="yes" xml:space="preserve">
          <source>Unopinionated argparse wrapper</source>
          <target state="translated">Envoltura de argarosa sin opinar</target>
        </trans-unit>
        <trans-unit id="6cc9119157ed9d1605ab58e82ba549461e8941fd" translate="yes" xml:space="preserve">
          <source>Why &lt;strong&gt;argdeco&lt;/strong&gt;?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; &lt;strong&gt;argdeco&lt;/strong&gt; ?</target>
        </trans-unit>
        <trans-unit id="7fd33a09827ea0f06465a11f07fb181684d743c2" translate="yes" xml:space="preserve">
          <source>You can get the library directly from PyPI:</source>
          <target state="translated">Puedes obtener la biblioteca directamente del PyPI:</target>
        </trans-unit>
        <trans-unit id="91b57573ae4fae8abe7f04f23341b760821f296e" translate="yes" xml:space="preserve">
          <source>action - The basic type of action to be taken when this argument is encountered at the command line.</source>
          <target state="translated">acción-El tipo básico de acción a tomar cuando este argumento se encuentra en la línea de comando.</target>
        </trans-unit>
        <trans-unit id="0f62c1f0377daf7ece6f9e7f5cdf59801458b804" translate="yes" xml:space="preserve">
          <source>action - the basic type of action to be taken when this argument is encountered at the command line</source>
          <target state="translated">acción-el tipo básico de acción a tomar cuando este argumento se encuentra en la línea de comando</target>
        </trans-unit>
        <trans-unit id="6dcb61ff42dee9d36d4e0deea99a2c303ae92006" translate="yes" xml:space="preserve">
          <source>add_help - Add a -h/--help option to the parser (default: True)</source>
          <target state="translated">add_help-Añade una opción -h/--help al analizador (por defecto:True)</target>
        </trans-unit>
        <trans-unit id="005609e28f949056739115329cc24b6a08c6ec57" translate="yes" xml:space="preserve">
          <source>allow_abbrev - Allows long options to be abbreviated if the abbreviation is unambiguous. (default: True)</source>
          <target state="translated">allow_abbrev-Permite abreviar las opciones largas si la abreviatura es inequívoca.(por defecto:True)</target>
        </trans-unit>
        <trans-unit id="913621c0db72e453062525c100abde3086ea911b" translate="yes" xml:space="preserve">
          <source>argdeco</source>
          <target state="translated">argdeco</target>
        </trans-unit>
        <trans-unit id="0e70ba91954cab2900f6430cdff6f630d32422e5" translate="yes" xml:space="preserve">
          <source>argument_default - The global default value for arguments (default: None)</source>
          <target state="translated">argument_default-El valor global por defecto de los argumentos (por defecto:Ninguno)</target>
        </trans-unit>
        <trans-unit id="f36fd2fd01ada64c5b9dce774867f15f9aab31c5" translate="yes" xml:space="preserve">
          <source>choices - A container of the allowable values for the argument.</source>
          <target state="translated">opciones-Un contenedor de los valores permitidos para el argumento.</target>
        </trans-unit>
        <trans-unit id="03c15d5dc6bc8764e953a645657d2c20561e0163" translate="yes" xml:space="preserve">
          <source>conflict_handler - The strategy for resolving conflicting optionals (usually unnecessary)</source>
          <target state="translated">conflict_handler-La estrategia para resolver los opcionales conflictivos (normalmente innecesarios)</target>
        </trans-unit>
        <trans-unit id="ef8dffc588d64927429aa17a280e375a45c3c226" translate="yes" xml:space="preserve">
          <source>const - A constant value required by some action and nargs selections.</source>
          <target state="translated">const-Un valor constante requerido por algunas acciones y selecciones de nargs.</target>
        </trans-unit>
        <trans-unit id="7d466698be17ab196f643a9e432a397997562a47" translate="yes" xml:space="preserve">
          <source>ctx - Pass the &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance to the callback callable (default: False)</source>
          <target state="translated">ctx: pasa el contexto &lt;strong&gt;argparse&lt;/strong&gt; o la instancia del analizador a la devoluci&amp;oacute;n de llamada invocable (predeterminado: Falso)</target>
        </trans-unit>
        <trans-unit id="15c254be539b07fb2fe66395f9fd3afa16d98cf7" translate="yes" xml:space="preserve">
          <source>default - The value produced if the argument is absent from the command line.</source>
          <target state="translated">default-El valor producido si el argumento está ausente de la línea de comandos.</target>
        </trans-unit>
        <trans-unit id="79d322772a51c7eccf8756f2e330b72c53a112af" translate="yes" xml:space="preserve">
          <source>description - Text to display before the argument help (default: &lt;strong&gt;doc&lt;/strong&gt;)</source>
          <target state="translated">descripci&amp;oacute;n: texto que se mostrar&amp;aacute; antes de la ayuda del argumento (predeterminado: &lt;strong&gt;doc&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="4881098dafaf49a485b9fc71ad1aad0fcf1ec856" translate="yes" xml:space="preserve">
          <source>description - description for the sub-parser group in help output, by default None</source>
          <target state="translated">descripción-descripción para el grupo sub-parser en la salida de ayuda,por defecto Ninguna</target>
        </trans-unit>
        <trans-unit id="132b39dd0926992034f613a25650ced45f23c21e" translate="yes" xml:space="preserve">
          <source>dest - The name of the attribute to be added to the object returned by parse_args().</source>
          <target state="translated">dest-El nombre del atributo que se añadirá al objeto devuelto por parse_args().</target>
        </trans-unit>
        <trans-unit id="c98db1ffd87dbb84085dc20c0e6a25c04515d449" translate="yes" xml:space="preserve">
          <source>dest - name of the attribute under which sub-command name will be stored; by default None and no value is stored</source>
          <target state="translated">dest-nombre del atributo bajo el cual se almacenará el nombre del subcomando;por defecto no se almacena ninguno ni ningún valor</target>
        </trans-unit>
        <trans-unit id="580c20fd848bbd1774ef01e5b5586da9bb62fe04" translate="yes" xml:space="preserve">
          <source>epilog - Text to display after the argument help (default: none)</source>
          <target state="translated">epilog-Texto a mostrar después de la ayuda del argumento (por defecto:ninguno)</target>
        </trans-unit>
        <trans-unit id="d386788fca86677d0109d8e5f32e3f708fb6bdae" translate="yes" xml:space="preserve">
          <source>formatter_class - A class for customizing the help output</source>
          <target state="translated">formatter_class-Una clase para personalizar la salida de la ayuda</target>
        </trans-unit>
        <trans-unit id="05e2e36e44acc9367918b0f1aed96d54da408354" translate="yes" xml:space="preserve">
          <source>fromfile_prefix_chars - The set of characters that prefix files from which additional arguments should be read (default: None)</source>
          <target state="translated">fromfile_prefix_chars-El conjunto de caracteres que prefieren los archivos de los que se deben leer argumentos adicionales (por defecto:Ninguno)</target>
        </trans-unit>
        <trans-unit id="255b2262e7f425029e08f05ffa36c26faf409c21" translate="yes" xml:space="preserve">
          <source>group - The group to add the argument. (default: None)</source>
          <target state="translated">grupo-El grupo para añadir el argumento.(por defecto:Ninguno)</target>
        </trans-unit>
        <trans-unit id="f4388b5b008d69888b29e9dcb12de8640ddad9c6" translate="yes" xml:space="preserve">
          <source>help - A brief description of what the argument does.</source>
          <target state="translated">ayuda-Una breve descripción de lo que hace el argumento.</target>
        </trans-unit>
        <trans-unit id="250387d77f25799607da225c81e082afe9e69906" translate="yes" xml:space="preserve">
          <source>help - help for sub-parser group in help output, by default None</source>
          <target state="translated">ayuda-ayuda para el grupo sub-parser en la salida de ayuda,por defecto Ninguno</target>
        </trans-unit>
        <trans-unit id="20580895dc6a57ece54def68c7f001aceb201ca3" translate="yes" xml:space="preserve">
          <source>metavar - A name for the argument in usage messages.</source>
          <target state="translated">metavar-Un nombre para el argumento en los mensajes de uso.</target>
        </trans-unit>
        <trans-unit id="27addbe397aeb18137197b024adf84c96d811e65" translate="yes" xml:space="preserve">
          <source>metavar - string presenting available sub-commands in help; by default it is None and presents sub-commands in form {cmd1, cmd2, ..}</source>
          <target state="translated">metavar-cadena que presenta los subcomandos disponibles en la ayuda;por defecto es None y presenta los subcomandos en forma {cmd1,cmd2,..}</target>
        </trans-unit>
        <trans-unit id="a8e76d4a65f55c18078c9181a9dc398f6ef72bff" translate="yes" xml:space="preserve">
          <source>name or flags - Either a name or a list of option strings, e.g. foo or -f, --foo.</source>
          <target state="translated">nombre o banderas-Un nombre o una lista de cadenas de opciones,por ejemplo,foo o -f,--foo.</target>
        </trans-unit>
        <trans-unit id="e86ecb01b3ea8ebc38d4b97bf72d74b887fdabce" translate="yes" xml:space="preserve">
          <source>nargs - The number of command-line arguments that should be consumed.</source>
          <target state="translated">nargs-El número de argumentos de la línea de mando que deben ser consumidos.</target>
        </trans-unit>
        <trans-unit id="f600f5f91b5997d8f126d20c1c3cc54cf427f7c2" translate="yes" xml:space="preserve">
          <source>parents - A list of ArgumentParser objects whose arguments should also be included</source>
          <target state="translated">Una lista de objetos ArgumentParser cuyos argumentos también deben ser incluidos</target>
        </trans-unit>
        <trans-unit id="af0155dba0f70844d8be294bb74bf2a256f57f22" translate="yes" xml:space="preserve">
          <source>parser_class - The class to instantiate the parser (default: argparse.ArgumentParser)</source>
          <target state="translated">parser_class-La clase para instanciar el parser (por defecto:argparse.ArgumentParser)</target>
        </trans-unit>
        <trans-unit id="66a8e4ab807a3068f427103cd3859ae953863a36" translate="yes" xml:space="preserve">
          <source>parser_class - class which will be used to create sub-parser instances, by default the class of the current parser (e.g. ArgumentParser)</source>
          <target state="translated">parser_class-clase que se usará para crear instancias sub-parser,por defecto la clase del parser actual (por ejemplo,ArgumentParser)</target>
        </trans-unit>
        <trans-unit id="9276bf97b120d6475223088f07c0888abdea6c5b" translate="yes" xml:space="preserve">
          <source>prefix_chars - The set of characters that prefix optional arguments (default: &quot;-&quot;)</source>
          <target state="translated">prefix_chars-El conjunto de caracteres que prefieren los argumentos opcionales (por defecto:&quot;-&quot;)</target>
        </trans-unit>
        <trans-unit id="a8988ae12fb0997451ba9d150871f427e4105bb0" translate="yes" xml:space="preserve">
          <source>prog - The name of the program (default: sys.argv[0])</source>
          <target state="translated">prog-El nombre del programa (por defecto:sys.argv[0])</target>
        </trans-unit>
        <trans-unit id="ae26143d33c9a0822ee23df3faaa9bd9f1b98adc" translate="yes" xml:space="preserve">
          <source>prog - usage information that will be displayed with sub-command help, by default the name of the program and any positional arguments before the subparser argument</source>
          <target state="translated">prog-información de uso que se mostrará con la ayuda de los subcomandos,por defecto el nombre del programa y cualquier argumento de posición antes del argumento de los subcomandos</target>
        </trans-unit>
        <trans-unit id="cae819f1f59b40cf42ec0206828a41f33a10ce1f" translate="yes" xml:space="preserve">
          <source>required - Whether or not a subcommand must be provided, by default False (added in 3.7)</source>
          <target state="translated">requerido-Si se debe proporcionar o no un subcomando,por defecto Falso (añadido en 3.7)</target>
        </trans-unit>
        <trans-unit id="56402d5511c6a2455803525df0b18682dadf54e8" translate="yes" xml:space="preserve">
          <source>required - Whether or not the command-line option may be omitted (optionals only).</source>
          <target state="translated">requerido-Si se puede omitir o no la opción de la línea de comando (sólo opcionales).</target>
        </trans-unit>
        <trans-unit id="9c24ef0deb8e512ae7ff3e432925ddf6367d58a4" translate="yes" xml:space="preserve">
          <source>shares the &lt;em&gt;EXACT&lt;/em&gt; same API as &lt;strong&gt;argparse&lt;/strong&gt; using decorators</source>
          <target state="translated">comparte la misma API &lt;em&gt;EXACTA&lt;/em&gt; que &lt;strong&gt;argparse&lt;/strong&gt; usando decoradores</target>
        </trans-unit>
        <trans-unit id="e3d31e1394f8d3b448561e71ba4a2d6178fdaacd" translate="yes" xml:space="preserve">
          <source>supports callback callable instance binding with &lt;strong&gt;argparse&lt;/strong&gt; context or parser instance forwarding</source>
          <target state="translated">admite enlace de instancias de devoluci&amp;oacute;n de llamada con contexto &lt;strong&gt;argparse&lt;/strong&gt; o reenv&amp;iacute;o de instancias del analizador</target>
        </trans-unit>
        <trans-unit id="710b9d92ee06c7e707c588e057074a5389c5820f" translate="yes" xml:space="preserve">
          <source>supports class callback method decoration and method instance binding with class instance forwarding (thank you &lt;a href=&quot;https://github.com/GrahamDumpleton&quot;&gt;Graham Dumpleton&lt;/a&gt; for &lt;a href=&quot;https://github.com/GrahamDumpleton/wrapt&quot;&gt;wrapt&lt;/a&gt;!)</source>
          <target state="translated">apoya la decoraci&amp;oacute;n m&amp;eacute;todo de devoluci&amp;oacute;n de llamada de clase e instancia m&amp;eacute;todo de uni&amp;oacute;n con la instancia de clase de reenv&amp;iacute;o (gracias &lt;a href=&quot;https://github.com/GrahamDumpleton&quot;&gt;Graham Dumpleton&lt;/a&gt; para &lt;a href=&quot;https://github.com/GrahamDumpleton/wrapt&quot;&gt;envuelto&lt;/a&gt; !)</target>
        </trans-unit>
        <trans-unit id="686c12c6e2e8fcd4dcff231dfa1cb660b410b9e4" translate="yes" xml:space="preserve">
          <source>title - title for the sub-parser group in help output; by default &amp;ldquo;subcommands&amp;rdquo; if description is provided, otherwise uses title for positional arguments</source>
          <target state="translated">t&amp;iacute;tulo: t&amp;iacute;tulo para el grupo de suban&amp;aacute;lisis en la salida de ayuda; por defecto, &quot;subcomandos&quot; si se proporciona una descripci&amp;oacute;n; de lo contrario, utiliza el t&amp;iacute;tulo para los argumentos posicionales</target>
        </trans-unit>
        <trans-unit id="8a9de5198521fc780d0bedea49cfc46054bb885b" translate="yes" xml:space="preserve">
          <source>type - The type to which the command-line argument should be converted.</source>
          <target state="translated">tipo-El tipo al que se debe convertir el argumento de la línea de comandos.</target>
        </trans-unit>
        <trans-unit id="5d04ba015d06eb10afbbc2602bd53c84d1f5cd86" translate="yes" xml:space="preserve">
          <source>usage - The string describing the program usage (default: generated from arguments added to parser)</source>
          <target state="translated">usage-La cadena que describe el uso del programa (por defecto:generado a partir de los argumentos añadidos al analizador)</target>
        </trans-unit>
        <trans-unit id="27b2990f4ef44e7d22e2448c29644f50b652da7c" translate="yes" xml:space="preserve">
          <source>wrapped - The callback callable (default: None)</source>
          <target state="translated">envuelto-La llamada de devolución de llamada (por defecto:Ninguna)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
