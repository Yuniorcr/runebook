<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/klang/">
    <body>
      <group id="klang">
        <trans-unit id="816806c208b593a0d734ecaeccac60407494d013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arpeggiator_demo.py&lt;/code&gt;: Two synthesizer patch with an arpeggiator and some sound effects</source>
          <target state="translated">&lt;code&gt;arpeggiator_demo.py&lt;/code&gt; : dos parches de sintetizador con un arpegiador y algunos efectos de sonido</target>
        </trans-unit>
        <trans-unit id="3701138196ccc780a6be54908ac9897313498358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio_file_demo.py&lt;/code&gt;: Looped audio file playback (&lt;code&gt;gong.wav&lt;/code&gt; sample) with audio effects</source>
          <target state="translated">&lt;code&gt;audio_file_demo.py&lt;/code&gt; : reproducci&amp;oacute;n de archivos de audio en bucle ( muestra de &lt;code&gt;gong.wav&lt;/code&gt; ) con efectos de audio</target>
        </trans-unit>
        <trans-unit id="e90384b946042ef6c00878b81f9f27ac421f731b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hello_world.py&lt;/code&gt;: 440 Hz sine wave generator</source>
          <target state="translated">&lt;code&gt;hello_world.py&lt;/code&gt; : generador de onda sinusoidal de 440 Hz</target>
        </trans-unit>
        <trans-unit id="0283dfe30f97ecac46429bccb5fdc5882a4c5dd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;micro_rhythm_demo.py&lt;/code&gt;: Kick and Hi-Hat pattern where the latter is phrased with a micro rhythm</source>
          <target state="translated">&lt;code&gt;micro_rhythm_demo.py&lt;/code&gt; : Patr&amp;oacute;n de patada y charles donde este &amp;uacute;ltimo se expresa con un micro ritmo</target>
        </trans-unit>
        <trans-unit id="c7931d00d9e91fa30842fe330e67666fe9555334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sequencer_demo.py&lt;/code&gt;: Techno patch with sequencer</source>
          <target state="translated">&lt;code&gt;sequencer_demo.py&lt;/code&gt; : parche Techno con secuenciador</target>
        </trans-unit>
        <trans-unit id="6edfecd7cdb7325911fb76dbe60311c57a5655c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;synthesizer_demo.py&lt;/code&gt;: This has to be started as root. Computer keyboard playable monophonic synthesizer</source>
          <target state="translated">&lt;code&gt;synthesizer_demo.py&lt;/code&gt; : Debe iniciarse como root. Sintetizador monof&amp;oacute;nico reproducible con teclado de computadora</target>
        </trans-unit>
        <trans-unit id="5a7ae80fd2b3e033d84af64e9e56e08a32819160" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tempo_aware_effects.py&lt;/code&gt;: Modulated noise with time synced effects</source>
          <target state="translated">&lt;code&gt;tempo_aware_effects.py&lt;/code&gt; : ruido modulado con efectos sincronizados en el tiempo</target>
        </trans-unit>
        <trans-unit id="6a9bc4c6882b5e849fa83144c9f59e6e47d1b566" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Message&lt;/em&gt; (&lt;code&gt;MessageInput&lt;/code&gt; and &lt;code&gt;MessageOutput&lt;/code&gt; classes)</source>
          <target state="translated">&lt;em&gt;Mensaje&lt;/em&gt; ( clases &lt;code&gt;MessageInput&lt;/code&gt; y &lt;code&gt;MessageOutput&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3a7f1be1a8849b278219604a04d39cb7ce75691c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Value&lt;/em&gt; (&lt;code&gt;Input&lt;/code&gt; and &lt;code&gt;Output&lt;/code&gt; classes)</source>
          <target state="translated">&lt;em&gt;Valor&lt;/em&gt; ( clases de &lt;code&gt;Input&lt;/code&gt; y &lt;code&gt;Output&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2f69170b107beda81e7db13c762077152dded274" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alexander Theler&lt;/strong&gt; - &lt;a href=&quot;https://github.com/atheler&quot;&gt;GitHub&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Alexander Theler&lt;/strong&gt; - &lt;a href=&quot;https://github.com/atheler&quot;&gt;GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d9540ff93a75d47409d6a0aa37491da117ecdf8" translate="yes" xml:space="preserve">
          <source>Acknowledgments</source>
          <target state="translated">Agradecimientos</target>
        </trans-unit>
        <trans-unit id="17ebfd61dbc846af4e8ab83c293ea391ffcbe866" translate="yes" xml:space="preserve">
          <source>Andreas Steiner &lt;a href=&quot;http://smokeandmirrors.ch&quot;&gt;Smoke And Mirrors&lt;/a&gt;</source>
          <target state="translated">Andreas Steiner &lt;a href=&quot;http://smokeandmirrors.ch&quot;&gt;Humo y espejos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2430c899faf14e96459e3b7eeb50032f26f81f74" translate="yes" xml:space="preserve">
          <source>As always when programming with sound: Unplug your headphones or be very sure of what you are doing! Also with low headphone volume bugs in the code can result in very unpleasant loud noises which could probably impair your hearing. Be careful!</source>
          <target state="translated">Como siempre cuando se programa con sonido:¡Desconecta tus auriculares o asegúrate de lo que estás haciendo! Además,con un volumen bajo de los auriculares,los errores en el código pueden producir ruidos fuertes muy desagradables que probablemente podrían perjudicar tu audición.¡Ten cuidado!</target>
        </trans-unit>
        <trans-unit id="74b459ca20995f1d4b9e9c9bef74f853f91fc71a" translate="yes" xml:space="preserve">
          <source>Audio can be written to disk as a WAV file with the &lt;code&gt;filepath&lt;/code&gt; argument.</source>
          <target state="translated">El audio se puede escribir en el disco como un archivo WAV con el argumento &lt;code&gt;filepath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Autor</target>
        </trans-unit>
        <trans-unit id="54f4d37df10cb844507ee3226891ad42c5fcf2ea" translate="yes" xml:space="preserve">
          <source>Block based synthesis and music library</source>
          <target state="translated">Síntesis basada en bloques y biblioteca musical</target>
        </trans-unit>
        <trans-unit id="c1390b1492af1787012815a0da16bd2f045db787" translate="yes" xml:space="preserve">
          <source>Block based synthesis and music library for Python. &lt;em&gt;Klang&lt;/em&gt; is German for sound.</source>
          <target state="translated">Biblioteca de m&amp;uacute;sica y s&amp;iacute;ntesis basada en bloques para Python. &lt;em&gt;Klang&lt;/em&gt; es alem&amp;aacute;n para sonido.</target>
        </trans-unit>
        <trans-unit id="d47cf0f37c9b3b717ad801771de4c81a8f106260" translate="yes" xml:space="preserve">
          <source>Coding Style</source>
          <target state="translated">Estilo de codificación</target>
        </trans-unit>
        <trans-unit id="8f3509b64e0ea82c53329cb49a7756bd1ced3566" translate="yes" xml:space="preserve">
          <source>Connections</source>
          <target state="translated">Conexiones</target>
        </trans-unit>
        <trans-unit id="b59f395125d5c98d1c8ec9dd2acb1b95bb38c7fe" translate="yes" xml:space="preserve">
          <source>Defining The Network</source>
          <target state="translated">Definición de la red</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Ejemplos</target>
        </trans-unit>
        <trans-unit id="53da8f452091b7957a85d7c9e3f95c5fbd375889" translate="yes" xml:space="preserve">
          <source>For developing you can link your working copy with</source>
          <target state="translated">Para el desarrollo puede vincular su copia de trabajo con</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Empezando</target>
        </trans-unit>
        <trans-unit id="9d6cd3eb8258869b1e470d6d71d4709f02b7760e" translate="yes" xml:space="preserve">
          <source>In the following script we create a 440 Hz sine oscillator which output gets send to the sound card.</source>
          <target state="translated">En el siguiente guión creamos un oscilador sinusoidal de 440 Hz cuya salida se envía a la tarjeta de sonido.</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Instalando</target>
        </trans-unit>
        <trans-unit id="2c9982247f7b982c8622076d2c62a9502df46d5f" translate="yes" xml:space="preserve">
          <source>Klang</source>
          <target state="translated">Klang</target>
        </trans-unit>
        <trans-unit id="64853241b14df743e0222ef2f4d10f4da30e5c76" translate="yes" xml:space="preserve">
          <source>Klang Primer</source>
          <target state="translated">Imprimación Klang</target>
        </trans-unit>
        <trans-unit id="f0b0424ef4a91ee4328d7b71aca91846cca268ac" translate="yes" xml:space="preserve">
          <source>Klang can be installed via PyPi / pip or directly via setup.py. Note that there is a C extension which needs to be compiled (&lt;code&gt;klang/audio/_envelope.c&lt;/code&gt;). C extensions can be compiled in place with:</source>
          <target state="translated">Klang se puede instalar a trav&amp;eacute;s de PyPi / pip o directamente a trav&amp;eacute;s de setup.py. Tenga en cuenta que hay una extensi&amp;oacute;n C que debe compilarse ( &lt;code&gt;klang/audio/_envelope.c&lt;/code&gt; ). Las extensiones de C se pueden compilar en su lugar con:</target>
        </trans-unit>
        <trans-unit id="eb5f730495b25f833174ca19e1dafecaae254f52" translate="yes" xml:space="preserve">
          <source>Klang provides various audio related blocks. Every block can have multiple in- and outputs and by connecting them with each other we can define our network. Once we are finished with patching we can run our network with by calling &lt;code&gt;run_klang(*blocks)&lt;/code&gt;. This function only needs some blocks which belong to the network. It will then automatically discovers the other blocks of the network and deduce an appropriate block execution order.</source>
          <target state="translated">Klang proporciona varios bloques relacionados con el audio. Cada bloque puede tener m&amp;uacute;ltiples entradas y salidas y al conectarlas entre s&amp;iacute; podemos definir nuestra red. Una vez que hayamos terminado con el parche, podemos ejecutar nuestra red llamando a &lt;code&gt;run_klang(*blocks)&lt;/code&gt; . Esta funci&amp;oacute;n solo necesita algunos bloques que pertenecen a la red. Luego, descubrir&amp;aacute; autom&amp;aacute;ticamente los otros bloques de la red y deducir&amp;aacute; un orden de ejecuci&amp;oacute;n de bloques apropiado.</target>
        </trans-unit>
        <trans-unit id="255d905a98267124b10c472a46ae093d858374cf" translate="yes" xml:space="preserve">
          <source>Lawrence Markwalder &lt;a href=&quot;https://github.com/lmarkwalder&quot;&gt;GitHub&lt;/a&gt;</source>
          <target state="translated">Lawrence Markwalder &lt;a href=&quot;https://github.com/lmarkwalder&quot;&gt;GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d8cdc699ea5f458fc90701476c983e18e7647fe" translate="yes" xml:space="preserve">
          <source>Mix operator &lt;code&gt;+&lt;/code&gt;: Mix multiple value outputs together.</source>
          <target state="translated">Operador de mezcla &lt;code&gt;+&lt;/code&gt; : mezcla varias salidas de valor.</target>
        </trans-unit>
        <trans-unit id="8ffbc72881c754687b47f1fe2e0742d66d2ebeee" translate="yes" xml:space="preserve">
          <source>Nico Neureiter &lt;a href=&quot;https://github.com/NicoNeureiter&quot;&gt;GitHub&lt;/a&gt;</source>
          <target state="translated">Nico Neureiter &lt;a href=&quot;https://github.com/NicoNeureiter&quot;&gt;GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="426d89482d8be386273f5602c3f7ac8f8088099f" translate="yes" xml:space="preserve">
          <source>PEP8 / Google flavored. With the one exception for variable and argument names (&lt;code&gt;camelCase&lt;/code&gt;). Function and in methods are &lt;code&gt;snake_case()&lt;/code&gt;.</source>
          <target state="translated">Con sabor a PEP8 / Google. Con la &amp;uacute;nica excepci&amp;oacute;n de los nombres de variables y argumentos ( &lt;code&gt;camelCase&lt;/code&gt; ). La funci&amp;oacute;n y los m&amp;eacute;todos son &lt;code&gt;snake_case()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50a9800ec419565cdbdae700963cde92d76fdd1e" translate="yes" xml:space="preserve">
          <source>Pipe operator &lt;code&gt;|&lt;/code&gt;: Connect multiple blocks in series.</source>
          <target state="translated">Operador de tuber&amp;iacute;a &lt;code&gt;|&lt;/code&gt; : Conecte varios bloques en serie.</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Requisitos previos</target>
        </trans-unit>
        <trans-unit id="1e0883db26345cee9aa196cedada38c2dbef49be" translate="yes" xml:space="preserve">
          <source>Running the tests</source>
          <target state="translated">Realizando las pruebas</target>
        </trans-unit>
        <trans-unit id="e69f7c4a1397fa5d70f6b764dd3a77e42f035f19" translate="yes" xml:space="preserve">
          <source>Safety First</source>
          <target state="translated">La seguridad es lo primero</target>
        </trans-unit>
        <trans-unit id="51bf7bee4001cb1b1c4aec55cdb2836604ed74c7" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;examples/&lt;/code&gt; directory with a couple example script which illustrate the core functionality of Klang. Currently there are:</source>
          <target state="translated">Vea el directorio &lt;code&gt;examples/&lt;/code&gt; con un par de secuencias de comandos de ejemplo que ilustran la funcionalidad principal de Klang. Actualmente existen:</target>
        </trans-unit>
        <trans-unit id="d65d5786172f5ed0f4039fc10298275d8ef1e945" translate="yes" xml:space="preserve">
          <source>Tests can be run via with</source>
          <target state="translated">Las pruebas pueden realizarse a través de</target>
        </trans-unit>
        <trans-unit id="aae2489ac9bea83bfd4744e4b4f32ca4f4a1c386" translate="yes" xml:space="preserve">
          <source>Thanks for the support and inputs!</source>
          <target state="translated">¡Gracias por el apoyo y las aportaciones!</target>
        </trans-unit>
        <trans-unit id="5c88585d7969d9b2603f9c9589d3e134b28aacdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;connect&lt;/code&gt; method can be used to connect inputs and outputs with each other. Note that it is always possible to connect one output to multiple inputs but not the other way round. As a shorthand there are two overloaded operators:</source>
          <target state="translated">El m&amp;eacute;todo de &lt;code&gt;connect&lt;/code&gt; se puede utilizar para conectar entradas y salidas entre s&amp;iacute;. Tenga en cuenta que siempre es posible conectar una salida a varias entradas, pero no al rev&amp;eacute;s. Como abreviatura, hay dos operadores sobrecargados:</target>
        </trans-unit>
        <trans-unit id="2d6fae80cd30f36714aeb0273f4198e8d29e2238" translate="yes" xml:space="preserve">
          <source>There are two different connection types in Klang:</source>
          <target state="translated">Hay dos tipos de conexión diferentes en Klang:</target>
        </trans-unit>
        <trans-unit id="4dbe12c60f29bc9fb71f5a1bd759abdf1e300210" translate="yes" xml:space="preserve">
          <source>Value based connections can hold any kind of Python object as value. Message connections have an internal queue.
The former is mostly used to propagate audio samples and modulation signals through the network (Numpy arrays as values). The latter is used for discrete messages like note messages.
There are also corresponding &lt;em&gt;Relay&lt;/em&gt; connections (&lt;code&gt;Relay&lt;/code&gt; and &lt;code&gt;MessageRelay&lt;/code&gt; classes). These are used to build composite blocks (blocks which contain there own network of child blocks). Relays can be used to interface between the inside and outside of an composite block.</source>
          <target state="translated">Las conexiones basadas en valores pueden contener cualquier tipo de objeto Python como valor. Las conexiones de mensajes tienen una cola interna. El primero se utiliza principalmente para propagar muestras de audio y se&amp;ntilde;ales de modulaci&amp;oacute;n a trav&amp;eacute;s de la red (matrices Numpy como valores). Este &amp;uacute;ltimo se utiliza para mensajes discretos como mensajes de nota. Tambi&amp;eacute;n hay conexiones de &lt;em&gt;rel&amp;eacute;&lt;/em&gt; correspondientes ( clases de &lt;code&gt;Relay&lt;/code&gt; y &lt;code&gt;MessageRelay&lt;/code&gt; ). Estos se utilizan para construir bloques compuestos (bloques que contienen su propia red de bloques hijos). Los rel&amp;eacute;s se pueden utilizar para interactuar entre el interior y el exterior de un bloque compuesto.</target>
        </trans-unit>
        <trans-unit id="d6b44e6079b52b65c0ba10d6ea4cb40b4652a5ab" translate="yes" xml:space="preserve">
          <source>We use Python bindings for &lt;a href=&quot;http://www.portaudio.com&quot;&gt;PortAudio&lt;/a&gt; and &lt;a href=&quot;https://www.music.mcgill.ca/%7Egary/rtmidi/&quot;&gt;RtMidi&lt;/a&gt;. On Mac they can be installed via &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="translated">Usamos enlaces de Python para &lt;a href=&quot;http://www.portaudio.com&quot;&gt;PortAudio&lt;/a&gt; y &lt;a href=&quot;https://www.music.mcgill.ca/%7Egary/rtmidi/&quot;&gt;RtMidi&lt;/a&gt; . En Mac, se pueden instalar a trav&amp;eacute;s de &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
