<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/mbed-host-tests/">
    <body>
      <group id="mbed-host-tests">
        <trans-unit id="73f206237358af4e214f2ad31e03066659a22927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;IP_address&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;port_number&amp;gt;&lt;/code&gt; - IP address and port of remote resource manager.</source>
          <target state="translated">&lt;code&gt;&amp;lt;IP_address&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;port_number&amp;gt;&lt;/code&gt; : direcci&amp;oacute;n IP y puerto del administrador de recursos remoto.</target>
        </trans-unit>
        <trans-unit id="2315dd8635db49d10d5ff717a07556886c485353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;config_name&amp;gt;&lt;/code&gt; - ether pre-defined CONFIG_NAME from mbedfm or a local config file for the Fast Models.</source>
          <target state="translated">&lt;code&gt;&amp;lt;config_name&amp;gt;&lt;/code&gt; - ether CONFIG_NAME predefinido desde mbedfm o un archivo de configuraci&amp;oacute;n local para los modelos r&amp;aacute;pidos.</target>
        </trans-unit>
        <trans-unit id="17c0b030ceb8c6259d29f69c159b24b1152ff97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;module_name&amp;gt;&lt;/code&gt; - name of Python module to load as remote resource manager.</source>
          <target state="translated">&lt;code&gt;&amp;lt;module_name&amp;gt;&lt;/code&gt; : nombre del m&amp;oacute;dulo de Python para cargar como administrador de recursos remoto.</target>
        </trans-unit>
        <trans-unit id="62e60b103cf49cca316e125268312fad8ae04e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sync=-1&lt;/code&gt;- &lt;code&gt;__sync&lt;/code&gt; packets will be sent unless we will reach timeout or proper response is sent from DUT.</source>
          <target state="translated">&lt;code&gt;--sync=-1&lt;/code&gt; - Se &lt;code&gt;__sync&lt;/code&gt; paquetes __sync a menos que alcancemos el tiempo de espera o se env&amp;iacute;e la respuesta adecuada desde DUT.</target>
        </trans-unit>
        <trans-unit id="1bde794eaa5ce5cdd871c8a8ed159f2745b594f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sync=0&lt;/code&gt; - No sync packets will be sent to DUT.</source>
          <target state="translated">&lt;code&gt;--sync=0&lt;/code&gt; : no se enviar&amp;aacute;n paquetes de sincronizaci&amp;oacute;n a DUT.</target>
        </trans-unit>
        <trans-unit id="9202d111f81be25b256c55649110d666c93d381e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sync=N&lt;/code&gt; - Where N is integer &amp;gt; 0. Send up to N &lt;code&gt;__sync&lt;/code&gt; packets to target platform. Response is sent unless we get response from target platform or timeout occurs.</source>
          <target state="translated">&lt;code&gt;--sync=N&lt;/code&gt; - Donde N es un entero&amp;gt; 0. Env&amp;iacute;a hasta N paquetes &lt;code&gt;__sync&lt;/code&gt; a la plataforma de destino. La respuesta se env&amp;iacute;a a menos que obtengamos una respuesta de la plataforma de destino o se agote el tiempo de espera.</target>
        </trans-unit>
        <trans-unit id="4b945ede260654e0f827dbfaa6e83ea7b0de2d24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONN&lt;/code&gt; - connection process (pooling for connection source e.g. serial port),</source>
          <target state="translated">&lt;code&gt;CONN&lt;/code&gt; - proceso de conexi&amp;oacute;n (agrupaci&amp;oacute;n para la fuente de conexi&amp;oacute;n, por ejemplo, puerto serie),</target>
        </trans-unit>
        <trans-unit id="aa36907e745e96b081ba0cf5430162f2088874fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COPY&lt;/code&gt; - host test plugins, type &lt;code&gt;CopyMethod&lt;/code&gt; of the plugin,</source>
          <target state="translated">&lt;code&gt;COPY&lt;/code&gt; : complementos de prueba de host, escriba &lt;code&gt;CopyMethod&lt;/code&gt; del complemento,</target>
        </trans-unit>
        <trans-unit id="252ece708e3ba5fff9ea90f1c513c684f79d7ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERR&lt;/code&gt; (error).</source>
          <target state="translated">&lt;code&gt;ERR&lt;/code&gt; (error).</target>
        </trans-unit>
        <trans-unit id="0324877f43e21edc185859f23fc35c8063d0a492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTST&lt;/code&gt; - host test object, HostTestBase derived object,</source>
          <target state="translated">&lt;code&gt;HTST&lt;/code&gt; : objeto de prueba de host, objeto derivado de HostTestBase,</target>
        </trans-unit>
        <trans-unit id="ae0c1f99a757da1a18a9f18f9a7c5c896def47d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INF&lt;/code&gt; (info),</source>
          <target state="translated">&lt;code&gt;INF&lt;/code&gt; (informaci&amp;oacute;n),</target>
        </trans-unit>
        <trans-unit id="b5068e5fbd010807231f1efd39c83bf9820c804d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PLGN&lt;/code&gt; - host test plugins, type &lt;code&gt;BasePlugin&lt;/code&gt; of the plugin,</source>
          <target state="translated">&lt;code&gt;PLGN&lt;/code&gt; : complementos de prueba de host, escriba &lt;code&gt;BasePlugin&lt;/code&gt; del complemento,</target>
        </trans-unit>
        <trans-unit id="68dcc3ab0c52c817a21c29b3f4309a9a3e6599ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REST&lt;/code&gt; - host test plugins, type &lt;code&gt;ResetMethod&lt;/code&gt; of the plugin,</source>
          <target state="translated">&lt;code&gt;REST&lt;/code&gt; : complementos de prueba de host, escriba &lt;code&gt;ResetMethod&lt;/code&gt; del complemento,</target>
        </trans-unit>
        <trans-unit id="d6504288f35fb136d6facff97c815828c12809b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RXD&lt;/code&gt; (host's RX channel, from DUT).</source>
          <target state="translated">&lt;code&gt;RXD&lt;/code&gt; (canal RX del anfitri&amp;oacute;n, de DUT).</target>
        </trans-unit>
        <trans-unit id="be48e576ff325b898d77d4109b00a276a9b5f49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RXD&lt;/code&gt; channel emitted &lt;code&gt;{{__sync;a7ace3a2-4025-4950-b9fc-a3671103387a}}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RXD&lt;/code&gt; Canal RXD emitido &lt;code&gt;{{__sync;a7ace3a2-4025-4950-b9fc-a3671103387a}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4eebcb9ceef0a9470046493bd884b5166dee8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SERI&lt;/code&gt; - serial port wrapper with standard read, write, flush interface,</source>
          <target state="translated">&lt;code&gt;SERI&lt;/code&gt; : contenedor de puerto serie con interfaz est&amp;aacute;ndar de lectura, escritura y descarga,</target>
        </trans-unit>
        <trans-unit id="525831b4e82343e67b3190b1ce9c195f0b1d1201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TXD&lt;/code&gt; (host's TX channel, to DUT).</source>
          <target state="translated">&lt;code&gt;TXD&lt;/code&gt; (canal TX del anfitri&amp;oacute;n, a DUT).</target>
        </trans-unit>
        <trans-unit id="8d94a283f05853dc0c1c67fa44a75a42ed73e149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WRN&lt;/code&gt; (warning),</source>
          <target state="translated">&lt;code&gt;WRN&lt;/code&gt; (advertencia),</target>
        </trans-unit>
        <trans-unit id="a424516ef2e22ca2f296966a65c99bdb62aff720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[1455218713.87][CONN][RXD] {{__sync;a7ace3a2-4025-4950-b9fc-a3671103387a}}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;[1455218713.87][CONN][RXD] {{__sync;a7ace3a2-4025-4950-b9fc-a3671103387a}}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3ebf8ec5cbec6661a8f3fef93bbd7aae0404f050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[timestamp][source][level]&lt;/code&gt; - new log format, where:</source>
          <target state="translated">&lt;code&gt;[timestamp][source][level]&lt;/code&gt; : nuevo formato de registro, donde:</target>
        </trans-unit>
        <trans-unit id="aebb6375919652bf3cd4cec03e3f2f2c7f08969b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__coverage_start&lt;/code&gt; - sent by DUT, coverage data.</source>
          <target state="translated">&lt;code&gt;__coverage_start&lt;/code&gt; : enviado por DUT, datos de cobertura.</target>
        </trans-unit>
        <trans-unit id="aef3110f389e82af1973c9bcd0c75c246fa8a691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__exit&lt;/code&gt; - sent by DUT, test suite execution finished.</source>
          <target state="translated">&lt;code&gt;__exit&lt;/code&gt; - enviado por DUT, ejecuci&amp;oacute;n de la suite de prueba finalizada.</target>
        </trans-unit>
        <trans-unit id="e73f1f004a2d367ad3306a388160e6bd776dcd7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__exit_event_queue&lt;/code&gt; - sent by host test, indicating no more events expected.</source>
          <target state="translated">&lt;code&gt;__exit_event_queue&lt;/code&gt; : enviado por la prueba del host, lo que indica que no se esperan m&amp;aacute;s eventos.</target>
        </trans-unit>
        <trans-unit id="66ab6ccf2d92f9d1d9a8d6179803a40238c95c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__host_test_name&lt;/code&gt; - host test name, sent by DUT after &lt;code&gt;{{sync;UUID}}&lt;/code&gt; is received.</source>
          <target state="translated">&lt;code&gt;__host_test_name&lt;/code&gt; : nombre de la prueba del host, enviado por DUT despu&amp;eacute;s de recibir &lt;code&gt;{{sync;UUID}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4c381c842b653117058d4eb629f3b159890c58e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__notify_complete&lt;/code&gt; - sent by DUT, async notificaion about test case result (true, false, none).</source>
          <target state="translated">&lt;code&gt;__notify_complete&lt;/code&gt; : enviado por DUT, notificaci&amp;oacute;n as&amp;iacute;ncrona sobre el resultado del caso de prueba (verdadero, falso, ninguno).</target>
        </trans-unit>
        <trans-unit id="70915690f15f4057e050e62023b57db39122af21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__notify_conn_lost&lt;/code&gt; - sent by host test's connection process to notify serial port connection lost.</source>
          <target state="translated">&lt;code&gt;__notify_conn_lost&lt;/code&gt; : enviado por el proceso de conexi&amp;oacute;n de la prueba del host para notificar la p&amp;eacute;rdida de la conexi&amp;oacute;n del puerto serie.</target>
        </trans-unit>
        <trans-unit id="38605565e3847c0ad513f2ba8dea7090207e8d27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__notify_prn&lt;/code&gt; - sent by host test to print log message.</source>
          <target state="translated">&lt;code&gt;__notify_prn&lt;/code&gt; : enviado por la prueba del host para imprimir el mensaje de registro.</target>
        </trans-unit>
        <trans-unit id="2536463805107e8572fd2f50d4dafe64b11ed998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__notify_sync_failed&lt;/code&gt; - sent by host when sync response not received from DUT.</source>
          <target state="translated">&lt;code&gt;__notify_sync_failed&lt;/code&gt; : enviado por el host cuando no se recibe la respuesta de sincronizaci&amp;oacute;n del DUT.</target>
        </trans-unit>
        <trans-unit id="73a87a44a506b29d322e968afa4e11f08928f7f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__rxd_line&lt;/code&gt; - Event triggered when &lt;code&gt;\n&lt;/code&gt; was found on DUT RXD channel. It can be overridden (&lt;code&gt;self.register_callback('__rxd_line', &amp;lt;callback_function&amp;gt;)&lt;/code&gt;) and used by user. Event is sent by host test to notify a new line of text was received on RXD channel. &lt;code&gt;__rxd_line&lt;/code&gt; event payload (value) in a line of text received from DUT over RXD.</source>
          <target state="translated">&lt;code&gt;__rxd_line&lt;/code&gt; : evento activado cuando &lt;code&gt;\n&lt;/code&gt; se encontr&amp;oacute; en el canal DUT RXD. Puede ser anulado ( &lt;code&gt;self.register_callback('__rxd_line', &amp;lt;callback_function&amp;gt;)&lt;/code&gt; ) y utilizado por el usuario. La prueba del host env&amp;iacute;a el evento para notificar que se recibi&amp;oacute; una nueva l&amp;iacute;nea de texto en el canal RXD. &lt;code&gt;__rxd_line&lt;/code&gt; carga &amp;uacute;til del evento (valor) en una l&amp;iacute;nea de texto recibida de DUT a trav&amp;eacute;s de RXD.</target>
        </trans-unit>
        <trans-unit id="0522521478639533401e1883eff02556a26666be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__sync&lt;/code&gt; - sync message, used by master and DUT to handshake.</source>
          <target state="translated">&lt;code&gt;__sync&lt;/code&gt; : mensaje de sincronizaci&amp;oacute;n, utilizado por el maestro y el DUT para el protocolo de enlace.</target>
        </trans-unit>
        <trans-unit id="e44e21591905935c4722b68cea21bca505ee8d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__testcase_finish&lt;/code&gt; - sent by DUT, test case result.</source>
          <target state="translated">&lt;code&gt;__testcase_finish&lt;/code&gt; : enviado por DUT, resultado del caso de prueba.</target>
        </trans-unit>
        <trans-unit id="b1b2477cddf45a8f624498658f7c0e05338b1976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__testcase_start&lt;/code&gt; - sent by DUT, test case start data.</source>
          <target state="translated">&lt;code&gt;__testcase_start&lt;/code&gt; : enviado por DUT, datos de inicio del caso de prueba.</target>
        </trans-unit>
        <trans-unit id="a72bf43954020d842d07f1c5611e30859cebb23a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__timeout&lt;/code&gt; - timeout in sec, sent by DUT after &lt;code&gt;{{sync;UUID}}&lt;/code&gt; is received.</source>
          <target state="translated">&lt;code&gt;__timeout&lt;/code&gt; : tiempo de espera en segundos, enviado por DUT despu&amp;eacute;s de recibir &lt;code&gt;{{sync;UUID}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f256f495b16d358fb749994641994004470ab033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__version&lt;/code&gt; - &lt;code&gt;greentea-client&lt;/code&gt; version send from DUT to host.</source>
          <target state="translated">&lt;code&gt;__version&lt;/code&gt; : la &lt;code&gt;greentea-client&lt;/code&gt; env&amp;iacute;a desde el DUT al host.</target>
        </trans-unit>
        <trans-unit id="6aab874b35584a0d5e82976158f12f70a498f241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htrun&lt;/code&gt; has extensive command line. In most cases &lt;code&gt;htrun&lt;/code&gt; (or its command line avatar &lt;code&gt;mbedhtrun&lt;/code&gt;) will be run in background:</source>
          <target state="translated">&lt;code&gt;htrun&lt;/code&gt; tiene una extensa l&amp;iacute;nea de comandos. En la mayor&amp;iacute;a de los casos, &lt;code&gt;htrun&lt;/code&gt; (o su avatar de l&amp;iacute;nea de comando &lt;code&gt;mbedhtrun&lt;/code&gt; ) se ejecutar&amp;aacute; en segundo plano:</target>
        </trans-unit>
        <trans-unit id="1bfd8fc28acb332ed6a8cb6f250ba9930873af0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htrun&lt;/code&gt; is redistributed with sources, as Python 2.7 compatible module called &lt;code&gt;mbed-host-tests&lt;/code&gt; and command line tool called &lt;code&gt;mbedhtrun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;htrun&lt;/code&gt; se redistribuye con fuentes, como m&amp;oacute;dulo compatible con Python 2.7 llamado &lt;code&gt;mbed-host-tests&lt;/code&gt; y herramienta de l&amp;iacute;nea de comando llamada &lt;code&gt;mbedhtrun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a09ab1183cd1a4455515d2dfa623110358964aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htrun&lt;/code&gt; new log format:</source>
          <target state="translated">&lt;code&gt;htrun&lt;/code&gt; nuevo formato de registro:</target>
        </trans-unit>
        <trans-unit id="146047f10bfe28e6ca1342363d40e58580f19413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; - logging level:</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; - nivel de registro:</target>
        </trans-unit>
        <trans-unit id="d230633f3997fb0cd8a87b415d32dfb4f5ec4ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbed-host-tests&lt;/code&gt; module is redistributed via PyPI. We recommend you use the &lt;a href=&quot;https://pip.pypa.io/en/latest/installing.html#install-pip&quot;&gt;application pip&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;mbed-host-tests&lt;/code&gt; m&amp;oacute;dulo mbed-host-tests se redistribuye a trav&amp;eacute;s de PyPI. Le recomendamos que utilice la &lt;a href=&quot;https://pip.pypa.io/en/latest/installing.html#install-pip&quot;&gt;aplicaci&amp;oacute;n pip&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab7b650f12a748dc308096fa0d77c6e039d3f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mbed-host-tests&lt;/code&gt; responsibilities are:</source>
          <target state="translated">&lt;code&gt;mbed-host-tests&lt;/code&gt; responsabilidades de mbed-host-tests son:</target>
        </trans-unit>
        <trans-unit id="41c86f566beb36c6b6b2c4d73651b3ec643725db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify_complete(result : bool)&lt;/code&gt; used by host test to notify test case result. This result will be read after test suite &lt;code&gt;TIMEOUT&lt;/code&gt;s or after DUT send &lt;code&gt;__exit&lt;/code&gt; message (test suite execution finished event).</source>
          <target state="translated">&lt;code&gt;notify_complete(result : bool)&lt;/code&gt; utilizado por la prueba del host para notificar el resultado del caso de prueba. Este resultado ser&amp;aacute; le&amp;iacute;do despu&amp;eacute;s de banco de pruebas &lt;code&gt;TIMEOUT&lt;/code&gt; s o despu&amp;eacute;s de enviar DUT &lt;code&gt;__exit&lt;/code&gt; mensaje (prueba de la ejecuci&amp;oacute;n de ba&amp;ntilde;o evento terminado).</target>
        </trans-unit>
        <trans-unit id="172d5caa7d56ca7f7d3a296400bb8c3531f32901" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result()&lt;/code&gt; used to return test case result when &lt;code&gt;notify_complete()&lt;/code&gt; is not called.</source>
          <target state="translated">&lt;code&gt;result()&lt;/code&gt; usado para devolver el resultado del caso de prueba cuando no se llama a &lt;code&gt;notify_complete()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="633f8b8babe06c499ac945176a533e88fe992987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.log(text : string)&lt;/code&gt; - send event &lt;code&gt;__notify_prn&lt;/code&gt; with text as payload (value). Your message will be printed in log.</source>
          <target state="translated">&lt;code&gt;self.log(text : string)&lt;/code&gt; : env&amp;iacute;a el evento &lt;code&gt;__notify_prn&lt;/code&gt; con texto como carga &amp;uacute;til (valor). Su mensaje se imprimir&amp;aacute; en el registro.</target>
        </trans-unit>
        <trans-unit id="528d177a7da06eb7a40d93df454c3d1b17ba45ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self.send_kv(key : string, value : string)&lt;/code&gt; - send key-value message to DUT.</source>
          <target state="translated">&lt;code&gt;self.send_kv(key : string, value : string)&lt;/code&gt; : env&amp;iacute;a un mensaje de valor-clave a DUT.</target>
        </trans-unit>
        <trans-unit id="3fa3134d5f4f9085110c25014db8a0a89b5f2f5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup()&lt;/code&gt; used to initialize host test and register callbacks.</source>
          <target state="translated">&lt;code&gt;setup()&lt;/code&gt; utilizado para inicializar la prueba del host y registrar devoluciones de llamada.</target>
        </trans-unit>
        <trans-unit id="3d3df85d101648df2a2e38a07d2767c6bede72a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; - log source.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; : fuente de registro.</target>
        </trans-unit>
        <trans-unit id="d8d216f69ea1a3eaa95ba6458b40f43c08f477d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;teardown()&lt;/code&gt; used to finalize and resource freeing. It is guaranteed that &lt;code&gt;teardown()&lt;/code&gt; will be always called after timeout or async test completion().</source>
          <target state="translated">&lt;code&gt;teardown()&lt;/code&gt; utilizado para finalizar y liberar recursos. Se garantiza que &lt;code&gt;teardown()&lt;/code&gt; siempre se llamar&amp;aacute; despu&amp;eacute;s del tiempo de espera o de la finalizaci&amp;oacute;n de la prueba as&amp;iacute;ncrona ().</target>
        </trans-unit>
        <trans-unit id="2d70bf3e0f99480aa5b2daca6cbfcc9765092684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt; - returned by Python's &lt;code&gt;time.time()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timestamp&lt;/code&gt; : devuelto por el &lt;code&gt;time.time()&lt;/code&gt; Python .</target>
        </trans-unit>
        <trans-unit id="c10001035cfba5804245ebe313f1c7cddd149675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utest&lt;/code&gt; harness allows you to define multiple test cases inside your test suite. This feature is supported by &lt;code&gt;Greentea&lt;/code&gt; test tools.</source>
          <target state="translated">&lt;code&gt;utest&lt;/code&gt; arn&amp;eacute;s utest le permite definir m&amp;uacute;ltiples casos de prueba dentro de su suite de pruebas. Esta funci&amp;oacute;n es compatible con las herramientas de prueba de &lt;code&gt;Greentea&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccf7d45fdb7a3ec8da001ef50e0b0789523e0ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{key;value}}&lt;/code&gt; string captured on DUT output.</source>
          <target state="translated">&lt;code&gt;{{key;value}}&lt;/code&gt; Cadena {{clave; valor}} capturada en la salida DUT.</target>
        </trans-unit>
        <trans-unit id="978812719c428d1362d193a491e176614ac1cf5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Blocking&lt;/strong&gt; wait for key-value pair message in input stream:</source>
          <target state="translated">&lt;strong&gt;Bloqueo de&lt;/strong&gt; espera para mensaje de par clave-valor en flujo de entrada:</target>
        </trans-unit>
        <trans-unit id="bf04b208a59aca6656cbaf500f2714b821fc5dea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Event exchange&lt;/strong&gt; - key-value event exchange between slave and master. In this exchange in general slave (DUT) will initialize communication. This part may end with ending pair of events &lt;code&gt;end&lt;/code&gt; and &lt;code&gt;__exit&lt;/code&gt; where &lt;code&gt;end&lt;/code&gt; event carries test suite result returned by DUT and &lt;code&gt;__exit&lt;/code&gt; event marks test suite ended and exited. After &lt;code&gt;__exit&lt;/code&gt; event is received there will be no more communication between DUT and host test.</source>
          <target state="translated">&lt;strong&gt;Intercambio de eventos: intercambio de eventos&lt;/strong&gt; de valor clave entre esclavo y maestro. En este intercambio, en general, el esclavo (DUT) inicializar&amp;aacute; la comunicaci&amp;oacute;n. Esta parte puede terminar con el par final de eventos &lt;code&gt;end&lt;/code&gt; y &lt;code&gt;__exit&lt;/code&gt; donde el evento &lt;code&gt;end&lt;/code&gt; lleva el resultado de la suite de prueba devuelto por DUT y &lt;code&gt;__exit&lt;/code&gt; marca de evento que la suite de prueba termin&amp;oacute; y sali&amp;oacute;. Despu&amp;eacute;s de &lt;code&gt;__exit&lt;/code&gt; evento __exit , no habr&amp;aacute; m&amp;aacute;s comunicaci&amp;oacute;n entre el DUT y la prueba del host.</target>
        </trans-unit>
        <trans-unit id="b82b304ec2e4d8ca5c5d2b85582fa51e84fcd23a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Handshake&lt;/strong&gt; - synchronize master and slave.</source>
          <target state="translated">&lt;strong&gt;Apret&amp;oacute;n de manos&lt;/strong&gt; : sincroniza maestro y esclavo.</target>
        </trans-unit>
        <trans-unit id="22001cf273403186960b9b8e3ec3f02a2b7da50d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Python 2.7.9 onwards include &lt;code&gt;pip&lt;/code&gt; by default, so you may have &lt;code&gt;pip&lt;/code&gt; already.
&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;mbed-host-tests&lt;/code&gt; module is redistributed with &lt;code&gt;mbed-greentea&lt;/code&gt; module as a dependency. So if you've already installed Greentea &lt;code&gt;mbed-host-tests&lt;/code&gt; should be there!</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; Python 2.7.9 en adelante incluye &lt;code&gt;pip&lt;/code&gt; de forma predeterminada, por lo que es posible que ya tenga &lt;code&gt;pip&lt;/code&gt; . &lt;strong&gt;Nota: el&lt;/strong&gt; m&amp;oacute;dulo &lt;code&gt;mbed-host-tests&lt;/code&gt; se redistribuye con el m&amp;oacute;dulo &lt;code&gt;mbed-greentea&lt;/code&gt; como dependencia. Entonces, si ya ha instalado Greentea, &lt;code&gt;mbed-host-tests&lt;/code&gt; deber&amp;iacute;a estar all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="7ba071ca9346f715811b90bbcf80176dafdd545a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Switch -m &amp;lt;platform_name&amp;gt; is required to tell Global Resource Management which platform to request.
&lt;strong&gt;Note&lt;/strong&gt;: Command line switch &lt;code&gt;--grm&lt;/code&gt; implicitly forces &lt;code&gt;--skip-flashing&lt;/code&gt; and &lt;code&gt;--skip-reset&lt;/code&gt; because both flags are used for locally available DUTs.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : Se requiere Switch -m &amp;lt;platform_name&amp;gt; para indicarle a Global Resource Management qu&amp;eacute; plataforma solicitar. &lt;strong&gt;Nota&lt;/strong&gt; : El cambio de l&amp;iacute;nea de comando &lt;code&gt;--grm&lt;/code&gt; fuerza impl&amp;iacute;citamente &lt;code&gt;--skip-flashing&lt;/code&gt; y &lt;code&gt;--skip-reset&lt;/code&gt; porque ambos indicadores se utilizan para los DUT disponibles localmente.</target>
        </trans-unit>
        <trans-unit id="2cdb8891adb6df7e3efff295d8bfc5578b693584" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Switch -m &amp;lt;platform_name&amp;gt; is required to tell this fastmodel connection which Fastmodel to request.
&lt;strong&gt;Note&lt;/strong&gt;: Command line switch &lt;code&gt;--fm&lt;/code&gt; implicitly forces &lt;code&gt;--skip-flashing&lt;/code&gt; and &lt;code&gt;--skip-reset&lt;/code&gt; because both flags are used for locally available DUTs.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : Se requiere Switch -m &amp;lt;platform_name&amp;gt; para indicarle a esta conexi&amp;oacute;n Fastmodel qu&amp;eacute; Fastmodel debe solicitar. &lt;strong&gt;Nota&lt;/strong&gt; : El cambio de l&amp;iacute;nea de comando &lt;code&gt;--fm&lt;/code&gt; fuerza impl&amp;iacute;citamente &lt;code&gt;--skip-flashing&lt;/code&gt; y &lt;code&gt;--skip-reset&lt;/code&gt; porque ambos indicadores se utilizan para los DUT disponibles localmente.</target>
        </trans-unit>
        <trans-unit id="4a7ab915a793ffe6e1b42c4b1d8fcdeea993e9cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Sync packet management allows you to manipulate the way &lt;code&gt;htrun&lt;/code&gt; sends &lt;code&gt;__sync&lt;/code&gt; packet(s) to DUT. With current settings we can force on &lt;code&gt;htrun&lt;/code&gt; to send &lt;code&gt;__sync&lt;/code&gt; packets in this manner:</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : La administraci&amp;oacute;n de paquetes de sincronizaci&amp;oacute;n le permite manipular la forma en que &lt;code&gt;htrun&lt;/code&gt; env&amp;iacute;a paquetes &lt;code&gt;__sync&lt;/code&gt; a DUT. Con la configuraci&amp;oacute;n actual, podemos forzar a &lt;code&gt;htrun&lt;/code&gt; a enviar paquetes &lt;code&gt;__sync&lt;/code&gt; de esta manera:</target>
        </trans-unit>
        <trans-unit id="8770be929839dfce9cf2e64ddb9e81c172f276ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Preamble exchange&lt;/strong&gt; - DUT informs host about test parameters such as client version, test suite timeout, requested host test name etc. After this part is finished master will create requested host test and attach callbacks to user events.</source>
          <target state="translated">&lt;strong&gt;Intercambio de pre&amp;aacute;mbulos&lt;/strong&gt; : el DUT informa al host sobre los par&amp;aacute;metros de prueba, como la versi&amp;oacute;n del cliente, el tiempo de espera de la suite de pruebas, el nombre de prueba del host solicitado, etc. Una vez finalizada esta parte, el maestro crear&amp;aacute; la prueba del host solicitada y adjuntar&amp;aacute; devoluciones de llamada a los eventos del usuario.</target>
        </trans-unit>
        <trans-unit id="0e4a452d838b4f1866c3fe0046ee2cbef818254f" translate="yes" xml:space="preserve">
          <source>A tested comparison log can be checked into GitHub with the examples and can be used in the CI for example verification.</source>
          <target state="translated">Un registro de comparación probado puede ser comprobado en el GitHub con los ejemplos y puede ser usado en el CI por ejemplo la verificación.</target>
        </trans-unit>
        <trans-unit id="48748b3b742385e6f8c0cd5908e2bbe354c77054" translate="yes" xml:space="preserve">
          <source>After DUT send &lt;code&gt;__exit&lt;/code&gt; or after timeout it is guaranteed that host test &lt;code&gt;teardown()&lt;/code&gt; function will be called. This call is blocking, please make sure your tear down function finishes.</source>
          <target state="translated">Despu&amp;eacute;s de que el DUT env&amp;iacute;e &lt;code&gt;__exit&lt;/code&gt; o despu&amp;eacute;s del tiempo de espera, se garantiza que se llamar&amp;aacute; a la funci&amp;oacute;n de prueba de host &lt;code&gt;teardown()&lt;/code&gt; . Esta llamada se est&amp;aacute; bloqueando, aseg&amp;uacute;rese de que finalice la funci&amp;oacute;n de desmontaje.</target>
        </trans-unit>
        <trans-unit id="09a3f6d7805c4c87b061eaf31eb5e2b3ebcd5a35" translate="yes" xml:space="preserve">
          <source>After correct sync packet is received by master, messages &lt;code&gt;{{__timeout;%d}}&lt;/code&gt; and &lt;code&gt;{{__host_test_name}}&lt;/code&gt; are expected.</source>
          <target state="translated">Una vez que el maestro recibe el paquete de sincronizaci&amp;oacute;n correcto, se &lt;code&gt;{{__timeout;%d}}&lt;/code&gt; mensajes {{__timeout;% d}} y &lt;code&gt;{{__host_test_name}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a7e401b4be215749d83fbcba3e4ec8209beb67b" translate="yes" xml:space="preserve">
          <source>After reset:</source>
          <target state="translated">Después del restablecimiento:</target>
        </trans-unit>
        <trans-unit id="779eaffcf0df94cb11b0b9a188528d63ebf25484" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;mbedhtrun&lt;/code&gt; needs is name of the binary you want to flash and method of flashing!</source>
          <target state="translated">&amp;iexcl;Todo &lt;code&gt;mbedhtrun&lt;/code&gt; necesita mbedhtrun es el nombre del binario que desea flashear y el m&amp;eacute;todo de flasheo!</target>
        </trans-unit>
        <trans-unit id="868aecef2b53c70e54e997a0929720538a3233ce" translate="yes" xml:space="preserve">
          <source>Another example with regular examples is shown below:</source>
          <target state="translated">A continuación se muestra otro ejemplo con ejemplos habituales:</target>
        </trans-unit>
        <trans-unit id="c48ebfecb37de922cbe7a5c790047668217efb8a" translate="yes" xml:space="preserve">
          <source>As above but we will skip reset phase (non so common but in some cases can be used to suppress reset phase for some reasons):</source>
          <target state="translated">Como arriba,pero nos saltaremos la fase de reinicio (no tan común,pero en algunos casos se puede utilizar para suprimir la fase de reinicio por algunas razones):</target>
        </trans-unit>
        <trans-unit id="7a912fdada8ea0517f6988957ab102d6e5d42000" translate="yes" xml:space="preserve">
          <source>Before Greentea v0.2.0</source>
          <target state="translated">Antes de Greentea v0.2.0</target>
        </trans-unit>
        <trans-unit id="883579fd087386dfd3f74e50aa8cf2893424d97a" translate="yes" xml:space="preserve">
          <source>Below the same callback registered using decorator:</source>
          <target state="translated">Debajo de la misma llamada registrada con el decorador:</target>
        </trans-unit>
        <trans-unit id="54f3a582e0e46c1fdbde56c6d9b5c912b1062595" translate="yes" xml:space="preserve">
          <source>Callback decorator definition</source>
          <target state="translated">Definición de decorador de devolución de llamada</target>
        </trans-unit>
        <trans-unit id="61aea957495b12cf35ed6fa4692f689a4b6830cf" translate="yes" xml:space="preserve">
          <source>Callback registration in setup() method</source>
          <target state="translated">Registro de llamadas en el método setup()</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Devoluciones de llamada</target>
        </trans-unit>
        <trans-unit id="0919f1c08841ab59f4010ca0c08be7d21b733553" translate="yes" xml:space="preserve">
          <source>Change the directory to the &lt;code&gt;mbed-os-tools/packages/mbed-host-tests&lt;/code&gt; directory:</source>
          <target state="translated">Cambie el directorio al directorio &lt;code&gt;mbed-os-tools/packages/mbed-host-tests&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7741c1b49d16cff50f9f11d5390e73dce207ea10" translate="yes" xml:space="preserve">
          <source>Checking installation</source>
          <target state="translated">Comprobando la instalación</target>
        </trans-unit>
        <trans-unit id="8f421d7903d21e7af2e8365c67e68dcf4c7e23b4" translate="yes" xml:space="preserve">
          <source>Command line overview</source>
          <target state="translated">Resumen de la línea de mando</target>
        </trans-unit>
        <trans-unit id="1e1918c7b0e450f50460cc106d52c81934e94310" translate="yes" xml:space="preserve">
          <source>Command line switch &lt;code&gt;--grm&lt;/code&gt; has format: &lt;code&gt;&amp;lt;module_name&amp;gt;:&amp;lt;IP_address&amp;gt;:&amp;lt;port_number&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;--grm&lt;/code&gt; l&amp;iacute;nea de comando --grm tiene el formato: &lt;code&gt;&amp;lt;module_name&amp;gt;:&amp;lt;IP_address&amp;gt;:&amp;lt;port_number&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56daa4f6991ad23ee3ad9337bba1c4b9e7dae685" translate="yes" xml:space="preserve">
          <source>Command line switch format &lt;code&gt;--fm &amp;lt;config_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Formato de cambio de l&amp;iacute;nea de comando &lt;code&gt;--fm &amp;lt;config_name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ff2cd088270334c8a2f99dfc624bcd332a50384" translate="yes" xml:space="preserve">
          <source>Corresponding log:</source>
          <target state="translated">Bitácora correspondiente:</target>
        </trans-unit>
        <trans-unit id="d895d5e7e230d89bd4cfe4224c65b0d27e50070e" translate="yes" xml:space="preserve">
          <source>DUT - host test case workflow</source>
          <target state="translated">DUT-flujo de trabajo del caso de prueba del anfitrión</target>
        </trans-unit>
        <trans-unit id="626c3ee860fb240f7628dd4674a59b588bf8f8b4" translate="yes" xml:space="preserve">
          <source>DUT always (except for handshake phase) initializes communication by sending key-value message to host.</source>
          <target state="translated">El DUT siempre (excepto en la fase de apretón de manos)inicializa la comunicación enviando un mensaje clave-valor al host.</target>
        </trans-unit>
        <trans-unit id="2c6516f3287de370bb466acaf1a844e15e278271" translate="yes" xml:space="preserve">
          <source>DUT always finishes execution</source>
          <target state="translated">El DUT siempre termina la ejecución</target>
        </trans-unit>
        <trans-unit id="095e4a38df5cb9fd44a60b3fb755fc995fb05b85" translate="yes" xml:space="preserve">
          <source>DUT calls function &lt;code&gt;GREENTEA_SETUP(timeout, &quot;host test name&quot;);&lt;/code&gt; which</source>
          <target state="translated">DUT llama a la funci&amp;oacute;n &lt;code&gt;GREENTEA_SETUP(timeout, &quot;host test name&quot;);&lt;/code&gt; cuales</target>
        </trans-unit>
        <trans-unit id="165c9ff6d3335894ae3b4f0accf0b86e9682904e" translate="yes" xml:space="preserve">
          <source>DUT code:</source>
          <target state="translated">Código DUT:</target>
        </trans-unit>
        <trans-unit id="b921767324737366f2552e20da90f6fc8abb1ea2" translate="yes" xml:space="preserve">
          <source>DUT implementation</source>
          <target state="translated">Aplicación del DUT</target>
        </trans-unit>
        <trans-unit id="9c597a19b077deb109c00589b1390f002b08e65d" translate="yes" xml:space="preserve">
          <source>DUT implementation using &lt;code&gt;my_host_test&lt;/code&gt; custom host test:</source>
          <target state="translated">Implementaci&amp;oacute;n de DUT usando la prueba de host personalizada &lt;code&gt;my_host_test&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7b4a20d2bc2fb30dc4fc0306d08e9b81fe1471f2" translate="yes" xml:space="preserve">
          <source>DUT implementation:</source>
          <target state="translated">Implementación del DUT:</target>
        </trans-unit>
        <trans-unit id="6a2cce350afb4935c3fdced46913ecb2c36b6dff" translate="yes" xml:space="preserve">
          <source>DUT side uses second argument of &lt;code&gt;GREENTEA_SETUP(timeout, host_test_name)&lt;/code&gt; function:</source>
          <target state="translated">El lado DUT usa el segundo argumento de la funci&amp;oacute;n &lt;code&gt;GREENTEA_SETUP(timeout, host_test_name)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="14c69c2b7257c38eb710e9d086b6f9d2b90ab384" translate="yes" xml:space="preserve">
          <source>DUT slave side uses simple parser to parse key-value pairs from stream. All non key-value data will be ignored. Blocking wait for an event API is provided: This implies usage of master-slave exchange between DUT and host where DUT uses non-blocking send event API to send to host (master) event and can wait for response. Master implements corresponding response after receiving event and processing data.</source>
          <target state="translated">El lado esclavo del DUT usa un simple analizador para analizar los pares clave-valor de la corriente.Todos los datos no clave-valor serán ignorados.Se proporciona una API de bloqueo de espera para un evento:Esto implica el uso del intercambio maestro-esclavo entre el DUT y el host,donde el DUT utiliza una API de eventos de envío no bloqueante para enviar al host (maestro)un evento y puede esperar una respuesta.El maestro implementa la respuesta correspondiente después de recibir el evento y procesar los datos.</target>
        </trans-unit>
        <trans-unit id="1997bc510fdd148c5460b1f9a4c03afbb22db4b3" translate="yes" xml:space="preserve">
          <source>DUT test API was first introduced in &lt;code&gt;mbedmicro/mbed&lt;/code&gt; project &lt;a href=&quot;https://github.com/mbedmicro/mbed/tree/master/libraries/tests/mbed/env&quot;&gt;here&lt;/a&gt;. After refactoring this functionality was copied and improved in &lt;a href=&quot;https://github.com/ARMmbed/mbed-os/tree/master/features/frameworks/greentea-client&quot;&gt;greentea-client&lt;/a&gt; module.</source>
          <target state="translated">La API de prueba DUT se introdujo por primera vez en el proyecto &lt;code&gt;mbedmicro/mbed&lt;/code&gt; &lt;a href=&quot;https://github.com/mbedmicro/mbed/tree/master/libraries/tests/mbed/env&quot;&gt;aqu&amp;iacute;&lt;/a&gt; . Despu&amp;eacute;s de la refactorizaci&amp;oacute;n, esta funcionalidad se copi&amp;oacute; y mejor&amp;oacute; en el m&amp;oacute;dulo &lt;a href=&quot;https://github.com/ARMmbed/mbed-os/tree/master/features/frameworks/greentea-client&quot;&gt;greentea-client&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd14348a79f6dd2dc4ed92b00adfffbe3313dca" translate="yes" xml:space="preserve">
          <source>DUT test suite never finishes execution</source>
          <target state="translated">El conjunto de pruebas del DUT nunca termina de ejecutarse</target>
        </trans-unit>
        <trans-unit id="aebd9413076d65c89e207689ac7673ccdbe3fce1" translate="yes" xml:space="preserve">
          <source>DUT test suite with &lt;code&gt;utest&lt;/code&gt; harness</source>
          <target state="translated">Conjunto de pruebas DUT con arn&amp;eacute;s &lt;code&gt;utest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9a257b89d70fac4953d77b392223a7141b06c89" translate="yes" xml:space="preserve">
          <source>DUT test suite with single test case</source>
          <target state="translated">Conjunto de pruebas DUT con un solo caso de prueba</target>
        </trans-unit>
        <trans-unit id="736a527bb1c06de722602489784f5dff79e01f9d" translate="yes" xml:space="preserve">
          <source>DUT waits for &lt;code&gt;{{__sync;...}}&lt;/code&gt; message in input stream and replies with the same packer &lt;code&gt;{{__sync;...}}&lt;/code&gt;.</source>
          <target state="translated">DUT espera el mensaje &lt;code&gt;{{__sync;...}}&lt;/code&gt; en el flujo de entrada y responde con el mismo empaquetador &lt;code&gt;{{__sync;...}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="647d603597976a170b993ee2698c02e93538fd86" translate="yes" xml:space="preserve">
          <source>DUT will send to host preamble with test runner information such as:</source>
          <target state="translated">La DUT enviará al anfitrión el preámbulo con la información del corredor de prueba como:</target>
        </trans-unit>
        <trans-unit id="07c83fa7e049f4fd805d5b8928beb027731de9b8" translate="yes" xml:space="preserve">
          <source>DUT-host communication and reset phase</source>
          <target state="translated">Comunicación entre el DUT y el anfitrión y fase de reinicio</target>
        </trans-unit>
        <trans-unit id="709809b3955dfa71a2918ff271debe54e9883a64" translate="yes" xml:space="preserve">
          <source>Default DUT reset method is one supported by &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;mbed-enabled&lt;/a&gt; devices: serial port (CDC) &quot;&lt;em&gt;sendBreak&lt;/em&gt;&quot; command resets target MCU on mbed-enabled platform.</source>
          <target state="translated">El m&amp;eacute;todo de restablecimiento del DUT predeterminado es el que admiten los dispositivos &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;habilitados&lt;/a&gt; para mbed : el comando &quot; &lt;em&gt;sendBreak&lt;/em&gt; &quot; del puerto serie (CDC) restablece la MCU de destino en una plataforma habilitada para mbed.</target>
        </trans-unit>
        <trans-unit id="bc2cd630546bc1cb92afe393e71240db008e5337" translate="yes" xml:space="preserve">
          <source>Default binary flashing method is one supported by &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;mbed-enabled&lt;/a&gt; devices: binary file is copied on mbed-enabled DUT (Device Under Test) mounted drive (MSD). This procedure will automatically flash device with given binary file content.</source>
          <target state="translated">El m&amp;eacute;todo de flasheo binario predeterminado es el que admiten los dispositivos &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;habilitados&lt;/a&gt; para mbed : el archivo binario se copia en una unidad montada en DUT (dispositivo bajo prueba) habilitada para mbed (MSD). Este procedimiento actualizar&amp;aacute; autom&amp;aacute;ticamente el dispositivo con un contenido de archivo binario determinado.</target>
        </trans-unit>
        <trans-unit id="44d55f06d963a9ca25fae9517787bf49edec5269" translate="yes" xml:space="preserve">
          <source>Design draft</source>
          <target state="translated">Borrador de diseño</target>
        </trans-unit>
        <trans-unit id="a8c5a3b94826af621da5a375d345ece1f610fcc9" translate="yes" xml:space="preserve">
          <source>Development moved</source>
          <target state="translated">El desarrollo se movió</target>
        </trans-unit>
        <trans-unit id="9df9a8179b1a565208b4dd6239287e040d9d8d11" translate="yes" xml:space="preserve">
          <source>Do not forget to name host test accordingly. See below example host test &lt;code&gt;name&lt;/code&gt; class member.</source>
          <target state="translated">No olvide nombrar la prueba de host en consecuencia. Consulte el siguiente ejemplo de miembro de clase de &lt;code&gt;name&lt;/code&gt; prueba de host .</target>
        </trans-unit>
        <trans-unit id="3f7497a8dfedacd212c2996862b7d6fcb884d29e" translate="yes" xml:space="preserve">
          <source>Each event is a tuple of &lt;code&gt;(key, value, timestamp)&lt;/code&gt;, where key and value are extracted from message and</source>
          <target state="translated">Cada evento es una tupla de &lt;code&gt;(key, value, timestamp)&lt;/code&gt; , donde la clave y el valor se extraen del mensaje y</target>
        </trans-unit>
        <trans-unit id="86254eea7d60c4ae1201fb3716651deb450e3119" translate="yes" xml:space="preserve">
          <source>Each host test (master side) has four functions used by async framework:</source>
          <target state="translated">Cada prueba de anfitrión (lado maestro)tiene cuatro funciones utilizadas por el marco de async:</target>
        </trans-unit>
        <trans-unit id="3065e92116c10e024814d96a6883bff0ea8755a1" translate="yes" xml:space="preserve">
          <source>Each host test registers callbacks for available events.</source>
          <target state="translated">Cada anfitrión de la prueba registra las llamadas para los eventos disponibles.</target>
        </trans-unit>
        <trans-unit id="39ed4ebaf961ae0c8f1b791ecd147e37c0384649" translate="yes" xml:space="preserve">
          <source>Event exchange</source>
          <target state="translated">Intercambio de eventos</target>
        </trans-unit>
        <trans-unit id="bb60c70e550b193a26e657cf530450eafa23a645" translate="yes" xml:space="preserve">
          <source>Event is formed in host test, a tuple of &lt;code&gt;key&lt;/code&gt; (string), &lt;code&gt;value&lt;/code&gt; (string), &lt;code&gt;timestamp&lt;/code&gt; where &lt;code&gt;timestamp&lt;/code&gt; is time of message reception in Python &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.time&quot;&gt;time.time()&lt;/a&gt; format (float, time in seconds since the epoch as a floating point number.).</source>
          <target state="translated">El evento se forma en la prueba de host, una tupla de &lt;code&gt;key&lt;/code&gt; (cadena), &lt;code&gt;value&lt;/code&gt; (cadena), &lt;code&gt;timestamp&lt;/code&gt; donde la &lt;code&gt;timestamp&lt;/code&gt; tiempo es la hora de recepci&amp;oacute;n del mensaje en &lt;a href=&quot;https://docs.python.org/2/library/time.html#time.time&quot;&gt;formato&lt;/a&gt; Python time.time () (flotante, tiempo en segundos desde la &amp;eacute;poca como un n&amp;uacute;mero de punto flotante .).</target>
        </trans-unit>
        <trans-unit id="18ccebe3f5dfea294643a10c4d680a7e353c7bef" translate="yes" xml:space="preserve">
          <source>Example host test template:</source>
          <target state="translated">Ejemplo de plantilla de prueba de host:</target>
        </trans-unit>
        <trans-unit id="720866581bbfe73b668502026de8c5cdfa711f10" translate="yes" xml:space="preserve">
          <source>Example of corresponding host test</source>
          <target state="translated">Ejemplo de la prueba del huésped correspondiente</target>
        </trans-unit>
        <trans-unit id="ea76c8a1d8a41f033db77eace0fd6e4212decee5" translate="yes" xml:space="preserve">
          <source>Example of handshake from &lt;code&gt;htrun&lt;/code&gt; log:</source>
          <target state="translated">Ejemplo de apret&amp;oacute;n de manos del registro &lt;code&gt;htrun&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2fda2299de8a0cdd18062acac9fba1e569417400" translate="yes" xml:space="preserve">
          <source>Example of host test expecting &lt;code&gt;Runtime error ... CallbackNode ...&lt;/code&gt; string in DUT output.
We will use allowed to override &lt;code&gt;__rxd_line&lt;/code&gt; event to hook to DUT RXD channel lines of text.</source>
          <target state="translated">Ejemplo de prueba de host que espera un &lt;code&gt;Runtime error ... CallbackNode ...&lt;/code&gt; cadena en la salida del DUT. Usaremos permitido para anular el evento &lt;code&gt;__rxd_line&lt;/code&gt; para conectar las l&amp;iacute;neas de texto del canal DUT RXD.</target>
        </trans-unit>
        <trans-unit id="eaaf6b7d8c3502c17a6dc3cf142c18776b31898a" translate="yes" xml:space="preserve">
          <source>Exchange data (in most cases text) between host and DUT,</source>
          <target state="translated">Intercambiar datos (en la mayoría de los casos de texto)entre el anfitrión y el DUT,</target>
        </trans-unit>
        <trans-unit id="f33ba3019954aafa1feb8235b68f034789a412bb" translate="yes" xml:space="preserve">
          <source>Fast Model connection</source>
          <target state="translated">Conexión rápida del modelo</target>
        </trans-unit>
        <trans-unit id="a0d877bb17464347f7e476238777723873ceebb8" translate="yes" xml:space="preserve">
          <source>Few keys' names in key-value messaging protocol are promoted to be considered &quot;system events&quot;. Their names are used by event loop mechanism to communicate between DUT, host and various internal components. Please do not use restricted even names for your own private events. What's more:</source>
          <target state="translated">Pocos nombres de claves en el protocolo de mensajería de valor clave se promueven para ser considerados &quot;eventos del sistema&quot;.Sus nombres son utilizados por el mecanismo de bucle de eventos para comunicarse entre el DUT,el host y varios componentes internos.Por favor,no utilice nombres restringidos incluso para sus propios eventos privados.Es más:</target>
        </trans-unit>
        <trans-unit id="158f43262acd06e7642b29309e126923316f2ecd" translate="yes" xml:space="preserve">
          <source>Flash (use shell command &lt;code&gt;copy&lt;/code&gt;) binary file &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; using mount point &lt;code&gt;D:&lt;/code&gt;. Use serial port &lt;code&gt;COM4&lt;/code&gt; to communicate with DUT:</source>
          <target state="translated">Flash (uso int&amp;eacute;rprete de comandos &lt;code&gt;copy&lt;/code&gt; ) de archivos binarios &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; utilizando el punto de montaje &lt;code&gt;D:&lt;/code&gt; . Utilice el puerto serie &lt;code&gt;COM4&lt;/code&gt; para comunicarse con DUT:</target>
        </trans-unit>
        <trans-unit id="b79e8d9072014d2c3b21cd78069437deec0df9b9" translate="yes" xml:space="preserve">
          <source>Flash binary file &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; using mount point &lt;code&gt;D:&lt;/code&gt;. Use serial port &lt;code&gt;COM4&lt;/code&gt; to communicate with DUT:</source>
          <target state="translated">Parpadear archivo binario &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; utilizando el punto de montaje &lt;code&gt;D:&lt;/code&gt; . Utilice el puerto serie &lt;code&gt;COM4&lt;/code&gt; para comunicarse con DUT:</target>
        </trans-unit>
        <trans-unit id="0bb415010bae6adec9b342b99c1fe6276f7c8c46" translate="yes" xml:space="preserve">
          <source>Flash binary file &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; using mount point &lt;code&gt;D:&lt;/code&gt;. Use serial port &lt;code&gt;COM4&lt;/code&gt; with baudrate &lt;code&gt;115200&lt;/code&gt; to communicate with DUT:</source>
          <target state="translated">Parpadear archivo binario &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; utilizando el punto de montaje &lt;code&gt;D:&lt;/code&gt; . Utilice el puerto serie &lt;code&gt;COM4&lt;/code&gt; con velocidad en baudios &lt;code&gt;115200&lt;/code&gt; para comunicarse con DUT:</target>
        </trans-unit>
        <trans-unit id="7aa54b0e3eb90e603779697ab7f217dff3331191" translate="yes" xml:space="preserve">
          <source>Flash binary file &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; using mount point &lt;code&gt;D:&lt;/code&gt;. Use serial port &lt;code&gt;COM4&lt;/code&gt; with default baudrate to communicate with DUT. Do not send &lt;code&gt;__sync&lt;/code&gt; key-value protocol synchronization packet to DUT before preamble read:</source>
          <target state="translated">Parpadear archivo binario &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; utilizando el punto de montaje &lt;code&gt;D:&lt;/code&gt; . Utilice el puerto serie &lt;code&gt;COM4&lt;/code&gt; con la velocidad en baudios predeterminada para comunicarse con DUT. No env&amp;iacute;e el paquete de sincronizaci&amp;oacute;n del protocolo de valor-clave &lt;code&gt;__sync&lt;/code&gt; al DUT antes de leer el pre&amp;aacute;mbulo:</target>
        </trans-unit>
        <trans-unit id="334ce270911437bb87db7f7e500dc3562bbd2dcb" translate="yes" xml:space="preserve">
          <source>Flash binary file &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; using plugin &lt;code&gt;stlink&lt;/code&gt;. Use serial port &lt;code&gt;COM4&lt;/code&gt; with baudrate &lt;code&gt;115200&lt;/code&gt; to communicate with DUT:</source>
          <target state="translated">Flash archivo binario &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; usando el complemento &lt;code&gt;stlink&lt;/code&gt; . Utilice el puerto serie &lt;code&gt;COM4&lt;/code&gt; con velocidad en baudios &lt;code&gt;115200&lt;/code&gt; para comunicarse con DUT:</target>
        </trans-unit>
        <trans-unit id="aaa6043ae95f9a67b22b9f51a18f7faa10482294" translate="yes" xml:space="preserve">
          <source>Flash local file &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; to remote device resource (platform &lt;code&gt;K64F&lt;/code&gt;) provided by &lt;code&gt;remote_client&lt;/code&gt; GRM service available on IP address &lt;code&gt;10.2.203.31&lt;/code&gt; and port: &lt;code&gt;8000&lt;/code&gt;. Force serial port connection to remote device &lt;code&gt;9600&lt;/code&gt; with baudrate:</source>
          <target state="translated">&lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; archivo local /path/to/file/binary.bin al recurso del dispositivo remoto (plataforma &lt;code&gt;K64F&lt;/code&gt; ) proporcionado por el servicio GRM &lt;code&gt;remote_client&lt;/code&gt; disponible en la direcci&amp;oacute;n IP &lt;code&gt;10.2.203.31&lt;/code&gt; y el puerto: &lt;code&gt;8000&lt;/code&gt; . Forzar la conexi&amp;oacute;n del puerto serie al dispositivo remoto &lt;code&gt;9600&lt;/code&gt; con velocidad en baudios:</target>
        </trans-unit>
        <trans-unit id="2571f99f1680e5391cd93011b0082d4efb07cbd5" translate="yes" xml:space="preserve">
          <source>Flash mbed device with given binary.</source>
          <target state="translated">Dispositivo de Flash mbed con un binario dado.</target>
        </trans-unit>
        <trans-unit id="6761cf8a57f5841e04096627ea88d5887f48e0fc" translate="yes" xml:space="preserve">
          <source>Flashing phase operations</source>
          <target state="translated">Operaciones de la fase de destello</target>
        </trans-unit>
        <trans-unit id="8a866d6c2d02f0bc023dc62569a6c17af0376992" translate="yes" xml:space="preserve">
          <source>For example if you hardcode in your host test UDP port 32123 and use it for UDP server implementation  of your host test bear in mind that this port may be already used. It is your responsibility to react for this event and implement means to overcome it (if possible).</source>
          <target state="translated">Por ejemplo,si codifica en su host de prueba el puerto UDP 32123 y lo utiliza para la implementación del servidor UDP de su host de prueba,tenga en cuenta que este puerto puede estar ya utilizado.Es su responsabilidad reaccionar ante este evento e implementar los medios para superarlo (si es posible).</target>
        </trans-unit>
        <trans-unit id="7c1aff202f7d8bcea4fa64405f0aca7af6efda87" translate="yes" xml:space="preserve">
          <source>Functions are used to send key-string or key-integer value messages to master. This functions should replace typical &lt;code&gt;printf()&lt;/code&gt; calls with payload/control data to host.</source>
          <target state="translated">Las funciones se utilizan para enviar mensajes de clave-cadena o clave-valor entero al maestro. Estas funciones deber&amp;iacute;an reemplazar las t&amp;iacute;picas llamadas &lt;code&gt;printf()&lt;/code&gt; con datos de carga / control al host.</target>
        </trans-unit>
        <trans-unit id="af3ec244dc723a701ac058afc63d124fbfd72829" translate="yes" xml:space="preserve">
          <source>Global Resource Manager connection</source>
          <target state="translated">Conexión con el Gestor de Recursos Globales</target>
        </trans-unit>
        <trans-unit id="a0be22585fd735b25c7d089d58ba0169fc6da82f" translate="yes" xml:space="preserve">
          <source>Greentea client API</source>
          <target state="translated">API del cliente Greentea</target>
        </trans-unit>
        <trans-unit id="76ccff916d0696e0db6e0e63211aa5d404b177bb" translate="yes" xml:space="preserve">
          <source>Handshake</source>
          <target state="translated">Apretón de manos</target>
        </trans-unit>
        <trans-unit id="afe7a417d745ef7f8ce3a908ad2af663ae59dca3" translate="yes" xml:space="preserve">
          <source>Hanshake between DUT and host is a sequence of &lt;code&gt;__sync&lt;/code&gt; events send between host (master) and DUT (slave). This is currently only situation when master initiates communication first. Handshake should provide synchronization point where master and slave are starting the same session.</source>
          <target state="translated">Hanshake entre el DUT y el host es una secuencia de &lt;code&gt;__sync&lt;/code&gt; eventos enviados entre el host (maestro) y el DUT (esclavo). Actualmente, esta es la &amp;uacute;nica situaci&amp;oacute;n en la que el maestro inicia la comunicaci&amp;oacute;n primero. El protocolo de enlace debe proporcionar un punto de sincronizaci&amp;oacute;n en el que el maestro y el esclavo inicien la misma sesi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c462c6142be867f0a9f93d039025a1e9848ee526" translate="yes" xml:space="preserve">
          <source>Hence the strategy for testing examples is based on observation instead of interaction. An example's serial logging is captured and converted into a templated log. All successive executions of this example should match this log.</source>
          <target state="translated">Por lo tanto,la estrategia para probar los ejemplos se basa en la observación en lugar de la interacción.El registro serial de un ejemplo es capturado y convertido en un registro de plantilla.Todas las ejecuciones sucesivas de este ejemplo deben coincidir con este registro.</target>
        </trans-unit>
        <trans-unit id="81a50f092a9c1baca81536bee0ce39b6ef1ca7c0" translate="yes" xml:space="preserve">
          <source>Host parses DUTs tx stream and generates events sent to host test.</source>
          <target state="translated">El anfitrión analiza el flujo de DUT y genera eventos enviados a la prueba del anfitrión.</target>
        </trans-unit>
        <trans-unit id="739d7ff56b572bddde7bca4b888be4430164af90" translate="yes" xml:space="preserve">
          <source>Host state machine loads callbacks registered by user in host test setup phase and hooks them to event machine.
Now host is ready to handle test suite test execution. From this moment each event sent from DUT will be handled by corresponding callback registered by user in host test setup. Unknown events will not be handled and warning will be printed in log.</source>
          <target state="translated">La máquina del estado anfitrión carga las llamadas registradas por el usuario en la fase de configuración de la prueba del anfitrión y las engancha a la máquina de eventos.Ahora el anfitrión está listo para manejar la ejecución de las pruebas del conjunto de pruebas.A partir de este momento,cada evento enviado desde el DUT se gestionará mediante las correspondientes devoluciones de llamada registradas por el usuario en la configuración de la prueba del host.Los eventos desconocidos no se manejarán y las advertencias se imprimirán en el registro.</target>
        </trans-unit>
        <trans-unit id="3bf2563e8f05e77491179793ef8db96c86834d6c" translate="yes" xml:space="preserve">
          <source>Host state machine loads host test object by name provided in payload of &lt;code&gt;__host_test_name&lt;/code&gt; event.E.g. event ```{{____host_test_name;default_auto}} will load host test named &quot;&lt;em&gt;default_auto&lt;/em&gt;&quot;.</source>
          <target state="translated">La m&amp;aacute;quina de estado del host carga el objeto de prueba del host por el nombre proporcionado en la carga &amp;uacute;til del evento &lt;code&gt;__host_test_name&lt;/code&gt; event.Eg event `` `{{____ host_test_name; default_auto}} cargar&amp;aacute; la prueba del host denominada&quot; &lt;em&gt;default_auto&lt;/em&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="256e466598015d9893e7d37134c90ab1322dee71" translate="yes" xml:space="preserve">
          <source>Host test examples</source>
          <target state="translated">Ejemplos de prueba del anfitrión</target>
        </trans-unit>
        <trans-unit id="7aa340f16d0f3e4b0a727d2aeb24e1d71f83a1d2" translate="yes" xml:space="preserve">
          <source>Host tests are now driven by simple async feature. Event state machine on master side is used to process events from DUT. Each host test is capable of registering callbacks, functions which will be executed when event occur. Event name is identical with KEY in key-value pair send as event from/to DUT.</source>
          <target state="translated">Las pruebas de los huéspedes ahora se realizan con una simple función de sincronización.La máquina de estado de eventos del lado del maestro se usa para procesar eventos del DUT.Cada prueba del host es capaz de registrar las llamadas de retorno,funciones que se ejecutarán cuando el evento ocurra.El nombre del evento es idéntico a KEY en el par llave-valor enviado como evento desde/hacia el DUT.</target>
        </trans-unit>
        <trans-unit id="f34c65d375ef807a0d1053054afcca89454eb733" translate="yes" xml:space="preserve">
          <source>Host will spawn host test script and test execution will be instrumented</source>
          <target state="translated">El anfitrión generará el guión de la prueba y la ejecución de la prueba será instrumentada</target>
        </trans-unit>
        <trans-unit id="9c5759b3a29a12c887dbdea960cf8e8e034f43a0" translate="yes" xml:space="preserve">
          <source>Htrun (mbed-host-tests)</source>
          <target state="translated">Htrun (mbed-pruebas de acogida)</target>
        </trans-unit>
        <trans-unit id="f9ca9c8e689a1271ff659bece18781ba5d93d16f" translate="yes" xml:space="preserve">
          <source>In case an application requires more time to process data and generate results, you can use the option &lt;code&gt;--polling-timeout&lt;/code&gt; to override the default timeout setting.</source>
          <target state="translated">En caso de que una aplicaci&amp;oacute;n requiera m&amp;aacute;s tiempo para procesar datos y generar resultados, puede usar la opci&amp;oacute;n &lt;code&gt;--polling-timeout&lt;/code&gt; para anular la configuraci&amp;oacute;n de tiempo de espera predeterminada.</target>
        </trans-unit>
        <trans-unit id="49317310382ddf66dd0c5d0f51b7b63b474cc3af" translate="yes" xml:space="preserve">
          <source>In order to work with platforms for which the hardware is still under development, and hence may not have an mbed interface chip, some &quot;hook&quot; files are required.  Operation with these platforms is a matter for the platform development teams involved and is not, in general, supported by ARM.</source>
          <target state="translated">Para trabajar con plataformas cuyo hardware está aún en desarrollo,y por lo tanto puede no tener un chip de interfaz mbed,se requieren algunos archivos &quot;gancho&quot;.La operación con estas plataformas es un asunto de los equipos de desarrollo de plataformas involucrados y no es,en general,apoyado por ARM.</target>
        </trans-unit>
        <trans-unit id="96aea4a4578a7a24ceb5456357622da825fbc337" translate="yes" xml:space="preserve">
          <source>In this example DUT code uses &lt;code&gt;greentea-client&lt;/code&gt; to sync (&lt;code&gt;GREENTEA_SETUP&lt;/code&gt;) and pass result (&lt;code&gt;GREENTEA_TESTSUITE_RESULT&lt;/code&gt;) to &lt;code&gt;Greentea&lt;/code&gt;. This is very simple example of how you can write tests. Note that in this example test suite only implements one test case. Actually test suite is test case at the same time. Result passed to &lt;code&gt;GREENTEA_TESTSUITE_RESULT&lt;/code&gt; will be at the same time test case result.</source>
          <target state="translated">En este ejemplo, el c&amp;oacute;digo DUT usa &lt;code&gt;greentea-client&lt;/code&gt; para sincronizar ( &lt;code&gt;GREENTEA_SETUP&lt;/code&gt; ) y pasar el resultado ( &lt;code&gt;GREENTEA_TESTSUITE_RESULT&lt;/code&gt; ) a &lt;code&gt;Greentea&lt;/code&gt; . Este es un ejemplo muy simple de c&amp;oacute;mo se pueden escribir pruebas. Tenga en cuenta que en este conjunto de pruebas de ejemplo solo se implementa un caso de prueba. En realidad, el conjunto de pruebas es un caso de prueba al mismo tiempo. El resultado pasado a &lt;code&gt;GREENTEA_TESTSUITE_RESULT&lt;/code&gt; ser&amp;aacute; al mismo tiempo el resultado del caso de prueba.</target>
        </trans-unit>
        <trans-unit id="63ce22e8cc62e651bfbc9d44b9fa0409b896de55" translate="yes" xml:space="preserve">
          <source>In this example DUT code uses &lt;code&gt;greentea-client&lt;/code&gt; to sync (&lt;code&gt;GREENTEA_SETUP&lt;/code&gt;) with &lt;code&gt;Greentea&lt;/code&gt;. We are not calling &lt;code&gt;GREENTEA_TESTSUITE_RESULT(result)&lt;/code&gt; at any time. In this example host test is responsible for providing test suite result using &lt;code&gt;self.notify_complete()&lt;/code&gt; API or &lt;code&gt;self.result()&lt;/code&gt; function.</source>
          <target state="translated">En este ejemplo, el c&amp;oacute;digo DUT usa &lt;code&gt;greentea-client&lt;/code&gt; para sincronizar ( &lt;code&gt;GREENTEA_SETUP&lt;/code&gt; ) con &lt;code&gt;Greentea&lt;/code&gt; . No llamaremos a &lt;code&gt;GREENTEA_TESTSUITE_RESULT(result)&lt;/code&gt; en ning&amp;uacute;n momento. En esta prueba de ejemplo de m&amp;aacute;quina es responsable de proporcionar resultado conjunto de pruebas utilizando &lt;code&gt;self.notify_complete()&lt;/code&gt; API o &lt;code&gt;self.result()&lt;/code&gt; funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b31848376e9effcbed71419f7b28c04b83607698" translate="yes" xml:space="preserve">
          <source>In this phase DUT and host exchange events and host side is calling callbacks registered to each of the events sent from DUT. DUT can use function &lt;code&gt;greentea_parse_kv&lt;/code&gt; to parse input stream for next incoming key-value event.
After &lt;code&gt;__host_test_name&lt;/code&gt; event is received and before any event is consumed during this stage:</source>
          <target state="translated">En esta fase, los eventos de intercambio de host y DUT y el lado del host est&amp;aacute;n llamando a las devoluciones de llamada registradas a cada uno de los eventos enviados desde DUT. DUT puede usar la funci&amp;oacute;n &lt;code&gt;greentea_parse_kv&lt;/code&gt; para analizar el flujo de entrada para el pr&amp;oacute;ximo evento de clave-valor entrante. Despu&amp;eacute;s de que se &lt;code&gt;__host_test_name&lt;/code&gt; evento __host_test_name y antes de que se consuma cualquier evento durante esta etapa:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="96d0cf4660194fdfbac644302310f6124c5e1dc2" translate="yes" xml:space="preserve">
          <source>Installation from PyPI (Python Package Index)</source>
          <target state="translated">Instalación desde PyPI (Python Package Index)</target>
        </trans-unit>
        <trans-unit id="9747b78a5614166db6f72d19c44d36053023a65b" translate="yes" xml:space="preserve">
          <source>Installation from Python sources</source>
          <target state="translated">Instalación desde fuentes de Python</target>
        </trans-unit>
        <trans-unit id="b2c3bab72631634bc46b6364dbc4f51c943c659f" translate="yes" xml:space="preserve">
          <source>Key-value protocol has few parts:</source>
          <target state="translated">El protocolo de valores clave tiene pocas partes:</target>
        </trans-unit>
        <trans-unit id="27a29f226690321a7adcc35c9e87be4bf2958fa8" translate="yes" xml:space="preserve">
          <source>Key-value protocol overview</source>
          <target state="translated">Resumen del protocolo de valores clave</target>
        </trans-unit>
        <trans-unit id="9f4787c2bc46ac39b36bd0d999ea31fe758ef67e" translate="yes" xml:space="preserve">
          <source>Key-value protocol was developed and is used to provide communication layer between DUT (device under test) and host computer. Key-value protocol defined host computer as master and DUT as slave.</source>
          <target state="translated">Se desarrolló un protocolo de valores clave que se utiliza para proporcionar una capa de comunicación entre el DUT (dispositivo bajo prueba)y la computadora central.El protocolo de valor clave definía al ordenador central como maestro y al DUT como esclavo.</target>
        </trans-unit>
        <trans-unit id="aee26d71d33f8e98d4348ce4b5d1fd38f36b844f" translate="yes" xml:space="preserve">
          <source>Key-value transport protocol sequence</source>
          <target state="translated">Secuencia de protocolo de transporte de valor clave</target>
        </trans-unit>
        <trans-unit id="7b221d84e0b3a674576d782dcc4a3da4d47eb44b" translate="yes" xml:space="preserve">
          <source>List available host tests names, class names and origin. Load additional host tests from &lt;code&gt;/path/to/host_tests&lt;/code&gt; directory:</source>
          <target state="translated">Enumere los nombres de las pruebas de host disponibles, los nombres de las clases y el origen. Cargue pruebas de host adicionales desde &lt;code&gt;/path/to/host_tests&lt;/code&gt; directorio / host_tests :</target>
        </trans-unit>
        <trans-unit id="65fd4496f6282d1f960f65ea054818b571949787" translate="yes" xml:space="preserve">
          <source>List available host tests names, class names and origin:</source>
          <target state="translated">Enumere los nombres de las pruebas del huésped disponibles,los nombres de las clases y el origen:</target>
        </trans-unit>
        <trans-unit id="4270d9653f4f515b60eb7efd3a15a804baf85388" translate="yes" xml:space="preserve">
          <source>List available reset and flashing plugins:</source>
          <target state="translated">Enumere los plugins de reinicio y de parpadeo disponibles:</target>
        </trans-unit>
        <trans-unit id="afc2315b560e12839c119c3f35d4f206ec9aad28" translate="yes" xml:space="preserve">
          <source>Load local file &lt;code&gt;/path/to/file/binary.elf&lt;/code&gt; to onto fastmodel FVP_MPS2_m3 simulators:</source>
          <target state="translated">Cargue el archivo local &lt;code&gt;/path/to/file/binary.elf&lt;/code&gt; en los simuladores fastmodel FVP_MPS2_m3:</target>
        </trans-unit>
        <trans-unit id="bd4905fd40b41fca6db2a780b2c9ed141892071d" translate="yes" xml:space="preserve">
          <source>Log example</source>
          <target state="translated">Ejemplo de bitácora</target>
        </trans-unit>
        <trans-unit id="2392938c8b5602a02f802b8eac39fc88539d91dd" translate="yes" xml:space="preserve">
          <source>Log:</source>
          <target state="translated">Tronco:</target>
        </trans-unit>
        <trans-unit id="e4ba102e09e1016bb3bb75852b1bd476a9a61a81" translate="yes" xml:space="preserve">
          <source>Logged from &lt;code&gt;CONN&lt;/code&gt; (connection process).</source>
          <target state="translated">Registrado desde &lt;code&gt;CONN&lt;/code&gt; (proceso de conexi&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="5dcabc028acea9af83a7332e2b06616cdc6121c3" translate="yes" xml:space="preserve">
          <source>Make decision if test test suite passed / failed / returned error.</source>
          <target state="translated">Toma la decisión si el conjunto de pruebas pasó/falló/devolvió el error.</target>
        </trans-unit>
        <trans-unit id="ace24de34a0939e0c83d6d1e95c32d478581e3fd" translate="yes" xml:space="preserve">
          <source>Master (host) sends sync packet: &lt;code&gt;{{__sync;UUID-STRING}}}&lt;/code&gt; with message value containing random UUID string.</source>
          <target state="translated">El maestro (host) env&amp;iacute;a el paquete de sincronizaci&amp;oacute;n: &lt;code&gt;{{__sync;UUID-STRING}}}&lt;/code&gt; con un valor de mensaje que contiene una cadena UUID aleatoria.</target>
        </trans-unit>
        <trans-unit id="defc0329fd55d6e68456c7da61fb13587d2cee7e" translate="yes" xml:space="preserve">
          <source>Master side APIs and key-value protocol is encapsulated in  &lt;code&gt;mbed-host-tests&lt;/code&gt;.</source>
          <target state="translated">Las API del lado maestro y el protocolo de valor-clave est&amp;aacute;n encapsulados en &lt;code&gt;mbed-host-tests&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="277ce5185e727fdbad5c6acd52d3288181ed59f6" translate="yes" xml:space="preserve">
          <source>Master-slave mode where host is master and DUT is slave.</source>
          <target state="translated">Modo maestro-esclavo donde el anfitrión es maestro y el DUT es esclavo.</target>
        </trans-unit>
        <trans-unit id="1dff4f302c44478b0ce255ebb294db458ab7ceea" translate="yes" xml:space="preserve">
          <source>Message parsing transforms key-value string message to Python event in this order:</source>
          <target state="translated">El análisis sintáctico de mensajes transforma un mensaje de cadena de valor clave en un evento de Python en este orden:</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscelánea</target>
        </trans-unit>
        <trans-unit id="935dbb023ddce3e788178d70861cfc011089bbc5" translate="yes" xml:space="preserve">
          <source>Monitor serial port traffic to parse valid key-value protocol events.</source>
          <target state="translated">Monitorizar el tráfico del puerto serie para analizar los eventos válidos del protocolo llave-valor.</target>
        </trans-unit>
        <trans-unit id="3a9a8ab48c1b83362245fe9ad40e41a584f8107c" translate="yes" xml:space="preserve">
          <source>Non-Reserved event/message keys have leading &lt;code&gt;__&lt;/code&gt; in name:</source>
          <target state="translated">Las claves de evento / mensaje no reservadas tienen &lt;code&gt;__&lt;/code&gt; en el nombre:</target>
        </trans-unit>
        <trans-unit id="8095b4836091793076a966ca6d394f63a1d2af96" translate="yes" xml:space="preserve">
          <source>Note: If you work in isolation and your test environment if fully controlled by you (for example you queue all tasks calling host tests, or use global host unique socket port numbers) this rule doesn&amp;rsquo;t apply to you.</source>
          <target state="translated">Nota: Si trabaja de forma aislada y su entorno de prueba est&amp;aacute; totalmente controlado por usted (por ejemplo, pone en cola todas las tareas que llaman pruebas de host o utiliza n&amp;uacute;meros de puerto de socket &amp;uacute;nicos de host global), esta regla no se aplica a usted.</target>
        </trans-unit>
        <trans-unit id="47e596b9e7a9a83782a11f12a805ad84ba13967a" translate="yes" xml:space="preserve">
          <source>Now you are ready to install &lt;code&gt;htrun&lt;/code&gt;:</source>
          <target state="translated">Ahora est&amp;aacute; listo para instalar &lt;code&gt;htrun&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9eb0e6b2b4096bdf396e40cfffe4337cf1757660" translate="yes" xml:space="preserve">
          <source>Opening connection between host computer and DUT,</source>
          <target state="translated">Abriendo la conexión entre el ordenador central y el DUT,</target>
        </trans-unit>
        <trans-unit id="6321b81d1f64a69cb83d72ad2a79a36226f06233" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;--serial-output-file&lt;/code&gt; takes file name as argument and writes the target serial output to the file. Edit the file to remove lines that will change in successive executions. Put regular expressions if needed at places like benchmark numbers in above log. With these edits you are left with a template good for comparison.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;--serial-output-file&lt;/code&gt; toma el nombre del archivo como argumento y escribe la salida en serie de destino en el archivo. Edite el archivo para eliminar las l&amp;iacute;neas que cambiar&amp;aacute;n en ejecuciones sucesivas. Coloque expresiones regulares si es necesario en lugares como n&amp;uacute;meros de referencia en el registro anterior. Con estas ediciones, se queda con una plantilla buena para comparar.</target>
        </trans-unit>
        <trans-unit id="d0a3e88637b18b51bc10629280f2881e47522630" translate="yes" xml:space="preserve">
          <source>Parsing text received from DUT (line by line)</source>
          <target state="translated">Texto de análisis recibido de DUT (línea por línea)</target>
        </trans-unit>
        <trans-unit id="2b101baf417b3e1f3cb5f9dcc491b7fe9b3cb6a1" translate="yes" xml:space="preserve">
          <source>Please observe above that all the lines that have data that changes from execution to execution (on right) have been removed. It makes it possible htrun to compare these logs. htrun matches lines from the compare log (on left) one by one. It keeps on looking for a line until it matches. Once matched it moves on to match the next line. If it finds all lines from the compare log in the target serial output stream. Then it halts and passes the examples.</source>
          <target state="translated">Por favor,observe arriba que todas las líneas que tienen datos que cambian de una ejecución a otra (a la derecha)han sido eliminadas.Esto hace posible que htrun compare estos registros.htrun coincide con las líneas del registro de comparación (a la izquierda)una por una.Sigue buscando una línea hasta que coincide.Una vez que coinciden,pasa a la siguiente línea.Si encuentra todas las líneas del registro de comparación en el flujo de salida serial objetivo.Entonces se detiene y pasa los ejemplos.</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="5cd9fc3a7d8416186a05c1eef602afb95a9a2640" translate="yes" xml:space="preserve">
          <source>Preamble exchange</source>
          <target state="translated">Intercambio de preámbulo</target>
        </trans-unit>
        <trans-unit id="6de83481025f3d548752a5a0be1d41faa97785e6" translate="yes" xml:space="preserve">
          <source>Protocol introduced is master-slave protocol, where master is host and slave is device under test.</source>
          <target state="translated">El protocolo introducido es el protocolo maestro-esclavo,donde el maestro es el anfitrión y el esclavo es el dispositivo bajo prueba.</target>
        </trans-unit>
        <trans-unit id="83b2cdb22a433b1804f63b72d0ae37234a7dd681" translate="yes" xml:space="preserve">
          <source>Provide command line tool interface, command: &lt;code&gt;mbedhtrun&lt;/code&gt; after module installation (on host).</source>
          <target state="translated">Proporcione la interfaz de la herramienta de l&amp;iacute;nea de comandos, comando: &lt;code&gt;mbedhtrun&lt;/code&gt; despu&amp;eacute;s de la instalaci&amp;oacute;n del m&amp;oacute;dulo (en el host).</target>
        </trans-unit>
        <trans-unit id="26d998179c9bb71ad0db255dc0c7601c06595fd3" translate="yes" xml:space="preserve">
          <source>Provide few basic host test implementations which can be used out of the box for test development. For example the basic host test (called &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;default_auto&lt;/code&gt;) just parses events from DUT and finished host test execution when &lt;code&gt;end&lt;/code&gt; event is received. Other included in this module host tests can help you to test timers or RTC.</source>
          <target state="translated">Proporcione algunas implementaciones b&amp;aacute;sicas de prueba de host que se puedan utilizar de forma inmediata para el desarrollo de pruebas. Por ejemplo, la prueba de host b&amp;aacute;sica (denominada &lt;code&gt;default&lt;/code&gt; o &lt;code&gt;default_auto&lt;/code&gt; ) simplemente analiza los eventos del DUT y finaliza la ejecuci&amp;oacute;n de la prueba de host cuando se recibe el evento &lt;code&gt;end&lt;/code&gt; . Otras pruebas de host incluidas en este m&amp;oacute;dulo pueden ayudarlo a probar temporizadores o RTC.</target>
        </trans-unit>
        <trans-unit id="067fdaf097fe2f4fa9cab7c1cfd6cf55767ca001" translate="yes" xml:space="preserve">
          <source>Reserved event/message keys have leading &lt;code&gt;__&lt;/code&gt; in name:</source>
          <target state="translated">Las claves de evento / mensaje reservadas tienen &lt;code&gt;__&lt;/code&gt; en el nombre:</target>
        </trans-unit>
        <trans-unit id="825cd14df7acabb05a94e4445c62d49fcb9bfdc9" translate="yes" xml:space="preserve">
          <source>Reset mbed device after flashing to start test suite execution.</source>
          <target state="translated">Reinicie el dispositivo mbed después del parpadeo para iniciar la ejecución del conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="59c74e7780ed5c235fa3625ceb843ea2d8182d8e" translate="yes" xml:space="preserve">
          <source>Result returned from host test is a test suite result. Test cases results are reported by DUT, usually using modified &lt;code&gt;utest&lt;/code&gt; framework.</source>
          <target state="translated">El resultado devuelto por la prueba del host es un resultado de la suite de pruebas. Los resultados de los casos de prueba son informados por DUT, generalmente usando el marco &lt;code&gt;utest&lt;/code&gt; modificado .</target>
        </trans-unit>
        <trans-unit id="7eb43fac4bae0d97d9b8c2b4f1c7a4531e1501ff" translate="yes" xml:space="preserve">
          <source>Return result after __exit</source>
          <target state="translated">Devolver el resultado después de __salir</target>
        </trans-unit>
        <trans-unit id="594827c48dee112f581a689b42115759d1c3c8dc" translate="yes" xml:space="preserve">
          <source>Run key-value protocol state machine and execute event callbacks.</source>
          <target state="translated">Ejecute la máquina de estado del protocolo llave-valor y ejecute las llamadas de eventos.</target>
        </trans-unit>
        <trans-unit id="28e87a733a5102266279adcaf92bb31b4e8dfa30" translate="yes" xml:space="preserve">
          <source>SARA NBIOT EVK</source>
          <target state="translated">SARA NBIOT EVK</target>
        </trans-unit>
        <trans-unit id="d73bb20965191cea0e2d0700f76a1ca705dd4799" translate="yes" xml:space="preserve">
          <source>Simple key-value protocol is introduced. It is used to communicate between DUT and host. Protocol main features:</source>
          <target state="translated">Se introduce un protocolo simple de llave-valor.Se utiliza para comunicarse entre el DUT y el anfitrión.Características principales del protocolo:</target>
        </trans-unit>
        <trans-unit id="06cc574fa4d7414bcd447ee8fce507719ead92d8" translate="yes" xml:space="preserve">
          <source>Skip flashing phase (e.g. you've already flashed this device with &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; binary). Use serial port &lt;code&gt;COM4&lt;/code&gt; to communicate with DUT:</source>
          <target state="translated">Omita la fase de &lt;code&gt;/path/to/file/binary.bin&lt;/code&gt; (por ejemplo, ya ha flasheado este dispositivo con /path/to/file/binary.bin binary). Utilice el puerto serie &lt;code&gt;COM4&lt;/code&gt; para comunicarse con DUT:</target>
        </trans-unit>
        <trans-unit id="4df361bbe32ced8a6f9e97b5ebddb8461b1bd534" translate="yes" xml:space="preserve">
          <source>Slave side APIs and key-value protocol implementation is encapsulated in &lt;a href=&quot;https://github.com/ARMmbed/mbed-os/tree/master/features/frameworks/greentea-client&quot;&gt;greentea-client&lt;/a&gt; module.</source>
          <target state="translated">Las API del lado esclavo y la implementaci&amp;oacute;n del protocolo de valor clave se encapsula en el m&amp;oacute;dulo &lt;a href=&quot;https://github.com/ARMmbed/mbed-os/tree/master/features/frameworks/greentea-client&quot;&gt;greentea-client&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e70c5705c8542d7e86f593c06d9341c8d2b28434" translate="yes" xml:space="preserve">
          <source>Slave side key-value protocol API, see &lt;a href=&quot;https://github.com/ARMmbed/mbed-os/blob/master/features/frameworks/greentea-client/greentea-client/test_env.h&quot;&gt;here&lt;/a&gt; for details.</source>
          <target state="translated">API de protocolo de valor-clave del lado esclavo, consulte &lt;a href=&quot;https://github.com/ARMmbed/mbed-os/blob/master/features/frameworks/greentea-client/greentea-client/test_env.h&quot;&gt;aqu&amp;iacute;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="aa6ff5371ac33c3951672e8ff547398ae9695810" translate="yes" xml:space="preserve">
          <source>Templated log simply means a log with text that does not change or regular expressions replacing original text. Below is an example of the templated log:</source>
          <target state="translated">Un registro con plantilla significa simplemente un registro con texto que no cambia o expresiones regulares que reemplazan el texto original.A continuación se muestra un ejemplo del registro con plantilla:</target>
        </trans-unit>
        <trans-unit id="eb391cb90069057c99db0fe99cf4552916bab489" translate="yes" xml:space="preserve">
          <source>Test execution phase will consist of:</source>
          <target state="translated">La fase de ejecución de la prueba consistirá en:</target>
        </trans-unit>
        <trans-unit id="83e3b70840fadf5bea17a0e24aef786b3d0ffc67" translate="yes" xml:space="preserve">
          <source>Test suite is implemented so that it will never exit / finish its execution. For example &lt;code&gt;main()&lt;/code&gt; or &lt;code&gt;app_start()&lt;/code&gt; functions are implemented using infinite (endless) loop. This property have for example UDP/TCP servers (listening forever), all sorts of echo servers etc.</source>
          <target state="translated">El conjunto de pruebas se implementa para que nunca salga / finalice su ejecuci&amp;oacute;n. Por ejemplo, las funciones &lt;code&gt;main()&lt;/code&gt; o &lt;code&gt;app_start()&lt;/code&gt; se implementan usando un bucle infinito (sin fin). Esta propiedad tiene, por ejemplo, servidores UDP / TCP (escuchando siempre), todo tipo de servidores de eco, etc.</target>
        </trans-unit>
        <trans-unit id="594012e05268bdd744c42186997dd5ea17a93ab5" translate="yes" xml:space="preserve">
          <source>Testing mbed-os examples</source>
          <target state="translated">Probando ejemplos de mbed-os</target>
        </trans-unit>
        <trans-unit id="e0519cea3ce164f13b54a2744defb9155e41b935" translate="yes" xml:space="preserve">
          <source>Text based protocol, format &lt;code&gt;{{KEY;VALUE}}}&lt;/code&gt;.</source>
          <target state="translated">Protocolo basado en texto, formato &lt;code&gt;{{KEY;VALUE}}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="870b045bf88b413a3138f7d28f1fad5077b089f8" translate="yes" xml:space="preserve">
          <source>The &quot;--fm&quot; option only available when &lt;a href=&quot;https://github.com/ARMmbed/mbed-fastmodel-agent&quot;&gt;mbed-fastmodel-agent&lt;/a&gt; module is installed :</source>
          <target state="translated">La opci&amp;oacute;n &quot;--fm&quot; solo est&amp;aacute; disponible cuando el m&amp;oacute;dulo &lt;a href=&quot;https://github.com/ARMmbed/mbed-fastmodel-agent&quot;&gt;mbed-fastmodel-agent&lt;/a&gt; est&amp;aacute; instalado:</target>
        </trans-unit>
        <trans-unit id="85c890bac201b9058908fec1463a1d2a9cb01d34" translate="yes" xml:space="preserve">
          <source>The SARA NBIOT EVK board must be connected to a Windows PC using a Segger JLink box, which is used for downloading code and resetting the board. The USB port on the EVK must also be connected to the same PC.  To make use of these hooks you will also require access to some proprietary tools that can be requested from u-blox.</source>
          <target state="translated">La placa SARA NBIOT EVK debe conectarse a un PC con Windows mediante una caja Segger JLink,que se utiliza para descargar el código y reiniciar la placa.El puerto USB del EVK también debe estar conectado al mismo PC.Para hacer uso de estos ganchos también se requiere acceso a algunas herramientas propietarias que pueden ser solicitadas a u-blox.</target>
        </trans-unit>
        <trans-unit id="a1d3614cfb60cf469b630755b7dafb4e3fd4e715" translate="yes" xml:space="preserve">
          <source>The development of Htrun has been moved into the &lt;a href=&quot;../../src/mbed_os_tools&quot;&gt;mbed-os-tools&lt;/a&gt; package. You can continue to use this module for legacy reasons, however all further development should be continued in the new package.</source>
          <target state="translated">El desarrollo de Htrun se ha trasladado al paquete &lt;a href=&quot;../../src/mbed_os_tools&quot;&gt;mbed-os-tools&lt;/a&gt; . Puede continuar utilizando este m&amp;oacute;dulo por razones heredadas, sin embargo, todo el desarrollo adicional debe continuar en el nuevo paquete.</target>
        </trans-unit>
        <trans-unit id="6fce2d6a602e17341d42158c18479a0c7fde13f6" translate="yes" xml:space="preserve">
          <source>This chapter will present few examples of how you can use &lt;code&gt;mbedhtrun&lt;/code&gt; command line to execute tests. In most cases test automation tools such as &lt;a href=&quot;https://github.com/ARMmbed/greentea&quot;&gt;Greentea&lt;/a&gt; will execute &lt;code&gt;mbedhtrun&lt;/code&gt; implicitly. There are cases when we want to execute &lt;code&gt;mbedhtrun&lt;/code&gt; independently. Mostly in situation when we want to:</source>
          <target state="translated">Este cap&amp;iacute;tulo presentar&amp;aacute; algunos ejemplos de c&amp;oacute;mo puede usar la l&amp;iacute;nea de comando &lt;code&gt;mbedhtrun&lt;/code&gt; para ejecutar pruebas. En la mayor&amp;iacute;a de los casos, las herramientas de automatizaci&amp;oacute;n de pruebas como &lt;a href=&quot;https://github.com/ARMmbed/greentea&quot;&gt;Greentea&lt;/a&gt; ejecutar&amp;aacute;n &lt;code&gt;mbedhtrun&lt;/code&gt; impl&amp;iacute;citamente. Hay casos en los que queremos ejecutar &lt;code&gt;mbedhtrun&lt;/code&gt; de forma independiente. Principalmente en situaciones en las que queremos:</target>
        </trans-unit>
        <trans-unit id="25cfa2b01075915c44d77b45ca4c742f78dd7e79" translate="yes" xml:space="preserve">
          <source>This function should replace &lt;code&gt;scanf()&lt;/code&gt; used to check for incoming messages from master.
Function parses input and if key-value message is found load to &lt;code&gt;out_key&lt;/code&gt;, &lt;code&gt;out_value&lt;/code&gt; key-value pair. Use &lt;code&gt;out_key_size&lt;/code&gt; and &lt;code&gt;out_value_size&lt;/code&gt; to define out buffers max size (including trailing zero).</source>
          <target state="translated">Esta funci&amp;oacute;n deber&amp;iacute;a reemplazar &lt;code&gt;scanf()&lt;/code&gt; usa para verificar los mensajes entrantes del maestro. La funci&amp;oacute;n analiza la entrada y, si se encuentra el mensaje clave-valor, se carga en el &lt;code&gt;out_value&lt;/code&gt; clave-valor &lt;code&gt;out_key&lt;/code&gt; , out_value . Utilice &lt;code&gt;out_key_size&lt;/code&gt; y &lt;code&gt;out_value_size&lt;/code&gt; para definir el tama&amp;ntilde;o m&amp;aacute;ximo de los b&amp;uacute;feres (incluido el cero final).</target>
        </trans-unit>
        <trans-unit id="65299901239874a6cb949a2e51f51f4fbb5a9775" translate="yes" xml:space="preserve">
          <source>This option is designed for htrun to use Arm Fast Models.</source>
          <target state="translated">Esta opción está diseñada para que htrun utilice los modelos de brazo rápido.</target>
        </trans-unit>
        <trans-unit id="44e2532f0cb63fd8184a45f5dee53bd8b75b0c12" translate="yes" xml:space="preserve">
          <source>This phase comes just after handshake phase. DUT informs host about test parameters such as client version, timeout, requested host test name etc. After this part is finished master will create requested host test and attach callbacks to user events.
This phase is ended with &lt;code&gt;__host_test_name&lt;/code&gt; being received by host. After &lt;code&gt;__host_test_name&lt;/code&gt; event is received</source>
          <target state="translated">Esta fase viene justo despu&amp;eacute;s de la fase de apret&amp;oacute;n de manos. El DUT informa al host sobre los par&amp;aacute;metros de prueba, como la versi&amp;oacute;n del cliente, el tiempo de espera, el nombre de la prueba del host solicitado, etc. Una vez finalizada esta parte, el maestro crear&amp;aacute; la prueba del host solicitada y adjuntar&amp;aacute; devoluciones de llamada a los eventos del usuario. Esta fase finaliza cuando el &lt;code&gt;__host_test_name&lt;/code&gt; recibe __host_test_name . Despu&amp;eacute;s de &lt;code&gt;__host_test_name&lt;/code&gt; evento __host_test_name</target>
        </trans-unit>
        <trans-unit id="87ffd053a24a9a4cd443eaef85db7c0d348b406b" translate="yes" xml:space="preserve">
          <source>Time stamp: &lt;code&gt;2016-02-11 19:53:27&lt;/code&gt;, see below:</source>
          <target state="translated">&lt;code&gt;2016-02-11 19:53:27&lt;/code&gt; tiempo: 2016-02-11 19:53:27 , ver a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="4af2c9ff1813d587766abee9f7ec0510e0469717" translate="yes" xml:space="preserve">
          <source>To avoid miscommunication between master and slave simple handshake protocol is introduces:</source>
          <target state="translated">Para evitar la falta de comunicación entre amo y esclavo se introduce un simple protocolo de apretón de manos:</target>
        </trans-unit>
        <trans-unit id="cf2dc67e3be0bab3e7a0cc8e1a40911892791049" translate="yes" xml:space="preserve">
          <source>To capture a log use following option:</source>
          <target state="translated">Para capturar un registro utilice la siguiente opción:</target>
        </trans-unit>
        <trans-unit id="82291530bb70e06584cb774caa50c878ef17f36b" translate="yes" xml:space="preserve">
          <source>To check whether the installation was successful try running the &lt;code&gt;mbedgt --help&lt;/code&gt; command and check that it returns information (you may need to restart your terminal first):</source>
          <target state="translated">Para verificar si la instalaci&amp;oacute;n fue exitosa, intente ejecutar el comando &lt;code&gt;mbedgt --help&lt;/code&gt; y verifique que devuelva informaci&amp;oacute;n (es posible que primero deba reiniciar su terminal):</target>
        </trans-unit>
        <trans-unit id="ab53aec5e2dcd07bcd2bff109dfd75ca828a92a6" translate="yes" xml:space="preserve">
          <source>To install mbed-ls from &lt;a href=&quot;https://pypi.python.org/pypi/mbed-host-tests&quot;&gt;PyPI&lt;/a&gt; use command:</source>
          <target state="translated">Para instalar mbed-ls desde &lt;a href=&quot;https://pypi.python.org/pypi/mbed-host-tests&quot;&gt;PyPI&lt;/a&gt; use el comando:</target>
        </trans-unit>
        <trans-unit id="820de9ca27785efb587fcd2b2a418cd80b042a8e" translate="yes" xml:space="preserve">
          <source>To install the mbed test suite, first clone the &lt;code&gt;mbed-os-tools&lt;/code&gt; repository:</source>
          <target state="translated">Para instalar el conjunto de pruebas mbed, primero clone el repositorio &lt;code&gt;mbed-os-tools&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b03cb0e400fb841ec31aad1884efb8674d590f0e" translate="yes" xml:space="preserve">
          <source>Transport layer consist of simple &lt;code&gt;{{ KEY ; VALUE }} \n&lt;/code&gt; text messages sent by slave (DUT). Both key and value are strings with allowed character set limitations (to simplify parsing and protocol parser itself). Message ends with required by DUT K-V parser &lt;code&gt;\n&lt;/code&gt; character.</source>
          <target state="translated">La capa de transporte consta de &lt;code&gt;{{ KEY ; VALUE }} \n&lt;/code&gt; mensajes de texto enviados por esclavo (DUT). Tanto la clave como el valor son cadenas con limitaciones de juego de caracteres permitidas (para simplificar el an&amp;aacute;lisis y el analizador de protocolos en s&amp;iacute;). El mensaje termina con el car&amp;aacute;cter requerido por el analizador DUT KV &lt;code&gt;\n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70fd40f266f853f835d86fc1d1b7cad7ea02d3f9" translate="yes" xml:space="preserve">
          <source>Use following command to test the example and the comparison log:</source>
          <target state="translated">Use el siguiente comando para probar el ejemplo y el registro de comparación:</target>
        </trans-unit>
        <trans-unit id="334d09ec6a6d9108ec4a6116afbeec4c31b8b481" translate="yes" xml:space="preserve">
          <source>Use key-value protocol to handshake with device and make sure correct host test script is executed to supervise test suite execution.</source>
          <target state="translated">Usar el protocolo llave-valor para el apretón de manos con el dispositivo y asegurarse de que se ejecuta el guión de prueba del host correcto para supervisar la ejecución del conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="e1bd0c9c0eeddbe79b76d282f89baa5e70f98f49" translate="yes" xml:space="preserve">
          <source>Useful command line end-to-end examples</source>
          <target state="translated">Ejemplos útiles de línea de comando de extremo a extremo</target>
        </trans-unit>
        <trans-unit id="979177c3f7c9f6589829903f8006c1110617023c" translate="yes" xml:space="preserve">
          <source>User can't register callbacks to &quot;system events&quot; with few exceptions.</source>
          <target state="translated">El usuario no puede registrar devoluciones de llamadas a &quot;eventos del sistema&quot; con pocas excepciones.</target>
        </trans-unit>
        <trans-unit id="d7f65ec270b5858ddcb0ea43a171f75c69a50de3" translate="yes" xml:space="preserve">
          <source>Using __rdx_line event</source>
          <target state="translated">Usando el evento __rdx_line</target>
        </trans-unit>
        <trans-unit id="36b9d36e832107c9ae2570465ca25bcbd5a3dd97" translate="yes" xml:space="preserve">
          <source>We can use few methods to structure out test suite and test cases. Simpliest would be to use &lt;code&gt;greentea-client&lt;/code&gt; API and wrap one test case inside out test suite. This way of creating test suite is useful when you want to:</source>
          <target state="translated">Podemos utilizar pocos m&amp;eacute;todos para estructurar el conjunto de pruebas y los casos de prueba. Lo m&amp;aacute;s sencillo ser&amp;iacute;a usar la &lt;code&gt;greentea-client&lt;/code&gt; y envolver un caso de prueba al rev&amp;eacute;s. Esta forma de crear un conjunto de pruebas es &amp;uacute;til cuando desea:</target>
        </trans-unit>
        <trans-unit id="9fc54ec0002c9b3a7dc3a343aa736d8a5a416316" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;__sync&lt;/code&gt; packet is parsed in the stream DUT sends back (echoes) &lt;code&gt;__sync&lt;/code&gt; event with the same &lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_3_.28MD5_hash_.26_namespace.29&quot;&gt;UUID&lt;/a&gt; as payload. UUID is a random value e.g.  &lt;code&gt;5f8dbbd2-199a-449c-b286-343a57da7a37&lt;/code&gt;.</source>
          <target state="translated">Cuando se &lt;code&gt;__sync&lt;/code&gt; paquete __sync en el flujo, el DUT devuelve (hace eco) el evento &lt;code&gt;__sync&lt;/code&gt; con el mismo &lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_3_.28MD5_hash_.26_namespace.29&quot;&gt;UUID&lt;/a&gt; que la carga &amp;uacute;til. UUID es un valor aleatorio, por ejemplo, &lt;code&gt;5f8dbbd2-199a-449c-b286-343a57da7a37&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f341882dc398289385b72f5e1d586c00508a549" translate="yes" xml:space="preserve">
          <source>When writing a new host test for your module please bear in mind that:</source>
          <target state="translated">Cuando escriba una nueva prueba de anfitrión para su módulo,por favor tenga en cuenta que:</target>
        </trans-unit>
        <trans-unit id="d09112b342b1d638b05c2a329147d91b17294862" translate="yes" xml:space="preserve">
          <source>When writing host test using OS resources such as sockets, files, serial ports, peripheral devices like for example multi-meters / scopes. remember that those resources are indivisible!</source>
          <target state="translated">Cuando escriba la prueba de host usando recursos del sistema operativo como enchufes,archivos,puertos serie,dispositivos periféricos como,por ejemplo,multímetros/alcances.¡Recuerde que esos recursos son indivisibles!</target>
        </trans-unit>
        <trans-unit id="890f3875b8b3d9fcc39b709891847f99bce284ee" translate="yes" xml:space="preserve">
          <source>Writing DUT test suite (slave side)</source>
          <target state="translated">Escribir el conjunto de pruebas de DUT (lado esclavo)</target>
        </trans-unit>
        <trans-unit id="21e2e206cbdc9151364078fceb1dfe895ed9b4d2" translate="yes" xml:space="preserve">
          <source>Writing host tests (master side)</source>
          <target state="translated">Escribir pruebas de anfitrión (lado maestro)</target>
        </trans-unit>
        <trans-unit id="b71b200d5a694f60a42059425701583d39b0e89e" translate="yes" xml:space="preserve">
          <source>You can register callbacks in &lt;code&gt;setup()&lt;/code&gt; phase or decorate callback functions using &lt;code&gt;@event_callback&lt;/code&gt; decorator.</source>
          <target state="translated">Puede registrar devoluciones de llamada en la fase &lt;code&gt;setup()&lt;/code&gt; o decorar funciones de devoluci&amp;oacute;n de llamada usando el decorador &lt;code&gt;@event_callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0796fb65c6f1d0d01f20cd07e52afc4c962187db" translate="yes" xml:space="preserve">
          <source>You need to place your custom host test in &lt;code&gt;&amp;lt;module&amp;gt;/test/host_tests&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;&amp;lt;module&amp;gt;/test/host_tests&lt;/code&gt; colocar su prueba de host personalizada en el directorio &amp;lt;module&amp;gt; / test / host_tests .</target>
        </trans-unit>
        <trans-unit id="329e432f66c96948efd63ceddf05f381ac23e2af" translate="yes" xml:space="preserve">
          <source>You need to write and specify by name your custom host test:</source>
          <target state="translated">Necesitas escribir y especificar por nombre tu prueba de anfitrión personalizada:</target>
        </trans-unit>
        <trans-unit id="d086cfdf9e616756e97771786e29c764137f85f5" translate="yes" xml:space="preserve">
          <source>You own the host test and you should write it the way so it can coexist with the same host tests ran by other processes such as Continuous Integration systems or other host users.</source>
          <target state="translated">Usted es el propietario de la prueba de host y debe escribirla de manera que pueda coexistir con las mismas pruebas de host ejecutadas por otros procesos como los sistemas de Integración Continua u otros usuarios de host.</target>
        </trans-unit>
        <trans-unit id="2f248e4c7bc213c0e1d04f3156433841516876eb" translate="yes" xml:space="preserve">
          <source>calls immediately &lt;code&gt;greentea_parse_kv&lt;/code&gt; (blocking parse of input serial port for event &lt;code&gt;{{__sync;UUID}}&lt;/code&gt;).</source>
          <target state="translated">llama inmediatamente a &lt;code&gt;greentea_parse_kv&lt;/code&gt; (bloqueo de an&amp;aacute;lisis del puerto serie de entrada para el evento &lt;code&gt;{{__sync;UUID}}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="58a78d6d31f54b4406d541d02584f0cf73d3de31" translate="yes" xml:space="preserve">
          <source>debug our code and have binary + host test instrumentation on,</source>
          <target state="translated">...depurar nuestro código y tener activada la instrumentación de prueba binaria+huésped,</target>
        </trans-unit>
        <trans-unit id="4a0d7154d60bc6a4a8440a6c5fd4b6c5c8cad825" translate="yes" xml:space="preserve">
          <source>device reset and</source>
          <target state="translated">el restablecimiento del dispositivo y</target>
        </trans-unit>
        <trans-unit id="0ae41492d3c7b24fb4ca6e6e797730f9f461f714" translate="yes" xml:space="preserve">
          <source>driving test binary flashing,</source>
          <target state="translated">parpadeo binario del test de conducción,</target>
        </trans-unit>
        <trans-unit id="924e021d80ca878162edcc13bd21682f4723012d" translate="yes" xml:space="preserve">
          <source>just want to replace test runner in another OS with one compatible with mbed-enabled devices.</source>
          <target state="translated">Sólo quiero reemplazar el test runner en otro sistema operativo con uno compatible con dispositivos mbed.</target>
        </trans-unit>
        <trans-unit id="051785d5a53040a76f3a795c9fdbe3a2b7c1ba4d" translate="yes" xml:space="preserve">
          <source>key-value data becomes a recognizable message with key (string) and value (string) payload.</source>
          <target state="translated">Los datos clave-valor se convierten en un mensaje reconocible con la carga útil de la clave (cadena)y el valor (cadena).</target>
        </trans-unit>
        <trans-unit id="2d8a18bd8189a1ef27e733539fdea3a301fa251c" translate="yes" xml:space="preserve">
          <source>make example application (example as a test) or</source>
          <target state="translated">hacer una aplicación de ejemplo (ejemplo como prueba)o</target>
        </trans-unit>
        <trans-unit id="d521450035bfa4fa670a2d66f41a8c7ef4020fda" translate="yes" xml:space="preserve">
          <source>mbed tools used to flash, reset and supervise test execution for mbed-enabled devices</source>
          <target state="translated">herramientas mbed utilizadas para flashear,reiniciar y supervisar la ejecución de las pruebas de los dispositivos habilitados para mbed</target>
        </trans-unit>
        <trans-unit id="c7dca3c11ec8a5b089c578680afaf92dd9f71663" translate="yes" xml:space="preserve">
          <source>mbed's test suite (codenamed &lt;code&gt;Greentea&lt;/code&gt;) supports the &lt;em&gt;test supervisor&lt;/em&gt; concept. This concept is realized by this module. &lt;code&gt;mbed-host-tests&lt;/code&gt; is a collection of host tests. Host test is script written in Python, which is executed in parallel with the test suite runner (a binary running on the target hardware / device under test) to monitor the test execution's progress or to control the test flow (interaction with the mbed device under test - DUT). The host test is also responsible for grabbing the test result, or deducing it from the test runner's behavior.</source>
          <target state="translated">El conjunto de pruebas de mbed (con nombre en c&amp;oacute;digo &lt;code&gt;Greentea&lt;/code&gt; ) es compatible con el concepto de &lt;em&gt;supervisor de pruebas&lt;/em&gt; . Este concepto se realiza en este m&amp;oacute;dulo. &lt;code&gt;mbed-host-tests&lt;/code&gt; es una colecci&amp;oacute;n de pruebas de host. La prueba de host es un script escrito en Python, que se ejecuta en paralelo con el ejecutor de la suite de pruebas (un binario que se ejecuta en el hardware / dispositivo de destino bajo prueba) para monitorear el progreso de la ejecuci&amp;oacute;n de la prueba o para controlar el flujo de la prueba (interacci&amp;oacute;n con el dispositivo mbed bajo prueba - DUT). La prueba del anfitri&amp;oacute;n tambi&amp;eacute;n es responsable de obtener el resultado de la prueba o deducirlo del comportamiento del corredor de la prueba.</target>
        </trans-unit>
        <trans-unit id="d24be69745afbb12c8b0d04eab75845575a8791d" translate="yes" xml:space="preserve">
          <source>mbed-host-tests</source>
          <target state="translated">mbed-host-tests</target>
        </trans-unit>
        <trans-unit id="9a2f25d66a9f94f62ac0a0c7361a1064add6b06f" translate="yes" xml:space="preserve">
          <source>mbed-os examples are essentially sample apps written as inspirational code for developers to understand the mbed-os APIs and coding paradigms. Before every mbed-os release all examples are tested across all supported configs and platforms. There is already a large set examples available and as they grow it is important to automate them. Hence automating examples make sense. Although it is important not to pollute them with test like instrumentation. As that will defeat the purpose of examples being simple and specific.</source>
          <target state="translated">Los ejemplos de mbed-os son esencialmente aplicaciones de muestra escritas como código de inspiración para que los desarrolladores comprendan las API y los paradigmas de codificación de mbed-os.Antes de cada lanzamiento de mbed-os todos los ejemplos se prueban en todas las configuraciones y plataformas soportadas.Ya existe un gran conjunto de ejemplos disponibles y a medida que crecen es importante automatizarlos.Por lo tanto,automatizar los ejemplos tiene sentido.Aunque es importante no contaminarlos con instrumentos de prueba.Ya que eso frustraría el propósito de que los ejemplos sean simples y específicos.</target>
        </trans-unit>
        <trans-unit id="f6c5a3ffbcae54629b163af76fe38d26150e50f4" translate="yes" xml:space="preserve">
          <source>preferred host test script (Python script which is used to supervise/instrument test execution),</source>
          <target state="translated">guión de prueba del huésped preferido (guión de Python que se utiliza para supervisar/ejecutar la prueba del instrumento),</target>
        </trans-unit>
        <trans-unit id="0152edce00462ac4cc087f3acc4250a2fe8763ec" translate="yes" xml:space="preserve">
          <source>prototype or</source>
          <target state="translated">prototipo o</target>
        </trans-unit>
        <trans-unit id="4c478d8822658f18e996b8d7fcfafadff0859ea5" translate="yes" xml:space="preserve">
          <source>test environment version,</source>
          <target state="translated">versión de ambiente de prueba,</target>
        </trans-unit>
        <trans-unit id="dde8714ae7facacf6c0b129f3ca63306b4a73d03" translate="yes" xml:space="preserve">
          <source>test execution.</source>
          <target state="translated">ejecución de la prueba.</target>
        </trans-unit>
        <trans-unit id="3ca732331b49aa9581fbadd09382dba22ed19286" translate="yes" xml:space="preserve">
          <source>test timeout,</source>
          <target state="translated">tiempo de espera de la prueba,</target>
        </trans-unit>
        <trans-unit id="f08278b6533f3536f5ef21e38149813caa1d07be" translate="yes" xml:space="preserve">
          <source>when your test suite is calling blocking forever function. For example all types of UDP/TCP servers which run in forever loop are in this category. In this case we do not expect from DUT &lt;code&gt;__exit&lt;/code&gt; event at all and host test should be designed in such a way that it always return result.</source>
          <target state="translated">cuando su suite de prueba est&amp;aacute; llamando a la funci&amp;oacute;n de bloqueo para siempre. Por ejemplo, todos los tipos de servidores UDP / TCP que se ejecutan en bucle permanente se encuentran en esta categor&amp;iacute;a. En este caso, no esperamos del evento DUT &lt;code&gt;__exit&lt;/code&gt; en absoluto y la prueba del host debe dise&amp;ntilde;arse de tal manera que siempre devuelva el resultado.</target>
        </trans-unit>
        <trans-unit id="cebce5c7c70edab2f7eb6dc6175ab54cb19eec96" translate="yes" xml:space="preserve">
          <source>write only one test case inside test suite,</source>
          <target state="translated">escribir sólo un caso de prueba dentro de la sala de pruebas,</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
