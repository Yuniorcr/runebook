<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/appenginetaskutils/">
    <body>
      <group id="appenginetaskutils">
        <trans-unit id="8ca5f301974a1d6443d0fc56b5da2d48374326d6" translate="yes" xml:space="preserve">
          <source># appenginetaskutils</source>
          <target state="translated"># appenginetaskutils</target>
        </trans-unit>
        <trans-unit id="f43adb4deeb1454923c53440ed271df2fbe312e5" translate="yes" xml:space="preserve">
          <source>## @task</source>
          <target state="translated">## @tarea</target>
        </trans-unit>
        <trans-unit id="f3fb36a464b39957c3ece0a95960beca0b329366" translate="yes" xml:space="preserve">
          <source>## Install</source>
          <target state="translated">## Instalar en pc</target>
        </trans-unit>
        <trans-unit id="d780ac0ef23a65700a9418d238bd12ea39aa4573" translate="yes" xml:space="preserve">
          <source>### Configuring @task</source>
          <target state="translated">### Configurando @task</target>
        </trans-unit>
        <trans-unit id="9c6b6054fa2c6dd8f26630267b83f2a525680fd6" translate="yes" xml:space="preserve">
          <source>### Importing task</source>
          <target state="translated">### Tarea de importaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="2e25262fce547815131274fba350a4cc68ea3579" translate="yes" xml:space="preserve">
          <source>### Using task as a decorator</source>
          <target state="translated">### Usando tarea como decorador</target>
        </trans-unit>
        <trans-unit id="bd667e960d3efac58366e4dd1b54053365665f64" translate="yes" xml:space="preserve">
          <source>### Using task as a factory</source>
          <target state="translated">### Uso de tareas como f&amp;aacute;brica</target>
        </trans-unit>
        <trans-unit id="dc8e81bb52d5a2fe6a68808d21de92a0ffb7e46b" translate="yes" xml:space="preserve">
          <source>### includeheaders</source>
          <target state="translated">### incluyen encabezados</target>
        </trans-unit>
        <trans-unit id="86d97f316ebfaefa8e1f43c7b8fb8a2411782530" translate="yes" xml:space="preserve">
          <source>### other bits</source>
          <target state="translated">### otros bits</target>
        </trans-unit>
        <trans-unit id="b5f4335efc4b6e3a4cc08aa72c462536f76cc11c" translate="yes" xml:space="preserve">
          <source>### transactional</source>
          <target state="translated">### transaccional</target>
        </trans-unit>
        <trans-unit id="834d5adffb137f2d43cf235163d61ca3a8592595" translate="yes" xml:space="preserve">
          <source>&amp;gt; pip install appenginetaskutils --target lib</source>
          <target state="translated">&amp;gt; pip install appenginetaskutils --target lib</target>
        </trans-unit>
        <trans-unit id="a14d74d651c20f1b8d1171d9834f2e907ea42f36" translate="yes" xml:space="preserve">
          <source>- url: /_ah/task/.*</source>
          <target state="translated">- url: /_ah/task/.*</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="43431bbe14d82b38ff151880cca20547d27135f1" translate="yes" xml:space="preserve">
          <source>... do something with an object ...</source>
          <target state="translated">... hacer algo con un objeto ...</target>
        </trans-unit>
        <trans-unit id="873f7d595d53c611070a44fa1bda2d9e1aaa068c" translate="yes" xml:space="preserve">
          <source>... do stuff ...</source>
          <target state="translated">... hacer cosas ...</target>
        </trans-unit>
        <trans-unit id="abd97156b239e32193f5c4a301e8418a95ad00ed" translate="yes" xml:space="preserve">
          <source>... does something ...</source>
          <target state="translated">... hace algo ...</target>
        </trans-unit>
        <trans-unit id="dfa28e28bbadd11f1d53c42fff7e0d18e187d553" translate="yes" xml:space="preserve">
          <source>... stuff ...</source>
          <target state="translated">... cosas ...</target>
        </trans-unit>
        <trans-unit id="4da70d0b4048fffa5b1419df3581fa46f5150a42" translate="yes" xml:space="preserve">
          <source>...get some list of lists of objects...</source>
          <target state="translated">... obtener una lista de listas de objetos ...</target>
        </trans-unit>
        <trans-unit id="07a9648a6f8e7eba31381cf86c0ccbdadd05175f" translate="yes" xml:space="preserve">
          <source>/_ah/task/mymodule/somefunction</source>
          <target state="translated">/ _ah / task / mymodule / somefunction</target>
        </trans-unit>
        <trans-unit id="d38a8f83640ce0fff0b022161540cfdf0fb32550" translate="yes" xml:space="preserve">
          <source>@task</source>
          <target state="translated">@tarea</target>
        </trans-unit>
        <trans-unit id="98844a9f960baa465cf94566634c969b95e3919c" translate="yes" xml:space="preserve">
          <source>@task(includeheaders=True)</source>
          <target state="translated">@tarea (includeheaders = True)</target>
        </trans-unit>
        <trans-unit id="b7d475674c874c83038efb538e96bcdb42ffeae6" translate="yes" xml:space="preserve">
          <source>@task(queue=&quot;myqueue&quot;, countdown=5)</source>
          <target state="translated">@tarea (cola = &quot;myqueue&quot;, cuenta atr&amp;aacute;s = 5)</target>
        </trans-unit>
        <trans-unit id="ac00d60d81389be7f3fd8d00de81c4fbca691370" translate="yes" xml:space="preserve">
          <source>@task(transactional=True)</source>
          <target state="translated">@tarea (transaccional = verdadero)</target>
        </trans-unit>
        <trans-unit id="c8ccaad41959b389b34b8bb40b88edd185119a57" translate="yes" xml:space="preserve">
          <source>Add it at the top of the list (to make sure other rules don't override it).</source>
          <target state="translated">Añádelo al principio de la lista (para asegurarse de que otras reglas no lo anulen).</target>
        </trans-unit>
        <trans-unit id="f46f924f3dd325c4cc923d65f7c4647e0c9e4ee2" translate="yes" xml:space="preserve">
          <source>App Engine passes useful information to your task in headers, for example X-Appengine-TaskRetryCount.</source>
          <target state="translated">El App Engine pasa información útil a su tarea en los encabezados,por ejemplo X-Appengine-TaskRetryCount.</target>
        </trans-unit>
        <trans-unit id="4fb9adf79a619d62b9c88e1a29f77b44208848c7" translate="yes" xml:space="preserve">
          <source>Change to your Python App Engine project's root folder and do the following:</source>
          <target state="translated">Cambie a la carpeta raíz de su proyecto Python App Engine y haga lo siguiente:</target>
        </trans-unit>
        <trans-unit id="12144378a0eaa167a801e723f71fd614ffc5f16a" translate="yes" xml:space="preserve">
          <source>Details of the arguments allowed to Tasks are available [here](https://cloud.google.com/appengine/docs/python/refdocs/google.appengine.api.taskqueue), under **class google.appengine.api.taskqueue.Task(payload=None, \*\*kwargs)**. The task decorator supports a couple of extra ones, detailed below.</source>
          <target state="translated">Los detalles de los argumentos permitidos a Tasks están disponibles [aquí](https://cloud.google.com/appengine/docs/python/refdocs/google.appengine.api.taskqueue),bajo **clase google.appengine.api.taskqueue.Task(payload=None,\*\*kwargs)**.El decorador de tareas soporta un par de extras,detallados a continuación.</target>
        </trans-unit>
        <trans-unit id="9738fe64b2cb2c29aae04a2ba701ffc528018fee" translate="yes" xml:space="preserve">
          <source>If you'd like access to headers in your function (a dictionary of headers passed to your task, it's a web request after all), set includeheaders=True in your call to @task. You'll also need to accept the headers argument in your function.</source>
          <target state="translated">Si desea acceder a los encabezados de su función (un diccionario de encabezados pasados a su tarea,es una solicitud web después de todo),establezca includeheaders=True en su llamada a @task.También tendrás que aceptar el argumento de las cabeceras en tu función.</target>
        </trans-unit>
        <trans-unit id="ce2338ca262f47679d2fd455bc16d1833a8f6a58" translate="yes" xml:space="preserve">
          <source>Just call the function normally, eg:</source>
          <target state="translated">Sólo llama a la función normalmente,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1d55cbc7a6927d6b77619e7a724106c44374bc28" translate="yes" xml:space="preserve">
          <source>Or add it to your requirements.txt. You'll also need to set up vendoring, see [app engine vendoring instructions here](https://cloud.google.com/appengine/docs/python/tools/using-libraries-python-27).</source>
          <target state="translated">O añádalo a sus requerimientos.También tendrá que establecer la venta,vea [instrucciones de venta del motor de aplicación aquí](https://cloud.google.com/appengine/docs/python/tools/using-libraries-python-27).</target>
        </trans-unit>
        <trans-unit id="0191ff2b143de0cbaf1f635d892899442e64b318" translate="yes" xml:space="preserve">
          <source>Pass transactional=True to have your [task launch transactionally](https://cloud.google.com/appengine/docs/python/datastore/transactions#transactional_task_enqueuing). eg:</source>
          <target state="translated">Pass transactional=True to have your [task launch transactionally](https://cloud.google.com/appengine/docs/python/datastore/transactions#transactional_task_enqueuing).eg:</target>
        </trans-unit>
        <trans-unit id="d86b8176bfbc0671352aa19f0e8e60dfb47b0bd4" translate="yes" xml:space="preserve">
          <source>The functions and arguments are being serialised and deserialised for you behind the scenes.</source>
          <target state="translated">Las funciones y los argumentos se están serializando y deserializando para ti entre bastidores.</target>
        </trans-unit>
        <trans-unit id="b1f166dfd9fc8026131c9c68ba1bda0f1bc69bff" translate="yes" xml:space="preserve">
          <source>The most basic element of the taskutils library is task(). This decorator function is designed to be used as a replacement for [deferred](https://cloud.google.com/appengine/articles/deferred).</source>
          <target state="translated">El elemento más básico de la biblioteca de taskutils es task().Esta función decoradora está diseñada para ser usada como reemplazo de [diferido](https://cloud.google.com/appengine/articles/deferred).</target>
        </trans-unit>
        <trans-unit id="0cda1a096c2f991d4b9b53231e547953c5f9b51d" translate="yes" xml:space="preserve">
          <source>Then you can call the function returned by task when you are ready:</source>
          <target state="translated">Entonces puedes llamar a la función devuelta por tarea cuando estés listo:</target>
        </trans-unit>
        <trans-unit id="0f770166dc73c0acdd7aa075079fd13dc6165c0b" translate="yes" xml:space="preserve">
          <source>This is the repo for the appengine task utils library. It generates the appenginetaskutils package</source>
          <target state="translated">Este es el repo para la biblioteca de utilidades de la tarea de Appengine.Genera el paquete appenginetaskutils</target>
        </trans-unit>
        <trans-unit id="850b2a6d13dcdd94cc8480f9c2fbfc651419527e" translate="yes" xml:space="preserve">
          <source>This rule creates a generic handler for task to defer work to background push tasks.</source>
          <target state="translated">Esta regla crea un manejador genérico de tareas para diferir el trabajo a tareas de empuje de fondo.</target>
        </trans-unit>
        <trans-unit id="9d2950d3fadfa31eadb1c5f9c2d18d17dd708a76" translate="yes" xml:space="preserve">
          <source>Use the python package for this library. You can find the package online [here](https://pypi.python.org/pypi/appenginetaskutils).</source>
          <target state="translated">Usa el paquete de pitón para esta biblioteca.Puedes encontrar el paquete en línea [aquí](https://pypi.python.org/pypi/appenginetaskutils).</target>
        </trans-unit>
        <trans-unit id="f871ebd905ab4626d1fc77359989d23cae76a5f4" translate="yes" xml:space="preserve">
          <source>Utilities for using appengine tasks. Inspired by deferred.</source>
          <target state="translated">Utilidades para el uso de las tareas de los motores de aplicación.Inspirado en el diferido.</target>
        </trans-unit>
        <trans-unit id="bc771d5e864b37b4be2085f01a097878246560df" translate="yes" xml:space="preserve">
          <source>When enqueuing a background task, the App Engine Task and TaskQueue libraries can take a set of parameters. You can pass these to the decorator:</source>
          <target state="translated">Al hacer una cola de tareas en segundo plano,las bibliotecas de Tareas y Colas de Tareas del Motor de Aplicaciones pueden tomar un conjunto de parámetros.Puedes pasárselos al decorador:</target>
        </trans-unit>
        <trans-unit id="d52735f9a805e41ffdc6b52a51e65dcb256d03b0" translate="yes" xml:space="preserve">
          <source>When using deferred you have a builtin to configure in app.yaml to make it work. For taskutils.task, you need to add the following to your app.yaml and/or \&amp;lt;servicename\&amp;gt;.yaml file:</source>
          <target state="translated">Cuando usa diferido, tiene un incorporado para configurar en app.yaml para que funcione. Para taskutils.task, debe agregar lo siguiente a su archivo app.yaml y / o \ &amp;lt;servicename \&amp;gt;. Yaml:</target>
        </trans-unit>
        <trans-unit id="db6af1ee8703b648c72ffb2cf3f519ebbe2ac127" translate="yes" xml:space="preserve">
          <source>When using deferred, all your calls are logged as /_ah/queue/deferred. But @task uses a url of the form /_ah/task/\&amp;lt;module\&amp;gt;/\&amp;lt;function\&amp;gt;, eg:</source>
          <target state="translated">Cuando se usa diferido, todas sus llamadas se registran como / _ah / queue / deferred. Pero @task usa una URL de la forma / _ah / task / \ &amp;lt;module \&amp;gt; / \ &amp;lt;function \&amp;gt;, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="760ed868dd92d8c8c53164416ad4c90eca5a5093" translate="yes" xml:space="preserve">
          <source>You can also use task to decorate a function on the fly, like this:</source>
          <target state="translated">También puedes usar la tarea para decorar una función sobre la marcha,como esta:</target>
        </trans-unit>
        <trans-unit id="2f8f7cc0f11a9545a1d5abd8760b93e0c1e8db48" translate="yes" xml:space="preserve">
          <source>You can import task into your modules like this:</source>
          <target state="translated">Puedes importar la tarea en tus módulos de esta manera:</target>
        </trans-unit>
        <trans-unit id="7d9ffbdce08069aa047abca032e61642429a9cce" translate="yes" xml:space="preserve">
          <source>You can take any function and make it run in a separate task, like this:</source>
          <target state="translated">Puedes tomar cualquier función y hacerla funcionar en una tarea separada,como esta:</target>
        </trans-unit>
        <trans-unit id="d000fa8b23a7b63745244dff3c5486e801759186" translate="yes" xml:space="preserve">
          <source>You can use @task on any function, including nested functions, recursive functions, recursive nested functions, the sky is the limit. This is possible because of use of [yccloudpickle](https://medium.com/the-infinite-machine/python-function-serialisation-with-yccloudpickle-b2ff6b2ad5da#.zei3n0ibu) as the underlying serialisation library.</source>
          <target state="translated">Puedes usar @task en cualquier función,incluyendo funciones anidadas,funciones recursivas,funciones recursivas anidadas,el cielo es el límite.Esto es posible gracias al uso de [yccloudpickle](https://medium.com/the-infinite-machine/python-function-serialisation-with-yccloudpickle-b2ff6b2ad5da#.zei3n0ibu)como la biblioteca de serialización subyacente.</target>
        </trans-unit>
        <trans-unit id="066edd7a356d02e27d2c9179e3f34db5141e50fa" translate="yes" xml:space="preserve">
          <source>You could do both of these steps at once, too:</source>
          <target state="translated">También podrías hacer los dos pasos a la vez:</target>
        </trans-unit>
        <trans-unit id="cde8c9417740e82e0fe7dfce56f52f8b1ae5126d" translate="yes" xml:space="preserve">
          <source>Your function can also have arguments, including other functions:</source>
          <target state="translated">Su función también puede tener argumentos,incluyendo otras funciones:</target>
        </trans-unit>
        <trans-unit id="bbcd418870deeb7ec66cc864408cb2fcc3cdc756" translate="yes" xml:space="preserve">
          <source>def anotherfunction():</source>
          <target state="translated">def otra función:</target>
        </trans-unit>
        <trans-unit id="e9b90d724c9dfe00d8d4198583e6dedc87a9d8bb" translate="yes" xml:space="preserve">
          <source>def dosomethingwithobject(object):</source>
          <target state="translated">def dosomethingwithobject(objeto):</target>
        </trans-unit>
        <trans-unit id="c016acea4c8f4f9d423424c23e347f0dbd77588c" translate="yes" xml:space="preserve">
          <source>def myfunction():</source>
          <target state="translated">def mi función:</target>
        </trans-unit>
        <trans-unit id="b6e7be14fa406c927e22044738b9473bc85aa1d6" translate="yes" xml:space="preserve">
          <source>def myfunctionwithheaders(amount, headers):</source>
          <target state="translated">def mi función con cabezas (cantidad,cabezas):</target>
        </trans-unit>
        <trans-unit id="e43f594b3e4ae67b3b520f24ec9f2f7f00576733" translate="yes" xml:space="preserve">
          <source>def myinnerfunction(objects):</source>
          <target state="translated">def mi función de inteligencia (objetos):</target>
        </trans-unit>
        <trans-unit id="fdd5c19b876f3a239558b0cff7b1289d517c4870" translate="yes" xml:space="preserve">
          <source>def myouterfunction(mapf):</source>
          <target state="translated">def mi función (mapf):</target>
        </trans-unit>
        <trans-unit id="71b6ad9525f5c3545ae4249dbc9c20367e4f219a" translate="yes" xml:space="preserve">
          <source>def myserioustransactionaltask():</source>
          <target state="translated">def myserioustransactionaltask():</target>
        </trans-unit>
        <trans-unit id="78cbc888767676aa153489710ae7e2a9236b735c" translate="yes" xml:space="preserve">
          <source>def somefunction(a, b):</source>
          <target state="translated">def alguna función (a,b):</target>
        </trans-unit>
        <trans-unit id="f7bf8a7ed1539c05bf8c227297f26eb94e4ee005" translate="yes" xml:space="preserve">
          <source>for object in objects:</source>
          <target state="translated">para los objetos en los objetos:</target>
        </trans-unit>
        <trans-unit id="45858e62ee4b57fa4681ef3d4bb9d41a64917604" translate="yes" xml:space="preserve">
          <source>for objects in objectslist:</source>
          <target state="translated">para los objetos de la lista de objetos:</target>
        </trans-unit>
        <trans-unit id="d5b01310c2ed6cee331a6fbfa9a711e2a0e7c637" translate="yes" xml:space="preserve">
          <source>from taskutils import task</source>
          <target state="translated">de la tarea de importación de taskutils</target>
        </trans-unit>
        <trans-unit id="cd94280eda001520a581e6af07b0fc256def82e0" translate="yes" xml:space="preserve">
          <source>handlers:</source>
          <target state="translated">...los manipuladores:</target>
        </trans-unit>
        <trans-unit id="72bfac6cfb4e15b40eeb55b67722f5f4fcc78713" translate="yes" xml:space="preserve">
          <source>login: admin</source>
          <target state="translated">login:admin</target>
        </trans-unit>
        <trans-unit id="6d6a07212881b91b7b9ad8289affa94ee7a5f9fa" translate="yes" xml:space="preserve">
          <source>mapf(object)</source>
          <target state="translated">mapf(objeto)</target>
        </trans-unit>
        <trans-unit id="3b8dd8681687314e52e8f5a3021a652bacfae46f" translate="yes" xml:space="preserve">
          <source>myfunction()</source>
          <target state="translated">mi función</target>
        </trans-unit>
        <trans-unit id="3538d9d5bd4bcebdf177820f52e9521d06fa0db4" translate="yes" xml:space="preserve">
          <source>myfunctionwithheaders(10)</source>
          <target state="translated">mi función con las cabezas(10)</target>
        </trans-unit>
        <trans-unit id="32f630fccee8b7ee5aac0d48c9d22bffce81ac73" translate="yes" xml:space="preserve">
          <source>myinnerfunction(objects)</source>
          <target state="translated">mi función principal (objetos)</target>
        </trans-unit>
        <trans-unit id="f63f5e8d104eee95e376c922422a901f0aab730b" translate="yes" xml:space="preserve">
          <source>myouterfunction(dosomethingwithobject)</source>
          <target state="translated">mi función (algo con el objeto)</target>
        </trans-unit>
        <trans-unit id="74d439ce8adae4fa5477ff54c7caf25fd223a828" translate="yes" xml:space="preserve">
          <source>script: taskutils.app</source>
          <target state="translated">guión:taskutils.app</target>
        </trans-unit>
        <trans-unit id="1e30c6fe302e99a1cb7ea2a8390b21d6f52b86cf" translate="yes" xml:space="preserve">
          <source>somefunctionintask = task(somefunction, queue=&quot;myqueue&quot;)</source>
          <target state="translated">somefunctionintask=task(somefunction,queue=&quot;mi cola&quot;)</target>
        </trans-unit>
        <trans-unit id="29349de61956cb5c0014d887ec49c2c31e24805d" translate="yes" xml:space="preserve">
          <source>somefunctionintask(1, 2)</source>
          <target state="translated">alguna funcion en la tarea (1,2)</target>
        </trans-unit>
        <trans-unit id="6998274698d4c3337ed36b5d08c2468285462017" translate="yes" xml:space="preserve">
          <source>task(somefunction, queue=&quot;myqueue&quot;)(1, 2)</source>
          <target state="translated">task(somefunction,queue=&quot;myqueue&quot;)(1,2)</target>
        </trans-unit>
        <trans-unit id="c25be0b5376306bf78e9d792b592ff61a0105f6b" translate="yes" xml:space="preserve">
          <source>which makes debugging a lot easier.</source>
          <target state="translated">lo que hace que la depuración sea mucho más fácil.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
