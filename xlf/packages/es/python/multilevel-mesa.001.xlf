<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/multilevel-mesa/">
    <body>
      <group id="multilevel-mesa">
        <trans-unit id="c9a3ef5798f6fbb18f2688c2f8e055ace57d20e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Figura 1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3266723dce3df48a82cff590c881e33eeced350f" translate="yes" xml:space="preserve">
          <source>As Multi-level Mesa replaces the normal schedule function of Mesa, it must also have the basic scheduling functions. These are the add and remove functions, which remain at the individual agent level but have a higher degree of complexity as agents must be kept in multiple managers to ensure agents are being properly 'stepped' in the schedule or removed if the agent 'dies'. Multi-level Mesa also replaces Mesa's step function. Its primary schedule is random activation, but this can be turned off for an ordered activation and a staged activation can be executed through the agent_type manager. A future extension of MultiLevel_Mesa would be to store different schedules based on different network configurations. This would save computation time so specific agent schedules would be created less often. For example, if one was recreating daily life of a population and the night and morning hours used one configuration, while the daytime hours would use a different configuration, each calling different behavior routines for the agents.</source>
          <target state="translated">Como Mesa multinivel reemplaza la función normal de programación de Mesa,también debe tener las funciones básicas de programación.Estas son las funciones de añadir y quitar,que permanecen en el nivel de agente individual pero tienen un mayor grado de complejidad,ya que los agentes deben mantenerse en múltiples gerentes para asegurar que los agentes están siendo adecuadamente &quot;escalonados&quot; en el horario o eliminados si el agente &quot;muere&quot;.La Mesa de múltiples niveles también reemplaza la función de paso de la Mesa.Su programa principal es la activación aleatoria,pero puede desactivarse para una activación ordenada y una activación por etapas puede ejecutarse a través del gestor del tipo de agente.Una futura extensión de MultiLevel_Mesa sería almacenar diferentes horarios basados en diferentes configuraciones de red.Esto ahorraría tiempo de cálculo,por lo que se crearían menos programas específicos de agentes.Por ejemplo,si se estuviera recreando la vida diaria de una población y las horas nocturnas y matutinas usaran una configuración,mientras que las horas diurnas usarían una configuración diferente,cada una llamando a diferentes rutinas de comportamiento para los agentes.</target>
        </trans-unit>
        <trans-unit id="435c5fe50be2432abc7056a8f0280112c7eab7a6" translate="yes" xml:space="preserve">
          <source>As shown in figure 1, Multi-level Mesa has two primary approaches for facilitating a multi-level ABM, an explicit approach and a network approach. Within these two approaches, Multi-level Mesa turns the desired agents into a bilateral link list which form the groups. Each input of agents is transformed into a network edge which forms the groups or adds agents to an existing group. The use of links is also used to disband groups or remove agents from the group. These functions then create a more dynamic schedule with modules of agent within hierarchies.</source>
          <target state="translated">Como se muestra en la figura 1,la Mesa Multinivel tiene dos enfoques principales para facilitar una GPA multinivel,un enfoque explícito y un enfoque de red.Dentro de estos dos enfoques,la Mesa Multinivel convierte a los agentes deseados en una lista de enlaces bilaterales que forman los grupos.Cada entrada de agentes se transforma en un borde de la red que forma los grupos o añade agentes a un grupo existente.El uso de los enlaces también se utiliza para disolver grupos o eliminar agentes del grupo.Estas funciones crean entonces un programa más dinámico con módulos de agente dentro de las jerarquías.</target>
        </trans-unit>
        <trans-unit id="c43b278aa5d16fe58da0b687c4717aa69e488770" translate="yes" xml:space="preserve">
          <source>Attribute:</source>
          <target state="translated">Atributo:</target>
        </trans-unit>
        <trans-unit id="b8087185e5ee37cef4c337de5697d35d75d909fd" translate="yes" xml:space="preserve">
          <source>Attributes:</source>
          <target state="translated">Atributos:</target>
        </trans-unit>
        <trans-unit id="47794dc9c0ee0cf4bdc68fe1ca73422a643bf6dd" translate="yes" xml:space="preserve">
          <source>Creating an Multi-level Mesa Instance and the Multi-level Mesa Managers</source>
          <target state="translated">Creando una Instancia de Mesa Multinivel y los Administradores de Mesa Multinivel</target>
        </trans-unit>
        <trans-unit id="035b08f4549a3d2315c654e9b218fcedcabb2cd5" translate="yes" xml:space="preserve">
          <source>Creating an instance of Multi-level Mesa requires no parameters, and initiates one attribute and six managers.</source>
          <target state="translated">La creación de una instancia de Mesa Multinivel no requiere parámetros,e inicia un atributo y seis gerentes.</target>
        </trans-unit>
        <trans-unit id="21d5889502bfd325a4000763fbf071309d470790" translate="yes" xml:space="preserve">
          <source>Example Instance and Use</source>
          <target state="translated">Ejemplo de instancia y uso</target>
        </trans-unit>
        <trans-unit id="7c8d8b87efb5b6548c0f1eecae857eb585305992" translate="yes" xml:space="preserve">
          <source>Examples of Multi-Level Mesa</source>
          <target state="translated">Ejemplos de Mesa Multinivel</target>
        </trans-unit>
        <trans-unit id="eb5f3aaed755a6adbc164e2ec1136429ba6818f5" translate="yes" xml:space="preserve">
          <source>Examples of multilevel_mesa are available at [Sugarscape Models]:&lt;a href=&quot;https://github.com/tpike3/SugarScape&quot;&gt;https://github.com/tpike3/SugarScape&lt;/a&gt;</source>
          <target state="translated">Hay ejemplos de multilevel_mesa disponibles en [Sugarscape Models]: &lt;a href=&quot;https://github.com/tpike3/SugarScape&quot;&gt;https://github.com/tpike3/SugarScape&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="566fecd1ecc51ba47d2e6d3b8ea1b31b4356c09c" translate="yes" xml:space="preserve">
          <source>Forming and Dissolving Meta-Agents</source>
          <target state="translated">Formación y disolución de meta-agentes</target>
        </trans-unit>
        <trans-unit id="dc243838c0b1944f7a3a1538281e4a0b41f5c92c" translate="yes" xml:space="preserve">
          <source>Group.active = status of Group</source>
          <target state="translated">Grupo.activo=estado del Grupo</target>
        </trans-unit>
        <trans-unit id="6a9c44634869fc5cf1a1860aa102d7a176dd6ebd" translate="yes" xml:space="preserve">
          <source>Group.agents_by_type = dictionary</source>
          <target state="translated">Group.agents_by_type=diccionario</target>
        </trans-unit>
        <trans-unit id="842bfc15872021302f23c6c934ed6ac6cb340750" translate="yes" xml:space="preserve">
          <source>Group.meta_step() = policies to dictate sub_agent behavior</source>
          <target state="translated">Group.meta_step()=políticas para dictar el comportamiento del subagente</target>
        </trans-unit>
        <trans-unit id="a146c717a542871b8c5e5d388ca77dc90f6899e8" translate="yes" xml:space="preserve">
          <source>Group.net = NetworkX graph</source>
          <target state="translated">Group.net=Gráfico NetworkX</target>
        </trans-unit>
        <trans-unit id="c0ccf89b834f406ca2fec502077ac30f5565a4ba" translate="yes" xml:space="preserve">
          <source>Group.policy = object of group policies</source>
          <target state="translated">Política.de.grupo=objeto de las políticas de grupo</target>
        </trans-unit>
        <trans-unit id="efce0356075f72250f5b43c5db802bca2a7d8146" translate="yes" xml:space="preserve">
          <source>Group.step() = sub_agent behaviors</source>
          <target state="translated">Group.step()=comportamientos de subagente</target>
        </trans-unit>
        <trans-unit id="55fc06e84f4805b742bda2032265fe0a415c6969" translate="yes" xml:space="preserve">
          <source>Group.sub_agents = dictionary</source>
          <target state="translated">Group.sub_agents=diccionario</target>
        </trans-unit>
        <trans-unit id="9d1822c1ae5af2003b1434efdb49c9c6a13c1c1a" translate="yes" xml:space="preserve">
          <source>Happy Modeling!</source>
          <target state="translated">¡Feliz modelaje!</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="7ff11086b20a443877fdff663fd8b36dda49ec5b" translate="yes" xml:space="preserve">
          <source>Keyword parameters:</source>
          <target state="translated">Parámetros de palabras clave:</target>
        </trans-unit>
        <trans-unit id="398b3a5600f4f0c2445df305f4e7c034bfc164f4" translate="yes" xml:space="preserve">
          <source>Main Functions:</source>
          <target state="translated">Funciones principales:</target>
        </trans-unit>
        <trans-unit id="0915b5eda410b7fd81a958b942357c3e44c16831" translate="yes" xml:space="preserve">
          <source>Multi-Level Mesa</source>
          <target state="translated">Mesa multinivel</target>
        </trans-unit>
        <trans-unit id="759380268ae70321d8b068a6285b8cb076a34faf" translate="yes" xml:space="preserve">
          <source>Multi-level Mesa has three main components. First, a collection of managers which tracks the agents, the modules of agents (groups), the network of agents, and agents who belong to an existing group, and the schedule. Second, a series of functions which provides the user different options to form groups or dissolve them. Third, a group class which allows for the inclusion of different policies, manages the behavior and status of the group, and implicitly produces hierarchies within the complex system. (Figure 1)</source>
          <target state="translated">La Mesa Multinivel tiene tres componentes principales.En primer lugar,una colección de administradores que rastrea los agentes,los módulos de agentes (grupos),la red de agentes y los agentes que pertenecen a un grupo existente,y el horario.En segundo lugar,una serie de funciones que ofrecen al usuario diferentes opciones para formar grupos o disolverlos.Tercero,una clase de grupo que permite la inclusión de diferentes políticas,gestiona el comportamiento y el estado del grupo,e implícitamente produce jerarquías dentro del sistema complejo.(Figura 1)</target>
        </trans-unit>
        <trans-unit id="612cdf1dcaad735e8e0faf18fdc420f5c85a7b0c" translate="yes" xml:space="preserve">
          <source>Multi-level Mesa is a library which supports Python's Agent Based Modeling Library Mesa. Multi-level Mesa's views complex systems as adaptive networks and uses a network graph structure to allow dynamic management of agent modules (groups) and model schedules.</source>
          <target state="translated">Multi-level Mesa es una biblioteca que soporta la Biblioteca de Modelado Basado en Agentes de Python Mesa.Multi-level Mesa ve los sistemas complejos como redes adaptables y utiliza una estructura gráfica de red para permitir la gestión dinámica de los módulos de agentes (grupos)y los programas de modelos.</target>
        </trans-unit>
        <trans-unit id="a3b8a3df7a895fa349a319a01d693dbf13d21fa8" translate="yes" xml:space="preserve">
          <source>Multi-level Mesa requires</source>
          <target state="translated">La Mesa de varios niveles requiere</target>
        </trans-unit>
        <trans-unit id="d852f990ae118bf9d73b83b33c6ebe19dce0deb2" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa._agents which is an ordered dictionary (a hash-table consisting of a key:value pair) that holds every agent added to the instance</source>
          <target state="translated">MultiLevel_Mesa._agentes que es un diccionario ordenado (una tabla hash que consiste en un par clave:valor)que contiene todos los agentes añadidos a la instancia</target>
        </trans-unit>
        <trans-unit id="1a3a782c952762649ccf732af8d2eb2cdec32141" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.agents_by_type uses a dictionary of dictionaries to track agents by type. This feature allows for faster reference of specific types of agents when manipulating groups or schedules.</source>
          <target state="translated">MultiLevel_Mesa.agentes_por_tipo utiliza un diccionario de diccionarios para rastrear agentes por tipo.Esta característica permite una referencia más rápida de tipos específicos de agentes cuando se manipulan grupos u horarios.</target>
        </trans-unit>
        <trans-unit id="82a39e8becc21a50fdc3da1656d877c66c59e5b0" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.group_net takes a Boolean and is defaulted to False. This parameter tells the instance whether or not a group agent can form a larger group agent with other group agents.</source>
          <target state="translated">MultiLevel_Mesa.group_net toma un Booleano y se le da el valor por defecto de Falso.Este parámetro le dice a la instancia si un agente de grupo puede o no formar un agente de grupo más grande con otros agentes de grupo.</target>
        </trans-unit>
        <trans-unit id="500a2958bb0dc817cb193a0c12914f3485536b30" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.groups is an ordered dictionary and tracks the groups within the model performing the same function of tracking groups as the agents ordered dictionary.</source>
          <target state="translated">MultiLevel_Mesa.groups es un diccionario ordenado y rastrea los grupos dentro del modelo realizando la misma función de rastreo de grupos que el diccionario ordenado de los agentes.</target>
        </trans-unit>
        <trans-unit id="bbf83e090b2d38e45bf1f744b29e4e21b577fcde" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.id_counter, provides a unique_id for each group</source>
          <target state="translated">MultiLevel_Mesa.id_counter,provee un único_id para cada grupo</target>
        </trans-unit>
        <trans-unit id="ab5904bab85a853408025c1ce315be6bd49d7429" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.min_for_group tells the instance the minimum number of agents which must be in a group. The min_for_group parameter has a default setting of 2.</source>
          <target state="translated">MultiLevel_Mesa.min_for_group le dice a la instancia el número mínimo de agentes que deben estar en un grupo.El parámetro min_for_group tiene un ajuste por defecto de 2.</target>
        </trans-unit>
        <trans-unit id="4c026a85c445ae21b2abb4c28d4a04aad09ca117" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.net is an instance of a NewtorkX graph. This feature provides the critical structure for tracking and managing agents and groups.</source>
          <target state="translated">MultiLevel_Mesa.net es una instancia de un gráfico de NewtorkX.Esta característica proporciona la estructura crítica para el seguimiento y la gestión de agentes y grupos.</target>
        </trans-unit>
        <trans-unit id="b6981411887768aa23d0805f1ce7fff1301a8d69" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.reverse_groups is a dictionary of dictionaries of sets. The first dictionary key is the agent id, while the second is group types (link and link values) and the set is the group ids to which the agent belongs in those group types.</source>
          <target state="translated">MultiLevel_Mesa.reverse_groups es un diccionario de diccionarios de conjuntos.La primera clave del diccionario es el id del agente,mientras que la segunda son los tipos de grupo (valores de enlace y de vínculo)y el conjunto es el id de grupo al que pertenece el agente en esos tipos de grupo.</target>
        </trans-unit>
        <trans-unit id="cf3d87d029822593e1ab5bc21bf9729f7536fd4d" translate="yes" xml:space="preserve">
          <source>MultiLevel_Mesa.schedule replaces the Mesa schedule and is an ordered dictionary which manages the agents and when they execute a step function.</source>
          <target state="translated">MultiLevel_Mesa.schedule reemplaza el horario de la Mesa y es un diccionario ordenado que gestiona los agentes y cuando ejecutan una función de paso.</target>
        </trans-unit>
        <trans-unit id="ca7f2075793db109cb2317a4a97ca56aebe3ffdd" translate="yes" xml:space="preserve">
          <source>Network Defined Dissolution: Multi-level_Mesa.reassess_net_group</source>
          <target state="translated">Disolución definida por la red:Grupo_de_red_multi-nivel_Mesa.reassess</target>
        </trans-unit>
        <trans-unit id="d1363385e386dee5f55a93094c972a74d2d48c97" translate="yes" xml:space="preserve">
          <source>Network Defined Formation: Multi-level_Mesa.net_group</source>
          <target state="translated">Formación definida por la red:Grupo_Mesa.net de varios niveles</target>
        </trans-unit>
        <trans-unit id="20a6d7f2088fc95d97daf986670199e6be687acb" translate="yes" xml:space="preserve">
          <source>Network Dissolution Function</source>
          <target state="translated">Función de disolución de la red</target>
        </trans-unit>
        <trans-unit id="bdd82605e3dc3d698d45840be249fed36a34b7cc" translate="yes" xml:space="preserve">
          <source>Network Formation Function</source>
          <target state="translated">Función de formación de la red</target>
        </trans-unit>
        <trans-unit id="55fe774102e304e0470a2916dc3e124f51c6f147" translate="yes" xml:space="preserve">
          <source>Provides Extension module to Mesa to allow for Hierarchies and Modules of Agents</source>
          <target state="translated">Proporciona un módulo de extensión a la Mesa para permitir jerarquías y módulos de agentes</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requisitos</target>
        </trans-unit>
        <trans-unit id="edb3cec927126c2f59aeacf3d2229a5df427c1f2" translate="yes" xml:space="preserve">
          <source>Schedule Functions</source>
          <target state="translated">Funciones del programa</target>
        </trans-unit>
        <trans-unit id="36b7c31c4e10000ebf134e745b744840499d5c25" translate="yes" xml:space="preserve">
          <source>Similar to Mesa, the MultiLevel_Mesa.add function requires an agent object. It also has two keyword parameters which take Boolean parameters each with a default value of True. Keyword parameter schedule adds the agent to the schedule. This is an option in case the user begins with a complex network and the agent is already part of a group. The net parameter similarly adds the agent to the NetworkX object. This is done in case the user has an agent he or she does not want to be part of the network. The Multi-level.Mesa.remove function requires an agent object. If invoked this will remove the agent from all managers as applicable. The Multi-level_Mesa.step function works in a similar way to the Mesa step function, where it iterates through each agent in schedule and executes their step function. Random activation is the default as identified by the keyword parameter shuffled. If shuffled is False it will follow the order in the ordered dictionary (the order the agents were added). The keyword parameter by_type is set to False but can take a list of agent types to simulate staged activation. Constant update provides the ability to have specific agent types activated after the more dynamic schedule. For example, an environmental variable which changes at a steady rate for each time step.</source>
          <target state="translated">Similar a Mesa,la función MultiLevel_Mesa.add requiere un objeto agente.También tiene dos parámetros de palabras clave que toman parámetros booleanos cada uno con un valor por defecto de True.El programa de parámetros de palabras clave añade el agente al programa.Esta es una opción en caso de que el usuario comience con una red compleja y el agente ya forme parte de un grupo.El parámetro de red añade el agente al objeto NetworkX de forma similar.Esto se hace en caso de que el usuario tenga un agente que no quiera formar parte de la red.La función Multi-level.Mesa.remove requiere un objeto agente.Si se invoca,esto eliminará el agente de todos los administradores según corresponda.La función Multi-level_Mesa.step funciona de forma similar a la función de paso de Mesa,donde itera a través de cada agente en horario y ejecuta su función de paso.La activación aleatoria es la predeterminada,identificada por el parámetro de la palabra clave barajada.Si la barajada es falsa,seguirá el orden del diccionario ordenado (el orden en que se añadieron los agentes).El parámetro de la palabra clave por_tipo se establece en False pero puede tomar una lista de tipos de agentes para simular la activación por etapas.La actualización constante proporciona la capacidad de tener tipos de agentes específicos activados después de la programación más dinámica.Por ejemplo,una variable ambiental que cambia a un ritmo constante para cada paso de tiempo.</target>
        </trans-unit>
        <trans-unit id="428c367fb7ad0a7d3a822102fd7437d4785f9888" translate="yes" xml:space="preserve">
          <source>Six Managers:</source>
          <target state="translated">Seis gerentes:</target>
        </trans-unit>
        <trans-unit id="d875696ff97cd2193fbcb1e6a086b94c9c5ce3db" translate="yes" xml:space="preserve">
          <source>The Group class introduces hierarchy into the ABM. The Group class performs similar functions to Multi-level Mesa or Mesa's time module. The Group class has three managers, which includes a dictionary of the agents which belong to the Group, a dictionary of dictionaries with the agents in the Group by type and a NetworkX graph object of the sub_agents. The Group then has three attributes to make it easier for users to employ the Group. The first attribute is Group.active which is a Boolean value to help users activate and deactivate Groups as necessary. The next two attributes are Group.type and Group.&lt;strong&gt;str&lt;/strong&gt; which both equal &quot;group&quot; and allow the user greater ease in identifying and performing functions on the groups. The final attribute of the Group is its policy object, this object is passed in by the user and provides the Group behavior. The behavior of the Groups and its internal agents is done with two step functions the Group.group_step which calls the policy function and the individual agent step functions, again using a random order, but with the same options of the MultiLevel_Mesa.step function to dictate schedule ordering processes.</source>
          <target state="translated">La clase Group introduce la jerarqu&amp;iacute;a en el ABM. La clase de grupo realiza funciones similares a las de Mesa multinivel o al m&amp;oacute;dulo de tiempo de Mesa. La clase Grupo tiene tres gestores, que incluye un diccionario de los agentes que pertenecen al Grupo, un diccionario de diccionarios con los agentes del Grupo por tipo y un objeto gr&amp;aacute;fico NetworkX de los sub_agentes. El Grupo tiene tres atributos para facilitar a los usuarios el empleo del Grupo. El primer atributo es Group.active, que es un valor booleano para ayudar a los usuarios a activar y desactivar Grupos seg&amp;uacute;n sea necesario. Los siguientes dos atributos son Group.type y Group. &lt;strong&gt;str&lt;/strong&gt;que son iguales a &quot;grupo&quot; y permiten al usuario una mayor facilidad para identificar y realizar funciones en los grupos. El atributo final del Grupo es su objeto de pol&amp;iacute;tica, este objeto lo pasa el usuario y proporciona el comportamiento del Grupo. El comportamiento de los Grupos y sus agentes internos se realiza con funciones de dos pasos, el Group.group_step que llama a la funci&amp;oacute;n de pol&amp;iacute;tica y las funciones de paso del agente individual, nuevamente usando un orden aleatorio, pero con las mismas opciones de la funci&amp;oacute;n MultiLevel_Mesa.step para dictar programar procesos de pedido.</target>
        </trans-unit>
        <trans-unit id="aa491434aef2bbc20d2898cad8850c5dae27294f" translate="yes" xml:space="preserve">
          <source>The MetaAgent Class</source>
          <target state="translated">La clase de MetaAgente</target>
        </trans-unit>
        <trans-unit id="9b88c454df4f4c918cebd63180fd3e7ae8c741a2" translate="yes" xml:space="preserve">
          <source>The Multi-level Mesa Functions</source>
          <target state="translated">Las funciones de la mesa multinivel</target>
        </trans-unit>
        <trans-unit id="14ff72121885339c6959e12490a5baff998d005b" translate="yes" xml:space="preserve">
          <source>The MultiLevel_Mesa.form_group function requires one parameter which is the user specified process which determines whether or not an agent should be in a group with other agents. The *args and **kwargs allows the user to pass in the parameters for this process. The determine_id parameters ensures each group gets a unique id. If default it will simply append a number based on the id_counter attribute to the string 'group'. For the user to pass in an id he or she must yield the id as the first element of a tuple generated from the yield operator from the user defined process. Users must choose this id carefully as the id is used in the set operations to merge groups. The double parameter takes a Boolean value and is defaulted to False. If True the agent will remain in the schedule as an independent entity and be added as part of the group, while if False the agent is removed. This feature is to provide users maximum flexibility for agent scheduling and group processes. The policy parameter passes in the step processes for the group, which can consist of only internal processes or can consist of group processes and then execute the individual agent processes.  The group_type parameter takes a string and allows the user to specify different types of groups so an agent can belong to different types of group such as &amp;acirc;&amp;euro;&amp;tilde;family&amp;acirc;&amp;euro;&amp;trade; and &amp;acirc;&amp;euro;&amp;tilde;firm&amp;acirc;&amp;euro;&amp;trade;.</source>
          <target state="translated">La funci&amp;oacute;n MultiLevel_Mesa.form_group requiere un par&amp;aacute;metro que es el proceso especificado por el usuario que determina si un agente debe estar o no en un grupo con otros agentes. Los * args y ** kwargs permiten al usuario pasar los par&amp;aacute;metros para este proceso. Los par&amp;aacute;metros determin_id aseguran que cada grupo obtenga una identificaci&amp;oacute;n &amp;uacute;nica. Si est&amp;aacute; predeterminado, simplemente agregar&amp;aacute; un n&amp;uacute;mero basado en el atributo id_counter a la cadena 'grupo'. Para que el usuario pase una identificaci&amp;oacute;n, debe ceder la identificaci&amp;oacute;n como el primer elemento de una tupla generada a partir del operador de rendimiento del proceso definido por el usuario. Los usuarios deben elegir esta identificaci&amp;oacute;n con cuidado, ya que la identificaci&amp;oacute;n se utiliza en las operaciones de conjunto para fusionar grupos. El par&amp;aacute;metro doble toma un valor booleano y por defecto es Falso. Si es Verdadero, el agente permanecer&amp;aacute; en el cronograma como una entidad independiente y se agregar&amp;aacute; como parte del grupo,mientras que si es False, el agente se elimina. Esta funci&amp;oacute;n proporciona a los usuarios la m&amp;aacute;xima flexibilidad para la programaci&amp;oacute;n de agentes y los procesos de grupo. El par&amp;aacute;metro de pol&amp;iacute;tica pasa en los procesos de pasos para el grupo, que pueden consistir solo en procesos internos o pueden consistir en procesos de grupo y luego ejecutar los procesos de agentes individuales. El par&amp;aacute;metro group_type toma una cadena y le permite al usuario especificar diferentes tipos de grupos para que un agente pueda pertenecer a diferentes tipos de grupos, como &quot;familia&quot; y &quot;empresa&quot;.El par&amp;aacute;metro group_type toma una cadena y le permite al usuario especificar diferentes tipos de grupos para que un agente pueda pertenecer a diferentes tipos de grupos, como &quot;familia&quot; y &quot;empresa&quot;.El par&amp;aacute;metro group_type toma una cadena y le permite al usuario especificar diferentes tipos de grupos para que un agente pueda pertenecer a diferentes tipos de grupos, como &quot;familia&quot; y &quot;empresa&quot;.</target>
        </trans-unit>
        <trans-unit id="836e6112c0bc763389cef144472c76ebb4c1bc50" translate="yes" xml:space="preserve">
          <source>The MultiLevel_Mesa.net_group function requires no parameters and will default to whether or not a link exists or not between agents. As the net_group function has no process passed in there is no way to specify a group id, the function uses the default &quot;group&quot; if groups are forming based on the presence of a link, the link_type is not the default None or the link_type_link_value, plus a number from the Multi-level_Mesa.id_counter attribute. If users decided they would like to pass in processes to provide a unique id for groups this could be added in future versions, but was not included in this version as it did not add anything substantive to the Multi-level Mesa dynamics. The link_type function allows the user to pass in what link key value should link agents together. The link_type can then be further specified with the link_value criteria. These values are also used as the dictionary keys in the Multi-level_Mesa.reverse_groups manager. The link_value can either be a string to further classify the type of link, for example family: friendly or family: angry_teenager or it can be a value such as trades: 10 (number of trades between agents), which in this case tracks a type of interaction between agents. As net_group is an additive process the value is assumed to be a threshold of greater than or equal to a value. The network can then be updated and evaluated through the other processes in the ABM using NetworkX object manipulation functions. For convenience, Multi-level_Mesa also has Multi-level_Mesa.add_links and Multi-level_Mesa.remove_links functions. These functions take a list of agents, combines them in to a list of fully connected tuples and then adds or removes the links.</source>
          <target state="translated">La función MultiLevel_Mesa.net_group no requiere de parámetros y se predeterminará si existe o no un vínculo entre los agentes.Como la función net_group no tiene ningún proceso pasado,no hay forma de especificar un id de grupo,la función utiliza el &quot;grupo&quot; por defecto si los grupos se están formando en base a la presencia de un enlace,el tipo_de_vínculo no es el Ninguno por defecto o el valor link_type_link_value,además de un número del atributo Multilevel_Mesa.id_counter.Si los usuarios decidieran que les gustaría pasar en los procesos para proporcionar un id único para los grupos,esto podría ser añadido en versiones futuras,pero no se incluyó en esta versión ya que no añadió nada sustantivo a la dinámica de la Mesa multinivel.La función link_type permite al usuario pasar el valor de la clave de enlace que debe vincular a los agentes.El tipo_vínculo puede entonces ser especificado con el criterio de valor_vínculo.Estos valores también se utilizan como claves de diccionario en el gestor de Multilevel_Mesa.reverse_groups.El link_value puede ser una cadena para clasificar aún más el tipo de enlace,por ejemplo family:friendly o family:angry_teenager o puede ser un valor como trades:10 (número de intercambios entre agentes),que en este caso sigue un tipo de interacción entre agentes.Como net_group es un proceso aditivo,se supone que el valor es un umbral mayor o igual que un valor.La red puede entonces actualizarse y evaluarse a través de los otros procesos en el ABM utilizando las funciones de manipulación de objetos de NetworkX.Para mayor comodidad,Multi-level_Mesa también tiene las funciones Multi-level_Mesa.add_links y Multi-level_Mesa.remove_links.Estas funciones toman una lista de agentes,los combinan en una lista de tuplas completamente conectadas y luego agregan o quitan los enlaces.</target>
        </trans-unit>
        <trans-unit id="fb920b58e145b1e086e21b323ffd229317ebd07d" translate="yes" xml:space="preserve">
          <source>The MultiLevel_Mesa.reassess_meta function requires one parameter, which is the process defined by the user for assessing whether or not the agent should remain within the group. The function also has a reintroduce parameter which takes a Boolean value and is defaulted to True. This parameter tells the function whether or not to reintroduce the removed agents back into the schedule.</source>
          <target state="translated">La función MultiLevel_Mesa.reassess_meta requiere un parámetro,que es el proceso definido por el usuario para evaluar si el agente debe permanecer o no dentro del grupo.La función también tiene un parámetro de reintroducción que toma un valor booleano y es por defecto True.Este parámetro indica a la función si debe o no reintroducir los agentes eliminados en el programa.</target>
        </trans-unit>
        <trans-unit id="3200bef127d2edad72f3d71838e216c1fbaab255" translate="yes" xml:space="preserve">
          <source>The MultiLevel_Mesa.reassess_net_group (Box 3-5) uses the same taxonomy of options as Multi-level_Mesa.net_group. First, an agent can be removed based on the presence of a link, the presence of a specific link type and finally the presence of a specific link value. The function will also check to ensure the meta-agent still has the minimum number of agents to remain a group which is defaulted to two with the Multi-level_Mesa.min_for_group attribute.</source>
          <target state="translated">El MultiLevel_Mesa.reassess_net_group (Cuadro 3-5)utiliza la misma taxonomía de opciones que el Multilevel_Mesa.net_group.En primer lugar,un agente puede ser eliminado en base a la presencia de un enlace,la presencia de un tipo de enlace específico y finalmente la presencia de un valor de enlace específico.La función también comprobará que el meta-agente todavía tiene el número mínimo de agentes para seguir siendo un grupo,que por defecto es de dos con el atributo Multi-level_Mesa.min_for_group.</target>
        </trans-unit>
        <trans-unit id="7aeffe395f9e52f877e34e274fedb6fa230532d4" translate="yes" xml:space="preserve">
          <source>The dissolution function for the explicit approach (although it can be used interchangeably with the network approach) is Multi-level_Mesa.reassess_group. This function iterates through each group and then uses the user defined process to assess whether or not an agent should still belong to the group. Similar to the Multi-level_Mesa.form_group this function requires a yield to provide the list of agents which should be removed and then proceeds to remove those agents while updating the appropriate managers. This function also ensures if the group fails to have a certain number of agents within the group that the group will be removed. This minimum number of agents is the min_for_group attribute of the Multi-level Mesa instance and has a default setting of two</source>
          <target state="translated">La función de disolución para el enfoque explícito (aunque puede utilizarse indistintamente con el enfoque de red)es Multi-level_Mesa.reassess_group.Esta función itera a través de cada grupo y luego utiliza el proceso definido por el usuario para evaluar si un agente debe seguir perteneciendo al grupo.De manera similar al Multi-level_Mesa.form_group esta función requiere un rendimiento para proporcionar la lista de agentes que deben ser eliminados y luego procede a eliminar esos agentes mientras se actualizan los gestores apropiados.Esta función también asegura que si el grupo no tiene un cierto número de agentes dentro del grupo,el grupo será eliminado.Este número mínimo de agentes es el atributo min_for_group de la instancia de Mesa multinivel y tiene una configuración predeterminada de dos</target>
        </trans-unit>
        <trans-unit id="37c886402f15b31f8b53b45efd57e0dc1c8f3811" translate="yes" xml:space="preserve">
          <source>The dissolution function similar to the formation function requires no parameters and will default to determining if there is a link or not. The user can also specify link types which cause agents to be removed or link values, which can again be either strings or numbers. However, as this function is not additive, if the value is a number it must be less than or equal to the given value.</source>
          <target state="translated">La función de disolución,similar a la función de formación,no requiere parámetros y determinará por defecto si existe o no un vínculo.El usuario también puede especificar los tipos de enlace que hacen que los agentes se eliminen o los valores de enlace,que pueden ser de nuevo cadenas o números.Sin embargo,como esta función no es aditiva,si el valor es un número debe ser menor o igual que el valor dado.</target>
        </trans-unit>
        <trans-unit id="e846e9a75ba79c176424d40e346b809843120f9f" translate="yes" xml:space="preserve">
          <source>The formation function of the explicit approach is MultiLevel_Mesa.form_group and takes a user defined process which must generate a list of bilaterally connected agents (Box 3-2). This approach can be computationally expensive, but is necessary to allow for the accurate recreation of the network. As dictionaries (e.g. the schedule) cannot be manipulated during iteration users must use a yield versus the more common return operator to pass the list of agents to the MultiLevel_Mesa.form_group function.</source>
          <target state="translated">La función de formación del enfoque explícito es MultiLevel_Mesa.form_group y toma un proceso definido por el usuario que debe generar una lista de agentes conectados bilateralmente (Recuadro 3-2).Este enfoque puede ser costoso desde el punto de vista computacional,pero es necesario para permitir la recreación precisa de la red.Como los diccionarios (por ejemplo,el horario)no pueden manipularse durante la iteración,los usuarios deben utilizar un rendimiento frente al operador de retorno más común para pasar la lista de agentes a la función MultiLevel_Mesa.form_group.</target>
        </trans-unit>
        <trans-unit id="51cf4d36ed362c2184a4b84f3e43995a5f93dfa7" translate="yes" xml:space="preserve">
          <source>The formation function of the network approach is Multi-level_Mesa.net_group and uses an undirected NetworkX graph object to assess what agents should form groups. With an undirected graph and as indicated in the above figure, there are three possibilities for assessing whether or not linked agents should be in the same group. First, by whether or not a link exists between the agents. Second, if a specific type of link exists (e.g. friend, enemy). Third, if a link exists which has reached a certain value.</source>
          <target state="translated">La función de formación del enfoque de red es Multi-level_Mesa.net_group y utiliza un objeto gráfico NetworkX no dirigido para evaluar qué agentes deben formar grupos.Con un gráfico no dirigido y como se indica en la figura anterior,hay tres posibilidades para evaluar si los agentes vinculados deben o no estar en el mismo grupo.En primer lugar,por si existe o no un vínculo entre los agentes.En segundo lugar,si existe un tipo específico de vínculo (por ejemplo,amigo,enemigo).Tercero,si existe un vínculo que ha alcanzado un determinado valor.</target>
        </trans-unit>
        <trans-unit id="24aae1fc396217c59c234f4357d4f58fe00d390b" translate="yes" xml:space="preserve">
          <source>The interaction of the schedule, formation and dissolution of modules of agents, and the ability for hierarchies to exist allows for the easier introduction of these key features of complex systems. The functions can be employed as part of the normal step function, at specific events or at specific intervals. By using a network data structure as the main management structure, Multi-level Mesa is able to integrate the interdependencies and changing dynamics of those interdependencies into ABM management structure providing a new dynamic which goes beyond the current multi-level approaches.</source>
          <target state="translated">La interacción del horario,la formación y disolución de los módulos de agentes,y la capacidad de que existan jerarquías permite introducir más fácilmente estas características clave de los sistemas complejos.Las funciones pueden emplearse como parte de la función de paso normal,en eventos específicos o a intervalos determinados.Al utilizar una estructura de datos en red como estructura principal de gestión,la Mesa multinivel es capaz de integrar las interdependencias y la dinámica cambiante de esas interdependencias en la estructura de gestión de la GPA,proporcionando una nueva dinámica que va más allá de los actuales enfoques multinivel.</target>
        </trans-unit>
        <trans-unit id="5e081bb2d0131bb0e9db8758d2500154e9cced20" translate="yes" xml:space="preserve">
          <source>These examples are various instantiations of the Sugar and Spice trading model described in Chapter 4 of &lt;em&gt;Growing Artificial Societies&lt;/em&gt; by ROb Axtell and Joshua Epstein.</source>
          <target state="translated">Estos ejemplos son varias instancias del modelo de comercio de az&amp;uacute;car y especias descrito en el Cap&amp;iacute;tulo 4 de &lt;em&gt;Sociedades artificiales en crecimiento&lt;/em&gt; por ROb Axtell y Joshua Epstein.</target>
        </trans-unit>
        <trans-unit id="20cf766f97f692e7ce72ffbeaa78febb6e20c005" translate="yes" xml:space="preserve">
          <source>User Defined Dissolution Process: Multi-level_Mesa.reassess_group</source>
          <target state="translated">Proceso de disolución definido por el usuario:Multi-nivel_Mesa.reassess_group</target>
        </trans-unit>
        <trans-unit id="565a6b0e22fd4f040c42d8f315e07e8e275d81fa" translate="yes" xml:space="preserve">
          <source>User Defined Formation Process Multi-level_Mesa.form_meta</source>
          <target state="translated">Proceso de Formación Definido por el Usuario Multinivel_Mesa.form_meta</target>
        </trans-unit>
        <trans-unit id="62dae151ed9c54ab314b0aff7b97a541dac292c0" translate="yes" xml:space="preserve">
          <source>User-Defined Dissolution Function</source>
          <target state="translated">Función de disolución definida por el usuario</target>
        </trans-unit>
        <trans-unit id="f13ba7910ad4cf65afc10e456e2277cec9e73d6f" translate="yes" xml:space="preserve">
          <source>User-Defined Formation Function: Multi-level_Mesa.form_group</source>
          <target state="translated">Función de formación definida por el usuario:Grupo_de_formación_multi-nivel</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
