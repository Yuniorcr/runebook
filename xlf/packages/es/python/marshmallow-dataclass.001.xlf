<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/marshmallow-dataclass/">
    <body>
      <group id="marshmallow-dataclass">
        <trans-unit id="e859ec6d61c1082228e673bdd76e448055bcb800" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/api_reference.html#marshmallow.Schema.Meta&quot;&gt;&lt;code&gt;Meta&lt;/code&gt; options&lt;/a&gt; are set the same way as a marshmallow &lt;code&gt;Schema&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/api_reference.html#marshmallow.Schema.Meta&quot;&gt; &lt;code&gt;Meta&lt;/code&gt; opciones de meta&lt;/a&gt; se establecen de la misma manera que un &lt;code&gt;Schema&lt;/code&gt; malvavisco.</target>
        </trans-unit>
        <trans-unit id="8d6276e59cd7dee0598448be374f28420c2252c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@dataclass&lt;/code&gt; shortcut</source>
          <target state="translated">&lt;code&gt;@dataclass&lt;/code&gt; atajo</target>
        </trans-unit>
        <trans-unit id="b51a248c23224bdb2f919f41517f79735a192f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Meta&lt;/code&gt; options</source>
          <target state="translated">&lt;code&gt;Meta&lt;/code&gt; opciones</target>
        </trans-unit>
        <trans-unit id="71d5fc5b8215eaacde845ccea924113778d92f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; : for translating python enums to &lt;a href=&quot;https://github.com/justanr/marshmallow_enum&quot;&gt;marshmallow-enum&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; : para traducir las enumeraciones de Python a marshmallow &lt;a href=&quot;https://github.com/justanr/marshmallow_enum&quot;&gt;-enum&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2458713fa13184e11e4eb87a3b23af37b0cc3ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;marshmallow-dataclass&lt;/code&gt; no longer supports marshmallow 2.
Install &lt;code&gt;marshmallow_dataclass&amp;lt;6.0&lt;/code&gt; if you need marshmallow 2 compatibility.</source>
          <target state="translated">&lt;code&gt;marshmallow-dataclass&lt;/code&gt; ya no admite marshmallow 2. Instale &lt;code&gt;marshmallow_dataclass&amp;lt;6.0&lt;/code&gt; si necesita compatibilidad con marshmallow 2.</target>
        </trans-unit>
        <trans-unit id="049e81ba58a945239a6a0c5aa861398c9a2f0562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;marshmallow_dataclass&lt;/code&gt; provides a &lt;code&gt;@dataclass&lt;/code&gt; decorator that behaves like the standard library's
&lt;code&gt;@dataclasses.dataclass&lt;/code&gt; and adds a &lt;code&gt;Schema&lt;/code&gt; attribute with the generated marshmallow
&lt;a href=&quot;https://marshmallow.readthedocs.io/en/2.x-line/api_reference.html#marshmallow.Schema&quot;&gt;Schema&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;marshmallow_dataclass&lt;/code&gt; proporciona una &lt;code&gt;@dataclass&lt;/code&gt; decorador que se comporta como el est&amp;aacute;ndar de la biblioteca &lt;code&gt;@dataclasses.dataclass&lt;/code&gt; y a&amp;ntilde;ade un &lt;code&gt;Schema&lt;/code&gt; atributo con el malvavisco generada &lt;a href=&quot;https://marshmallow.readthedocs.io/en/2.x-line/api_reference.html#marshmallow.Schema&quot;&gt;esquema&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d72942fb8e42b324ae2cf4a8f49cf6c30e680d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union&lt;/code&gt; : for translating python &lt;a href=&quot;https://docs.python.org/3/library/typing.html#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt; types&lt;/a&gt; to union fields.</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; : para traducir pit&amp;oacute;n &lt;a href=&quot;https://docs.python.org/3/library/typing.html#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; tipos&lt;/a&gt; de campos del sindicato.</target>
        </trans-unit>
        <trans-unit id="6cdb83c458f0d3b43d78def9d6b5665b1a1dc390" translate="yes" xml:space="preserve">
          <source>Automatic generation of &lt;a href=&quot;https://marshmallow.readthedocs.io/&quot;&gt;marshmallow&lt;/a&gt; schemas from dataclasses.</source>
          <target state="translated">Generaci&amp;oacute;n autom&amp;aacute;tica de esquemas de &lt;a href=&quot;https://marshmallow.readthedocs.io/&quot;&gt;malvavisco a&lt;/a&gt; partir de clases de datos.</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contribuyendo</target>
        </trans-unit>
        <trans-unit id="91c1db622dce21d6c161ffa4e2be4c13115d0f9a" translate="yes" xml:space="preserve">
          <source>Custom NewType declarations</source>
          <target state="translated">Declaraciones personalizadas NewType</target>
        </trans-unit>
        <trans-unit id="ebec891da2671ead2d01a96b5cc6defdea98d99f" translate="yes" xml:space="preserve">
          <source>Custom mapping between classes and fields</source>
          <target state="translated">Mapeo personalizado entre clases y campos</target>
        </trans-unit>
        <trans-unit id="579d2bc7d8bf489ae7d43529865646d08014e128" translate="yes" xml:space="preserve">
          <source>Customizing generated fields</source>
          <target state="translated">Personalizar los campos generados</target>
        </trans-unit>
        <trans-unit id="60db41edfe68e314f4a708b8ec45d3b9a166eee7" translate="yes" xml:space="preserve">
          <source>Customizing the base Schema</source>
          <target state="translated">Personalizar el esquema base</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentación</target>
        </trans-unit>
        <trans-unit id="6dba29060447a1be696d1a1e4ef68ca1c8143969" translate="yes" xml:space="preserve">
          <source>Every commit is checked with pre-commit hooks for :</source>
          <target state="translated">Cada compromiso se comprueba con ganchos de pre-compromiso para :</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="60fb3466b944f3edd9f647937117eb4f95cca200" translate="yes" xml:space="preserve">
          <source>It is also possible to derive all schemas from your own
base Schema class
(see &lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/extending.html&quot;&gt;marshmallow's documentation about extending &lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;).
This allows you to implement custom (de)serialization
behavior, for instance specifying a custom mapping between your classes and marshmallow fields,
or renaming fields on serialization.</source>
          <target state="translated">Tambi&amp;eacute;n es posible derivar todos los esquemas de su propia clase Schema base (consulte &lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/extending.html&quot;&gt;la documentaci&amp;oacute;n de marshmallow sobre c&amp;oacute;mo extender &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; ). Esto le permite implementar un comportamiento de (des) serializaci&amp;oacute;n personalizado, por ejemplo, especificando un mapeo personalizado entre sus clases y campos de malvavisco, o cambiando el nombre de los campos en la serializaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="543e5d76b49f5d1ba453600324179c44a96d8e3c" translate="yes" xml:space="preserve">
          <source>Keyword arguments to &lt;code&gt;NewType&lt;/code&gt; are passed to the marshmallow field constructor.</source>
          <target state="translated">Los argumentos de palabras clave de &lt;code&gt;NewType&lt;/code&gt; se pasan al constructor del campo marshmallow.</target>
        </trans-unit>
        <trans-unit id="1e2e290443fe30ada4f3aaa6c5102be96e0517dd" translate="yes" xml:space="preserve">
          <source>Note: Since the &lt;code&gt;.Schema&lt;/code&gt; property is added dynamically, it can confuse type checkers.
To avoid that, you can declare &lt;code&gt;Schema&lt;/code&gt; as a &lt;a href=&quot;https://docs.python.org/3/library/typing.html#typing.ClassVar&quot;&gt;&lt;code&gt;ClassVar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Nota: Dado que la propiedad &lt;code&gt;.Schema&lt;/code&gt; se agrega din&amp;aacute;micamente, puede confundir a los verificadores de tipo. Para evitar eso, puede declarar &lt;code&gt;Schema&lt;/code&gt; como &lt;a href=&quot;https://docs.python.org/3/library/typing.html#typing.ClassVar&quot;&gt; &lt;code&gt;ClassVar&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc204f43a106087371d7ed60699c22e5e561f21a" translate="yes" xml:space="preserve">
          <source>Note: if you are using &lt;code&gt;mypy&lt;/code&gt;, you will notice that &lt;code&gt;mypy&lt;/code&gt; throws an error if a variable defined with
&lt;code&gt;NewType&lt;/code&gt; is used in a type annotation. To resolve this, add the &lt;code&gt;marshmallow_dataclass.mypy&lt;/code&gt; plugin
to your &lt;code&gt;mypy&lt;/code&gt; configuration, e.g.:</source>
          <target state="translated">Nota: si est&amp;aacute; usando &lt;code&gt;mypy&lt;/code&gt; , notar&amp;aacute; que &lt;code&gt;mypy&lt;/code&gt; arroja un error si se usa una variable definida con &lt;code&gt;NewType&lt;/code&gt; en una anotaci&amp;oacute;n de tipo. Para resolver esto, a&amp;ntilde;adir el &lt;code&gt;marshmallow_dataclass.mypy&lt;/code&gt; plugin para su &lt;code&gt;mypy&lt;/code&gt; configuraci&amp;oacute;n, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2bca6f0f0d026313cc3c788b7be9bac76b5aea86" translate="yes" xml:space="preserve">
          <source>Python library to convert dataclasses into marshmallow schemas.</source>
          <target state="translated">Biblioteca de Python para convertir las clases de datos en esquemas de malvavisco.</target>
        </trans-unit>
        <trans-unit id="c9e28bad31a09130cbe5bb2ab86104c52ebb1db5" translate="yes" xml:space="preserve">
          <source>Renaming fields on serialization</source>
          <target state="translated">Renombrar los campos en la serialización</target>
        </trans-unit>
        <trans-unit id="6e9e73ee41b2b6117ff4030bd81268267185721f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/extending.html&quot;&gt;marshmallow's documentation about extending &lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/extending.html&quot;&gt;la documentaci&amp;oacute;n de marshmallow sobre c&amp;oacute;mo extender &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e05a526cb6c593b4870ccc5d350eb02936f70f77" translate="yes" xml:space="preserve">
          <source>The project documentation is hosted on GitHub Pages: &lt;a href=&quot;https://lovasoa.github.io/marshmallow_dataclass/&quot;&gt;https://lovasoa.github.io/marshmallow_dataclass/&lt;/a&gt;</source>
          <target state="translated">La documentaci&amp;oacute;n del proyecto est&amp;aacute; alojada en las p&amp;aacute;ginas de GitHub: &lt;a href=&quot;https://lovasoa.github.io/marshmallow_dataclass/&quot;&gt;https://lovasoa.github.io/marshmallow_dataclass/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b946c799a82416622fea8675af75cb1ce49186" translate="yes" xml:space="preserve">
          <source>Therefore, you can document your APIs in a way that allows you to statically check that the code matches the documentation.</source>
          <target state="translated">Por lo tanto,puede documentar sus API de forma que le permita comprobar estáticamente que el código coincide con la documentación.</target>
        </trans-unit>
        <trans-unit id="babc2d95edc4c437382558946bfa61f32ce46f85" translate="yes" xml:space="preserve">
          <source>This library depends on python's standard &lt;a href=&quot;https://docs.python.org/3/library/typing.html&quot;&gt;typing&lt;/a&gt; library, which is &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-provisional-api&quot;&gt;provisional&lt;/a&gt;.</source>
          <target state="translated">Esta biblioteca depende de la biblioteca de &lt;a href=&quot;https://docs.python.org/3/library/typing.html&quot;&gt;escritura&lt;/a&gt; est&amp;aacute;ndar de Python , que es &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-provisional-api&quot;&gt;provisional&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d277564658fb478c370f1faa77ae692fe4dfaee" translate="yes" xml:space="preserve">
          <source>This library exports a &lt;code&gt;NewType&lt;/code&gt; function to create types that generate &lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/custom_fields.html#creating-a-field-class&quot;&gt;customized marshmallow fields&lt;/a&gt;.</source>
          <target state="translated">Esta biblioteca exporta una funci&amp;oacute;n &lt;code&gt;NewType&lt;/code&gt; para crear tipos que generan &lt;a href=&quot;https://marshmallow.readthedocs.io/en/stable/custom_fields.html#creating-a-field-class&quot;&gt;campos de malvavisco personalizados&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7729288104e6e54dddd9b31e49e82dd1ebdffcbe" translate="yes" xml:space="preserve">
          <source>This package &lt;a href=&quot;https://pypi.org/project/marshmallow-dataclass/&quot;&gt;is hosted on PyPI&lt;/a&gt;.</source>
          <target state="translated">Este paquete &lt;a href=&quot;https://pypi.org/project/marshmallow-dataclass/&quot;&gt;est&amp;aacute; alojado en PyPI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a92e1376c99ed9a8541895334efbe1414a92d554" translate="yes" xml:space="preserve">
          <source>To pass arguments to the generated marshmallow fields (e.g., &lt;code&gt;validate&lt;/code&gt;, &lt;code&gt;load_only&lt;/code&gt;, &lt;code&gt;dump_only&lt;/code&gt;, etc.),
pass them to the &lt;code&gt;metadata&lt;/code&gt; argument of the
&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.field&quot;&gt;&lt;code&gt;field&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Para pasar argumentos a los campos malvaviscos generados (por ejemplo, &lt;code&gt;validate&lt;/code&gt; , &lt;code&gt;load_only&lt;/code&gt; , &lt;code&gt;dump_only&lt;/code&gt; , etc.), p&amp;aacute;selos al argumento de &lt;code&gt;metadata&lt;/code&gt; de la funci&amp;oacute;n de &lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.field&quot;&gt; &lt;code&gt;field&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Uso</target>
        </trans-unit>
        <trans-unit id="bff6a85a6b2d388d7c8680e7806e05b8d3c3676b" translate="yes" xml:space="preserve">
          <source>Usage warning</source>
          <target state="translated">Advertencia de uso</target>
        </trans-unit>
        <trans-unit id="391291d79d5a2bc8077d6ee935ccefc7c0186cea" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://lovasoa.github.io/marshmallow_dataclass/html/marshmallow_dataclass.html#marshmallow_dataclass.class_schema&quot;&gt;&lt;code&gt;class_schema&lt;/code&gt;&lt;/a&gt;
function to generate a marshmallow &lt;a href=&quot;https://marshmallow.readthedocs.io/en/latest/api_reference.html#marshmallow.Schema&quot;&gt;Schema&lt;/a&gt;
class from a &lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Utilice la funci&amp;oacute;n &lt;a href=&quot;https://lovasoa.github.io/marshmallow_dataclass/html/marshmallow_dataclass.html#marshmallow_dataclass.class_schema&quot;&gt; &lt;code&gt;class_schema&lt;/code&gt; &lt;/a&gt; para generar una clase de &lt;a href=&quot;https://marshmallow.readthedocs.io/en/latest/api_reference.html#marshmallow.Schema&quot;&gt;esquema de&lt;/a&gt; malvavisco a partir de una clase de &lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b67ff79aede207af8da03fd4305241e7ef28939d" translate="yes" xml:space="preserve">
          <source>Using schemas in Python often means having both a class to represent your data and a class to represent its schema, which results in duplicated code that could fall out of sync.
As of Python 3.6, types can be defined for class members, which allows libraries to generate schemas automatically.</source>
          <target state="translated">El uso de esquemas en Python a menudo significa tener tanto una clase para representar sus datos como una clase para representar su esquema,lo que da lugar a un código duplicado que podría desincronizarse.A partir de Python 3.6,se pueden definir tipos para los miembros de la clase,lo que permite a las bibliotecas generar esquemas automáticamente.</target>
        </trans-unit>
        <trans-unit id="21e2caea4476d26af34541ca7c909c7ff2fa4a7f" translate="yes" xml:space="preserve">
          <source>Why</source>
          <target state="translated">Por qué</target>
        </trans-unit>
        <trans-unit id="6868aca8cf53d04cc3c66b05f0bf58ba3463f5db" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;base_schema&lt;/code&gt; to &lt;code&gt;marshmallow_dataclass.dataclass&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se puede pasar &lt;code&gt;base_schema&lt;/code&gt; a &lt;code&gt;marshmallow_dataclass.dataclass&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b67176e73eb0a77b0d3f1d283159444da1997fcb" translate="yes" xml:space="preserve">
          <source>You can also pass a marshmallow field to &lt;code&gt;NewType&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar un campo de malvaviscos a &lt;code&gt;NewType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="955656321237de887cc65300ac7f715af231dce5" translate="yes" xml:space="preserve">
          <source>You may optionally install the following extras:</source>
          <target state="translated">Opcionalmente puede instalar los siguientes extras:</target>
        </trans-unit>
        <trans-unit id="74de300dc3f48db3f4dabec6b98a790ec4440b8f" translate="yes" xml:space="preserve">
          <source>marshmallow 2 support</source>
          <target state="translated">soporte de malvavisco 2</target>
        </trans-unit>
        <trans-unit id="bb0f6b99f80acd71f1c0f283ff9e8c81d2621cef" translate="yes" xml:space="preserve">
          <source>marshmallow-dataclass</source>
          <target state="translated">marshmallow-dataclass</target>
        </trans-unit>
        <trans-unit id="55475e6bea3c3fb0dc90a6c7cc846bab6061cb09" translate="yes" xml:space="preserve">
          <source>style consistency with &lt;a href=&quot;https://flake8.pycqa.org/en/latest/manpage.html&quot;&gt;flake8&lt;/a&gt;</source>
          <target state="translated">consistencia de estilo con &lt;a href=&quot;https://flake8.pycqa.org/en/latest/manpage.html&quot;&gt;flake8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34c92bfafdbe209902f3bf05ad5a8e7e130c1162" translate="yes" xml:space="preserve">
          <source>test conformance by running &lt;a href=&quot;./tests&quot;&gt;tests&lt;/a&gt; with &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;</source>
          <target state="translated">prueba de conformidad ejecutando &lt;a href=&quot;./tests&quot;&gt;pruebas&lt;/a&gt; con &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3b921da6e576d7920bae2bcac36694b155159f4" translate="yes" xml:space="preserve">
          <source>type safety with &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;mypy&lt;/a&gt;</source>
          <target state="translated">escriba seguridad con &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;mypy&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
