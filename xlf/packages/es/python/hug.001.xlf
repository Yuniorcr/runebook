<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/hug/">
    <body>
      <group id="hug">
        <trans-unit id="1891cd1442749ae72069c9b8cd5cea2844856a51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hugapi.github.io/hug/&quot;&gt;Read Latest Documentation&lt;/a&gt; - &lt;a href=&quot;https://github.com/hugapi/hug&quot;&gt;Browse GitHub Code Repository&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://hugapi.github.io/hug/&quot;&gt;Lea la documentaci&amp;oacute;n m&amp;aacute;s reciente&lt;/a&gt; : &lt;a href=&quot;https://github.com/hugapi/hug&quot;&gt;explore el repositorio de c&amp;oacute;digo de GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fd1eceee6a3dddacede2ff00f0045a329abb963" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Directives&lt;/strong&gt; functions that get executed with the request / response data based on being requested as an argument in your api_function.
These apply as input parameters only, and can not be applied currently as output formats or transformations.</source>
          <target state="translated">&lt;strong&gt;Directivas&lt;/strong&gt; funciones que se ejecutan con los datos de solicitud / respuesta en funci&amp;oacute;n de que se soliciten como argumento en su api_function. Estos se aplican solo como par&amp;aacute;metros de entrada y no se pueden aplicar actualmente como formatos de salida o transformaciones.</target>
        </trans-unit>
        <trans-unit id="f0b92d435337779f16ada3f239b1093f1550126a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Input Formatters&lt;/strong&gt; a function that takes the body of data given from a user of your API and formats it for handling.</source>
          <target state="translated">&lt;strong&gt;Formateadores de entrada&lt;/strong&gt; una funci&amp;oacute;n que toma el cuerpo de datos proporcionado por un usuario de su API y lo formatea para su manejo.</target>
        </trans-unit>
        <trans-unit id="5d0f84ef4dfbdd8691433446b2f3d30323ecfde0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;METHOD Decorators&lt;/strong&gt;&lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, etc HTTP method decorators that expose your Python function as an API while keeping your Python method unchanged</source>
          <target state="translated">&lt;strong&gt;Los decoradores de M&amp;Eacute;TODO &lt;/strong&gt; &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;post&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , etc. Los decoradores de m&amp;eacute;todos HTTP que exponen su funci&amp;oacute;n Python como una API mientras mantienen su m&amp;eacute;todo Python sin cambios</target>
        </trans-unit>
        <trans-unit id="337920445117b90d3c38853e9b3f5a0a264ece63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Middleware&lt;/strong&gt; functions that get called for every request a hug API processes</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Funciones de &lt;strong&gt;middleware&lt;/strong&gt; que se llaman para cada solicitud de procesos de API de abrazo</target>
        </trans-unit>
        <trans-unit id="26cfd9566f33dc84fdf2e04ec121504c3a006a41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output Formatters&lt;/strong&gt; a function that takes the output of your API function and formats it for transport to the user of the API.</source>
          <target state="translated">&lt;strong&gt;Formateadores de salida&lt;/strong&gt; una funci&amp;oacute;n que toma la salida de su funci&amp;oacute;n API y la formatea para transportarla al usuario de la API.</target>
        </trans-unit>
        <trans-unit id="f0393068b82fd41f7d3c7b081d85a787d6aec1e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parameter mapping&lt;/strong&gt; can be used to override inferred parameter names, eg. for reserved keywords:</source>
          <target state="translated">&lt;strong&gt;El mapeo de par&amp;aacute;metros&lt;/strong&gt; se puede utilizar para anular nombres de par&amp;aacute;metros inferidos, por ejemplo. para palabras clave reservadas:</target>
        </trans-unit>
        <trans-unit id="a046197910bd9944460f562ddf1c6de1a78eaa7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type Annotations&lt;/strong&gt; functions that optionally are attached to your methods arguments to specify how the argument is validated and converted into a Python type</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Funciones de &lt;strong&gt;anotaciones de tipo&lt;/strong&gt; que opcionalmente se adjuntan a los argumentos de sus m&amp;eacute;todos para especificar c&amp;oacute;mo se valida el argumento y c&amp;oacute;mo se convierte en un tipo de Python</target>
        </trans-unit>
        <trans-unit id="3a951d35e81f9a92861645f522c6a01ab47401b1" translate="yes" xml:space="preserve">
          <source>A Python framework that makes developing APIs as simple as possible, but no simpler.</source>
          <target state="translated">Un marco de trabajo en Python que hace que el desarrollo de las APIs sea lo más sencillo posible,pero no más simple.</target>
        </trans-unit>
        <trans-unit id="3d0a354729291e8b8f1225393dd2a6b39a8c8fb8" translate="yes" xml:space="preserve">
          <source>Adding your own directives is straight forward:</source>
          <target state="translated">Añadir sus propias directivas es sencillo:</target>
        </trans-unit>
        <trans-unit id="b32141e09c28252c817db030d2a7de86a3b2a036" translate="yes" xml:space="preserve">
          <source>Additionally, you can easily create a custom 404 handler using the &lt;code&gt;hug.not_found&lt;/code&gt; decorator:</source>
          <target state="translated">Adem&amp;aacute;s, puede crear f&amp;aacute;cilmente un controlador 404 personalizado utilizando el decorador &lt;code&gt;hug.not_found&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7f33cf112928c8c4636bfabd6fd6f96bee8527d0" translate="yes" xml:space="preserve">
          <source>As a result of these goals, hug is Python 3+ only and built upon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;Falcon's&lt;/a&gt; high performance HTTP library</source>
          <target state="translated">Como resultado de estos objetivos, hug es solo Python 3+ y se basa en &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;la&lt;/a&gt; biblioteca HTTP de alto rendimiento de Falcon.</target>
        </trans-unit>
        <trans-unit id="a8df05afb98eec12798dde02aa621accbaa4a973" translate="yes" xml:space="preserve">
          <source>Aside from the obvious input transformation use case, directives can be used to pipe data into your API functions, even if they are not present in the request query string, POST body, etc. For an example of how to use directives in this way, see the authentication example in the examples folder.</source>
          <target state="translated">Aparte del caso obvio de uso de la transformación de entrada,las directivas pueden ser usadas para canalizar los datos hacia las funciones de la API,incluso si no están presentes en la cadena de consulta de la petición,el cuerpo del POST,etc.Para ver un ejemplo de cómo usar las directivas de esta manera,vea el ejemplo de autenticación en la carpeta de ejemplos.</target>
        </trans-unit>
        <trans-unit id="87fae54a50b27140b756b9e37a86b1e78537c4a1" translate="yes" xml:space="preserve">
          <source>Asyncio support</source>
          <target state="translated">Apoyo asincrónico</target>
        </trans-unit>
        <trans-unit id="754e1e5db57d014e36284f09734da7ee9ade8e7f" translate="yes" xml:space="preserve">
          <source>Be the basis for next generation Python APIs, embracing the latest technology.</source>
          <target state="translated">Ser la base de la próxima generación de APIs de Python,adoptando la última tecnología.</target>
        </trans-unit>
        <trans-unit id="e104776120d29dd6459bcfa52cf9116c58729400" translate="yes" xml:space="preserve">
          <source>Build an example API with a simple endpoint in just a few lines.</source>
          <target state="translated">Construye una API de ejemplo con un simple punto final en sólo unas pocas líneas.</target>
        </trans-unit>
        <trans-unit id="22fce8cfcd346175db9ddbab078350c1a657d4f3" translate="yes" xml:space="preserve">
          <source>Building Blocks of a hug API</source>
          <target state="translated">Bloques de construcción de un abrazo API</target>
        </trans-unit>
        <trans-unit id="973e7afeaa4e40433590d46f7048f4263188c8b7" translate="yes" xml:space="preserve">
          <source>By default, hug returns an auto generated API spec when a user tries to access an endpoint that isn't defined. If you would not like to return this spec you can turn off 404 documentation:</source>
          <target state="translated">Por defecto,hug devuelve una especificación de API autogenerada cuando un usuario intenta acceder a un endpoint que no está definido.Si no quieres devolver esta especificación,puedes desactivar la documentación 404:</target>
        </trans-unit>
        <trans-unit id="ed3c98a24ca7c20314ccede0ba6b97c33e7cd11d" translate="yes" xml:space="preserve">
          <source>By default, the IP is 172.17.0.1. Assuming that's the IP you see, as well, you would then go to &lt;code&gt;http://172.17.0.1:8000/&lt;/code&gt; in your browser to view your API.</source>
          <target state="translated">Por defecto, la IP es 172.17.0.1. Suponiendo que esa es tambi&amp;eacute;n la IP que ve, luego ir&amp;iacute;a a &lt;code&gt;http://172.17.0.1:8000/&lt;/code&gt; en su navegador para ver su API.</target>
        </trans-unit>
        <trans-unit id="db63f0c176088a648bb7851cf6d0b3c69e011ded" translate="yes" xml:space="preserve">
          <source>Can be imported into the main API file:</source>
          <target state="translated">Puede ser importado en el archivo principal de la API:</target>
        </trans-unit>
        <trans-unit id="0ce123ace99cd0029fc0622f5a38b96e8cbee984" translate="yes" xml:space="preserve">
          <source>Configuring hug 404</source>
          <target state="translated">Configurando el abrazo 404</target>
        </trans-unit>
        <trans-unit id="29c1f935aff4d7ef2949abda669b629a517cdd9a" translate="yes" xml:space="preserve">
          <source>Directives may be accessed via an argument with a &lt;code&gt;hug_&lt;/code&gt; prefix, or by using Python 3 type annotations. The latter is the more modern approach, and is recommended. Directives declared in a module can be accessed by using their fully qualified name as the type annotation (ex: &lt;code&gt;module.directive_name&lt;/code&gt;).</source>
          <target state="translated">Se puede acceder a las directivas mediante un argumento con un prefijo &lt;code&gt;hug_&lt;/code&gt; o mediante anotaciones de tipo Python 3. Este &amp;uacute;ltimo es el enfoque m&amp;aacute;s moderno y se recomienda. Se puede acceder a las directivas declaradas en un m&amp;oacute;dulo utilizando su nombre completo como la anotaci&amp;oacute;n de tipo (por ejemplo: &lt;code&gt;module.directive_name&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="358d84aa8148063b462186c221ef88a0bda8ec99" translate="yes" xml:space="preserve">
          <source>For Example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7785dfa6b5b2ac73312e8d5251b8d042d702b7f1" translate="yes" xml:space="preserve">
          <source>For completeness, here is an example of accessing the directive via the magic name approach:</source>
          <target state="translated">Para completar,aquí hay un ejemplo de acceso a la directiva a través del enfoque del nombre mágico:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ec1e6db6e6c03fb8bad69c299593b12da3a0dc24" translate="yes" xml:space="preserve">
          <source>From the command line application:</source>
          <target state="translated">Desde la aplicación de la línea de comandos:</target>
        </trans-unit>
        <trans-unit id="bdb4e742101adce19db03bb43f2a3ef4a3a7e139" translate="yes" xml:space="preserve">
          <source>Get professionally supported hug with the Tidelift Subscription</source>
          <target state="translated">Consigue un abrazo con apoyo profesional con la suscripción a Tidelift</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Empezando</target>
        </trans-unit>
        <trans-unit id="b33664f205bae044a7540d189a9f463f85322603" translate="yes" xml:space="preserve">
          <source>HUG simply stands for Hopefully Useful Guide. This represents the project's goal to help guide developers into creating well written and intuitive APIs.</source>
          <target state="translated">Abrazo significa simplemente Guía de la Esperanza.Esto representa el objetivo del proyecto de ayudar a guiar a los desarrolladores en la creación de APIs bien escritas e intuitivas.</target>
        </trans-unit>
        <trans-unit id="4241eda4d6144efaa18c072736bfe08f7593223d" translate="yes" xml:space="preserve">
          <source>Ideally, within a &lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;virtual environment&lt;/a&gt;.</source>
          <target state="translated">Idealmente, dentro de un &lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;entorno virtual&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="32ee1aa77e7bb32063fdb2b2fc12e0c28a6d63ab" translate="yes" xml:space="preserve">
          <source>If you like to develop in Docker and keep your system clean, you can do that but you'll need to first install &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Docker Compose&lt;/a&gt;.</source>
          <target state="translated">Si desea desarrollar en Docker y mantener limpio su sistema, puede hacerlo, pero primero deber&amp;aacute; instalar &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Docker Compose&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f9b6c5909f91a333882fd964ac2dbbc32dbbfa3" translate="yes" xml:space="preserve">
          <source>Input formatters are mapped based on the &lt;code&gt;content_type&lt;/code&gt; of the request data, and only perform basic parsing. More detailed parsing should be done by the Type Annotations present on your &lt;code&gt;api_function&lt;/code&gt;</source>
          <target state="translated">Formateadores de entrada se asignan en base a la &lt;code&gt;content_type&lt;/code&gt; de los datos de la solicitud, y s&amp;oacute;lo realiza un an&amp;aacute;lisis b&amp;aacute;sico. Se debe realizar un an&amp;aacute;lisis m&amp;aacute;s detallado mediante las anotaciones de tipo presentes en su &lt;code&gt;api_function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c920197ca42bd6cbc5aaef91042da46af9d9ad6" translate="yes" xml:space="preserve">
          <source>Installing hug</source>
          <target state="translated">Instalando el abrazo</target>
        </trans-unit>
        <trans-unit id="9279433dcb5025919ded69799bd1fcfdd4bbeca1" translate="yes" xml:space="preserve">
          <source>Installing hug is as simple as:</source>
          <target state="translated">Instalar un abrazo es tan simple como:</target>
        </trans-unit>
        <trans-unit id="831984903762fc97309a8e41bcf90f4c95b8dd38" translate="yes" xml:space="preserve">
          <source>It should be fast. A developer should never feel the need to look somewhere else for performance reasons.</source>
          <target state="translated">Debería ser rápido.Un desarrollador nunca debe sentir la necesidad de buscar en otro lugar por razones de rendimiento.</target>
        </trans-unit>
        <trans-unit id="bf52013fff0f47b4338b87ed66a34d37ea549a73" translate="yes" xml:space="preserve">
          <source>Magic done once, in an API framework, is better than pushing the problem set to the user of the API framework.</source>
          <target state="translated">La magia hecha una vez,en un marco de la API,es mejor que empujar el problema fijado al usuario del marco de la API.</target>
        </trans-unit>
        <trans-unit id="d23eebc35f489d3b763d90e2c12b6a6a144a1e89" translate="yes" xml:space="preserve">
          <source>Make developing a Python driven API as succinct as a written definition.</source>
          <target state="translated">Hacer que el desarrollo de una API impulsada por Python sea tan sucinto como una definición escrita.</target>
        </trans-unit>
        <trans-unit id="4850343cb2494afc0d45b0bdbcfb4698a176fb71" translate="yes" xml:space="preserve">
          <source>NOTE: Hug is running on top Falcon which is not an asynchronous server. Even if using
asyncio, requests will still be processed synchronously.</source>
          <target state="translated">NOTA:Hug se está ejecutando en el Top Falcon que no es un servidor asincrónico.Incluso si se usa asincrónico,las peticiones se seguirán procesando sincrónicamente.</target>
        </trans-unit>
        <trans-unit id="3cc3453903d306e07a247c36a1a7aade091f9601" translate="yes" xml:space="preserve">
          <source>Note: versioning in hug automatically supports both the version header as well as direct URL based specification.</source>
          <target state="translated">Nota:el versionado en abrazo soporta automáticamente tanto el encabezado de la versión como la especificación directa basada en URL.</target>
        </trans-unit>
        <trans-unit id="9be8845d032ba090ccafb26f1758fd381984819c" translate="yes" xml:space="preserve">
          <source>On your Docker &lt;code&gt;workspace&lt;/code&gt; container, the &lt;code&gt;./docker/templates&lt;/code&gt; directory on your host computer is mounted to &lt;code&gt;/src&lt;/code&gt; in the Docker container. This is specified under &lt;code&gt;services&lt;/code&gt; &amp;gt; &lt;code&gt;app&lt;/code&gt; of &lt;code&gt;./docker/docker-compose.yml&lt;/code&gt;.</source>
          <target state="translated">En su contenedor de &lt;code&gt;workspace&lt;/code&gt; Docker , el directorio &lt;code&gt;./docker/templates&lt;/code&gt; de su computadora host est&amp;aacute; montado en &lt;code&gt;/src&lt;/code&gt; en el contenedor de Docker. Esto se especifica en &lt;code&gt;services&lt;/code&gt; &amp;gt; &lt;code&gt;app&lt;/code&gt; de &lt;code&gt;./docker/docker-compose.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa9860d695862a7eb3daf9e8e36c34497710171a" translate="yes" xml:space="preserve">
          <source>Once you've done that, you'll need to &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;docker&lt;/code&gt; directory and run the web server (Gunicorn) specified in &lt;code&gt;./docker/gunicorn/Dockerfile&lt;/code&gt;, after which you can preview the output of your API in the browser on your host machine.</source>
          <target state="translated">Una vez que haya hecho eso, deber&amp;aacute; &lt;code&gt;cd&lt;/code&gt; al directorio de la ventana &lt;code&gt;docker&lt;/code&gt; y ejecutar el servidor web (Gunicorn) especificado en &lt;code&gt;./docker/gunicorn/Dockerfile&lt;/code&gt; , despu&amp;eacute;s de lo cual puede obtener una vista previa de la salida de su API en el navegador de su m&amp;aacute;quina host.</target>
        </trans-unit>
        <trans-unit id="10610ae894a2a7a10eede2205febf1d1758dac6f" translate="yes" xml:space="preserve">
          <source>Or alternatively - for cases like this - where only one module is being included per a URL route:</source>
          <target state="translated">O alternativamente-para casos como éste-donde sólo se incluye un módulo por cada ruta URL:</target>
        </trans-unit>
        <trans-unit id="9599139a3da06884b1086130404707b1c040bb60" translate="yes" xml:space="preserve">
          <source>Parameters can also be encoded in the URL (check
out &lt;a href=&quot;examples/happy_birthday.py&quot;&gt;&lt;code&gt;happy_birthday.py&lt;/code&gt;&lt;/a&gt; for the whole
example).</source>
          <target state="translated">Los par&amp;aacute;metros tambi&amp;eacute;n se pueden codificar en la URL (consulte &lt;a href=&quot;examples/happy_birthday.py&quot;&gt; &lt;code&gt;happy_birthday.py&lt;/code&gt; &lt;/a&gt; para ver el ejemplo completo).</target>
        </trans-unit>
        <trans-unit id="70eea5c68d9f081a0dac9b82df9ef6906b884950" translate="yes" xml:space="preserve">
          <source>Professional support for hug is available as part of the &lt;a href=&quot;https://tidelift.com/subscription/pkg/pypi-hug?utm_source=pypi-hug&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&quot;&gt;Tidelift
Subscription&lt;/a&gt;.
Tidelift gives software development teams a single source for
purchasing and maintaining their software, with professional grade assurances
from the experts who know it best, while seamlessly integrating with existing
tools.</source>
          <target state="translated">El soporte profesional para abrazos est&amp;aacute; disponible como parte de la &lt;a href=&quot;https://tidelift.com/subscription/pkg/pypi-hug?utm_source=pypi-hug&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme&quot;&gt;suscripci&amp;oacute;n a Tidelift&lt;/a&gt; . Tidelift ofrece a los equipos de desarrollo de software una fuente &amp;uacute;nica para comprar y mantener su software, con garant&amp;iacute;as de nivel profesional de los expertos que mejor lo conocen, al tiempo que se integra sin problemas con las herramientas existentes.</target>
        </trans-unit>
        <trans-unit id="4ad07fe8cab325006610e5c7f9d4c3cf9d378e9a" translate="yes" xml:space="preserve">
          <source>Running hug with other WSGI based servers</source>
          <target state="translated">Ejecutando el abrazo con otros servidores basados en WSGI</target>
        </trans-unit>
        <trans-unit id="7e197170524d0049b65494c29f9941c06215db04" translate="yes" xml:space="preserve">
          <source>Security contact information</source>
          <target state="translated">Información de contacto de seguridad</target>
        </trans-unit>
        <trans-unit id="a5f0572bebdaf623329747d1a6d728c16dcb7212" translate="yes" xml:space="preserve">
          <source>Splitting APIs over multiple files</source>
          <target state="translated">Dividir las API en varios archivos</target>
        </trans-unit>
        <trans-unit id="92428f0e12da119c2c985be2440ab07ccde29faa" translate="yes" xml:space="preserve">
          <source>Supporting hug development</source>
          <target state="translated">Apoyar el desarrollo del abrazo</target>
        </trans-unit>
        <trans-unit id="fda1a2f92c23d9bd588062628a1a6dec5fce5020" translate="yes" xml:space="preserve">
          <source>Testing hug APIs</source>
          <target state="translated">Probando los APIs de abrazo</target>
        </trans-unit>
        <trans-unit id="0a0dc0ebd769cd2d6e2f3c5c04c9ba7bb9d6375f" translate="yes" xml:space="preserve">
          <source>Thanks and I hope you find &lt;em&gt;this&lt;/em&gt; hug helpful as you develop your next Python API!</source>
          <target state="translated">Gracias y espero que &lt;em&gt;este&lt;/em&gt; abrazo le resulte &amp;uacute;til mientras desarrolla su pr&amp;oacute;xima API de Python.</target>
        </trans-unit>
        <trans-unit id="6b5748267b4a92ff501ece9f49a1eae7d4bdd557" translate="yes" xml:space="preserve">
          <source>The framework should encourage code that self-documents.</source>
          <target state="translated">El marco debería fomentar el código que se autodocumenta.</target>
        </trans-unit>
        <trans-unit id="4c3a720e1f09b4bf3195ba27f2a83cc0403fae64" translate="yes" xml:space="preserve">
          <source>Then you can access the example from &lt;code&gt;localhost:8000/v1/echo?text=Hi&lt;/code&gt; / &lt;code&gt;localhost:8000/v2/echo?text=Hi&lt;/code&gt; Or access the documentation for your API from &lt;code&gt;localhost:8000&lt;/code&gt;</source>
          <target state="translated">Luego puede acceder al ejemplo desde &lt;code&gt;localhost:8000/v1/echo?text=Hi&lt;/code&gt; / &lt;code&gt;localhost:8000/v2/echo?text=Hi&lt;/code&gt; O acceda a la documentaci&amp;oacute;n de su API desde &lt;code&gt;localhost:8000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85423025067361be7aff0e935bf79ce621300d9a" translate="yes" xml:space="preserve">
          <source>This decorator works in the same manner as the hug HTTP method decorators, and is even version aware:</source>
          <target state="translated">Este decorador trabaja de la misma manera que los decoradores del método HTTP de abrazo,y es incluso consciente de la versión:</target>
        </trans-unit>
        <trans-unit id="4b5392cfdf232f6cc068904b2d9b657e651e978e" translate="yes" xml:space="preserve">
          <source>To report a security vulnerability, please use the
&lt;a href=&quot;https://tidelift.com/security&quot;&gt;Tidelift security contact&lt;/a&gt;.
Tidelift will coordinate the fix and disclosure.</source>
          <target state="translated">Para informar una vulnerabilidad de seguridad, utilice el &lt;a href=&quot;https://tidelift.com/security&quot;&gt;contacto de seguridad de Tidelift&lt;/a&gt; . Tidelift coordinar&amp;aacute; la correcci&amp;oacute;n y la divulgaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd75e7993dd4451f4e2e80c87bb17eaf0f068b43" translate="yes" xml:space="preserve">
          <source>To run the example:</source>
          <target state="translated">Para poner el ejemplo:</target>
        </trans-unit>
        <trans-unit id="c1e8307e6a9d01923949fbbd7e72d258fbe70276" translate="yes" xml:space="preserve">
          <source>To run the hello world hug example API.</source>
          <target state="translated">Para ejecutar la API de ejemplo del abrazo del mundo de hola.</target>
        </trans-unit>
        <trans-unit id="cc3a5a60ceb8a3bda715ca81ef1dd0184522d378" translate="yes" xml:space="preserve">
          <source>To run, from the command line type:</source>
          <target state="translated">Para ejecutar,desde el tipo de línea de comandos:</target>
        </trans-unit>
        <trans-unit id="460f7658f324eaf15f96e695cc776bdfeb4def6a" translate="yes" xml:space="preserve">
          <source>Type annotations also feed into &lt;code&gt;hug&lt;/code&gt;'s automatic documentation
generation to let users of your API know what data to supply.</source>
          <target state="translated">Las anotaciones de tipo tambi&amp;eacute;n se incorporan a la generaci&amp;oacute;n autom&amp;aacute;tica de documentaci&amp;oacute;n de &lt;code&gt;hug&lt;/code&gt; para que los usuarios de su API sepan qu&amp;eacute; datos deben proporcionar.</target>
        </trans-unit>
        <trans-unit id="f1e887ad301db2838308801456e01403dfd27811" translate="yes" xml:space="preserve">
          <source>Using Docker</source>
          <target state="translated">Usando Docker</target>
        </trans-unit>
        <trans-unit id="b3a69340ce0be8b5b74b7e46cc90f9bdf3479d67" translate="yes" xml:space="preserve">
          <source>Using Python 3.5 async keyword.</source>
          <target state="translated">Usando la palabra clave de Python 3.5 async.</target>
        </trans-unit>
        <trans-unit id="e944aca10e018a969b5d6881683c7baf9dcf0f14" translate="yes" xml:space="preserve">
          <source>Using asyncio coroutine decorator</source>
          <target state="translated">Usando el decorador asíncrono de rutina</target>
        </trans-unit>
        <trans-unit id="5e51f6cfcd116a5a628b50e89b4f92dc36c5179c" translate="yes" xml:space="preserve">
          <source>Versioning with hug</source>
          <target state="translated">Versionar con un abrazo</target>
        </trans-unit>
        <trans-unit id="09156ba196e26e6c7e939d56e7a41867c91c8cdb" translate="yes" xml:space="preserve">
          <source>When building an API using the hug framework you'll use the following concepts:</source>
          <target state="translated">Cuando se construye una API usando el marco de trabajo de abrazos,se usan los siguientes conceptos:</target>
        </trans-unit>
        <trans-unit id="fc1dcc9006d3215e8d86472a32249b3b0d28c175" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;cli&lt;/code&gt; method decorator on coroutines, hug will schedule
the execution of the coroutine.</source>
          <target state="translated">Al utilizar el decorador de m&amp;eacute;todos &lt;code&gt;get&lt;/code&gt; y &lt;code&gt;cli&lt;/code&gt; en corrutinas, hug programar&amp;aacute; la ejecuci&amp;oacute;n de la corrutina.</target>
        </trans-unit>
        <trans-unit id="a8c632d98b9268376854cbc30eae096e0ad704ba" translate="yes" xml:space="preserve">
          <source>Which, once you are running the server as above, you can use this way:</source>
          <target state="translated">El cual,una vez que se ejecuta el servidor como arriba,se puede usar de esta manera:</target>
        </trans-unit>
        <trans-unit id="d0a3f7e6138efc1ed8290339051ecc68996dd29f" translate="yes" xml:space="preserve">
          <source>Why hug?</source>
          <target state="translated">¿Por qué un abrazo?</target>
        </trans-unit>
        <trans-unit id="92066db15ca2736eb11343ec0aadc200ecf6f967" translate="yes" xml:space="preserve">
          <source>Writing tests for APIs written on-top of hug should be easy and intuitive.</source>
          <target state="translated">Las pruebas de escritura para las APIs escritas en la parte superior del abrazo deben ser fáciles e intuitivas.</target>
        </trans-unit>
        <trans-unit id="69d5b5a97e867377eb7c90bf67d6835ea56e79a9" translate="yes" xml:space="preserve">
          <source>You can access the example in your browser at:
&lt;code&gt;localhost:8000/happy_birthday?name=hug&amp;amp;age=1&lt;/code&gt;. Then check out the
documentation for your API at &lt;code&gt;localhost:8000/documentation&lt;/code&gt;</source>
          <target state="translated">Puede acceder al ejemplo en su navegador en: &lt;code&gt;localhost:8000/happy_birthday?name=hug&amp;amp;age=1&lt;/code&gt; . Luego, consulte la documentaci&amp;oacute;n de su API en &lt;code&gt;localhost:8000/documentation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c975556850a95fbf44c5d623233058643734a205" translate="yes" xml:space="preserve">
          <source>You can also easily add any Falcon style middleware using:</source>
          <target state="translated">También puedes añadir fácilmente cualquier middleware del estilo de Falcon:</target>
        </trans-unit>
        <trans-unit id="a98264703b814e298ce686a7fef9cd2bd9476746" translate="yes" xml:space="preserve">
          <source>You can also log into a Docker container that you can consider your work space. This workspace has Python and Pip installed so you can use those tools within Docker. If you need to test the CLI interface, for example, you would use this.</source>
          <target state="translated">También puedes entrar en un contenedor Docker que puedes considerar como tu espacio de trabajo.Este espacio de trabajo tiene Python y Pip instalados para que puedas usar esas herramientas dentro de Docker.Si necesitas probar la interfaz CLI,por ejemplo,usarías esto.</target>
        </trans-unit>
        <trans-unit id="acbfd6cceacd1855a44b41caf026e84b2d619740" translate="yes" xml:space="preserve">
          <source>You can use this &lt;code&gt;Response&lt;/code&gt; object for test assertions (check
out &lt;a href=&quot;examples/test_happy_birthday.py&quot;&gt;&lt;code&gt;test_happy_birthday.py&lt;/code&gt;&lt;/a&gt; ):</source>
          <target state="translated">Puede utilizar este objeto de &lt;code&gt;Response&lt;/code&gt; para las afirmaciones de prueba (consulte &lt;a href=&quot;examples/test_happy_birthday.py&quot;&gt; &lt;code&gt;test_happy_birthday.py&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="68863bd3822201be0e105f9d6f13a036936a9dbe" translate="yes" xml:space="preserve">
          <source>as shown, you can easily change the output format for both an entire API as well as an individual API call</source>
          <target state="translated">como se muestra,puede cambiar fácilmente el formato de salida tanto para una API entera como para una llamada API individual</target>
        </trans-unit>
        <trans-unit id="5260dfd635468aad848584daf1e1051cea7a8706" translate="yes" xml:space="preserve">
          <source>hug aims to make developing Python driven APIs as simple as possible, but no simpler. As a result, it drastically simplifies Python API development.</source>
          <target state="translated">hug tiene como objetivo hacer que el desarrollo de APIs impulsadas por Python sea lo más simple posible,pero no más simple.Como resultado,simplifica drásticamente el desarrollo de APIs en Python.</target>
        </trans-unit>
        <trans-unit id="ccbdd588925c256b0089f80475f85b716a8765e4" translate="yes" xml:space="preserve">
          <source>hug enables you to organize large projects in any manner you see fit. You can import any module that contains hug decorated functions (request handling, directives, type handlers, etc) and extend your base API with that module.</source>
          <target state="translated">El abrazo te permite organizar grandes proyectos de la manera que creas conveniente.Puedes importar cualquier módulo que contenga funciones decoradas de hug (manejo de solicitudes,directivas,manejadores de tipos,etc.)y extender tu API base con ese módulo.</target>
        </trans-unit>
        <trans-unit id="d6cf0c89c4034b80e5b63e10795426ce000eb1b2" translate="yes" xml:space="preserve">
          <source>hug exposes a &lt;code&gt;__hug_wsgi__&lt;/code&gt; magic method on every API module automatically. Running your hug based API on any standard wsgi server should be as simple as pointing it to &lt;code&gt;module_name&lt;/code&gt;: &lt;code&gt;__hug_wsgi__&lt;/code&gt;.</source>
          <target state="translated">hug expone un m&amp;eacute;todo m&amp;aacute;gico &lt;code&gt;__hug_wsgi__&lt;/code&gt; en cada m&amp;oacute;dulo de API autom&amp;aacute;ticamente. Ejecutar su API basada en hug en cualquier servidor wsgi est&amp;aacute;ndar deber&amp;iacute;a ser tan simple como &lt;code&gt;module_name&lt;/code&gt; a module_name : &lt;code&gt;__hug_wsgi__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63294d52f42102fddab47d3be28869d5d978e85a" translate="yes" xml:space="preserve">
          <source>hug takes security and quality seriously. This focus is why we depend only on thoroughly tested components and utilize static analysis tools (such as bandit and safety) to verify the security of our code base.
If you find or encounter any potential security issues, please let us know right away so we can resolve them.</source>
          <target state="translated">abrazo toma en serio la seguridad y la calidad.Por eso dependemos sólo de componentes probados a fondo y utilizamos herramientas de análisis estático (como el bandido y la seguridad)para verificar la seguridad de nuestra base de códigos.Si encuentras o te encuentras con algún problema de seguridad potencial,por favor háznoslo saber de inmediato para que podamos resolverlo.</target>
        </trans-unit>
        <trans-unit id="840c736b58826c43bb285b4729a6389c2a271f7e" translate="yes" xml:space="preserve">
          <source>hug uses the structure of the function you decorate to automatically generate documentation for users of your API. hug always passes a request, response, and api_version variable to your function if they are defined params in your function definition.</source>
          <target state="translated">hug utiliza la estructura de la función que usted decora para generar automáticamente la documentación para los usuarios de su API.hug siempre pasa una solicitud,respuesta y una variable api_version a su función si son parámetros definidos en la definición de su función.</target>
        </trans-unit>
        <trans-unit id="4dba083e9006e12eb8972a15afb1acc690437b00" translate="yes" xml:space="preserve">
          <source>hug's &lt;code&gt;http&lt;/code&gt; method decorators don't modify your original functions. This makes testing hug APIs as simple as testing any other Python functions. Additionally, this means interacting with your API functions in other Python code is as straight forward as calling Python only API functions. hug makes it easy to test the full Python stack of your API by using the &lt;code&gt;hug.test&lt;/code&gt; module:</source>
          <target state="translated">Los decoradores del m&amp;eacute;todo &lt;code&gt;http&lt;/code&gt; de hug no modifican tus funciones originales. Esto hace que probar las API de abrazo sea tan simple como probar cualquier otra funci&amp;oacute;n de Python. Adem&amp;aacute;s, esto significa que interactuar con las funciones de la API en otro c&amp;oacute;digo de Python es tan sencillo como llamar a funciones de la API solo de Python. hug hace que sea f&amp;aacute;cil probar la pila completa de Python de su API usando el m&amp;oacute;dulo &lt;code&gt;hug.test&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1ca4d71412d197d55f7225c9894b598beacb582" translate="yes" xml:space="preserve">
          <source>hug's Design Objectives:</source>
          <target state="translated">Objetivos de Diseño de Hughes:</target>
        </trans-unit>
        <trans-unit id="6415c2d844d4e6ce1c534ee71f1d8a7e411903ea" translate="yes" xml:space="preserve">
          <source>~Timothy Crosley</source>
          <target state="translated">~ Timothy Crosley</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
