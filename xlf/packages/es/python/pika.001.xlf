<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/pika/">
    <body>
      <group id="pika">
        <trans-unit id="1e0d5eece020575c4dc36343c8e1cd03ef1a9a14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;s I/O loop exposes</source>
          <target state="translated">&amp;rsquo;s I/O loop exposes</target>
        </trans-unit>
        <trans-unit id="0e6ccb690f8e55f8de133a8ef17f82d11d0f114b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;s I/O loop has</source>
          <target state="translated">&amp;rsquo;s I/O loop has</target>
        </trans-unit>
        <trans-unit id="38d278d61971ce7a0e25e657279e86fad2416b23" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;s I/O loop provides</source>
          <target state="translated">&amp;rsquo;s I/O loop provides</target>
        </trans-unit>
        <trans-unit id="18d6ef871f481711d36d728d2ba3cbdd19332017" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;s abstract
methods, including internally-initiated connection logic. For examples, refer
to the implementations of</source>
          <target state="translated">&amp;rsquo;s abstract methods, including internally-initiated connection logic. For examples, refer to the implementations of</target>
        </trans-unit>
        <trans-unit id="1973a18f94c3178c106f7df7b18c6c9193024db9" translate="yes" xml:space="preserve">
          <source>, implementing its abstract method and
passing its constructor an implementation of</source>
          <target state="translated">, implementing its abstract method and passing its constructor an implementation of</target>
        </trans-unit>
        <trans-unit id="c7b837feb799d123df5fb9b8bb64aeb40ac8c0c1" translate="yes" xml:space="preserve">
          <source>, or any of the
wide variety of ways of getting network events to and from a Python
application. Pika tries to stay compatible with all of these, and to make
adapting it to a new environment as simple as possible.</source>
          <target state="translated">, or any of the wide variety of ways of getting network events to and from a Python application. Pika tries to stay compatible with all of these, and to make adapting it to a new environment as simple as possible.</target>
        </trans-unit>
        <trans-unit id="49d2d73c488287ee47e9e23a7bde89fad3f5a395" translate="yes" xml:space="preserve">
          <source>, while</source>
          <target state="translated">, mientras</target>
        </trans-unit>
        <trans-unit id="0700096ed8db4524995ae1c6b4378cbe27fdaaf3" translate="yes" xml:space="preserve">
          <source>, you can request a
connection using multiple connection parameter instances via the connection
adapter&amp;rsquo;s</source>
          <target state="translated">, you can request a connection using multiple connection parameter instances via the connection adapter&amp;rsquo;s</target>
        </trans-unit>
        <trans-unit id="faa1e99f94d083d44ad7f62b2dea34f322e359a7" translate="yes" xml:space="preserve">
          <source>, you use the underlying asynchronous framework&amp;rsquo;s
native API for requesting an I/O loop-bound callback from another thread. For
example,</source>
          <target state="translated">, you use the underlying asynchronous framework&amp;rsquo;s native API for requesting an I/O loop-bound callback from another thread. For example,</target>
        </trans-unit>
        <trans-unit id="3f26584b4b7534fd43188fc7e0ed074600e5a056" translate="yes" xml:space="preserve">
          <source>- asynchronous
adapter for use with &lt;a href=&quot;http://twistedmatrix.com&quot;&gt;Twisted&lt;/a&gt;&amp;rsquo;s I/O loop.</source>
          <target state="translated">- asynchronous adapter for use with &lt;a href=&quot;http://twistedmatrix.com&quot;&gt;Twisted&lt;/a&gt;&amp;rsquo;s I/O loop.</target>
        </trans-unit>
        <trans-unit id="54179a35118c5f839c5cb2c19ec73925dd9c1c73" translate="yes" xml:space="preserve">
          <source>- asynchronous adapter
for Python 3 &lt;a href=&quot;https://docs.python.org/3/library/asyncio.html&quot;&gt;AsyncIO&lt;/a&gt;&amp;rsquo;s
I/O loop.</source>
          <target state="translated">- asynchronous adapter for Python 3 &lt;a href=&quot;https://docs.python.org/3/library/asyncio.html&quot;&gt;AsyncIO&lt;/a&gt;&amp;rsquo;s I/O loop.</target>
        </trans-unit>
        <trans-unit id="536d1fbef90fcee7f3f8b66284657829c46d832c" translate="yes" xml:space="preserve">
          <source>- asynchronous adapter
for use with &lt;a href=&quot;http://tornadoweb.org&quot;&gt;Tornado&lt;/a&gt;&amp;rsquo;s I/O loop.</source>
          <target state="translated">- asynchronous adapter for use with &lt;a href=&quot;http://tornadoweb.org&quot;&gt;Tornado&lt;/a&gt;&amp;rsquo;s I/O loop.</target>
        </trans-unit>
        <trans-unit id="1abb00a47e8fa454855f9fc619c59696c51c3e61" translate="yes" xml:space="preserve">
          <source>- asynchronous adapter without third-party
dependencies.</source>
          <target state="translated">- asynchronous adapter without third-party dependencies.</target>
        </trans-unit>
        <trans-unit id="6d341aeb70c10cb733aa8e12a374b248799a9840" translate="yes" xml:space="preserve">
          <source>- synchronous adapter on top of library for
simple usage.</source>
          <target state="translated">- synchronous adapter on top of library for simple usage.</target>
        </trans-unit>
        <trans-unit id="ab867ff45235e03a3878ead3193b58db2138e6fa" translate="yes" xml:space="preserve">
          <source>. Refer to
this method&amp;rsquo;s docstring for additional information. For example:</source>
          <target state="translated">. Refer to this method&amp;rsquo;s docstring for additional information. For example:</target>
        </trans-unit>
        <trans-unit id="90dcefdc31ce8a4fd237e9dd933cab98953a6781" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pull requests that add or change code without adequate test coverage will be
rejected.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Pull requests that add or change code without adequate test coverage will be rejected.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="807a0e18bf3a2e54bbc7f0b4a44996b08c9be6e8" translate="yes" xml:space="preserve">
          <source>Additionally, please format your code using
&lt;a href=&quot;http://pypi.python.org/pypi/yapf&quot;&gt;Yapf&lt;/a&gt; with</source>
          <target state="translated">Additionally, please format your code using &lt;a href=&quot;http://pypi.python.org/pypi/yapf&quot;&gt;Yapf&lt;/a&gt; with</target>
        </trans-unit>
        <trans-unit id="db18cdd4983db9d522cd7735da233a0fa37a0392" translate="yes" xml:space="preserve">
          <source>An example of recovery using</source>
          <target state="translated">Un ejemplo de recuperación utilizando</target>
        </trans-unit>
        <trans-unit id="f1c96ac775e19ff771fcaf6ff95d59a6aabef89e" translate="yes" xml:space="preserve">
          <source>And an example of writing a blocking consumer:</source>
          <target state="translated">Y un ejemplo de escribir a un consumidor bloqueador:</target>
        </trans-unit>
        <trans-unit id="eaa5a42bce67a921d10243369ab7a3625a57600b" translate="yes" xml:space="preserve">
          <source>By subclassing</source>
          <target state="translated">Al subclasificar</target>
        </trans-unit>
        <trans-unit id="99eb58493ad756217e49f28800a268c3a3fa0b57" translate="yes" xml:space="preserve">
          <source>Connection recovery</source>
          <target state="translated">Recuperación de la conexión</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contribuyendo</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentación</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>
        </trans-unit>
        <trans-unit id="be8c5221942cb24ba5c3cdda3dc72b4664f6dbe1" translate="yes" xml:space="preserve">
          <source>Extending to support additional I/O frameworks</source>
          <target state="translated">Ampliación para apoyar marcos de E/S adicionales</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">Para</target>
        </trans-unit>
        <trans-unit id="e81ca7b3b8064fb9bf15dbd998666d447b2da3f6" translate="yes" xml:space="preserve">
          <source>For asynchronous adapters, use</source>
          <target state="translated">Para los adaptadores asíncronos,utilice</target>
        </trans-unit>
        <trans-unit id="d8b371431357a473475d93a40c3f9d685155ec9e" translate="yes" xml:space="preserve">
          <source>Generic operation retry libraries such as
&lt;a href=&quot;https://github.com/invl/retry&quot;&gt;retry&lt;/a&gt; can be used. Decorators make it
possible to configure some additional recovery behaviours, like delays between
retries and limiting the number of retries:</source>
          <target state="translated">Generic operation retry libraries such as &lt;a href=&quot;https://github.com/invl/retry&quot;&gt;retry&lt;/a&gt; can be used. Decorators make it possible to configure some additional recovery behaviours, like delays between retries and limiting the number of retries:</target>
        </trans-unit>
        <trans-unit id="efd426969c640a96020b47ce75927cba7a026d88" translate="yes" xml:space="preserve">
          <source>Here is the most simple example of use, sending a message with the</source>
          <target state="translated">Este es el ejemplo más simple de uso,el envío de un mensaje con el</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introducción</target>
        </trans-unit>
        <trans-unit id="c2220f754b70ea0812a588699bb567172db92c8e" translate="yes" xml:space="preserve">
          <source>Messages processed in another thread may not be acknowledged directly from that
thread, since all accesses to the connection adapter instance must be from a
single thread, which is the thread running the adapter&amp;rsquo;s I/O loop. This is
accomplished by requesting a callback to be executed in the adapter&amp;rsquo;s
I/O loop thread. For example, the callback function&amp;rsquo;s implementation might look
like this:</source>
          <target state="translated">Messages processed in another thread may not be acknowledged directly from that thread, since all accesses to the connection adapter instance must be from a single thread, which is the thread running the adapter&amp;rsquo;s I/O loop. This is accomplished by requesting a callback to be executed in the adapter&amp;rsquo;s I/O loop thread. For example, the callback function&amp;rsquo;s implementation might look like this:</target>
        </trans-unit>
        <trans-unit id="e8f5a0751b408ba84ad0b7f54ba5b1a76eb30952" translate="yes" xml:space="preserve">
          <source>Multiple connection parameters</source>
          <target state="translated">Múltiples parámetros de conexión</target>
        </trans-unit>
        <trans-unit id="8201be1d785cd9819d2abc5a19a1ef92f4e5f996" translate="yes" xml:space="preserve">
          <source>New non-blocking adapters may be implemented in either of the following ways:</source>
          <target state="translated">Los nuevos adaptadores no bloqueantes pueden implementarse de cualquiera de las siguientes maneras:</target>
        </trans-unit>
        <trans-unit id="0d365f77aa67071ca7c3c0ce9ca80dc4dfaf5066" translate="yes" xml:space="preserve">
          <source>People may be using direct sockets, plain old</source>
          <target state="translated">La gente puede estar usando enchufes directos,simplemente</target>
        </trans-unit>
        <trans-unit id="f42597bb946c653e85e74bb1a50b862d0f3bd21c" translate="yes" xml:space="preserve">
          <source>Pika Python AMQP Client Library</source>
          <target state="translated">Biblioteca de clientes de Pika Python AMQP</target>
        </trans-unit>
        <trans-unit id="64e4428bd5beaa0d1753d85a663466229055ad68" translate="yes" xml:space="preserve">
          <source>Pika is a RabbitMQ (AMQP 0-9-1) client library for Python.</source>
          <target state="translated">Pika es una biblioteca de clientes RabbitMQ (AMQP 0-9-1)para Python.</target>
        </trans-unit>
        <trans-unit id="5858dd2c4785adfb59ea6cf5aa858bd0ea6c7c2a" translate="yes" xml:space="preserve">
          <source>Pika is a pure-Python implementation of the AMQP 0-9-1 protocol including
RabbitMQ&amp;rsquo;s extensions.</source>
          <target state="translated">Pika is a pure-Python implementation of the AMQP 0-9-1 protocol including RabbitMQ&amp;rsquo;s extensions.</target>
        </trans-unit>
        <trans-unit id="e9a50c636592d0b196b6be67e391cccaf6f15e0c" translate="yes" xml:space="preserve">
          <source>Pika provides the following adapters</source>
          <target state="translated">Pika proporciona los siguientes adaptadores</target>
        </trans-unit>
        <trans-unit id="d28f1937cae51bd2e9f826877360cc90696f1b7d" translate="yes" xml:space="preserve">
          <source>Pika supports multiple connection adapters. They take different approaches to
connection recovery.</source>
          <target state="translated">Pika soporta múltiples adaptadores de conexión.Ellos toman diferentes enfoques para la recuperación de la conexión.</target>
        </trans-unit>
        <trans-unit id="23dc2e9e2606741720fc76f67ee5eaacd4ef9687" translate="yes" xml:space="preserve">
          <source>Pika&amp;rsquo;s documentation can be found at &lt;a href=&quot;https://pika.readthedocs.io&quot;&gt;https://pika.readthedocs.io&lt;/a&gt;.</source>
          <target state="translated">Pika&amp;rsquo;s documentation can be found at &lt;a href=&quot;https://pika.readthedocs.io&quot;&gt;https://pika.readthedocs.io&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="73f1c801ecf04a6fbdd0c590435a793214fbd080" translate="yes" xml:space="preserve">
          <source>Python 2.7 and 3.4+ are supported.</source>
          <target state="translated">Se admiten las pitones 2.7 y 3.4+.</target>
        </trans-unit>
        <trans-unit id="ede4e78b9f396dd28fc43a76a69f9ef3525a07d9" translate="yes" xml:space="preserve">
          <source>Requesting message acknowledgements from another thread</source>
          <target state="translated">Solicitar acuses de recibo de mensajes de otro hilo</target>
        </trans-unit>
        <trans-unit id="5a476cb60df579fa6e23e50565031352a5144ad0" translate="yes" xml:space="preserve">
          <source>Since threads aren&amp;rsquo;t appropriate to every situation, it doesn&amp;rsquo;t require
threads. Pika core takes care not to forbid them, either. The same goes for
greenlets, callbacks, continuations, and generators. An instance of Pika&amp;rsquo;s
built-in connection adapters isn&amp;rsquo;t thread-safe, however.</source>
          <target state="translated">Since threads aren&amp;rsquo;t appropriate to every situation, it doesn&amp;rsquo;t require threads. Pika core takes care not to forbid them, either. The same goes for greenlets, callbacks, continuations, and generators. An instance of Pika&amp;rsquo;s built-in connection adapters isn&amp;rsquo;t thread-safe, however.</target>
        </trans-unit>
        <trans-unit id="f20292910809ef797dff385613a1acd11e923046" translate="yes" xml:space="preserve">
          <source>Some RabbitMQ clients (Bunny, Java, .NET, Objective-C, Swift) provide a way to
automatically recover connection, its channels and topology (e.g. queues,
bindings and consumers) after a network failure. Others require connection
recovery to be performed by the application code and strive to make it a
straightforward process. Pika falls into the second category.</source>
          <target state="translated">Algunos clientes de RabbitMQ (Bunny,Java,.NET,Objective-C,Swift)proporcionan una forma de recuperar automáticamente la conexión,sus canales y la topología (por ejemplo,colas,enlaces y consumidores)después de un fallo de la red.Otros requieren que la recuperación de la conexión sea realizada por el código de la aplicación y se esfuerzan por que sea un proceso sencillo.La Pika pertenece a la segunda categoría.</target>
        </trans-unit>
        <trans-unit id="0ff1e1335a6f1617b5ec1966b5813ecf3e853e3a" translate="yes" xml:space="preserve">
          <source>The code running in the other thread may request the</source>
          <target state="translated">El código que se ejecuta en el otro hilo puede solicitar la</target>
        </trans-unit>
        <trans-unit id="8131b1b74c5d223097da8979a2e6548b63bc2169" translate="yes" xml:space="preserve">
          <source>The single-threaded usage constraint of an individual Pika connection adapter
instance may result in a dropped AMQP/stream connection due to AMQP heartbeat
timeout in consumers that take a long time to process an incoming message. A
common solution is to delegate processing of the incoming messages to another
thread, while the connection adapter&amp;rsquo;s thread continues to service its I/O
loop&amp;rsquo;s message pump, permitting AMQP heartbeats and other I/O to be serviced in
a timely fashion.</source>
          <target state="translated">The single-threaded usage constraint of an individual Pika connection adapter instance may result in a dropped AMQP/stream connection due to AMQP heartbeat timeout in consumers that take a long time to process an incoming message. A common solution is to delegate processing of the incoming messages to another thread, while the connection adapter&amp;rsquo;s thread continues to service its I/O loop&amp;rsquo;s message pump, permitting AMQP heartbeats and other I/O to be serviced in a timely fashion.</target>
        </trans-unit>
        <trans-unit id="2705583bb5942c3553b8993c888d4a86cc416e87" translate="yes" xml:space="preserve">
          <source>This example can be found in</source>
          <target state="translated">Este ejemplo puede encontrarse en</target>
        </trans-unit>
        <trans-unit id="2b3ead2568914104f9341693fcd1325e4a012c09" translate="yes" xml:space="preserve">
          <source>This threadsafe callback request mechanism may also be used to delegate
publishing of messages, etc., from a background thread to the connection
adapter&amp;rsquo;s thread.</source>
          <target state="translated">This threadsafe callback request mechanism may also be used to delegate publishing of messages, etc., from a background thread to the connection adapter&amp;rsquo;s thread.</target>
        </trans-unit>
        <trans-unit id="7a85af8b66058c1851b97c9612a93524bc00c458" translate="yes" xml:space="preserve">
          <source>To contribute to Pika, please make sure that any new features or changes to
existing functionality &lt;strong&gt;include test coverage&lt;/strong&gt;.</source>
          <target state="translated">To contribute to Pika, please make sure that any new features or changes to existing functionality &lt;strong&gt;include test coverage&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="a2e8edd8b68b6ec2c58c147d36ba1bc0b65ec67b" translate="yes" xml:space="preserve">
          <source>When using a non-blocking connection adapter, such as</source>
          <target state="translated">Cuando se utiliza un adaptador de conexión sin bloqueo,como</target>
        </trans-unit>
        <trans-unit id="03e5798fd601e283a8030b3f82a5cd277e9a04aa" translate="yes" xml:space="preserve">
          <source>With non-blocking adapters, such as</source>
          <target state="translated">Con adaptadores no bloqueantes,como</target>
        </trans-unit>
        <trans-unit id="9325b21ba8eb7433f310f7b75d64fcb1f234930e" translate="yes" xml:space="preserve">
          <source>You can also pass multiple</source>
          <target state="translated">También puedes pasar múltiples</target>
        </trans-unit>
        <trans-unit id="7c06db8ce018823e4acce6d01b77b2cb522d276b" translate="yes" xml:space="preserve">
          <source>abstracts its I/O loop from the application and
thus exposes</source>
          <target state="translated">abstrae su bucle de E/S de la aplicación y así expone</target>
        </trans-unit>
        <trans-unit id="a5d04da3847a7cad90fb039b97a37c77b50ae474" translate="yes" xml:space="preserve">
          <source>ack_message()</source>
          <target state="translated">ack_message()</target>
        </trans-unit>
        <trans-unit id="229a1e55e99f825ea806dac972c76da781f78e7c" translate="yes" xml:space="preserve">
          <source>adapter exception handling can be used to check
for connection errors. Here is a very basic example:</source>
          <target state="translated">El manejo de excepciones del adaptador puede utilizarse para comprobar si hay errores de conexión.Aquí hay un ejemplo muy básico:</target>
        </trans-unit>
        <trans-unit id="231df8624f08e8b02919f1ee598a31cc44016579" translate="yes" xml:space="preserve">
          <source>adapter:</source>
          <target state="translated">adaptador:</target>
        </trans-unit>
        <trans-unit id="c30f50470a955c818bcf2188a01478ead104cd2e" translate="yes" xml:space="preserve">
          <source>add_callback()</source>
          <target state="translated">add_callback()</target>
        </trans-unit>
        <trans-unit id="310f4381138cd95fa74cf97db0603614793cb23a" translate="yes" xml:space="preserve">
          <source>add_callback_threadsafe()</source>
          <target state="translated">add_callback_threadsafe()</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">en</target>
        </trans-unit>
        <trans-unit id="7daa7f8cb10c398b00f966b355f6ef1ac5177a2f" translate="yes" xml:space="preserve">
          <source>and implementing its abstract
methods. This approach facilitates implementation of custom
connection-establishment and transport mechanisms. For an example, refer to
the implementation of</source>
          <target state="translated">e implementando sus métodos abstractos.Este enfoque facilita la aplicación de mecanismos de conexión-establecimiento y transporte personalizados.Para un ejemplo,véase la aplicación de</target>
        </trans-unit>
        <trans-unit id="61199b0a222f89fd9006de829c75eeb5f7e7035d" translate="yes" xml:space="preserve">
          <source>as
needed in the last</source>
          <target state="translated">como se necesitó en la última</target>
        </trans-unit>
        <trans-unit id="3392765fde3d9f2308a46ed1018a00cd6f120a36" translate="yes" xml:space="preserve">
          <source>call_soon_threadsafe()</source>
          <target state="translated">call_soon_threadsafe()</target>
        </trans-unit>
        <trans-unit id="0e7d86840eb9f62e59b4b4260364873a8088100c" translate="yes" xml:space="preserve">
          <source>can be found in</source>
          <target state="translated">se puede encontrar en</target>
        </trans-unit>
        <trans-unit id="eb48b5d8f6c6c0379f9af8dacfb06dff54d5696d" translate="yes" xml:space="preserve">
          <source>class method.</source>
          <target state="translated">método de clase.</target>
        </trans-unit>
        <trans-unit id="68f86745b5be8d66632a4bd0084393c1d8a446b4" translate="yes" xml:space="preserve">
          <source>connection_attempts</source>
          <target state="translated">intentos de conexión</target>
        </trans-unit>
        <trans-unit id="c1e414ff846ffd8fc33801a4bf9925abd5cdd83c" translate="yes" xml:space="preserve">
          <source>create_connection()</source>
          <target state="translated">create_connection()</target>
        </trans-unit>
        <trans-unit id="669150ab74d2a04572a5af2a2d1b32b70a2ddf29" translate="yes" xml:space="preserve">
          <source>element of the sequence.
Retries occur after connection attempts using all of the given connection
parameters fail.</source>
          <target state="translated">elemento de la secuencia.Los reintentos se producen después de que fallan los intentos de conexión utilizando todos los parámetros de conexión dados.</target>
        </trans-unit>
        <trans-unit id="f1f65cea9aecc4954566cdf076a7ab5455d20ae4" translate="yes" xml:space="preserve">
          <source>examples/asynchronous_consumer_example.py</source>
          <target state="translated">ejemplos/ejemplo_consumidor_sincrónico.py</target>
        </trans-unit>
        <trans-unit id="e29f709a7ac05b8b1822d14f122efedc02e8684a" translate="yes" xml:space="preserve">
          <source>examples/consume_recover.py</source>
          <target state="translated">ejemplos/consumo_recuperación.py</target>
        </trans-unit>
        <trans-unit id="de22bfa33cef0e4dc4199fdcbb5e38df64de7d8a" translate="yes" xml:space="preserve">
          <source>examples/consume_recover_retry.py</source>
          <target state="translated">ejemplos/consumir_recuperar_retirar.py</target>
        </trans-unit>
        <trans-unit id="58ae7c8ad158f1ed536b31ffa2223daaf659acc1" translate="yes" xml:space="preserve">
          <source>function
to be executed in the connection adapter&amp;rsquo;s I/O loop thread using an
adapter-specific mechanism:</source>
          <target state="translated">function to be executed in the connection adapter&amp;rsquo;s I/O loop thread using an adapter-specific mechanism:</target>
        </trans-unit>
        <trans-unit id="759730a97e4373f3a0ee12805db065e3a4a649a5" translate="yes" xml:space="preserve">
          <source>google</source>
          <target state="translated">google</target>
        </trans-unit>
        <trans-unit id="e133e2cb5fc18cbcec376bf30c9cd1e6b7dfc07b" translate="yes" xml:space="preserve">
          <source>implements</source>
          <target state="translated">Implementa</target>
        </trans-unit>
        <trans-unit id="43635c3e98ad064b203f3d81a196e89559d335f2" translate="yes" xml:space="preserve">
          <source>instances for
fault-tolerance as in the code snippet below (host names are just examples, of
course). To enable retries, set</source>
          <target state="translated">de tolerancia a fallos como en el fragmento de código que figura a continuación (los nombres de los anfitriones son sólo ejemplos,por supuesto).Para habilitar los reintentos,establezca</target>
        </trans-unit>
        <trans-unit id="e3fff2cb181255ff013865941e2c303e9eb14dfb" translate="yes" xml:space="preserve">
          <source>on_close_callback</source>
          <target state="translated">on_close_callback</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">lub</target>
        </trans-unit>
        <trans-unit id="2fb9094902e4abc5bf059a6eb2cae352b13b2c06" translate="yes" xml:space="preserve">
          <source>pika.BaseConnection</source>
          <target state="translated">pika.BaseConexión</target>
        </trans-unit>
        <trans-unit id="01fb5cde16ce3a1a87b84ce9142e5f6de2ab3cc2" translate="yes" xml:space="preserve">
          <source>pika.BlockingConnection</source>
          <target state="translated">pika.Bloqueo de la conexión</target>
        </trans-unit>
        <trans-unit id="bc893f1cafa4f6247eacb4842b896d811eb2ec6e" translate="yes" xml:space="preserve">
          <source>pika.BlockingConnection.add_callback_threadsafe()</source>
          <target state="translated">pika.BlockingConnection.add_callback_threadsafe()</target>
        </trans-unit>
        <trans-unit id="425f261636dc3059666f427db702308db1871339" translate="yes" xml:space="preserve">
          <source>pika.ConnectionParameters</source>
          <target state="translated">pika.ConexiónParámetros</target>
        </trans-unit>
        <trans-unit id="813cf55fa06b3696cbb6af2f8a7c4d0e8a859e14" translate="yes" xml:space="preserve">
          <source>pika.SelectConnection</source>
          <target state="translated">pika.SelectConnection</target>
        </trans-unit>
        <trans-unit id="3b27248a415c3f50af00e468d3aac1728eb82caa" translate="yes" xml:space="preserve">
          <source>pika.adapters.asyncio_connection.AsyncioConnection</source>
          <target state="translated">pika.adaptadores.asyncio_connection.AsyncioConnection</target>
        </trans-unit>
        <trans-unit id="cf070c37a3201afc125f7a26545e784b3be98079" translate="yes" xml:space="preserve">
          <source>pika.adapters.tornado_connection.TornadoConnection</source>
          <target state="translated">pika.adaptadores.tornado_connection.TornadoConnection</target>
        </trans-unit>
        <trans-unit id="6d5f9688852e57b3610f718b3ca05f5d3bb456c9" translate="yes" xml:space="preserve">
          <source>pika.adapters.twisted_connection.TwistedProtocolConnection</source>
          <target state="translated">pika.adaptadores.twisted_connection.TwistedProtocolConnection</target>
        </trans-unit>
        <trans-unit id="2d46d872683056e64ca1a52b39cff1adea4646d9" translate="yes" xml:space="preserve">
          <source>pika.adapters.utils.nbio_interface.AbstractIOServices</source>
          <target state="translated">pika.adaptadores.utils.nbio_interface.AbstractIOServices</target>
        </trans-unit>
        <trans-unit id="2c813f680e5be4195ea9cd55896f042070875142" translate="yes" xml:space="preserve">
          <source>pika.connection.Connection</source>
          <target state="translated">pika.connection.Connection</target>
        </trans-unit>
        <trans-unit id="795eed44f0637b619b4457d0f2227effdc74a5e6" translate="yes" xml:space="preserve">
          <source>retry_delay</source>
          <target state="translated">retry_delay</target>
        </trans-unit>
        <trans-unit id="44a272234265dca81cc29e0c2d97e7acb3e269b6" translate="yes" xml:space="preserve">
          <source>select()</source>
          <target state="translated">select()</target>
        </trans-unit>
        <trans-unit id="70c0fa2a6b3e56590d8e82d81416bfbfd40ccb47" translate="yes" xml:space="preserve">
          <source>style prior to
issuing your pull request. &lt;em&gt;Note: only format those lines that you have changed
in your pull request. If you format an entire file and change code outside of
the scope of your PR, it will likely be rejected.&lt;/em&gt;</source>
          <target state="translated">style prior to issuing your pull request. &lt;em&gt;Note: only format those lines that you have changed in your pull request. If you format an entire file and change code outside of the scope of your PR, it will likely be rejected.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e8c459a1aa96605a41ae5c3526f86cab173c9cd" translate="yes" xml:space="preserve">
          <source>to react to connection
failure events. This callback can be used to clean up and recover the
connection.</source>
          <target state="translated">para reaccionar a los eventos de fallo de conexión.Esta llamada puede ser usada para limpiar y recuperar la conexión.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
