<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/flip/">
    <body>
      <group id="flip">
        <trans-unit id="ac838a2537511b4fc5bc1bc99f97d9784cb290bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flip&lt;/strong&gt; is a logical framework written in Python.  A logical framework is
a library for defining logics and writing applications such as theorem
provers.  One Flip application is a proof checker for entering and
editing proofs in natural deduction style.  Here is some output from
the checker, generated from a Python proof script:</source>
          <target state="translated">&lt;strong&gt;Flip&lt;/strong&gt; es un marco l&amp;oacute;gico escrito en Python. Un marco l&amp;oacute;gico es una biblioteca para definir l&amp;oacute;gicas y escribir aplicaciones como probadores de teoremas. La aplicaci&amp;oacute;n One Flip es un verificador de pruebas para ingresar y editar pruebas en estilo de deducci&amp;oacute;n natural. Aqu&amp;iacute; hay algunos resultados del verificador, generados a partir de un script de prueba de Python:</target>
        </trans-unit>
        <trans-unit id="98f9260f05eb51cb0e0bb2dbb26c467ba6b79b51" translate="yes" xml:space="preserve">
          <source>F L i P : Logical Framework in Python</source>
          <target state="translated">F L i P:Marco Lógico en Python</target>
        </trans-unit>
        <trans-unit id="6a63c0fec8b5d1246c5634345cb0ddbd176afd83" translate="yes" xml:space="preserve">
          <source>Flip was undertaken as a Python programming exercise.  It is not
intended to compete with industrial-strength theorem provers such as HOL,
nor with nicely-designed educational provers such as Jape.
That said, the checker is quite capable of working the examples and
exercises in university-level textbooks on logic for computer science or
mathematics, such as Kaye, Huth and Ryan, and Bornat.</source>
          <target state="translated">Flip se llevó a cabo como un ejercicio de programación de Python.No pretende competir con los probadores de teoremas de fuerza industrial como HOL,ni con probadores educativos bien diseñados como Jape.Dicho esto,el verificador es bastante capaz de trabajar los ejemplos y ejercicios de los libros de texto de nivel universitario sobre lógica para ciencias de la computación o matemáticas,como Kaye,Huth y Ryan,y Bornat.</target>
        </trans-unit>
        <trans-unit id="1cc62108e4ba2253d28ad6af13e8bcd651280ca2" translate="yes" xml:space="preserve">
          <source>The checker can use different logics; Flip comes with several.  You
can add another logic, or add axioms and derived rules, by writing a
module in Python.  Python is both the object language and the
metalanguage.  Formulas, inference rules, and entire proofs are Python
expressions.  Prover commands are Python functions.  The Python
interpreter itself is the only user interface to the proof checker
application.  (It is not necessary to know much Python to use the
checker.)</source>
          <target state="translated">El corrector puede usar diferentes lógicas;Flip viene con varias.Puede añadir otra lógica,o añadir axiomas y reglas derivadas,escribiendo un módulo en Python.Python es tanto el lenguaje de los objetos como el metalenguaje.Fórmulas,reglas de inferencia y pruebas completas son expresiones en Python.Los comandos Prover son funciones Python.El intérprete de Python en sí mismo es la única interfaz de usuario de la aplicación de comprobación de pruebas.(No es necesario saber mucho de Python para usar el verificador).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
