<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/pelican-linkclass/">
    <body>
      <group id="pelican-linkclass">
        <trans-unit id="71dbaf21f188c647974c870deec82fb5f41a6076" translate="yes" xml:space="preserve">
          <source>(The file &lt;code&gt;external-link.png&lt;/code&gt; is also distributed with this plugin.  Just
copy it to the appropriate place in your website source tree, for instance
in &lt;code&gt;theme/static/images/&lt;/code&gt;.)</source>
          <target state="translated">(The file &lt;code&gt;external-link.png&lt;/code&gt; is also distributed with this plugin. Just copy it to the appropriate place in your website source tree, for instance in &lt;code&gt;theme/static/images/&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="5d9540ff93a75d47409d6a0aa37491da117ecdf8" translate="yes" xml:space="preserve">
          <source>Acknowledgments</source>
          <target state="translated">Agradecimientos</target>
        </trans-unit>
        <trans-unit id="027cd45b684889c11b148ffb7d7ff96ccde118ec" translate="yes" xml:space="preserve">
          <source>Allows the setting of the class attribute of `&lt;a&gt;` elements according to whether the link is external or internal to the Pelican-generated site.</source>
          <target state="translated">Allows the setting of the class attribute of `&lt;a&gt;` elements according to whether the link is external or internal to the Pelican-generated site.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Autor</target>
        </trans-unit>
        <trans-unit id="c6fece3af6ffddf1ed2548e5facb2a2b0bdeea3e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2015, 2017, 2019  Rafael Laboissiere (&lt;a href=&quot;mailto:rafael@laboissiere.net&quot;&gt;rafael@laboissiere.net&lt;/a&gt;)</source>
          <target state="translated">Copyright (C) 2015, 2017, 2019 Rafael Laboissiere (&lt;a href=&quot;mailto:rafael@laboissiere.net&quot;&gt;rafael@laboissiere.net&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descripción</target>
        </trans-unit>
        <trans-unit id="fd5e52a67f37368d31f1c211bb5e3e370aaa8d17" translate="yes" xml:space="preserve">
          <source>For now, this plugin only works with Markdown.  It was tested with version
3.0.1 of the Python Markdown module.  It may not work with previous
versions.</source>
          <target state="translated">Por ahora,este plugin sólo funciona con Markdown.Fue probado con la versión 3.0.1 del módulo Python Markdown.Puede que no funcione con las versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="62297e40c1f7a5f36b0c96812d82bd6e7b1485f6" translate="yes" xml:space="preserve">
          <source>If the default values of the configuration variables are used, then a
possible CSS setting would be:</source>
          <target state="translated">Si se utilizan los valores por defecto de las variables de configuración,entonces un posible ajuste de CSS sería:</target>
        </trans-unit>
        <trans-unit id="7ba9541daf3f58f9674ca6e2f3c060616c7e1932" translate="yes" xml:space="preserve">
          <source>In order to avoid clashes with already-defined classes in the user CSS
style sheets, it is possible to specify the name of the classes that will
be used.  They can be specified in the Pelican setting files with the
&lt;code&gt;LINKCLASS&lt;/code&gt; variable, which must be defined as a list of tuples, like this:</source>
          <target state="translated">In order to avoid clashes with already-defined classes in the user CSS style sheets, it is possible to specify the name of the classes that will be used. They can be specified in the Pelican setting files with the &lt;code&gt;LINKCLASS&lt;/code&gt; variable, which must be defined as a list of tuples, like this:</target>
        </trans-unit>
        <trans-unit id="de7bb7ef3b8a5597cdd32d7152549e213144c3d8" translate="yes" xml:space="preserve">
          <source>Link Class for Pelican</source>
          <target state="translated">Clase de enlace para el pelícano</target>
        </trans-unit>
        <trans-unit id="84a37beb68e184130cc1816e96748add5321613f" translate="yes" xml:space="preserve">
          <source>Many thanks to &lt;a href=&quot;https://github.com/aviskase&quot;&gt;Yuliya Bagriy&lt;/a&gt; for setting up
the package for &lt;a href=&quot;https://pypi.org/&quot;&gt;PyPI&lt;/a&gt; and &lt;a href=&quot;https://github.com/Lucas-C&quot;&gt;Lucas
Cimon&lt;/a&gt; for fixing the issues with
&lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt; and the smooth integration into the Pelican
repository as a sub-module.</source>
          <target state="translated">Many thanks to &lt;a href=&quot;https://github.com/aviskase&quot;&gt;Yuliya Bagriy&lt;/a&gt; for setting up the package for &lt;a href=&quot;https://pypi.org/&quot;&gt;PyPI&lt;/a&gt; and &lt;a href=&quot;https://github.com/Lucas-C&quot;&gt;Lucas Cimon&lt;/a&gt; for fixing the issues with &lt;a href=&quot;https://pytest.org/&quot;&gt;pytest&lt;/a&gt; and the smooth integration into the Pelican repository as a sub-module.</target>
        </trans-unit>
        <trans-unit id="86bed31db5deba16751a272c8b81076fdbe4f0ee" translate="yes" xml:space="preserve">
          <source>Note that this plugin also works with reference-style links, as in the
following example:</source>
          <target state="translated">Tenga en cuenta que este plugin también funciona con enlaces de estilo de referencia,como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="7ab34e4618b3da2360d8eb49b80ecf52df6e3ec0" translate="yes" xml:space="preserve">
          <source>One of the possible uses of this plugins is for styling.  Suppose that we
have the following in your article written with Markdown:</source>
          <target state="translated">Uno de los posibles usos de estos plugins es para el estilo.Supongamos que tenemos lo siguiente en tu artículo escrito con Markdown:</target>
        </trans-unit>
        <trans-unit id="ea83f1db81704d2dc1659d94a0874e5879bc70f5" translate="yes" xml:space="preserve">
          <source>Released under the GNU Affero Public License, version 3 or later.  No warranties.</source>
          <target state="translated">Publicado bajo la Licencia Pública Affero de GNU,versión 3 o posterior.Sin garantías.</target>
        </trans-unit>
        <trans-unit id="7aad00fb516f321169438f63c2135747930c54a9" translate="yes" xml:space="preserve">
          <source>Styling the hyperlinks</source>
          <target state="translated">El estilo de los hipervínculos</target>
        </trans-unit>
        <trans-unit id="6de73f3d9e50dcc05450e62d33c3f2d00acc5ff4" translate="yes" xml:space="preserve">
          <source>The default values for &lt;code&gt;EXTERNAL_CLASS&lt;/code&gt; and &lt;code&gt;INTERNAL_CLASS&lt;/code&gt; are,
respectively, &lt;code&gt;'external'&lt;/code&gt; and &lt;code&gt;'internal'&lt;/code&gt;.</source>
          <target state="translated">The default values for &lt;code&gt;EXTERNAL_CLASS&lt;/code&gt; and &lt;code&gt;INTERNAL_CLASS&lt;/code&gt; are, respectively, &lt;code&gt;'external'&lt;/code&gt; and &lt;code&gt;'internal'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="253c76141c9c3a14e34a5e3f51cf23342c21c8ba" translate="yes" xml:space="preserve">
          <source>Then, the result will look like the following:</source>
          <target state="translated">Entonces,el resultado será como el siguiente:</target>
        </trans-unit>
        <trans-unit id="90ea77d47367c851a31bf076f710aa31cfd43919" translate="yes" xml:space="preserve">
          <source>This plugin allows the setting of the class attribute of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements
(generated in Markdown by &lt;code&gt;[ext](link)&lt;/code&gt;) according to whether the link is
external (i.e. starts with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;) or internal to the
Pelican-generated site.</source>
          <target state="translated">This plugin allows the setting of the class attribute of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements (generated in Markdown by &lt;code&gt;[ext](link)&lt;/code&gt; ) according to whether the link is external (i.e. starts with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; ) or internal to the Pelican-generated site.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Uso</target>
        </trans-unit>
        <trans-unit id="18a849c6d1188921d994903fefc439b3474d688a" translate="yes" xml:space="preserve">
          <source>User Settings</source>
          <target state="translated">Configuración del usuario</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
