<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/filterpy/">
    <body>
      <group id="filterpy">
        <trans-unit id="8a8e298f9a396f054dba117cef6a17d8c2fbb635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Imminent drop of support of Python 2.7, 3.4. See section below for details.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Ca&amp;iacute;da inminente del soporte de Python 2.7, 3.4. Consulte la secci&amp;oacute;n a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4d58a7251bc15282c41f3b3a4aa3f72641348a7f" translate="yes" xml:space="preserve">
          <source>All tests are written to work with py.test. Just type</source>
          <target state="translated">Todas las pruebas están escritas para trabajar con py.test.Sólo tienes que escribir</target>
        </trans-unit>
        <trans-unit id="c1939d3939c93a9c3ab83c20a36c6f9ccb15e5ef" translate="yes" xml:space="preserve">
          <source>And, if you want to install from the bleeding edge git version</source>
          <target state="translated">Y,si quieres instalar desde la versión git de la frontera...</target>
        </trans-unit>
        <trans-unit id="e5a8c89ee16ef426c7761586d7e5aa3f19a032ae" translate="yes" xml:space="preserve">
          <source>As explained above, the tests are not robust. I&amp;rsquo;m still at the stage
where visual plots are the best way to see how things are working.
Apologies, but I think it is a sound choice for development. It is easy
for a filter to perform within theoretical limits (which we can write a
non-visual test for) yet be &amp;lsquo;off&amp;rsquo; in some way. The code itself contains
tests in the form of asserts and properties that ensure that arrays are
of the proper dimension, etc.</source>
          <target state="translated">Como se explic&amp;oacute; anteriormente, las pruebas no son s&amp;oacute;lidas. Todav&amp;iacute;a estoy en la etapa en la que las tramas visuales son la mejor manera de ver c&amp;oacute;mo funcionan las cosas. Disculpas, pero creo que es una buena elecci&amp;oacute;n para el desarrollo. Es f&amp;aacute;cil que un filtro funcione dentro de los l&amp;iacute;mites te&amp;oacute;ricos (para los que podemos escribir una prueba no visual) pero que est&amp;eacute; &quot;apagado&quot; de alguna manera. El c&amp;oacute;digo en s&amp;iacute; contiene pruebas en forma de afirmaciones y propiedades que garantizan que las matrices tengan la dimensi&amp;oacute;n adecuada, etc.</target>
        </trans-unit>
        <trans-unit id="4b613f6d7285ef9f4bef8a4f0bd6a6c9681d7640" translate="yes" xml:space="preserve">
          <source>At the moment FilterPy is on version 1.x. I plan to fork the project
to version 2.0, and support only Python 3.5+. The 1.x version
will still be available, but I will not support it. If I add something
amazing to 2.0 and someone really begs, I might backport it; more
likely I would accept a pull request with the feature backported
to 1.x. But to be honest I don&amp;rsquo;t forsee this happening.</source>
          <target state="translated">Por el momento FilterPy est&amp;aacute; en la versi&amp;oacute;n 1.x. Planeo bifurcar el proyecto a la versi&amp;oacute;n 2.0 y admitir solo Python 3.5+. La versi&amp;oacute;n 1.x seguir&amp;aacute; estando disponible, pero no la admitir&amp;eacute;. Si agrego algo asombroso a 2.0 y alguien realmente me lo suplica, podr&amp;iacute;a respaldarlo; lo m&amp;aacute;s probable es que acepte una solicitud de extracci&amp;oacute;n con la funci&amp;oacute;n retroportada a 1.x. Pero para ser honesto, no creo que esto suceda.</target>
        </trans-unit>
        <trans-unit id="168929183d2470cb5fd9c8ab272eed288ccb698d" translate="yes" xml:space="preserve">
          <source>Basic use</source>
          <target state="translated">Uso básico</target>
        </trans-unit>
        <trans-unit id="968bd2b33b4162a81ec2cd8ed2df38da9b302693" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2015 Roger R. Labbe Jr</source>
          <target state="translated">Copyright (c)2015 Roger R.Labbe Jr.</target>
        </trans-unit>
        <trans-unit id="3d89f90b67b082a45bef90c0d79a6ebd3711a370" translate="yes" xml:space="preserve">
          <source>FilterPy - Kalman filters and other optimal and non-optimal estimation filters in Python.</source>
          <target state="translated">FilterPy-Filtros de Kalman y otros filtros de estimación óptimos y no óptimos en Python.</target>
        </trans-unit>
        <trans-unit id="1c3fbbca97bb5d8f412fea56090f90411596cfe8" translate="yes" xml:space="preserve">
          <source>Finally, run the filter.</source>
          <target state="translated">Por último,ejecute el filtro.</target>
        </trans-unit>
        <trans-unit id="ee3680252bd004d7ef4df31fbaff398d7d1a87fd" translate="yes" xml:space="preserve">
          <source>First, import the filters and helper functions.</source>
          <target state="translated">Primero,importa los filtros y las funciones de ayuda.</target>
        </trans-unit>
        <trans-unit id="35555ce65ba60c36f60b29bd85e767779829a60a" translate="yes" xml:space="preserve">
          <source>Full documentation is at
&lt;a href=&quot;https://filterpy.readthedocs.io/en/latest/&quot;&gt;https://filterpy.readthedocs.io/en/latest/&lt;/a&gt;</source>
          <target state="translated">La documentaci&amp;oacute;n completa est&amp;aacute; en &lt;a href=&quot;https://filterpy.readthedocs.io/en/latest/&quot;&gt;https://filterpy.readthedocs.io/en/latest/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="816b4bbd3e420c572b205dac19fade101d072597" translate="yes" xml:space="preserve">
          <source>I am making edits to the package now in support of my book;
once those are done I&amp;rsquo;ll probably create the 2.0 branch.
I&amp;rsquo;m contemplating a SLAM addition to the book, and am not
sure if I will do this in 3.5+ only or not.</source>
          <target state="translated">Estoy editando el paquete ahora para respaldar mi libro; una vez que haya terminado, probablemente crear&amp;eacute; la rama 2.0. Estoy contemplando una adici&amp;oacute;n de SLAM al libro, y no estoy seguro de si har&amp;eacute; esto solo en 3.5+ o no.</target>
        </trans-unit>
        <trans-unit id="a748886f04c2328f504cab48b8f72e609596428e" translate="yes" xml:space="preserve">
          <source>I haven&amp;rsquo;t extensively tested backwards compatibility - I use the
Anaconda distribution, and so I am on Python 3.6 and 2.7.14, along with
whatever version of NumPy, SciPy, and matplotlib they provide. But I am
using pretty basic Python - numpy.array, maybe a list comprehension in
my tests.</source>
          <target state="translated">No he probado exhaustivamente la compatibilidad con versiones anteriores: uso la distribuci&amp;oacute;n Anaconda, por lo que estoy en Python 3.6 y 2.7.14, junto con cualquier versi&amp;oacute;n de NumPy, SciPy y matplotlib que brinden. Pero estoy usando Python bastante b&amp;aacute;sico: numpy.array, tal vez una lista de comprensi&amp;oacute;n en mis pruebas.</target>
        </trans-unit>
        <trans-unit id="8e09978b025a4723b3622ef57e7d817d2a858e11" translate="yes" xml:space="preserve">
          <source>I haven&amp;rsquo;t finalized my decision on this, but NumPy is dropping
Python 2.7 support in December 2018. I will certainly drop Python
2.7 support by then; I will probably do it much sooner.</source>
          <target state="translated">No he finalizado mi decisi&amp;oacute;n al respecto, pero NumPy dejar&amp;aacute; de admitir Python 2.7 en diciembre de 2018. Sin duda, dejar&amp;eacute; de admitir Python 2.7 para entonces; Probablemente lo haga mucho antes.</target>
        </trans-unit>
        <trans-unit id="61c05ef3006579fbdd490e4b533ee3726eb4d772" translate="yes" xml:space="preserve">
          <source>I import from &lt;strong&gt;__future__&lt;/strong&gt; to ensure the code works in Python 2 and 3.</source>
          <target state="translated">&lt;strong&gt;Importo&lt;/strong&gt; desde &lt;strong&gt;__future__&lt;/strong&gt; para asegurarme de que el c&amp;oacute;digo funcione en Python 2 y 3.</target>
        </trans-unit>
        <trans-unit id="7488ac725f5d27750031e40080ed22d2b9cd5291" translate="yes" xml:space="preserve">
          <source>I said three books. I also like and use Bar-Shalom&amp;rsquo;s Estimation with
Applications to Tracking and Navigation. Much more mathematical than the
previous two books, I would not recommend it as a first text unless you
already have a background in control theory or optimal estimation. Once
you have that experience, this book is a gem. Every sentence is crystal
clear, his language is precise, but each abstract mathematical statement
is followed with something like &amp;ldquo;and this means&amp;hellip;&amp;rdquo;.</source>
          <target state="translated">Dije tres libros. Tambi&amp;eacute;n me gusta y utilizo la estimaci&amp;oacute;n de Bar-Shalom con aplicaciones para seguimiento y navegaci&amp;oacute;n. Mucho m&amp;aacute;s matem&amp;aacute;tico que los dos libros anteriores, no lo recomendar&amp;iacute;a como primer texto a menos que ya tenga experiencia en teor&amp;iacute;a de control o estimaci&amp;oacute;n &amp;oacute;ptima. Una vez que tenga esa experiencia, este libro es una joya. Cada oraci&amp;oacute;n es clara como el cristal, su lenguaje es preciso, pero cada enunciado matem&amp;aacute;tico abstracto va seguido de algo como &quot;y esto significa ...&quot;.</target>
        </trans-unit>
        <trans-unit id="2aa942fd3c88f16190a93b80a61fa11f8ebdb5a4" translate="yes" xml:space="preserve">
          <source>I use NumPy and SciPy for all of the computations. I have experimented
with Numba and it yields impressive speed ups with minimal costs, but I
am not convinced that I want to add that requirement to my project. It
is still on my list of things to figure out, however.</source>
          <target state="translated">Uso NumPy y SciPy para todos los cálculos.He experimentado con Numba y produce impresionantes aceleraciones con mínimos costes,pero no estoy convencido de que quiera añadir ese requisito a mi proyecto.Sin embargo,todavía está en mi lista de cosas por resolver.</target>
        </trans-unit>
        <trans-unit id="ba522cc2398fca76e29351085a92280f3c143c00" translate="yes" xml:space="preserve">
          <source>I use three main texts as my refererence, though I do own the majority
of the Kalman filtering literature. First is Paul Zarchan&amp;rsquo;s
&amp;lsquo;Fundamentals of Kalman Filtering: A Practical Approach&amp;rsquo;. I think it by
far the best Kalman filtering book out there if you are interested in
practical applications more than writing a thesis. The second book I use
is Eli Brookner&amp;rsquo;s &amp;lsquo;Tracking and Kalman Filtering Made Easy&amp;rsquo;. This is an
astonishingly good book; its first chapter is actually readable by the
layperson! Brookner starts from the g-h filter, and shows how all other
filters - the Kalman filter, least squares, fading memory, etc., all
derive from the g-h filter. It greatly simplifies many aspects of
analysis and/or intuitive understanding of your problem. In contrast,
Zarchan starts from least squares, and then moves on to Kalman
filtering. I find that he downplays the predict-update aspect of the
algorithms, but he has a wealth of worked examples and comparisons
between different methods. I think both viewpoints are needed, and so I
can&amp;rsquo;t imagine discarding one book. Brookner also focuses on issues that
are ignored in other books - track initialization, detecting and
discarding noise, tracking multiple objects, an so on.</source>
          <target state="translated">Utilizo tres textos principales como referencia, aunque poseo la mayor&amp;iacute;a de la literatura de filtrado de Kalman. En primer lugar, se encuentran los 'Fundamentos del filtrado de Kalman: un enfoque pr&amp;aacute;ctico' de Paul Zarchan. Creo que es, con mucho, el mejor libro de filtrado de Kalman que existe si est&amp;aacute;s interesado en aplicaciones pr&amp;aacute;cticas m&amp;aacute;s que en escribir una tesis. El segundo libro que utilizo es 'Tracking and Kalman Filtering Made Easy' de Eli Brookner. Este es un libro asombrosamente bueno; &amp;iexcl;Su primer cap&amp;iacute;tulo es realmente legible por el profano! Brookner parte del filtro gh y muestra c&amp;oacute;mo todos los dem&amp;aacute;s filtros (el filtro de Kalman, los m&amp;iacute;nimos cuadrados, la memoria de desvanecimiento, etc.) derivan del filtro gh. Simplifica en gran medida muchos aspectos del an&amp;aacute;lisis y / o la comprensi&amp;oacute;n intuitiva de su problema. Por el contrario, Zarchan comienza desde m&amp;iacute;nimos cuadrados y luego pasa al filtrado de Kalman.Encuentro que minimiza el aspecto de predicci&amp;oacute;n y actualizaci&amp;oacute;n de los algoritmos, pero tiene una gran cantidad de ejemplos y comparaciones entre diferentes m&amp;eacute;todos. Creo que se necesitan ambos puntos de vista, por lo que no puedo imaginar descartar un libro. Brookner tambi&amp;eacute;n se centra en cuestiones que se ignoran en otros libros: seguimiento de la inicializaci&amp;oacute;n, detecci&amp;oacute;n y descarte de ruido, seguimiento de varios objetos, etc.</target>
        </trans-unit>
        <trans-unit id="b9067a5289890407887c107d828776b6282737e0" translate="yes" xml:space="preserve">
          <source>If you prefer to download the source yourself</source>
          <target state="translated">Si prefiere descargar la fuente usted mismo</target>
        </trans-unit>
        <trans-unit id="950ad6a6b9a6d7503133a16c0753c700fd4b6713" translate="yes" xml:space="preserve">
          <source>If you use Anaconda, you can install from the conda-forge channel. You
will need to add the conda-forge channel if you haven&amp;rsquo;t already done so:</source>
          <target state="translated">Si usa Anaconda, puede instalar desde el canal conda-forge. Deber&amp;aacute; agregar el canal conda-forge si a&amp;uacute;n no lo ha hecho:</target>
        </trans-unit>
        <trans-unit id="d021e768fe46c9e993b9bc26daebe1e0a7ccf5ea" translate="yes" xml:space="preserve">
          <source>Initialize the filter&amp;rsquo;s matrices.</source>
          <target state="translated">Inicializa las matrices del filtro.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="069f6f37ff0b3b14a1e2b9c9a3ca8b9b8085a537" translate="yes" xml:space="preserve">
          <source>Kalman filtering and optimal estimation library</source>
          <target state="translated">Biblioteca de filtrado y estimación óptima de Kalman</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Licencia</target>
        </trans-unit>
        <trans-unit id="ff42cf30abec69d9cd5e9a6d51db617908be4d0b" translate="yes" xml:space="preserve">
          <source>My aim is largely pedalogical - I opt for clear code that matches the
equations in the relevant texts on a 1-to-1 basis, even when that has a
performance cost. There are places where this tradeoff is unclear - for
example, I find it somewhat clearer to write a small set of equations
using linear algebra, but numpy&amp;rsquo;s overhead on small matrices makes it
run slower than writing each equation out by hand. Furthermore, books
such Zarchan present the written out form, not the linear algebra form.
It is hard for me to choose which presentation is &amp;lsquo;clearer&amp;rsquo; - it depends
on the audience. In that case I usually opt for the faster implementation.</source>
          <target state="translated">Mi objetivo es en gran medida pedag&amp;oacute;gico: opto por un c&amp;oacute;digo claro que coincida con las ecuaciones de los textos relevantes en una base de 1 a 1, incluso cuando eso tiene un costo de rendimiento. Hay lugares donde esta compensaci&amp;oacute;n no est&amp;aacute; clara; por ejemplo, me parece algo m&amp;aacute;s claro escribir un peque&amp;ntilde;o conjunto de ecuaciones usando &amp;aacute;lgebra lineal, pero la sobrecarga de numpy en matrices peque&amp;ntilde;as hace que funcione m&amp;aacute;s lento que escribir cada ecuaci&amp;oacute;n a mano. Adem&amp;aacute;s, libros como Zarchan presentan la forma escrita, no la forma de &amp;aacute;lgebra lineal. Es dif&amp;iacute;cil para m&amp;iacute; elegir qu&amp;eacute; presentaci&amp;oacute;n es 'm&amp;aacute;s clara', depende de la audiencia. En ese caso suelo optar por la implementaci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida.</target>
        </trans-unit>
        <trans-unit id="fa8af4cb23ae77c128a4a33e6c038f3d5d3fe115" translate="yes" xml:space="preserve">
          <source>My book &lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt;
uses this library, and is the place to go if you are trying to learn
about Kalman filtering and/or this library. These two are not exactly in
sync - my normal development cycle is to add files here, test them, figure
out how to present them pedalogically, then write the appropriate section
or chapter in the book. So there is code here that is not discussed
yet in the book.</source>
          <target state="translated">Mi libro &lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt; utiliza esta biblioteca y es el lugar al que debe acudir si est&amp;aacute; intentando aprender sobre el filtrado de Kalman y / o esta biblioteca. Estos dos no est&amp;aacute;n exactamente sincronizados: mi ciclo de desarrollo normal es agregar archivos aqu&amp;iacute;, probarlos, descubrir c&amp;oacute;mo presentarlos de manera pedag&amp;oacute;gica y luego escribir la secci&amp;oacute;n o cap&amp;iacute;tulo apropiado en el libro. As&amp;iacute; que hay un c&amp;oacute;digo aqu&amp;iacute; que a&amp;uacute;n no se analiza en el libro.</target>
        </trans-unit>
        <trans-unit id="24162d16555bd8804ec6c655dbbca2fb05c22443" translate="yes" xml:space="preserve">
          <source>Note: I make no guarantees that everything works if you install from here.
I&amp;rsquo;m the only developer, and so I don&amp;rsquo;t worry about dev/release branches and
the like. Unless I fix a bug for you and tell you to get this version because
I haven&amp;rsquo;t made a new release yet, I strongly advise not installing from git.</source>
          <target state="translated">Nota: No garantizo que todo funcione si lo instala desde aqu&amp;iacute;. Soy el &amp;uacute;nico desarrollador, por lo que no me preocupo por las ramas de desarrollo / lanzamiento y cosas por el estilo. A menos que le solucione un error y le diga que obtenga esta versi&amp;oacute;n porque a&amp;uacute;n no he hecho una nueva versi&amp;oacute;n, le recomiendo encarecidamente que no instale desde git.</target>
        </trans-unit>
        <trans-unit id="a94bc79395b7f9e096a0e3083d5e99d870902600" translate="yes" xml:space="preserve">
          <source>Now, create the filter</source>
          <target state="translated">Ahora,crea el filtro</target>
        </trans-unit>
        <trans-unit id="4428df60996dd395af6c51238f43c71d4400a7fa" translate="yes" xml:space="preserve">
          <source>Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:</source>
          <target state="translated">Por la presente se otorga permiso, sin cargo, a cualquier persona que obtenga una copia de este software y los archivos de documentaci&amp;oacute;n asociados (el &quot;Software&quot;), para utilizar el Software sin restricciones, incluidos, entre otros, los derechos de uso, copia, modificaci&amp;oacute;n, fusi&amp;oacute;n , publicar, distribuir, sublicenciar y / o vender copias del Software, y permitir que las personas a quienes se les proporcione el Software lo hagan, sujeto a las siguientes condiciones:</target>
        </trans-unit>
        <trans-unit id="c89209cb3cdced2b4e97399f88e4af894bfd8485" translate="yes" xml:space="preserve">
          <source>Plan for dropping Python 2.7 support</source>
          <target state="translated">Plan para abandonar el soporte de Python 2.7</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">Referencias</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requisitos</target>
        </trans-unit>
        <trans-unit id="f5470597044f9881eb58bf21ebb16608cd981bed" translate="yes" xml:space="preserve">
          <source>Sorry, that is the extent of the documentation here. However, the library
is broken up into subdirectories: gh, kalman, memory, leastsq, and so on.
Each subdirectory contains python files relating to that form of filter.
The functions and methods contain pretty good docstrings on use.</source>
          <target state="translated">Lo siento,esa es la extensión de la documentación aquí.Sin embargo,la biblioteca está dividida en subdirectorios:gh,kalman,memory,leastsq,etc.Cada subdirectorio contiene archivos Python relacionados con esa forma de filtro.Las funciones y métodos contienen muy buenos documentos sobre su uso.</target>
        </trans-unit>
        <trans-unit id="e07e66ec2ec5d10f836f2ac4a05173041f8d092a" translate="yes" xml:space="preserve">
          <source>Sphinx generated documentation lives at &lt;a href=&quot;http://filterpy.readthedocs.org/&quot;&gt;http://filterpy.readthedocs.org/&lt;/a&gt;.
Generation is triggered by git when I do a check in, so this will always
be bleeding edge development version - it will often be ahead of the
released version.</source>
          <target state="translated">La documentaci&amp;oacute;n generada por Sphinx vive en &lt;a href=&quot;http://filterpy.readthedocs.org/&quot;&gt;http://filterpy.readthedocs.org/&lt;/a&gt; . La generaci&amp;oacute;n es activada por git cuando hago un check in, por lo que esta siempre ser&amp;aacute; una versi&amp;oacute;n de desarrollo de vanguardia, a menudo estar&amp;aacute; por delante de la versi&amp;oacute;n lanzada.</target>
        </trans-unit>
        <trans-unit id="ba51f3c923b832e2cb3feca36180c8813bdbec40" translate="yes" xml:space="preserve">
          <source>THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.TION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</source>
          <target state="translated">EL SOFTWARE SE PROPORCIONA &quot;TAL CUAL&quot;, SIN GARANT&amp;Iacute;A DE NING&amp;Uacute;N TIPO, EXPRESA O IMPL&amp;Iacute;CITA, INCLUYENDO, PERO NO LIMITADO A, LAS GARANT&amp;Iacute;AS DE COMERCIABILIDAD, APTITUD PARA UN PROP&amp;Oacute;SITO PARTICULAR Y NO INFRACCI&amp;Oacute;N. EN NING&amp;Uacute;N CASO LOS AUTORES O TITULARES DE LOS DERECHOS DE AUTOR SER&amp;Aacute;N RESPONSABLES DE CUALQUIER RECLAMO, DA&amp;Ntilde;OS U OTRAS RESPONSABILIDADES, YA SEA EN UNA ACCI&amp;Oacute;N DE CONTRATO, AGRAVIO O DE OTRO MODO, QUE SURJA DE, FUERA DE O EN RELACI&amp;Oacute;N CON EL SOFTWARE O EL USO U OTROS NEGOCIOS EN EL SOFTWARE. DE CONTRATO, AGRAVIO O DE OTRO MODO, QUE SURJA DE, FUERA DE O EN RELACI&amp;Oacute;N CON EL SOFTWARE O EL USO U OTROS NEGOCIOS EN EL SOFTWARE.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Prueba</target>
        </trans-unit>
        <trans-unit id="2770edfa17d1ba1518644752acbba767797d8840" translate="yes" xml:space="preserve">
          <source>The MIT License (MIT)</source>
          <target state="translated">La licencia del MIT (MIT)</target>
        </trans-unit>
        <trans-unit id="abf94dbab29db68325894cd60a65f3c2a1fc56fa" translate="yes" xml:space="preserve">
          <source>The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.</source>
          <target state="translated">El anterior aviso de derechos de autor y este aviso de permiso se incluirán en todas las copias o partes sustanciales del Software.</target>
        </trans-unit>
        <trans-unit id="ab40192173a47c8e5ce7406412a220e2a474ada7" translate="yes" xml:space="preserve">
          <source>The most general installation is just to use pip, which should come with
any modern Python distribution.</source>
          <target state="translated">La instalación más general es sólo para usar tubería,que debería venir con cualquier distribución moderna de Python.</target>
        </trans-unit>
        <trans-unit id="24d855a043cf9286f92b9e45c2eac0cf512060ff" translate="yes" xml:space="preserve">
          <source>This is code I am developing in conjunction with my book Kalman and
Bayesian Filter in Python, which you can read/download at
&lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt;</source>
          <target state="translated">Este es el c&amp;oacute;digo que estoy desarrollando junto con mi libro Kalman and Bayesian Filter en Python, que puede leer / descargar en &lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2920fd5055a135502dd8014d61c32dbbe26640" translate="yes" xml:space="preserve">
          <source>This library provides Kalman filtering and various related optimal and
non-optimal filtering software written in Python. It contains Kalman
filters, Extended Kalman filters, Unscented Kalman filters, Kalman
smoothers, Least Squares filters, fading memory filters, g-h filters,
discrete Bayes, and more.</source>
          <target state="translated">Esta biblioteca proporciona el filtrado Kalman y varios programas de filtrado óptimos y no óptimos relacionados escritos en Python.Contiene filtros Kalman,filtros Kalman extendidos,filtros Kalman sin aroma,suavizadores Kalman,filtros de Least Squares,filtros de memoria de desvanecimiento,filtros g-h,Bayes discretos,y más.</target>
        </trans-unit>
        <trans-unit id="e13f7bb9ae937b5d5cd0d8b07fd0aa0ec1e81f48" translate="yes" xml:space="preserve">
          <source>This library uses NumPy, SciPy, Matplotlib, and Python.</source>
          <target state="translated">Esta biblioteca utiliza NumPy,SciPy,Matplotlib y Python.</target>
        </trans-unit>
        <trans-unit id="6bf801da2d6dc208fc60fa6f2e476b5d0f913f6e" translate="yes" xml:space="preserve">
          <source>Why 3.5+, and not 3.4+? 3.5 introduced the matrix multiply symbol,
and I want my code to take advantage of it. Plus, to be honest,
I&amp;rsquo;m being selfish. I don&amp;rsquo;t want to spend my life supporting this
package, and moving as far into the present as possible means
a few extra years before the Python version I choose becomes
hopelessly dated and a liability. I recognize this makes people
running the default Python in their linux distribution more
painful. All I can say is I did not decide to do the Python
3 fork, and I don&amp;rsquo;t have the time to support the bifurcation
any longer.</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; 3.5+ y no 3.4+? 3.5 introdujo el s&amp;iacute;mbolo de multiplicaci&amp;oacute;n matricial y quiero que mi c&amp;oacute;digo lo aproveche. Adem&amp;aacute;s, para ser honesto, estoy siendo ego&amp;iacute;sta. No quiero pasar mi vida apoyando este paquete, y moverme lo m&amp;aacute;s lejos posible en el presente significa algunos a&amp;ntilde;os m&amp;aacute;s antes de que la versi&amp;oacute;n de Python que elijo se vuelva irremediablemente anticuada y una responsabilidad. Reconozco que esto hace que las personas que ejecutan el Python predeterminado en su distribuci&amp;oacute;n de Linux sean m&amp;aacute;s dolorosas. Todo lo que puedo decir es que no decid&amp;iacute; hacer la bifurcaci&amp;oacute;n de Python 3, y ya no tengo tiempo para soportar la bifurcaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7bda3972fd645f4aa5fd7bc9c0f516b27fc7fa48" translate="yes" xml:space="preserve">
          <source>and then install with:</source>
          <target state="translated">y luego instalar con:</target>
        </trans-unit>
        <trans-unit id="f6762bfd6156e1d6ad2d093399eec4c20a937173" translate="yes" xml:space="preserve">
          <source>at the
command line.</source>
          <target state="translated">en la línea de mando.</target>
        </trans-unit>
        <trans-unit id="30b49ad158449a6fb7703af823510598668f8ad0" translate="yes" xml:space="preserve">
          <source>conda config &amp;ndash;add channels conda-forge</source>
          <target state="translated">conda config &amp;ndash;agregar canales conda-forge</target>
        </trans-unit>
        <trans-unit id="99422a0a2caacfadcbdf22e2c4ec04c454b2eea3" translate="yes" xml:space="preserve">
          <source>conda install filterpy</source>
          <target state="translated">conda instalar filterpy</target>
        </trans-unit>
        <trans-unit id="0e043421bf3470cb731f4c32448c91e870f04998" translate="yes" xml:space="preserve">
          <source>py.test</source>
          <target state="translated">py.test</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
