<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/eyefi/">
    <body>
      <group id="eyefi">
        <trans-unit id="475144e4e531f3a6ea02c1638f44db7ef05db5be" translate="yes" xml:space="preserve">
          <source>After associating with one of the configured wireless networks,
the card authenticates a session with the server. The shared
secret needs to be obtained from the settings of the Win/OSX
application. The server can cope with multiple cards that are
identified by their MAC address. After authentication, the card
pushes the images that have not yet been posted to the server.
The server unpacks the tarred bundle (optionally in a directory
per MAC address). It then resolves the wireless networks that were
logged by the card at the time the picture was taken into a
geolocation using the Google API. The geolocation data is stored
in an XMP sidecar. Finally, you can trigger your own scripts
on complete upload, extraction and tagging.</source>
          <target state="translated">Después de asociarse con una de las redes inalámbricas configuradas,la tarjeta autentica una sesión con el servidor.El secreto compartido debe ser obtenido de la configuración de la aplicación Win/OSX.El servidor puede hacer frente a múltiples tarjetas que se identifican por su dirección MAC.Después de la autenticación,la tarjeta empuja las imágenes que aún no han sido publicadas en el servidor.El servidor desempaqueta el paquete tarado (opcionalmente en un directorio por dirección MAC).Luego resuelve las redes inalámbricas que fueron registradas por la tarjeta en el momento en que la imagen fue tomada en una geolocalización usando la API de Google.Los datos de la geolocalización se almacenan en un sidecar XMP.Finalmente,puede activar sus propios scripts en la carga completa,extracción y etiquetado.</target>
        </trans-unit>
        <trans-unit id="569494533c94be55518941d5feffa05b921bf327" translate="yes" xml:space="preserve">
          <source>EyeFi Server Framework</source>
          <target state="translated">Estructura del servidor EyeFi</target>
        </trans-unit>
        <trans-unit id="2e965268fb0c93a28147b6d204ef615267153d61" translate="yes" xml:space="preserve">
          <source>The EyeFi cards include both some 2-8GB of SDHC storage and an</source>
          <target state="translated">Las tarjetas EyeFi incluyen tanto unos 2-8GB de almacenamiento SDHC como un</target>
        </trans-unit>
        <trans-unit id="344b637c52822d1fd473e292725930fb5a54aaf1" translate="yes" xml:space="preserve">
          <source>embedded microprocessor with WiFi (802.11bgn) that can upload
images as soon as they have been captured. While the software
bundled with the cards is closed and Win/OSX only, the protocol
is decently clean SOAP (like XML RPC via HTTP) and can be
implemented with twisted and soappy.</source>
          <target state="translated">microprocesador incorporado con WiFi (802.11bgn)que puede subir imágenes tan pronto como han sido capturadas.Mientras que el software incluido en las tarjetas es cerrado y sólo Win/OSX,el protocolo es SOAP decentemente limpio (como XML RPC a través de HTTP)y puede ser implementado con retorcido y soappy.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
