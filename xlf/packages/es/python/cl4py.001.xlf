<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/cl4py/">
    <body>
      <group id="cl4py">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="dfc68394d92d28ed14e74422c938a34492324fd4" translate="yes" xml:space="preserve">
          <source>.  This
means, that the Lisp process will ignore any user initialization files,
including the Quicklisp setup.  However, we provide an extra option for
installing and loading Quicklisp automatically:</source>
          <target state="translated">. Esto significa que el proceso Lisp ignorar&amp;aacute; cualquier archivo de inicializaci&amp;oacute;n del usuario, incluida la configuraci&amp;oacute;n de Quicklisp. Sin embargo, ofrecemos una opci&amp;oacute;n adicional para instalar y cargar Quicklisp autom&amp;aacute;ticamente:</target>
        </trans-unit>
        <trans-unit id="4911a208b464e3c88a14296c202fff997a17499d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.hylang.org/en/stable/&quot;&gt;Hy&lt;/a&gt;
- Python, but with Lisp syntax. This project is certainly a great way to
get started with Lisp. It allows you to study the advantages of Lisp&amp;rsquo;s
seemingly weird syntax, without leaving the comfortable Python
ecosystem. Once you understand the advantages of Lisp, you will doubly
appreciate cl4py for your projects.</source>
          <target state="translated">&lt;a href=&quot;http://docs.hylang.org/en/stable/&quot;&gt;Hy&lt;/a&gt; - Python, pero con sintaxis Lisp. Este proyecto es sin duda una excelente manera de comenzar con Lisp. Le permite estudiar las ventajas de la sintaxis aparentemente extra&amp;ntilde;a de Lisp, sin salir del c&amp;oacute;modo ecosistema de Python. Una vez que comprenda las ventajas de Lisp, apreciar&amp;aacute; doblemente cl4py para sus proyectos.</target>
        </trans-unit>
        <trans-unit id="1d1057ed26fcf9d9d5910c3b2d1101ee4ec6fc0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bendudson/py4cl&quot;&gt;py4cl&lt;/a&gt;
- A library that allows Common Lisp code to access Python libraries.  It
is basically the inverse of cl4py.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bendudson/py4cl&quot;&gt;py4cl&lt;/a&gt; : una biblioteca que permite que el c&amp;oacute;digo Common Lisp acceda a las bibliotecas de Python. B&amp;aacute;sicamente es lo contrario de cl4py.</target>
        </trans-unit>
        <trans-unit id="8b891ac4c97379c150d0ecd3d198ae5a95776353" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/metawilm/cl-python&quot;&gt;cl-python&lt;/a&gt;
- A much heavier solution than cl4py &amp;mdash; let&amp;rsquo;s simply implement Python
in Lisp! An amazing project. However, cl-python cannot access foreign
libraries, e.g., NumPy. And people are probably hesitant to migrate away
from CPython.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/metawilm/cl-python&quot;&gt;cl-python&lt;/a&gt; - Una soluci&amp;oacute;n mucho m&amp;aacute;s pesada que cl4py - &amp;iexcl;simplemente implementemos Python en Lisp! Un proyecto asombroso. Sin embargo, cl-python no puede acceder a bibliotecas externas, por ejemplo, NumPy. Y la gente probablemente dude en migrar de CPython.</target>
        </trans-unit>
        <trans-unit id="a6cac227b0e0cfeba9b90f7681aca51b3fa2ed22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pinterface/burgled-batteries&quot;&gt;burgled-batteries&lt;/a&gt;
- A bridge between Python and Lisp. The goal is that Lisp programs can
use Python libraries, which is in some sense the opposite of
cl4py. Furthermore it relies on the less portable mechanism of FFI
calls.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pinterface/burgled-batteries&quot;&gt;bater&amp;iacute;as-robadas&lt;/a&gt; - Un puente entre Python y Lisp. El objetivo es que los programas Lisp puedan usar bibliotecas de Python, que en cierto sentido es lo opuesto a cl4py. Adem&amp;aacute;s, se basa en el mecanismo menos port&amp;aacute;til de llamadas FFI.</target>
        </trans-unit>
        <trans-unit id="50d835c00486b111eca88683714097e58a1abbfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.nicklevine.org/claude/&quot;&gt;CLAUDE&lt;/a&gt;
- An earlier attempt to access Lisp libraries from Python. The key
difference is that cl4py does not run Lisp directly in the host
process. This makes cl4py more portable, but complicates the exchange of
data.</source>
          <target state="translated">&lt;a href=&quot;https://www.nicklevine.org/claude/&quot;&gt;CLAUDE&lt;/a&gt; : un intento anterior de acceder a las bibliotecas Lisp desde Python. La diferencia clave es que cl4py no ejecuta Lisp directamente en el proceso del host. Esto hace que cl4py sea m&amp;aacute;s port&amp;aacute;til, pero complica el intercambio de datos.</target>
        </trans-unit>
        <trans-unit id="4bbc2bad866e068f7a83235c65224f8f43ca8e4f" translate="yes" xml:space="preserve">
          <source>By default, cl4py starts a Lisp subprocess with</source>
          <target state="translated">Por defecto,cl4py inicia un subproceso de Lisp con</target>
        </trans-unit>
        <trans-unit id="b820f44f707e2d2bfda8a73e7deeb8deb276083f" translate="yes" xml:space="preserve">
          <source>Common Lisp for Python</source>
          <target state="translated">Lenguaje común para la pitón</target>
        </trans-unit>
        <trans-unit id="148b514079c970f00202742b91f589dab000adac" translate="yes" xml:space="preserve">
          <source>Frequently Asked Problems</source>
          <target state="translated">Problemas frecuentes</target>
        </trans-unit>
        <trans-unit id="fce92a58d4a009a80c62759514bdc0f104880ceb" translate="yes" xml:space="preserve">
          <source>It soon becomes clumsy to look up individual Lisp functions by name.
Instead, it is usually better to convert entire Lisp packages to Python
modules, like this:</source>
          <target state="translated">Pronto se vuelve torpe buscar por nombre las funciones individuales de Lisp.En su lugar,suele ser mejor convertir paquetes completos de Lisp en módulos de Python,como este:</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivación</target>
        </trans-unit>
        <trans-unit id="7fac72fa371151361d1c539c6461c22eccaa90fe" translate="yes" xml:space="preserve">
          <source>Of course, this requires you have some Lisp installed. If not, use
something like</source>
          <target state="translated">Por supuesto,esto requiere que tenga instalado un poco de Lisp.Si no,use algo como</target>
        </trans-unit>
        <trans-unit id="15fcd561f77dbd0c514f2391d3c7596df9294341" translate="yes" xml:space="preserve">
          <source>Package QL does not exist</source>
          <target state="translated">El paquete QL no existe</target>
        </trans-unit>
        <trans-unit id="5080ebd78aaa8f3e4acd6d4cd153e6b28156a27a" translate="yes" xml:space="preserve">
          <source>Related Projects</source>
          <target state="translated">Proyectos relacionados</target>
        </trans-unit>
        <trans-unit id="c2496758451190079c5ff46ed234f6bf876783e3" translate="yes" xml:space="preserve">
          <source>Some Lisp data structures have no direct equivalent in Python, most
notably, cons cells.  The cl4py module provides a suitable Cons class and
converts List conses to instances of cl4py.Cons.</source>
          <target state="translated">Algunas estructuras de datos de Lisp no tienen un equivalente directo en Python,más notablemente,las células cons.El módulo cl4py proporciona una clase Cons adecuada y convierte las conses de la lista en instancias de cl4py.Cons.</target>
        </trans-unit>
        <trans-unit id="40102a7557c7125cb544b98b57257f65d209dd20" translate="yes" xml:space="preserve">
          <source>The library cl4py (pronounce as &lt;em&gt;clappy&lt;/em&gt;) allows Python programs to call
Common Lisp libraries.  Its official mascot is the cl4py-bird:</source>
          <target state="translated">La biblioteca cl4py (se pronuncia como &lt;em&gt;clappy&lt;/em&gt; ) permite a los programas Python llamar a bibliotecas Common Lisp. Su mascota oficial es el p&amp;aacute;jaro cl4py:</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="d1fd463e2211f716e42a7d42d60ef7a504f5676a" translate="yes" xml:space="preserve">
          <source>Why does my Lisp subprocess complain about</source>
          <target state="translated">¿Por qué mi subproceso Lisp se queja de</target>
        </trans-unit>
        <trans-unit id="e2a9f255c2065c6cb3cc36379ae5c9bb470b0b5b" translate="yes" xml:space="preserve">
          <source>You are a Python programmer, but you want access to some of the powerful
features of Lisp, for example to compile code at run time?  Or you want to
use some &lt;a href=&quot;http://codys.club/awesome-cl/&quot;&gt;awesome Lisp libraries&lt;/a&gt;?  Or
you are a Lisp programmer and want to show your work to your Python
friends.  In all these cases, cl4py is here to help you.</source>
          <target state="translated">&amp;iquest;Es un programador de Python, pero desea acceder a algunas de las potentes funciones de Lisp, por ejemplo, para compilar c&amp;oacute;digo en tiempo de ejecuci&amp;oacute;n? &amp;iquest;O quieres usar algunas &lt;a href=&quot;http://codys.club/awesome-cl/&quot;&gt;geniales bibliotecas Lisp&lt;/a&gt; ? O eres un programador Lisp y quieres mostrar tu trabajo a tus amigos de Python. En todos estos casos, cl4py est&amp;aacute; aqu&amp;iacute; para ayudarlo.</target>
        </trans-unit>
        <trans-unit id="a1829fa02283e0a82ccbadc9abe55eff92b9688f" translate="yes" xml:space="preserve">
          <source>You can start any number of Lisp subprocesses within Python, like this:</source>
          <target state="translated">Puedes iniciar cualquier número de subprocesos de Lisp dentro de Python,así:</target>
        </trans-unit>
        <trans-unit id="2ca175d569e3bddb9bd42186937f3d9a19474282" translate="yes" xml:space="preserve">
          <source>apt install sbcl</source>
          <target state="translated">apt instalar sbcl</target>
        </trans-unit>
        <trans-unit id="a0d6591fa77e0813e270cc0b321c6f1da9640f76" translate="yes" xml:space="preserve">
          <source>brew install
sbcl</source>
          <target state="translated">brew instalar sbcl</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="84122cdb9e98b2fdddcd6d887b4d74a136bd5068" translate="yes" xml:space="preserve">
          <source>pacman -S sbcl</source>
          <target state="translated">pacman -S sbcl</target>
        </trans-unit>
        <trans-unit id="8f2ed9f246f7ff0643d359045e9252655a4fb598" translate="yes" xml:space="preserve">
          <source>quicklisp=True</source>
          <target state="translated">quicklisp=Verdad</target>
        </trans-unit>
        <trans-unit id="e5afdbd708aea1d57f803c59648c0871a0966485" translate="yes" xml:space="preserve">
          <source>sbcl --script</source>
          <target state="translated">sbcl --guión</target>
        </trans-unit>
        <trans-unit id="b519792eff2865136af2e654208db187c51b185b" translate="yes" xml:space="preserve">
          <source>to correct this deficiency.  Once you have a running Lisp process,
you can execute Lisp code on it:</source>
          <target state="translated">para corregir esta deficiencia.Una vez que tenga un proceso Lisp en ejecución,puede ejecutar el código Lisp en él:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
