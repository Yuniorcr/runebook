<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/jsonlogic-rs/">
    <body>
      <group id="jsonlogic-rs">
        <trans-unit id="d73737adc4cecff4211f205b3ff43c0275a9690b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available Via&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Disponible v&amp;iacute;a&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="100f54ab7016d08c776bf5eb400bb8bf401b3295" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Language&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Idioma&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d978cf366a977f9b43bc86d84f453fcb5ba09e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; from our CI experiences, this may not work for Python 3.8 on Windows.
If you are running this on a Windows machine and can confirm whether or not
this works, let us know!</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; seg&amp;uacute;n nuestras experiencias de CI, es posible que esto no funcione para Python 3.8 en Windows. Si est&amp;aacute; ejecutando esto en una m&amp;aacute;quina con Windows y puede confirmar si funciona o no, &amp;iexcl;h&amp;aacute;ganoslo saber!</target>
        </trans-unit>
        <trans-unit id="e0e4b44ab668c7293399a8ca9a5e825b567c473b" translate="yes" xml:space="preserve">
          <source>All operations are tested using our own test suite in Rust as well as the
shared tests for all JsonLogic implementations defined &lt;a href=&quot;http://jsonlogic.com/tests.json&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Todas las operaciones se prueban utilizando nuestro propio conjunto de pruebas en Rust, as&amp;iacute; como las pruebas compartidas para todas las implementaciones de JsonLogic definidas &lt;a href=&quot;http://jsonlogic.com/tests.json&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5831acda4a827b8389227bfef92bb8d176d8e4ca" translate="yes" xml:space="preserve">
          <source>An example of chaining multiple results:</source>
          <target state="translated">Un ejemplo de encadenamiento de resultados múltiples:</target>
        </trans-unit>
        <trans-unit id="d37ac01df24b6b4910d8b5723cc37382d0f3e194" translate="yes" xml:space="preserve">
          <source>Being built in Rust, we are able to provide the package in a variety of
languages. The table below describes current language support:</source>
          <target state="translated">Al estar construido en Rust,somos capaces de proporcionar el paquete en una variedad de idiomas.La siguiente tabla describe el soporte actual de los idiomas:</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Edificio</target>
        </trans-unit>
        <trans-unit id="6c98e86fc49b32d64a3b4b449a8cdd37ce4e8e8d" translate="yes" xml:space="preserve">
          <source>Cargo</source>
          <target state="translated">Carga</target>
        </trans-unit>
        <trans-unit id="97645330a1a0a67a4d21bf91c8598ee8ee4c9a16" translate="yes" xml:space="preserve">
          <source>Commandline</source>
          <target state="translated">Línea de mando</target>
        </trans-unit>
        <trans-unit id="7ba231db8b69c78c3126e7c1ac979c8612fb475a" translate="yes" xml:space="preserve">
          <source>If a wheel does &lt;em&gt;not&lt;/em&gt; exist for your system, this will attempt to build the
package. In order for the package to build successfully, you MUST have Rust
installed on your local system, and &lt;code&gt;cargo&lt;/code&gt; MUST be present in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Si &lt;em&gt;no&lt;/em&gt; existe una rueda para su sistema, esto intentar&amp;aacute; construir el paquete. Para que el paquete se construya correctamente, DEBE tener Rust instalado en su sistema local, y la &lt;code&gt;cargo&lt;/code&gt; DEBE estar presente en su &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8740af5f27e71662805094227a27bf222311fa76" translate="yes" xml:space="preserve">
          <source>If you just want to use the commandline &lt;code&gt;jsonlogic&lt;/code&gt; binary:</source>
          <target state="translated">Si solo desea utilizar el binario &lt;code&gt;jsonlogic&lt;/code&gt; de la l&amp;iacute;nea de comandos :</target>
        </trans-unit>
        <trans-unit id="12bb7b639e3ab6dc3d745e4ba09f609bdf740848" translate="yes" xml:space="preserve">
          <source>If you would like to build or test the Python distribution, Python 3.6 or
newer must be available in your &lt;code&gt;PATH&lt;/code&gt;. The &lt;code&gt;venv&lt;/code&gt; module must be part of the
Python distribution (looking at you, Ubuntu).</source>
          <target state="translated">Si desea compilar o probar la distribuci&amp;oacute;n de Python, Python 3.6 o m&amp;aacute;s reciente debe estar disponible en su &lt;code&gt;PATH&lt;/code&gt; . El m&amp;oacute;dulo &lt;code&gt;venv&lt;/code&gt; debe ser parte de la distribuci&amp;oacute;n de Python (mir&amp;aacute;ndote a ti, Ubuntu).</target>
        </trans-unit>
        <trans-unit id="21d30629145c689ea13de28256c6ba29f628644e" translate="yes" xml:space="preserve">
          <source>If you would like to run tests for the WASM package, &lt;code&gt;node&lt;/code&gt; 10 or newer must be
available in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Si desea ejecutar pruebas para el paquete WASM, el &lt;code&gt;node&lt;/code&gt; 10 o m&amp;aacute;s reciente debe estar disponible en su &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="820d0909e9b671cc84d8d89d8c976f60005be210" translate="yes" xml:space="preserve">
          <source>JavaScript (as WASM)</source>
          <target state="translated">JavaScript (como WASM)</target>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="42711534b8f39ba938bd6719c707f2031c439f7d" translate="yes" xml:space="preserve">
          <source>JsonLogic implemented with a Rust backend</source>
          <target state="translated">JsonLogic implementado con un fondo de óxido</target>
        </trans-unit>
        <trans-unit id="d81381ad21a195e6a8edb90dde47a36fc7e985dc" translate="yes" xml:space="preserve">
          <source>Node Package via &lt;a href=&quot;https://www.npmjs.com/package/@bestow/jsonlogic-rs&quot;&gt;NPM&lt;/a&gt;</source>
          <target state="translated">Paquete de nodo a trav&amp;eacute;s de &lt;a href=&quot;https://www.npmjs.com/package/@bestow/jsonlogic-rs&quot;&gt;NPM&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1b33239879f037fa7056be2c1c53971cb54787e" translate="yes" xml:space="preserve">
          <source>Node/Browser</source>
          <target state="translated">Nodo/Navegador</target>
        </trans-unit>
        <trans-unit id="7924070d81775e573c33d271a1576618206c58f7" translate="yes" xml:space="preserve">
          <source>Note that the package is distributed as a node package, so you'll need to use
&lt;code&gt;browserify&lt;/code&gt;, &lt;code&gt;webpack&lt;/code&gt;, or similar to install for the browser.</source>
          <target state="translated">Tenga en cuenta que el paquete se distribuye como un paquete de nodo, por lo que deber&amp;aacute; usar &lt;code&gt;browserify&lt;/code&gt; , &lt;code&gt;webpack&lt;/code&gt; o similar para instalarlo en el navegador.</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Requisitos previos</target>
        </trans-unit>
        <trans-unit id="1cb0bee5478facc7715136ce6ca34b0fe11136cb" translate="yes" xml:space="preserve">
          <source>Project Status</source>
          <target state="translated">Estado del proyecto</target>
        </trans-unit>
        <trans-unit id="33e72da85f21769ca9a8ee3181ea9def0321f98f" translate="yes" xml:space="preserve">
          <source>PyPI</source>
          <target state="translated">PyPI</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="3db74efa0be8ce0796c674c7c44fd1c34852ed79" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;jsonlogic --help&lt;/code&gt; the most up-to-date usage.</source>
          <target state="translated">Ejecute &lt;code&gt;jsonlogic --help&lt;/code&gt; al uso m&amp;aacute;s actualizado.</target>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="translated">Rust</target>
        </trans-unit>
        <trans-unit id="94c93370113da1530dd030935b611c10a40030d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Building&quot;&gt;Building&lt;/a&gt; below for more details.</source>
          <target state="translated">Consulte &lt;a href=&quot;#Building&quot;&gt;Edificio a&lt;/a&gt; continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="58fd115d1b08adcd81e3cd4063b89d341a1059f9" translate="yes" xml:space="preserve">
          <source>Supports Python 3.6+.</source>
          <target state="translated">Soporte de Python 3.6+.</target>
        </trans-unit>
        <trans-unit id="6d970f6d6d932d6adca15b0d8a70c491ee266519" translate="yes" xml:space="preserve">
          <source>The built WASM package will be in &lt;code&gt;js/&lt;/code&gt;. This package is directly importable
from &lt;code&gt;node&lt;/code&gt;, but needs to be browserified in order to be used in the browser.</source>
          <target state="translated">El paquete WASM construido estar&amp;aacute; en &lt;code&gt;js/&lt;/code&gt; . Este paquete se puede importar directamente desde el &lt;code&gt;node&lt;/code&gt; , pero debe ser explorado para poder ser utilizado en el explorador.</target>
        </trans-unit>
        <trans-unit id="2c178a7557e7b2677d86c1f802afe02c592d7dcf" translate="yes" xml:space="preserve">
          <source>The python distribution consists both of the C extension generated from the
Rust and a thin wrapper found in &lt;code&gt;py/jsonlogic_rs/&lt;/code&gt;. &lt;code&gt;make develop-py&lt;/code&gt; will
compile the C extension and place it in that directory, where it will be
importable by your local venv. When building wheels, the wrapper and the C
extension are all packaged together into the resultant wheel, which will
be found in &lt;code&gt;dist/&lt;/code&gt;. When building an sdist, the Rust extension is not compiled.
The Rust and Python source are distributed together in a &lt;code&gt;.tar.gz&lt;/code&gt; file, again
found in &lt;code&gt;dist/&lt;/code&gt;.</source>
          <target state="translated">La distribuci&amp;oacute;n de Python consiste tanto en la extensi&amp;oacute;n C generada a partir de Rust como en un contenedor delgado que se encuentra en &lt;code&gt;py/jsonlogic_rs/&lt;/code&gt; . &lt;code&gt;make develop-py&lt;/code&gt; compilar&amp;aacute; la extensi&amp;oacute;n de C y la colocar&amp;aacute; en ese directorio, donde ser&amp;aacute; importada por su venv local. Al construir ruedas, la envoltura y la extensi&amp;oacute;n C se empaquetan juntas en la rueda resultante, que se encontrar&amp;aacute; en &lt;code&gt;dist/&lt;/code&gt; . Al construir una sdist, la extensi&amp;oacute;n de Rust no se compila. Las fuentes de Rust y Python se distribuyen juntas en un archivo &lt;code&gt;.tar.gz&lt;/code&gt; , que se encuentra nuevamente en &lt;code&gt;dist/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1149e91090a0196701c09d8b14709d84f71f07a4" translate="yes" xml:space="preserve">
          <source>This is an implementation of  the &lt;a href=&quot;http://jsonlogic.com/&quot;&gt;JsonLogic&lt;/a&gt; specification in Rust.</source>
          <target state="translated">Esta es una implementaci&amp;oacute;n de la especificaci&amp;oacute;n &lt;a href=&quot;http://jsonlogic.com/&quot;&gt;JsonLogic&lt;/a&gt; en Rust.</target>
        </trans-unit>
        <trans-unit id="f8cd888e4ce7b8d496c4cae463fdbe3fee51e6d2" translate="yes" xml:space="preserve">
          <source>This will automatically create a virtual environment in &lt;code&gt;venv/&lt;/code&gt;, install
the necessary packages, and then install &lt;code&gt;jsonlogic_rs&lt;/code&gt; into that environment.</source>
          <target state="translated">Esto crear&amp;aacute; autom&amp;aacute;ticamente un entorno virtual en &lt;code&gt;venv/&lt;/code&gt; , instalar&amp;aacute; los paquetes necesarios y luego instalar&amp;aacute; &lt;code&gt;jsonlogic_rs&lt;/code&gt; en ese entorno.</target>
        </trans-unit>
        <trans-unit id="28a12e26040ce743a2ef0e4f26c056717346a6ef" translate="yes" xml:space="preserve">
          <source>To build a production source distribution:</source>
          <target state="translated">Para construir una distribución de la fuente de producción:</target>
        </trans-unit>
        <trans-unit id="da7cfdbe3c23dddf3ce9ce6243b18ddbb084a6db" translate="yes" xml:space="preserve">
          <source>To build a wheel (specific to your current system architecture and python
version):</source>
          <target state="translated">Para construir una rueda (específica para la arquitectura de tu sistema actual y la versión de pitón):</target>
        </trans-unit>
        <trans-unit id="023a3af5b4d5274607ce8f5dbb00a0b75bbec1b7" translate="yes" xml:space="preserve">
          <source>To build the Rust library, just run &lt;code&gt;cargo build&lt;/code&gt;.</source>
          <target state="translated">Para construir la biblioteca de Rust, simplemente ejecute &lt;code&gt;cargo build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e041e86f81a8736f07aea797e990e57477e7f11b" translate="yes" xml:space="preserve">
          <source>To perform a dev install of the Python package, run:</source>
          <target state="translated">Para realizar una instalación de desarrollo del paquete Python,ejecute:</target>
        </trans-unit>
        <trans-unit id="67c3e40438629ab02e0df13e2c978ce9b971d9c4" translate="yes" xml:space="preserve">
          <source>To use as a Rust library, add to your &lt;code&gt;Cargo.toml&lt;/code&gt;:</source>
          <target state="translated">Para usar como una biblioteca de Rust, agregue a su &lt;code&gt;Cargo.toml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Uso</target>
        </trans-unit>
        <trans-unit id="05246491325c5d174b82e5fe85d5788c1a164aba" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;jsonlogic&lt;/code&gt; on the cmdline to explore an API:</source>
          <target state="translated">Usando &lt;code&gt;jsonlogic&lt;/code&gt; en la cmdline para explorar una API:</target>
        </trans-unit>
        <trans-unit id="9b3f1e07a2364545d66c31d18234666c8c789ce0" translate="yes" xml:space="preserve">
          <source>We also implement the &lt;code&gt;?:&lt;/code&gt;, which is not described in that specification
but is a direct alias for &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n implementamos &lt;code&gt;?:&lt;/code&gt; , Que no se describe en esa especificaci&amp;oacute;n pero es un alias directo de &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0643c216d42fa73b0cea0ebc5ebe54b22658d5da" translate="yes" xml:space="preserve">
          <source>We are working on adding new operations with improved type safety, as well
as the ability to define functions as JsonLogic. We will communicate with
the broader JsonLogic community to see if we can make them part of the
standard as we do so.</source>
          <target state="translated">Estamos trabajando en la adición de nuevas operaciones con una seguridad de tipo mejorada,así como la capacidad de definir funciones como JsonLogic.Nos comunicaremos con la comunidad más amplia de JsonLogic para ver si podemos hacerlos parte del estándar mientras lo hacemos.</target>
        </trans-unit>
        <trans-unit id="05920badbde1bebce61d394ec357c54fbfb91537" translate="yes" xml:space="preserve">
          <source>We implement 100% of the standard supported operations defined &lt;a href=&quot;http://jsonlogic.com/operations.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Implementamos el 100% de las operaciones est&amp;aacute;ndar admitidas definidas &lt;a href=&quot;http://jsonlogic.com/operations.html&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="051061c35dede06e751f127657cfd8dabc9b47ce" translate="yes" xml:space="preserve">
          <source>WebAssembly</source>
          <target state="translated">WebAssembly</target>
        </trans-unit>
        <trans-unit id="7e409f559bf3a92a805cf96e2714d0e6c93a3e0c" translate="yes" xml:space="preserve">
          <source>Wheels are distributed for many platforms, so you can often just run:</source>
          <target state="translated">Las ruedas se distribuyen para muchas plataformas,así que a menudo sólo se puede correr:</target>
        </trans-unit>
        <trans-unit id="c2b74be4837907b6b90281b88fc05f487a5c71ca" translate="yes" xml:space="preserve">
          <source>You can build a debug WASM release with</source>
          <target state="translated">Puedes construir una versión de depuración WASM con</target>
        </trans-unit>
        <trans-unit id="899ee7d3fca1f14acdc3476dabc461f19e33d27e" translate="yes" xml:space="preserve">
          <source>You can build a production WASM release with</source>
          <target state="translated">Puedes construir un lanzamiento WASM de producción con</target>
        </trans-unit>
        <trans-unit id="9414810992a02fa99fa86e102a0dc5c9dfead22b" translate="yes" xml:space="preserve">
          <source>You can create a release build with &lt;code&gt;make build&lt;/code&gt;.</source>
          <target state="translated">Puede crear una versi&amp;oacute;n de lanzamiento con &lt;code&gt;make build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb2708a21d417e46c818816fd592fe180c4303d0" translate="yes" xml:space="preserve">
          <source>You can install JsonLogic using npm or yarn. In NPM:</source>
          <target state="translated">Puedes instalar JsonLogic usando npm o hilo.En NPM:</target>
        </trans-unit>
        <trans-unit id="1d42a5e0e52895f4ededd30fcb8e5c9091c0eb72" translate="yes" xml:space="preserve">
          <source>You must have Rust installed and &lt;code&gt;cargo&lt;/code&gt; available in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Debe tener Rust instalado y &lt;code&gt;cargo&lt;/code&gt; disponible en su &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="797c21e1f5e332d42b2af953b9e841d6a3ffa0a9" translate="yes" xml:space="preserve">
          <source>json-logic-rs</source>
          <target state="translated">json-logic-rs</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
