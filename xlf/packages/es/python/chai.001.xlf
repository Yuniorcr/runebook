<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/chai/">
    <body>
      <group id="chai">
        <trans-unit id="e6b66175260ff26512fb684537cbf9f2b364d277" translate="yes" xml:space="preserve">
          <source>). If the object can&amp;rsquo;t be stubbed with a reference,</source>
          <target state="translated">). Si el objeto no se puede cortar con una referencia,</target>
        </trans-unit>
        <trans-unit id="fb665f290614383c36b3f1f861f00b7be3e6caec" translate="yes" xml:space="preserve">
          <source>**kwargs</source>
          <target state="translated">** kwargs</target>
        </trans-unit>
        <trans-unit id="571870a0e2ce85235666f3518f0cb7ef80d6e406" translate="yes" xml:space="preserve">
          <source>*args</source>
          <target state="translated">* argumentos</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="5d2060b68082fd8039b0f64840a87fa629b7fdc4" translate="yes" xml:space="preserve">
          <source>,
the container and context manager interfaces are defined. Nonzero will always return</source>
          <target state="translated">, se definen las interfaces de contenedor y administrador de contexto. Distinto de cero siempre volver&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="36e33c2c8d280c833da17747a791a3c69c1a1b4c" translate="yes" xml:space="preserve">
          <source>, also the default for any expectation.</source>
          <target state="translated">, tambi&amp;eacute;n el predeterminado para cualquier expectativa.</target>
        </trans-unit>
        <trans-unit id="8ed8200a9b270fa9fdc9528526572d6f92ec2c3f" translate="yes" xml:space="preserve">
          <source>, and unbound methods do not support spies.</source>
          <target state="translated">, y los m&amp;eacute;todos independientes no admiten esp&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="3434a5fa9d5340c9dc87c95af8fa7fe46ee527e1" translate="yes" xml:space="preserve">
          <source>, but immediately return its original behavior after the mocked call has run.</source>
          <target state="translated">, pero devuelve inmediatamente su comportamiento original despu&amp;eacute;s de que se haya ejecutado la llamada simulada.</target>
        </trans-unit>
        <trans-unit id="861d8928eef7e2fddad40e2d3384c0b533ad9399" translate="yes" xml:space="preserve">
          <source>, but loaded into the</source>
          <target state="translated">, pero cargado en el</target>
        </trans-unit>
        <trans-unit id="3bad9e4d77cd0efd3c78cb4db2a8317bd5fddf94" translate="yes" xml:space="preserve">
          <source>, creating a Mock object and setting it as the attribute on another object.</source>
          <target state="translated">, creando un objeto Mock y configur&amp;aacute;ndolo como atributo en otro objeto.</target>
        </trans-unit>
        <trans-unit id="0246ed7aae2051a8e9c6a562cf70219b8d2e1041" translate="yes" xml:space="preserve">
          <source>, so you&amp;rsquo;re sure any method you call will be a reference to the class and module in which a particular test method is currently being executed. Methods and comparators you define locally in a test case will be globally available when you&amp;rsquo;re running that particular case as well.</source>
          <target state="translated">, por lo que est&amp;aacute; seguro de que cualquier m&amp;eacute;todo que llame ser&amp;aacute; una referencia a la clase y el m&amp;oacute;dulo en el que se est&amp;aacute; ejecutando un m&amp;eacute;todo de prueba en particular. Los m&amp;eacute;todos y comparadores que defina localmente en un caso de prueba estar&amp;aacute;n disponibles globalmente cuando ejecute ese caso en particular tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="dc259b741172f55d8979035191d5b5e9a9355175" translate="yes" xml:space="preserve">
          <source>, the main instrumentation class. All additional</source>
          <target state="translated">, la clase de instrumentaci&amp;oacute;n principal. Todo adicional</target>
        </trans-unit>
        <trans-unit id="338bcb0d0b4f6443c09736e45408c62579701cfd" translate="yes" xml:space="preserve">
          <source>.  The</source>
          <target state="translated">. los</target>
        </trans-unit>
        <trans-unit id="882bc8152e7bf3595a0f54f61c28de18807c01f3" translate="yes" xml:space="preserve">
          <source>. After your tests have run, you can check the value against expected arguments through</source>
          <target state="translated">. Una vez ejecutadas las pruebas, puede comprobar el valor con los argumentos esperados mediante</target>
        </trans-unit>
        <trans-unit id="123d87061cf49247a557b0f9f0593e35b298aff1" translate="yes" xml:space="preserve">
          <source>. Chai also aliases all of the</source>
          <target state="translated">. Chai tambi&amp;eacute;n alias todos los</target>
        </trans-unit>
        <trans-unit id="f863c23a93501fd973cdcb1d746f38bd8aa20cad" translate="yes" xml:space="preserve">
          <source>. If</source>
          <target state="translated">. Si</target>
        </trans-unit>
        <trans-unit id="c087b164f3e107bcff94b80174fcfcc0b9a3c2f0" translate="yes" xml:space="preserve">
          <source>. Insists that the argument is the same type as</source>
          <target state="translated">. Insiste en que el argumento es del mismo tipo que</target>
        </trans-unit>
        <trans-unit id="68883177497c032e286c33de93e91d8da54bf067" translate="yes" xml:space="preserve">
          <source>. See the</source>
          <target state="translated">. Ver el</target>
        </trans-unit>
        <trans-unit id="9ad235be219456ab1fe2129e6365b870ce587e93" translate="yes" xml:space="preserve">
          <source>. The Chai api allows use of call chains to make the code
short, clean, and very readable. It also does away with the standard setup-and-replay
work flow, giving you more flexibility in how you write your cases.</source>
          <target state="translated">. La API de Chai permite el uso de cadenas de llamadas para hacer que el c&amp;oacute;digo sea corto, limpio y muy legible. Tambi&amp;eacute;n elimina el flujo de trabajo est&amp;aacute;ndar de configuraci&amp;oacute;n y reproducci&amp;oacute;n, lo que le brinda m&amp;aacute;s flexibilidad en la forma en que escribe sus casos.</target>
        </trans-unit>
        <trans-unit id="928f2e2b4b0bbed9bbd2df3710f32b4b8b359081" translate="yes" xml:space="preserve">
          <source>. This is really useful when you&amp;rsquo;re testing a deep stack and it&amp;rsquo;s simpler to assert that &amp;ldquo;value A was used in method call X&amp;rdquo;. Variables can also be used to capture an argument and return it.</source>
          <target state="translated">. Esto es realmente &amp;uacute;til cuando est&amp;aacute; probando una pila profunda y es m&amp;aacute;s simple afirmar que &quot;el valor A se us&amp;oacute; en la llamada al m&amp;eacute;todo X&quot;. Las variables tambi&amp;eacute;n se pueden utilizar para capturar un argumento y devolverlo.</target>
        </trans-unit>
        <trans-unit id="65adeb30f017363f9b7d5cf8e56a078a085a0305" translate="yes" xml:space="preserve">
          <source>. Useful when you need to assert a few values in a list or dictionary, but the exact contents are not known or can vary.</source>
          <target state="translated">. &amp;Uacute;til cuando necesita afirmar algunos valores en una lista o diccionario, pero el contenido exacto no se conoce o puede variar.</target>
        </trans-unit>
        <trans-unit id="d688a96191928796653c7e8c6a26b6ee4b8a7b13" translate="yes" xml:space="preserve">
          <source>; other methods will raise</source>
          <target state="translated">; otros m&amp;eacute;todos aumentar&amp;aacute;n</target>
        </trans-unit>
        <trans-unit id="b395577ed6d292d1728d09d92db54379cce75d36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A note of caution&lt;/strong&gt;
If you are using the</source>
          <target state="translated">&lt;strong&gt;Una nota de precauci&amp;oacute;n&lt;/strong&gt; si est&amp;aacute; utilizando</target>
        </trans-unit>
        <trans-unit id="81bb701418548d4bb45ed2b69bdc36a2bd9dcda2" translate="yes" xml:space="preserve">
          <source>A variable match against the first time that the argument is called. In the case of multiple calls, the second one must match the previous value of</source>
          <target state="translated">Una variable coincide con la primera vez que se llama el argumento.En el caso de múltiples llamadas,la segunda debe coincidir con el valor anterior de</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="1ea412919cecf1e673bbe80f94b4de04feb891af" translate="yes" xml:space="preserve">
          <source>Add a return value to the expectation when it is matched and executed.</source>
          <target state="translated">Añade un valor de retorno a la expectativa cuando se empareje y se ejecute.</target>
        </trans-unit>
        <trans-unit id="8881cd7ed0c80a3160bf68fb92492bedbe75ae37" translate="yes" xml:space="preserve">
          <source>Add a test to the expectation for matching arguments.</source>
          <target state="translated">Añade una prueba a la expectativa de los argumentos de coincidencia.</target>
        </trans-unit>
        <trans-unit id="670b1ddc67f6054d3b05d014236af978c695794a" translate="yes" xml:space="preserve">
          <source>Additionally,</source>
          <target state="translated">Además,</target>
        </trans-unit>
        <trans-unit id="1c0f7e8d65d6dee32a4ddbf88aa36beb78ce26fd" translate="yes" xml:space="preserve">
          <source>All of the features are available by extending the</source>
          <target state="translated">Todas las características están disponibles ampliando el</target>
        </trans-unit>
        <trans-unit id="6250d4591119ca852071735248d99d0d2558dd65" translate="yes" xml:space="preserve">
          <source>An expectation can act as a context manager, which is very useful in complex mocking situations. The context will always be the return value for the expectation. For example:</source>
          <target state="translated">Una expectativa puede actuar como gestor del contexto,lo que es muy útil en situaciones complejas de burla.El contexto siempre será el valor de retorno de la expectativa.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9b3ef8a4e8f6cbbdb4df27b3eed07109f0e1220c" translate="yes" xml:space="preserve">
          <source>An integer that defines a hard limit on the minimum and maximum number of times the expectation should be executed.</source>
          <target state="translated">Un número entero que define un límite duro en el número mínimo y máximo de veces que la expectativa debe ser ejecutada.</target>
        </trans-unit>
        <trans-unit id="6dfb3cfdf9e6ad86483d6a89dcc0ee17e01b8350" translate="yes" xml:space="preserve">
          <source>Any arguments are accepted.</source>
          <target state="translated">Cualquier argumento es aceptado.</target>
        </trans-unit>
        <trans-unit id="a4aabc98aad3e6fd3482a9422dab44877d28c0c3" translate="yes" xml:space="preserve">
          <source>Any request for an attribute from a Mock will return a new Mock object, but</source>
          <target state="translated">Cualquier petición de un atributo de un Mock devolverá un nuevo objeto Mock,pero</target>
        </trans-unit>
        <trans-unit id="996c30df344db8f82633617f6a9912f09e9c1a7a" translate="yes" xml:space="preserve">
          <source>Argument Comparators</source>
          <target state="translated">Comparadores de argumentos</target>
        </trans-unit>
        <trans-unit id="4c387a17298f7f3928201dd4c145debf316dbe1e" translate="yes" xml:space="preserve">
          <source>Argument comparators are defined as classes in</source>
          <target state="translated">Los comparadores de argumentos se definen como clases en</target>
        </trans-unit>
        <trans-unit id="339eeaaafecd6f09eab80b39a7bb240b1ab22067" translate="yes" xml:space="preserve">
          <source>As noted above, Chai will by default perform a greedy match, closing out an implied</source>
          <target state="translated">Como se ha señalado anteriormente,Chai realizará por defecto un partido de codiciosos,cerrando una implícita</target>
        </trans-unit>
        <trans-unit id="883a481b6270c376b45bdc3daec3c9dad4d509a2" translate="yes" xml:space="preserve">
          <source>As of 0.3.0, the Chai API has significantly changed such that the default behavior of an expectation is least specific. This supports rapid iterative testing with minimal pain and verbosity. An example of the differences:</source>
          <target state="translated">A partir de 0.3.0,el API de Chai ha cambiado significativamente de tal manera que el comportamiento por defecto de una expectativa es menos específico.Esto permite realizar pruebas rápidas e iterativas con un mínimo de dolor y verborrea.Un ejemplo de las diferencias:</target>
        </trans-unit>
        <trans-unit id="c3cabebcc3efcd364842af62b9a74918f2617031" translate="yes" xml:space="preserve">
          <source>Bug tracker</source>
          <target state="translated">Rastreador de bichos</target>
        </trans-unit>
        <trans-unit id="4c86c5ce7b354999095e584ee76d047975c16521" translate="yes" xml:space="preserve">
          <source>Called with a function argument. When the expectation passes a test, the function will be executed. The side effect will be executed even if the expectation is configured to raise an exception. If the side effect is defined with arguments, then those arguments will be passed in when it&amp;rsquo;s called, otherwise the arguments passed in to the expectation will be passed in.</source>
          <target state="translated">Llamado con un argumento de funci&amp;oacute;n. Cuando la expectativa pasa una prueba, la funci&amp;oacute;n se ejecutar&amp;aacute;. El efecto secundario se ejecutar&amp;aacute; incluso si la expectativa est&amp;aacute; configurada para generar una excepci&amp;oacute;n. Si el efecto secundario se define con argumentos, esos argumentos se pasar&amp;aacute;n cuando se llame; de ​​lo contrario, se pasar&amp;aacute;n los argumentos pasados ​​a la expectativa.</target>
        </trans-unit>
        <trans-unit id="d10525a99b239e81e31412cc7b4c5dc1217f3627" translate="yes" xml:space="preserve">
          <source>Chai</source>
          <target state="translated">Chai</target>
        </trans-unit>
        <trans-unit id="3ee090e706774dda74b1f240a806d23f63bd0e3f" translate="yes" xml:space="preserve">
          <source>Chai provides a very easy to use api for mocking, stubbing and spying your python objects, patterned after the &lt;a href=&quot;http://mocha.rubyforge.org/&quot;&gt;Mocha&lt;/a&gt; library for Ruby.</source>
          <target state="translated">Chai proporciona una api muy f&amp;aacute;cil de usar para burlarse, eliminar y espiar sus objetos de Python, siguiendo el patr&amp;oacute;n de la biblioteca &lt;a href=&quot;http://mocha.rubyforge.org/&quot;&gt;Mocha&lt;/a&gt; para Ruby.</target>
        </trans-unit>
        <trans-unit id="1539c57a04ff590838b747031171b15f0eec3804" translate="yes" xml:space="preserve">
          <source>Chai.mock()</source>
          <target state="translated">Chai.mock()</target>
        </trans-unit>
        <trans-unit id="597f30ebaba1e70f4f092b4bad0f96f34241a9d3" translate="yes" xml:space="preserve">
          <source>Chai.tearDown</source>
          <target state="translated">Chai.tearDown</target>
        </trans-unit>
        <trans-unit id="bd5dc2ff43c21afc00e56a2f75cce397b8506026" translate="yes" xml:space="preserve">
          <source>Comparator</source>
          <target state="translated">Comparador</target>
        </trans-unit>
        <trans-unit id="3ce45a2697e790e29473f3d05c6d0ee3eabb53d0" translate="yes" xml:space="preserve">
          <source>Comparators can also be used inside data structures. For example:</source>
          <target state="translated">Los comparadores también pueden utilizarse dentro de las estructuras de datos.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7fbccfecf0dfc61e9b01394d836c599ac9e8baad" translate="yes" xml:space="preserve">
          <source>Context Manager</source>
          <target state="translated">Gerente de Contexto</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">Colaboradores</target>
        </trans-unit>
        <trans-unit id="4a771a02cfeb7539309f7f7737976ebeb5a34ce9" translate="yes" xml:space="preserve">
          <source>CustomObject</source>
          <target state="translated">CustomObject</target>
        </trans-unit>
        <trans-unit id="3539633c1214e7aec49f9475f9538370a5017b43" translate="yes" xml:space="preserve">
          <source>Download the latest version of Chai from &lt;a href=&quot;http://pypi.python.org/pypi/chai&quot;&gt;http://pypi.python.org/pypi/chai&lt;/a&gt;</source>
          <target state="translated">Descargue la &amp;uacute;ltima versi&amp;oacute;n de Chai desde &lt;a href=&quot;http://pypi.python.org/pypi/chai&quot;&gt;http://pypi.python.org/pypi/chai&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d41afcdf06f873159a02f2c71ff9d4ff63760f01" translate="yes" xml:space="preserve">
          <source>Download:</source>
          <target state="translated">Descargue:</target>
        </trans-unit>
        <trans-unit id="90f1ac6800ca959ac58d3e9fd96ed31c15b04d06" translate="yes" xml:space="preserve">
          <source>Downloading and installing from source</source>
          <target state="translated">Descargando e instalando desde la fuente</target>
        </trans-unit>
        <trans-unit id="0284506ce102d25c05ed068cd5320b28169511f5" translate="yes" xml:space="preserve">
          <source>Easy to use mocking, stubbing and spying framework.</source>
          <target state="translated">Un marco fácil de usar para burlarse,espiar y espiar.</target>
        </trans-unit>
        <trans-unit id="fdd6abe4d3e43555fd6a8a4c1cf45b848e487e53" translate="yes" xml:space="preserve">
          <source>Equivalent to</source>
          <target state="translated">Equivalente a</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>
        </trans-unit>
        <trans-unit id="534bc3e17f8253884bf05a9d5410d13ba46e76a6" translate="yes" xml:space="preserve">
          <source>ExampleClass.__hash__</source>
          <target state="translated">Clase de ejemplo.</target>
        </trans-unit>
        <trans-unit id="15ea9c44c66ad1a164bdf8ecab49cbea5244bbd2" translate="yes" xml:space="preserve">
          <source>Expectations and Spies</source>
          <target state="translated">Expectativas y espías</target>
        </trans-unit>
        <trans-unit id="7aad01a81d3c8d9c29acf0bb5d199de6e5d62329" translate="yes" xml:space="preserve">
          <source>Expectations are individual test cases that can be applied to a stub. They are expected to be run in order (unless otherwise noted). They are greedy, in that so long as an expectation has not been met and the arguments match, the arguments will be processed by that expectation. This mostly applies to the &amp;ldquo;at_least&amp;rdquo; and &amp;ldquo;any_order&amp;rdquo; expectations, which (may) stay open throughout the test and will handle any matching call.</source>
          <target state="translated">Las expectativas son casos de prueba individuales que se pueden aplicar a un stub. Se espera que se ejecuten en orden (a menos que se indique lo contrario). Son codiciosos, en el sentido de que mientras no se cumpla una expectativa y los argumentos coincidan, los argumentos ser&amp;aacute;n procesados ​​por esa expectativa. Esto se aplica principalmente a las expectativas de &quot;al menos&quot; y &quot;cualquier_orden&quot;, que (pueden) permanecer abiertas durante toda la prueba y manejar&amp;aacute;n cualquier llamada coincidente.</target>
        </trans-unit>
        <trans-unit id="f68cbd711349e7ce456997131c670581feded172" translate="yes" xml:space="preserve">
          <source>Expectations expose the following public methods for changing their behavior.</source>
          <target state="translated">Las expectativas exponen los siguientes métodos públicos para cambiar su comportamiento.</target>
        </trans-unit>
        <trans-unit id="9dd4cd78c83af996e70c7add2e4de87eb4aea91e" translate="yes" xml:space="preserve">
          <source>Expectations will automatically create a stub if it&amp;rsquo;s not already applied, so no separate call to</source>
          <target state="translated">Las expectativas crear&amp;aacute;n autom&amp;aacute;ticamente un c&amp;oacute;digo auxiliar si a&amp;uacute;n no se ha aplicado, por lo que no hay una llamada separada a</target>
        </trans-unit>
        <trans-unit id="dcbeef985aed01007579dc07004ca5bb33bb52a4" translate="yes" xml:space="preserve">
          <source>Finally, Chai supports stubbing of properties on classes. In all cases, the stub will be applied to a class and individually to each of the 3 property methods. Because the stub is on the class, all instances need to be addressed when you write expectations. The first interface is via the named attribute method which can be used on both classes and instances.</source>
          <target state="translated">Por último,Chai apoya el aplazamiento de las propiedades en las clases.En todos los casos,el stub se aplicará a una clase e individualmente a cada uno de los 3 métodos de propiedades.Debido a que el stub está en la clase,todas las instancias deben ser abordadas cuando se escriben las expectativas.La primera interfaz es a través del método de atributos con nombre que puede utilizarse tanto en las clases como en las instancias.</target>
        </trans-unit>
        <trans-unit id="d7645a3a981b50e949915407edba7c2ab8140e3e" translate="yes" xml:space="preserve">
          <source>Graylin Kim (&lt;a href=&quot;https://github.com/GraylinKim&quot;&gt;https://github.com/GraylinKim&lt;/a&gt;)</source>
          <target state="translated">Graylin Kim ( &lt;a href=&quot;https://github.com/GraylinKim&quot;&gt;https://github.com/GraylinKim&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="5aefa9e4a096f5ee79287641afd6399d07cf0064" translate="yes" xml:space="preserve">
          <source>Here we can see how to mock an entire module, in this case replacing the</source>
          <target state="translated">Aquí podemos ver cómo burlar un módulo entero,en este caso reemplazando el</target>
        </trans-unit>
        <trans-unit id="578b86ed5f9ec28ef6e1f4dae1fa2741acada0af" translate="yes" xml:space="preserve">
          <source>Identical to assertAlmostEquals, will match an argument to the comparator value to a most</source>
          <target state="translated">Idéntico a AssertAlmostEquals,hará coincidir un argumento con el valor de comparación con un máximo de</target>
        </trans-unit>
        <trans-unit id="47cfaa1eebeab21bcec778d674f2f2fe1612ea22" translate="yes" xml:space="preserve">
          <source>If you have any suggestions, bug reports or annoyances please report them
to our issue tracker at &lt;a href=&quot;https://github.com/agoragames/chai/issues&quot;&gt;https://github.com/agoragames/chai/issues&lt;/a&gt;</source>
          <target state="translated">Si tiene alguna sugerencia, informe de errores o molestias, inf&amp;oacute;rmelo a nuestro rastreador de problemas en &lt;a href=&quot;https://github.com/agoragames/chai/issues&quot;&gt;https://github.com/agoragames/chai/issues&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e332ee12bb837d8df82eb22bbb498f344d1046c3" translate="yes" xml:space="preserve">
          <source>In addition to implementing</source>
          <target state="translated">Además de aplicar</target>
        </trans-unit>
        <trans-unit id="37d213f0410713c9a3a5bfc908891c14adfce250" translate="yes" xml:space="preserve">
          <source>In this example, we can reference</source>
          <target state="translated">En este ejemplo,podemos hacer referencia</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Instalación</target>
        </trans-unit>
        <trans-unit id="26de4bd441c871b067028d1d25a6d77bb366a12b" translate="yes" xml:space="preserve">
          <source>It is very common to need to run expectations on the constructor for an object, possibly including returning a mock object. Chai makes this very simple.</source>
          <target state="translated">Es muy común la necesidad de tener que correr expectativas sobre el constructor de un objeto,posiblemente incluyendo la devolución de un objeto simulado.Chai hace esto muy simple.</target>
        </trans-unit>
        <trans-unit id="3c4db4439387838c7ed03af1620fd3a43b52efcc" translate="yes" xml:space="preserve">
          <source>Jason Baker (&lt;a href=&quot;https://github.com/jasonbaker&quot;&gt;https://github.com/jasonbaker&lt;/a&gt;)</source>
          <target state="translated">Jason Baker ( &lt;a href=&quot;https://github.com/jasonbaker&quot;&gt;https://github.com/jasonbaker&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="5b2a8de57085502bee48bbba4b377f74d645fa56" translate="yes" xml:space="preserve">
          <source>Keywords:</source>
          <target state="translated">Palabras clave:</target>
        </trans-unit>
        <trans-unit id="79b82ce9b64a924266619555502f890dd80c83b9" translate="yes" xml:space="preserve">
          <source>LICENSE.txt</source>
          <target state="translated">LICENCIA.txt</target>
        </trans-unit>
        <trans-unit id="0ba80658087c25238e2c567f1cfad45cc9216322" translate="yes" xml:space="preserve">
          <source>Lastly, Chai 1.0.0 supports spies. These are an extension of expectations and support most of the same features. The modifiers</source>
          <target state="translated">Por último,Chai 1.0.0 apoya a los espías.Son una extensión de las expectativas y apoyan la mayoría de las mismas características.Los modificadores</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Licencia</target>
        </trans-unit>
        <trans-unit id="52436bb60c5567c4acebb0e6924534965da9e509" translate="yes" xml:space="preserve">
          <source>Match an argument of a given type. Supports same arguments as builtin function</source>
          <target state="translated">Coincide con un argumento de un tipo determinado.Soporta los mismos argumentos que la función incorporada</target>
        </trans-unit>
        <trans-unit id="0281a72890edcfdf386a019d647a7a7aa64e0eef" translate="yes" xml:space="preserve">
          <source>Matches an argument if all of the comparators in the argument list are met. Uses automatic comparator generation for instances and types in the list.</source>
          <target state="translated">Coincide con un argumento si se cumplen todos los comparadores de la lista de argumentos.Utiliza la generación automática de comparadores para las instancias y tipos de la lista.</target>
        </trans-unit>
        <trans-unit id="ec116a2ea8b3366c1ee8dc8a74b7e9112acca2f5" translate="yes" xml:space="preserve">
          <source>Matches an argument if any of the comparators in the argument list are met. Uses automatic comparator generation for instances and types in the list.</source>
          <target state="translated">Coincide con un argumento si alguno de los comparadores de la lista de argumentos se cumplen.Utiliza la generación automática de comparadores para las instancias y tipos de la lista.</target>
        </trans-unit>
        <trans-unit id="c160e8f154251174b7d51eed4e58c779169ea6f5" translate="yes" xml:space="preserve">
          <source>Matches an argument if the callable returns True. The callable must take one argument, the parameter being checked.</source>
          <target state="translated">Coincide con un argumento si el llamable devuelve True.El invocable debe tomar un argumento,el parámetro que se comprueba.</target>
        </trans-unit>
        <trans-unit id="5738633496d14d0b47b8bbabc9cd98327ca4516b" translate="yes" xml:space="preserve">
          <source>Matches an argument if the supplied comparator does not match.</source>
          <target state="translated">Coincide con un argumento si el comparador suministrado no coincide.</target>
        </trans-unit>
        <trans-unit id="833a9f1c455db76e44dcef55ab966c2ad68dae73" translate="yes" xml:space="preserve">
          <source>Matches an argument using a regular expression. Standard</source>
          <target state="translated">Coincide con un argumento usando una expresión regular.Estándar</target>
        </trans-unit>
        <trans-unit id="64f853c1a3575e736b514d000c9fc82f4e65a929" translate="yes" xml:space="preserve">
          <source>Matches an argument using the Python</source>
          <target state="translated">Coincide con un argumento usando el Python</target>
        </trans-unit>
        <trans-unit id="eec5f5fe4c719cf13cb4decc58c6eca8c4175c6d" translate="yes" xml:space="preserve">
          <source>Matches any argument.</source>
          <target state="translated">Coincide con cualquier argumento.</target>
        </trans-unit>
        <trans-unit id="b7200896402bdcbf55c7ed22169f1bec614898dc" translate="yes" xml:space="preserve">
          <source>Matches if the argument contains all of the same items as in</source>
          <target state="translated">Coincide si el argumento contiene todos los mismos elementos que en</target>
        </trans-unit>
        <trans-unit id="79016d7ee9793533cc696e409203635bb18907aa" translate="yes" xml:space="preserve">
          <source>Matches if the argument contains the object using the Python</source>
          <target state="translated">Coincide si el argumento contiene el objeto usando el Python</target>
        </trans-unit>
        <trans-unit id="16c60b75cfa05fcad93b0a4c2d7a42de16b96e4d" translate="yes" xml:space="preserve">
          <source>Matches if the argument is in the</source>
          <target state="translated">Coincide si el argumento está en el</target>
        </trans-unit>
        <trans-unit id="0b5fa58aad46cd81289ba53232a9f49430c093f9" translate="yes" xml:space="preserve">
          <source>Matches parameters with defined length. Must be either an integer or a set of integers that implements the</source>
          <target state="translated">Coincide con parámetros de longitud definida.Debe ser un número entero o un conjunto de números enteros que implemente el</target>
        </trans-unit>
        <trans-unit id="3bba2a47ccf460c78711135c78388afb263663e3" translate="yes" xml:space="preserve">
          <source>Mock</source>
          <target state="translated">Simulacro</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modificadores</target>
        </trans-unit>
        <trans-unit id="b82f9dbded8be3c08f18bb50cd84de6d93501702" translate="yes" xml:space="preserve">
          <source>Modifiers can be applied to the expectation. Each modifier will return a reference to the expectation for easy chaining. In this example, we&amp;rsquo;re going to match a parameter and change the behavior depending on the argument. This also shows the ability to incrementally add expectations throughout the test.</source>
          <target state="translated">Se pueden aplicar modificadores a la expectativa. Cada modificador devolver&amp;aacute; una referencia a la expectativa de un encadenamiento sencillo. En este ejemplo, vamos a hacer coincidir un par&amp;aacute;metro y cambiar el comportamiento seg&amp;uacute;n el argumento. Esto tambi&amp;eacute;n muestra la capacidad de agregar expectativas de manera incremental a lo largo de la prueba.</target>
        </trans-unit>
        <trans-unit id="30caca616e914961a93ef38991a99a8fdcf65277" translate="yes" xml:space="preserve">
          <source>New BSD License</source>
          <target state="translated">Nueva licencia BSD</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Visión general</target>
        </trans-unit>
        <trans-unit id="249bcdd49abf6ce031f99eb9b9a3fd68584adea1" translate="yes" xml:space="preserve">
          <source>Pierre-Yves Chibon (&lt;a href=&quot;https://github.com/pypingou&quot;&gt;https://github.com/pypingou&lt;/a&gt;)</source>
          <target state="translated">Pierre-Yves Chibon ( &lt;a href=&quot;https://github.com/pypingou&quot;&gt;https://github.com/pypingou&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="translated">PyPy</target>
        </trans-unit>
        <trans-unit id="0a0fb0a20c4b091ba5303a132f8d8efa896c840d" translate="yes" xml:space="preserve">
          <source>PyPy does not support stubs on the setter and deleter methods of properties. Additionally, it does not support spies on methods such as</source>
          <target state="translated">PyPy no admite talones en los métodos de fijación y eliminación de propiedades.Además,no soporta espías en métodos como</target>
        </trans-unit>
        <trans-unit id="0101a74afd88d622354b05b2b6416e029264bbac" translate="yes" xml:space="preserve">
          <source>Python 3</source>
          <target state="translated">Python 3</target>
        </trans-unit>
        <trans-unit id="931491d147f16484a7cb1f00770a1f7de6b881fd" translate="yes" xml:space="preserve">
          <source>Sets a maximum number of times the expectation should run. Does not affect the minimum.</source>
          <target state="translated">Establece un número máximo de veces que la expectativa debe correr.No afecta al mínimo.</target>
        </trans-unit>
        <trans-unit id="97d6e8f8fead0ac644058c61a7041d07204d5751" translate="yes" xml:space="preserve">
          <source>Sets a minimum number of times the expectation should run and removes any maximum.</source>
          <target state="translated">Establece un número mínimo de veces que la expectativa debe correr y elimina cualquier máximo.</target>
        </trans-unit>
        <trans-unit id="6dd9bcb0055bcf1664633a10b837b22f137ec2ea" translate="yes" xml:space="preserve">
          <source>Some methods cannot be stubbed because it is impossible to call</source>
          <target state="translated">Algunos métodos no pueden ser rechazados porque es imposible llamar</target>
        </trans-unit>
        <trans-unit id="64372ff5848fdca40105ba3398265d435b361309" translate="yes" xml:space="preserve">
          <source>Sometimes you need a mock object which can be used to stub and expect anything. Chai exposes this through the</source>
          <target state="translated">A veces se necesita un objeto de imitación que se pueda usar para dar un golpe y esperar cualquier cosa.Chai expone esto a través de la</target>
        </trans-unit>
        <trans-unit id="922acd282cc0f3bb9e6dffb4c4b3c4fe33787051" translate="yes" xml:space="preserve">
          <source>Source:</source>
          <target state="translated">Fuente:</target>
        </trans-unit>
        <trans-unit id="f800c47aedcfb6c78103ab37e05646e400a5fb94" translate="yes" xml:space="preserve">
          <source>Special thank you to the following people for contributions to Chai</source>
          <target state="translated">Agradecemos especialmente a las siguientes personas por sus contribuciones a Chai</target>
        </trans-unit>
        <trans-unit id="6337ef9a08d30c083265a28f2755fcfc6e5075db" translate="yes" xml:space="preserve">
          <source>Spies can be used just like any expectation.</source>
          <target state="translated">Los espías pueden ser usados como cualquier expectativa.</target>
        </trans-unit>
        <trans-unit id="3f5b5b947f543bd614ac274f6ecbb98c191daa1a" translate="yes" xml:space="preserve">
          <source>Stub.__call__</source>
          <target state="translated">Stub.__llamada__</target>
        </trans-unit>
        <trans-unit id="532626609e018b03feb0f8b6873e8b52009d95ad" translate="yes" xml:space="preserve">
          <source>Stubbing</source>
          <target state="translated">Stubbing</target>
        </trans-unit>
        <trans-unit id="017721b5c069939cc33729e5278a9b82d6573abd" translate="yes" xml:space="preserve">
          <source>Stubbing an unbound method will apply that stub to all future instances of that class.</source>
          <target state="translated">El método de &quot;stubbing&quot; un método no ligado aplicará ese &quot;stub&quot; a todas las futuras instancias de esa clase.</target>
        </trans-unit>
        <trans-unit id="deefcc800cb4a114a041cc0ca7d258a65c235d23" translate="yes" xml:space="preserve">
          <source>Stubbing is used for situations when you want to assert that a method is never called, and is equivalent to</source>
          <target state="translated">El Stubbing se utiliza para situaciones en las que se quiere afirmar que un método nunca se llama,y es equivalente a</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Prueba</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">El</target>
        </trans-unit>
        <trans-unit id="d752a581ffbd4e3a4cd7cd68c4b24560192106c6" translate="yes" xml:space="preserve">
          <source>The arguments modifier supports several matching functions. For simplicity in covering the common cases, the</source>
          <target state="translated">El modificador de argumentos soporta varias funciones de concordancia.Para simplificar la cobertura de los casos más comunes,el</target>
        </trans-unit>
        <trans-unit id="fc2ec7ffc6999be8bd4fe8d6ce99a0d3f51a8aa9" translate="yes" xml:space="preserve">
          <source>The default comparator, uses standard Python equals operator</source>
          <target state="translated">El comparador por defecto,utiliza el operador estándar Python igual a</target>
        </trans-unit>
        <trans-unit id="f0f4fef1697746ebf67e6f2b9a19de26c5ddaa5f" translate="yes" xml:space="preserve">
          <source>The expectation can be called at any time, independent of when it was defined. Can be combined with</source>
          <target state="translated">La expectativa puede ser llamada en cualquier momento,independientemente de cuando fue definida.Puede combinarse con</target>
        </trans-unit>
        <trans-unit id="3bc14d0816544e54a72050bf25d015613660a983" translate="yes" xml:space="preserve">
          <source>The following is an example of a simple test case which is mocking out a get method
on the</source>
          <target state="translated">El siguiente es un ejemplo de un simple caso de prueba que se burla de un método de obtención en el</target>
        </trans-unit>
        <trans-unit id="4466463c967aed861583991e16c79001997e6933" translate="yes" xml:space="preserve">
          <source>The simplest mock is to stub a method. This replaces the original method with a subclass of</source>
          <target state="translated">El simulacro más simple es el de desbaratar un método.Esto reemplaza el método original con una subclase de</target>
        </trans-unit>
        <trans-unit id="8daa5c3e653a861992fc4f0920ce108a4f91824c" translate="yes" xml:space="preserve">
          <source>This software is licensed under the</source>
          <target state="translated">Este software está licenciado bajo la</target>
        </trans-unit>
        <trans-unit id="e2c2d137f86498c8f871823ce639de0305002f96" translate="yes" xml:space="preserve">
          <source>To install using</source>
          <target state="translated">Para instalar usando</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">Verdadero</target>
        </trans-unit>
        <trans-unit id="5933f2f8b011d124ec92cea843f6535a1a397b33" translate="yes" xml:space="preserve">
          <source>Unbound methods can also be stubbed by attribute name instead of by reference.</source>
          <target state="translated">Los métodos no consolidados también pueden ser tachados por el nombre del atributo en lugar de por la referencia.</target>
        </trans-unit>
        <trans-unit id="2500973932b12ab321a155961d9ea319310d453f" translate="yes" xml:space="preserve">
          <source>Unbound methods can only be stubbed by attribute in Python 3 as unbound methods do not have a reference to the class they&amp;rsquo;re defined in, and appear as module functions.</source>
          <target state="translated">Los m&amp;eacute;todos no vinculados solo se pueden apuntar por atributo en Python 3, ya que los m&amp;eacute;todos no vinculados no tienen una referencia a la clase en la que est&amp;aacute;n definidos y aparecen como funciones de m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="96e366a69c3d2953901b5918a158d8e02fd82996" translate="yes" xml:space="preserve">
          <source>UnexpectedCall</source>
          <target state="translated">Llamada inesperada</target>
        </trans-unit>
        <trans-unit id="75ce834291478f9efcbe3e6a82dfa4d68e9f5094" translate="yes" xml:space="preserve">
          <source>UnsupportedModifier</source>
          <target state="translated">UnsupportedModifier</target>
        </trans-unit>
        <trans-unit id="ce072f1895fd9e9032b296dc89a39594cc100cab" translate="yes" xml:space="preserve">
          <source>UnsupportedStub</source>
          <target state="translated">UnsupportedStub</target>
        </trans-unit>
        <trans-unit id="04097f1770abb96f299c52664b32c53eec0eae53" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/nose-devs/nose/&quot;&gt;nose&lt;/a&gt; to run the test suite.</source>
          <target state="translated">Utilice la &lt;a href=&quot;https://github.com/nose-devs/nose/&quot;&gt;nariz&lt;/a&gt; para ejecutar la suite de pruebas.</target>
        </trans-unit>
        <trans-unit id="708f78f6fa52b6e00331c45019978384c374dc55" translate="yes" xml:space="preserve">
          <source>Using the class, you can directly refer to all 3 methods of the property. To refer to the getter you use the property directly, and for the methods you use its associated attribute name. You can stub in any order and it will still resolve correctly.</source>
          <target state="translated">Usando la clase,puedes referirte directamente a los 3 métodos de la propiedad.Para referirse al getter se usa la propiedad directamente,y para los métodos se usa su nombre de atributo asociado.Puedes hacer stub en cualquier orden y aún así se resolverá correctamente.</target>
        </trans-unit>
        <trans-unit id="55aad07b470f741632818901362d3192d8c4fc65" translate="yes" xml:space="preserve">
          <source>Using the development version</source>
          <target state="translated">Usando la versión de desarrollo</target>
        </trans-unit>
        <trans-unit id="9f49127025fb5873ad1bd738867c76e3725ffeaa" translate="yes" xml:space="preserve">
          <source>Version:</source>
          <target state="translated">Versión:</target>
        </trans-unit>
        <trans-unit id="93acff7457b73933810ead751674eb431fdefd27" translate="yes" xml:space="preserve">
          <source>When the expectation is run it will raise this exception. Accepts type or instance.</source>
          <target state="translated">Cuando la expectativa se cumpla,se planteará esta excepción.Acepta tipo o instancia.</target>
        </trans-unit>
        <trans-unit id="da1328380877db4313f0218c09c2a70bce261124" translate="yes" xml:space="preserve">
          <source>Will remove the stub after the expectation has been met. This is useful in cases where you need to mock core methods such as</source>
          <target state="translated">Quitará el talón después de que la expectativa se haya cumplido.Esto es útil en los casos en que se necesita burlar los métodos básicos como</target>
        </trans-unit>
        <trans-unit id="fbfc23aabeac2b5f88c8032dbe3efeb9b665a38f" translate="yes" xml:space="preserve">
          <source>Without any arguments,</source>
          <target state="translated">Sin ningún argumento,</target>
        </trans-unit>
        <trans-unit id="ac582443a872d596ad58cba1f67e0829448c00a7" translate="yes" xml:space="preserve">
          <source>You can clone the repository by doing the following:</source>
          <target state="translated">Puedes clonar el depósito haciendo lo siguiente:</target>
        </trans-unit>
        <trans-unit id="a2446e8adb55aad3a8365475b78d120d7951192c" translate="yes" xml:space="preserve">
          <source>You can install Chai either via the Python Package Index (PyPI)
or from source.</source>
          <target state="translated">Puedes instalar Chai a través del Índice de Paquetes Python (PyPI)o desde la fuente.</target>
        </trans-unit>
        <trans-unit id="43c7743d208b62958f64ac929f35258d93f6fa52" translate="yes" xml:space="preserve">
          <source>You can install it by doing the following,:</source>
          <target state="translated">Puedes instalarlo haciendo lo siguiente,..:</target>
        </trans-unit>
        <trans-unit id="5ef22e52a7b4fa521b5bb4591d08e73e66b83559" translate="yes" xml:space="preserve">
          <source>[Spies Only] Called with a function argument. When the expectation passes a test, the function will be executed and passed the return value from the function as an argument.</source>
          <target state="translated">[Solo esp&amp;iacute;as] Se llama con un argumento de funci&amp;oacute;n. Cuando la expectativa pasa una prueba, la funci&amp;oacute;n se ejecutar&amp;aacute; y pasar&amp;aacute; el valor de retorno de la funci&amp;oacute;n como argumento.</target>
        </trans-unit>
        <trans-unit id="28d4be6f7543b25d5cd9f4933db7bbbad2aac676" translate="yes" xml:space="preserve">
          <source>[instanceof, equals]</source>
          <target state="translated">[instancia de, igual a]</target>
        </trans-unit>
        <trans-unit id="0eb099a357584b4f955cbda61225dc381eab39b3" translate="yes" xml:space="preserve">
          <source>__call__</source>
          <target state="translated">__llamada__</target>
        </trans-unit>
        <trans-unit id="257f005fbc81a82a298a580736f62ec957f8b6d7" translate="yes" xml:space="preserve">
          <source>__getattr__</source>
          <target state="translated">__getattr__</target>
        </trans-unit>
        <trans-unit id="1939f247b3ae06244a8d50fa7dabbcc975c6fc4c" translate="yes" xml:space="preserve">
          <source>__init__</source>
          <target state="translated">__en eso__</target>
        </trans-unit>
        <trans-unit id="069ef7757d5b44505f8451d3a43142b6899db0b0" translate="yes" xml:space="preserve">
          <source>__nonzero__</source>
          <target state="translated">__nonzero__</target>
        </trans-unit>
        <trans-unit id="bb358f5189ecdefa79473c7ae6f8e06eb5eebe91" translate="yes" xml:space="preserve">
          <source>all_of(comparator_list)</source>
          <target state="translated">all_of(lista_de_comparación)</target>
        </trans-unit>
        <trans-unit id="b0a40d103e8cf3fe9fd38d45fe0bfe0f7c3d1d81" translate="yes" xml:space="preserve">
          <source>almost_equals(float, places)</source>
          <target state="translated">casi_igual(carroza,lugares)</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">en</target>
        </trans-unit>
        <trans-unit id="13ddb621ae7f35f27ca0db51a979ab23a209cb3c" translate="yes" xml:space="preserve">
          <source>and stub the method accordingly. There are cases where this is insufficient, such as module imports, special Python types, and when module attributes are imported from another (like</source>
          <target state="translated">y el método se apaga en consecuencia.Hay casos en que esto es insuficiente,como las importaciones de módulos,los tipos especiales de Python,y cuando los atributos de los módulos se importan de otro (como</target>
        </trans-unit>
        <trans-unit id="2ccf03cf67db568f2489439444391c360995f7db" translate="yes" xml:space="preserve">
          <source>and use those for custom argument processing.</source>
          <target state="translated">y usarlos para el procesamiento de argumentos personalizados.</target>
        </trans-unit>
        <trans-unit id="6c7f43a3342fec78397ca155957aaa1f8221e31d" translate="yes" xml:space="preserve">
          <source>any_args</source>
          <target state="translated">any_args</target>
        </trans-unit>
        <trans-unit id="8e3c1ef1762e01ebdbc0f25aef28f78e39dcbad3" translate="yes" xml:space="preserve">
          <source>any_of(comparator_list)</source>
          <target state="translated">cualquier_de(lista_de_comparación)</target>
        </trans-unit>
        <trans-unit id="1e5bbe0caabe9d2dffc209a94442d9535eb12e3a" translate="yes" xml:space="preserve">
          <source>any_order</source>
          <target state="translated">cualquier_orden</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="f57285b1fc2e263530528e4d2997a1412bdaf662" translate="yes" xml:space="preserve">
          <source>args(</source>
          <target state="translated">args(</target>
        </trans-unit>
        <trans-unit id="389e79fa4c304a578943e79050160f09ce8be28b" translate="yes" xml:space="preserve">
          <source>assert*</source>
          <target state="translated">Afirmar...</target>
        </trans-unit>
        <trans-unit id="1eed2668ab41ab807ca181fb2255284af66a1706" translate="yes" xml:space="preserve">
          <source>assertNotEquals</source>
          <target state="translated">assertNotEquals</target>
        </trans-unit>
        <trans-unit id="82c28592831aad3fb9147b9c2d1a613a887289fc" translate="yes" xml:space="preserve">
          <source>assert_not_equals</source>
          <target state="translated">afirmar_no_igual</target>
        </trans-unit>
        <trans-unit id="8faa033768c76ab4bcdad872d6cbed6172111b2b" translate="yes" xml:space="preserve">
          <source>at_least(1)</source>
          <target state="translated">al menos(1)</target>
        </trans-unit>
        <trans-unit id="9e71761819b8e6a30f293eb3c753b56edb6dd1b2" translate="yes" xml:space="preserve">
          <source>at_least(int)</source>
          <target state="translated">at_least(int)</target>
        </trans-unit>
        <trans-unit id="1f8bd632c97bd396df5983a0fa9a946be323be1d" translate="yes" xml:space="preserve">
          <source>at_least_once</source>
          <target state="translated">al menos una vez</target>
        </trans-unit>
        <trans-unit id="a57fcce708f90dfb5d33aae7f73c725928ca7195" translate="yes" xml:space="preserve">
          <source>at_least_once()</source>
          <target state="translated">al menos una vez</target>
        </trans-unit>
        <trans-unit id="1bad5158333d7ef8d9bb7ee752685c706033b12b" translate="yes" xml:space="preserve">
          <source>at_most(1)</source>
          <target state="translated">a_más(1)</target>
        </trans-unit>
        <trans-unit id="94e36f1d78da872c73875e89af477a8dc6e88c81" translate="yes" xml:space="preserve">
          <source>at_most(int)</source>
          <target state="translated">a_más(int)</target>
        </trans-unit>
        <trans-unit id="7ceb468a287c5fec15267df8df2381e0f2cf6ea1" translate="yes" xml:space="preserve">
          <source>at_most_once</source>
          <target state="translated">a_más_de_una_vez</target>
        </trans-unit>
        <trans-unit id="b2cecfa48bb23de75266c7bede7eb813d6e26384" translate="yes" xml:space="preserve">
          <source>because it is represented as an unbound method, rather than CPython&amp;rsquo;s</source>
          <target state="translated">porque se representa como un m&amp;eacute;todo independiente, en lugar de CPython</target>
        </trans-unit>
        <trans-unit id="c7683a96530f64f60ed7321ab1a69891e523bca9" translate="yes" xml:space="preserve">
          <source>because the spy passes arguments and returns or raises the results of the stubbed function. You can make use of</source>
          <target state="translated">porque el espía pasa argumentos y devuelve o eleva los resultados de la función de la cuchara.Puede hacer uso de</target>
        </trans-unit>
        <trans-unit id="e7b3a1d873dbf656cecbaa3c90ab46d757a5a1db" translate="yes" xml:space="preserve">
          <source>behaves as expected so it can store state as well. The dynamic function will act like a stub, raising</source>
          <target state="translated">se comporta como se espera para poder almacenar el estado también.La función dinámica actuará como un talón,elevando</target>
        </trans-unit>
        <trans-unit id="9b86f0a8390355e056677824d81d78409ab61d02" translate="yes" xml:space="preserve">
          <source>call will return a new</source>
          <target state="translated">La llamada devolverá una nueva</target>
        </trans-unit>
        <trans-unit id="305bf9b44b1d93d4baaefe8364ddc3366db97a2b" translate="yes" xml:space="preserve">
          <source>calls will re-use this stub, and the stub is responsible for re-installing the original reference when</source>
          <target state="translated">las llamadas reutilizarán este resguardo,y el resguardo es responsable de reinstalar la referencia original cuando</target>
        </trans-unit>
        <trans-unit id="3abe90db5cf547d284ecd7a7d4f9e8a2e2e4319b" translate="yes" xml:space="preserve">
          <source>can also be referenced as</source>
          <target state="translated">también puede ser referido como</target>
        </trans-unit>
        <trans-unit id="418c68797caeafc6524ac3cb6592a80ae22945b2" translate="yes" xml:space="preserve">
          <source>chai.Expectation</source>
          <target state="translated">chai.Expectativa</target>
        </trans-unit>
        <trans-unit id="b6b5afb5dd475a979860d7c7ef6a727d8f2af5d4" translate="yes" xml:space="preserve">
          <source>chai.Mock</source>
          <target state="translated">chai.Mock</target>
        </trans-unit>
        <trans-unit id="5c23c31cee6490df5665070eb795a68aff6be228" translate="yes" xml:space="preserve">
          <source>chai.Stub</source>
          <target state="translated">chai.Stub</target>
        </trans-unit>
        <trans-unit id="723ac5837d74134a8bd6dc80b7746cef21c401b4" translate="yes" xml:space="preserve">
          <source>chai.comparators</source>
          <target state="translated">chai.comparadores</target>
        </trans-unit>
        <trans-unit id="83344978f7d3e22dd235546a648037a1a70fa642" translate="yes" xml:space="preserve">
          <source>class for convenience (and by extension, a subclass&amp;rsquo; module).</source>
          <target state="translated">class por conveniencia (y por extensi&amp;oacute;n, un m&amp;oacute;dulo de subclase).</target>
        </trans-unit>
        <trans-unit id="768b72366b0182e510e9425d7d85337debefe20c" translate="yes" xml:space="preserve">
          <source>class, itself a subclass of</source>
          <target state="translated">clase,que a su vez es una subclase de</target>
        </trans-unit>
        <trans-unit id="0cc7102c94def662d043ec4241da06fc9926f886" translate="yes" xml:space="preserve">
          <source>class. In that situation, it is best to mock out the entire module (see below).</source>
          <target state="translated">clase.En esa situación,lo mejor es burlarse de todo el módulo (ver más abajo).</target>
        </trans-unit>
        <trans-unit id="2f8d7291bcc3fd988171adc610547a5a8ead0a86" translate="yes" xml:space="preserve">
          <source>comparator to produce side effects, be aware that it may be called more than once even if the expectation you&amp;rsquo;re defining only occurs once. This is due to the way</source>
          <target state="translated">comparador para producir efectos secundarios, tenga en cuenta que se puede llamar m&amp;aacute;s de una vez incluso si la expectativa que est&amp;aacute; definiendo solo ocurre una vez. Esto se debe a la forma</target>
        </trans-unit>
        <trans-unit id="c9865213e116865ef91aa18a73152e6556cc4e3e" translate="yes" xml:space="preserve">
          <source>comparator, else defaults to the</source>
          <target state="translated">comparador,si no,se ajusta por defecto al</target>
        </trans-unit>
        <trans-unit id="a8c00162855e634495a8423c4eeeeaf1a51fc82b" translate="yes" xml:space="preserve">
          <source>comparator.</source>
          <target state="translated">comparador.</target>
        </trans-unit>
        <trans-unit id="5ac591f7a4da84e633b65211d6739ac2477ecc7d" translate="yes" xml:space="preserve">
          <source>comparator. Users can create subclasses of</source>
          <target state="translated">comparador.Los usuarios pueden crear subclases de</target>
        </trans-unit>
        <trans-unit id="255a762c36cdae2fe950e67e8b8a4efb260e7540" translate="yes" xml:space="preserve">
          <source>container</source>
          <target state="translated">contenedor</target>
        </trans-unit>
        <trans-unit id="041fdb20bc4e53f9b2967bbff319dfdc59c901d0" translate="yes" xml:space="preserve">
          <source>contains(object)</source>
          <target state="translated">contiene(n)</target>
        </trans-unit>
        <trans-unit id="52b7e7909335de6b2becb84bec951aadb8ca97e2" translate="yes" xml:space="preserve">
          <source>custom.py</source>
          <target state="translated">custom.py</target>
        </trans-unit>
        <trans-unit id="53910fb46a116dbf1909866b879783e783b61217" translate="yes" xml:space="preserve">
          <source>datetime.datetime</source>
          <target state="translated">fecha-hora.fecha-hora</target>
        </trans-unit>
        <trans-unit id="0a825ee063f3c0c08ab0043b6466868311de5081" translate="yes" xml:space="preserve">
          <source>deque</source>
          <target state="translated">deque</target>
        </trans-unit>
        <trans-unit id="585970d412c17a89ef439a463d5ebef9eb1f9311" translate="yes" xml:space="preserve">
          <source>digits beyond the decimal point.</source>
          <target state="translated">dígitos más allá del punto decimal.</target>
        </trans-unit>
        <trans-unit id="f0eb7b84c05dad54bcc9b4292b9243991e7dbe71" translate="yes" xml:space="preserve">
          <source>directly because</source>
          <target state="translated">directamente porque</target>
        </trans-unit>
        <trans-unit id="80b2f559a14748525776894e12e1216b49b5b558" translate="yes" xml:space="preserve">
          <source>equals</source>
          <target state="translated">es igual a</target>
        </trans-unit>
        <trans-unit id="a3d29989b370808d87f23497857485d4d11da413" translate="yes" xml:space="preserve">
          <source>equals(object)</source>
          <target state="translated">es igual a (objeto)</target>
        </trans-unit>
        <trans-unit id="53104b63d8180d11a51f46bb408c53709d65ea66" translate="yes" xml:space="preserve">
          <source>everywhere that you want to run a test.  The references are loaded into the subclass&amp;rsquo; module during</source>
          <target state="translated">en cualquier lugar donde desee realizar una prueba. Las referencias se cargan en el m&amp;oacute;dulo de la subclase durante</target>
        </trans-unit>
        <trans-unit id="ff93c451ac21b50761eb1ee0b9fa15fa2c159ada" translate="yes" xml:space="preserve">
          <source>expect</source>
          <target state="translated">espera</target>
        </trans-unit>
        <trans-unit id="cfd04bf3c98d670cb2770d954b0486e6f6e8995b" translate="yes" xml:space="preserve">
          <source>expect(target).times(0)</source>
          <target state="translated">expect(target).times(0)</target>
        </trans-unit>
        <trans-unit id="1e853a30859991eab8f040c4fe4d0d46bf88b85b" translate="yes" xml:space="preserve">
          <source>file in the top distribution directory for the full license text.</source>
          <target state="translated">en el directorio de distribución superior para el texto completo de la licencia.</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="20af3b045ab37e07afeef706fa5b58c4db95708a" translate="yes" xml:space="preserve">
          <source>func(callable)</source>
          <target state="translated">func(callable)</target>
        </trans-unit>
        <trans-unit id="cac02ec1a476ed80dfd51b02515cb2a3bd581ae2" translate="yes" xml:space="preserve">
          <source>function.</source>
          <target state="translated">función.</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">consigue</target>
        </trans-unit>
        <trans-unit id="c7812c56225257705652abb417797151861a2026" translate="yes" xml:space="preserve">
          <source>getattr</source>
          <target state="translated">getattr</target>
        </trans-unit>
        <trans-unit id="67c8869f3cb3efbf22383c69b61c91f0547265bb" translate="yes" xml:space="preserve">
          <source>handles the common case of a</source>
          <target state="translated">maneja el caso común de un</target>
        </trans-unit>
        <trans-unit id="012594037dd4805bfc5d03a1ac4aa4d499ccd6d5" translate="yes" xml:space="preserve">
          <source>if no expectation is defined.</source>
          <target state="translated">si no se define ninguna expectativa.</target>
        </trans-unit>
        <trans-unit id="8ccbde832c3e0f90c55b72c598844679fff2167d" translate="yes" xml:space="preserve">
          <source>ignore</source>
          <target state="translated">ignorar</target>
        </trans-unit>
        <trans-unit id="0aabfe2e1e584c7746cbed3c8e4626c68d1cb98e" translate="yes" xml:space="preserve">
          <source>implementation, can also support nested attributes.</source>
          <target state="translated">de la aplicación,también puede apoyar los atributos anidados.</target>
        </trans-unit>
        <trans-unit id="3463d9151084872a4ee1a4c683ed6541fd3e09c3" translate="yes" xml:space="preserve">
          <source>import in</source>
          <target state="translated">importar en</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">en</target>
        </trans-unit>
        <trans-unit id="eb83a065711dee9cc6b61d6a2783305d1ba949ff" translate="yes" xml:space="preserve">
          <source>in_arg(in_list)</source>
          <target state="translated">in_arg(in_list)</target>
        </trans-unit>
        <trans-unit id="d41ead2b91d860ec9ae1f07e5a96091f04720c52" translate="yes" xml:space="preserve">
          <source>in_list</source>
          <target state="translated">en_lista</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">es</target>
        </trans-unit>
        <trans-unit id="e2c3d91ba4b38b4aac60b012869f3adbef7d1627" translate="yes" xml:space="preserve">
          <source>is a bound method and provides all of the context we need to refer back to</source>
          <target state="translated">es un método vinculante y proporciona todo el contexto al que debemos referirnos</target>
        </trans-unit>
        <trans-unit id="34da87ed63b1213b7bdf7ce44013e73e6501a2ef" translate="yes" xml:space="preserve">
          <source>is available Chai will use that, else it will fall back to</source>
          <target state="translated">está disponible Chai lo usará,si no,volverá a</target>
        </trans-unit>
        <trans-unit id="d2a97d06ced2fffd0e8593c2c3299e9b327bd455" translate="yes" xml:space="preserve">
          <source>is necessary. The arguments and edge cases regarding what can and cannot have expectations applied are identical to stubs. The</source>
          <target state="translated">es necesario.Los argumentos y los casos límite sobre lo que se puede y no se puede aplicar a las expectativas son idénticos a los de los talones.El</target>
        </trans-unit>
        <trans-unit id="47d26f8f256a069c14e4ca93334cc476d0bea882" translate="yes" xml:space="preserve">
          <source>is run.</source>
          <target state="translated">se ejecuta.</target>
        </trans-unit>
        <trans-unit id="c1e8593ba54ccaa36ea177aeba99accd1ca07866" translate="yes" xml:space="preserve">
          <source>is_a</source>
          <target state="translated">es_a</target>
        </trans-unit>
        <trans-unit id="46f7ce43b4797ffe4dd5e65205921c4f7fda3fec" translate="yes" xml:space="preserve">
          <source>is_a(type)</source>
          <target state="translated">is_a(tipo)</target>
        </trans-unit>
        <trans-unit id="906660fa3228b9009745b94e3d1c827ceac88fd6" translate="yes" xml:space="preserve">
          <source>is_arg(object)</source>
          <target state="translated">is_arg(objeto)</target>
        </trans-unit>
        <trans-unit id="6cf96d2bf3095343036d0ffe445c969fbd0f4a03" translate="yes" xml:space="preserve">
          <source>isinstance</source>
          <target state="translated">isinstancia</target>
        </trans-unit>
        <trans-unit id="a81d8a6f530dfe8beab11576a45b3deb4cc0b55b" translate="yes" xml:space="preserve">
          <source>length(len)</source>
          <target state="translated">longitud(len)</target>
        </trans-unit>
        <trans-unit id="1ff0113d9fb9258bf78791d1e32552460994d301" translate="yes" xml:space="preserve">
          <source>like(container)</source>
          <target state="translated">como(contenedor)</target>
        </trans-unit>
        <trans-unit id="3f09da4d2380962353d739687aa1281238093256" translate="yes" xml:space="preserve">
          <source>loads in all assertions, comparators and mocking methods into the module in which a</source>
          <target state="translated">carga en todas las aseveraciones,comparadores y métodos de burla en el módulo en el que un</target>
        </trans-unit>
        <trans-unit id="0e8a2937fa672d40a9db2757f60496dafc74e4f5" translate="yes" xml:space="preserve">
          <source>matches(pattern)</source>
          <target state="translated">cerillas (patrón)</target>
        </trans-unit>
        <trans-unit id="9d326ec502407e4598d3dbb7f9cdbd973cedf627" translate="yes" xml:space="preserve">
          <source>method
cannot be itself stubbed.</source>
          <target state="translated">el método no puede ser rechazado por sí mismo.</target>
        </trans-unit>
        <trans-unit id="34526bf7930b131b3a92b851a6057b2be66c6c86" translate="yes" xml:space="preserve">
          <source>method which can be called in one of two ways.</source>
          <target state="translated">que puede ser llamado de una de dos maneras.</target>
        </trans-unit>
        <trans-unit id="5415f0a81e4e89ad66c37c2a10091e3ce70ac699" translate="yes" xml:space="preserve">
          <source>method, which can also act in place of</source>
          <target state="translated">que también puede actuar en lugar de</target>
        </trans-unit>
        <trans-unit id="76c6e80c3e6dbed9a6651f1a30f28feb17b3b9b5" translate="yes" xml:space="preserve">
          <source>method-wrapper</source>
          <target state="translated">método de envoltura</target>
        </trans-unit>
        <trans-unit id="9cbfc6ac1fe1587e64d521c0c739aa8d0b0ce3b5" translate="yes" xml:space="preserve">
          <source>methods handle</source>
          <target state="translated">los métodos manejan</target>
        </trans-unit>
        <trans-unit id="193d687f7f306a8b7675b59e708c30decc68021d" translate="yes" xml:space="preserve">
          <source>methods to lower-case with undersores. For example,</source>
          <target state="translated">métodos para reducir las minúsculas con las minúsculas.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="475e81e79c7880f9b5caa35bec50279c459ad2f9" translate="yes" xml:space="preserve">
          <source>mock</source>
          <target state="translated">simulacro de</target>
        </trans-unit>
        <trans-unit id="060df90d2c4b25e721b155c51bd1a87dbc20f556" translate="yes" xml:space="preserve">
          <source>modifier assumes an equals test for instances and a logical or of</source>
          <target state="translated">El modificador asume una prueba de igualdad para los casos y una lógica o de</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">nombre</target>
        </trans-unit>
        <trans-unit id="bc1e693db6446c2372a294574d7406564c14fdf0" translate="yes" xml:space="preserve">
          <source>not_of(comparator)</source>
          <target state="translated">no_de(comparador)</target>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">obj</target>
        </trans-unit>
        <trans-unit id="1e2cbd16dfebc2e7ea0f4e531203b0f23e72f9e8" translate="yes" xml:space="preserve">
          <source>obj.get</source>
          <target state="translated">consigue</target>
        </trans-unit>
        <trans-unit id="5e8295157b594cd953929ad9f4810c6325ad21d6" translate="yes" xml:space="preserve">
          <source>object by using the</source>
          <target state="translated">objeto utilizando el</target>
        </trans-unit>
        <trans-unit id="5e7d5c466e7b7e9e07657bafe59eb32651f80c48" translate="yes" xml:space="preserve">
          <source>object that can be used for any purpose. If called with arguments, it behaves like</source>
          <target state="translated">objeto que puede ser usado para cualquier propósito.Si es llamado con argumentos,se comporta como</target>
        </trans-unit>
        <trans-unit id="d681dee84e20b66ddde2b4b14ddc71cec95bb4a8" translate="yes" xml:space="preserve">
          <source>object which can then be used to modify the expectation. Without any modifiers, an expectation will expect at least one call with any arguments and return None.</source>
          <target state="translated">objeto que puede ser utilizado para modificar la expectativa.Sin ningún modificador,una expectativa esperará al menos una llamada con cualquier argumento y devolverá ninguna.</target>
        </trans-unit>
        <trans-unit id="b3292df5d10c68ddcca645d57afd1ded1f0f717b" translate="yes" xml:space="preserve">
          <source>objects as arguments by mocking the</source>
          <target state="translated">objetos como argumentos burlándose de la</target>
        </trans-unit>
        <trans-unit id="1fd04b3b6fcf73f165440ff2d417bfb2ea268413" translate="yes" xml:space="preserve">
          <source>objects implement</source>
          <target state="translated">los objetos implementan</target>
        </trans-unit>
        <trans-unit id="b2c106126eb50a57809c21ea5585b3875eef5643" translate="yes" xml:space="preserve">
          <source>objects, because of the</source>
          <target state="translated">objetos,debido a la</target>
        </trans-unit>
        <trans-unit id="f5476271bdfb30d07631a2c7fad3be3d40a415b3" translate="yes" xml:space="preserve">
          <source>on every expectation when a new expectation is defined. The expectation will be immediately closed if it has already been satisfied when a new expectation is created.</source>
          <target state="translated">en cada expectativa cuando se define una nueva expectativa.La expectativa se cerrará inmediatamente si ya ha sido satisfecha cuando se cree una nueva expectativa.</target>
        </trans-unit>
        <trans-unit id="b55b8143f8ba405386a314e762e1cf75efae3969" translate="yes" xml:space="preserve">
          <source>on the object, typically because it&amp;rsquo;s a C extension. A good example of this is the</source>
          <target state="translated">en el objeto, normalmente porque es una extensi&amp;oacute;n de C. Un buen ejemplo de esto es el</target>
        </trans-unit>
        <trans-unit id="1863835675e3970e15e5c22411ef60824eb55591" translate="yes" xml:space="preserve">
          <source>once</source>
          <target state="translated">una vez</target>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">abrir</target>
        </trans-unit>
        <trans-unit id="999a3419d9959d3c39b11dcc67d79c7888b4b765" translate="yes" xml:space="preserve">
          <source>os</source>
          <target state="translated">os</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">pip</target>
        </trans-unit>
        <trans-unit id="324d2c4f8c42abc418bde82c7fea830b4d70309c" translate="yes" xml:space="preserve">
          <source>places</source>
          <target state="translated">lugares</target>
        </trans-unit>
        <trans-unit id="bfdba57c2ea525d68cd766e6ddc87ae634e2c0ff" translate="yes" xml:space="preserve">
          <source>posix</source>
          <target state="translated">posix</target>
        </trans-unit>
        <trans-unit id="7022f3a6cd81e46ec69b1675f3bc3e18a72264a1" translate="yes" xml:space="preserve">
          <source>processes the expectations and determines when to process arguments through an expectation.</source>
          <target state="translated">procesa las expectativas y determina cuándo procesar los argumentos a través de una expectativa.</target>
        </trans-unit>
        <trans-unit id="d0449e86077449843777d1958aff83cf086dbcba" translate="yes" xml:space="preserve">
          <source>properties</source>
          <target state="translated">propiedades</target>
        </trans-unit>
        <trans-unit id="29b86efb7571ffaf75d4f293ca0c9b37b0f02193" translate="yes" xml:space="preserve">
          <source>python, mocking, testing, unittest, unittest2</source>
          <target state="translated">pitón,burla,prueba,prueba de unidad,prueba de unidad2</target>
        </trans-unit>
        <trans-unit id="657db1e0dffa000c9cdad10f4bed2f8bfb0b5a09" translate="yes" xml:space="preserve">
          <source>raise</source>
          <target state="translated">aumentar</target>
        </trans-unit>
        <trans-unit id="c490c8219d107f6d4f34c41c674ab57153662afb" translate="yes" xml:space="preserve">
          <source>raises</source>
          <target state="translated">plantea</target>
        </trans-unit>
        <trans-unit id="505550731b8f00205fd2e94c4c976bf319a3cc78" translate="yes" xml:space="preserve">
          <source>raises(exception)</source>
          <target state="translated">plantea(excepción)</target>
        </trans-unit>
        <trans-unit id="c387c982a132d05cbd5f88840aef2c8157740049" translate="yes" xml:space="preserve">
          <source>re</source>
          <target state="translated">re</target>
        </trans-unit>
        <trans-unit id="414e681ebabcd2f23de1f32468992b9c81c5f909" translate="yes" xml:space="preserve">
          <source>returns</source>
          <target state="translated">retornos</target>
        </trans-unit>
        <trans-unit id="bbfcf487b7090c701dc2c5435ba1709547e2dc0d" translate="yes" xml:space="preserve">
          <source>returns(object)</source>
          <target state="translated">retornos(objeto)</target>
        </trans-unit>
        <trans-unit id="bbe40600eb760da3425fdce3a0511f835e863a72" translate="yes" xml:space="preserve">
          <source>rules apply.</source>
          <target state="translated">se aplican las reglas.</target>
        </trans-unit>
        <trans-unit id="023b2e565108c33ac6ca8f009d90477758e199ef" translate="yes" xml:space="preserve">
          <source>self.</source>
          <target state="translated">...a sí mismo.</target>
        </trans-unit>
        <trans-unit id="ab7a284a17ead6b030395cb2f065e68057159418" translate="yes" xml:space="preserve">
          <source>setUp</source>
          <target state="translated">setUp</target>
        </trans-unit>
        <trans-unit id="a55d5971f3e28694c382626a5e5c289df3746dd0" translate="yes" xml:space="preserve">
          <source>setattr</source>
          <target state="translated">setattr</target>
        </trans-unit>
        <trans-unit id="554ada990abfa591d5d06184568a94f65420b2e6" translate="yes" xml:space="preserve">
          <source>side_effect</source>
          <target state="translated">efecto_colateral</target>
        </trans-unit>
        <trans-unit id="4dcc2c52e14bc5b4cbab314c5a8328f212521510" translate="yes" xml:space="preserve">
          <source>side_effect(callable, *args, **kwargs)</source>
          <target state="translated">side_effect(callable,*args,**kwargs)</target>
        </trans-unit>
        <trans-unit id="18f00ef5402aff72dc4257e5f794fc932c527653" translate="yes" xml:space="preserve">
          <source>spy_return(callable)</source>
          <target state="translated">spy_return(callable)</target>
        </trans-unit>
        <trans-unit id="58801e3391955d7ee7d51ba293351c3176f5b682" translate="yes" xml:space="preserve">
          <source>stub</source>
          <target state="translated">talón</target>
        </trans-unit>
        <trans-unit id="ac7413f67ec8bbb31961b3b3a12cecb806d43d67" translate="yes" xml:space="preserve">
          <source>subclass is declared. This is done to cut down on the verbosity of typing</source>
          <target state="translated">se declara la subclase.Esto se hace para reducir la verborrea de la mecanografía</target>
        </trans-unit>
        <trans-unit id="574bc4f3593073849fdd9ed8e05959e704a5d6e5" translate="yes" xml:space="preserve">
          <source>teardown</source>
          <target state="translated">desmontaje</target>
        </trans-unit>
        <trans-unit id="84fdaeff0f2751decdf11a984c8db63012b65fb3" translate="yes" xml:space="preserve">
          <source>test for types. All rules that apply to positional arguments also apply to keyword arguments.</source>
          <target state="translated">prueba de los tipos.Todas las reglas que se aplican a los argumentos posicionales también se aplican a los argumentos de las palabras clave.</target>
        </trans-unit>
        <trans-unit id="a96f105190446dc95c077dd733e7e255286c75d5" translate="yes" xml:space="preserve">
          <source>times(1)</source>
          <target state="translated">veces(1)</target>
        </trans-unit>
        <trans-unit id="ceaa3eab360fb303c6f1d714a7ca088e4dc430e1" translate="yes" xml:space="preserve">
          <source>times(int)</source>
          <target state="translated">veces(int)</target>
        </trans-unit>
        <trans-unit id="f66fe49bb9161ca2a1dd5bbb8ae7f1c36d0264e2" translate="yes" xml:space="preserve">
          <source>to force it to respond to all matching calls throughout the test.</source>
          <target state="translated">para forzarlo a responder a todas las llamadas coincidentes a lo largo de la prueba.</target>
        </trans-unit>
        <trans-unit id="28344d9ed34a303ae3e123eb09c4693c691008ca" translate="yes" xml:space="preserve">
          <source>to inject code just before the spied-on function is executed, however the return value will be ignored. This behavior is especially useful when testing race conditions. Additionally, there are a few types of stubs which are not (currently) supported by spies:</source>
          <target state="translated">para inyectar el código justo antes de que se ejecute la función de espionaje,sin embargo el valor de retorno será ignorado.Este comportamiento es especialmente útil cuando se prueban las condiciones de la carrera.Además,hay algunos tipos de talones que (actualmente)no son apoyados por los espías:</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">escriba</target>
        </trans-unit>
        <trans-unit id="5dfc5178277dcc74bbd7420fce338518c26a8ed5" translate="yes" xml:space="preserve">
          <source>unbound methods</source>
          <target state="translated">métodos no ligados</target>
        </trans-unit>
        <trans-unit id="94e060874450b5ea724bb6ce5ca7be4f6a73416b" translate="yes" xml:space="preserve">
          <source>unittest</source>
          <target state="translated">unittest</target>
        </trans-unit>
        <trans-unit id="930830fc5791b65eb398b914085669fdc221f994" translate="yes" xml:space="preserve">
          <source>unittest.TestCase</source>
          <target state="translated">unittest.TestCase</target>
        </trans-unit>
        <trans-unit id="4e72a99120d1a65313ecc32601cac81304baee76" translate="yes" xml:space="preserve">
          <source>unittest2</source>
          <target state="translated">unittest2</target>
        </trans-unit>
        <trans-unit id="c2d3f28ca9e8d6733360c4d9d00e81f3d6547632" translate="yes" xml:space="preserve">
          <source>var(name)</source>
          <target state="translated">var(nombre)</target>
        </trans-unit>
        <trans-unit id="39468015be923cf1117a0b3bff4a5ca6ffe5885b" translate="yes" xml:space="preserve">
          <source>var(name).value</source>
          <target state="translated">var(nombre).valor</target>
        </trans-unit>
        <trans-unit id="116de48f28b9405808ce7b6451393a9a666220ac" translate="yes" xml:space="preserve">
          <source>will be raised and you can use the verbose reference instead.</source>
          <target state="translated">y puedes usar la referencia verbal en su lugar.</target>
        </trans-unit>
        <trans-unit id="9def75749c22ed56efbf9c23eb83088d8fbd2b0d" translate="yes" xml:space="preserve">
          <source>will return a</source>
          <target state="translated">devolverá un</target>
        </trans-unit>
        <trans-unit id="bc2292dd697a7c405e4abbcb41740d9fc5dd01ce" translate="yes" xml:space="preserve">
          <source>with a</source>
          <target state="translated">con un</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
