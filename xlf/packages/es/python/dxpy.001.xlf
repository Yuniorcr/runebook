<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/dxpy/">
    <body>
      <group id="dxpy">
        <trans-unit id="b0596762c145e066c6b51d6b767aa76380933b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dxpy.compat&lt;/code&gt; has some simple shims that mirror Python 3 builtins and redirect them to Python 2.7 equivalents when on 2.7. Most critically, &lt;code&gt;from dxpy.compat import str&lt;/code&gt; will import the &lt;code&gt;unicode&lt;/code&gt; builtin on 2.7 and the &lt;code&gt;str&lt;/code&gt; builtin on python 3. Use &lt;code&gt;str&lt;/code&gt; wherever you would have used &lt;code&gt;unicode&lt;/code&gt;. To convert unicode strings to bytes, use &lt;code&gt;.encode('utf-8')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dxpy.compat&lt;/code&gt; tiene algunos ajustes simples que reflejan las incorporaciones de Python 3 y las redirigen a los equivalentes de Python 2.7 cuando est&amp;aacute;n en 2.7. Lo m&amp;aacute;s cr&amp;iacute;tico es que &lt;code&gt;from dxpy.compat import str&lt;/code&gt; importar&amp;aacute; el &lt;code&gt;unicode&lt;/code&gt; incorporado en 2.7 y el &lt;code&gt;str&lt;/code&gt; incorporado en python 3. Use &lt;code&gt;str&lt;/code&gt; donde quiera que haya usado &lt;code&gt;unicode&lt;/code&gt; . Para convertir cadenas Unicode en bytes, use &lt;code&gt;.encode('utf-8')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="674463a63b833f2ee17f1bbb198b28a2cbb90be6" translate="yes" xml:space="preserve">
          <source>API Documentation</source>
          <target state="translated">Documentación de la API</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Edificio</target>
        </trans-unit>
        <trans-unit id="b6114911729017efbd5b9af9dce07a4c23db36c9" translate="yes" xml:space="preserve">
          <source>Code going into the Python codebase should be written in Python 3.5 style, and should be compatible with Python 2.7.  Python 2.7 support will end on March 1, 2021.</source>
          <target state="translated">El código que va a la base de código Python debe ser escrito en el estilo Python 3.5,y debe ser compatible con Python 2.7.El soporte de Python 2.7 terminará el 1 de marzo de 2021.</target>
        </trans-unit>
        <trans-unit id="ca133fd5c5e719911f84f8857fafa733baf2d362" translate="yes" xml:space="preserve">
          <source>Conform to &lt;a href=&quot;http://legacy.python.org/dev/peps/pep-0008/&quot;&gt;PEP-8&lt;/a&gt;.</source>
          <target state="translated">Cumple con &lt;a href=&quot;http://legacy.python.org/dev/peps/pep-0008/&quot;&gt;PEP-8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b48db00dda4f9932d6db2c22f755daa52ca0f246" translate="yes" xml:space="preserve">
          <source>Convention for Python scripts that are also modules</source>
          <target state="translated">Convención para las escrituras Python que también son módulos</target>
        </trans-unit>
        <trans-unit id="ec1fb0e8927ceeec4b0942eccd8a0408b783ccb8" translate="yes" xml:space="preserve">
          <source>DNAnexus Platform API bindings for Python</source>
          <target state="translated">DNAnexus Platform API bindings for Python</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Depuración</target>
        </trans-unit>
        <trans-unit id="cd8da1618ca623fabd2ab45706d2e10471d5cf77" translate="yes" xml:space="preserve">
          <source>Do not add module-level attributes into the API unless you are absolutely certain they will remain constants. For
example, do not declare an attribute &lt;code&gt;dxpy.foo&lt;/code&gt; (&lt;code&gt;dxpy._foo&lt;/code&gt; is OK), or any other non-private variable in the
global scope of any module. This is because unless the value is a constant, it may need to be updated by an
initialization method, which may need to run lazily to avoid side effects at module load time. Instead, use
accessor methods that can perform the updates at call time:</source>
          <target state="translated">No agregue atributos de nivel de m&amp;oacute;dulo en la API a menos que est&amp;eacute; absolutamente seguro de que permanecer&amp;aacute;n constantes. Por ejemplo, no declare un atributo &lt;code&gt;dxpy.foo&lt;/code&gt; ( &lt;code&gt;dxpy._foo&lt;/code&gt; est&amp;aacute; bien), o cualquier otra variable no privada en el alcance global de cualquier m&amp;oacute;dulo. Esto se debe a que, a menos que el valor sea una constante, es posible que deba actualizarse mediante un m&amp;eacute;todo de inicializaci&amp;oacute;n, que puede que deba ejecutarse de forma perezosa para evitar efectos secundarios en el momento de la carga del m&amp;oacute;dulo. En su lugar, use m&amp;eacute;todos de acceso que puedan realizar las actualizaciones en el momento de la llamada:</target>
        </trans-unit>
        <trans-unit id="48bad454c6ffe47f4ecda7d71d7322e78baada18" translate="yes" xml:space="preserve">
          <source>Do not introduce module import-time side effects.</source>
          <target state="translated">No introduzca efectos secundarios de importación del módulo.</target>
        </trans-unit>
        <trans-unit id="8a47ccc86c9ce396d0477a87c93be5004af8c01a" translate="yes" xml:space="preserve">
          <source>Document your code in a format usable by &lt;a href=&quot;http://sphinx-doc.org/ext/autodoc.html&quot;&gt;Sphinx Autodoc&lt;/a&gt;.</source>
          <target state="translated">Documente su c&amp;oacute;digo en un formato que pueda utilizar &lt;a href=&quot;http://sphinx-doc.org/ext/autodoc.html&quot;&gt;Sphinx Autodoc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Ejemplo:</target>
        </trans-unit>
        <trans-unit id="9574bdf222d001a672bb0cb713075c8aa7e9abe4" translate="yes" xml:space="preserve">
          <source>From the dx-toolkit root directory:</source>
          <target state="translated">Desde el directorio raíz del dx-toolkit:</target>
        </trans-unit>
        <trans-unit id="df6dc1c127d48e12ba33f963b4a97a4123c19c67" translate="yes" xml:space="preserve">
          <source>Google Python style guide</source>
          <target state="translated">Guía de estilo de Google Python</target>
        </trans-unit>
        <trans-unit id="676aae763b35679dafb83babeb3b0af1ee3d90cf" translate="yes" xml:space="preserve">
          <source>Include in the script a top-level function called &lt;code&gt;main()&lt;/code&gt;, which should be the entry point processor, and
conclude the script with the following stanza:</source>
          <target state="translated">Incluya en el script una funci&amp;oacute;n de nivel superior llamada &lt;code&gt;main()&lt;/code&gt; , que deber&amp;iacute;a ser el procesador de punto de entrada, y concluya el script con la siguiente estrofa:</target>
        </trans-unit>
        <trans-unit id="9bbb422884602fb824c52d35b9991df366deb185" translate="yes" xml:space="preserve">
          <source>Install the script into &lt;code&gt;src/python/dxpy/scripts&lt;/code&gt; with a name like &lt;code&gt;dx_useful_script.py&lt;/code&gt;. This will allow
importing with &lt;code&gt;import dxpy.scripts.dx_useful_script&lt;/code&gt;.</source>
          <target state="translated">Instale el script en &lt;code&gt;src/python/dxpy/scripts&lt;/code&gt; con un nombre como &lt;code&gt;dx_useful_script.py&lt;/code&gt; . Esto permitir&amp;aacute; importar con &lt;code&gt;import dxpy.scripts.dx_useful_script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6847eb5db3cd65637963e6462ef62d5860408a52" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;&amp;lt;iterator&amp;gt;.next()&lt;/code&gt;, use &lt;code&gt;next(&amp;lt;iterator&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">En lugar de &lt;code&gt;&amp;lt;iterator&amp;gt;.next()&lt;/code&gt; , use &lt;code&gt;next(&amp;lt;iterator&amp;gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d87395bd24dfae71341bb161aec261e609af2716" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;.iteritems()&lt;/code&gt;, use &lt;code&gt;.items()&lt;/code&gt;. If this is a performance concern on 2.7, introduce a shim in compat.py.</source>
          <target state="translated">En lugar de &lt;code&gt;.iteritems()&lt;/code&gt; , use &lt;code&gt;.items()&lt;/code&gt; . Si esto es un problema de rendimiento en 2.7, introduzca una correcci&amp;oacute;n en compat.py.</target>
        </trans-unit>
        <trans-unit id="d950a426d096d142582ebde191536d4f546f0d1e" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;StringIO.StringIO&lt;/code&gt;, use &lt;code&gt;from dxpy.compat import BytesIO&lt;/code&gt; (which is StringIO on 2.7).</source>
          <target state="translated">En lugar de &lt;code&gt;StringIO.StringIO&lt;/code&gt; , use &lt;code&gt;from dxpy.compat import BytesIO&lt;/code&gt; (que es StringIO en 2.7).</target>
        </trans-unit>
        <trans-unit id="63058301542c8898593ba52b2666bebe53887e8d" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;raw_input&lt;/code&gt;, use &lt;code&gt;from dxpy.compat import input&lt;/code&gt;.</source>
          <target state="translated">En lugar de &lt;code&gt;raw_input&lt;/code&gt; , utilice la &lt;code&gt;from dxpy.compat import input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9767db1af382aebf46c922fd27a62bd8e9cd4af8" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;sort(x, cmp=lambda x, y: ...)&lt;/code&gt;, use &lt;code&gt;x=sorted(x, key=lambda x: ...)&lt;/code&gt;.</source>
          <target state="translated">En lugar de &lt;code&gt;sort(x, cmp=lambda x, y: ...)&lt;/code&gt; , use &lt;code&gt;x=sorted(x, key=lambda x: ...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6fd14051b354da983ecb8ff41200315d2637cb8" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;x.has_key(y)&lt;/code&gt;, use &lt;code&gt;y in x&lt;/code&gt;.</source>
          <target state="translated">En lugar de &lt;code&gt;x.has_key(y)&lt;/code&gt; , use &lt;code&gt;y in x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4da9a8dd0a964c7b4b5b9579db1799552bca9008" translate="yes" xml:space="preserve">
          <source>Note: the install script will replace underscores in the name of your module with dashes in the name of the launcher
script.</source>
          <target state="translated">Nota:el script de instalación reemplazará los guiones bajos en el nombre de su módulo con guiones en el nombre del script de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="bfead3e178179210460f8bdeacc582f0d7e87b2c" translate="yes" xml:space="preserve">
          <source>Other useful resources:</source>
          <target state="translated">Otros recursos útiles:</target>
        </trans-unit>
        <trans-unit id="3f9c4cc3416e160b70e278e7d65e895425e00b6c" translate="yes" xml:space="preserve">
          <source>Python coding style</source>
          <target state="translated">Estilo de codificación pitón</target>
        </trans-unit>
        <trans-unit id="a4a85c998ce2cd9c480982b861989d3ec8a40877" translate="yes" xml:space="preserve">
          <source>Python version compatibility</source>
          <target state="translated">Versión de compatibilidad con Python</target>
        </trans-unit>
        <trans-unit id="cb308f901972e30a32b76dd5739b0133d3919e62" translate="yes" xml:space="preserve">
          <source>Relax other PEP-8 requirements at your discretion if it simplifies code or is needed to follow conventions
established elsewhere at DNAnexus.</source>
          <target state="translated">Relaje otros requisitos del PEP-8 a su discreción si simplifica el código o es necesario para seguir las convenciones establecidas en otros lugares en DNAnexus.</target>
        </trans-unit>
        <trans-unit id="50f12db3431b57bc4f594a7b08e6b221d7b2c023" translate="yes" xml:space="preserve">
          <source>Relax the line length requirement to 120 characters per line, where you judge readability not to be compromised.</source>
          <target state="translated">Relaja el requisito de longitud de línea a 120 caracteres por línea,donde juzgas que la legibilidad no se verá comprometida.</target>
        </trans-unit>
        <trans-unit id="61d2d0023852329564fec4660e5224aaefa2cb92" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;pylint -E&lt;/code&gt; on your code before checking it in.</source>
          <target state="translated">Ejecute &lt;code&gt;pylint -E&lt;/code&gt; en su c&amp;oacute;digo antes de registrarlo.</target>
        </trans-unit>
        <trans-unit id="b5fa648e852202d309e677a3f706c74539cac098" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;_DX_DEBUG&lt;/code&gt; environment variable to a positive integer before
running a dxpy-based program (such as &lt;code&gt;dx&lt;/code&gt;) to display the input and
output of each API call. Supported values are 1, 2, and 3 with
increasing numbers producing successively more verbose output.</source>
          <target state="translated">Establezca la variable de entorno &lt;code&gt;_DX_DEBUG&lt;/code&gt; en un entero positivo antes de ejecutar un programa basado en dxpy (como &lt;code&gt;dx&lt;/code&gt; ) para mostrar la entrada y salida de cada llamada a la API. Los valores admitidos son 1, 2 y 3 con n&amp;uacute;meros crecientes que producen una salida sucesivamente m&amp;aacute;s detallada.</target>
        </trans-unit>
        <trans-unit id="cf1a3d86a66060256044dfc0553a7c95fe6f6ce1" translate="yes" xml:space="preserve">
          <source>Some scripts, such as format converters, are useful both as standalone executables and as importable modules.</source>
          <target state="translated">Algunos guiones,como los convertidores de formato,son útiles como ejecutables autónomos y como módulos importables.</target>
        </trans-unit>
        <trans-unit id="85268049c2c2bd779bf476064b4b122d429d0005" translate="yes" xml:space="preserve">
          <source>The Hitchhiker's Guide to Python</source>
          <target state="translated">La Guía del Autoestopista para la Pitón</target>
        </trans-unit>
        <trans-unit id="c8dad01ae3da8eb6b8cba8a0c7cdaea7d5491bcc" translate="yes" xml:space="preserve">
          <source>The dxpy installation process (invoked through &lt;code&gt;setup.py&lt;/code&gt; or with &lt;code&gt;make -C src python&lt;/code&gt; at the top level)
will find the script and install a launcher for it into the executable path automatically. This is done using the
&lt;code&gt;entry_points&lt;/code&gt; facility of setuptools/distribute.</source>
          <target state="translated">El proceso de instalaci&amp;oacute;n de dxpy (invocado a trav&amp;eacute;s de &lt;code&gt;setup.py&lt;/code&gt; o con &lt;code&gt;make -C src python&lt;/code&gt; en el nivel superior) encontrar&amp;aacute; el script e instalar&amp;aacute; un lanzador en la ruta ejecutable autom&amp;aacute;ticamente. Esto se hace usando la funci&amp;oacute;n &lt;code&gt;entry_points&lt;/code&gt; de setuptools / distribuir.</target>
        </trans-unit>
        <trans-unit id="8c7b6149c9a44f75ed34f4d873e4b308b7564f19" translate="yes" xml:space="preserve">
          <source>The next most troublesome gotcha after the bytes/unicode conversions is that many iterables operators return generators in Python 3. For example, &lt;code&gt;map()&lt;/code&gt; returns a generator. This breaks places that expect a list, and requires either explicit casting with &lt;code&gt;list()&lt;/code&gt;, or the use of list comprehensions (usually preferred).</source>
          <target state="translated">El siguiente error m&amp;aacute;s problem&amp;aacute;tico despu&amp;eacute;s de las conversiones bytes / Unicode es que muchos operadores iterables devuelven generadores en Python 3. Por ejemplo, &lt;code&gt;map()&lt;/code&gt; devuelve un generador. Esto rompe los lugares que esperan una lista y requiere una conversi&amp;oacute;n expl&amp;iacute;cita con &lt;code&gt;list()&lt;/code&gt; o el uso de listas por comprensi&amp;oacute;n (generalmente preferidas).</target>
        </trans-unit>
        <trans-unit id="c084f14040f09a58bb728f0ddff6fb5a4cb9a240" translate="yes" xml:space="preserve">
          <source>To facilitate Python 2 compatibility, we have the compat module in &lt;a href=&quot;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&quot;&gt;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&lt;/a&gt;. Also, the following boilerplate should be
inserted into all Python source files:</source>
          <target state="translated">Para facilitar la compatibilidad con Python 2, tenemos el m&amp;oacute;dulo compat en &lt;a href=&quot;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&quot;&gt;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&lt;/a&gt; . Adem&amp;aacute;s, se debe insertar el siguiente texto est&amp;aacute;ndar en todos los archivos fuente de Python:</target>
        </trans-unit>
        <trans-unit id="8e99b2bf51505aca7fa345b17356e08b0244cbf9" translate="yes" xml:space="preserve">
          <source>Typically, when called on the command line, &lt;em&gt;main()&lt;/em&gt; will first parse the command line arguments (sys.argv). However,
when imported as a module, the arguments need to instead be passed as inputs to a function. The following is a
suggestion for how to accommodate both styles simultaneously with just one entry point (&lt;code&gt;main&lt;/code&gt;):</source>
          <target state="translated">Normalmente, cuando se llama en la l&amp;iacute;nea de comando, &lt;em&gt;main ()&lt;/em&gt; primero analizar&amp;aacute; los argumentos de la l&amp;iacute;nea de comando (sys.argv). Sin embargo, cuando se importan como un m&amp;oacute;dulo, los argumentos deben pasarse como entradas a una funci&amp;oacute;n. La siguiente es una sugerencia sobre c&amp;oacute;mo acomodar ambos estilos simult&amp;aacute;neamente con un solo punto de entrada ( &lt;code&gt;main&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f8834549fa3b512635a4cdefe9a5f0cd97e47e4b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;from __future__ import print_function&lt;/code&gt; and use print as a function. Instead of &lt;code&gt;print &amp;gt;&amp;gt;sys.stderr&lt;/code&gt;, write &lt;code&gt;print(..., file=sys.stderr)&lt;/code&gt;.</source>
          <target state="translated">Use &lt;code&gt;from __future__ import print_function&lt;/code&gt; y use print como una funci&amp;oacute;n. En lugar de &lt;code&gt;print &amp;gt;&amp;gt;sys.stderr&lt;/code&gt; , escribe &lt;code&gt;print(..., file=sys.stderr)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adea88259ff3223db98b0ce99c873651a8268bc9" translate="yes" xml:space="preserve">
          <source>We have the following convention for these scripts:</source>
          <target state="translated">Tenemos la siguiente convención para estos guiones:</target>
        </trans-unit>
        <trans-unit id="83da9c16c6603cb8d4311298056ffabe5920de38" translate="yes" xml:space="preserve">
          <source>dxpy is supported on Python 2 (2.7+) and Python 3 (3.5+)</source>
          <target state="translated">dxpy está soportado en Python 2 (2.7+)y Python 3 (3.5+)</target>
        </trans-unit>
        <trans-unit id="086e971b7ec428ac6a5dad1a0b475da4d8fe6c69" translate="yes" xml:space="preserve">
          <source>dxpy: DNAnexus Python API</source>
          <target state="translated">dxpy:DNAnexus Python API</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
