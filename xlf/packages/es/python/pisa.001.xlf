<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://pypi.org/project/pisa/">
    <body>
      <group id="pisa">
        <trans-unit id="3d211cb1740769de59ad4a4055320ed5b10f3d89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PLEASE SWITCH TO THE MORE RECENT VERSION AT:&lt;/strong&gt;&lt;a href=&quot;http://pypi.python.org/pypi/xhtml2pdf&quot;&gt;http://pypi.python.org/pypi/xhtml2pdf&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;PLEASE SWITCH TO THE MORE RECENT VERSION AT:&lt;/strong&gt;&lt;a href=&quot;http://pypi.python.org/pypi/xhtml2pdf&quot;&gt;http://pypi.python.org/pypi/xhtml2pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e06670bc76a32fc4399637f84ef92ea65b5dc06c" translate="yes" xml:space="preserve">
          <source>PDF generator using HTML and CSS</source>
          <target state="translated">Generador de PDF usando HTML y CSS</target>
        </trans-unit>
        <trans-unit id="db9fa947d2da4d0a53581fad5b1d04fadf64d31c" translate="yes" xml:space="preserve">
          <source>pisa is a html2pdf converter using the ReportLab Toolkit,
the HTML5lib and pyPdf. It supports HTML 5 and CSS 2.1 (and some of CSS 3).
It is completely written in pure Python so it is platform independent.
The main benefit of this tool that a user with Web skills like HTML and CSS
is able to generate PDF templates very quickly without learning new
technologies. Easy integration into Python frameworks like CherryPy,
KID Templating, TurboGears, Django, Zope, Plone, Google AppEngine (GAE) etc.
(see &amp;lsquo;demo&amp;rsquo; folder for examples)</source>
          <target state="translated">pisa is a html2pdf converter using the ReportLab Toolkit, the HTML5lib and pyPdf. It supports HTML 5 and CSS 2.1 (and some of CSS 3). It is completely written in pure Python so it is platform independent. The main benefit of this tool that a user with Web skills like HTML and CSS is able to generate PDF templates very quickly without learning new technologies. Easy integration into Python frameworks like CherryPy, KID Templating, TurboGears, Django, Zope, Plone, Google AppEngine (GAE) etc. (see &amp;lsquo;demo&amp;rsquo; folder for examples)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
