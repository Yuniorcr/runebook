<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/ordered-startup-supervisord/">
    <body>
      <group id="ordered-startup-supervisord">
        <trans-unit id="49cb7459e7efc48a0e85feadf0fe0d10416bf495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;startinorder&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;startinorder&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28699d8af59625e581df07408f84ee38eb9200d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;startnextafter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;начатьследующийпосле&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08791930245f47c3d967a442f4ec2dc90c23a525" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;supervisord.d/ping2.conf&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;supervisord.d / ping2.conf&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="e01770b6de6bab4afc5c5d699e870f7c683f32bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;supervisord.d/ping3.conf&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;supervisord.d / ping3.conf&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="095654ebf76047b1a4814276e3fb12b8a6c698a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;supervisord.d/sleep.conf&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;supervisord.d / sleep.conf&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="d53ce001052af2a0866071dabebfe64f4081772b" translate="yes" xml:space="preserve">
          <source>All of the processes started in order.  &lt;strong&gt;ping2&lt;/strong&gt; started after sleep was &lt;em&gt;RUNNING&lt;/em&gt; (influenced by startsecs).  When
sleep respawned it didn&amp;rsquo;t restart the chain, it only goes through it once.</source>
          <target state="translated">Все процессы запустились по порядку. &lt;strong&gt;ping2&lt;/strong&gt; начался после того, как сон был &lt;em&gt;RUNNING&lt;/em&gt; (под влиянием startsecs). Когда сон возродился, он не перезапускал цепочку, она проходит через нее только один раз.</target>
        </trans-unit>
        <trans-unit id="694340f966eff4ce99f11ef66e8c4c468e8f9a08" translate="yes" xml:space="preserve">
          <source>An event listener for supervisord that will start up items in order upon certain states.</source>
          <target state="translated">Слушатель событий для супервайзера,который будет запускать элементы по порядку в определенных состояниях.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Конфигурация</target>
        </trans-unit>
        <trans-unit id="d081aad85fbb5837d13b38bbb4f7e87702d7041a" translate="yes" xml:space="preserve">
          <source>Configuration requires several things.  First you need to configure this software as a event listener:</source>
          <target state="translated">Конфигурация требует нескольких вещей.Во-первых,вам нужно настроить это программное обеспечение как слушатель событий:</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>
        </trans-unit>
        <trans-unit id="73ec10361d1440be1c6a4af907f0bd878f46aa79" translate="yes" xml:space="preserve">
          <source>First &lt;strong&gt;supervisord.conf&lt;/strong&gt;:</source>
          <target state="translated">Первый &lt;strong&gt;supervisord.conf&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">Как это работает</target>
        </trans-unit>
        <trans-unit id="ae59dc94e6b0a55154ee0e318f631b3465cb96fe" translate="yes" xml:space="preserve">
          <source>Next we will look at the jobs in the &lt;strong&gt;supervisord.d&lt;/strong&gt; directory like &lt;strong&gt;supervisord.d/ping.conf&lt;/strong&gt;:</source>
          <target state="translated">Далее мы будем смотреть на работу в &lt;strong&gt;supervisord.d&lt;/strong&gt; каталоге как &lt;strong&gt;supervisord.d / ping.conf&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="c2c52593871e1bf5d680f58305ad05dc215e5bdc" translate="yes" xml:space="preserve">
          <source>Notice how all of the &lt;em&gt;program:&lt;/em&gt; sections have autostart=false.  Finally let&amp;rsquo;s look at the output of running
supervisord:</source>
          <target state="translated">Обратите внимание на то, что все разделы &lt;em&gt;программы:&lt;/em&gt; имеют autostart = false. Наконец, давайте посмотрим на результат работы супервизора:</target>
        </trans-unit>
        <trans-unit id="355c15d3884285cbe9de6e8c0623457a61fdc6ca" translate="yes" xml:space="preserve">
          <source>The Problem</source>
          <target state="translated">Проблема</target>
        </trans-unit>
        <trans-unit id="f486426c923ca70ed6a7b2e0cff942f32d2aedee" translate="yes" xml:space="preserve">
          <source>The following is an example of a supervisor configuration that starts one item after the next in priority order.
The order will be ping, sleep, ping2, and ping3.  The ping jobs are configured to wait till they have exited before
the next job is started (this is commonly used for initialization scripts that need to complete before continuing).</source>
          <target state="translated">Ниже приведен пример конфигурации супервизора,который в порядке приоритета запускает один элемент за другим.Порядок будет ping,sleep,ping2 и ping3.Задания ping настраиваются на ожидание выхода до того,как будет запущено следующее задание (это обычно используется для сценариев инициализации,которые должны быть завершены перед продолжением).</target>
        </trans-unit>
        <trans-unit id="7eca36217fea42056d73cda09b6f949072c66964" translate="yes" xml:space="preserve">
          <source>The problem can be seen in &lt;a href=&quot;https://github.com/Supervisor/supervisor/issues/122&quot;&gt;supervisor bug 122&lt;/a&gt;.  The priority order in supervisor does determine startup order, but
when &lt;strong&gt;autostart=true&lt;/strong&gt; supervisor doesn&amp;rsquo;t wait for the previous process to be RUNNING in order to continue.  What is
even harder is having initialization scripts that need to exit before continuing.  This software is meant to make
this one use case easier.</source>
          <target state="translated">Проблема может быть замечена в &lt;a href=&quot;https://github.com/Supervisor/supervisor/issues/122&quot;&gt;ошибке супервизора 122&lt;/a&gt; . Порядок приоритета в супервизоре действительно определяет порядок запуска, но когда &lt;strong&gt;autostart = true,&lt;/strong&gt; супервизор не ждет, пока предыдущий процесс ЗАПУСКАЕТСЯ, чтобы продолжить. Что еще сложнее, так это иметь сценарии инициализации, которые необходимо завершить, прежде чем продолжить. Это программное обеспечение призвано упростить этот единственный вариант использования.</target>
        </trans-unit>
        <trans-unit id="ba4fb057bf52024c2c0d2124b673b0eda3472b27" translate="yes" xml:space="preserve">
          <source>There are 2 additional configurations that can be put in a &lt;em&gt;[program:&lt;/em&gt; section.  These are:</source>
          <target state="translated">Есть 2 дополнительные конфигурации, которые можно поместить в раздел &lt;em&gt;[program:. &lt;/em&gt;Это:</target>
        </trans-unit>
        <trans-unit id="952b8f3c177b8fe413cb246fbfc7bd5633491d2a" translate="yes" xml:space="preserve">
          <source>This does not solve every situation.  If what you need is everything starting up one by one, then this will likely solve
your issue.  If you need to mix and match which starts in parallel and which in serial (dependencies) this is probably
not what you want.</source>
          <target state="translated">Это не решает каждую ситуацию.Если все,что вам нужно,начинается одно за другим,то это,скорее всего,решит вашу проблему.Если вам нужно смешивать и сопоставлять,что начинается параллельно,а что-последовательно (зависимости),то это,скорее всего,не то,что вам нужно.</target>
        </trans-unit>
        <trans-unit id="bf76ac1ddab9bb7b165370582c15a1651639ae29" translate="yes" xml:space="preserve">
          <source>This does not start groups.  It can start programs that are part of a group, but it won&amp;rsquo;t directly start a group.</source>
          <target state="translated">Это не запускает группы. Он может запускать программы, которые являются частью группы, но не запускает группу напрямую.</target>
        </trans-unit>
        <trans-unit id="ada9a6bdc69842285f9a43a3806091c02aa67b08" translate="yes" xml:space="preserve">
          <source>This is an event listener for supervisor.  This means it is run by supervisor on startup and supervisor will send it
messages whenever a program reaches a particular process state.  When configured it will wait till a supervisor
subprocess get&amp;rsquo;s to the configured state, then starts the next process.  The next process is determined by priority.</source>
          <target state="translated">Это прослушиватель событий для супервизора. Это означает, что он запускается супервизором при запуске, и супервизор будет отправлять ему сообщения всякий раз, когда программа достигает определенного состояния процесса. При настройке он будет ждать, пока подпроцесс супервизора перейдет в настроенное состояние, а затем запустит следующий процесс. Следующий процесс определяется приоритетом.</target>
        </trans-unit>
        <trans-unit id="c27fb872e01147dc9851e7003482189c27b8656d" translate="yes" xml:space="preserve">
          <source>This is optional and is defaulted to &lt;em&gt;RUNNING&lt;/em&gt;.  If you want the process to exit before continuing then set
this to &lt;em&gt;EXITED&lt;/em&gt; (this is useful for initialization scripts that have to finish before something else starts).
This is case insensitive.</source>
          <target state="translated">Это необязательно, по умолчанию - &lt;em&gt;РАБОТАЕТ&lt;/em&gt; . Если вы хотите, чтобы процесс &lt;em&gt;завершился&lt;/em&gt; перед продолжением, установите для него значение &lt;em&gt;EXITED&lt;/em&gt; (это полезно для сценариев инициализации, которые должны завершиться до того, как начнется что-то еще). Это нечувствительно к регистру.</target>
        </trans-unit>
        <trans-unit id="50d4f7ab512aa0d2b0bc2e5d618060c3681d6053" translate="yes" xml:space="preserve">
          <source>This is probably the only thing you want to autostart.  It needs xml rpc api, so don&amp;rsquo;t forget to configure that.  A
full example is shown later.</source>
          <target state="translated">Это, наверное, единственное, что нужно для автозапуска. Ему нужен xml rpc api, поэтому не забудьте его настроить. Полный пример показан позже.</target>
        </trans-unit>
        <trans-unit id="310c7ed906ccd2f568588a21ba16099bb871146f" translate="yes" xml:space="preserve">
          <source>This must be set to &lt;em&gt;true&lt;/em&gt; in order to have the next process in the line to be started after this one.</source>
          <target state="translated">Это должно быть установлено в &lt;em&gt;true&lt;/em&gt; , чтобы следующий процесс в строке запускался после этого.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
