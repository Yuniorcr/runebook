<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/cterm/">
    <body>
      <group id="cterm">
        <trans-unit id="b6faedcb37879700e2ab299f973aa02ac26a5433" translate="yes" xml:space="preserve">
          <source>ClusterTerminal (&lt;code&gt;cterm&lt;/code&gt;) forwards all keystrokes from a master window to multiple slave windows. Use &lt;code&gt;cterm&lt;/code&gt; as a method for performing ad hoc tasks, not as a substitute for automation frameworks.</source>
          <target state="translated">ClusterTerminal ( &lt;code&gt;cterm&lt;/code&gt; ) пересылает все нажатия клавиш из главного окна в несколько подчиненных окон. Используйте &lt;code&gt;cterm&lt;/code&gt; как метод для выполнения специальных задач, а не как замену фреймворкам автоматизации.</target>
        </trans-unit>
        <trans-unit id="30c607c1ce495fd43196f51f663bdc43fefef9d4" translate="yes" xml:space="preserve">
          <source>ClusterTerminal uses the built-in Terminal application of macOS.</source>
          <target state="translated">ClusterTerminal использует встроенное терминальное приложение макроса.</target>
        </trans-unit>
        <trans-unit id="0dc0c0ef67d9dd647692f7a466b46ffb3c9375f8" translate="yes" xml:space="preserve">
          <source>Command Arguments</source>
          <target state="translated">Командные аргументы</target>
        </trans-unit>
        <trans-unit id="f67758af6a0222c84dcb530f2be73dc70d6d883a" translate="yes" xml:space="preserve">
          <source>Fork your input to multiple Terminal windows</source>
          <target state="translated">Введите свой вход в несколько окон терминала</target>
        </trans-unit>
        <trans-unit id="a9ef2e8a2c5ec416146780bc7d286a0e6f4496c7" translate="yes" xml:space="preserve">
          <source>If you specify the same argument twice, the last instance is the one used. This is useful since you may want to overwrite part of your alias, but not all of it. For example, the following will use screen 1:</source>
          <target state="translated">Если вы укажите один и тот же аргумент дважды,то последним будет использоваться тот же экземпляр.Это полезно,так как вы можете захотеть переписать часть псевдонима,но не все.Например,в следующем случае будет использоваться экран 1:</target>
        </trans-unit>
        <trans-unit id="747119db8de0928d62663ae0d3e1c8dc60a301b0" translate="yes" xml:space="preserve">
          <source>If you want to pass arguments to the command, include it as part of the command. Beware of character escaping where necessary. For example:</source>
          <target state="translated">Если вы хотите передать аргументы в команду,включите их как часть команды.Остерегайтесь экранирования символов там,где это необходимо.Например:</target>
        </trans-unit>
        <trans-unit id="3f30f837748df9f2bdeeaba74a5d1c6d9ca0ceeb" translate="yes" xml:space="preserve">
          <source>In addition to the master window, the above will create two slaves windows, like so:</source>
          <target state="translated">В дополнение к главному окну,вышеприведенное создаст два рабских окна:</target>
        </trans-unit>
        <trans-unit id="bff456637ee939860b64bedeaccf9b6cbe19f7e0" translate="yes" xml:space="preserve">
          <source>In an alias, you can save your normal settings, like &lt;code&gt;alias cssh=&quot;cterm --screen 2 ssh&quot;&lt;/code&gt; to change the default screen.</source>
          <target state="translated">В псевдониме вы можете сохранить свои обычные настройки, например &lt;code&gt;alias cssh=&quot;cterm --screen 2 ssh&quot;&lt;/code&gt; , чтобы изменить экран по умолчанию.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="a61ce6a70060906cbd15dcb9e18feb85093edae9" translate="yes" xml:space="preserve">
          <source>Item Arguments</source>
          <target state="translated">Пункт Аргументы</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Ограничения</target>
        </trans-unit>
        <trans-unit id="6e468a1b1e5eec2afc0e61c1b7d2d3e2a44a61f0" translate="yes" xml:space="preserve">
          <source>Similar to a command, you can pass per-item arguments (again, beware of character escaping):</source>
          <target state="translated">Подобно команде,вы можете передать аргументы по каждому элементу (опять же,остерегайтесь экранирования символов):</target>
        </trans-unit>
        <trans-unit id="5030c2839fc40ad6fc43c73863850b2570d13f61" translate="yes" xml:space="preserve">
          <source>The most common use case is controlling multiple SSH sessions simultaneously:</source>
          <target state="translated">Наиболее распространенным случаем использования является управление несколькими сеансами SSH одновременно:</target>
        </trans-unit>
        <trans-unit id="6e16cd94ae0fe162acde2b3f786d49c61b1eebfb" translate="yes" xml:space="preserve">
          <source>The window must be completely opaque as the scripting capabilities of Terminal ignore the alpha component.</source>
          <target state="translated">Окно должно быть полностью непрозрачным,так как скриптовые возможности терминала игнорируют альфа-компонент.</target>
        </trans-unit>
        <trans-unit id="09266d16ded24a5e0f511e853aac96b3da5f049f" translate="yes" xml:space="preserve">
          <source>This is mostly just something I wanted to do out of fun; plenty of similar solutions out there, &lt;code&gt;tmux&lt;/code&gt; being a very popular one.</source>
          <target state="translated">В основном это просто то, чем я хотел заниматься ради развлечения; много подобных решений, &lt;code&gt;tmux&lt;/code&gt; очень популярен.</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">Советы</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="bb2d320a679ad84ccd6aa37f7db6302ba55f26bf" translate="yes" xml:space="preserve">
          <source>You could've also used &lt;code&gt;cterm &quot;ssh -l 'some user'&quot; host1 host2&lt;/code&gt; to get the same outcome; I only escaped quotes to demo purposes.</source>
          <target state="translated">Вы также могли использовать &lt;code&gt;cterm &quot;ssh -l 'some user'&quot; host1 host2&lt;/code&gt; , чтобы получить тот же результат; Я избегал цитат только в демонстрационных целях.</target>
        </trans-unit>
        <trans-unit id="5af11b1700e6ce3632959aaa5d242092ebd3c16a" translate="yes" xml:space="preserve">
          <source>You might want to set up an alias for cluster ssh in your &lt;code&gt;~/.bash_profile&lt;/code&gt;. For instance, &lt;code&gt;alias cssh=&quot;cterm ssh&quot;&lt;/code&gt;, and then call it using &lt;code&gt;cssh host1 host2&lt;/code&gt;.</source>
          <target state="translated">Возможно, вы захотите настроить псевдоним для кластера ssh в своем &lt;code&gt;~/.bash_profile&lt;/code&gt; . Например, &lt;code&gt;alias cssh=&quot;cterm ssh&quot;&lt;/code&gt; , а затем вызовите его с помощью &lt;code&gt;cssh host1 host2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1ae76ac855ca66e46bc177be9e9b6ae45ced3a3" translate="yes" xml:space="preserve">
          <source>which will expand to:</source>
          <target state="translated">которая распространится на</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
