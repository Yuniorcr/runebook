<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/ideograph/">
    <body>
      <group id="ideograph">
        <trans-unit id="f951e9f0e304861b37a3584177f3ae3fac30bf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components()&lt;/code&gt; takes a string consisting of a single ideograph and returns a set of components. Note that the set contains components and the components of those components, and so on, down to the most basic of components contained in the cjkvi-ids data set.</source>
          <target state="translated">&lt;code&gt;components()&lt;/code&gt; принимает строку, состоящую из одной идеограммы, и возвращает набор компонентов. Обратите внимание, что набор содержит компоненты и компоненты этих компонентов, и так далее, вплоть до самых основных компонентов, содержащихся в наборе данных cjkvi-ids.</target>
        </trans-unit>
        <trans-unit id="d9be964882a94e05a3310541771e3d3fe2e33a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; takes a string of ideograph components and returns a set of ideographs that include all of those components.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; принимает строку компонентов идеограммы и возвращает набор идеограмм, которые включают все эти компоненты.</target>
        </trans-unit>
        <trans-unit id="2cfd971a0fb1e690969925eda14a7812157aed7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ideograph&lt;/em&gt; consists of a two functions, &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;components()&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;Идеограф&lt;/em&gt; состоит из двух функций: &lt;code&gt;find()&lt;/code&gt; и &lt;code&gt;components()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d6b6863c58960962cd0c73a8496f9c353c64f83f" translate="yes" xml:space="preserve">
          <source>A tool to look up ideographs by their components. At the moment, it only contains Han characters, but it could be expanded to include other ideographic scripts such as Tangut or Sumero-Akkadian Cuneiform.</source>
          <target state="translated">Инструмент для поиска идеографий по их компонентам.В настоящее время он содержит только ханьские символы,но может быть расширен до других идеографических шрифтов,таких как тангутский или шумеро-аккадская клинопись.</target>
        </trans-unit>
        <trans-unit id="aee20835eb757b407fe8ffeb5cce9b708f56d07b" translate="yes" xml:space="preserve">
          <source>Character components are derived from the &lt;a href=&quot;https://github.com/cjkvi/cjkvi-ids&quot;&gt;cjkvi-ids database&lt;/a&gt; (included in this Git repository as a submodule), specifically the &lt;code&gt;ids-cdp.txt&lt;/code&gt; data file. As some components do not currently have a Unicode code point assigned to them, they are given code points in the Private Use Area of Unicode. Note that because of this, some of these characters may be returned by the &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;components()&lt;/code&gt; functions.</source>
          <target state="translated">Компоненты символов &lt;a href=&quot;https://github.com/cjkvi/cjkvi-ids&quot;&gt;берутся из базы данных cjkvi-ids&lt;/a&gt; (включенной в этот репозиторий Git как подмодуль), в частности из &lt;code&gt;ids-cdp.txt&lt;/code&gt; данных ids-cdp.txt . Поскольку некоторым компонентам в настоящее время не назначена кодовая точка Unicode, им присваиваются кодовые точки в области частного использования Unicode. Обратите внимание, что из-за этого некоторые из этих символов могут быть возвращены функциями &lt;code&gt;find()&lt;/code&gt; и &lt;code&gt;components()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3042174ed567a090fa6e65e478e24e03b2d20924" translate="yes" xml:space="preserve">
          <source>Characters in the component string that are not ideographic components are ignored.</source>
          <target state="translated">Символы в строке компонентов,не являющиеся идеографическими компонентами,игнорируются.</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Данные</target>
        </trans-unit>
        <trans-unit id="fbcc69c0fd1d2dada1f58a486d7540c81449f9aa" translate="yes" xml:space="preserve">
          <source>Data is stored in a sqlite3 database, which can be regenerated from cjkvi-ids data by running the &lt;code&gt;generate_data.py&lt;/code&gt; script.</source>
          <target state="translated">Данные хранятся в базе данных sqlite3, которую можно восстановить из данных cjkvi-ids, запустив скрипт &lt;code&gt;generate_data.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="be6a8c385922225375429483cdc09541194ab325" translate="yes" xml:space="preserve">
          <source>It can be called from the command line:</source>
          <target state="translated">Его можно вызвать из командной строки:</target>
        </trans-unit>
        <trans-unit id="bfbb2b604842904f987d9768e1ae89b880db39d3" translate="yes" xml:space="preserve">
          <source>Note that the current implementation is quite strict and relies on visual distinction for components rather than etymological connection: e.g. &quot;人&quot; &amp;ne; &quot;亻&quot;.</source>
          <target state="translated">Обратите внимание, что текущая реализация довольно строгая и полагается на визуальное различие компонентов, а не на этимологическую связь: например, &amp;laquo;人&amp;raquo; &amp;ne; &amp;laquo;亻&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="11141e2ad56bd29ac7c701f8f9d4aa808a94d6bf" translate="yes" xml:space="preserve">
          <source>Tool for finding ideographic (e.g. Han) characters from their components</source>
          <target state="translated">Инструмент для поиска идеографических (например,ханьских)символов из их компонентов</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="214af5f0cce6999498fed75161d1c3f685c02360" translate="yes" xml:space="preserve">
          <source>ideograph</source>
          <target state="translated">идеограф</target>
        </trans-unit>
        <trans-unit id="9361b7cf849e47ee0b472930362cb398eb6d28f2" translate="yes" xml:space="preserve">
          <source>or imported as a Python package:</source>
          <target state="translated">или импортировано как пакет Питона:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
