<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/pymi/">
    <body>
      <group id="pymi">
        <trans-unit id="31e9307e1c6826520faff7b3944061a38d5d83c1" translate="yes" xml:space="preserve">
          <source>$env:PYMI_VCRUNTIME_DYNAMIC_LINKING=&quot;y&quot;</source>
          <target state="translated">$env:PYMI_VCRUNTIME_DYNAMIC_LINKING=&quot;y&quot;</target>
        </trans-unit>
        <trans-unit id="44f50abd8a9a314b7978a69a1bc273f5ab40d08e" translate="yes" xml:space="preserve">
          <source>And here&amp;rsquo;s the same example written using the &lt;em&gt;WMI&lt;/em&gt; module replacement,
which provides a simpler and higher level interface over the &lt;em&gt;mi&lt;/em&gt; API:</source>
          <target state="translated">And here&amp;rsquo;s the same example written using the &lt;em&gt;WMI&lt;/em&gt; module replacement, which provides a simpler and higher level interface over the &lt;em&gt;mi&lt;/em&gt; API:</target>
        </trans-unit>
        <trans-unit id="53008b96e6d252943de7ef582b6108587420e874" translate="yes" xml:space="preserve">
          <source>As an alternative, you can use the MSBuild CLI tool:</source>
          <target state="translated">В качестве альтернативы можно использовать инструмент MSBuild CLI:</target>
        </trans-unit>
        <trans-unit id="f090210e667675e4ff5f442d3343411fdef2dfb9" translate="yes" xml:space="preserve">
          <source>Before doing a debug build, you may wish to clean the build dir.</source>
          <target state="translated">Перед тем,как приступить к отладке,возможно,вы захотите почистить строительную грязь.</target>
        </trans-unit>
        <trans-unit id="bbd80cf7e2ded5efed8f4ee9151ab57a8ab66392" translate="yes" xml:space="preserve">
          <source>Build</source>
          <target state="translated">Построить</target>
        </trans-unit>
        <trans-unit id="21b87c1f399a4e538a55c1e6bfb58e0f9f5b534b" translate="yes" xml:space="preserve">
          <source>By default, we&amp;rsquo;re statically linking the VC runtime. To enable dynamic
linking, set</source>
          <target state="translated">By default, we&amp;rsquo;re statically linking the VC runtime. To enable dynamic linking, set</target>
        </trans-unit>
        <trans-unit id="3dd0a2389fb8196f44be32753ab0e09e738b96b6" translate="yes" xml:space="preserve">
          <source>Custom VS env vars</source>
          <target state="translated">Пользовательские VS env vars</target>
        </trans-unit>
        <trans-unit id="74fd4d330a4de88ffe7e9f01a3252c4877ccfd3e" translate="yes" xml:space="preserve">
          <source>Debug builds</source>
          <target state="translated">Отладочные конструкции</target>
        </trans-unit>
        <trans-unit id="18efe9846a4ec501a699524334f65bf10b53d188" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple example which enumerates all processes and kills any instance of
&amp;ldquo;KillerRabbitOfCaerbannog.exe&amp;rdquo;.</source>
          <target state="translated">Here&amp;rsquo;s a simple example which enumerates all processes and kills any instance of &amp;ldquo;KillerRabbitOfCaerbannog.exe&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="420e10e28fff1f8e2d96a685bb9cdd1dbc015d60" translate="yes" xml:space="preserve">
          <source>It includes also a drop-in replacement for the Python WMI &lt;a href=&quot;#pywmi&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; module,
proving much faster execution times and no dependency on pywin32.</source>
          <target state="translated">It includes also a drop-in replacement for the Python WMI &lt;a href=&quot;#pywmi&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; module, proving much faster execution times and no dependency on pywin32.</target>
        </trans-unit>
        <trans-unit id="9463ff66deb98957b1e7ba8e9adcdceddfde6820" translate="yes" xml:space="preserve">
          <source>MI API &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/hh404805(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/hh404805(v=vs.85).aspx&lt;/a&gt;</source>
          <target state="translated">MI API &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/hh404805(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/hh404805(v=vs.85).aspx&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cd00e1167e309f58cf582ec8ba899afae71f98b" translate="yes" xml:space="preserve">
          <source>MI module basic usage</source>
          <target state="translated">базовое использование модуля MI</target>
        </trans-unit>
        <trans-unit id="a5a07c46fb77f97d24225456aaf167d2c60d6494" translate="yes" xml:space="preserve">
          <source>Make sure to use the Visual Studio toolset that matches the Python version
that you&amp;rsquo;re targetting: &lt;a href=&quot;https://wiki.python.org/moin/WindowsCompilers&quot;&gt;https://wiki.python.org/moin/WindowsCompilers&lt;/a&gt;.</source>
          <target state="translated">Make sure to use the Visual Studio toolset that matches the Python version that you&amp;rsquo;re targetting: &lt;a href=&quot;https://wiki.python.org/moin/WindowsCompilers&quot;&gt;https://wiki.python.org/moin/WindowsCompilers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a4623138b5751ee00e136e9fb1bff4c4e16b1018" translate="yes" xml:space="preserve">
          <source>Note: the target Python version must be present. The Python path can be
customized by setting the corresponding PythonDir* user macro,
e.g. &lt;em&gt;PythonDir_34_x64&lt;/em&gt;. The &lt;em&gt;wheel&lt;/em&gt; and &lt;em&gt;GitPython&lt;/em&gt; packages are required during the build process:</source>
          <target state="translated">Note: the target Python version must be present. The Python path can be customized by setting the corresponding PythonDir* user macro, e.g. &lt;em&gt;PythonDir_34_x64&lt;/em&gt;. The &lt;em&gt;wheel&lt;/em&gt; and &lt;em&gt;GitPython&lt;/em&gt; packages are required during the build process:</target>
        </trans-unit>
        <trans-unit id="135eb051c30ef3dd621cd6b505032766ced727ec" translate="yes" xml:space="preserve">
          <source>Open the provided &lt;em&gt;PyMI.sln&lt;/em&gt; solution in Visual Studio 2015 &lt;a href=&quot;#vs2015&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;, choose
your target Python version / platform and build. Wheel packages are
automatically generated in the &lt;em&gt;dist&lt;/em&gt; folder for release builds.</source>
          <target state="translated">Open the provided &lt;em&gt;PyMI.sln&lt;/em&gt; solution in Visual Studio 2015 &lt;a href=&quot;#vs2015&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;, choose your target Python version / platform and build. Wheel packages are automatically generated in the &lt;em&gt;dist&lt;/em&gt; folder for release builds.</target>
        </trans-unit>
        <trans-unit id="4cbe69590f538fceb06517a0914fb27e7413b0bf" translate="yes" xml:space="preserve">
          <source>Pip is the preferred way to install PyMI. Pre-compiled binary wheels are
available on Pypi &lt;a href=&quot;#pymipypi&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;:</source>
          <target state="translated">Pip is the preferred way to install PyMI. Pre-compiled binary wheels are available on Pypi &lt;a href=&quot;#pymipypi&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="32b54b1402e3c9773037ceb14fdde2f46287acee" translate="yes" xml:space="preserve">
          <source>PyMI on Pypi &lt;a href=&quot;https://pypi.python.org/pypi/PyMI&quot;&gt;https://pypi.python.org/pypi/PyMI&lt;/a&gt;</source>
          <target state="translated">PyMI on Pypi &lt;a href=&quot;https://pypi.python.org/pypi/PyMI&quot;&gt;https://pypi.python.org/pypi/PyMI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17fd4858da7e57d52bc4dc3ce5c8c504aec3ac5b" translate="yes" xml:space="preserve">
          <source>Python WMI module &lt;a href=&quot;https://pypi.python.org/pypi/WMI&quot;&gt;https://pypi.python.org/pypi/WMI&lt;/a&gt;</source>
          <target state="translated">Python WMI module &lt;a href=&quot;https://pypi.python.org/pypi/WMI&quot;&gt;https://pypi.python.org/pypi/WMI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">Ссылки</target>
        </trans-unit>
        <trans-unit id="6223b4b1f1dbc832358f7737121633dc9f139a47" translate="yes" xml:space="preserve">
          <source>The best way to build PyMI for Python 2.7 or 3.4 and below is to use the
Visual Studio solution (described below). This will statically link the
vc140 runtime, which is required by PyMI.</source>
          <target state="translated">Лучший способ собрать PyMI для Python 2.7 или 3.4 и ниже-это использовать решение Visual Studio (описанное ниже).Это позволит статически связать время выполнения vc140,которое требуется для PyMI.</target>
        </trans-unit>
        <trans-unit id="43a6b465a38af5d83004dffc8399368ca7bee190" translate="yes" xml:space="preserve">
          <source>The easiest way to do a debug build is to set the following in setup.cfg:</source>
          <target state="translated">Самый простой способ сделать отладочную сборку-установить следующее в файле setup.cfg:</target>
        </trans-unit>
        <trans-unit id="6e32446804a2898ef61dc9ea6f4b536068d77f67" translate="yes" xml:space="preserve">
          <source>This project can be used either with a lower level interface that reflects the
underlying MI API structure or with the higher level (and slightly slower)
WMI module replacement.</source>
          <target state="translated">Данный проект может быть использован как с интерфейсом более низкого уровня,отражающим базовую структуру MI API,так и с заменой модулей WMI более высокого уровня (и немного медленнее).</target>
        </trans-unit>
        <trans-unit id="13a7431d125602b0a62651d2eeac48dd23ab6829" translate="yes" xml:space="preserve">
          <source>This project provides a Python native module wrapper over the Windows
Management Infrastructure (MI) API &lt;a href=&quot;#miapi&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">This project provides a Python native module wrapper over the Windows Management Infrastructure (MI) API &lt;a href=&quot;#miapi&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="090de4dcaaddca899d182b1e8f35d2718ba6b772" translate="yes" xml:space="preserve">
          <source>This will be honored regardless of the build type (e.g. stdist, wheel, etc).</source>
          <target state="translated">Это будет выполняться независимо от типа сборки (например,stdist,wheel и т.д.).</target>
        </trans-unit>
        <trans-unit id="481eaa26a993e8c9dc52fb97dcdb3bda29a76624" translate="yes" xml:space="preserve">
          <source>To enable distutils debug logging, you may set the following:</source>
          <target state="translated">Чтобы включить отладку журналов,можно установить следующее:</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="90bcec3b61e7d39e54959b469c000123a8693c53" translate="yes" xml:space="preserve">
          <source>Use the following to build Python 3 wheels. Those will be copied to the build
dir.</source>
          <target state="translated">Используйте следующее,чтобы построить Python 3 колеса.Они будут скопированы в строительную грязь.</target>
        </trans-unit>
        <trans-unit id="c5e4f7154d735eae4fa23bbeed4aab9ecbc85aff" translate="yes" xml:space="preserve">
          <source>Using the Visual Studio Solution</source>
          <target state="translated">Использование решения Visual Studio</target>
        </trans-unit>
        <trans-unit id="6b20e7d50440b724949622be7166ece410bc9c5b" translate="yes" xml:space="preserve">
          <source>Visual Studio 2015 download &lt;a href=&quot;https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx&quot;&gt;https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx&lt;/a&gt;</source>
          <target state="translated">Visual Studio 2015 download &lt;a href=&quot;https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx&quot;&gt;https://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59f0dda6a1f11c2ffb15f1d403b0643b176d1e86" translate="yes" xml:space="preserve">
          <source>WMI module basic usage</source>
          <target state="translated">базовое использование модуля WMI</target>
        </trans-unit>
        <trans-unit id="f0c63d9cd35b25c2fbafc2770dea50c4f82dffb1" translate="yes" xml:space="preserve">
          <source>Windows Management Infrastructure API for Python.</source>
          <target state="translated">Windows Management Infrastructure API для Python.</target>
        </trans-unit>
        <trans-unit id="865a9eba171cad805d0207fecf5a132a7edb89cb" translate="yes" xml:space="preserve">
          <source>Works with Python 2.7 and 3.x on any Windows version which supports the MI API,
both x86 and x64.</source>
          <target state="translated">Работает с Python 2.7 и 3.x на любой версии Windows,которая поддерживает MI API,как x86,так и x64.</target>
        </trans-unit>
        <trans-unit id="ba864049e098146ba9cdafccb9fda5e398d81633" translate="yes" xml:space="preserve">
          <source>distutils will automatically locate your Visual Studio and Windows SDK
installation. If you&amp;rsquo;d like to call vcvarsall.bat yourself and use a specific
version, use the following:</source>
          <target state="translated">distutils will automatically locate your Visual Studio and Windows SDK installation. If you&amp;rsquo;d like to call vcvarsall.bat yourself and use a specific version, use the following:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
