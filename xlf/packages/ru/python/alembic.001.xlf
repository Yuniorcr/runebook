<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/alembic/">
    <body>
      <group id="alembic">
        <trans-unit id="8458b53b78a2e5044af11eb1a958e7075036f4e6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;auto generation&amp;rdquo; of migrations. While real world migrations are far more
complex than what can be automatically determined, Alembic can still
eliminate the initial grunt work in generating new migration directives
from an altered schema.  The</source>
          <target state="translated">&amp;laquo;Автогенерация&amp;raquo; миграций. Хотя миграции в реальном мире намного сложнее, чем то, что может быть определено автоматически, Alembic все же может устранить начальную ворчливую работу по созданию новых директив миграции из измененной схемы. В</target>
        </trans-unit>
        <trans-unit id="32c15aa6bf1cdf50f11797596e4399ff85d05265" translate="yes" xml:space="preserve">
          <source>--autogenerate</source>
          <target state="translated">--autogenerate</target>
        </trans-unit>
        <trans-unit id="79be64fbfcbac730126260737683a2ace8223d9b" translate="yes" xml:space="preserve">
          <source>A database migration tool for SQLAlchemy.</source>
          <target state="translated">Инструмент миграции базы данных для SQLAlchemy.</target>
        </trans-unit>
        <trans-unit id="050cab9398e18c793c185ec23434d1e82433a62e" translate="yes" xml:space="preserve">
          <source>Above all, SQLAlchemy places great emphasis on polite, thoughtful, and
constructive communication between users and developers.
Please see our current Code of Conduct at
&lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">Прежде всего, SQLAlchemy уделяет большое внимание вежливому, вдумчивому и конструктивному общению между пользователями и разработчиками. Пожалуйста, ознакомьтесь с нашим действующим Кодексом поведения в &lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;Кодексе поведения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed93ccfb2e93cce318ad215757760a5eb6a2215a" translate="yes" xml:space="preserve">
          <source>Alembic is a database migrations tool written by the author
of &lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt;.  A migrations tool
offers the following functionality:</source>
          <target state="translated">Alembic - это инструмент миграции баз данных, написанный автором &lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt; . Инструмент миграции предлагает следующие функции:</target>
        </trans-unit>
        <trans-unit id="c523d8646d33a476249705c180bd0d84e03f3b92" translate="yes" xml:space="preserve">
          <source>Alembic is distributed under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">Alembic распространяется по &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;лицензии MIT&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6effbd95a98cf3f8922f051b4da82f21479ada3" translate="yes" xml:space="preserve">
          <source>Alembic is part of the &lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy Project&lt;/a&gt; and
adheres to the same standards and conventions as the core project.</source>
          <target state="translated">Alembic является частью проекта &lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt; и придерживается тех же стандартов и соглашений, что и основной проект.</target>
        </trans-unit>
        <trans-unit id="2caf180e7eeeb94982ba97c4515abb7904321377" translate="yes" xml:space="preserve">
          <source>Allows the scripts to execute in some sequential manner.</source>
          <target state="translated">Позволяет скриптам выполняться последовательно.</target>
        </trans-unit>
        <trans-unit id="b32d49f1401d4f9f889e5d35222bf1ba9ea7be2e" translate="yes" xml:space="preserve">
          <source>At long last, bring SQLite and its inablity to ALTER things into the fold,
but in such a way that SQLite&amp;rsquo;s very special workflow needs are accommodated
in an explicit way that makes the most of a bad situation, through the
concept of a &amp;ldquo;batch&amp;rdquo; migration, where multiple changes to a table can
be batched together to form a series of instructions for a single, subsequent
&amp;ldquo;move-and-copy&amp;rdquo; workflow.   You can even use &amp;ldquo;move-and-copy&amp;rdquo; workflow for
other databases, if you want to recreate a table in the background
on a busy system.</source>
          <target state="translated">Наконец, включите SQLite и его неспособность к ALTER, но таким образом, чтобы особые потребности рабочего процесса SQLite были учтены явным образом, чтобы максимально использовать плохую ситуацию, с помощью концепции &amp;laquo;пакета&amp;raquo;. миграция, при которой несколько изменений в таблице могут быть объединены в пакет, чтобы сформировать серию инструкций для одного последующего рабочего процесса &amp;laquo;перемещение и копирование&amp;raquo;. Вы даже можете использовать рабочий процесс &amp;laquo;перемещение и копирование&amp;raquo; для других баз данных, если вы хотите воссоздать таблицу в фоновом режиме в загруженной системе.</target>
        </trans-unit>
        <trans-unit id="624f3b913fa937a736c0cd8d54bd5fadc490a2b2" translate="yes" xml:space="preserve">
          <source>Can emit ALTER statements to a database in order to change
the structure of tables and other constructs</source>
          <target state="translated">Может излучать в БД выражения АЛЬТЕР для изменения структуры таблиц и других конструкций</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">кодекс поведения</target>
        </trans-unit>
        <trans-unit id="77cb3ee1d47bde3bc338c9fbcf0e4be86b1428b5" translate="yes" xml:space="preserve">
          <source>Development / Bug reporting / Pull requests</source>
          <target state="translated">Разработка/Сообщения об ошибках/Запросы на вытягивание</target>
        </trans-unit>
        <trans-unit id="567a6d33bf116fe2ed15d94b82c96f99b93c83d7" translate="yes" xml:space="preserve">
          <source>Documentation and status of Alembic is at &lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/&lt;/a&gt;</source>
          <target state="translated">Документация и статус Alembic находятся на &lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09eb8faa5de32a52f2a0ce8468cf52b05cd4eb3a" translate="yes" xml:space="preserve">
          <source>Full support for migrations generated as SQL scripts.   Those of us who
work in corporate environments know that direct access to DDL commands on a
production database is a rare privilege, and DBAs want textual SQL scripts.
Alembic&amp;rsquo;s usage model and commands are oriented towards being able to run a
series of migrations into a textual output file as easily as it runs them
directly to a database. Care must be taken in this mode to not invoke other
operations that rely upon in-memory SELECTs of rows - Alembic tries to
provide helper constructs like bulk_insert() to help with data-oriented
operations that are compatible with script-based DDL.</source>
          <target state="translated">Полная поддержка миграции, созданной в виде сценариев SQL. Те из нас, кто работает в корпоративных средах, знают, что прямой доступ к командам DDL в производственной базе данных - редкая привилегия, а администраторам баз данных нужны текстовые сценарии SQL. Модель использования и команды Alembic ориентированы на то, чтобы иметь возможность запускать серию миграций в текстовый выходной файл так же легко, как и напрямую в базу данных. В этом режиме необходимо проявлять осторожность, чтобы не вызывать другие операции, которые зависят от строк SELECT в памяти - Alembic пытается предоставить вспомогательные конструкции, такие как bulk_insert (), для помощи в операциях, ориентированных на данные, которые совместимы с DDL на основе сценариев.</target>
        </trans-unit>
        <trans-unit id="29352cce3621de5a7556c6dcdd7b05688c414885" translate="yes" xml:space="preserve">
          <source>Full support for transactional DDL.   The default scripts ensure that all
migrations occur within a transaction - for those databases which support
this (Postgresql, Microsoft SQL Server), migrations can be tested with no
need to manually undo changes upon failure.</source>
          <target state="translated">Полная поддержка транзакционной DDL.Скрипты по умолчанию гарантируют,что все миграции происходят внутри транзакции-для тех баз данных,которые это поддерживают (Postgresql,Microsoft SQL Server),миграции могут быть протестированы без необходимости вручную отменять изменения при отказе.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="48ec0553f698534a6e66221e7887915615f78c49" translate="yes" xml:space="preserve">
          <source>Minimalist script construction.  Basic operations like renaming
tables/columns, adding/removing columns, changing column attributes can be
performed through one line commands like alter_column(), rename_table(),
add_constraint(). There is no need to recreate full SQLAlchemy Table
structures for simple operations like these - the functions themselves
generate minimalist schema structures behind the scenes to achieve the given
DDL sequence.</source>
          <target state="translated">Минималистская конструкция сценария.Основные операции,такие как переименование таблиц/столбцов,добавление/удаление столбцов,изменение атрибутов столбцов могут выполняться с помощью команд в одной строке,таких как alter_column(),rename_table(),add_constraint().Нет необходимости воссоздавать полные структуры SQLAlchemy Table для таких простых операций-сами функции генерируют минималистские структуры схем за кулисами для достижения заданной последовательности DDL.</target>
        </trans-unit>
        <trans-unit id="3b2e11fb0d5b4303d76fef2652a26da78071e8f3" translate="yes" xml:space="preserve">
          <source>Non-linear, dependency-graph versioning.   Scripts are given UUID
identifiers similarly to a DVCS, and the linkage of one script to the next
is achieved via human-editable markers within the scripts themselves.
The structure of a set of migration files is considered as a
directed-acyclic graph, meaning any migration file can be dependent
on any other arbitrary set of migration files, or none at
all.  Through this open-ended system, migration files can be organized
into branches, multiple roots, and mergepoints, without restriction.
Commands are provided to produce new branches, roots, and merges of
branches automatically.</source>
          <target state="translated">Нелинейная версия с зависимостями.Скриптам присваиваются UUID-идентификаторы аналогично DVCS,а привязка одного скрипта к другому осуществляется с помощью человекоредактируемых маркеров внутри самих скриптов.Структура набора миграционных файлов рассматривается как направленный ациклический граф,то есть любой миграционный файл может зависеть от любого другого произвольного набора миграционных файлов,либо не зависеть от него вообще.Благодаря этой открытой системе миграционные файлы могут быть организованы в ветви,многочисленные корни и точки слияния без ограничений.Команды предоставляются для автоматического создания новых веток,корней и слияний веток.</target>
        </trans-unit>
        <trans-unit id="3317c96580f9a295a287a36960ca1ac3848d4c9e" translate="yes" xml:space="preserve">
          <source>Please refer to the
&lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemy Community Guide&lt;/a&gt; for
guidelines on coding and participating in this project.</source>
          <target state="translated">Пожалуйста, обратитесь к &lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;Руководству сообщества SQLAlchemy&lt;/a&gt; за инструкциями по написанию кода и участию в этом проекте.</target>
        </trans-unit>
        <trans-unit id="fc1a4a029f51aa104cdb8b00e39f2958c1b5ae01" translate="yes" xml:space="preserve">
          <source>Provide a library of ALTER constructs that can be used by any SQLAlchemy
application. The DDL constructs build upon SQLAlchemy&amp;rsquo;s own DDLElement base
and can be used standalone by any application or script.</source>
          <target state="translated">Предоставьте библиотеку конструкций ALTER, которая может использоваться любым приложением SQLAlchemy. Конструкции DDL основаны на собственной базе DDLElement SQLAlchemy и могут использоваться автономно любым приложением или сценарием.</target>
        </trans-unit>
        <trans-unit id="88b302d41e9a6a1112e7143e9e6e8f37d1265fa0" translate="yes" xml:space="preserve">
          <source>Provides a system whereby &amp;ldquo;migration scripts&amp;rdquo; may be constructed;
each script indicates a particular series of steps that can &amp;ldquo;upgrade&amp;rdquo; a
target database to a new version, and optionally a series of steps that can
&amp;ldquo;downgrade&amp;rdquo; similarly, doing the same steps in reverse.</source>
          <target state="translated">Предоставляет систему, с помощью которой можно создавать &amp;laquo;сценарии миграции&amp;raquo;; каждый сценарий указывает конкретную серию шагов, которые могут &amp;laquo;обновить&amp;raquo; целевую базу данных до новой версии, и, возможно, серию шагов, которые могут &amp;laquo;понизить&amp;raquo; аналогично, выполняя те же шаги в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="af3ce9a108e869672fca95e25ffe5a0e7aa5cb63" translate="yes" xml:space="preserve">
          <source>The SQLAlchemy Project</source>
          <target state="translated">Проект SQLAlchemy</target>
        </trans-unit>
        <trans-unit id="fea6abb36b5b955e04e2da98b4c5a62bdbcd8831" translate="yes" xml:space="preserve">
          <source>The goals of Alembic are:</source>
          <target state="translated">Цели Алембича:</target>
        </trans-unit>
        <trans-unit id="aa0b572ab1e556153ce0327b9b36c2ed88dd0e24" translate="yes" xml:space="preserve">
          <source>Very open ended and transparent configuration and operation.   A new
Alembic environment is generated from a set of templates which is selected
among a set of options when setup first occurs. The templates then deposit a
series of scripts that define fully how database connectivity is established
and how migration scripts are invoked; the migration scripts themselves are
generated from a template within that series of scripts. The scripts can
then be further customized to define exactly how databases will be
interacted with and what structure new migration files should take.</source>
          <target state="translated">Очень открытая и прозрачная конфигурация и работа.Новое окружение Alembic генерируется из набора шаблонов,который выбирается среди набора опций при первой настройке.Затем шаблоны депонируют серию сценариев,которые полностью определяют,как устанавливается подключение к базам данных и как вызываются сценарии миграции;сами сценарии миграции генерируются из шаблона в этой серии сценариев.Затем сценарии можно дополнительно настраивать,чтобы точно определить,как базы данных будут взаимодействовать и какую структуру должны занимать новые файлы миграции.</target>
        </trans-unit>
        <trans-unit id="ac2929a680f8164a191f94e8157db17de75f969f" translate="yes" xml:space="preserve">
          <source>feature will inspect the
current status of a database using SQLAlchemy&amp;rsquo;s schema inspection
capabilities, compare it to the current state of the database model as
specified in Python, and generate a series of &amp;ldquo;candidate&amp;rdquo; migrations,
rendering them into a new migration script as Python directives. The
developer then edits the new file, adding additional directives and data
migrations as needed, to produce a finished migration. Table and column
level changes can be detected, with constraints and indexes to follow as
well.</source>
          <target state="translated">функция будет проверять текущее состояние базы данных с помощью возможностей проверки схемы SQLAlchemy, сравнивать его с текущим состоянием модели базы данных, как указано в Python, и генерировать серию &amp;laquo;потенциальных&amp;raquo; миграций, отображая их в новом сценарии миграции в виде директив Python . Затем разработчик редактирует новый файл, добавляя дополнительные директивы и миграции данных по мере необходимости, чтобы произвести завершенную миграцию. Изменения на уровне таблиц и столбцов могут быть обнаружены, а также должны соблюдаться ограничения и индексы.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
