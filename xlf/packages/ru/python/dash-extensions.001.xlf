<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/dash-extensions/">
    <body>
      <group id="dash-extensions">
        <trans-unit id="38de7480b25913509f832f90b1ed423d4c9aaf89" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ServersideOutput&lt;/code&gt; component has been added. It works like a normal &lt;code&gt;Output&lt;/code&gt;, but &lt;em&gt;keeps the data on the server&lt;/em&gt;. By skipping the data transfer between server/client, the network overhead is reduced drastically, and the serialization to JSON can be avoided. Hence, you can now return complex objects, such as a pandas data frame, directly,</source>
          <target state="translated">A new &lt;code&gt;ServersideOutput&lt;/code&gt; component has been added. It works like a normal &lt;code&gt;Output&lt;/code&gt; , but &lt;em&gt;keeps the data on the server&lt;/em&gt;. By skipping the data transfer between server/client, the network overhead is reduced drastically, and the serialization to JSON can be avoided. Hence, you can now return complex objects, such as a pandas data frame, directly,</target>
        </trans-unit>
        <trans-unit id="2b457dcf8f6175eb4d69303aac5bc76e33778f27" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Trigger&lt;/code&gt; component has been added. Like an &lt;code&gt;Input&lt;/code&gt;, it can trigger callbacks, but its value is not passed on to the callback,</source>
          <target state="translated">A new &lt;code&gt;Trigger&lt;/code&gt; component has been added. Like an &lt;code&gt;Input&lt;/code&gt; , it can trigger callbacks, but its value is not passed on to the callback,</target>
        </trans-unit>
        <trans-unit id="369c88d376107806e8207d0896ffb8d471fbdeec" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;group&lt;/code&gt; keyword makes it possible to bundle callbacks together. This feature serves as a work around for Dash not being able to target an output multiple times. Here is a small example,</source>
          <target state="translated">A new &lt;code&gt;group&lt;/code&gt; keyword makes it possible to bundle callbacks together. This feature serves as a work around for Dash not being able to target an output multiple times. Here is a small example,</target>
        </trans-unit>
        <trans-unit id="31ca9d69fc9fccf38ab4390d50f2f491ba1507fe" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;memoize&lt;/code&gt; keyword makes it possible to memoize the output of a callback. That is, the callback output is cached, and the cached result is returned when the same inputs occur again.</source>
          <target state="translated">A new &lt;code&gt;memoize&lt;/code&gt; keyword makes it possible to memoize the output of a callback. That is, the callback output is cached, and the cached result is returned when the same inputs occur again.</target>
        </trans-unit>
        <trans-unit id="14c0ed94ce59bb07cbaba2cb00b743022d8c3372" translate="yes" xml:space="preserve">
          <source>A number of custom components, e.g. the &lt;code&gt;Download&lt;/code&gt; component</source>
          <target state="translated">A number of custom components, e.g. the &lt;code&gt;Download&lt;/code&gt; component</target>
        </trans-unit>
        <trans-unit id="93c93e8511298897235fd94d9c40fe25f9279790" translate="yes" xml:space="preserve">
          <source>At the time of writing, the following enrichments (as compared to Dash 1.14.0) have been implemented,</source>
          <target state="translated">На момент написания статьи были реализованы следующие обогащения (по сравнению с тире 1.14.0),</target>
        </trans-unit>
        <trans-unit id="31b15c84364e50d75c6c03c1a5a41cb4022fba93" translate="yes" xml:space="preserve">
          <source>Before the &lt;code&gt;add&lt;/code&gt; function can be used as a clientside callback, the &lt;code&gt;logic&lt;/code&gt; module must be passed through the &lt;code&gt;to_clientside_functions&lt;/code&gt; function. In addition to transpiling the module into JavaScript, it replaces the functional attributes of the module with appropriate &lt;code&gt;ClientsideFunction&lt;/code&gt; objects so that they can be used in clientside callbacks,</source>
          <target state="translated">Before the &lt;code&gt;add&lt;/code&gt; function can be used as a clientside callback, the &lt;code&gt;logic&lt;/code&gt; module must be passed through the &lt;code&gt;to_clientside_functions&lt;/code&gt; function. In addition to transpiling the module into JavaScript, it replaces the functional attributes of the module with appropriate &lt;code&gt;ClientsideFunction&lt;/code&gt; objects so that they can be used in clientside callbacks,</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Компоненты</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Скачать</target>
        </trans-unit>
        <trans-unit id="9ba84d7adf8faf5eb8c5a55c17a9a2afc1e84702" translate="yes" xml:space="preserve">
          <source>Enrichments</source>
          <target state="translated">Обогащения</target>
        </trans-unit>
        <trans-unit id="26943346b3afd2f7abf8d7452a360c3f7742e93e" translate="yes" xml:space="preserve">
          <source>Extensions for Plotly Dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03e7fec247792ccd038e4225ec64cc91a2c1b3e" translate="yes" xml:space="preserve">
          <source>For completeness, here is the full example app (tested with dash-leaflet==0.0.23),</source>
          <target state="translated">Для полноты,вот полный пример приложения (протестировано с dash-leaflet==0.0.23),</target>
        </trans-unit>
        <trans-unit id="2a42272577543a95f489575fd9fd81278149ae4e" translate="yes" xml:space="preserve">
          <source>It is now possible to have callbacks without an &lt;code&gt;Output&lt;/code&gt;,</source>
          <target state="translated">It is now possible to have callbacks without an &lt;code&gt;Output&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="6662c40bac78a8fe5e23219b77087fbe7647cb15" translate="yes" xml:space="preserve">
          <source>Keyboard</source>
          <target state="translated">Клавиатура</target>
        </trans-unit>
        <trans-unit id="22d0a7256c561218b8dab9c1fd98ef57d3c410e1" translate="yes" xml:space="preserve">
          <source>Lottie</source>
          <target state="translated">Лотти</target>
        </trans-unit>
        <trans-unit id="65fb8f53436697699c2ebda40dc61a1718572d34" translate="yes" xml:space="preserve">
          <source>One of the main use cases for transpiling is clientside callbacks (which are usually written in JavaScript). The functions to be transpiled must be placed in a separate module (file), say &lt;code&gt;logic.py&lt;/code&gt;. In this example, we will consider a simple &lt;code&gt;add&lt;/code&gt; function,</source>
          <target state="translated">One of the main use cases for transpiling is clientside callbacks (which are usually written in JavaScript). The functions to be transpiled must be placed in a separate module (file), say &lt;code&gt;logic.py&lt;/code&gt; . In this example, we will consider a simple &lt;code&gt;add&lt;/code&gt; function,</target>
        </trans-unit>
        <trans-unit id="0e1e6baeb70215bf585b1471a0ddca6a8426c91f" translate="yes" xml:space="preserve">
          <source>Ordering and form (single element versus list) of (&lt;code&gt;Output&lt;/code&gt;, &lt;code&gt;Input&lt;/code&gt;, &lt;code&gt;State&lt;/code&gt;) does not matter. Hence, you could do this,</source>
          <target state="translated">Ordering and form (single element versus list) of ( &lt;code&gt;Output&lt;/code&gt; , &lt;code&gt;Input&lt;/code&gt; , &lt;code&gt;State&lt;/code&gt; ) does not matter. Hence, you could do this,</target>
        </trans-unit>
        <trans-unit id="d544636797766f06a8b34ba206f4c3645f2bc322" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Download&lt;/code&gt; component provides an easy way to download data from a Dash application. Simply add the &lt;code&gt;Download&lt;/code&gt; component to the app layout, and add a callback which targets its &lt;code&gt;data&lt;/code&gt; property. Here is a small example,</source>
          <target state="translated">The &lt;code&gt;Download&lt;/code&gt; component provides an easy way to download data from a Dash application. Simply add the &lt;code&gt;Download&lt;/code&gt; component to the app layout, and add a callback which targets its &lt;code&gt;data&lt;/code&gt; property. Here is a small example,</target>
        </trans-unit>
        <trans-unit id="54cb08e70d0426c2f6eb5ba191d3d7d8e6e848a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Keyboard&lt;/code&gt; component makes it possible to capture keyboard events at the document level. Here is a small example,</source>
          <target state="translated">The &lt;code&gt;Keyboard&lt;/code&gt; component makes it possible to capture keyboard events at the document level. Here is a small example,</target>
        </trans-unit>
        <trans-unit id="e252d94e1f18f4e2d47314d52c9f284574319400" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Lottie&lt;/code&gt; component makes it possible to run Lottie animations in Dash. Here is a small example,</source>
          <target state="translated">The &lt;code&gt;Lottie&lt;/code&gt; component makes it possible to run Lottie animations in Dash. Here is a small example,</target>
        </trans-unit>
        <trans-unit id="ddea0e04346c9e5d85f7d63175e8c9888ac423b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enrich&lt;/code&gt; module, which contains various enriched versions of Dash components</source>
          <target state="translated">The &lt;code&gt;enrich&lt;/code&gt; module, which contains various enriched versions of Dash components</target>
        </trans-unit>
        <trans-unit id="a86725c44e46391f539baf16fd49da6ee8d9d986" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;snippets&lt;/code&gt; module, which contains a collection of utility functions</source>
          <target state="translated">The &lt;code&gt;snippets&lt;/code&gt; module, which contains a collection of utility functions</target>
        </trans-unit>
        <trans-unit id="2102cf77f85e67fb4b002672e74fcab69781c7b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to_clientside_functions&lt;/code&gt; returns the path to a JavaScript index file, which must be made available by the app (that's what &lt;code&gt;inject_js&lt;/code&gt; does). For completeness, here is the full example app,</source>
          <target state="translated">The &lt;code&gt;to_clientside_functions&lt;/code&gt; returns the path to a JavaScript index file, which must be made available by the app (that's what &lt;code&gt;inject_js&lt;/code&gt; does). For completeness, here is the full example app,</target>
        </trans-unit>
        <trans-unit id="1d07cc56d132ef4f831739e23dfeb3887dfff43b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transpile&lt;/code&gt; module translates Python code into JavaScript using the &lt;a href=&quot;https://www.transcrypt.org/&quot;&gt;transcrypt&lt;/a&gt; library. Since transcrypt is a rather large library, it is not included in the requirements, but it can be installed via pip</source>
          <target state="translated">The &lt;code&gt;transpile&lt;/code&gt; module translates Python code into JavaScript using the &lt;a href=&quot;https://www.transcrypt.org/&quot;&gt;transcrypt&lt;/a&gt; library. Since transcrypt is a rather large library, it is not included in the requirements, but it can be installed via pip</target>
        </trans-unit>
        <trans-unit id="b4efce596df68e36959f66aecb7bad961b1e227e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transpile&lt;/code&gt; module, which contains convenience wrappers for transpiling Python code to javascript</source>
          <target state="translated">The &lt;code&gt;transpile&lt;/code&gt; module, which contains convenience wrappers for transpiling Python code to javascript</target>
        </trans-unit>
        <trans-unit id="39422443175b956817ec10e1f2020a21dc86238c" translate="yes" xml:space="preserve">
          <source>The components listed here can be used in the &lt;code&gt;layout&lt;/code&gt; of your Dash app.</source>
          <target state="translated">The components listed here can be used in the &lt;code&gt;layout&lt;/code&gt; of your Dash app.</target>
        </trans-unit>
        <trans-unit id="1be714a9caf41fdc9037dbc48de1a2471058ef42" translate="yes" xml:space="preserve">
          <source>The other main use case for the &lt;code&gt;transpile&lt;/code&gt; module is for passing function handles as Dash properties. Again, the functions to be transpiled must be placed in a separate module (file), say &lt;code&gt;styles.py&lt;/code&gt;,</source>
          <target state="translated">The other main use case for the &lt;code&gt;transpile&lt;/code&gt; module is for passing function handles as Dash properties. Again, the functions to be transpiled must be placed in a separate module (file), say &lt;code&gt;styles.py&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="6149ab80f576c4dfa53bebc7a74d1566000775ca" translate="yes" xml:space="preserve">
          <source>The purpose of this package is to provide various extensions to the Plotly Dash framework. It can be divided into four main blocks,</source>
          <target state="translated">Целью данного пакета является предоставление различных расширений для фреймворка Plotly Dash.Он может быть разделен на четыре основных блока,</target>
        </trans-unit>
        <trans-unit id="7166d00ee0e0dcf12a69c4e5df39c1bc10211470" translate="yes" xml:space="preserve">
          <source>The reduced network overhead along with the avoided serialization to/from JSON can yield significant performance improvements, in particular for large data. Note that content of a &lt;code&gt;ServersideOutput&lt;/code&gt; cannot be accessed by clientside callbacks.</source>
          <target state="translated">The reduced network overhead along with the avoided serialization to/from JSON can yield significant performance improvements, in particular for large data. Note that content of a &lt;code&gt;ServersideOutput&lt;/code&gt; cannot be accessed by clientside callbacks.</target>
        </trans-unit>
        <trans-unit id="677860bbc848527e75be15d2107642aa765f837b" translate="yes" xml:space="preserve">
          <source>The style function above was designed to match the signature of the &lt;code&gt;style&lt;/code&gt; option of the &lt;a href=&quot;https://leafletjs.com/reference-0.7.7.html#geojson-style&quot;&gt;Leaflet GeoJSON object&lt;/a&gt;. Before the functions can be used as properties, the module must be passed through the &lt;code&gt;to_js_functions&lt;/code&gt; function. In addition to transpiling the module into JavaScript, it replaces the functional attributes of the module with strings that are translated into functions in the JavaScript layer,</source>
          <target state="translated">The style function above was designed to match the signature of the &lt;code&gt;style&lt;/code&gt; option of the &lt;a href=&quot;https://leafletjs.com/reference-0.7.7.html#geojson-style&quot;&gt;Leaflet GeoJSON object&lt;/a&gt;. Before the functions can be used as properties, the module must be passed through the &lt;code&gt;to_js_functions&lt;/code&gt; function. In addition to transpiling the module into JavaScript, it replaces the functional attributes of the module with strings that are translated into functions in the JavaScript layer,</target>
        </trans-unit>
        <trans-unit id="b595d3a8d13d99fe3f23fc1ff8a7ab8fe7ff9e3f" translate="yes" xml:space="preserve">
          <source>The syntax in the &lt;code&gt;enrich&lt;/code&gt; module should be considered alpha stage. It might change without notice.</source>
          <target state="translated">The syntax in the &lt;code&gt;enrich&lt;/code&gt; module should be considered alpha stage. It might change without notice.</target>
        </trans-unit>
        <trans-unit id="d2b4c1b910a121b44882a32a316ede0cfd0cd7d3" translate="yes" xml:space="preserve">
          <source>To ease downloading data frames (which seems to be a common use case for Dash users), a &lt;code&gt;send_data_frame&lt;/code&gt; utility method is also included,</source>
          <target state="translated">To ease downloading data frames (which seems to be a common use case for Dash users), a &lt;code&gt;send_data_frame&lt;/code&gt; utility method is also included,</target>
        </trans-unit>
        <trans-unit id="ebb22a684d960ce7ba44c0d2b7e0ce9f21b88ccb" translate="yes" xml:space="preserve">
          <source>To ease downloading files, a &lt;code&gt;send_file&lt;/code&gt; utility method is included,</source>
          <target state="translated">To ease downloading files, a &lt;code&gt;send_file&lt;/code&gt; utility method is included,</target>
        </trans-unit>
        <trans-unit id="bb863e75f77960fab9549f1d29c4e14bd1946879" translate="yes" xml:space="preserve">
          <source>To enable the enrichments, simply replace the imports of the &lt;code&gt;Dash&lt;/code&gt; object and the (&lt;code&gt;Output&lt;/code&gt;, &lt;code&gt;Input&lt;/code&gt;, &lt;code&gt;State&lt;/code&gt;) objects with their enriched counterparts,</source>
          <target state="translated">To enable the enrichments, simply replace the imports of the &lt;code&gt;Dash&lt;/code&gt; object and the ( &lt;code&gt;Output&lt;/code&gt; , &lt;code&gt;Input&lt;/code&gt; , &lt;code&gt;State&lt;/code&gt; ) objects with their enriched counterparts,</target>
        </trans-unit>
        <trans-unit id="626a681bf03395c3c640839f0d5ec24dccbb5e1f" translate="yes" xml:space="preserve">
          <source>Transpiling</source>
          <target state="translated">Пересылка</target>
        </trans-unit>
        <trans-unit id="7c8311839098a803d043b5d99838e49cc5d3a1c8" translate="yes" xml:space="preserve">
          <source>Used with a normal &lt;code&gt;Output&lt;/code&gt;, this keyword is essentially equivalent to the &lt;code&gt;@flask_caching.memoize&lt;/code&gt; decorator. For a &lt;code&gt;ServersideOutput&lt;/code&gt;, the backend to do server side storage will also be used for memoization. Hence you avoid saving each object two times, which would happen if the &lt;code&gt;@flask_caching.memoize&lt;/code&gt; decorator was used with a &lt;code&gt;ServersideOutput&lt;/code&gt;.</source>
          <target state="translated">Used with a normal &lt;code&gt;Output&lt;/code&gt; , this keyword is essentially equivalent to the &lt;code&gt;@flask_caching.memoize&lt;/code&gt; decorator. For a &lt;code&gt;ServersideOutput&lt;/code&gt; , the backend to do server side storage will also be used for memoization. Hence you avoid saving each object two times, which would happen if the &lt;code&gt;@flask_caching.memoize&lt;/code&gt; decorator was used with a &lt;code&gt;ServersideOutput&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="864e972407236b8a8809650c25a40eaa55d34ad2" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;snippets&lt;/code&gt; module documentation will be limited to source code comments, the &lt;code&gt;enrich&lt;/code&gt; module, the &lt;code&gt;transpile&lt;/code&gt; module and the custom components are documented below.</source>
          <target state="translated">While the &lt;code&gt;snippets&lt;/code&gt; module documentation will be limited to source code comments, the &lt;code&gt;enrich&lt;/code&gt; module, the &lt;code&gt;transpile&lt;/code&gt; module and the custom components are documented below.</target>
        </trans-unit>
        <trans-unit id="d952786a77e2a1e24bb89223dd78aac3665f4eee" translate="yes" xml:space="preserve">
          <source>dash-extensions</source>
          <target state="translated">dash-расширения</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
