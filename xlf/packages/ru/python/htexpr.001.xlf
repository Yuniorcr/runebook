<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/htexpr/">
    <body>
      <group id="htexpr">
        <trans-unit id="c9f00b6e0cab36f5c1ffef33700e4b4f9c700aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htexpr&lt;/code&gt; compiles an html-like template syntax into Python
expressions, allowing embedded Python expressions in attributes and
content. It is inspired by &lt;a&gt;JSX&lt;/a&gt; and intended to complement the
excellent &lt;a&gt;Dash&lt;/a&gt; package, which allows you to write single-page
React apps in Python. For motivation and further instructions, see the
&lt;a href=&quot;https://htexpr.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;htexpr&lt;/code&gt; компилирует синтаксис шаблона, подобный html, в выражения Python, позволяя встраивать выражения Python в атрибуты и контент. Он вдохновлен &lt;a&gt;JSX&lt;/a&gt; и предназначен для дополнения отличного пакета &lt;a&gt;Dash&lt;/a&gt; , который позволяет писать одностраничные приложения React на Python. Для мотивации и дальнейших инструкций см. &lt;a href=&quot;https://htexpr.readthedocs.io/en/latest/&quot;&gt;Документацию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="691042eee72a2f731103d7b16255f8cf0f110c3f" translate="yes" xml:space="preserve">
          <source>A Unicode table::</source>
          <target state="translated">Таблица Юникод::</target>
        </trans-unit>
        <trans-unit id="62808f6757172716cabaac5204f08f9615aade3e" translate="yes" xml:space="preserve">
          <source>Development status</source>
          <target state="translated">Статус разработки</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>
        </trans-unit>
        <trans-unit id="5c05023573cfe451f4a3b70805855f4037c27140" translate="yes" xml:space="preserve">
          <source>Further demonstrations:</source>
          <target state="translated">Дальнейшие демонстрации:</target>
        </trans-unit>
        <trans-unit id="65899c19be42a3ffaf0b8c917837648c6785fba3" translate="yes" xml:space="preserve">
          <source>I wrote this to help me with a particular project where I kept making
&lt;a href=&quot;https://htexpr.readthedocs.io/en/latest/motivation.html&quot;&gt;bracketing mistakes&lt;/a&gt;.
The code works for that project, but there are likely to be corner
cases I haven't considered.</source>
          <target state="translated">Я написал это, чтобы помочь мне с конкретным проектом, в котором я постоянно делал &lt;a href=&quot;https://htexpr.readthedocs.io/en/latest/motivation.html&quot;&gt;ошибки брекетинга&lt;/a&gt; . Код работает для этого проекта, но, скорее всего, есть некоторые угловые случаи, которые я не рассматривал.</target>
        </trans-unit>
        <trans-unit id="531fac23c53ddb5015a5dbee4f3de94fef236d48" translate="yes" xml:space="preserve">
          <source>The Python grammar used here is quite simplistic: it recognizes
strings and variously parenthesized expressions. By understanding more
Python it would probably be possible to disambiguate between
comparison operators and tags, and thus drop the requirement to
enclose nested expressions in parentheses.</source>
          <target state="translated">Используемая здесь грамматика Python достаточно упрощена:она распознает строки и выражения в различных скобках.Понимая больше Python,наверное,можно будет разобраться между операторами сравнения и тегами,и таким образом снять требование заключать вложенные выражения в круглые скобки.</target>
        </trans-unit>
        <trans-unit id="ad15f2dc56d4845024eae2db5bfbdf6868bc47f0" translate="yes" xml:space="preserve">
          <source>The error messages are not always helpful, and in particular the code
objects don't yet have reliable line-number data.</source>
          <target state="translated">Сообщения об ошибках не всегда полезны,в частности,в объектах кода пока нет надежных данных о номерах строк.</target>
        </trans-unit>
        <trans-unit id="7f73ad3cc5e9cfaf60d12774150b9329d4076fcb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;examples/bootstrap.py&quot;&gt;Bootstrap example&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;examples/bootstrap.py&quot;&gt;пример Бутстрап&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d04d5ea6845027a21ff70711939961c28fbc33bc" translate="yes" xml:space="preserve">
          <source>a larger &lt;a href=&quot;examples/unicode_table.py&quot;&gt;Unicode table&lt;/a&gt;</source>
          <target state="translated">большая &lt;a href=&quot;examples/unicode_table.py&quot;&gt;таблица Unicode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f393c704709653eae355931c622c703992ea1aa" translate="yes" xml:space="preserve">
          <source>htexpr compiles an html string into a Python expression</source>
          <target state="translated">htexpr компилирует html строку в выражение на питоне</target>
        </trans-unit>
        <trans-unit id="83f741fa1f721f1824b0fa9f30cf70d72e8190c7" translate="yes" xml:space="preserve">
          <source>htexpr: Templating for Dash</source>
          <target state="translated">опытный человек:Шаблоны для Dash</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
