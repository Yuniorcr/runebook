<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/musdb/">
    <body>
      <group id="musdb">
        <trans-unit id="eff1ab2217457363930cfd857d03cbe7acecf8d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.audio&lt;/code&gt;, stereo mixture as an numpy array of shape &lt;code&gt;(nb_samples, 2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Track.audio&lt;/code&gt; , стереомикс в виде множества форм &lt;code&gt;(nb_samples, 2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d441d75d5493d97701a4791554c53b1ea63127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.name&lt;/code&gt;, the track name, consisting of &lt;code&gt;Track.artist&lt;/code&gt; and &lt;code&gt;Track.title&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Track.name&lt;/code&gt; , название трека, состоящее из &lt;code&gt;Track.artist&lt;/code&gt; и &lt;code&gt;Track.title&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c6e8e4571ff73ce2c0cbe03b66cbafbaf85a2bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.path&lt;/code&gt;, the absolute path of the mixture which might be handy to process with external applications.</source>
          <target state="translated">&lt;code&gt;Track.path&lt;/code&gt; , абсолютный путь смеси, который может быть удобен для обработки с внешними приложениями.</target>
        </trans-unit>
        <trans-unit id="df352bf2c4ef3c71ca9e9bcd5402bdd8c9d7fb0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.rate&lt;/code&gt;, the sample rate of the mixture.</source>
          <target state="translated">&lt;code&gt;Track.rate&lt;/code&gt; , частота дискретизации смеси.</target>
        </trans-unit>
        <trans-unit id="47fa7f3db16beaa5f69ea7bc866af4f3fc23f69e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.sources&lt;/code&gt;, a dictionary of sources used for this track.</source>
          <target state="translated">&lt;code&gt;Track.sources&lt;/code&gt; , словарь источников, использованных для этого трека.</target>
        </trans-unit>
        <trans-unit id="121d66e2807831beba8db486f18ef6989ba57638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.stems&lt;/code&gt;, an numpy tensor of all five stereo sources of shape &lt;code&gt;(5, nb_samples, 2)&lt;/code&gt;. The stems are always in the following order: &lt;code&gt;['mixture', 'drums', 'bass', 'other', 'vocals']&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;Track.stems&lt;/code&gt; , тензор множества всех пяти стерео источников формы &lt;code&gt;(5, nb_samples, 2)&lt;/code&gt; . Стили всегда располагаются в следующем порядке: &lt;code&gt;['mixture', 'drums', 'bass', 'other', 'vocals']&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="e36c9a7e880ef463ca80b642aab1c316c0874d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Track.targets&lt;/code&gt;, a dictionary of targets provided for this track.
Note that for MUSDB, the sources and targets differ only in the existence of the &lt;code&gt;accompaniment&lt;/code&gt;, which is the sum of all sources, except for the vocals. MUSDB supports the following targets: &lt;code&gt;['mixture', 'drums', 'bass', 'other', 'vocals', 'accompaniment', 'linear_mixture']&lt;/code&gt;. Note that some of the targets (such as &lt;strong&gt;accompaniment&lt;/strong&gt;) are dynamically mixed on the fly.</source>
          <target state="translated">&lt;code&gt;Track.targets&lt;/code&gt; , словарь целей для этого трека. Обратите внимание, что для MUSDB источники и цели различаются только наличием &lt;code&gt;accompaniment&lt;/code&gt; , который представляет собой сумму всех источников, кроме вокала. MUSDB поддерживает следующие цели: &lt;code&gt;['mixture', 'drums', 'bass', 'other', 'vocals', 'accompaniment', 'linear_mixture']&lt;/code&gt; . Обратите внимание, что некоторые цели (например, &lt;strong&gt;аккомпанемент&lt;/strong&gt; ) динамически смешиваются на лету.</target>
        </trans-unit>
        <trans-unit id="33e24b937c4ac43e5fcf63232384893b9f40c24f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;musdb&lt;/code&gt; comes with 7 seconds excerpts (automatically downloaded) of the full dataset for quick evaluation or prototyping. The full dataset, however, needs to be downloaded &lt;a href=&quot;https://zenodo.org/record/1117372&quot;&gt;via Zenodo&lt;/a&gt; and stored (unzipped) separately.</source>
          <target state="translated">&lt;code&gt;musdb&lt;/code&gt; поставляется с семисекундными отрывками (загруженными автоматически) полного набора данных для быстрой оценки или создания прототипа. Однако полный набор данных необходимо загрузить &lt;a href=&quot;https://zenodo.org/record/1117372&quot;&gt;через Zenodo&lt;/a&gt; и сохранить (разархивировать) отдельно.</target>
        </trans-unit>
        <trans-unit id="420a4eb2d0665ef680393c5af54d6fcaa6a78172" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MUSDB18&lt;/em&gt; comes encoded in &lt;a href=&quot;http://www.stems-music.com/&quot;&gt;STEMS&lt;/a&gt; which is a multitrack audio format that uses &lt;em&gt;lossy compression&lt;/em&gt;. The &lt;code&gt;musdb&lt;/code&gt; package, internally, relies on FFMPEG to decode the multi-stream files. For convenience, we developed a python package called &lt;a href=&quot;https://github.com/faroit/stempeg&quot;&gt;stempeg&lt;/a&gt; that allows to easily parse the stem files and decode them on-the-fly.
When you install &lt;em&gt;musdb&lt;/em&gt; (which depends on &lt;em&gt;stempeg&lt;/em&gt;), it is therefore necessary to also install the FFMPEG library. The installation may differ among operating systems and python distributions:</source>
          <target state="translated">&lt;em&gt;MUSDB18&lt;/em&gt; закодирован в &lt;a href=&quot;http://www.stems-music.com/&quot;&gt;STEMS&lt;/a&gt; - многодорожечном аудиоформате, использующем &lt;em&gt;сжатие с потерями&lt;/em&gt; . Пакет &lt;code&gt;musdb&lt;/code&gt; внутренне полагается на FFMPEG для декодирования многопоточных файлов. Для удобства мы разработали пакет Python под названием &lt;a href=&quot;https://github.com/faroit/stempeg&quot;&gt;stempeg,&lt;/a&gt; который позволяет легко анализировать файлы основы и декодировать их на лету. &lt;em&gt;Поэтому,&lt;/em&gt; когда вы устанавливаете &lt;em&gt;musdb&lt;/em&gt; (который зависит от &lt;em&gt;stempeg&lt;/em&gt; ), необходимо также установить библиотеку FFMPEG. Установка может отличаться в зависимости от операционных систем и дистрибутивов Python:</target>
        </trans-unit>
        <trans-unit id="ea0ff0a3bd2dd89256f78e68349fac519239ccf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When you use the decoded MUSDB, use the &lt;code&gt;is_wav&lt;/code&gt; parameter when initializing the dataset.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Когда вы используете декодированный MUSDB, используйте параметр &lt;code&gt;is_wav&lt;/code&gt; при инициализации набора данных.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f265a828664515c2a0a69dd5db40e87c516c584" translate="yes" xml:space="preserve">
          <source>A python package to parse and process the &lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18 dataset&lt;/a&gt;, the largest open access dataset for music source separation. The tool was originally developed for the &lt;a href=&quot;sisec18.unmix.app&quot;&gt;Music Separation task&lt;/a&gt; as part of the &lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;Signal Separation Evaluation Campaign (SISEC)&lt;/a&gt;.</source>
          <target state="translated">Пакет python для анализа и обработки &lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;набора данных MUSDB18&lt;/a&gt; , самого большого набора данных с открытым доступом для разделения источников музыки. Инструмент изначально был разработан для &lt;a href=&quot;sisec18.unmix.app&quot;&gt;задачи разделения музыки&lt;/a&gt; в рамках &lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;кампании по оценке разделения сигналов (SISEC)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f672ccf915a39598644ad9a295ffb1dbd62e8d7" translate="yes" xml:space="preserve">
          <source>Alternatively you can install FFMPEG manually as follows:</source>
          <target state="translated">В качестве альтернативы вы можете установить FFMPEG вручную следующим образом:</target>
        </trans-unit>
        <trans-unit id="323cf9586a360c76d757f761fea4549f8b45d87e" translate="yes" xml:space="preserve">
          <source>Baselines</source>
          <target state="translated">Исходные данные</target>
        </trans-unit>
        <trans-unit id="fd328df32af47ff4f34212c8adf3d3fbaf1aea24" translate="yes" xml:space="preserve">
          <source>Citations</source>
          <target state="translated">Цитаты</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Оценка</target>
        </trans-unit>
        <trans-unit id="5f6443a284213415a14df3c85e12378cf8071af9" translate="yes" xml:space="preserve">
          <source>For oracle methods, please check out our &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-oracle&quot;&gt;open unmix oracle separation methods&lt;/a&gt;.
This will show you how oracle performance is computed and gives indications for an upper bound for the quality of the separation.</source>
          <target state="translated">Для методов oracle, пожалуйста, ознакомьтесь с нашими &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-oracle&quot;&gt;открытыми методами разделения unmix oracle&lt;/a&gt; . Это покажет вам, как вычисляется производительность оракула, и даст указания для верхней границы качества разделения.</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">Часто задаваемые вопросы</target>
        </trans-unit>
        <trans-unit id="765ce65dc57c23ea4b17c61f7adde7d0f903c740" translate="yes" xml:space="preserve">
          <source>Getting the data</source>
          <target state="translated">Получение данных</target>
        </trans-unit>
        <trans-unit id="8e9e47310de9555280cd460663c1dbd0a1adba5b" translate="yes" xml:space="preserve">
          <source>If compare your results with SiSEC 2018 Participants - Cite the SiSEC 2018 LVA/ICA Paper</source>
          <target state="translated">Если вы сравниваете свои результаты с участниками SiSEC 2018-укажите доклад SiSEC 2018 LVA/ICA.</target>
        </trans-unit>
        <trans-unit id="138db4b5382fa4b7773cb8a28fe6e1cf154b3abe" translate="yes" xml:space="preserve">
          <source>If you don't want to use python for this, we also provide &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-io&quot;&gt;docker based scripts&lt;/a&gt; to decode the dataset to WAV files.</source>
          <target state="translated">Если вы не хотите использовать для этого python, мы также предоставляем &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-io&quot;&gt;сценарии&lt;/a&gt; на основе докеров для декодирования набора данных в файлы WAV.</target>
        </trans-unit>
        <trans-unit id="03fccfef108b986a75907475407a3721d977c3dd" translate="yes" xml:space="preserve">
          <source>If you use the MUSDB dataset for your research - Cite the MUSDB18 Dataset</source>
          <target state="translated">Если вы используете набор данных MUSDB для ваших исследований-укажите набор данных MUSDB18.</target>
        </trans-unit>
        <trans-unit id="6c98bd4105d83c734465099d92637f2b39cc418a" translate="yes" xml:space="preserve">
          <source>If you want to access individual tracks, you can access the &lt;code&gt;mus&lt;/code&gt; tracks list by its indices, e.g. &lt;code&gt;mus[2:]&lt;/code&gt;. To foster reproducible research, we provide a fixed validation dataset.</source>
          <target state="translated">Если вы хотите получить доступ к отдельным трекам, вы можете получить доступ к списку треков &lt;code&gt;mus&lt;/code&gt; по его индексам, например &lt;code&gt;mus[2:]&lt;/code&gt; . Чтобы способствовать воспроизводимости исследований, мы предоставляем фиксированный набор данных для проверки.</target>
        </trans-unit>
        <trans-unit id="c0aea3c013c4ea85aaf8da01bb7c5c92bd04c515" translate="yes" xml:space="preserve">
          <source>If you want to use WAV files (e.g. for faster audio decoding), &lt;code&gt;musdb&lt;/code&gt; also supports parsing and processing pre-decoded PCM/wav files. &lt;code&gt;musdb&lt;/code&gt; comes with the ability to convert a STEMS dataset into WAV version. This script can be used from the command line by</source>
          <target state="translated">Если вы хотите использовать файлы WAV (например, для более быстрого декодирования звука), &lt;code&gt;musdb&lt;/code&gt; также поддерживает синтаксический анализ и обработку предварительно декодированных файлов PCM / wav. &lt;code&gt;musdb&lt;/code&gt; имеет возможность конвертировать набор данных STEMS в версию WAV. Этот сценарий можно использовать из командной строки с помощью</target>
        </trans-unit>
        <trans-unit id="5770b728fa2eb0839ba0edf415f1f1192785c2f4" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;musdb&lt;/code&gt; package in your main python function and iterate over the 7 seconds &lt;code&gt;musdb&lt;/code&gt; tracks:</source>
          <target state="translated">Импортируйте пакет &lt;code&gt;musdb&lt;/code&gt; в свою основную функцию python и перебирайте 7- &lt;code&gt;musdb&lt;/code&gt; дорожки musdb :</target>
        </trans-unit>
        <trans-unit id="a8f39a0eaff1e31685a2b14797108f08b8c37cd0" translate="yes" xml:space="preserve">
          <source>Installation and Setup</source>
          <target state="translated">Установка и настройка</target>
        </trans-unit>
        <trans-unit id="370cfaa9b9ac29647dea8e39f6de9fea6cc3a9a7" translate="yes" xml:space="preserve">
          <source>Iterate over MUSDB18 tracks</source>
          <target state="translated">Итерация по трекам MUSDB18</target>
        </trans-unit>
        <trans-unit id="7f47c6de2ebcabbcc56f62559cf85e9a5796a39a" translate="yes" xml:space="preserve">
          <source>Iterating over &lt;code&gt;musdb&lt;/code&gt; and thus accessing the audio data is as simple as. Lets assume, we have a supervised training method &lt;code&gt;train(x, y)&lt;/code&gt; that takes the &lt;strong&gt;mixture&lt;/strong&gt; as input and the &lt;strong&gt;vocals&lt;/strong&gt; as output, we can simple use:</source>
          <target state="translated">Итерировать по &lt;code&gt;musdb&lt;/code&gt; и, таким образом, получить доступ к аудиоданным так же просто, как Предположим, у нас есть контролируемый обучающий метод &lt;code&gt;train(x, y)&lt;/code&gt; который принимает &lt;strong&gt;смесь в&lt;/strong&gt; качестве входных данных и &lt;strong&gt;вокал в&lt;/strong&gt; качестве выходных, мы можем просто использовать:</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="89690ac571dcf4c9c40c842efed3f11171d07b29" translate="yes" xml:space="preserve">
          <source>MIT</source>
          <target state="translated">МАССАЧУСЕТСКИЙ ТЕХНОЛОГИЧЕСКИЙ ИНСТИТУТ</target>
        </trans-unit>
        <trans-unit id="132dd629d2322820736b20863649b1dc62f54f40" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://anaconda.org&quot;&gt;Anaconda&lt;/a&gt;, you can install FFMPEG using &lt;code&gt;conda install -c conda-forge ffmpeg&lt;/code&gt;.</source>
          <target state="translated">В &lt;a href=&quot;https://anaconda.org&quot;&gt;Anaconda&lt;/a&gt; вы можете установить FFMPEG с помощью conda &lt;code&gt;conda install -c conda-forge ffmpeg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="207215fe0cc1433e1aede28acc2a8073c8c33db1" translate="yes" xml:space="preserve">
          <source>Open-Unmix</source>
          <target state="translated">Открытое смешивание</target>
        </trans-unit>
        <trans-unit id="2b4abd4e67fec0f3d7112a8e2a392fb3249b9341" translate="yes" xml:space="preserve">
          <source>Oracles</source>
          <target state="translated">Оракл</target>
        </trans-unit>
        <trans-unit id="77ca84718e0ad8247dcc8f32f65ce5736bf1270f" translate="yes" xml:space="preserve">
          <source>Package installation</source>
          <target state="translated">Установка пакета</target>
        </trans-unit>
        <trans-unit id="2a1b54776f0e80073e212cb5b9ce3350e5c11555" translate="yes" xml:space="preserve">
          <source>Processing training and testing subsets separately</source>
          <target state="translated">Обучение обработке и тестирование подмножеств отдельно</target>
        </trans-unit>
        <trans-unit id="df4021359edbeba8382d06ca8f62d6123c1282b1" translate="yes" xml:space="preserve">
          <source>Python parser for the SIGSEP MUSDB18 dataset</source>
          <target state="translated">Python парсер для набора данных SIGSEP MUSDB18</target>
        </trans-unit>
        <trans-unit id="9062ad8afd8d0d1be03a86b7244eeb4d7794c02d" translate="yes" xml:space="preserve">
          <source>Setting up musdb</source>
          <target state="translated">Настройка мускулатуры</target>
        </trans-unit>
        <trans-unit id="ff667ad4912ee7200ee958e9c14cfab32b735028" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Track&lt;/code&gt; objects which makes it easy to process the audio and metadata in a pythonic way:</source>
          <target state="translated">В &lt;code&gt;Track&lt;/code&gt; объектах , что делает его легким для обработки аудио и метаданных в вещих образом:</target>
        </trans-unit>
        <trans-unit id="4e264d7ce32d057a9dd6209d34288c3668929c0f" translate="yes" xml:space="preserve">
          <source>The dataset is hosted on Zenodo and requires that users request access, since the tracks can only be used for academic purposes. We manually check this requests. Please do not fill the form multiple times, it usually takes as less than a day to give you access.</source>
          <target state="translated">Набор данных размещается на Zenodo и требует,чтобы пользователи запрашивали доступ,так как треки могут быть использованы только в академических целях.Мы вручную проверяем эти запросы.Пожалуйста,не заполняйте форму несколько раз,обычно это занимает меньше дня,чтобы предоставить вам доступ.</target>
        </trans-unit>
        <trans-unit id="2da76dfbeac983fa1c791c4b2a7bf221d157c103" translate="yes" xml:space="preserve">
          <source>The list of validation tracks can be edited using the &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-tools/blob/b283da5b8f24e84172a60a06bb8f3dacd57aa6cd/musdb/configs/mus.yaml&quot;&gt;&lt;code&gt;mus.setup['validation_tracks']&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Список &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-tools/blob/b283da5b8f24e84172a60a06bb8f3dacd57aa6cd/musdb/configs/mus.yaml&quot;&gt; &lt;code&gt;mus.setup['validation_tracks']&lt;/code&gt; &lt;/a&gt; треков можно редактировать с помощью объекта mus.setup ['validation_tracks'] .</target>
        </trans-unit>
        <trans-unit id="c34bfbcd3c28a179b9c52e7a72bd51dc8961b60b" translate="yes" xml:space="preserve">
          <source>The mixture is not exactly the sum of its sources, is that intended?</source>
          <target state="translated">Смесь не является точной суммой ее источников,не так ли?</target>
        </trans-unit>
        <trans-unit id="78a04588fdb45db6b16aa25b1f9fcab863f71b75" translate="yes" xml:space="preserve">
          <source>This is not a bug. Since we adopted the STEMS format, we used AAC compression. Here the residual noise of the mixture is different from the sum of the residual noises of the sources. This difference does not significantly affect separation performance.</source>
          <target state="translated">Это не жучок.С тех пор как мы приняли формат STEMS,мы использовали AAC-сжатие.Здесь остаточный шум смеси отличается от суммы остаточных шумов источников.Эта разница не оказывает существенного влияния на производительность разделения.</target>
        </trans-unit>
        <trans-unit id="2e55f986e229905af6c29b05543f574bab642f10" translate="yes" xml:space="preserve">
          <source>This package should nicely integrate with your existing python numpy, tensorflow or pytorch code. Most of the steps to use musdb in your project will probably use the same first steps:</source>
          <target state="translated">Этот пакет должен хорошо интегрироваться с вашим существующим python numpy,tensorflow или pytorch кодом.Большинство шагов по использованию musdb в вашем проекте,вероятно,будут теми же самыми первыми шагами:</target>
        </trans-unit>
        <trans-unit id="ac5c5d45a33ef62d494dbc071fa4f1cc427b5e30" translate="yes" xml:space="preserve">
          <source>To Evaluate a &lt;code&gt;musdb&lt;/code&gt; track using the popular BSSEval metrics, you can use our &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-eval&quot;&gt;museval&lt;/a&gt; package. After &lt;code&gt;pip install musdb&lt;/code&gt; evaluation of a single &lt;code&gt;track&lt;/code&gt;, can be done by</source>
          <target state="translated">Чтобы &lt;code&gt;musdb&lt;/code&gt; трек musdb с помощью популярных показателей BSSEval, вы можете использовать наш пакет &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-eval&quot;&gt;Museval&lt;/a&gt; . После &lt;code&gt;pip install musdb&lt;/code&gt; оценка одного &lt;code&gt;track&lt;/code&gt; может быть выполнена с помощью</target>
        </trans-unit>
        <trans-unit id="ea9731eda0e95dda5e1d21e3e28bb04a4dfc415c" translate="yes" xml:space="preserve">
          <source>To use the full dataset, set a dataset &lt;code&gt;root&lt;/code&gt; directory</source>
          <target state="translated">Чтобы использовать полный набор данных, установите &lt;code&gt;root&lt;/code&gt; каталог набора данных</target>
        </trans-unit>
        <trans-unit id="79adadec10484e80d3f5b6c83e9b25779b6d8976" translate="yes" xml:space="preserve">
          <source>Tracks properties</source>
          <target state="translated">Свойства треков</target>
        </trans-unit>
        <trans-unit id="32815e2e57b9b4822b6c51f7ef4021db020cc173" translate="yes" xml:space="preserve">
          <source>Training Deep Neural Networks with &lt;code&gt;musdb&lt;/code&gt;</source>
          <target state="translated">Обучение глубоких нейронных сетей с помощью &lt;code&gt;musdb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="eed450cf1db8d13dbd7fc62ae850160bb45c4bdf" translate="yes" xml:space="preserve">
          <source>Use train / validation split</source>
          <target state="translated">Использовать поезд/подтверждение разделения</target>
        </trans-unit>
        <trans-unit id="ac68f0a7761ade25c5abaadd56f1ede023f14135" translate="yes" xml:space="preserve">
          <source>Using STEMs (Default)</source>
          <target state="translated">Использование STEM (по умолчанию)</target>
        </trans-unit>
        <trans-unit id="f9cc14cd4eeb07f9364dc314ab41688001f7bb4f" translate="yes" xml:space="preserve">
          <source>Using WAV files (Optional)</source>
          <target state="translated">Использование WAV-файлов (необязательно)</target>
        </trans-unit>
        <trans-unit id="2a8773c12df6590465cdd18bf29b6de11cc247cf" translate="yes" xml:space="preserve">
          <source>We provide a state-of-the-art deep learning based separation method for PyTorch, Tensorflow and NNable at &lt;a href=&quot;https://open.unmix.app&quot;&gt;open.unmix.app&lt;/a&gt;.</source>
          <target state="translated">Мы предоставляем современный метод разделения на основе глубокого обучения для PyTorch, Tensorflow и NNable в &lt;a href=&quot;https://open.unmix.app&quot;&gt;open.unmix.app&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d5193e3e0fea752a8d31ef41a4bb6187afbf501" translate="yes" xml:space="preserve">
          <source>We provide subsets for &lt;em&gt;train&lt;/em&gt; and &lt;em&gt;test&lt;/em&gt; for machine learning methods:</source>
          <target state="translated">Мы предоставляем подмножества для &lt;em&gt;обучения&lt;/em&gt; и &lt;em&gt;тестирования&lt;/em&gt; методов машинного обучения:</target>
        </trans-unit>
        <trans-unit id="0dcca236bff78f18ea9af962b822381d3b2ac79c" translate="yes" xml:space="preserve">
          <source>Writing an efficient dataset generator varies across different deep learning frameworks. A very simple n&amp;auml;ive generator that</source>
          <target state="translated">Написание эффективного генератора наборов данных зависит от разных платформ глубокого обучения. Очень простой генератор наивного</target>
        </trans-unit>
        <trans-unit id="dc1d3adf282845429dfa1766e857fcd094739ae2" translate="yes" xml:space="preserve">
          <source>You can install &lt;code&gt;musdb&lt;/code&gt; using pip:</source>
          <target state="translated">Вы можете установить &lt;code&gt;musdb&lt;/code&gt; с помощью pip:</target>
        </trans-unit>
        <trans-unit id="3614cadabe7bed2983c8e8197272251e585a99f5" translate="yes" xml:space="preserve">
          <source>can be easily implemented using musdb's &lt;code&gt;track.chunk_start&lt;/code&gt; and &lt;code&gt;track.chunk_duration&lt;/code&gt; properties which efficiently seeks to the start sample (provided in seconds) and does not load the full audio into memory first.</source>
          <target state="translated">может быть легко реализован с помощью свойств &lt;code&gt;track.chunk_start&lt;/code&gt; и &lt;code&gt;track.chunk_duration&lt;/code&gt; musdb, которые эффективно ищут начальный образец (предоставляется в секундах) и не загружают сначала весь звук в память.</target>
        </trans-unit>
        <trans-unit id="6deb4a1ffc62a2033bb57af15982810cab577408" translate="yes" xml:space="preserve">
          <source>draws random chunks of fixed length with replacement</source>
          <target state="translated">рисует случайные куски фиксированной длины с заменой</target>
        </trans-unit>
        <trans-unit id="9183d0bd96f204b0c69dc98e8bf6007f280b56b3" translate="yes" xml:space="preserve">
          <source>draws random tracks with replacement</source>
          <target state="translated">рисует случайные следы с заменой</target>
        </trans-unit>
        <trans-unit id="c1207f9aa701dc5352980de4ce83b67a41b3ec7a" translate="yes" xml:space="preserve">
          <source>musdb</source>
          <target state="translated">musdb</target>
        </trans-unit>
        <trans-unit id="29c454a4fe227f88ac6da74e1e1eed3a2ddea509" translate="yes" xml:space="preserve">
          <source>on Ubuntu/Debian: &lt;code&gt;sudo apt-get install ffmpeg&lt;/code&gt;</source>
          <target state="translated">в Ubuntu / Debian: &lt;code&gt;sudo apt-get install ffmpeg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaf87315e2ddc76ec1da180c3941e6ecadeb8340" translate="yes" xml:space="preserve">
          <source>on macOS, using homebrew: &lt;code&gt;brew install ffmpeg&lt;/code&gt;</source>
          <target state="translated">в macOS, используя homebrew: &lt;code&gt;brew install ffmpeg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45e057342e222276bab1adc7d9088a6b7b29b3bc" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;root&lt;/code&gt; is the path to the MUSDB18 dataset root folder. The root parameter can also be overridden using a system environment variable. Just &lt;code&gt;export MUSDB_PATH=/path/to/musdb&lt;/code&gt; inside your bash environment. In that case no arguments would need to passed to &lt;code&gt;DB()&lt;/code&gt;.</source>
          <target state="translated">где &lt;code&gt;root&lt;/code&gt; - это путь к корневой папке набора данных MUSDB18. Корневой параметр также можно переопределить с помощью системной переменной среды. Просто &lt;code&gt;export MUSDB_PATH=/path/to/musdb&lt;/code&gt; в свою среду bash. В этом случае не нужно передавать аргументы &lt;code&gt;DB()&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
