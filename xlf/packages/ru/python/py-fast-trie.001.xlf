<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/py-fast-trie/">
    <body>
      <group id="py-fast-trie">
        <trans-unit id="62b416b3436843d91cc408af206c4e180e137795" translate="yes" xml:space="preserve">
          <source>Python library for tries with different grades of fastness</source>
          <target state="translated">Библиотека на питоне для попыток с разными степенями устойчивости</target>
        </trans-unit>
        <trans-unit id="9d76b6830ba7a9b160362e80019fc1d91187debe" translate="yes" xml:space="preserve">
          <source>The interfaces of the X-fast and Y-fast tries are identical, the Y-fast trie is used here as an example.</source>
          <target state="translated">Интерфейсы попыток X-fast и Y-fast идентичны,в качестве примера здесь используется треугольник Y-fast.</target>
        </trans-unit>
        <trans-unit id="14b09e25cf5744fa66d49551b2d1d70aa89d5b66" translate="yes" xml:space="preserve">
          <source>The most notable benefit of X-fast and Y-fast tries compared to more common data structures such as binary search trees is that searches are log-logarithmic in the cardinality of the universe as opposed to being logarithmic in the number of elements in the structure itself; For reference if you needed to store 2^20 items with a potential maximum value of 2^32 - 1, finding a particular item would take 20 operations in a red/black or AVL tree, but only 5 with an X-fast or Y-fast trie.</source>
          <target state="translated">Наиболее заметным преимуществом попыток X-fast и Y-fast по сравнению с более распространенными структурами данных,такими как двоичные деревья поиска,является то,что поиск является логарифмическим в кардинальности вселенной,в отличие от логарифмического в количестве элементов в самой структуре;для справки,если необходимо хранить 2^20 элементов с потенциальным максимальным значением 2^32-1,поиск определенного элемента займет 20 операций в красном/черном или AVL дереве,но только 5 операций в X-fast или Y-fast дереве.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="8256f01a1d44b5340b1cc70c4cfe1b3dfa3ac22f" translate="yes" xml:space="preserve">
          <source>py-fast-trie</source>
          <target state="translated">py-fast-trie</target>
        </trans-unit>
        <trans-unit id="263e9ac76e4e9e396104c9960be4b171bcd7ea3c" translate="yes" xml:space="preserve">
          <source>py-fast-trie is a package that contains pure-Python implementations of an &lt;a href=&quot;https://en.wikipedia.org/wiki/X-fast_trie&quot;&gt;X-fast Trie&lt;/a&gt; and a &lt;a href=&quot;https://en.wikipedia.org/wiki/Y-fast_trie&quot;&gt;Y-fast trie&lt;/a&gt;, as described in the &lt;a href=&quot;https://sci-hub.tw/10.1016/0020-0190%2883%2990075-3&quot;&gt;foundational paper&lt;/a&gt;.</source>
          <target state="translated">py-fast-trie is a package that contains pure-Python implementations of an &lt;a href=&quot;https://en.wikipedia.org/wiki/X-fast_trie&quot;&gt;X-fast Trie&lt;/a&gt; and a &lt;a href=&quot;https://en.wikipedia.org/wiki/Y-fast_trie&quot;&gt;Y-fast trie&lt;/a&gt;, as described in the &lt;a href=&quot;https://sci-hub.tw/10.1016/0020-0190%2883%2990075-3&quot;&gt;foundational paper&lt;/a&gt;.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
