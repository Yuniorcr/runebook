<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/birdy/">
    <body>
      <group id="birdy">
        <trans-unit id="c6c1d887394a25011a1d81b0b19bb903645ceb6e" translate="yes" xml:space="preserve">
          <source># Your error handling code</source>
          <target state="translated"># Ваш код обработки ошибок</target>
        </trans-unit>
        <trans-unit id="dbf282dcfb050f58748291b09a4a753852b2e498" translate="yes" xml:space="preserve">
          <source>#Django</source>
          <target state="translated">#Django</target>
        </trans-unit>
        <trans-unit id="dc9569fc2e4989e0a4af218ba7ede83752adfa45" translate="yes" xml:space="preserve">
          <source>#Flash</source>
          <target state="translated">#Вспышка</target>
        </trans-unit>
        <trans-unit id="828e454eefa2a22745874348fe3b298bb596155f" translate="yes" xml:space="preserve">
          <source>(OAuth1) and than initialize it.</source>
          <target state="translated">(OAuth1) и инициализировать его.</target>
        </trans-unit>
        <trans-unit id="1e4feb48383ab34fe5922924fa51dd2e163a46c9" translate="yes" xml:space="preserve">
          <source>([@sect2k](https://twitter.com/sect2k/)).</source>
          <target state="translated">([@ sect2k] (https://twitter.com/sect2k/)).</target>
        </trans-unit>
        <trans-unit id="1a7409edf02775a04f85642439c9d4cd7c598b47" translate="yes" xml:space="preserve">
          <source>(`docs &amp;lt;http://docs.python-requests.org/en/latest/api/#sessionapi&amp;gt;`__)</source>
          <target state="translated">(`docs &amp;lt;http://docs.python-requests.org/en/latest/api/#sessionapi&amp;gt;` __)</target>
        </trans-unit>
        <trans-unit id="e645ea3887ce6f523c87cefbc1761cc97dde1adc" translate="yes" xml:space="preserve">
          <source>(application) authentication workflows.</source>
          <target state="translated">(приложение) рабочие процессы аутентификации.</target>
        </trans-unit>
        <trans-unit id="029d7159cfcc8763dfa7a92cb0d2521c1dd3f42d" translate="yes" xml:space="preserve">
          <source>**Yes**, both contributions (including feedback) and feature requests</source>
          <target state="translated">** Да **, как вклад (включая отзывы), так и запросы функций</target>
        </trans-unit>
        <trans-unit id="dc3660765c85678ee52673f56f60fafb3c37312b" translate="yes" xml:space="preserve">
          <source>**configure_oauth_session()** method.</source>
          <target state="translated">** метод configure_oauth_session () **.</target>
        </trans-unit>
        <trans-unit id="7ee71022dee99d85822873dd599e9a640f3a942b" translate="yes" xml:space="preserve">
          <source>*Sign-in with Twitter* type application it&amp;rsquo;s done like this.</source>
          <target state="translated">* Авторизуйтесь с помощью приложения типа Twitter * делается это так.</target>
        </trans-unit>
        <trans-unit id="d61f5c1442a1824b938d0468b246b00261cbc8d9" translate="yes" xml:space="preserve">
          <source>-  `ApiResponse &amp;lt;#apiresponse&amp;gt;`__, `StreamResponse &amp;lt;#streamresponse&amp;gt;`__</source>
          <target state="translated">- `ApiResponse &amp;lt;#apiresponse&amp;gt;` __, `StreamResponse &amp;lt;#streamresponse&amp;gt;` __</target>
        </trans-unit>
        <trans-unit id="f26be0c421d35a39a33ad6eaec778376a2337105" translate="yes" xml:space="preserve">
          <source>-  `Automatic JSON decoding &amp;lt;#automatic-json-decoding&amp;gt;`__,</source>
          <target state="translated">- `Автоматическое декодирование JSON &amp;lt;# automatic-json-decoding&amp;gt;` __,</target>
        </trans-unit>
        <trans-unit id="46f58b947009ada286c0ac6e4b063223ced968b1" translate="yes" xml:space="preserve">
          <source>-  `Built on top of the excellent requests and requests-ouathlib</source>
          <target state="translated">- `Построен на основе отличных запросов и запросов-ouathlib</target>
        </trans-unit>
        <trans-unit id="c8910139914a8c7ce99d67d7c25fab0d437a85fa" translate="yes" xml:space="preserve">
          <source>-  `Easily customizable through</source>
          <target state="translated">- `Легко настраивается через</target>
        </trans-unit>
        <trans-unit id="899e7d93b5f47b55454ba400ee9d405abf216588" translate="yes" xml:space="preserve">
          <source>-  `Future proof dynamic API with full REST and Streaming API</source>
          <target state="translated">- `` Перспективный динамический API с полным REST и Streaming API</target>
        </trans-unit>
        <trans-unit id="6d72f580d51dc405963287da9b390cd2e250d889" translate="yes" xml:space="preserve">
          <source>-  `Informative exceptions &amp;lt;#informative-exceptions&amp;gt;`__</source>
          <target state="translated">- `Информационные исключения &amp;lt;# informative-exceptions&amp;gt;` __</target>
        </trans-unit>
        <trans-unit id="e9b4ad285a001d317336c9bf2488eaa8e9feb5cd" translate="yes" xml:space="preserve">
          <source>-  `OAuth1 (user) and OAuth2 (app) authentication</source>
          <target state="translated">- Проверка подлинности OAuth1 (пользователь) и OAuth2 (приложение)</target>
        </trans-unit>
        <trans-unit id="eea2afffdb58d33dbe2eb8079a29dc76ed798b1f" translate="yes" xml:space="preserve">
          <source>-  ``TwitterApiError`` raised when Twitter returns an error</source>
          <target state="translated">- `` TwitterApiError`` возникает, когда Twitter возвращает ошибку</target>
        </trans-unit>
        <trans-unit id="af8823fb2ab53107720b10f97852f5979d2a1feb" translate="yes" xml:space="preserve">
          <source>-  ``TwitterAuthError`` raised when authentication fails,</source>
          <target state="translated">- `` TwitterAuthError`` возникает при сбое аутентификации,</target>
        </trans-unit>
        <trans-unit id="dbc3faa55cbdf87eb763bcd8143a14b057e2975e" translate="yes" xml:space="preserve">
          <source>-  ``TwitterClientError`` raised for connection and access token</source>
          <target state="translated">- `` TwitterClientError`` возникает для токена подключения и доступа</target>
        </trans-unit>
        <trans-unit id="faa16bf964941d66f7916dd2800340893411a564" translate="yes" xml:space="preserve">
          <source>-  ``TwitterRateLimitError`` raised when rate limit for resource is</source>
          <target state="translated">- `` TwitterRateLimitError`` возникает, когда предел скорости для ресурса</target>
        </trans-unit>
        <trans-unit id="9c1bc4e366e22f4d7e68ae29c5c9a2578fc57c51" translate="yes" xml:space="preserve">
          <source>.. code:: pyhton</source>
          <target state="translated">.. code :: pyhton</target>
        </trans-unit>
        <trans-unit id="4dbd0b2d7b0c9f16a99b698bc9ae7c92672756d5" translate="yes" xml:space="preserve">
          <source>.. code:: python</source>
          <target state="translated">.. code :: python</target>
        </trans-unit>
        <trans-unit id="0a609df2094fbc8978f3d7af0d237965826e1a4b" translate="yes" xml:space="preserve">
          <source>.. step-1-creating-a-client-instance-1:</source>
          <target state="translated">.. шаг 1-создание-клиент-экземпляра-1:</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="8aeb8f26da76c5814e85f4cf46b1687dc0efab47" translate="yes" xml:space="preserve">
          <source>400 lines of code.</source>
          <target state="translated">400 строк кода.</target>
        </trans-unit>
        <trans-unit id="a7e9e685ffa9bc2ea7a32b2ca97495fffb98da72" translate="yes" xml:space="preserve">
          <source>@staticmethod</source>
          <target state="translated">@staticmethod</target>
        </trans-unit>
        <trans-unit id="7e3a9ef5f548c93df9139cf77b9cd76728943294" translate="yes" xml:space="preserve">
          <source>ACCESS_TOKEN = token.oauth_token</source>
          <target state="translated">ACCESS_TOKEN=token.oauth_token</target>
        </trans-unit>
        <trans-unit id="e52576efb1e69d1dab331bc473fe5f571bd274ac" translate="yes" xml:space="preserve">
          <source>ACCESS_TOKEN,</source>
          <target state="translated">ACCESS_TOKEN,</target>
        </trans-unit>
        <trans-unit id="55fe673a4e3a7e76d2c127624d143aa00c493492" translate="yes" xml:space="preserve">
          <source>ACCESS_TOKEN, ACCESS_TOKEN_SECRET)</source>
          <target state="translated">ACCESS_TOKEN,ACCESS_TOKEN_SECRET)</target>
        </trans-unit>
        <trans-unit id="1dc81950496612106b41c9db2679515aa3bed0a5" translate="yes" xml:space="preserve">
          <source>ACCESS_TOKEN_SECRET = token.oauth_token_secret</source>
          <target state="translated">ACCESS_TOKEN_SECRET=token.oauth_token_secret</target>
        </trans-unit>
        <trans-unit id="2053763ec26462cc686d31a56074bc40cf161561" translate="yes" xml:space="preserve">
          <source>ACCESS_TOKEN_SECRET)</source>
          <target state="translated">ACCESS_TOKEN_SECRET)</target>
        </trans-unit>
        <trans-unit id="cb76f528581433f070d0eb7e7120f4eefbf85032" translate="yes" xml:space="preserve">
          <source>API out of the box. Access to the Streaming API is provided by a special</source>
          <target state="translated">API из коробки.Доступ к Потоковому API предоставляется специальным</target>
        </trans-unit>
        <trans-unit id="5b23a19187efc619a9159284d4aca3e0ff05a8e5" translate="yes" xml:space="preserve">
          <source>API resources needed). This allows ``birdy`` to cover all existing</source>
          <target state="translated">Необходимые ресурсы API).Это позволяет &quot;птичкам&quot; охватить все существующие</target>
        </trans-unit>
        <trans-unit id="4678b7a293129b4f9fcdfecd7243d1136b67aed7" translate="yes" xml:space="preserve">
          <source>Actually any call can be written in this alternative syntax, use</source>
          <target state="translated">На самом деле любой вызов может быть записан в этом альтернативном синтаксисе,используйте</target>
        </trans-unit>
        <trans-unit id="ff1a7ac92d799273be7e95e2d83079ed73b7b945" translate="yes" xml:space="preserve">
          <source>After authorizing your application on Twitter, the user will be</source>
          <target state="translated">После авторизации вашего приложения в Twitter,пользователь будет</target>
        </trans-unit>
        <trans-unit id="8b3d1727015e4ee14b8bd133b8b9a7a47ed3dae0" translate="yes" xml:space="preserve">
          <source>And for **Site** stream resource **GET site** (`Twitter</source>
          <target state="translated">А для **сайта**потокового ресурса **ГЕТ-сайта**(`Twitter</target>
        </trans-unit>
        <trans-unit id="a7f2dc153b437b545ce3632a685d02884ca2e8b8" translate="yes" xml:space="preserve">
          <source>Another use of subclassing is configuration of ``requests.Session``</source>
          <target state="translated">Другим использованием подклассов является настройка ``запросов.сессии``.</target>
        </trans-unit>
        <trans-unit id="85ee57d843f22dc475ebfe89dde6d958e54749a8" translate="yes" xml:space="preserve">
          <source>Any other useful features I should know about?</source>
          <target state="translated">Есть ли другие полезные функции,о которых мне следует знать?</target>
        </trans-unit>
        <trans-unit id="1815de0a89a3517ba9c15ab591fb17902d074031" translate="yes" xml:space="preserve">
          <source>ApiResponse</source>
          <target state="translated">ApiResponse</target>
        </trans-unit>
        <trans-unit id="deedcf75db0063f7894c1a7b1516a526c9aa30d7" translate="yes" xml:space="preserve">
          <source>Automatic JSON decoding</source>
          <target state="translated">Автоматическое декодирование JSON</target>
        </trans-unit>
        <trans-unit id="455c797ebc4aaf5ded14349f027132217907ac69" translate="yes" xml:space="preserve">
          <source>Before you get started, you will need to</source>
          <target state="translated">Прежде чем вы начнете,вам нужно будет</target>
        </trans-unit>
        <trans-unit id="cf8f18e2ab311bc31df5921c37e53ba09964105e" translate="yes" xml:space="preserve">
          <source>By now it should be clear what happens above, ``birdy`` builds the API</source>
          <target state="translated">К настоящему моменту должно быть ясно,что происходит выше,``birdy`` строит API.</target>
        </trans-unit>
        <trans-unit id="2283965fcf4b1ff0b153afcee7d412dc6534a5f6" translate="yes" xml:space="preserve">
          <source>CALLBACK_URL = 'https://127.0.0.1:8000/callback'</source>
          <target state="translated">CALLBACK_URL='https://127.0.0.1:8000/callback'.</target>
        </trans-unit>
        <trans-unit id="8584bdec4ad1c04eb621ff5e7e2657f33a66da28" translate="yes" xml:space="preserve">
          <source>CONSUMER_KEY = 'YOUR_APPS_CONSUMER_KEY'</source>
          <target state="translated">CONSUMER_KEY='ВАШИ_APPS_CONSUMER_KEY'.</target>
        </trans-unit>
        <trans-unit id="3ae6802f0a91f0fef5fc197e52cc92d7ff634fd8" translate="yes" xml:space="preserve">
          <source>CONSUMER_SECRET = 'YOUR_APPS_CONSUMER_SECRET'</source>
          <target state="translated">CONSUMER_SECRET='ВАШИ_APPS_CONSUMER_SECRET'.</target>
        </trans-unit>
        <trans-unit id="b5d06f9a5d14a104d38affcef01a2403376f646d" translate="yes" xml:space="preserve">
          <source>CONSUMER_SECRET,</source>
          <target state="translated">ПОТРЕБИТЕЛЬСКАЯ ТАЙНА,</target>
        </trans-unit>
        <trans-unit id="b0f731c205205b081f2cc7bcd97a92b9dbe0a81e" translate="yes" xml:space="preserve">
          <source>Calls to REST API resources return a ``ApiResponse``, which in addition</source>
          <target state="translated">Призывы к ресурсам REST API возвращают `Апириономию`,которая,кроме того</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Кредиты</target>
        </trans-unit>
        <trans-unit id="d1f578af74d06c1bbedb462a7fc53ec2b2b83ab3" translate="yes" xml:space="preserve">
          <source>Customize and extend through subclassing</source>
          <target state="translated">Настройка и расширение через подкласс</target>
        </trans-unit>
        <trans-unit id="efca7c6833e4e5fc5bfb4f6b78b2f01781385d7c" translate="yes" xml:space="preserve">
          <source>Direct the user to Twitter authorization url obtained from</source>
          <target state="translated">Направьте пользователя на авторизацию в Twitter url,полученную от</target>
        </trans-unit>
        <trans-unit id="3d8590d5b44d9b9a3476324b1955d57fa0707dff" translate="yes" xml:space="preserve">
          <source>Django and Flask examples:</source>
          <target state="translated">Примеры Джанго и Флэска:</target>
        </trans-unit>
        <trans-unit id="85667d7bd9116ad4a89d4a3415f7b4d1df34cc3c" translate="yes" xml:space="preserve">
          <source>Do you accept contributions and feature requests?</source>
          <target state="translated">Принимаете ли вы заявки на участие и участие в конкурсах?</target>
        </trans-unit>
        <trans-unit id="b8c1077eecbafcb43b384f58897d9e12da1bcbb6" translate="yes" xml:space="preserve">
          <source>Dynamic URL example (**POST statuses/destroy/:id**):</source>
          <target state="translated">Пример динамического URL (**POST статусы/уничтожение/:id**):</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Особенности</target>
        </trans-unit>
        <trans-unit id="6d78eceb59dc6ba18f02102951cc66f0bd094072" translate="yes" xml:space="preserve">
          <source>Finally, ``birdy`` is simple and explicit by design, besides error</source>
          <target state="translated">И,наконец,``birdy`'' проста и ясна по своей конструкции,кроме ошибки.</target>
        </trans-unit>
        <trans-unit id="ef73ab56544a552df8e34fcace615fbae8600b0d" translate="yes" xml:space="preserve">
          <source>First you need to import the ``UserClient`` and create an instance with</source>
          <target state="translated">Сначала вам нужно импортировать ``UerClient`` и создать экземпляр с помощью команды</target>
        </trans-unit>
        <trans-unit id="033f7af6c91919f26b68116740d82d1b3ddb843e" translate="yes" xml:space="preserve">
          <source>First you will need to import a client, here we import UserClient</source>
          <target state="translated">Сначала вам нужно импортировать клиента,здесь мы импортируем UserClient</target>
        </trans-unit>
        <trans-unit id="75fec402ac00d5f676c8efe50681a14c14584f2b" translate="yes" xml:space="preserve">
          <source>For **User** stream resource **GET user** (`Twitter</source>
          <target state="translated">Для потокового ресурса **User****GET пользователя**(`Twitter</target>
        </trans-unit>
        <trans-unit id="90c6b68e0cbcda6dbb447c21c6f24d7fd396fa17" translate="yes" xml:space="preserve">
          <source>For OAuth2 you will be using the ``AppClient``, so first you need to</source>
          <target state="translated">Для OAuth2 вы будете использовать ``AppClient`,так что сначала вам необходимо</target>
        </trans-unit>
        <trans-unit id="38540de163365f877f181f95a7f34e37f6eadb13" translate="yes" xml:space="preserve">
          <source>For cases when dynamic values are part of the API resource URL, like</source>
          <target state="translated">Для случаев,когда динамические значения являются частью URL ресурса API,как например</target>
        </trans-unit>
        <trans-unit id="e1f99c83297a7db7743534f3c1fd0ca27c2f1e4e" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t wish to use ``JSONObject`` you have to</source>
          <target state="translated">Например, если вы не хотите использовать JSONObject, вам необходимо</target>
        </trans-unit>
        <trans-unit id="dd598c8d7f0fef40263537ccdacdc88c6001c4c8" translate="yes" xml:space="preserve">
          <source>GET example (**GET users/show**):</source>
          <target state="translated">Пример GET (**GET пользователи/показ**):</target>
        </trans-unit>
        <trans-unit id="970adb4b87b92c9ec89047469096a97d87bd9a67" translate="yes" xml:space="preserve">
          <source>Great, what about authorization? How do I get my access tokens?</source>
          <target state="translated">Отлично,а как же авторизация? Как мне получить мои жетоны доступа?</target>
        </trans-unit>
        <trans-unit id="d210c1258cb63c86f64060ae44b89f2e1d6d9a05" translate="yes" xml:space="preserve">
          <source>If you have a Desktop or Mobile app, ``OAUTH_VERIFIER`` is the PIN</source>
          <target state="translated">Если у вас есть приложение для рабочего стола или мобильного телефона,то `OAUTH_VERIFIER`-это PIN-код.</target>
        </trans-unit>
        <trans-unit id="6b8007cb372c5d9b4228ebb290ead37c8c699224" translate="yes" xml:space="preserve">
          <source>If you need to contact me, you can find me on Twitter</source>
          <target state="translated">Если тебе нужно связаться со мной,ты можешь найти меня в Твиттере.</target>
        </trans-unit>
        <trans-unit id="b0664fa538dc4ac93fa91ca0aaf69f7ecd3185e1" translate="yes" xml:space="preserve">
          <source>Import client and initialize it:</source>
          <target state="translated">Импортируйте клиента и инициализируйте его:</target>
        </trans-unit>
        <trans-unit id="0135ab4734322e749feb1f512ccf324c3778d15e" translate="yes" xml:space="preserve">
          <source>Includes full support for both **OAuth1** (user) and **OAuth2**</source>
          <target state="translated">Включает полную поддержку как для **OAuth1**(пользователь),так и для **OAuth2**.</target>
        </trans-unit>
        <trans-unit id="760c5d1b9cccbfab9b12667f0f167e396c4b85c8" translate="yes" xml:space="preserve">
          <source>Informative exceptions</source>
          <target state="translated">Информационные исключения</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="2ca79fcc2c9e5a450b6c1245b755a43fe4e7e26e" translate="yes" xml:space="preserve">
          <source>Is Streaming API supported as well?</source>
          <target state="translated">Поддерживается ли Streaming API?</target>
        </trans-unit>
        <trans-unit id="31120786aea6a618b3299a9025f55c419823f596" translate="yes" xml:space="preserve">
          <source>JSON data returned by the REST and Streaming API is automatically</source>
          <target state="translated">JSON данные,возвращаемые API REST и Streaming автоматически</target>
        </trans-unit>
        <trans-unit id="aeb7fbde09f4867d617fabd5accd2611571998bf" translate="yes" xml:space="preserve">
          <source>JSONObject</source>
          <target state="translated">JSONObject</target>
        </trans-unit>
        <trans-unit id="d434352fb90010ca1272960ceac09a8c7ec644de" translate="yes" xml:space="preserve">
          <source>Keep in mind that I work on this project on my free time, so I might</source>
          <target state="translated">Имейте в виду,что я работаю над этим проектом в свободное время,так что я мог бы</target>
        </trans-unit>
        <trans-unit id="b50019109558e6c4444362a550f10e6383960735" translate="yes" xml:space="preserve">
          <source>Keep in mind that OAuth2 authenticated requests are **read-only** and</source>
          <target state="translated">Имейте в виду,что запросы OAuth2 аутентифицированы только для чтения**и</target>
        </trans-unit>
        <trans-unit id="7487b0a112a6c856e8f0a172046e0f3025598e81" translate="yes" xml:space="preserve">
          <source>Like before the part after ``client.api`` gets converted to the correct</source>
          <target state="translated">Как и до того,как часть после ``client.api`'' будет преобразована в правильную</target>
        </trans-unit>
        <trans-unit id="54e064a697624fe206f1c41fb9b991d6ec3acf84" translate="yes" xml:space="preserve">
          <source>Making a post request is similar, if for example, you would like to post</source>
          <target state="translated">Создание запроса похоже на то,если,например,вы хотите отправить сообщение.</target>
        </trans-unit>
        <trans-unit id="0a1396476b4d81335d3edcf7797ad88b38ff01d7" translate="yes" xml:space="preserve">
          <source>Next you need to fetch request token from Twitter. If you are building a</source>
          <target state="translated">Далее вам нужно получить токен-запрос в Твиттере.Если вы строите</target>
        </trans-unit>
        <trans-unit id="67d0a65c35ba412df636f9c2bbb503777945244d" translate="yes" xml:space="preserve">
          <source>Now that you have the final access token and secret you can save</source>
          <target state="translated">Теперь,когда у вас есть последний токен доступа и секрет,вы можете сохранить</target>
        </trans-unit>
        <trans-unit id="6eca27477db6491270ced90f3fc58d1838c0e75d" translate="yes" xml:space="preserve">
          <source>OAUTH_VERIFIER = request.GET['oauth_verifier']</source>
          <target state="translated">OAUTH_VERIFIER=request.GET['oauth_verifier']</target>
        </trans-unit>
        <trans-unit id="d5357746ed129ff5be234bd327439c88b14ffd66" translate="yes" xml:space="preserve">
          <source>OAUTH_VERIFIER = request.args.get('oauth_verifier')</source>
          <target state="translated">OAUTH_VERIFIER=request.args.get('oauth_verifier')</target>
        </trans-unit>
        <trans-unit id="a530f8e9bd063bbc12ef14567839894d38f001b1" translate="yes" xml:space="preserve">
          <source>OAuth1 workflow for user authenticated requests (UserClient)</source>
          <target state="translated">Рабочий процесс OAuth1 для аутентифицированных запросов пользователей (UserClient)</target>
        </trans-unit>
        <trans-unit id="b57de65c8091c45eff3a811ab3b3200a78b34343" translate="yes" xml:space="preserve">
          <source>OAuth2 workflow for app authenticated requests (AppClient)</source>
          <target state="translated">Рабочий процесс OAuth2 для аутентифицированных запросов приложений (AppClient)</target>
        </trans-unit>
        <trans-unit id="8703db1c83cbf7d48f9a29ddb4068ea1500f0cb4" translate="yes" xml:space="preserve">
          <source>OAuth2 workflow is much simpler compared to OAuth1, to obtain the access</source>
          <target state="translated">Рабочий процесс OAuth2 намного проще по сравнению с OAuth1,для получения доступа</target>
        </trans-unit>
        <trans-unit id="48196877cd8478e3ccefc886a4a55c45cd40e9f5" translate="yes" xml:space="preserve">
          <source>OK, I&amp;rsquo;m sold, but how do I use it? How does this dynamic API construction work?</source>
          <target state="translated">Хорошо, я продан, но как мне это использовать? Как работает эта динамическая конструкция API?</target>
        </trans-unit>
        <trans-unit id="e34bed4eb8a256aa2cdcb4f079975d95dff3fd26" translate="yes" xml:space="preserve">
          <source>Of course, ``birdy`` comes with some handy features, to ease your</source>
          <target state="translated">Конечно,&quot;птичка&quot; поставляется с некоторыми удобными функциями,чтобы облегчить ваши</target>
        </trans-unit>
        <trans-unit id="efc58c75ebfc73d563cee635ff7fefc80205c27e" translate="yes" xml:space="preserve">
          <source>Once you have the ``OAUTH_VERIFIER`` you can use it to obtain the final</source>
          <target state="translated">После того,как вы получите `ОАУТ_ВЕРФЬЕРА`,вы можете использовать его для получения финала</target>
        </trans-unit>
        <trans-unit id="31517a5106577943a69f32c22c4030d6657bd336" translate="yes" xml:space="preserve">
          <source>Or maybe, if you want global error handling for common errors, just</source>
          <target state="translated">Или,может быть,если вы хотите,чтобы глобальная обработка ошибок для обычных ошибок,просто</target>
        </trans-unit>
        <trans-unit id="4657d7e02bd45dd72347ed7304d78f4684060a58" translate="yes" xml:space="preserve">
          <source>Otherwise like this.</source>
          <target state="translated">Иначе так.</target>
        </trans-unit>
        <trans-unit id="02810a697c79547029a014ccf3883fb6eea76ab7" translate="yes" xml:space="preserve">
          <source>POST example (**POST statuses/update**):</source>
          <target state="translated">Пример POST (**Статусы POST/обновление**):</target>
        </trans-unit>
        <trans-unit id="47216a9a37afd9fac654e42b9cd024a8dc6d4fbf" translate="yes" xml:space="preserve">
          <source>Pass ``callback_url`` only if you have a Web app, Desktop and Mobile</source>
          <target state="translated">Pass ``callback_url`` только если у вас есть веб-приложение,рабочий стол и мобильный телефон</target>
        </trans-unit>
        <trans-unit id="3f96bf1756c103d6c64ffad92c41eb1c79e702b1" translate="yes" xml:space="preserve">
          <source>Question, comments, &amp;hellip;</source>
          <target state="translated">Вопрос, комментарии,&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="9c5786005414a724443a5a5189374fa69561d5a9" translate="yes" xml:space="preserve">
          <source>Save ``token.oauth_token`` and ``token.oauth_token_secret`` for later</source>
          <target state="translated">Сохранить ``токен.oauth_token` и ``токен.oauth_token_secret`` на потом</target>
        </trans-unit>
        <trans-unit id="98a023c2dbe364e7593c68234e994c67f4a792e3" translate="yes" xml:space="preserve">
          <source>Step 1: Creating a client instance</source>
          <target state="translated">Шаг 1:Создание клиентского экземпляра</target>
        </trans-unit>
        <trans-unit id="11885810b5c8f6aa54afed197ebcf5bec25d4ba5" translate="yes" xml:space="preserve">
          <source>Step 2: Get request token and authorization URL</source>
          <target state="translated">Шаг 2:Получить токен запроса и URL авторизации</target>
        </trans-unit>
        <trans-unit id="3e705bc06e1694436c8991ab18060514d500757d" translate="yes" xml:space="preserve">
          <source>Step 2: Getting the access token</source>
          <target state="translated">Шаг 2:Получение жетона доступа</target>
        </trans-unit>
        <trans-unit id="fb6f6837888bcf1f22e539de2547b69886fdbc53" translate="yes" xml:space="preserve">
          <source>Step 3: OAuth verification</source>
          <target state="translated">Шаг 3:Проверка OAuth</target>
        </trans-unit>
        <trans-unit id="5fce4cbd917bbb5bc0340846051df8d7528d0f04" translate="yes" xml:space="preserve">
          <source>StreamResponse</source>
          <target state="translated">StreamResponse</target>
        </trans-unit>
        <trans-unit id="12187e99a54e79d646692f675efcd21834d8e0d7" translate="yes" xml:space="preserve">
          <source>Streaming API example (**Public Stream POST statuses/filter**):</source>
          <target state="translated">Пример потокового API (**Статусы/фильтр POST публичного потока**):</target>
        </trans-unit>
        <trans-unit id="71a82c3c7ad882e1f28cd46886caeb28a6f71875" translate="yes" xml:space="preserve">
          <source>Subclassing a client and then using the subclass instance in your</source>
          <target state="translated">Подкласс клиента,а затем использование экземпляра подкласса в вашем</target>
        </trans-unit>
        <trans-unit id="63e920030982c1ac2e4bb469c3516ef92523165e" translate="yes" xml:space="preserve">
          <source>Supported Python version</source>
          <target state="translated">Поддерживаемая версия Python</target>
        </trans-unit>
        <trans-unit id="fc4e5222f29c3320b5d4c4ebb3d88bb928e44b08" translate="yes" xml:space="preserve">
          <source>Sure, since version 0.2, ``birdy`` comes with full support for Streaming</source>
          <target state="translated">Конечно,начиная с версии 0.2,``birdy` поставляется с полной поддержкой стриминга</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="c0d97f60faae0d814140ee4dc396f398467b95a7" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it you have successfully authorized the user, retrieved the</source>
          <target state="translated">Вот и все, что вы успешно авторизовали пользователя, получили</target>
        </trans-unit>
        <trans-unit id="dccbfe9bce7be5b52c9f27851a9fe4d0fbe33d7d" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it, you can start using the client immediately to make API</source>
          <target state="translated">Вот и все, вы можете сразу начать использовать клиент, чтобы сделать API</target>
        </trans-unit>
        <trans-unit id="c58ab3d0377c57da4c3f1bac1f0bd990c6e8bdc2" translate="yes" xml:space="preserve">
          <source>The concept behind ``birdy`` is so simple and awesome that it just had</source>
          <target state="translated">Концепция &quot;птички&quot; настолько проста и удивительна,что у нее только что было</target>
        </trans-unit>
        <trans-unit id="be2b493e3f9682c374b535d4b329d5a882c3357f" translate="yes" xml:space="preserve">
          <source>The easiest and recommended way to install ``birdy`` is from</source>
          <target state="translated">Самый простой и рекомендуемый способ установки ``birdy``-от</target>
        </trans-unit>
        <trans-unit id="335d0b6f4ef9300c15a0d274cf6c8ee8933a724e" translate="yes" xml:space="preserve">
          <source>The easiest way to show you is by example. Lets say you want to query</source>
          <target state="translated">Проще всего показать на примере.Допустим,вы хотите сделать запрос</target>
        </trans-unit>
        <trans-unit id="af5e090f526283fbc5a25a2fcdc7256ff0049dc0" translate="yes" xml:space="preserve">
          <source>There are 4 types of exceptions in ``birdy`` all subclasses of base</source>
          <target state="translated">В ``birdy` есть 4 типа исключений во всех подклассах базы</target>
        </trans-unit>
        <trans-unit id="c0e0f1da76f9e118cd1303c92023a78b5ea1c459" translate="yes" xml:space="preserve">
          <source>To access resources on the **Public** stream, like **POST</source>
          <target state="translated">Для доступа к ресурсам в потоке **Public**,например **POST</target>
        </trans-unit>
        <trans-unit id="92735a7c47ed0a5432a057b63fb355db2cf10787" translate="yes" xml:space="preserve">
          <source>To access the data in the stream you iterate over ``resource.stream()``</source>
          <target state="translated">Для доступа к данным в потоке вы выполняете итерацию через ``resource.stream()```.</target>
        </trans-unit>
        <trans-unit id="15ce40da04c03687752713dd4f91a9ccf8e843ec" translate="yes" xml:space="preserve">
          <source>To achieve this, ``birdy`` relies on established, battle tested python</source>
          <target state="translated">Для достижения этой цели,&quot;птичка&quot; полагается на установившегося,испытанного в бою питона.</target>
        </trans-unit>
        <trans-unit id="8237095c5b5b05becfe7dee055e7a232d6f40f08" translate="yes" xml:space="preserve">
          <source>To query the **GET /users/show** API resource and pass in the parameter</source>
          <target state="translated">Чтобы запросить ресурс **GET /users/show**API и передать его в параметре</target>
        </trans-unit>
        <trans-unit id="3df65905b47099932472799465786f1c3f677d20" translate="yes" xml:space="preserve">
          <source>To work with the Streaming API, first import the client and initialize</source>
          <target state="translated">Для работы с Потоковым API,сначала импортируйте клиента и инициализируйте</target>
        </trans-unit>
        <trans-unit id="3680e803f58ce4cf95fdfe33be76f85621f23aa8" translate="yes" xml:space="preserve">
          <source>Twitter API resources and any future additions, without the need to</source>
          <target state="translated">Твиттер API ресурсов и любые будущие дополнения,без необходимости</target>
        </trans-unit>
        <trans-unit id="f1fc9014a2ad03d27859e76bd8aa54e9597ca8d0" translate="yes" xml:space="preserve">
          <source>Twitter for @twitter user information. The Twitter API resource for this</source>
          <target state="translated">Твиттер для информации пользователя @twitter.API ресурса Twitter для этого</target>
        </trans-unit>
        <trans-unit id="c2cfb669036ca9298eb571eb67779a049cf98cd1" translate="yes" xml:space="preserve">
          <source>Twitter, to obtain your application&amp;rsquo;s ``CONSUMER_KEY`` and</source>
          <target state="translated">Twitter, чтобы получить CONSUMER_KEY вашего приложения и</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="b4c34f652b6aa8b3850e84c29fc3058aca99a9b4" translate="yes" xml:space="preserve">
          <source>Usually the above example would be shortened to just one line like this.</source>
          <target state="translated">Обычно вышеприведенный пример был бы сокращен до одной строки.</target>
        </trans-unit>
        <trans-unit id="2faa88d51c5f835c6b38e385e351c12fada14da7" translate="yes" xml:space="preserve">
          <source>What happens here is very simple, ``birdy`` translates the</source>
          <target state="translated">То,что здесь происходит,очень просто,``birdy`'' переводит</target>
        </trans-unit>
        <trans-unit id="112232caaa0b17846c33070f6279e0b53c91e273" translate="yes" xml:space="preserve">
          <source>When decoding JSON data, ``objects`` are, instead of a regular Python</source>
          <target state="translated">При декодировании данных JSON,``объекты` являются,вместо обычного Python.</target>
        </trans-unit>
        <trans-unit id="62be7b7a1fd3f418466d6aab25979969516b8b6f" translate="yes" xml:space="preserve">
          <source>Why another Python Twitter API client? Aren&amp;rsquo;t there enough?</source>
          <target state="translated">Зачем нужен еще один клиент Python Twitter API? Разве этого не достаточно?</target>
        </trans-unit>
        <trans-unit id="a74fbdfdded5152b7eb41ca451515ea1a5990a41" translate="yes" xml:space="preserve">
          <source>You will need to extract the ``OAUTH_VERIFIER`` from the URL. Most web</source>
          <target state="translated">Вам нужно будет извлечь ``OAUTH_VERIFIER`` из URL.Большинство веб</target>
        </trans-unit>
        <trans-unit id="be83600bea5d3f458e096154a631737b011fbefc" translate="yes" xml:space="preserve">
          <source>`GitHub &amp;lt;https://github.com/inueni/birdy/issues&amp;gt;`__ and we will take if</source>
          <target state="translated">`GitHub &amp;lt;https://github.com/inueni/birdy/issues&amp;gt;` __ и мы примем, если</target>
        </trans-unit>
        <trans-unit id="a8442bf65516b462c79ad88b9b2180f1d9f45200" translate="yes" xml:space="preserve">
          <source>`JSONObject &amp;lt;#jsonobject&amp;gt;`__</source>
          <target state="translated">`JSONObject &amp;lt;#jsonobject&amp;gt;` __</target>
        </trans-unit>
        <trans-unit id="85067fdf382fc680676b745c07f6e1db10afd1ab" translate="yes" xml:space="preserve">
          <source>`PyPI &amp;lt;https://pypi.python.org/pypi/birdy&amp;gt;`__</source>
          <target state="translated">`PyPI &amp;lt;https://pypi.python.org/pypi/birdy&amp;gt;` __</target>
        </trans-unit>
        <trans-unit id="71c337f5ef8ce107bf17a8b57dcae9045fca51dc" translate="yes" xml:space="preserve">
          <source>``AppClient`` respectively. While requests to API resources, like in</source>
          <target state="translated">`` AppClient '' соответственно. Пока запросы к ресурсам API, как в</target>
        </trans-unit>
        <trans-unit id="d2b0e9a40cb93bfc05926166898107258b98dd6b" translate="yes" xml:space="preserve">
          <source>``BirdyException`` (which is never directly raised).</source>
          <target state="translated">BirdyException (который никогда не вызывается напрямую).</target>
        </trans-unit>
        <trans-unit id="c2f31ceb4b1873e30adaf391d1671bcaa56e85be" translate="yes" xml:space="preserve">
          <source>``CONSUMER_SECRET``.</source>
          <target state="translated">CONSUMER_SECRET.</target>
        </trans-unit>
        <trans-unit id="c731c9fd1d128ba41f707c6b513cf2090f2e9561" translate="yes" xml:space="preserve">
          <source>``StreamClient`` can&amp;rsquo;t be used to obtain access tokens, but you can</source>
          <target state="translated">StreamClient нельзя использовать для получения токенов доступа, но вы можете</target>
        </trans-unit>
        <trans-unit id="52c1c1c2f993ca97a3fbbed5df415fd0ee4f1dea" translate="yes" xml:space="preserve">
          <source>``StreamClient``.</source>
          <target state="translated">`` StreamClient ''.</target>
        </trans-unit>
        <trans-unit id="c58976db324eac17d53dc71172b43e168c69b8a2" translate="yes" xml:space="preserve">
          <source>``StreamResponse`` is returned when calling Streaming API resources and</source>
          <target state="translated">StreamResponse возвращается при вызове ресурсов Streaming API и</target>
        </trans-unit>
        <trans-unit id="ca7d3d9be3dafa8ed6006cac49cfe4c135ae1208" translate="yes" xml:space="preserve">
          <source>``TwitterApiError`` and ``TwitterClientError`` instances (exepct for</source>
          <target state="translated">Экземпляры TwitterApiError и TwitterClientError (кроме</target>
        </trans-unit>
        <trans-unit id="b9de81c138d0128dac8a3ed90764e7114075532c" translate="yes" xml:space="preserve">
          <source>``TwitterApiError`` subclass</source>
          <target state="translated">Подкласс TwitterApiError</target>
        </trans-unit>
        <trans-unit id="f19e65ab13facae8c2429ac72777c71b5f61fcf2" translate="yes" xml:space="preserve">
          <source>``access_token`` for later use. You initialize the client with a saved</source>
          <target state="translated">access_token для дальнейшего использования. Вы инициализируете клиента с сохраненным</target>
        </trans-unit>
        <trans-unit id="306545a73eff18c329950a172e99a7bad69edfcc" translate="yes" xml:space="preserve">
          <source>``birdy`` is a super awesome Twitter API client for Python in just a</source>
          <target state="translated">Birdy - это потрясающий клиент API Twitter для Python всего за</target>
        </trans-unit>
        <trans-unit id="eabc9813e1e6e8b71a29c6d1312759f1a120d90e" translate="yes" xml:space="preserve">
          <source>``birdy`` supports an alternative, dictionary lookup like, syntax. For</source>
          <target state="translated">Birdy поддерживает альтернативный синтаксис, похожий на поиск по словарю. Для</target>
        </trans-unit>
        <trans-unit id="77b42a78de1a42f1e538b0f71b8635923f2e18b1" translate="yes" xml:space="preserve">
          <source>``birdy`` supports both **OAuth1** and **OAuth2** authentication</source>
          <target state="translated">Birdy поддерживает аутентификацию как ** OAuth1 **, так и ** OAuth2 **</target>
        </trans-unit>
        <trans-unit id="3202219dc08fd47f19b8649a54351f7f142c9878" translate="yes" xml:space="preserve">
          <source>``birdy`` was built with subclassing in mind, if you wish to change the</source>
          <target state="translated">`` birdy '' был построен с учетом подклассов, если вы хотите изменить</target>
        </trans-unit>
        <trans-unit id="afa2b0f270be6ad0d3ca7f305bd696773d0a5d8d" translate="yes" xml:space="preserve">
          <source>``birdy`` works with both ``python2`` (2.7+) and ``python3`` (3.4+).</source>
          <target state="translated">Birdy работает как с python2 (2.7+), так и с python3 (3.4+).</target>
        </trans-unit>
        <trans-unit id="1a83c6de5da238182073cd8549dbc9a11ad6fdc2" translate="yes" xml:space="preserve">
          <source>``birdy`` would not exists if not for the excellent</source>
          <target state="translated">`` птичка '' не существовала бы, если бы не отличный</target>
        </trans-unit>
        <trans-unit id="b3a600f974c00295917ff04368c6cc76c916bca8" translate="yes" xml:space="preserve">
          <source>``token.auth_url``.</source>
          <target state="translated">`` token.auth_url ''.</target>
        </trans-unit>
        <trans-unit id="bb954c8c553a75a0ee5c759d98cff5cbf01d1c95" translate="yes" xml:space="preserve">
          <source>``token.oauth_token`` and ``token.oauth_token_secret`` to the database</source>
          <target state="translated">token.oauth_token и token.oauth_token_secret в базе данных</target>
        </trans-unit>
        <trans-unit id="33eee2b7f639b1c62e85323e7eac3aa4eb9eb680" translate="yes" xml:space="preserve">
          <source>``users.show`` part after ``client.api`` into the appropriate API</source>
          <target state="translated">часть users.show после client.api в соответствующий API</target>
        </trans-unit>
        <trans-unit id="ba9783a407512555e6a869ba523d7879a273e47d" translate="yes" xml:space="preserve">
          <source>`register &amp;lt;https://dev.twitter.com/apps&amp;gt;`__ your application with</source>
          <target state="translated">`register &amp;lt;https://dev.twitter.com/apps&amp;gt;` __ ваше приложение с</target>
        </trans-unit>
        <trans-unit id="cf3ad2e9de956929f91f54d065b8aa2774ef9227" translate="yes" xml:space="preserve">
          <source>`requests &amp;lt;http://www.python-requests.org&amp;gt;`__ and</source>
          <target state="translated">`запросы &amp;lt;http://www.python-requests.org&amp;gt;` __ и</target>
        </trans-unit>
        <trans-unit id="7709e69fe97a93ee6fd94abfb08c457c208209b2" translate="yes" xml:space="preserve">
          <source>`requests-oauthlib &amp;lt;https://requests-oauthlib.readthedocs.org/en/latest/&amp;gt;`__</source>
          <target state="translated">`request-oauthlib &amp;lt;https://requests-oauthlib.readthedocs.org/en/latest/&amp;gt;` __</target>
        </trans-unit>
        <trans-unit id="0fc98320bb59e51d090135159a1215bf4b5e1cd0" translate="yes" xml:space="preserve">
          <source>a status update, this is how to do it. The API resource is **POST</source>
          <target state="translated">обновление статуса,вот как это сделать.Ресурс API-**POST</target>
        </trans-unit>
        <trans-unit id="ea4c48b217b8cce693d22592f271c582ffaa0ce1" translate="yes" xml:space="preserve">
          <source>above examples are the same in both clients, the workflow for obtaining</source>
          <target state="translated">вышеприведенные примеры одинаковы для обоих клиентов,рабочий процесс для получения</target>
        </trans-unit>
        <trans-unit id="bae792e189a91cfa7fb3887fb264d053ec65277d" translate="yes" xml:space="preserve">
          <source>access token and secret. To do that you will need to create a new</source>
          <target state="translated">жетон доступа и секрет.Для этого вам нужно будет создать новый</target>
        </trans-unit>
        <trans-unit id="7b7d0b02a3497f61a7a28747eb9d235bf174caff" translate="yes" xml:space="preserve">
          <source>access token retrieval errors) provide a informative error description</source>
          <target state="translated">ошибки извлечения токена доступа)предоставить информативное описание ошибки</target>
        </trans-unit>
        <trans-unit id="94a76e19533701f28d737fd2a922d9c4a4a137fa" translate="yes" xml:space="preserve">
          <source>access tokens is slightly different.</source>
          <target state="translated">жетоны доступа немного отличаются.</target>
        </trans-unit>
        <trans-unit id="320b7a4a08d3c90c3aeb0ca9706a5fad621502c1" translate="yes" xml:space="preserve">
          <source>access_token = client.get_access_token()</source>
          <target state="translated">access_token=client.get_access_token()</target>
        </trans-unit>
        <trans-unit id="ee89d9367c7bbca55f70d53630fcbb4b58efd69c" translate="yes" xml:space="preserve">
          <source>and ``ACCESS_TOKEN_SECRET`` obtained in *Step 2* and then fetch the</source>
          <target state="translated">и `ACCESS_TOKEN_SECRET`,полученный в *Step 2*,а затем извлекающий</target>
        </trans-unit>
        <trans-unit id="2806b2e6323494742d9f7806530f8cb07f550435" translate="yes" xml:space="preserve">
          <source>apps **do not** require it.</source>
          <target state="translated">приложения не требуют этого.</target>
        </trans-unit>
        <trans-unit id="3bb492e3e325b72bb3eb939ff658bcfbd46debed" translate="yes" xml:space="preserve">
          <source>are welcome, the proper way in both cases is to first open an issue on</source>
          <target state="translated">приветствуются,правильным способом в обоих случаях является сначала открыть вопрос о</target>
        </trans-unit>
        <trans-unit id="9951129d06e8d00248897b5fdd1c18d26a2d78e0" translate="yes" xml:space="preserve">
          <source>automatically construct API calls (no individual wrapper functions for</source>
          <target state="translated">автоматическое построение вызовов API (нет отдельных функций обертки для</target>
        </trans-unit>
        <trans-unit id="882527abfa8f2cb611a2fb1ce164027aaa4a5f7e" translate="yes" xml:space="preserve">
          <source>birdy</source>
          <target state="translated">птичий сайт</target>
        </trans-unit>
        <trans-unit id="5b6ddd6af4d4052440b7d01452fede2f9ddee672" translate="yes" xml:space="preserve">
          <source>birdy is a super awesome Twitter API client for Python.</source>
          <target state="translated">birdy-супер потрясающий клиент API в Твиттере для Python.</target>
        </trans-unit>
        <trans-unit id="79134102189ab60ea23b877d5d885e8905e1f4bd" translate="yes" xml:space="preserve">
          <source>checking rate limits) and resource URL.</source>
          <target state="translated">проверка скоростных лимитов)и URL ресурса.</target>
        </trans-unit>
        <trans-unit id="cde5b652691fcdbf24890c2421240acdee18864f" translate="yes" xml:space="preserve">
          <source>class MyClient(UserClient):</source>
          <target state="translated">класс MyClient(UserClient):</target>
        </trans-unit>
        <trans-unit id="f9f2696f03fce1e91a897192b087b312dba376ae" translate="yes" xml:space="preserve">
          <source>client = AppClient(CONSUMER_KEY, CONSUMER_SECRET)</source>
          <target state="translated">клиент=AppClient(CONSUMER_KEY,CONSUMER_SECRET)</target>
        </trans-unit>
        <trans-unit id="712649405523f400b5555e00d53529e659372ec0" translate="yes" xml:space="preserve">
          <source>client = AppClient(CONSUMER_KEY, CONSUMER_SECRET, SAVED_ACCESS_TOKEN)</source>
          <target state="translated">клиент=AppClient(CONSUMER_KEY,CONSUMER_SECRET,SAVED_ACCESS_TOKEN)</target>
        </trans-unit>
        <trans-unit id="352510fefe658ddafeb6e0e8c0ce89ee11863b78" translate="yes" xml:space="preserve">
          <source>client = MyClient(...)</source>
          <target state="translated">клиент=MyClient(...)</target>
        </trans-unit>
        <trans-unit id="d959e0c58cb1fd5c648cb8cf41841da51c9cf1cb" translate="yes" xml:space="preserve">
          <source>client = StreamClient(CONSUMER_KEY,</source>
          <target state="translated">клиент=StreamClient(CONSUMER_KEY,</target>
        </trans-unit>
        <trans-unit id="e2236cf9dab06d815dd5910b47cfad498996149d" translate="yes" xml:space="preserve">
          <source>client = UserClient(CONSUMER_KEY,</source>
          <target state="translated">клиент=UserClient(CONSUMER_KEY,</target>
        </trans-unit>
        <trans-unit id="4ed91f51a2693f30bdbdb46ae3b31c6fe5fbf5fe" translate="yes" xml:space="preserve">
          <source>client = UserClient(CONSUMER_KEY, CONSUMER_SECRET)</source>
          <target state="translated">клиент=UserClient(CONSUMER_KEY,CONSUMER_SECRET)</target>
        </trans-unit>
        <trans-unit id="b3c52f5cbcc9576faae9e0ec330fe38964f2ab9e" translate="yes" xml:space="preserve">
          <source>client = UserClient(CONSUMER_KEY, CONSUMER_SECRET,</source>
          <target state="translated">клиент=UserClient(CONSUMER_KEY,CONSUMER_SECRET,</target>
        </trans-unit>
        <trans-unit id="6745c4615b39725094d65f83d54cedfa747c5c2a" translate="yes" xml:space="preserve">
          <source>client, that covers the whole Twitter REST API in just a little under</source>
          <target state="translated">клиент,который покрывает весь API Твиттера REST чуть меньше.</target>
        </trans-unit>
        <trans-unit id="bb408649b31a6b181ecb516d3f7f8ad90bbdddcd" translate="yes" xml:space="preserve">
          <source>code, you can skip the part about extraction.</source>
          <target state="translated">код,ты можешь пропустить часть о извлечении.</target>
        </trans-unit>
        <trans-unit id="35525826744b0caa74e615fd6b94426d62a44c44" translate="yes" xml:space="preserve">
          <source>codeis actually **the recommended way** of using ``birdy``.</source>
          <target state="translated">на самом деле это **рекомендованный способ**использования ``birdy``.</target>
        </trans-unit>
        <trans-unit id="287552cafc1bf3240b751eb462b7642a24fa2539" translate="yes" xml:space="preserve">
          <source>coverage &amp;lt;#ok-im-sold-but-how-do-i-use-it-how-does-this-dynamic-api-construction-work&amp;gt;`__</source>
          <target state="translated">покрытие &amp;lt;# ok-im-sold-but-how-do-i-use-it-how-does-this-dynamic-api-construction-work&amp;gt; `__</target>
        </trans-unit>
        <trans-unit id="41e9ea12e7c462a6fce5e908f5bc932c257a697c" translate="yes" xml:space="preserve">
          <source>decoded to native Python objects, no extra coding necessary, start using</source>
          <target state="translated">декодированный на родные объекты Python,без дополнительной кодировки,начните использовать</target>
        </trans-unit>
        <trans-unit id="3eea610aab6f67986abd40a7cf891c74ddaf7e3f" translate="yes" xml:space="preserve">
          <source>def configure_oauth_session(self, session):</source>
          <target state="translated">def configure_oauth_session(self,session):</target>
        </trans-unit>
        <trans-unit id="d76e2d6c9041afb5e42e9bb6711a0182ee9c82c0" translate="yes" xml:space="preserve">
          <source>def get_json_object_hook(data):</source>
          <target state="translated">def get_json_object_hook(data):</target>
        </trans-unit>
        <trans-unit id="c15e115e3c541140e568c336a391fadd041205a8" translate="yes" xml:space="preserve">
          <source>def handle_response(self, method, response):</source>
          <target state="translated">def handle_response(self,метод,ответ):</target>
        </trans-unit>
        <trans-unit id="c1d4d5137698587dcbae34e48e7a079a7c709447" translate="yes" xml:space="preserve">
          <source>development, right out of the box. Lets take a look at some of the</source>
          <target state="translated">развитие,прямо из коробки.Давайте посмотрим на некоторые</target>
        </trans-unit>
        <trans-unit id="1127c68d0cbfa656ca91b2f55bd726df8997a337" translate="yes" xml:space="preserve">
          <source>dictionary, converted to a ``JSONObject``, which is dictionary subclass</source>
          <target state="translated">словарь,преобразованный в `JSONObject`,который является подклассом словаря.</target>
        </trans-unit>
        <trans-unit id="34a7ab4c5fd0c86659a35b9aba4911ade569726c" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1&amp;gt;`__ for more information.</source>
          <target state="translated">docs &amp;lt;https://dev.twitter.com/docs/api/1.1&amp;gt; `__ для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="918c094e96c7c0be1ab3c8d4a4bfe87002250214" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1/get/site&amp;gt;`__)</source>
          <target state="translated">документы &amp;lt;https://dev.twitter.com/docs/api/1.1/get/site&amp;gt; `__)</target>
        </trans-unit>
        <trans-unit id="482301279f5d061f6072aadc7bb5df21ffd560e8" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1/get/user&amp;gt;`__)</source>
          <target state="translated">документы &amp;lt;https://dev.twitter.com/docs/api/1.1/get/user&amp;gt; `__)</target>
        </trans-unit>
        <trans-unit id="f0095117171dc881f118e2c51ce298904f492074" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1/get/users/show&amp;gt;`__).</source>
          <target state="translated">документы &amp;lt;https://dev.twitter.com/docs/api/1.1/get/users/show&amp;gt; `__).</target>
        </trans-unit>
        <trans-unit id="d142cea356cca977784f22a732291887d6b8c345" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1/post/statuses/destroy/:id&amp;gt;`__),</source>
          <target state="translated">docs &amp;lt;https://dev.twitter.com/docs/api/1.1/post/statuses/destroy/:id&amp;gt; `__),</target>
        </trans-unit>
        <trans-unit id="3b252efcbd2a32f3a8047b0db2a2f2f0c0cd1c6e" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1/post/statuses/filter&amp;gt;`__)</source>
          <target state="translated">документы &amp;lt;https://dev.twitter.com/docs/api/1.1/post/statuses/filter&amp;gt; `__)</target>
        </trans-unit>
        <trans-unit id="4d086e70326934d1837379382a923a34b67a40f1" translate="yes" xml:space="preserve">
          <source>docs &amp;lt;https://dev.twitter.com/docs/api/1.1/post/statuses/update&amp;gt;`__).</source>
          <target state="translated">документы &amp;lt;https://dev.twitter.com/docs/api/1.1/post/statuses/update&amp;gt; `__).</target>
        </trans-unit>
        <trans-unit id="1516667e627244a9e19166bcafe7438263184a9a" translate="yes" xml:space="preserve">
          <source>example above. Some more examples:</source>
          <target state="translated">пример выше.Еще несколько примеров:</target>
        </trans-unit>
        <trans-unit id="95a2a293ba052c41eb472e41e866598fdb09ec3b" translate="yes" xml:space="preserve">
          <source>example, deleting a tweet with id &amp;lsquo;240854986559455234&amp;rsquo; looks like this.</source>
          <target state="translated">Например, удаление твита с идентификатором 240854986559455234 выглядит так.</target>
        </trans-unit>
        <trans-unit id="0d533c794a3cd2f366c681c43f646fd182d94ad6" translate="yes" xml:space="preserve">
          <source>except TwitterApiError, e:</source>
          <target state="translated">кроме TwitterApiError,e:</target>
        </trans-unit>
        <trans-unit id="98d7b560044af8bf0f470ed1ddf433dcf93d56a0" translate="yes" xml:space="preserve">
          <source>exception.error_code        # error code returned by Twitter</source>
          <target state="translated">exception.error_code#код ошибки,возвращаемый Twitter'ом</target>
        </trans-unit>
        <trans-unit id="708c6fc4e6cb4a6b57d1bc9eb59b78c6623abb1c" translate="yes" xml:space="preserve">
          <source>exception.headers           # dictionary containing response HTTP headers</source>
          <target state="translated">exception.headers#словарь,содержащий HTTP-заголовки ответа</target>
        </trans-unit>
        <trans-unit id="0d6d31b60929b1fb8487e2422678412c93cf184c" translate="yes" xml:space="preserve">
          <source>exception.request_method    # HTTP method used to make the request (GET or POST)</source>
          <target state="translated">exception.request_method#HTTP метод,используемый для выполнения запроса (GET или POST)</target>
        </trans-unit>
        <trans-unit id="bbeb601abe495ead3f8676109a955465d893a79a" translate="yes" xml:space="preserve">
          <source>exception.resource_url      # URL of the API resource called</source>
          <target state="translated">exception.resource_url#URL вызова ресурса API</target>
        </trans-unit>
        <trans-unit id="3d5ee937df2a37faf4970eedfee57bb50c73897d" translate="yes" xml:space="preserve">
          <source>exception.status_code       # HTTP status code returned by Twitter</source>
          <target state="translated">exception.status_code#HTTP статусный код,возвращаемый Twitter'ом.</target>
        </trans-unit>
        <trans-unit id="4707c83d4d4b8df33d26e3a9d809aefd7abedef2" translate="yes" xml:space="preserve">
          <source>followers_count = response.data.followers_count</source>
          <target state="translated">followers_count=response.data.followers_count</target>
        </trans-unit>
        <trans-unit id="735271c8ab39da8333c684a4089035c43e08373a" translate="yes" xml:space="preserve">
          <source>followers_count = response.data['followers_count']</source>
          <target state="translated">followers_count=response.data['followers_count']</target>
        </trans-unit>
        <trans-unit id="1cce3dc6b55b8ba5ed8a9bedb3713b639e79df91" translate="yes" xml:space="preserve">
          <source>for data in resource.stream():</source>
          <target state="translated">для данных в resource.stream():</target>
        </trans-unit>
        <trans-unit id="0dd5be53e29fe9f30b5dcf053b7464ec93855f53" translate="yes" xml:space="preserve">
          <source>for data in response.stream():</source>
          <target state="translated">для данных в response.stream():</target>
        </trans-unit>
        <trans-unit id="f9445c100f5ebe32218a7f1d63052f594f9edb2d" translate="yes" xml:space="preserve">
          <source>for later use, also you can use the client to start making API request</source>
          <target state="translated">для последующего использования,также вы можете использовать клиент,чтобы начать делать API запрос</target>
        </trans-unit>
        <trans-unit id="b14717839a99d7b950220dd8c5dba10754276018" translate="yes" xml:space="preserve">
          <source>frameworks provide an easy way of doing this or you can parse the URL</source>
          <target state="translated">фреймворки предоставляют простой способ сделать это или вы можете разобрать URL-адрес</target>
        </trans-unit>
        <trans-unit id="9c796367fc430ea67c9e100a5e1f84d7d78836b7" translate="yes" xml:space="preserve">
          <source>from birdy.twitter import AppClient</source>
          <target state="translated">от birdy.twitter импорт AppClient</target>
        </trans-unit>
        <trans-unit id="6ebcf6b1f55844cb14c0a6d48369766ce3d15044" translate="yes" xml:space="preserve">
          <source>from birdy.twitter import StreamClient</source>
          <target state="translated">от birdy.twitter импорта StreamClient</target>
        </trans-unit>
        <trans-unit id="e9bd32e48e16c350ed11cdde60afdf4768add332" translate="yes" xml:space="preserve">
          <source>from birdy.twitter import UserClient</source>
          <target state="translated">из импорта birdy.twitter UserClient</target>
        </trans-unit>
        <trans-unit id="c54cb01889998c4ccfa5659055fccf2acc64dbb5" translate="yes" xml:space="preserve">
          <source>from there.</source>
          <target state="translated">оттуда.</target>
        </trans-unit>
        <trans-unit id="e446c6424ac01ced72f0a982e6dc66e9208da653" translate="yes" xml:space="preserve">
          <source>goodies.</source>
          <target state="translated">сладости.</target>
        </trans-unit>
        <trans-unit id="5fab9911e283d70f5b996a2e5424cb18b3b07a08" translate="yes" xml:space="preserve">
          <source>handling and JSON decoding it doesn&amp;rsquo;t process the returned data in any</source>
          <target state="translated">обработки и декодирования JSON он не обрабатывает возвращенные данные ни в каком</target>
        </trans-unit>
        <trans-unit id="5e61236902476272f48bdff2da3a3a56aee2abb0" translate="yes" xml:space="preserve">
          <source>immediately. For example, you can retrieve the users home timeline like</source>
          <target state="translated">немедленно.Например,вы можете получить домашнюю временную шкалу пользователей,например.</target>
        </trans-unit>
        <trans-unit id="2a1f541dc37e621be22cce1bb9f8d26b409b6344" translate="yes" xml:space="preserve">
          <source>import it and create an instance with your apps ``CONSUMER_KEY`` and</source>
          <target state="translated">импортируйте его и создайте экземпляр с вашими приложениями `CONSUMER_KEY` и</target>
        </trans-unit>
        <trans-unit id="642fb37a9a7a82fdd5c52ac17838f82107b9d5af" translate="yes" xml:space="preserve">
          <source>initialization in *Step 1*.</source>
          <target state="translated">инициализация в *Step 1*.</target>
        </trans-unit>
        <trans-unit id="c3bec6bcbc9b9f04e60fcb1d9c9c1a37f3e12e93" translate="yes" xml:space="preserve">
          <source>instance</source>
          <target state="translated">пример</target>
        </trans-unit>
        <trans-unit id="5033e3dcc85557668293819ce5488bdd7a50f3ff" translate="yes" xml:space="preserve">
          <source>instance of ``UserClient``, this time also passing in ``ACCESS_TOKEN``</source>
          <target state="translated">экземпляр `UerClient`,на этот раз также проходящий в `ACCESS_TOKEN`.</target>
        </trans-unit>
        <trans-unit id="fe8feed6109f7c8483bd3733219a9e824788596f" translate="yes" xml:space="preserve">
          <source>is **GET users/show** (`Twitter</source>
          <target state="translated">это **ГЕТ-пользователи/шоу**(Твиттер)</target>
        </trans-unit>
        <trans-unit id="e5c94463c2fd1216a37265c6eb1ebb573441081f" translate="yes" xml:space="preserve">
          <source>it).</source>
          <target state="translated">это).</target>
        </trans-unit>
        <trans-unit id="7ab962e80665cb9cc68421c37b838570afc27fae" translate="yes" xml:space="preserve">
          <source>it.</source>
          <target state="translated">это.</target>
        </trans-unit>
        <trans-unit id="c1122a002b38084385e748de6811e997162bc8fd" translate="yes" xml:space="preserve">
          <source>libraries &amp;lt;#credits&amp;gt;`__</source>
          <target state="translated">библиотеки &amp;lt;#credits&amp;gt; `__</target>
        </trans-unit>
        <trans-unit id="b272005bb94215f85b46eb651adc592d31bb3f1e" translate="yes" xml:space="preserve">
          <source>libraries and the wonderful `Python &amp;lt;http://www.python.org&amp;gt;`__</source>
          <target state="translated">библиотеки и замечательный `Python &amp;lt;http://www.python.org&amp;gt;` __</target>
        </trans-unit>
        <trans-unit id="826212972a0916a3dd73ddafcf420bae736d604f" translate="yes" xml:space="preserve">
          <source>libraries like ``requests`` and ``requests-ouathlib`` to do the heavy</source>
          <target state="translated">такие библиотеки,как ``запросы` и ``запросы-Уатиб`,чтобы сделать тяжелый</target>
        </trans-unit>
        <trans-unit id="cb610a9454455c74263ea6166b0620df37e61077" translate="yes" xml:space="preserve">
          <source>lifting, but more importantly it relies on Python&amp;rsquo;s dynamic nature to</source>
          <target state="translated">подъема, но, что более важно, он полагается на динамическую природу Python для</target>
        </trans-unit>
        <trans-unit id="6afe58234210d56896db42547b3f52d5e1cb0dff" translate="yes" xml:space="preserve">
          <source>like this</source>
          <target state="translated">подобный</target>
        </trans-unit>
        <trans-unit id="3afe6f2b3618c84d8e763be618c7bbd90a33628b" translate="yes" xml:space="preserve">
          <source>little under 400 LOC.</source>
          <target state="translated">чуть меньше 400 LOC.</target>
        </trans-unit>
        <trans-unit id="2d0af65a26679bed8fa5f6d5ecf7fef3da448ea9" translate="yes" xml:space="preserve">
          <source>makes a POST request and pass parameters (and files) as part of the</source>
          <target state="translated">делает POST-запрос и передает параметры (и файлы)в составе</target>
        </trans-unit>
        <trans-unit id="1c91057ef75ca530b96fa95be1f3c12bd8994403" translate="yes" xml:space="preserve">
          <source>not all API resources are available. Check `Twitter</source>
          <target state="translated">не все ресурсы API доступны.Проверьте `Twitter</target>
        </trans-unit>
        <trans-unit id="85858894a52bc66b8ca6164e63368874fa2b0107" translate="yes" xml:space="preserve">
          <source>not be able to respond right way.</source>
          <target state="translated">не в состоянии правильно отреагировать.</target>
        </trans-unit>
        <trans-unit id="f0f7f39ec7e62249ee81dac2c3f1b3586a4fd52e" translate="yes" xml:space="preserve">
          <source>objects</source>
          <target state="translated">объекты</target>
        </trans-unit>
        <trans-unit id="d8a08ec0b2764e0101a432f68c919837c46351f9" translate="yes" xml:space="preserve">
          <source>override **get_json_object_hook()** method.</source>
          <target state="translated">переопределение метода **get_json_object_hook()**.</target>
        </trans-unit>
        <trans-unit id="48eb940d0c10f4a05cc63794941fd34266b9244c" translate="yes" xml:space="preserve">
          <source>override **handle_response()** method.</source>
          <target state="translated">переопределить метод **handle_response()**.</target>
        </trans-unit>
        <trans-unit id="c5d1482040e37856ce43bf4a1b4fda30daaf94a4" translate="yes" xml:space="preserve">
          <source>override some methods and you are good to go.</source>
          <target state="translated">отменить некоторые методы,и ты можешь идти.</target>
        </trans-unit>
        <trans-unit id="56088af5fafe3691cb6290e83da28aa72b2873ef" translate="yes" xml:space="preserve">
          <source>parameters passed to get() to it and makes a GET request to that URL and</source>
          <target state="translated">параметры,передаваемые для получения()к нему,и делает GET-запрос на этот URL и</target>
        </trans-unit>
        <trans-unit id="b94ff3466d65864ce700da326530d375638b633d" translate="yes" xml:space="preserve">
          <source>part of the API path is provided like a dictionary key lookup.</source>
          <target state="translated">часть пути API предоставляется как поиск ключей словаря.</target>
        </trans-unit>
        <trans-unit id="38dd089793176da7265421b42cdbeb073dc0894f" translate="yes" xml:space="preserve">
          <source>path, only this time post() is called instead of get(), so ``birdy``</source>
          <target state="translated">path,вместо get()вызывается только этот time post(),так что ``birdy```.</target>
        </trans-unit>
        <trans-unit id="a94865123b7cf6871ac3ae0210bbbc8438527f14" translate="yes" xml:space="preserve">
          <source>pip install birdy</source>
          <target state="translated">установка трубопроводов птичками</target>
        </trans-unit>
        <trans-unit id="d7b6b314ca9f37fe13dc9492c656713e1e3cbd07" translate="yes" xml:space="preserve">
          <source>print data</source>
          <target state="translated">данные для печати</target>
        </trans-unit>
        <trans-unit id="8506390b48e0d53691e8218a27176d6813163516" translate="yes" xml:space="preserve">
          <source>programing language.</source>
          <target state="translated">язык программирования.</target>
        </trans-unit>
        <trans-unit id="891aedc30eeb3fb7810420b37126e6b9a4028c99" translate="yes" xml:space="preserve">
          <source>provides the **stream()** method which returns an iterator used to</source>
          <target state="translated">предоставляет метод **stream()**,который возвращает итератор,использованный для</target>
        </trans-unit>
        <trans-unit id="6adf7ab72cef45cb4065d0a535b0d629ce322788" translate="yes" xml:space="preserve">
          <source>reached, ``TwitterApiError`` subclass</source>
          <target state="translated">достиг подкласса ``TwitterApiError``.</target>
        </trans-unit>
        <trans-unit id="9c7acfc1d78599665baec65e5395783439b9150e" translate="yes" xml:space="preserve">
          <source>receive JSON decoded streaming data. Like ``ApiResponse`` it also gives</source>
          <target state="translated">получать декодированные JSON потоковые данные.Как и `ApiResponse` она также дает</target>
        </trans-unit>
        <trans-unit id="9dc8f9f2b354ab386242d010bc53da854f6b61c5" translate="yes" xml:space="preserve">
          <source>redirected back to the ``callback_url`` provided during client</source>
          <target state="translated">перенаправлен обратно на ``возвратный ход`,предоставляемый во время работы с клиентом.</target>
        </trans-unit>
        <trans-unit id="13b27a3769f80fba144a33fbf297dee94c6ec016" translate="yes" xml:space="preserve">
          <source>request body.</source>
          <target state="translated">орган запроса.</target>
        </trans-unit>
        <trans-unit id="c1df18577f89cafb35c5456c60052f1908d67ffa" translate="yes" xml:space="preserve">
          <source>request on behalf of the app. It&amp;rsquo;s recommended you save the</source>
          <target state="translated">запрос от имени приложения. Рекомендуется сохранить</target>
        </trans-unit>
        <trans-unit id="ad4685bec50a57f09c1821f5b9178df5b57fe77e" translate="yes" xml:space="preserve">
          <source>resource = client.api.users.show</source>
          <target state="translated">ресурс=client.api.users.show</target>
        </trans-unit>
        <trans-unit id="6de893a7e4733552ae5eafc5992bc8799c9fda7c" translate="yes" xml:space="preserve">
          <source>resource = client.sitestream.site.get()</source>
          <target state="translated">ресурс=клиент.sitestream.site.get()</target>
        </trans-unit>
        <trans-unit id="a839f646266487713d9466213a8532f80c3b176b" translate="yes" xml:space="preserve">
          <source>resource = client.stream.statuses.filter.post(track='twitter')</source>
          <target state="translated">ресурс=client.stream.statuses.filter.post(track='twitter')</target>
        </trans-unit>
        <trans-unit id="ed493531926d2edca7e1dcde08a4cfb69c9e27f9" translate="yes" xml:space="preserve">
          <source>resource = client.userstream.user.get()</source>
          <target state="translated">ресурс=client.userstream.user.get()</target>
        </trans-unit>
        <trans-unit id="d6664052bf7243332ffa4324b4867b3adee0a157" translate="yes" xml:space="preserve">
          <source>resource path (**&amp;lsquo;users/show&amp;rsquo;**). Then when you call get() on the</source>
          <target state="translated">путь к ресурсу (** 'users / show' **). Затем, когда вы вызываете get () на</target>
        </trans-unit>
        <trans-unit id="b62cfbdc0fd591af4ffe69f34a6258f38f18d081" translate="yes" xml:space="preserve">
          <source>resource path and than makes a POST request, the only difference is that</source>
          <target state="translated">путь к ресурсу и чем делает POST-запрос,единственное отличие в том,что</target>
        </trans-unit>
        <trans-unit id="e2f7f15a72746e1cf15dbfe70a306cf6e7551a28" translate="yes" xml:space="preserve">
          <source>resource, ``birdy`` constructs a full resource URL, appends any</source>
          <target state="translated">ресурс,``birdy` строит полный URL ресурса,добавляет любые</target>
        </trans-unit>
        <trans-unit id="7ab37af12dc981c3ac8d0babe9bdf50970623af9" translate="yes" xml:space="preserve">
          <source>response = client.api.statuses.destroy['240854986559455234'].post()</source>
          <target state="translated">response=client.api.statuses.destroy['240854986559455234'].post()</target>
        </trans-unit>
        <trans-unit id="6964e75dff60ea9d545f6858aeb8b9913d389e10" translate="yes" xml:space="preserve">
          <source>response = client.api.statuses.home_timeline.get()</source>
          <target state="translated">response=client.api.statuses.home_timeline.get()</target>
        </trans-unit>
        <trans-unit id="d8130aa2e4f647fca49f9367002379c9230cd111" translate="yes" xml:space="preserve">
          <source>response = client.api.statuses.update.post(status='Hello @pybirdy!')</source>
          <target state="translated">response=client.api.statuses.update.post(status='Hello @pybirdy!')</target>
        </trans-unit>
        <trans-unit id="af32d45966abd9824fb292bea6faeb5d07cffb8b" translate="yes" xml:space="preserve">
          <source>response = client.api.users.show.get(screen_name='twitter')</source>
          <target state="translated">response=client.api.users.show.get(screen_name='twitter')</target>
        </trans-unit>
        <trans-unit id="9aed8dea0f32e388aa584593e065dc13fc16a416" translate="yes" xml:space="preserve">
          <source>response = client.api['statuses/destroy']['240854986559455234'].post()</source>
          <target state="translated">response=client.api['statuses/destroy']['240854986559455234'].post()</target>
        </trans-unit>
        <trans-unit id="4b7dade50b592d74adbfa3599b0a88f4666f00d7" translate="yes" xml:space="preserve">
          <source>response = client.api['users']['show'].get(screen_name='twitter')</source>
          <target state="translated">response=client.api['users']['show'].get(screen_name='twitter')</target>
        </trans-unit>
        <trans-unit id="f0417f6c8724d3355b436625e664165bdccd29a1" translate="yes" xml:space="preserve">
          <source>response = client.api['users/show'].get(screen_name='twitter')</source>
          <target state="translated">response=client.api['users/show'].get(screen_name='twitter')</target>
        </trans-unit>
        <trans-unit id="35ff8a019c79cfe0fd3402f4fb4ec8136be8da15" translate="yes" xml:space="preserve">
          <source>response = client.stream.statuses.filter.post(track='twitter')</source>
          <target state="translated">response=client.stream.statuses.filter.post(track='twitter')</target>
        </trans-unit>
        <trans-unit id="3f0cbfa99d2e8905fb3865c29cca6dc5b88aa5e4" translate="yes" xml:space="preserve">
          <source>response = resource.get(screen_name='twitter')</source>
          <target state="translated">response=resource.get(screen_name='twitter')</target>
        </trans-unit>
        <trans-unit id="afc4c08177881f10071d71aff37ebd90ebc7c05a" translate="yes" xml:space="preserve">
          <source>response = super(MyClient, self).handle_response(method, response)</source>
          <target state="translated">response=super(MyClient,self).handle_response(метод,ответ)</target>
        </trans-unit>
        <trans-unit id="a3587a3cd1550f4d9f22cf88c3aabc9d3f7b34d0" translate="yes" xml:space="preserve">
          <source>response.data</source>
          <target state="translated">ответ.данные</target>
        </trans-unit>
        <trans-unit id="512f2fe38422881b4b2f60425b04e6f1285f4dc2" translate="yes" xml:space="preserve">
          <source>response.data           # decoded JSON data</source>
          <target state="translated">response.data#декодированные данные JSON</target>
        </trans-unit>
        <trans-unit id="b2561ece195dda81c629c869d63ef747263d51db" translate="yes" xml:space="preserve">
          <source>response.headers        # dictionary containing response HTTP headers</source>
          <target state="translated">response.headers#словарь,содержащий HTTP-заголовки ответа</target>
        </trans-unit>
        <trans-unit id="4a777b4923fb66c90271ab53ca24784bb07bc655" translate="yes" xml:space="preserve">
          <source>response.resource_url   # resource URL</source>
          <target state="translated">response.resource_url#URL ресурса</target>
        </trans-unit>
        <trans-unit id="0ad4fbb4fd3952d39ef76ffe5c358e011a9327cb" translate="yes" xml:space="preserve">
          <source>response.stream()       # a generator method used to iterate over the stream</source>
          <target state="translated">response.stream()#метод генератора,используемый для итераций по потоку.</target>
        </trans-unit>
        <trans-unit id="07fc7568c20f29d5bd377a1699a3cd8e24afac38" translate="yes" xml:space="preserve">
          <source>retrieval errors</source>
          <target state="translated">ошибки поиска</target>
        </trans-unit>
        <trans-unit id="74086b5f7fd9b353d120dd51c56884107195489f" translate="yes" xml:space="preserve">
          <source>return data</source>
          <target state="translated">возвращаемые данные</target>
        </trans-unit>
        <trans-unit id="2a174278c0c4b4f51fd3128b1c6b04b949786bb9" translate="yes" xml:space="preserve">
          <source>return response</source>
          <target state="translated">ответная реакция</target>
        </trans-unit>
        <trans-unit id="f4d472f26c52dd15f664587b1ceb92235e986934" translate="yes" xml:space="preserve">
          <source>return session</source>
          <target state="translated">ответная сессия</target>
        </trans-unit>
        <trans-unit id="a3999cf452b6ebd36795dabeac419fec66ed7e7f" translate="yes" xml:space="preserve">
          <source>returns the result.</source>
          <target state="translated">возвращает результат.</target>
        </trans-unit>
        <trans-unit id="7bd91d97ed7fe4794e8c4677617be0c799c7fabf" translate="yes" xml:space="preserve">
          <source>screen_name=&amp;lsquo;twitter&amp;rsquo; you do this.</source>
          <target state="translated">screen_name = 'twitter' вы делаете это.</target>
        </trans-unit>
        <trans-unit id="9c0b9f2f43d32e896c0ff2bdc3e3588926370e52" translate="yes" xml:space="preserve">
          <source>session = super(MyClient, self).configure_oauth_session(session)</source>
          <target state="translated">session=super(MyClient,self).configure_oauth_session(сессия)</target>
        </trans-unit>
        <trans-unit id="cc66f3c37c01fd2ddbedb15dbc06d210e654eb52" translate="yes" xml:space="preserve">
          <source>session.proxies = {'http': 'foo.bar:3128'}</source>
          <target state="translated">session.proxies={'http'':'foo.bar:3128'}</target>
        </trans-unit>
        <trans-unit id="e9a4f5765662fd4fde416f7d680c1a856b471c64" translate="yes" xml:space="preserve">
          <source>statuses/filter** (`Twitter</source>
          <target state="translated">статусы/фильтр**(`Твиттер*)</target>
        </trans-unit>
        <trans-unit id="1121a2824e54cf8bd0f37b5cee0f964f2d68821c" translate="yes" xml:space="preserve">
          <source>statuses/update** (`Twitter</source>
          <target state="translated">статусы/обновления**(`Твиттер*)</target>
        </trans-unit>
        <trans-unit id="63e4f68f5d7423a5e995d37a86f7b5f192651812" translate="yes" xml:space="preserve">
          <source>style, for convenience. The following code produces the same result</source>
          <target state="translated">стиль,для удобства.Следующий код дает тот же результат</target>
        </trans-unit>
        <trans-unit id="b8cc2197eb2b4be8024a2ee2062bbaa12524a518" translate="yes" xml:space="preserve">
          <source>subclassing &amp;lt;#customize-and-extend-through-subclassing&amp;gt;`__</source>
          <target state="translated">создание подкласса &amp;lt;# customize-and-extend-through-subclassing&amp;gt; `__</target>
        </trans-unit>
        <trans-unit id="efaa94f3aa5d9bf708347b050fd01c8a2a3c88eb" translate="yes" xml:space="preserve">
          <source>the data right away.</source>
          <target state="translated">данные немедленно.</target>
        </trans-unit>
        <trans-unit id="c565622452a3c0f0806b090c6e150e5811473e2e" translate="yes" xml:space="preserve">
          <source>this.</source>
          <target state="translated">это.</target>
        </trans-unit>
        <trans-unit id="489141a3b3275d4aa8fe89b7d0110a570d7bae3b" translate="yes" xml:space="preserve">
          <source>to be done, and the result is a super light weight and easy to use API</source>
          <target state="translated">и результат-суперлегкий вес и простой в использовании API.</target>
        </trans-unit>
        <trans-unit id="910b11646f318e47723ecb2329f95d1f80923c09" translate="yes" xml:space="preserve">
          <source>to returned data, also gives you access to response headers (useful for</source>
          <target state="translated">к возвращаемым данным,также дает доступ к заголовкам ответов (полезно для</target>
        </trans-unit>
        <trans-unit id="33ebd358b64deae8e5f89c55a0be48231fe6fbb9" translate="yes" xml:space="preserve">
          <source>token = client.get_access_token(OAUTH_VERIFIER)</source>
          <target state="translated">токен=client.get_access_token(OAUTH_VERIFIER)</target>
        </trans-unit>
        <trans-unit id="c1f3abca2a82458944cea47bd7e3672c0ef494c5" translate="yes" xml:space="preserve">
          <source>token = client.get_authorize_token(CALLBACK_URL)</source>
          <target state="translated">token=client.get_authorize_token(CALLBACK_URL)</target>
        </trans-unit>
        <trans-unit id="32eba78600400d0300af0eca79577bbefccd8c78" translate="yes" xml:space="preserve">
          <source>token = client.get_signin_token(CALLBACK_URL)</source>
          <target state="translated">token=client.get_signin_token(CALLBACK_URL)</target>
        </trans-unit>
        <trans-unit id="ffc04e76127b592d888a94142af26689c67c5b0f" translate="yes" xml:space="preserve">
          <source>token like this.</source>
          <target state="translated">такой же символ.</target>
        </trans-unit>
        <trans-unit id="c3e3b6ba80637cf8a1e6d9e83e439e8a70903ac0" translate="yes" xml:space="preserve">
          <source>token you simply do this.</source>
          <target state="translated">просто сделай это.</target>
        </trans-unit>
        <trans-unit id="b7d2dddc630096228f3ad9bb31d2816a2efbfaae" translate="yes" xml:space="preserve">
          <source>tokens and can now make API calls on their behalf.</source>
          <target state="translated">и теперь может делать API-звонки от их имени.</target>
        </trans-unit>
        <trans-unit id="82ee9dbe6531f7507e44ec07fa5581451fe91d8c" translate="yes" xml:space="preserve">
          <source>tokens.</source>
          <target state="translated">жетоны.</target>
        </trans-unit>
        <trans-unit id="76c9202b4e9cede72052f3f096eb46d6cf2ac666" translate="yes" xml:space="preserve">
          <source>tracking errors in logs), also available is the following:</source>
          <target state="translated">отслеживания ошибок в журналах),также доступно следующее:</target>
        </trans-unit>
        <trans-unit id="ee5bcc552a9530d8c817eb7c1414555172f903ff" translate="yes" xml:space="preserve">
          <source>try:</source>
          <target state="translated">Попробуй:</target>
        </trans-unit>
        <trans-unit id="7b5d546dc63d50958c83821d44ebf762c0df522b" translate="yes" xml:space="preserve">
          <source>update ``birdy`` itself.</source>
          <target state="translated">обновить &quot;птичку&quot; самому.</target>
        </trans-unit>
        <trans-unit id="a50638a4bfa5fa4f52d92f8681f0f45fe1a81882" translate="yes" xml:space="preserve">
          <source>use ``UserClient`` to get them.</source>
          <target state="translated">используй &quot;Клиент&quot;,чтобы достать их.</target>
        </trans-unit>
        <trans-unit id="d4cb0603892b56b452ecf4a34d7b5933299be208" translate="yes" xml:space="preserve">
          <source>used to make HTTP requests, to configure it, you override the</source>
          <target state="translated">используемый для выполнения HTTP запросов,для его настройки вы переопределяете параметр</target>
        </trans-unit>
        <trans-unit id="1077c70a5a4f101991fc9edde4e3378b51ff1660" translate="yes" xml:space="preserve">
          <source>user, as this are not the final token and secret.</source>
          <target state="translated">пользователя,так как это не последний токен и секрет.</target>
        </trans-unit>
        <trans-unit id="0afd8fc17d3ccdaa2f58d0a7e5eab07263f91fb8" translate="yes" xml:space="preserve">
          <source>way it works, all you have to do is subclass one of the clients and</source>
          <target state="translated">как это работает,все,что вам нужно сделать,это подкласс одного из клиентов и</target>
        </trans-unit>
        <trans-unit id="abc4eeb9cfa6bdfb89ad16f885fa13deb08c983b" translate="yes" xml:space="preserve">
          <source>way, that is left for you to handle (who&amp;rsquo;d know better what to do with</source>
          <target state="translated">Кстати, это оставлено на ваше усмотрение (кто лучше знает, что делать с</target>
        </trans-unit>
        <trans-unit id="c33b9a7c4e959b3594075da5371ba89e49e800ac" translate="yes" xml:space="preserve">
          <source>when deleting a tweet at **POST statuses/destroy/:id** (`Twitter</source>
          <target state="translated">при удалении твита в **POST статусе/уничтожении/:id**(`Twitter</target>
        </trans-unit>
        <trans-unit id="ee6bb6b2064eaba8437133abcd2b81e6d3d879a2" translate="yes" xml:space="preserve">
          <source>which includes the resource URL and request method used (very handy when</source>
          <target state="translated">который включает URL ресурса и используемый метод запроса (очень удобно,когда</target>
        </trans-unit>
        <trans-unit id="caca2e3dca29c8dd704918f5055c3eacbd937763" translate="yes" xml:space="preserve">
          <source>whichever you prefer. Both syntax forms can be freely combined as in the</source>
          <target state="translated">что бы вы ни предпочли.Обе синтаксические формы могут быть свободно объединены как в</target>
        </trans-unit>
        <trans-unit id="74956c489251e73eeb8884aa7a6a0f28c7867668" translate="yes" xml:space="preserve">
          <source>with attribute style access in addition to regular dictionary lookup</source>
          <target state="translated">с доступом к стилю атрибутов в дополнение к регулярному просмотру словаря.</target>
        </trans-unit>
        <trans-unit id="baa37ea74a6dc7189f327733c7561a5a70320fd4" translate="yes" xml:space="preserve">
          <source>workflows &amp;lt;#great-what-about-authorization-how-do-i-get-my-access-tokens&amp;gt;`__</source>
          <target state="translated">рабочие процессы &amp;lt;# great-what-about-authorization-how-do-i-get-my-access-tokens&amp;gt; `__</target>
        </trans-unit>
        <trans-unit id="fddb230484f974c78f17035ee29560f8fcdb4b33" translate="yes" xml:space="preserve">
          <source>workflows by providing two different clients, a ``UserClient`` and</source>
          <target state="translated">рабочие процессы,предоставляя двух разных клиентов,`Пользователь-Клиент` и</target>
        </trans-unit>
        <trans-unit id="f60b96fac42fdb7f3de28dce8845074cc8d58c73" translate="yes" xml:space="preserve">
          <source>you access to response headers and resource URL.</source>
          <target state="translated">вы получаете доступ к заголовкам ответов и URL ресурса.</target>
        </trans-unit>
        <trans-unit id="b11e3be9be839fe941c69d41f407c9e024a44cfc" translate="yes" xml:space="preserve">
          <source>your apps ``CONSUMER_KEY`` and ``CONSUMER_SECRET``.</source>
          <target state="translated">ваши приложения `CONSUMER_KEY` и `CONSUMER_SECRET``.</target>
        </trans-unit>
        <trans-unit id="e49f0aeb612b1050194ff213154878d888fe9f9f" translate="yes" xml:space="preserve">
          <source>yourself using ``urlparse`` module (if that is your thing).</source>
          <target state="translated">себя с помощью модуля ``urlparse` (если это ваша вещь).</target>
        </trans-unit>
        <trans-unit id="a24e261d9c3050fd299d0fc435c9012af2e1f618" translate="yes" xml:space="preserve">
          <source>~~~~~</source>
          <target state="translated">~~~~~</target>
        </trans-unit>
        <trans-unit id="31efeacd92de82be0fb57177dbc0046a6e683fa5" translate="yes" xml:space="preserve">
          <source>~~~~~~~~</source>
          <target state="translated">~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="33ac9e95596e91e1fd74727ca17b01c4eff475b7" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="241a8f58ea626bd77311712c39995076e338b2b4" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="a4fd80bb5cf4178e0ee54d200dd603dd7f649614" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="f548bcc001ffc7288d169ea392401ad96f5fb7e9" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="174ed72812f28420ac644c37a3807834f10b11ae" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="ab39feec0e9f7996bc771df0c0535804e46b2aa4" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="c1b1fa1085704a45ee5bf24b1621a71ae7029b2d" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="69126060daaf6a626e0b2302b67c54698e18d150" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="08c8e37c461a5df08b7ebce7ab16edf3bb8a7690" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~</target>
        </trans-unit>
        <trans-unit id="1f88421be634fd2d1b9ef73def273ef38a914a73" translate="yes" xml:space="preserve">
          <source>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</source>
          <target state="translated">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
