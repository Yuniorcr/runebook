<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/drb-client/">
    <body>
      <group id="drb-client">
        <trans-unit id="16be2db0181d374d7688acbe57bee91eefdbefeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt; project</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;&lt;/a&gt;проект Drand</target>
        </trans-unit>
        <trans-unit id="706722bdc65d138213c144a5154870f167628060" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;League of Entropy&lt;/a&gt; project</source>
          <target state="translated">&lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;Лига энтропии&lt;/a&gt; проект</target>
        </trans-unit>
        <trans-unit id="d1e95f34e183af96806eee335a7d475b6fcb8f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devrandom&lt;/code&gt; - (default) writes collected entropy into &lt;code&gt;/dev/random&lt;/code&gt; device, without increment of kernel counter of available entropy in pool.</source>
          <target state="translated">&lt;code&gt;devrandom&lt;/code&gt; - (по умолчанию) записывает собранную энтропию на устройство &lt;code&gt;/dev/random&lt;/code&gt; без увеличения счетчика ядра доступной энтропии в пуле.</target>
        </trans-unit>
        <trans-unit id="35807d461d389bdeeda1b6e89ddc4f49c61e50fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drb-client&lt;/code&gt; can be used as a standalone source of high-quality random number, or as additional source for entropy pool in Linux kernel. Produced amount of entropy should be sufficient to derail attacks based on RNG predictability.</source>
          <target state="translated">&lt;code&gt;drb-client&lt;/code&gt; можно использовать как автономный источник высококачественных случайных чисел или как дополнительный источник для пула энтропии в ядре Linux. Произведенное количество энтропии должно быть достаточным, чтобы сорвать атаки на основе предсказуемости ГСЧ.</target>
        </trans-unit>
        <trans-unit id="d6edc5f9a8464caf9e6ccbdd9133b471e07bf046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drb-client&lt;/code&gt; constructs each output of entropy from at least &lt;code&gt;quorum&lt;/code&gt; (&lt;code&gt;-Q&lt;/code&gt; option) distinct inputs. It is assumed at least &lt;code&gt;node_count - quorum + 1&lt;/code&gt; nodes produce truly unpredictable secure random numbers, so any &lt;code&gt;quorum&lt;/code&gt; of distinct responses definitely contain at least one truly random input (due to &lt;a href=&quot;https://en.wikipedia.org/wiki/Pigeonhole_principle&quot;&gt;pigeonhole principle&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;drb-client&lt;/code&gt; конструирует каждый вывод энтропии из как минимум &lt;code&gt;quorum&lt;/code&gt; ( опция &lt;code&gt;-Q&lt;/code&gt; ) отдельных входов. Предполагается, что, по крайней мере, &lt;code&gt;node_count - quorum + 1&lt;/code&gt; производят действительно непредсказуемые безопасные случайные числа, поэтому любой &lt;code&gt;quorum&lt;/code&gt; отдельных ответов определенно содержит по крайней мере один действительно случайный ввод (из-за &lt;a href=&quot;https://en.wikipedia.org/wiki/Pigeonhole_principle&quot;&gt;принципа ящика&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="612a6789d9ad9466ab111943560aa664cd760840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drb-client&lt;/code&gt; polls list of &lt;code&gt;drand&lt;/code&gt; servers with given interval and requests private entropy data portion from each one. Communication between &lt;code&gt;drb-client&lt;/code&gt; and &lt;code&gt;drand&lt;/code&gt; is protected with AES256-GCM encryption derived on BN-256 curve on top of TLS (this is imposed by &lt;code&gt;drand&lt;/code&gt; API format).</source>
          <target state="translated">&lt;code&gt;drb-client&lt;/code&gt; опрашивает список серверов &lt;code&gt;drand&lt;/code&gt; с заданным интервалом и запрашивает частные данные энтропии с каждого из них. Связь между &lt;code&gt;drb-client&lt;/code&gt; и &lt;code&gt;drand&lt;/code&gt; защищена шифрованием AES256-GCM, полученным на основе кривой BN-256 поверх TLS (это налагается &lt;code&gt;drand&lt;/code&gt; API).</target>
        </trans-unit>
        <trans-unit id="8b8f98f7e465fe1afd037734d11a467c0f3148c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rndaddentropy&lt;/code&gt; - writes collected entropy into &lt;code&gt;/dev/random&lt;/code&gt; device with increment of kernel counter of available entropy in pool. Requires superuser privileges to operate.</source>
          <target state="translated">&lt;code&gt;rndaddentropy&lt;/code&gt; - записывает собранную энтропию в устройство &lt;code&gt;/dev/random&lt;/code&gt; с увеличением счетчика ядра доступной энтропии в пуле. Для работы требуются права суперпользователя.</target>
        </trans-unit>
        <trans-unit id="2a245b8128e5153894dcf93e72b3a36700f7d0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdout&lt;/code&gt; - writes collected entropy into standard output.</source>
          <target state="translated">&lt;code&gt;stdout&lt;/code&gt; - записывает собранную энтропию в стандартный вывод.</target>
        </trans-unit>
        <trans-unit id="66c98284a75eb1efe4c63540023400f8d00cfa97" translate="yes" xml:space="preserve">
          <source>Contribute into &lt;code&gt;/dev/random&lt;/code&gt; and increment entropy counter:</source>
          <target state="translated">Внесите вклад в &lt;code&gt;/dev/random&lt;/code&gt; и увеличьте счетчик энтропии:</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Кредиты</target>
        </trans-unit>
        <trans-unit id="2915d592de5d14cc30bb5502791f53baae7449e8" translate="yes" xml:space="preserve">
          <source>Cryptography background</source>
          <target state="translated">Криптографическое образование</target>
        </trans-unit>
        <trans-unit id="03697c01c384673422d77e83692b6546b235f430" translate="yes" xml:space="preserve">
          <source>Default poll interval is 60 seconds and such interval is chosen for a reason. &lt;code&gt;drand&lt;/code&gt; generates entropy for each response using its &lt;code&gt;/dev/urandom&lt;/code&gt;. On Linux &lt;code&gt;urandom&lt;/code&gt; gets reinitialized from &lt;code&gt;/dev/random&lt;/code&gt; each 1 minute. So there is no reason to fetch random data more often: responses between reinitializations are in functional dependence.</source>
          <target state="translated">Интервал опроса по умолчанию составляет 60 секунд, и такой интервал выбран неспроста. &lt;code&gt;drand&lt;/code&gt; генерирует энтропию для каждого ответа, используя свой &lt;code&gt;/dev/urandom&lt;/code&gt; . В Linux &lt;code&gt;urandom&lt;/code&gt; повторно инициализируется из &lt;code&gt;/dev/random&lt;/code&gt; каждые 1 минуту. Таким образом, нет причин для более частого получения случайных данных: ответы между повторными инициализациями находятся в функциональной зависимости.</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Развертывание</target>
        </trans-unit>
        <trans-unit id="a86c8f2a7b6efe6b811bdd1bd57f18a81f625847" translate="yes" xml:space="preserve">
          <source>Distributed Randomness Beacon client</source>
          <target state="translated">Распределенный Случайный Маяк клиента</target>
        </trans-unit>
        <trans-unit id="f63f53163f65e1da190f3ea968a5e74e4fe1762f" translate="yes" xml:space="preserve">
          <source>Download or clone repository and run following command in source code directory:</source>
          <target state="translated">Скачайте или клонируйте репозиторий и выполните следующую команду в каталоге с исходным кодом:</target>
        </trans-unit>
        <trans-unit id="6dfedb9bd89a9120196f7dbb3d1a16ca4f91382c" translate="yes" xml:space="preserve">
          <source>Entropy portions from beacon servers are mixed using stateful HKDF-based mixer. Each sufficient set of random responses is used to produce random output and new salt value for HKDF mixer. Therefore, mixer output becomes unpredictable after successful generation of first output, even if all beacon servers get compromised and start feeding client with biased data.</source>
          <target state="translated">Энтропийные части от серверов-маяков смешиваются с помощью микшера на основе HKDF с контролем состояния.Каждый достаточный набор случайных ответов используется для получения случайного вывода и нового значения соли для смесителя HKDF.Поэтому вывод микшера становится непредсказуемым после успешной генерации первого вывода,даже если все серверы маяков будут скомпрометированы и начнут подавать клиенту предвзятые данные.</target>
        </trans-unit>
        <trans-unit id="7ea67bd13a5b4336449ca6a2562a692dc86a115c" translate="yes" xml:space="preserve">
          <source>For logging into file see &quot;Synopsis&quot; section.</source>
          <target state="translated">Вход в файл см.раздел &quot;Синопсис&quot;.</target>
        </trans-unit>
        <trans-unit id="0497f9c6f240debffc9e9a2160d24cab3f0d8f5e" translate="yes" xml:space="preserve">
          <source>From PyPI</source>
          <target state="translated">Из PyPI</target>
        </trans-unit>
        <trans-unit id="d600deecd9fabec09865ba5fbee27a4731d8713b" translate="yes" xml:space="preserve">
          <source>From source</source>
          <target state="translated">Из первоисточника</target>
        </trans-unit>
        <trans-unit id="037ead3306b448ee9e9214cd69cf382a259f3389" translate="yes" xml:space="preserve">
          <source>Gathers entropy from multiple &lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt; instances, securely mixes responses and outputs to kernel entropy pool or stdout. Suitable for use with &lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;League of Entropy&lt;/a&gt; servers (see &quot;Running&quot; section).</source>
          <target state="translated">Собирает энтропию из нескольких экземпляров &lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt; , безопасно смешивает ответы и вывод в пул энтропии ядра или стандартный вывод. Подходит для использования с серверами &lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;League of Entropy&lt;/a&gt; (см. Раздел &amp;laquo;Запуск&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="1d1c27a9f28ca3885f8bf099d2c5ee36e7046cbb" translate="yes" xml:space="preserve">
          <source>Jack Lloyd for &lt;a href=&quot;https://github.com/randombit/pairings.py&quot;&gt;BN256 implementation for Python&lt;/a&gt;</source>
          <target state="translated">Джек Ллойд за &lt;a href=&quot;https://github.com/randombit/pairings.py&quot;&gt;реализацию BN256 для Python&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8af07d96c15ebc52a8026ef804eb20c221df9b7e" translate="yes" xml:space="preserve">
          <source>Requires Python 3.5.3+</source>
          <target state="translated">Питон 3.5.3+Требования</target>
        </trans-unit>
        <trans-unit id="012afe619ad7a9bdc7c6e9b4ff577292ef574b2c" translate="yes" xml:space="preserve">
          <source>Run with default sink:</source>
          <target state="translated">Бегите с раковиной по умолчанию:</target>
        </trans-unit>
        <trans-unit id="73989d9c59264da08a15dba21c7d58237a91f08f" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="translated">Работающий</target>
        </trans-unit>
        <trans-unit id="08fdcff8058ae31a1a5f1a8c2b510d8c82a5e877" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Snawoot/drb-client/blob/master/deploy/drb-client.service&quot;&gt;deploy/drb-client.service&lt;/a&gt; for example of systemd unit file.</source>
          <target state="translated">См. &lt;a href=&quot;https://github.com/Snawoot/drb-client/blob/master/deploy/drb-client.service&quot;&gt;Deploy / drb-client.service&lt;/a&gt; для примера файла модуля systemd.</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Справка</target>
        </trans-unit>
        <trans-unit id="29c73887b0dd81e92d679a830369fa1d69a8f1e3" translate="yes" xml:space="preserve">
          <source>There are few available entropy sinks (option &lt;code&gt;-O&lt;/code&gt;):</source>
          <target state="translated">Доступно несколько приемников энтропии (опция &lt;code&gt;-O&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="a6c57aac7e138943cab0d208aab337d7f0dce79f" translate="yes" xml:space="preserve">
          <source>You may obtain latest &lt;code&gt;group.toml&lt;/code&gt; config with list of League of Entropy servers &lt;a href=&quot;https://github.com/dedis/drand/tree/master/deploy&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Вы можете получить последнюю конфигурацию &lt;code&gt;group.toml&lt;/code&gt; со списком серверов League of Entropy &lt;a href=&quot;https://github.com/dedis/drand/tree/master/deploy&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca898c3556f54c12964ee90a088d3f504d5e267f" translate="yes" xml:space="preserve">
          <source>drb-client</source>
          <target state="translated">drb-клиент</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
