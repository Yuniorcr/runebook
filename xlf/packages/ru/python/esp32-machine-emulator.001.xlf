<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/esp32-machine-emulator/">
    <body>
      <group id="esp32-machine-emulator">
        <trans-unit id="a74eead1affc259b8ae0cd96e9a50190a446abd4" translate="yes" xml:space="preserve">
          <source>ESP32 Machine Emulator</source>
          <target state="translated">эмулятор машин ESP32</target>
        </trans-unit>
        <trans-unit id="ee083710cf57f22515aafee8c9a5c4f7ab030845" translate="yes" xml:space="preserve">
          <source>Emulating sending a GPIO digital out signal, and verifying the signal value.</source>
          <target state="translated">Эмуляция отправки цифрового сигнала GPIO и проверка значения сигнала.</target>
        </trans-unit>
        <trans-unit id="aaa558ed445bd952e613a371f20373f78a65bfc3" translate="yes" xml:space="preserve">
          <source>Emulating the read pulse value of an input pin, such as that received by
the echo pin of an HCSR04 Ultrasonic Distance Sensor.</source>
          <target state="translated">Эмуляция считываемого импульсного значения входного штырька,например,полученного эхо-штырьком ультразвукового датчика расстояния HCSR04.</target>
        </trans-unit>
        <trans-unit id="ec35c626d48559fe8dd0e31ff55213ab2a39186d" translate="yes" xml:space="preserve">
          <source>Extending the time library to support sleep_ns() and sleep_ms()</source>
          <target state="translated">Расширение библиотеки времени для поддержки функций sleep_ns()и sleep_ms().</target>
        </trans-unit>
        <trans-unit id="c7453dd02d811fe1970d7c71bfd25bf1a7c5d1a0" translate="yes" xml:space="preserve">
          <source>Full emulation of HCSR04 Ultrasonic Distance Sensor in examples</source>
          <target state="translated">Полная эмуляция ультразвукового датчика расстояния HCSR04 в примерах</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Начало работы</target>
        </trans-unit>
        <trans-unit id="f3d6dee0cc15748b5feb9e9caf02c6b926d02d20" translate="yes" xml:space="preserve">
          <source>Here is the github repo for this project:
&lt;a href=&quot;https://github.com/tflander/esp32-machine-emulator&quot;&gt;https://github.com/tflander/esp32-machine-emulator&lt;/a&gt;</source>
          <target state="translated">Вот репозиторий github для этого проекта: &lt;a href=&quot;https://github.com/tflander/esp32-machine-emulator&quot;&gt;https://github.com/tflander/esp32-machine-emulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcc76986de7699de787d44a107e1a95ff84a9507" translate="yes" xml:space="preserve">
          <source>Here is the project on PyPi:
&lt;a href=&quot;https://pypi.org/project/esp32-machine-emulator&quot;&gt;https://pypi.org/project/esp32-machine-emulator&lt;/a&gt;</source>
          <target state="translated">Вот проект на PyPi: &lt;a href=&quot;https://pypi.org/project/esp32-machine-emulator&quot;&gt;https://pypi.org/project/esp32-machine-emulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b50a5adc575cb249c1da38eead92b784535e1fa" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with the benefits of TDD or test-driving python, I
encourage you to take some time to Google and learn.  I prefer the pytest
library over the unittest library that comes with python3, but you are free
to test as you choose.</source>
          <target state="translated">Если вы не знакомы с преимуществами TDD или питона для тест-драйвинга,рекомендую вам потратить некоторое время на изучение Google.Я предпочитаю самую большую библиотеку,чем самую юнит-тестовую,которая поставляется с python3,но вы свободны в тестировании по своему усмотрению.</target>
        </trans-unit>
        <trans-unit id="31800e4bdaf801712a70a5bf35976e05f091042c" translate="yes" xml:space="preserve">
          <source>Note that the examples are only in the GitHub repo, and are not part of the
PyPi distribution.</source>
          <target state="translated">Обратите внимание,что примеры находятся только в репо GitHub и не являются частью дистрибутива PyPi.</target>
        </trans-unit>
        <trans-unit id="48012bbbd369e7cf9dbf01a37cf616f579aef634" translate="yes" xml:space="preserve">
          <source>Supported Features</source>
          <target state="translated">Поддерживаемые функции</target>
        </trans-unit>
        <trans-unit id="4f938311b8a06de9f55ed657652ae4880b71a1c5" translate="yes" xml:space="preserve">
          <source>Take a look at the examples folder in the GitHub repository.  Like I said,
as of this writing, the library emulates a very small slice of the API,
so if you don&amp;rsquo;t see an example for something you want to do, the feature
is not available.  Feel free to contact me or fork the repo and send me
a pull request for the feature.</source>
          <target state="translated">Взгляните на папку примеров в репозитории GitHub. Как я уже сказал, на момент написания этой статьи библиотека имитирует очень небольшой фрагмент API, поэтому, если вы не видите пример того, что хотите сделать, функция недоступна. Не стесняйтесь связаться со мной или создать ответвление репо и отправить мне запрос на включение функции.</target>
        </trans-unit>
        <trans-unit id="3fbe6fb41426ad4026df9bd88424d993a9fffb8b" translate="yes" xml:space="preserve">
          <source>The purpose of this package is to enable you to test-drive (TDD) your
MicroPython code in an IDE running on your computer.  It seems a lot
of people are test-driving python, but not many are test-driving MicroPython.
That&amp;rsquo;s understandable, since many MicroPython projects are simple, and
emulating real hardware in a test environment is difficult.</source>
          <target state="translated">Цель этого пакета - дать вам возможность протестировать (TDD) ваш код MicroPython в среде IDE, работающей на вашем компьютере. Кажется, что многие люди тестируют Python, но не многие тестируют MicroPython. Это понятно, поскольку многие проекты MicroPython просты, а эмуляция реального оборудования в тестовой среде затруднена.</target>
        </trans-unit>
        <trans-unit id="602a8b79861d980da2b562cad9bf4dfd3dea5350" translate="yes" xml:space="preserve">
          <source>The typical approach to emulating hardware is to replicate the hardware
programming interface (the API).  As of this writing, this library emulates
a very small slice of the ESP32 API.  I don&amp;rsquo;t know if the library will mature.
Hopefully I&amp;rsquo;ll either flesh it out, someone else will take over, or a
replacement will emerge.</source>
          <target state="translated">Типичный подход к эмуляции оборудования - это репликация интерфейса программирования оборудования (API). На момент написания этой статьи эта библиотека имитирует очень маленький фрагмент ESP32 API. Не знаю, вырастет ли библиотека. Надеюсь, я либо уточню это, либо кто-то другой возьмет на себя ответственность, либо появится замена.</target>
        </trans-unit>
        <trans-unit id="9c549c9dc3a66a7bd81a9e08299b99c86345cf30" translate="yes" xml:space="preserve">
          <source>esp32 machine package for test-driving code off-chip</source>
          <target state="translated">esp32-машина пакет для тестового вождения код вне чипа</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
