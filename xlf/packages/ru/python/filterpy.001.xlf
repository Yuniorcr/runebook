<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/filterpy/">
    <body>
      <group id="filterpy">
        <trans-unit id="8a8e298f9a396f054dba117cef6a17d8c2fbb635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Imminent drop of support of Python 2.7, 3.4. See section below for details.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : неизбежное прекращение поддержки Python 2.7, 3.4. См. Подробности в разделе ниже.</target>
        </trans-unit>
        <trans-unit id="4d58a7251bc15282c41f3b3a4aa3f72641348a7f" translate="yes" xml:space="preserve">
          <source>All tests are written to work with py.test. Just type</source>
          <target state="translated">Все тесты написаны для работы с py.test.Просто напечатайте</target>
        </trans-unit>
        <trans-unit id="c1939d3939c93a9c3ab83c20a36c6f9ccb15e5ef" translate="yes" xml:space="preserve">
          <source>And, if you want to install from the bleeding edge git version</source>
          <target state="translated">И,если вы хотите установить из версии с кровоточащим краем гита.</target>
        </trans-unit>
        <trans-unit id="e5a8c89ee16ef426c7761586d7e5aa3f19a032ae" translate="yes" xml:space="preserve">
          <source>As explained above, the tests are not robust. I&amp;rsquo;m still at the stage
where visual plots are the best way to see how things are working.
Apologies, but I think it is a sound choice for development. It is easy
for a filter to perform within theoretical limits (which we can write a
non-visual test for) yet be &amp;lsquo;off&amp;rsquo; in some way. The code itself contains
tests in the form of asserts and properties that ensure that arrays are
of the proper dimension, etc.</source>
          <target state="translated">Как объяснялось выше, тесты не являются надежными. Я все еще нахожусь на той стадии, когда визуальные сюжеты - лучший способ увидеть, как все работает. Извините, но я думаю, что это разумный выбор для разработки. Фильтр может легко работать в теоретических пределах (для которых мы можем написать невизуальный тест), но каким-то образом быть &amp;laquo;выключенным&amp;raquo;. Сам код содержит тесты в виде утверждений и свойств, которые гарантируют, что массивы имеют правильную размерность и т. Д.</target>
        </trans-unit>
        <trans-unit id="4b613f6d7285ef9f4bef8a4f0bd6a6c9681d7640" translate="yes" xml:space="preserve">
          <source>At the moment FilterPy is on version 1.x. I plan to fork the project
to version 2.0, and support only Python 3.5+. The 1.x version
will still be available, but I will not support it. If I add something
amazing to 2.0 and someone really begs, I might backport it; more
likely I would accept a pull request with the feature backported
to 1.x. But to be honest I don&amp;rsquo;t forsee this happening.</source>
          <target state="translated">На данный момент FilterPy находится на версии 1.x. Я планирую разветвить проект до версии 2.0 и поддерживать только Python 3.5+. Версия 1.x по-прежнему будет доступна, но я не буду ее поддерживать. Если я добавлю что-нибудь удивительное в 2.0, и кто-то действительно попросит, я могу выполнить обратный перенос; Скорее всего, я приму пул-реквест с функцией, перенесенной на 1.x. Но, честно говоря, я этого не предвижу.</target>
        </trans-unit>
        <trans-unit id="168929183d2470cb5fd9c8ab272eed288ccb698d" translate="yes" xml:space="preserve">
          <source>Basic use</source>
          <target state="translated">Основное применение</target>
        </trans-unit>
        <trans-unit id="968bd2b33b4162a81ec2cd8ed2df38da9b302693" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2015 Roger R. Labbe Jr</source>
          <target state="translated">Авторское право (c)2015 Роджер Р.Лаббе Младший.</target>
        </trans-unit>
        <trans-unit id="3d89f90b67b082a45bef90c0d79a6ebd3711a370" translate="yes" xml:space="preserve">
          <source>FilterPy - Kalman filters and other optimal and non-optimal estimation filters in Python.</source>
          <target state="translated">Фильтры FilterPy-Kalman и другие фильтры оптимальной и неоптимальной оценки на Python.</target>
        </trans-unit>
        <trans-unit id="1c3fbbca97bb5d8f412fea56090f90411596cfe8" translate="yes" xml:space="preserve">
          <source>Finally, run the filter.</source>
          <target state="translated">Наконец,запустите фильтр.</target>
        </trans-unit>
        <trans-unit id="ee3680252bd004d7ef4df31fbaff398d7d1a87fd" translate="yes" xml:space="preserve">
          <source>First, import the filters and helper functions.</source>
          <target state="translated">Сначала импортируйте фильтры и вспомогательные функции.</target>
        </trans-unit>
        <trans-unit id="35555ce65ba60c36f60b29bd85e767779829a60a" translate="yes" xml:space="preserve">
          <source>Full documentation is at
&lt;a href=&quot;https://filterpy.readthedocs.io/en/latest/&quot;&gt;https://filterpy.readthedocs.io/en/latest/&lt;/a&gt;</source>
          <target state="translated">Полная документация находится на &lt;a href=&quot;https://filterpy.readthedocs.io/en/latest/&quot;&gt;https://filterpy.readthedocs.io/en/latest/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="816b4bbd3e420c572b205dac19fade101d072597" translate="yes" xml:space="preserve">
          <source>I am making edits to the package now in support of my book;
once those are done I&amp;rsquo;ll probably create the 2.0 branch.
I&amp;rsquo;m contemplating a SLAM addition to the book, and am not
sure if I will do this in 3.5+ only or not.</source>
          <target state="translated">Сейчас я вношу изменения в пакет в поддержку моей книги; как только это будет сделано, я, вероятно, создам ветку 2.0. Я подумываю о добавлении SLAM в книгу и не уверен, что сделаю это только в версии 3.5+ или нет.</target>
        </trans-unit>
        <trans-unit id="a748886f04c2328f504cab48b8f72e609596428e" translate="yes" xml:space="preserve">
          <source>I haven&amp;rsquo;t extensively tested backwards compatibility - I use the
Anaconda distribution, and so I am on Python 3.6 and 2.7.14, along with
whatever version of NumPy, SciPy, and matplotlib they provide. But I am
using pretty basic Python - numpy.array, maybe a list comprehension in
my tests.</source>
          <target state="translated">Я не тестировал полностью обратную совместимость - я использую дистрибутив Anaconda, поэтому я использую Python 3.6 и 2.7.14 вместе с любой версией NumPy, SciPy и matplotlib, которую они предоставляют. Но я использую довольно простой Python - numpy.array, возможно, понимание списка в моих тестах.</target>
        </trans-unit>
        <trans-unit id="8e09978b025a4723b3622ef57e7d817d2a858e11" translate="yes" xml:space="preserve">
          <source>I haven&amp;rsquo;t finalized my decision on this, but NumPy is dropping
Python 2.7 support in December 2018. I will certainly drop Python
2.7 support by then; I will probably do it much sooner.</source>
          <target state="translated">Я не принял окончательного решения по этому поводу, но NumPy отказывается от поддержки Python 2.7 в декабре 2018 года. К тому времени я, безусловно, откажусь от поддержки Python 2.7; Я, наверное, сделаю это гораздо раньше.</target>
        </trans-unit>
        <trans-unit id="61c05ef3006579fbdd490e4b533ee3726eb4d772" translate="yes" xml:space="preserve">
          <source>I import from &lt;strong&gt;__future__&lt;/strong&gt; to ensure the code works in Python 2 and 3.</source>
          <target state="translated">Я импортирую из &lt;strong&gt;__future__,&lt;/strong&gt; чтобы убедиться, что код работает на Python 2 и 3.</target>
        </trans-unit>
        <trans-unit id="7488ac725f5d27750031e40080ed22d2b9cd5291" translate="yes" xml:space="preserve">
          <source>I said three books. I also like and use Bar-Shalom&amp;rsquo;s Estimation with
Applications to Tracking and Navigation. Much more mathematical than the
previous two books, I would not recommend it as a first text unless you
already have a background in control theory or optimal estimation. Once
you have that experience, this book is a gem. Every sentence is crystal
clear, his language is precise, but each abstract mathematical statement
is followed with something like &amp;ldquo;and this means&amp;hellip;&amp;rdquo;.</source>
          <target state="translated">Я сказал три книги. Мне также нравится и я использую оценку Бар-Шалома с приложениями для отслеживания и навигации. Гораздо более математический, чем предыдущие две книги, я бы не рекомендовал его в качестве первого текста, если у вас уже нет опыта в теории управления или оптимальной оценке. Если у вас есть такой опыт, эта книга станет жемчужиной. Каждое предложение кристально ясное, его язык точен, но каждое абстрактное математическое утверждение сопровождается чем-то вроде &amp;laquo;и это означает&amp;hellip;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2aa942fd3c88f16190a93b80a61fa11f8ebdb5a4" translate="yes" xml:space="preserve">
          <source>I use NumPy and SciPy for all of the computations. I have experimented
with Numba and it yields impressive speed ups with minimal costs, but I
am not convinced that I want to add that requirement to my project. It
is still on my list of things to figure out, however.</source>
          <target state="translated">Я использую NumPy и SciPy для всех вычислений.Я экспериментировал с Numba,и она дает впечатляющий прирост скорости при минимальных затратах,но я не уверен,что хочу добавить это требование в свой проект.Тем не менее,он всё ещё находится в моём списке вещей,которые нужно выяснить.</target>
        </trans-unit>
        <trans-unit id="ba522cc2398fca76e29351085a92280f3c143c00" translate="yes" xml:space="preserve">
          <source>I use three main texts as my refererence, though I do own the majority
of the Kalman filtering literature. First is Paul Zarchan&amp;rsquo;s
&amp;lsquo;Fundamentals of Kalman Filtering: A Practical Approach&amp;rsquo;. I think it by
far the best Kalman filtering book out there if you are interested in
practical applications more than writing a thesis. The second book I use
is Eli Brookner&amp;rsquo;s &amp;lsquo;Tracking and Kalman Filtering Made Easy&amp;rsquo;. This is an
astonishingly good book; its first chapter is actually readable by the
layperson! Brookner starts from the g-h filter, and shows how all other
filters - the Kalman filter, least squares, fading memory, etc., all
derive from the g-h filter. It greatly simplifies many aspects of
analysis and/or intuitive understanding of your problem. In contrast,
Zarchan starts from least squares, and then moves on to Kalman
filtering. I find that he downplays the predict-update aspect of the
algorithms, but he has a wealth of worked examples and comparisons
between different methods. I think both viewpoints are needed, and so I
can&amp;rsquo;t imagine discarding one book. Brookner also focuses on issues that
are ignored in other books - track initialization, detecting and
discarding noise, tracking multiple objects, an so on.</source>
          <target state="translated">Я использую три основных текста в качестве ссылки, хотя мне принадлежит большая часть литературы по фильтрам Калмана. Во-первых, это &amp;laquo;Основы фильтрации Калмана: практический подход&amp;raquo; Пола Зархана. Я думаю, что это лучшая книга по фильтрам Калмана, если вас интересуют практические приложения больше, чем написание диссертации. Вторая книга, которую я использую, - это Эли Брукнер &amp;laquo;Легкое отслеживание и фильтрация Калмана&amp;raquo;. Это удивительно хорошая книга; его первая глава действительно доступна для чтения непрофессионалам! Брукнер начинает с фильтра gh и показывает, как все остальные фильтры - фильтр Калмана, метод наименьших квадратов, затухающая память и т. Д. - все являются производными от фильтра gh. Это значительно упрощает многие аспекты анализа и / или интуитивного понимания вашей проблемы. Напротив, Зархан начинает с наименьших квадратов, а затем переходит к фильтрации Калмана.Я обнаружил, что он преуменьшает значение аспекта прогнозирования-обновления алгоритмов, но у него есть множество отработанных примеров и сравнений между различными методами. Я думаю, что необходимы обе точки зрения, поэтому я не могу себе представить, чтобы отказаться от одной книги. Брукнер также уделяет внимание вопросам, которые игнорируются в других книгах, - инициализации треков, обнаружению и устранению шума, отслеживанию нескольких объектов и т. Д.</target>
        </trans-unit>
        <trans-unit id="b9067a5289890407887c107d828776b6282737e0" translate="yes" xml:space="preserve">
          <source>If you prefer to download the source yourself</source>
          <target state="translated">Если вы предпочитаете загрузить источник самостоятельно</target>
        </trans-unit>
        <trans-unit id="950ad6a6b9a6d7503133a16c0753c700fd4b6713" translate="yes" xml:space="preserve">
          <source>If you use Anaconda, you can install from the conda-forge channel. You
will need to add the conda-forge channel if you haven&amp;rsquo;t already done so:</source>
          <target state="translated">Если вы используете Anaconda, вы можете установить его из канала conda-forge. Вам нужно будет добавить канал conda-forge, если вы еще этого не сделали:</target>
        </trans-unit>
        <trans-unit id="d021e768fe46c9e993b9bc26daebe1e0a7ccf5ea" translate="yes" xml:space="preserve">
          <source>Initialize the filter&amp;rsquo;s matrices.</source>
          <target state="translated">Инициализируйте матрицы фильтра.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="069f6f37ff0b3b14a1e2b9c9a3ca8b9b8085a537" translate="yes" xml:space="preserve">
          <source>Kalman filtering and optimal estimation library</source>
          <target state="translated">Кальмановская фильтрация и оптимальная библиотека оценки</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="ff42cf30abec69d9cd5e9a6d51db617908be4d0b" translate="yes" xml:space="preserve">
          <source>My aim is largely pedalogical - I opt for clear code that matches the
equations in the relevant texts on a 1-to-1 basis, even when that has a
performance cost. There are places where this tradeoff is unclear - for
example, I find it somewhat clearer to write a small set of equations
using linear algebra, but numpy&amp;rsquo;s overhead on small matrices makes it
run slower than writing each equation out by hand. Furthermore, books
such Zarchan present the written out form, not the linear algebra form.
It is hard for me to choose which presentation is &amp;lsquo;clearer&amp;rsquo; - it depends
on the audience. In that case I usually opt for the faster implementation.</source>
          <target state="translated">Моя цель в значительной степени педалогична - я выбираю четкий код, который соответствует уравнениям в соответствующих текстах в соотношении 1 к 1, даже если это снижает производительность. Есть места, где этот компромисс неясен - например, я считаю, что несколько понятнее написать небольшой набор уравнений с использованием линейной алгебры, но накладные расходы numpy на небольшие матрицы заставляют его работать медленнее, чем писать каждое уравнение вручную. Кроме того, такие книги, как Зарчан, представляют собой письменную форму, а не форму линейной алгебры. Мне сложно выбрать, какая презентация &amp;laquo;четче&amp;raquo; - это зависит от аудитории. В этом случае я обычно выбираю более быструю реализацию.</target>
        </trans-unit>
        <trans-unit id="fa8af4cb23ae77c128a4a33e6c038f3d5d3fe115" translate="yes" xml:space="preserve">
          <source>My book &lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt;
uses this library, and is the place to go if you are trying to learn
about Kalman filtering and/or this library. These two are not exactly in
sync - my normal development cycle is to add files here, test them, figure
out how to present them pedalogically, then write the appropriate section
or chapter in the book. So there is code here that is not discussed
yet in the book.</source>
          <target state="translated">Моя книга &lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt; использует эту библиотеку, и это место, куда можно обратиться, если вы пытаетесь узнать о фильтрации Калмана и / или этой библиотеке. Эти два не совсем синхронизированы - мой обычный цикл разработки заключается в том, чтобы добавить сюда файлы, протестировать их, выяснить, как представить их педалогически, а затем написать соответствующий раздел или главу в книге. Итак, здесь есть код, который еще не обсуждался в книге.</target>
        </trans-unit>
        <trans-unit id="24162d16555bd8804ec6c655dbbca2fb05c22443" translate="yes" xml:space="preserve">
          <source>Note: I make no guarantees that everything works if you install from here.
I&amp;rsquo;m the only developer, and so I don&amp;rsquo;t worry about dev/release branches and
the like. Unless I fix a bug for you and tell you to get this version because
I haven&amp;rsquo;t made a new release yet, I strongly advise not installing from git.</source>
          <target state="translated">Примечание. Я не гарантирую, что все будет работать, если вы установите его отсюда. Я единственный разработчик, поэтому меня не волнуют ветки разработки / выпуска и тому подобное. Если я не исправлю для вас ошибку и не скажу вам получить эту версию, потому что я еще не выпустил новую версию, я настоятельно рекомендую не устанавливать из git.</target>
        </trans-unit>
        <trans-unit id="a94bc79395b7f9e096a0e3083d5e99d870902600" translate="yes" xml:space="preserve">
          <source>Now, create the filter</source>
          <target state="translated">Теперь создайте фильтр</target>
        </trans-unit>
        <trans-unit id="4428df60996dd395af6c51238f43c71d4400a7fa" translate="yes" xml:space="preserve">
          <source>Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:</source>
          <target state="translated">Настоящим предоставляется бесплатное разрешение любому лицу, получающему копию этого программного обеспечения и связанных файлов документации (&amp;laquo;Программное обеспечение&amp;raquo;), для работы с Программным обеспечением без ограничений, включая, помимо прочего, права на использование, копирование, изменение, объединение. , публиковать, распространять, сублицензировать и / или продавать копии Программного обеспечения и разрешать лицам, которым предоставляется Программное обеспечение, делать это при соблюдении следующих условий:</target>
        </trans-unit>
        <trans-unit id="c89209cb3cdced2b4e97399f88e4af894bfd8485" translate="yes" xml:space="preserve">
          <source>Plan for dropping Python 2.7 support</source>
          <target state="translated">План по снятию поддержки Python 2.7</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">Ссылки</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Требования</target>
        </trans-unit>
        <trans-unit id="f5470597044f9881eb58bf21ebb16608cd981bed" translate="yes" xml:space="preserve">
          <source>Sorry, that is the extent of the documentation here. However, the library
is broken up into subdirectories: gh, kalman, memory, leastsq, and so on.
Each subdirectory contains python files relating to that form of filter.
The functions and methods contain pretty good docstrings on use.</source>
          <target state="translated">Простите,вот объем документации.Однако,библиотека разбита на поддиректории:gh,kalman,память,leastsq и так далее.Каждый подкаталог содержит питоновые файлы,относящиеся к этой форме фильтра.Функции и методы содержат довольно неплохие строки документации по использованию.</target>
        </trans-unit>
        <trans-unit id="e07e66ec2ec5d10f836f2ac4a05173041f8d092a" translate="yes" xml:space="preserve">
          <source>Sphinx generated documentation lives at &lt;a href=&quot;http://filterpy.readthedocs.org/&quot;&gt;http://filterpy.readthedocs.org/&lt;/a&gt;.
Generation is triggered by git when I do a check in, so this will always
be bleeding edge development version - it will often be ahead of the
released version.</source>
          <target state="translated">Созданная Sphinx документация находится на &lt;a href=&quot;http://filterpy.readthedocs.org/&quot;&gt;http://filterpy.readthedocs.org/&lt;/a&gt; . Генерация запускается git, когда я выполняю проверку, так что это всегда будет последняя версия разработки - она ​​часто будет опережать выпущенную версию.</target>
        </trans-unit>
        <trans-unit id="ba51f3c923b832e2cb3feca36180c8813bdbec40" translate="yes" xml:space="preserve">
          <source>THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.TION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</source>
          <target state="translated">ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ &amp;laquo;КАК ЕСТЬ&amp;raquo;, БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ, ГАРАНТИИ КОММЕРЧЕСКОЙ ПРИГОДНОСТИ, ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ И НЕЗАЩИТЫ ОТ ПРАВ. НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ АВТОРЫ ИЛИ ВЛАДЕЛЬЦЫ АВТОРСКИХ ПРАВ НЕ НЕСЕТ ОТВЕТСТВЕННОСТИ ЗА ЛЮБЫЕ ПРЕТЕНЗИИ, УБЫТКИ ИЛИ ДРУГИЕ ОТВЕТСТВЕННОСТЬ, БЫЛИ В РЕЗУЛЬТАТЕ ДОГОВОРА, ПРАВОВЫХ ПРАВ ИЛИ ИНЫХ СЛУЧАЙНЫХ ПРОИЗВОДСТВА ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ИЛИ ИЛИ В СВЯЗИ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ. ДЕЙСТВИЯ ДОГОВОРА, ПРАВОМОЧНЫХ ИЛИ Иных ДЕЙСТВИЙ, ПРОИЗВОДИМЫХ В РЕЗУЛЬТАТЕ, ИЗ ИЛИ В СВЯЗИ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ ИЛИ ИСПОЛЬЗОВАНИЕМ ИЛИ ДРУГИМИ ДЕЛАМИ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Тестирование</target>
        </trans-unit>
        <trans-unit id="2770edfa17d1ba1518644752acbba767797d8840" translate="yes" xml:space="preserve">
          <source>The MIT License (MIT)</source>
          <target state="translated">Лицензия MIT (MIT)</target>
        </trans-unit>
        <trans-unit id="abf94dbab29db68325894cd60a65f3c2a1fc56fa" translate="yes" xml:space="preserve">
          <source>The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.</source>
          <target state="translated">Вышеупомянутое уведомление об авторском праве и настоящее уведомление о разрешении должны быть включены во все копии или существенные части Программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="ab40192173a47c8e5ce7406412a220e2a474ada7" translate="yes" xml:space="preserve">
          <source>The most general installation is just to use pip, which should come with
any modern Python distribution.</source>
          <target state="translated">Самая общая установка-это просто использовать трубопровод,который должен поставляться с любым современным распределительным устройством Python.</target>
        </trans-unit>
        <trans-unit id="24d855a043cf9286f92b9e45c2eac0cf512060ff" translate="yes" xml:space="preserve">
          <source>This is code I am developing in conjunction with my book Kalman and
Bayesian Filter in Python, which you can read/download at
&lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&lt;/a&gt;</source>
          <target state="translated">Это код, который я разрабатываю вместе с моей книгой &amp;laquo;Калман и байесовский фильтр в Python&amp;raquo;, которую вы можете прочитать / скачать по адресу &lt;a href=&quot;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/&quot;&gt;https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2920fd5055a135502dd8014d61c32dbbe26640" translate="yes" xml:space="preserve">
          <source>This library provides Kalman filtering and various related optimal and
non-optimal filtering software written in Python. It contains Kalman
filters, Extended Kalman filters, Unscented Kalman filters, Kalman
smoothers, Least Squares filters, fading memory filters, g-h filters,
discrete Bayes, and more.</source>
          <target state="translated">Эта библиотека обеспечивает фильтрацию Kalman и различные связанные с ней оптимальные и неоптимальные программы фильтрации,написанные на языке Python.Она содержит фильтры Кальмана,расширенные фильтры Кальмана,непатентованные фильтры Кальмана,сглаживающие фильтры Кальмана,фильтры наименьших квадратов,выцветающие фильтры памяти,фильтры g-h,дискретные Bayes,и многое другое.</target>
        </trans-unit>
        <trans-unit id="e13f7bb9ae937b5d5cd0d8b07fd0aa0ec1e81f48" translate="yes" xml:space="preserve">
          <source>This library uses NumPy, SciPy, Matplotlib, and Python.</source>
          <target state="translated">Эта библиотека использует NumPy,SciPy,Matplotlib и Python.</target>
        </trans-unit>
        <trans-unit id="6bf801da2d6dc208fc60fa6f2e476b5d0f913f6e" translate="yes" xml:space="preserve">
          <source>Why 3.5+, and not 3.4+? 3.5 introduced the matrix multiply symbol,
and I want my code to take advantage of it. Plus, to be honest,
I&amp;rsquo;m being selfish. I don&amp;rsquo;t want to spend my life supporting this
package, and moving as far into the present as possible means
a few extra years before the Python version I choose becomes
hopelessly dated and a liability. I recognize this makes people
running the default Python in their linux distribution more
painful. All I can say is I did not decide to do the Python
3 fork, and I don&amp;rsquo;t have the time to support the bifurcation
any longer.</source>
          <target state="translated">Почему 3.5+, а не 3.4+? 3.5 представил символ матричного умножения, и я хочу, чтобы мой код использовал его преимущества. Плюс, честно говоря, я эгоистичен. Я не хочу тратить свою жизнь на поддержку этого пакета, и продвижение в настоящее время, насколько это возможно, означает несколько дополнительных лет до того, как выбранная мной версия Python станет безнадежно устаревшей и станет помехой. Я понимаю, что это делает людей, использующих Python по умолчанию в своем дистрибутиве Linux, более болезненным. Все, что я могу сказать, это то, что я не решил делать вилку Python 3, и у меня больше нет времени на поддержку бифуркации.</target>
        </trans-unit>
        <trans-unit id="7bda3972fd645f4aa5fd7bc9c0f516b27fc7fa48" translate="yes" xml:space="preserve">
          <source>and then install with:</source>
          <target state="translated">а затем установить с:</target>
        </trans-unit>
        <trans-unit id="f6762bfd6156e1d6ad2d093399eec4c20a937173" translate="yes" xml:space="preserve">
          <source>at the
command line.</source>
          <target state="translated">на командной строке.</target>
        </trans-unit>
        <trans-unit id="30b49ad158449a6fb7703af823510598668f8ad0" translate="yes" xml:space="preserve">
          <source>conda config &amp;ndash;add channels conda-forge</source>
          <target state="translated">conda config &amp;ndash;добавить каналы conda-forge</target>
        </trans-unit>
        <trans-unit id="99422a0a2caacfadcbdf22e2c4ec04c454b2eea3" translate="yes" xml:space="preserve">
          <source>conda install filterpy</source>
          <target state="translated">конда-фильтровальный фильтр</target>
        </trans-unit>
        <trans-unit id="0e043421bf3470cb731f4c32448c91e870f04998" translate="yes" xml:space="preserve">
          <source>py.test</source>
          <target state="translated">пи.тест</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
