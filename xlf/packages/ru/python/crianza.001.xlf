<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/crianza/">
    <body>
      <group id="crianza">
        <trans-unit id="90578b4b08efa4ccc792ffa82d11d16addfab948" translate="yes" xml:space="preserve">
          <source>(2 + 3) * 4</source>
          <target state="translated">(2 + 3) * 4</target>
        </trans-unit>
        <trans-unit id="9b2abf7f931ef0561ff59098cecc5f3ada41e345" translate="yes" xml:space="preserve">
          <source>) and the
value on top of the stack.</source>
          <target state="translated">) и значение на вершине стека.</target>
        </trans-unit>
        <trans-unit id="b0bebed444c9176225f8a0815fe4c22aebc69c89" translate="yes" xml:space="preserve">
          <source>), the number of items on the return stack (</source>
          <target state="translated">), количество элементов в стеке возврата (</target>
        </trans-unit>
        <trans-unit id="cd5428592573d8998a00d166fc48bace9610c33e" translate="yes" xml:space="preserve">
          <source>). In this case, the entire expression
is constant-folded down to the result</source>
          <target state="translated">). В этом случае все выражение сворачивается вниз до результата</target>
        </trans-unit>
        <trans-unit id="456be907097f8bb5621f3388e63dca76ddbf17c1" translate="yes" xml:space="preserve">
          <source>, an experimental, work-in-progress
compiler to native &lt;a href=&quot;https://docs.python.org/2/library/dis.html#python-bytecode-instructions&quot;&gt;CPython bytecode&lt;/a&gt;. At
the moment, it only correctly implements simple instructions and doesn&amp;rsquo;t do any
optimizations.</source>
          <target state="translated">, экспериментальный компилятор, находящийся в стадии разработки, в собственный &lt;a href=&quot;https://docs.python.org/2/library/dis.html#python-bytecode-instructions&quot;&gt;байт-код CPython&lt;/a&gt; . На данный момент он правильно реализует только простые инструкции и не выполняет никаких оптимизаций.</target>
        </trans-unit>
        <trans-unit id="b002e038f685b03772e95a26208183524c9fc2f7" translate="yes" xml:space="preserve">
          <source>, and this is what I
usually get, although I&amp;rsquo;ve also gotten fun variants that are almost
correct, such as</source>
          <target state="translated">, и это то, что я обычно получаю, хотя я также получал забавные варианты, которые почти правильны, такие как</target>
        </trans-unit>
        <trans-unit id="decbd273adc77d97ec3321669035383ae841d619" translate="yes" xml:space="preserve">
          <source>, the
number of arguments the resulting Python function will take.  In the above
example, we create a function that multiplies its &lt;em&gt;single&lt;/em&gt; argument by two, so
we set</source>
          <target state="translated">, количество аргументов, которые примет результирующая функция Python. В приведенном выше примере мы создаем функцию, которая умножает свой &lt;em&gt;единственный&lt;/em&gt; аргумент на два, поэтому мы устанавливаем</target>
        </trans-unit>
        <trans-unit id="0ad5663191931dfc99fa454b2bb85474cf7ad24f" translate="yes" xml:space="preserve">
          <source>, the number
of items on the data stack</source>
          <target state="translated">, количество элементов в стеке данных</target>
        </trans-unit>
        <trans-unit id="745505e405486921373a34e2c2303a2e15de0152" translate="yes" xml:space="preserve">
          <source>, the number of items on the data stack
(</source>
          <target state="translated">, количество элементов в стеке данных (</target>
        </trans-unit>
        <trans-unit id="3d10711b2e9850859e20f3ce54c85e2dde1c188e" translate="yes" xml:space="preserve">
          <source>.  This is &lt;em&gt;exactly&lt;/em&gt; the same as doing:</source>
          <target state="translated">. Это &lt;em&gt;точно&lt;/em&gt; так же , как делают:</target>
        </trans-unit>
        <trans-unit id="f781e8b1b56de354e5c64fc69553bfe12e94c2f5" translate="yes" xml:space="preserve">
          <source>.  This will list the current instruction pointer</source>
          <target state="translated">. Это перечислит текущий указатель инструкции</target>
        </trans-unit>
        <trans-unit id="969fd9a83ca867a717842cfb0d95ca8dd0c39bf7" translate="yes" xml:space="preserve">
          <source>.  You can see this by printing out the compiled code with the command</source>
          <target state="translated">. В этом можно убедиться, распечатав скомпилированный код с помощью команды</target>
        </trans-unit>
        <trans-unit id="7778f0db4ef44d8d8dfbe9d50e1b9f7292033f9c" translate="yes" xml:space="preserve">
          <source>. The language
is basically a &lt;a href=&quot;https://en.wikipedia.org/wiki/Forth_(programming_language)&quot;&gt;dialect of
Forth&lt;/a&gt;.</source>
          <target state="translated">. Этот язык в основном является &lt;a href=&quot;https://en.wikipedia.org/wiki/Forth_(programming_language)&quot;&gt;диалектом форта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc4a3e3b9eca496c550f5eb463e0fced8112dfa4" translate="yes" xml:space="preserve">
          <source>.code</source>
          <target state="translated">.код</target>
        </trans-unit>
        <trans-unit id="2d88b339e3d17159e955704bdc757d13617492ee" translate="yes" xml:space="preserve">
          <source>1000 if self._error else 0</source>
          <target state="translated">1000,если сам._ужас еще 0</target>
        </trans-unit>
        <trans-unit id="262948d06ec1d52bfce5ecc85f999bc55ddacfe3" translate="yes" xml:space="preserve">
          <source>Again, note that this compiler is currently &lt;em&gt;very&lt;/em&gt; buggy. In particular, it
doesn&amp;rsquo;t correctly implement branching (jumps, if-statements, etc.) and many
other things.</source>
          <target state="translated">Опять же, обратите внимание, что этот компилятор в настоящее время &lt;em&gt;очень&lt;/em&gt; глючит. В частности, он неправильно реализует ветвление (переходы, операторы if и т. Д.) И многое другое.</target>
        </trans-unit>
        <trans-unit id="376f271566f0283944d906efb6695d8381c9316b" translate="yes" xml:space="preserve">
          <source>An experimental, in-progress compiler to native Python bytecode</source>
          <target state="translated">Экспериментальный,находящийся в процессе разработки компилятор для нативного байткода Python.</target>
        </trans-unit>
        <trans-unit id="98a80809741d37f87ac3e413198500b0db7755ce" translate="yes" xml:space="preserve">
          <source>An interpreter for a Forth-like stack-based language</source>
          <target state="translated">Переводчик для Форт-подобного языка,основанного на стеке.</target>
        </trans-unit>
        <trans-unit id="65d35d237c8a726c2af59d9888c57c112d3e2acb" translate="yes" xml:space="preserve">
          <source>Because the CPython bytecode also operates on Python types, it naturally
supports things like multiplying sequences:</source>
          <target state="translated">Поскольку байт-экод CPython также работает с типами Python,он,естественно,поддерживает такие вещи,как умножение последовательностей:</target>
        </trans-unit>
        <trans-unit id="89161f9c39ae88fa85945772434903b308057732" translate="yes" xml:space="preserve">
          <source>Compilation from source language down to virtual machine language</source>
          <target state="translated">Компиляция из исходного языка в язык виртуальной машины</target>
        </trans-unit>
        <trans-unit id="5aea1693157f20d398a9e36d6312097536cc8bed" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2015 Christian Stigen Larsen</source>
          <target state="translated">Авторское право (C)2015 Кристиан Стиген Ларсен</target>
        </trans-unit>
        <trans-unit id="ad62ee6e83cd9f9d1e5dcb4a2539dc8953c39ff5" translate="yes" xml:space="preserve">
          <source>Crianza</source>
          <target state="translated">Крианца</target>
        </trans-unit>
        <trans-unit id="a3e8d448bde2c01c28159483be2e5ab21e9d144f" translate="yes" xml:space="preserve">
          <source>Crianza also contains</source>
          <target state="translated">Крианца также содержит</target>
        </trans-unit>
        <trans-unit id="59fdf15e51b9a90a0adbfec0084e40d4c24a8547" translate="yes" xml:space="preserve">
          <source>Crianza also contains very simple genetic programming facilities, just
to demonstrate a cool usage of the VM.</source>
          <target state="translated">Crianza также содержит очень простые средства генетического программирования,просто чтобы продемонстрировать крутое использование VM.</target>
        </trans-unit>
        <trans-unit id="dd93c45e367459fc28605d998b2ebee397126657" translate="yes" xml:space="preserve">
          <source>Crianza is a very simple program virtual machine with example genetic
programming applications.</source>
          <target state="translated">Crianza-это очень простая программная виртуальная машина с примерами приложений генетического программирования.</target>
        </trans-unit>
        <trans-unit id="2ee0d2dca289c3eb54f4cc5e98db8d63e9b0794b" translate="yes" xml:space="preserve">
          <source>DS</source>
          <target state="translated">DS</target>
        </trans-unit>
        <trans-unit id="2a44864bedc9bb47878a0f293b9863c2248c52a9" translate="yes" xml:space="preserve">
          <source>Data types: Integers, floats, booleans and strings</source>
          <target state="translated">Типы данных:Интегралы,поплавки,булеры и струны</target>
        </trans-unit>
        <trans-unit id="d05ed29705761dd9e8b77dff02254674f59c83ff" translate="yes" xml:space="preserve">
          <source>Distributed under the BSD 3-Clause License. See the LICENSE.txt file for
the full text.</source>
          <target state="translated">Распространяется по лицензии BSD 3-Clause License.Полный текст см.в файле LICENSE.txt.</target>
        </trans-unit>
        <trans-unit id="d04e1b8d38b11b25ff6bad16e9bdc6de53907189" translate="yes" xml:space="preserve">
          <source>Example: Controlling parsing</source>
          <target state="translated">Пример:Управление разбором</target>
        </trans-unit>
        <trans-unit id="01cc434e0aae6b8359bccca08c435ad6df4317f8" translate="yes" xml:space="preserve">
          <source>Example: Genetic programming</source>
          <target state="translated">Пример:Генетическое программирование</target>
        </trans-unit>
        <trans-unit id="8bbb2241239454f2fd6ea67d4528532847352e9a" translate="yes" xml:space="preserve">
          <source>Example: Running a simple program from Python</source>
          <target state="translated">Пример:Запуск простой программы с Python</target>
        </trans-unit>
        <trans-unit id="1012cf866ed03d9fd9e6e06d94c3481f318cfc1b" translate="yes" xml:space="preserve">
          <source>Example: Source code with subroutines</source>
          <target state="translated">Пример:Исходный код с подпрограммами</target>
        </trans-unit>
        <trans-unit id="74433d56b88aefb3e1ccfbf8a053f30c3e378705" translate="yes" xml:space="preserve">
          <source>Example: Using crianza from the command line</source>
          <target state="translated">Пример:Использование крианзы из командной строки</target>
        </trans-unit>
        <trans-unit id="d2c391f89b80fd6ddb0d28f8d9847e484ed0a363" translate="yes" xml:space="preserve">
          <source>For the above example, the fitness score encodes several goals:</source>
          <target state="translated">Для вышеприведенного примера,фитнес-счет кодирует несколько голов:</target>
        </trans-unit>
        <trans-unit id="e535032bbffb1677991a1ac9deb0622823aaa726" translate="yes" xml:space="preserve">
          <source>For the above, it almost always seems to converge. The obvious result
for calculating the square of a number is</source>
          <target state="translated">Для вышесказанного почти всегда кажется,что он сходится.Очевидный результат для вычисления квадрата числа-это</target>
        </trans-unit>
        <trans-unit id="83c972f3df97181f7a2dcb03ec10e397f7106911" translate="yes" xml:space="preserve">
          <source>Furthermore, it uses the &lt;a href=&quot;https://pypi.python.org/pypi/byteplay/0.2&quot;&gt;byteplay module&lt;/a&gt;, which works for Python 2.x only.
In time, I plan to support all instructions and the Python 3.x series.</source>
          <target state="translated">Кроме того, он использует &lt;a href=&quot;https://pypi.python.org/pypi/byteplay/0.2&quot;&gt;модуль byteplay&lt;/a&gt; , который работает только с Python 2.x. Со временем я планирую поддерживать все инструкции и серию Python 3.x.</target>
        </trans-unit>
        <trans-unit id="dd43d31de5b67d2d08845ea50dc9ca91c99fd44b" translate="yes" xml:space="preserve">
          <source>Here is the main part of the code that instructs Crianza to find a</source>
          <target state="translated">Вот основная часть кода,которая инструктирует Крианцу о том,как найти</target>
        </trans-unit>
        <trans-unit id="5723ce3a2d10cbf827162afee57c19432b657c99" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s code to print the Fibonacci sequence:</source>
          <target state="translated">Вот код для печати последовательности Фибоначчи:</target>
        </trans-unit>
        <trans-unit id="0d3f35998f1921266e21688229a7fe892f313e86" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;ve not played around much with the GP, but I think it currently does
crossover quite badly and unintelligently. It also seems to have
problems converging on somewhat more advanced programs. But, it&amp;rsquo;s a
start, and it&amp;rsquo;s definitely a lot of fun!</source>
          <target state="translated">Я не особо много играл с GP, но я думаю, что сейчас он плохо и неразумно кроссовер. Также, похоже, есть проблемы с переходом на несколько более продвинутые программы. Но это начало, и это определенно очень весело!</target>
        </trans-unit>
        <trans-unit id="ea424d38af72dd1366a08aad1f47eca3e7ec3d24" translate="yes" xml:space="preserve">
          <source>IP</source>
          <target state="translated">IP-АДРЕС</target>
        </trans-unit>
        <trans-unit id="28772ac68c4ecb9394b7b2928403f6c16e1436e9" translate="yes" xml:space="preserve">
          <source>In fact, the Python bytecode for the two functions are exactly the same, sans
the local argument name.</source>
          <target state="translated">На самом деле,байткод Python для двух функций абсолютно одинаков,за исключением имени локального аргумента.</target>
        </trans-unit>
        <trans-unit id="4adeb1dfba8fadc5d51405deb59e15dbfd646573" translate="yes" xml:space="preserve">
          <source>In this case, the entire code will be constant-folded to simply 20. The</source>
          <target state="translated">В этом случае весь код будет постоянно складываться до простого 20.</target>
        </trans-unit>
        <trans-unit id="641ab27786347be1c7ac80c61cd9c5a472c75bf6" translate="yes" xml:space="preserve">
          <source>Install from PyPI:</source>
          <target state="translated">Установка из PyPI:</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="016306a37644bb615a64608475d4dad37c7484fc" translate="yes" xml:space="preserve">
          <source>It comes both with a command line program (for running programs and starting a
REPL) and as a Python module so you can create and run programs from Python.
The</source>
          <target state="translated">Он поставляется как с программой командной строки (для запуска программ и REPL),так и в виде модуля Python,так что вы можете создавать и запускать программы на Python.</target>
        </trans-unit>
        <trans-unit id="9d6e4753a76fe2315edccbd9087b6b2730c1fe45" translate="yes" xml:space="preserve">
          <source>It uses a weighted &lt;a href=&quot;https://en.wikipedia.org/wiki/Jaccard_index#Tanimoto_similarity_and_distance&quot;&gt;Tanimoto coefficient (or Jaccard
index)&lt;/a&gt;
to relate fitness scores among programs, so you can encode any goal. See
the example files for more information.</source>
          <target state="translated">Он использует взвешенный &lt;a href=&quot;https://en.wikipedia.org/wiki/Jaccard_index#Tanimoto_similarity_and_distance&quot;&gt;коэффициент Танимото (или индекс Жаккара),&lt;/a&gt; чтобы связать оценки пригодности между программами, поэтому вы можете кодировать любую цель. См. Примеры файлов для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="62dfb418aa5fe184e07cb42ddbc791c93dc5a566" translate="yes" xml:space="preserve">
          <source>Just type</source>
          <target state="translated">Просто напечатайте</target>
        </trans-unit>
        <trans-unit id="ebd31605d313a0796e5d8244ab7f1b733f6b9728" translate="yes" xml:space="preserve">
          <source>License and author</source>
          <target state="translated">Лицензия и автор</target>
        </trans-unit>
        <trans-unit id="b36f5d479abb3fd8a23e527fabad55a55a076469" translate="yes" xml:space="preserve">
          <source>More examples in the</source>
          <target state="translated">Дополнительные примеры в</target>
        </trans-unit>
        <trans-unit id="02a58f6f26a4bf096e82ba7b1e5c29f093ef18d3" translate="yes" xml:space="preserve">
          <source>Native Python bytecode compiler</source>
          <target state="translated">Компилятор байткода Native Python</target>
        </trans-unit>
        <trans-unit id="dffcd8ee5b021428b5a66409c3cf5ffd0ef47513" translate="yes" xml:space="preserve">
          <source>Notice that the optimizer constant-folds the entire expression down to simply</source>
          <target state="translated">Обратите внимание,что оптимизатор постоянно складывает все выражение до простого</target>
        </trans-unit>
        <trans-unit id="54561fd891ee8d3bc3718283afdce5d24a9fb9d4" translate="yes" xml:space="preserve">
          <source>RS</source>
          <target state="translated">RS</target>
        </trans-unit>
        <trans-unit id="2959b6f8046ae37e19b5157cb97b691664f7bd93" translate="yes" xml:space="preserve">
          <source>Runtime and compile time errors in the program are penalized
(</source>
          <target state="translated">Ошибки времени выполнения и компиляции в программе штрафуются (</target>
        </trans-unit>
        <trans-unit id="a1614ecc4e1e7e863ea36eeabcefacd2d98fa89d" translate="yes" xml:space="preserve">
          <source>Simple Forth-like VM and genetic programming framework.</source>
          <target state="translated">Простая Форт-подобная ВМ и структура генетического программирования.</target>
        </trans-unit>
        <trans-unit id="200c007403aafa9f6caf36fbab97c4d953e76752" translate="yes" xml:space="preserve">
          <source>Simple correctness checking</source>
          <target state="translated">Простая проверка правильности</target>
        </trans-unit>
        <trans-unit id="488016aeffd3725ec90f58a0174b566527dd6699" translate="yes" xml:space="preserve">
          <source>Some simple peephole optimizations</source>
          <target state="translated">Некоторые простые оптимизации глазка</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="77d017b321a82b348c35437f78bb59c9c1e9d0a3" translate="yes" xml:space="preserve">
          <source>The VM contains:</source>
          <target state="translated">ВМ содержит:</target>
        </trans-unit>
        <trans-unit id="138bc16623faae49da0e67c9595ed7819073c5b6" translate="yes" xml:space="preserve">
          <source>The code length should be no more than 5 instructions, but as small
as possible.</source>
          <target state="translated">Длина кода должна быть не более 5 инструкций,но как можно меньше.</target>
        </trans-unit>
        <trans-unit id="72c078e431a8c80abec1f5ec8809628f74d36cde" translate="yes" xml:space="preserve">
          <source>The complete machine is returned. Here it prints the current value of
the instruction pointer</source>
          <target state="translated">Машина в сборе возвращается.Здесь она печатает текущее значение указателя инструкции.</target>
        </trans-unit>
        <trans-unit id="1fdd25a60ea6841097a9fd0c74b6a137237c8124" translate="yes" xml:space="preserve">
          <source>The genetic programming part uses a simple evolutionary approach with
crossover and weighted Tanimoto coefficients to relate fitness scores.</source>
          <target state="translated">В части генетического программирования используется простой эволюционный подход с кроссовером и взвешенными коэффициентами Танимото для соотношения баллов за фитнес.</target>
        </trans-unit>
        <trans-unit id="8e8862279b34124ce2156caaecc9a1e2827184da" translate="yes" xml:space="preserve">
          <source>The length of the data stack should be exactly one (this makes it
easier to embed the resulting code in a subroutine).</source>
          <target state="translated">Длина стека данных должна быть ровно одинаковой (это облегчает встраивание полученного кода в подпрограмму).</target>
        </trans-unit>
        <trans-unit id="96a8f3bad58877a2193d967a7d121509ac669c93" translate="yes" xml:space="preserve">
          <source>The more elaborate way of parsing and running code is:</source>
          <target state="translated">Более сложный способ разбора и выполнения кода:</target>
        </trans-unit>
        <trans-unit id="7264f92cc06fc1440581f616fe3fe92d839f0249" translate="yes" xml:space="preserve">
          <source>The project&amp;rsquo;s main goal is to be tutorial and fun.</source>
          <target state="translated">Основная цель проекта - быть обучающим и увлекательным.</target>
        </trans-unit>
        <trans-unit id="9d1f3a585e081c0e37a664c382bcce17ffb6db2f" translate="yes" xml:space="preserve">
          <source>The return stack should be zero after program completion.</source>
          <target state="translated">Стек возврата должен быть равен нулю после завершения программы.</target>
        </trans-unit>
        <trans-unit id="6e0ee4af76fbe65c0824dd610ddbadf829524ebe" translate="yes" xml:space="preserve">
          <source>The simplest way to get started with the language itself is to use the</source>
          <target state="translated">Самый простой способ начать с самого языка-это использование</target>
        </trans-unit>
        <trans-unit id="689c31e1556df6ab5eaa0b2bd8a0d478e2cd8b86" translate="yes" xml:space="preserve">
          <source>The top of the stack</source>
          <target state="translated">Верхняя часть стека</target>
        </trans-unit>
        <trans-unit id="7b930be5df29c83ec37ef31f0d98190220389bb5" translate="yes" xml:space="preserve">
          <source>This is equivalent of computing</source>
          <target state="translated">Это эквивалент вычисления</target>
        </trans-unit>
        <trans-unit id="fa1d1d4534a518017fb37c4580f799d449ace77b" translate="yes" xml:space="preserve">
          <source>This project originated from a blog post I wrote at &lt;a href=&quot;https://csl.name/post/vm/&quot;&gt;https://csl.name/post/vm/&lt;/a&gt;
(it details how you can write your own interpreter from scratch) and is hosted
on &lt;a href=&quot;https://github.com/cslarsen/crianza&quot;&gt;https://github.com/cslarsen/crianza&lt;/a&gt;</source>
          <target state="translated">Этот проект возник из сообщения в блоге, которое я написал на &lt;a href=&quot;https://csl.name/post/vm/&quot;&gt;https://csl.name/post/vm/&lt;/a&gt; (в нем подробно рассказывается, как вы можете написать свой собственный интерпретатор с нуля), и размещен на &lt;a href=&quot;https://github.com/cslarsen/crianza&quot;&gt;https://github.com/cslarsen/crianza.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="068bcb889ebaf784aaa49e616f1dbd0f68094064" translate="yes" xml:space="preserve">
          <source>Threaded code interpretation</source>
          <target state="translated">Потоковая интерпретация кода</target>
        </trans-unit>
        <trans-unit id="99f0fb19b02b5b10615962b4dad8ecf56e6d12ab" translate="yes" xml:space="preserve">
          <source>To test it, you can do:</source>
          <target state="translated">Чтобы проверить это,ты можешь это сделать:</target>
        </trans-unit>
        <trans-unit id="f6cd365540d954f7619a03b0564adc05c6c32d8e" translate="yes" xml:space="preserve">
          <source>You can also do some simple optimizations on the code by specifying:</source>
          <target state="translated">Также можно выполнить некоторые простые оптимизации кода,указав их:</target>
        </trans-unit>
        <trans-unit id="22d0b06ab6697336780029eb518e6cdd2c05382e" translate="yes" xml:space="preserve">
          <source>You can also use</source>
          <target state="translated">Вы также можете использовать</target>
        </trans-unit>
        <trans-unit id="a2ce7b006e6140a7d43eedb49509d8586d53a284" translate="yes" xml:space="preserve">
          <source>You can divert program output to a memory buffer:</source>
          <target state="translated">Вы можете перенаправить вывод программы в буфер памяти:</target>
        </trans-unit>
        <trans-unit id="375e5f2d5190b0dd18d87335863a24b2ad176deb" translate="yes" xml:space="preserve">
          <source>You can run it by typing:</source>
          <target state="translated">Ты можешь запустить его,набрав:</target>
        </trans-unit>
        <trans-unit id="ab498a354bd632be1005dd17c216f6c9e5fb46c0" translate="yes" xml:space="preserve">
          <source>You can run programs in files as well.  Use</source>
          <target state="translated">Вы можете запускать программы и в файлах.Использовать</target>
        </trans-unit>
        <trans-unit id="2aedf6a87a1c82be17d551be676f1dbd36135e12" translate="yes" xml:space="preserve">
          <source>You can run the example simulation, which simply attempts to find a
program that squares input numbers. For speed, you should run it with</source>
          <target state="translated">Можно запустить пример моделирования,который просто пытается найти программу,которая помещает входные числа в квадраты.Для скорости,вы должны запустить ее с</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="e8538d8f6c1214087fe9a2d454708d52f0caade5" translate="yes" xml:space="preserve">
          <source>and equivalently:</source>
          <target state="translated">и эквивалентно:</target>
        </trans-unit>
        <trans-unit id="31df52a82204e63adf4babe7f7f5cb094c1ba56c" translate="yes" xml:space="preserve">
          <source>and puts the result on
top of the data stack. We can get this by doing</source>
          <target state="translated">и помещает результат наверх стека данных.Мы можем получить это,сделав</target>
        </trans-unit>
        <trans-unit id="5383b4e94720dc6913447195d742d392dfec7ad2" translate="yes" xml:space="preserve">
          <source>and the return stack</source>
          <target state="translated">и обратная стопка</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">аргументы</target>
        </trans-unit>
        <trans-unit id="f3976080c63fe888533cc6330e2a9131407105d5" translate="yes" xml:space="preserve">
          <source>args=1</source>
          <target state="translated">аргументы=1</target>
        </trans-unit>
        <trans-unit id="d56d985300d4b52eb6e189be006f44f8d23c5ec9" translate="yes" xml:space="preserve">
          <source>check</source>
          <target state="translated">проверить</target>
        </trans-unit>
        <trans-unit id="c7a9b610d4272ac739737c2e1fd26f33cd22b665" translate="yes" xml:space="preserve">
          <source>crianza --repl</source>
          <target state="translated">селекционный -репликационный</target>
        </trans-unit>
        <trans-unit id="f9664f1479588f5506343084be6096bd475dd9f0" translate="yes" xml:space="preserve">
          <source>crianza -h</source>
          <target state="translated">крианза</target>
        </trans-unit>
        <trans-unit id="cae4e302d3c5a7cabf1b161e714712d9686caa7a" translate="yes" xml:space="preserve">
          <source>crianza -r</source>
          <target state="translated">крианза-р</target>
        </trans-unit>
        <trans-unit id="b1da3508624ff2de6e2733a6c76aeb56e4675ebf" translate="yes" xml:space="preserve">
          <source>crianza.eval</source>
          <target state="translated">крианза.оценка</target>
        </trans-unit>
        <trans-unit id="ac2fb3e6a94f32968b180b70f6174761f90592fa" translate="yes" xml:space="preserve">
          <source>crianza.execute</source>
          <target state="translated">крианза.казнят</target>
        </trans-unit>
        <trans-unit id="d2fb90f95f4199599e95d8580671e489cc10b1f2" translate="yes" xml:space="preserve">
          <source>crianza.execute(...).top</source>
          <target state="translated">crianza.execute(...).top</target>
        </trans-unit>
        <trans-unit id="b2593dd37b483b3be03b2fdf0590ab1038799c1a" translate="yes" xml:space="preserve">
          <source>crianza.genetic</source>
          <target state="translated">крианза.генетический</target>
        </trans-unit>
        <trans-unit id="12e282b1f69fda4c2f22743a3b8cc71546695fbb" translate="yes" xml:space="preserve">
          <source>crianza.native</source>
          <target state="translated">крианза.уроженец</target>
        </trans-unit>
        <trans-unit id="5a7fd866b82dd5c429cd208defc323360492c305" translate="yes" xml:space="preserve">
          <source>crianza.native.xcompile</source>
          <target state="translated">крианза.родной.экскомпиляция</target>
        </trans-unit>
        <trans-unit id="6e8ff4a3415366fd032e631d6e811470a8c42d25" translate="yes" xml:space="preserve">
          <source>dup *</source>
          <target state="translated">двойной *</target>
        </trans-unit>
        <trans-unit id="e3ca57555f23b8a30bbcb98f2f7758dab3a0d05e" translate="yes" xml:space="preserve">
          <source>dup abs *</source>
          <target state="translated">двойной пресс *</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="edc7122991b4584d9789593b98c6dbce319820b2" translate="yes" xml:space="preserve">
          <source>examples/</source>
          <target state="translated">примеры/</target>
        </trans-unit>
        <trans-unit id="c1710b83ca9f760fec39a3d9086df7f17a9ef85b" translate="yes" xml:space="preserve">
          <source>examples/genetic/square-number.py</source>
          <target state="translated">примеры/генетика/квадрат.пи</target>
        </trans-unit>
        <trans-unit id="39ae89e0a135945a5e08d9340cd2eac771f228f6" translate="yes" xml:space="preserve">
          <source>execute</source>
          <target state="translated">исполнять</target>
        </trans-unit>
        <trans-unit id="d8434826715d3b3aa19ffefdffadb122d01422d6" translate="yes" xml:space="preserve">
          <source>folder.</source>
          <target state="translated">папка.</target>
        </trans-unit>
        <trans-unit id="936c99519ec4df025106decfc59454dee21d8ca7" translate="yes" xml:space="preserve">
          <source>followed by the
code.</source>
          <target state="translated">а затем код.</target>
        </trans-unit>
        <trans-unit id="27f8e20bca824766bac879e975aeb3fab9df72b5" translate="yes" xml:space="preserve">
          <source>function checks for simple errors.</source>
          <target state="translated">проверяет функции на наличие простых ошибок.</target>
        </trans-unit>
        <trans-unit id="43ceb0674229d7b2ed301185b87c7ca1b6c51e81" translate="yes" xml:space="preserve">
          <source>function takes in source code and</source>
          <target state="translated">функция принимает исходный код и</target>
        </trans-unit>
        <trans-unit id="1dfae75987ab2c547d85f2eedd53692b234672e0" translate="yes" xml:space="preserve">
          <source>function:</source>
          <target state="translated">Работать:</target>
        </trans-unit>
        <trans-unit id="f9aba3f1299b4a48e75ee40ef3baf522152a817c" translate="yes" xml:space="preserve">
          <source>ip</source>
          <target state="translated">ip</target>
        </trans-unit>
        <trans-unit id="3bb24737b980bf03bd3ac00fec5cc1ec74c16295" translate="yes" xml:space="preserve">
          <source>module contains a simple genetic programming framework.</source>
          <target state="translated">модуль содержит простую структуру генетического программирования.</target>
        </trans-unit>
        <trans-unit id="1ce51b54ae3cb496f4f6a51699fa4dd1e4ae2a08" translate="yes" xml:space="preserve">
          <source>optimize=False</source>
          <target state="translated">optim=False</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">или</target>
        </trans-unit>
        <trans-unit id="cde1e9b6607355ff00ef6c5acea4068e07d5792b" translate="yes" xml:space="preserve">
          <source>or from the repository:</source>
          <target state="translated">или из репозитория:</target>
        </trans-unit>
        <trans-unit id="c1218ee617d759a934dfca88784d348ab3b204e0" translate="yes" xml:space="preserve">
          <source>or just use</source>
          <target state="translated">или просто использовать</target>
        </trans-unit>
        <trans-unit id="0576e1682d62e4d6290e79b18d0b0972fe64f1d1" translate="yes" xml:space="preserve">
          <source>pypy</source>
          <target state="translated">обычный</target>
        </trans-unit>
        <trans-unit id="c40adfb53e980367566a839ada751b56600f98d9" translate="yes" xml:space="preserve">
          <source>self._input**2</source>
          <target state="translated">Я._вход**2</target>
        </trans-unit>
        <trans-unit id="dc8358a1d4fa65e8cee686e47ee5940315120d9d" translate="yes" xml:space="preserve">
          <source>should equal the square of the program&amp;rsquo;s
input</source>
          <target state="translated">должен равняться квадрату ввода программы</target>
        </trans-unit>
        <trans-unit id="a46084d8b3b86919d90ae295491f09ec4f7e8886" translate="yes" xml:space="preserve">
          <source>square-number</source>
          <target state="translated">квадратный номер</target>
        </trans-unit>
        <trans-unit id="7b917a2076b5ac15595eed245529f13933dbdfbe" translate="yes" xml:space="preserve">
          <source>subroutine (see the file</source>
          <target state="translated">подпрограмма (см.файл</target>
        </trans-unit>
        <trans-unit id="0aceeff36c718f7a6f90c5dc8ade770e1ef5c179" translate="yes" xml:space="preserve">
          <source>to get options.</source>
          <target state="translated">чтобы получить варианты.</target>
        </trans-unit>
        <trans-unit id="5fb3ff3828a11518b05363c7715535eda45ab86f" translate="yes" xml:space="preserve">
          <source>to get the machine used to execute
the program:</source>
          <target state="translated">чтобы машина использовалась для выполнения программы:</target>
        </trans-unit>
        <trans-unit id="6c28c5eae7cf954cd14298176c1381d7ddd3bf0e" translate="yes" xml:space="preserve">
          <source>to start the interpreter.  In
this example, we want to calculate</source>
          <target state="translated">чтобы запустить переводчика.В этом примере мы хотим вычислить</target>
        </trans-unit>
        <trans-unit id="af2c7b4ca07ae6c74d261bc745e174df8ab3ffef" translate="yes" xml:space="preserve">
          <source>top</source>
          <target state="translated">лучший сайт</target>
        </trans-unit>
        <trans-unit id="405910ebf7ab9578889aa890de36e0b6b17f7dbf" translate="yes" xml:space="preserve">
          <source>will automatically optimize the code (turn off
with the option</source>
          <target state="translated">автоматически оптимизирует код (выключите с помощью опции</target>
        </trans-unit>
        <trans-unit id="4da09b897111962e4da3f70aa51d149e1fc7dcc4" translate="yes" xml:space="preserve">
          <source>|ds|</source>
          <target state="translated">| ds |</target>
        </trans-unit>
        <trans-unit id="82ac8511d21f9215b993338f6781127d013ee783" translate="yes" xml:space="preserve">
          <source>|rs|</source>
          <target state="translated">| rs |</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
