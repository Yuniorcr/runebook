<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/ipythontools/">
    <body>
      <group id="ipythontools">
        <trans-unit id="7867d3fd53be0dc7eca20917d239cbfb7c62a7b9" translate="yes" xml:space="preserve">
          <source>&amp;gt; fig.savefig(&amp;lsquo;/path/to/my/article/XXX.eps&amp;rsquo;)</source>
          <target state="translated">&amp;gt; fig.savefig ('/ путь / к / моя / статья / XXX.eps')</target>
        </trans-unit>
        <trans-unit id="dadf221e2b29630f8f97a7151151f1cad05f402f" translate="yes" xml:space="preserve">
          <source>) as opposed to real markdown that resembles
English much better I define a custom filter function that
makes sure that strings which look like LaTeX commands will not be spell checked
(since very few LaTeX command are valid English words so that would give a lot of
apparent typos).
More complicated filters that avoid spell checking within equations or
commands like</source>
          <target state="translated">) в отличие от реальной уценки, которая намного больше напоминает английский, я определяю настраиваемую функцию фильтра, которая гарантирует, что строки, которые выглядят как команды LaTeX, не будут проверяться орфографией (так как очень немногие команды LaTeX являются допустимыми английскими словами, так что это даст много очевидных опечатки). Более сложные фильтры, исключающие проверку орфографии в уравнениях или командах, например</target>
        </trans-unit>
        <trans-unit id="96be7d667b95a8cabd202ecf5703e0ece29f80f1" translate="yes" xml:space="preserve">
          <source>). Check the &lt;a href=&quot;https://github.com/hamogu/ipythontools&quot;&gt;github repository&lt;/a&gt;
for this code if you want to see if I have an improved version.</source>
          <target state="translated">). Проверьте этот код в &lt;a href=&quot;https://github.com/hamogu/ipythontools&quot;&gt;репозитории github,&lt;/a&gt; если хотите узнать, есть ли у меня улучшенная версия.</target>
        </trans-unit>
        <trans-unit id="cc9c165d061c0cd51e388cd5a0445e26184e0ca7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;As a Python module&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Как модуль Python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06f316d860d3d49ac19a87af2e5590c668831891" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;As a script&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Как сценарий&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3115d1ebf2eefd3ec16172afc65b35b8221a39cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;How to use this script&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Как использовать этот скрипт&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8ac7fc4a738213b4ceb8225268ac922724b3a577" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Design&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;дизайн&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5f3278aa7e29a17ce9f2584f24d0b1a47ce961a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to use it&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Как это использовать&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="785fe4fefdab8199a472f341a617e7362ff57a5b" translate="yes" xml:space="preserve">
          <source>As much as I love the IPython notebook, there is one big drawback (at least in
my installation). When I type into a cell in the browser (I use firefox) there
is no automatic spell checking of the input. Sure, the notebook has syntax
highlighting for code cells in python, but I want to do my entire paper
writing in the notebook and for me that means that a spell checker for cells
with markdown, headings or raw text is absolutely essential.
On the other hand, I cannot just run e.g.</source>
          <target state="translated">Как бы я ни любил IPython ноутбук,есть один большой недостаток (по крайней мере,в моей установке).Когда я набираю в ячейку в браузере (я использую Firefox)нет автоматической проверки орфографии входа.Конечно,ноутбук имеет подсветку синтаксиса для кодовых ячеек в питоне,но я хочу сделать всю мою бумагу,пишу в ноутбуке,и для меня это означает,что проверка орфографии для ячеек с уценкой,заголовки или сырой текст является абсолютно необходимым.С другой стороны,я не могу просто запустить,например.</target>
        </trans-unit>
        <trans-unit id="e0d2763db5293e3bbef1e8ffe6e5892df0cb91a2" translate="yes" xml:space="preserve">
          <source>Be able to ignore certain parts of the notebook (e.g. introductory comments
in the first few cells).</source>
          <target state="translated">Уметь игнорировать определенные части ноутбука (например,вводные комментарии в первых нескольких ячейках).</target>
        </trans-unit>
        <trans-unit id="f1c19d2a2ee9313b484d11307196670bfd490fcb" translate="yes" xml:space="preserve">
          <source>Close down the notebook you want to spell check in IPython, then simply type on
the command line:</source>
          <target state="translated">Закройте ноутбук,который вы хотите проверить правописание на IPython,затем просто введите в командной строке:</target>
        </trans-unit>
        <trans-unit id="996122812a4499d2e98c63c2097cf853c4aa0b71" translate="yes" xml:space="preserve">
          <source>Convert headings to section / subsection etc.
I generally level 2 such as &amp;ldquo;## Heading&amp;rdquo; for section, &amp;ldquo;### Heading&amp;rdquo; for subsections etc.</source>
          <target state="translated">Преобразование заголовков в раздел / подраздел и т. Д. Я обычно использую уровень 2, например &amp;laquo;## Заголовок&amp;raquo; для раздела, &amp;laquo;### Заголовок&amp;raquo; для подразделов и т. Д.</target>
        </trans-unit>
        <trans-unit id="a0a16ec70ec256609b5cabdb79290f5c6addc3f7" translate="yes" xml:space="preserve">
          <source>Copy text in &amp;ldquo;markdown&amp;rdquo; and &amp;ldquo;raw text&amp;rdquo; cells. To simplify, I just write
real LaTeX code in those cells. All equations will be rendered correctly
in the notebook file for me and my co-authors to see.
When I want to highlight something I type LaTeX &amp;ldquo;emph{}&amp;rdquo; or &amp;ldquo;textbf{}&amp;rdquo;,
not the markdown equivalents. That looks not as nice in the notebook, but
makes live so much easier.
Also, markdown does not recognize &amp;ldquo;cite&amp;rdquo;, &amp;ldquo;ref&amp;rdquo; and &amp;ldquo;label&amp;rdquo;. Again, it
looks not as nice in markdown, but
(1) I only need to know LaTeX and (2) it works flawlessly when converted.</source>
          <target state="translated">Скопируйте текст в ячейки &amp;laquo;уценка&amp;raquo; и &amp;laquo;необработанный текст&amp;raquo;. Для упрощения я просто пишу настоящий код LaTeX в этих ячейках. Все уравнения будут правильно отображены в файле записной книжки, чтобы я и мои соавторы могли их увидеть. Когда я хочу выделить что-то, я набираю LaTeX &amp;laquo;emph {}&amp;raquo; или &amp;laquo;textbf {}&amp;raquo;, а не эквиваленты уценки. Это выглядит не так хорошо в ноутбуке, но делает жизнь намного проще. Кроме того, markdown не распознает &amp;laquo;cite&amp;raquo;, &amp;laquo;ref&amp;raquo; и &amp;laquo;label&amp;raquo;. Опять же, в уценке это выглядит не так хорошо, но (1) мне нужно знать только LaTeX и (2) он работает безупречно при преобразовании.</target>
        </trans-unit>
        <trans-unit id="d7de9f59c8e0e1ec511693cd90ca8354c3c2ebb8" translate="yes" xml:space="preserve">
          <source>Finally, call:</source>
          <target state="translated">Наконец-то,звони:</target>
        </trans-unit>
        <trans-unit id="9d9befd865685e9e95d33be98682e396dce57dc6" translate="yes" xml:space="preserve">
          <source>Import into python and make a</source>
          <target state="translated">Импортируйте в питон и сделайте</target>
        </trans-unit>
        <trans-unit id="1160f28fb9bc2da5ebf8283b07c493f0463f2c5e" translate="yes" xml:space="preserve">
          <source>In this case it&amp;rsquo;s run with my set of design choices (see below).</source>
          <target state="translated">В этом случае он работает с моим набором вариантов дизайна (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="0d334f4021259c6fdf3d2da6814a39acf2c925e0" translate="yes" xml:space="preserve">
          <source>Installing this module places a script in your path, so you can do:</source>
          <target state="translated">Установка этого модуля помещает скрипт в ваш путь,так что вы можете сделать:</target>
        </trans-unit>
        <trans-unit id="7546602cf40b4d2b031f722cdb27793c0481ca90" translate="yes" xml:space="preserve">
          <source>Jupyter/IPython notebook to latex converter and spell checker</source>
          <target state="translated">ноутбук Jupyter/IPython для конвертации латекса в латекс и проверки орфографии</target>
        </trans-unit>
        <trans-unit id="d6875ea847a285b0f3fea4c40460d035f67fdc12" translate="yes" xml:space="preserve">
          <source>Just type figure captions into markdown cells.</source>
          <target state="translated">Просто напечатайте подписи к рисункам в ячейках разметки.</target>
        </trans-unit>
        <trans-unit id="4963541f8b271af92276d1437767aff6268feb12" translate="yes" xml:space="preserve">
          <source>LatexHeadingConverter</source>
          <target state="translated">LatexHeadingConverter</target>
        </trans-unit>
        <trans-unit id="e86cb4e0b6564c9e713d39dc9797777891ba34e8" translate="yes" xml:space="preserve">
          <source>LiteralSourceConverter</source>
          <target state="translated">LiteralSourceConverter</target>
        </trans-unit>
        <trans-unit id="5ce8c534c7950cd7b5e42fe74be74b167a43fc06" translate="yes" xml:space="preserve">
          <source>MarkedCodeOutputConverter</source>
          <target state="translated">MarkedCodeOutputConverter .</target>
        </trans-unit>
        <trans-unit id="d3d82c5630254d2e7ee3f20683d7662d78166a38" translate="yes" xml:space="preserve">
          <source>No conversion of code cells. Who wants code in an ApJ paper?</source>
          <target state="translated">Никакого преобразования ячеек кода.Кто хочет код в газете ApJ?</target>
        </trans-unit>
        <trans-unit id="a0ea28392b12edb9b0bb76d671d7c54b0847cf8a" translate="yes" xml:space="preserve">
          <source>No figure conversion. Instead, in the notebook itself I issue:</source>
          <target state="translated">Никакой конверсии фигур.Вместо этого,в самом ноутбуке,который я выпускаю:</target>
        </trans-unit>
        <trans-unit id="d9c93a447b06ee883a9a40e9cf21bb79a519a0f4" translate="yes" xml:space="preserve">
          <source>Note that scipts and procedures have been renamed to &amp;ldquo;jupyter&amp;rdquo;, but the name of the package
and its directory structure still reflect that fact that Jupyter notebooks started out as part of the &lt;a href=&quot;http://ipython.org&quot;&gt;IPython&lt;/a&gt; project.</source>
          <target state="translated">Обратите внимание, что сценарии и процедуры были переименованы в &amp;laquo;jupyter&amp;raquo;, но имя пакета и его структура каталогов по-прежнему отражают тот факт, что записные книжки Jupyter начинались как часть проекта &lt;a href=&quot;http://ipython.org&quot;&gt;IPython&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba5aad5cc9fdd94c71a3990de2df0f303556d62d" translate="yes" xml:space="preserve">
          <source>NotebookConverter</source>
          <target state="translated">NotebookConverter</target>
        </trans-unit>
        <trans-unit id="ef481c6be928206bddfac40ea95dba82bc2ebd4a" translate="yes" xml:space="preserve">
          <source>Now all papers I work on a are written in an IPython notebook. So, the final
step to do is to convert the notebook to the LaTeX file I can submit to a
journal. That&amp;rsquo;s what this simple converter code does.</source>
          <target state="translated">Теперь все документы, над которыми я работаю, написаны в блокноте IPython. Итак, последний шаг, который нужно сделать, - это преобразовать записную книжку в файл LaTeX, который я могу отправить в журнал. Вот что делает этот простой код конвертера.</target>
        </trans-unit>
        <trans-unit id="b31553839c43a486203d587b96dc51bd94505c76" translate="yes" xml:space="preserve">
          <source>Occasionally, I want to have the output of a computation (e.g. a table
written with astropy in LaTeX format) in the article. Keep it simple.
Output of all code cells that have a certain comment string (I use
&amp;ldquo;# output-&amp;gt;LaTeX&amp;rdquo;) is copied verbatim to the LaTeX file.</source>
          <target state="translated">Иногда я хочу, чтобы в статье был результат вычисления (например, таблица, написанная с помощью астропии в формате LaTeX). Будь проще. Вывод всех ячеек кода, имеющих определенную строку комментария (я использую &amp;laquo;# output-&amp;gt; LaTeX&amp;raquo;), дословно копируется в файл LaTeX.</target>
        </trans-unit>
        <trans-unit id="f53a479e72af885654b465b2289725076471c943" translate="yes" xml:space="preserve">
          <source>Oh, one more thing: Because I type a lot of raw LaTeX in my notebooks (see my
other post on</source>
          <target state="translated">О,еще одна вещь:Потому что я печатаю много сырых LaTeX в моих ноутбуках (см.мой другой пост на</target>
        </trans-unit>
        <trans-unit id="db5e602ea3758bc969be7f6f82109e2dca89d280" translate="yes" xml:space="preserve">
          <source>Open the new file in IPython, run all cells again and keep working.</source>
          <target state="translated">Откройте новый файл на IPython,запустите все ячейки снова и продолжайте работать.</target>
        </trans-unit>
        <trans-unit id="69dec19e2ce348a6b020bdd1bb2291da5bc2c527" translate="yes" xml:space="preserve">
          <source>Spell check the markdown text in IPython notebooks</source>
          <target state="translated">Проверьте орфографию текста уценки в IPython ноутбуках</target>
        </trans-unit>
        <trans-unit id="55b16bba4db3dc88083cb0d4bcd080deb43bf600" translate="yes" xml:space="preserve">
          <source>The code is written around these design ideas:</source>
          <target state="translated">Код написан вокруг этих дизайнерских идей:</target>
        </trans-unit>
        <trans-unit id="9c063267cede9ac731c05e8aee66329f1183f81e" translate="yes" xml:space="preserve">
          <source>The converter</source>
          <target state="translated">Преобразователь</target>
        </trans-unit>
        <trans-unit id="c3d1d1122a9b0cdc614468b496550c5eec457705" translate="yes" xml:space="preserve">
          <source>The spellchecker</source>
          <target state="translated">Проверка правописания</target>
        </trans-unit>
        <trans-unit id="8bced610e3d0cfb3867bace09c956272e0734c9b" translate="yes" xml:space="preserve">
          <source>Then, customize how each type of cell is converted by changing the converter:</source>
          <target state="translated">Затем настройте преобразование каждого типа ячеек,изменив конвертер:</target>
        </trans-unit>
        <trans-unit id="4e913128f80861691ab5f4fbdf2cfc2e0f8f9961" translate="yes" xml:space="preserve">
          <source>This converter is not intended to replace the nbconvert from the IPython
project. Instead, it serves one very specific purpose:
Turn a notebook into a LaTeX file that I can submit to the journal.</source>
          <target state="translated">Данный конвертер не предназначен для замены nbconvert из проекта IPython.Вместо этого он служит одной очень специфической цели:превратить ноутбук в LaTeX-файл,который я могу отправить в журнал.</target>
        </trans-unit>
        <trans-unit id="848bc60a2dac408fdb7f552d03b5259b7156d402" translate="yes" xml:space="preserve">
          <source>This method allows you to use only part of a notebook file (ignore to first n
cells or ignore everything until a cell has a specific string value, e.g.
&amp;ldquo;The paper starts here&amp;rdquo;). Also, it allows you to provide a text file that will be
pasted before or after the converted notebook (you can put the &amp;lsquo;usepackage&amp;rsquo; and
similar stuff in those files so they don&amp;rsquo;t clutter your notebook).
However, I do not use this option any longer, because that means I would have
multiple input files. If I put all those LaTeX headers into the notebook as
well, I only have a single file.</source>
          <target state="translated">Этот метод позволяет вам использовать только часть файла записной книжки (игнорировать первые n ячеек или игнорировать все, пока в ячейке не будет указано конкретное строковое значение, например, &amp;laquo;Здесь начинается бумага&amp;raquo;). Кроме того, он позволяет вам предоставить текстовый файл, который будет вставлен до или после преобразованной записной книжки (вы можете поместить в эти файлы &amp;laquo;usepackage&amp;raquo; и подобные вещи, чтобы они не загромождали вашу записную книжку). Однако я больше не использую эту опцию, потому что это означает, что у меня будет несколько входных файлов. Если я помещу все эти заголовки LaTeX в записную книжку, у меня останется только один файл.</target>
        </trans-unit>
        <trans-unit id="1fec3f5db3c9fd65b860d4e6a9b0a693810d50cd" translate="yes" xml:space="preserve">
          <source>This module installs two command line scripts:</source>
          <target state="translated">Этот модуль устанавливает два сценария командной строки:</target>
        </trans-unit>
        <trans-unit id="7f2f0a960e33f9e2cf4f775bb9ca0ab72b891f68" translate="yes" xml:space="preserve">
          <source>To implement this I wrote a converter for each cell type.</source>
          <target state="translated">Для реализации этого я написал конвертер для каждого типа ячеек.</target>
        </trans-unit>
        <trans-unit id="d6f1eb8eb72b1108f6f2bfa3ff38785751430f78" translate="yes" xml:space="preserve">
          <source>When I first encountered the IPython notebook, I thought this was a solution
looking for a problem. However, I have since been converted!
The tipping point for me was this: I want to version control my papers and
I always had multiple directories for analysis code, plotting code, LaTeX files,
plot scripts and figures and tables. That&amp;rsquo;s just so unwieldy.
Also, I found it cumbersome to email figures to individual collaborators all
the time.
The Notebook can hold all this information in one place and I can just provide
my co-authors with a link to the github repository once and they have access
to the latest version all the time. Even if they do not use python, they can
still see the all the current figures using nbviewer.ipython.org</source>
          <target state="translated">Когда я впервые столкнулся с ноутбуком IPython, я подумал, что это решение, ищущее проблему. Однако с тех пор я обратился! Переломным моментом для меня было следующее: я хочу контролировать версии своих документов, и у меня всегда было несколько каталогов для кода анализа, графического кода, файлов LaTeX, сценариев сюжетов, рисунков и таблиц. Это так громоздко. Кроме того, мне было неудобно постоянно отправлять данные по электронной почте отдельным сотрудникам. Блокнот может хранить всю эту информацию в одном месте, и я могу просто один раз предоставить своим соавторам ссылку на репозиторий github, и у них будет постоянный доступ к последней версии. Даже если они не используют python, они все равно могут видеть все текущие цифры с помощью nbviewer.ipython.org</target>
        </trans-unit>
        <trans-unit id="875cbcc95d99e4a4dd0d3e17db205085301357cd" translate="yes" xml:space="preserve">
          <source>Work with the python standard library only. No external dependencies.</source>
          <target state="translated">Работать только с библиотекой питоновского стандарта.Никаких внешних зависимостей.</target>
        </trans-unit>
        <trans-unit id="49b84fdb779c24c1b3f5568727374457092f0309" translate="yes" xml:space="preserve">
          <source>\cite{}</source>
          <target state="translated">\ cite {}</target>
        </trans-unit>
        <trans-unit id="6e5dfe09ab74d80bcb54e57395fd2bb52c2055c3" translate="yes" xml:space="preserve">
          <source>\label{XXX}</source>
          <target state="translated">\ label {XXX}</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="406752e03d293ca5a420e14227bdf63680343906" translate="yes" xml:space="preserve">
          <source>are possible (they would be called
a</source>
          <target state="translated">возможны (их бы назвали</target>
        </trans-unit>
        <trans-unit id="01113a113efa76bd4bb0e3fd9f0ee8ce322c2fc4" translate="yes" xml:space="preserve">
          <source>because ApJ requires me to submit figures as separate files anyway.</source>
          <target state="translated">потому что ЭйПиДжей требует,чтобы я представил цифры как отдельные файлы в любом случае.</target>
        </trans-unit>
        <trans-unit id="d6595f0cf3fe24d2b70103bcf8a5458ff4741217" translate="yes" xml:space="preserve">
          <source>can be the same filename (in this case the old file will get
overwritten with the spelling corrected version), but I recommend to keep a copy
just in case something gets screwed up.</source>
          <target state="translated">может быть одним и тем же именем файла (в этом случае старый файл будет перезаписан с исправленной орфографической версией),но я рекомендую сохранить копию на тот случай,если что-нибудь испортится.</target>
        </trans-unit>
        <trans-unit id="35c5900c12f56b6e838bd659034d6f287f48e122" translate="yes" xml:space="preserve">
          <source>checks if a code cell has a specific string in
it and if so, it copies the output of this cell, and</source>
          <target state="translated">проверяет,есть ли в кодовой ячейке определенная строка,и если да,то копирует вывод этой ячейки,и</target>
        </trans-unit>
        <trans-unit id="a7507f1795b973d9534c465c5afe646d7b983a13" translate="yes" xml:space="preserve">
          <source>chunker</source>
          <target state="translated">бункера</target>
        </trans-unit>
        <trans-unit id="1c4b9e2170dd1cdc45dd53edc855cd112d29246e" translate="yes" xml:space="preserve">
          <source>converter.cellconverters[&amp;lsquo;code&amp;rsquo;] = NotebookConverter.IgnoreConverter()</source>
          <target state="translated">Converter.cellconverters ['код'] = NotebookConverter.IgnoreConverter ()</target>
        </trans-unit>
        <trans-unit id="7cff5b5b7799f826e4ccf4118ff39f0bd5a71995" translate="yes" xml:space="preserve">
          <source>converter.convert(infile, outfile, &amp;hellip;)</source>
          <target state="translated">Converter.convert (infile, Outfile,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="117bad3bab9782ca784fc6c013803e2db4200328" translate="yes" xml:space="preserve">
          <source>extracts some content (raw cells, markdown cells, code output) from a
Jupyter/IPython notebook and pastes it into a new file. It also converst markdown headings
to proper LaTeX chapter, section, subsetion etc. and inserts appropriate labels.
This converter is not intended to replace the nbconvert from the IPython
project. Instead, it serves one very specific purpose:
Turn a notebook into a LaTeX file that I can submit to the journal.</source>
          <target state="translated">извлекает некоторое содержимое (необработанные ячейки,ячейки разметки,вывод кода)из ноутбука Jupyter/IPython и вставляет его в новый файл.Он также преобразует заголовки уценок в соответствующие главы,разделы,подразделы LaTeX и т.д.и вставляет соответствующие метки.Этот конвертер не предназначен для замены nbconvert из проекта IPython.Вместо этого он служит одной очень специфической цели:превратить ноутбук в LaTeX-файл,который я могу отправить в журнал.</target>
        </trans-unit>
        <trans-unit id="853f6d7c1d08cc6b26e5574a008dd81318c45acb" translate="yes" xml:space="preserve">
          <source>filein</source>
          <target state="translated">файл</target>
        </trans-unit>
        <trans-unit id="294f0add48f73ecc0d984886c8b10c0a9ed0f315" translate="yes" xml:space="preserve">
          <source>fileout</source>
          <target state="translated">файл</target>
        </trans-unit>
        <trans-unit id="68145c9316e801087b7108a5cc3d3b3f855b2647" translate="yes" xml:space="preserve">
          <source>from ipynb2article import NotebookConverter
converter = NotebookConverter</source>
          <target state="translated">из импорта ipynb2article Конвертер ноутбуков=NotebookConverter</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">на сайте</target>
        </trans-unit>
        <trans-unit id="45f3e2e7a61691e19164608a0c9c4959ada7625a" translate="yes" xml:space="preserve">
          <source>ipynb2article.py</source>
          <target state="translated">ipynb2article.py</target>
        </trans-unit>
        <trans-unit id="039969f05dc4707c725c2de5b903086fbfe71107" translate="yes" xml:space="preserve">
          <source>ispell</source>
          <target state="translated">ispell</target>
        </trans-unit>
        <trans-unit id="f1dd56b156609a34f786d18c1bd98609b6d88f91" translate="yes" xml:space="preserve">
          <source>jupyter2article</source>
          <target state="translated">юпитер2-частица</target>
        </trans-unit>
        <trans-unit id="2d6cc5f6a92a6677e7136cfa35be836bb093bc5e" translate="yes" xml:space="preserve">
          <source>jupyter2article myanalysis.ipynb myanalysis.tex</source>
          <target state="translated">jupyter2article myanalysis.ipynb myanalysis.tex</target>
        </trans-unit>
        <trans-unit id="3f9ee6a0f3c4984f03f16adab8dd3174c8066ac4" translate="yes" xml:space="preserve">
          <source>jupyterspellcheck</source>
          <target state="translated">юпитерспеллчек</target>
        </trans-unit>
        <trans-unit id="10dc687a8a6d398a0253047d33cbf04dc71c93e7" translate="yes" xml:space="preserve">
          <source>jupyterspellcheck filein.ipynb fileout.ipynb</source>
          <target state="translated">jupyterspellcheck filein.ipynb fileout.ipynb</target>
        </trans-unit>
        <trans-unit id="13e53880be1515e812985845eb3181eeaf84666b" translate="yes" xml:space="preserve">
          <source>just takes the literal string value (it also adds
a line break at the end of the  cell) and puts it into the LaTeX file
(use for markdown and raw text cells),</source>
          <target state="translated">просто берет значение буквенной строки (также добавляется перенос строки в конце ячейки)и помещает его в LaTeX-файл (используется для ячеек с разметкой и необработанным текстом),</target>
        </trans-unit>
        <trans-unit id="87dc27214c1944c8d235d751c0ac66a8811edb7b" translate="yes" xml:space="preserve">
          <source>looks for the level of the heading and turns that into LaTeX (it also adds
as label like &amp;ldquo;label{sect:title}&amp;rdquo;).</source>
          <target state="translated">ищет уровень заголовка и превращает его в LaTeX (он также добавляет метку типа &amp;laquo;label {sect: title}&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="0426c65f9613a523407c71497c3795ae931bf5cc" translate="yes" xml:space="preserve">
          <source>object:</source>
          <target state="translated">Объект:</target>
        </trans-unit>
        <trans-unit id="f57a44af2cd8513541016b8bd43532f5deb4b97c" translate="yes" xml:space="preserve">
          <source>on the ipynb file, since
most of its contents is actually code and not plain English.
So, I wanted to write a spell checker, that parses the ipynb file and spell checks
only the markdown, heading and raw text input cells.</source>
          <target state="translated">в ipynb файле,так как большая часть его содержимого на самом деле является кодом,а не простым английским языком.Поэтому я хотел написать программу для проверки орфографии,которая разбирает ipynb-файл и проверяет орфографию только на ячейках для разметки,заголовка и ввода необработанного текста.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">или</target>
        </trans-unit>
        <trans-unit id="09c20497814ab5a11888e90c4aa824df1fa2c5d2" translate="yes" xml:space="preserve">
          <source>pyenchant</source>
          <target state="translated">пайенчант</target>
        </trans-unit>
        <trans-unit id="00dbf49b7c82ff3159975aacc11cb205814756ef" translate="yes" xml:space="preserve">
          <source>spell checks markdown and raw cells in a notebook.</source>
          <target state="translated">проверка орфографии и необработанные ячейки в ноутбуке.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
