<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/adafruit-circuitpython-busdevice/">
    <body>
      <group id="adafruit-circuitpython-busdevice">
        <trans-unit id="c5f0eb76c15c6d8963a786793b2614c186acc054" translate="yes" xml:space="preserve">
          <source>Adafruit CircuitPython BusDevice</source>
          <target state="translated">Адафруктовая цепьПифонное устройство ввода-вывода</target>
        </trans-unit>
        <trans-unit id="64d0b5d0f36ca9ef8839ed5dae9e958a60324a1f" translate="yes" xml:space="preserve">
          <source>CircuitPython bus device classes to manage bus sharing.</source>
          <target state="translated">CircuitPython классы устройств шины для управления общим доступом к шине.</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Вклад</target>
        </trans-unit>
        <trans-unit id="ca731ed1c81772b0a3d026862758d0ca797006b4" translate="yes" xml:space="preserve">
          <source>Contributions are welcome! Please read our &lt;a href=&quot;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;
before contributing to help this project stay welcoming.</source>
          <target state="translated">Пожертвования приветствуются! Пожалуйста, прочтите наш &lt;a href=&quot;https://github.com/adafruit/Adafruit_CircuitPython_BusDevice/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Кодекс поведения,&lt;/a&gt; прежде чем вносить свой вклад, чтобы этот проект оставался благоприятным.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Документация</target>
        </trans-unit>
        <trans-unit id="ae7a6fff237d9c1c3c851b2e628462ce370fe844" translate="yes" xml:space="preserve">
          <source>For information on building library documentation, please check out &lt;a href=&quot;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="translated">Для получения информации о документации библиотеки сборки, пожалуйста, ознакомьтесь с &lt;a href=&quot;https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1&quot;&gt;этим руководством&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6a8f5dba47f684371e7b690d842d91e5f57dbaf" translate="yes" xml:space="preserve">
          <source>I2CDevice</source>
          <target state="translated">I2CDevice</target>
        </trans-unit>
        <trans-unit id="12589666f604deb5b4809e9f72dedb45b1f88403" translate="yes" xml:space="preserve">
          <source>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally &lt;a href=&quot;https://pypi.org/project/adafruit-circuitpython-busdevice/&quot;&gt;from
PyPI&lt;/a&gt;. To install for current user:</source>
          <target state="translated">В поддерживаемых системах GNU / Linux, таких как Raspberry Pi, вы можете установить драйвер локально &lt;a href=&quot;https://pypi.org/project/adafruit-circuitpython-busdevice/&quot;&gt;из PyPI&lt;/a&gt; . Чтобы установить для текущего пользователя:</target>
        </trans-unit>
        <trans-unit id="049150d984a255fbea3d4dfe47c7fe6ab6238a4d" translate="yes" xml:space="preserve">
          <source>SPIDevice</source>
          <target state="translated">SPIDevice</target>
        </trans-unit>
        <trans-unit id="5543dc9235965efe145d1e1b8586e878ee6674e7" translate="yes" xml:space="preserve">
          <source>See examples/read_register_i2c.py and examples/read_register_spi.py for examples of the module&amp;rsquo;s usage.</source>
          <target state="translated">См. Examples / read_register_i2c.py и examples / read_register_spi.py для примеров использования модуля.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="20630bf0bbe606a8cc817859bc925353782b3826" translate="yes" xml:space="preserve">
          <source>To install in a virtual environment in your current project:</source>
          <target state="translated">Для установки в виртуальной среде в текущем проекте:</target>
        </trans-unit>
        <trans-unit id="31c2d531b91fc97976f1c8ace6110a618ddf43c7" translate="yes" xml:space="preserve">
          <source>To install system-wide (this may be required in some cases):</source>
          <target state="translated">Для установки в масштабе всей системы (в некоторых случаях это может потребоваться):</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">Пример использования</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="3293d25159dfce3bb60efe44f4245a66b2fc510a" translate="yes" xml:space="preserve">
          <source>helper classes make managing transaction state
on a bus easy. For example, they manage locking the bus to prevent other
concurrent access. For SPI devices, it manages the chip select and protocol
changes such as mode. For I2C, it manages the device address.</source>
          <target state="translated">вспомогательные классы облегчают управление состоянием транзакций в автобусе.Например,они управляют блокировкой шины,чтобы предотвратить другие одновременные доступы.Для устройств SPI они управляют выбором микросхемы и изменением протокола,например,режима.Для I2C он управляет адресом устройства.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
