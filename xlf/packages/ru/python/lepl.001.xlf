<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/lepl/">
    <body>
      <group id="lepl">
        <trans-unit id="8b59407e91b9c85eb8f4e2a0b521af6ddb48b525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.acooke.org/lepl/lepl5.0.html&quot;&gt;Release 5&lt;/a&gt; has simpler stream
(input) handling.  Memoisation, line-aware lexing and memory use have also
been revised.  These changes make future extension easier, fix several bugs,
and improve performance.</source>
          <target state="translated">&lt;a href=&quot;http://www.acooke.org/lepl/lepl5.0.html&quot;&gt;Версия 5&lt;/a&gt; имеет более простую обработку потока (ввода). Также были переработаны мемоизация, лексика с учетом строк и использование памяти. Эти изменения упрощают будущее расширение, исправляют несколько ошибок и повышают производительность.</target>
        </trans-unit>
        <trans-unit id="dcf165b1bcb3bc7266d233ae8c0600620cd5ffcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Friendly syntax&lt;/strong&gt; using Python&amp;rsquo;s operators allows grammars
to be defined in a declarative style close to BNF.</source>
          <target state="translated">&lt;strong&gt;Дружественный синтаксис&lt;/strong&gt; с использованием операторов Python позволяет определять грамматики в декларативном стиле, близком к BNF.</target>
        </trans-unit>
        <trans-unit id="4f561d5b518b9ae830b160401fe1b343aa7f6858" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parser rewriting&lt;/strong&gt;.  The parser can itself be manipulated by
Python code.  This gives unlimited opportunities for future
expansion and optimisation.</source>
          <target state="translated">&lt;strong&gt;Переписывание парсера&lt;/strong&gt; . Сам синтаксическим анализатором можно управлять с помощью кода Python. Это дает неограниченные возможности для будущего расширения и оптимизации.</target>
        </trans-unit>
        <trans-unit id="a2c4bd62c1da5a5c40ec6071f7b022fbb19c9a46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parsers are Python code&lt;/strong&gt;, defined in Python itself.  No separate
grammar is necessary.</source>
          <target state="translated">&lt;strong&gt;Парсеры - это код Python&lt;/strong&gt; , определенный в самом Python. Никакой отдельной грамматики не требуется.</target>
        </trans-unit>
        <trans-unit id="70866221745a1418bcde933992974989853c3d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unlimited recursion depth&lt;/strong&gt;.  The underlying algorithm is
recursive descent, which can exhaust the stack for complex grammars
and large data sets.  LEPL avoids this problem by using Python
generators as coroutines (aka &amp;ldquo;trampolining&amp;rdquo;).</source>
          <target state="translated">&lt;strong&gt;Неограниченная глубина рекурсии&lt;/strong&gt; . Базовый алгоритм - рекурсивный спуск, который может исчерпать стек для сложных грамматик и больших наборов данных. LEPL избегает этой проблемы, используя генераторы Python в качестве сопрограмм (также называемых &amp;laquo;трамплином&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="a80415d1bd11d5892d74470e04084671a57b27f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Well documented&lt;/strong&gt; and easy to extend.</source>
          <target state="translated">&lt;strong&gt;Хорошо задокументирован&lt;/strong&gt; и легко расширяется.</target>
        </trans-unit>
        <trans-unit id="be91da727724f10f3030b406d10219e18f542889" translate="yes" xml:space="preserve">
          <source>A Parser Library for Python 2.6+/3+: Recursive Descent; Full Backtracking</source>
          <target state="translated">Библиотека парсеров для Python 2.6+/3+:Рекурсивный спуск;полный обратный ход</target>
        </trans-unit>
        <trans-unit id="998c9a2df4c33a3d27fc2c07fd63e7d7f0d6824e" translate="yes" xml:space="preserve">
          <source>Built-in &lt;strong&gt;AST support&lt;/strong&gt; with support for iteration, traversal and
re&amp;ndash;writing.</source>
          <target state="translated">Встроенная &lt;strong&gt;поддержка AST&lt;/strong&gt; с поддержкой итераций, обхода и перезаписи.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Особенности</target>
        </trans-unit>
        <trans-unit id="237fff0d6c895b48b76fc1ec355575e22b0a8e79" translate="yes" xml:space="preserve">
          <source>For example, it is not limited by the Python stack, because it uses
trampolining and co-routines.  Multiple parses can be found for ambiguous
grammars and it can also handle left-recursive grammars.</source>
          <target state="translated">Например,она не ограничена штабелем питонов,потому что в ней используется батут и со-корректировки.Для неоднозначных грамматических вычислений можно найти несколько парсингов,а также он может обрабатывать леворецидивирующие грамматики.</target>
        </trans-unit>
        <trans-unit id="d13272dbf605470d5987c679f283ee03b00763be" translate="yes" xml:space="preserve">
          <source>Generic, pure-Python approach supports parsing a wide variety of data
including &lt;strong&gt;bytes&lt;/strong&gt; (Python 3+ only).</source>
          <target state="translated">Общий подход, основанный на чистом Python, поддерживает анализ широкого спектра данных, включая &lt;strong&gt;байты&lt;/strong&gt; (только Python 3+).</target>
        </trans-unit>
        <trans-unit id="459d802d603b95d370570c642b66ae187be7049a" translate="yes" xml:space="preserve">
          <source>Integrated, optional &lt;strong&gt;lexer&lt;/strong&gt; simplifies handling whitespace.</source>
          <target state="translated">Встроенный необязательный &lt;strong&gt;лексер&lt;/strong&gt; упрощает обработку пробелов.</target>
        </trans-unit>
        <trans-unit id="87c5743b91bd75d449b16a0775316c59cb902e5f" translate="yes" xml:space="preserve">
          <source>LEPL is a recursive descent parser, written in Python, which has a a friendly,
easy-to-use syntax.  The underlying implementation includes
several features that make it more powerful than might be expected.</source>
          <target state="translated">LEPL-это парсер рекурсивного спуска,написанный на языке Python,который имеет дружелюбный,простой в использовании синтаксис.Основополагающая реализация включает в себя несколько возможностей,которые делают его более мощным,чем можно было бы ожидать.</target>
        </trans-unit>
        <trans-unit id="b2dbf7f56a1596a6bcdb2143e0781af0c1e8d4ab" translate="yes" xml:space="preserve">
          <source>Memoisation can detect and control &lt;strong&gt;left-recursive grammars&lt;/strong&gt;.  Together
with LEPL&amp;rsquo;s support for ambiguity this means that &amp;ldquo;any&amp;rdquo; grammar can be
supported.</source>
          <target state="translated">Мемоизация может обнаруживать леворекурсивные &lt;strong&gt;грамматики&lt;/strong&gt; и управлять ими . Вместе с поддержкой двусмысленности LEPL это означает, что может поддерживаться &amp;laquo;любая&amp;raquo; грамматика.</target>
        </trans-unit>
        <trans-unit id="281b5d7ac1d5c25a7d09c76eb3499a76a5c7ab37" translate="yes" xml:space="preserve">
          <source>Parsers can be made more &lt;strong&gt;efficient&lt;/strong&gt; with automatic memoisation (&amp;ldquo;packrat
parsing&amp;rdquo;).</source>
          <target state="translated">Синтаксические анализаторы можно сделать более &lt;strong&gt;эффективными&lt;/strong&gt; с помощью автоматической запоминания (&amp;laquo;пакетный анализ&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="53327c1a25884cb1a1ab37d7f8fb1c782c7e6790" translate="yes" xml:space="preserve">
          <source>Support for ambiguous grammars (&lt;strong&gt;complete backtracking&lt;/strong&gt;).  A
parser can return more than one result (aka &lt;strong&gt;&amp;ldquo;parse forests&amp;rdquo;&lt;/strong&gt;).</source>
          <target state="translated">Поддержка неоднозначных грамматик ( &lt;strong&gt;полный возврат&lt;/strong&gt; ). Синтаксический анализатор может возвращать более одного результата (также известный как &lt;strong&gt;&amp;laquo;синтаксический анализ леса&amp;raquo;&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="b2ec67336431bf0605e40b3af09d6159014d9539" translate="yes" xml:space="preserve">
          <source>THIS PROJECT IS NO LONGER DEVELOPED.  PLEASE SEE THE
&lt;a href=&quot;http://www.acooke.org/lepl&quot;&gt;SITE&lt;/a&gt; FOR MORE INFORMATION.</source>
          <target state="translated">ДАННЫЙ ПРОЕКТ БОЛЬШЕ НЕ РАЗРАБОТАН. ПОЖАЛУЙСТА, ПОСМОТРЕТЬ НА &lt;a href=&quot;http://www.acooke.org/lepl&quot;&gt;САЙТЕ&lt;/a&gt; ДЛЯ БОЛЕЕ ПОДРОБНОЙ ИНФОРМАЦИИ.</target>
        </trans-unit>
        <trans-unit id="297d78ea5281169c97f03d729e46f1b5909094b5" translate="yes" xml:space="preserve">
          <source>The aim is a powerful, extensible parser that will also give solid, reliable
results to first-time users.</source>
          <target state="translated">Целью является мощный,расширяемый парсер,который также даст твердые,надежные результаты для начинающих пользователей.</target>
        </trans-unit>
        <trans-unit id="053e63df8ec1d4bc209f44100344c3bced429ec2" translate="yes" xml:space="preserve">
          <source>Trace and resource management, including &lt;strong&gt;&amp;ldquo;deepest match&amp;rdquo; diagnostics&lt;/strong&gt;
and the ability to limit backtracking.</source>
          <target state="translated">Управление трассировкой и ресурсами, включая &lt;strong&gt;диагностику &amp;laquo;наиболее глубокого совпадения&amp;raquo;&lt;/strong&gt; и возможность ограничения обратного отслеживания.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
