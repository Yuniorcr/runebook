<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/pelican-zopfli/">
    <body>
      <group id="pelican-zopfli">
        <trans-unit id="c1fa76f975061f664afe7d72146b608c8a9373dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PELICAN_ZOPFLI_OVERWRITE&lt;/code&gt;
If True, the original files will be replaced by the gzip-compressed files.
This is useful for static hosting services (e.g S3). Defaults to False.</source>
          <target state="translated">&lt;code&gt;PELICAN_ZOPFLI_OVERWRITE&lt;/code&gt; If True, the original files will be replaced by the gzip-compressed files. This is useful for static hosting services (e.g S3). Defaults to False.</target>
        </trans-unit>
        <trans-unit id="fb2854c402fac98de51f0aa832408173870f27a4" translate="yes" xml:space="preserve">
          <source>An static resource compression plugin for Pelican, the static site generator.</source>
          <target state="translated">Плагин статического сжатия ресурсов для Pelican,статического генератора сайтов.</target>
        </trans-unit>
        <trans-unit id="6200e499c7054b4f831bcd39be6837f607ca9d48" translate="yes" xml:space="preserve">
          <source>Certain web servers (e.g., Nginx) can use a static cache of gzip-compressed
files to prevent the server from compressing files during an HTTP call. Since
compression occurs at another time, these compressed files can be compressed
at a higher compression level for increased optimization.</source>
          <target state="translated">Некоторые веб-серверы (например,Nginx)могут использовать статический кэш файлов,сжатых gzip,чтобы предотвратить сжатие файлов сервером во время HTTP-вызова.Так как сжатие происходит в другое время,эти сжатые файлы могут быть сжаты на более высоком уровне для большей оптимизации.</target>
        </trans-unit>
        <trans-unit id="34a27a6f10114485d08c032614830d70f9487bf2" translate="yes" xml:space="preserve">
          <source>In both cases you will then have to enable the plugin by putting
&lt;code&gt;pelican_zopfli&lt;/code&gt; into &lt;code&gt;PLUGINS&lt;/code&gt; in your pelican configuration. It is
a good idea to only do this in your &lt;code&gt;publishconf.py&lt;/code&gt; since this plugin is
quite slow.</source>
          <target state="translated">In both cases you will then have to enable the plugin by putting &lt;code&gt;pelican_zopfli&lt;/code&gt; into &lt;code&gt;PLUGINS&lt;/code&gt; in your pelican configuration. It is a good idea to only do this in your &lt;code&gt;publishconf.py&lt;/code&gt; since this plugin is quite slow.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="d0f39c254b2fa6afcae7c1cc834e58eb8adcf027" translate="yes" xml:space="preserve">
          <source>It is also possible to simply clone the git repository and put it in a directory
listed in &lt;code&gt;PLUGIN_PATHS&lt;/code&gt; in your &lt;code&gt;pelicanconf.py&lt;/code&gt;:</source>
          <target state="translated">It is also possible to simply clone the git repository and put it in a directory listed in &lt;code&gt;PLUGIN_PATHS&lt;/code&gt; in your &lt;code&gt;pelicanconf.py&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Настройки</target>
        </trans-unit>
        <trans-unit id="ed6a41a72b6aef9fdc818e27259c17d2b7065bf6" translate="yes" xml:space="preserve">
          <source>Since zopfli is slow, this plugin uses joblib to compress files in parallel.</source>
          <target state="translated">Так как zopfli работает медленно,этот плагин использует joblib для параллельного сжатия файлов.</target>
        </trans-unit>
        <trans-unit id="630485fcdedc301e6499e6f0c02c24ae1867d414" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pelican-zopfli&lt;/code&gt; plugin compresses all common text type files into a
&lt;code&gt;.gz&lt;/code&gt; file within the same directory as the original file.</source>
          <target state="translated">The &lt;code&gt;pelican-zopfli&lt;/code&gt; plugin compresses all common text type files into a &lt;code&gt;.gz&lt;/code&gt; file within the same directory as the original file.</target>
        </trans-unit>
        <trans-unit id="05d6257991aa2df23a4f7e858e12efda8235f373" translate="yes" xml:space="preserve">
          <source>The easiest option is to install via pip from PyPI:</source>
          <target state="translated">Самый простой вариант-установка по трубопроводу из PyPI:</target>
        </trans-unit>
        <trans-unit id="94782d8973beb5931c5f2d56ac05516975377d64" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;a href=&quot;https://github.com/getpelican/pelican-plugins/tree/master/gzip_cache&quot;&gt;gzip_cache&lt;/a&gt; but using &lt;a href=&quot;https://github.com/google/zopfli&quot;&gt;zopfli&lt;/a&gt; for better compression.</source>
          <target state="translated">This is a variant of &lt;a href=&quot;https://github.com/getpelican/pelican-plugins/tree/master/gzip_cache&quot;&gt;gzip_cache&lt;/a&gt; but using &lt;a href=&quot;https://github.com/google/zopfli&quot;&gt;zopfli&lt;/a&gt; for better compression.</target>
        </trans-unit>
        <trans-unit id="d681a686053032f059d4546e7d7ae946824bf316" translate="yes" xml:space="preserve">
          <source>Zopfli Gzip cache</source>
          <target state="translated">Zopfli Gzip кэш</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
