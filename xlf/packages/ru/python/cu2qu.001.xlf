<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/cu2qu/">
    <body>
      <group id="cu2qu">
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(или</target>
        </trans-unit>
        <trans-unit id="35ff59f1757a1944b8ce4cfe244ed15660054f77" translate="yes" xml:space="preserve">
          <source>) mode:</source>
          <target state="translated">) Режим:</target>
        </trans-unit>
        <trans-unit id="4126eaa1ad9d4d3f568a3aa60bc75e582b5dc6a4" translate="yes" xml:space="preserve">
          <source>), and then use the global option</source>
          <target state="translated">), а затем используйте глобальную опцию</target>
        </trans-unit>
        <trans-unit id="3515cb6d2089484641f48d16f9ad5eaf9e75541b" translate="yes" xml:space="preserve">
          <source>--editable</source>
          <target state="translated">- редактируемый</target>
        </trans-unit>
        <trans-unit id="51a11bde9f418c43a742d4872926f70fac030487" translate="yes" xml:space="preserve">
          <source>--global-option</source>
          <target state="translated">--global-option</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">--Помогите</target>
        </trans-unit>
        <trans-unit id="2409dbb844cb1f81941d2ceb0136d6ea85918bbe" translate="yes" xml:space="preserve">
          <source>--with-cython</source>
          <target state="translated">--with-cython</target>
        </trans-unit>
        <trans-unit id="2360917b9377a0f8f526499aa422e769e1252d5b" translate="yes" xml:space="preserve">
          <source>-e</source>
          <target state="translated">-e</target>
        </trans-unit>
        <trans-unit id="4bf031a80e9f0db8a2a223e30a4d10780ec25e1a" translate="yes" xml:space="preserve">
          <source>.
Check its</source>
          <target state="translated">. Проверить это</target>
        </trans-unit>
        <trans-unit id="31c9f7538d545b4835f11242466a14d794bd775b" translate="yes" xml:space="preserve">
          <source>CU2QU_WITH_CYTHON=1</source>
          <target state="translated">CU2QU_WITH_CYTHON=1</target>
        </trans-unit>
        <trans-unit id="de13b5293805e71af7639a8555435df96ec4ae95" translate="yes" xml:space="preserve">
          <source>Cubic-to-quadratic bezier curve conversion</source>
          <target state="translated">Преобразование кубической кривой безье в квадратичную кривую</target>
        </trans-unit>
        <trans-unit id="a7ccc4ada9faaae2f3382702ec4d86a2e99e5eb1" translate="yes" xml:space="preserve">
          <source>For example, to build the cu2qu extension module in-place (i.e. in the same
source directory):</source>
          <target state="translated">Например,собрать модуль расширения cu2qu на месте (т.е.в том же самом исходном каталоге):</target>
        </trans-unit>
        <trans-unit id="8fb253255ce8087c9fa3e039e73ea6c27f3cea3d" translate="yes" xml:space="preserve">
          <source>If you have cloned the git repository, the C source files are not present and
need to be regenerated. To do that, you need to install the latest Cython
(as usual,</source>
          <target state="translated">Если вы клонировали git-репозиторий,то исходных файлов на C нет и их нужно регенерировать.Для этого вам необходимо установить последний Cython (как обычно,</target>
        </trans-unit>
        <trans-unit id="74cc0eeab3c6ec1e8f2c83f5e0207b34d48f0b25" translate="yes" xml:space="preserve">
          <source>If you wish to modify the sources in-place, you can clone the git repository
from Github and install in</source>
          <target state="translated">Если вы хотите изменить исходные тексты на месте,вы можете клонировать git-репозиторий с Github и установить его на</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="3035caa6305226b744b1ea162fc3020baa859bce" translate="yes" xml:space="preserve">
          <source>Interpolation compatibility is guaranteed during conversion. If it&amp;rsquo;s not
needed, converting one font at a time may yield more optimized results:</source>
          <target state="translated">При конвертации гарантируется совместимость с интерполяцией. Если в этом нет необходимости, преобразование одного шрифта за раз может дать более оптимизированные результаты:</target>
        </trans-unit>
        <trans-unit id="813f7c2f7f4633a852ca19870655e4e1b8cdbe2c" translate="yes" xml:space="preserve">
          <source>Optionally, you can build an optimized version of cu2qu which uses &lt;a href=&quot;https://github.com/cython/cython&quot;&gt;Cython&lt;/a&gt;
to compile Python to C. The extension module thus created is &lt;em&gt;more than
twice as fast&lt;/em&gt; than its pure-Python equivalent.</source>
          <target state="translated">При желании вы можете создать оптимизированную версию cu2qu, которая использует &lt;a href=&quot;https://github.com/cython/cython&quot;&gt;Cython&lt;/a&gt; для компиляции Python в C. Созданный таким образом модуль расширения &lt;em&gt;более чем в два раза быстрее,&lt;/em&gt; чем его эквивалент на чистом Python.</target>
        </trans-unit>
        <trans-unit id="39dbdecb441816090957cb06b246a7e4a0301376" translate="yes" xml:space="preserve">
          <source>Some fonts may need a different error threshold than the default (0.001
em). This can also be provided by the caller:</source>
          <target state="translated">Для некоторых шрифтов может потребоваться порог ошибки,отличный от порога по умолчанию (0.001 эм).Это также может быть предоставлено вызывающим абонентом:</target>
        </trans-unit>
        <trans-unit id="f13c9450644dabff84b22eadf04a26c76e842f97" translate="yes" xml:space="preserve">
          <source>The library also provides a command-line script also named</source>
          <target state="translated">Библиотека также предоставляет скрипт командной строки,также называемый</target>
        </trans-unit>
        <trans-unit id="7a8f075aeba8e47113dd0b389ca3feb24cd785ff" translate="yes" xml:space="preserve">
          <source>This library provides functions which take in UFO objects (Defcon Fonts
or Robofab RFonts) and converts any cubic curves to quadratic. The most
useful function is probably</source>
          <target state="translated">Эта библиотека предоставляет функции,которые принимают объекты НЛО (шрифты Defcon или RFonts Robofab)и преобразуют любые кубические кривые в квадратичные.Наиболее полезной функцией,вероятно,является</target>
        </trans-unit>
        <trans-unit id="8a3d34371c839fd3fa3d0a04f9db2900c1fb3692" translate="yes" xml:space="preserve">
          <source>This will download the latest stable version available from the Python
Package Index (PyPI).</source>
          <target state="translated">Здесь вы можете скачать последнюю стабильную версию,доступную в Python Package Index (PyPI).</target>
        </trans-unit>
        <trans-unit id="46e66f6f6ae97d47d9101da9ee872b4841ea9662" translate="yes" xml:space="preserve">
          <source>When installing cu2qu from PyPI using pip, as long as you have a C compiler
available, the cu2qu setup script will automatically attempt to build a
C/Python extension module. If the compilation fails for any reasons, an error
is printed and cu2qu will be installed as pure-Python, without the optimized
extension.</source>
          <target state="translated">При установке cu2qu из PyPI с помощью pip,если у вас есть компилятор C,скрипт установки cu2qu автоматически попытается собрать модуль расширения C/Python.Если компиляция не удастся по каким-либо причинам,будет напечатана ошибка и модуль cu2qu будет установлен как чистый Python,без оптимизированного расширения.</target>
        </trans-unit>
        <trans-unit id="23a3e9a65c7eed785bc48509feae93af3929bfc5" translate="yes" xml:space="preserve">
          <source>You can also pass</source>
          <target state="translated">Вы также можете пройти</target>
        </trans-unit>
        <trans-unit id="f0f5d1433107dd661ca2741e23bc4a0ff5e92bed" translate="yes" xml:space="preserve">
          <source>You can install/upgrade cu2qu using pip, like any other Python package.</source>
          <target state="translated">Вы можете установить/обновить cu2qu с помощью pip,как и любой другой пакет Python.</target>
        </trans-unit>
        <trans-unit id="62ede488616689051aa1bada35cc3eda7e5d143a" translate="yes" xml:space="preserve">
          <source>can print a string reporting the number of curves
of each length. For example</source>
          <target state="translated">может распечатать строку,сообщающую количество кривых каждой длины.Например</target>
        </trans-unit>
        <trans-unit id="f81019bd418ef37925ba4c15e706700adb830534" translate="yes" xml:space="preserve">
          <source>cu2qu</source>
          <target state="translated">кю2кв</target>
        </trans-unit>
        <trans-unit id="673e91f8fdab380718b1c007f83e1dd19dd7f158" translate="yes" xml:space="preserve">
          <source>environment variable if you prefer.</source>
          <target state="translated">переменная окружения,если хотите.</target>
        </trans-unit>
        <trans-unit id="89a84eb90fe8d75d3c2f2d4161c173cefad26ef2" translate="yes" xml:space="preserve">
          <source>fonts_to_quadratic</source>
          <target state="translated">шрифты_к_квадратикам</target>
        </trans-unit>
        <trans-unit id="9aebafa2e1cf5e690fac575d914a7a225b46769e" translate="yes" xml:space="preserve">
          <source>fonts_to_quadratic([font], dump_stats=True)</source>
          <target state="translated">fonts_to_quadratic([шрифт],dump_stats=True)</target>
        </trans-unit>
        <trans-unit id="6988a338d03964fcb6f3634588014e8f6b60b13c" translate="yes" xml:space="preserve">
          <source>may print something
like:</source>
          <target state="translated">может напечатать что-то вроде:</target>
        </trans-unit>
        <trans-unit id="f92a02fc2a4d584b81b3165e470f9a088c9475eb" translate="yes" xml:space="preserve">
          <source>meaning that the font now contains 1000 curves with three points, 2000
with four points, and 100 with five. Given multiple fonts, the function
will report the total counts across all fonts. You can also accumulate
statistics between calls by providing your own report dictionary:</source>
          <target state="translated">Это означает,что шрифт теперь содержит 1000 кривых с тремя точками,2000 с четырьмя точками и 100 с пятью.При использовании нескольких шрифтов функция сообщит общее количество отсчетов по всем шрифтам.Вы также можете накапливать статистику между вызовами,предоставляя свой собственный словарь отчетов:</target>
        </trans-unit>
        <trans-unit id="8a400afd3bdbcbbe443ba8312904b0c0c9dcff16" translate="yes" xml:space="preserve">
          <source>pip install -U cython</source>
          <target state="translated">установка трубопроводов-ультрафиолетовый цитон</target>
        </trans-unit>
        <trans-unit id="372b42996e793b1cb3419275c40075f2d527575f" translate="yes" xml:space="preserve">
          <source>script. You can also export
a</source>
          <target state="translated">сценарий.Вы также можете экспортировать</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="04f390e6147cb095d3e061ef92c62fb6a514da8b" translate="yes" xml:space="preserve">
          <source>to see all the options.</source>
          <target state="translated">чтобы увидеть все варианты.</target>
        </trans-unit>
        <trans-unit id="7d7c8de9493fc2d4f706302317e23c526893ffaa" translate="yes" xml:space="preserve">
          <source>when installing with pip from a local
source checkout, like so:</source>
          <target state="translated">при установке с трубопроводом из локального источника,например:</target>
        </trans-unit>
        <trans-unit id="bc3dee14fec66ef0ed25d9c4a4e7e7d1a7763166" translate="yes" xml:space="preserve">
          <source>when invoking the</source>
          <target state="translated">при обращении к</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
