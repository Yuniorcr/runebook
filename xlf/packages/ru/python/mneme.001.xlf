<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/mneme/">
    <body>
      <group id="mneme">
        <trans-unit id="09e84feb433d3a14815a54dd74108f110ab75cb6" translate="yes" xml:space="preserve">
          <source>![Mneme demo](https://raw.githubusercontent.com/Risto-Stevcev/flask-mneme/master/mneme/demo.gif)</source>
          <target state="translated">! [Демонстрация мнемов] (https://raw.githubusercontent.com/Risto-Stevcev/flask-mneme/master/mneme/demo.gif)</target>
        </trans-unit>
        <trans-unit id="88dd41a15ecc553f3a30ffe00fbc529f8acbe1fd" translate="yes" xml:space="preserve">
          <source># Mneme</source>
          <target state="translated"># Mneme</target>
        </trans-unit>
        <trans-unit id="e3ae97f26c58c2efb405f97615be7a226ebde0d7" translate="yes" xml:space="preserve">
          <source>## Heroku</source>
          <target state="translated">## Heroku</target>
        </trans-unit>
        <trans-unit id="ce0ac5372b84e816959d2c6fbb5a716c6e783cd5" translate="yes" xml:space="preserve">
          <source>## Instructions</source>
          <target state="translated">## Инструкции</target>
        </trans-unit>
        <trans-unit id="86610a7b8d514ac31c557e3a8034f78154689ed7" translate="yes" xml:space="preserve">
          <source>### Exporting</source>
          <target state="translated">### Экспорт</target>
        </trans-unit>
        <trans-unit id="970226ac58eb902347c2e43b1b0394c5687abeb8" translate="yes" xml:space="preserve">
          <source>### Shortcuts</source>
          <target state="translated">### Ярлыки</target>
        </trans-unit>
        <trans-unit id="43cb330d83386f66833a58341b6605b244098194" translate="yes" xml:space="preserve">
          <source>* *Ctrl-Alt-PgDown* when viewing a particular mneme file will go into *Edit mode*.</source>
          <target state="translated">* * Ctrl-Alt-PgDown * при просмотре определенного файла мнем перейдет в * режим редактирования *.</target>
        </trans-unit>
        <trans-unit id="4fbfba747725b652c9abf193370e537913331e47" translate="yes" xml:space="preserve">
          <source>* *Ctrl-Alt-PgUp* when viewing a particular mneme file will go into *View mode*.</source>
          <target state="translated">* * Ctrl-Alt-PgUp * при просмотре определенного файла мнем перейдет в * режим просмотра *.</target>
        </trans-unit>
        <trans-unit id="a5e1c3db6aeead093db7707ba01af7e3d876f319" translate="yes" xml:space="preserve">
          <source>* *Shift-tab* in the editing window will un-indent the selected text by 4 spaces (*for multi-line code*).</source>
          <target state="translated">* * Shift-tab * в окне редактирования убирает отступ выделенного текста на 4 пробела (* для многострочного кода *).</target>
        </trans-unit>
        <trans-unit id="a64e5c400b6753626b8c305ddb447a2ac5fbfd72" translate="yes" xml:space="preserve">
          <source>* *Tab* in the editing window will indent the selected text by 4 spaces (*for multi-line code*).</source>
          <target state="translated">* * Табуляция * в окне редактирования отступит от выделенного текста на 4 пробела (* для многострочного кода *).</target>
        </trans-unit>
        <trans-unit id="417f1db98e967aa15d5a12ece6213ead93f3b15f" translate="yes" xml:space="preserve">
          <source>** Note: ** *Using the Heroku/MongoDB/Flask web stack is optional for using the mneme file format. The file format is just a representation structure that can be used by anything that can handle JSON and markdown formats.*</source>
          <target state="translated">** Примечание. ** * Использование веб-стека Heroku / MongoDB / Flask не является обязательным для использования формата файла мнем. Формат файла - это просто структура представления, которую может использовать все, что может обрабатывать форматы JSON и уценки. *</target>
        </trans-unit>
        <trans-unit id="6f5adaa50256255ba07a230a0207cdc0f874538d" translate="yes" xml:space="preserve">
          <source>**Mneme** is a new and elegant note-taking format with a web editor/viewer. The web app edits and views a new type of notes format called a *mneme* file.</source>
          <target state="translated">** Mneme ** - это новый элегантный формат заметок с веб-редактором / программой просмотра. Веб-приложение редактирует и просматривает новый тип формата заметок, называемый файлом * mneme *.</target>
        </trans-unit>
        <trans-unit id="907c95ca766448723a1bfbaa3f25ce242882df13" translate="yes" xml:space="preserve">
          <source>1. Create a **Heroku** account.</source>
          <target state="translated">1.Создать учетную запись **Heroku**.</target>
        </trans-unit>
        <trans-unit id="7b466bd7217fc789ad26bdaf85fd10008b851bc2" translate="yes" xml:space="preserve">
          <source>1. Create a new **MongoHQ** database using the free *512MB sandbox* version (or paid if you want/need it).</source>
          <target state="translated">1.Создайте новую базу данных **MongoHQ**,используя бесплатную версию песочницы *512 МБ*(или платную,если хотите/необходимо).</target>
        </trans-unit>
        <trans-unit id="019c55620a18cfe173919090cb8ea82e51a57624" translate="yes" xml:space="preserve">
          <source>1. Create a new Heroku app by running the command:</source>
          <target state="translated">1.Создайте новое приложение Heroku,запустив команду:</target>
        </trans-unit>
        <trans-unit id="557b17778f21904202574a2ae2354dfcb5cb30cd" translate="yes" xml:space="preserve">
          <source>1. Go to Databases-&amp;gt;(*your new mneme database*)-&amp;gt;Admin-&amp;gt;Overview at the MongoHQ website dashboard and grab the line of code that says ``Mongo Console``.</source>
          <target state="translated">1. Перейдите в Базы данных -&amp;gt; (* ваша новая база данных мнем *) -&amp;gt; Администратор-&amp;gt; Обзор на панели управления веб-сайта MongoHQ и возьмите строку кода, которая гласит &amp;laquo;Консоль Mongo&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="eb22fa5c88e8bc51d896c83e61f4989be165bfe2" translate="yes" xml:space="preserve">
          <source>1. Install **Mneme**.</source>
          <target state="translated">1-я установка **Почему**.</target>
        </trans-unit>
        <trans-unit id="008669acde6faab8e838925d202aee437b161da6" translate="yes" xml:space="preserve">
          <source>1. Locate the **Mongo URI** in Databases-&amp;gt;(*your new mneme database*)-&amp;gt;Admin-&amp;gt;Overview and identify the host, port and database.</source>
          <target state="translated">1. Найдите ** Mongo URI ** в Базах данных -&amp;gt; (* ваша новая база данных мнем *) -&amp;gt; Админ-&amp;gt; Обзор и укажите хост, порт и базу данных.</target>
        </trans-unit>
        <trans-unit id="af9c9210c9a54da18806c2660743d1097a030ea7" translate="yes" xml:space="preserve">
          <source>1. Start the environment with this command:</source>
          <target state="translated">1.Запустите среду с помощью этой команды:</target>
        </trans-unit>
        <trans-unit id="c068f465d660d4cd63c4f6a4196dd6b9b8b5a5b2" translate="yes" xml:space="preserve">
          <source>2. Create a new user to access the database.</source>
          <target state="translated">2.Создать нового пользователя для доступа к базе данных.</target>
        </trans-unit>
        <trans-unit id="b1a1e0664741889e818c2c9170534cc3ec1e59bd" translate="yes" xml:space="preserve">
          <source>2. Install all of the missing dependencies listed in the ``dependencies.txt`` file in the cloned mneme folder.</source>
          <target state="translated">2.Установите все недостающие зависимости,перечисленные в файле ``dependencies.txt`` в папку клонированного мнема.</target>
        </trans-unit>
        <trans-unit id="6c744da9f3db4e6dca9ec8a748328219789193c9" translate="yes" xml:space="preserve">
          <source>2. Login to Heroku.</source>
          <target state="translated">Войдите в Хероку.</target>
        </trans-unit>
        <trans-unit id="82d60f8e6822e75a6d73cffdd1426a23c392d2d6" translate="yes" xml:space="preserve">
          <source>2. Replace ``&amp;lt;user&amp;gt;`` and ``&amp;lt;password&amp;gt;`` with the username and password you created for your database earlier, and run it in the command line. You should now be connected to your new database!</source>
          <target state="translated">2. Замените &amp;laquo;&amp;lt;user&amp;gt;&amp;laquo; и &amp;laquo;&amp;lt;password&amp;gt;&amp;raquo; на имя пользователя и пароль, которые вы создали для своей базы данных ранее, и запустите его в командной строке. Теперь вы должны подключиться к своей новой базе данных!</target>
        </trans-unit>
        <trans-unit id="61944f367479db0604e6e4ff021c6992f7be109a" translate="yes" xml:space="preserve">
          <source>2. Run the *mneme* ``register`` command.</source>
          <target state="translated">2.Выполните команду *mneme*``register``.</target>
        </trans-unit>
        <trans-unit id="5ecd818703de9c943bf5487e46f08292c3173a9a" translate="yes" xml:space="preserve">
          <source>2. Test your installation.</source>
          <target state="translated">2.Проверьте вашу установку.</target>
        </trans-unit>
        <trans-unit id="83f61257764d44098c430534af809a43e08a89dd" translate="yes" xml:space="preserve">
          <source>2. Upload your public key to Heroku if you haven't already:</source>
          <target state="translated">2.Загрузите ваш открытый ключ в Heroku,если вы еще этого не сделали:</target>
        </trans-unit>
        <trans-unit id="1674fc0d8b9924aa4e8e3beff2ccb511183f9b23" translate="yes" xml:space="preserve">
          <source>3. Clone the **Mneme** source code.</source>
          <target state="translated">3.Клонируй исходный код **Mneme**.</target>
        </trans-unit>
        <trans-unit id="5f857831a36cdfe801ec25a131c2ce4f6dbcb9c9" translate="yes" xml:space="preserve">
          <source>3. Create a **MongoHQ** account.</source>
          <target state="translated">3.Создать учетную запись **MongoHQ**.</target>
        </trans-unit>
        <trans-unit id="78eaa1e9c16c39023b9603e910b006d078155c3e" translate="yes" xml:space="preserve">
          <source>3. Push the files upstream to Heroku:</source>
          <target state="translated">3.Переместите файлы вверх по течению в Хероку:</target>
        </trans-unit>
        <trans-unit id="f6d83ccb37a0dce8714351ff8a0f3f09389581b2" translate="yes" xml:space="preserve">
          <source>3. Test your MongoHQ database.</source>
          <target state="translated">3.Проверьте свою базу данных MongoHQ.</target>
        </trans-unit>
        <trans-unit id="fbf08592ce507a34e49f3e9f16e0ef3a0711d89c" translate="yes" xml:space="preserve">
          <source>4. Add a new **MongoHQ** database for *mneme*.</source>
          <target state="translated">4.Добавить новую базу данных **MongoHQ**для *mneme*.</target>
        </trans-unit>
        <trans-unit id="6d68cfa458c3583d040d4ad6dbd373c081495983" translate="yes" xml:space="preserve">
          <source>4. Create a *virtualenv* environment.</source>
          <target state="translated">4.Создать *virtualenv*среду.</target>
        </trans-unit>
        <trans-unit id="21cf561b32b8f626ceb69e8528b43b5f309e5970" translate="yes" xml:space="preserve">
          <source>5. Register your **MongoHQ** database with *mneme*.</source>
          <target state="translated">5.Зарегистрируйте вашу **MongoHQ**базу данных с *mneme*.</target>
        </trans-unit>
        <trans-unit id="cdf62ad05bfe8fd3e5952f8537cafd2677bb5e1a" translate="yes" xml:space="preserve">
          <source>5. Start the *virtualenv* environment and install the python dependencies.</source>
          <target state="translated">5.Запустите *virtualenv*окружение и установите зависимости питона.</target>
        </trans-unit>
        <trans-unit id="e315726c4f3a4a33a0c30ee7f26f59214e30348f" translate="yes" xml:space="preserve">
          <source>6. Add or modify an *authorized user*.</source>
          <target state="translated">6.Добавить или изменить *авторизованного пользователя*.</target>
        </trans-unit>
        <trans-unit id="bfe953b32fd925b46ecc1aed8e06d1767a9a5e17" translate="yes" xml:space="preserve">
          <source>6. Test that the ``Procfile`` works.</source>
          <target state="translated">6.Проверьте,что ``Профиль`` работает.</target>
        </trans-unit>
        <trans-unit id="3d42a67e94099097afd242908dfead652a0c5ee1" translate="yes" xml:space="preserve">
          <source>7. Deploy the application to Heroku.</source>
          <target state="translated">7.Разместите заявку в Heroku.</target>
        </trans-unit>
        <trans-unit id="7c7cd389ebdac94fea5385eb9db65bc84e295a3a" translate="yes" xml:space="preserve">
          <source>7. Test out **Mneme**!</source>
          <target state="translated">7.Проверка **Мнема**!</target>
        </trans-unit>
        <trans-unit id="02b7d4e0f84dad92e7be0c948e5dd8c8b3672c23" translate="yes" xml:space="preserve">
          <source>8. Test your Heroku app by going to the link generated by Heroku for your app. See Heroku's [getting started with python](https://devcenter.heroku.com/articles/getting-started-with-python) for reference and further reading.</source>
          <target state="translated">8.Протестируйте ваше приложение Heroku,перейдя по ссылке,сгенерированной Heroku для вашего приложения.Смотрите сайт Heroku [начало работы с питоном](https://devcenter.heroku.com/articles/getting-started-with-python)для справки и дальнейшего чтения.</target>
        </trans-unit>
        <trans-unit id="10286f3b9354359589309eefa29cd0c013ef926f" translate="yes" xml:space="preserve">
          <source>A *mneme* file is a combination file format. The file format's basic structure comprises of a **JSON** *object*. Each **key** in the key/value pair refers to a *topic* name, and the **value** is either a new set of key/value pairs (indicating a *subnode*), or a *string* that's formatted in **markdown** syntax.</source>
          <target state="translated">Файл *mneme*-это комбинированный формат файла.Основная структура формата файла состоит из **JSON***объекта*.Каждое **key**в паре ключ/значение относится к *топическому*имени,а **значение**является либо новым набором пар ключ/значение (указывающим *подузел*),либо *строкой*,отформатированной в синтаксисе **markdown**.</target>
        </trans-unit>
        <trans-unit id="0a138a7c40ba83102abf437376359450ab57fcd8" translate="yes" xml:space="preserve">
          <source>A powerful note-taking format with a web viewer/editor.</source>
          <target state="translated">Мощный формат записей с веб-зрителем/редактором.</target>
        </trans-unit>
        <trans-unit id="5f3c53767334c26320a37ac0e75611f8264697c3" translate="yes" xml:space="preserve">
          <source>After you've written a bunch of notes using *mneme*, you might want to keep the files locally in their native JSON file format for reference or as a backup. MongoDB preserves the *mneme* files in their native JSON format automatically. Here's how to do a simple export using the same credentials you used in the steps to get it set up:</source>
          <target state="translated">После того,как вы написали кучу заметок,используя *mneme*,вы,возможно,захотите сохранить файлы локально в их родном формате JSON для справки или в качестве резервной копии.MongoDB автоматически сохраняет *mneme*файлы в их родном формате JSON.Вот как сделать простой экспорт,используя те же самые учетные данные,которые Вы использовали по шагам настройки:</target>
        </trans-unit>
        <trans-unit id="e9f3ac864d54c46496c7f33074583fdf9dabb40b" translate="yes" xml:space="preserve">
          <source>Ex: ``mneme register --db mneme --username myusername --password mypassword --host oceanic.mongohq.com --port 10052``</source>
          <target state="translated">Ex:``mneme register --db mneme --username myusername --password mypassword --host oceanic.mongohq.com --port 10052``.</target>
        </trans-unit>
        <trans-unit id="4e3a8d4daaef0bcf513beadc82bed12720cf9698" translate="yes" xml:space="preserve">
          <source>Ex: ``mongodb://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@oceanic.mongohq.com:10052/mneme``, *oceanic.mongohq.com* is the hostname, *10052* is the port, *mneme* is the database.</source>
          <target state="translated">Пример: `` mongodb: // &amp;lt;user&amp;gt;: &amp;lt;password&amp;gt; @ oceanic.mongohq.com: 10052 / mneme``, * oceanic.mongohq.com * - имя хоста, * 10052 * - порт, * mneme * - база данных.</target>
        </trans-unit>
        <trans-unit id="875cd14e0aa6042b48ec7dc0c37b43685b28e623" translate="yes" xml:space="preserve">
          <source>Ex: ``pip install Flask gunicorn`` as a bare minimum. You'll also need the rest, such as mongodb's dependencies.</source>
          <target state="translated">Исх.:```пип установите флягу гуникорн`,как минимум,голыми руками.Вам также понадобится остальное,например,зависимость от монгодба.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Пример:</target>
        </trans-unit>
        <trans-unit id="da89e69f517aea8cc54e21b83adb5db256cb9e5d" translate="yes" xml:space="preserve">
          <source>Fill in the options with the database username/password you created earlier at MongoHQ, and the parameters you identified from the Mongo URI.</source>
          <target state="translated">Заполните опции именем пользователя/паролем базы данных,которые вы создали ранее в MongoHQ,и параметрами,которые вы определили из Mongo URI.</target>
        </trans-unit>
        <trans-unit id="8b976aada7a6746ab7efbc31cb100a779554fa53" translate="yes" xml:space="preserve">
          <source>Go to Databases-&amp;gt;(*your new mneme database*)-&amp;gt;Admin-&amp;gt;Users at the MongoHQ website dashboard, and click the ``Add User`` button to add a new user.</source>
          <target state="translated">Перейдите в Базы данных -&amp;gt; (* ваша новая база данных мнем *) -&amp;gt; Администратор-&amp;gt; Пользователи на панели инструментов веб-сайта MongoHQ и нажмите кнопку `` Добавить пользователя '', чтобы добавить нового пользователя.</target>
        </trans-unit>
        <trans-unit id="4aa90fd55ec995fd82e25a6ed7cc964e699f2bfd" translate="yes" xml:space="preserve">
          <source>Go to [http://www.mongohq.com/](http://www.mongohq.com/), click ``Sign Up`` and follow the steps to register.</source>
          <target state="translated">Зайдите на [http://www.mongohq.com/](http://www.mongohq.com/),нажмите ``Подписать`` и выполните шаги для регистрации.</target>
        </trans-unit>
        <trans-unit id="00c4ecac3dc857a76de4bb150881246b8a085f68" translate="yes" xml:space="preserve">
          <source>Here is an animated demo of how the web app looks:</source>
          <target state="translated">Вот анимационная демонстрация того,как выглядит веб-приложение:</target>
        </trans-unit>
        <trans-unit id="bad811ffc1488652cb21c854f382992ef826e95c" translate="yes" xml:space="preserve">
          <source>If you don't have a public key (``ls ~/.ssh/id_rsa.pub`` returns nothing), Heroku will prompt you to add one automatically. You can use:</source>
          <target state="translated">Если у вас нет открытого ключа (``ls ~/.ssh/id_rsa.pub`` ничего не возвращает),Heroku предложит вам добавить его автоматически.Вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="14f3394e43b403b16aec5e79f51bd1adadec5c83" translate="yes" xml:space="preserve">
          <source>In the clone directory, you should see several python files such as ``manage.py``, and folders like ``templates`` and ``logs``. Create a *virtualenv* environment in this directory and name it ``venv``. Type:</source>
          <target state="translated">В каталоге клонов вы должны увидеть несколько питоновских файлов,таких как ``manage.py``,и папки типа ``templates`` и `loggs``.Создайте в этом каталоге *virtualenv*окружение и назовите его ```vv``.Введите:</target>
        </trans-unit>
        <trans-unit id="407a8903e98e215669f695151429bc917e58626e" translate="yes" xml:space="preserve">
          <source>Mneme is named after **Mneme**, the Muse of Memory. The tree-like structure of the file format makes it easy to divide up concepts into subconcepts as small as is necessary. The markdown format of the text makes it easy to quickly add formatting like bold, italics, code, or lists. The powerful combination of a JSON tree with markdown text makes it easy to maintain, organize and manipulate all of your notes!</source>
          <target state="translated">Мне назван в честь **Мнема**,Музы Памяти.Древовидная структура формата файла позволяет легко разбивать понятия на подконцепции настолько маленькие,насколько это необходимо.Формат усечения текста облегчает быстрое добавление форматирования в виде жирного шрифта,курсива,кода или списков.Мощная комбинация JSON-дерева с текстом уценки позволяет легко поддерживать,организовывать и манипулировать всеми вашими заметками!</target>
        </trans-unit>
        <trans-unit id="1045e4a5fc10c8078d94072e50bd46bbee7a49f1" translate="yes" xml:space="preserve">
          <source>Run ``foreman start`` in the directory that ``Procfile`` lives in. You might need to install foreman if you haven't already for this step.</source>
          <target state="translated">Запустите ``Forman start`` в каталоге,в котором живет ``Procfile``.Возможно,вам понадобится установить foreman,если вы еще не сделали этого шага.</target>
        </trans-unit>
        <trans-unit id="086fcb4800a3da34cf44eef9a14d42e7d5156056" translate="yes" xml:space="preserve">
          <source>Run ``git clone https://github.com/Risto-Stevcev/flask-mneme.git`` in the terminal and the directory you want it to install into.</source>
          <target state="translated">Запустите ``гит клон https://github.com/Risto-Stevcev/flask-mneme.git`` в терминале и каталоге,в который хотите его установить.</target>
        </trans-unit>
        <trans-unit id="228b316dc783a72639d58714e3050a3e606135a9" translate="yes" xml:space="preserve">
          <source>Run ``heroku login`` in the terminal and type in your account credentials.</source>
          <target state="translated">Запустите ``героку-логин` в терминале и введите реквизиты своего аккаунта.</target>
        </trans-unit>
        <trans-unit id="dc338e6d4825c8d8e70e40bb80b8dd4f0af4c658" translate="yes" xml:space="preserve">
          <source>Run ``mneme runserver`` again and go to ``localhost:5000``. Then log in with your *authorized user* credentials and start playing around with mneme.</source>
          <target state="translated">Беги ``mneme runserver` снова` и иди к `localhost:5000``.Затем войдите в систему со своими *авторизованными учетными записями*и начните играть с mneme.</target>
        </trans-unit>
        <trans-unit id="7de2b670f431ecdda0fb88dffaf00c8dc1a63d0b" translate="yes" xml:space="preserve">
          <source>Run something like ``mneme authorize --user hello --password world``, which in this case would authorize user ``hello`` with the password ``world`` to use the *mneme* web app.</source>
          <target state="translated">Запустите что-нибудь вроде ``mneme Авторизация --user hello --password world``,что в этом случае авторизует пользователя ``hello`` с помощью пароля `world`` для использования веб-приложения *mneme*.</target>
        </trans-unit>
        <trans-unit id="05900126009a29532f9f7408bd54a0e57c51bd12" translate="yes" xml:space="preserve">
          <source>Start the server by typing ``mneme runserver`` and go to ``localhost:5000`` in your browser. It should return a ``404 error`` because you haven't registered a *mongodb database* yet.</source>
          <target state="translated">Запустите сервер,набрав в браузере ``mneme runerver``,и перейдите на `localhost:5000``.Это должно вернуть ``404 ошибку``,потому что Вы еще не зарегистрировали *mongodb базу данных*.</target>
        </trans-unit>
        <trans-unit id="e278f6461902662939a6ac617e933404af24ed2a" translate="yes" xml:space="preserve">
          <source>That's it! I hope this was easy to set up, and I hope you enjoy using **Mneme**! If you have any feature requests, please submit an issue on the project GitHub page with the label ``enhancement``, or ``bug`` if you happen to find bugs. Or submit a pull request if you're interested in contributing.</source>
          <target state="translated">Вот так! Надеюсь,это было легко настроить,и я надеюсь,вам понравится использовать **Mneme**! Если у вас есть какие-то пожелания по работе с функциями,пожалуйста,отправьте вопрос на страницу проекта GitHub с надписью ``enhancement``,или ``bug``,если вы случайно обнаружили ошибку.Или отправьте запрос на вытаскивание,если вы заинтересованы в участии.</target>
        </trans-unit>
        <trans-unit id="076f3d989d0438e50ab7fdbe704cf668d4bd1a5c" translate="yes" xml:space="preserve">
          <source>The command should have added a remote repository called ``heroku``. Check by typing ``git remote -v``.</source>
          <target state="translated">Команда должна была добавить удалённое хранилище под названием ``heroku``.Проверьте,набрав ``git remote -v``.</target>
        </trans-unit>
        <trans-unit id="dd00477f2d0ff4d2961059e5056a36adc9c235d7" translate="yes" xml:space="preserve">
          <source>The interface is self-explanatory. You can use ``CTRL-S`` when viewing/editing a particular *mneme* file to quickly save client-side. The file isn't saved on the server-side until you click ``Save Mneme``, which will redirect you to the main page with all of the *mnemes* listed.</source>
          <target state="translated">Интерфейс понятен сам по себе.Вы можете использовать ``CTRL-S`` при просмотре/редактировании конкретного файла *mneme*для быстрого сохранения клиентской стороны.Файл не сохраняется на стороне сервера до тех пор,пока Вы не нажмете кнопку ``Save Mneme``,которая перенаправит Вас на главную страницу со всеми *mneme*,перечисленными в списке.</target>
        </trans-unit>
        <trans-unit id="1e1497beafb64991d8ce9c58f811fa46386619e2" translate="yes" xml:space="preserve">
          <source>The viewer creates a tree of *topics* from the *mneme* file, and the bottom-most nodes are always *strings* in **markdown** format containing more detailed information about the topic/subtopic. The editor/viewer makes it easy to edit and view the *mneme* file.</source>
          <target state="translated">Зритель создает дерево *топий*из файла *mneme*,а самыми нижними узлами всегда являются *строки*в формате **markdown**,содержащие более подробную информацию о теме/подтеме.Редактор/просмотрщик упрощает редактирование и просмотр *mneme*файла.</target>
        </trans-unit>
        <trans-unit id="36521bac9969ac2309459682098aa4a20346dd9e" translate="yes" xml:space="preserve">
          <source>View on PyPI: https://pypi.python.org/pypi/mneme/</source>
          <target state="translated">Посмотреть на PyPI:https://pypi.python.org/pypi/mneme/</target>
        </trans-unit>
        <trans-unit id="3dec39cd17fa589f43a9d4f2b6947214db12b1a6" translate="yes" xml:space="preserve">
          <source>You probably want to be able to use *mneme* as a web app so you can edit notes on your mobile phone or tablet wherever you are. It also opens the door to modify the web app in the ways you want it to work. Here are the steps to get *mneme* up and running with Heroku.</source>
          <target state="translated">Вы,вероятно,хотите иметь возможность использовать *mneme*в качестве веб-приложения,чтобы вы могли редактировать заметки на вашем мобильном телефоне или планшете,где бы вы ни находились.Это также открывает дверь для изменения веб-приложения так,как вы хотите,чтобы оно работало.Вот шаги,которые необходимо предпринять,чтобы получить *mneme*и запустить Heroku.</target>
        </trans-unit>
        <trans-unit id="2ed84bce267553840aa381a88cffce696e7ff747" translate="yes" xml:space="preserve">
          <source>You should see ``(venv)`` next to your shell prompt indicating that it's active.</source>
          <target state="translated">Вы должны увидеть ``(venv)`` рядом с подсказкой оболочки,указывающей на то,что она активна.</target>
        </trans-unit>
        <trans-unit id="82a1c3817ad633969f9126904503737d0b83929f" translate="yes" xml:space="preserve">
          <source>``git push heroku master``</source>
          <target state="translated">`` git push heroku master`</target>
        </trans-unit>
        <trans-unit id="62396acd29eef697b1bf6e5162ce621c28bc2a7b" translate="yes" xml:space="preserve">
          <source>``heroku create``</source>
          <target state="translated">`` героку создать``</target>
        </trans-unit>
        <trans-unit id="b81f5bb752b8b9d5e42f2ad5eee45e5ec570a83b" translate="yes" xml:space="preserve">
          <source>``heroku keys:add ~/.ssh/id_rsa.pub``</source>
          <target state="translated">`` ключи героку: добавить ~ / .ssh / id_rsa.pub``</target>
        </trans-unit>
        <trans-unit id="bfda26aa90ad2d8c74d2a505c6606a663844e275" translate="yes" xml:space="preserve">
          <source>``heroku keys:add``</source>
          <target state="translated">`` ключи героку: добавить`</target>
        </trans-unit>
        <trans-unit id="4e5d5adc7dd4c25f4e4532ff113cdda83f402d64" translate="yes" xml:space="preserve">
          <source>``pip install --user mneme``</source>
          <target state="translated">`` pip install --user mneme``</target>
        </trans-unit>
        <trans-unit id="54ae104bee5c885d943f6d59bd8eff2eb3843c68" translate="yes" xml:space="preserve">
          <source>``source venv/bin/activate``</source>
          <target state="translated">`` источник venv / bin / активировать ''</target>
        </trans-unit>
        <trans-unit id="67632471e912aea8eeadac6a904db46ff45a1bf5" translate="yes" xml:space="preserve">
          <source>``virtualenv venv``</source>
          <target state="translated">`` virtualenv venv``</target>
        </trans-unit>
        <trans-unit id="994156025903cb09997fd6227070e223132af780" translate="yes" xml:space="preserve">
          <source>mongoexport --host (hostname:port) -u &amp;lt;user&amp;gt; -p&amp;lt;pass&amp;gt; --db &amp;lt;db&amp;gt; --collection &amp;lt;collection&amp;gt; --out &amp;lt;json output file&amp;gt;</source>
          <target state="translated">mongoexport --host (имя хоста: порт) -u &amp;lt;пользователь&amp;gt; -p &amp;lt;pass&amp;gt; --db &amp;lt;db&amp;gt; --collection &amp;lt;collection&amp;gt; --out &amp;lt;выходной файл json&amp;gt;</target>
        </trans-unit>
        <trans-unit id="78853c3f6bde84fa45d65f00c7254d9d7586e0ea" translate="yes" xml:space="preserve">
          <source>mongoexport --host oceanic.mongohq.com:10052 -u mnememaster -ppasswd --db mnemedb --collection mneme --out mnemes.json</source>
          <target state="translated">mongoexport --host oceanic.mongohq.com:10052 -u mnememaster -ppasswd --db mnemedb --collection mneme --out mnemes.json</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
