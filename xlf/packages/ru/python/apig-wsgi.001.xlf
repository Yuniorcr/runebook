<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/apig-wsgi/">
    <body>
      <group id="apig-wsgi">
        <trans-unit id="4f9542e28f4a218c2cb9fa0a19bc1fb9e40bb871" translate="yes" xml:space="preserve">
          <source>. ALB&amp;rsquo;s support binary responses by default, but on API Gateway you
need to make sure you have</source>
          <target state="translated">. По умолчанию ALB поддерживает двоичные ответы, но на API Gateway необходимо убедиться, что у вас есть</target>
        </trans-unit>
        <trans-unit id="3b92c7d669bad2345ddf74df704dd7fb8c551b81" translate="yes" xml:space="preserve">
          <source>A quick example:</source>
          <target state="translated">Быстрый пример:</target>
        </trans-unit>
        <trans-unit id="b75a8cba756c07c7632a938c06ee746d46b5c19a" translate="yes" xml:space="preserve">
          <source>An example application with Ansible deployment is provided in the</source>
          <target state="translated">Пример приложения с Допустимым развёртыванием приведён в разделе</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">Ложный</target>
        </trans-unit>
        <trans-unit id="04081295c57f40e391e2384a66c62ec757d0f3fb" translate="yes" xml:space="preserve">
          <source>Flask()</source>
          <target state="translated">Фляжка()</target>
        </trans-unit>
        <trans-unit id="a666eb1e9af35ac2f24808146b3412aaac0911be" translate="yes" xml:space="preserve">
          <source>If the event from API Gateway contains the</source>
          <target state="translated">Если событие из шлюза API содержит в себе параметр</target>
        </trans-unit>
        <trans-unit id="28d81056cbc02e2ac60d8f9e318a350fb6449a65" translate="yes" xml:space="preserve">
          <source>If you need the
&lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/python-context.html&quot;&gt;Lambda Context object&lt;/a&gt;,
it&amp;rsquo;s available in the WSGI environ at the key</source>
          <target state="translated">Если вам нужен &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/python-context.html&quot;&gt;объект Lambda Context&lt;/a&gt; , он доступен в среде WSGI по ключу</target>
        </trans-unit>
        <trans-unit id="347231274053c4c88d1e57de77bb4aa6f4898e25" translate="yes" xml:space="preserve">
          <source>If you want to inspect the full event from API Gateway, it&amp;rsquo;s available in the
WSGI environ at the key</source>
          <target state="translated">Если вы хотите проверить все событие из API Gateway, оно доступно в среде WSGI по ключу</target>
        </trans-unit>
        <trans-unit id="e675a77592607308ccfe5b9567c8b23a0bb3f16f" translate="yes" xml:space="preserve">
          <source>If you want to support sending binary responses, set</source>
          <target state="translated">Если вы хотите поддерживать отправку двоичных ответов,установите параметр</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="05bd621da705342cf9c897111932b3d1f8c158c5" translate="yes" xml:space="preserve">
          <source>Multiple values for request and response headers and query parameters are
supported. They are enabled automatically on API Gateway but need
&lt;a href=&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html#multi-value-headers&quot;&gt;explict activation on ALB&amp;rsquo;s&lt;/a&gt;.
If you need to determine from within your application if multiple header values
are enabled, you can can check the</source>
          <target state="translated">Поддерживаются несколько значений для заголовков запросов и ответов и параметров запроса. Они включаются автоматически на шлюзе API, но требуют &lt;a href=&quot;https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html#multi-value-headers&quot;&gt;явной активации на ALB&lt;/a&gt; . Если вам нужно определить из вашего приложения, включены ли несколько значений заголовков, вы можете проверить</target>
        </trans-unit>
        <trans-unit id="f92a97ca58aec8af0f9ad6f871e4919d60b52eea" translate="yes" xml:space="preserve">
          <source>Note that binary responses aren&amp;rsquo;t sent if your response has a &amp;lsquo;Content-Type&amp;rsquo;
starting &amp;lsquo;text/&amp;rsquo;, &amp;lsquo;application/json&amp;rsquo; or &amp;lsquo;application/vnd.api+json&amp;rsquo; - this
is to support sending larger text responses. To support other content types
than the ones specified above, you can set</source>
          <target state="translated">Обратите внимание, что двоичные ответы не отправляются, если в вашем ответе есть Content-Type, начинающийся с text /, application / json или application / vnd.api + json - это необходимо для поддержки отправки более крупных текстовых ответов. Для поддержки других типов контента, кроме указанных выше, вы можете установить</target>
        </trans-unit>
        <trans-unit id="a9f056c0b208888f74045b0cacc406a8d7efc308" translate="yes" xml:space="preserve">
          <source>Python 3.5 to 3.8 supported.</source>
          <target state="translated">Поддерживаются Python 3.5-3.8.</target>
        </trans-unit>
        <trans-unit id="561b88e19de321ca62c7590bbb350765fb110905" translate="yes" xml:space="preserve">
          <source>README.rst</source>
          <target state="translated">README.rst</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">Правда</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="7c1736c5b99887f85d51cded65f41122a1702a4d" translate="yes" xml:space="preserve">
          <source>Use &lt;strong&gt;pip&lt;/strong&gt;:</source>
          <target state="translated">Использование &lt;strong&gt;пип&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="7a8f9ef5aa3f8c05e0056640945d311011e29775" translate="yes" xml:space="preserve">
          <source>Wrap a WSGI application in an AWS Lambda handler function for running on
API Gateway or an ALB.</source>
          <target state="translated">Оберните WSGI приложение в функцию обработчика AWS Lambda для работы на шлюзе API или ALB.</target>
        </trans-unit>
        <trans-unit id="99076649fbcb18bd9b89039036b53bc0778faacd" translate="yes" xml:space="preserve">
          <source>apgi_wsgi.multi_value_headers</source>
          <target state="translated">apgi_wsgi.multi_value_headers</target>
        </trans-unit>
        <trans-unit id="0f127b936db903642d3e50ec04e5c65931526969" translate="yes" xml:space="preserve">
          <source>apig_wsgi.context</source>
          <target state="translated">apig_wsgi.context</target>
        </trans-unit>
        <trans-unit id="e41c5ae96abf9978d60ed853cbffd646d91faac4" translate="yes" xml:space="preserve">
          <source>apig_wsgi.full_event</source>
          <target state="translated">apig_wsgi.full_event</target>
        </trans-unit>
        <trans-unit id="d3cb52d95454736c5f13edeac946a7f01b4e4293" translate="yes" xml:space="preserve">
          <source>apig_wsgi.request_context</source>
          <target state="translated">apig_wsgi.request_context</target>
        </trans-unit>
        <trans-unit id="7d1043473d55bfa90e8530d35801d4e381bc69f0" translate="yes" xml:space="preserve">
          <source>app</source>
          <target state="translated">приложение</target>
        </trans-unit>
        <trans-unit id="1bef8e9df5d96431d55f95b5770e548c545128f8" translate="yes" xml:space="preserve">
          <source>binary_support</source>
          <target state="translated">поддержка двоичных файлов</target>
        </trans-unit>
        <trans-unit id="a091886abcf3d916d2f71c29f89fb61902db87e8" translate="yes" xml:space="preserve">
          <source>directory in the repository. See the</source>
          <target state="translated">каталог в репозитории.См.</target>
        </trans-unit>
        <trans-unit id="ecbe4896553b391dd2249ad0199c487758d83479" translate="yes" xml:space="preserve">
          <source>example/</source>
          <target state="translated">пример/</target>
        </trans-unit>
        <trans-unit id="f23e3e7d0bb5fa7837bcb4777249849e28d2239a" translate="yes" xml:space="preserve">
          <source>if they are enabled and</source>
          <target state="translated">если они включены и</target>
        </trans-unit>
        <trans-unit id="8753d31caf1d7efe4654d993fa408e08e20d0aa7" translate="yes" xml:space="preserve">
          <source>in the &amp;lsquo;binary media types&amp;rsquo; configuration
on your Rest API. You will need to configure this through API Gateway directly,
CloudFormation, SAM, or whatever tool your project is using. Whilst API Gateway
supports a list of binary media types, using</source>
          <target state="translated">в конфигурации &quot;двоичные типы носителей&quot; в вашем Rest API. Вам нужно будет настроить это напрямую через API Gateway, CloudFormation, SAM или любой другой инструмент, который использует ваш проект. В то время как API Gateway поддерживает список двоичных типов мультимедиа, используя</target>
        </trans-unit>
        <trans-unit id="8dd5c2646a7ad8cce5d13e4854c736cbe3b4a072" translate="yes" xml:space="preserve">
          <source>is the best way to
configure this, since it is used to match the request &amp;lsquo;Accept&amp;rsquo; header as well,
which WSGI applications are likely to ignore.</source>
          <target state="translated">- лучший способ настроить это, поскольку он также используется для соответствия заголовку запроса Accept, который приложения WSGI, вероятно, проигнорируют.</target>
        </trans-unit>
        <trans-unit id="8ffea2f6d23c94ff777cc4f36a698f9d88728397" translate="yes" xml:space="preserve">
          <source>key in the
WSGI environ, which is</source>
          <target state="translated">Ключ к окружающей среде WSGI,которая является</target>
        </trans-unit>
        <trans-unit id="4d8adf2c9dfc334f14e1d4497119e5eacd164887" translate="yes" xml:space="preserve">
          <source>key, for example
from custom request authorizers, this will be available in the WSGI environ
at the key</source>
          <target state="translated">ключ,например,от пользовательских авторизаторов запросов,он будет доступен в среде WSGI на ключе</target>
        </trans-unit>
        <trans-unit id="6da151380253ca0840e54331e708a35202e09892" translate="yes" xml:space="preserve">
          <source>make_lambda_handler(app, binary_support=False, non_binary_content_type_prefixes=None)</source>
          <target state="translated">make_lambda_handler(app,binary_support=False,non_binary_content_type_prefixes=None)</target>
        </trans-unit>
        <trans-unit id="0af5904e0909d93ab720469f88d52e5b1e84647b" translate="yes" xml:space="preserve">
          <source>non_binary_content_type_prefixes</source>
          <target state="translated">non_binary_content_type_prefixes</target>
        </trans-unit>
        <trans-unit id="3800d55c69750967aafdc54ee978fd7e9d6eabb3" translate="yes" xml:space="preserve">
          <source>object.</source>
          <target state="translated">Объект.</target>
        </trans-unit>
        <trans-unit id="926877ba045a1fb315e715abcf1743769038a3c1" translate="yes" xml:space="preserve">
          <source>or Flask&amp;rsquo;s</source>
          <target state="translated">или Flask's</target>
        </trans-unit>
        <trans-unit id="e91ae44094e83f7449d28be33ff71baa8a7600e7" translate="yes" xml:space="preserve">
          <source>otherwise.</source>
          <target state="translated">Иначе.</target>
        </trans-unit>
        <trans-unit id="85898ce0567bfbb951fda5487883d767af63952f" translate="yes" xml:space="preserve">
          <source>requestContext</source>
          <target state="translated">requestContext</target>
        </trans-unit>
        <trans-unit id="f894a8db822952a016779cdce8f6ac5e7d360af2" translate="yes" xml:space="preserve">
          <source>should be a WSGI app, for example from Django&amp;rsquo;s</source>
          <target state="translated">должно быть приложение WSGI, например из Django</target>
        </trans-unit>
        <trans-unit id="1df4e46d2c9e3852466b8900cd2996aeaa74e6e1" translate="yes" xml:space="preserve">
          <source>there for guidance.</source>
          <target state="translated">там для руководства.</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">на</target>
        </trans-unit>
        <trans-unit id="d4afee9d55b8e56587dadaa7bde9e6cf6b84a068" translate="yes" xml:space="preserve">
          <source>to a list of content type prefixes of your choice.</source>
          <target state="translated">к списку префиксов типа контента по вашему выбору.</target>
        </trans-unit>
        <trans-unit id="491d41343a6a914bfa8b19169cde1c8086bdb8b7" translate="yes" xml:space="preserve">
          <source>wsgi.py</source>
          <target state="translated">wsgi.py</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
