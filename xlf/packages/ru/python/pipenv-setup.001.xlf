<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/pipenv-setup/">
    <body>
      <group id="pipenv-setup">
        <trans-unit id="c9bef75b7f9622a9d4bfe1f0f6c12fe82cf28768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pypa/sampleproject/blob/master/setup.py&quot;&gt;Template&lt;/a&gt; generation with
filled dependencies in the absence of a setup file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pypa/sampleproject/blob/master/setup.py&quot;&gt;Template&lt;/a&gt; generation with filled dependencies in the absence of a setup file.</target>
        </trans-unit>
        <trans-unit id="160908382e6b67cf4eb1e56403c386ac5c3a639b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipenv-setup&lt;/code&gt;
will perform a liquid sync using semantic versioning taken from &lt;code&gt;Pipfile&lt;/code&gt; (instead of
using frozen pinned versions from &lt;code&gt;Pipfile.lock&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;pipenv-setup&lt;/code&gt; will perform a liquid sync using semantic versioning taken from &lt;code&gt;Pipfile&lt;/code&gt; (instead of using frozen pinned versions from &lt;code&gt;Pipfile.lock&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="55ec36ddcc7261e86dcd9c2ecb7d1440c5cf9f36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipenv-setup&lt;/code&gt; will still figure things out:</source>
          <target state="translated">&lt;code&gt;pipenv-setup&lt;/code&gt; will still figure things out:</target>
        </trans-unit>
        <trans-unit id="b109daafde74160b751d0f0c831ee77e6adfc6c5" translate="yes" xml:space="preserve">
          <source>A beautiful python package development tool: sync dependencies in &lt;code&gt;Pipfile&lt;/code&gt; or &lt;code&gt;Pipfile.lock&lt;/code&gt; to &lt;code&gt;setup.py&lt;/code&gt;.</source>
          <target state="translated">A beautiful python package development tool: sync dependencies in &lt;code&gt;Pipfile&lt;/code&gt; or &lt;code&gt;Pipfile.lock&lt;/code&gt; to &lt;code&gt;setup.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b21823a4d459a7334bddbc26703d93ec9a4b39e5" translate="yes" xml:space="preserve">
          <source>And things will be where they should be:</source>
          <target state="translated">И все будет там,где должно быть:</target>
        </trans-unit>
        <trans-unit id="c095c876487243bf87662d1629fd92c9c8054c07" translate="yes" xml:space="preserve">
          <source>Beautiful pipenv flavored help</source>
          <target state="translated">Красивая ароматизированная помощь пипенв</target>
        </trans-unit>
        <trans-unit id="84f1bafcef8aa7948e262de2646c081c95dd5fcc" translate="yes" xml:space="preserve">
          <source>Because these resolve to an immutable pointer (e.g. - commit sha) in &lt;code&gt;setup.py&lt;/code&gt;, the
dependency will no longer match between &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;Pipfile&lt;/code&gt;.  However, &lt;code&gt;Pipfile.lock&lt;/code&gt;
will contain the same resolved pointer as &lt;code&gt;setup.py&lt;/code&gt;.</source>
          <target state="translated">Because these resolve to an immutable pointer (e.g. - commit sha) in &lt;code&gt;setup.py&lt;/code&gt; , the dependency will no longer match between &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;Pipfile&lt;/code&gt; . However, &lt;code&gt;Pipfile.lock&lt;/code&gt; will contain the same resolved pointer as &lt;code&gt;setup.py&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16d5552ec274f25f3fae6a585db38a3c34f38420" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;pipenv-setup check&lt;/code&gt; passes when the version &lt;code&gt;setup.py&lt;/code&gt; specifies is
&quot;compatible&quot; with &lt;code&gt;Pipfile&lt;/code&gt;, i.e. is a subset of it. For example, a Pipfile
specifying  &lt;code&gt;django~=1.1&lt;/code&gt; with &lt;code&gt;setup.py&lt;/code&gt; requiring &lt;code&gt;django==1.2&lt;/code&gt; is such a case.</source>
          <target state="translated">By default &lt;code&gt;pipenv-setup check&lt;/code&gt; passes when the version &lt;code&gt;setup.py&lt;/code&gt; specifies is &quot;compatible&quot; with &lt;code&gt;Pipfile&lt;/code&gt; , i.e. is a subset of it. For example, a Pipfile specifying &lt;code&gt;django~=1.1&lt;/code&gt; with &lt;code&gt;setup.py&lt;/code&gt; requiring &lt;code&gt;django==1.2&lt;/code&gt; is such a case.</target>
        </trans-unit>
        <trans-unit id="e6b55a5ccea2d38a1a739c92f0198e7b927405d9" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;pipenv-setup check&lt;/code&gt; compares the dependencies from &lt;code&gt;setup.py&lt;/code&gt; against
the dependencies listed in &lt;code&gt;Pipfile&lt;/code&gt;.  This works well for most cases, but there
are some exceptions that break this strategy, including (but not necessarily limited to):</source>
          <target state="translated">By default, &lt;code&gt;pipenv-setup check&lt;/code&gt; compares the dependencies from &lt;code&gt;setup.py&lt;/code&gt; against the dependencies listed in &lt;code&gt;Pipfile&lt;/code&gt; . This works well for most cases, but there are some exceptions that break this strategy, including (but not necessarily limited to):</target>
        </trans-unit>
        <trans-unit id="f6e603546da0a1c1e290dd0e16f4db1109caedd8" translate="yes" xml:space="preserve">
          <source>Checks Only</source>
          <target state="translated">Только проверки</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Вклад</target>
        </trans-unit>
        <trans-unit id="6ae00374509ab2239b221aab5e49c0fa830f5b95" translate="yes" xml:space="preserve">
          <source>Create a command line entry point &lt;code&gt;pipenv-setup&lt;/code&gt;, and add &lt;code&gt;pipenv-setup&lt;/code&gt; as a &lt;code&gt;dev&lt;/code&gt;
package in &lt;code&gt;Pipfile&lt;/code&gt;:</source>
          <target state="translated">Create a command line entry point &lt;code&gt;pipenv-setup&lt;/code&gt; , and add &lt;code&gt;pipenv-setup&lt;/code&gt; as a &lt;code&gt;dev&lt;/code&gt; package in &lt;code&gt;Pipfile&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d0b2cc3a787f1276ab68ffa3ebd39efe03904d3c" translate="yes" xml:space="preserve">
          <source>Default package in pipfile missing in &lt;code&gt;install_requires&lt;/code&gt; or &lt;code&gt;dependency_links&lt;/code&gt; in setup.py</source>
          <target state="translated">Default package in pipfile missing in &lt;code&gt;install_requires&lt;/code&gt; or &lt;code&gt;dependency_links&lt;/code&gt; in setup.py</target>
        </trans-unit>
        <trans-unit id="2e4ccc244461fd2a12825ef96a60da2329e2ce3c" translate="yes" xml:space="preserve">
          <source>Example output:</source>
          <target state="translated">Пример вывода:</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Особенности</target>
        </trans-unit>
        <trans-unit id="7e353179530dcfa2eb5d9ffe461f9a4def1af857" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to &lt;code&gt;pipenv-setup&lt;/code&gt;, see &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt;</source>
          <target state="translated">If you'd like to contribute to &lt;code&gt;pipenv-setup&lt;/code&gt; , see &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="2a2550c7e6a34e8d58f22519fb24eeb94bb5d831" translate="yes" xml:space="preserve">
          <source>Never need again to change dependencies manually in &lt;code&gt;setup.py&lt;/code&gt;, and enjoy the same
dependency locking or semantic versioning.</source>
          <target state="translated">Never need again to change dependencies manually in &lt;code&gt;setup.py&lt;/code&gt; , and enjoy the same dependency locking or semantic versioning.</target>
        </trans-unit>
        <trans-unit id="22cf987e889e10ed6ffcc3890f2a05f46c811501" translate="yes" xml:space="preserve">
          <source>Note: by default, &lt;code&gt;pipenv-setup&lt;/code&gt; syncs lockfile instead of pipfile</source>
          <target state="translated">Note: by default, &lt;code&gt;pipenv-setup&lt;/code&gt; syncs lockfile instead of pipfile</target>
        </trans-unit>
        <trans-unit id="4ffbce8e3782fbecd2824920677f14f8590d21b8" translate="yes" xml:space="preserve">
          <source>Or just check whether &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;Pipfile&lt;/code&gt; are consistent and sync dependency when
necessary.</source>
          <target state="translated">Or just check whether &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;Pipfile&lt;/code&gt; are consistent and sync dependency when necessary.</target>
        </trans-unit>
        <trans-unit id="1299f517d279047fd22cdcbf4bd52aa5a463509a" translate="yes" xml:space="preserve">
          <source>Package version requirements in &lt;code&gt;dependency_links&lt;/code&gt; in setup.py that differs from Pipfile</source>
          <target state="translated">Package version requirements in &lt;code&gt;dependency_links&lt;/code&gt; in setup.py that differs from Pipfile</target>
        </trans-unit>
        <trans-unit id="888f051db37b4915990dfde9ab1d282e57ddfddb" translate="yes" xml:space="preserve">
          <source>Package version requirements in &lt;code&gt;install_requires&lt;/code&gt; in setup.py that potentially violates Pipfile</source>
          <target state="translated">Package version requirements in &lt;code&gt;install_requires&lt;/code&gt; in setup.py that potentially violates Pipfile</target>
        </trans-unit>
        <trans-unit id="80e81e3cc0a1bdd8893cd47957186f283760b478" translate="yes" xml:space="preserve">
          <source>Pipenv-Setup</source>
          <target state="translated">Pipenv-Setup</target>
        </trans-unit>
        <trans-unit id="d10590c360071788b2253d4028abab301b1bb98e" translate="yes" xml:space="preserve">
          <source>Provide &lt;code&gt;--pipfile&lt;/code&gt; flag to sync &lt;code&gt;Pipfile&lt;/code&gt; instead of &lt;code&gt;Pipfile.lock&lt;/code&gt;.</source>
          <target state="translated">Provide &lt;code&gt;--pipfile&lt;/code&gt; flag to sync &lt;code&gt;Pipfile&lt;/code&gt; instead of &lt;code&gt;Pipfile.lock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d9a8d86b459c8e589b318bb055b044d3189c69c" translate="yes" xml:space="preserve">
          <source>Provide &lt;code&gt;--strict&lt;/code&gt; to allow only identical requirements; &lt;em&gt;i.e.&lt;/em&gt; for &lt;code&gt;Pipfile&lt;/code&gt;'s
&lt;code&gt;django~=1.1&lt;/code&gt;, &lt;code&gt;setup.py&lt;/code&gt; must require &lt;code&gt;django&amp;gt;=1.1,&amp;lt;2.0&lt;/code&gt;</source>
          <target state="translated">Provide &lt;code&gt;--strict&lt;/code&gt; to allow only identical requirements; &lt;em&gt;i.e.&lt;/em&gt; for &lt;code&gt;Pipfile&lt;/code&gt; 's &lt;code&gt;django~=1.1&lt;/code&gt; , &lt;code&gt;setup.py&lt;/code&gt; must require &lt;code&gt;django&amp;gt;=1.1,&amp;lt;2.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3565525f43d3d729674a084a87bc9d4b9446214d" translate="yes" xml:space="preserve">
          <source>Sync &lt;code&gt;Pipfile&lt;/code&gt; vs. &lt;code&gt;Pipfile.lock&lt;/code&gt;</source>
          <target state="translated">Sync &lt;code&gt;Pipfile&lt;/code&gt; vs. &lt;code&gt;Pipfile.lock&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3ea51cfc935bd5d175e10014f8b6fee66f03b2f" translate="yes" xml:space="preserve">
          <source>Sync to &lt;code&gt;setup.py&lt;/code&gt;</source>
          <target state="translated">Sync to &lt;code&gt;setup.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e33a15eb5ba65db209f669b067aa98441c39f279" translate="yes" xml:space="preserve">
          <source>VCS dependencies with a mutable &lt;code&gt;ref&lt;/code&gt; (e.g. - git branch name instead of a tag or commit sha)</source>
          <target state="translated">VCS dependencies with a mutable &lt;code&gt;ref&lt;/code&gt; (e.g. - git branch name instead of a tag or commit sha)</target>
        </trans-unit>
        <trans-unit id="2d295ab1765ce1336157f9ce44a164f834d16bb6" translate="yes" xml:space="preserve">
          <source>checks four items</source>
          <target state="translated">чеки четырёх предметов</target>
        </trans-unit>
        <trans-unit id="5739aa3a37af1b9c2833d8789c4d9fb0c6fdaabd" translate="yes" xml:space="preserve">
          <source>exits with non-zero code when conflict found (can be used in travis-ci)</source>
          <target state="translated">выходит с ненулевым кодом при обнаружении конфликта (может быть использован в travis-ci)</target>
        </trans-unit>
        <trans-unit id="10eac2b7dfa2a8a3c9739bcfab8861b7b92d985b" translate="yes" xml:space="preserve">
          <source>here is a somewhat extreme example:</source>
          <target state="translated">вот несколько экстремальный пример:</target>
        </trans-unit>
        <trans-unit id="4285a21e2c9596b97420aca6be50d6a9bd5c7cd8" translate="yes" xml:space="preserve">
          <source>local package in default pipfile packages</source>
          <target state="translated">локальный пакет в пакетах типа pipfile по умолчанию</target>
        </trans-unit>
        <trans-unit id="4dd9088ed3fab06cba6dee2c6d3f4d5a6afea6d1" translate="yes" xml:space="preserve">
          <source>produce beautiful &lt;a href=&quot;https://github.com/psf/black&quot;&gt;Blackened&lt;/a&gt;&lt;code&gt;setup.py&lt;/code&gt; file</source>
          <target state="translated">produce beautiful &lt;a href=&quot;https://github.com/psf/black&quot;&gt;Blackened&lt;/a&gt; &lt;code&gt;setup.py&lt;/code&gt; file</target>
        </trans-unit>
        <trans-unit id="10036652badc3c4fd594f8961e040dad3289b985" translate="yes" xml:space="preserve">
          <source>provide &lt;code&gt;--dev&lt;/code&gt; flag to sync development packages with &lt;code&gt;extras_require&lt;/code&gt;:</source>
          <target state="translated">provide &lt;code&gt;--dev&lt;/code&gt; flag to sync development packages with &lt;code&gt;extras_require&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cf9a12bbee9a79e6619770c139d78700290114dd" translate="yes" xml:space="preserve">
          <source>provide &lt;code&gt;--ignore-local&lt;/code&gt; flag to allow local packages in pipfile</source>
          <target state="translated">provide &lt;code&gt;--ignore-local&lt;/code&gt; flag to allow local packages in pipfile</target>
        </trans-unit>
        <trans-unit id="39928cbdfcd51873544075a6b9c4bfcab682b453" translate="yes" xml:space="preserve">
          <source>provide &lt;code&gt;--lockfile&lt;/code&gt; flag to check &lt;code&gt;setup.py&lt;/code&gt; against &lt;code&gt;Pipfile.lock&lt;/code&gt; instead of &lt;code&gt;Pipfile&lt;/code&gt;</source>
          <target state="translated">provide &lt;code&gt;--lockfile&lt;/code&gt; flag to check &lt;code&gt;setup.py&lt;/code&gt; against &lt;code&gt;Pipfile.lock&lt;/code&gt; instead of &lt;code&gt;Pipfile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="027a06dd1df832994d0a9cb7f51dc97207ca899f" translate="yes" xml:space="preserve">
          <source>provide &lt;code&gt;--strict&lt;/code&gt; flag to only pass identical version requirements</source>
          <target state="translated">provide &lt;code&gt;--strict&lt;/code&gt; flag to only pass identical version requirements</target>
        </trans-unit>
        <trans-unit id="01d013d322acfbae4f4fddb0330f1773112255c5" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;$ pipenv-setup check&lt;/code&gt;</source>
          <target state="translated">run &lt;code&gt;$ pipenv-setup check&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f07406e20faf6c779d8e505446cc9f152724f15" translate="yes" xml:space="preserve">
          <source>supports assorted package configuration. You can have a pipfile as ugly as you want:</source>
          <target state="translated">поддерживает различные конфигурации пакетов.Вы можете получить такой уродливый профиль,какой захотите:</target>
        </trans-unit>
        <trans-unit id="f0096ee03a087b9f7cfcf4385a652e3c752dde29" translate="yes" xml:space="preserve">
          <source>sync Pipfile/Pipfile.lock to setup.py</source>
          <target state="translated">синхронизировать Pipfile/Pipfile.lock с setup.py.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
