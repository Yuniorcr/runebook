<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/janus-cloud/">
    <body>
      <group id="janus-cloud">
        <trans-unit id="23194bf7adeb980f1ff2388edd705853833046a8" translate="yes" xml:space="preserve">
          <source>1 Why Janus-cloud</source>
          <target state="translated">1 Почему Янус-Клауд</target>
        </trans-unit>
        <trans-unit id="dc18adf10bd09f177f865dadb4347f8484ee643c" translate="yes" xml:space="preserve">
          <source>2 Features</source>
          <target state="translated">2 особенности</target>
        </trans-unit>
        <trans-unit id="7496036e0ea1606d2ffbf9223327da0defd5f384" translate="yes" xml:space="preserve">
          <source>3 Components</source>
          <target state="translated">3 Компоненты</target>
        </trans-unit>
        <trans-unit id="95a9a0c07335bc9d3b8cf575674c9323ee4b16ac" translate="yes" xml:space="preserve">
          <source>4 Plugins of Janus-proxy</source>
          <target state="translated">4 Плагины Янус-прокси</target>
        </trans-unit>
        <trans-unit id="a1d8744328abfc2b1136e38b55cac4fe233a5084" translate="yes" xml:space="preserve">
          <source>5 Topology</source>
          <target state="translated">5 Топология</target>
        </trans-unit>
        <trans-unit id="07ab28408027adfb3c5b4a5082b2e949c49835a9" translate="yes" xml:space="preserve">
          <source>6 Installation</source>
          <target state="translated">6 Установка</target>
        </trans-unit>
        <trans-unit id="2eb0881f3547cb3f190daa847a88859de0380b55" translate="yes" xml:space="preserve">
          <source>7 Configure and Start</source>
          <target state="translated">7 Настройка и запуск</target>
        </trans-unit>
        <trans-unit id="bf0492a84bc352227fde5b688b883113eacbe326" translate="yes" xml:space="preserve">
          <source>8 Requirements for the backend Janus server</source>
          <target state="translated">8 Требования к внутреннему серверу Janus</target>
        </trans-unit>
        <trans-unit id="af24374bb40fa17421bf9b291d3f82eca139f83e" translate="yes" xml:space="preserve">
          <source>9 Directory structure of project source</source>
          <target state="translated">9 Каталожная структура источника проекта</target>
        </trans-unit>
        <trans-unit id="4be71d5bc5f63658530bfc55ef2d1749da8c59e9" translate="yes" xml:space="preserve">
          <source>Add support for VP9 and H.264 profile negotiation for videoroom and echotest plugin</source>
          <target state="translated">Добавлена поддержка переговоров по профилю VP9 и H.264 для плагина видеомагнитофона и эхотеста</target>
        </trans-unit>
        <trans-unit id="a7a7af61e1056dceb2fcd3cbbe976ecb69ee449d" translate="yes" xml:space="preserve">
          <source>Added VideoRoom option to only allow admins to change the recording state</source>
          <target state="translated">Добавлена опция VideoRoom,позволяющая только администраторам изменять состояние записи</target>
        </trans-unit>
        <trans-unit id="fd24b09c038412fe25fa4b8929b6aa56f9c8b6d7" translate="yes" xml:space="preserve">
          <source>Added support for multichannel Opus audio (surround) for videoroom</source>
          <target state="translated">Добавлена поддержка многоканального Opus аудио (surround)для видеомагнитофона</target>
        </trans-unit>
        <trans-unit id="3bfa88b4d64927d2e9acd68185eb251d2fa0ace9" translate="yes" xml:space="preserve">
          <source>All notable changes to this project will be documented in this file.</source>
          <target state="translated">Все заметные изменения в этом проекте будут документированы в этом файле.</target>
        </trans-unit>
        <trans-unit id="6b35bfeccae8340912d4137d287e493b4249a08d" translate="yes" xml:space="preserve">
          <source>Before installation, the following requirements must be satisfied.</source>
          <target state="translated">Перед установкой необходимо выполнить следующие требования.</target>
        </trans-unit>
        <trans-unit id="546f218e8529edfe22b87b1951a727e211c68194" translate="yes" xml:space="preserve">
          <source>By now, Janus-proxy / Janus-sentinel only support corresponding with the backend Janus server by WebSocket, not support other transport.</source>
          <target state="translated">К настоящему времени,Janus-proxy/Janus-sentinel поддерживает только соответствующий бэкэнду сервер Janus через WebSocket,не поддерживает другой транспорт.</target>
        </trans-unit>
        <trans-unit id="b7674fa4e946cd1282403f3c17a51451a98d995d" translate="yes" xml:space="preserve">
          <source>Calculate the workload of the Janus server</source>
          <target state="translated">Рассчитать рабочую нагрузку сервера Janus</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Блог изменений</target>
        </trans-unit>
        <trans-unit id="4e684aa35816b578efc02729254899c88a1ca469" translate="yes" xml:space="preserve">
          <source>Communicate with the backend Janus server by WebSocket</source>
          <target state="translated">Связь с внутренним сервером Janus через WebSocket.</target>
        </trans-unit>
        <trans-unit id="3cb88ec70a66014b480a477c7ec16dbd9103dfd5" translate="yes" xml:space="preserve">
          <source>Consistent API with the Janus server (until v0.9.2), which is compatible with the original client of the Janus server</source>
          <target state="translated">Соответствующий API с сервером Janus (до версии 0.9.2),совместимый с оригинальным клиентом сервера Janus.</target>
        </trans-unit>
        <trans-unit id="9e06611901ec0313936955642e9e89b68d02ef41" translate="yes" xml:space="preserve">
          <source>Edit the configuration file of Janus-proxy, then type the following commands to start.</source>
          <target state="translated">Отредактируйте конфигурационный файл Janus-proxy,затем введите следующие команды для запуска.</target>
        </trans-unit>
        <trans-unit id="86b230fe801944ced1a4112e5e50d9e31e36f93f" translate="yes" xml:space="preserve">
          <source>Edit the configuration file of Janus-sentinel, then type the following commands to start.</source>
          <target state="translated">Отредактируйте конфигурационный файл Janus-sentinel,затем введите следующие команды для запуска.</target>
        </trans-unit>
        <trans-unit id="b6e42cf72291c96cd0e1ecb0af311a6c0b3a8334" translate="yes" xml:space="preserve">
          <source>Enable / disable recording while conference is in progress for videoroom</source>
          <target state="translated">Включение/выключение записи во время проведения конференции для видеомагнитофона</target>
        </trans-unit>
        <trans-unit id="a6c3a5654b0327a673787cc32a9c96652bfe3947" translate="yes" xml:space="preserve">
          <source>For developer, who want to debug the Janus-cloud, and install it for develop mode:</source>
          <target state="translated">Для разработчика,который хочет отладить Janus-cloud и установить его в режиме разработки:</target>
        </trans-unit>
        <trans-unit id="d0949e4f7904bf5ab157fb8954dfc648753fcceb" translate="yes" xml:space="preserve">
          <source>Install from PyPi</source>
          <target state="translated">Установка из PyPi</target>
        </trans-unit>
        <trans-unit id="613dd18f7e7415ce2c81dc9135790c3041d211be" translate="yes" xml:space="preserve">
          <source>Install from source</source>
          <target state="translated">Установка из источника</target>
        </trans-unit>
        <trans-unit id="f9f22e45430e8d762e7cd4989e2f5da2aea25642" translate="yes" xml:space="preserve">
          <source>Its APIs is compatible with the videocall plugin of Janus-gateway util v0.9.2.</source>
          <target state="translated">Его API совместимы с плагином видеозвонка Janus-gateway util v0.9.2.</target>
        </trans-unit>
        <trans-unit id="f2c774a8b17b0a37164977ecba78cdd70bfaa895" translate="yes" xml:space="preserve">
          <source>Its APIs is compatible with the videoroom plugin of Janus-gateway util v0.9.5.</source>
          <target state="translated">Его API совместимы с плагином видеомагнитофона Janus-gateway util v0.9.5.</target>
        </trans-unit>
        <trans-unit id="e5fb55623ca840e22d6a35d3a1bd376c2b029ab1" translate="yes" xml:space="preserve">
          <source>Janus is an excellent WebRTC server, simple and well-structured. Its pluggable design and sophisticated API is impressive and amazing. But it also comes with some disadvantage.
First, Janus is design to be a standalone server, which cannot be scale to support the huge RTC workload. But in the cloud-based environment, scalability is essential. With the help of Janus-cloud, engineers can easily build a large and scalable cluster system of WebRTC server.
Second, Janus processes the WebRTC signalling, as well as the media data. But in the real communication world, signalling and media are usually divided into two plane, so that more flexibility can be provided. Janus-cloud fulfills this requirement by handling the signalling only and leaving media to Janus-server. Janus-cloud is developed by Python3 language which is more suitable to deal with the signalling, in the other hand, C language, which is used by Janus server, is more suitable to transmit media data in an efficient way .</source>
          <target state="translated">Janus-отличный сервер WebRTC,простой и хорошо структурированный.Его подключаемый дизайн и сложный API впечатляют и удивляют.Но он также имеет некоторые недостатки.Во-первых,Janus спроектирован как автономный сервер,который не может быть масштабирован для поддержки огромной нагрузки RTC.Но в облачной среде масштабируемость очень важна.С помощью облака Janus инженеры могут легко построить большую и масштабируемую кластерную систему сервера WebRTC.Во-вторых,Janus обрабатывает сигнализацию WebRTC,а также медиаданные.Но в реальном мире коммуникации сигнализация и медиа данные обычно делятся на две плоскости,так что можно обеспечить большую гибкость.Янус-облако выполняет это требование,обрабатывая только сигнализацию и оставляя носители на сервере Янус.Янус-облако разработано на языке Python3,который больше подходит для обработки сигнализации,с другой стороны,язык C,который используется сервером Janus,больше подходит для эффективной передачи мультимедийных данных.</target>
        </trans-unit>
        <trans-unit id="fed1fe19451ff72552de86a1b08b972d5550dc5e" translate="yes" xml:space="preserve">
          <source>Janus-cloud</source>
          <target state="translated">Янус-облако</target>
        </trans-unit>
        <trans-unit id="f5589755f48ff049c4f45276d983e407c922413a" translate="yes" xml:space="preserve">
          <source>Janus-cloud has two main components, Janus-proxy and Janus-sentinel.</source>
          <target state="translated">Janus-cloud состоит из двух основных компонентов,Janus-proxy и Janus-sentinel.</target>
        </trans-unit>
        <trans-unit id="d32fc3795642df7434e8ecb9b2811cc9efc2f515" translate="yes" xml:space="preserve">
          <source>Janus-cloud is a cluster solution for Janus WebRTC server, by API proxy approach</source>
          <target state="translated">Janus-cloud-кластерное решение для сервера Janus WebRTC,с использованием API-прокси подхода.</target>
        </trans-unit>
        <trans-unit id="ffd75b5c9406c6852b86ccbdf179f8684057a41b" translate="yes" xml:space="preserve">
          <source>Janus-cloud is an JANUS API proxy to construct the Janus WebRTC server cluster, which is based on Python3 so that it can be deployed on any platform. A Back-to-Back API proxy would be deployed between the client and the original Janus servers. In one hand, the WebRTC client communicates with Janus-cloud proxy through Janus' original  API, just like with the real Janus server. In the other hand, Janus-cloud proxy would forwards the requests to the back-end Janus server in the cluster on behave of the client. Janus-cloud proxy is only responsible for the API (signalling) processing, while media streams is still left to Janus server to relay, so that the clients would establish the PeerConnections with the back-end Janus server directly, without Janus-cloud involvement. In this case, Janus-cloud proxy can be considered as a WebRTC signal server, while the original Janus server would be downgraded to work as a WebRTC media server.</source>
          <target state="translated">Janus-cloud-это JANUS API прокси для построения серверного кластера Janus WebRTC,который базируется на Python3,чтобы его можно было развернуть на любой платформе.Back-to-Back API прокси будет установлен между клиентом и оригинальными серверами Janus.С одной стороны,клиент WebRTC связывается с облачным прокси-сервером Janus через оригинальный API Janus,так же как и с реальным сервером Janus.С другой стороны,облачный прокси-сервер Janus переадресовывал запросы на внутренний сервер Janus в кластере при поведении клиента.Янус-облачный прокси отвечает только за обработку API (сигнализации),в то время как медиапотоки все еще остаются на сервере Janus для пересылки,так что клиенты устанавливали бы Пиринговые соединения с внутренним сервером Janus напрямую,без участия Януса-облака.В этом случае прокси-сервер Янус-облако можно рассматривать как сигнальный сервер WebRTC,в то время как исходный сервер Янус будет понижен до уровня медиа-сервера WebRTC.</target>
        </trans-unit>
        <trans-unit id="f359acba03f43f4bdb24b3c719ee63b0d6c33191" translate="yes" xml:space="preserve">
          <source>Janus-cloud supports python 3.5 and up. It's strongly recommended to install Janus-cloud in a python virtual environment, like &quot;venv&quot;.</source>
          <target state="translated">Янус-облако поддерживает питон 3.5 и выше.Настоятельно рекомендуется устанавливать Янус-Клауд в виртуальной среде питона,например,&quot;венв&quot;.</target>
        </trans-unit>
        <trans-unit id="e7ead6e7558aa2af82ae7fe36341684d4056accb" translate="yes" xml:space="preserve">
          <source>Janus-proxy</source>
          <target state="translated">Янус-прокси</target>
        </trans-unit>
        <trans-unit id="0bedea0f1b557a10fda42863807dd24dc4183ca6" translate="yes" xml:space="preserve">
          <source>Janus-proxy is composed of many plugins, and the business logic of Janus-proxy is implemented by these plugins. The following plugins are provided within Janus-proxy by now.</source>
          <target state="translated">Janus-proxy состоит из множества плагинов,и бизнес-логика Janus-proxy реализуется этими плагинами.Следующие плагины уже предоставлены внутри Janus-proxy.</target>
        </trans-unit>
        <trans-unit id="fc53c7b441da04ebfbadc0bb7d321001a76e43c7" translate="yes" xml:space="preserve">
          <source>Janus-proxy is often deployed on a standalone machine between WebRTC client(like Browser) and Janus server. All signal  from WebRTC client would be received by Janus-proxy first , then relayed to one of the backend Janus servers.</source>
          <target state="translated">Янус-прокси часто устанавливается на автономной машине между клиентом WebRTC (например,Браузером)и сервером Janus.Весь сигнал с клиента WebRTC сначала поступает на Janus-proxy,а затем ретранслируется на один из внутренних серверов Janus.</target>
        </trans-unit>
        <trans-unit id="621b96dfe72bb25b72d9e7e064c02317a2e0fff7" translate="yes" xml:space="preserve">
          <source>Janus-proxy is responsible for signal handling, which communicates with the WebRTC client and relay the signal from client to the backend Janus servers. It conceals the detail of the backend Janus server cluster and output the same interface with the original Janus server. Janus-proxy is usually running on a standalone machine which is between the WebRTC client and the backend Janus servers. The WebRTC client interact with Janus-proxy for signal, but transfer to/from the real Janus Server for media. Janus-proxy has the following features/limitation:</source>
          <target state="translated">Janus-proxy отвечает за обработку сигналов,которая связывается с клиентом WebRTC и передает сигнал от клиента к внутренним серверам Janus.Он скрывает детали внутреннего кластера серверов Janus и выводит тот же самый интерфейс с оригинальным сервером Janus.Janus-proxy обычно работает на автономной машине,которая находится между клиентом WebRTC и внутренними серверами Janus.Клиент WebRTC взаимодействует с Янус-прокси для получения сигнала,но передает на/с настоящего сервера Янус для мультимедиа.Янус-прокси имеет следующие возможности/ограничения:</target>
        </trans-unit>
        <trans-unit id="de94395e4dcdc8ca4c1826746908c78bc8b954a5" translate="yes" xml:space="preserve">
          <source>Janus-proxy support api_secret authorization</source>
          <target state="translated">Янус-прокси поддерживает авторизацию api_secret</target>
        </trans-unit>
        <trans-unit id="000db7e4745d74f0ce05afaa3c7acd747f58cb9e" translate="yes" xml:space="preserve">
          <source>Janus-sentinel</source>
          <target state="translated">Janus-sentinel</target>
        </trans-unit>
        <trans-unit id="691e7afd8827734587439b2a7f69e465c3b1d885" translate="yes" xml:space="preserve">
          <source>Janus-sentinel is often deployed along with the Janus server on the same machine. Janus-sentinel keep Janus process running and monitor its status, then report to Janus-proxy at intervals.</source>
          <target state="translated">Janus-sentinel часто устанавливается вместе с сервером Janus на одной машине.Janus-sentinel поддерживает процесс Janus в рабочем состоянии и отслеживает его состояние,а затем через определенные промежутки времени отчитывается перед Janus-proxy.</target>
        </trans-unit>
        <trans-unit id="33ab00dc15f3cc75f2d8e85d353cf08ee0330d11" translate="yes" xml:space="preserve">
          <source>Janus-sentinel is responsible to care for the Janus server, normally, it runs at the same (virtual) machine with the Janus server. it has the following capabilities:</source>
          <target state="translated">Janus-sentinel отвечает за заботу о сервере Janus,обычно он работает на одной (виртуальной)машине с сервером Janus.он имеет следующие возможности:</target>
        </trans-unit>
        <trans-unit id="fa4893ce72dd265afcbb40373e95ad90ad9dacc4" translate="yes" xml:space="preserve">
          <source>Janus-sentinel support admin_secret for sending admin API request</source>
          <target state="translated">Janus-sentinel поддерживает admin_secret для отправки запроса на API администратора</target>
        </trans-unit>
        <trans-unit id="db8842520ac6d1e672e56b2942d3cbaf0674229c" translate="yes" xml:space="preserve">
          <source>Keep It Simple, and Stupid</source>
          <target state="translated">Держите все просто и глупо.</target>
        </trans-unit>
        <trans-unit id="6ad306f26ea1f1e6f1b4447c69e610f4ae97351b" translate="yes" xml:space="preserve">
          <source>Monitor the status of the Janus server, and report it to Janus-proxy through HTTP</source>
          <target state="translated">Следите за состоянием сервера Janus и сообщайте о нем Янус-прокси по HTTP.</target>
        </trans-unit>
        <trans-unit id="51c2cbd9aa575946d7dbf6299fa2dfc6761724d8" translate="yes" xml:space="preserve">
          <source>Note: the process of the Janus server can be started and maintained by the other system tools or system administrator manual, instead of Janus-sentinel. In this case, Janus-sentinel is only responsible for monitoring Janus server's status by its WebSocket API. But this approach is not a good idea.</source>
          <target state="translated">Замечание:процесс работы сервера Janus может быть запущен и поддерживаться другими системными инструментами или руководством системного администратора,а не Janus-sentinel.В этом случае Janus-sentinel отвечает только за мониторинг состояния сервера Janus с помощью своего API WebSocket.Но такой подход не является хорошей идеей.</target>
        </trans-unit>
        <trans-unit id="aa38ad8efd658f7c9ffb75b50f1555fc4c6024db" translate="yes" xml:space="preserve">
          <source>Only provide the WebSocket(s) API, not provide RESTful, RabbitMQ, MQTT, Nanomsg and UnixSockets like Janus</source>
          <target state="translated">Предоставлять только WebSocket(s)API,не предоставлять RESTful,RabbitMQ,MQTT,Nanomsg и UnixSockets как Janus.</target>
        </trans-unit>
        <trans-unit id="85efcc6390102f6bcdb1a7a67537e8875c9e9f87" translate="yes" xml:space="preserve">
          <source>Pluggable, support the new features through developing the new plugin</source>
          <target state="translated">Подключаемый,поддерживает новые функции через разработку нового плагина</target>
        </trans-unit>
        <trans-unit id="ed5eb9491d5f8a2b73f639c8a1b9f9064aeacaed" translate="yes" xml:space="preserve">
          <source>Pluggable. Its business functionality is implemented by the various plugins</source>
          <target state="translated">Подключаемый.Его бизнес-функционал реализован с помощью различных плагинов</target>
        </trans-unit>
        <trans-unit id="e4b9eac34cf85f155cf34748d6e80531d30ee3d4" translate="yes" xml:space="preserve">
          <source>Python &amp;gt;= 3.5</source>
          <target state="translated">Python&amp;gt; = 3.5</target>
        </trans-unit>
        <trans-unit id="e6bb8859a2f82dc2eb2920b0c520b16469ee8f8a" translate="yes" xml:space="preserve">
          <source>Scalable, Janus media servers can be added/removed to/from the cluster dynamically</source>
          <target state="translated">Масштабируемые медиа-серверы Janus могут быть динамически добавлены/удалены в/из кластера.</target>
        </trans-unit>
        <trans-unit id="3f3a3f8425806efc02879be0b9a0df716236a0f8" translate="yes" xml:space="preserve">
          <source>Scalable. The backend Janus server can be added/removed to/from Janus-proxy dynamically</source>
          <target state="translated">Масштабируемый.Бэкэнд-сервер Janus может быть динамически добавлен/удален в/из Janus-proxy.</target>
        </trans-unit>
        <trans-unit id="8b2388feb3a0d592dc4c0a87fe3fe13c4ae8ebfb" translate="yes" xml:space="preserve">
          <source>Some resource files, like sample configuration(with explanations), html test scripts, and etc, are shipped within the project source.
After installation, these resource would be installed under &lt;strong&gt;&amp;lt;sys.prefix&amp;gt;/opt/janus-cloud&lt;/strong&gt; where &amp;lt;sys.prefix&amp;gt; is the root directory of your filesystem. or the the root directory of virtual environment if install in a virtual environment.</source>
          <target state="translated">Некоторые файлы ресурсов, такие как образец конфигурации (с пояснениями), тестовые сценарии html и т. Д., Поставляются с исходным кодом проекта. После установки этот ресурс будет установлен в &lt;strong&gt;&amp;lt;sys.prefix&amp;gt; / opt / janus-cloud,&lt;/strong&gt; где &amp;lt;sys.prefix&amp;gt; - корневой каталог вашей файловой системы. или корневой каталог виртуальной среды при установке в виртуальной среде.</target>
        </trans-unit>
        <trans-unit id="3a2d617d400862e5208f80810848194503222204" translate="yes" xml:space="preserve">
          <source>Supervise the process of the Janus server, and keep it running</source>
          <target state="translated">Наблюдать за процессом работы сервера Янус и поддерживать его в рабочем состоянии.</target>
        </trans-unit>
        <trans-unit id="638ad8e7307d8226e233ded56c0ba701cb74785c" translate="yes" xml:space="preserve">
          <source>Support Janus media service self-register, service monitor, circuit breaker</source>
          <target state="translated">Поддержка Янус СМИ службы саморегистрации,сервисный монитор,автоматический выключатель</target>
        </trans-unit>
        <trans-unit id="e073de32adcfb72f0d02d7f99a6735df45e35dbf" translate="yes" xml:space="preserve">
          <source>Support RESTful admin interface</source>
          <target state="translated">Поддержка RESTful интерфейс администратора</target>
        </trans-unit>
        <trans-unit id="08c952bff6e4925b2555c8a49aa23d68e7fc3368" translate="yes" xml:space="preserve">
          <source>Support multi algorithm to choose which backend server to relay signal</source>
          <target state="translated">Поддержка нескольких алгоритмов,чтобы выбрать,какой внутренний сервер для ретрансляции сигнала</target>
        </trans-unit>
        <trans-unit id="9664debc06de13e05160b5547727478f15993848" translate="yes" xml:space="preserve">
          <source>Support post the status/workload statistic to multi HTTP URL</source>
          <target state="translated">Поддержка пост статус/статистика рабочей загрузки к нескольким HTTP URL</target>
        </trans-unit>
        <trans-unit id="ab953b7d4ecf8fa377f63a14bb449d890dd0cf4a" translate="yes" xml:space="preserve">
          <source>The APIs of Videoroom, Videocall, P2pcall is compatible with Janus-gateway of v0.9.2</source>
          <target state="translated">API Videoroom,Videocall,P2pcall совместимы с Janus-gateway версии 0.9.2.</target>
        </trans-unit>
        <trans-unit id="325052c239093f44ec7b528cabd07953d2b168ae" translate="yes" xml:space="preserve">
          <source>The structure of Janus-cloud would be similar with the below topology.</source>
          <target state="translated">Структура Янусового облака была бы аналогична нижеприведенной топологии.</target>
        </trans-unit>
        <trans-unit id="b32bb89fa947270f5232a126844f11bc035ae4c2" translate="yes" xml:space="preserve">
          <source>This is a plugin implementing a videoconferencing SFU, just like videoroom plugin of the Janus server. It tries to keep almost the same API with the videoroom plugin of Janus server, and scale it out by distributing different publishers to different backend Janus server, so that Janus-proxy can support more publishers in one videoconferencing room than single Janus server. Contrast to the videoroom plugin of Janus server, there are some limitations below on this plugin to simplify the code.</source>
          <target state="translated">Это плагин,реализующий SFU для видеоконференций,точно так же,как и плагин для видеомагнитофона сервера Janus.Он пытается сохранить почти тот же API с плагином видео комнаты сервера Janus и масштабировать его,распространяя различные издатели на разные внутренние серверы Janus,так что Janus-proxy может поддерживать больше издателей в одной видеоконференционной комнате,чем один сервер Janus.В отличие от плагина для видеокомнат сервера Janus,ниже приведены некоторые ограничения на этот плагин для упрощения кода.</target>
        </trans-unit>
        <trans-unit id="f8ed0f916765df142377d0a04fabcaf231b358f1" translate="yes" xml:space="preserve">
          <source>This is a simple video call plugin which allow two WebRTC peer communicate with each other through the medium Janus server. It achieves the same function and outputs the same APIs with the videocall plugin of Janus server, as well as it can distribute the workload among the backend Janus servers.
Moreover, Janus-proxy also can be scaled out for videocall plugin to handle much more video calls. Different WebRTC peers may be assigned to different Janus-proxies which is able to communicates with each other through admin interface.</source>
          <target state="translated">Это простой плагин для видеозвонков,который позволяет двум коллегам WebRTC общаться друг с другом через средний сервер Janus.Он достигает той же самой функции и выводит те же самые API с плагином видеовызова сервера Janus,а также может распределять рабочую нагрузку между внутренними серверами Janus.Более того,Janus-proxy также может быть масштабирован для плагина видео звонка,чтобы обрабатывать гораздо больше видео звонков.Различные коллеги WebRTC могут быть назначены различным Янус-прокси,который способен общаться друг с другом через интерфейс администратора.</target>
        </trans-unit>
        <trans-unit id="2325337d819df68aabbcf80a34b6ef27975bd6fb" translate="yes" xml:space="preserve">
          <source>This is a trivial EchoTest plugin which is only used for test and show plugin interface of Janus-proxy. It provide developers a skeleton for the new plugin development</source>
          <target state="translated">Это тривиальный плагин EchoTest,который используется только для тестирования и отображения интерфейса плагина Janus-proxy.Он предоставляет разработчикам скелет для разработки нового плагина.</target>
        </trans-unit>
        <trans-unit id="25946a17cc15fb169d425631ae5e0108460377e7" translate="yes" xml:space="preserve">
          <source>This is an other video call plugin, very similar to the videocall plugin, except that two WebRTC peer communicate with each other in p2p mode. It outputs same APIs like the videocall plugin, and also make Janus-proxy be able to scaled out to handle more video call. However no backend Janus servers is need to handle the media stream, because the WebRTC peers transmit the media data with each other directly.</source>
          <target state="translated">Это другой плагин для видео звонков,очень похожий на плагин для видео звонков,за исключением того,что два пиринга WebRTC общаются друг с другом в режиме p2p.Он выводит те же самые API,что и плагин видеозвонка,а также делает Janus-proxy способным к масштабированию для обработки большего количества видеозвонков.Однако нет необходимости в бэкэнд-серверах Janus обрабатывать медиа-поток,потому что коллеги WebRTC передают медиа-данные друг другу напрямую.</target>
        </trans-unit>
        <trans-unit id="4dfec7a2443dfed480702d9b3d9eee522dbe453e" translate="yes" xml:space="preserve">
          <source>To install Janus-cloud from PyPi,</source>
          <target state="translated">Для установки Janus Cloud из PyPi,</target>
        </trans-unit>
        <trans-unit id="ac4c2f913e4ec7eacb5fdd6f2dfbb198884f31fa" translate="yes" xml:space="preserve">
          <source>To install Janus-cloud from project source</source>
          <target state="translated">Чтобы установить Janus-cloud из источника проекта</target>
        </trans-unit>
        <trans-unit id="e091bdc9b16a83b936ff50c437d0a48666a82dd2" translate="yes" xml:space="preserve">
          <source>WebSocket transport must be enabled to correspond with Janus-proxy/Janus-sentinel</source>
          <target state="translated">Транспорт WebSocket должен быть включен для связи с Janus-proxy/Janus-sentinel</target>
        </trans-unit>
        <trans-unit id="d354cdd36487ebdc2b92040002d37c73cff2e87c" translate="yes" xml:space="preserve">
          <source>Where &amp;lt;project_root&amp;gt; is the root directory of project source, which contains the setup.py file</source>
          <target state="translated">Где &amp;lt;project_root&amp;gt; - это корневой каталог исходного кода проекта, который содержит файл setup.py</target>
        </trans-unit>
        <trans-unit id="ba7615aa9ec2e85fa946978ece122db1c50fd0b8" translate="yes" xml:space="preserve">
          <source>[v0.1.0]  - 2020-03-29</source>
          <target state="translated">[v0.1.0] - 29 марта 2020 г.</target>
        </trans-unit>
        <trans-unit id="30c56d0245e0740614841177c9444ce276935c05" translate="yes" xml:space="preserve">
          <source>[v0.2.0]  - 2020-05-10</source>
          <target state="translated">[v0.2.0] - 10 мая 2020 г.</target>
        </trans-unit>
        <trans-unit id="b052fa88b2bf9d745c75c64c6b8a5d5c304b3c2c" translate="yes" xml:space="preserve">
          <source>[v0.3.0]  - 2020-06-21</source>
          <target state="translated">[v0.3.0] - 21.06.2020</target>
        </trans-unit>
        <trans-unit id="709edb546fc2d9b717e27eb5c2b31536634a9fad" translate="yes" xml:space="preserve">
          <source>add rtp_forward operations to the admin API of videoroom plugin</source>
          <target state="translated">добавить операции rtp_forward в API администрирования плагина видеомагнитофона</target>
        </trans-unit>
        <trans-unit id="afbd8a2d1ad7c0a8c233806ccffea23907cd9e18" translate="yes" xml:space="preserve">
          <source>audiolevel_event not support</source>
          <target state="translated">отсутствие поддержки аудиоуровня</target>
        </trans-unit>
        <trans-unit id="36e449bd954cc5f4bf22027606a7d8e79960f7a9" translate="yes" xml:space="preserve">
          <source>echotest</source>
          <target state="translated">эхотест</target>
        </trans-unit>
        <trans-unit id="c327d71c9f5c8e728b0e8b1998c076a2af407cd2" translate="yes" xml:space="preserve">
          <source>echotest, videocall, p2pcall, videoroom plugins of janus-proxy are ready</source>
          <target state="translated">эхотест,видеозвонок,p2pcall,плагины видеорума janus-proxy готовы.</target>
        </trans-unit>
        <trans-unit id="9007263c1e1fbbdbf2a143cb0fe6935a11136140" translate="yes" xml:space="preserve">
          <source>initial version released</source>
          <target state="translated">начальная версия</target>
        </trans-unit>
        <trans-unit id="42f20359d1f12f652e0e1f08c5bef2bfc8a0bad2" translate="yes" xml:space="preserve">
          <source>janus-proxy</source>
          <target state="translated">janus-proxy</target>
        </trans-unit>
        <trans-unit id="03c90eed57dd83eeb6d754767062e29dafa2ae19" translate="yes" xml:space="preserve">
          <source>janus-proxy and janus-sentinel are finished</source>
          <target state="translated">янус-прокси и янус-стендинель закончены</target>
        </trans-unit>
        <trans-unit id="709f4a2d645f6689f31e6a971bf44a8827d5dec2" translate="yes" xml:space="preserve">
          <source>janus-sentinel</source>
          <target state="translated">janus-sentinel</target>
        </trans-unit>
        <trans-unit id="3d79ee67b07dd30cce43191d0f775f0fc2f744e7" translate="yes" xml:space="preserve">
          <source>p2pcall</source>
          <target state="translated">p2pcall</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">пищать</target>
        </trans-unit>
        <trans-unit id="bff5288d43b5b0b423a623fd27ab60ad387791d3" translate="yes" xml:space="preserve">
          <source>setuptools</source>
          <target state="translated">инструменты настройки</target>
        </trans-unit>
        <trans-unit id="af0a40ca10d135b205bf9a9f908de4e41e62b17e" translate="yes" xml:space="preserve">
          <source>string_ids not support</source>
          <target state="translated">string_ids не поддерживается</target>
        </trans-unit>
        <trans-unit id="7a73ae193ee383a1dc64f98dae66fdaecf66d74e" translate="yes" xml:space="preserve">
          <source>subscriber switch not support</source>
          <target state="translated">отсутствие поддержки абонентского переключателя</target>
        </trans-unit>
        <trans-unit id="be10da670f2464a2cf78dcef8a14d930ac84eff5" translate="yes" xml:space="preserve">
          <source>support redis to store the backend server info</source>
          <target state="translated">поддержка redis для хранения информации о внутреннем сервере</target>
        </trans-unit>
        <trans-unit id="2e889bea7a35e5a68464d2ba557a0907adabb778" translate="yes" xml:space="preserve">
          <source>support rtp_forward feature for videoroom</source>
          <target state="translated">поддержка rtp_forward для видеомагнитофона</target>
        </trans-unit>
        <trans-unit id="704187f0fb6c2b5ab112b0d1dee82a5e2c5cd3d6" translate="yes" xml:space="preserve">
          <source>there are the following requirements on the backend Janus server when deploying with Janus-cloud:</source>
          <target state="translated">есть следующие требования к внутреннему серверу Janus при развертывании с помощью Janus-cloud:</target>
        </trans-unit>
        <trans-unit id="e40c22816f2775685d4383008b025693a4f6b0b8" translate="yes" xml:space="preserve">
          <source>token_auth must be disabled</source>
          <target state="translated">token_auth должен быть отключён</target>
        </trans-unit>
        <trans-unit id="da28e2e86c6d6c7a7b3f692a8c370aa1e8406cff" translate="yes" xml:space="preserve">
          <source>videocall</source>
          <target state="translated">видеозвонок</target>
        </trans-unit>
        <trans-unit id="30aa3d5e84bff79310229e26a9a54a34e4ce2348" translate="yes" xml:space="preserve">
          <source>videoroom</source>
          <target state="translated">видеозал</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
