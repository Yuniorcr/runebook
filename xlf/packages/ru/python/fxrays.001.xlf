<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/fxrays/">
    <body>
      <group id="fxrays">
        <trans-unit id="f7218e2cb77fc23e935487057a9e980e62ebf1a9" translate="yes" xml:space="preserve">
          <source>Computes extremal rays with filtering</source>
          <target state="translated">Вычисляет экстремальные лучи с фильтрацией</target>
        </trans-unit>
        <trans-unit id="b6955302bb0b12f8356599f6b88675ed062d73b4" translate="yes" xml:space="preserve">
          <source>The algorithm is due to Dave Letscher, and incorporates ideas of Komei
Fukuda&amp;rsquo;s.</source>
          <target state="translated">Алгоритм принадлежит Дэйву Летшеру и включает идеи Комей Фукуда.</target>
        </trans-unit>
        <trans-unit id="5d44e4b17c5d82fa041f21841f64771d5138d50f" translate="yes" xml:space="preserve">
          <source>The setup is this.  Define the support of a vector v in R^n to be the
set of indices i such that v_i is non-zero.  We are given an integer
matrix M, typically with many more columns than rows, and a list of
&amp;ldquo;illegal supports&amp;rdquo;.  The support of a vector is illegal if its support
contains one of the illegal supports on the list.</source>
          <target state="translated">Настройка такая. Определим носитель вектора v в R ^ n как набор индексов i таких, что v_i отличен от нуля. Нам дана целочисленная матрица M, обычно с большим количеством столбцов, чем строк, и список &amp;laquo;запрещенных опор&amp;raquo;. Поддержка вектора недопустима, если его поддержка содержит одну из недопустимых опор в списке.</target>
        </trans-unit>
        <trans-unit id="ad296dffab31909f480bc6fd3d7a488cc377c7fc" translate="yes" xml:space="preserve">
          <source>This package is a small, fast implementation of an algorithm for
finding extremal rays of a polyhedral cone, with filtering.  It is
intended for finding normal surfaces in triangulated 3-manifolds, and
therefore does not implement various features that might be useful for
general extremal ray problems.</source>
          <target state="translated">Данный пакет представляет собой небольшую,быструю реализацию алгоритма поиска экстремальных лучей полиэдрического конуса,с фильтрацией.Он предназначен для поиска нормальных поверхностей в триангулированных 3-мя манифольдах,и поэтому не реализует различные особенности,которые могли бы быть полезны при решении общих задач с экстремальными лучами.</target>
        </trans-unit>
        <trans-unit id="6781db64db5c583fd06d1f1436d6f433611fb4ac" translate="yes" xml:space="preserve">
          <source>We want to find all the extremal rays of the cone
(Null space of M) intersect (positive orthant),
which are generated by vectors with legal support. (The restriction to
vector with legal support is what is meant by &amp;ldquo;filtering&amp;rdquo;.)</source>
          <target state="translated">Мы хотим найти все экстремальные лучи конуса (нулевого пространства M), которые пересекаются (положительный ортант), которые порождаются векторами с юридической опорой. (Ограничение на вектор с юридической поддержкой - это то, что подразумевается под &amp;laquo;фильтрацией&amp;raquo;.)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
