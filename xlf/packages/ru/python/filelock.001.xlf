<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/filelock/">
    <body>
      <group id="filelock">
        <trans-unit id="fe9fdf2aa536d4312a0a88e412347530baae707c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;py-filelock&lt;/em&gt; is available via PyPi:</source>
          <target state="translated">&lt;em&gt;py-filelock&lt;/em&gt; доступен через PyPi:</target>
        </trans-unit>
        <trans-unit id="49ae003c132113478cd1905ba619db7ec7f9776e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't use&lt;/strong&gt; a &lt;em&gt;FileLock&lt;/em&gt; to lock the file you want to write to, instead create
a separate &lt;em&gt;.lock&lt;/em&gt; file as shown above.</source>
          <target state="translated">&lt;strong&gt;Не используйте&lt;/strong&gt; в &lt;em&gt;FileLock&lt;/em&gt; заблокировать файл , который вы хотите записать, вместо того, чтобы создать отдельный &lt;em&gt;.lock&lt;/em&gt; файл , как показано выше.</target>
        </trans-unit>
        <trans-unit id="bbb6745e5212959513d3faeb018cb8b755a43364" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;FileLock&lt;/em&gt; is used to indicate another process of your application that a
resource or working
directory is currently used. To do so, create a &lt;em&gt;FileLock&lt;/em&gt; first:</source>
          <target state="translated">&lt;em&gt;FileLock&lt;/em&gt; используется , чтобы указать другой процесс вашего приложения, ресурс или рабочий каталог в настоящее время используется. Для этого сначала создайте &lt;em&gt;FileLock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="55a3ea6fbcc990e19f685a7bb6a05a83057882a3" translate="yes" xml:space="preserve">
          <source>A platform independent file lock.</source>
          <target state="translated">Файловый замок,независимый от платформы.</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">Взносы</target>
        </trans-unit>
        <trans-unit id="87b11a3ca138932360b2d345d2ca983dbe7a0838" translate="yes" xml:space="preserve">
          <source>Contributions are always welcome, please make sure they pass all tests before
creating a pull request. Never hesitate to open a new issue, although it may
take some time for me to respond.</source>
          <target state="translated">Взносы всегда приветствуются,пожалуйста,убедитесь,что они прошли все тесты,прежде чем создавать запрос на подтягивание.Никогда не стесняйтесь открывать новый вопрос,хотя мне может потребоваться некоторое время,чтобы ответить на него.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Документация</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Примеры</target>
        </trans-unit>
        <trans-unit id="b2b3dfa054cf695fc87bf051cada27e4b227261d" translate="yes" xml:space="preserve">
          <source>FileLock vs SoftFileLock</source>
          <target state="translated">FileLock против SoftFileLock</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="257ca1540e5568d5a3101b22c82c545eff9e8e32" translate="yes" xml:space="preserve">
          <source>Perhaps you are looking for something like</source>
          <target state="translated">Возможно,вы ищете что-то вроде</target>
        </trans-unit>
        <trans-unit id="92061c18b61fb90eecde79472283a1be656d6e8d" translate="yes" xml:space="preserve">
          <source>Similar libraries</source>
          <target state="translated">Подобные библиотеки</target>
        </trans-unit>
        <trans-unit id="6f4cd88c9396793cdf99bec2b7cbfd26f3082452" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;FileLock&lt;/em&gt; is platform dependent while the &lt;em&gt;SoftFileLock&lt;/em&gt; is not. Use the
&lt;em&gt;FileLock&lt;/em&gt; if all instances of your application are running on the same host and
a &lt;em&gt;SoftFileLock&lt;/em&gt; otherwise.</source>
          <target state="translated">&lt;em&gt;FileLock&lt;/em&gt; зависит от платформы , а &lt;em&gt;SoftFileLock&lt;/em&gt; нет. Используйте &lt;em&gt;FileLock,&lt;/em&gt; если все экземпляры вашего приложения работают на одном хосте, и &lt;em&gt;SoftFileLock в&lt;/em&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="27f7d5f533568a440001d59a2145e7fb7013f39e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;SoftFileLock&lt;/em&gt; only watches the existence of the lock file. This makes it
ultra portable, but also more prone to dead locks if the application crashes.
You can simply delete the lock file in such cases.</source>
          <target state="translated">&lt;em&gt;SoftFileLock&lt;/em&gt; смотрит только существование файла блокировки. Это делает его сверхпортативным, но также более подверженным мертвым блокировкам в случае сбоя приложения. В таких случаях вы можете просто удалить файл блокировки.</target>
        </trans-unit>
        <trans-unit id="16ac1ed6c889ed14f127223248e08fc0b5b4fc78" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;acquire()&lt;/em&gt; method accepts also a &lt;em&gt;timeout&lt;/em&gt; parameter. If the lock cannot be
acquired within &lt;em&gt;timeout&lt;/em&gt; seconds, a &lt;em&gt;Timeout&lt;/em&gt; exception is raised:</source>
          <target state="translated">Метод &lt;em&gt;Acquire ()&lt;/em&gt; также принимает параметр &lt;em&gt;тайм-аута&lt;/em&gt; . Если блокировка не может быть получен в течение &lt;em&gt;тайм - аута&lt;/em&gt; секунд, на &lt;em&gt;Тайм - аут&lt;/em&gt; возбуждается исключение:</target>
        </trans-unit>
        <trans-unit id="d7006afc227ac748c6eb3e9b0d1ee708e2327230" translate="yes" xml:space="preserve">
          <source>The documentation for the API is available on
&lt;a href=&quot;https://filelock.readthedocs.io/&quot;&gt;readthedocs.org&lt;/a&gt;.</source>
          <target state="translated">Документация по API доступна на &lt;a href=&quot;https://filelock.readthedocs.io/&quot;&gt;readthedocs.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afa3a06b8068e64108e33c6cf96add95f6e6f0b8" translate="yes" xml:space="preserve">
          <source>The lock object supports multiple ways for acquiring the lock, including the
ones used to acquire standard Python thread locks:</source>
          <target state="translated">Объект блокировки поддерживает несколько способов получения блокировки,в том числе и те,которые используются для получения стандартных Python thread lock:</target>
        </trans-unit>
        <trans-unit id="577301685dfabc855c7b873e373cd0fb51178616" translate="yes" xml:space="preserve">
          <source>The lock objects are recursive locks, which means that once acquired, they will
not block on successive lock requests:</source>
          <target state="translated">Объекты блокировки-это рекурсивные блокировки,т.е.после получения они не будут блокироваться при последовательных запросах на блокировку:</target>
        </trans-unit>
        <trans-unit id="cb77a348945f79a43eb196295521232d0b1083b3" translate="yes" xml:space="preserve">
          <source>This package contains a single module, which implements a platform independent
file lock in Python, which provides a simple way of inter-process communication:</source>
          <target state="translated">Данный пакет содержит единый модуль,реализующий платформонезависимую файловую блокировку на Python,которая обеспечивает простой способ межпроцессного взаимодействия:</target>
        </trans-unit>
        <trans-unit id="23e7b3865538af1d593848818ab860fb54b4293b" translate="yes" xml:space="preserve">
          <source>This package is &lt;a href=&quot;./LICENSE.rst&quot;&gt;public domain&lt;/a&gt;.</source>
          <target state="translated">Этот пакет является &lt;a href=&quot;./LICENSE.rst&quot;&gt;общественным достоянием&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1dba246662c130af0c5b4425a668e26311761f8" translate="yes" xml:space="preserve">
          <source>or &lt;a href=&quot;https://docs.python.org/3/library/fcntl.html#fcntl.flock&quot;&gt;https://docs.python.org/3/library/fcntl.html#fcntl.flock&lt;/a&gt;</source>
          <target state="translated">или &lt;a href=&quot;https://docs.python.org/3/library/fcntl.html#fcntl.flock&quot;&gt;https://docs.python.org/3/library/fcntl.html#fcntl.flock&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="711bf1f55396b203cf664cbef73f39fba95d8841" translate="yes" xml:space="preserve">
          <source>py-filelock</source>
          <target state="translated">py-файллок</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
