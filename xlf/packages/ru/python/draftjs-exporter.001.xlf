<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/draftjs-exporter/">
    <body>
      <group id="draftjs-exporter">
        <trans-unit id="89a7d77dcda0679d44b6467a214922d53c4bc928" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; is a rich text editor framework for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;. Its approach is different from most rich text editors because it does not store data as HTML, but rather in its own representation called ContentState. This exporter is useful when the ContentState to HTML conversion has to be done in a Python ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; - это фреймворк для редактора форматированного текста для &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; . Его подход отличается от большинства редакторов форматированного текста, поскольку он хранит данные не как HTML, а в собственном представлении, называемом ContentState. Этот модуль экспорта полезен, когда преобразование ContentState в HTML должно выполняться в экосистеме Python.</target>
        </trans-unit>
        <trans-unit id="05c5ca178aed5dd7a5d9f3e1d915dbde9140a00a" translate="yes" xml:space="preserve">
          <source>Add the following to the exporter config,</source>
          <target state="translated">Добавьте следующее в конфигурацию экспортера,</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">Расширенное использование</target>
        </trans-unit>
        <trans-unit id="e34c67a413cc13bff1bc120db1eff1424946ce93" translate="yes" xml:space="preserve">
          <source>Alternative backing engines</source>
          <target state="translated">Альтернативная подложка двигателей</target>
        </trans-unit>
        <trans-unit id="eed87c23b43026871c8ab6c71ec1c981e97ce04e" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;create_element&lt;/code&gt;, a &lt;code&gt;parse_html&lt;/code&gt; method is also available. Use it to interface with other HTML generators, like template engines.</source>
          <target state="translated">Помимо &lt;code&gt;create_element&lt;/code&gt; , также &lt;code&gt;parse_html&lt;/code&gt; метод parse_html . Используйте его для взаимодействия с другими генераторами HTML, такими как механизмы шаблонов.</target>
        </trans-unit>
        <trans-unit id="23936ce755dd1fe091ab90a6314553128ac91956" translate="yes" xml:space="preserve">
          <source>Automatic conversion of entity data to HTML attributes (int &amp;amp; boolean to string, style object to style string).</source>
          <target state="translated">Автоматическое преобразование данных объекта в атрибуты HTML (int и логическое значение в строку, объект стиля в строку стиля).</target>
        </trans-unit>
        <trans-unit id="b45d3746128e467f7961f387dfd30507a14e8fb6" translate="yes" xml:space="preserve">
          <source>By default, the exporter uses a dependency-free engine called &lt;code&gt;string&lt;/code&gt; to build the DOM tree. There are two alternative backing engines: &lt;code&gt;html5lib&lt;/code&gt; (via BeautifulSoup) and &lt;code&gt;lxml&lt;/code&gt;.</source>
          <target state="translated">По умолчанию средство экспорта использует механизм без зависимостей, называемый &lt;code&gt;string&lt;/code&gt; для построения дерева DOM. Есть два альтернативных механизма поддержки: &lt;code&gt;html5lib&lt;/code&gt; (через BeautifulSoup) и &lt;code&gt;lxml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Конфигурация</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Вклад</target>
        </trans-unit>
        <trans-unit id="a0059a104cab5b52db320a50024325d57d9d5b41" translate="yes" xml:space="preserve">
          <source>Convert line breaks to &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">Преобразуйте разрывы строк в элементы &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Кредиты</target>
        </trans-unit>
        <trans-unit id="7f87cef1328db5f76b4a3b465748829b2ad4e37e" translate="yes" xml:space="preserve">
          <source>Custom backing engines</source>
          <target state="translated">Индивидуальные двигатели поддержки</target>
        </trans-unit>
        <trans-unit id="d47791d6d5efdc5ba7a9604f430d5b0a4824883f" translate="yes" xml:space="preserve">
          <source>Custom components</source>
          <target state="translated">Пользовательские компоненты</target>
        </trans-unit>
        <trans-unit id="1613092717ed25ebbf74b9eb37330065f2ccbbb8" translate="yes" xml:space="preserve">
          <source>Default, extensible block &amp;amp; inline style maps for common HTML elements.</source>
          <target state="translated">Расширяемые блочные и встроенные карты стилей по умолчанию для общих элементов HTML.</target>
        </trans-unit>
        <trans-unit id="138972dce3c10c9054f9319cfea2b277053f676f" translate="yes" xml:space="preserve">
          <source>Define any attribute in the block map &amp;ndash; custom class names for elements.</source>
          <target state="translated">Определите любой атрибут в карте блоков - пользовательские имена классов для элементов.</target>
        </trans-unit>
        <trans-unit id="3b230184677b394f28380b69742259082517aeb9" translate="yes" xml:space="preserve">
          <source>Draft.js exporter</source>
          <target state="translated">Экспортер черновиков</target>
        </trans-unit>
        <trans-unit id="a1e0e94d24568d9ad9d3e3e750a3e358fce19109" translate="yes" xml:space="preserve">
          <source>Draft.js stores data in a JSON representation based on blocks, representing lines of content in the editor, annotated with entities and styles to represent rich text. For more information, &lt;a href=&quot;https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2&quot;&gt;this article&lt;/a&gt; covers the concepts further.</source>
          <target state="translated">Draft.js хранит данные в представлении JSON на основе блоков, представляющих строки содержимого в редакторе, аннотированные сущностями и стилями для представления форматированного текста. Для получения дополнительной информации в &lt;a href=&quot;https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2&quot;&gt;этой статье&lt;/a&gt; рассматриваются следующие концепции.</target>
        </trans-unit>
        <trans-unit id="f87adc97bc867db111b5ecc593cbc185b5d73608" translate="yes" xml:space="preserve">
          <source>Extensive configuration of the generated HTML.</source>
          <target state="translated">Обширная конфигурация генерируемого HTML.</target>
        </trans-unit>
        <trans-unit id="9569b61bb8c7d39f232c2190f89e63b08ef14cbc" translate="yes" xml:space="preserve">
          <source>Fallback components</source>
          <target state="translated">Обратные компоненты</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Особенности</target>
        </trans-unit>
        <trans-unit id="366df0afdce10822973f04858c3997d19fa5838c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;html5lib&lt;/code&gt;, do &lt;code&gt;pip install draftjs_exporter[html5lib]&lt;/code&gt;.</source>
          <target state="translated">Для &lt;code&gt;html5lib&lt;/code&gt; выполните команду &lt;code&gt;pip install draftjs_exporter[html5lib]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02d697e666cdfdfad29896088986c67d483bdafc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;lxml&lt;/code&gt;, do &lt;code&gt;pip install draftjs_exporter[lxml]&lt;/code&gt;. It also requires &lt;code&gt;libxml2&lt;/code&gt; and &lt;code&gt;libxslt&lt;/code&gt; to be available on your system.</source>
          <target state="translated">Для &lt;code&gt;lxml&lt;/code&gt; выполните команду &lt;code&gt;pip install draftjs_exporter[lxml]&lt;/code&gt; . Он также требует, чтобы в вашей системе были доступны &lt;code&gt;libxml2&lt;/code&gt; и &lt;code&gt;libxslt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">Начало работы</target>
        </trans-unit>
        <trans-unit id="0146b1998d9c21dcad837a3041918ac2bbbbd7b4" translate="yes" xml:space="preserve">
          <source>Here is an example implementation:</source>
          <target state="translated">Вот пример реализации:</target>
        </trans-unit>
        <trans-unit id="84b25dbbab0326264e48f81207c8107d5d4ddac7" translate="yes" xml:space="preserve">
          <source>If you just want to set up the project on your own computer, the contribution guidelines also contain all of the setup commands.</source>
          <target state="translated">Если вы просто хотите настроить проект на вашем собственном компьютере,руководство по работе с проектом также содержит все команды по настройке.</target>
        </trans-unit>
        <trans-unit id="8115dee2d09b458eefa214ea8fb390c538ccc822" translate="yes" xml:space="preserve">
          <source>In your code, create an exporter and use the &lt;code&gt;render&lt;/code&gt; method to create HTML:</source>
          <target state="translated">В своем коде создайте экспортер и используйте метод &lt;code&gt;render&lt;/code&gt; для создания HTML:</target>
        </trans-unit>
        <trans-unit id="2fa1427428a8ffd3f332b187e2845a2cfa63a7d7" translate="yes" xml:space="preserve">
          <source>It is developed alongside the &lt;a href=&quot;https://www.draftail.org/&quot;&gt;Draftail&lt;/a&gt; rich text editor, for &lt;a href=&quot;https://github.com/wagtail/wagtail&quot;&gt;Wagtail&lt;/a&gt;. Check out the &lt;a href=&quot;http://playground.draftail.org/&quot;&gt;online demo&lt;/a&gt;, and our &lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;introductory blog post&lt;/a&gt;.</source>
          <target state="translated">Она развивалась вместе с &lt;a href=&quot;https://www.draftail.org/&quot;&gt;Draftail&lt;/a&gt; богатый текстовый редактор, для &lt;a href=&quot;https://github.com/wagtail/wagtail&quot;&gt;трясогузки&lt;/a&gt; . Посмотрите &lt;a href=&quot;http://playground.draftail.org/&quot;&gt;онлайн-демонстрацию&lt;/a&gt; и наш &lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;вводный пост в блоге&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be3aee2b8e06230d8040ba6d278239204a311722" translate="yes" xml:space="preserve">
          <source>Library to convert rich text from Draft.js raw ContentState to HTML</source>
          <target state="translated">Библиотека для конвертирования богатого текста из необработанного ContentState в HTML.</target>
        </trans-unit>
        <trans-unit id="e873658e5f0c19da47f55c011ffbbd18c4eb5d20" translate="yes" xml:space="preserve">
          <source>Library to convert rich text from Draft.js raw ContentState to HTML.</source>
          <target state="translated">Библиотека для конвертирования богатого текста из необработанного ContentState проекта Draft.js в HTML.</target>
        </trans-unit>
        <trans-unit id="5b13fec6e9cea54c79c5356366d7b55079a8d5ee" translate="yes" xml:space="preserve">
          <source>Nested lists (&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements go inside &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;, with multiple levels).</source>
          <target state="translated">Вложенные списки ( элементы &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; входят внутри &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; , с несколькими уровнями).</target>
        </trans-unit>
        <trans-unit id="26973964d473f363cf6b3cb58a4856dd150bc285" translate="yes" xml:space="preserve">
          <source>Output inline styles as inline elements (&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;, pick and choose, with any attribute).</source>
          <target state="translated">Выводить встроенные стили как встроенные элементы ( &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; , выбрать и выбрать с любым атрибутом).</target>
        </trans-unit>
        <trans-unit id="2690b01f8e1a51798c69ef8b4d3187b150b3a371" translate="yes" xml:space="preserve">
          <source>Overlapping inline style and entity ranges.</source>
          <target state="translated">Перекрытие стиля и диапазонов сущностей.</target>
        </trans-unit>
        <trans-unit id="63e2c791a91e6a1dc538d6d2c1d4651b708e0f0e" translate="yes" xml:space="preserve">
          <source>Python 3.6+ type annotations.</source>
          <target state="translated">Аннотации типа Python 3.6+.</target>
        </trans-unit>
        <trans-unit id="89bfc1b2c5f330360922a11d59527779b265e93c" translate="yes" xml:space="preserve">
          <source>React-like API to create custom components.</source>
          <target state="translated">React-like API для создания пользовательских компонентов.</target>
        </trans-unit>
        <trans-unit id="e7ffc95076489a08bf4c953f0385eb76f0b9c40f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;example.py&quot;&gt;examples.py&lt;/a&gt; for more details.</source>
          <target state="translated">Подробнее см. &lt;a href=&quot;example.py&quot;&gt;Examples.py&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b135f1026e31ef84e9526343e061c27354b26c0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;examples.py&lt;/code&gt; in the repository for more details.</source>
          <target state="translated">Подробнее см. &lt;code&gt;examples.py&lt;/code&gt; в репозитории.</target>
        </trans-unit>
        <trans-unit id="d4c5fc5e40da96827ca1e31814ae47db5f75fe12" translate="yes" xml:space="preserve">
          <source>See anything you like in here? Anything missing? We welcome all support, whether on bug reports, feature requests, code, design, reviews, tests, documentation, and more. Please have a look at our &lt;a href=&quot;docs/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="translated">Видишь здесь что-нибудь, что тебе нравится? Чего не хватает? Мы приветствуем любую поддержку, будь то отчеты об ошибках, запросы функций, код, дизайн, обзоры, тесты, документация и многое другое. Ознакомьтесь с нашими &lt;a href=&quot;docs/CONTRIBUTING.md&quot;&gt;правилами по взносам&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="542e39ab85fa9280fa866f682a9eb117162ca28a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;string&lt;/code&gt; engine is the fastest, and does not have any dependencies. Its only drawback is that the &lt;code&gt;parse_html&lt;/code&gt; method does not escape/sanitise HTML like that of other engines.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; двигатель является самым быстрым, и не имеет никаких зависимостей. Его единственный недостаток заключается в том, что метод &lt;code&gt;parse_html&lt;/code&gt; не экранирует / не очищает HTML, как это делают другие движки.</target>
        </trans-unit>
        <trans-unit id="1befcd0f7f47a13dc8049fb4b573f1d73a2bb541" translate="yes" xml:space="preserve">
          <source>The exporter output is extensively configurable to cater for varied rich text requirements.</source>
          <target state="translated">Выход экспортера в значительной степени настраивается для удовлетворения разнообразных требований к богатому тексту.</target>
        </trans-unit>
        <trans-unit id="42ad4a38ec45fbcdca465aba8f7764c29a85ada4" translate="yes" xml:space="preserve">
          <source>The exporter supports using custom engines to generate its output via the &lt;code&gt;DOM&lt;/code&gt; API. This can be useful to implement custom export formats, e.g. &lt;a href=&quot;https://github.com/thibaudcolas/draftjs_exporter_markdown&quot;&gt;to Markdown (experimental)&lt;/a&gt;.</source>
          <target state="translated">Экспортер поддерживает использование настраиваемых механизмов для генерации вывода через &lt;code&gt;DOM&lt;/code&gt; API. Это может быть полезно для реализации пользовательских форматов экспорта, например, &lt;a href=&quot;https://github.com/thibaudcolas/draftjs_exporter_markdown&quot;&gt;в Markdown (экспериментальный)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2093690a5b3c5b4cf51261feb5e3099767b27b9c" translate="yes" xml:space="preserve">
          <source>The exporter&amp;rsquo;s codebase is typed with annotations from the Python 3.6+ standard library, checked with mypy. Reusable types are made available:</source>
          <target state="translated">Кодовая база экспортера набрана с аннотациями из стандартной библиотеки Python 3.6+, проверенной с помощью mypy. Доступны многоразовые типы:</target>
        </trans-unit>
        <trans-unit id="6a7fc17d24bf9ba459616ca4a1f5b2ce888c1fce" translate="yes" xml:space="preserve">
          <source>The initial use case was to gain more control over the content managed by rich text editors in a Wagtail/Django site. If you want to read the full story, have a look at our blog post: &lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;Rethinking rich text pipelines with Draft.js&lt;/a&gt;.</source>
          <target state="translated">Первоначальный вариант использования заключался в том, чтобы получить больший контроль над контентом, управляемым редакторами форматированного текста на сайте Wagtail / Django. Если вы хотите прочитать всю историю, ознакомьтесь с нашим сообщением в блоге: &lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;Переосмысление конвейеров форматированного текста с помощью Draft.js&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01258a11c84ee0c86392bfe1cecb3160754f8f71" translate="yes" xml:space="preserve">
          <source>Then, use the &lt;code&gt;engine&lt;/code&gt; attribute of the exporter config:</source>
          <target state="translated">Затем используйте атрибут &lt;code&gt;engine&lt;/code&gt; конфигурации экспортера:</target>
        </trans-unit>
        <trans-unit id="d08ec679e497243aaa8a676827ae47fe9bd702a9" translate="yes" xml:space="preserve">
          <source>This exporter takes the Draft.js ContentState data as input, and outputs HTML based on its configuration. To get started, install the package:</source>
          <target state="translated">Этот экспортер принимает на вход данные Draft.js ContentState,а на основе их конфигурации выводит HTML.Для начала установите пакет:</target>
        </trans-unit>
        <trans-unit id="440a8811815779de6e5c663faa2f0b1ff2c6fc35" translate="yes" xml:space="preserve">
          <source>This fallback component can now control the exporter behavior when normal components are not found. Here is an example:</source>
          <target state="translated">Этот запасной компонент теперь может контролировать поведение экспортера,когда обычные компоненты не найдены.Вот пример:</target>
        </trans-unit>
        <trans-unit id="c79109d7cce0de25a887741031ccbc36fc50dffa" translate="yes" xml:space="preserve">
          <source>This project adheres to &lt;a href=&quot;http://semver.org/spec/v2.0.0.html&quot;&gt;Semantic Versioning&lt;/a&gt;, and &lt;a href=&quot;https://thib.me/python-memory-profiling-for-the-draft-js-exporter&quot;&gt;measures performance&lt;/a&gt; and &lt;a href=&quot;https://coveralls.io/github/springload/draftjs_exporter&quot;&gt;code coverage&lt;/a&gt;. Code is checked with &lt;a href=&quot;https://mypy.readthedocs.io/en/latest/index.html&quot;&gt;mypy&lt;/a&gt;.</source>
          <target state="translated">Этот проект придерживается &lt;a href=&quot;http://semver.org/spec/v2.0.0.html&quot;&gt;семантического управления версиями&lt;/a&gt; и &lt;a href=&quot;https://thib.me/python-memory-profiling-for-the-draft-js-exporter&quot;&gt;измеряет производительность&lt;/a&gt; и &lt;a href=&quot;https://coveralls.io/github/springload/draftjs_exporter&quot;&gt;покрытие кода&lt;/a&gt; . Код проверяется с помощью &lt;a href=&quot;https://mypy.readthedocs.io/en/latest/index.html&quot;&gt;mypy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66e5e2a2528a4675a0eb1d62c4147298c7c68bad" translate="yes" xml:space="preserve">
          <source>This project is made possible by the work of &lt;a href=&quot;https://github.com/springload&quot;&gt;Springload&lt;/a&gt;, a New Zealand digital agency. The &lt;em&gt;beautiful&lt;/em&gt; demo site is the work of &lt;a href=&quot;https://github.com/thibaudcolas&quot;&gt;@thibaudcolas&lt;/a&gt;.</source>
          <target state="translated">Этот проект стал возможным благодаря работе новозеландского цифрового агентства &lt;a href=&quot;https://github.com/springload&quot;&gt;Springload&lt;/a&gt; . &lt;em&gt;Красивый&lt;/em&gt; демонстрационный сайт является работа &lt;a href=&quot;https://github.com/thibaudcolas&quot;&gt;@thibaudcolas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60d3b3cec85b2e8a6c2ca0a70edccd768e932f6d" translate="yes" xml:space="preserve">
          <source>To generate arbitrary markup with dynamic data, the exporter comes with an API to create rendering components. This API mirrors React&amp;rsquo;s &lt;a href=&quot;https://facebook.github.io/react/docs/top-level-api.html#react.createelement&quot;&gt;createElement&lt;/a&gt; API (what JSX compiles to).</source>
          <target state="translated">Чтобы сгенерировать произвольную разметку с динамическими данными, экспортер поставляется с API для создания компонентов отрисовки. Этот API отражает React &lt;a href=&quot;https://facebook.github.io/react/docs/top-level-api.html#react.createelement&quot;&gt;createElement&lt;/a&gt; API (то, что JSX компилируется).</target>
        </trans-unit>
        <trans-unit id="ee5f3de7938afc6193f57957cf627bbf0b440e19" translate="yes" xml:space="preserve">
          <source>Type annotations</source>
          <target state="translated">Введите аннотации</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="e3a322c037cb083b908858e3a7f73e3960b5564e" translate="yes" xml:space="preserve">
          <source>View the full list of &lt;a href=&quot;https://github.com/springload/draftjs_exporter/graphs/contributors&quot;&gt;contributors&lt;/a&gt;. &lt;a href=&quot;LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.</source>
          <target state="translated">Посмотреть полный список &lt;a href=&quot;https://github.com/springload/draftjs_exporter/graphs/contributors&quot;&gt;участников&lt;/a&gt; . &lt;a href=&quot;LICENSE&quot;&gt;Лицензия MIT&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0dddfe422b9e0076cc9e2e14243bdcfb70dccdc4" translate="yes" xml:space="preserve">
          <source>We support the following Python versions: 3.6, 3.7, 3.8. For Python 2.7 and 3.4 support, please use &lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v2.1.7&quot;&gt;v2.1.7&lt;/a&gt; of the exporter. For Python 3.5, use &lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v3.0.1&quot;&gt;v3.0.1&lt;/a&gt;.</source>
          <target state="translated">Мы поддерживаем следующие версии Python: 3.6, 3.7, 3.8. Для поддержки Python 2.7 и 3.4 используйте экспортер &lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v2.1.7&quot;&gt;версии 2.1.7&lt;/a&gt; . Для Python 3.5 используйте &lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v3.0.1&quot;&gt;v3.0.1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f345c5915212fcd9dcefa383e28d0756c53cbcd" translate="yes" xml:space="preserve">
          <source>When dealing with changes in the content schema, as part of ongoing development or migrations, some content can go stale.
To solve this, the exporter allows the definition of fallback components for blocks, styles, and entities.
This feature is only used for development at the moment, if you have a use case for this in production we would love to hear from you.
Please get in touch!</source>
          <target state="translated">Когда речь идет об изменениях в схеме контента,в рамках текущей разработки или миграции,некоторое содержимое может застрять в памяти.Для решения этой проблемы экспортер позволяет определять резервные компоненты для блоков,стилей и сущностей.На данный момент эта функция используется только для разработки,и если у вас в производстве для этого есть возможность использования,мы будем рады ее услышать.Пожалуйста,свяжитесь с нами!</target>
        </trans-unit>
        <trans-unit id="21e2caea4476d26af34541ca7c909c7ff2fa4a7f" translate="yes" xml:space="preserve">
          <source>Why</source>
          <target state="translated">Почему</target>
        </trans-unit>
        <trans-unit id="7b49e2225355c3757580e86b24df95951ac7b1bb" translate="yes" xml:space="preserve">
          <source>You can also run an example by downloading this repository and then using &lt;code&gt;python example.py&lt;/code&gt;, or by using our &lt;a href=&quot;http://playground.draftail.org/&quot;&gt;online Draft.js demo&lt;/a&gt;.</source>
          <target state="translated">Вы также можете запустить пример, загрузив этот репозиторий, а затем используя &lt;code&gt;python example.py&lt;/code&gt; или воспользовавшись нашей &lt;a href=&quot;http://playground.draftail.org/&quot;&gt;онлайн-демонстрацией Draft.js&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
