<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/lizard/">
    <body>
      <group id="lizard">
        <trans-unit id="f9321cb54e2c9ff0a971dda406afd95711e00920" translate="yes" xml:space="preserve">
          <source>-C10</source>
          <target state="translated">-C10</target>
        </trans-unit>
        <trans-unit id="258824eb3becda0089745366018765b7ecf2134f" translate="yes" xml:space="preserve">
          <source>-L10</source>
          <target state="translated">-L10</target>
        </trans-unit>
        <trans-unit id="2cb74b8a7d38c4011a7f9a557907c868bcdb7d3d" translate="yes" xml:space="preserve">
          <source>-Tcyclomatic_complexity=10</source>
          <target state="translated">-Tcyclomatic_complexity = 10</target>
        </trans-unit>
        <trans-unit id="72d8e8a852f8184cc6911dd6669503ac61a326db" translate="yes" xml:space="preserve">
          <source>-Tlength=10</source>
          <target state="translated">-Tlength = 10</target>
        </trans-unit>
        <trans-unit id="bede6624c813bdf41ebc6173ef9ad2c13fcb17d9" translate="yes" xml:space="preserve">
          <source>-Tnloc=10</source>
          <target state="translated">-Tnloc = 10</target>
        </trans-unit>
        <trans-unit id="e2beb907fe91e6ef68c21d074083a7c85cfd45eb" translate="yes" xml:space="preserve">
          <source>-Tparameter_count=10</source>
          <target state="translated">-Tparameter_count = 10</target>
        </trans-unit>
        <trans-unit id="3ebcc976c2dd759fcc3d310a5b0d941d1658a6c4" translate="yes" xml:space="preserve">
          <source>-a10</source>
          <target state="translated">-a10</target>
        </trans-unit>
        <trans-unit id="03593f2d1e24ead3f85c5377f4b77b360396c139" translate="yes" xml:space="preserve">
          <source>.
The option</source>
          <target state="translated">. Опция</target>
        </trans-unit>
        <trans-unit id="e07e1dbdc416ef697dadf3ce7fdb3f85b42815fa" translate="yes" xml:space="preserve">
          <source>A code analyzer without caring the C/C++ header files. It works with Java, C/C++, JavaScript, Python, Ruby, Swift, Objective C. Metrics includes cyclomatic complexity number etc.</source>
          <target state="translated">Анализатор кода,не заботящийся о заголовочных файлах на языке Си/Си++.Он работает с Java,C/C++,JavaScript,Python,Ruby,Swift,Objective C.Метрики включают в себя цикломатический номер сложности и т.д.</target>
        </trans-unit>
        <trans-unit id="d9e9f235261e1a7230a8c93c93e0c332adbd80b3" translate="yes" xml:space="preserve">
          <source>A list of supported languages:</source>
          <target state="translated">Список поддерживаемых языков:</target>
        </trans-unit>
        <trans-unit id="e40d447e08990d74eae8cd3ddd81a8849e285293" translate="yes" xml:space="preserve">
          <source>Analyze a folder recursively: lizard mahjong_game/src</source>
          <target state="translated">Рекурсивно проанализировать папку:lizard mahjong_game/src</target>
        </trans-unit>
        <trans-unit id="40d6f10f3765aa78647963b0566b3b7b88c0b439" translate="yes" xml:space="preserve">
          <source>By default lizard will search for any source code that it knows and mix
all the results together. This might not be what you want. You can use
the &amp;ldquo;-l&amp;rdquo; option to select language(s).</source>
          <target state="translated">По умолчанию ящерица будет искать любой известный ей исходный код и смешивать все результаты вместе. Возможно, это не то, что вам нужно. Вы можете использовать опцию &amp;laquo;-l&amp;raquo; для выбора языка (ов).</target>
        </trans-unit>
        <trans-unit id="fdd9f6f4ddb4f227c3c467e72333ae4b2df17140" translate="yes" xml:space="preserve">
          <source>C# (C Sharp)</source>
          <target state="translated">C#(C Sharp)</target>
        </trans-unit>
        <trans-unit id="b5a4ad577851c1a6b0d795dd6dd6df987b0aec97" translate="yes" xml:space="preserve">
          <source>C/C++ (works with C++14)</source>
          <target state="translated">C/C++(работает с C++14)</target>
        </trans-unit>
        <trans-unit id="88a7b0f5a508888922c3e98ceaba377130a95d08" translate="yes" xml:space="preserve">
          <source>C/C++ digraphs and trigraphs are not recognized.</source>
          <target state="translated">Диграфы и триграфы на С/С++не распознаются.</target>
        </trans-unit>
        <trans-unit id="57ae41e7d8dfd70ec4e252da63836bf7e6ae9eeb" translate="yes" xml:space="preserve">
          <source>C/C++ preprocessing or macro expansion is not performed.
For example, using macro instead of parentheses (or partial statements in macros)
can confuse Lizard&amp;rsquo;s bracket stacks.</source>
          <target state="translated">Предварительная обработка C / C ++ или расширение макроса не выполняется. Например, использование макроса вместо круглых скобок (или частичных операторов в макросах) может запутать стеки скобок Lizard.</target>
        </trans-unit>
        <trans-unit id="e4f5f2d7cddef0e3ac846cc48280b54dc659561e" translate="yes" xml:space="preserve">
          <source>CCN (cyclomatic complexity number),</source>
          <target state="translated">CCN (цикломатический номер сложности),</target>
        </trans-unit>
        <trans-unit id="32893b27b7c12b31474f093e2f7ae9ce4a8b626d" translate="yes" xml:space="preserve">
          <source>Code Duplicate Detector</source>
          <target state="translated">Детектор дубликатов кода</target>
        </trans-unit>
        <trans-unit id="f512304d03f852e06827dbb0cbc041e34ca895b2" translate="yes" xml:space="preserve">
          <source>Example use</source>
          <target state="translated">Пример использования</target>
        </trans-unit>
        <trans-unit id="09013b516144cde37e2db5e9d19b0c84415b898d" translate="yes" xml:space="preserve">
          <source>Exclude anything in the tests folder:</source>
          <target state="translated">Исключите все,что есть в папке &quot;Тесты&quot;:</target>
        </trans-unit>
        <trans-unit id="7b1d31545d25a8ff0739fcb82ed07fc8217010e2" translate="yes" xml:space="preserve">
          <source>GDScript</source>
          <target state="translated">GDScript</target>
        </trans-unit>
        <trans-unit id="bc90a8d69a5eb29c60c360936f02d6e079c75ea9" translate="yes" xml:space="preserve">
          <source>Generate A Tag Cloud For Your Code</source>
          <target state="translated">Сгенерируйте &quot;Облако меток&quot; для вашего кода.</target>
        </trans-unit>
        <trans-unit id="f44271afeb31f1a23929417cd0baede5654047bc" translate="yes" xml:space="preserve">
          <source>Generated code</source>
          <target state="translated">Сгенерированный код</target>
        </trans-unit>
        <trans-unit id="92f4645da18d229c1e99797e4ee0203092e4c3ed" translate="yes" xml:space="preserve">
          <source>Golang</source>
          <target state="translated">Голанг</target>
        </trans-unit>
        <trans-unit id="54522674580f2442376555fe16e90983bf48c69d" translate="yes" xml:space="preserve">
          <source>If for some reason you would like to ignore the warnings, you can use
the whitelist. Add &amp;lsquo;whitelizard.txt&amp;rsquo; to the current folder (or use -W to point to the whitelist file), then the
functions defined in the file will be ignored. Please notice that if you assign the file pathname, it needs to
be exactly the same relative path as Lizard to find the file. An easy way to get the file pathname is to copy it from
the Lizard warning output.
This is an example whitelist:</source>
          <target state="translated">Если по какой-то причине вы хотите игнорировать предупреждения, вы можете использовать белый список. Добавьте whitelizard.txt в текущую папку (или используйте -W, чтобы указать на файл белого списка), тогда функции, определенные в файле, будут проигнорированы. Обратите внимание, что если вы назначаете путь к файлу, он должен быть точно таким же относительным путем, что и Lizard, чтобы найти файл. Легкий способ получить путь к файлу - скопировать его из вывода предупреждения Lizard. Это пример белого списка:</target>
        </trans-unit>
        <trans-unit id="02d3e88b0d3817983233fc047cd979ee47c36c58" translate="yes" xml:space="preserve">
          <source>If you want a proper install:</source>
          <target state="translated">Если вы хотите правильную установку:</target>
        </trans-unit>
        <trans-unit id="62af59146478e88bdd3e80610da3eccae935bcdd" translate="yes" xml:space="preserve">
          <source>In addition to asserting the correct code,
Lizard may choose not to deal with some advanced or complicated language features:</source>
          <target state="translated">В дополнение к утверждению правильного кода,Lizard может решить не иметь дело с некоторыми продвинутыми или сложными функциями языка:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="c5a3f877dd969ee461f2139db720f853d8044b93" translate="yes" xml:space="preserve">
          <source>It counts</source>
          <target state="translated">Это считается</target>
        </trans-unit>
        <trans-unit id="ab215c3828ac7b54bfef79da0460d772ff78b43f" translate="yes" xml:space="preserve">
          <source>It requires python2.7 or above (early versions are not verified).</source>
          <target state="translated">Требуется python2.7 или выше (ранние версии не проверяются).</target>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">Java</target>
        </trans-unit>
        <trans-unit id="47e03525c9e85607423e9fd8db32266824bc1d3d" translate="yes" xml:space="preserve">
          <source>JavaScript (With ES6 and JSX)</source>
          <target state="translated">JavaScript (с ES6 и JSX)</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Ограничения</target>
        </trans-unit>
        <trans-unit id="9b5e7e84d2ab1c8d949c5b0be56776ef3dca72fb" translate="yes" xml:space="preserve">
          <source>Literatures Referring to Lizard</source>
          <target state="translated">Литературы со ссылкой на ящерицу</target>
        </trans-unit>
        <trans-unit id="bcb2ff65ba49568fd9ea9fb5c2c50d41b3d181a3" translate="yes" xml:space="preserve">
          <source>Lizard guarantees to terminate eventually (i.e., no forever loops, hangs)
without hard failures (e.g., exit, crash, exceptions).</source>
          <target state="translated">Ящерица гарантирует окончательное завершение (т.е.отсутствие вечных петель,зависание)без жестких сбоев (например,выход,авария,исключения).</target>
        </trans-unit>
        <trans-unit id="1c7a77155264c4da8d933c76d382399454a4a2d3" translate="yes" xml:space="preserve">
          <source>Lizard has a simple solution with generated code. Any code in a source file that is following
a comment containing &amp;ldquo;GENERATED CODE&amp;rdquo; will be ignored completely. The ignored code will not
generate any data, except the file counting.</source>
          <target state="translated">У Lizard есть простое решение с сгенерированным кодом. Любой код в исходном файле, следующий за комментарием, содержащим &amp;laquo;GENERATED CODE&amp;raquo;, будет полностью проигнорирован. Игнорируемый код не будет генерировать никаких данных, кроме подсчета файлов.</target>
        </trans-unit>
        <trans-unit id="3a7ff4a6637140c4c5f0c9265d18edb9c6796968" translate="yes" xml:space="preserve">
          <source>Lizard is also used as a plugin for fastlane to help check code complexity and submit xml report to sonar.</source>
          <target state="translated">Lizard также используется как плагин для fastlane,чтобы помочь проверить сложность кода и отправить xml отчет в сонар.</target>
        </trans-unit>
        <trans-unit id="a9889069de5b33ce1949d38f7939a1daa737cbe9" translate="yes" xml:space="preserve">
          <source>Lizard is an extensible Cyclomatic Complexity Analyzer for many programming languages
including C/C++ (doesn&amp;rsquo;t require all the header files or Java imports). It also does
copy-paste detection (code clone detection/code duplicate detection) and many other forms of static
code analysis.</source>
          <target state="translated">Lizard - это расширяемый Cyclomatic Complexity Analyzer для многих языков программирования, включая C / C ++ (не требует всех файлов заголовков или импорта Java). Он также выполняет обнаружение копирования и вставки (обнаружение клонов кода / обнаружение дубликатов кода) и многие другие формы статического анализа кода.</target>
        </trans-unit>
        <trans-unit id="cd7398c3de321ef9ef69d7e72f0d8c3061e4ebb0" translate="yes" xml:space="preserve">
          <source>Lizard is often used in software related researches. If you used it to support your work, you may contact the lizard author to add your work in the following list.</source>
          <target state="translated">Ящерица часто используется в исследованиях,связанных с программным обеспечением.Если Вы использовали его для поддержки своей работы,Вы можете связаться с автором ящерицы,чтобы добавить свою работу в следующий список.</target>
        </trans-unit>
        <trans-unit id="26db039a5d52adc6061fc4a35d58d8c16eece7cf" translate="yes" xml:space="preserve">
          <source>Lizard requires syntactically correct code.
Upon processing input with incorrect or unknown syntax:</source>
          <target state="translated">Ящерица требует синтаксически корректного кода.При обработке ввода с некорректным или неизвестным синтаксисом:</target>
        </trans-unit>
        <trans-unit id="b0832074630eb731d7fbe8074de48a90cd9bb220" translate="yes" xml:space="preserve">
          <source>Lua</source>
          <target state="translated">Луа</target>
        </trans-unit>
        <trans-unit id="9cf4af30df052d80876381f9ec0e05811ecd3d08" translate="yes" xml:space="preserve">
          <source>Objective-C</source>
          <target state="translated">Цель-С</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Варианты</target>
        </trans-unit>
        <trans-unit id="04298e88259772f6ef3523e4df26c77589975627" translate="yes" xml:space="preserve">
          <source>Options in Comments</source>
          <target state="translated">Опции в комментариях</target>
        </trans-unit>
        <trans-unit id="7396e9740257da2a574bab976a945d545790bcfa" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve got the source:</source>
          <target state="translated">Или, если у вас есть источник:</target>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="translated">PHP</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Питон</target>
        </trans-unit>
        <trans-unit id="b217e98c3bf70f3cf4633a5447d6587eea974ba1" translate="yes" xml:space="preserve">
          <source>Ruby</source>
          <target state="translated">Ruby</target>
        </trans-unit>
        <trans-unit id="86c040b1e97657b2d3964167ab34f981802a0be5" translate="yes" xml:space="preserve">
          <source>Run for the code under current folder (recursively):</source>
          <target state="translated">Запустите код в текущей папке (рекурсивно):</target>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="translated">Ржавчина</target>
        </trans-unit>
        <trans-unit id="45c7613636e05b259be1f22ccf0dd23216b205b7" translate="yes" xml:space="preserve">
          <source>S Martin-Haugh et al 2017 J. Phys.: Conf. Ser. 898 072011</source>
          <target state="translated">Мартин Хо и др.2017 Дж.Физ..:Конф.Ser.898 072011</target>
        </trans-unit>
        <trans-unit id="7b7e70bcf209a5323526033a9cbf768a3ae70c2c" translate="yes" xml:space="preserve">
          <source>Scala</source>
          <target state="translated">Скала</target>
        </trans-unit>
        <trans-unit id="b21ecc0ae732fd9bd16d29a7b6c64cb80d845324" translate="yes" xml:space="preserve">
          <source>Set warning threshold for any field:lizard -T nloc=25</source>
          <target state="translated">Установите порог предупреждения для любого поля:ящерица -T nloc=25</target>
        </trans-unit>
        <trans-unit id="86d872481c91595b93c36cffca8d2e52cc3efaef" translate="yes" xml:space="preserve">
          <source>Software Quality in the ATLAS experiment at CERN, which refers to Lizard as one of the tools, has been published in the Journal of Physics: &lt;a href=&quot;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/072011&quot;&gt;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/072011&lt;/a&gt;</source>
          <target state="translated">Качество программного обеспечения в эксперименте ATLAS в ЦЕРН, в котором Lizard упоминается как один из инструментов, было опубликовано в Journal of Physics: &lt;a href=&quot;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/072011&quot;&gt;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/ 072011&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28a17ad37e71f81e9c0d5427abc0df86df8c085a" translate="yes" xml:space="preserve">
          <source>Some C++ complicated templates may cause confusion with matching angle brackets
and processing less-than</source>
          <target state="translated">Некоторые сложные шаблоны C++могут вызвать путаницу с подходящими угловыми скобками и обработкой меньше чем</target>
        </trans-unit>
        <trans-unit id="112ab020698e5fc0f4baecd7821a512d8c419a69" translate="yes" xml:space="preserve">
          <source>Swift</source>
          <target state="translated">Свифт</target>
        </trans-unit>
        <trans-unit id="bde060882217fa0e83f37c32f97f1a211d55c994" translate="yes" xml:space="preserve">
          <source>TTCN-3</source>
          <target state="translated">TTCN-3</target>
        </trans-unit>
        <trans-unit id="8d9594a87362ce1971b7a9efe4bfc116ba95e426" translate="yes" xml:space="preserve">
          <source>The option</source>
          <target state="translated">Опция</target>
        </trans-unit>
        <trans-unit id="64abd3b6390856b7d22bfc87511d76239240b912" translate="yes" xml:space="preserve">
          <source>There is a chance of a combination of the following soft failures:</source>
          <target state="translated">Существует вероятность сочетания следующих мягких сбоев:</target>
        </trans-unit>
        <trans-unit id="35be59e2cbeb3ee6d6b278b4d4492105893fa6f5" translate="yes" xml:space="preserve">
          <source>This approach makes the Lizard implementation
simpler and more focused with partial parsers for various languages.
Developers of Lizard attempt to minimize the possibility of soft failures.
Hard failures are bugs in Lizard code,
while soft failures are trade-offs or potential bugs.</source>
          <target state="translated">Такой подход делает реализацию Lizard более простой и сфокусированной с помощью частичных парсеров для различных языков.Разработчики Lizard стараются минимизировать возможность мягких сбоев.Жесткие ошибки-это ошибки в коде Lizard,в то время как мягкие ошибки-это компромиссы или потенциальные ошибки.</target>
        </trans-unit>
        <trans-unit id="8c6aa4373adbf8bb2d71b73205e8e23d92994d34" translate="yes" xml:space="preserve">
          <source>This tool actually calculates how complex the code &amp;lsquo;looks&amp;rsquo; rather than
how complex the code really &amp;lsquo;is&amp;rsquo;. People will need this tool because it&amp;rsquo;s
often very hard to get all the included folders and files right when
they are complicated. But we don&amp;rsquo;t really need that kind of accuracy for
cyclomatic complexity.</source>
          <target state="translated">Этот инструмент фактически вычисляет, насколько сложным &amp;laquo;выглядит&amp;raquo; код, а не насколько сложен код на самом деле. Людям понадобится этот инструмент, потому что часто бывает очень сложно получить все включенные папки и файлы, когда они сложные. Но нам действительно не нужна такая точность для цикломатической сложности.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="e1954e5a6810fffdfe2f4a4a2e217be50df15ee1" translate="yes" xml:space="preserve">
          <source>Using lizard as Python module</source>
          <target state="translated">Использование ящерицы в качестве модуля Python.</target>
        </trans-unit>
        <trans-unit id="1d7c30a21399a364397fa7985421ca30e8154905" translate="yes" xml:space="preserve">
          <source>Warnings only (in clang/gcc formation):lizard -w mahjong_game</source>
          <target state="translated">Только предупреждения (в строю clang/gcc):ящерица -w mahjong_game</target>
        </trans-unit>
        <trans-unit id="53c2ad308e416567345ed5fac7c4f48b8609157c" translate="yes" xml:space="preserve">
          <source>Whitelist</source>
          <target state="translated">Белый список</target>
        </trans-unit>
        <trans-unit id="fe319fa0895a7f47e55075d55fc2289e3b3f2bea" translate="yes" xml:space="preserve">
          <source>You can also do</source>
          <target state="translated">Вы также можете сделать</target>
        </trans-unit>
        <trans-unit id="bb0f5d983c9e19bc254a483cb8df48293893cb30" translate="yes" xml:space="preserve">
          <source>You can also use lizard as a Python module in your code:</source>
          <target state="translated">Вы также можете использовать ящерицу в качестве модуля Python в своем коде:</target>
        </trans-unit>
        <trans-unit id="df5cbe243a1ca73de122ac671f8ad550d8a10176" translate="yes" xml:space="preserve">
          <source>You can also use source code string instead of file. But you need to
provide a file name (to identify the language).</source>
          <target state="translated">Вы также можете использовать строку исходного кода вместо файла.Но вам необходимо указать имя файла (для идентификации языка).</target>
        </trans-unit>
        <trans-unit id="9968bd0e3032aa2f78e02320c117ac09d256ce47" translate="yes" xml:space="preserve">
          <source>You can generate a &amp;ldquo;Tag cloud&amp;rdquo; of your code by the following command. It counts the identifiers in your code (ignoring the comments).</source>
          <target state="translated">Вы можете создать &amp;laquo;облако тегов&amp;raquo; своего кода с помощью следующей команды. Он считает идентификаторы в вашем коде (игнорируя комментарии).</target>
        </trans-unit>
        <trans-unit id="a8231394358a7d905280f809bf35ea57b0d6c685" translate="yes" xml:space="preserve">
          <source>You can set limitation for CCN (-C), the number of parameters (-a).
Functions that exceed these limitations will generate warnings. The exit
code of lizard will be none-Zero if there are warnings.</source>
          <target state="translated">Вы можете установить ограничение для CCN (-С),количество параметров (-а).Функции,которые превышают эти ограничения,будут выдавать предупреждения.При наличии предупреждений код выхода ящерицы будет не нулевым.</target>
        </trans-unit>
        <trans-unit id="1d07f3fe906fe382d9f570cce1c9831990175053" translate="yes" xml:space="preserve">
          <source>You can use options in the comments of the source code to change the
behavior of lizard. By putting &amp;ldquo;#lizard forgives&amp;rdquo; inside a function or
before a function it will suppress the warning for that function.</source>
          <target state="translated">Вы можете использовать параметры в комментариях к исходному коду, чтобы изменить поведение ящерицы. Помещая &amp;laquo;#lizard forgives&amp;raquo; внутри функции или перед функцией, она подавляет предупреждение для этой функции.</target>
        </trans-unit>
        <trans-unit id="62a951a21fcb352a7c4d589f31e9ea3c64dc21ca" translate="yes" xml:space="preserve">
          <source>fastlane-plugin-lizard</source>
          <target state="translated">фаст-лайн-плагин-ящерица</target>
        </trans-unit>
        <trans-unit id="1623ff3fb2530c0649945a76f60c3e59d33d1f08" translate="yes" xml:space="preserve">
          <source>improper analysis / tally</source>
          <target state="translated">неверный анализ/подсчёт</target>
        </trans-unit>
        <trans-unit id="704e8cab853b9cfebb9ca9f45aa72aeb8aea3a2d" translate="yes" xml:space="preserve">
          <source>is equal to</source>
          <target state="translated">приравнивается к</target>
        </trans-unit>
        <trans-unit id="f4609e4fc56c8df5513a65b313b91cfe77f76d4b" translate="yes" xml:space="preserve">
          <source>lizard.py can be used as a stand alone Python script, most
functionalities are there. You can always use it without any
installation. To acquire all the functionalities of lizard, you will
need a proper install.</source>
          <target state="translated">lizard.py может быть использован как самостоятельный Python скрипт,большинство функциональных возможностей есть.Вы всегда можете использовать его без установки.Для приобретения всех функциональных возможностей lizard.py вам понадобится правильная установка.</target>
        </trans-unit>
        <trans-unit id="70afe4df7ddf6590effac2e0c782192233188368" translate="yes" xml:space="preserve">
          <source>misinterpretation</source>
          <target state="translated">неправильное истолкование</target>
        </trans-unit>
        <trans-unit id="ed4cca949ebe06eec6edf03c2973b1b47d0ecefc" translate="yes" xml:space="preserve">
          <source>omission</source>
          <target state="translated">опущение</target>
        </trans-unit>
        <trans-unit id="4fb57b05012ece7691c9751caecc5d50a72db02a" translate="yes" xml:space="preserve">
          <source>operators
inside of template arguments.</source>
          <target state="translated">операторы внутри шаблонных аргументов.</target>
        </trans-unit>
        <trans-unit id="d93e68c234320b3f9c0a2e8b593a4926750ab240" translate="yes" xml:space="preserve">
          <source>or more-than</source>
          <target state="translated">или более чем</target>
        </trans-unit>
        <trans-unit id="d5609a1b8c8727c27185779d95b6c119f9f77ced" translate="yes" xml:space="preserve">
          <source>parameter count of functions.</source>
          <target state="translated">счетчик параметров функций.</target>
        </trans-unit>
        <trans-unit id="345e9ea7c857e75dedd9edb24c232e1cab297c19" translate="yes" xml:space="preserve">
          <source>sonar</source>
          <target state="translated">сонар</target>
        </trans-unit>
        <trans-unit id="da901d78a1a0e839058600ebff1da48414fe0b0b" translate="yes" xml:space="preserve">
          <source>success (the code under consideration is not relevant, e.g., global macros in C)</source>
          <target state="translated">успех (рассматриваемый код не актуален,например,глобальные макросы в С)</target>
        </trans-unit>
        <trans-unit id="9f93689222a8f9de7484ab15fb1be8a92b2cf878" translate="yes" xml:space="preserve">
          <source>the nloc (lines of code without comments),</source>
          <target state="translated">nloc (строки кода без комментариев),</target>
        </trans-unit>
        <trans-unit id="3f1f1a432c305a51b144e4fad7af4efab87b4a8e" translate="yes" xml:space="preserve">
          <source>to set the limit of the NLOC. Any function that
has NLOC greater than 10 will generate a warning.</source>
          <target state="translated">чтобы установить лимит NLOC.Любая функция,имеющая NLOC больше 10,выдаст предупреждение.</target>
        </trans-unit>
        <trans-unit id="1d8e61b907e133c3825d97606a570dacee8c2fc5" translate="yes" xml:space="preserve">
          <source>token count of functions.</source>
          <target state="translated">символический подсчет функций.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
