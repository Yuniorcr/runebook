<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/mirobot-py/">
    <body>
      <group id="mirobot-py">
        <trans-unit id="362025236ef642c6b751ee681f51209de39b7060" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;Matthew's library&lt;/a&gt; takes the traditional approach to recieving output from the robot as they appear. Basically this replicates the live terminal feedback in a client similar to Wlkata's Studio program. The original code has a thread listening the background for new messages and displays them as they appear.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;Библиотека Мэтью&lt;/a&gt; использует традиционный подход к получению вывода от робота по мере его появления. По сути, это воспроизводит обратную связь с терминалом в реальном времени в клиенте, аналогичном программе Wlkata Studio. В исходном коде есть поток, который прослушивает фон для новых сообщений и отображает их по мере их появления.</target>
        </trans-unit>
        <trans-unit id="a17c36d438ad8622c804ab3519ec91865c391827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mirobot&lt;/code&gt; is a python module that can be used to control the &lt;a href=&quot;http://www.wlkata.com/site/index.html&quot;&gt;WLkata Mirobot&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; - это модуль Python, который можно использовать для управления &lt;a href=&quot;http://www.wlkata.com/site/index.html&quot;&gt;WLkata Mirobot.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8afa3c0c2ad7485fc26a2a95e3990ba726705a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mirobot&lt;/code&gt; requires Python &amp;gt;= 3.6. Use &lt;code&gt;pip3&lt;/code&gt; to install it:</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; требует Python&amp;gt; = 3.6. Используйте &lt;code&gt;pip3&lt;/code&gt; для его установки:</target>
        </trans-unit>
        <trans-unit id="23f40b725ca4c86b9fe54ff02b310fea19490a95" translate="yes" xml:space="preserve">
          <source>A Python interface library for WKlata's Mirobot</source>
          <target state="translated">Библиотека интерфейса Python для Mirobot WKlata.</target>
        </trans-unit>
        <trans-unit id="afb73331b2572947237b16f9ce516386484f6c17" translate="yes" xml:space="preserve">
          <source>And that's it! Now if you want to save keystrokes, here's a even more minimal version:</source>
          <target state="translated">И всё! Теперь,если вы хотите сохранить нажатия клавиш,вот еще более минимальная версия:</target>
        </trans-unit>
        <trans-unit id="9389fb235c0e40f0d6714cb38b6338207f4f91ec" translate="yes" xml:space="preserve">
          <source>Big thanks to Mattew Wachter for laying down the framework for this library-- please check out his links below:</source>
          <target state="translated">Большое спасибо Мэттью Вахтеру за то,что он заложил основу этой библиотеки-пожалуйста,ознакомьтесь с его ссылками ниже:</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Кредиты</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>
        </trans-unit>
        <trans-unit id="e8a60d9416df2c4413a94ab176f954f4add08ba4" translate="yes" xml:space="preserve">
          <source>Differences from source repository</source>
          <target state="translated">Отличия от репозитория источника</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Документация</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">Пример использования</target>
        </trans-unit>
        <trans-unit id="f2972a004a2cd00b7b0ab7e2bd7312f929551f3e" translate="yes" xml:space="preserve">
          <source>In the end, while developing this approach to error responsibility, I realized that this would probably not suit everyone's needs-- sometimes people just want a live feed of output. That is why I think Matthew's continued work would be great for the community. I don't want this repository and its beliefs to consume another. I also do not see a way to combine both approaches-- they are inherently incompatible at the core level.</source>
          <target state="translated">В конце концов,развивая этот подход к ответственности за ошибки,я понял,что это,наверное,не будет отвечать потребностям каждого-иногда люди просто хотят получить живой поток продукции.Вот почему я думаю,что продолжение работы Мэтью было бы здорово для общества.Я не хочу,чтобы этот репозиторий и его убеждения поглощали другой.Я также не вижу способа объединить оба подхода-они по своей сути несовместимы на уровне ядра.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="7c8493cf9aba35c8dea23fc91c483c0e2886798d" translate="yes" xml:space="preserve">
          <source>It is my belief that people who are looking to do significant scripting and logic-testing routines will benefit greatly from this library. People who are looking to use a CLI-friendly framework should instead use Matthew's &lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;&lt;code&gt;py-mirobot&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">Я верю, что люди, которые хотят создавать важные сценарии и процедуры тестирования логики, получат большую пользу от этой библиотеки. Людям, которые хотят использовать среду с интерфейсом командной строки, следует использовать библиотеку Matthew &lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt; &lt;code&gt;py-mirobot&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="a1b9ee166c86baccfbab5d0551c3b7661bee5648" translate="yes" xml:space="preserve">
          <source>License: &lt;a href=&quot;https://github.com/rirze/mirobot-py/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;</source>
          <target state="translated">Лицензия: &lt;a href=&quot;https://github.com/rirze/mirobot-py/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0d5980b800d0dc1b1982551f33943af7bbebfb" translate="yes" xml:space="preserve">
          <source>Make sure to &lt;strong&gt;not&lt;/strong&gt; install the &lt;code&gt;mirobot&lt;/code&gt; package-- that package is unrelated to this one.</source>
          <target state="translated">Убедитесь, что вы &lt;strong&gt;не&lt;/strong&gt; устанавливаете пакет &lt;code&gt;mirobot&lt;/code&gt; - этот пакет не имеет отношения к этому.</target>
        </trans-unit>
        <trans-unit id="d01c2d48eaec7523f72c7389d6756e2910114cf3" translate="yes" xml:space="preserve">
          <source>Many of the functions and structures in this library are documented. The documentation is hosted &lt;a href=&quot;https://rirze.github.io/mirobot-py/&quot;&gt;here&lt;/a&gt;. If anything is unclear in the docs, please open a Github issue.</source>
          <target state="translated">Многие функции и структуры этой библиотеки задокументированы. Документация размещена &lt;a href=&quot;https://rirze.github.io/mirobot-py/&quot;&gt;здесь&lt;/a&gt; . Если в документации что-то неясно, пожалуйста, откройте проблему на Github.</target>
        </trans-unit>
        <trans-unit id="60e4a7e9c69c428a2a0ca9dea63e556a01264850" translate="yes" xml:space="preserve">
          <source>Matthew Wachter</source>
          <target state="translated">Мэтью Вахтер</target>
        </trans-unit>
        <trans-unit id="c356ca9f0745648468b1e7bd350cf44080c0d7b9" translate="yes" xml:space="preserve">
          <source>Reasons to fork (and not merge upstream)</source>
          <target state="translated">Причины вилки (и не слияния вверх по течению)</target>
        </trans-unit>
        <trans-unit id="7439c4a034ab3fedb79765047a4b14d30c04e941" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mirobot&lt;/code&gt; class can detect existing open serial ports and &quot;guess&quot; which one to use as the Mirobot. There's no need to specify a portname for most cases!</source>
          <target state="translated">Класс &lt;code&gt;Mirobot&lt;/code&gt; может обнаруживать существующие открытые последовательные порты и &amp;laquo;угадывать&amp;raquo;, какой из них использовать в качестве Mirobot. В большинстве случаев указывать имя порта не требуется!</target>
        </trans-unit>
        <trans-unit id="e4deffc302c6e805cc8803dbc9b1dd7d562b14cf" translate="yes" xml:space="preserve">
          <source>This library uses the G code protocol to communicate with the Mirobot over a serial connection. The official &lt;strong&gt;G code instruction set&lt;/strong&gt; and &lt;strong&gt;driver download&lt;/strong&gt; for the Mirobot can be found at the &lt;a href=&quot;http://www.wlkata.com/site/downloads.html&quot;&gt;WLkata Download Page&lt;/a&gt;</source>
          <target state="translated">Эта библиотека использует протокол G-кода для связи с Mirobot через последовательное соединение. Официальный &lt;strong&gt;набор инструкций G-кода&lt;/strong&gt; и &lt;strong&gt;загрузка драйвера&lt;/strong&gt; для Mirobot можно найти на &lt;a href=&quot;http://www.wlkata.com/site/downloads.html&quot;&gt;странице загрузки WLkata.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c5c7ece530ede971ca700ba24973f87ece75417" translate="yes" xml:space="preserve">
          <source>This repository intends to take a more programmatic approach to this behavior. Specifically it narrows down the path to responsibility by explicitly pairing each command to its output. In a stream-messages-as-they-come approach to output messaging, it is not clear (or atleast easy) to determine which command failed and how to ensure scripts stop execution at exactly the point of failure (and not after). That is why each instruction in this library has a dedicated output, ensuring success and having its own message output as a return value. This approach is a lot harder to construct and relies on adapting to the idiosyncrasies of gcode and Mirobot programming.</source>
          <target state="translated">Этот репозиторий намерен использовать более программный подход к такому поведению.В частности,он сужает путь к ответственности,явно связывая каждую команду с ее выводом.В потоковом подходе к выводу сообщений (stream-messages-as-they-come)непонятно (или,по крайней мере,просто),как определить,какая команда провалилась и как обеспечить,чтобы сценарии останавливали выполнение именно в точке провала (а не после).Поэтому каждая команда в этой библиотеке имеет свой собственный вывод,обеспечивающий успех и имеющий свой собственный вывод сообщения в качестве возвращаемого значения.Такой подход гораздо сложнее построить и опирается на адаптацию к идиосинкразии программирования gcode и Mirobot.</target>
        </trans-unit>
        <trans-unit id="85d96bf4f4b7ec862016aae49d12e3351453f180" translate="yes" xml:space="preserve">
          <source>VT Pro Design</source>
          <target state="translated">VT Pro дизайн</target>
        </trans-unit>
        <trans-unit id="dee403b61717691c434f2d196144026802c27fec" translate="yes" xml:space="preserve">
          <source>While based of the same code initially, this repository has developed in a different direction with opinionated views on how one should use a robotics library. Specifically, there is the problem of 'output' when operating a gcode-programmed machine like Mirobot.</source>
          <target state="translated">Хотя изначально этот репозиторий был основан на одном и том же коде,он развивался в другом направлении и имел свое видение того,как следует использовать библиотеку робототехники.В частности,существует проблема &quot;вывода&quot; при работе с машиной,запрограммированной на gcod,такой как Mirobot.</target>
        </trans-unit>
        <trans-unit id="deeea39e2cbd3497d1ef37331ccf63692811f1ff" translate="yes" xml:space="preserve">
          <source>mirobot</source>
          <target state="translated">миробот</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
