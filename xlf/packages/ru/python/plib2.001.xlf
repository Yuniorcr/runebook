<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/plib2/">
    <body>
      <group id="plib2">
        <trans-unit id="51a9d260d58e8b4e071b451493e05f189e15d9fd" translate="yes" xml:space="preserve">
          <source>$PREFIX/bin</source>
          <target state="translated">$PREFIX/bin</target>
        </trans-unit>
        <trans-unit id="50ed463d54bb9cf68b20fa9ad534e16a189ce38c" translate="yes" xml:space="preserve">
          <source>$PREFIX/share/plib/examples</source>
          <target state="translated">$PREFIX/share/plib/examples</target>
        </trans-unit>
        <trans-unit id="3dbfb050ed662aae4c40057f43a5eaa092362b14" translate="yes" xml:space="preserve">
          <source>(the latter does not just
mean synchronous: it includes a forking TCP socket server). Each
I/O mode has a client and server class for both device types, and
a request class for the</source>
          <target state="translated">(the latter does not just mean synchronous: it includes a forking TCP socket server). Each I/O mode has a client and server class for both device types, and a request class for the</target>
        </trans-unit>
        <trans-unit id="0913ba2840fd84787870aaed0b941a06cf44a8d5" translate="yes" xml:space="preserve">
          <source>) will cause the equivalent of the above class
definition to occur on the fly, so that the resulting class appears
in the</source>
          <target state="translated">) will cause the equivalent of the above class definition to occur on the fly, so that the resulting class appears in the</target>
        </trans-unit>
        <trans-unit id="df4a7e1901e37c2e46ea67b728270b736fa86ed7" translate="yes" xml:space="preserve">
          <source>), equivalents are provided. (The equivalent
implementation of</source>
          <target state="translated">), equivalents are provided. (The equivalent implementation of</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>,
and</source>
          <target state="translated">, Ð¸</target>
        </trans-unit>
        <trans-unit id="265dee17983e77b8cf6e16edf0bbe4fd66a5499a" translate="yes" xml:space="preserve">
          <source>, to deal with data as it comes in,
and</source>
          <target state="translated">, to deal with data as it comes in, and</target>
        </trans-unit>
        <trans-unit id="f6725ca1442126f56353136257c5007c6e5e15ff" translate="yes" xml:space="preserve">
          <source>, to determine when the I/O channel should be
closed. (To see examples of all this in action, look at the test
suite in</source>
          <target state="translated">, to determine when the I/O channel should be closed. (To see examples of all this in action, look at the test suite in</target>
        </trans-unit>
        <trans-unit id="bced7b20523345b297cddba6a42fdf2e806b32b3" translate="yes" xml:space="preserve">
          <source>, with a common API. This
module also includes the contents of the</source>
          <target state="translated">, with a common API. This module also includes the contents of the</target>
        </trans-unit>
        <trans-unit id="65c3cb6ed9db87773b5beccfdb0c332279a5f4c7" translate="yes" xml:space="preserve">
          <source>, you need to call this function somewhere in your
code (but only once); future versions may automagically
invoke it as long as you import anything from</source>
          <target state="translated">, you need to call this function somewhere in your code (but only once); future versions may automagically invoke it as long as you import anything from</target>
        </trans-unit>
        <trans-unit id="dda7d71f7f92f38446743ffbe0194fe3bae17f8f" translate="yes" xml:space="preserve">
          <source>.
The first of these detects the end of a received message by a
shutdown of the other end of the data channel, but keeps the channel
open to allow further writes (all the other classes default to
closing the channel when the other end closes). The other two
classes allow the detection of multiple &amp;ldquo;messages&amp;rdquo; in the data
stream, either by detecting a &amp;ldquo;terminator&amp;rdquo; string or by having
each message include its length at the beginning. These classes
also format outgoing messages the same way.</source>
          <target state="translated">. The first of these detects the end of a received message by a shutdown of the other end of the data channel, but keeps the channel open to allow further writes (all the other classes default to closing the channel when the other end closes). The other two classes allow the detection of multiple &amp;ldquo;messages&amp;rdquo; in the data stream, either by detecting a &amp;ldquo;terminator&amp;rdquo; string or by having each message include its length at the beginning. These classes also format outgoing messages the same way.</target>
        </trans-unit>
        <trans-unit id="32ed60506704e4594c5301834a9556438cce3e63" translate="yes" xml:space="preserve">
          <source>. Each device type has
a</source>
          <target state="translated">. Each device type has a</target>
        </trans-unit>
        <trans-unit id="83c4b5190e92a1fd0a839d724e1eeaed78afeab1" translate="yes" xml:space="preserve">
          <source>. I
should also note that I have snuck in a few extra
&amp;ldquo;built-ins&amp;rdquo; that are not in the Python standard library but
IMHO should be. :-) See the docstrings for more details.</source>
          <target state="translated">. I should also note that I have snuck in a few extra &amp;ldquo;built-ins&amp;rdquo; that are not in the Python standard library but IMHO should be. :-) See the docstrings for more details.</target>
        </trans-unit>
        <trans-unit id="338bcb0d0b4f6443c09736e45408c62579701cfd" translate="yes" xml:space="preserve">
          <source>. The</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="5ca8c166686085965724f80a694ce34893d84850" translate="yes" xml:space="preserve">
          <source>; as a consequence, a number
of functions are now removed from the</source>
          <target state="translated">; as a consequence, a number of functions are now removed from the</target>
        </trans-unit>
        <trans-unit id="50da24ec06bfd768cc428bc7dc9bc781b4c99a4d" translate="yes" xml:space="preserve">
          <source>; calling this function adds
equivalents to the</source>
          <target state="translated">; calling this function adds equivalents to the</target>
        </trans-unit>
        <trans-unit id="821f9dce86ab17c351ae5c1008346f39526c8775" translate="yes" xml:space="preserve">
          <source>; the library module can use the same
mixin classes to implement test functionality for &lt;em&gt;all&lt;/em&gt; of the
different mixes of I/O classes in the test suite.)</source>
          <target state="translated">; the library module can use the same mixin classes to implement test functionality for &lt;em&gt;all&lt;/em&gt; of the different mixes of I/O classes in the test suite.)</target>
        </trans-unit>
        <trans-unit id="892d6757c83421539b45c61597f5927772a1c550" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;API Notes&lt;/em&gt;: One of the goals of this sub-package is to provide a
common, consistent API for all the different types of I/O, so that
switching one specific implementation of a certain functionality
for another can be done transparently to the rest of your application&amp;rsquo;s
code. Thus, all of the usable classes follow the same basic pattern of
mixing in the various pieces of functionality: from left to right
in a class&amp;rsquo;s MRO, one finds the type of endpoint (a client or
server mixin class, which may be specialized to the type of I/O),
the type of data formatting, if any (a mixin class from the</source>
          <target state="translated">&lt;em&gt;API Notes&lt;/em&gt;: One of the goals of this sub-package is to provide a common, consistent API for all the different types of I/O, so that switching one specific implementation of a certain functionality for another can be done transparently to the rest of your application&amp;rsquo;s code. Thus, all of the usable classes follow the same basic pattern of mixing in the various pieces of functionality: from left to right in a class&amp;rsquo;s MRO, one finds the type of endpoint (a client or server mixin class, which may be specialized to the type of I/O), the type of data formatting, if any (a mixin class from the</target>
        </trans-unit>
        <trans-unit id="f6ca1141831dde9f5af27a7f0603b9c8afbd7c7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Automatic Mixins&lt;/em&gt;: To derive your own client or server classes with
alternate data handling &amp;ldquo;by hand&amp;rdquo;, you would need to use the &amp;ldquo;mixin&amp;rdquo;
versions of the appropriate I/O mode classes, and splice the data
handling class into the middle of the base class list; for example:</source>
          <target state="translated">&lt;em&gt;Automatic Mixins&lt;/em&gt;: To derive your own client or server classes with alternate data handling &amp;ldquo;by hand&amp;rdquo;, you would need to use the &amp;ldquo;mixin&amp;rdquo; versions of the appropriate I/O mode classes, and splice the data handling class into the middle of the base class list; for example:</target>
        </trans-unit>
        <trans-unit id="e26c93f8ab14f062f0d8c0b446f849502b78a6cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data Handling&lt;/strong&gt;: the I/O mode classes given above include basic
data handling, but it is &lt;em&gt;very&lt;/em&gt; basic: the only way it can detect
that a &amp;ldquo;message&amp;rdquo; has been fully received is to detect a closed
channel. For some applications this is enough, but often more
sophisticated and robust data handling is needed. The</source>
          <target state="translated">&lt;strong&gt;Data Handling&lt;/strong&gt;: the I/O mode classes given above include basic data handling, but it is &lt;em&gt;very&lt;/em&gt; basic: the only way it can detect that a &amp;ldquo;message&amp;rdquo; has been fully received is to detect a closed channel. For some applications this is enough, but often more sophisticated and robust data handling is needed. The</target>
        </trans-unit>
        <trans-unit id="63a19a187b0e7ff5e0254d9dc5afde4b6dfebbac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Device Types&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Device Types&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="7bd6fe8b99e246cb333214b652e3f48f5c74e703" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I/O modes&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;I/O modes&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="1e4d9883ca99e312e1aa842d0d721766deab4016" translate="yes" xml:space="preserve">
          <source>A namespace package for a number of useful sub-packages and modules.</source>
          <target state="translated">ÐÐ°ÐºÐµÑ Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð° Ð¸Ð¼ÑÐ½ Ð´Ð»Ñ ÑÑÐ´Ð° Ð¿Ð¾Ð»ÐµÐ·Ð½ÑÑ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐ¾Ð² Ð¸ Ð¼Ð¾Ð´ÑÐ»ÐµÐ¹.</target>
        </trans-unit>
        <trans-unit id="26125fe2c9e4c213bed25c3557e46c015dfe77f6" translate="yes" xml:space="preserve">
          <source>BaseClient</source>
          <target state="translated">BaseClient</target>
        </trans-unit>
        <trans-unit id="f9866e9cada1832488dcc9261ae6d8f2d53a9f16" translate="yes" xml:space="preserve">
          <source>BaseRequest</source>
          <target state="translated">BaseRequest</target>
        </trans-unit>
        <trans-unit id="026f1edb9a73c21270fa07051d878263f49be3d8" translate="yes" xml:space="preserve">
          <source>BaseRequestHandler</source>
          <target state="translated">BaseRequestHandler</target>
        </trans-unit>
        <trans-unit id="60b6dced9601ca985b1ceb620f6d52b7380894ea" translate="yes" xml:space="preserve">
          <source>BaseServer</source>
          <target state="translated">BaseServer</target>
        </trans-unit>
        <trans-unit id="e956f9d5f434b67dd92827e9c58472611a2f942e" translate="yes" xml:space="preserve">
          <source>ConfigParser</source>
          <target state="translated">ConfigParser</target>
        </trans-unit>
        <trans-unit id="07a3777a07edd489cd1143bb7e36ead9e46f4bd2" translate="yes" xml:space="preserve">
          <source>Custom element classes: the</source>
          <target state="translated">ÐÐ»Ð°ÑÑÑ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ñ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð²:ÐºÐ»Ð°ÑÑÑ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ñ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð²:ÐºÐ»Ð°ÑÑÑ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ñ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð²:ÐºÐ»Ð°ÑÑÑ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ñ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð²:ÐºÐ»Ð°ÑÑÑ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ðµ</target>
        </trans-unit>
        <trans-unit id="dcf2e14af45e30e7384b89b1aeb49015e8466127" translate="yes" xml:space="preserve">
          <source>Each of the modules in this sub-package contains a single
class with the same name; the</source>
          <target state="translated">ÐÐ°Ð¶Ð´ÑÐ¹ Ð¸Ð· Ð¼Ð¾Ð´ÑÐ»ÐµÐ¹ Ð² Ð´Ð°Ð½Ð½Ð¾Ð¼ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐµ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ Ð¾Ð´Ð¸Ð½ ÐºÐ»Ð°ÑÑ Ñ Ð¾Ð´Ð¸Ð½Ð°ÐºÐ¾Ð²ÑÐ¼ Ð¸Ð¼ÐµÐ½ÐµÐ¼;the</target>
        </trans-unit>
        <trans-unit id="89771ef752b01cbbe30e83dc5c56fbb7195d1959" translate="yes" xml:space="preserve">
          <source>Example Programs</source>
          <target state="translated">ÐÑÐ¸Ð¼ÐµÑÑ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼</target>
        </trans-unit>
        <trans-unit id="3345c5007825a390440efb03e094e1d80f04f720" translate="yes" xml:space="preserve">
          <source>Full and &lt;em&gt;fast&lt;/em&gt; XPATH support: this was key in the XML
application that first prompted me to write this sub-package.
Yes, I know there are plenty of other Python XML packages
that do XPATH; the point is to have it &lt;em&gt;plus&lt;/em&gt; the standard
ElementTree API &lt;em&gt;plus&lt;/em&gt; the speed of</source>
          <target state="translated">Full and &lt;em&gt;fast&lt;/em&gt; XPATH support: this was key in the XML application that first prompted me to write this sub-package. Yes, I know there are plenty of other Python XML packages that do XPATH; the point is to have it &lt;em&gt;plus&lt;/em&gt; the standard ElementTree API &lt;em&gt;plus&lt;/em&gt; the speed of</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Ð£ÑÑÐ°Ð½Ð¾Ð²ÐºÐ°</target>
        </trans-unit>
        <trans-unit id="0ba212651f20e4cfd919485bdafdd9f45502c9b9" translate="yes" xml:space="preserve">
          <source>It allows you to express the layout of your GUI in terms
of Python lists and dicts, enabling a much more declarative
and easy to read (and maintain) coding style.</source>
          <target state="translated">ÐÐ½ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐµÑ Ð²ÑÑÐ°Ð·Ð¸ÑÑ ÐºÐ¾Ð¼Ð¿Ð¾Ð½Ð¾Ð²ÐºÑ Ð²Ð°ÑÐµÐ³Ð¾ GUI Ñ ÑÐ¾ÑÐºÐ¸ Ð·ÑÐµÐ½Ð¸Ñ ÑÐ¿Ð¸ÑÐºÐ¾Ð² Ð¸ ÑÐºÐ°Ð·Ð¾Ð² Python,Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÑ Ð³Ð¾ÑÐ°Ð·Ð´Ð¾ Ð±Ð¾Ð»ÐµÐµ Ð´ÐµÐºÐ»Ð°ÑÐ°ÑÐ¸Ð²Ð½ÑÐ¹ Ð¸ Ð»ÐµÐ³ÐºÐ¸Ð¹ Ð´Ð»Ñ ÑÑÐµÐ½Ð¸Ñ (Ð¸ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶Ð°Ð½Ð¸Ñ)ÑÑÐ¸Ð»Ñ ÐºÐ¾Ð´Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ.</target>
        </trans-unit>
        <trans-unit id="22dd16dbf9778954efe2a872482f9917fed979ff" translate="yes" xml:space="preserve">
          <source>It lets the same high-level code work with a number of
different underlying GUI toolkits. Currently supported:
Qt (versions 3 and 4), KDE (versions 3 and 4), wxWidgets,
and GTK. (The original reason for writing this sub-package
was that wxWidgets doesn&amp;rsquo;t use Qt and I like the Qt/KDE
widgets better, but I wanted code that would run
cross-platform.)</source>
          <target state="translated">It lets the same high-level code work with a number of different underlying GUI toolkits. Currently supported: Qt (versions 3 and 4), KDE (versions 3 and 4), wxWidgets, and GTK. (The original reason for writing this sub-package was that wxWidgets doesn&amp;rsquo;t use Qt and I like the Qt/KDE widgets better, but I wanted code that would run cross-platform.)</target>
        </trans-unit>
        <trans-unit id="8acb4f1a53ad0e32454267c61a794bb3188be2c6" translate="yes" xml:space="preserve">
          <source>Mixin</source>
          <target state="translated">Mixin</target>
        </trans-unit>
        <trans-unit id="d4ab0edb00ff2a963b07c6f90290bbf681c0076a" translate="yes" xml:space="preserve">
          <source>ModuleProxy</source>
          <target state="translated">ModuleProxy</target>
        </trans-unit>
        <trans-unit id="02a2f7ec72c2c475beceefc64691fb81f880cb7a" translate="yes" xml:space="preserve">
          <source>NOTE: This is the &amp;ldquo;legacy&amp;rdquo; version of PLIB, with support
for older versions of Python (those that require any of
the &amp;ldquo;backported&amp;rdquo; implementations of builtins and standard
library functionality that PLIB provides). This version
will not receive any future updates except for critical
bug fixes, if any.</source>
          <target state="translated">NOTE: This is the &amp;ldquo;legacy&amp;rdquo; version of PLIB, with support for older versions of Python (those that require any of the &amp;ldquo;backported&amp;rdquo; implementations of builtins and standard library functionality that PLIB provides). This version will not receive any future updates except for critical bug fixes, if any.</target>
        </trans-unit>
        <trans-unit id="2f2661be42a45f9b088f8e8eb1c438045aaed8c1" translate="yes" xml:space="preserve">
          <source>Note that the GTK toolkit support in this sub-package is
&amp;ldquo;experimental&amp;rdquo; and may be removed if it proves to be more
trouble than it&amp;rsquo;s worth. It&amp;rsquo;s currently included because
wxWidgets&amp;rsquo; behavior when using GTK as its underlying GUI
framework has some quirks that I haven&amp;rsquo;t been able to work
around yet. However, the GTK implementation of a number of
widgets (particularly tables and list/tree views) is much
less capable than the wxWidgets one, so the Python code for
GTK ends up relying much more on ugly hacks.</source>
          <target state="translated">Note that the GTK toolkit support in this sub-package is &amp;ldquo;experimental&amp;rdquo; and may be removed if it proves to be more trouble than it&amp;rsquo;s worth. It&amp;rsquo;s currently included because wxWidgets&amp;rsquo; behavior when using GTK as its underlying GUI framework has some quirks that I haven&amp;rsquo;t been able to work around yet. However, the GTK implementation of a number of widgets (particularly tables and list/tree views) is much less capable than the wxWidgets one, so the Python code for GTK ends up relying much more on ugly hacks.</target>
        </trans-unit>
        <trans-unit id="d5d3297d854af6b2ebc6ab92336d1a487e0475cd" translate="yes" xml:space="preserve">
          <source>Other than selecting the toolkit (which may not be necessary:
the main module of the sub-package can &amp;lsquo;auto-detect&amp;rsquo; which
toolkit to use&amp;ndash;the</source>
          <target state="translated">Other than selecting the toolkit (which may not be necessary: the main module of the sub-package can &amp;lsquo;auto-detect&amp;rsquo; which toolkit to use&amp;ndash;the</target>
        </trans-unit>
        <trans-unit id="0890abb96dcc52fe2f686cc4b36e5f7e1a38efc5" translate="yes" xml:space="preserve">
          <source>PLIB comes with example programs that illustrate key features
of the package. After installation, these can be found in the</source>
          <target state="translated">PLIB Ð¿Ð¾ÑÑÐ°Ð²Ð»ÑÐµÑÑÑ Ñ Ð¿ÑÐ¸Ð¼ÐµÑÐ°Ð¼Ð¸ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼,ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¸Ð»Ð»ÑÑÑÑÐ¸ÑÑÑÑ Ð¾ÑÐ½Ð¾Ð²Ð½ÑÐµ ÑÐ°ÑÐ°ÐºÑÐµÑÐ¸ÑÑÐ¸ÐºÐ¸ Ð¿Ð°ÐºÐµÑÐ°.ÐÐ¾ÑÐ»Ðµ ÑÑÑÐ°Ð½Ð¾Ð²ÐºÐ¸ Ð¸Ñ Ð¼Ð¾Ð¶Ð½Ð¾ Ð½Ð°Ð¹ÑÐ¸ Ð²</target>
        </trans-unit>
        <trans-unit id="dfdf10fb77f5031ba5d999c9f9c976e7df2c3cac" translate="yes" xml:space="preserve">
          <source>PLIB.CLASSES</source>
          <target state="translated">ÐÐÐÐ.ÐÐÐÐ¡Ð¡Ð«</target>
        </trans-unit>
        <trans-unit id="e1ebdde648cb58d821878fb4b58458b3295a2519" translate="yes" xml:space="preserve">
          <source>PLIB.EXTENSIONS</source>
          <target state="translated">Ð ÐÐ¡Ð¨ÐÐ ÐÐÐÐ¯ PLIB.EXTENSION</target>
        </trans-unit>
        <trans-unit id="34faaf48650ccf932014792ff3868ca0b9c81ca9" translate="yes" xml:space="preserve">
          <source>PLIB.GUI</source>
          <target state="translated">ÐÐÐÐ.ÐÐÐ</target>
        </trans-unit>
        <trans-unit id="41ea3f0be924ec898b8c3c44f7e348e9df0c1e57" translate="yes" xml:space="preserve">
          <source>PLIB.INI</source>
          <target state="translated">ÐÐÐÐ.ÐÐÐ</target>
        </trans-unit>
        <trans-unit id="f1d6dde9c032a6fffbb63baeddcf16702c1684d5" translate="yes" xml:space="preserve">
          <source>PLIB.STDLIB</source>
          <target state="translated">PLIB.STDLIB</target>
        </trans-unit>
        <trans-unit id="02fb4594f96113b3bd651e56d0ebf8ecb5c96946" translate="yes" xml:space="preserve">
          <source>PLIB.STDLIB.IO</source>
          <target state="translated">ÐÐÐÐ.Ð¡Ð¢ÐÐÐÐ.ÐÐ</target>
        </trans-unit>
        <trans-unit id="3ebfb64721e70a25c2c9084370cca478c088aabb" translate="yes" xml:space="preserve">
          <source>PLIB.UTILS</source>
          <target state="translated">ÐÐÐÐ.Ð£Ð¢ÐÐÐ¬Ð¡</target>
        </trans-unit>
        <trans-unit id="17e3447b65d24c49fddb96cd8e7e54e82f38b55a" translate="yes" xml:space="preserve">
          <source>PLIB.XML</source>
          <target state="translated">PLIB.XML</target>
        </trans-unit>
        <trans-unit id="679a01594ea4ecce623cfdd79a94352b301a256f" translate="yes" xml:space="preserve">
          <source>PersistentRequestHandler</source>
          <target state="translated">PersistentRequestHandler</target>
        </trans-unit>
        <trans-unit id="209b08b021828ed3b78cd6b8843607372fe58ba1" translate="yes" xml:space="preserve">
          <source>PersistentSerial</source>
          <target state="translated">PersistentSerial</target>
        </trans-unit>
        <trans-unit id="5ab5cc55236b80699c358e7026f5261db7bc5a60" translate="yes" xml:space="preserve">
          <source>PersistentSocket</source>
          <target state="translated">PersistentSocket</target>
        </trans-unit>
        <trans-unit id="934e6375acc87422b86cc2cd6088641368f302ce" translate="yes" xml:space="preserve">
          <source>ReadWrite</source>
          <target state="translated">Ð§Ð¸ÑÐ°ÑÑ/ÐÐ°Ð¿Ð¸ÑÐ°ÑÑ</target>
        </trans-unit>
        <trans-unit id="ce68b0b6eeba455f24c4c117771a2c2758e79019" translate="yes" xml:space="preserve">
          <source>SerialClient</source>
          <target state="translated">SerialClient</target>
        </trans-unit>
        <trans-unit id="dc727c59d0ad0cc5f28a743a7f86a89bdf2944cb" translate="yes" xml:space="preserve">
          <source>SerialServer</source>
          <target state="translated">SerialServer</target>
        </trans-unit>
        <trans-unit id="15a857bf81f2e990d31ecb018928fa65cad0d691" translate="yes" xml:space="preserve">
          <source>SetupHelper</source>
          <target state="translated">SetupHelper</target>
        </trans-unit>
        <trans-unit id="62c6914772420eff7f5881d1e94893c76b0dc0a8" translate="yes" xml:space="preserve">
          <source>ShutdownReadWrite</source>
          <target state="translated">ShutdownReadWrite</target>
        </trans-unit>
        <trans-unit id="114f641101bdcd08ae99d10e7f048c000350da12" translate="yes" xml:space="preserve">
          <source>SocketClient</source>
          <target state="translated">SocketClient</target>
        </trans-unit>
        <trans-unit id="a88e838f60d1b369c5acc82f5a9e2ce0c7e05f8f" translate="yes" xml:space="preserve">
          <source>SocketServer</source>
          <target state="translated">SocketServer</target>
        </trans-unit>
        <trans-unit id="59b77ccf5ec1420e19a67c7a59d1d512f847a916" translate="yes" xml:space="preserve">
          <source>TerminatorReadWrite</source>
          <target state="translated">TerminatorReadWrite .</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="113157d3a29ec2cda89f07f9cd848294dff97e31" translate="yes" xml:space="preserve">
          <source>The PLIB Sub-Packages</source>
          <target state="translated">Ð¡ÑÐ±Ð¿Ð°ÐºÐµÑÑ Ð´Ð»Ñ Ð¢ÐÐÐ</target>
        </trans-unit>
        <trans-unit id="ae1f10d9b1709d725e00d9f40f8fd7862aca5863" translate="yes" xml:space="preserve">
          <source>The PLIB package contains a number of useful sub-packages and
modules, all within the</source>
          <target state="translated">ÐÐ°ÐºÐµÑ PLIB ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÑÑÐ´ Ð¿Ð¾Ð»ÐµÐ·Ð½ÑÑ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐ¾Ð² Ð¸ Ð¼Ð¾Ð´ÑÐ»ÐµÐ¹,Ð²ÑÐµ Ð¸Ð· ÐºÐ¾ÑÐ¾ÑÑÑ Ð²ÑÐ¾Ð´ÑÑ Ð² ÑÐ¾ÑÑÐ°Ð²</target>
        </trans-unit>
        <trans-unit id="a24b5a43d946288b620777d23f7438e178310359" translate="yes" xml:space="preserve">
          <source>The above machinery is also made available for use with your own custom
read/write handling classes; the</source>
          <target state="translated">ÐÑÑÐµÑÐºÐ°Ð·Ð°Ð½Ð½Ð°Ñ ÑÐµÑÐ½Ð¸ÐºÐ° ÑÐ°ÐºÐ¶Ðµ Ð´Ð¾ÑÑÑÐ¿Ð½Ð° Ð´Ð»Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ñ Ñ Ð²Ð°ÑÐ¸Ð¼Ð¸ ÑÐ¾Ð±ÑÑÐ²ÐµÐ½Ð½ÑÐ¼Ð¸ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ð¼Ð¸ ÐºÐ»Ð°ÑÑÐ°Ð¼Ð¸ Ð¾Ð±ÑÐ°Ð±Ð¾ÑÐºÐ¸ ÑÑÐµÐ½Ð¸Ñ/Ð·Ð°Ð¿Ð¸ÑÐ¸;Ð²</target>
        </trans-unit>
        <trans-unit id="f0aff066d9b33f895fc63ccc41aa92ab5e7eed54" translate="yes" xml:space="preserve">
          <source>The classes in this sub-package are mostly a miscellaneous
group, included for no other reason than that I have found
them useful. The only common theme shared by some of them is
implementation of common &amp;ldquo;policy&amp;rdquo; for I/O clients and servers,
on top of the basic mechanisms provided by the I/O channel
classes in</source>
          <target state="translated">The classes in this sub-package are mostly a miscellaneous group, included for no other reason than that I have found them useful. The only common theme shared by some of them is implementation of common &amp;ldquo;policy&amp;rdquo; for I/O clients and servers, on top of the basic mechanisms provided by the I/O channel classes in</target>
        </trans-unit>
        <trans-unit id="8dd8adb764ddf56754fc454974c10a07990b9470" translate="yes" xml:space="preserve">
          <source>The individual sub-packages and modules contain docstrings
with more information about their usage; here they are
briefly listed and described.</source>
          <target state="translated">ÐÑÐ´ÐµÐ»ÑÐ½ÑÐµ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÑ Ð¸ Ð¼Ð¾Ð´ÑÐ»Ð¸ ÑÐ¾Ð´ÐµÑÐ¶Ð°Ñ docstrings Ñ Ð±Ð¾Ð»ÐµÐµ Ð¿Ð¾Ð´ÑÐ¾Ð±Ð½Ð¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸ÐµÐ¹ Ð¾Ð± Ð¸Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ð¸;Ð·Ð´ÐµÑÑ Ð¾Ð½Ð¸ ÐºÑÐ°ÑÐºÐ¾ Ð¿ÐµÑÐµÑÐ¸ÑÐ»ÐµÐ½Ñ Ð¸ Ð¾Ð¿Ð¸ÑÐ°Ð½Ñ.</target>
        </trans-unit>
        <trans-unit id="bf9e111e96cf876f6934691d0717a03c472207f2" translate="yes" xml:space="preserve">
          <source>There are also five modules visible in this sub-package
namespace:</source>
          <target state="translated">Ð ÑÑÐ¾Ð¼ Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ðµ Ð¸Ð¼ÑÐ½ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐ° ÑÐ°ÐºÐ¶Ðµ Ð²Ð¸Ð´Ð½Ñ Ð¿ÑÑÑ Ð¼Ð¾Ð´ÑÐ»ÐµÐ¹:</target>
        </trans-unit>
        <trans-unit id="d0fe01c703b75fca665ae9680eeccf1154dc1654" translate="yes" xml:space="preserve">
          <source>This is a bit clumsy, but necessary since the read/write handling has
to be &lt;em&gt;before&lt;/em&gt; the client/server class in the MRO, but &lt;em&gt;after&lt;/em&gt; the
base device type, for the cooperative</source>
          <target state="translated">This is a bit clumsy, but necessary since the read/write handling has to be &lt;em&gt;before&lt;/em&gt; the client/server class in the MRO, but &lt;em&gt;after&lt;/em&gt; the base device type, for the cooperative</target>
        </trans-unit>
        <trans-unit id="30212f46b660dee74bff1377e7a05144a6c75b31" translate="yes" xml:space="preserve">
          <source>This is a namespace for various functions and classes that
extend or emulate the Python standard library. Some,
like the</source>
          <target state="translated">Ð­ÑÐ¾ Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÐµÐ½ Ð´Ð»Ñ ÑÐ°Ð·Ð»Ð¸ÑÐ½ÑÑ ÑÑÐ½ÐºÑÐ¸Ð¹ Ð¸ ÐºÐ»Ð°ÑÑÐ¾Ð²,ÐºÐ¾ÑÐ¾ÑÑÐµ ÑÐ°ÑÑÐ¸ÑÑÑÑ Ð¸Ð»Ð¸ ÑÐ¼ÑÐ»Ð¸ÑÑÑÑ ÑÑÐ°Ð½Ð´Ð°ÑÑÐ½ÑÑ Ð±Ð¸Ð±Ð»Ð¸Ð¾ÑÐµÐºÑ Python.ÐÐµÐºÐ¾ÑÐ¾ÑÑÐµ,Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ</target>
        </trans-unit>
        <trans-unit id="f7f6d66ce366a02d7b448c7c8e1aeecbb116a346" translate="yes" xml:space="preserve">
          <source>This is the largest sub-package, and contains a simple GUI
application framework with two main features:</source>
          <target state="translated">Ð­ÑÐ¾ ÑÐ°Ð¼ÑÐ¹ Ð±Ð¾Ð»ÑÑÐ¾Ð¹ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑ,ÐºÐ¾ÑÐ¾ÑÑÐ¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ Ð¿ÑÐ¾ÑÑÐ¾Ð¹ ÑÑÐµÐ¹Ð¼Ð²Ð¾ÑÐº GUI-Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ð¹ Ñ Ð´Ð²ÑÐ¼Ñ Ð¾ÑÐ½Ð¾Ð²Ð½ÑÐ¼Ð¸ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑÐ¼Ð¸:</target>
        </trans-unit>
        <trans-unit id="bac76fb00414ce49e45d51fc7944eae299332162" translate="yes" xml:space="preserve">
          <source>This sub-package contains classes that encapsulate various forms
of client/server I/O channels. It is organized into sub-packages
itself to make the namespace easier to use; the sub-packages fall
into three categories, and each sub-package in a given category
contains the same basic class names, so they&amp;rsquo;re easier to remember.
The categories are:</source>
          <target state="translated">This sub-package contains classes that encapsulate various forms of client/server I/O channels. It is organized into sub-packages itself to make the namespace easier to use; the sub-packages fall into three categories, and each sub-package in a given category contains the same basic class names, so they&amp;rsquo;re easier to remember. The categories are:</target>
        </trans-unit>
        <trans-unit id="542adcede1f44f9e0e16f396a4900821f1fb73ec" translate="yes" xml:space="preserve">
          <source>This sub-package contains some miscellaneous useful
functions and modules, and also the</source>
          <target state="translated">Ð Ð´Ð°Ð½Ð½Ð¾Ð¼ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐµ ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑÑ ÑÐ°Ð·Ð»Ð¸ÑÐ½ÑÐµ Ð¿Ð¾Ð»ÐµÐ·Ð½ÑÐµ ÑÑÐ½ÐºÑÐ¸Ð¸ Ð¸ Ð¼Ð¾Ð´ÑÐ»Ð¸,Ð° ÑÐ°ÐºÐ¶Ðµ</target>
        </trans-unit>
        <trans-unit id="869dc373e62aaf6a5b2123b8f6a250a79af2a3cf" translate="yes" xml:space="preserve">
          <source>This sub-package implements an abstract &amp;lsquo;INI file&amp;rsquo; API that
uses</source>
          <target state="translated">This sub-package implements an abstract &amp;lsquo;INI file&amp;rsquo; API that uses</target>
        </trans-unit>
        <trans-unit id="1f26a32cbbb1dbf28eb590dd3c239853a5e70565" translate="yes" xml:space="preserve">
          <source>This sub-package provides a namespace for functions (and
possibly, in the future, other objects) exported from an
extension module written using the Python/C API. The general
philosophy of PLIB is to do everything possible in pure
Python, so the only functions that appear in this sub-package
are those which by their very nature cannot be done in pure
Python.</source>
          <target state="translated">ÐÐ°Ð½Ð½ÑÐ¹ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑ Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÑÐµÑ Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÑÐ½ Ð´Ð»Ñ ÑÑÐ½ÐºÑÐ¸Ð¹ (Ð¸,Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾,Ð² Ð±ÑÐ´ÑÑÐµÐ¼ Ð´ÑÑÐ³Ð¸Ñ Ð¾Ð±ÑÐµÐºÑÐ¾Ð²),ÑÐºÑÐ¿Ð¾ÑÑÐ¸ÑÑÐµÐ¼ÑÑ Ð¸Ð· Ð¼Ð¾Ð´ÑÐ»Ñ ÑÐ°ÑÑÐ¸ÑÐµÐ½Ð¸Ñ,Ð½Ð°Ð¿Ð¸ÑÐ°Ð½Ð½Ð¾Ð³Ð¾ Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸ÐµÐ¼ Python/C API.ÐÐ±ÑÐ°Ñ ÑÐ¸Ð»Ð¾ÑÐ¾ÑÐ¸Ñ PLIB Ð·Ð°ÐºÐ»ÑÑÐ°ÐµÑÑÑ Ð² ÑÐ¾Ð¼,ÑÑÐ¾Ð±Ñ Ð´ÐµÐ»Ð°ÑÑ Ð²ÑÐµ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾Ðµ Ð½Ð° ÑÐ¸ÑÑÐ¾Ð¼ Ð¿Ð¸ÑÐ¾Ð½Ðµ,Ð¿Ð¾ÑÑÐ¾Ð¼Ñ ÐµÐ´Ð¸Ð½ÑÑÐ²ÐµÐ½Ð½ÑÐµ ÑÑÐ½ÐºÑÐ¸Ð¸,ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¿Ð¾ÑÐ²Ð»ÑÑÑÑÑ Ð² ÑÑÐ¾Ð¼ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐµ-ÑÑÐ¾ ÑÐµ,ÐºÐ¾ÑÐ¾ÑÑÐµ Ð¿Ð¾ ÑÐ²Ð¾ÐµÐ¹ Ð¿ÑÐ¸ÑÐ¾Ð´Ðµ Ð½Ðµ Ð¼Ð¾Ð³ÑÑ Ð±ÑÑÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÐµÐ½Ñ Ð½Ð° ÑÐ¸ÑÑÐ¾Ð¼ Ð¿Ð¸ÑÐ¾Ð½Ðµ.</target>
        </trans-unit>
        <trans-unit id="f003020dbd27fce061323386a95c18ed7cd85b6b" translate="yes" xml:space="preserve">
          <source>This sub-package requires the</source>
          <target state="translated">Ð­ÑÐ¾Ñ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑ ÑÑÐµÐ±ÑÐµÑ</target>
        </trans-unit>
        <trans-unit id="c4951eb1b776daa47edb28a535ad13cbe9654513" translate="yes" xml:space="preserve">
          <source>To install PLIB, you can simply run:</source>
          <target state="translated">ÐÐ»Ñ ÑÑÑÐ°Ð½Ð¾Ð²ÐºÐ¸ PLIB Ð¼Ð¾Ð¶Ð½Ð¾ Ð¿ÑÐ¾ÑÑÐ¾ Ð·Ð°Ð¿ÑÑÑÐ¸ÑÑ:</target>
        </trans-unit>
        <trans-unit id="1a92f9450c3cc3ee7f9727160cad6e55f9ebed0c" translate="yes" xml:space="preserve">
          <source>WithReadWrite</source>
          <target state="translated">WithReadWrite</target>
        </trans-unit>
        <trans-unit id="2c40f51ce74865a1cf6ffdbb1b3cb93ebd32a8b5" translate="yes" xml:space="preserve">
          <source>WithShutdown</source>
          <target state="translated">WithShutdown</target>
        </trans-unit>
        <trans-unit id="171b2c6f007ba4578dccf8ffd48da22e838c5ae4" translate="yes" xml:space="preserve">
          <source>WithTerminator</source>
          <target state="translated">WithTerminator</target>
        </trans-unit>
        <trans-unit id="3f91ef9b413ce508f0382fd3b182901dfb6bb0ce" translate="yes" xml:space="preserve">
          <source>__builtin__</source>
          <target state="translated">__builtin__</target>
        </trans-unit>
        <trans-unit id="a7ba56c345f5297612fa7b5fb622cf1105aedf62" translate="yes" xml:space="preserve">
          <source>abstractcontainer</source>
          <target state="translated">Ð°Ð±ÑÑÑÐ°ÐºÑÐ½ÑÐ¹ ÐºÐ¾Ð½ÑÐµÐ¹Ð½ÐµÑ</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="4d6f38157088691ba185bd406d370a739714cbd0" translate="yes" xml:space="preserve">
          <source>and the library module for it,</source>
          <target state="translated">Ð¸ Ð±Ð¸Ð±Ð»Ð¸Ð¾ÑÐµÑÐ½ÑÐ¹ Ð¼Ð¾Ð´ÑÐ»Ñ Ð´Ð»Ñ Ð½ÐµÐ³Ð¾,</target>
        </trans-unit>
        <trans-unit id="6ba307ecef0b4f51109c410cbfd5ce3b0583a405" translate="yes" xml:space="preserve">
          <source>and use the same functionality).</source>
          <target state="translated">Ð¸ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ ÑÑ Ð¶Ðµ ÑÑÐ½ÐºÑÐ¸Ð¾Ð½Ð°Ð»ÑÐ½Ð¾ÑÑÑ).</target>
        </trans-unit>
        <trans-unit id="b0adec687e3ab4fff14b5efa8b7087cfcfe80d04" translate="yes" xml:space="preserve">
          <source>and/or</source>
          <target state="translated">Ð¸/Ð¸Ð»Ð¸</target>
        </trans-unit>
        <trans-unit id="baf78a0842e7dcd3f9f28944d37a693edf6dd59f" translate="yes" xml:space="preserve">
          <source>arglist</source>
          <target state="translated">ÑÐ¿Ð¾ÑÐ½ÑÐ¹ ÑÐ¿Ð¸ÑÐ¾Ðº</target>
        </trans-unit>
        <trans-unit id="e750ee7c231477c66be61075d1aafe532a03970f" translate="yes" xml:space="preserve">
          <source>argparse</source>
          <target state="translated">ÑÐ¿Ð¾ÑÑÑÐµ</target>
        </trans-unit>
        <trans-unit id="b7e04b33fdd186ab6bd2deace04ea6b551b9bd4a" translate="yes" xml:space="preserve">
          <source>async</source>
          <target state="translated">Ð°ÑÐ¸Ð½ÑÑÐ¾Ð½Ð½ÑÐ¹</target>
        </trans-unit>
        <trans-unit id="89471b7b67bce0b6cba956adbec3f9f7e5e00f63" translate="yes" xml:space="preserve">
          <source>at a shell prompt from the directory into which you
unzipped the source tarball (the same directory that this
README file is in). This will install PLIB and then
run each of the post-install scripts in the scripts
directory.</source>
          <target state="translated">Ð² ÐºÐ¾Ð¼Ð°Ð½Ð´Ð½Ð¾Ð¹ ÑÑÑÐ¾ÐºÐµ Ð¾Ð±Ð¾Ð»Ð¾ÑÐºÐ¸ Ð¸Ð· ÐºÐ°ÑÐ°Ð»Ð¾Ð³Ð°,Ð² ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð²Ñ ÑÐ°ÑÐ¿Ð°ÐºÐ¾Ð²Ð°Ð»Ð¸ Ð¸ÑÑÐ¾Ð´Ð½ÑÐ¹ ÑÐ°ÑÐ±Ð¾Ð» (ÑÐ¾Ñ Ð¶Ðµ ÐºÐ°ÑÐ°Ð»Ð¾Ð³,Ð² ÐºÐ¾ÑÐ¾ÑÐ¾Ð¼ Ð½Ð°ÑÐ¾Ð´Ð¸ÑÑÑ ÑÑÐ¾Ñ README-ÑÐ°Ð¹Ð»).Ð­ÑÐ¾ ÑÑÑÐ°Ð½Ð¾Ð²Ð¸Ñ PLIB Ð¸ Ð·Ð°ÑÐµÐ¼ Ð·Ð°Ð¿ÑÑÑÐ¸Ñ ÐºÐ°Ð¶Ð´ÑÐ¹ Ð¸Ð· Ð¿Ð¾ÑÑ-Ð¸Ð½ÑÑÐ°Ð»ÑÑÐ¸Ð¾Ð½Ð½ÑÑ ÑÐºÑÐ¸Ð¿ÑÐ¾Ð² Ð² ÐºÐ°ÑÐ°Ð»Ð¾Ð³Ðµ ÑÐºÑÐ¸Ð¿ÑÐ¾Ð².</target>
        </trans-unit>
        <trans-unit id="f3afab5f3545871a344cee36f348d664c069c30a" translate="yes" xml:space="preserve">
          <source>at the end) are also provided, for use
if alternate data handling is desired (see next bullet), but it is
normally not necessary to use these &amp;ldquo;by hand&amp;rdquo;&amp;ndash;see &amp;ldquo;automatic mixins&amp;rdquo;
below.</source>
          <target state="translated">at the end) are also provided, for use if alternate data handling is desired (see next bullet), but it is normally not necessary to use these &amp;ldquo;by hand&amp;rdquo;&amp;ndash;see &amp;ldquo;automatic mixins&amp;rdquo; below.</target>
        </trans-unit>
        <trans-unit id="000085013a02852372159cb94101b99ccaec59e1" translate="yes" xml:space="preserve">
          <source>blocking</source>
          <target state="translated">Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²ÐºÐ°</target>
        </trans-unit>
        <trans-unit id="775b2143ed4bbf9546d93eababa8c28bdc8b79b8" translate="yes" xml:space="preserve">
          <source>cached_property</source>
          <target state="translated">ÐºÑÑ-ÑÐ²Ð¾Ð¹ÑÑÐ²Ð¾</target>
        </trans-unit>
        <trans-unit id="94436b774cdcf078ab18d9943d7711cfb84462af" translate="yes" xml:space="preserve">
          <source>calls that underlie
the functionality to work properly. However, since the pattern is the
same in each case, it can be automated, and this has been done in the</source>
          <target state="translated">Ð½Ð°Ð·ÑÐ²Ð°ÐµÑ,ÑÑÐ¾ Ð»ÐµÐ¶Ð¸Ñ Ð² Ð¾ÑÐ½Ð¾Ð²Ðµ ÑÑÐ½ÐºÑÐ¸Ð¾Ð½Ð°Ð»ÑÐ½Ð¾ÑÑÐ¸,ÑÑÐ¾Ð±Ñ ÑÐ°Ð±Ð¾ÑÐ°ÑÑ Ð´Ð¾Ð»Ð¶Ð½ÑÐ¼ Ð¾Ð±ÑÐ°Ð·Ð¾Ð¼.ÐÐ´Ð½Ð°ÐºÐ¾,Ð¿Ð¾ÑÐºÐ¾Ð»ÑÐºÑ ÑÐ°Ð±Ð»Ð¾Ð½ Ð² ÐºÐ°Ð¶Ð´Ð¾Ð¼ ÑÐ»ÑÑÐ°Ðµ Ð¾Ð´Ð¸Ð½ Ð¸ ÑÐ¾Ñ Ð¶Ðµ,Ð¾Ð½ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð°Ð²ÑÐ¾Ð¼Ð°ÑÐ¸Ð·Ð¸ÑÐ¾Ð²Ð°Ð½,Ð¸ ÑÑÐ¾ Ð±ÑÐ»Ð¾ ÑÐ´ÐµÐ»Ð°Ð½Ð¾ Ð²</target>
        </trans-unit>
        <trans-unit id="4f2def51137c5253d8a803d3af4559a801526695" translate="yes" xml:space="preserve">
          <source>class
referred to above.</source>
          <target state="translated">ÐºÐ»Ð°ÑÑ,ÑÐ¿Ð¾Ð¼ÑÐ½ÑÑÑÐ¹ Ð²ÑÑÐµ.</target>
        </trans-unit>
        <trans-unit id="7d345de2a1fa1aac6d3406bca450e5c927d0a01c" translate="yes" xml:space="preserve">
          <source>class and its subclasses, are
re-implementations of standard Python data structures,
written to enable PLIB to make as many things as possible
look like those data structures without having to subclass
the built-ins (which has some downsides for the use cases
I&amp;rsquo;ve had thus far&amp;ndash;see the docstrings for more information).</source>
          <target state="translated">class and its subclasses, are re-implementations of standard Python data structures, written to enable PLIB to make as many things as possible look like those data structures without having to subclass the built-ins (which has some downsides for the use cases I&amp;rsquo;ve had thus far&amp;ndash;see the docstrings for more information).</target>
        </trans-unit>
        <trans-unit id="30b122aa1e81b5d4a380e4f67e2a756e3239b6d9" translate="yes" xml:space="preserve">
          <source>class from
the</source>
          <target state="translated">ÑÑÐ¾Ðº Ð¸Ð·</target>
        </trans-unit>
        <trans-unit id="aa7e15a31fd07c9827383e5a72c0e276fc5bd38e" translate="yes" xml:space="preserve">
          <source>class. These will usually not need to
be used directly; they are used by the I/O mode classes, and are
factored out so that each I/O mode sees the same API for a given
device type.</source>
          <target state="translated">ÐÐ»Ð°ÑÑ.ÐÐ±ÑÑÐ½Ð¾ Ð¸Ñ Ð½Ðµ Ð½ÑÐ¶Ð½Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ Ð½Ð°Ð¿ÑÑÐ¼ÑÑ;Ð¾Ð½Ð¸ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÑÑÑÑ ÐºÐ»Ð°ÑÑÐ°Ð¼Ð¸ ÑÐµÐ¶Ð¸Ð¼Ð° Ð²Ð²Ð¾Ð´Ð°/Ð²ÑÐ²Ð¾Ð´Ð° Ð¸ ÑÑÐ¸ÑÑÐ²Ð°ÑÑÑÑ ÑÐ°ÐºÐ¸Ð¼ Ð¾Ð±ÑÐ°Ð·Ð¾Ð¼,ÑÑÐ¾ ÐºÐ°Ð¶Ð´ÑÐ¹ ÑÐµÐ¶Ð¸Ð¼ Ð²Ð²Ð¾Ð´Ð°/Ð²ÑÐ²Ð¾Ð´Ð° Ð²Ð¸Ð´Ð¸Ñ Ð¾Ð´Ð¸Ð½ Ð¸ ÑÐ¾Ñ Ð¶Ðµ API Ð´Ð»Ñ Ð´Ð°Ð½Ð½Ð¾Ð³Ð¾ ÑÐ¸Ð¿Ð° ÑÑÑÑÐ¾Ð¹ÑÑÐ²Ð°.</target>
        </trans-unit>
        <trans-unit id="e7fa79d9b6e8db90e6e74e403ea143942a0783bd" translate="yes" xml:space="preserve">
          <source>class; the</source>
          <target state="translated">ÐºÐ»Ð°ÑÑ</target>
        </trans-unit>
        <trans-unit id="1adaa84dc07a16d34ede5b9a70713ff832a0f853" translate="yes" xml:space="preserve">
          <source>classes</source>
          <target state="translated">ÑÑÐ¾ÐºÐ¸</target>
        </trans-unit>
        <trans-unit id="19d31b21783418287075da41ec9eb04685689170" translate="yes" xml:space="preserve">
          <source>classes. Mixin versions of these classes
(class names with</source>
          <target state="translated">ÐÐ°Ð½ÑÑÐ¸Ñ.Ð¡Ð¼ÐµÑÐ°Ð½Ð½ÑÐµ Ð²ÐµÑÑÐ¸Ð¸ ÑÑÐ¸Ñ ÐºÐ»Ð°ÑÑÐ¾Ð² (Ð¸Ð¼ÐµÐ½Ð° ÐºÐ»Ð°ÑÑÐ¾Ð² Ñ</target>
        </trans-unit>
        <trans-unit id="a7d9e5a8a157f7ea4e73a05612107cc2e62e0f61" translate="yes" xml:space="preserve">
          <source>client_communicate</source>
          <target state="translated">ÐºÐ»Ð¸ÐµÐ½Ñ_ÐºÐ¾Ð¼Ð¼ÑÐ½Ð¸ÐºÐ°ÑÐ¸Ñ</target>
        </trans-unit>
        <trans-unit id="ab9a98e2200c4e93b0c9b7da885062de7e1438f0" translate="yes" xml:space="preserve">
          <source>coll</source>
          <target state="translated">ÐºÐ¾Ð»Ð»ÐµÐºÑÐ¸Ð²</target>
        </trans-unit>
        <trans-unit id="fa4b9d69fdddc7c1be7bed9440621400b383b43f" translate="yes" xml:space="preserve">
          <source>collections</source>
          <target state="translated">ÑÐ±Ð¾ÑÐ½Ð¸ÐºÐ¸</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">Ð´Ð°Ð½Ð½ÑÐµ</target>
        </trans-unit>
        <trans-unit id="9c39caeaedcfef8dab2cd08b50e99bebd1b8199d" translate="yes" xml:space="preserve">
          <source>decorator, are implementations of
patterns that have been known for some time, but which don&amp;rsquo;t
have a &amp;ldquo;canonical&amp;rdquo; version in the stdlib yet; rather than
have PLIB depend on some other third-party package, I&amp;rsquo;ve
simply provided my own implementations here. Others, like
the</source>
          <target state="translated">decorator, are implementations of patterns that have been known for some time, but which don&amp;rsquo;t have a &amp;ldquo;canonical&amp;rdquo; version in the stdlib yet; rather than have PLIB depend on some other third-party package, I&amp;rsquo;ve simply provided my own implementations here. Others, like the</target>
        </trans-unit>
        <trans-unit id="dbc8365ac3fbfa8694e2cb51cf29bdf615370576" translate="yes" xml:space="preserve">
          <source>decotools</source>
          <target state="translated">Ð´ÐµÐºÐ¾ÑÐ¾Ð¿Ñ</target>
        </trans-unit>
        <trans-unit id="f90aef983629a7d310fd034c80bf7a15787a6479" translate="yes" xml:space="preserve">
          <source>defaultdict</source>
          <target state="translated">Ð´ÐµÑÐ¾Ð»Ñ</target>
        </trans-unit>
        <trans-unit id="82b63ed5aa1e09a0892976f4f7f93b249922e6b7" translate="yes" xml:space="preserve">
          <source>device type: the class names are</source>
          <target state="translated">ÑÐ¸Ð¿ ÑÑÑÑÐ¾Ð¹ÑÑÐ²Ð°:Ð¸Ð¼ÐµÐ½Ð° ÐºÐ»Ð°ÑÑÐ¾Ð²</target>
        </trans-unit>
        <trans-unit id="5166bae6a29390b657dbcc3bb021a81ec55dea1b" translate="yes" xml:space="preserve">
          <source>directory
contains a sub-package, except for the</source>
          <target state="translated">ÐºÐ°ÑÐ°Ð»Ð¾Ð³ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑ,Ð·Ð° Ð¸ÑÐºÐ»ÑÑÐµÐ½Ð¸ÐµÐ¼</target>
        </trans-unit>
        <trans-unit id="3aedd21ec030fb9010bfc4af3619f3525ec2a9a2" translate="yes" xml:space="preserve">
          <source>directory in the
source distribution is not installed; it contains a helper
module for PLIB&amp;rsquo;s setup script. SetupHelper is available as
a separate package from PyPI under the name</source>
          <target state="translated">directory in the source distribution is not installed; it contains a helper module for PLIB&amp;rsquo;s setup script. SetupHelper is available as a separate package from PyPI under the name</target>
        </trans-unit>
        <trans-unit id="b0a118aefa20c7511126d47bdffcacfe37a72327" translate="yes" xml:space="preserve">
          <source>directory, which
contains the PLIB test suite. The source distribution also
contains an</source>
          <target state="translated">ÐºÐ°ÑÐ°Ð»Ð¾Ð³,ÐºÐ¾ÑÐ¾ÑÑÐ¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ Ð½Ð°Ð±Ð¾Ñ ÑÐµÑÑÐ¾Ð² PLIB.ÐÐ¸ÑÑÑÐ¸Ð±ÑÑÐ¸Ð² Ð¸ÑÑÐ¾Ð´Ð½ÑÑ ÑÐµÐºÑÑÐ¾Ð² ÑÐ°ÐºÐ¶Ðµ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ</target>
        </trans-unit>
        <trans-unit id="f01f58b9c219ed3a7515048a3f48331e8045deed" translate="yes" xml:space="preserve">
          <source>directory, which has a few
post-install scripts. (The</source>
          <target state="translated">ÐºÐ°ÑÐ°Ð»Ð¾Ð³,Ð² ÐºÐ¾ÑÐ¾ÑÐ¾Ð¼ ÐµÑÑÑ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¿Ð¾ÑÑ-Ð¸Ð½ÑÑÐ°Ð»Ð»ÑÑÐ¸Ð¾Ð½Ð½ÑÑ ÑÐºÑÐ¸Ð¿ÑÐ¾Ð².(The</target>
        </trans-unit>
        <trans-unit id="28523b888b53500f6308d3a9c1aa1033df19bab2" translate="yes" xml:space="preserve">
          <source>directory, which has example programs
using PLIB, and a</source>
          <target state="translated">ÐºÐ°ÑÐ°Ð»Ð¾Ð³,Ð² ÐºÐ¾ÑÐ¾ÑÐ¾Ð¼ ÐµÑÑÑ Ð¿ÑÐ¸Ð¼ÐµÑÑ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼,Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÑÑÐ¸Ñ PLIB,Ð° ÑÐ°ÐºÐ¶Ðµ</target>
        </trans-unit>
        <trans-unit id="cbd9d886e949d7cb382991471b203a63ae721520" translate="yes" xml:space="preserve">
          <source>directory.</source>
          <target state="translated">ÐºÐ°ÑÐ°Ð»Ð¾Ð³.</target>
        </trans-unit>
        <trans-unit id="f58a9bf730d65e1c95f8051bb72ef97fc8f087ed" translate="yes" xml:space="preserve">
          <source>directory. If you have a
POSIX system (Linux or Mac OSX), the</source>
          <target state="translated">ÐºÐ°ÑÐ°Ð»Ð¾Ð³.ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ ÐµÑÑÑ POSIX ÑÐ¸ÑÑÐµÐ¼Ð° (Linux Ð¸Ð»Ð¸ Mac OSX),ÑÐ¾</target>
        </trans-unit>
        <trans-unit id="b210cab06c5b1b22efb1535cf2a0ee9d844add14" translate="yes" xml:space="preserve">
          <source>docstrings for more information.</source>
          <target state="translated">Ð´Ð»Ñ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ñ Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½Ð¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸.</target>
        </trans-unit>
        <trans-unit id="99345ce680cd3e48acdb9ab4212e4bd9bf9358b7" translate="yes" xml:space="preserve">
          <source>examples</source>
          <target state="translated">Ð¿ÑÐ¸Ð¼ÐµÑÑ</target>
        </trans-unit>
        <trans-unit id="2916a9d25165b8cdfe8e55b5c6616e581eee8dc9" translate="yes" xml:space="preserve">
          <source>extension, which uses
the very fast</source>
          <target state="translated">ÑÐ´Ð»Ð¸Ð½Ð¸ÑÐµÐ»Ñ,ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑ Ð¾ÑÐµÐ½Ñ Ð±ÑÑÑÑÑÐ¹</target>
        </trans-unit>
        <trans-unit id="132fa93930e2efed573d5274991cb3855cb16cd2" translate="yes" xml:space="preserve">
          <source>fifo</source>
          <target state="translated">fifo</target>
        </trans-unit>
        <trans-unit id="9a02f222cf1f0f4f0b4cd1cd23fa292fca174c24" translate="yes" xml:space="preserve">
          <source>from plib.stdlib import func</source>
          <target state="translated">Ð¸Ð· Ð¸Ð¼Ð¿Ð¾ÑÑÐ½Ð¾Ð¹ ÑÑÐ½ÐºÑÐ¸Ð¸ plib.stdlib</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">ÑÑÐ½ÐºÑÐ¸Ð¾Ð½Ð°Ð»</target>
        </trans-unit>
        <trans-unit id="384418e5416b65bf927504841101b2f10d95fdba" translate="yes" xml:space="preserve">
          <source>function
a sequence of 2-tuples to include keyword arguments, similar
to what is done for options.)</source>
          <target state="translated">ÑÑÐ½ÐºÑÐ¸Ñ Ð¿Ð¾ÑÐ»ÐµÐ´Ð¾Ð²Ð°ÑÐµÐ»ÑÐ½Ð¾ÑÑÐ¸ Ð¸Ð· 2-Ñ Ð¿ÑÐ½ÐºÑÐ¾Ð² Ð´Ð»Ñ Ð²ÐºÐ»ÑÑÐµÐ½Ð¸Ñ Ð°ÑÐ³ÑÐ¼ÐµÐ½ÑÐ¾Ð² Ð¿Ð¾ ÐºÐ»ÑÑÐµÐ²ÑÐ¼ ÑÐ»Ð¾Ð²Ð°Ð¼,Ð°Ð½Ð°Ð»Ð¾Ð³Ð¸ÑÐ½Ð¾ ÑÐ¾Ð¼Ñ,ÐºÐ°Ðº ÑÑÐ¾ Ð´ÐµÐ»Ð°ÐµÑÑÑ Ð´Ð»Ñ Ð¾Ð¿ÑÐ¸Ð¹)).</target>
        </trans-unit>
        <trans-unit id="181eca52f18644a81711bf067ddb4a23949381cd" translate="yes" xml:space="preserve">
          <source>function that does the same
on-the-fly class definition as above, but with your custom read/write
class instead of one of the built-in ones. All you have to do is pass
the function the name of your desired I/O class and your custom
read/write class object:</source>
          <target state="translated">ÑÑÐ½ÐºÑÐ¸Ñ,ÐºÐ¾ÑÐ¾ÑÐ°Ñ Ð´ÐµÐ»Ð°ÐµÑ ÑÐ¾ Ð¶Ðµ ÑÐ°Ð¼Ð¾Ðµ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ ÐºÐ»Ð°ÑÑÐ° &quot;Ð½Ð° Ð»ÐµÑÑ&quot;,ÑÑÐ¾ Ð¸ Ð²ÑÑÐµ,Ð½Ð¾ Ñ Ð²Ð°ÑÐ¸Ð¼ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ð¼ ÐºÐ»Ð°ÑÑÐ¾Ð¼ ÑÑÐµÐ½Ð¸Ñ/Ð·Ð°Ð¿Ð¸ÑÐ¸ Ð²Ð¼ÐµÑÑÐ¾ Ð¾Ð´Ð½Ð¾Ð³Ð¾ Ð¸Ð· Ð²ÑÑÑÐ¾ÐµÐ½Ð½ÑÑ.ÐÑÐµ,ÑÑÐ¾ Ð²Ð°Ð¼ Ð½ÑÐ¶Ð½Ð¾ ÑÐ´ÐµÐ»Ð°ÑÑ,ÑÑÐ¾ Ð¿ÐµÑÐµÐ´Ð°ÑÑ ÑÑÐ½ÐºÑÐ¸Ð¸ Ð¸Ð¼Ñ Ð¶ÐµÐ»Ð°ÐµÐ¼Ð¾Ð³Ð¾ ÐºÐ»Ð°ÑÑÐ° Ð²Ð²Ð¾Ð´Ð°/Ð²ÑÐ²Ð¾Ð´Ð° Ð¸ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ð¹ Ð¾Ð±ÑÐµÐºÑ ÐºÐ»Ð°ÑÑÐ° ÑÑÐµÐ½Ð¸Ñ/Ð·Ð°Ð¿Ð¸ÑÐ¸:</target>
        </trans-unit>
        <trans-unit id="080913a90df6a23c631e6066a3c5acd7eb9501d1" translate="yes" xml:space="preserve">
          <source>functools</source>
          <target state="translated">functools</target>
        </trans-unit>
        <trans-unit id="63b5e1dd6bac0f5e4b7811e2ce78bcc05cff389c" translate="yes" xml:space="preserve">
          <source>get_readwrite_class</source>
          <target state="translated">get_readwrite_class</target>
        </trans-unit>
        <trans-unit id="e5ce004f085ab31426b67a88007e2c8ebfe24d0d" translate="yes" xml:space="preserve">
          <source>has two key additional
features:</source>
          <target state="translated">Ð¸Ð¼ÐµÐµÑ Ð´Ð²Ðµ ÐºÐ»ÑÑÐµÐ²ÑÐµ Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½ÑÐµ ÑÑÐ½ÐºÑÐ¸Ð¸:</target>
        </trans-unit>
        <trans-unit id="f720cee5b65c909cd58d153cb9709523d22265ad" translate="yes" xml:space="preserve">
          <source>import functools</source>
          <target state="translated">Ð¸Ð¼Ð¿Ð¾ÑÑÐ½ÑÐµ ÑÐ°Ð·Ð²Ð»ÐµÑÐµÐ½Ð¸Ñ</target>
        </trans-unit>
        <trans-unit id="cc072884685818c2ef22a3c606134160584b033c" translate="yes" xml:space="preserve">
          <source>instead
of ElementTree itself is that</source>
          <target state="translated">Ð²Ð¼ÐµÑÑÐ¾ ÑÐ°Ð¼Ð¾Ð³Ð¾ ElementTree Ð² ÑÐ¾Ð¼,ÑÑÐ¾</target>
        </trans-unit>
        <trans-unit id="cb82821f5443620916128c66c024a61d87b0565d" translate="yes" xml:space="preserve">
          <source>instead of</source>
          <target state="translated">Ð²Ð¼ÐµÑÑÐ¾</target>
        </trans-unit>
        <trans-unit id="0f2ab5b4c0f707c06a1be526539dd41ea78261dd" translate="yes" xml:space="preserve">
          <source>is taken from the ActiveState
recipe that led to the Python 2.6 implementation.)</source>
          <target state="translated">Ð²Ð·ÑÑÐ¾ Ð¸Ð· ÑÐµÑÐµÐ¿ÑÐ° ActiveState,ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð¿ÑÐ¸Ð²ÐµÐ» Ðº ÑÐµÐ°Ð»Ð¸Ð·Ð°ÑÐ¸Ð¸ Python 2.6).).</target>
        </trans-unit>
        <trans-unit id="2fcfdfb973aaad5c80b3eae87f8edad4b4b2f8eb" translate="yes" xml:space="preserve">
          <source>library but provides a Pythonic API
similar to ElementTree. The reason for using</source>
          <target state="translated">Ð½Ð¾ Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÑÐµÑ Pythonic API,Ð¿Ð¾ÑÐ¾Ð¶Ð¸Ð¹ Ð½Ð° ElementTree.ÐÑÐ¸ÑÐ¸Ð½Ð° Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ñ</target>
        </trans-unit>
        <trans-unit id="08782525c6af7fda7de2664228c31d0c89dd160e" translate="yes" xml:space="preserve">
          <source>libxml2</source>
          <target state="translated">Ð»Ð¸Ð±ÑÐ¾Ð»Ð¸Ñ2</target>
        </trans-unit>
        <trans-unit id="0b7cef94fe3ce98f090b6b3e8d3721bb77c515ba" translate="yes" xml:space="preserve">
          <source>lxml</source>
          <target state="translated">lxml</target>
        </trans-unit>
        <trans-unit id="626ccfef2ab1b366dbb3c207f06f266c9cb3a99f" translate="yes" xml:space="preserve">
          <source>method to send
data to the server and receive a response; a server can always use
the</source>
          <target state="translated">Ð¼ÐµÑÐ¾Ð´ Ð¾ÑÐ¿ÑÐ°Ð²ÐºÐ¸ Ð´Ð°Ð½Ð½ÑÑ Ð½Ð° ÑÐµÑÐ²ÐµÑ Ð¸ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ñ Ð¾ÑÐ²ÐµÑÐ°;ÑÐµÑÐ²ÐµÑ Ð²ÑÐµÐ³Ð´Ð° Ð¼Ð¾Ð¶ÐµÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ Ð¼ÐµÑÐ¾Ð´</target>
        </trans-unit>
        <trans-unit id="bc715b2cb1ea2a612871f120a64ae7e11a3ad540" translate="yes" xml:space="preserve">
          <source>method to start itself; and all I/O objects
override the same methods to implement application-specific
functionality:</source>
          <target state="translated">Ð¼ÐµÑÐ¾Ð´ Ð·Ð°Ð¿ÑÑÐºÐ° ÑÐ°Ð¼ Ð¿Ð¾ ÑÐµÐ±Ðµ;Ð¸ Ð²ÑÐµ Ð¾Ð±ÑÐµÐºÑÑ Ð²Ð²Ð¾Ð´Ð°/Ð²ÑÐ²Ð¾Ð´Ð° Ð¿ÐµÑÐµÐ¾Ð¿ÑÐµÐ´ÐµÐ»ÑÑÑ Ð¾Ð´Ð½Ð¸ Ð¸ ÑÐµ Ð¶Ðµ Ð¼ÐµÑÐ¾Ð´Ñ Ð´Ð»Ñ ÑÐµÐ°Ð»Ð¸Ð·Ð°ÑÐ¸Ð¸ ÑÑÐ½ÐºÑÐ¸Ð¾Ð½Ð°Ð»ÑÐ½Ð¾ÑÑÐ¸,ÑÐ¿ÐµÑÐ¸ÑÐ¸ÑÐ½Ð¾Ð¹ Ð´Ð»Ñ ÐºÐ¾Ð½ÐºÑÐµÑÐ½Ð¾Ð³Ð¾ Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ:</target>
        </trans-unit>
        <trans-unit id="0bde08bab9773b1061ab445ae4c1ef016444571e" translate="yes" xml:space="preserve">
          <source>module
that is easier to use when timing functions that you already
have as objects, instead of source code strings.</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ,ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð»ÐµÐ³ÑÐµ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ,ÐºÐ¾Ð³Ð´Ð° ÑÐ°Ð¹Ð¼Ð¸Ð½Ð³Ð¾Ð²ÑÐµ ÑÑÐ½ÐºÑÐ¸Ð¸,ÐºÐ¾ÑÐ¾ÑÑÐµ Ñ Ð²Ð°Ñ ÑÐ¶Ðµ ÐµÑÑÑ Ð² ÐºÐ°ÑÐµÑÑÐ²Ðµ Ð¾Ð±ÑÐµÐºÑÐ¾Ð²,Ð²Ð¼ÐµÑÑÐ¾ ÑÑÑÐ¾Ðº Ð¸ÑÑÐ¾Ð´Ð½Ð¾Ð³Ð¾ ÐºÐ¾Ð´Ð°.</target>
        </trans-unit>
        <trans-unit id="657afa9836eb1c29a24aba892ee49036ecfde8ce" translate="yes" xml:space="preserve">
          <source>module from the standard library, so you don&amp;rsquo;t have to import
both modules; in addition, for Python versions where some of
the classes are not yet present (</source>
          <target state="translated">module from the standard library, so you don&amp;rsquo;t have to import both modules; in addition, for Python versions where some of the classes are not yet present (</target>
        </trans-unit>
        <trans-unit id="eeb91a7b630ebc0d6ce3cc671ddf3c0de2e0a8de" translate="yes" xml:space="preserve">
          <source>module in the Python standard library for
Python versions prior to 2.5 (in 2.5 and later it simply
makes the functools module contents appear in its namespace,
so you can safely</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ Ð² ÑÑÐ°Ð½Ð´Ð°ÑÑÐ½Ð¾Ð¹ Ð±Ð¸Ð±Ð»Ð¸Ð¾ÑÐµÐºÐµ Python Ð´Ð»Ñ Ð²ÐµÑÑÐ¸Ð¹ Python Ð´Ð¾ 2.5 (Ð² 2.5 Ð¸ Ð±Ð¾Ð»ÐµÐµ Ð¿Ð¾Ð·Ð´Ð½Ð¸Ñ Ð²ÐµÑÑÐ¸ÑÑ Ð¾Ð½ Ð¿ÑÐ¾ÑÑÐ¾ Ð·Ð°ÑÑÐ°Ð²Ð»ÑÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ð¼Ð¾Ðµ Ð¼Ð¾Ð´ÑÐ»Ñ functools Ð¿Ð¾ÑÐ²Ð»ÑÑÑÑÑ Ð² ÐµÐ³Ð¾ Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ðµ Ð¸Ð¼ÑÐ½,ÑÐ°Ðº ÑÑÐ¾ Ð²Ñ Ð¼Ð¾Ð¶ÐµÑÐµ Ð±ÐµÐ·Ð¾Ð¿Ð°ÑÐ½Ð¾</target>
        </trans-unit>
        <trans-unit id="ce8fc106e7ec4dd3b9bf2ea4557e5947352aeb78" translate="yes" xml:space="preserve">
          <source>module in this
sub-package builds on this feature by using metaclasses
to automate DTD generation and validation, but the
feature is also great for many XML applications.</source>
          <target state="translated">ÐÐ¾Ð´ÑÐ»Ñ Ð² ÑÑÐ¾Ð¼ Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐµ Ð¿Ð¾ÑÑÑÐ¾ÐµÐ½ Ð½Ð° ÑÑÐ¾Ð¹ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÐ¸ Ñ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸ÐµÐ¼ Ð¼ÐµÑÐ°-ÐºÐ»Ð°ÑÑÐ¾Ð² Ð´Ð»Ñ Ð°Ð²ÑÐ¾Ð¼Ð°ÑÐ¸Ð·Ð°ÑÐ¸Ð¸ Ð³ÐµÐ½ÐµÑÐ°ÑÐ¸Ð¸ Ð¸ Ð¿ÑÐ¾Ð²ÐµÑÐºÐ¸ DTD,Ð½Ð¾ ÑÑÐ° Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑ ÑÐ°ÐºÐ¶Ðµ Ð¾ÑÐ»Ð¸ÑÐ½Ð¾ Ð¿Ð¾Ð´ÑÐ¾Ð´Ð¸Ñ Ð´Ð»Ñ Ð¼Ð½Ð¾Ð³Ð¸Ñ XML-Ð¿ÑÐ¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ð¹.</target>
        </trans-unit>
        <trans-unit id="e974513ec99da0c0d791f02ec2aa42afd37888ef" translate="yes" xml:space="preserve">
          <source>module is
deprecated. The</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ ÑÑÑÐ°ÑÐµÐ».</target>
        </trans-unit>
        <trans-unit id="bb6d57fedf0d0cf9ca1b5269c3553603a5a86f55" translate="yes" xml:space="preserve">
          <source>module namespace for built-in
functions that are not present in the running version of
Python but are present in later versions. This is more
convenient than having to worry about importing such
equivalents from</source>
          <target state="translated">Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÑÐ½ Ð¼Ð¾Ð´ÑÐ»ÐµÐ¹ Ð´Ð»Ñ Ð²ÑÑÑÐ¾ÐµÐ½Ð½ÑÑ ÑÑÐ½ÐºÑÐ¸Ð¹,ÐºÐ¾ÑÐ¾ÑÑÐµ Ð½Ðµ Ð¿ÑÐ¸ÑÑÑÑÑÐ²ÑÑÑ Ð² ÑÐ°Ð±Ð¾ÑÐ°ÑÑÐµÐ¹ Ð²ÐµÑÑÐ¸Ð¸ Python,Ð½Ð¾ Ð¿ÑÐ¸ÑÑÑÑÑÐ²ÑÑÑ Ð² Ð±Ð¾Ð»ÐµÐµ Ð¿Ð¾Ð·Ð´Ð½Ð¸Ñ Ð²ÐµÑÑÐ¸ÑÑ.Ð­ÑÐ¾ ÑÐ´Ð¾Ð±Ð½ÐµÐµ,ÑÐµÐ¼ Ð±ÐµÑÐ¿Ð¾ÐºÐ¾Ð¸ÑÑÑÑ Ð¾Ð± Ð¸Ð¼Ð¿Ð¾ÑÑÐµ ÑÐ°ÐºÐ¸Ñ ÑÐºÐ²Ð¸Ð²Ð°Ð»ÐµÐ½ÑÐ¾Ð² Ð¸Ð·</target>
        </trans-unit>
        <trans-unit id="322acbb5520fee97036f16130e5c605ba3f1a7b6" translate="yes" xml:space="preserve">
          <source>module provides additional
functionality for arguments, which can be accessed by making
the</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÑÐµÑ Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸ÑÐµÐ»ÑÐ½ÑÐ¹ ÑÑÐ½ÐºÑÐ¸Ð¾Ð½Ð°Ð» Ð´Ð»Ñ Ð°ÑÐ³ÑÐ¼ÐµÐ½ÑÐ¾Ð²,Ð´Ð¾ÑÑÑÐ¿ Ðº ÐºÐ¾ÑÐ¾ÑÑÐ¼ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¿Ð¾Ð»ÑÑÐ¸ÑÑ,Ð²ÑÐ¿Ð¾Ð»Ð½Ð¸Ð² ÐºÐ¾Ð¼Ð°Ð½Ð´Ñ</target>
        </trans-unit>
        <trans-unit id="ff49b793fd8ab51d1eea07150f147fa3080f3f30" translate="yes" xml:space="preserve">
          <source>module provides an alternate implementation of
the</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ Ð¾Ð±ÐµÑÐ¿ÐµÑÐ¸Ð²Ð°ÐµÑ Ð°Ð»ÑÑÐµÑÐ½Ð°ÑÐ¸Ð²Ð½ÑÑ ÑÐµÐ°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ</target>
        </trans-unit>
        <trans-unit id="d0a57acd370d343948d62cf4c609dc125efedcab" translate="yes" xml:space="preserve">
          <source>module provides an easier-to-use overlay for
the</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ Ð¾Ð±ÐµÑÐ¿ÐµÑÐ¸Ð²Ð°ÐµÑ Ð¿ÑÐ¾ÑÑÐ¾Ðµ Ð² Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ð¸ Ð½Ð°Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ Ð½Ð°</target>
        </trans-unit>
        <trans-unit id="47d61a9faa92a5a6311ece4af0de75cecc671aed" translate="yes" xml:space="preserve">
          <source>module provides functions and factories for
working with decorators.</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÑÐµÑ ÑÑÐ½ÐºÑÐ¸Ð¸ Ð¸ ÑÐ°Ð±ÑÐ¸ÐºÐ¸ Ð´Ð»Ñ ÑÐ°Ð±Ð¾ÑÑ Ñ Ð´ÐµÐºÐ¾ÑÐ°ÑÐ¾ÑÐ°Ð¼Ð¸.</target>
        </trans-unit>
        <trans-unit id="581e5c034c3cfe968b951dea7b68842a11108932" translate="yes" xml:space="preserve">
          <source>module provides functions for timing code, with
an alternate API to the standard library&amp;rsquo;s</source>
          <target state="translated">module provides functions for timing code, with an alternate API to the standard library&amp;rsquo;s</target>
        </trans-unit>
        <trans-unit id="97f90c7e694a044b4e324aa6bdd48aa676273d8f" translate="yes" xml:space="preserve">
          <source>module provides two slightly customized collection
classes,</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÑÐµÑ Ð´Ð²Ð° ÑÐ»ÐµÐ³ÐºÐ° Ð½Ð°ÑÑÑÐ°Ð¸Ð²Ð°ÐµÐ¼ÑÑ ÐºÐ»Ð°ÑÑÐ° ÐºÐ¾Ð»Ð»ÐµÐºÑÐ¸Ð¸,</target>
        </trans-unit>
        <trans-unit id="e4b09fc8e22a0fa04dd4e83394eb1af2ff41edb8" translate="yes" xml:space="preserve">
          <source>module which allows you to express your option
configuration in the form of Python lists, tuples, and dicts,
and also adds some minimal argument checking functionality.
(NOTE: In Python 2.7 and later, this module now uses the</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ,ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐµÑ Ð²ÑÑÐ°Ð·Ð¸ÑÑ ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ñ Ð¾Ð¿ÑÐ¸Ð¹ Ð² Ð²Ð¸Ð´Ðµ ÑÐ¿Ð¸ÑÐºÐ¾Ð² Python,ÐºÐ¾ÑÑÐµÐ¶ÐµÐ¹ Ð¸ Ð´Ð¸ÐºÑÐ°ÑÐ¾Ð²,Ð° ÑÐ°ÐºÐ¶Ðµ Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÑ Ð½ÐµÐºÐ¾ÑÐ¾ÑÑÐµ Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑÐ½ÑÐµ ÑÑÐ½ÐºÑÐ¸Ð¾Ð½Ð°Ð»ÑÐ½ÑÐµ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÐ¸ Ð¿ÑÐ¾Ð²ÐµÑÐºÐ¸ Ð°ÑÐ³ÑÐ¼ÐµÐ½ÑÐ¾Ð².(ÐÐÐÐÐ§ÐÐÐÐ:Ð Python 2.7 Ð¸ Ð±Ð¾Ð»ÐµÐµ Ð¿Ð¾Ð·Ð´Ð½Ð¸Ñ Ð²ÐµÑÑÐ¸ÑÑ,ÑÑÐ¾Ñ Ð¼Ð¾Ð´ÑÐ»Ñ ÑÐµÐ¿ÐµÑÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑ Ð¼Ð¾Ð´ÑÐ»Ñ</target>
        </trans-unit>
        <trans-unit id="05afb1dd5ec17c132bbc5bde0a8df1e8f7fa753a" translate="yes" xml:space="preserve">
          <source>module), and the type of I/O, including device type
(socket, serial port, etc.), mode (non-blocking/asynchronous vs.
blocking), and basic data handling. Also, each endpoint type has
a common API independent of the specific type of I/O and mode; a
client can always use the</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ),Ð° ÑÐ°ÐºÐ¶Ðµ ÑÐ¸Ð¿ Ð²Ð²Ð¾Ð´Ð°/Ð²ÑÐ²Ð¾Ð´Ð°,Ð²ÐºÐ»ÑÑÐ°Ñ ÑÐ¸Ð¿ ÑÑÑÑÐ¾Ð¹ÑÑÐ²Ð° (ÑÐ¾ÐºÐµÑ,Ð¿Ð¾ÑÐ»ÐµÐ´Ð¾Ð²Ð°ÑÐµÐ»ÑÐ½ÑÐ¹ Ð¿Ð¾ÑÑ Ð¸ Ñ.Ð´.),ÑÐµÐ¶Ð¸Ð¼ (Ð½ÐµÐ±Ð»Ð¾ÐºÐ¸ÑÑÑÑÐ¸Ð¹/Ð°ÑÐ¸Ð½ÑÑÐ¾Ð½Ð½ÑÐ¹ Ð¿ÑÐ¾ÑÐ¸Ð² Ð±Ð»Ð¾ÐºÐ¸ÑÑÑÑÐµÐ³Ð¾)Ð¸ Ð±Ð°Ð·Ð¾Ð²ÑÑ Ð¾Ð±ÑÐ°Ð±Ð¾ÑÐºÑ Ð´Ð°Ð½Ð½ÑÑ.ÐÑÐ¾Ð¼Ðµ ÑÐ¾Ð³Ð¾,ÐºÐ°Ð¶Ð´ÑÐ¹ ÑÐ¸Ð¿ ÐºÐ¾Ð½ÐµÑÐ½Ð¾Ð¹ ÑÐ¾ÑÐºÐ¸ Ð¸Ð¼ÐµÐµÑ Ð¾Ð±ÑÐ¸Ð¹ API,Ð½Ðµ Ð·Ð°Ð²Ð¸ÑÑÑÐ¸Ð¹ Ð¾Ñ ÐºÐ¾Ð½ÐºÑÐµÑÐ½Ð¾Ð³Ð¾ ÑÐ¸Ð¿Ð° Ð²Ð²Ð¾Ð´Ð°/Ð²ÑÐ²Ð¾Ð´Ð° Ð¸ ÑÐµÐ¶Ð¸Ð¼Ð°;ÐºÐ»Ð¸ÐµÐ½Ñ Ð²ÑÐµÐ³Ð´Ð° Ð¼Ð¾Ð¶ÐµÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑ Ð¸Ð½ÑÐµÑÑÐµÐ¹Ñ</target>
        </trans-unit>
        <trans-unit id="cc0d4e629d67c00c1b4689687bb0edf1a3a34b1b" translate="yes" xml:space="preserve">
          <source>module, since the</source>
          <target state="translated">Ð¼Ð¾Ð´ÑÐ»Ñ,Ð¿Ð¾ÑÐºÐ¾Ð»ÑÐºÑ</target>
        </trans-unit>
        <trans-unit id="cc5f2bc6dc67663a94ee036cdc744ac96b12d2d9" translate="yes" xml:space="preserve">
          <source>namedtuple</source>
          <target state="translated">namedtuple</target>
        </trans-unit>
        <trans-unit id="a1a358824924be93512057693b732f8efa77260d" translate="yes" xml:space="preserve">
          <source>namespace (of course the</source>
          <target state="translated">Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÑÐ½ (ÐºÐ¾Ð½ÐµÑÐ½Ð¾ Ð¶Ðµ</target>
        </trans-unit>
        <trans-unit id="d2af3698d0a7a713d29061b2903e7e634885260a" translate="yes" xml:space="preserve">
          <source>namespace also contains a convenience
function.</source>
          <target state="translated">Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÑÐ½ ÑÐ°ÐºÐ¶Ðµ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÑÐ´Ð¾Ð±Ð½ÑÑ ÑÑÐ½ÐºÑÐ¸Ñ.</target>
        </trans-unit>
        <trans-unit id="7e06653eb18b53a94ea92082bd6ce0e0567db76c" translate="yes" xml:space="preserve">
          <source>namespace and are instead provided by this function when the
built-in equivalents are not present. In this version of</source>
          <target state="translated">Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð° Ð¸Ð¼ÑÐ½ Ð¸ Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÑÑÑÑÑ ÑÑÐ¾Ð¹ ÑÑÐ½ÐºÑÐ¸ÐµÐ¹ Ð¿ÑÐ¸ Ð¾ÑÑÑÑÑÑÐ²Ð¸Ð¸ Ð²ÑÑÑÐ¾ÐµÐ½Ð½ÑÑ ÑÐºÐ²Ð¸Ð²Ð°Ð»ÐµÐ½ÑÐ¾Ð².Ð Ð´Ð°Ð½Ð½Ð¾Ð¹ Ð²ÐµÑÑÐ¸Ð¸</target>
        </trans-unit>
        <trans-unit id="85a3ea13ca7135947e59ef5143c74fecd8be7ba8" translate="yes" xml:space="preserve">
          <source>namespace has the same capability).
Once this has happened the first time, however, the class definition
is stored in the appropriate namespace, so additional imports of the
same class name (in different modules of your application) will not
re-do the &amp;ldquo;on the fly&amp;rdquo; construction; they will just retrieve the
same class object that was previously constructed.</source>
          <target state="translated">namespace has the same capability). Once this has happened the first time, however, the class definition is stored in the appropriate namespace, so additional imports of the same class name (in different modules of your application) will not re-do the &amp;ldquo;on the fly&amp;rdquo; construction; they will just retrieve the same class object that was previously constructed.</target>
        </trans-unit>
        <trans-unit id="c858cab55255042f9a814739523a5866d6b9f5ec" translate="yes" xml:space="preserve">
          <source>namespace. See the sub-package
and</source>
          <target state="translated">Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÑÐ½.Ð¡Ð¼.Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑ Ð¸</target>
        </trans-unit>
        <trans-unit id="d64b3dd92bae624f04d3984079b522ca4e3ed1d5" translate="yes" xml:space="preserve">
          <source>on POSIX systems, and the Windows registry
on Windows systems. As with the</source>
          <target state="translated">Ð½Ð° ÑÐ¸ÑÑÐµÐ¼Ð°Ñ POSIX,Ð¸ ÑÐµÐµÑÑÑ Windows Ð½Ð° ÑÐ¸ÑÑÐµÐ¼Ð°Ñ Windows.ÐÐ°Ðº Ð¸ Ð² ÑÐ»ÑÑÐ°Ðµ Ñ</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">Ð²Ð°ÑÐ¸Ð°Ð½ÑÑ</target>
        </trans-unit>
        <trans-unit id="2077b4dcf99ce6b938b23c06769e6111981e4e82" translate="yes" xml:space="preserve">
          <source>optparse</source>
          <target state="translated">Ð¾ÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ ÑÐ²Ð¾Ð¹ Ð²ÑÐ±Ð¾Ñ Ð½Ð°</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">Ð¸Ð»Ð¸</target>
        </trans-unit>
        <trans-unit id="aaf1d7132200405e78aa99a408662364ff57b58c" translate="yes" xml:space="preserve">
          <source>package namespace in order to
minimize clutter in the top-level namespace of your Python
installation. Each sub-directory of the</source>
          <target state="translated">Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ð¾ Ð¸Ð¼ÑÐ½ Ð¿Ð°ÐºÐµÑÐ¾Ð² Ð´Ð»Ñ Ð¼Ð¸Ð½Ð¸Ð¼Ð¸Ð·Ð°ÑÐ¸Ð¸ Ð±ÐµÑÐ¿Ð¾ÑÑÐ´ÐºÐ° Ð² Ð¿ÑÐ¾ÑÑÑÐ°Ð½ÑÑÐ²Ðµ Ð¸Ð¼ÑÐ½ Ð²ÐµÑÑÐ½ÐµÐ³Ð¾ ÑÑÐ¾Ð²Ð½Ñ Ð²Ð°ÑÐµÐ¹ ÑÑÑÐ°Ð½Ð¾Ð²ÐºÐ¸ Python.ÐÐ°Ð¶Ð´ÑÐ¹ Ð¿Ð¾Ð´ÐºÐ°ÑÐ°Ð»Ð¾Ð³</target>
        </trans-unit>
        <trans-unit id="2e7c0b550a00e0fbb2caf7111a4546ead192c7d8" translate="yes" xml:space="preserve">
          <source>parameter to the</source>
          <target state="translated">Ð¿Ð°ÑÐ°Ð¼ÐµÑÑ Ðº</target>
        </trans-unit>
        <trans-unit id="4723b44cc3da420744078efd1f87370bda27a7ed" translate="yes" xml:space="preserve">
          <source>parse_options</source>
          <target state="translated">parse_options</target>
        </trans-unit>
        <trans-unit id="73bfbbb9813abafc85c333f40f13bd6aab71f8a8" translate="yes" xml:space="preserve">
          <source>plib</source>
          <target state="translated">ÑÐµÐºÐ»Ð°Ð¼Ð½ÑÐ¹ ÑÐ¾Ð»Ð¸Ðº</target>
        </trans-unit>
        <trans-unit id="470787813a90b1b16cfe5cd647d1904e957fd73d" translate="yes" xml:space="preserve">
          <source>plib-setup-examples</source>
          <target state="translated">plib-setup-examples</target>
        </trans-unit>
        <trans-unit id="5a0e5d24f55f30cab41e3c799ab065949d83b56d" translate="yes" xml:space="preserve">
          <source>plib-setup-gui</source>
          <target state="translated">plib-setup-gui</target>
        </trans-unit>
        <trans-unit id="ddc8113c7c7019e8d02c734402d64b619d655c3d" translate="yes" xml:space="preserve">
          <source>plib.classes</source>
          <target state="translated">Ð¿ÑÐ°ÐºÑÐ¸ÑÐµÑÐºÐ¸Ðµ Ð·Ð°Ð½ÑÑÐ¸Ñ</target>
        </trans-unit>
        <trans-unit id="21ccce2c8dd69610ee77795bbb2be13a913d80b9" translate="yes" xml:space="preserve">
          <source>plib.stdlib</source>
          <target state="translated">ÑÐ¿Ð¸Ð»ÑÐºÐ°</target>
        </trans-unit>
        <trans-unit id="2f60e6393cfd7e46042a20570c25b08e0d5b312a" translate="yes" xml:space="preserve">
          <source>plib.stdlib.io.async</source>
          <target state="translated">plib.stdlib.io.async</target>
        </trans-unit>
        <trans-unit id="c7ef4c35d39ff52fd81253df496645a9ddb73f4e" translate="yes" xml:space="preserve">
          <source>plib.stdlib.io.blocking</source>
          <target state="translated">plib.stdlib.io.Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²ÐºÐ°</target>
        </trans-unit>
        <trans-unit id="40f5eca78ea9819584c6d964fe339582a92ed3e3" translate="yes" xml:space="preserve">
          <source>post-install script
does most of the work to enable this&amp;ndash;so you only need to
override if you don&amp;rsquo;t like the default), you should not have
to worry about any toolkit internal details; the goal of this
sub-package is to make them all look the same to your code.</source>
          <target state="translated">post-install script does most of the work to enable this&amp;ndash;so you only need to override if you don&amp;rsquo;t like the default), you should not have to worry about any toolkit internal details; the goal of this sub-package is to make them all look the same to your code.</target>
        </trans-unit>
        <trans-unit id="f12a5fb63e4512a2586723e4f3ae39ba5da10b6b" translate="yes" xml:space="preserve">
          <source>post-install script will install symlinks to the example
programs in the</source>
          <target state="translated">Ð¿Ð¾ÑÑÐ¸Ð½ÑÑÐ°Ð»Ð»ÑÑÐ¸Ð¾Ð½Ð½ÑÐ¹ ÑÐºÑÐ¸Ð¿Ñ ÑÑÑÐ°Ð½Ð¾Ð²Ð¸Ñ ÑÐ¸Ð¼-ÑÑÑÐ»ÐºÐ¸ Ð½Ð° Ð¿ÑÐ¸Ð¼ÐµÑÑ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼ Ð²</target>
        </trans-unit>
        <trans-unit id="0d3658f35ce13641267893143311fc82e501aab7" translate="yes" xml:space="preserve">
          <source>process_data</source>
          <target state="translated">Ð´Ð°Ð½Ð½ÑÐµ process_data</target>
        </trans-unit>
        <trans-unit id="baf94316185d819ed771c5049726f69d1614e3af" translate="yes" xml:space="preserve">
          <source>query_done</source>
          <target state="translated">Ð·Ð°Ð¿ÑÐ¾Ñ_ÑÐ´ÐµÐ»Ð°ÑÑ</target>
        </trans-unit>
        <trans-unit id="16728d18790deb58b3b8c1df74f06e536b532695" translate="yes" xml:space="preserve">
          <source>scripts</source>
          <target state="translated">ÑÐºÑÐ¸Ð¿ÑÑ</target>
        </trans-unit>
        <trans-unit id="50de66b735d30738618568294742fcf1dfa52a47" translate="yes" xml:space="preserve">
          <source>serial</source>
          <target state="translated">ÑÐµÑÐ¸Ð¹Ð½ÑÐ¹</target>
        </trans-unit>
        <trans-unit id="79d3140fb6b9b879d3626297caa5e1c1b6a8a6cd" translate="yes" xml:space="preserve">
          <source>serve_forever</source>
          <target state="translated">ÑÐ»ÑÐ¶Ð¸ÑÑ_Ð²ÑÐµÐ³Ð´Ð°</target>
        </trans-unit>
        <trans-unit id="2bce6044129cbc860653400aa7004f206a2365ed" translate="yes" xml:space="preserve">
          <source>setuphelper</source>
          <target state="translated">Ð¿Ð¾Ð¼Ð¾ÑÐ½Ð¸Ðº Ð¿Ð¾ ÑÑÑÐ°Ð½Ð¾Ð²ÐºÐµ</target>
        </trans-unit>
        <trans-unit id="897d21056a341314b60764c31b36c1fad542e78a" translate="yes" xml:space="preserve">
          <source>socket</source>
          <target state="translated">ÑÐ¾Ð·ÐµÑÐºÐ°</target>
        </trans-unit>
        <trans-unit id="b26dc72d261a92c1cfd1e643717e450a84cf2122" translate="yes" xml:space="preserve">
          <source>stack</source>
          <target state="translated">ÑÑÐµÐº</target>
        </trans-unit>
        <trans-unit id="dbc2a4646cba85198f68e20847c4162fccf9629d" translate="yes" xml:space="preserve">
          <source>stdlib_io_testlib.py</source>
          <target state="translated">stdlib_io_testlib.py</target>
        </trans-unit>
        <trans-unit id="2f33dcb345755b59d72a337fd1f8478fa1064948" translate="yes" xml:space="preserve">
          <source>sub-package is used to make all the classes
appear in the</source>
          <target state="translated">ÐÐ¾Ð´Ð¿Ð°ÐºÐµÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑÑÑ Ð´Ð»Ñ ÑÐ¾Ð³Ð¾,ÑÑÐ¾Ð±Ñ Ð²ÑÐµ ÐºÐ»Ð°ÑÑÑ Ð¿Ð¾ÑÐ²Ð¸Ð»Ð¸ÑÑ Ð²</target>
        </trans-unit>
        <trans-unit id="f5c80c47e426878c7b2dfc06ee6192fd16266f01" translate="yes" xml:space="preserve">
          <source>sub-package namespaces, so that instead of
doing the above class construction &amp;ldquo;by hand&amp;rdquo;, you can just append a
suffix to your desired class name, thus:</source>
          <target state="translated">sub-package namespaces, so that instead of doing the above class construction &amp;ldquo;by hand&amp;rdquo;, you can just append a suffix to your desired class name, thus:</target>
        </trans-unit>
        <trans-unit id="66dc8f6892d573e7a48570197d0412813d6bdf3f" translate="yes" xml:space="preserve">
          <source>sub-package provides three mixin classes for this purpose,</source>
          <target state="translated">Ð Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÐµ Ð¿ÑÐµÐ´ÑÑÐ¼Ð¾ÑÑÐµÐ½Ñ ÑÑÐ¸ ÐºÐ»Ð°ÑÑÐ° Ð¼Ð¸ÐºÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ Ð´Ð»Ñ ÑÑÐ¾Ð¹ ÑÐµÐ»Ð¸,</target>
        </trans-unit>
        <trans-unit id="d1488cc8a8620a619f6233e7697296a307d062cc" translate="yes" xml:space="preserve">
          <source>sub-package, the
goal is to hide the internal details of the configuration
storage from your code, so all you have to do is define
your configuration structure, again using native Python data
types (lists and dicts).</source>
          <target state="translated">ÐÐ¾Ð´Ð¿Ð°ÐºÐµÑ,ÑÐµÐ»ÑÑ ÐºÐ¾ÑÐ¾ÑÐ¾Ð³Ð¾ ÑÐ²Ð»ÑÐµÑÑÑ ÑÐ¾ÐºÑÑÑÐ¸Ðµ Ð²Ð½ÑÑÑÐµÐ½Ð½Ð¸Ñ Ð´ÐµÑÐ°Ð»ÐµÐ¹ ÑÑÐ°Ð½Ð¸Ð»Ð¸ÑÐ° ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ð¸ Ð¾Ñ Ð²Ð°ÑÐµÐ³Ð¾ ÐºÐ¾Ð´Ð°,Ð¿Ð¾ÑÑÐ¾Ð¼Ñ Ð²ÑÐµ,ÑÑÐ¾ Ð²Ð°Ð¼ Ð½ÑÐ¶Ð½Ð¾ ÑÐ´ÐµÐ»Ð°ÑÑ,ÑÑÐ¾ Ð¾Ð¿ÑÐµÐ´ÐµÐ»Ð¸ÑÑ Ð²Ð°ÑÑ ÑÑÑÑÐºÑÑÑÑ ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ð¸,Ð¾Ð¿ÑÑÑ Ð¶Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÑ ÑÐ¾Ð´Ð½ÑÐµ ÑÐ¸Ð¿Ñ Ð´Ð°Ð½Ð½ÑÑ Ð½Ð° Python (ÑÐ¿Ð¸ÑÐºÐ¸ Ð¸ ÐºÑÐ±ÐºÐ¸).</target>
        </trans-unit>
        <trans-unit id="a30bd8efce7c5fad58b484bdc5114252a6ecaf64" translate="yes" xml:space="preserve">
          <source>sub-packages
each export a</source>
          <target state="translated">Ð¿Ð¾Ð´Ð¿Ð°ÐºÐµÑÑ ÐºÐ°Ð¶Ð´ÑÐ¹ ÑÐºÑÐ¿Ð¾ÑÑ a</target>
        </trans-unit>
        <trans-unit id="eaddba0ce72c8ac19cc864b51390724a8cf2cc5c" translate="yes" xml:space="preserve">
          <source>suffix (or, alternately,</source>
          <target state="translated">ÑÑÑÑÐ¸ÐºÑ (Ð¸Ð»Ð¸,Ð¿Ð¾Ð¾ÑÐµÑÑÐ´Ð½Ð¾,</target>
        </trans-unit>
        <trans-unit id="8451ba8a14d79753d34cb33b51ba46b4b025eb81" translate="yes" xml:space="preserve">
          <source>super</source>
          <target state="translated">ÑÑÐ¿ÐµÑ</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">ÑÐµÑÑÐ¾Ð²ÑÐ¹</target>
        </trans-unit>
        <trans-unit id="c98c0b8e0a197207b4cf70992c9b2388cbeeb5b6" translate="yes" xml:space="preserve">
          <source>test_stdlib_io.py</source>
          <target state="translated">test_stdlib_io.py</target>
        </trans-unit>
        <trans-unit id="9ddce94aaf73276e3ba82cd165d480362d30e053" translate="yes" xml:space="preserve">
          <source>timeit</source>
          <target state="translated">Ð²ÑÐµÐ¼Ñ</target>
        </trans-unit>
        <trans-unit id="35c66bc16aacc03688179726efac86812a2de618" translate="yes" xml:space="preserve">
          <source>timer</source>
          <target state="translated">ÑÐ°Ð¹Ð¼ÐµÑ</target>
        </trans-unit>
        <trans-unit id="060d425be23741091dd0429a375f4983bf59cf63" translate="yes" xml:space="preserve">
          <source>type
also has a</source>
          <target state="translated">ÑÐ¸Ð¿ ÑÐ°ÐºÐ¶Ðµ Ð¸Ð¼ÐµÐµÑ</target>
        </trans-unit>
        <trans-unit id="5655cae7b7bc7f3cb1403c06950384667fc6b0c9" translate="yes" xml:space="preserve">
          <source>type also has &amp;ldquo;persistent&amp;rdquo;
classes, which support full-duplex asynchronous communication; these
are the</source>
          <target state="translated">type also has &amp;ldquo;persistent&amp;rdquo; classes, which support full-duplex asynchronous communication; these are the</target>
        </trans-unit>
        <trans-unit id="2a7a4605f43ed1fe666e3b7af34c30b51455f466" translate="yes" xml:space="preserve">
          <source>upgrade_builtins</source>
          <target state="translated">upgrade_builtins</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
