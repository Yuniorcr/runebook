<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/frosted/">
    <body>
      <group id="frosted">
        <trans-unit id="4ef6fe32aaec0d511495a02d3af35e782f2e2043" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;which is equivalent to&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;что эквивалентно&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdb654ce3ed9d4f1148d7fb3a2c220ae6715fb68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E100 Series&lt;/strong&gt; - &lt;em&gt;Import Errors&lt;/em&gt; - &lt;strong&gt;E101&lt;/strong&gt;: UnusedImport - Note that
it is common practice to import something and not use it for the purpose
of exposing it as an API, or using it in an exec statment below. Frosted
tries to circumvent most of this by ignoring this error by default in
&lt;strong&gt;init&lt;/strong&gt;.py - &lt;strong&gt;E102&lt;/strong&gt;: ImportShadowedByLoopVar - &lt;strong&gt;E103&lt;/strong&gt;:
ImportStarUsed</source>
          <target state="translated">&lt;strong&gt;Серия E100&lt;/strong&gt; - &lt;em&gt;Ошибки при импорте&lt;/em&gt; - &lt;strong&gt;E101&lt;/strong&gt; : UnusedImport - Обратите внимание, что распространенной практикой является импорт чего-либо, а не использование его с целью раскрытия его как API или использования в приведенном ниже статусе exec. Frosted пытается обойти большую часть этого, игнорируя эту ошибку по умолчанию в &lt;strong&gt;init&lt;/strong&gt; .py - &lt;strong&gt;E102&lt;/strong&gt; : ImportShadowedByLoopVar - &lt;strong&gt;E103&lt;/strong&gt; : ImportStarUsed</target>
        </trans-unit>
        <trans-unit id="51f136c56cdf0ff5a61f33270d77ab61d8f8393a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E200 Series&lt;/strong&gt; - &lt;em&gt;Function / Method Definition and Calling Errors&lt;/em&gt; -
&lt;strong&gt;E201&lt;/strong&gt;: MultipleValuesForArgument - &lt;strong&gt;E202&lt;/strong&gt;: TooFewArguments -
&lt;strong&gt;E203&lt;/strong&gt;: TooManyArguments - &lt;strong&gt;E204&lt;/strong&gt;: UnexpectedArgument - &lt;strong&gt;E205&lt;/strong&gt;:
NeedKwOnlyArgument - &lt;strong&gt;E206&lt;/strong&gt;: DuplicateArgument - &lt;strong&gt;E207&lt;/strong&gt;:
LateFutureImport - &lt;strong&gt;E208&lt;/strong&gt;: ReturnWithArgsInsideGenerator</source>
          <target state="translated">&lt;strong&gt;E200 серии&lt;/strong&gt; - &lt;em&gt;Функция / Метод Определение и Вызывающие ошибки&lt;/em&gt; - &lt;strong&gt;E201&lt;/strong&gt; : MultipleValuesForArgument - &lt;strong&gt;E202&lt;/strong&gt; : TooFewArguments - &lt;strong&gt;E203&lt;/strong&gt; : TooManyArguments - &lt;strong&gt;E204&lt;/strong&gt; : UnexpectedArgument - &lt;strong&gt;E205&lt;/strong&gt; : NeedKwOnlyArgument - &lt;strong&gt;E206&lt;/strong&gt; : DuplicateArgument - &lt;strong&gt;E207&lt;/strong&gt; : LateFutureImport - &lt;strong&gt;E208&lt;/strong&gt; : ReturnWithArgsInsideGenerator</target>
        </trans-unit>
        <trans-unit id="91123619c78fbf803b13437f853785d7cff2e310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E300 Series&lt;/strong&gt; - &lt;em&gt;Variable / Definition Usage Errors&lt;/em&gt; - &lt;strong&gt;E301&lt;/strong&gt;:
RedefinedWhileUnused - &lt;strong&gt;E302&lt;/strong&gt;: RedefinedInListComp - &lt;strong&gt;E303&lt;/strong&gt;:
UndefinedName - &lt;strong&gt;E304&lt;/strong&gt;: UndefinedExport - &lt;strong&gt;E305&lt;/strong&gt;: UndefinedLocal -
&lt;strong&gt;E306&lt;/strong&gt;: Redefined - &lt;strong&gt;E307&lt;/strong&gt;: UnusedVariable</source>
          <target state="translated">&lt;strong&gt;Серия E300&lt;/strong&gt; - &lt;em&gt;Ошибки использования переменной / определения&lt;/em&gt; - &lt;strong&gt;E301&lt;/strong&gt; : RedefinedWhileUnused - &lt;strong&gt;E302&lt;/strong&gt; : RedefinedInListComp - &lt;strong&gt;E303&lt;/strong&gt; : UndefinedName - &lt;strong&gt;E304&lt;/strong&gt; : UndefinedExport - &lt;strong&gt;E305&lt;/strong&gt; : UndefinedLocal - &lt;strong&gt;E306&lt;/strong&gt; : Redefined - &lt;strong&gt;E307&lt;/strong&gt; : UnusedVariable</target>
        </trans-unit>
        <trans-unit id="c6f4c1846bde7a0430ed90e58a65694c74768f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E400 Series&lt;/strong&gt; - &lt;em&gt;Syntax Errors&lt;/em&gt; - &lt;strong&gt;E401&lt;/strong&gt;: DoctestSyntaxError -
&lt;strong&gt;E402&lt;/strong&gt;: PythonSyntaxError</source>
          <target state="translated">&lt;strong&gt;Серия E400&lt;/strong&gt; - &lt;em&gt;Синтаксические ошибки&lt;/em&gt; - &lt;strong&gt;E401&lt;/strong&gt; : DoctestSyntaxError - &lt;strong&gt;E402&lt;/strong&gt; : PythonSyntaxError</target>
        </trans-unit>
        <trans-unit id="db8cd0e349c3f336246fe9337de505b1aaf9117f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I100 Series&lt;/strong&gt; - &lt;em&gt;General Information&lt;/em&gt; - &lt;strong&gt;I101&lt;/strong&gt;: Generic</source>
          <target state="translated">&lt;strong&gt;Серия I100&lt;/strong&gt; - &lt;em&gt;Общая информация&lt;/em&gt; - &lt;strong&gt;I101&lt;/strong&gt; : Универсальный</target>
        </trans-unit>
        <trans-unit id="eaaaf6b77343fe218c2c41af91c5c04dba8197d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;W100 Series&lt;/strong&gt; - &lt;em&gt;Exception Warning&lt;/em&gt; - &lt;strong&gt;W101&lt;/strong&gt;: BareExcept - Note that
one common case where a bare except is okay, and should be ignored is
when handling the rollback of database transactions. In this or simular
cases the warning can safely be ignored.</source>
          <target state="translated">&lt;strong&gt;Серия W100&lt;/strong&gt; - &lt;em&gt;Предупреждение об исключении&lt;/em&gt; - &lt;strong&gt;W101&lt;/strong&gt; : BareExcept - Обратите внимание, что одним из распространенных случаев, когда пустое исключение является допустимым и его следует игнорировать, является обработка отката транзакций базы данных. В этом или аналогичном случае предупреждение можно проигнорировать.</target>
        </trans-unit>
        <trans-unit id="b1a7339bfb02c5019d4881061f2b14ed9db57ad6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;W200 Series&lt;/strong&gt; - &lt;em&gt;Handling Warning&lt;/em&gt; - &lt;strong&gt;W201&lt;/strong&gt;: FileSkipped</source>
          <target state="translated">&lt;strong&gt;Серия W200&lt;/strong&gt; - &lt;em&gt;Предупреждение при обращении&lt;/em&gt; - &lt;strong&gt;W201&lt;/strong&gt; : файл пропущен</target>
        </trans-unit>
        <trans-unit id="0c789b95bd67d4681b6f6fc42d66f9b7eeaaa0ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from the command line:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;из командной строки:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1e3067383abe8cc23ac42b2ec1f38efc501a388" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from within Python:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;из Python:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7edb2d56703edb34a11abe229a955dde7b122524" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ignore_frosted_errors&lt;/strong&gt; - A comma delimited list of Frosted error
codes to ignore. You can see a definition of all error codes in the
next section.</source>
          <target state="translated">&lt;strong&gt;ignore_frosted_errors&lt;/strong&gt; - разделенный запятыми список кодов ошибок Frosted, которые следует игнорировать. Вы можете увидеть определение всех кодов ошибок в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="65edc1f20fbac00d358bb5b9974f09625072bbc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;skip&lt;/strong&gt; - A comma delimited list of file or directory names to skip.
The name must exactly match the entire path, the name of the file, or
one of it&amp;rsquo;s parent directories for it to be skipped.</source>
          <target state="translated">&lt;strong&gt;skip&lt;/strong&gt; - список пропущенных имен файлов или каталогов, разделенных запятыми. Имя должно точно соответствовать всему пути, имени файла или одному из его родительских каталогов, чтобы его можно было пропустить.</target>
        </trans-unit>
        <trans-unit id="3dc6e413f248eaefbb85a6c2e579c8fabf8ab258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vim&lt;/strong&gt; - Support has been added via syntastic:
&lt;a href=&quot;https://github.com/scrooloose/syntastic&quot;&gt;https://github.com/scrooloose/syntastic&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;vim&lt;/strong&gt; - поддержка была добавлена ​​через синтастику: &lt;a href=&quot;https://github.com/scrooloose/syntastic&quot;&gt;https://github.com/scrooloose/syntastic&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dacdfbfa3643508b59baffabbd74fbf1141686eb" translate="yes" xml:space="preserve">
          <source>A passive Python syntax checker</source>
          <target state="translated">Пассивная проверка синтаксиса Питона.</target>
        </trans-unit>
        <trans-unit id="f05ae1deac2b012b134c2438f967166a8b1b1d24" translate="yes" xml:space="preserve">
          <source>Additionally, you can specify project level configuration simply by
placing a .frosted.cfg file at the root of your project. frosted will
look up to 25 directories up, from the one it is ran, to find a project
specific configuration.</source>
          <target state="translated">Кроме того,вы можете указать конфигурацию на уровне проекта,просто поместив файл .frosted.cfg в корне вашего проекта.frosted будет искать до 25 каталогов вверх,начиная с того,который запущен,чтобы найти конфигурацию,специфичную для конкретного проекта.</target>
        </trans-unit>
        <trans-unit id="25fb9a5ee54e078defdfc3d21d2727ebfb399a84" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the command line tool in an API fashion, by
passing &amp;lsquo;-&amp;lsquo; in as the filename and then sending file content to stdin.</source>
          <target state="translated">Кроме того, вы можете использовать инструмент командной строки в стиле API, передав '-' в качестве имени файла и затем отправив содержимое файла на стандартный ввод.</target>
        </trans-unit>
        <trans-unit id="0be4d64c6938fbed9c075c62ab23a164eb04a4f5" translate="yes" xml:space="preserve">
          <source>And it will only get better from here on out!</source>
          <target state="translated">И с этого момента будет только лучше!</target>
        </trans-unit>
        <trans-unit id="42057ef00c7f8e30e615d0c4c23712232dae2e88" translate="yes" xml:space="preserve">
          <source>Beyond that, frosted supports setup.cfg based configuration. All you
need to do is add a [frosted] section to your project&amp;rsquo;s setup.cfg file
with any desired settings.</source>
          <target state="translated">Кроме того, frosted поддерживает конфигурацию на основе setup.cfg. Все, что вам нужно сделать, это добавить секцию [frosted] в файл setup.cfg вашего проекта с любыми желаемыми настройками.</target>
        </trans-unit>
        <trans-unit id="ba257e0b625043dfaf7bb73a01cb3b3c43946471" translate="yes" xml:space="preserve">
          <source>Configuring Frosted</source>
          <target state="translated">Настройка Морозного</target>
        </trans-unit>
        <trans-unit id="f97271c50277c011620671297853d05ec2b92ba8" translate="yes" xml:space="preserve">
          <source>Contributing to Frosted</source>
          <target state="translated">Взнос в Фростед</target>
        </trans-unit>
        <trans-unit id="ccbeec3ffde90804ad8da15fd7c2dccaad076ad5" translate="yes" xml:space="preserve">
          <source>Current list of known supported text-editors:</source>
          <target state="translated">Текущий список известных поддерживаемых текстовых редакторов:</target>
        </trans-unit>
        <trans-unit id="b00d695c23ca3cd4ef5491a11b4cbbedfd3c7edc" translate="yes" xml:space="preserve">
          <source>Discussing improvements and getting help</source>
          <target state="translated">Обсуждение улучшений и получение помощи</target>
        </trans-unit>
        <trans-unit id="b14b9dde9eb1f18474cec6f80fc3521f63dc0986" translate="yes" xml:space="preserve">
          <source>Finally, frosted supports editorconfig files using the standard syntax
defined here: &lt;a href=&quot;http://editorconfig.org/&quot;&gt;http://editorconfig.org/&lt;/a&gt;</source>
          <target state="translated">Наконец, frosted поддерживает файлы editorconfig с использованием стандартного синтаксиса, определенного здесь: &lt;a href=&quot;http://editorconfig.org/&quot;&gt;http://editorconfig.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61db38ce2e7159f09438baf2f2fc621a288c791f" translate="yes" xml:space="preserve">
          <source>Frosted Code API</source>
          <target state="translated">API Морозного кода</target>
        </trans-unit>
        <trans-unit id="4ad78a547c6f9453b8bba535da660af67656d92e" translate="yes" xml:space="preserve">
          <source>Frosted Error Codes</source>
          <target state="translated">Морозные коды ошибок</target>
        </trans-unit>
        <trans-unit id="56c180a5bfc734d79e4bf6e3c8f16a833730f8ce" translate="yes" xml:space="preserve">
          <source>Frosted adds the ability to configure which files you want to check,
and which errors you don&amp;rsquo;t care about. Which, in my opinion, is a
must have feature.</source>
          <target state="translated">Frosted добавляет возможность настраивать, какие файлы вы хотите проверять, а какие ошибки вам не нужны. Что, на мой взгляд, является обязательной функцией.</target>
        </trans-unit>
        <trans-unit id="b9766ba1da2f88e79530d257757c284f9855a063" translate="yes" xml:space="preserve">
          <source>Frosted exposes a simple API for checking Python code from withing other
Python applications or plugins.</source>
          <target state="translated">Frosted предоставляет простой API для проверки кода на Python с помощью других приложений или плагинов Python.</target>
        </trans-unit>
        <trans-unit id="95d53df06ba80b80ca37e1fd70694a6271da3261" translate="yes" xml:space="preserve">
          <source>Frosted implements the .editorconfig standard for configuration. This
means you only need one configuration file for isort, frosted, and
all the code editors anybody working with your project may be using.</source>
          <target state="translated">Frosted реализует стандарт .editorconfig для настройки.Это означает,что вам нужен только один конфигурационный файл для isort,frosted,и все редакторы кода,которые могут быть использованы любым человеком,работающим с вашим проектом.</target>
        </trans-unit>
        <trans-unit id="a960390525e2dd7954f62abff39832964a25705a" translate="yes" xml:space="preserve">
          <source>Frosted is a fork of pyflakes (originally created by Phil Frost) that
aims at more open contribution from the outside public, a smaller more
maintainable code base, and a better Python checker for all. It
currently cleanly supports Python 2.6 - 3.4 using pies
(&lt;a href=&quot;https://github.com/timothycrosley/pies&quot;&gt;https://github.com/timothycrosley/pies&lt;/a&gt;) to achieve this without ugly
hacks and/or py2to3.</source>
          <target state="translated">Frosted - это форк pyflakes (первоначально созданный Филом Фростом), который нацелен на более открытый вклад внешней общественности, меньшую, более удобную в обслуживании базу кода и лучшую программу проверки Python для всех. В настоящее время он полностью поддерживает Python 2.6 - 3.4 с использованием пирогов ( &lt;a href=&quot;https://github.com/timothycrosley/pies&quot;&gt;https://github.com/timothycrosley/pies&lt;/a&gt; ), чтобы добиться этого без уродливых хаков и / или py2to3.</target>
        </trans-unit>
        <trans-unit id="df792e13e3ff18557c8717c83b64eb5fda85e2f6" translate="yes" xml:space="preserve">
          <source>Frosted is a homage to the original pyflakes creator Phil Frost.</source>
          <target state="translated">Фростед-дань уважения оригинальному создателю пифлейков Филу Фросту.</target>
        </trans-unit>
        <trans-unit id="c04aaf6c7a69fabff26c9a7425b4b8dcc508c0ce" translate="yes" xml:space="preserve">
          <source>Frosted recognizes the following errors when present within your code.
You can use the &amp;lsquo;ignore_frosted_errors&amp;rsquo; setting to specify any errors
you want Frosted to ignore. If you specify the series error code (ex:
E100) all errors in that series will be ignored.</source>
          <target state="translated">Frosted распознает следующие ошибки, если они присутствуют в вашем коде. Вы можете использовать параметр ignore_frosted_errors, чтобы указать любые ошибки, которые Frosted должен игнорировать. Если вы укажете код ошибки серии (например, E100), все ошибки в этой серии будут проигнорированы.</target>
        </trans-unit>
        <trans-unit id="58297a26dee9e4f8f6bfe4da51f4bd7647fb1958" translate="yes" xml:space="preserve">
          <source>Frosted switched from Java style unittests to the more Pythonic
py.test (I admit this is highly subjective).</source>
          <target state="translated">Фростед перешел с юнит-тестов в стиле Java на более питонический py.test (признаю,это весьма субъективно).</target>
        </trans-unit>
        <trans-unit id="44d4e83b4f62fe96cc99a893a1dbbe7b8932716a" translate="yes" xml:space="preserve">
          <source>Frosted uses a more logical, self-documenting, and standard terminal
interface. With pyflakes the default action without any arguments is
to do nothing (waiting for stdin) with Frosted you get an error and
help.</source>
          <target state="translated">Frosted использует более логичный,самооформленный и стандартный терминальный интерфейс.С pyflakes действие по умолчанию без аргументов-ничего не делать (ожидание stdin)с Frosted вы получаете ошибку и помощь.</target>
        </trans-unit>
        <trans-unit id="8e0f66da9f99f9219ba7e467869e4d2e1e146b96" translate="yes" xml:space="preserve">
          <source>Frosting. Duh.</source>
          <target state="translated">Мороз.Ага.</target>
        </trans-unit>
        <trans-unit id="442be9cc1d61d9626c696712b7cc41f75da56b09" translate="yes" xml:space="preserve">
          <source>If you find the default frosted settings do not work well for your
project, frosted provides several ways to adjust the behavior.</source>
          <target state="translated">Если вы обнаружили,что настройки по умолчанию не работают хорошо для вашего проекта,то frosted предоставляет несколько способов настроить поведение.</target>
        </trans-unit>
        <trans-unit id="a62a2ef0c1df7e9819efd1195443f6d7a429318c" translate="yes" xml:space="preserve">
          <source>Installing Frosted</source>
          <target state="translated">Установка Мороз</target>
        </trans-unit>
        <trans-unit id="7735fad0dea1d9c448fc4c2dacc2ec5c7405b926" translate="yes" xml:space="preserve">
          <source>Installing Frosted is as simple as:</source>
          <target state="translated">Установка Frosted так же проста,как и установка:</target>
        </trans-unit>
        <trans-unit id="52aada0da1b8f599889022da9afcd8a15ec38dbb" translate="yes" xml:space="preserve">
          <source>Integration with text editors and tools is a priority for the project.
As such, any pull request that adds integration support or links to a
third-party project that does will be enthusiastically accepted.</source>
          <target state="translated">Интеграция с текстовыми редакторами и инструментами является приоритетом для проекта.Таким образом,любой запрос на вытаскивание,который добавляет поддержку интеграции или ссылки на сторонний проект,который это делает,будет с энтузиазмом принят.</target>
        </trans-unit>
        <trans-unit id="7aef83f9ffbe19fb0df18d22856cfeffa700c459" translate="yes" xml:space="preserve">
          <source>Lots of code has been re-factored and simplified, Frosted aims to be
faster and leaner then pyflakes ever was.</source>
          <target state="translated">Множество кода было переработано и упрощено,Frosted стремится быть быстрее и тоньше,чем когда-либо были пифлейки.</target>
        </trans-unit>
        <trans-unit id="dd6b01a0755a85a531161cb098cb3fcef3c48366" translate="yes" xml:space="preserve">
          <source>Meaning You can place any standard frosted configuration parameters
within a .editorconfig file under the *.py section and they will be
honored.</source>
          <target state="translated">Это означает,что Вы можете разместить любые стандартные параметры конфигурации в файле .editorconfig в разделе *.py,и они будут выполнены.</target>
        </trans-unit>
        <trans-unit id="f7c0f45570df07053b118b0a8641e63ccdcc2948" translate="yes" xml:space="preserve">
          <source>Note: the maintainer of pyflakes has been added as a contributer to
frosted.</source>
          <target state="translated">Замечание:в качестве вкладчика в заморозки был добавлен сопровождающий пифлейков.</target>
        </trans-unit>
        <trans-unit id="71b3e24ee36bda7f224f6899b05934f03f66f002" translate="yes" xml:space="preserve">
          <source>Our preferred contributions come in the form of pull requests and issue
reports. That said, we will not deny monetary contributions. If you
desire to do this using flattr etc, please make sure you flattr @bitglue
as he is the original creator of pyflakes and without his contribution
Frosted would not be possible.</source>
          <target state="translated">Предпочтительные для нас материалы поступают в виде запросов о подтягивании и отчетов о выпуске.При этом мы не будем отказывать в денежных взносах.Если вы хотите сделать это с помощью flattr и т.д.,пожалуйста,убедитесь,что вы flattr @bitglue,так как он является оригинальным создателем пифлейков и без его вклада Frosted было бы невозможно.</target>
        </trans-unit>
        <trans-unit id="f99a61e8fa41c9ee09ff2481203c0b4281e8b68d" translate="yes" xml:space="preserve">
          <source>Pyflakes was a great project, and introduced a great approach for
quickly checking for Python coding errors. I am very grateful to the
original creators. However, I feel over the last year it has become
stagnant, without a clear vision and someone willing to take true
ownership of the project. While I know it is in no way intentional,
critical failures have stayed open, despite perfectly complete and valid
pull-requests open, without so much as an acknowledgement from the
maintainer. As I genuinely believe open source projects need constant
improvement (releasing early and often), I decided to start this project
and look for as much input as possible from the Python community. I&amp;rsquo;m
hoping together we can build an even more awesome code checker!</source>
          <target state="translated">Pyflakes был отличным проектом и представил отличный подход для быстрой проверки ошибок программирования Python. Я очень благодарен авторам оригинала. Однако я чувствую, что за последний год он застопорился, без ясного видения и без кого-то, кто хотел бы взять на себя ответственность за проект. Хотя я знаю, что это никоим образом не является преднамеренным, критические сбои остаются открытыми, несмотря на то, что открыты совершенно полные и действительные запросы на вытягивание, без какого-либо подтверждения от сопровождающего. Поскольку я искренне верю, что проекты с открытым исходным кодом нуждаются в постоянном улучшении (выпуске рано и часто), я решил начать этот проект и получить как можно больше отзывов от сообщества Python. Я надеюсь, что вместе мы сможем создать еще более потрясающую программу проверки кода!</target>
        </trans-unit>
        <trans-unit id="7871de9760f9cc256bf52c8dd2e5247928cd5b2f" translate="yes" xml:space="preserve">
          <source>Several improvements and fixes that have stayed open (and ignored) on
mainline pyflakes have been integrated.</source>
          <target state="translated">Были интегрированы несколько улучшений и исправлений,которые оставались открытыми (и игнорировались)на магистральных пифлейках.</target>
        </trans-unit>
        <trans-unit id="6cd8a7665afbfd4a51ee84a543b36235cb98b330" translate="yes" xml:space="preserve">
          <source>Text Editor Integration</source>
          <target state="translated">Интеграция текстового редактора</target>
        </trans-unit>
        <trans-unit id="1c2cc8019942f0a801a3aecd17dbec36a9692828" translate="yes" xml:space="preserve">
          <source>Thanks and I hope you enjoy the new Frosted pyflakes!</source>
          <target state="translated">Спасибо и я надеюсь,что вам понравятся новые Морозные пирожки!</target>
        </trans-unit>
        <trans-unit id="69ce9a8ded42bb83e37788c82c62c192ad8dd573" translate="yes" xml:space="preserve">
          <source>The following improvements have already been implemented into Frosted</source>
          <target state="translated">В Фростед уже внедрены следующие усовершенствования</target>
        </trans-unit>
        <trans-unit id="1dd2abb00d02271a9efed958ff2abf70147010c4" translate="yes" xml:space="preserve">
          <source>The number one reason frosted is better is because of you! Or rather,
the Python community at large. I will quickly respond to any pull
requests, recommendations, or bug reports that come my way.</source>
          <target state="translated">Причина номер один в том,что замороженные лучше из-за тебя! Или,точнее,из-за сообщества Пайтонов в целом.Я буду быстро реагировать на любые запросы о вытаскивании,рекомендации или сообщения об ошибках,которые попадаются на моём пути.</target>
        </trans-unit>
        <trans-unit id="03ad734259090ea075f97a150fd191d04cd88c7c" translate="yes" xml:space="preserve">
          <source>To configure frosted for a single user create a ~/.frosted.cfg file:</source>
          <target state="translated">Для настройки frosted для одного пользователя создайте файл ~/.frosted.cfg:</target>
        </trans-unit>
        <trans-unit id="35faccbdee310d487bbb92db1e21b210ef40a12e" translate="yes" xml:space="preserve">
          <source>Using Frosted</source>
          <target state="translated">Используя Фростед</target>
        </trans-unit>
        <trans-unit id="8ab460afa876c7800484ae1f7a2f035342dcfab8" translate="yes" xml:space="preserve">
          <source>Using any of the following methods will result in a quick resolution to
any issue you may have with Frosted or a quick response to any
implementation detail you wish to discuss. - &lt;a href=&quot;https://mail.python.org/mailman/listinfo/code-quality&quot;&gt;Mailing
List&lt;/a&gt; - best
place to discuss large architectural changes or changes that effect that
may effect Python code-quality projects beyond Frosted. - &lt;a href=&quot;https://github.com/timothycrosley/frosted/issues&quot;&gt;Github
issues&lt;/a&gt; - best
place to report bugs, ask for concretely defined features, and even ask
for general help. - &lt;a href=&quot;mailto:timothy.crosley%40gmail.com&quot;&gt;timothy.crosley@gmail.com&lt;/a&gt; - feel free to email me
any questions or concerns you have that you don&amp;rsquo;t think would benefit
from community wide involvement.</source>
          <target state="translated">Использование любого из следующих методов приведет к быстрому решению любой проблемы, которая может возникнуть у вас с Frosted, или быстрому ответу на любые детали реализации, которые вы хотите обсудить. - &lt;a href=&quot;https://mail.python.org/mailman/listinfo/code-quality&quot;&gt;Список рассылки&lt;/a&gt; - лучшее место для обсуждения крупных архитектурных изменений или изменений, которые могут повлиять на проекты качества кода Python за пределами Frosted. - &lt;a href=&quot;https://github.com/timothycrosley/frosted/issues&quot;&gt;Проблемы с Github&lt;/a&gt; - лучшее место, чтобы сообщать об ошибках, запрашивать конкретные функции и даже обращаться за общей помощью. - &lt;a href=&quot;mailto:timothy.crosley%40gmail.com&quot;&gt;timothy.crosley@gmail.com&lt;/a&gt; - не стесняйтесь присылать мне любые вопросы или проблемы, которые, по вашему мнению, не принесут пользы от широкого участия сообщества.</target>
        </trans-unit>
        <trans-unit id="93b5f1a1069707c0cfcee851709848835f3dd9d6" translate="yes" xml:space="preserve">
          <source>What makes Frosted better then pyflakes?</source>
          <target state="translated">Что делает Фростед лучше,чем пифлейки?</target>
        </trans-unit>
        <trans-unit id="9959ec834a06f58f7bda85c4e9fa2eb8cef94237" translate="yes" xml:space="preserve">
          <source>When deciding whether or not to include an error for reporting, Frosted
uses the 99% approach as a yard stick. If it is agreed that 99% of the
time (or more) that a pattern occurs it&amp;rsquo;s an error, Frosted will report
on it, if not it will not be added to the Frosted project.</source>
          <target state="translated">Принимая решение о том, следует ли включать ошибку в отчет, Frosted использует 99% -ный подход в качестве меры. Если согласовано, что в 99% случаев (или более) шаблон возникает в результате ошибки, Frosted сообщит об этом, в противном случае он не будет добавлен в проект Frosted.</target>
        </trans-unit>
        <trans-unit id="d163ecc86cfb758cd918d7e03b63e837ea246dc2" translate="yes" xml:space="preserve">
          <source>Why Frosted?</source>
          <target state="translated">Почему Фростед?</target>
        </trans-unit>
        <trans-unit id="57f9cd1ec02701e6c717ae710d5420274b9246fa" translate="yes" xml:space="preserve">
          <source>Why did you fork pyflakes?</source>
          <target state="translated">Зачем ты вилку пифлейков?</target>
        </trans-unit>
        <trans-unit id="1e5777c1f772ca4a9395adb82783d45b66c0d347" translate="yes" xml:space="preserve">
          <source>You can then override any of these settings by using command line
arguments, or by passing in kwargs into any of the exposed api checking
methods.</source>
          <target state="translated">Затем вы можете переопределить любой из этих параметров,используя аргументы командной строки,или передав в kwargs любой из открытых методов проверки api.</target>
        </trans-unit>
        <trans-unit id="8ad1deba2a1dc4a411f0947b0e5bd8e53294903f" translate="yes" xml:space="preserve">
          <source>frosted.api.check (codeString, filename,
reporter=modReporter.Default, **setting_overrides) Check the
Python source given by codeString for unfrosted flakes.</source>
          <target state="translated">frosted.api.check (codeString,имя файла,reporter=modReporter.Default,**setting_overrides)Проверка источника Python,заданного codeString,на наличие размороженных хлопьев.</target>
        </trans-unit>
        <trans-unit id="79e26c76b28774ceb8cc812b39122a3498a71cb8" translate="yes" xml:space="preserve">
          <source>frosted.api.check_path (filename, reporter=modReporter.Default,
**setting_overrides) Check the given path, printing out any
warnings detected.</source>
          <target state="translated">frosted.api.check_path (имя файла,reporter=modReporter.Default,**setting_overrides)Проверьте заданный путь,распечатав обнаруженные предупреждения.</target>
        </trans-unit>
        <trans-unit id="7452c3c63a0c2ac81d303847cd98a5047814f7b3" translate="yes" xml:space="preserve">
          <source>frosted.check_recursive (paths, reporter=modReporter.Default,
**setting_overrides) Recursively check all source files defined in
paths.</source>
          <target state="translated">frosted.check_recursive (пути,reporter=modReporter.Default,**setting_overrides)Рекурсивно проверяет все исходные файлы,определенные в путях.</target>
        </trans-unit>
        <trans-unit id="a9434633783ba16c64795b23695088c204f843c3" translate="yes" xml:space="preserve">
          <source>or if you prefer</source>
          <target state="translated">или если хотите</target>
        </trans-unit>
        <trans-unit id="9d2a7ad1f99954b15879f901181030bb7bf56f67" translate="yes" xml:space="preserve">
          <source>or recursively:</source>
          <target state="translated">или рекурсивно:</target>
        </trans-unit>
        <trans-unit id="53716df0bbab970da7618ef94f33c3dab3b9a3c9" translate="yes" xml:space="preserve">
          <source>or to read from stdin:</source>
          <target state="translated">или читать из Стдина:</target>
        </trans-unit>
        <trans-unit id="6415c2d844d4e6ce1c534ee71f1d8a7e411903ea" translate="yes" xml:space="preserve">
          <source>~Timothy Crosley</source>
          <target state="translated">~ Тимоти Кросли</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
