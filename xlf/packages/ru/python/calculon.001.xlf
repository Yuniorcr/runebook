<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/calculon/">
    <body>
      <group id="calculon">
        <trans-unit id="d2e519c8b022769b808fbe4bf5e2fd38d2e67315" translate="yes" xml:space="preserve">
          <source># Calculon</source>
          <target state="translated"># Calculon</target>
        </trans-unit>
        <trans-unit id="46366c6c19c872044060350ca803dd4c6b18fdb2" translate="yes" xml:space="preserve">
          <source># Documentation
Documentation is hosted on [Read the Docs] (&lt;a href=&quot;https://calculon.readthedocs.org/en/latest&quot;&gt;https://calculon.readthedocs.org/en/latest&lt;/a&gt;) and includes detailed information on installing and using the package.</source>
          <target state="translated"># Документация Документация размещена на [Read the Docs] ( &lt;a href=&quot;https://calculon.readthedocs.org/en/latest&quot;&gt;https://calculon.readthedocs.org/en/latest&lt;/a&gt; ) и включает подробную информацию по установке и использованию пакета.</target>
        </trans-unit>
        <trans-unit id="281bf437239b29ac63072c9a9c8e15ab2caa69e4" translate="yes" xml:space="preserve">
          <source># License
This project was released under MIT license, see &lt;strong&gt;LICENSE&lt;/strong&gt; file for more information.</source>
          <target state="translated"># Лицензия Этот проект был выпущен под лицензией MIT, дополнительную информацию см. В файле &lt;strong&gt;LICENSE&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d96e5a36caa9a9b6beb1b06568dd58d73497384d" translate="yes" xml:space="preserve">
          <source># Release Notes
See RELEASE file for the release history.</source>
          <target state="translated"># Примечания к выпуску Историю выпусков см. В файле RELEASE.</target>
        </trans-unit>
        <trans-unit id="46c71104e7d751c65fd09b8ba08741b00ce19a2e" translate="yes" xml:space="preserve">
          <source>Implementation of the producer-consumer patternwith customizable producer and consumer methods andan ability to choose thread/process model for execution.</source>
          <target state="translated">Реализация шаблона &quot;производитель-потребитель&quot; с настраиваемыми методами производителя и потребителя,а также возможность выбора модели потока/процесса для выполнения.</target>
        </trans-unit>
        <trans-unit id="9d8d8807c03834ed008f5dd89327048e32870ca1" translate="yes" xml:space="preserve">
          <source>This package will be helpful to someone who is looking to use a producer-consumer
pattern to perform simple parallel computing tasks.</source>
          <target state="translated">Этот пакет будет полезен тем,кто хочет использовать шаблон производитель-потребитель для выполнения простых задач параллельных вычислений.</target>
        </trans-unit>
        <trans-unit id="5d1da4b877ecd230e8656b7f5383c440f7bc1301" translate="yes" xml:space="preserve">
          <source>This project is a customizable implementation of the producer-consumer pattern using Python&amp;rsquo;s multithreading and multiprocessing capabilities. Calculon allows you to:</source>
          <target state="translated">Этот проект представляет собой настраиваемую реализацию шаблона производитель-потребитель с использованием возможностей многопоточности и многопроцессорности Python. Calculon позволяет:</target>
        </trans-unit>
        <trans-unit id="47e0948646f7dd403fc133c6a283ffd319319876" translate="yes" xml:space="preserve">
          <source>choose between multiprocessing or multithreading option to run the functions;</source>
          <target state="translated">выбирать между многопроцессорной обработкой и многопоточностью для запуска функций;</target>
        </trans-unit>
        <trans-unit id="deea3e9bc20d6bcdc003ca0ce6d53183716d572a" translate="yes" xml:space="preserve">
          <source>define a custom consumer that processes values obtained from the queue;</source>
          <target state="translated">определить пользовательского потребителя,который обрабатывает значения,полученные из очереди;</target>
        </trans-unit>
        <trans-unit id="818ab2870c7ecc325e0b214c0781016a5e6e9f77" translate="yes" xml:space="preserve">
          <source>define a custom producer that puts values into a queue;</source>
          <target state="translated">определить индивидуального производителя,который ставит значения в очередь;</target>
        </trans-unit>
        <trans-unit id="9b6a7a63c7b50610695085e998f82b3a6d845e6b" translate="yes" xml:space="preserve">
          <source>pass arbitrary information to and back from each of the producer / consumer;</source>
          <target state="translated">передавать произвольную информацию от и к каждому производителю/потребителю;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
