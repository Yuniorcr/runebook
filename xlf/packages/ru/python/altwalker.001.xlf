<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/altwalker/">
    <body>
      <group id="altwalker">
        <trans-unit id="0a9bc275becb35a8148001fbc5413496b8e2d72c" translate="yes" xml:space="preserve">
          <source>.NET Executor</source>
          <target state="translated">.NET Executor</target>
        </trans-unit>
        <trans-unit id="a8f3f33bea9a1312e44f453fceb3de3125fc3748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;Optional&quot;&gt;.NET Core&lt;/a&gt; (Optional)</source>
          <target state="translated">&lt;a href=&quot;Optional&quot;&gt;.NET Core&lt;/a&gt; (необязательно)</target>
        </trans-unit>
        <trans-unit id="eaedd2973d888e4a0a51520667e98062d11ae570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Model-based_testing&quot;&gt;Model-Based Testing&lt;/a&gt; is a testing
technique which offers a way of generating test cases based on models that describe the behaviour
(functionality) of the system under test.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Model-based_testing&quot;&gt;Тестирование&lt;/a&gt; на основе моделей - это метод тестирования, который предлагает способ создания тестовых примеров на основе моделей, описывающих поведение (функциональность) тестируемой системы.</target>
        </trans-unit>
        <trans-unit id="aa88f98f43a897fa1949ad0222952e34a512dcac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; (Optional)</source>
          <target state="translated">&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; (необязательно)</target>
        </trans-unit>
        <trans-unit id="96f3cef29424ed6ec8e63b2bca74836cdaa70def" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/&quot;&gt;Python3&lt;/a&gt; (with pip3)</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/&quot;&gt;Python3&lt;/a&gt; (с pip3)</target>
        </trans-unit>
        <trans-unit id="d35ecc95355536e657d65b2771c24d2644c4b985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Executor&lt;/strong&gt;: for each step in the plan it looks up and calls the named method
from the &lt;em&gt;test code&lt;/em&gt;. In addition to the step methods, it also calls
fixture methods if present (e.g. &lt;code&gt;setUpModel&lt;/code&gt;, &lt;code&gt;tearDownModel&lt;/code&gt; ...).</source>
          <target state="translated">&lt;strong&gt;Исполнитель&lt;/strong&gt; : для каждого шага в плане он ищет и вызывает названный метод из &lt;em&gt;тестового кода&lt;/em&gt; . В дополнение к пошаговым методам он также вызывает методы &lt;code&gt;setUpModel&lt;/code&gt; , если они есть (например, setUpModel , &lt;code&gt;tearDownModel&lt;/code&gt; ...).</target>
        </trans-unit>
        <trans-unit id="7a383a564a9684274f5176cf1f019668bf384686" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Further Reading/Useful Links&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Дополнительная литература / полезные ссылки&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="cd3d5fe207e8107e557140311dbbdbd5f30477fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generator&lt;/strong&gt; and &lt;strong&gt;Stop Condition&lt;/strong&gt;: used to specify how to generate a
path and to decide when a path is complete.</source>
          <target state="translated">&lt;strong&gt;Генератор&lt;/strong&gt; и &lt;strong&gt;условие остановки&lt;/strong&gt; : используются, чтобы указать, как создать путь и решить, когда путь завершен.</target>
        </trans-unit>
        <trans-unit id="5a486d3641d0cfd49e45908b66fefe3aeb18b556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Model&lt;/strong&gt;: a directed graph, supplied by the user as a json or graphml file.
A graph is composed from a list of vertices and a list of edges.</source>
          <target state="translated">&lt;strong&gt;Модель&lt;/strong&gt; : ориентированный граф, предоставляемый пользователем в виде файла json или graphml. Граф состоит из списка вершин и списка ребер.</target>
        </trans-unit>
        <trans-unit id="3855b39860193266867bf717e23102431748cc28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Offline Mode&lt;/strong&gt; (using the Offline Planner): Run a path from a sequence of steps.
Usually the path is generated using the &lt;code&gt;offline&lt;/code&gt; command.</source>
          <target state="translated">&lt;strong&gt;Автономный режим&lt;/strong&gt; (с использованием автономного планировщика): запуск пути из последовательности шагов. Обычно путь создается с помощью &lt;code&gt;offline&lt;/code&gt; команды.</target>
        </trans-unit>
        <trans-unit id="a866ca88f0d9918e4443319463ff9841c9333053" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Online Mode&lt;/strong&gt; (using the Online Planner): Generate one step and then execute
the step, until the path is complete.</source>
          <target state="translated">&lt;strong&gt;Онлайн-режим&lt;/strong&gt; (с использованием онлайн-планировщика): создайте один шаг и затем выполняйте его, пока путь не будет завершен.</target>
        </trans-unit>
        <trans-unit id="a55fa8c0af1611553471c9e7dc4fdee9be61681b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Planner&lt;/strong&gt;: uses the &lt;em&gt;model(s)&lt;/em&gt; and a pair of &lt;em&gt;generator&lt;/em&gt; and &lt;em&gt;stop condition&lt;/em&gt;
to provide a path (a sequence of steps) through the model(s).</source>
          <target state="translated">&lt;strong&gt;Планировщик&lt;/strong&gt; : использует &lt;em&gt;модель (ы)&lt;/em&gt; и пару &lt;em&gt;генератора&lt;/em&gt; и &lt;em&gt;условия остановки,&lt;/em&gt; чтобы обеспечить путь (последовательность шагов) через модель (ы).</target>
        </trans-unit>
        <trans-unit id="63913d5edbdc636242b635aa03d7043f273af01a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reporter&lt;/strong&gt;: reports the output of the tests, the reporter is called on
each event (e.g. &lt;code&gt;step_start&lt;/code&gt;, &lt;code&gt;step_end&lt;/code&gt;, ...).</source>
          <target state="translated">&lt;strong&gt;Репортер&lt;/strong&gt; : сообщает результаты тестов, репортер вызывается для каждого события (например, &lt;code&gt;step_start&lt;/code&gt; , &lt;code&gt;step_end&lt;/code&gt; , ...).</target>
        </trans-unit>
        <trans-unit id="a7b8e54247ea11d74d1d1b895fcdf6a1a6af40d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test Code&lt;/strong&gt;: the implementation of the model(s) as code. Each model is mapped to a
class and each vertex and edge is mapped to a method.</source>
          <target state="translated">&lt;strong&gt;Тестовый код&lt;/strong&gt; : реализация модели (ей) в виде кода. Каждая модель отображается в класс, а каждая вершина и ребро отображаются в метод.</target>
        </trans-unit>
        <trans-unit id="504ccc52545c0ef1857f7523f8645c6abb068c35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Walker&lt;/strong&gt;: the test runner. Coordinates the execution of a test asking the &lt;code&gt;Planner&lt;/code&gt;
for the next step, executing the step using the &lt;code&gt;Executor&lt;/code&gt; and reporting the progress
using the &lt;code&gt;Reporter&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Уокер&lt;/strong&gt; : бегун-испытатель. Координирует выполнение теста, запрашивая у &lt;code&gt;Planner&lt;/code&gt; следующий шаг, выполняет этот шаг с помощью &lt;code&gt;Executor&lt;/code&gt; и сообщает о ходе выполнения с помощью &lt;code&gt;Reporter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddaf00c3604299ce2c304f87568eff85b781b8c3" translate="yes" xml:space="preserve">
          <source>After running the command check that you correctly installed GraphWalker by running:</source>
          <target state="translated">После выполнения команды убедитесь,что вы правильно установили GraphWalker,запустив его:</target>
        </trans-unit>
        <trans-unit id="df10665200f2bbbe8d091162ade5e00d629b237d" translate="yes" xml:space="preserve">
          <source>After you install the python dependencies to generate the documentation run:</source>
          <target state="translated">После установки зависимостей питона для генерации документации:</target>
        </trans-unit>
        <trans-unit id="7be3c4b7e8cceecfb68bbaaf56e96f94afe41f26" translate="yes" xml:space="preserve">
          <source>After you install the python dependencies to setup AltWalker CLI locally from code run:</source>
          <target state="translated">После установки зависимостей питона настройте AltWalker CLI локально из запущенного кода:</target>
        </trans-unit>
        <trans-unit id="ad80b7fb6a3312a42c37521d089765c451396896" translate="yes" xml:space="preserve">
          <source>AltWalker</source>
          <target state="translated">AltWalker</target>
        </trans-unit>
        <trans-unit id="d615c51a5816d97ef7af375b66fe4410f200e64f" translate="yes" xml:space="preserve">
          <source>AltWalker Components</source>
          <target state="translated">Компоненты AltWalker</target>
        </trans-unit>
        <trans-unit id="1aa17571f7a57558734626e73a5ea816620529c3" translate="yes" xml:space="preserve">
          <source>AltWalker also borrows the concept of test fixture from unit tests, and implements the following fixtures:
&lt;code&gt;setUpRun&lt;/code&gt;, &lt;code&gt;tearDownRun&lt;/code&gt;, &lt;code&gt;setUpModel&lt;/code&gt; and &lt;code&gt;tearDownModel&lt;/code&gt;.</source>
          <target state="translated">AltWalker также заимствует концепцию тестовой оснастки из модульных тестов и реализует следующие фикстуры: &lt;code&gt;setUpRun&lt;/code&gt; , &lt;code&gt;tearDownRun&lt;/code&gt; , &lt;code&gt;setUpModel&lt;/code&gt; и &lt;code&gt;tearDownModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2416f42376a908c547b2ff8018b3e446fa54de3" translate="yes" xml:space="preserve">
          <source>AltWalker has the following components:</source>
          <target state="translated">AltWalker имеет следующие компоненты:</target>
        </trans-unit>
        <trans-unit id="32bbb872a206e206d85c79a1fac9e531e5433574" translate="yes" xml:space="preserve">
          <source>AltWalker is a test execution tool, which  aims to make it easy to write and run your model-based tests. AltWalker uses GraphWalker to generate a path through the models.</source>
          <target state="translated">AltWalker-это инструмент для выполнения тестов,целью которого является упрощение написания и выполнения тестов на основе моделей.AltWalker использует GraphWalker для генерации пути через модели.</target>
        </trans-unit>
        <trans-unit id="37df9fef33bce5f9f289d85623bc9a446b04f25f" translate="yes" xml:space="preserve">
          <source>AltWalker is an open source, Model-Based Testing framework. Write your tests in Python or C# and use GraphWalker to generate a path through your model.</source>
          <target state="translated">AltWalker-это система с открытым исходным кодом,основанная на моделировании и тестировании.Пишите свои тесты на Python или C#и используйте GraphWalker для генерации пути через вашу модель.</target>
        </trans-unit>
        <trans-unit id="f7f256f13cdbdaa60902a03f707f87e61fe6e6c6" translate="yes" xml:space="preserve">
          <source>AltWalker is an open source, Model-Based testing framework for automating your test execution. You
design your tests as a directed graph and AltWalker executes them. It relies on
&lt;a href=&quot;http://graphwalker.github.io/&quot;&gt;GraphWalker&lt;/a&gt; to generate paths through your graph.</source>
          <target state="translated">AltWalker - это платформа тестирования на основе моделей с открытым исходным кодом для автоматизации выполнения тестов. Вы разрабатываете свои тесты в виде ориентированного графа, а AltWalker выполняет их. Он полагается на &lt;a href=&quot;http://graphwalker.github.io/&quot;&gt;GraphWalker&lt;/a&gt; для создания путей через ваш график.</target>
        </trans-unit>
        <trans-unit id="a41ea63fa4319baabce1ce4582a61b55581bf527" translate="yes" xml:space="preserve">
          <source>AltWalker is licensed under the GNU General Public License v3.0.</source>
          <target state="translated">AltWalker лицензируется по Стандартной общественной лицензии GNU v3.0.</target>
        </trans-unit>
        <trans-unit id="0020dcfd3005761f38569bc481d9eeed05e45fdc" translate="yes" xml:space="preserve">
          <source>AltWalker is now installed. Check that you correctly installed AltWalker by running:</source>
          <target state="translated">AltWalker теперь установлен.Проверьте,правильно ли вы установили AltWalker,запустив его:</target>
        </trans-unit>
        <trans-unit id="d3eb0b578e3a5a4bcc0b554a36144d27d016d6e2" translate="yes" xml:space="preserve">
          <source>Altwalker is an open source, Model-Based Testing framework. Write your tests in Python or C# and use GraphWalker to generate a path through your model.</source>
          <target state="translated">Altwalker-это система с открытым исходным кодом,основанная на моделировании и тестировании.Пишите свои тесты на Python или C#и используйте GraphWalker для генерации пути через вашу модель.</target>
        </trans-unit>
        <trans-unit id="34954fcb4910538734e628d36f95db11f40ba4e6" translate="yes" xml:space="preserve">
          <source>And an &lt;strong&gt;Http Executor&lt;/strong&gt; that allows you to hook up your own executor via HTTP. You can read
more about the Http Executor on the &lt;a href=&quot;https://altom.gitlab.io/altwalker/altwalker/how-tos/custom-executor.html&quot;&gt;How to: Write your own executor&lt;/a&gt;
page.</source>
          <target state="translated">И &lt;strong&gt;Http Executor,&lt;/strong&gt; который позволяет вам подключить вашего собственного исполнителя через HTTP. Вы можете узнать больше о Http Executor на странице &lt;a href=&quot;https://altom.gitlab.io/altwalker/altwalker/how-tos/custom-executor.html&quot;&gt;Как написать свой собственный исполнитель&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="0e7014134042a56f1f9c92294190363fc721cbea" translate="yes" xml:space="preserve">
          <source>Clone the repository:</source>
          <target state="translated">Клонируй хранилище:</target>
        </trans-unit>
        <trans-unit id="7efb19a30b32f92bbbc48973aae20b3b11becdd7" translate="yes" xml:space="preserve">
          <source>Currently AltWalker provides three executors:</source>
          <target state="translated">В настоящее время AltWalker предоставляет трех исполнителей:</target>
        </trans-unit>
        <trans-unit id="15335476013023af5c0e73e556221dfeb5eb3d3e" translate="yes" xml:space="preserve">
          <source>Currently AltWalker provides two planners:</source>
          <target state="translated">В настоящее время AltWalker предоставляет двух проектировщиков:</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Документация</target>
        </trans-unit>
        <trans-unit id="be37e18f09d3079dd6c4358117744bf89d5f7062" translate="yes" xml:space="preserve">
          <source>For a more detailed tutorial read the &lt;a href=&quot;https://altom.gitlab.io/altwalker/altwalker/installation.html&quot;&gt;Installation&lt;/a&gt; section from the documentation.</source>
          <target state="translated">Для получения более подробного руководства прочтите раздел &amp;laquo; &lt;a href=&quot;https://altom.gitlab.io/altwalker/altwalker/installation.html&quot;&gt;Установка&lt;/a&gt; &amp;raquo; в документации.</target>
        </trans-unit>
        <trans-unit id="3d43662365b8632f674f128cad2ea7aad412e0ab" translate="yes" xml:space="preserve">
          <source>For the test structure it uses an Object-Oriented approach inspired by python's &lt;code&gt;unittest&lt;/code&gt; module. Every model is mapped to a class with the same name and each vertex and edge from the model is mapped to a method inside the class.</source>
          <target state="translated">Для структуры теста он использует объектно-ориентированный подход, вдохновленный модулем &lt;code&gt;unittest&lt;/code&gt; python . Каждая модель сопоставляется с классом с тем же именем, а каждая вершина и ребро модели сопоставляется с методом внутри класса.</target>
        </trans-unit>
        <trans-unit id="77874bd80f0bab910bbb5f6945df8f56312b10cf" translate="yes" xml:space="preserve">
          <source>Google Style Docstring Example</source>
          <target state="translated">Пример привязки по стилю Google</target>
        </trans-unit>
        <trans-unit id="bb8188fdd97de3b6571d511b82dfd622f3998f96" translate="yes" xml:space="preserve">
          <source>Google Style Guide</source>
          <target state="translated">Google Style Guide</target>
        </trans-unit>
        <trans-unit id="16d450e6776272899190621eab911b05a46591fa" translate="yes" xml:space="preserve">
          <source>GraphWalker CLI</source>
          <target state="translated">GraphWalker CLI</target>
        </trans-unit>
        <trans-unit id="85e1d41f96d17b0f0f36339f3dacb93cb06c65c6" translate="yes" xml:space="preserve">
          <source>If you want to work with the latest code before it&amp;rsquo;s released, install or update the code from the &lt;code&gt;develop&lt;/code&gt; branch:</source>
          <target state="translated">Если вы хотите работать с последним кодом до его выпуска, установите или обновите код из ветки &lt;code&gt;develop&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="50079265ddc3b26b4b3dcce9410b3abcb0dec316" translate="yes" xml:space="preserve">
          <source>Install AltWalker</source>
          <target state="translated">Установить AltWalker</target>
        </trans-unit>
        <trans-unit id="3735e432380231f4af2220906f2c0622a77ea8f1" translate="yes" xml:space="preserve">
          <source>Install GraphWalker</source>
          <target state="translated">Установить GraphWalker</target>
        </trans-unit>
        <trans-unit id="25b0c3833fdb4dafff4809da702a4ebb1def5484" translate="yes" xml:space="preserve">
          <source>Install python dependencies:</source>
          <target state="translated">Установите зависимости от питона:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="c287a1bbff0a047aa1cc86cd23da90c9abec2a7c" translate="yes" xml:space="preserve">
          <source>Java 8</source>
          <target state="translated">Ява 8</target>
        </trans-unit>
        <trans-unit id="dc58f04116c6ece56d94454441370b248cc77180" translate="yes" xml:space="preserve">
          <source>Join our Gitter chat room &lt;a href=&quot;https://gitter.im/altwalker/community&quot;&gt;here&lt;/a&gt; to chat with us or with other members of the community.</source>
          <target state="translated">Присоединяйтесь к нашей чат-комнате Gitter &lt;a href=&quot;https://gitter.im/altwalker/community&quot;&gt;здесь,&lt;/a&gt; чтобы пообщаться с нами или с другими членами сообщества.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="57c42222720e5f496a8df0809680b4294f03d281" translate="yes" xml:space="preserve">
          <source>Living on the edge</source>
          <target state="translated">Живя на краю</target>
        </trans-unit>
        <trans-unit id="b74b1c54641834f0492df83a2306a12c077a2e42" translate="yes" xml:space="preserve">
          <source>MacOS/Linux:</source>
          <target state="translated">MacOS/Linux:</target>
        </trans-unit>
        <trans-unit id="3193001c0f0d1acda4df4c521ce9f808567c048f" translate="yes" xml:space="preserve">
          <source>Make a sample project and run the tests.</source>
          <target state="translated">Сделайте образец проекта и запустите тесты.</target>
        </trans-unit>
        <trans-unit id="c7ba6bef733ed12cc3f77b8a28247ad7e65f01e5" translate="yes" xml:space="preserve">
          <source>Model-Based Testing</source>
          <target state="translated">Модельное тестирование</target>
        </trans-unit>
        <trans-unit id="973223ffeaf0067f2183549980459ce47cb4f279" translate="yes" xml:space="preserve">
          <source>Now it supports running tests written in .NET/C# and Python3.</source>
          <target state="translated">Теперь он поддерживает запуск тестов,написанных на .NET/C#и Python3.</target>
        </trans-unit>
        <trans-unit id="7696dbfdc5a07f91fc9b0252e53e8b7fc1068092" translate="yes" xml:space="preserve">
          <source>Offline Planner</source>
          <target state="translated">Автономный планировщик</target>
        </trans-unit>
        <trans-unit id="335266c541a9d99ce2224f1361287daf9ffa9f68" translate="yes" xml:space="preserve">
          <source>Online Planner</source>
          <target state="translated">Онлайн-планировщик</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Обзор</target>
        </trans-unit>
        <trans-unit id="f2a646f662464e161695ae3f9d8ea6ca3732ad91" translate="yes" xml:space="preserve">
          <source>Prerequisites:</source>
          <target state="translated">Предпосылки:</target>
        </trans-unit>
        <trans-unit id="fc37513e2861642bc88186db662f5cfefd3f3921" translate="yes" xml:space="preserve">
          <source>Python Executor</source>
          <target state="translated">питонский исполнитель</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">Квикстарт</target>
        </trans-unit>
        <trans-unit id="c322f197fb9f57f7f37b035e1d98e32c0a13f566" translate="yes" xml:space="preserve">
          <source>Read the documentation on &lt;a href=&quot;https://altom.gitlab.io/altwalker/altwalker&quot;&gt;https://altom.gitlab.io/altwalker/altwalker&lt;/a&gt;.</source>
          <target state="translated">Прочтите документацию на &lt;a href=&quot;https://altom.gitlab.io/altwalker/altwalker&quot;&gt;https://altom.gitlab.io/altwalker/altwalker&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">Испытания на прочность</target>
        </trans-unit>
        <trans-unit id="d5013672dcda9176a75bf59239db1b0e7c7eeb8c" translate="yes" xml:space="preserve">
          <source>Running tests with tox inside docker</source>
          <target state="translated">Тестирование на токсины внутри докера</target>
        </trans-unit>
        <trans-unit id="e881014f5d1027fc5aeff87e5f8e28519914a9e1" translate="yes" xml:space="preserve">
          <source>Setting Up a Development Environment</source>
          <target state="translated">Создание среды развития</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Поддержка</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">Содержание</target>
        </trans-unit>
        <trans-unit id="1ccfdf41146d2a54089b6b6822dc8a2cb3fd15f6" translate="yes" xml:space="preserve">
          <source>The goal when designing models is to represent the part of the system under test, usually
by one model for each functionality of your system.</source>
          <target state="translated">Целью при проектировании моделей является представление части тестируемой системы,как правило,одной моделью для каждой функциональности вашей системы.</target>
        </trans-unit>
        <trans-unit id="8bd93c1878b69a73b6386cd9d18f551661a8c3fd" translate="yes" xml:space="preserve">
          <source>Then from any command line you can access:</source>
          <target state="translated">Тогда из любой командной строки,к которой вы можете получить доступ:</target>
        </trans-unit>
        <trans-unit id="af53abd46f11dcdb2c869d57c7365695ddba7c8e" translate="yes" xml:space="preserve">
          <source>There are two ways to run your tests:</source>
          <target state="translated">Есть два способа провести тесты:</target>
        </trans-unit>
        <trans-unit id="cdd105cf385f4c1d385e41406571344443badc92" translate="yes" xml:space="preserve">
          <source>To see the documentation run:</source>
          <target state="translated">Чтобы посмотреть,как работает документация:</target>
        </trans-unit>
        <trans-unit id="2a12a451b955c1c04d7447615e789bb90474a125" translate="yes" xml:space="preserve">
          <source>Use the following command to install AltWalker:</source>
          <target state="translated">Для установки AltWalker используйте следующую команду:</target>
        </trans-unit>
        <trans-unit id="efa4d7b0974d436ba82706d9c81864b43e82d602" translate="yes" xml:space="preserve">
          <source>Why use Model-Based Testing:</source>
          <target state="translated">Зачем использовать тестирование на основе модели:</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">Окна:</target>
        </trans-unit>
        <trans-unit id="e6891ae3069ea787707fdd333202f358b3f68dad" translate="yes" xml:space="preserve">
          <source>With the help of graph theory we can dynamically generate multiple test scripts. A test script is a path passing through the model from a starting point till
a condition is met.</source>
          <target state="translated">С помощью теории графов мы можем динамически генерировать несколько тестовых скриптов.Тестовый скрипт-это путь,проходящий через модель от начальной точки до выполнения условия.</target>
        </trans-unit>
        <trans-unit id="d996feaa5f46c0715004c58e42b1af6ca5b546c2" translate="yes" xml:space="preserve">
          <source>allows for a large number of tests to be created which results in a larger part of the system under test to be covered.</source>
          <target state="translated">позволяет создавать большое количество тестов,в результате которых покрывается большая часть тестируемой системы.</target>
        </trans-unit>
        <trans-unit id="8e6e30c166e6191ad073f6e275714d5b42c2ba79" translate="yes" xml:space="preserve">
          <source>dynamically generates multiple test scripts based on different conditions (like coverage or length)</source>
          <target state="translated">динамически генерирует несколько тестовых скриптов,основанных на различных условиях (например,покрытие или длина)</target>
        </trans-unit>
        <trans-unit id="e1ec99496c42989cfce6d75cf8e1e1c05c19621d" translate="yes" xml:space="preserve">
          <source>the abstraction layer added by the model gives your tests a better structure</source>
          <target state="translated">слой абстракции,добавленный моделью,дает вашим тестам лучшую структуру.</target>
        </trans-unit>
        <trans-unit id="105643e8bc6c891dffa4c49c2a5cea052792de81" translate="yes" xml:space="preserve">
          <source>the model can be updated to reflect the requirements changes making the tests easy to maintain</source>
          <target state="translated">модель может быть обновлена,чтобы отразить изменения в требованиях,делая тесты простыми в обслуживании</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
