<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/mbed-ls/">
    <body>
      <group id="mbed-ls">
        <trans-unit id="27069c4e704d4c4ceb6ebeac64720d6d6112e85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt; - This accesses the file system before doing any filtering. It is the most accurate option and is recommended for most uses. This is the default behavior of the command-line tool and the API.</source>
          <target state="translated">&lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt; - обращается к файловой системе перед выполнением какой-либо фильтрации. Это наиболее точный вариант и рекомендуется для большинства случаев использования. Это поведение по умолчанию для инструмента командной строки и API.</target>
        </trans-unit>
        <trans-unit id="444e7b8fe6ec41eb1dbb9b4fbf899037cdacf6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSInteraction.NEVER&lt;/code&gt; - This is the fastest option but also potentially the least accurate. It never touches the file system of the devices. It uses only the information available through the USB descriptors. This is appropriate for use in a highly controlled environment (such as an automated Continuous Integration setup). &lt;strong&gt;This has the potential to provide incorrect names and data. It may also lead to devices not being detected at all.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;FSInteraction.NEVER&lt;/code&gt; - это самый быстрый вариант, но потенциально и наименее точный. Это никогда не касается файловой системы устройств. Он использует только информацию, доступную через дескрипторы USB. Это подходит для использования в строго контролируемой среде (такой как автоматическая установка непрерывной интеграции). &lt;strong&gt;Это может привести к неправильным именам и данным. Это также может привести к тому, что устройства вообще не будут обнаружены.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9acc57a9aa98aacb8a3d0754e9ce20ea97ba658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSInterfaction.AfterFilter&lt;/code&gt; - This accesses the file system but only after application of the &lt;code&gt;filter_function&lt;/code&gt;. This can lead to speed increases but at the risk of filtering on inaccurate information.</source>
          <target state="translated">&lt;code&gt;FSInterfaction.AfterFilter&lt;/code&gt; - обращается к файловой системе, но только после применения &lt;code&gt;filter_function&lt;/code&gt; . Это может привести к увеличению скорости, но с риском фильтрации неточной информации.</target>
        </trans-unit>
        <trans-unit id="da8679b923167eb816a849dda787dd29c1cfa5a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;'+'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;По умолчанию: &lt;/strong&gt; &lt;code&gt;'+'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64cad439d8fc41ba703f369df90f4dc2a73b92da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;'daplink'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;По умолчанию: &lt;/strong&gt; &lt;code&gt;'daplink'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a081a9ca83b30fd62287bf46536a662e6b830d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;По умолчанию: &lt;/strong&gt; &lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c89ef4e3ddfa81047ca81999094467a19a3a48b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;По умолчанию: &lt;/strong&gt; &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1af24f2c81df6856d9fa1eb5559a82f98a9df0b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;По умолчанию: &lt;/strong&gt; &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed55f4be49dfe64c5ede41c611d0a82a13aad4b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;По умолчанию: &lt;/strong&gt; &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ae5dad53f0a152b6a932beeb51c97886190a507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Due to a quirk in the parameter formatting, the command-line can interpret &lt;code&gt;-*&lt;/code&gt; as another parameter instead of a value. It is necessary to use the complete &lt;code&gt;--mock=&quot;-*&quot;&lt;/code&gt; syntax, so the command-line interprets each part of the command correctly.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ.&lt;/strong&gt; Из-за особенностей форматирования параметров командная строка может интерпретировать &lt;code&gt;-*&lt;/code&gt; как другой параметр вместо значения. Необходимо использовать полный &lt;code&gt;--mock=&quot;-*&quot;&lt;/code&gt; , чтобы командная строка правильно интерпретировала каждую часть команды.</target>
        </trans-unit>
        <trans-unit id="941ebbbfd0e1b6910a3291098be93386444118d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If your OS is Windows, please follow the installation instructions &lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;for the serial port driver&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если ваша ОС Windows, следуйте инструкциям &lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;по установке драйвера последовательного порта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f0d9ba7746d1c70a55dbd3921863feb059dc741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;https://github.com/armmbed/mbed-cli&quot;&gt;Mbed CLI&lt;/a&gt; has a similarly-named command &lt;code&gt;mbed ls&lt;/code&gt;; however, the commands are different. Be sure to omit the space when using the Mbed LS command-line tool.</source>
          <target state="translated">&lt;strong&gt;Примечание. В &lt;/strong&gt;&lt;a href=&quot;https://github.com/armmbed/mbed-cli&quot;&gt;интерфейсе командной строки Mbed&lt;/a&gt; есть команда с аналогичным названием &lt;code&gt;mbed ls&lt;/code&gt; ; однако команды разные. Обязательно опускайте пробел при использовании инструмента командной строки Mbed LS.</target>
        </trans-unit>
        <trans-unit id="b511e0ce6ffd2d321b491362f76847958e4e2c24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prerequisites:&lt;/strong&gt; You need to have &lt;a href=&quot;https://www.python.org/download/releases/2.7/&quot;&gt;Python 2.7.x&lt;/a&gt; or &lt;a href=&quot;https://www.python.org/downloads/release/python-362/&quot;&gt;Python 3.6.x&lt;/a&gt; installed on your system.</source>
          <target state="translated">&lt;strong&gt;Предварительные требования:&lt;/strong&gt; в вашей системе должен быть установлен &lt;a href=&quot;https://www.python.org/download/releases/2.7/&quot;&gt;Python 2.7.x&lt;/a&gt; или &lt;a href=&quot;https://www.python.org/downloads/release/python-362/&quot;&gt;Python 3.6.x.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3ed2432385bb9a98a9273181e00a11af363e8ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Required&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;необходимые&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c2fdad86254cfddc9b35e908ef4a64b758483f0" translate="yes" xml:space="preserve">
          <source>A link to the J-Link firmware binary if possible</source>
          <target state="translated">Ссылка на двоичный файл прошивки J-Link,если это возможно.</target>
        </trans-unit>
        <trans-unit id="aab00ca8d0c26dd7535a9026f8513a0e77d843c1" translate="yes" xml:space="preserve">
          <source>Add an entry to the &lt;code&gt;daplink&lt;/code&gt; section of the &lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt;&lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Добавьте запись в раздел &lt;code&gt;daplink&lt;/code&gt; файла&lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt; &lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed6c75c3a55a6dafe9ebe34e7678f37141a965b3" translate="yes" xml:space="preserve">
          <source>Adding a new platform with a supported debugger</source>
          <target state="translated">Добавление новой платформы с поддерживаемым отладчиком</target>
        </trans-unit>
        <trans-unit id="9d7df9739bfb3d55bc0ebcfd56102b0c11b34c05" translate="yes" xml:space="preserve">
          <source>Adding a new type of debugger</source>
          <target state="translated">Добавление нового типа отладчика</target>
        </trans-unit>
        <trans-unit id="ba4df3d379fbf1a210503ae0c74ea45965c23c40" translate="yes" xml:space="preserve">
          <source>Adding platform support</source>
          <target state="translated">Добавление поддержки платформы</target>
        </trans-unit>
        <trans-unit id="384e57a72eddded96d201977f863c09c8dee4e21" translate="yes" xml:space="preserve">
          <source>Adding support for DAPLink-compatible platforms (DAPLink, ST-LINK, and CMSIS-DAP)</source>
          <target state="translated">Добавление поддержки DAPLink-совместимых платформ (DAPLink,ST-LINK и CMSIS-DAP).</target>
        </trans-unit>
        <trans-unit id="cf6398cb90d6ed5f321099c5fc109a060e7b7e26" translate="yes" xml:space="preserve">
          <source>Adding support for J-Link platforms</source>
          <target state="translated">Добавление поддержки для платформ J-Link</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Аргументы</target>
        </trans-unit>
        <trans-unit id="7505721212c47b50446c6adefda7e0c45840626e" translate="yes" xml:space="preserve">
          <source>As a lambda function:</source>
          <target state="translated">Как лямбда-функция:</target>
        </trans-unit>
        <trans-unit id="d3860a6a335daabd593293e6f04310b5340c11a0" translate="yes" xml:space="preserve">
          <source>As a normal function definition:</source>
          <target state="translated">Как определение нормальной функции:</target>
        </trans-unit>
        <trans-unit id="ed61cd463f1c3c6f7ce5e0ecdec6720fb01e1e21" translate="yes" xml:space="preserve">
          <source>As well as the related but legacy &lt;a href=&quot;https://github.com/mbedmicro/CMSIS-DAP&quot;&gt;CMSIS-DAP&lt;/a&gt; firmware</source>
          <target state="translated">А также связанная, но устаревшая прошивка &lt;a href=&quot;https://github.com/mbedmicro/CMSIS-DAP&quot;&gt;CMSIS-DAP&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ae03f42cf8b6df3c634810cda895f3bede0fd1a" translate="yes" xml:space="preserve">
          <source>Chooses which device type entries are retrieved from the platform database.</source>
          <target state="translated">Выбирает,какие записи типа устройств извлекаются из базы данных платформы.</target>
        </trans-unit>
        <trans-unit id="b574f2e6be67e57c80811b8a2d243201fea30187" translate="yes" xml:space="preserve">
          <source>Code coverage</source>
          <target state="translated">покрытие кода</target>
        </trans-unit>
        <trans-unit id="48808a0068ecad9365b667728617fc992cbdc5ea" translate="yes" xml:space="preserve">
          <source>Command-line</source>
          <target state="translated">Командная строка</target>
        </trans-unit>
        <trans-unit id="ffd7c5b20d9366e0a2a2cdb3f0847ed14585052e" translate="yes" xml:space="preserve">
          <source>DAPLink</source>
          <target state="translated">DAPLink</target>
        </trans-unit>
        <trans-unit id="a8c5a3b94826af621da5a375d345ece1f610fcc9" translate="yes" xml:space="preserve">
          <source>Development moved</source>
          <target state="translated">Развитие переехали</target>
        </trans-unit>
        <trans-unit id="c222a7bb9ac91eb0efc6dfad1873ac9f664d98a6" translate="yes" xml:space="preserve">
          <source>Device unique identifier</source>
          <target state="translated">Уникальный идентификатор устройства</target>
        </trans-unit>
        <trans-unit id="065c4a219ca6bba31819c269b0328aed07cf9abd" translate="yes" xml:space="preserve">
          <source>Each device must have a unique identifier. This identifier has two parts: a &lt;strong&gt;platform ID&lt;/strong&gt; and a &lt;strong&gt;platform unique string&lt;/strong&gt;.</source>
          <target state="translated">У каждого устройства должен быть уникальный идентификатор. Этот идентификатор состоит из двух частей: &lt;strong&gt;идентификатор платформы&lt;/strong&gt; и &lt;strong&gt;платформы уникальной строки&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3489538eb14b2a12d05635ddbb70d67e376e53e6" translate="yes" xml:space="preserve">
          <source>For example, to change the &lt;code&gt;serial_port&lt;/code&gt; of the K64F with a &lt;code&gt;target_id&lt;/code&gt; of &lt;code&gt;0240000032044e4500257009997b00386781000097969900&lt;/code&gt;, the &lt;code&gt;mbedls.json&lt;/code&gt; file contains the following:</source>
          <target state="translated">Например, чтобы изменить &lt;code&gt;serial_port&lt;/code&gt; в K64F с &lt;code&gt;target_id&lt;/code&gt; из &lt;code&gt;0240000032044e4500257009997b00386781000097969900&lt;/code&gt; , то &lt;code&gt;mbedls.json&lt;/code&gt; файл содержит следующее:</target>
        </trans-unit>
        <trans-unit id="78ce0e22bc4db13d8d2ed3f085f34853e27277c5" translate="yes" xml:space="preserve">
          <source>If a new type of debugger is being introduced to Mbed LS with the platform, you will need to add the Vendor ID to the &lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;identification map&lt;/a&gt;. You will also need to assign the correct &quot;update from the filesystem&quot; logic &lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;here&lt;/a&gt;. If the debugger is compatible with the files presented by DAPLink, you may reuse that implementation when updating the device information from the filesystem. If it is not, you may need to write your own update logic. If you need guidance on this, please ask for it when you submit an issue or a pull request.</source>
          <target state="translated">Если новый тип отладчика вводится в Mbed LS вместе с платформой, вам нужно будет добавить идентификатор поставщика в &lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;идентификационную карту&lt;/a&gt; . Вам также необходимо назначить правильное &amp;laquo;обновление из файловой системы&amp;raquo; логики &lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;здесь&lt;/a&gt; . Если отладчик совместим с файлами, представленными DAPLink, вы можете повторно использовать эту реализацию при обновлении информации об устройстве из файловой системы. Если это не так, вам может потребоваться написать собственную логику обновления. Если вам нужно руководство по этому поводу, попросите его при отправке вопроса или запроса на перенос.</target>
        </trans-unit>
        <trans-unit id="27c4db5d8360922366195f06f5df940ed4caf304" translate="yes" xml:space="preserve">
          <source>If a platform meets the Mbed Enabled technical requirements (stated above), it can be added to Mbed LS.</source>
          <target state="translated">Если платформа соответствует техническим требованиям Mbed Enabled (см.выше),ее можно добавить в Mbed LS.</target>
        </trans-unit>
        <trans-unit id="6d92870fb590e5ccc29d8f9b455ec25715e0f433" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;'+'&lt;/code&gt;, the mocked platform is enabled. If &lt;code&gt;'-'&lt;/code&gt;, the mocked platform is disabled.</source>
          <target state="translated">Если установлено значение &lt;code&gt;'+'&lt;/code&gt; , имитируемая платформа включена. Если &lt;code&gt;'-'&lt;/code&gt; , имитируемая платформа отключена.</target>
        </trans-unit>
        <trans-unit id="d966fec8b00dd3e6a4cdff1402946b6cbda4f643" translate="yes" xml:space="preserve">
          <source>If your J-Link platform does not follow this convention, please raise an issue with the following information:</source>
          <target state="translated">Если ваша платформа J-Link не следует этой конвенции,пожалуйста,поднимите вопрос со следующей информацией:</target>
        </trans-unit>
        <trans-unit id="7fecaf93c27ea93376ca21270e2f3bd5338c93cf" translate="yes" xml:space="preserve">
          <source>If your platform's name is &lt;code&gt;NEW_PLATFORM&lt;/code&gt; and it has platform ID of &lt;code&gt;9999&lt;/code&gt;, the new entry should be:</source>
          <target state="translated">Если имя вашей платформы &lt;code&gt;NEW_PLATFORM&lt;/code&gt; и ID платформы &lt;code&gt;9999&lt;/code&gt; , новая запись должна быть:</target>
        </trans-unit>
        <trans-unit id="bc92c249533ddcfe955be7b16aa51ec2df784791" translate="yes" xml:space="preserve">
          <source>Install Mbed LS from sources with the following commands:</source>
          <target state="translated">Установите Mbed LS из источников со следующими командами:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="96d0cf4660194fdfbac644302310f6124c5e1dc2" translate="yes" xml:space="preserve">
          <source>Installation from PyPI (Python Package Index)</source>
          <target state="translated">Установка из PyPI (Python Package Index)</target>
        </trans-unit>
        <trans-unit id="9747b78a5614166db6f72d19c44d36053023a65b" translate="yes" xml:space="preserve">
          <source>Installation from Python sources</source>
          <target state="translated">Установка из источников на питоне</target>
        </trans-unit>
        <trans-unit id="0b930968a527590e6defa86b90fec0dcafac10a4" translate="yes" xml:space="preserve">
          <source>Instead of a platform ID, there is a target-unique string (&lt;code&gt;X729475D28G&lt;/code&gt; in this case). This should correspond with the unique part of the link present in the &lt;code&gt;Board.html&lt;/code&gt; or &lt;code&gt;User Guide.html&lt;/code&gt;. This seems to vary among the platforms. In general, try following the links in each file. You want to use the url that links to a product page that references the platform. The J-Link logic in Mbed LS assumes that the url has the target-unique string on the end (after the last &lt;code&gt;/&lt;/code&gt; character). In the above example, the expected url structure would be &lt;code&gt;http://www.nordicsemi.com/X729475D28G&lt;/code&gt;.</source>
          <target state="translated">Вместо идентификатора платформы используется уникальная строка ( в данном случае &lt;code&gt;X729475D28G&lt;/code&gt; ). Это должно соответствовать уникальной части ссылки, присутствующей в &lt;code&gt;Board.html&lt;/code&gt; или &lt;code&gt;User Guide.html&lt;/code&gt; . Кажется, это зависит от платформы. В общем, попробуйте перейти по ссылкам в каждом файле. Вы хотите использовать URL-адрес, который ведет на страницу продукта, которая ссылается на платформу. Логика J-Link в Mbed LS предполагает, что URL-адрес имеет целевую уникальную строку на конце (после последнего символа &lt;code&gt;/&lt;/code&gt; ). В приведенном выше примере ожидаемая структура URL-адреса будет &lt;code&gt;http://www.nordicsemi.com/X729475D28G&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6f3b5c60023b4a1db5ce9388c1152a21c9485bf" translate="yes" xml:space="preserve">
          <source>It is possible to change the returned results for certain platforms depending on the current directory. This is especially useful when developing new platforms.</source>
          <target state="translated">Возможно изменение возвращаемых результатов для определенных платформ в зависимости от текущего каталога.Это особенно полезно при разработке новых платформ.</target>
        </trans-unit>
        <trans-unit id="39a11a364b10f19422233335ca59c833b1ecadec" translate="yes" xml:space="preserve">
          <source>It provides the following information for all connected boards in a console (terminal) output:</source>
          <target state="translated">Он предоставляет следующую информацию для всех подключенных плат в консольном (клеммном)выходе:</target>
        </trans-unit>
        <trans-unit id="e1eca7b7865658734ad00ffbac2c02a03e29b290" translate="yes" xml:space="preserve">
          <source>J-Link</source>
          <target state="translated">J-Link</target>
        </trans-unit>
        <trans-unit id="4c402e234d6a0468078fbd3d220c71f65bf8ea29" translate="yes" xml:space="preserve">
          <source>J-Link detection works differently due to the information present on the platform's filesystem. All new entries should be added to the &lt;code&gt;jlink&lt;/code&gt; section of the &lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt;&lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Обнаружение J-Link работает по-другому из-за информации, содержащейся в файловой системе платформы. Все новые записи должны быть добавлены в раздел &lt;code&gt;jlink&lt;/code&gt; &lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt; &lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Регистрация</target>
        </trans-unit>
        <trans-unit id="79a7aea8af1e177c03709e6e26d0881fc1d858f1" translate="yes" xml:space="preserve">
          <source>Mbed Enabled technical requirements overview</source>
          <target state="translated">Mbed Включенный обзор технических требований</target>
        </trans-unit>
        <trans-unit id="97bdccbfa44092b96f922a85c040daf6702c58f3" translate="yes" xml:space="preserve">
          <source>Mbed LS</source>
          <target state="translated">Мbed LS</target>
        </trans-unit>
        <trans-unit id="4c320a7161be83e7ba2ff5533e7b7f8786c9fa27" translate="yes" xml:space="preserve">
          <source>Mbed LS assigns a unique name to each platform when this is set to &lt;code&gt;True&lt;/code&gt;. The unique name takes the form of &lt;code&gt;K64F[0]&lt;/code&gt;, where the number between the brackets is an incrementing value. This name is accessible through the dictionary member &lt;code&gt;platform_unique_name&lt;/code&gt; in the returned platform data.</source>
          <target state="translated">Mbed LS присваивает каждой платформе уникальное имя, если для нее установлено значение &lt;code&gt;True&lt;/code&gt; . Уникальное имя принимает форму &lt;code&gt;K64F[0]&lt;/code&gt; , где число в скобках является возрастающим значением. Это имя доступно через член словаря &lt;code&gt;platform_unique_name&lt;/code&gt; в возвращаемых данных платформы.</target>
        </trans-unit>
        <trans-unit id="5b203fc6a3997fff6f733afa4e94c35f715f75de" translate="yes" xml:space="preserve">
          <source>Mbed LS currently supports the following types of debuggers:</source>
          <target state="translated">Mbed LS в настоящее время поддерживает следующие типы отладчиков:</target>
        </trans-unit>
        <trans-unit id="8379de91a7d39891bd787716503a054d122d0f3f" translate="yes" xml:space="preserve">
          <source>Mbed LS is a Python (2 and 3) module that detects and lists Mbed Enabled devices connected to the host computer. The Mbed OS team publishes Mbed LS on PyPI. It works on all major operating systems (Windows, Linux and Mac OS X).</source>
          <target state="translated">Mbed LS-это модуль Python (2 и 3),который обнаруживает и перечисляет устройства,подключенные к главному компьютеру.Команда Mbed OS публикует Mbed LS на PyPI.Он работает на всех основных операционных системах (Windows,Linux и Mac OS X).</target>
        </trans-unit>
        <trans-unit id="41f79d20c54e774b80047654ef5c408442ece22b" translate="yes" xml:space="preserve">
          <source>Mbed LS reads more data from the file system on each device when this is set to &lt;code&gt;True&lt;/code&gt;. It can provide useful management data but also takes more time to execute.</source>
          <target state="translated">Mbed LS читает больше данных из файловой системы на каждом устройстве, если для него установлено значение &lt;code&gt;True&lt;/code&gt; . Он может предоставить полезные данные управления, но также требует больше времени для выполнения.</target>
        </trans-unit>
        <trans-unit id="079d098ed6b868f06d0aa6a4673cc5b9e49f56a7" translate="yes" xml:space="preserve">
          <source>Mbed LS requires you to mount a platform before it shows up in the results. Many Linux systems do not automatically mount USB devices. We recommend you use an automounter to manage this for you.</source>
          <target state="translated">Mbed LS требует,чтобы вы установили платформу до того,как она появится в результатах.Многие системы Linux не монтируют автоматически USB устройства.Мы рекомендуем использовать автоматический монтер для управления этим.</target>
        </trans-unit>
        <trans-unit id="c27ed87aca5b063909135a22ac91b3bae0145721" translate="yes" xml:space="preserve">
          <source>Mbed LS uses the Python &lt;code&gt;logging&lt;/code&gt; module for all of its logging needs. Mbed LS uses the logger &lt;code&gt;&quot;mbedls&quot;&lt;/code&gt; as its root, and all other loggers start with &lt;code&gt;&quot;mbedls.&quot;&lt;/code&gt;. Configuring the Python root logger automatically redirects all of the Mbed LS logs to the configured endpoint. When using the Python API, configure logging, such as by calling &lt;code&gt;logging.basicConfig()&lt;/code&gt;.</source>
          <target state="translated">Mbed LS использует модуль &lt;code&gt;logging&lt;/code&gt; Python для всех своих нужд. Mbed LS использует регистратор &lt;code&gt;&quot;mbedls&quot;&lt;/code&gt; в качестве своего корня, а все остальные регистраторы начинаются с &lt;code&gt;&quot;mbedls.&quot;&lt;/code&gt; . Настройка корневого регистратора Python автоматически перенаправляет все журналы Mbed LS на настроенную конечную точку. При использовании Python API настройте ведение журнала, например, путем вызова &lt;code&gt;logging.basicConfig()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be1b963ff7bc34323e988a022f055a24a329431f" translate="yes" xml:space="preserve">
          <source>Mbed OS platform name.</source>
          <target state="translated">Имя платформы Mbed OS.</target>
        </trans-unit>
        <trans-unit id="c953a4cf5a580bbcfdfe4e28d784b940635670d6" translate="yes" xml:space="preserve">
          <source>Mocking (renaming) platforms</source>
          <target state="translated">Издевательство (переименование)платформ</target>
        </trans-unit>
        <trans-unit id="86340f4d997452ca0fd4d12af094a3159500e6e9" translate="yes" xml:space="preserve">
          <source>Mount point (MSD or disk).</source>
          <target state="translated">Точка монтирования (MSD или диск).</target>
        </trans-unit>
        <trans-unit id="ae86a65fcc8c3f61599a72cdc047a393506271b9" translate="yes" xml:space="preserve">
          <source>Note how both platforms share the same platform ID (&lt;code&gt;0240&lt;/code&gt;) but have a unique ending string.</source>
          <target state="translated">Обратите внимание, что обе платформы имеют один и тот же идентификатор платформы ( &lt;code&gt;0240&lt;/code&gt; ), но имеют уникальную конечную строку.</target>
        </trans-unit>
        <trans-unit id="bf7c1a82ea41a07e72348345441b0eb47414b50e" translate="yes" xml:space="preserve">
          <source>Note how the &lt;code&gt;serial_port&lt;/code&gt; value changed from &lt;code&gt;COM18&lt;/code&gt; to &lt;code&gt;COM99&lt;/code&gt;. Deleting the &lt;code&gt;mbedls.json&lt;/code&gt; or using the &lt;code&gt;--skip-retarget&lt;/code&gt; parameter removes these changes.</source>
          <target state="translated">Обратите внимание, как значение &lt;code&gt;serial_port&lt;/code&gt; изменилось с &lt;code&gt;COM18&lt;/code&gt; на &lt;code&gt;COM99&lt;/code&gt; . Эти изменения удаляются при удалении &lt;code&gt;mbedls.json&lt;/code&gt; или использовании параметра &lt;code&gt;--skip-retarget&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4bb449d1f8629a27f6c14231d568113507bbfab" translate="yes" xml:space="preserve">
          <source>OS-specific behavior</source>
          <target state="translated">специфическое для ОС поведение</target>
        </trans-unit>
        <trans-unit id="6ff6a92d3d70f0cd836357bfb5bf3c3cccefbb1a" translate="yes" xml:space="preserve">
          <source>Override a platform's name using the &lt;code&gt;--mock&lt;/code&gt; parameter:</source>
          <target state="translated">Переопределите имя платформы с помощью параметра &lt;code&gt;--mock&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2e208f937e2de99c03cc02590c564dd8637f71de" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;platform_name&lt;/code&gt; for any platform with a &lt;code&gt;target_id&lt;/code&gt; that starts with &lt;code&gt;mid&lt;/code&gt;.</source>
          <target state="translated">Переопределяет &lt;code&gt;platform_name&lt;/code&gt; для любой платформы с &lt;code&gt;target_id&lt;/code&gt; , который начинается с &lt;code&gt;mid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ff7601f9ac32f6fa79aa6488bc72cfe9bb3f830" translate="yes" xml:space="preserve">
          <source>Please order the entries by the platform ID when adding new platforms.</source>
          <target state="translated">Пожалуйста,заказывайте записи по идентификатору платформы при добавлении новых платформ.</target>
        </trans-unit>
        <trans-unit id="0711b02500c16372db7e037b0db241051fe28013" translate="yes" xml:space="preserve">
          <source>Python API</source>
          <target state="translated">Python API</target>
        </trans-unit>
        <trans-unit id="c72d26b6da860988583472365adff7ded0de3426" translate="yes" xml:space="preserve">
          <source>Result formats</source>
          <target state="translated">Форматы результатов</target>
        </trans-unit>
        <trans-unit id="1a4dc4f6d88706f6a8e12bd1988584a776d0671f" translate="yes" xml:space="preserve">
          <source>Retargeting platforms</source>
          <target state="translated">Платформы перенаправления</target>
        </trans-unit>
        <trans-unit id="cb9874e294257c0603a7adc3aee1addb709433bf" translate="yes" xml:space="preserve">
          <source>ST-LINK</source>
          <target state="translated">ST-LINK</target>
        </trans-unit>
        <trans-unit id="8bac297d094eb652dad70929648f5aa575b2a6d1" translate="yes" xml:space="preserve">
          <source>Serial port.</source>
          <target state="translated">Серийный порт.</target>
        </trans-unit>
        <trans-unit id="c65bccc3cb6c00c92bed4233093072804a495336" translate="yes" xml:space="preserve">
          <source>Simple (no table formatting)</source>
          <target state="translated">Простой (без форматирования таблицы)</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Тестирование</target>
        </trans-unit>
        <trans-unit id="b4c998d6856f9776936e78445f071ceacd8defaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mock&lt;/code&gt; parameter accepts a platform ID and a platform name, separated by the &lt;code&gt;:&lt;/code&gt; character. The platform ID is the first 4 characters of the &lt;code&gt;target_id&lt;/code&gt;. The platform name is the name you are temporarily assigning to this platform.</source>
          <target state="translated">Параметр &lt;code&gt;--mock&lt;/code&gt; принимает идентификатор платформы и имя платформы, разделенные символом &lt;code&gt;:&lt;/code&gt; .Идентификатор платформы - это первые 4 символа &lt;code&gt;target_id&lt;/code&gt; . Имя платформы - это имя, которое вы временно назначаете этой платформе.</target>
        </trans-unit>
        <trans-unit id="9c4e328bbd6eacf665f9285ec8c6ddc1f48f5ada" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/test&lt;/code&gt; directory contains all tests. You can run the tests with the following command:</source>
          <target state="translated">&lt;code&gt;/test&lt;/code&gt; каталог содержит все тесты. Вы можете запустить тесты с помощью следующей команды:</target>
        </trans-unit>
        <trans-unit id="12bb9c80c87f6d5ee75935c0c51bf42abc08e5d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;coverage&lt;/code&gt; Python package measures code coverage. You can install it with following command:</source>
          <target state="translated">Пакет Python для &lt;code&gt;coverage&lt;/code&gt; измеряет покрытие кода. Вы можете установить его с помощью следующей команды:</target>
        </trans-unit>
        <trans-unit id="2b10dbe87adc3585561214801bc55f5caf680b7f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;platform ID&lt;/strong&gt; contains four ASCII characters containing only hexadecimal values (A-F and 0-9). This platform ID is the same for all platforms of the same type. For example, all &lt;code&gt;K64F&lt;/code&gt; platforms have a platform ID of &lt;code&gt;0240&lt;/code&gt;. &lt;code&gt;mbedls&lt;/code&gt; uses this to identify the platform.</source>
          <target state="translated">Идентификатор &lt;strong&gt;платформы&lt;/strong&gt; содержит четыре символа ASCII, содержащих только шестнадцатеричные значения (AF и 0&amp;ndash;9). Этот идентификатор платформы одинаков для всех платформ одного типа. Например, все платформы &lt;code&gt;K64F&lt;/code&gt; имеют идентификатор платформы &lt;code&gt;0240&lt;/code&gt; . &lt;code&gt;mbedls&lt;/code&gt; использует это для идентификации платформы.</target>
        </trans-unit>
        <trans-unit id="566d41300dc4280182af0f6623be1a66e8f5256e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;platform unique string&lt;/strong&gt; can be any length of characters (a-z, A-Z and 0-9) that you can use to uniquely identify platforms of the same type on the same machine. For example, two FRDM-K64F platforms attached to the same machine could have the following attributes:</source>
          <target state="translated">&lt;strong&gt;Платформа уникальная строка&lt;/strong&gt; может быть любой длины символов (AZ, AZ и 0-9) , которые вы можете использовать , чтобы однозначно идентифицировать платформы одного и того же типа на той же машине. Например, две платформы FRDM-K64F, подключенные к одному компьютеру, могут иметь следующие атрибуты:</target>
        </trans-unit>
        <trans-unit id="9248dc38683cb1d2cfe9462379c515ff9b302cb9" translate="yes" xml:space="preserve">
          <source>The Mbed LS command-line accepts a few arguments to change the format of the results. The default format is a table. You may pass &lt;code&gt;--simple&lt;/code&gt; to simplify this table format, and &lt;code&gt;--json&lt;/code&gt; to print the table as a json list of the rows.</source>
          <target state="translated">Командная строка Mbed LS принимает несколько аргументов для изменения формата результатов. Формат по умолчанию - таблица. Вы можете передать &lt;code&gt;--simple&lt;/code&gt; , чтобы упростить этот формат таблицы, и &lt;code&gt;--json&lt;/code&gt; , чтобы распечатать таблицу как список строк в формате json.</target>
        </trans-unit>
        <trans-unit id="3bb72899ca6b75d677eae2430cfb0d90e3908156" translate="yes" xml:space="preserve">
          <source>The Mbed serial port works by default on Mac and Linux, but Windows needs a driver. Check &lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;here&lt;/a&gt; for more details.</source>
          <target state="translated">Последовательный порт Mbed по умолчанию работает на Mac и Linux, но для Windows требуется драйвер. Подробнее читайте &lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6d1a26c7503b4b8881a89e5e0fc4fbd048ae9cb" translate="yes" xml:space="preserve">
          <source>The Python API is available through the &lt;code&gt;mbed_lstools&lt;/code&gt; module.</source>
          <target state="translated">API Python доступен через модуль &lt;code&gt;mbed_lstools&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58c258a7ec2561eedf2383e413a10a18b75b91cd" translate="yes" xml:space="preserve">
          <source>The command-line tool and Python API check the current directory for a file named &lt;code&gt;mbedls.json&lt;/code&gt;. When it is present, it overrides the returned values. The format of the &lt;code&gt;mbedls.json&lt;/code&gt; file is:</source>
          <target state="translated">Инструмент командной строки и Python API проверяют текущий каталог на наличие файла с именем &lt;code&gt;mbedls.json&lt;/code&gt; . Когда он присутствует, он переопределяет возвращаемые значения. Формат файла &lt;code&gt;mbedls.json&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="531606ff885001fa10465f778a6fb49d37af86f9" translate="yes" xml:space="preserve">
          <source>The command-line tool is available with the command &lt;code&gt;mbedls&lt;/code&gt;.</source>
          <target state="translated">Инструмент командной строки доступен с командой &lt;code&gt;mbedls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27db96a890b1a8edd8a722b79481b5a83745d0a4" translate="yes" xml:space="preserve">
          <source>The development of Mbed LS has been moved into the &lt;a href=&quot;../../src/mbed_os_tools&quot;&gt;mbed-os-tools&lt;/a&gt; package. You can continue to use this module for legacy reasons, however all further development should be continued in the new package.</source>
          <target state="translated">Разработка Mbed LS перенесена в пакет &lt;a href=&quot;../../src/mbed_os_tools&quot;&gt;mbed-os-tools&lt;/a&gt; . Вы можете продолжать использовать этот модуль по причинам, связанным с устаревшими версиями, однако все дальнейшие разработки должны быть продолжены в новом пакете.</target>
        </trans-unit>
        <trans-unit id="4e5421e8ecf6b21b7824db41af9f84f9da4a0bae" translate="yes" xml:space="preserve">
          <source>The file &lt;strong&gt;names and contents&lt;/strong&gt; present on the platform's filesystem</source>
          <target state="translated">&lt;strong&gt;Имена&lt;/strong&gt; файлов &lt;strong&gt;и их содержимое&lt;/strong&gt; в файловой системе платформы.</target>
        </trans-unit>
        <trans-unit id="7d49177a8e49d3f7df5dd7525d48edb64416d137" translate="yes" xml:space="preserve">
          <source>The first four characters of the &lt;code&gt;target_id&lt;/code&gt; that you want to mock.</source>
          <target state="translated">Первые четыре символа &lt;code&gt;target_id&lt;/code&gt; , которые вы хотите высмеять .</target>
        </trans-unit>
        <trans-unit id="b328e0217f6fe3da6a6bd33be1a9de749b5ca25c" translate="yes" xml:space="preserve">
          <source>The following is an example &lt;code&gt;jlink&lt;/code&gt; platform entry:</source>
          <target state="translated">Ниже приведен пример записи платформы &lt;code&gt;jlink&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="df1ccb6914d6625c344bdfe72475d2baa2e2e5d6" translate="yes" xml:space="preserve">
          <source>The name of the platform</source>
          <target state="translated">Название платформы</target>
        </trans-unit>
        <trans-unit id="60ed4791411b63e3f43db2f08dce575b64172af8" translate="yes" xml:space="preserve">
          <source>The type of debugger present on the platform affects how it is detected. The USB Vendor ID is used to detect which type of debugger is present on the platform.</source>
          <target state="translated">Тип отладчика,присутствующего на платформе,влияет на то,как он будет обнаружен.USB Vendor ID используется для определения,какой тип отладчика присутствует на платформе.</target>
        </trans-unit>
        <trans-unit id="6289959a10bfef52952cf1f15bc73820766311f0" translate="yes" xml:space="preserve">
          <source>There are many automounters available, and it is ultimately up to you to determine which is the best one for your use case. However, the &lt;code&gt;usbmount&lt;/code&gt; package on Ubuntu makes it easy to start. If you need more control over your automounter, you can build and run an open source project called &lt;a href=&quot;https://github.com/LemonBoy/ldm&quot;&gt;ldm&lt;/a&gt;.</source>
          <target state="translated">Доступно множество средств автомонтирования, и в конечном итоге вам решать, какой из них лучше всего подходит для вашего варианта использования. Однако пакет &lt;code&gt;usbmount&lt;/code&gt; в Ubuntu упрощает запуск. Если вам нужен больший контроль над своим автомонтажником, вы можете создать и запустить проект с открытым исходным кодом под названием &lt;a href=&quot;https://github.com/LemonBoy/ldm&quot;&gt;ldm&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95f80aa1ea6b75add11cc99024768dc27e5c5089" translate="yes" xml:space="preserve">
          <source>This argument controls the accuracy and speed of this function. There are three choices (in ascending order of accuracy and decreasing order of speed):</source>
          <target state="translated">Этот аргумент контролирует точность и скорость работы этой функции.Существует три варианта (в порядке возрастания точности и убывания скорости):</target>
        </trans-unit>
        <trans-unit id="bc1a9a33ee43f838188c32b218a70eb7ece0d4fa" translate="yes" xml:space="preserve">
          <source>This function allows you to filter results based on platform data. This can hasten the execution of the &lt;code&gt;list_mbeds&lt;/code&gt; function.</source>
          <target state="translated">Эта функция позволяет фильтровать результаты на основе данных платформы. Это может ускорить выполнение функции &lt;code&gt;list_mbeds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2616a7fb825b0d78910a933f6e64a48ed97638fc" translate="yes" xml:space="preserve">
          <source>This results in the following output from the command-line tool:</source>
          <target state="translated">Это приводит к следующему выводу из инструмента командной строки:</target>
        </trans-unit>
        <trans-unit id="718b41fe0e6d59fb7aefd593a4beb15871ef8155" translate="yes" xml:space="preserve">
          <source>This returns an instance that provides access to the rest of the API.</source>
          <target state="translated">Это возвращает экземпляр,который предоставляет доступ к остальным API.</target>
        </trans-unit>
        <trans-unit id="5f0bd6b95ba6b0d1aa4804d3b1c2d843052d543f" translate="yes" xml:space="preserve">
          <source>This tool relies on board interfaces conforming to certain standards, so it can detect platforms properly. The &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;Mbed Enabled&lt;/a&gt; program sets these standards. Please see the &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/mbed-enabled-program-requirements/&quot;&gt;Technical Requirements&lt;/a&gt; for more information.</source>
          <target state="translated">Этот инструмент полагается на интерфейсы платы, соответствующие определенным стандартам, поэтому он может правильно определять платформы. Программа &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;Mbed Enabled&lt;/a&gt; устанавливает эти стандарты. Для получения дополнительной информации см. &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/mbed-enabled-program-requirements/&quot;&gt;Технические требования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac491a738fa8d9a39630b689c1ab8d30e9fa8f43" translate="yes" xml:space="preserve">
          <source>To install Mbed LS from &lt;a href=&quot;https://pypi.python.org/pypi/mbed-ls&quot;&gt;PyPI&lt;/a&gt;, run the following command:</source>
          <target state="translated">Чтобы установить Mbed LS из &lt;a href=&quot;https://pypi.python.org/pypi/mbed-ls&quot;&gt;PyPI&lt;/a&gt; , выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="aa90b441cbc22332ee18c74acf6a4dcb743bdc9d" translate="yes" xml:space="preserve">
          <source>To remove a mocked platform, use the &lt;code&gt;--mock&lt;/code&gt; parameter again. Continuing from the previous example, use &lt;code&gt;-&amp;lt;platform id&amp;gt;&lt;/code&gt; as the value:</source>
          <target state="translated">Чтобы удалить макет платформы, снова используйте параметр &lt;code&gt;--mock&lt;/code&gt; . Продолжая предыдущий пример, используйте &lt;code&gt;-&amp;lt;platform id&amp;gt;&lt;/code&gt; в качестве значения:</target>
        </trans-unit>
        <trans-unit id="9403b0ec7a7cb4ea552d292ac82b3987260b4644" translate="yes" xml:space="preserve">
          <source>To run the tests while measuring code coverage, use the following command:</source>
          <target state="translated">Для запуска тестов при измерении покрытия кода используйте следующую команду:</target>
        </trans-unit>
        <trans-unit id="9331b4db422359a901cde6ec4d52d6baab1f617a" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;True&lt;/code&gt;, this includes unmounted platforms in the results. This enables the same behavior as the &lt;code&gt;-u&lt;/code&gt; command-line flag.</source>
          <target state="translated">Если установлено значение &lt;code&gt;True&lt;/code&gt; , в результаты будут включены несмонтированные платформы. Это обеспечивает то же поведение, что и флаг командной строки &lt;code&gt;-u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a38bda969277c0a30151ab8dbdcd3e714d30808b" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;True&lt;/code&gt;, this skips the retargetting step, and the results are unmodified. This enables the same behavior as the &lt;code&gt;--skip-retarget&lt;/code&gt; command-line flag.</source>
          <target state="translated">Если задано значение &lt;code&gt;True&lt;/code&gt; , шаг перенацеливания пропускается, и результаты остаются неизменными. Это обеспечивает то же поведение, что и &lt;code&gt;--skip-retarget&lt;/code&gt; командной строки --skip-retarget .</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="9e7e495e29027bd2f702596510aeedd3c804c67d" translate="yes" xml:space="preserve">
          <source>You can also remove all mocked platforms by supplying &lt;code&gt;*&lt;/code&gt; as the &lt;code&gt;target_id&lt;/code&gt;:</source>
          <target state="translated">Вы также можете удалить все имитируемые платформы, &lt;code&gt;target_id&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; в качестве target_id :</target>
        </trans-unit>
        <trans-unit id="208159282a8d50da07a95b879e7a063f68aea27d" translate="yes" xml:space="preserve">
          <source>You can then generate a report:</source>
          <target state="translated">Тогда ты можешь сгенерировать отчет:</target>
        </trans-unit>
        <trans-unit id="cc183b059a454b327ed04b841628aff0e3c10d2a" translate="yes" xml:space="preserve">
          <source>mbed-ls is a Python module that detects and lists mbed-enabled devices connected to the host computer</source>
          <target state="translated">mbed-ls-это модуль Python,который обнаруживает и перечисляет устройства с поддержкой mbed,подключенные к главному компьютеру.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
