<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/nanaimo/">
    <body>
      <group id="nanaimo">
        <trans-unit id="57b0192c90bade6200f8fe6add2bd92423f9a981" translate="yes" xml:space="preserve">
          <source>A delicious Python treat that makes on-target testing sweet and satisfying.</source>
          <target state="translated">Восхитительное угощение Python,которое делает целевое тестирование сладким и приятным.</target>
        </trans-unit>
        <trans-unit id="7e72ab885b6eecaecfbe3c9d5d916b2e1e1ab636" translate="yes" xml:space="preserve">
          <source>Block diagram of Nanaimo&amp;rsquo;s relationship to other components of a typical software build and test pipeline.</source>
          <target state="translated">Блок-схема отношений Нанаймо с другими компонентами типичного конвейера сборки и тестирования программного обеспечения.</target>
        </trans-unit>
        <trans-unit id="9a5cf9c40036ab923e4b08d4bf75097ac400ff09" translate="yes" xml:space="preserve">
          <source>Example of S32K dev boards attached to Raspberry PI CI workers running the &lt;a href=&quot;https://buildkite.com&quot;&gt;Buildkite&lt;/a&gt; agent and using Nanaimo.</source>
          <target state="translated">Пример плат разработки S32K, подключенных к Raspberry PI CI &lt;a href=&quot;https://buildkite.com&quot;&gt;worker,&lt;/a&gt; работающим с агентом Buildkite и использующим Nanaimo.</target>
        </trans-unit>
        <trans-unit id="e4b9878a6bb4d7ade487215e6a25d783fd1e3a1d" translate="yes" xml:space="preserve">
          <source>Example scenario using Nanaimo to test an I2C driver for a microcontroller.</source>
          <target state="translated">Пример сценария с использованием Nanaimo для тестирования I2C-драйвера для микроконтроллера.</target>
        </trans-unit>
        <trans-unit id="74dd49bd8ec3e146e66e88c16fcdff760c7dfd12" translate="yes" xml:space="preserve">
          <source>Framework for automating tests involving hardware test fixtures.</source>
          <target state="translated">Основа для автоматизации испытаний с использованием испытательных приспособлений для аппаратного обеспечения.</target>
        </trans-unit>
        <trans-unit id="b3e1ac3d545f8a410b7bcb9a5fd366c4bf888b75" translate="yes" xml:space="preserve">
          <source>Hierarchy of system testing. Nanaimo focuses on part and subassembly testing.</source>
          <target state="translated">Иерархия тестирования системы.Нанаимо фокусируется на тестировании деталей и подсистем.</target>
        </trans-unit>
        <trans-unit id="e6fa936c1f8b0374bb1f00c2e7ebcab08335fa24" translate="yes" xml:space="preserve">
          <source>Nanaimo is &lt;em&gt;not&lt;/em&gt; a simulation framework and is not designed to support the complexity of a full hardware-in-the-loop platform.
Instead it&amp;rsquo;s focused on testing small integrations with a few hardware components and instruments using concepts, syntax,
and frameworks familiar to software engineers. Examples of these small integrations might include verifying a SPI driver for a
microcontroller or ensuring the upload time for a serial bootloader meets expected Key-Performance-Indicators (KPIs). To do this
Nanaimo abstractions provide async interfaces to hardware either directly using available communication protocols
(e.g. serial or IP networks) or by invoking a CLI provided by the instrument vendor. Because of this latter use case some
instruments will require additional programs be available in a test environment.</source>
          <target state="translated">Nanaimo &lt;em&gt;не&lt;/em&gt; является платформой для моделирования и не предназначен для поддержки сложности полной аппаратной платформы. Вместо этого он сосредоточен на тестировании небольших интеграций с несколькими аппаратными компонентами и инструментами с использованием концепций, синтаксиса и фреймворков, знакомых разработчикам программного обеспечения. Примеры этих небольших интеграций могут включать проверку драйвера SPI для микроконтроллера или обеспечение соответствия времени загрузки для последовательного загрузчика ожидаемым ключевым показателям производительности (KPI). Для этого абстракции Nanaimo предоставляют асинхронные интерфейсы к оборудованию либо напрямую, используя доступные протоколы связи (например, последовательные или IP-сети), либо путем вызова интерфейса командной строки, предоставленного поставщиком прибора. Из-за этого последнего варианта использования для некоторых инструментов потребуются дополнительные программы, доступные в тестовой среде.</target>
        </trans-unit>
        <trans-unit id="14c12ea446b8fb714a267f185c0390be1cf066b4" translate="yes" xml:space="preserve">
          <source>Nanaimo is a set of utilities and plugins designed to enable integration of hardware test apparatuses
with pytest. This can allow on-target tests to run as part of continuous integration pipelines like
&lt;a href=&quot;https://buildkite.com&quot;&gt;Buildkite&lt;/a&gt;, &lt;a href=&quot;https://www.atlassian.com/software/bamboo&quot;&gt;Bamboo&lt;/a&gt;, or &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt;.</source>
          <target state="translated">Nanaimo - это набор утилит и плагинов, предназначенных для интеграции аппаратных тестовых устройств с pytest. Это может позволить запускать целевые тесты как часть конвейеров непрерывной интеграции, таких как &lt;a href=&quot;https://buildkite.com&quot;&gt;Buildkite&lt;/a&gt; , &lt;a href=&quot;https://www.atlassian.com/software/bamboo&quot;&gt;Bamboo&lt;/a&gt; или &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3008905c2e9a32e2b3a3144f0ea7a8f7d1ef964" translate="yes" xml:space="preserve">
          <source>Nanaimo is alpha software and will remain so until we bump its version to 1.0.0 or greater.
We will not knowingly break compatibility within a minor revision but we will break compatibility
a few more times between minor revisions until beta is declared. Because of this you should depend
on a minor version explicitly. For example</source>
          <target state="translated">Nanaimo является альфа-программой и будет оставаться таковым до тех пор,пока мы не повысим его версию до 1.0.0 или выше.Мы не будем сознательно нарушать совместимость в младших ревизиях,но мы будем нарушать совместимость ещё несколько раз между младшими ревизиями до тех пор,пока не будет объявлена бета-версия.Поэтому вы должны явно зависеть от младшей версии.Например</target>
        </trans-unit>
        <trans-unit id="9d7cd62b4cca86287dfc6d8d17a3b3d532dc71f3" translate="yes" xml:space="preserve">
          <source>Nanaimo is designed to enable testing of software-defined, physical components in isolation to
provide pre-integration verification of software interfaces and behavioral contracts. It adapts
asynchronous control and monitoring of these components to fit familiar testing idioms
(e.g. x-unit testing) using the popular python test framework, &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;.</source>
          <target state="translated">Nanaimo позволяет тестировать программно определяемые физические компоненты изолированно, чтобы обеспечить предварительную проверку программных интерфейсов и поведенческих контрактов. Он адаптирует асинхронное управление и мониторинг этих компонентов в соответствии со знакомыми идиомами тестирования (например, тестирование x-unit) с использованием популярной среды тестирования Python, &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab972799d0dfd1ccd4227b35e29e69093098ded9" translate="yes" xml:space="preserve">
          <source>Nanaimo is named after &lt;a href=&quot;https://en.wikipedia.org/wiki/Nanaimo_bar&quot;&gt;Nanaimo bars&lt;/a&gt; which are about the best things humans have ever invented.</source>
          <target state="translated">Нанаймо назван в честь &lt;a href=&quot;https://en.wikipedia.org/wiki/Nanaimo_bar&quot;&gt;баров Нанаймо,&lt;/a&gt; которые представляют собой лучшее, что когда-либо изобретали люди.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Примечание</target>
        </trans-unit>
        <trans-unit id="d03acb6e4ba3216844800c042f62673952a7e510" translate="yes" xml:space="preserve">
          <source>This design is an amalgam of the &lt;a href=&quot;https://www.youtube.com/watch?v=0BSaI117ITI&quot;&gt;TLYF&lt;/a&gt; (Test Like You Fly) methodology and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Swiss_cheese_model&quot;&gt;Swiss cheese&lt;/a&gt; model of
failure analysis. Specifically; Nanaimo facilitates testing on actual or representative hardware
for the first integration of software into a part or subassembly. Traditionally software engineers were
responsible only for unit-testing and Software-In-the-Loop (SIL) simulation of their code. Nanaimo encourages
software engineers to also provide hardware integration tests by enabling Hardware-In-the-Loop
&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;continuous-integration&lt;/a&gt; (HIL-CI, perhaps?).</source>
          <target state="translated">Эта конструкция представляет собой смесь &lt;a href=&quot;https://www.youtube.com/watch?v=0BSaI117ITI&quot;&gt;методологии TLYF&lt;/a&gt; (Test Like You Fly) и &lt;a href=&quot;https://en.wikipedia.org/wiki/Swiss_cheese_model&quot;&gt;швейцарской&lt;/a&gt; модели анализа отказов. Конкретно; Nanaimo облегчает тестирование реального или типового оборудования для первой интеграции программного обеспечения в деталь или узел. Традиционно разработчики программного обеспечения отвечали только за модульное тестирование и моделирование программного обеспечения в цикле (SIL) своего кода. Нанаймо поощряет инженеров-программистов также проводить тесты интеграции аппаратного обеспечения, включив &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;непрерывную интеграцию&lt;/a&gt; аппаратного обеспечения (возможно, HIL-CI?).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
