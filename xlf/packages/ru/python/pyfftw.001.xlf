<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/pyfftw/">
    <body>
      <group id="pyfftw">
        <trans-unit id="1cb62b2bf6f10cfde8065aa4b51940a1dbf4ff19" translate="yes" xml:space="preserve">
          <source>(indeed, it supports the</source>
          <target state="translated">(indeed, it supports the</target>
        </trans-unit>
        <trans-unit id="463bd4bf0ba1a79623884af81a3c4d3692ee0033" translate="yes" xml:space="preserve">
          <source>A comprehensive unittest suite can be found with the source on the github
repository.</source>
          <target state="translated">Полный набор юниттестов можно найти с исходным кодом в репозитории github.</target>
        </trans-unit>
        <trans-unit id="51af6ba168f6bffb7d822dbacff376cdfc2c9c11" translate="yes" xml:space="preserve">
          <source>A pythonic wrapper around FFTW, the FFT library, presenting a unified interface for all the supported transforms.</source>
          <target state="translated">Пифоническая обёртка вокруг FFTW,библиотека FFT,представляющая собой единый интерфейс для всех поддерживаемых преобразований.</target>
        </trans-unit>
        <trans-unit id="92c094416794a6426305bb2ed8bc2541a68a8055" translate="yes" xml:space="preserve">
          <source>Both the complex DFT and the real DFT are supported, as well as arbitrary
axes of arbitrary shaped and strided arrays, which makes it almost
feature equivalent to standard and real FFT functions of</source>
          <target state="translated">Поддерживаются как комплексная DFT,так и реальная DFT,а также произвольные оси массивов произвольной формы и сетчатых массивов,что делает ее практически эквивалентной стандартным и реальным функциям БПФ из</target>
        </trans-unit>
        <trans-unit id="2e3ef3efd1d1f2d28578453b508d77a768c8a42b" translate="yes" xml:space="preserve">
          <source>Numpy is a dependency for both.</source>
          <target state="translated">Нампи-это зависимость для обоих.</target>
        </trans-unit>
        <trans-unit id="b8b757f15a5b48989b0ff2b2ac5997def2896aba" translate="yes" xml:space="preserve">
          <source>Operating FFTW in multithreaded mode is supported.</source>
          <target state="translated">Поддерживается работа БПФ в многопоточном режиме.</target>
        </trans-unit>
        <trans-unit id="2fc69ef4751bc4cb27f33a7f28edd61443fcd57f" translate="yes" xml:space="preserve">
          <source>The documentation can be found
&lt;a href=&quot;http://pyfftw.readthedocs.io&quot;&gt;here&lt;/a&gt;, and the source
is on &lt;a href=&quot;https://github.com/pyFFTW/pyFFTW&quot;&gt;github&lt;/a&gt;.</source>
          <target state="translated">The documentation can be found &lt;a href=&quot;http://pyfftw.readthedocs.io&quot;&gt;here&lt;/a&gt;, and the source is on &lt;a href=&quot;https://github.com/pyFFTW/pyFFTW&quot;&gt;github&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2e5515f8f234c8554488bd26056d6730b4fd50ad" translate="yes" xml:space="preserve">
          <source>To build for windows from source, download the fftw dlls for your system
and the header file from here (they&amp;rsquo;re in a zip file):
&lt;a href=&quot;http://www.fftw.org/install/windows.html&quot;&gt;http://www.fftw.org/install/windows.html&lt;/a&gt; and place them in the pyfftw
directory. The files are libfftw3-3.dll, libfftw3l-3.dll, libfftw3f-3.dll
and libfftw3.h.</source>
          <target state="translated">To build for windows from source, download the fftw dlls for your system and the header file from here (they&amp;rsquo;re in a zip file): &lt;a href=&quot;http://www.fftw.org/install/windows.html&quot;&gt;http://www.fftw.org/install/windows.html&lt;/a&gt; and place them in the pyfftw directory. The files are libfftw3-3.dll, libfftw3l-3.dll, libfftw3f-3.dll and libfftw3.h.</target>
        </trans-unit>
        <trans-unit id="8cacf858d1e96f3b2405418af8799a11b64c07d1" translate="yes" xml:space="preserve">
          <source>Under linux, to build from source, the FFTW library must be installed already.
This should probably work for OSX, though I&amp;rsquo;ve not tried it.</source>
          <target state="translated">Under linux, to build from source, the FFTW library must be installed already. This should probably work for OSX, though I&amp;rsquo;ve not tried it.</target>
        </trans-unit>
        <trans-unit id="3c1084e82380f237952224432c2a3d150699fe5d" translate="yes" xml:space="preserve">
          <source>clongdouble</source>
          <target state="translated">клонгдвальдный</target>
        </trans-unit>
        <trans-unit id="fb3be0c9cb09f5250bfdca5f81c4a163babc89b6" translate="yes" xml:space="preserve">
          <source>does not).</source>
          <target state="translated">нет).</target>
        </trans-unit>
        <trans-unit id="97c5b4dfbf04a787a1627479170693a91019502d" translate="yes" xml:space="preserve">
          <source>dtype which</source>
          <target state="translated">тип,который</target>
        </trans-unit>
        <trans-unit id="5f523da0402851cca525aa4e5f3970088499d984" translate="yes" xml:space="preserve">
          <source>numpy.fft</source>
          <target state="translated">тупой.</target>
        </trans-unit>
        <trans-unit id="d5ffedadb98fe295823ad63a73e58eb085e989cf" translate="yes" xml:space="preserve">
          <source>pyFFTW is a pythonic wrapper around &lt;a href=&quot;http://www.fftw.org/&quot;&gt;FFTW&lt;/a&gt;, the
speedy FFT library. The ultimate aim is to present a unified interface for all
the possible transforms that FFTW can perform.</source>
          <target state="translated">pyFFTW is a pythonic wrapper around &lt;a href=&quot;http://www.fftw.org/&quot;&gt;FFTW&lt;/a&gt;, the speedy FFT library. The ultimate aim is to present a unified interface for all the possible transforms that FFTW can perform.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
