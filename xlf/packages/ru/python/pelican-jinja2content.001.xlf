<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/pelican-jinja2content/">
    <body>
      <group id="pelican-jinja2content">
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Благодарности</target>
        </trans-unit>
        <trans-unit id="7fbcd84544aaad22514ad5ffb8f02c11e7296b09" translate="yes" xml:space="preserve">
          <source>After this, the Markdown will be rendered into HTML and only then the theme&amp;rsquo;s templates will be applied.</source>
          <target state="translated">After this, the Markdown will be rendered into HTML and only then the theme&amp;rsquo;s templates will be applied.</target>
        </trans-unit>
        <trans-unit id="437425f1e10a96497c89fa8d467a5c8934c2b52d" translate="yes" xml:space="preserve">
          <source>All input that needs Pelican variables such as &lt;code&gt;article&lt;/code&gt;, &lt;code&gt;category&lt;/code&gt;, etc., should be put inside your &lt;em&gt;theme&amp;rsquo;s&lt;/em&gt; templating. As such, the main use of this plugin is to automatically generate parts of your articles or pages.</source>
          <target state="translated">All input that needs Pelican variables such as &lt;code&gt;article&lt;/code&gt; , &lt;code&gt;category&lt;/code&gt; , etc., should be put inside your &lt;em&gt;theme&amp;rsquo;s&lt;/em&gt; templating. As such, the main use of this plugin is to automatically generate parts of your articles or pages.</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Конфигурация</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Вклад</target>
        </trans-unit>
        <trans-unit id="b5b2c53ec5b409a14150b67e5c61e1db11e086cd" translate="yes" xml:space="preserve">
          <source>Contributions are welcome and much appreciated. Every little bit helps. You can contribute by improving the documentation, adding missing features, and fixing bugs. You can also help out by reviewing and commenting on &lt;a href=&quot;https://github.com/pelican-plugins/jinja2content/issues&quot;&gt;existing issues&lt;/a&gt;.</source>
          <target state="translated">Contributions are welcome and much appreciated. Every little bit helps. You can contribute by improving the documentation, adding missing features, and fixing bugs. You can also help out by reviewing and commenting on &lt;a href=&quot;https://github.com/pelican-plugins/jinja2content/issues&quot;&gt;existing issues&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1977fdb55911e904124ce6c2e04dfb094d994d94" translate="yes" xml:space="preserve">
          <source>Converted to new plugin format by @justinmayer.</source>
          <target state="translated">Конвертируется в новый формат плагина @justinmayer.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>
        </trans-unit>
        <trans-unit id="4be9a4abd6d7c8083fc1a7bf9004e653250a9ba5" translate="yes" xml:space="preserve">
          <source>Extending</source>
          <target state="translated">Расширение</target>
        </trans-unit>
        <trans-unit id="2cdcc1c44bd074f99204bedc15d64b8a3c63d849" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;my-cool-article.md&lt;/code&gt;</source>
          <target state="translated">File &lt;code&gt;my-cool-article.md&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f193e57539862e46d6a0701ba535c9eb48f9ef48" translate="yes" xml:space="preserve">
          <source>In this approach, your content is &lt;em&gt;first&lt;/em&gt; rendered by the Jinja template engine. The result is then passed to the normal Pelican reader as usual. There are two consequences for usage. First, this means the Pelican context and Jinja variables &lt;a href=&quot;http://docs.getpelican.com/en/stable/themes.html#templates-and-variables&quot;&gt;usually visible&lt;/a&gt; to your article or page template are &lt;em&gt;not&lt;/em&gt; available at rendering time. Second, it means that if any of your input content could be parsed as Jinja directives, they will be rendered as such. This is unlikely to happen accidentally, but it&amp;rsquo;s good to be aware of.</source>
          <target state="translated">In this approach, your content is &lt;em&gt;first&lt;/em&gt; rendered by the Jinja template engine. The result is then passed to the normal Pelican reader as usual. There are two consequences for usage. First, this means the Pelican context and Jinja variables &lt;a href=&quot;http://docs.getpelican.com/en/stable/themes.html#templates-and-variables&quot;&gt;usually visible&lt;/a&gt; to your article or page template are &lt;em&gt;not&lt;/em&gt; available at rendering time. Second, it means that if any of your input content could be parsed as Jinja directives, they will be rendered as such. This is unlikely to happen accidentally, but it&amp;rsquo;s good to be aware of.</target>
        </trans-unit>
        <trans-unit id="8d5df21147a5b6a3f39a95e1f05fbf5470786013" translate="yes" xml:space="preserve">
          <source>In this way, Markdown articles have more control over the content that is passed to the theme&amp;rsquo;s &lt;code&gt;article.html&lt;/code&gt; template, without the need to pollute the Markdown with HTML. Another added benefit is that now &lt;code&gt;img_desc&lt;/code&gt; is reusable across articles.</source>
          <target state="translated">In this way, Markdown articles have more control over the content that is passed to the theme&amp;rsquo;s &lt;code&gt;article.html&lt;/code&gt; template, without the need to pollute the Markdown with HTML. Another added benefit is that now &lt;code&gt;img_desc&lt;/code&gt; is reusable across articles.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="c10bfc8f9cbe4e57ccaea5914d29df6f1be3d4cb" translate="yes" xml:space="preserve">
          <source>Jinja2Content Plugin for Pelican</source>
          <target state="translated">Jinja2Content Plugin для Pelican</target>
        </trans-unit>
        <trans-unit id="0cc70b5454dbc4370c1630ea129f47741689250e" translate="yes" xml:space="preserve">
          <source>Markdown, reStructured Text, and HTML input are all supported. Note that by enabling this plugin, all input files of these file types will be pre-processed with the Jinja renderer. It is not currently supported to selectively enable or disable &lt;code&gt;jinja2content&lt;/code&gt; for only some of these input sources.</source>
          <target state="translated">Markdown, reStructured Text, and HTML input are all supported. Note that by enabling this plugin, all input files of these file types will be pre-processed with the Jinja renderer. It is not currently supported to selectively enable or disable &lt;code&gt;jinja2content&lt;/code&gt; for only some of these input sources.</target>
        </trans-unit>
        <trans-unit id="2a0426c2e5cfa4dfcb99db04df3e0e4ab6ad25b7" translate="yes" xml:space="preserve">
          <source>Note that templates rendered with &lt;code&gt;jinja2content&lt;/code&gt; can contain Markdown as well as HTML, since they are added before the Markdown content is converted to HTML.</source>
          <target state="translated">Note that templates rendered with &lt;code&gt;jinja2content&lt;/code&gt; can contain Markdown as well as HTML, since they are added before the Markdown content is converted to HTML.</target>
        </trans-unit>
        <trans-unit id="14011c31357e884564458611f9076b9559d97fcb" translate="yes" xml:space="preserve">
          <source>One usage is to embed repetitive HTML in Markdown articles. Since Markdown doesn&amp;rsquo;t allow customization of layout, if anything more sophisticated than just displaying an image is necessary, one is forced to embed HTML in Markdown articles (i.e. hard-code &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags and then select them from the theme&amp;rsquo;s CSS). However, with &lt;code&gt;jinja2content&lt;/code&gt;, one can do the following:</source>
          <target state="translated">One usage is to embed repetitive HTML in Markdown articles. Since Markdown doesn&amp;rsquo;t allow customization of layout, if anything more sophisticated than just displaying an image is necessary, one is forced to embed HTML in Markdown articles (i.e. hard-code &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags and then select them from the theme&amp;rsquo;s CSS). However, with &lt;code&gt;jinja2content&lt;/code&gt; , one can do the following:</target>
        </trans-unit>
        <trans-unit id="31d5a226a3ccac3a31d5c06dfee2df27da16e068" translate="yes" xml:space="preserve">
          <source>Original implementation by @joachimneu and re-worked by @Leonardo.</source>
          <target state="translated">Оригинальная реализация @joachimneu и переработанная @Leonardo.</target>
        </trans-unit>
        <trans-unit id="c2f0746e7ec15b4be2f96bccbfa580e42d7b0095" translate="yes" xml:space="preserve">
          <source>Pelican plugin for using Jinja template code within post content</source>
          <target state="translated">Плагин Pelican для использования кода шаблона Jinja в почтовом наполнении.</target>
        </trans-unit>
        <trans-unit id="84078f28ce748a4138602011bb6bc100c9685156" translate="yes" xml:space="preserve">
          <source>Replaces &lt;a href=&quot;https://github.com/joachimneu/pelican-jinja2content/tree/f73ef9b1ef1ee1f56c80757b4190b53f8cd607d1&quot;&gt;pelican-jinj2content&lt;/a&gt;, which had become unmaintained.</source>
          <target state="translated">Replaces &lt;a href=&quot;https://github.com/joachimneu/pelican-jinja2content/tree/f73ef9b1ef1ee1f56c80757b4190b53f8cd607d1&quot;&gt;pelican-jinj2content&lt;/a&gt;, which had become unmaintained.</target>
        </trans-unit>
        <trans-unit id="4e00afb986323ba904efea3a982c45371e5a241e" translate="yes" xml:space="preserve">
          <source>The result will be:</source>
          <target state="translated">Результат будет:</target>
        </trans-unit>
        <trans-unit id="9cf1a143307f7375fa90a4b624612a3245d23a07" translate="yes" xml:space="preserve">
          <source>This plugin accepts the setting &lt;code&gt;JINJA2CONTENT_TEMPLATES&lt;/code&gt; which should be set to a list of paths relative to &lt;code&gt;PATH&lt;/code&gt; (the main content directory, usually &lt;code&gt;&quot;content&quot;&lt;/code&gt;). &lt;code&gt;jinja2content&lt;/code&gt; will look for templates inside these directories, in order. If they are not found in any, the theme&amp;rsquo;s templates folder is used.</source>
          <target state="translated">This plugin accepts the setting &lt;code&gt;JINJA2CONTENT_TEMPLATES&lt;/code&gt; which should be set to a list of paths relative to &lt;code&gt;PATH&lt;/code&gt; (the main content directory, usually &lt;code&gt;&quot;content&quot;&lt;/code&gt; ). &lt;code&gt;jinja2content&lt;/code&gt; will look for templates inside these directories, in order. If they are not found in any, the theme&amp;rsquo;s templates folder is used.</target>
        </trans-unit>
        <trans-unit id="cbcc6663ae8faea5f58777697a397a5c0faa4244" translate="yes" xml:space="preserve">
          <source>This plugin allows the use of Jinja2 directives inside your Pelican articles and pages.</source>
          <target state="translated">Этот плагин позволяет использовать директивы Jinja2 в ваших статьях и страницах Pelican.</target>
        </trans-unit>
        <trans-unit id="0e435e2dbdd4bd5fb76032db7c4b9fdae5a1db25" translate="yes" xml:space="preserve">
          <source>This plugin can be installed via:</source>
          <target state="translated">Этот плагин может быть установлен через:</target>
        </trans-unit>
        <trans-unit id="a1ea1ab0291a8d1447ed34ef54433503a4b62e74" translate="yes" xml:space="preserve">
          <source>This plugin is structured such that it should be quite easy to extend readers for other file types to also render Jinja template logic. It should be sufficient to create a new reader class that inherits from the &lt;code&gt;JinjaContentMixin&lt;/code&gt; and then your desired reader class. See class definitions in the source for examples.</source>
          <target state="translated">This plugin is structured such that it should be quite easy to extend readers for other file types to also render Jinja template logic. It should be sufficient to create a new reader class that inherits from the &lt;code&gt;JinjaContentMixin&lt;/code&gt; and then your desired reader class. See class definitions in the source for examples.</target>
        </trans-unit>
        <trans-unit id="6044feebb4089508582ab6b8c370a0703110d114" translate="yes" xml:space="preserve">
          <source>To start contributing to this plugin, review the &lt;a href=&quot;https://docs.getpelican.com/en/latest/contribute.html&quot;&gt;Contributing to Pelican&lt;/a&gt; documentation, beginning with the &lt;strong&gt;Contributing Code&lt;/strong&gt; section.</source>
          <target state="translated">To start contributing to this plugin, review the &lt;a href=&quot;https://docs.getpelican.com/en/latest/contribute.html&quot;&gt;Contributing to Pelican&lt;/a&gt; documentation, beginning with the &lt;strong&gt;Contributing Code&lt;/strong&gt; section.</target>
        </trans-unit>
        <trans-unit id="5d45a90574e5144b985ca708b445dac5ac1cde8c" translate="yes" xml:space="preserve">
          <source>Updated to support reST and HTML input by @micahjsmith.</source>
          <target state="translated">Обновлено для поддержки reST и HTML ввода @micahjsmith.</target>
        </trans-unit>
        <trans-unit id="fa468aed5fe2c1f928ad2562ee82d9d6af93d1d2" translate="yes" xml:space="preserve">
          <source>Where file &lt;code&gt;img_desc.html&lt;/code&gt; contains:</source>
          <target state="translated">Where file &lt;code&gt;img_desc.html&lt;/code&gt; contains:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
