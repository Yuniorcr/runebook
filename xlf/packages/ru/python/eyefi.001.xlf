<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/eyefi/">
    <body>
      <group id="eyefi">
        <trans-unit id="475144e4e531f3a6ea02c1638f44db7ef05db5be" translate="yes" xml:space="preserve">
          <source>After associating with one of the configured wireless networks,
the card authenticates a session with the server. The shared
secret needs to be obtained from the settings of the Win/OSX
application. The server can cope with multiple cards that are
identified by their MAC address. After authentication, the card
pushes the images that have not yet been posted to the server.
The server unpacks the tarred bundle (optionally in a directory
per MAC address). It then resolves the wireless networks that were
logged by the card at the time the picture was taken into a
geolocation using the Google API. The geolocation data is stored
in an XMP sidecar. Finally, you can trigger your own scripts
on complete upload, extraction and tagging.</source>
          <target state="translated">После подключения к одной из настроенных беспроводных сетей карта аутентифицирует сеанс с сервером.Разделяемый секрет должен быть получен из настроек приложения Win/OSX.Сервер может справиться с несколькими картами,которые идентифицируются по их MAC-адресу.После аутентификации карта проталкивает изображения,которые еще не были размещены на сервере.Сервер распаковывает запятнанный пакет (опционально в каталоге на MAC-адрес).Затем он разрешает беспроводные сети,которые были зарегистрированы на карте в то время,когда изображение было снято в геолокации с помощью Google API.Данные геолокации хранятся в боковой карте XMP.Наконец,вы можете запускать свои собственные сценарии при полной загрузке,извлечении и маркировке.</target>
        </trans-unit>
        <trans-unit id="569494533c94be55518941d5feffa05b921bf327" translate="yes" xml:space="preserve">
          <source>EyeFi Server Framework</source>
          <target state="translated">EyeFi Server Framework</target>
        </trans-unit>
        <trans-unit id="2e965268fb0c93a28147b6d204ef615267153d61" translate="yes" xml:space="preserve">
          <source>The EyeFi cards include both some 2-8GB of SDHC storage and an</source>
          <target state="translated">Карты EyeFi включают в себя как 2-8 Гб SDHC-накопителя,так и</target>
        </trans-unit>
        <trans-unit id="344b637c52822d1fd473e292725930fb5a54aaf1" translate="yes" xml:space="preserve">
          <source>embedded microprocessor with WiFi (802.11bgn) that can upload
images as soon as they have been captured. While the software
bundled with the cards is closed and Win/OSX only, the protocol
is decently clean SOAP (like XML RPC via HTTP) and can be
implemented with twisted and soappy.</source>
          <target state="translated">встроенный микропроцессор с WiFi (802.11bgn),который может загружать изображения сразу после их захвата.В то время как программное обеспечение,поставляемое в комплекте с платами закрыто и только для Win/OSX,протокол прилично чистый SOAP (как XML RPC через HTTP)и может быть реализован с помощью скрученных и мыльных.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
