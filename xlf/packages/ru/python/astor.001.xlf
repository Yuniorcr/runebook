<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/astor/">
    <body>
      <group id="astor">
        <trans-unit id="53be3e9b4b8da7509fe5e1a76aeaf24c219bbd68" translate="yes" xml:space="preserve">
          <source>3-clause BSD</source>
          <target state="translated">3-я причина BSD</target>
        </trans-unit>
        <trans-unit id="00b5635b8954b6dae7436cabfda878687e7a5813" translate="yes" xml:space="preserve">
          <source>Build status:</source>
          <target state="translated">Состояние здания:</target>
        </trans-unit>
        <trans-unit id="0ba11f86b8c377aae433814ab9f7d825e11d981b" translate="yes" xml:space="preserve">
          <source>Can round-trip two different source trees to compare for functional
differences, using the astor.rtrip tool (for example, after PEP8 edits).</source>
          <target state="translated">Может обходить два разных дерева источников для сравнения функциональных различий,используя инструмент astor.rtrip (например,после редактирования PEP8).</target>
        </trans-unit>
        <trans-unit id="ed0350dc3257153d84758ae6cd511caacb10aa9d" translate="yes" xml:space="preserve">
          <source>Documentation:</source>
          <target state="translated">Документация:</target>
        </trans-unit>
        <trans-unit id="cdd71d7867ffee792ba1cdd6bf67000e27906706" translate="yes" xml:space="preserve">
          <source>Dump pretty-printing of AST</source>
          <target state="translated">Сброс красивых отпечатков АСТ</target>
        </trans-unit>
        <trans-unit id="7033d02f1e72274ee75ff03e454b66ae46bf300e" translate="yes" xml:space="preserve">
          <source>Easier to read than dump from built-in AST module</source>
          <target state="translated">Легче читать,чем дамп из встроенного модуля AST</target>
        </trans-unit>
        <trans-unit id="5442279cc0bf933aa64970b9ae35132eccddba7b" translate="yes" xml:space="preserve">
          <source>Easy to read generated code as, well, code</source>
          <target state="translated">Легко читаемый сгенерированный код,а также код.</target>
        </trans-unit>
        <trans-unit id="17ac0e084f63802e44a5b82e52032f7394f9c31e" translate="yes" xml:space="preserve">
          <source>Enjoy easy access to parent node(s) for tree rewriting</source>
          <target state="translated">Наслаждайтесь легким доступом к родительским узлам для переписывания деревьев</target>
        </trans-unit>
        <trans-unit id="50df4994a34ea45c58c071503e79edfbf7bbbb9b" translate="yes" xml:space="preserve">
          <source>Harder to read than round-tripped code, but more accurate to figure out what
is going on.</source>
          <target state="translated">Сложнее читать,чем круглый код,но более точный,чтобы понять,что происходит.</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">Лицензия:</target>
        </trans-unit>
        <trans-unit id="aec37af295938682a676824da787c0a4755fd0e5" translate="yes" xml:space="preserve">
          <source>Modified AST doesn&amp;rsquo;t need linenumbers, ctx, etc. or otherwise
be directly compileable for the round-trip to work.</source>
          <target state="translated">Модифицированный AST не требует номеров строк, ctx и т. Д. Или иным образом может быть напрямую скомпилирован для работы двустороннего цикла.</target>
        </trans-unit>
        <trans-unit id="3ec7576ed275f489deb967b40c1ff9a2b3b4c981" translate="yes" xml:space="preserve">
          <source>Non-recursive treewalk</source>
          <target state="translated">Невозвратный пешком</target>
        </trans-unit>
        <trans-unit id="46c1aeda14c2d947a9c9a02ddfb0528e25559b2d" translate="yes" xml:space="preserve">
          <source>Other derivatives of Armin&amp;rsquo;s code are floating around, and typically
have fixes for a few corner cases that happened to be noticed by the
maintainers, but most of them have not been tested as thoroughly as
astor.  One exception may be the version of codegen
&lt;a href=&quot;https://github.com/CensoredUsername/codegen&quot;&gt;maintained at github by CensoredUsername&lt;/a&gt;.  This has been tested
to work properly on Python 2.7 using astor&amp;rsquo;s test suite, and, as it
is a single source file, it may be easier to drop into some applications
that do not require astor&amp;rsquo;s other features or Python 3.x compatibility.</source>
          <target state="translated">Есть и другие производные от кода Armin, которые, как правило, содержат исправления для некоторых критических случаев, которые были замечены разработчиками, но большинство из них не было протестировано так тщательно, как astor. Единственным исключением может быть версия codegen, &lt;a href=&quot;https://github.com/CensoredUsername/codegen&quot;&gt;поддерживаемая на github компанией CensoredUsername&lt;/a&gt; . Это было протестировано для правильной работы на Python 2.7 с использованием набора тестов Astor, и, поскольку это единственный исходный файл, может быть проще добавить его в некоторые приложения, которые не требуют других функций Astor или совместимости с Python 3.x.</target>
        </trans-unit>
        <trans-unit id="987643832c62d765a5a002bbfb3d522cdefd5190" translate="yes" xml:space="preserve">
          <source>PyPI:</source>
          <target state="translated">PyPI:</target>
        </trans-unit>
        <trans-unit id="2228de3ecafe59358ed749175a7a3119f2cf860a" translate="yes" xml:space="preserve">
          <source>Read/rewrite/write Python ASTs</source>
          <target state="translated">Чтение/Пишите/пишите Python ASTs</target>
        </trans-unit>
        <trans-unit id="6e0d4f3e50e1876b4fd4ee07f09047a074974503" translate="yes" xml:space="preserve">
          <source>Round-trip an AST back to Python &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;:</source>
          <target state="translated">Возврат AST к Python &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="63331f9cbea9fa2605e9dcae08a8bbce148c8905" translate="yes" xml:space="preserve">
          <source>Sometimes you want a recursive treewalk (and astor supports that, starting
at any node on the tree), but sometimes you don&amp;rsquo;t need to do that.  astor
doesn&amp;rsquo;t require you to explicitly visit sub-nodes unless you want to:</source>
          <target state="translated">Иногда вам нужен рекурсивный обход деревьев (и Astor поддерживает это, начиная с любого узла дерева), но иногда вам не нужно этого делать. astor не требует от вас явного посещения подузлов, если вы не хотите:</target>
        </trans-unit>
        <trans-unit id="922acd282cc0f3bb9e6dffb4c4b3c4fe33787051" translate="yes" xml:space="preserve">
          <source>Source:</source>
          <target state="translated">Источник:</target>
        </trans-unit>
        <trans-unit id="fa96c4a289e2ce09c351f9ef385d64354303a049" translate="yes" xml:space="preserve">
          <source>The decompilation back to Python is based on code originally written
by Armin Ronacher.  Armin&amp;rsquo;s code was well-structured, but failed on
some obscure corner cases of the Python language (and even more corner
cases when the AST changed on different versions of Python), and its
output arguably had cosmetic issues &amp;ndash; for example, it produced
parentheses even in some cases where they were not needed, to
avoid having to reason about precedence.</source>
          <target state="translated">Декомпиляция обратно в Python основана на коде, изначально написанном Армином Ронахером. Код Армина был хорошо структурирован, но терпел неудачу в некоторых неясных угловых случаях языка Python (и даже в большем количестве угловых случаев, когда AST изменялся в разных версиях Python), и его вывод, возможно, имел косметические проблемы - например, он давал даже круглые скобки. в некоторых случаях, когда они не нужны, чтобы не приходилось рассуждать о приоритете.</target>
        </trans-unit>
        <trans-unit id="4a3191718f8827b4d4eda5f0e20c5611ecfff025" translate="yes" xml:space="preserve">
          <source>There are some other similar libraries, but astor focuses on the following areas:</source>
          <target state="translated">Существуют и другие аналогичные библиотеки,но astor фокусируется на следующих областях:</target>
        </trans-unit>
        <trans-unit id="f831ffa820e2894229f0ea9a781b96e384326429" translate="yes" xml:space="preserve">
          <source>Write functions to access the tree based on object names and/or attribute names</source>
          <target state="translated">Функции записи для доступа к дереву на основе имён объектов и/или атрибутов</target>
        </trans-unit>
        <trans-unit id="b82f1bc66eed63c2e85aeb658ce0b34382f889d0" translate="yes" xml:space="preserve">
          <source>You can add code that executes after a node&amp;rsquo;s children are visited, and/or</source>
          <target state="translated">Вы можете добавить код, который выполняется после посещения дочерних узлов и / или</target>
        </trans-unit>
        <trans-unit id="98b431a61ca3c1dc62b70f80cb6688bc31c516d6" translate="yes" xml:space="preserve">
          <source>You can add code that executes and keeps the node&amp;rsquo;s children from being
visited (and optionally visit them yourself via a recursive call)</source>
          <target state="translated">Вы можете добавить код, который выполняет и предотвращает посещение дочерних узлов узла (и при желании посещать их самостоятельно с помощью рекурсивного вызова)</target>
        </trans-unit>
        <trans-unit id="4f8050928f91117105da983328482b2429f5cac8" translate="yes" xml:space="preserve">
          <source>You can add code that executes before a node&amp;rsquo;s children are visited, and/or</source>
          <target state="translated">Вы можете добавить код, который выполняется до посещения дочерних узлов узла, и / или</target>
        </trans-unit>
        <trans-unit id="ada9ccf3f8d6e919422d077f8ec677e05976ccf5" translate="yes" xml:space="preserve">
          <source>astor is designed to allow easy manipulation of Python source via the AST.</source>
          <target state="translated">astor разработан для облегчения манипуляций с источником Python через AST.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
