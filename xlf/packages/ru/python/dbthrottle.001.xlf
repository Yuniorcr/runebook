<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/dbthrottle/">
    <body>
      <group id="dbthrottle">
        <trans-unit id="00c6f7680e7e857db9d94c837e54c929c56a20f0" translate="yes" xml:space="preserve">
          <source># dbThrottle
Python Class to run code with consideration to DB load.</source>
          <target state="translated"># dbThrottle Класс Python для запуска кода с учетом загрузки БД.</target>
        </trans-unit>
        <trans-unit id="9c5b5a1945c61fcf840738f18efb9c0cc72dd999" translate="yes" xml:space="preserve">
          <source>## What
A, still early, python module, which introduces a functional type to complete a task or continiously run an operation, taking database load and similar metrics into account.
The code will work with any metric you want to define, but we&amp;rsquo;ve included replia lag an open threads/connections as default metrics for mssql, mysql, postgresql, and oracle.</source>
          <target state="translated">## What A, еще ранний, модуль python, который вводит функциональный тип для выполнения задачи или непрерывного выполнения операции с учетом загрузки базы данных и аналогичных показателей. Код будет работать с любой метрикой, которую вы хотите определить, но мы включили задержку реплики и открытые потоки / соединения в качестве метрик по умолчанию для mssql, mysql, postgresql и oracle.</target>
        </trans-unit>
        <trans-unit id="14caf52e350b3e7bc478214b95572c9c88f46015" translate="yes" xml:space="preserve">
          <source>## Who
Ryan Birmingham, under GPL3</source>
          <target state="translated">## Кто Райан Бирмингем, под GPL3</target>
        </trans-unit>
        <trans-unit id="c74e6c6c84a577cc688902e60fa3501507706034" translate="yes" xml:space="preserve">
          <source>## Why
Throttling code to work under the constraints of a server makes sense in certain situations, especially when replica lag comes into play. This project hopes to simplify acting on this consideration.</source>
          <target state="translated">## Почему дросселирование кода для работы с ограничениями сервера имеет смысл в определенных ситуациях, особенно когда возникает задержка реплики. Этот проект надеется упростить рассмотрение этого соображения.</target>
        </trans-unit>
        <trans-unit id="86c549047d07ce642aae8d25424676fb56c8550f" translate="yes" xml:space="preserve">
          <source>Python Class to run code with consideration to DB load.</source>
          <target state="translated">Python Class для выполнения кода с учетом загрузки БД.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
