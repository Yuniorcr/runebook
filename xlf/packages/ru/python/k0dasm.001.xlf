<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/k0dasm/">
    <body>
      <group id="k0dasm">
        <trans-unit id="a36abd240d4fced49d5e073136718ece787d8d3c" translate="yes" xml:space="preserve">
          <source>) will still need to be resolved manually.</source>
          <target state="translated">) все равно придется решать вручную.</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Автор</target>
        </trans-unit>
        <trans-unit id="92e5f3778e6f41bd90cfde8d9ba37c348715ef61" translate="yes" xml:space="preserve">
          <source>Code / Data Separation.  Starting from the vectors at the bottom of memory, k0dasm uses recursive traversal disassembly to separate code from data.  This automates much of the disassembly process but indirect jumps (</source>
          <target state="translated">Код/Разделение данных.Начиная с векторов внизу памяти,k0dasm использует рекурсивную обходную разборку для отделения кода от данных.Это автоматизирует большую часть процесса разборки,но косвенные прыжки (</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Особенности</target>
        </trans-unit>
        <trans-unit id="e99f3ac80b2b2350f2e51853d26bb1447dd0afda" translate="yes" xml:space="preserve">
          <source>Identical Reassembly.  The assembly language output of k0dasm will assemble to a bit-for-bit exact copy of the original binary using as78k0.  This has been tested using several real firmware binaries.</source>
          <target state="translated">Идентичная сборка.Вывод k0dasm на языке ассемблера будет собран в битовую точную копию оригинального двоичного файла,используя as78k0.Это было протестировано с использованием нескольких реальных двоичных прошивок.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="ef794089d65c29260193d1171143c513c37dd853" translate="yes" xml:space="preserve">
          <source>Mike Naberezny</source>
          <target state="translated">Майк Набережный</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Обзор</target>
        </trans-unit>
        <trans-unit id="184aae6f77608718224c424e74717a6de967207d" translate="yes" xml:space="preserve">
          <source>Renesas (NEC) 78K0 disassembler</source>
          <target state="translated">демонтажник Renesas (NEC)78K0</target>
        </trans-unit>
        <trans-unit id="c611e7531edc5ad06854e7aa8c370fa7c7df38ae" translate="yes" xml:space="preserve">
          <source>Symbol Generation.  k0dasm tries not to write hardcoded addresses in the output when possible.  It will automatically add symbols for hardware registers and vectors, other memory locations used, and will add labels for branches and subroutines.</source>
          <target state="translated">Генерация символов.k0dasm пытается не записывать жестко закодированные адреса в выходные данные,когда это возможно.Он будет автоматически добавлять символы для аппаратных регистров и векторов,других используемых ячеек памяти,и добавлять метки для ветвей и подпрограмм.</target>
        </trans-unit>
        <trans-unit id="887bd25b814c2ea33c2020e1ae14e08e3e41ab2c" translate="yes" xml:space="preserve">
          <source>The file is assumed to be a ROM image that should be aligned to the bottom of memory.  For example, if a 32K file is given, k0dasm will assume the image should be located at 0x0000-0x7FFF.  After loading the image, the disassembler reads the vectors and starts tracing instructions from their targets.</source>
          <target state="translated">Предполагается,что файл представляет собой образ ПЗУ,который должен быть выровнен по нижней части памяти.Например,если задан файл 32K,то k0dasm будет предполагать,что изображение должно быть расположено на уровне 0x0000-0x7FFF.После загрузки образа демонтажник считывает векторы и начинает трассировку по их целям.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="83889f5663f7f860486c3e9bfe18177eff6db2cd" translate="yes" xml:space="preserve">
          <source>br ax</source>
          <target state="translated">полуось</target>
        </trans-unit>
        <trans-unit id="5839dc65065f115602262aa635fbf67791899625" translate="yes" xml:space="preserve">
          <source>k0dasm</source>
          <target state="translated">00-ти балл</target>
        </trans-unit>
        <trans-unit id="9e53567246f36fc5e20142d5b92badeead00b4a5" translate="yes" xml:space="preserve">
          <source>k0dasm accepts a plain binary file as input:</source>
          <target state="translated">k0dasm принимает на вход простой двоичный файл:</target>
        </trans-unit>
        <trans-unit id="adaa751be62a63905f2aad7b6a93a8813858eb2b" translate="yes" xml:space="preserve">
          <source>k0dasm is a disassembler for NEC 78K0 binaries that generates output compatible with the &lt;a href=&quot;http://shop-pdp.net/ashtml/as78k0.htm&quot;&gt;as78k0&lt;/a&gt; assembler.  It can be used to disassemble firmware for many 8-bit NEC 78K0 microcontrollers.  Note that NEC has several microcontroller families with similar names, such as 78K0S, that use different instruction sets.  These are not supported.</source>
          <target state="translated">k0dasm - это дизассемблер для двоичных файлов NEC 78K0, который генерирует выходные данные, совместимые с ассемблером &lt;a href=&quot;http://shop-pdp.net/ashtml/as78k0.htm&quot;&gt;as78k0&lt;/a&gt; . Его можно использовать для разборки прошивки многих 8-битных микроконтроллеров NEC 78K0. Обратите внимание, что NEC имеет несколько семейств микроконтроллеров с похожими именами, например 78K0S, которые используют разные наборы инструкций. Они не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="c5d0b1d900eca0713b3f5d6e97a3ee2a22b52e92" translate="yes" xml:space="preserve">
          <source>k0dasm is written in Python and requires Python 3.4 or later.  Packages are &lt;a href=&quot;https://pypi.org/project/k0dasm/&quot;&gt;available&lt;/a&gt; on the Python Package Index (PyPI).  You can download them from there or you can use</source>
          <target state="translated">k0dasm написан на Python и требует Python 3.4 или новее. Пакеты &lt;a href=&quot;https://pypi.org/project/k0dasm/&quot;&gt;доступны&lt;/a&gt; в индексе пакетов Python (PyPI). Вы можете скачать их оттуда или использовать</target>
        </trans-unit>
        <trans-unit id="2a2a6fadee5f4ff99025989aec099e65c85077c0" translate="yes" xml:space="preserve">
          <source>k0dasm was developed to disassemble the firmware of the &lt;a href=&quot;https://github.com/mnaberez/vwradio&quot;&gt;Volkswagen Premium V&lt;/a&gt; car radios made by Delco.  These radios use the undocumented NEC &amp;micro;PD78F0831Y microcontroller, which is similar to the &lt;a href=&quot;https://web.archive.org/web/20180328161019/https://www.renesas.com/en-us/doc/DocumentServer/021/U13892EJ2V0UM00.pdf&quot;&gt;&amp;micro;PD78F0833Y&lt;/a&gt;.  A companion program, &lt;a href=&quot;https://github.com/mnaberez/k0emu&quot;&gt;k0emu&lt;/a&gt;, is a 78K0 emulator developed for the same project.</source>
          <target state="translated">k0dasm был разработан для разборки прошивки автомагнитол &lt;a href=&quot;https://github.com/mnaberez/vwradio&quot;&gt;Volkswagen Premium V&lt;/a&gt; производства Delco. Эти радиостанции используют недокументированный микроконтроллер NEC &amp;micro;PD78F0831Y, который похож на &lt;a href=&quot;https://web.archive.org/web/20180328161019/https://www.renesas.com/en-us/doc/DocumentServer/021/U13892EJ2V0UM00.pdf&quot;&gt;&amp;micro;PD78F0833Y&lt;/a&gt; . Сопутствующая программа, &lt;a href=&quot;https://github.com/mnaberez/k0emu&quot;&gt;k0emu&lt;/a&gt; , представляет собой эмулятор 78K0, разработанный для того же проекта.</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">пищать</target>
        </trans-unit>
        <trans-unit id="4fdadaadb6acd13e89b1e933e596f13897f901f6" translate="yes" xml:space="preserve">
          <source>to automatically install or upgrade</source>
          <target state="translated">для автоматической установки или обновления</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
