<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/fudge/">
    <body>
      <group id="fudge">
        <trans-unit id="5eac10d955e77365c4b38c49f908818f3411a05e" translate="yes" xml:space="preserve">
          <source>Complete documentation is available at &lt;a href=&quot;https://fudge.readthedocs.org/en/latest/&quot;&gt;https://fudge.readthedocs.org/en/latest/&lt;/a&gt;</source>
          <target state="translated">Полная документация доступна по адресу &lt;a href=&quot;https://fudge.readthedocs.org/en/latest/&quot;&gt;https://fudge.readthedocs.org/en/latest/.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c13afbf40129ff3222adbcddcbf4bdae54002f2c" translate="yes" xml:space="preserve">
          <source>Fudge is a Python module for using fake objects (mocks and stubs) to test real ones.</source>
          <target state="translated">Fudge-модуль Python,предназначенный для использования поддельных объектов (издевательств и корешков)для тестирования реальных.</target>
        </trans-unit>
        <trans-unit id="979e43004c2ac2a8ab821edf85d630614f648981" translate="yes" xml:space="preserve">
          <source>Here is a quick preview of how you can test code that sends
email without actually sending email:</source>
          <target state="translated">Вот краткий обзор того,как можно протестировать код,который отправляет электронную почту без фактической отправки электронной почты:</target>
        </trans-unit>
        <trans-unit id="fb1bb391a7eba76e0330fd54ebd9318823b1d136" translate="yes" xml:space="preserve">
          <source>In readable Python code, you declare what methods are available on your fake and
how they should be called. Then you inject that into your application and start
testing. This declarative approach means you don&amp;rsquo;t have to record and playback
actions and you don&amp;rsquo;t have to inspect your fakes after running code. If the fake
object was used incorrectly then you&amp;rsquo;ll see an informative exception message
with a traceback that points to the culprit.</source>
          <target state="translated">В читаемом коде Python вы объявляете, какие методы доступны на вашей подделке и как их следует вызывать. Затем вы вводите это в свое приложение и начинаете тестирование. Этот декларативный подход означает, что вам не нужно записывать и воспроизводить действия, и вам не нужно проверять свои подделки после запуска кода. Если поддельный объект был использован неправильно, вы увидите информативное сообщение об исключении с обратной связью, указывающей на виновника.</target>
        </trans-unit>
        <trans-unit id="2f680878f880516cd458d6920ff922438d656c03" translate="yes" xml:space="preserve">
          <source>Replace real objects with fakes (mocks, stubs, etc) while testing.</source>
          <target state="translated">Заменяйте реальные объекты подделками (издевательствами,корешками и т.д.)при тестировании.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
