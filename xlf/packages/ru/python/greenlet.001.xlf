<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/greenlet/">
    <body>
      <group id="greenlet">
        <trans-unit id="adaf11e77976b1db3da41bdce39ee80caf89a041" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;greenlet&amp;rdquo;, on the other hand, is a still more primitive notion of
micro-thread with no implicit scheduling; coroutines, in other
words. This is useful when you want to control exactly when your code
runs. You can build custom scheduled micro-threads on top of greenlet;
however, it seems that greenlets are useful on their own as a way to
make advanced control flow structures. For example, we can recreate
generators; the difference with Python&amp;rsquo;s own generators is that our
generators can call nested functions and the nested functions can
yield values too. Additionally, you don&amp;rsquo;t need a &amp;ldquo;yield&amp;rdquo; keyword. See
the example in tests/test_generator.py.</source>
          <target state="translated">С другой стороны, &amp;laquo;гринлет&amp;raquo; - это еще более примитивное понятие микропотока без неявного планирования; Другими словами, сопрограммы. Это полезно, когда вы хотите точно контролировать выполнение кода. Вы можете создавать собственные запланированные микропотоки поверх гринлета; однако кажется, что гринлеты полезны сами по себе как способ создания расширенных структур потока управления. Например, мы можем воссоздать генераторы; разница с собственными генераторами Python заключается в том, что наши генераторы могут вызывать вложенные функции, а вложенные функции также могут выдавать значения. Кроме того, вам не нужно ключевое слово &amp;laquo;yield&amp;raquo;. См. Пример в tests / test_generator.py.</target>
        </trans-unit>
        <trans-unit id="60014bf21723832fcd770695f34a2ac6aec40c31" translate="yes" xml:space="preserve">
          <source>Concurrence</source>
          <target state="translated">Согласие</target>
        </trans-unit>
        <trans-unit id="7520bc16833b40c80f4836415af1e67e592d9eb1" translate="yes" xml:space="preserve">
          <source>Documentation is available on readthedocs.org:
&lt;a href=&quot;https://greenlet.readthedocs.io&quot;&gt;https://greenlet.readthedocs.io&lt;/a&gt;</source>
          <target state="translated">Документация доступна на readthedocs.org: &lt;a href=&quot;https://greenlet.readthedocs.io&quot;&gt;https://greenlet.readthedocs.io&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9da9768d496d27402246e22f29b0761f331bfbc" translate="yes" xml:space="preserve">
          <source>Eventlet</source>
          <target state="translated">Событие</target>
        </trans-unit>
        <trans-unit id="7efd500ce749859ca01e5cc53af1010721d004f0" translate="yes" xml:space="preserve">
          <source>Getting Greenlet</source>
          <target state="translated">Получение Гринлета</target>
        </trans-unit>
        <trans-unit id="17c6bf64bf960c6bdea9f0d103dff20d00bac154" translate="yes" xml:space="preserve">
          <source>Gevent</source>
          <target state="translated">Gevent</target>
        </trans-unit>
        <trans-unit id="8acb83f8c59e6a6e068dd420a5d0211d89e1d7f1" translate="yes" xml:space="preserve">
          <source>Greenlets are lightweight coroutines for in-process concurrent
programming.</source>
          <target state="translated">Гринулеты-легкие коридоры для параллельного программирования в процессе работы.</target>
        </trans-unit>
        <trans-unit id="f27faa7a89962aeacdd62df8f836120e07b78ab3" translate="yes" xml:space="preserve">
          <source>Greenlets are provided as a C extension module for the regular
unmodified interpreter.</source>
          <target state="translated">Гринлеты предоставляются как модуль расширения на языке С для обычного немодифицированного переводчика.</target>
        </trans-unit>
        <trans-unit id="e40cbbce7df1c68eee0b19a19ffb661a38fea3fa" translate="yes" xml:space="preserve">
          <source>Lightweight in-process concurrent programming</source>
          <target state="translated">Легкое параллельное программирование в процессе</target>
        </trans-unit>
        <trans-unit id="e7ec99eb4b2a357ad2c0bdfbf1b28a834e064c15" translate="yes" xml:space="preserve">
          <source>Source code archives and windows installers are available on the
python package index at &lt;a href=&quot;https://pypi.python.org/pypi/greenlet&quot;&gt;https://pypi.python.org/pypi/greenlet&lt;/a&gt;</source>
          <target state="translated">Архивы исходного кода и установщики Windows доступны в индексе пакетов Python по адресу &lt;a href=&quot;https://pypi.python.org/pypi/greenlet&quot;&gt;https://pypi.python.org/pypi/greenlet.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2dc5153f8439f3cb766c2df9f108c08510ba3b0" translate="yes" xml:space="preserve">
          <source>The easiest way to get Greenlet is to install it with pip or
easy_install:</source>
          <target state="translated">Самый простой способ получить Гринлета-установить его с помощью pip или easy_install:</target>
        </trans-unit>
        <trans-unit id="2deb206c5b8f85bdbe71c431cb50181956dfffdf" translate="yes" xml:space="preserve">
          <source>The greenlet package is a spin-off of Stackless, a version of CPython
that supports micro-threads called &amp;ldquo;tasklets&amp;rdquo;. Tasklets run
pseudo-concurrently (typically in a single or a few OS-level threads)
and are synchronized with data exchanges on &amp;ldquo;channels&amp;rdquo;.</source>
          <target state="translated">Пакет greenlet является побочным продуктом Stackless, версии CPython, которая поддерживает микропотоки, называемые &amp;laquo;тасклетами&amp;raquo;. Тасклеты выполняются псевдо-одновременно (обычно в одном или нескольких потоках уровня ОС) и синхронизируются с обменом данными по &amp;laquo;каналам&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9420aa3967b9c02613ac42e1885a5577856eaefe" translate="yes" xml:space="preserve">
          <source>The source code repository is hosted on github:
&lt;a href=&quot;https://github.com/python-greenlet/greenlet&quot;&gt;https://github.com/python-greenlet/greenlet&lt;/a&gt;</source>
          <target state="translated">Репозиторий исходного кода размещен на github: &lt;a href=&quot;https://github.com/python-greenlet/greenlet&quot;&gt;https://github.com/python-greenlet/greenlet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb772fb5d10a97b18252ef57c9235142ecf5d922" translate="yes" xml:space="preserve">
          <source>There are several libraries that use Greenlet as a more flexible
alternative to Python&amp;rsquo;s built in coroutine support:</source>
          <target state="translated">Есть несколько библиотек, которые используют Greenlet как более гибкую альтернативу встроенной в Python поддержке сопрограмм:</target>
        </trans-unit>
        <trans-unit id="aa78f0f42358f5844d68bc1f02e3f2d268741a61" translate="yes" xml:space="preserve">
          <source>Who is using Greenlet?</source>
          <target state="translated">Кто использует Гринлета?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
