<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/func-timeout/">
    <body>
      <group id="func-timeout">
        <trans-unit id="feee6a54136f547b5b223ea01ea22ddd16752062" translate="yes" xml:space="preserve">
          <source># Code here</source>
          <target state="translated"># Код здесь</target>
        </trans-unit>
        <trans-unit id="e68023cd09f756d57b4d6e241204e2ab723be088" translate="yes" xml:space="preserve">
          <source># Handle any exceptions that doit might raise here</source>
          <target state="translated"># Обработка любых исключений, которые может вызвать doit здесь</target>
        </trans-unit>
        <trans-unit id="a36178640e22cbfc2d65c319364d9167eaafd809" translate="yes" xml:space="preserve">
          <source># Uncomment next line to start thread in &amp;ldquo;daemon mode&amp;rdquo; &amp;ndash; i.e. will terminate/join automatically upon main thread exit</source>
          <target state="translated"># Раскомментируйте следующую строку, чтобы запустить поток в &amp;laquo;режиме демона&amp;raquo; - т.е. будет автоматически завершаться / присоединяться при выходе из основного потока</target>
        </trans-unit>
        <trans-unit id="275eeebecf558e4aea38b60e24254c43efbe1b41" translate="yes" xml:space="preserve">
          <source>#myThread.daemon = True</source>
          <target state="translated"># myThread.daemon = Истина</target>
        </trans-unit>
        <trans-unit id="839e4a2006b278a93c4dc0f1936567078302c3f3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;</source>
          <target state="translated">&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="d2187e63645ef4bb3f26e2fb34dce39becd241df" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;&amp;rsquo;&amp;rsquo;</source>
          <target state="translated">'' '</target>
        </trans-unit>
        <trans-unit id="b8b3c85833b691944d6333b2a187ace95545f9a1" translate="yes" xml:space="preserve">
          <source>* No argument - Retry same args, same function, same timeout</source>
          <target state="translated">* Без аргумента - повторить попытку с теми же аргументами, той же функцией, с тем же таймаутом</target>
        </trans-unit>
        <trans-unit id="23aa718e7e7ad48c68768019e7e4ec2ee93b2a54" translate="yes" xml:space="preserve">
          <source>* None - Retry same args, same function, no timeout</source>
          <target state="translated">* Нет - повторить те же аргументы, ту же функцию, без тайм-аута</target>
        </trans-unit>
        <trans-unit id="c10c25328ef4d57b12a00c84012aab2456cc9f3b" translate="yes" xml:space="preserve">
          <source>* Number argument - Retry same args, same function, provided timeout</source>
          <target state="translated">* Числовой аргумент - повторить те же аргументы, ту же функцию, при условии тайм-аута</target>
        </trans-unit>
        <trans-unit id="309927097440c7f76f70fcb6b11e98329ae23db2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As a Parent Class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Как родительский класс&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f8aa0ed92b246136317387a1baf277f343cdbf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Direct Thread To Execute A Function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Прямой поток для выполнения функции&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пример:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce3f4a409dc0c67054a7e806ad3eecf69f742f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;пример&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb48907b580ebd035cde20253b39011836f211b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes on Exception Type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Примечания к типу исключения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c99b14cc2a1e2f3a8efed4682ec12293b3494c36" translate="yes" xml:space="preserve">
          <source>@func_set_timeout(2.5)</source>
          <target state="translated">@func_set_timeout (2.5)</target>
        </trans-unit>
        <trans-unit id="c7a0970f989fa5ef2b54661eda5c630da4545bc6" translate="yes" xml:space="preserve">
          <source>@param args    &amp;lt;tuple&amp;gt; - Any ordered arguments to pass to the function</source>
          <target state="translated">@param args &amp;lt;tuple&amp;gt; - любые упорядоченные аргументы для передачи функции</target>
        </trans-unit>
        <trans-unit id="4ea60d53ee1449ad95b704a34f51fb8a3d90d9ef" translate="yes" xml:space="preserve">
          <source>@param exception &amp;lt;Exception type&amp;gt; - Exception to throw. Likely, you want to use something</source>
          <target state="translated">@param exception &amp;lt;Тип исключения&amp;gt; - исключение, которое нужно выбросить. Скорее всего, вы хотите что-то использовать</target>
        </trans-unit>
        <trans-unit id="6cb16a85fff57f4e4d38262597e41a2f59d90fb5" translate="yes" xml:space="preserve">
          <source>@param func &amp;lt;function&amp;gt; - The function to call</source>
          <target state="translated">@param func &amp;lt;функция&amp;gt; - функция для вызова</target>
        </trans-unit>
        <trans-unit id="35390e8a89b0942498fae834d5992b00f625480f" translate="yes" xml:space="preserve">
          <source>@param kwargs  &amp;lt;dict/None&amp;gt; - Keyword arguments to pass to the function.</source>
          <target state="translated">@param kwargs &amp;lt;dict / None&amp;gt; - аргументы ключевого слова для передачи функции.</target>
        </trans-unit>
        <trans-unit id="ef18d87a32f160cb292de0290a036a455e7cc431" translate="yes" xml:space="preserve">
          <source>@param raiseEvery &amp;lt;float&amp;gt; Default 2.0 - We will keep raising this exception every #raiseEvery seconds,</source>
          <target state="translated">@param raiseEvery &amp;lt;float&amp;gt; По умолчанию 2.0 - мы будем вызывать это исключение каждые #raiseEvery секунд,</target>
        </trans-unit>
        <trans-unit id="50b7eb667bb071740b4afff9f4b8729d4327662a" translate="yes" xml:space="preserve">
          <source>@param timeout &amp;lt;float&amp;gt; - Maximum number of seconds to run #func# before terminating</source>
          <target state="translated">@param timeout &amp;lt;float&amp;gt; - Максимальное количество секунд для запуска # func # перед завершением</target>
        </trans-unit>
        <trans-unit id="b0c07ea97f78c45cc7ea0926ab2640e6c40d98af" translate="yes" xml:space="preserve">
          <source>@raises - FunctionTimedOut if #timeout# is exceeded, otherwise anything #func# could raise will be raised</source>
          <target state="translated">@raises - FunctionTimedOut, если # timeout # превышен, в противном случае все, что может вызвать # func #, будет поднято</target>
        </trans-unit>
        <trans-unit id="0659ba6686518e2a7ce04bb5f4309a7d923045b6" translate="yes" xml:space="preserve">
          <source>@return &amp;lt;None&amp;gt;</source>
          <target state="translated">@return &amp;lt;Нет&amp;gt;</target>
        </trans-unit>
        <trans-unit id="467ba344eec003a5ff0fc569fc2a10f5a561174b" translate="yes" xml:space="preserve">
          <source>@return - The return value that #func# gives</source>
          <target state="translated">@return - возвращаемое значение, которое дает # func #</target>
        </trans-unit>
        <trans-unit id="100d77de8173ea5e368d9c0cb6d295e8c4cee7b5" translate="yes" xml:space="preserve">
          <source>Alternatively, you can instantiate StoppableThread directly and pass the &amp;ldquo;target&amp;rdquo;, &amp;ldquo;args&amp;rdquo;, and &amp;ldquo;kwargs&amp;rdquo; arguments to the constructor</source>
          <target state="translated">Кроме того, вы можете создать экземпляр StoppableThread напрямую и передать аргументы &amp;laquo;target&amp;raquo;, &amp;laquo;args&amp;raquo; и &amp;laquo;kwargs&amp;raquo; конструктору.</target>
        </trans-unit>
        <trans-unit id="8bff82bd190b9c2d124fa8b1c94f00ff3a5c15b1" translate="yes" xml:space="preserve">
          <source>BaseException.__init__(self, &amp;lsquo;Server is shutting down&amp;rsquo;)</source>
          <target state="translated">BaseException .__ init __ (self, 'Сервер выключается')</target>
        </trans-unit>
        <trans-unit id="54a09183a92bb78d8025aac71327b4f225b065a5" translate="yes" xml:space="preserve">
          <source>ChangeLog can be found at &lt;a href=&quot;https://raw.githubusercontent.com/kata198/func_timeout/master/ChangeLog&quot;&gt;https://raw.githubusercontent.com/kata198/func_timeout/master/ChangeLog&lt;/a&gt;</source>
          <target state="translated">Журнал изменений можно найти по адресу &lt;a href=&quot;https://raw.githubusercontent.com/kata198/func_timeout/master/ChangeLog&quot;&gt;https://raw.githubusercontent.com/kata198/func_timeout/master/ChangeLog.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f10e3d40f7b6fe8af9732eb3b3b2f1718b656d2" translate="yes" xml:space="preserve">
          <source>Consider using a custom exception type which extends BaseException, which you can then use to do basic cleanup ( flush any open files, etc. ).</source>
          <target state="translated">Рассмотрим возможность использования пользовательского типа исключения,расширяющего BaseException,который затем можно использовать для выполнения базовой очистки (промывки любых открытых файлов и т.д.).</target>
        </trans-unit>
        <trans-unit id="cb5e98805e8916222733f2479eaf75dfa868942d" translate="yes" xml:space="preserve">
          <source>Exception raised if the function times out.</source>
          <target state="translated">Исключение увеличено,если функция отключена.</target>
        </trans-unit>
        <trans-unit id="d6cd60a74a862ce4794d712691e5036e182599bf" translate="yes" xml:space="preserve">
          <source>Find the latest pydoc at &lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&quot;&gt;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&lt;/a&gt;?vers=4.3.5 .</source>
          <target state="translated">Найдите последнюю версию pydoc по адресу &lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&quot;&gt;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&lt;/a&gt; ? Vers = 4.3.5.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="9bd21f858ad515e347536489b8e6aa92b8321745" translate="yes" xml:space="preserve">
          <source>Function Timeout</source>
          <target state="translated">Тайм-аут функции</target>
        </trans-unit>
        <trans-unit id="38135db3327312ca8905b3043a3204cddd31c084" translate="yes" xml:space="preserve">
          <source>FunctionTimedOut</source>
          <target state="translated">FunctionTimedOut</target>
        </trans-unit>
        <trans-unit id="8888b0b6ee750b5c3fd635edd38d064a0d74cf44" translate="yes" xml:space="preserve">
          <source>Has a &amp;ldquo;retry&amp;rdquo; method which takes the following arguments:</source>
          <target state="translated">Имеет метод &amp;laquo;повтора&amp;raquo;, который принимает следующие аргументы:</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">Как это работает</target>
        </trans-unit>
        <trans-unit id="02ac01fb0cfd279b39ed474d0bdcc7cd3414f7f3" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;ve tested func_timeout with python 2.7, 3.4, 3.5, 3.6, 3.7. It should work on other versions as well.</source>
          <target state="translated">Я тестировал func_timeout с python 2.7, 3.4, 3.5, 3.6, 3.7. Он должен работать и на других версиях.</target>
        </trans-unit>
        <trans-unit id="09fffbdcf1dd4f28d31baa327756e64b7acdd3f7" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;allowOverride&amp;rdquo; is present, an optional keyword argument is added to the wrapped function, &amp;lsquo;forceTimeout&amp;rsquo;. When provided, this will override the timeout used on this function.</source>
          <target state="translated">Если присутствует &amp;laquo;allowOverride&amp;raquo;, к обернутой функции добавляется необязательный аргумент с ключевым словом &amp;laquo;forceTimeout&amp;raquo;. Если предоставляется, это переопределит тайм-аут, используемый для этой функции.</target>
        </trans-unit>
        <trans-unit id="bbdf149491f140acb5ae1179d2fdb2cb2326a377" translate="yes" xml:space="preserve">
          <source>If the timeout has exceeded, the &amp;ldquo;FunctionTimedOut&amp;rdquo; exception will be raised in the context of the function being called, as well as from the context of &amp;ldquo;func_timeout&amp;rdquo;. You should have your function catch the &amp;ldquo;FunctionTimedOut&amp;rdquo; exception and exit cleanly if possible. Every 2 seconds until your function is terminated, it will continue to raise FunctionTimedOut. The terminating of the timed-out function happens in the context of the thread and will not block main execution.</source>
          <target state="translated">Если время ожидания истекло, исключение &amp;laquo;FunctionTimedOut&amp;raquo; будет вызвано в контексте вызываемой функции, а также в контексте &amp;laquo;func_timeout&amp;raquo;. Ваша функция должна улавливать исключение &amp;laquo;FunctionTimedOut&amp;raquo; и, если возможно, корректно завершать работу. Каждые 2 секунды, пока ваша функция не будет завершена, она будет продолжать вызывать FunctionTimedOut. Завершение функции тайм-аута происходит в контексте потока и не блокирует основное выполнение.</target>
        </trans-unit>
        <trans-unit id="aa7a109d8a92b592ba887b0b4d9d5999c9e5998a" translate="yes" xml:space="preserve">
          <source>If there is a return or an exception raised, it will be returned/raised as normal.</source>
          <target state="translated">В случае возврата или исключения,он будет возвращен/поднят в обычном порядке.</target>
        </trans-unit>
        <trans-unit id="bd633cce19e2b0f7922432032989a632f946529c" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t avoid such code (third-party lib?) you can set the &amp;ldquo;repeatEvery&amp;rdquo; to a very very low number (like .00001 ), so hopefully it will raise, go to the except clause, and then raise again before &amp;ldquo;continue&amp;rdquo; is hit.</source>
          <target state="translated">Если вы не можете избежать такого кода (сторонняя библиотека?), Вы можете установить &amp;laquo;repeatEvery&amp;raquo; на очень-очень низкое число (например, .00001), так что, надеюсь, он повысится, перейдите к предложению except, а затем снова увеличьте перед нажатием &amp;laquo;продолжить&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c34ff3efd6f9ed87c63cf8fb1e301439741632ae" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re calling third-party code you can&amp;rsquo;t control, which catches BaseException, set this to a low number</source>
          <target state="translated">Если вы вызываете сторонний код, которым не можете управлять, который улавливает BaseException, установите для него меньшее число</target>
        </trans-unit>
        <trans-unit id="d42190007de4c011a55f67b562fb0bc423a30a1c" translate="yes" xml:space="preserve">
          <source>If your code traps a specific exception type, this will allow you #raiseEvery seconds to cleanup before exit.</source>
          <target state="translated">Если ваш код поймает определенный тип исключения,это позволит вам #raiseEvery seconds to cleanup before exit.</target>
        </trans-unit>
        <trans-unit id="716c60e7b79f82324044ecdf8ef28ea264d629f1" translate="yes" xml:space="preserve">
          <source>It is recommended that you create an exception that extends BaseException instead of Exception, otherwise code like this will never stop:</source>
          <target state="translated">Рекомендуется создать исключение,которое расширяет BaseException вместо Exception,иначе такой код никогда не остановится:</target>
        </trans-unit>
        <trans-unit id="ecbef2995cf67f967161f9f335efae907164c78a" translate="yes" xml:space="preserve">
          <source>Pydoc</source>
          <target state="translated">Pydoc</target>
        </trans-unit>
        <trans-unit id="1fe4b21eeb0e315b583d66c662dd6045b31fba73" translate="yes" xml:space="preserve">
          <source>Pydoc can be found at: &lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&quot;&gt;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&lt;/a&gt;?vers=1</source>
          <target state="translated">Pydoc можно найти по адресу: &lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&quot;&gt;http://htmlpreview.github.io/?https://github.com/kata198/func_timeout/blob/master/doc/func_timeout.html&lt;/a&gt; ? Vers = 1</target>
        </trans-unit>
        <trans-unit id="e353dccbb3770ad2a0cb80535fbb189f2749efd8" translate="yes" xml:space="preserve">
          <source>Python module to support running any existing function with a given timeout.</source>
          <target state="translated">Python-модуль для поддержки выполнения любой существующей функции с заданным тайм-аутом.</target>
        </trans-unit>
        <trans-unit id="50e737758e7a78a17cd92eceeb66a215d0703657" translate="yes" xml:space="preserve">
          <source>Python module which allows you to specify timeouts when calling any existing function. Also provides support for stoppable-threads</source>
          <target state="translated">Python-модуль,который позволяет указывать таймауты при вызове любой существующей функции.Также обеспечивает поддержку остановочных потоков.</target>
        </trans-unit>
        <trans-unit id="f068c399200bcf8c682f992645b319ce961b0414" translate="yes" xml:space="preserve">
          <source>Raises any exceptions #func# would raise, returns what #func# would return (unless timeout is exceeded), in which case it raises FunctionTimedOut</source>
          <target state="translated">Поднимает любые исключения #func#,возвращает то,что #func#вернет (если только не превышен таймаут),и в этом случае поднимает FunctionTimedOut.</target>
        </trans-unit>
        <trans-unit id="95d653c8c0f9762787df73e800dde458c122fc19" translate="yes" xml:space="preserve">
          <source>So, for esxample, if you have a function &amp;ldquo;doit(&amp;lsquo;arg1&amp;rsquo;, &amp;lsquo;arg2&amp;rsquo;)&amp;rdquo; that you want to limit to running for 5 seconds, with func_timeout you can call it like this:</source>
          <target state="translated">Итак, например, если у вас есть функция doit ('arg1', 'arg2'), которую вы хотите ограничить до 5 секунд, с func_timeout вы можете вызвать ее так:</target>
        </trans-unit>
        <trans-unit id="5e0c8be2dae1c18af6438e224c6d5079d7506bee" translate="yes" xml:space="preserve">
          <source>StoppableThread</source>
          <target state="translated">StoppableThread</target>
        </trans-unit>
        <trans-unit id="9051d0e12075d0499bbce88409b66cd0b3bb5d06" translate="yes" xml:space="preserve">
          <source>StoppableThread is a subclass of threading.Thread, which supports stopping the thread (supports both python2 and python3). It will work to stop even in C code.</source>
          <target state="translated">StoppableThread является подклассом threading.Thread,который поддерживает остановку потока (поддерживает как python2,так и python3).Он будет работать,чтобы остановиться даже в коде на Си.</target>
        </trans-unit>
        <trans-unit id="0ac7dac1eafab769493419e79a8514435fb333a7" translate="yes" xml:space="preserve">
          <source>Stopping a Thread</source>
          <target state="translated">Остановка нити</target>
        </trans-unit>
        <trans-unit id="1e68785772a867c1dc7bfd922efe601ac2fe777b" translate="yes" xml:space="preserve">
          <source>Stops the thread by raising a given exception.</source>
          <target state="translated">Останавливает резьбу,поднимая данное исключение.</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Поддержка</target>
        </trans-unit>
        <trans-unit id="d329942c0a4bcf7c2177264fee462a98f280336c" translate="yes" xml:space="preserve">
          <source>Takes two arguments, &amp;ldquo;timeout&amp;rdquo; and &amp;ldquo;allowOverride&amp;rdquo;</source>
          <target state="translated">Принимает два аргумента: &amp;laquo;тайм-аут&amp;raquo; и &amp;laquo;allowOverride&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e0159984409ba3dd74cf3aa597338586632461d9" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;exception&amp;rdquo; param must be a type, and it must be instantiable with no arguments (i.e. MyExceptionType() must create the object).</source>
          <target state="translated">Параметр &amp;laquo;исключения&amp;raquo; должен быть типом, и он должен быть инстанцируемым без аргументов (то есть MyExceptionType () должен создать объект).</target>
        </trans-unit>
        <trans-unit id="962f5de7ab88f0bb85d3ad5bfdf32a584ed6496c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;timeout&amp;rdquo; parameter can be either a number (for a fixed timeout), or a function/lambda. If a function/lambda is used, it will be passed the same arguments as the called function was passed. It should return a number which will be used as the timeout for that paticular run. For example, if you have a method that calculates data, you&amp;rsquo;ll want a higher timeout for 1 million records than 50 records.</source>
          <target state="translated">Параметр &amp;laquo;тайм-аут&amp;raquo; может быть числом (для фиксированного тайм-аута) или функцией / лямбда. Если используется функция / лямбда, ей будут переданы те же аргументы, что и вызываемой функции. Он должен вернуть число, которое будет использоваться в качестве тайм-аута для данного конкретного прогона. Например, если у вас есть метод, который вычисляет данные, вам понадобится больший тайм-аут для 1 миллиона записей, чем для 50 записей.</target>
        </trans-unit>
        <trans-unit id="638c6dda5ff5545302fdfc1d9a135d5a723d022d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;StoppableThread&lt;/em&gt; class (you must extend this for your thread) adds a function, &lt;em&gt;stop&lt;/em&gt;, which can be called to stop the thread.</source>
          <target state="translated">Класс &lt;em&gt;StoppableThread&lt;/em&gt; (вы должны расширить это для своего потока) добавляет функцию &lt;em&gt;stop&lt;/em&gt; , которую можно вызвать для остановки потока.</target>
        </trans-unit>
        <trans-unit id="941a778074283ddae1ae7efe4b8e3cd69210788b" translate="yes" xml:space="preserve">
          <source>The exception type you pass will be raised every #raiseEvery seconds in the context of that stoppable thread. You can tweak this value to give yourself more time for cleanups, or you can shrink it down to break out of empty exception handlers  ( try/except with bare except ).</source>
          <target state="translated">Тип исключения,который вы передаете,будет подниматься каждые #raiseEvery seconds в контексте этого остановившегося потока.Вы можете настроить это значение,чтобы дать себе больше времени на очистку,или вы можете сократить его до минимума,чтобы вырваться из пустых обработчиков исключений(try/except with bare except ).</target>
        </trans-unit>
        <trans-unit id="306582be0dbc88fde6f9211698e7d894ea794cd4" translate="yes" xml:space="preserve">
          <source>The way it works is that you pass it an exception, and it raises it via the cpython api (So the next time a &amp;ldquo;python&amp;rdquo; function is called from C api, or the next line is processed in python code, the exception is raised).</source>
          <target state="translated">Это работает так: вы передаете ему исключение, а оно вызывает его через cpython api (так что в следующий раз, когда функция &amp;laquo;python&amp;raquo; вызывается из C api, или следующая строка обрабатывается в коде python, возникает исключение. ).</target>
        </trans-unit>
        <trans-unit id="3f6e6626b94cfc10d932ccfc6cc02a4e53fbcd25" translate="yes" xml:space="preserve">
          <source>Then, at any time during the thread&amp;rsquo;s execution, you can call .stop( StopExceptionType ) to stop it ( more in &amp;ldquo;Stopping a Thread&amp;rdquo; below</source>
          <target state="translated">Затем в любой момент во время выполнения потока вы можете вызвать .stop (StopExceptionType), чтобы остановить его (подробнее в разделе &amp;laquo;Остановка потока&amp;raquo; ниже</target>
        </trans-unit>
        <trans-unit id="232f4a9ed1931c78516d5ebe645e54ec887af5dd" translate="yes" xml:space="preserve">
          <source>Then, you can create and start this thread like:</source>
          <target state="translated">Затем,вы можете создать и запустить этот поток как:</target>
        </trans-unit>
        <trans-unit id="59edc89391a5ff18bdc39fa62ae634509905ac75" translate="yes" xml:space="preserve">
          <source>This is a decorator you can use on functions to apply func_timeout.</source>
          <target state="translated">Это декоратор,который вы можете использовать на функциях для применения func_timeout.</target>
        </trans-unit>
        <trans-unit id="4746c633466638eb200a1ed4d9648f4828a5bf80" translate="yes" xml:space="preserve">
          <source>This is the function wherein you pass the timeout, the function you want to call, and any arguments, and it runs it for up to #timeout# seconds, and will return/raise anything the passed function would otherwise return or raise.</source>
          <target state="translated">Это функция,в которой вы передаете таймаут,функцию,которую хотите вызвать,и любые аргументы,и она запускает ее до #timeout#секунд,и будет возвращать/увеличивать все,что переданная функция в противном случае вернет или поднимет.</target>
        </trans-unit>
        <trans-unit id="7464d026804d91f73a7d71c9343a14eb1532a5b5" translate="yes" xml:space="preserve">
          <source>This should be a class/type, NOT an instance, i.e.  MyExceptionType   not  MyExceptionType()</source>
          <target state="translated">Это должен быть класс/тип,а не экземпляр,т.е.MyExceptionType,а не MyExceptionType().</target>
        </trans-unit>
        <trans-unit id="b2964ece4565541a784c561ecb7a9f59721bbb95" translate="yes" xml:space="preserve">
          <source>This will allow you to call functions in stoppable threads, for example handlers in an event loop, which can be stopped later via the .stop() method.</source>
          <target state="translated">Это позволит вызывать функции в остановимых потоках,например,обработчики в цикле обработки событий,которые впоследствии могут быть остановлены с помощью метода .stop().</target>
        </trans-unit>
        <trans-unit id="76f27034687f9e082fa0729766c71b35a8cb477c" translate="yes" xml:space="preserve">
          <source>This will force &amp;lsquo;Server is shutting down&amp;rsquo; as the message held by this exception.</source>
          <target state="translated">Это вызовет принудительное завершение работы сервера в качестве сообщения, содержащегося в этом исключении.</target>
        </trans-unit>
        <trans-unit id="f74d606309338e7e102a2a7e1f653d9bffd8a50e" translate="yes" xml:space="preserve">
          <source>Using StoppableThread</source>
          <target state="translated">Использование StoppableThread</target>
        </trans-unit>
        <trans-unit id="8322fbe11cd44910c2b7c54f8d6f80e8e098392e" translate="yes" xml:space="preserve">
          <source>Works on windows, linux/unix, cygwin, mac</source>
          <target state="translated">Работает на окнах,линукс/уникс,цигвин,мак</target>
        </trans-unit>
        <trans-unit id="dc256a906c56d5aa58d033feeb07568d6473cd98" translate="yes" xml:space="preserve">
          <source>You can use StoppableThread one of two ways:</source>
          <target state="translated">Вы можете использовать StoppableThread одним из двух способов:</target>
        </trans-unit>
        <trans-unit id="6f04c2db341aa133d55d9ac57971090de97ed837" translate="yes" xml:space="preserve">
          <source>You may want to consider using singleton types with fixed error messages, so that tracebacks, etc. log that the call timed out.</source>
          <target state="translated">Возможно,вы захотите рассмотреть возможность использования однокнопочных типов с фиксированными сообщениями об ошибках,чтобы трассировка и т.д.регистрировали,что звонок таймализировался.</target>
        </trans-unit>
        <trans-unit id="b447f29b37d37004c887f2625617e804cc43b47b" translate="yes" xml:space="preserve">
          <source>Your thread can extend func_timeout.StoppableThread.StoppableThread and implement the &amp;ldquo;run&amp;rdquo; method, same as a normal thread.</source>
          <target state="translated">Ваш поток может расширять func_timeout.StoppableThread.StoppableThread и реализовывать метод &amp;laquo;run&amp;raquo;, как и обычный поток.</target>
        </trans-unit>
        <trans-unit id="cd7d54d7f0255f95c66baa0a6f4bac5df63e8150" translate="yes" xml:space="preserve">
          <source>class MyThread(StoppableThread):</source>
          <target state="translated">класс MyThread(StoppableThread):</target>
        </trans-unit>
        <trans-unit id="4242da60e142b57966582fd1eabfb210aa0675a1" translate="yes" xml:space="preserve">
          <source>class ServerShutdownExceptionType(BaseException):</source>
          <target state="translated">класс ServerShutdownExceptionType(BaseException):</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">продолжить работу по адресу</target>
        </trans-unit>
        <trans-unit id="12159d1a0ad11fb0b167e1c9b28827fa8a24449c" translate="yes" xml:space="preserve">
          <source>def __init__(self, *args, **kwargs):</source>
          <target state="translated">Если ты не знаешь,что это такое..:</target>
        </trans-unit>
        <trans-unit id="6bf03baf72f015d08c16ab6dda4aaa344cf19a71" translate="yes" xml:space="preserve">
          <source>def func_timeout(timeout, func, args=(), kwargs=None):</source>
          <target state="translated">def func_timeout(timeout,funcs=(),kwargs=None):</target>
        </trans-unit>
        <trans-unit id="72af865f9d9ec68b133b3beba17ac1778f075fb9" translate="yes" xml:space="preserve">
          <source>def myFunction(self, arg1, arg2):</source>
          <target state="translated">Дефекция myFunction(self,arg1,arg2):</target>
        </trans-unit>
        <trans-unit id="d9096d97c422134c85a3a5a4754c45aa13c827f9" translate="yes" xml:space="preserve">
          <source>def run(self):</source>
          <target state="translated">..:</target>
        </trans-unit>
        <trans-unit id="dad19f8f1e75ac0fc8a519081539c38d6d0dc583" translate="yes" xml:space="preserve">
          <source>def stop(self, exception, raiseEvery=2.0):</source>
          <target state="translated">def stop(self,исключение,raiseEvery=2.0):</target>
        </trans-unit>
        <trans-unit id="84bffc3939a91128da32c64886f3e05319f53853" translate="yes" xml:space="preserve">
          <source>doSomething()</source>
          <target state="translated">doSomething()</target>
        </trans-unit>
        <trans-unit id="5e77970730597cf1b78a5a1dfb5db0c74da883e8" translate="yes" xml:space="preserve">
          <source>doitReturnValue = func_timeout(5, doit, args=(&amp;lsquo;arg1&amp;rsquo;, &amp;lsquo;arg2&amp;rsquo;))</source>
          <target state="translated">doitReturnValue = func_timeout (5, doit, args = ('аргумент1', 'аргумент2'))</target>
        </trans-unit>
        <trans-unit id="8adb1a8fcec638260bae17578f39fc5d88f3f6f0" translate="yes" xml:space="preserve">
          <source>except Exception as e:</source>
          <target state="translated">кроме Исключения как д:</target>
        </trans-unit>
        <trans-unit id="c57cf408589b3a07482119901763caba5284ee4e" translate="yes" xml:space="preserve">
          <source>except FunctionTimedOut:</source>
          <target state="translated">кроме FunctionTimedOut:</target>
        </trans-unit>
        <trans-unit id="a3d10fd05f1987b39fa22b8e279f20c451159de2" translate="yes" xml:space="preserve">
          <source>from func_timeout import func_timeout, FunctionTimedOut</source>
          <target state="translated">из функционала импорта func_timeout,FunctionTimedOut</target>
        </trans-unit>
        <trans-unit id="db2590fa65bf729699de2c12a7ed18ca792b7a80" translate="yes" xml:space="preserve">
          <source>from func_timeout.StoppableThread import StoppableThread</source>
          <target state="translated">из импорта func_timeout.StoppableThread StoppableThread</target>
        </trans-unit>
        <trans-unit id="f6130d61094a69ddf03067c3d8ba313f22f9ff1e" translate="yes" xml:space="preserve">
          <source>func_set_timeout</source>
          <target state="translated">func_set_timeout</target>
        </trans-unit>
        <trans-unit id="7e5b4e7b8a249bfaf725a967ea5b1f5d6999e2d2" translate="yes" xml:space="preserve">
          <source>func_timeout</source>
          <target state="translated">func_timeout</target>
        </trans-unit>
        <trans-unit id="412e059da1b9e9f5c40c9e02312c9c8012e034d5" translate="yes" xml:space="preserve">
          <source>func_timeout - Runs the given function for up to #timeout# seconds.</source>
          <target state="translated">func_timeout-Запускает данную функцию до #timeout#секунд.</target>
        </trans-unit>
        <trans-unit id="b9e1073b8ef8631b95584b26745f2a78d9d0caef" translate="yes" xml:space="preserve">
          <source>func_timeout will run the specified function in a thread with the specified arguments until it returns, raises an exception, or the timeout is exceeded.</source>
          <target state="translated">func_timeout будет выполнять указанную функцию в потоке с указанными аргументами до тех пор,пока не вернется,не вызовет исключение,или пока не будет превышен таймаут.</target>
        </trans-unit>
        <trans-unit id="dffd52bc06625dde19d0b56d547325a15bd705d2" translate="yes" xml:space="preserve">
          <source>myThread = MyThread()</source>
          <target state="translated">myThread=MyThread()</target>
        </trans-unit>
        <trans-unit id="f31fd0390f6ec70393d585c64d822c8e8e0a339b" translate="yes" xml:space="preserve">
          <source>myThread = StoppableThread( target=myFunction, args=(&amp;lsquo;ordered&amp;rsquo;, &amp;lsquo;args&amp;rsquo;, &amp;lsquo;here&amp;rsquo;), kwargs={ &amp;lsquo;keyword args&amp;rsquo; : &amp;lsquo;here&amp;rsquo; } )</source>
          <target state="translated">myThread = StoppableThread (target = myFunction, args = ('заказанный', 'аргументы', 'здесь'), kwargs = {'аргументы ключевого слова': 'здесь'})</target>
        </trans-unit>
        <trans-unit id="1703660c77617b7381eb65f83d232ec083ffe925" translate="yes" xml:space="preserve">
          <source>myThread.start()</source>
          <target state="translated">myThread.start()</target>
        </trans-unit>
        <trans-unit id="63e724a84d6a501b4b835c7854cfc47a6b9d95be" translate="yes" xml:space="preserve">
          <source>print ( &amp;ldquo;doit(&amp;lsquo;arg1&amp;rsquo;, &amp;lsquo;arg2&amp;rsquo;) could not complete within 5 seconds and was terminated.\n&amp;rdquo;)</source>
          <target state="translated">print (&amp;laquo;doit ('arg1', 'arg2') не удалось завершить в течение 5 секунд и был прерван. \ n&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">возвращение</target>
        </trans-unit>
        <trans-unit id="6e6037620e97f018e0458067ae68d161d69b7968" translate="yes" xml:space="preserve">
          <source>that inherits from BaseException (so except Exception as e: continue; isn&amp;rsquo;t a problem)</source>
          <target state="translated">который наследуется от BaseException (так что кроме Exception как e: continue; не проблема)</target>
        </trans-unit>
        <trans-unit id="c0f8e6a47ebeea6e24f6f6579081cf64be8d33e7" translate="yes" xml:space="preserve">
          <source>to break out of their exception handler.</source>
          <target state="translated">чтобы сбежать от своего куратора исключений.</target>
        </trans-unit>
        <trans-unit id="ee5bcc552a9530d8c817eb7c1414555172f903ff" translate="yes" xml:space="preserve">
          <source>try:</source>
          <target state="translated">Попробуй:</target>
        </trans-unit>
        <trans-unit id="05c9d64a43b4817c5646da02b15d6da3296c151e" translate="yes" xml:space="preserve">
          <source>until the thread terminates.</source>
          <target state="translated">пока резьба не закончится.</target>
        </trans-unit>
        <trans-unit id="33911b06c894b3c1865492f50a52116659f18019" translate="yes" xml:space="preserve">
          <source>while True:</source>
          <target state="translated">в то время как Правда:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
