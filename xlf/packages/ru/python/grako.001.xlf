<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/grako/">
    <body>
      <group id="grako">
        <trans-unit id="4784be16436864f71cc9672f745adebbe734a561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Dennis_Ritchie&quot;&gt;Dennis Ritchie&lt;/a&gt; (1941-2011)</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Dennis_Ritchie&quot;&gt;Деннис Ричи&lt;/a&gt; (1941-2011)</target>
        </trans-unit>
        <trans-unit id="d33ab16238e758409a4929d3e0d4d79170dccce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; is a great language for working with language parsing and translation.</source>
          <target state="translated">&lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; - отличный язык для работы с языковым синтаксическим анализом и переводом.</target>
        </trans-unit>
        <trans-unit id="9173c79f634b5c1ee5c5a3f6a450c82857535ff3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;At least for the people who send me mail about a new language that they&amp;rsquo;re designing, the general advice is: do it to learn about how to write a compiler. Don&amp;rsquo;t have any expectations that anyone will use it, unless you hook up with some sort of organization in a position to push it hard. It&amp;rsquo;s a lottery, and some can buy a lot of the tickets. There are plenty of beautiful languages (more beautiful than C) that didn&amp;rsquo;t catch on. But someone does win the lottery, and doing a language at least teaches you something.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;По крайней мере, для людей, которые присылают мне письма о новом языке, который они разрабатывают, общий совет: делайте это, чтобы узнать, как написать компилятор. Не ожидайте, что кто-то воспользуется им, если только вы не подключитесь к какой-либо организации, способной активно ее продвигать. Это лотерея, и некоторые могут купить много билетов. Есть много красивых языков (более красивых, чем C), которые не прижились. Но кто-то выигрывает в лотерею, а владение языком по крайней мере вас чему-то учит.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9cd32f9a64f66e3f1e92f2d3295a021d9250efa8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Positive and negative lookaheads&lt;/em&gt;, and the &lt;em&gt;cut&lt;/em&gt; element (with its cleaning of the memoization cache) allow for additional, hand-crafted optimizations at the grammar level.</source>
          <target state="translated">&lt;em&gt;Положительные и отрицательные опережающие просмотры&lt;/em&gt; , а также элемент &lt;em&gt;cut&lt;/em&gt; (с его очисткой кеша мемоизации) позволяют проводить дополнительную ручную оптимизацию на уровне грамматики.</target>
        </trans-unit>
        <trans-unit id="3451857826106f627f426aedc8a1625020f56def" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Grako&lt;/strong&gt; (for &lt;em&gt;grammar compiler&lt;/em&gt;) is a tool that takes grammars in a variation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Ebnf&quot;&gt;EBNF&lt;/a&gt; as input, and outputs &lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;memoizing&lt;/a&gt; (&lt;a href=&quot;http://bford.info/packrat/&quot;&gt;Packrat&lt;/a&gt;) &lt;a href=&quot;http://en.wikipedia.org/wiki/Parsing_expression_grammar&quot;&gt;PEG&lt;/a&gt; parsers in &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Grako&lt;/strong&gt; (для &lt;em&gt;грамматики компилятора&lt;/em&gt; ) представляет собой инструмент , который принимает грамматики в изменении &lt;a href=&quot;http://en.wikipedia.org/wiki/Ebnf&quot;&gt;EBNF&lt;/a&gt; в качестве входных данных, и выводит &lt;a href=&quot;http://en.wikipedia.org/wiki/Memoization&quot;&gt;memoizing&lt;/a&gt; ( &lt;a href=&quot;http://bford.info/packrat/&quot;&gt;Packrat&lt;/a&gt; ) &lt;a href=&quot;http://en.wikipedia.org/wiki/Parsing_expression_grammar&quot;&gt;PEG&lt;/a&gt; парсеров в &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96d115f7edccd957024570c7f59eb004a1abbc54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Grako&lt;/strong&gt; can also compile a grammar stored in a string into a</source>
          <target state="translated">&lt;strong&gt;Grako&lt;/strong&gt; также может скомпилировать грамматику, хранящуюся в строке, в</target>
        </trans-unit>
        <trans-unit id="5e252d8adf9f8d7f679f07a346459bc97962fdb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Grako&lt;/strong&gt; is &lt;em&gt;different&lt;/em&gt; from other &lt;a href=&quot;http://en.wikipedia.org/wiki/Parsing_expression_grammar&quot;&gt;PEG&lt;/a&gt; parser generators:</source>
          <target state="translated">&lt;strong&gt;Grako&lt;/strong&gt; это &lt;em&gt;отличается&lt;/em&gt; от других &lt;a href=&quot;http://en.wikipedia.org/wiki/Parsing_expression_grammar&quot;&gt;ПЭГ&lt;/a&gt; - генераторов парсеров:</target>
        </trans-unit>
        <trans-unit id="cae77d5bd2e58e1ae20d3dd7dee10a10a9c037c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Grako&lt;/strong&gt; is feature-complete and currently being used with complex grammars to parse, analyze, and translate hundreds of thousands of lines of input text, including source code in several programming languages.</source>
          <target state="translated">&lt;strong&gt;Grako&lt;/strong&gt; обладает полным &lt;strong&gt;набором&lt;/strong&gt; функций и в настоящее время используется со сложными грамматиками для синтаксического анализа, анализа и перевода сотен тысяч строк входящего текста, включая исходный код на нескольких языках программирования.</target>
        </trans-unit>
        <trans-unit id="18f89b63e0d8d958e85ae07f9fe7bdd6c944757a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Grako&lt;/strong&gt; was created to address some recurring problems encountered over decades of working with parser generation tools:</source>
          <target state="translated">&lt;strong&gt;Grako&lt;/strong&gt; был создан для решения некоторых повторяющихся проблем, возникших за десятилетия работы с инструментами генерации парсеров:</target>
        </trans-unit>
        <trans-unit id="b5ce5decf77605100580ce22e928c0123812aa93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;em&gt;DEVELOPMENT OF GRAKO HAS STOPPED&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ: &lt;/strong&gt;&lt;em&gt;РАЗРАБОТКА GRAKO ПРИОСТАНОВЛЕНА&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e298f9b741ca46826580289e198d319f2582e58" translate="yes" xml:space="preserve">
          <source>Automatic generation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;Abstract Syntax Trees&lt;/a&gt; and Object Models, along with &lt;em&gt;Model Walkers&lt;/em&gt; and &lt;em&gt;Code Generators&lt;/em&gt; make analysis and translation approachable</source>
          <target state="translated">Автоматическое создание &lt;a href=&quot;http://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;абстрактных синтаксических деревьев&lt;/a&gt; и объектных моделей, а также средства &lt;em&gt;обхода моделей&lt;/em&gt; и &lt;em&gt;генераторы кода&lt;/em&gt; делают анализ и перевод доступными</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Изменения</target>
        </trans-unit>
        <trans-unit id="3d7268de642e81fe33fc02c6192b5394b70af1fb" translate="yes" xml:space="preserve">
          <source>Creator of the &lt;a href=&quot;http://en.wikipedia.org/wiki/C_language&quot;&gt;C&lt;/a&gt; programming language and of &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix&quot;&gt;Unix&lt;/a&gt;</source>
          <target state="translated">Создатель языка программирования &lt;a href=&quot;http://en.wikipedia.org/wiki/C_language&quot;&gt;C&lt;/a&gt; и &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix&quot;&gt;Unix&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cc53949dbf52cda6c9c708fa39f2c4e03372552" translate="yes" xml:space="preserve">
          <source>Delegation to &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.4/library/re.html&quot;&gt;re&lt;/a&gt; module for &lt;em&gt;lexemes&lt;/em&gt; allows for (&lt;a href=&quot;http://www.perl.org/&quot;&gt;Perl&lt;/a&gt;-like) powerful and efficient lexical analysis.</source>
          <target state="translated">Делегирование &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; &amp;laquo;s &lt;a href=&quot;https://docs.python.org/3.4/library/re.html&quot;&gt;повторно&lt;/a&gt; модуль для &lt;em&gt;лексем&lt;/em&gt; позволяет ( &lt;a href=&quot;http://www.perl.org/&quot;&gt;Perl&lt;/a&gt; -like) мощного и эффективного лексического анализа.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Документация</target>
        </trans-unit>
        <trans-unit id="681b8515024fa7916ec123b3549da902d51a6208" translate="yes" xml:space="preserve">
          <source>Generated parsers should be easy to read and debug by humans. Looking at the generated source code is sometimes the only way to find problems in a grammar, the semantic actions, or in the parser generator itself. It&amp;rsquo;s inconvenient to trust generated code that one cannot understand.</source>
          <target state="translated">Сгенерированные парсеры должны быть удобны для чтения и отладки людьми. Просмотр сгенерированного исходного кода иногда является единственным способом найти проблемы в грамматике, семантических действиях или в самом генераторе синтаксического анализатора. Доверять непонятному коду сгенерированному коду неудобно.</target>
        </trans-unit>
        <trans-unit id="76f845b11158ab0286548c14cec0c121d6bbd47d" translate="yes" xml:space="preserve">
          <source>Generated parsers use &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;&amp;rsquo;s very efficient exception-handling system to backtrack. &lt;strong&gt;Grako&lt;/strong&gt; generated parsers simply assert what must be parsed. There are no complicated &lt;em&gt;if-then-else&lt;/em&gt; sequences for decision making or backtracking. Memoization allows going over the same input sequence several times in linear time.</source>
          <target state="translated">Сгенерированные парсеры используют очень эффективную систему обработки исключений &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; для возврата. &lt;strong&gt;Сгенерированные Grako&lt;/strong&gt; парсеры просто утверждают, что необходимо проанализировать. Не существует сложных последовательностей &amp;laquo; &lt;em&gt;если-то-еще&amp;raquo;&lt;/em&gt; для принятия решений или отката. Мемоизация позволяет повторять одну и ту же входную последовательность несколько раз за линейное время.</target>
        </trans-unit>
        <trans-unit id="18206f68d40065c1f40256be2b8dc8a21f41a464" translate="yes" xml:space="preserve">
          <source>Grako</source>
          <target state="translated">Grako</target>
        </trans-unit>
        <trans-unit id="6253aa0b0e4ccb4b5ac966af71e55203f6647a95" translate="yes" xml:space="preserve">
          <source>Grako takes a grammar in a variation of EBNF as input, and outputs a memoizing PEG/Packrat parser in Python.</source>
          <target state="translated">Grako принимает на вход грамматику в варианте EBNF и выводит на Python запоминающий парсер PEG/Packrat.</target>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Грамматика</target>
        </trans-unit>
        <trans-unit id="4a8046fe523970120912fccf857dbd6aca85ed64" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in the technology, or in future developments such as proper support for left recursion, then please follow the &lt;a href=&quot;https://pypi.python.org/pypi/tatsu&quot;&gt;Tatsu&lt;/a&gt; project.</source>
          <target state="translated">Если вас интересует технология или будущие разработки, такие как правильная поддержка левой рекурсии, то, пожалуйста, &lt;a href=&quot;https://pypi.python.org/pypi/tatsu&quot;&gt;следите за&lt;/a&gt; проектом Tatsu .</target>
        </trans-unit>
        <trans-unit id="78c589e22d8a0b1fc429384f8cbc3ac1db8365ab" translate="yes" xml:space="preserve">
          <source>Include files, rule inheritance, and rule inclusion give &lt;strong&gt;Grako&lt;/strong&gt; grammars considerable expressive power.</source>
          <target state="translated">Включаемые файлы, наследование правил и включение правил придают грамматике &lt;strong&gt;Grako&lt;/strong&gt; значительную выразительную силу.</target>
        </trans-unit>
        <trans-unit id="92bbdfa77d1a626bc85b41f02d51c64bfd2c18e7" translate="yes" xml:space="preserve">
          <source>It is easy to recruit help with knowledge about a mainstream programming language like &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;, but help is hard to find for working with complex grammar-description languages. &lt;strong&gt;Grako&lt;/strong&gt; grammars are in the spirit of a &lt;em&gt;Translators and Interpreters 101&lt;/em&gt; course (if something is hard to explain to a college student, it&amp;rsquo;s probably too complicated, or not well understood).</source>
          <target state="translated">Легко получить помощь со знанием основного языка программирования, такого как &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; , но трудно найти помощь для работы со сложными языками описания грамматики. &lt;strong&gt;Грамматика Grako&lt;/strong&gt; находится в духе курса &amp;laquo; &lt;em&gt;Переводчики и переводчики 101&amp;raquo;&lt;/em&gt; (если что-то сложно объяснить студенту колледжа, вероятно, это слишком сложно или плохо понятно).</target>
        </trans-unit>
        <trans-unit id="02bb67e6cc89e14999f6a90a934010b7f7c13bdc" translate="yes" xml:space="preserve">
          <source>LL and LR grammars become contaminated with myriads of lookahead statements to deal with ambiguous constructs in the source language. &lt;a href=&quot;http://en.wikipedia.org/wiki/Parsing_expression_grammar&quot;&gt;PEG&lt;/a&gt; parsers address ambiguity from the onset.</source>
          <target state="translated">Грамматики LL и LR заражены мириадами опережающих выражений, чтобы иметь дело с неоднозначными конструкциями в исходном языке. Парсеры &lt;a href=&quot;http://en.wikipedia.org/wiki/Parsing_expression_grammar&quot;&gt;PEG&lt;/a&gt; с самого начала устраняют двусмысленность.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">Лицензия</target>
        </trans-unit>
        <trans-unit id="e796128e20dca9168d541e6b047b6047325e3780" translate="yes" xml:space="preserve">
          <source>Preprocessing (like dealing with includes, fixed column formats, or structure-through-indentation) belongs in well-designed program code; not in the grammar.</source>
          <target state="translated">Препроцессинг (как и работа с включёнными,фиксированными форматами столбцов или сквозной намоткой структуры)относится к хорошо продуманному программному коду,а не к грамматике.</target>
        </trans-unit>
        <trans-unit id="98365abf7a35b55e3b549f20aa17daee9fe3c995" translate="yes" xml:space="preserve">
          <source>Rationale</source>
          <target state="translated">Обоснование</target>
        </trans-unit>
        <trans-unit id="858be1680530539f957c139bee2bebf6eee8af08" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://bitbucket.org/neogeny/grako/src/default/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt; for details.</source>
          <target state="translated">Подробности смотрите в &lt;a href=&quot;https://bitbucket.org/neogeny/grako/src/default/CHANGELOG.md&quot;&gt;ИЗМЕНЕНИИ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25d2be045a32363cbde1def910edb8f3e046e4dd" translate="yes" xml:space="preserve">
          <source>Semantic actions &lt;em&gt;do not&lt;/em&gt;  belong in a grammar. They create yet another programming language to deal with when doing parsing and translation: the source language, the grammar language, the semantics language, the generated parser&amp;rsquo;s language, and the translation&amp;rsquo;s target language. Most grammar parsers do not check the syntax of embedded semantic actions, so errors get reported at awkward moments, and against the generated code, not against the grammar.</source>
          <target state="translated">Семантические действия &lt;em&gt;не&lt;/em&gt; принадлежат грамматике. Они создают еще один язык программирования, который используется при синтаксическом анализе и переводе: исходный язык, язык грамматики, язык семантики, язык сгенерированного синтаксического анализатора и целевой язык перевода. Большинство синтаксических анализаторов грамматики не проверяют синтаксис встроенных семантических действий, поэтому об ошибках сообщают в неудобные моменты и в соответствии с сгенерированным кодом, а не с грамматикой.</target>
        </trans-unit>
        <trans-unit id="d6afa14e36dcba3c2e920822346be6dde11e35ba" translate="yes" xml:space="preserve">
          <source>Separating the grammar from the code that implements the semantics, and using a variation of a well-known grammar syntax (&lt;a href=&quot;http://en.wikipedia.org/wiki/Ebnf&quot;&gt;EBNF&lt;/a&gt;) allows for full declarative power in language descriptions. General-purpose programming languages are not up to the task.</source>
          <target state="translated">Отделение грамматики от кода, реализующего семантику, и использование разновидности хорошо известного синтаксиса грамматики ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Ebnf&quot;&gt;EBNF&lt;/a&gt; ) обеспечивает полную декларативную силу в описаниях языков. Языки программирования общего назначения не справляются с этой задачей.</target>
        </trans-unit>
        <trans-unit id="be662f8f9b0c089fe4bb6c790411386a0f4151c6" translate="yes" xml:space="preserve">
          <source>Some programming languages allow the use of &lt;em&gt;keywords&lt;/em&gt; as identifiers, or have different meanings for symbols depending on context (&lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;). A parser needs control of lexical analysis to be able to handle those languages.</source>
          <target state="translated">Некоторые языки программирования позволяют использовать &lt;em&gt;ключевые слова в&lt;/em&gt; качестве идентификаторов или имеют разные значения символов в зависимости от контекста ( &lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt; ). Парсеру требуется контроль лексического анализа, чтобы иметь возможность обрабатывать эти языки.</target>
        </trans-unit>
        <trans-unit id="6d09aa2b6d57d449611e9a1932f33d9572fa6d78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://bitbucket.org/neogeny/grako/src/default/README.md&quot;&gt;complete documentation&lt;/a&gt; is available at &lt;strong&gt;Grako&lt;/strong&gt;&amp;rsquo;s &lt;a href=&quot;https://bitbucket.org/neogeny/grako/&quot;&gt;home page&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://bitbucket.org/neogeny/grako/src/default/README.md&quot;&gt;Полная документация&lt;/a&gt; доступна на &lt;strong&gt;Grako&lt;/strong&gt; &amp;laquo;S &lt;a href=&quot;https://bitbucket.org/neogeny/grako/&quot;&gt;домашней странице&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf08bc76382ad0b914e5b8affbbf72d16c3e77dd" translate="yes" xml:space="preserve">
          <source>The only dependencies are on the &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; standard library, yet the &lt;a href=&quot;https://pypi.python.org/pypi/regex&quot;&gt;regex&lt;/a&gt; library will be used if installed, and &lt;a href=&quot;https://pypi.python.org/pypi/colorama/&quot;&gt;colorama&lt;/a&gt; will be used on trace output if available.  &lt;a href=&quot;https://pypi.python.org/pypi/pygraphviz&quot;&gt;pygraphviz&lt;/a&gt; is required for generating diagrams.</source>
          <target state="translated">Единственные зависимости находятся в стандартной библиотеке &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; , но библиотека &lt;a href=&quot;https://pypi.python.org/pypi/regex&quot;&gt;регулярных выражений&lt;/a&gt; будет использоваться, если она установлена, и &lt;a href=&quot;https://pypi.python.org/pypi/colorama/&quot;&gt;colorama&lt;/a&gt; будет использоваться для вывода трассировки, если она доступна. &lt;a href=&quot;https://pypi.python.org/pypi/pygraphviz&quot;&gt;pygraphviz&lt;/a&gt; требуется для создания диаграмм.</target>
        </trans-unit>
        <trans-unit id="083a2119512e7c2fd127dfa7cdd816418ca95241" translate="yes" xml:space="preserve">
          <source>The parser generator, the run-time support, and the generated parsers have measurably low &lt;a href=&quot;http://en.wikipedia.org/wiki/Cyclomatic_complexity&quot;&gt;Cyclomatic complexity&lt;/a&gt;.  At around 5 &lt;a href=&quot;http://en.wikipedia.org/wiki/KLOC&quot;&gt;KLOC&lt;/a&gt; of &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;, it is possible to study all its source code in a single session.</source>
          <target state="translated">Генератор синтаксического анализатора, поддержка времени выполнения и созданные синтаксические анализаторы имеют сравнительно низкую &lt;a href=&quot;http://en.wikipedia.org/wiki/Cyclomatic_complexity&quot;&gt;цикломатическую сложность&lt;/a&gt; . &lt;a href=&quot;http://en.wikipedia.org/wiki/KLOC&quot;&gt;Приблизительно&lt;/a&gt; при 5 KLOC &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; можно изучить весь его исходный код за один сеанс.</target>
        </trans-unit>
        <trans-unit id="b2fc2a23b30cf230f79e5698d481f48b0648e949" translate="yes" xml:space="preserve">
          <source>The use of &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;http://docs.python.org/2/library/contextlib.html&quot;&gt;context managers&lt;/a&gt; considerably reduces the size of the generated parsers for code clarity, and enhanced CPU-cache hits.</source>
          <target state="translated">Использование &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; &amp;laquo;S &lt;a href=&quot;http://docs.python.org/2/library/contextlib.html&quot;&gt;менеджеров контекста&lt;/a&gt; значительно уменьшает размер генерируемых анализаторов для кода ясности, и расширенных хиты CPU-кэш.</target>
        </trans-unit>
        <trans-unit id="814155b159afb05e0e13696a70e7146843e9fa92" translate="yes" xml:space="preserve">
          <source>You may use &lt;strong&gt;Grako&lt;/strong&gt; under the terms of the &lt;a href=&quot;http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29&quot;&gt;BSD&lt;/a&gt;-style license described in the enclosed &lt;strong&gt;LICENSE.txt&lt;/strong&gt; file. &lt;em&gt;If your project requires different licensing&lt;/em&gt; please &lt;a href=&quot;mailto:apalala%40gmail.com&quot;&gt;email&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать &lt;strong&gt;Grako в&lt;/strong&gt; соответствии с условиями лицензии в стиле &lt;a href=&quot;http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29&quot;&gt;BSD,&lt;/a&gt; описанной в прилагаемом файле &lt;strong&gt;LICENSE.txt&lt;/strong&gt; . &lt;em&gt;Если ваш проект требует различного лицензирования&lt;/em&gt; пожалуйста по &lt;a href=&quot;mailto:apalala%40gmail.com&quot;&gt;электронной почте&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="509f2c59a959ba7aab427f88785cad273b2dedab" translate="yes" xml:space="preserve">
          <source>object that can be used to parse any given input, much like the &lt;a href=&quot;https://docs.python.org/3.4/library/re.html&quot;&gt;re&lt;/a&gt; module does with regular expressions.</source>
          <target state="translated">объект, который можно использовать для анализа любого заданного ввода, так же, как модуль &lt;a href=&quot;https://docs.python.org/3.4/library/re.html&quot;&gt;re&lt;/a&gt; делает с регулярными выражениями.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
