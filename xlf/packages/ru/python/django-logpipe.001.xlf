<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/django-logpipe/">
    <body>
      <group id="django-logpipe">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">, и</target>
        </trans-unit>
        <trans-unit id="903765c186e31c456af2dd0a8b1af35e27926e69" translate="yes" xml:space="preserve">
          <source>, which allows the consumer to explicitly ignore specific message types silently. This helps to filter log noise (messages that a consumer really doesn&amp;rsquo;t care about) from actual errors (messages a consumer is skipping, but should be processing).</source>
          <target state="translated">, что позволяет потребителю явно игнорировать определенные типы сообщений без уведомления. Это помогает отфильтровать шум журнала (сообщения, которые действительно не волнуют потребителя) от фактических ошибок (сообщений, которые пользователь пропускает, но должен обрабатывать).</target>
        </trans-unit>
        <trans-unit id="7e0b7dff883d6861e892a62c5d13fdeee2afeb2b" translate="yes" xml:space="preserve">
          <source>.
1. Must have a</source>
          <target state="translated">. 1. Должен иметь</target>
        </trans-unit>
        <trans-unit id="e2d7ba2bf4939b39661ef6382455724c12db2b73" translate="yes" xml:space="preserve">
          <source>. This class method will be called with message data as keyword arguments directly before instantiating the serializer. It should lookup and return the related object (if one exists) so that it can be passed to the serializer&amp;rsquo;s</source>
          <target state="translated">. Этот метод класса будет вызываться с данными сообщения в качестве аргументов ключевого слова непосредственно перед созданием экземпляра сериализатора. Он должен искать и возвращать связанный объект (если он существует), чтобы его можно было передать в сериализатор.</target>
        </trans-unit>
        <trans-unit id="88ab9fedb07f1ab06d98fe20e0aa97c4fe67882d" translate="yes" xml:space="preserve">
          <source>1. Must be either a subclass of</source>
          <target state="translated">1.Должен быть либо подкласс</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">Добавить</target>
        </trans-unit>
        <trans-unit id="f21c4dfb46a3cd544ca1b7134542dcdc6e71187b" translate="yes" xml:space="preserve">
          <source>Add Django 2.1 to tox test suite.</source>
          <target state="translated">Добавьте Джанго 2.1 в тест на токсины.</target>
        </trans-unit>
        <trans-unit id="2e7d120ba3320d9e3ba55ac298fb7121216ba4be" translate="yes" xml:space="preserve">
          <source>Add connection settings to your</source>
          <target state="translated">Добавьте настройки подключения к вашему</target>
        </trans-unit>
        <trans-unit id="dbd3d7c17cc0b57d2980784d2b44e7de422bd091" translate="yes" xml:space="preserve">
          <source>Add new method:</source>
          <target state="translated">Добавить новый метод:</target>
        </trans-unit>
        <trans-unit id="5c9939d96ec5030765ea376c476f6394ff1b1c68" translate="yes" xml:space="preserve">
          <source>Add support for Python 3.7.</source>
          <target state="translated">Добавить поддержку для Python 3.7.</target>
        </trans-unit>
        <trans-unit id="144c7a6c50347e783af6e04fe897ccdc25cdeff1" translate="yes" xml:space="preserve">
          <source>Add support for python-kafka 1.4.4.</source>
          <target state="translated">Добавить поддержку для питона-кафки 1.4.4.</target>
        </trans-unit>
        <trans-unit id="74e23423b466ccf9447a0d5a069e2d3feb919c8f" translate="yes" xml:space="preserve">
          <source>Added concept of message types.</source>
          <target state="translated">Добавлена концепция типов сообщений.</target>
        </trans-unit>
        <trans-unit id="e7db4f6c303e2a63a9d4926308603e481bf8fb87" translate="yes" xml:space="preserve">
          <source>Added support for AWS Kinesis.</source>
          <target state="translated">Добавлена поддержка AWS Kinesis.</target>
        </trans-unit>
        <trans-unit id="43ddd06cc437eac739c0896b99458abfb6684f35" translate="yes" xml:space="preserve">
          <source>After some amount of time (when you are sure no old-version messages still exist in Kafka), remove the code related to the old schema version.</source>
          <target state="translated">Через некоторое время (когда вы будете уверены,что в Кафке все еще нет сообщений старой версии)удалите код,связанный со старой версией схемы.</target>
        </trans-unit>
        <trans-unit id="e26792af16c97fd3c5d213187b0b33cbfe98b605" translate="yes" xml:space="preserve">
          <source>Below is a sample Django model and it&amp;rsquo;s accompanying serializer.</source>
          <target state="translated">Ниже приведен образец модели Django и сопутствующий сериализатор.</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Блог изменений</target>
        </trans-unit>
        <trans-unit id="e38de8a0028066c885206cb0346572995a1642d3" translate="yes" xml:space="preserve">
          <source>Dealing with Schema Changes</source>
          <target state="translated">Устранение изменений в схеме</target>
        </trans-unit>
        <trans-unit id="9cd780126a6cbee99f4a1663a13604d9125012dd" translate="yes" xml:space="preserve">
          <source>Finally, after all the old version 1 messages have been dropped (by log compaction), the</source>
          <target state="translated">Наконец,после того,как все сообщения старой версии 1 были сброшены (путем сжатия логов),в</target>
        </trans-unit>
        <trans-unit id="627b6464f73da86d7de18686941d7b09fc58adb6" translate="yes" xml:space="preserve">
          <source>Finally, consumers can be registered and run automatically by the build in</source>
          <target state="translated">Наконец,потребители могут быть зарегистрированы и запущены автоматически при помощи встроенной системы</target>
        </trans-unit>
        <trans-unit id="21aa4df0e5ee730531b02a18b193bd8447274a3d" translate="yes" xml:space="preserve">
          <source>Fix compatibility issue with Django 3.0</source>
          <target state="translated">Исправлена проблема совместимости с Django 3.0</target>
        </trans-unit>
        <trans-unit id="5f4d11805dd6ed2de8e4b66c76b7fb48b5493c4d" translate="yes" xml:space="preserve">
          <source>For example, if we wanted to require an email field on the</source>
          <target state="translated">Например,если мы хотим запросить электронное поле в поле</target>
        </trans-unit>
        <trans-unit id="68edffd510af78279e051f946b30e579dd35c521" translate="yes" xml:space="preserve">
          <source>If you have multiple data-types in a single topic or stream, you can consume them all by registering multiple serializers with the consumer.</source>
          <target state="translated">Если у вас несколько типов данных в одной теме или потоке,вы можете потреблять их все,зарегистрировав у потребителя несколько сериалайзеров.</target>
        </trans-unit>
        <trans-unit id="271836dc950be42ea67e7e4d2f48692567828398" translate="yes" xml:space="preserve">
          <source>If you have multiple streams or topics to watch, make a consumers for each, and watch them all simultaneously in the same process by using a MultiConsumer.</source>
          <target state="translated">Если у вас есть несколько потоков или тем для просмотра,сделайте потребителей для каждого,и просматривать их все одновременно в одном процессе с помощью MultiConsumer.</target>
        </trans-unit>
        <trans-unit id="124d52fb04f2c7f1db15f3ed0feaccbb45b60443" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using AWS Kinesis instead of Kafka, it will look like this:</source>
          <target state="translated">Если вы используете AWS Kinesis вместо Kafka, это будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="1a83b2ad6d7db2286ab50ca7a435e58c25172b5b" translate="yes" xml:space="preserve">
          <source>Improve log messages and levels for invalid or unknown messages.</source>
          <target state="translated">Улучшение сообщений журнала и уровней для недействительных или неизвестных сообщений.</target>
        </trans-unit>
        <trans-unit id="8d977302311c1f20782e75d4f1942383b9f18b74" translate="yes" xml:space="preserve">
          <source>Improved logic for detecting the current AWS region.</source>
          <target state="translated">Совершенствование логики обнаружения текущего региона СПЦ.</target>
        </trans-unit>
        <trans-unit id="9a3a1734e49dbe1a6c8b63692409a3b98786a172" translate="yes" xml:space="preserve">
          <source>In KinesisOffset model, track the AWS region for a stream. This allows a single database to subscribe to multiple streams in different regions, even it they have the same name.</source>
          <target state="translated">В модели KinesisOffset отследите регион AWS для потока.Это позволяет одной базе данных подписываться на несколько потоков в разных регионах,даже если они имеют одно и то же имя.</target>
        </trans-unit>
        <trans-unit id="970d9459b2c3bd1aab215bea63f715a31dc6bf75" translate="yes" xml:space="preserve">
          <source>Initial release.</source>
          <target state="translated">Первоначальное освобождение.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Установить</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Интернационализация</target>
        </trans-unit>
        <trans-unit id="0e921845ded85f4ca71612e4983252e0fd2d93a9" translate="yes" xml:space="preserve">
          <source>KEY_FIELD</source>
          <target state="translated">KEY_FIELD</target>
        </trans-unit>
        <trans-unit id="9adf8aa78ce63d42002629004f9d8c5d6e3a24c6" translate="yes" xml:space="preserve">
          <source>MESSAGE_TYPE</source>
          <target state="translated">ТИП MESSAGE_TYPE</target>
        </trans-unit>
        <trans-unit id="4276e29a02fd8f6945c318a424eea128da500f12" translate="yes" xml:space="preserve">
          <source>More robustly handle exceptions thrown by a consumer serializer&amp;rsquo;s</source>
          <target state="translated">Более надежная обработка исключений, создаваемых сериализатором потребителя.</target>
        </trans-unit>
        <trans-unit id="1b6da58d60c7bcb0b62a3c84017df86a6a8a4e4e" translate="yes" xml:space="preserve">
          <source>Move data around between Python services using Kafka and/or AWS Kinesis and Django Rest Framework serializers.</source>
          <target state="translated">Перемещайте данные между сервисами Python с помощью сериализаторов Kafka и/или AWS Kinesis и Django Rest Framework.</target>
        </trans-unit>
        <trans-unit id="9b1fcbda693f085c4d6d33acbf333e420ba23fca" translate="yes" xml:space="preserve">
          <source>No changes.</source>
          <target state="translated">Никаких изменений.</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">Нет</target>
        </trans-unit>
        <trans-unit id="b05bfe270cc8d7c863fcaef41cec57b4a874688f" translate="yes" xml:space="preserve">
          <source>Once a serializer exists, you can send a message to Kafka by creating Producer object and calling the</source>
          <target state="translated">После того,как сериализатор существует,вы можете отправить сообщение в Kafka,создав объект Producer и вызвав команду</target>
        </trans-unit>
        <trans-unit id="8c41ae88467fe5bbad09fcd488662b25c3ec5333" translate="yes" xml:space="preserve">
          <source>Person</source>
          <target state="translated">Персона</target>
        </trans-unit>
        <trans-unit id="2d4de422295bafb2c7667583c219074d358b9914" translate="yes" xml:space="preserve">
          <source>PersonSerializerV1</source>
          <target state="translated">PersonSerializerV1</target>
        </trans-unit>
        <trans-unit id="4afc4c099bd08e0d44d6982b97152facf84d0c8d" translate="yes" xml:space="preserve">
          <source>Receiving Messages</source>
          <target state="translated">Получение сообщений</target>
        </trans-unit>
        <trans-unit id="8611e40d1056868462071ad966dca76f00201f08" translate="yes" xml:space="preserve">
          <source>Run migrations. This will create the model used to store Kafka log position offsets.:</source>
          <target state="translated">Запускайте миграцию.В результате будет создана модель,используемая для хранения смещений позиции лога Кафка..:</target>
        </trans-unit>
        <trans-unit id="6fa3703a1bdf2d255844c1967f71f224913cffac" translate="yes" xml:space="preserve">
          <source>Schema changes are handled using the</source>
          <target state="translated">Изменения схемы обрабатываются с помощью</target>
        </trans-unit>
        <trans-unit id="f0662ea4ce2ba05b7f07ad1199c4b10caa58025d" translate="yes" xml:space="preserve">
          <source>Sending Messages</source>
          <target state="translated">Отправка сообщений</target>
        </trans-unit>
        <trans-unit id="71796031218483adb9338df6ac1fe8ad1217e178" translate="yes" xml:space="preserve">
          <source>Serializers</source>
          <target state="translated">Сериализаторы</target>
        </trans-unit>
        <trans-unit id="845c23acd2d57e4a45e5f9d2ddd30f9cfc985ce9" translate="yes" xml:space="preserve">
          <source>The above sample code would result in the following message being sent to the Kafka topic named</source>
          <target state="translated">Приведенный выше пример кода привел бы к отправке следующего сообщения на тему &quot;Кафка&quot; с именем</target>
        </trans-unit>
        <trans-unit id="ffa25f9133ff3c7db5f21fa0df07b10a5586ea06" translate="yes" xml:space="preserve">
          <source>The consumer object uses Django REST Framework&amp;rsquo;s built-in</source>
          <target state="translated">Объект-потребитель использует встроенный в Django REST Framework</target>
        </trans-unit>
        <trans-unit id="1d106a3b7b84e0ca3d5e70cafd0526170152e47c" translate="yes" xml:space="preserve">
          <source>The consumers will now use the appropriate serializer for the message version. Second, we need to update producer code to being using schema version 2.:</source>
          <target state="translated">Теперь потребители будут использовать соответствующий сериализатор для версии сообщения.Во-вторых,нам нужно обновить код производителя до использования версии 2 схемы..:</target>
        </trans-unit>
        <trans-unit id="b47903da5844aaf66338046865341227ddf794af" translate="yes" xml:space="preserve">
          <source>The first step in either sending or receiving messages with</source>
          <target state="translated">Первый шаг при отправке или получении сообщений с помощью кнопки &quot;Отправить&quot; или &quot;Принять&quot;.</target>
        </trans-unit>
        <trans-unit id="c22aa8ea3bbd87b3fdb24798299beac0d377babf" translate="yes" xml:space="preserve">
          <source>This library serves as a universal pipe for moving data around between Django applications and services. It is build on
top of &lt;a href=&quot;https://boto3.readthedocs.io/en/latest/&quot;&gt;Boto3&lt;/a&gt;, &lt;a href=&quot;https://kafka.apache.org/&quot;&gt;Apache Kafka&lt;/a&gt;, &lt;a href=&quot;https://github.com/dpkp/kafka-python&quot;&gt;kafka-python&lt;/a&gt;, and &lt;a href=&quot;http://www.django-rest-framework.org/&quot;&gt;Django REST Framework&lt;/a&gt;.</source>
          <target state="translated">Эта библиотека служит универсальным каналом для передачи данных между приложениями и службами Django. Он построен на &lt;a href=&quot;https://boto3.readthedocs.io/en/latest/&quot;&gt;базе Boto3&lt;/a&gt; , &lt;a href=&quot;https://kafka.apache.org/&quot;&gt;Apache Kafka&lt;/a&gt; , &lt;a href=&quot;https://github.com/dpkp/kafka-python&quot;&gt;kafka-python&lt;/a&gt; и &lt;a href=&quot;http://www.django-rest-framework.org/&quot;&gt;Django REST Framework&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bee3d83cc56cf9bb415862ee5d7d2fa680b12552" translate="yes" xml:space="preserve">
          <source>To perform a backwards-incompatible schema change, the following steps should be performed.</source>
          <target state="translated">Для выполнения обратного изменения схемы необходимо выполнить следующие шаги.</target>
        </trans-unit>
        <trans-unit id="44a75fd9ae981e96331b4fd634c35934f291b0eb" translate="yes" xml:space="preserve">
          <source>To processing incoming messages, we can reuse the same model and serializer. We just need to instantiate a Consumer object.</source>
          <target state="translated">Для обработки входящих сообщений мы можем повторно использовать ту же модель и сериализатор.Нам просто нужно инстанцировать объект &quot;Потребитель&quot;.</target>
        </trans-unit>
        <trans-unit id="760d77319d33dd98f7de4a21a9beebd585f4f1bb" translate="yes" xml:space="preserve">
          <source>Update consumer code to have knowledge of the new schema version.</source>
          <target state="translated">Обновите потребительский код,чтобы иметь представление о новой версии схемы.</target>
        </trans-unit>
        <trans-unit id="e9d9bf0c4f187aed5459d99826260d2d90fbd55e" translate="yes" xml:space="preserve">
          <source>Update producer code to being sending the new schema version.</source>
          <target state="translated">Обновите код производителя,чтобы отправить новую версию схемы.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="340d33e2025ffe706ac456af47f78712a84bc2c1" translate="yes" xml:space="preserve">
          <source>Use the</source>
          <target state="translated">Использовать</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">ВЕРСИЯ</target>
        </trans-unit>
        <trans-unit id="05d85e7d0002fe23af087c94dcb76e1cd32d04dc" translate="yes" xml:space="preserve">
          <source>You can also support multiple incompatible version of message types by defining a serializer for each message type version and registering them all with the consumer.</source>
          <target state="translated">Вы также можете поддерживать несколько несовместимых версий типов сообщений,определив сериализатор для каждой версии типа сообщения и зарегистрировав их все у потребителя.</target>
        </trans-unit>
        <trans-unit id="ff69380b6a64172adf8d15c916fbc2984553e8b2" translate="yes" xml:space="preserve">
          <source>argument during initialization. If no object exists yet (the message is representing a new object), it should return</source>
          <target state="translated">аргумент во время инициализации.Если объект еще не существует (сообщение представляет собой новый объект),то он должен вернуть аргумент</target>
        </trans-unit>
        <trans-unit id="93d4e6db7d8ed0b59ae019e317a84d1c04c7b2e9" translate="yes" xml:space="preserve">
          <source>attribute defined on the class, representing the name of the field to use as the message key. The message key is used by Kafka when performing log compaction and by Kinesis as the shard partition key. The property can be omitted for topics which do not require a key.
4. If the serializer will be used for incoming-messages, it should implement class method</source>
          <target state="translated">атрибут,определенный на классе,представляющий собой имя поля,которое будет использоваться в качестве ключа сообщения.Ключ сообщения используется Кафкой при уплотнении логов и Кинесисом в качестве ключа разбиения шарда.Свойство может быть опущено для тем,которые не требуют ключа.4.Если сериализатор будет использоваться для входящих сообщений,то он должен реализовать метод класса</target>
        </trans-unit>
        <trans-unit id="bd9eb1ec81cf0e354af01d5b454d18b18ba35af5" translate="yes" xml:space="preserve">
          <source>attribute defined on the class. The value should be a monotonic integer representing the schema version number.
3. Must have a</source>
          <target state="translated">атрибут,определенный в классе.Значение должно быть монотонным целым числом,представляющим номер версии схемы.3.Должно иметь</target>
        </trans-unit>
        <trans-unit id="9af0277498ccdb7d81bd3aca08dc767cb572f99e" translate="yes" xml:space="preserve">
          <source>attribute defined on the class. The value should be a string that defines uniquely defines the data-type within it&amp;rsquo;s Topic / Stream.
2. Must have a</source>
          <target state="translated">атрибут, определенный в классе. Значение должно быть строкой, которая однозначно определяет тип данных в теме / потоке. 2. Должен иметь</target>
        </trans-unit>
        <trans-unit id="c76b77da8f80ae0f36ca4375d587a4d6e9b07cc4" translate="yes" xml:space="preserve">
          <source>attribute required on every serializer class. When sending, a producer includes the schema version number in the message data. Then, when a consumer receives a message, it looks for a register serializer with a matching version number. If no serializer is found with a matching version number, a</source>
          <target state="translated">атрибут,необходимый для каждого класса сериализатора.При отправке производитель включает в данные сообщения номер версии схемы.Затем,когда потребитель получает сообщение,он ищет сериализатор схемы с соответствующим номером версии.Если сериализатор не найден с соответствующим номером версии,то</target>
        </trans-unit>
        <trans-unit id="a383ee670aa695f58764b603c943107f5067c7b4" translate="yes" xml:space="preserve">
          <source>class can be removed form the code base.</source>
          <target state="translated">класс может быть удален из базы кода.</target>
        </trans-unit>
        <trans-unit id="a2671e5741b7108b36c72c01251577ade8fb8620" translate="yes" xml:space="preserve">
          <source>class method and override the</source>
          <target state="translated">классовый метод и переопределить</target>
        </trans-unit>
        <trans-unit id="607607967c83fde63c7ac6218e62c8d8d8d9f82a" translate="yes" xml:space="preserve">
          <source>command to process messages for all consumers automatically in a round-robin fashion.</source>
          <target state="translated">команда для автоматической обработки сообщений для всех потребителей в круглосуточном режиме.</target>
        </trans-unit>
        <trans-unit id="9b7c68a918b17eb053809b198d7c9abfc142f30a" translate="yes" xml:space="preserve">
          <source>create</source>
          <target state="translated">создать</target>
        </trans-unit>
        <trans-unit id="0429b9e83b66b59909c053bc5a0efcfb4118df17" translate="yes" xml:space="preserve">
          <source>decorator to register as many consumers and topics as you need to work with. Then, run the</source>
          <target state="translated">декоратор,чтобы зарегистрировать столько потребителей и тем,сколько вам нужно для работы.Затем запустите</target>
        </trans-unit>
        <trans-unit id="6db6d22f2341a724787c19661f9a03b8af917dee" translate="yes" xml:space="preserve">
          <source>django-logpipe</source>
          <target state="translated">джанго-лог-пайп</target>
        </trans-unit>
        <trans-unit id="eb5ea3e550c8a238d1064ce1bd153ab0bb463cef" translate="yes" xml:space="preserve">
          <source>exception is raised.</source>
          <target state="translated">Исключение выдвинуто.</target>
        </trans-unit>
        <trans-unit id="8180f2a38646a5bd778ded7f5d80b0b2cc557fdc" translate="yes" xml:space="preserve">
          <source>file. If you&amp;rsquo;re using Kafka, this will look like this:</source>
          <target state="translated">файл. Если вы используете Kafka, это будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="e0146d3c2aaac8ec8c30d770f1f5ae31a3830b61" translate="yes" xml:space="preserve">
          <source>from pip.</source>
          <target state="translated">из трубы.</target>
        </trans-unit>
        <trans-unit id="2eb0d5936952bd20410363efc11f7ffc58192e78" translate="yes" xml:space="preserve">
          <source>have a few rules:</source>
          <target state="translated">есть несколько правил:</target>
        </trans-unit>
        <trans-unit id="c3bec6bcbc9b9f04e60fcb1d9c9c1a37f3e12e93" translate="yes" xml:space="preserve">
          <source>instance</source>
          <target state="translated">пример</target>
        </trans-unit>
        <trans-unit id="971ec26da6739c0841ca2036050b557b38608197" translate="yes" xml:space="preserve">
          <source>is to define a serializer. Serializers for</source>
          <target state="translated">это определить сериализатор.Сериализаторы для</target>
        </trans-unit>
        <trans-unit id="ec62eb1162567055d7591d12606567ebabf9d45a" translate="yes" xml:space="preserve">
          <source>logpipe</source>
          <target state="translated">журнал</target>
        </trans-unit>
        <trans-unit id="68ab13c1ee3eb80843c62c83ad85e5427f1354b1" translate="yes" xml:space="preserve">
          <source>logpipe.Consumer.add_ignored_message_type</source>
          <target state="translated">logpipe.Consumer.add_ignored_message_type</target>
        </trans-unit>
        <trans-unit id="866bf7a68fd126768389e054ca0333d99f633dd6" translate="yes" xml:space="preserve">
          <source>logpipe.exceptions.UnknownMessageVersionError</source>
          <target state="translated">logpipe.exceptions.UnknownMessageVersionError</target>
        </trans-unit>
        <trans-unit id="487a129194d8bab3388b17cedad6ac2309617628" translate="yes" xml:space="preserve">
          <source>lookup_instance</source>
          <target state="translated">lookup_instance</target>
        </trans-unit>
        <trans-unit id="8f30ae503298b1630ae61f30da1f4f96ec59e5b9" translate="yes" xml:space="preserve">
          <source>lookup_instance(cls, **kwargs)</source>
          <target state="translated">lookup_instance(cls,**kwargs)</target>
        </trans-unit>
        <trans-unit id="b162fbb03dc1aa300376a56456a17652d116706b" translate="yes" xml:space="preserve">
          <source>management command.</source>
          <target state="translated">командование.</target>
        </trans-unit>
        <trans-unit id="25b2a8e1649db9eb78d5a6f63c054db6cf1d25f6" translate="yes" xml:space="preserve">
          <source>method to house your custom import logic.</source>
          <target state="translated">метод для размещения вашей пользовательской логики импорта.</target>
        </trans-unit>
        <trans-unit id="946465000bd9e24c032001a54783f3574c94142e" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="translated">метод.</target>
        </trans-unit>
        <trans-unit id="f01c78cad73d84091232241f809db9ba41c59d1a" translate="yes" xml:space="preserve">
          <source>methods to apply the message. If your messages aren&amp;rsquo;t tied directly to a Django model, skip defining the</source>
          <target state="translated">методы применения сообщения. Если ваши сообщения не привязаны напрямую к модели Django, пропустите определение</target>
        </trans-unit>
        <trans-unit id="82d0b640d3bbd4f8ec32ced98b5ac12fe7458b06" translate="yes" xml:space="preserve">
          <source>model we defined above, the first step would be to update consumers to know about the new field.:</source>
          <target state="translated">модель,которую мы определили выше,первым шагом будет обновление потребителей,чтобы они знали о новой области..:</target>
        </trans-unit>
        <trans-unit id="cb018a0b6b8b13ea37b90c6cce35b1f9415e9d9a" translate="yes" xml:space="preserve">
          <source>or a class implementing an interface that mimics</source>
          <target state="translated">или класс,реализующий интерфейс,имитирующий</target>
        </trans-unit>
        <trans-unit id="ab3ccc8dba2a0cf7a1ce4d830bb8a6238ff03833" translate="yes" xml:space="preserve">
          <source>people</source>
          <target state="translated">люди</target>
        </trans-unit>
        <trans-unit id="7d77ba9fe9d607843ffbaf91b5d5b4a99d0addc6" translate="yes" xml:space="preserve">
          <source>register_consumer</source>
          <target state="translated">регистратор-потребитель</target>
        </trans-unit>
        <trans-unit id="ee3ff40d65945658f82886ab211a89acda8f669d" translate="yes" xml:space="preserve">
          <source>rest_framework.serializers.Serializer</source>
          <target state="translated">rest_framework.serializers.Serializer</target>
        </trans-unit>
        <trans-unit id="424e9779dcf2f71f85ca2c05122581ed8e4069bb" translate="yes" xml:space="preserve">
          <source>run_kafka_consumer</source>
          <target state="translated">run_kafka_consumer</target>
        </trans-unit>
        <trans-unit id="13a4a11319d31c1b323d5774f44240a9ffc984d0" translate="yes" xml:space="preserve">
          <source>save</source>
          <target state="translated">кроме</target>
        </trans-unit>
        <trans-unit id="0a29d9a6c7b1489e391f3b143cd4fbfabd7fadde" translate="yes" xml:space="preserve">
          <source>save()</source>
          <target state="translated">save()</target>
        </trans-unit>
        <trans-unit id="37ed539c0cef13959abd980bebf30f4922f606e3" translate="yes" xml:space="preserve">
          <source>send</source>
          <target state="translated">отправлять</target>
        </trans-unit>
        <trans-unit id="888c15d72e41c9f0f1882f4aea4c2d19f1a044eb" translate="yes" xml:space="preserve">
          <source>settings.py</source>
          <target state="translated">настройки.пи</target>
        </trans-unit>
        <trans-unit id="4efef4bb8b9ed78a7dd6d74fa9828da5c0783a1e" translate="yes" xml:space="preserve">
          <source>to your installed apps.</source>
          <target state="translated">к вашим установленным приложениям.</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">обновление</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
