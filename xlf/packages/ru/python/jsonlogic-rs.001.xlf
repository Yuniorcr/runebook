<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/jsonlogic-rs/">
    <body>
      <group id="jsonlogic-rs">
        <trans-unit id="d73737adc4cecff4211f205b3ff43c0275a9690b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available Via&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Доступно через&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="100f54ab7016d08c776bf5eb400bb8bf401b3295" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Language&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Язык&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d978cf366a977f9b43bc86d84f453fcb5ba09e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; from our CI experiences, this may not work for Python 3.8 on Windows.
If you are running this on a Windows machine and can confirm whether or not
this works, let us know!</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; из нашего опыта CI, это может не работать для Python 3.8 в Windows. Если вы используете это на компьютере с Windows и можете подтвердить, работает ли это, дайте нам знать!</target>
        </trans-unit>
        <trans-unit id="e0e4b44ab668c7293399a8ca9a5e825b567c473b" translate="yes" xml:space="preserve">
          <source>All operations are tested using our own test suite in Rust as well as the
shared tests for all JsonLogic implementations defined &lt;a href=&quot;http://jsonlogic.com/tests.json&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Все операции тестируются с использованием нашего собственного набора тестов в Rust, а также общих тестов для всех описанных &lt;a href=&quot;http://jsonlogic.com/tests.json&quot;&gt;здесь&lt;/a&gt; реализаций JsonLogic .</target>
        </trans-unit>
        <trans-unit id="5831acda4a827b8389227bfef92bb8d176d8e4ca" translate="yes" xml:space="preserve">
          <source>An example of chaining multiple results:</source>
          <target state="translated">Пример связывания множественных результатов:</target>
        </trans-unit>
        <trans-unit id="d37ac01df24b6b4910d8b5723cc37382d0f3e194" translate="yes" xml:space="preserve">
          <source>Being built in Rust, we are able to provide the package in a variety of
languages. The table below describes current language support:</source>
          <target state="translated">Будучи встроенными в Rust,мы можем предоставить пакет на различных языках.В таблице ниже описана текущая языковая поддержка:</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Здание</target>
        </trans-unit>
        <trans-unit id="6c98e86fc49b32d64a3b4b449a8cdd37ce4e8e8d" translate="yes" xml:space="preserve">
          <source>Cargo</source>
          <target state="translated">Грузовой</target>
        </trans-unit>
        <trans-unit id="97645330a1a0a67a4d21bf91c8598ee8ee4c9a16" translate="yes" xml:space="preserve">
          <source>Commandline</source>
          <target state="translated">Командная строка</target>
        </trans-unit>
        <trans-unit id="7ba231db8b69c78c3126e7c1ac979c8612fb475a" translate="yes" xml:space="preserve">
          <source>If a wheel does &lt;em&gt;not&lt;/em&gt; exist for your system, this will attempt to build the
package. In order for the package to build successfully, you MUST have Rust
installed on your local system, and &lt;code&gt;cargo&lt;/code&gt; MUST be present in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Если колесо &lt;em&gt;не&lt;/em&gt; существует для вашей системы, будет произведена попытка сборки пакета. Для успешной сборки пакета у вас ДОЛЖЕН быть установлен Rust в вашей локальной системе, а в вашем &lt;code&gt;PATH&lt;/code&gt; ДОЛЖЕН присутствовать &lt;code&gt;cargo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8740af5f27e71662805094227a27bf222311fa76" translate="yes" xml:space="preserve">
          <source>If you just want to use the commandline &lt;code&gt;jsonlogic&lt;/code&gt; binary:</source>
          <target state="translated">Если вы просто хотите использовать &lt;code&gt;jsonlogic&lt;/code&gt; файл jsonlogic командной строки :</target>
        </trans-unit>
        <trans-unit id="12bb7b639e3ab6dc3d745e4ba09f609bdf740848" translate="yes" xml:space="preserve">
          <source>If you would like to build or test the Python distribution, Python 3.6 or
newer must be available in your &lt;code&gt;PATH&lt;/code&gt;. The &lt;code&gt;venv&lt;/code&gt; module must be part of the
Python distribution (looking at you, Ubuntu).</source>
          <target state="translated">Если вы хотите собрать или протестировать дистрибутив Python, в вашем &lt;code&gt;PATH&lt;/code&gt; должен быть доступен Python 3.6 или новее . Модуль &lt;code&gt;venv&lt;/code&gt; должен быть частью дистрибутива Python (если посмотреть на вас, Ubuntu).</target>
        </trans-unit>
        <trans-unit id="21d30629145c689ea13de28256c6ba29f628644e" translate="yes" xml:space="preserve">
          <source>If you would like to run tests for the WASM package, &lt;code&gt;node&lt;/code&gt; 10 or newer must be
available in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Если вы хотите запустить тесты для пакета WASM, в вашем &lt;code&gt;PATH&lt;/code&gt; должен быть доступен &lt;code&gt;node&lt;/code&gt; 10 или новее .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="820d0909e9b671cc84d8d89d8c976f60005be210" translate="yes" xml:space="preserve">
          <source>JavaScript (as WASM)</source>
          <target state="translated">JavaScript (как WASM)</target>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="42711534b8f39ba938bd6719c707f2031c439f7d" translate="yes" xml:space="preserve">
          <source>JsonLogic implemented with a Rust backend</source>
          <target state="translated">JsonLogic,реализованный с бэкэндом Rust.</target>
        </trans-unit>
        <trans-unit id="d81381ad21a195e6a8edb90dde47a36fc7e985dc" translate="yes" xml:space="preserve">
          <source>Node Package via &lt;a href=&quot;https://www.npmjs.com/package/@bestow/jsonlogic-rs&quot;&gt;NPM&lt;/a&gt;</source>
          <target state="translated">Пакет узлов через &lt;a href=&quot;https://www.npmjs.com/package/@bestow/jsonlogic-rs&quot;&gt;NPM&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1b33239879f037fa7056be2c1c53971cb54787e" translate="yes" xml:space="preserve">
          <source>Node/Browser</source>
          <target state="translated">Узел/браузер</target>
        </trans-unit>
        <trans-unit id="7924070d81775e573c33d271a1576618206c58f7" translate="yes" xml:space="preserve">
          <source>Note that the package is distributed as a node package, so you'll need to use
&lt;code&gt;browserify&lt;/code&gt;, &lt;code&gt;webpack&lt;/code&gt;, or similar to install for the browser.</source>
          <target state="translated">Обратите внимание, что пакет распространяется как пакет узла, поэтому вам потребуется использовать &lt;code&gt;browserify&lt;/code&gt; , &lt;code&gt;webpack&lt;/code&gt; или аналогичные средства для установки в браузере.</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Предпосылки</target>
        </trans-unit>
        <trans-unit id="1cb0bee5478facc7715136ce6ca34b0fe11136cb" translate="yes" xml:space="preserve">
          <source>Project Status</source>
          <target state="translated">Статус проекта</target>
        </trans-unit>
        <trans-unit id="33e72da85f21769ca9a8ee3181ea9def0321f98f" translate="yes" xml:space="preserve">
          <source>PyPI</source>
          <target state="translated">PyPI</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Питон</target>
        </trans-unit>
        <trans-unit id="3db74efa0be8ce0796c674c7c44fd1c34852ed79" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;jsonlogic --help&lt;/code&gt; the most up-to-date usage.</source>
          <target state="translated">Запустите &lt;code&gt;jsonlogic --help&lt;/code&gt; для наиболее актуального использования.</target>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="translated">Ржавчина</target>
        </trans-unit>
        <trans-unit id="94c93370113da1530dd030935b611c10a40030d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Building&quot;&gt;Building&lt;/a&gt; below for more details.</source>
          <target state="translated">См. &amp;laquo; &lt;a href=&quot;#Building&quot;&gt;Строительство&amp;raquo;&lt;/a&gt; ниже для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="58fd115d1b08adcd81e3cd4063b89d341a1059f9" translate="yes" xml:space="preserve">
          <source>Supports Python 3.6+.</source>
          <target state="translated">Поддержка Python 3.6+.</target>
        </trans-unit>
        <trans-unit id="6d970f6d6d932d6adca15b0d8a70c491ee266519" translate="yes" xml:space="preserve">
          <source>The built WASM package will be in &lt;code&gt;js/&lt;/code&gt;. This package is directly importable
from &lt;code&gt;node&lt;/code&gt;, but needs to be browserified in order to be used in the browser.</source>
          <target state="translated">Собранный пакет WASM будет в &lt;code&gt;js/&lt;/code&gt; . Этот пакет можно напрямую импортировать из &lt;code&gt;node&lt;/code&gt; , но его необходимо просмотреть, чтобы использовать в браузере.</target>
        </trans-unit>
        <trans-unit id="2c178a7557e7b2677d86c1f802afe02c592d7dcf" translate="yes" xml:space="preserve">
          <source>The python distribution consists both of the C extension generated from the
Rust and a thin wrapper found in &lt;code&gt;py/jsonlogic_rs/&lt;/code&gt;. &lt;code&gt;make develop-py&lt;/code&gt; will
compile the C extension and place it in that directory, where it will be
importable by your local venv. When building wheels, the wrapper and the C
extension are all packaged together into the resultant wheel, which will
be found in &lt;code&gt;dist/&lt;/code&gt;. When building an sdist, the Rust extension is not compiled.
The Rust and Python source are distributed together in a &lt;code&gt;.tar.gz&lt;/code&gt; file, again
found in &lt;code&gt;dist/&lt;/code&gt;.</source>
          <target state="translated">Дистрибутив python состоит как из расширения C, созданного на основе Rust, так и из тонкой оболочки, которая находится в &lt;code&gt;py/jsonlogic_rs/&lt;/code&gt; . &lt;code&gt;make develop-py&lt;/code&gt; скомпилирует расширение C и поместит его в этот каталог, где он будет импортирован вашим локальным venv. При сборке колес обертка и расширение C упаковываются вместе в результирующее колесо, которое находится в &lt;code&gt;dist/&lt;/code&gt; . При сборке sdist расширение Rust не компилируется. Исходный код Rust и Python распространяется вместе в файле &lt;code&gt;.tar.gz&lt;/code&gt; , который снова находится в &lt;code&gt;dist/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1149e91090a0196701c09d8b14709d84f71f07a4" translate="yes" xml:space="preserve">
          <source>This is an implementation of  the &lt;a href=&quot;http://jsonlogic.com/&quot;&gt;JsonLogic&lt;/a&gt; specification in Rust.</source>
          <target state="translated">Это реализация спецификации &lt;a href=&quot;http://jsonlogic.com/&quot;&gt;JsonLogic&lt;/a&gt; в Rust.</target>
        </trans-unit>
        <trans-unit id="f8cd888e4ce7b8d496c4cae463fdbe3fee51e6d2" translate="yes" xml:space="preserve">
          <source>This will automatically create a virtual environment in &lt;code&gt;venv/&lt;/code&gt;, install
the necessary packages, and then install &lt;code&gt;jsonlogic_rs&lt;/code&gt; into that environment.</source>
          <target state="translated">Это автоматически создаст виртуальную среду в &lt;code&gt;venv/&lt;/code&gt; , установит необходимые пакеты, а затем установит &lt;code&gt;jsonlogic_rs&lt;/code&gt; в эту среду.</target>
        </trans-unit>
        <trans-unit id="28a12e26040ce743a2ef0e4f26c056717346a6ef" translate="yes" xml:space="preserve">
          <source>To build a production source distribution:</source>
          <target state="translated">Чтобы построить дистрибуцию источников производства:</target>
        </trans-unit>
        <trans-unit id="da7cfdbe3c23dddf3ce9ce6243b18ddbb084a6db" translate="yes" xml:space="preserve">
          <source>To build a wheel (specific to your current system architecture and python
version):</source>
          <target state="translated">Для построения колеса (специфического для вашей текущей архитектуры системы и версии питона):</target>
        </trans-unit>
        <trans-unit id="023a3af5b4d5274607ce8f5dbb00a0b75bbec1b7" translate="yes" xml:space="preserve">
          <source>To build the Rust library, just run &lt;code&gt;cargo build&lt;/code&gt;.</source>
          <target state="translated">Чтобы собрать библиотеку Rust, просто запустите &lt;code&gt;cargo build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e041e86f81a8736f07aea797e990e57477e7f11b" translate="yes" xml:space="preserve">
          <source>To perform a dev install of the Python package, run:</source>
          <target state="translated">Чтобы выполнить установку пакета Python,запустите:</target>
        </trans-unit>
        <trans-unit id="67c3e40438629ab02e0df13e2c978ce9b971d9c4" translate="yes" xml:space="preserve">
          <source>To use as a Rust library, add to your &lt;code&gt;Cargo.toml&lt;/code&gt;:</source>
          <target state="translated">Для использования в качестве библиотеки Rust добавьте в &lt;code&gt;Cargo.toml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Использование</target>
        </trans-unit>
        <trans-unit id="05246491325c5d174b82e5fe85d5788c1a164aba" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;jsonlogic&lt;/code&gt; on the cmdline to explore an API:</source>
          <target state="translated">Использование &lt;code&gt;jsonlogic&lt;/code&gt; в командной строке для изучения API:</target>
        </trans-unit>
        <trans-unit id="9b3f1e07a2364545d66c31d18234666c8c789ce0" translate="yes" xml:space="preserve">
          <source>We also implement the &lt;code&gt;?:&lt;/code&gt;, which is not described in that specification
but is a direct alias for &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">Мы также реализуем &lt;code&gt;?:&lt;/code&gt; , который не описан в этой спецификации, но является прямым псевдонимом &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0643c216d42fa73b0cea0ebc5ebe54b22658d5da" translate="yes" xml:space="preserve">
          <source>We are working on adding new operations with improved type safety, as well
as the ability to define functions as JsonLogic. We will communicate with
the broader JsonLogic community to see if we can make them part of the
standard as we do so.</source>
          <target state="translated">Мы работаем над добавлением новых операций с улучшенной безопасностью типа,а также возможностью определения функций как JsonLogic.Мы свяжемся с более широким сообществом JsonLogic,чтобы узнать,сможем ли мы сделать их частью стандарта по мере того,как мы это делаем.</target>
        </trans-unit>
        <trans-unit id="05920badbde1bebce61d394ec357c54fbfb91537" translate="yes" xml:space="preserve">
          <source>We implement 100% of the standard supported operations defined &lt;a href=&quot;http://jsonlogic.com/operations.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Мы выполняем 100% стандартных поддерживаемых операций, определенных &lt;a href=&quot;http://jsonlogic.com/operations.html&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="051061c35dede06e751f127657cfd8dabc9b47ce" translate="yes" xml:space="preserve">
          <source>WebAssembly</source>
          <target state="translated">WebAssembly</target>
        </trans-unit>
        <trans-unit id="7e409f559bf3a92a805cf96e2714d0e6c93a3e0c" translate="yes" xml:space="preserve">
          <source>Wheels are distributed for many platforms, so you can often just run:</source>
          <target state="translated">Колеса распределены для многих платформ,так что часто вы можете просто работать:</target>
        </trans-unit>
        <trans-unit id="c2b74be4837907b6b90281b88fc05f487a5c71ca" translate="yes" xml:space="preserve">
          <source>You can build a debug WASM release with</source>
          <target state="translated">Вы можете построить отладочный релиз WASM с помощью</target>
        </trans-unit>
        <trans-unit id="899ee7d3fca1f14acdc3476dabc461f19e33d27e" translate="yes" xml:space="preserve">
          <source>You can build a production WASM release with</source>
          <target state="translated">Вы можете построить промышленный релиз WASM с помощью</target>
        </trans-unit>
        <trans-unit id="9414810992a02fa99fa86e102a0dc5c9dfead22b" translate="yes" xml:space="preserve">
          <source>You can create a release build with &lt;code&gt;make build&lt;/code&gt;.</source>
          <target state="translated">Вы можете создать сборку выпуска с помощью &lt;code&gt;make build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb2708a21d417e46c818816fd592fe180c4303d0" translate="yes" xml:space="preserve">
          <source>You can install JsonLogic using npm or yarn. In NPM:</source>
          <target state="translated">Вы можете установить JsonLogic,используя npm или пряжу.В NPM:</target>
        </trans-unit>
        <trans-unit id="1d42a5e0e52895f4ededd30fcb8e5c9091c0eb72" translate="yes" xml:space="preserve">
          <source>You must have Rust installed and &lt;code&gt;cargo&lt;/code&gt; available in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">У вас должен быть установлен Rust и &lt;code&gt;cargo&lt;/code&gt; доступен в вашем &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="797c21e1f5e332d42b2af953b9e841d6a3ffa0a9" translate="yes" xml:space="preserve">
          <source>json-logic-rs</source>
          <target state="translated">json-logic-rs</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
