<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/pies/">
    <body>
      <group id="pies">
        <trans-unit id="360a72ba92a8e7dbbe0db810ac81c662d1f815e1" translate="yes" xml:space="preserve">
          <source>Different Imports (The Bad)</source>
          <target state="translated">Различные импорты (Плохие)</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Пример:</target>
        </trans-unit>
        <trans-unit id="9048cb10ec70612c7aa5a2b24dfa54ec218d85b3" translate="yes" xml:space="preserve">
          <source>Full List:</source>
          <target state="translated">Полный список:</target>
        </trans-unit>
        <trans-unit id="5a1198fbca49df3b9353761343f6ab00ba7526e3" translate="yes" xml:space="preserve">
          <source>Functions:</source>
          <target state="translated">Функции:</target>
        </trans-unit>
        <trans-unit id="b7af0a6bb83cf27dccfe48140237a456644cd45c" translate="yes" xml:space="preserve">
          <source>How does pies differ from six?</source>
          <target state="translated">Чем пироги отличаются от шести?</target>
        </trans-unit>
        <trans-unit id="17bf02433c0cdceeeda525bffff3dbc2762e72a2" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m pretty sure a bunch. If you run into any problems or have any ideas
please don&amp;rsquo;t hesitate to file a bug, submit a pull request, or email me
at &lt;a href=&quot;mailto:timothy.crosley%40gmail.com&quot;&gt;timothy.crosley@gmail.com&lt;/a&gt;.</source>
          <target state="translated">I&amp;rsquo;m pretty sure a bunch. If you run into any problems or have any ideas please don&amp;rsquo;t hesitate to file a bug, submit a pull request, or email me at &lt;a href=&quot;mailto:timothy.crosley%40gmail.com&quot;&gt;timothy.crosley@gmail.com&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dceda35d497532579aeab70981b2e030e46924a2" translate="yes" xml:space="preserve">
          <source>Imports:</source>
          <target state="translated">Импорт:</target>
        </trans-unit>
        <trans-unit id="184b2abc85cf142077b54bfc2ca3226d75addd23" translate="yes" xml:space="preserve">
          <source>Installing pies</source>
          <target state="translated">Установка пирогов</target>
        </trans-unit>
        <trans-unit id="2ddf62d39e0f0dc0fa7dca120d3f34dcc1d27990" translate="yes" xml:space="preserve">
          <source>Instead of providing a bunch of custom methods (leading to Python code
that looks out of place on any version) pies aims to back port as many
of the Python3 api calls, imports, and objects to Python2 - Relying on
special syntax only when absolutely necessary.</source>
          <target state="translated">Вместо того,чтобы предоставлять кучу пользовательских методов (приводящих к Python-коду,который выглядит неуместным на любой версии),пироги стремятся к обратному портированию столько,сколько Python3 api вызывает,импортирует,и объектов на Python2-полагаясь на специальный синтаксис только тогда,когда это абсолютно необходимо.</target>
        </trans-unit>
        <trans-unit id="dd15ed847eb94f54eb8aba9c271964afede5e3a8" translate="yes" xml:space="preserve">
          <source>Integrating pies into your diet</source>
          <target state="translated">Интеграция пирогов в ваш рацион</target>
        </trans-unit>
        <trans-unit id="b8ce6a323e61f4395eefc0104867841dc76fde6f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s eat some pies!</source>
          <target state="translated">Let&amp;rsquo;s eat some pies!</target>
        </trans-unit>
        <trans-unit id="20b2802e26f9778c5155af72f4dc7037d6d8473d" translate="yes" xml:space="preserve">
          <source>NewClass(with_metaclass(metaclass, parent_class)) - Should replace
both &amp;ldquo;&lt;strong&gt;metaclass&lt;/strong&gt; = metaclass&amp;rdquo; and &amp;ldquo;NewClass(metaclass=metaclass)&amp;rdquo;
as a way to assign meta-classes.</source>
          <target state="translated">NewClass(with_metaclass(metaclass, parent_class)) - Should replace both &amp;ldquo;&lt;strong&gt;metaclass&lt;/strong&gt; = metaclass&amp;rdquo; and &amp;ldquo;NewClass(metaclass=metaclass)&amp;rdquo; as a way to assign meta-classes.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Обзор</target>
        </trans-unit>
        <trans-unit id="434d6b4c8eddfad4057dcc46b5bb2047508a5f9f" translate="yes" xml:space="preserve">
          <source>PY2 - True if running on Python2</source>
          <target state="translated">PY2-Верно,если работает на Python2.</target>
        </trans-unit>
        <trans-unit id="489401b752c3632643b1290a0931f67fe985e0e6" translate="yes" xml:space="preserve">
          <source>PY3 - True if running on Python3</source>
          <target state="translated">PY3-Верно,если работает на Python3.</target>
        </trans-unit>
        <trans-unit id="4e7e69e0c13bd9b6db43b25e1d8422e7b07cb2b4" translate="yes" xml:space="preserve">
          <source>Pies is a Python2 &amp;amp; 3 Compatibility layer with the philosophy that all
code should be Python3 code. Starting from this viewpoint means that
when running on Python3 pies adds virtually no overhead.</source>
          <target state="translated">Pies is a Python2 &amp;amp; 3 Compatibility layer with the philosophy that all code should be Python3 code. Starting from this viewpoint means that when running on Python3 pies adds virtually no overhead.</target>
        </trans-unit>
        <trans-unit id="c0afb16f781d351dfc8b96cf28e77ba6d0c75a4a" translate="yes" xml:space="preserve">
          <source>Pies is significantly smaller and simpler than six because it assumes
for everything possible the developer is using the Python 3 compatible
versions included with Python 2.6+, whereas six tries to maintain
compatibility with Python 2.4 - leading to many more overrides and
further into different language territory. Additionally, as stated
above, where possible pies tries to enable you to not have to change
syntax at all.</source>
          <target state="translated">Пироги значительно меньше и проще шести,так как предполагается,что разработчик использует все возможные версии Python 3,входящие в состав Python 2.6+,в то время как шесть пытаются поддерживать совместимость с Python 2.4,что приводит к гораздо большему количеству перезагрузок и далее на другую языковую территорию.Кроме того,как было сказано выше,там,где это возможно,пироги пытаются дать вам возможность вообще не менять синтаксис.</target>
        </trans-unit>
        <trans-unit id="58bc20a8b221d519bb24e2fb9e4e741ec518929c" translate="yes" xml:space="preserve">
          <source>Sadly, there is still special syntax that is present for corner cases.</source>
          <target state="translated">К сожалению,для угловых корпусов все еще существует особый синтаксис.</target>
        </trans-unit>
        <trans-unit id="23f45e6276795c2f8a64e7429fc63c3222af15d3" translate="yes" xml:space="preserve">
          <source>Some Python3 Modules have moved around so much compared to their Python2
counterpart, that I found it necessary to create special versions of
them to obtain the Python3 naming on both environments. Since these
modules exist already in Python2 allowing them to be imported by the
Python3 module name directly is not possible. Instead, you must import
these modules from pies.</source>
          <target state="translated">Некоторые модули Python3 настолько продвинулись по сравнению со своим аналогом Python2,что я счел необходимым создать их специальные версии для получения именования Python3 в обеих средах.Так как эти модули уже существуют на Python2,то импортировать их по имени модуля Python3 напрямую невозможно.Вместо этого необходимо импортировать эти модули из пирогов.</target>
        </trans-unit>
        <trans-unit id="7dd983eeac216f9b2fd7edef74077294d8910452" translate="yes" xml:space="preserve">
          <source>Special Syntax (The Ugly)</source>
          <target state="translated">Специальный синтаксис (Уродливый)</target>
        </trans-unit>
        <trans-unit id="71b9f81312a912f581ac74b4c41e1dabf6deb89c" translate="yes" xml:space="preserve">
          <source>StringIO</source>
          <target state="translated">StringIO</target>
        </trans-unit>
        <trans-unit id="ed196fe47becbfdf8131eceee0e0f2930a768097" translate="yes" xml:space="preserve">
          <source>Thanks and I hope you enjoy pies!</source>
          <target state="translated">Спасибо и надеюсь,вам понравятся пироги!</target>
        </trans-unit>
        <trans-unit id="ada24347833936019a006069f07dcea72dbcfe80" translate="yes" xml:space="preserve">
          <source>The best part of Pies is how much Python3 code works unchanged in
Python2</source>
          <target state="translated">Лучшая часть Pies-это то,насколько код Python3 работает без изменений на Python2.</target>
        </trans-unit>
        <trans-unit id="802cc38fe587ae2fb8ae80b7736ed13123a34827" translate="yes" xml:space="preserve">
          <source>The simplest (and tastiest) way to write one program that runs on both
Python 2.6+ and Python 3.</source>
          <target state="translated">Самый простой (и вкусный)способ написать одну программу,которая работает как на Python 2.6+,так и на Python 3.</target>
        </trans-unit>
        <trans-unit id="7dddb968165620e8b43dd44985d58eb834659c25" translate="yes" xml:space="preserve">
          <source>The simplest way to write one program that runs on both Python 2 and Python 3.</source>
          <target state="translated">Самый простой способ написать одну программу,которая работает и на Python 2,и на Python 3.</target>
        </trans-unit>
        <trans-unit id="47bb6942d8c86bfc1ed4bd3dd8250068944faaa2" translate="yes" xml:space="preserve">
          <source>Then simply write standard Python3 code, and enjoy Python2 Support.</source>
          <target state="translated">Затем просто напишите стандартный код Python3 и наслаждайтесь поддержкой Python2.</target>
        </trans-unit>
        <trans-unit id="1c02047b4473ab1d57fc7225f4164216e6bcfaf2" translate="yes" xml:space="preserve">
          <source>Types:</source>
          <target state="translated">Типы:</target>
        </trans-unit>
        <trans-unit id="b3c960b15dfb49e28c7de29e99a770484f4a3e5c" translate="yes" xml:space="preserve">
          <source>Using and integrating pies into an existing Python 3+ code base (to
achieve Python 2 &amp;amp; 3 dual support) couldn&amp;rsquo;t be simpler:</source>
          <target state="translated">Using and integrating pies into an existing Python 3+ code base (to achieve Python 2 &amp;amp; 3 dual support) couldn&amp;rsquo;t be simpler:</target>
        </trans-unit>
        <trans-unit id="63dd96b853f828dc7b88341031eedea75a8013ce" translate="yes" xml:space="preserve">
          <source>What Could be Improved?</source>
          <target state="translated">Что можно улучшить?</target>
        </trans-unit>
        <trans-unit id="b957420e419fa56ec101e78936309943166910ca" translate="yes" xml:space="preserve">
          <source>Works Unchanged (The Good)</source>
          <target state="translated">Работает без изменений (Хорошо)</target>
        </trans-unit>
        <trans-unit id="415e8b762f52dba735a8941f5c118bbcbe9c97d0" translate="yes" xml:space="preserve">
          <source>_thread</source>
          <target state="translated">_thread</target>
        </trans-unit>
        <trans-unit id="e750ee7c231477c66be61075d1aafe532a03970f" translate="yes" xml:space="preserve">
          <source>argparse</source>
          <target state="translated">спорьте</target>
        </trans-unit>
        <trans-unit id="bd1dc6f71297c711fd62c63df1bdbc3f49918cb3" translate="yes" xml:space="preserve">
          <source>builtins</source>
          <target state="translated">сборки</target>
        </trans-unit>
        <trans-unit id="54fbf8f1436efb45dc92c7b654f7df58ada0aa8e" translate="yes" xml:space="preserve">
          <source>chr (creates a unichr object in Python2)</source>
          <target state="translated">Крис (создает унихронный объект на Питоне2)</target>
        </trans-unit>
        <trans-unit id="fa4b9d69fdddc7c1be7bed9440621400b383b43f" translate="yes" xml:space="preserve">
          <source>collections</source>
          <target state="translated">сборники</target>
        </trans-unit>
        <trans-unit id="ee1a0d3a3caf4d6f94a335d17bca73a7cb84241d" translate="yes" xml:space="preserve">
          <source>configparser</source>
          <target state="translated">конфигуратор</target>
        </trans-unit>
        <trans-unit id="ab35c43829ce98dc88aea7d1ef2916dda07ee980" translate="yes" xml:space="preserve">
          <source>copyreg</source>
          <target state="translated">копир</target>
        </trans-unit>
        <trans-unit id="8e1fd1320c1ec0c9644c1dbff1bc8cd3935be19e" translate="yes" xml:space="preserve">
          <source>dbm</source>
          <target state="translated">dbm</target>
        </trans-unit>
        <trans-unit id="e7692d30a488467949e7f8b021e892c987db43fa" translate="yes" xml:space="preserve">
          <source>dict (creating a dict using dict() will give you all the special
Python3 itemview results, but using {} will not)</source>
          <target state="translated">dict (создание диктата с помощью dict()даст вам все специальные результаты просмотра элементов Python3,но использование {}не даст)</target>
        </trans-unit>
        <trans-unit id="5f00adeb3587c4675b5df206645fce9bb10bf118" translate="yes" xml:space="preserve">
          <source>enum (also adds this library to Python 3.0-3.3)</source>
          <target state="translated">enum (также добавляет эту библиотеку на Python 3.0-3.3)</target>
        </trans-unit>
        <trans-unit id="1c8327beb048ecc8d498a4875cdb939157d2c13f" translate="yes" xml:space="preserve">
          <source>execute() - enables Python 3 style exec statements on both
environments.</source>
          <target state="translated">execute()-включает операторы выполнения в стиле Python 3 в обеих средах.</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">фильтр</target>
        </trans-unit>
        <trans-unit id="080913a90df6a23c631e6066a3c5acd7eb9501d1" translate="yes" xml:space="preserve">
          <source>functools</source>
          <target state="translated">functools</target>
        </trans-unit>
        <trans-unit id="950a39b6c2934bb72f2def76c71e88e9c035385f" translate="yes" xml:space="preserve">
          <source>html</source>
          <target state="translated">html</target>
        </trans-unit>
        <trans-unit id="77b5f8e343a90f6f597751021fb8b7a08fe83083" translate="yes" xml:space="preserve">
          <source>http</source>
          <target state="translated">http</target>
        </trans-unit>
        <trans-unit id="7ebbccbf2a9ebaa9338648798afddf195f6f1b63" translate="yes" xml:space="preserve">
          <source>imp</source>
          <target state="translated">чертёнок</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">ввод</target>
        </trans-unit>
        <trans-unit id="49be68b50b4114f1cff097173f907fafa38ec2fc" translate="yes" xml:space="preserve">
          <source>integer_types - may want to use isinstance(variable, integer_types)
instead of type(variable, int) as long values will not match int in
Python2.</source>
          <target state="translated">integer_types-может захотеть использовать isinstance(переменная,integer_types)вместо type(переменная,int),так как длинные значения не будут совпадать с int на Python2.</target>
        </trans-unit>
        <trans-unit id="1f99aaadb49d0e9a391056218660558a1eb627cc" translate="yes" xml:space="preserve">
          <source>ipaddress</source>
          <target state="translated">ipaddress</target>
        </trans-unit>
        <trans-unit id="56fce9ff1c24bbd0c0bdab718701317363477a4b" translate="yes" xml:space="preserve">
          <source>itemsview(collection) - should replace collection.iteritems() where
you do not control the collection passed in</source>
          <target state="translated">itemsview(collection)-должен заменить collection.iteritems(),где вы не контролируете коллекцию,переданную в</target>
        </trans-unit>
        <trans-unit id="9e9cf1097fbb8c0af843641c0e32781c81ce4931" translate="yes" xml:space="preserve">
          <source>itertools</source>
          <target state="translated">итертуалы</target>
        </trans-unit>
        <trans-unit id="68453ae413da5cf8e3bc9e2c356c02c01b04f3c9" translate="yes" xml:space="preserve">
          <source>keysview(collection) - should replace collection.keys() where you do
not control the collection passed in</source>
          <target state="translated">keyview(collection)-должен заменить collection.keys(),в которой вы не контролируете коллекцию,переданную в</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">карта</target>
        </trans-unit>
        <trans-unit id="edee9402d198b04ac77dcf5dc9cc3dac44573782" translate="yes" xml:space="preserve">
          <source>next</source>
          <target state="translated">следующий</target>
        </trans-unit>
        <trans-unit id="117d056d354fc7c542fd73b1c4ffea4a1e926ff2" translate="yes" xml:space="preserve">
          <source>object (&lt;strong&gt;str&lt;/strong&gt; automatically has correct behavior on all versions of
Python)</source>
          <target state="translated">object (&lt;strong&gt;str&lt;/strong&gt; automatically has correct behavior on all versions of Python)</target>
        </trans-unit>
        <trans-unit id="23d29a1e5ae63b782e6282a05f8eba18a5eebc52" translate="yes" xml:space="preserve">
          <source>or if you prefer:</source>
          <target state="translated">или если хочешь:</target>
        </trans-unit>
        <trans-unit id="a4561d3eb3b70a05c27c8ecfe455b03bd467781c" translate="yes" xml:space="preserve">
          <source>pickle</source>
          <target state="translated">солёность</target>
        </trans-unit>
        <trans-unit id="1038345ecc525ca37383914c8d7839e94ccf5448" translate="yes" xml:space="preserve">
          <source>queue</source>
          <target state="translated">очередь</target>
        </trans-unit>
        <trans-unit id="4d55af37dbbb6a42088d917caa1ca25428ec42c9" translate="yes" xml:space="preserve">
          <source>range</source>
          <target state="translated">диапазон</target>
        </trans-unit>
        <trans-unit id="4307c1b718e0dd2c96b77e05d4827f6802623996" translate="yes" xml:space="preserve">
          <source>reprlib</source>
          <target state="translated">перепечатка</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">круглый стол</target>
        </trans-unit>
        <trans-unit id="855643850a1549d742ce77f76beea31e9d1ca69c" translate="yes" xml:space="preserve">
          <source>socketserver</source>
          <target state="translated">socket-сервер</target>
        </trans-unit>
        <trans-unit id="8f4ed5882c316fa17f02b572f775753c58e6f25a" translate="yes" xml:space="preserve">
          <source>str (creates a unicode object in Python2)</source>
          <target state="translated">str (создает юникодный объект на Python2)</target>
        </trans-unit>
        <trans-unit id="b4c56ee8d2854166dec66644f541b85247105b2c" translate="yes" xml:space="preserve">
          <source>sys</source>
          <target state="translated">sys</target>
        </trans-unit>
        <trans-unit id="874309fd15998300ad67f63253327ea691eac9bf" translate="yes" xml:space="preserve">
          <source>u(&amp;lsquo;text&amp;rsquo;) - should replace u&amp;rsquo;text&amp;rsquo; made available for ease of porting
code from Python2</source>
          <target state="translated">u(&amp;lsquo;text&amp;rsquo;) - should replace u&amp;rsquo;text&amp;rsquo; made available for ease of porting code from Python2</target>
        </trans-unit>
        <trans-unit id="94e060874450b5ea724bb6ce5ca7be4f6a73416b" translate="yes" xml:space="preserve">
          <source>unittest</source>
          <target state="translated">юниттест</target>
        </trans-unit>
        <trans-unit id="3822d782ad529813b3145b8766bf6e025d43bd00" translate="yes" xml:space="preserve">
          <source>urllib</source>
          <target state="translated">urllib</target>
        </trans-unit>
        <trans-unit id="0060733e07bb456d375b0b1e8c38ece5ec4e49bc" translate="yes" xml:space="preserve">
          <source>valuesview(collection) - should replace collection.values() where you
do not control the collection passed in</source>
          <target state="translated">valuesview(collection)-должен заменить collection.values(),где вы не контролируете коллекцию,переданную в</target>
        </trans-unit>
        <trans-unit id="55733fa7281475713457e2a5b98b05b30868cc59" translate="yes" xml:space="preserve">
          <source>xmlrpc</source>
          <target state="translated">xmlrpc</target>
        </trans-unit>
        <trans-unit id="f13e27693c85aed522df8c3fcb0bb0110ca54e14" translate="yes" xml:space="preserve">
          <source>zip</source>
          <target state="translated">zip</target>
        </trans-unit>
        <trans-unit id="6415c2d844d4e6ce1c534ee71f1d8a7e411903ea" translate="yes" xml:space="preserve">
          <source>~Timothy Crosley</source>
          <target state="translated">~ Тимоти Кросли</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
