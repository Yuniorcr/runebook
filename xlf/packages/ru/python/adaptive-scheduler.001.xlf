<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://pypi.org/project/adaptive-scheduler/">
    <body>
      <group id="adaptive-scheduler">
        <trans-unit id="ae6e563675bb267063adaad14299f480079e2e41" translate="yes" xml:space="preserve">
          <source>(like in the section above).
Then a &amp;ldquo;job manager&amp;rdquo; writes and submits</source>
          <target state="translated">(как в разделе выше). Затем &amp;laquo;менеджер по работе&amp;raquo; пишет и отправляет</target>
        </trans-unit>
        <trans-unit id="7b2138614d3b0c749f6158f0d6aa23a97b567088" translate="yes" xml:space="preserve">
          <source>(re)submits job scripts</source>
          <target state="translated">(повторно) отправляет сценарии работы</target>
        </trans-unit>
        <trans-unit id="12479829422730ef87a79c8f38f1fc22e68c0736" translate="yes" xml:space="preserve">
          <source>) or 1 core for 1 job (</source>
          <target state="translated">) или 1 ядро ​​на 1 работу (</target>
        </trans-unit>
        <trans-unit id="4195feab30b89c94b65d8b99012c8b1334700032" translate="yes" xml:space="preserve">
          <source>) while scheduling hundreds of jobs.</source>
          <target state="translated">) при планировании сотен заданий.</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">, или</target>
        </trans-unit>
        <trans-unit id="cb5f9be6acf23b2604c1efbc1fc3724da89efff3" translate="yes" xml:space="preserve">
          <source>.
The job script starts a Python file</source>
          <target state="translated">. Сценарий задания запускает файл Python</target>
        </trans-unit>
        <trans-unit id="5f19d042d217e3c21adacc024da8fb9b4a967741" translate="yes" xml:space="preserve">
          <source>. The creation and running of these jobs are managed by</source>
          <target state="translated">. Созданием и запуском этих заданий управляет</target>
        </trans-unit>
        <trans-unit id="1ad1c08df74c2c30b83674d2a4de267c1f0070b8" translate="yes" xml:space="preserve">
          <source>. This means that your calculation will definitely run, even though the cluster might be fully occupied at the moment. Because of this approach, there is almost no limit to how many cores you want to use. You can either use 10 nodes for 1 job (</source>
          <target state="translated">. Это означает, что ваш расчет обязательно будет запущен, даже если в данный момент кластер может быть полностью занят. Благодаря такому подходу ограничения на количество используемых ядер практически отсутствуют. Вы можете использовать 10 узлов для 1 задания (</target>
        </trans-unit>
        <trans-unit id="934d75754d2a089d441b206cf610a72472fb414f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; This is still the pre-alpha development stage.</source>
          <target state="translated">&lt;strong&gt;ВНИМАНИЕ:&lt;/strong&gt; это все еще этап пре-альфа разработки.</target>
        </trans-unit>
        <trans-unit id="1c8333472f9b68268b798e09f3ce5bbde25bc7dd" translate="yes" xml:space="preserve">
          <source>And use</source>
          <target state="translated">И использование</target>
        </trans-unit>
        <trans-unit id="8d3df588853849c28bf775cd2b8ffaf9171935a7" translate="yes" xml:space="preserve">
          <source>But how does it &lt;em&gt;really&lt;/em&gt; work?</source>
          <target state="translated">Но как это на &lt;em&gt;самом деле&lt;/em&gt; работает?</target>
        </trans-unit>
        <trans-unit id="46d6291587f63012ec0ce0921ebf35bdb66ddffe" translate="yes" xml:space="preserve">
          <source>Design goals</source>
          <target state="translated">Цели дизайна</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Разработка</target>
        </trans-unit>
        <trans-unit id="cf16722c59fe4c2fb3b542f05a87efb4fc0ffb80" translate="yes" xml:space="preserve">
          <source>Everything is written such that the computation is maximally local. This means that is one of the jobs crashes, there is no problem and it will automatically schedule a new one and continue the calculation where it left off (because of Adaptive&amp;rsquo;s periodic saving functionality). Even if the central &amp;ldquo;job manager&amp;rdquo; dies, the jobs will continue to run (although no new jobs will be scheduled.)</source>
          <target state="translated">Все написано так, чтобы расчет был максимально локальным. Это означает, что одно из заданий вылетает из строя, проблем нет, и оно автоматически планирует новое задание и продолжит вычисление с того места, где оно было остановлено (из-за функции периодического сохранения Adaptive). Даже если центральный &amp;laquo;диспетчер заданий&amp;raquo; выйдет из строя, задания будут продолжать выполняться (хотя новые задания не будут запланированы).</target>
        </trans-unit>
        <trans-unit id="20dcf8424db2ba99721bbe5dfb9fbd32bb1337ab" translate="yes" xml:space="preserve">
          <source>Handles random crashes (or node evictions) with minimal data loss</source>
          <target state="translated">Обрабатывает случайные сбои (или вытеснения узлов)с минимальной потерей данных.</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">Как это работает?</target>
        </trans-unit>
        <trans-unit id="2f35640566dc90ff77af08ddabaaff2f31a973e6" translate="yes" xml:space="preserve">
          <source>In a Jupyter notebook we can start the &amp;ldquo;job manager&amp;rdquo; and the &amp;ldquo;database manager&amp;rdquo;, and create the</source>
          <target state="translated">В записной книжке Jupyter мы можем запустить &amp;laquo;диспетчер заданий&amp;raquo; и &amp;laquo;диспетчер базы данных&amp;raquo; и создать</target>
        </trans-unit>
        <trans-unit id="1c04cc7ac5c32af03d6ff5716df884f3d26ac668" translate="yes" xml:space="preserve">
          <source>In order to not pollute the history with the output of the notebooks, please setup the git filter by executing</source>
          <target state="translated">Чтобы не загрязнять историю выводом ноутбуков,настройте git-фильтр,выполнив команду</target>
        </trans-unit>
        <trans-unit id="d8729567b23ba3e328f1fe1416facc26f01221c7" translate="yes" xml:space="preserve">
          <source>Install the &lt;strong&gt;latest stable&lt;/strong&gt; version from conda with (recommended)</source>
          <target state="translated">Установите &lt;strong&gt;последнюю стабильную&lt;/strong&gt; версию от conda с помощью (рекомендуется)</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Установка</target>
        </trans-unit>
        <trans-unit id="ed1f06801eaa6a6bce2de35b7a1f6a945b41bad8" translate="yes" xml:space="preserve">
          <source>Jupyter notebook example</source>
          <target state="translated">пример ноутбука Джупитера</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Ограничения</target>
        </trans-unit>
        <trans-unit id="3c43fe4f55023fd421246b6cc375e61637a391b7" translate="yes" xml:space="preserve">
          <source>Maximizes computation locality, jobs continue to run when the main process dies</source>
          <target state="translated">Максимизирует место вычислений,задания продолжают выполняться,когда умирает основной процесс.</target>
        </trans-unit>
        <trans-unit id="bcc731ab94cc0a3318685f107618fdf809a3c00c" translate="yes" xml:space="preserve">
          <source>Minimal load on the file system</source>
          <target state="translated">Минимальная нагрузка на файловую систему</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="50eb76b48ab70224e1627019dfa77e4adc26843c" translate="yes" xml:space="preserve">
          <source>Needs to be able to run on efficiently &amp;gt;30k cores</source>
          <target state="translated">Требуется возможность эффективно работать на ядрах&amp;gt; 30 КБ</target>
        </trans-unit>
        <trans-unit id="3805b15887be42a6e7fbd3288054b90c8209c7b5" translate="yes" xml:space="preserve">
          <source>Our approach is to schedule a different job for each</source>
          <target state="translated">Наш подход заключается в том,чтобы запланировать для каждой из них отдельную работу.</target>
        </trans-unit>
        <trans-unit id="86c96179988a250937c61901da3e0eae3b865d98" translate="yes" xml:space="preserve">
          <source>Preserves Python kernel and variables inside a job (in contrast to submitting jobs for every parameter)</source>
          <target state="translated">Сохраняет ядро Python и переменные внутри задания (в отличие от представления заданий для каждого параметра).</target>
        </trans-unit>
        <trans-unit id="91ed9e732a11890c72778c4e4a9b8c14faaaa309" translate="yes" xml:space="preserve">
          <source>Removes all boilerplate of working with a scheduler</source>
          <target state="translated">Снимает все шаблоны работы с планировщиком</target>
        </trans-unit>
        <trans-unit id="afc65daa8ffad844d01f355781d6c688d425c409" translate="yes" xml:space="preserve">
          <source>Right now</source>
          <target state="translated">Прямо сейчас</target>
        </trans-unit>
        <trans-unit id="dfc3f5c9afea0c7e5cb3f1a8d0643a153d37452f" translate="yes" xml:space="preserve">
          <source>Run many</source>
          <target state="translated">Запустить много</target>
        </trans-unit>
        <trans-unit id="aed0bd3f7f5b6e837bcca23af5501d480757cc15" translate="yes" xml:space="preserve">
          <source>Run many `adaptive.Learner`s on many cores (&gt;10k) using `mpi4py.futures`, `ipyparallel`, `dask-mpi`, or `process-pool`.</source>
          <target state="translated">Запустите много `adaptive.Learner`s на многих ядрах (&gt;10k),используя `mpi4py.futures`,`ipyparallel`,`dask-mpi`,или `process-pool`.</target>
        </trans-unit>
        <trans-unit id="c0718d3c85db8d914b33fd7b6df9b02ba97979f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/basnijholt/adaptive-scheduler/blob/master/example.ipynb&quot;&gt;example.ipynb&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://github.com/basnijholt/adaptive-scheduler/blob/master/example.ipynb&quot;&gt;Example.ipynb&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="155cd9ae5a0d63f9f2580afb2b33079fc7beee21" translate="yes" xml:space="preserve">
          <source>Separates the simulation definition code from the code that runs the simulation</source>
          <target state="translated">Отделяет дефиниционный код симуляции от кода,который запускает симуляцию.</target>
        </trans-unit>
        <trans-unit id="61ad21a88b932530cbf3e00cd36786b3f97ce7dc" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You can run</source>
          <target state="translated">Это оно! Вы можете запустить</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="f4fed6dfec9004fdbd1a0fec8efc20f6da3f2f5a" translate="yes" xml:space="preserve">
          <source>The Adaptive scheduler solves the following problem, you need to run more learners than you can run with a single runner and/or can use &amp;gt;1k cores.</source>
          <target state="translated">Адаптивный планировщик решает следующую проблему: вам нужно запустить больше учеников, чем вы можете запустить с одним бегуном и / или можете использовать более 1000 ядер.</target>
        </trans-unit>
        <trans-unit id="613f99dd7ad7903195f2c82b548e65c12f04e798" translate="yes" xml:space="preserve">
          <source>Then when the job have been running for a while you can check</source>
          <target state="translated">Тогда,когда работа идет какое-то время,ты можешь проверить.</target>
        </trans-unit>
        <trans-unit id="a3bd293efdcc07ed96caeed2b5799b27c0072447" translate="yes" xml:space="preserve">
          <source>Then you start a process that creates and submits as many job-scripts as there are learners. Like:</source>
          <target state="translated">Затем вы начинаете процесс,который создает и отправляет столько надписей о вакансиях,сколько имеется учеников.Например:</target>
        </trans-unit>
        <trans-unit id="9d7a8347ffbebb037305e6b4fef55c0514f296d4" translate="yes" xml:space="preserve">
          <source>We also use &lt;a href=&quot;https://pre-commit.com&quot;&gt;pre-commit&lt;/a&gt;, so</source>
          <target state="translated">Мы также используем &lt;a href=&quot;https://pre-commit.com&quot;&gt;предварительную фиксацию&lt;/a&gt; , поэтому</target>
        </trans-unit>
        <trans-unit id="dd8082be77e9211f033a55131c1a6360f12b0e1d" translate="yes" xml:space="preserve">
          <source>What is this?</source>
          <target state="translated">Что это?</target>
        </trans-unit>
        <trans-unit id="196795bf54feec10366fca9f7d7b7ee7d474687a" translate="yes" xml:space="preserve">
          <source>Works seamlessly with the Adaptive package</source>
          <target state="translated">Безупречно работает с пакетом Adaptive</target>
        </trans-unit>
        <trans-unit id="f4c33b7c591e37531b9c5db958cde9313d0dd1ab" translate="yes" xml:space="preserve">
          <source>You create a bunch of</source>
          <target state="translated">Ты создаешь кучу</target>
        </trans-unit>
        <trans-unit id="e59b8376c79669883a149c56f79bb74df8150fb8" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t actually ever have to leave the Jupter notebook, take a look at the &lt;a href=&quot;https://github.com/basnijholt/adaptive-scheduler/blob/master/example.ipynb&quot;&gt;example notebook&lt;/a&gt;.</source>
          <target state="translated">На самом деле вам даже не придется выходить из записной книжки Jupter, взгляните на &lt;a href=&quot;https://github.com/basnijholt/adaptive-scheduler/blob/master/example.ipynb&quot;&gt;пример записной книжки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42f11fbf6bb238199436a9ab2a266d37c5b5046b" translate="yes" xml:space="preserve">
          <source>adaptive-scheduler</source>
          <target state="translated">адаптивный считыватель</target>
        </trans-unit>
        <trans-unit id="a0ad50e4d3860fb26e274ceebc0556369f92f54d" translate="yes" xml:space="preserve">
          <source>adaptive.Learner</source>
          <target state="translated">адаптивный.Учащийся</target>
        </trans-unit>
        <trans-unit id="592a8ffe43587d33281e6fee72690224bd7b94ab" translate="yes" xml:space="preserve">
          <source>adaptive_scheduler</source>
          <target state="translated">адаптивный_scheduler</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="2d6f5c92c5a06a3c1dc66886c46326ef03881f42" translate="yes" xml:space="preserve">
          <source>and corresponding</source>
          <target state="translated">и соответствующий</target>
        </trans-unit>
        <trans-unit id="2ae26256c38fcedf84aeeafcd8ec9bb67c2eb2fd" translate="yes" xml:space="preserve">
          <source>and run</source>
          <target state="translated">и бежать</target>
        </trans-unit>
        <trans-unit id="86a7b349d6240c4f483a2b3290735745a87b2dfd" translate="yes" xml:space="preserve">
          <source>basically does the following.
So, &lt;em&gt;you&lt;/em&gt; need to create</source>
          <target state="translated">в основном делает следующее. Итак, &lt;em&gt;вам&lt;/em&gt; нужно создать</target>
        </trans-unit>
        <trans-unit id="c575f3e383df5c81fb057f50806caf1436554d70" translate="yes" xml:space="preserve">
          <source>distributed</source>
          <target state="translated">распространённый</target>
        </trans-unit>
        <trans-unit id="a06fb158f0293a387f48c3d6b1cfeae7d2d4abf0" translate="yes" xml:space="preserve">
          <source>fnames</source>
          <target state="translated">имена</target>
        </trans-unit>
        <trans-unit id="b87f1e6f8826a0733bd184a2650d881229eec28d" translate="yes" xml:space="preserve">
          <source>in the repository.</source>
          <target state="translated">в хранилище.</target>
        </trans-unit>
        <trans-unit id="13455a853cd0f6056b5c34fb786d66aaace73a5c" translate="yes" xml:space="preserve">
          <source>in which the learner is run.</source>
          <target state="translated">в котором учащийся бежит.</target>
        </trans-unit>
        <trans-unit id="f1dd74b87206370f96a26355e556d7424a412bcf" translate="yes" xml:space="preserve">
          <source>ipyparallel</source>
          <target state="translated">ipypyparallel</target>
        </trans-unit>
        <trans-unit id="8967d44f688f26c995e4f0ced6da0aae5f0a18e6" translate="yes" xml:space="preserve">
          <source>ipywidget</source>
          <target state="translated">ipywidget</target>
        </trans-unit>
        <trans-unit id="01f1bb72030158cf13fa51cb5c2bd5e549387944" translate="yes" xml:space="preserve">
          <source>is only working for SLURM and PBS, however only a class like &lt;a href=&quot;https://github.com/basnijholt/adaptive-scheduler/blob/master/adaptive_scheduler/scheduler.py#L471&quot;&gt;adaptive_scheduler/scheduler.py&lt;/a&gt; would have to be implemented for another type of scheduler.
Also there are &lt;strong&gt;no tests&lt;/strong&gt; at all!</source>
          <target state="translated">работает только для SLURM и PBS, однако для другого типа планировщика потребуется реализовать только такой класс, как &lt;a href=&quot;https://github.com/basnijholt/adaptive-scheduler/blob/master/adaptive_scheduler/scheduler.py#L471&quot;&gt;adaptive_scheduler /&lt;/a&gt; scheduler.py. И &lt;strong&gt;вообще тестов нет&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="016b9db189f5963ea48a73206b3b3c76976c7d02" translate="yes" xml:space="preserve">
          <source>job scripts but &lt;em&gt;doesn&amp;rsquo;t know&lt;/em&gt; which learner it is going to run!
This is the responsibility of the &amp;ldquo;database manager&amp;rdquo;, which keeps a database of</source>
          <target state="translated">сценарии заданий, но &lt;em&gt;не знает,&lt;/em&gt; какого ученика они будут запускать! Это ответственность &amp;laquo;менеджера базы данных&amp;raquo;, который хранит базу данных</target>
        </trans-unit>
        <trans-unit id="ea79263435a3b239da922e5ff7466ca00999c5ac" translate="yes" xml:space="preserve">
          <source>job_id &amp;lt;--&amp;gt; learner</source>
          <target state="translated">job_id &amp;lt;--&amp;gt; ученик</target>
        </trans-unit>
        <trans-unit id="b879c6e092ce6406eb1f806bf3757e49981974a7" translate="yes" xml:space="preserve">
          <source>learner</source>
          <target state="translated">ученик</target>
        </trans-unit>
        <trans-unit id="990f844c2df963f8e8337f6d5ca9df9dd3d663d5" translate="yes" xml:space="preserve">
          <source>learners</source>
          <target state="translated">учащиеся</target>
        </trans-unit>
        <trans-unit id="cd2319020a2b38ce7a3b190fef323960e0cf432f" translate="yes" xml:space="preserve">
          <source>like:</source>
          <target state="translated">как..:</target>
        </trans-unit>
        <trans-unit id="b69d91753ecfb4cc41ee49626fc3776520e9d25d" translate="yes" xml:space="preserve">
          <source>max(N, max_simultaneous_jobs)</source>
          <target state="translated">max(N,max_simultaneous_jobs)</target>
        </trans-unit>
        <trans-unit id="18325797c9a04f60d170c797a1030656a0c6866b" translate="yes" xml:space="preserve">
          <source>mpi4py.futures</source>
          <target state="translated">mpi4py.futures</target>
        </trans-unit>
        <trans-unit id="5321ba3a1f7ce97ae9eaea169b5d226e46683719" translate="yes" xml:space="preserve">
          <source>or clone the repository and do a dev install (recommended for dev)</source>
          <target state="translated">или клонировать репозиторий и выполнить установку dev (рекомендуется для dev).</target>
        </trans-unit>
        <trans-unit id="86440b5a1f8c105a10fcde1fb216993fe04b6781" translate="yes" xml:space="preserve">
          <source>or from PyPI with</source>
          <target state="translated">или из PyPI с</target>
        </trans-unit>
        <trans-unit id="ddc4925dd2259bc19ec964a6d6305512efa128e9" translate="yes" xml:space="preserve">
          <source>or install &lt;strong&gt;master&lt;/strong&gt; with</source>
          <target state="translated">или установите &lt;strong&gt;мастер&lt;/strong&gt; с</target>
        </trans-unit>
        <trans-unit id="aa3a0cb7b884ee13443f4f0ea683ac08cdb7facf" translate="yes" xml:space="preserve">
          <source>pip install pre_commit</source>
          <target state="translated">предварительная установка pip</target>
        </trans-unit>
        <trans-unit id="7a3dbc2c4ead37ce907f172c43a8ea5110046217" translate="yes" xml:space="preserve">
          <source>provide very powerful engines for interactive sessions. However, when you want to connect to &amp;gt;1k cores it starts to struggle. Besides that, on a shared cluster there is often the problem of starting an interactive session with ample space available.</source>
          <target state="translated">предоставляют очень мощные движки для интерактивных сессий. Однако, когда вы хотите подключиться к&amp;gt; 1k ядер, он начинает бороться. Кроме того, в общем кластере часто возникает проблема запуска интерактивного сеанса с достаточно доступным пространством.</target>
        </trans-unit>
        <trans-unit id="d35d2bf40028fa339148e1086653d8523c227f69" translate="yes" xml:space="preserve">
          <source>run_learner.py</source>
          <target state="translated">run_learner.py</target>
        </trans-unit>
        <trans-unit id="030fad67135b396c451df9a57a719d3d635f7f0b" translate="yes" xml:space="preserve">
          <source>run_manager.info()</source>
          <target state="translated">run_manager.info()</target>
        </trans-unit>
        <trans-unit id="8f634ebeaf8e41f7dd4af94ab6716fc30bbbac75" translate="yes" xml:space="preserve">
          <source>s on many cores (&amp;gt;10k) using</source>
          <target state="translated">s на многих ядрах (&amp;gt; 10k), используя</target>
        </trans-unit>
        <trans-unit id="c90170579edbae64d864266b29d9fa069732505b" translate="yes" xml:space="preserve">
          <source>scheduler.cancel(job_names)</source>
          <target state="translated">scheduler.cancel(job_names)</target>
        </trans-unit>
        <trans-unit id="36d4c061790f8214dc1663889b8597667be9f62e" translate="yes" xml:space="preserve">
          <source>server_support.parse_log_files(job_names, database_manager, scheduler)</source>
          <target state="translated">server_support.parse_log_files(имена вакансий,database_manager,планировщик)</target>
        </trans-unit>
        <trans-unit id="74470b92cfb1ff23edcce042e27c3fe5fe77c414" translate="yes" xml:space="preserve">
          <source>such that they can be loaded, like:</source>
          <target state="translated">чтобы их можно было загрузить,например:</target>
        </trans-unit>
        <trans-unit id="07bb259b1faf419cbe8fb6957d9227a08a146f44" translate="yes" xml:space="preserve">
          <source>that shows the amount of running, pending, and finished jobs, buttons to cancel your job, and other useful information.</source>
          <target state="translated">который показывает количество запущенных,ожидающих и завершенных заданий,кнопки для отмены задания и другую полезную информацию.</target>
        </trans-unit>
        <trans-unit id="6e0fe1a6e0a4960f591237c26b48ad4598378be0" translate="yes" xml:space="preserve">
          <source>to cancel the jobs.</source>
          <target state="translated">чтобы отменить работу.</target>
        </trans-unit>
        <trans-unit id="734274a79897d59fd2455d3f9b6540c0eeea5254" translate="yes" xml:space="preserve">
          <source>which will display an interactive</source>
          <target state="translated">который отобразит интерактивный</target>
        </trans-unit>
        <trans-unit id="6199cacd4d83b7cc5dca766cb586d127cb09cca1" translate="yes" xml:space="preserve">
          <source>writes job script</source>
          <target state="translated">сценарий работы</target>
        </trans-unit>
        <trans-unit id="43c5e8646330700988c81455c75a696e47ecec8c" translate="yes" xml:space="preserve">
          <source>~adaptive_scheduler.server_support.RunManager</source>
          <target state="translated">~ adaptive_scheduler.server_support.RunManager</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
