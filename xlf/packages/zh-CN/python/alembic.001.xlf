<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/alembic/">
    <body>
      <group id="alembic">
        <trans-unit id="8458b53b78a2e5044af11eb1a958e7075036f4e6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;auto generation&amp;rdquo; of migrations. While real world migrations are far more
complex than what can be automatically determined, Alembic can still
eliminate the initial grunt work in generating new migration directives
from an altered schema.  The</source>
          <target state="translated">迁移的&amp;ldquo;自动生成&amp;rdquo;。尽管现实世界中的迁移远比可以自动确定的迁移复杂得多，但Alembic仍可以消除从更改后的架构生成新迁移指令方面的繁琐工作。的</target>
        </trans-unit>
        <trans-unit id="32c15aa6bf1cdf50f11797596e4399ff85d05265" translate="yes" xml:space="preserve">
          <source>--autogenerate</source>
          <target state="translated">-自动生成</target>
        </trans-unit>
        <trans-unit id="79be64fbfcbac730126260737683a2ace8223d9b" translate="yes" xml:space="preserve">
          <source>A database migration tool for SQLAlchemy.</source>
          <target state="translated">一个SQLAlchemy的数据库迁移工具。</target>
        </trans-unit>
        <trans-unit id="050cab9398e18c793c185ec23434d1e82433a62e" translate="yes" xml:space="preserve">
          <source>Above all, SQLAlchemy places great emphasis on polite, thoughtful, and
constructive communication between users and developers.
Please see our current Code of Conduct at
&lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">最重要的是，SQLAlchemy非常重视用户与开发人员之间的礼貌，周到和建设性的沟通。请在&lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;《行为准则&lt;/a&gt;》中查看我们当前的《行为 准则》。</target>
        </trans-unit>
        <trans-unit id="ed93ccfb2e93cce318ad215757760a5eb6a2215a" translate="yes" xml:space="preserve">
          <source>Alembic is a database migrations tool written by the author
of &lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt;.  A migrations tool
offers the following functionality:</source>
          <target state="translated">Alembic是&lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt;作者编写的数据库迁移工具。迁移工具提供以下功能：</target>
        </trans-unit>
        <trans-unit id="c523d8646d33a476249705c180bd0d84e03f3b92" translate="yes" xml:space="preserve">
          <source>Alembic is distributed under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">Alembic是根据&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT许可证发行的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6effbd95a98cf3f8922f051b4da82f21479ada3" translate="yes" xml:space="preserve">
          <source>Alembic is part of the &lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy Project&lt;/a&gt; and
adheres to the same standards and conventions as the core project.</source>
          <target state="translated">Alembic是&lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy项目的&lt;/a&gt;一部分，并遵守与核心项目相同的标准和约定。</target>
        </trans-unit>
        <trans-unit id="2caf180e7eeeb94982ba97c4515abb7904321377" translate="yes" xml:space="preserve">
          <source>Allows the scripts to execute in some sequential manner.</source>
          <target state="translated">允许脚本以某种顺序方式执行。</target>
        </trans-unit>
        <trans-unit id="b32d49f1401d4f9f889e5d35222bf1ba9ea7be2e" translate="yes" xml:space="preserve">
          <source>At long last, bring SQLite and its inablity to ALTER things into the fold,
but in such a way that SQLite&amp;rsquo;s very special workflow needs are accommodated
in an explicit way that makes the most of a bad situation, through the
concept of a &amp;ldquo;batch&amp;rdquo; migration, where multiple changes to a table can
be batched together to form a series of instructions for a single, subsequent
&amp;ldquo;move-and-copy&amp;rdquo; workflow.   You can even use &amp;ldquo;move-and-copy&amp;rdquo; workflow for
other databases, if you want to recreate a table in the background
on a busy system.</source>
          <target state="translated">最后，将SQLite及其无所作为改变了一切，但是通过&amp;ldquo;批处理&amp;rdquo;的概念，以一种明确的方式满足了SQLite的非常特殊的工作流程需求，从而最大程度地解决了糟糕的情况。迁移，其中可以将对表的多个更改一起批处理，以形成针对单个后续&amp;ldquo;移动和复制&amp;rdquo;工作流的一系列指令。如果要在繁忙的系统中在后台重新创建表，甚至可以对其他数据库使用&amp;ldquo;移动并复制&amp;rdquo;工作流。</target>
        </trans-unit>
        <trans-unit id="624f3b913fa937a736c0cd8d54bd5fadc490a2b2" translate="yes" xml:space="preserve">
          <source>Can emit ALTER statements to a database in order to change
the structure of tables and other constructs</source>
          <target state="translated">可以向数据库发出ALTER语句,以改变表的结构和其他构造。</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">行为守则</target>
        </trans-unit>
        <trans-unit id="77cb3ee1d47bde3bc338c9fbcf0e4be86b1428b5" translate="yes" xml:space="preserve">
          <source>Development / Bug reporting / Pull requests</source>
          <target state="translated">开发/错误报告/拉动请求</target>
        </trans-unit>
        <trans-unit id="567a6d33bf116fe2ed15d94b82c96f99b93c83d7" translate="yes" xml:space="preserve">
          <source>Documentation and status of Alembic is at &lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/&lt;/a&gt;</source>
          <target state="translated">Alembic的文档和状态位于&lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09eb8faa5de32a52f2a0ce8468cf52b05cd4eb3a" translate="yes" xml:space="preserve">
          <source>Full support for migrations generated as SQL scripts.   Those of us who
work in corporate environments know that direct access to DDL commands on a
production database is a rare privilege, and DBAs want textual SQL scripts.
Alembic&amp;rsquo;s usage model and commands are oriented towards being able to run a
series of migrations into a textual output file as easily as it runs them
directly to a database. Care must be taken in this mode to not invoke other
operations that rely upon in-memory SELECTs of rows - Alembic tries to
provide helper constructs like bulk_insert() to help with data-oriented
operations that are compatible with script-based DDL.</source>
          <target state="translated">完全支持以SQL脚本生成的迁移。我们中在公司环境中工作的人都知道，直接访问生产数据库上的DDL命令是一种罕见的特权，DBA需要文本SQL脚本。Alembic的使用模型和命令旨在将一系列迁移直接运行到数据库中一样容易地运行到文本输出文件中。在这种模式下必须小心，不要调用依赖于行的内存中SELECT的其他操作-Alembic尝试提供诸如bulk_insert（）之类的帮助程序结构，以帮助与基于脚本的DDL兼容的面向数据的操作。</target>
        </trans-unit>
        <trans-unit id="29352cce3621de5a7556c6dcdd7b05688c414885" translate="yes" xml:space="preserve">
          <source>Full support for transactional DDL.   The default scripts ensure that all
migrations occur within a transaction - for those databases which support
this (Postgresql, Microsoft SQL Server), migrations can be tested with no
need to manually undo changes upon failure.</source>
          <target state="translated">完全支持事务性DDL。默认的脚本确保所有的迁移都发生在一个事务中--对于那些支持这个的数据库(Postgresql,Microsoft SQL Server),迁移可以被测试,而不需要在失败时手动撤销更改。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="48ec0553f698534a6e66221e7887915615f78c49" translate="yes" xml:space="preserve">
          <source>Minimalist script construction.  Basic operations like renaming
tables/columns, adding/removing columns, changing column attributes can be
performed through one line commands like alter_column(), rename_table(),
add_constraint(). There is no need to recreate full SQLAlchemy Table
structures for simple operations like these - the functions themselves
generate minimalist schema structures behind the scenes to achieve the given
DDL sequence.</source>
          <target state="translated">最小化的脚本结构。像重命名表/列、添加/删除列、改变列属性这样的基本操作都可以通过单行命令来执行,比如 alter_column()、rename_table()、add_constraint()。不需要为这些简单的操作重新创建完整的SQLAlchemy表结构--函数本身会在幕后生成最小化的模式结构来实现给定的DDL序列。</target>
        </trans-unit>
        <trans-unit id="3b2e11fb0d5b4303d76fef2652a26da78071e8f3" translate="yes" xml:space="preserve">
          <source>Non-linear, dependency-graph versioning.   Scripts are given UUID
identifiers similarly to a DVCS, and the linkage of one script to the next
is achieved via human-editable markers within the scripts themselves.
The structure of a set of migration files is considered as a
directed-acyclic graph, meaning any migration file can be dependent
on any other arbitrary set of migration files, or none at
all.  Through this open-ended system, migration files can be organized
into branches, multiple roots, and mergepoints, without restriction.
Commands are provided to produce new branches, roots, and merges of
branches automatically.</source>
          <target state="translated">非线性、依赖图版本。脚本被赋予UUID标识符,类似于DVCS,一个脚本与下一个脚本之间的联系是通过脚本本身的人工编辑标记来实现的。一组迁移文件的结构被认为是一个定向环状图,这意味着任何一个迁移文件都可以依赖于任何其他任意的迁移文件集,或者根本不依赖于任何一个迁移文件。通过这种开放式的系统,迁移文件可以不受限制地组织成分支、多根和合并点。提供的命令可以自动产生新的分支、根和分支的合并。</target>
        </trans-unit>
        <trans-unit id="3317c96580f9a295a287a36960ca1ac3848d4c9e" translate="yes" xml:space="preserve">
          <source>Please refer to the
&lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemy Community Guide&lt;/a&gt; for
guidelines on coding and participating in this project.</source>
          <target state="translated">请参阅《 &lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemy社区指南》&lt;/a&gt;以获取有关编码和参与该项目的指南。</target>
        </trans-unit>
        <trans-unit id="fc1a4a029f51aa104cdb8b00e39f2958c1b5ae01" translate="yes" xml:space="preserve">
          <source>Provide a library of ALTER constructs that can be used by any SQLAlchemy
application. The DDL constructs build upon SQLAlchemy&amp;rsquo;s own DDLElement base
and can be used standalone by any application or script.</source>
          <target state="translated">提供可用于任何SQLAlchemy应用程序的ALTER构造的库。DDL构造基于SQLAlchemy自己的DDLElement基础，并且可以由任何应用程序或脚本独立使用。</target>
        </trans-unit>
        <trans-unit id="88b302d41e9a6a1112e7143e9e6e8f37d1265fa0" translate="yes" xml:space="preserve">
          <source>Provides a system whereby &amp;ldquo;migration scripts&amp;rdquo; may be constructed;
each script indicates a particular series of steps that can &amp;ldquo;upgrade&amp;rdquo; a
target database to a new version, and optionally a series of steps that can
&amp;ldquo;downgrade&amp;rdquo; similarly, doing the same steps in reverse.</source>
          <target state="translated">提供一种可以构建&amp;ldquo;迁移脚本&amp;rdquo;的系统；每个脚本指示可以将目标数据库&amp;ldquo;升级&amp;rdquo;到新版本的特定系列步骤，以及可选的可以类似地&amp;ldquo;降级&amp;rdquo;的一系列步骤，相反地执行相同的步骤。</target>
        </trans-unit>
        <trans-unit id="af3ce9a108e869672fca95e25ffe5a0e7aa5cb63" translate="yes" xml:space="preserve">
          <source>The SQLAlchemy Project</source>
          <target state="translated">SQLAlchemy项目</target>
        </trans-unit>
        <trans-unit id="fea6abb36b5b955e04e2da98b4c5a62bdbcd8831" translate="yes" xml:space="preserve">
          <source>The goals of Alembic are:</source>
          <target state="translated">Alembic的目标是:</target>
        </trans-unit>
        <trans-unit id="aa0b572ab1e556153ce0327b9b36c2ed88dd0e24" translate="yes" xml:space="preserve">
          <source>Very open ended and transparent configuration and operation.   A new
Alembic environment is generated from a set of templates which is selected
among a set of options when setup first occurs. The templates then deposit a
series of scripts that define fully how database connectivity is established
and how migration scripts are invoked; the migration scripts themselves are
generated from a template within that series of scripts. The scripts can
then be further customized to define exactly how databases will be
interacted with and what structure new migration files should take.</source>
          <target state="translated">非常开放和透明的配置和操作。一个新的Alembic环境是由一组模板生成的,当设置首次发生时,模板是在一组选项中选择的。然后,这些模板存放了一系列脚本,这些脚本完全定义了如何建立数据库连接和如何调用迁移脚本;迁移脚本本身是由该系列脚本中的一个模板生成的。然后,可以进一步定制脚本,以准确定义如何与数据库进行交互,以及新的迁移文件应该采取什么结构。</target>
        </trans-unit>
        <trans-unit id="ac2929a680f8164a191f94e8157db17de75f969f" translate="yes" xml:space="preserve">
          <source>feature will inspect the
current status of a database using SQLAlchemy&amp;rsquo;s schema inspection
capabilities, compare it to the current state of the database model as
specified in Python, and generate a series of &amp;ldquo;candidate&amp;rdquo; migrations,
rendering them into a new migration script as Python directives. The
developer then edits the new file, adding additional directives and data
migrations as needed, to produce a finished migration. Table and column
level changes can be detected, with constraints and indexes to follow as
well.</source>
          <target state="translated">该功能将使用SQLAlchemy的模式检查功能检查数据库的当前状态，将其与Python中指定的数据库模型的当前状态进行比较，并生成一系列&amp;ldquo;候选&amp;rdquo;迁移，并将其作为Python指令呈现到新的迁移脚本中。然后，开发人员编辑新文件，根据需要添加其他指令和数据迁移，以完成迁移。可以检测到表和列级别的更改，并遵循约束和索引。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
