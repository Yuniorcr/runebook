<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dutest/">
    <body>
      <group id="dutest">
        <trans-unit id="a8502b8c78697a48f1111c1ab0a528c9079e852e" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Doctest and unittest&amp;hellip; now they&amp;rsquo;ll live happily together&amp;rdquo;, O. Lang
(2008) The Python Papers, Volume 3, Issue 1, pp. 31:51</source>
          <target state="translated">&amp;ldquo;文档测试和单元测试&amp;hellip;&amp;hellip;现在他们将快乐地生活在一起&amp;rdquo;，O。Lang（2008）Python论文，第3卷，第1期，第31:51页</target>
        </trans-unit>
        <trans-unit id="404c8e9a8b5591e2e2768b18bc2137864b4554fc" translate="yes" xml:space="preserve">
          <source>) are used.</source>
          <target state="translated">）。</target>
        </trans-unit>
        <trans-unit id="ff52f7388d4d2806ceb3885c94a6293a9474f761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DocTestLoader&lt;/strong&gt; class in &lt;em&gt;oop.utils.dutest&lt;/em&gt; does not raise
&lt;strong&gt;ValueError&lt;/strong&gt; exception if no doctests are found in a module. This
is doctest behavior. It was assumed up to this point, but now it has
proven to be a headache when these loaders are used together with
instances of &lt;strong&gt;PackageTestLoader&lt;/strong&gt; in order to retrieve all the
tests defined across a package hierarchy.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;如果在模块中未找到&lt;strong&gt;doctest&lt;/strong&gt;，则&lt;em&gt;oop.utils.dutest&lt;/em&gt;中的&lt;strong&gt;DocTestLoader&lt;/strong&gt;类不会引发 &lt;strong&gt;ValueError&lt;/strong&gt;异常。这是doctest行为。到现在为止已经假定了这一点，但是现在已经证明，当将这些加载程序与&lt;strong&gt;PackageTestLoader&lt;/strong&gt;实例一起使用以检索整个包层次结构中定义的所有测试时，这令人头疼。</target>
        </trans-unit>
        <trans-unit id="fd7049d9e7f9f14f8c495f875ab4f3d99018d9d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PackageTestLoader&lt;/strong&gt; class added to dutest module. It loads
all the tests found throughout a package hierarchy using another
loader. The later is used for retrieving the tests contained inside
every module matching a specified pattern.</source>
          <target state="translated">&lt;strong&gt;PackageTestLoader&lt;/strong&gt;类已添加到dutest模块。它使用另一个加载器加载在整个包层次结构中找到的所有测试。后者用于检索与指定模式匹配的每个模块中包含的测试。</target>
        </trans-unit>
        <trans-unit id="9f652aac6a9688e1329df4a883e04bb8bfe63118" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dutest.main&lt;/strong&gt; is an alias for &lt;strong&gt;dutest.VerboseTestProgram&lt;/strong&gt;. This
class fixes a minor bug (&amp;hellip; IMO) I found while specifying different
verbosity levels from the command line to unittest.TestProgram. It
also employs by default &lt;strong&gt;dutest.defaultTestLoader&lt;/strong&gt; instead of
&lt;strong&gt;unittest.defaultTestLoader&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;dutest.main&lt;/strong&gt;是一个别名&lt;strong&gt;dutest.VerboseTestProgram&lt;/strong&gt;。此类修复了我在指定从命令行到unittest.TestProgram的不同详细级别时发现的一个小错误（... IMO）。默认情况下，它也使用&lt;strong&gt;dutest.defaultTestLoader&lt;/strong&gt;而不是 &lt;strong&gt;unittest.defaultTestLoader&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="85bd8ef04f5c9eb5a1f44fe9aa7a600f30d72f09" translate="yes" xml:space="preserve">
          <source>A fuller explanation can be found in the following article:</source>
          <target state="translated">更全面的解释可以在下面的文章中找到。</target>
        </trans-unit>
        <trans-unit id="cc6618a66324d83e3c93607b5d411606df646ab4" translate="yes" xml:space="preserve">
          <source>A new &lt;strong&gt;TestLoader&lt;/strong&gt; descendant now allows to load (using
unittest-style) &lt;strong&gt;TestCase&lt;/strong&gt; s which check the match made for
doctests. It provides integration with &lt;em&gt;TestProgram&lt;/em&gt;, supports
building complex &lt;strong&gt;TestSuite&lt;/strong&gt; s in a more natural way, and eases the
use of specialized instances of &lt;strong&gt;TestCase&lt;/strong&gt; s built out of doctest
examples.</source>
          <target state="translated">现在，新的&lt;strong&gt;TestLoader&lt;/strong&gt;后代允许加载（使用unittest样式）&lt;strong&gt;TestCase&lt;/strong&gt;，该&lt;strong&gt;TestCase&lt;/strong&gt;检查为doctests进行的匹配。它提供了与&lt;em&gt;TestProgram的&lt;/em&gt;集成，以更自然的方式支持构建复杂的&lt;strong&gt;TestSuite&lt;/strong&gt;，并简化了从doctest示例构建的&lt;strong&gt;TestCase&lt;/strong&gt;的特殊实例的使用。</target>
        </trans-unit>
        <trans-unit id="065161673b740534c0ff944a4dddb22a87473ca2" translate="yes" xml:space="preserve">
          <source>A new hierarchy of &lt;strong&gt;TestCase&lt;/strong&gt; descendants (extensions of
&lt;strong&gt;DocTestCase&lt;/strong&gt; class) is now possible so for example, &lt;em&gt;setUp&lt;/em&gt; and
&lt;em&gt;tearDown&lt;/em&gt; may be redefined across a hierarchy of &lt;strong&gt;TestCase&lt;/strong&gt; s
instead of providing this methods as parameters to
a function (breaking OOP philosophy and logic); or
maybe even to represent failures and errors in a
custom way.</source>
          <target state="translated">现在可以建立一个新的&lt;strong&gt;TestCase&lt;/strong&gt;子孙层次结构（&lt;strong&gt;DocTestCase&lt;/strong&gt;类的扩展 ），例如，可以在&lt;strong&gt;TestCase&lt;/strong&gt;的层次结构中重新定义&lt;em&gt;setUp&lt;/em&gt;和 &lt;em&gt;tearDown&lt;/em&gt;，而不是将此方法作为参数提供给函数（破坏了OOP的原理和逻辑）；甚至可能以自定义方式表示失败和错误。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2c9835109237c1a261069a47e855516ceb664eb" translate="yes" xml:space="preserve">
          <source>A new hierarchy of doctest TestCases is now
possible so for example, setUp and tearDown may
be redefined across a hierarchy of TestCases
instead of providing this methods as parameters to
a function (breaking OOP philosophy and logic); or
maybe even failures and errors can be represented in a
custom way.</source>
          <target state="translated">一个新的doctest TestCases层次结构现在是可能的,所以例如,setUp和 tearDown可以在TestCases的层次结构中重新定义,而不是将这些方法作为参数提供给一个函数(打破了OOP哲学和逻辑);甚至可以用一种自定义的方式来表示失败和错误。</target>
        </trans-unit>
        <trans-unit id="eb05d75ce77887f4f02765998de76cd045bf6b5c" translate="yes" xml:space="preserve">
          <source>A new unitest.TestLoader descendant now allows to load instances
of TestCases for doctests using unittest-style, supports building
complex test suites in a more natural way, and eases the use of
specialized instances of TestCase built out of doctest examples.</source>
          <target state="translated">一个新的unitest.TestLoader子代现在允许使用unittest-style为doctests加载TestCases实例,支持以更自然的方式构建复杂的测试套件,并简化使用由doctest实例构建的TestCase专门实例。</target>
        </trans-unit>
        <trans-unit id="f3037e54f61d85354df827de01f5c42f65c4bfcb" translate="yes" xml:space="preserve">
          <source>A whole new &lt;strong&gt;unittest&lt;/strong&gt; API to integrate &lt;strong&gt;doctest&lt;/strong&gt; with unittest
runners.</source>
          <target state="translated">全新的&lt;strong&gt;unittest&lt;/strong&gt; API，用于将&lt;strong&gt;doctest&lt;/strong&gt;与unittest运行程序集成在一起。</target>
        </trans-unit>
        <trans-unit id="7b27bcbfcbd07602177e08d155a41bb1bb31b5e5" translate="yes" xml:space="preserve">
          <source>A whole new unittest API for doctest adds object orientation and
eliminates functions with big signatures.</source>
          <target state="translated">一个全新的untest API,为doctest增加了面向对象的功能,并取消了大签名的函数。</target>
        </trans-unit>
        <trans-unit id="c0432053430a9a4c0e13c0d7875a05ef308fd40d" translate="yes" xml:space="preserve">
          <source>Allows to parameterize doctest behavior via doctest options</source>
          <target state="translated">允许通过doctest选项参数化doctest行为。</target>
        </trans-unit>
        <trans-unit id="3a7795c80e87d881fcc9afee9bd89249e97496eb" translate="yes" xml:space="preserve">
          <source>Allows to perform regression testing over tests written
using &lt;strong&gt;doctest&lt;/strong&gt;.</source>
          <target state="translated">允许对使用&lt;strong&gt;doctest&lt;/strong&gt;编写的测试执行回归测试。</target>
        </trans-unit>
        <trans-unit id="942aa50ebab3cc96b4a54f316874bea65c747be4" translate="yes" xml:space="preserve">
          <source>Allows to perform regression testing over tests written
using doctest.</source>
          <target state="translated">允许对使用doctest编写的测试进行回归测试。</target>
        </trans-unit>
        <trans-unit id="ff39c80d144b8d55f0042ea19a7e5861d7046051" translate="yes" xml:space="preserve">
          <source>An object-oriented API to test doctests using unittest runners.</source>
          <target state="translated">一个面向对象的API,用于使用untest runners测试doctests。</target>
        </trans-unit>
        <trans-unit id="963804ea0f0ee7afad3cf15d4b96aac64f0f8b99" translate="yes" xml:space="preserve">
          <source>Bug fixed&amp;hellip; &lt;strong&gt;DocTestCase&lt;/strong&gt; instances could not be instantiated because</source>
          <target state="translated">错误已修复&amp;hellip;&amp;hellip; &lt;strong&gt;DocTestCase&lt;/strong&gt;实例无法实例化，因为</target>
        </trans-unit>
        <trans-unit id="e03fc75ac4080fc17f64b95e299b8258f1f5b33f" translate="yes" xml:space="preserve">
          <source>Bug fixed&amp;hellip; The class &lt;strong&gt;PackageTestLoader&lt;/strong&gt; loaded the tests
defined in a packages&amp;rsquo; children but not those specified in the
top-level module. Now the tests specified in the module supplied in
to loadTestsFromModule method are also included in the resulting
test suite.</source>
          <target state="translated">错误已修复&amp;hellip;&amp;hellip; &lt;strong&gt;PackageTestLoader&lt;/strong&gt;类加载了在包子级中定义的测试，但未加载顶级模块中指定的测试。现在，在生成的测试套件中还包含在loadTestsFromModule方法中提供的模块中指定的测试。</target>
        </trans-unit>
        <trans-unit id="821fea3608fb8de5d164acb3d5b309715f0cee7e" translate="yes" xml:space="preserve">
          <source>Default test loader and runner have been added to this module as
well. The default loader is an instance of &lt;strong&gt;MultiTestLoader&lt;/strong&gt; that
combines the suites loaded by &lt;strong&gt;unittest.TestLoader&lt;/strong&gt; and
&lt;strong&gt;dutest.DocTestLoader&lt;/strong&gt;.</source>
          <target state="translated">默认的测试加载程序和运行程序也已添加到此模块中。默认的加载器是&lt;strong&gt;MultiTestLoader&lt;/strong&gt;的实例，该实例结合了&lt;strong&gt;unittest.TestLoader&lt;/strong&gt;和 &lt;strong&gt;dutest.DocTestLoader&lt;/strong&gt;加载的套件。</target>
        </trans-unit>
        <trans-unit id="0535d782a5c760e6795e64d1e3291fbaea2f33b3" translate="yes" xml:space="preserve">
          <source>Fixes a minor bug related with specifying different verbosity
levels from the command line to unittest.TestProgram (alias main).</source>
          <target state="translated">修正了一个与从命令行向 unittest.TestProgram (别名 main)指定不同的 verbosity 级别有关的小 bug。</target>
        </trans-unit>
        <trans-unit id="d37e4ddbd52aa21f081a2ee1c4e1202445378f70" translate="yes" xml:space="preserve">
          <source>Implemented</source>
          <target state="translated">已执行</target>
        </trans-unit>
        <trans-unit id="74e3f2de6178122721be3bb4e05b5d0f28c61167" translate="yes" xml:space="preserve">
          <source>In this case unittest.TestResult instances report whether
individual examples have been successfully executed, or otherwise
have failed or raised an unexpected exception. Formerly TestResult
objects contained the whole report outputted by doctest module.</source>
          <target state="translated">在这种情况下,unittest.TestResult实例会报告各个实例是否被成功执行,或者是失败了,或者是引发了意外的异常。以前的TestResult对象包含了doctest模块输出的整个报告。</target>
        </trans-unit>
        <trans-unit id="acd470cd43b1442eed0c637a8825aa1b27834bb1" translate="yes" xml:space="preserve">
          <source>It allows to report the individual results of each and every
interactive example executed during the test run. A separate entry
is created in the corresponding &lt;strong&gt;TestResult&lt;/strong&gt; instance containing
the expected value and the actual result.</source>
          <target state="translated">它允许报告测试运行期间执行的每个交互示例的单独结果。在相应的&lt;strong&gt;TestResult&lt;/strong&gt;实例中创建一个单独的条目，其中包含期望值和实际结果。</target>
        </trans-unit>
        <trans-unit id="daf4a113b2db8f7bee41d2ffdc3f90b92bc1fb7a" translate="yes" xml:space="preserve">
          <source>It is different from the Pyhton 2.4 doctest unittest API because:</source>
          <target state="translated">它与Pyhton 2.4 doctest unittest API不同,因为。</target>
        </trans-unit>
        <trans-unit id="a18ae9ab8f7cd59e8db7c09a1ecf28189a30cafe" translate="yes" xml:space="preserve">
          <source>It is not necessary to use DocTestRunner output streams in order
to collect test results.</source>
          <target state="translated">为了收集测试结果,不需要使用DocTestRunner输出流。</target>
        </trans-unit>
        <trans-unit id="5bc1ae3fef02eea24ebb56205b9bdf8e1ba4367c" translate="yes" xml:space="preserve">
          <source>It is similar to the Pyhton 2.4 doctest unittest API because:</source>
          <target state="translated">它类似于Pyhton 2.4的doctest unittest API,因为。</target>
        </trans-unit>
        <trans-unit id="d424a042e41bb5cbb0a1f5b8e60fc36508aa8ae2" translate="yes" xml:space="preserve">
          <source>Loads by default test cases for doctests plus those
formerly loaded by unittest.TestLoader</source>
          <target state="translated">以默认的方式加载doctests的测试用例以及以前由untest.TestLoader加载的测试用例。</target>
        </trans-unit>
        <trans-unit id="b0251e776980bcf9d4e4e66ff356671dc98d78c8" translate="yes" xml:space="preserve">
          <source>Module is hidden in tracebacks written to instances of</source>
          <target state="translated">模块被隐藏在写给实例的回溯中。</target>
        </trans-unit>
        <trans-unit id="c0804f69e61ecf01a1f06085cfcdd81da61adc2f" translate="yes" xml:space="preserve">
          <source>Module providing classes which extend doctest module so
as to achieve better integration with unittest.</source>
          <target state="translated">模块提供了扩展doctest模块的类,以实现与unittest更好的集成。</target>
        </trans-unit>
        <trans-unit id="ac4d519fbe284bad17b48bc2dd6a9cf0016e5590" translate="yes" xml:space="preserve">
          <source>Multiple functions in previous versions contained arguments having
mutable objects as default values. A
&lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2009-April/001617.html&quot;&gt;message sent to TiP list about default args&lt;/a&gt; explains why this is
really harmful. This has been fixed. Thanks to
Scott David Daniels &lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2009-April/001606.html&quot;&gt;for reporting the issue with default args&lt;/a&gt;
and Jesse Noller for &lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2009-April/001620.html&quot;&gt;the pointers about default args&lt;/a&gt; .</source>
          <target state="translated">先前版本中的多个函数包含将可变对象作为默认值的参数。一个 &lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2009-April/001617.html&quot;&gt;发送给小费清单有关默认ARGS消息&lt;/a&gt;解释了为什么这真的是有害的。此问题已解决。感谢Scott David Daniels&lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2009-April/001606.html&quot;&gt;报告了默认args的问题，&lt;/a&gt;感谢 Jesse Noller提供&lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2009-April/001620.html&quot;&gt;了有关默认args的指针&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">なし</target>
        </trans-unit>
        <trans-unit id="1f4bd02c4fc90b706b3c2c12249f9911bfe5ac4d" translate="yes" xml:space="preserve">
          <source>Note: The contents of this module were first implemented by the module
oop.utils.testing contained in &lt;a href=&quot;http://pypi.python.org/pypi/PyOOP&quot;&gt;PyOOP package&lt;/a&gt;.</source>
          <target state="translated">注意：该模块的内容首先由&lt;a href=&quot;http://pypi.python.org/pypi/PyOOP&quot;&gt;PyOOP包中&lt;/a&gt;包含的oop.utils.testing模块实现。</target>
        </trans-unit>
        <trans-unit id="0297034b9c92aa97ffbf2e364577570f81bf5738" translate="yes" xml:space="preserve">
          <source>Other loaders allow users to extract TestCase instances out of
TestCase descendants and doctests (and any other format) in a
single step.</source>
          <target state="translated">其他加载器允许用户从TestCase子代和doctests(以及任何其他格式)中提取TestCase实例,只需一个步骤。</target>
        </trans-unit>
        <trans-unit id="6197cb6263f6f59052ed88a461d7cf16fc130e09" translate="yes" xml:space="preserve">
          <source>Provides integration with TestProgram and unittest test runners.</source>
          <target state="translated">提供与TestProgram和untest测试运行器的集成。</target>
        </trans-unit>
        <trans-unit id="93852cfe122feda6919b1b39e9a3c745ca8dd0f8" translate="yes" xml:space="preserve">
          <source>Since the match made for individual examples is reported one by one
by instances of &lt;strong&gt;TestResult&lt;/strong&gt;, it is quite easier to automate
post-testing activities (e.g. automated test analysis). Formerly
access to this information required extra work (i.e. the full report
provided by doctest had to be parsed).</source>
          <target state="translated">由于针对单个示例的匹配由&lt;strong&gt;TestResult&lt;/strong&gt;实例逐一报告，因此自动化后测试活动（例如自动化测试分析）非常容易。以前访问此信息需要额外的工作（即，必须解析doctest提供的完整报告）。</target>
        </trans-unit>
        <trans-unit id="82ec750e2e52c721bed9bb7e1d7c9d5e3ecef8c0" translate="yes" xml:space="preserve">
          <source>Suite Fixture Setup</source>
          <target state="translated">套房灯具设置</target>
        </trans-unit>
        <trans-unit id="a0f3413027206e77b88d2fc7b1f159a41515328e" translate="yes" xml:space="preserve">
          <source>Support for multiple pattern matching styles has been added in
&lt;strong&gt;PackageTestLoader&lt;/strong&gt; trough</source>
          <target state="translated">&lt;strong&gt;PackageTestLoader&lt;/strong&gt;槽中添加了对多种模式匹配样式的支持</target>
        </trans-unit>
        <trans-unit id="11b61c6dfc8dbdd0e7b79e2e2989a3de0a9eb2a2" translate="yes" xml:space="preserve">
          <source>Test analysis require no further parsing to retrieve detailed
information about failures.</source>
          <target state="translated">测试分析不需要进一步的解析就能检索到详细的故障信息。</target>
        </trans-unit>
        <trans-unit id="10e93232f5ee13cde5c73ae6c73ca6a57a250ad6" translate="yes" xml:space="preserve">
          <source>TestResult</source>
          <target state="translated">测试结果</target>
        </trans-unit>
        <trans-unit id="1cb0b498de50f23df7ed34669c97fb998f8de5e8" translate="yes" xml:space="preserve">
          <source>The class &lt;strong&gt;oop.utils.testing.VerboseTestProgram&lt;/strong&gt; has been moved
onto dutest module. Release 0.1.0 did not include it. Thanks to
Michal Kwiatkowski for notifying me so &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;oop.utils.testing.VerboseTestProgram&lt;/strong&gt;类已移至dutest模块。版本0.1.0不包含它。感谢Michal Kwiatkowski如此通知我&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ae3d7e6272e762c3eb1335646549bff2945df99" translate="yes" xml:space="preserve">
          <source>Unix filename pattern matching (</source>
          <target state="translated">Unix文件名模式匹配 (</target>
        </trans-unit>
        <trans-unit id="9124614dbd64a460b491fc4e837197e6399201de" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in version 0.1.0:</source>
          <target state="translated">0.1.0版中的新功能：</target>
        </trans-unit>
        <trans-unit id="02c987d81bb3c770002c459f990482396806b07b" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in version 0.1.1:</source>
          <target state="translated">0.1.1版中的新功能：</target>
        </trans-unit>
        <trans-unit id="340bfdb3a8fb39daaf1eb41b679786834751a99c" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in version 0.1.2:</source>
          <target state="translated">0.1.2版中的新功能：</target>
        </trans-unit>
        <trans-unit id="67c2b61549c27b1c8be4c56b9f6288f118e236cb" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in version 0.2.1:</source>
          <target state="translated">0.2.1版中的新功能：</target>
        </trans-unit>
        <trans-unit id="c02f6290bb7b92768ec9c2ef51ea43a186f13c34" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in version 0.2.2:</source>
          <target state="translated">0.2.2版中的新功能：</target>
        </trans-unit>
        <trans-unit id="7358a6144e37820a446ba757faa48c8d7da0d8c4" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in version 0.2.3:</source>
          <target state="translated">0.2.3版中的新功能：</target>
        </trans-unit>
        <trans-unit id="f3d524df68157aa059b5e032649c63983f321851" translate="yes" xml:space="preserve">
          <source>You do not need to use &lt;strong&gt;DocTestRunner&lt;/strong&gt; output streams
to collect test results.</source>
          <target state="translated">您不需要使用&lt;strong&gt;DocTestRunner&lt;/strong&gt;输出流来收集测试结果。</target>
        </trans-unit>
        <trans-unit id="5860e9334b189f73e230c9167ca4f4d525463c66" translate="yes" xml:space="preserve">
          <source>[TIP] Fwd: An OO API for doctest / unittest integration&amp;hellip;
(&lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2008-August/000918.html&quot;&gt;http://lists.idyll.org/pipermail/testing-in-python/2008-August/000918.html&lt;/a&gt;)</source>
          <target state="translated">[提示] Fwd：面向doctest / unittest集成的OO API&amp;hellip;（&lt;a href=&quot;http://lists.idyll.org/pipermail/testing-in-python/2008-August/000918.html&quot;&gt;http://lists.idyll.org/pipermail/testing-in-python/2008-August/000918.html&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fb371bd3f45a697c7f64f3de3934a6252f9d9e2e" translate="yes" xml:space="preserve">
          <source>doctest / unittest extensions:</source>
          <target state="translated">doctest/untest扩展。</target>
        </trans-unit>
        <trans-unit id="f16e84e251fc1377bb259c07ba5eed58c33722d6" translate="yes" xml:space="preserve">
          <source>fnmatch</source>
          <target state="translated">fnmatch</target>
        </trans-unit>
        <trans-unit id="8ea1a77c93d43d6b47e020992d269e2445832422" translate="yes" xml:space="preserve">
          <source>module) is available from
now on while using &lt;strong&gt;PackageTestLoader&lt;/strong&gt;. The only thing needed is
to specify</source>
          <target state="translated">从现在开始使用&lt;strong&gt;PackageTestLoader即可&lt;/strong&gt;使用。唯一需要做的就是指定</target>
        </trans-unit>
        <trans-unit id="6da393efccb3b4b0a7a23197d0a64bada97d02ef" translate="yes" xml:space="preserve">
          <source>parameter. By default standard
regular expressions (i.e.</source>
          <target state="translated">参数。默认情况下,标准正则表达式(即</target>
        </trans-unit>
        <trans-unit id="26ec8d00fb6b55466b3a115f1d559422a7fa7aac" translate="yes" xml:space="preserve">
          <source>style</source>
          <target state="translated">风格</target>
        </trans-unit>
        <trans-unit id="b709b26939c128d46229e83202975d09fead46ff" translate="yes" xml:space="preserve">
          <source>style=REGEX</source>
          <target state="translated">style=REGEX</target>
        </trans-unit>
        <trans-unit id="2113ce86e4b0991d84886b5611b0314a715d0a17" translate="yes" xml:space="preserve">
          <source>style=UNIX</source>
          <target state="translated">style=&quot;font-size:14px;&quot;&gt;UNIX</target>
        </trans-unit>
        <trans-unit id="d5e50457562f8602368239089d366f9a3518f2c7" translate="yes" xml:space="preserve">
          <source>test pattern (i.e. set up a fixture
once before all its interactive examples are run and clean up after
they all have been run.</source>
          <target state="translated">测试模式(即在所有交互式实例运行前设置一次夹具,并在它们全部运行后进行清理。</target>
        </trans-unit>
        <trans-unit id="0d79d6d64b9f620ab5cc5cb03e2d462f832b34fa" translate="yes" xml:space="preserve">
          <source>was supplied in to the initializer as the test method
name. This bug remained hidden somehow while executing the test
using &lt;em&gt;oop.test.check_oopdbc()&lt;/em&gt;, and even when importing
oop.utils.dutest (which is actually the same implementation).</source>
          <target state="translated">作为测试方法名称提供给初始化程序。在使用&lt;em&gt;oop.test.check_oopdbc（）&lt;/em&gt;执行测试时，甚至在导入oop.utils.dutest（实际上是相同的实现）时，此bug&lt;em&gt;仍以&lt;/em&gt;某种方式隐藏。</target>
        </trans-unit>
        <trans-unit id="aa23bd7072068faeb1f4a6ac7baec292184be3e6" translate="yes" xml:space="preserve">
          <source>when a failure or an error is detected.</source>
          <target state="translated">当检测到故障或错误时。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
