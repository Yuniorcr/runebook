<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dependency-injector/">
    <body>
      <group id="dependency-injector">
        <trans-unit id="3b8349e71f199bbdd203fcf40c4fa339fd883511" translate="yes" xml:space="preserve">
          <source>-like decorators</source>
          <target state="translated">样的装饰</target>
        </trans-unit>
        <trans-unit id="4872d3bc2cc049937dd04822bea67b6664e81cda" translate="yes" xml:space="preserve">
          <source>. The assembly code might get
duplicated and it&amp;rsquo;ll become harder to change the application structure.</source>
          <target state="translated">。汇编代码可能会重复，并且更改应用程序结构会变得更加困难。</target>
        </trans-unit>
        <trans-unit id="edd400234e3867a365b6c301db0b56a9ee51807d" translate="yes" xml:space="preserve">
          <source>.override()</source>
          <target state="translated">.override（）</target>
        </trans-unit>
        <trans-unit id="c89e012e53df254ea14051716cd1022ea6359609" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does not pollute your code.&lt;/strong&gt; Your application does NOT know and does NOT depend on the framework. No</source>
          <target state="translated">&lt;strong&gt;不会污染您的代码。&lt;/strong&gt;您的应用程序不知道，也不依赖于框架。没有</target>
        </trans-unit>
        <trans-unit id="e3b34d3ccc418140d780588e4500655acca80113" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No autowiring.&lt;/strong&gt; The framework does NOT do any autowiring / autoresolving of the dependencies. You need to specify everything explicitly. Because &lt;em&gt;&amp;ldquo;Explicit is better than implicit&amp;rdquo; (PEP20)&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;没有自动接线。&lt;/strong&gt;该框架不会对依赖项进行任何自动装配/自动解析。您需要明确指定所有内容。因为&lt;em&gt;&amp;ldquo;显式优于隐式&amp;rdquo;（PEP20）&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8c13a79e4ebc84ccf83b003bf0fa01ea4d1b610d" translate="yes" xml:space="preserve">
          <source>@inject</source>
          <target state="translated">@注入</target>
        </trans-unit>
        <trans-unit id="13f2d652f70945cb85fc5562fc3600a535ffb359" translate="yes" xml:space="preserve">
          <source>After:</source>
          <target state="translated">后。</target>
        </trans-unit>
        <trans-unit id="124632435bfa35f86272114b42f6ee13b587b380" translate="yes" xml:space="preserve">
          <source>Aiohttp REST API tutorial</source>
          <target state="translated">Aiohttp REST API教程</target>
        </trans-unit>
        <trans-unit id="630df194c5b10abfa95d9d050a3cb36c24a133d2" translate="yes" xml:space="preserve">
          <source>Also</source>
          <target state="translated">另外</target>
        </trans-unit>
        <trans-unit id="72f29c668a8b14f47328aa1ea0613833eae736d3" translate="yes" xml:space="preserve">
          <source>Asyncio monitoring daemon tutorial</source>
          <target state="translated">Asyncio监控守护进程教程</target>
        </trans-unit>
        <trans-unit id="842beb51ca9c5417a27f472386d0e0d52dcc074f" translate="yes" xml:space="preserve">
          <source>Before:</source>
          <target state="translated">之前。</target>
        </trans-unit>
        <trans-unit id="7d4e7096cdd861d195c85ded8a5a818a6e19dc90" translate="yes" xml:space="preserve">
          <source>CLI application tutorial</source>
          <target state="translated">CLI应用教程</target>
        </trans-unit>
        <trans-unit id="26b72f3fe427448eea3beef3dbdfe092853a1bd0" translate="yes" xml:space="preserve">
          <source>Choose one of the following:</source>
          <target state="translated">请选择以下一项:</target>
        </trans-unit>
        <trans-unit id="c05bafdb56031bb64da1f1d1861f60118932c605" translate="yes" xml:space="preserve">
          <source>Concept</source>
          <target state="translated">理念</target>
        </trans-unit>
        <trans-unit id="483fb1ba22182ca75e86cd36f4333cd8698708c7" translate="yes" xml:space="preserve">
          <source>Dependency Injector</source>
          <target state="translated">依赖注入器</target>
        </trans-unit>
        <trans-unit id="9fb38379faa7a8f9c5b647696d704f0cc63c430d" translate="yes" xml:space="preserve">
          <source>Dependency injection is a principle that helps to decrease coupling and increase cohesion. Your
code becomes more flexible, clear and it is easier to test it.</source>
          <target state="translated">依赖注入是一个有助于减少耦合、增加内聚的原则。你的代码变得更加灵活、清晰,也更容易测试。</target>
        </trans-unit>
        <trans-unit id="b724f6450707cb72548a227a948a51df121098a3" translate="yes" xml:space="preserve">
          <source>Dependency injection microframework for Python</source>
          <target state="translated">Python的依赖注入微框架</target>
        </trans-unit>
        <trans-unit id="82ea3f936054a99bd2d984b2e6c622339f1376b7" translate="yes" xml:space="preserve">
          <source>Do no magic to your code.</source>
          <target state="translated">不要对你的代码施展魔法。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="3c98bd168d16d75129410500d4c327423064324d" translate="yes" xml:space="preserve">
          <source>Explicit is better than implicit (PEP20).</source>
          <target state="translated">显性比隐性好(PEP20)。</target>
        </trans-unit>
        <trans-unit id="a2021c6a14ba56981ac0b0f465b8d941b75996a9" translate="yes" xml:space="preserve">
          <source>Flask web application tutorial</source>
          <target state="translated">Flask网页应用教程</target>
        </trans-unit>
        <trans-unit id="47cb8cea50ae99b784872cb04de95102c3f51093" translate="yes" xml:space="preserve">
          <source>Flexibility comes with a price: now you need to assemble your objects like this</source>
          <target state="translated">灵活性是有代价的:现在你需要像这样组装你的对象。</target>
        </trans-unit>
        <trans-unit id="8b19afd09c924aed123c087dfdfea6437d4969be" translate="yes" xml:space="preserve">
          <source>Found a bug?</source>
          <target state="translated">发现一个错误?</target>
        </trans-unit>
        <trans-unit id="af90cef80988974dd76636b3adb5f472768f785d" translate="yes" xml:space="preserve">
          <source>Frequently asked questions</source>
          <target state="translated">常见的问题</target>
        </trans-unit>
        <trans-unit id="abf649533a4f7e02df9041f8c9ae5bb220899a24" translate="yes" xml:space="preserve">
          <source>Have a question?</source>
          <target state="translated">有问题吗?</target>
        </trans-unit>
        <trans-unit id="279b9d9929710d290fdd6514dbb6920c8c43cb5d" translate="yes" xml:space="preserve">
          <source>How do I start doing the dependency injection?</source>
          <target state="translated">如何开始做依赖注入?</target>
        </trans-unit>
        <trans-unit id="a77955b425c1d573d5803559506c136eb4d03137" translate="yes" xml:space="preserve">
          <source>How does it different from the other frameworks?</source>
          <target state="translated">它与其他框架有何不同?</target>
        </trans-unit>
        <trans-unit id="96d84403df087e8ddbab9116ec67bc60c23faab9" translate="yes" xml:space="preserve">
          <source>How to implement dependency injection?</source>
          <target state="translated">如何实现依赖注入?</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="380dc51b3ee7e178b515a7aad36f9d4928f62ad0" translate="yes" xml:space="preserve">
          <source>It helps in a testing. Also you can use it for configuring project for the different environments:
replace an API client with a stub on the dev or stage.</source>
          <target state="translated">它有助于测试。你也可以用它为不同的环境配置项目:在开发或阶段用一个存根替换一个API客户端。</target>
        </trans-unit>
        <trans-unit id="4c03ea31b7aab80a0b06c0d428dffd46e2388c36" translate="yes" xml:space="preserve">
          <source>It helps you in implementing the dependency injection principle.</source>
          <target state="translated">它可以帮助你实现依赖注入原则。</target>
        </trans-unit>
        <trans-unit id="742e9bbdbcf47070665dd0a29433358cb9c9835f" translate="yes" xml:space="preserve">
          <source>It provides you the container and the providers that help you describe objects assembly. When you
need an object you get it from the container. The rest of the assembly work is done by the
framework:</source>
          <target state="translated">它为你提供了容器和提供者,帮助你描述对象组装。当你需要一个对象时,你可以从容器中获取它。剩下的组装工作由框架完成。</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="dd879149f4d376bd5acc9bf6621bb7ad5c763e52" translate="yes" xml:space="preserve">
          <source>Objects do not create each other anymore. They provide a way to inject the needed dependencies
instead.</source>
          <target state="translated">对象之间不再相互创建。它们提供了一种注入所需的依赖关系的方式。</target>
        </trans-unit>
        <trans-unit id="3e586620568bd06725d8d4dd2f974b4f94152475" translate="yes" xml:space="preserve">
          <source>Open a &lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/issues&quot;&gt;Github Issue&lt;/a&gt;</source>
          <target state="translated">打开&lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/issues&quot;&gt;Github问题&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f69a9a3247acaac19c2aa037e761c97ff344f851" translate="yes" xml:space="preserve">
          <source>Retrieving of the</source>
          <target state="translated">检索</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">服务项目</target>
        </trans-unit>
        <trans-unit id="54bf0db2530299ad879a7680b8c6a1ad4a993dc1" translate="yes" xml:space="preserve">
          <source>Service(ApiClient(os.getenv('API_KEY'),os.getenv('TIMEOUT')))</source>
          <target state="translated">服务(ApiClient(os.getenv('API_KEY'),os.getenv('TIMEOUT'))</target>
        </trans-unit>
        <trans-unit id="de5f3346f5d46556e01e977a409f7f928c5a9c90" translate="yes" xml:space="preserve">
          <source>The documentation is available on the &lt;a href=&quot;http://python-dependency-injector.ets-labs.org/&quot;&gt;Read The Docs&lt;/a&gt;</source>
          <target state="translated">该文档位于&amp;ldquo;&lt;a href=&quot;http://python-dependency-injector.ets-labs.org/&quot;&gt;阅读文档&amp;rdquo;中&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45632d61c8cfaed8565de97c064fa7cc0da109f7" translate="yes" xml:space="preserve">
          <source>The framework does it for you</source>
          <target state="translated">框架为你做</target>
        </trans-unit>
        <trans-unit id="47a3e41cc81dd02328dd928829b00cd402901906" translate="yes" xml:space="preserve">
          <source>The package is available on the &lt;a href=&quot;https://pypi.org/project/dependency-injector/&quot;&gt;PyPi&lt;/a&gt;:</source>
          <target state="translated">该软件包可在&lt;a href=&quot;https://pypi.org/project/dependency-injector/&quot;&gt;PyPi&lt;/a&gt;上找到：</target>
        </trans-unit>
        <trans-unit id="2ba9fcae44512a766028e2eaa74ac1d4e56a170e" translate="yes" xml:space="preserve">
          <source>The power of the</source>
          <target state="translated">权力的力量</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">教程</target>
        </trans-unit>
        <trans-unit id="3e96892cf1fd888e9db8468833b4277544fa1606" translate="yes" xml:space="preserve">
          <source>Want to contribute?</source>
          <target state="translated">要不要帮忙?</target>
        </trans-unit>
        <trans-unit id="416c94fe04ea08b50c9dc04722849f57add61c8f" translate="yes" xml:space="preserve">
          <source>Want to help?</source>
          <target state="translated">要不要帮忙?</target>
        </trans-unit>
        <trans-unit id="9255b047fe7d8e853c2b704c505e06390aeea33a" translate="yes" xml:space="preserve">
          <source>What does Dependency Injector do?</source>
          <target state="translated">依赖注入器是做什么的?</target>
        </trans-unit>
        <trans-unit id="c0faed4abc17505972ad676b9a836996b9d82cc8" translate="yes" xml:space="preserve">
          <source>What features does the framework have?</source>
          <target state="translated">框架有哪些特点?</target>
        </trans-unit>
        <trans-unit id="60970dd5f2c0f385e28b549b8bcd1ef3748b1ada" translate="yes" xml:space="preserve">
          <source>What features the framework does NOT have?</source>
          <target state="translated">该框架不具备哪些功能?</target>
        </trans-unit>
        <trans-unit id="9c9e11934cd97180d46c62f36382348b585cc084" translate="yes" xml:space="preserve">
          <source>What is</source>
          <target state="translated">什么是</target>
        </trans-unit>
        <trans-unit id="c9af7a0a3b710b8a0c141d20390f04063cda90cf" translate="yes" xml:space="preserve">
          <source>What is dependency injection?</source>
          <target state="translated">什么是依赖注入?</target>
        </trans-unit>
        <trans-unit id="d2f0d8513c9033ae2faa4fa5784905908d16371f" translate="yes" xml:space="preserve">
          <source>What is the dependency injection?</source>
          <target state="translated">什么是依赖注入?</target>
        </trans-unit>
        <trans-unit id="b0964734aa398326e4b566f616b3bbafe15ef8e5" translate="yes" xml:space="preserve">
          <source>What price do I pay and what do I get?</source>
          <target state="translated">我付出什么代价,得到什么?</target>
        </trans-unit>
        <trans-unit id="1d852870cca6e0e66c97418542233eda7b34a5fd" translate="yes" xml:space="preserve">
          <source>Why do I need a framework for this?</source>
          <target state="translated">为什么我需要一个框架呢?</target>
        </trans-unit>
        <trans-unit id="a9d604b41514bafcf8724c2b77a9393acf946cbf" translate="yes" xml:space="preserve">
          <source>Why should I do the dependency injection?</source>
          <target state="translated">为什么要做依赖注入?</target>
        </trans-unit>
        <trans-unit id="04eadff4232eca3c35b27fe6a89d506c0fda803b" translate="yes" xml:space="preserve">
          <source>You tell the framework how to assemble your objects</source>
          <target state="translated">你告诉框架如何组装你的对象。</target>
        </trans-unit>
        <trans-unit id="4a7fe3c4ccfcfc8474e79790d498b173ab1aee45" translate="yes" xml:space="preserve">
          <source>autowiring / autoresolving of the dependencies</source>
          <target state="translated">自动配线/自动解决依赖关系。</target>
        </trans-unit>
        <trans-unit id="10d735e581f1e2505cd69675691925490e447c44" translate="yes" xml:space="preserve">
          <source>branch</source>
          <target state="translated">branch</target>
        </trans-unit>
        <trans-unit id="c2db7d9f059b722d8ec6a946f9150ec688f54550" translate="yes" xml:space="preserve">
          <source>building objects graph</source>
          <target state="translated">构建对象图</target>
        </trans-unit>
        <trans-unit id="5ed1455f7db464860c6e869dbdeaae4365da7881" translate="yes" xml:space="preserve">
          <source>container.service()</source>
          <target state="translated">container.service()</target>
        </trans-unit>
        <trans-unit id="18c1c880d2741b80318a7c01ffb3aba41a3bf68c" translate="yes" xml:space="preserve">
          <source>decorators, annotations, patching or any other magic tricks.</source>
          <target state="translated">装饰者、注释、修补或其他任何魔术。</target>
        </trans-unit>
        <trans-unit id="f359f38caba8809baefad63f4d1ee07c5d61a693" translate="yes" xml:space="preserve">
          <source>dependency injection is a principle that decreases coupling and increases cohesion</source>
          <target state="translated">依赖注入法</target>
        </trans-unit>
        <trans-unit id="418a6bc4deccf0f7d5182192d51a54e504b3f3c9" translate="yes" xml:space="preserve">
          <source>develop</source>
          <target state="translated">发展</target>
        </trans-unit>
        <trans-unit id="83a556f80693b63aa9a60b2354f9a57a6a58ac67" translate="yes" xml:space="preserve">
          <source>helps you assemble the objects.</source>
          <target state="translated">帮助你组装对象。</target>
        </trans-unit>
        <trans-unit id="b225375aaf8ea498c7507359cf31f8af7dd95586" translate="yes" xml:space="preserve">
          <source>instance now is done like this</source>
          <target state="translated">现在是这样做的</target>
        </trans-unit>
        <trans-unit id="e795d7c757bdb9c743823d1ad3259c43e0d7eeec" translate="yes" xml:space="preserve">
          <source>is a dependency injection framework for Python.</source>
          <target state="translated">是一个Python的依赖注入框架。</target>
        </trans-unit>
        <trans-unit id="be369feca1a57c9f4b6a9d560d2c7a35ff3f4dd7" translate="yes" xml:space="preserve">
          <source>is in its simplicity and straightforwardness. It is a simple tool for the powerful concept.</source>
          <target state="translated">是在它的简单和直接。它是一个简单的工具,是强大的概念。</target>
        </trans-unit>
        <trans-unit id="ff24aa7b6c186e25c1e74c215cdd2ef2679205a7" translate="yes" xml:space="preserve">
          <source>it will be extra work in the beginning</source>
          <target state="translated">前功尽弃</target>
        </trans-unit>
        <trans-unit id="fd5ff45023127808424b74c0b0d35750e6e8b8ef" translate="yes" xml:space="preserve">
          <source>it will payoff when project grows or in two weeks 😊 (when you forget what project was about)</source>
          <target state="translated">当项目成长或两周后😊(当你忘记项目的内容时),它将会得到回报</target>
        </trans-unit>
        <trans-unit id="ce138ac38dc9bbd25b41319d1d558b7d24a37bbd" translate="yes" xml:space="preserve">
          <source>makes a simple contract with you:</source>
          <target state="translated">与你签订一个简单的合同。</target>
        </trans-unit>
        <trans-unit id="01a46fb52f0c14f92da476120be7afe1ef1ec52d" translate="yes" xml:space="preserve">
          <source>method:</source>
          <target state="translated">方法。</target>
        </trans-unit>
        <trans-unit id="52bf89f90c68250234714c4fc6bd3f2918e5cdeb" translate="yes" xml:space="preserve">
          <source>on the &lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/&quot;&gt;Github&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/ets-labs/python-dependency-injector/&quot;&gt;Github上&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010d259c3c29d9323e2c06939ea26ad2667532e3" translate="yes" xml:space="preserve">
          <source>overriding of the objects in any part of the graph</source>
          <target state="translated">覆盖图中任何部分的对象。</target>
        </trans-unit>
        <trans-unit id="3f8162919fc7582387d620a57f306c540c570aa3" translate="yes" xml:space="preserve">
          <source>positional and keyword context injections</source>
          <target state="translated">位置和关键词上下文注入</target>
        </trans-unit>
        <trans-unit id="410ce539c22980b070869f025761e668c76582b0" translate="yes" xml:space="preserve">
          <source>providers: factory, singleton, thread locals registers, etc</source>
          <target state="translated">提供者:工厂、单人、线程locals寄存器等。</target>
        </trans-unit>
        <trans-unit id="2cae6b21c5b2006b76016a6f576229d38012d6db" translate="yes" xml:space="preserve">
          <source>provides a bonus in overriding any of the providers with the</source>
          <target state="translated">覆盖了任何一个具有以下特点的供应商,提供了一个奖励</target>
        </trans-unit>
        <trans-unit id="ca9b1aa8a7826595715ae6a10c82676afc3e592d" translate="yes" xml:space="preserve">
          <source>smart configuration object</source>
          <target state="translated">智能配置对象</target>
        </trans-unit>
        <trans-unit id="720c758bb527bcda9ef45e0625a86acef0778441" translate="yes" xml:space="preserve">
          <source>stands on two principles:</source>
          <target state="translated">有两个原则:</target>
        </trans-unit>
        <trans-unit id="1ad59fdb1204c3b9794958db803e63e0dd56423c" translate="yes" xml:space="preserve">
          <source>the annotations and</source>
          <target state="translated">注释和</target>
        </trans-unit>
        <trans-unit id="73f4c15e1e146bfa0fce1917dd6206c62415f6f7" translate="yes" xml:space="preserve">
          <source>the container is like a dictionary with the batteries 🔋</source>
          <target state="translated">容器就像一本字典,里面装着电池&quot;■▄。</target>
        </trans-unit>
        <trans-unit id="c3ca10d3ed59a2d6f39ca59372fab962c853f391" translate="yes" xml:space="preserve">
          <source>the providers manage the lifetime of your components, you will need factories, singletons, smart config object etc</source>
          <target state="translated">提供者管理你的组件的寿命,你将需要工厂、单子、智能配置对象等。</target>
        </trans-unit>
        <trans-unit id="010f01b8b54fbe483f320879080f7ff250093c49" translate="yes" xml:space="preserve">
          <source>this framework gives you the container and the providers</source>
          <target state="translated">这个框架为你提供了容器和提供者</target>
        </trans-unit>
        <trans-unit id="81921117bf6220c83fc584c3cefc133bc31c23f0" translate="yes" xml:space="preserve">
          <source>when you need a component, you get it from the container</source>
          <target state="translated">当你需要一个组件时,你可以从容器中获取它。</target>
        </trans-unit>
        <trans-unit id="509bffac85c53741a8f5408524083614a40f1dd5" translate="yes" xml:space="preserve">
          <source>you have no problems when you need to understand how it works or change it 😎</source>
          <target state="translated">当你需要了解它的工作原理或改变它时,你没有问题&quot;■▄▄■▓。</target>
        </trans-unit>
        <trans-unit id="96be278eaac3082c45cec1c7d0abcd748dd2fddb" translate="yes" xml:space="preserve">
          <source>you need the framework for this to not create it by your own</source>
          <target state="translated">你需要这个框架,而不是你自己创造它</target>
        </trans-unit>
        <trans-unit id="11456789f609e3163f85ff0062854839f09c804e" translate="yes" xml:space="preserve">
          <source>you need to explicitly specify the dependencies in the container</source>
          <target state="translated">你需要在容器中明确指定依赖关系</target>
        </trans-unit>
        <trans-unit id="e95ca62036afa5956846124080752815e7b9a272" translate="yes" xml:space="preserve">
          <source>you register all of your application components and their dependencies in the container</source>
          <target state="translated">您可以在容器中注册所有的应用程序组件和它们的依赖关系。</target>
        </trans-unit>
        <trans-unit id="417e2d6a2aa627b057949c8ffcbc17ed38b1781c" translate="yes" xml:space="preserve">
          <source>you start writing the code following the dependency injection principle</source>
          <target state="translated">你开始按照依赖注入原则来编写代码</target>
        </trans-unit>
        <trans-unit id="740dce2a38c13e97c15b201dd6e2e2a70ac4a4ce" translate="yes" xml:space="preserve">
          <source>your code becomes more flexible, testable and clear</source>
          <target state="translated">您的代码变得更加灵活、可测试和清晰。</target>
        </trans-unit>
        <trans-unit id="d62565bed95a471ff6b38cbf6229f9fbad00ef2a" translate="yes" xml:space="preserve">
          <source>⬅️ Open a pull request to the</source>
          <target state="translated">Open️向</target>
        </trans-unit>
        <trans-unit id="968ca54fd2056c566a5da7112807b7f1eed48c8c" translate="yes" xml:space="preserve">
          <source>⭐️ Star the</source>
          <target state="translated">⭐️给</target>
        </trans-unit>
        <trans-unit id="22487d3e4a75d9528a6ec94e624b23df21c97368" translate="yes" xml:space="preserve">
          <source>🆕 Start a new project with the</source>
          <target state="translated">with使用</target>
        </trans-unit>
        <trans-unit id="defbd8101b33869f846847d4d93fd996747ecc44" translate="yes" xml:space="preserve">
          <source>💬 Tell your friend about the</source>
          <target state="translated">💬告诉你的朋友</target>
        </trans-unit>
        <trans-unit id="7a369eb43c7d7028518bbd4d801c65f8dc624961" translate="yes" xml:space="preserve">
          <source>🔀 Fork the project</source>
          <target state="translated">🔀分叉项目</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
