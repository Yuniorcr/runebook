<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/htrc-feature-reader/">
    <body>
      <group id="htrc-feature-reader">
        <trans-unit id="87bc19f00183252413e8eb82a6c9c23b4dfe8d3a" translate="yes" xml:space="preserve">
          <source>&amp;lt;/style&amp;gt;</source>
          <target state="translated">&amp;lt;/ style&amp;gt;</target>
        </trans-unit>
        <trans-unit id="afede0e3a3ca5d7212bbedad27a3729080ec4b68" translate="yes" xml:space="preserve">
          <source>&amp;lt;style scoped&amp;gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</source>
          <target state="translated">&amp;lt;style scoped&amp;gt; .dataframe tbody tr th：only-of-type {vertical-align：middle; }</target>
        </trans-unit>
        <trans-unit id="003e8ecdac1b420ae7fd1fe995fbd5d61cb5ae0c" translate="yes" xml:space="preserve">
          <source>'s</source>
          <target state="translated">的</target>
        </trans-unit>
        <trans-unit id="67dacef84d9f3b80a108a5dee2618bf7f5f078f2" translate="yes" xml:space="preserve">
          <source>./■</source>
          <target state="translated">./■</target>
        </trans-unit>
        <trans-unit id="ea1507278b49bc15abff5fe005045d1868439296" translate="yes" xml:space="preserve">
          <source>306 rows &amp;times; 5 columns</source>
          <target state="translated">306行&amp;times;5列</target>
        </trans-unit>
        <trans-unit id="433fe535cd67d506a1083938b7930ef447772fe3" translate="yes" xml:space="preserve">
          <source>7224 rows &amp;times; 5 columns</source>
          <target state="translated">7224行&amp;times;5列</target>
        </trans-unit>
        <trans-unit id="c3ef007201656162e84913feecb085da6277a049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.tokenlist()&lt;/code&gt; can be manipulated in various ways. You can case-fold, for example:</source>
          <target state="translated">&lt;code&gt;Page.tokenlist()&lt;/code&gt; 可以通过多种方式进行操作。您可以进行折叠，例如：</target>
        </trans-unit>
        <trans-unit id="8d68c0128879bfb2fe79bfa8540550e110739198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utils&lt;/code&gt; includes an Rsyncing utility, &lt;code&gt;download_file&lt;/code&gt;. This requires Rsync to be installed on your system.</source>
          <target state="translated">&lt;code&gt;utils&lt;/code&gt; 包含一个Rsyncing实用程序 &lt;code&gt;download_file&lt;/code&gt; 。这需要在系统上安装Rsync。</target>
        </trans-unit>
        <trans-unit id="9b2d7376e05cc9d6c6ecbd79a73a127400a34823" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;At large-scales, using &lt;code&gt;vol.metadata&lt;/code&gt; is an impolite and inefficient amount of server pinging; there are better ways to query the API than one volume at a time. Read about the &lt;a href=&quot;https://wiki.htrc.illinois.edu/display/COM/Solr+Proxy+API+User+Guide&quot;&gt;HTRC Solr Proxy&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在大规模情况下，使用 &lt;code&gt;vol.metadata&lt;/code&gt; 是不礼貌且效率低下的服务器ping操作。与一次查询一个卷相比，有更好的查询API的方法。阅读有关&lt;a href=&quot;https://wiki.htrc.illinois.edu/display/COM/Solr+Proxy+API+User+Guide&quot;&gt;HTRC Solr代理的信息&lt;/a&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="416bcb36ff6301d2231c9ecd303a0e9d3df50aea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: for new Python users, a more in-depth lesson is published by Programming Historian: &lt;a href=&quot;http://programminghistorian.org/lessons/text-mining-with-extracted-features&quot;&gt;Text Mining in Python through the HTRC Feature Reader&lt;/a&gt;. That lesson is also the official citation associated the HTRC Feature Reader library.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：对于Python的新用户，Programming Historian出版了更深入的课程：&lt;a href=&quot;http://programminghistorian.org/lessons/text-mining-with-extracted-features&quot;&gt;通过HTRC Feature Reader在Python中进行文本挖掘&lt;/a&gt;。该课程也是与HTRC Feature Reader库相关的官方引用。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07e936c942a5ceed306232e3cec0961d2ddc9f92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://hdl.handle.net/2027/hvd.32044093320364&quot;&gt;The Nautilus.&lt;/a&gt;&lt;/strong&gt; by &lt;em&gt;Delaware Museum of Natural History.&lt;/em&gt; (1904, 222 pages) - &lt;code&gt;hvd.32044093320364&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://hdl.handle.net/2027/hvd.32044093320364&quot;&gt;鹦鹉螺。&lt;/a&gt;&lt;/strong&gt;通过&lt;em&gt;自然史博物馆特拉华州。&lt;/em&gt;（ &lt;code&gt;hvd.32044093320364&lt;/code&gt; 页） -hvd.32044093320364</target>
        </trans-unit>
        <trans-unit id="c41a4659c40bd15632a7e8806e8e3ce5b388ab34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Citation&lt;/strong&gt;:
Peter Organisciak and Boris Capitanu, &quot;Text Mining in Python through the HTRC Feature Reader,&quot; &lt;em&gt;Programming Historian&lt;/em&gt;, (22 November 2016), &lt;a href=&quot;http://programminghistorian.org/lessons/text-mining-with-extracted-features&quot;&gt;http://programminghistorian.org/lessons/text-mining-with-extracted-features&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;引用&lt;/strong&gt;：Peter Organisciak和Boris Capitanu，&amp;ldquo;通过HTRC功能阅读器使用Python进行文本挖掘&amp;rdquo;，&lt;em&gt;Programming Historian&lt;/em&gt;，（2016年11月22日），&lt;a href=&quot;http://programminghistorian.org/lessons/text-mining-with-extracted-features&quot;&gt;http：&lt;/a&gt; //programminghistorian.org/lessons/text-mining-with-extracted-features 。</target>
        </trans-unit>
        <trans-unit id="5476bb3bb13d2380e847653a9afc0e28d14a47cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Links&lt;/strong&gt;:
&lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html&quot;&gt;HTRC Feature Reader Documentation&lt;/a&gt; | &lt;a href=&quot;https://sharc.hathitrust.org/features&quot;&gt;HTRC Extracted Features Dataset&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;链接&lt;/strong&gt;： &lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html&quot;&gt;HTRC功能阅读器文档&lt;/a&gt;| &lt;a href=&quot;https://sharc.hathitrust.org/features&quot;&gt;HTRC提取的特征数据集&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9a3ddefe5ed3e828226208c90c4496d2ab1887f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table of Contents&lt;/strong&gt;: &lt;a href=&quot;#Installation&quot;&gt;Installation&lt;/a&gt; | &lt;a href=&quot;#Usage&quot;&gt;Usage&lt;/a&gt; |
&lt;a href=&quot;#Additional-Notes&quot;&gt;Additional Notes&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;目录&lt;/strong&gt;：&lt;a href=&quot;#Installation&quot;&gt;安装&lt;/a&gt;| &lt;a href=&quot;#Usage&quot;&gt;用法&lt;/a&gt;| &lt;a href=&quot;#Additional-Notes&quot;&gt;补充说明&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;用法：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c851d517207a4cb44c26e047844f03c194a52184" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html#htrc_features.feature_reader.Volume&quot;&gt;Volume&lt;/a&gt; contains information about the current work and access to the pages of the work. All the metadata fields from the HTRC JSON file are accessible as properties of the volume object, including &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;language&lt;/em&gt;, &lt;em&gt;imprint&lt;/em&gt;, &lt;em&gt;oclc&lt;/em&gt;, &lt;em&gt;pubDate&lt;/em&gt;, and &lt;em&gt;genre&lt;/em&gt;. The main identifier &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;pageCount&lt;/em&gt; are also accessible, and you can find the URL for the Full View of the text in the HathiTrust Digital Library - if it exists - with &lt;code&gt;vol.handle_url&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html#htrc_features.feature_reader.Volume&quot;&gt;卷&lt;/a&gt;包含关于当前工作，并获得了工作的网页信息。 HTRC JSON文件中的所有元数据字段都可以作为卷对象的属性进行访问，包括&lt;em&gt;title&lt;/em&gt;，&lt;em&gt;language&lt;/em&gt;，&lt;em&gt;imprint&lt;/em&gt;，&lt;em&gt;oclc&lt;/em&gt;，&lt;em&gt;pubDate&lt;/em&gt;和&lt;em&gt;genre&lt;/em&gt;。主号标识&lt;em&gt;ID&lt;/em&gt;和&lt;em&gt;页页次&lt;/em&gt;也访问，你可以找到的URL HathiTrust数字图书馆中的文字完整视图-如果有的话-与 &lt;code&gt;vol.handle_url&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6886107051f6296b301c835737605aa7c616a6a" translate="yes" xml:space="preserve">
          <source>Additional Notes</source>
          <target state="translated">补充说明</target>
        </trans-unit>
        <trans-unit id="96731dbaea6a5720dd33b64dc334ff765eec736a" translate="yes" xml:space="preserve">
          <source>Advanced Features</source>
          <target state="translated">高级功能</target>
        </trans-unit>
        <trans-unit id="7f0c23b86b79910cc63214a4b8c83c7295562cc4" translate="yes" xml:space="preserve">
          <source>Alternately, if you are using &lt;a href=&quot;https://www.continuum.io/downloads&quot;&gt;Anaconda&lt;/a&gt;, you can install with</source>
          <target state="translated">或者，如果您使用的是&lt;a href=&quot;https://www.continuum.io/downloads&quot;&gt;Anaconda&lt;/a&gt;，则可以使用</target>
        </trans-unit>
        <trans-unit id="6eaed3cac79e1bce937e239632dd82e6b8006709" translate="yes" xml:space="preserve">
          <source>Another source of bibliographic metadata is the HathiTrust Bib API. You can access this information through the URL returned with &lt;code&gt;vol.ht_bib_url&lt;/code&gt;:</source>
          <target state="translated">书目元数据的另一个来源是HathiTrust Bib API。您可以通过 &lt;code&gt;vol.ht_bib_url&lt;/code&gt; 返回的URL访问此信息：</target>
        </trans-unit>
        <trans-unit id="029f38c0d787134ba890f16093c2f641f6bb0bf2" translate="yes" xml:space="preserve">
          <source>As an alternative to multiprocessing in Python, my preference is to have simpler Python scripts and to use GNU Parallel on the command line. To do this, you can set up your Python script to take variable length arguments of feature file paths, and to print to stdout.</source>
          <target state="translated">作为Python中多处理的替代方案,我更倾向于使用更简单的Python脚本,并在命令行上使用GNU Parallel。要做到这一点,你可以设置你的Python脚本来接受特征文件路径的可变长度参数,并打印到stdout。</target>
        </trans-unit>
        <trans-unit id="07306c8e3c85378f3f7ab169c6863cdf220910c0" translate="yes" xml:space="preserve">
          <source>CD</source>
          <target state="translated">光盘</target>
        </trans-unit>
        <trans-unit id="e1385c29827c0421d323ac9f4284e20d06fd3c59" translate="yes" xml:space="preserve">
          <source>Chunking</source>
          <target state="translated">分块</target>
        </trans-unit>
        <trans-unit id="f91a09d0814557a6167b7b78507532901eab44a1" translate="yes" xml:space="preserve">
          <source>DT</source>
          <target state="translated">DT</target>
        </trans-unit>
        <trans-unit id="b6efff04d7c735dcf31793d3bfabc3f0aef11663" translate="yes" xml:space="preserve">
          <source>Dask</source>
          <target state="translated">达斯克</target>
        </trans-unit>
        <trans-unit id="50cfccc911dd97063a4eb00c401c036b0d2dc15d" translate="yes" xml:space="preserve">
          <source>Dask offers easy multithreading (shared resources) and multiprocessing (separate processes) in Python, and is particularly convenient because it includes a subset of Pandas DataFrames.</source>
          <target state="translated">Dask在Python中提供了方便的多线程(共享资源)和多处理(独立进程),由于它包含了Pandas DataFrames的一个子集,所以特别方便。</target>
        </trans-unit>
        <trans-unit id="1264015efbf29b7f67293b2dc8298b498825f377" translate="yes" xml:space="preserve">
          <source>Download file to &lt;code&gt;/tmp&lt;/code&gt;:</source>
          <target state="translated">将文件下载到 &lt;code&gt;/tmp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4a9b3aea8e4b96c56e52012de11cb17a8c3187c4" translate="yes" xml:space="preserve">
          <source>Download file to current directory, keeping pairtree directory structure,
i.e. &lt;code&gt;./nyp/pairtree_root/33/43/30/42/06/88/94/33433042068894/nyp.33433042068894.json.bz2&lt;/code&gt;:</source>
          <target state="translated">将文件下载到当前目录，并保持pairtree目录结构，即 &lt;code&gt;./nyp/pairtree_root/33/43/30/42/06/88/94/33433042068894/nyp.33433042068894.json.bz2&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="38235dda0ea47850c583348dd0c2bcc996cf7c7f" translate="yes" xml:space="preserve">
          <source>Download multiple files to the current directory:</source>
          <target state="translated">下载多个文件到当前目录。</target>
        </trans-unit>
        <trans-unit id="3ed0760cf54b5819c55660a736afe99c9b913074" translate="yes" xml:space="preserve">
          <source>Download one file to the current directory:</source>
          <target state="translated">下载一个文件到当前目录。</target>
        </trans-unit>
        <trans-unit id="0d10d3078a5ca648cbaee5d9b0e2982369b5d2ee" translate="yes" xml:space="preserve">
          <source>Downloading files within the library</source>
          <target state="translated">下载图书馆内的文件</target>
        </trans-unit>
        <trans-unit id="2cf2cae341b34974add298d8a60bfdfefd9bb964" translate="yes" xml:space="preserve">
          <source>For example, I have a small collection of knitting-related books at &lt;a href=&quot;https://babel.hathitrust.org/cgi/mb?a=listis&amp;amp;c=1174943610&quot;&gt;https://babel.hathitrust.org/cgi/mb?a=listis&amp;amp;c=1174943610&lt;/a&gt;. To read the feature files for those books:</source>
          <target state="translated">例如，我在&lt;a href=&quot;https://babel.hathitrust.org/cgi/mb?a=listis&amp;amp;c=1174943610&quot;&gt;https://babel.hathitrust.org/cgi/mb?a=listis&amp;amp;c=1174943610上&lt;/a&gt;有一本与针织相关的书籍。要阅读这些书籍的功能文件：</target>
        </trans-unit>
        <trans-unit id="81a17a639598c59e5845f7b0300e0d5999c6fb94" translate="yes" xml:space="preserve">
          <source>For large jobs, you'll want to use multiprocessing or multithreading to speed up your process. This is left up to your preferred method, either within Python or by spawning multiple scripts from the command line. Here are two approaches that I like.</source>
          <target state="translated">对于大型作业,你会希望使用多处理或多线程来加速你的进程。这取决于你喜欢的方法,可以在Python中进行,也可以通过从命令行生成多个脚本。下面是我喜欢的两种方法。</target>
        </trans-unit>
        <trans-unit id="f21ecd5fdbaaca4a9b6ad407e43e4a149da7aa62" translate="yes" xml:space="preserve">
          <source>GNU Parallel</source>
          <target state="translated">GNU Parallel</target>
        </trans-unit>
        <trans-unit id="68f973a9feea4b5bc4dd6689c9c9ca1c92bcb67e" translate="yes" xml:space="preserve">
          <source>Given the nature of data analysis, using iPython with Jupyter notebooks for preparing your scripts interactively is a recommended convenience. Most basically, it can be installed with &lt;code&gt;pip install ipython[notebook]&lt;/code&gt; and run with &lt;code&gt;ipython notebook&lt;/code&gt; from the command line, which starts a session that you can access through your browser. If this doesn't work, consult the &lt;a href=&quot;http://ipython.readthedocs.org/&quot;&gt;iPython documentation&lt;/a&gt;.</source>
          <target state="translated">考虑到数据分析的本质，建议将iPython与Jupyter笔记本一起使用以交互方式准备脚本是一个方便的建议。基本上，它可以通过 &lt;code&gt;pip install ipython[notebook]&lt;/code&gt; 进行安装，并通过命令行从 &lt;code&gt;ipython notebook&lt;/code&gt; 运行，这将启动一个会话，您可以通过浏览器访问该会话。如果这不起作用，请查阅&lt;a href=&quot;http://ipython.readthedocs.org/&quot;&gt;iPython文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d282dbace5af388a2d1ef11a90ba64e6190ff04e" translate="yes" xml:space="preserve">
          <source>HTRC-Features</source>
          <target state="translated">HTRC-特点</target>
        </trans-unit>
        <trans-unit id="d5dd3ebaf0dcdf5fed49bcc0ae4a80bd8007e1cf" translate="yes" xml:space="preserve">
          <source>Here is a minimal example, that lazily loads token frequencies from a list of volume IDs, and counts them up by part of speech tag.</source>
          <target state="translated">这里是一个最小的例子,它可以从音量ID列表中懒散地加载令牌频率,并按语音标签的一部分对它们进行计数。</target>
        </trans-unit>
        <trans-unit id="93b10e38d636e462fe33e63b5955a8b186c681e3" translate="yes" xml:space="preserve">
          <source>Here is an example of 78 volumes being processed in 24 seconds with 31 threads:</source>
          <target state="translated">下面是一个用31个线程在24秒内处理78个卷的例子。</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="6fca55ca3c828a46bfe96a10e69f572b61ce540c" translate="yes" xml:space="preserve">
          <source>IN</source>
          <target state="translated">IN</target>
        </trans-unit>
        <trans-unit id="90d3dc02297a94d44de8b13e4466acb5a921f43d" translate="yes" xml:space="preserve">
          <source>If the minimal metadata included with the extracted feature files is insufficient, you can fetch HT's metadata record from the Bib API with &lt;code&gt;vol.metadata&lt;/code&gt;.
Remember that this calls the HTRC servers for each volume, so can add considerable overhead. The result is a MARC file, returned as a &lt;a href=&quot;https://github.com/edsu/pymarc&quot;&gt;pymarc&lt;/a&gt; record object. For example, to get the publisher information from field &lt;code&gt;260&lt;/code&gt;:</source>
          <target state="translated">如果提取的功能文件中包含的最少元数据不足，则可以使用 &lt;code&gt;vol.metadata&lt;/code&gt; 从Bib API中获取HT的元数据记录。请记住，这将为每个卷调用HTRC服务器，因此会增加可观的开销。结果是一个MARC文件，作为&lt;a href=&quot;https://github.com/edsu/pymarc&quot;&gt;pymarc&lt;/a&gt;记录对象返回。例如，要从字段 &lt;code&gt;260&lt;/code&gt; 获取发布者信息：</target>
        </trans-unit>
        <trans-unit id="eed3736c3db792fd2dfdcfa9a885cfc7b9851a99" translate="yes" xml:space="preserve">
          <source>If you are new to Pandas DataFrames, you might find it easier to learn by converting the index to columns.</source>
          <target state="translated">如果你是Pandas DataFrames的新手,你可能会发现将索引转换为列更容易学习。</target>
        </trans-unit>
        <trans-unit id="f52774b9357f2e22de5c858d650f25851d10362c" translate="yes" xml:space="preserve">
          <source>If you find a bug, leave an issue on the issue tracker, or contact Peter Organisciak at &lt;code&gt;organisciak+htrc@gmail.com&lt;/code&gt;.</source>
          <target state="translated">如果发现错误，请在问题跟踪器上留下问题，或通过 &lt;code&gt;organisciak+htrc@gmail.com&lt;/code&gt; 与Peter Organisciak联系。</target>
        </trans-unit>
        <trans-unit id="04dfefec30372e6a1fbf113c7ba075013cf365bc" translate="yes" xml:space="preserve">
          <source>If you need to do fast, highly customized processing without instantiating Volumes, FeatureReader has a convenient generator for getting the raw JSON as a Python dict: &lt;code&gt;fr.jsons()&lt;/code&gt;. This simply does the file reading, optional decompression, and JSON parsing.</source>
          <target state="translated">如果需要在不实例化Volume的情况下进行快速，高度自定义的处理，FeatureReader提供了一个方便的生成器，用于将原始JSON作为Python字典获取： &lt;code&gt;fr.jsons()&lt;/code&gt; 。这只是进行文件读取，可选的解压缩和JSON解析。</target>
        </trans-unit>
        <trans-unit id="c2851f9011cd17b932353240bc4e1296a5f7a1ac" translate="yes" xml:space="preserve">
          <source>If you prefer not to use Pandas, you can always convert the object, with methods like &lt;code&gt;to_dict&lt;/code&gt; and &lt;code&gt;to_csv&lt;/code&gt;).</source>
          <target state="translated">如果您不想使用Pandas，则可以始终使用 &lt;code&gt;to_dict&lt;/code&gt; 和 &lt;code&gt;to_csv&lt;/code&gt; 之类的方法来转换对象。</target>
        </trans-unit>
        <trans-unit id="982b90469b135de044831c080c97b62d0ae9c8bc" translate="yes" xml:space="preserve">
          <source>If you're working in an instance where you hope to have comparably sized document units, you can use 'chunking' to roll pages into chunks that aim for a specific length. e.g.</source>
          <target state="translated">如果你在工作中希望有大小相当的文档单元,你可以使用 &quot;分块 &quot;来将页面卷成特定长度的块。</target>
        </trans-unit>
        <trans-unit id="0f305fb83ab49b636b8899ce09d7178858e7f081" translate="yes" xml:space="preserve">
          <source>In addition to token lists, you can also access other section features:</source>
          <target state="translated">除了令牌列表,您还可以访问其他部分功能。</target>
        </trans-unit>
        <trans-unit id="81f5e23e25fc4569e6aa5f0965cb810966dae6ec" translate="yes" xml:space="preserve">
          <source>In the beta Extracted Features release, schema 2.0, a few features were separated out to an advanced files. However, &lt;em&gt;this designation is no longer present starting with schema 3.0&lt;/em&gt;, meaning information like &lt;code&gt;beginLineChars&lt;/code&gt;, &lt;code&gt;endLineChars&lt;/code&gt;, and &lt;code&gt;capAlphaSeq&lt;/code&gt; are always available:</source>
          <target state="translated">在beta的&amp;ldquo;提取的功能&amp;rdquo;版本（架构2.0）中，一些功能被分离到一个高级文件中。但是，&lt;em&gt;从模式3.0开始不再存在该名称&lt;/em&gt;，&lt;em&gt;这&lt;/em&gt;意味着诸如 &lt;code&gt;beginLineChars&lt;/code&gt; ， &lt;code&gt;endLineChars&lt;/code&gt; 和 &lt;code&gt;capAlphaSeq&lt;/code&gt; 之类的信息始终可用：</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="c2880c0c7b9f92a492fcc9e1562593a3e93bb68d" translate="yes" xml:space="preserve">
          <source>Installing the development version</source>
          <target state="translated">安装开发版</target>
        </trans-unit>
        <trans-unit id="541665228f57c1cb7675e7544c1c689d3f6fe067" translate="yes" xml:space="preserve">
          <source>Iterating through the JSON files</source>
          <target state="translated">迭代JSON文件</target>
        </trans-unit>
        <trans-unit id="9dc9cf66ca19cda7deb2495273c2f4b273012b0b" translate="yes" xml:space="preserve">
          <source>JJ</source>
          <target state="translated">JJ</target>
        </trans-unit>
        <trans-unit id="99ea919be07e6f0a046557e510daaccf61e4bc14" translate="yes" xml:space="preserve">
          <source>Library for working with the HTRC Extracted Features dataset</source>
          <target state="translated">用于处理HTRC提取特征数据集的库。</target>
        </trans-unit>
        <trans-unit id="e066dc148a3af0bb86ed9438d432a81402e778bd" translate="yes" xml:space="preserve">
          <source>MD</source>
          <target state="translated">MD</target>
        </trans-unit>
        <trans-unit id="96190b7f4720658e5967da735c93383fef2ada5b" translate="yes" xml:space="preserve">
          <source>Multiprocessing</source>
          <target state="translated">多处理</target>
        </trans-unit>
        <trans-unit id="8ac00a7e70abeeaf254830eb6d9428e78c8d7ef4" translate="yes" xml:space="preserve">
          <source>NN</source>
          <target state="translated">NN</target>
        </trans-unit>
        <trans-unit id="e744f9f9ccd9448f53314855064b228492f0208e" translate="yes" xml:space="preserve">
          <source>NNP</source>
          <target state="translated">NNP</target>
        </trans-unit>
        <trans-unit id="03d8bca4a3184ac195c925074c2501025bb7defc" translate="yes" xml:space="preserve">
          <source>NON-RECEIPT</source>
          <target state="translated">NON-REEIPT</target>
        </trans-unit>
        <trans-unit id="4e6bfbc2825d868636580f961e0cdf316cfe87f3" translate="yes" xml:space="preserve">
          <source>Note that for the most part, the properties of the &lt;code&gt;Page&lt;/code&gt; and &lt;code&gt;Volume&lt;/code&gt; objects aligns with the names in the HTRC Extracted Features schema, except they are converted to follow &lt;a href=&quot;https://google.github.io/styleguide/pyguide.html?showone=Naming#Naming&quot;&gt;Python naming conventions&lt;/a&gt;: converting the &lt;code&gt;CamelCase&lt;/code&gt; of the schema to &lt;code&gt;lowercase_with_underscores&lt;/code&gt;. E.g. &lt;code&gt;beginLineChars&lt;/code&gt; from the HTRC data is accessible as &lt;code&gt;Page.begin_line_chars&lt;/code&gt;.</source>
          <target state="translated">请注意，在大多数情况下， &lt;code&gt;Page&lt;/code&gt; 和 &lt;code&gt;Volume&lt;/code&gt; 对象的属性与HTRC Extracted Features模式中的名称一致，只是它们的转换遵循&lt;a href=&quot;https://google.github.io/styleguide/pyguide.html?showone=Naming#Naming&quot;&gt;Python命名约定&lt;/a&gt;：将模式的 &lt;code&gt;CamelCase&lt;/code&gt; 转换为 &lt;code&gt;lowercase_with_underscores&lt;/code&gt; 。例如 &lt;code&gt;beginLineChars&lt;/code&gt; 从HTRC数据的可访问 &lt;code&gt;Page.begin_line_chars&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ab5a3954f0a73146dbf941395929645f9ef50fb" translate="yes" xml:space="preserve">
          <source>Optional: &lt;a href=&quot;#Installing-the-development-version&quot;&gt;installing the development version&lt;/a&gt;.</source>
          <target state="translated">可选：&lt;a href=&quot;#Installing-the-development-version&quot;&gt;安装开发版本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="76eea2a471064e28d641094af0136a5d2873ffbe" translate="yes" xml:space="preserve">
          <source>Or, you can combine part of speech counts into a single integer.</source>
          <target state="translated">或者,你可以将部分语音计数合并为一个整数。</target>
        </trans-unit>
        <trans-unit id="a0bf5a7de38282d432d1015168f21b2d5caf2796" translate="yes" xml:space="preserve">
          <source>Other extracted features are discussed below.</source>
          <target state="translated">其他提取的特征将在下面讨论。</target>
        </trans-unit>
        <trans-unit id="bc46ff4c45a29fd18ab5e4aa434a97ddd6b864b0" translate="yes" xml:space="preserve">
          <source>PRP</source>
          <target state="translated">PRP</target>
        </trans-unit>
        <trans-unit id="5505cf54f2c8243f4ffe570191e5f5ae033ba15a" translate="yes" xml:space="preserve">
          <source>Perhaps</source>
          <target state="translated">或许</target>
        </trans-unit>
        <trans-unit id="4e758230baa6bec744e55b3035f865f95efb89c6" translate="yes" xml:space="preserve">
          <source>Reading feature files</source>
          <target state="translated">读取特征文件</target>
        </trans-unit>
        <trans-unit id="4b0ac5b5c90e60f16137500ab314cd89de08b8a4" translate="yes" xml:space="preserve">
          <source>Remember that for large jobs, it is faster to download your dataset beforehand, using the &lt;code&gt;rsync&lt;/code&gt; method.</source>
          <target state="translated">请记住，对于大型作业，使用 &lt;code&gt;rsync&lt;/code&gt; 方法可以更快地预先下载数据集。</target>
        </trans-unit>
        <trans-unit id="93493978f42f7f7e555c48b52945610a2a0231a3" translate="yes" xml:space="preserve">
          <source>Section arguments are valid here: 'header', 'body', 'footer', 'all', and 'group'</source>
          <target state="translated">节参数在这里是有效的。'header','body','footer','all',and 'group'.</target>
        </trans-unit>
        <trans-unit id="941629c3c0df54f67ec83413c3aea6d60222b91e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;examples/ID_to_Rsync_Link.ipynb&quot;&gt;ID to Rsync notebook&lt;/a&gt; for more information on this format and on Rsyncing lists of urls.</source>
          <target state="translated">有关此格式和Rsyncing url列表的更多信息，请参见&lt;a href=&quot;examples/ID_to_Rsync_Link.ipynb&quot;&gt;ID到Rsync笔记本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">测试</target>
        </trans-unit>
        <trans-unit id="293f0e44e9bf4fbba89798877ba5d4999e4ac217" translate="yes" xml:space="preserve">
          <source>That's it! This library is written for Python 3.0+. For Python beginners, you'll need &lt;a href=&quot;https://pip.pypa.io/en/stable/installing/&quot;&gt;pip&lt;/a&gt;.</source>
          <target state="translated">而已！该库是为Python 3.0+编写的。对于Python初学者，您需要&lt;a href=&quot;https://pip.pypa.io/en/stable/installing/&quot;&gt;pip&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">De</target>
        </trans-unit>
        <trans-unit id="fd35bb32b8a218ad71b7087ca3d7342b2f2c8eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;conda&lt;/code&gt; approach is recommended, because it makes sure that some of the hard-to-install dependencies are properly installed.</source>
          <target state="translated">建议使用 &lt;code&gt;conda&lt;/code&gt; 方法，因为它可以确保正确安装了一些难以安装的依赖项。</target>
        </trans-unit>
        <trans-unit id="896bdac9df4e39b2496892f4b69d870e16f60469" translate="yes" xml:space="preserve">
          <source>The FeatureReader can also download files at read time, by reference to a HathiTrust volume id. For example, if I want &lt;a href=&quot;https://catalog.hathitrust.org/Record/100323335&quot;&gt;both of volumes of Pride and Prejudice&lt;/a&gt;, I can see that the URLs are babel.hathitrust.org/cgi/pt?id=&lt;strong&gt;hvd.32044013656053&lt;/strong&gt; and babel.hathitrust.org/cgi/pt?id=&lt;strong&gt;hvd.32044013656061&lt;/strong&gt;. In the FeatureReader, these can be called with the &lt;code&gt;ids=[]&lt;/code&gt; argument, as follows:</source>
          <target state="translated">FeatureReader还可以通过参考HathiTrust卷ID在读取时下载文件。例如，如果我同时需要&lt;a href=&quot;https://catalog.hathitrust.org/Record/100323335&quot;&gt;Pride和Prejudice的数量&lt;/a&gt;，则可以看到URL是babel.hathitrust.org/cgi/pt?id= &lt;strong&gt;hvd.32044013656053&lt;/strong&gt;和babel.hathitrust.org/cgi/pt?id= &lt;strong&gt;hvd .32044013656061&lt;/strong&gt;。在FeatureReader中，可以使用 &lt;code&gt;ids=[]&lt;/code&gt; 参数来调用它们，如下所示：</target>
        </trans-unit>
        <trans-unit id="1ec5a7d9eb6987be863ef242349da1b0f7819d79" translate="yes" xml:space="preserve">
          <source>The MultiIndex makes it easy to slice the results, and it is althogether more memory-efficient. For example, to return just the nouns (&lt;code&gt;NN&lt;/code&gt;):</source>
          <target state="translated">MultiIndex使分割结果变得容易，而且内存效率更高。例如，仅返回名词（ &lt;code&gt;NN&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="e692516909d23f09aa67e1e2b96fe107effe6c5f" translate="yes" xml:space="preserve">
          <source>The easiest way to start using this library is to use the Volume interface, which takes a path to an Extracted Features file.</source>
          <target state="translated">开始使用这个库的最简单方法是使用Volume接口,它需要一个路径到Extracted Features文件。</target>
        </trans-unit>
        <trans-unit id="15d1d7e3080e1c1f5a4685907d23ea107594352d" translate="yes" xml:space="preserve">
          <source>The full included metadata can be seen with &lt;code&gt;vol.parser.meta&lt;/code&gt;:</source>
          <target state="translated">完整的元数据可以在 &lt;code&gt;vol.parser.meta&lt;/code&gt; 中看到：</target>
        </trans-unit>
        <trans-unit id="3cd7bff8af23f6ab9cb8c70611b1c3c5657df5d9" translate="yes" xml:space="preserve">
          <source>The fun stuff: playing with token counts and character counts</source>
          <target state="translated">有趣的东西:玩代币数和角色数的游戏</target>
        </trans-unit>
        <trans-unit id="2e13755ac0e212eee6f1e55b80a480f0efce8190" translate="yes" xml:space="preserve">
          <source>The token count information is returned as a DataFrame with a MultiIndex (page, section, token, and part of speech) and one column (count).</source>
          <target state="translated">令牌计数信息以DataFrame的形式返回,包含一个MultiIndex(页面、章节、令牌和语音部分)和一列(计数)。</target>
        </trans-unit>
        <trans-unit id="740458f4a852a909783f0924ec794ea132eeb2ab" translate="yes" xml:space="preserve">
          <source>There is also a command line utility installed with the HTRC Feature Reader:</source>
          <target state="translated">HTRC特征阅读器还安装了一个命令行工具。</target>
        </trans-unit>
        <trans-unit id="e6f76b5af135b5adc69f5cedeae12d528aab67ec" translate="yes" xml:space="preserve">
          <source>These fields are mapped to attributes in &lt;code&gt;Volume&lt;/code&gt;, so &lt;code&gt;vol.oclc&lt;/code&gt; will return the oclc field from that metadata. As a convenience, &lt;code&gt;Volume.year&lt;/code&gt; returns the &lt;code&gt;pub_date&lt;/code&gt; information and &lt;code&gt;Volume.author&lt;/code&gt; returns the &lt;code&gt;contributor information&lt;/code&gt;.</source>
          <target state="translated">这些字段映射到 &lt;code&gt;Volume&lt;/code&gt; 中的属性，因此 &lt;code&gt;vol.oclc&lt;/code&gt; 将返回该元数据中的oclc字段。为了方便起见， &lt;code&gt;Volume.year&lt;/code&gt; 返回 &lt;code&gt;pub_date&lt;/code&gt; 信息，而 &lt;code&gt;Volume.author&lt;/code&gt; 返回 &lt;code&gt;contributor information&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79e4c70b317f6af34dc53f646d60c76f1aa3aef4" translate="yes" xml:space="preserve">
          <source>This downloads the file temporarily, using the HTRC's web-based download link (e.g. &lt;a href=&quot;https://data.analytics.hathitrust.org/features/get?download-id=%7B%7BURL%7D%7D&quot;&gt;https://data.analytics.hathitrust.org/features/get?download-id={{URL}}&lt;/a&gt;). One good pairing with this feature is the &lt;a href=&quot;https://github.com/htrc/HTRC-PythonSDK&quot;&gt;HTRC Python SDK&lt;/a&gt;'s functionality for downloading collections.</source>
          <target state="translated">这会使用HTRC的基于Web的下载链接（例如&lt;a href=&quot;https://data.analytics.hathitrust.org/features/get?download-id=%7B%7BURL%7D%7D&quot;&gt;https://data.analytics.hathitrust.org/features/get?download-id={{URL}}&lt;/a&gt;）临时下载文件。与此功能很好的配对是&lt;a href=&quot;https://github.com/htrc/HTRC-PythonSDK&quot;&gt;HTRC Python SDK&lt;/a&gt;的用于下载集合的功能。</target>
        </trans-unit>
        <trans-unit id="cdc31e949b655a110b5d7d7c59834c88f7222471" translate="yes" xml:space="preserve">
          <source>This example used multithreading. Due to the nature of Python, certain functions won't parallelize well. In our case, the part where the JSON is read from the file and converted to a DataFrame (the light green parts of the graphic) won't speed up because Python dicts lock the Global Interpreter Lock (GIL). However, because Pandas releases the GIL, nearly everything you do after parsing the JSON will be very quick.</source>
          <target state="translated">这个例子使用了多线程。由于Python的特性,某些函数不会很好地并行化。在我们的例子中,从文件中读取JSON并转换为DataFrame的部分(图形中浅绿色的部分)不会加速,因为Python dicts锁定了全局解释器锁(GIL)。但是,因为Pandas会释放GIL,所以在解析JSON之后,几乎所有的事情都会非常快。</target>
        </trans-unit>
        <trans-unit id="50c25e02ce5e2bd3853698be70e156ec33211f75" translate="yes" xml:space="preserve">
          <source>This is the &lt;em&gt;Extracted Features&lt;/em&gt; dataset, so the features are easily accessible. To most popular is token counts, which are returned as a Pandas DataFrame:</source>
          <target state="translated">这是&lt;em&gt;提取的要素&lt;/em&gt;数据集，因此可以轻松访问要素。最受欢迎的是令牌计数，它以Pandas DataFrame的形式返回：</target>
        </trans-unit>
        <trans-unit id="9ada38d13736853b823fc63d7c686f328ed717e4" translate="yes" xml:space="preserve">
          <source>This library is meant to be compatible with Python 3.2+ and Python 2.7+. Tests are written for py.test and can be run with &lt;code&gt;setup.py test&lt;/code&gt;, or directly with &lt;code&gt;python -m py.test -v&lt;/code&gt;.</source>
          <target state="translated">该库旨在与Python 3.2+和Python 2.7+兼容。测试是针对py.test编写的，可以与 &lt;code&gt;setup.py test&lt;/code&gt; 一起运行，也可以直接与 &lt;code&gt;python -m py.test -v&lt;/code&gt; 一起运行。</target>
        </trans-unit>
        <trans-unit id="ddf297c6fd7a38365160dce4e5f4e20eeac90c1b" translate="yes" xml:space="preserve">
          <source>This library makes heavy use of &lt;a href=&quot;pandas.pydata.org&quot;&gt;Pandas&lt;/a&gt;, returning many data representations as DataFrames. This is the leading way of dealing with structured data in Python, so this library doesn't try to reinvent the wheel. Since refactoring around Pandas, the primary benefit of using the HTRC Feature Reader is performance: reading the json structures and parsing them is generally faster than custom code. You also get convenient access to common information, such as case-folded token counts or part-of-page specific character counts. Details of the public methods provided by this library can be found in the &lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html&quot;&gt;HTRC Feature Reader docs&lt;/a&gt;.</source>
          <target state="translated">该库大量使用了&lt;a href=&quot;pandas.pydata.org&quot;&gt;Pandas&lt;/a&gt;，将许多数据表示形式作为DataFrames返回。这是在Python中处理结构化数据的主要方式，因此该库不会尝试重新发明轮子。由于围绕Pandas进行重构，因此使用HTRC Feature Reader的主要好处是性能：读取json结构并进行解析通常比自定义代码更快。您还可以方便地访问常见信息，例如大小写折叠的令牌计数或页面部分特定的字符计数。该库提供的公共方法的详细信息可以在&lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html&quot;&gt;HTRC Feature Reader文档中找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ddb0db32416ddda72060717a0dbcc426eaf3ec6" translate="yes" xml:space="preserve">
          <source>This library provides a &lt;code&gt;FeatureReader&lt;/code&gt; for parsing files, which are handled as &lt;code&gt;Volume&lt;/code&gt; objects with collections of &lt;code&gt;Page&lt;/code&gt; objects. Volumes provide access to metadata (e.g. language), volume-wide feature information (e.g. token counts), and access to Pages. Pages allow you to easily parse page-level features, particularly token lists.</source>
          <target state="translated">该库提供了一个 &lt;code&gt;FeatureReader&lt;/code&gt; 来解析文件，这些文件被作为 &lt;code&gt;Volume&lt;/code&gt; 对象处理，并带有 &lt;code&gt;Page&lt;/code&gt; 对象的集合。卷提供对元数据（例如语言），卷范围的功能信息（例如令牌计数）的访问，以及对页面的访问。页面使您能够轻松解析页面级功能，尤其是令牌列表。</target>
        </trans-unit>
        <trans-unit id="0153d273ae12a6376fadd533f487984b597d84bb" translate="yes" xml:space="preserve">
          <source>This psuedo-code shows how that you'd use parallel, where the number of parallel processes is 90% the number of cores, and 50 paths are sent to the script at a time (if you send too little at a time, the initialization time of the script can add up).</source>
          <target state="translated">这个suedo-code显示了你如何使用并行,其中并行进程的数量是核心数量的90%,每次向脚本发送50条路径(如果每次发送的数量太少,脚本的初始化时间会增加)。</target>
        </trans-unit>
        <trans-unit id="3a643ab71d39a1b4b70191cea4788509f418c302" translate="yes" xml:space="preserve">
          <source>To better understand what happens when &lt;code&gt;ddf.compute()&lt;/code&gt;, here is a graph for 4 volumes:</source>
          <target state="translated">为了更好地理解 &lt;code&gt;ddf.compute()&lt;/code&gt; 会发生什么，这是4个卷的图形：</target>
        </trans-unit>
        <trans-unit id="a5d1b71e4f045a7e0bb3f5171451cb36adf49b97" translate="yes" xml:space="preserve">
          <source>To get just the unique tokens, &lt;code&gt;Volume.tokens&lt;/code&gt; provides them as a set. Here I select a specific page for brevity and a minimum count, but you can run the method without arguments.</source>
          <target state="translated">为了仅获取唯一令牌， &lt;code&gt;Volume.tokens&lt;/code&gt; 将它们作为一组提供。在这里，为了简洁起见，我选择了一个特定的页面并提供了最少的计数，但是您可以运行不带参数的方法。</target>
        </trans-unit>
        <trans-unit id="a23988558c5b7ad28d9c2df36be23a4f0d0689a2" translate="yes" xml:space="preserve">
          <source>To install,</source>
          <target state="translated">要安装:</target>
        </trans-unit>
        <trans-unit id="dd932d0b00715bdf036709d75645d0f230d2f4d8" translate="yes" xml:space="preserve">
          <source>Token counts are returned by &lt;code&gt;Volume.tokenlist()&lt;/code&gt; (or &lt;code&gt;Page.tokenlist()&lt;/code&gt;. By default, part-of-speech tagged, case-sensitive counts are returned for the body.</source>
          <target state="translated">令牌计数由 &lt;code&gt;Volume.tokenlist()&lt;/code&gt; （或 &lt;code&gt;Page.tokenlist()&lt;/code&gt; )返回。默认情况下，为正文返回词性标记的，区分大小写的计数。</target>
        </trans-unit>
        <trans-unit id="01f50e5f4dabbb57286d438085019ec3b48a7096" translate="yes" xml:space="preserve">
          <source>Tools for working with the &lt;a href=&quot;https://sharc.hathitrust.org/features&quot;&gt;HTRC Extracted Features dataset&lt;/a&gt;, a dataset of page-level text features extracted from 17 million digitized works.</source>
          <target state="translated">用于处理&lt;a href=&quot;https://sharc.hathitrust.org/features&quot;&gt;HTRC提取要素数据集的工具&lt;/a&gt;，该数据集是从1,700万个数字化作品中提取的页面级文本要素的数据集。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="6fdede7befa5cbf3bc6641cf4e8ae6b2ab7a6811" translate="yes" xml:space="preserve">
          <source>VB</source>
          <target state="translated">VB</target>
        </trans-unit>
        <trans-unit id="b76dcf7a12caa1e4d097707c7428b0fe9655f4a2" translate="yes" xml:space="preserve">
          <source>VBD</source>
          <target state="translated">VBD</target>
        </trans-unit>
        <trans-unit id="bb7b3c2dc5fceb7944a2d5247ba39109ed1e34e8" translate="yes" xml:space="preserve">
          <source>VBZ</source>
          <target state="translated">VBZ</target>
        </trans-unit>
        <trans-unit id="3b18e8e332500f3dfedb21b0aed686cfa9832cfe" translate="yes" xml:space="preserve">
          <source>Volume</source>
          <target state="translated">体积</target>
        </trans-unit>
        <trans-unit id="f807da0b25d59ebba0c76d5ad0ddbdd9b09f6cfc" translate="yes" xml:space="preserve">
          <source>Volumes also have direct access to volume-wide info of features stored in pages. For example, you can get a list of words per page through &lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html#htrc_features.feature_reader.Volume.tokens_per_page&quot;&gt;Volume.tokens_per_page()&lt;/a&gt;. We'll discuss these features &lt;a href=&quot;#Volume-stats-collecting&quot;&gt;below&lt;/a&gt;, after looking first at Pages.</source>
          <target state="translated">卷还可以直接访问页面中存储的功能的全卷信息。例如，您可以通过&lt;a href=&quot;http://htrc.github.io/htrc-feature-reader/htrc_features/feature_reader.m.html#htrc_features.feature_reader.Volume.tokens_per_page&quot;&gt;Volume.tokens_per_page（）&lt;/a&gt;获得每页的单词列表。首先查看Pages之后，我们将&lt;a href=&quot;#Volume-stats-collecting&quot;&gt;在下面&lt;/a&gt;讨论这些功能。</target>
        </trans-unit>
        <trans-unit id="a0a26f2e80cbcf753a23f7f1465f013588028bba" translate="yes" xml:space="preserve">
          <source>WP</source>
          <target state="translated">可湿性粉剂</target>
        </trans-unit>
        <trans-unit id="7b3b17fef18360d50f4eeffb1b5a52777fbf3ec3" translate="yes" xml:space="preserve">
          <source>You can also drop the section index altogether if you're content with the default 'body'.</source>
          <target state="translated">如果你满足于默认的 &quot;body&quot;,你也可以完全放弃部分索引。</target>
        </trans-unit>
        <trans-unit id="6f13d0a6d190c0ad73bd66340c7ace3eca30d02c" translate="yes" xml:space="preserve">
          <source>abode</source>
          <target state="translated">居留</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">任何</target>
        </trans-unit>
        <trans-unit id="27e90dfa57c358acfaf470860f6f72c9282ce995" translate="yes" xml:space="preserve">
          <source>at</source>
          <target state="translated">at</target>
        </trans-unit>
        <trans-unit id="4be03cbb728ebfa1032f15c0260a0cd35a416fec" translate="yes" xml:space="preserve">
          <source>austen</source>
          <target state="translated">奥斯汀</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">身体</target>
        </trans-unit>
        <trans-unit id="5dc187aecac5ccf97b06ee51288408183eeddc3e" translate="yes" xml:space="preserve">
          <source>capAlphaSeq</source>
          <target state="translated">capAlphaSeq</target>
        </trans-unit>
        <trans-unit id="78c7e5447338a9e5e7026a8b78ae41ec9a47b274" translate="yes" xml:space="preserve">
          <source>chunk</source>
          <target state="translated">大块</target>
        </trans-unit>
        <trans-unit id="74f5cacb17fe7f0b0b7babd0407fecac0c32008c" translate="yes" xml:space="preserve">
          <source>comes</source>
          <target state="translated">来自</target>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">计数</target>
        </trans-unit>
        <trans-unit id="2867616061c752524db6cab4787da692e8dd4d3a" translate="yes" xml:space="preserve">
          <source>emptyLineCount</source>
          <target state="translated">空行数</target>
        </trans-unit>
        <trans-unit id="c33f059b0ca7725fbfd6c9ea4f2f012cc7ac5a74" translate="yes" xml:space="preserve">
          <source>family</source>
          <target state="translated">家族</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">对于</target>
        </trans-unit>
        <trans-unit id="1a954628a960aaef81d7b2d4521929579f3541e6" translate="yes" xml:space="preserve">
          <source>head</source>
          <target state="translated">脑袋</target>
        </trans-unit>
        <trans-unit id="594fd1615a341c77829e83ed988f137e1ba96231" translate="yes" xml:space="preserve">
          <source>header</source>
          <target state="translated">头部</target>
        </trans-unit>
        <trans-unit id="8a8deed44623d4c44268c26652d80945851c4f7f" translate="yes" xml:space="preserve">
          <source>jane</source>
          <target state="translated">珍妮</target>
        </trans-unit>
        <trans-unit id="7da33f49740772bd4c0f244cc0fff335ffc6d639" translate="yes" xml:space="preserve">
          <source>journey</source>
          <target state="translated">旅程</target>
        </trans-unit>
        <trans-unit id="c831bfbfcae79ccde743256856374683292695e2" translate="yes" xml:space="preserve">
          <source>lineCount</source>
          <target state="translated">行数</target>
        </trans-unit>
        <trans-unit id="171c1e65f95a4d4992c129151e673f844920649a" translate="yes" xml:space="preserve">
          <source>lowercase</source>
          <target state="translated">小写</target>
        </trans-unit>
        <trans-unit id="5821eb27d7b71c9078000da31a5a654c97e401b9" translate="yes" xml:space="preserve">
          <source>make</source>
          <target state="translated">fare</target>
        </trans-unit>
        <trans-unit id="fce3b4d725ee5c9e018037177d09db029a60fc73" translate="yes" xml:space="preserve">
          <source>necessary</source>
          <target state="translated">必要</target>
        </trans-unit>
        <trans-unit id="767013ce0ee0f6d7a07587912eba3104cfaabc15" translate="yes" xml:space="preserve">
          <source>page</source>
          <target state="translated">网页</target>
        </trans-unit>
        <trans-unit id="51d1bef695972a70389ca259dbd97d9a80808d1a" translate="yes" xml:space="preserve">
          <source>pemberley</source>
          <target state="translated">潘巴利</target>
        </trans-unit>
        <trans-unit id="1478c028a16709cb32d8b1a69ccca032ca1d9ef5" translate="yes" xml:space="preserve">
          <source>pos</source>
          <target state="translated">姿势</target>
        </trans-unit>
        <trans-unit id="ab2653c9da9095101835f53260828b24e8af36b3" translate="yes" xml:space="preserve">
          <source>prejudice</source>
          <target state="translated">成见</target>
        </trans-unit>
        <trans-unit id="57c46f318d70fc1e8da1867de604bea68413ea46" translate="yes" xml:space="preserve">
          <source>prejudiceJane</source>
          <target state="translated">偏见Jane</target>
        </trans-unit>
        <trans-unit id="20182fbc10716eb197ea16bc03277c7d8c3730b2" translate="yes" xml:space="preserve">
          <source>section</source>
          <target state="translated">sectie</target>
        </trans-unit>
        <trans-unit id="d8ed7caa2334e31286854824429a9c866a49db93" translate="yes" xml:space="preserve">
          <source>sentenceCount</source>
          <target state="translated">句数</target>
        </trans-unit>
        <trans-unit id="cd1b646ebd1f6844c60dd91951c6867e43857114" translate="yes" xml:space="preserve">
          <source>so</source>
          <target state="translated">所以</target>
        </trans-unit>
        <trans-unit id="9b42e50fefa55151ea271e7a84c04345be532c8d" translate="yes" xml:space="preserve">
          <source>spite</source>
          <target state="translated">怨恨</target>
        </trans-unit>
        <trans-unit id="e78b52d7bb28ef2a2895973ad67229c5287d8683" translate="yes" xml:space="preserve">
          <source>suppose</source>
          <target state="translated">假设</target>
        </trans-unit>
        <trans-unit id="63e76d7b9e5059006df47479d8b6f78294c74852" translate="yes" xml:space="preserve">
          <source>surprise</source>
          <target state="translated">惊讶</target>
        </trans-unit>
        <trans-unit id="b802f384302cb24fbab0a44997e820bf2e8507bb" translate="yes" xml:space="preserve">
          <source>three</source>
          <target state="translated">三个</target>
        </trans-unit>
        <trans-unit id="ee977806d7286510da8b9a7492ba58e2484c0ecc" translate="yes" xml:space="preserve">
          <source>token</source>
          <target state="translated">象征性</target>
        </trans-unit>
        <trans-unit id="cf0b6755938ace6aaac34a7490b13d556c50c152" translate="yes" xml:space="preserve">
          <source>tokenCount</source>
          <target state="translated">tokenCount</target>
        </trans-unit>
        <trans-unit id="b1b416becb29d7acd0c4004ae2f7ec84b199e9fe" translate="yes" xml:space="preserve">
          <source>took</source>
          <target state="translated">采取了</target>
        </trans-unit>
        <trans-unit id="a5afc8df8baab874c14a0f776641edd16d00591f" translate="yes" xml:space="preserve">
          <source>uncle</source>
          <target state="translated">舅舅</target>
        </trans-unit>
        <trans-unit id="16a0fb48706cbd9445856412ef99589b85e5e03c" translate="yes" xml:space="preserve">
          <source>vol</source>
          <target state="translated">vol</target>
        </trans-unit>
        <trans-unit id="9262105047ec770aa16ef1ff67b37ae7fb5b626d" translate="yes" xml:space="preserve">
          <source>warmest</source>
          <target state="translated">最热烈</target>
        </trans-unit>
        <trans-unit id="a110e6b9a361653a042e3f5dfbac4c6105693789" translate="yes" xml:space="preserve">
          <source>what</source>
          <target state="translated">什么</target>
        </trans-unit>
        <trans-unit id="48eda733f81c96587ed209509223237e151e5ce6" translate="yes" xml:space="preserve">
          <source>wife</source>
          <target state="translated">妻子</target>
        </trans-unit>
        <trans-unit id="0955dd818206a40e89101bb215630d0623e506fc" translate="yes" xml:space="preserve">
          <source>would</source>
          <target state="translated">would</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
