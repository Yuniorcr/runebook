<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pylisp-ng/">
    <body>
      <group id="pylisp-ng">
        <trans-unit id="14f1f8f15bc5d4cdda55d2c84f8ff32b1fa7d089" translate="yes" xml:space="preserve">
          <source>$ bzr lp:pylisp-ng</source>
          <target state="translated">$ bzr lp:pylisp-ng</target>
        </trans-unit>
        <trans-unit id="f670ce296bc2d292eb8596e982e36d38f85ecb6f" translate="yes" xml:space="preserve">
          <source>$ cd &amp;lt;branch directory&amp;gt;
$ ./bin/pylisp-ng</source>
          <target state="translated">$ cd &amp;lt;branch directory&amp;gt; $ ./bin/pylisp-ng</target>
        </trans-unit>
        <trans-unit id="4bca9095c1cdc3b74cb298982401fddfd323a1b8" translate="yes" xml:space="preserve">
          <source>$ easy_install pyLisp-NG</source>
          <target state="translated">$ easy_install pyLisp-NG</target>
        </trans-unit>
        <trans-unit id="d2feb82f0e53281adcd894f29f892d29003698e5" translate="yes" xml:space="preserve">
          <source>$ pylisp-ng</source>
          <target state="translated">$ pylisp-ng</target>
        </trans-unit>
        <trans-unit id="a88f9c5564ced0fc14a3c901132a124613af18d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://mail.python.org/pipermail/python-list/2001-May/thread.html&quot;&gt;http://mail.python.org/pipermail/python-list/2001-May/thread.html&lt;/a&gt;, search
the page for &amp;ldquo;lisp&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;http://mail.python.org/pipermail/python-list/2001-May/thread.html&quot;&gt;http://mail.python.org/pipermail/python-list/2001-May/thread.html&lt;/a&gt;, search the page for &amp;ldquo;lisp&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1fc26f8232946c41a37768cdf2d554e331f336c7" translate="yes" xml:space="preserve">
          <source>A couple small bug fixes and some code cleanup.</source>
          <target state="translated">几个小的bug修复和一些代码清理。</target>
        </trans-unit>
        <trans-unit id="b56ee973a94fff3bfa74b9c57b8ca01f0078f712" translate="yes" xml:space="preserve">
          <source>A tiny Lisp dialect, easy to integrate into other Python projects.</source>
          <target state="translated">一个微小的Lisp方言,易于集成到其他Python项目中。</target>
        </trans-unit>
        <trans-unit id="30056dac2aca1c38668527be34af1104aa491ff3" translate="yes" xml:space="preserve">
          <source>A very simple implementation of Lisp in Python that is perfectly suitable for Python projects needing Lisp-like capabilities.</source>
          <target state="translated">一个在Python中非常简单的Lisp实现,完全适合需要类似Lisp功能的Python项目。</target>
        </trans-unit>
        <trans-unit id="1d2e338fb0da4878f7dfa8d87392e24909923986" translate="yes" xml:space="preserve">
          <source>Added introspection code that&amp;rsquo;s useful for genetic programming.</source>
          <target state="translated">Added introspection code that&amp;rsquo;s useful for genetic programming.</target>
        </trans-unit>
        <trans-unit id="dfee0f10abbd0fde4ce4aabbbfc3a323d64f6910" translate="yes" xml:space="preserve">
          <source>At this point, you&amp;rsquo;ll be able to enter Lisp expressions:</source>
          <target state="translated">At this point, you&amp;rsquo;ll be able to enter Lisp expressions:</target>
        </trans-unit>
        <trans-unit id="4058236347f3a8597734148610f4b19f6a461afa" translate="yes" xml:space="preserve">
          <source>Building an expression one symbol at a time or by adding chunks at a time:</source>
          <target state="translated">一次一个符号或通过一次添加块来构建一个表达式。</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">变化</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">内容</target>
        </trans-unit>
        <trans-unit id="32ccca07dd9808e14cd9be7e979f417466074a44" translate="yes" xml:space="preserve">
          <source>Expression introspection specifically designed for use in genetic
programming.</source>
          <target state="translated">专门设计用于遗传编程的表达反省。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特点</target>
        </trans-unit>
        <trans-unit id="6e7e8b0f532d528a34cbd1529a0c2debd809dc70" translate="yes" xml:space="preserve">
          <source>From PyLisp 0.0 to 1.17</source>
          <target state="translated">从PyLisp 0.0到1.17。</target>
        </trans-unit>
        <trans-unit id="bc489010a430a9c9690f9ccc354123ef110b5a04" translate="yes" xml:space="preserve">
          <source>From PyLisp 1.17 to 2.0.0 (pyLisp-NG)</source>
          <target state="translated">从 PyLisp 1.17 到 2.0.0 (pyLisp-NG)</target>
        </trans-unit>
        <trans-unit id="40cc4053ef17dd92cc4f81958a1abb3aa2317733" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve installed with easy_install, and your Python scripts directory is in
your PATH, all you&amp;rsquo;ll need to do is this:</source>
          <target state="translated">If you&amp;rsquo;ve installed with easy_install, and your Python scripts directory is in your PATH, all you&amp;rsquo;ll need to do is this:</target>
        </trans-unit>
        <trans-unit id="a99db288f3f5aeb05a739e2cea32ae11d12e6110" translate="yes" xml:space="preserve">
          <source>Includes an interactive Lisp interpreter.</source>
          <target state="translated">包括一个交互式Lisp解释器。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="b3fffa6b6a0cec59879e5601a92758f718acd7ab" translate="yes" xml:space="preserve">
          <source>Known Bugs</source>
          <target state="translated">已知虫子</target>
        </trans-unit>
        <trans-unit id="e7038a3ad4b1cebebd1495b858c83440bda160ce" translate="yes" xml:space="preserve">
          <source>None currently known.</source>
          <target state="translated">目前不知道。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">参考文献</target>
        </trans-unit>
        <trans-unit id="e5808539ebe3ff37280717fd165f3f1a22f670f4" translate="yes" xml:space="preserve">
          <source>Several years later, the Evolver &lt;a href=&quot;#id10&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt; and txEvolver &lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;[5]&lt;/a&gt; projects needed a
functional programming language implementation in Python, as inspecting
Python&amp;rsquo;s AST was too much of a hassle. The author wanted to distribute,
process, and manage evolutionary algorithms/programs across multiple remote
Twisted servers, and manipulating permutations of partial programs was much
easier to integrate with Twisted if the programs themselves could be evaluated
and introspected easily with Python.</source>
          <target state="translated">Several years later, the Evolver &lt;a href=&quot;#id10&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt; and txEvolver &lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;[5]&lt;/a&gt; projects needed a functional programming language implementation in Python, as inspecting Python&amp;rsquo;s AST was too much of a hassle. The author wanted to distribute, process, and manage evolutionary algorithms/programs across multiple remote Twisted servers, and manipulating permutations of partial programs was much easier to integrate with Twisted if the programs themselves could be evaluated and introspected easily with Python.</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">待办事项</target>
        </trans-unit>
        <trans-unit id="87d0a406b1ac80dadef8073678e0ade21276e58b" translate="yes" xml:space="preserve">
          <source>Taken from &lt;a href=&quot;http://www.biostat.wisc.edu/~annis/creations/PyLisp/&quot;&gt;http://www.biostat.wisc.edu/~annis/creations/PyLisp/&lt;/a&gt;</source>
          <target state="translated">Taken from &lt;a href=&quot;http://www.biostat.wisc.edu/~annis/creations/PyLisp/&quot;&gt;http://www.biostat.wisc.edu/~annis/creations/PyLisp/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7692cea7599b46079dae703aac6bd5e38a4ed3e" translate="yes" xml:space="preserve">
          <source>The latter option greatly encouraged for interested users, as the repository
contains extra files that are not included in the ditribution tarballs (such as
the test runner and test utils).</source>
          <target state="translated">对于感兴趣的用户来说,后一个选项是非常值得鼓励的,因为版本库中包含了ditribution tarballs中没有的额外文件(如测试运行程序和测试工具)。</target>
        </trans-unit>
        <trans-unit id="718d5e4f9a87dac2070376c79ee91d61c0ebbccc" translate="yes" xml:space="preserve">
          <source>There doesn&amp;rsquo;t seem to be any history from which to extract code changes between
previous versions and 1.17.</source>
          <target state="translated">There doesn&amp;rsquo;t seem to be any history from which to extract code changes between previous versions and 1.17.</target>
        </trans-unit>
        <trans-unit id="805119a55b2a6601e7228df4b51a12385ad4f4ae" translate="yes" xml:space="preserve">
          <source>To use the interpretter from a full checkout, do this:</source>
          <target state="translated">要想从全部结账中使用解释器,请这样做。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="30e85bd2722e00074aee233e9a38eda21d9ab1aa" translate="yes" xml:space="preserve">
          <source>You can also get the full source code from Launchpad:</source>
          <target state="translated">你也可以从Launchpad获得完整的源代码。</target>
        </trans-unit>
        <trans-unit id="ac7e2907874bd766151196732a4c7b879fac1a00" translate="yes" xml:space="preserve">
          <source>You can examine various properties of the s-expression:</source>
          <target state="translated">你可以研究s表达式的各种特性。</target>
        </trans-unit>
        <trans-unit id="c86af99499ebbdd37115c37e1fc2c91ad5269df9" translate="yes" xml:space="preserve">
          <source>You can use the s-expression code from Python:</source>
          <target state="translated">你可以使用Python的s表达式代码。</target>
        </trans-unit>
        <trans-unit id="40557d0b5cb99460ea4f30b097a4117d390936c9" translate="yes" xml:space="preserve">
          <source>add &lt;a href=&quot;http://www.biostat.wisc.edu/~annis/creations/PyLisp/tests.txt&quot;&gt;http://www.biostat.wisc.edu/~annis/creations/PyLisp/tests.txt&lt;/a&gt; to tests</source>
          <target state="translated">add &lt;a href=&quot;http://www.biostat.wisc.edu/~annis/creations/PyLisp/tests.txt&quot;&gt;http://www.biostat.wisc.edu/~annis/creations/PyLisp/tests.txt&lt;/a&gt; to tests</target>
        </trans-unit>
        <trans-unit id="6e103bef8c964ba3c39c81bdb30b10ae1467ce8c" translate="yes" xml:space="preserve">
          <source>add support for getting expressions by index (and thus slicing as well)</source>
          <target state="translated">增加对通过索引获取表达式的支持(因此也支持分片)。</target>
        </trans-unit>
        <trans-unit id="b835fd4e449d4936aca98a736907960814e7caf7" translate="yes" xml:space="preserve">
          <source>add support for getting sub-expressions</source>
          <target state="translated">增加对获取子表达式的支持</target>
        </trans-unit>
        <trans-unit id="f46a6bff94ec228fea8041c4fdc503e5339e7602" translate="yes" xml:space="preserve">
          <source>auto-completion</source>
          <target state="translated">自动完成</target>
        </trans-unit>
        <trans-unit id="4d1d77e25cd35356cde10ef63fc85f8a802d39fc" translate="yes" xml:space="preserve">
          <source>command history</source>
          <target state="translated">命令历史</target>
        </trans-unit>
        <trans-unit id="a6b4f2354682b9a85cc82b638cf96735da10ba25" translate="yes" xml:space="preserve">
          <source>graceful quit</source>
          <target state="translated">潇洒退场</target>
        </trans-unit>
        <trans-unit id="0bb7f88682833e9bb572aafc3770002fe35fcdf1" translate="yes" xml:space="preserve">
          <source>pyLisp-NG inherits PyLisp&amp;rsquo;s idiosyncratic charaateristics. For example, the
booleans are true and false and it doesn&amp;rsquo;t follow the convention that
everything that isn&amp;rsquo;t false is true (common to many Lisps). In fact, all
booleans in pyLisp-NG are based on fuzzy logic, so you can do trickier things.
Macros are, quite strangely, first class objects in PyLisp which maybe novel to
Lisps &lt;a href=&quot;#id12&quot; id=&quot;id6&quot;&gt;[6]&lt;/a&gt;:</source>
          <target state="translated">pyLisp-NG inherits PyLisp&amp;rsquo;s idiosyncratic charaateristics. For example, the booleans are true and false and it doesn&amp;rsquo;t follow the convention that everything that isn&amp;rsquo;t false is true (common to many Lisps). In fact, all booleans in pyLisp-NG are based on fuzzy logic, so you can do trickier things. Macros are, quite strangely, first class objects in PyLisp which maybe novel to Lisps &lt;a href=&quot;#id12&quot; id=&quot;id6&quot;&gt;[6]&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="f9c4e75dee01913f8cad95b3307c83ad26afb498" translate="yes" xml:space="preserve">
          <source>pyLisp-NG is an immediate descendant of PyLisp, which had its accidental birth
as a result of William Annis&amp;rsquo; desire to build a CLIPS-like &lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; syntax for a
simple expert system intended for the monitoring tool, Mom. As a result of Lisp
interest on the Python news group &lt;a href=&quot;#id8&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;, William released the software and
announced it to the group &lt;a href=&quot;#id9&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;.</source>
          <target state="translated">pyLisp-NG is an immediate descendant of PyLisp, which had its accidental birth as a result of William Annis&amp;rsquo; desire to build a CLIPS-like &lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; syntax for a simple expert system intended for the monitoring tool, Mom. As a result of Lisp interest on the Python news group &lt;a href=&quot;#id8&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;, William released the software and announced it to the group &lt;a href=&quot;#id9&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3afe36af8cc9380756ba8e5ad6133ba254eebe73" translate="yes" xml:space="preserve">
          <source>pyLisp-NG is setuptools-friendly; you can install it with the following:</source>
          <target state="translated">pyLisp-NG是setuptools友好型的,你可以用以下方法安装它。</target>
        </trans-unit>
        <trans-unit id="895ec87f64931a62fff9b46677529a2d10e08421" translate="yes" xml:space="preserve">
          <source>pyLisp-NG, like its predecessor, has no intent of becomming a full-fledged,
robust Lisp implementation. All progress is governed solely by the interest of
contributing developers; right now, that&amp;rsquo;s strictly for use as a genetic
programming tool.</source>
          <target state="translated">pyLisp-NG, like its predecessor, has no intent of becomming a full-fledged, robust Lisp implementation. All progress is governed solely by the interest of contributing developers; right now, that&amp;rsquo;s strictly for use as a genetic programming tool.</target>
        </trans-unit>
        <trans-unit id="5c4ed06dabe49fa5c6bff2e04c2e24358ce35267" translate="yes" xml:space="preserve">
          <source>replace fragile interpreter that originally came with PyLisp with one based
on the Python interpreter</source>
          <target state="translated">用一个基于Python解释器的解释器取代原来PyLisp的脆弱解释器。</target>
        </trans-unit>
        <trans-unit id="eaf0eecbaea7d43c6b7f40c3f5f70b14757b10d2" translate="yes" xml:space="preserve">
          <source>split up monolithic lisp.py file into separate files</source>
          <target state="translated">将单片机lisp.py文件拆成单独的文件。</target>
        </trans-unit>
        <trans-unit id="8b1b9614214ec5bf334c49470f1bbb099183816a" translate="yes" xml:space="preserve">
          <source>support lisp interpreter tests in doctests?</source>
          <target state="translated">在doctests中支持lisp解释器测试?</target>
        </trans-unit>
        <trans-unit id="d1a6958e4bc1ae734a2736518153bb0fc92855c7" translate="yes" xml:space="preserve">
          <source>support testing .l files</source>
          <target state="translated">支持测试.l文件</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
