<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/df-websockets/">
    <body>
      <group id="df-websockets">
        <trans-unit id="29b638ca66240e06788ccc2a73b2d87bd7411027" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;df_websockets.tasks.BROADCAST&lt;/code&gt;: all windows currently active.</source>
          <target state="translated">&lt;code&gt;df_websockets.tasks.BROADCAST&lt;/code&gt; ：所有当前处于活动状态的窗口。</target>
        </trans-unit>
        <trans-unit id="ee7644ac5a79f8af58395f707a0e1c14cd7f8e69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;df_websockets.tasks.USER&lt;/code&gt;: all windows currently displayed by the connected user,</source>
          <target state="translated">&lt;code&gt;df_websockets.tasks.USER&lt;/code&gt; ：连接的用户当前显示的所有窗口，</target>
        </trans-unit>
        <trans-unit id="a8904288ff044015ce4ce96dbcc5d8fd9ee5edd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;df_websockets.tasks.WINDOW&lt;/code&gt;: the original browser window,</source>
          <target state="translated">&lt;code&gt;df_websockets.tasks.WINDOW&lt;/code&gt; ：原始浏览器窗口，</target>
        </trans-unit>
        <trans-unit id="c10d148d126909cb2fe6dc3a97617f7a4abb6c03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;df_websockets.testing.SignalQueue.ws_signals&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;df_websockets.testing.SignalQueue.ws_signals&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="7134ec8c244e7d36548f7358a79daf1bf5bb73a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_client&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; if this signal has been emitted by a web browser,</source>
          <target state="translated">&lt;code&gt;from_client&lt;/code&gt; 如果此信号已由网络浏览器发出，则from_client为 &lt;code&gt;True&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="f7448d126edc58d11d1b34f70a59ecb6004db0ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kwargs&lt;/code&gt; is a dict representing the signal arguments,</source>
          <target state="translated">&lt;code&gt;kwargs&lt;/code&gt; 是代表信号参数的字典，</target>
        </trans-unit>
        <trans-unit id="ab0f58f1de9c3b7921172cca8abaf9651d889bee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj1&lt;/code&gt;, &lt;code&gt;obj2&lt;/code&gt;, &lt;code&gt;obj3&lt;/code&gt; must be Python objects that are handled by the &lt;code&gt;WEBSOCKET_TOPIC_SERIALIZER&lt;/code&gt; function. By default, any string and Django model are valid.
Each window also has a unique identifier that is automatically added to this list, as well as the connected user id and the &lt;code&gt;BROADCAST&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;obj1&lt;/code&gt; ， &lt;code&gt;obj2&lt;/code&gt; ， &lt;code&gt;obj3&lt;/code&gt; 必须是由 &lt;code&gt;WEBSOCKET_TOPIC_SERIALIZER&lt;/code&gt; 函数处理的Python对象。默认情况下，任何字符串和Django模型均有效。每个窗口还具有一个唯一的标识符，该标识符会自动添加到此列表中，以及连接的用户ID和 &lt;code&gt;BROADCAST&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b81cb3ec2026f7f123357e074465ebdaddb82688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queue&lt;/code&gt; is the name of the selected Celery queue.</source>
          <target state="translated">&lt;code&gt;queue&lt;/code&gt; 是所选Celery队列的名称。</target>
        </trans-unit>
        <trans-unit id="2042265027c8da9528e335772f9b04f17f8f7a6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serialized_client_topics&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt; if this signal must be re-emitted to some client topics,</source>
          <target state="translated">&lt;code&gt;serialized_client_topics&lt;/code&gt; 如果此信号必须重新发送到某些客户端主题，则serialized_client_topics不会为 &lt;code&gt;None&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="604e912f7cbb775a5ae637c2fdc490701bc6e49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signal_name&lt;/code&gt; is &amp;hellip; the name of the signal</source>
          <target state="translated">&lt;code&gt;signal_name&lt;/code&gt; 是&amp;hellip;信号的名称</target>
        </trans-unit>
        <trans-unit id="de1635073502755e995bb3e8107a243e69a59e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_server&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; if this signal must be processed server-side,</source>
          <target state="translated">&lt;code&gt;to_server&lt;/code&gt; 如果必须在服务器端处理此信号，则to_server为 &lt;code&gt;True&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="ac60394ada33089c3377acbdf3ec03e526329373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;window_info_dict&lt;/code&gt; is a WindowInfo serialized as a dict,</source>
          <target state="translated">&lt;code&gt;window_info_dict&lt;/code&gt; 是WindowInfo序列化为一个字典，</target>
        </trans-unit>
        <trans-unit id="ad887583f554bc311c6e0ea26f61f17d8a5b390c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;signals&lt;/em&gt;, that are functions triggered both on the server or the browser  window by either the server or the client,</source>
          <target state="translated">&lt;em&gt;信号&lt;/em&gt;，它们是服务器或客户端在服务器或浏览器窗口上触发的功能，</target>
        </trans-unit>
        <trans-unit id="defda1b2805354fb32fbc63aeab5d1226cd364dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;topics&lt;/em&gt; to allow the server to send signals to any group of browser windows.</source>
          <target state="translated">&lt;em&gt;主题，&lt;/em&gt;以允许服务器将信号发送到任何浏览器窗口组。</target>
        </trans-unit>
        <trans-unit id="357c0ce0be6226e3046b2c82f9e520b221c237d8" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;signal&lt;/em&gt; is a string attached to Python or Javascript functions. When this signal is triggered, all these functions are called.
Of course, you can target the platforms on which the functions will be executed: the server (for Python code) or any set of browser windows.</source>
          <target state="translated">甲&lt;em&gt;信号&lt;/em&gt;是附加到Python或Javascript函数的字符串。触发该信号后，将调用所有这些功能。当然，您可以针对将在其上执行功能的平台：服务器（用于Python代码）或任何一组浏览器窗口。</target>
        </trans-unit>
        <trans-unit id="87947ca6dc3f056e3e40aa7e0cff263837195265" translate="yes" xml:space="preserve">
          <source>A Django view using this signal system must call &lt;code&gt;set_websocket_topics&lt;/code&gt; to add some &amp;rdquo;topics&amp;rdquo; to this view.
&lt;code&gt;js/df_websockets.min.js&lt;/code&gt; must also be added to the resulting HTML.</source>
          <target state="translated">使用此信号系统的Django视图必须调用 &lt;code&gt;set_websocket_topics&lt;/code&gt; 以向该视图添加一些&amp;ldquo;主题&amp;rdquo;。 &lt;code&gt;js/df_websockets.min.js&lt;/code&gt; 也必须添加到生成的HTML中。</target>
        </trans-unit>
        <trans-unit id="f79a4947fccde7a2a54a764c4b74631c96a4bc8b" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;https://channels.readthedocs.io&quot;&gt;django-channels&lt;/a&gt; and &lt;a href=&quot;https://docs.celeryproject.org/en/stable/&quot;&gt;celery&lt;/a&gt;, df_websockets simplifies communication between
clients and servers and processing tasks in background processes.</source>
          <target state="translated">df_websockets基于&lt;a href=&quot;https://channels.readthedocs.io&quot;&gt;django-channel&lt;/a&gt;和&lt;a href=&quot;https://docs.celeryproject.org/en/stable/&quot;&gt;celery&lt;/a&gt;，简化了客户端和服务器之间的通信以及后台进程中的处理任务。</target>
        </trans-unit>
        <trans-unit id="ddcc7abf32335f462643cee1fe6e6c0bdcd6a5d2" translate="yes" xml:space="preserve">
          <source>First, we connect our code to the signal &lt;code&gt;&quot;myproject.first_signal&quot;&lt;/code&gt;.</source>
          <target state="translated">首先，我们将代码连接到信号 &lt;code&gt;&quot;myproject.first_signal&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dedbcc2a697fb40d1ea071011ae6a43f04d7f7b9" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;df_config&lt;/code&gt; and you use a local Redis, you have nothing to do: settings are automatically set and everything is working as soon as a Redis is running on your machine.</source>
          <target state="translated">如果您使用 &lt;code&gt;df_config&lt;/code&gt; 并使用本地Redis，则无需执行任何操作：Redis在计算机上运行后会自动设置并一切正常。</target>
        </trans-unit>
        <trans-unit id="d4b682e046029274a61c404dc9d97194fbbcead7" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;to&lt;/code&gt; parameter targets both the server and the window.</source>
          <target state="translated">在这种情况下， &lt;code&gt;to&lt;/code&gt; 参数同时针对服务器和窗口。</target>
        </trans-unit>
        <trans-unit id="19519d28610778512ee803b5aacbdf9ea9c9b705" translate="yes" xml:space="preserve">
          <source>In your settings, if you do not use &lt;code&gt;df_config&lt;/code&gt;, you must add the following values:</source>
          <target state="translated">在设置中，如果不使用 &lt;code&gt;df_config&lt;/code&gt; ，则必须添加以下值：</target>
        </trans-unit>
        <trans-unit id="6066ba76be77de5886f49ee77bd454bc82a6c6c2" translate="yes" xml:space="preserve">
          <source>Now, we can trigger this signal to call this functions.
In both cases, both functions will be called on the server and in the browser window.</source>
          <target state="translated">现在,我们可以触发这个信号来调用这个函数。在这两种情况下,这两个函数将在服务器上和浏览器窗口中被调用。</target>
        </trans-unit>
        <trans-unit id="4da69a9f03a14a40dfa982d276c070878d7dc2df" translate="yes" xml:space="preserve">
          <source>Python 3.6+,</source>
          <target state="translated">Python 3.6+。</target>
        </trans-unit>
        <trans-unit id="3d25952f3a7efeb5ac37e62297af0a98030e969a" translate="yes" xml:space="preserve">
          <source>Requirements and installation</source>
          <target state="translated">要求和安装</target>
        </trans-unit>
        <trans-unit id="4d4aeca88b68600e69b5df33c202fa870d204f4f" translate="yes" xml:space="preserve">
          <source>Signals are exchanged between the browser window and the server using a single websockets. Signals triggered by the browser on the server are processed as Celery tasks (so the websocket endpoint does almost nothing).
Signals triggered by the server can be processed as other Celery tasks and as Javascript functions on the browser.</source>
          <target state="translated">浏览器窗口和服务器之间使用单个websocket交换信号。浏览器在服务器上触发的信号被处理为Celery任务(所以websocket端点几乎什么都不做)。服务器触发的信号可以作为其他Celery任务和浏览器上的Javascript功能来处理。</target>
        </trans-unit>
        <trans-unit id="68b042e0af18e42f9f5a4eeb858ea28283869274" translate="yes" xml:space="preserve">
          <source>Smart default settings for Django websites</source>
          <target state="translated">Django网站的智能默认设置</target>
        </trans-unit>
        <trans-unit id="bc21971715800b1b673aa7dfa50bda52a360daf0" translate="yes" xml:space="preserve">
          <source>Some information about the original window (like its unique identifier or the connected user) must be provided to the triggered Python code, allowing it to trigger JS events on any selected window.</source>
          <target state="translated">必须向被触发的Python代码提供一些关于原始窗口的信息(如它的唯一标识符或连接的用户),使其能够在任何选定的窗口上触发JS事件。</target>
        </trans-unit>
        <trans-unit id="58c7caf7c3222d5d12cbcf038c5bd6abb4e71e69" translate="yes" xml:space="preserve">
          <source>Testing signals</source>
          <target state="translated">测试信号</target>
        </trans-unit>
        <trans-unit id="1ab6f399ea453d7917ce083383a57e8ac5a0453b" translate="yes" xml:space="preserve">
          <source>The following code will call the JS function on every browser window having the &lt;code&gt;obj&lt;/code&gt; topic and to the displayed window.</source>
          <target state="translated">以下代码将在每个具有 &lt;code&gt;obj&lt;/code&gt; 主题的浏览器窗口上，并在显示的窗口上调用JS函数。</target>
        </trans-unit>
        <trans-unit id="bab201b192e9a415a6a91796921c919055a6e718" translate="yes" xml:space="preserve">
          <source>The signal framework requires a working Redis and a worker process. However, if you only want to check if a signal
has been called in unitary tests, you can use :class:&lt;code&gt;df_websockets.utils.SignalQueue&lt;/code&gt;.
Both server-side and client-side signals are kept into memory:</source>
          <target state="translated">信号框架需要有效的Redis和辅助进程。但是，如果仅想检查在单一测试中是否已调用信号，则可以使用：class： &lt;code&gt;df_websockets.utils.SignalQueue&lt;/code&gt; 。服务器端和客户端信号都保存在内存中：</target>
        </trans-unit>
        <trans-unit id="56962a4ac81621817920d5441d8717237822608a" translate="yes" xml:space="preserve">
          <source>There are three special values:</source>
          <target state="translated">有三个特殊值。</target>
        </trans-unit>
        <trans-unit id="4239491f24f2dd15ab5f0631af716ad65b4d05b5" translate="yes" xml:space="preserve">
          <source>These data are stored in the &lt;code&gt;WindowInfo&lt;/code&gt; object, automatically built from the HTTP request by the trigger function and provided as first argument to the triggered code.
The &lt;code&gt;trigger&lt;/code&gt; function accepts &lt;code&gt;WindowInfo&lt;/code&gt; or &lt;code&gt;HTTPRequest&lt;/code&gt; objects as first argument.</source>
          <target state="translated">这些数据存储在 &lt;code&gt;WindowInfo&lt;/code&gt; 对象中，由触发函数根据HTTP请求自动构建，并作为触发代码的第一个参数提供。的 &lt;code&gt;trigger&lt;/code&gt; 函数接受 &lt;code&gt;WindowInfo&lt;/code&gt; 或 &lt;code&gt;HTTPRequest&lt;/code&gt; 对象作为第一个参数。</target>
        </trans-unit>
        <trans-unit id="3a7c0ee7a6985d05ea5442957ef1023acbcfa81b" translate="yes" xml:space="preserve">
          <source>When the server triggers a signal, it can select if the signal is called on the server or on some browser windows.</source>
          <target state="translated">当服务器触发信号时,可以选择是在服务器上还是在一些浏览器窗口上调用信号。</target>
        </trans-unit>
        <trans-unit id="d93630f694aa599d8f38d72dcafb4676698bd382" translate="yes" xml:space="preserve">
          <source>You also need a working &lt;a href=&quot;https://redis.io&quot;&gt;redis server&lt;/a&gt; and &lt;a href=&quot;https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html&quot;&gt;Celery setup&lt;/a&gt;.</source>
          <target state="translated">您还需要正常工作的&lt;a href=&quot;https://redis.io&quot;&gt;Redis服务器&lt;/a&gt;和&lt;a href=&quot;https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html&quot;&gt;Celery设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e9c784f9bbfa47fcf1b3fa698a0865e59602c31" translate="yes" xml:space="preserve">
          <source>You can start a Celery worker and the development server:</source>
          <target state="translated">你可以启动一个Celery worker和开发服务器。</target>
        </trans-unit>
        <trans-unit id="56921755b2d41035416e0e1898cf149fe4a44f56" translate="yes" xml:space="preserve">
          <source>basic usage</source>
          <target state="translated">基本用法</target>
        </trans-unit>
        <trans-unit id="21ce190e6db3033d733bc2a70abab4e93f70eb96" translate="yes" xml:space="preserve">
          <source>celery 4.0+,</source>
          <target state="translated">芹菜4.0以上。</target>
        </trans-unit>
        <trans-unit id="ce1d11fcfe733115860c14a9d029c7591aee7b05" translate="yes" xml:space="preserve">
          <source>channels_redis.</source>
          <target state="translated">渠道_redis。</target>
        </trans-unit>
        <trans-unit id="cad10b861647a08cb5b33d76e72f498b0b5f4b25" translate="yes" xml:space="preserve">
          <source>df_config works with:</source>
          <target state="translated">df_config的工作原理是:</target>
        </trans-unit>
        <trans-unit id="bf5850dac51a307a9bdca2fed55112eab14c0456" translate="yes" xml:space="preserve">
          <source>df_websockets</source>
          <target state="translated">df_websockets</target>
        </trans-unit>
        <trans-unit id="890b5305db21c1b6bb17e0f79ff219e135a441e9" translate="yes" xml:space="preserve">
          <source>df_websockets is based on two main ideas:</source>
          <target state="translated">df_websockets基于两个主要理念。</target>
        </trans-unit>
        <trans-unit id="64d3636b98cb209ae53a20642131c645a5309935" translate="yes" xml:space="preserve">
          <source>django 2.0+,</source>
          <target state="translated">django 2.0+。</target>
        </trans-unit>
        <trans-unit id="89b6414e0e775b7a4993296bf4a2a2994e3e22c3" translate="yes" xml:space="preserve">
          <source>django-channels 2.0+,</source>
          <target state="translated">django渠道2.0+。</target>
        </trans-unit>
        <trans-unit id="3f5ed773f55c045857c1708187efcba6da6f1a37" translate="yes" xml:space="preserve">
          <source>keys are the name of the queue</source>
          <target state="translated">键是队列的名称</target>
        </trans-unit>
        <trans-unit id="d9af4ae71186758c55f6f5cb9c6baa121105d899" translate="yes" xml:space="preserve">
          <source>keys are the serialized topics</source>
          <target state="translated">键是序列化的主题</target>
        </trans-unit>
        <trans-unit id="8547a5d17b9c3fbde37528ab4ae2d0a70536b089" translate="yes" xml:space="preserve">
          <source>redis,</source>
          <target state="translated">Redis。</target>
        </trans-unit>
        <trans-unit id="b729ffe0261cc358c3942df5b6a06cab8f1b9dc6" translate="yes" xml:space="preserve">
          <source>topics</source>
          <target state="translated">主题</target>
        </trans-unit>
        <trans-unit id="890ba780da56a443bcc297d29deb0d7f49a40995" translate="yes" xml:space="preserve">
          <source>values are lists of &lt;code&gt;(signal_name, window_info_dict, kwargs=None, from_client=False, serialized_client_topics=None, to_server=False, queue=None)&lt;/code&gt;</source>
          <target state="translated">值是 &lt;code&gt;(signal_name, window_info_dict, kwargs=None, from_client=False, serialized_client_topics=None, to_server=False, queue=None)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d31fd8da189faf58e2b50301933dc3a0a863279" translate="yes" xml:space="preserve">
          <source>values are lists of tuples &lt;code&gt;(signal name, arguments as dict)&lt;/code&gt;</source>
          <target state="translated">值是元组列表 &lt;code&gt;(signal name, arguments as dict)&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
