<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/advent-of-code-py/">
    <body>
      <group id="advent-of-code-py">
        <trans-unit id="7b2a4827f04c945c4d6965a82b6ee4254136101f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://adventofcode.com&quot;&gt;Advent of Code&lt;/a&gt; helper CLI and library for python projects.</source>
          <target state="translated">&lt;a href=&quot;https://adventofcode.com&quot;&gt;&lt;/a&gt;适用于python项目的Code helper CLI和库的出现。</target>
        </trans-unit>
        <trans-unit id="45473cf4b37509ac18fe6725b75805fd71cc3ed4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;
Currently it is still in beta stage which may have lots of bug please report out bug if you find any</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; 目前仍处于测试阶段，可能存在很多错误，如果发现任何错误，请报告错误</target>
        </trans-unit>
        <trans-unit id="f8e01739d5b6815e58b82ad6033855dbc821cb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;要么&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b83a85778c679b9e06aa3e66df827b42f3ca4888" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Status &amp;amp; Info:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;状态和信息：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="478aa102b5505992e20ea6b219818dff98106809" translate="yes" xml:space="preserve">
          <source>Advent of Code helper CLI and library</source>
          <target state="translated">代码助手CLI和库的出现</target>
        </trans-unit>
        <trans-unit id="1b840df8380a00e8de899b16b4c28066f7a7ccc0" translate="yes" xml:space="preserve">
          <source>Advent-of-code-py</source>
          <target state="translated">代码的出现--py</target>
        </trans-unit>
        <trans-unit id="a2aa9bb49898e921b6952e14539b4bc8c54a44b7" translate="yes" xml:space="preserve">
          <source>After calling out function &lt;code&gt;final_output&lt;/code&gt; value will be submitted out to Advent of Code server for 2018 year day 3
problem then returns out whether submitted answer was correct or not. If session value is not provided then
solution will be submitted to all session value set out.</source>
          <target state="translated">调用 &lt;code&gt;final_output&lt;/code&gt; 函数final_output值后，会将其提交给Advent of Code服务器以解决2018年第3天的问题，然后返回所提交的答案是否正确。如果未提供会话值，则解决方案将提交给所有列出的会话值。</target>
        </trans-unit>
        <trans-unit id="f924e465a73a97ed7b5720dc9fb7ed69786d803e" translate="yes" xml:space="preserve">
          <source>After importing a library you can now use out either two decorator solve or submit decorator for a function of puzzle</source>
          <target state="translated">导入库后,您现在可以使用两个装饰器解或提交装饰器的谜题功能。</target>
        </trans-unit>
        <trans-unit id="68ec0fe32b2d18d85cdb9db5f8c2098693757141" translate="yes" xml:space="preserve">
          <source>Code style</source>
          <target state="translated">代码风格</target>
        </trans-unit>
        <trans-unit id="68961f48637c1b050f125709987172ccbb4d6a51" translate="yes" xml:space="preserve">
          <source>For example:-</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="b07c839f5cb108da010e5f09b90e9a12b1bcb12e" translate="yes" xml:space="preserve">
          <source>Initially for advent-of-code-py to work out it need session value or session ID which you can obtain out by viewing out cookie while visiting advent of code server.
After collecting session cookie value you need to add those value in config using advent-of-code-py CLI</source>
          <target state="translated">advent-of-code-py最初需要session值或session ID,你可以在访问advent of code服务器时通过查看cookie获得。在收集到session cookie值后,你需要使用 advent-of-code-py CLI将这些值添加到配置中。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="82ef6df9befbce3b0454be04ab0a6bcb3b9d14dd" translate="yes" xml:space="preserve">
          <source>Now after decorating out function now you can call out function</source>
          <target state="translated">现在,在装饰出函数后,现在你可以调用出函数</target>
        </trans-unit>
        <trans-unit id="5ac528e3be9257fc9580ea49c07dec09677542b4" translate="yes" xml:space="preserve">
          <source>Now you can import out library by using</source>
          <target state="translated">现在您可以通过使用</target>
        </trans-unit>
        <trans-unit id="e9d399ed0b836177414ef15401e87ba52a7b05a0" translate="yes" xml:space="preserve">
          <source>Now you can set out main_cli as entry points and it will create out CLI with appropriate name and function which was added.
So for example to run out function puzzle_2018_3_1() you have to run out command as &lt;code&gt;entry-point-name run p_3_1&lt;/code&gt; which
will run appropriate function as well as submit as desired.</source>
          <target state="translated">现在，您可以将main_cli设置为入口点，它将创建带有适当名称和功能的CLI。因此，例如，要用完功能Puzzle_2018_3_1（），您必须用 &lt;code&gt;entry-point-name run p_3_1&lt;/code&gt; 来用完命令，该命令将运行适当的功能并根据需要提交。</target>
        </trans-unit>
        <trans-unit id="7aa66aded3b648554f99cca03909ed9dc938adab" translate="yes" xml:space="preserve">
          <source>Project Version</source>
          <target state="translated">项目版本</target>
        </trans-unit>
        <trans-unit id="411cd8f1f45ff4bead2b0535792853492f1405fa" translate="yes" xml:space="preserve">
          <source>To install out advent-of-code-py run out following command which install out advent-of-code-py cli and advent_of_code_py library.</source>
          <target state="translated">要安装 advent-of-code-py,请运行以下命令,安装 advent-of-code-py cli 和 advent_of_code_py 库。</target>
        </trans-unit>
        <trans-unit id="1334dcf503cbd66f1ebc30c955cf1458852c98ef" translate="yes" xml:space="preserve">
          <source>Travis Build Status</source>
          <target state="translated">特拉维斯建设状态</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="e47810bfe7d233b72c8a8fe9eaf6f92c478134fe" translate="yes" xml:space="preserve">
          <source>You can also use out advent-of-code-py builtin Initializer and runner to create out appropriate CLI
tool for problem so problem can be run easily
To set advent-of-code-py puzzle as CLI</source>
          <target state="translated">您也可以使用advent-of-code-py内置的Initializer和Runner为问题创建合适的CLI工具,这样问题就可以很容易地运行了。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
