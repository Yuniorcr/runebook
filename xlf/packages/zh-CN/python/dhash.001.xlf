<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dhash/">
    <body>
      <group id="dhash">
        <trans-unit id="b20123c7be5e78c7f4918a7ce53e98c80dfc8f46" translate="yes" xml:space="preserve">
          <source>. To format the hash value in various ways, use
the</source>
          <target state="translated">。要以各种方式设置哈希值的格式，请使用</target>
        </trans-unit>
        <trans-unit id="6c95fe6b452314dfc2a751a417f900c710e3a9dc" translate="yes" xml:space="preserve">
          <source>Calculate difference hash (perceptual hash) for a given image, useful for detecting duplicates</source>
          <target state="translated">计算给定图像的差异哈希(知觉哈希),用于检测重复的图像。</target>
        </trans-unit>
        <trans-unit id="3164ab66bbfd73f5605b444b7deb3a465bd3631c" translate="yes" xml:space="preserve">
          <source>Combine the two values to produce the final 128-bit hash value</source>
          <target state="translated">将两个值合并,产生最终的128位哈希值。</target>
        </trans-unit>
        <trans-unit id="fbdc9b9d2df345c6355b840fd0bf37ef7dbe7a89" translate="yes" xml:space="preserve">
          <source>Convert the image to grayscale</source>
          <target state="translated">将图像转换为灰度</target>
        </trans-unit>
        <trans-unit id="d182807327b04c6b3fb90c83712c5dbc943f8996" translate="yes" xml:space="preserve">
          <source>Do the same to produce a 64-bit &amp;ldquo;column hash&amp;rdquo; in the y direction</source>
          <target state="translated">进行相同操作以在y方向上生成64位&amp;ldquo;列哈希&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6d185f74700b92ce8a470a6c59f34133a5cbca52" translate="yes" xml:space="preserve">
          <source>Downsize it to a 9x9 thumbnail (size=8 means an 8+1 by 8+1 image)</source>
          <target state="translated">将其缩小为9x9的缩略图(size=8表示8+1乘8+1的图像)。</target>
        </trans-unit>
        <trans-unit id="170a6c18e38c81a59b30d3d059698080396dd6bc" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;ve found that the dhash is great for detecting near duplicates (at
&lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt; we find dupes using a size 8 dhash with a maximum delta of 2
bits). But because of the simplicity of the algorithm, it&amp;rsquo;s not great at
finding similar images or duplicate-but-cropped images &amp;ndash; you&amp;rsquo;d need a more
sophisticated image fingerprint if you want that. However, the dhash is good
for finding exact duplicates and near duplicates, for example, the same image
with slightly altered lighting, a few pixels of cropping, or very light
photoshopping.</source>
          <target state="translated">我发现dhash非常适合检测近乎重复的内容（在&lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter中，&lt;/a&gt;我们发现使用8 dhash且最大增量为2位的重复 ）。但是由于算法的简单性，在查找相似图像或重复但裁剪后的图像时效果不佳&amp;ndash;如果需要，您将需要更复杂的图像指纹。但是，dhash适用于查找精确的重复项和近似重复项，例如，具有稍微改变的光照，少量裁切像素或非常轻便的photoshopping的同一图像。</target>
        </trans-unit>
        <trans-unit id="88f95bc8c830d452bc79f445c4c4be8da65f2e40" translate="yes" xml:space="preserve">
          <source>If you have both libraries installed, dhash will use wand by default. To
override this and force use of Pillow/PIL, call</source>
          <target state="translated">如果你同时安装了这两个库,dhash默认会使用wand。要覆盖这一点并强制使用Pillow/PIL,请调用</target>
        </trans-unit>
        <trans-unit id="d79a9b0f747a565bd655ac8e0ec13b936cda089f" translate="yes" xml:space="preserve">
          <source>If you have your own library to convert an image to grayscale and downsize it
to 9x9 (or 17x17 for size=16), you can pass</source>
          <target state="translated">如果你有自己的库来将图像转换为灰度并缩小到9x9(或17x17,大小=16),你可以通过</target>
        </trans-unit>
        <trans-unit id="cb1675e9ac57664031c0e4b54ceb753a43d2c084" translate="yes" xml:space="preserve">
          <source>Produce a 64-bit &amp;ldquo;row hash&amp;rdquo;: a 1 bit means the pixel intensity is increasing
in the x direction, 0 means it&amp;rsquo;s decreasing</source>
          <target state="translated">产生64位的&amp;ldquo;行哈希&amp;rdquo;：1位表示像素强度在x方向上增加，0表示像素强度在减小</target>
        </trans-unit>
        <trans-unit id="b3b15ea3e75a15225f58c7c7d86ddc524cbb9c6b" translate="yes" xml:space="preserve">
          <source>Read the code in &lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/dhash.py&quot;&gt;dhash.py&lt;/a&gt; for more details &amp;ndash; it&amp;rsquo;s pretty small!</source>
          <target state="translated">阅读&lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/dhash.py&quot;&gt;dhash.py中&lt;/a&gt;的代码以获取更多详细信息-它很小！</target>
        </trans-unit>
        <trans-unit id="1593b2a81f88e19df33c3e552290ecee9e765baf" translate="yes" xml:space="preserve">
          <source>The algorithm to create a difference hash is very simple:</source>
          <target state="translated">创建差异哈希的算法非常简单。</target>
        </trans-unit>
        <trans-unit id="c559cde8733dc6d54f9ac83a82fcd2e7c5542e0a" translate="yes" xml:space="preserve">
          <source>The library defaults to producing a size 8 dhash, but you can override this
easily by passing</source>
          <target state="translated">库的默认值是生成一个大小为8的dhash,但你可以通过传入</target>
        </trans-unit>
        <trans-unit id="3aca01c2ebf1d5a6e183b0f8afe8d72458fb9cc1" translate="yes" xml:space="preserve">
          <source>The library is &lt;a href=&quot;https://pypi.python.org/pypi/dhash&quot;&gt;on the Python Package Index (PyPI)&lt;/a&gt; and works on both Python
3 and Python 2.7. To install it, fire up a command prompt, activate your
virtual environment if you&amp;rsquo;re using one, and type:</source>
          <target state="translated">该库位于&lt;a href=&quot;https://pypi.python.org/pypi/dhash&quot;&gt;Python软件包索引（PyPI）上，&lt;/a&gt;并且可在Python 3和Python 2.7上使用。要安装它，请启动命令提示符，如果使用的是虚拟环境，请激活它，然后键入：</target>
        </trans-unit>
        <trans-unit id="a45498a668cef02a35314d50f8ecbb2c9d6825d1" translate="yes" xml:space="preserve">
          <source>To compute the number of bits different (hamming distance) between two
hashes, you can use the</source>
          <target state="translated">要计算两个散列之间相差的位数(仓位距离),可以使用</target>
        </trans-unit>
        <trans-unit id="3a2a907ef188ab680ad0206f995d454d5733635f" translate="yes" xml:space="preserve">
          <source>To produce a dhash value using Pillow:</source>
          <target state="translated">使用Pillow产生一个dhash值。</target>
        </trans-unit>
        <trans-unit id="85f3376c096addc14cb1d44beb618ccc5b82ffcb" translate="yes" xml:space="preserve">
          <source>To produce a dhash value using wand:</source>
          <target state="translated">用wand产生一个dhash值。</target>
        </trans-unit>
        <trans-unit id="4c51b69b19ec20c4ed5e4bde682cdff2357a7f54" translate="yes" xml:space="preserve">
          <source>To produce the hash value as a 128-bit integer directly, use</source>
          <target state="translated">要直接产生128位整数的哈希值,使用</target>
        </trans-unit>
        <trans-unit id="0d5290235a3ad693ef42bfb9e36433aa43a701ce" translate="yes" xml:space="preserve">
          <source>To use the dhash library, you need either the &lt;a href=&quot;https://pypi.python.org/pypi/Wand&quot;&gt;wand&lt;/a&gt; ImageMagick binding or
the &lt;a href=&quot;https://pypi.python.org/pypi/Pillow&quot;&gt;Pillow (PIL)&lt;/a&gt; library installed. Pick one and stick with it &amp;ndash; they will
produce slightly different dhash values due to differences in their grayscale
conversion and resizing algorithms.</source>
          <target state="translated">要使用dhash库，您需要安装&lt;a href=&quot;https://pypi.python.org/pypi/Wand&quot;&gt;wand&lt;/a&gt; ImageMagick绑定或&lt;a href=&quot;https://pypi.python.org/pypi/Pillow&quot;&gt;Pillow（PIL）&lt;/a&gt;库。选择一个并坚持下去&amp;ndash;由于其灰度转换和调整大小算法的差异，它们将产生略有不同的dhash值。</target>
        </trans-unit>
        <trans-unit id="12fbbd681c47aac3f8ee7173e3578b4c7e76bebf" translate="yes" xml:space="preserve">
          <source>You can also use dhash to generate the difference hash for a specific image
from the command line:</source>
          <target state="translated">你也可以使用dhash从命令行生成特定图像的差异哈希。</target>
        </trans-unit>
        <trans-unit id="52e56f0b6a6123f4ea0cb3062a6c6d3229f6a7cd" translate="yes" xml:space="preserve">
          <source>a list of
integer pixel intensities (for example, from 0 to 255). For example:</source>
          <target state="translated">一个整数像素强度的列表(例如,从0到255)。例如:</target>
        </trans-unit>
        <trans-unit id="ba5efb43f91833a508552e8c77468e414237e743" translate="yes" xml:space="preserve">
          <source>as a keyword argument to most functions. For
example, you can produce a more accurate (but slower to work with) dhash of
512 bits by specifying</source>
          <target state="translated">作为大多数函数的关键字参数。例如,你可以通过指定以下参数来产生一个更精确的(但工作速度较慢的)512位的dhash</target>
        </trans-unit>
        <trans-unit id="a573069697334dfc6499a661d4494acf22a8b06e" translate="yes" xml:space="preserve">
          <source>before
using the library.</source>
          <target state="translated">在使用图书馆之前。</target>
        </trans-unit>
        <trans-unit id="251ad61d85986190aa9516acdd4cd7caf31e980b" translate="yes" xml:space="preserve">
          <source>dhash is a Python library that generates a &amp;ldquo;difference hash&amp;rdquo; for a given image
&amp;ndash; a &lt;a href=&quot;https://en.wikipedia.org/wiki/Perceptual_hashing&quot;&gt;perceptual hash&lt;/a&gt; based on Neal Krawetz&amp;rsquo;s dHash algorithm in &lt;a href=&quot;http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html&quot;&gt;this
&amp;ldquo;Hacker Factor&amp;rdquo; blog entry&lt;/a&gt;.</source>
          <target state="translated">dhash是一个Python库，可为给定图像生成&amp;ldquo;差异哈希&amp;rdquo;，这是基于&lt;a href=&quot;http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html&quot;&gt;&amp;ldquo;黑客因素&amp;rdquo;博客条目中&lt;/a&gt;Neal Krawetz的dHash算法的&lt;a href=&quot;https://en.wikipedia.org/wiki/Perceptual_hashing&quot;&gt;感知哈希&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bfd8d7b12163fc78f9b7468d60b23cfa4930fe6" translate="yes" xml:space="preserve">
          <source>dhash was written by &lt;a href=&quot;http://benhoyt.com/&quot;&gt;Ben Hoyt&lt;/a&gt; for &lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt; and is licensed with a
permissive MIT license (see &lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;).</source>
          <target state="translated">dhash由&lt;a href=&quot;http://benhoyt.com/&quot;&gt;Ben Hoyt&lt;/a&gt;为&lt;a href=&quot;http://www.jetsetter.com/&quot;&gt;Jetsetter&lt;/a&gt;编写，并已获得麻省理工学院许可（请参阅&lt;a href=&quot;https://github.com/Jetsetter/dhash/blob/master/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f18b8f9bd69f09406b087db45fb87b90c553e8a1" translate="yes" xml:space="preserve">
          <source>dhash.force_pil()</source>
          <target state="translated">dhash.force_pil()</target>
        </trans-unit>
        <trans-unit id="ec7bcb12a07cd00928c2398f59344fb49a0e33ab" translate="yes" xml:space="preserve">
          <source>dhash_int(image, size=N)</source>
          <target state="translated">dhash_int(image,size=N)</target>
        </trans-unit>
        <trans-unit id="fd721112b89e47ee41d294fd5d18b6c867df37ff" translate="yes" xml:space="preserve">
          <source>dhash_row_col()</source>
          <target state="translated">dhash_row_col()</target>
        </trans-unit>
        <trans-unit id="aa7622925a4a7e40de940dd315d6e39ba3214642" translate="yes" xml:space="preserve">
          <source>format_*</source>
          <target state="translated">format_*</target>
        </trans-unit>
        <trans-unit id="93d24119ea238d4822b69f04dbebbb29017321f5" translate="yes" xml:space="preserve">
          <source>functions:</source>
          <target state="translated">职能。</target>
        </trans-unit>
        <trans-unit id="b7c9f7f3a6494c3b573908f69a9aa9370ab69b42" translate="yes" xml:space="preserve">
          <source>get_num_bits_different(hash1, hash2)</source>
          <target state="translated">get_num_bits_different(hash1,hash2)</target>
        </trans-unit>
        <trans-unit id="cb1382a723f04c8a79621164f9e612538f9586d0" translate="yes" xml:space="preserve">
          <source>helper
function:</source>
          <target state="translated">助手功能。</target>
        </trans-unit>
        <trans-unit id="dbc17dd99ad59b3919d75ad18a695ebbacdede22" translate="yes" xml:space="preserve">
          <source>size=16</source>
          <target state="translated">size=16</target>
        </trans-unit>
        <trans-unit id="2cb52da80ce04bc35a6aed352a99d9d19e5f7187" translate="yes" xml:space="preserve">
          <source>size=N</source>
          <target state="translated">size=N</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
