<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pyclp/">
    <body>
      <group id="pyclp">
        <trans-unit id="95cc2cbbcb403b222f08433cc3f1833353ac6ee0" translate="yes" xml:space="preserve">
          <source>(check
&lt;a href=&quot;http://www.eclipseclp.org/doc/embedding/embroot008.html#toc11&quot;&gt;3.1.2  Building ECLiPSe terms&lt;/a&gt; ) function.
In ECLiPSe standard interfaces compound terms are destroyed after resume while in PyCLP are
stored in a reference that survives after resuming. PyCLP will destroy the reference only when python
destroys the linked python object (garbage collection). This consumes more memory but now
the python object and the related ECLiPSe object have the same &lt;em&gt;lifetime&lt;/em&gt;.</source>
          <target state="translated">（请&lt;a href=&quot;http://www.eclipseclp.org/doc/embedding/embroot008.html#toc11&quot;&gt;参阅3.1.2建立ECLiPSe术语&lt;/a&gt;）功能。在ECLiPSe标准接口中，复合术语将在恢复后销毁，而在PyCLP中，复合术语将存储在引用中，并在恢复后仍然存在。仅当python销毁链接的python对象（垃圾收集）时，PyCLP才会销毁引用。这会消耗更多的内存，但是现在python对象和相关的ECLiPSe对象具有相同的&lt;em&gt;生存期&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ef05baf85ad56f014411d6e02488c355e1b38da1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://sourceforge.net/projects/pyclp&quot;&gt;PyCLP&lt;/a&gt;
is a Python library to interface ECLiPSe Constraint Programmig System.</source>
          <target state="translated">&lt;a href=&quot;https://sourceforge.net/projects/pyclp&quot;&gt;PyCLP&lt;/a&gt;是一个Python库，用于连接ECLiPSe Constraint Programmig System。</target>
        </trans-unit>
        <trans-unit id="7b1b97e45d9b0e558e51d62c25677ccd089290a3" translate="yes" xml:space="preserve">
          <source>Extend functionality of set_option function</source>
          <target state="translated">扩展set_option函数的功能</target>
        </trans-unit>
        <trans-unit id="b8c65aa03c350963cf6a2fcef01b18d264654dd7" translate="yes" xml:space="preserve">
          <source>Interface to ECLiPSe CLP</source>
          <target state="translated">与ECLiPSe CLP的接口</target>
        </trans-unit>
        <trans-unit id="1db8ee3055252e182066631837854b219445392c" translate="yes" xml:space="preserve">
          <source>Major differences from ECLiPSe standard interface libraries</source>
          <target state="translated">与ECLiPSe标准接口库的主要区别。</target>
        </trans-unit>
        <trans-unit id="17efb1c4168f84fd3a98548dd9b7a96e571814cc" translate="yes" xml:space="preserve">
          <source>Moreover, in the definition of the API I tried to take advantage of a common property of python and
ECLiPSe: both are weak typed languages.</source>
          <target state="translated">此外,在API的定义中,我试图利用python和ECLiPSe的一个共同属性:两者都是弱类型语言。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">今后的步骤</target>
        </trans-unit>
        <trans-unit id="3cc68c7b79898175088611d59111de8d02890376" translate="yes" xml:space="preserve">
          <source>The main difference compared to embedded interface provided  by ECLiPSe system is
the persistence of constructed terms after calling the</source>
          <target state="translated">与ECLiPSe系统提供的嵌入式接口相比,主要的区别在于,在调用构造词后,构造词的持久化。</target>
        </trans-unit>
        <trans-unit id="b2f61ac920e66a7b1cf420ef8c992cec63584a78" translate="yes" xml:space="preserve">
          <source>This module try to implement a pythonic interface to &lt;a href=&quot;http://www.eclipseclp.org/&quot;&gt;ECLiPSe&lt;/a&gt;
(alias easy to use) by compromising on a little bit on performance.</source>
          <target state="translated">该模块尝试通过降低性能来实现与&lt;a href=&quot;http://www.eclipseclp.org/&quot;&gt;ECLiPSe的pythonic&lt;/a&gt;接口（别名易于使用）。</target>
        </trans-unit>
        <trans-unit id="01102d6e2d675b36e644003d9bb8236f83798555" translate="yes" xml:space="preserve">
          <source>pyclp.resume</source>
          <target state="translated">pyclp.resume</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
