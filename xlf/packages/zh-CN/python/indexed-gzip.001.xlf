<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/indexed-gzip/">
    <body>
      <group id="indexed-gzip">
        <trans-unit id="6e4f5731b9e3c8ebae0bfadb9f6a61fb0e5e9af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vinlyx/mgzip/&quot;&gt;&lt;code&gt;mgzip&lt;/code&gt;&lt;/a&gt; provides an accelerated
GZIP compression and decompression library.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vinlyx/mgzip/&quot;&gt; &lt;code&gt;mgzip&lt;/code&gt; &lt;/a&gt;提供了一个加速的GZIP压缩和解压缩库。</target>
        </trans-unit>
        <trans-unit id="ed6a7fb1004159d7b825f4180e699189dc3b190c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; does not currently have any support for writing. Currently if you
wish to write to a file, you will need to save the file by alternate means (e.g.
via &lt;code&gt;gzip&lt;/code&gt; or &lt;code&gt;nibabel&lt;/code&gt;), and then re-create a new &lt;code&gt;IndexedGzipFile&lt;/code&gt; instance.
For example:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 当前不支持任何编写。当前，如果您要写入文件，则需要通过其他方式（例如，通过 &lt;code&gt;gzip&lt;/code&gt; 或 &lt;code&gt;nibabel&lt;/code&gt; ）保存文件，然后重新创建一个新的 &lt;code&gt;IndexedGzipFile&lt;/code&gt; 实例。例如：</target>
        </trans-unit>
        <trans-unit id="b636c51c11789cbc04399c748c66d22d506e6e01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; inherits the &lt;a href=&quot;http://www.zlib.net&quot;&gt;zlib&lt;/a&gt; license, available for
perusal in the &lt;a href=&quot;LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 继承了&lt;a href=&quot;http://www.zlib.net&quot;&gt;zlib&lt;/a&gt;许可证，可在&lt;a href=&quot;LICENSE&quot;&gt;LICENSE&lt;/a&gt;文件中仔细阅读。</target>
        </trans-unit>
        <trans-unit id="8dc06aa0d3cb731383efc41c65d1493aaadcc404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; is available on &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPi&lt;/a&gt; - to
install, simply type:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 上提供了&lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;indexed_gzip-&lt;/a&gt;要安装，只需键入：</target>
        </trans-unit>
        <trans-unit id="ab2efac6fc4be9fe73ce6778bf3918501de110bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; was originally inspired by Zalan Rajna's (@zrajna)
&lt;a href=&quot;https://github.com/zrajna/zindex&quot;&gt;zindex&lt;/a&gt; project:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 最初是由Zalan Rajna（@zrajna）的&lt;a href=&quot;https://github.com/zrajna/zindex&quot;&gt;zindex&lt;/a&gt;项目启发的 ：</target>
        </trans-unit>
        <trans-unit id="c1abf17866e1953c3798e28b3a4b8428cf0222a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexed_gzip&lt;/code&gt; was written to allow fast random access of compressed
&lt;a href=&quot;http://nifti.nimh.nih.gov/&quot;&gt;NIFTI&lt;/a&gt; image files (for which GZIP is the
de-facto compression standard), but will work with any GZIP file.
&lt;code&gt;indexed_gzip&lt;/code&gt; is easy to use with &lt;code&gt;nibabel&lt;/code&gt; (&lt;a href=&quot;http://nipy.org/nibabel/&quot;&gt;http://nipy.org/nibabel/&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 编写indexed_gzip是为了允许快速随机访问压缩的 &lt;a href=&quot;http://nifti.nimh.nih.gov/&quot;&gt;NIFTI&lt;/a&gt;图像文件（GZIP是事实上的压缩标准），但是可以与任何GZIP文件一起使用。 &lt;code&gt;indexed_gzip&lt;/code&gt; 很容易与使用 &lt;code&gt;nibabel&lt;/code&gt; （&lt;a href=&quot;http://nipy.org/nibabel/&quot;&gt;http://nipy.org/nibabel/&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="77a62590e4951de5f1ec880227d393657c98545b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fast random access of gzip files in Python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在Python中快速随机访问gzip文件&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28b133adc96818c4f7d9932892bf37ccdb56f428" translate="yes" xml:space="preserve">
          <source>@DarioDaF: Windows overflow bug (#30)</source>
          <target state="translated">@DarioDaF：Windows溢出错误（＃30）</target>
        </trans-unit>
        <trans-unit id="adb269c7e47357d13a5c217a8e8acc83f08975eb" translate="yes" xml:space="preserve">
          <source>A small &lt;a href=&quot;indexed_gzip/tests/benchmark.py&quot;&gt;test script&lt;/a&gt; is included with
&lt;code&gt;indexed_gzip&lt;/code&gt;; this script compares the performance of the &lt;code&gt;IndexedGzipFile&lt;/code&gt;
class with the &lt;code&gt;gzip.GzipFile&lt;/code&gt; class. This script does the following:</source>
          <target state="translated">&lt;code&gt;indexed_gzip&lt;/code&gt; 中包含 一个小的&lt;a href=&quot;indexed_gzip/tests/benchmark.py&quot;&gt;测试脚本&lt;/a&gt;；该脚本将 &lt;code&gt;IndexedGzipFile&lt;/code&gt; 类与 &lt;code&gt;gzip.GzipFile&lt;/code&gt; 类的性能进行比较。该脚本执行以下操作：</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">鸣谢</target>
        </trans-unit>
        <trans-unit id="a7edd5812773f63b3a3898cd2c35d55013cb6dcd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IndexedGzipFile&lt;/code&gt; instance gets around this performance limitation by
building an index, which contains &lt;em&gt;seek points&lt;/em&gt;, mappings between
corresponding locations in the compressed and uncompressed data streams. Each
seek point is accompanied by a chunk (32KB) of uncompressed data which is used
to initialise the decompression algorithm, allowing us to start reading from
any seek point. If the index is built with a seek point spacing of 1MB, we
only have to decompress (on average) 512KB of data to read from any location
in the file.</source>
          <target state="translated">一个 &lt;code&gt;IndexedGzipFile&lt;/code&gt; 例如，通过建立索引，其中包含来解决这个性能限制&lt;em&gt;搜寻点&lt;/em&gt;，相应的压缩和非压缩数据流的位置之间的映射。每个搜寻点都附带有一块（32KB）的未压缩数据，该数据用于初始化解压缩算法，从而使我们能够从任何搜寻点开始读取。如果以1MB的搜寻点间距构建索引，则我们只需解压缩（平均）512KB数据即可从文件中的任何位置读取。</target>
        </trans-unit>
        <trans-unit id="9d8dfb8db8455ecd5d0870b56c91dc170b678608" translate="yes" xml:space="preserve">
          <source>Chris Markiewicz (@effigies): Option to drop file handles (#6)</source>
          <target state="translated">Chris Markiewicz (@effigies):删除文件句柄的选项(#6)</target>
        </trans-unit>
        <trans-unit id="4724151f158c86fd8c19ea81d859245f4fd0545b" translate="yes" xml:space="preserve">
          <source>Compression formats other than GZIP, such as &lt;code&gt;bzip2&lt;/code&gt; and &lt;code&gt;xz&lt;/code&gt;, have better
support for random access.</source>
          <target state="translated">除GZIP以外的其他压缩格式（例如 &lt;code&gt;bzip2&lt;/code&gt; 和 &lt;code&gt;xz&lt;/code&gt; )对随机访问具有更好的支持。</target>
        </trans-unit>
        <trans-unit id="8d7e5dce1e5273e8681a7ae6d358695755094df8" translate="yes" xml:space="preserve">
          <source>Fast random access of gzip files in Python</source>
          <target state="translated">在Python中快速随机访问gzip文件</target>
        </trans-unit>
        <trans-unit id="e9b1b5a87b548242c94848e77f8d1e0fa7a0546f" translate="yes" xml:space="preserve">
          <source>Generates a specified number of seek locations, uniformly spaced
throughout the test file.</source>
          <target state="translated">生成指定数量的搜索位置,均匀地分布在测试文件中。</target>
        </trans-unit>
        <trans-unit id="0e478fd73983d6a952d844cee52beaca8399a1ab" translate="yes" xml:space="preserve">
          <source>Generates a test file.</source>
          <target state="translated">生成一个测试文件。</target>
        </trans-unit>
        <trans-unit id="793479ab82770db726673e6d0463757c5c88b515" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;nibabel&lt;/code&gt; 2.2.x, you need to explicitly set the &lt;code&gt;keep_file_open&lt;/code&gt;
flag:</source>
          <target state="translated">如果您使用的是 &lt;code&gt;nibabel&lt;/code&gt; 2.2.x，则需要显式设置 &lt;code&gt;keep_file_open&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="76355982b037f5e729b9c23c23eb4a4878706af5" translate="yes" xml:space="preserve">
          <source>If you have a large file, you may wish to pre-generate the index once, and
save it out to an index file:</source>
          <target state="translated">如果你有一个大的文件,你可能希望预先生成一次索引,然后保存到索引文件中。</target>
        </trans-unit>
        <trans-unit id="38bad926c3319ce2fb2d8d50c28c85b267624507" translate="yes" xml:space="preserve">
          <source>Index import/export</source>
          <target state="translated">指数进口/出口</target>
        </trans-unit>
        <trans-unit id="c504bbb7149053e98f10eba72c01361dda5975e5" translate="yes" xml:space="preserve">
          <source>Initial work on &lt;code&gt;indexed_gzip&lt;/code&gt; took place at
&lt;a href=&quot;http://www.brainhack.org/&quot;&gt;Brainhack&lt;/a&gt; Paris, at the Institut Pasteur,
24th-26th February 2016, with the support of the
&lt;a href=&quot;https://www.ndcn.ox.ac.uk/divisions/fmrib/&quot;&gt;FMRIB Centre&lt;/a&gt;, at the
University of Oxford, UK.</source>
          <target state="translated">在英国牛津大学&lt;a href=&quot;https://www.ndcn.ox.ac.uk/divisions/fmrib/&quot;&gt;FMRIB中心&lt;/a&gt;的支持下，于2016年2月24日至26日在 &lt;a href=&quot;http://www.brainhack.org/&quot;&gt;巴斯克&lt;/a&gt;研究所的Brainhack巴黎 进行了 &lt;code&gt;indexed_gzip&lt;/code&gt; 的初步工作。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="6a3d46bf66ddc40ec12e9d3af6134e402710be86" translate="yes" xml:space="preserve">
          <source>Intended use</source>
          <target state="translated">预期用途</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="7d35dcdda699d27ffd38e20ef674e85d0ecd15d6" translate="yes" xml:space="preserve">
          <source>Many thanks to the following contributors (listed chronologically):</source>
          <target state="translated">非常感谢下列贡献者(按时间顺序排列):</target>
        </trans-unit>
        <trans-unit id="cc51c52136198a7f0538584cf0f16618a6281cd4" translate="yes" xml:space="preserve">
          <source>Martin Craig (@mcraig-ibme): porting &lt;code&gt;indexed_gzip&lt;/code&gt; to Windows (#3)</source>
          <target state="translated">Martin Craig（@ mcraig-ibme）：将 &lt;code&gt;indexed_gzip&lt;/code&gt; 移植到Windows（＃3）</target>
        </trans-unit>
        <trans-unit id="e9857c7320ae409fa2aa0c2ee7d6d2c24464938e" translate="yes" xml:space="preserve">
          <source>Omer Ozarslan (@ozars): Index import/export (#8)</source>
          <target state="translated">Omer Ozarslan(@ozars)。Index import/export (#8)</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">绩效</target>
        </trans-unit>
        <trans-unit id="e7714211bba202f1959d33709e80c783541c00a4" translate="yes" xml:space="preserve">
          <source>Randomly shuffles these locations</source>
          <target state="translated">随机洗牌这些位置</target>
        </trans-unit>
        <trans-unit id="233bbb94333a484f5ed0de6182087d0049c994b2" translate="yes" xml:space="preserve">
          <source>Seeks to each location, and reads a chunk of data from the file.</source>
          <target state="translated">查找到每个位置,并从文件中读取数据块。</target>
        </trans-unit>
        <trans-unit id="ab864b09e57961fbe0cba2aa1e7545f8d61b858e" translate="yes" xml:space="preserve">
          <source>Sławomir Zborowski (@szborows): &lt;code&gt;seek_points&lt;/code&gt; method (#35), README fixes
(#34)</source>
          <target state="translated">SławomirZborowski（@szborows）： &lt;code&gt;seek_points&lt;/code&gt; 方法（＃35），自述文件修复（＃34）</target>
        </trans-unit>
        <trans-unit id="ca3fe20a76eef5b93fc813096f74194ff14e340e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexed_gzip&lt;/code&gt; project is a Python extension which aims to provide a
drop-in replacement for the built-in Python &lt;code&gt;gzip.GzipFile&lt;/code&gt; class, the
&lt;code&gt;IndexedGzipFile&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;indexed_gzip&lt;/code&gt; 项目是一个Python扩展，它旨在提供一个下拉更换为内置Python &lt;code&gt;gzip.GzipFile&lt;/code&gt; 班， &lt;code&gt;IndexedGzipFile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2020c8688dfec0531156ded271b7fbbfab60304b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexed_gzip&lt;/code&gt; project is based upon the &lt;code&gt;zran.c&lt;/code&gt; example (written by Mark
Alder) which ships with the &lt;a href=&quot;http://www.zlib.net/&quot;&gt;zlib&lt;/a&gt; source code.</source>
          <target state="translated">该 &lt;code&gt;indexed_gzip&lt;/code&gt; 项目是基于 &lt;code&gt;zran.c&lt;/code&gt; 示例（由Mark阿尔德写入），其附带的&lt;a href=&quot;http://www.zlib.net/&quot;&gt;zlib的&lt;/a&gt;源代码。</target>
        </trans-unit>
        <trans-unit id="571108e734514a628d39943aec1102e7f10b83c3" translate="yes" xml:space="preserve">
          <source>The next time you open the same file, you can load in the index:</source>
          <target state="translated">下次打开同一个文件时,可以装入索引。</target>
        </trans-unit>
        <trans-unit id="636c5d89ac9f1f727dad82399c7938d516d23ead" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;gzip.GzipFile&lt;/code&gt; class exposes a random access-like interface (via
its &lt;code&gt;seek&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods), but every time you seek to a new point in the
uncompressed data stream, the &lt;code&gt;GzipFile&lt;/code&gt; instance has to start decompressing
from the beginning of the file, until it reaches the requested location.</source>
          <target state="translated">标准的 &lt;code&gt;gzip.GzipFile&lt;/code&gt; 类提供了一个类似于访问的随机接口（通过其 &lt;code&gt;seek&lt;/code&gt; 和 &lt;code&gt;read&lt;/code&gt; 方法），但是每次您在未压缩的数据流中寻找新点时， &lt;code&gt;GzipFile&lt;/code&gt; 实例都必须从文件的开头开始解压缩。 ，直到到达要求的位置。</target>
        </trans-unit>
        <trans-unit id="836e9fff95ab4a5fe2bf4b555e9c067ea9d1d493" translate="yes" xml:space="preserve">
          <source>This plot shows the results of this test for a few compresed files of varying
sizes, with 500 seeks:</source>
          <target state="translated">这张图显示了对几个大小不一的压缩文件的测试结果,有500个寻求。</target>
        </trans-unit>
        <trans-unit id="d123ab8a3f3d78a085aca5754e3a5c9941e494a4" translate="yes" xml:space="preserve">
          <source>To compile &lt;code&gt;indexed_gzip&lt;/code&gt;, make sure you have &lt;a href=&quot;http://cython.org/&quot;&gt;cython&lt;/a&gt;
installed (and &lt;code&gt;numpy&lt;/code&gt; if you want to compile the tests), and then run:</source>
          <target state="translated">要编译 &lt;code&gt;indexed_gzip&lt;/code&gt; ，请确保已 安装&lt;a href=&quot;http://cython.org/&quot;&gt;cython&lt;/a&gt;（如果要编译测试，请安装 &lt;code&gt;numpy&lt;/code&gt; ），然后运行：</target>
        </trans-unit>
        <trans-unit id="13e1d3e99a0f0b17e452fdde430ccea790d0e994" translate="yes" xml:space="preserve">
          <source>To run the tests, type the following; you will need &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;pytest&lt;/code&gt;
and &lt;code&gt;pytest-cov&lt;/code&gt; installed:</source>
          <target state="translated">要运行测试，请键入以下内容；您将需要安装 &lt;code&gt;numpy&lt;/code&gt; ， &lt;code&gt;pytest&lt;/code&gt; 和 &lt;code&gt;pytest-cov&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="37fc0f7f827f334cf88e3cac9a4f13ff294c82f7" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;indexed_gzip&lt;/code&gt; with &lt;code&gt;nibabel&lt;/code&gt; 2.1.0 or older, you need to do a little
more work:</source>
          <target state="translated">要在 &lt;code&gt;nibabel&lt;/code&gt; 2.1.0或更早版本上使用 &lt;code&gt;indexed_gzip&lt;/code&gt; ，您需要做更多的工作：</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="acb4470b21baa9bf78c366acae859a6a5a76e3c6" translate="yes" xml:space="preserve">
          <source>Using with &lt;code&gt;nibabel&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;nibabel&lt;/code&gt; 一起使用</target>
        </trans-unit>
        <trans-unit id="15ced7a0e986222ea72d01a3804ddf11a636f252" translate="yes" xml:space="preserve">
          <source>Write support</source>
          <target state="translated">写支持</target>
        </trans-unit>
        <trans-unit id="5565c659f2414dfd3fa517b1ec534b07786d9152" translate="yes" xml:space="preserve">
          <source>You can also install &lt;code&gt;indexed_gzip&lt;/code&gt; from conda-forge:</source>
          <target state="translated">您也可以从 &lt;code&gt;indexed_gzip&lt;/code&gt; - forge安装indexed_gzip：</target>
        </trans-unit>
        <trans-unit id="593b84192482bf5ebb5c0c754db92afbc5f1ca4f" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;indexed_gzip&lt;/code&gt; with &lt;code&gt;nibabel&lt;/code&gt;. &lt;code&gt;nibabel&lt;/code&gt; &amp;gt;= 2.3.0 will
automatically use &lt;code&gt;indexed_gzip&lt;/code&gt; if it is present:</source>
          <target state="translated">您可以将 &lt;code&gt;indexed_gzip&lt;/code&gt; 与 &lt;code&gt;nibabel&lt;/code&gt; 一起使用。如果存在， &lt;code&gt;nibabel&lt;/code&gt; &amp;gt; = 2.3.0将自动使用 &lt;code&gt;indexed_gzip&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2e6da209495418136ac6cff6badd9f7644e2d780" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;indexed_gzip&lt;/code&gt; module directly:</source>
          <target state="translated">您可以直接使用 &lt;code&gt;indexed_gzip&lt;/code&gt; 模块：</target>
        </trans-unit>
        <trans-unit id="36b11df25d44eda04c68df4ba7c2aa6f6a889355" translate="yes" xml:space="preserve">
          <source>You may find &lt;code&gt;indexed_gzip&lt;/code&gt; useful if you need to read from large GZIP files.
A major advantage of &lt;code&gt;indexed_gzip&lt;/code&gt; is that it will work with any GZIP file.
However, if you have control over the creation of your GZIP files, you may
wish to consider some alternatives:</source>
          <target state="translated">如果您需要读取大型GZIP文件，则可能会发现 &lt;code&gt;indexed_gzip&lt;/code&gt; 很有用。 &lt;code&gt;indexed_gzip&lt;/code&gt; 的主要优点是它可以与任何GZIP文件一起使用。但是，如果您可以控制GZIP文件的创建，则不妨考虑一些替代方法：</target>
        </trans-unit>
        <trans-unit id="55a76ae0d0d2bd2d1305e5fec70b297f002e48a7" translate="yes" xml:space="preserve">
          <source>Zalan Rajna (@zrajna): bug fixes (#2)</source>
          <target state="translated">扎兰-拉杰纳(@zrajna):错误修复(#2)</target>
        </trans-unit>
        <trans-unit id="00d3560860ce3645f9ea13e12b5de77cf558cd9e" translate="yes" xml:space="preserve">
          <source>indexed_gzip</source>
          <target state="translated">索引的_gzip</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
