<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/eyefi/">
    <body>
      <group id="eyefi">
        <trans-unit id="475144e4e531f3a6ea02c1638f44db7ef05db5be" translate="yes" xml:space="preserve">
          <source>After associating with one of the configured wireless networks,
the card authenticates a session with the server. The shared
secret needs to be obtained from the settings of the Win/OSX
application. The server can cope with multiple cards that are
identified by their MAC address. After authentication, the card
pushes the images that have not yet been posted to the server.
The server unpacks the tarred bundle (optionally in a directory
per MAC address). It then resolves the wireless networks that were
logged by the card at the time the picture was taken into a
geolocation using the Google API. The geolocation data is stored
in an XMP sidecar. Finally, you can trigger your own scripts
on complete upload, extraction and tagging.</source>
          <target state="translated">在与其中一个配置的无线网络关联后,该卡与服务器进行会话验证。共享秘密需要从Win/OSX应用程序的设置中获得。服务器可以应付多张通过MAC地址识别的卡。认证后,卡将尚未发布的图像推送到服务器。服务器会解压压缩包(可选择在每个MAC地址的目录中)。然后,它使用Google API将图片拍摄时卡记录的无线网络解析为地理位置。地理定位数据存储在一个XMP sidecar中。最后,你可以在完成上传、提取和标记时触发自己的脚本。</target>
        </trans-unit>
        <trans-unit id="569494533c94be55518941d5feffa05b921bf327" translate="yes" xml:space="preserve">
          <source>EyeFi Server Framework</source>
          <target state="translated">EyeFi服务器框架</target>
        </trans-unit>
        <trans-unit id="2e965268fb0c93a28147b6d204ef615267153d61" translate="yes" xml:space="preserve">
          <source>The EyeFi cards include both some 2-8GB of SDHC storage and an</source>
          <target state="translated">EyeFi卡包括一些2-8GB的SDHC存储空间和一个</target>
        </trans-unit>
        <trans-unit id="344b637c52822d1fd473e292725930fb5a54aaf1" translate="yes" xml:space="preserve">
          <source>embedded microprocessor with WiFi (802.11bgn) that can upload
images as soon as they have been captured. While the software
bundled with the cards is closed and Win/OSX only, the protocol
is decently clean SOAP (like XML RPC via HTTP) and can be
implemented with twisted and soappy.</source>
          <target state="translated">带WiFi(802.11bgn)的嵌入式微处理器,可以在拍摄到图像后立即上传。虽然与卡捆绑的软件是封闭的,而且只有Win/OSX,但协议是体面干净的SOAP(像XML RPC通过HTTP),可以用twisted和soappy实现。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
