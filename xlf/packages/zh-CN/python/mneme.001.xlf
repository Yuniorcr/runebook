<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/mneme/">
    <body>
      <group id="mneme">
        <trans-unit id="09e84feb433d3a14815a54dd74108f110ab75cb6" translate="yes" xml:space="preserve">
          <source>![Mneme demo](https://raw.githubusercontent.com/Risto-Stevcev/flask-mneme/master/mneme/demo.gif)</source>
          <target state="translated">！[Mneme演示]（https://raw.githubusercontent.com/Risto-Stevcev/flask-mneme/master/mneme/demo.gif）</target>
        </trans-unit>
        <trans-unit id="88dd41a15ecc553f3a30ffe00fbc529f8acbe1fd" translate="yes" xml:space="preserve">
          <source># Mneme</source>
          <target state="translated">＃Mneme</target>
        </trans-unit>
        <trans-unit id="e3ae97f26c58c2efb405f97615be7a226ebde0d7" translate="yes" xml:space="preserve">
          <source>## Heroku</source>
          <target state="translated">## Heroku</target>
        </trans-unit>
        <trans-unit id="ce0ac5372b84e816959d2c6fbb5a716c6e783cd5" translate="yes" xml:space="preserve">
          <source>## Instructions</source>
          <target state="translated">##说明</target>
        </trans-unit>
        <trans-unit id="86610a7b8d514ac31c557e3a8034f78154689ed7" translate="yes" xml:space="preserve">
          <source>### Exporting</source>
          <target state="translated">###导出</target>
        </trans-unit>
        <trans-unit id="970226ac58eb902347c2e43b1b0394c5687abeb8" translate="yes" xml:space="preserve">
          <source>### Shortcuts</source>
          <target state="translated">###快捷键</target>
        </trans-unit>
        <trans-unit id="43cb330d83386f66833a58341b6605b244098194" translate="yes" xml:space="preserve">
          <source>* *Ctrl-Alt-PgDown* when viewing a particular mneme file will go into *Edit mode*.</source>
          <target state="translated">* * Ctrl-Alt-PgDown *在查看特定的mneme文件时将进入*编辑模式*。</target>
        </trans-unit>
        <trans-unit id="4fbfba747725b652c9abf193370e537913331e47" translate="yes" xml:space="preserve">
          <source>* *Ctrl-Alt-PgUp* when viewing a particular mneme file will go into *View mode*.</source>
          <target state="translated">* * Ctrl-Alt-PgUp *在查看特定的mneme文件时将进入*查看模式*。</target>
        </trans-unit>
        <trans-unit id="a5e1c3db6aeead093db7707ba01af7e3d876f319" translate="yes" xml:space="preserve">
          <source>* *Shift-tab* in the editing window will un-indent the selected text by 4 spaces (*for multi-line code*).</source>
          <target state="translated">*编辑窗口中的Shift-tab *会将所选文本取消缩进4个空格（*对于多行代码*）。</target>
        </trans-unit>
        <trans-unit id="a64e5c400b6753626b8c305ddb447a2ac5fbfd72" translate="yes" xml:space="preserve">
          <source>* *Tab* in the editing window will indent the selected text by 4 spaces (*for multi-line code*).</source>
          <target state="translated">*编辑窗口中的*制表符*将所选文本缩进4个空格（*对于多行代码*）。</target>
        </trans-unit>
        <trans-unit id="417f1db98e967aa15d5a12ece6213ead93f3b15f" translate="yes" xml:space="preserve">
          <source>** Note: ** *Using the Heroku/MongoDB/Flask web stack is optional for using the mneme file format. The file format is just a representation structure that can be used by anything that can handle JSON and markdown formats.*</source>
          <target state="translated">**注意：** *对于使用mneme文件格式，使用Heroku / MongoDB / Flask Web堆栈是可选的。文件格式只是一种表示结构，任何可以处理JSON和降价格式的文件都可以使用。*</target>
        </trans-unit>
        <trans-unit id="6f5adaa50256255ba07a230a0207cdc0f874538d" translate="yes" xml:space="preserve">
          <source>**Mneme** is a new and elegant note-taking format with a web editor/viewer. The web app edits and views a new type of notes format called a *mneme* file.</source>
          <target state="translated">** Mneme **是一种带有Web编辑器/查看器的新颖优雅的笔记记录格式。该Web应用程序可编辑和查看一种称为* mneme *文件的新型便笺格式。</target>
        </trans-unit>
        <trans-unit id="907c95ca766448723a1bfbaa3f25ce242882df13" translate="yes" xml:space="preserve">
          <source>1. Create a **Heroku** account.</source>
          <target state="translated">1.创建一个**Heroku**账户。</target>
        </trans-unit>
        <trans-unit id="7b466bd7217fc789ad26bdaf85fd10008b851bc2" translate="yes" xml:space="preserve">
          <source>1. Create a new **MongoHQ** database using the free *512MB sandbox* version (or paid if you want/need it).</source>
          <target state="translated">1.使用免费的*512MB沙盒*版本(如果你想要/需要,也可以付费)创建一个新的**MongoHQ**数据库。</target>
        </trans-unit>
        <trans-unit id="019c55620a18cfe173919090cb8ea82e51a57624" translate="yes" xml:space="preserve">
          <source>1. Create a new Heroku app by running the command:</source>
          <target state="translated">1.通过运行命令创建一个新的Heroku应用程序。</target>
        </trans-unit>
        <trans-unit id="557b17778f21904202574a2ae2354dfcb5cb30cd" translate="yes" xml:space="preserve">
          <source>1. Go to Databases-&amp;gt;(*your new mneme database*)-&amp;gt;Admin-&amp;gt;Overview at the MongoHQ website dashboard and grab the line of code that says ``Mongo Console``.</source>
          <target state="translated">1.转到MongoHQ网站仪表板上的Databases-&amp;gt;（*您新的mneme数据库*）-&amp;gt; Admin-&amp;gt; Overview，获取显示&amp;ldquo; Mongo Console&amp;rdquo;的代码行。</target>
        </trans-unit>
        <trans-unit id="eb22fa5c88e8bc51d896c83e61f4989be165bfe2" translate="yes" xml:space="preserve">
          <source>1. Install **Mneme**.</source>
          <target state="translated">第1次安装**Mneme**。</target>
        </trans-unit>
        <trans-unit id="008669acde6faab8e838925d202aee437b161da6" translate="yes" xml:space="preserve">
          <source>1. Locate the **Mongo URI** in Databases-&amp;gt;(*your new mneme database*)-&amp;gt;Admin-&amp;gt;Overview and identify the host, port and database.</source>
          <target state="translated">1.在数据库-&amp;gt;（*新的mneme数据库*）-&amp;gt;管理-&amp;gt;概述中找到** Mongo URI **，并标识主机，端口和数据库。</target>
        </trans-unit>
        <trans-unit id="af9c9210c9a54da18806c2660743d1097a030ea7" translate="yes" xml:space="preserve">
          <source>1. Start the environment with this command:</source>
          <target state="translated">1.用这个命令启动环境。</target>
        </trans-unit>
        <trans-unit id="c068f465d660d4cd63c4f6a4196dd6b9b8b5a5b2" translate="yes" xml:space="preserve">
          <source>2. Create a new user to access the database.</source>
          <target state="translated">2.创建一个新用户来访问数据库。</target>
        </trans-unit>
        <trans-unit id="b1a1e0664741889e818c2c9170534cc3ec1e59bd" translate="yes" xml:space="preserve">
          <source>2. Install all of the missing dependencies listed in the ``dependencies.txt`` file in the cloned mneme folder.</source>
          <target state="translated">2.安装克隆的mneme文件夹中``dependencies.txt``文件中列出的所有缺失的依赖关系。</target>
        </trans-unit>
        <trans-unit id="6c744da9f3db4e6dca9ec8a748328219789193c9" translate="yes" xml:space="preserve">
          <source>2. Login to Heroku.</source>
          <target state="translated">登录到Heroku。</target>
        </trans-unit>
        <trans-unit id="82d60f8e6822e75a6d73cffdd1426a23c392d2d6" translate="yes" xml:space="preserve">
          <source>2. Replace ``&amp;lt;user&amp;gt;`` and ``&amp;lt;password&amp;gt;`` with the username and password you created for your database earlier, and run it in the command line. You should now be connected to your new database!</source>
          <target state="translated">2.用先前为数据库创建的用户名和密码替换&amp;ldquo; &amp;lt;用户&amp;gt;&amp;rdquo;和&amp;ldquo; &amp;lt;密码&amp;gt;&amp;rdquo;，然后在命令行中运行它。现在，您应该已连接到新数据库！</target>
        </trans-unit>
        <trans-unit id="61944f367479db0604e6e4ff021c6992f7be109a" translate="yes" xml:space="preserve">
          <source>2. Run the *mneme* ``register`` command.</source>
          <target state="translated">2.运行*mneme*``register``命令。</target>
        </trans-unit>
        <trans-unit id="5ecd818703de9c943bf5487e46f08292c3173a9a" translate="yes" xml:space="preserve">
          <source>2. Test your installation.</source>
          <target state="translated">2.测试您的安装。</target>
        </trans-unit>
        <trans-unit id="83f61257764d44098c430534af809a43e08a89dd" translate="yes" xml:space="preserve">
          <source>2. Upload your public key to Heroku if you haven't already:</source>
          <target state="translated">2.如果你还没有上传你的公钥到Heroku。</target>
        </trans-unit>
        <trans-unit id="1674fc0d8b9924aa4e8e3beff2ccb511183f9b23" translate="yes" xml:space="preserve">
          <source>3. Clone the **Mneme** source code.</source>
          <target state="translated">3.克隆**Mneme**源码。</target>
        </trans-unit>
        <trans-unit id="5f857831a36cdfe801ec25a131c2ce4f6dbcb9c9" translate="yes" xml:space="preserve">
          <source>3. Create a **MongoHQ** account.</source>
          <target state="translated">3.创建一个**MongoHQ**账户。</target>
        </trans-unit>
        <trans-unit id="78eaa1e9c16c39023b9603e910b006d078155c3e" translate="yes" xml:space="preserve">
          <source>3. Push the files upstream to Heroku:</source>
          <target state="translated">3.将文件推送到Heroku上游。</target>
        </trans-unit>
        <trans-unit id="f6d83ccb37a0dce8714351ff8a0f3f09389581b2" translate="yes" xml:space="preserve">
          <source>3. Test your MongoHQ database.</source>
          <target state="translated">3.测试你的MongoHQ数据库。</target>
        </trans-unit>
        <trans-unit id="fbf08592ce507a34e49f3e9f16e0ef3a0711d89c" translate="yes" xml:space="preserve">
          <source>4. Add a new **MongoHQ** database for *mneme*.</source>
          <target state="translated">4.为*mneme*添加一个新的**MongoHQ**数据库。</target>
        </trans-unit>
        <trans-unit id="6d68cfa458c3583d040d4ad6dbd373c081495983" translate="yes" xml:space="preserve">
          <source>4. Create a *virtualenv* environment.</source>
          <target state="translated">4.创建一个*virtualenv*环境。</target>
        </trans-unit>
        <trans-unit id="21cf561b32b8f626ceb69e8528b43b5f309e5970" translate="yes" xml:space="preserve">
          <source>5. Register your **MongoHQ** database with *mneme*.</source>
          <target state="translated">5.用*mneme*注册你的**MongoHQ**数据库。</target>
        </trans-unit>
        <trans-unit id="cdf62ad05bfe8fd3e5952f8537cafd2677bb5e1a" translate="yes" xml:space="preserve">
          <source>5. Start the *virtualenv* environment and install the python dependencies.</source>
          <target state="translated">5.启动*virtualenv*环境并安装python依赖项。</target>
        </trans-unit>
        <trans-unit id="e315726c4f3a4a33a0c30ee7f26f59214e30348f" translate="yes" xml:space="preserve">
          <source>6. Add or modify an *authorized user*.</source>
          <target state="translated">6.添加或修改*授权用户*。</target>
        </trans-unit>
        <trans-unit id="bfe953b32fd925b46ecc1aed8e06d1767a9a5e17" translate="yes" xml:space="preserve">
          <source>6. Test that the ``Procfile`` works.</source>
          <target state="translated">6.测试 &quot;Procfile &quot;是否有效。</target>
        </trans-unit>
        <trans-unit id="3d42a67e94099097afd242908dfead652a0c5ee1" translate="yes" xml:space="preserve">
          <source>7. Deploy the application to Heroku.</source>
          <target state="translated">7.将应用程序部署到Heroku。</target>
        </trans-unit>
        <trans-unit id="7c7cd389ebdac94fea5385eb9db65bc84e295a3a" translate="yes" xml:space="preserve">
          <source>7. Test out **Mneme**!</source>
          <target state="translated">7.测试一下**Mneme**!</target>
        </trans-unit>
        <trans-unit id="02b7d4e0f84dad92e7be0c948e5dd8c8b3672c23" translate="yes" xml:space="preserve">
          <source>8. Test your Heroku app by going to the link generated by Heroku for your app. See Heroku's [getting started with python](https://devcenter.heroku.com/articles/getting-started-with-python) for reference and further reading.</source>
          <target state="translated">8.测试您的Heroku应用,进入Heroku为您的应用生成的链接。参见Heroku的[getting started with python](https://devcenter.heroku.com/articles/getting-started-with-python)以获得参考和进一步阅读。</target>
        </trans-unit>
        <trans-unit id="10286f3b9354359589309eefa29cd0c013ef926f" translate="yes" xml:space="preserve">
          <source>A *mneme* file is a combination file format. The file format's basic structure comprises of a **JSON** *object*. Each **key** in the key/value pair refers to a *topic* name, and the **value** is either a new set of key/value pairs (indicating a *subnode*), or a *string* that's formatted in **markdown** syntax.</source>
          <target state="translated">*mneme*文件是一种组合文件格式。该文件格式的基本结构由一个**JSON***对象组成。键/值对中的每个**键**指的是一个*主题*名,**值**是一组新的键/值对(表示一个*子节点*),或者是一个用**markdown**语法格式化的*字符串。</target>
        </trans-unit>
        <trans-unit id="0a138a7c40ba83102abf437376359450ab57fcd8" translate="yes" xml:space="preserve">
          <source>A powerful note-taking format with a web viewer/editor.</source>
          <target state="translated">一个强大的笔记格式与网络浏览器/编辑器。</target>
        </trans-unit>
        <trans-unit id="5f3c53767334c26320a37ac0e75611f8264697c3" translate="yes" xml:space="preserve">
          <source>After you've written a bunch of notes using *mneme*, you might want to keep the files locally in their native JSON file format for reference or as a backup. MongoDB preserves the *mneme* files in their native JSON format automatically. Here's how to do a simple export using the same credentials you used in the steps to get it set up:</source>
          <target state="translated">当你用*mneme*写了一堆笔记之后,你可能想把这些文件以它们的本地JSON文件格式保存在本地,以便参考或作为备份。MongoDB会自动将*mneme*文件以其本地JSON格式保存。下面是如何使用你在设置步骤中使用的相同凭证进行简单的导出。</target>
        </trans-unit>
        <trans-unit id="e9f3ac864d54c46496c7f33074583fdf9dabb40b" translate="yes" xml:space="preserve">
          <source>Ex: ``mneme register --db mneme --username myusername --password mypassword --host oceanic.mongohq.com --port 10052``</source>
          <target state="translated">例:``mneme register --db mneme --username myusername --password mypassword --host oceanic.mongohq.com --port 10052``。</target>
        </trans-unit>
        <trans-unit id="4e3a8d4daaef0bcf513beadc82bed12720cf9698" translate="yes" xml:space="preserve">
          <source>Ex: ``mongodb://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@oceanic.mongohq.com:10052/mneme``, *oceanic.mongohq.com* is the hostname, *10052* is the port, *mneme* is the database.</source>
          <target state="translated">例如：``mongodb：// &amp;lt;用户&amp;gt;：&amp;lt;密码&amp;gt; @ oceanic.mongohq.com：10052 / mneme``，* oceanic.mongohq.com *是主机名，* 10052 *是端口，* mneme *是数据库。</target>
        </trans-unit>
        <trans-unit id="875cd14e0aa6042b48ec7dc0c37b43685b28e623" translate="yes" xml:space="preserve">
          <source>Ex: ``pip install Flask gunicorn`` as a bare minimum. You'll also need the rest, such as mongodb's dependencies.</source>
          <target state="translated">例如:``pip install Flask gunicorn``是最基本的。你还需要其他的东西,比如mongodb的依赖关系。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="da89e69f517aea8cc54e21b83adb5db256cb9e5d" translate="yes" xml:space="preserve">
          <source>Fill in the options with the database username/password you created earlier at MongoHQ, and the parameters you identified from the Mongo URI.</source>
          <target state="translated">在选项中填写你之前在MongoHQ创建的数据库用户名/密码,以及你从Mongo URI中确定的参数。</target>
        </trans-unit>
        <trans-unit id="8b976aada7a6746ab7efbc31cb100a779554fa53" translate="yes" xml:space="preserve">
          <source>Go to Databases-&amp;gt;(*your new mneme database*)-&amp;gt;Admin-&amp;gt;Users at the MongoHQ website dashboard, and click the ``Add User`` button to add a new user.</source>
          <target state="translated">转到MongoHQ网站仪表板上的数据库-&amp;gt;（*您的新mneme数据库*）-&amp;gt;管理员-&amp;gt;用户，然后单击``添加用户''按钮添加一个新用户。</target>
        </trans-unit>
        <trans-unit id="4aa90fd55ec995fd82e25a6ed7cc964e699f2bfd" translate="yes" xml:space="preserve">
          <source>Go to [http://www.mongohq.com/](http://www.mongohq.com/), click ``Sign Up`` and follow the steps to register.</source>
          <target state="translated">进入[http://www.mongohq.com/](http://www.mongohq.com/),点击 &quot;注册&quot;,按照步骤进行注册。</target>
        </trans-unit>
        <trans-unit id="00c4ecac3dc857a76de4bb150881246b8a085f68" translate="yes" xml:space="preserve">
          <source>Here is an animated demo of how the web app looks:</source>
          <target state="translated">以下是网页应用的动画演示。</target>
        </trans-unit>
        <trans-unit id="bad811ffc1488652cb21c854f382992ef826e95c" translate="yes" xml:space="preserve">
          <source>If you don't have a public key (``ls ~/.ssh/id_rsa.pub`` returns nothing), Heroku will prompt you to add one automatically. You can use:</source>
          <target state="translated">如果你没有公钥(``ls ~/.ssh/id_rsa.pub``什么也不返回),Heroku会提示你自动添加一个。你可以使用</target>
        </trans-unit>
        <trans-unit id="14f3394e43b403b16aec5e79f51bd1adadec5c83" translate="yes" xml:space="preserve">
          <source>In the clone directory, you should see several python files such as ``manage.py``, and folders like ``templates`` and ``logs``. Create a *virtualenv* environment in this directory and name it ``venv``. Type:</source>
          <target state="translated">在克隆目录下,你应该看到几个python文件,如``manage.py``,以及``templates``和``logs``等文件夹。在这个目录下创建一个*virtualenv*环境,并命名为``venv``。类型。</target>
        </trans-unit>
        <trans-unit id="407a8903e98e215669f695151429bc917e58626e" translate="yes" xml:space="preserve">
          <source>Mneme is named after **Mneme**, the Muse of Memory. The tree-like structure of the file format makes it easy to divide up concepts into subconcepts as small as is necessary. The markdown format of the text makes it easy to quickly add formatting like bold, italics, code, or lists. The powerful combination of a JSON tree with markdown text makes it easy to maintain, organize and manipulate all of your notes!</source>
          <target state="translated">Mneme以**Mneme**命名,即记忆的缪斯。文件格式的树状结构使其很容易将概念划分为必要的小的子概念。文本的markdown格式使其很容易快速添加粗体、斜体、代码或列表等格式。JSON树与markdown文本的强大组合,使您可以轻松地维护、组织和操作所有的笔记!</target>
        </trans-unit>
        <trans-unit id="1045e4a5fc10c8078d94072e50bd46bbee7a49f1" translate="yes" xml:space="preserve">
          <source>Run ``foreman start`` in the directory that ``Procfile`` lives in. You might need to install foreman if you haven't already for this step.</source>
          <target state="translated">在``Procfile``所在的目录下运行``foreman start``。如果你还没有安装foreman,你可能需要为这一步安装foreman。</target>
        </trans-unit>
        <trans-unit id="086fcb4800a3da34cf44eef9a14d42e7d5156056" translate="yes" xml:space="preserve">
          <source>Run ``git clone https://github.com/Risto-Stevcev/flask-mneme.git`` in the terminal and the directory you want it to install into.</source>
          <target state="translated">在终端中运行``git clone https://github.com/Risto-Stevcev/flask-mneme.git``和你想安装的目录。</target>
        </trans-unit>
        <trans-unit id="228b316dc783a72639d58714e3050a3e606135a9" translate="yes" xml:space="preserve">
          <source>Run ``heroku login`` in the terminal and type in your account credentials.</source>
          <target state="translated">在终端机上运行``heroku登录```,并输入你的账户凭证。</target>
        </trans-unit>
        <trans-unit id="dc338e6d4825c8d8e70e40bb80b8dd4f0af4c658" translate="yes" xml:space="preserve">
          <source>Run ``mneme runserver`` again and go to ``localhost:5000``. Then log in with your *authorized user* credentials and start playing around with mneme.</source>
          <target state="translated">再次运行``mneme runserver``,然后进入``localhost:5000``。然后用你的*授权用户*凭证登录,开始玩弄mneme。</target>
        </trans-unit>
        <trans-unit id="7de2b670f431ecdda0fb88dffaf00c8dc1a63d0b" translate="yes" xml:space="preserve">
          <source>Run something like ``mneme authorize --user hello --password world``, which in this case would authorize user ``hello`` with the password ``world`` to use the *mneme* web app.</source>
          <target state="translated">运行类似``mneme authorize --user hello --password world``这样的命令,在这种情况下,将授权用户``hello``和密码``world``使用*mneme*网络应用。</target>
        </trans-unit>
        <trans-unit id="05900126009a29532f9f7408bd54a0e57c51bd12" translate="yes" xml:space="preserve">
          <source>Start the server by typing ``mneme runserver`` and go to ``localhost:5000`` in your browser. It should return a ``404 error`` because you haven't registered a *mongodb database* yet.</source>
          <target state="translated">输入``mneme runerver``,然后在浏览器中进入``localhost:5000``来启动服务器。它应该会返回一个``404错误``,因为你还没有注册一个*mongodb数据库*。</target>
        </trans-unit>
        <trans-unit id="e278f6461902662939a6ac617e933404af24ed2a" translate="yes" xml:space="preserve">
          <source>That's it! I hope this was easy to set up, and I hope you enjoy using **Mneme**! If you have any feature requests, please submit an issue on the project GitHub page with the label ``enhancement``, or ``bug`` if you happen to find bugs. Or submit a pull request if you're interested in contributing.</source>
          <target state="translated">就这样吧! 我希望这很容易设置,也希望你喜欢使用**Mneme**! 如果你有任何功能需求,请在项目GitHub页面上提交问题,标签为 &quot;enhancement&quot;,如果你碰巧发现bug,请提交 &quot;bug&quot;。如果你有兴趣做出贡献,也可以提交一个拉取请求。</target>
        </trans-unit>
        <trans-unit id="076f3d989d0438e50ab7fdbe704cf668d4bd1a5c" translate="yes" xml:space="preserve">
          <source>The command should have added a remote repository called ``heroku``. Check by typing ``git remote -v``.</source>
          <target state="translated">该命令应该添加了一个名为 &quot;heroku &quot;的远程仓库,通过输入 &quot;git remote -v &quot;来检查。输入``git remote -v``进行检查。</target>
        </trans-unit>
        <trans-unit id="dd00477f2d0ff4d2961059e5056a36adc9c235d7" translate="yes" xml:space="preserve">
          <source>The interface is self-explanatory. You can use ``CTRL-S`` when viewing/editing a particular *mneme* file to quickly save client-side. The file isn't saved on the server-side until you click ``Save Mneme``, which will redirect you to the main page with all of the *mnemes* listed.</source>
          <target state="translated">界面是不言而喻的。你可以在查看/编辑某个*mneme*文件时,使用``CTRL-S``来快速保存客户端。在你点击``Save Mneme``之前,文件不会保存在服务器端,它会将你重定向到列出所有*mnemes*的主页面。</target>
        </trans-unit>
        <trans-unit id="1e1497beafb64991d8ce9c58f811fa46386619e2" translate="yes" xml:space="preserve">
          <source>The viewer creates a tree of *topics* from the *mneme* file, and the bottom-most nodes are always *strings* in **markdown** format containing more detailed information about the topic/subtopic. The editor/viewer makes it easy to edit and view the *mneme* file.</source>
          <target state="translated">查看器从*mneme*文件中创建了一棵*主题树,最底层的节点始终是**markdown**格式的*字符串,包含有关主题/子主题的更多详细信息。编辑器/查看器可以方便地编辑和查看*mneme*文件。</target>
        </trans-unit>
        <trans-unit id="36521bac9969ac2309459682098aa4a20346dd9e" translate="yes" xml:space="preserve">
          <source>View on PyPI: https://pypi.python.org/pypi/mneme/</source>
          <target state="translated">在PyPI上查看:https://pypi.python.org/pypi/mneme/</target>
        </trans-unit>
        <trans-unit id="3dec39cd17fa589f43a9d4f2b6947214db12b1a6" translate="yes" xml:space="preserve">
          <source>You probably want to be able to use *mneme* as a web app so you can edit notes on your mobile phone or tablet wherever you are. It also opens the door to modify the web app in the ways you want it to work. Here are the steps to get *mneme* up and running with Heroku.</source>
          <target state="translated">你可能希望能够将*mneme*作为一个网络应用,这样你就可以在手机或平板电脑上编辑笔记,无论你在哪里。这也打开了一扇门,可以按照你想要的方式修改网络应用。以下是让*mneme*在Heroku上运行的步骤。</target>
        </trans-unit>
        <trans-unit id="2ed84bce267553840aa381a88cffce696e7ff747" translate="yes" xml:space="preserve">
          <source>You should see ``(venv)`` next to your shell prompt indicating that it's active.</source>
          <target state="translated">你应该在shell提示符旁边看到``(venv)``表示它是活动的。</target>
        </trans-unit>
        <trans-unit id="82a1c3817ad633969f9126904503737d0b83929f" translate="yes" xml:space="preserve">
          <source>``git push heroku master``</source>
          <target state="translated">``git push heroku大师''</target>
        </trans-unit>
        <trans-unit id="62396acd29eef697b1bf6e5162ce621c28bc2a7b" translate="yes" xml:space="preserve">
          <source>``heroku create``</source>
          <target state="translated">``heroku创建''</target>
        </trans-unit>
        <trans-unit id="b81f5bb752b8b9d5e42f2ad5eee45e5ec570a83b" translate="yes" xml:space="preserve">
          <source>``heroku keys:add ~/.ssh/id_rsa.pub``</source>
          <target state="translated">``heroku键：添加〜/ .ssh / id_rsa.pub``</target>
        </trans-unit>
        <trans-unit id="bfda26aa90ad2d8c74d2a505c6606a663844e275" translate="yes" xml:space="preserve">
          <source>``heroku keys:add``</source>
          <target state="translated">``heroku键：添加''</target>
        </trans-unit>
        <trans-unit id="4e5d5adc7dd4c25f4e4532ff113cdda83f402d64" translate="yes" xml:space="preserve">
          <source>``pip install --user mneme``</source>
          <target state="translated">``pip install --user mneme''</target>
        </trans-unit>
        <trans-unit id="54ae104bee5c885d943f6d59bd8eff2eb3843c68" translate="yes" xml:space="preserve">
          <source>``source venv/bin/activate``</source>
          <target state="translated">``源venv / bin / activate''</target>
        </trans-unit>
        <trans-unit id="67632471e912aea8eeadac6a904db46ff45a1bf5" translate="yes" xml:space="preserve">
          <source>``virtualenv venv``</source>
          <target state="translated">``virtualenv venv''</target>
        </trans-unit>
        <trans-unit id="994156025903cb09997fd6227070e223132af780" translate="yes" xml:space="preserve">
          <source>mongoexport --host (hostname:port) -u &amp;lt;user&amp;gt; -p&amp;lt;pass&amp;gt; --db &amp;lt;db&amp;gt; --collection &amp;lt;collection&amp;gt; --out &amp;lt;json output file&amp;gt;</source>
          <target state="translated">mongoexport --host（主机名：端口）-u &amp;lt;用户&amp;gt; -p &amp;lt;pass&amp;gt; --db &amp;lt;db&amp;gt; --collection &amp;lt;集合&amp;gt; --out &amp;lt;json输出文件&amp;gt;</target>
        </trans-unit>
        <trans-unit id="78853c3f6bde84fa45d65f00c7254d9d7586e0ea" translate="yes" xml:space="preserve">
          <source>mongoexport --host oceanic.mongohq.com:10052 -u mnememaster -ppasswd --db mnemedb --collection mneme --out mnemes.json</source>
          <target state="translated">mongoexport --host oceanic.mongohq.com:10052 -u mnememaster -ppasswd --db mnemedb --collection mneme --out mnemes.json。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
