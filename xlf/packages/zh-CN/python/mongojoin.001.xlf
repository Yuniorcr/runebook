<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/mongojoin/">
    <body>
      <group id="mongojoin">
        <trans-unit id="e8c2015abc739ed2b60050cd69c0c2ac1369416d" translate="yes" xml:space="preserve">
          <source>1.Import the following in the Python Script/Shell</source>
          <target state="translated">1.在Python脚本/Shell中导入以下内容。</target>
        </trans-unit>
        <trans-unit id="4b209fd2841b1983bec7817ecd2e89565f859a1c" translate="yes" xml:space="preserve">
          <source>2.Create a MongoCollection object (One for each of the two collections to be joined)</source>
          <target state="translated">2.创建一个MongoCollection对象(要加入的两个集合各一个)</target>
        </trans-unit>
        <trans-unit id="40bbb4210dca618d132a97d5c517fbee6911c69f" translate="yes" xml:space="preserve">
          <source>3.Create a MongoJoin object to perform the join.</source>
          <target state="translated">3、创建一个MongoJoin对象来执行加入。</target>
        </trans-unit>
        <trans-unit id="7e569cfc07ecdd6bbd3db675c00048120293d321" translate="yes" xml:space="preserve">
          <source>4.All the join functions return a DefaultDict object</source>
          <target state="translated">4.所有的连接函数都会返回一个DefaultDict对象。</target>
        </trans-unit>
        <trans-unit id="31f4ac225f8b22c6bf0b4b3c2db22c06e22ccae2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mailto:nimesh.aug11%40gmail.com&quot;&gt;nimesh.aug11@gmail.com&lt;/a&gt;&lt;a href=&quot;mailto:utsav.tiwary2011%40gmail.com&quot;&gt;utsav.tiwary2011@gmail.com&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;mailto:nimesh.aug11%40gmail.com&quot;&gt;nimesh.aug11@gmail.com &lt;/a&gt;&lt;a href=&quot;mailto:utsav.tiwary2011%40gmail.com&quot;&gt;utsav.tiwary2011@gmail.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f578aaafbab6fe528dc5698abc06cf2f0a20247" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SELECT supplier.supplier_id, supplier.name, order.supplier_id, order.qty FROM supplier JOIN order ON supplier.supplier_id = order.supplier_id WHERE supplier.supplier_id = 1001 AND order.supplier_id = 1001&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SELECT Supplier.supplier_id，Supplier.name，order.supplier_id，order.qty从Supplier JOIN上的订单&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f628958cc62a94885b90e537eb06a788fd10795e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to Use&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;如何使用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b03a1accc4d855fc95487c478b1e7d2516f931c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Installation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;安装：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63d86605c98ea9fc7b894694d5b721d54c73ae25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;R_select_key1 , R_select_key2&lt;/strong&gt; : Key, Value pairs to be fetched after join</source>
          <target state="translated">&lt;strong&gt;R_select_key1，R_select_key2&lt;/strong&gt;：键&lt;strong&gt;，联接&lt;/strong&gt;后要获取的值对</target>
        </trans-unit>
        <trans-unit id="e5d5baf6c8fdfdcdbcf0e1b02ec16d327b5bda4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To perform join on two collections: supplier and order on supplier_id with results having the keys: supplier_id, name and qty and condition supplier_id == 1001&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;要对两个集合执行联接：供应商和对供应商ID的订单，结果的键为：供应商ID，名称和数量以及条件供应商ID == 1001&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25d9298b5a45a32d3fe4f81af80e2e2404a47111" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;filter_key : filter_value&lt;/strong&gt; : Filters for aggregating data prior to performing Join</source>
          <target state="translated">&lt;strong&gt;filter_key：filter_value&lt;/strong&gt;：用于在执行Join之前聚合数据的过滤器</target>
        </trans-unit>
        <trans-unit id="cc38cc9a6d587bb446903a8d359437dbffa81215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;join_key_1&lt;/strong&gt; : Key on which join is to be performed
&lt;strong&gt;join_key_2&lt;/strong&gt; : Key on which join is to be performed</source>
          <target state="translated">&lt;strong&gt;join_key_1&lt;/strong&gt;：将要执行&lt;strong&gt;连接的&lt;/strong&gt;密钥&lt;strong&gt;join_key_2&lt;/strong&gt;：将要执行 &lt;strong&gt;连接的&lt;/strong&gt;密钥</target>
        </trans-unit>
        <trans-unit id="4333369c0c1016d07ca2b6d0ff1d379e8dfec7ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mongojoin&lt;/strong&gt; : Performs SQL-like Joins in MongoDB</source>
          <target state="translated">&lt;strong&gt;mongojoin&lt;/strong&gt;：在MongoDB中执行类似SQL的联接</target>
        </trans-unit>
        <trans-unit id="9cf387206f051a9dc33b1dc8d8d49fd15b402a5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pip install mongojoin&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;pip安装mongojoin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="7aadc9ae13c8d1ed797ad907d159f53b4419566a" translate="yes" xml:space="preserve">
          <source>Feel free to raise issues and contribute.</source>
          <target state="translated">欢迎大家提出问题,献计献策。</target>
        </trans-unit>
        <trans-unit id="eefd14481aa1b7df4cfc5c68cee6e523ee7b6add" translate="yes" xml:space="preserve">
          <source>GitHub Link : &lt;a href=&quot;https://github.com/nimeshkverma/mongo_joins&quot;&gt;https://github.com/nimeshkverma/mongo_joins&lt;/a&gt;</source>
          <target state="translated">GitHub链接：&lt;a href=&quot;https://github.com/nimeshkverma/mongo_joins&quot;&gt;https&lt;/a&gt; : //github.com/nimeshkverma/mongo_joins</target>
        </trans-unit>
        <trans-unit id="e9faf794a1be6084324c89e1a8b72fa62c8f02e0" translate="yes" xml:space="preserve">
          <source>Let us know if you have any queries -</source>
          <target state="translated">如果您有任何疑问,请告诉我们</target>
        </trans-unit>
        <trans-unit id="9aec6d5f996f13b050bc059dcddcaf79cbad158d" translate="yes" xml:space="preserve">
          <source>MongoDB is a de-normalized database and does not offer methods to perform &amp;ldquo;join&amp;rdquo; action on collections.</source>
          <target state="translated">MongoDB是一个非规范化的数据库，不提供对集合执行&amp;ldquo;加入&amp;rdquo;操作的方法。</target>
        </trans-unit>
        <trans-unit id="759a68cbdd8d3216f14049157a807e8ba8490cfc" translate="yes" xml:space="preserve">
          <source>Python library for performing joins on MongoDB collections</source>
          <target state="translated">用于在MongoDB集合上执行连接的Python库。</target>
        </trans-unit>
        <trans-unit id="713d09553c6b6660f0cdb3be8b1d9b95d29cf3e8" translate="yes" xml:space="preserve">
          <source>This is an attempt to provide SQL-like joins to users of MongoDB, who fetch related data from different collections frequently, with a library to combine data from more than one collection</source>
          <target state="translated">这是一个尝试,为MongoDB的用户提供类似于SQL的连接,他们经常从不同的集合中获取相关的数据,并提供一个库来合并来自多个集合的数据。</target>
        </trans-unit>
        <trans-unit id="f71a334a958cbcedd09eac404188c60f70867125" translate="yes" xml:space="preserve">
          <source>This is equivalent to following sql query:</source>
          <target state="translated">这相当于下面的 sql 查询。</target>
        </trans-unit>
        <trans-unit id="fc751da1391a790f7445618abe0fae8997011863" translate="yes" xml:space="preserve">
          <source>To install the package, type the following :</source>
          <target state="translated">要安装该软件包,请输入以下内容。</target>
        </trans-unit>
        <trans-unit id="fcef52354227fa0e113c3a80e5b219fd8fdc0844" translate="yes" xml:space="preserve">
          <source>To perform full-outer join</source>
          <target state="translated">进行全外侧连接</target>
        </trans-unit>
        <trans-unit id="cfff5e1225d410ae4bd81f019be8dcc340a88a41" translate="yes" xml:space="preserve">
          <source>To perform inner join</source>
          <target state="translated">执行内连接</target>
        </trans-unit>
        <trans-unit id="5fc236a2fec3d75d7f305da1fdc927ee05fb0486" translate="yes" xml:space="preserve">
          <source>To perform left-outer join</source>
          <target state="translated">进行左外侧连接</target>
        </trans-unit>
        <trans-unit id="337294f62a40eebd52e32e650ee0e56f65e3118f" translate="yes" xml:space="preserve">
          <source>To perform right-outer join</source>
          <target state="translated">执行右外侧连接</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
