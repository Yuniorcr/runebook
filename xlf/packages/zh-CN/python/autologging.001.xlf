<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/autologging/">
    <body>
      <group id="autologging">
        <trans-unit id="273f19086473dfb34281e511b7a251090e111921" translate="yes" xml:space="preserve">
          <source>(Use &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt; or
&lt;a href=&quot;https://pypi.python.org/pypi/wheel&quot;&gt;wheel&lt;/a&gt; to install the .whl.)</source>
          <target state="translated">（使用&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;或 &lt;a href=&quot;https://pypi.python.org/pypi/wheel&quot;&gt;wheel&lt;/a&gt;安装.whl。）</target>
        </trans-unit>
        <trans-unit id="af8648017801cf2c2d1588dc9f88cd6ffbcad947" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;New in version 1.2.0:&lt;/em&gt; automatic yield/stop tracing of Python
&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-iterator&quot;&gt;generator iterators&lt;/a&gt;
(if the &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;
function is traced).</source>
          <target state="translated">&lt;em&gt;在新版本1.2.0：&lt;/em&gt;自动产量/停止的Python跟踪 &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-iterator&quot;&gt;发生器迭代器&lt;/a&gt; （如果该&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;发电机&lt;/a&gt; 功能被追踪）。</target>
        </trans-unit>
        <trans-unit id="aa9eebe373ff3165f3b24bbf212c3eaefd59434e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;TRACE&lt;/code&gt;&lt;/strong&gt;
The &lt;code&gt;autologging.TRACE&lt;/code&gt; (level 1) log level is registered with the
Python &lt;code&gt;logging&lt;/code&gt; module when Autologging is imported so that tracing
can be configured and controlled independently of application logging.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRACE&lt;/code&gt; &lt;/strong&gt; 的 &lt;code&gt;autologging.TRACE&lt;/code&gt; （级别1）日志级别使用Python注册 &lt;code&gt;logging&lt;/code&gt; 时自动记录被导入以使得跟踪可配置和独立地控制的应用程序日志模块。</target>
        </trans-unit>
        <trans-unit id="be803a9bf04d5a6543f462585ecb3908c98d114b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;logged&lt;/code&gt;&lt;/strong&gt;
Decorate a class to create a &lt;code&gt;__log&lt;/code&gt; member. The logger is named by
default to match the dotted-name of the containing class. A function
may also be decorated, creating a &lt;code&gt;_log&lt;/code&gt; attribute on the function
object whose default name matches the containing module.
A specifically-named logger may also be passed to the decorator (i.e.
&lt;code&gt;logged(my_logger)&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;logged&lt;/code&gt; &lt;/strong&gt; 装饰一个类以创建 &lt;code&gt;__log&lt;/code&gt; 成员。默认情况下，记录器的名称与包含类的点名称相匹配。也可以修饰一个函数，在函数对象上创建一个 &lt;code&gt;_log&lt;/code&gt; 属性，其默认名称与包含的模块匹配。专门命名的记录器也可以传递给装饰器（即 &lt;code&gt;logged(my_logger)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5409e98fa3c0ddb9b1b8c5ec789d3f7d99b901ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;traced&lt;/code&gt;&lt;/strong&gt;
Decorate a class to provide &lt;strong&gt;automatic&lt;/strong&gt; method call/return tracing. By
default, all class, static, and instance methods are traced (excluding
&quot;&lt;strong&gt;special&lt;/strong&gt;&quot; methods, with the exception of &lt;code&gt;__init__&lt;/code&gt; and &lt;code&gt;__call__&lt;/code&gt;).
As with the &lt;code&gt;logged&lt;/code&gt; decorator, the default name of the tracing logger
matches the dotted-name of the containing class and may be overridden by
passing a specifically-named logger to the decorator.
Additionally, this decorator accepts multiple string arguments that
explicitly name the methods to be traced (and may even name
&quot;&lt;strong&gt;special&lt;/strong&gt;&quot; methods).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;traced&lt;/code&gt; &lt;/strong&gt; 装饰一个类以提供&lt;strong&gt;自动&lt;/strong&gt;方法调用/返回跟踪。默认情况下，将跟踪所有类，静态和实例方法（&amp;ldquo;&lt;strong&gt;特殊&lt;/strong&gt; &amp;rdquo;方法除外， &lt;code&gt;__init__&lt;/code&gt; 和 &lt;code&gt;__call__&lt;/code&gt; 除外）。与 &lt;code&gt;logged&lt;/code&gt; 装饰器一样，跟踪记录器的默认名称与包含类的点名称匹配，并且可以通过将特定名称的记录器传递给装饰器来覆盖它。此外，此装饰器接受多个字符串参数，这些参数显式命名要跟踪的方法（甚至可以命名为&amp;ldquo;&lt;strong&gt; special&lt;/strong&gt; &amp;rdquo;方法）。</target>
        </trans-unit>
        <trans-unit id="d119f8ecbc83194d883921f782583301b260b77f" translate="yes" xml:space="preserve">
          <source>A brief example</source>
          <target state="translated">一个简单的例子</target>
        </trans-unit>
        <trans-unit id="f98879524e741ebc955a3cad24a2daaa858b3a88" translate="yes" xml:space="preserve">
          <source>A simple logged and traced class:</source>
          <target state="translated">一个简单的记录和跟踪类。</target>
        </trans-unit>
        <trans-unit id="6e6fb2f6a2bafc04b078d9b9dc79392f1d37bc27" translate="yes" xml:space="preserve">
          <source>Alternatively, download and extract a source .zip or .tar.gz archive
from &lt;a href=&quot;https://github.com/mzipay/Autologging/releases&quot;&gt;https://github.com/mzipay/Autologging/releases&lt;/a&gt;,
&lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt; or
&lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https://sourceforge.net/projects/autologging/files/&lt;/a&gt;.</source>
          <target state="translated">另外，下载并提取源.zip或.tar.gz中解开&lt;a href=&quot;https://github.com/mzipay/Autologging/releases&quot;&gt;https://github.com/mzipay/Autologging/releases&lt;/a&gt;， &lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt;或 &lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https：//开头sourceforge上。净/项目/自动记录/文件/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="741f0dbd2f4233c97931fad6b316ddf0c7714a89" translate="yes" xml:space="preserve">
          <source>Autologging - easier logging and tracing for Python classes</source>
          <target state="translated">Autologging-更容易的Python类的日志记录和跟踪。</target>
        </trans-unit>
        <trans-unit id="dd58c22dc26a5e2161bb32f11f91728ca7d90867" translate="yes" xml:space="preserve">
          <source>Autologging allows for tracing to be configured (and controlled)
independently from application logging. Toggle tracing on/off, write
trace log records to a separate log, and use different formatting for
trace log entries - all via standard Python logging facilities, and
without affecting your application logging.</source>
          <target state="translated">自动记录允许从应用程序日志中独立配置(和控制)跟踪。开启/关闭跟踪,将跟踪记录写入一个单独的日志,并为跟踪日志条目使用不同的格式--所有这些都是通过标准的Python日志设施来实现的,并且不会影响您的应用程序日志。</target>
        </trans-unit>
        <trans-unit id="d7fe294bd70d8cb7b652755df3a929dab38709c2" translate="yes" xml:space="preserve">
          <source>Autologging eliminates boilerplate logging setup code and tracing code,
and provides a means to separate application logging from program flow
and data tracing.</source>
          <target state="translated">自动记录消除了模板化的日志设置代码和跟踪代码,并提供了一种将应用日志与程序流和数据跟踪分离的方法。</target>
        </trans-unit>
        <trans-unit id="63c21aabf3c1c523959923aa673f25505c6caf50" translate="yes" xml:space="preserve">
          <source>Autologging exposes two decorators and a custom log level:</source>
          <target state="translated">自动认证暴露了两个装饰者和一个自定义日志级别。</target>
        </trans-unit>
        <trans-unit id="6f65bdf829cc20ac73ec0dc0bad007df088f933d" translate="yes" xml:space="preserve">
          <source>Autologging makes logging and tracing Python classes easy.</source>
          <target state="translated">自动记录使Python类的记录和跟踪变得简单。</target>
        </trans-unit>
        <trans-unit id="78260b935740f97b3ad2042d507d31c128aebb80" translate="yes" xml:space="preserve">
          <source>Binary installation</source>
          <target state="translated">二进制安装</target>
        </trans-unit>
        <trans-unit id="d60ab76116a1beab390764e1e653979deaf56335" translate="yes" xml:space="preserve">
          <source>Clone or fork the repository:</source>
          <target state="translated">克隆或分叉版本库。</target>
        </trans-unit>
        <trans-unit id="7ffd0b9dd1a4c4732932377cdfa0c240be9e13aa" translate="yes" xml:space="preserve">
          <source>Download the Python wheel (.whl) or a Windows installer from
&lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt; or
&lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https://sourceforge.net/projects/autologging/files/&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt;或 &lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https://sourceforge.net/projects/autologging/files/&lt;/a&gt;下载Python wheel（.whl）或Windows安装程序 。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="86b07b23c0065c3bc9303920d223921da4750654" translate="yes" xml:space="preserve">
          <source>Logging and tracing output:</source>
          <target state="translated">记录和跟踪输出。</target>
        </trans-unit>
        <trans-unit id="00e191c31700f3bf1c093fd102f688b4a25c5913" translate="yes" xml:space="preserve">
          <source>Module-level functions may also be traced using this decorator.</source>
          <target state="translated">模块级函数也可以使用该装饰器进行跟踪。</target>
        </trans-unit>
        <trans-unit id="e4d8420fc64e6556b9a9e153ff6123d849cb6db0" translate="yes" xml:space="preserve">
          <source>Python modules that make use of Autologging are cleaner, leaner, and
more resilient to changes that would otherwise require updating tracing
statements.</source>
          <target state="translated">使用Autologging的Python模块更干净、更精简,对需要更新跟踪语句的变化更有弹性。</target>
        </trans-unit>
        <trans-unit id="aa21b6f6cb1c196fdd1a5802e24e9df1dc31d4b7" translate="yes" xml:space="preserve">
          <source>Run the test suite and install the &lt;code&gt;autologging&lt;/code&gt; module: (make sure you
have &lt;a href=&quot;https://pypi.python.org/pypi/setuptools&quot;&gt;setuptools&lt;/a&gt; installed!)</source>
          <target state="translated">运行测试套件并安装 &lt;code&gt;autologging&lt;/code&gt; 模块：（确保已安装&lt;a href=&quot;https://pypi.python.org/pypi/setuptools&quot;&gt;setuptools&lt;/a&gt;！）</target>
        </trans-unit>
        <trans-unit id="d39ef77de83053b1f8c24fdc0211054e4953703c" translate="yes" xml:space="preserve">
          <source>Source installation</source>
          <target state="translated">源头安装</target>
        </trans-unit>
        <trans-unit id="a53007c7885214cc793414c4b9e60c144773d021" translate="yes" xml:space="preserve">
          <source>The easiest way to install Autologging is to use
&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;:</source>
          <target state="translated">安装自动记录的最简单方法是使用 &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="dbe90631c99d9e4e74f61518dabb9bb383408413" translate="yes" xml:space="preserve">
          <source>Tracing may be disabled entirely by setting the
&lt;code&gt;AUTOLOGGING_TRACED_NOOP&lt;/code&gt; environment variable or by calling the
&lt;code&gt;autologging.install_traced_noop()&lt;/code&gt; function.</source>
          <target state="translated">通过设置环境变量 &lt;code&gt;AUTOLOGGING_TRACED_NOOP&lt;/code&gt; 或调用 &lt;code&gt;autologging.install_traced_noop()&lt;/code&gt; 函数，可以完全禁用跟踪 。</target>
        </trans-unit>
        <trans-unit id="ed38704948bd01cf801923ea8f4725184bc8f85a" translate="yes" xml:space="preserve">
          <source>What's in the &lt;code&gt;autologging&lt;/code&gt; namespace?</source>
          <target state="translated">什么是在 &lt;code&gt;autologging&lt;/code&gt; 的命名空间？</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
