<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/ghlinguist/">
    <body>
      <group id="ghlinguist">
        <trans-unit id="8a5bd700778dc76504e8c5fee1a507a6d1580c37" translate="yes" xml:space="preserve">
          <source>Both cases simply return the string &lt;code&gt;Python&lt;/code&gt; or &lt;code&gt;Fortran&lt;/code&gt; etc.</source>
          <target state="translated">两种情况都只返回字符串 &lt;code&gt;Python&lt;/code&gt; 或 &lt;code&gt;Fortran&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="b48f894948f31dd3913f643828d8617bd0aa51f1" translate="yes" xml:space="preserve">
          <source>From Terminal:</source>
          <target state="translated">从终点站:</target>
        </trans-unit>
        <trans-unit id="fbdb39e7e67a0cb8fade1ceee82341e66bdafa79" translate="yes" xml:space="preserve">
          <source>If the directory is not a Git repo, &lt;code&gt;None&lt;/code&gt; is returned</source>
          <target state="translated">如果目录不是Git仓库，则返回 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0edf96811dd7fe4c662c9af0aca999b27f833497" translate="yes" xml:space="preserve">
          <source>If you don't already have RubyGems setup on Linux:</source>
          <target state="translated">如果你还没有在Linux上设置RubyGems。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="e1d2620dd4bd10e7f24bac2c0aa0156cbd7080ed" translate="yes" xml:space="preserve">
          <source>Install Linguist as usual:</source>
          <target state="translated">像往常一样安装Linguist。</target>
        </trans-unit>
        <trans-unit id="68bf86483f265ba4441455aa31328c19360b8c8a" translate="yes" xml:space="preserve">
          <source>Install this Python wrapper:</source>
          <target state="translated">安装这个Python包装器。</target>
        </trans-unit>
        <trans-unit id="d6470d742c6be68bf3b3f1ee242925b542f261df" translate="yes" xml:space="preserve">
          <source>Linux prereqs</source>
          <target state="translated">Linux的先决条件</target>
        </trans-unit>
        <trans-unit id="a235b3bf89b84dc848864641fccb756ceea4e4d2" translate="yes" xml:space="preserve">
          <source>Linux: see Notes section at bottom of this README</source>
          <target state="translated">Linux:参见本README底部的注释部分。</target>
        </trans-unit>
        <trans-unit id="dca3d21fe2f53655fc3772681afd132fa7e5f5e4" translate="yes" xml:space="preserve">
          <source>MacOS / Linux Homebrew: &lt;code&gt;brew install ruby&lt;/code&gt;</source>
          <target state="translated">MacOS / Linux Homebrew： &lt;code&gt;brew install ruby&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">笔记</target>
        </trans-unit>
        <trans-unit id="ff583663796e0b564f9763cd45af7ad5db3f48d6" translate="yes" xml:space="preserve">
          <source>Or import as a Python module.</source>
          <target state="translated">或者作为Python模块导入。</target>
        </trans-unit>
        <trans-unit id="16ec4d428b5458baa8dd2e6da390acc3c805afcc" translate="yes" xml:space="preserve">
          <source>Pure Python command-line wrapper of Ruby-based Github &lt;a href=&quot;https://github.com/github/linguist&quot;&gt;Linguist&lt;/a&gt;.
Linguist detects the language of a Git repo based on the &lt;code&gt;commit&lt;/code&gt;ed files.
The repo file
&lt;a href=&quot;https://github.com/github/linguist#using-gitattributes&quot;&gt;.gitattributes&lt;/a&gt;
is used to configure Linguist to not get distracted by &lt;code&gt;docs&lt;/code&gt; or archive files, etc. using several straightforward rules.</source>
          <target state="translated">基于Ruby的Github &lt;a href=&quot;https://github.com/github/linguist&quot;&gt;Linguist的&lt;/a&gt;纯Python命令行包装器。语言学家根据 &lt;code&gt;commit&lt;/code&gt; 文件检测Git存储库的语言。回购文件 &lt;a href=&quot;https://github.com/github/linguist#using-gitattributes&quot;&gt;.gitattributes&lt;/a&gt; 用于配置Linguist使其不因使用一些简单的规则而被 &lt;code&gt;docs&lt;/code&gt; 或存档文件等分散注意力。</target>
        </trans-unit>
        <trans-unit id="6c9d7d8665b5ae6fee9f8bb1f12823f160d4e3e3" translate="yes" xml:space="preserve">
          <source>Ruby is required for Linguist:</source>
          <target state="translated">语言学家需要Ruby。</target>
        </trans-unit>
        <trans-unit id="ca6b8bdf028b0bb502ffbd2b56398c1e6c1b57bf" translate="yes" xml:space="preserve">
          <source>The functions return a list of tuples like:</source>
          <target state="translated">这些函数返回一个图元组的列表,如。</target>
        </trans-unit>
        <trans-unit id="211ceccc6fb63b8fd670e94c934c468bac772b91" translate="yes" xml:space="preserve">
          <source>The primary reason behind creating this Python Linguist wrapper is automatically detecting the repo type, so that appropriate templates can be applied &lt;em&gt;en masse&lt;/em&gt; to a large number of repos.
Thus to get the repo language from the command line, as GitHub would:</source>
          <target state="translated">后面创建此Python的语言学家包装被自动检测回购型的主要原因，使相应的模板可应用于&lt;em&gt;集体&lt;/em&gt;到大量回购。因此，从命令行获取回购语言，就像GitHub那样：</target>
        </trans-unit>
        <trans-unit id="559b3fc86a0855fc35e01ae9c70039440c888689" translate="yes" xml:space="preserve">
          <source>This Python wrapper makes Linguist more intuitive by warning users of uncommitted changes or additions that could make Linguist silently give inaccurate results, since Linguist only works on files that have been &lt;code&gt;git commit&lt;/code&gt;ed.</source>
          <target state="translated">该Python包装器通过警告用户未 &lt;code&gt;git commit&lt;/code&gt; 更改或添加可能使Linguist默默地给出不正确的结果，从而使Linguist更加直观，因为Linguist仅适用于git commit提交的文件。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="27394ea7f87d336660b39fa869bce5d239f9d7c4" translate="yes" xml:space="preserve">
          <source>Windows: Windows Subsystem for Linux is recommended.</source>
          <target state="translated">Windows。建议使用Linux的Windows子系统。</target>
        </trans-unit>
        <trans-unit id="bf6be3cb41737bb28edfafaabfd3d0f9ecb706da" translate="yes" xml:space="preserve">
          <source>be sure Gems are installed to home directory, NOT system (no sudo) by adding to &lt;code&gt;~/.bashrc&lt;/code&gt;:</source>
          <target state="translated">通过添加到 &lt;code&gt;~/.bashrc&lt;/code&gt; 来确保将Gems安装到主目录而不是系统目录（无sudo）：</target>
        </trans-unit>
        <trans-unit id="56b451f54b68d9f36d287c09e0a7391e3ea33ffb" translate="yes" xml:space="preserve">
          <source>ghLinguist parses text output from
&lt;a href=&quot;https://github.com/github/linguist#using-emacs-or-vim-modelines&quot;&gt;GitHub Linguist&lt;/a&gt;,
which is a Ruby program.
We call &lt;code&gt;github-linguist&lt;/code&gt; executable since &lt;code&gt;linguist&lt;/code&gt; overlaps with QT Lingiust.</source>
          <target state="translated">ghLinguist解析&lt;a href=&quot;https://github.com/github/linguist#using-emacs-or-vim-modelines&quot;&gt;GitHub Linguist的&lt;/a&gt;文本输出， GitHub Linguist是一个Ruby程序。我们将 &lt;code&gt;github-linguist&lt;/code&gt; 称为可执行文件，因为 &lt;code&gt;linguist&lt;/code&gt; 与QT Lingiust重叠。</target>
        </trans-unit>
        <trans-unit id="00e9cc64724de9876183ed4dc70c94468f4ed019" translate="yes" xml:space="preserve">
          <source>linguist-python</source>
          <target state="translated">语言学家-蟒蛇</target>
        </trans-unit>
        <trans-unit id="bac07d3773f55cec82ae1d604535d01380d65d7d" translate="yes" xml:space="preserve">
          <source>or as a Python module:</source>
          <target state="translated">或作为一个Python模块。</target>
        </trans-unit>
        <trans-unit id="2ecc7c4120f0ec157d3e20717e910ab2671b53c3" translate="yes" xml:space="preserve">
          <source>setup RubyGems:</source>
          <target state="translated">设置RubyGems。</target>
        </trans-unit>
        <trans-unit id="fb0192163d85b7478b9917e2c047d695d724deba" translate="yes" xml:space="preserve">
          <source>simple command-line parser of GitHub Linguist Ruby program.</source>
          <target state="translated">GitHub Linguist Ruby程序的简单命令行解析器。</target>
        </trans-unit>
        <trans-unit id="0cc38a6f537dad17a95e6e9d8a15103810527d81" translate="yes" xml:space="preserve">
          <source>where the second number is the percentage of code detected for that language.</source>
          <target state="translated">其中第二个数字是检测到的该语言代码的百分比。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
