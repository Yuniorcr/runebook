<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/aics-dask-utils/">
    <body>
      <group id="aics-dask-utils">
        <trans-unit id="b9be48f0c329a1dbc4ac9f7d42f58066a1dc0faf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Development Head:&lt;/strong&gt;&lt;code&gt;pip install git+https://github.com/AllenCellModeling/aics_dask_utils.git&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;开发负责人：&lt;/strong&gt; &lt;code&gt;pip install git+https://github.com/AllenCellModeling/aics_dask_utils.git&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59e281f8a33d5251d00c38bc28f02a85aeccf690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Free software: Allen Institute Software License&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;免费软件：艾伦研究所软件许可&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f65d3e5a841f7f1cda69429839be4c5bff6177d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important Note:&lt;/strong&gt; Notice, &quot;... iterable that would &lt;em&gt;result&lt;/em&gt; in less than hundreds
of thousands of tasks...&quot;. This is important because what happens when you try to &lt;code&gt;map&lt;/code&gt;
over a thousand image paths, each which spawns an &lt;code&gt;AICSImage&lt;/code&gt; object. Each one adds
thousands more tasks to the scheduler to complete. This will break and you should look
to &lt;a href=&quot;#large-iterable-batching&quot;&gt;Large Iterable Batching&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;重要说明：&lt;/strong&gt;请注意，&amp;ldquo; ...迭代将&lt;em&gt;导致&lt;/em&gt;少于数十万的任务...&amp;rdquo;。这很重要，因为当您尝试 &lt;code&gt;map&lt;/code&gt; 一千个图像路径时会发生什么，每个路径都产生一个 &lt;code&gt;AICSImage&lt;/code&gt; 对象。每个任务都将数千个任务添加到调度程序中以完成任务。这将中断，您应该改为使用&lt;a href=&quot;#large-iterable-batching&quot;&gt;大型可迭代批处理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f91077797a7d12e0ebd1988ea178520253fba20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Notice that there is no &lt;code&gt;handler.gather&lt;/code&gt; call after &lt;code&gt;batched_map&lt;/code&gt;. This is
because &lt;code&gt;batched_map&lt;/code&gt; gathers results at the end of each batch rather than simply
returning their future's.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;请注意，没有 &lt;code&gt;handler.gather&lt;/code&gt; 后调用 &lt;code&gt;batched_map&lt;/code&gt; 。这是因为 &lt;code&gt;batched_map&lt;/code&gt; 在每个批次的末尾收集结果，而不是简单地返回其将来的结果。</target>
        </trans-unit>
        <trans-unit id="856e99ed602edd75ecc436e526670936feb894c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stable Release:&lt;/strong&gt;&lt;code&gt;pip install aics_dask_utils&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;稳定版本：&lt;/strong&gt; &lt;code&gt;pip install aics_dask_utils&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcf39484c9165e52e91fec301ac0dbc2347a2579" translate="yes" xml:space="preserve">
          <source>A task is a single static function to be processed. Simple enough. However, relevant to
AICS, is that when using &lt;code&gt;aicsimageio&lt;/code&gt; (and / or &lt;code&gt;dask.array.Array&lt;/code&gt;), your image (or
&lt;code&gt;dask.array.Array&lt;/code&gt;) is split up into &lt;em&gt;many&lt;/em&gt; tasks. This is dependent on the image reader
and the size of the file you are reading. But in general it is safe to assume that each
image you read is split many thousands of tasks. If you want to see how many tasks your
image is split into you can either compute:</source>
          <target state="translated">任务是要处理的单个静态函数。很简单。但是，与AICS相关的是，在使用 &lt;code&gt;aicsimageio&lt;/code&gt; （和/或 &lt;code&gt;dask.array.Array&lt;/code&gt; ）时，您的图像（或 &lt;code&gt;dask.array.Array&lt;/code&gt; ）被分为&lt;em&gt;许多&lt;/em&gt;任务。这取决于图像读取器和所读取文件的大小。但是总的来说，可以安全地假设您读取的每个图像都被分割成数千个任务。如果要查看将图像拆分为多少个任务，可以计算：</target>
        </trans-unit>
        <trans-unit id="282639132dd9e525ffc1e4f1daf1c99459b57cb3" translate="yes" xml:space="preserve">
          <source>AICS Dask Utils</source>
          <target state="translated">AICS Dask Utils</target>
        </trans-unit>
        <trans-unit id="5b2468753aeeda1edfd220bafda145b49ecef8b6" translate="yes" xml:space="preserve">
          <source>Additional Comments</source>
          <target state="translated">补充评论</target>
        </trans-unit>
        <trans-unit id="e5a091a2e2e44fc2a3d12ad7b9798c59b54114af" translate="yes" xml:space="preserve">
          <source>An object that will become available but is currently not defined. There is no guarantee
that the object is a valid result or an error and you should handle errors once the
future's state has resolved (usually this means after a &lt;code&gt;gather&lt;/code&gt; operation).</source>
          <target state="translated">将变为可用但当前未定义的对象。不能保证对象是有效结果或错误，并且一旦将来的状态解决了（通常是在执行 &lt;code&gt;gather&lt;/code&gt; 操作之后），您就应该处理错误。</target>
        </trans-unit>
        <trans-unit id="a68f80ec6916219192268850edb74e288be68ec1" translate="yes" xml:space="preserve">
          <source>Apply a given function to the provided iterables as used as parameters to the function.
Given &lt;code&gt;lambda x: x + 1&lt;/code&gt; and &lt;code&gt;[1, 2, 3]&lt;/code&gt;, the result of &lt;code&gt;map(func, *iterables)&lt;/code&gt; in this
case would be &lt;code&gt;[2, 3, 4]&lt;/code&gt;. Usually, you are provided back an iterable of &lt;code&gt;future&lt;/code&gt;
objects back from a &lt;code&gt;map&lt;/code&gt; operation. The results from the map operation are not
guaranteed to be in the order of the iterable that went in as operations are started as
resources become available and item to item variance may result in different output
ordering.</source>
          <target state="translated">将给定函数应用于提供的可迭代对象，用作该函数的参数。给定 &lt;code&gt;lambda x: x + 1&lt;/code&gt; 和 &lt;code&gt;[1, 2, 3]&lt;/code&gt; ，在这种情况下 &lt;code&gt;map(func, *iterables)&lt;/code&gt; 的结果将是 &lt;code&gt;[2, 3, 4]&lt;/code&gt; 。通常，会 从 &lt;code&gt;map&lt;/code&gt; 操作中为您提供 &lt;code&gt;future&lt;/code&gt; 的可迭代对象。映射操作的结果不能保证是随着资源可用而开始操作时启动的可迭代顺序，因为资源可用，并且项与项之间的差异可能导致不同的输出顺序。</target>
        </trans-unit>
        <trans-unit id="4b1b4fa513401945598adb36cad3cf30f34c8082" translate="yes" xml:space="preserve">
          <source>Basic Mapping with Distributed Handler</source>
          <target state="translated">分布式处理程序的基本映射</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">基础知识</target>
        </trans-unit>
        <trans-unit id="ed2bb173232eb53e1bc3924b8fc800db349e55bc" translate="yes" xml:space="preserve">
          <source>Before we jump into quick starts there are some basic definitions to understand.</source>
          <target state="translated">在我们进入快速启动之前,有一些基本的定义需要了解。</target>
        </trans-unit>
        <trans-unit id="e2884c98ead78b59813c87fc907df932c7c96101" translate="yes" xml:space="preserve">
          <source>Block the process from moving forward until all futures are resolved. Control flow here
would mean that you could potentially generate thousands of futures and keep moving on
locally while those futures slowly resolve but if you ever want a hard stop and wait for
some set of futures to complete, you would need gather them.</source>
          <target state="translated">阻止进程前进,直到所有的期货被解决。这里的控制流意味着你有可能生成成千上万的期货,并在这些期货慢慢解析的同时,在本地继续前进,但如果你曾经想要硬停,等待某组期货完成,你就需要收集它们。</target>
        </trans-unit>
        <trans-unit id="25bb87b8722939e50782c25eaf8e56f1c9a57eb7" translate="yes" xml:space="preserve">
          <source>Dask graph length: &lt;code&gt;len(AICSImage.dask_data.__dask_graph__())&lt;/code&gt;</source>
          <target state="translated">图表长度： &lt;code&gt;len(AICSImage.dask_data.__dask_graph__())&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5d53b03894abc1063a24bf7d40d9986b452da93" translate="yes" xml:space="preserve">
          <source>Dask tries to mirror the standard library &lt;code&gt;concurrent.futures&lt;/code&gt; wherever possible which
is what allows for this library to have simple wrappers around Dask to allow for easy
debugging as we are simply swapping out &lt;code&gt;distributed.Client.map&lt;/code&gt; with
&lt;code&gt;concurrent.futures.ThreadPoolExecutor.map&lt;/code&gt; for example. If at any point in your code
you don't want to use &lt;code&gt;dask&lt;/code&gt; for some reason or another, it is equally valid to use
&lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt; or &lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt;.</source>
          <target state="translated">Dask尝试尽可能在标准库中镜像 &lt;code&gt;concurrent.futures&lt;/code&gt; .futures ，这使得该库可以在Dask周围使用简单的包装程序，以便于调试，因为我们只是将 &lt;code&gt;distributed.Client.map&lt;/code&gt; 替换为 &lt;code&gt;concurrent.futures.ThreadPoolExecutor.map&lt;/code&gt; 用于例。如果您在代码中的任何时候由于某种原因不想使用 &lt;code&gt;dask&lt;/code&gt; ，则使用 &lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt; .futures.ThreadPoolExecutor或 &lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt; .futures.ProcessPoolExecutor同样有效 。</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">发展</target>
        </trans-unit>
        <trans-unit id="d92d8ab9a47ac653efc2047c53a05a398aa45a9f" translate="yes" xml:space="preserve">
          <source>Distributed handler to manage various debugging or cluster configurations</source>
          <target state="translated">分布式处理程序来管理各种调试或集群配置。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="b0c079dfde8f8ffb035151be0f97139748f9815b" translate="yes" xml:space="preserve">
          <source>Documentation on example cluster deployments</source>
          <target state="translated">关于集群部署示例的文档</target>
        </trans-unit>
        <trans-unit id="9270a295249a94eb74bda523060f05bd8eaf8e02" translate="yes" xml:space="preserve">
          <source>Documentation related to Dask, Distributed, and related packages.
Utility functions commonly used by AICS projects.</source>
          <target state="translated">与Dask、Distributed和相关包相关的文档。AICS项目常用的实用功能。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特点</target>
        </trans-unit>
        <trans-unit id="6ddcf8e330f3b08e8af2e74632bbd67c10157243" translate="yes" xml:space="preserve">
          <source>For full package documentation please visit
&lt;a href=&quot;https://AllenCellModeling.github.io/aics_dask_utils&quot;&gt;AllenCellModeling.github.io/aics_dask_utils&lt;/a&gt;.</source>
          <target state="translated">有关完整的软件包文档，请访问 &lt;a href=&quot;https://AllenCellModeling.github.io/aics_dask_utils&quot;&gt;AllenCellModeling.github.io/aics_dask_utils&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">未来</target>
        </trans-unit>
        <trans-unit id="d85fb4eb9b5275137b92e9c14d3dd2b6f13641af" translate="yes" xml:space="preserve">
          <source>Gather</source>
          <target state="translated">采集</target>
        </trans-unit>
        <trans-unit id="6b21c4c7a10bec9a3c34490971774fbecd841aad" translate="yes" xml:space="preserve">
          <source>If you have an iterable (or iterables) that would result in less than hundreds of
thousands of tasks, it you can simply use the normal &lt;code&gt;map&lt;/code&gt; provided by the
&lt;code&gt;DistributedHandler.client&lt;/code&gt;.</source>
          <target state="translated">如果您有一个（或多个）可迭代项，而该可迭代项将导致少于数十万个任务，那么您只需使用 &lt;code&gt;DistributedHandler.client&lt;/code&gt; 提供 的法线 &lt;code&gt;map&lt;/code&gt; 即可。</target>
        </trans-unit>
        <trans-unit id="ac3d2e8e90f987f5639d05ba5a4c404ae12e19cf" translate="yes" xml:space="preserve">
          <source>If you have an iterable (or iterables) that would result in more than hundreds of
thousands of tasks, you should use &lt;code&gt;handler.batched_map&lt;/code&gt; to reduce the load on the
client. This will batch your requests rather than send than all at once.</source>
          <target state="translated">如果您有一个（或多个）可迭代项，将导致成千上万的任务，则应使用 &lt;code&gt;handler.batched_map&lt;/code&gt; 来减少客户端的负载。这将批量处理您的请求，而不是一次发送所有请求。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="53c8bd24989e6cfa4673dcf1616eeee4019b65ff" translate="yes" xml:space="preserve">
          <source>Large Iterable Batching</source>
          <target state="translated">大型可迭代批处理</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">地图</target>
        </trans-unit>
        <trans-unit id="b22ddf1e04606d5919c237c76b0f7b5d800fe8d5" translate="yes" xml:space="preserve">
          <source>Other Comments</source>
          <target state="translated">其他评论</target>
        </trans-unit>
        <trans-unit id="172aed00af180a5a83d5e01ee6cd25ffc0dd9497" translate="yes" xml:space="preserve">
          <source>Psuedo-code: &lt;code&gt;sum(2 * size(channel) for channel if channel not in [&quot;Y&quot;, &quot;X&quot;])&lt;/code&gt;</source>
          <target state="translated">伪代码： &lt;code&gt;sum(2 * size(channel) for channel if channel not in [&quot;Y&quot;, &quot;X&quot;])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1a628a56e707842a8c6c6e47c32af28c1e0f2d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for information related to developing the code.</source>
          <target state="translated">有关开发代码的信息，请参见&lt;a href=&quot;CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">任务</target>
        </trans-unit>
        <trans-unit id="90382918c2c7711ab208a286f8c400dcdae74e78" translate="yes" xml:space="preserve">
          <source>This README, provided tooling, and documentation are not meant to be all encompassing
of the various operations you can do with &lt;code&gt;dask&lt;/code&gt; and other similar computing systems.
For further reading go to &lt;a href=&quot;https://dask.org/&quot;&gt;dask.org&lt;/a&gt;.</source>
          <target state="translated">本自述文件，提供的工具和文档并不能完全涵盖使用 &lt;code&gt;dask&lt;/code&gt; 和其他类似计算系统可以执行的各种操作。要进一步阅读，请访问&lt;a href=&quot;https://dask.org/&quot;&gt;dask.org&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b60bdfeef3ecf1f6f29c7f6e1f96ee0967df85a4" translate="yes" xml:space="preserve">
          <source>Utility functions and documentation related to Dask and AICS</source>
          <target state="translated">与Dask和AICS有关的实用功能和文件。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
