<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/opencv-python/">
    <body>
      <group id="opencv-python">
        <trans-unit id="eef3ce61cec32e1f1462f376a3af2508c17f6d2b" translate="yes" xml:space="preserve">
          <source>3.5 (EOL in 2020-09-13, builds for 3.5 will not be provided after this)</source>
          <target state="translated">3.5 (2020-09-13停用,此后将不再提供3.5的构建)</target>
        </trans-unit>
        <trans-unit id="0d35d14aa1a0bbc0b4f0032b1cfaefe8602abcd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CI_BUILD&lt;/code&gt;. Set to &lt;code&gt;1&lt;/code&gt; to emulate the CI environment build behaviour. Used only in CI builds to force certain build flags on in &lt;code&gt;setup.py&lt;/code&gt;. Do not use this unless you know what you are doing.</source>
          <target state="translated">&lt;code&gt;CI_BUILD&lt;/code&gt; 。设置为 &lt;code&gt;1&lt;/code&gt; 可模拟CI环境的构建行为。仅在CI构建中使用，以在 &lt;code&gt;setup.py&lt;/code&gt; 中强制启用某些构建标志。除非您知道自己在做什么，否则不要使用它。</target>
        </trans-unit>
        <trans-unit id="3b817c4b6fcaf2f7426e295beca6aaf9543695ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_ARGS&lt;/code&gt;. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.</source>
          <target state="translated">&lt;code&gt;CMAKE_ARGS&lt;/code&gt; 。OpenCV的CMake调用的其他参数。您可以使用它进行自定义构建。</target>
        </trans-unit>
        <trans-unit id="aae9c340a781c5a235cb3ad5d5171747054d6dcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; and &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt;. Set to &lt;code&gt;1&lt;/code&gt; to build the contrib and/or headless version</source>
          <target state="translated">&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; 和 &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt; 。设置为 &lt;code&gt;1&lt;/code&gt; 可创建contrib和/或无头版本</target>
        </trans-unit>
        <trans-unit id="12ad39d8037131bcde0f7d453d738145c280d646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENABLE_JAVA&lt;/code&gt;, Set to &lt;code&gt;1&lt;/code&gt; to enable the Java client build.  This is disabled by default.</source>
          <target state="translated">&lt;code&gt;ENABLE_JAVA&lt;/code&gt; ，设置为 &lt;code&gt;1&lt;/code&gt; 以启用Java客户端构建。默认情况下禁用。</target>
        </trans-unit>
        <trans-unit id="60345bea60a436263f6ef6085b7bcf7848935d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cv_major.cv_minor.cv_revision+git_hash_of_this_repo&lt;/code&gt; e.g. &lt;code&gt;3.1.0+14a8d39&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cv_major.cv_minor.cv_revision+git_hash_of_this_repo&lt;/code&gt; 例如 &lt;code&gt;3.1.0+14a8d39&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2262213727e68f97384f00952c65c81c055d3d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cv_major.cv_minor.cv_revision.package_revision&lt;/code&gt; e.g. &lt;code&gt;3.1.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cv_major.cv_minor.cv_revision.package_revision&lt;/code&gt; 例如 &lt;code&gt;3.1.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdb27f0bac09bfee6d9534ce0c50e8862023f583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_version.py&lt;/code&gt; script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string. It saves the version information to &lt;code&gt;version.py&lt;/code&gt; file under &lt;code&gt;cv2&lt;/code&gt; in addition to some other flags.</source>
          <target state="translated">&lt;code&gt;find_version.py&lt;/code&gt; 脚本从OpenCV源中搜索版本信息，并将特定于此存储库的修订号附加到版本字符串中。除了一些其他标志，它还将版本信息保存到 &lt;code&gt;cv2&lt;/code&gt; 下的 &lt;code&gt;version.py&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="9f7d69417504ae2e94cfb550c685df2c36fbcf01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Do I need to install also OpenCV separately?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：是否还需要单独安装OpenCV？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0d9591cc84b3f1d006523f25d372e22adbc524b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: I have some other import errors?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：我还有其他导入错误吗？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06a787acaf7b1542f41eecc38603cae26fe86724" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Import fails on Windows: &lt;code&gt;ImportError: DLL load failed: The specified module could not be found.&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：在Windows上导入失败： &lt;code&gt;ImportError: DLL load failed: The specified module could not be found.&lt;/code&gt; ？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dae636d3c71e0030adf19ae51afada3984a844f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Pip install fails with &lt;code&gt;Could not find a version that satisfies the requirement ...&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：Pip安装失败并显示 &lt;code&gt;Could not find a version that satisfies the requirement ...&lt;/code&gt; ？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb5da4d47c1a0dad31ba9c993ac5c273ba14e587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Pip install fails with &lt;code&gt;ModuleNotFoundError: No module named 'skbuild'&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：Pip安装失败，并显示 &lt;code&gt;ModuleNotFoundError: No module named 'skbuild'&lt;/code&gt; ？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26c1a145278d34fcc62d21ba71f35722dfad7ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Why the package and import are different (opencv-python vs. cv2)?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：为什么打包和导入不同（opencv-python与cv2）？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e66fbeb7d0d225e13c30648fbd354d0dab4edb8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Why the packages do not include non-free algorithms?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;问：为什么软件包不包含非自由算法？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91fe8b643c6dacb31053a9a2df2b03b51b02133c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unofficial&lt;/strong&gt; pre-built OpenCV packages for Python.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;用于Python的&lt;strong&gt;非官方的&lt;/strong&gt;预构建OpenCV软件包。</target>
        </trans-unit>
        <trans-unit id="65be52049304c320afbf1208e6c270feb2dff1c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;a.&lt;/strong&gt; Packages for standard desktop environments (Windows, macOS, almost any GNU/Linux distribution)</source>
          <target state="translated">&lt;strong&gt;一种。&lt;/strong&gt;适用于标准桌面环境的软件包（Windows，macOS，几乎所有GNU / Linux发行版）</target>
        </trans-unit>
        <trans-unit id="c348dd346de67debca982f63462a090421a0940d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;b.&lt;/strong&gt; Packages for server (headless) environments</source>
          <target state="translated">&lt;strong&gt;b。&lt;/strong&gt;服务器（无头）环境的软件包</target>
        </trans-unit>
        <trans-unit id="fee3bab91e308d3bbe36ed69240bf1ba4f61c00f" translate="yes" xml:space="preserve">
          <source>A release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:</source>
          <target state="translated">当一个新的标签被推送到主分支时,一个版本就会被制作并上传到PyPI。这些标签区分了不同的包 (这个 repo 可能会有修改,但 OpenCV 版本保持不变),并且应该按顺序递增。在实践中,版本号是这样的。</target>
        </trans-unit>
        <trans-unit id="7c2defb728105bfc82a0c94298eef3033f8ceb30" translate="yes" xml:space="preserve">
          <source>A: If the import fails on Windows, make sure you have &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48145&quot;&gt;Visual C++ redistributable 2015&lt;/a&gt; installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, &lt;a href=&quot;https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows&quot;&gt;Universal C Runtime&lt;/a&gt; might be also required.</source>
          <target state="translated">答：如果在Windows上导入失败，请确保已安装&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48145&quot;&gt;Visual C ++可再发行的2015&lt;/a&gt;。如果您使用的Windows版本早于Windows 10，并且未安装最新的系统更新，则可能还需要&lt;a href=&quot;https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows&quot;&gt;Universal C Runtime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5286b718798b738a402cc16011b7c65ed69dd16" translate="yes" xml:space="preserve">
          <source>A: It's easier for users to understand &lt;code&gt;opencv-python&lt;/code&gt; than &lt;code&gt;cv2&lt;/code&gt; and it makes it easier to find the package with search engines. &lt;code&gt;cv2&lt;/code&gt; (old interface in old OpenCV versions was named as &lt;code&gt;cv&lt;/code&gt;) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the &lt;code&gt;import cv2&lt;/code&gt;.</source>
          <target state="translated">答：与 &lt;code&gt;cv2&lt;/code&gt; 相比，用户更容易理解 &lt;code&gt;opencv-python&lt;/code&gt; ，并且可以更轻松地使用搜索引擎查找软件包。 &lt;code&gt;cv2&lt;/code&gt; （旧的OpenCV版本中的旧接口称为 &lt;code&gt;cv&lt;/code&gt; ）是OpenCV开发人员在创建绑定生成器时选择的名称。该名称将保留为导入名称，以与互联网上不同种类的教程保持一致。更改导入名称或行为也会使习惯于 &lt;code&gt;import cv2&lt;/code&gt; 有经验的用户感到困惑。</target>
        </trans-unit>
        <trans-unit id="c412169e7d1889fac51d89ceadbf5dae1fce4b20" translate="yes" xml:space="preserve">
          <source>A: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).</source>
          <target state="translated">A:确保您已经删除了旧的手动安装的 OpenCV Python 绑定 (cv2.so 或 site-packages 中的 cv2.pyd)。</target>
        </trans-unit>
        <trans-unit id="bb201b01cd2fda2117cf9ce5cae709e807e3f615" translate="yes" xml:space="preserve">
          <source>A: Most likely the issue is related to too old pip and can be fixed by running &lt;code&gt;pip install --upgrade pip&lt;/code&gt;. Note that the wheel (especially manylinux) format does not currently support properly ARM architecture so there are no packages for ARM based platforms in PyPI. However, &lt;code&gt;opencv-python&lt;/code&gt; packages for Raspberry Pi can be found from &lt;a href=&quot;https://www.piwheels.org/&quot;&gt;https://www.piwheels.org/&lt;/a&gt;.</source>
          <target state="translated">答：最有可能是因为问题太旧了，可以通过运行 &lt;code&gt;pip install --upgrade pip&lt;/code&gt; 来解决。请注意，wheel（尤其是许多Linux）格式当前不正确支持ARM体系结构，因此PyPI中没有用于基于ARM的平台的软件包。但是，可以从&lt;a href=&quot;https://www.piwheels.org/&quot;&gt;https://www.piwheels.org/&lt;/a&gt;找到Raspberry Pi的 &lt;code&gt;opencv-python&lt;/code&gt; 软件包。</target>
        </trans-unit>
        <trans-unit id="5855ec3443c09944b960cb910181bf030e9c945c" translate="yes" xml:space="preserve">
          <source>A: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.</source>
          <target state="translated">答:不是,这些包是特殊的轮子二进制包,它们已经包含静态构建的OpenCV二进制。</target>
        </trans-unit>
        <trans-unit id="fd22fa3e514270d23e5625037ca02792f1d04a45" translate="yes" xml:space="preserve">
          <source>A: Non-free algorithms such as SURF are not included in these packages because they are patented / non-free and therefore cannot be distributed as built binaries. Note that SIFT is included in the builds due to patent expiration since OpenCV versions 4.3.0 and 3.4.10. See this issue for more info: &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/126&quot;&gt;https://github.com/skvark/opencv-python/issues/126&lt;/a&gt;</source>
          <target state="translated">答：这些软件包中未包含非自由算法（例如SURF），因为它们已申请专利/非自由，因此不能作为内置二进制文件分发。请注意，由于OpenCV版本4.3.0和3.4.10自专利到期起，SIFT已包含在构建中。有关更多信息，请参见此问题：&lt;a href=&quot;https://github.com/skvark/opencv-python/issues/126&quot;&gt;https&lt;/a&gt; : //github.com/skvark/opencv-python/issues/126</target>
        </trans-unit>
        <trans-unit id="28834acbbc216ed1a7f8c707f9bda3b2e3923890" translate="yes" xml:space="preserve">
          <source>Add custom Cmake flags if needed, for example: &lt;code&gt;export CMAKE_ARGS=&quot;-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF&quot;&lt;/code&gt; (in Windows you need to set environment variables differently depending on Command Line or PowerShell)</source>
          <target state="translated">如果需要，添加自定义Cmake标志，例如： &lt;code&gt;export CMAKE_ARGS=&quot;-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF&quot;&lt;/code&gt; （在Windows中，您需要根据命令行或PowerShell设置不同的环境变量）</target>
        </trans-unit>
        <trans-unit id="d31137698c052b0d28b578c2a1d017cd13976be2" translate="yes" xml:space="preserve">
          <source>All packages contain haarcascade files. &lt;code&gt;cv2.data.haarcascades&lt;/code&gt; can be used as a shortcut to the data folder. For example:</source>
          <target state="translated">所有软件包均包含haarcascade文件。 &lt;code&gt;cv2.data.haarcascades&lt;/code&gt; 可用作数据文件夹的快捷方式。例如：</target>
        </trans-unit>
        <trans-unit id="e5d0869d4bb2b3e943082d76a8b28b4a921829a9" translate="yes" xml:space="preserve">
          <source>All wheels ship with &lt;a href=&quot;http://ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&quot;&gt;LGPLv2.1&lt;/a&gt;.</source>
          <target state="translated">所有车轮附带&lt;a href=&quot;http://ffmpeg.org&quot;&gt;的FFmpeg&lt;/a&gt;的许可下&lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&quot;&gt;LGPLv2.1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23a7808b48afc84b0dceb9136590ca7bfdbb9b77" translate="yes" xml:space="preserve">
          <source>Backward compatibility</source>
          <target state="translated">向后兼容性</target>
        </trans-unit>
        <trans-unit id="51a7c742c1af01bd741e224fb64c35ee77efc585" translate="yes" xml:space="preserve">
          <source>Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.</source>
          <target state="translated">在打开新的问题之前,请阅读下面的常见问题,并看看其他已经打开的问题。</target>
        </trans-unit>
        <trans-unit id="ed8be40119bb404acece481d9977c53a6312208d" translate="yes" xml:space="preserve">
          <source>Build OpenCV</source>
          <target state="translated">构建OpenCV</target>
        </trans-unit>
        <trans-unit id="c829cb4d9806fbd919121f46e8b185019b2c859e" translate="yes" xml:space="preserve">
          <source>CI build process</source>
          <target state="translated">CI构建过程</target>
        </trans-unit>
        <trans-unit id="1428bcac99c18e46b7ea28b1e507c8d4b0c5b287" translate="yes" xml:space="preserve">
          <source>Checkout repository and submodules</source>
          <target state="translated">签出仓库和子模块</target>
        </trans-unit>
        <trans-unit id="96cd4a478a777929649e65dfeefd175585b0e6a4" translate="yes" xml:space="preserve">
          <source>Clone this repository: &lt;code&gt;git clone --recursive https://github.com/skvark/opencv-python.git&lt;/code&gt;</source>
          <target state="translated">克隆此存储库： &lt;code&gt;git clone --recursive https://github.com/skvark/opencv-python.git&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b00068709d2d2e0450334c2a4b719476924161e" translate="yes" xml:space="preserve">
          <source>Contrib modules are also included as a submodule</source>
          <target state="translated">Contrib模块也作为一个子模块包含在其中。</target>
        </trans-unit>
        <trans-unit id="da0ae4bd6efeeaf942c1849cb0803873fa702b46" translate="yes" xml:space="preserve">
          <source>Currently, builds for following Python versions are provided:</source>
          <target state="translated">目前,我们提供了以下Python版本的构建。</target>
        </trans-unit>
        <trans-unit id="e749149ae2a4a4f247688f8c5aa59dc434e5d5ea" translate="yes" xml:space="preserve">
          <source>Development builds</source>
          <target state="translated">发展建设</target>
        </trans-unit>
        <trans-unit id="4771fc506234b8cd368c7216c7da29d9919eedc7" translate="yes" xml:space="preserve">
          <source>Documentation for opencv-python</source>
          <target state="translated">opencv-python的文档</target>
        </trans-unit>
        <trans-unit id="a07b4f571bcf753bfa5d1fa9d9a4bf202de4f732" translate="yes" xml:space="preserve">
          <source>Every commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:</source>
          <target state="translated">每一次提交到这个 repo 的主分支都会被构建。可能的构建工件使用本地版本标识符。</target>
        </trans-unit>
        <trans-unit id="f39b0e05ba2013500991746afbeaaaa496098560" translate="yes" xml:space="preserve">
          <source>Find OpenCV version from the sources</source>
          <target state="translated">从源头查找OpenCV版本</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">常问问题</target>
        </trans-unit>
        <trans-unit id="395c83eb8e23b0df758007923ffc1f7ae68b6926" translate="yes" xml:space="preserve">
          <source>If some dependency is not enabled in the pre-built wheels, you can also run the build locally to create a custom wheel.</source>
          <target state="translated">如果在预构建的轮子中没有启用某些依赖关系,你也可以在本地运行构建来创建一个自定义轮子。</target>
        </trans-unit>
        <trans-unit id="8d0899c6ca142e453a98b8d204fb64443010105d" translate="yes" xml:space="preserve">
          <source>If the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/36&quot;&gt;this issue&lt;/a&gt; for a manual fix.</source>
          <target state="translated">如果上述方法没有帮助，请检查您是否正在使用Anaconda。旧的Anaconda版本具有导致错误的错误，请参见此&lt;a href=&quot;https://github.com/skvark/opencv-python/issues/36&quot;&gt;问题&lt;/a&gt;以进行手动修复。</target>
        </trans-unit>
        <trans-unit id="5bc9ea7898090286e66cd13a2af7f633ab4f2c73" translate="yes" xml:space="preserve">
          <source>If you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called &quot;Media Foundation&quot; in the Server Manager. Beware, some posts advise to install &quot;Windows Server Essentials Media Pack&quot;, but this one requires the &quot;Windows Server Essentials Experience&quot; role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the &quot;Media Foundation&quot; should be a safer choice.</source>
          <target state="translated">如果你的Windows Server 2012+,媒体DLL可能也缺失了;请在服务器管理器中安装名为 &quot;Media Foundation &quot;的功能。要注意的是,有些帖子建议安装 &quot;Windows Server Essentials Media Pack&quot;,但这个需要 &quot;Windows Server Essentials Experience &quot;角色,而这个角色会深深影响你的Windows Server配置(通过强制执行活动目录集成等);所以只安装 &quot;Media Foundation &quot;应该是比较安全的选择。</target>
        </trans-unit>
        <trans-unit id="6fc9598089c860b777e90289e0e2f79fe3e607c9" translate="yes" xml:space="preserve">
          <source>If you have previous/other manually installed (= not installed via &lt;code&gt;pip&lt;/code&gt;) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.</source>
          <target state="translated">如果您已经安装了OpenCV的先前/其他手动安装版本（=未通过 &lt;code&gt;pip&lt;/code&gt; 安装）（例如，Python站点软件包根目录中的cv2模块），请在安装之前将其删除以避免冲突。</target>
        </trans-unit>
        <trans-unit id="a80aaa7111b6bdf3b0886b3354e4bf5eb8b6c669" translate="yes" xml:space="preserve">
          <source>If you need contrib modules or headless version, just change the package name (step 4 in the previous section is not needed). However, any additional CMake flags can be provided via environment variables as described in step 3 of the manual build section. If none are provided, OpenCV's CMake scripts will attempt to find and enable any suitable dependencies. Headless distributions have hard coded CMake flags which disable all possible GUI dependencies.</source>
          <target state="translated">如果你需要contrib模块或无头版本,只需更改包名即可(不需要上一节的第4步)。然而,任何额外的CMake标志都可以通过环境变量来提供,就像手动构建部分的第3步所描述的那样。如果没有提供任何标志,OpenCV的CMake脚本将试图找到并启用任何合适的依赖关系。无头发行版有硬编码的CMake标志,可以禁用所有可能的GUI依赖。</target>
        </trans-unit>
        <trans-unit id="48837e74de4819b04913c2d7d3cd76cdad62d560" translate="yes" xml:space="preserve">
          <source>If you still encounter the error after you have checked all the previous solutions, download &lt;a href=&quot;https://github.com/lucasg/Dependencies&quot;&gt;Dependencies&lt;/a&gt; and open the &lt;code&gt;cv2.pyd&lt;/code&gt; (located usually at &lt;code&gt;C:\Users\username\AppData\Local\Programs\Python\PythonXX\Lib\site-packages\cv2&lt;/code&gt;) file with it to debug missing DLL issues.</source>
          <target state="translated">如果在检查完所有先前的解决方案后仍然遇到错误，请下载&lt;a href=&quot;https://github.com/lucasg/Dependencies&quot;&gt;Dependencies&lt;/a&gt;并打开 &lt;code&gt;cv2.pyd&lt;/code&gt; （通常位于 &lt;code&gt;C:\Users\username\AppData\Local\Programs\Python\PythonXX\Lib\site-packages\cv2&lt;/code&gt; ）文件来调试缺少的DLL问题。</target>
        </trans-unit>
        <trans-unit id="a4880e1e81fd1273a065c5bf46f7f94e421d1078" translate="yes" xml:space="preserve">
          <source>Import the package:</source>
          <target state="translated">导入包。</target>
        </trans-unit>
        <trans-unit id="b571a43cbe752bc2f9bc5fb79c2c28c47b425733" translate="yes" xml:space="preserve">
          <source>In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against</source>
          <target state="translated">在Linux和MacOS的构建中:获取OpenCV的可选C语言依赖,我们对其进行编译。</target>
        </trans-unit>
        <trans-unit id="1dc8bf455308db2639bcf41ed9e41878acba6091" translate="yes" xml:space="preserve">
          <source>Install the generated wheel</source>
          <target state="translated">安装生成的轮子</target>
        </trans-unit>
        <trans-unit id="c606fdbf6de357bfc1116bac2ce0d38a13ee0476" translate="yes" xml:space="preserve">
          <source>Installation and Usage</source>
          <target state="translated">安装和使用</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="3d65823f4614ddda57e25c1eb5dd4642b744e50c" translate="yes" xml:space="preserve">
          <source>Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly</source>
          <target state="translated">Linux和macOS的轮子用auditwheel和delocate进行改造,对应的是</target>
        </trans-unit>
        <trans-unit id="84a6aaa8ae799345a833b3b8583acff6e481c1f6" translate="yes" xml:space="preserve">
          <source>Linux builds run in manylinux Docker containers (CentOS 5)</source>
          <target state="translated">Linux构建运行在manylinux Docker容器中(CentOS 5)。</target>
        </trans-unit>
        <trans-unit id="8acd7c56f9e74bc54f208459154c66e000c564a4" translate="yes" xml:space="preserve">
          <source>Linux wheels are built using &lt;a href=&quot;https://github.com/pypa/python-manylinux-demo&quot;&gt;manylinux&lt;/a&gt;. These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.</source>
          <target state="translated">Linux轮子是使用&lt;a href=&quot;https://github.com/pypa/python-manylinux-demo&quot;&gt;manylinux构建的&lt;/a&gt;。对于大多数发行版（使用GNU C标准库），这些轮子应该可以立即使用，因为它们是针对旧版本的glibc构建的。</target>
        </trans-unit>
        <trans-unit id="c1a62b5595acffff194d1cbab9f2577c207235c6" translate="yes" xml:space="preserve">
          <source>Manual builds</source>
          <target state="translated">手工建造</target>
        </trans-unit>
        <trans-unit id="70c160d16fc6657e80d9eab19d0459c7ca874a5d" translate="yes" xml:space="preserve">
          <source>Manylinux wheels</source>
          <target state="translated">Manylinux轮子</target>
        </trans-unit>
        <trans-unit id="4727565afc44f086995098036df23d10dc4a1e3f" translate="yes" xml:space="preserve">
          <source>Non-headless Linux and MacOS wheels ship with &lt;a href=&quot;http://doc.qt.io/qt-5/lgpl.html&quot;&gt;Qt 5&lt;/a&gt; licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;LGPLv3&lt;/a&gt;.</source>
          <target state="translated">非无头Linux和MacOS轮子附带了根据&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;LGPLv3&lt;/a&gt;许可的&lt;a href=&quot;http://doc.qt.io/qt-5/lgpl.html&quot;&gt;Qt 5&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed8ed2e52bb669fdcaacf72f5c3cc54078a14a4a" translate="yes" xml:space="preserve">
          <source>OpenCV is included as submodule and the version is updated
manually by maintainers when a new OpenCV release has been made</source>
          <target state="translated">OpenCV是作为子模块包含的,当有新的OpenCV版本发布时,维护者会手动更新版本。</target>
        </trans-unit>
        <trans-unit id="6ed23106254f524388275919f59d1a7c80ab903b" translate="yes" xml:space="preserve">
          <source>OpenCV itself is available under &lt;a href=&quot;https://github.com/opencv/opencv/blob/master/LICENSE&quot;&gt;3-clause BSD License&lt;/a&gt;.</source>
          <target state="translated">OpenCV本身可通过&lt;a href=&quot;https://github.com/opencv/opencv/blob/master/LICENSE&quot;&gt;3条款BSD许可获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fefac029e2b79731f94eb99fc8d4b3bfe3c7dfc6" translate="yes" xml:space="preserve">
          <source>OpenCV on Wheels</source>
          <target state="translated">OpenCV on Wheels</target>
        </trans-unit>
        <trans-unit id="be518637d7a809f6f83132187e62fc3645e83706" translate="yes" xml:space="preserve">
          <source>Opencv-python package (scripts in this repository) is available under MIT license.</source>
          <target state="translated">Opencv-python包(这个仓库中的脚本)是在MIT许可下提供的。</target>
        </trans-unit>
        <trans-unit id="908086bb08c7a1ac21b25e6d7ff63ad81addd951" translate="yes" xml:space="preserve">
          <source>Optional: on Linux use the &lt;code&gt;manylinux&lt;/code&gt; images as a build hosts if maximum portability is needed and run &lt;code&gt;auditwheel&lt;/code&gt; for the wheel after build</source>
          <target state="translated">可选：在Linux上，如果需要最大的可移植性，请使用 &lt;code&gt;manylinux&lt;/code&gt; 映像作为构建主机，并在构建后运行 &lt;code&gt;auditwheel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53d296ab5e224ca4ee0b4d1a690dfd44b841f1a7" translate="yes" xml:space="preserve">
          <source>Optional: on macOS use &lt;code&gt;delocate&lt;/code&gt; (same as &lt;code&gt;auditwheel&lt;/code&gt; but for macOS)</source>
          <target state="translated">可选：在macOS上使用 &lt;code&gt;delocate&lt;/code&gt; （与 &lt;code&gt;auditwheel&lt;/code&gt; 相同，但对于macOS）</target>
        </trans-unit>
        <trans-unit id="4a05d49a8e6c5a228f104e23a0801c52969e8ded" translate="yes" xml:space="preserve">
          <source>Please note that build tools and &lt;code&gt;numpy&lt;/code&gt; are required for the build to succeed. On slow systems such as Raspberry Pi the full build may take several hours. On a 8-core Ryzen 7 3700X the build takes about 6 minutes.</source>
          <target state="translated">请注意，构建工具和 &lt;code&gt;numpy&lt;/code&gt; 是构建成功所必需的。在较慢的系统（例如Raspberry Pi）上，完整版本可能需要几个小时。在8核Ryzen 7 3700X上，构建大约需要6分钟。</target>
        </trans-unit>
        <trans-unit id="36306c8036ecbf620c41451e2befd59172ccc71b" translate="yes" xml:space="preserve">
          <source>Python 3.x releases are provided for officially supported versions (not in EOL).</source>
          <target state="translated">Python 3.x版本是为官方支持的版本提供的(不在EOL中)。</target>
        </trans-unit>
        <trans-unit id="f90f1a0d4ff492e82c95ecf2a9e61bed9e7a034c" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;</source>
          <target state="translated">阅读&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV文档&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="479d8086b04986dca20311f3d645e1438e0d40ae" translate="yes" xml:space="preserve">
          <source>Rearrange OpenCV's build result, add our custom files and generate wheel</source>
          <target state="translated">重新排列OpenCV的构建结果,添加我们的自定义文件并生成轮子。</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">发布</target>
        </trans-unit>
        <trans-unit id="9bebeb1391a426d579391391fc4fb6f1e895146c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;pip wheel . --verbose&lt;/code&gt;. NOTE: make sure you have the latest &lt;code&gt;pip&lt;/code&gt;, the &lt;code&gt;pip wheel&lt;/code&gt; command replaces the old &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt; command which does not support &lt;code&gt;pyproject.toml&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;pip wheel . --verbose&lt;/code&gt; 。注意：确保您具有最新的 &lt;code&gt;pip&lt;/code&gt; ， &lt;code&gt;pip wheel&lt;/code&gt; 命令替换了不支持 &lt;code&gt;pyproject.toml&lt;/code&gt; 的旧 &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="d1e4ac244a004b1c83781a7bc8fee8b617c2b8ce" translate="yes" xml:space="preserve">
          <source>See the next section for more info about manual builds outside the CI environment.</source>
          <target state="translated">请参阅下一节,了解更多关于CI环境外手动构建的信息。</target>
        </trans-unit>
        <trans-unit id="1174823c443db8aeb2ae801944640c46f41d3b59" translate="yes" xml:space="preserve">
          <source>Select the correct package for your environment:</source>
          <target state="translated">为您的环境选择正确的软件包。</target>
        </trans-unit>
        <trans-unit id="288b0ab2242f27457dfb41f6cab90deeacb6e3a5" translate="yes" xml:space="preserve">
          <source>Select the version which you wish to build with &lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; and &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt;: i.e. &lt;code&gt;export ENABLE_CONTRIB=1&lt;/code&gt; if you wish to build &lt;code&gt;opencv-contrib-python&lt;/code&gt;</source>
          <target state="translated">选择您希望使用 &lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; 和 &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt; 构建的版本：即，如果您希望构建 &lt;code&gt;opencv-contrib-python&lt;/code&gt; ,则 &lt;code&gt;export ENABLE_CONTRIB=1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29261adc76e88820b8310623b11636328203fe8e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;opencv-python&lt;/code&gt; version 4.3.0.*, &lt;code&gt;manylinux1&lt;/code&gt; wheels were replaced by &lt;code&gt;manylinux2014&lt;/code&gt; wheels. If your pip is too old, it will try to use the new source distribution introduced in 4.3.0.38 to manually build OpenCV because it does not know how to install &lt;code&gt;manylinux2014&lt;/code&gt; wheels. However, source build will also fail because of too old &lt;code&gt;pip&lt;/code&gt; because it does not understand build dependencies in &lt;code&gt;pyproject.toml&lt;/code&gt;. To use the new &lt;code&gt;manylinux2014&lt;/code&gt; pre-built wheels (or to build from source), your &lt;code&gt;pip&lt;/code&gt; version must be &amp;gt;= 19.3. Please upgrade &lt;code&gt;pip&lt;/code&gt; with &lt;code&gt;pip install --upgrade pip&lt;/code&gt;.</source>
          <target state="translated">由于 &lt;code&gt;opencv-python&lt;/code&gt; 版本4.3.0。*， &lt;code&gt;manylinux1&lt;/code&gt; 车轮被替换 &lt;code&gt;manylinux2014&lt;/code&gt; 轮。如果您的pip太旧，它将尝试使用4.3.0.38中引入的新源代码发行版来手动构建OpenCV，因为它不知道如何安装 &lt;code&gt;manylinux2014&lt;/code&gt; 轮子。但是，源构建也会由于太旧的 &lt;code&gt;pip&lt;/code&gt; 而失败，因为它无法理解 &lt;code&gt;pyproject.toml&lt;/code&gt; 中的构建依赖项。要使用新的 &lt;code&gt;manylinux2014&lt;/code&gt; 预先构建的轮子（或从源代码构建），您的 &lt;code&gt;pip&lt;/code&gt; 版本必须为&amp;gt; = 19.3。请升级 &lt;code&gt;pip&lt;/code&gt; 与 &lt;code&gt;pip install --upgrade pip&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2a2dadb62a32e8f79cce8c1815f2f8edf07c04b" translate="yes" xml:space="preserve">
          <source>Since OpenCV version 4.3.0, also source distributions are provided in PyPI. This means that if your system is not compatible with any of the wheels in PyPI, &lt;code&gt;pip&lt;/code&gt; will attempt to build OpenCV from sources.</source>
          <target state="translated">从OpenCV版本4.3.0开始，PyPI也提供了源代码分发。这意味着，如果您的系统与PyPI中的任何轮子都不兼容，则 &lt;code&gt;pip&lt;/code&gt; 将尝试从源代码构建OpenCV。</target>
        </trans-unit>
        <trans-unit id="d3d4fb9ddfc4beb11245a82e465f66d6fc2a3f97" translate="yes" xml:space="preserve">
          <source>Source distributions</source>
          <target state="translated">来源分布</target>
        </trans-unit>
        <trans-unit id="0d769c67cd466c08214f053cb3a7a14c68ec04dc" translate="yes" xml:space="preserve">
          <source>Starting from 4.2.0 and 3.4.9 builds the macOS Travis build environment was updated to XCode 9.4. The change effectively dropped support for older than 10.13 macOS versions.</source>
          <target state="translated">从4.2.0和3.4.9版本开始,macOS Travis的构建环境已经更新为XCode 9.4。这项改变有效地放弃了对10.13以上macOS版本的支持。</target>
        </trans-unit>
        <trans-unit id="f64296398f9f6dcbc0c267ef640ab9cf604dd06f" translate="yes" xml:space="preserve">
          <source>Starting from 4.3.0 and 3.4.10 builds the Linux build environment was updated from &lt;code&gt;manylinux1&lt;/code&gt; to &lt;code&gt;manylinux2014&lt;/code&gt;. This dropped support for old Linux distributions.</source>
          <target state="translated">从4.3.0和3.4.10版本开始，Linux构建环境从 &lt;code&gt;manylinux1&lt;/code&gt; 更新为 &lt;code&gt;manylinux2014&lt;/code&gt; 。这放弃了对旧Linux发行版的支持。</target>
        </trans-unit>
        <trans-unit id="f8faa602b194ed58b7e194b8c29b84a215908892" translate="yes" xml:space="preserve">
          <source>Steps 1--4 are handled by &lt;code&gt;pip wheel&lt;/code&gt;.</source>
          <target state="translated">步骤1--4由 &lt;code&gt;pip wheel&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="08ba552fef49ea2b5a1c7d81969ccab1af7c640a" translate="yes" xml:space="preserve">
          <source>Supported Python versions</source>
          <target state="translated">支持的Python版本</target>
        </trans-unit>
        <trans-unit id="80da1c8ca729fb248bb8ebe52fdcca97b72f9b15" translate="yes" xml:space="preserve">
          <source>Test that Python can import the library and run some sanity checks</source>
          <target state="translated">测试Python是否可以导入库并运行一些安全检查。</target>
        </trans-unit>
        <trans-unit id="d69382be5d67aad7b7354d52fe7ed27b44b7508a" translate="yes" xml:space="preserve">
          <source>The aim of this repository is to provide means to package each new &lt;a href=&quot;https://github.com/opencv/opencv/releases&quot;&gt;OpenCV release&lt;/a&gt; for the most used Python versions and platforms.</source>
          <target state="translated">该存储库的目的是提供用于打包最常用的Python版本和平台的每个新&lt;a href=&quot;https://github.com/opencv/opencv/releases&quot;&gt;OpenCV版本&lt;/a&gt;的方法。</target>
        </trans-unit>
        <trans-unit id="e4b2a943392a23b93c37c9a43689d68b7d4071db" translate="yes" xml:space="preserve">
          <source>The build can be customized with environment variables. In addition to any variables that OpenCV's build accepts, we recognize:</source>
          <target state="translated">构建可以通过环境变量来定制。除了OpenCV的构建所接受的任何变量之外,我们还认识到。</target>
        </trans-unit>
        <trans-unit id="228758fcec052c632058ab426f2399fac97a5cb0" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;manylinux&lt;/code&gt; images have been extended with some OpenCV dependencies. See &lt;a href=&quot;https://github.com/skvark/opencv-python/tree/master/docker&quot;&gt;Docker folder&lt;/a&gt; for more info.</source>
          <target state="translated">默认的 &lt;code&gt;manylinux&lt;/code&gt; 映像已经扩展了一些OpenCV依赖项。有关更多信息，请参见&lt;a href=&quot;https://github.com/skvark/opencv-python/tree/master/docker&quot;&gt;Docker文件夹&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d5bce5c03e622c70e84bee1d8f93f421f19380a" translate="yes" xml:space="preserve">
          <source>The master branch follows OpenCV master branch releases. 3.4 branch follows OpenCV 3.4 bugfix releases.</source>
          <target state="translated">主分支遵循OpenCV主分支发布。3.4分支遵循OpenCV 3.4 bugfix发布。</target>
        </trans-unit>
        <trans-unit id="4b07b42d28c101c8ee273097b1bf85e01e7a5d12" translate="yes" xml:space="preserve">
          <source>The packages include also other binaries. Full list of licenses can be found from &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;.</source>
          <target state="translated">这些软件包还包括其他二进制文件。许可证的完整列表可以从&lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt中找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8efa7864d43e5cca9a222df760aac72cbabf98a8" translate="yes" xml:space="preserve">
          <source>The project is structured like a normal Python package with a standard &lt;code&gt;setup.py&lt;/code&gt; file.
The build process for a single entry in the build matrices is as follows (see for example &lt;code&gt;appveyor.yml&lt;/code&gt; file):</source>
          <target state="translated">该项目的结构类似于带有标准 &lt;code&gt;setup.py&lt;/code&gt; 文件的普通Python软件包。生成矩阵中单个条目的生成过程如下（例如，参见 &lt;code&gt;appveyor.yml&lt;/code&gt; 文件）：</target>
        </trans-unit>
        <trans-unit id="d86ad4ba7983f04196af0c6309e5a99f01e132f5" translate="yes" xml:space="preserve">
          <source>There are four different packages and you should &lt;strong&gt;select only one of them&lt;/strong&gt;. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (&lt;code&gt;cv2&lt;/code&gt;). If you installed multiple different packages in the same environment, uninstall them all with &lt;code&gt;pip uninstall&lt;/code&gt; and reinstall only one package.</source>
          <target state="translated">有四种不同的软件包，您应该&lt;strong&gt;只选择其中一种&lt;/strong&gt;。不要在同一环境中安装多个不同的软件包。没有插件架构：所有软件包都使用相同的名称空间（ &lt;code&gt;cv2&lt;/code&gt; ）。如果您在同一环境中安装了多个不同的软件包，请使用 &lt;code&gt;pip uninstall&lt;/code&gt; 其全部卸载，然后仅重新安装一个软件包。</target>
        </trans-unit>
        <trans-unit id="80bc18bc5d9fa1f7eb0cde0a1542a75bffecf74b" translate="yes" xml:space="preserve">
          <source>These artifacts can't be and will not be uploaded to PyPI.</source>
          <target state="translated">这些工件不能也不会被上传到PyPI。</target>
        </trans-unit>
        <trans-unit id="ae9af5ee1c7f1a7f919099882178e70f1b9c0fb2" translate="yes" xml:space="preserve">
          <source>These packages do not contain any GUI functionality. They are smaller and suitable for more restricted environments.</source>
          <target state="translated">这些软件包不包含任何图形用户界面功能。它们的体积较小,适用于更多的限制性环境。</target>
        </trans-unit>
        <trans-unit id="7fa23e24b613ba0341eb0144512496605ab7e430" translate="yes" xml:space="preserve">
          <source>Third party package licenses are at &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;.</source>
          <target state="translated">第三方软件包许可证位于&lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt上&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da07910edd84663c51c0e8e16fc20bf16ce198c3" translate="yes" xml:space="preserve">
          <source>Use twine to upload the generated wheel to PyPI (only in release builds)</source>
          <target state="translated">使用twine将生成的轮子上传到PyPI(仅在发行版中)</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">版本设计</target>
        </trans-unit>
        <trans-unit id="b072e2244b4098070c4794dc85bc4b4abbc354ad" translate="yes" xml:space="preserve">
          <source>Windows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also &lt;a href=&quot;https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions&quot;&gt;Windows Media Feature Pack&lt;/a&gt;.</source>
          <target state="translated">Windows N和KN版本不包含OpenCV所需的Media Feature Pack。如果您使用的是Windows N或KN版本，请同时安装&lt;a href=&quot;https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions&quot;&gt;Windows Media Feature Pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1ba26270de64803b222b63013e41ec8dc5a65e6" translate="yes" xml:space="preserve">
          <source>Wrapper package for OpenCV python bindings.</source>
          <target state="translated">OpenCV python绑定的封装包。</target>
        </trans-unit>
        <trans-unit id="e1029785330a41d62b485656887e0e78951cb780" translate="yes" xml:space="preserve">
          <source>You can also force &lt;code&gt;pip&lt;/code&gt; to build the wheels from the source distribution. Some examples:</source>
          <target state="translated">您还可以强制 &lt;code&gt;pip&lt;/code&gt; 从源代码分发构建轮子。一些例子：</target>
        </trans-unit>
        <trans-unit id="fb4c74623c75857933bac5606cb7b8114c3c81f0" translate="yes" xml:space="preserve">
          <source>You'll have the wheel file in the &lt;code&gt;dist&lt;/code&gt; folder and you can do with that whatever you wish</source>
          <target state="translated">您将把wheel文件保存在 &lt;code&gt;dist&lt;/code&gt; 文件夹中，并随心所欲地做</target>
        </trans-unit>
        <trans-unit id="370f6982fa966b078349dde951ef044a609ee79f" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-contrib-python-headless&lt;/code&gt; if you need both main and contrib modules (check extra modules listing from &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;)</source>
          <target state="translated">如果需要主模块和contrib模块，请运行 &lt;code&gt;pip install opencv-contrib-python-headless&lt;/code&gt; （请&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;参阅OpenCV文档中&lt;/a&gt;列出的其他模块）</target>
        </trans-unit>
        <trans-unit id="a529d7d500fa8b6306f02d25d839d140374d5b71" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-contrib-python&lt;/code&gt; if you need both main and contrib modules (check extra modules listing from &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;)</source>
          <target state="translated">如果需要主模块和contrib模块，请运行 &lt;code&gt;pip install opencv-contrib-python&lt;/code&gt; （请&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;参阅OpenCV文档中&lt;/a&gt;列出的其他模块）</target>
        </trans-unit>
        <trans-unit id="7dfe1942eb4688bcc4c30da3e7684a6bc31aaae2" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-python-headless&lt;/code&gt; if you need only main modules</source>
          <target state="translated">如果只需要主要模块，请运行 &lt;code&gt;pip install opencv-python-headless&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9348c7347d7f0923e0460ee59c968829333d3aff" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-python&lt;/code&gt; if you need only main modules</source>
          <target state="translated">如果只需要主要模块，请运行 &lt;code&gt;pip install opencv-python&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d551e1881ef81217e97f4db8cb2ebdb46e61ad5e" translate="yes" xml:space="preserve">
          <source>source distributions are separate entries in the build matrix</source>
          <target state="translated">源分布是构建矩阵中的单独条目。</target>
        </trans-unit>
        <trans-unit id="0370216d60c6160041cfb82e3574bd9dac2caa6d" translate="yes" xml:space="preserve">
          <source>tests are disabled, otherwise build time increases too much</source>
          <target state="translated">测试被禁用,否则构建时间会增加太多。</target>
        </trans-unit>
        <trans-unit id="60cf39a5f73e0806b468683704787cdbdf29901a" translate="yes" xml:space="preserve">
          <source>there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)</source>
          <target state="translated">每个构建组合有4个构建矩阵条目:有和没有contrib模块,有和没有GUI(无头)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
