<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/itemadapter/">
    <body>
      <group id="itemadapter">
        <trans-unit id="c39044a34ace40d0679da61028735406025f0c46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;&lt;code&gt;dataclass&lt;/code&gt;&lt;/a&gt;-based classes</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt; &lt;code&gt;dataclass&lt;/code&gt; &lt;/a&gt;基于数据类的类</target>
        </trans-unit>
        <trans-unit id="a51b05fcc6934e135d543dbe39a24076691602c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.field&quot;&gt;&lt;code&gt;dataclasses.field.metadata&lt;/code&gt;&lt;/a&gt;
for &lt;code&gt;dataclass&lt;/code&gt;-based items</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html#dataclasses.field&quot;&gt; &lt;code&gt;dataclasses.field.metadata&lt;/code&gt; &lt;/a&gt; 的 &lt;code&gt;dataclass&lt;/code&gt; 为基础的项目</target>
        </trans-unit>
        <trans-unit id="2a685997855c6062388e252abe15cbd0584d6b96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.scrapy.org/en/latest/topics/items.html#item-fields&quot;&gt;&lt;code&gt;scrapy.item.Field&lt;/code&gt;&lt;/a&gt;
for &lt;code&gt;scrapy.item.Item&lt;/code&gt;s</source>
          <target state="translated">&lt;a href=&quot;https://docs.scrapy.org/en/latest/topics/items.html#item-fields&quot;&gt; &lt;code&gt;scrapy.item.Field&lt;/code&gt; &lt;/a&gt; 为 &lt;code&gt;scrapy.item.Item&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="428cd65e0d42273e0eed5ddcbd5e369c6accc3e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/attrs/&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;: optional, needed to interact with &lt;code&gt;attrs&lt;/code&gt;-based items</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/attrs/&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt;：可选，与基于 &lt;code&gt;attrs&lt;/code&gt; 的项目进行交互需要</target>
        </trans-unit>
        <trans-unit id="9a1b9a65a63b018999fd9353b4421b3ecf6fb5a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://scrapy.org/&quot;&gt;&lt;code&gt;scrapy&lt;/code&gt;&lt;/a&gt;: optional, needed to interact with &lt;code&gt;scrapy&lt;/code&gt; items</source>
          <target state="translated">&lt;a href=&quot;https://scrapy.org/&quot;&gt; &lt;code&gt;scrapy&lt;/code&gt; &lt;/a&gt;：可选，需要与 &lt;code&gt;scrapy&lt;/code&gt; 项交互</target>
        </trans-unit>
        <trans-unit id="e3eb4c78aa3f9bcdc674e8c224aa7d823a893b48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.attrs.org&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt;-based classes</source>
          <target state="translated">&lt;a href=&quot;https://www.attrs.org&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt;基于attrs的类</target>
        </trans-unit>
        <trans-unit id="f1cd14203a604ccf9ff25e3be5879faa6e508e6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.attrs.org/en/stable/examples.html#metadata&quot;&gt;&lt;code&gt;attr.Attribute.metadata&lt;/code&gt;&lt;/a&gt;
for &lt;code&gt;attrs&lt;/code&gt;-based items</source>
          <target state="translated">&lt;a href=&quot;https://www.attrs.org/en/stable/examples.html#metadata&quot;&gt; &lt;code&gt;attr.Attribute.metadata&lt;/code&gt; &lt;/a&gt; 为 &lt;code&gt;attrs&lt;/code&gt; 基于项目</target>
        </trans-unit>
        <trans-unit id="04626f8da1040f84eb1a1f2a1e2fda5b0c4ba0d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ItemAdapter&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="b2e5c6af1b5dd09726cc8043369e442047883342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ItemAdapter&lt;/code&gt; implements the
&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;MutableMapping&lt;/code&gt; interface&lt;/a&gt;,
providing a &lt;code&gt;dict&lt;/code&gt;-like API to manipulate data for the object it wraps
(which is modified in-place).</source>
          <target state="translated">&lt;code&gt;ItemAdapter&lt;/code&gt; 实现了 &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;MutableMapping&lt;/code&gt; 接口&lt;/a&gt;，提供了类似 &lt;code&gt;dict&lt;/code&gt; 的API来为其包装的对象（在位修改）操纵数据。</target>
        </trans-unit>
        <trans-unit id="6572433208ea22a136508e4b9ed29c3019712f75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;attrs&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="b666f0a69430a45ee9556a45793b81544d20e7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataclass&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;dataclass&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="e60927b95542343be704bb379ab2e85d4aadba20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataclasses&lt;/code&gt; (&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;stdlib&lt;/a&gt; in Python 3.7+,
or its &lt;a href=&quot;https://pypi.org/project/dataclasses/&quot;&gt;backport&lt;/a&gt; in Python 3.6): optional, needed
to interact with &lt;code&gt;dataclass&lt;/code&gt;-based items</source>
          <target state="translated">&lt;code&gt;dataclasses&lt;/code&gt; （Python 3.7+中的&lt;a href=&quot;https://docs.python.org/3/library/dataclasses.html&quot;&gt;stdlib&lt;/a&gt;或Python 3.6中的&lt;a href=&quot;https://pypi.org/project/dataclasses/&quot;&gt;backport&lt;/a&gt;）：可选，与基于 &lt;code&gt;dataclass&lt;/code&gt; 的项目交互时需要</target>
        </trans-unit>
        <trans-unit id="7c5d6c730313397cb38e2f5c14fe475727214db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is_item&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;is_item&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="b1f085a739a6cdae392a63f03c4afc0cd5d8f1f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemadapter&lt;/code&gt; is available on &lt;a href=&quot;https://pypi.python.org/pypi/itemadapter&quot;&gt;&lt;code&gt;PyPI&lt;/code&gt;&lt;/a&gt;, it can be installed with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;itemadapter&lt;/code&gt; 在&lt;a href=&quot;https://pypi.python.org/pypi/itemadapter&quot;&gt; &lt;code&gt;PyPI&lt;/code&gt; &lt;/a&gt;上可用，可以通过 &lt;code&gt;pip&lt;/code&gt; 安装：</target>
        </trans-unit>
        <trans-unit id="58fe69cf64ad126b2fef520c812b3e2df87d0ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemadapter&lt;/code&gt; is distributed under a &lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;BSD-3&lt;/a&gt; license.</source>
          <target state="translated">&lt;code&gt;itemadapter&lt;/code&gt; 是根据&lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;BSD-3&lt;/a&gt;许可证分发的。</target>
        </trans-unit>
        <trans-unit id="af048327686669361f83938ef8fdb24b6f64a775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scrapy.item.Item&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;scrapy.item.Item&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="0d6c636da292825f031cdcebee082fb7f8970d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scrapy.item.Item&lt;/code&gt;, &lt;code&gt;dataclass&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt; objects allow the inclusion of
arbitrary field metadata, which can be retrieved with the
&lt;code&gt;ItemAdapter.get_field_meta&lt;/code&gt; method. The definition procedure depends on the
underlying type.</source>
          <target state="translated">&lt;code&gt;scrapy.item.Item&lt;/code&gt; ， &lt;code&gt;dataclass&lt;/code&gt; 和 &lt;code&gt;attrs&lt;/code&gt; 对象允许包含任意字段元数据，可以使用 &lt;code&gt;ItemAdapter.get_field_meta&lt;/code&gt; 方法进行检索 。定义过程取决于基础类型。</target>
        </trans-unit>
        <trans-unit id="27effa6cc4f099a76e07b24e8641dbc1acfd303d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;itemadapter.utils.is_item(obj: Any) -&amp;gt; bool&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;itemadapter.utils.is_item(obj: Any) -&amp;gt; bool&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f4aa11fd91c3e564c645b0ae99572ee470c22dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;class &lt;code&gt;itemadapter.adapter.ItemAdapter(item: Any)&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;class &lt;code&gt;itemadapter.adapter.ItemAdapter(item: Any)&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">基本用途</target>
        </trans-unit>
        <trans-unit id="a1182e754041448e40dbd4c28d8b35739f3c38be" translate="yes" xml:space="preserve">
          <source>Common interface for data container classes</source>
          <target state="translated">数据容器类的通用接口</target>
        </trans-unit>
        <trans-unit id="062e6d76df4420148c10d5486428e80b60b06f5d" translate="yes" xml:space="preserve">
          <source>Converting to dict</source>
          <target state="translated">转为听写</target>
        </trans-unit>
        <trans-unit id="19c955e31072e31bcb91c9787e822e106fc97599" translate="yes" xml:space="preserve">
          <source>Currently supported types are:</source>
          <target state="translated">目前支持的类型有:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="67489a913609246287d502a6858a01bbbef318e8" translate="yes" xml:space="preserve">
          <source>Metadata support</source>
          <target state="translated">元数据支持</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="8e780abb4027d7a01b5a4c7af1256f534d29fc21" translate="yes" xml:space="preserve">
          <source>Note that just passing an adapter object to the &lt;code&gt;dict&lt;/code&gt; built-in also works,
but it doesn't traverse the object recursively converting nested items:</source>
          <target state="translated">请注意，仅将适配器对象传递给内置的 &lt;code&gt;dict&lt;/code&gt; 也可以，但是它不会遍历对象以递归方式转换嵌套项：</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">公共API</target>
        </trans-unit>
        <trans-unit id="769122f135910e46e3e49288118dc65130f6542d" translate="yes" xml:space="preserve">
          <source>Python 3.5+</source>
          <target state="translated">Python 3.5+</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="21d19a6ae534e3c50608c858bca51068c284d9bd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the given object belongs to one of the supported types,
&lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定对象属于受支持的类型之一，则返回 &lt;code&gt;True&lt;/code&gt; ,否则 返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f78535db5407b83f4cd79002b8ba5fd225c3bf02" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.KeysView&quot;&gt;keys view&lt;/a&gt;
with the names of all the defined fields for the item.</source>
          <target state="translated">返回具有 该项目所有已定义字段名称的&lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.KeysView&quot;&gt;键视图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b567976a904701d7e415370f5656731bffde745" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3/library/types.html#types.MappingProxyType&quot;&gt;&lt;code&gt;MappingProxyType&lt;/code&gt;&lt;/a&gt;
object, which is a read-only mapping with metadata about the given field. If the item class does not
support field metadata, or there is no metadata for the given field, an empty object is returned.</source>
          <target state="translated">返回&lt;a href=&quot;https://docs.python.org/3/library/types.html#types.MappingProxyType&quot;&gt; &lt;code&gt;MappingProxyType&lt;/code&gt; &lt;/a&gt; 对象，该对象是具有有关给定字段的元数据的只读映射。如果项目类不支持字段元数据，或者给定字段没有元数据，则返回一个空对象。</target>
        </trans-unit>
        <trans-unit id="8dd5769f6df8f92971895f76dc0130965df6aee2" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;dict&lt;/code&gt; object with the contents of the adapter. This works slightly different than
calling &lt;code&gt;dict(adapter)&lt;/code&gt;, because it's applied recursively to nested items (if there are any).</source>
          <target state="translated">返回带有适配器内容的 &lt;code&gt;dict&lt;/code&gt; 对象。这与调用 &lt;code&gt;dict(adapter)&lt;/code&gt; 略有不同，因为它是递归地应用于嵌套项（如果有）。</target>
        </trans-unit>
        <trans-unit id="25acdd32606a08d4f7ebd1a1c76f85dbf3894dfd" translate="yes" xml:space="preserve">
          <source>Some additional methods are available:</source>
          <target state="translated">还可以采用一些其他方法。</target>
        </trans-unit>
        <trans-unit id="e8899cbe0a2a5e23f302e9ffef69b8fc95edd54f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ItemAdapter&lt;/code&gt; class is a wrapper for data container objects, providing a
common interface to handle objects of different types in an uniform manner,
regardless of their underlying implementation.</source>
          <target state="translated">所述 &lt;code&gt;ItemAdapter&lt;/code&gt; 类是数据容器对象的包装，提供一个通用的接口来处理以均匀的方式不同类型的对象，无论其底层实现的。</target>
        </trans-unit>
        <trans-unit id="fcea3a28ba8fa773559884252c3f3f539c016d05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ItemAdapter&lt;/code&gt; class provides the &lt;code&gt;asdict&lt;/code&gt; method, which converts
nested items recursively. Consider the following example:</source>
          <target state="translated">所述 &lt;code&gt;ItemAdapter&lt;/code&gt; 类提供 &lt;code&gt;asdict&lt;/code&gt; 方法，该方法递归地转换嵌套项目。考虑以下示例：</target>
        </trans-unit>
        <trans-unit id="3dacca9388b578435819aa3c25693b6fb0c590f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ItemAdapter&lt;/code&gt; object can be treated much like a dictionary:</source>
          <target state="translated">该 &lt;code&gt;ItemAdapter&lt;/code&gt; 对象可以治疗很像一本字典：</target>
        </trans-unit>
        <trans-unit id="7fb7ea8184f198150f1e392e56c990ff688b522c" translate="yes" xml:space="preserve">
          <source>The following is a simple example using a &lt;code&gt;dataclass&lt;/code&gt; object.
Consider the following type definition:</source>
          <target state="translated">以下是使用 &lt;code&gt;dataclass&lt;/code&gt; 对象的简单示例。考虑以下类型定义：</target>
        </trans-unit>
        <trans-unit id="92cb01be30a6c1b44bbc7667411ad48bc1b6562d" translate="yes" xml:space="preserve">
          <source>The returned value is taken from the following sources, depending on the item type:</source>
          <target state="translated">根据项目类型,返回的值来自以下来源。</target>
        </trans-unit>
        <trans-unit id="d4004f72dce53eaf45dc8a5a627b15a836ba6ea9" translate="yes" xml:space="preserve">
          <source>The wrapped object is modified in-place:</source>
          <target state="translated">被包装的对象就地修改。</target>
        </trans-unit>
        <trans-unit id="97fe7f728d9454979c2e9de966c0313459206279" translate="yes" xml:space="preserve">
          <source>itemadapter</source>
          <target state="translated">适配器</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
