<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/fastobo/">
    <body>
      <group id="fastobo">
        <trans-unit id="a28b29eb9814bab7c4505b8fae558880dfdc6a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://crates.io/crates/fastobo&quot;&gt;&lt;code&gt;fastobo&lt;/code&gt;&lt;/a&gt; is a Rust library implementing a
reliable parser for the OBO file format 1.4. This extension module exports
idiomatic Python bindings that can be used to load, edit and serialize ontologies
in the OBO format.</source>
          <target state="translated">&lt;a href=&quot;https://crates.io/crates/fastobo&quot;&gt; &lt;code&gt;fastobo&lt;/code&gt; &lt;/a&gt;是一个Rust库，为OBO文件格式1.4实现了可靠的解析器。该扩展模块以OBO格式导出惯用的Python绑定，可用于加载，编辑和序列化本体。</target>
        </trans-unit>
        <trans-unit id="c67108b4899130192e447735f9cc67718abcb4c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Comments can be parsed but neither edited nor serialized, because of a limitation
with &lt;code&gt;pyo3&lt;/code&gt; (the library used to generate the Python bindings). They are supported
in the Rust version of &lt;code&gt;fastobo&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;由于 &lt;code&gt;pyo3&lt;/code&gt; （用于生成Python绑定的库）的限制，注释可以解析，但不能编辑或序列化。在 &lt;code&gt;fastobo&lt;/code&gt; 的Rust版本中支持它们。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06787372b14279b22b27fba4f0b9107786351f87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Faultless AST for Open Biomedical Ontologies in Python.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于Python的开放式生物医学本体的完美AST。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d25bbaa185f3295168f1745bb9d85fff365f4b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Larralde M.&lt;/em&gt;&lt;strong&gt;Developing Python and Rust libraries to improve the ontology ecosystem&lt;/strong&gt;&lt;em&gt;[version 1; not peer reviewed].&lt;/em&gt; F1000Research 2019, 8(ISCB Comm J):1500 (poster)
(&lt;a href=&quot;https://doi.org/10.7490/f1000research.1117405.1&quot;&gt;https://doi.org/10.7490/f1000research.1117405.1&lt;/a&gt;)</source>
          <target state="translated">&lt;em&gt;Larralde M.&lt;/em&gt;&lt;strong&gt;开发Python和Rust库以改善本体生态系统&lt;/strong&gt;&lt;em&gt;[版本1；没有同行评审]。&lt;/em&gt;F1000研究2019，8（ISCB Comm J）：1500（海报）（&lt;a href=&quot;https://doi.org/10.7490/f1000research.1117405.1&quot;&gt;https://doi.org/10.7490/f1000research.1117405.1&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">关于我们</target>
        </trans-unit>
        <trans-unit id="5f3f33f339afa30c15c68ff94cf12e7fc1649d72" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;OboDoc&lt;/code&gt; instance can be instantiated from a path or from a binary file handle
using the &lt;code&gt;fastobo.load&lt;/code&gt; function, or from a string using the &lt;code&gt;fastobo.loads&lt;/code&gt; function.</source>
          <target state="translated">一个 &lt;code&gt;OboDoc&lt;/code&gt; 实例可以从一个路径或从二进制文件句柄使用实例化 &lt;code&gt;fastobo.load&lt;/code&gt; 功能，或使用一个字符串 &lt;code&gt;fastobo.loads&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="071bceb8fed05536e7cc15990039e62da7ff6d34" translate="yes" xml:space="preserve">
          <source>Faultless AST for Open Biomedical Ontologies in Python.</source>
          <target state="translated">Faultless AST for Open Biomedical Ontologies in Python.</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">意见反馈</target>
        </trans-unit>
        <trans-unit id="1b628c54ff7dbe9c630bf96d0927fbef96175eb9" translate="yes" xml:space="preserve">
          <source>Found a bug ? Have an enhancement request ? Head over to the
&lt;a href=&quot;https://github.com/fastobo/fastobo-py/issues&quot;&gt;GitHub issue tracker&lt;/a&gt; of the project if
you need to report or ask something. If you are filling in on a bug, please include as much
information as you can about the issue, and try to recreate the same bug in a simple, easily
reproducible situation.</source>
          <target state="translated">发现了错误？有增强要求吗？如果您需要报告或提出&lt;a href=&quot;https://github.com/fastobo/fastobo-py/issues&quot;&gt;问题&lt;/a&gt;，请转到该项目的 GitHub问题跟踪器。如果您要填写错误，请提供尽可能多的有关此问题的信息，并尝试在简单，易于再现的情况下重新创建相同的错误。</target>
        </trans-unit>
        <trans-unit id="54a77a5e4fca8feff874a857fd0e124376ddefab" translate="yes" xml:space="preserve">
          <source>If your platform has no pre-built binaries available, you will need to have the Rust
compiler installed. See the &lt;a href=&quot;https://forge.rust-lang.org/other-installation-methods.html&quot;&gt;documentation on &lt;code&gt;rust-lang.org&lt;/code&gt;&lt;/a&gt;
to learn how to install Rust on your machine.</source>
          <target state="translated">如果您的平台没有可用的预构建二进制文件，则需要安装Rust编译器。请参阅&lt;a href=&quot;https://forge.rust-lang.org/other-installation-methods.html&quot;&gt; &lt;code&gt;rust-lang.org&lt;/code&gt; &lt;/a&gt; 上的文档以了解如何在计算机上安装Rust。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="d162766694f0aaae8278f024dfda6085b4f095bd" translate="yes" xml:space="preserve">
          <source>Installation is then supported through &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">然后通过 &lt;code&gt;pip&lt;/code&gt; 支持安装：</target>
        </trans-unit>
        <trans-unit id="28d8fb8b07754ea8285a0a4118c33603385ac771" translate="yes" xml:space="preserve">
          <source>Loading from a &lt;code&gt;gzip&lt;/code&gt; file is supported:</source>
          <target state="translated">支持从 &lt;code&gt;gzip&lt;/code&gt; 文件加载：</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="926b7e80d6969725dea9155577c85021934de048" translate="yes" xml:space="preserve">
          <source>This project was developed by &lt;a href=&quot;https://github.com/althonos&quot;&gt;Martin Larralde&lt;/a&gt;
as part of a Master's Degree internship in the &lt;a href=&quot;http://berkeleybop.org/&quot;&gt;BBOP team&lt;/a&gt; of the
&lt;a href=&quot;https://www.lbl.gov/&quot;&gt;Lawrence Berkeley National Laboratory&lt;/a&gt;, under the supervision of
&lt;a href=&quot;http://biosciences.lbl.gov/profiles/chris-mungall/&quot;&gt;Chris Mungall&lt;/a&gt;. Cite this project as:</source>
          <target state="translated">该项目是由&lt;a href=&quot;https://github.com/althonos&quot;&gt;Martin Larralde&lt;/a&gt; 在&lt;a href=&quot;http://biosciences.lbl.gov/profiles/chris-mungall/&quot;&gt;Chris Mungall&lt;/a&gt;的监督下 ，作为 &lt;a href=&quot;https://www.lbl.gov/&quot;&gt;劳伦斯伯克利国家实验室&lt;/a&gt;&lt;a href=&quot;http://berkeleybop.org/&quot;&gt;BBOP团队&lt;/a&gt;的硕士学位实习项目的一部分开发的。将此项目引用为：</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
