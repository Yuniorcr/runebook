<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/negotiator-common/">
    <body>
      <group id="negotiator-common">
        <trans-unit id="77ddc1b2685d7ee9e8387548792298e291f744e7" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2019 Peter Odding.</source>
          <target state="translated">&amp;copy;2019彼得&amp;middot;奥丁（Peter Odding）。</target>
        </trans-unit>
        <trans-unit id="f3514d5b828bde47d688a63d928667982ad0098a" translate="yes" xml:space="preserve">
          <source>&amp;lt;devices&amp;gt;</source>
          <target state="translated">&amp;lt;设备&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3d7a13ed446a38d07fc9b9d7e2c4d0da13b231e9" translate="yes" xml:space="preserve">
          <source>) you can
omit the</source>
          <target state="translated">）您可以省略</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">，</target>
        </trans-unit>
        <trans-unit id="4452f1a891e5ac9c71dfff2a0c26c011b75abe8e" translate="yes" xml:space="preserve">
          <source>--character-device=PATH</source>
          <target state="translated">--character-device =路径</target>
        </trans-unit>
        <trans-unit id="d16a74cc60045082a582e6d6f4ce0c9d08ca199a" translate="yes" xml:space="preserve">
          <source>--daemon</source>
          <target state="translated">-守护进程</target>
        </trans-unit>
        <trans-unit id="c333b64b57e5b934b0cf6e734ff16c9b7fb211ee" translate="yes" xml:space="preserve">
          <source>--execute=COMMAND</source>
          <target state="translated">--execute =命令</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">- 救命</target>
        </trans-unit>
        <trans-unit id="8107ababc10c56b676bbbe0c122793dd546583bc" translate="yes" xml:space="preserve">
          <source>--list-commands</source>
          <target state="translated">--list-commands</target>
        </trans-unit>
        <trans-unit id="0b96f3adff937f253f2b226f6ba4197ac771d6c4" translate="yes" xml:space="preserve">
          <source>--list-guests</source>
          <target state="translated">--list-guests</target>
        </trans-unit>
        <trans-unit id="6cbbb80c43a022aacd54c2000f8d74f1f4dc928e" translate="yes" xml:space="preserve">
          <source>--quiet</source>
          <target state="translated">- 安静</target>
        </trans-unit>
        <trans-unit id="666819eb2fdb66a35df58bb6cc9955b3e4413900" translate="yes" xml:space="preserve">
          <source>--timeout=SECONDS</source>
          <target state="translated">--timeout =秒</target>
        </trans-unit>
        <trans-unit id="f2860556708260c3603c4f244db1aa03e85301b6" translate="yes" xml:space="preserve">
          <source>--verbose</source>
          <target state="translated">-详细</target>
        </trans-unit>
        <trans-unit id="ddbfe46d29072725b61a3ee03c6abfefa0973acd" translate="yes" xml:space="preserve">
          <source>-c</source>
          <target state="translated">-C</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-d</target>
        </trans-unit>
        <trans-unit id="2360917b9377a0f8f526499aa422e769e1252d5b" translate="yes" xml:space="preserve">
          <source>-e</source>
          <target state="translated">-e</target>
        </trans-unit>
        <trans-unit id="86b401141a846fdf2da850b1b4d471a9ccb60b51" translate="yes" xml:space="preserve">
          <source>-g</source>
          <target state="translated">-G</target>
        </trans-unit>
        <trans-unit id="3c3003f7f0bedaf2a7334f932c515378a93f1402" translate="yes" xml:space="preserve">
          <source>-h</source>
          <target state="translated">-H</target>
        </trans-unit>
        <trans-unit id="41ecbf5c742a07d94719d70cfc27033de855195e" translate="yes" xml:space="preserve">
          <source>-l</source>
          <target state="translated">-l</target>
        </trans-unit>
        <trans-unit id="ac33d7b02f2a5c6708f6060ad24e0c1c16b31e96" translate="yes" xml:space="preserve">
          <source>-q</source>
          <target state="translated">-q</target>
        </trans-unit>
        <trans-unit id="1ffa835f18b0d84b7be1c7c0ecd4eb3e149bf81a" translate="yes" xml:space="preserve">
          <source>-t</source>
          <target state="translated">-t</target>
        </trans-unit>
        <trans-unit id="75262c839fe7bdce825dee598401d72dc8394722" translate="yes" xml:space="preserve">
          <source>-v</source>
          <target state="translated">-v</target>
        </trans-unit>
        <trans-unit id="625d7af3967b268f4ffdeabadf7953db4929e41c" translate="yes" xml:space="preserve">
          <source>. Open the file
in your favorite text editor (Vim? :-) and add the the following XML snippet
inside the</source>
          <target state="translated">。在您喜欢的文本编辑器（Vim？:-)中打开文件，并在的内部添加以下XML代码段</target>
        </trans-unit>
        <trans-unit id="214a91eb44c24287c4b7b3ee97f046a75054f7a4" translate="yes" xml:space="preserve">
          <source>/dev/vport[0-9]p[0-9]</source>
          <target state="translated">/ dev / vport [0-9] p [0-9]</target>
        </trans-unit>
        <trans-unit id="67ba61aa10a697340cc401824eed20363e91c25b" translate="yes" xml:space="preserve">
          <source>/etc/libvirt/qemu</source>
          <target state="translated">/ etc / libvirt / qemu</target>
        </trans-unit>
        <trans-unit id="ae7b988dc81ab7613a2cdc3fb312ded899803dfa" translate="yes" xml:space="preserve">
          <source>/usr/lib/negotiator/commands</source>
          <target state="translated">/ usr / lib / negotiator /命令</target>
        </trans-unit>
        <trans-unit id="3286fe6656d8342c32d5e03ccd6639296f002d7d" translate="yes" xml:space="preserve">
          <source>/var/lib/libvirt/qemu/channel/target</source>
          <target state="translated">/ var / lib / libvirt / qemu / channel / target</target>
        </trans-unit>
        <trans-unit id="e32e1a9633e7fa807cee507295117b4e28cf8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extensibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可扩展性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8c0b9b9a3cd1a1c77bfde33b0e59ca31b090058" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Platform support&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;平台支援&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="955b02d0b49c6fe23c13f7f2b04cd48e633a44ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported options:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;支持的选项：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;用法：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65464fef87096f3b03f2a49cd0378fa01cf12d48" translate="yes" xml:space="preserve">
          <source>After adding the configuration snippet you have to activate it:</source>
          <target state="translated">添加配置片段后,你必须激活它。</target>
        </trans-unit>
        <trans-unit id="96023ffaf5ee60e118b212a94a06bcbb539febc0" translate="yes" xml:space="preserve">
          <source>After installation the</source>
          <target state="translated">安装后</target>
        </trans-unit>
        <trans-unit id="9b3be33cf815881243cfd7b8cc0a40a9488e01bd" translate="yes" xml:space="preserve">
          <source>After installation you need to find a way to run the</source>
          <target state="translated">安装完成后,你需要找到一种方法来执行</target>
        </trans-unit>
        <trans-unit id="73182254bfa9400277f370e262baa62bcfde35b7" translate="yes" xml:space="preserve">
          <source>Again this should just be part of the KVM/QEMU system packages, but whatever.
The Negotiator project is playing with new-ish functionality so I pretty much
know to expect sharp edges :-)</source>
          <target state="translated">同样,这应该只是KVM/QEMU系统包的一部分,但不管怎样。Negotiator项目是在玩新的功能,所以我很清楚会有尖锐的边缘:-)</target>
        </trans-unit>
        <trans-unit id="11bb82dc89ea6a7a44c470ae0e4961670d43820c" translate="yes" xml:space="preserve">
          <source>Because the user defines the commands that hosts and guests can execute, the
user controls the amount of influence that hosts and guests have over each
other (there are several built-in commands, these are all read only).</source>
          <target state="translated">因为用户定义了主机和来宾可以执行的命令,所以用户可以控制主机和来宾对对方的影响程度(有几个内置命令,这些命令都是只读的)。</target>
        </trans-unit>
        <trans-unit id="7f5bcc486b15cefa278516c7272039943330defa" translate="yes" xml:space="preserve">
          <source>Broken channels on KVM/QEMU hosts</source>
          <target state="translated">KVM/QEMU主机上的信道断裂</target>
        </trans-unit>
        <trans-unit id="6f52f36e1c343eee1f652856ac23d4edb7533c68" translate="yes" xml:space="preserve">
          <source>By default the appropriate character device is automatically selected based
on /sys/class/virtio-ports/*/name. If the automatic selection doesn&amp;rsquo;t work,
you can set the absolute pathname of the character device that&amp;rsquo;s used to
communicate with the negotiator-host daemon running on the KVM/QEMU host.</source>
          <target state="translated">默认情况下，会根据/ sys / class / virtio-ports / * / name自动选择适当的字符设备。如果自动选择不起作用，则可以设置用于与在KVM / QEMU主机上运行的negotiator-host守护程序通信的字符设备的绝对路径名。</target>
        </trans-unit>
        <trans-unit id="a343fb2339c41f55a8f2938f250ccb751d87f476" translate="yes" xml:space="preserve">
          <source>Character device detection fails</source>
          <target state="translated">字符设备检测失败</target>
        </trans-unit>
        <trans-unit id="3ba358e74699493a040a6c62cfad6e831cdb4bcc" translate="yes" xml:space="preserve">
          <source>Communicate from a KVM/QEMU guest system to its host or start the
guest daemon to allow the host to execute commands on its guests.</source>
          <target state="translated">从KVM/QEMU客体系统与主机进行通信,或启动客体守护进程,允许主机在其客体上执行命令。</target>
        </trans-unit>
        <trans-unit id="a871901673cbc3f5c4db1e1bf96ccc66bc64d96c" translate="yes" xml:space="preserve">
          <source>Communicate from a KVM/QEMU host system with running guest systems using a
guest agent daemon running inside the guests.</source>
          <target state="translated">通过KVM/QEMU主机系统与运行中的客体系统进行通信,使用客体内部运行的客体代理守护进程。</target>
        </trans-unit>
        <trans-unit id="b37456c4530be810dc040f50da72eda09addfb0a" translate="yes" xml:space="preserve">
          <source>Contact</source>
          <target state="translated">联系我们</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">内容</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">调试</target>
        </trans-unit>
        <trans-unit id="1baffd82c8181c16a357b0b25e257ade8ba12c22" translate="yes" xml:space="preserve">
          <source>Decrease logging verbosity (can be repeated).</source>
          <target state="translated">降低记录的啰嗦程度(可重复)。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>
        </trans-unit>
        <trans-unit id="665fc74effce4fb0ca864698426af84853c455a0" translate="yes" xml:space="preserve">
          <source>Despite considerable effort I haven&amp;rsquo;t been able to get a recent version of
the QEMU guest agent running on older Linux distributions (e.g. Ubuntu Linux
10.04). Older versions of the guest agent can be succesfully compiled for
such distributions but don&amp;rsquo;t support the features I require. By creating my
own guest agent I have more control over platform support (given the
primitives required for communication).</source>
          <target state="translated">尽管付出了巨大的努力，但我仍无法获得在较旧的Linux发行版（例如Ubuntu Linux 10.04）上运行的QEMU guest agent的最新版本。可以成功为此类发行版成功编译旧版本的guest Agent，但不支持我需要的功能。通过创建自己的来宾代理，我可以更好地控制平台支持（考虑到通信所需的原语）。</target>
        </trans-unit>
        <trans-unit id="2b25b006f98dfa31cd218a2f2554c295fb125817" translate="yes" xml:space="preserve">
          <source>Execute the given command inside GUEST_NAME. The standard output stream of
the command inside the guest is intercepted and copied to the standard
output stream on the host. If the command exits with a nonzero status code
the negotiator-host program will also exit with a nonzero status code.</source>
          <target state="translated">在GUEST_NAME里面执行给定的命令。在guest里面的命令的标准输出流会被拦截并复制到主机上的标准输出流中。如果命令以非零状态码退出,协商者-主机程序也会以非零状态码退出。</target>
        </trans-unit>
        <trans-unit id="3a898a220f117d6338573502d4d959fe61b35b30" translate="yes" xml:space="preserve">
          <source>Execute the given command on the KVM/QEMU host. The standard output stream
of the command on the host is intercepted and copied to the standard output
stream on the guest. If the command exits with a nonzero status code the
negotiator-guest program will also exit with a nonzero status code.</source>
          <target state="translated">在KVM/QEMU主机上执行指定的命令。主机上的命令标准输出流会被截获,并复制到客机上的标准输出流中。如果命令以非零状态码退出,则协商者-客人程序也将以非零状态码退出。</target>
        </trans-unit>
        <trans-unit id="9ae6736d83331e7f0a8eeca4049404ba3820d58e" translate="yes" xml:space="preserve">
          <source>First you have to add two virtual devices to your QEMU guest. You can do so
by editing the guest&amp;rsquo;s XML definition file. On Ubuntu Linux KVM/QEMU hosts
these files are found in the directory</source>
          <target state="translated">首先，您必须向QEMU guest虚拟机添加两个虚拟设备。您可以通过编辑来宾的XML定义文件来实现。在Ubuntu Linux KVM / QEMU主机上，这些文件位于目录中</target>
        </trans-unit>
        <trans-unit id="8ce22e681e8002af28f4cf33f62644685392ae65" translate="yes" xml:space="preserve">
          <source>GUEST_NAME</source>
          <target state="translated">GUEST_NAME</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">开始</target>
        </trans-unit>
        <trans-unit id="9080335da88e183ba6d391eab19b840841995a4d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to install the &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;negotiator-host&lt;/a&gt; package on your host(s):</source>
          <target state="translated">这是在&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;主机&lt;/a&gt;上安装negotiator-host软件包的方法：</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">它是如何工作的?</target>
        </trans-unit>
        <trans-unit id="45f142a430ca0cf173b65241db97d2aecc13b467" translate="yes" xml:space="preserve">
          <source>If the instructions below are not enough to get you started, take a look at the
&lt;em&gt;Debugging&lt;/em&gt; section below for hints about what to do when things don&amp;rsquo;t work as
expected.</source>
          <target state="translated">如果下面的说明不足以帮助您入门，请查看下面的&amp;ldquo; &lt;em&gt;调试&amp;rdquo;&lt;/em&gt;部分，以获取有关在某些情况下无法按预期进行操作的提示。</target>
        </trans-unit>
        <trans-unit id="0a8a0ef7f4f87835a72882fe61f84ef115a1972c" translate="yes" xml:space="preserve">
          <source>If you prefer you can install the Python package in a virtual environment:</source>
          <target state="translated">如果你愿意,你可以在虚拟环境中安装Python包。</target>
        </trans-unit>
        <trans-unit id="943ecf889d4ca35a4d2d9b2bb272abea3e3bffaf" translate="yes" xml:space="preserve">
          <source>Increase logging verbosity (can be repeated).</source>
          <target state="translated">增加记录的语气(可重复)。</target>
        </trans-unit>
        <trans-unit id="d9bb80dac4b5bb87324acf79227c5388c91a01bb" translate="yes" xml:space="preserve">
          <source>Inside the guest special character devices are created that allow reading and
writing. These character devices are</source>
          <target state="translated">在客人的内部,创建了特殊的字符设备,可以进行阅读和书写。这些字符设备是</target>
        </trans-unit>
        <trans-unit id="3809cb4b2b9cf66bb0ae873ebb168a6cbdcf43f8" translate="yes" xml:space="preserve">
          <source>Install the &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;negotiator-guest&lt;/a&gt; package on your guest(s):</source>
          <target state="translated">在&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;访客&lt;/a&gt;上安装negotiator-guest软件包：</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="f611d35cde9cbcd6de1165cd826650cdbfc9e2d9" translate="yes" xml:space="preserve">
          <source>List the commands that the guest exposes to its host.</source>
          <target state="translated">列出客人向其主机公开的命令。</target>
        </trans-unit>
        <trans-unit id="0eb0a1ed3a357727445a7085cf6e496bd9b96031" translate="yes" xml:space="preserve">
          <source>List the commands that the host exposes to its guests.</source>
          <target state="translated">列出主机向其客人公开的命令。</target>
        </trans-unit>
        <trans-unit id="7db7aef4c3cf19f6cb78eb0d4a5e24f992bf57f7" translate="yes" xml:space="preserve">
          <source>List the names of the guests that have the appropriate channel.</source>
          <target state="translated">列出拥有相应频道的客人姓名。</target>
        </trans-unit>
        <trans-unit id="a9b6c6823d17695fd5b47479a29d478299cdf3ca" translate="yes" xml:space="preserve">
          <source>Note that just rebooting the guest will not add the new virtual devices, you
have to actually stop the guest and then start it again!</source>
          <target state="translated">需要注意的是,仅仅重启客体是不会添加新的虚拟设备的,你必须真正停止客体,然后再启动它!</target>
        </trans-unit>
        <trans-unit id="41ebc01f38a4b94ffaa8571ac5aa168137c6e58a" translate="yes" xml:space="preserve">
          <source>Note that my project in no way tries to replace the official QEMU guest agent.
For example I have no intention of implementing freezing and thawing of file
systems because the official agent already does that just fine :-). In other
words the two projects share a lot of ideas but have very different goals.</source>
          <target state="translated">请注意,我的项目绝不是要取代官方的QEMU guest agent。例如,我不打算实现文件系统的冻结和解冻,因为官方代理已经做得很好了:-)。换句话说,这两个项目有很多共同的想法,但有非常不同的目标。</target>
        </trans-unit>
        <trans-unit id="16e687f53071e1fc35389d8dcc94b4c2e4284a7d" translate="yes" xml:space="preserve">
          <source>Now go and create some scripts in</source>
          <target state="translated">现在去创建一些脚本,在</target>
        </trans-unit>
        <trans-unit id="df1bbc05710b5421c42d5c59b5aa54db1777ee68" translate="yes" xml:space="preserve">
          <source>Now you need to shut down the guest and then start it again:</source>
          <target state="translated">现在你需要关闭客人,然后再启动它。</target>
        </trans-unit>
        <trans-unit id="ca5eb643b45278d40c47c504f71930890f0f6c85" translate="yes" xml:space="preserve">
          <source>On KVM/QEMU guests</source>
          <target state="translated">在KVM/QEMU客人上</target>
        </trans-unit>
        <trans-unit id="ebddc6adcd351e6e613d336e26f10fee50291fcd" translate="yes" xml:space="preserve">
          <source>On KVM/QEMU hosts</source>
          <target state="translated">在KVM/QEMU主机上</target>
        </trans-unit>
        <trans-unit id="c930b1ffd32a61c33d63883da51e496e6fecb554" translate="yes" xml:space="preserve">
          <source>On the host UNIX domain sockets are created that are connected to the
character devices inside the guest. On Ubuntu Linux KVM/QEMU hosts,
these UNIX domain sockets are created in the directory</source>
          <target state="translated">在主机上会创建UNIX域套接字,连接到客人内部的字符设备。在Ubuntu Linux KVM/QEMU主机上,这些UNIX域套接字被创建在目录</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">选项</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">替换</target>
        </trans-unit>
        <trans-unit id="02516f9bd6015bc15a4af72e12d9492cd450103e" translate="yes" xml:space="preserve">
          <source>Scriptable KVM/QEMU guest agent (common functionality)</source>
          <target state="translated">可脚本化的KVM/QEMU客座代理(通用功能)</target>
        </trans-unit>
        <trans-unit id="c06dc468629c67697047e70049ee2460739dd64c" translate="yes" xml:space="preserve">
          <source>Set the number of seconds before a remote call without a response times
out. A value of zero disables the timeout (in this case the command can
hang indefinitely). The default is 10 seconds.</source>
          <target state="translated">设置没有响应的远程呼叫超时前的秒数。值为0则禁用超时(在这种情况下,命令可以无限期地挂起)。默认值为10秒。</target>
        </trans-unit>
        <trans-unit id="580ec778c80ff9d26566506ab696381af3c1d907" translate="yes" xml:space="preserve">
          <source>Show this message and exit.</source>
          <target state="translated">显示此信息并退出。</target>
        </trans-unit>
        <trans-unit id="343a50b82557de3e98bcaea6e9a157444c4ab04c" translate="yes" xml:space="preserve">
          <source>Some points to consider:</source>
          <target state="translated">一些需要考虑的问题:</target>
        </trans-unit>
        <trans-unit id="3bccaad880e45ab91a8850238a4f57ba71cb04ad" translate="yes" xml:space="preserve">
          <source>Start the guest daemon. When using this command line option the
&amp;ldquo;negotiator-guest&amp;rdquo; program never returns (unless an unexpected error
condition occurs).</source>
          <target state="translated">启动来宾守护程序。使用此命令行选项时，&amp;ldquo; negotiator-guest&amp;rdquo;程序将永不返回（除非发生意外的错误情况）。</target>
        </trans-unit>
        <trans-unit id="17876854afd493fe3c3c336f77405450bcab527d" translate="yes" xml:space="preserve">
          <source>Start the host daemon that answers real time requests from guests.</source>
          <target state="translated">启动主机守护程序,回答客人的实时请求。</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">状况</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">De</target>
        </trans-unit>
        <trans-unit id="8e9d45953f1c0e815a16f9eb3124244e86f6c4ef" translate="yes" xml:space="preserve">
          <source>The Negotiator project does what I expect from it: realtime bidirectional
communication between Linux based KVM/QEMU hosts and guests.</source>
          <target state="translated">Negotiator项目做到了我所期望的:基于Linux的KVM/QEMU主机和客人之间的实时双向通信。</target>
        </trans-unit>
        <trans-unit id="83fcc7fcda5b285f87c326bcad9f9bcb18f66372" translate="yes" xml:space="preserve">
          <source>The Python packages &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;negotiator-host&lt;/a&gt;, &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;negotiator-guest&lt;/a&gt; and &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-common&quot;&gt;negotiator-common&lt;/a&gt;
together implement a scriptable &lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine&quot;&gt;KVM&lt;/a&gt;/&lt;a href=&quot;https://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; guest agent infrastructure in
Python. This infrastructure supports realtime bidirectional communication
between &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux&quot;&gt;Linux&lt;/a&gt; hosts and guests which allows the hosts and guests to invoke
user defined commands on &amp;lsquo;the other side&amp;rsquo;.</source>
          <target state="translated">Python包&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;negotiator-host&lt;/a&gt;，&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-guest&quot;&gt;negotiator-guest&lt;/a&gt;和&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-common&quot;&gt;negotiator-common&lt;/a&gt; 共同在Python中实现了可编写脚本的&lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine&quot;&gt;KVM&lt;/a&gt; / &lt;a href=&quot;https://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;来宾代理基础结构。该基础结构支持&lt;a href=&quot;https://en.wikipedia.org/wiki/Linux&quot;&gt;Linux&lt;/a&gt;主机和来宾之间的实时双向通信，从而允许主机和来宾在&amp;ldquo;另一侧&amp;rdquo;调用用户定义的命令。</target>
        </trans-unit>
        <trans-unit id="c8a9d958cbcad24168e1651962e72d0fcb57bc8e" translate="yes" xml:space="preserve">
          <source>The QEMU project provides an &lt;a href=&quot;http://wiki.libvirt.org/page/Qemu_guest_agent&quot;&gt;official guest agent&lt;/a&gt; and this agent is very
useful to increase integration between QEMU hosts and guests. However the
official QEMU guest agent has two notable shortcomings (for me at least):</source>
          <target state="translated">QEMU项目提供了&lt;a href=&quot;http://wiki.libvirt.org/page/Qemu_guest_agent&quot;&gt;正式的来宾代理&lt;/a&gt;，该代理对于增加QEMU主机和来宾之间的集成非常有用。但是，QEMU官方客座代理有两个明显的缺点（至少对我而言）：</target>
        </trans-unit>
        <trans-unit id="3fc1f2e3128acb4d446f9052ac9f28e463578b60" translate="yes" xml:space="preserve">
          <source>The above should be done by the KVM/QEMU system packages if you ask me, but
anyway. On top of this if you are running Ubuntu with AppArmor enabled (the
default) you may need to apply the following patch:</source>
          <target state="translated">如果你问我的话,上述工作应该由KVM/QEMU系统包来完成,但无论如何。除此之外,如果你在运行Ubuntu时启用了AppArmor(默认),你可能需要应用以下补丁。</target>
        </trans-unit>
        <trans-unit id="2800d0a7c5cb217e4673401197cead49d229ecaf" translate="yes" xml:space="preserve">
          <source>The kernel module</source>
          <target state="translated">内核模块</target>
        </trans-unit>
        <trans-unit id="4e651dc5449474dd97ef6c540edb40ca90313c55" translate="yes" xml:space="preserve">
          <source>The latest version of</source>
          <target state="translated">最新版本的</target>
        </trans-unit>
        <trans-unit id="e8c4f88e0dcf9f24c87bd3441ac9dd97f0bcb9e5" translate="yes" xml:space="preserve">
          <source>The negotiator-guest program</source>
          <target state="translated">谈判代表-嘉宾方案</target>
        </trans-unit>
        <trans-unit id="7115445ea2ee3b083001c4c012ca6973928bbcaa" translate="yes" xml:space="preserve">
          <source>The negotiator-host program</source>
          <target state="translated">谈判者-东道主方案</target>
        </trans-unit>
        <trans-unit id="9326a0909f20e392859ad9866b570a10c5095e56" translate="yes" xml:space="preserve">
          <source>The official QEMU guest agent has some generic mechanisms like being able to
write files inside guests, but this is a far cry from a generic, extensible
architecture. Ideally given the host and guest&amp;rsquo;s permission we should be able
to transfer arbitrary data and execute user defined logic on both sides.</source>
          <target state="translated">正式的QEMU来宾代理具有一些通用的机制，例如能够在来宾内部写入文件，但这与通用的可扩展体系结构相去甚远。理想情况下，在得到主机和访客的许可后，我们应该能够传输任意数据并在两侧执行用户定义的逻辑。</target>
        </trans-unit>
        <trans-unit id="8cfef9a49f17fb78bf42bd0639a80d4edd0b3c18" translate="yes" xml:space="preserve">
          <source>The project doesn&amp;rsquo;t have an automated test suite, although its functionality
has been extensively tested during development and is being used in a
production environment on more than 100 virtual machines (for non-critical
tasks).</source>
          <target state="translated">该项目没有自动化测试套件，尽管其功能已在开发过程中进行了广泛测试，并且已在生产环境中的100多个虚拟机上使用（用于非关键任务）。</target>
        </trans-unit>
        <trans-unit id="daca0246b2bf86bda789705bf25e85725142e289" translate="yes" xml:space="preserve">
          <source>The project has not been peer reviewed with regards to security. My primary
use case is KVM/QEMU hosts and guests that trust each other to some extent
(think private clouds, not shared hosting :-).</source>
          <target state="translated">该项目在安全性方面还没有经过同行评审。我的主要用例是KVM/QEMU主机和客人在某种程度上相互信任(想想私有云,而不是共享主机:-)。</target>
        </trans-unit>
        <trans-unit id="9fd1ad507259f47e4a76a6ead2a65ce58cad822f" translate="yes" xml:space="preserve">
          <source>The scriptable guest agent infrastructure uses &lt;a href=&quot;http://www.linux-kvm.org/page/VMchannel_Requirements&quot;&gt;the same mechanism&lt;/a&gt; that the
official QEMU guest agent does:</source>
          <target state="translated">可编写脚本的来宾代理基础结构使用&lt;a href=&quot;http://www.linux-kvm.org/page/VMchannel_Requirements&quot;&gt;与&lt;/a&gt;官方QEMU来宾代理相同的机制：</target>
        </trans-unit>
        <trans-unit id="a0840fd47900c0d8b2ce64a212be89a7f085dfb3" translate="yes" xml:space="preserve">
          <source>The virtual channel(s) have not been correctly configured or the correct
configuration hasn&amp;rsquo;t been applied yet. Please carefully follow the
instructions in the &lt;em&gt;Getting started&lt;/em&gt; section above.</source>
          <target state="translated">虚拟通道未正确配置或尚未应用正确的配置。请仔细按照上面的&lt;em&gt;入门&lt;/em&gt;部分中的说明进行操作。</target>
        </trans-unit>
        <trans-unit id="be60dbec8141ee6092cacc7e201687558fd4f4b0" translate="yes" xml:space="preserve">
          <source>This section contains hints about what to do when things don&amp;rsquo;t work as
expected.</source>
          <target state="translated">本节包含一些提示，说明事情无法按预期进行时该怎么办。</target>
        </trans-unit>
        <trans-unit id="96d2f955c4f81c05467e0cbaaf0cfab3bd72f720" translate="yes" xml:space="preserve">
          <source>This section documents the command line interfaces of the programs running on
hosts and guests. For information on the Python API please refer to the online
documentation on &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;Read the Docs&lt;/a&gt;.</source>
          <target state="translated">本节介绍了在主机和客户机上运行的程序的命令行界面。有关Python API的信息，请参阅&amp;ldquo;&lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;阅读&lt;/a&gt;文档&amp;rdquo;上的在线文档。</target>
        </trans-unit>
        <trans-unit id="f27a0dc4aa2c3bb4dbe16bb6623bff3027267eb7" translate="yes" xml:space="preserve">
          <source>This software is licensed under the &lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">该软件已获得&lt;a href=&quot;http://en.wikipedia.org/wiki/MIT_License&quot;&gt;MIT许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="55f3e3f1e06a97818ce0ffb33865599309fb29ae" translate="yes" xml:space="preserve">
          <source>When the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204721858c578d7afb633e24fdcc63727a5999f1" translate="yes" xml:space="preserve">
          <source>Whether you want to get the official QEMU guest agent or the Negotiator project
running, you will need a working bidirectional channel. I&amp;rsquo;m testing Negotiator
on an Ubuntu 14.04 KVM/QEMU host and I needed several changes to get things
working properly:</source>
          <target state="translated">无论您是要运行正式的QEMU客户代理，还是要运行Negotiator项目，都需要一个有效的双向通道。我正在Ubuntu 14.04 KVM / QEMU主机上测试Negotiator，我需要进行一些更改才能使事情正常运行：</target>
        </trans-unit>
        <trans-unit id="983ae02300568c3bc2a932c4e983fe6a8ff03e00" translate="yes" xml:space="preserve">
          <source>Why another guest agent?</source>
          <target state="translated">为什么又是客串代理?</target>
        </trans-unit>
        <trans-unit id="033b86555fcb28d8095af6d08eeafe906a6f9ba2" translate="yes" xml:space="preserve">
          <source>and try
to execute them from the other side! Once you start writing your own
commands it&amp;rsquo;s useful to know that commands on the KVM/QEMU host side have
access to some &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/#negotiator_host.GuestChannel.prepare_environment&quot;&gt;environment variables&lt;/a&gt;.</source>
          <target state="translated">并尝试从另一侧执行它们！一旦开始编写自己的命令，了解KVM / QEMU主机端的命令可以访问某些&lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/#negotiator_host.GuestChannel.prepare_environment&quot;&gt;环境变量将&lt;/a&gt;很有用。</target>
        </trans-unit>
        <trans-unit id="db302db3b72ed6c911515b1818306e8a0b9681e2" translate="yes" xml:space="preserve">
          <source>attribute because libvirt will fill it in
automatically when it reloads the guest&amp;rsquo;s XML definition file (in step 2).</source>
          <target state="translated">属性，因为libvirt将在重新加载来宾的XML定义文件时自动填充它（在步骤2中）。</target>
        </trans-unit>
        <trans-unit id="5c6678ec80dc14208f62e95285a445ab1a6dc44e" translate="yes" xml:space="preserve">
          <source>command as a daemon. I have good
experiences with &lt;a href=&quot;http://supervisord.org/&quot;&gt;supervisord&lt;/a&gt;, here&amp;rsquo;s how to set that up:</source>
          <target state="translated">命令作为守护程序。我在&lt;a href=&quot;http://supervisord.org/&quot;&gt;主管上&lt;/a&gt;有很好的经验，这是设置方法：</target>
        </trans-unit>
        <trans-unit id="5344a7c5fd8a94d9510c0eb1fbff77c51b544a34" translate="yes" xml:space="preserve">
          <source>command. If
the module is not loaded you&amp;rsquo;ll need to install and boot to a kernel that
does have the module.</source>
          <target state="translated">命令。如果未加载该模块，则需要安装并引导至具有该模块的内核。</target>
        </trans-unit>
        <trans-unit id="25e868ca1b350451ce3cb39389b5ffd23cafe20e" translate="yes" xml:space="preserve">
          <source>is available on &lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;PyPI&lt;/a&gt; and &lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub&lt;/a&gt;. You can
find the documentation on &lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;Read The Docs&lt;/a&gt;. For bug reports please create an
issue on &lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub&lt;/a&gt;. If you have questions, suggestions, etc. feel free to send me
an e-mail at &lt;a href=&quot;mailto:peter%40peterodding.com&quot;&gt;peter@peterodding.com&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://pypi.python.org/pypi/negotiator-host&quot;&gt;PyPI&lt;/a&gt;和&lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub上可用&lt;/a&gt;。您可以在&amp;ldquo;&lt;a href=&quot;http://negotiator.readthedocs.org/en/latest/&quot;&gt;阅读&lt;/a&gt;文档&amp;rdquo;上找到文档。对于错误报告，请在&lt;a href=&quot;https://github.com/xolox/python-negotiator&quot;&gt;GitHub上&lt;/a&gt;创建一个问题。如果您有任何疑问，建议等，请随时给我发送电子邮件至&lt;a href=&quot;mailto:peter%40peterodding.com&quot;&gt;peter@peterodding.com&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e242d61cbc2b093aad9135cc8b0d93e8e4001a0" translate="yes" xml:space="preserve">
          <source>is not loaded because it is not
available in your kernel. You can check by using the</source>
          <target state="translated">没有被加载,因为它在你的内核中不可用。你可以通过使用</target>
        </trans-unit>
        <trans-unit id="dd456d0f92f028a22386d0c592292c5ac024451b" translate="yes" xml:space="preserve">
          <source>lsmod</source>
          <target state="translated">lsmod</target>
        </trans-unit>
        <trans-unit id="f7a6194fe5eb3d84df2b251dc107c2d467d7a82b" translate="yes" xml:space="preserve">
          <source>negotiator</source>
          <target state="translated">谈判者</target>
        </trans-unit>
        <trans-unit id="72f867e934d98010d53ee6627eaef9b7e527a1ff" translate="yes" xml:space="preserve">
          <source>negotiator-guest</source>
          <target state="translated">谈判嘉宾</target>
        </trans-unit>
        <trans-unit id="b33291aa12cd5bff0329b93c6d8be0b22ac52322" translate="yes" xml:space="preserve">
          <source>negotiator-guest [OPTIONS]</source>
          <target state="translated">谈判者-嘉宾[选项]</target>
        </trans-unit>
        <trans-unit id="f867e345fb4dfc7c83c7a56e92870a3adfaf73f5" translate="yes" xml:space="preserve">
          <source>negotiator-host</source>
          <target state="translated">谈判主持人</target>
        </trans-unit>
        <trans-unit id="0632c5826c138066e694eaafe419408e1c6394cf" translate="yes" xml:space="preserve">
          <source>negotiator-host [OPTIONS] GUEST_NAME</source>
          <target state="translated">谈判者-主机 [选项]GUEST_NAME</target>
        </trans-unit>
        <trans-unit id="d0f5c7d898defc1932817c11c0d2b2423317b6b8" translate="yes" xml:space="preserve">
          <source>option. Now you need to
find a way to run the</source>
          <target state="translated">选项。现在,你需要找到一种方法来执行</target>
        </trans-unit>
        <trans-unit id="d558fa883be3771fe23328b0dd48686330d3bdc1" translate="yes" xml:space="preserve">
          <source>packages and their dependencies are compatible with Python 2.7
and newer and are all pure Python. This means you don&amp;rsquo;t need a compiler
toolchain to install the</source>
          <target state="translated">软件包及其依赖项与Python 2.7及更高版本兼容，并且均为纯Python。这意味着您不需要编译器工具链即可安装</target>
        </trans-unit>
        <trans-unit id="787b65845defdfcda30752b67ef0122de3eaac92" translate="yes" xml:space="preserve">
          <source>packages. This is a design decision and
so won&amp;rsquo;t be changed.</source>
          <target state="translated">包。这是设计决定，因此不会更改。</target>
        </trans-unit>
        <trans-unit id="ee79d206fc6f8ade9c40a52dca4b43ba6537a986" translate="yes" xml:space="preserve">
          <source>path='...'</source>
          <target state="translated">path='...'</target>
        </trans-unit>
        <trans-unit id="f03d53a0e1d66b8d5d4e9538166adc4fcc891d41" translate="yes" xml:space="preserve">
          <source>program fails to detect the correct character
devices it will complain loudly and point you here. Here are some of things
I&amp;rsquo;ve run into that can cause this:</source>
          <target state="translated">程序无法检测到正确的字符设备，它将大声抱怨并将您指向此处。这是我遇到的一些可能导致此问题的原因：</target>
        </trans-unit>
        <trans-unit id="51050409c3562eeb585d7e37e99f49cfa7fa81dc" translate="yes" xml:space="preserve">
          <source>program is available. The usage
message will help you get started, try the</source>
          <target state="translated">程序是可用的。使用说明将帮助你开始使用,请尝试使用</target>
        </trans-unit>
        <trans-unit id="a56be4a67b583f1345391ed9b2315737f2e22642" translate="yes" xml:space="preserve">
          <source>section:</source>
          <target state="translated">节。</target>
        </trans-unit>
        <trans-unit id="350851c150d667d702542ad00c3438d8e4ef5daa" translate="yes" xml:space="preserve">
          <source>virsh --version</source>
          <target state="translated">virsh --version</target>
        </trans-unit>
        <trans-unit id="b3b275a5aada795be951d4eacc1a367795b48f14" translate="yes" xml:space="preserve">
          <source>virtio_console</source>
          <target state="translated">virtio_console</target>
        </trans-unit>
        <trans-unit id="e5ac45b686a695ae557ae22695a1b6c79654cc2b" translate="yes" xml:space="preserve">
          <source>with the name of your guest in both places. If you
use libvirt 1.0.6 or newer (you can check with</source>
          <target state="translated">和你的客人的名字。如果您使用的是 libvirt 1.0.6 或更新的版本 (您可以通过以下方式检查</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
