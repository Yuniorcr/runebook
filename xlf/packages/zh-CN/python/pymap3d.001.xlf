<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pymap3d/">
    <body>
      <group id="pymap3d">
        <trans-unit id="cb0d42116146306fc8bc6da397e50657059678ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;Python&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.6/tutorial/controlflow.html#unpacking-argument-lists&quot;&gt;argument unpacking&lt;/a&gt;
can be used for compact function arguments with scalars or arbitrarily
shaped N-D arrays:</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-0448/&quot;&gt;Python&lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.6/tutorial/controlflow.html#unpacking-argument-lists&quot;&gt;argument unpacking&lt;/a&gt; can be used for compact function arguments with scalars or arbitrarily shaped N-D arrays:</target>
        </trans-unit>
        <trans-unit id="6da1851de98dac8a74ec51af76aedbf74b47d89d" translate="yes" xml:space="preserve">
          <source>AER: Azimuth, Elevation, Range</source>
          <target state="translated">AER:方位角、高度、范围</target>
        </trans-unit>
        <trans-unit id="95781fd38372a294fc4507081f7f19aedb1d1bee" translate="yes" xml:space="preserve">
          <source>API docs</source>
          <target state="translated">API文档</target>
        </trans-unit>
        <trans-unit id="1e58d42bfab314be2e349e1155fcca5239776d53" translate="yes" xml:space="preserve">
          <source>Abbreviations:</source>
          <target state="translated">缩略语:</target>
        </trans-unit>
        <trans-unit id="cd1c6666474f8306f4ac1b8749fed220fb3ba1cd" translate="yes" xml:space="preserve">
          <source>Additional functions:</source>
          <target state="translated">附加功能:</target>
        </trans-unit>
        <trans-unit id="0af2c8bfda68d028fb432d4c122ceab1400fceee" translate="yes" xml:space="preserve">
          <source>As compared to &lt;a href=&quot;https://github.com/jswhit/pyproj&quot;&gt;PyProj&lt;/a&gt;:</source>
          <target state="translated">As compared to &lt;a href=&quot;https://github.com/jswhit/pyproj&quot;&gt;PyProj&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="c4fcfb527875d5214441a2c80ec80fae9297e7bb" translate="yes" xml:space="preserve">
          <source>AstroPy.Units.Quantity</source>
          <target state="translated">AstroPy.Units.Quantity</target>
        </trans-unit>
        <trans-unit id="0cd95eb246cfa4d799223d857a6180aad9d85fd0" translate="yes" xml:space="preserve">
          <source>Astronomical conversions are done using (optional) AstroPy for established accuracy</source>
          <target state="translated">天文转换使用(可选)AstroPy来完成,以达到既定的精度。</target>
        </trans-unit>
        <trans-unit id="e54cb48779fe630dff5b3e92fe670049962515e9" translate="yes" xml:space="preserve">
          <source>At this time,
&lt;a href=&quot;http://docs.astropy.org/en/stable/units/&quot;&gt;AstroPy.Units.Quantity&lt;/a&gt;
is not supported.
Let us know if this is of interest.
Impacts on performance would have to be considered before making Quantity a first-class citizen.
For now, you can workaround by passing in the &lt;code&gt;.value&lt;/code&gt; of the variable.</source>
          <target state="translated">At this time, &lt;a href=&quot;http://docs.astropy.org/en/stable/units/&quot;&gt;AstroPy.Units.Quantity&lt;/a&gt; is not supported. Let us know if this is of interest. Impacts on performance would have to be considered before making Quantity a first-class citizen. For now, you can workaround by passing in the &lt;code&gt;.value&lt;/code&gt; of the variable.</target>
        </trans-unit>
        <trans-unit id="9f43675a0e1ebb53b5b0c61e3a8967c276e045d7" translate="yes" xml:space="preserve">
          <source>Atmospheric effects neglected in all functions not invoking AstroPy.
Would need to update code to add these input parameters (just start a GitHub Issue to request).</source>
          <target state="translated">在所有不调用AstroPy的函数中忽略了大气效应。需要更新代码来添加这些输入参数(只需启动GitHub Issue来请求)。</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">注意事项</target>
        </trans-unit>
        <trans-unit id="9e3f2479d53f5a40e194c2a8e77ac587109f41a5" translate="yes" xml:space="preserve">
          <source>ECEF: Earth-centered, Earth-fixed</source>
          <target state="translated">ECEF。以地球为中心,以地球为基础</target>
        </trans-unit>
        <trans-unit id="7dcdc5a436a09090a28b9c95bdd7f63060760573" translate="yes" xml:space="preserve">
          <source>ECI: Earth-centered Inertial</source>
          <target state="translated">ECI:以地球为中心的惯性作用</target>
        </trans-unit>
        <trans-unit id="0cbe967d3d3e08a7229e5eba049ea57d7051a867" translate="yes" xml:space="preserve">
          <source>ENU: East North Up</source>
          <target state="translated">ENU:East North Up</target>
        </trans-unit>
        <trans-unit id="282b3d57ea9422d48d44765cae157e88bd427588" translate="yes" xml:space="preserve">
          <source>Example scripts are in the &lt;a href=&quot;./examples&quot;&gt;examples&lt;/a&gt; directory.</source>
          <target state="translated">Example scripts are in the &lt;a href=&quot;./examples&quot;&gt;examples&lt;/a&gt; directory.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">职能</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="f89abc0e3a4bf0c450ac4bb4bf02fc245f4468f2" translate="yes" xml:space="preserve">
          <source>Matlab, GNU Octave</source>
          <target state="translated">Matlab,GNU Octave</target>
        </trans-unit>
        <trans-unit id="e9474835b919c4a17c49bb5cbe33cd0f2c0a46c2" translate="yes" xml:space="preserve">
          <source>NED: North East Down</source>
          <target state="translated">NED:东北政区</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">笔记</target>
        </trans-unit>
        <trans-unit id="a3ab78a9a6670421971d98ec8fd33c847f44079d" translate="yes" xml:space="preserve">
          <source>One can verify Python functionality after installation by:</source>
          <target state="translated">安装后可以通过以下方式验证Python的功能。</target>
        </trans-unit>
        <trans-unit id="ef4b6d7571ba611d7a1bd590d3ac5d0da0aa8b2d" translate="yes" xml:space="preserve">
          <source>Planetary perturbations and nutation etc. not fully considered.</source>
          <target state="translated">行星扰动和坚果化等没有充分考虑。</target>
        </trans-unit>
        <trans-unit id="bd0004fc6e9bfee301aa69b7dcde9b572af11f4e" translate="yes" xml:space="preserve">
          <source>Popular mapping toolbox functions ported to Python include the
following, where the source coordinate system (before the &quot;2&quot;) is
converted to the desired coordinate system:</source>
          <target state="translated">流行的映射工具箱函数移植到Python中包括以下内容,其中源坐标系(&quot;2 &quot;之前)被转换为所需的坐标系。</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">先决条件</target>
        </trans-unit>
        <trans-unit id="85cb65f07de8dd5034525693c0810535dff3724e" translate="yes" xml:space="preserve">
          <source>Pure Python (no prerequistes beyond Python itself) 3-D geographic coordinate conversions and geodesy.
API similar to popular $1000 Matlab Mapping Toolbox routines for:</source>
          <target state="translated">纯Python (除了Python本身,没有任何先决条件)3-D地理坐标转换和大地测量。API类似于流行的1000美元的Matlab Mapping Toolbox例程,用于:</target>
        </trans-unit>
        <trans-unit id="d036c853bbb000cc70247a5a1f8336cafd3a8f1d" translate="yes" xml:space="preserve">
          <source>PyMap3D API is similar to Matlab Mapping Toolbox, while PyProj's interface is quite distinct</source>
          <target state="translated">PyMap3D API类似于Matlab Mapping Toolbox,而PyProj的界面则非常独特。</target>
        </trans-unit>
        <trans-unit id="35d80467e5fd9521e1d2b27eca1b7c39677fa012" translate="yes" xml:space="preserve">
          <source>PyMap3D does not require anything beyond pure Python for most transforms</source>
          <target state="translated">PyMap3D不需要任何纯Python以外的东西来进行大多数变换。</target>
        </trans-unit>
        <trans-unit id="69c05ebd797c10237522ed8aab467ae7ca4ea40b" translate="yes" xml:space="preserve">
          <source>PyMap3D intrinsically handles local coordinate systems such as ENU,
while PyProj ENU requires some &lt;a href=&quot;https://github.com/jswhit/pyproj/issues/105&quot;&gt;additional effort&lt;/a&gt;.</source>
          <target state="translated">PyMap3D intrinsically handles local coordinate systems such as ENU, while PyProj ENU requires some &lt;a href=&quot;https://github.com/jswhit/pyproj/issues/105&quot;&gt;additional effort&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2f08a65d2242d10146675a3ecb4bb605c5d7f3e0" translate="yes" xml:space="preserve">
          <source>PyMap3D is intended for non-interactive use on massively parallel (HPC) and embedded systems.
Includes some relevant
&lt;a href=&quot;http://www.smad.com/vallado/fortran/fortran.html&quot;&gt;Vallado algorithms&lt;/a&gt;.</source>
          <target state="translated">PyMap3D is intended for non-interactive use on massively parallel (HPC) and embedded systems. Includes some relevant &lt;a href=&quot;http://www.smad.com/vallado/fortran/fortran.html&quot;&gt;Vallado algorithms&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="031dc1b7376feb4c6c8cfe2ad025d857823a32b4" translate="yes" xml:space="preserve">
          <source>PyProj is oriented towards points on the planet surface, while PyMap3D handles points on or above the planet surface equally well, particularly important for airborne vehicles and remote sensing.</source>
          <target state="translated">PyProj面向的是星球表面的点,而PyMap3D同样可以处理星球表面或上面的点,这对机载飞行器和遥感尤为重要。</target>
        </trans-unit>
        <trans-unit id="5722a7cc255dee6868932030624da288119bcfd6" translate="yes" xml:space="preserve">
          <source>Pymap3d is compatible with Python &amp;ge; 3.5 including PyPy.
Numpy and AstroPy are optional; algorithms from Vallado and Meeus are used if AstroPy is not present.</source>
          <target state="translated">Pymap3d is compatible with Python &amp;ge; 3.5 including PyPy. Numpy and AstroPy are optional; algorithms from Vallado and Meeus are used if AstroPy is not present.</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">蟒蛇</target>
        </trans-unit>
        <trans-unit id="01cd58988b70cbfd8d3b78b2d5cfddc80d380ef5" translate="yes" xml:space="preserve">
          <source>Python 3-D coordinate conversions</source>
          <target state="translated">Python 3-D坐标转换</target>
        </trans-unit>
        <trans-unit id="c9697b0ff5405177eececba2b92d9884a5e2b707" translate="yes" xml:space="preserve">
          <source>Thanks to our &lt;a href=&quot;./contributors.md&quot;&gt;contributors&lt;/a&gt;.</source>
          <target state="translated">Thanks to our &lt;a href=&quot;./contributors.md&quot;&gt;contributors&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="679e449d49df549a4bea8f4c511d48c4d11b7499" translate="yes" xml:space="preserve">
          <source>Those needing multidimensional data with SIMD and other Numpy and/or PyPy accelerated performance can do so automatically by installing Numpy.
pymap3d seamlessly falls back to Python's math module if Numpy isn't present.
To keep the code clean, only scalar data can be used without Numpy.
As noted above, use list comprehension if you need vector data without Numpy.</source>
          <target state="translated">需要用SIMD等Numpy和/或PyPy加速性能的多维数据,可以通过安装Numpy自动完成,如果没有Numpy,pymap3d会无缝地回落到Python的数学模块。为了保持代码的干净,可以不使用Numpy,只使用标量数据。如上所述,如果不使用Numpy而需要矢量数据,请使用list comprehension。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="9a2147ee8ade3f1b5b9524709e4d1b3917dcf359" translate="yes" xml:space="preserve">
          <source>Use of pymap3d on embedded systems or other streaming data applications often deal with scalar position data.
These data are handled efficiently with the Python math stdlib module.
Vector data can be handled via list comprehension.</source>
          <target state="translated">在嵌入式系统或其他流式数据应用中使用pymap3d经常处理标量位置数据。这些数据可以通过Python数学stdlib模块进行有效处理。矢量数据可以通过list comprehension来处理。</target>
        </trans-unit>
        <trans-unit id="d8d6b3c478fb1e6da51df59928d20d277096f513" translate="yes" xml:space="preserve">
          <source>Where consistent with the definition of the functions, all arguments may
be arbitrarily shaped (scalar, N-D array).</source>
          <target state="translated">在符合函数定义的情况下,所有的参数可以是任意形状的(标量,N-D数组)。</target>
        </trans-unit>
        <trans-unit id="e7f6640479b20c10569989a84c9e51eb522e861e" translate="yes" xml:space="preserve">
          <source>array vs scalar</source>
          <target state="translated">数组与标量</target>
        </trans-unit>
        <trans-unit id="8c16fcbf9bcf9a6d2e77e8c16f45d248a126496e" translate="yes" xml:space="preserve">
          <source>geodetic latitude transforms to/from: parametric, authalic, isometric, and more in pymap3d.latitude</source>
          <target state="translated">在pymap3d.latitude中,大地测量纬度的转换:参数化、自重式、等距式等等。</target>
        </trans-unit>
        <trans-unit id="519017b187d4a7e34c312a617e959fb651a4b111" translate="yes" xml:space="preserve">
          <source>loxodrome_direct</source>
          <target state="translated">loxodrome_direct</target>
        </trans-unit>
        <trans-unit id="a0db70019744e1a4d710b26a503fd648c09edd6c" translate="yes" xml:space="preserve">
          <source>loxodrome_inverse: rhumb line distance and azimuth between ellipsoid points (lat,lon)  akin to Matlab &lt;code&gt;distance('rh', ...)&lt;/code&gt; and &lt;code&gt;azimuth('rh', ...)&lt;/code&gt;</source>
          <target state="translated">loxodrome_inverse: rhumb line distance and azimuth between ellipsoid points (lat,lon) akin to Matlab &lt;code&gt;distance('rh', ...)&lt;/code&gt; and &lt;code&gt;azimuth('rh', ...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="feb626cd8cb623630f548845e4a10f07d28b3918" translate="yes" xml:space="preserve">
          <source>modern Fortran</source>
          <target state="translated">现代Fortran</target>
        </trans-unit>
        <trans-unit id="6b90572b6a0829160e002dcb189cef436b0ca47f" translate="yes" xml:space="preserve">
          <source>or for the latest development code:</source>
          <target state="translated">或获取最新的开发代码。</target>
        </trans-unit>
        <trans-unit id="41f828b8c716a02dcb476c4841f7a4fa6427a76b" translate="yes" xml:space="preserve">
          <source>pure Python (no prereqs) coordinate conversions, following convention of several popular Matlab routines.</source>
          <target state="translated">纯Python (无先决条件)坐标转换,遵循几个流行的Matlab例程的惯例。</target>
        </trans-unit>
        <trans-unit id="663e02e9337a69711b32ba598dc0374b719ce98a" translate="yes" xml:space="preserve">
          <source>radec: right ascension, declination</source>
          <target state="translated">弧度角</target>
        </trans-unit>
        <trans-unit id="88af98ed301d04406d1c2a489646553c4fc62688" translate="yes" xml:space="preserve">
          <source>where tuple &lt;code&gt;lla&lt;/code&gt; is comprised of scalar or N-D arrays &lt;code&gt;(lat,lon,alt)&lt;/code&gt;.</source>
          <target state="translated">where tuple &lt;code&gt;lla&lt;/code&gt; is comprised of scalar or N-D arrays &lt;code&gt;(lat,lon,alt)&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
