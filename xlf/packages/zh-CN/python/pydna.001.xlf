<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pydna/">
    <body>
      <group id="pydna">
        <trans-unit id="e4dedf57a6c191d4feb31d958671f562ff0375df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://conda.pydata.org/docs/intro.html&quot;&gt;Conda&lt;/a&gt; packages are built on Codeship(Linux), TravisCI(MacOS) and AppveyorCI(Windows).
Source setuptools packages and wheels are built on Linux for all systems.
Binary setuptools packages are built for Windows and MacOSX.</source>
          <target state="translated">&lt;a href=&quot;http://conda.pydata.org/docs/intro.html&quot;&gt;Conda&lt;/a&gt;软件包基于Codeship（Linux），TravisCI（MacOS）和AppveyorCI（Windows）构建。Source setuptools软件包和工具包都在Linux上针对所有系统构建。二进制setuptools软件包是为Windows和MacOSX构建的。</target>
        </trans-unit>
        <trans-unit id="60bd4a93f4f39fd02dd5439cab75aa6f968d1a46" translate="yes" xml:space="preserve">
          <source>An Automated Protein Synthesis Pipeline with Transcriptic and Snakemake</source>
          <target state="translated">具有转录和蛇形结构的自动蛋白质合成流水线</target>
        </trans-unit>
        <trans-unit id="ffde18aaf4a9fa13847d13feb1cb289e9084a252" translate="yes" xml:space="preserve">
          <source>Anaconda is a large download (about 400 Mb) while Miniconda is about 40-50 Mb.</source>
          <target state="translated">Anaconda的下载量很大(约400Mb),而Miniconda约为40-50Mb。</target>
        </trans-unit>
        <trans-unit id="284f3e623cec9cd5d9fc3f20c3b5016a9809cdd0" translate="yes" xml:space="preserve">
          <source>As the example above shows, pydna keeps track of sticky ends.</source>
          <target state="translated">正如上面的例子所示,pydna会跟踪粘性端。</target>
        </trans-unit>
        <trans-unit id="cf26231a171ac615550bb2005ea9407d1de35c09" translate="yes" xml:space="preserve">
          <source>Automatic builds</source>
          <target state="translated">自动构建</target>
        </trans-unit>
        <trans-unit id="05431d6d0ad9643bfe34e56b473e68db4f8452b8" translate="yes" xml:space="preserve">
          <source>Automatic testing</source>
          <target state="translated">自动测试</target>
        </trans-unit>
        <trans-unit id="0f75f0cde96090baef991e914d46f0bb8cc470f2" translate="yes" xml:space="preserve">
          <source>Builds are controlled by Git tags. Tags like 1.0.2a4 are considered test builds and are uploaded to
&lt;a href=&quot;https://testpypi.python.org/pypi?:action=display&amp;amp;name=pydna&quot;&gt;testpypi&lt;/a&gt; and to Anaconda.org with a &quot;test&quot; label.
These are only meant to test the finished packages and are not meant to be used.</source>
          <target state="translated">构建受Git标签控制。像1.0.2a4这样的标签被认为是测试版本，并带有&amp;ldquo;测试&amp;rdquo;标签上传到&lt;a href=&quot;https://testpypi.python.org/pypi?:action=display&amp;amp;name=pydna&quot;&gt;testpypi&lt;/a&gt;和Anaconda.org。这些仅用于测试成品包装，并不用于使用。</target>
        </trans-unit>
        <trans-unit id="5fc562829f5833a95e2760236cafbb2d0f713bd5" translate="yes" xml:space="preserve">
          <source>By default python and pip are not on the PATH. You can re-install Python and select this option, or give
the full path for pip. Try something like this, depending on where your copy of Python is installed:</source>
          <target state="translated">默认情况下,python和pip不在PATH上,您可以重新安装Python并选择这个选项,或者给出pip的完整路径。您可以重新安装 Python 并选择这个选项,或者给 pip 提供完整的路径。根据您的 Python 副本的安装位置,试试这样的方法。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">变更日志</target>
        </trans-unit>
        <trans-unit id="07ac731ff92e3d13686befd21930f283b8424c3b" translate="yes" xml:space="preserve">
          <source>Conda package</source>
          <target state="translated">康达包</target>
        </trans-unit>
        <trans-unit id="b472aa6af8385bf08cdab87056b822b2f9fb1bf9" translate="yes" xml:space="preserve">
          <source>Conda package for platorms</source>
          <target state="translated">绘图仪的Conda包</target>
        </trans-unit>
        <trans-unit id="df2682027ad6a491f7d531e86447c1132ea5d2f3" translate="yes" xml:space="preserve">
          <source>Conda packages</source>
          <target state="translated">康达包</target>
        </trans-unit>
        <trans-unit id="1657c6797eb3a3c5d0a1c937dc4c60ea20ca1838" translate="yes" xml:space="preserve">
          <source>Contains classes and code for representing double stranded DNA and functions for simulating homologous recombination between DNA molecules.</source>
          <target state="translated">包含表示双链DNA的类和代码以及模拟DNA分子之间同源重组的功能。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="200b827de6bd73178a536567c0ee8c6ca42301f4" translate="yes" xml:space="preserve">
          <source>Documentation is built using &lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; from &lt;a href=&quot;https://www.python.org/dev/peps/pep-0257/&quot;&gt;docstrings&lt;/a&gt;
in the code and displayed at readthedocs</source>
          <target state="translated">使用&lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;从代码中的&lt;a href=&quot;https://www.python.org/dev/peps/pep-0257/&quot;&gt;文档字符串&lt;/a&gt;构建文档，并在readthedocs中显示</target>
        </trans-unit>
        <trans-unit id="6304fa473b87aea051c3e7d6dcec5fc22dd07f31" translate="yes" xml:space="preserve">
          <source>Feedback is very welcome!</source>
          <target state="translated">欢迎大家的反馈</target>
        </trans-unit>
        <trans-unit id="b6251fd98ed425317d9d165bb7e8bb2df36a8f6c" translate="yes" xml:space="preserve">
          <source>Gel electrophoresis of DNA fragments can be simulated using the included gel module
by &lt;a href=&quot;https://github.com/bruno2git&quot;&gt;Bruno Silva&lt;/a&gt;:</source>
          <target state="translated">可以使用&lt;a href=&quot;https://github.com/bruno2git&quot;&gt;Bruno Silva&lt;/a&gt;附带的凝胶模块模拟DNA片段的凝胶电泳：</target>
        </trans-unit>
        <trans-unit id="0a036517b9b9ab83a1c4a3bc1c8b5d06a18e0bf3" translate="yes" xml:space="preserve">
          <source>Gel electrophoresis of DNA with generation of gel images</source>
          <target state="translated">DNA的凝胶电泳与凝胶图像的生成</target>
        </trans-unit>
        <trans-unit id="8decdae2ea100a4438c1a1e43e68eecfa04d6032" translate="yes" xml:space="preserve">
          <source>Gibson assembly</source>
          <target state="translated">吉布森装配</target>
        </trans-unit>
        <trans-unit id="10710137a9d37ef729b7308d303d5d643a78db14" translate="yes" xml:space="preserve">
          <source>Golden gate assembly</source>
          <target state="translated">金门组件</target>
        </trans-unit>
        <trans-unit id="a2365ed0d9fe0dc7485916af805875e780996c3c" translate="yes" xml:space="preserve">
          <source>Homologous recombination</source>
          <target state="translated">同源重组</target>
        </trans-unit>
        <trans-unit id="9dc23a2aba1d3f7c07ebc7fd97e86ba7bb01c814" translate="yes" xml:space="preserve">
          <source>If the modules listed below are installed, gel simulation functionality is available.</source>
          <target state="translated">如果安装了下列模块,就可以使用凝胶模拟功能。</target>
        </trans-unit>
        <trans-unit id="1e550ad7dc2a8cf91092b7cf206d1986f59e5dc6" translate="yes" xml:space="preserve">
          <source>If you install from source, you need to install all dependencies separately (listed above).
Download one of the source installers from the pypi site or from Github and extract the file.
Open the pydna source code directory (containing the setup.py file) in
terminal and type:</source>
          <target state="translated">如果你从源码安装,你需要分别安装所有的依赖关系(上面列出)。从pypi网站或Github下载一个源码安装包并解压文件。在终端打开pydna源码目录(包含setup.py文件),然后输入。</target>
        </trans-unit>
        <trans-unit id="f1b59071822012b8f8f9990eb707c0c33c15b7fe" translate="yes" xml:space="preserve">
          <source>Installation from Source</source>
          <target state="translated">从源头安装</target>
        </trans-unit>
        <trans-unit id="96005d39fd9ae02ac945aa03c40cabf5f9835b8d" translate="yes" xml:space="preserve">
          <source>Installation using conda on Anaconda</source>
          <target state="translated">在Anaconda上使用conda安装</target>
        </trans-unit>
        <trans-unit id="83531938140c874364023dfd26cfc59706829b8f" translate="yes" xml:space="preserve">
          <source>Installation using pip</source>
          <target state="translated">使用管道安装</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">问题</target>
        </trans-unit>
        <trans-unit id="0288f6e4f1cb4cf6772cfc2659e99cad0660269c" translate="yes" xml:space="preserve">
          <source>Ligation</source>
          <target state="translated">结扎</target>
        </trans-unit>
        <trans-unit id="ed3d59c7e43d6bb67e950da4405846f2ac54e45f" translate="yes" xml:space="preserve">
          <source>Linux:</source>
          <target state="translated">Linux的。</target>
        </trans-unit>
        <trans-unit id="6c8a6d4992ad2f89e5ab046beaf0cbf00314fe1c" translate="yes" xml:space="preserve">
          <source>Look at an example notebook with a gel simulation &lt;a href=&quot;http://nbviewer.jupyter.org/github/BjornFJohansson/pydna/blob/release/scripts/gel_inline_ex.ipynb&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://nbviewer.jupyter.org/github/BjornFJohansson/pydna/blob/release/scripts/gel_inline_ex.ipynb&quot;&gt;这里&lt;/a&gt;看一个带有凝胶模拟的示例笔记本。</target>
        </trans-unit>
        <trans-unit id="f9f6169f5630c9b188ea96a4ee4852fb1302544a" translate="yes" xml:space="preserve">
          <source>Look at some assembly strategies made in the Jupyter notebook
format &lt;a href=&quot;http://nbviewer.ipython.org/github/BjornFJohansson/ypk-xylose-pathways/blob/release/index.ipynb&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://nbviewer.ipython.org/github/BjornFJohansson/ypk-xylose-pathways/blob/release/index.ipynb&quot;&gt;这里查看&lt;/a&gt;以Jupyter笔记本格式制定的一些组装策略。</target>
        </trans-unit>
        <trans-unit id="61f7ad8e8e3344a116ee09728089aeae96e61d93" translate="yes" xml:space="preserve">
          <source>Minimal installation requirements</source>
          <target state="translated">最小的安装要求</target>
        </trans-unit>
        <trans-unit id="53facde6c01bba228040957f3d8bc920b35a87ec" translate="yes" xml:space="preserve">
          <source>Most pydna functionality is implemented as methods for the double stranded DNA sequence record
classes Dseq and Dseqrecord, which are subclasses of the &lt;a href=&quot;http://biopython.org/wiki/Main_Page&quot;&gt;Biopython&lt;/a&gt;&lt;a href=&quot;http://biopython.org/wiki/Seq&quot;&gt;Seq&lt;/a&gt; and &lt;a href=&quot;http://biopython.org/wiki/SeqRecord&quot;&gt;SeqRecord&lt;/a&gt; classes.</source>
          <target state="translated">大多数pydna功能都作为双链DNA序列记录类Dseq和Dseqrecord的方法实现，这是&lt;a href=&quot;http://biopython.org/wiki/Main_Page&quot;&gt;Biopython &lt;/a&gt;&lt;a href=&quot;http://biopython.org/wiki/Seq&quot;&gt;Seq&lt;/a&gt;和&lt;a href=&quot;http://biopython.org/wiki/SeqRecord&quot;&gt;SeqRecord&lt;/a&gt;类的子类。</target>
        </trans-unit>
        <trans-unit id="eab63605f993585fb089aebe33399644a274c9c1" translate="yes" xml:space="preserve">
          <source>Notably, homologous recombination and Gibson assembly between linear DNA fragments
can be easily simulated without any additional information besides the primary sequence of the fragments.</source>
          <target state="translated">值得注意的是,线性DNA片段之间的同源重组和吉布森组装可以很容易地模拟,除了片段的主序列外,没有任何额外的信息。</target>
        </trans-unit>
        <trans-unit id="8f0489a8b1664e5fd860dae22cfa7e3ae2f63855" translate="yes" xml:space="preserve">
          <source>OSX-64 using TravisCI</source>
          <target state="translated">OSX-64使用TravisCI</target>
        </trans-unit>
        <trans-unit id="69b103e9dfab7b96d33062c491bdacb4935b8122" translate="yes" xml:space="preserve">
          <source>Once Anaconda (or Miniconda) is installed, the conda package manager can be used to install pydna.
Pydna and its dependencies are available from the &lt;a href=&quot;https://anaconda.org/bjornfjohansson&quot;&gt;BjornFJohansson&lt;/a&gt; package channel at
&lt;a href=&quot;https://anaconda.org&quot;&gt;Anaconda.org&lt;/a&gt;.</source>
          <target state="translated">一旦安装了Anaconda（或Miniconda），便可以使用conda软件包管理器来安装pydna。Pydna及其依赖项可从&lt;a href=&quot;https://anaconda.org&quot;&gt;Anaconda.org&lt;/a&gt;的&lt;a href=&quot;https://anaconda.org/bjornfjohansson&quot;&gt;BjornFJohansson&lt;/a&gt;软件包频道获得。</target>
        </trans-unit>
        <trans-unit id="7ede46f1d468badd1beb7b9bb4b0d1f416366314" translate="yes" xml:space="preserve">
          <source>Optional Requirements</source>
          <target state="translated">可选要求</target>
        </trans-unit>
        <trans-unit id="001ced4b23013f543bbc6e91f84243559f5f3f84" translate="yes" xml:space="preserve">
          <source>PCR</source>
          <target state="translated">PCR</target>
        </trans-unit>
        <trans-unit id="7aa64cd2b58a1b4f7bbe7ba85ca8d7f5c693ceef" translate="yes" xml:space="preserve">
          <source>Pip installs the minimal installation requirements automatically, but not the optional requirements (see below).
This will probably not work directly on windows, as biopython is not directly installable.</source>
          <target state="translated">Pip 会自动安装最低限度的安装要求,但不会安装可选的要求(见下文)。这可能无法直接在windows上工作,因为biopython是无法直接安装的。</target>
        </trans-unit>
        <trans-unit id="88c6ae62c74bbbef7f4e319618b9f974e01b0fe8" translate="yes" xml:space="preserve">
          <source>Pip is included in recent Python versions.</source>
          <target state="translated">在最近的Python版本中包含了Pip。</target>
        </trans-unit>
        <trans-unit id="2d0c5611b9f3ff8bc97bad8783cec5f8640d02b4" translate="yes" xml:space="preserve">
          <source>Planning genetic constructs with many parts and assembly steps, such as recombinant
metabolic pathways are often difficult to properly document.</source>
          <target state="translated">规划具有许多部件和组装步骤的遗传构建,如重组代谢途径往往难以正确记录。</target>
        </trans-unit>
        <trans-unit id="159e69175a9a90699ff1384d4519f09be072196d" translate="yes" xml:space="preserve">
          <source>Please post a message in the &lt;a href=&quot;https://groups.google.com/d/forum/pydna&quot;&gt;google group&lt;/a&gt;
for pydna if you have problems, questions or comments.</source>
          <target state="translated">如果您有任何问题，疑问或意见，请在pydna的&lt;a href=&quot;https://groups.google.com/d/forum/pydna&quot;&gt;Google论坛中&lt;/a&gt;发布消息。</target>
        </trans-unit>
        <trans-unit id="d3691cc6b897d0278b57039a98ca0a2062e993c7" translate="yes" xml:space="preserve">
          <source>Please reference the above paper when using pydna.</source>
          <target state="translated">使用pydna时请参考上述论文。</target>
        </trans-unit>
        <trans-unit id="328b4085b8bce2b0b8c7d7001d8778435be434c4" translate="yes" xml:space="preserve">
          <source>Primer design</source>
          <target state="translated">基础设计</target>
        </trans-unit>
        <trans-unit id="b09f3eaa826603bf85a3d23f695e06d9aa006be3" translate="yes" xml:space="preserve">
          <source>Pydna can automate the simulation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Subcloning&quot;&gt;sub cloning&lt;/a&gt; experiments using
python. This is helpful to generate examples for teaching purposes.</source>
          <target state="translated">Pydna可以自动模拟&lt;a href=&quot;http://en.wikipedia.org/wiki/Subcloning&quot;&gt;子克隆&lt;/a&gt;使用python实验。这有助于生成用于教学目的的示例。</target>
        </trans-unit>
        <trans-unit id="6013eb1dbd90ffc77373c739166c9d474b1c2605" translate="yes" xml:space="preserve">
          <source>Pydna can be very compact. The nine lines of Python below, simulates the construction of a recombinant plasmid.
DNA sequences are downloaded from Genbank by accession numbers that are guaranteed to be stable over time.</source>
          <target state="translated">Pydna可以非常紧凑。下面的九行Python,模拟了一个重组质粒的构建。DNA序列是从Genbank下载的,按加入号,保证长期稳定。</target>
        </trans-unit>
        <trans-unit id="f9112e356c099ff4f95056da2818ac6a48f9777d" translate="yes" xml:space="preserve">
          <source>Pydna can formalize planning and sharing of cloning strategies and is especially useful for complex or combinatorial
DNA molecule constructions.</source>
          <target state="translated">Pydna可以将克隆策略的规划和共享形式化,对于复杂的或组合的DNA分子构建特别有用。</target>
        </trans-unit>
        <trans-unit id="5081a419bd99073c01e0508e3ed2e4f60cfd0b8c" translate="yes" xml:space="preserve">
          <source>Pydna has been designed to be used from the Jupyter notebook. If &lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt;
and &lt;a href=&quot;http://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt; are installed, importing ipython notebooks as modules among are
supported among other things.</source>
          <target state="translated">Pydna设计用于Jupyter笔记本。如果安装了&lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt;和&lt;a href=&quot;http://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt;，则除其他功能外，还支持将ipython笔记本作为模块导入。</target>
        </trans-unit>
        <trans-unit id="2ab4ed6b2af28bee44f7465901e7c51409ab00f8" translate="yes" xml:space="preserve">
          <source>Pydna is currently developed on and for Python 3.6 or 3.7. Pydna versions before 1.0.0 were compatible with python 2.7 only.
The list below is the minimal requirements for installing pydna. Biopython has c-extensions, but the other modules are pure python.</source>
          <target state="translated">Pydna目前是基于Python 3.6或3.7开发的。Pydna 1.0.0之前的版本仅与python 2.7兼容。下面的列表是安装pydna的最低要求。Biopython有c-extensions,但其他模块是纯python的。</target>
        </trans-unit>
        <trans-unit id="f1e1f1b561f45423f7297b1e7333ae74c9c01910" translate="yes" xml:space="preserve">
          <source>Pydna is developed on &lt;a href=&quot;https://github.com/BjornFJohansson/pydna&quot;&gt;Github&lt;/a&gt;.</source>
          <target state="translated">Pydna是在&lt;a href=&quot;https://github.com/BjornFJohansson/pydna&quot;&gt;Github&lt;/a&gt;上开发的。</target>
        </trans-unit>
        <trans-unit id="5aabc52f80335747ec5b1f1af460be070633811e" translate="yes" xml:space="preserve">
          <source>Pydna provides simulation of:</source>
          <target state="translated">Pydna提供的模拟:</target>
        </trans-unit>
        <trans-unit id="7383eda27c9459b26e8381f1b3820d933aec55a5" translate="yes" xml:space="preserve">
          <source>Python 3.6 or 3.7</source>
          <target state="translated">Python 3.6或3.7</target>
        </trans-unit>
        <trans-unit id="f138830c087f25cfd12fb3c0ffb8bda7baccaad6" translate="yes" xml:space="preserve">
          <source>Pyviko: an automated Python tool to design gene knockouts in complex viruses with overlapping genes</source>
          <target state="translated">Pyviko:一个自动化的Python工具,用于设计具有重叠基因的复杂病毒的基因敲除。</target>
        </trans-unit>
        <trans-unit id="ec9336bcd3eb820377d33fde1c6e5b65e96d9e9b" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;http://pydna.readthedocs.io/index.html&quot;&gt;documentation&lt;/a&gt; or the &lt;a href=&quot;https://www.dropbox.com/sh/4re9a0wk03m95z4/AABpu4zwq4IuKUvK0Iy9Io0Fa?dl=0&quot;&gt;cookbook&lt;/a&gt; with example files
for further information.</source>
          <target state="translated">阅读&lt;a href=&quot;http://pydna.readthedocs.io/index.html&quot;&gt;文档&lt;/a&gt;或带有示例文件的&lt;a href=&quot;https://www.dropbox.com/sh/4re9a0wk03m95z4/AABpu4zwq4IuKUvK0Iy9Io0Fa?dl=0&quot;&gt;食谱&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="f5583f316f1e3be2f6991d05395710ca3ad8de99" translate="yes" xml:space="preserve">
          <source>Requirements for analyzing code coverage</source>
          <target state="translated">分析代码覆盖率的要求</target>
        </trans-unit>
        <trans-unit id="b15949caeb7c3008aa078b763891303b5078446d" translate="yes" xml:space="preserve">
          <source>Requirements for running tests</source>
          <target state="translated">运行测试的要求</target>
        </trans-unit>
        <trans-unit id="8285aafec4d3c6eaa7c8989195d3d210ce48792d" translate="yes" xml:space="preserve">
          <source>Restriction digestion</source>
          <target state="translated">限制性消化</target>
        </trans-unit>
        <trans-unit id="2ba0b43e460698a49fdf9b523b3496cd76acf5c3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;docs/CHANGELOG.md&quot;&gt;change log&lt;/a&gt; for recent changes.</source>
          <target state="translated">有关最新更改，请参见&lt;a href=&quot;docs/CHANGELOG.md&quot;&gt;更改日志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfd811a11da08b691818d1397e5ad5ffd55f38ff" translate="yes" xml:space="preserve">
          <source>See the badges at the top of this page.</source>
          <target state="translated">请看本页顶部的徽章。</target>
        </trans-unit>
        <trans-unit id="03f004c240ef0d3c72c976606d9c666fb03b6c56" translate="yes" xml:space="preserve">
          <source>Setuptools package</source>
          <target state="translated">设置工具包</target>
        </trans-unit>
        <trans-unit id="66d08fc7b30d190413e0ca8eaac758e7ee9b423a" translate="yes" xml:space="preserve">
          <source>Setuptools packages</source>
          <target state="translated">设置工具包</target>
        </trans-unit>
        <trans-unit id="cb2cde9860819e645714e5902ea20dfa6c78f38b" translate="yes" xml:space="preserve">
          <source>Software license</source>
          <target state="translated">软件许可证</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">源代码</target>
        </trans-unit>
        <trans-unit id="adb03812b4ef51b44dcb01437556b7f04f0cd155" translate="yes" xml:space="preserve">
          <source>Stars</source>
          <target state="translated">明星</target>
        </trans-unit>
        <trans-unit id="7fc68fa0b32562889163e35d2be825b421a46a18" translate="yes" xml:space="preserve">
          <source>Tags like 1.0.3 are considered final builds and are built and uploaded to &lt;a href=&quot;https://anaconda.org/BjornFJohansson/pydna&quot;&gt;Anaconda.org&lt;/a&gt; under the &quot;main&quot; label
and to the regular &lt;a href=&quot;https://pypi.python.org/pypi/pydna&quot;&gt;pypi&lt;/a&gt; server.</source>
          <target state="translated">像1.0.3这样的标签被认为是最终版本，并在&amp;ldquo;主&amp;rdquo;标签下构建并上传到&lt;a href=&quot;https://anaconda.org/BjornFJohansson/pydna&quot;&gt;Anaconda.org&lt;/a&gt;和常规&lt;a href=&quot;https://pypi.python.org/pypi/pydna&quot;&gt;pypi&lt;/a&gt;服务器。</target>
        </trans-unit>
        <trans-unit id="d35f54761ae8832b51b612ab2a6181c5179b6f37" translate="yes" xml:space="preserve">
          <source>Test and build on  MacOSX</source>
          <target state="translated">在MacOSX上测试和构建</target>
        </trans-unit>
        <trans-unit id="4b74444adb1b8eedf8c68b9cf2e5d7cdfc4637a8" translate="yes" xml:space="preserve">
          <source>Test and build on  Windows</source>
          <target state="translated">在Windows上测试和构建</target>
        </trans-unit>
        <trans-unit id="8ef4681802c1859e0ebe1959f0e98ee359e9b591" translate="yes" xml:space="preserve">
          <source>Test and build on Linux</source>
          <target state="translated">在Linux上测试和构建</target>
        </trans-unit>
        <trans-unit id="a0b0d520e3181fa7765d42a80050b97cb70dbe30" translate="yes" xml:space="preserve">
          <source>Test coverage</source>
          <target state="translated">测试范围</target>
        </trans-unit>
        <trans-unit id="ad30012f571bc6b8231ed8a21492aabfb5cec874" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;www.numpy.org&quot;&gt;numpy&lt;/a&gt;&lt;a href=&quot;https://github.com/numpy/numpy/blob/release/doc/HOWTO_DOCUMENT.rst.txt&quot;&gt;docstring format&lt;/a&gt; is used.</source>
          <target state="translated">使用&lt;a href=&quot;www.numpy.org&quot;&gt;numpy &lt;/a&gt;&lt;a href=&quot;https://github.com/numpy/numpy/blob/release/doc/HOWTO_DOCUMENT.rst.txt&quot;&gt;docstring格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7d2bebcf786d76888aa523abdff34df9f5b71bc" translate="yes" xml:space="preserve">
          <source>The Pydna python package provide a human-readable formal description of cloning and assembly
strategies in Python which also allows for simulation and verification of cloning strategies.
Pydna can be though of as executable documentation for molecular biology.</source>
          <target state="translated">Pydna python包提供了一个人类可读的Python中克隆和组装策略的形式化描述,它还允许对克隆策略进行模拟和验证。Pydna可以看作是分子生物学的可执行文档。</target>
        </trans-unit>
        <trans-unit id="2526bd262093baca179d5dd5b1ea618be297c5dc" translate="yes" xml:space="preserve">
          <source>The absolutely best way of installing and using pydna is to use the
free &lt;a href=&quot;https://store.continuum.io/cshop/anaconda&quot;&gt;Anaconda&lt;/a&gt; or &lt;a href=&quot;http://conda.pydata.org/miniconda.html&quot;&gt;Miniconda&lt;/a&gt; python distributions.</source>
          <target state="translated">安装和使用pydna的绝对最佳方法是使用免费的&lt;a href=&quot;https://store.continuum.io/cshop/anaconda&quot;&gt;Anaconda&lt;/a&gt;或&lt;a href=&quot;http://conda.pydata.org/miniconda.html&quot;&gt;Miniconda&lt;/a&gt; python发行版。</target>
        </trans-unit>
        <trans-unit id="c1cca727ce625026cfc9174b13cf3f10bc04b6b6" translate="yes" xml:space="preserve">
          <source>The first step is to add the channel by typing the command below followed by return:</source>
          <target state="translated">第一步是通过键入下面的命令添加通道,然后回车。</target>
        </trans-unit>
        <trans-unit id="626569171a7ff0fdbc4277fccf72cdb57752cec9" translate="yes" xml:space="preserve">
          <source>The pydna conda package installs the optional requirements listed above as well as:</source>
          <target state="translated">pydna conda包安装了上面列出的可选需求以及。</target>
        </trans-unit>
        <trans-unit id="cf312a3078b8e34ff13075a9199554c268224535" translate="yes" xml:space="preserve">
          <source>The second best way of installing pydna is with pip, the
officially &lt;a href=&quot;http://python-packaging-user-guide.readthedocs.org/en/latest&quot;&gt;recommended&lt;/a&gt; tool.</source>
          <target state="translated">安装pydna的第二个最佳方法是使用pip，这是官方&lt;a href=&quot;http://python-packaging-user-guide.readthedocs.org/en/latest&quot;&gt;推荐的&lt;/a&gt;工具。</target>
        </trans-unit>
        <trans-unit id="c4d131440ae23c0962cbb908aa56b8cfbedc2ee2" translate="yes" xml:space="preserve">
          <source>The test suit is run automatically after each commit on:</source>
          <target state="translated">每次提交后,测试服会自动运行在。</target>
        </trans-unit>
        <trans-unit id="316ded64af1215d5f23d913bed69eefa537d99d7" translate="yes" xml:space="preserve">
          <source>Then pydna can be installed by typing the command below followed by return:</source>
          <target state="translated">然后,可以通过输入下面的命令来安装pydna,后面是回车。</target>
        </trans-unit>
        <trans-unit id="63e6075853bf04d9cc85991672cea7148550fe2f" translate="yes" xml:space="preserve">
          <source>There is an open access paper in BMC Bioinformatics describing pydna:</source>
          <target state="translated">在BMC生物信息学上有一篇开放存取的论文,描述了pydna。</target>
        </trans-unit>
        <trans-unit id="8d0970d7db20f2c34cd9c46438404b2cc4575c76" translate="yes" xml:space="preserve">
          <source>These classes make cut and paste cloning and PCR very simple:</source>
          <target state="translated">这些类使剪切和粘贴克隆和PCR非常简单。</target>
        </trans-unit>
        <trans-unit id="1ddaafa08b353a368c576a0dbb7ba83c184e4cab" translate="yes" xml:space="preserve">
          <source>This works on Windows, MacOSX and Linux, and installs all necessary and optional dependencies automatically (see below).</source>
          <target state="translated">它适用于Windows、MacOSX和Linux,并自动安装所有必要和可选的依赖关系(见下文)。</target>
        </trans-unit>
        <trans-unit id="fc7d7fbab3b077da3f939832f96934743fb4eb8e" translate="yes" xml:space="preserve">
          <source>Ubuntu 14.04 using Codeship</source>
          <target state="translated">Ubuntu 14.04使用Codeship</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="0ebd44a91616cafe29bc69749da33f3342b3d45c" translate="yes" xml:space="preserve">
          <source>Virtually any sub-cloning experiment can be described in pydna, and its execution yield
the sequence of the of intermediate and final resulting DNA molecule(s).
A cloning strategy expressed in pydna is &lt;em&gt;complete&lt;/em&gt;, &lt;em&gt;unambiguous&lt;/em&gt; and can be made &lt;em&gt;stable&lt;/em&gt;.
Pydna has been designed to be understandable for biologists with only some basic understanding of Python.</source>
          <target state="translated">几乎任何亚克隆实验都可以在pydna中进行描述，其执行产生了中间DNA序列和最终DNA分子的序列。在pydna中表达的克隆策略是&lt;em&gt;完整的&lt;/em&gt;，&lt;em&gt;明确的&lt;/em&gt;并且可以使其&lt;em&gt;稳定&lt;/em&gt;。Pydna的设计被生物学家理解，仅对Python有一些基本了解。</target>
        </trans-unit>
        <trans-unit id="3a67702dfd99a672a422678ac9f69ffb572b1407" translate="yes" xml:space="preserve">
          <source>Who is using pydna?</source>
          <target state="translated">谁在使用pydna?</target>
        </trans-unit>
        <trans-unit id="dbd98883ed2c37fb6127ad9f6e5f847ff264ac9e" translate="yes" xml:space="preserve">
          <source>Windows using AppveyorCI</source>
          <target state="translated">使用AppveyorCI的Windows</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">窗口。</target>
        </trans-unit>
        <trans-unit id="b994c7d147883ad518ba8d45657518b6a8910b36" translate="yes" xml:space="preserve">
          <source>You should be able to pip install pydna from the Windows terminal as biopython now can be installed with pip as well.</source>
          <target state="translated">你应该可以从Windows终端用pip安装pydna,因为biopython现在也可以用pip安装。</target>
        </trans-unit>
        <trans-unit id="7d8c09da5aff75b6332ce37edda56827f478a35d" translate="yes" xml:space="preserve">
          <source>appdirs &amp;gt;=1.3.0</source>
          <target state="translated">appdirs&amp;gt; = 1.3.0</target>
        </trans-unit>
        <trans-unit id="67068fcc51aaab0c9d4532a88016301c8f3b5d2d" translate="yes" xml:space="preserve">
          <source>biopython &amp;gt;= 1.65</source>
          <target state="translated">生物蟒&amp;gt; = 1.65</target>
        </trans-unit>
        <trans-unit id="774a2d70c310304638444e5f4d8e751169a8c4e7" translate="yes" xml:space="preserve">
          <source>coverage &amp;gt;= 3.7.1</source>
          <target state="translated">覆盖率&amp;gt; = 3.7.1</target>
        </trans-unit>
        <trans-unit id="49ba59c6c506b3d6c851deb69b13f4d81f5d10b8" translate="yes" xml:space="preserve">
          <source>ipython</source>
          <target state="translated">蟒蛇</target>
        </trans-unit>
        <trans-unit id="7d93500c86ae587b3d9f4bf1b8cec36f221c8183" translate="yes" xml:space="preserve">
          <source>jupyter</source>
          <target state="translated">菊花牌</target>
        </trans-unit>
        <trans-unit id="ef967b983250579e2ef4359a19759cabed357ca5" translate="yes" xml:space="preserve">
          <source>matplotlib</source>
          <target state="translated">matplotlib</target>
        </trans-unit>
        <trans-unit id="1a85e27332da9af06b81ee1600b6a7f0b7688917" translate="yes" xml:space="preserve">
          <source>mpldatacursor</source>
          <target state="translated">mpldatacursor</target>
        </trans-unit>
        <trans-unit id="c841f56f416b65aa0f02fbae35146ac356b26ee7" translate="yes" xml:space="preserve">
          <source>networkx &amp;gt;= 1.8.1</source>
          <target state="translated">networkx&amp;gt; = 1.8.1</target>
        </trans-unit>
        <trans-unit id="a65e1d3845cf3b10a01939410842cdd6a3d0a6de" translate="yes" xml:space="preserve">
          <source>numpy</source>
          <target state="translated">numpy</target>
        </trans-unit>
        <trans-unit id="2cba606a5f2b01c2ef5d3c364f09ba0e40bd3fae" translate="yes" xml:space="preserve">
          <source>pint &amp;gt;= 0.7.2</source>
          <target state="translated">品脱&amp;gt; = 0.7.2</target>
        </trans-unit>
        <trans-unit id="cc9c0da5b57210a0509e6b7dc180f2780215aef7" translate="yes" xml:space="preserve">
          <source>prettytable&amp;gt;=0.7.2</source>
          <target state="translated">prettytable&amp;gt; = 0.7.2</target>
        </trans-unit>
        <trans-unit id="39503909efeb240c2d65d8e735e7c03fde3f249f" translate="yes" xml:space="preserve">
          <source>pydna</source>
          <target state="translated">pydna</target>
        </trans-unit>
        <trans-unit id="11f9cfa98357f23a8ab42c2d939d1edbdc837925" translate="yes" xml:space="preserve">
          <source>pyparsing &amp;gt;= 2.1.10</source>
          <target state="translated">pyparsing&amp;gt; = 2.1.10</target>
        </trans-unit>
        <trans-unit id="311c47c97015f98fc75fbe90bb890bac39250c69" translate="yes" xml:space="preserve">
          <source>pytest&amp;gt;=3.0.3</source>
          <target state="translated">pytest&amp;gt; = 3.0.3</target>
        </trans-unit>
        <trans-unit id="5bf01f8d47ad80da7383d379a8c502bd04c96f9e" translate="yes" xml:space="preserve">
          <source>pytest-cov &amp;gt;= 2.3.1</source>
          <target state="translated">pytest-cov&amp;gt; = 2.3.1</target>
        </trans-unit>
        <trans-unit id="7e42a3da95e76b34ff658ccedd7250e8c7f76013" translate="yes" xml:space="preserve">
          <source>python-coveralls &amp;gt;= 2.9.0</source>
          <target state="translated">python-coveralls&amp;gt; = 2.9.0</target>
        </trans-unit>
        <trans-unit id="28375a65a20587920f0440ef81adbdd35b865f67" translate="yes" xml:space="preserve">
          <source>scipy</source>
          <target state="translated">虾米</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
