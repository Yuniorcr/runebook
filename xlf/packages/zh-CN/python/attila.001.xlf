<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/attila/">
    <body>
      <group id="attila">
        <trans-unit id="22f105510cb1f5a4449b4532bf8a58ac7e1153d4" translate="yes" xml:space="preserve">
          <source>ATScripts</source>
          <target state="translated">ATS脚本</target>
        </trans-unit>
        <trans-unit id="a4390fa4538f0095bfcf01281d83e596f31b85ab" translate="yes" xml:space="preserve">
          <source>ATtila</source>
          <target state="translated">ATtila</target>
        </trans-unit>
        <trans-unit id="d3fe4b63536e1e0401a55c51848e0135cdf04980" translate="yes" xml:space="preserve">
          <source>ATtila comes, as said before, with a binary (which can be used instead of the classic &quot;chat&quot; binary) or for anything you want.
You can run ATtila binary with</source>
          <target state="translated">如前所述,ATtila有一个二进制(可以用来代替经典的 &quot;聊天 &quot;二进制)或任何你想要的东西。你可以用以下方式运行ATtila二进制</target>
        </trans-unit>
        <trans-unit id="bf046a0624c3400af47a5657117ad061cd9fc383" translate="yes" xml:space="preserve">
          <source>ATtila is both a &lt;strong&gt;Python3 🐍 module and a CLI utility&lt;/strong&gt;.
The module's purpose is to ease the communication with an RF module which uses AT commands. It is both possible to send single AT commands indicating what response is expected and AT scritps which indicate all the commands to send, the expected response for each command, what information to store for each command and define an alternative behaviour in case of unexpected responses.</source>
          <target state="translated">ATtila既是&lt;strong&gt;Python3模块又是CLI实用程序&lt;/strong&gt;。该模块的目的是简化与使用AT命令的RF模块的通信。既可以发送单个AT命令来指示期望的响应，也可以发送AT脚本来指示要发送的所有命令，每个命令的期望响应，为每个命令存储哪些信息以及在意外响应的情况下定义替代行为。</target>
        </trans-unit>
        <trans-unit id="b229c5a68213b49a50be1bc21498a30e75594eb6" translate="yes" xml:space="preserve">
          <source>ATtila uses its own syntax to communicate with the serial device, which is called &lt;strong&gt;ATScript&lt;/strong&gt; (ATS).
The basic syntax for it is:</source>
          <target state="translated">ATtila使用其自己的语法与串行设备通信，称为&lt;strong&gt;ATScript&lt;/strong&gt;（ATS）。其基本语法为：</target>
        </trans-unit>
        <trans-unit id="5a54e791de84e42cf4eda08c4ddfd5add5e204c2" translate="yes" xml:space="preserve">
          <source>Add an ATCommand to the session</source>
          <target state="translated">在会话中添加ATC命令</target>
        </trans-unit>
        <trans-unit id="f05a9233b566810e8aa37068354152c016168711" translate="yes" xml:space="preserve">
          <source>Be careful, this function can return a ATSerialPortError</source>
          <target state="translated">小心,这个函数可能返回一个ATSerialPortError。</target>
        </trans-unit>
        <trans-unit id="f578227926a03a85a494aaca127cfbff63d7ec5e" translate="yes" xml:space="preserve">
          <source>Branches</source>
          <target state="translated">分支机构</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">变更日志</target>
        </trans-unit>
        <trans-unit id="a5829e7629ddc518c69718993c933b6817b22e26" translate="yes" xml:space="preserve">
          <source>Choose how to parse commands:</source>
          <target state="translated">选择如何解析命令。</target>
        </trans-unit>
        <trans-unit id="c1a6ab834dce189d7451f5c2a5fbf6e36e3f3d03" translate="yes" xml:space="preserve">
          <source>Close serial</source>
          <target state="translated">关闭序列</target>
        </trans-unit>
        <trans-unit id="684ad60a1de6aebc311b5ffd5f164527bee7041f" translate="yes" xml:space="preserve">
          <source>Collect the values you need</source>
          <target state="translated">收集您需要的数值</target>
        </trans-unit>
        <trans-unit id="d7583205aeb89be427f2c3792d55b033711ec6c4" translate="yes" xml:space="preserve">
          <source>Collect values from response and store them in the session storage</source>
          <target state="translated">从响应中收集值并将其存储在会话存储中。</target>
        </trans-unit>
        <trans-unit id="600e17a6e3710e6a83d1800689dc4c0f7f0ebd81" translate="yes" xml:space="preserve">
          <source>Configure the communicator</source>
          <target state="translated">配置通讯器</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">缴款</target>
        </trans-unit>
        <trans-unit id="961b568cee2a9db3e48bf9e0c2d9afa4835f9872" translate="yes" xml:space="preserve">
          <source>Contributions are welcome! 😉</source>
          <target state="translated">欢迎大家投稿!&quot;■▄▄■▓。</target>
        </trans-unit>
        <trans-unit id="8484940efa6fdc7ad76caf545d513adf2ee3767e" translate="yes" xml:space="preserve">
          <source>Current Version: &lt;strong&gt;1.2.0 (30/05/2020)&lt;/strong&gt;</source>
          <target state="translated">当前版本：&lt;strong&gt;1.2.0（2020年5月30日）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f545a06b2146464b1d9134ed2f9a4a9b0b68ec8" translate="yes" xml:space="preserve">
          <source>Define a command to execute in case the command fails</source>
          <target state="translated">定义一个在命令失败时执行的命令</target>
        </trans-unit>
        <trans-unit id="bf07b364774370a7a286f0699c59da4c72b76687" translate="yes" xml:space="preserve">
          <source>Developed by &lt;em&gt;Christian Visintin&lt;/em&gt;</source>
          <target state="translated">由&lt;em&gt;Christian Visintin&lt;/em&gt;开发&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48290957e3f701e52325b020138bb77bfffd6d84" translate="yes" xml:space="preserve">
          <source>Execute commands:</source>
          <target state="translated">执行命令。</target>
        </trans-unit>
        <trans-unit id="5f36a56e4a165c5946f99596e5cc4e2d809eb5cf" translate="yes" xml:space="preserve">
          <source>Execute directly a command (or an ESK)</source>
          <target state="translated">直接执行命令(或ESK)。</target>
        </trans-unit>
        <trans-unit id="dd215e690656c0b6990170d2c2770523f6058885" translate="yes" xml:space="preserve">
          <source>Fa&amp;ccedil;ade to communicate with the serial device</source>
          <target state="translated">与串行设备进行通信的外观</target>
        </trans-unit>
        <trans-unit id="ddf054130082d77202b51fbc04ce13dd99697f2e" translate="yes" xml:space="preserve">
          <source>If you think you can contribute to ATtila, please follow ATtila's &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;Contributions Guide&lt;/a&gt;</source>
          <target state="translated">如果您认为可以为ATtila做出贡献，请遵循ATtila的&lt;a href=&quot;CONTRIBUTING.md&quot;&gt;贡献指南&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">执行情况</target>
        </trans-unit>
        <trans-unit id="d3a154e4b0bf435bcc6be79387852d188318b90e" translate="yes" xml:space="preserve">
          <source>Import the AT Runtime Environment into your project</source>
          <target state="translated">将AT运行时环境导入到您的项目中。</target>
        </trans-unit>
        <trans-unit id="fe0fde8ce2036355733eb10cd9cc5d87a2508eee" translate="yes" xml:space="preserve">
          <source>In order to build your own implementation using ATtila these are the steps you'll need to follow:</source>
          <target state="translated">为了使用ATtila建立自己的实现,你需要遵循以下步骤。</target>
        </trans-unit>
        <trans-unit id="ff2ac7291e3f2e3b2022cdceccbaaaef53399407" translate="yes" xml:space="preserve">
          <source>Instantiate an ATRuntimeEnvironment object</source>
          <target state="translated">实例化一个ATRuntimeEnvironment对象。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">已知问题</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="8082fa65b8baf7559c1e3ffa0f9217c3d70271eb" translate="yes" xml:space="preserve">
          <source>None, as far as I know at least.</source>
          <target state="translated">据我所知,至少没有。</target>
        </trans-unit>
        <trans-unit id="76289fbfad3a7f67e1a0315367eef81be267f081" translate="yes" xml:space="preserve">
          <source>Open the serial port</source>
          <target state="translated">打开串口</target>
        </trans-unit>
        <trans-unit id="1e0560f668901c14aa127314f41df3169858cab3" translate="yes" xml:space="preserve">
          <source>Parse an ATScript</source>
          <target state="translated">解析一个ATScript</target>
        </trans-unit>
        <trans-unit id="bd81061188658a8d6f4dc08ffae9f99bdabcd1d3" translate="yes" xml:space="preserve">
          <source>Python module to communicate easily with modems and RF modules using AT commands</source>
          <target state="translated">使用AT命令与调制解调器和射频模块轻松通信的Python模块。</target>
        </trans-unit>
        <trans-unit id="f1ddfbb233fcd621712eecdedfab93e2416d814c" translate="yes" xml:space="preserve">
          <source>Python3.4 (up to 1.1.x)</source>
          <target state="translated">Python3.4 (高达1.1.x)</target>
        </trans-unit>
        <trans-unit id="466baf4247687780a9ff89c701b300126024523f" translate="yes" xml:space="preserve">
          <source>Python3.5 (&amp;gt;= 1.2.0)</source>
          <target state="translated">Python3.5（&amp;gt; = 1.2.0）</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="d2936895d0690278b2ded102116b3d3a94f557a3" translate="yes" xml:space="preserve">
          <source>Run everything at once and then get a list of ATResponse</source>
          <target state="translated">一次运行所有的东西,然后得到一个ATResponse列表</target>
        </trans-unit>
        <trans-unit id="69334b1455bf2989fb633bd0b07085c5309330ab" translate="yes" xml:space="preserve">
          <source>Run one command a time (if abort_on_failure is True, the ATRE will raise ATRuntimeError):</source>
          <target state="translated">每次运行一条命令(如果abort_on_failure为True,ATRE将引发ATRuntimeError)。</target>
        </trans-unit>
        <trans-unit id="48a97b2b0bc4b2a9b177b042cb90988a46c103c2" translate="yes" xml:space="preserve">
          <source>See Changelog &lt;a href=&quot;CHANGELOG.md&quot;&gt;HERE&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;CHANGELOG.md&quot;&gt;这里&lt;/a&gt;查看变更日志</target>
        </trans-unit>
        <trans-unit id="9454b97a69c5a38bf9a3798e8e0ef9fbd3aca55c" translate="yes" xml:space="preserve">
          <source>Sending AT commands and define the expected response for it using regex</source>
          <target state="translated">发送AT命令,并使用regex定义它的预期响应。</target>
        </trans-unit>
        <trans-unit id="bbf4af39faf6564d4422f5f5112f3471e293e22a" translate="yes" xml:space="preserve">
          <source>Sending individual AT command to RF module/modem through serial port and get the response for them</source>
          <target state="translated">通过串口向射频模块/调制解调器发送单个AT命令,并获得响应</target>
        </trans-unit>
        <trans-unit id="8b399a6fa6d0598b906b7247be545fb816064635" translate="yes" xml:space="preserve">
          <source>Since version 1.1.0, it is possible to use a virtual serial device, instead of a real one. This has been introduced for tests purpose, but can actually used in cases where you need to emulate a serial device and you want to keep using ATtila.
In this case, in the ATRE, instead of using configure_communicator use:</source>
          <target state="translated">从1.1.0版本开始,可以使用虚拟的串行设备,而不是真实的设备。这是为测试目的而引入的,但实际上可以用于需要模拟串行设备而又想继续使用ATtila的情况。在这种情况下,在ATRE中,不要使用configure_communicator,而是使用。</target>
        </trans-unit>
        <trans-unit id="cb813c598c55d1d0afa8ff53b21e19b71f3b1ecd" translate="yes" xml:space="preserve">
          <source>The first thing you have to do is import the AT Runtime Environment and the exceptions it can raise in your project</source>
          <target state="translated">首先你要做的是在你的项目中导入AT运行时环境和它可以引发的异常。</target>
        </trans-unit>
        <trans-unit id="88b0f1320b72e91d4a9c85336dcbb029d3ba3e9c" translate="yes" xml:space="preserve">
          <source>The virtual communicator, in addition to the standard one, requires a read, a write and an in waiting callback. These callbacks must replace the I/O operations of the serial device, with something else (e.g. a socket with an HTTP request)</source>
          <target state="translated">虚拟通信器,除了标准的通信器外,还需要一个读、一个写和一个等待中的回调。这些回调必须用其他东西来代替串行设备的I/O操作(例如一个HTTP请求的套接字)。</target>
        </trans-unit>
        <trans-unit id="76b50f720486f156f8936e015b80b285bcbf40fd" translate="yes" xml:space="preserve">
          <source>These are the main functionalities that ATtila provides:</source>
          <target state="translated">这些是ATtila提供的主要功能。</target>
        </trans-unit>
        <trans-unit id="54bc27b4646b724cb5b0304406410cdac4d98b3e" translate="yes" xml:space="preserve">
          <source>This is the component which will communicate with your device</source>
          <target state="translated">这是与你的设备进行通信的组件。</target>
        </trans-unit>
        <trans-unit id="99ee4ecfedb036663cc3644641fd902e92efbfb8" translate="yes" xml:space="preserve">
          <source>To know more about ATS see the &lt;a href=&quot;./docs/atscript.md&quot;&gt;ATScript documentation&lt;/a&gt;</source>
          <target state="translated">要了解有关ATS的更多信息，请参阅&lt;a href=&quot;./docs/atscript.md&quot;&gt;ATScript文档&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d19b13713adfc6b017c1882d0fdb43cb9748fce" translate="yes" xml:space="preserve">
          <source>Virtual Device</source>
          <target state="translated">虚拟设备</target>
        </trans-unit>
        <trans-unit id="7b388b4480a4e2e6abc1d1761ef066717cedf621" translate="yes" xml:space="preserve">
          <source>dev: main development branch</source>
          <target state="translated">开发:主要开发分支</target>
        </trans-unit>
        <trans-unit id="3dc2cb1e9fd36ff82b8edabaa8fbb0273ac37cb8" translate="yes" xml:space="preserve">
          <source>if abort_on_failure is True, the ATRE will raise ATRuntimeError during execution</source>
          <target state="translated">如果 abort_on_failure 为 True,ATRE 将在执行过程中引发 ATRuntimeError。</target>
        </trans-unit>
        <trans-unit id="f2e75cd727a92d6ecc4aef453c2422ced0e2a672" translate="yes" xml:space="preserve">
          <source>master: stable only</source>
          <target state="translated">主人:只有稳定</target>
        </trans-unit>
        <trans-unit id="7e27d9613f9ab243aa7bea2da8dd4ef50685624c" translate="yes" xml:space="preserve">
          <source>other features</source>
          <target state="translated">其他功能</target>
        </trans-unit>
        <trans-unit id="45cd2f6866faaa1280e31c2adda0339aa8a7993d" translate="yes" xml:space="preserve">
          <source>parse_ATScript can raise ATScriptNotFound or ATScriptSyntaxError</source>
          <target state="translated">parse_ATScript可以引发ATScriptNotFound或ATScriptSyntaxError。</target>
        </trans-unit>
        <trans-unit id="b59922ef2d6cc4a9c21f18796d3b0a9aa59a1445" translate="yes" xml:space="preserve">
          <source>pyserial3</source>
          <target state="translated">pyserial3</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
