<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dxpy/">
    <body>
      <group id="dxpy">
        <trans-unit id="b0596762c145e066c6b51d6b767aa76380933b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dxpy.compat&lt;/code&gt; has some simple shims that mirror Python 3 builtins and redirect them to Python 2.7 equivalents when on 2.7. Most critically, &lt;code&gt;from dxpy.compat import str&lt;/code&gt; will import the &lt;code&gt;unicode&lt;/code&gt; builtin on 2.7 and the &lt;code&gt;str&lt;/code&gt; builtin on python 3. Use &lt;code&gt;str&lt;/code&gt; wherever you would have used &lt;code&gt;unicode&lt;/code&gt;. To convert unicode strings to bytes, use &lt;code&gt;.encode('utf-8')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dxpy.compat&lt;/code&gt; 具有一些简单的填充，它们可以反映Python 3内置函数并将它们重定向到2.7上的Python 2.7等效项。最关键的是， &lt;code&gt;from dxpy.compat import str&lt;/code&gt; 将导入 &lt;code&gt;unicode&lt;/code&gt; 的2.7内置和 &lt;code&gt;str&lt;/code&gt; 关于Python 3，使用内置的 &lt;code&gt;str&lt;/code&gt; 只要你会使用 &lt;code&gt;unicode&lt;/code&gt; 的。要将unicode字符串转换为字节，请使用 &lt;code&gt;.encode('utf-8')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="674463a63b833f2ee17f1bbb198b28a2cbb90be6" translate="yes" xml:space="preserve">
          <source>API Documentation</source>
          <target state="translated">API文档</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">建筑物</target>
        </trans-unit>
        <trans-unit id="b6114911729017efbd5b9af9dce07a4c23db36c9" translate="yes" xml:space="preserve">
          <source>Code going into the Python codebase should be written in Python 3.5 style, and should be compatible with Python 2.7.  Python 2.7 support will end on March 1, 2021.</source>
          <target state="translated">进入Python代码库的代码应该用Python 3.5的风格编写,并且应该与Python 2.7兼容。Python 2.7的支持将于2021年3月1日结束。</target>
        </trans-unit>
        <trans-unit id="ca133fd5c5e719911f84f8857fafa733baf2d362" translate="yes" xml:space="preserve">
          <source>Conform to &lt;a href=&quot;http://legacy.python.org/dev/peps/pep-0008/&quot;&gt;PEP-8&lt;/a&gt;.</source>
          <target state="translated">符合&lt;a href=&quot;http://legacy.python.org/dev/peps/pep-0008/&quot;&gt;PEP-8&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b48db00dda4f9932d6db2c22f755daa52ca0f246" translate="yes" xml:space="preserve">
          <source>Convention for Python scripts that are also modules</source>
          <target state="translated">Python脚本也是模块的约定</target>
        </trans-unit>
        <trans-unit id="ec1fb0e8927ceeec4b0942eccd8a0408b783ccb8" translate="yes" xml:space="preserve">
          <source>DNAnexus Platform API bindings for Python</source>
          <target state="translated">适用于Python的DNAnexus平台API绑定。</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">调试</target>
        </trans-unit>
        <trans-unit id="cd8da1618ca623fabd2ab45706d2e10471d5cf77" translate="yes" xml:space="preserve">
          <source>Do not add module-level attributes into the API unless you are absolutely certain they will remain constants. For
example, do not declare an attribute &lt;code&gt;dxpy.foo&lt;/code&gt; (&lt;code&gt;dxpy._foo&lt;/code&gt; is OK), or any other non-private variable in the
global scope of any module. This is because unless the value is a constant, it may need to be updated by an
initialization method, which may need to run lazily to avoid side effects at module load time. Instead, use
accessor methods that can perform the updates at call time:</source>
          <target state="translated">除非您绝对确定它们将保持不变，否则请勿在API中添加模块级属性。例如，请勿在任何模块的全局范围内声明属性 &lt;code&gt;dxpy.foo&lt;/code&gt; （ &lt;code&gt;dxpy._foo&lt;/code&gt; 是可以的）或任何其他非私有变量。这是因为除非该值是一个常数，否则可能需要使用初始化方法对其进行更新，该初始化方法可能需要延迟运行以避免模块加载时的副作用。而是使用可以在调用时执行更新的访问器方法：</target>
        </trans-unit>
        <trans-unit id="48bad454c6ffe47f4ecda7d71d7322e78baada18" translate="yes" xml:space="preserve">
          <source>Do not introduce module import-time side effects.</source>
          <target state="translated">不要引入模块导入时间的副作用。</target>
        </trans-unit>
        <trans-unit id="8a47ccc86c9ce396d0477a87c93be5004af8c01a" translate="yes" xml:space="preserve">
          <source>Document your code in a format usable by &lt;a href=&quot;http://sphinx-doc.org/ext/autodoc.html&quot;&gt;Sphinx Autodoc&lt;/a&gt;.</source>
          <target state="translated">以&lt;a href=&quot;http://sphinx-doc.org/ext/autodoc.html&quot;&gt;Sphinx Autodoc&lt;/a&gt;可用的格式记录代码。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="9574bdf222d001a672bb0cb713075c8aa7e9abe4" translate="yes" xml:space="preserve">
          <source>From the dx-toolkit root directory:</source>
          <target state="translated">从dx-toolkit根目录下。</target>
        </trans-unit>
        <trans-unit id="df6dc1c127d48e12ba33f963b4a97a4123c19c67" translate="yes" xml:space="preserve">
          <source>Google Python style guide</source>
          <target state="translated">谷歌Python风格指南</target>
        </trans-unit>
        <trans-unit id="676aae763b35679dafb83babeb3b0af1ee3d90cf" translate="yes" xml:space="preserve">
          <source>Include in the script a top-level function called &lt;code&gt;main()&lt;/code&gt;, which should be the entry point processor, and
conclude the script with the following stanza:</source>
          <target state="translated">在脚本中包含一个名为 &lt;code&gt;main()&lt;/code&gt; 的顶级函数，该函数应该是入口点处理器，并使用以下节结束该脚本：</target>
        </trans-unit>
        <trans-unit id="9bbb422884602fb824c52d35b9991df366deb185" translate="yes" xml:space="preserve">
          <source>Install the script into &lt;code&gt;src/python/dxpy/scripts&lt;/code&gt; with a name like &lt;code&gt;dx_useful_script.py&lt;/code&gt;. This will allow
importing with &lt;code&gt;import dxpy.scripts.dx_useful_script&lt;/code&gt;.</source>
          <target state="translated">将脚本安装到 &lt;code&gt;src/python/dxpy/scripts&lt;/code&gt; 中，名称类似于 &lt;code&gt;dx_useful_script.py&lt;/code&gt; 。这将允许使用 &lt;code&gt;import dxpy.scripts.dx_useful_script&lt;/code&gt; 进行导入。</target>
        </trans-unit>
        <trans-unit id="6847eb5db3cd65637963e6462ef62d5860408a52" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;&amp;lt;iterator&amp;gt;.next()&lt;/code&gt;, use &lt;code&gt;next(&amp;lt;iterator&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">代替 &lt;code&gt;&amp;lt;iterator&amp;gt;.next()&lt;/code&gt; ，使用 &lt;code&gt;next(&amp;lt;iterator&amp;gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d87395bd24dfae71341bb161aec261e609af2716" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;.iteritems()&lt;/code&gt;, use &lt;code&gt;.items()&lt;/code&gt;. If this is a performance concern on 2.7, introduce a shim in compat.py.</source>
          <target state="translated">代替 &lt;code&gt;.iteritems()&lt;/code&gt; ，使用 &lt;code&gt;.items()&lt;/code&gt; 。如果这是2.7的性能问题，请在compat.py中引入垫片。</target>
        </trans-unit>
        <trans-unit id="d950a426d096d142582ebde191536d4f546f0d1e" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;StringIO.StringIO&lt;/code&gt;, use &lt;code&gt;from dxpy.compat import BytesIO&lt;/code&gt; (which is StringIO on 2.7).</source>
          <target state="translated">代替 &lt;code&gt;StringIO.StringIO&lt;/code&gt; ，使用 &lt;code&gt;from dxpy.compat import BytesIO&lt;/code&gt; （在2.7上为StringIO）。</target>
        </trans-unit>
        <trans-unit id="63058301542c8898593ba52b2666bebe53887e8d" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;raw_input&lt;/code&gt;, use &lt;code&gt;from dxpy.compat import input&lt;/code&gt;.</source>
          <target state="translated">代替 &lt;code&gt;raw_input&lt;/code&gt; ，使用 &lt;code&gt;from dxpy.compat import input&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9767db1af382aebf46c922fd27a62bd8e9cd4af8" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;sort(x, cmp=lambda x, y: ...)&lt;/code&gt;, use &lt;code&gt;x=sorted(x, key=lambda x: ...)&lt;/code&gt;.</source>
          <target state="translated">代替 &lt;code&gt;sort(x, cmp=lambda x, y: ...)&lt;/code&gt; ，请使用 &lt;code&gt;x=sorted(x, key=lambda x: ...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6fd14051b354da983ecb8ff41200315d2637cb8" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;x.has_key(y)&lt;/code&gt;, use &lt;code&gt;y in x&lt;/code&gt;.</source>
          <target state="translated">代替 &lt;code&gt;x.has_key(y)&lt;/code&gt; ， &lt;code&gt;y in x&lt;/code&gt; 使用y。</target>
        </trans-unit>
        <trans-unit id="4da9a8dd0a964c7b4b5b9579db1799552bca9008" translate="yes" xml:space="preserve">
          <source>Note: the install script will replace underscores in the name of your module with dashes in the name of the launcher
script.</source>
          <target state="translated">注意:安装脚本会将模块名称中的下划线替换为启动脚本名称中的破折号。</target>
        </trans-unit>
        <trans-unit id="bfead3e178179210460f8bdeacc582f0d7e87b2c" translate="yes" xml:space="preserve">
          <source>Other useful resources:</source>
          <target state="translated">其他有用资源:</target>
        </trans-unit>
        <trans-unit id="3f9c4cc3416e160b70e278e7d65e895425e00b6c" translate="yes" xml:space="preserve">
          <source>Python coding style</source>
          <target state="translated">Python编码风格</target>
        </trans-unit>
        <trans-unit id="a4a85c998ce2cd9c480982b861989d3ec8a40877" translate="yes" xml:space="preserve">
          <source>Python version compatibility</source>
          <target state="translated">Python兼容版本</target>
        </trans-unit>
        <trans-unit id="cb308f901972e30a32b76dd5739b0133d3919e62" translate="yes" xml:space="preserve">
          <source>Relax other PEP-8 requirements at your discretion if it simplifies code or is needed to follow conventions
established elsewhere at DNAnexus.</source>
          <target state="translated">如果简化代码或需要遵循DNAnexus其他地方建立的惯例,您可以酌情放宽其他PEP-8要求。</target>
        </trans-unit>
        <trans-unit id="50f12db3431b57bc4f594a7b08e6b221d7b2c023" translate="yes" xml:space="preserve">
          <source>Relax the line length requirement to 120 characters per line, where you judge readability not to be compromised.</source>
          <target state="translated">将行长要求放宽到每行120个字符,你判断不影响可读性的地方。</target>
        </trans-unit>
        <trans-unit id="61d2d0023852329564fec4660e5224aaefa2cb92" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;pylint -E&lt;/code&gt; on your code before checking it in.</source>
          <target state="translated">在签入代码之前，对您的代码运行 &lt;code&gt;pylint -E&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5fa648e852202d309e677a3f706c74539cac098" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;_DX_DEBUG&lt;/code&gt; environment variable to a positive integer before
running a dxpy-based program (such as &lt;code&gt;dx&lt;/code&gt;) to display the input and
output of each API call. Supported values are 1, 2, and 3 with
increasing numbers producing successively more verbose output.</source>
          <target state="translated">在运行基于dxpy的程序（例如 &lt;code&gt;dx&lt;/code&gt; ）以显示每个API调用的输入和输出之前， &lt;code&gt;_DX_DEBUG&lt;/code&gt; 环境变量设置为正整数。支持的值是1、2和3，数字越大，产生的输出就越详细。</target>
        </trans-unit>
        <trans-unit id="cf1a3d86a66060256044dfc0553a7c95fe6f6ce1" translate="yes" xml:space="preserve">
          <source>Some scripts, such as format converters, are useful both as standalone executables and as importable modules.</source>
          <target state="translated">有些脚本,如格式转换器,既可以作为独立的可执行文件,也可以作为可导入模块。</target>
        </trans-unit>
        <trans-unit id="85268049c2c2bd779bf476064b4b122d429d0005" translate="yes" xml:space="preserve">
          <source>The Hitchhiker's Guide to Python</source>
          <target state="translated">Python搭便车指南</target>
        </trans-unit>
        <trans-unit id="c8dad01ae3da8eb6b8cba8a0c7cdaea7d5491bcc" translate="yes" xml:space="preserve">
          <source>The dxpy installation process (invoked through &lt;code&gt;setup.py&lt;/code&gt; or with &lt;code&gt;make -C src python&lt;/code&gt; at the top level)
will find the script and install a launcher for it into the executable path automatically. This is done using the
&lt;code&gt;entry_points&lt;/code&gt; facility of setuptools/distribute.</source>
          <target state="translated">dxpy安装过程（通过 &lt;code&gt;setup.py&lt;/code&gt; 或在顶层使用 &lt;code&gt;make -C src python&lt;/code&gt; 调用）将找到脚本并将其启动器自动安装到可执行路径中。这是使用setuptools / distribute的 &lt;code&gt;entry_points&lt;/code&gt; 工具完成的 。</target>
        </trans-unit>
        <trans-unit id="8c7b6149c9a44f75ed34f4d873e4b308b7564f19" translate="yes" xml:space="preserve">
          <source>The next most troublesome gotcha after the bytes/unicode conversions is that many iterables operators return generators in Python 3. For example, &lt;code&gt;map()&lt;/code&gt; returns a generator. This breaks places that expect a list, and requires either explicit casting with &lt;code&gt;list()&lt;/code&gt;, or the use of list comprehensions (usually preferred).</source>
          <target state="translated">在字节/ Unicode转换之后，下一个最麻烦的陷阱是许多可迭代运算符在Python 3中返回生成器。例如， &lt;code&gt;map()&lt;/code&gt; 返回一个生成器。这会破坏期望列表的位置，并且需要使用 &lt;code&gt;list()&lt;/code&gt; 进行显式强制转换，或者需要使用列表推导（通常是首选）。</target>
        </trans-unit>
        <trans-unit id="c084f14040f09a58bb728f0ddff6fb5a4cb9a240" translate="yes" xml:space="preserve">
          <source>To facilitate Python 2 compatibility, we have the compat module in &lt;a href=&quot;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&quot;&gt;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&lt;/a&gt;. Also, the following boilerplate should be
inserted into all Python source files:</source>
          <target state="translated">为了促进Python 2的兼容性，我们在&lt;a href=&quot;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py&quot;&gt;https://github.com/dnanexus/dx-toolkit/blob/master/src/python/dxpy/compat.py中&lt;/a&gt;提供了compat模块。另外，应将以下样板插入所有Python源文件中：</target>
        </trans-unit>
        <trans-unit id="8e99b2bf51505aca7fa345b17356e08b0244cbf9" translate="yes" xml:space="preserve">
          <source>Typically, when called on the command line, &lt;em&gt;main()&lt;/em&gt; will first parse the command line arguments (sys.argv). However,
when imported as a module, the arguments need to instead be passed as inputs to a function. The following is a
suggestion for how to accommodate both styles simultaneously with just one entry point (&lt;code&gt;main&lt;/code&gt;):</source>
          <target state="translated">通常，在命令行上调用&lt;em&gt;main（）时，&lt;/em&gt;它将首先解析命令行参数（sys.argv）。但是，当作为模块导入时，必须将参数作为输入传递给函数。以下是有关如何仅通过一个入口点（ &lt;code&gt;main&lt;/code&gt; ）同时容纳两种样式的建议：</target>
        </trans-unit>
        <trans-unit id="f8834549fa3b512635a4cdefe9a5f0cd97e47e4b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;from __future__ import print_function&lt;/code&gt; and use print as a function. Instead of &lt;code&gt;print &amp;gt;&amp;gt;sys.stderr&lt;/code&gt;, write &lt;code&gt;print(..., file=sys.stderr)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;from __future__ import print_function&lt;/code&gt; 使用import print_function并将print作为函数使用。而不是 &lt;code&gt;print &amp;gt;&amp;gt;sys.stderr&lt;/code&gt; ，而是编写 &lt;code&gt;print(..., file=sys.stderr)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adea88259ff3223db98b0ce99c873651a8268bc9" translate="yes" xml:space="preserve">
          <source>We have the following convention for these scripts:</source>
          <target state="translated">我们对这些脚本有以下约定。</target>
        </trans-unit>
        <trans-unit id="83da9c16c6603cb8d4311298056ffabe5920de38" translate="yes" xml:space="preserve">
          <source>dxpy is supported on Python 2 (2.7+) and Python 3 (3.5+)</source>
          <target state="translated">dxpy支持Python 2 (2.7+)和Python 3 (3.5+)。</target>
        </trans-unit>
        <trans-unit id="086e971b7ec428ac6a5dad1a0b475da4d8fe6c69" translate="yes" xml:space="preserve">
          <source>dxpy: DNAnexus Python API</source>
          <target state="translated">dxpy.DNAnexus Python API DNAnexus Python API</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
