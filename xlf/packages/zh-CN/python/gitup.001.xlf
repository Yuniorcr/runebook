<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/gitup/">
    <body>
      <group id="gitup">
        <trans-unit id="610f484992a842058b9c65ed8954c552c5611995" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are using Windows, you may wish to add a macro so you can
invoke gitup in any directory. Note that &lt;code&gt;C:\python27\&lt;/code&gt; refers to the
directory where Python is installed:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果使用Windows，则可能希望添加一个宏，以便可以在任何目录中调用gitup。请注意， &lt;code&gt;C:\python27\&lt;/code&gt; 是指安装Python的目录：</target>
        </trans-unit>
        <trans-unit id="ec6ec59279d9c17b474e1f6f36f711cdc04b4ce6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;gitup&lt;/strong&gt; (the &lt;em&gt;git-repo-updater&lt;/em&gt;)</source>
          <target state="translated">&lt;strong&gt;gitup&lt;/strong&gt;（&lt;em&gt;git-repo-updater&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="31dd3e0b252209f140c907b7ac928cffa9b3c5a3" translate="yes" xml:space="preserve">
          <source>After fetching, gitup will &lt;em&gt;keep&lt;/em&gt; remote-tracking branches that no longer exist
upstream. Pass &lt;code&gt;--prune&lt;/code&gt; (or &lt;code&gt;-p&lt;/code&gt;) to delete them, or set &lt;code&gt;fetch.prune&lt;/code&gt; or
&lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; in your git config to do this by default.</source>
          <target state="translated">提取后，gitup将&lt;em&gt;保留&lt;/em&gt;上游不再存在的远程跟踪分支。传递 &lt;code&gt;--prune&lt;/code&gt; （或 &lt;code&gt;-p&lt;/code&gt; ）将其删除，或在git配置中将 &lt;code&gt;fetch.prune&lt;/code&gt; 或 &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; 设置为默认情况下执行此操作。</target>
        </trans-unit>
        <trans-unit id="c1592c9f4170e1fd525c99e2ee0c850a18c81355" translate="yes" xml:space="preserve">
          <source>Also by default, gitup will try to fast-forward all branches that have
upstreams configured. It will always skip branches where this is not possible
(e.g. dirty working directory or a merge/rebase is required). Pass
&lt;code&gt;--fetch-only&lt;/code&gt; (or &lt;code&gt;-f&lt;/code&gt;) to skip this step and only fetch remotes.</source>
          <target state="translated">同样默认情况下，gitup会尝试快进所有配置了上游的分支。它将始终跳过不可能的分支（例如，肮脏的工作目录或需要合并/变基）。传递 &lt;code&gt;--fetch-only&lt;/code&gt; （或 &lt;code&gt;-f&lt;/code&gt; ）以跳过此步骤，仅获取遥控器。</target>
        </trans-unit>
        <trans-unit id="a1b1da3c31e4a5f68b2371f0d3a8343b32d3dab5" translate="yes" xml:space="preserve">
          <source>By default, gitup will fetch all remotes in a repository. Pass &lt;code&gt;--current-only&lt;/code&gt;
(or &lt;code&gt;-c&lt;/code&gt;) to make it fetch only the remote tracked by the current branch.</source>
          <target state="translated">默认情况下，gitup将获取存储库中的所有远程服务器。传递 &lt;code&gt;--current-only&lt;/code&gt; （或 &lt;code&gt;-c&lt;/code&gt; ）以使其仅获取当前分支跟踪的远程目录。</target>
        </trans-unit>
        <trans-unit id="0f120a3518d0382f4d889cb63b53fdc7d2f7a1df" translate="yes" xml:space="preserve">
          <source>Delete a bookmark:</source>
          <target state="translated">删除书签。</target>
        </trans-unit>
        <trans-unit id="6098198d49e38aadc407f87b3a26ad7c846e5bff" translate="yes" xml:space="preserve">
          <source>Easily update multiple git repositories at once</source>
          <target state="translated">轻松地同时更新多个git仓库。</target>
        </trans-unit>
        <trans-unit id="d950ebc635248b1b2e6d45f0be9a1148c1714e55" translate="yes" xml:space="preserve">
          <source>Finally, simply delete the &lt;code&gt;git-repo-updater&lt;/code&gt; directory, and you're done!</source>
          <target state="translated">最后，只需删除 &lt;code&gt;git-repo-updater&lt;/code&gt; 目录，即可完成！</target>
        </trans-unit>
        <trans-unit id="9fd0da866187697a74c7a4d585f209f050b0a6ff" translate="yes" xml:space="preserve">
          <source>First:</source>
          <target state="translated">第一:</target>
        </trans-unit>
        <trans-unit id="d19077b25744747a56b0a2d1e7cc17a0578252e6" translate="yes" xml:space="preserve">
          <source>For a full list of all command arguments and abbreviations:</source>
          <target state="translated">对于所有命令参数和缩写的完整列表。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="d600deecd9fabec09865ba5fbee27a4731d8713b" translate="yes" xml:space="preserve">
          <source>From source</source>
          <target state="translated">来自来源</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="677f3c3a3916500ef84c980c5b63e6a905656401" translate="yes" xml:space="preserve">
          <source>Then, to install for everyone:</source>
          <target state="translated">然后,为大家安装。</target>
        </trans-unit>
        <trans-unit id="4d7ed612ed02f6c348e32aeeed683ade5ddf0377" translate="yes" xml:space="preserve">
          <source>Then, to update all of your bookmarks, just run gitup without args:</source>
          <target state="translated">然后,要更新你所有的书签,只需运行gitup,不用args。</target>
        </trans-unit>
        <trans-unit id="94da9b26dcff00a6983a01dccf4b954e99a31993" translate="yes" xml:space="preserve">
          <source>There are two ways to update repos: you can pass them as command arguments,
or save them as &quot;bookmarks&quot;.</source>
          <target state="translated">有两种更新repos的方法:你可以将它们作为命令参数传递,或者将它们保存为 &quot;书签&quot;。</target>
        </trans-unit>
        <trans-unit id="aef189b34ffe69a4bd07be4f123e9db49cdfac32" translate="yes" xml:space="preserve">
          <source>To add bookmarks, either of these will work:</source>
          <target state="translated">要添加书签,这两种方法都可以。</target>
        </trans-unit>
        <trans-unit id="5a449928591c6ddc1ebebcf5f90cf2339d4c83f0" translate="yes" xml:space="preserve">
          <source>Update all git repositories in your current directory:</source>
          <target state="translated">更新当前目录下的所有 git 仓库。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="bbe1468542dd775d659229bb276d2110a4dc8e91" translate="yes" xml:space="preserve">
          <source>View your current bookmarks:</source>
          <target state="translated">查看您当前的书签。</target>
        </trans-unit>
        <trans-unit id="a72f0c5cd595fe2117be24234c70aa60ab3d7484" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:</source>
          <target state="translated">与&lt;a href=&quot;http://brew.sh/&quot;&gt;自制软件&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a832d4a51454ff63b511ac7499a4938ccf54416b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://github.com/pypa/pip/&quot;&gt;pip&lt;/a&gt;:</source>
          <target state="translated">随着&lt;a href=&quot;https://github.com/pypa/pip/&quot;&gt;点&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="40204148b421df8e8528aac6f054e824544c28ad" translate="yes" xml:space="preserve">
          <source>You can control how deep gitup will look for repositories in a given directory,
if that directory is not a git repo by itself, with the &lt;code&gt;--depth&lt;/code&gt; (or &lt;code&gt;-t&lt;/code&gt;)
option. &lt;code&gt;--depth 0&lt;/code&gt; will disable recursion entirely, meaning the provided paths
must be repos by themselves. &lt;code&gt;--depth 1&lt;/code&gt; will descend one level (this is the
old behavior from pre-0.5 gitup). &lt;code&gt;--depth -1&lt;/code&gt; will recurse indefinitely,
which is not recommended. The default is &lt;code&gt;--depth 3&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;--depth&lt;/code&gt; （或 &lt;code&gt;-t&lt;/code&gt; ）选项控制gitup在给定目录中查找存储库的深度（如果该目录本身不是git repo ）。 &lt;code&gt;--depth 0&lt;/code&gt; 将完全禁用递归，这意味着提供的路径必须由它们自己来回购。 &lt;code&gt;--depth 1&lt;/code&gt; 将下降一个级别（这是0.5之前的gitup的旧行为）。 &lt;code&gt;--depth -1&lt;/code&gt; 将无限期递归，不建议这样做。默认值为 &lt;code&gt;--depth 3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42fc625f18c26d3f366d0441d051c5568791f716" translate="yes" xml:space="preserve">
          <source>You can mix and match bookmarks and command arguments:</source>
          <target state="translated">你可以混合和匹配书签和命令参数。</target>
        </trans-unit>
        <trans-unit id="1054530faeef2554806b07605ad6834a4779d1d2" translate="yes" xml:space="preserve">
          <source>gitup is a tool for updating multiple git repositories at once. It is smart
enough to handle several remotes, dirty working directories, diverged local
branches, detached HEADs, and more. It was originally created to manage a large
collection of projects and deal with sporadic internet access.</source>
          <target state="translated">gitup是一个同时更新多个git仓库的工具。它足够智能,可以处理多个远程、肮脏的工作目录、分歧的本地分支、分离的HEAD等问题。它最初是为了管理大量的项目集合和处理零星的互联网访问而创建的。</target>
        </trans-unit>
        <trans-unit id="c53f10deab712284c2bd45fccf35f00d1050327c" translate="yes" xml:space="preserve">
          <source>gitup should work on macOS, Linux, and Windows. You should have the latest
version of git and either Python 2.7 or Python 3 installed.</source>
          <target state="translated">gitup应该可以在macOS、Linux和Windows上运行,你需要安装最新版本的git和Python 2.7或Python 3。你需要安装最新版本的 git 和 Python 2.7 或 Python 3。</target>
        </trans-unit>
        <trans-unit id="194281060ca642755abb5110ac7123a0738e5be8" translate="yes" xml:space="preserve">
          <source>or for just yourself (make sure you have &lt;code&gt;~/.local/bin&lt;/code&gt; in your PATH):</source>
          <target state="translated">或仅针对您自己（确保PATH中有 &lt;code&gt;~/.local/bin&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="cdd29fa2a81dde786bd665dfe55c7eb8e31a4849" translate="yes" xml:space="preserve">
          <source>to automatically update all git repositories in that directory.</source>
          <target state="translated">以自动更新该目录下的所有 git 仓库。</target>
        </trans-unit>
        <trans-unit id="e2fbdea8ba63fd5654c4d12b3e5d122cf55ab276" translate="yes" xml:space="preserve">
          <source>will automatically pull to the &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, and &lt;code&gt;baz&lt;/code&gt; git repositories.
Additionally, you can just type:</source>
          <target state="translated">会自动拉到 &lt;code&gt;foo&lt;/code&gt; ， &lt;code&gt;bar&lt;/code&gt; 和 &lt;code&gt;baz&lt;/code&gt; git存储库。此外，您可以输入：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
