<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/houston/">
    <body>
      <group id="houston">
        <trans-unit id="38245b727e0bb71499e2005c0d16ec68f341a7de" translate="yes" xml:space="preserve">
          <source>, but when deployed it will be prefixed and versioned
appropriately as</source>
          <target state="translated">，但是在部署时，它会被前缀和适当地版本化为</target>
        </trans-unit>
        <trans-unit id="52ab2ff563ae04129c6123312667326462818f61" translate="yes" xml:space="preserve">
          <source>Application deployment on CoreOS clusters using fleetd and Consul</source>
          <target state="translated">使用 fleetd 和 Consul 在 CoreOS 集群上进行应用部署。</target>
        </trans-unit>
        <trans-unit id="bdecc2a67cf0b6e62a8a73ac0a1e0028662296e3" translate="yes" xml:space="preserve">
          <source>Available at &lt;a href=&quot;https://houston.readthedocs.org/en/latest/history.html&quot;&gt;https://houston.readthedocs.org/en/latest/history.html&lt;/a&gt;</source>
          <target state="translated">可在&lt;a href=&quot;https://houston.readthedocs.org/en/latest/history.html&quot;&gt;https://houston.readthedocs.org/en/latest/history.html获得&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e94611fc543a36f09fd07c588917241dc9caeb5" translate="yes" xml:space="preserve">
          <source>Deployment Types</source>
          <target state="translated">部署类型</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="b1505038ce3dfc9e8bbcc056d0c7b395e0db4d3c" translate="yes" xml:space="preserve">
          <source>Documentation is available on &lt;a href=&quot;https://houston.readthedocs.org/en/latest&quot;&gt;ReadTheDocs&lt;/a&gt;.</source>
          <target state="translated">可在&lt;a href=&quot;https://houston.readthedocs.org/en/latest&quot;&gt;ReadTheDocs&lt;/a&gt;上找到文档。</target>
        </trans-unit>
        <trans-unit id="894ab23a678cace4784db9d25fff7bb2124e0ada" translate="yes" xml:space="preserve">
          <source>Easy docker stack deployment to &lt;a href=&quot;https://coreos.com&quot;&gt;CoreOS&lt;/a&gt; clusters using
&lt;a href=&quot;http://github.com/coreos/fleet&quot;&gt;Fleet&lt;/a&gt; and &lt;a href=&quot;https://www.consul.io&quot;&gt;Consul&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;http://github.com/coreos/fleet&quot;&gt;Fleet&lt;/a&gt;和&lt;a href=&quot;https://www.consul.io&quot;&gt;Consul&lt;/a&gt;轻松将docker stack部署到&lt;a href=&quot;https://coreos.com&quot;&gt;CoreOS&lt;/a&gt;集群 。</target>
        </trans-unit>
        <trans-unit id="11b3dc4a591837114646330975ae2790b7eefdc5" translate="yes" xml:space="preserve">
          <source>Example of deploying a full stack application:</source>
          <target state="translated">部署全栈应用程序的例子。</target>
        </trans-unit>
        <trans-unit id="ac65c26e0ed8195ab1347dcf9130cd9bc4a0992c" translate="yes" xml:space="preserve">
          <source>Finally it will check to see if any other file archive versions exist in Consul&amp;rsquo;s for the
service, removing them if so.</source>
          <target state="translated">最后，它将检查该服务的Consul中是否存在其他文件归档版本，如果存在，则将其删除。</target>
        </trans-unit>
        <trans-unit id="0d18e336310c0c00d6717631dd579c486549ba8f" translate="yes" xml:space="preserve">
          <source>Global deployments place a single list of units intended to be shared across all or a majority of CoreOS instances.</source>
          <target state="translated">全局部署放置了一个打算在所有或大多数CoreOS实例中共享的单一单元列表。</target>
        </trans-unit>
        <trans-unit id="dd1b97a65f86a5a7c2fbe690dbea2e317ce7bd38" translate="yes" xml:space="preserve">
          <source>Global file deployments happen after the unit files are deployed so that Consul can be up and running prior to the placement of the global files.</source>
          <target state="translated">全局文件部署发生在单元文件部署之后,这样Consul可以在放置全局文件之前启动并运行。</target>
        </trans-unit>
        <trans-unit id="d915d898671cb872755e692606d5aae86f7045a8" translate="yes" xml:space="preserve">
          <source>Houston deployments allow for files to be placed onto the host OS, the deployment
of dependency containers, confirmed startup of a container using Consul, and
teardown of previous container versions in a single run.</source>
          <target state="translated">休斯顿部署允许将文件放置到主机操作系统上,部署依赖性容器,使用Consul确认启动容器,并在一次运行中拆除以前的容器版本。</target>
        </trans-unit>
        <trans-unit id="fdf858e6048c741f049a5e0e8f7918b92e78fffa" translate="yes" xml:space="preserve">
          <source>Houston has 3 deployment types: global, standalone stacks, and services. All three types allow for file archive deployments &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; using a &lt;a href=&quot;http://cloudinit.readthedocs.org/en/latest/topics/examples.html#writing-out-arbitrary-files&quot;&gt;cloud-init style&lt;/a&gt;</source>
          <target state="translated">休斯顿具有3种部署类型：全局，独立堆栈和服务。这三种类型都允许使用&lt;a href=&quot;http://cloudinit.readthedocs.org/en/latest/topics/examples.html#writing-out-arbitrary-files&quot;&gt;cloud-init样式&lt;/a&gt;进行文件归档部署&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="596b987ac49a252dfbae6525a1bd8d4bf2703de2" translate="yes" xml:space="preserve">
          <source>Houston installs as a command-line application and is meant to be used for automated
deployment of Dockerized application stacks.</source>
          <target state="translated">Houston以命令行应用程序的形式安装,旨在用于自动部署Docker化的应用程序堆栈。</target>
        </trans-unit>
        <trans-unit id="a9a53042ec40cfa18cad56e1adbd41ee36064908" translate="yes" xml:space="preserve">
          <source>Houston may be installed via the &lt;a href=&quot;http://pypi.python.org&quot;&gt;Python package index&lt;/a&gt;
with the tool of your choice:</source>
          <target state="translated">可以使用 您选择的工具通过&lt;a href=&quot;http://pypi.python.org&quot;&gt;Python软件包索引&lt;/a&gt;安装Houston ：</target>
        </trans-unit>
        <trans-unit id="e853d821e4f4a1979f71f722f8d7e55432a619c6" translate="yes" xml:space="preserve">
          <source>In the next step, it iterates through the dependency containers specified in the
&lt;a href=&quot;examples/manifest.yaml&quot;&gt;manifest&lt;/a&gt;, submitting and starting each unit, waiting
until a unit is listed as</source>
          <target state="translated">在下一步中，遍历&lt;a href=&quot;examples/manifest.yaml&quot;&gt;清单&lt;/a&gt;中指定的依赖容器 ，提交并启动每个单元，直到将一个单元列出为</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="04405a7c90e09db56f844bcb748145bdb39aa2bc" translate="yes" xml:space="preserve">
          <source>Once a deployment has been confirmed, it looks at all units submitted to fleet,
checking to see if there are other versions of containers running than what it deployed.
If so, it will destroy those other containers with fleet.</source>
          <target state="translated">一旦部署被确认,它就会查看所有提交给舰队的单位,检查是否有其他版本的容器在运行,而不是它所部署的容器。如果有,它将用fleet销毁这些其他容器。</target>
        </trans-unit>
        <trans-unit id="f2868da3e2e00839915b99c527d68e0097c13a06" translate="yes" xml:space="preserve">
          <source>One of the more interesting parts for managing stack deployment is the namespacing
of the shared stack elements in fleet, so that updating one stack does not impact
another.  For example, in the configuration, a service may be referred to as only</source>
          <target state="translated">对于管理堆栈部署来说,比较有趣的一个部分是fleet中共享堆栈元素的命名间距,这样更新一个堆栈不会影响另一个堆栈。例如,在配置中,一个服务可能被称为只有</target>
        </trans-unit>
        <trans-unit id="7591e2557f5b316fd9e46ab50ab05186329ab88f" translate="yes" xml:space="preserve">
          <source>One the dependency containers have started, it starts the example service,
waiting for systemd to report it as active. It then queries Consul for the version
of the service that has started, ensuring that it is running on all the expected
nodes that fleet says it has deployed it to.</source>
          <target state="translated">依赖容器启动后,它就会启动示例服务,等待systemd报告它已激活。然后,它会查询Consul,以获取已经启动的服务的版本,确保它运行在fleet所说的所有预期节点上。</target>
        </trans-unit>
        <trans-unit id="b61da4027470165f200d2f48fd4338c1e9eacd91" translate="yes" xml:space="preserve">
          <source>Service deployments allow for the deployment of a single unit and the shared units that it is dependent upon</source>
          <target state="translated">服务部署允许部署一个单位和它所依赖的共享单位。</target>
        </trans-unit>
        <trans-unit id="c87fcbaadf0e9e794a475fa0d2aadc3453eda2fc" translate="yes" xml:space="preserve">
          <source>Standalone deployments are like the global deployment but allows for more targeted deployments with file archives deployed first.</source>
          <target state="translated">独立部署与全局部署一样,但允许更有针对性的部署,先部署文件存档。</target>
        </trans-unit>
        <trans-unit id="d5f5c5cf3d7169fecce2b6baf81298481412c56c" translate="yes" xml:space="preserve">
          <source>There is also an &lt;a href=&quot;example/&quot;&gt;example configuration directory&lt;/a&gt;.</source>
          <target state="translated">还有一个&lt;a href=&quot;example/&quot;&gt;示例配置目录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="6974ab729b6242600700a81b1ec6d4d1a48c0a94" translate="yes" xml:space="preserve">
          <source>Version History</source>
          <target state="translated">版本历史</target>
        </trans-unit>
        <trans-unit id="3c899de050479c961ded04ad94f796075ca4500c" translate="yes" xml:space="preserve">
          <source>When executed, houston creates a tarball of files from the &lt;a href=&quot;example/files/blog.yaml&quot;&gt;service&amp;rsquo;s file manifest&lt;/a&gt;
and uploads it to Consul&amp;rsquo;s KV database. It then deploys a dynamically created systemd unit to fleet,
which pulls the tarball from Consul and extracts the files to the CoreOS filesystem.</source>
          <target state="translated">执行后，休斯顿从&lt;a href=&quot;example/files/blog.yaml&quot;&gt;服务的文件清单&lt;/a&gt;创建文件的压缩文件 ，并将其上传到Consul的KV数据库。然后，它将动态创建的systemd单元部署到舰队，后者从Consul中提取压缩包并将文件提取到CoreOS文件系统中。</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">积极</target>
        </trans-unit>
        <trans-unit id="c3499c2729730a7f807efb8676a92dcb6f8a3f8f" translate="yes" xml:space="preserve">
          <source>example</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="205dd4ef9311500de0ce2291cef0447100e5e940" translate="yes" xml:space="preserve">
          <source>example-pgbouncer@f20fb494</source>
          <target state="translated">example-gbouncer@f20fb494</target>
        </trans-unit>
        <trans-unit id="70e5f9c3e8c08234e91824be06e05d68e5183784" translate="yes" xml:space="preserve">
          <source>if the service name is</source>
          <target state="translated">如果服务名称是</target>
        </trans-unit>
        <trans-unit id="1de40ee66424c4cb67cb695f02321951e7202087" translate="yes" xml:space="preserve">
          <source>in systemd for all nodes, and then
moves on to the next.</source>
          <target state="translated">中的所有节点,然后再进入下一个节点。</target>
        </trans-unit>
        <trans-unit id="532374162760e6313b7f7546a8e6ebaaacfecf6c" translate="yes" xml:space="preserve">
          <source>pgbouncer:f20fb494</source>
          <target state="translated">pgbouncer:f20fb494</target>
        </trans-unit>
        <trans-unit id="9367e446b1460653788bd97ed548b89ec0ccad68" translate="yes" xml:space="preserve">
          <source>section.</source>
          <target state="translated">节。</target>
        </trans-unit>
        <trans-unit id="a0fad99be8b9e5cdbaf6d0ced63d55c59ee3d58f" translate="yes" xml:space="preserve">
          <source>write_files</source>
          <target state="translated">write_files</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
