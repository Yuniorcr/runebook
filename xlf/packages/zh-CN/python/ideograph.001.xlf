<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/ideograph/">
    <body>
      <group id="ideograph">
        <trans-unit id="f951e9f0e304861b37a3584177f3ae3fac30bf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components()&lt;/code&gt; takes a string consisting of a single ideograph and returns a set of components. Note that the set contains components and the components of those components, and so on, down to the most basic of components contained in the cjkvi-ids data set.</source>
          <target state="translated">&lt;code&gt;components()&lt;/code&gt; 接受由单个表意文字组成的字符串，并返回一组组件。请注意，该集合包含组件以及这些组件的组件，依此类推，直到cjkvi-ids数据集中包含的最基本组件。</target>
        </trans-unit>
        <trans-unit id="d9be964882a94e05a3310541771e3d3fe2e33a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; takes a string of ideograph components and returns a set of ideographs that include all of those components.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; 接受一系列表意文字成分，并返回包含所有这些表意成分的一组表意文字。</target>
        </trans-unit>
        <trans-unit id="2cfd971a0fb1e690969925eda14a7812157aed7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ideograph&lt;/em&gt; consists of a two functions, &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;components()&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;表意文字&lt;/em&gt;包含两个功能， &lt;code&gt;find()&lt;/code&gt; 和 &lt;code&gt;components()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d6b6863c58960962cd0c73a8496f9c353c64f83f" translate="yes" xml:space="preserve">
          <source>A tool to look up ideographs by their components. At the moment, it only contains Han characters, but it could be expanded to include other ideographic scripts such as Tangut or Sumero-Akkadian Cuneiform.</source>
          <target state="translated">一个按汉字部件查询汉字的工具。目前,它只包含汉字,但它可以扩展到包括其他表意文字,如唐古特或苏梅洛-阿卡迪亚楔形文字。</target>
        </trans-unit>
        <trans-unit id="aee20835eb757b407fe8ffeb5cce9b708f56d07b" translate="yes" xml:space="preserve">
          <source>Character components are derived from the &lt;a href=&quot;https://github.com/cjkvi/cjkvi-ids&quot;&gt;cjkvi-ids database&lt;/a&gt; (included in this Git repository as a submodule), specifically the &lt;code&gt;ids-cdp.txt&lt;/code&gt; data file. As some components do not currently have a Unicode code point assigned to them, they are given code points in the Private Use Area of Unicode. Note that because of this, some of these characters may be returned by the &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;components()&lt;/code&gt; functions.</source>
          <target state="translated">字符组件来自&lt;a href=&quot;https://github.com/cjkvi/cjkvi-ids&quot;&gt;cjkvi-ids数据库&lt;/a&gt;（作为子模块包含在此Git存储库中），特别是 &lt;code&gt;ids-cdp.txt&lt;/code&gt; 数据文件。由于某些组件当前未分配有Unicode代码点，因此在Unicode的&amp;ldquo;专用区域&amp;rdquo;中为它们指定了代码点。请注意，因此， &lt;code&gt;find()&lt;/code&gt; 和 &lt;code&gt;components()&lt;/code&gt; 函数可能会返回其中一些字符。</target>
        </trans-unit>
        <trans-unit id="3042174ed567a090fa6e65e478e24e03b2d20924" translate="yes" xml:space="preserve">
          <source>Characters in the component string that are not ideographic components are ignored.</source>
          <target state="translated">组件字符串中不属于表意组件的字符将被忽略。</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">数据</target>
        </trans-unit>
        <trans-unit id="fbcc69c0fd1d2dada1f58a486d7540c81449f9aa" translate="yes" xml:space="preserve">
          <source>Data is stored in a sqlite3 database, which can be regenerated from cjkvi-ids data by running the &lt;code&gt;generate_data.py&lt;/code&gt; script.</source>
          <target state="translated">数据存储在sqlite3数据库中，可以通过运行 &lt;code&gt;generate_data.py&lt;/code&gt; 脚本从cjkvi-ids数据中重新生成该数据库。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="be6a8c385922225375429483cdc09541194ab325" translate="yes" xml:space="preserve">
          <source>It can be called from the command line:</source>
          <target state="translated">它可以从命令行调用。</target>
        </trans-unit>
        <trans-unit id="bfbb2b604842904f987d9768e1ae89b880db39d3" translate="yes" xml:space="preserve">
          <source>Note that the current implementation is quite strict and relies on visual distinction for components rather than etymological connection: e.g. &quot;人&quot; &amp;ne; &quot;亻&quot;.</source>
          <target state="translated">注意，当前的实现是非常严格的，并且依赖于组件的视觉区别而不是词源上的联系：例如&amp;ldquo;人&amp;rdquo;&amp;ne;&amp;ldquo;亻&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="11141e2ad56bd29ac7c701f8f9d4aa808a94d6bf" translate="yes" xml:space="preserve">
          <source>Tool for finding ideographic (e.g. Han) characters from their components</source>
          <target state="translated">汉字查字工具</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="214af5f0cce6999498fed75161d1c3f685c02360" translate="yes" xml:space="preserve">
          <source>ideograph</source>
          <target state="translated">表意文字</target>
        </trans-unit>
        <trans-unit id="9361b7cf849e47ee0b472930362cb398eb6d28f2" translate="yes" xml:space="preserve">
          <source>or imported as a Python package:</source>
          <target state="translated">或作为Python包导入。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
