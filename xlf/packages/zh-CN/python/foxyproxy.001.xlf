<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/foxyproxy/">
    <body>
      <group id="foxyproxy">
        <trans-unit id="cf7a1017396fa857ee4613e245b8a909033d9304" translate="yes" xml:space="preserve">
          <source>*Note: each request to the RESTful API has to hav an X-Auth-Token header. The secrets
are defined in the configuration of each CloudFoxy RESTful server.</source>
          <target state="translated">*注意：对RESTful API的每个请求都必须具有X-Auth-Token标头。在每个CloudFoxy RESTful服务器的配置中定义了机密。</target>
        </trans-unit>
        <trans-unit id="ff592baf8e9ca1f3b3f9e9ce157b90370f204f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;supervisorctl&lt;/code&gt; - is a client, which shows status of processes - it has commands like:</source>
          <target state="translated">&lt;code&gt;supervisorctl&lt;/code&gt; -是一个客户端，它显示进程状态-它具有以下命令：</target>
        </trans-unit>
        <trans-unit id="dd30e788d498e033c2164e4125483076fc918d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;systemctl enable supervisord&lt;/code&gt;   # auto restart after reboot</source>
          <target state="translated">&lt;code&gt;systemctl enable supervisord&lt;/code&gt; 重启后＃自动重启</target>
        </trans-unit>
        <trans-unit id="6950c319b6191db2123c0747c7b331b76f2e5a95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 1 - abstrakt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;示例1-抽象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0168f2c9e97bce8218dc6e420229671e9d37756c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;例子2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="caefa69cabf4ebb2b0bb7c7a87d7ae6d90090796" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 3&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;例子3&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c98e8ad0e12efeb51cdfa176f868a965e5ce502" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;with a subsequent response to this request:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;对此请求的后续回复：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6177601921d2257c5c02f27d7b60d94f793ea852" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;with a subsequent response&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;随后的回应&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb5db5e74ed3720058c4e5b0517a807ddcb44517" translate="yes" xml:space="preserve">
          <source>ALIASES - return a list of names from certificates in connected smartcards,
names are base64 encoded as they may
contain utf-8 characters; names are separated with &quot;|&quot;</source>
          <target state="translated">ALIASES-返回连接的智能卡中的证书名称列表,名称是base64编码的,因为它们可能包含utf-8字符;名称用&quot;|&quot;分隔。</target>
        </trans-unit>
        <trans-unit id="f74c5f0f6f7078e86d5d8796a4a1470e11ce4348" translate="yes" xml:space="preserve">
          <source>APDU - send a command according to ISO7816 specifications</source>
          <target state="translated">APDU--根据ISO7816规范发送命令。</target>
        </trans-unit>
        <trans-unit id="f7e56668dacb4544373d5976bb71c05ee0533181" translate="yes" xml:space="preserve">
          <source>Assuming the RESTful API is running at the &lt;em&gt;&lt;a href=&quot;http://restful.cloudfoxy.com:8081&quot;&gt;http://restful.cloudfoxy.com:8081&lt;/a&gt;&lt;/em&gt;
address.</source>
          <target state="translated">假设RESTful API正在&lt;em&gt;&lt;a href=&quot;http://restful.cloudfoxy.com:8081&quot;&gt;http://restful.cloudfoxy.com:8081&lt;/a&gt;&lt;/em&gt; 地址上运行。</target>
        </trans-unit>
        <trans-unit id="2611768dd39cf743ae64aa96d9076b29ce693bed" translate="yes" xml:space="preserve">
          <source>CHAIN - return certificate chain for a particular alias</source>
          <target state="translated">CHAIN-返回某个别名的证书链。</target>
        </trans-unit>
        <trans-unit id="c954a3473b10bdc1fb63fede669bdb2bbdd7322b" translate="yes" xml:space="preserve">
          <source>Client -&amp;gt; foxyproxy</source>
          <target state="translated">客户-&amp;gt; foxyproxy</target>
        </trans-unit>
        <trans-unit id="1488f26f473956061fb16e9246c0c5552df1a113" translate="yes" xml:space="preserve">
          <source>CloudFoxy - FoxyProxy</source>
          <target state="translated">云狐-FoxyProxy</target>
        </trans-unit>
        <trans-unit id="ca4333190d550143c120d0a9599d279081a51dfa" translate="yes" xml:space="preserve">
          <source>CloudFoxy RESTful - Other Endpoints</source>
          <target state="translated">CloudFoxy RESTful-其他端点</target>
        </trans-unit>
        <trans-unit id="25d27d549344dfd3bb218f7b3dba3695f27498f9" translate="yes" xml:space="preserve">
          <source>CloudFoxy RESTful -&amp;gt; foxyproxy</source>
          <target state="translated">CloudFoxy RESTful-&amp;gt; foxyproxy</target>
        </trans-unit>
        <trans-unit id="c665e4685e53c427b5394aaa701ec59f3564c7ce" translate="yes" xml:space="preserve">
          <source>CloudFoxy RESTful returns a response to each of the GET requests, which will be
a simple text response if the &lt;code&gt;/api/v1/basic&lt;/code&gt; endpoint is used.</source>
          <target state="translated">CloudFoxy RESTful返回对每个GET请求的响应，如果使用 &lt;code&gt;/api/v1/basic&lt;/code&gt; 端点，则该响应将是简单的文本响应。</target>
        </trans-unit>
        <trans-unit id="223909583dc63f0a2dc802a9f1c1be04fdf46078" translate="yes" xml:space="preserve">
          <source>CloudFoxy Smartcards</source>
          <target state="translated">云狐智能卡</target>
        </trans-unit>
        <trans-unit id="e4574b4431b7ba7234008f579d1a84da2277fa22" translate="yes" xml:space="preserve">
          <source>CloudFoxy can interface smartcards connected via USB ports - as shown in the
example above, butthe primary reason why we built it was to provide a convenient
interface to the CloudFoxy hardware platform, which can host up to 120 smartcards.</source>
          <target state="translated">CloudFoxy可以连接通过USB端口连接的智能卡--如上例所示,但我们构建它的主要原因是为CloudFoxy硬件平台提供一个方便的接口,该平台最多可容纳120张智能卡。</target>
        </trans-unit>
        <trans-unit id="b8949f2b56f1a9cb498d20583e0be0afcbb278c8" translate="yes" xml:space="preserve">
          <source>CloudFoxy server</source>
          <target state="translated">CloudFoxy服务器</target>
        </trans-unit>
        <trans-unit id="8171a9373981f90906c44b680653c8a3bda79961" translate="yes" xml:space="preserve">
          <source>EMPTYLINE - a helper command that will make the proxy wait for an empty new line to finish listening to the client</source>
          <target state="translated">EMPTYLINE-一个辅助命令,它将使代理等待一个空的新行来完成对客户端的监听。</target>
        </trans-unit>
        <trans-unit id="7907003999593f939c465625925eac4401eb6f14" translate="yes" xml:space="preserve">
          <source>ENUM - return a list of smart-card readers with valid signing certificates - names of readers are base64
encoded, separated with &quot;|&quot;</source>
          <target state="translated">ENUM-返回一个具有有效签名证书的智能卡读卡器列表-读卡器的名称是base64编码,用&quot;|&quot;分隔</target>
        </trans-unit>
        <trans-unit id="54206d8b4b291cff230e30c3f97edc03de55ff57" translate="yes" xml:space="preserve">
          <source>Each request consists of at least 2 lines:</source>
          <target state="translated">每项请求至少由两行组成。</target>
        </trans-unit>
        <trans-unit id="6f2740cd075557569830447006bbd4855888245a" translate="yes" xml:space="preserve">
          <source>End-to-End Dataflow Example</source>
          <target state="translated">端到端数据流示例</target>
        </trans-unit>
        <trans-unit id="8fdb5d77c0ea69e962db331c0331d4ccd1f6e481" translate="yes" xml:space="preserve">
          <source>External dependencies</source>
          <target state="translated">外部依赖性</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="4fabd31668195edb5125718d8d665e8e1347e73c" translate="yes" xml:space="preserve">
          <source>Install supervisor for automatic restarts</source>
          <target state="translated">为自动重启安装监控程序</target>
        </trans-unit>
        <trans-unit id="2fed6cca1c573eff620eb03ca4a11854f68dea51" translate="yes" xml:space="preserve">
          <source>Install the application</source>
          <target state="translated">安装应用程序</target>
        </trans-unit>
        <trans-unit id="1fd7d88c2c3ec80e82b4f368ab1a838ca2ef3124" translate="yes" xml:space="preserve">
          <source>LIST - return a list of all smart-card readers - names of readers are base64 encoded, separated with &quot;|&quot;</source>
          <target state="translated">LIST-返回一个所有智能卡读卡器的列表-读卡器的名称是base64编码的,用&quot;|&quot;分隔。</target>
        </trans-unit>
        <trans-unit id="c5f70fff6b5d3257cecc5cd3e4dad9188a2e08ea" translate="yes" xml:space="preserve">
          <source>RESET - reset a particular smartcard</source>
          <target state="translated">重置-重置某张智能卡</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">要求</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">应对措施</target>
        </trans-unit>
        <trans-unit id="813583cbd954b87db0255a5d720c6d5e0fbc2e6f" translate="yes" xml:space="preserve">
          <source>Restart the supervisor:</source>
          <target state="translated">重新启动主管。</target>
        </trans-unit>
        <trans-unit id="bc80d25d3210b5825916cd4587e370c1ab02dc28" translate="yes" xml:space="preserve">
          <source>SIGN - request a signature from a particular smartcard</source>
          <target state="translated">SIGN-向特定的智能卡申请签名。</target>
        </trans-unit>
        <trans-unit id="2cc1f218515a34d92377971aee499e3b920861d3" translate="yes" xml:space="preserve">
          <source>TCP Commands</source>
          <target state="translated">TCP命令</target>
        </trans-unit>
        <trans-unit id="fb202101663918cc6b574209279f34bb324f5357" translate="yes" xml:space="preserve">
          <source>TCP Interface</source>
          <target state="translated">TCP接口</target>
        </trans-unit>
        <trans-unit id="35b94c11da57b8dc2c487ab3ba80637ccb20198d" translate="yes" xml:space="preserve">
          <source>TCP clients can send multiple commands over a period of time as the server keeps
connections opened until its clients close them.</source>
          <target state="translated">TCP客户端可以在一段时间内发送多条命令,因为服务器会一直打开连接,直到其客户端关闭连接。</target>
        </trans-unit>
        <trans-unit id="6d4e1a4fb197744fa39c1fa8f7141d70282f4f07" translate="yes" xml:space="preserve">
          <source>TCP proxy will combine the responses and send all in one message back to the client:</source>
          <target state="translated">TCP代理会将响应合并,并将所有的消息全部发回给客户端。</target>
        </trans-unit>
        <trans-unit id="1610ec8d0e81a955e313ce2eecb2cf9f5036ea55" translate="yes" xml:space="preserve">
          <source>TCP/RESTful proxy for Cloud Foxy - cloud platform for smart cards</source>
          <target state="translated">Cloud Foxy--智能卡云平台的TCP/RESTful代理。</target>
        </trans-unit>
        <trans-unit id="a5858e2659d4f58857361200998ceb033a968655" translate="yes" xml:space="preserve">
          <source>The CloudFoxy RESTful server can connect to a multiple of them and provide access
to thousands of smartcards.</source>
          <target state="translated">CloudFoxy RESTful服务器可以连接到其中的多个,并提供对成千上万张智能卡的访问。</target>
        </trans-unit>
        <trans-unit id="ec613bd2ae907fdef67e103e3a15e29b79668c69" translate="yes" xml:space="preserve">
          <source>The CloudFoxy smartcards have the following name format:</source>
          <target state="translated">CloudFoxy智能卡的名称格式如下。</target>
        </trans-unit>
        <trans-unit id="daddf5097b7a3f871618494154a601632b9e6a5c" translate="yes" xml:space="preserve">
          <source>The TCP interface of the proxy starts listening on port 4001. The port can be
adjusted with a command line parameter &lt;code&gt;-p&amp;lt;port&amp;gt;&lt;/code&gt;. Similarly, the address of the
RESTful server can be set with the &lt;code&gt;-s&amp;lt;url:port&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">代理的TCP接口开始在端口4001上侦听。可以使用命令行参数 &lt;code&gt;-p&amp;lt;port&amp;gt;&lt;/code&gt; 调整该端口。同样，可以使用 &lt;code&gt;-s&amp;lt;url:port&amp;gt;&lt;/code&gt; 设置RESTful服务器的地址。</target>
        </trans-unit>
        <trans-unit id="d636565ebc0d7d7579a89b3a0f309dc862d02580" translate="yes" xml:space="preserve">
          <source>The first line creates a regular expression for selecting a set of card readers,
the optional numerical parameter of the ENUM command limits the number of terminals
returned to the client.</source>
          <target state="translated">第一行创建一个正则表达式,用于选择一组读卡器,ENUM命令的可选数字参数限制了返回给客户端的终端数量。</target>
        </trans-unit>
        <trans-unit id="fd6f8c96684697078cbd1028991848d1f8c57bd1" translate="yes" xml:space="preserve">
          <source>The first three are low-level commands, either directly sent to smartcards, or
just return a list of smartcard names. The ALIASES, CHAIN and
SIGN are abstract commands tailored to particular smartcards - eIDAS smartcards
sold by [http://ica.cz](I.CA - a Czech company). They show how the API can be
extended, although the CloudFoxy RESTful API also allows definitions of abstract
commands via protocols defines with a simple JSON notation.</source>
          <target state="translated">前三个是低级命令,可以直接发送到智能卡上,也可以只返回一个智能卡名称的列表。ALIASES、CHAIN和SIGN是为特定智能卡定制的抽象命令--由[http://ica.cz](I.CA--一家捷克公司)销售的eIDAS智能卡。它们展示了如何扩展 API,尽管 CloudFoxy RESTful API 也允许通过使用简单的 JSON 符号定义协议来定义抽象命令。</target>
        </trans-unit>
        <trans-unit id="cfa0da2eb1c0fbcad1f3fd0b9a070db4aedd24ab" translate="yes" xml:space="preserve">
          <source>There are currently four commands implemented for the TCP interface:</source>
          <target state="translated">目前,TCP接口共实现了四个命令。</target>
        </trans-unit>
        <trans-unit id="a3181d85d9763b16e7e3eb93b720d95348ef80d0" translate="yes" xml:space="preserve">
          <source>There are two requests above, they may provide separate responses, which look like:</source>
          <target state="translated">上面有两个请求,它们可能会提供单独的回复,这样子。</target>
        </trans-unit>
        <trans-unit id="dcbf67e284c0c8f129ffea67c9b9259dddfa87d9" translate="yes" xml:space="preserve">
          <source>This is a side note about other options for using CloudFoxy RESTful. If you use</source>
          <target state="translated">这是对使用 CloudFoxy RESTful 的其他选项的补充说明。如果您使用</target>
        </trans-unit>
        <trans-unit id="199da6fb37a6cc6cefc9721fb9adb26771b542b0" translate="yes" xml:space="preserve">
          <source>This proxy connects clients implementing simple TCP requests with the CloudFoxy
RESTful API. You can send any support request via GitLab issues or open a
support ticket at
&lt;a href=&quot;https://keychest.freshdesk.com/support/tickets/new&quot;&gt;https://keychest.freshdesk.com&lt;/a&gt;</source>
          <target state="translated">该代理使用CloudFoxy RESTful API连接实现简单TCP请求的客户端。您可以通过GitLab问题发送任何支持请求，也可以在&lt;a href=&quot;https://keychest.freshdesk.com/support/tickets/new&quot;&gt;https://keychest.freshdesk.com上&lt;/a&gt;打开支持通知单。</target>
        </trans-unit>
        <trans-unit id="a365f4d4b3c35329b6c5a7f81ca58c9d948fcd84" translate="yes" xml:space="preserve">
          <source>While a detailed description of the CloudFoxy RESTful API can be found
&lt;a href=&quot;https://gitlab.com/cloudfoxy/RESTfulFoxy&quot;&gt;here&lt;/a&gt;, it makes sense to demonstrate the
whole dataflow, which compromises:</source>
          <target state="translated">尽管可以在&lt;a href=&quot;https://gitlab.com/cloudfoxy/RESTfulFoxy&quot;&gt;此处&lt;/a&gt;找到有关CloudFoxy RESTful API的详细描述 ，但演示整个数据流还是有道理的，这有损于以下方面：</target>
        </trans-unit>
        <trans-unit id="b19f5365f78319221d712850bd0ced1be3fb2faf" translate="yes" xml:space="preserve">
          <source>You can adjust parameters as required.</source>
          <target state="translated">您可以根据需要调整参数。</target>
        </trans-unit>
        <trans-unit id="5c6cf7d46eca95f8efdfee417ed8a1e2952d3fa9" translate="yes" xml:space="preserve">
          <source>and create folder &lt;code&gt;/opt/cloudfoxy&lt;/code&gt;, where we can store or related files and data</source>
          <target state="translated">并创建文件夹 &lt;code&gt;/opt/cloudfoxy&lt;/code&gt; ，我们可以在其中存储或相关文件和数据</target>
        </trans-unit>
        <trans-unit id="f1f48940ad2a3d2b4edb7991524436b595b2714a" translate="yes" xml:space="preserve">
          <source>and fill it with the following contents</source>
          <target state="translated">并填入以下内容</target>
        </trans-unit>
        <trans-unit id="d6d7cb3efd10c38df830bdd382d6ce1d86c356f9" translate="yes" xml:space="preserve">
          <source>card reader identification</source>
          <target state="translated">读卡器</target>
        </trans-unit>
        <trans-unit id="b7cd151b67e46c63b25df6cd67b7dc6a1e61c40d" translate="yes" xml:space="preserve">
          <source>find a line with &lt;em&gt;inet_http_server&lt;/em&gt; and uncomment it (the section name), and the
first line, which is something like &quot;port=127.0.0.1:9001&quot;</source>
          <target state="translated">找到包含&lt;em&gt;inet_http_server&lt;/em&gt;的行，并取消注释（节名称），然后取消注释第一行，例如&amp;ldquo; port = 127.0.0.1：9001&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4f482f7b134839dca6bf1095a3ef069bfa418849" translate="yes" xml:space="preserve">
          <source>foxyproxy</source>
          <target state="translated">狐狸精</target>
        </trans-unit>
        <trans-unit id="8b0c4200fa1d26a2a59812000b30fda7e42500be" translate="yes" xml:space="preserve">
          <source>foxyproxy -&amp;gt; CloudFoxy RESTful</source>
          <target state="translated">foxyproxy-&amp;gt; CloudFoxy RESTful</target>
        </trans-unit>
        <trans-unit id="fca375ea00ba9c7605257aebfb8a367e54df64ab" translate="yes" xml:space="preserve">
          <source>foxyproxy -&amp;gt; client</source>
          <target state="translated">foxyproxy-&amp;gt;客户端</target>
        </trans-unit>
        <trans-unit id="11a705eff49a1ec39b858a2eab39e47bc36c0da3" translate="yes" xml:space="preserve">
          <source>one or more commands - each in a separate line</source>
          <target state="translated">一条或多条命令--每条命令单独成行</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="066ceadebbddd6b37d84eabf17c817e0f43bcbec" translate="yes" xml:space="preserve">
          <source>reload  # loads the new configuration to use for future commands</source>
          <target state="translated">reload#加载新的配置,供以后的命令使用。</target>
        </trans-unit>
        <trans-unit id="137991e58757a17990db9387844cf1cc0ecaac1f" translate="yes" xml:space="preserve">
          <source>reread  # reads configuration files and shows changes</source>
          <target state="translated">reread#读取配置文件并显示更改。</target>
        </trans-unit>
        <trans-unit id="fbd443d0c53426af9e7cc2bf745cd53523350382" translate="yes" xml:space="preserve">
          <source>response 1: &lt;code&gt;6F048400A5009000&lt;/code&gt;</source>
          <target state="translated">回应1： &lt;code&gt;6F048400A5009000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="853109a8806128440e49f2bc4c1cc564fc1c4629" translate="yes" xml:space="preserve">
          <source>response 2: &lt;code&gt;9000&lt;/code&gt;</source>
          <target state="translated">回应2： &lt;code&gt;9000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f74abff9ddd6093c61927206cf5cdebe7c662d8e" translate="yes" xml:space="preserve">
          <source>restart &amp;lt;name&amp;gt;</source>
          <target state="translated">重新启动&amp;lt;名称&amp;gt;</target>
        </trans-unit>
        <trans-unit id="187f5b60d6a0a95498de266f4d86280c0f60e3d6" translate="yes" xml:space="preserve">
          <source>start &amp;lt;name&amp;gt;</source>
          <target state="translated">开始&amp;lt;名称&amp;gt;</target>
        </trans-unit>
        <trans-unit id="041a94fd862b6da4d6e8065f43a795f8e0745cda" translate="yes" xml:space="preserve">
          <source>stop &amp;lt;name&amp;gt;</source>
          <target state="translated">停止&amp;lt;名称&amp;gt;</target>
        </trans-unit>
        <trans-unit id="35e51bb08c6629204295fbb3f6b0688fbd47fe9c" translate="yes" xml:space="preserve">
          <source>sudo yum install gcc libffi-devel python-devel openssl-devel</source>
          <target state="translated">sudo yum install gcc libffi-devel python-devel openssl-devel。</target>
        </trans-unit>
        <trans-unit id="f3573c0d5c002d5a2e0ec3d4767db480f52fd289" translate="yes" xml:space="preserve">
          <source>which is an enriched format of a geeky &lt;code&gt;/&amp;lt;IP address&amp;gt; |&quot;@&quot;|&amp;lt;id&amp;gt;&lt;/code&gt;, e.g., &lt;code&gt;/192.168.42.10@120&lt;/code&gt;</source>
          <target state="translated">这是怪异的 &lt;code&gt;/&amp;lt;IP address&amp;gt; |&quot;@&quot;|&amp;lt;id&amp;gt;&lt;/code&gt; 的丰富格式，例如 &lt;code&gt;/192.168.42.10@120&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05bdf87d2dc3f4e5c855ad6be4887781284de56b" translate="yes" xml:space="preserve">
          <source>your application / telnet / script / APDUPlay (a Windows PC/SC library)</source>
          <target state="translated">您的应用程序/telnet/脚本/APDUPlay(一个Windows PC/SC库)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
