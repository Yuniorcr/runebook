<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/epyper/">
    <body>
      <group id="epyper">
        <trans-unit id="e9fc6c90630dee1ca44c783f0ddc06ac77b4077e" translate="yes" xml:space="preserve">
          <source>![demo](https://raw.github.com/mnowotka/epyper/master/doc/demo.jpg)</source>
          <target state="translated">！[演示]（https://raw.github.com/mnowotka/epyper/master/doc/demo.jpg）</target>
        </trans-unit>
        <trans-unit id="98188a4b2257a4a6bdadac80de59b14a91744ca3" translate="yes" xml:space="preserve">
          <source>#create DisplayController instance specifying display type as an argument</source>
          <target state="translated">#create DisplayController实例，将显示类型指定为参数</target>
        </trans-unit>
        <trans-unit id="832f652ecbf0b8ed7eabbee3f8242505e8ba99a2" translate="yes" xml:space="preserve">
          <source>#display it!</source>
          <target state="translated">＃显示它！</target>
        </trans-unit>
        <trans-unit id="33262d34bf169ad3fbfd3de8b329d0f6d00e37fd" translate="yes" xml:space="preserve">
          <source>#necessary imports first</source>
          <target state="translated">＃首先需要进口</target>
        </trans-unit>
        <trans-unit id="65dc1f802c6bf92a365a1fe8daf2a0b36b5c3d7a" translate="yes" xml:space="preserve">
          <source>#open some image</source>
          <target state="translated">＃打开一些图片</target>
        </trans-unit>
        <trans-unit id="9687a4da1a7af1901e47170da64edf52196318fd" translate="yes" xml:space="preserve">
          <source>* [Pillow] (https://github.com/python-imaging/Pillow)</source>
          <target state="translated">* [枕头]（https://github.com/python-imaging/Pillow）</target>
        </trans-unit>
        <trans-unit id="8c4d0e3d4a3408a050d2fe0387d47408140596de" translate="yes" xml:space="preserve">
          <source>* [WiringPi2-Python] (https://github.com/WiringPi/WiringPi2-Python)</source>
          <target state="translated">* [WiringPi2-Python]（https://github.com/WiringPi/WiringPi2-Python）</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">依赖性</target>
        </trans-unit>
        <trans-unit id="5a3af79b01e7f107ad0671c6788a469b93f8e1ad" translate="yes" xml:space="preserve">
          <source>How to use it?</source>
          <target state="translated">如何使用它?</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="305fdbab0cd75f33867fe4fe39cf27c541d79241" translate="yes" xml:space="preserve">
          <source>It's based on original C code available here:</source>
          <target state="translated">它是基于原始的C代码,在这里可以找到。</target>
        </trans-unit>
        <trans-unit id="abf10d81a0ce7fe31f477cdbbd26eee950c95a2f" translate="yes" xml:space="preserve">
          <source>Python driver for Embedded Artists 2.7 inch E-paper Display Module</source>
          <target state="translated">用于Embedded Artists 2.7英寸电子纸显示模块的Python驱动。</target>
        </trans-unit>
        <trans-unit id="80efac87bae27acb2c0d56885aee5a23fe68c567" translate="yes" xml:space="preserve">
          <source>Python driver for Embedded Artists 2.7 inch E-paper Display Module:</source>
          <target state="translated">用于Embedded Artists 2.7英寸电子纸显示模块的Python驱动。</target>
        </trans-unit>
        <trans-unit id="98365abf7a35b55e3b549f20aa17daee9fe3c995" translate="yes" xml:space="preserve">
          <source>Rationale</source>
          <target state="translated">理由</target>
        </trans-unit>
        <trans-unit id="38f935460b570eb231b19d54243624b9b4db83ac" translate="yes" xml:space="preserve">
          <source>So you got your new shiny E-paper display from Embeded Artists. You plug it to your rPi to display some images. But how? Example C code is not very easy to adapt. All images included in C demo are written as byte tables in C header files. Function for displaying an image takes pointers to `int8_t`... In order to display new image you need to remember and old one. WTF!?!? You just wanted to display a png or jpg from your disk or web. And preferably do so in python. If that's your story then `epyper` is just for you.</source>
          <target state="translated">所以你从Embeded Artists那里得到了新的闪亮的E-paper显示器。你把它插到你的rPi上显示一些图像。但是怎么做呢?C代码的例子不是很容易适应。C演示中的所有图像都是以字节表的形式写在C头文件中。显示图像的函数需要指向`int8_t`的指针...。为了显示新图像,你需要记住旧图像。WTF!?你只是想从磁盘或网络上显示一个png或jpg。而且最好是用python来做。如果这是你的故事,那么`epyper`就是为你准备的。</target>
        </trans-unit>
        <trans-unit id="1e78c2f170ae5acbf4fe4ad500abec2ec8b07b4a" translate="yes" xml:space="preserve">
          <source>The best way to install epyper is to use `PIP`:</source>
          <target state="translated">安装epyper的最好方法是使用`PIP`。</target>
        </trans-unit>
        <trans-unit id="17b899bbb717deb94f0f9f69abfb51a834075036" translate="yes" xml:space="preserve">
          <source>This command will install latest stable version with all dependencies.</source>
          <target state="translated">该命令将安装最新的稳定版和所有的依赖关系。</target>
        </trans-unit>
        <trans-unit id="40ca49d22c9feff1ea79d3d6f8ce6ed916c07698" translate="yes" xml:space="preserve">
          <source>You can of course clone development version from github but it's not guaranteed to be working.</source>
          <target state="translated">当然你可以从github上克隆开发版,但不保证能用。</target>
        </trans-unit>
        <trans-unit id="ec54f87b7564b2a50c8ae7b2b76b22c9ee5ec3b8" translate="yes" xml:space="preserve">
          <source>[![Downloads](https://pypip.in/v/epyper/badge.png)](https://pypi.python.org/pypi/epyper)</source>
          <target state="translated">[！[下载]（https://pypip.in/v/epyper/badge.png）]（https://pypi.python.org/pypi/epyper）</target>
        </trans-unit>
        <trans-unit id="23242e7b4e9481c04a84855d098ac1d82f5e7c1d" translate="yes" xml:space="preserve">
          <source>`Epyper` provides high level python interface for displaying images on e-paper. The most important class is `DisplayController`, which provides `displayImg` method accepting PIL `Image` to be displayed. The image needs to have proper size. It doesn't necessary needs to be black and white only - color images will be converted but the effect may be dissapointing so it's better to provide b&amp;amp;w or convert it before handing it to the `DisplayController`.</source>
          <target state="translated">&amp;ldquo; Epyper&amp;rdquo;提供了高级python界面，用于在电子纸上显示图像。最重要的类是DisplayController，它提供了displayImg方法来接受要显示的PIL Image。图像必须具有适当的尺寸。不必只需要黑白图像-可以转换彩色图像，但是效果可能令人失望，因此最好在将其提供给DisplayController之前先提供b＆w或对其进行转换。</target>
        </trans-unit>
        <trans-unit id="96e0cb0e290a9a9f9b06c9901bd36e0b7a0dc05e" translate="yes" xml:space="preserve">
          <source>display = DisplayController(Display.EPD_TYPE_270)</source>
          <target state="translated">display=DisplayController(Display.EPD_TYPE_270)</target>
        </trans-unit>
        <trans-unit id="2d3f54d9c0e2e57e3f4e7635942659291cf2b039" translate="yes" xml:space="preserve">
          <source>display.displayImg(im)</source>
          <target state="translated">display.displayImg(im)</target>
        </trans-unit>
        <trans-unit id="a891e1b43db9aa6c303bb58d65cba5b6c5aa54ab" translate="yes" xml:space="preserve">
          <source>epyper</source>
          <target state="translated">epyper</target>
        </trans-unit>
        <trans-unit id="577941a5b353ae751cdcdd81d01debe2f03614d4" translate="yes" xml:space="preserve">
          <source>from PIL import Image</source>
          <target state="translated">从PIL导入Image</target>
        </trans-unit>
        <trans-unit id="51687601807d7761ad7aeabfa5cb85a817bc1e90" translate="yes" xml:space="preserve">
          <source>from epyper.displayCOGProcess import Display</source>
          <target state="translated">从epyper.displayCOGProcess导入Display。</target>
        </trans-unit>
        <trans-unit id="906a3c8ddcb18781c47775593a810c617030eb71" translate="yes" xml:space="preserve">
          <source>from epyper.displayController import DisplayController</source>
          <target state="translated">从epyper.displayController导入DisplayController。</target>
        </trans-unit>
        <trans-unit id="2dace4f0ab312bfe37650425c74b1cb9549b12f0" translate="yes" xml:space="preserve">
          <source>im = Image.open(&quot;some_image.png&quot;)</source>
          <target state="translated">im=Image.open(&quot;some_image.png&quot;)</target>
        </trans-unit>
        <trans-unit id="efb14e5c23d1f07efeba5e58fa35307dc403973a" translate="yes" xml:space="preserve">
          <source>pip install epyper</source>
          <target state="translated">pip install epyper</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
