<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pyasn/">
    <body>
      <group id="pyasn">
        <trans-unit id="46f42ce7f2f4e4535b87511a77fdcb78e0e64d0a" translate="yes" xml:space="preserve">
          <source>/usr/local/bin</source>
          <target state="translated">/ usr / local / bin</target>
        </trans-unit>
        <trans-unit id="fa5215c342a6fc8a68eb1dfcba3f7ef80c3b3f55" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyasn&lt;/em&gt; is developed and maintained by researchers at the Economics of Cybersecurity research group at Delft
University of Technology (&lt;a href=&quot;http://econsec.tbm.tudlft.nl&quot;&gt;http://econsec.tbm.tudlft.nl&lt;/a&gt;). The package is used on an almost daily basis and bugs
are fixed pretty quickly.  The package is largely developed and maintained by Hadi Asghari and Arman Noroozian.
Please report any bugs via GitHub (&lt;a href=&quot;https://github.com/hadiasghari/pyasn&quot;&gt;https://github.com/hadiasghari/pyasn&lt;/a&gt;) or email the developers.</source>
          <target state="translated">&lt;em&gt;pyasn&lt;/em&gt;由代尔夫特理工大学的网络安全经济学研究小组（&lt;a href=&quot;http://econsec.tbm.tudlft.nl&quot;&gt;http://econsec.tbm.tudlft.nl&lt;/a&gt;）的研究人员开发和维护。该软件包几乎每天都在使用，并且很快就修复了错误。该软件包主要由Hadi Asghari和Arman Noroozian开发和维护。请通过GitHub（&lt;a href=&quot;https://github.com/hadiasghari/pyasn&quot;&gt;https://github.com/hadiasghari/pyasn&lt;/a&gt;）报告所有错误，或给开发人员发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="60f84bbf297cdf30082de9e5ed53222280982093" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyasn&lt;/em&gt; is different from other ASN lookup tools in that it provides &lt;strong&gt;offline&lt;/strong&gt; and &lt;strong&gt;historical&lt;/strong&gt; lookups.
It provides utility scripts for users to build their own lookup databases based on any MRT/RIB archive.
This makes &lt;em&gt;pyasn&lt;/em&gt; much faster than online dig/whois/json lookups.</source>
          <target state="translated">&lt;em&gt;pyasn&lt;/em&gt;与其他ASN查找工具不同，它提供了&lt;strong&gt;脱机&lt;/strong&gt;和&lt;strong&gt;历史&lt;/strong&gt;查找。它为用户提供实用程序脚本，以便用户根据任何MRT / RIB归档文件构建自己的查找数据库。这使得&lt;em&gt;pyasn&lt;/em&gt;比在线dig / whois / json查找更快。</target>
        </trans-unit>
        <trans-unit id="cf00cc3950f3e68e17f92ac30f8d86e918db30b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pyasn&lt;/em&gt; is licensed under the MIT license.</source>
          <target state="translated">&lt;em&gt;pyasn&lt;/em&gt;是根据MIT许可获得许可的。</target>
        </trans-unit>
        <trans-unit id="a3993651b37c3cd8625832e777be80788dd8ecc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; These scripts are by default installed to</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这些脚本默认情况下安装到</target>
        </trans-unit>
        <trans-unit id="c9064bc428a6310aad156e3c2ae0b2f356bc66fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New in v1.6:&lt;/strong&gt; To save disk space, you can gzip IPASN data files. The load time will be slighlty longer.</source>
          <target state="translated">&lt;strong&gt;v1.6中的新增功能：&lt;/strong&gt;为了节省磁盘空间，您可以gzip IPASN数据文件。加载时间将会更长。</target>
        </trans-unit>
        <trans-unit id="eeb5f5504903a9861805a281e41eacbf832b7062" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New in v1.6:&lt;/strong&gt; pyasn_util_convert.py offers a &amp;lsquo;&amp;ndash;dump-screen&amp;rsquo; option which shows the MRT/RIB archive contents and
the chosen origin-AS.</source>
          <target state="translated">&lt;strong&gt;v1.6中的新增功能：&lt;/strong&gt; pyasn_util_convert.py提供了&amp;ldquo; &amp;ndash;dump-screen&amp;rdquo;选项，该选项显示MRT / RIB存档内容和所选的origin-AS。</target>
        </trans-unit>
        <trans-unit id="dfcebbf19032313026d7982a8008037967d8ffc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removing PyASN version 1.2&lt;/strong&gt;: &lt;em&gt;pyasn&lt;/em&gt; v1.5/1.6 and v1.2 can be installed side by side (due to lower-cased package
name). To avoid mistakes, you can uninstall the old &lt;strong&gt;PyASN&lt;/strong&gt; by deleting the following files from your Python
installation:</source>
          <target state="translated">&lt;strong&gt;删除PyASN 1.2版&lt;/strong&gt;：&lt;em&gt;pyasn&lt;/em&gt; v1.5 / 1.6和v1.2可以并排安装（由于小写的软件包名称）。为避免错误，您可以通过从Python安装中删除以下文件来卸载旧的&lt;strong&gt;PyASN&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="4cfa72fe0bca6f80ee4fe982b5287e54e2433b1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pyasn&lt;/strong&gt; is a Python extension module that enables very fast IP address to Autonomous System Number lookups.
Current state and Historical lookups can be done, based on the MRT/RIB BGP archive used as input.</source>
          <target state="translated">&lt;strong&gt;pyasn&lt;/strong&gt;是一个Python扩展模块，它可以非常快速地为自治系统号查找提供IP地址。基于用作输入的MRT / RIB BGP存档，可以完成当前状态和历史查找。</target>
        </trans-unit>
        <trans-unit id="59e92407aa318828bd9775f71463e7c1f2215d41" translate="yes" xml:space="preserve">
          <source>A handful of GitHub developers have contributed features and bug fixes to the latest releases.
Many thanks to all of them.</source>
          <target state="translated">一些GitHub开发者为最新版本贡献了功能和错误修复。非常感谢他们所有人。</target>
        </trans-unit>
        <trans-unit id="55a28d83afd35188e1898c8e81024c18876775c5" translate="yes" xml:space="preserve">
          <source>A limited number of unit tests are provided in the</source>
          <target state="translated">中提供了数量有限的单元测试。</target>
        </trans-unit>
        <trans-unit id="4b18904f70c19f49291de6162612c3d2c3973e50" translate="yes" xml:space="preserve">
          <source>A simple example that demonstrates most of the features:</source>
          <target state="translated">一个简单的例子,展示了大部分的功能。</target>
        </trans-unit>
        <trans-unit id="41c2037fcc15cf23d1691d12611bdaba33e7b1fc" translate="yes" xml:space="preserve">
          <source>Building the C module on Windows, using either pip or from source, requires Microsoft Visual C++ to be installed.
pyasn has been tested using Visual C++ Express 2010, available freely from Microsoft&amp;rsquo;s website, on both the
official Python 3.4 release and Miniconda3. Other versions of Python, Visual Studio, and Cygwin could also work
with minor modifications.</source>
          <target state="translated">使用pip或从源代码在Windows上构建C模块，需要安装Microsoft Visual C ++。pyasn已使用Visual C ++ Express 2010（在Microsoft网站上免费提供）在官方Python 3.4发行版和Miniconda3上进行了测试。其他版本的Python，Visual Studio和Cygwin也可以进行较小的修改。</target>
        </trans-unit>
        <trans-unit id="ea6eb078a0508de4379b5eedd1a42712ff9d3073" translate="yes" xml:space="preserve">
          <source>IPASN Data Files</source>
          <target state="translated">IPASN数据文件</target>
        </trans-unit>
        <trans-unit id="c8e116152fcee7bbe97095030ca2afbde6eb69c7" translate="yes" xml:space="preserve">
          <source>IPASN data files are a long list of prefixes used to lookup AS number for IPs. An excerpt from such a file looks
like this:</source>
          <target state="translated">IPASN数据文件是一个长长的前缀列表,用于查找IP的AS号。这样一个文件的摘录是这样的。</target>
        </trans-unit>
        <trans-unit id="2cb90939be38aab54562e593a4a2a6f61c1e23ec" translate="yes" xml:space="preserve">
          <source>IPASN data files can be created by downloading MRT/RIB BGP archives from Routeviews (or similar sources),
and parsing them using provided scripts that tail the BGP AS-Path. This can be done simply as follows:</source>
          <target state="translated">IPASN数据文件可以通过从Routeviews(或类似的来源)下载MRT/RIB BGP档案,并使用提供的脚本对其进行解析,对BGP AS-Path进行尾随。这可以简单地按照以下方式进行。</target>
        </trans-unit>
        <trans-unit id="d262f355de2cda9d4e61cfb7a27333ffb4d09b28" translate="yes" xml:space="preserve">
          <source>If you built and installed the package your self use the recorded log to remove the installed files.</source>
          <target state="translated">如果你自己构建并安装了软件包,请使用记录的日志删除安装的文件。</target>
        </trans-unit>
        <trans-unit id="b20d2dcb6e8c2720a5a437f39c506f73ffec05a3" translate="yes" xml:space="preserve">
          <source>Initial loading of a IPASN data file is the most heavy operation of the package. For fast lookups using multiple
IPASN data files, for instance for historical lookups on multiple dates, we recommend caching of loaded data files
for better performance.</source>
          <target state="translated">IPASN数据文件的初始加载是该包中最繁重的操作。对于使用多个IPASN数据文件的快速查询,例如多个日期的历史查询,我们建议对加载的数据文件进行缓存,以提高性能。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="9bbeee5b1eb9b2ff52b3814d30fae29021698f89" translate="yes" xml:space="preserve">
          <source>Installation is a breeze via pip:</source>
          <target state="translated">通过pip进行安装是很轻松的。</target>
        </trans-unit>
        <trans-unit id="d137f4aef51f20dd8053faf7c52a69bb6b7d874c" translate="yes" xml:space="preserve">
          <source>It extends code from py-radix (Michael J. Schultz and Damien Miller),  and improves upon it in several ways, for
instance in lowering memory usage and adding bulk prefix/origin load. The underlying radix tree implementation is
taken (and modified) from MRTd. These are all subject to their respective licenses.  Please see the LICENSE file
for details.</source>
          <target state="translated">它扩展了py-radix(Michael J.Schultz和Damien Miller)的代码,并在几个方面进行了改进,例如降低内存使用量和增加批量前缀/源码加载。底层的radix树的实现是从MRTd中提取(和修改)的。这些都受各自的许可证的约束。请参阅LICENSE文件了解详情。</target>
        </trans-unit>
        <trans-unit id="dae8cb639b13cf00147d81d370f0d551d1f3f228" translate="yes" xml:space="preserve">
          <source>License &amp;amp; Acknowledgments</source>
          <target state="translated">许可和确认</target>
        </trans-unit>
        <trans-unit id="6e424b60e3d5f8ffecf9637038d6d65b4659863e" translate="yes" xml:space="preserve">
          <source>Offline IP address to Autonomous System Number lookup module.</source>
          <target state="translated">离线IP地址到自主系统号查询模块。</target>
        </trans-unit>
        <trans-unit id="75a8913bef0afa479f9d61f45def9ce815cb07ae" translate="yes" xml:space="preserve">
          <source>Or with the standard Python:</source>
          <target state="translated">或者用标准的Python。</target>
        </trans-unit>
        <trans-unit id="66178be2e2f7c1c1d69a43e87a4a87688ef517d7" translate="yes" xml:space="preserve">
          <source>Package Structure</source>
          <target state="translated">包装结构</target>
        </trans-unit>
        <trans-unit id="84f11017dbe9ff4912eff88bc1a097e2f7e3b38f" translate="yes" xml:space="preserve">
          <source>Performance Tip</source>
          <target state="translated">性能提示</target>
        </trans-unit>
        <trans-unit id="e2b7336b129f6f92839fa91f02e05a33fa18c398" translate="yes" xml:space="preserve">
          <source>Testing pyasn Sources</source>
          <target state="translated">测试pyasn源</target>
        </trans-unit>
        <trans-unit id="2db9c13c9bbb80a1cbdaf786ef6f0c1d3e75a871" translate="yes" xml:space="preserve">
          <source>Thanks to Dr. Chris Lee (of Shadowserver) for proposing the use of radix trees.</source>
          <target state="translated">感谢Chris Lee博士(Shadowserver的)提出使用radix树。</target>
        </trans-unit>
        <trans-unit id="f79bd47e5540a0ab0e953083a1e2ea191543b476" translate="yes" xml:space="preserve">
          <source>The main portions of the directory tree are as follows:</source>
          <target state="translated">目录树的主要部分如下:</target>
        </trans-unit>
        <trans-unit id="ab6721006ed3b94f240edee306ced3c451a6a7b9" translate="yes" xml:space="preserve">
          <source>The module is written in C and Python, and cross-compiles on Linux and Windows. Underneath, it uses a radix tree
data structure for storage of IP addresses. In the current version, it borrows code from &lt;em&gt;py-radix&lt;/em&gt; to support
both IPV4 and IPV6 network prefixes. The current release is a beta. Compared to the previous version, it provides
support for Python 2 and 3; adds new functionality, performance improvements, and unit-tests.</source>
          <target state="translated">该模块用C和Python编写，并在Linux和Windows上交叉编译。在下面，它使用基数树数据结构来存储IP地址。在当前版本中，它从&lt;em&gt;py-radix&lt;/em&gt;借用代码以支持IPV4和IPV6网络前缀。当前版本是beta。与以前的版本相比，它提供了对Python 2和3的支持；添加了新功能，性能改进和单元测试。</target>
        </trans-unit>
        <trans-unit id="b59767323f12d69cad3a2e22ebfbdf70bd463556" translate="yes" xml:space="preserve">
          <source>This beta release has been tested under python version 2.6, 2.7, and 3.3 to 3.8. We appreciate contributions towards
testing &lt;em&gt;pyasn&lt;/em&gt;!</source>
          <target state="translated">此Beta版本已在python版本2.6、2.7和3.3至3.8下进行了测试。感谢您为测试&lt;em&gt;pyasn&lt;/em&gt;所做的贡献！</target>
        </trans-unit>
        <trans-unit id="dfdaf81103ee7c2a80255a5f9efefd9b7d6b9331" translate="yes" xml:space="preserve">
          <source>Uninstalling pyasn</source>
          <target state="translated">卸载pyasn</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="d37050d2a4a9ab879152a9c585ed6f9b5da5efd0" translate="yes" xml:space="preserve">
          <source>We also provide download links to a large number of previously generated IPASN data files. These are based on
weekly  snapshots of the Routeviews data from 2005-2015, accessible here:
&lt;a href=&quot;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&quot;&gt;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&lt;/a&gt;</source>
          <target state="translated">我们还提供了指向大量先前生成的IPASN数据文件的下载链接。这些基于2005-2015年Routeviews数据的每周快照，可在此处访问：&lt;a href=&quot;http://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12&quot;&gt;http&lt;/a&gt; ://data.3tu.nl/repository/uuid:d4d23b8e-2077-4592-8b47-cb476ad16e12</target>
        </trans-unit>
        <trans-unit id="12fd9122b41e2b0744138ed5a2f416031e775727" translate="yes" xml:space="preserve">
          <source>We plan to release &lt;em&gt;pyasn&lt;/em&gt; packages to major Linux repositories once it is out of beta.</source>
          <target state="translated">我们计划在&lt;em&gt;pyasn&lt;/em&gt;软件包退出beta版后将其发布到主要的Linux存储库中。</target>
        </trans-unit>
        <trans-unit id="59c01730688c198664f1093691a1331ebb53f18e" translate="yes" xml:space="preserve">
          <source>You can remove &lt;em&gt;pyasn&lt;/em&gt; as follows:</source>
          <target state="translated">您可以按照以下方式删除&lt;em&gt;pyasn&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="02fc16edd78e11a4eb4775f14745eeb852536e97" translate="yes" xml:space="preserve">
          <source>You will need to have pip, setuptools and build essentials installed if you build the package manually. On
Ubuntu/Debian you can get them using the following command:</source>
          <target state="translated">如果你手动编译软件包,你需要安装pip、setuptools和build essentials。在Ubuntu/Debian上,你可以使用下面的命令来获取它们。</target>
        </trans-unit>
        <trans-unit id="4f6264533b4cb04e566bbc76995880bc2df1167f" translate="yes" xml:space="preserve">
          <source>and can be executed directly. If you installed
the package to a user directory, these scripts will not be on the path and you will have to invoke them by navigating
to the folder in which they have been copied (e.g.</source>
          <target state="translated">并可以直接执行。如果你把软件包安装到了用户目录下,这些脚本将不在路径上,你必须通过导航到它们被复制的文件夹来调用它们(如</target>
        </trans-unit>
        <trans-unit id="d8c54f097eda64593277fdb68db2ac95dca0f3d3" translate="yes" xml:space="preserve">
          <source>directory when downlading the sources. They can be
run with the following command:</source>
          <target state="translated">目录中。可以用以下命令运行它们。</target>
        </trans-unit>
        <trans-unit id="f1f3e62dfcea822a1ea035215281319be5c57049" translate="yes" xml:space="preserve">
          <source>pyasn</source>
          <target state="translated">pyasn</target>
        </trans-unit>
        <trans-unit id="9ab6f8330a5f1b7f1b115e30ab7fd19a40f7a42e" translate="yes" xml:space="preserve">
          <source>tests/</source>
          <target state="translated">测试/</target>
        </trans-unit>
        <trans-unit id="78f893f65e7d780118c300267c4872cbf401188f" translate="yes" xml:space="preserve">
          <source>~/.local/bin</source>
          <target state="translated">〜/ .local / bin</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
