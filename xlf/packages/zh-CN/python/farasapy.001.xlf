<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/farasapy/">
    <body>
      <group id="farasapy">
        <trans-unit id="9104cc4f21244f000af98fefc328fee6416aa4d6" translate="yes" xml:space="preserve">
          <source>A Python Wrapper for the well Farasa toolkit</source>
          <target state="translated">Farasa工具箱的Python封装器。</target>
        </trans-unit>
        <trans-unit id="90536d46ca0c162aa49dd2c3fd4bdefa6521e32a" translate="yes" xml:space="preserve">
          <source>A repository by one of the toolkit authors containing WikiNews corpus: &lt;a href=&quot;https://github.com/kdarwish/Farasa&quot;&gt;https://github.com/kdarwish/Farasa&lt;/a&gt;</source>
          <target state="translated">工具箱作者之一的包含WikiNews语料库的存储库：&lt;a href=&quot;https://github.com/kdarwish/Farasa&quot;&gt;https&lt;/a&gt; : //github.com/kdarwish/Farasa</target>
        </trans-unit>
        <trans-unit id="2126ea2fc8997cc6868581374f02e7ae216e6a6a" translate="yes" xml:space="preserve">
          <source>AN IMPORTANT REMARK</source>
          <target state="translated">重要提示</target>
        </trans-unit>
        <trans-unit id="64afdda10ab6d82d241e9bd300d7e245407161be" translate="yes" xml:space="preserve">
          <source>An Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="e65a47032099c72cdf6b0ac9d65205be2ec45f62" translate="yes" xml:space="preserve">
          <source>An interactive Google colab code of the library can be reached from here [https://colab.research.google.com/drive/1xjzYwmfAszNzfR6Z2lSQi3nKYcjarXAW?usp=sharing].</source>
          <target state="translated">该库的交互式Google colab代码可以从这里获得[https://colab.research.google.com/drive/1xjzYwmfAszNzfR6Z2lSQi3nKYcjarXAW?usp=sharing]。</target>
        </trans-unit>
        <trans-unit id="d8e5bf9af81b0fb8ac8ea274d8cd550554fc0443" translate="yes" xml:space="preserve">
          <source>As Pyhton is a general purpose language and so popular for many NLP tasks, an automation to these calls to the toolkit from the code would be convenient. This is where this wrapper fits.</source>
          <target state="translated">由于Pyhton是一种通用语言,并且在许多NLP任务中非常流行,因此,从代码中对工具包的这些调用进行自动化将非常方便。这就是这个包装器的优势所在。</target>
        </trans-unit>
        <trans-unit id="982d5a73469ace67d9bb8ac42b0697256070bb9a" translate="yes" xml:space="preserve">
          <source>Contribution</source>
          <target state="translated">缴款</target>
        </trans-unit>
        <trans-unit id="2fd1d255b6d4ce57f37e4b2a9a887e5fd84516f3" translate="yes" xml:space="preserve">
          <source>Diacritization.</source>
          <target state="translated">字音化。</target>
        </trans-unit>
        <trans-unit id="4c4a2e80cc873135b3d277a22b6e85110c509731" translate="yes" xml:space="preserve">
          <source>Disclaimer</source>
          <target state="translated">聲明</target>
        </trans-unit>
        <trans-unit id="4cc5663ad94aa1878ea4d312f3fb8f17fb6821be" translate="yes" xml:space="preserve">
          <source>Farasa is  an Arabic NLP toolkit serving the following tasks:</source>
          <target state="translated">Farasa是一个阿拉伯语NLP工具箱,服务于以下任务。</target>
        </trans-unit>
        <trans-unit id="bf9d00e46ceb405460cea79cac587155650f134f" translate="yes" xml:space="preserve">
          <source>Farasapy wraps and maintains all the toolkit's APIs in different classes where each class is in separate file. You need to import your class of interest from its file as follows:</source>
          <target state="translated">Farasapy在不同的类中封装和维护了所有工具包的API,每个类都在单独的文件中。你需要从文件中导入你感兴趣的类,如下所示。</target>
        </trans-unit>
        <trans-unit id="a56a6cc1539e76454e3315b13990d6e6ba243e06" translate="yes" xml:space="preserve">
          <source>For best pracrices, use the &lt;strong&gt;INTERACTIVE&lt;/strong&gt; mode where the input text is small and you need to do the task multiple times. However, The &lt;strong&gt;STANDALONE&lt;/strong&gt; mode is the best for large input texts where the task is expected to be done only once.</source>
          <target state="translated">为了获得最佳pracrices，使用&lt;strong&gt;交互&lt;/strong&gt;模式下输入的文本太小，您需要多次做任务。但是，对于希望仅执行一次任务的大型输入文本，&lt;strong&gt;STANDALONE&lt;/strong&gt;模式是最佳选择。</target>
        </trans-unit>
        <trans-unit id="dd45fd3f2e347de26d6cbb92c276978c2dd03be8" translate="yes" xml:space="preserve">
          <source>How to use</source>
          <target state="translated">如何使用</target>
        </trans-unit>
        <trans-unit id="d90534bc839a0c61e91fa9a8ee08acd78067c062" translate="yes" xml:space="preserve">
          <source>In interactive mode, the object will run the binary once instanciated. It, then, will feed the text to the binary interactively and capture the output on each input. However, the user should be careful not to put large lines as the output, just like in shells, might not be as expected. It is a good practice to &lt;em&gt;terminate&lt;/em&gt; by &lt;code&gt;my_obj.terminate()&lt;/code&gt; these kinds of objects once they are not needed to avoid any unexpected behaviour in your code.</source>
          <target state="translated">在交互模式下，实例化后，对象将运行二进制文件。然后，它将以交互方式将文本输入二进制文件，并捕获每个输入的输出。但是，用户应注意不要放置大行，因为输出结果（如在shell中）可能与预期不符。最好使用 &lt;code&gt;my_obj.terminate()&lt;/code&gt; &lt;em&gt;终止&lt;/em&gt;这些类型的对象，以免它们避免代码中的任何意外行为。</target>
        </trans-unit>
        <trans-unit id="823a7e3fd6373bfddd2ffbfcd8f134d12c675aa6" translate="yes" xml:space="preserve">
          <source>In standalone mode, the instantiated object will call the binary each time it performs its task. It will put the input text in a temporary file, execute the binary with this temporary file, and finally extract the output from another temporary file. These temprary files are garbache collected once the task ends. Be careful that some binaries, &lt;em&gt;like the diacritizer&lt;/em&gt;, might take very long time to start. Hence, this option is prefered when you have long text and you want to do it only once.</source>
          <target state="translated">在独立模式下，实例化的对象将在每次执行其任务时调用二进制文件。它将输入的文本放在一个临时文件中，使用该临时文件执行二进制文件，最后从另一个临时文件中提取输出。一旦任务结束，这些临时文件就会被收集起来。注意一些二进制文件，&lt;em&gt;例如diacritizer&lt;/em&gt;）可能需要很长时间才能启动。因此，如果您的文本较长且只想执行一次，则首选此选项。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="af3758608388b05871589b2b19e12008ace4a0d4" translate="yes" xml:space="preserve">
          <source>Interactive Mode</source>
          <target state="translated">互动模式</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="5e91e640a6e9cebeca24030dfad07ee542ecc0a8" translate="yes" xml:space="preserve">
          <source>Named Entity Recgonition (NER).</source>
          <target state="translated">命名实体重组(NER)。</target>
        </trans-unit>
        <trans-unit id="6873b922a4e536494fc7645050aabf96e5589149" translate="yes" xml:space="preserve">
          <source>Now, If you are using the library for the first time, the library needs to download farasa toolkit binareis first. You do not need to worry about anythink. The library, whenever you instantiate an object of any of its classes, will first check for the binaries, download them if they are not existed. This is an example of instantiating an object from &lt;code&gt;FarasaStemmer&lt;/code&gt; for the first use of the library.</source>
          <target state="translated">现在，如果您是第一次使用该库，则该库需要首先下载farasa工具箱binareis。您无需担心任何想法。无论何时实例化其任何类的对象，该库都会首先检查二进制文件，如果不存在则下载它们。这是从 &lt;code&gt;FarasaStemmer&lt;/code&gt; 实例化对象以首次使用该库的示例。</target>
        </trans-unit>
        <trans-unit id="9f517cfd8596608bf3ebf3978c42d074209d8f3a" translate="yes" xml:space="preserve">
          <source>Part Of Speech tagging (POS tagging).</source>
          <target state="translated">部分语音标签(POS标签)。</target>
        </trans-unit>
        <trans-unit id="290a9f3174e421ccafe45fa741a0d7dc300669d9" translate="yes" xml:space="preserve">
          <source>Segmentation.</source>
          <target state="translated">分段:</target>
        </trans-unit>
        <trans-unit id="4e9f5e53236f87b984b6c5f5c4ebf34cf12a0525" translate="yes" xml:space="preserve">
          <source>Some binaries are computionally HEAVY!</source>
          <target state="translated">有些二进制文件在计算上是很重的!</target>
        </trans-unit>
        <trans-unit id="c35f663a4d412bd12477d561815bbbbfe3df6276" translate="yes" xml:space="preserve">
          <source>Standalone Mode</source>
          <target state="translated">单机模式</target>
        </trans-unit>
        <trans-unit id="ed490a6db03f406c3c2253d2e71a53e082131d70" translate="yes" xml:space="preserve">
          <source>Stemming.</source>
          <target state="translated">心情。</target>
        </trans-unit>
        <trans-unit id="9d22b24463f2b7e050a7de4a58d0cc4b507e094e" translate="yes" xml:space="preserve">
          <source>Table of Content</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="3d7743dc3dfada46528c11706aee733b8ef6ceb3" translate="yes" xml:space="preserve">
          <source>The credit of desegmentation code goes for @Wissam Antoun [https://github.com/WissamAntoun/Farasa_Desegmenter] in his repository [https://github.com/WissamAntoun/Farasa_Desegmenter].</source>
          <target state="translated">分割代码的功劳归功于 @Wissam Antoun [https://github.com/WissamAntoun/Farasa_Desegmenter]在他的仓库 [https://github.com/WissamAntoun/Farasa_Desegmenter]。</target>
        </trans-unit>
        <trans-unit id="7fa09cf74496d31eac1bac08b43b137a3ef29359" translate="yes" xml:space="preserve">
          <source>The following is an example on the segmentation API that is running &lt;em&gt;interactively&lt;/em&gt;.</source>
          <target state="translated">以下是&lt;em&gt;交互式&lt;/em&gt;运行的细分API的示例。</target>
        </trans-unit>
        <trans-unit id="422741ec238dc50c1e695f476e349885d0c11ea2" translate="yes" xml:space="preserve">
          <source>The library, as it is a warpper for Java jars, requires that &lt;strong&gt;Java is installed in your system&lt;/strong&gt; and is &lt;strong&gt;in your PATH&lt;/strong&gt;. It is, also, not recommended to have a version below Java 1.7.</source>
          <target state="translated">该库是Java jar的简化程序，它要求&lt;strong&gt;Java已安装在系统中&lt;/strong&gt;且&lt;strong&gt;位于PATH中&lt;/strong&gt;。另外，也不建议使用Java 1.7以下的版本。</target>
        </trans-unit>
        <trans-unit id="152bf6ded342c5febd2f5a57571ef9bd465e278d" translate="yes" xml:space="preserve">
          <source>The official site: &lt;a href=&quot;http://alt.qcri.org/farasa/&quot;&gt;http://alt.qcri.org/farasa/&lt;/a&gt;</source>
          <target state="translated">官方网站：&lt;a href=&quot;http://alt.qcri.org/farasa/&quot;&gt;http&lt;/a&gt; : //alt.qcri.org/farasa/</target>
        </trans-unit>
        <trans-unit id="15b6c72510ea53db06ff6eb956fda3c8e6211808" translate="yes" xml:space="preserve">
          <source>The toolkit is built and compiled in Java. Developers who want to use it without using this library may call the binaries directly from their code.</source>
          <target state="translated">该工具箱是用Java构建和编译的。开发者如果想在不使用该库的情况下使用它,可以直接从自己的代码中调用二进制文件。</target>
        </trans-unit>
        <trans-unit id="490c5510b85af64eef9ba982b3dba45fd0e9c6b5" translate="yes" xml:space="preserve">
          <source>This is a Pyhton API wrapper for &lt;a href=&quot;http://qatsdemo.cloudapp.net/farasa/&quot;&gt;farasa&lt;/a&gt; [&lt;a href=&quot;http://qatsdemo.cloudapp.net/farasa/&quot;&gt;http://qatsdemo.cloudapp.net/farasa/&lt;/a&gt;] toolkit. Although this work is licsenced under MIT, the original work(the toolkit) is &lt;strong&gt;strictly premitted for research purposes only&lt;/strong&gt;. For any commercial uses, please contact the toolkit creators[http://qatsdemo.cloudapp.net/farasa/].</source>
          <target state="translated">这是用于&lt;a href=&quot;http://qatsdemo.cloudapp.net/farasa/&quot;&gt;farasa&lt;/a&gt; [ &lt;a href=&quot;http://qatsdemo.cloudapp.net/farasa/&quot;&gt;http://qatsdemo.cloudapp.net/farasa/&lt;/a&gt; ]工具包的Pyhton API包装器。尽管此工作是在MIT许可下进行的，但&lt;strong&gt;严格禁止&lt;/strong&gt;将原始工作（工具包）&lt;strong&gt;用于研究目的&lt;/strong&gt;。对于任何商业用途，请联系工具包创建者[http://qatsdemo.cloudapp.net/farasa/]。</target>
        </trans-unit>
        <trans-unit id="8c6bf513fd858fe0689c7b7ab972222fb9e5065e" translate="yes" xml:space="preserve">
          <source>To work on &lt;strong&gt;interactive mode&lt;/strong&gt;, you just need to pass &lt;code&gt;interactive=True&lt;/code&gt; option to your object constructor.</source>
          <target state="translated">要在&lt;strong&gt;交互模式下&lt;/strong&gt;工作，您只需要将 &lt;code&gt;interactive=True&lt;/code&gt; 选项传递给您的对象构造函数。</target>
        </trans-unit>
        <trans-unit id="f0600155dfbc83f97a9acc6e4e9398c6bf1e73d2" translate="yes" xml:space="preserve">
          <source>Useful URLs</source>
          <target state="translated">有用的网址</target>
        </trans-unit>
        <trans-unit id="088320c7af2ae269ed13604edbe5734bf86ff743" translate="yes" xml:space="preserve">
          <source>Want to cite?</source>
          <target state="translated">要不要引用?</target>
        </trans-unit>
        <trans-unit id="26ef503cf6fc3859265bdc4041396f1ff72616a6" translate="yes" xml:space="preserve">
          <source>You can find the list of publications to site from here: &lt;a href=&quot;http://qatsdemo.cloudapp.net/farasa/&quot;&gt;http://qatsdemo.cloudapp.net/farasa/&lt;/a&gt;.</source>
          <target state="translated">您可以从以下站点找到要发布的出版物列表：&lt;a href=&quot;http://qatsdemo.cloudapp.net/farasa/&quot;&gt;http&lt;/a&gt; : //qatsdemo.cloudapp.net/farasa/。</target>
        </trans-unit>
        <trans-unit id="522379b176a11dd46dae74b885df1db2136a260c" translate="yes" xml:space="preserve">
          <source>You may notice that the last line of object instantiation states that the object is instantiated in &lt;strong&gt;STANDALONE&lt;/strong&gt; mode. Farasapy, like the toolkit binaries themself, can run in two different modes: &lt;strong&gt;Interactive&lt;/strong&gt; and &lt;strong&gt;Standalone&lt;/strong&gt;.</source>
          <target state="translated">您可能会注意到，对象实例化的最后一行指出对象是在&lt;strong&gt;STANDALONE&lt;/strong&gt;模式下实例化的。像工具包本身一样，Farasapy可以两种不同模式运行：&lt;strong&gt;交互式&lt;/strong&gt;和&lt;strong&gt;独立&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6cb86b213852c717347545645b706d288571ca2a" translate="yes" xml:space="preserve">
          <source>farasa from GitHub topics: &lt;a href=&quot;https://github.com/topics/farasa&quot;&gt;https://github.com/topics/farasa&lt;/a&gt;</source>
          <target state="translated">来自GitHub主题的farasa：&lt;a href=&quot;https://github.com/topics/farasa&quot;&gt;https&lt;/a&gt;：//github.com/topics/farasa</target>
        </trans-unit>
        <trans-unit id="45fc74ac338a66e466499ded3353bf68193237ce" translate="yes" xml:space="preserve">
          <source>let us &lt;em&gt;stem&lt;/em&gt; the following example:</source>
          <target state="translated">让我们&lt;em&gt;干&lt;/em&gt;下面的例子：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
