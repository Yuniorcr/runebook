<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/llvmlite/">
    <body>
      <group id="llvmlite">
        <trans-unit id="8d503b9db953a28c7746030ee267cb78287c0b66" translate="yes" xml:space="preserve">
          <source>(or, simply, the official llvmlite package provided in the &lt;a href=&quot;http://docs.continuum.io/anaconda/index.html&quot;&gt;Anaconda&lt;/a&gt;
distribution)</source>
          <target state="translated">（或者简单地说，是&lt;a href=&quot;http://docs.continuum.io/anaconda/index.html&quot;&gt;Anaconda&lt;/a&gt; 发行版中提供的官方llvmlite软件包）</target>
        </trans-unit>
        <trans-unit id="1c0114372ecb9226d875b0bf0cc723874e28ab6e" translate="yes" xml:space="preserve">
          <source>0.1.0 - 0.5.1</source>
          <target state="translated">0.1.0-0.5.1</target>
        </trans-unit>
        <trans-unit id="1c6601c611a36d267dda10d4b16977437a18afb6" translate="yes" xml:space="preserve">
          <source>0.13.0 - 0.15.0</source>
          <target state="translated">0.13.0-0.15.0</target>
        </trans-unit>
        <trans-unit id="ee5c8948ce4f6611095c00c880a98ec2be8539ba" translate="yes" xml:space="preserve">
          <source>0.16.0 - 0.17.0</source>
          <target state="translated">0.16.0-0.17.0</target>
        </trans-unit>
        <trans-unit id="694ed801fabac28146d4f75218573f8d44d2b04a" translate="yes" xml:space="preserve">
          <source>0.17.0 - 0.20.0</source>
          <target state="translated">0.17.0-0.20.0</target>
        </trans-unit>
        <trans-unit id="d18c2faa15a0cd2573d93fa76b7c897282f677e1" translate="yes" xml:space="preserve">
          <source>0.21.0 - 0.22.0</source>
          <target state="translated">0.21.0-0.22.0</target>
        </trans-unit>
        <trans-unit id="158a071db70264920d8bed34ea9da2b015c3819d" translate="yes" xml:space="preserve">
          <source>0.23.0 - 0.26.0</source>
          <target state="translated">0.23.0-0.26.0</target>
        </trans-unit>
        <trans-unit id="8d88395f9da25f84287384ee68e0d108dde46047" translate="yes" xml:space="preserve">
          <source>0.27.0 - 0.28.0</source>
          <target state="translated">0.27.0-0.28.0</target>
        </trans-unit>
        <trans-unit id="804b0c6bca12b28ef8df7307e6c6af6c86e8e107" translate="yes" xml:space="preserve">
          <source>0.29.0 - 0.32.0</source>
          <target state="translated">0.29.0-0.32.0</target>
        </trans-unit>
        <trans-unit id="f4f98b1d4f869ee257316d9b1d81501d89731297" translate="yes" xml:space="preserve">
          <source>0.34.0 - &amp;hellip;</source>
          <target state="translated">0.34.0-&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="510ad6da31672f416f02848081b5af422aab4a78" translate="yes" xml:space="preserve">
          <source>0.6.0 - 0.8.0</source>
          <target state="translated">0.6.0-0.8.0</target>
        </trans-unit>
        <trans-unit id="0145bc23ae34ed377416e5a7aa83852de3809d28" translate="yes" xml:space="preserve">
          <source>0.9.0 - 0.12.1</source>
          <target state="translated">0.9.0-0.12.1</target>
        </trans-unit>
        <trans-unit id="5843da472b5e4337e937680dca8fe0fb74275313" translate="yes" xml:space="preserve">
          <source>10.0.x (9.0.x for</source>
          <target state="translated">10.0.x(9.0.x为 &quot;我的&quot;)</target>
        </trans-unit>
        <trans-unit id="66a7eccd72a3a4bb5f218137a3b25bf271c51ec1" translate="yes" xml:space="preserve">
          <source>3.5.x</source>
          <target state="translated">3.5.x</target>
        </trans-unit>
        <trans-unit id="ce7c4950c40834526b0eacecea93ae51838e9ff6" translate="yes" xml:space="preserve">
          <source>3.6.x</source>
          <target state="translated">3.6.x</target>
        </trans-unit>
        <trans-unit id="123535e492e12e35e09cce5e78e1b825a41e3f14" translate="yes" xml:space="preserve">
          <source>3.7.x</source>
          <target state="translated">3.7.x</target>
        </trans-unit>
        <trans-unit id="3505e941b9f62f04157e17c76a8bfb830e10efb3" translate="yes" xml:space="preserve">
          <source>3.8.x</source>
          <target state="translated">3.8.x</target>
        </trans-unit>
        <trans-unit id="10b90ccafe8beb53a464a9404ded767d77902cd1" translate="yes" xml:space="preserve">
          <source>3.9.x</source>
          <target state="translated">3.9.x</target>
        </trans-unit>
        <trans-unit id="8abe42d7a179e3a44d78ecc01069847bb5bf9d52" translate="yes" xml:space="preserve">
          <source>4.0.x</source>
          <target state="translated">4.0.x</target>
        </trans-unit>
        <trans-unit id="a36104016c3a7d6f8e98ef4de89186fd3c43960a" translate="yes" xml:space="preserve">
          <source>5.0.x</source>
          <target state="translated">5.0.x</target>
        </trans-unit>
        <trans-unit id="c6da8dff1a565cdf26fea969985ad7b25017eaf4" translate="yes" xml:space="preserve">
          <source>6.0.x</source>
          <target state="translated">6.0.x</target>
        </trans-unit>
        <trans-unit id="b82cf5105b9cb7d239ccfe2e03ea9dc26b3e8fe0" translate="yes" xml:space="preserve">
          <source>7.0.x</source>
          <target state="translated">7.0.x</target>
        </trans-unit>
        <trans-unit id="15a913bbf59fb1c8aab707a3bc5000b2528268b3" translate="yes" xml:space="preserve">
          <source>7.0.x, 7.1.x, 8.0.x</source>
          <target state="translated">7.0.x,7.1.x,8.0.x</target>
        </trans-unit>
        <trans-unit id="cc2afb91c08d0fb9e0e9627b8337ae06581a8cbb" translate="yes" xml:space="preserve">
          <source>9.0.x</source>
          <target state="translated">9.0.x</target>
        </trans-unit>
        <trans-unit id="f4fc898b19ee51802e07ee42bc8d8c768477c824" translate="yes" xml:space="preserve">
          <source>A ctypes Python wrapper around the C API.</source>
          <target state="translated">一个围绕 C API 的 ctypes Python 封装器。</target>
        </trans-unit>
        <trans-unit id="08ac6ad534ae8544a870f65cb8c1c6f1761fd4a3" translate="yes" xml:space="preserve">
          <source>A lightweight LLVM python binding for writing JIT compilers</source>
          <target state="translated">一个轻量级的LLVM python绑定,用于编写JIT编译器。</target>
        </trans-unit>
        <trans-unit id="b78a0118bccce9d63f29a190f58c621706ad44a7" translate="yes" xml:space="preserve">
          <source>A pure Python implementation of the subset of the LLVM IR builder that we
need for Numba.</source>
          <target state="translated">Numba所需要的LLVM IR构建器子集的纯Python实现。</target>
        </trans-unit>
        <trans-unit id="f40538f86b46c2d800ac348e38dacb050924eae7" translate="yes" xml:space="preserve">
          <source>A small C wrapper around the parts of the LLVM C++ API we need that are
not already exposed by the LLVM C API.</source>
          <target state="translated">一个小型的C语言包装器,它围绕着我们所需要的LLVM C++API的部分,这些部分还没有被LLVM C API所暴露。</target>
        </trans-unit>
        <trans-unit id="16f70676791c6ad851ce9394a0f3287d65199850" translate="yes" xml:space="preserve">
          <source>As of version 0.34.0, llvmlite requires LLVM 10.0.x. on all architectures
except</source>
          <target state="translated">从0.34.0版本开始,llvmlite需要LLVM 10.0.x.在所有的架构上,除了</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">兼容性</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="71b1aec4fdff6b38017d38f2ab5b6a147becc1d1" translate="yes" xml:space="preserve">
          <source>Historical compatibility table:</source>
          <target state="translated">历史兼容性表。</target>
        </trans-unit>
        <trans-unit id="7f70b2eca449eac140f07f4acbb7b4a1dfc64eda" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to use our pre-built packages, you can compile
and install llvmlite yourself.  The documentation will teach you how:
&lt;a href=&quot;http://llvmlite.pydata.org/en/latest/install/index.html&quot;&gt;http://llvmlite.pydata.org/en/latest/install/index.html&lt;/a&gt;</source>
          <target state="translated">如果您不想使用我们的预构建软件包，则可以自己编译并安装llvmlite。该文档将教您如何：&lt;a href=&quot;http://llvmlite.pydata.org/en/latest/install/index.html&quot;&gt;http&lt;/a&gt; : //llvmlite.pydata.org/en/latest/install/index.html</target>
        </trans-unit>
        <trans-unit id="d76b2a503ac342b071c2aebbf9340084549ecb7d" translate="yes" xml:space="preserve">
          <source>Key Benefits</source>
          <target state="translated">主要优点</target>
        </trans-unit>
        <trans-unit id="f36bc91c78cc29057df522c6ef9b1945c150908b" translate="yes" xml:space="preserve">
          <source>Materializing a LLVM module calls LLVM&amp;rsquo;s IR parser which provides
better error messages than step-by-step IR building through the C++
API (no more segfaults or process aborts).</source>
          <target state="translated">实例化LLVM模块将调用LLVM的IR解析器，该解析器比通过C ++ API进行逐步IR构建（提供更多的段错误或进程中止）提供更好的错误消息。</target>
        </trans-unit>
        <trans-unit id="3897a3e70be0b478b2d7bea6f468a41ae0c22533" translate="yes" xml:space="preserve">
          <source>Most of llvmlite uses the LLVM C API which is small but very stable
(low maintenance when changing LLVM version).</source>
          <target state="translated">llvmlite大部分使用LLVM C API,它体积小但非常稳定(更换LLVM版本时维护成本低)。</target>
        </trans-unit>
        <trans-unit id="5d9d6dd04f4229a7210c3e9334cd2c502c2dc5ef" translate="yes" xml:space="preserve">
          <source>Other build methods</source>
          <target state="translated">Andere Baumethoden</target>
        </trans-unit>
        <trans-unit id="8ba882f1a03fd95776f6729edabc1886e98578aa" translate="yes" xml:space="preserve">
          <source>Pre-built binaries</source>
          <target state="translated">Vorkompilierte Binärdateien</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">De</target>
        </trans-unit>
        <trans-unit id="5b9f9d08eec2a721e1109aa4f6d1e35cda627be9" translate="yes" xml:space="preserve">
          <source>The IR builder is pure Python code and decoupled from LLVM&amp;rsquo;s
frequently-changing C++ APIs.</source>
          <target state="translated">IR构建器是纯Python代码，并且与LLVM经常更改的C ++ API分离。</target>
        </trans-unit>
        <trans-unit id="012ca557b7cee0a608157a6bb6b7e65edf5f00b4" translate="yes" xml:space="preserve">
          <source>The Python binding layer has sane memory management.</source>
          <target state="translated">Python绑定层有理智的内存管理。</target>
        </trans-unit>
        <trans-unit id="8db08fea35cadba7cb1c0528475598c6415ef14b" translate="yes" xml:space="preserve">
          <source>The binding is not a Python C-extension, but a plain DLL accessed using
ctypes (no need to wrestle with Python&amp;rsquo;s compiler requirements and C++ 11
compatibility).</source>
          <target state="translated">绑定不是Python C扩展，而是使用ctypes访问的纯DLL（无需费心Python的编译器要求和C ++ 11兼容性）。</target>
        </trans-unit>
        <trans-unit id="0655981ddb78496e1b9376e512af5ade701fd8c5" translate="yes" xml:space="preserve">
          <source>The old &lt;a href=&quot;https://github.com/llvmpy/llvmpy&quot;&gt;llvmpy&lt;/a&gt;  binding exposes a lot of LLVM APIs but the mapping of
C++-style memory management to Python is error prone. &lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt; and many JIT
compilers do not need a full LLVM API.  Only the IR builder, optimizer,
and JIT compiler APIs are necessary.</source>
          <target state="translated">旧的&lt;a href=&quot;https://github.com/llvmpy/llvmpy&quot;&gt;llvmpy&lt;/a&gt; 绑定公开了许多LLVM API，但是C ++风格的内存管理到Python的映射容易出错。&lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt;和许多JIT编译器不需要完整的LLVM API。仅需要IR构建器，优化器和JIT编译器API。</target>
        </trans-unit>
        <trans-unit id="57399277f7e74a5e36c9f57e84b7258ff54eca73" translate="yes" xml:space="preserve">
          <source>We recommend you use the binaries provided by the &lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt; team for
the &lt;a href=&quot;http://conda.pydata.org/&quot;&gt;Conda&lt;/a&gt; package manager.  You can find them in Numba&amp;rsquo;s &lt;a href=&quot;https://anaconda.org/numba&quot;&gt;anaconda.org
channel&lt;/a&gt;.  For example:</source>
          <target state="translated">我们建议您使用&lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt;团队为&lt;a href=&quot;http://conda.pydata.org/&quot;&gt;Conda&lt;/a&gt;软件包管理器提供的二进制文件。您可以在Numba的&lt;a href=&quot;https://anaconda.org/numba&quot;&gt;anaconda.org频道中&lt;/a&gt;找到它们。例如：</target>
        </trans-unit>
        <trans-unit id="3a9b0404c0f3450246b61c99b3927651583dde31" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll find the documentation at &lt;a href=&quot;http://llvmlite.pydata.org&quot;&gt;http://llvmlite.pydata.org&lt;/a&gt;</source>
          <target state="translated">您可以在&lt;a href=&quot;http://llvmlite.pydata.org&quot;&gt;http://llvmlite.pydata.org&lt;/a&gt;找到该文档。</target>
        </trans-unit>
        <trans-unit id="07523927973c128520eb9b8598bda2ce98a37579" translate="yes" xml:space="preserve">
          <source>aarch64</source>
          <target state="translated">aarch64</target>
        </trans-unit>
        <trans-unit id="64e4dabd9fe0e7acd9871c3102f96e3691e816fd" translate="yes" xml:space="preserve">
          <source>compatible LLVM versions</source>
          <target state="translated">LLVM兼容版本</target>
        </trans-unit>
        <trans-unit id="8da446cfd8b1aa034b90dd6051712b8f5228909e" translate="yes" xml:space="preserve">
          <source>lightweight wrapper around basic LLVM functionality</source>
          <target state="translated">围绕基本LLVM功能的轻量级封装器</target>
        </trans-unit>
        <trans-unit id="67ff25c5289f9e3e8befb6e2172c7b18cb064b5c" translate="yes" xml:space="preserve">
          <source>llvmlite is a project originally tailored for &lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt;&amp;rsquo;s needs, using the
following approach:</source>
          <target state="translated">llvmlite是一个最初为&lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt;量身定制的项目，采用以下方法：</target>
        </trans-unit>
        <trans-unit id="88d3118381f272badfce88f40137a03ac1e8f34f" translate="yes" xml:space="preserve">
          <source>llvmlite is quite faster than llvmpy&amp;rsquo;s thanks to a much simpler architeture
(the &lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba&lt;/a&gt; test suite is twice faster than it was).</source>
          <target state="translated">得益于更简单的&lt;a href=&quot;http://numba.pydata.org/&quot;&gt;架构，llvmlite&lt;/a&gt;比llvmpy的速度要快得多（Numba测试套件的速度是以前的两倍）。</target>
        </trans-unit>
        <trans-unit id="d3eaea85c9f41408a42910f3eaee4dc100c6315d" translate="yes" xml:space="preserve">
          <source>llvmlite versions</source>
          <target state="translated">llvmlite版本</target>
        </trans-unit>
        <trans-unit id="23ce8700042171e66721b98afd5a5b902e526f61" translate="yes" xml:space="preserve">
          <source>llvmlite works with Python 3.6 and greater.</source>
          <target state="translated">llvmlite适用于Python 3.6及以上版本。</target>
        </trans-unit>
        <trans-unit id="b4bd28c91cce5d22a0a0b08828aa170d7ffceb4a" translate="yes" xml:space="preserve">
          <source>llvmlite.llvmpy</source>
          <target state="translated">llvmlite.llvmpy</target>
        </trans-unit>
        <trans-unit id="89af495735e640b165449b372a7b30cb4b34af9d" translate="yes" xml:space="preserve">
          <source>llvmpy Compatibility Layer</source>
          <target state="translated">llvmpy 兼容性层</target>
        </trans-unit>
        <trans-unit id="608de9a863c6aec52461d539b097bf41e192c272" translate="yes" xml:space="preserve">
          <source>namespace provides a minimal llvmpy compatibility
layer.</source>
          <target state="translated">命名空间提供了一个最小的llvmpy兼容层。</target>
        </trans-unit>
        <trans-unit id="d98de4187706afbc508147b1526461eb8ea48953" translate="yes" xml:space="preserve">
          <source>only)</source>
          <target state="translated">(仅限)</target>
        </trans-unit>
        <trans-unit id="0a90f3231cd4ebb60eb1b88a280139b15e3d23d5" translate="yes" xml:space="preserve">
          <source>which requires LLVM 9.0.x due to:
&lt;a href=&quot;https://bugs.llvm.org/show_bug.cgi?id=46996&quot;&gt;https://bugs.llvm.org/show_bug.cgi?id=46996&lt;/a&gt;</source>
          <target state="translated">由于以下原因需要LLVM 9.0.x：&lt;a href=&quot;https://bugs.llvm.org/show_bug.cgi?id=46996&quot;&gt;https&lt;/a&gt; ://bugs.llvm.org/show_bug.cgi?id = 46996</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
