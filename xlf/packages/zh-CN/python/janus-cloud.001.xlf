<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/janus-cloud/">
    <body>
      <group id="janus-cloud">
        <trans-unit id="23194bf7adeb980f1ff2388edd705853833046a8" translate="yes" xml:space="preserve">
          <source>1 Why Janus-cloud</source>
          <target state="translated">1 为什么是Janus-cloud</target>
        </trans-unit>
        <trans-unit id="dc18adf10bd09f177f865dadb4347f8484ee643c" translate="yes" xml:space="preserve">
          <source>2 Features</source>
          <target state="translated">2个特点</target>
        </trans-unit>
        <trans-unit id="7496036e0ea1606d2ffbf9223327da0defd5f384" translate="yes" xml:space="preserve">
          <source>3 Components</source>
          <target state="translated">3个组成部分</target>
        </trans-unit>
        <trans-unit id="95a9a0c07335bc9d3b8cf575674c9323ee4b16ac" translate="yes" xml:space="preserve">
          <source>4 Plugins of Janus-proxy</source>
          <target state="translated">4 Janus-proxy的插件</target>
        </trans-unit>
        <trans-unit id="a1d8744328abfc2b1136e38b55cac4fe233a5084" translate="yes" xml:space="preserve">
          <source>5 Topology</source>
          <target state="translated">5 拓扑学</target>
        </trans-unit>
        <trans-unit id="07ab28408027adfb3c5b4a5082b2e949c49835a9" translate="yes" xml:space="preserve">
          <source>6 Installation</source>
          <target state="translated">6 安装</target>
        </trans-unit>
        <trans-unit id="2eb0881f3547cb3f190daa847a88859de0380b55" translate="yes" xml:space="preserve">
          <source>7 Configure and Start</source>
          <target state="translated">7 配置和启动</target>
        </trans-unit>
        <trans-unit id="bf0492a84bc352227fde5b688b883113eacbe326" translate="yes" xml:space="preserve">
          <source>8 Requirements for the backend Janus server</source>
          <target state="translated">8 后端Janus服务器的要求</target>
        </trans-unit>
        <trans-unit id="af24374bb40fa17421bf9b291d3f82eca139f83e" translate="yes" xml:space="preserve">
          <source>9 Directory structure of project source</source>
          <target state="translated">9 项目源代码的目录结构</target>
        </trans-unit>
        <trans-unit id="4be71d5bc5f63658530bfc55ef2d1749da8c59e9" translate="yes" xml:space="preserve">
          <source>Add support for VP9 and H.264 profile negotiation for videoroom and echotest plugin</source>
          <target state="translated">为videoroom和echotest插件增加对VP9和H.264配置文件协商的支持。</target>
        </trans-unit>
        <trans-unit id="a7a7af61e1056dceb2fcd3cbbe976ecb69ee449d" translate="yes" xml:space="preserve">
          <source>Added VideoRoom option to only allow admins to change the recording state</source>
          <target state="translated">增加了VideoRoom选项,只允许管理员更改录制状态。</target>
        </trans-unit>
        <trans-unit id="fd24b09c038412fe25fa4b8929b6aa56f9c8b6d7" translate="yes" xml:space="preserve">
          <source>Added support for multichannel Opus audio (surround) for videoroom</source>
          <target state="translated">增加了对视频室多声道Opus音频(环绕声)的支持。</target>
        </trans-unit>
        <trans-unit id="3bfa88b4d64927d2e9acd68185eb251d2fa0ace9" translate="yes" xml:space="preserve">
          <source>All notable changes to this project will be documented in this file.</source>
          <target state="translated">本项目的所有显著变化都将记录在这个文件中。</target>
        </trans-unit>
        <trans-unit id="6b35bfeccae8340912d4137d287e493b4249a08d" translate="yes" xml:space="preserve">
          <source>Before installation, the following requirements must be satisfied.</source>
          <target state="translated">在安装前,必须满足以下要求。</target>
        </trans-unit>
        <trans-unit id="546f218e8529edfe22b87b1951a727e211c68194" translate="yes" xml:space="preserve">
          <source>By now, Janus-proxy / Janus-sentinel only support corresponding with the backend Janus server by WebSocket, not support other transport.</source>
          <target state="translated">到目前为止,Janus-proxy/Janus-sentinel只支持通过WebSocket与后台Janus服务器对应,不支持其他传输方式。</target>
        </trans-unit>
        <trans-unit id="b7674fa4e946cd1282403f3c17a51451a98d995d" translate="yes" xml:space="preserve">
          <source>Calculate the workload of the Janus server</source>
          <target state="translated">计算Janus服务器的工作量。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">变更日志</target>
        </trans-unit>
        <trans-unit id="4e684aa35816b578efc02729254899c88a1ca469" translate="yes" xml:space="preserve">
          <source>Communicate with the backend Janus server by WebSocket</source>
          <target state="translated">通过WebSocket与后端Janus服务器进行通信。</target>
        </trans-unit>
        <trans-unit id="3cb88ec70a66014b480a477c7ec16dbd9103dfd5" translate="yes" xml:space="preserve">
          <source>Consistent API with the Janus server (until v0.9.2), which is compatible with the original client of the Janus server</source>
          <target state="translated">与Janus服务器一致的API(直到v0.9.2),它与Janus服务器的原始客户端兼容。</target>
        </trans-unit>
        <trans-unit id="9e06611901ec0313936955642e9e89b68d02ef41" translate="yes" xml:space="preserve">
          <source>Edit the configuration file of Janus-proxy, then type the following commands to start.</source>
          <target state="translated">编辑Janus-proxy的配置文件,然后输入以下命令启动。</target>
        </trans-unit>
        <trans-unit id="86b230fe801944ced1a4112e5e50d9e31e36f93f" translate="yes" xml:space="preserve">
          <source>Edit the configuration file of Janus-sentinel, then type the following commands to start.</source>
          <target state="translated">编辑Janus-sentinel的配置文件,然后输入以下命令启动。</target>
        </trans-unit>
        <trans-unit id="b6e42cf72291c96cd0e1ecb0af311a6c0b3a8334" translate="yes" xml:space="preserve">
          <source>Enable / disable recording while conference is in progress for videoroom</source>
          <target state="translated">启用/禁用视频会议室会议过程中的录音。</target>
        </trans-unit>
        <trans-unit id="a6c3a5654b0327a673787cc32a9c96652bfe3947" translate="yes" xml:space="preserve">
          <source>For developer, who want to debug the Janus-cloud, and install it for develop mode:</source>
          <target state="translated">对于开发者来说,想要调试Janus-cloud,并将其安装到开发模式中。</target>
        </trans-unit>
        <trans-unit id="d0949e4f7904bf5ab157fb8954dfc648753fcceb" translate="yes" xml:space="preserve">
          <source>Install from PyPi</source>
          <target state="translated">从PyPi安装</target>
        </trans-unit>
        <trans-unit id="613dd18f7e7415ce2c81dc9135790c3041d211be" translate="yes" xml:space="preserve">
          <source>Install from source</source>
          <target state="translated">从源头安装</target>
        </trans-unit>
        <trans-unit id="f9f22e45430e8d762e7cd4989e2f5da2aea25642" translate="yes" xml:space="preserve">
          <source>Its APIs is compatible with the videocall plugin of Janus-gateway util v0.9.2.</source>
          <target state="translated">它的API与Janus-gateway util v0.9.2的videocall插件兼容。</target>
        </trans-unit>
        <trans-unit id="f2c774a8b17b0a37164977ecba78cdd70bfaa895" translate="yes" xml:space="preserve">
          <source>Its APIs is compatible with the videoroom plugin of Janus-gateway util v0.9.5.</source>
          <target state="translated">其API与Janus-gateway util v0.9.5的videoroom插件兼容。</target>
        </trans-unit>
        <trans-unit id="e5fb55623ca840e22d6a35d3a1bd376c2b029ab1" translate="yes" xml:space="preserve">
          <source>Janus is an excellent WebRTC server, simple and well-structured. Its pluggable design and sophisticated API is impressive and amazing. But it also comes with some disadvantage.
First, Janus is design to be a standalone server, which cannot be scale to support the huge RTC workload. But in the cloud-based environment, scalability is essential. With the help of Janus-cloud, engineers can easily build a large and scalable cluster system of WebRTC server.
Second, Janus processes the WebRTC signalling, as well as the media data. But in the real communication world, signalling and media are usually divided into two plane, so that more flexibility can be provided. Janus-cloud fulfills this requirement by handling the signalling only and leaving media to Janus-server. Janus-cloud is developed by Python3 language which is more suitable to deal with the signalling, in the other hand, C language, which is used by Janus server, is more suitable to transmit media data in an efficient way .</source>
          <target state="translated">Janus是一款优秀的WebRTC服务器,简单且结构合理。它的可插拔设计和复杂的API令人印象深刻,令人惊叹。但它也有一些缺点。首先,Janus被设计成一个独立的服务器,无法扩展以支持庞大的RTC工作负载。但在基于云的环境中,可扩展性是必不可少的。在Janus-cloud的帮助下,工程师可以轻松构建一个大型的、可扩展的WebRTC服务器集群系统。其次,Janus对WebRTC信令以及媒体数据进行处理。但在现实通信世界中,信令和媒体通常分为两个平面,这样可以提供更多的灵活性。Janus-cloud只处理信令,而将媒体交给Janus-server来处理,从而满足了这一要求。Janus-cloud是由Python3语言开发的,Python3语言更适合处理信令,另一方面,Janus服务器使用的C语言更适合高效地传输媒体数据。</target>
        </trans-unit>
        <trans-unit id="fed1fe19451ff72552de86a1b08b972d5550dc5e" translate="yes" xml:space="preserve">
          <source>Janus-cloud</source>
          <target state="translated">杰纳斯云</target>
        </trans-unit>
        <trans-unit id="f5589755f48ff049c4f45276d983e407c922413a" translate="yes" xml:space="preserve">
          <source>Janus-cloud has two main components, Janus-proxy and Janus-sentinel.</source>
          <target state="translated">Janus-cloud有两个主要组件,Janus-proxy和Janus-sentinel。</target>
        </trans-unit>
        <trans-unit id="d32fc3795642df7434e8ecb9b2811cc9efc2f515" translate="yes" xml:space="preserve">
          <source>Janus-cloud is a cluster solution for Janus WebRTC server, by API proxy approach</source>
          <target state="translated">Janus-cloud是Janus WebRTC服务器的集群解决方案,采用API代理方式。</target>
        </trans-unit>
        <trans-unit id="ffd75b5c9406c6852b86ccbdf179f8684057a41b" translate="yes" xml:space="preserve">
          <source>Janus-cloud is an JANUS API proxy to construct the Janus WebRTC server cluster, which is based on Python3 so that it can be deployed on any platform. A Back-to-Back API proxy would be deployed between the client and the original Janus servers. In one hand, the WebRTC client communicates with Janus-cloud proxy through Janus' original  API, just like with the real Janus server. In the other hand, Janus-cloud proxy would forwards the requests to the back-end Janus server in the cluster on behave of the client. Janus-cloud proxy is only responsible for the API (signalling) processing, while media streams is still left to Janus server to relay, so that the clients would establish the PeerConnections with the back-end Janus server directly, without Janus-cloud involvement. In this case, Janus-cloud proxy can be considered as a WebRTC signal server, while the original Janus server would be downgraded to work as a WebRTC media server.</source>
          <target state="translated">Janus-cloud是一个JANUS API代理,用于构建Janus WebRTC服务器集群,它基于Python3,所以可以部署在任何平台上。在客户端和原Janus服务器之间会部署一个Back-to-Back API代理。一方面,WebRTC客户端通过Janus原有的API与Janus-cloud代理进行通信,就像与真正的Janus服务器一样。另一方面,Janus-cloud代理会根据客户端的行为将请求转发到集群中的后端Janus服务器。Janus-cloud代理只负责API(信令)处理,而媒体流仍由Janus服务器转发,这样客户端就会直接与后端Janus服务器建立PeerConnections,无需Janus-cloud参与。在这种情况下,Janus-cloud代理可以看作是WebRTC信号服务器,而原有的Janus服务器将降级为WebRTC媒体服务器工作。</target>
        </trans-unit>
        <trans-unit id="f359acba03f43f4bdb24b3c719ee63b0d6c33191" translate="yes" xml:space="preserve">
          <source>Janus-cloud supports python 3.5 and up. It's strongly recommended to install Janus-cloud in a python virtual environment, like &quot;venv&quot;.</source>
          <target state="translated">Janus-cloud支持python 3.5及以上版本。强烈建议将Janus-cloud安装在python虚拟环境中,比如 &quot;venv&quot;。</target>
        </trans-unit>
        <trans-unit id="e7ead6e7558aa2af82ae7fe36341684d4056accb" translate="yes" xml:space="preserve">
          <source>Janus-proxy</source>
          <target state="translated">雅努斯代理</target>
        </trans-unit>
        <trans-unit id="0bedea0f1b557a10fda42863807dd24dc4183ca6" translate="yes" xml:space="preserve">
          <source>Janus-proxy is composed of many plugins, and the business logic of Janus-proxy is implemented by these plugins. The following plugins are provided within Janus-proxy by now.</source>
          <target state="translated">Janus-proxy是由很多插件组成的,Janus-proxy的业务逻辑就是由这些插件实现的。目前Janus-proxy中已经提供了以下插件。</target>
        </trans-unit>
        <trans-unit id="fc53c7b441da04ebfbadc0bb7d321001a76e43c7" translate="yes" xml:space="preserve">
          <source>Janus-proxy is often deployed on a standalone machine between WebRTC client(like Browser) and Janus server. All signal  from WebRTC client would be received by Janus-proxy first , then relayed to one of the backend Janus servers.</source>
          <target state="translated">Janus-proxy通常部署在WebRTC客户端(如Browser)和Janus服务器之间的独立机器上。所有来自WebRTC客户端的信号将首先被Janus-proxy接收,然后转发到Janus服务器的后台。</target>
        </trans-unit>
        <trans-unit id="621b96dfe72bb25b72d9e7e064c02317a2e0fff7" translate="yes" xml:space="preserve">
          <source>Janus-proxy is responsible for signal handling, which communicates with the WebRTC client and relay the signal from client to the backend Janus servers. It conceals the detail of the backend Janus server cluster and output the same interface with the original Janus server. Janus-proxy is usually running on a standalone machine which is between the WebRTC client and the backend Janus servers. The WebRTC client interact with Janus-proxy for signal, but transfer to/from the real Janus Server for media. Janus-proxy has the following features/limitation:</source>
          <target state="translated">Janus-proxy负责信号处理,它与WebRTC客户端进行通信,将客户端的信号中转到后台Janus服务器。它隐藏了后端Janus服务器集群的细节,并输出与原Janus服务器相同的接口。Janus-proxy通常运行在单机上,介于WebRTC客户端和后端Janus服务器之间。WebRTC客户端与Janus-proxy进行信号交互,而与真正的Janus服务器进行媒体传输。Janus-proxy有以下特点/限制。</target>
        </trans-unit>
        <trans-unit id="de94395e4dcdc8ca4c1826746908c78bc8b954a5" translate="yes" xml:space="preserve">
          <source>Janus-proxy support api_secret authorization</source>
          <target state="translated">Janus-proxy支持api_secret授权。</target>
        </trans-unit>
        <trans-unit id="000db7e4745d74f0ce05afaa3c7acd747f58cb9e" translate="yes" xml:space="preserve">
          <source>Janus-sentinel</source>
          <target state="translated">杰纳斯哨兵</target>
        </trans-unit>
        <trans-unit id="691e7afd8827734587439b2a7f69e465c3b1d885" translate="yes" xml:space="preserve">
          <source>Janus-sentinel is often deployed along with the Janus server on the same machine. Janus-sentinel keep Janus process running and monitor its status, then report to Janus-proxy at intervals.</source>
          <target state="translated">Janus-sentinel通常和Janus服务器一起部署在同一台机器上。Janus-sentinel保持Janus进程的运行并监控其状态,然后每隔一段时间向Janus-proxy报告。</target>
        </trans-unit>
        <trans-unit id="33ab00dc15f3cc75f2d8e85d353cf08ee0330d11" translate="yes" xml:space="preserve">
          <source>Janus-sentinel is responsible to care for the Janus server, normally, it runs at the same (virtual) machine with the Janus server. it has the following capabilities:</source>
          <target state="translated">Janus-sentinel负责照顾Janus服务器,通常,它与Janus服务器运行在同一台(虚拟)机器上,它有以下功能。</target>
        </trans-unit>
        <trans-unit id="fa4893ce72dd265afcbb40373e95ad90ad9dacc4" translate="yes" xml:space="preserve">
          <source>Janus-sentinel support admin_secret for sending admin API request</source>
          <target state="translated">Janus-sentinel支持admin_secret用于发送管理API请求。</target>
        </trans-unit>
        <trans-unit id="db8842520ac6d1e672e56b2942d3cbaf0674229c" translate="yes" xml:space="preserve">
          <source>Keep It Simple, and Stupid</source>
          <target state="translated">保持简单和愚蠢</target>
        </trans-unit>
        <trans-unit id="6ad306f26ea1f1e6f1b4447c69e610f4ae97351b" translate="yes" xml:space="preserve">
          <source>Monitor the status of the Janus server, and report it to Janus-proxy through HTTP</source>
          <target state="translated">监控Janus服务器的状态,并通过HTTP向Janus-proxy报告。</target>
        </trans-unit>
        <trans-unit id="51c2cbd9aa575946d7dbf6299fa2dfc6761724d8" translate="yes" xml:space="preserve">
          <source>Note: the process of the Janus server can be started and maintained by the other system tools or system administrator manual, instead of Janus-sentinel. In this case, Janus-sentinel is only responsible for monitoring Janus server's status by its WebSocket API. But this approach is not a good idea.</source>
          <target state="translated">注:Janus服务器的进程可以由其他系统工具或系统管理员手册来启动和维护,而不是Janus-sentinel。在这种情况下,Janus-sentinel只负责通过其WebSocket API来监控Janus服务器的状态。但这种方式并不是一个好主意。</target>
        </trans-unit>
        <trans-unit id="aa38ad8efd658f7c9ffb75b50f1555fc4c6024db" translate="yes" xml:space="preserve">
          <source>Only provide the WebSocket(s) API, not provide RESTful, RabbitMQ, MQTT, Nanomsg and UnixSockets like Janus</source>
          <target state="translated">只提供WebSocket(s)API,不提供RESTful、RabbitMQ、MQTT、Nanomsg和UnixSockets(如Janus)。</target>
        </trans-unit>
        <trans-unit id="85efcc6390102f6bcdb1a7a67537e8875c9e9f87" translate="yes" xml:space="preserve">
          <source>Pluggable, support the new features through developing the new plugin</source>
          <target state="translated">可插拔,通过开发新插件来支持新的功能。</target>
        </trans-unit>
        <trans-unit id="ed5eb9491d5f8a2b73f639c8a1b9f9064aeacaed" translate="yes" xml:space="preserve">
          <source>Pluggable. Its business functionality is implemented by the various plugins</source>
          <target state="translated">可插拔。其业务功能由各种插件实现</target>
        </trans-unit>
        <trans-unit id="e4b9eac34cf85f155cf34748d6e80531d30ee3d4" translate="yes" xml:space="preserve">
          <source>Python &amp;gt;= 3.5</source>
          <target state="translated">Python&amp;gt; = 3.5</target>
        </trans-unit>
        <trans-unit id="e6bb8859a2f82dc2eb2920b0c520b16469ee8f8a" translate="yes" xml:space="preserve">
          <source>Scalable, Janus media servers can be added/removed to/from the cluster dynamically</source>
          <target state="translated">可扩展的Janus媒体服务器可以动态地添加/移除到集群中/从集群中移除。</target>
        </trans-unit>
        <trans-unit id="3f3a3f8425806efc02879be0b9a0df716236a0f8" translate="yes" xml:space="preserve">
          <source>Scalable. The backend Janus server can be added/removed to/from Janus-proxy dynamically</source>
          <target state="translated">可升级。后端Janus服务器可以动态地添加/删除到/从Janus-proxy中。</target>
        </trans-unit>
        <trans-unit id="8b2388feb3a0d592dc4c0a87fe3fe13c4ae8ebfb" translate="yes" xml:space="preserve">
          <source>Some resource files, like sample configuration(with explanations), html test scripts, and etc, are shipped within the project source.
After installation, these resource would be installed under &lt;strong&gt;&amp;lt;sys.prefix&amp;gt;/opt/janus-cloud&lt;/strong&gt; where &amp;lt;sys.prefix&amp;gt; is the root directory of your filesystem. or the the root directory of virtual environment if install in a virtual environment.</source>
          <target state="translated">项目资源中随附了一些资源文件，例如样本配置（带有说明），html测试脚本等。安装后，这些资源将安装在&lt;strong&gt;&amp;lt;sys.prefix&amp;gt; / opt / janus-cloud&lt;/strong&gt;下，其中&amp;lt;sys.prefix&amp;gt;是文件系统的根目录。或虚拟环境的根目录（如果安装在虚拟环境中）。</target>
        </trans-unit>
        <trans-unit id="3a2d617d400862e5208f80810848194503222204" translate="yes" xml:space="preserve">
          <source>Supervise the process of the Janus server, and keep it running</source>
          <target state="translated">监督Janus服务器的进程,并保持其运行。</target>
        </trans-unit>
        <trans-unit id="638ad8e7307d8226e233ded56c0ba701cb74785c" translate="yes" xml:space="preserve">
          <source>Support Janus media service self-register, service monitor, circuit breaker</source>
          <target state="translated">支持Janus媒体服务自助注册、服务监控、断路器。</target>
        </trans-unit>
        <trans-unit id="e073de32adcfb72f0d02d7f99a6735df45e35dbf" translate="yes" xml:space="preserve">
          <source>Support RESTful admin interface</source>
          <target state="translated">支持RESTful管理界面</target>
        </trans-unit>
        <trans-unit id="08c952bff6e4925b2555c8a49aa23d68e7fc3368" translate="yes" xml:space="preserve">
          <source>Support multi algorithm to choose which backend server to relay signal</source>
          <target state="translated">支持多种算法选择中转信号的后端服务器。</target>
        </trans-unit>
        <trans-unit id="9664debc06de13e05160b5547727478f15993848" translate="yes" xml:space="preserve">
          <source>Support post the status/workload statistic to multi HTTP URL</source>
          <target state="translated">支持将状态/工作量统计发布到多个HTTP URL上。</target>
        </trans-unit>
        <trans-unit id="ab953b7d4ecf8fa377f63a14bb449d890dd0cf4a" translate="yes" xml:space="preserve">
          <source>The APIs of Videoroom, Videocall, P2pcall is compatible with Janus-gateway of v0.9.2</source>
          <target state="translated">Videoroom,Videocall,P2pcall的API兼容Janus-gateway v0.9.2。</target>
        </trans-unit>
        <trans-unit id="325052c239093f44ec7b528cabd07953d2b168ae" translate="yes" xml:space="preserve">
          <source>The structure of Janus-cloud would be similar with the below topology.</source>
          <target state="translated">Janus-cloud的结构将与下面的拓扑结构相似。</target>
        </trans-unit>
        <trans-unit id="b32bb89fa947270f5232a126844f11bc035ae4c2" translate="yes" xml:space="preserve">
          <source>This is a plugin implementing a videoconferencing SFU, just like videoroom plugin of the Janus server. It tries to keep almost the same API with the videoroom plugin of Janus server, and scale it out by distributing different publishers to different backend Janus server, so that Janus-proxy can support more publishers in one videoconferencing room than single Janus server. Contrast to the videoroom plugin of Janus server, there are some limitations below on this plugin to simplify the code.</source>
          <target state="translated">这是一个实现视频会议SFU的插件,就像Janus服务器的videoroom插件一样。它试图与Janus服务器的视频会议室插件保持几乎相同的API,并通过将不同的发布者分配到不同的Janus服务器后台来扩展它,这样Janus-proxy可以在一个视频会议室中支持比单个Janus服务器更多的发布者。与Janus服务器的视频会议室插件相比,为了简化代码,该插件有以下一些限制。</target>
        </trans-unit>
        <trans-unit id="f8ed0f916765df142377d0a04fabcaf231b358f1" translate="yes" xml:space="preserve">
          <source>This is a simple video call plugin which allow two WebRTC peer communicate with each other through the medium Janus server. It achieves the same function and outputs the same APIs with the videocall plugin of Janus server, as well as it can distribute the workload among the backend Janus servers.
Moreover, Janus-proxy also can be scaled out for videocall plugin to handle much more video calls. Different WebRTC peers may be assigned to different Janus-proxies which is able to communicates with each other through admin interface.</source>
          <target state="translated">这是一个简单的视频通话插件,它允许两个WebRTC对等体通过Janus服务器进行通信。它与Janus服务器的视频通话插件实现了相同的功能,输出了相同的API,并且可以在Janus服务器的后端分配工作。此外,Janus-proxy还可以为视频通话插件进行扩展,以处理更多的视频通话。不同的WebRTC对等体可以被分配到不同的Janus-proxies上,这些对等体可以通过管理界面相互通信。</target>
        </trans-unit>
        <trans-unit id="2325337d819df68aabbcf80a34b6ef27975bd6fb" translate="yes" xml:space="preserve">
          <source>This is a trivial EchoTest plugin which is only used for test and show plugin interface of Janus-proxy. It provide developers a skeleton for the new plugin development</source>
          <target state="translated">这是一个琐碎的EchoTest插件,只用于测试和展示Janus-proxy的插件界面。它为开发者提供了一个新插件开发的骨架。</target>
        </trans-unit>
        <trans-unit id="25946a17cc15fb169d425631ae5e0108460377e7" translate="yes" xml:space="preserve">
          <source>This is an other video call plugin, very similar to the videocall plugin, except that two WebRTC peer communicate with each other in p2p mode. It outputs same APIs like the videocall plugin, and also make Janus-proxy be able to scaled out to handle more video call. However no backend Janus servers is need to handle the media stream, because the WebRTC peers transmit the media data with each other directly.</source>
          <target state="translated">这是另一个视频通话插件,与videocall插件非常相似,只是两个WebRTC peer以p2p模式相互通信。它输出的API和videocall插件一样,同时也使Janus-proxy能够扩展以处理更多的视频通话。但是不需要Janus后端服务器来处理媒体流,因为WebRTC对等体之间直接传输媒体数据。</target>
        </trans-unit>
        <trans-unit id="4dfec7a2443dfed480702d9b3d9eee522dbe453e" translate="yes" xml:space="preserve">
          <source>To install Janus-cloud from PyPi,</source>
          <target state="translated">要从PyPi安装Janus-cloud。</target>
        </trans-unit>
        <trans-unit id="ac4c2f913e4ec7eacb5fdd6f2dfbb198884f31fa" translate="yes" xml:space="preserve">
          <source>To install Janus-cloud from project source</source>
          <target state="translated">从项目源头安装Janus-cloud</target>
        </trans-unit>
        <trans-unit id="e091bdc9b16a83b936ff50c437d0a48666a82dd2" translate="yes" xml:space="preserve">
          <source>WebSocket transport must be enabled to correspond with Janus-proxy/Janus-sentinel</source>
          <target state="translated">必须启用WebSocket传输,以对应Janus-proxy/Janus-sentinel。</target>
        </trans-unit>
        <trans-unit id="d354cdd36487ebdc2b92040002d37c73cff2e87c" translate="yes" xml:space="preserve">
          <source>Where &amp;lt;project_root&amp;gt; is the root directory of project source, which contains the setup.py file</source>
          <target state="translated">其中&amp;lt;project_root&amp;gt;是项目源的根目录，其中包含setup.py文件</target>
        </trans-unit>
        <trans-unit id="ba7615aa9ec2e85fa946978ece122db1c50fd0b8" translate="yes" xml:space="preserve">
          <source>[v0.1.0]  - 2020-03-29</source>
          <target state="translated">[v0.1.0]-2020-03-29</target>
        </trans-unit>
        <trans-unit id="30c56d0245e0740614841177c9444ce276935c05" translate="yes" xml:space="preserve">
          <source>[v0.2.0]  - 2020-05-10</source>
          <target state="translated">[v0.2.0]-2020-05-10</target>
        </trans-unit>
        <trans-unit id="b052fa88b2bf9d745c75c64c6b8a5d5c304b3c2c" translate="yes" xml:space="preserve">
          <source>[v0.3.0]  - 2020-06-21</source>
          <target state="translated">[v0.3.0]-2020-06-21</target>
        </trans-unit>
        <trans-unit id="709edb546fc2d9b717e27eb5c2b31536634a9fad" translate="yes" xml:space="preserve">
          <source>add rtp_forward operations to the admin API of videoroom plugin</source>
          <target state="translated">在videoroom插件的管理API中增加rtp_forward操作。</target>
        </trans-unit>
        <trans-unit id="afbd8a2d1ad7c0a8c233806ccffea23907cd9e18" translate="yes" xml:space="preserve">
          <source>audiolevel_event not support</source>
          <target state="translated">不支持音阶事件</target>
        </trans-unit>
        <trans-unit id="36e449bd954cc5f4bf22027606a7d8e79960f7a9" translate="yes" xml:space="preserve">
          <source>echotest</source>
          <target state="translated">回声测试</target>
        </trans-unit>
        <trans-unit id="c327d71c9f5c8e728b0e8b1998c076a2af407cd2" translate="yes" xml:space="preserve">
          <source>echotest, videocall, p2pcall, videoroom plugins of janus-proxy are ready</source>
          <target state="translated">janus-proxy的echotest、videocall、p2pcall、videoroom等插件已准备就绪</target>
        </trans-unit>
        <trans-unit id="9007263c1e1fbbdbf2a143cb0fe6935a11136140" translate="yes" xml:space="preserve">
          <source>initial version released</source>
          <target state="translated">初版</target>
        </trans-unit>
        <trans-unit id="42f20359d1f12f652e0e1f08c5bef2bfc8a0bad2" translate="yes" xml:space="preserve">
          <source>janus-proxy</source>
          <target state="translated">janus-proxy</target>
        </trans-unit>
        <trans-unit id="03c90eed57dd83eeb6d754767062e29dafa2ae19" translate="yes" xml:space="preserve">
          <source>janus-proxy and janus-sentinel are finished</source>
          <target state="translated">janus-proxy和janus-sentinel已完成</target>
        </trans-unit>
        <trans-unit id="709f4a2d645f6689f31e6a971bf44a8827d5dec2" translate="yes" xml:space="preserve">
          <source>janus-sentinel</source>
          <target state="translated">倭寇哨兵</target>
        </trans-unit>
        <trans-unit id="3d79ee67b07dd30cce43191d0f775f0fc2f744e7" translate="yes" xml:space="preserve">
          <source>p2pcall</source>
          <target state="translated">对讲机</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">pip</target>
        </trans-unit>
        <trans-unit id="bff5288d43b5b0b423a623fd27ab60ad387791d3" translate="yes" xml:space="preserve">
          <source>setuptools</source>
          <target state="translated">设置工具</target>
        </trans-unit>
        <trans-unit id="af0a40ca10d135b205bf9a9f908de4e41e62b17e" translate="yes" xml:space="preserve">
          <source>string_ids not support</source>
          <target state="translated">不支持string_ids</target>
        </trans-unit>
        <trans-unit id="7a73ae193ee383a1dc64f98dae66fdaecf66d74e" translate="yes" xml:space="preserve">
          <source>subscriber switch not support</source>
          <target state="translated">不支持用户交换机</target>
        </trans-unit>
        <trans-unit id="be10da670f2464a2cf78dcef8a14d930ac84eff5" translate="yes" xml:space="preserve">
          <source>support redis to store the backend server info</source>
          <target state="translated">支持redis来存储后台服务器信息。</target>
        </trans-unit>
        <trans-unit id="2e889bea7a35e5a68464d2ba557a0907adabb778" translate="yes" xml:space="preserve">
          <source>support rtp_forward feature for videoroom</source>
          <target state="translated">支持视频室的rtp_forward功能。</target>
        </trans-unit>
        <trans-unit id="704187f0fb6c2b5ab112b0d1dee82a5e2c5cd3d6" translate="yes" xml:space="preserve">
          <source>there are the following requirements on the backend Janus server when deploying with Janus-cloud:</source>
          <target state="translated">在使用Janus-cloud部署时,后台Janus服务器上有以下要求。</target>
        </trans-unit>
        <trans-unit id="e40c22816f2775685d4383008b025693a4f6b0b8" translate="yes" xml:space="preserve">
          <source>token_auth must be disabled</source>
          <target state="translated">必须禁用token_auth</target>
        </trans-unit>
        <trans-unit id="da28e2e86c6d6c7a7b3f692a8c370aa1e8406cff" translate="yes" xml:space="preserve">
          <source>videocall</source>
          <target state="translated">语音电话</target>
        </trans-unit>
        <trans-unit id="30aa3d5e84bff79310229e26a9a54a34e4ce2348" translate="yes" xml:space="preserve">
          <source>videoroom</source>
          <target state="translated">录像厅</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
