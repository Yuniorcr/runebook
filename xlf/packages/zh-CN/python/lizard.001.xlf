<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/lizard/">
    <body>
      <group id="lizard">
        <trans-unit id="f9321cb54e2c9ff0a971dda406afd95711e00920" translate="yes" xml:space="preserve">
          <source>-C10</source>
          <target state="translated">-C10</target>
        </trans-unit>
        <trans-unit id="258824eb3becda0089745366018765b7ecf2134f" translate="yes" xml:space="preserve">
          <source>-L10</source>
          <target state="translated">-L10</target>
        </trans-unit>
        <trans-unit id="2cb74b8a7d38c4011a7f9a557907c868bcdb7d3d" translate="yes" xml:space="preserve">
          <source>-Tcyclomatic_complexity=10</source>
          <target state="translated">-Tcyclomatic_complexity = 10</target>
        </trans-unit>
        <trans-unit id="72d8e8a852f8184cc6911dd6669503ac61a326db" translate="yes" xml:space="preserve">
          <source>-Tlength=10</source>
          <target state="translated">-Tlength = 10</target>
        </trans-unit>
        <trans-unit id="bede6624c813bdf41ebc6173ef9ad2c13fcb17d9" translate="yes" xml:space="preserve">
          <source>-Tnloc=10</source>
          <target state="translated">-Tnloc = 10</target>
        </trans-unit>
        <trans-unit id="e2beb907fe91e6ef68c21d074083a7c85cfd45eb" translate="yes" xml:space="preserve">
          <source>-Tparameter_count=10</source>
          <target state="translated">-Tparameter_count = 10</target>
        </trans-unit>
        <trans-unit id="3ebcc976c2dd759fcc3d310a5b0d941d1658a6c4" translate="yes" xml:space="preserve">
          <source>-a10</source>
          <target state="translated">-a10</target>
        </trans-unit>
        <trans-unit id="03593f2d1e24ead3f85c5377f4b77b360396c139" translate="yes" xml:space="preserve">
          <source>.
The option</source>
          <target state="translated">。选项</target>
        </trans-unit>
        <trans-unit id="e07e1dbdc416ef697dadf3ce7fdb3f85b42815fa" translate="yes" xml:space="preserve">
          <source>A code analyzer without caring the C/C++ header files. It works with Java, C/C++, JavaScript, Python, Ruby, Swift, Objective C. Metrics includes cyclomatic complexity number etc.</source>
          <target state="translated">一个不需要关心C/C++头文件的代码分析器,它适用于Java、C/C++、JavaScript、Python、Ruby、Swift、Objective C。它适用于Java、C/C++、JavaScript、Python、Ruby、Swift、Objective C。</target>
        </trans-unit>
        <trans-unit id="d9e9f235261e1a7230a8c93c93e0c332adbd80b3" translate="yes" xml:space="preserve">
          <source>A list of supported languages:</source>
          <target state="translated">支持的语言列表。</target>
        </trans-unit>
        <trans-unit id="e40d447e08990d74eae8cd3ddd81a8849e285293" translate="yes" xml:space="preserve">
          <source>Analyze a folder recursively: lizard mahjong_game/src</source>
          <target state="translated">递归分析一个文件夹:lizard mahjong_game/src</target>
        </trans-unit>
        <trans-unit id="40d6f10f3765aa78647963b0566b3b7b88c0b439" translate="yes" xml:space="preserve">
          <source>By default lizard will search for any source code that it knows and mix
all the results together. This might not be what you want. You can use
the &amp;ldquo;-l&amp;rdquo; option to select language(s).</source>
          <target state="translated">默认情况下，蜥蜴将搜索它知道的任何源代码并将所有结果混合在一起。这可能不是您想要的。您可以使用&amp;ldquo; -l&amp;rdquo;选项来选择语言。</target>
        </trans-unit>
        <trans-unit id="fdd9f6f4ddb4f227c3c467e72333ae4b2df17140" translate="yes" xml:space="preserve">
          <source>C# (C Sharp)</source>
          <target state="translated">C#(C Sharp)</target>
        </trans-unit>
        <trans-unit id="b5a4ad577851c1a6b0d795dd6dd6df987b0aec97" translate="yes" xml:space="preserve">
          <source>C/C++ (works with C++14)</source>
          <target state="translated">C/C++(适用于C++14)</target>
        </trans-unit>
        <trans-unit id="88a7b0f5a508888922c3e98ceaba377130a95d08" translate="yes" xml:space="preserve">
          <source>C/C++ digraphs and trigraphs are not recognized.</source>
          <target state="translated">C/C++数字图和三角图不被识别。</target>
        </trans-unit>
        <trans-unit id="57ae41e7d8dfd70ec4e252da63836bf7e6ae9eeb" translate="yes" xml:space="preserve">
          <source>C/C++ preprocessing or macro expansion is not performed.
For example, using macro instead of parentheses (or partial statements in macros)
can confuse Lizard&amp;rsquo;s bracket stacks.</source>
          <target state="translated">不执行C / C ++预处理或宏扩展。例如，使用宏而不是括号（或宏中的部分语句）会混淆蜥蜴的括号堆栈。</target>
        </trans-unit>
        <trans-unit id="e4f5f2d7cddef0e3ac846cc48280b54dc659561e" translate="yes" xml:space="preserve">
          <source>CCN (cyclomatic complexity number),</source>
          <target state="translated">CCN(循环复杂度数)。</target>
        </trans-unit>
        <trans-unit id="32893b27b7c12b31474f093e2f7ae9ce4a8b626d" translate="yes" xml:space="preserve">
          <source>Code Duplicate Detector</source>
          <target state="translated">代码重复检测器</target>
        </trans-unit>
        <trans-unit id="f512304d03f852e06827dbb0cbc041e34ca895b2" translate="yes" xml:space="preserve">
          <source>Example use</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="09013b516144cde37e2db5e9d19b0c84415b898d" translate="yes" xml:space="preserve">
          <source>Exclude anything in the tests folder:</source>
          <target state="translated">排除测试文件夹中的任何内容。</target>
        </trans-unit>
        <trans-unit id="7b1d31545d25a8ff0739fcb82ed07fc8217010e2" translate="yes" xml:space="preserve">
          <source>GDScript</source>
          <target state="translated">GDScript</target>
        </trans-unit>
        <trans-unit id="bc90a8d69a5eb29c60c360936f02d6e079c75ea9" translate="yes" xml:space="preserve">
          <source>Generate A Tag Cloud For Your Code</source>
          <target state="translated">为您的代码生成一个标签云</target>
        </trans-unit>
        <trans-unit id="f44271afeb31f1a23929417cd0baede5654047bc" translate="yes" xml:space="preserve">
          <source>Generated code</source>
          <target state="translated">生成的代码</target>
        </trans-unit>
        <trans-unit id="92f4645da18d229c1e99797e4ee0203092e4c3ed" translate="yes" xml:space="preserve">
          <source>Golang</source>
          <target state="translated">高朗</target>
        </trans-unit>
        <trans-unit id="54522674580f2442376555fe16e90983bf48c69d" translate="yes" xml:space="preserve">
          <source>If for some reason you would like to ignore the warnings, you can use
the whitelist. Add &amp;lsquo;whitelizard.txt&amp;rsquo; to the current folder (or use -W to point to the whitelist file), then the
functions defined in the file will be ignored. Please notice that if you assign the file pathname, it needs to
be exactly the same relative path as Lizard to find the file. An easy way to get the file pathname is to copy it from
the Lizard warning output.
This is an example whitelist:</source>
          <target state="translated">如果出于某种原因您想忽略警告，则可以使用白名单。将&amp;ldquo; whitelizard.txt&amp;rdquo;添加到当前文件夹（或使用-W指向白名单文件），然后文件中定义的功能将被忽略。请注意，如果您分配文件路径名，则它必须与Lizard完全相同的相对路径才能找到该文件。获取文件路径名的一种简单方法是从Lizard警告输出中复制它。这是一个白名单示例：</target>
        </trans-unit>
        <trans-unit id="02d3e88b0d3817983233fc047cd979ee47c36c58" translate="yes" xml:space="preserve">
          <source>If you want a proper install:</source>
          <target state="translated">如果你想正确安装。</target>
        </trans-unit>
        <trans-unit id="62af59146478e88bdd3e80610da3eccae935bcdd" translate="yes" xml:space="preserve">
          <source>In addition to asserting the correct code,
Lizard may choose not to deal with some advanced or complicated language features:</source>
          <target state="translated">除了断言代码正确外,Lizard可能会选择不处理一些高级或复杂的语言功能。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="c5a3f877dd969ee461f2139db720f853d8044b93" translate="yes" xml:space="preserve">
          <source>It counts</source>
          <target state="translated">它算得上是</target>
        </trans-unit>
        <trans-unit id="ab215c3828ac7b54bfef79da0460d772ff78b43f" translate="yes" xml:space="preserve">
          <source>It requires python2.7 or above (early versions are not verified).</source>
          <target state="translated">它需要python2.7或以上版本(早期版本未经验证)。</target>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">爪哇</target>
        </trans-unit>
        <trans-unit id="47e03525c9e85607423e9fd8db32266824bc1d3d" translate="yes" xml:space="preserve">
          <source>JavaScript (With ES6 and JSX)</source>
          <target state="translated">JavaScript(使用ES6和JSX)</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">局限性</target>
        </trans-unit>
        <trans-unit id="9b5e7e84d2ab1c8d949c5b0be56776ef3dca72fb" translate="yes" xml:space="preserve">
          <source>Literatures Referring to Lizard</source>
          <target state="translated">参考蜥蜴的文学作品</target>
        </trans-unit>
        <trans-unit id="bcb2ff65ba49568fd9ea9fb5c2c50d41b3d181a3" translate="yes" xml:space="preserve">
          <source>Lizard guarantees to terminate eventually (i.e., no forever loops, hangs)
without hard failures (e.g., exit, crash, exceptions).</source>
          <target state="translated">Lizard保证最终终止(即没有永远的循环、挂起),没有硬故障(如退出、崩溃、异常)。</target>
        </trans-unit>
        <trans-unit id="1c7a77155264c4da8d933c76d382399454a4a2d3" translate="yes" xml:space="preserve">
          <source>Lizard has a simple solution with generated code. Any code in a source file that is following
a comment containing &amp;ldquo;GENERATED CODE&amp;rdquo; will be ignored completely. The ignored code will not
generate any data, except the file counting.</source>
          <target state="translated">蜥蜴用生成的代码有一个简单的解决方案。源文件中跟随&amp;ldquo; GENERATED CODE&amp;rdquo;的任何代码都将被完全忽略。被忽略的代码将不会生成任何数据，但文件计数除外。</target>
        </trans-unit>
        <trans-unit id="3a7ff4a6637140c4c5f0c9265d18edb9c6796968" translate="yes" xml:space="preserve">
          <source>Lizard is also used as a plugin for fastlane to help check code complexity and submit xml report to sonar.</source>
          <target state="translated">Lizard也被用作fastlane的插件,帮助检查代码复杂度并向sonar提交xml报告。</target>
        </trans-unit>
        <trans-unit id="a9889069de5b33ce1949d38f7939a1daa737cbe9" translate="yes" xml:space="preserve">
          <source>Lizard is an extensible Cyclomatic Complexity Analyzer for many programming languages
including C/C++ (doesn&amp;rsquo;t require all the header files or Java imports). It also does
copy-paste detection (code clone detection/code duplicate detection) and many other forms of static
code analysis.</source>
          <target state="translated">Lizard是可扩展的Cyclomatic Complexity Analyzer，适用于许多编程语言，包括C / C ++（不需要所有头文件或Java导入）。它还执行复制粘贴检测（代码克隆检测/代码重复检测）和许多其他形式的静态代码分析。</target>
        </trans-unit>
        <trans-unit id="cd7398c3de321ef9ef69d7e72f0d8c3061e4ebb0" translate="yes" xml:space="preserve">
          <source>Lizard is often used in software related researches. If you used it to support your work, you may contact the lizard author to add your work in the following list.</source>
          <target state="translated">蜥蜴经常被用于软件相关研究中。如果您使用它来支持您的工作,您可以联系蜥蜴作者,将您的工作添加到以下列表中。</target>
        </trans-unit>
        <trans-unit id="26db039a5d52adc6061fc4a35d58d8c16eece7cf" translate="yes" xml:space="preserve">
          <source>Lizard requires syntactically correct code.
Upon processing input with incorrect or unknown syntax:</source>
          <target state="translated">Lizard需要语法正确的代码。在处理语法不正确或未知的输入时。</target>
        </trans-unit>
        <trans-unit id="b0832074630eb731d7fbe8074de48a90cd9bb220" translate="yes" xml:space="preserve">
          <source>Lua</source>
          <target state="translated">路亚</target>
        </trans-unit>
        <trans-unit id="9cf4af30df052d80876381f9ec0e05811ecd3d08" translate="yes" xml:space="preserve">
          <source>Objective-C</source>
          <target state="translated">Objective-C</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">选项</target>
        </trans-unit>
        <trans-unit id="04298e88259772f6ef3523e4df26c77589975627" translate="yes" xml:space="preserve">
          <source>Options in Comments</source>
          <target state="translated">评论中的选项</target>
        </trans-unit>
        <trans-unit id="7396e9740257da2a574bab976a945d545790bcfa" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve got the source:</source>
          <target state="translated">或者，如果您有来源：</target>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="translated">PHP</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">蟒蛇</target>
        </trans-unit>
        <trans-unit id="b217e98c3bf70f3cf4633a5447d6587eea974ba1" translate="yes" xml:space="preserve">
          <source>Ruby</source>
          <target state="translated">红宝石</target>
        </trans-unit>
        <trans-unit id="86c040b1e97657b2d3964167ab34f981802a0be5" translate="yes" xml:space="preserve">
          <source>Run for the code under current folder (recursively):</source>
          <target state="translated">运行当前文件夹下的代码(递归)。</target>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="translated">锈蚀</target>
        </trans-unit>
        <trans-unit id="45c7613636e05b259be1f22ccf0dd23216b205b7" translate="yes" xml:space="preserve">
          <source>S Martin-Haugh et al 2017 J. Phys.: Conf. Ser. 898 072011</source>
          <target state="translated">S Martin-Haugh等2017年J.Phys..:Conf.Ser.898 072011</target>
        </trans-unit>
        <trans-unit id="7b7e70bcf209a5323526033a9cbf768a3ae70c2c" translate="yes" xml:space="preserve">
          <source>Scala</source>
          <target state="translated">Scala</target>
        </trans-unit>
        <trans-unit id="b21ecc0ae732fd9bd16d29a7b6c64cb80d845324" translate="yes" xml:space="preserve">
          <source>Set warning threshold for any field:lizard -T nloc=25</source>
          <target state="translated">为任何字段设置警告阈值:lizard -T nloc=25。</target>
        </trans-unit>
        <trans-unit id="86d872481c91595b93c36cffca8d2e52cc3efaef" translate="yes" xml:space="preserve">
          <source>Software Quality in the ATLAS experiment at CERN, which refers to Lizard as one of the tools, has been published in the Journal of Physics: &lt;a href=&quot;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/072011&quot;&gt;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/072011&lt;/a&gt;</source>
          <target state="translated">CERN的ATLAS实验中的软件质量（将蜥蜴称为工具之一）已发表在《物理学杂志》上：&lt;a href=&quot;http://iopscience.iop.org/article/10.1088/1742-6596/898/7/072011&quot;&gt;http&lt;/a&gt; : //iopscience.iop.org/article/10.1088/1742-6596/898/7/ 072011</target>
        </trans-unit>
        <trans-unit id="28a17ad37e71f81e9c0d5427abc0df86df8c085a" translate="yes" xml:space="preserve">
          <source>Some C++ complicated templates may cause confusion with matching angle brackets
and processing less-than</source>
          <target state="translated">一些C++复杂的模板可能会造成匹配角括号的混乱,处理小于</target>
        </trans-unit>
        <trans-unit id="112ab020698e5fc0f4baecd7821a512d8c419a69" translate="yes" xml:space="preserve">
          <source>Swift</source>
          <target state="translated">迅捷</target>
        </trans-unit>
        <trans-unit id="bde060882217fa0e83f37c32f97f1a211d55c994" translate="yes" xml:space="preserve">
          <source>TTCN-3</source>
          <target state="translated">TTCN-3</target>
        </trans-unit>
        <trans-unit id="8d9594a87362ce1971b7a9efe4bfc116ba95e426" translate="yes" xml:space="preserve">
          <source>The option</source>
          <target state="translated">该选项</target>
        </trans-unit>
        <trans-unit id="64abd3b6390856b7d22bfc87511d76239240b912" translate="yes" xml:space="preserve">
          <source>There is a chance of a combination of the following soft failures:</source>
          <target state="translated">有可能出现以下软故障的组合。</target>
        </trans-unit>
        <trans-unit id="35be59e2cbeb3ee6d6b278b4d4492105893fa6f5" translate="yes" xml:space="preserve">
          <source>This approach makes the Lizard implementation
simpler and more focused with partial parsers for various languages.
Developers of Lizard attempt to minimize the possibility of soft failures.
Hard failures are bugs in Lizard code,
while soft failures are trade-offs or potential bugs.</source>
          <target state="translated">这种方法使得Lizard的实现更加简单,而且重点突出,有各种语言的部分解析器。Lizard的开发者试图将软故障的可能性降到最低。硬故障是Lizard代码中的错误,而软故障则是权衡或潜在的错误。</target>
        </trans-unit>
        <trans-unit id="8c6aa4373adbf8bb2d71b73205e8e23d92994d34" translate="yes" xml:space="preserve">
          <source>This tool actually calculates how complex the code &amp;lsquo;looks&amp;rsquo; rather than
how complex the code really &amp;lsquo;is&amp;rsquo;. People will need this tool because it&amp;rsquo;s
often very hard to get all the included folders and files right when
they are complicated. But we don&amp;rsquo;t really need that kind of accuracy for
cyclomatic complexity.</source>
          <target state="translated">该工具实际上计算的是代码&amp;ldquo;看起来&amp;rdquo;的复杂程度，而不是代码实际上&amp;ldquo;是&amp;rdquo;的复杂程度。人们将需要此工具，因为当它们很复杂时，通常很难正确地包含所有包含的文件夹和文件。但是，对于圈复杂度，我们实际上并不需要那种精度。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="e1954e5a6810fffdfe2f4a4a2e217be50df15ee1" translate="yes" xml:space="preserve">
          <source>Using lizard as Python module</source>
          <target state="translated">使用蜥蜴作为Python模块</target>
        </trans-unit>
        <trans-unit id="1d7c30a21399a364397fa7985421ca30e8154905" translate="yes" xml:space="preserve">
          <source>Warnings only (in clang/gcc formation):lizard -w mahjong_game</source>
          <target state="translated">仅限警告(在clang/gcc阵型中):lizard -w mahjong_game</target>
        </trans-unit>
        <trans-unit id="53c2ad308e416567345ed5fac7c4f48b8609157c" translate="yes" xml:space="preserve">
          <source>Whitelist</source>
          <target state="translated">白名单</target>
        </trans-unit>
        <trans-unit id="fe319fa0895a7f47e55075d55fc2289e3b3f2bea" translate="yes" xml:space="preserve">
          <source>You can also do</source>
          <target state="translated">你也可以做</target>
        </trans-unit>
        <trans-unit id="bb0f5d983c9e19bc254a483cb8df48293893cb30" translate="yes" xml:space="preserve">
          <source>You can also use lizard as a Python module in your code:</source>
          <target state="translated">你也可以在你的代码中使用蜥蜴作为Python模块。</target>
        </trans-unit>
        <trans-unit id="df5cbe243a1ca73de122ac671f8ad550d8a10176" translate="yes" xml:space="preserve">
          <source>You can also use source code string instead of file. But you need to
provide a file name (to identify the language).</source>
          <target state="translated">你也可以使用源代码字符串来代替文件,但你需要提供一个文件名(用来标识语言)。但你需要提供一个文件名(用来标识语言)。</target>
        </trans-unit>
        <trans-unit id="9968bd0e3032aa2f78e02320c117ac09d256ce47" translate="yes" xml:space="preserve">
          <source>You can generate a &amp;ldquo;Tag cloud&amp;rdquo; of your code by the following command. It counts the identifiers in your code (ignoring the comments).</source>
          <target state="translated">您可以通过以下命令生成代码的&amp;ldquo;标签云&amp;rdquo;。它计算代码中的标识符（忽略注释）。</target>
        </trans-unit>
        <trans-unit id="a8231394358a7d905280f809bf35ea57b0d6c685" translate="yes" xml:space="preserve">
          <source>You can set limitation for CCN (-C), the number of parameters (-a).
Functions that exceed these limitations will generate warnings. The exit
code of lizard will be none-Zero if there are warnings.</source>
          <target state="translated">你可以为CCN(-C)、参数数量(-a)设置限制。超过这些限制的函数将产生警告。如果出现警告,lizard的退出代码将为非零。</target>
        </trans-unit>
        <trans-unit id="1d07f3fe906fe382d9f570cce1c9831990175053" translate="yes" xml:space="preserve">
          <source>You can use options in the comments of the source code to change the
behavior of lizard. By putting &amp;ldquo;#lizard forgives&amp;rdquo; inside a function or
before a function it will suppress the warning for that function.</source>
          <target state="translated">您可以在源代码的注释中使用选项来更改蜥蜴的行为。通过在函数内部或函数之前放置&amp;ldquo; #lizard宽恕&amp;rdquo;，它将抑制对该函数的警告。</target>
        </trans-unit>
        <trans-unit id="62a951a21fcb352a7c4d589f31e9ea3c64dc21ca" translate="yes" xml:space="preserve">
          <source>fastlane-plugin-lizard</source>
          <target state="translated">fastlan-plugin-lizard</target>
        </trans-unit>
        <trans-unit id="1623ff3fb2530c0649945a76f60c3e59d33d1f08" translate="yes" xml:space="preserve">
          <source>improper analysis / tally</source>
          <target state="translated">分析/统计不当</target>
        </trans-unit>
        <trans-unit id="704e8cab853b9cfebb9ca9f45aa72aeb8aea3a2d" translate="yes" xml:space="preserve">
          <source>is equal to</source>
          <target state="translated">等于</target>
        </trans-unit>
        <trans-unit id="f4609e4fc56c8df5513a65b313b91cfe77f76d4b" translate="yes" xml:space="preserve">
          <source>lizard.py can be used as a stand alone Python script, most
functionalities are there. You can always use it without any
installation. To acquire all the functionalities of lizard, you will
need a proper install.</source>
          <target state="translated">lizard.py可以作为一个独立的Python脚本使用,大部分功能都在那里。你可以随时使用它而不需要安装。要获得lizard的所有功能,你需要进行适当的安装。</target>
        </trans-unit>
        <trans-unit id="70afe4df7ddf6590effac2e0c782192233188368" translate="yes" xml:space="preserve">
          <source>misinterpretation</source>
          <target state="translated">误读</target>
        </trans-unit>
        <trans-unit id="ed4cca949ebe06eec6edf03c2973b1b47d0ecefc" translate="yes" xml:space="preserve">
          <source>omission</source>
          <target state="translated">疏漏</target>
        </trans-unit>
        <trans-unit id="4fb57b05012ece7691c9751caecc5d50a72db02a" translate="yes" xml:space="preserve">
          <source>operators
inside of template arguments.</source>
          <target state="translated">在模板参数内的操作符。</target>
        </trans-unit>
        <trans-unit id="d93e68c234320b3f9c0a2e8b593a4926750ab240" translate="yes" xml:space="preserve">
          <source>or more-than</source>
          <target state="translated">或以上</target>
        </trans-unit>
        <trans-unit id="d5609a1b8c8727c27185779d95b6c119f9f77ced" translate="yes" xml:space="preserve">
          <source>parameter count of functions.</source>
          <target state="translated">函数的参数数。</target>
        </trans-unit>
        <trans-unit id="345e9ea7c857e75dedd9edb24c232e1cab297c19" translate="yes" xml:space="preserve">
          <source>sonar</source>
          <target state="translated">声纳</target>
        </trans-unit>
        <trans-unit id="da901d78a1a0e839058600ebff1da48414fe0b0b" translate="yes" xml:space="preserve">
          <source>success (the code under consideration is not relevant, e.g., global macros in C)</source>
          <target state="translated">成功(正在考虑的代码不相关,例如C语言中的全局宏)</target>
        </trans-unit>
        <trans-unit id="9f93689222a8f9de7484ab15fb1be8a92b2cf878" translate="yes" xml:space="preserve">
          <source>the nloc (lines of code without comments),</source>
          <target state="translated">nloc(不含注释的代码行)。</target>
        </trans-unit>
        <trans-unit id="3f1f1a432c305a51b144e4fad7af4efab87b4a8e" translate="yes" xml:space="preserve">
          <source>to set the limit of the NLOC. Any function that
has NLOC greater than 10 will generate a warning.</source>
          <target state="translated">来设置 NLOC 的限制。任何NLOC大于10的函数都会产生警告。</target>
        </trans-unit>
        <trans-unit id="1d8e61b907e133c3825d97606a570dacee8c2fc5" translate="yes" xml:space="preserve">
          <source>token count of functions.</source>
          <target state="translated">函数的令牌数。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
