<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/codebook/">
    <body>
      <group id="codebook">
        <trans-unit id="9ff267cd1dc0e4da77870ba5bed620a4e1a40777" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;a href=&quot;https://docs.python.org/3/library/ast.html&quot;&gt;https://docs.python.org/3/library/ast.html&lt;/a&gt;&amp;gt;`__ module to parse
your code into chunks which are then dumped into notebook cells.</source>
          <target state="translated">&amp;lt; &lt;a href=&quot;https://docs.python.org/3/library/ast.html&quot;&gt;https://docs.python.org/3/library/ast.html&lt;/a&gt; &amp;gt;`__模块将您的代码解析为大块，然后将其转储到笔记本单元中。</target>
        </trans-unit>
        <trans-unit id="28ed3a797da3c48c309a4ef792147f3c56cfec40" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">（</target>
        </trans-unit>
        <trans-unit id="944741b4a3f71b0cd6e15102a87f66c564fa2ce1" translate="yes" xml:space="preserve">
          <source>). When you see the message</source>
          <target state="translated">）。当您看到消息时</target>
        </trans-unit>
        <trans-unit id="03e2d596a0eaf0c60348f4598ec78e85273a3e06" translate="yes" xml:space="preserve">
          <source>. If you need to &amp;ldquo;re-dump&amp;rdquo; the code into the notebook then
hit</source>
          <target state="translated">。如果您需要将代码&amp;ldquo;重新转储&amp;rdquo;到笔记本中，请点击</target>
        </trans-unit>
        <trans-unit id="bbd6c5748aaacbc73132d7ec6e8675e7d102a5f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclaimer: pynt is in beta. Make sure to back-up your code before
using it!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;免责声明：pynt是beta版。使用前请确保备份您的代码！&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1910e1df6652085d74788e0a4d69cb3f3ed0b2a9" translate="yes" xml:space="preserve">
          <source>Alt Text</source>
          <target state="translated">Alt文字</target>
        </trans-unit>
        <trans-unit id="6b2bd3138238f58a48faf1c9b58b1932d755901b" translate="yes" xml:space="preserve">
          <source>Attach a jupyter notebook to a running process</source>
          <target state="translated">将一个jupyter笔记本连接到正在运行的进程上。</target>
        </trans-unit>
        <trans-unit id="b87ba198b75db0849877fba9019aa230997a94b5" translate="yes" xml:space="preserve">
          <source>C-cC-e</source>
          <target state="translated">C-cC-e</target>
        </trans-unit>
        <trans-unit id="376c4c7eb39ceb7eb3d7b1b0c008f78d408bc1b5" translate="yes" xml:space="preserve">
          <source>C-cC-r</source>
          <target state="translated">C-cC-r</target>
        </trans-unit>
        <trans-unit id="827876b853a5b66b0960cb2babc54c67aaaebf52" translate="yes" xml:space="preserve">
          <source>C-cC-s</source>
          <target state="translated">C-cC-s</target>
        </trans-unit>
        <trans-unit id="fee69fbd8d799498e55fedbab436e005cdf0317a" translate="yes" xml:space="preserve">
          <source>Check out my &lt;a href=&quot;https://youtu.be/MfM_TijHNYE&quot;&gt;SciPy 2018 talk&lt;/a&gt; for the
motivation and a feature tour of pynt.</source>
          <target state="translated">查看我的&lt;a href=&quot;https://youtu.be/MfM_TijHNYE&quot;&gt;SciPy 2018演讲&lt;/a&gt;，了解pynt的动机和功能介绍。</target>
        </trans-unit>
        <trans-unit id="d89a5ec1140ce5dd978c2baf15972fdf48b8b61f" translate="yes" xml:space="preserve">
          <source>Emacs</source>
          <target state="translated">Emacs</target>
        </trans-unit>
        <trans-unit id="3832c2056b8a4dbcc80c5a90f72f410f5bf9f5ec" translate="yes" xml:space="preserve">
          <source>Emacs IPython
Notebook</source>
          <target state="translated">Emacs IPython笔记本</target>
        </trans-unit>
        <trans-unit id="1c34c3c938ecc3424f3f2d8721d04b8051ef584d" translate="yes" xml:space="preserve">
          <source>Emacs minor mode for generating and interacting with jupyter notebooks</source>
          <target state="translated">Emacs小模式,用于生成和与jupyter笔记本交互。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特点</target>
        </trans-unit>
        <trans-unit id="00926ff3838f2492c3043d2efc326253b68c53f5" translate="yes" xml:space="preserve">
          <source>Generate jupyter notebooks on the fly</source>
          <target state="translated">在飞行中生成jupyter笔记本。</target>
        </trans-unit>
        <trans-unit id="963aef159cb5300aa47725dd995ed88996ab16f3" translate="yes" xml:space="preserve">
          <source>Get your code into a jupyter notebook. Anytime. Anywhere.</source>
          <target state="translated">把你的代码放到jupyter笔记本里。任何时间。任何地方。</target>
        </trans-unit>
        <trans-unit id="1a3cdfaac57ae03827b6e3fa0cf1eabc27bf205e" translate="yes" xml:space="preserve">
          <source>How pynt works</source>
          <target state="translated">pynt如何工作</target>
        </trans-unit>
        <trans-unit id="0db3fb3482a9e416e6f303b3c04938089660fd4b" translate="yes" xml:space="preserve">
          <source>However, just pasting your code into one big jupyter notebook cell is
not particularly useful. pynt also</source>
          <target state="translated">然而,仅仅将你的代码粘贴到一个大的jupyter笔记本单元中并不是特别有用。 pynt也</target>
        </trans-unit>
        <trans-unit id="68e86af45e88fd7838d8bfe9b07bdd8523192370" translate="yes" xml:space="preserve">
          <source>If you want to attach a jupyter notebook to a running process, then run
a command which hits the jupyter notebook code. Restart the jupyter
notebook kernel with</source>
          <target state="translated">如果你想把一个jupyter笔记本附加到一个正在运行的进程上,那么就运行一个打到jupyter笔记本代码的命令。重新启动jupyter笔记本内核,使用</target>
        </trans-unit>
        <trans-unit id="6865355c2d8e57117e81b6dffe2e802c79fbe6b3" translate="yes" xml:space="preserve">
          <source>Install the codebook module &lt;a href=&quot;https://pypi.python.org/pypi/codebook&quot;&gt;from
PyPI&lt;/a&gt; with
&lt;a href=&quot;https://pip.pypa.io/en/stable/&quot;&gt;pip&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;a href=&quot;https://pip.pypa.io/en/stable/&quot;&gt;pip &lt;/a&gt;&lt;a href=&quot;https://pypi.python.org/pypi/codebook&quot;&gt;从PyPI&lt;/a&gt;安装码本模块。</target>
        </trans-unit>
        <trans-unit id="e61cc3ded926a8844168d671830f932384b8f681" translate="yes" xml:space="preserve">
          <source>It is highly recommended that you familiarize yourself with &lt;a href=&quot;http://millejoh.github.io/emacs-ipython-notebook/&quot;&gt;Emacs
IPython Notebook
(EIN)&lt;/a&gt; first as
pynt, at its core, is a tool to make working with EIN easier.</source>
          <target state="translated">强烈建议您首先熟悉&lt;a href=&quot;http://millejoh.github.io/emacs-ipython-notebook/&quot;&gt;Emacs IPython Notebook（EIN），&lt;/a&gt;因为pynt的核心是使使用EIN更加容易的工具。</target>
        </trans-unit>
        <trans-unit id="6ca00890eebc515713563ab7d8334cabc170989e" translate="yes" xml:space="preserve">
          <source>Jupyter</source>
          <target state="translated">Jupyter</target>
        </trans-unit>
        <trans-unit id="b969d8c01d0f1cf2d98d949e408a8ade9bd19785" translate="yes" xml:space="preserve">
          <source>Never forget which cell a code line corresponds to.</source>
          <target state="translated">永远不要忘记一个代码行所对应的单元格。</target>
        </trans-unit>
        <trans-unit id="9217b8b0603fd451cd1eac1b57af9e643ff0da4c" translate="yes" xml:space="preserve">
          <source>No more copy and pasting code into jupyter notebooks. Each line of code
gets its own cell.</source>
          <target state="translated">不再需要将代码复制和粘贴到jupyter笔记本中。每一行代码都有自己的单元格。</target>
        </trans-unit>
        <trans-unit id="d6a4263bc874cbd25daad9f143579db5645d4cab" translate="yes" xml:space="preserve">
          <source>Once you have opened a python file and pynt mode is active, cursor over
to the region of code you would like to dump into a notebook and hit</source>
          <target state="translated">一旦你打开了一个python文件,并且pynt模式处于激活状态,将光标移到你想转储到笔记本的代码区域,然后点击</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">蟒蛇</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">快速入门</target>
        </trans-unit>
        <trans-unit id="5080ebd78aaa8f3e4acd6d4cd153e6b28156a27a" translate="yes" xml:space="preserve">
          <source>Related Projects</source>
          <target state="translated">相关项目</target>
        </trans-unit>
        <trans-unit id="88fa7384c39dca61b830a525ab57d4cc11434775" translate="yes" xml:space="preserve">
          <source>Run a command which hits the code in the notebook. Restart the notebook
kernel to attach to that process.</source>
          <target state="translated">运行一个打在笔记本中的代码的命令。重启笔记本内核,附在该进程上。</target>
        </trans-unit>
        <trans-unit id="eaed6c50c9770bbeea275d36b7f2468488ea82bf" translate="yes" xml:space="preserve">
          <source>SLIME</source>
          <target state="translated">瘦身</target>
        </trans-unit>
        <trans-unit id="27b40f77b6929833f6770ceec327405b0e15983a" translate="yes" xml:space="preserve">
          <source>Scroll the resulting jupyter notebook with the code buffer</source>
          <target state="translated">用代码缓冲区滚动产生的jupyter笔记本。</target>
        </trans-unit>
        <trans-unit id="229c8f7b4d6233cce224102d3dc0c442aec0bbc1" translate="yes" xml:space="preserve">
          <source>Spacemacs</source>
          <target state="translated">Spacemacs</target>
        </trans-unit>
        <trans-unit id="8b10b92996ebfdac05048c479677e280e038b102" translate="yes" xml:space="preserve">
          <source>Syntax transformations</source>
          <target state="translated">语法转换</target>
        </trans-unit>
        <trans-unit id="6e177f07b90b9f4df5e53f45dcd5cc7daa49f109" translate="yes" xml:space="preserve">
          <source>The next time you visit a python file pynt mode will be active.</source>
          <target state="translated">下次你访问一个python文件时,pynt模式将被激活。</target>
        </trans-unit>
        <trans-unit id="622a058ab48ab79c97d45ea306121b6d063f2610" translate="yes" xml:space="preserve">
          <source>Then install pynt in emacs through &lt;a href=&quot;https://melpa.org/#/pynt&quot;&gt;MELPA&lt;/a&gt;.</source>
          <target state="translated">然后通过&lt;a href=&quot;https://melpa.org/#/pynt&quot;&gt;MELPA&lt;/a&gt;将pynt安装在emacs中。</target>
        </trans-unit>
        <trans-unit id="d868e4d9ec744d2be5ff4740439a566cdb5aeab0" translate="yes" xml:space="preserve">
          <source>Unroll the first pass of loops for increased interactivity.</source>
          <target state="translated">展开第一道循环,增加互动性。</target>
        </trans-unit>
        <trans-unit id="aef82cff63eab527b9610ab4a4bb3e1977f7d3aa" translate="yes" xml:space="preserve">
          <source>Using pynt</source>
          <target state="translated">使用pynt</target>
        </trans-unit>
        <trans-unit id="1c78ab56d9d53c6da49aceeb0a263260a5462a74" translate="yes" xml:space="preserve">
          <source>What is pynt?</source>
          <target state="translated">什么是pynt?</target>
        </trans-unit>
        <trans-unit id="3f521570c59bbdaf252010177be3137bf48462b3" translate="yes" xml:space="preserve">
          <source>`ast</source>
          <target state="translated">`ast</target>
        </trans-unit>
        <trans-unit id="4d656c4409b69224d1337230768cb1d75dc9f67b" translate="yes" xml:space="preserve">
          <source>ein: [info] Starting channels WS: ...</source>
          <target state="translated">ein:[info]开始通道 WS:......。</target>
        </trans-unit>
        <trans-unit id="bc79a0edd9900be9755a7cca1a90fad4715773de" translate="yes" xml:space="preserve">
          <source>ein:notebook-restart-kernel-command</source>
          <target state="translated">ein:笔记本-重启内核-命令。</target>
        </trans-unit>
        <trans-unit id="2a29572456a9330b2bf9677a7115b2b10cfc9eb5" translate="yes" xml:space="preserve">
          <source>pynt also makes heavy use of the</source>
          <target state="translated">pynt还大量使用了</target>
        </trans-unit>
        <trans-unit id="0fd4070f0909f034314671467b1ca7da71e327a5" translate="yes" xml:space="preserve">
          <source>pynt is a tool that truly &lt;a href=&quot;https://en.wikipedia.org/wiki/Standing_on_the_shoulders_of_giants&quot;&gt;stands on the shoulders of
giants&lt;/a&gt;.
Here are some projects where if they had not existed, then pynt would
not have been possible.</source>
          <target state="translated">pynt是真正&lt;a href=&quot;https://en.wikipedia.org/wiki/Standing_on_the_shoulders_of_giants&quot;&gt;站在巨人肩膀上的&lt;/a&gt;工具。这是一些项目，如果它们不存在，那么pynt将是不可能的。</target>
        </trans-unit>
        <trans-unit id="d67559875ed2f51c7d895b385a239b9ce8ba7265" translate="yes" xml:space="preserve">
          <source>pynt is an emacs minor mode for getting source code into jupyter
notebooks so you can hack on it there. If you have access to source code
and a command to call it with then you can get your code into a jupyter
notebook.</source>
          <target state="translated">pynt是emacs的一个小模式,用于将源代码放到jupyter笔记本中,这样你就可以在那里对其进行破解。如果你可以访问源代码,并且有命令可以调用它,那么你就可以把你的代码放到jupyter笔记本中。</target>
        </trans-unit>
        <trans-unit id="9ea2ea1cd644ff513198b3dd1620557804b82b99" translate="yes" xml:space="preserve">
          <source>pynt uses a &lt;a href=&quot;https://github.com/ebanner/extipy&quot;&gt;custom kernel
manager&lt;/a&gt; for attaching to jupyter
notebook kernels started via third-party processes. When pynt generates
a jupyter notebook from a code region that code region is replaced with
a IPython kernel breakpoint so that subsequent commands that hit it will
start a jupyter kernel for the notebook to attach to. See
&lt;a href=&quot;https://github.com/ebanner/pynt/wiki/Using-the-standalone-kernel-manager&quot;&gt;here&lt;/a&gt;
for more information.</source>
          <target state="translated">pynt使用&lt;a href=&quot;https://github.com/ebanner/extipy&quot;&gt;自定义内核管理器&lt;/a&gt;来附加到通过第三方进程启动的jupyter笔记本内核。当pynt从一个代码区域生成一个jupyter笔记本时，该代码区域将被IPython内核断点替换，以便随后命中该命令的命令将启动一个jupyter内核供笔记本连接。有关 更多信息，请参见 &lt;a href=&quot;https://github.com/ebanner/pynt/wiki/Using-the-standalone-kernel-manager&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4174df9055d77262f8ee48aa953b8fb316eeeb0b" translate="yes" xml:space="preserve">
          <source>sets up the state required to run code (by allowing you to attach
notebooks to external processes)</source>
          <target state="translated">设置运行代码所需的状态(允许您将笔记本附加到外部进程上)。</target>
        </trans-unit>
        <trans-unit id="90fe5707657a56a0101c789a17bfb271cbbe4bd7" translate="yes" xml:space="preserve">
          <source>splits up code into cells so it&amp;rsquo;s easy to evaluate small bits</source>
          <target state="translated">将代码拆分为多个单元，以便轻松评估小位</target>
        </trans-unit>
        <trans-unit id="ef36462d783ea87a4710e11d7b1921bc752ee420" translate="yes" xml:space="preserve">
          <source>takes code previously buried in various namespaces (e.g.&amp;nbsp;functions
and loops) and exposes them to the global namespace so you can
interact with them</source>
          <target state="translated">接受以前埋在各种名称空间（例如函数和循环）中的代码，并将它们公开给全局名称空间，以便您可以与它们进行交互</target>
        </trans-unit>
        <trans-unit id="2369771c06d518080f37d13050b381e88fc22ef1" translate="yes" xml:space="preserve">
          <source>vim-slime</source>
          <target state="translated">黏液</target>
        </trans-unit>
        <trans-unit id="5e82fc8cfbd6e853c7ee2ed9bed1a2e0e6f34474" translate="yes" xml:space="preserve">
          <source>your notebook is attached!</source>
          <target state="translated">你的笔记本被附上了!</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
