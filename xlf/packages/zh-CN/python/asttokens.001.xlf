<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/asttokens/">
    <body>
      <group id="asttokens">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">，</target>
        </trans-unit>
        <trans-unit id="9acecfc352c7ede1f195095accd7d44f51d41572" translate="yes" xml:space="preserve">
          <source>. For example run</source>
          <target state="translated">。例如运行</target>
        </trans-unit>
        <trans-unit id="a1b5d658552c5e32a39c7cf5109b90e66cd50fa3" translate="yes" xml:space="preserve">
          <source>.first_token</source>
          <target state="translated">.first_token</target>
        </trans-unit>
        <trans-unit id="b7849e11cc0ed6f42cabced2557c8174fa2356ea" translate="yes" xml:space="preserve">
          <source>.last_token</source>
          <target state="translated">.last_token</target>
        </trans-unit>
        <trans-unit id="5af1fb0efc1547275743340eb94107f659fd3c49" translate="yes" xml:space="preserve">
          <source>ASTTOKENS_SLOW_TESTS</source>
          <target state="translated">ASTTOKENS_SLOW_TESTS(低速测试)</target>
        </trans-unit>
        <trans-unit id="2a2d78f5cc62c5f6ae84cdce9d366360883b9fd0" translate="yes" xml:space="preserve">
          <source>ASTTOKENS_SLOW_TESTS=1 tox</source>
          <target state="translated">ASTTOKENS_SLOW_TESTS=1 毒物。</target>
        </trans-unit>
        <trans-unit id="48e5b2330b018e789882d51cf265755cda19d68c" translate="yes" xml:space="preserve">
          <source>ASTTokens</source>
          <target state="translated">ASTTokens</target>
        </trans-unit>
        <trans-unit id="8f1e185ff2b452d9fca0ed91b335de3886b98a43" translate="yes" xml:space="preserve">
          <source>ASTTokens can annotate both trees built by &lt;a href=&quot;https://docs.python.org/2/library/ast.html&quot;&gt;ast&lt;/a&gt;,
AND those built by &lt;a href=&quot;https://github.com/PyCQA/astroid&quot;&gt;astroid&lt;/a&gt;.</source>
          <target state="translated">ASTTokens既可以注释&lt;a href=&quot;https://docs.python.org/2/library/ast.html&quot;&gt;ast&lt;/a&gt;所构建的树，也可以注释&lt;a href=&quot;https://github.com/PyCQA/astroid&quot;&gt;astroid&lt;/a&gt;所构建的树。</target>
        </trans-unit>
        <trans-unit id="7362d28d532049c15eb6dbbbc78faa15135c18f4" translate="yes" xml:space="preserve">
          <source>ASTTokens works with both Python2 and Python3.</source>
          <target state="translated">ASTTokens同时适用于Python2和Python3。</target>
        </trans-unit>
        <trans-unit id="6021ce84011e5d6638ee9041ce4326e27133153b" translate="yes" xml:space="preserve">
          <source>Annotate AST trees with source code positions</source>
          <target state="translated">用源代码位置注释AST树</target>
        </trans-unit>
        <trans-unit id="20d132e5d4b4d5cd12bc624ec509345f244ee652" translate="yes" xml:space="preserve">
          <source>By default certain tests which take a very long time to run are skipped, but they are run on travis CI. To run them locally, set the environment variable</source>
          <target state="translated">默认情况下,某些需要很长时间才能运行的测试会被跳过,但它们会在travis CI上运行。要在本地运行它们,请将环境变量</target>
        </trans-unit>
        <trans-unit id="18b017e5b4b89d6ff684844a26fb098545f160cf" translate="yes" xml:space="preserve">
          <source>Contribute</source>
          <target state="translated">贡献</target>
        </trans-unit>
        <trans-unit id="0df52f48bb8aa5fcc53a407e21e299090ec9fe29" translate="yes" xml:space="preserve">
          <source>Fork this repository, and clone your fork.</source>
          <target state="translated">将这个版本库分叉,然后克隆你的分叉。</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">这是一个例子：</target>
        </trans-unit>
        <trans-unit id="0c5fcc3c6c69b33314571b9cf8aee454f0606c4f" translate="yes" xml:space="preserve">
          <source>Install the package with test dependencies (ideally in a virtualenv) with:</source>
          <target state="translated">安装带有测试依赖关系的软件包(最好是在virtualenv中安装)。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="aed1c241ed98160844c84b2b631f93cf5688d0e6" translate="yes" xml:space="preserve">
          <source>It makes it possible for tools that work with logical AST nodes to find the particular text that
resulted in those nodes, for example for automated refactoring or highlighting.</source>
          <target state="translated">它使处理AST逻辑节点的工具能够找到产生这些节点的特定文本,例如用于自动重构或突出显示。</target>
        </trans-unit>
        <trans-unit id="ccd63a3c16a38ee19a1df36a270f9bcc943d6159" translate="yes" xml:space="preserve">
          <source>Once the tree has been marked, nodes get</source>
          <target state="translated">一旦树被标记,节点就会得到</target>
        </trans-unit>
        <trans-unit id="5882929cd710e60eb72529019d889e9df4ea399f" translate="yes" xml:space="preserve">
          <source>Run tests across all supported interpreters with the</source>
          <target state="translated">在所有支持的解释器上运行测试,使用</target>
        </trans-unit>
        <trans-unit id="98389b87553dde7f48f5157a1afa60258f5bff11" translate="yes" xml:space="preserve">
          <source>Run tests in your current interpreter with the command</source>
          <target state="translated">在你当前的解释器中用命令运行测试</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="e34fca59daf8b3858fb0d13e5d42d3bef97fa9b7" translate="yes" xml:space="preserve">
          <source>The API Reference is here: &lt;a href=&quot;http://asttokens.readthedocs.io/en/latest/api-index.html&quot;&gt;http://asttokens.readthedocs.io/en/latest/api-index.html&lt;/a&gt;.</source>
          <target state="translated">API参考位于此处：&lt;a href=&quot;http://asttokens.readthedocs.io/en/latest/api-index.html&quot;&gt;http&lt;/a&gt; : //asttokens.readthedocs.io/en/latest/api-index.html。</target>
        </trans-unit>
        <trans-unit id="9bf3627fa29001817801e5dfe7c739c6eb081bb6" translate="yes" xml:space="preserve">
          <source>The code is on GitHub: &lt;a href=&quot;https://github.com/gristlabs/asttokens&quot;&gt;https://github.com/gristlabs/asttokens&lt;/a&gt;.</source>
          <target state="translated">代码在GitHub上：&lt;a href=&quot;https://github.com/gristlabs/asttokens&quot;&gt;https&lt;/a&gt; : //github.com/gristlabs/asttokens。</target>
        </trans-unit>
        <trans-unit id="411470d28cfcb8ede3eb0ec1385a8e4de45dcd26" translate="yes" xml:space="preserve">
          <source>To contribute:</source>
          <target state="translated">贡献:</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="bcd3737fbb7579ecb6af99f00084b4c5fbc5051d" translate="yes" xml:space="preserve">
          <source>Which produces this output:</source>
          <target state="translated">这就产生了这样的输出。</target>
        </trans-unit>
        <trans-unit id="d8c2cb2b1c5735c088fd9f1a6e6163960b06e3b9" translate="yes" xml:space="preserve">
          <source>asttokens</source>
          <target state="translated">虾青素</target>
        </trans-unit>
        <trans-unit id="5b52715873eda93770f93acac555ad4524be7af9" translate="yes" xml:space="preserve">
          <source>asttokens is available on PyPI: &lt;a href=&quot;https://pypi.python.org/pypi/asttokens/&quot;&gt;https://pypi.python.org/pypi/asttokens/&lt;/a&gt;:</source>
          <target state="translated">asttokens在PyPI上可用：&lt;a href=&quot;https://pypi.python.org/pypi/asttokens/&quot;&gt;https&lt;/a&gt; : //pypi.python.org/pypi/asttokens/ ：</target>
        </trans-unit>
        <trans-unit id="9a0defb6035ebcf5d696c9ec787cf893d2d73628" translate="yes" xml:space="preserve">
          <source>attributes, and
the</source>
          <target state="translated">的属性,以及</target>
        </trans-unit>
        <trans-unit id="a37cda69b2b2786f9c801944129c7119836ae328" translate="yes" xml:space="preserve">
          <source>command. You will need to have the interpreters installed separately. We recommend</source>
          <target state="translated">命令,你将需要单独安装解释器。你需要单独安装解释器。我们建议使用</target>
        </trans-unit>
        <trans-unit id="1c15b543a21f0b49aa67b5e2378ea1b52cbb7cf0" translate="yes" xml:space="preserve">
          <source>for that. Use</source>
          <target state="translated">为,。使用</target>
        </trans-unit>
        <trans-unit id="aed876ed712fc63723faf48ff5c2c8f59d283e87" translate="yes" xml:space="preserve">
          <source>module annotates Python abstract syntax trees (ASTs) with the positions of tokens
and text in the source code that generated them.</source>
          <target state="translated">模块对Python抽象语法树(AST)进行注释,并在生成它们的源代码中标注标记和文本的位置。</target>
        </trans-unit>
        <trans-unit id="03876385001ebb84be3619272f9e72a97401dc70" translate="yes" xml:space="preserve">
          <source>object also offers methods to walk and search the list of tokens that make up
the code (or a particular AST node), which is more useful and powerful than dealing with the text
directly.</source>
          <target state="translated">对象还提供了走动和搜索组成代码(或某个AST节点)的标记列表的方法,这比直接处理文本更有用、更强大。</target>
        </trans-unit>
        <trans-unit id="1b94e280a4e2168024dd0844f5f8ed922874046e" translate="yes" xml:space="preserve">
          <source>object offers helpful methods:</source>
          <target state="translated">对象提供了有用的方法。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="77439450e3126eca7553842e877e9be7280fc269" translate="yes" xml:space="preserve">
          <source>pyenv</source>
          <target state="translated">阮夫</target>
        </trans-unit>
        <trans-unit id="0eaa389e1fdb3a1917c0f987514bd561be5718ee" translate="yes" xml:space="preserve">
          <source>pytest</source>
          <target state="translated">pytest</target>
        </trans-unit>
        <trans-unit id="2b47bdea195d92d11c8664e7caa8749b3b724bd5" translate="yes" xml:space="preserve">
          <source>python -m pytest</source>
          <target state="translated">python -m pytest</target>
        </trans-unit>
        <trans-unit id="b157c51dac6cae6b422fe6e585a86b0a05fa17a6" translate="yes" xml:space="preserve">
          <source>to run the full suite of tests.</source>
          <target state="translated">来运行全套的测试。</target>
        </trans-unit>
        <trans-unit id="26ee3f225dcb56e6ab32dc241bfa7e2bbf153a5b" translate="yes" xml:space="preserve">
          <source>to run the tests in parallel.</source>
          <target state="translated">以并行运行测试。</target>
        </trans-unit>
        <trans-unit id="7bdf31978c0210720b3420242d2f1d74927c098c" translate="yes" xml:space="preserve">
          <source>tox</source>
          <target state="translated">毒物</target>
        </trans-unit>
        <trans-unit id="38e35ffc8f73bc30f5cfb3c9011636e6c334a101" translate="yes" xml:space="preserve">
          <source>tox -p auto</source>
          <target state="translated">tox -p auto</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
