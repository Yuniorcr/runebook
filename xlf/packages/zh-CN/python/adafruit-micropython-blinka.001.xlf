<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/adafruit-micropython-blinka/">
    <body>
      <group id="adafruit-micropython-blinka">
        <trans-unit id="7fe096fdbb0c5f131aa2e255f53dc284ae5b4368" translate="yes" xml:space="preserve">
          <source>. Open the index.html in your browser to
view them. It will also (due to -W) error out on any warning like Travis will. This is a good way to
locally verify it will pass.</source>
          <target state="translated">。在浏览器中打开index.html进行查看。它也将（由于-W导致）在出现任何警告（例如Travis will）时出错。这是在本地验证它会通过的好方法。</target>
        </trans-unit>
        <trans-unit id="715e0968514a5ceb268c09813f20aa29520194d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bitbangio&lt;/strong&gt; - software-driven interfaces for I2C, SPI</source>
          <target state="translated">&lt;strong&gt;bitbangio&lt;/strong&gt; -I2C，SPI的软件驱动接口</target>
        </trans-unit>
        <trans-unit id="0372eb4a27ec9f5d176c1b38834c622dc11b5c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;board&lt;/strong&gt; - breakout-specific pin identities</source>
          <target state="translated">&lt;strong&gt;电路板&lt;/strong&gt; -特定于插座的引脚标识</target>
        </trans-unit>
        <trans-unit id="a1ea219213044b92c3451b17e53699d6cf545ae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;busio&lt;/strong&gt; - hardware-driven interfaces for I2C, SPI, UART</source>
          <target state="translated">&lt;strong&gt;busio&lt;/strong&gt; -I2C，SPI，UART的硬件驱动接口</target>
        </trans-unit>
        <trans-unit id="cefdf4d2cbd2c4ac7a0e779108fb38ab9fb70eeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;digitalio&lt;/strong&gt; - digital input/output pins, using pin identities from board+microcontroller packages</source>
          <target state="translated">&lt;strong&gt;digitalio-&lt;/strong&gt;数字输入/输出引脚，使用板+微控制器封装中的引脚标识</target>
        </trans-unit>
        <trans-unit id="6bb0ba190d3b87c796e8108631548ef9cc146f56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;microcontroller&lt;/strong&gt; - chip-specific pin identities</source>
          <target state="translated">&lt;strong&gt;微控制器&lt;/strong&gt; -特定于芯片的引脚标识</target>
        </trans-unit>
        <trans-unit id="7a70bca1d4caef86ae690ca1f7f1bc9052e4b4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;time&lt;/strong&gt; * - substitute functions monkey-patched to time module</source>
          <target state="translated">&lt;strong&gt;时间&lt;/strong&gt; *-猴子修补到时间模块的替代功能</target>
        </trans-unit>
        <trans-unit id="60b914243a6ee2d3720ccde5bafc6e732f784b22" translate="yes" xml:space="preserve">
          <source>A selection of packages for mirroring the CircuitPython API on hosts running micropython.</source>
          <target state="translated">用于在运行micropython的主机上镜像CircuitPython API的精选包。</target>
        </trans-unit>
        <trans-unit id="a3d5329836aaf4177c98af048f53ef8e67274571" translate="yes" xml:space="preserve">
          <source>An example log from running the suites is &lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/issues/2#issuecomment-366713394&quot;&gt;here&lt;/a&gt; .</source>
          <target state="translated">运行套件的日志示例&lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/issues/2#issuecomment-366713394&quot;&gt;在此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e26fea122a58c840dcfae6e063bef9434cf1bac1" translate="yes" xml:space="preserve">
          <source>At the time of writing (&lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/tree/7fc1f8ab477124628a5afebbf6826005955805f9&quot;&gt;git:7fc1f8ab&lt;/a&gt;),
the following sequence runs through some basic testing of the digitalio compatibility layer&amp;hellip;</source>
          <target state="translated">在撰写本文时（&lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/tree/7fc1f8ab477124628a5afebbf6826005955805f9&quot;&gt;git：7fc1f8ab&lt;/a&gt;），下面的序列通过了digitalio兼容性层的一些基本测试&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="99b633b8b55f4a4a0e4b874bf81f4324ac607609" translate="yes" xml:space="preserve">
          <source>Building locally</source>
          <target state="translated">当地建设</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">贡献</target>
        </trans-unit>
        <trans-unit id="68509fb13b347a4eada80d3e76bb51aa2c6320b1" translate="yes" xml:space="preserve">
          <source>Contributions are welcome! Please read our &lt;a href=&quot;https://github.com/adafruit/Adafruit_Micropython_Blinka/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;
before contributing to help this project stay welcoming.</source>
          <target state="translated">欢迎捐款！请先阅读我们的&lt;a href=&quot;https://github.com/adafruit/Adafruit_Micropython_Blinka/blob/master/CODE_OF_CONDUCT.md&quot;&gt;《行为准则》，&lt;/a&gt; 然后再为帮助保持该项目的热情而努力。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">依赖性</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="d86e86d26d7ed5831dd833e50db15beabe3b427a" translate="yes" xml:space="preserve">
          <source>Now, once you have the virtual environment activated:</source>
          <target state="translated">现在,一旦你激活了虚拟环境。</target>
        </trans-unit>
        <trans-unit id="3e5c433f7d8cae971116b806e0ec8bd42c01c056" translate="yes" xml:space="preserve">
          <source>Sphinx documentation</source>
          <target state="translated">斯芬克斯文件</target>
        </trans-unit>
        <trans-unit id="3adf46447ec01b8679115961376c4e99e2c224f1" translate="yes" xml:space="preserve">
          <source>Sphinx is used to build the documentation based on rST files and comments in the code. First,
install dependencies (feel free to reuse the virtual environment from above):</source>
          <target state="translated">Sphinx用于根据rST文件和代码中的注释来构建文档。首先,安装依赖关系(可以自由重用上面的虚拟环境)。</target>
        </trans-unit>
        <trans-unit id="3259a5c3a47dae4f593225fb9473d51f9332c16b" translate="yes" xml:space="preserve">
          <source>The Micropython compatibility layers described above are intended to provide a CircuitPython-like API for devices which
are running Micropython. Since corresponding packages should be built-in to any standard
CircuitPython image, they have no value on a device already running CircuitPython and would likely conflict in unhappy ways.</source>
          <target state="translated">上面描述的Micropython兼容层旨在为运行Micropython的设备提供类似CircuitPython的API。由于相应的包应该内置到任何标准的CircuitPython映像中,所以它们在已经运行CircuitPython的设备上没有价值,而且很可能会发生不愉快的冲突。</target>
        </trans-unit>
        <trans-unit id="6f19ffd32ecda6eff8a86c43a9d74b52ce7b09b7" translate="yes" xml:space="preserve">
          <source>The test suites in the test/src folder under &lt;strong&gt;testing.universal&lt;/strong&gt; are by design
intended to run on &lt;em&gt;either&lt;/em&gt; CircuitPython &lt;em&gt;or&lt;/em&gt; Micropython+compatibility layer to prove conformance.</source>
          <target state="translated">在下的试验/ src文件夹的测试套件&lt;strong&gt;testing.universal&lt;/strong&gt;是通过设计意图上运行&lt;em&gt;或者&lt;/em&gt; CircuitPython &lt;em&gt;或&lt;/em&gt; Micropython +兼容层来证明一致性。</target>
        </trans-unit>
        <trans-unit id="5268ee3ffd38731aedcd480c195ec7624dcb46e8" translate="yes" xml:space="preserve">
          <source>This repository contains a selection of packages mirroring the CircuitPython API
on hosts running micropython. Working code exists to emulate the CircuitPython packages;</source>
          <target state="translated">这个资源库包含了一些在运行micropython的主机上镜像CircuitPython API的包。存在工作代码来模拟CircuitPython包。</target>
        </trans-unit>
        <trans-unit id="53def67f6cbb39bce727a19f3a4558b94445af77" translate="yes" xml:space="preserve">
          <source>This will output the documentation to</source>
          <target state="translated">这将把文件输出到</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="39c20b829084d89585fba49031f96b4b0c49208a" translate="yes" xml:space="preserve">
          <source>docs/_build/html</source>
          <target state="translated">docs/_build/html</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
