<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/frosted/">
    <body>
      <group id="frosted">
        <trans-unit id="4ef6fe32aaec0d511495a02d3af35e782f2e2043" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;which is equivalent to&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;相当于&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdb654ce3ed9d4f1148d7fb3a2c220ae6715fb68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E100 Series&lt;/strong&gt; - &lt;em&gt;Import Errors&lt;/em&gt; - &lt;strong&gt;E101&lt;/strong&gt;: UnusedImport - Note that
it is common practice to import something and not use it for the purpose
of exposing it as an API, or using it in an exec statment below. Frosted
tries to circumvent most of this by ignoring this error by default in
&lt;strong&gt;init&lt;/strong&gt;.py - &lt;strong&gt;E102&lt;/strong&gt;: ImportShadowedByLoopVar - &lt;strong&gt;E103&lt;/strong&gt;:
ImportStarUsed</source>
          <target state="translated">&lt;strong&gt;E100系列&lt;/strong&gt;-&lt;em&gt;导入错误&lt;/em&gt;- &lt;strong&gt;E101&lt;/strong&gt;：UnusedImport -注意，这是常见的做法是进口的东西，而不是用它来揭露它作为一个API，或在下面一个exec statment使用它的目的。磨砂试图规避这个最忽视默认情况下，这个错误 &lt;strong&gt;初始化&lt;/strong&gt;的.py - &lt;strong&gt;E102&lt;/strong&gt;：ImportShadowedByLoopVar - &lt;strong&gt;E103&lt;/strong&gt;：ImportStarUsed</target>
        </trans-unit>
        <trans-unit id="51f136c56cdf0ff5a61f33270d77ab61d8f8393a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E200 Series&lt;/strong&gt; - &lt;em&gt;Function / Method Definition and Calling Errors&lt;/em&gt; -
&lt;strong&gt;E201&lt;/strong&gt;: MultipleValuesForArgument - &lt;strong&gt;E202&lt;/strong&gt;: TooFewArguments -
&lt;strong&gt;E203&lt;/strong&gt;: TooManyArguments - &lt;strong&gt;E204&lt;/strong&gt;: UnexpectedArgument - &lt;strong&gt;E205&lt;/strong&gt;:
NeedKwOnlyArgument - &lt;strong&gt;E206&lt;/strong&gt;: DuplicateArgument - &lt;strong&gt;E207&lt;/strong&gt;:
LateFutureImport - &lt;strong&gt;E208&lt;/strong&gt;: ReturnWithArgsInsideGenerator</source>
          <target state="translated">&lt;strong&gt;E200系列&lt;/strong&gt;-&lt;em&gt;函数/方法定义和调用错误&lt;/em&gt;- &lt;strong&gt;E201&lt;/strong&gt;：MultipleValuesForArgument - &lt;strong&gt;E202&lt;/strong&gt;：TooFewArguments - &lt;strong&gt;E203&lt;/strong&gt;：TooManyArguments - &lt;strong&gt;E204&lt;/strong&gt;：UnexpectedArgument - &lt;strong&gt;E205&lt;/strong&gt;：NeedKwOnlyArgument - &lt;strong&gt;E206&lt;/strong&gt;：DuplicateArgument - &lt;strong&gt;E207&lt;/strong&gt;：LateFutureImport - &lt;strong&gt;E208&lt;/strong&gt;：ReturnWithArgsInsideGenerator</target>
        </trans-unit>
        <trans-unit id="91123619c78fbf803b13437f853785d7cff2e310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E300 Series&lt;/strong&gt; - &lt;em&gt;Variable / Definition Usage Errors&lt;/em&gt; - &lt;strong&gt;E301&lt;/strong&gt;:
RedefinedWhileUnused - &lt;strong&gt;E302&lt;/strong&gt;: RedefinedInListComp - &lt;strong&gt;E303&lt;/strong&gt;:
UndefinedName - &lt;strong&gt;E304&lt;/strong&gt;: UndefinedExport - &lt;strong&gt;E305&lt;/strong&gt;: UndefinedLocal -
&lt;strong&gt;E306&lt;/strong&gt;: Redefined - &lt;strong&gt;E307&lt;/strong&gt;: UnusedVariable</source>
          <target state="translated">&lt;strong&gt;E300系列&lt;/strong&gt;-&lt;em&gt;变量/定义用法错误&lt;/em&gt;- &lt;strong&gt;E301&lt;/strong&gt;：RedefinedWhileUnused - &lt;strong&gt;E302&lt;/strong&gt;：RedefinedInListComp - &lt;strong&gt;E303&lt;/strong&gt;：UndefinedName - &lt;strong&gt;E304&lt;/strong&gt;：UndefinedExport - &lt;strong&gt;E305&lt;/strong&gt;：UndefinedLocal - &lt;strong&gt;E306&lt;/strong&gt;：重新定义- &lt;strong&gt;E307&lt;/strong&gt;：UnusedVariable</target>
        </trans-unit>
        <trans-unit id="c6f4c1846bde7a0430ed90e58a65694c74768f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E400 Series&lt;/strong&gt; - &lt;em&gt;Syntax Errors&lt;/em&gt; - &lt;strong&gt;E401&lt;/strong&gt;: DoctestSyntaxError -
&lt;strong&gt;E402&lt;/strong&gt;: PythonSyntaxError</source>
          <target state="translated">&lt;strong&gt;E400系列&lt;/strong&gt;-&lt;em&gt;语法错误&lt;/em&gt;- &lt;strong&gt;E401&lt;/strong&gt;：DoctestSyntaxError - &lt;strong&gt;E402&lt;/strong&gt;：PythonSyntaxError</target>
        </trans-unit>
        <trans-unit id="db8cd0e349c3f336246fe9337de505b1aaf9117f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I100 Series&lt;/strong&gt; - &lt;em&gt;General Information&lt;/em&gt; - &lt;strong&gt;I101&lt;/strong&gt;: Generic</source>
          <target state="translated">&lt;strong&gt;I100系列&lt;/strong&gt;-&lt;em&gt;一般资料&lt;/em&gt;- &lt;strong&gt;I101&lt;/strong&gt;：通用</target>
        </trans-unit>
        <trans-unit id="eaaaf6b77343fe218c2c41af91c5c04dba8197d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;W100 Series&lt;/strong&gt; - &lt;em&gt;Exception Warning&lt;/em&gt; - &lt;strong&gt;W101&lt;/strong&gt;: BareExcept - Note that
one common case where a bare except is okay, and should be ignored is
when handling the rollback of database transactions. In this or simular
cases the warning can safely be ignored.</source>
          <target state="translated">&lt;strong&gt;W100系列&lt;/strong&gt;-&lt;em&gt;异常警告&lt;/em&gt;- &lt;strong&gt;W101&lt;/strong&gt;：BareExcept -请注意，这里的裸，除了是好的，应该忽略一个常见的情况是处理数据库事务的回滚时。在这种或类似情况下，可以安全地忽略警告。</target>
        </trans-unit>
        <trans-unit id="b1a7339bfb02c5019d4881061f2b14ed9db57ad6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;W200 Series&lt;/strong&gt; - &lt;em&gt;Handling Warning&lt;/em&gt; - &lt;strong&gt;W201&lt;/strong&gt;: FileSkipped</source>
          <target state="translated">&lt;strong&gt;W200系列&lt;/strong&gt;-&lt;em&gt;处理警告&lt;/em&gt;- &lt;strong&gt;W201&lt;/strong&gt;：FileSkipped</target>
        </trans-unit>
        <trans-unit id="0c789b95bd67d4681b6f6fc42d66f9b7eeaaa0ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from the command line:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从命令行：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1e3067383abe8cc23ac42b2ec1f38efc501a388" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from within Python:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从Python内部：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7edb2d56703edb34a11abe229a955dde7b122524" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ignore_frosted_errors&lt;/strong&gt; - A comma delimited list of Frosted error
codes to ignore. You can see a definition of all error codes in the
next section.</source>
          <target state="translated">&lt;strong&gt;ignore_frosted_errors-&lt;/strong&gt;要忽略的Frosted错误代码的逗号分隔列表。您将在下一节中看到所有错误代码的定义。</target>
        </trans-unit>
        <trans-unit id="65edc1f20fbac00d358bb5b9974f09625072bbc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;skip&lt;/strong&gt; - A comma delimited list of file or directory names to skip.
The name must exactly match the entire path, the name of the file, or
one of it&amp;rsquo;s parent directories for it to be skipped.</source>
          <target state="translated">&lt;strong&gt;skip-&lt;/strong&gt;以逗号分隔的要跳过的文件或目录名称的列表。该名称必须与整个路径，文件名或其父目录之一完全匹配才能被跳过。</target>
        </trans-unit>
        <trans-unit id="3dc6e413f248eaefbb85a6c2e579c8fabf8ab258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vim&lt;/strong&gt; - Support has been added via syntastic:
&lt;a href=&quot;https://github.com/scrooloose/syntastic&quot;&gt;https://github.com/scrooloose/syntastic&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;VIM&lt;/strong&gt; -支持已通过syntastic添加： &lt;a href=&quot;https://github.com/scrooloose/syntastic&quot;&gt;https://github.com/scrooloose/syntastic&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dacdfbfa3643508b59baffabbd74fbf1141686eb" translate="yes" xml:space="preserve">
          <source>A passive Python syntax checker</source>
          <target state="translated">一个被动的Python语法检查器</target>
        </trans-unit>
        <trans-unit id="f05ae1deac2b012b134c2438f967166a8b1b1d24" translate="yes" xml:space="preserve">
          <source>Additionally, you can specify project level configuration simply by
placing a .frosted.cfg file at the root of your project. frosted will
look up to 25 directories up, from the one it is ran, to find a project
specific configuration.</source>
          <target state="translated">此外,你可以通过在项目的根目录下放置一个.frosted.cfg文件来指定项目级别的配置,frosted会从运行的目录向上查找25个目录,以找到项目的具体配置。</target>
        </trans-unit>
        <trans-unit id="25fb9a5ee54e078defdfc3d21d2727ebfb399a84" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the command line tool in an API fashion, by
passing &amp;lsquo;-&amp;lsquo; in as the filename and then sending file content to stdin.</source>
          <target state="translated">此外，您可以以API方式使用命令行工具，方法是将&amp;ldquo;-&amp;rdquo;作为文件名传递，然后将文件内容发送到stdin。</target>
        </trans-unit>
        <trans-unit id="0be4d64c6938fbed9c075c62ab23a164eb04a4f5" translate="yes" xml:space="preserve">
          <source>And it will only get better from here on out!</source>
          <target state="translated">而且从现在开始只会越来越好!</target>
        </trans-unit>
        <trans-unit id="42057ef00c7f8e30e615d0c4c23712232dae2e88" translate="yes" xml:space="preserve">
          <source>Beyond that, frosted supports setup.cfg based configuration. All you
need to do is add a [frosted] section to your project&amp;rsquo;s setup.cfg file
with any desired settings.</source>
          <target state="translated">除此之外，磨砂还支持基于setup.cfg的配置。您需要做的就是在项目的setup.cfg文件中添加一个[磨砂]部分，并进行任何所需的设置。</target>
        </trans-unit>
        <trans-unit id="ba257e0b625043dfaf7bb73a01cb3b3c43946471" translate="yes" xml:space="preserve">
          <source>Configuring Frosted</source>
          <target state="translated">配置磨砂</target>
        </trans-unit>
        <trans-unit id="f97271c50277c011620671297853d05ec2b92ba8" translate="yes" xml:space="preserve">
          <source>Contributing to Frosted</source>
          <target state="translated">贡献给磨砂</target>
        </trans-unit>
        <trans-unit id="ccbeec3ffde90804ad8da15fd7c2dccaad076ad5" translate="yes" xml:space="preserve">
          <source>Current list of known supported text-editors:</source>
          <target state="translated">目前已知支持的文本编辑器清单。</target>
        </trans-unit>
        <trans-unit id="b00d695c23ca3cd4ef5491a11b4cbbedfd3c7edc" translate="yes" xml:space="preserve">
          <source>Discussing improvements and getting help</source>
          <target state="translated">讨论改进和获得帮助</target>
        </trans-unit>
        <trans-unit id="b14b9dde9eb1f18474cec6f80fc3521f63dc0986" translate="yes" xml:space="preserve">
          <source>Finally, frosted supports editorconfig files using the standard syntax
defined here: &lt;a href=&quot;http://editorconfig.org/&quot;&gt;http://editorconfig.org/&lt;/a&gt;</source>
          <target state="translated">最后，frosted使用此处定义的标准语法支持editorconfig文件：&lt;a href=&quot;http://editorconfig.org/&quot;&gt;http&lt;/a&gt; ://editorconfig.org/</target>
        </trans-unit>
        <trans-unit id="61db38ce2e7159f09438baf2f2fc621a288c791f" translate="yes" xml:space="preserve">
          <source>Frosted Code API</source>
          <target state="translated">磨砂代码API</target>
        </trans-unit>
        <trans-unit id="4ad78a547c6f9453b8bba535da660af67656d92e" translate="yes" xml:space="preserve">
          <source>Frosted Error Codes</source>
          <target state="translated">磨砂错误代码</target>
        </trans-unit>
        <trans-unit id="56c180a5bfc734d79e4bf6e3c8f16a833730f8ce" translate="yes" xml:space="preserve">
          <source>Frosted adds the ability to configure which files you want to check,
and which errors you don&amp;rsquo;t care about. Which, in my opinion, is a
must have feature.</source>
          <target state="translated">弗罗斯特（Frosted）添加了配置您要检查哪些文件以及不关心哪些错误的功能。我认为这是必须具备的功能。</target>
        </trans-unit>
        <trans-unit id="b9766ba1da2f88e79530d257757c284f9855a063" translate="yes" xml:space="preserve">
          <source>Frosted exposes a simple API for checking Python code from withing other
Python applications or plugins.</source>
          <target state="translated">Frosted提供了一个简单的API,用于检查其他Python应用程序或插件中的Python代码。</target>
        </trans-unit>
        <trans-unit id="95d53df06ba80b80ca37e1fd70694a6271da3261" translate="yes" xml:space="preserve">
          <source>Frosted implements the .editorconfig standard for configuration. This
means you only need one configuration file for isort, frosted, and
all the code editors anybody working with your project may be using.</source>
          <target state="translated">Frosted实现了.editorconfig标准的配置。这意味着你只需要为isort、frosted以及所有在你的项目中工作的人可能使用的代码编辑器准备一个配置文件。</target>
        </trans-unit>
        <trans-unit id="a960390525e2dd7954f62abff39832964a25705a" translate="yes" xml:space="preserve">
          <source>Frosted is a fork of pyflakes (originally created by Phil Frost) that
aims at more open contribution from the outside public, a smaller more
maintainable code base, and a better Python checker for all. It
currently cleanly supports Python 2.6 - 3.4 using pies
(&lt;a href=&quot;https://github.com/timothycrosley/pies&quot;&gt;https://github.com/timothycrosley/pies&lt;/a&gt;) to achieve this without ugly
hacks and/or py2to3.</source>
          <target state="translated">Frosted是pyflakes的一个分支（最初是由Phil Frost创建的），目的是让外部公众更加公开地做出贡献，建立一个更小巧，更易于维护的代码库，并为所有人提供更好的Python检查器。目前，它使用pys（&lt;a href=&quot;https://github.com/timothycrosley/pies&quot;&gt;https://github.com/timothycrosley/pies&lt;/a&gt;）完全支持Python 2.6-3.4，而没有难看的hack和/或py2to3。</target>
        </trans-unit>
        <trans-unit id="df792e13e3ff18557c8717c83b64eb5fda85e2f6" translate="yes" xml:space="preserve">
          <source>Frosted is a homage to the original pyflakes creator Phil Frost.</source>
          <target state="translated">Frosted是向原pyflakes创作者Phil Frost致敬。</target>
        </trans-unit>
        <trans-unit id="c04aaf6c7a69fabff26c9a7425b4b8dcc508c0ce" translate="yes" xml:space="preserve">
          <source>Frosted recognizes the following errors when present within your code.
You can use the &amp;lsquo;ignore_frosted_errors&amp;rsquo; setting to specify any errors
you want Frosted to ignore. If you specify the series error code (ex:
E100) all errors in that series will be ignored.</source>
          <target state="translated">当您的代码中出现Frosted识别以下错误。您可以使用'ignore_frosted_errors'设置来指定您希望Frosted忽略的任何错误。如果指定系列错误代码（例如：E100），则该系列中的所有错误将被忽略。</target>
        </trans-unit>
        <trans-unit id="58297a26dee9e4f8f6bfe4da51f4bd7647fb1958" translate="yes" xml:space="preserve">
          <source>Frosted switched from Java style unittests to the more Pythonic
py.test (I admit this is highly subjective).</source>
          <target state="translated">Frosted从Java风格的unittests换成了更加Pythonic的py.test(我承认这是非常主观的)。</target>
        </trans-unit>
        <trans-unit id="44d4e83b4f62fe96cc99a893a1dbbe7b8932716a" translate="yes" xml:space="preserve">
          <source>Frosted uses a more logical, self-documenting, and standard terminal
interface. With pyflakes the default action without any arguments is
to do nothing (waiting for stdin) with Frosted you get an error and
help.</source>
          <target state="translated">Frosted使用了一个更有逻辑性、更有自我文档化、更标准的终端界面。在pyflakes中,没有任何参数的默认操作是什么都不做(等待stdin),而在Frosted中,你会得到一个错误和帮助。</target>
        </trans-unit>
        <trans-unit id="8e0f66da9f99f9219ba7e467869e4d2e1e146b96" translate="yes" xml:space="preserve">
          <source>Frosting. Duh.</source>
          <target state="translated">糖霜。咄。</target>
        </trans-unit>
        <trans-unit id="442be9cc1d61d9626c696712b7cc41f75da56b09" translate="yes" xml:space="preserve">
          <source>If you find the default frosted settings do not work well for your
project, frosted provides several ways to adjust the behavior.</source>
          <target state="translated">如果你发现默认的磨砂设置不适合你的项目,frosted提供了几种方法来调整行为。</target>
        </trans-unit>
        <trans-unit id="a62a2ef0c1df7e9819efd1195443f6d7a429318c" translate="yes" xml:space="preserve">
          <source>Installing Frosted</source>
          <target state="translated">安装磨砂</target>
        </trans-unit>
        <trans-unit id="7735fad0dea1d9c448fc4c2dacc2ec5c7405b926" translate="yes" xml:space="preserve">
          <source>Installing Frosted is as simple as:</source>
          <target state="translated">安装Frosted就这么简单。</target>
        </trans-unit>
        <trans-unit id="52aada0da1b8f599889022da9afcd8a15ec38dbb" translate="yes" xml:space="preserve">
          <source>Integration with text editors and tools is a priority for the project.
As such, any pull request that adds integration support or links to a
third-party project that does will be enthusiastically accepted.</source>
          <target state="translated">与文本编辑器和工具的集成是这个项目的一个优先事项。因此,任何增加集成支持或链接到第三方项目的拉取请求都会被热情接受。</target>
        </trans-unit>
        <trans-unit id="7aef83f9ffbe19fb0df18d22856cfeffa700c459" translate="yes" xml:space="preserve">
          <source>Lots of code has been re-factored and simplified, Frosted aims to be
faster and leaner then pyflakes ever was.</source>
          <target state="translated">大量的代码已经被重构和简化,Frosted的目标是比pyflakes更快更精简。</target>
        </trans-unit>
        <trans-unit id="dd6b01a0755a85a531161cb098cb3fcef3c48366" translate="yes" xml:space="preserve">
          <source>Meaning You can place any standard frosted configuration parameters
within a .editorconfig file under the *.py section and they will be
honored.</source>
          <target state="translated">意味着你可以在*.py部分下的.editorconfig文件中放置任何标准的磨砂配置参数,它们将被尊重。</target>
        </trans-unit>
        <trans-unit id="f7c0f45570df07053b118b0a8641e63ccdcc2948" translate="yes" xml:space="preserve">
          <source>Note: the maintainer of pyflakes has been added as a contributer to
frosted.</source>
          <target state="translated">注:pyflakes的维护者已被添加为frosted的贡献者。</target>
        </trans-unit>
        <trans-unit id="71b3e24ee36bda7f224f6899b05934f03f66f002" translate="yes" xml:space="preserve">
          <source>Our preferred contributions come in the form of pull requests and issue
reports. That said, we will not deny monetary contributions. If you
desire to do this using flattr etc, please make sure you flattr @bitglue
as he is the original creator of pyflakes and without his contribution
Frosted would not be possible.</source>
          <target state="translated">我们更倾向于以拉动请求和问题报告的形式进行捐助。也就是说,我们不会拒绝金钱上的贡献。如果你想使用flattr等方式,请确保你flattr @bitglue,因为他是pyflakes的原始创造者,没有他的贡献,Frosted就不可能实现。</target>
        </trans-unit>
        <trans-unit id="f99a61e8fa41c9ee09ff2481203c0b4281e8b68d" translate="yes" xml:space="preserve">
          <source>Pyflakes was a great project, and introduced a great approach for
quickly checking for Python coding errors. I am very grateful to the
original creators. However, I feel over the last year it has become
stagnant, without a clear vision and someone willing to take true
ownership of the project. While I know it is in no way intentional,
critical failures have stayed open, despite perfectly complete and valid
pull-requests open, without so much as an acknowledgement from the
maintainer. As I genuinely believe open source projects need constant
improvement (releasing early and often), I decided to start this project
and look for as much input as possible from the Python community. I&amp;rsquo;m
hoping together we can build an even more awesome code checker!</source>
          <target state="translated">Pyflakes是一个了不起的项目，并且引入了一种很棒的方法来快速检查Python编码错误。我非常感谢原始创作者。但是，在过去的一年中，我感到它变得停滞不前，没有清晰的愿景，也没有人愿意真正承担该项目的所有权。尽管我知道这绝不是故意的，但即使完全完成了有效的拉取请求，严重的故障仍然没有解决，维护人员也没有给予任何肯定。由于我真正相信开源项目需要不断的改进（尽早且经常发布），因此我决定启动此项目，并从Python社区中寻求尽可能多的投入。我希望我们可以建立一个更加出色的代码检查器！</target>
        </trans-unit>
        <trans-unit id="7871de9760f9cc256bf52c8dd2e5247928cd5b2f" translate="yes" xml:space="preserve">
          <source>Several improvements and fixes that have stayed open (and ignored) on
mainline pyflakes have been integrated.</source>
          <target state="translated">在主线pyflakes上,整合了一些一直开放(被忽略)的改进和修复。</target>
        </trans-unit>
        <trans-unit id="6cd8a7665afbfd4a51ee84a543b36235cb98b330" translate="yes" xml:space="preserve">
          <source>Text Editor Integration</source>
          <target state="translated">文本编辑器集成</target>
        </trans-unit>
        <trans-unit id="1c2cc8019942f0a801a3aecd17dbec36a9692828" translate="yes" xml:space="preserve">
          <source>Thanks and I hope you enjoy the new Frosted pyflakes!</source>
          <target state="translated">谢谢,我希望你喜欢新的磨砂pyflakes!</target>
        </trans-unit>
        <trans-unit id="69ce9a8ded42bb83e37788c82c62c192ad8dd573" translate="yes" xml:space="preserve">
          <source>The following improvements have already been implemented into Frosted</source>
          <target state="translated">Frosted已经实现了以下改进</target>
        </trans-unit>
        <trans-unit id="1dd2abb00d02271a9efed958ff2abf70147010c4" translate="yes" xml:space="preserve">
          <source>The number one reason frosted is better is because of you! Or rather,
the Python community at large. I will quickly respond to any pull
requests, recommendations, or bug reports that come my way.</source>
          <target state="translated">frosted更好的首要原因就是因为你! 或者说,整个Python社区。我会快速响应任何拉取请求、建议或错误报告。</target>
        </trans-unit>
        <trans-unit id="03ad734259090ea075f97a150fd191d04cd88c7c" translate="yes" xml:space="preserve">
          <source>To configure frosted for a single user create a ~/.frosted.cfg file:</source>
          <target state="translated">要为单个用户配置frosted,请创建一个~/.frosted.cfg文件。</target>
        </trans-unit>
        <trans-unit id="35faccbdee310d487bbb92db1e21b210ef40a12e" translate="yes" xml:space="preserve">
          <source>Using Frosted</source>
          <target state="translated">使用磨砂</target>
        </trans-unit>
        <trans-unit id="8ab460afa876c7800484ae1f7a2f035342dcfab8" translate="yes" xml:space="preserve">
          <source>Using any of the following methods will result in a quick resolution to
any issue you may have with Frosted or a quick response to any
implementation detail you wish to discuss. - &lt;a href=&quot;https://mail.python.org/mailman/listinfo/code-quality&quot;&gt;Mailing
List&lt;/a&gt; - best
place to discuss large architectural changes or changes that effect that
may effect Python code-quality projects beyond Frosted. - &lt;a href=&quot;https://github.com/timothycrosley/frosted/issues&quot;&gt;Github
issues&lt;/a&gt; - best
place to report bugs, ask for concretely defined features, and even ask
for general help. - &lt;a href=&quot;mailto:timothy.crosley%40gmail.com&quot;&gt;timothy.crosley@gmail.com&lt;/a&gt; - feel free to email me
any questions or concerns you have that you don&amp;rsquo;t think would benefit
from community wide involvement.</source>
          <target state="translated">使用以下任何一种方法都可以快速解决您对Frosted可能遇到的任何问题，或者快速响应您要讨论的任何实现细节。-&lt;a href=&quot;https://mail.python.org/mailman/listinfo/code-quality&quot;&gt;邮件列表&lt;/a&gt;-讨论大型体系结构更改或可能影响除Frosted之外的Python代码质量项目的更改的最佳位置。- &lt;a href=&quot;https://github.com/timothycrosley/frosted/issues&quot;&gt;Github上的问题&lt;/a&gt;-报告错误最好的地方，索要具体定义功能，甚至要求一般帮助。- &lt;a href=&quot;mailto:timothy.crosley%40gmail.com&quot;&gt;timothy.crosley@gmail.com&lt;/a&gt; -随时给我发电子邮件您有没有想到会从社会的广泛参与中获益的任何问题或疑虑。</target>
        </trans-unit>
        <trans-unit id="93b5f1a1069707c0cfcee851709848835f3dd9d6" translate="yes" xml:space="preserve">
          <source>What makes Frosted better then pyflakes?</source>
          <target state="translated">是什么让Frosted比pyflakes更好?</target>
        </trans-unit>
        <trans-unit id="9959ec834a06f58f7bda85c4e9fa2eb8cef94237" translate="yes" xml:space="preserve">
          <source>When deciding whether or not to include an error for reporting, Frosted
uses the 99% approach as a yard stick. If it is agreed that 99% of the
time (or more) that a pattern occurs it&amp;rsquo;s an error, Frosted will report
on it, if not it will not be added to the Frosted project.</source>
          <target state="translated">在决定是否包括报告错误时，弗罗斯特（Frosted）使用99％的方法作为标尺。如果同意在某个模式中有99％的时间（或更长时间）出现错误，则Frosted将对其进行报告，否则将不被添加到Frosted项目中。</target>
        </trans-unit>
        <trans-unit id="d163ecc86cfb758cd918d7e03b63e837ea246dc2" translate="yes" xml:space="preserve">
          <source>Why Frosted?</source>
          <target state="translated">为什么是磨砂?</target>
        </trans-unit>
        <trans-unit id="57f9cd1ec02701e6c717ae710d5420274b9246fa" translate="yes" xml:space="preserve">
          <source>Why did you fork pyflakes?</source>
          <target state="translated">你为什么要叉开pyflakes?</target>
        </trans-unit>
        <trans-unit id="1e5777c1f772ca4a9395adb82783d45b66c0d347" translate="yes" xml:space="preserve">
          <source>You can then override any of these settings by using command line
arguments, or by passing in kwargs into any of the exposed api checking
methods.</source>
          <target state="translated">然后,你可以通过使用命令行参数或通过向任何暴露的 api 检查方法传递 kwargs 来覆盖这些设置。</target>
        </trans-unit>
        <trans-unit id="8ad1deba2a1dc4a411f0947b0e5bd8e53294903f" translate="yes" xml:space="preserve">
          <source>frosted.api.check (codeString, filename,
reporter=modReporter.Default, **setting_overrides) Check the
Python source given by codeString for unfrosted flakes.</source>
          <target state="translated">frosted.api.check (codeString,filename,reporter=modReporter.Default,**setting_overrides)检查codeString给出的Python源码是否有未冻结的片子。</target>
        </trans-unit>
        <trans-unit id="79e26c76b28774ceb8cc812b39122a3498a71cb8" translate="yes" xml:space="preserve">
          <source>frosted.api.check_path (filename, reporter=modReporter.Default,
**setting_overrides) Check the given path, printing out any
warnings detected.</source>
          <target state="translated">frosted.api.check_path (filename,reporter=modReporter.Default,**setting_overrides)检查给定的路径,打印出任何检测到的警告。</target>
        </trans-unit>
        <trans-unit id="7452c3c63a0c2ac81d303847cd98a5047814f7b3" translate="yes" xml:space="preserve">
          <source>frosted.check_recursive (paths, reporter=modReporter.Default,
**setting_overrides) Recursively check all source files defined in
paths.</source>
          <target state="translated">frosted.check_recursive (paths,reporter=modReporter.Default,**setting_overrides)循环检查paths中定义的所有源文件。</target>
        </trans-unit>
        <trans-unit id="a9434633783ba16c64795b23695088c204f843c3" translate="yes" xml:space="preserve">
          <source>or if you prefer</source>
          <target state="translated">或者如果你喜欢</target>
        </trans-unit>
        <trans-unit id="9d2a7ad1f99954b15879f901181030bb7bf56f67" translate="yes" xml:space="preserve">
          <source>or recursively:</source>
          <target state="translated">或递归。</target>
        </trans-unit>
        <trans-unit id="53716df0bbab970da7618ef94f33c3dab3b9a3c9" translate="yes" xml:space="preserve">
          <source>or to read from stdin:</source>
          <target state="translated">或从stdin读取。</target>
        </trans-unit>
        <trans-unit id="6415c2d844d4e6ce1c534ee71f1d8a7e411903ea" translate="yes" xml:space="preserve">
          <source>~Timothy Crosley</source>
          <target state="translated">〜蒂莫西&amp;middot;克罗斯利</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
