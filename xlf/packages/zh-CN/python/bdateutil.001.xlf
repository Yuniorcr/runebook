<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/bdateutil/">
    <body>
      <group id="bdateutil">
        <trans-unit id="c6a2db76feb84be87491cc2c9962f2264c4ded96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;Pull Requests&lt;/a&gt; are always welcome.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;&lt;/a&gt;始终欢迎发布问题和&lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;请求请求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1be273a0f8002b29bf6f4f31ce1e1cfd2612e163" translate="yes" xml:space="preserve">
          <source>A new function &lt;code&gt;isbday&lt;/code&gt; which returns &lt;code&gt;True&lt;/code&gt; if the argument
passed to it falls on a business day and &lt;code&gt;False&lt;/code&gt; if it is a weekend or
holiday. Option keyword argument &lt;code&gt;holidays&lt;/code&gt; adds the ability to take
into account a specific set of holidays.</source>
          <target state="translated">一个新的函数 &lt;code&gt;isbday&lt;/code&gt; ，如果传递给它的参数是工作日，则返回 &lt;code&gt;True&lt;/code&gt; ;如果是周末或假日，则返回 &lt;code&gt;False&lt;/code&gt; 。 Option关键字参数 &lt;code&gt;holidays&lt;/code&gt; 可以考虑一组特定的假日。</target>
        </trans-unit>
        <trans-unit id="3aecf00c9ac3214c61cb9cf72de8cb19f502b130" translate="yes" xml:space="preserve">
          <source>A new, optional, keyword argument &lt;code&gt;bdays&lt;/code&gt; is available when using
relativedelta to add or remove time to a datetime object.</source>
          <target state="translated">当使用relativedelta向datetime对象添加或删除时间时，可以使用新的可选关键字参数 &lt;code&gt;bdays&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d52f769f98c104490db3f5b36e626ac9b452174" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.</source>
          <target state="translated">为python-dateutil添加了业务日逻辑和改进的数据类型灵活性。</target>
        </trans-unit>
        <trans-unit id="c952082357224df8dfe4780645521bf97219589b" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.
100% backwards compatible with python-dateutil, simply replace &lt;code&gt;dateutil&lt;/code&gt;
imports with &lt;code&gt;bdateutil&lt;/code&gt;.</source>
          <target state="translated">向python-dateutil添加工作日逻辑和改进的数据类型灵活性。100％向后兼容python-dateutil，只需将 &lt;code&gt;dateutil&lt;/code&gt; 导入替换为bdateutil &lt;code&gt;bdateutil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4eda2fbedb81256ca8293a03548ea21f9fcbf05" translate="yes" xml:space="preserve">
          <source>Another new, optional, keyword argument &lt;code&gt;holidays&lt;/code&gt; is available when
using relativedelta to support the &lt;code&gt;bdays&lt;/code&gt; feature. Without holidays
business days are only calculated using weekdays. By passing a list of
holidays a more accurate and useful business day calculation can be
performed. The Python package &lt;code&gt;holidays.py&lt;/code&gt; is installed as a
requirement with bdateutil and that is the prefered way to generate
holidays.</source>
          <target state="translated">当使用relativedelta支持 &lt;code&gt;bdays&lt;/code&gt; 功能时，可以使用另一个新的，可选的关键字参数 &lt;code&gt;holidays&lt;/code&gt; 。没有假期，工作​​日仅使用工作日计算。通过传递假期列表，可以执行更准确和有用的工作日计算。Python包 &lt;code&gt;holidays.py&lt;/code&gt; 安装与bdateutil一个要求，那就是产生度假的首选方式。</target>
        </trans-unit>
        <trans-unit id="e276e3de7d758cf4c9cba9cadf6c02d820098425" translate="yes" xml:space="preserve">
          <source>Code and documentation are available according to the MIT License
(see &lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt;).</source>
          <target state="translated">可以根据MIT许可证获得代码和文档（请参阅&lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">缴款</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">覆盖范围</target>
        </trans-unit>
        <trans-unit id="3b2fd4ec2592a60a39c5a925470fa44f8d46d6aa" translate="yes" xml:space="preserve">
          <source>Development Version</source>
          <target state="translated">开发版本</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="7efdb52575026e30170fcb12e99298e7a5bb425e" translate="yes" xml:space="preserve">
          <source>If the above fails, please use easy_install instead:</source>
          <target state="translated">如果以上失败,请使用easy_install代替。</target>
        </trans-unit>
        <trans-unit id="ff653d773e8dd454b8236149f3ea5869cd555830" translate="yes" xml:space="preserve">
          <source>Import shortcuts are available that make importing the bdateutil features a
little easier than python-dateutil. However, importing from bdateutil using
the longer method used by python-dateutil still works to remain 100%
backwards compatibility.</source>
          <target state="translated">导入快捷方式是可用的,它使导入bdateutil的功能比python-dateutil更容易。然而,使用python-dateutil使用的较长的方法从bdateutil导入仍然可以保持100%的向后兼容性。</target>
        </trans-unit>
        <trans-unit id="973142621f185d8147d34352e131c396b6dc2ac3" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt; types, relativedelta works
with all strings/bytes regardless of encoding and integer/float timestamps.
It does this by running all date/datetime parameters through the
&lt;code&gt;parse&lt;/code&gt; function which has been modified to accept many different
types than strings, including date/datetime which will return without
modifications. This allows you to call &lt;code&gt;parse(dt)&lt;/code&gt; on an object
regardless of type and ensure a datetime object is returned.</source>
          <target state="translated">除了 &lt;code&gt;datetime&lt;/code&gt; 和 &lt;code&gt;date&lt;/code&gt; 类型外，relativedelta 还可用于所有字符串/字节，而与编码和整数/浮点时间戳无关。它通过 &lt;code&gt;parse&lt;/code&gt; 函数运行所有日期/日期时间参数来实现此目的，该参数 已被修改为接受许多不同于字符串的类型，包括日期/日期时间，将不做任何修改就返回。这使您可以在不考虑类型的情况下对对象调用 &lt;code&gt;parse(dt)&lt;/code&gt; 并确保返回日期时间对象。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">运行测试</target>
        </trans-unit>
        <trans-unit id="0643938b9ff7bc45b4a1e703bd0e242ce253edfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rrule&lt;/code&gt; feature has a new &lt;code&gt;BDAILY&lt;/code&gt; option for use as the &lt;code&gt;freq&lt;/code&gt; argument.
This will create a generator which yields business days. Rrule also will now
accept an optional &lt;code&gt;holidays&lt;/code&gt; keyword argument which affects the
&lt;code&gt;BDAILY&lt;/code&gt; freq only. The existing &lt;code&gt;dtstart&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt;
arugments can now be passed as any type resembling a date/datetime.</source>
          <target state="translated">该 &lt;code&gt;rrule&lt;/code&gt; 功能有一个新的 &lt;code&gt;BDAILY&lt;/code&gt; 用作选择 &lt;code&gt;freq&lt;/code&gt; 参数。这将创建一个生成器，生成工作日。RRULE现在也将接受一个可选的 &lt;code&gt;holidays&lt;/code&gt; 关键字参数从而影响 &lt;code&gt;BDAILY&lt;/code&gt; 唯一频率。 现在可以将现有的 &lt;code&gt;dtstart&lt;/code&gt; 和 &lt;code&gt;until&lt;/code&gt; rugt传递为任何类似于日期/日期时间的类型。</target>
        </trans-unit>
        <trans-unit id="334597efb34b5ccf530650c298d5ee47398a89df" translate="yes" xml:space="preserve">
          <source>The latest development version can be installed directly from GitHub:</source>
          <target state="translated">最新的开发版本可以直接从GitHub上安装。</target>
        </trans-unit>
        <trans-unit id="93de043e205c48ecd0e520c7ca8c2bcb0c95c963" translate="yes" xml:space="preserve">
          <source>The latest stable version can always be installed or updated via pip:</source>
          <target state="translated">最新的稳定版可以随时通过pip安装或更新。</target>
        </trans-unit>
        <trans-unit id="3b9616eaeaa514ec9e018618e5cbed82c61fe0e4" translate="yes" xml:space="preserve">
          <source>This section will outline the additional functionality of bdateutil only. For
full documentation on the features provided by python-dateutil please see its
documentation at &lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil&lt;/a&gt;.</source>
          <target state="translated">本节将仅概述bdateutil的其他功能。有关python-dateutil提供的功能的完整文档，请参阅&lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil上的&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="92c23e1bbcaa6fa57e61d36eb923d91999e1419a" translate="yes" xml:space="preserve">
          <source>When passing two datetime arguments to relativedelta, the resulting
relativedelta object will contain a &lt;code&gt;bdays&lt;/code&gt; attribute with the number
of business days between the datetime arguments.</source>
          <target state="translated">当将两个datetime参数传递给relativedelta时，所得的relativedelta对象将包含 &lt;code&gt;bdays&lt;/code&gt; 属性，其中datetime参数之间的工作日数。</target>
        </trans-unit>
        <trans-unit id="789efc0771c509982e172ccecac3212fac56a420" translate="yes" xml:space="preserve">
          <source>bdateutil is 100% backwards compatible with python-dateutil. You can replace
&lt;code&gt;dateutil&lt;/code&gt; with &lt;code&gt;bdateutil&lt;/code&gt; across your entire project and
everything will continue to work the same but you will have access to the
following additional features:</source>
          <target state="translated">bdateutil与python-dateutil 100％向后兼容。您可以在整个项目中使用 &lt;code&gt;bdateutil&lt;/code&gt; 替换 &lt;code&gt;dateutil&lt;/code&gt; ，并且所有操作将继续进行，但是您可以使用以下附加功能：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
