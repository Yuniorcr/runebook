<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/django-multidb-router/">
    <body>
      <group id="django-multidb-router">
        <trans-unit id="9dcdd24b31476f0a844639629757f28ae5f34fdb" translate="yes" xml:space="preserve">
          <source>&quot;&quot;&quot;Touches the primary database.&quot;&quot;&quot;</source>
          <target state="translated">&amp;ldquo;&amp;rdquo;&amp;ldquo;接触主数据库。&amp;rdquo;&amp;ldquo;&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="baf45f3dbe58f2defd0f76b77898b57b129ba810" translate="yes" xml:space="preserve">
          <source>$ pip install tox</source>
          <target state="translated">$ pip安装tox</target>
        </trans-unit>
        <trans-unit id="d7bd0cf74310706d1ae284f1225d56119bc53cd6" translate="yes" xml:space="preserve">
          <source>$ tox</source>
          <target state="translated">$毒</target>
        </trans-unit>
        <trans-unit id="ed1b42465548f4a3b7ae23096197e883780cd72d" translate="yes" xml:space="preserve">
          <source>'default': {...},</source>
          <target state="translated">'默认'：{...}，</target>
        </trans-unit>
        <trans-unit id="dde903c4db3f3b57c5d400b2dfccf76ac9d2a6cd" translate="yes" xml:space="preserve">
          <source>'multidb.middleware.PinningRouterMiddleware',</source>
          <target state="translated">'multidb.middleware.PinningRouterMiddleware'，</target>
        </trans-unit>
        <trans-unit id="9aab143e13ff794819f783eb28526983b22892c6" translate="yes" xml:space="preserve">
          <source>'shadow-1': {...},</source>
          <target state="translated">'shadow-1'：{...}，</target>
        </trans-unit>
        <trans-unit id="6dae45e071b2d28d1d479df6d2f5fa75df7c3545" translate="yes" xml:space="preserve">
          <source>'shadow-2': {...},</source>
          <target state="translated">'shadow-2'：{...}，</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">）</target>
        </trans-unit>
        <trans-unit id="51dfb58519a88d57764a0c5a507c1c46502e5233" translate="yes" xml:space="preserve">
          <source>...more middleware here...</source>
          <target state="translated">...更多中间件在这里...</target>
        </trans-unit>
        <trans-unit id="0839fc95001b799f9b943a88fd539979d99f6e5f" translate="yes" xml:space="preserve">
          <source>./run.sh test</source>
          <target state="translated">./run.sh测试</target>
        </trans-unit>
        <trans-unit id="1fecc2587cc768fa9b029f30aa532689317e7143" translate="yes" xml:space="preserve">
          <source>@use_primary_db</source>
          <target state="translated">@use_primary_db</target>
        </trans-unit>
        <trans-unit id="d121aee97947e74868567c8e1d38bc03ff72d6a8" translate="yes" xml:space="preserve">
          <source>Alternatively, you can run the tests with several versions of Django</source>
          <target state="translated">另外,你也可以用多个版本的Django来运行测试。</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">注意事项</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">配置</target>
        </trans-unit>
        <trans-unit id="d0738894cfb791e73136844f75ecf8d370e4c606" translate="yes" xml:space="preserve">
          <source>DATABASES = {</source>
          <target state="translated">DATABASES={</target>
        </trans-unit>
        <trans-unit id="7e0cf44561e7fe6fb8e8e8d19c20edd9592ec27f" translate="yes" xml:space="preserve">
          <source>DATABASE_ROUTERS = ('multidb.PinningReplicaRouter',)</source>
          <target state="translated">DATABASE_ROUTERS=('multidb.PinningReplicaRouter',)</target>
        </trans-unit>
        <trans-unit id="f4467a1c8deef3e67e38b7759b723893cb10dc60" translate="yes" xml:space="preserve">
          <source>DATABASE_ROUTERS = ('multidb.ReplicaRouter',)</source>
          <target state="translated">DATABASE_ROUTERS=('multidb.ReplicaRouter',)</target>
        </trans-unit>
        <trans-unit id="adc42cb76a82eafccfc29b20abdd5d9201830fff" translate="yes" xml:space="preserve">
          <source>First, define ``REPLICA_DATABASES`` in your settings.  It should be a list of</source>
          <target state="translated">首先,在你的设置中定义``REPLICA_DATABASES``。它应该是一个包含以下内容的列表</target>
        </trans-unit>
        <trans-unit id="c8e604a9ec975d7b490c57841821457bc54a7046" translate="yes" xml:space="preserve">
          <source>For example, imagine a scenario with 1 second of replication lag. If a user</source>
          <target state="translated">例如,想象一个复制滞后1秒的场景。如果一个用户</target>
        </trans-unit>
        <trans-unit id="c90ad8d42c6b8bcc85af994f34405df822289478" translate="yes" xml:space="preserve">
          <source>If you need to change the name of the cookie, use the ``MULTIDB_PINNING_COOKIE``</source>
          <target state="translated">如果您需要更改cookie的名称,请使用``MULTIDB_PINNING_COOKIE``。</target>
        </trans-unit>
        <trans-unit id="6bf945f95494654761337fc15bc5310312f774e3" translate="yes" xml:space="preserve">
          <source>If you want to get a connection to a replica in your app, use</source>
          <target state="translated">如果你想在你的应用程序中获得与副本的连接,使用</target>
        </trans-unit>
        <trans-unit id="3aebd06ea5e615a2d5f7b450585c72905cfe2371" translate="yes" xml:space="preserve">
          <source>In some applications, the lag between the primary database receiving a write and its</source>
          <target state="translated">在某些应用中,主数据库接收到写的信息与它的数据之间存在滞后。</target>
        </trans-unit>
        <trans-unit id="55644c506b3ab7db3185c588b313eff6447f6cab" translate="yes" xml:space="preserve">
          <source>MIDDLEWARE_CLASSES = (</source>
          <target state="translated">MIDDLEWARE_CLASSES=(</target>
        </trans-unit>
        <trans-unit id="3f0c55f2e47d815f448d60e32f48208d7f2dbc66" translate="yes" xml:space="preserve">
          <source>MULTIDB_PINNING_COOKIE = 'multidb_pin_writes'</source>
          <target state="translated">MULTIDB_PINNING_COOKIE='Multidb_PIN_Write'。</target>
        </trans-unit>
        <trans-unit id="addee062d807761271fcb8d98b49c3a0d3c20316" translate="yes" xml:space="preserve">
          <source>MULTIDB_PINNING_SECONDS = 5</source>
          <target state="translated">MULTIDB_PINNING_SECONDS=5。</target>
        </trans-unit>
        <trans-unit id="fe2ac4309766de2f097757a960b1e0f3535cca03" translate="yes" xml:space="preserve">
          <source>PinningReplicaRouter</source>
          <target state="translated">引脚复制路由器</target>
        </trans-unit>
        <trans-unit id="27e13644f9adc83fb236c8adbc04f3929b3fb9ed" translate="yes" xml:space="preserve">
          <source>REPLICA_DATABASES = ['shadow-1', 'shadow-2']</source>
          <target state="translated">REPLICA_DATABASES=['shadow-1','shadow-2']。</target>
        </trans-unit>
        <trans-unit id="a4d8a8e1310b84a188779cf687b4606f0f879f0a" translate="yes" xml:space="preserve">
          <source>ReplicaRouter</source>
          <target state="translated">ReplicaRouter</target>
        </trans-unit>
        <trans-unit id="bd8a23672f05a3cd034ac10ef1abca4c11ed6cc9" translate="yes" xml:space="preserve">
          <source>Round-robin multidb router for Django.</source>
          <target state="translated">Django的round-robin multidb router。</target>
        </trans-unit>
        <trans-unit id="0d25a0d9a5ccaba4bf4b777edc75925de4e6c5bb" translate="yes" xml:space="preserve">
          <source>Running the Tests</source>
          <target state="translated">运行测试</target>
        </trans-unit>
        <trans-unit id="181b77ca1204d84c17cc668fd49a092a03677e3e" translate="yes" xml:space="preserve">
          <source>The replica databases will be chosen in round-robin fashion.</source>
          <target state="translated">复制数据库将以循环方式选择。</target>
        </trans-unit>
        <trans-unit id="d5668c0d6a4f2c20d12618b638c278926c6bc74b" translate="yes" xml:space="preserve">
          <source>Then put ``multidb.ReplicaRouter`` into DATABASE_ROUTERS::</source>
          <target state="translated">然后把``multidb.ReplicaRouter``放入DATABASE_ROUTERS:。</target>
        </trans-unit>
        <trans-unit id="d4b8c5f8c9797e3e7cfcd47ec9d431b95dfab164" translate="yes" xml:space="preserve">
          <source>Then, install the middleware. It must be listed before any other middleware</source>
          <target state="translated">然后,安装中间件。它必须列在任何其他中间件之前</target>
        </trans-unit>
        <trans-unit id="8a24fdaa8f79803771dba44d5918904e58415382" translate="yes" xml:space="preserve">
          <source>To run the tests, you'll need to install the development requirements::</source>
          <target state="translated">要运行测试,你需要安装开发需求:。</target>
        </trans-unit>
        <trans-unit id="40a39fa563376a708971661f3926a11f39901006" translate="yes" xml:space="preserve">
          <source>To use ``PinningReplicaRouter``, put it into ``DATABASE_ROUTERS`` in your</source>
          <target state="translated">要使用``PinningReplicaRouter``,请把它放到你的目录中的``DATABASE_ROUTERS``中。</target>
        </trans-unit>
        <trans-unit id="7879d1e54821db90604d4c7691257df969064b8b" translate="yes" xml:space="preserve">
          <source>With ``multidb.ReplicaRouter`` all read queries will go to a replica</source>
          <target state="translated">使用``multidb.ReplicaRouter``,所有的读取查询都会转到一个副本。</target>
        </trans-unit>
        <trans-unit id="c8487e81ebf03bf56d29fee4437fee070bbc3401" translate="yes" xml:space="preserve">
          <source>You can also manually set ``response._db_write = True`` to indicate that a</source>
          <target state="translated">您也可以手动设置``response._db_write=True``来指示一个</target>
        </trans-unit>
        <trans-unit id="3082dd38f1a0c425c3af1084357420dc9285d14a" translate="yes" xml:space="preserve">
          <source>``HEAD``, or ``OPTIONS`` are writes. You can indicate that any view writes to</source>
          <target state="translated">HEAD或OPTIONS是写的。您可以指示任何视图写入</target>
        </trans-unit>
        <trans-unit id="7ff77e77bfe882ddde9ac7c96f241a64bd5e859a" translate="yes" xml:space="preserve">
          <source>``PinningRouterMiddleware`` attaches a cookie to any user agent who has just</source>
          <target state="translated">``PinningRouterMiddleware``将cookie附加到任何刚刚拥有</target>
        </trans-unit>
        <trans-unit id="a1347e5a997c72eef2855a8749dd37ce45ec23b2" translate="yes" xml:space="preserve">
          <source>``PinningRouterMiddleware`` identifies database writes primarily by request</source>
          <target state="translated">``PinningRouterMiddleware''主要根据请求识别数据库写入</target>
        </trans-unit>
        <trans-unit id="7143d3e51bfb2a169f16314ec0fb49bf96dc411b" translate="yes" xml:space="preserve">
          <source>``multidb.get_replica``::</source>
          <target state="translated">``multidb.get_replica''::</target>
        </trans-unit>
        <trans-unit id="66076766e8a102dfc2339ae36190fbce7dc31a45" translate="yes" xml:space="preserve">
          <source>``multidb.pinning.use_primary_db`` is both a context manager and a decorator for</source>
          <target state="translated">``multidb.pinning.use_primary_db``既是上下文管理器又是装饰器</target>
        </trans-unit>
        <trans-unit id="5b0978a3d04c198b230c08d20a8e798db059e0ec" translate="yes" xml:space="preserve">
          <source>``multidb`` provides two Django database routers useful in primary-replica database</source>
          <target state="translated">``multidb``提供了两个在主副本数据库中有用的Django数据库路由器</target>
        </trans-unit>
        <trans-unit id="ba1b0d38364b97c84942cc4bbea111100d46cd42" translate="yes" xml:space="preserve">
          <source>``use_primary_db``</source>
          <target state="translated">use_primary_db</target>
        </trans-unit>
        <trans-unit id="12347fe2cf350f4f82a7feca7fbca3b2992d6169" translate="yes" xml:space="preserve">
          <source>and Python using tox:</source>
          <target state="translated">和Python使用 tox。</target>
        </trans-unit>
        <trans-unit id="4ac2e29770320ad080a6d2f4319bdc28267c2d50" translate="yes" xml:space="preserve">
          <source>be adjusted like so::</source>
          <target state="translated">是这样调整的:。</target>
        </trans-unit>
        <trans-unit id="e843862682c9d26a53c30c6a5c9bfdcc93058855" translate="yes" xml:space="preserve">
          <source>connection = connections[multidb.get_replica()]</source>
          <target state="translated">connection=connections[multidb.get_replica()]</target>
        </trans-unit>
        <trans-unit id="a35d50fd03ad05677484f542ce5cedffce76cf57" translate="yes" xml:space="preserve">
          <source>database aliases that can be found in ``DATABASES``::</source>
          <target state="translated">数据库别名可在``DATABASES``:中找到。</target>
        </trans-unit>
        <trans-unit id="60b286fa96820e423568bc179d0802d2852fb636" translate="yes" xml:space="preserve">
          <source>database.</source>
          <target state="translated">数据库。</target>
        </trans-unit>
        <trans-unit id="22935e359f066ff77f65afc76e9a96cc48459309" translate="yes" xml:space="preserve">
          <source>database;  all inserts, updates, and deletes will go to the ``default``</source>
          <target state="translated">数据库;所有的插入、更新和删除都将转到``默认``。</target>
        </trans-unit>
        <trans-unit id="07a036e182e1d2deabfc779478ad909b7efe147b" translate="yes" xml:space="preserve">
          <source>def func(*args, **kw):</source>
          <target state="translated">def func(*args,**kw):</target>
        </trans-unit>
        <trans-unit id="287ca45e0bc6a7f90d344160af1fe19c933ca73d" translate="yes" xml:space="preserve">
          <source>deployments.</source>
          <target state="translated">部署。</target>
        </trans-unit>
        <trans-unit id="3c6dd56b785edd011c39fc9ec2954a6dba9ceea4" translate="yes" xml:space="preserve">
          <source>from django.db import connections</source>
          <target state="translated">从django.db导入连接</target>
        </trans-unit>
        <trans-unit id="f1ccb2590c3f00d5d96ee9820d6fb676099c0577" translate="yes" xml:space="preserve">
          <source>from multidb.pinning import use_primary_db</source>
          <target state="translated">从multidb.pinning导入use_primary_db。</target>
        </trans-unit>
        <trans-unit id="09d068a604817da094ba74836e03ef8085bfad87" translate="yes" xml:space="preserve">
          <source>import multidb</source>
          <target state="translated">导入multidb</target>
        </trans-unit>
        <trans-unit id="dec358f4eb0fd613ddfe03989393c9ee0415d451" translate="yes" xml:space="preserve">
          <source>in your application, consider using ``multidb.PinningReplicaRouter``. This</source>
          <target state="translated">在你的应用程序中,考虑使用``multidb.PinningReplicaRouter``。这个</target>
        </trans-unit>
        <trans-unit id="a3533c21f1f12165ff8093073ff629e95fb4676d" translate="yes" xml:space="preserve">
          <source>length of time.</source>
          <target state="translated">时间的长短。</target>
        </trans-unit>
        <trans-unit id="b39e6edc835a1296bd20ab840976696c5d643a94" translate="yes" xml:space="preserve">
          <source>makes a forum post (to the primary) and then is redirected to a fully-rendered</source>
          <target state="translated">在论坛上发了一个帖子(到主站),然后被重定向到一个完全渲染的</target>
        </trans-unit>
        <trans-unit id="f37e86252b06f0ed30a6c4f696ef30195ffdbfc9" translate="yes" xml:space="preserve">
          <source>or as a decorator::</source>
          <target state="translated">或作为装饰者:。</target>
        </trans-unit>
        <trans-unit id="7b1855527317d0124ebeb726defa838d54e9b663" translate="yes" xml:space="preserve">
          <source>pip install -r requirements.txt</source>
          <target state="translated">pip install -r requirements.txt</target>
        </trans-unit>
        <trans-unit id="822080205a77a0585db07d209fe71d597e0b3f2e" translate="yes" xml:space="preserve">
          <source>replication lag. By default, its value is a conservative 15 seconds, but it can</source>
          <target state="translated">复制滞后。默认情况下,它的值是保守的15秒,但它可以是</target>
        </trans-unit>
        <trans-unit id="38b177426472bd2ef433e8eb4f1a1f009cd57323" translate="yes" xml:space="preserve">
          <source>replication to the replicas is enough to cause inconsistency for the end user.</source>
          <target state="translated">复制到副本上,足以造成终端用户的不一致。</target>
        </trans-unit>
        <trans-unit id="7af8cda8719143279bc8d31eafe7d868e0451c56" translate="yes" xml:space="preserve">
          <source>request, but only in the next request.</source>
          <target state="translated">请求,但只能在下一个请求中使用。</target>
        </trans-unit>
        <trans-unit id="7ac12fb98fe9f11cde4ccdcf6de7ca05fc7e5689" translate="yes" xml:space="preserve">
          <source>router works in combination with ``multidb.middleware.PinningRouterMiddleware``</source>
          <target state="translated">路由器与``multidb.middleware.PinningRouterMiddleware``结合使用。</target>
        </trans-unit>
        <trans-unit id="6f6729abdb3d64520518d83f276eacd696f569d5" translate="yes" xml:space="preserve">
          <source>same result as if the request were, e.g., a ``POST``.</source>
          <target state="translated">与请求的结果相同,例如,``POST``。</target>
        </trans-unit>
        <trans-unit id="b448132870f2f3951723dcc2afc5f898abecfdb6" translate="yes" xml:space="preserve">
          <source>setting::</source>
          <target state="translated">设置:。</target>
        </trans-unit>
        <trans-unit id="e76a3edfdbbfee50a4c6e73c1f4d79aabe73ed38" translate="yes" xml:space="preserve">
          <source>settings::</source>
          <target state="translated">设置:。</target>
        </trans-unit>
        <trans-unit id="b0aa73a73e22a725fa44a9b0990416b44887d6f1" translate="yes" xml:space="preserve">
          <source>the database by using the ``multidb.db_write`` decorator. This will cause the</source>
          <target state="translated">使用``multidb.db_write``装饰器对数据库进行修改。这将导致</target>
        </trans-unit>
        <trans-unit id="a13d91a11cdf0489a11f70fa3fa20cb4196fa3ef" translate="yes" xml:space="preserve">
          <source>the same user agent are directed to the ``default`` database for a configurable</source>
          <target state="translated">同一用户代理被引导到 &quot;默认 &quot;数据库,以获得一个可配置的</target>
        </trans-unit>
        <trans-unit id="2f7830fb24e53bd261b862c3d3262fc6d8a21692" translate="yes" xml:space="preserve">
          <source>to assure that, after writing to the ``default`` database, future reads from</source>
          <target state="translated">以确保在向 &quot;默认 &quot;数据库写入后,今后从</target>
        </trans-unit>
        <trans-unit id="8a5f9fe160c52d3c79f0b50381951aa835492f30" translate="yes" xml:space="preserve">
          <source>touch_another_database()</source>
          <target state="translated">touch_another_database()</target>
        </trans-unit>
        <trans-unit id="15123de7334a3f79f371ba31a2cee08492b8ab0c" translate="yes" xml:space="preserve">
          <source>touch_the_database()</source>
          <target state="translated">touch_the_database()</target>
        </trans-unit>
        <trans-unit id="34575d34ff09d31318bd12ecc2573705fc6398d8" translate="yes" xml:space="preserve">
          <source>type, assuming that requests with HTTP methods that are not ``GET``, ``TRACE``,</source>
          <target state="translated">类型,假设请求的HTTP方法不是``GET``、``TRACE``。</target>
        </trans-unit>
        <trans-unit id="1fa53fffa6a6e7c5d285d1cd4bd57741a8b35513" translate="yes" xml:space="preserve">
          <source>view of it (from a replica) 500ms later, the view will fail. If this is a problem</source>
          <target state="translated">500ms后,查看它(从副本)会失败。如果这是一个问题</target>
        </trans-unit>
        <trans-unit id="0ecd2aa11dc7fc2d448ac0ab1bf6f35094fc48e0" translate="yes" xml:space="preserve">
          <source>which performs database writes::</source>
          <target state="translated">它进行数据库的写入:。</target>
        </trans-unit>
        <trans-unit id="c580ccd091134a04a32dd8a1176d90b3fc9bc696" translate="yes" xml:space="preserve">
          <source>with use_primary_db:</source>
          <target state="translated">与use_primary_db。</target>
        </trans-unit>
        <trans-unit id="0c27dfcc35d2c02a004115780b3e3e36e739c8eb" translate="yes" xml:space="preserve">
          <source>wrapping code to use the primary database. You can use it as a context manager::</source>
          <target state="translated">包装代码来使用主数据库。你可以把它作为一个上下文管理器:。</target>
        </trans-unit>
        <trans-unit id="d3593d0581523951bf04638663529f0fc5313533" translate="yes" xml:space="preserve">
          <source>write occurred. This will not result in using the ``default`` database in this</source>
          <target state="translated">写发生。这将不会导致在此使用``默认``数据库。</target>
        </trans-unit>
        <trans-unit id="6f67a797c0b91a56bd45724d3606ea4c7dcd90df" translate="yes" xml:space="preserve">
          <source>written. The cookie should be set to expire at a time longer than your</source>
          <target state="translated">写的。该cookie的过期时间应设置为比您的</target>
        </trans-unit>
        <trans-unit id="c2b7df6201fdd3362399091f0a29550df3505b6a" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="translated">}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
