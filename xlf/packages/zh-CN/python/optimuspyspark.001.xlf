<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/optimuspyspark/">
    <body>
      <group id="optimuspyspark">
        <trans-unit id="4d14fe8053086dacebd27af943b6b4edfd55e646" translate="yes" xml:space="preserve">
          <source>&quot;In OpenRefine, clustering refers to the operation of &quot;finding groups of different values that might be alternative representations of the same thing&quot;. For example, the two strings &quot;New York&quot; and &quot;new york&quot; are very likely to refer to the same concept and just have capitalization differences. Likewise, &quot;G&amp;ouml;del&quot; and &quot;Godel&quot; probably refer to the same person.&quot;</source>
          <target state="translated">&amp;ldquo;在OpenRefine中，聚类指的是&amp;ldquo;找到可能是同一事物的替代表示形式的不同值的组&amp;rdquo;的操作。例如，两个字符串&amp;ldquo; New York&amp;rdquo;和&amp;ldquo; new york&amp;rdquo;很可能引用相同的字符串概念，只是大小写不同。同样，&amp;ldquo;G&amp;ouml;del&amp;rdquo;和&amp;ldquo; Godel&amp;rdquo;可能是指同一个人。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="f94f3d12eb049a1a8b46cda8906673bff6ccd2bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/docs/source&quot;&gt;Documentation&lt;/a&gt; updates, enhancements, designs, or   bugfixes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/docs/source&quot;&gt;文档&lt;/a&gt;更新，增强功能，设计或错误修正。</target>
        </trans-unit>
        <trans-unit id="a444d24a2bfd2d9604721453ba0dca28110f3993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hioptimus.com/category/blog/&quot;&gt;Blogging, speaking about, or creating tutorials&lt;/a&gt;   about Optimus and its many features.</source>
          <target state="translated">&lt;a href=&quot;https://hioptimus.com/category/blog/&quot;&gt;博客，谈论或创建&lt;/a&gt; 有关擎天柱及其许多功能的教程。</target>
        </trans-unit>
        <trans-unit id="b39cc4550d7c3f3683a586bc3406628a6f4dcbf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://twitter.com/search?q=optimusdata&quot;&gt;Searching #optimusdata on twitter&lt;/a&gt; and helping someone else who needs help.</source>
          <target state="translated">&lt;a href=&quot;https://twitter.com/search?q=optimusdata&quot;&gt;在Twitter上搜索#optimusdata&lt;/a&gt;并帮助需要帮助的其他人。</target>
        </trans-unit>
        <trans-unit id="5dfa22eb03d5e4e8b6f3cc445dc50fd1fd3ab06d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: We are working hard in version 3.0 &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/develop-3.0&quot;&gt;https://github.com/ironmussa/Optimus/tree/develop-3.0&lt;/a&gt;. in which you could use pandas, cudf, Dask, Dask/cudf as backend using a unified API.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意：我们正在3.0版中努力工作&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/develop-3.0&quot;&gt;https://github.com/ironmussa/Optimus/tree/develop-3.0&lt;/a&gt;。您可以使用统一的API将pandas，cudf，Dask，Dask / cudf用作后端。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f28100b7b9410799303a48f9e4b0d72d56607409" translate="yes" xml:space="preserve">
          <source>Adding unit, or functional &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/tests&quot;&gt;tests&lt;/a&gt;</source>
          <target state="translated">添加单元或功能&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/tests&quot;&gt;测试&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a7fe27838c05306fa98b1a213519043a42e8dac" translate="yes" xml:space="preserve">
          <source>Also if you want to a suggestion or feature request use &lt;a href=&quot;https://github.com/ironmussa/optimus/issues&quot;&gt;https://github.com/ironmussa/optimus/issues&lt;/a&gt;</source>
          <target state="translated">另外，如果您想提出建议或功能请求，请使用&lt;a href=&quot;https://github.com/ironmussa/optimus/issues&quot;&gt;https://github.com/ironmussa/optimus/issues&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccffb6f8d2a70dbf4e238f9525387d7f5f4dd0e3" translate="yes" xml:space="preserve">
          <source>Also you can create a dataframe from a panda dataframe</source>
          <target state="translated">也可以从熊猫的数据框架中创建一个数据框架。</target>
        </trans-unit>
        <trans-unit id="ae80296465e7b2d56ced3ba44e1d720336be89b5" translate="yes" xml:space="preserve">
          <source>Also you can create a dataframe from scratch</source>
          <target state="translated">你也可以从头开始创建一个数据框架。</target>
        </trans-unit>
        <trans-unit id="44098a317afdcb405601a636a06f08879735e1ce" translate="yes" xml:space="preserve">
          <source>Also you can go to the &lt;a href=&quot;examples/&quot;&gt;examples&lt;/a&gt; folder to found specific notebooks about data cleaning, data munging, profiling, data enrichment and how to create ML and DL models.</source>
          <target state="translated">您也可以转到&lt;a href=&quot;examples/&quot;&gt;examples&lt;/a&gt;文件夹找到有关数据清理，数据整理，配置文件，数据丰富以及如何创建ML和DL模型的特定笔记本。</target>
        </trans-unit>
        <trans-unit id="9623366d47462decfeab98a941369cbf2e4cf854" translate="yes" xml:space="preserve">
          <source>Also you can load data from oracle, redshift, mysql and postgres. See &lt;em&gt;&lt;strong&gt;Database connection&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">您也可以从oracle，redshift，mysql和postgres加载数据。请参阅&lt;em&gt;&lt;strong&gt;数据库连接&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00527151b2a5583f94ba8fa29b10a42be77782af" translate="yes" xml:space="preserve">
          <source>Also you can save data to oracle, redshift, mysql and postgres. See &lt;em&gt;&lt;strong&gt;Database connection&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">您也可以将数据保存到oracle，redshift，mysql和postgres。请参阅&lt;em&gt;&lt;strong&gt;数据库连接&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c01e50396b269c6b07d0382253ca889245cd82f0" translate="yes" xml:space="preserve">
          <source>Apache 2.0 &amp;copy;</source>
          <target state="translated">Apache 2.0&amp;copy;</target>
        </trans-unit>
        <trans-unit id="6d0002dbcf3f5e3f42c123efb8183554561a5a48" translate="yes" xml:space="preserve">
          <source>Apache Spark created a library called MLlib where they coded great algorithms for Machine Learning. Now
with the ML library we can take advantage of the Dataframe API and its optimization to create Machine Learning Pipelines easily.</source>
          <target state="translated">Apache Spark创建了一个名为MLlib的库,他们在那里为机器学习编码了伟大的算法。现在有了ML库,我们可以利用Dataframe API及其优化来轻松创建机器学习管道。</target>
        </trans-unit>
        <trans-unit id="b64899a2bdc5b82518d0aa1d53407cb40ea64271" translate="yes" xml:space="preserve">
          <source>Apache Spark&amp;gt;= 2.4.0</source>
          <target state="translated">Apache Spark&amp;gt; = 2.4.0</target>
        </trans-unit>
        <trans-unit id="143b54ceee9211cfe2dd5cba55d7902dc55fc52d" translate="yes" xml:space="preserve">
          <source>Argenis Leon</source>
          <target state="translated">Argenis Leon</target>
        </trans-unit>
        <trans-unit id="6fd1df7dfa78cabba847e0dde68d6d658f085ff6" translate="yes" xml:space="preserve">
          <source>Backers</source>
          <target state="translated">支持者</target>
        </trans-unit>
        <trans-unit id="d9952600de28d03ed79e04ced140a6c129cacd6b" translate="yes" xml:space="preserve">
          <source>Besides check the &lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/ironmussa/Optimus/blob/master/docs/cheatsheet/optimus_cheat_sheet.html&quot;&gt;Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">除了检查&lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/ironmussa/Optimus/blob/master/docs/cheatsheet/optimus_cheat_sheet.html&quot;&gt;备忘单&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75c9c06ddcaae908df34f4e711c15b1a3a80558d" translate="yes" xml:space="preserve">
          <source>Besides histograms and frequency plots you also have scatter plots and box plots. All powered by Apache by pyspark</source>
          <target state="translated">除了直方图和频率图,你还有散点图和盒图。全部由Apache by pyspark提供</target>
        </trans-unit>
        <trans-unit id="9f148a70dea99c79a6a47ae323868f352202d0ae" translate="yes" xml:space="preserve">
          <source>Cleaning and Processing</source>
          <target state="translated">清洗和加工</target>
        </trans-unit>
        <trans-unit id="d8c3d53c906d2dd170a8596124fbf2f967344d48" translate="yes" xml:space="preserve">
          <source>Clustering Strings</source>
          <target state="translated">聚类字符串</target>
        </trans-unit>
        <trans-unit id="22ca0897fc6982e71f87e7929084c43a6ab7a29a" translate="yes" xml:space="preserve">
          <source>Contributing to Optimus</source>
          <target state="translated">为 &quot;擎天柱 &quot;做贡献</target>
        </trans-unit>
        <trans-unit id="f2635b7b0ed569c022b022ba6007e92017d47267" translate="yes" xml:space="preserve">
          <source>Contributions go far beyond pull requests and commits. We are very happy to receive any kind of contributions</source>
          <target state="translated">贡献远远超出了拉取请求和提交的范围。我们非常乐意接受任何形式的贡献。</target>
        </trans-unit>
        <trans-unit id="8086adb5746e504bbe3902757baf1389e8c9f958" translate="yes" xml:space="preserve">
          <source>Contributors:</source>
          <target state="translated">撰稿人:</target>
        </trans-unit>
        <trans-unit id="c1174865dc451c21b895e949b274d7ea1e9b90ef" translate="yes" xml:space="preserve">
          <source>Core Team</source>
          <target state="translated">核心团队</target>
        </trans-unit>
        <trans-unit id="52cf7f8d5b2139a264e0c1c8417d153748adbf8a" translate="yes" xml:space="preserve">
          <source>Create dataframes</source>
          <target state="translated">创建数据框</target>
        </trans-unit>
        <trans-unit id="253deb0b4c3f25b5d0a8ab69ab15a0a5e8a1bbf9" translate="yes" xml:space="preserve">
          <source>Custom functions</source>
          <target state="translated">自定义功能</target>
        </trans-unit>
        <trans-unit id="fd5611faec913bc587e10f784ae2c907e58313ca" translate="yes" xml:space="preserve">
          <source>Data enrichment</source>
          <target state="translated">数据丰富</target>
        </trans-unit>
        <trans-unit id="099dccef26c430d514bb04516655f1fc1871153b" translate="yes" xml:space="preserve">
          <source>Data profiling</source>
          <target state="translated">数据分析</target>
        </trans-unit>
        <trans-unit id="56b1f3c77e89f25574edd3a96c9fb62795f51729" translate="yes" xml:space="preserve">
          <source>Database connection</source>
          <target state="translated">数据库连接</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="48722e5be3bba84358ac63702a8027f8a1c4e657" translate="yes" xml:space="preserve">
          <source>Even though this task is not extremely hard, it is not easy. The way most Machine Learning models work on Spark
are not straightforward, and they need lots of feature engineering to work. That's why we created the feature engineering
section inside Optimus.</source>
          <target state="translated">即使这个任务并不是非常困难,但也并不容易。大多数机器学习模型在 Spark 上的工作方式并不简单,它们需要大量的特征工程来工作。这就是为什么我们在Optimus里面创建了特征工程部分。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">意见反馈</target>
        </trans-unit>
        <trans-unit id="81d491964033aed7e6a234630d82d03105881aaf" translate="yes" xml:space="preserve">
          <source>Feedback is what drive Optimus future, so please take a couple of minutes to help shape the Optimus' Roadmap:  &lt;a href=&quot;http://bit.ly/optimus_survey&quot;&gt;http://bit.ly/optimus_survey&lt;/a&gt;</source>
          <target state="translated">反馈是擎天柱未来的动力，因此请花几分钟来帮助确定擎天柱的路线图：&lt;a href=&quot;http://bit.ly/optimus_survey&quot;&gt;http&lt;/a&gt; : //bit.ly/optimus_survey</target>
        </trans-unit>
        <trans-unit id="3ec72eab087de454a1888a04353532ab6bdd7c4a" translate="yes" xml:space="preserve">
          <source>For dates data types Optimus can give you extra information</source>
          <target state="translated">对于日期数据类型,Optimus可以给你额外的信息。</target>
        </trans-unit>
        <trans-unit id="6c91cea6cde8e0b6f747e53b935e7a8e4507af64" translate="yes" xml:space="preserve">
          <source>For example you can load data from a url, transform and apply some predefined cleaning functions:</source>
          <target state="translated">例如,您可以从一个url中加载数据,转换和应用一些预定义的清洗功能。</target>
        </trans-unit>
        <trans-unit id="bd03d183677c1ca394c4df4b71ed497f9131247e" translate="yes" xml:space="preserve">
          <source>For more informacion see this:
&lt;a href=&quot;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&quot;&gt;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见：&lt;a href=&quot;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&quot;&gt;https&lt;/a&gt; : //github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth</target>
        </trans-unit>
        <trans-unit id="5ae14b6c0988ac95bdedf36da2d4ed80ae6c5b89" translate="yes" xml:space="preserve">
          <source>Get the ouliers using tukey</source>
          <target state="translated">使用tukey获取ouliers</target>
        </trans-unit>
        <trans-unit id="acea85e5fa226bf29f03f18bbe6b583c782bda4e" translate="yes" xml:space="preserve">
          <source>Handling Spark jars, packages and repositories</source>
          <target state="translated">处理Spark jars,包和仓库。</target>
        </trans-unit>
        <trans-unit id="351dbcc3ae6252820c722dc1b3b0fcc3a6d0bfe6" translate="yes" xml:space="preserve">
          <source>Handling column output</source>
          <target state="translated">处理列输出</target>
        </trans-unit>
        <trans-unit id="73a0f5a1427e7ea76b5b97f1d724bcc512ed2f47" translate="yes" xml:space="preserve">
          <source>Helping others on &lt;a href=&quot;https://img.shields.io/discord/579030865468719104.svg&quot;&gt;Discord&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;https://img.shields.io/discord/579030865468719104.svg&quot;&gt;不和谐中&lt;/a&gt;帮助他人</target>
        </trans-unit>
        <trans-unit id="225c92a02117e16bc8a9084b75440c31379706cf" translate="yes" xml:space="preserve">
          <source>Here a quote from its site:</source>
          <target state="translated">下面引用其网站上的一段话。</target>
        </trans-unit>
        <trans-unit id="e043b4221f71c79974691a407d97e9e2dc852f0d" translate="yes" xml:space="preserve">
          <source>Here you apply a function to the &quot;billingid&quot; column. Sum 1 and 2 to the current column value. All powered by Pandas UDF</source>
          <target state="translated">在这里,你对 &quot;billingid &quot;列应用一个函数。将1和2相加为当前列值。全部由Pandas UDF提供</target>
        </trans-unit>
        <trans-unit id="95ad823182c8526f5d6a850e990a354c316fb467" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;list&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;list&lt;/strong&gt; is passed in &lt;strong&gt;out_cols&lt;/strong&gt; Optimus will output every input column in the respective output column</source>
          <target state="translated">如果一个&lt;strong&gt;列表&lt;/strong&gt;传递给&lt;strong&gt;input_cols&lt;/strong&gt;和&lt;strong&gt;列表&lt;/strong&gt;中通过&lt;strong&gt;out_cols&lt;/strong&gt;在各自的输出列擎天柱将输出每个输入列</target>
        </trans-unit>
        <trans-unit id="3b4928a399e8e1305ef7347ccaad8060349b441d" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;list&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;out_cols&lt;/strong&gt; Optimus will concatenate the list with every element in the list to create a new column name with the output</source>
          <target state="translated">如果将&lt;strong&gt;列表&lt;/strong&gt;传递给&lt;strong&gt;input_cols&lt;/strong&gt;并将&lt;strong&gt;字符串&lt;/strong&gt;传递给&lt;strong&gt;out_cols，则&lt;/strong&gt;Optimus会将列表与列表中的每个元素连接起来，以使用输出创建新的列名</target>
        </trans-unit>
        <trans-unit id="112348424b2fbe5ef93be2c463be508902fcb017" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and &lt;strong&gt;output_cols&lt;/strong&gt; is not defined the result from the operation is going to be saved in the same input column</source>
          <target state="translated">如果一个&lt;strong&gt;字符串&lt;/strong&gt;传递给&lt;strong&gt;input_cols&lt;/strong&gt;和&lt;strong&gt;output_cols&lt;/strong&gt;没有从操作定义的结果将被保存在同一输入列</target>
        </trans-unit>
        <trans-unit id="2f67aeb095042bddf7e1402e86ac60fffc91ea72" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;output_cols&lt;/strong&gt; the output is going to be saved in the output column</source>
          <target state="translated">如果将&lt;strong&gt;字符串&lt;/strong&gt;传递给&lt;strong&gt;input_cols&lt;/strong&gt;并将&lt;strong&gt;字符串&lt;/strong&gt;传递给&lt;strong&gt;output_cols，&lt;/strong&gt;则输出将保存在输出列中</target>
        </trans-unit>
        <trans-unit id="af08144db1541754ca59a16a0f56ce793cf0f34a" translate="yes" xml:space="preserve">
          <source>If you want to apply a Column Expression use &lt;code&gt;apply_expr()&lt;/code&gt; like this. In this case we pass an argument 10 to divide the actual column value</source>
          <target state="translated">如果要应用列表达式，请使用 &lt;code&gt;apply_expr()&lt;/code&gt; 这样。在这种情况下，我们传递参数10以除以实际的列值</target>
        </trans-unit>
        <trans-unit id="9b4de938a4e9fe687dc20ff2f6af9ac174587912" translate="yes" xml:space="preserve">
          <source>In your terminal just type  &lt;code&gt;pip install optimuspyspark&lt;/code&gt;</source>
          <target state="translated">在您的终端中，键入 &lt;code&gt;pip install optimuspyspark&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605d82caa33e3e8cfa09db3546bb282d9af04f98" translate="yes" xml:space="preserve">
          <source>Installation (pip):</source>
          <target state="translated">安装(管道)。</target>
        </trans-unit>
        <trans-unit id="a00f74a53d5eedf3a1cd6d0d801d4fb76b93de5c" translate="yes" xml:space="preserve">
          <source>Into this</source>
          <target state="translated">进入这个</target>
        </trans-unit>
        <trans-unit id="a87058f0a1f68dfc71b04f8a59e58dc31002f1f0" translate="yes" xml:space="preserve">
          <source>Keycolision</source>
          <target state="translated">钥匙碰撞</target>
        </trans-unit>
        <trans-unit id="485999aadd7f73d21af416e165768fff9d4110c3" translate="yes" xml:space="preserve">
          <source>Let's load a &quot;big&quot; dataset</source>
          <target state="translated">让我们加载一个 &quot;大 &quot;数据集。</target>
        </trans-unit>
        <trans-unit id="df0ea4a1b61af9dc45f0e4e89319efc67f28b7c2" translate="yes" xml:space="preserve">
          <source>Let's load a tiny dataset we can enrich</source>
          <target state="translated">让我们加载一个微小的数据集,我们可以丰富它的内容</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">许可证:</target>
        </trans-unit>
        <trans-unit id="ffa42d904be90d9cc75f8ce5b379c6fd7af8c23f" translate="yes" xml:space="preserve">
          <source>Loading data</source>
          <target state="translated">加载数据</target>
        </trans-unit>
        <trans-unit id="f97db96938c3125697cc24ed503988866799c024" translate="yes" xml:space="preserve">
          <source>Machine Learning</source>
          <target state="translated">机器学习</target>
        </trans-unit>
        <trans-unit id="6d650f6e78d279358a1452410fcada035f1d3021" translate="yes" xml:space="preserve">
          <source>Machine Learning is one of the last steps, and the goal for most Data Science WorkFlows.</source>
          <target state="translated">机器学习是最后一步,也是大多数数据科学WorkFlows的目标。</target>
        </trans-unit>
        <trans-unit id="1786c24866d6ea107cece1d5a4392b1aebef85a5" translate="yes" xml:space="preserve">
          <source>Nearest Neighbor Methods</source>
          <target state="translated">最近的邻居方法</target>
        </trans-unit>
        <trans-unit id="5b0015426b1a5705cc29013903b274ea6b63f863" translate="yes" xml:space="preserve">
          <source>Note that you can use Optimus functions and Spark functions(&lt;code&gt;.WithColumn()&lt;/code&gt;) and all the df function availables in a Spark Dataframe at the same time. To know about all the Optimus functionality please go to this &lt;a href=&quot;examples/&quot;&gt;notebooks&lt;/a&gt;</source>
          <target state="translated">请注意，您可以同时使用Spark &lt;code&gt;.WithColumn()&lt;/code&gt; Optimus函数和Spark函数（.WithColumn（））以及所有df函数。要了解所有Optimus功能，请转到此&lt;a href=&quot;examples/&quot;&gt;笔记本&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4d639e2b3de5627d2201837d4055c423ecdfe8d" translate="yes" xml:space="preserve">
          <source>Now Optimus can load data in csv, json, parquet, avro, excel from a local file or URL.</source>
          <target state="translated">现在Optimus可以从本地文件或URL加载csv、json、parquet、avro、excel格式的数据。</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">数值</target>
        </trans-unit>
        <trans-unit id="0e07a46de25f6377b1ffdf9cab12b584b61b5a1f" translate="yes" xml:space="preserve">
          <source>One of the best &quot;tree&quot; models for machine learning is Random Forest. What about creating a RF model with just
one line? With Optimus is really easy.</source>
          <target state="translated">对于机器学习来说,最好的 &quot;树 &quot;模型之一就是随机森林。那只用一条线创建一个RF模型呢?用Optimus真的很简单。</target>
        </trans-unit>
        <trans-unit id="49a082f76ace2f07c67d69b56065dada5d841f72" translate="yes" xml:space="preserve">
          <source>Optimus V2 was created to make data cleaning a breeze. The API was designed to be super easy to newcomers and very familiar for people that comes from Pandas.
Optimus expands the Spark DataFrame functionality adding .rows and .cols attributes.</source>
          <target state="translated">Optimus V2的诞生是为了让数据清理变得轻而易举。该API的设计是为了让新手超级容易上手,而对于来自Pandas的人来说则非常熟悉。Optimus扩展了Spark DataFrame的功能,增加了.rows和.cols属性。</target>
        </trans-unit>
        <trans-unit id="0a049d1036baf67d842cc2c328333eb70491379c" translate="yes" xml:space="preserve">
          <source>Optimus comes with a powerful and unique data profiler. Besides basic and advance stats like min, max, kurtosis, mad etc,
it also let you know what type of data has every column. For example if a string column have string, integer, float, bool, date Optimus can give you an unique overview about your data.
Just run &lt;code&gt;df.profile(&quot;*&quot;)&lt;/code&gt; to profile all the columns. For more info about the profiler please go to this &lt;a href=&quot;./examples/profiler.ipynb&quot;&gt;notebook&lt;/a&gt;.</source>
          <target state="translated">Optimus带有功能强大且独特的数据分析器。除了基本和高级统计信息（例如最小值，最大值，峰度，疯狂等）之外，它还使您知道每一列具有哪种数据类型。例如，如果字符串列包含字符串，整数，浮点数，布尔值，则日期Optimus可以为您提供有关数据的唯一概览。只需运行 &lt;code&gt;df.profile(&quot;*&quot;)&lt;/code&gt; 即可分析所有列。有关探查器的更多信息，请转到此&lt;a href=&quot;./examples/profiler.ipynb&quot;&gt;笔记本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f13d53339395bd7da551c6ddc5593c384dca018" translate="yes" xml:space="preserve">
          <source>Optimus has a tiny API so you can use any plotting library. For example, you can use &lt;code&gt;df.cols.scatter()&lt;/code&gt;, &lt;code&gt;df.cols.frequency()&lt;/code&gt;, &lt;code&gt;df.cols.boxplot()&lt;/code&gt; or &lt;code&gt;df.cols.hist()&lt;/code&gt; to output a JSON that you can process to adapt the data to any plotting library.</source>
          <target state="translated">Optimus有一个很小的API，因此您可以使用任何绘图库。例如，您可以使用 &lt;code&gt;df.cols.scatter()&lt;/code&gt; ， &lt;code&gt;df.cols.frequency()&lt;/code&gt; ， &lt;code&gt;df.cols.boxplot()&lt;/code&gt; 或 &lt;code&gt;df.cols.hist()&lt;/code&gt; 输出可处理以使数据适应的JSON。任何绘图库。</target>
        </trans-unit>
        <trans-unit id="bd5b27005e74eb22a1ec115deb958daa573b0c03" translate="yes" xml:space="preserve">
          <source>Optimus have handy tools to connect to databases and extract informacion. Optimus can handle &lt;strong&gt;redshift&lt;/strong&gt;, &lt;strong&gt;postgres&lt;/strong&gt;, &lt;strong&gt;oracle&lt;/strong&gt; and &lt;strong&gt;mysql&lt;/strong&gt;</source>
          <target state="translated">Optimus具有方便的工具可以连接数据库并提取信息。Optimus可以处理&lt;strong&gt;redshift&lt;/strong&gt;，&lt;strong&gt;postgres&lt;/strong&gt;，&lt;strong&gt;oracle&lt;/strong&gt;和&lt;strong&gt;mysql&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="749dba28b73aa7dd9669a93e1def006267e04a03" translate="yes" xml:space="preserve">
          <source>Optimus implements some funciton to cluster Strings. We get graet inspiration from OpenRefine</source>
          <target state="translated">Optimus实现了一些函数来聚类Strings。我们从OpenRefine中得到了很大的启发。</target>
        </trans-unit>
        <trans-unit id="741a6fa4f68a91ec5d4eaf75967c8df131fcbc63" translate="yes" xml:space="preserve">
          <source>Optimus is the missing framework for cleaning and pre-processing data in a distributed fashion with pyspark.</source>
          <target state="translated">Optimus是pyspark以分布式方式对数据进行清洗和预处理的缺失框架。</target>
        </trans-unit>
        <trans-unit id="5de1be387bf1294d6b0e044a93d57ea7e355e271" translate="yes" xml:space="preserve">
          <source>Optimus is the missing framework to profile, clean, process and do ML in a distributed fashion using Apache Spark(PySpark).</source>
          <target state="translated">Optimus是使用Apache Spark(PySpark),以分布式的方式,对ML进行剖析、清理、处理和做ML的缺失框架。</target>
        </trans-unit>
        <trans-unit id="2391c08fc249856b1c54e1ed7752ff81621c2f54" translate="yes" xml:space="preserve">
          <source>Outliers</source>
          <target state="translated">离群值</target>
        </trans-unit>
        <trans-unit id="9c7f732592c60c73495ab8cfa2ee876c5d38a75b" translate="yes" xml:space="preserve">
          <source>Plots</source>
          <target state="translated">地块</target>
        </trans-unit>
        <trans-unit id="6daf9b127f4e79e79d38466b13f3d7eb1cf895de" translate="yes" xml:space="preserve">
          <source>Processing Dates</source>
          <target state="translated">处理日期</target>
        </trans-unit>
        <trans-unit id="a6bebceebc7168fb5c3c23eb88206fb5594f59d5" translate="yes" xml:space="preserve">
          <source>Profiler Speed</source>
          <target state="translated">剖析器速度</target>
        </trans-unit>
        <trans-unit id="3d5e552928a7cf576c5c54d1d0cee15508a078ab" translate="yes" xml:space="preserve">
          <source>Python&amp;gt;=3.6</source>
          <target state="translated">Python&amp;gt; = 3.6</target>
        </trans-unit>
        <trans-unit id="3a8fb719124ec75125cf20f89fb39b569e7f38ea" translate="yes" xml:space="preserve">
          <source>README.md corrections or redesigns.</source>
          <target state="translated">README.md修正或重新设计。</target>
        </trans-unit>
        <trans-unit id="517ee675246bfcfecf9d244c2c99d3de71305378" translate="yes" xml:space="preserve">
          <source>Remove the outliers using tukey</source>
          <target state="translated">使用tukey去除异常值</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="98a0b85afae07ada377061c63a7066485e66ebb5" translate="yes" xml:space="preserve">
          <source>Saving Data</source>
          <target state="translated">保存数据</target>
        </trans-unit>
        <trans-unit id="4a6821a915e3cc10e41229edf6d22998283c456b" translate="yes" xml:space="preserve">
          <source>So lets see the prediction compared with the actual label:</source>
          <target state="translated">所以让我们看看预测与实际标签的对比。</target>
        </trans-unit>
        <trans-unit id="b1574dadc6e954073386e178cfa6d1573b49b451" translate="yes" xml:space="preserve">
          <source>Spark has multiple ways to transform your data like rdd, Column Expression, udf and pandas udf. In Optimus we created the &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;apply_expr&lt;/code&gt; which handles all the implementation complexity.</source>
          <target state="translated">Spark有多种方法来转换您的数据，例如rdd，Column Expression，udf和pandas udf。在Optimus中，我们创建了 &lt;code&gt;apply()&lt;/code&gt; 和 &lt;code&gt;apply_expr&lt;/code&gt; ，它们处理了所有实现的复杂性。</target>
        </trans-unit>
        <trans-unit id="d8b7e7f32ed35848c9cc60c69053a5983fa5b6d7" translate="yes" xml:space="preserve">
          <source>Spelling or grammar fixes.</source>
          <target state="translated">拼写或语法修正。</target>
        </trans-unit>
        <trans-unit id="82cebd0cac45c28817fad5367f93a5bced93dca0" translate="yes" xml:space="preserve">
          <source>Sponsors</source>
          <target state="translated">贊助商</target>
        </trans-unit>
        <trans-unit id="4b2e320b95c30a01a67dc4b759deab8d882230a0" translate="yes" xml:space="preserve">
          <source>Start Optimus</source>
          <target state="translated">启动Optimus</target>
        </trans-unit>
        <trans-unit id="f392cfce3b6819a0d1e67ff0575fb76872a1d1df" translate="yes" xml:space="preserve">
          <source>The rf_model variable contains the Random Forest model for analysis.</source>
          <target state="translated">rf_model变量包含分析用的随机森林模型。</target>
        </trans-unit>
        <trans-unit id="1609b07c3671906dfb737f735df050f37e036e97" translate="yes" xml:space="preserve">
          <source>This will create a DataFrame with the predictions of the Random Forest model.</source>
          <target state="translated">这将创建一个带有随机森林模型预测的DataFrame。</target>
        </trans-unit>
        <trans-unit id="80244c81a374a8ac242c48a3f2feb46a072fb40f" translate="yes" xml:space="preserve">
          <source>To launch a live notebook server to test optimus using binder or Colab, click on one of the following badges:</source>
          <target state="translated">要启动一个实时笔记本服务器来使用binder或Colab测试optimus,请点击以下徽章之一。</target>
        </trans-unit>
        <trans-unit id="cc890e574a48085553a3c66f5e7b0b8905329e56" translate="yes" xml:space="preserve">
          <source>To return to HTML just:</source>
          <target state="translated">要返回到HTML只是。</target>
        </trans-unit>
        <trans-unit id="dc1087570abb61a7c2645a8f8aee8a3fc7f02982" translate="yes" xml:space="preserve">
          <source>Triaging GitHub issues -- especially determining whether an issue still persists or is reproducible.</source>
          <target state="translated">分流GitHub问题 --尤其是确定一个问题是否仍然存在或是否可以重现。</target>
        </trans-unit>
        <trans-unit id="47e5418187692bc55e287967965e23498ba6daf2" translate="yes" xml:space="preserve">
          <source>Using other plotting libraries</source>
          <target state="translated">使用其他绘图库</target>
        </trans-unit>
        <trans-unit id="0710dbbf09341848f24211b2bca05cdf5b4274b8" translate="yes" xml:space="preserve">
          <source>With .table() you have a beautifull way to show your data. You have extra information like column number, column data type and marked white spaces</source>
          <target state="translated">使用.table()你有一个漂亮的方式来显示你的数据。你有额外的信息,如列号,列数据类型和标记的空白。</target>
        </trans-unit>
        <trans-unit id="22e0ffabd067ed0d7f66a8e811a63e8aea610b5a" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;relative_error&lt;/strong&gt; and &lt;strong&gt;approx_count&lt;/strong&gt; params you can control how some operations are caculated so you can speedup the profiling in case is needed.</source>
          <target state="translated">使用&lt;strong&gt;relative_error&lt;/strong&gt;和&lt;strong&gt;roximate_count&lt;/strong&gt;参数，您可以控制计算某些操作的方式，以便在需要时可以&lt;strong&gt;加快&lt;/strong&gt;分析速度。</target>
        </trans-unit>
        <trans-unit id="49936fd43ebe6f75a550101929b0cc757d457f4e" translate="yes" xml:space="preserve">
          <source>With Optimus you can handle how the output column from a transformation in going to be handled.</source>
          <target state="translated">通过Optimus,你可以处理如何处理一个转换的输出列。</target>
        </trans-unit>
        <trans-unit id="f55abcf262823440a1dc4af596c98253fd4cc28e" translate="yes" xml:space="preserve">
          <source>With optimus is easy to loading jars, packages and repos. You can init optimus/spark like</source>
          <target state="translated">有了optimus,加载jars、包和repos就变得很容易了。你可以像这样启动optimus/spark</target>
        </trans-unit>
        <trans-unit id="3ccddab032707039d30ed3327be0108ba91269a1" translate="yes" xml:space="preserve">
          <source>You also can use an already created Spark session:</source>
          <target state="translated">你也可以使用已经创建的Spark会话。</target>
        </trans-unit>
        <trans-unit id="882e46634ed62075c97171db09004fcbe03a5990" translate="yes" xml:space="preserve">
          <source>You can also use z_score, modified_z_score or mad</source>
          <target state="translated">你也可以使用z_score、modified_z_score或mad。</target>
        </trans-unit>
        <trans-unit id="06bb78db3d29fc8fe670096f1cee9381f788b9a5" translate="yes" xml:space="preserve">
          <source>You can change the table output back to ascii if you wish</source>
          <target state="translated">如果你愿意,你可以把表格输出改回ascii格式。</target>
        </trans-unit>
        <trans-unit id="419fea641f757fb8fcb9827d945874bba97c6714" translate="yes" xml:space="preserve">
          <source>You can connect to any external API to enrich your data using Optimus. Optimus uses MongoDB to download the data and then merge it with the Spark Dataframe. You need to install MongoDB</source>
          <target state="translated">你可以连接到任何外部API来使用Optimus丰富你的数据。Optimus使用MongoDB下载数据,然后将其与Spark Dataframe合并。您需要安装MongoDB</target>
        </trans-unit>
        <trans-unit id="5aa8511f4fc3788fadeb7cb558d000ed370beae8" translate="yes" xml:space="preserve">
          <source>You can go to the 10 minutes to Optimus &lt;a href=&quot;https://github.com/ironmussa/Optimus/blob/master/examples/10_min_from_spark_to_pandas_with_optimus.ipynb&quot;&gt;notebook&lt;/a&gt; where you can find the basic to start working.</source>
          <target state="translated">您可以转到Optimus&lt;a href=&quot;https://github.com/ironmussa/Optimus/blob/master/examples/10_min_from_spark_to_pandas_with_optimus.ipynb&quot;&gt;笔记本电脑&lt;/a&gt;十分钟，在那里您可以找到开始工作的基本方法。</target>
        </trans-unit>
        <trans-unit id="87efdfdf5b9ad3c37371f183937665401245fd4f" translate="yes" xml:space="preserve">
          <source>You can output to the notebook or as an image</source>
          <target state="translated">可以输出到笔记本上,也可以输出为图像。</target>
        </trans-unit>
        <trans-unit id="d075e4329646b313f2d5700676201fe1e7c0a4cc" translate="yes" xml:space="preserve">
          <source>You transform this</source>
          <target state="translated">你把它变成</target>
        </trans-unit>
        <trans-unit id="9f7c47dbf6344c8e10018f45814af56dd70d87d6" translate="yes" xml:space="preserve">
          <source>[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;Become a backer&lt;/a&gt;] and get your image on our README on Github with a link to your site.</source>
          <target state="translated">[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;成为支持者&lt;/a&gt;]，并通过指向您网站的链接，在Github上的自述文件中获取您的图片。</target>
        </trans-unit>
        <trans-unit id="10bb1eb46cdc42726b6a25926b04ff3ea0e8eaf7" translate="yes" xml:space="preserve">
          <source>[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;Become a sponsor&lt;/a&gt;] and get your image on our README on Github with a link to your site.</source>
          <target state="translated">[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;成为赞助商&lt;/a&gt;]，并在我们的Github自述文件中获取您的图片，并提供指向您网站的链接。</target>
        </trans-unit>
        <trans-unit id="ceb250e61e71c8fad372f47251f5fd3302e96b5b" translate="yes" xml:space="preserve">
          <source>approx_count: Use &lt;code&gt;approx_count_distinct&lt;/code&gt; or &lt;code&gt;countDistinct&lt;/code&gt;. &lt;code&gt;approx_count_distinct&lt;/code&gt; is faster</source>
          <target state="translated">roximate_count：使用 &lt;code&gt;approx_count_distinct&lt;/code&gt; 或 &lt;code&gt;countDistinct&lt;/code&gt; 。 &lt;code&gt;approx_count_distinct&lt;/code&gt; 更快</target>
        </trans-unit>
        <trans-unit id="0941a7de527ef8d70925bf8e132d2d331c9b9ca7" translate="yes" xml:space="preserve">
          <source>including:</source>
          <target state="translated">包括:</target>
        </trans-unit>
        <trans-unit id="63e989a6f377267dc402891b3cade81ae30309dc" translate="yes" xml:space="preserve">
          <source>relative_error: Relative Error for quantile discretizer calculation. 1 is Faster, 0 Slower</source>
          <target state="translated">relative_error:量子化离散器计算的相对误差。1为更快,0为更慢。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
