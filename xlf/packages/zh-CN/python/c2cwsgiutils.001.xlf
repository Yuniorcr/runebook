<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/c2cwsgiutils/">
    <body>
      <group id="c2cwsgiutils">
        <trans-unit id="2bfd6a34d6c4ab81741d1fb5ffb5dd9a75a36b95" translate="yes" xml:space="preserve">
          <source>&amp;gt;=2: Use those at your convenience. Pingdom and CO are usually setup at max_level=100. So stay below.</source>
          <target state="translated">&amp;gt; = 2：请在方便时使用它们。Pingdom和CO通常设置为max_level = 100。所以留在下面。</target>
        </trans-unit>
        <trans-unit id="22a9564671d232956d2228c4db0aab2bc79146e1" translate="yes" xml:space="preserve">
          <source>0: Don't add checks at this level. This max_level is used for doing a simple ping.</source>
          <target state="translated">0:不要在这个级别添加检查。这个max_level用于做一个简单的ping。</target>
        </trans-unit>
        <trans-unit id="ab89f87c53a61b03676e3e7cc524e63c92ea1f7e" translate="yes" xml:space="preserve">
          <source>1: Checks for anything vital for the usefulness of the service (DB, redis, ...). This is the max_level set
by default and used by load balancers to determine if the service is alive.</source>
          <target state="translated">1:检查任何对服务的有用性至关重要的东西(DB,redis,...)。这是默认设置的最大级别,负载均衡器用来判断服务是否还活着。</target>
        </trans-unit>
        <trans-unit id="70695327732a7078a725de3b5912fe35e6d4f111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C2C_BROADCAST_PREFIX&lt;/code&gt; (&lt;code&gt;c2c.broadcast_prefix&lt;/code&gt;): The prefix to add to the channels being used (must be
different for 2 different services)</source>
          <target state="translated">&lt;code&gt;C2C_BROADCAST_PREFIX&lt;/code&gt; （ &lt;code&gt;c2c.broadcast_prefix&lt;/code&gt; ）：要添加到正在使用的通道的前缀（对于2种不同的服务，必须不同）</target>
        </trans-unit>
        <trans-unit id="4603ac292f4f08b823894c2b5d9ac9dfd55bbd3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C2C_REDIS_URL&lt;/code&gt; (&lt;code&gt;c2c.redis_url&lt;/code&gt;): The URL to the Redis instance to use</source>
          <target state="translated">&lt;code&gt;C2C_REDIS_URL&lt;/code&gt; （ &lt;code&gt;c2c.redis_url&lt;/code&gt; ）：要使用的Redis实例的URL</target>
        </trans-unit>
        <trans-unit id="3ab8e052462b33793cad9f2a0383594f6bbfaabb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GIT_HASH&lt;/code&gt; (&lt;code&gt;c2c.git_hash&lt;/code&gt;): will be used for the release</source>
          <target state="translated">&lt;code&gt;GIT_HASH&lt;/code&gt; （ &lt;code&gt;c2c.git_hash&lt;/code&gt; ）：将用于发布</target>
        </trans-unit>
        <trans-unit id="3b8bfecd024f465143fee92af08b886fb6643547" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENTRY_CLIENT_ENVIRONMENT&lt;/code&gt;: the environment (dev, int, prod, ...)</source>
          <target state="translated">&lt;code&gt;SENTRY_CLIENT_ENVIRONMENT&lt;/code&gt; ：环境（dev，int，prod等）</target>
        </trans-unit>
        <trans-unit id="615b3e3a04ddcbb5e80805b572d2049352afc24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENTRY_CLIENT_IGNORE_EXCEPTIONS&lt;/code&gt;: list (coma separated) of exceptions to ignore (defaults to SystemExit)</source>
          <target state="translated">&lt;code&gt;SENTRY_CLIENT_IGNORE_EXCEPTIONS&lt;/code&gt; ：要忽略的异常列表（以逗号分隔）（默认为SystemExit）</target>
        </trans-unit>
        <trans-unit id="4fa1fbb6e8e1090129ced48030a3d6dee921fafe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENTRY_CLIENT_RELEASE&lt;/code&gt;: If not equal to &quot;latest&quot;, will be taken for the release instead of the GIT_HASH</source>
          <target state="translated">&lt;code&gt;SENTRY_CLIENT_RELEASE&lt;/code&gt; ：如果不等于&amp;ldquo; latest&amp;rdquo;，则将使用该版本代替GIT_HASH</target>
        </trans-unit>
        <trans-unit id="6938b224a04129de478961d224ce193b75760347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENTRY_EXCLUDES&lt;/code&gt; (&lt;code&gt;c2c.sentry.excludes&lt;/code&gt;): list of loggers (colon separated, without spaces) to exclude for sentry</source>
          <target state="translated">&lt;code&gt;SENTRY_EXCLUDES&lt;/code&gt; （ &lt;code&gt;c2c.sentry.excludes&lt;/code&gt; ）：记录程序列表（用冒号分隔，没有空格），不包括哨兵</target>
        </trans-unit>
        <trans-unit id="84d5757c5c20b4ebb5834d9a140b28cf68e26375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENTRY_LEVEL&lt;/code&gt;: starting from what logging level to send events to Sentry (defaults to ERROR)</source>
          <target state="translated">&lt;code&gt;SENTRY_LEVEL&lt;/code&gt; ：从将事件发送到Sentry的日志记录级别开始（默认为ERROR）</target>
        </trans-unit>
        <trans-unit id="f8f09001df29074a1c50b390fdd9e4101046aeae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SENTRY_TAG_...&lt;/code&gt;: to add other custom tags</source>
          <target state="translated">&lt;code&gt;SENTRY_TAG_...&lt;/code&gt; ：添加其他自定义标签</target>
        </trans-unit>
        <trans-unit id="90a781d8c222a21aae6776cd6235886db85a6cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c2cwsgiutils.pyramid_logging.JsonLogHandler&lt;/code&gt;: to output (on stdout or stderr) JSON formatted logs.</source>
          <target state="translated">&lt;code&gt;c2cwsgiutils.pyramid_logging.JsonLogHandler&lt;/code&gt; ：输出（在stdout或stderr上）JSON格式的日志。</target>
        </trans-unit>
        <trans-unit id="f41c0c258ca96ac2b0a377389553a607c047b6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c2cwsgiutils.pyramid_logging.PyramidCeeSysLogHandler&lt;/code&gt;: to send @cee formatted logs to syslog through UDP.</source>
          <target state="translated">&lt;code&gt;c2cwsgiutils.pyramid_logging.PyramidCeeSysLogHandler&lt;/code&gt; ：通过UDP将@cee格式的日志发送到syslog。</target>
        </trans-unit>
        <trans-unit id="598d42ec29dd2d95d93a4d79e75e6c6d345d4e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fast_json&lt;/code&gt;: a faster JSON renderer
is tuned differently.</source>
          <target state="translated">&lt;code&gt;fast_json&lt;/code&gt; ：更快的JSON渲染器已进行了不同的调整。</target>
        </trans-unit>
        <trans-unit id="00fe2a962203c78948c0b191c6541aefac28190b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;json&lt;/code&gt;: the normal JSON renderer (default)</source>
          <target state="translated">&lt;code&gt;json&lt;/code&gt; ：普通的JSON渲染器（默认）</target>
        </trans-unit>
        <trans-unit id="52ff803386697a8fe6f20e10d7750b11beedec02" translate="yes" xml:space="preserve">
          <source>A class that can be used from a py.test fixture to control a composition</source>
          <target state="translated">一个可以在py.test fixture中使用的类,用于控制合成物。</target>
        </trans-unit>
        <trans-unit id="40b2e3061dffd63c16b43f38987da6cab7e7125c" translate="yes" xml:space="preserve">
          <source>A class that can be used from a py.text fixture to test a REST API</source>
          <target state="translated">一个可以从py.text fixture中用来测试REST API的类。</target>
        </trans-unit>
        <trans-unit id="197461a66399edc773ba123e91f293c8d2e1b1fe" translate="yes" xml:space="preserve">
          <source>A command is provided that can generate Doxygen graphs of an SQLAlchemy ORM model.
See &lt;a href=&quot;acceptance_tests/app/models_graph.py&quot;&gt;acceptance_tests/app/models_graph.py&lt;/a&gt; how it's used.</source>
          <target state="translated">提供了可以生成SQLAlchemy ORM模型的Doxygen图的命令。请参阅&lt;a href=&quot;acceptance_tests/app/models_graph.py&quot;&gt;accept_tests / app / models_graph.py&lt;/a&gt;的用法。</target>
        </trans-unit>
        <trans-unit id="bb9c786e0af9d6f8307ce53330e6db5280d8c3ad" translate="yes" xml:space="preserve">
          <source>A command line (&lt;code&gt;c2cwsgiutils-run&lt;/code&gt;) is provided to start an HTTP server (gunicorn) with a WSGI application.
By default, it will load the application configured in &lt;code&gt;/app/production.ini&lt;/code&gt;, but you can change that with
the &lt;code&gt;C2CWSGIUTILS_CONFIG&lt;/code&gt; environment variable. All the environment variables are usable in the configuration
file using stuff like &lt;code&gt;%(ENV_NAME)s&lt;/code&gt;.</source>
          <target state="translated">提供了命令行（ &lt;code&gt;c2cwsgiutils-run&lt;/code&gt; ）以使用WSGI应用程序启动HTTP服务器（gunicorn）。默认情况下，它将加载 &lt;code&gt;/app/production.ini&lt;/code&gt; 中配置的应用程序，但是您可以使用 &lt;code&gt;C2CWSGIUTILS_CONFIG&lt;/code&gt; 环境变量对其进行更改。所有环境变量都可以使用 &lt;code&gt;%(ENV_NAME)s&lt;/code&gt; 之类的东西在配置文件中使用。</target>
        </trans-unit>
        <trans-unit id="1a56c4b5ebb03d20f437918f26cc37c49b01270b" translate="yes" xml:space="preserve">
          <source>A cornice service drop in replacement for setting up CORS</source>
          <target state="translated">设置CORS的突起服务掉落替换。</target>
        </trans-unit>
        <trans-unit id="620b607b0927e86dc82cd6c23e3de2b1245b1a2c" translate="yes" xml:space="preserve">
          <source>A custom loader is provided to run pyramid scripts against configuration files containing environment variables:</source>
          <target state="translated">我们提供了一个自定义的加载器,用于针对包含环境变量的配置文件运行金字塔脚本。</target>
        </trans-unit>
        <trans-unit id="c97337a18b165d30ea289d76e5aca51dad107a25" translate="yes" xml:space="preserve">
          <source>A few REST APIs are added and can be seen with this URL:
&lt;code&gt;{C2C_BASE_PATH}&lt;/code&gt;.</source>
          <target state="translated">添加了一些REST API，并可以通过以下网址查看： &lt;code&gt;{C2C_BASE_PATH}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="846ea003a96f78f751cc565f5d58fad8d9a50e9f" translate="yes" xml:space="preserve">
          <source>A few other environment variables can be used to tune the info sent with each report:</source>
          <target state="translated">其他一些环境变量可以用来调整每个报告的信息发送。</target>
        </trans-unit>
        <trans-unit id="f0ab89bc52ce841594c8177ee5c7ead458ec074c" translate="yes" xml:space="preserve">
          <source>A filter is automatically installed to handle the HTTP headers set by common proxies and have correct values
in the request object (&lt;code&gt;request.client_addr&lt;/code&gt;, for example). This filter is equivalent to what the
&lt;code&gt;PasteDeploy#prefix&lt;/code&gt; (minus the prefix part) does, but supports newer headers as well (&lt;code&gt;Forwarded&lt;/code&gt;).
If you need to prefix your routes, you can use the &lt;code&gt;route_prefix&lt;/code&gt; parameter of the &lt;code&gt;Configurator&lt;/code&gt; constructor.</source>
          <target state="translated">将自动安装一个过滤器来处理常见代理设置的HTTP标头，并在请求对象中具有正确的值（例如， &lt;code&gt;request.client_addr&lt;/code&gt; ）。此过滤器等效于 &lt;code&gt;PasteDeploy#prefix&lt;/code&gt; （减去前缀部分）的功能，但也支持更新的标头（ &lt;code&gt;Forwarded&lt;/code&gt; ）。如果需要为路由添加前缀，则可以使用 &lt;code&gt;Configurator&lt;/code&gt; 构造函数的 &lt;code&gt;route_prefix&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="7770f590d0aa544dd8644c54d752b7c3750b120c" translate="yes" xml:space="preserve">
          <source>A framework for implementing a health_check service</source>
          <target state="translated">实现健康检查服务的框架</target>
        </trans-unit>
        <trans-unit id="c08259a8395554d5eb8d6bc5c48cd7e7aa91dcb9" translate="yes" xml:space="preserve">
          <source>A view to get the version information about the application and the installed packages</source>
          <target state="translated">获取应用程序和安装包的版本信息的视图。</target>
        </trans-unit>
        <trans-unit id="b152faa17a593ac4e700c8adb9985ae7ccfcfaa5" translate="yes" xml:space="preserve">
          <source>Allow to use a master/slave PostgresQL configuration</source>
          <target state="translated">允许使用主/从PostgresQL配置。</target>
        </trans-unit>
        <trans-unit id="eebf7a46853a4dda287d12a347297e08596c8eff" translate="yes" xml:space="preserve">
          <source>Also provide tools for writing acceptance tests:</source>
          <target state="translated">同时提供编写验收测试的工具。</target>
        </trans-unit>
        <trans-unit id="fa5436372695949c495e22f062c7464aa12591f8" translate="yes" xml:space="preserve">
          <source>An optional view to change runtime the log levels</source>
          <target state="translated">一个可选的视图,用于更改运行时的日志级别。</target>
        </trans-unit>
        <trans-unit id="9f68b18ed5d3984501874bfee865da603b6cd71f" translate="yes" xml:space="preserve">
          <source>And your code that initializes the DB connection must look like that:</source>
          <target state="translated">而你初始化DB连接的代码必须是这样的。</target>
        </trans-unit>
        <trans-unit id="3f746eff4bf45fb46ca8106fa74f17cab4a83472" translate="yes" xml:space="preserve">
          <source>As an example on how to use it in an application provided by a Docker image, you can look at the
test application in &lt;a href=&quot;acceptance_tests/app&quot;&gt;acceptance_tests/app&lt;/a&gt;.
To see how to test such an application, look at &lt;a href=&quot;acceptance_tests/tests&quot;&gt;acceptance_tests/tests&lt;/a&gt;.</source>
          <target state="translated">作为有关如何在Docker映像提供的应用程序中使用它的示例，您可以在&lt;a href=&quot;acceptance_tests/app&quot;&gt;accepting_tests / app中&lt;/a&gt;查看测试应用程序。要查看如何测试这样的应用程序，请查看&lt;a href=&quot;acceptance_tests/tests&quot;&gt;accepting_tests / tests&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd75ac9a8c8b8a4f270d2f2951f62d12404d620d" translate="yes" xml:space="preserve">
          <source>Both pretty prints the rendered JSON. While this adds significant amount of whitespace, the difference in
bytes transmitted on the network is negligible thanks to gzip compression.</source>
          <target state="translated">两者都漂亮地打印了渲染的JSON。虽然这增加了大量的空白,但由于gzip压缩,在网络上传输的字节数差异可以忽略不计。</target>
        </trans-unit>
        <trans-unit id="77ca3fc6500edac54d325df1bbb7ac8e363c54b5" translate="yes" xml:space="preserve">
          <source>Broadcast</source>
          <target state="translated">广播</target>
        </trans-unit>
        <trans-unit id="42fca7b430348fd046110efbac447cefb6a2227d" translate="yes" xml:space="preserve">
          <source>By default, c2cwsgiutils will install exception handling views that will catch any exception raised by the
application views and will transform it into a JSON response with a HTTP status corresponding to the error.</source>
          <target state="translated">默认情况下,c2cwsgiutils将安装异常处理视图,这些视图将捕获任何由应用程序视图引发的异常,并将其转化为JSON响应,并带有与错误对应的HTTP状态。</target>
        </trans-unit>
        <trans-unit id="13844228ea43240b1c7b889f66ff60a2fb8a60a6" translate="yes" xml:space="preserve">
          <source>CI</source>
          <target state="translated">CI</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="6729a2af207e43ec56be1fca70893807a90ee4d4" translate="yes" xml:space="preserve">
          <source>Camptocamp WSGI utilities</source>
          <target state="translated">Camptocamp WSGI公用事业</target>
        </trans-unit>
        <trans-unit id="d789aaabcec2545ddf292bb0ece53e72f8216ae3" translate="yes" xml:space="preserve">
          <source>Change the the version in &lt;a href=&quot;setup.py&quot;&gt;setup.py&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;setup.py&quot;&gt;setup.py中&lt;/a&gt;更改版本。</target>
        </trans-unit>
        <trans-unit id="433800a74d5dc73933baa5f13bde9cf33c496bbf" translate="yes" xml:space="preserve">
          <source>Commit and push to master.</source>
          <target state="translated">承诺和推动主。</target>
        </trans-unit>
        <trans-unit id="2a22b6cd9e671e381ace59d487045e9f3dd47d80" translate="yes" xml:space="preserve">
          <source>Common utilities for Camptocamp WSGI applications</source>
          <target state="translated">Camptocamp WSGI应用的常用工具。</target>
        </trans-unit>
        <trans-unit id="7b0efd0bac556e0dd198633ea4e41ec600ebfe0a" translate="yes" xml:space="preserve">
          <source>DB sessions</source>
          <target state="translated">数据库会话</target>
        </trans-unit>
        <trans-unit id="d34b7229a44fbca0da7bd1880fbd09932d5852e9" translate="yes" xml:space="preserve">
          <source>Database maintenance</source>
          <target state="translated">数据库维护</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">调试</target>
        </trans-unit>
        <trans-unit id="d649ef3c18fa22fc0db437db95416a9b8867e88d" translate="yes" xml:space="preserve">
          <source>Developer info</source>
          <target state="translated">开发商信息</target>
        </trans-unit>
        <trans-unit id="83e67c1928bed48517a685043c5d1984b7f3de20" translate="yes" xml:space="preserve">
          <source>Don't enable that on a busy production system. It will kill your performances.</source>
          <target state="translated">不要在繁忙的生产系统中启用该功能。它会扼杀你的性能。</target>
        </trans-unit>
        <trans-unit id="e05ef188ab4f04c18dcc38bf6b36ed3a3ffdf8a0" translate="yes" xml:space="preserve">
          <source>Error catching views will be put in place to return errors as JSON.</source>
          <target state="translated">捕捉错误的视图将被放置在以JSON形式返回错误的地方。</target>
        </trans-unit>
        <trans-unit id="f0dcdbcc9fc280f0d6cf93e04a4eae2ab7c09b59" translate="yes" xml:space="preserve">
          <source>Error handlers to send JSON messages to the client in case of error</source>
          <target state="translated">错误处理程序,在发生错误时向客户端发送JSON信息。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="translated">异常处理</target>
        </trans-unit>
        <trans-unit id="c4f95e97feb4a2f525792302a602d03578975556" translate="yes" xml:space="preserve">
          <source>General config</source>
          <target state="translated">一般配置</target>
        </trans-unit>
        <trans-unit id="87398e24ea58e8cafa77352da02409bcf395978d" translate="yes" xml:space="preserve">
          <source>Health checks</source>
          <target state="translated">健康检查</target>
        </trans-unit>
        <trans-unit id="126b8cc22aca54456669d889a838cf54c9674afb" translate="yes" xml:space="preserve">
          <source>If enabled, for each &lt;code&gt;SELECT&lt;/code&gt; query sent by SQLAlchemy, another query it done with &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;
prepended to it. The results are sent to the &lt;code&gt;c2cwsgiutils.sql_profiler&lt;/code&gt; logger.</source>
          <target state="translated">如果启用，则对于SQLAlchemy发送的每个 &lt;code&gt;SELECT&lt;/code&gt; 查询，都会在其 前面加上 &lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt; 完成另一个查询。结果将发送到 &lt;code&gt;c2cwsgiutils.sql_profiler&lt;/code&gt; 记录器。</target>
        </trans-unit>
        <trans-unit id="479b6d4353a51a5518041307b8fb7bef197e8d3f" translate="yes" xml:space="preserve">
          <source>If enabled, some metrics are automatically generated:</source>
          <target state="translated">如果启用,一些指标会自动生成。</target>
        </trans-unit>
        <trans-unit id="4987a434fb17ece7de226809fb6acb4aab39df2b" translate="yes" xml:space="preserve">
          <source>If not configured, only the process receiving the request is impacted.</source>
          <target state="translated">如果没有配置,只有接收请求的进程会受到影响。</target>
        </trans-unit>
        <trans-unit id="a8d85c4b59a46f35ef7f9dd40c4ddcc8aecfb341" translate="yes" xml:space="preserve">
          <source>If redis is configured and the version information is available, check that the version matches
accross all instances.</source>
          <target state="translated">如果配置了redis,并且版本信息可用,检查所有实例的版本是否匹配。</target>
        </trans-unit>
        <trans-unit id="f429fdaddd35b76e9593e63ec9827b451d05e959" translate="yes" xml:space="preserve">
          <source>If redis is configured, check that redis is reachable.</source>
          <target state="translated">如果配置了redis,请检查redis是否可以到达。</target>
        </trans-unit>
        <trans-unit id="b0a271b5f5192ec2a4fcdaebab181c38b2581c5e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/app/versions.json&lt;/code&gt; exists, a view is added (&lt;code&gt;{C2C_BASE_PATH}/versions.json&lt;/code&gt;) to query the current
version of a app. This file is generated by calling the &lt;code&gt;c2cwsgiutils-genversion [$GIT_TAG] $GIT_HASH&lt;/code&gt;
command line. Usually done in the &lt;a href=&quot;acceptance_tests/app/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt; of the WSGI application.</source>
          <target state="translated">如果 &lt;code&gt;/app/versions.json&lt;/code&gt; 存在，则会添加一个视图（ &lt;code&gt;{C2C_BASE_PATH}/versions.json&lt;/code&gt; ）以查询应用程序的当前版本。通过调用 &lt;code&gt;c2cwsgiutils-genversion [$GIT_TAG] $GIT_HASH&lt;/code&gt; 命令行来生成此文件。通常在WSGI应用程序的&lt;a href=&quot;acceptance_tests/app/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt;中完成。</target>
        </trans-unit>
        <trans-unit id="38567db599e961b8b12abef3906b3a3ec0f78a17" translate="yes" xml:space="preserve">
          <source>If you need an image with a smaller foot print, use the tags prefixed with &lt;code&gt;-light&lt;/code&gt;. Those are without
gdal and without the build tools.</source>
          <target state="translated">如果您需要 &lt;code&gt;-light&lt;/code&gt; 较小的图像，请使用带有-light前缀的标签。那些没有gdal，也没有构建工具。</target>
        </trans-unit>
        <trans-unit id="335059e338a0543b0cb73b46d5fc442a92e309a7" translate="yes" xml:space="preserve">
          <source>If you set the &lt;code&gt;C2C_PROFILER_PATH&lt;/code&gt; environment variable, you'll enable a profiler that will be available at
the given path. Due to limitations in the library used, the path must be at the root of the application (it
cannot contain slashes). You can also define the &lt;code&gt;C2C_PROFILER_MODULES&lt;/code&gt;, a space separated list of Python
packages to have a pie chart of how much time is spent in the given packages.</source>
          <target state="translated">如果设置 &lt;code&gt;C2C_PROFILER_PATH&lt;/code&gt; 环境变量，则将启用在给定路径可用的探查器。由于所用库的限制，该路径必须位于应用程序的根目录（不能包含斜杠）。您还可以定义 &lt;code&gt;C2C_PROFILER_MODULES&lt;/code&gt; ，这是一个用空格分隔的Python软件包列表，以饼图显示给定软件包所花的时间。</target>
        </trans-unit>
        <trans-unit id="7aae6512bb658a18649e2a92a834d3a4781d624a" translate="yes" xml:space="preserve">
          <source>If you want to use pyramid_debugtoolbar, you need to disable exception handling and configure it like that:</source>
          <target state="translated">如果你想使用pyramid_debugtoolbar,你需要禁用异常处理并进行这样的配置。</target>
        </trans-unit>
        <trans-unit id="d6089230edd4805d7667d73252e39029d8e0864a" translate="yes" xml:space="preserve">
          <source>If you want to use this feature, you must have the &lt;code&gt;linesman&lt;/code&gt; package installed.</source>
          <target state="translated">如果要使用此功能，则必须安装 &lt;code&gt;linesman&lt;/code&gt; 软件包。</target>
        </trans-unit>
        <trans-unit id="1b446a3ff5dd4ef04ce63cb4eab5de7233cf2870" translate="yes" xml:space="preserve">
          <source>In JSON logging formats, a &lt;code&gt;request_id&lt;/code&gt; field is automatically added.</source>
          <target state="translated">在JSON日志记录格式中，会自动添加 &lt;code&gt;request_id&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="62dadeb38d32abb213b6a24899ee01dbb6eb858a" translate="yes" xml:space="preserve">
          <source>In development mode (&lt;code&gt;DEVELOPMENT=1&lt;/code&gt;), all the details (SQL statement, stacktrace, ...) are sent to the
client. In production mode, you can still get them by sending the secret defined in &lt;code&gt;C2C_SECRET&lt;/code&gt; in the query.</source>
          <target state="translated">在开发模式（ &lt;code&gt;DEVELOPMENT=1&lt;/code&gt; ）中，所有详细信息（SQL语句，stacktrace等）都发送到客户端。在生产模式下，您仍然可以通过发送查询中 &lt;code&gt;C2C_SECRET&lt;/code&gt; 中定义的密码来获取它们。</target>
        </trans-unit>
        <trans-unit id="8e70c8e38b119b00f0a802459292f9132df19443" translate="yes" xml:space="preserve">
          <source>In general, configuration can be done both with environment variables (taken first) or with entries in the
&lt;code&gt;production.ini&lt;/code&gt; file.</source>
          <target state="translated">通常，可以使用环境变量（首先获取）或 &lt;code&gt;production.ini&lt;/code&gt; 文件中的条目进行配置 。</target>
        </trans-unit>
        <trans-unit id="54b61179e1209b3665d92aa93f77d558e58d544e" translate="yes" xml:space="preserve">
          <source>In order to follow the logs generated by a request across all the services (think separate processes),
c2cwsgiutils tries to flag averything with a request ID. This field can come from the input as request headers
(&lt;code&gt;X-Request-ID&lt;/code&gt;, &lt;code&gt;X-Correlation-ID&lt;/code&gt;, &lt;code&gt;Request-ID&lt;/code&gt; or &lt;code&gt;X-Varnish&lt;/code&gt;) or will default to a UUID. You can add an
additional request header as source for that by defining the &lt;code&gt;C2C_REQUEST_ID_HEADER&lt;/code&gt; environment variable
(&lt;code&gt;c2c.request_id_header&lt;/code&gt;).</source>
          <target state="translated">为了跟踪请求在所有服务上生成的日志（请考虑单独的进程），c2cwsgiutils尝试使用请求ID标记所有内容。该字段可以来自输入作为请求标头（ &lt;code&gt;X-Request-ID&lt;/code&gt; ， &lt;code&gt;X-Correlation-ID&lt;/code&gt; ， &lt;code&gt;Request-ID&lt;/code&gt; 或 &lt;code&gt;X-Varnish&lt;/code&gt; ），或者默认为UUID。您可以通过定义 &lt;code&gt;C2C_REQUEST_ID_HEADER&lt;/code&gt; 环境变量（ &lt;code&gt;c2c.request_id_header&lt;/code&gt; ）将其他请求标头添加为源。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="a3b355284f30f05d37e5865916f80d8f31361148" translate="yes" xml:space="preserve">
          <source>It is possible to automatically reload gunicorn as soon as you change your local python code. For this you need
to have a specially tweaked &lt;code&gt;docker-compose.yml&lt;/code&gt;:</source>
          <target state="translated">更改本地python代码后，可以自动重新加载gunicorn。为此，您需要特别调整 &lt;code&gt;docker-compose.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cb152d65202ce93c22270d18254d8f8b20e43228" translate="yes" xml:space="preserve">
          <source>It will only add a timer event in case of success. If you want to measure both success and failures, do that:</source>
          <target state="translated">它只会在成功的情况下添加一个定时器事件。如果你想同时衡量成功和失败,就这样做。</target>
        </trans-unit>
        <trans-unit id="c2d45b6d22c769d2d0d201002cdeb96e9e90c4c6" translate="yes" xml:space="preserve">
          <source>JSON pretty print</source>
          <target state="translated">JSON漂亮打印</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">伐木</target>
        </trans-unit>
        <trans-unit id="8837132b70012545bc333fce0fc89b1128773667" translate="yes" xml:space="preserve">
          <source>Logging handler for CEE/UDP logs</source>
          <target state="translated">CEE/UDP日志的日志处理程序。</target>
        </trans-unit>
        <trans-unit id="53665c23afb88afba6fff264d74bfdf211812578" translate="yes" xml:space="preserve">
          <source>Look at the &lt;code&gt;c2cwsgiutils-stats-db&lt;/code&gt; utility if you want to generate statistics (gauges) about the
row counts.</source>
          <target state="translated">如果要生成有关行计数的统计信息（量规），请查看 &lt;code&gt;c2cwsgiutils-stats-db&lt;/code&gt; 实用程序。</target>
        </trans-unit>
        <trans-unit id="0606daeb324a2528fa87bdde24102b383e2cdd2d" translate="yes" xml:space="preserve">
          <source>Look at the documentation of the &lt;code&gt;c2cwsgiutils.health_check.HealthCheck&lt;/code&gt; class for more information.</source>
          <target state="translated">请参阅 &lt;code&gt;c2cwsgiutils.health_check.HealthCheck&lt;/code&gt; 类的文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="72cb6dc45fb7b74ae0117845ee1faf84a1b9a851" translate="yes" xml:space="preserve">
          <source>Look at the logging configuration part of
&lt;a href=&quot;acceptance_tests/app/production.ini&quot;&gt;acceptance_tests/app/production.ini&lt;/a&gt; for a usage example.</source>
          <target state="translated">查看&lt;a href=&quot;acceptance_tests/app/production.ini&quot;&gt;accept_tests / app / production.ini&lt;/a&gt;的日志记录配置部分以 获取用法示例。</target>
        </trans-unit>
        <trans-unit id="6bc8cda985b21ddefd413e5875925ec9adb272f1" translate="yes" xml:space="preserve">
          <source>Make sure you are strict with the version numbers:</source>
          <target state="translated">确保你严格遵守版本号。</target>
        </trans-unit>
        <trans-unit id="ddf6a1f0ce8cfffc5cd8f14230ab1fecd0f34953" translate="yes" xml:space="preserve">
          <source>Metrics</source>
          <target state="translated">衡量标准</target>
        </trans-unit>
        <trans-unit id="9e9388a7cdc5485881892a00b41fabbf152e9856" translate="yes" xml:space="preserve">
          <source>Or (preferred) as a base Docker image:
&lt;a href=&quot;https://hub.docker.com/r/camptocamp/c2cwsgiutils/&quot;&gt;camptocamp/c2cwsgiutils:3&lt;/a&gt;</source>
          <target state="translated">或（首选）作为基本的Docker映像： &lt;a href=&quot;https://hub.docker.com/r/camptocamp/c2cwsgiutils/&quot;&gt;camptocamp / c2cwsgiutils：3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30113c735f4885a8953390cde7b7bebdc6ddfca4" translate="yes" xml:space="preserve">
          <source>Other functions exists to generate metrics. Look at the &lt;code&gt;c2cwsgiutils.stats&lt;/code&gt; module.</source>
          <target state="translated">存在其他功能来生成指标。查看 &lt;code&gt;c2cwsgiutils.stats&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="31da1961bbfc7c4ddeb384d30515cc288fec6568" translate="yes" xml:space="preserve">
          <source>Profiler</source>
          <target state="translated">剖析仪</target>
        </trans-unit>
        <trans-unit id="f02e559d3a1a7a22c409770a05c6c9d8c45be003" translate="yes" xml:space="preserve">
          <source>Provide a small framework for gathering performance statistics about
a web application (statsd protocol)</source>
          <target state="translated">提供一个收集网络应用性能统计的小框架(statsd协议)。</target>
        </trans-unit>
        <trans-unit id="38d1f195f5e8773874200e74a28ab6c7fd257580" translate="yes" xml:space="preserve">
          <source>Pyramid</source>
          <target state="translated">金字塔</target>
        </trans-unit>
        <trans-unit id="b9e45c1e8693e236d04c53afd127fae97dbdbfff" translate="yes" xml:space="preserve">
          <source>Rebase the &lt;code&gt;release_${MAJOR_VERSION}&lt;/code&gt; branch to this commit and push the &lt;code&gt;release_${MAJOR_VERSION}&lt;/code&gt; and
the tag to github. Make sure to do that at the same time so that Jenkins can see the tag when it builds
the branch.</source>
          <target state="translated">将 &lt;code&gt;release_${MAJOR_VERSION}&lt;/code&gt; 分支重新基础到此提交，并将 &lt;code&gt;release_${MAJOR_VERSION}&lt;/code&gt; 和标记推送到github。确保同时执行此操作，以便Jenkins在构建分支时可以看到该标签。</target>
        </trans-unit>
        <trans-unit id="2141618e5f3d96bdd146ac9a61743035fc4c6e44" translate="yes" xml:space="preserve">
          <source>Request tracking</source>
          <target state="translated">要求跟踪</target>
        </trans-unit>
        <trans-unit id="d0de7b0ef479625f70c5a5afc65a5d6e1fd8eaf9" translate="yes" xml:space="preserve">
          <source>SQL profiler</source>
          <target state="translated">SQL剖析器</target>
        </trans-unit>
        <trans-unit id="e2f81fce9de7b0f1523799d79f3671ee6bc8db05" translate="yes" xml:space="preserve">
          <source>SQL profiler to debug DB performance problems, disabled by default. Warning, it will slow down everything.</source>
          <target state="translated">调试DB性能问题的SQL剖析器,默认为禁用。警告,它会拖慢一切。</target>
        </trans-unit>
        <trans-unit id="ba50ebd9f7dd0c73f24f5c75dd2f7fb86f0a724e" translate="yes" xml:space="preserve">
          <source>SQLAlchemy models graph</source>
          <target state="translated">SQLAlchemy模型图</target>
        </trans-unit>
        <trans-unit id="f3994f84eae2b797308c63d8a508944f6b95b8bc" translate="yes" xml:space="preserve">
          <source>STATSD_ADDRESS (c2c.statsd_address): if defined, send stats to the given statsd server</source>
          <target state="translated">STATSD_ADDRESS (c2c.statsd_address):如果定义了,将统计信息发送到指定的statsd服务器。</target>
        </trans-unit>
        <trans-unit id="baed1c0295f09a37d29df42570f8954930570b2f" translate="yes" xml:space="preserve">
          <source>STATSD_PREFIX (c2c.statsd_prefix): prefix to add to every metric names</source>
          <target state="translated">STATSD_PREFIX (c2c.statsd_prefix):添加到每个指标名称的前缀。</target>
        </trans-unit>
        <trans-unit id="1f58161857618a7b760b35a6179c7a12f2c56dcd" translate="yes" xml:space="preserve">
          <source>STATSD_TAG_{tag_name}: To set a global tag for the service</source>
          <target state="translated">STATSD_TAG_{tag_name}。为服务设置一个全局标签</target>
        </trans-unit>
        <trans-unit id="f6d133dff2b3a54097578455df21d497cd7c91a0" translate="yes" xml:space="preserve">
          <source>STATSD_USE_TAGS: If true, automatic metrics will use tags</source>
          <target state="translated">STATSD_USE_TAGS:如果为真,自动指标将使用标签</target>
        </trans-unit>
        <trans-unit id="c2ac9656148c30b660487d8f6dbce7c388b05a92" translate="yes" xml:space="preserve">
          <source>STATS_VIEW (c2c.stats_view): if defined, will enable the stats view &lt;code&gt;{C2C_BASE_PATH}/stats.json&lt;/code&gt;</source>
          <target state="translated">STATS_VIEW（c2c.stats_view）：如果定义，将启用统计信息视图 &lt;code&gt;{C2C_BASE_PATH}/stats.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84daf5be04f0f5aae7fe85868958d1c6bf7471c0" translate="yes" xml:space="preserve">
          <source>Sentry integration</source>
          <target state="translated">哨兵一体化</target>
        </trans-unit>
        <trans-unit id="5dadd887dcb50021624e67465012803ceecfa338" translate="yes" xml:space="preserve">
          <source>Some APIs are protected by a secret. This secret is specified in the &lt;code&gt;C2C_SECRET&lt;/code&gt; variable or &lt;code&gt;c2c.secret&lt;/code&gt;
property. It is either passed as the &lt;code&gt;secret&lt;/code&gt; query parameter or the &lt;code&gt;X-API-Key&lt;/code&gt; header. Once
accessed with a good secret, a cookie is stored and the secret can be omitted.</source>
          <target state="translated">某些API受秘密保护。此机密在 &lt;code&gt;C2C_SECRET&lt;/code&gt; 变量或 &lt;code&gt;c2c.secret&lt;/code&gt; 属性中指定。它可以作为 &lt;code&gt;secret&lt;/code&gt; 查询参数或 &lt;code&gt;X-API-Key&lt;/code&gt; 标头传递。一旦访问了一个很好的秘密，就会存储一个cookie，并且可以忽略该秘密。</target>
        </trans-unit>
        <trans-unit id="a9c766c0e71b5f8d43a594b57efeb10742727dd9" translate="yes" xml:space="preserve">
          <source>Some c2cwsgiutils APIs effect or query the state of the WSGI server. Since only one process out of the 5
(by default) time the number of servers gets a query, only this one will be affected. To avoid that, you
can configure c2cwsgiutils to use Redis pub/sub to broadcast those requests and collect the answers.</source>
          <target state="translated">一些c2cwsgiutils API会影响或查询WSGI服务器的状态。由于5个(默认情况下)服务器数量时间中只有一个进程得到查询,所以只有这一个进程会受到影响。为了避免这种情况,你可以配置c2cwsgiutils使用Redis pub/sub来广播这些请求并收集答案。</target>
        </trans-unit>
        <trans-unit id="88122aa8f93aa8160e94d38904c5a9ccbf54a9fb" translate="yes" xml:space="preserve">
          <source>Tag the GIT commit.</source>
          <target state="translated">标记GIT提交。</target>
        </trans-unit>
        <trans-unit id="748933df4ef4e024c438d4496748e9b73ad6f898" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;c2cwsgiutils.db.setup_session&lt;/code&gt; allows you to setup a DB session that has two engines for accessing a
master/slave PostgresQL setup. The slave engine (read only) will be used automatically for &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;OPTIONS&lt;/code&gt;
requests and the master engine (read write) will be used for the other queries.</source>
          <target state="translated">该 &lt;code&gt;c2cwsgiutils.db.setup_session&lt;/code&gt; 允许你设置有两个引擎访问主/从PostgreSQL的设置一个DB会话。从属引擎（只读）将自动用于 &lt;code&gt;GET&lt;/code&gt; 和 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，而主引擎（读写）将用于其他查询。</target>
        </trans-unit>
        <trans-unit id="7ea882394efe9889032811641e47cbe6cbfdfdcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fast_json&lt;/code&gt; renderer is using ujson which is faster, but doesn't offer the ability to change the rendering
of some types (the &lt;code&gt;default&lt;/code&gt; parameter of json.dumps). This will interact badly with &lt;code&gt;papyrus&lt;/code&gt; and such.</source>
          <target state="translated">该 &lt;code&gt;fast_json&lt;/code&gt; 渲染器使用ujson这是更快，但不提供改变某些类型的渲染（的能力 &lt;code&gt;default&lt;/code&gt; json.dumps的参数）。这将与 &lt;code&gt;papyrus&lt;/code&gt; 相互作用。</target>
        </trans-unit>
        <trans-unit id="5ca4ed5dfe6fe41e992bf78fce0fbd324028969f" translate="yes" xml:space="preserve">
          <source>The GUNICORN_PARAMS has the &lt;code&gt;--reload&lt;/code&gt; parameter and your local python code is
mounted (read only) into the container.</source>
          <target state="translated">GUNICORN_PARAMS具有 &lt;code&gt;--reload&lt;/code&gt; 参数，并且本地python代码已挂载（只读）到容器中。</target>
        </trans-unit>
        <trans-unit id="7652d707f204edab6ed61614e83c42b5bdb39cf2" translate="yes" xml:space="preserve">
          <source>The SQL profiler must be configured with the &lt;code&gt;C2C_SQL_PROFILER_ENABLED&lt;/code&gt; environment variable. That enables a view
to query the status of the profiler (&lt;code&gt;{C2C_BASE_PATH}/sql_profiler?secret={C2C_SECRET}&lt;/code&gt;) or to
enable/disable it (&lt;code&gt;{C2C_BASE_PATH}/sql_profiler?secret={C2C_SECRET}&amp;amp;enable={1|0}&lt;/code&gt;).</source>
          <target state="translated">必须使用 &lt;code&gt;C2C_SQL_PROFILER_ENABLED&lt;/code&gt; 环境变量配置SQL事件探查器。这样一来，视图就可以查询分析器的状态（ &lt;code&gt;{C2C_BASE_PATH}/sql_profiler?secret={C2C_SECRET}&lt;/code&gt; ）或启用/禁用它（ &lt;code&gt;{C2C_BASE_PATH}/sql_profiler?secret={C2C_SECRET}&amp;amp;enable={1|0}&lt;/code&gt; ） 。</target>
        </trans-unit>
        <trans-unit id="b324b58ebe72ff42727dee98895a7f1201c90ae2" translate="yes" xml:space="preserve">
          <source>The URL &lt;code&gt;{C2C_BASE_PATH}/health_check?checks=&amp;lt;check_name&amp;gt;&lt;/code&gt; can be used to run the health checks on some
checks, coma separated list.</source>
          <target state="translated">URL &lt;code&gt;{C2C_BASE_PATH}/health_check?checks=&amp;lt;check_name&amp;gt;&lt;/code&gt; 可用于对某些检查（以逗号分隔的列表）运行健康检查。</target>
        </trans-unit>
        <trans-unit id="b92e078e85de51fee599b5bc4f52c3a2af526158" translate="yes" xml:space="preserve">
          <source>The configuration parameters are:</source>
          <target state="translated">配置参数为:</target>
        </trans-unit>
        <trans-unit id="1a29ce4e251db053cd33b3e4a07b1c1d684b24ac" translate="yes" xml:space="preserve">
          <source>The impacted APIs are:</source>
          <target state="translated">受影响的API是:</target>
        </trans-unit>
        <trans-unit id="f49a45ed80f1bde4a3ab062cd9cd67bfbbc57523" translate="yes" xml:space="preserve">
          <source>The levels are:</source>
          <target state="translated">这些级别是:</target>
        </trans-unit>
        <trans-unit id="2d1a38e889537ad2241e80e30f229a4361e97b61" translate="yes" xml:space="preserve">
          <source>The library is available in PYPI:
&lt;a href=&quot;https://pypi.python.org/pypi/c2cwsgiutils&quot;&gt;https://pypi.python.org/pypi/c2cwsgiutils&lt;/a&gt;</source>
          <target state="translated">该库在PYPI中可用：&lt;a href=&quot;https://pypi.python.org/pypi/c2cwsgiutils&quot;&gt;https&lt;/a&gt; ://pypi.python.org/pypi/c2cwsgiutils</target>
        </trans-unit>
        <trans-unit id="9f6309f9594085646006791c5005121c58bfc411" translate="yes" xml:space="preserve">
          <source>The path &lt;code&gt;/metrics&lt;/code&gt; provide some metrics for Prometheus.
By default we have the &lt;code&gt;smap&lt;/code&gt;&lt;code&gt;pss&lt;/code&gt;, but we can easly add the &lt;code&gt;rss&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; or your custom settings:</source>
          <target state="translated">路径 &lt;code&gt;/metrics&lt;/code&gt; metrics为Prometheus提供了一些指标。默认情况下，我们使用 &lt;code&gt;smap&lt;/code&gt; &lt;code&gt;pss&lt;/code&gt; ，但是我们可以轻松添加 &lt;code&gt;rss&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 或您的自定义设置：</target>
        </trans-unit>
        <trans-unit id="58d7a5046171de6759599d1de3ddf106166632ec" translate="yes" xml:space="preserve">
          <source>The profiler, even if configured, is actually disabled when the application starts. To enable it you must
visit its page.</source>
          <target state="translated">即使配置了剖析器,在应用程序启动时,该剖析器实际上是被禁用的。要启用它,你必须访问它的页面。</target>
        </trans-unit>
        <trans-unit id="e2d67889f7bdffebcb806ded4f8f2f7ac955dbad" translate="yes" xml:space="preserve">
          <source>The requests module is also patched to monitor requests done without timeout. In that case, you can
configure a default timeout with the &lt;code&gt;C2C_REQUESTS_DEFAULT_TIMEOUT&lt;/code&gt; environment variable
(&lt;code&gt;c2c.requests_default_timeout&lt;/code&gt;). If no timeout and no default is specified, a warning is issued.</source>
          <target state="translated">还对请求模块进行了修补，以监视没有超时的已完成请求。在这种情况下，您可以使用 &lt;code&gt;C2C_REQUESTS_DEFAULT_TIMEOUT&lt;/code&gt; 环境变量（ &lt;code&gt;c2c.requests_default_timeout&lt;/code&gt; ）配置默认超时。如果没有超时且未指定默认值，则会发出警告。</target>
        </trans-unit>
        <trans-unit id="fd4f376275e7ced52435d7b2c2f86e939ac2df19" translate="yes" xml:space="preserve">
          <source>The stacktraces can be sent to a sentry.io service for collection. To enable it, you must set the &lt;code&gt;SENTRY_URL&lt;/code&gt;
(&lt;code&gt;c2c.sentry_url&lt;/code&gt;) to point the the project's public DSN.</source>
          <target state="translated">可以将堆栈跟踪发送到sentry.io服务进行收集。要启用它，您必须设置 &lt;code&gt;SENTRY_URL&lt;/code&gt; （ &lt;code&gt;c2c.sentry_url&lt;/code&gt; ）指向项目的公共DSN。</target>
        </trans-unit>
        <trans-unit id="822a87d4c0f932993a42a66721c7c600ae60a908" translate="yes" xml:space="preserve">
          <source>Then, in your application, it is recommended to transmit the request ID to the external REST APIs. Use
the &lt;code&gt;X-Request-ID&lt;/code&gt; HTTP header, for example. The value of the request ID is accessible through an added
&lt;code&gt;c2c_request_id&lt;/code&gt; attribute on the Pyramid Request objects. The &lt;code&gt;requests&lt;/code&gt; module is patched to automatically
add this header.</source>
          <target state="translated">然后，在您的应用程序中，建议将请求ID传输到外部REST API。例如，使用 &lt;code&gt;X-Request-ID&lt;/code&gt; HTTP标头。通过在金字塔请求对象上添加的 &lt;code&gt;c2c_request_id&lt;/code&gt; 属性可以访问请求ID的值 。该 &lt;code&gt;requests&lt;/code&gt; 模块进行了修补，自动添加此头。</target>
        </trans-unit>
        <trans-unit id="2990fb4dd03f60487e35c35a0dd762ec0c1e678b" translate="yes" xml:space="preserve">
          <source>Then, the URL &lt;code&gt;{C2C_BASE_PATH}/health_check?max_level=3&lt;/code&gt; can be used to run the health checks and get a report
looking like that (in case of error):</source>
          <target state="translated">然后，URL &lt;code&gt;{C2C_BASE_PATH}/health_check?max_level=3&lt;/code&gt; 可用于运行健康检查并获得如下所示的报告（如果发生错误）：</target>
        </trans-unit>
        <trans-unit id="b0bdfc6bd56e4e4fb17b304024809eac3282715f" translate="yes" xml:space="preserve">
          <source>This is a Python 3 library (&amp;gt;=3.5) providing common tools for Camptocamp WSGI
applications:</source>
          <target state="translated">这是一个Python 3库（&amp;gt; = 3.5），为Camptocamp WSGI应用程序提供了通用工具：</target>
        </trans-unit>
        <trans-unit id="8ef7e73fa15b2812167b37420cf2880ea6ca8795" translate="yes" xml:space="preserve">
          <source>To enable and configure the metrics framework, you can use:</source>
          <target state="translated">要启用和配置度量框架,你可以使用。</target>
        </trans-unit>
        <trans-unit id="b868433795e5cc675f5ec8e62cd68efea1183f1b" translate="yes" xml:space="preserve">
          <source>To enable health checks, you must add some setup in your WSGI main (usually after the DB connections are
setup). For example:</source>
          <target state="translated">要启用健康检查,你必须在WSGI主中添加一些设置(通常是在DB连接设置之后)。例如</target>
        </trans-unit>
        <trans-unit id="7cc76441a23295db2476e924dab9dcb8f820e8d4" translate="yes" xml:space="preserve">
          <source>To enable most of the features of c2cwsgiutils, you need to add this line to your WSGI main:</source>
          <target state="translated">要启用c2cwsgiutils的大部分功能,你需要在你的WSGI主程序中添加这一行。</target>
        </trans-unit>
        <trans-unit id="98ece86fe234f0b9e143569e66c58c2210b6d5e1" translate="yes" xml:space="preserve">
          <source>To enable the debugging interface, you must set the &lt;code&gt;C2C_DEBUG_VIEW_ENABLED&lt;/code&gt; environment variable. Then you can
have dumps of a few things:</source>
          <target state="translated">要启用调试接口，必须设置 &lt;code&gt;C2C_DEBUG_VIEW_ENABLED&lt;/code&gt; 环境变量。然后，您可以转储一些内容：</target>
        </trans-unit>
        <trans-unit id="f9840aa471523c0a1f63895425e782de46f244bd" translate="yes" xml:space="preserve">
          <source>To have CORS compliant views, define your views like that:</source>
          <target state="translated">要想拥有符合CORS标准的视图,可以这样定义你的视图。</target>
        </trans-unit>
        <trans-unit id="24fcdcaf28c5364ba5464193672d744f7443be41" translate="yes" xml:space="preserve">
          <source>To lint and test everything, run the following command:</source>
          <target state="translated">要对所有的东西进行脱毛和测试,请运行以下命令。</target>
        </trans-unit>
        <trans-unit id="3928f386be9c9a5ac26638c5d1618bb7b2d3c0e1" translate="yes" xml:space="preserve">
          <source>To make a release:</source>
          <target state="translated">做出释放。</target>
        </trans-unit>
        <trans-unit id="2ceb08f0cb1216668d60e2fb31994c5ff05d821e" translate="yes" xml:space="preserve">
          <source>To use that, your production.ini must look like that:</source>
          <target state="translated">要使用这个功能,你的production.ini必须是这样的。</target>
        </trans-unit>
        <trans-unit id="f1324ff49b4ebaa7ed3a7a1c3c49a65c85efdb7b" translate="yes" xml:space="preserve">
          <source>Two JSON renderers are available:</source>
          <target state="translated">有两个JSON渲染器可用。</target>
        </trans-unit>
        <trans-unit id="d0dbd6958b52adbebe7bce447637e9da93129804" translate="yes" xml:space="preserve">
          <source>Two new logging backends are provided:</source>
          <target state="translated">提供了两个新的日志后端。</target>
        </trans-unit>
        <trans-unit id="fd9a98ae4d82da022b7fe61c7d85a671a5fc75ed" translate="yes" xml:space="preserve">
          <source>Version information</source>
          <target state="translated">版本信息</target>
        </trans-unit>
        <trans-unit id="525e1736cf03dcb4f095790ba67091e9c2230fc9" translate="yes" xml:space="preserve">
          <source>We need the &lt;code&gt;release_${MAJOR_VERSION}&lt;/code&gt; branch, so that Jenkins can build a new docker image for the major
versions every nights.</source>
          <target state="translated">我们需要 &lt;code&gt;release_${MAJOR_VERSION}&lt;/code&gt; 分支，以便Jenkins每晚都能为主要版本构建新的docker映像。</target>
        </trans-unit>
        <trans-unit id="3b85b73212608ea335d3cb8ba4b6c8563e6cdccc" translate="yes" xml:space="preserve">
          <source>When you instanciate the &lt;code&gt;HealthCheck&lt;/code&gt; class, two checks may be automatically enabled:</source>
          <target state="translated">当您实例化 &lt;code&gt;HealthCheck&lt;/code&gt; 类时，可能会自动启用两个检查：</target>
        </trans-unit>
        <trans-unit id="7ec683ab42fd9c493f9bf935cd077f7b62319da1" translate="yes" xml:space="preserve">
          <source>With pip:</source>
          <target state="translated">与pip。</target>
        </trans-unit>
        <trans-unit id="85f7f3e7d905903c0e9b34eab2e6260e72b9d1d2" translate="yes" xml:space="preserve">
          <source>You can configure the base URL for accessing the views provided by c2cwsgiutils with an environment variable
named &lt;code&gt;C2C_BASE_PATH&lt;/code&gt; or in the &lt;code&gt;production.ini&lt;/code&gt; file with a property named &lt;code&gt;c2c.base_path&lt;/code&gt;.</source>
          <target state="translated">您可以访问通过c2cwsgiutils与命名的环境变量提供的意见配置基本URL &lt;code&gt;C2C_BASE_PATH&lt;/code&gt; 或 &lt;code&gt;production.ini&lt;/code&gt; 与属性命名的文件 &lt;code&gt;c2c.base_path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8f4cf4cd69248f76cd0e50a700abd41a092f1c2" translate="yes" xml:space="preserve">
          <source>You can enable (disabled by default since it can have a cost) the flagging of the SQL requests as well by
setting the C2C_SQL_REQUEST_ID environment variable (or c2c.sql_request_id in the .ini file). This will use
the application name to pass along the request id. If you do that, you must include the application name in
the PostgreSQL logs by setting &lt;code&gt;log_line_prefix&lt;/code&gt; to something like &lt;code&gt;&quot;%a &quot;&lt;/code&gt; (don't forget the space).</source>
          <target state="translated">您还可以通过设置C2C_SQL_REQUEST_ID环境变量（或.ini文件中的c2c.sql_request_id）来启用（默认情况下是禁用的，因为这样做可能会增加成本）。这将使用应用程序名称传递请求ID。如果这样做，则必须通过将 &lt;code&gt;log_line_prefix&lt;/code&gt; 设置为类似 &lt;code&gt;&quot;%a &quot;&lt;/code&gt; （不要忘记空格），将应用程序名称包含在PostgreSQL日志中。</target>
        </trans-unit>
        <trans-unit id="a40311cf7f52456676d795326ada7390df495c2d" translate="yes" xml:space="preserve">
          <source>You can enable a view to configure the logging level on a live system using the &lt;code&gt;C2C_LOG_VIEW_ENABLED&lt;/code&gt; environment
variable. Then, the current status of a logger can be queried with a GET on
&lt;code&gt;{C2C_BASE_PATH}/logging/level?secret={C2C_SECRET}&amp;amp;name={logger_name}&lt;/code&gt; and can be changed with
&lt;code&gt;{C2C_BASE_PATH}/logging/level?secret={C2C_SECRET}&amp;amp;name={logger_name}&amp;amp;level={level}&lt;/code&gt;. Overrides are stored in
Redis, if &lt;code&gt;C2C_REDIS_URL&lt;/code&gt; (&lt;code&gt;c2c.redis_url&lt;/code&gt;) is configured.</source>
          <target state="translated">您可以使用 &lt;code&gt;C2C_LOG_VIEW_ENABLED&lt;/code&gt; 环境变量来启用视图以在实时系统上配置日志记录级别。然后，记录器的当前状态可以用一个GET查询 &lt;code&gt;{C2C_BASE_PATH}/logging/level?secret={C2C_SECRET}&amp;amp;name={logger_name}&lt;/code&gt; ，可与被改变 &lt;code&gt;{C2C_BASE_PATH}/logging/level?secret={C2C_SECRET}&amp;amp;name={logger_name}&amp;amp;level={level}&lt;/code&gt; 。如果配置了 &lt;code&gt;C2C_REDIS_URL&lt;/code&gt; （ &lt;code&gt;c2c.redis_url&lt;/code&gt; ），则替代存储在Redis中。</target>
        </trans-unit>
        <trans-unit id="cd058e6e6d9fee3a04adf41089bc5ddcf2f09a89" translate="yes" xml:space="preserve">
          <source>You can enable a view to force usage of the slave engine using the &lt;code&gt;C2C_DB_MAINTENANCE_VIEW_ENABLED&lt;/code&gt; environment
variable. Then, the database can be made &quot;readonly&quot; with
&lt;code&gt;{C2C_BASE_PATH}/db/maintenance?secret={C2C_SECRET}&amp;amp;readonly=true&lt;/code&gt;.
The current state is stored in Redis, if &lt;code&gt;C2C_REDIS_URL&lt;/code&gt; (&lt;code&gt;c2c.redis_url&lt;/code&gt;) is configured.</source>
          <target state="translated">您可以使用 &lt;code&gt;C2C_DB_MAINTENANCE_VIEW_ENABLED&lt;/code&gt; 环境变量来启用视图以强制使用从属引擎。然后，可以使用 &lt;code&gt;{C2C_BASE_PATH}/db/maintenance?secret={C2C_SECRET}&amp;amp;readonly=true&lt;/code&gt; 将数据库设置为&amp;ldquo;只读&amp;rdquo; 。如果配置了 &lt;code&gt;C2C_REDIS_URL&lt;/code&gt; （ &lt;code&gt;c2c.redis_url&lt;/code&gt; ），则当前状态存储在Redis中。</target>
        </trans-unit>
        <trans-unit id="6c73372b3129674f73b59f0f0d7824665fbf050b" translate="yes" xml:space="preserve">
          <source>You can enable this by setting &lt;code&gt;C2C_ENABLE_EXCEPTION_HANDLING&lt;/code&gt; (&lt;code&gt;c2c.enable_exception_handling&lt;/code&gt;) to &quot;1&quot;.</source>
          <target state="translated">您可以通过将 &lt;code&gt;C2C_ENABLE_EXCEPTION_HANDLING&lt;/code&gt; （ &lt;code&gt;c2c.enable_exception_handling&lt;/code&gt; ）设置为&amp;ldquo; 1&amp;rdquo; 来启用此功能。</target>
        </trans-unit>
        <trans-unit id="b936e0244cb24b96ed54ee3b941cc04f826adb66" translate="yes" xml:space="preserve">
          <source>You can manually measure the time spent on something like that:</source>
          <target state="translated">你可以手动测量这样的东西所花费的时间。</target>
        </trans-unit>
        <trans-unit id="1768ab0fe267940f5a53690d6a5d9158dd4180fb" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;force_slave&lt;/code&gt; and &lt;code&gt;force_master&lt;/code&gt; parameters to override the defaults and force a route to use
the master or the slave engine.</source>
          <target state="translated">您可以使用 &lt;code&gt;force_slave&lt;/code&gt; 和 &lt;code&gt;force_master&lt;/code&gt; 参数覆盖默认值，并强制路由使用主引擎或从属引擎。</target>
        </trans-unit>
        <trans-unit id="48d3a5cbe6cb50b3a394f3ecb8005ceb7a707099" translate="yes" xml:space="preserve">
          <source>You will need &lt;code&gt;docker&lt;/code&gt; (&amp;gt;=1.12.0), &lt;code&gt;docker-compose&lt;/code&gt; (&amp;gt;=1.10.0) and
&lt;code&gt;make&lt;/code&gt; installed on the machine to play with this project.
Check available versions of &lt;code&gt;docker-engine&lt;/code&gt; with
&lt;code&gt;apt-get policy docker-engine&lt;/code&gt; and eventually force install the
up-to-date version using a command similar to
&lt;code&gt;apt-get install docker-engine=1.12.3-0~xenial&lt;/code&gt;.</source>
          <target state="translated">您需要 &lt;code&gt;docker&lt;/code&gt; （&amp;gt; = 1.12.0）， &lt;code&gt;docker-compose&lt;/code&gt; （&amp;gt; = 1.10.0）和 &lt;code&gt;make&lt;/code&gt; 机器上安装的这个项目发挥。使用 &lt;code&gt;apt-get policy docker-engine&lt;/code&gt; 检查 &lt;code&gt;docker-engine&lt;/code&gt; 的可用版本，并最终使用类似于 &lt;code&gt;apt-get install docker-engine=1.12.3-0~xenial&lt;/code&gt; 的命令强制安装最新版本 。</target>
        </trans-unit>
        <trans-unit id="10d735e581f1e2505cd69675691925490e447c44" translate="yes" xml:space="preserve">
          <source>branch</source>
          <target state="translated">branch</target>
        </trans-unit>
        <trans-unit id="5ede1f1016b0b7528e6e9a1c96027d45ff8ca975" translate="yes" xml:space="preserve">
          <source>bug fix version change: Nothing added, removed or changed in the API and only bug fix
version number changes in the dependencies</source>
          <target state="translated">bug修复版本变更。在API中没有添加、删除或更改任何内容,只有依赖关系中的错误修复版本号发生了变化。</target>
        </trans-unit>
        <trans-unit id="00f6bc2c92ed1d1fad733e1ffa42e17e28fafd41" translate="yes" xml:space="preserve">
          <source>every threads' stacktrace: &lt;code&gt;{C2C_BASE_PATH}/debug/stacks?secret={C2C_SECRET}&lt;/code&gt;</source>
          <target state="translated">每个线程的 &lt;code&gt;{C2C_BASE_PATH}/debug/stacks?secret={C2C_SECRET}&lt;/code&gt; ：{C2C_BASE_PATH} / debug / stacks？secret = {C2C_SECRET}</target>
        </trans-unit>
        <trans-unit id="b847d2aae885eefef6a9e415e09d11f84c5343d3" translate="yes" xml:space="preserve">
          <source>major version change: The API and the dependencies are not backward compatible</source>
          <target state="translated">重大版本变更。API和依赖性不向后兼容。</target>
        </trans-unit>
        <trans-unit id="4f26aeafdb2367620a393c973eddbe8f8b846ebd" translate="yes" xml:space="preserve">
          <source>master</source>
          <target state="translated">掌握</target>
        </trans-unit>
        <trans-unit id="c5344846e725e6b1a4a0a529fb43305b3d745531" translate="yes" xml:space="preserve">
          <source>memory increase when calling another API: &lt;code&gt;{C2C_BASE_PATH}/debug/memory_diff?path={path_info}&amp;amp;secret={C2C_SECRET}&amp;amp;limit=30&amp;amp;no_warmup&lt;/code&gt;</source>
          <target state="translated">调用另一个API时，内存增加： &lt;code&gt;{C2C_BASE_PATH}/debug/memory_diff?path={path_info}&amp;amp;secret={C2C_SECRET}&amp;amp;limit=30&amp;amp;no_warmup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8d1403db875405fa7443dcbea77f317e72f160b" translate="yes" xml:space="preserve">
          <source>memory usage: &lt;code&gt;{C2C_BASE_PATH}/debug/memory?secret={C2C_SECRET}&amp;amp;limit=30&amp;amp;analyze_type=builtins.dict&amp;amp;python_internals_map=false&lt;/code&gt;</source>
          <target state="translated">内存使用情况： &lt;code&gt;{C2C_BASE_PATH}/debug/memory?secret={C2C_SECRET}&amp;amp;limit=30&amp;amp;analyze_type=builtins.dict&amp;amp;python_internals_map=false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4f431310d82091fcca80094e43726d79ae4d21c" translate="yes" xml:space="preserve">
          <source>minor version change: The API must remain backward compatible and only minor version
number changes in the dependencies</source>
          <target state="translated">小的版本变化。API必须保持向后兼容,只有在依赖关系中的轻微版本号变化。</target>
        </trans-unit>
        <trans-unit id="3561f8708ad2aebd0c76610bfb9efd2f835d9223" translate="yes" xml:space="preserve">
          <source>object ref: &lt;code&gt;{C2C_BASE_PATH}/debug/show_refs.dot?secret={C2C_SECRET}&amp;amp;analyze_type=gunicorn.app.wsgiapp.WSGIApplication&amp;amp;analyze_id=12345&amp;amp;max_depth=3&amp;amp;too_many=10&amp;amp;filter=1024&amp;amp;no_extra_info&amp;amp;backrefs&lt;/code&gt;&lt;code&gt;analyze_type&lt;/code&gt; and &lt;code&gt;analyze_id&lt;/code&gt; should not ve used toogether, you can use it like:</source>
          <target state="translated">对象参考： &lt;code&gt;{C2C_BASE_PATH}/debug/show_refs.dot?secret={C2C_SECRET}&amp;amp;analyze_type=gunicorn.app.wsgiapp.WSGIApplication&amp;amp;analyze_id=12345&amp;amp;max_depth=3&amp;amp;too_many=10&amp;amp;filter=1024&amp;amp;no_extra_info&amp;amp;backrefs&lt;/code&gt; &lt;code&gt;analyze_id&lt;/code&gt; 应该分析 &lt;code&gt;analyze_type&lt;/code&gt; ，并且应该使用：</target>
        </trans-unit>
        <trans-unit id="db6a59f848642e3bb40dd3107dcf535c39884bf6" translate="yes" xml:space="preserve">
          <source>release_3 (deprecated)</source>
          <target state="translated">release_3 (已废弃)</target>
        </trans-unit>
        <trans-unit id="3211256418820fccbb071691c0f8ebe701527527" translate="yes" xml:space="preserve">
          <source>release_4</source>
          <target state="translated">释放_4</target>
        </trans-unit>
        <trans-unit id="3935e8cda096e150d403211c66b64a19e972bcde" translate="yes" xml:space="preserve">
          <source>return an HTTP error: &lt;code&gt;{C2C_BASE_PATH}/debug/error?secret={C2C_SECRET}&amp;amp;status=500&lt;/code&gt;</source>
          <target state="translated">返回HTTP错误： &lt;code&gt;{C2C_BASE_PATH}/debug/error?secret={C2C_SECRET}&amp;amp;status=500&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3396b557b51a19e01b6ea846d810419a5c712b2d" translate="yes" xml:space="preserve">
          <source>see the HTTP headers received by WSGI: &lt;code&gt;{C2C_BASE_PATH}/debug/headers?secret={C2C_SECRET}&amp;amp;status=500&lt;/code&gt;</source>
          <target state="translated">查看WSGI收到的HTTP标头： &lt;code&gt;{C2C_BASE_PATH}/debug/headers?secret={C2C_SECRET}&amp;amp;status=500&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a443de8d592c65ef9553695bec13db42e14b812" translate="yes" xml:space="preserve">
          <source>sleep the given number of seconds (to test load balancer timeouts): &lt;code&gt;{C2C_BASE_PATH}/debug/sleep?secret={C2C_SECRET}&amp;amp;time=60.2&lt;/code&gt;</source>
          <target state="translated">休眠给定的秒数（以测试负载均衡器超时）： &lt;code&gt;{C2C_BASE_PATH}/debug/sleep?secret={C2C_SECRET}&amp;amp;time=60.2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46c4866df30fbd15b96ad6fb92eabb31ca3d039b" translate="yes" xml:space="preserve">
          <source>static analysis</source>
          <target state="translated">静态分析</target>
        </trans-unit>
        <trans-unit id="efaef6abe5446976712dae8f67d9ea9d99bde822" translate="yes" xml:space="preserve">
          <source>{STATSD_PREFIX}.redis.{command}: The time to execute the given Redis command</source>
          <target state="translated">{STATSD_PREFIX} .redis。{command}：执行给定Redis命令的时间</target>
        </trans-unit>
        <trans-unit id="14ce88b238148c04ee28a053055a969632099ffb" translate="yes" xml:space="preserve">
          <source>{STATSD_PREFIX}.render.{verb}.{route_name}.{status}: The time to render a query</source>
          <target state="translated">{STATSD_PREFIX} .render。{verb}。{route_name}。{status}：呈现查询的时间</target>
        </trans-unit>
        <trans-unit id="cde374f654ddaeb9396a70468cc9e42a4f834444" translate="yes" xml:space="preserve">
          <source>{STATSD_PREFIX}.requests.{scheme}.{hostname}.{port}.{verb}.{status}: The time to execute HTTP requests to
outside services (only the time between the start of sending of the request and when the header is
back with a chunk of the body)</source>
          <target state="translated">{STATSD_PREFIX} .requests。{scheme}。{hostname}。{port}。{verb}。{status}：对外部服务执行HTTP请求的时间（仅是从开始发送请求到发送请求之间的时间）标头返回了一大块内容）</target>
        </trans-unit>
        <trans-unit id="727739638af226b3c990a25964f50f0bcc642f66" translate="yes" xml:space="preserve">
          <source>{STATSD_PREFIX}.route.{verb}.{route_name}.{status}: The time to process a query (includes rendering)</source>
          <target state="translated">{STATSD_PREFIX} .route。{verb}。{route_name}。{status}：处理查询的时间（包括渲染）</target>
        </trans-unit>
        <trans-unit id="15d07a228cd6d69d3e8ef25b7d3db2dc4e365998" translate="yes" xml:space="preserve">
          <source>{STATSD_PREFIX}.sql.{query}: The time to execute the given SQL query (simplified and normalized)</source>
          <target state="translated">{STATSD_PREFIX} .sql。{query}：执行给定SQL查询的时间（简化和规范化）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
