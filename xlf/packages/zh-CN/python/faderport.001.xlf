<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/faderport/">
    <body>
      <group id="faderport">
        <trans-unit id="2406a66a64f3b2c8fe004d74d88c6c01ab2660b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_button&lt;/code&gt; &amp;acirc;&amp;euro;&amp;rdquo; Called when button is pressed or released,</source>
          <target state="translated">&lt;code&gt;on_button&lt;/code&gt; &amp;ndash;在按下或释放按钮时调用，</target>
        </trans-unit>
        <trans-unit id="6941b4192ec49c25433aea662f313ee35b6b6edb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_close&lt;/code&gt; &amp;acirc;&amp;euro;&amp;rdquo; Called when MIDI port is about  to close.</source>
          <target state="translated">&lt;code&gt;on_close&lt;/code&gt; &amp;ndash;在MIDI端口即将关闭时调用。</target>
        </trans-unit>
        <trans-unit id="66ab12939512574165e5670d29e2a370c3ec7477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_fader&lt;/code&gt; &amp;acirc;&amp;euro;&amp;rdquo; Called when fader is moved,</source>
          <target state="translated">&lt;code&gt;on_fader&lt;/code&gt; &amp;ndash;推子移动时调用，</target>
        </trans-unit>
        <trans-unit id="ad0d9acc41f744b7af0d26c5646368efad0936be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_fader_touch&lt;/code&gt; &amp;acirc;&amp;euro;&amp;rdquo; Called when fader is touched or released,</source>
          <target state="translated">&lt;code&gt;on_fader_touch&lt;/code&gt; &amp;ndash;触摸或释放推子时调用，</target>
        </trans-unit>
        <trans-unit id="d643f6f420603788005efbc829f3ca48624846df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_open&lt;/code&gt; &amp;acirc;&amp;euro;&amp;rdquo; Called when MIDI port has opened,</source>
          <target state="translated">&lt;code&gt;on_open&lt;/code&gt; &amp;ndash; MIDI端口打开时调用，</target>
        </trans-unit>
        <trans-unit id="e01b904aa0176902694d76b6bb9350c047acec8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on_rotary&lt;/code&gt; &amp;acirc;&amp;euro;&amp;rdquo; Called when the Pan control is rotated,</source>
          <target state="translated">&lt;code&gt;on_rotary&lt;/code&gt; &amp;ndash;旋转Pan控件时调用，</target>
        </trans-unit>
        <trans-unit id="9f6eefda38c910df6c8ce7a01ad14f01588b9bd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt; - There is a 'feature' in the FaderPort that can
cause you some problems. If the 'Off' button is lit the fader will
not send value updates when it's moved.</source>
          <target state="translated">&lt;strong&gt;重要说明&lt;/strong&gt;-FaderPort中有一个&amp;ldquo;功能&amp;rdquo;，可能会引起一些问题。如果&amp;ldquo;关闭&amp;rdquo;按钮点亮，则推子在移动时将不会发送值更新。</target>
        </trans-unit>
        <trans-unit id="aa0dc62d0fdf2ed79fe2819cc5f02c092b81adbe" translate="yes" xml:space="preserve">
          <source>An abstract class to interface with a Presonus FaderPort device.</source>
          <target state="translated">一个与Presonus FaderPort设备接口的抽象类。</target>
        </trans-unit>
        <trans-unit id="f46804d3449556d35ef767ddf584662c7ad900ae" translate="yes" xml:space="preserve">
          <source>An abstract class to interface with a Presonus FaderPort.</source>
          <target state="translated">一个与Presonus FaderPort接口的抽象类。</target>
        </trans-unit>
        <trans-unit id="98aca6f476a8ec4ea0a567f12c4343265c66d6db" translate="yes" xml:space="preserve">
          <source>Change List</source>
          <target state="translated">更改列表</target>
        </trans-unit>
        <trans-unit id="cdfb2db2c8cabe8ef5db622c80de14e12a3c4bd6" translate="yes" xml:space="preserve">
          <source>Currently this has only been tested on Windows with a single FaderPort
because that's all I have access to.</source>
          <target state="translated">目前只在Windows上用一个FaderPort进行了测试,因为这是我唯一能接触到的。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="732f7f533dc696c866da38305ee1561731de151c" translate="yes" xml:space="preserve">
          <source>It will display some light patterns and move your fader and then monitor
your actions until you hit the &lt;em&gt;&quot;Off&quot;&lt;/em&gt; button on the FaderPort.</source>
          <target state="translated">它会显示一些光模式并移动您的推子，然后监视您的操作，直到您按下FaderPort上的&lt;em&gt;&amp;ldquo;关闭&amp;rdquo;&lt;/em&gt;按钮。</target>
        </trans-unit>
        <trans-unit id="b3f66422ddc14fa9f7d0d4be397419faf4e71cec" translate="yes" xml:space="preserve">
          <source>Make sure your FaderPort is installed and connected and then:</source>
          <target state="translated">确保你的FaderPort已经安装和连接,然后。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">测试</target>
        </trans-unit>
        <trans-unit id="e5f6fcca7bc52431447e4dad3c5a10e8195b2a12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fader&lt;/code&gt; property allows you to read or set the fader position
on a scale of 0 to 1023.</source>
          <target state="translated">该 &lt;code&gt;fader&lt;/code&gt; 属性，可以阅读或0分的推子位置设置为1023。</target>
        </trans-unit>
        <trans-unit id="d6ea6cc7f366c3551bbc8b23ae8cb2b618bfa777" translate="yes" xml:space="preserve">
          <source>The Presonus FaderPort is a USB MIDI controller that features a
motorized fader, an endless rotary controller and a bunch of buttons.
This class will handle the basic interfacing to the device. You
write a concrete subclass to implement your application specific
requirements.</source>
          <target state="translated">Presonus FaderPort是一个USB MIDI控制器,它的特点是一个电动推子,一个无尽的旋转控制器和一堆按钮。这个类将处理与设备的基本接口。你写一个具体的子类来实现你的应用具体要求。</target>
        </trans-unit>
        <trans-unit id="d5e6efff6a28c768458355b56110fc04682d5f77" translate="yes" xml:space="preserve">
          <source>The adventurous can read the mido docs and try alternative backends.</source>
          <target state="translated">有冒险精神的人可以阅读mido文档,尝试其他后端。</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">那么..:</target>
        </trans-unit>
        <trans-unit id="1d231b8c403ffc7a991f6779d44b38a3cec69d5d" translate="yes" xml:space="preserve">
          <source>There are some methods for 'fancy' display effects, because why not?
Check out: &lt;code&gt;countdown&lt;/code&gt;, &lt;code&gt;snake&lt;/code&gt;, &lt;code&gt;blink&lt;/code&gt; and &lt;code&gt;chase&lt;/code&gt;</source>
          <target state="translated">有一些方法可以&amp;ldquo;显示&amp;rdquo;效果，为什么不呢？检出： &lt;code&gt;countdown&lt;/code&gt; ， &lt;code&gt;snake&lt;/code&gt; ， &lt;code&gt;blink&lt;/code&gt; 和 &lt;code&gt;chase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8549e5688e9f9d4747a4f17278b805954003f400" translate="yes" xml:space="preserve">
          <source>This subclass must implement the following methods:</source>
          <target state="translated">这个子类必须实现以下方法。</target>
        </trans-unit>
        <trans-unit id="8ee791f42feec83f28951c8b20d9c076bcdccfb6" translate="yes" xml:space="preserve">
          <source>This will also install the
&lt;strong&gt;&lt;a href=&quot;http://mido.readthedocs.io/en/latest/index.html&quot;&gt;mido&lt;/a&gt;&lt;/strong&gt; package and
&lt;a href=&quot;https://pypi.org/project/python-rtmidi/&quot;&gt;&lt;strong&gt;python-rtmidi&lt;/strong&gt;&lt;/a&gt; backend.</source>
          <target state="translated">这还将安装 &lt;strong&gt;&lt;a href=&quot;http://mido.readthedocs.io/en/latest/index.html&quot;&gt;mido&lt;/a&gt;&lt;/strong&gt;软件包和 &lt;a href=&quot;https://pypi.org/project/python-rtmidi/&quot;&gt;&lt;strong&gt;python-rtmidi&lt;/strong&gt;&lt;/a&gt;后端。</target>
        </trans-unit>
        <trans-unit id="caa42e243e4b5124cfab8413690eda5554419599" translate="yes" xml:space="preserve">
          <source>This will instantiate a derived 'TestFaderPort' class, which also serves as
an example implementation, and then run through some of it's features.</source>
          <target state="translated">这将实例化一个派生的'TestFaderPort'类,它也是一个实例实现,然后运行它的一些功能。</target>
        </trans-unit>
        <trans-unit id="4df9dc42d5c912e6f585474ecc831638712feb71" translate="yes" xml:space="preserve">
          <source>Try holding &lt;em&gt;&quot;shift&quot;&lt;/em&gt; (on the FaderPort) and tweaking the Pan knob at the
same time.</source>
          <target state="translated">尝试按住&lt;em&gt;&amp;ldquo; shift&amp;rdquo;&lt;/em&gt;（在FaderPort上）并同时调整Pan旋钮。</target>
        </trans-unit>
        <trans-unit id="929a5f49498fe3f445244f75a2e79941b1ccfbe5" translate="yes" xml:space="preserve">
          <source>Try out the Pan knob, the fader and some of the buttons.</source>
          <target state="translated">试试Pan旋钮、推子和一些按钮。</target>
        </trans-unit>
        <trans-unit id="ac29e5a454c4cae52d2c26ec8f58c7ed68583f2e" translate="yes" xml:space="preserve">
          <source>Version 1.0.0 - Initial Release</source>
          <target state="translated">版本1.0.0-初始版本</target>
        </trans-unit>
        <trans-unit id="86d6272945e1485bfa93dc21848ee4e68840220b" translate="yes" xml:space="preserve">
          <source>Version 1.0.1 - Added a reset command at startup. Sometimes when
faderport is reconnected it can get in a weird mode. The &lt;em&gt;Bank&lt;/em&gt;
light is lit and our code doesn't work. This seems to fix it.</source>
          <target state="translated">版本1.0.1-在启动时添加了重置命令。有时，当推子端口重新连接时，它会进入怪异模式。该&lt;em&gt;行&lt;/em&gt; 灯亮起，我们的代码无法正常工作。这似乎可以解决它。</target>
        </trans-unit>
        <trans-unit id="26d1129122e8285f29a30b5d031e0c3eda90d680" translate="yes" xml:space="preserve">
          <source>You can display hexadecimal characters (0-9, A-F) using &lt;code&gt;char_on&lt;/code&gt;.
This will use the button LEDs in a dot matrix style.
(Extending this to the a full alphanumeric character set is an
exercise left to the reader).</source>
          <target state="translated">您可以使用 &lt;code&gt;char_on&lt;/code&gt; 显示十六进制字符（0-9，AF）。这将以点矩阵样式使用按钮LED。（将其扩展为完整的字母数字字符集是读者的一项练习）。</target>
        </trans-unit>
        <trans-unit id="a50d2588c5f06e7ff84132edeaed681cc9df9f00" translate="yes" xml:space="preserve">
          <source>You can turn the button lights on and off individually using
&lt;code&gt;light_on&lt;/code&gt; and &lt;code&gt;light_off&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;light_on&lt;/code&gt; 和 &lt;code&gt;light_off&lt;/code&gt; 分别打开和关闭按钮灯 。</target>
        </trans-unit>
        <trans-unit id="ad3e04972f021441e0db6ca609cb528e1a608930" translate="yes" xml:space="preserve">
          <source>You'll need Python 3.6 or later.</source>
          <target state="translated">你需要Python 3.6或更高版本。</target>
        </trans-unit>
        <trans-unit id="df8a475a8a885b20db66f6ed6026f80705f1084d" translate="yes" xml:space="preserve">
          <source>faderport</source>
          <target state="translated">推子口</target>
        </trans-unit>
        <trans-unit id="49d99e202b7f6cd61084c2e6b937de1895b78af9" translate="yes" xml:space="preserve">
          <source>should do the trick.</source>
          <target state="translated">应该可以做到这一点。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
