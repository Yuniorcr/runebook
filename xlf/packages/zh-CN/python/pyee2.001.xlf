<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pyee2/">
    <body>
      <group id="pyee2">
        <trans-unit id="045f283df1eb603ba43e674ba72095f5426b6c9c" translate="yes" xml:space="preserve">
          <source>A port of node.js's primus/eventemitter3 to python. Based on jfhbrook/pyee.</source>
          <target state="translated">将node.js的primus/eventemitter3移植到python中。基于jfhbrook/pyee。</target>
        </trans-unit>
        <trans-unit id="e0dbeabba6f94d35e48e59056c741de234b1affa" translate="yes" xml:space="preserve">
          <source>Does not not emit an event when a new listener is added or removed.</source>
          <target state="translated">当添加或删除新的监听器时,不会不发出事件。</target>
        </trans-unit>
        <trans-unit id="ae70121e28e603d720350dadd59362f47afe7a30" translate="yes" xml:space="preserve">
          <source>Does not raise or emit an error event when your listener raises an error and no one is listening for the &quot;error&quot; event.
That is to say pyee2 catches all errors raised by event listeners and only emits an error if there are listeners for the &quot;error&quot; event.</source>
          <target state="translated">当你的监听器发出错误时,没有人监听 &quot;错误 &quot;事件时,不会引发或发出一个错误事件。也就是说,pyee2会捕获所有由事件监听器引发的错误,只有当有监听器监听 &quot;error &quot;事件时才会发出错误。</target>
        </trans-unit>
        <trans-unit id="77ebb299bb93d324ec969a223b79b760a3dd8d1a" translate="yes" xml:space="preserve">
          <source>Only supports function or functions that return awaitables (coroutine, future, task) as event listeners.
The test for awaitableness is done via &quot;inspect.isawaitable&quot;</source>
          <target state="translated">只支持作为事件监听器返回可等待性(coroutine、future、task)的函数或功能。通过&quot; inspect.isawaitable &quot;来测试可等待性。</target>
        </trans-unit>
        <trans-unit id="860460c64463c546e952c0b21ec2926c956c899b" translate="yes" xml:space="preserve">
          <source>The only time an exception is raised from an &quot;emit&quot; function is if &lt;code&gt;EventEmitter.raising_emit&lt;/code&gt; is used to emit the event.</source>
          <target state="translated">只有使用 &lt;code&gt;EventEmitter.raising_emit&lt;/code&gt; 发出事件时，才会从&amp;ldquo; emit&amp;rdquo;函数引发异常。</target>
        </trans-unit>
        <trans-unit id="db61a790aaf3baef3633d9331f469ac29e52665a" translate="yes" xml:space="preserve">
          <source>pyee2</source>
          <target state="translated">pyee2</target>
        </trans-unit>
        <trans-unit id="2881475c820181250df60864903f2f0d1cbd2744" translate="yes" xml:space="preserve">
          <source>pyee2 is the &lt;a href=&quot;https://github.com/primus/eventemitter3&quot;&gt;primus/eventemitter3&lt;/a&gt; EventEmitter implementation ported to python with inspiration from &lt;a href=&quot;https://github.com/jfhbrook/pyee&quot;&gt;jfhbrook/pyee&lt;/a&gt;.</source>
          <target state="translated">pyee2是从&lt;a href=&quot;https://github.com/jfhbrook/pyee&quot;&gt;jfhbrook / pyee&lt;/a&gt;获得灵感的&lt;a href=&quot;https://github.com/primus/eventemitter3&quot;&gt;primus / eventemitter3&lt;/a&gt; EventEmitter实现移植到python 。</target>
        </trans-unit>
        <trans-unit id="50c5e1ad4be3fb2eb1ff5b7d3c0da536ce879729" translate="yes" xml:space="preserve">
          <source>pyee2:</source>
          <target state="translated">pyee2:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
