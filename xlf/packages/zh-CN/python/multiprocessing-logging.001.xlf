<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/multiprocessing-logging/">
    <body>
      <group id="multiprocessing-logging">
        <trans-unit id="c9ec5e5657e5f40928b1752779c215a60aee96f2" translate="yes" xml:space="preserve">
          <source>Before you start logging but after you configure the logging framework (maybe with &lt;code&gt;logging.basicConfig(...)&lt;/code&gt;), do the following:</source>
          <target state="translated">在开始日志记录之前，但在配置日志记录框架之后（也许使用 &lt;code&gt;logging.basicConfig(...)&lt;/code&gt; ），请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="b873d9f38336208e261114b54175807f9972aeb6" translate="yes" xml:space="preserve">
          <source>It's currently tested in Linux and Python 2.7 &amp;amp; 3.5+.</source>
          <target state="translated">目前已在Linux和Python 2.7＆3.5+中进行了测试。</target>
        </trans-unit>
        <trans-unit id="c2ac3f477d870fbba8eae3b8f4f962e61493b4c7" translate="yes" xml:space="preserve">
          <source>Later, several improvements have been contributed.</source>
          <target state="translated">后来,又做了一些改进。</target>
        </trans-unit>
        <trans-unit id="c0abfb5af678766e21d32b10a7c67a67e59edc95" translate="yes" xml:space="preserve">
          <source>Logger for multiprocessing applications</source>
          <target state="translated">多处理应用的记录器</target>
        </trans-unit>
        <trans-unit id="e216d13ccd3b6d025cd7a30a85e0e1a75584913b" translate="yes" xml:space="preserve">
          <source>Only works on POSIX systems and only Linux is supported. It does not work on Windows.</source>
          <target state="translated">只在POSIX系统上工作,只支持Linux。它在Windows上不工作。</target>
        </trans-unit>
        <trans-unit id="44ab85a252adb7ade8ca36fec4157a862c1f725f" translate="yes" xml:space="preserve">
          <source>Origin</source>
          <target state="translated">起源</target>
        </trans-unit>
        <trans-unit id="83f6511b839576bf11e8b26a237fcce6a7459f8c" translate="yes" xml:space="preserve">
          <source>Pypy appears to be working, recently.</source>
          <target state="translated">皮皮似乎在工作,最近。</target>
        </trans-unit>
        <trans-unit id="0a8b9005646d33d9dd1702dcff3a576b72a4fbab" translate="yes" xml:space="preserve">
          <source>Pypy3 hangs on the tests so I don't recommend using it.</source>
          <target state="translated">Pypy3在测试中会挂掉,所以我不建议使用它。</target>
        </trans-unit>
        <trans-unit id="24c38bee8b6b9c9ab114f4086a361b67b6cc369a" translate="yes" xml:space="preserve">
          <source>This library was taken verbatim from a &lt;a href=&quot;http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python&quot;&gt;StackOverflow post&lt;/a&gt;
and extracted into a module so that I wouldn't have to copy the code in every
project.</source>
          <target state="translated">该库是从&lt;a href=&quot;http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python&quot;&gt;StackOverflow帖子中&lt;/a&gt;逐字 提取的，并提取到模块中，这样我就不必在每个项目中都复制代码。</target>
        </trans-unit>
        <trans-unit id="7276a05e5c32bff422597c6bff461345f6e7381e" translate="yes" xml:space="preserve">
          <source>This simple module implements a &lt;code&gt;Handler&lt;/code&gt; that when set on the root
&lt;code&gt;Logger&lt;/code&gt; will handle tunneling the records to the main process so that
they are handled correctly.</source>
          <target state="translated">这个简单的模块实现了一个 &lt;code&gt;Handler&lt;/code&gt; ，当在根 &lt;code&gt;Logger&lt;/code&gt; 上进行设置时，该 处理程序将处理将记录隧道传输到主进程，以便正确处理它们。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="95cb5cb7bcfe6a3aabf66ddb3b4bff0f937a630a" translate="yes" xml:space="preserve">
          <source>When using a Pool, make sure &lt;code&gt;install_mp_handler&lt;/code&gt; is called before the Pool is instantiated, for example:</source>
          <target state="translated">使用池时，请确保在实例化池之前调用 &lt;code&gt;install_mp_handler&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="5840eaad783ad072e619ad972706a1c8a13226b7" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;multiprocessing&lt;/code&gt; module, logging becomes less useful since
sub-processes should log to individual files/streams or there's the risk of
records becoming garbled.</source>
          <target state="translated">当使用 &lt;code&gt;multiprocessing&lt;/code&gt; 模块时，日志记录的用处就减少了，因为子流程应该记录到单个文件/流中，否则就有记录混乱的风险。</target>
        </trans-unit>
        <trans-unit id="670f85233f2563499767188601a939172b658623" translate="yes" xml:space="preserve">
          <source>With multiprocessing.Pool</source>
          <target state="translated">有多处理.池</target>
        </trans-unit>
        <trans-unit id="82b49dcdd5da0962de992503a9a8b0b5fa0a526a" translate="yes" xml:space="preserve">
          <source>and that's it.</source>
          <target state="translated">就是这样。</target>
        </trans-unit>
        <trans-unit id="66b7cda3597658cfdf4bc3b0f786070b25e2a1c3" translate="yes" xml:space="preserve">
          <source>multiprocessing-logging</source>
          <target state="translated">多处理-日志</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
