<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dirtyjson/">
    <body>
      <group id="dirtyjson">
        <trans-unit id="6ae4a0ca172385853893acdb24f9c7cc4bf26cdc" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; d = dirtyjson.loads(&quot;&quot;&quot;[&quot;foo&quot;, /* not fu*/ {bar: ['baz', null, 1.0, 2,]}] and then ignore this junk&quot;&quot;&quot;)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; d = dirtyjson.loads（&amp;ldquo;&amp;rdquo;&amp;ldquo; [&amp;rdquo; foo&amp;ldquo;，/ *不是fu * / {bar：['baz'，null，1.0，2，]}]，然后忽略此垃圾&amp;rdquo;&amp;ldquo;&amp;rdquo;））</target>
        </trans-unit>
        <trans-unit id="b8018bc567b820d0bff01a55ebed0dba52195bda" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; d == obj</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; d == obj</target>
        </trans-unit>
        <trans-unit id="8749208a83cf4ca9d79b2f6fa89d01acfddba65b" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; dirtyjson.load(io)[0] == 'streaming API'</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; dirtyjson.load（io）[0] ==&amp;ldquo;流API&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="50ef2f2c125b05d7ad8f7e79d1d0ec2e7ee65c23" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; dirtyjson.loads('&quot;\\&quot;foo\\bar&quot;') == u'&quot;foo\x08ar'</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; dirtyjson.loads（'&amp;ldquo; \\&amp;rdquo; foo \\ bar&amp;ldquo;'）== u'&amp;rdquo; foo \ x08ar'</target>
        </trans-unit>
        <trans-unit id="b7576760f9f5be25265e4702d48595bcadacdce5" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; dirtyjson.loads('1.1', parse_float=Decimal) == Decimal('1.1')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; dirtyjson.loads（'1.1'，parse_float = Decimal）==小数（'1.1'）</target>
        </trans-unit>
        <trans-unit id="73c6533d0679cd0380ed8e05f1fd05fee27751dd" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; from decimal import Decimal</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;从十进制导入十进制</target>
        </trans-unit>
        <trans-unit id="8add3916f54cbd4bb1b405547dab6738071c9904" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; from dirtyjson.compat import StringIO</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;从dirtyjson.compat导入StringIO</target>
        </trans-unit>
        <trans-unit id="be6f2ca7bbf94788b627091c0fb810eee1d1da54" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; import dirtyjson</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;导入dirtyjson</target>
        </trans-unit>
        <trans-unit id="3e215510061529c0113bec24d6ccb8fcb23d6b60" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; io = StringIO('[&quot;streaming API&quot;]')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; io = StringIO（'[&amp;ldquo;&amp;rdquo; streaming API&amp;ldquo;]'）</target>
        </trans-unit>
        <trans-unit id="b083dd314cc867b321b0626f121509b1e1f47d67" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; obj = [u'foo', {u'bar': [u'baz', None, 1.0, 2]}]</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; obj = [u'foo'，{u'bar'：[u'baz'，None，1.0，2]}]</target>
        </trans-unit>
        <trans-unit id="3801b1799e3f3f1afdee2d7a99f77f3b01dddd1f" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos = d.attributes(0)  # line/column position of first element in array</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos = d.attributes（0）＃数组中第一个元素的行/列位置</target>
        </trans-unit>
        <trans-unit id="17ee0cc6d97ace975cdb45c7c1ddfcbf5192c5a4" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos = d[1].attributes('bar')  # line/column position of 'bar' key/value pair</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos = d [1] .attributes（'bar'）＃'bar'键/值对的行/列位置</target>
        </trans-unit>
        <trans-unit id="ec8920b634349bc6ef5974a92cdc248e7294e0b8" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos.column == 2</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos.column == 2</target>
        </trans-unit>
        <trans-unit id="597f87b16d9ce558a3c647180d83644b24aab19c" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos.key.column == 22</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos.key.column == 22</target>
        </trans-unit>
        <trans-unit id="3098590b0929ac26e384d90081781ae41fafbf35" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos.key.line == 1</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos.key.line == 1</target>
        </trans-unit>
        <trans-unit id="233fab9e100474a11f8fff4b00dcdbd36630774c" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos.line == 1</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos.line == 1</target>
        </trans-unit>
        <trans-unit id="e349bb4e07cb0d1b1d2a315c6e99db142bea95c6" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos.value.column == 27</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos.value.column == 27</target>
        </trans-unit>
        <trans-unit id="e943cbcc1b39f61ddcf9a5d763f397127f25fbb5" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; pos.value.line == 1</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; pos.value.line == 1</target>
        </trans-unit>
        <trans-unit id="2e182d10984e41d0fa4db2a38ba07c1de90715b4" translate="yes" xml:space="preserve">
          <source>(e.g. :class:`decimal.Decimal`).</source>
          <target state="translated">（例如：decimal.Decimal`）。</target>
        </trans-unit>
        <trans-unit id="c74cfd87b536b17fa33bf8833c3043b9f67b6895" translate="yes" xml:space="preserve">
          <source>(e.g. :class:`float`).</source>
          <target state="translated">（例如：float）。</target>
        </trans-unit>
        <trans-unit id="e03759a131bd85f1a76c3451cae491ed618b3310" translate="yes" xml:space="preserve">
          <source>*parse_constant*, if specified, will be called with one of the following</source>
          <target state="translated">* parse_constant *（如果已指定）将通过以下方式之一调用</target>
        </trans-unit>
        <trans-unit id="03239d75370d4db1f30e06bfb05d608dfa51e7bd" translate="yes" xml:space="preserve">
          <source>*parse_float*, if specified, will be called with the string of every JSON</source>
          <target state="translated">* parse_float *（如果已指定）将使用每个JSON的字符串进行调用</target>
        </trans-unit>
        <trans-unit id="3c5f66fe41083ebe7d5c8699467e8480dc3dc85c" translate="yes" xml:space="preserve">
          <source>*parse_int*, if specified, will be called with the int of the string of every</source>
          <target state="translated">* parse_int *（如果已指定）将使用每个字符串的int进行调用</target>
        </trans-unit>
        <trans-unit id="1565caab8d89a5a763b8fcf90bbd6c8032ed729b" translate="yes" xml:space="preserve">
          <source>*search_for_first_object*, if ``True``, will cause the parser to search for</source>
          <target state="translated">* search_for_first_object *，如果为&amp;ldquo; True&amp;rdquo;，将使解析器搜索</target>
        </trans-unit>
        <trans-unit id="2fc53797ce53c11146819cdde599361c56e55f3c" translate="yes" xml:space="preserve">
          <source>*start_index*, if non-zero, will cause the parser to start processing from</source>
          <target state="translated">* start_index *（如果非零）将使解析器从以下位置开始处理</target>
        </trans-unit>
        <trans-unit id="3d984f1d8aee6dc2729d706d08da7a96d408b9e0" translate="yes" xml:space="preserve">
          <source>+---------------+-------------------------+</source>
          <target state="translated">+ --------------- + ------------------------- +</target>
        </trans-unit>
        <trans-unit id="98b7f59b3a32439a6288b733a9be1156b62bc83f" translate="yes" xml:space="preserve">
          <source>+===============+=========================+</source>
          <target state="translated">+ =============== + ======================== +</target>
        </trans-unit>
        <trans-unit id="56bbea5c4b8d8feaab13028168f8c94bbc2ca540" translate="yes" xml:space="preserve">
          <source>.. attribute:: colno</source>
          <target state="translated">..属性：： colno</target>
        </trans-unit>
        <trans-unit id="7c92713a04fd363f991c7befa7ef3ef9920f8d0b" translate="yes" xml:space="preserve">
          <source>.. attribute:: doc</source>
          <target state="translated">..属性：： doc</target>
        </trans-unit>
        <trans-unit id="3cf4d31bca9a62fc578251e839f38dfffe707123" translate="yes" xml:space="preserve">
          <source>.. attribute:: lineno</source>
          <target state="translated">..属性：： lineno</target>
        </trans-unit>
        <trans-unit id="6d1ca6b4f4791fca4600c9163ce28d3cada9bf36" translate="yes" xml:space="preserve">
          <source>.. attribute:: msg</source>
          <target state="translated">..属性：：味精</target>
        </trans-unit>
        <trans-unit id="2f02ebb107d21a77ccdf6bec9ad2e9a27b566f45" translate="yes" xml:space="preserve">
          <source>.. attribute:: pos</source>
          <target state="translated">..属性：： pos</target>
        </trans-unit>
        <trans-unit id="99ae25b996eb23c2e7d67014ed9892896e3d31ef" translate="yes" xml:space="preserve">
          <source>.. class:: AttributedDict()</source>
          <target state="translated">.. class :: AttributedDict（）</target>
        </trans-unit>
        <trans-unit id="e0f2937240d0005fbd15a487a15a470fc9cd59b5" translate="yes" xml:space="preserve">
          <source>.. class:: AttributedList()</source>
          <target state="translated">.. class :: AttributedList（）</target>
        </trans-unit>
        <trans-unit id="32a57aac3d98452caa2e513432bab54f76c6c260" translate="yes" xml:space="preserve">
          <source>.. class:: KeyValuePosition()</source>
          <target state="translated">.. class :: KeyValuePosition（）</target>
        </trans-unit>
        <trans-unit id="4d01d05f1540cb7eecc9fcaa49d433d119894bca" translate="yes" xml:space="preserve">
          <source>.. class:: Position()</source>
          <target state="translated">.. class :: Position（）</target>
        </trans-unit>
        <trans-unit id="99303046f2e9b790166118f40fa11ba9fd186620" translate="yes" xml:space="preserve">
          <source>.. exception:: dirtyjson.Error(msg, doc, pos)</source>
          <target state="translated">..例外：： dirtyjson.Error（msg，doc，pos）</target>
        </trans-unit>
        <trans-unit id="bc4ed93949fc7a256af35d0fe2a687c8fde34743" translate="yes" xml:space="preserve">
          <source>.. function:: load(fp[, encoding[, parse_float[, parse_int[, parse_constant[, search_for_first_object]]]]])</source>
          <target state="translated">.. function :: load（fp [，encoding [，parse_float [，parse_int [，parse_constant [，search_for_first_object]]]]]]））</target>
        </trans-unit>
        <trans-unit id="948c39cb7b7df537f734c820a7e8538c9fc2e36c" translate="yes" xml:space="preserve">
          <source>.. function:: loads(s[, encoding[, parse_float[, parse_int[, parse_constant[, search_for_first_object[, start_index]]]]])</source>
          <target state="translated">.. function :: loads（s [，encoding [，parse_float [，parse_int [，parse_constant [，search_for_first_object [，start_index]]]]]]]）</target>
        </trans-unit>
        <trans-unit id="fb6deafc8e6ccd9b354e14a91ed5e32b91dc3d9b" translate="yes" xml:space="preserve">
          <source>.. method:: add_with_attributes(self, key, value, attributes)</source>
          <target state="translated">..方法：： add_with_attributes（自己，键，值，属性）</target>
        </trans-unit>
        <trans-unit id="1c14e2ad1c548a47458264241585808bccaf857d" translate="yes" xml:space="preserve">
          <source>.. method:: append(self, value, attributes=None):</source>
          <target state="translated">.. method :: append（self，value，attribute = None）：</target>
        </trans-unit>
        <trans-unit id="92f0115bc282f604f136fb823467c728a27c4166" translate="yes" xml:space="preserve">
          <source>.. method:: attributes(self, index)</source>
          <target state="translated">..方法：:属性（自己，索引）</target>
        </trans-unit>
        <trans-unit id="72c713ead8a205f850b3e08f63036222ca16dbef" translate="yes" xml:space="preserve">
          <source>.. method:: attributes(self, key)</source>
          <target state="translated">..方法：:属性（自己，键）</target>
        </trans-unit>
        <trans-unit id="22217cf8bef85658359134506aa8b5f78bf15d09" translate="yes" xml:space="preserve">
          <source>.. module:: dirtyjson</source>
          <target state="translated">..模块:: dirtyjson</target>
        </trans-unit>
        <trans-unit id="ba401896be6e524e1ebc17b934c44dc73c74594c" translate="yes" xml:space="preserve">
          <source>.. moduleauthor:: Scott Maxwell &amp;lt;scott@codecobblers.com&amp;gt;</source>
          <target state="translated">.. moduleauthor :: Scott Maxwell &amp;lt;scott@codecobblers.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1dff53afa2a7b7a3f94dcd2842f3dfe0d65a5128" translate="yes" xml:space="preserve">
          <source>.. note::</source>
          <target state="translated">.. 注意：：</target>
        </trans-unit>
        <trans-unit id="60d2867d15d2fbf405f45b619ed8efd7a1a11154" translate="yes" xml:space="preserve">
          <source>:class:`AttributedList` instead of ``dict`` and ``list``. Each is actually a</source>
          <target state="translated">：class：ʻAttributedList`而不是dict和list。每个实际上是一个</target>
        </trans-unit>
        <trans-unit id="5d55effad6025b6349c9e6822020831e95c86779" translate="yes" xml:space="preserve">
          <source>:class:`KeyValuePosition`. Retrieve position info like this::</source>
          <target state="translated">KeyValuePosition。像这样检索位置信息：：</target>
        </trans-unit>
        <trans-unit id="44becaa8a6102a22e1259aff0920fc72fc66dd15" translate="yes" xml:space="preserve">
          <source>:mod:`dirtyjson` --- JSON decoder</source>
          <target state="translated">：mod：`dirtyjson`-JSON解码器</target>
        </trans-unit>
        <trans-unit id="649e99d7a54f411156244adbc538a0a1b1aff278" translate="yes" xml:space="preserve">
          <source>:mod:`dirtyjson` exposes an API familiar to users of the standard library</source>
          <target state="translated">：mod：`dirtyjson`公开了标准库用户熟悉的API</target>
        </trans-unit>
        <trans-unit id="64974b61e2d18c2ac8305456743528533d56dff6" translate="yes" xml:space="preserve">
          <source>:mod:`dirtyjson` is a JSON decoder meant for extracting JSON-type data from .js</source>
          <target state="translated">：mod：`dirtyjson`是用于从.js提取JSON类型数据的JSON解码器</target>
        </trans-unit>
        <trans-unit id="36bdba2ca242a4c02570ef9d45f2de4be049fef6" translate="yes" xml:space="preserve">
          <source>:mod:`json` library or :mod:`simplejson`.</source>
          <target state="translated">：mod：`json`库或：mod：`simplejson`。</target>
        </trans-unit>
        <trans-unit id="43f40d1a73d878b7bb00b4ecb58ade221f636927" translate="yes" xml:space="preserve">
          <source>:mod:`marshal` and :mod:`pickle` modules. However, :mod:`dirtyjson` provides</source>
          <target state="translated">：mod：`marshal`和：mod：`pickle`模块。但是，：dir：dirtyjson提供</target>
        </trans-unit>
        <trans-unit id="4c5c18776b9ddfcfcf3de91b6e2f7ca2f9216f8e" translate="yes" xml:space="preserve">
          <source>:mod:`simplejson` project for providing such a nice starting point.</source>
          <target state="translated">：mod：`simplejson`项目，提供了一个很好的起点。</target>
        </trans-unit>
        <trans-unit id="407cee2965f423cf38d7220a3d4837b627382078" translate="yes" xml:space="preserve">
          <source>:synopsis: Decode JSON data from dirty files.</source>
          <target state="translated">：synopsis：从脏文件中解码JSON数据。</target>
        </trans-unit>
        <trans-unit id="df606e8c5f112c6341f5dce578eaa7682f6059f6" translate="yes" xml:space="preserve">
          <source>A subclass of ``dict`` that behaves exactly like a ``dict`` except that it</source>
          <target state="translated">``dict``的一个子类,它的行为与``dict``完全相同,只是它</target>
        </trans-unit>
        <trans-unit id="39981105da4dcb54e072e00e8e60c2e0ee21c179" translate="yes" xml:space="preserve">
          <source>A subclass of ``list`` that behaves exactly like a ``list`` except that it</source>
          <target state="translated">``list````的一个子类,它的行为与``list``完全相同,但它的特点是</target>
        </trans-unit>
        <trans-unit id="7674c2e95690bdc027a6d82b17b4b50fb2e2d977" translate="yes" xml:space="preserve">
          <source>Appends *value* to the list and *attributes* to the associated location.</source>
          <target state="translated">将*值*添加到列表中,并将*属性*添加到相关位置。</target>
        </trans-unit>
        <trans-unit id="eec5d1983a43e5b1f30e4f35ee5c1e9ddd26cf73" translate="yes" xml:space="preserve">
          <source>AttributedDict and AttributedList</source>
          <target state="translated">AttributedDict和AttributedList。</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">基本使用方法</target>
        </trans-unit>
        <trans-unit id="ae9d2b9412493b99f8adc5483176b0ecd3c7a743" translate="yes" xml:space="preserve">
          <source>Decoding JSON and getting position information::</source>
          <target state="translated">解码JSON并获取位置信息:。</target>
        </trans-unit>
        <trans-unit id="ae43eb15973330d65594bd677efb0eaf2e2e8999" translate="yes" xml:space="preserve">
          <source>Decoding JSON from streams::</source>
          <target state="translated">从流中解码JSON:。</target>
        </trans-unit>
        <trans-unit id="8da54f66b15406d6457bc37e21d9690872c68a24" translate="yes" xml:space="preserve">
          <source>Decoding unicode from JSON::</source>
          <target state="translated">从JSON解码unicode:。</target>
        </trans-unit>
        <trans-unit id="030646e272ae5ae87b221d2b0ffc471a5bdfd209" translate="yes" xml:space="preserve">
          <source>Deserialize *fp* (a ``.read()``-supporting file-like object containing a JSON</source>
          <target state="translated">反序列化 *fp*(一个``.read()``支持的类似文件的对象,包含一个JSON文件)</target>
        </trans-unit>
        <trans-unit id="7f57e6bd195cf183fc0bdc9ae24284b1e5d6aa07" translate="yes" xml:space="preserve">
          <source>Deserialize *s* (a :class:`str` or :class:`unicode` instance containing a JSON</source>
          <target state="translated">反序列化 *s*(一个 :class:`str`或 :class:`unicode`实例,包含一个JSON文件)</target>
        </trans-unit>
        <trans-unit id="58a846eba037551e3edaa28f7c7dbd47766273e8" translate="yes" xml:space="preserve">
          <source>Development of dirtyjson happens on Github:</source>
          <target state="translated">dirtyjson的开发发生在Github上。</target>
        </trans-unit>
        <trans-unit id="1312725a0bb65854bed8e64bbfad5e5382b3df4f" translate="yes" xml:space="preserve">
          <source>Encodings that are not ASCII based (such as UCS-2) are not allowed, and</source>
          <target state="translated">不允许使用非 ASCII 编码(如 UCS-2),并且</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">例外情况</target>
        </trans-unit>
        <trans-unit id="0d449c794168922c45056708820610954e3b9048" translate="yes" xml:space="preserve">
          <source>If *fp.read()* returns :class:`str` then decoded JSON strings that contain</source>
          <target state="translated">如果*fp.read()*返回:class:`str`,那么包含以下内容的JSON字符串就会被解码。</target>
        </trans-unit>
        <trans-unit id="350072150174d3b775d974846b6f69b99aeb990c" translate="yes" xml:space="preserve">
          <source>If *s* is a :class:`str` instance and is encoded with an ASCII based encoding</source>
          <target state="translated">如果*s*是一个:class:`str`实例,并且使用基于ASCII的编码。</target>
        </trans-unit>
        <trans-unit id="d7e06b7a888b1177a2133b15abc536ae280f623a" translate="yes" xml:space="preserve">
          <source>If *s* is a :class:`str` then decoded JSON strings that contain</source>
          <target state="translated">如果*s*是一个:class:`str`,那么包含以下内容的JSON字符串将被解码</target>
        </trans-unit>
        <trans-unit id="1e51a849310d87982decec04b1742f487fea97d2" translate="yes" xml:space="preserve">
          <source>If the contents of *fp* are encoded with an ASCII based encoding other than</source>
          <target state="translated">如果*fp*的内容是用ASCII编码而不是</target>
        </trans-unit>
        <trans-unit id="9597d43b5348fc4203ca46caa26c651a475c0874" translate="yes" xml:space="preserve">
          <source>In our case, we store :class:`Position`.</source>
          <target state="translated">在我们的例子中,我们存储 :class:`Position`。</target>
        </trans-unit>
        <trans-unit id="487665d7e921bfcb7973264e9fa3e5b863bebba5" translate="yes" xml:space="preserve">
          <source>It also understands ``NaN``, ``Infinity``, and ``-Infinity`` as their</source>
          <target state="translated">它还将``NaN``、``Infinity``和``Infinity``理解为它们的。</target>
        </trans-unit>
        <trans-unit id="61a75ab528b7a12bc62292ebd66489d27bd17b3e" translate="yes" xml:space="preserve">
          <source>It is used for storing the position attributes for :class:`AttributedList`</source>
          <target state="translated">它用于存储 :class:`AttributedList`的位置属性。</target>
        </trans-unit>
        <trans-unit id="67125291cf10c87c6fe8581cc7cdd58f7ed80c80" translate="yes" xml:space="preserve">
          <source>JSON (JavaScript Object Notation) &amp;lt;http://json.org&amp;gt; is a subset of JavaScript</source>
          <target state="translated">JSON（JavaScript对象表示法）&amp;lt;http://json.org&amp;gt;是JavaScript的子集</target>
        </trans-unit>
        <trans-unit id="cd1b7d2f184c788c6c40c3831f227920363ccb0f" translate="yes" xml:space="preserve">
          <source>JSON decoder for Python that can extract data from the muck</source>
          <target state="translated">为Python设计的JSON解码器,可以从泥土中提取数据。</target>
        </trans-unit>
        <trans-unit id="3c31af323daa17c1ebc65f055ba47603eed16090" translate="yes" xml:space="preserve">
          <source>JSON int to be decoded. By default, this is equivalent to ``int(num_str)``.</source>
          <target state="translated">要解码的JSON int。默认情况下,这相当于``int(num_str)``。</target>
        </trans-unit>
        <trans-unit id="d60454ef21734ebe87a8161d440e5d61b544e188" translate="yes" xml:space="preserve">
          <source>Performs the following translations in decoding by default:</source>
          <target state="translated">默认情况下,在解码中执行以下翻译。</target>
        </trans-unit>
        <trans-unit id="01fba3c10555782f2c38a3e842be3fd16696bf22" translate="yes" xml:space="preserve">
          <source>Return the attributes associated with the specified *key* or ``None`` if</source>
          <target state="translated">返回与指定的*key*相关联的属性,如果有,则返回``None``。</target>
        </trans-unit>
        <trans-unit id="8fab449a92f0f8868c1ed414424f04075012408b" translate="yes" xml:space="preserve">
          <source>Returns the attributes for the value at the given *index*. In our case,</source>
          <target state="translated">返回给定*index*值的属性。在我们的例子中。</target>
        </trans-unit>
        <trans-unit id="2ee0611bde2938ee3c458d9bb748d77510f4c869" translate="yes" xml:space="preserve">
          <source>Set the *key* in the underlying ``dict`` to the *value* and also store</source>
          <target state="translated">将底层``dict``中的*key*设置为*value*,同时存储</target>
        </trans-unit>
        <trans-unit id="f548c370c1bdbc74240d8d2d82f40af5a0b797f7" translate="yes" xml:space="preserve">
          <source>Subclass of :exc:`ValueError` with the following additional attributes:</source>
          <target state="translated">:exc:`ValueError`的子类,具有以下附加属性。</target>
        </trans-unit>
        <trans-unit id="62d318f4f1aa68043a2bc6a22f43102154bd0b03" translate="yes" xml:space="preserve">
          <source>The :mod:`dirtyjson` module uses :class:`AttributedDict` and</source>
          <target state="translated">:mod:`dirtyjson`模块使用了 :class:`AttributedDict`和</target>
        </trans-unit>
        <trans-unit id="49348368764d639b9afa24152df542dc22fd0732" translate="yes" xml:space="preserve">
          <source>The JSON document being parsed</source>
          <target state="translated">正在解析的JSON文档</target>
        </trans-unit>
        <trans-unit id="f7ad3588c24e017f43af8b85f226a2e3094828d5" translate="yes" xml:space="preserve">
          <source>The code for :mod:`dirtyjson` is a fairly drastically rewritten version</source>
          <target state="translated">:mod:`dirtyjson`的代码是一个相当大的重写版本。</target>
        </trans-unit>
        <trans-unit id="76d28f49df3b9c6b0de7e0a3769d7de6e33b0293" translate="yes" xml:space="preserve">
          <source>The column corresponding to pos</source>
          <target state="translated">栏目对应的位置</target>
        </trans-unit>
        <trans-unit id="ec556d7ea71ebc68be5177945283ad4874de9524" translate="yes" xml:space="preserve">
          <source>The goal of :mod:`dirtyjson` is to read JSON objects out of files that are</source>
          <target state="translated">:mod:`dirtyjson`的目标是从文件中读取JSON对象,这些对象是</target>
        </trans-unit>
        <trans-unit id="c6aebee1745abf602ee9bc11b5a09910316e3e19" translate="yes" xml:space="preserve">
          <source>The line corresponding to pos</source>
          <target state="translated">与位置对应的线</target>
        </trans-unit>
        <trans-unit id="8f5207c9db3f7fe279f3814b995c8b5435afc953" translate="yes" xml:space="preserve">
          <source>The other arguments have the same meaning as in :func:`load`.</source>
          <target state="translated">其他参数与:func:`load`中的意义相同。</target>
        </trans-unit>
        <trans-unit id="e70ce5ee7409c8cb913ae6b1ba45895aa685d1cc" translate="yes" xml:space="preserve">
          <source>The start index of doc where parsing failed</source>
          <target state="translated">解析失败的文档的起始索引。</target>
        </trans-unit>
        <trans-unit id="6b76b45321a57535855ab3250e026b75d4652899" translate="yes" xml:space="preserve">
          <source>The unformatted error message</source>
          <target state="translated">未格式化的错误信息</target>
        </trans-unit>
        <trans-unit id="02b7e5406e899979ee37f8538fb3805ec8282b2e" translate="yes" xml:space="preserve">
          <source>This can be used to use another datatype or parser for JSON floats</source>
          <target state="translated">这可以用来使用另一种数据类型或JSON浮点数的解析器。</target>
        </trans-unit>
        <trans-unit id="f3763d1e75511ae645c6d3f008f9de309df01fa4" translate="yes" xml:space="preserve">
          <source>This can be used to use another datatype or parser for JSON integers</source>
          <target state="translated">这可以用来使用另一个数据类型或JSON整数的解析器。</target>
        </trans-unit>
        <trans-unit id="7da9479875097596df522522b0ad99023a60bd4e" translate="yes" xml:space="preserve">
          <source>This class is *NOT* robust. If you insert or delete items, the attributes</source>
          <target state="translated">这个类是*不*健壮的。如果你插入或删除项目,属性</target>
        </trans-unit>
        <trans-unit id="80c9b9d2ed6ffff12c1e407668c3596b5235167a" translate="yes" xml:space="preserve">
          <source>This is a very simple utility class that contains ``line`` and ``column``.</source>
          <target state="translated">这是一个非常简单的实用类,包含了 &quot;行 &quot;和 &quot;列&quot;。</target>
        </trans-unit>
        <trans-unit id="71b878e8b2403e1a57803b4c7d81c4b4bb0bb219" translate="yes" xml:space="preserve">
          <source>This is another very simple utility class that contains ``key`` and</source>
          <target state="translated">这是另一个非常简单的实用类,包含``key``和</target>
        </trans-unit>
        <trans-unit id="8d4455363582361016f7e07d5aea99e04c3162cf" translate="yes" xml:space="preserve">
          <source>This is very useful for reading an object from the middle of a JavaScript</source>
          <target state="translated">这对于从JavaScript的中间读取对象非常有用。</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="495d14c7deac9423dd8b129ebe7c2224e7a50390" translate="yes" xml:space="preserve">
          <source>UTF-8 (e.g. latin-1), then an appropriate *encoding* name must be specified.</source>
          <target state="translated">UTF-8(如拉丁-1),则必须指定一个适当的*编码*名称。</target>
        </trans-unit>
        <trans-unit id="b27bc16cad03d30176641ea3494b6d2a24c905a7" translate="yes" xml:space="preserve">
          <source>Unlike the standard :mod:`json` module, :mod:`dirtyjson` always does</source>
          <target state="translated">与标准的 :mod:`json`模块不同,:mod:`dirtyjson`总是会做</target>
        </trans-unit>
        <trans-unit id="6e37a0564d20a280063b7794f2fd0b324a6886fa" translate="yes" xml:space="preserve">
          <source>Using Decimal instead of float::</source>
          <target state="translated">用十进制代替浮点数:。</target>
        </trans-unit>
        <trans-unit id="8a8ec394cd4043e2f0f18da2292680c2037a0c30" translate="yes" xml:space="preserve">
          <source>``'NaN'``. This can be used to raise an exception if invalid JSON numbers are</source>
          <target state="translated">``'NaN'''。如果无效的JSON数字是</target>
        </trans-unit>
        <trans-unit id="a9b9e383f77aa5eb01bb272b03801a58bbd3b46d" translate="yes" xml:space="preserve">
          <source>``int(num_str, 0)`` before passing through to the converter passed is as</source>
          <target state="translated">传递给转换器之前的&amp;ldquo; int（num_str，0）&amp;rdquo;为</target>
        </trans-unit>
        <trans-unit id="9636c03d8f82a806629661e4165c53cdbc379a4a" translate="yes" xml:space="preserve">
          <source>``value``. Each of those is a :class:`Position` object specifying the</source>
          <target state="translated">``价值''。每个对象都是一个：class：`Position`对象，用于指定</target>
        </trans-unit>
        <trans-unit id="798272c5f8e01867ca768069c2ccffb5f1cfff71" translate="yes" xml:space="preserve">
          <source>allowed and should be decoded to :class:`unicode` first.</source>
          <target state="translated">允许,应先解码为:class:`unicode`。</target>
        </trans-unit>
        <trans-unit id="11bf10b583649e8bf7e629e77065770ab875d0d0" translate="yes" xml:space="preserve">
          <source>allows storing attributes for each value.</source>
          <target state="translated">允许为每个值存储属性。</target>
        </trans-unit>
        <trans-unit id="84d72bb3ee5494b81bde0baf81788e3d94634d5a" translate="yes" xml:space="preserve">
          <source>and :class:`KeyValuePosition`</source>
          <target state="translated">和:class:`KeyValuePosition`。</target>
        </trans-unit>
        <trans-unit id="5d136206738d96ea85768a62434f982edecd2141" translate="yes" xml:space="preserve">
          <source>and octal numbers.</source>
          <target state="translated">和八进制数。</target>
        </trans-unit>
        <trans-unit id="04d6a7243b5effae6e870607c604eb39ce786b0d" translate="yes" xml:space="preserve">
          <source>corresponding ``float`` values, which is outside the JSON spec.</source>
          <target state="translated">相应的``float``值,这不符合JSON规范。</target>
        </trans-unit>
        <trans-unit id="82c3664db8c6dc163df11b26bcc050db33dbd5de" translate="yes" xml:space="preserve">
          <source>document) to a Python object. :exc:`dirtyjson.Error` will be</source>
          <target state="translated">:exc:`dirtyjson.Error`将成为一个Python对象。</target>
        </trans-unit>
        <trans-unit id="08ab528bf5c6a0e65f7b67a6f4bb56836d404387" translate="yes" xml:space="preserve">
          <source>each key/value pair.</source>
          <target state="translated">每个键/值对。</target>
        </trans-unit>
        <trans-unit id="76ddfa7e843ce882c59db89039de8ef3cc294046" translate="yes" xml:space="preserve">
          <source>element. We use those attributes to store line and column numbers. You can use</source>
          <target state="translated">元素。我们使用这些属性来存储行号和列号。您可以使用这些属性来存储行号和列号。</target>
        </trans-unit>
        <trans-unit id="2cd2dfed50a80740d331fb2bf0a654e8f2e00cab" translate="yes" xml:space="preserve">
          <source>encountered or to provide alternate values for any of these constants.</source>
          <target state="translated">或为这些常数中的任何一个提供备用值。</target>
        </trans-unit>
        <trans-unit id="6b9b9cc867fcb6eed8cbce02e66ff87bd7a6f52e" translate="yes" xml:space="preserve">
          <source>enhancement.</source>
          <target state="translated">增强。</target>
        </trans-unit>
        <trans-unit id="e1ae90fc2f86d79825a96562add0919aed98dd02" translate="yes" xml:space="preserve">
          <source>file.</source>
          <target state="translated">文件。</target>
        </trans-unit>
        <trans-unit id="d3d4179a135073afccaf353416318299eb0bbde9" translate="yes" xml:space="preserve">
          <source>files. The returned data structure includes information about line and column</source>
          <target state="translated">文件。返回的数据结构包括有关行和列的信息。</target>
        </trans-unit>
        <trans-unit id="c00bdc981eea1b4e021284acaec014008cad2e7c" translate="yes" xml:space="preserve">
          <source>float to be decoded. By default, this is equivalent to ``float(num_str)``.</source>
          <target state="translated">要解码的浮点数。默认情况下,这相当于``float(num_str)``。</target>
        </trans-unit>
        <trans-unit id="783780642b4ad6074dc9701b78f55d7fe8871034" translate="yes" xml:space="preserve">
          <source>for a complex data parser or compiler.</source>
          <target state="translated">用于复杂的数据解析器或编译器。</target>
        </trans-unit>
        <trans-unit id="a2b4eb94122001eb9c2a773ffee38481b830b8b2" translate="yes" xml:space="preserve">
          <source>for storing the position attributes for :class:`AttributedDict`.</source>
          <target state="translated">用于存储 :class:`AttributedDict`的位置属性。</target>
        </trans-unit>
        <trans-unit id="105f9ea9aa4ecf0fb5d5cba36faf62bd2567919e" translate="yes" xml:space="preserve">
          <source>include single quotes, line comments, inline comments, dangling commas,</source>
          <target state="translated">包括单引号、行注释、内行注释、吊挂逗号。</target>
        </trans-unit>
        <trans-unit id="0a28965c789d51aefb531ff9218bf35695513799" translate="yes" xml:space="preserve">
          <source>key_column = pos.key.column</source>
          <target state="translated">key_column=pos.key.column</target>
        </trans-unit>
        <trans-unit id="5f8dd46adca7cab01fc1a3465f342d0dd00ef7a7" translate="yes" xml:space="preserve">
          <source>key_line = pos.key.line</source>
          <target state="translated">key_line=pos.key.line</target>
        </trans-unit>
        <trans-unit id="664823ad8389cb0434210c7bcd53abb5120662c1" translate="yes" xml:space="preserve">
          <source>line and column number contexts, a dirty JSON file can be used as source input</source>
          <target state="translated">行号和列号上下文中,一个肮脏的JSON文件可以被用作源输入</target>
        </trans-unit>
        <trans-unit id="a0d2b89be985853bef04fab0abe4f445af0b7c3d" translate="yes" xml:space="preserve">
          <source>littered with elements that do not fit the official JSON standard. By providing</source>
          <target state="translated">到处都是不符合JSON官方标准的元素。通过提供</target>
        </trans-unit>
        <trans-unit id="c4c07791a141a424c735dbe611c43aa7ef7a71bc" translate="yes" xml:space="preserve">
          <source>location in the original source string/file of the key and value. It is used</source>
          <target state="translated">键和值在原始源字符串/文件中的位置。它用于</target>
        </trans-unit>
        <trans-unit id="85a8c46e5dc9b38358b58c9047ee195aa9b4b1ff" translate="yes" xml:space="preserve">
          <source>maintains order like an ``OrderedDict`` and allows storing attributes for</source>
          <target state="translated">像``OrderedDict``一样维持秩序,并允许存储属性。</target>
        </trans-unit>
        <trans-unit id="3f0654f0194dac882aa3f51dc745e98e78d439c9" translate="yes" xml:space="preserve">
          <source>memory reasons. If your code expects only :class:`unicode` the appropriate</source>
          <target state="translated">内存的原因。如果你的代码只期待:class:`unicode`,那么适当的</target>
        </trans-unit>
        <trans-unit id="0a8a0494064673104b30b2cf2d8becd460ea79b3" translate="yes" xml:space="preserve">
          <source>no attributes exist for the key. In our case, we store</source>
          <target state="translated">键不存在属性。在我们的例子中,我们存储了</target>
        </trans-unit>
        <trans-unit id="8feb067fa8f12a28da06e57a5f911f0de921badf" translate="yes" xml:space="preserve">
          <source>numbers, so you can output more useful error messages. The input can also</source>
          <target state="translated">数字,所以你可以输出更有用的错误信息。输入也可以是</target>
        </trans-unit>
        <trans-unit id="f0aad7c6b8f9a811215c0082e8b565212aab7374" translate="yes" xml:space="preserve">
          <source>of the loader in :mod:`simplejson` so thanks go to Bob Ippolito of the</source>
          <target state="translated">在:mod:`simplejson`中的加载器,所以要感谢Bob Ippolito的。</target>
        </trans-unit>
        <trans-unit id="d8b01ef41035356cc26c5d56f452925692cd4eb7" translate="yes" xml:space="preserve">
          <source>only ASCII characters may be parsed as :class:`str` for performance and</source>
          <target state="translated">只有ASCII字符可以被解析为:class:`str`,以提高性能,同时也可以被解析为:class:`str`。</target>
        </trans-unit>
        <trans-unit id="03ef6ac632c706e21929d4f0582d25ef8f5a5c78" translate="yes" xml:space="preserve">
          <source>only the `load(s)` capability. To write JSON, use either the standard</source>
          <target state="translated">只有 &quot;load(s)&quot;功能。要编写JSON,可以使用标准的</target>
        </trans-unit>
        <trans-unit id="35e9fdceb38fe2700d26e80c02e1e2282613e108" translate="yes" xml:space="preserve">
          <source>other than UTF-8 (e.g. latin-1), then an appropriate *encoding* name must be</source>
          <target state="translated">而不是UTF-8(例如latin-1),那么适当的*编码*名称必须是</target>
        </trans-unit>
        <trans-unit id="9693521e27e355be599e8e5a4c781885db9bc81a" translate="yes" xml:space="preserve">
          <source>pos = d.attributes(key)</source>
          <target state="translated">pos=d.attribute(key)</target>
        </trans-unit>
        <trans-unit id="128ff0ab18f022b491b7abb84cded22ee0491ab5" translate="yes" xml:space="preserve">
          <source>pos = l.attributes(index)</source>
          <target state="translated">pos=l.attribute(index)</target>
        </trans-unit>
        <trans-unit id="35dddfa3077397e97e91c318f6a89a005bd6ee5b" translate="yes" xml:space="preserve">
          <source>raised if the given JSON document is not valid.</source>
          <target state="translated">如果给定的JSON文档无效,则引发该事件。</target>
        </trans-unit>
        <trans-unit id="45f4b7f8dc2d85054bb50bc393e95510bcb27bcd" translate="yes" xml:space="preserve">
          <source>raised if the given document is not valid.</source>
          <target state="translated">如果给定的文件无效,则会发出警报。</target>
        </trans-unit>
        <trans-unit id="5b95c83f57e1bae1acfdcf45208c9c1ca2d48d71" translate="yes" xml:space="preserve">
          <source>reading an object from a JavaScript file.</source>
          <target state="translated">从JavaScript文件中读取一个对象。</target>
        </trans-unit>
        <trans-unit id="9af9d976b88fb0f45628db976c0c7a467dad997d" translate="yes" xml:space="preserve">
          <source>setting of ``'utf-8'`` is fastest and should be using whenever possible.</source>
          <target state="translated">设置为``'utf-8'``是最快的,应尽可能使用。</target>
        </trans-unit>
        <trans-unit id="770c083a00eb8d6b9a6318a1786e9801c7cc9045" translate="yes" xml:space="preserve">
          <source>should be wrapped with ``codecs.getreader(fp)(encoding)``, or simply decoded</source>
          <target state="translated">应该用``codecs.getreader(fp)(encoding)``包装,或者简单地进行解码。</target>
        </trans-unit>
        <trans-unit id="54fa91d90d8f74cb656e1edd530b659e0dd6bcad" translate="yes" xml:space="preserve">
          <source>solution is decode *s* to :class:`unicode` prior to calling loads.</source>
          <target state="translated">解决方法是在调用loads之前将*s*解码为:class:`unicode`。</target>
        </trans-unit>
        <trans-unit id="38ae8bcd87e3d545b3592656da635b0412da05d7" translate="yes" xml:space="preserve">
          <source>solution is to wrap fp with a reader as demonstrated above.</source>
          <target state="translated">解决的办法是像上面演示的那样,用读卡器包住fp。</target>
        </trans-unit>
        <trans-unit id="3119a94b0ebb2cdbac230374f62a22acd61892d5" translate="yes" xml:space="preserve">
          <source>source file.</source>
          <target state="translated">源文件。</target>
        </trans-unit>
        <trans-unit id="c70ac4ff36d86dcd1da429828099124ddb7183e5" translate="yes" xml:space="preserve">
          <source>specified. Encodings that are not ASCII based (such as UCS-2) are not</source>
          <target state="translated">指定。不是基于ASCII码的编码(如UCS-2)不适用。</target>
        </trans-unit>
        <trans-unit id="b96181544ee9501392e31b06987147692a26e714" translate="yes" xml:space="preserve">
          <source>strings: ``true``, ``false``, ``null``, ``'-Infinity'``, ``'Infinity'``,</source>
          <target state="translated">字符串。``true``、``false``、``null``、``'-Infinity'``、``'Infinity'``。</target>
        </trans-unit>
        <trans-unit id="045b906efee7600d54cfdddfb35a35e5b19e4c38" translate="yes" xml:space="preserve">
          <source>subclass of its base type (``dict`` or ``list``) and can be used as if they were</source>
          <target state="translated">(``dict``或``list``)的子类,并且可以像使用</target>
        </trans-unit>
        <trans-unit id="88001324b099fbee3a101c8a8f35a6d0f1a2bfda" translate="yes" xml:space="preserve">
          <source>syntax (ECMA-262 3rd edition) used as a lightweight data interchange format.</source>
          <target state="translated">语法(ECMA-262第三版)作为一种轻量级数据交换格式使用。</target>
        </trans-unit>
        <trans-unit id="67d9645549c225ce3a54fc161c794e9a635f6746" translate="yes" xml:space="preserve">
          <source>that information to refer users back to the exact location in the original</source>
          <target state="translated">的信息,以使用户回到原来的确切位置。</target>
        </trans-unit>
        <trans-unit id="d2d40d4dc4684a4a801e5d4e28f08664ff13170a" translate="yes" xml:space="preserve">
          <source>the *parse_int* parameter. This is to enable automatic handling of hex</source>
          <target state="translated">参数的*parse_int*。这是为了实现自动处理十六进制的</target>
        </trans-unit>
        <trans-unit id="d19efee517b4235748e83077142fa7f27661a9a0" translate="yes" xml:space="preserve">
          <source>the first occurrence of either ``{`` or ``[``. This is very useful for</source>
          <target state="translated">``{``或``[```]的第一次出现。这对以下情况非常有用</target>
        </trans-unit>
        <trans-unit id="45e8ca04db96216263b175675afa4b241dfc5a37" translate="yes" xml:space="preserve">
          <source>the specified offset, while maintaining the correct line and column numbers.</source>
          <target state="translated">指定的偏移量,同时保持正确的行号和列号。</target>
        </trans-unit>
        <trans-unit id="8a2e4efe2ca3700581d42f095adfa25b37a68167" translate="yes" xml:space="preserve">
          <source>the standard class, but these have been enhanced to store attributes with each</source>
          <target state="translated">标准类,但这些标准类已被增强,以存储每个</target>
        </trans-unit>
        <trans-unit id="70e4980fd95952e0eb1963b4b4f7c843ca5b8451" translate="yes" xml:space="preserve">
          <source>to a :class:`unicode` object and passed to :func:`loads`. The default</source>
          <target state="translated">变成一个 :class:`unicode`对象,并传递给 :func:`loads`。默认的</target>
        </trans-unit>
        <trans-unit id="0245dae0231cce5a1fe12732c16b72171c3035a2" translate="yes" xml:space="preserve">
          <source>unquoted single-word keys, and hexadecimal and octal numbers.</source>
          <target state="translated">未引用的单字键,以及十六进制和八进制数字。</target>
        </trans-unit>
        <trans-unit id="dd6ba266cf5dfce218ccc78ba9835a1123fdc956" translate="yes" xml:space="preserve">
          <source>value_column = pos.column</source>
          <target state="translated">value_column=pos.column</target>
        </trans-unit>
        <trans-unit id="13a4a643e03cab44d57322fcb153329f65b9960a" translate="yes" xml:space="preserve">
          <source>value_column = pos.value.column</source>
          <target state="translated">value_column=pos.value.column</target>
        </trans-unit>
        <trans-unit id="473f27a7b81e0ed765b8955609663b590d345cfc" translate="yes" xml:space="preserve">
          <source>value_line = pos.line</source>
          <target state="translated">value_line=pos.line</target>
        </trans-unit>
        <trans-unit id="b1539dfab432a3b6deb11920769e889005b0bb7a" translate="yes" xml:space="preserve">
          <source>value_line = pos.value.line</source>
          <target state="translated">value_line=pos.value.line</target>
        </trans-unit>
        <trans-unit id="ff30f4f6a317b62b616c9948f915dbaada5e324e" translate="yes" xml:space="preserve">
          <source>we store :class:`KeyValuePosition`.</source>
          <target state="translated">我们存储:class:`KeyValuePosition`。</target>
        </trans-unit>
        <trans-unit id="b68da68439b901160fb074fc8b6b5c81d7184906" translate="yes" xml:space="preserve">
          <source>we store :class:`Position`. Retrieve position info like this::</source>
          <target state="translated">我们存储 :class:`Position`。检索位置信息是这样的:。</target>
        </trans-unit>
        <trans-unit id="5371d7dac72f83c7a0894b7c9b5dda310e76ac9e" translate="yes" xml:space="preserve">
          <source>whatever is passed in as *attributes* for later retrieval. In our case,</source>
          <target state="translated">作为*属性*传递进来的任何东西,以便以后检索。在我们的例子中:</target>
        </trans-unit>
        <trans-unit id="11bb6fbcb5f572117d6158b07a7ee4963ac4685e" translate="yes" xml:space="preserve">
          <source>will get out of sync. Making this a non-naive class would be a nice</source>
          <target state="translated">会变得不同步。将其打造成一个非naive类将是一个很好的</target>
        </trans-unit>
        <trans-unit id="e8c635314f5be5a0b095aa243f6409b64391a9f5" translate="yes" xml:space="preserve">
          <source>| JSON          | Python                  |</source>
          <target state="translated">| JSON | Python |</target>
        </trans-unit>
        <trans-unit id="ce58eaea7d62ddd61404943a6569c3b3207778ee" translate="yes" xml:space="preserve">
          <source>| array         | :class:`AttributedList` |</source>
          <target state="translated">| 数组| ：class：ʻAttributedList` |</target>
        </trans-unit>
        <trans-unit id="2c9d0fc8207b541f0bd5223d34669bce9f0a4d28" translate="yes" xml:space="preserve">
          <source>| false         | False                   |</source>
          <target state="translated">| 错误 错误|</target>
        </trans-unit>
        <trans-unit id="67021ff8c444da800a1818f864f9eef9483307ab" translate="yes" xml:space="preserve">
          <source>| null          | None                    |</source>
          <target state="translated">| 空| 无|</target>
        </trans-unit>
        <trans-unit id="7a890f0f7a6bdc7a189fcf1d06a1a48614643fb7" translate="yes" xml:space="preserve">
          <source>| number (int)  | int, long               |</source>
          <target state="translated">| 数字（int）| int，长|</target>
        </trans-unit>
        <trans-unit id="b079360d3d9fec86792432dc2139e9a0b8a94bdf" translate="yes" xml:space="preserve">
          <source>| number (real) | float                   |</source>
          <target state="translated">| 数字（实数）| 浮动|</target>
        </trans-unit>
        <trans-unit id="f967f09f1b73b9c652807afe2234fd45538470fd" translate="yes" xml:space="preserve">
          <source>| object        | :class:`AttributedDict` |</source>
          <target state="translated">| 对象 ：class：ʻAttributedDict` |</target>
        </trans-unit>
        <trans-unit id="2091856b1fe01414f6a88b815006626cd1686ad1" translate="yes" xml:space="preserve">
          <source>| string        | unicode                 |</source>
          <target state="translated">| 字符串 unicode |</target>
        </trans-unit>
        <trans-unit id="8726a0c04fbd2cba5c1b2ffbdd8c5eb71a8b1f89" translate="yes" xml:space="preserve">
          <source>| true          | True                    |</source>
          <target state="translated">| 真实| 是的</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
