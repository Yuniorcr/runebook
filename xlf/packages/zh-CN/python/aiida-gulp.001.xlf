<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/aiida-gulp/">
    <body>
      <group id="aiida-gulp">
        <trans-unit id="8bea79bb08a7c7126aee0b3e1c0f1633305d7988" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&quot;https://readthedocs.org/projects/aiida-gulp&quot;&gt;https://readthedocs.org/projects/aiida-gulp&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;文档&lt;/strong&gt;：&lt;a href=&quot;https://readthedocs.org/projects/aiida-gulp&quot;&gt;https&lt;/a&gt; : //readthedocs.org/projects/aiida-gulp</target>
        </trans-unit>
        <trans-unit id="5ba25dd0bcc09019807bd8a7d1923eb7e8eefcfa" translate="yes" xml:space="preserve">
          <source>AiiDA plugin for running the &lt;a href=&quot;http://gulp.curtin.edu.au&quot;&gt;GULP&lt;/a&gt; code.</source>
          <target state="translated">AiiDA插件，用于运行&lt;a href=&quot;http://gulp.curtin.edu.au&quot;&gt;GULP&lt;/a&gt;代码。</target>
        </trans-unit>
        <trans-unit id="064b084ddfa5980c356ada672415a3db13348d24" translate="yes" xml:space="preserve">
          <source>AiiDA plugin for running the GULP MD code</source>
          <target state="translated">用于运行GULP MD代码的AiiDA插件。</target>
        </trans-unit>
        <trans-unit id="b1e1dc3e74257a0e68ee9e6a941ff4f078cc9aa7" translate="yes" xml:space="preserve">
          <source>Because GULP is a licensed software, it is not possible to source a copy of the executable on Travis CI.
Therefore, a mock executable (&lt;code&gt;gulp_mock&lt;/code&gt;) has been created for testing purposes (which also speeds up test runs).</source>
          <target state="translated">由于GULP是许可软件，因此无法在Travis CI上获取可执行文件的副本。因此，已经创建了一个模拟可执行文件（ &lt;code&gt;gulp_mock&lt;/code&gt; ）以用于测试目的（这也加快了测试运行速度）。</target>
        </trans-unit>
        <trans-unit id="5b7338bc551bba13411e943ea08190dc6e2283bd" translate="yes" xml:space="preserve">
          <source>Coding Style Requirements</source>
          <target state="translated">编码风格要求</target>
        </trans-unit>
        <trans-unit id="b37456c4530be810dc040f50da72eda09addfb0a" translate="yes" xml:space="preserve">
          <source>Contact</source>
          <target state="translated">联系我们</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">发展</target>
        </trans-unit>
        <trans-unit id="1a17225faf9583b117033f7f71ebde52d1ca17e2" translate="yes" xml:space="preserve">
          <source>Editors like VS Code also have automatic code reformat utilities, which can adhere to this standard.</source>
          <target state="translated">像VS Code这样的编辑器也有自动的代码重新格式化实用程序,可以坚持这个标准。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="e26e73abbf69ebd9240ff6fc800814bf5fb40a6b" translate="yes" xml:space="preserve">
          <source>Installing with &lt;code&gt;aiida-gulp[code_style]&lt;/code&gt; makes the &lt;a href=&quot;https://pre-commit.com/&quot;&gt;pre-commit&lt;/a&gt;
package available, which will ensure these tests are passed by reformatting the code
and testing for lint errors before submitting a commit.
It can be setup by:</source>
          <target state="translated">使用 &lt;code&gt;aiida-gulp[code_style]&lt;/code&gt; 进行安装可使&lt;a href=&quot;https://pre-commit.com/&quot;&gt;预提交&lt;/a&gt; 包可用，这将通过重新格式化代码并在提交之前进行测试以检查皮棉错误来确保通过这些测试。可以通过以下方式设置：</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="b7437a1c0fcbb342c57b167b6591bc0e352279aa" translate="yes" xml:space="preserve">
          <source>Optionally you can run &lt;code&gt;black&lt;/code&gt; and &lt;code&gt;flake8&lt;/code&gt; separately:</source>
          <target state="translated">（可选）您可以分别运行 &lt;code&gt;black&lt;/code&gt; 和 &lt;code&gt;flake8&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0e09dec247f114d23fa7e596fc0cf587ae982e36" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;LICENSE&lt;/code&gt; file</source>
          <target state="translated">请参阅 &lt;code&gt;LICENSE&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="b74def474e4d0c70ebf6a5aca28b9bbfbb687a1d" translate="yes" xml:space="preserve">
          <source>Testing against mock GULP executables</source>
          <target state="translated">对模拟GULP可执行文件进行测试</target>
        </trans-unit>
        <trans-unit id="7e51cd37d04ca9b2a32c86b78f8d440a9c249780" translate="yes" xml:space="preserve">
          <source>The code style is tested using &lt;a href=&quot;http://flake8.pycqa.org&quot;&gt;flake8&lt;/a&gt;,
with the configuration set in &lt;code&gt;.flake8&lt;/code&gt;, and code should be formatted with &lt;a href=&quot;https://github.com/ambv/black&quot;&gt;black&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;http://flake8.pycqa.org&quot;&gt;flake8&lt;/a&gt;测试了代码样式，并在 &lt;code&gt;.flake8&lt;/code&gt; 中设置了配置，并且代码应使用&lt;a href=&quot;https://github.com/ambv/black&quot;&gt;black&lt;/a&gt;格式化。</target>
        </trans-unit>
        <trans-unit id="f010ab5eb866b006e1ccbd7d501a5f902477cddf" translate="yes" xml:space="preserve">
          <source>The following will discover and run all unit test:</source>
          <target state="translated">下面将发现并运行所有单元测试。</target>
        </trans-unit>
        <trans-unit id="f38b764388d50cbf611cec76683db7b45de9651f" translate="yes" xml:space="preserve">
          <source>This executable computes the md5 hash of the supplied input file and tries to match it against a dictionary of
precomputed hashes. If found, the executable will write the matching output (from &lt;code&gt;test/output_files&lt;/code&gt;) to stdout.</source>
          <target state="translated">此可执行文件将计算提供的输入文件的md5哈希，并尝试将其与预先计算的哈希字典匹配。如果找到，可执行文件会将匹配的输出（来自 &lt;code&gt;test/output_files&lt;/code&gt; ）写入标准输出。</target>
        </trans-unit>
        <trans-unit id="2a593cbca18eb7bfa1ccb4698b36b79b1eb2b95f" translate="yes" xml:space="preserve">
          <source>To call the actual executable (e.g. &lt;code&gt;gulp&lt;/code&gt; instead of &lt;code&gt;gulp_mock&lt;/code&gt;):</source>
          <target state="translated">要调用的实际可执行文件（例如， &lt;code&gt;gulp&lt;/code&gt; ，而不是 &lt;code&gt;gulp_mock&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="72a1f84c6ec5d42ba418fc323292033d03024ddc" translate="yes" xml:space="preserve">
          <source>To install from Conda (recommended)::</source>
          <target state="translated">从Conda安装(推荐):。</target>
        </trans-unit>
        <trans-unit id="942fc39ee21e25bbf9998d028a55f9b20020e084" translate="yes" xml:space="preserve">
          <source>To install from pypi::</source>
          <target state="translated">要从pypi安装:。</target>
        </trans-unit>
        <trans-unit id="3a47824d815f3952ac6b40f5273953b64da8a5ae" translate="yes" xml:space="preserve">
          <source>To install the development version:</source>
          <target state="translated">要安装开发版。</target>
        </trans-unit>
        <trans-unit id="aa416cf9d553c66370ab630fff2d9813d69efac5" translate="yes" xml:space="preserve">
          <source>To omit tests which call external executables (like &lt;code&gt;gulp&lt;/code&gt;):</source>
          <target state="translated">要省略调用外部可执行文件（如 &lt;code&gt;gulp&lt;/code&gt; ）的测试：</target>
        </trans-unit>
        <trans-unit id="2f3693b3d422f48ef6276722bbbaba95b1333be6" translate="yes" xml:space="preserve">
          <source>To output the results of calcjob executions to a specific directory:</source>
          <target state="translated">将 calcjob 的执行结果输出到特定的目录。</target>
        </trans-unit>
        <trans-unit id="4a3fd398c49a92f4ae350a7d4880c70e7fab86ef" translate="yes" xml:space="preserve">
          <source>aiida-gulp</source>
          <target state="translated">饭后甜点</target>
        </trans-unit>
        <trans-unit id="d2616c3ea66ab26d3f1a25ec5d3f5b775206bf4a" translate="yes" xml:space="preserve">
          <source>chrisj_sewell@hotmail.com</source>
          <target state="translated">chrisj_sewell@hotmail.com</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
