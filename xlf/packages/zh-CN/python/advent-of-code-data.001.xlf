<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/advent-of-code-data/">
    <body>
      <group id="advent-of-code-data">
        <trans-unit id="1b2e9e17feec6b6c93a4fa1130f257bdd2213d33" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;entry-points&amp;rdquo;. My entry-point name is &amp;ldquo;wim&amp;rdquo; so an example for running &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/blob/master/setup.py#L30&quot;&gt;my code&lt;/a&gt; (after</source>
          <target state="translated">&amp;ldquo;入口点&amp;rdquo;。我的入口点名称是&amp;ldquo; wim&amp;rdquo;，因此是一个运行&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/blob/master/setup.py#L30&quot;&gt;我的代码&lt;/a&gt;的示例（</target>
        </trans-unit>
        <trans-unit id="d8fdd9d293c9f6bcb0db2d99e41af186443fcdb7" translate="yes" xml:space="preserve">
          <source>) would be:</source>
          <target state="translated">） 将是：</target>
        </trans-unit>
        <trans-unit id="a4ec5bf3b1cf651414f64c5e2105a4f3fdb657a7" translate="yes" xml:space="preserve">
          <source>--timeout=120</source>
          <target state="translated">--timeout = 120</target>
        </trans-unit>
        <trans-unit id="9a318765459dffc2bf0a10290db5d22be5a86579" translate="yes" xml:space="preserve">
          <source>. To remove any
caches, you may simply delete whatever files you want under that directory tree.
If you&amp;rsquo;d prefer to use a different path, then export an</source>
          <target state="translated">。要删除任何缓存，您可以简单地删除该目录树下所需的任何文件。如果您想使用其他路径，请导出</target>
        </trans-unit>
        <trans-unit id="225fcf6baa361d67a2aeb4fbcece415e453538d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;New in version 0.4.0.&lt;/em&gt; Basic use:</source>
          <target state="translated">&lt;em&gt;版本0.4.0中的新功能。&lt;/em&gt;基本用途：</target>
        </trans-unit>
        <trans-unit id="ef100592788fef309840b1bcd0d4e5f466c04399" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;New in version 0.8.0.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;0.8.0版中的新功能。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5155bfbb7b89cdc5612b464af7a32c49afb2d758" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If you don&amp;rsquo;t like the env var, you could also put into a text file
in your home directory (use the filename</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;如果您不喜欢env var，也可以将其放入主目录中的文本文件中（使用文件名</target>
        </trans-unit>
        <trans-unit id="e05f2a02b3a3184f93fc5496cca40290861397e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;every problem has a solution that completes in at most 15 seconds on ten-year-old hardware&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;每个问题都有一个解决方案，该解决方案在使用十年的硬件上最多可在15秒内完成&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36b220dcc983e82368cdf7331080aba85fa9ade8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:  Please use version 0.3+ of this library.&lt;/strong&gt;  It memoizes successful
requests client side and rate-limits the get_data function, as
&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/3v64sb/aoc_is_fragile_please_be_gentle/&quot;&gt;requested by the AoC author&lt;/a&gt;.
Thanks!</source>
          <target state="translated">&lt;strong&gt;注意：请使用此库的0.3+版本。&lt;/strong&gt; 根据&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/3v64sb/aoc_is_fragile_please_be_gentle/&quot;&gt;AoC作者的要求，&lt;/a&gt;它会记住客户端成功的请求并限制get_data函数的速率 。谢谢！</target>
        </trans-unit>
        <trans-unit id="2fbb2b999fdb6dd71977a1889b25886835375669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Puzzle inputs differ by user.&lt;/strong&gt;   So export your session ID, for example:</source>
          <target state="translated">&lt;strong&gt;拼图输入因用户而异。&lt;/strong&gt; 因此，导出您的会话ID，例如：</target>
        </trans-unit>
        <trans-unit id="a3d0a97a9b904df6770cfb7ecba2a7cae76040ae" translate="yes" xml:space="preserve">
          <source>A filename like</source>
          <target state="translated">像这样的文件名</target>
        </trans-unit>
        <trans-unit id="d250512ad0908b0d3841c37a98c260126298254d" translate="yes" xml:space="preserve">
          <source>AOCD_DIR</source>
          <target state="translated">AOCD_DIR</target>
        </trans-unit>
        <trans-unit id="1974aa2fc5c5c34b8aeb417f79433857e33b4a04" translate="yes" xml:space="preserve">
          <source>As you can see above, I actually had incorrect code for &lt;a href=&quot;https://adventofcode.com/2017/day/20&quot;&gt;2017 Day 20: Particle Swarm&lt;/a&gt;, but that &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/commit/31e454270001c6d06b46014fe5dafd03e29507b8&quot;&gt;bug&lt;/a&gt; only showed up for the google token&amp;rsquo;s dataset. Whoops. Also, it looks like my algorithm for &lt;a href=&quot;https://adventofcode.com/2017/day/13&quot;&gt;2017 Day 13: Packet Scanners&lt;/a&gt; was kinda garbage. Too slow. According to &lt;a href=&quot;https://adventofcode.com/about&quot;&gt;AoC FAQ&lt;/a&gt;:</source>
          <target state="translated">如您在上面看到的，我实际上在&lt;a href=&quot;https://adventofcode.com/2017/day/20&quot;&gt;2017年第20天&lt;/a&gt;有不正确的代码：Particle Swarm，但是该&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/commit/31e454270001c6d06b46014fe5dafd03e29507b8&quot;&gt;错误&lt;/a&gt;只出现在Google令牌的数据集中。哎呀 另外，看起来我&lt;a href=&quot;https://adventofcode.com/2017/day/13&quot;&gt;2017年第13天的&lt;/a&gt;算法是：Packet Scanners有点垃圾。太慢了。根据&lt;a href=&quot;https://adventofcode.com/about&quot;&gt;AoC常见问题解答&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="db272f7c87edbde6cc2f248058913a294a2468b5" translate="yes" xml:space="preserve">
          <source>Automated submission</source>
          <target state="translated">自动提交</target>
        </trans-unit>
        <trans-unit id="d6ade166fe0e611ebbb19da532f22644c0ad36e0" translate="yes" xml:space="preserve">
          <source>By the way, the</source>
          <target state="translated">顺便说一下</target>
        </trans-unit>
        <trans-unit id="7839d2cb0f40ad3ec7e268709443f9e7d0de0890" translate="yes" xml:space="preserve">
          <source>Cache invalidation?</source>
          <target state="translated">缓存无效?</target>
        </trans-unit>
        <trans-unit id="0f2b1654adc0aaa4bde0e26ace5dd519073fc5fb" translate="yes" xml:space="preserve">
          <source>Ever tried running your code against other people&amp;rsquo;s inputs? AoC is full of tricky edge cases. You may find that sometimes you&amp;rsquo;re only getting the right answer by luck, and your code will fail on some other dataset. Using aocd, you can collect a few different auth tokens for each of your accounts (github/google/reddit/twitter) and verify your answers across multiple datasets.</source>
          <target state="translated">是否曾经尝试过根据他人的意见运行您的代码？AoC充满了棘手的情况。您可能会发现，有时候运气只能得到正确的答案，并且您的代码将在其他某些数据集上失败。使用aocd，您可以为每个帐户（github / google / reddit / twitter）收集几个不同的身份验证令牌，并跨多个数据集验证答案。</target>
        </trans-unit>
        <trans-unit id="25cf984134c76f36011f4e8caf33c135ae402d12" translate="yes" xml:space="preserve">
          <source>Get your puzzle data with a single import</source>
          <target state="translated">只需一次导入,即可获得您的谜题数据</target>
        </trans-unit>
        <trans-unit id="0587351e2a97fb4879b4ba306965618c0b6d2069" translate="yes" xml:space="preserve">
          <source>Get your puzzle data with a single import statement:</source>
          <target state="translated">通过一个导入语句获得您的拼图数据。</target>
        </trans-unit>
        <trans-unit id="df8b8387fbd3cba196358c3a1355b46b0b5b12a8" translate="yes" xml:space="preserve">
          <source>How does this library work?</source>
          <target state="translated">这个图书馆是如何运作的?</target>
        </trans-unit>
        <trans-unit id="d7cf73d518daaad4f01a2ee97065f13f4ef611bf" translate="yes" xml:space="preserve">
          <source>Input data is via regular attribute access. Example usage:</source>
          <target state="translated">输入数据是通过常规属性访问。使用示例:</target>
        </trans-unit>
        <trans-unit id="cdb527421c9c06ec85d558465c535244b7d3f645" translate="yes" xml:space="preserve">
          <source>Install with pip</source>
          <target state="translated">用pip安装</target>
        </trans-unit>
        <trans-unit id="46f509ef372988eff1d4c7c989eadb78d59c046c" translate="yes" xml:space="preserve">
          <source>It will automatically get today&amp;rsquo;s data at import time, if used within the
interactive interpreter.  Otherwise, the date is found by introspection of the
path and file name from which</source>
          <target state="translated">如果在交互式解释器中使用，它将在导入时自动获取今天的数据。否则，通过内省路径和文件名来查找日期。</target>
        </trans-unit>
        <trans-unit id="28525f7708649489e52e7a247e826db23f0b0c85" translate="yes" xml:space="preserve">
          <source>Might be useful for lazy Pythonistas and speedhackers.</source>
          <target state="translated">可能对懒惰的Pythonistas和speedhackers有用。</target>
        </trans-unit>
        <trans-unit id="612eecb9314a4b1cb2288e1c7b1f85d28e6af9a4" translate="yes" xml:space="preserve">
          <source>Note that the same filename introspection of year/day also works for automated
submission. There&amp;rsquo;s also introspection of the &amp;ldquo;level&amp;rdquo;, i.e. part a or part b,
aocd can automatically determine if you have already completed part a or not
and submit your answer for the correct part accordingly. In this case, just use:</source>
          <target state="translated">请注意，年份/天的相同文件名自省也适用于自动提交。还可以对&amp;ldquo;级别&amp;rdquo;进行自省，即a或b部分，aocd可以自动确定您是否已经完成a部分，并相应地提交正确部分的答案。在这种情况下，只需使用：</target>
        </trans-unit>
        <trans-unit id="528a1b37f5723c9b679e7c37e9f60ae9dee0104c" translate="yes" xml:space="preserve">
          <source>OOP-style interfaces</source>
          <target state="translated">OOP风格的接口</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">快速启动</target>
        </trans-unit>
        <trans-unit id="8e6764df4041d2c9aea627de23941fd71b1edd7a" translate="yes" xml:space="preserve">
          <source>Solutions can be executed using &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptools style plugins&lt;/a&gt; for your code, i.e. the</source>
          <target state="translated">可以使用&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptools样式插件&lt;/a&gt;为您的代码执行解决方案，即</target>
        </trans-unit>
        <trans-unit id="9218f9b92da5694d9a6faa484618216027baf3af" translate="yes" xml:space="preserve">
          <source>Submitting answers is also by regular attribute access. Any incorrect answers you submitted are remembered, and aocd will prevent you from attempting to submit the same incorrect value twice:</source>
          <target state="translated">提交答案也是通过常规属性访问。你提交的任何错误答案都会被记住,aocd会防止你试图两次提交相同的错误值。</target>
        </trans-unit>
        <trans-unit id="7d394ae7b0313fdc168ce960bc0b8cb1f11d1c40" translate="yes" xml:space="preserve">
          <source>The response message from AoC will be printed in the terminal. If you gave
the right answer, then the puzzle will be refreshed in your web browser
(so you can read the instructions for the next part, for example).
&lt;strong&gt;Proceed with caution!&lt;/strong&gt; If you submit wrong guesses, your user &lt;strong&gt;WILL&lt;/strong&gt;
get rate-limited by Eric, so don&amp;rsquo;t call submit until you&amp;rsquo;re fairly confident
you have a correct answer!</source>
          <target state="translated">来自AoC的响应消息将打印在终端中。如果您给出了正确的答案，那么拼图将在您的Web浏览器中刷新（例如，您可以阅读下一部分的说明）。 &lt;strong&gt;请谨慎操作！&lt;/strong&gt;如果您提交错误的猜测，您的用户&lt;strong&gt;将&lt;/strong&gt; 受到Eric的限制，因此在您完全确定自己有正确答案之前，请不要致电Submit。</target>
        </trans-unit>
        <trans-unit id="824fff4f7103f9014fa581a196185b55db11db35" translate="yes" xml:space="preserve">
          <source>This is a cookie which is set when you login to AoC.  You can find it with
your browser inspector.  If you&amp;rsquo;re hacking on AoC at all you probably already
know these kind of tricks, but if you need help with that part then you can
&lt;a href=&quot;https://github.com/wimglenn/advent-of-code/issues/1&quot;&gt;look here&lt;/a&gt;.</source>
          <target state="translated">这是您登录AoC时设置的cookie。您可以使用浏览器检查器找到它。如果您完全是使用AoC的黑客，那么您可能已经知道这些技巧，但是如果您需要有关这方面的帮助，则可以 &lt;a href=&quot;https://github.com/wimglenn/advent-of-code/issues/1&quot;&gt;在此处查看&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="775949f19085bf88678d7ee5fc7179e45803737b" translate="yes" xml:space="preserve">
          <source>This means your filenames should be something sensible. The examples below
should all parse correctly, because they have digits in the path that are
unambiguously recognisable as AoC years (2015+) or days (1-25).</source>
          <target state="translated">这意味着你的文件名应该是合理的。下面的例子应该都能正确解析,因为它们的路径中的数字可以明确识别为AoC年(2015+)或日(1-25)。</target>
        </trans-unit>
        <trans-unit id="67b23c30ea0f0aa806f36de17699b8e950396d29" translate="yes" xml:space="preserve">
          <source>To see an example of how to setup the entry-point for your code, look at &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-sample&quot;&gt;advent-of-code-sample&lt;/a&gt; for some inspiration. After dumping a bunch of session tokens into</source>
          <target state="translated">要查看有关如何为代码设置入口点的示例，请参见&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-sample&quot;&gt;出现代码示例&lt;/a&gt;以获取一些启发。将一堆会话令牌转储到</target>
        </trans-unit>
        <trans-unit id="77b872c43b6a974ae65c90fdf0501b3580f30d8a" translate="yes" xml:space="preserve">
          <source>Verify your code against multiple different inputs</source>
          <target state="translated">根据多个不同的输入验证您的代码</target>
        </trans-unit>
        <trans-unit id="ec801f28f8053d098edbbf492efa62800c748382" translate="yes" xml:space="preserve">
          <source>aoc</source>
          <target state="translated">aoc</target>
        </trans-unit>
        <trans-unit id="8f784f7d3dcb7ef84fefb5b477c2179f480b3486" translate="yes" xml:space="preserve">
          <source>aocd</source>
          <target state="translated">aocd</target>
        </trans-unit>
        <trans-unit id="68175c7c1f5063a4a4525895cf8a3a6402462970" translate="yes" xml:space="preserve">
          <source>aocd.get_data()</source>
          <target state="translated">aocd.get_data()。</target>
        </trans-unit>
        <trans-unit id="4636a20401bba819d6bbde7a25493e482d2dfa4b" translate="yes" xml:space="preserve">
          <source>console script:</source>
          <target state="translated">控制台脚本。</target>
        </trans-unit>
        <trans-unit id="e8b70ff60cdffd656d93028218065671f39e131c" translate="yes" xml:space="preserve">
          <source>environment
variable with the desired location.</source>
          <target state="translated">环境变量与所需位置。</target>
        </trans-unit>
        <trans-unit id="d9d7dfd7b48c9ea92ca6b64d16c353f0dfe33606" translate="yes" xml:space="preserve">
          <source>function
instead and have a nice day!</source>
          <target state="translated">功能代替,祝你有个愉快的一天</target>
        </trans-unit>
        <trans-unit id="5b6491462ec4fa1e8f3abe89ea556e6aabd610f1" translate="yes" xml:space="preserve">
          <source>module was imported.</source>
          <target state="translated">模块被导入。</target>
        </trans-unit>
        <trans-unit id="b5335edcecc401d1dda3c9d9fd1e901d60b0c742" translate="yes" xml:space="preserve">
          <source>pip install advent-of-code-wim</source>
          <target state="translated">pip install advent-of-code-wim</target>
        </trans-unit>
        <trans-unit id="4dee32b918a39a51856fcda6beecfa1d512a63c1" translate="yes" xml:space="preserve">
          <source>pkg_resources</source>
          <target state="translated">pkg_resources</target>
        </trans-unit>
        <trans-unit id="b49ab0b753786ae2ed4ea7fa9bca6b235b0902bf" translate="yes" xml:space="preserve">
          <source>problem_one.py</source>
          <target state="translated">problem_one.py</target>
        </trans-unit>
        <trans-unit id="ce3cf783516d45ba23bcb0d2c7abffc4e196f1e6" translate="yes" xml:space="preserve">
          <source>runner will kill your code if it takes more than 60 seconds, you can increase/decrease this by passing a command-line option, e.g.</source>
          <target state="translated">如果耗时超过60秒,runner就会杀死你的代码,你可以通过传递一个命令行选项来增加/减少这个时间,例如</target>
        </trans-unit>
        <trans-unit id="d4c30e6b0c1d4ae031c38bf56b0213f760f89ca3" translate="yes" xml:space="preserve">
          <source>saves puzzle inputs, answers, names, and your bad guesses to avoid hitting
the AoC servers any more often than strictly necessary (this also speeds things up).
All data is persisted in plain text files under</source>
          <target state="translated">保存谜题输入、答案、名称和您的错误猜测,以避免在必要的情况下频繁访问AoC服务器(这也加快了速度)。所有的数据都会被保存在纯文本文件中,文件名为</target>
        </trans-unit>
        <trans-unit id="1a25a44a4eef5700554e711d2742dd538985ee78" translate="yes" xml:space="preserve">
          <source>will not work, so don&amp;rsquo;t do that.  If
you don&amp;rsquo;t like weird frame hacks, just use the</source>
          <target state="translated">将不起作用，所以不要那样做。如果您不喜欢怪异的框架骇客，只需使用</target>
        </trans-unit>
        <trans-unit id="140c6c5361f76963bfcf7b9eebb0b1f32d1c9ce0" translate="yes" xml:space="preserve">
          <source>you could do something like this by running the</source>
          <target state="translated">你可以通过运行</target>
        </trans-unit>
        <trans-unit id="7c76313496eb19c8df7b0e3a65d156c64459b345" translate="yes" xml:space="preserve">
          <source>~/.config/aocd</source>
          <target state="translated">〜/ .config / aocd</target>
        </trans-unit>
        <trans-unit id="71fe30b39f5e7bffad492e4b2c5f0342e12387c3" translate="yes" xml:space="preserve">
          <source>~/.config/aocd/token</source>
          <target state="translated">〜/ .config / aocd /令牌</target>
        </trans-unit>
        <trans-unit id="3f8f384180c34215ff4d24469fe7e751d30a1376" translate="yes" xml:space="preserve">
          <source>~/.config/aocd/tokens.json</source>
          <target state="translated">〜/ .config / aocd / tokens.json</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
