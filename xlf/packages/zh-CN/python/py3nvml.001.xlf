<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/py3nvml/">
    <body>
      <group id="py3nvml">
        <trans-unit id="704431f167e4c89d2c536290e8106e4498938413" translate="yes" xml:space="preserve">
          <source>(Added by me - not ported from NVIDIA library)</source>
          <target state="translated">（由我添加-不从NVIDIA库中移植）</target>
        </trans-unit>
        <trans-unit id="227bc31d7b36b370ad9fb845a11f08a6ab053529" translate="yes" xml:space="preserve">
          <source>(below here is everything ported from pynvml)</source>
          <target state="translated">（下面是从pynvml移植的所有内容）</target>
        </trans-unit>
        <trans-unit id="60bbdaa80921b503f91ea89f2c2ae243d07ab490" translate="yes" xml:space="preserve">
          <source>(this shows a slightly modified process info pane below).</source>
          <target state="translated">（这在下面显示了一个稍微修改的过程信息窗格）。</target>
        </trans-unit>
        <trans-unit id="7cc55a87b4033159e9476add24ac25052695ef54" translate="yes" xml:space="preserve">
          <source>, which checks the memory usage of a gpu, this
function checks if a process is running on a gpu. For a system with N gpus, returns a list of N booleans, where the nth
value is True if no process was found running on gpu n. An example use is:</source>
          <target state="translated">，它检查GPU的内存使用情况，此函数检查进程是否在GPU上运行。对于具有N个GPU的系统，返回N个布尔值的列表，如果未在gpu n上运行任何进程，则第n个值为True。一个示例用法是：</target>
        </trans-unit>
        <trans-unit id="91934a72bc889f2943dc05bf3a9f58516be89cb3" translate="yes" xml:space="preserve">
          <source>. It simply returns a list of integers
with the number of processes running on each gpu. E.g. if you had 1 process
running on gpu 5 in an 8 gpu system, you would expect to get the following:</source>
          <target state="translated">。它只是返回一个整数列表，其中包含每个gpu上运行的进程数。例如，如果您在8 gpu系统中的gpu 5上运行了1个进程，那么您将获得以下信息：</target>
        </trans-unit>
        <trans-unit id="12e74228fcf492e4b44240660f7f6beb1d738614" translate="yes" xml:space="preserve">
          <source>. The print code is horribly messy but the query code is very
simple and should be understandable.</source>
          <target state="translated">。打印代码非常混乱，但是查询代码非常简单，应该可以理解。</target>
        </trans-unit>
        <trans-unit id="d8c214ff645bee46d196d7d7c1547798fbe8173f" translate="yes" xml:space="preserve">
          <source>. This does the equivalent of the</source>
          <target state="translated">。这相当于</target>
        </trans-unit>
        <trans-unit id="266251eb2c07262b529acf428a1f2f1cdecf8269" translate="yes" xml:space="preserve">
          <source>5.  All meaningful NVML constants and enums are exposed in Python. E.g. the constant</source>
          <target state="translated">5.所有有意义的NVML常量和枚举都在Python中公开。例如,常量</target>
        </trans-unit>
        <trans-unit id="8d7dab62e143b4a72dde1445dc8401030a6ea3c5" translate="yes" xml:space="preserve">
          <source>A function to &amp;lsquo;restrict&amp;rsquo; the available GPUs by setting the</source>
          <target state="translated">通过设置&amp;ldquo;限制&amp;rdquo;可用GPU的功能</target>
        </trans-unit>
        <trans-unit id="c6dd990fb0db5865282a050b1b283b6b2d1bebc4" translate="yes" xml:space="preserve">
          <source>A script for displaying a differently formatted nvidia-smi.</source>
          <target state="translated">用于显示不同格式的nvidia-smi的脚本。</target>
        </trans-unit>
        <trans-unit id="dbe0cd1883bf0d42b17bf7de137c669d242ad502" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 2.285.  See NVML documentation for more information.</source>
          <target state="translated">增加了NVML 2.285的新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="1deb5bbae008eade6b5dcb0a625acd0591daffc7" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 3.295.  See NVML documentation for more information.</source>
          <target state="translated">为NVML 3.295增加了新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="735911b677104cb5028b4da58fa91df8314e35dd" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 4.304.  See NVML documentation for more information.</source>
          <target state="translated">增加了NVML 4.304的新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="6501db0477ac065c7bad35525b338a45afdb5859" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 5.319.  See NVML documentation for more information.</source>
          <target state="translated">增加了NVML 5.319的新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="74439b8de6b2a44d5e98c7f96c25e00709b55e38" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 6.340.  See NVML documentation for more information.</source>
          <target state="translated">为NVML 6.340增加了新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="c89632354ca3ef49116e2c099c4e475c87703661" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 7.346.  See NVML documentation for more information.</source>
          <target state="translated">为NVML 7.346增加了新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="6ff149aaa39cc78e346b524c63db3dcadd42a317" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 7.352.  See NVML documentation for more information.</source>
          <target state="translated">为NVML 7.352增加了新功能。更多信息请参见NVML文档。</target>
        </trans-unit>
        <trans-unit id="af4032642a16e6ce6dc653303563c5d13ec729f2" translate="yes" xml:space="preserve">
          <source>Added nvidia_smi.py tool as a sample app.</source>
          <target state="translated">添加了 nvidia_smi.py 工具作为示例应用程序。</target>
        </trans-unit>
        <trans-unit id="f5ae27e7f9268d20255645cd8d9bcf218a6cada9" translate="yes" xml:space="preserve">
          <source>Additionally, see</source>
          <target state="translated">此外,见</target>
        </trans-unit>
        <trans-unit id="369e445c7fba3d6563f78e32c1bc7f70d5b3daa0" translate="yes" xml:space="preserve">
          <source>Becomes</source>
          <target state="translated">成为</target>
        </trans-unit>
        <trans-unit id="e949293bb3141d39921183faafd54e8bcb4089c2" translate="yes" xml:space="preserve">
          <source>Becomes:</source>
          <target state="translated">成为:</target>
        </trans-unit>
        <trans-unit id="60bb376ae1ce78b17c061cdfd24472de92207578" translate="yes" xml:space="preserve">
          <source>C function output parameters are returned from the corresponding Python function as tuples, rather than requiring pointers. Eg the C function:</source>
          <target state="translated">C函数的输出参数从相应的Python函数中以元组的形式返回,而不是需要指针。例如C函数。</target>
        </trans-unit>
        <trans-unit id="2905dac8b61f5bcd1de6af089bac4b6b474145b2" translate="yes" xml:space="preserve">
          <source>C structs are converted into Python classes. E.g. the C struct:</source>
          <target state="translated">C结构被转换为Python类。例如,C结构。</target>
        </trans-unit>
        <trans-unit id="e352fc138c5e488dc34254c3ee2e99e3e9aaf288" translate="yes" xml:space="preserve">
          <source>COPYRIGHT</source>
          <target state="translated">版权声明</target>
        </trans-unit>
        <trans-unit id="8ca62237c945f3edd9281cf14c1e3443a046dbf9" translate="yes" xml:space="preserve">
          <source>CUDA_VISIBLE_DEVICES</source>
          <target state="translated">CUDA_VISIBLE_DEVICES(中文)</target>
        </trans-unit>
        <trans-unit id="2f6ba8758de1d885a0d3872a275066ca478ea17d" translate="yes" xml:space="preserve">
          <source>Can be called like so:</source>
          <target state="translated">可以这样称呼。</target>
        </trans-unit>
        <trans-unit id="069e13cf3af30589ad6833df9acef9dabc3e551c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011-2015, NVIDIA Corporation.  All rights reserved.</source>
          <target state="translated">Copyright (c)2011-2015,NVIDIA Corporation.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="50c48d0dfd1dbe71efefaa1cb3393583fb4e3777" translate="yes" xml:space="preserve">
          <source>Differences from NVML</source>
          <target state="translated">与NVML的区别</target>
        </trans-unit>
        <trans-unit id="db5fa106a436feaf5d006bd04120ced20aa11ad8" translate="yes" xml:space="preserve">
          <source>Documentation also available at &lt;a href=&quot;https://py3nvml.readthedocs.io/en/latest/&quot;&gt;readthedocs&lt;/a&gt;.</source>
          <target state="translated">也可以从&lt;a href=&quot;https://py3nvml.readthedocs.io/en/latest/&quot;&gt;readthedocs&lt;/a&gt;获得文档。</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="501651209e2106677cbbfb39831edf741cac6663" translate="yes" xml:space="preserve">
          <source>Finally, I will remove the</source>
          <target state="translated">最后,我将删除</target>
        </trans-unit>
        <trans-unit id="4e28dfa89940cdd68d9f582a02149b891b0b37ab" translate="yes" xml:space="preserve">
          <source>Fixing nvmlUnitGetDeviceCount bug</source>
          <target state="translated">修正nvmlUnitGetDeviceCount的bug。</target>
        </trans-unit>
        <trans-unit id="92521aadb5ff34be1fd8e987c4188b17dd0475b0" translate="yes" xml:space="preserve">
          <source>For py3smi, you can specify an update period so it will refresh the feed every
few seconds. I.e., similar to &lt;code&gt;watch -n5 nvidia-smi&lt;/code&gt;, you can run
&lt;code&gt;py3smi -l 5&lt;/code&gt;.</source>
          <target state="translated">对于py3smi，您可以指定更新时间，以便每隔几秒钟刷新一次供稿。即，类似于 &lt;code&gt;watch -n5 nvidia-smi&lt;/code&gt; ，您可以运行 &lt;code&gt;py3smi -l 5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ac4ec4b658f9b82462d6e40fbef20ad8cbd67ef" translate="yes" xml:space="preserve">
          <source>From GitHub:</source>
          <target state="translated">来自GitHub。</target>
        </trans-unit>
        <trans-unit id="6c3465d12c7b6b8435a8a4dc1983188ec6d223d7" translate="yes" xml:space="preserve">
          <source>From PyPi:</source>
          <target state="translated">从PyPi。</target>
        </trans-unit>
        <trans-unit id="e5f2e481faf49aa3c50477d5e6f9cb346286dd61" translate="yes" xml:space="preserve">
          <source>I found the default</source>
          <target state="translated">我发现默认的</target>
        </trans-unit>
        <trans-unit id="992afe3b01a5d9b3e27fb777f83eb43df7a1a30b" translate="yes" xml:space="preserve">
          <source>I have copied in the
C docstring. While this will result in some strange looking docstrings which
will be slightly incorrect, they should give good guidance on the scope of the
function, something which was ill-defined before.</source>
          <target state="translated">我已经复制了C语言的docstring。虽然这将导致一些看起来很奇怪的 docstrings,而且这些 docstrings 略微有些不正确,但它们应该能很好地指导函数的范围,这在以前是没有定义的。</target>
        </trans-unit>
        <trans-unit id="d00a94812cca7916994a62a20718f506645fa915" translate="yes" xml:space="preserve">
          <source>I have found this useful as I have a shared gpu server and like to use tensorflow which is very greedy and calls to
&lt;code&gt;tf.Session()&lt;/code&gt; grabs all available gpus.</source>
          <target state="translated">我发现这很有用，因为我有一个共享的GPU服务器，并且喜欢使用非常贪婪的 &lt;code&gt;tf.Session()&lt;/code&gt; 并调用tf.Session（）可以获取所有可用的GPU。</target>
        </trans-unit>
        <trans-unit id="0d1240aac65831337cd9bdde0d32f51e7a1c9cc3" translate="yes" xml:space="preserve">
          <source>If it could connect to the GPUs but not enough were available (i.e. more than
1 was requested), it will take everything it can and raise a RuntimeWarning.</source>
          <target state="translated">如果它可以连接到GPU,但没有足够的可用空间(即请求了超过1个),它就会把能用的都用上,并发出RuntimeWarning。</target>
        </trans-unit>
        <trans-unit id="ed2b8f17a7d2b4a8db4d540ccab284b39ca4423a" translate="yes" xml:space="preserve">
          <source>If it could connect to the GPUs, but there were none available, it will
raise a ValueError.</source>
          <target state="translated">如果它可以连接到GPU,但没有可用的,它将引发一个ValueError。</target>
        </trans-unit>
        <trans-unit id="b252c185783690b130c12fce2ddd8c35acfef584" translate="yes" xml:space="preserve">
          <source>If the method could not connect to any NVIDIA gpus, it will raise
a RuntimeWarning.</source>
          <target state="translated">如果该方法无法连接到任何NVIDIA gpus,它将引发一个RuntimeWarning。</target>
        </trans-unit>
        <trans-unit id="e097708d277a2d697174749e649d6518f6b0c686" translate="yes" xml:space="preserve">
          <source>In addition to these NVIDIA functions to query the state of the GPU, I have written
a couple functions/tools to help in using gpus (particularly for a shared
gpu server). These are:</source>
          <target state="translated">除了这些NVIDIA查询GPU状态的函数外,我还写了几个函数/工具来帮助使用gpus(特别是对于共享gpu服务器)。这些函数/工具是</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="a3e131a915414ce8cf4a7270e2e3c671ccb2a4f3" translate="yes" xml:space="preserve">
          <source>Instead of returning error codes, failing error codes are raised as Python exceptions. I.e. They should be wrapped with exception handlers.</source>
          <target state="translated">失败的错误代码不是返回错误代码,而是作为Python异常提出。即,它们应该用异常处理程序来封装。</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="fc21b17e3c047c9d7adcd7f277f0e530933bf10f" translate="yes" xml:space="preserve">
          <source>NVML_TEMPERATURE_GPU</source>
          <target state="translated">NVML_TEMPERATURE_GPU。</target>
        </trans-unit>
        <trans-unit id="744d639566dcd19c2a130dd3663ffcc7893f8621" translate="yes" xml:space="preserve">
          <source>NVML_VALUE_NOT_AVAILABLE</source>
          <target state="translated">NVML_VALUE_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="ddce60bdbe867b91685dbf9d22230e58dc0d0d74" translate="yes" xml:space="preserve">
          <source>Neither the name of the NVIDIA Corporation nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.</source>
          <target state="translated">未经特定的事先书面许可,不得使用NVIDIA公司的名称或其贡献者的姓名来认可或推广本软件衍生的产品。</target>
        </trans-unit>
        <trans-unit id="3ddb6f391c98ce1acabaa86671720fb684ebe4d5" translate="yes" xml:space="preserve">
          <source>Or the following will grab 2 gpus from the first 4 (and leave any higher gpus untouched)</source>
          <target state="translated">或者下面将从前4个Gpus中抓取2个Gpus(并保留任何更高的Gpus不动)。</target>
        </trans-unit>
        <trans-unit id="d43f8378b439b7e6707baa3a72eb26a84c780d3b" translate="yes" xml:space="preserve">
          <source>Or, download and pip install:</source>
          <target state="translated">或者,下载并pip安装。</target>
        </trans-unit>
        <trans-unit id="832dc285ce4f7c5de8a16a81acaa9528741d8199" translate="yes" xml:space="preserve">
          <source>Ported to support Python 3.0 and Python 2.0 syntax.</source>
          <target state="translated">移植到支持Python 3.0和Python 2.0语法。</target>
        </trans-unit>
        <trans-unit id="498066086bbf68c8bb559d197592643e0ac0dd69" translate="yes" xml:space="preserve">
          <source>Python 3 Bindings for the NVIDIA Management Library</source>
          <target state="translated">Python 3为NVIDIA管理库提供绑定服务</target>
        </trans-unit>
        <trans-unit id="348bb74784a431e09fc89ea2883c70553eec3de9" translate="yes" xml:space="preserve">
          <source>Python 3 compatible bindings to the NVIDIA Management Library. Can be used to
query the state of the GPUs on your system. This was ported from the NVIDIA
provided python bindings &lt;a href=&quot;https://pypi.python.org/pypi/nvidia-ml-py/7.352.0&quot;&gt;nvidia-ml-py&lt;/a&gt;, which only
supported python 2. I have forked from version 7.352.0. The old library was
itself a wrapper around the &lt;a href=&quot;http://developer.nvidia.com/nvidia-management-library-nvml&quot;&gt;NVIDIA Management Library&lt;/a&gt;.</source>
          <target state="translated">与NVIDIA Management Library兼容的Python 3。可用于查询系统上GPU的状态。这是从NVIDIA提供的python绑定&lt;a href=&quot;https://pypi.python.org/pypi/nvidia-ml-py/7.352.0&quot;&gt;nvidia-ml-py&lt;/a&gt;移植而来的，该绑定仅支持python2。我从7.352.0版本开始进行了分叉。旧的库本身就是&lt;a href=&quot;http://developer.nvidia.com/nvidia-management-library-nvml&quot;&gt;NVIDIA Management Library&lt;/a&gt;的包装。</target>
        </trans-unit>
        <trans-unit id="7eb9a0922eac8ead10ca27b9a58e8e9aa959cda6" translate="yes" xml:space="preserve">
          <source>Python 3.5+.</source>
          <target state="translated">Python 3.5+。</target>
        </trans-unit>
        <trans-unit id="7a9e7bd80962382a9a912d3b964d77cd22f8401a" translate="yes" xml:space="preserve">
          <source>Python handles string buffer creation.  E.g. the C function:</source>
          <target state="translated">Python处理字符串缓冲区的创建。例如,C函数。</target>
        </trans-unit>
        <trans-unit id="c20bb0f7c4d78b01fa838319a2981e9b417f1f05" translate="yes" xml:space="preserve">
          <source>Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:</source>
          <target state="translated">允许以源码和二进制形式重新分发和使用,无论是否修改,但必须满足以下条件:</target>
        </trans-unit>
        <trans-unit id="57ec4bae787e02e75ae9439f5fbfc851c887f70f" translate="yes" xml:space="preserve">
          <source>Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.</source>
          <target state="translated">二进制形式的再分发必须在发行版提供的文档和/或其他材料中复制上述版权声明、本条件列表和以下免责声明。</target>
        </trans-unit>
        <trans-unit id="b7338b5245c44e48d0d288fd4ec6f22445873f8e" translate="yes" xml:space="preserve">
          <source>Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.</source>
          <target state="translated">源代码的再分发必须保留上述版权声明、本条件清单和以下免责声明。</target>
        </trans-unit>
        <trans-unit id="13691cf14b512760be4b1cedef755eeca1ba33bc" translate="yes" xml:space="preserve">
          <source>Regular Usage</source>
          <target state="translated">定期使用</target>
        </trans-unit>
        <trans-unit id="5826bb879e5266b9bd371e5afef847dd5dab8c61" translate="yes" xml:space="preserve">
          <source>Release Notes (for pynvml)</source>
          <target state="translated">发行说明 (pynvml)</target>
        </trans-unit>
        <trans-unit id="63c2178c36666b52b538ae4daf84c57f71791918" translate="yes" xml:space="preserve">
          <source>Requires</source>
          <target state="translated">要求</target>
        </trans-unit>
        <trans-unit id="734bd5b4462fb02a485b86fa225dc775792b4bc5" translate="yes" xml:space="preserve">
          <source>Running pip install will now put this script in your python&amp;rsquo;s
bin, and you&amp;rsquo;ll be able to run it from the command line. Here is a comparison of
the two outputs:</source>
          <target state="translated">现在，运行pip install将把此脚本放入python的bin中，您将能够从命令行运行它。这是两个输出的比较：</target>
        </trans-unit>
        <trans-unit id="3c4a8ed56694d0489d0758c2bf05c7d1bf41c87a" translate="yes" xml:space="preserve">
          <source>See the Utils section below for more info.</source>
          <target state="translated">更多信息请参见下面的Utils部分。</target>
        </trans-unit>
        <trans-unit id="492a841972bf67520a805dd7c1a900fe70ae424f" translate="yes" xml:space="preserve">
          <source>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &amp;ldquo;AS IS&amp;rdquo; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</source>
          <target state="translated">版权持有者和贡献者按&amp;ldquo;原样&amp;rdquo;提供此软件，不提供任何明示或暗示的担保，包括但不限于针对特定目的的适销性和适用性的暗示担保。在任何情况下，版权持有人或贡献者均不对任何直接，间接，偶发，特殊，专有或后果性的损害（包括但不限于，替代商品或服务的购买，使用，数据，或业务中断），无论基于合同，严格责任或侵权行为（包括疏忽或其他方式），无论是出于任何责任，无论是否出于使用本软件的目的，即使已经事先告知，也是如此。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">De</target>
        </trans-unit>
        <trans-unit id="a17ccb0e786e5be596b23b255eb985c316e59dcb" translate="yes" xml:space="preserve">
          <source>The py3nvml library consists of python methods which wrap
several NVML functions, implemented in a C shared library.
Each function&amp;rsquo;s use is the same with the following exceptions:</source>
          <target state="translated">py3nvml库由python方法组成，这些方法包装了几个NVML函数，这些函数在C共享库中实现。每个函数的用法相同，但以下情况除外：</target>
        </trans-unit>
        <trans-unit id="73af3e91bd8b4138712c534603967a8ee83e9444" translate="yes" xml:space="preserve">
          <source>This function has no return codes but may raise some warnings/exceptions:</source>
          <target state="translated">这个函数没有返回代码,但可能会引起一些警告/异常。</target>
        </trans-unit>
        <trans-unit id="bcb8937b8ed2af638d4ade82de7ff9aca38d5dc4" translate="yes" xml:space="preserve">
          <source>This function is called by</source>
          <target state="translated">这个函数是由</target>
        </trans-unit>
        <trans-unit id="eb17757444438b386d2785d0368cdd190a0ce018" translate="yes" xml:space="preserve">
          <source>This tool can query the gpu status. Unlike the default for</source>
          <target state="translated">这个工具可以查询gpu的状态。与默认的</target>
        </trans-unit>
        <trans-unit id="2577f1f58f982d2c3230e6125914a7c51ee5ed2d" translate="yes" xml:space="preserve">
          <source>This will look for 3 available gpus in the range of gpus from 0 to 3. The range option is not necessary, and it only
serves to restrict the search space for the grab_gpus.</source>
          <target state="translated">这将在0到3的gpus范围内寻找3个可用的gpus,范围选项并不是必须的,它的作用只是限制grab_gpus的搜索空间。</target>
        </trans-unit>
        <trans-unit id="22b6e3589839140fd4ba1930ad60f08e94a96176" translate="yes" xml:space="preserve">
          <source>To try and keep py3nvml somewhat up-to-date with the constantly evolving nvidia
drivers, I have done some work to the</source>
          <target state="translated">为了让 py3nvml 跟上不断发展的 nvidia 驱动程序的脚步,我对 py3nvml 做了一些工作。</target>
        </trans-unit>
        <trans-unit id="a63973d287af6801bc621e6561a3547ef84c0931" translate="yes" xml:space="preserve">
          <source>Updated nvidia_smi.py tool</source>
          <target state="translated">更新了 nvidia_smi.py 工具。</target>
        </trans-unit>
        <trans-unit id="342416bab2fc7ca2c2db14c0b87567aecd55c1bf" translate="yes" xml:space="preserve">
          <source>Updated nvidia_smi.py tool
- Includes additional error handling</source>
          <target state="translated">更新了 nvidia_smi.py 工具-包括额外的错误处理。</target>
        </trans-unit>
        <trans-unit id="06b1bdb677a0f744d39a83c7a275b004dd2bdae4" translate="yes" xml:space="preserve">
          <source>Updates in Version 0.2.3</source>
          <target state="translated">0.2.3版本的更新</target>
        </trans-unit>
        <trans-unit id="24a271451e65e20717de9aee72e172c4a79d419b" translate="yes" xml:space="preserve">
          <source>Utils</source>
          <target state="translated">用途</target>
        </trans-unit>
        <trans-unit id="a84e24132b15412a19df8221013949e101c55fb7" translate="yes" xml:space="preserve">
          <source>Version 2.285.0</source>
          <target state="translated">2.285.0版本</target>
        </trans-unit>
        <trans-unit id="424d515f57cd4be403371b578ceaefb9a1694096" translate="yes" xml:space="preserve">
          <source>Version 3.295.0</source>
          <target state="translated">3.295.0版本</target>
        </trans-unit>
        <trans-unit id="60410531de5de932f3c14bb2321f2fb3c899e48e" translate="yes" xml:space="preserve">
          <source>Version 4.304.0</source>
          <target state="translated">4.304.0版</target>
        </trans-unit>
        <trans-unit id="b57420d369fa4b5619d1fe9c0b91ac44b2dd133c" translate="yes" xml:space="preserve">
          <source>Version 4.304.3</source>
          <target state="translated">4.304.3版</target>
        </trans-unit>
        <trans-unit id="5a0bfa91792b8a2728cf758c0073ca9f5d26f164" translate="yes" xml:space="preserve">
          <source>Version 5.319.0</source>
          <target state="translated">5.319.0版</target>
        </trans-unit>
        <trans-unit id="629a16124706073cc4659c90813d6c86299cb3c7" translate="yes" xml:space="preserve">
          <source>Version 6.340.0</source>
          <target state="translated">6.340.0版本</target>
        </trans-unit>
        <trans-unit id="a55154b62aad0f22608266e16b1b447b86e480fd" translate="yes" xml:space="preserve">
          <source>Version 7.346.0</source>
          <target state="translated">7.346.0版</target>
        </trans-unit>
        <trans-unit id="1de9161c410a4e4844ea46feb191534e8fb68885" translate="yes" xml:space="preserve">
          <source>Version 7.352.0</source>
          <target state="translated">7.352.0版本</target>
        </trans-unit>
        <trans-unit id="fcbaf9283f183bb6c0c9f79efe2224c06f1bacc8" translate="yes" xml:space="preserve">
          <source>Visit &lt;a href=&quot;https://docs.nvidia.com/deploy/nvml-api/index.html&quot;&gt;NVML reference&lt;/a&gt; for a list of the
functions available and their help. Also the script py3smi is a bit hacky but
shows examples of me querying the GPUs for info.</source>
          <target state="translated">请访问&lt;a href=&quot;https://docs.nvidia.com/deploy/nvml-api/index.html&quot;&gt;NVML参考&lt;/a&gt;，以获取可用功能及其帮助的列表。另外，脚本py3smi有点hacky，但显示了我向GPU查询信息的示例。</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">随着</target>
        </trans-unit>
        <trans-unit id="0bc0d53928cebde48aae4cbefff387a8439e7549" translate="yes" xml:space="preserve">
          <source>You can adjust the memory threshold for determining if a GPU is free/used with the &lt;code&gt;gpu_fraction&lt;/code&gt; parameter
(default is 1):</source>
          <target state="translated">您可以使用 &lt;code&gt;gpu_fraction&lt;/code&gt; 参数（默认值为1）来调整内存阈值，以确定是否空闲/使用了GPU ：</target>
        </trans-unit>
        <trans-unit id="6f035e1d457790c8603eb1d7dcbb39015737c414" translate="yes" xml:space="preserve">
          <source>You can also get the full output (very similar to nvidia-smi) by running</source>
          <target state="translated">您也可以通过运行以下命令获得完整的输出(非常类似于nvidia-smi)。</target>
        </trans-unit>
        <trans-unit id="728e2975282484231f7526dea55261c96f75e65d" translate="yes" xml:space="preserve">
          <source>You can call the &lt;code&gt;grab_gpus(num_gpus, gpu_select, gpu_fraction=.95)&lt;/code&gt; function to check the available gpus and set
the</source>
          <target state="translated">您可以调用 &lt;code&gt;grab_gpus(num_gpus, gpu_select, gpu_fraction=.95)&lt;/code&gt; 函数来检查可用的gpu并设置</target>
        </trans-unit>
        <trans-unit id="b56345d25d16b8f7ab95f7f01a6382017a2cc434" translate="yes" xml:space="preserve">
          <source>command:</source>
          <target state="translated">命令。</target>
        </trans-unit>
        <trans-unit id="8c4d6478bbb2f8c7126fd20d5bb2b5a62a7a53f5" translate="yes" xml:space="preserve">
          <source>constant is not used.  Instead None is mapped to the field.</source>
          <target state="translated">常量不被使用。相反,None被映射到字段。</target>
        </trans-unit>
        <trans-unit id="8d0b60bc01a5c7654c3fb5ff8e2c46005bcd60f7" translate="yes" xml:space="preserve">
          <source>environment variable as need be. It determines if a GPU is available by checking if the
amount of free memory is below memory-usage is above/equal to the gpu_fraction value. The default of .95 allows for some
small amount of memory to be taken before it deems the gpu as being &amp;lsquo;used&amp;rsquo;.</source>
          <target state="translated">需要的环境变量。它通过检查可用内存量是否低于内存使用量是否高于/等于gpu_fraction值来确定GPU是否可用。默认值.95允许在将gpu视为&amp;ldquo;已使用&amp;rdquo;之前占用少量内存。</target>
        </trans-unit>
        <trans-unit id="fed8dddda7bd1744a6df8c63fb5e5702f3cd9fa2" translate="yes" xml:space="preserve">
          <source>environment variable.</source>
          <target state="translated">环境变量。</target>
        </trans-unit>
        <trans-unit id="5ac8c16f64282ce55550b3ffdc9c54ef8f71d410" translate="yes" xml:space="preserve">
          <source>from python with subprocess.</source>
          <target state="translated">从python的子进程。</target>
        </trans-unit>
        <trans-unit id="ecc1b7adbf1516af0cf74bb546f4f7d2ec5b60b0" translate="yes" xml:space="preserve">
          <source>get_free_gpus</source>
          <target state="translated">get_free_gpus</target>
        </trans-unit>
        <trans-unit id="88d37485b4f6c6a7f751728dbab10a85a9e55c30" translate="yes" xml:space="preserve">
          <source>get_num_procs</source>
          <target state="translated">get_num_procs</target>
        </trans-unit>
        <trans-unit id="ee06ae481ff22e1fb93ff6f1bf8a47c71c2376cc" translate="yes" xml:space="preserve">
          <source>grab_gpus</source>
          <target state="translated">grab_gpus</target>
        </trans-unit>
        <trans-unit id="7bd8e063d0b2bd77153a4cbb4935df900737bde8" translate="yes" xml:space="preserve">
          <source>is available under</source>
          <target state="translated">可在</target>
        </trans-unit>
        <trans-unit id="20ed587270a1ca91b4a908b6b7651f51cc18aaff" translate="yes" xml:space="preserve">
          <source>module in a future version, as
I believe it was only ever meant as an example of how to use the nvml functions
to query the gpus, and is now quite out of date. To get the same functionality,
you can call</source>
          <target state="translated">模块,因为我相信它只是作为一个如何使用nvml函数查询gpus的例子,现在已经很过时了。要获得同样的功能,你可以调用</target>
        </trans-unit>
        <trans-unit id="c41c35762d4e943916d5591e0e99735a35d67a15" translate="yes" xml:space="preserve">
          <source>module to query the device and get info on the
GPUs, and then defined my own printout. I have included this as a script in</source>
          <target state="translated">模块来查询设备并获取GPU的信息,然后定义了我自己的打印输出。我已经把它作为一个脚本包含在</target>
        </trans-unit>
        <trans-unit id="a36d0effc6d7cb4853b469cf9d391c6275850548" translate="yes" xml:space="preserve">
          <source>module. In particular,
I have updated all the constants that were missing in py3nvml and existing in the
&lt;a href=&quot;https://github.com/NVIDIA/nvidia-settings/blob/master/src/nvml.h&quot;&gt;NVIDIA source&lt;/a&gt; as of version 418.43. In addition, I have wrapped all of these
constants in Enums so it is easier to see what constants go together. Finally,
for all the functions in</source>
          <target state="translated">模块。特别是，我更新了py3nvml中缺少的所有常量，并且从418.43版本开始在&lt;a href=&quot;https://github.com/NVIDIA/nvidia-settings/blob/master/src/nvml.h&quot;&gt;NVIDIA源代码&lt;/a&gt;中已经存在。另外，我将所有这些常量都包装在Enums中，因此更容易看到哪些常量在一起。最后，对于中的所有功能</target>
        </trans-unit>
        <trans-unit id="0104cbd0e9876f60416d064b5a9418133bd0a6f7" translate="yes" xml:space="preserve">
          <source>nvidia-smi</source>
          <target state="translated">nvidia-mi</target>
        </trans-unit>
        <trans-unit id="0bf0ac838e2fa2261506d4caf6d11b23eb733494" translate="yes" xml:space="preserve">
          <source>nvidia-smi -q -x</source>
          <target state="translated">nvidia-smi -q -x</target>
        </trans-unit>
        <trans-unit id="f94f7ee06d2ff87ad29641d8717dbb9e5f512857" translate="yes" xml:space="preserve">
          <source>output was missing some useful info, so made use of the</source>
          <target state="translated">的输出缺少一些有用的信息,所以利用了</target>
        </trans-unit>
        <trans-unit id="90baa8c11990535925900fd8352fbcb5a49880fc" translate="yes" xml:space="preserve">
          <source>py3nvml.NVML_TEMPERATURE_GPU</source>
          <target state="translated">py3nvml.NVML_TEMPERATURE_GPU。</target>
        </trans-unit>
        <trans-unit id="17766ab629b8fa1378bdda7e35f528492e22c899" translate="yes" xml:space="preserve">
          <source>py3nvml.nvidia_smi</source>
          <target state="translated">py3nvml.nvidia_smi</target>
        </trans-unit>
        <trans-unit id="55247edf0607be94a824068a02eb08b5f91121a4" translate="yes" xml:space="preserve">
          <source>py3nvml.nvidia_smi.py</source>
          <target state="translated">py3nvml.nvidia_smi.py</target>
        </trans-unit>
        <trans-unit id="3fda2dd8065434de0a3b195f66f4857fe29aee96" translate="yes" xml:space="preserve">
          <source>py3nvml.py3nvml</source>
          <target state="translated">py3nvml.py3nvml</target>
        </trans-unit>
        <trans-unit id="06362e0d46ddaf9fcf67aaeeab5b12b22136fb21" translate="yes" xml:space="preserve">
          <source>py3nvml/nvidia_smi.py</source>
          <target state="translated">py3nvml/nvidia_smi.py</target>
        </trans-unit>
        <trans-unit id="5349a6cb60b3a4ab7dec4a29e5967ff599559f32" translate="yes" xml:space="preserve">
          <source>py3smi</source>
          <target state="translated">py3smi</target>
        </trans-unit>
        <trans-unit id="8ea102dc84c7a0a65e9a4894f774b5c0f2f38b2a" translate="yes" xml:space="preserve">
          <source>py3smi
-f</source>
          <target state="translated">py3smi -f</target>
        </trans-unit>
        <trans-unit id="96c7d8616bbccc116d7cf0e4ac7cb16e2752fc28" translate="yes" xml:space="preserve">
          <source>scripts/py3smi</source>
          <target state="translated">脚本/py3smi</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
