<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/numtdumper/">
    <body>
      <group id="numtdumper">
        <trans-unit id="fe1f69ba9b62c2a60405505cb96f59d40df3df3f" translate="yes" xml:space="preserve">
          <source>&quot;clade&quot; = the clade assignment of a haplotype</source>
          <target state="translated">&quot;clade&quot; = the clade assignment of a haplotype</target>
        </trans-unit>
        <trans-unit id="fcdbcb875d52c238cc5002ced8a5d09ef6b19046" translate="yes" xml:space="preserve">
          <source>&quot;library&quot; = the number of reads of a haplotype per library (or sample, &lt;a href=&quot;#input-data-required&quot;&gt;see above&lt;/a&gt;</source>
          <target state="translated">&quot;library&quot; = the number of reads of a haplotype per library (or sample, &lt;a href=&quot;#input-data-required&quot;&gt;see above&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6fec6e73274188b53f3fbaf425902c83a9dd526" translate="yes" xml:space="preserve">
          <source>&quot;library&quot; will use only the per-library ASV reads</source>
          <target state="translated">&quot;library&quot; will use only the per-library ASV reads</target>
        </trans-unit>
        <trans-unit id="61b6ad3b37a8a7a4411c3db3b6c29bb9d956dff7" translate="yes" xml:space="preserve">
          <source>&quot;library|taxon+clade&quot; will bin reads by unique clade and taxon within each library</source>
          <target state="translated">&quot;library|taxon+clade&quot; will bin reads by unique clade and taxon within each library</target>
        </trans-unit>
        <trans-unit id="0b8f71f7100de0afdddc6ccabf02bdacf4ff4e2e" translate="yes" xml:space="preserve">
          <source>&quot;n&quot; = the absolute total of reads per ASV within a category or combination of categories</source>
          <target state="translated">&quot;n&quot; = the absolute total of reads per ASV within a category or combination of categories</target>
        </trans-unit>
        <trans-unit id="234bf83243f659608d83f0c178c28010f79ea696" translate="yes" xml:space="preserve">
          <source>&quot;p&quot; = the proportion of reads per ASV relative to the total number of reads of all haplotypes within a category or combination of categories</source>
          <target state="translated">&quot;p&quot; = the proportion of reads per ASV relative to the total number of reads of all haplotypes within a category or combination of categories</target>
        </trans-unit>
        <trans-unit id="7bb50421890a3afdd9d09e00f2fd5a8dde0c6ec7" translate="yes" xml:space="preserve">
          <source>&quot;taxon&quot; = the taxon assignment of a haplotype</source>
          <target state="translated">&quot;taxon&quot; = the taxon assignment of a haplotype</target>
        </trans-unit>
        <trans-unit id="c5b3d7dd2053809b8cdf1df6e5d68ae3db612cdb" translate="yes" xml:space="preserve">
          <source>&quot;total&quot; = the total number of reads for a haplotype across the entire dataset</source>
          <target state="translated">&quot;total&quot; = the total number of reads for a haplotype across the entire dataset</target>
        </trans-unit>
        <trans-unit id="51678cd4a35ab8cb24f3b1630ce997542c879aee" translate="yes" xml:space="preserve">
          <source>&quot;total|clade&quot; will bin reads by clade over the whole dataset</source>
          <target state="translated">&quot;total|clade&quot; will bin reads by clade over the whole dataset</target>
        </trans-unit>
        <trans-unit id="181b154c237bf12160fe5aeb6d268cd3c58c29b1" translate="yes" xml:space="preserve">
          <source>1. Categories</source>
          <target state="translated">1.巗,峃峃。</target>
        </trans-unit>
        <trans-unit id="811c97b55befd3bbd7f7ecfa21fa0599ce050f0d" translate="yes" xml:space="preserve">
          <source>2. Metrics</source>
          <target state="translated">2.衡量标准</target>
        </trans-unit>
        <trans-unit id="d9345206fdee520a41e1b40e172aab6674a3b536" translate="yes" xml:space="preserve">
          <source>3. Thresholds</source>
          <target state="translated">3.3.阈值</target>
        </trans-unit>
        <trans-unit id="a701b300f89dfa468f9d301961abf7812920be64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'[c; m; t]'&lt;/code&gt; should be one or more text strings specifying terms to apply when frequency filtering. These are explained in detail below, but in brief, each term is in the format &lt;code&gt;[category(/ies); metric; threshold(s)]&lt;/code&gt; where category is one or a combination of &quot;total&quot;, &quot;library&quot;, &quot;clade&quot; or &quot;taxon&quot;, metric is one of &quot;n&quot; or &quot;p&quot;, and threshold is a single value. In &lt;code&gt;dump&lt;/code&gt; mode, terms are always considered simultaneously and only one threshold is permitted per term. For example, &lt;code&gt;[library|clade, p, 0.05]&lt;/code&gt; would designate as NUMTs any ASVs that occurred as fewer than 5% of the reads within members of its clade within all library in which it occured.</source>
          <target state="translated">&lt;code&gt;'[c; m; t]'&lt;/code&gt; should be one or more text strings specifying terms to apply when frequency filtering. These are explained in detail below, but in brief, each term is in the format &lt;code&gt;[category(/ies); metric; threshold(s)]&lt;/code&gt; where category is one or a combination of &quot;total&quot;, &quot;library&quot;, &quot;clade&quot; or &quot;taxon&quot;, metric is one of &quot;n&quot; or &quot;p&quot;, and threshold is a single value. In &lt;code&gt;dump&lt;/code&gt; mode, terms are always considered simultaneously and only one threshold is permitted per term. For example, &lt;code&gt;[library|clade, p, 0.05]&lt;/code&gt; would designate as NUMTs any ASVs that occurred as fewer than 5% of the reads within members of its clade within all library in which it occured.</target>
        </trans-unit>
        <trans-unit id="90e682498d8971b83e2462ce465bcea700c536cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--basesvariation b&lt;/code&gt;, &lt;code&gt;--percentvariation [0-100]&lt;/code&gt;, &lt;code&gt;--codonsvariation c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--basesvariation b&lt;/code&gt; , &lt;code&gt;--percentvariation [0-100]&lt;/code&gt; , &lt;code&gt;--codonsvariation c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c5a51dfb704c0b855c6b7fed2e746d1cab9c906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--onlyvarybycodon&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;--onlyvarybycodon&lt;/code&gt; &lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a237408815e33b7f1294f3602cb7e146fd7c3a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--overwrite&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;--overwrite&lt;/code&gt; &lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d545eb7fc383642dc9081a29fc03a909699bd7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--realign&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;--realign&lt;/code&gt; &lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89137e9472a1a0ca07c430179e8a7a75720d1ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--refmatchlength n&lt;/code&gt; and/or &lt;code&gt;--dbmatchlength n&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--refmatchlength n&lt;/code&gt; and/or &lt;code&gt;--dbmatchlength n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a9f18fc234f3cd7000c6523bc3d5194c4a84578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--refmatchpercent [0-100]&lt;/code&gt; and/or &lt;code&gt;--dbmatchpercent [0-100]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--refmatchpercent [0-100]&lt;/code&gt; and/or &lt;code&gt;--dbmatchpercent [0-100]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc41372a740e15498267a24e9e1b1ff8a9a8e761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-R/--references path&lt;/code&gt; and/or &lt;code&gt;-D/--blastdb path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-R/--references path&lt;/code&gt; and/or &lt;code&gt;-D/--blastdb path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d70645094333886cabf2b310c3096978e93b0cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-S/--specification [path]&lt;/code&gt;&lt;em&gt;required&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;-S/--specification [path]&lt;/code&gt; &lt;em&gt;required&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58fa7d1731fa99deba5a99ae609d13769550b835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n/--minimumlength n&lt;/code&gt; and &lt;code&gt;-x/--maximumlength x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-n/--minimumlength n&lt;/code&gt; and &lt;code&gt;-x/--maximumlength x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="266b3345f3698c1eab246f67c0791cfb31f36cf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-y/--anyfail&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;-y/--anyfail&lt;/code&gt; &lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="571eb7f3b2d16b86233b6c1364cfcd5653887f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOD&lt;/code&gt; should be the short name specifying the evolutionary model to be used for calculating pairwise distances between aligned ASV sequences for the purpose of building a UPGMA tree. The value of this argument is passed directly to the &lt;code&gt;model&lt;/code&gt; argument of the R  function &lt;a href=&quot;https://www.rdocumentation.org/packages/ape/versions/5.4/topics/dist.dna&quot;&gt;&lt;code&gt;dist.dna&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;ape&lt;/code&gt; package, and should match exactly to one of the allowed functions for that model, namely &quot;raw&quot;, &quot;N&quot;, &quot;TS&quot;, &quot;TV&quot;, &quot;JC69&quot;, &quot;K80&quot;, &quot;F81&quot;, &quot;K81&quot;, &quot;F84&quot;, &quot;BH87&quot;, &quot;T92&quot;, &quot;TN93&quot;, &quot;GG95&quot;, &quot;logdet&quot;, &quot;paralin&quot;, &quot;indel&quot; or &quot;indelblock&quot;. By default, NUMTdumper uses &quot;F84&quot;. Please read the &lt;a href=&quot;https://www.rdocumentation.org/packages/ape/versions/5.4/topics/dist.dna&quot;&gt;documentation&lt;/a&gt; for this function to select a model.</source>
          <target state="translated">&lt;code&gt;MOD&lt;/code&gt; should be the short name specifying the evolutionary model to be used for calculating pairwise distances between aligned ASV sequences for the purpose of building a UPGMA tree. The value of this argument is passed directly to the &lt;code&gt;model&lt;/code&gt; argument of the R function &lt;a href=&quot;https://www.rdocumentation.org/packages/ape/versions/5.4/topics/dist.dna&quot;&gt; &lt;code&gt;dist.dna&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;ape&lt;/code&gt; package, and should match exactly to one of the allowed functions for that model, namely &quot;raw&quot;, &quot;N&quot;, &quot;TS&quot;, &quot;TV&quot;, &quot;JC69&quot;, &quot;K80&quot;, &quot;F81&quot;, &quot;K81&quot;, &quot;F84&quot;, &quot;BH87&quot;, &quot;T92&quot;, &quot;TN93&quot;, &quot;GG95&quot;, &quot;logdet&quot;, &quot;paralin&quot;, &quot;indel&quot; or &quot;indelblock&quot;. By default, NUMTdumper uses &quot;F84&quot;. Please read the &lt;a href=&quot;https://www.rdocumentation.org/packages/ape/versions/5.4/topics/dist.dna&quot;&gt;documentation&lt;/a&gt; for this function to select a model.</target>
        </trans-unit>
        <trans-unit id="5a8df0da7002d519212c97f89f686e2a1ccefd1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump&lt;/code&gt; examples</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; examples</target>
        </trans-unit>
        <trans-unit id="63a22b1454f908b1c5ab9f51577c8c6f4e8459d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump&lt;/code&gt; introduction</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; introduction</target>
        </trans-unit>
        <trans-unit id="23b18187787ac758534115124379a5b1cf95c555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dump&lt;/code&gt;-specific arguments</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; -specific arguments</target>
        </trans-unit>
        <trans-unit id="b933cef5a6a9e60771b5cff69f0027d16633e47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt; examples</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; examples</target>
        </trans-unit>
        <trans-unit id="2005db7d35b0005da25383e5c522087bf5028644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt; introduction</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; introduction</target>
        </trans-unit>
        <trans-unit id="c601900a21bf2865d0cae0c2149a2a8b27ff05f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt;-specific arguments</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; -specific arguments</target>
        </trans-unit>
        <trans-unit id="afe1866020c990cd573e0b298efec052c68401cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt;: &lt;em&gt;always required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt;: &lt;em&gt;always required&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; : &lt;em&gt;always required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt; : &lt;em&gt;always required&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b3353d1ea2005bda8ac07a27f915b21f98b4b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt;: &lt;em&gt;always required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt;: &lt;em&gt;required&lt;/em&gt; if not supplying &lt;code&gt;-C/--resultcache&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; : &lt;em&gt;always required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt; : &lt;em&gt;required&lt;/em&gt; if not supplying &lt;code&gt;-C/--resultcache&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a31767a05986021a6a52b47204e7e0fee9776ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt;: &lt;em&gt;always required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt;&lt;em&gt;sometimes required&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; : &lt;em&gt;always required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt; &lt;em&gt;sometimes required&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ec85d0d8f962aa910dd4f374076b37681f384d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt;: &lt;em&gt;optional&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt;: &lt;em&gt;optional&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; : &lt;em&gt;optional&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt; : &lt;em&gt;optional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08f3b35eaf9820e811ae69240cb3fc39a4d3d77d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt;: &lt;em&gt;required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt;&lt;em&gt;not used&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; : &lt;em&gt;required&lt;/em&gt; | &lt;code&gt;dump&lt;/code&gt; &lt;em&gt;not used&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd0b36bf8c104cb86df9d36f7df3d6f9f66e3c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; should be a positive integer specifying the maximum number of parallel threads to use, where relevant. The main frequency threshold comparison section of NUMTdumper is run on multiple threads to improve speed. This argument is also passed to &lt;code&gt;MAFFT&lt;/code&gt; and &lt;code&gt;blastn&lt;/code&gt; if these are run.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; should be a positive integer specifying the maximum number of parallel threads to use, where relevant. The main frequency threshold comparison section of NUMTdumper is run on multiple threads to improve speed. This argument is also passed to &lt;code&gt;MAFFT&lt;/code&gt; and &lt;code&gt;blastn&lt;/code&gt; if these are run.</target>
        </trans-unit>
        <trans-unit id="b2e70adbd2ace582f44f3ed603fefebda227a54c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; should be a positive integer specifying the minimum alignment length to consider a BLAST match when comparing ASVs against sequences in the file supplied to &lt;code&gt;-R/--references&lt;/code&gt; or the database supplied to &lt;code&gt;-D/--blastdb&lt;/code&gt;. The default value is calculated as 80% of the length below which ASVs will be designated as verified-non-authentic.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; should be a positive integer specifying the minimum alignment length to consider a BLAST match when comparing ASVs against sequences in the file supplied to &lt;code&gt;-R/--references&lt;/code&gt; or the database supplied to &lt;code&gt;-D/--blastdb&lt;/code&gt; . The default value is calculated as 80% of the length below which ASVs will be designated as verified-non-authentic.</target>
        </trans-unit>
        <trans-unit id="1a710796af95595ac4cec6b80787921d535a43d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; should be a positive integer that specifies the exact or centroid length expected for real amplicons derived from the target locus. This argument is required if specifying &lt;code&gt;--basesvariation&lt;/code&gt;, &lt;code&gt;--percentvariation&lt;/code&gt; or &lt;code&gt;--codonsvariation&lt;/code&gt;, or if specifying &lt;code&gt;--onlyvarybycodon&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; should be a positive integer that specifies the exact or centroid length expected for real amplicons derived from the target locus. This argument is required if specifying &lt;code&gt;--basesvariation&lt;/code&gt; , &lt;code&gt;--percentvariation&lt;/code&gt; or &lt;code&gt;--codonsvariation&lt;/code&gt; , or if specifying &lt;code&gt;--onlyvarybycodon&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc4fcafaeb97700f7baa7490d2b7da37e5508a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; should be a value corresponding to one of &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi&quot;&gt;the standard NCBI genetic codes&lt;/a&gt; for NUMTdumper to use when translating ASVs. This is always required.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; should be a value corresponding to one of &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi&quot;&gt;the standard NCBI genetic codes&lt;/a&gt; for NUMTdumper to use when translating ASVs. This is always required.</target>
        </trans-unit>
        <trans-unit id="d731987351b6ac9d9da7b51007aa47b0ecd4bfe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be the path to a fasta file (&lt;code&gt;-R/--references&lt;/code&gt;) or blast database (&lt;code&gt;-D/--blastdb&lt;/code&gt;) of sequences that represent known species that are likely to occur in the dataset. Both arguments are available for cases where multiple reference sources are desired, with different parameterisation of hits, but only one is required. For example, you may have a set of sanger-sequenced barcodes from your project's morphospecies, and which have been carefully curated to ensure accuracy and no NUMTs, against which you want to allow matches of 99% to allow for some minor sanger sequencing error and true haplotypes. You may also want to find 100% matches to a local copy of GenBank nt. You would supply the former to &lt;code&gt;-R&lt;/code&gt; and the latter to &lt;code&gt;-D&lt;/code&gt;. A BLAST search against these sequences will be used to designate a set of ASVs as verified-authentic.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; should be the path to a fasta file ( &lt;code&gt;-R/--references&lt;/code&gt; ) or blast database ( &lt;code&gt;-D/--blastdb&lt;/code&gt; ) of sequences that represent known species that are likely to occur in the dataset. Both arguments are available for cases where multiple reference sources are desired, with different parameterisation of hits, but only one is required. For example, you may have a set of sanger-sequenced barcodes from your project's morphospecies, and which have been carefully curated to ensure accuracy and no NUMTs, against which you want to allow matches of 99% to allow for some minor sanger sequencing error and true haplotypes. You may also want to find 100% matches to a local copy of GenBank nt. You would supply the former to &lt;code&gt;-R&lt;/code&gt; and the latter to &lt;code&gt;-D&lt;/code&gt; . A BLAST search against these sequences will be used to designate a set of ASVs as verified-authentic.</target>
        </trans-unit>
        <trans-unit id="7e78397d919c9d643d80d54e34547c0af4ad84d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be the path to a fasta file of unique sequences with unique header names to filter. There are no header format requirements. For best operation of NUMTdumper, the sequences in this file should have had primers trimmed and low-quality sequences removed. It is recommended that sequences that are more than 100bp longer or shorter than the expected range of your target locus should have been removed, but other length variants remain. This file must contain some unwanted length variants (&lt;a href=&quot;#identify-validated-non-target-ASVs&quot;&gt;see below&lt;/a&gt; for why.). If this file contains over 10,000 ASVs, it is suggested that denoising should be run before NUMTdumper.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; should be the path to a fasta file of unique sequences with unique header names to filter. There are no header format requirements. For best operation of NUMTdumper, the sequences in this file should have had primers trimmed and low-quality sequences removed. It is recommended that sequences that are more than 100bp longer or shorter than the expected range of your target locus should have been removed, but other length variants remain. This file must contain some unwanted length variants (&lt;a href=&quot;#identify-validated-non-target-ASVs&quot;&gt;see below&lt;/a&gt; for why.). If this file contains over 10,000 ASVs, it is suggested that denoising should be run before NUMTdumper.</target>
        </trans-unit>
        <trans-unit id="cf9c17a420ae0434538fb49ccd5c850e77d4d9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be the path to a file to write retained ASVs to.  If the file already exists, NUMTdumper will exit with an error unless &lt;code&gt;--overwrite&lt;/code&gt; is set. &lt;code&gt;-f/--outfasta path&lt;/code&gt; is only required if the other arguments specify a single output file; otherwise &lt;code&gt;-o/--outputdirectory&lt;/code&gt; would be required.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; should be the path to a file to write retained ASVs to. If the file already exists, NUMTdumper will exit with an error unless &lt;code&gt;--overwrite&lt;/code&gt; is set. &lt;code&gt;-f/--outfasta path&lt;/code&gt; is only required if the other arguments specify a single output file; otherwise &lt;code&gt;-o/--outputdirectory&lt;/code&gt; would be required.</target>
        </trans-unit>
        <trans-unit id="ddbdc7eb967e04d4ab5348ae9542e8b4d9b6741b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be the path to a newick-format ultrametric tree. Supplying a tree will skip alignment of unaligned ASV sequences supplied to &lt;code&gt;-A/--asvs&lt;/code&gt;, and subsequent distance matrix computation and UPGMA tree building. This can speed up the run time substantially for datasets with large numbers of ASVs.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; should be the path to a newick-format ultrametric tree. Supplying a tree will skip alignment of unaligned ASV sequences supplied to &lt;code&gt;-A/--asvs&lt;/code&gt; , and subsequent distance matrix computation and UPGMA tree building. This can speed up the run time substantially for datasets with large numbers of ASVs.</target>
        </trans-unit>
        <trans-unit id="827a185c002fa85a72786386dd18b2f8b5e98c95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be the path to a text file containing a specification for the terms apply when applying frequency filtering. These are explained in detail above, and an example specifications.txt file is &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/blob/master/specifications.txt&quot;&gt;supplied in the GitHub repository&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; should be the path to a text file containing a specification for the terms apply when applying frequency filtering. These are explained in detail above, and an example specifications.txt file is &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/blob/master/specifications.txt&quot;&gt;supplied in the GitHub repository&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="37f5054032eaae5d086e34932ae2c8bc4612f68a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; to a '_resultcache' file output from a previous NUMTdumper run in mode &lt;code&gt;find&lt;/code&gt;. If specified, &lt;code&gt;-i/--resultindex&lt;/code&gt; is required.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; to a '_resultcache' file output from a previous NUMTdumper run in mode &lt;code&gt;find&lt;/code&gt; . If specified, &lt;code&gt;-i/--resultindex&lt;/code&gt; is required.</target>
        </trans-unit>
        <trans-unit id="7591c38a6b9f749b0992539ed64aa1b0bee48783" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Important note:&lt;/em&gt; using &lt;code&gt;dump&lt;/code&gt; by specifying thresholds is unlikely to return the same set ASVs for the same input data and threshold specification than using &lt;code&gt;find&lt;/code&gt;, outputting a resultcache and running this in &lt;code&gt;dump&lt;/code&gt;. &lt;a href=&quot;#numtdumped-asv-fasta-format-file&quot;&gt;See below&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;em&gt;Important note:&lt;/em&gt; using &lt;code&gt;dump&lt;/code&gt; by specifying thresholds is unlikely to return the same set ASVs for the same input data and threshold specification than using &lt;code&gt;find&lt;/code&gt; , outputting a resultcache and running this in &lt;code&gt;dump&lt;/code&gt; . &lt;a href=&quot;#numtdumped-asv-fasta-format-file&quot;&gt;See below&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="2c7be8895dfaf9c12af673eb0c0759418a071022" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_threshold&lt;/em&gt;: one or more columns giving threshold values for all bins/metric combinations in the specification. If a term does not include a bin/metric combination, this value will be 0. For the example above, the third column would be &lt;code&gt;library_n_threshold&lt;/code&gt; and contain 20 values from 10 - 100, followed by 10 0s. The fourth column would be &lt;code&gt;library_p_threshold&lt;/code&gt; and contain 20 0s followed by 10 values from 0.001 - 0.1.</source>
          <target state="translated">&lt;em&gt;_threshold&lt;/em&gt;: one or more columns giving threshold values for all bins/metric combinations in the specification. If a term does not include a bin/metric combination, this value will be 0. For the example above, the third column would be &lt;code&gt;library_n_threshold&lt;/code&gt; and contain 20 values from 10 - 100, followed by 10 0s. The fourth column would be &lt;code&gt;library_p_threshold&lt;/code&gt; and contain 20 0s followed by 10 values from 0.001 - 0.1.</target>
        </trans-unit>
        <trans-unit id="1b7c5d8ec942c6fbf772a1824a2fc5d359d4acb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;asvs_prelim_rejected_n/p&lt;/em&gt;: the number of ASVs and proportion of total ASVs that failed the given threshold(s), before rejecting any surviving verified-non-authentic ASVs and retaining any lost verified-authentics ASVs</source>
          <target state="translated">&lt;em&gt;asvs_prelim_rejected_n/p&lt;/em&gt;: the number of ASVs and proportion of total ASVs that failed the given threshold(s), before rejecting any surviving verified-non-authentic ASVs and retaining any lost verified-authentics ASVs</target>
        </trans-unit>
        <trans-unit id="3965f1e1b30a8bc1828ca20dbd139ebeb155b31b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;asvs_prelim_retained_n/p&lt;/em&gt;: the number of ASVs and proportion of total ASVs that passed the given threshold(s), before rejecting any surviving verified-non-authentic ASVs and retaining any lost verified-authentics ASVs</source>
          <target state="translated">&lt;em&gt;asvs_prelim_retained_n/p&lt;/em&gt;: the number of ASVs and proportion of total ASVs that passed the given threshold(s), before rejecting any surviving verified-non-authentic ASVs and retaining any lost verified-authentics ASVs</target>
        </trans-unit>
        <trans-unit id="b38411cca15693123170b8cc185fb5a5175d1121" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;asvs_total&lt;/em&gt;: the total number of ASVs in the dataset.</source>
          <target state="translated">&lt;em&gt;asvs_total&lt;/em&gt;: the total number of ASVs in the dataset.</target>
        </trans-unit>
        <trans-unit id="8dcaec88a7515cac2f6ea0fbcb4dcd947894400e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;asvsactual_rejected_n/p&lt;/em&gt;: the total number of and proportion of total ASVs that were verified non-authentic and/or failed the given threshold(s)</source>
          <target state="translated">&lt;em&gt;asvsactual_rejected_n/p&lt;/em&gt;: the total number of and proportion of total ASVs that were verified non-authentic and/or failed the given threshold(s)</target>
        </trans-unit>
        <trans-unit id="fe6472e59a8bd31b16b4c48e6cac85b4da644e48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;asvsactual_retained_n/p&lt;/em&gt;: the total number of and proportion of total ASVs that were verified authentic, not verified non-authentic, and passed the given threshold(s)</source>
          <target state="translated">&lt;em&gt;asvsactual_retained_n/p&lt;/em&gt;: the total number of and proportion of total ASVs that were verified authentic, not verified non-authentic, and passed the given threshold(s)</target>
        </trans-unit>
        <trans-unit id="d49e90518e80c551a4588ac28013512461d3797b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nontargets_retained/rejected_n/p&lt;/em&gt;: the number of and proportion of total verified non-authentic ASVs that passed/failed the given threshold(s)</source>
          <target state="translated">&lt;em&gt;nontargets_retained/rejected_n/p&lt;/em&gt;: the number of and proportion of total verified non-authentic ASVs that passed/failed the given threshold(s)</target>
        </trans-unit>
        <trans-unit id="5031552acf209a93de571dafe0ad51667627d369" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nontargets_total_observed&lt;/em&gt;: the total number of verified non-authentic ASVs</source>
          <target state="translated">&lt;em&gt;nontargets_total_observed&lt;/em&gt;: the total number of verified non-authentic ASVs</target>
        </trans-unit>
        <trans-unit id="7845b36bdee3152330ac3d38301b49e86f52c438" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rejects_hash&lt;/em&gt;: the hashed alphabetically sorted list of actual rejected ASVs for this given set. Identical values on different rows denote those rows rejected an identical set of ASVs.</source>
          <target state="translated">&lt;em&gt;rejects_hash&lt;/em&gt;: the hashed alphabetically sorted list of actual rejected ASVs for this given set. Identical values on different rows denote those rows rejected an identical set of ASVs.</target>
        </trans-unit>
        <trans-unit id="7572abd7221ae19e71cbdc83a034dfeda8b68017" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;resultindex&lt;/em&gt;: a unique identifier for each term specification and threshold combination, for ease of ASV retrieval using &lt;code&gt;dump&lt;/code&gt; mode.</source>
          <target state="translated">&lt;em&gt;resultindex&lt;/em&gt;: a unique identifier for each term specification and threshold combination, for ease of ASV retrieval using &lt;code&gt;dump&lt;/code&gt; mode.</target>
        </trans-unit>
        <trans-unit id="f0fe0ca9475988e8392acf4748e68f63040bf93d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;score&lt;/em&gt;: an experimental value used to asssess relative success among threshold sets, &lt;a href=&quot;#scoring-and-estimation&quot;&gt;see below&lt;/a&gt; for details</source>
          <target state="translated">&lt;em&gt;score&lt;/em&gt;: an experimental value used to asssess relative success among threshold sets, &lt;a href=&quot;#scoring-and-estimation&quot;&gt;see below&lt;/a&gt; for details</target>
        </trans-unit>
        <trans-unit id="df1de3ebbc9159c7ae89d41e1a23287865198d07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;targets/nontargets_retained_estimate&lt;/em&gt;: the estimated number of verified authentic and verified non-authentic ASVs within those preliminarily retained, based on the calculations described below.</source>
          <target state="translated">&lt;em&gt;targets/nontargets_retained_estimate&lt;/em&gt;: the estimated number of verified authentic and verified non-authentic ASVs within those preliminarily retained, based on the calculations described below.</target>
        </trans-unit>
        <trans-unit id="e9874e2f7af92fac76ee603299b70e110f8ff043" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;targets/nontargets_total_estimate&lt;/em&gt;: the estimated number of verified authentic and verified non-authentic ASVs in the initial dataset, prior to filtering, based on the calculations described below.</source>
          <target state="translated">&lt;em&gt;targets/nontargets_total_estimate&lt;/em&gt;: the estimated number of verified authentic and verified non-authentic ASVs in the initial dataset, prior to filtering, based on the calculations described below.</target>
        </trans-unit>
        <trans-unit id="753afe3c735e8a62dab5e45d98db88cd3969a77d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;targets_retained/rejected_n/p&lt;/em&gt;: the number of and proportion of total verified authentic ASVs that passed/failed the given threshold(s)</source>
          <target state="translated">&lt;em&gt;targets_retained/rejected_n/p&lt;/em&gt;: the number of and proportion of total verified authentic ASVs that passed/failed the given threshold(s)</target>
        </trans-unit>
        <trans-unit id="72c78eedcb27af8540c7add98ffa672af02ae0a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;targets_total_observed&lt;/em&gt;: the total number of verified authentic ASVs</source>
          <target state="translated">&lt;em&gt;targets_total_observed&lt;/em&gt;: the total number of verified authentic ASVs</target>
        </trans-unit>
        <trans-unit id="ea64c07046b8c88140ca2910c0f5b7db904fd421" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;term&lt;/em&gt;: each additive term, repeated for a number of rows equal to the number of thresholds supplied to this term. For example, if the first terms in the specifications are &lt;code&gt;[library; n; 10-100/20] + [library; p; 0.001-0.1/10]&lt;/code&gt;, the first 20 rows will be for term &lt;code&gt;library_n&lt;/code&gt; and the next 10 rows will be term &lt;code&gt;library_p&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;term&lt;/em&gt;: each additive term, repeated for a number of rows equal to the number of thresholds supplied to this term. For example, if the first terms in the specifications are &lt;code&gt;[library; n; 10-100/20] + [library; p; 0.001-0.1/10]&lt;/code&gt; , the first 20 rows will be for term &lt;code&gt;library_n&lt;/code&gt; and the next 10 rows will be term &lt;code&gt;library_p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa49e5382b47c129a15049606394edf1d18fef35" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;find&lt;/code&gt; run carries out five main tasks:</source>
          <target state="translated">A default &lt;code&gt;find&lt;/code&gt; run carries out five main tasks:</target>
        </trans-unit>
        <trans-unit id="5b1a7a58a53e3352704f2853e8ae50b67614b61c" translate="yes" xml:space="preserve">
          <source>A filtering specification consists of one or more 'terms'. Each term comprises three parts, as follows:</source>
          <target state="translated">一个过滤规范由一个或多个 &quot;术语 &quot;组成。每个术语包括以下三个部分:</target>
        </trans-unit>
        <trans-unit id="0c6c8b2b858d6a6f28e2901b96cdf67514e2f97e" translate="yes" xml:space="preserve">
          <source>A term comprising of one of each of the three specifications (category(/ies), metric, threshold(s)) is written within square brackets, with the three parts separated by semicolons, and any spaces are ignored. For example:</source>
          <target state="translated">由三种规格(类别(/ies)、度量、阈值)中的一种组成的术语写在方括号内,三个部分之间用分号隔开,任何空格都被忽略。例如:</target>
        </trans-unit>
        <trans-unit id="1e443a7e02afdde5c8aaf00a51f73fd9c9aa6514" translate="yes" xml:space="preserve">
          <source>A value between 0 and 1 specifiying the maximum percent divergence (1 = 100%) by which to delimit clades from a UPGMA tree. This is implemented by passing the supplied value to the &lt;code&gt;h&lt;/code&gt; argument of the R function &lt;a href=&quot;https://stat.ethz.ch/R-manual/R-devel/library/stats/html/cutree.html&quot;&gt;&lt;code&gt;cutree&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A value between 0 and 1 specifiying the maximum percent divergence (1 = 100%) by which to delimit clades from a UPGMA tree. This is implemented by passing the supplied value to the &lt;code&gt;h&lt;/code&gt; argument of the R function &lt;a href=&quot;https://stat.ethz.ch/R-manual/R-devel/library/stats/html/cutree.html&quot;&gt; &lt;code&gt;cutree&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dd3c9e7c0d703132dc0141ab28eb9a3d5e8ffe8e" translate="yes" xml:space="preserve">
          <source>ASV assessment</source>
          <target state="translated">ASV评估</target>
        </trans-unit>
        <trans-unit id="3a2fb540fa02624abc84c8ef9387abb8a2d77391" translate="yes" xml:space="preserve">
          <source>ASV counts</source>
          <target state="translated">ASV计数</target>
        </trans-unit>
        <trans-unit id="c68ad6d88ad873e3a1c6c29ed6ad75af23ccb046" translate="yes" xml:space="preserve">
          <source>ASV is a verified-authentic ASV</source>
          <target state="translated">ASV是一个经过验证的真实ASV。</target>
        </trans-unit>
        <trans-unit id="530dec5d98004482d7d4b596668a9157525cd487" translate="yes" xml:space="preserve">
          <source>ASV is not a verified-non-authentic ASV</source>
          <target state="translated">ASV不是一个经过验证的非真实ASV。</target>
        </trans-unit>
        <trans-unit id="c63c4ea27ff21266bfb434de54d3cf63ccdcaa13" translate="yes" xml:space="preserve">
          <source>ASV is present in a frequency equal to or exceeding any thresholds in any bins in which it occurs</source>
          <target state="translated">ASV的出现频率等于或超过其出现的任何区间的任何阈值。</target>
        </trans-unit>
        <trans-unit id="46ab4ab1f47c0587cc571fd4b8e10dc823375bab" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;--onlyvarybycodon&lt;/code&gt; may be specified, which further restricts the range to only values differing from the expected length by a multiple of three. If used in conjunction with a minimum and maximum length specification, &lt;code&gt;--onlyvarybycodon&lt;/code&gt; requires that &lt;code&gt;-l/--expectedlength&lt;/code&gt; is also specified.</source>
          <target state="translated">Additionally, &lt;code&gt;--onlyvarybycodon&lt;/code&gt; may be specified, which further restricts the range to only values differing from the expected length by a multiple of three. If used in conjunction with a minimum and maximum length specification, &lt;code&gt;--onlyvarybycodon&lt;/code&gt; requires that &lt;code&gt;-l/--expectedlength&lt;/code&gt; is also specified.</target>
        </trans-unit>
        <trans-unit id="fdc1877117a852eb4d785f412a422e1a9d32033c" translate="yes" xml:space="preserve">
          <source>Aligned/Unaligned fasta</source>
          <target state="translated">对齐/不对齐的fasta</target>
        </trans-unit>
        <trans-unit id="a6257c7c38f048faa956b8b6a0943cdb613935d9" translate="yes" xml:space="preserve">
          <source>Alongside the same ASV file as used for a &lt;code&gt;find&lt;/code&gt; run (&lt;code&gt;-A&lt;/code&gt;), this command specifies the path to a resultcache file output from that &lt;code&gt;find&lt;/code&gt; run (&lt;code&gt;-C&lt;/code&gt;). After analysing the results, the user has determined that the optimal threshold set (&lt;code&gt;-i&lt;/code&gt;) is set 35 (an index given in the &lt;code&gt;find&lt;/code&gt; output data). NUMTdumper will parse these inputs and write all ASVs that passed the frequency thresholds for this set &lt;em&gt;and/or&lt;/em&gt; were determined to be verified-authentic-ASVs to the output file (&lt;code&gt;-o&lt;/code&gt;). All of the specifications, threshold sets and other input files are not needed as all of this information is contained in the resultcache file.</source>
          <target state="translated">Alongside the same ASV file as used for a &lt;code&gt;find&lt;/code&gt; run ( &lt;code&gt;-A&lt;/code&gt; ), this command specifies the path to a resultcache file output from that &lt;code&gt;find&lt;/code&gt; run ( &lt;code&gt;-C&lt;/code&gt; ). After analysing the results, the user has determined that the optimal threshold set ( &lt;code&gt;-i&lt;/code&gt; ) is set 35 (an index given in the &lt;code&gt;find&lt;/code&gt; output data). NUMTdumper will parse these inputs and write all ASVs that passed the frequency thresholds for this set &lt;em&gt;and/or&lt;/em&gt; were determined to be verified-authentic-ASVs to the output file ( &lt;code&gt;-o&lt;/code&gt; ). All of the specifications, threshold sets and other input files are not needed as all of this information is contained in the resultcache file.</target>
        </trans-unit>
        <trans-unit id="4cc804acebc66ef776d795556d10db51516ffd49" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;code&gt;dump&lt;/code&gt; mode can work very similarly to &lt;code&gt;find&lt;/code&gt; mode. Rather than taking a resultcache and result index, you can supply any arguments needed for binning and threshold specification. For example:</source>
          <target state="translated">Alternatively, &lt;code&gt;dump&lt;/code&gt; mode can work very similarly to &lt;code&gt;find&lt;/code&gt; mode. Rather than taking a resultcache and result index, you can supply any arguments needed for binning and threshold specification. For example:</target>
        </trans-unit>
        <trans-unit id="7e795b7b67ec9dec36a6217991d96755ad2c3925" translate="yes" xml:space="preserve">
          <source>As part of a NUMTdumper run, the user must parameterise the determination of two control groups of ASVs. Control ASVs are those that can be determined &lt;em&gt;a priori&lt;/em&gt; to be either validly authentic or non-authentic: authentic ASVs are determined by a match against a reference set of sequences, non-authentic ASVs are determined by falling outside acceptable length and translation properties. The user must provide a reference set and specify acceptable sequence lengths, and may fine-tune reference matching and translation assessment.</source>
          <target state="translated">As part of a NUMTdumper run, the user must parameterise the determination of two control groups of ASVs. Control ASVs are those that can be determined &lt;em&gt;a priori&lt;/em&gt; to be either validly authentic or non-authentic: authentic ASVs are determined by a match against a reference set of sequences, non-authentic ASVs are determined by falling outside acceptable length and translation properties. The user must provide a reference set and specify acceptable sequence lengths, and may fine-tune reference matching and translation assessment.</target>
        </trans-unit>
        <trans-unit id="e7b806ab1606d79f809825a4dd93723a9fafb88e" translate="yes" xml:space="preserve">
          <source>As standard, for a given threshold set, NUMTdumper outputs those ASVs that fulfil the following conditions, in order of priority:</source>
          <target state="translated">作为标准,对于给定的阈值集,NUMTdumper按优先级顺序输出满足以下条件的ASV。</target>
        </trans-unit>
        <trans-unit id="1aed839d4962f169a4f97420b64cbb4bb507061f" translate="yes" xml:space="preserve">
          <source>Assess all ASVs for potential membership of the authentic or non-authentic control groups, by</source>
          <target state="translated">通过以下方式评估所有ASV是否有可能成为真实或非真实控制组的成员:</target>
        </trans-unit>
        <trans-unit id="762d45d25519ee0b5a00ba2dd716e81206115e52" translate="yes" xml:space="preserve">
          <source>Bin ASVs according to the specified binning strategies and generate counts of ASV reads within these bins</source>
          <target state="translated">根据指定的分选策略对ASV进行分选,并在这些分选中生成ASV读数。</target>
        </trans-unit>
        <trans-unit id="4a18677541a9b897289cb258320a251020fc5045" translate="yes" xml:space="preserve">
          <source>Building a term</source>
          <target state="translated">建立一个术语</target>
        </trans-unit>
        <trans-unit id="d3ea98b16e3bacf3eec87b9b429197a3207db958" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;find&lt;/code&gt; mode does not output filtered ASVs, instead providing detailed statistics for assessment to determine the optimal threshold set for the dataset in question. This option provides for the output of a fasta file for each threshold set, containing the sequences that were not rejected by that threshold set and/or were determined to be verified-authentic ASVs. If supplied without a value, a fasta file will be output for each threshold set that recieved the best score. If a value is supplied, NUMTdumper will output a fasta file for each threshold set that scored within the top &lt;code&gt;n&lt;/code&gt; proportion of threshold sets. If &lt;code&gt;n&lt;/code&gt; is 1, a fasta will be output for every threshold set. This can generate a large number of fasta files! For more information about scoring, &lt;a href=&quot;#scoring-and-estimation&quot;&gt;see below&lt;/a&gt;.</source>
          <target state="translated">By default, &lt;code&gt;find&lt;/code&gt; mode does not output filtered ASVs, instead providing detailed statistics for assessment to determine the optimal threshold set for the dataset in question. This option provides for the output of a fasta file for each threshold set, containing the sequences that were not rejected by that threshold set and/or were determined to be verified-authentic ASVs. If supplied without a value, a fasta file will be output for each threshold set that recieved the best score. If a value is supplied, NUMTdumper will output a fasta file for each threshold set that scored within the top &lt;code&gt;n&lt;/code&gt; proportion of threshold sets. If &lt;code&gt;n&lt;/code&gt; is 1, a fasta will be output for every threshold set. This can generate a large number of fasta files! For more information about scoring, &lt;a href=&quot;#scoring-and-estimation&quot;&gt;see below&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f1f5c9ca64bdb8542a7ad70c633cd78f36a20390" translate="yes" xml:space="preserve">
          <source>Clade delimitation and binning arguments</source>
          <target state="translated">氏族定界和分选参数</target>
        </trans-unit>
        <trans-unit id="b633bafa69426cf65e24196d4a29cd422169b4d3" translate="yes" xml:space="preserve">
          <source>Clade groupings</source>
          <target state="translated">氏族分组</target>
        </trans-unit>
        <trans-unit id="1140574da0bdadd64efefb97668562468f8858ca" translate="yes" xml:space="preserve">
          <source>Control list (&lt;code&gt;find&lt;/code&gt; only)</source>
          <target state="translated">Control list ( &lt;code&gt;find&lt;/code&gt; only)</target>
        </trans-unit>
        <trans-unit id="d77a38148fa274cafe129706f2ddf21cb576bcfe" translate="yes" xml:space="preserve">
          <source>Core arguments</source>
          <target state="translated">核心论点</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">依赖性</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">详细内容</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">发展</target>
        </trans-unit>
        <trans-unit id="55823efb45056acba11210535a57d8bf0bf96db0" translate="yes" xml:space="preserve">
          <source>Done!</source>
          <target state="translated">好了!</target>
        </trans-unit>
        <trans-unit id="a221c027e0cbb5a6324400047ff3de0e8e3a44a4" translate="yes" xml:space="preserve">
          <source>Each value of &lt;code&gt;n&lt;/code&gt; should be 0 or a positive integer referring to an result set index for which to extract retained filtered ASVs from a specified &lt;code&gt;-C/--resultcache&lt;/code&gt;. Result set indices can be found in the statistics output from a &lt;code&gt;find&lt;/code&gt; run.</source>
          <target state="translated">Each value of &lt;code&gt;n&lt;/code&gt; should be 0 or a positive integer referring to an result set index for which to extract retained filtered ASVs from a specified &lt;code&gt;-C/--resultcache&lt;/code&gt; . Result set indices can be found in the statistics output from a &lt;code&gt;find&lt;/code&gt; run.</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="fb211b835d2e88d65902776c4847f8aa7036b242" translate="yes" xml:space="preserve">
          <source>Finally, ensure the necessary R libraries are installed:</source>
          <target state="translated">最后,确保安装了必要的R库。</target>
        </trans-unit>
        <trans-unit id="d96d265904dc97dc21471859bbfa0d4709649153" translate="yes" xml:space="preserve">
          <source>Finding ASVs that fall outside acceptable length or translation parameters</source>
          <target state="translated">寻找超出可接受长度或翻译参数的ASV。</target>
        </trans-unit>
        <trans-unit id="e1a68e0aa1f1c175ab1b87eb3fe52efed2362de2" translate="yes" xml:space="preserve">
          <source>Finding ASVs that match to the supplied reference set(s) or blast database(s) using BLAST</source>
          <target state="translated">使用BLAST寻找与所提供的参考集或爆炸数据库相匹配的ASV。</target>
        </trans-unit>
        <trans-unit id="bb73e780b9fec47b629a0597074e981df7cf476e" translate="yes" xml:space="preserve">
          <source>For each specified set of thresholds, assess all ASVs for retention or rejection according to their binned read frequencies</source>
          <target state="translated">对于每个指定的阈值集,根据它们的分层读取频率评估所有ASV的保留或拒绝。</target>
        </trans-unit>
        <trans-unit id="4fecc1f339bd60e743065c41c7608c8863c963f5" translate="yes" xml:space="preserve">
          <source>Frequency can be assessed as one of two metrics, specified as follows:</source>
          <target state="translated">频率可以作为两个指标之一来评估,具体如下:</target>
        </trans-unit>
        <trans-unit id="c041845468b44723b9e0cbeebf24d29f4f74a29a" translate="yes" xml:space="preserve">
          <source>Generating clades</source>
          <target state="translated">生成族类</target>
        </trans-unit>
        <trans-unit id="26bd64a1bf4cf342eef4d7dccae2e746b748455e" translate="yes" xml:space="preserve">
          <source>Identifying validated non-target ASVs</source>
          <target state="translated">确定有效的非目标ASV;</target>
        </trans-unit>
        <trans-unit id="9a556327f59530d66e10fdba5c2d4c026b1d269e" translate="yes" xml:space="preserve">
          <source>Identifying validated target ASVs</source>
          <target state="translated">确定审定的目标ASV</target>
        </trans-unit>
        <trans-unit id="ee640e49de5aa81dc095df3234e3589be7853099" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-r/--readingframe&lt;/code&gt; is not specified, NUMTdumper will automatically detect the reading frame. Higher values of this argument increase certainty in this detection. The default is 0.95, i.e. 95% confidence.</source>
          <target state="translated">If &lt;code&gt;-r/--readingframe&lt;/code&gt; is not specified, NUMTdumper will automatically detect the reading frame. Higher values of this argument increase certainty in this detection. The default is 0.95, i.e. 95% confidence.</target>
        </trans-unit>
        <trans-unit id="0f42f3a3053dbaa6b6afea1428725ffdfafc04d0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-r/--readingframe&lt;/code&gt; is not specified, NUMTdumper will automatically detect the reading frame. Higher values of this argument increase the minimum number of stops that must be encountered in all reading frames before a reading frame can be selected. In cases of very small datasets, this value may need to be reduced from the default of 100.</source>
          <target state="translated">If &lt;code&gt;-r/--readingframe&lt;/code&gt; is not specified, NUMTdumper will automatically detect the reading frame. Higher values of this argument increase the minimum number of stops that must be encountered in all reading frames before a reading frame can be selected. In cases of very small datasets, this value may need to be reduced from the default of 100.</target>
        </trans-unit>
        <trans-unit id="3f3c9ddeeb84874ea2da729c030f04a556bdb890" translate="yes" xml:space="preserve">
          <source>If specified, the computed range of values will be reduced to only include those values that differ from the value supplied to &lt;code&gt;-l/--expectedlength&lt;/code&gt; by 3. The purpose of this is to allow realistic variation around the expected length, i.e. variation that does not involve a frameshift in the translation of the sequence.</source>
          <target state="translated">If specified, the computed range of values will be reduced to only include those values that differ from the value supplied to &lt;code&gt;-l/--expectedlength&lt;/code&gt; by 3. The purpose of this is to allow realistic variation around the expected length, i.e. variation that does not involve a frameshift in the translation of the sequence.</target>
        </trans-unit>
        <trans-unit id="e5044294915af3bb3a5643b74db7e27d027cd381" translate="yes" xml:space="preserve">
          <source>If supplied, NUMTdumper will always run alignment on the supplied ASVs, whether already aligned or not. However this flag will be ignored if a tree is supplied, or if a &lt;code&gt;-C/--resultcache&lt;/code&gt; is supplied in &lt;code&gt;dump&lt;/code&gt; mode.</source>
          <target state="translated">If supplied, NUMTdumper will always run alignment on the supplied ASVs, whether already aligned or not. However this flag will be ignored if a tree is supplied, or if a &lt;code&gt;-C/--resultcache&lt;/code&gt; is supplied in &lt;code&gt;dump&lt;/code&gt; mode.</target>
        </trans-unit>
        <trans-unit id="1a3ce79ad33cbfb6646325ccb81a61d4712decf6" translate="yes" xml:space="preserve">
          <source>If supplied, NUMTdumper will overwrite any files in the destination output directory (including the current directory, if this is the specified &lt;code&gt;-o/-outputdirectory&lt;/code&gt;) that have the same name as new outputs. This is provided as insurance against accidentally re-starting a run from scratch.</source>
          <target state="translated">If supplied, NUMTdumper will overwrite any files in the destination output directory (including the current directory, if this is the specified &lt;code&gt;-o/-outputdirectory&lt;/code&gt; ) that have the same name as new outputs. This is provided as insurance against accidentally re-starting a run from scratch.</target>
        </trans-unit>
        <trans-unit id="bd7bea756a570406c73d3b0f8815a3e22c521b00" translate="yes" xml:space="preserve">
          <source>If supplied, this value will be used as the reading frame for amino acid translation for all ASVs, where reading frame 1 translates from the 1st base of the ASV sequence, and so on. If not supplied, this will be automatically detected.</source>
          <target state="translated">如果提供,该值将被用作所有ASV的氨基酸翻译的阅读框,其中阅读框1从ASV序列的第1个碱基开始翻译,以此类推。如果不提供,将自动检测。</target>
        </trans-unit>
        <trans-unit id="142c7d8d821696c5e57b6816ff849050bdcf7a54" translate="yes" xml:space="preserve">
          <source>If supplied, when comparing the per-bin frequencies of an ASV against a threshold, NUMTdumper will designate the ASV as a NUMT for that threshold set if it fails to meet the threshold in &lt;em&gt;any&lt;/em&gt; of the bins in which it occurs (instead of the default, &lt;em&gt;all&lt;/em&gt;). This is substantially more stringent and is not generally recommended, but may be suitable for small datasets.</source>
          <target state="translated">If supplied, when comparing the per-bin frequencies of an ASV against a threshold, NUMTdumper will designate the ASV as a NUMT for that threshold set if it fails to meet the threshold in &lt;em&gt;any&lt;/em&gt; of the bins in which it occurs (instead of the default, &lt;em&gt;all&lt;/em&gt;). This is substantially more stringent and is not generally recommended, but may be suitable for small datasets.</target>
        </trans-unit>
        <trans-unit id="44282586dda7e211a6dcf18cfee919e69f0c711d" translate="yes" xml:space="preserve">
          <source>If the above fails, ensure that the python version that &lt;code&gt;python3&lt;/code&gt; refers to in your current environment is &amp;gt;=3.6 (&lt;code&gt;python3 --version&lt;/code&gt;).</source>
          <target state="translated">If the above fails, ensure that the python version that &lt;code&gt;python3&lt;/code&gt; refers to in your current environment is &amp;gt;=3.6 ( &lt;code&gt;python3 --version&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="36107a3b03f46920e0785beee7e7c56420d9d3f9" translate="yes" xml:space="preserve">
          <source>If the input ASVs were aligned, NUMTdumper unaligns (degaps) them and outputs the sequences to the *_unaligned.fa file, or vice versa if the input ASVs were unaligned.</source>
          <target state="translated">如果输入的ASVs是对齐的,NUMTdumper就会取消对齐(degaps),并将序列输出到*_unaligned.fa文件中,如果输入的ASVs是未对齐的,则反之。</target>
        </trans-unit>
        <trans-unit id="8fe41516b82ab8335a2ac8f4c4370652a8af9164" translate="yes" xml:space="preserve">
          <source>If using a mode that outputs multiple files, &lt;code&gt;path&lt;/code&gt; should be the path to a directory in which to place these files. If the directory already exists, NUMTdumper will exit with an error unless &lt;code&gt;--overwrite&lt;/code&gt; is set.</source>
          <target state="translated">If using a mode that outputs multiple files, &lt;code&gt;path&lt;/code&gt; should be the path to a directory in which to place these files. If the directory already exists, NUMTdumper will exit with an error unless &lt;code&gt;--overwrite&lt;/code&gt; is set.</target>
        </trans-unit>
        <trans-unit id="fe9d87158444229d9c8496b106195669721fed78" translate="yes" xml:space="preserve">
          <source>If you already have aligned ASVs and a tree file, but don't have any references, you could instead run:</source>
          <target state="translated">如果您已经有了对齐的 ASV 和树形文件,但没有任何引用,您可以运行。</target>
        </trans-unit>
        <trans-unit id="a7c35c28415eb96e6377cff9deab88afb3e45c8a" translate="yes" xml:space="preserve">
          <source>If your reads are in a single file, with library information in the headers, rather than multiple files for each different library, you would supply the path to that file to &lt;code&gt;-L&lt;/code&gt; instead:</source>
          <target state="translated">If your reads are in a single file, with library information in the headers, rather than multiple files for each different library, you would supply the path to that file to &lt;code&gt;-L&lt;/code&gt; instead:</target>
        </trans-unit>
        <trans-unit id="da945884c37b0acb79df0c6b425eeacaa4b536d1" translate="yes" xml:space="preserve">
          <source>In mode &lt;code&gt;find&lt;/code&gt; or mode &lt;code&gt;dump&lt;/code&gt; without a &lt;code&gt;-C/--resultcache&lt;/code&gt;, if ASV binning is to be performed on a per-taxon basis (&lt;a href=&quot;#specifications&quot;&gt;see specifications&lt;/a&gt;), &lt;code&gt;path&lt;/code&gt; should be the path to a comma-delimited text file with as many rows as ASVs supplied to &lt;code&gt;-A/--asvs&lt;/code&gt; and two columns. The first column should give the ASV read names, the second should give a grouping value for each ASV. This group is intended to allow for taxonomic bias in NUMT frequency, so is expected to be a taxonomic group, but NUMTdumper simply bins ASVs by unique group names so the actual content could be any string. The number of groups should be relatively low, less than 1% of the number of ASVs, and the ratio of ASVs to group number should be carefully considered when setting thresholds, remembering that when binning by library and taxonomic group, each library / taxon combination has only a small subset of the total ASV number.</source>
          <target state="translated">In mode &lt;code&gt;find&lt;/code&gt; or mode &lt;code&gt;dump&lt;/code&gt; without a &lt;code&gt;-C/--resultcache&lt;/code&gt; , if ASV binning is to be performed on a per-taxon basis (&lt;a href=&quot;#specifications&quot;&gt;see specifications&lt;/a&gt;), &lt;code&gt;path&lt;/code&gt; should be the path to a comma-delimited text file with as many rows as ASVs supplied to &lt;code&gt;-A/--asvs&lt;/code&gt; and two columns. The first column should give the ASV read names, the second should give a grouping value for each ASV. This group is intended to allow for taxonomic bias in NUMT frequency, so is expected to be a taxonomic group, but NUMTdumper simply bins ASVs by unique group names so the actual content could be any string. The number of groups should be relatively low, less than 1% of the number of ASVs, and the ratio of ASVs to group number should be carefully considered when setting thresholds, remembering that when binning by library and taxonomic group, each library / taxon combination has only a small subset of the total ASV number.</target>
        </trans-unit>
        <trans-unit id="7afb93b08562f4db13ff94b4f8f4400817694d41" translate="yes" xml:space="preserve">
          <source>In most cases, these arguments can be left alone, aside from &lt;code&gt;-s/--table&lt;/code&gt; which is alway required. By default, the reading frame is automatically detected by translating ASVs one-by-one in all frames and recording stop counts until a) a minimum sample size of total number of stops has been achieved and b) one frame achieves a significantly fewer stops than the other two frames. ASVs are translated in the order in which they are encountered in the ASVs file, under the assumption that ASVs are usually written in descending order of frequency after dereplication.</source>
          <target state="translated">In most cases, these arguments can be left alone, aside from &lt;code&gt;-s/--table&lt;/code&gt; which is alway required. By default, the reading frame is automatically detected by translating ASVs one-by-one in all frames and recording stop counts until a) a minimum sample size of total number of stops has been achieved and b) one frame achieves a significantly fewer stops than the other two frames. ASVs are translated in the order in which they are encountered in the ASVs file, under the assumption that ASVs are usually written in descending order of frequency after dereplication.</target>
        </trans-unit>
        <trans-unit id="74396db8aa9676de4eba0b2b034a65df58fb851e" translate="yes" xml:space="preserve">
          <source>In the second case, users may optionally skip all validation and simply use mode &lt;code&gt;dump&lt;/code&gt; to output a file of filtered ASVs based on a single set of term specifications and thresholds. In this case, the output ASVs are only those where the ASV is present in a frequency equal to or exceeding all thresholds in any bins in which it occurs. Thus the set of ASVs output from &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt; for the same set of term specifications and thresholds &lt;strong&gt;may not be identical&lt;/strong&gt;, because &lt;code&gt;dump&lt;/code&gt; does not perform any validation.</source>
          <target state="translated">In the second case, users may optionally skip all validation and simply use mode &lt;code&gt;dump&lt;/code&gt; to output a file of filtered ASVs based on a single set of term specifications and thresholds. In this case, the output ASVs are only those where the ASV is present in a frequency equal to or exceeding all thresholds in any bins in which it occurs. Thus the set of ASVs output from &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt; for the same set of term specifications and thresholds &lt;strong&gt;may not be identical&lt;/strong&gt;, because &lt;code&gt;dump&lt;/code&gt; does not perform any validation.</target>
        </trans-unit>
        <trans-unit id="7de8d1422656c29598d4269ad6e7eaf21726dc62" translate="yes" xml:space="preserve">
          <source>Independently analyse the tabulated results to decide on the best strategy</source>
          <target state="translated">独立分析表格中的结果,以决定最佳战略。</target>
        </trans-unit>
        <trans-unit id="3f43a2e4863dbf39da8cfbd5e4e557f3052ec269" translate="yes" xml:space="preserve">
          <source>Input data</source>
          <target state="translated">输入数据</target>
        </trans-unit>
        <trans-unit id="62c5004cacfb272c0672ff4e4689ec81214bdd99" translate="yes" xml:space="preserve">
          <source>Input data required</source>
          <target state="translated">所需输入数据</target>
        </trans-unit>
        <trans-unit id="416cd30c9ad12c7a89b3fc7c3dfc178dd0d3d2f8" translate="yes" xml:space="preserve">
          <source>Install NUMTdumper from the PyPI package:</source>
          <target state="translated">从PyPI包中安装NUMTdumper。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="4ee7c402e7ea6e251f35763721b3661effa7eafc" translate="yes" xml:space="preserve">
          <source>Length based parameters are used to calculate a set of lengths; an ASV with length outside this set will be designated a verified-non-authentic-ASV. A number of different arguments are available for flexible delimitation of this range. The user must specify sufficient information to compute the range, i.e.</source>
          <target state="translated">基于长度的参数用于计算一组长度;长度在这组之外的ASV将被指定为已验证-非真实-ASV。有许多不同的参数可用于灵活地划分这个范围。用户必须指定足够的信息来计算这个范围,即</target>
        </trans-unit>
        <trans-unit id="fdea4a722dd162b49c230be1507d0341208de24c" translate="yes" xml:space="preserve">
          <source>Length-based arguments</source>
          <target state="translated">基于长度的论点</target>
        </trans-unit>
        <trans-unit id="3f102ef28cb2c3106d9a70b67370bfa84fee3b4e" translate="yes" xml:space="preserve">
          <source>Make sure you have all of the system dependencies: Python3 (3.6+), pip, &lt;a href=&quot;https://mafft.cbrc.jp/alignment/software/linux.html&quot;&gt;MAFFT&lt;/a&gt;, &lt;a href=&quot;https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&amp;amp;DOC_TYPE=Download&quot;&gt;BLAST+&lt;/a&gt;, &lt;a href=&quot;https://cran.r-project.org/&quot;&gt;R&lt;/a&gt;. If you're on ubuntu linux, you can run:</source>
          <target state="translated">Make sure you have all of the system dependencies: Python3 (3.6+), pip, &lt;a href=&quot;https://mafft.cbrc.jp/alignment/software/linux.html&quot;&gt;MAFFT&lt;/a&gt;, &lt;a href=&quot;https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&amp;amp;DOC_TYPE=Download&quot;&gt;BLAST+&lt;/a&gt;, &lt;a href=&quot;https://cran.r-project.org/&quot;&gt;R&lt;/a&gt;. If you're on ubuntu linux, you can run:</target>
        </trans-unit>
        <trans-unit id="239273660b0f13cba1a710372240d6a08a3dfe30" translate="yes" xml:space="preserve">
          <source>Multiple terms</source>
          <target state="translated">多个条款</target>
        </trans-unit>
        <trans-unit id="b69d00369622462b86456aafaaab88974c6d1758" translate="yes" xml:space="preserve">
          <source>Multiple terms can also be compared simultaneously, or 'multiplicitively'. When running NUMTdumper in &lt;code&gt;find&lt;/code&gt; mode, thes would be specified using the &lt;code&gt;*&lt;/code&gt; betwene terms in the specifications text file, e.g.:
&lt;code&gt;[library; p; .001,0.005,0.01] * [total|clade; n; 2,5,10]&lt;/code&gt;
These lines would run 9 total iterations, comprising all possible combinations of thresholds from each set.
In the first iteration, ASVs would be designated as NUMTs if they had less than 1% of the reads in all* libraries in which they were present AND/OR if they had fewer than 2 reads within their clade across the entire dataset, and so on.</source>
          <target state="translated">Multiple terms can also be compared simultaneously, or 'multiplicitively'. When running NUMTdumper in &lt;code&gt;find&lt;/code&gt; mode, thes would be specified using the &lt;code&gt;*&lt;/code&gt; betwene terms in the specifications text file, e.g.: &lt;code&gt;[library; p; .001,0.005,0.01] * [total|clade; n; 2,5,10]&lt;/code&gt; These lines would run 9 total iterations, comprising all possible combinations of thresholds from each set. In the first iteration, ASVs would be designated as NUMTs if they had less than 1% of the reads in all* libraries in which they were present AND/OR if they had fewer than 2 reads within their clade across the entire dataset, and so on.</target>
        </trans-unit>
        <trans-unit id="680678a0bf8f17da576737d6b2f1bb72f155ecc2" translate="yes" xml:space="preserve">
          <source>Multiple values or ranges are specified in the form &lt;code&gt;a,b,c&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; can each be single values or ranges, for example &lt;code&gt;1,2,3,4-10/4&lt;/code&gt; will expand to &lt;code&gt;1, 2, 3, 4, 6, 8, 10&lt;/code&gt;</source>
          <target state="translated">Multiple values or ranges are specified in the form &lt;code&gt;a,b,c&lt;/code&gt; , where &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; , and &lt;code&gt;c&lt;/code&gt; can each be single values or ranges, for example &lt;code&gt;1,2,3,4-10/4&lt;/code&gt; will expand to &lt;code&gt;1, 2, 3, 4, 6, 8, 10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bad732ab0d6737f9e7d2a62ed4d8c37899bed20" translate="yes" xml:space="preserve">
          <source>NUMTdumped ASV fasta-format file</source>
          <target state="translated">NUMTdumped ASV fasta格式文件。</target>
        </trans-unit>
        <trans-unit id="3e5927fe01664d41c1ce7116a7c5259e25d79b20" translate="yes" xml:space="preserve">
          <source>NUMTdumper analyses a set of amplicons derived through metabarcoding of a mitochondrial coding locus to determine putative NUMT and other erroneous sequences based on relative read abundance thresholds within libraries, phylogenetic clades and/or taxonomic groupings.</source>
          <target state="translated">NUMTdumper分析通过线粒体编码位点元编码得到的一组扩增子,以根据文库、系统发育支系和/或分类学组中的相对读数丰度阈值确定推定的NUMT和其他错误序列。</target>
        </trans-unit>
        <trans-unit id="b53db3bff7dd9176426f1358bf6d28ef6006b04d" translate="yes" xml:space="preserve">
          <source>NUMTdumper enables considerable flexibility in the way that frequency filters can be applied in amplicon filtering. Unfortunately, this means it has a slightly complex way of specifying these filters. This is described in detail here, but for a quick start, you can simply use the &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/blob/master/specifications.txt&quot;&gt;specifications.txt file available in the GitHub repository&lt;/a&gt;. We recommend starting with this, looking at the results, and then modifying it as necessary for your data.</source>
          <target state="translated">NUMTdumper enables considerable flexibility in the way that frequency filters can be applied in amplicon filtering. Unfortunately, this means it has a slightly complex way of specifying these filters. This is described in detail here, but for a quick start, you can simply use the &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/blob/master/specifications.txt&quot;&gt;specifications.txt file available in the GitHub repository&lt;/a&gt;. We recommend starting with this, looking at the results, and then modifying it as necessary for your data.</target>
        </trans-unit>
        <trans-unit id="d583d612be308ee9cb4d0dde9d798be921bdadcc" translate="yes" xml:space="preserve">
          <source>NUMTdumper has summary help built in for the overall tool and the two run modes. These can be accessed by running the below commands.</source>
          <target state="translated">NUMTdumper内置了整个工具和两种运行模式的摘要帮助。这些可以通过运行以下命令来访问。</target>
        </trans-unit>
        <trans-unit id="577532dcc6f4444560f0c65e452725d8786d2f40" translate="yes" xml:space="preserve">
          <source>NUMTdumper operates using two submodules, &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt;, with the former being the main workhorse of the tool. The standard workflow would be as follows:</source>
          <target state="translated">NUMTdumper operates using two submodules, &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt; , with the former being the main workhorse of the tool. The standard workflow would be as follows:</target>
        </trans-unit>
        <trans-unit id="cb7c668c0833dae04f8e792d3351fec41d149dc5" translate="yes" xml:space="preserve">
          <source>NUMTdumper requires python3 and the python3 libraries biopython and scipy. These should automatically be installed if using the pip installer above.</source>
          <target state="translated">NUMTdumper需要python3和python3库biopython和scipy。如果使用上面的pip安装程序,这些库应该会自动安装。</target>
        </trans-unit>
        <trans-unit id="baa3fe54be0f71eb864e170b599d87924119d6bf" translate="yes" xml:space="preserve">
          <source>NUMTdumper requires the following executables to be available on the command line:</source>
          <target state="translated">NUMTdumper需要下列可执行文件在命令行中可用。</target>
        </trans-unit>
        <trans-unit id="ee2b99219378917bc563ccb0275cc346f5eccc51" translate="yes" xml:space="preserve">
          <source>NUMTdumper returns different outputs depending on mode and arguments. Unless specified by using &lt;code&gt;-f/--outfasta&lt;/code&gt;, all output files will use the same name as the input ASVs with a suffix appended.</source>
          <target state="translated">NUMTdumper returns different outputs depending on mode and arguments. Unless specified by using &lt;code&gt;-f/--outfasta&lt;/code&gt; , all output files will use the same name as the input ASVs with a suffix appended.</target>
        </trans-unit>
        <trans-unit id="d01dc5546701e10eeb2bd38bf84f0abf248e1208" translate="yes" xml:space="preserve">
          <source>NUMTdumper takes the guesswork and faff out of applying frequency-based filtering thresholds in NGS amplicon pipelines by utilising a modular threshold specification approach combined with detailed outputs to efficiently provide detailed insight into the effects of different filtering and binning strategies. This approach is explicitly developed towards removing putative NUMT sequences from a population of ASVs, but the methodology is broad enough that it will work simultaneously on any other types of low-frequency erroneous sequences, such as sequencing errors. A principal benefit of NUMTdumper over closely related tools is its validation approach, whereby input ASVs are assessed for membership of control groups for known authenticity. The effect of frequency thresholds and binning strategies on retention or rejection of the members of these is used to assess the optimal methodology for NUMT and error removal.</source>
          <target state="translated">NUMTdumper通过利用模块化的阈值规范方法,结合详细的输出,有效地对不同的过滤和分选策略的效果进行详细的分析,从而消除了在NGS扩增子流水线中应用基于频率的过滤阈值的猜测和麻烦。这种方法是明确针对从ASVs群体中去除推定的NUMT序列而开发的,但该方法足够广泛,它将同时适用于任何其他类型的低频错误序列,如测序错误。与密切相关的工具相比,NUMTdumper的一个主要优点是它的验证方法,即输入的ASVs被评估为已知真实性的控制组的成员。频率阈值和分群策略对保留或拒绝这些成员的影响被用来评估NUMT和错误去除的最佳方法。</target>
        </trans-unit>
        <trans-unit id="98250eda92254a03181fbfbf97930cca901e91da" translate="yes" xml:space="preserve">
          <source>NUMTdumper was developed and tested on Ubuntu Linux. It has not been tested anywhere else, but will probably work on most linux systems, and likely Mac OS as well. No idea about Windows.</source>
          <target state="translated">NUMTdumper是在Ubuntu Linux上开发和测试的。它还没有在其他地方进行过测试,但可能会在大多数linux系统上工作,也可能在Mac OS上工作。不知道Windows的情况。</target>
        </trans-unit>
        <trans-unit id="d114abaeb7737234e31e49ba9218d7e184a29ff5" translate="yes" xml:space="preserve">
          <source>NUMTdumper: let's dump those NUMTs!</source>
          <target state="translated">NUMTdumper:让我们甩掉这些NUMT吧!</target>
        </trans-unit>
        <trans-unit id="d36ce549f16feb4f4332eb73541b896e2ab2e3e9" translate="yes" xml:space="preserve">
          <source>NUMTdumper: validated NUMT removal for mitochondrial metabarcoding</source>
          <target state="translated">NUMTdumper:经过验证的线粒体元编码的NUMT去除。</target>
        </trans-unit>
        <trans-unit id="bbc199bb28764f2c5d5324c78145a69fb35e1d8b" translate="yes" xml:space="preserve">
          <source>Note that all commandline arguments can be provided in a file, one per line, with the path to the file supplied on the commandline preceeded by &lt;code&gt;@&lt;/code&gt;. For example, running &lt;code&gt;numtdumper find -A asvs.fasta -R references.fasta --realign&lt;/code&gt; would be the same as &lt;code&gt;numtdumper find @args.txt&lt;/code&gt; where the contents of &lt;code&gt;args.txt&lt;/code&gt; is:</source>
          <target state="translated">Note that all commandline arguments can be provided in a file, one per line, with the path to the file supplied on the commandline preceeded by &lt;code&gt;@&lt;/code&gt; . For example, running &lt;code&gt;numtdumper find -A asvs.fasta -R references.fasta --realign&lt;/code&gt; would be the same as &lt;code&gt;numtdumper find @args.txt&lt;/code&gt; where the contents of &lt;code&gt;args.txt&lt;/code&gt; is:</target>
        </trans-unit>
        <trans-unit id="3ba4977fe594a9cc8a188106c9ec3f0da7ebb222" translate="yes" xml:space="preserve">
          <source>Note that either &lt;code&gt;6_concat.fastq&lt;/code&gt; or &lt;code&gt;6_concat.fasta&lt;/code&gt; can be used here. The former has not been quality filtered, so read counts will be higher, which will affect the output of NUMTdumper. It is suggested that quality filtered reads be used as the input.</source>
          <target state="translated">Note that either &lt;code&gt;6_concat.fastq&lt;/code&gt; or &lt;code&gt;6_concat.fasta&lt;/code&gt; can be used here. The former has not been quality filtered, so read counts will be higher, which will affect the output of NUMTdumper. It is suggested that quality filtered reads be used as the input.</target>
        </trans-unit>
        <trans-unit id="74dbe5000b2b4ae95ddc3feccf1bdc2d00fa1bfe" translate="yes" xml:space="preserve">
          <source>Note that just installing from the PyPI package is not sufficient to run NUMTdumper, it also requires some system dependencies and R packages.</source>
          <target state="translated">请注意,仅仅从PyPI包中安装是不足以运行NUMTdumper的,它还需要一些系统依赖和R包。</target>
        </trans-unit>
        <trans-unit id="3d0574bddb14d9d0efd0fe044b4ba7f37a101e20" translate="yes" xml:space="preserve">
          <source>Note that more strict filtering for library-based specifications can be applied by setting &lt;code&gt;--anyfail&lt;/code&gt;, whereby ASVs will be designated as NUMTs if they fail to meet the threshold in &lt;em&gt;any&lt;/em&gt; library in which they occur, as opposed to the default of &lt;em&gt;all&lt;/em&gt; libraries in which they occur. This is currently a global setting, i.e. it applies to all terms involving library filtering. It could be applied on a per-term basis if there is demand.</source>
          <target state="translated">Note that more strict filtering for library-based specifications can be applied by setting &lt;code&gt;--anyfail&lt;/code&gt; , whereby ASVs will be designated as NUMTs if they fail to meet the threshold in &lt;em&gt;any&lt;/em&gt; library in which they occur, as opposed to the default of &lt;em&gt;all&lt;/em&gt; libraries in which they occur. This is currently a global setting, i.e. it applies to all terms involving library filtering. It could be applied on a per-term basis if there is demand.</target>
        </trans-unit>
        <trans-unit id="473a4df755faaafd7fd50693cc673ed1c790369e" translate="yes" xml:space="preserve">
          <source>Note that the composition of libraries, i.e. the expected true richness and abundance of individuals within the sample, and whether they are complete samples, subsamples, or replicates, should be carefully considered when designing the specifications.</source>
          <target state="translated">需要注意的是,在设计规范时,应仔细考虑库的组成,即样本内个体的预期真实丰富度和丰度,以及是完整样本、子样本还是重复样本。</target>
        </trans-unit>
        <trans-unit id="82d9f8dff365b7b616ec7aebe6c9bcbcdfb06bbd" translate="yes" xml:space="preserve">
          <source>Note that the target amplicon size of this dataset is 418bp, so length specifications will be based on this; your data will vary!</source>
          <target state="translated">请注意,这个数据集的目标扩增子大小是418bp,所以长度规格将基于此,你的数据会有所不同!</target>
        </trans-unit>
        <trans-unit id="3115715ffb8c705d9736a32a3dcb6b1f3c89cfd6" translate="yes" xml:space="preserve">
          <source>One, and only one, of these arguments is required if specifying &lt;code&gt;-l/--expectedlength&lt;/code&gt; but not specifying &lt;code&gt;-n/--minimumlength&lt;/code&gt; and &lt;code&gt;-x/--maximumlength&lt;/code&gt;. The supplied value is used to compute a range of values describing the distribution of lengths expected for real amplicons derived from the target locus. Any ASVs outside this range of lengths will be designated a verified-non-target ASV. &lt;code&gt;--percentvariation&lt;/code&gt; refers to a percentage of the value supplied to &lt;code&gt;-l/--expectedlength&lt;/code&gt;. &lt;code&gt;--codonsvariation&lt;/code&gt; is simply a multiple of 3 bases, i.e. &lt;code&gt;--codonsvariation 2&lt;/code&gt; == &lt;code&gt;--basesvariation 6&lt;/code&gt;</source>
          <target state="translated">One, and only one, of these arguments is required if specifying &lt;code&gt;-l/--expectedlength&lt;/code&gt; but not specifying &lt;code&gt;-n/--minimumlength&lt;/code&gt; and &lt;code&gt;-x/--maximumlength&lt;/code&gt; . The supplied value is used to compute a range of values describing the distribution of lengths expected for real amplicons derived from the target locus. Any ASVs outside this range of lengths will be designated a verified-non-target ASV. &lt;code&gt;--percentvariation&lt;/code&gt; refers to a percentage of the value supplied to &lt;code&gt;-l/--expectedlength&lt;/code&gt; . &lt;code&gt;--codonsvariation&lt;/code&gt; is simply a multiple of 3 bases, i.e. &lt;code&gt;--codonsvariation 2&lt;/code&gt; == &lt;code&gt;--basesvariation 6&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67541dd09627efaa297b9670cbc7f3ad1e38c1b8" translate="yes" xml:space="preserve">
          <source>Output a report detailing counts of ASV rejection and retention overall and for the two control groups, over all thresholds.</source>
          <target state="translated">输出一份报告,详细说明所有阈值的ASV拒绝和保留的总体数量和两个控制组的数量。</target>
        </trans-unit>
        <trans-unit id="7835db447bc76230b5b0d736b2d78c671d7100a1" translate="yes" xml:space="preserve">
          <source>Outputs</source>
          <target state="translated">产出</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="8191cb1ff9a21585fb12b374a1cbcc3c2f247459" translate="yes" xml:space="preserve">
          <source>Parse the input frequency filtering specification into a set of binning strategies and thresholds.</source>
          <target state="translated">将输入频率滤波规范解析为一组分选策略和阈值。</target>
        </trans-unit>
        <trans-unit id="9772976b280c80fb8a76f8e15b21050b1f0d7134" translate="yes" xml:space="preserve">
          <source>Quick install</source>
          <target state="translated">快速安装</target>
        </trans-unit>
        <trans-unit id="ea6ae55c7a1c1958312ba3324915f70e448779ac" translate="yes" xml:space="preserve">
          <source>Ranges are specified in the form &quot;start-stop/nsteps&quot;, e.g. &lt;code&gt;1-2/5&lt;/code&gt; will run with threshold values of &lt;code&gt;1, 1.25. 1.5, 1.75, 2&lt;/code&gt;</source>
          <target state="translated">Ranges are specified in the form &quot;start-stop/nsteps&quot;, e.g. &lt;code&gt;1-2/5&lt;/code&gt; will run with threshold values of &lt;code&gt;1, 1.25. 1.5, 1.75, 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d50d89a5cfddb3add4eedcbc07dd3b6894874e40" translate="yes" xml:space="preserve">
          <source>Read frequencies can be binned according to four categories or combinations of these categories</source>
          <target state="translated">读取频率可以根据四个类别或这些类别的组合进行分类</target>
        </trans-unit>
        <trans-unit id="1babe5a0933c3f3635cb769cddb2aef138ac20df" translate="yes" xml:space="preserve">
          <source>Reference sequences allow NUMTdumper to identify some of the input ASVs as verified authentic, that is to say definitely &lt;em&gt;not&lt;/em&gt; NUMTs. The reference sequences are not expected to be comprehensive, nor are all references necessarily expected to occur, but the more ASVs that can be designated as verified authentic, the better NUMTdumper is able to estimate the impact on filtering and the more accurate the selection of filtering thresholds can be. If necessary, references can be drawn from global databases, such as BOLD or GenBank, or curated versions of these such as MIDORI, but &lt;a href=&quot;#reference-matching-arguments&quot;&gt;we suggest&lt;/a&gt; that the hit thresholds be more stringent in this case.</source>
          <target state="translated">Reference sequences allow NUMTdumper to identify some of the input ASVs as verified authentic, that is to say definitely &lt;em&gt;not&lt;/em&gt; NUMTs. The reference sequences are not expected to be comprehensive, nor are all references necessarily expected to occur, but the more ASVs that can be designated as verified authentic, the better NUMTdumper is able to estimate the impact on filtering and the more accurate the selection of filtering thresholds can be. If necessary, references can be drawn from global databases, such as BOLD or GenBank, or curated versions of these such as MIDORI, but &lt;a href=&quot;#reference-matching-arguments&quot;&gt;we suggest&lt;/a&gt; that the hit thresholds be more stringent in this case.</target>
        </trans-unit>
        <trans-unit id="89c5559417172a9d9e7629d6ea76ddc562c536b7" translate="yes" xml:space="preserve">
          <source>Reference-matching arguments</source>
          <target state="translated">参考匹配参数</target>
        </trans-unit>
        <trans-unit id="6cb2f344aa3cc73aa96196e7f772919a01cb588c" translate="yes" xml:space="preserve">
          <source>Remember, lines beginning with &lt;code&gt;#&lt;/code&gt;, blank lines, spaces and line breaks are always ignored. So specifications can be written in any of the following ways:</source>
          <target state="translated">Remember, lines beginning with &lt;code&gt;#&lt;/code&gt; , blank lines, spaces and line breaks are always ignored. So specifications can be written in any of the following ways:</target>
        </trans-unit>
        <trans-unit id="2263e67b2e27d7862f368ec013ec22ae7942cd24" translate="yes" xml:space="preserve">
          <source>Result cache (&lt;code&gt;find&lt;/code&gt; only)</source>
          <target state="translated">Result cache ( &lt;code&gt;find&lt;/code&gt; only)</target>
        </trans-unit>
        <trans-unit id="4c9ae8463c435488180644ce537a9bf2599d2a6d" translate="yes" xml:space="preserve">
          <source>Results (&lt;code&gt;find&lt;/code&gt; only)</source>
          <target state="translated">Results ( &lt;code&gt;find&lt;/code&gt; only)</target>
        </trans-unit>
        <trans-unit id="313a86d5fb290c0e0757e58d3cef294454412bbb" translate="yes" xml:space="preserve">
          <source>Rscript (part of &lt;a href=&quot;https://cran.r-project.org/&quot;&gt;R&lt;/a&gt;)</source>
          <target state="translated">Rscript (part of &lt;a href=&quot;https://cran.r-project.org/&quot;&gt;R&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="bce4daf5be6bf713158d677e6761b516802b2e45" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;dump&lt;/code&gt; on the results cache for a given threshold set to extract the filtered ASVs</source>
          <target state="translated">Run &lt;code&gt;dump&lt;/code&gt; on the results cache for a given threshold set to extract the filtered ASVs</target>
        </trans-unit>
        <trans-unit id="74b08fece2ea04b693306213e373d198eaa35620" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;find&lt;/code&gt; on your ASVs with other data and output tabulated results and results cache</source>
          <target state="translated">Run &lt;code&gt;find&lt;/code&gt; on your ASVs with other data and output tabulated results and results cache</target>
        </trans-unit>
        <trans-unit id="db8c9244ff2af01ba51082507bcb869be9af7792" translate="yes" xml:space="preserve">
          <source>Running in &lt;code&gt;find&lt;/code&gt; mode requires the most input data, as NUMTdumper will be undertaking all of its core processes. This will generally be the first mode that is used, in order to generate a set of output statistics to analyse.</source>
          <target state="translated">Running in &lt;code&gt;find&lt;/code&gt; mode requires the most input data, as NUMTdumper will be undertaking all of its core processes. This will generally be the first mode that is used, in order to generate a set of output statistics to analyse.</target>
        </trans-unit>
        <trans-unit id="7cbca6b938e0f928cbd02ca21f68167d8d9265f3" translate="yes" xml:space="preserve">
          <source>Scoring and estimation</source>
          <target state="translated">计分和估算</target>
        </trans-unit>
        <trans-unit id="bc297daa6dc861e32bcffcdd9c632b4057abbf36" translate="yes" xml:space="preserve">
          <source>Sequential and simultaneous terms can all be run together on the same run, for example:</source>
          <target state="translated">例如,顺序项和同时项都可以在同一运行中一起运行。</target>
        </trans-unit>
        <trans-unit id="0c709f9886c34419d95252da6707fd3dc704a220" translate="yes" xml:space="preserve">
          <source>Specifications</source>
          <target state="translated">规格</target>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="b7221dafe89b04475263eb88f94335f97856ca4e" translate="yes" xml:space="preserve">
          <source>Taxon binning arguments</source>
          <target state="translated">分类群分选论点</target>
        </trans-unit>
        <trans-unit id="4fc81cf27e1b227dd3f30ea455c1a08c2d0d118d" translate="yes" xml:space="preserve">
          <source>The *_ASVcounts.csv file is a comma-separated table recording the number of reads of each input ASV found in each library.</source>
          <target state="translated">*_ASVcounts.csv文件是一个以逗号分隔的表格,记录了在每个库中发现的每个输入ASV的读取次数。</target>
        </trans-unit>
        <trans-unit id="3c5c0c74504ff0b80066b4b70ca1331b49061b76" translate="yes" xml:space="preserve">
          <source>The *_clades.csv file is a two-column comma-separated table recording the clade grouping for each input ASV, generated by the script &lt;code&gt;get_clades.R&lt;/code&gt; supplied as part of NUMTdumper.</source>
          <target state="translated">The *_clades.csv file is a two-column comma-separated table recording the clade grouping for each input ASV, generated by the script &lt;code&gt;get_clades.R&lt;/code&gt; supplied as part of NUMTdumper.</target>
        </trans-unit>
        <trans-unit id="6a8d76ff41cf2c08c525081772b99940c2c90a2b" translate="yes" xml:space="preserve">
          <source>The *_control.txt file is a two-column tab-separated table recording all ASVs determined to be validated-authentic or validated-non-authentic. The first column lists the reason for each determination: &quot;lengthfail&quot; means the ASV was too short, too long or otherwise did not fall into the range of acceptable lengths; &quot;stopfail&quot; means the ASV had stop codons in its amino acid translation; &quot;refpass&quot; means the ASV had a passing BLAST match to one of the supplied references, and did not fail either of the non-authentic tests.</source>
          <target state="translated">*_control.txt文件是一个两栏式的标签表,记录了所有被确定为验证为真实或验证为非真实的ASV。第一列列出了每次判定的原因。&quot;lengthfail &quot;是指ASV太短、太长或不在可接受的长度范围内;&quot;stopfail &quot;是指ASV的氨基酸翻译中有停顿密码子;&quot;refpass &quot;是指ASV与所提供的参考文献之一的BLAST匹配合格,并且没有通过任何一项非真实性测试。</target>
        </trans-unit>
        <trans-unit id="98202790af9e28fddfeb9a01b57454f06c8ab825" translate="yes" xml:space="preserve">
          <source>The *_resultcache file is a compressed text file containing information on the ASVs rejected or retained for each of the supplied specification terms and threshold sets of a &lt;code&gt;find&lt;/code&gt; run. It can be used in conjunction with the ASVs from the run and one or more result indices to extract the ASVs in a fasta file format using mode &lt;code&gt;dump&lt;/code&gt;.</source>
          <target state="translated">The *_resultcache file is a compressed text file containing information on the ASVs rejected or retained for each of the supplied specification terms and threshold sets of a &lt;code&gt;find&lt;/code&gt; run. It can be used in conjunction with the ASVs from the run and one or more result indices to extract the ASVs in a fasta file format using mode &lt;code&gt;dump&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b4e7844194734c2a44a74ee74d05dcf3f543dc9" translate="yes" xml:space="preserve">
          <source>The ASVs (amplicon sequence variants) should comprise all unique sequences found across the dataset, optionally denoised, singletons removed, and filtered to remove outlying length variants.</source>
          <target state="translated">ASVs(扩增子序列变体)应包括整个数据集中发现的所有独特序列,可选择去噪,去掉单子,并进行过滤以去除偏离长度的变体。</target>
        </trans-unit>
        <trans-unit id="1e38eb1601dbccb6f9e7ee6086f4786f17d54f71" translate="yes" xml:space="preserve">
          <source>The R packages getopt, ape and phangorn are also required.</source>
          <target state="translated">还需要R包getopt、api和phangorn。</target>
        </trans-unit>
        <trans-unit id="449149604f5dd0dfa36450c48800e0f6b03a0f6e" translate="yes" xml:space="preserve">
          <source>The best place to get NUMTdumper is to install from &lt;a href=&quot;https://pypi.org/project/NUMTdumper/&quot;&gt;the PyPI package&lt;/a&gt;. The NUMTdumper source is available on &lt;a href=&quot;https://github.com/tjcreedy/numtdumper&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">The best place to get NUMTdumper is to install from &lt;a href=&quot;https://pypi.org/project/NUMTdumper/&quot;&gt;the PyPI package&lt;/a&gt;. The NUMTdumper source is available on &lt;a href=&quot;https://github.com/tjcreedy/numtdumper&quot;&gt;GitHub&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6a17d99951ef27aadc80e68ff8344b28327f612e" translate="yes" xml:space="preserve">
          <source>The binning strategy must start with either &quot;total&quot; or &quot;library&quot;. Counts will be further subdivided by any further terms. For example:</source>
          <target state="translated">分组策略必须以 &quot;总数 &quot;或 &quot;库 &quot;开头。计数将被任何进一步的术语进一步细分。例如:</target>
        </trans-unit>
        <trans-unit id="3dd58d7b5876cba8900469a46f151bccfe8c1f3c" translate="yes" xml:space="preserve">
          <source>The development of this tool was supported by the iBioGen project, funded by the H2020 European Research Council, Grant/Award Number: 810729.</source>
          <target state="translated">该工具的开发得到了iBioGen项目的支持,该项目由H2020欧洲研究理事会资助,赠款/奖励编号:810729。</target>
        </trans-unit>
        <trans-unit id="4a9891bb6fcb5bfa1d6525bc9c667a2a13d2e8e8" translate="yes" xml:space="preserve">
          <source>The downside of this approach is that NUMTdumper is more data- and parameter- hungry than other similar tools. Rather than being content with being fed a set of ASVs, NUMTdumper requires inputs that a) enable the binning of ASV reads to provide pools upon which frequency thresholds can be applied and b) parameterise the determination of the two control groups.</source>
          <target state="translated">这种方法的缺点是,NUMTdumper比其他类似工具更需要数据和参数。NUMTdumper不满足于输入一组ASV,而是需要输入:a)使ASV读数分批,以提供可应用频率阈值的池子;b)对两个控制组的确定进行参数化。</target>
        </trans-unit>
        <trans-unit id="58227c435316472f426349ec51aef5b04da3a208" translate="yes" xml:space="preserve">
          <source>The fasta file may be aligned or unaligned. If NUMTdumper requires an alignment (to build a UPGMA tree and delimit clades), an unaligned input will be aligned using &lt;a href=&quot;https://mafft.cbrc.jp/alignment/software/manual/manual.html&quot;&gt;MAFFT FFT-NS-1&lt;/a&gt;. Supply an aligned set of ASVs if alignment is required but FFT-NS-1 is not expected to perform well with your data.</source>
          <target state="translated">The fasta file may be aligned or unaligned. If NUMTdumper requires an alignment (to build a UPGMA tree and delimit clades), an unaligned input will be aligned using &lt;a href=&quot;https://mafft.cbrc.jp/alignment/software/manual/manual.html&quot;&gt;MAFFT FFT-NS-1&lt;/a&gt;. Supply an aligned set of ASVs if alignment is required but FFT-NS-1 is not expected to perform well with your data.</target>
        </trans-unit>
        <trans-unit id="e47e76ad6509b0d51a58210af206682cd3a305b5" translate="yes" xml:space="preserve">
          <source>The final 6 iterations would combine three sets. In all cases, ASVs would be designated as NUMTs if they occur in less than 10% of the total reads within all* libraries in which they occur. Depending on the iteration, ASVs would also be designated as NUMTs if they occur as fewer than 3 or 5 reads within their taxon over the entire dataset (binning by taxon is redundant here) or as less than 3%, 5% or 7% of the total reads for their taxon within their clade within all* libraries in which they occur</source>
          <target state="translated">最后6次迭代将合并三组。在所有情况下,ASVs将被指定为NUMTs,如果他们出现在不到10%的总读数在所有*库中,他们出现。根据迭代,ASVs也将被指定为NUMTs,如果他们发生在少于3或5读在他们的分类群在整个数据集(分选分类群在这里是多余的),或少于3%,5%或7%的总读数为他们的分类群在他们的宗族内的所有*图书馆中,他们出现了。</target>
        </trans-unit>
        <trans-unit id="fe32b7ffb9f0a6a1f01ff538a9680236f7224973" translate="yes" xml:space="preserve">
          <source>The first 5 iterations would designate as NUMTs any ASVs with fewer than 2, 4, 6, 8 or 10 reads across the entire dataset respectively.</source>
          <target state="translated">前5次迭代将指定为NUMTs任何ASVs与少于2,4,6,8或10读整个数据集分别。</target>
        </trans-unit>
        <trans-unit id="85a0c1bf83d054cd7aa81a9848090091841032c4" translate="yes" xml:space="preserve">
          <source>The following commands detail example runs of NUMTdumper using metabarcoding data provided in the &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/tree/master/tests/data&quot;&gt;GitHub tests directory&lt;/a&gt;. The README in that directory details how this data was generated. Where a specifications file is used, this refers to the &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/blob/master/specifications.txt&quot;&gt;default specifications available on the GitHub&lt;/a&gt;</source>
          <target state="translated">The following commands detail example runs of NUMTdumper using metabarcoding data provided in the &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/tree/master/tests/data&quot;&gt;GitHub tests directory&lt;/a&gt;. The README in that directory details how this data was generated. Where a specifications file is used, this refers to the &lt;a href=&quot;https://github.com/tjcreedy/numtdumper/blob/master/specifications.txt&quot;&gt;default specifications available on the GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b6eb664bed24fe795b740dc299813a927f44d1f" translate="yes" xml:space="preserve">
          <source>The four available categories are:</source>
          <target state="translated">现有的四个类别是:</target>
        </trans-unit>
        <trans-unit id="64fd6186bde0ba084d91248b1418288cab4294b2" translate="yes" xml:space="preserve">
          <source>The ideal dataset for NUMTdumper is &lt;strong&gt;a set of ASVs&lt;/strong&gt; arising from a &lt;strong&gt;multi-sample metabarcoding dataset&lt;/strong&gt; accompanied by a solid set of &lt;strong&gt;reference sequences&lt;/strong&gt; that are expected to be present in the dataset. Optionally, NUMTdumper can also utilise data assigning each ASV to a taxonomic group.</source>
          <target state="translated">The ideal dataset for NUMTdumper is &lt;strong&gt;a set of ASVs&lt;/strong&gt; arising from a &lt;strong&gt;multi-sample metabarcoding dataset&lt;/strong&gt; accompanied by a solid set of &lt;strong&gt;reference sequences&lt;/strong&gt; that are expected to be present in the dataset. Optionally, NUMTdumper can also utilise data assigning each ASV to a taxonomic group.</target>
        </trans-unit>
        <trans-unit id="15634ef66b0d802f6d567533d97e4f58727e1b1e" translate="yes" xml:space="preserve">
          <source>The input ASV alignment and tree are the same, but clades will be delimited at 15% divergence rather than the default 20%. Verified-authentic ASVs will be determined by matches against two references, the references fasta file (against which passing hits must be 98% similar over at least 400 bp), and the nt dataset (which uses the default similarity and length settings). The expected length is unchanged, but we now specify a more complicated way of determining verified-non-authentic ASVs: any ASVs that are less than 6 bases of variation around 418 &lt;strong&gt;and&lt;/strong&gt; do not vary by exactly 3 bases from 418. Thus any reads that are not 412, 415, 418, 421 or 424 bp will be designated as verified-non-authentic. Finally, the translation table has been supplied using the short option &lt;code&gt;-s&lt;/code&gt; rather than the long option &lt;code&gt;--table&lt;/code&gt;.</source>
          <target state="translated">The input ASV alignment and tree are the same, but clades will be delimited at 15% divergence rather than the default 20%. Verified-authentic ASVs will be determined by matches against two references, the references fasta file (against which passing hits must be 98% similar over at least 400 bp), and the nt dataset (which uses the default similarity and length settings). The expected length is unchanged, but we now specify a more complicated way of determining verified-non-authentic ASVs: any ASVs that are less than 6 bases of variation around 418 &lt;strong&gt;and&lt;/strong&gt; do not vary by exactly 3 bases from 418. Thus any reads that are not 412, 415, 418, 421 or 424 bp will be designated as verified-non-authentic. Finally, the translation table has been supplied using the short option &lt;code&gt;-s&lt;/code&gt; rather than the long option &lt;code&gt;--table&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a90df9476cecea28b3da9ddd891f039e638f376" translate="yes" xml:space="preserve">
          <source>The main differences between this and a &lt;code&gt;find&lt;/code&gt; run are:</source>
          <target state="translated">The main differences between this and a &lt;code&gt;find&lt;/code&gt; run are:</target>
        </trans-unit>
        <trans-unit id="9b0726f5c25cb172394829be47d93b08a7b1c244" translate="yes" xml:space="preserve">
          <source>The main output from NUMTdumper &lt;code&gt;find&lt;/code&gt; mode is the *_results.csv file. This is a comma-delimited table that synthesises all of the results from applying all combinations of the specified terms and thresholds to the input ASVs, given the control groups of authentic- and non-authentic- ASVs. It is designed to be easily parseable and reformatable by downstream processes, in particular for analysis with R (a template for analysis is in development). Its columns comprise:</source>
          <target state="translated">The main output from NUMTdumper &lt;code&gt;find&lt;/code&gt; mode is the *_results.csv file. This is a comma-delimited table that synthesises all of the results from applying all combinations of the specified terms and thresholds to the input ASVs, given the control groups of authentic- and non-authentic- ASVs. It is designed to be easily parseable and reformatable by downstream processes, in particular for analysis with R (a template for analysis is in development). Its columns comprise:</target>
        </trans-unit>
        <trans-unit id="fab8eb5b4e2be50ab46499e71832d886be3b85e1" translate="yes" xml:space="preserve">
          <source>The most straightforward, and recommended, way to run &lt;code&gt;dump&lt;/code&gt; is to do so simply to extract the results of a specified result set:</source>
          <target state="translated">The most straightforward, and recommended, way to run &lt;code&gt;dump&lt;/code&gt; is to do so simply to extract the results of a specified result set:</target>
        </trans-unit>
        <trans-unit id="b48bb23e99d842129cb63c73e574e194da4bef95" translate="yes" xml:space="preserve">
          <source>The multi-sample aspect is crucial, as the main novelty and power of NUMTdumper comes from assessing read counts of ASVs across descrete sampling units, as opposed to just using read counts of ASVs across the dataset as a whole. NUMTdumper refers to sampling units as 'libraries', under the assumption that a sample has likely been sequenced as a descrete pool of amplicons sharing the same identifying index. Depending on your pipeline, your descrete samples of amplicons may be stored in different files or in one file with sequences identified in the sequence header. NUMTdumper can deal with either of these (&lt;a href=&quot;#-l--libraries-path-path&quot;&gt;see below&lt;/a&gt;), assuming the format is correct.</source>
          <target state="translated">The multi-sample aspect is crucial, as the main novelty and power of NUMTdumper comes from assessing read counts of ASVs across descrete sampling units, as opposed to just using read counts of ASVs across the dataset as a whole. NUMTdumper refers to sampling units as 'libraries', under the assumption that a sample has likely been sequenced as a descrete pool of amplicons sharing the same identifying index. Depending on your pipeline, your descrete samples of amplicons may be stored in different files or in one file with sequences identified in the sequence header. NUMTdumper can deal with either of these (&lt;a href=&quot;#-l--libraries-path-path&quot;&gt;see below&lt;/a&gt;), assuming the format is correct.</target>
        </trans-unit>
        <trans-unit id="bd05fa47e9bd3d6275a316a4d8eaa58018427f4f" translate="yes" xml:space="preserve">
          <source>The next two iterations would designate as NUMTs any ASVs with less than 15% or 30% of the total reads for their clade within all* libraries in which they occur.</source>
          <target state="translated">接下来的两次迭代将指定任何ASV为NUMTs,这些ASV在其所在的所有*库中,其支系的总读数少于15%或30%。</target>
        </trans-unit>
        <trans-unit id="57937c56d01e83cfec7f630633f6c6532e711693" translate="yes" xml:space="preserve">
          <source>The paper for NUMTdumper is &lt;a href=&quot;https://www.biorxiv.org/content/10.1101/2020.06.17.157347v1&quot;&gt;available on bioRxiv&lt;/a&gt;. If you use NUMTdumper in your work, please cite this paper.</source>
          <target state="translated">The paper for NUMTdumper is &lt;a href=&quot;https://www.biorxiv.org/content/10.1101/2020.06.17.157347v1&quot;&gt;available on bioRxiv&lt;/a&gt;. If you use NUMTdumper in your work, please cite this paper.</target>
        </trans-unit>
        <trans-unit id="17d96185d906113cb98007a6736ced19c6f4c345" translate="yes" xml:space="preserve">
          <source>The path to a fasta containing input ASVs to be filtered have been supplied to &lt;code&gt;-A&lt;/code&gt;, and the paths to each of set of libraries to &lt;code&gt;-L&lt;/code&gt; (note the bash parameter expansion: &lt;code&gt;0_merge/*.fastq&lt;/code&gt; will expand to all files ending with &lt;code&gt;.fastq&lt;/code&gt; in &lt;code&gt;0_merge/&lt;/code&gt;). Each of the library files will be searched for each of the ASVs to find the count of ASVs per library. Note that these sequences have not been quality filtered - NUMTdumper is likely to be more accurate with quality filtered reads.
The specifications file path has been supplied to &lt;code&gt;-S&lt;/code&gt;, this will be parsed to find all specification terms, thresholds and combinations and generate all iterations to run.
To find verified-authentic-ASVs, NUMTdumper will search the ASVs against the sequences in the &lt;code&gt;dummy_references.fasta&lt;/code&gt; file path provided to &lt;code&gt;-R&lt;/code&gt;. To find verified-non-authentic-ASVs, NUMTdumper will check the length of each ASV and translate it using NCBI translation table 5 (&lt;code&gt;--table&lt;/code&gt;). Any ASV falling outside 418 +- 0% in length and/or containing any stops in translation will be designated as verified-non-authentic.
NUMTdumper will align and build a UPGMA tree from the input ASVs to group ASVs into clades. ASVs will also be grouped into taxa according to the tablular file path supplied to &lt;code&gt;-G&lt;/code&gt;.
Once filtering has been performed for all specified threshold sets, the results will be written to &lt;code&gt;outputdir&lt;/code&gt; (which will be created if not present). As the input ASVs are unaligned and no tree was provided, these results will contain a fasta with aligned ASVs and a newick format text file with a UPGMA tree of the ASVs.</source>
          <target state="translated">The path to a fasta containing input ASVs to be filtered have been supplied to &lt;code&gt;-A&lt;/code&gt; , and the paths to each of set of libraries to &lt;code&gt;-L&lt;/code&gt; (note the bash parameter expansion: &lt;code&gt;0_merge/*.fastq&lt;/code&gt; will expand to all files ending with &lt;code&gt;.fastq&lt;/code&gt; in &lt;code&gt;0_merge/&lt;/code&gt; ). Each of the library files will be searched for each of the ASVs to find the count of ASVs per library. Note that these sequences have not been quality filtered - NUMTdumper is likely to be more accurate with quality filtered reads. The specifications file path has been supplied to &lt;code&gt;-S&lt;/code&gt; , this will be parsed to find all specification terms, thresholds and combinations and generate all iterations to run. To find verified-authentic-ASVs, NUMTdumper will search the ASVs against the sequences in the &lt;code&gt;dummy_references.fasta&lt;/code&gt; file path provided to &lt;code&gt;-R&lt;/code&gt; . To find verified-non-authentic-ASVs, NUMTdumper will check the length of each ASV and translate it using NCBI translation table 5 ( &lt;code&gt;--table&lt;/code&gt; ). Any ASV falling outside 418 +- 0% in length and/or containing any stops in translation will be designated as verified-non-authentic. NUMTdumper will align and build a UPGMA tree from the input ASVs to group ASVs into clades. ASVs will also be grouped into taxa according to the tablular file path supplied to &lt;code&gt;-G&lt;/code&gt; . Once filtering has been performed for all specified threshold sets, the results will be written to &lt;code&gt;outputdir&lt;/code&gt; (which will be created if not present). As the input ASVs are unaligned and no tree was provided, these results will contain a fasta with aligned ASVs and a newick format text file with a UPGMA tree of the ASVs.</target>
        </trans-unit>
        <trans-unit id="ac40a568acaea82e392f785c0d1a8887a147fe83" translate="yes" xml:space="preserve">
          <source>The path to aligned ASVs is supplied to the same argument as unaligned ASVs, NUMTdumper will detect whether the file is aligned or not. The path to a tree file has been supplied to &lt;code&gt;-T&lt;/code&gt;. The &lt;code&gt;-L&lt;/code&gt;ibraries and &lt;code&gt;-S&lt;/code&gt;pecifications arguments are the same as in the first example.
The &lt;code&gt;-D&lt;/code&gt; argument is used to supply a path to a &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/books/NBK279688/&quot;&gt;blast-formatted database generated by &lt;code&gt;makeblastdb&lt;/code&gt;&lt;/a&gt;. In this case, it looks like this is a local copy of GenBank nt (note this is not supplied in the test data). The remaining arguments are the same as the previous command.</source>
          <target state="translated">The path to aligned ASVs is supplied to the same argument as unaligned ASVs, NUMTdumper will detect whether the file is aligned or not. The path to a tree file has been supplied to &lt;code&gt;-T&lt;/code&gt; . The &lt;code&gt;-L&lt;/code&gt; ibraries and &lt;code&gt;-S&lt;/code&gt; pecifications arguments are the same as in the first example. The &lt;code&gt;-D&lt;/code&gt; argument is used to supply a path to a &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/books/NBK279688/&quot;&gt;blast-formatted database generated by &lt;code&gt;makeblastdb&lt;/code&gt; &lt;/a&gt;. In this case, it looks like this is a local copy of GenBank nt (note this is not supplied in the test data). The remaining arguments are the same as the previous command.</target>
        </trans-unit>
        <trans-unit id="6d53b3fceba293651d94e8a066a84ab38b8f5917" translate="yes" xml:space="preserve">
          <source>The purpose of &lt;code&gt;dump&lt;/code&gt; mode is to output a set of filtered ASVs without any NUMTs. It does this by enacting a single desired threshold set, either by providing the results from a &lt;code&gt;find&lt;/code&gt; run and selecting the desired threshold set, or by providing an ASV set, other necessary inputs, and a single threshold specification. In this latter case, NUMTdumper runs a slimmed-down version of a &lt;code&gt;find&lt;/code&gt; run, skipping step 2, running step 4 only once (rather than once for every combination of thresholds), and skipping step 5. This functionality is provided for enhanced versatility of the tool for differing applications, but it is recommended that for the most accuracy, &lt;code&gt;dump&lt;/code&gt; is used on the analysed outputs from a &lt;code&gt;find&lt;/code&gt; run.</source>
          <target state="translated">The purpose of &lt;code&gt;dump&lt;/code&gt; mode is to output a set of filtered ASVs without any NUMTs. It does this by enacting a single desired threshold set, either by providing the results from a &lt;code&gt;find&lt;/code&gt; run and selecting the desired threshold set, or by providing an ASV set, other necessary inputs, and a single threshold specification. In this latter case, NUMTdumper runs a slimmed-down version of a &lt;code&gt;find&lt;/code&gt; run, skipping step 2, running step 4 only once (rather than once for every combination of thresholds), and skipping step 5. This functionality is provided for enhanced versatility of the tool for differing applications, but it is recommended that for the most accuracy, &lt;code&gt;dump&lt;/code&gt; is used on the analysed outputs from a &lt;code&gt;find&lt;/code&gt; run.</target>
        </trans-unit>
        <trans-unit id="018b93755fe0cfdc910602bf49b9081150477b59" translate="yes" xml:space="preserve">
          <source>The purpose of &lt;code&gt;find&lt;/code&gt; mode is to comprehensively assess a range of frequency filtering specifications to analyse the impact of these on determining NUMTs. By default, &lt;code&gt;find&lt;/code&gt; doesn't actually output filtered ASV sequences; instead, it outputs comprehensive information about the effect of each term and threshold set on the number of ASVs filtered and, crucially, the numbers of validated ASVs retained or rejected by each threshold set. This information can then be used to guide a &lt;code&gt;dump&lt;/code&gt; run to actually output filtered ASV sequences without putative NUMTs.</source>
          <target state="translated">The purpose of &lt;code&gt;find&lt;/code&gt; mode is to comprehensively assess a range of frequency filtering specifications to analyse the impact of these on determining NUMTs. By default, &lt;code&gt;find&lt;/code&gt; doesn't actually output filtered ASV sequences; instead, it outputs comprehensive information about the effect of each term and threshold set on the number of ASVs filtered and, crucially, the numbers of validated ASVs retained or rejected by each threshold set. This information can then be used to guide a &lt;code&gt;dump&lt;/code&gt; run to actually output filtered ASV sequences without putative NUMTs.</target>
        </trans-unit>
        <trans-unit id="ad612cf9b318788199deb9a22cfedb0f7a4b44c9" translate="yes" xml:space="preserve">
          <source>The read library or libraries supplied are used by NUMTdumper to assess the incidence of each ASV sequence per library. Each &lt;code&gt;path&lt;/code&gt; should be the path to a fasta or fastq file containing ASV reads. Files may contain reads that are not in the &lt;code&gt;-A/--asvs&lt;/code&gt; file, these will be ignored. If multiple paths are supplied, NUMTdumper assumes that each file is a separate library and uses the file names as library names. In this case, the headers in each file are ignored, only the sequences are relevant. If a single path is supplied, then NUMTdumper assumes that the library names are specified in the read headers, specified in the format &lt;code&gt;;barcodelabel=NAME;&lt;/code&gt; or &lt;code&gt;;sample=NAME;&lt;/code&gt; where &lt;code&gt;NAME&lt;/code&gt; is the unique name of each library.</source>
          <target state="translated">The read library or libraries supplied are used by NUMTdumper to assess the incidence of each ASV sequence per library. Each &lt;code&gt;path&lt;/code&gt; should be the path to a fasta or fastq file containing ASV reads. Files may contain reads that are not in the &lt;code&gt;-A/--asvs&lt;/code&gt; file, these will be ignored. If multiple paths are supplied, NUMTdumper assumes that each file is a separate library and uses the file names as library names. In this case, the headers in each file are ignored, only the sequences are relevant. If a single path is supplied, then NUMTdumper assumes that the library names are specified in the read headers, specified in the format &lt;code&gt;;barcodelabel=NAME;&lt;/code&gt; or &lt;code&gt;;sample=NAME;&lt;/code&gt; where &lt;code&gt;NAME&lt;/code&gt; is the unique name of each library.</target>
        </trans-unit>
        <trans-unit id="90fe9ce00f15d638a232bed701d93cab9f64d024" translate="yes" xml:space="preserve">
          <source>The standard way to generate these files is by first running NUMTdumper in mode &lt;code&gt;find&lt;/code&gt;, then selecting one or more result set indices from the output statistics file, then running NUMTdumper in mode &lt;code&gt;dump&lt;/code&gt;. If one result set is selected, the resulting filtered ASV file will be output with the name specified by &lt;code&gt;-f/--outfasta&lt;/code&gt;. Otherwise, the resulting filtered ASV files will be output to the directory specified by &lt;code&gt;-o/--outputdirectory&lt;/code&gt;, with the suffix '_numtdumpresultsetN', where N is the index. This is also the effect of running &lt;code&gt;find&lt;/code&gt; with the &lt;code&gt;--generateASVresults&lt;/code&gt; argument.</source>
          <target state="translated">The standard way to generate these files is by first running NUMTdumper in mode &lt;code&gt;find&lt;/code&gt; , then selecting one or more result set indices from the output statistics file, then running NUMTdumper in mode &lt;code&gt;dump&lt;/code&gt; . If one result set is selected, the resulting filtered ASV file will be output with the name specified by &lt;code&gt;-f/--outfasta&lt;/code&gt; . Otherwise, the resulting filtered ASV files will be output to the directory specified by &lt;code&gt;-o/--outputdirectory&lt;/code&gt; , with the suffix '_numtdumpresultsetN', where N is the index. This is also the effect of running &lt;code&gt;find&lt;/code&gt; with the &lt;code&gt;--generateASVresults&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="e561b323fc14177280f63827adc5fe2a37e451e7" translate="yes" xml:space="preserve">
          <source>The supplied value is the minimum percent identity against to consider a BLAST match when comparing ASVs against sequences in the file supplied to &lt;code&gt;-R/--references&lt;/code&gt; or the database supplied to &lt;code&gt;-D/--blastdb&lt;/code&gt;. The default value is 99.9 for &lt;code&gt;--refmatchpercent&lt;/code&gt; and 100 for &lt;code&gt;--dbmatchpercent&lt;/code&gt;.</source>
          <target state="translated">The supplied value is the minimum percent identity against to consider a BLAST match when comparing ASVs against sequences in the file supplied to &lt;code&gt;-R/--references&lt;/code&gt; or the database supplied to &lt;code&gt;-D/--blastdb&lt;/code&gt; . The default value is 99.9 for &lt;code&gt;--refmatchpercent&lt;/code&gt; and 100 for &lt;code&gt;--dbmatchpercent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cc8a42d3dc3ec0485b126d3da0661c89dac3c17" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; should be positive integers. These values would generally describe the distribution of lengths expected for real amplicons derived from the target locus. Any ASVs outside this range of lengths will be designated a verified-non-target ASV.</source>
          <target state="translated">The values of &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; should be positive integers. These values would generally describe the distribution of lengths expected for real amplicons derived from the target locus. Any ASVs outside this range of lengths will be designated a verified-non-target ASV.</target>
        </trans-unit>
        <trans-unit id="362466c7749a694df34d7c8d87ed951c3c9caf3c" translate="yes" xml:space="preserve">
          <source>There are two non-standard methods that generate outputs with different conditions. Firstly, using &lt;code&gt;--anyfail&lt;/code&gt; in either &lt;code&gt;find&lt;/code&gt; or &lt;code&gt;dump&lt;/code&gt; mode will change condition 3 to &quot;ASV is present in a frequency equal to or exceeding all thresholds in any bins in which it occurs&quot;, &lt;a href=&quot;#-y--anyfail-flag&quot;&gt;see above&lt;/a&gt; for details.</source>
          <target state="translated">There are two non-standard methods that generate outputs with different conditions. Firstly, using &lt;code&gt;--anyfail&lt;/code&gt; in either &lt;code&gt;find&lt;/code&gt; or &lt;code&gt;dump&lt;/code&gt; mode will change condition 3 to &quot;ASV is present in a frequency equal to or exceeding all thresholds in any bins in which it occurs&quot;, &lt;a href=&quot;#-y--anyfail-flag&quot;&gt;see above&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="3db20c58cbee3bce0c94767398cbecbdd061b6f7" translate="yes" xml:space="preserve">
          <source>These arguments apply if ASV binning is to be performed on a per-clade basis in mode &lt;code&gt;find&lt;/code&gt; or in mode &lt;code&gt;dump&lt;/code&gt; without a &lt;code&gt;-C/--resultcache&lt;/code&gt;.</source>
          <target state="translated">These arguments apply if ASV binning is to be performed on a per-clade basis in mode &lt;code&gt;find&lt;/code&gt; or in mode &lt;code&gt;dump&lt;/code&gt; without a &lt;code&gt;-C/--resultcache&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10168e14f79707879b7daedc9a6ff29a757fea16" translate="yes" xml:space="preserve">
          <source>These arguments control matching against a reference fasta or blast database for the purposes of determining verified-authentic ASVs. Put simply, an ASV is designated a verified-target-ASV if it matches against a reference sequence with a match length greater than specified and a percent identity greater than specified. Note that if multiple ASVs match to the same reference when percent identity is set to 100, only the ASV with the longest match length will be designated as a verified-target-ASV.</source>
          <target state="translated">这些参数控制了与参考fasta或blast数据库的匹配,以确定经过验证的真实ASV。简单地说,如果一个ASV与参考序列匹配,且匹配长度大于指定的长度,且相同度百分比大于指定的百分比,则该ASV被指定为已验证的目标ASV。请注意,如果多个ASV与同一个参考序列匹配,当百分比认同度设置为100时,只有匹配长度最长的ASV才会被指定为验证目标-ASV。</target>
        </trans-unit>
        <trans-unit id="7fbb41b63be86fce046d70166e6801a2fac5e185" translate="yes" xml:space="preserve">
          <source>These lines would run 5+2+1*2*3 = 13 iterations:</source>
          <target state="translated">这些线路将运行5+2+1*2*3=13次迭代。</target>
        </trans-unit>
        <trans-unit id="ad8e5b33f8e0c1646d515e1a1cd57191d3c12a1b" translate="yes" xml:space="preserve">
          <source>These terms would run 6 total iterations:</source>
          <target state="translated">这些条款将运行6次总的迭代。</target>
        </trans-unit>
        <trans-unit id="50d30c332f86f4529ae9e3a0b95ecc8c19d59d07" translate="yes" xml:space="preserve">
          <source>This command will be faster than the previous command, as NUMTdumper does not need to generate the alignment and tree. It may also be more accurate, because you can build the optimal alignment for your specific data, rather than using the fast alignment algorithm NUMTdumper uses. You can also review the tree and decide on the most appropriate clade delimitation threshold for your data - by default this is 20%.</source>
          <target state="translated">这个命令会比前一个命令快,因为NUMTdumper不需要生成对齐和树。它也可能更准确,因为你可以为你的特定数据建立最佳对齐,而不是使用NUMTdumper使用的快速对齐算法。你也可以查看树,并决定最适合你的数据的clade delimitation阈值--默认是20%。</target>
        </trans-unit>
        <trans-unit id="849a6cdba25b955d4cb0f6ea4f3296b70b08bb91" translate="yes" xml:space="preserve">
          <source>This documentation provides further explanation for input data and argument selection, and the &lt;a href=&quot;#details&quot;&gt;details&lt;/a&gt; section goes in depth into the way that the key parts of NUMTdumper work.</source>
          <target state="translated">This documentation provides further explanation for input data and argument selection, and the &lt;a href=&quot;#details&quot;&gt;details&lt;/a&gt; section goes in depth into the way that the key parts of NUMTdumper work.</target>
        </trans-unit>
        <trans-unit id="c875e456303ed09969a63487269beeb252ddb272" translate="yes" xml:space="preserve">
          <source>This final example overwrites many of these sorts of defaults:</source>
          <target state="translated">最后这个例子覆盖了许多这类默认值。</target>
        </trans-unit>
        <trans-unit id="d3300d036430c8f8e5eb300757b3a1feb4d020db" translate="yes" xml:space="preserve">
          <source>This is probably the simplest &lt;code&gt;find&lt;/code&gt; run that cound be run on this data:</source>
          <target state="translated">This is probably the simplest &lt;code&gt;find&lt;/code&gt; run that cound be run on this data:</target>
        </trans-unit>
        <trans-unit id="401a0381e34e8cf5b8d7b3f5c8622c907e568d6b" translate="yes" xml:space="preserve">
          <source>This pipeline is designed to take account of the fact that threshold specifications and decisions on the optimal output should be dataset-dependent, and filtering with a single threshold set without validation is arbitrary.</source>
          <target state="translated">这条流水线的设计是考虑到阈值规格和最优输出的决定应该是依赖于数据集的,用单一的阈值集进行过滤而不进行验证是任意的。</target>
        </trans-unit>
        <trans-unit id="d8d3e14553d5583b612e20269a916be8809af342" translate="yes" xml:space="preserve">
          <source>This report can then be easily interrogated by the user according to project-specific requirements to balance rejection and retention.</source>
          <target state="translated">然后,用户可以很容易地根据项目的具体要求对这个报告进行查询,以平衡拒绝和保留。</target>
        </trans-unit>
        <trans-unit id="4b24b4c85d42a9fd7a1062004b9a02b1036da799" translate="yes" xml:space="preserve">
          <source>This specification would run five iterations. In each iteration, ASVs would be designated as NUMTs if they have fewer than 2, 4, 6, 8 or 10 reads respectively in total across the entire dataset.</source>
          <target state="translated">该规范将运行5次迭代。在每次迭代中,如果ASV在整个数据集中的总读数分别少于2、4、6、8或10个,它们将被指定为NUMTs。</target>
        </trans-unit>
        <trans-unit id="f2f2f9b430db6ff3f555222bd60ec0cdd98c1fe8" translate="yes" xml:space="preserve">
          <source>Thresholds for designating NUMTs can be specified as a single value, a range of values, or mixture.</source>
          <target state="translated">指定NUMT的阈值可以指定为单一值、数值范围或混合值。</target>
        </trans-unit>
        <trans-unit id="dc2ec7ac04437e61484d3cd2dab98382298bb3b1" translate="yes" xml:space="preserve">
          <source>Translation-based arguments</source>
          <target state="translated">基于翻译的论点</target>
        </trans-unit>
        <trans-unit id="e11dbe28f315e7574c7c6e0b242b3ef5159ec774" translate="yes" xml:space="preserve">
          <source>UPGMA tree</source>
          <target state="translated">UPGMA树</target>
        </trans-unit>
        <trans-unit id="c762754459b0d963aa446a49f37c9bd82919d238" translate="yes" xml:space="preserve">
          <source>Unless a tree is supplied, NUMTdumper uses the aligned ASVs to build a UPGMA tree using the script &lt;code&gt;make_tree.R&lt;/code&gt; supplied as part of NUMTdumper. This is a newick-format tree that can be opened by any newick parser or tree viewing software.</source>
          <target state="translated">Unless a tree is supplied, NUMTdumper uses the aligned ASVs to build a UPGMA tree using the script &lt;code&gt;make_tree.R&lt;/code&gt; supplied as part of NUMTdumper. This is a newick-format tree that can be opened by any newick parser or tree viewing software.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">验证</target>
        </trans-unit>
        <trans-unit id="42bb1b8e38957aa2e35987104952d197d66622b5" translate="yes" xml:space="preserve">
          <source>When running NUMTdumper in &lt;code&gt;dump&lt;/code&gt; mode and not supplying a &lt;code&gt;-C/--resultcache&lt;/code&gt;, simultaneous terms can be specified on the command line. Note that in this mode each term can only have one threshold. For example:
&lt;code&gt;-s '[library; p; .001]' '[total|clade; n; 5]'&lt;/code&gt;
This line would run 1 iteration, designating any ASVs as NUMTs that appear as less than 0.1% of the reads in all libraries in which they occur or as fewer than 5 reads in the clade in which they occur across the entire dataset. Note the example uses &lt;code&gt;'&lt;/code&gt; to avoid the shell parsing the &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;;&lt;/code&gt; symbols.</source>
          <target state="translated">When running NUMTdumper in &lt;code&gt;dump&lt;/code&gt; mode and not supplying a &lt;code&gt;-C/--resultcache&lt;/code&gt; , simultaneous terms can be specified on the command line. Note that in this mode each term can only have one threshold. For example: &lt;code&gt;-s '[library; p; .001]' '[total|clade; n; 5]'&lt;/code&gt; This line would run 1 iteration, designating any ASVs as NUMTs that appear as less than 0.1% of the reads in all libraries in which they occur or as fewer than 5 reads in the clade in which they occur across the entire dataset. Note the example uses &lt;code&gt;'&lt;/code&gt; to avoid the shell parsing the &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;;&lt;/code&gt; symbols.</target>
        </trans-unit>
        <trans-unit id="9d08bcd90acbc5c4aa460f461275c27cd6bd888d" translate="yes" xml:space="preserve">
          <source>When running NUMTdumper in &lt;code&gt;find&lt;/code&gt; mode, multiple specification terms can be compared sequentially, or 'additively', in the same run. These are included with the &lt;code&gt;+&lt;/code&gt; symbol between terms in the specifications text file, either on one line or split over multiple lines, e.g.:
&lt;code&gt;[total; p; 0.001,0.005,0.01] + [library|taxon; p; 0.4,0.6,0.8]&lt;/code&gt;
can also be written as</source>
          <target state="translated">When running NUMTdumper in &lt;code&gt;find&lt;/code&gt; mode, multiple specification terms can be compared sequentially, or 'additively', in the same run. These are included with the &lt;code&gt;+&lt;/code&gt; symbol between terms in the specifications text file, either on one line or split over multiple lines, e.g.: &lt;code&gt;[total; p; 0.001,0.005,0.01] + [library|taxon; p; 0.4,0.6,0.8]&lt;/code&gt; can also be written as</target>
        </trans-unit>
        <trans-unit id="a3d0ddf5d96cf51c8bf0348f1d1e13f1c6d80bd6" translate="yes" xml:space="preserve">
          <source>blastn and makeblastdb (part of &lt;a href=&quot;https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&amp;amp;DOC_TYPE=Download&quot;&gt;BLAST+&lt;/a&gt;)</source>
          <target state="translated">blastn and makeblastdb (part of &lt;a href=&quot;https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&amp;amp;DOC_TYPE=Download&quot;&gt;BLAST+&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4079dc6088e96dc5f3d5dc662dac7c90f2a2ae42" translate="yes" xml:space="preserve">
          <source>filtering specifications are supplied directly to the commandline</source>
          <target state="translated">过滤规格直接提供给命令行。</target>
        </trans-unit>
        <trans-unit id="43d2f6bf72619cd3404bfdc67caeaf44fa434e80" translate="yes" xml:space="preserve">
          <source>mafft</source>
          <target state="translated">马夫特</target>
        </trans-unit>
        <trans-unit id="c0af7c1311b1856cf875b6777ddf216df9bd5a46" translate="yes" xml:space="preserve">
          <source>no arguments specifying how to delimit control groups are used
&lt;code&gt;dump&lt;/code&gt; mode resolves any binning strategies, building a tree if needed for clade-based strategies, and then applies the specified thresholds, writing all ASVs that pass the thresholds to a file in the output directory. This method is provided for rapid filtering on a known dataset.</source>
          <target state="translated">no arguments specifying how to delimit control groups are used &lt;code&gt;dump&lt;/code&gt; mode resolves any binning strategies, building a tree if needed for clade-based strategies, and then applies the specified thresholds, writing all ASVs that pass the thresholds to a file in the output directory. This method is provided for rapid filtering on a known dataset.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="8a0ef42882ab7ac1bdc064afefcbf254e879ee2f" translate="yes" xml:space="preserve">
          <source>the expected length of the centre of the range, AND one of</source>
          <target state="translated">范围中心的预期长度,以及其中之一</target>
        </trans-unit>
        <trans-unit id="e310a8334ff328cc69872dddc1cacd6eb16a2adc" translate="yes" xml:space="preserve">
          <source>the first 3 would designate ASVs as NUMTs if they had less than 0.1%, 0.5% or 1% of the total number of reads respectively</source>
          <target state="translated">前3个将指定ASVs为NUMTs,如果它们分别占总读数的0.1%、0.5%或1%以下。</target>
        </trans-unit>
        <trans-unit id="235072507cff94540ebd5abeabafbdaf631a8e37" translate="yes" xml:space="preserve">
          <source>the minimum and maximum length of the range, OR</source>
          <target state="translated">范围的最小和最大长度,或</target>
        </trans-unit>
        <trans-unit id="bd4b116baed0bf8ea58521fe74a2ac56e1892589" translate="yes" xml:space="preserve">
          <source>the number of bases around this expectation,</source>
          <target state="translated">围绕这一预期的基数。</target>
        </trans-unit>
        <trans-unit id="778a3cdabc9d2d4707ca2454b66e5d2441d94e11" translate="yes" xml:space="preserve">
          <source>the number of codons around this expectation</source>
          <target state="translated">围绕这个期望值的密码子数量。</target>
        </trans-unit>
        <trans-unit id="e62eaa31e7f12014d9e6bb3ae8ad3736859f9503" translate="yes" xml:space="preserve">
          <source>the percentage variation around this expectation,</source>
          <target state="translated">围绕这个期望值的百分比变化。</target>
        </trans-unit>
        <trans-unit id="6c4de600a96c2f2c2d08832d348a956ad04053aa" translate="yes" xml:space="preserve">
          <source>the second 3 would designate ASVs as NUMTs if they were present as less than 40%, 60% or 80% of the total reads per taxon per
library in all* of the taxon-library combinations in which they occur.</source>
          <target state="translated">后面的3个将指定ASV为NUMT,如果它们在所有*出现的分类群-图书馆组合中,每个分类群-图书馆的总读数少于40%、60%或80%。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
