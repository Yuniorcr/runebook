<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/camai-castleguarders/">
    <body>
      <group id="camai-castleguarders">
        <trans-unit id="181e92678a1a0c5bc05bfd2d8012000a13aca2bb" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Alerts_Storage.png
:width: 50
:height: 150
:alt: Storage Alert Image</source>
          <target state="translated">.. image :: docs / Alerts_Storage.png：width：50：height：150：alt：存储警报图像</target>
        </trans-unit>
        <trans-unit id="4cba7969c2799287f18026a367919069feb447c9" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Alerts_Storage.png
:width: 50
:height: 150
:alt: Verbal Warning</source>
          <target state="translated">.. image :: docs / Alerts_Storage.png：width：50：height：150：alt：口头警告</target>
        </trans-unit>
        <trans-unit id="e39e4bd00cd2f24fd77cfb0a4c7ad5013e61d920" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Email_Alert_with_Image.png
:width: 50
:height: 150
:alt: Email Alert with Image</source>
          <target state="translated">.. image :: docs / Email_Alert_with_Image.png：width：50：height：150：alt：带有图像的电子邮件警报</target>
        </trans-unit>
        <trans-unit id="21c9b5617a7c79dc4b9264d640ff5d0c49cae40f" translate="yes" xml:space="preserve">
          <source>.. image:: docs/Email_Alert_with_Video.png
:width: 50
:height: 150
:alt: Email Alert with Video</source>
          <target state="translated">.. image :: docs / Email_Alert_with_Video.png：width：50：height：150：alt：带有视频的电子邮件警报</target>
        </trans-unit>
        <trans-unit id="9e32b31d2ca63a25a8c23c7e03225f4f6ed82e61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alerts&lt;/strong&gt;
The following types of alerts are supported.</source>
          <target state="translated">&lt;strong&gt;警报&lt;/strong&gt; 支持以下类型的警报。</target>
        </trans-unit>
        <trans-unit id="448687b4c05f31ae6733ace77b95d049d165884f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cameras&lt;/strong&gt;
There has to be one or more camera sections. This section contains camera specific configuration and policy information. The camera section consists of a main section and a sub section. The sub section is used to specify one or more objects of interest for this camera and the object specific settings.</source>
          <target state="translated">&lt;strong&gt;摄像头&lt;/strong&gt; 必须有一个或多个摄像头部分。本节包含特定于摄像机的配置和策略信息。摄像机部分由一个主要部分和一个子部分组成。子部分用于指定此相机的一个或多个感兴趣的对象以及特定于对象的设置。</target>
        </trans-unit>
        <trans-unit id="f3b66e4719b5e51b849606011f6f323a95d1c6a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Choosing the Camera Operating Mode&lt;/strong&gt;
CamAi supports four operating modes. The mode is configurable on a per camera basis. The default mode generated by the</source>
          <target state="translated">&lt;strong&gt;选择相机操作模式&lt;/strong&gt; CamAi支持四种操作模式。该模式可基于每个摄像机进行配置。默认模式由</target>
        </trans-unit>
        <trans-unit id="32d74b1970382aa2b620afe7705d9839678490dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Email Section&lt;/strong&gt;
This contains one Email Sender and zero or more Email Recepient sections</source>
          <target state="translated">&lt;strong&gt;电子邮件部分&lt;/strong&gt; 其中包含一个电子邮件发件人和零个或多个电子邮件收件人部分</target>
        </trans-unit>
        <trans-unit id="482846d9be502df0df5c01156a8456ba8a55e27b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Manager Section&lt;/strong&gt;
This section has CamAi runtime defaults. If the user doesn't specify a per camera directory, the manager sections basedir variable is used as the parent for each camera.::</source>
          <target state="translated">&lt;strong&gt;管理器部分&lt;/strong&gt; 此部分具有CamAi运行时默认值。如果用户未指定每个摄像机的目录，则将manager节的basedir变量用作每个摄像机的父级。</target>
        </trans-unit>
        <trans-unit id="d7a75f8fccd473422aa0805c263cbfc50e2c4e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Setting up Face Recognition&lt;/strong&gt;
Create a known faces directory. Follow the sample directory heirarchy.
Put this under camai directory for now. Pictures in standard
formats like jpg/gif/png/bmp should work. Each picture should only have
the face of the person whose name is the parent directory.::</source>
          <target state="translated">&lt;strong&gt;设置面部识别&lt;/strong&gt; 创建已知的面部目录。遵循示例目录层次结构。现在将其放在camai目录下。像jpg / gif / png / bmp这样的标准格式的图片应该可以工作。每张图片应只带有名字为父目录的人的脸。</target>
        </trans-unit>
        <trans-unit id="0e3e0f77d5848d0c894de6cac0337669a35233dd" translate="yes" xml:space="preserve">
          <source>=====
CamAI</source>
          <target state="translated">===== CamAI</target>
        </trans-unit>
        <trans-unit id="0d83fed963e78ba3a6d313951030d59987e66912" translate="yes" xml:space="preserve">
          <source>============
Installation</source>
          <target state="translated">===========安装</target>
        </trans-unit>
        <trans-unit id="b97e5b53a98883ed99461f2a493fcd53fa8073a3" translate="yes" xml:space="preserve">
          <source>==============
Configuration</source>
          <target state="translated">==============配置</target>
        </trans-unit>
        <trans-unit id="3dbc915ccfb311c841b83da473a97f6cb5f6b874" translate="yes" xml:space="preserve">
          <source>AI based Camera monitor and alerting system</source>
          <target state="translated">基于AI的摄像头监控和报警系统</target>
        </trans-unit>
        <trans-unit id="cbde445f0ca43b81c4a725fbf0be410fe1c70305" translate="yes" xml:space="preserve">
          <source>Below is an example configuration file that the camcli.py --discover option generates. The configuration file can be hand crafted. There are three main sections.</source>
          <target state="translated">下面是 camcli.py --discover 选项生成的配置文件示例。这个配置文件可以手工制作。有三个主要部分。</target>
        </trans-unit>
        <trans-unit id="5402fdbf5d70229a41a99e676d92993027eb719b" translate="yes" xml:space="preserve">
          <source>CamAi takes an AI first approach to monitoring and description of a video stream. Traditional open source packages like ZoneMinder and others largely rely on motion detection and handcrafted &quot;zones&quot; to try to reduce false detections. Modern Cameras support much higher resolutions (FHD, 4MP, 5MP, 4K etc) and this requires consistently low latency handling of the video streams, which the older systems seem to be having issues coping with.</source>
          <target state="translated">CamAi采用人工智能先行的方式对视频流进行监控和描述。传统的开源包,如ZoneMinder等,很大程度上依赖于运动检测和手工制作的 &quot;区域&quot;,试图减少误检。现代摄像机支持更高的分辨率(FHD、400万像素、500万像素、4K等),这就要求对视频流进行持续的低延迟处理,而老式系统似乎在应对这一点上存在问题。</target>
        </trans-unit>
        <trans-unit id="86cae3924e595a0e2af52b65e0ec41cc90314a85" translate="yes" xml:space="preserve">
          <source>CamAi tries to take advantange of the 'many cpu cores' and is heavily threaded to ensure reliable high resolution video stream processing of 'many' sources. It also uses more modern approaches like Instance Segmentation, Face Detection and Face Recognition to reduce the false alarm rates. While this requires a GPU/s to get reasonable performance, inference engines bundled with traditional cpu cores are the future. It takes a data science approach to enable learning over time what might be normal or otherwise and get closer to a human in taking actions. Some of these features are available in the &quot;cloud&quot; cameras like Ring :sup:&lt;code&gt;tm&lt;/code&gt;;, Nest :sup:&lt;code&gt;tm&lt;/code&gt;;, which requires the video streams to be sent to 'their' cloud, and come with many involuntary 'sharing' features. CamAi can do this all within the network, with or without any external connectivity for the camera streams.</source>
          <target state="translated">CamAi尝试利用&amp;ldquo;许多cpu核心&amp;rdquo;的优势，并采用了严格的线程设计，以确保对&amp;ldquo;许多&amp;rdquo;资源进行可靠的高分辨率视频流处理。它还使用实例分割，面部检测和面部识别等更现代的方法来降低误报率。尽管这需要GPU才能获得合理的性能，但与传统cpu内核捆绑在一起的推理引擎才是未来。它需要一种数据科学方法，以便随着时间的流逝学习正常情况或其他情况，并在采取行动时更贴近人类。这些功能中的某些功能可在&amp;ldquo;云&amp;rdquo;摄像机中使用，例如Ring：sup： &lt;code&gt;tm&lt;/code&gt; ;，Nest：sup： &lt;code&gt;tm&lt;/code&gt; ;;要求将视频流发送到&amp;ldquo;其&amp;rdquo;云，并具有许多非自愿的&amp;ldquo;共享&amp;rdquo;功能。无论有没有相机流的任何外部连接，CamAi都可以在网络内完成所有操作。</target>
        </trans-unit>
        <trans-unit id="a916d053c58179702d52c67cac86a593b3e0927f" translate="yes" xml:space="preserve">
          <source>Install Nvidia CUDA for tensorflow acceleration
Cuda 10.0(not 10.1), CuDNN 7.5 and Tensorflow 1.13/1.14 was used for testing
Any compatible combination after these versions should work.</source>
          <target state="translated">安装Nvidia CUDA for tensorflow acceleration Cuda 10.0(不是10.1),CuDNN 7.5和Tensorflow 1.13/1.14用于测试。</target>
        </trans-unit>
        <trans-unit id="228ae36d683139e9ce3da91d2d68a8b312407042" translate="yes" xml:space="preserve">
          <source>Install Pip3 packages in requirements.txt
Optional but Recommended: Create a virtual env for camai
mkdir camai
# If you do not have virtualenv already, or want to use a more current version
pip3 install virtualenv --user
virtualenv -p python3.7 venv37</source>
          <target state="translated">在requirements.txt中安装Pip3包 可选,但推荐使用。为camai创建一个虚拟环境 mkdir camai#如果你还没有virtualenv,或者想使用最新的版本 pip3 install virtualenv --user virtualenv -p python3.7 venv37。</target>
        </trans-unit>
        <trans-unit id="d82895eea9421706862b494836d0a974f7b3dff1" translate="yes" xml:space="preserve">
          <source>Install Ubuntu Packages in ubuntu_deps.txt.
bash ./ubuntu-deps.txt</source>
          <target state="translated">在ubuntu_deps.txt中安装Ubuntu包。bash ./ubuntu-deps.txt。</target>
        </trans-unit>
        <trans-unit id="8780d6f35466ed5ad2837c69b8f8f6754579c976" translate="yes" xml:space="preserve">
          <source>It is certainly possible to try to 'graft' these features to existing systems. However it would have resulted in a mish mash of languages and technologies (perl/c++/windows only) or only partially open source. CamAI aims to have a more modern, maintainable and extensible code base that is fully be open source, and cross platform (over time) and modern, without having to jettison control and visibility to 'cloud' cameras.</source>
          <target state="translated">当然可以尝试将这些功能 &quot;嫁接 &quot;到现有的系统中。然而,这将导致语言和技术的混杂(仅perl/c++/windows),或者只是部分开源。CamAI的目标是拥有一个更现代、可维护和可扩展的代码库,完全是开源的,跨平台的(随着时间的推移)和现代的,而不必放弃对 &quot;云 &quot;摄像机的控制和可视性。</target>
        </trans-unit>
        <trans-unit id="0aac8d3e306bb99a9576d02631562cac7afdb8ee" translate="yes" xml:space="preserve">
          <source>Quick Run
Discover onvif compatible cameras on your network and generate a configuration file</source>
          <target state="translated">快速运行 发现网络上兼容的 onvif 摄像机并生成配置文件。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="62a213509d3ffd4a20a29da48ee31cf971db43b1" translate="yes" xml:space="preserve">
          <source>The development has been primarily on a ubuntu 18.04 base.</source>
          <target state="translated">主要是在ubuntu 18.04的基础上进行开发的。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
