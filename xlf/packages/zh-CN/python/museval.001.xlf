<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/museval/">
    <body>
      <group id="museval">
        <trans-unit id="0b1dae957ad059a3d14aaa4106982c398622108b" translate="yes" xml:space="preserve">
          <source>1. Pull Docker Container</source>
          <target state="translated">1.拉动Docker容器</target>
        </trans-unit>
        <trans-unit id="52b836a07f90a0dafb65b73f11316adc4df89f60" translate="yes" xml:space="preserve">
          <source>2. Run evaluation</source>
          <target state="translated">2.运行评估</target>
        </trans-unit>
        <trans-unit id="4c4cb4b30ce20299f4b44b9620f998be8764a6fa" translate="yes" xml:space="preserve">
          <source>:bulb: you use the &lt;code&gt;--iswav&lt;/code&gt; flag to use the decoded wav &lt;em&gt;musdb&lt;/em&gt; dataset.</source>
          <target state="translated">：bulb：您使用 &lt;code&gt;--iswav&lt;/code&gt; 标志来使用解码的wav &lt;em&gt;musdb&lt;/em&gt;数据集。</target>
        </trans-unit>
        <trans-unit id="91fb3372715803a18d3f0fc50fd72cd93c9f41e1" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;museval&lt;/code&gt; requires a significant amount of memory for the evaluation. Evaluating all five targets for &lt;em&gt;MUSDB18&lt;/em&gt; may require more than 4GB of RAM. If you use multiprocessing by using the &lt;code&gt;-p&lt;/code&gt; switch in &lt;code&gt;museval&lt;/code&gt;, this results in 16GB of RAM. It is recommended to adjust your Docker preferences, because the docker container might just quit if its out of memory.</source>
          <target state="translated">：warning： &lt;code&gt;museval&lt;/code&gt; 需要大量内存才能进行评估。评估&lt;em&gt;MUSDB18的&lt;/em&gt;所有五个目标可能需要超过4GB的RAM。如果通过在 &lt;code&gt;museval&lt;/code&gt; 中使用 &lt;code&gt;-p&lt;/code&gt; 开关来使用多处理功能，则将产生16GB的RAM。建议调整您的Docker偏好设置，因为如果Docker容器内存不足，则可能会退出。</target>
        </trans-unit>
        <trans-unit id="f894ad4e677e493ff7d4f3c5efd5f49b1d93605e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;estimatesdir&lt;/code&gt; will stand here for the absolute path to the estimates directory. (For instance &lt;code&gt;/home/faroit/dev/mymethod/musdboutput&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;estimatesdir&lt;/code&gt; 将代表估计目录的绝对路径。（例如 &lt;code&gt;/home/faroit/dev/mymethod/musdboutput&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="aea721b294f1d298f12b51c7cdf3fde1f456b1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;musdbdir&lt;/code&gt; will stand here for the absolute path to the root folder of musdb. (For instance &lt;code&gt;/home/faroit/dev/data/musdb18&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;musdbdir&lt;/code&gt; 将在此处代表musdb根文件夹的绝对路径。（例如 &lt;code&gt;/home/faroit/dev/data/musdb18&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="affae19a7f15ce3b1c1d75b7445687b8452f1668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputdir&lt;/code&gt; will stand here for the absolute path to the output directory. (For instance &lt;code&gt;/home/faroit/dev/mymethod/scores&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;outputdir&lt;/code&gt; 将在此处代表输出目录的绝对路径。（例如 &lt;code&gt;/home/faroit/dev/mymethod/scores&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5bda406e508e1442ecd2e818e692ce913bdd8884" translate="yes" xml:space="preserve">
          <source>A python package to evaluate source separation results using the &lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18&lt;/a&gt; dataset. This package was part of the &lt;a href=&quot;https://sisec.inria.fr/home/2018-professionally-produced-music-recordings/&quot;&gt;MUS task&lt;/a&gt; of the &lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;Signal Separation Evaluation Campaign (SISEC)&lt;/a&gt;.</source>
          <target state="translated">一个使用&lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18&lt;/a&gt;数据集评估源分离结果的python软件包。该软件包是&lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;信号分离评估运动（SISEC）&lt;/a&gt;的&lt;a href=&quot;https://sisec.inria.fr/home/2018-professionally-produced-music-recordings/&quot;&gt;MUS任务&lt;/a&gt;的一部分。</target>
        </trans-unit>
        <trans-unit id="51cc03d6f04f594e75b71e73893e0f15b48eeebb" translate="yes" xml:space="preserve">
          <source>A. If you use the &lt;code&gt;museval&lt;/code&gt; in the context of source separation evaluation comparing a method it to other methods of &lt;a href=&quot;http://sisec18.unmix.app/&quot;&gt;SiSEC 2018&lt;/a&gt;, please cite</source>
          <target state="translated">&lt;code&gt;museval&lt;/code&gt; ：如果您在来源分离评估的上下文中使用museval，并将其方法与&lt;a href=&quot;http://sisec18.unmix.app/&quot;&gt;SiSEC 2018的&lt;/a&gt;其他方法进行比较，请引用</target>
        </trans-unit>
        <trans-unit id="05b75891acc19ac0aa2e1ffb0148215fd38a218d" translate="yes" xml:space="preserve">
          <source>Aggregate and Analyze Scores</source>
          <target state="translated">汇总和分析分数</target>
        </trans-unit>
        <trans-unit id="0f48147765a2e6058c1ebdd20ac5b097428faf73" translate="yes" xml:space="preserve">
          <source>B. if you use the software for any other purpose, you can cite the software release</source>
          <target state="translated">B.如果您将本软件用于任何其他目的,您可以引用软件的发布版本。</target>
        </trans-unit>
        <trans-unit id="faa7c1aedffe0265552568c29cf738efe6cbd63b" translate="yes" xml:space="preserve">
          <source>BSSEval v4</source>
          <target state="translated">BSSEval v4</target>
        </trans-unit>
        <trans-unit id="8e7103c3030f2cc7a65b256b0330c89a3238e6a9" translate="yes" xml:space="preserve">
          <source>Commandline tool</source>
          <target state="translated">命令行工具</target>
        </trans-unit>
        <trans-unit id="a6f2a3cb0dc490bd66e79c6c852a5777d249d7a2" translate="yes" xml:space="preserve">
          <source>Evaluate MUSDB18 tracks later</source>
          <target state="translated">稍后评估MUSDB18轨道</target>
        </trans-unit>
        <trans-unit id="b7e92509815591b1f03d60d3782bb78ff944c3e6" translate="yes" xml:space="preserve">
          <source>Evaluation tools for the SIGSEP MUS database</source>
          <target state="translated">全球环境教育方案毛里求斯数据库的评估工具</target>
        </trans-unit>
        <trans-unit id="6216dda44ef392d90f9b88eafd182872c5b5dd6f" translate="yes" xml:space="preserve">
          <source>For this package, we enabled the option of having &lt;em&gt;time invariant&lt;/em&gt; distortion filters, instead of necessarily taking them as varying over time as done in the previous versions of BSS eval. First, enabling this option &lt;em&gt;significantly reduces&lt;/em&gt; the computational cost for evaluation because matching needs to be done only once for the whole signal. Second, it introduces much more dynamics in the evaluation, because time-varying matching filters turn out to over-estimate performance. Third, this makes matching more robust, because true sources are not silent throughout the whole recording, while they often were for short windows.</source>
          <target state="translated">对于此软件包，我们启用了具有&lt;em&gt;时不变&lt;/em&gt;失真滤波器的选项，而不必像以前版本的BSS eval那样使它们随时间变化。首先，启用此选项可&lt;em&gt;显着降低&lt;/em&gt;评估的计算成本，因为对整个信号只需进行一次匹配即可。其次，由于时变匹配滤波器会导致高估性能，因此它在评估中引入了更多的动态因素。第三，这使匹配更加健壮，因为在整个录制过程中，真正的信号源并不是无声的，而真正的信号源通常是短窗口的。</target>
        </trans-unit>
        <trans-unit id="ab3693d82950b9cfe47093dc304a2be055b0863e" translate="yes" xml:space="preserve">
          <source>If you don't want to set up a Python environment to run the evaluation, we would recommend to use &lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;. Assuming you have already computed your estimates and installed docker in your machine, you just need to run the following two lines in your terminal:</source>
          <target state="translated">如果您不想设置Python环境来运行评估，我们建议您使用&lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;。假设您已经计算了估算值并在机器中安装了docker，则只需在终端中运行以下两行：</target>
        </trans-unit>
        <trans-unit id="a9cb6ebdbc46ecc62428437618235f999bc9a654" translate="yes" xml:space="preserve">
          <source>If you have already computed your estimates, we provide you with an easy-to-use function to process evaluation results afterwards.</source>
          <target state="translated">如果您已经计算了您的估算,我们为您提供了一个易于使用的功能来处理评估结果。</target>
        </trans-unit>
        <trans-unit id="82f5ee2bb893b60eaf63625024cf7e186daf4f29" translate="yes" xml:space="preserve">
          <source>If you want to perform evaluation while processing your source separation results, you can make use &lt;code&gt;musdb&lt;/code&gt; track objects.
Here is an example for such a function separating the mixture into a &lt;strong&gt;vocals&lt;/strong&gt; and &lt;strong&gt;accompaniment&lt;/strong&gt; track:</source>
          <target state="translated">如果要在处理源分离结果时执行评估，则可以使用 &lt;code&gt;musdb&lt;/code&gt; 跟踪对象。这是一个将混音分离&lt;strong&gt;为人声&lt;/strong&gt;和&lt;strong&gt;伴奏&lt;/strong&gt;音轨的函数的示例：</target>
        </trans-unit>
        <trans-unit id="06afbe0b83817d883d08034e1192f3604ccca0ee" translate="yes" xml:space="preserve">
          <source>In the line above, replace &lt;code&gt;estimatesdir&lt;/code&gt;, &lt;code&gt;musdbdir&lt;/code&gt; and &lt;code&gt;outputdir&lt;/code&gt; by the absolute paths for your setting.  Please note that docker requires absolute paths so you have to rely on your command line environment to convert relative paths to absolute paths (e.g. by using &lt;code&gt;$HOME/&lt;/code&gt; on Unix).</source>
          <target state="translated">在上面的线，更换 &lt;code&gt;estimatesdir&lt;/code&gt; ， &lt;code&gt;musdbdir&lt;/code&gt; 和 &lt;code&gt;outputdir&lt;/code&gt; 通过您设置的绝对路径。请注意，docker需要绝对路径，因此您必须依靠命令行环境将相对路径转换为绝对路径（例如，在Unix上使用 &lt;code&gt;$HOME/&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="8a7ec5636ae09a194c950c4def88cc5e2a9891cd" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;output_dir&lt;/code&gt; is set. &lt;code&gt;museval&lt;/code&gt; will recreate the &lt;code&gt;musdb&lt;/code&gt; file structure in that folder and write the evaluation results to this folder.</source>
          <target state="translated">确保已设置 &lt;code&gt;output_dir&lt;/code&gt; 。 &lt;code&gt;museval&lt;/code&gt; 将在该文件夹中重新创建 &lt;code&gt;musdb&lt;/code&gt; 文件结构，并将评估结果写入该文件夹。</target>
        </trans-unit>
        <trans-unit id="77ca84718e0ad8247dcc8f32f65ce5736bf1270f" translate="yes" xml:space="preserve">
          <source>Package installation</source>
          <target state="translated">包装安装</target>
        </trans-unit>
        <trans-unit id="455e35c86ca328841291a9f407befe2e5e1baf02" translate="yes" xml:space="preserve">
          <source>Pull our precompiled &lt;code&gt;sigsep-mus-eval&lt;/code&gt; image from &lt;a href=&quot;https://hub.docker.com/r/faroit/sigsep-mus-eval/&quot;&gt;dockerhub&lt;/a&gt;:</source>
          <target state="translated">从&lt;a href=&quot;https://hub.docker.com/r/faroit/sigsep-mus-eval/&quot;&gt;dockerhub中提取&lt;/a&gt;我们预编译的 &lt;code&gt;sigsep-mus-eval&lt;/code&gt; 映像：</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">参考文献</target>
        </trans-unit>
        <trans-unit id="cc7635f28ae3288eac8bd8a380bb1d7629b35001" translate="yes" xml:space="preserve">
          <source>Scores for each track can also be aggregated in a pandas DataFrame for easier analysis or the creation of boxplots.
To aggregate multiple tracks in a DataFrame, create &lt;code&gt;museval.EvalStore()&lt;/code&gt; object and add the track scores successively.</source>
          <target state="translated">每个轨道的分数也可以汇总到熊猫DataFrame中，以方便分析或创建箱线图。要在一个DataFrame中聚合多个轨道，请创建 &lt;code&gt;museval.EvalStore()&lt;/code&gt; 对象并连续添加轨道分数。</target>
        </trans-unit>
        <trans-unit id="f69ea6473306b2d6254f0d96a0b499ddc1e23959" translate="yes" xml:space="preserve">
          <source>Separate MUSDB18 tracks and Evaluate on-the-fly</source>
          <target state="translated">分开MUSDB18轨道,并在飞行中评估</target>
        </trans-unit>
        <trans-unit id="a104a1211164d9bd43244ac6bfaca16254bb004e" translate="yes" xml:space="preserve">
          <source>Simply use the &lt;code&gt;museval.eval_mus_dir&lt;/code&gt; to evaluate your &lt;code&gt;estimates_dir&lt;/code&gt; and write the results into the &lt;code&gt;output_dir&lt;/code&gt;. For convenience, the &lt;code&gt;eval_mus_dir&lt;/code&gt; function accepts all parameters of the &lt;code&gt;musdb.run()&lt;/code&gt;. That way e.g. multiprocessing can easily be enabled by setting &lt;code&gt;parallel=True&lt;/code&gt;:</source>
          <target state="translated">只需使用 &lt;code&gt;museval.eval_mus_dir&lt;/code&gt; 来评估你的 &lt;code&gt;estimates_dir&lt;/code&gt; ，并将结果写入到 &lt;code&gt;output_dir&lt;/code&gt; 。为了方便起见， &lt;code&gt;eval_mus_dir&lt;/code&gt; 函数接受 &lt;code&gt;musdb.run()&lt;/code&gt; 的所有参数。这样，例如，可以通过设置 &lt;code&gt;parallel=True&lt;/code&gt; 轻松启用多处理：</target>
        </trans-unit>
        <trans-unit id="571c5f16641539a79af38d9b64ae2ea2e2be10ce" translate="yes" xml:space="preserve">
          <source>The BSSEval metrics, as implemented in the &lt;a href=&quot;http://bass-db.gforge.inria.fr/bss_eval/&quot;&gt;MATLAB toolboxes&lt;/a&gt; and their re-implementation in &lt;a href=&quot;http://craffel.github.io/mir_eval/#module-mir_eval.separation&quot;&gt;mir_eval&lt;/a&gt; are widely used in the audio separation literature. One particularity of BSSEval is to compute the metrics after optimally matching the estimates to the true sources through linear distortion filters. This allows the criteria to be robust to some linear mismatches. Apart from the optional evaluation for all possible permutations of the sources, this matching is the reason for most of the computation cost of BSSEval, especially considering it is done for each evaluation window when the metrics are computed on a framewise basis.</source>
          <target state="translated">在&lt;a href=&quot;http://bass-db.gforge.inria.fr/bss_eval/&quot;&gt;MATLAB工具箱中&lt;/a&gt;实现的BSSEval度量及其在&lt;a href=&quot;http://craffel.github.io/mir_eval/#module-mir_eval.separation&quot;&gt;mir_eval&lt;/a&gt;中的重新实现在音频分离文献中得到了广泛使用。 BSSEval的一种特殊性是在通过线性失真滤波器将估计值与真实源最佳匹配之后，计算指标。这使标准对于某些线性失配具有鲁棒性。除了对源的所有可能排列进行可选评估之外，这种匹配是BSSEval大部分计算成本的原因，尤其是考虑到在按帧计算度量时，每个评估窗口都已完成此匹配。</target>
        </trans-unit>
        <trans-unit id="1e2db5a13873f5efd3e5f196bebf771738384775" translate="yes" xml:space="preserve">
          <source>The purpose of this package is to evaluate source separation results and write out validated &lt;code&gt;json&lt;/code&gt; files. We want to encourage users to use this evaluation output format as the standardized way to share source separation results. &lt;code&gt;museval&lt;/code&gt; is designed to work in conjuction with the &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-db&quot;&gt;musdb&lt;/a&gt; tools and the MUSDB18 dataset (however, &lt;code&gt;museval&lt;/code&gt; can also be used without &lt;code&gt;musdb&lt;/code&gt;).</source>
          <target state="translated">该软件包的目的是评估源分离结果并写出经过验证的 &lt;code&gt;json&lt;/code&gt; 文件。我们希望鼓励用户使用此评估输出格式作为共享源分离结果的标准化方法。 &lt;code&gt;museval&lt;/code&gt; 的设计工作与一起选择&lt;a href=&quot;https://github.com/sigsep/sigsep-mus-db&quot;&gt;musdb&lt;/a&gt;工具和MUSDB18数据集（但是， &lt;code&gt;museval&lt;/code&gt; 也可以不使用 &lt;code&gt;musdb&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="42ba84c6bb591dbd5e3e2912945476bed8d3b692" translate="yes" xml:space="preserve">
          <source>To compare against participants from &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-2018&quot;&gt;SiSEC MUS 2018&lt;/a&gt;, we provide a convenient method to load the existing scores on demand using &lt;code&gt;methods.add_sisec18()&lt;/code&gt;. For the creation of plots and statistical significance tests we refer to our &lt;a href=&quot;/examples&quot;&gt;list of examples&lt;/a&gt;.</source>
          <target state="translated">为了与&lt;a href=&quot;https://github.com/sigsep/sigsep-mus-2018&quot;&gt;SiSEC MUS 2018的&lt;/a&gt;参与者进行比较，我们提供了一种方便的方法，可以使用 &lt;code&gt;methods.add_sisec18()&lt;/code&gt; 按需加载现有分数。对于图的创建和统计显着性检验，请参考&lt;a href=&quot;/examples&quot;&gt;示例列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aeacdc87793d62885e0b31c5a4df71dd70c22edb" translate="yes" xml:space="preserve">
          <source>To compare multiple methods, create a &lt;code&gt;museval.MethodStore()&lt;/code&gt; object add the results</source>
          <target state="translated">要比较多个方法，请创建一个 &lt;code&gt;museval.MethodStore()&lt;/code&gt; 对象，然后添加结果</target>
        </trans-unit>
        <trans-unit id="1c2d42f3921c7db9d3936a82cfeafa1381cba112" translate="yes" xml:space="preserve">
          <source>To run the evaluation inside of the docker, three absolute paths are required:</source>
          <target state="translated">要在docker里面运行评估,需要三个绝对路径。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="cc5d3eba3df6350193fb868f0abedb0713eb72eb" translate="yes" xml:space="preserve">
          <source>Using Docker for Evaluation</source>
          <target state="translated">使用Docker进行评估</target>
        </trans-unit>
        <trans-unit id="3d889acaf74f5348937d02868d1946f27ad8b75b" translate="yes" xml:space="preserve">
          <source>We just mount these directories into the docker container using the &lt;code&gt;-v&lt;/code&gt; flags and start the docker instance:</source>
          <target state="translated">我们只需要使用 &lt;code&gt;-v&lt;/code&gt; 标志将这些目录挂载到docker容器中，然后启动docker实例：</target>
        </trans-unit>
        <trans-unit id="2582e9ed151ee1d02df636cec15b95f5f71f7bed" translate="yes" xml:space="preserve">
          <source>We provide a command line wrapper of &lt;code&gt;eval_mus_dir&lt;/code&gt; by calling the &lt;code&gt;museval&lt;/code&gt; command line tool. The following example is equivalent to the code example above:</source>
          <target state="translated">我们通过调用 &lt;code&gt;museval&lt;/code&gt; 命令行工具来提供 &lt;code&gt;eval_mus_dir&lt;/code&gt; 的命令行包装。下面的示例等效于上面的代码示例：</target>
        </trans-unit>
        <trans-unit id="f5673699af77525be1c3fa4b3778577547332862" translate="yes" xml:space="preserve">
          <source>When all tracks have been added, the aggregated scores can be shown using &lt;code&gt;print(results)&lt;/code&gt; and results may be saved as a pandas DataFrame &lt;code&gt;results.save('my_method.pandas')&lt;/code&gt;.</source>
          <target state="translated">添加所有曲目后，可以使用 &lt;code&gt;print(results)&lt;/code&gt; 显示汇总分数，并将结果另存为pandas DataFrame &lt;code&gt;results.save('my_method.pandas')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b25189e837cce7fb54efaec70b16a21e86875885" translate="yes" xml:space="preserve">
          <source>You can install the &lt;code&gt;museval&lt;/code&gt; parsing package using pip:</source>
          <target state="translated">您可以使用pip安装 &lt;code&gt;museval&lt;/code&gt; 解析软件包：</target>
        </trans-unit>
        <trans-unit id="542dd89ace1ba604f84195cf9a71a01598ffdfc1" translate="yes" xml:space="preserve">
          <source>museval</source>
          <target state="translated">麝香国</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
