<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/amply/">
    <body>
      <group id="amply">
        <trans-unit id="54343941cc92c4edbf063b1cbe12f7a832df894a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Slices&lt;/em&gt; can be used to simplify the entry of multi-dimensional data.</source>
          <target state="translated">&lt;em&gt;切片&lt;/em&gt;可用于简化多维数据的输入。</target>
        </trans-unit>
        <trans-unit id="9b187a22e53baeabe225717e2ffeb607b3f9e3aa" translate="yes" xml:space="preserve">
          <source>A simple set. Sets behave a lot like lists.</source>
          <target state="translated">一个简单的集合。集合的行为很像列表。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="02befbd420c9754ded8c9a688a174615ddafd2a6" translate="yes" xml:space="preserve">
          <source>About this document</source>
          <target state="translated">关于本文件</target>
        </trans-unit>
        <trans-unit id="123e1c840df6aa5235361f383812c190c17a582e" translate="yes" xml:space="preserve">
          <source>All functionality is contained within the</source>
          <target state="translated">所有功能都包含在</target>
        </trans-unit>
        <trans-unit id="2012e71c218e2cad0813460914073b211efb8607" translate="yes" xml:space="preserve">
          <source>Alternate constructor. Create Amply object from contents of file or file-like object.</source>
          <target state="translated">备用构造函数。从文件或类文件对象的内容创建Amply对象。</target>
        </trans-unit>
        <trans-unit id="efcb65c0b3abed8b872ea09c95e07d00cbc20ab3" translate="yes" xml:space="preserve">
          <source>Amply</source>
          <target state="translated">丰富的</target>
        </trans-unit>
        <trans-unit id="ca5ec884d03fd69dda790ab78cca55dd76007aa5" translate="yes" xml:space="preserve">
          <source>Amply allows you to load and manipulate AMPL data as Python data structures.</source>
          <target state="translated">Amply允许您将AMPL数据作为Python数据结构进行加载和操作。</target>
        </trans-unit>
        <trans-unit id="814d4d7c5dbfa25ad206b14bffe77c168eeec262" translate="yes" xml:space="preserve">
          <source>Amply allows you to load and manipulate AMPL/GLPK data as Python data structures</source>
          <target state="translated">Amply允许您将AMPL/GLPK数据作为Python数据结构进行加载和操作。</target>
        </trans-unit>
        <trans-unit id="74aabc1a414e78a06b52e3db651b17eea0ef753d" translate="yes" xml:space="preserve">
          <source>Amply only supports a specific subset of the AMPL syntax:</source>
          <target state="translated">Amply只支持AMPL语法的一个特定子集。</target>
        </trans-unit>
        <trans-unit id="aa937893e33b940e8d63122f9618dc12f2adb9a0" translate="yes" xml:space="preserve">
          <source>Data can be integers, reals, symbolic, or quoted strings:</source>
          <target state="translated">数据可以是整数、实数、符号或引号字符串。</target>
        </trans-unit>
        <trans-unit id="36563eaf663b860733a425ca3808a0ead3c94f48" translate="yes" xml:space="preserve">
          <source>Declarations and data statements</source>
          <target state="translated">声明和数据报表</target>
        </trans-unit>
        <trans-unit id="08f3307c449bccbc16a2c2b83ec990cff84739c5" translate="yes" xml:space="preserve">
          <source>Development Notes</source>
          <target state="translated">发展说明</target>
        </trans-unit>
        <trans-unit id="88864a5717806eb1200a8dc216ee09ae9c6d444b" translate="yes" xml:space="preserve">
          <source>Furthermore, Amply does not perform any validation on data statements.</source>
          <target state="translated">此外,Amply不对数据语句进行任何验证。</target>
        </trans-unit>
        <trans-unit id="1a6d342db1e4785309270396e84cfc53ef810bb0" translate="yes" xml:space="preserve">
          <source>Import the class:</source>
          <target state="translated">导入该类。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="c2d2c75b350d92e26cc420afa009e9e1b33a0abb" translate="yes" xml:space="preserve">
          <source>Many thanks to Johannes Ragam (@thet), former custodian of the &amp;ldquo;amply&amp;rdquo; project on PyPi.
Johannes graciously transferred the project to this. Thanks!</source>
          <target state="translated">非常感谢PyPi上&amp;ldquo; amply&amp;rdquo;项目的前托管人Johannes Ragam（@thet）。约翰尼斯慷慨地将项目转移到了这里。谢谢！</target>
        </trans-unit>
        <trans-unit id="0764f06a3a4da9625e806121e0fd0b63e8862568" translate="yes" xml:space="preserve">
          <source>Matrices can also be transposed:</source>
          <target state="translated">矩阵也可以进行转置。</target>
        </trans-unit>
        <trans-unit id="68c2197eaaf15a7646e797602c5fff132680869e" translate="yes" xml:space="preserve">
          <source>Matrices only specify 2d data, however they can be combined with slices
to define higher-dimensional data:</source>
          <target state="translated">矩阵只能指定二维数据,但是它们可以和切片结合起来定义高维数据。</target>
        </trans-unit>
        <trans-unit id="79a59d98e30985bd5cb7e91b3d94af0508e01f41" translate="yes" xml:space="preserve">
          <source>Note that additional data may be loaded into an Amply object simply by calling
one of its methods. A common idiom might be to specify the set and parameter
declarations within your Python script, then load the actual data from
external files.</source>
          <target state="translated">请注意,只需调用Amply对象的一个方法,就可以将额外的数据加载到该对象中。一个常见的习惯是在Python脚本中指定集合和参数声明,然后从外部文件加载实际数据。</target>
        </trans-unit>
        <trans-unit id="ef706a12452392d6945c511b2c5977cac3302a3b" translate="yes" xml:space="preserve">
          <source>Note that in the above example, the set COUNTRIES didn&amp;rsquo;t actually have to exist itself.
Amply does not perform any validation on subscripts, it only uses them to figure out
how many subscripts a set has. To specify more than one, separate them by commas:</source>
          <target state="translated">请注意，在上面的示例中，国家（地区）集本身并不一定必须存在。Amply不会对下标进行任何验证，它仅使用它们来确定一组有多少个下标。要指定多个，请用逗号分隔：</target>
        </trans-unit>
        <trans-unit id="812e0c81e3a42d9b9b8f65a1769ab14c4d668914" translate="yes" xml:space="preserve">
          <source>Parameter data statements can include a &lt;em&gt;default&lt;/em&gt; clause. If a &amp;lsquo;.&amp;rsquo; is included
in the data, it is replaced with the default value:</source>
          <target state="translated">参数数据语句可以包含&lt;em&gt;默认&lt;/em&gt;子句。如果一个 '。' 包含在数据中，将其替换为默认值：</target>
        </trans-unit>
        <trans-unit id="1c70732444855b552631715a7980d37bb4d20685" translate="yes" xml:space="preserve">
          <source>Parameter declarations can also have a default clause. For these parameters,
any attempt to access the parameter for a key that has not been defined
will return the default value:</source>
          <target state="translated">参数声明也可以有一个默认条款。对于这些参数,任何试图访问未定义的键的参数都将返回默认值。</target>
        </trans-unit>
        <trans-unit id="7ea087fd9d6756769d72737475c756bc4f252abc" translate="yes" xml:space="preserve">
          <source>Parameters are also supported:</source>
          <target state="translated">也支持参数。</target>
        </trans-unit>
        <trans-unit id="23f9ae9f886b3b8a2dfcce76651866cbd70726e2" translate="yes" xml:space="preserve">
          <source>Parameters are commonly indexed over sets. No validation is done by Amply,
and the sets do not have to exist. Parameter objects are represented
as a mapping.</source>
          <target state="translated">参数通常在集合上做索引。Amply不做任何验证,集也不一定要存在。参数对象用映射来表示。</target>
        </trans-unit>
        <trans-unit id="c53a1a2eef5048eb22825203e1579d9e22f39ec0" translate="yes" xml:space="preserve">
          <source>Parameters can be indexed over multiple sets. The resulting values can be
accessed by treating the parameter object as a nested dictionary, or by
using a tuple as an index:</source>
          <target state="translated">参数可以在多个集合上进行索引。通过将参数对象视为嵌套的字典,或使用元组作为索引,可以访问结果的值。</target>
        </trans-unit>
        <trans-unit id="da4fe3f193ce11abef43254f183edb90d66dd198" translate="yes" xml:space="preserve">
          <source>Parameters in AMPL</source>
          <target state="translated">AMPL中的参数</target>
        </trans-unit>
        <trans-unit id="a10c5ae43b7ebb5e0ab53bebb97338eb022cfe06" translate="yes" xml:space="preserve">
          <source>Parameters indexed over two sets can also be specified in tabular format:</source>
          <target state="translated">也可以用表格式指定两组索引的参数。</target>
        </trans-unit>
        <trans-unit id="898f1326d2e5e05fabccbf6bb02a39711d34d949" translate="yes" xml:space="preserve">
          <source>Parameters support a slice syntax similar to that of sets:</source>
          <target state="translated">参数支持类似于集合的分片语法。</target>
        </trans-unit>
        <trans-unit id="ff39b4d292539e4dd81c01cf6c284d18252d68ed" translate="yes" xml:space="preserve">
          <source>Parse contents of file or file-like object (has a read() method).</source>
          <target state="translated">解析文件或类文件对象的内容(有一个read()方法)。</target>
        </trans-unit>
        <trans-unit id="b33f10199e38e94d9785d5ba6a043202508358e0" translate="yes" xml:space="preserve">
          <source>Parse string data.</source>
          <target state="translated">解析字符串数据。</target>
        </trans-unit>
        <trans-unit id="144c876d2303dd47c1d56c645aaf630241328bd4" translate="yes" xml:space="preserve">
          <source>Quickstart Guide</source>
          <target state="translated">快速入门指南</target>
        </trans-unit>
        <trans-unit id="de47430059bea46819a0a8ae0bbf1e434bbbbe5b" translate="yes" xml:space="preserve">
          <source>Set data can also be specified using a matrix notation.
A &amp;lsquo;+&amp;rsquo; indicates that the pair is included in the set whereas a &amp;lsquo;-&amp;lsquo; indicates a
pair not in the set.</source>
          <target state="translated">设置数据也可以使用矩阵符号指定。&amp;ldquo; +&amp;rdquo;表示该对包括在集合中，而&amp;ldquo;-&amp;rdquo;表示该对不在集合中。</target>
        </trans-unit>
        <trans-unit id="a0bde8c7c3590fb31a94ee6d11087a335e976965" translate="yes" xml:space="preserve">
          <source>Sets can contain multidimensional data, but we have to declare them to be so first.</source>
          <target state="translated">集可以包含多维数据,但我们必须先声明它们是多维数据。</target>
        </trans-unit>
        <trans-unit id="a0d15b353d5750157e677fc29f6a9bcf32a74fef" translate="yes" xml:space="preserve">
          <source>Sets in AMPL</source>
          <target state="translated">在AMPL中设置</target>
        </trans-unit>
        <trans-unit id="16bfcd048b79a8cb9397fcd9495c7d0450a8e40e" translate="yes" xml:space="preserve">
          <source>Sets themselves can be multidimensional (i.e. be subscriptable):</source>
          <target state="translated">集合本身可以是多维的(即可以下标)。</target>
        </trans-unit>
        <trans-unit id="14194a5080e3b225e1ca993ea8bf588c39bc9d49" translate="yes" xml:space="preserve">
          <source>Slices can be combined with tabular data for parameters indexed over more than
2 sets:</source>
          <target state="translated">对于超过2组的参数索引,切片可以与表格数据相结合。</target>
        </trans-unit>
        <trans-unit id="8da56c0a2659fcdc333c64518ef935a266acbead" translate="yes" xml:space="preserve">
          <source>Tabular data can also be transposed:</source>
          <target state="translated">表格数据也可以进行转置。</target>
        </trans-unit>
        <trans-unit id="19b12ef9d3f836915bd32c0fa9eaac08e3ee0ad6" translate="yes" xml:space="preserve">
          <source>The declaration syntax supported is extremely limited, and does not include most
elements of the AMPL programming language. The intention is that this library
is used as a way of loading data specified in an AMPL-like syntax.</source>
          <target state="translated">支持的声明语法极其有限,不包括AMPL编程语言的大部分元素。其目的是将该库作为一种加载类似AMPL语法的数据的方式。</target>
        </trans-unit>
        <trans-unit id="33abc2465b8aea2c77ae0a9e84ec632a1ad5fee1" translate="yes" xml:space="preserve">
          <source>The parsed data structures can then be accessed from an</source>
          <target state="translated">解析后的数据结构可从一个</target>
        </trans-unit>
        <trans-unit id="eb11cb60c14d24fb726c1c63e0b7db99e7177c5d" translate="yes" xml:space="preserve">
          <source>This document is intended as a guide to the syntax supported by Amply, and not as a general
AMPL reference manual. For more in depth coverage see the &lt;a href=&quot;http://gusek.sourceforge.net/gmpl.pdf&quot;&gt;GNU MathProg manual, Chapter 5: Model data&lt;/a&gt; or the following links:</source>
          <target state="translated">本文档旨在作为Amply支持的语法的指南，而不是一般的AMPL参考手册。有关更深入的介绍，请参见&lt;a href=&quot;http://gusek.sourceforge.net/gmpl.pdf&quot;&gt;GNU MathProg手册的第5章：模型数据&lt;/a&gt;或以下链接：</target>
        </trans-unit>
        <trans-unit id="3520fdf1bde952d72b4c06908b527356d153a22e" translate="yes" xml:space="preserve">
          <source>Typically, problems expressed in AMPL consist of two parts, a &lt;em&gt;model&lt;/em&gt; section and a &lt;em&gt;data&lt;/em&gt; section.
Amply is only designed to parse the parameter and set statements contained within AMPL data sections.
However, in order to parse these statements correctly, information that would usually be contained
within the model section may be required. For instance, it may not be possible to infer the dimension
of a set purely from its data statement. Therefore, Amply also supports set and parameter declarations.
These do not have to be put in a separate section, they only need to occur before the corresponding
data statement.</source>
          <target state="translated">通常，AMPL中表达的问题由两部分组成：&lt;em&gt;模型&lt;/em&gt;部分和&lt;em&gt;数据&lt;/em&gt;部分。 Amply仅设计用于解析AMPL数据节中包含的参数和set语句。但是，为了正确解析这些语句，可能需要通常包含在模型部分中的信息。例如，可能无法仅从其数据语句中推断出集合的尺寸。因此，Amply还支持集合和参数声明。这些不必放在单独的部分中，它们只需要出现在相应的数据语句之前。</target>
        </trans-unit>
        <trans-unit id="db5f6869b5f0574b5bb750d7a83d523f28ed9c61" translate="yes" xml:space="preserve">
          <source>class.</source>
          <target state="translated">类。</target>
        </trans-unit>
        <trans-unit id="5a401f6a009eb15f7d376544499108edfc012190" translate="yes" xml:space="preserve">
          <source>from_file(file)</source>
          <target state="translated">from_file(文件)</target>
        </trans-unit>
        <trans-unit id="572351e551d6c249a7d32d9a30a95492039c86ab" translate="yes" xml:space="preserve">
          <source>load_file(file)</source>
          <target state="translated">load_file(file)</target>
        </trans-unit>
        <trans-unit id="5ac48c3a556ed2601785a265cfd30efcc8985097" translate="yes" xml:space="preserve">
          <source>load_string(string)</source>
          <target state="translated">load_string(string)</target>
        </trans-unit>
        <trans-unit id="2b989c74bad3aac16434d0ff6f6778b94f28c4c9" translate="yes" xml:space="preserve">
          <source>object via
attribute lookup (if the name of the symbol is a valid Python name) or item
lookup.</source>
          <target state="translated">通过属性查找 (如果符号的名称是一个有效的 Python 名称)或项目查找。</target>
        </trans-unit>
        <trans-unit id="eb0be8e80b80eda4575972b81017dd320aa45ca7" translate="yes" xml:space="preserve">
          <source>parameter data statements</source>
          <target state="translated">参数数据报表</target>
        </trans-unit>
        <trans-unit id="08c53dbe35a72ae21e083dfa554fa3b2b93ca87c" translate="yes" xml:space="preserve">
          <source>parameter declarations</source>
          <target state="translated">参数声明</target>
        </trans-unit>
        <trans-unit id="ed4936a353b81a7b33f755c51c2014ccae054a04" translate="yes" xml:space="preserve">
          <source>set data statements</source>
          <target state="translated">固定数据报表</target>
        </trans-unit>
        <trans-unit id="96964a6eecfc2e337a6d46db71d1b7bb944a5db1" translate="yes" xml:space="preserve">
          <source>set declarations</source>
          <target state="translated">集声明</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
