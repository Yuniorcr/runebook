<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/charm4py/">
    <body>
      <group id="charm4py">
        <trans-unit id="4ee85e712e017a1529e408c0415ac8664842f41a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Chares&lt;/em&gt; (pronounced chars) are distributed Python objects.</source>
          <target state="translated">&lt;em&gt;Chares&lt;/em&gt;（发音为chars）是分布式的Python对象。</target>
        </trans-unit>
        <trans-unit id="d12ebbf3c0d6c56a95a2996293ae02ef7fe44b2f" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Group&lt;/em&gt; is a type of distributed collection where one instance of the specified
chare type is created on each processor.</source>
          <target state="translated">甲&lt;em&gt;组&lt;/em&gt;是其中每个处理器上创建的指定CHARE类型的一个实例的类型的分布式集合。</target>
        </trans-unit>
        <trans-unit id="baaad6192cff3a81a906fdfba738fc54dc775dae" translate="yes" xml:space="preserve">
          <source>Charm4py (Charm++ for Python &lt;em&gt;-formerly CharmPy-&lt;/em&gt;) is a distributed computing and
parallel programming framework for Python, for the productive development of fast,
parallel and scalable applications.
It is built on top of &lt;a href=&quot;https://github.com/UIUC-PPL/charm&quot;&gt;Charm++&lt;/a&gt;, a C++ adaptive runtime system that has seen
extensive use in the scientific and high-performance computing (HPC) communities
across many disciplines, and has been used to develop applications that run on a
wide range of devices: from small multi-core devices up to the largest supercomputers.</source>
          <target state="translated">Charm4py（Charm ++ for Python，&lt;em&gt;以前称为CharmPy-&lt;/em&gt;）是Python 的分布式计算和并行编程框架，用于快速，并行和可扩展的应用程序的生产性开发。它建立在&lt;a href=&quot;https://github.com/UIUC-PPL/charm&quot;&gt;Charm ++的&lt;/a&gt;基础上，Charm ++是一种C ++自适应运行时系统，已在许多学科的科学和高性能计算（HPC）社区中得到广泛使用，并已用于开发可在各种设备上运行的应用程序：从小型多核设备到最大的超级计算机。</target>
        </trans-unit>
        <trans-unit id="f5d043d54bbe65ecc869efa7f33e9d490697d73c" translate="yes" xml:space="preserve">
          <source>Charm4py Parallel Programming Framework</source>
          <target state="translated">Charm4py并行编程框架</target>
        </trans-unit>
        <trans-unit id="b37456c4530be810dc040f50da72eda09addfb0a" translate="yes" xml:space="preserve">
          <source>Contact</source>
          <target state="translated">联系我们</target>
        </trans-unit>
        <trans-unit id="29a69356c59506e1ec6859f083cd5f7d21c69125" translate="yes" xml:space="preserve">
          <source>In this example, there is only one chare per processor, but multiple chares (of the same
or different type) can exist on any given processor, which can bring flexibility and also performance
benefits (like dynamic load balancing). Please refer to the &lt;a href=&quot;https://charm4py.readthedocs.io&quot;&gt;documentation&lt;/a&gt; for more information.</source>
          <target state="translated">在此示例中，每个处理器只有一个字符，但是任何给定的处理器上都可以存在多个（相同或不同类型的字符），这可以带来灵活性以及性能优势（例如动态负载平衡）。请参考&lt;a href=&quot;https://charm4py.readthedocs.io&quot;&gt;文档&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="ea44e409367999499d0240217256ff8bf8a1072d" translate="yes" xml:space="preserve">
          <source>Main author at &amp;lt;&lt;a href=&quot;mailto:jjgalvez%40illinois.edu&quot;&gt;jjgalvez@illinois.edu&lt;/a&gt;&amp;gt;</source>
          <target state="translated">主要作者&amp;lt; &lt;a href=&quot;mailto:jjgalvez%40illinois.edu&quot;&gt;jjgalvez@illinois.edu&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="f128b5bd74edb54166c77c0ad595e584096ead81" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://charm4py.readthedocs.io&quot;&gt;Documentation&lt;/a&gt; for more information.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://charm4py.readthedocs.io&quot;&gt;文档&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="f810d883350a036cfd5625bee14f3998fbd66468" translate="yes" xml:space="preserve">
          <source>Remote method invocation in Charm4py is &lt;em&gt;asynchronous&lt;/em&gt;.</source>
          <target state="translated">Charm4py中的远程方法调用是&lt;em&gt;异步的&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5a5bb6c6c04927422d80c94bd460980919fbb4ca" translate="yes" xml:space="preserve">
          <source>Short Example</source>
          <target state="translated">简例</target>
        </trans-unit>
        <trans-unit id="f62d65268ff6326f045d465b37c76cf57fab0713" translate="yes" xml:space="preserve">
          <source>The following computes Pi in parallel, using any number of machines and processors:</source>
          <target state="translated">下面使用任意数量的机器和处理器,并行计算Pi。</target>
        </trans-unit>
        <trans-unit id="9bf1a534cbb7f5755cfee118cda601bbd8e85d6a" translate="yes" xml:space="preserve">
          <source>This is a simple example and demonstrates only a few features of Charm4py. Some things to note
from this example:</source>
          <target state="translated">这是一个简单的例子,只演示了Charm4py的一些功能。从这个例子中可以看出一些事情。</target>
        </trans-unit>
        <trans-unit id="f0821eef037f6bc6d2cddc09c30a0b8077173fcd" translate="yes" xml:space="preserve">
          <source>We would like feedback from the community. If you have feature suggestions,
support questions or general comments, please visit our &lt;a href=&quot;https://charm.discourse.group/c/charm4py&quot;&gt;forum&lt;/a&gt;
or emails us at &amp;lt;&lt;a href=&quot;mailto:charm%40cs.illinois.edu&quot;&gt;charm@cs.illinois.edu&lt;/a&gt;&amp;gt;, or</source>
          <target state="translated">我们希望得到社区的反馈。如果您有功能建议，支持问题或一般性评论，请访问我们的&lt;a href=&quot;https://charm.discourse.group/c/charm4py&quot;&gt;论坛&lt;/a&gt; 或通过电子邮件发送给我们&amp;lt; &lt;a href=&quot;mailto:charm%40cs.illinois.edu&quot;&gt;charm@cs.illinois.edu&lt;/a&gt; &amp;gt;，或</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
