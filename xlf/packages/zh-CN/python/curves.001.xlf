<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/curves/">
    <body>
      <group id="curves">
        <trans-unit id="29382ac9b12af35645c8a1ed14b43b3d61b4a90a" translate="yes" xml:space="preserve">
          <source>Bootstrapper</source>
          <target state="translated">Bootstrapper</target>
        </trans-unit>
        <trans-unit id="ab35e63581777d22917208125da3857bc58cb078" translate="yes" xml:space="preserve">
          <source>Curve Granularity</source>
          <target state="translated">曲线颗粒度</target>
        </trans-unit>
        <trans-unit id="09143a846ef21837b76c5f738b5ece5f998683a0" translate="yes" xml:space="preserve">
          <source>Daily granularity natural gas forward curves from traded daily, weekly, monthly, quarterly, seasonal, and
gas year granularity forward and futures prices.</source>
          <target state="translated">从交易的日、周、月、季、季、气年颗粒度远期和期货价格中得出日颗粒度天然气远期曲线。</target>
        </trans-unit>
        <trans-unit id="b44aafd75c229d9b9f6dfd71f0a43d1261a59996" translate="yes" xml:space="preserve">
          <source>Displays the following:</source>
          <target state="translated">显示以下内容:</target>
        </trans-unit>
        <trans-unit id="4bbd5f18c92ad38e2f8aa755dd2baa7abfc3ebd8" translate="yes" xml:space="preserve">
          <source>Examples of types of curve which can be constructed using this package:</source>
          <target state="translated">可以使用这个软件包构建的曲线类型的例子。</target>
        </trans-unit>
        <trans-unit id="2987df553ec0f175145fe98b8bdae1b03dcc2700" translate="yes" xml:space="preserve">
          <source>For details of more advanced usage, view the docstrings for either of these functions and the Jupyter Notebook &lt;a href=&quot;https://github.com/cmdty/curves/blob/master/samples/python/curves_tutorial.ipynb&quot;&gt;curves_tutorial&lt;/a&gt;.</source>
          <target state="translated">For details of more advanced usage, view the docstrings for either of these functions and the Jupyter Notebook &lt;a href=&quot;https://github.com/cmdty/curves/blob/master/samples/python/curves_tutorial.ipynb&quot;&gt;curves_tutorial&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8977fab35d3650c07a1c808f77a63bf37cf9c34f" translate="yes" xml:space="preserve">
          <source>Half-hourly granularity power forward curves from traded daily, weekly, monthly, quarterly, and seasonal
granularity forward and futures prices.</source>
          <target state="translated">从交易的日线、周线、月线、季线和季节性的颗粒度远期和期货价格的半小时颗粒度动力远期曲线。</target>
        </trans-unit>
        <trans-unit id="a55247d3e31387e013a7d6c62d1a2137ff77c12f" translate="yes" xml:space="preserve">
          <source>In order to facility creating a curve with higher granularity than the input contracts, the curves package includes the max_smooth_interp function.
This uses a maximum smoothness algorithm to interpolate input contracts with a fourth-order spline, whilst maintaining the average price constraints
inherent in the input contract prices.</source>
          <target state="translated">为了创建一条比输入合约粒度更大的曲线,曲线包中包含了max_smooth_interp函数。该函数使用最大平滑度算法对输入合约进行四阶花键插值,同时保持输入合约价格中固有的平均价格约束。</target>
        </trans-unit>
        <trans-unit id="15ff7d736bf058c04c1402a35a8e3bec9c105337" translate="yes" xml:space="preserve">
          <source>Monthly granularity oil products swap curves from traded monthly, quarterly, and calendar yearly granularity
market swap rates.</source>
          <target state="translated">月度颗粒度石油产品掉期曲线,来自交易的月度、季度和历年颗粒度市场掉期利率。</target>
        </trans-unit>
        <trans-unit id="5a2f91c1bc442b72e2a36050b118aa84afbec49a" translate="yes" xml:space="preserve">
          <source>More specifically, the problem being solved is to take a collection of traded forward prices, and tranform these into a
forward curve of homogenous granularity. Additionally the derived curve can constructed to be in a granularity higher
than what is traded in the market.</source>
          <target state="translated">更具体地说,所要解决的问题是将交易的远期价格集合起来,并将这些价格转化为同种粒度的远期曲线。此外,衍生的曲线可以构造成比市场上交易的颗粒度高的曲线。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="a80fcaf19390f7f56abc231dedbc41849cbd5b9e" translate="yes" xml:space="preserve">
          <source>Spline Interpolation</source>
          <target state="translated">花键插值</target>
        </trans-unit>
        <trans-unit id="b8fa33b3a4860f367576e8083528dd2c2f77c94e" translate="yes" xml:space="preserve">
          <source>The above code prints to the following:</source>
          <target state="translated">上面的代码打印出来的结果是:</target>
        </trans-unit>
        <trans-unit id="ec49fbb92d933c95fe9b31607d881c3331abe8ef" translate="yes" xml:space="preserve">
          <source>The basic functionality of the method bootstrap_contracts is to take a set of forward prices, for contracts with overlapping
delivery/fixing periods, and return a curve with overlapping periods removed, but with prices consistent with the original inputs.
Below is a basic example showing prices for January and Q1 delivery period periods being bootstrapped into
consistent January, February and March forward prices.</source>
          <target state="translated">bootstrap_contracts方法的基本功能是对有交割期/固定期重叠的合约,取一组远期价格,并返回一条去掉重叠期,但价格与原始输入一致的曲线。下面是一个基本的例子,它显示了1月和1季度交割期的价格被引导为1月、2月和3月的一致远期价格。</target>
        </trans-unit>
        <trans-unit id="ea9a76f90a8c6d058c6aa3b59574594879af36b5" translate="yes" xml:space="preserve">
          <source>The curves package contains a set of tools for building commodity forward, swaps, and futures curves.</source>
          <target state="translated">曲线包包含一套用于建立商品远期、掉期和期货曲线的工具。</target>
        </trans-unit>
        <trans-unit id="952d3eef342cc0a59457f5b9e03fcbf38c1822d2" translate="yes" xml:space="preserve">
          <source>The example below creates a daily granularity curve, from input contracts of various granularities. As would usually be the case in a practical scenario,
the bootstrap_contracts method is first used to remove the overlaps from the contracts. The example below also shows how the input contracts can have gaps
between them, which the spline will interpolate over, filling in the gaps in the final smooth curve. It also demonstrates the different ways of representing
the contract delivery period in the contract tuples and use of the helper module contract_period.</source>
          <target state="translated">下面的例子从不同粒度的输入合约中创建了一条每日粒度曲线。如同通常在实际情况下一样,首先使用bootstrap_contracts方法来去除合约中的重叠部分。下面的例子还显示了输入合约之间如何存在空隙,花键将在这些空隙上进行插值,在最终的平滑曲线中填充空隙。它还演示了在合同元组中表示合同交割期的不同方式,以及帮助模块 contract_period 的使用。</target>
        </trans-unit>
        <trans-unit id="6567434af8c128ce2b5fde8e59a6ee466ae1b816" translate="yes" xml:space="preserve">
          <source>The granularity of the derived curves is controlled by the string passed in as the freq parameter. For returned values
which are of type pandas.Series, this parameter is used when constructing these objects, with more details on the these
frequency strings found in the pandas documentation
&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;here&lt;/a&gt;.
The package level dict variable FREQ_TO_PERIOD_TYPE contains a mapping between freq parameter values and the underlying
managed types from the &lt;a href=&quot;https://github.com/cmdty/time-period-value-types&quot;&gt;.NET Time Period Library&lt;/a&gt; used to represent
the resulting curve index type, and hence granularity. As such, the keys of
FREQ_TO_PERIOD_TYPE can be used to determine the set of admissible values for the freq parameter.</source>
          <target state="translated">The granularity of the derived curves is controlled by the string passed in as the freq parameter. For returned values which are of type pandas.Series, this parameter is used when constructing these objects, with more details on the these frequency strings found in the pandas documentation &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;here&lt;/a&gt;. The package level dict variable FREQ_TO_PERIOD_TYPE contains a mapping between freq parameter values and the underlying managed types from the &lt;a href=&quot;https://github.com/cmdty/time-period-value-types&quot;&gt;.NET Time Period Library&lt;/a&gt; used to represent the resulting curve index type, and hence granularity. As such, the keys of FREQ_TO_PERIOD_TYPE can be used to determine the set of admissible values for the freq parameter.</target>
        </trans-unit>
        <trans-unit id="b3122bc4d17eda3a50469728a14cfd89f25a091a" translate="yes" xml:space="preserve">
          <source>The resulting curves should be consistent with inputs, in that they average back to the input forward contract prices.
This is a necessary to ensure that there are no arbitrage opportunities introduced between input contracts, and the derived forward curve.</source>
          <target state="translated">由此产生的曲线应与投入相一致,因为它们平均回到投入的远期合同价格。这是必要的,以确保在投入合同和衍生的远期曲线之间不存在套利机会。</target>
        </trans-unit>
        <trans-unit id="19d469ba0eb5317380c7d482a8dc23844b5908fd" translate="yes" xml:space="preserve">
          <source>Tools for building commodity forward, swaps, and futures curves.</source>
          <target state="translated">构建商品远期、掉期和期货曲线的工具。</target>
        </trans-unit>
        <trans-unit id="62ec73ff9e8dc0e480a3f484260badf4b56041c3" translate="yes" xml:space="preserve">
          <source>Two functions in the curves package are the core of the curve building calculations; bootstrap_contracts and max_smooth_interp.
Some basic examples of both of these function are given below. Both of these methods make extensive use of pandas, with
the pandas.Series type used to represent forward curves, and pandas.Period for the delivery period of an input forward contract
or derived forward curve.</source>
          <target state="translated">曲线包中的两个函数是建立曲线计算的核心,即bootstrap_contracts和max_smooth_interp。下面给出了这两个函数的一些基本例子。这两种方法都大量使用了pandas,pandas.Series类型用于表示远期曲线,pandas.Period用于输入远期合约或派生远期曲线的交割期。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
