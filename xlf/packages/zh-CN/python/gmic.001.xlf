<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/gmic/">
    <body>
      <group id="gmic">
        <trans-unit id="dddc12d296d8c08585fb2901dfbb06af6762ff5f" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;0&lt;/sup&gt; ie. &lt;code&gt;gmic.GmicImage(bytes, w, h, d, s)&lt;/code&gt;,  &lt;code&gt;gmic.run(..., &quot;commands&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;sup&gt;0&lt;/sup&gt;即 &lt;code&gt;gmic.GmicImage(bytes, w, h, d, s)&lt;/code&gt; ， &lt;code&gt;gmic.run(..., &quot;commands&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a169c3eed142b33ea86caf82bcd4b4ca83236ba" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt; ie. from this project's tarball or using &lt;code&gt;pip install gmic&lt;/code&gt; with the (possibly default) &quot;from source&quot; option. Hack the setup.py if needed, should work well with just &lt;code&gt;libz&lt;/code&gt; installed, preferably with &lt;code&gt;libfftw3&lt;/code&gt; too to support all sizes of images. Compiling with &lt;code&gt;gcc&lt;/code&gt; or &lt;code&gt;clang&lt;/code&gt; should work well.</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt;即 从该项目的tarball或使用 &lt;code&gt;pip install gmic&lt;/code&gt; （可能是默认选项）的&amp;ldquo; from source&amp;rdquo;选项。如果需要，请破解setup.py，它应该仅与安装的 &lt;code&gt;libz&lt;/code&gt; 一起工作，最好与 &lt;code&gt;libfftw3&lt;/code&gt; 一起使用，以支持所有大小的图像。用 &lt;code&gt;gcc&lt;/code&gt; 或 &lt;code&gt;clang&lt;/code&gt; 编译应该很好。</target>
        </trans-unit>
        <trans-unit id="5d53426e049c648fc314a99b76367c1575be3bb5" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt; enabled if related library is found at compile time, using found &lt;code&gt;pkg-config&lt;/code&gt; executable.</source>
          <target state="translated">&lt;sup&gt;&lt;/sup&gt;如果使用找到的 &lt;code&gt;pkg-config&lt;/code&gt; 可执行文件在编译时找到相关库，则启用&lt;sup&gt;2&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="76c23c088c13d775842d65bbb6ee5a2265912607" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;3&lt;/sup&gt; useful for samples retrieval and getting the latest filters collection updated; libcurl is embedded in the wheel package. If failing, any runtime-findable &lt;code&gt;curl&lt;/code&gt; executable will be used, see &lt;a href=&quot;https://github.com/myselfhimself/gmic-py/issues/9&quot;&gt;this issue&lt;/a&gt;; at anytime, use the &lt;code&gt;network 0&lt;/code&gt; G'MIC command to disable internet access</source>
          <target state="translated">&lt;sup&gt;3&lt;/sup&gt;对样本检索和更新最新过滤器集合很有用；libcurl嵌入在wheel包中。如果失败，将使用任何运行时可找到的 &lt;code&gt;curl&lt;/code&gt; 可执行文件，请参见此&lt;a href=&quot;https://github.com/myselfhimself/gmic-py/issues/9&quot;&gt;问题&lt;/a&gt;；随时使用 &lt;code&gt;network 0&lt;/code&gt; G'MIC命令禁用Internet访问</target>
        </trans-unit>
        <trans-unit id="af7d4584e00133d121ec3c56fe524537fb59fbe0" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;m&lt;/sup&gt; those are actually manylinux2010 and manylinux2014 targets. Manylinux1 has been dropped</source>
          <target state="translated">&lt;sup&gt;米&lt;/sup&gt;那实际上是manylinux2010和manylinux2014目标。Manylinux1已删除</target>
        </trans-unit>
        <trans-unit id="5ab531187f73217f3bd71f77e2cf567280e7c744" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;w&lt;/sup&gt; Until it is ready, you can try building you own gmic-py builds on Windows using &lt;a href=&quot;https://www.msys2.org/&quot;&gt;MSYS2&lt;/a&gt;</source>
          <target state="translated">&lt;sup&gt;w&lt;/sup&gt;在准备好之前，您可以尝试使用&lt;a href=&quot;https://www.msys2.org/&quot;&gt;MSYS2&lt;/a&gt;在Windows上构建自己的gmic-py构建</target>
        </trans-unit>
        <trans-unit id="51eef8c276a4c3836ed24fae4bedd4c21bcbf3da" translate="yes" xml:space="preserve">
          <source>Add Windows support</source>
          <target state="translated">增加对Windows的支持</target>
        </trans-unit>
        <trans-unit id="61c0d1a1dd98648560c619c50fcc8d117a168047" translate="yes" xml:space="preserve">
          <source>Add numpy nparray I/O support with automatic values (de-)interlacing</source>
          <target state="translated">增加numpy nparray I/O支持,支持自动值(去)交错。</target>
        </trans-unit>
        <trans-unit id="d770315f45b72faa5b8cad64e24b1d0144763293" translate="yes" xml:space="preserve">
          <source>Basic gmic-py&lt;sup&gt;0&lt;/sup&gt;</source>
          <target state="translated">基本的gmic-py &lt;sup&gt;0&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dc16be62fee4a94e702a3e95b7c3c08aa65d9621" translate="yes" xml:space="preserve">
          <source>Binary Python3 bindings for the G'MIC C++ image processing library</source>
          <target state="translated">G'MIC C++图像处理库的二进制Python3绑定。</target>
        </trans-unit>
        <trans-unit id="53909916abe8e36b12067bc9f8bd30a01c991206" translate="yes" xml:space="preserve">
          <source>Build from source&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">从源&lt;sup&gt;1&lt;/sup&gt;构建&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="55d71d005605b731983e1212cab3067f5e36bf4a" translate="yes" xml:space="preserve">
          <source>Build target</source>
          <target state="translated">建立目标</target>
        </trans-unit>
        <trans-unit id="dc200f04e61b9633a6f612178668e0a69ee8fcf9" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;pip install -e GITHUB_URL&lt;/code&gt; installable Python package for GMIC, with an API very similar to the C++ library: &lt;code&gt;gmic_instance.run(...)&lt;/code&gt;, &lt;code&gt;gmic(...)&lt;/code&gt; and matching exception types. Binary dependencies &lt;a href=&quot;https://python-packaging-tutorial.readthedocs.io/en/latest/binaries_dependencies.html&quot;&gt;should be bundled as in this tutorial&lt;/a&gt;.</source>
          <target state="translated">为GMIC创建 &lt;code&gt;pip install -e GITHUB_URL&lt;/code&gt; 可安装的Python软件包，其API与C ++库非常相似： &lt;code&gt;gmic_instance.run(...)&lt;/code&gt; ， &lt;code&gt;gmic(...)&lt;/code&gt; 和匹配的异常类型。二进制依赖关系&lt;a href=&quot;https://python-packaging-tutorial.readthedocs.io/en/latest/binaries_dependencies.html&quot;&gt;应该像本教程中那样捆绑在一起&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16daaf45dbccb76f84ff3417cda19735ad9a82f4" translate="yes" xml:space="preserve">
          <source>Create documented examples for various application domains. WIP</source>
          <target state="translated">为各种应用领域创建文档化的例子。WIP</target>
        </trans-unit>
        <trans-unit id="22e088c94c6ffcaeddd2f4f7896715f92c9b7854" translate="yes" xml:space="preserve">
          <source>Example script</source>
          <target state="translated">脚本示例</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="48788035ab03d889e1c66d834c67b8483e99dcd9" translate="yes" xml:space="preserve">
          <source>Github CI Ubuntu Linux 32&amp;amp;64bit &lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">Github CI Ubuntu Linux 32和64位&lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="057684fa8d59b9176dd83ad4eb44c9a7e77c19aa" translate="yes" xml:space="preserve">
          <source>If your machine has &lt;code&gt;libopencv&lt;/code&gt; installed and your gmic-py was compiled from source (ie. &lt;code&gt;python setup.py build&lt;/code&gt;), it will be dynamically linked.</source>
          <target state="translated">如果您的计算机安装了 &lt;code&gt;libopencv&lt;/code&gt; ,并且gmic-py是从源代码编译的（例如 &lt;code&gt;python setup.py build&lt;/code&gt; ），它将被动态链接。</target>
        </trans-unit>
        <trans-unit id="051fb486c677c1880739b8de8dc75e8707b467de" translate="yes" xml:space="preserve">
          <source>In a separate repository, create a Blender Plugin, leveraging the Python library and exposing:</source>
          <target state="translated">在一个单独的资源库中,创建一个Blender Plugin,利用Python库并公开。</target>
        </trans-unit>
        <trans-unit id="6aab6d7cc3549cd6df747125b47500bf16490831" translate="yes" xml:space="preserve">
          <source>Move the package to official Python package repositories. DONE</source>
          <target state="translated">将软件包移到官方的 Python 软件包仓库中。完成</target>
        </trans-unit>
        <trans-unit id="f6c6ec2efc1d3d336a84876b188204568fcaf266" translate="yes" xml:space="preserve">
          <source>Official platform support</source>
          <target state="translated">官方平台支持</target>
        </trans-unit>
        <trans-unit id="27ceb60ff69ef41a393942a25dcdea0ce5b6c844" translate="yes" xml:space="preserve">
          <source>OpenCV</source>
          <target state="translated">OpenCV</target>
        </trans-unit>
        <trans-unit id="43a1f1cb5c6733a846b09b4e509e070c6be48693" translate="yes" xml:space="preserve">
          <source>OpenMP</source>
          <target state="translated">OpenMP</target>
        </trans-unit>
        <trans-unit id="e33d9b1bece2aae284ed4b5e218b7cf1a9deb396" translate="yes" xml:space="preserve">
          <source>Pre-compiled Linux i686 &amp;amp; x86_64 py3.5-3.8 (gcc)&lt;sup&gt;m&lt;/sup&gt;</source>
          <target state="translated">预编译的Linux i686和x86_64 py3.5-3.8（gcc）&lt;sup&gt;m&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d4cbf4eb9ce3ac189abbd6f76321544a51fbf5c0" translate="yes" xml:space="preserve">
          <source>Pre-compiled MacOS 64 py3.5-3.8 (clang)</source>
          <target state="translated">预编译的MacOS 64 py3.5-3.8 (clang)</target>
        </trans-unit>
        <trans-unit id="b69fc2160d067b8a1ba97bc6b19ec7d8dd9fdeef" translate="yes" xml:space="preserve">
          <source>Python binding for G'MIC - A Full-Featured Open-Source Framework for Image Processing</source>
          <target state="translated">用于G'MIC的Python绑定--一个全功能的图像处理开源框架。</target>
        </trans-unit>
        <trans-unit id="b03d9c757b183e9b8e8bb7321e5b020ee306ad7e" translate="yes" xml:space="preserve">
          <source>Q1-Q3 2020</source>
          <target state="translated">2020年第一季度至第三季度</target>
        </trans-unit>
        <trans-unit id="44102760384cb5c7edb6e9b877fd9bb0d933131f" translate="yes" xml:space="preserve">
          <source>Q2-Q3 2020</source>
          <target state="translated">2020年第二季度至第三季度</target>
        </trans-unit>
        <trans-unit id="a35763a8813107397d06d0375706968f431cdb62" translate="yes" xml:space="preserve">
          <source>Q4 2019</source>
          <target state="translated">Q4 2019</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">快速启动</target>
        </trans-unit>
        <trans-unit id="8119e7f319c9927b2cee6e398f0a78babf7eebdc" translate="yes" xml:space="preserve">
          <source>Roadmap</source>
          <target state="translated">路线图</target>
        </trans-unit>
        <trans-unit id="0b1e3c92bb31471f40293792bee55d277de108e5" translate="yes" xml:space="preserve">
          <source>The aim of this project is to provide an official Python 3 package of the G'MIC image processing library, with its platform-specific binaries bundled or auto-compiled.
When this matures, running &lt;code&gt;pip install gmic-py&lt;/code&gt; should be all you need to get ready and use G'MIC within data-science, games, video editing, texture editing etc.. Python scripts.</source>
          <target state="translated">该项目的目的是提供G'MIC图像处理库的官方Python 3程序包，并捆绑或自动编译其特定于平台的二进制文件。当它成熟时，运行 &lt;code&gt;pip install gmic-py&lt;/code&gt; 应该是准备并在数据科学，游戏，视频编辑，纹理编辑等中使用G'MIC所需要的全部。Python脚本。</target>
        </trans-unit>
        <trans-unit id="1b4b2833aa4dc24a2635f4eead73660cc15b9d1a" translate="yes" xml:space="preserve">
          <source>This project is a work in progress and lives under the CeCILL license (similar to GNU Public License).</source>
          <target state="translated">本项目是一项正在进行中的工作,采用CeCILL许可证(类似于GNU公共许可证)。</target>
        </trans-unit>
        <trans-unit id="367e740d92a6cd57e61969fd91e64c26c012e134" translate="yes" xml:space="preserve">
          <source>Through &lt;code&gt;Ctypes&lt;/code&gt; dynamic binding on an Ubuntu docker image using Python 2-3. DONE in &lt;a href=&quot;https://github.com/dtschump/gmic-py/tree/ctypes_archive&quot;&gt;ctypes_archive branch&lt;/a&gt;.</source>
          <target state="translated">通过 &lt;code&gt;Ctypes&lt;/code&gt; 使用Python 2-3在Ubuntu docker映像上进行动态绑定。在&lt;a href=&quot;https://github.com/dtschump/gmic-py/tree/ctypes_archive&quot;&gt;ctypes_archive分支中完成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94873099288b85395ad17af987aeb330c97e9fde" translate="yes" xml:space="preserve">
          <source>Through custom Python/C++ binding (see &lt;code&gt;gmicpy.cpp&lt;/code&gt; and &lt;code&gt;setup.py&lt;/code&gt;) DONE</source>
          <target state="translated">通过自定义Python / C ++绑定（请参见 &lt;code&gt;gmicpy.cpp&lt;/code&gt; 和 &lt;code&gt;setup.py&lt;/code&gt; ）完成</target>
        </trans-unit>
        <trans-unit id="697547c508418381fb87b1a3a61ff44c9f7e5dbd" translate="yes" xml:space="preserve">
          <source>Using your camera with G'MIC's optional OpenCV linking</source>
          <target state="translated">使用G'MIC的可选OpenCV连接相机。</target>
        </trans-unit>
        <trans-unit id="d4144c9f1c595a9a0520976324b7d2f9f74e7620" translate="yes" xml:space="preserve">
          <source>Windows (planned)&lt;sup&gt;w&lt;/sup&gt;</source>
          <target state="translated">Windows（计划中）&lt;sup&gt;w&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b450cc7e995dffb659e9de0ff2bd358a97075c10" translate="yes" xml:space="preserve">
          <source>You can build your own Gmic python binding on possibly any platform with a C/C++ compiler.
Here is what we have managed to build and ship to &lt;a href=&quot;https://pypi.org/project/gmic/&quot;&gt;Gmic PyPI page&lt;/a&gt;, allowing you to &lt;code&gt;pip install gmic&lt;/code&gt; and use pre-built binaries or build &lt;code&gt;gmic-py&lt;/code&gt; on the fly.
Note that &lt;code&gt;gmic-py&lt;/code&gt;'s package installer links to your machine's existing &lt;code&gt;libpng&lt;/code&gt;, &lt;code&gt;OpenMP&lt;/code&gt; and &lt;code&gt;libcURL&lt;/code&gt; if found.</source>
          <target state="translated">您可以使用C / C ++编译器在任何平台上构建自己的Gmic python绑定。这是我们成功构建&lt;a href=&quot;https://pypi.org/project/gmic/&quot;&gt;并发&lt;/a&gt;送到Gmic PyPI页面的内容，允许您通过 &lt;code&gt;pip install gmic&lt;/code&gt; 并使用预构建的二进制文件或动态构建 &lt;code&gt;gmic-py&lt;/code&gt; 。请注意， &lt;code&gt;gmic-py&lt;/code&gt; 的软件包安装程序会链接到计算机现有的 &lt;code&gt;libpng&lt;/code&gt; ， &lt;code&gt;OpenMP&lt;/code&gt; 和 &lt;code&gt;libcURL&lt;/code&gt; (如果找到）。</target>
        </trans-unit>
        <trans-unit id="7bb0b4784a477cfc39ab45356f1e2746e8c63fe9" translate="yes" xml:space="preserve">
          <source>You need Python 3.x and &lt;code&gt;pip&lt;/code&gt; installed.
Things work best with the last development version for now :)</source>
          <target state="translated">您需要安装Python 3.x和 &lt;code&gt;pip&lt;/code&gt; 。现在，使用上一个开发版本时效果最好：)</target>
        </trans-unit>
        <trans-unit id="fa68972a081ba19ac49c44a75a6594291372ce9f" translate="yes" xml:space="preserve">
          <source>a single Blender GMIC 2D node with a text field or linkable script to add a GMIC expression</source>
          <target state="translated">一个带有文本字段或可链接脚本的单一Blender GMIC 2D节点,用于添加GMIC表达式。</target>
        </trans-unit>
        <trans-unit id="e85c5a4eef2d3610a6528cb4f0573072b7829845" translate="yes" xml:space="preserve">
          <source>as many 2D nodes as there are types of GMIC filters and commands (500+)</source>
          <target state="translated">有多少个二维节点,就有多少种GMIC过滤器和命令(500+)。</target>
        </trans-unit>
        <trans-unit id="a33142954ab58b6a9073c9f015c6ccefe0cac4a9" translate="yes" xml:space="preserve">
          <source>gmic-py</source>
          <target state="translated">gmic-py</target>
        </trans-unit>
        <trans-unit id="9533c5df9b708e63166206237f0a46a0db0efe70" translate="yes" xml:space="preserve">
          <source>libcURL</source>
          <target state="translated">libcURL</target>
        </trans-unit>
        <trans-unit id="67d85049d5ad551413a0df2a7b5737719e1722f9" translate="yes" xml:space="preserve">
          <source>libpng I/O</source>
          <target state="translated">libpng I/O</target>
        </trans-unit>
        <trans-unit id="27747a3c06e86818ef3490108e1ade5acff168b7" translate="yes" xml:space="preserve">
          <source>ppm/bmp I/O</source>
          <target state="translated">ppm/bmp I/O</target>
        </trans-unit>
        <trans-unit id="698a879938bf4d71b92190d2b8f19c0e1d4abeef" translate="yes" xml:space="preserve">
          <source>✓</source>
          <target state="translated">✓</target>
        </trans-unit>
        <trans-unit id="2fc426ef3fe4220f98153a0964bebede236a1c19" translate="yes" xml:space="preserve">
          <source>✓ &lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">✓ &lt;sup&gt;2&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0299adaba4eb0e8faca842f0597c11f5d3b26127" translate="yes" xml:space="preserve">
          <source>✓ &lt;sup&gt;3&lt;/sup&gt;</source>
          <target state="translated">✓ &lt;sup&gt;3&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c5c4ba1aceeba330dd52fd15ab331e3c19b6910f" translate="yes" xml:space="preserve">
          <source>✗</source>
          <target state="translated">✗</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
