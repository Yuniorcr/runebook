<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/probfoil/">
    <body>
      <group id="probfoil">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">，</target>
        </trans-unit>
        <trans-unit id="a8fbd0202d5d59bb16abfc27a4a724fcbb5feb8c" translate="yes" xml:space="preserve">
          <source>,
where</source>
          <target state="translated">，在哪里</target>
        </trans-unit>
        <trans-unit id="2f89d1765e4e25b93cac1f41c82c881b7623ff98" translate="yes" xml:space="preserve">
          <source>, etc.)</source>
          <target state="translated">, etc.)</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">- 救命</target>
        </trans-unit>
        <trans-unit id="fdec8645ec56ce6605b71f65b873987a4aeef68f" translate="yes" xml:space="preserve">
          <source>: a constant should be introduced here; possible value are derived automatically from the data</source>
          <target state="translated">: a constant should be introduced here; possible value are derived automatically from the data</target>
        </trans-unit>
        <trans-unit id="99c0346e19c8b7736d9072c41e1e5410cb9a8fb6" translate="yes" xml:space="preserve">
          <source>: the variable at this position does not exist yet in the rule (note that this is stricter than usual)</source>
          <target state="translated">: the variable at this position does not exist yet in the rule (note that this is stricter than usual)</target>
        </trans-unit>
        <trans-unit id="cee2efc21c143c7eccefbd3014c3073859aed7a5" translate="yes" xml:space="preserve">
          <source>: the variable at this position must already exist when the literal is added</source>
          <target state="translated">: the variable at this position must already exist when the literal is added</target>
        </trans-unit>
        <trans-unit id="e62a31f13e963cfc71926fcd34cd4c5625c96f3c" translate="yes" xml:space="preserve">
          <source>Alternatively, ProbFOIL can derive negative examples automatically by taking combinations of possible
values for the target arguments. Note that this can lead to a combinatorial explosion.
To enable this behavior, you can specify the fact</source>
          <target state="translated">另外,ProbFOIL可以通过对目标参数的可能值进行组合,自动推导出负例。请注意,这可能导致组合爆炸。要启用这种行为,您可以指定事实上的</target>
        </trans-unit>
        <trans-unit id="de81eb86e73521f461c01e6d9acc6e11704c760c" translate="yes" xml:space="preserve">
          <source>By default, examples are generated by quering the data for the target predicate.
Negative examples can be specified by adding zero-probability facts, e.g.:</source>
          <target state="translated">默认情况下,例子是通过查询目标谓词的数据生成的。负例可以通过添加零概率事实来指定,例如:。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="2af77455211798e210611b1ff1e19c0c25b3ad78" translate="yes" xml:space="preserve">
          <source>Example generation</source>
          <target state="translated">示例生成</target>
        </trans-unit>
        <trans-unit id="c055fe8394ad004cdb421d43b0ead2cc940e5d1d" translate="yes" xml:space="preserve">
          <source>For each relevant predicate (target and modes) there should be a type specifier.
This specifier is of the form</source>
          <target state="translated">对于每个相关的谓词(目标和模式),都应该有一个类型指定符。这个指定符的形式是</target>
        </trans-unit>
        <trans-unit id="3613534e55e3852aaf204cd53585c38dfdfa3351" translate="yes" xml:space="preserve">
          <source>Further examples can be found in the directory</source>
          <target state="translated">更多的例子可以在目录中找到</target>
        </trans-unit>
        <trans-unit id="71c07d17342b0f5a11e3721d906fdb0afb1173e8" translate="yes" xml:space="preserve">
          <source>If you are looking for the version used in the paper, you should check out the tag</source>
          <target state="translated">如果你想找本文使用的版本,你应该查看标签</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="79f5b225cffab11e22dc40b6f05abef1d33d1561" translate="yes" xml:space="preserve">
          <source>Modes</source>
          <target state="translated">模式</target>
        </trans-unit>
        <trans-unit id="914c605bc9db70ee3cdd54d208d6447b3382daff" translate="yes" xml:space="preserve">
          <source>Multiple files can be specified and the information in them is concatenated.
(For example, it is advisable to separate settings from data).</source>
          <target state="translated">可以指定多个文件,并将其中的信息进行合并。例如,最好将设置和数据分开)。</target>
        </trans-unit>
        <trans-unit id="7057ca8014338048a4fbe8121a40cb3c5858218c" translate="yes" xml:space="preserve">
          <source>Prob2FOIL: rule learner for probabilistic logic</source>
          <target state="translated">Prob2FOIL:概率逻辑的规则学习器。</target>
        </trans-unit>
        <trans-unit id="d8e03b8be9f3f7e86b11d4a0666d0a670754ebab" translate="yes" xml:space="preserve">
          <source>ProbFOIL 2.1 is a redesign of the Prob2FOIL algorithm that was introduced in &lt;a href=&quot;https://lirias.kuleuven.be/handle/123456789/499989&quot;&gt;https://lirias.kuleuven.be/handle/123456789/499989&lt;/a&gt;.
It works on top of ProbLog 2.1.</source>
          <target state="translated">ProbFOIL 2.1 is a redesign of the Prob2FOIL algorithm that was introduced in &lt;a href=&quot;https://lirias.kuleuven.be/handle/123456789/499989&quot;&gt;https://lirias.kuleuven.be/handle/123456789/499989&lt;/a&gt;. It works on top of ProbLog 2.1.</target>
        </trans-unit>
        <trans-unit id="35f960e2c0ba622fcd966632446c098d0bd62099" translate="yes" xml:space="preserve">
          <source>ProbFOIL 2.1 requires ProbLog 2.1.
You can install ProbLog by using the command:</source>
          <target state="translated">ProbFOIL 2.1 需要 ProbLog 2.1。您可以使用命令来安装 ProbLog。</target>
        </trans-unit>
        <trans-unit id="62c3b350a29d7b868491056f9f07b7046d7f61bf" translate="yes" xml:space="preserve">
          <source>ProbFOIL does not require any further installation.</source>
          <target state="translated">ProbFOIL不需要任何进一步的安装。</target>
        </trans-unit>
        <trans-unit id="7d518ce80004a26b65aba100362c4448f13841ad" translate="yes" xml:space="preserve">
          <source>ProbFOIL is a probabilistic extension of FOIL that is capable of learning probabilistic rules from
probabilistic data.</source>
          <target state="translated">ProbFOIL是FOIL的概率扩展,能够从概率数据中学习概率规则。</target>
        </trans-unit>
        <trans-unit id="2db6138b057d000ce73eb742007c020b4d2161ca" translate="yes" xml:space="preserve">
          <source>Settings format</source>
          <target state="translated">设置格式</target>
        </trans-unit>
        <trans-unit id="e855836b2f14fd1c56f243a1f72405e624b17bdf" translate="yes" xml:space="preserve">
          <source>Several command line arguments are available. Use</source>
          <target state="translated">有几个命令行参数可用。使用</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">目标</target>
        </trans-unit>
        <trans-unit id="215e6cafc32e4d2f99faf1e25b06f6264f9525bc" translate="yes" xml:space="preserve">
          <source>The data consists of (probabilistic) facts.
The settings define</source>
          <target state="translated">数据由(概率)事实组成。这些设置定义了</target>
        </trans-unit>
        <trans-unit id="2c7c94394e8d3420889682ac7901504233944d35" translate="yes" xml:space="preserve">
          <source>The input of ProbFOIL consists of two parts: settings and data.
These are both specified in Prolog (or ProbLog) files, and they can be combined into one.</source>
          <target state="translated">ProbFOIL的输入由两部分组成:设置和数据。这两部分都是在Prolog(或ProbLog)文件中指定的,它们可以合二为一。</target>
        </trans-unit>
        <trans-unit id="b290e100aedd0dc625f140d06608d150e29c68a5" translate="yes" xml:space="preserve">
          <source>The modes should be specified by adding facts of the form</source>
          <target state="translated">模式应通过添加以下形式的事实来指定。</target>
        </trans-unit>
        <trans-unit id="3f6e8705554fd95c6bc0b9fb33bc3591d97417c2" translate="yes" xml:space="preserve">
          <source>The target should be specified by adding a fact</source>
          <target state="translated">目标应通过添加一个事实来指定</target>
        </trans-unit>
        <trans-unit id="4e2995652eca6ee4618bdd8e0460a24c8da67b5b" translate="yes" xml:space="preserve">
          <source>To use:</source>
          <target state="translated">要使用:</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">种类</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="2fe4e869a5d4fe5fe23d44f59caa2af9cf5f2ad6" translate="yes" xml:space="preserve">
          <source>base(predicate(type1, type2, ...)</source>
          <target state="translated">base(predicate(type1,type2,...)</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="99345ce680cd3e48acdb9ab4212e4bd9bf9358b7" translate="yes" xml:space="preserve">
          <source>examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="5c04fe2ba84305bc5d391fe0be45db5c52a49c2e" translate="yes" xml:space="preserve">
          <source>is a type identifier.
Type can be identified by arbitrary Prolog atoms (e.g.</source>
          <target state="translated">是一个类型标识符。类型可以用任意的Prolog原子来标识(例如</target>
        </trans-unit>
        <trans-unit id="8a4b67cb34018f47da4a80ba817b832c91a771c5" translate="yes" xml:space="preserve">
          <source>is the mode specifier for argument X.
Possible mode specifiers are:</source>
          <target state="translated">是参数X的模式指定符,可能的模式指定符是:</target>
        </trans-unit>
        <trans-unit id="70814c64a0178a8b7475487a254abb62f9e3b205" translate="yes" xml:space="preserve">
          <source>learn(predicate/arity)</source>
          <target state="translated">学习(谓语/arity)</target>
        </trans-unit>
        <trans-unit id="fba2e57bb77b28e366a41701ea3bec4ad70107d7" translate="yes" xml:space="preserve">
          <source>mode(predicate(mode1, mode2, ...)</source>
          <target state="translated">模式(谓词(模式1,模式2,...)</target>
        </trans-unit>
        <trans-unit id="e07f8d7d0eb0f959c6ae423717ca3599d5084d85" translate="yes" xml:space="preserve">
          <source>modeX</source>
          <target state="translated">模式X</target>
        </trans-unit>
        <trans-unit id="96105f405d8910a8966778f2b1d9bc079caa2362" translate="yes" xml:space="preserve">
          <source>modes: which predicates can be added to the rules</source>
          <target state="translated">模式:哪些谓词可以添加到规则中?</target>
        </trans-unit>
        <trans-unit id="35344b8700c12500403ae8cfc76ec5f9f264a97f" translate="yes" xml:space="preserve">
          <source>or, in the repository version</source>
          <target state="translated">或者,在版本库中</target>
        </trans-unit>
        <trans-unit id="fb93e5dd6c909847aeffc14b3793f984526b812b" translate="yes" xml:space="preserve">
          <source>other settings related to the data</source>
          <target state="translated">与数据相关的其他设置</target>
        </trans-unit>
        <trans-unit id="c1b2f10b3341c559d6047b55f4bc01aedad9e938" translate="yes" xml:space="preserve">
          <source>paper_version</source>
          <target state="translated">文件版本</target>
        </trans-unit>
        <trans-unit id="d39a47507bbe27c2a7948861847f3607eda8e1be" translate="yes" xml:space="preserve">
          <source>person</source>
          <target state="translated">人物</target>
        </trans-unit>
        <trans-unit id="c9b9e22402a658d5646a59729e7e13b82c5610af" translate="yes" xml:space="preserve">
          <source>target: the predicate we want to learn</source>
          <target state="translated">目标:我们要学习的谓词</target>
        </trans-unit>
        <trans-unit id="9c43cc9f0bf2d224ff40ee871a32452b891002f9" translate="yes" xml:space="preserve">
          <source>to get more information.</source>
          <target state="translated">以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="bb30fec0c51b624b5cc330475326336a60cf3e02" translate="yes" xml:space="preserve">
          <source>typeX</source>
          <target state="translated">typeX</target>
        </trans-unit>
        <trans-unit id="db59429005cd9625113b148ac807132f165b8727" translate="yes" xml:space="preserve">
          <source>types: type information for the predicates</source>
          <target state="translated">类型:谓词的类型信息</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
