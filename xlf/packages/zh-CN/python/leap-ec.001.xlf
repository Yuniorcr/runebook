<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/leap-ec/">
    <body>
      <group id="leap-ec">
        <trans-unit id="706d7f0c88f049886aaea08eea120791107b9b85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Demo of LEAP running a 3-population island model on a real-valued optimization problem.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在实值优化问题上运行3人口岛模型的LEAP演示。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="340ce4eaf50bf4bac490c53f90eb1e83703380ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Written by Dr. Jeffrey K. Bassett, Dr. Mark Coletti, and Eric Scott&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;由Jeffrey K.Bassett博士，Mark Coletti博士和Eric Sc​​ott撰写&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d08b6dd5695b0b13841bbc17dbd481889a849ec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LEAP: Evolutionary Algorithms in Python&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LEAP：Python中的进化算法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17170da13cbc0e38e44bcd4c9dd247541a1acc89" translate="yes" xml:space="preserve">
          <source>A general purpose Library for Evolutionary Algorithms in Python.</source>
          <target state="translated">一个在Python中的进化算法的通用库。</target>
        </trans-unit>
        <trans-unit id="d7dcd5f7368a4bf45203caf6a939166023bcd44c" translate="yes" xml:space="preserve">
          <source>A number of LEAP demo applications are found in the the &lt;code&gt;example/&lt;/code&gt; directory of the github repository:</source>
          <target state="translated">在github仓库的 &lt;code&gt;example/&lt;/code&gt; 目录中找到了许多LEAP演示应用程序：</target>
        </trans-unit>
        <trans-unit id="7ada83324d7b5c812c05c726cc9fa2d6959af882" translate="yes" xml:space="preserve">
          <source>And use the Makefile to install the package:</source>
          <target state="translated">并使用Makefile来安装软件包。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">文件资料</target>
        </trans-unit>
        <trans-unit id="216faf26a2dea7c48ab99073bb84bb955f107198" translate="yes" xml:space="preserve">
          <source>Genetic Algorithm Example</source>
          <target state="translated">遗传算法实例</target>
        </trans-unit>
        <trans-unit id="953a2ea8bb7865d1a53009ca9ab170e83a693f67" translate="yes" xml:space="preserve">
          <source>Get the stable version of LEAP from the Python package index with</source>
          <target state="translated">从Python包索引中获取LEAP的稳定版,并使用</target>
        </trans-unit>
        <trans-unit id="98b1e4884835470f97e3c5181d8ec9c12a874ed2" translate="yes" xml:space="preserve">
          <source>Here's an example that applies a genetic algorithm variant to solve the
&lt;code&gt;MaxOnes&lt;/code&gt; optimization problem.  It uses bitflip mutation, uniform crossover,
and binary tournament selection:</source>
          <target state="translated">这是一个应用遗传算法变量来解决 &lt;code&gt;MaxOnes&lt;/code&gt; 优化问题的 示例。它使用bitflip突变，统一交叉和二进制锦标赛选择：</target>
        </trans-unit>
        <trans-unit id="2a2b6e5167889265a825bda1e18ece25ec840633" translate="yes" xml:space="preserve">
          <source>If you want to build a fresh set of docs for yourself, you can do so after running &lt;code&gt;make setup&lt;/code&gt;:</source>
          <target state="translated">如果您想自己构建一套新的文档，可以在运行 &lt;code&gt;make setup&lt;/code&gt; 之后这样做：</target>
        </trans-unit>
        <trans-unit id="cb0beea38cec465a867d15d24bcb2e4ceeb338ae" translate="yes" xml:space="preserve">
          <source>Installing from Source</source>
          <target state="translated">从源头安装</target>
        </trans-unit>
        <trans-unit id="9661db24591b38fb5d0c28cf5972b1dfbfb766d3" translate="yes" xml:space="preserve">
          <source>LEAP is a general purpose Evolutionary Computation package that combines
readable and easy-to-use syntax for search and optimization algorithms with
powerful distribution and visualization features.</source>
          <target state="translated">LEAP是一个通用的进化计算包,它将搜索和优化算法的可读性和易用性语法与强大的分布和可视化功能相结合。</target>
        </trans-unit>
        <trans-unit id="c15276842739609722acd88f76549fbfb8a03276" translate="yes" xml:space="preserve">
          <source>LEAP ships with a two-part &lt;code&gt;pytest&lt;/code&gt; harness, divided into fast and slow tests.  You can run them with</source>
          <target state="translated">LEAP附带了一个由两部分组成的 &lt;code&gt;pytest&lt;/code&gt; 工具，分为快速测试和慢速测试。您可以使用</target>
        </trans-unit>
        <trans-unit id="82883064b15aeabe76eddd6b678cf00bf687b3a7" translate="yes" xml:space="preserve">
          <source>LEAP's signature is its operator pipeline, which uses a simple list of
functional operators to concisely express a metaheuristic algorithm's
configuration as high-level code.  Adding metrics, visualization, or
special features (like distribution, coevolution, or island migrations)
is often as simple as adding operators into the pipeline.</source>
          <target state="translated">LEAP的特色是它的运算符管道,它使用一个简单的功能运算符列表,将元启发式算法的配置简洁地表达为高级代码。添加度量、可视化或特殊功能(如分布、共进化或岛迁移)通常就像在管道中添加运算符一样简单。</target>
        </trans-unit>
        <trans-unit id="65607507695dbb68853f7200e33956e39fd6a15d" translate="yes" xml:space="preserve">
          <source>More Examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="3f938428fb46002c0de7747d302e8c275a2281b7" translate="yes" xml:space="preserve">
          <source>Run the Test Suite</source>
          <target state="translated">运行测试套件</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">简单的例子</target>
        </trans-unit>
        <trans-unit id="40a09be7ecd2e6602e93c9a8bf0953e3f5e81d04" translate="yes" xml:space="preserve">
          <source>The easiest way to use an evolutionary algorithm in LEAP is to use the
&lt;code&gt;leap_ec.simple&lt;/code&gt; package, which contains simple interfaces for pre-built
algorithms:</source>
          <target state="translated">在LEAP中使用演化算法的最简单方法是使用 &lt;code&gt;leap_ec.simple&lt;/code&gt; 软件包，该软件包包含用于预构建算法的简单接口：</target>
        </trans-unit>
        <trans-unit id="287dc68b36959dcb3f4618f0302630b1dfde6cf9" translate="yes" xml:space="preserve">
          <source>The next-easiest way to use LEAP is to configure a custom algorithm via one
of the metaheuristic functions in the &lt;code&gt;leap_ec.algorithms&lt;/code&gt; package.  These
interfaces off you a flexible way to customize the various operators,
representations, and other components that go into a modern evolutionary
algorithm.</source>
          <target state="translated">使用LEAP的 &lt;code&gt;leap_ec.algorithms&lt;/code&gt; 最简单方法是通过jump_ec.algorithms包中的元启发式函数之一来配置自定义算法。这些接口为您提供了一种灵活的方式，可以自定义各种运算符，表示形式以及用于现代进化算法的其他组件。</target>
        </trans-unit>
        <trans-unit id="70ce07171f370929bccd088d85eb3490fdca9852" translate="yes" xml:space="preserve">
          <source>The stable version of LEAP's full documentation is over at &lt;a href=&quot;https://leap_gmu.readthedocs.io/&quot;&gt;ReadTheDocs&lt;/a&gt;.</source>
          <target state="translated">LEAP完整文档的稳定版本已在&lt;a href=&quot;https://leap_gmu.readthedocs.io/&quot;&gt;ReadTheDocs上结束&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24ac1b730208261b4c6dce716659e3e5177e717a" translate="yes" xml:space="preserve">
          <source>This will create HTML documentation in the &lt;code&gt;docs/build/html/&lt;/code&gt; directory.  It might take a while the first time,
since building the docs involves generating some plots and executing some example algorithms.</source>
          <target state="translated">这将在 &lt;code&gt;docs/build/html/&lt;/code&gt; 目录中创建HTML文档。第一次可能要花一些时间，因为构建文档涉及生成一些图并执行一些示例算法。</target>
        </trans-unit>
        <trans-unit id="33be4b2f70a399edccc01dbcc1160e6b8bb286d4" translate="yes" xml:space="preserve">
          <source>To install a source distribution of LEAP, clone the repo:</source>
          <target state="translated">要安装LEAP的源码发行版,请克隆repo。</target>
        </trans-unit>
        <trans-unit id="67d4265ac65da2927de38887eec57f3fc38f7165" translate="yes" xml:space="preserve">
          <source>Using LEAP</source>
          <target state="translated">使用LEAP</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="7e13a6af9adbba378f33d62a1b34d72ee88fd0a7" translate="yes" xml:space="preserve">
          <source>respectively.</source>
          <target state="translated">分别是:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
