<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/plone-cachepurging/">
    <body>
      <group id="plone-cachepurging">
        <trans-unit id="d1a6c4b767e639130c4313781046fea5298c5b4f" translate="yes" xml:space="preserve">
          <source>${object_url}/view</source>
          <target state="translated">${object_url}/view</target>
        </trans-unit>
        <trans-unit id="04f0e00ec7e20d85058555c17a921eb2581d1c9c" translate="yes" xml:space="preserve">
          <source>('http://example.com:80`,'http://www.example.com:80',)</source>
          <target state="translated">('http://example.com:80`,'http://www.example.com:80',)</target>
        </trans-unit>
        <trans-unit id="b3ee8d9aea8d38f2b1d2caf95afa77177294fb2a" translate="yes" xml:space="preserve">
          <source>(Again notice how we are using a generic interface from</source>
          <target state="translated">(Again notice how we are using a generic interface from</target>
        </trans-unit>
        <trans-unit id="a6e9be28afa2580b273f37cb912597047ef37cc9" translate="yes" xml:space="preserve">
          <source>(i.e. most objects that you can find through
the ZMI), which purges the object&amp;rsquo;s</source>
          <target state="translated">(i.e. most objects that you can find through the ZMI), which purges the object&amp;rsquo;s</target>
        </trans-unit>
        <trans-unit id="d39afd06ae93cbc458d0c7a300ed4a52397a7430" translate="yes" xml:space="preserve">
          <source>(or you replace that interface
with a more generic one), then its parent will be purged too, recursively.</source>
          <target state="translated">(or you replace that interface with a more generic one), then its parent will be purged too, recursively.</target>
        </trans-unit>
        <trans-unit id="40b26b1b87690c923b19ae9743f1cc74dda903d1" translate="yes" xml:space="preserve">
          <source>(the</source>
          <target state="translated">(the</target>
        </trans-unit>
        <trans-unit id="d3d2e8d6fefc3da530795e28eba60f278f03786f" translate="yes" xml:space="preserve">
          <source>) if your site
is served on multiple domains. This is useful because the virtual hosting
URL contains the &amp;ldquo;external&amp;rdquo; domain name. If your site is hosted such
that it can be reached via multiple domains (e.g.</source>
          <target state="translated">) if your site is served on multiple domains. This is useful because the virtual hosting URL contains the &amp;ldquo;external&amp;rdquo; domain name. If your site is hosted such that it can be reached via multiple domains (e.g.</target>
        </trans-unit>
        <trans-unit id="b136006888c0dd4127cdd1eef90330bf76b40738" translate="yes" xml:space="preserve">
          <source>), the virtual hosting path will be
different depending on which one the user happened to use. Most likely,
you will want to purge &lt;em&gt;both&lt;/em&gt; variants.</source>
          <target state="translated">), the virtual hosting path will be different depending on which one the user happened to use. Most likely, you will want to purge &lt;em&gt;both&lt;/em&gt; variants.</target>
        </trans-unit>
        <trans-unit id="a4afa79d2e3dcf862ed7bfc48a17383c4c441685" translate="yes" xml:space="preserve">
          <source>,
which by default is granted to the</source>
          <target state="translated">, which by default is granted to the</target>
        </trans-unit>
        <trans-unit id="01dfb623ffd0fb82eac9da8ddebae5ca168b2d2f" translate="yes" xml:space="preserve">
          <source>, the external
domain is</source>
          <target state="translated">, the external domain is</target>
        </trans-unit>
        <trans-unit id="9599f84f362e962bcb8c1fdb3cf6726282c273fe" translate="yes" xml:space="preserve">
          <source>, thus allowing URLs generated
in the site to show the correct external URL.</source>
          <target state="translated">, thus allowing URLs generated in the site to show the correct external URL.</target>
        </trans-unit>
        <trans-unit id="68883177497c032e286c33de93e91d8da54bf067" translate="yes" xml:space="preserve">
          <source>.
See the</source>
          <target state="translated">。见</target>
        </trans-unit>
        <trans-unit id="0c019a123c8f5ba6f4e82d804b1190e140798437" translate="yes" xml:space="preserve">
          <source>.
This should be a URL that is reachable from the Zope server. It does not
need to be accessible from Zope&amp;rsquo;s clients.</source>
          <target state="translated">. This should be a URL that is reachable from the Zope server. It does not need to be accessible from Zope&amp;rsquo;s clients.</target>
        </trans-unit>
        <trans-unit id="b8757cd699de569f8a34fc31baa71c028139ac87" translate="yes" xml:space="preserve">
          <source>. A web server like Apache (or a proxy like
Squid or Varnish) changes this into a URL like this:</source>
          <target state="translated">. A web server like Apache (or a proxy like Squid or Varnish) changes this into a URL like this:</target>
        </trans-unit>
        <trans-unit id="c05db2988305d59a6a5df684d7d59aa6d1eee50e" translate="yes" xml:space="preserve">
          <source>. Paths are relative to the domain root, i.e. they
start with a &amp;lsquo;/&amp;rsquo;.</source>
          <target state="translated">. Paths are relative to the domain root, i.e. they start with a &amp;lsquo;/&amp;rsquo;.</target>
        </trans-unit>
        <trans-unit id="8a93a3b3e7d4e99e2f5d209fb01b4d2af187aca8" translate="yes" xml:space="preserve">
          <source>/Plone</source>
          <target state="translated">/Plone</target>
        </trans-unit>
        <trans-unit id="453c95373a65c71a485925e59a3955cb1ac17897" translate="yes" xml:space="preserve">
          <source>1.0 - 2011-05-13</source>
          <target state="translated">1.0-2011-05-13</target>
        </trans-unit>
        <trans-unit id="a398a16e350904963d1509077cace413b32bd042" translate="yes" xml:space="preserve">
          <source>1.0.1 - 2011-05-21</source>
          <target state="translated">1.0.1-2011-05-21</target>
        </trans-unit>
        <trans-unit id="86e3072483b47b01e67853fa736c1c208b77fb5b" translate="yes" xml:space="preserve">
          <source>1.0.10 (2015-11-28)</source>
          <target state="translated">1.0.10 (2015-11-28)</target>
        </trans-unit>
        <trans-unit id="aaea18b0c599baf2be06e8631ceb23a45645fe1d" translate="yes" xml:space="preserve">
          <source>1.0.11 (2016-01-08)</source>
          <target state="translated">1.0.11 (2016-01-08)</target>
        </trans-unit>
        <trans-unit id="120a52dfea0128c45d370b6fb008e4b57c1fbe75" translate="yes" xml:space="preserve">
          <source>1.0.12 (2016-08-08)</source>
          <target state="translated">1.0.12 (2016-08-08)</target>
        </trans-unit>
        <trans-unit id="330e4505a76eae51fc9653d5e0e54cf37bb89768" translate="yes" xml:space="preserve">
          <source>1.0.13 (2016-10-04)</source>
          <target state="translated">1.0.13 (2016-10-04)</target>
        </trans-unit>
        <trans-unit id="59b2775b591c140fa91c181dc7339c2876f40e0c" translate="yes" xml:space="preserve">
          <source>1.0.14 (2018-01-30)</source>
          <target state="translated">1.0.14 (2018-01-30)</target>
        </trans-unit>
        <trans-unit id="6501cc05de0d4919ac3080a99cac6ffaca984490" translate="yes" xml:space="preserve">
          <source>1.0.15 (2018-04-24)</source>
          <target state="translated">1.0.15 (2018-04-24)</target>
        </trans-unit>
        <trans-unit id="d674863d75b5e026c0989ab059ba6ead7e5821a8" translate="yes" xml:space="preserve">
          <source>1.0.2 (2011-08-31)</source>
          <target state="translated">1.0.2 (2011-08-31)</target>
        </trans-unit>
        <trans-unit id="83fc0c605097d9a104b92786ecbd08e45eb2b974" translate="yes" xml:space="preserve">
          <source>1.0.3 (2011-09-16)</source>
          <target state="translated">1.0.3 (2011-09-16)</target>
        </trans-unit>
        <trans-unit id="b75dc1ddf1e0aeb58a4f1b4fe2493b417c81965f" translate="yes" xml:space="preserve">
          <source>1.0.4 (2012-12-09)</source>
          <target state="translated">1.0.4 (2012-12-09)</target>
        </trans-unit>
        <trans-unit id="eda8a39ba1d6a41bd9904045a5e89e5927324021" translate="yes" xml:space="preserve">
          <source>1.0.5 (2013-12-07)</source>
          <target state="translated">1.0.5 (2013-12-07)</target>
        </trans-unit>
        <trans-unit id="ecac83ee895d39e701a32b7be0fd460c2f47c625" translate="yes" xml:space="preserve">
          <source>1.0.6 (2014-09-08)</source>
          <target state="translated">1.0.6 (2014-09-08)</target>
        </trans-unit>
        <trans-unit id="1a87b6fdef188be36e342cf430ae9a8d9424532a" translate="yes" xml:space="preserve">
          <source>1.0.7 (2014-09-11)</source>
          <target state="translated">1.0.7 (2014-09-11)</target>
        </trans-unit>
        <trans-unit id="50472573bba245aebb012cb2a97e5fb9308d3858" translate="yes" xml:space="preserve">
          <source>1.0.8 (2015-06-09)</source>
          <target state="translated">1.0.8 (2015-06-09)</target>
        </trans-unit>
        <trans-unit id="99021527a842a38078ba315747de776fa2b044d7" translate="yes" xml:space="preserve">
          <source>1.0.9 (2015-07-18)</source>
          <target state="translated">1.0.9 (2015-07-18)</target>
        </trans-unit>
        <trans-unit id="e10d40887b11f8d5db657da471a9bf1159682960" translate="yes" xml:space="preserve">
          <source>1.0a1 - 2010-04-22</source>
          <target state="translated">1.0a1-2010-04-22</target>
        </trans-unit>
        <trans-unit id="457d35db27961ffab3dacaae4e78d160208a4c43" translate="yes" xml:space="preserve">
          <source>1.0b1 - 2010-12-14</source>
          <target state="translated">1.0b1-2010-12-14</target>
        </trans-unit>
        <trans-unit id="241c8f044318b77d0aa87e6f7b62c63771f7529b" translate="yes" xml:space="preserve">
          <source>1.0b2 - 2011-04-06</source>
          <target state="translated">1.0b2-2011-04-06</target>
        </trans-unit>
        <trans-unit id="c53a689dfa1009416ff5f2c4ea8802a1b93b2edf" translate="yes" xml:space="preserve">
          <source>2.0 (2018-10-31)</source>
          <target state="translated">2.0 (2018-10-31)</target>
        </trans-unit>
        <trans-unit id="f6713caff07143dc67e5ee6b92de43cea162d749" translate="yes" xml:space="preserve">
          <source>2.0.1 (2018-12-11)</source>
          <target state="translated">2.0.1 (2018-12-11)</target>
        </trans-unit>
        <trans-unit id="6e6f851e2c0b07ae0aab6a88f91d3fc2bb70fee1" translate="yes" xml:space="preserve">
          <source>2.0.2 (2020-04-20)</source>
          <target state="translated">2.0.2 (2020-04-20)</target>
        </trans-unit>
        <trans-unit id="59cdd9332342c368530cc7bc3c33ad4cc8cddfa9" translate="yes" xml:space="preserve">
          <source>@@plone.cachepurging.purge</source>
          <target state="translated">@@plone.cachepurging.purge</target>
        </trans-unit>
        <trans-unit id="8af0564472788a2b4971be2758335a8132bba5ba" translate="yes" xml:space="preserve">
          <source>@@plone.cachepurging.queue</source>
          <target state="translated">@@plone.cachepurging.queue</target>
        </trans-unit>
        <trans-unit id="5f6564746b7c7eea2efedac4bfdc8d096ec3ddfe" translate="yes" xml:space="preserve">
          <source>A worker thread is established for each caching proxy, allowing asynchronous
processing and freeing up Zope to handle the next request.</source>
          <target state="translated">为每个缓存代理建立一个工作线程,允许异步处理并释放Zope来处理下一个请求。</target>
        </trans-unit>
        <trans-unit id="4f4f8208b429a4f6c6ad60fa7bb31ff6aef6504b" translate="yes" xml:space="preserve">
          <source>Add MANIFEST.in.
[WouterVH]</source>
          <target state="translated">添加 MANIFEST.in.[WouterVH]</target>
        </trans-unit>
        <trans-unit id="ef553fe95c918e1800bada652dbb8e1bb6f1c249" translate="yes" xml:space="preserve">
          <source>Add Python 2 / 3 compatibility
[pbauer]</source>
          <target state="translated">增加Python 2/3的兼容性[pbauer]。</target>
        </trans-unit>
        <trans-unit id="9281ad79b9246e4cb904d7ece18926c53961cced" translate="yes" xml:space="preserve">
          <source>Add the URL of at least one caching proxy server capable of receiving PURGE
requests to the registry option</source>
          <target state="translated">在注册表选项中添加至少一个能够接收PURGE请求的缓存代理服务器的URL。</target>
        </trans-unit>
        <trans-unit id="dbdaa4041f59b8adf376696dba18429a8c94b703" translate="yes" xml:space="preserve">
          <source>Add undeclared dependencies
[gforcada]</source>
          <target state="translated">添加未声明的依赖关系[gforcada]</target>
        </trans-unit>
        <trans-unit id="6216d2bce167059a056b6e9de2b0ec7f3644bf7c" translate="yes" xml:space="preserve">
          <source>Any errors are logged at error level to the logger</source>
          <target state="translated">任何错误都会被记录在错误级别的记录器上。</target>
        </trans-unit>
        <trans-unit id="73927bd8d8abaf23c7c845934786c7c5037fb604" translate="yes" xml:space="preserve">
          <source>Avoid a ResourceWarning: unclosed socket.
[gforcada]</source>
          <target state="translated">避免资源警告:未关闭的套接字。[gforcada]</target>
        </trans-unit>
        <trans-unit id="a62eb39a47e5bc04be9049310d855e194d08e5c1" translate="yes" xml:space="preserve">
          <source>Both of these views require the permission</source>
          <target state="translated">这两种观点都需要得到许可</target>
        </trans-unit>
        <trans-unit id="93d71e19cac582da38a7c286808b5243b0974217" translate="yes" xml:space="preserve">
          <source>Breaking changes:</source>
          <target state="translated">突破性的变化。</target>
        </trans-unit>
        <trans-unit id="54d964bde3b45008273493e091d5fc828d1a6056" translate="yes" xml:space="preserve">
          <source>Bug fixes:</source>
          <target state="translated">错误修复。</target>
        </trans-unit>
        <trans-unit id="9db4050b116bcaf18ef4dfb25f822216f4571e4d" translate="yes" xml:space="preserve">
          <source>Cache purging support for Zope 2 applications</source>
          <target state="translated">支持Zope 2应用程序的缓存清除功能。</target>
        </trans-unit>
        <trans-unit id="a3c36d75d609a808f7ec443c179142a2bf9ec8dd" translate="yes" xml:space="preserve">
          <source>Cast wait_time to int before calling xrange. This fixes
&amp;ldquo;TypeError: integer argument expected, got float&amp;rdquo; error.
[vincentfretin]</source>
          <target state="translated">Cast wait_time to int before calling xrange. This fixes &amp;ldquo;TypeError: integer argument expected, got float&amp;rdquo; error. [vincentfretin]</target>
        </trans-unit>
        <trans-unit id="8808a74a4f8415fcf67bd7e6d3e950e4c0f1be07" translate="yes" xml:space="preserve">
          <source>Change the reconnect strategy for the purge thread to retry fewer times and
assume a permanent connection failure after one minute and stop the thread.
This allows the application process to shutdown cleanly without the purge
thread being stuck forever.
[hannosch]</source>
          <target state="translated">改变清除线程的重连策略,减少重试次数,并假设一分钟后连接永久失效,停止线程。这样可以让应用进程干净利落地关闭,而不会让清洗线程永远卡住。[hannosch]</target>
        </trans-unit>
        <trans-unit id="8cc26656e114bf9272f75269a82124c39b5f2dd9" translate="yes" xml:space="preserve">
          <source>Changed i18n_domain to &amp;ldquo;plone&amp;rdquo;.
[staeff]</source>
          <target state="translated">Changed i18n_domain to &amp;ldquo;plone&amp;rdquo;. [staeff]</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">变更日志</target>
        </trans-unit>
        <trans-unit id="a6d9dcd58ba1e17ff8328920daa0d48c28c1c04f" translate="yes" xml:space="preserve">
          <source>Check whether caching is enabled and configured. If not, it will do nothing.</source>
          <target state="translated">检查是否启用并配置了缓存。如果没有,它将什么也不做。</target>
        </trans-unit>
        <trans-unit id="15f2a18bd1e22e7e39f18e7c6a04ecdc52dfff8e" translate="yes" xml:space="preserve">
          <source>Check whether caching is enabled. This checks the</source>
          <target state="translated">检查是否启用了缓存。这将检查</target>
        </trans-unit>
        <trans-unit id="ad608e30cf279c6cd1e4735d46a4d814f026abaf" translate="yes" xml:space="preserve">
          <source>Code-Style: isort, utf8-headers, zca-decorators, manual cleanup.
[jensens]</source>
          <target state="translated">编码风格:isort,utf8-headers,zca-decorators,手动清理。[Jensens]</target>
        </trans-unit>
        <trans-unit id="060244d413473882403e73496f125fe43d774ad8" translate="yes" xml:space="preserve">
          <source>Configure the proxy and your application so that resources are cached in the
proxy.</source>
          <target state="translated">配置代理和你的应用程序,使资源在代理中被缓存。</target>
        </trans-unit>
        <trans-unit id="908d8743e7d3de70b99fef2387134ff3b186c45f" translate="yes" xml:space="preserve">
          <source>Convert the purge paths to URLs by combining them with the URLs of the
configured caching proxies.</source>
          <target state="translated">将清除路径与配置的缓存代理的URL相结合,将其转换为URL。</target>
        </trans-unit>
        <trans-unit id="a90d2dc9303f169182d42f60cfc4598ae4484dfc" translate="yes" xml:space="preserve">
          <source>Correct license and update distribution metadata.
[hannosch]</source>
          <target state="translated">纠正许可证和更新发布元数据。[hannosch]</target>
        </trans-unit>
        <trans-unit id="9a7d4e0687b14e2b7cda406900b802782cd50a62" translate="yes" xml:space="preserve">
          <source>Disable</source>
          <target state="translated">禁用</target>
        </trans-unit>
        <trans-unit id="f6e48789e0e11cc8d708cda30f3df9ae5989e724" translate="yes" xml:space="preserve">
          <source>Do not iterate on settings.cachingProxies when there are no.
[gotcha]</source>
          <target state="translated">当没有缓存时,不要迭代settings.cachingProxies。[疑难杂症]</target>
        </trans-unit>
        <trans-unit id="d3d7399ce249dbe5b7fa6697b7660db1f85b0d6e" translate="yes" xml:space="preserve">
          <source>Fix installation issues due to missing commas in setup.py
[esteele]</source>
          <target state="translated">修正安装问题,因为setup.py中缺少逗号[esteele]</target>
        </trans-unit>
        <trans-unit id="03b357d4447a8ae09b64a5fbb08416d214d8d554" translate="yes" xml:space="preserve">
          <source>Fix package requirements to pull in plone.app.testing as part of the [test]
extra.
[esteele]</source>
          <target state="translated">修正软件包需求,将plone.app.testing作为[test]extra的一部分。[esteele]</target>
        </trans-unit>
        <trans-unit id="0d75f651cde15b7ada8134b963abdbdb2ac1405a" translate="yes" xml:space="preserve">
          <source>Fix rewriting of paths in a virtual hosting environment, so that the path passed
to the rewriter is actually used instead of always the current request path.
[davisagli]</source>
          <target state="translated">修复虚拟主机环境下的路径重写,使传递给重写器的路径被实际使用,而不是总是当前请求路径。[davisagli]</target>
        </trans-unit>
        <trans-unit id="85fc7a9baf2b7f76d8424103d464503eb61905f1" translate="yes" xml:space="preserve">
          <source>Fixed purge paths for virtual hosting scenarios using virtual path components.
[dokai]</source>
          <target state="translated">修正了使用虚拟路径组件的虚拟主机场景的清理路径。[dokai]</target>
        </trans-unit>
        <trans-unit id="2a314ab54f6d2474286ca615ff9cb648e0ec3477" translate="yes" xml:space="preserve">
          <source>Fixed typo.
[ale-rt]</source>
          <target state="translated">修正了错别字。[ALE-RT]</target>
        </trans-unit>
        <trans-unit id="98bcf050cf3c78543d1d27cd06759e2d587c22e7" translate="yes" xml:space="preserve">
          <source>Fixes:</source>
          <target state="translated">修复。</target>
        </trans-unit>
        <trans-unit id="6e93a05e081e6e89746c78d85b71e05a8f2d5fb9" translate="yes" xml:space="preserve">
          <source>Get all paths to purge for the current context using the helper function</source>
          <target state="translated">使用辅助函数获取当前上下文要清除的所有路径。</target>
        </trans-unit>
        <trans-unit id="a41c2265407a40d4fcdcaacfa04475c9e54085d3" translate="yes" xml:space="preserve">
          <source>Here, the Zope server is running on</source>
          <target state="translated">这里,Zope服务器运行在</target>
        </trans-unit>
        <trans-unit id="09aa6af8b1975cf28fb395245fe7bb3bdb3e31a7" translate="yes" xml:space="preserve">
          <source>Here, we:</source>
          <target state="translated">在这里,我们。</target>
        </trans-unit>
        <trans-unit id="e55d8ddaa8b7b07e59380a642bbfc8a02239b869" translate="yes" xml:space="preserve">
          <source>IContentish</source>
          <target state="translated">IContish</target>
        </trans-unit>
        <trans-unit id="ef0c87050477f8c67a8622a1cee6e0808299286f" translate="yes" xml:space="preserve">
          <source>IMyContent</source>
          <target state="translated">IMyContent</target>
        </trans-unit>
        <trans-unit id="f5ed8dbabc26b7f5498877044e82c8641714103e" translate="yes" xml:space="preserve">
          <source>IObjectModifiedEvent</source>
          <target state="translated">IObjectModifiedEvent</target>
        </trans-unit>
        <trans-unit id="b70766478c2bc9274edb728ee4b38bf04e0ca6da" translate="yes" xml:space="preserve">
          <source>IObjectMovedEvent</source>
          <target state="translated">IObjectMovedEvent</target>
        </trans-unit>
        <trans-unit id="311cd0a8dd290da0d99e64529750da491ae3cede" translate="yes" xml:space="preserve">
          <source>IObjectRemovedEvent</source>
          <target state="translated">IObjectRemovedEvent</target>
        </trans-unit>
        <trans-unit id="63ca287fe75fec865bfc4167db63e1a0c9167a83" translate="yes" xml:space="preserve">
          <source>IPurgeEvent</source>
          <target state="translated">IPurgeEvent</target>
        </trans-unit>
        <trans-unit id="253b95423d5fd6a7a5737121cdbf6c560e7e052d" translate="yes" xml:space="preserve">
          <source>IPurgePathRewriter</source>
          <target state="translated">IPurgePathRewriter</target>
        </trans-unit>
        <trans-unit id="218a78f17aad26e6050303dff1240ad090d23d46" translate="yes" xml:space="preserve">
          <source>IPurgePaths</source>
          <target state="translated">IPurgePaths</target>
        </trans-unit>
        <trans-unit id="fd611a6cc44daab71b8545b4bc9b944498a45d69" translate="yes" xml:space="preserve">
          <source>IPurgeable</source>
          <target state="translated">IPurgeable</target>
        </trans-unit>
        <trans-unit id="57879789af8d297d35f8ac684d3ddd15de44cb03" translate="yes" xml:space="preserve">
          <source>IPurger</source>
          <target state="translated">IPurger</target>
        </trans-unit>
        <trans-unit id="213e1e5dc05e09d4f207819fca66b762f8a21b74" translate="yes" xml:space="preserve">
          <source>IRegistry</source>
          <target state="translated">IRegistry</target>
        </trans-unit>
        <trans-unit id="f85ff4c33abdde64f48cf2ab690433eb161111aa" translate="yes" xml:space="preserve">
          <source>If the parent is also of type</source>
          <target state="translated">如果父类型也是</target>
        </trans-unit>
        <trans-unit id="4e084dbe7f494d7f18e012edfe389b1ece24b02c" translate="yes" xml:space="preserve">
          <source>If you need more control, you can perform the purging directly. Here is a
snippet adapted from the</source>
          <target state="translated">如果你需要更多的控制,你可以直接进行清理。下面是一个改编自</target>
        </trans-unit>
        <trans-unit id="94f6bf8a9148326f8885844ae8c1eafa847babc2" translate="yes" xml:space="preserve">
          <source>If you perform URL rewriting in front of the caching proxy (scenario 1 above),
you need to configure two registry options, since there is no way for</source>
          <target state="translated">如果您在缓存代理前面执行URL重写(上述方案1),您需要配置两个注册表选项,因为没有办法让</target>
        </trans-unit>
        <trans-unit id="41fb10bf832524090b9ab05176d0ed5567a508f5" translate="yes" xml:space="preserve">
          <source>If you use</source>
          <target state="translated">如果您使用</target>
        </trans-unit>
        <trans-unit id="9049ebace3ebc7a27573d5da7fcbbf035ae846ef" translate="yes" xml:space="preserve">
          <source>Initial release
[optilude, newbery]</source>
          <target state="translated">初次发行[Optilude,Newbery]</target>
        </trans-unit>
        <trans-unit id="65ecab489e86e09951fa7933025c9974d90e1e33" translate="yes" xml:space="preserve">
          <source>Initiating a purge in code</source>
          <target state="translated">在代码中启动清洗</target>
        </trans-unit>
        <trans-unit id="e169f48ae4f691594708d679f4433901f36c5694" translate="yes" xml:space="preserve">
          <source>Install a &lt;a href=&quot;http://pypi.python.org/pypi/plone.registry&quot;&gt;plone.registry&lt;/a&gt;</source>
          <target state="translated">Install a &lt;a href=&quot;http://pypi.python.org/pypi/plone.registry&quot;&gt;plone.registry&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a06b7e693258278d1899aaa18cb11afdf983cfc3" translate="yes" xml:space="preserve">
          <source>Install it into your Zope instance. This normally means depending on it
via</source>
          <target state="translated">将它安装到您的Zope实例中。这通常意味着要通过</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">介紹</target>
        </trans-unit>
        <trans-unit id="ec0fef446d2af40ea93d7fc235e3165f59082bc0" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t matter if a particular object or URLs is queued more than once.
It will only be executed once.</source>
          <target state="translated">It doesn&amp;rsquo;t matter if a particular object or URLs is queued more than once. It will only be executed once.</target>
        </trans-unit>
        <trans-unit id="1effcfa09a42b721f59b5418b873151a0f1f3b90" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you wanted to always purge the URL</source>
          <target state="translated">Let&amp;rsquo;s say you wanted to always purge the URL</target>
        </trans-unit>
        <trans-unit id="fc178339258f3a54742438333da617a265bb23f0" translate="yes" xml:space="preserve">
          <source>Load its configuration by adding a ZCML line like the following (or a slug):</source>
          <target state="translated">通过添加像下面这样的ZCML行(或一个slug)来加载其配置。</target>
        </trans-unit>
        <trans-unit id="92995763c3dfadac1319802ae06417306512ca78" translate="yes" xml:space="preserve">
          <source>Look up paths to purge for the given object. This is done via zero or more</source>
          <target state="translated">为给定对象查找要清除的路径。这是通过零或多个</target>
        </trans-unit>
        <trans-unit id="cb1dee6325bd7f467e0e7887edd9678d7d83813d" translate="yes" xml:space="preserve">
          <source>Look up the registry and cache purging settings to find the list of
caching proxies.</source>
          <target state="translated">查找注册表和缓存清理设置,找到缓存代理的列表。</target>
        </trans-unit>
        <trans-unit id="856299db715850b86565d3f2cbbd1b3b6980e691" translate="yes" xml:space="preserve">
          <source>Make your application send purge notifications - see below.</source>
          <target state="translated">让您的应用程序发送清除通知--见下文。</target>
        </trans-unit>
        <trans-unit id="babe3050e2e81dfd87a8ce67264d518cb34aef72" translate="yes" xml:space="preserve">
          <source>Manager</source>
          <target state="translated">管理者</target>
        </trans-unit>
        <trans-unit id="c409d8714ffae5d66cb34a2df540a1907b03b383" translate="yes" xml:space="preserve">
          <source>Minor packaging updates. (#1)</source>
          <target state="translated">小幅更新包装。(#1)</target>
        </trans-unit>
        <trans-unit id="41b583705cba7111a711c3fad08e10026fe5dcdf" translate="yes" xml:space="preserve">
          <source>Most implementations will use</source>
          <target state="translated">大多数的实现将使用</target>
        </trans-unit>
        <trans-unit id="208a508aabbf19798034826f77ed481ec28e90cc" translate="yes" xml:space="preserve">
          <source>New features:</source>
          <target state="translated">新特点:</target>
        </trans-unit>
        <trans-unit id="7364fcecd202802e8c516b9677abcee961232816" translate="yes" xml:space="preserve">
          <source>Note that it is probably better to normalise your paths in the fronting
web server, so that Zope only ever sees a single external domain. If you
only have one domain, or if the</source>
          <target state="translated">需要注意的是,最好在前端的web服务器中规范化你的路径,这样Zope就只能看到一个单一的外部域名。如果你只有一个域,或者如果你的</target>
        </trans-unit>
        <trans-unit id="5f83def04cdba23aa4a4db37437233119a52b7ef" translate="yes" xml:space="preserve">
          <source>Notice how we are actually importing from</source>
          <target state="translated">请注意我们实际上是如何从</target>
        </trans-unit>
        <trans-unit id="8b70bfbe5214fe06becf94f0bc8db1204b0d91de" translate="yes" xml:space="preserve">
          <source>OFS.interfaces.ITraversable</source>
          <target state="translated">OFS.interface.ITraversable</target>
        </trans-unit>
        <trans-unit id="e96dcfb9bb1395a358d9757e5d88c180d20f7708" translate="yes" xml:space="preserve">
          <source>Obtain a full PURGE URL for each caching proxy, using the helper function</source>
          <target state="translated">使用辅助函数获取每个缓存代理的完整PURGE URL。</target>
        </trans-unit>
        <trans-unit id="918b235a1dc2dd96011ed6ddc558bff2d6fb1fd8" translate="yes" xml:space="preserve">
          <source>Obtain an</source>
          <target state="translated">获得</target>
        </trans-unit>
        <trans-unit id="62ac03a1230e5697321a09eeda6036a0039b3a13" translate="yes" xml:space="preserve">
          <source>One way to do this without changing the code of your content object is to do
this in ZCML, e.g. with:</source>
          <target state="translated">在不改变你的内容对象代码的情况下,一种方法是在ZCML中这样做,例如用。</target>
        </trans-unit>
        <trans-unit id="83534fbef4cc68dc49a90fdfddaf8b3679819f76" translate="yes" xml:space="preserve">
          <source>Only import ssl module when purging an https url, closes #12190.
[elro]</source>
          <target state="translated">只在清除https时导入ssl模块,关闭#12190。[elro]</target>
        </trans-unit>
        <trans-unit id="5bb2379e26814d40d01cbadb64d2e2c2ec63ed9d" translate="yes" xml:space="preserve">
          <source>PATH_INFO</source>
          <target state="translated">PATH_INFO</target>
        </trans-unit>
        <trans-unit id="4498b78021de86a375c761a0448fa5b5ed22ddc2" translate="yes" xml:space="preserve">
          <source>PURGE</source>
          <target state="translated">PURGE</target>
        </trans-unit>
        <trans-unit id="dee814504004be702e073fcba8742a5c9eabb316" translate="yes" xml:space="preserve">
          <source>Performs an immediate purge of the context, using code similar to that
shown above.</source>
          <target state="translated">使用类似于上图所示的代码,执行上下文的即时清除。</target>
        </trans-unit>
        <trans-unit id="668e4758d28f12383b48b47e1932ec3a3a6b6f7d" translate="yes" xml:space="preserve">
          <source>Presuming</source>
          <target state="translated">假设</target>
        </trans-unit>
        <trans-unit id="1eea3d5309d2a88c1e83cbfafba24489c41a09ad" translate="yes" xml:space="preserve">
          <source>Purge</source>
          <target state="translated">清理</target>
        </trans-unit>
        <trans-unit id="4db74d345b5afd47fd5443388f6bd39719cd0333" translate="yes" xml:space="preserve">
          <source>Purging an object manually</source>
          <target state="translated">手动清除对象</target>
        </trans-unit>
        <trans-unit id="82fdc766640232f81df37a0e9d5ac68c55e60116" translate="yes" xml:space="preserve">
          <source>Purging dependencies</source>
          <target state="translated">清除依赖性</target>
        </trans-unit>
        <trans-unit id="c476b18adbc6d8450741b799f053251e1b050aa3" translate="yes" xml:space="preserve">
          <source>Purging objects automatically</source>
          <target state="translated">自动清除对象</target>
        </trans-unit>
        <trans-unit id="b40dc63c0033c57164a71130cac7cab64b2b5d74" translate="yes" xml:space="preserve">
          <source>Purging works by sending the proxy server a</source>
          <target state="translated">清洗工作是通过向代理服务器发送一个</target>
        </trans-unit>
        <trans-unit id="9058f106fd14975ed1051f81c822dd486b7ca369" translate="yes" xml:space="preserve">
          <source>Queue these for purging.</source>
          <target state="translated">把这些东西排好,以便清理。</target>
        </trans-unit>
        <trans-unit id="c5425a77972ff1ad4ae057d30d3319ff9e221628" translate="yes" xml:space="preserve">
          <source>Queues the context for purging.</source>
          <target state="translated">排队清理的上下文。</target>
        </trans-unit>
        <trans-unit id="e82198de4f69d3224d8feb9b81fe22ebff376ac9" translate="yes" xml:space="preserve">
          <source>Quite commonly, you will want to purge objects in three scenarios:</source>
          <target state="translated">很常见,你会想在三种情况下清除对象。</target>
        </trans-unit>
        <trans-unit id="7e723717f749d16ef467ae94c77e5ebb0aa587ae" translate="yes" xml:space="preserve">
          <source>Register a</source>
          <target state="translated">注册一个</target>
        </trans-unit>
        <trans-unit id="4d50dcd9fb9197af66e784795e05a9fb7de50a19" translate="yes" xml:space="preserve">
          <source>Register an atexit handler to stop the purge thread on process shutdown.
[hannosch]</source>
          <target state="translated">注册一个atexit处理程序来停止进程关闭时的清理线程。[hannosch]</target>
        </trans-unit>
        <trans-unit id="159a0bfb1c6300cf844e2cdc8bcb5482fd6ec9f8" translate="yes" xml:space="preserve">
          <source>Release 1.0 Final.
[esteele]</source>
          <target state="translated">1.0版最终版。[esteele]</target>
        </trans-unit>
        <trans-unit id="baf0c24d102e50f8c10e140edf996dd97fa61c15" translate="yes" xml:space="preserve">
          <source>Remove five.globalrequest dependency.
It has been deprecated upstream (Zope 4).
[gforcada]</source>
          <target state="translated">删除 five.globalrequest 依赖关系。它在上游已经被废弃了(Zope 4)。[gforcada]</target>
        </trans-unit>
        <trans-unit id="026134f30526603b4bc28ba845a4f37e74e4b2ea" translate="yes" xml:space="preserve">
          <source>Replace deprecated test assert statements.
[timo]</source>
          <target state="translated">替换掉已经废弃的测试断言。[timo]</target>
        </trans-unit>
        <trans-unit id="74ba1b190a8ae7c0027715ceecb833a53b558bed" translate="yes" xml:space="preserve">
          <source>Send a synchronous caching request. This blocks until the caching proxy
has responded (or timed out).</source>
          <target state="translated">发送一个同步缓存请求。这将会阻塞,直到缓存代理响应(或超时)。</target>
        </trans-unit>
        <trans-unit id="01e4a229e373da7ebca01f16efa60f8383266331" translate="yes" xml:space="preserve">
          <source>Set default purger backlog size to 0 (infinity) in order to fully invalidate Varnish cache
[avoinea refs #11]</source>
          <target state="translated">将默认的purger backlog大小设置为0(无穷大),以使Varnish缓存完全无效[avoinea refs #11]。</target>
        </trans-unit>
        <trans-unit id="44e77c895abe8146060ccb01b11ad3dad989edd1" translate="yes" xml:space="preserve">
          <source>Set the registry option</source>
          <target state="translated">设置注册表选项</target>
        </trans-unit>
        <trans-unit id="91e913b64b6c78aead5526cc06210f4ad1c05bdb" translate="yes" xml:space="preserve">
          <source>Set this to</source>
          <target state="translated">设置为</target>
        </trans-unit>
        <trans-unit id="437f1898f8d8fdf383cc53a333e04a24587da8cf" translate="yes" xml:space="preserve">
          <source>Set this to a tuple of domains</source>
          <target state="translated">将其设置为域的元组。</target>
        </trans-unit>
        <trans-unit id="43fd65ce9f1ed99f52d526b81e3d64f42e2f3b47" translate="yes" xml:space="preserve">
          <source>Set up a caching proxy that supports PURGE requests, such as Varnish, Squid
or Enfold Proxy.</source>
          <target state="translated">设置一个支持PURGE请求的缓存代理,如Varnish、Squid或Enfold Proxy。</target>
        </trans-unit>
        <trans-unit id="3b74b1558ceadef34b143cc29550662ec734a8ac" translate="yes" xml:space="preserve">
          <source>So far so good. The challenge comes when you put a caching proxy into the mix.
There are two scenarios:</source>
          <target state="translated">到目前为止还不错。当你把一个缓存代理放入其中时,挑战就来了。有两种情况。</target>
        </trans-unit>
        <trans-unit id="2e71515d841f4889a299a3facff624a2d806e2cd" translate="yes" xml:space="preserve">
          <source>Sometimes, purging one object implies that other objects should be purged
as well. One way to do this is to register an event handler for the</source>
          <target state="translated">有时,清除一个对象意味着其他对象也应该被清除。一种方法是为对象的</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">目录</target>
        </trans-unit>
        <trans-unit id="0fb7c7aa2f4a81233efce26a209abf8cd2599dfd" translate="yes" xml:space="preserve">
          <source>Tests and Code are Python 3 compatible
[pbauer, ale-rt, jensens]</source>
          <target state="translated">测试和代码与Python 3兼容 [pbauer,ale-rt,jensens]。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">De</target>
        </trans-unit>
        <trans-unit id="1fd6d90fd9fcc78d7c8b7cf5d2b7cbcd12b9bae3" translate="yes" xml:space="preserve">
          <source>The caching proxy is &amp;ldquo;behind&amp;rdquo; whatever performs the URL rewrite. In this
case, the inbound URL (which the proxy may choose to cache, and which may
therefore need to be purged) contains the virtual hosting tokens.</source>
          <target state="translated">The caching proxy is &amp;ldquo;behind&amp;rdquo; whatever performs the URL rewrite. In this case, the inbound URL (which the proxy may choose to cache, and which may therefore need to be purged) contains the virtual hosting tokens.</target>
        </trans-unit>
        <trans-unit id="6f1874a0066db058a60b069a46a50468be239d49" translate="yes" xml:space="preserve">
          <source>The caching proxy is &amp;ldquo;in front of&amp;rdquo; whatever performs the URL rewrite, or
performs the rewrite before passing the request off to the Zope backend.
In this case, the inbound URL does not contain the virtual hosting tokens.</source>
          <target state="translated">The caching proxy is &amp;ldquo;in front of&amp;rdquo; whatever performs the URL rewrite, or performs the rewrite before passing the request off to the Zope backend. In this case, the inbound URL does not contain the virtual hosting tokens.</target>
        </trans-unit>
        <trans-unit id="f6c479fd68455282cbd8bc070580afe249c8fa50" translate="yes" xml:space="preserve">
          <source>The code above illustrates how to initiate asynchronous and synchronous
purges. If you simply want to do this through the web, you can invoke one
of the following views, registered for any type of context:</source>
          <target state="translated">上面的代码说明了如何启动异步和同步清除。如果您只是想通过网络来完成这项工作,您可以调用以下视图之一,为任何类型的上下文注册。</target>
        </trans-unit>
        <trans-unit id="34e0f100754881c5c637ccfd4b2a3c7b65b70a55" translate="yes" xml:space="preserve">
          <source>The default adapter thats simply returns</source>
          <target state="translated">默认的适配器,只需返回</target>
        </trans-unit>
        <trans-unit id="e291232100f5621c79e56795a0214605f90af4a1" translate="yes" xml:space="preserve">
          <source>The name is not significant, but should be unique unless it is intended to
override an existing adapter. By convention, you should prefix the name with
your package&amp;rsquo;s dotted name unless you have a reason not to.</source>
          <target state="translated">The name is not significant, but should be unique unless it is intended to override an existing adapter. By convention, you should prefix the name with your package&amp;rsquo;s dotted name unless you have a reason not to.</target>
        </trans-unit>
        <trans-unit id="3014477ea1a84df0c8069c829e217db5e66e7191" translate="yes" xml:space="preserve">
          <source>The queued URLs are retrieved from the request.</source>
          <target state="translated">从请求中检索排队的URL。</target>
        </trans-unit>
        <trans-unit id="a0155a4cd360462dcbc88ed23f43ee0d1a72f492" translate="yes" xml:space="preserve">
          <source>The simplest way to initiate a purge is to raise a</source>
          <target state="translated">启动清洗的最简单方法是提出一个</target>
        </trans-unit>
        <trans-unit id="495d37aa8979f80cbae7f6a1f0ebb2315f7bb794" translate="yes" xml:space="preserve">
          <source>The worker thread establishes a connection to the caching proxy and sends
a PURGE request.</source>
          <target state="translated">工作线程建立与缓存代理的连接,并发送一个PURGE请求。</target>
        </trans-unit>
        <trans-unit id="f907bd63a073b369f66f0e624e5d251e6df4d549" translate="yes" xml:space="preserve">
          <source>These are of course all described by standard Zope event types from the
&lt;a href=&quot;http://pypi.python.org/pypi/zope.lifecycleevent&quot;&gt;zope.lifecycleevent&lt;/a&gt; package. If the standard</source>
          <target state="translated">These are of course all described by standard Zope event types from the &lt;a href=&quot;http://pypi.python.org/pypi/zope.lifecycleevent&quot;&gt;zope.lifecycleevent&lt;/a&gt; package. If the standard</target>
        </trans-unit>
        <trans-unit id="010c7e25419018b7387010e01c24d63aa5c96eba" translate="yes" xml:space="preserve">
          <source>This adapter could be registered with a ZCML statement like:</source>
          <target state="translated">这个适配器可以用一个ZCML语句来注册,比如。</target>
        </trans-unit>
        <trans-unit id="b687a0b5fa145f3cf5e6cfb7035023bd7e74cc7b" translate="yes" xml:space="preserve">
          <source>This could be registered in ZCML like so:</source>
          <target state="translated">这在ZCML中可以这样注册。</target>
        </trans-unit>
        <trans-unit id="a823695591f403f3c3b63192e9c9b4a4a82d4c84" translate="yes" xml:space="preserve">
          <source>This is done using an</source>
          <target state="translated">这是用一个</target>
        </trans-unit>
        <trans-unit id="f7c89687c27ecbdd1bc4bd91f9159443cb5d9f5d" translate="yes" xml:space="preserve">
          <source>This is equivalent to registering an event handler for each of the events
above and doing</source>
          <target state="translated">这相当于为上面的每一个事件注册一个事件处理程序,然后执行</target>
        </trans-unit>
        <trans-unit id="ba456269c4e428a09c22dffd577512225a4580ef" translate="yes" xml:space="preserve">
          <source>This operation is relatively quick, and does not involve communication with
the caching proxy. At the end of the request, after the Zope transaction has
been closed (and presuming the transaction was successful - purging is by
default not performed for requests resulting in an error), the following will
take place:</source>
          <target state="translated">这个操作相对较快,并且不涉及与缓存代理的通信。在请求结束后,在Zope事务关闭后(假设事务成功--对于导致错误的请求,默认情况下不会进行清理),将发生以下操作。</target>
        </trans-unit>
        <trans-unit id="d91c9a3827597a6480150f7fca611264054537a7" translate="yes" xml:space="preserve">
          <source>This package is not tied to Plone. However, if you intend to use it with
Plone, you probably want to install &lt;a href=&quot;http://pypi.python.org/pypi/plone.app.caching&quot;&gt;plone.app.caching&lt;/a&gt;, which provides
Plone-specific configuration and a user interface in Plone&amp;rsquo;s control panel.</source>
          <target state="translated">This package is not tied to Plone. However, if you intend to use it with Plone, you probably want to install &lt;a href=&quot;http://pypi.python.org/pypi/plone.app.caching&quot;&gt;plone.app.caching&lt;/a&gt;, which provides Plone-specific configuration and a user interface in Plone&amp;rsquo;s control panel.</target>
        </trans-unit>
        <trans-unit id="5bcc7f5501ee0e65958098c07fc9133273f7cb11" translate="yes" xml:space="preserve">
          <source>To enable cache purging after installation, you must:</source>
          <target state="translated">要在安装后启用缓存清理功能,您必须。</target>
        </trans-unit>
        <trans-unit id="feba3187d19a0377c0b3cb09baceae61cd63585c" translate="yes" xml:space="preserve">
          <source>To use this package, you must do the following:</source>
          <target state="translated">要使用这个软件包,你必须做到以下几点。</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="f0225a6c97228ee581e96b29b349ed69bb8e7792" translate="yes" xml:space="preserve">
          <source>Try to avoid port collisions when running tests.
[gforcada]</source>
          <target state="translated">运行测试时尽量避免端口碰撞。[gforcada]</target>
        </trans-unit>
        <trans-unit id="1e17b260c5ee3c7a48faef1c7f4eb502cd2039ae" translate="yes" xml:space="preserve">
          <source>URL
scheme), and the virtual hosting root is</source>
          <target state="translated">URL方案),虚拟主机的根是</target>
        </trans-unit>
        <trans-unit id="12814815f6828209ed8ba469e2ff732277804bd1" translate="yes" xml:space="preserve">
          <source>Update socket connection code for the purge thread to use Python 2.6 support
for passing in a timeout to the create_connection call.
[hannosch]</source>
          <target state="translated">更新清洗线程的套接字连接代码,以使用 Python 2.6 支持为 create_connection 调用传递超时。[hannosch]</target>
        </trans-unit>
        <trans-unit id="903a1993aa18b56fb1f02de2300a55514c2eee0b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://docs.python-requests.org/&quot;&gt;requests&lt;/a&gt; library instead of handcrafting connection and requests on our own.
This avoids strange problems in real-world customers environments.
We do not need to reinvent the wheel here.
Requests always uses HTTP 1.1 and drops support for HTTP 1.0 only caches.
[jensens]</source>
          <target state="translated">Use &lt;a href=&quot;http://docs.python-requests.org/&quot;&gt;requests&lt;/a&gt; library instead of handcrafting connection and requests on our own. This avoids strange problems in real-world customers environments. We do not need to reinvent the wheel here. Requests always uses HTTP 1.1 and drops support for HTTP 1.0 only caches. [jensens]</target>
        </trans-unit>
        <trans-unit id="500d9f3b8932dad656f1b4a85c12532f19c40535" translate="yes" xml:space="preserve">
          <source>Use zope.interface decorator.
[gforcada]</source>
          <target state="translated">使用zope.interface decorator。[gforcada]</target>
        </trans-unit>
        <trans-unit id="bdaa7133471c4a33bf2ff537a5aafd21f4e79ca4" translate="yes" xml:space="preserve">
          <source>Virtual hosting and URL rewriting</source>
          <target state="translated">虚拟主机和URL重写</target>
        </trans-unit>
        <trans-unit id="cd09a643ab67b493feefbcd69a56994af1855519" translate="yes" xml:space="preserve">
          <source>When the object is modified</source>
          <target state="translated">当对象被修改时</target>
        </trans-unit>
        <trans-unit id="94d7b1e586fe3da17b5707377b9efeef683ab6d0" translate="yes" xml:space="preserve">
          <source>When the object is moved or renamed</source>
          <target state="translated">当对象被移动或重新命名时</target>
        </trans-unit>
        <trans-unit id="2b7d4b75e474583beddfad4cbec59a129b754c75" translate="yes" xml:space="preserve">
          <source>When the object is removed</source>
          <target state="translated">当对象被移除时</target>
        </trans-unit>
        <trans-unit id="a5a36b54deffc4a71cd5101ddfc8233da887fdee" translate="yes" xml:space="preserve">
          <source>Which URLs get purged?</source>
          <target state="translated">哪些URL会被清除?</target>
        </trans-unit>
        <trans-unit id="021a3d13827ae1c6e7f19d55d1799c5f07b2345b" translate="yes" xml:space="preserve">
          <source>Zope 2 uses &amp;ldquo;magic&amp;rdquo; URLs for virtual hosting. A common scenario is to set
the virtual host root to a Plone site object at the root of the Zope instance.
This is usually done through URL rewriting. The user sees a URL like</source>
          <target state="translated">Zope 2 uses &amp;ldquo;magic&amp;rdquo; URLs for virtual hosting. A common scenario is to set the virtual host root to a Plone site object at the root of the Zope instance. This is usually done through URL rewriting. The user sees a URL like</target>
        </trans-unit>
        <trans-unit id="681f973156897e5088c3125c31394e0ef9bbca8e" translate="yes" xml:space="preserve">
          <source>Zope sees these tokens in the URL and understands how to incorporate the
external domain and virtual host root into the results of methods like</source>
          <target state="translated">Zope在URL中看到了这些标记,并理解了如何将外部域名和虚拟主机根目录纳入到类似于</target>
        </trans-unit>
        <trans-unit id="50b92cbe022f3f6df7b6175fd6bfae7c9235712f" translate="yes" xml:space="preserve">
          <source>_vh_</source>
          <target state="translated">_vh_</target>
        </trans-unit>
        <trans-unit id="bd5c843068e21cfb6200dc872ad5a81fe5b06147" translate="yes" xml:space="preserve">
          <source>absolute_url()</source>
          <target state="translated">absolute_url()</target>
        </trans-unit>
        <trans-unit id="b2e0dcc00abe81f684928ad139d0d714b236023a" translate="yes" xml:space="preserve">
          <source>absolute_url_path()</source>
          <target state="translated">绝对url_path()</target>
        </trans-unit>
        <trans-unit id="1f3c411f97d80202920959d43b937a8db413f48c" translate="yes" xml:space="preserve">
          <source>adapter on the request. The
default implementation will deal with any valid VirtualHostMonster URL,
including setups using &amp;ldquo;inside-out&amp;rdquo; hosting (with</source>
          <target state="translated">adapter on the request. The default implementation will deal with any valid VirtualHostMonster URL, including setups using &amp;ldquo;inside-out&amp;rdquo; hosting (with</target>
        </trans-unit>
        <trans-unit id="a7b116240ef260a46402093421bd55ea5d6736a6" translate="yes" xml:space="preserve">
          <source>adapters need to be rewritten (in reverse, as it were) to include them.</source>
          <target state="translated">适配器需要重写(反过来说)以包含它们。</target>
        </trans-unit>
        <trans-unit id="51b8ce3aca72b49058989bbe868c053a809cce00" translate="yes" xml:space="preserve">
          <source>adapters. Any number
of such adapters may be registered.</source>
          <target state="translated">适配器。可注册任何数量的此类适配器。</target>
        </trans-unit>
        <trans-unit id="01493ac37f5731b9a093faafa2d340b82a91f2f9" translate="yes" xml:space="preserve">
          <source>adapters. See &amp;ldquo;Which URLs get purged?&amp;rdquo; below.</source>
          <target state="translated">adapters. See &amp;ldquo;Which URLs get purged?&amp;rdquo; below.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="9b4bbaea9274958bdc7bd3ff987a49da75f37730" translate="yes" xml:space="preserve">
          <source>cachingProxies</source>
          <target state="translated">cachingProxies</target>
        </trans-unit>
        <trans-unit id="c906c5994b79881b3025debb4727f979f9f93965" translate="yes" xml:space="preserve">
          <source>consider purging to be enabled when it&amp;rsquo;s enabled (even if no servers are listed)
[skurfer]</source>
          <target state="translated">consider purging to be enabled when it&amp;rsquo;s enabled (even if no servers are listed) [skurfer]</target>
        </trans-unit>
        <trans-unit id="f3ffa5e57c137163ae9746f093aa4a2f41fc0a6d" translate="yes" xml:space="preserve">
          <source>correctly be able to purge empty path(root of site). Previously, /
was always appended to url so one potential path of the resource
in varnish would never get purged&amp;ndash;sometimes the most important, the homepage.
[vangheem]</source>
          <target state="translated">correctly be able to purge empty path(root of site). Previously, / was always appended to url so one potential path of the resource in varnish would never get purged&amp;ndash;sometimes the most important, the homepage. [vangheem]</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">默认</target>
        </trans-unit>
        <trans-unit id="49443855a39b8f96994a60dded040d7f63bc7cee" translate="yes" xml:space="preserve">
          <source>documentation for details.</source>
          <target state="translated">详见文件。</target>
        </trans-unit>
        <trans-unit id="3ea3f9802accf8817bacd6f3df46a73b93ccddec" translate="yes" xml:space="preserve">
          <source>enabled</source>
          <target state="translated">启用</target>
        </trans-unit>
        <trans-unit id="ecb94b662f69a0b9cc444bf55a2c4974d8d777ec" translate="yes" xml:space="preserve">
          <source>event handler calculates the URLs to purge for the object being
passed via named</source>
          <target state="translated">事件处理程序为通过命名的对象计算要清除的URL。</target>
        </trans-unit>
        <trans-unit id="c021387fa7b378363732982e41b3c97e38c121cc" translate="yes" xml:space="preserve">
          <source>event type, and dispatch further purge events in response. For
example, here is some code to purge the parent of the purged object:</source>
          <target state="translated">事件类型,并派发进一步的清除事件作为响应。例如,下面是一些清除被清除对象的父对象的代码。</target>
        </trans-unit>
        <trans-unit id="743a8291361563e09d61f30072101a8a35523a83" translate="yes" xml:space="preserve">
          <source>event types are fired for
your context, you can mark it with the</source>
          <target state="translated">事件类型是为你的上下文触发的,你可以用</target>
        </trans-unit>
        <trans-unit id="f71e5bc11b5e6b310dfa9f0b454946c0073b9283" translate="yes" xml:space="preserve">
          <source>event:</source>
          <target state="translated">事件。</target>
        </trans-unit>
        <trans-unit id="af56f279491f93020ff30a38fea20561c6d22442" translate="yes" xml:space="preserve">
          <source>file of your package.</source>
          <target state="translated">包的文件。</target>
        </trans-unit>
        <trans-unit id="e3d4a68ba3559737e1b5398779b29fe55237aa70" translate="yes" xml:space="preserve">
          <source>for any
object providing</source>
          <target state="translated">为任何对象提供</target>
        </trans-unit>
        <trans-unit id="f23f26a4d25acc1bb0015b0438a948c4af515444" translate="yes" xml:space="preserve">
          <source>from CMF. A simple implementation may look
like this:</source>
          <target state="translated">来自CMF。一个简单的实现可能是这样的。</target>
        </trans-unit>
        <trans-unit id="6f2b2d1a071375607314f842a88890e802023614" translate="yes" xml:space="preserve">
          <source>function to stop all purge
threads. Also make the default purger available as a module global, so the
cleanup function can get to it after the ZCA has been torn down.
[hannosch]</source>
          <target state="translated">函数来停止所有清理线程。同时将默认的清理器作为一个模块全局,这样清理函数就可以在ZCA被拆掉后使用。[hannosch]</target>
        </trans-unit>
        <trans-unit id="bda6751b877330d42efde8088f9f0ac59cab63d0" translate="yes" xml:space="preserve">
          <source>getAbsolutePaths()</source>
          <target state="translated">getAbsolutePaths()</target>
        </trans-unit>
        <trans-unit id="264cc1067a234d9c4100973d78b9ffbf0f919ba4" translate="yes" xml:space="preserve">
          <source>getPathsToPurge()</source>
          <target state="translated">getPathsToPurge()</target>
        </trans-unit>
        <trans-unit id="269549ae29ae6234085f75087305759704d182d1" translate="yes" xml:space="preserve">
          <source>getRelativePaths()</source>
          <target state="translated">getRelativePaths()</target>
        </trans-unit>
        <trans-unit id="6ab5b304d21f882c138b6a7d708c457f2755c120" translate="yes" xml:space="preserve">
          <source>getURLsToPurge()</source>
          <target state="translated">getURLsToPurge()</target>
        </trans-unit>
        <trans-unit id="12ef45a19d3c5a724e53b3f21fe293de5f9888cb" translate="yes" xml:space="preserve">
          <source>here. That package
defines the event type and a few of the interfaces that</source>
          <target state="translated">这里。该包定义了事件类型和一些接口,这些接口包括</target>
        </trans-unit>
        <trans-unit id="77b5f8e343a90f6f597751021fb8b7a08fe83083" translate="yes" xml:space="preserve">
          <source>http</source>
          <target state="translated">http</target>
        </trans-unit>
        <trans-unit id="75ef66df30be124d54cb438b5ed04831b6028b50" translate="yes" xml:space="preserve">
          <source>in Plone, it will do all of this for you.</source>
          <target state="translated">在Plone中,它将为你做这一切。</target>
        </trans-unit>
        <trans-unit id="1c0ba55f1c793f131afebd2daa81d821995b74e2" translate="yes" xml:space="preserve">
          <source>in each one. That is, a</source>
          <target state="translated">在每一个。也就是说,一个</target>
        </trans-unit>
        <trans-unit id="2f39bf585644f4cb979f1182ddc9154dc97f3a89" translate="yes" xml:space="preserve">
          <source>in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d358da965c8d39cbba2bd00e4ea6cee460546243" translate="yes" xml:space="preserve">
          <source>including</source>
          <target state="translated">包括</target>
        </trans-unit>
        <trans-unit id="a7894fc4e63b76d9c3a8e85ab6f2d121a8b7fe77" translate="yes" xml:space="preserve">
          <source>install_requires</source>
          <target state="translated">install_requires</target>
        </trans-unit>
        <trans-unit id="a4cbc0630a98ccee02ef63a865554d750db72b2a" translate="yes" xml:space="preserve">
          <source>interface looks like this:</source>
          <target state="translated">界面是这样的。</target>
        </trans-unit>
        <trans-unit id="d7c96f54e2ada52eb86ffcdb04e4f2e4ce36481c" translate="yes" xml:space="preserve">
          <source>interface to
automatically purge the object.</source>
          <target state="translated">接口来自动清除对象。</target>
        </trans-unit>
        <trans-unit id="5255e100819691e64fa9b4a02162efc6ad2a7971" translate="yes" xml:space="preserve">
          <source>is called</source>
          <target state="translated">叫做</target>
        </trans-unit>
        <trans-unit id="6514d41656f8f8f71e2ad0713a340f3a9b1c0f99" translate="yes" xml:space="preserve">
          <source>is installed, firing the event above will:</source>
          <target state="translated">安装后,启动上述事件将。</target>
        </trans-unit>
        <trans-unit id="172147e6ec49b8eb3a62da1175538664e06229e8" translate="yes" xml:space="preserve">
          <source>is useful if you have a path that is not subject to
change no matter how Zope is configured. For example, you could use this if
your caching proxy supports &amp;ldquo;special&amp;rdquo; URLs to invoke a particular type of
purge. (Such behaviour can be implemented in Varnish using VCL, for example.)
This is &lt;em&gt;not&lt;/em&gt; subject to rewriting for virtual hosting.</source>
          <target state="translated">is useful if you have a path that is not subject to change no matter how Zope is configured. For example, you could use this if your caching proxy supports &amp;ldquo;special&amp;rdquo; URLs to invoke a particular type of purge. (Such behaviour can be implemented in Varnish using VCL, for example.) This is &lt;em&gt;not&lt;/em&gt; subject to rewriting for virtual hosting.</target>
        </trans-unit>
        <trans-unit id="096fcc4ae359bab64e29b9780938a66b5a361ecd" translate="yes" xml:space="preserve">
          <source>local utility and create records
for the interface</source>
          <target state="translated">本地实用程序并为接口创建记录</target>
        </trans-unit>
        <trans-unit id="7ab2b2bb1af098db02f0f5de052fc448e8b98056" translate="yes" xml:space="preserve">
          <source>method
returns). This is subject to rewriting for virtual hosting (see below).</source>
          <target state="translated">方法返回)。)对于虚拟主机来说,这需要重写(见下文)。</target>
        </trans-unit>
        <trans-unit id="f244c9cbe80da3544681b9918eafabc72dcd4d86" translate="yes" xml:space="preserve">
          <source>notify(Purge(object))</source>
          <target state="translated">notify(Purge(object))</target>
        </trans-unit>
        <trans-unit id="d2263e6a77aa654ea8937e310e4e58af7cbbc1cc" translate="yes" xml:space="preserve">
          <source>of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944f504de23d8552e4afb739bc2b6c1564387ece" translate="yes" xml:space="preserve">
          <source>only.
This is a safer dependency, as it in turn depends only on a small set of
core Zope Toolkit packages.</source>
          <target state="translated">只。这是一个更安全的依赖,因为它反过来只依赖于一小部分Zope Toolkit核心包。</target>
        </trans-unit>
        <trans-unit id="defdda50c314571a4a001c861d9bc387e6ec4269" translate="yes" xml:space="preserve">
          <source>option is false, you do
not need to set this option.</source>
          <target state="translated">选项为false,则无需设置此选项。</target>
        </trans-unit>
        <trans-unit id="dab5f6158eac874293408307519c9a8963880249" translate="yes" xml:space="preserve">
          <source>package provides cache purging for Zope 2 applications.
It is inspired by (and borrows some code from) &lt;a href=&quot;http://pypi.python.org/pypi/Products.CMFSquidTool&quot;&gt;Products.CMFSquidTool&lt;/a&gt;, but it
is not tied to Squid. In fact, it is tested mainly with &lt;a href=&quot;http://varnish-cache.org&quot;&gt;Varnish&lt;/a&gt;, though it
should also work with &lt;a href=&quot;http://squid-cache.org&quot;&gt;Squid&lt;/a&gt; and &lt;a href=&quot;http://enfoldsystems.com/software/proxy/&quot;&gt;Enfold Proxy&lt;/a&gt;.</source>
          <target state="translated">package provides cache purging for Zope 2 applications. It is inspired by (and borrows some code from) &lt;a href=&quot;http://pypi.python.org/pypi/Products.CMFSquidTool&quot;&gt;Products.CMFSquidTool&lt;/a&gt;, but it is not tied to Squid. In fact, it is tested mainly with &lt;a href=&quot;http://varnish-cache.org&quot;&gt;Varnish&lt;/a&gt;, though it should also work with &lt;a href=&quot;http://squid-cache.org&quot;&gt;Squid&lt;/a&gt; and &lt;a href=&quot;http://enfoldsystems.com/software/proxy/&quot;&gt;Enfold Proxy&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8246e05638945cc0272429e795428cf62d0c94e6" translate="yes" xml:space="preserve">
          <source>part is normally not shown
by web browsers, since that is the default protocol for the</source>
          <target state="translated">部分通常不会被网络浏览器显示出来,因为这是默认协议的</target>
        </trans-unit>
        <trans-unit id="c26b42e2911aad627eaacfd79fae6a30e72f1945" translate="yes" xml:space="preserve">
          <source>plone.app.caching</source>
          <target state="translated">plone.app.caching</target>
        </trans-unit>
        <trans-unit id="d1c6f3d346d5328862a1ee9265d507d58b4e751f" translate="yes" xml:space="preserve">
          <source>plone.cachepurging</source>
          <target state="translated">plone.cachepurging</target>
        </trans-unit>
        <trans-unit id="3347e8d4224a1dae492711ae1c65955f9b828fb3" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.InitiatePurge</source>
          <target state="translated">plone.cachepurging.InitiatePurge.</target>
        </trans-unit>
        <trans-unit id="ffb98ff503d63342880238c2ca08c15374b0d0e7" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.interfaces.ICachePurgingSettings</source>
          <target state="translated">plone.cachepurging.interface.ICachePurgingSettings</target>
        </trans-unit>
        <trans-unit id="60aa75ba1949fea766a5b41abb66896f594760bd" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.interfaces.ICachePurgingSettings.cachingProxies</source>
          <target state="translated">plone.cachepurging.interface.ICachePurgingSettings.cachingProxies等。</target>
        </trans-unit>
        <trans-unit id="b0feaba9edf2a04faf4571dbb06ea339f930f7d9" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.interfaces.ICachePurgingSettings.domains</source>
          <target state="translated">plone.cachepurging.interface.ICachePurgingSettings.domains。</target>
        </trans-unit>
        <trans-unit id="d6a6be0253a1f9b08c665f8079a8dd6a2c16e138" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.interfaces.ICachePurgingSettings.enabled</source>
          <target state="translated">plone.cachepurging.interface.ICachePurgingSettings.enabled。</target>
        </trans-unit>
        <trans-unit id="0bd4e32bd69b58f3e4b6c73c025f0ffdf5b1f457" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.interfaces.ICachePurgingSettings.virtualHosting</source>
          <target state="translated">plone.cachepurging.interface.ICachePurgingSettings.virtualHosting。</target>
        </trans-unit>
        <trans-unit id="3ada6731c2081bb705ce9b7a347ba1d69966d9ed" translate="yes" xml:space="preserve">
          <source>plone.cachepurging.purge</source>
          <target state="translated">plone.cachepurging.purge(缓存清理)</target>
        </trans-unit>
        <trans-unit id="048ef40f3819c8490cc8f0a7ebd1faada08d5486" translate="yes" xml:space="preserve">
          <source>plone.registry</source>
          <target state="translated">plone.registry</target>
        </trans-unit>
        <trans-unit id="39c8fb9ef8b620ee280c0ad9a0507ea4af53b82c" translate="yes" xml:space="preserve">
          <source>ports (e.g.</source>
          <target state="translated">端口</target>
        </trans-unit>
        <trans-unit id="7604ab45eabfbb57ad32595096e3e4341ebf64d4" translate="yes" xml:space="preserve">
          <source>properties in the registry.</source>
          <target state="translated">注册表中的属性。</target>
        </trans-unit>
        <trans-unit id="a2378edb11865eafaaf5a65a705296c51086b979" translate="yes" xml:space="preserve">
          <source>purge queue is full</source>
          <target state="translated">清理队已满</target>
        </trans-unit>
        <trans-unit id="9b3d13df5e3a8e5d0bfcef75cab65382977a0409" translate="yes" xml:space="preserve">
          <source>request
variable), the paths returned by</source>
          <target state="translated">请求变量),由</target>
        </trans-unit>
        <trans-unit id="57f3c2982549cca39260e1922d12e2992cbe4318" translate="yes" xml:space="preserve">
          <source>request with the same
path as that of a cached resource. Thus, in scenario 1, that URL needs to
contain the virtual hosting tokens. Since these are not part of any URL
generated by Zope (though they are retained in the</source>
          <target state="translated">请求的路径与缓存资源的路径相同。因此,在场景1中,该URL需要包含虚拟主机令牌。因为这些不是Zope生成的任何URL的一部分(尽管它们被保留在</target>
        </trans-unit>
        <trans-unit id="bef415574c6b06122e3957c35f8e5ed0d79b1c95" translate="yes" xml:space="preserve">
          <source>role only.</source>
          <target state="translated">只起作用。</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="08f5afa0193c43a9091507be20f323f7d5d445a4" translate="yes" xml:space="preserve">
          <source>ships with one, for</source>
          <target state="translated">船上有一个,用于</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">にとって</target>
        </trans-unit>
        <trans-unit id="ef5405cc7f75055d4dfc8daf628a464b56fe6255" translate="yes" xml:space="preserve">
          <source>to incorporate virtual hosting tokens in the
PURGE paths. This is applicable in scenario 1 above.</source>
          <target state="translated">以将虚拟主机令牌纳入PURGE路径中。这适用于上述场景1。</target>
        </trans-unit>
        <trans-unit id="82a08f03a562be4a29f47b8c8fe62d1b0c21fc98" translate="yes" xml:space="preserve">
          <source>to know how the web and/or proxy cache server(s) in
front of Zope are configured:</source>
          <target state="translated">了解Zope前面的网页和/或代理缓存服务器是如何配置的。</target>
        </trans-unit>
        <trans-unit id="ab3a7ef4222d6eb7971d87d648d7e629405693cf" translate="yes" xml:space="preserve">
          <source>to return a path relative
to the virtual hosting root (i.e. what the</source>
          <target state="translated">返回一个相对于虚拟主机根目录的路径(即</target>
        </trans-unit>
        <trans-unit id="53830a339ac4234d6c978cce61e708fdba68a6d1" translate="yes" xml:space="preserve">
          <source>type path
segments), although you can write your own adapter if you have truly unique
needs.</source>
          <target state="translated">类型的路径段),不过如果你有真正独特的需求,你可以编写自己的适配器。</target>
        </trans-unit>
        <trans-unit id="38166ceea7ab470b7a2897f356da1419ca4739aa" translate="yes" xml:space="preserve">
          <source>uses. In most cases, you should be able to define how your own packages&amp;rsquo;
behave in relation to a caching proxy by depending on</source>
          <target state="translated">uses. In most cases, you should be able to define how your own packages&amp;rsquo; behave in relation to a caching proxy by depending on</target>
        </trans-unit>
        <trans-unit id="983e652021dc1ebd6627c36b75c762bde8164089" translate="yes" xml:space="preserve">
          <source>utility. This has three main methods:</source>
          <target state="translated">功用。这主要有三种方法。</target>
        </trans-unit>
        <trans-unit id="a2ec6ef68928ab93ecdd0984fb8d48adf6e62034" translate="yes" xml:space="preserve">
          <source>view:</source>
          <target state="translated">观点:</target>
        </trans-unit>
        <trans-unit id="f5df9a3cfe8939b80504eb1d5a18858a217ecb7c" translate="yes" xml:space="preserve">
          <source>virtualHosting</source>
          <target state="translated">虚拟主机</target>
        </trans-unit>
        <trans-unit id="b4993da023bb6cf4528cc249a4a1168cbc4c7731" translate="yes" xml:space="preserve">
          <source>vs.</source>
          <target state="translated">vs.</target>
        </trans-unit>
        <trans-unit id="ef9afce205913ed83f9a80d593ed18daeb283bcc" translate="yes" xml:space="preserve">
          <source>warning in debug mode, where it spammed the
console.
[hannosch]</source>
          <target state="translated">在调试模式下发出警告,在那里它破坏了控制台。[hannosch]</target>
        </trans-unit>
        <trans-unit id="74d6253084a448995795fe4a17a872143c01fd88" translate="yes" xml:space="preserve">
          <source>will be raised in a handler for the
lifecycle events, which in turn will cause purging to take place.</source>
          <target state="translated">将会在生命周期事件的处理程序中被提出,进而导致清理的发生。</target>
        </trans-unit>
        <trans-unit id="8474b5d26789f1e97157bf815d237400cad80095" translate="yes" xml:space="preserve">
          <source>works with Zope 2.12 and later. If you want to use it
with Zope 2.10, you may be able to do so by installing
&lt;a href=&quot;http://pypi.python.org/pypi/ZPublisherEventsBackport&quot;&gt;ZPublisherEventsBackport&lt;/a&gt;, although this is not a tested configuration.</source>
          <target state="translated">works with Zope 2.12 and later. If you want to use it with Zope 2.10, you may be able to do so by installing &lt;a href=&quot;http://pypi.python.org/pypi/ZPublisherEventsBackport&quot;&gt;ZPublisherEventsBackport&lt;/a&gt;, although this is not a tested configuration.</target>
        </trans-unit>
        <trans-unit id="ddaf8c73ac865db64c84e55c388f604182ec86e3" translate="yes" xml:space="preserve">
          <source>z3c.caching</source>
          <target state="translated">z3c.缓存</target>
        </trans-unit>
        <trans-unit id="73294b1374f7b458c6b0bf6c923e3a80bc3e539d" translate="yes" xml:space="preserve">
          <source>z3c.caching.interfaces.IPurgeEvent</source>
          <target state="translated">z3c.缓存.接口.IPurgeEvent</target>
        </trans-unit>
        <trans-unit id="bb98be0f885c924828192f7ced83a6691f4c3eb8" translate="yes" xml:space="preserve">
          <source>z3c.caching.interfaces.IPurgePaths</source>
          <target state="translated">z3c.caching.interface.IPurgePaths。</target>
        </trans-unit>
        <trans-unit id="dc4dcf1eb714c92d2742afdebf5f169c46614d81" translate="yes" xml:space="preserve">
          <source>zope.testing.cleanup.addCleanUp</source>
          <target state="translated">zope.testing.cleanup.addCleanUp等。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
