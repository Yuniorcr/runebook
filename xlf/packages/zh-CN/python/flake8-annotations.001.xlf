<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/flake8-annotations/">
    <body>
      <group id="flake8-annotations">
        <trans-unit id="61f6bfc06f4a1b6af978d1b611104a99c538169c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--allow-untyped-defs&lt;/code&gt;: &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--allow-untyped-defs&lt;/code&gt; ： &lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18bb5979452051871502739a3510da97828844f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--mypy-init-return&lt;/code&gt;: &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--mypy-init-return&lt;/code&gt; ： &lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec9ac10c13306ee20bd8f3eea88510fea5d0b6fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--suppress-dummy-args&lt;/code&gt;: &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--suppress-dummy-args&lt;/code&gt; ： &lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b79ccfd540d22826fa8b33b17a49b204daf8bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--suppress-none-returning&lt;/code&gt;: &lt;code&gt;bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--suppress-none-returning&lt;/code&gt; ： &lt;code&gt;bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c636cd741844911d854dece36453b16b1eafb120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flake8-annotations&lt;/code&gt; is a plugin for &lt;a href=&quot;http://flake8.pycqa.org/en/latest/&quot;&gt;Flake8&lt;/a&gt; that detects the absence of &lt;a href=&quot;https://www.python.org/dev/peps/pep-3107/&quot;&gt;PEP 3107-style&lt;/a&gt; function annotations and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484/#type-comments&quot;&gt;PEP 484-style&lt;/a&gt; type comments  (see: &lt;a href=&quot;#Caveats-for-PEP-484-style-Type-Comments&quot;&gt;Caveats&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;flake8-annotations&lt;/code&gt; 为插件&lt;a href=&quot;http://flake8.pycqa.org/en/latest/&quot;&gt;Flake8&lt;/a&gt;检测没有&lt;a href=&quot;https://www.python.org/dev/peps/pep-3107/&quot;&gt;PEP 3107风格&lt;/a&gt;功能注释和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484/#type-comments&quot;&gt;PEP 484风格&lt;/a&gt;类型评论（见：&lt;a href=&quot;#Caveats-for-PEP-484-style-Type-Comments&quot;&gt;注意事项&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2f1d2336a84d27952b371d3f3b29b28b7cbf6b38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If present, function type comments will override any argument type comments.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果存在，函数类型注释将覆盖任何参数类型注释。</target>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;笔记：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4de6fe94617db7a11c574851be1615fe50a7b517" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; suite is provided, with coverage reporting from &lt;a href=&quot;https://github.com/pytest-dev/pytest-cov&quot;&gt;pytest-cov&lt;/a&gt;. A &lt;a href=&quot;https://github.com/tox-dev/tox/&quot;&gt;tox&lt;/a&gt; configuration is provided to test across all supported versions of Python. Testing will be skipped for Python versions that cannot be found.</source>
          <target state="translated">提供了&lt;a href=&quot;https://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;套件，其报告来自&lt;a href=&quot;https://github.com/pytest-dev/pytest-cov&quot;&gt;pytest-cov&lt;/a&gt;。提供了一个&lt;a href=&quot;https://github.com/tox-dev/tox/&quot;&gt;tox&lt;/a&gt;配置来测试所有受支持的Python版本。对于找不到的Python版本，将跳过测试。</target>
        </trans-unit>
        <trans-unit id="5cc2b1db066ad0f2e273fb5a15782b6c98bfc9f9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://pre-commit.com&quot;&gt;pre-commit&lt;/a&gt; configuration is also provided to create a pre-commit hook so linting errors aren't committed:</source>
          <target state="translated">一个&lt;a href=&quot;https://pre-commit.com&quot;&gt;预提交&lt;/a&gt;还提供配置来创建一个pre-commit钩子所以掉毛的错误都不敢承诺：</target>
        </trans-unit>
        <trans-unit id="f3cc9fb7d478b7ba2605810f80b1a6276737e1cb" translate="yes" xml:space="preserve">
          <source>All warnings are enabled by default.</source>
          <target state="translated">所有的警告都是默认启用的。</target>
        </trans-unit>
        <trans-unit id="5938d85396d08175a211b921e911badde0a0f205" translate="yes" xml:space="preserve">
          <source>Allow omission of a return type hint for &lt;code&gt;__init__&lt;/code&gt; if at least one argument is annotated. See &lt;a href=&quot;https://mypy.readthedocs.io/en/stable/class_basics.html?#annotating-init-methods&quot;&gt;mypy's documentation&lt;/a&gt; for additional details.</source>
          <target state="translated">如果至少注释了一个参数，则允许省略 &lt;code&gt;__init__&lt;/code&gt; 的返回类型提示。有关更多详细信息，请参见&lt;a href=&quot;https://mypy.readthedocs.io/en/stable/class_basics.html?#annotating-init-methods&quot;&gt;mypy的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e40e172c7c4d81381d01bc7278c33987bd10dd1" translate="yes" xml:space="preserve">
          <source>Caveats for PEP 484-style Type Comments</source>
          <target state="translated">PEP 484式类型注释的注意事项</target>
        </trans-unit>
        <trans-unit id="b8577c99aaca7f628cb921ee68fce4bf962909c4" translate="yes" xml:space="preserve">
          <source>Configuration Options</source>
          <target state="translated">配置选项</target>
        </trans-unit>
        <trans-unit id="b0a43b58083dfe42e9e11a817fc8c1c4102b2a21" translate="yes" xml:space="preserve">
          <source>Contain no &lt;code&gt;return&lt;/code&gt; statement, or</source>
          <target state="translated">不包含 &lt;code&gt;return&lt;/code&gt; 语句，或者</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">贡献</target>
        </trans-unit>
        <trans-unit id="25a9084be6987615bf532ff3db85aaec6121b192" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>
        </trans-unit>
        <trans-unit id="95fb4055e77a71d776ce3c5ef98d14e9e5913c8a" translate="yes" xml:space="preserve">
          <source>Details on missing coverage, including in the test suite, is provided in the report to allow the user to generate additional tests for full coverage.</source>
          <target state="translated">报告中提供了关于缺失覆盖率的细节,包括测试套件中的细节,以允许用户为全面覆盖率生成额外的测试。</target>
        </trans-unit>
        <trans-unit id="33b718e3426ebb543a11c3c5fcd59853368c8fdd" translate="yes" xml:space="preserve">
          <source>Development Environment</source>
          <target state="translated">发展环境</target>
        </trans-unit>
        <trans-unit id="26de69c325de537de9eecfd8ff6126a529b0487a" translate="yes" xml:space="preserve">
          <source>Ellipses are ignored by &lt;code&gt;flake8-annotations&lt;/code&gt; parser.</source>
          <target state="translated">&lt;code&gt;flake8-annotations&lt;/code&gt; 解析器将忽略椭圆。</target>
        </trans-unit>
        <trans-unit id="bbbca074f319c17ddca0515337d6cb877ddb62e3" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;return&lt;/code&gt; statement(s) all return &lt;code&gt;None&lt;/code&gt; (explicitly or implicitly).</source>
          <target state="translated">显式 &lt;code&gt;return&lt;/code&gt; 语句均返回 &lt;code&gt;None&lt;/code&gt; （显式或隐式）。</target>
        </trans-unit>
        <trans-unit id="da35b390d985c7d8bfdf43a802cfcdca12d4bd59" translate="yes" xml:space="preserve">
          <source>Flake8 Type Annotation Checks</source>
          <target state="translated">Flake8类型注释检查</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="3ef29f168e90e0c6c84580c9e9b191dabd5ab754" translate="yes" xml:space="preserve">
          <source>Function Annotations</source>
          <target state="translated">功能注释</target>
        </trans-unit>
        <trans-unit id="2d39413c16ae79eaa1bdd63584658ba2ebf8cc3c" translate="yes" xml:space="preserve">
          <source>Function type comments</source>
          <target state="translated">功能类型注释</target>
        </trans-unit>
        <trans-unit id="98db2202e70e200a54d6de0e1d5952fafdefd53d" translate="yes" xml:space="preserve">
          <source>Function type comments are assumed to contain both argument and return type hints</source>
          <target state="translated">函数类型注释被认为包含参数和返回类型提示</target>
        </trans-unit>
        <trans-unit id="89f89c02cf47e091e726a4e07b88af0966806897" translate="yes" xml:space="preserve">
          <source>ID</source>
          <target state="translated">身份证</target>
        </trans-unit>
        <trans-unit id="c24ffb5a7fa0084a0c36a00ec0a3f4e5056f037b" translate="yes" xml:space="preserve">
          <source>Install from PyPi with your favorite &lt;code&gt;pip&lt;/code&gt; invocation:</source>
          <target state="translated">通过您最喜欢的 &lt;code&gt;pip&lt;/code&gt; 调用从PyPi安装：</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="bb283c524ec05bdd1ce12978febbc01b47f5b9a0" translate="yes" xml:space="preserve">
          <source>It will then be run automatically as part of Flake8.</source>
          <target state="translated">然后它将作为Flake8的一部分自动运行。</target>
        </trans-unit>
        <trans-unit id="3a2eb61742dbcaf056c8f28ebb1f13370a3202ed" translate="yes" xml:space="preserve">
          <source>Method Annotations</source>
          <target state="translated">方法注释</target>
        </trans-unit>
        <trans-unit id="d9beabe89fda21833829c35945073a7fb42c1e6a" translate="yes" xml:space="preserve">
          <source>Missing return type annotation for classmethod</source>
          <target state="translated">缺少类方法的返回类型注解。</target>
        </trans-unit>
        <trans-unit id="72092406a0f714646649781898462704f8c21393" translate="yes" xml:space="preserve">
          <source>Missing return type annotation for protected function</source>
          <target state="translated">保护函数的返回类型注释缺失</target>
        </trans-unit>
        <trans-unit id="5a44ad3c5b0e95e6c4b3d461cc5aa8be001c9872" translate="yes" xml:space="preserve">
          <source>Missing return type annotation for public function</source>
          <target state="translated">公共函数的返回类型注释缺失</target>
        </trans-unit>
        <trans-unit id="3fcd75b4be5b81c89d38d819c9194a9de1631947" translate="yes" xml:space="preserve">
          <source>Missing return type annotation for secret function</source>
          <target state="translated">秘密函数的返回类型注释缺失</target>
        </trans-unit>
        <trans-unit id="5013d640e3f9e8c636888b91ccad038cdf324532" translate="yes" xml:space="preserve">
          <source>Missing return type annotation for special method</source>
          <target state="translated">缺少特殊方法的返回类型注解</target>
        </trans-unit>
        <trans-unit id="4124d01fcf2c04404d03ae0f54aba800d00e50e5" translate="yes" xml:space="preserve">
          <source>Missing return type annotation for staticmethod</source>
          <target state="translated">staticmethod缺少返回类型注解。</target>
        </trans-unit>
        <trans-unit id="af56e71d3910fff9e5b261cfb890903031f984f5" translate="yes" xml:space="preserve">
          <source>Missing type annotation for &lt;code&gt;**kwargs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;**kwargs&lt;/code&gt; 缺少类型注释</target>
        </trans-unit>
        <trans-unit id="39aa8796c1cb3aaeed180b9afab14a31cb8bf109" translate="yes" xml:space="preserve">
          <source>Missing type annotation for &lt;code&gt;*args&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*args&lt;/code&gt; 的类型注释缺失</target>
        </trans-unit>
        <trans-unit id="69f6ca6e4161126c5c836075a1153c8cc335d43a" translate="yes" xml:space="preserve">
          <source>Missing type annotation for &lt;code&gt;cls&lt;/code&gt; in classmethod&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">类别方法&lt;sup&gt;1中的&lt;/sup&gt; &lt;code&gt;cls&lt;/code&gt; 缺少类型注释&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3a3a9606aa208855bb4f1fc1a15480de08eada79" translate="yes" xml:space="preserve">
          <source>Missing type annotation for &lt;code&gt;self&lt;/code&gt; in method&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">方法&lt;sup&gt;1中&lt;/sup&gt;缺少针对 &lt;code&gt;self&lt;/code&gt; 类型注释&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a91929ea69cb435ea9800436b9ca1d3a4b602f5b" translate="yes" xml:space="preserve">
          <source>Missing type annotation for function argument</source>
          <target state="translated">缺少函数参数的类型注释</target>
        </trans-unit>
        <trans-unit id="fb1938b97cf23fd544c98501450298ccdd352162" translate="yes" xml:space="preserve">
          <source>Mixing argument type comments and function type comments</source>
          <target state="translated">混合参数类型注释和函数类型注释</target>
        </trans-unit>
        <trans-unit id="83a6fe3ce4cd43dbfab32715d53afa8215dccc5c" translate="yes" xml:space="preserve">
          <source>No:</source>
          <target state="translated">不知道</target>
        </trans-unit>
        <trans-unit id="c75ea5f8be0a91e821e8dad49b2180cac2397a97" translate="yes" xml:space="preserve">
          <source>Note: An editable installation of &lt;code&gt;flake8-annotations&lt;/code&gt; in the developer environment is required in order for the plugin to be registered for Flake8. By default, Poetry includes an editable install of the project itself when &lt;code&gt;poetry install&lt;/code&gt; is invoked.</source>
          <target state="translated">注意：为了在Flake8中注册插件，需要在开发人员环境中可编辑地安装 &lt;code&gt;flake8-annotations&lt;/code&gt; 。默认情况下，在调用 &lt;code&gt;poetry install&lt;/code&gt; 时，诗歌会包含项目本身的可编辑安装。</target>
        </trans-unit>
        <trans-unit id="a33109bac0aac3e6199fa45ff80a467d270c32fc" translate="yes" xml:space="preserve">
          <source>PEP 484 disallows both type annotations and type comments</source>
          <target state="translated">PEP 484不允许类型注释和类型注释。</target>
        </trans-unit>
        <trans-unit id="a85836269f41d231524f3283fecd55f4f8e0bcfd" translate="yes" xml:space="preserve">
          <source>Partial type comments</source>
          <target state="translated">部分类型评论</target>
        </trans-unit>
        <trans-unit id="a1e029327a71a38cb29682eea473beb1b4254ef9" translate="yes" xml:space="preserve">
          <source>Partially type hinted functions are supported</source>
          <target state="translated">支持部分类型提示函数</target>
        </trans-unit>
        <trans-unit id="f0b19e2e0b55cc4b4a96722bc75cb4028704b90a" translate="yes" xml:space="preserve">
          <source>Please take some time to read through our &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; before helping us with this project.</source>
          <target state="translated">在帮助我们进行此项目之前，请花一些时间通读我们的&lt;a href=&quot;CONTRIBUTING.md&quot;&gt;贡献准则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d96d7d271e744d3d7874d093d98543cbb8c897fc" translate="yes" xml:space="preserve">
          <source>Python cannot parse the latter and will raise &lt;code&gt;SyntaxError: unexpected EOF while parsing&lt;/code&gt;</source>
          <target state="translated">Python无法解析后者，并且会 &lt;code&gt;SyntaxError: unexpected EOF while parsing&lt;/code&gt; 引发SyntaxError：意外的EOF</target>
        </trans-unit>
        <trans-unit id="a1d287602b80c41cf8366bb646224e4b7cd9162e" translate="yes" xml:space="preserve">
          <source>Return Annotations</source>
          <target state="translated">返回注释</target>
        </trans-unit>
        <trans-unit id="8fbb5ff95fbf63d6d137d7740d958bd2ba3c780f" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484/#annotating-instance-and-class-methods&quot;&gt;PEP 484&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0563/&quot;&gt;PEP 563&lt;/a&gt; for suggestions on annotating &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;cls&lt;/code&gt; arguments.</source>
          <target state="translated">有关注释 &lt;code&gt;self&lt;/code&gt; 和 &lt;code&gt;cls&lt;/code&gt; 参数的建议，请参见：&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484/#annotating-instance-and-class-methods&quot;&gt;PEP 484&lt;/a&gt;和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0563/&quot;&gt;PEP 563&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0dd04399224be1cb016cbab97176683a05d7b1c" translate="yes" xml:space="preserve">
          <source>Some opinionated flags are provided to tailor the linting errors emitted:</source>
          <target state="translated">提供了一些有意见的标志来定制发出的绒毛错误。</target>
        </trans-unit>
        <trans-unit id="64f800b681d63cfca7ce6b6fc10695b067454102" translate="yes" xml:space="preserve">
          <source>Support is provided for mixing argument and function type comments, provided that the function type comment use an Ellipsis for the arguments.</source>
          <target state="translated">支持混合参数和函数类型注释,只要函数类型注释对参数使用椭圆号。</target>
        </trans-unit>
        <trans-unit id="aff5c1dbd95b219a1db3f0994ce79f9c6ab8d72e" translate="yes" xml:space="preserve">
          <source>Suppress &lt;code&gt;ANN000&lt;/code&gt;-level errors for dummy arguments, defined as &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">禁止 &lt;code&gt;ANN000&lt;/code&gt; 虚拟参数定义为 &lt;code&gt;_&lt;/code&gt; 的ANN000级错误。</target>
        </trans-unit>
        <trans-unit id="c75441df88ce5e1baae4a032a8358eacd3079f7b" translate="yes" xml:space="preserve">
          <source>Suppress &lt;code&gt;ANN200&lt;/code&gt;-level errors for functions that meet one of the following criteria:</source>
          <target state="translated">抑制满足以下条件之一的函数的 &lt;code&gt;ANN200&lt;/code&gt; 级错误：</target>
        </trans-unit>
        <trans-unit id="1ca3b4c0e4ba9342e593c90d2f444a66ee82f7e7" translate="yes" xml:space="preserve">
          <source>Suppress all errors for dynamically typed functions. A function is considered dynamically typed if it does not contain any type hints.</source>
          <target state="translated">抑制所有动态类型函数的错误。如果一个函数不包含任何类型提示,则认为该函数是动态类型的。</target>
        </trans-unit>
        <trans-unit id="46b82811d3cdaffa631e1dc7edd999a9defbe200" translate="yes" xml:space="preserve">
          <source>Table of Warnings</source>
          <target state="translated">警告表</target>
        </trans-unit>
        <trans-unit id="7634ae7927202acc9816650d1c573f1912e50a7d" translate="yes" xml:space="preserve">
          <source>Testing &amp;amp; Coverage</source>
          <target state="translated">测试与覆盖</target>
        </trans-unit>
        <trans-unit id="abf9c284f707d55a5730fafe81e212b4ada6d8a4" translate="yes" xml:space="preserve">
          <source>This project uses &lt;a href=&quot;https://python-poetry.org/&quot;&gt;Poetry&lt;/a&gt; to manage dependencies. With your fork cloned to your local machine, you can install the project and its dependencies to create a development environment using:</source>
          <target state="translated">该项目使用&lt;a href=&quot;https://python-poetry.org/&quot;&gt;诗歌&lt;/a&gt;来管理依赖项。将fork克隆到本地计算机后，您可以使用以下方法安装项目及其依赖项以创建开发环境：</target>
        </trans-unit>
        <trans-unit id="a11d568f7d0a34940257a0c448929e7b0b0bb4b5" translate="yes" xml:space="preserve">
          <source>Type Comments</source>
          <target state="translated">类型评论</target>
        </trans-unit>
        <trans-unit id="734c9d668d1254dabbc9ec83512a6afc147038f4" translate="yes" xml:space="preserve">
          <source>What this won't do: Check variable annotations (see: &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526/&quot;&gt;PEP 526&lt;/a&gt;), respect stub files, or replace &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;mypy&lt;/a&gt;.</source>
          <target state="translated">这将不起作用：检查变量注释（请参阅：&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526/&quot;&gt;PEP 526&lt;/a&gt;），遵守存根文件或替换&lt;a href=&quot;http://mypy-lang.org/&quot;&gt;mypy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3dcc5742221cfe48a272cf5de64f4643fa851e4" translate="yes" xml:space="preserve">
          <source>Will show &lt;code&gt;arg1&lt;/code&gt; as missing a type hint.</source>
          <target state="translated">将显示 &lt;code&gt;arg1&lt;/code&gt; 为缺少类型提示。</target>
        </trans-unit>
        <trans-unit id="90983e223d5db707ac6b35c73462a70d7e7bf443" translate="yes" xml:space="preserve">
          <source>Will show &lt;code&gt;arg2&lt;/code&gt; as missing a type hint.</source>
          <target state="translated">将 &lt;code&gt;arg2&lt;/code&gt; 显示为缺少类型提示。</target>
        </trans-unit>
        <trans-unit id="df5c83437cb1367d9913681bb9afaf5e150e055d" translate="yes" xml:space="preserve">
          <source>Yes:</source>
          <target state="translated">是的,我知道</target>
        </trans-unit>
        <trans-unit id="701f3d01e5ec1a77783474fb9db58f7eaeccaa28" translate="yes" xml:space="preserve">
          <source>You can verify it's being picked up by invoking the following in your shell:</source>
          <target state="translated">你可以在你的shell中调用以下命令来验证它是否被接收。</target>
        </trans-unit>
        <trans-unit id="630002742d376094f81ad762c01fc15a6f4986db" translate="yes" xml:space="preserve">
          <source>flake8-annotations</source>
          <target state="translated">flake8-annotations</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
