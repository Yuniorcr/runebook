<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/flip/">
    <body>
      <group id="flip">
        <trans-unit id="ac838a2537511b4fc5bc1bc99f97d9784cb290bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flip&lt;/strong&gt; is a logical framework written in Python.  A logical framework is
a library for defining logics and writing applications such as theorem
provers.  One Flip application is a proof checker for entering and
editing proofs in natural deduction style.  Here is some output from
the checker, generated from a Python proof script:</source>
          <target state="translated">&lt;strong&gt;Flip&lt;/strong&gt;是用Python编写的逻辑框架。逻辑框架是用于定义逻辑和编写应用程序（例如定理证明）的库。一个Flip应用程序是一个证明检查器，用于以自然演绎样式输入和编辑证明。这是检查器的一些输出，这些输出是通过Python证明脚本生成的：</target>
        </trans-unit>
        <trans-unit id="98f9260f05eb51cb0e0bb2dbb26c467ba6b79b51" translate="yes" xml:space="preserve">
          <source>F L i P : Logical Framework in Python</source>
          <target state="translated">F L i P:Python中的逻辑框架</target>
        </trans-unit>
        <trans-unit id="6a63c0fec8b5d1246c5634345cb0ddbd176afd83" translate="yes" xml:space="preserve">
          <source>Flip was undertaken as a Python programming exercise.  It is not
intended to compete with industrial-strength theorem provers such as HOL,
nor with nicely-designed educational provers such as Jape.
That said, the checker is quite capable of working the examples and
exercises in university-level textbooks on logic for computer science or
mathematics, such as Kaye, Huth and Ryan, and Bornat.</source>
          <target state="translated">Flip 是作为 Python 编程练习而进行的。它不是为了与工业强度的定理证明器(如 HOL)竞争,也不是为了与设计精美的教育证明器(如 Jape)竞争。也就是说,这个检查器很有能力处理大学级别的计算机科学或数学逻辑教科书中的例子和练习,比如 Kaye、Huth 和 Ryan 以及 Bornat。</target>
        </trans-unit>
        <trans-unit id="1cc62108e4ba2253d28ad6af13e8bcd651280ca2" translate="yes" xml:space="preserve">
          <source>The checker can use different logics; Flip comes with several.  You
can add another logic, or add axioms and derived rules, by writing a
module in Python.  Python is both the object language and the
metalanguage.  Formulas, inference rules, and entire proofs are Python
expressions.  Prover commands are Python functions.  The Python
interpreter itself is the only user interface to the proof checker
application.  (It is not necessary to know much Python to use the
checker.)</source>
          <target state="translated">检查器可以使用不同的逻辑;Flip自带了几个逻辑。你可以通过用Python写一个模块来添加另一个逻辑,或者添加公理和派生规则。Python既是对象语言,也是金属语言。公式、推理规则和整个证明都是Python表达式。Prover命令是Python函数。Python 解释器本身是证明检查程序的唯一用户界面。(使用校验器不需要懂很多 Python)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
