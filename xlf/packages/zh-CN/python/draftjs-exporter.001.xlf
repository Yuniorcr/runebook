<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/draftjs-exporter/">
    <body>
      <group id="draftjs-exporter">
        <trans-unit id="89a7d77dcda0679d44b6467a214922d53c4bc928" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; is a rich text editor framework for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;. Its approach is different from most rich text editors because it does not store data as HTML, but rather in its own representation called ContentState. This exporter is useful when the ContentState to HTML conversion has to be done in a Python ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt;是一个用于&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;的富文本编辑器框架。它的方法与大多数富文本编辑器不同，因为它不将数据存储为HTML，而是以其自己的表示为ContentState的表示形式存储。当必须在Python生态系统中完成ContentState到HTML的转换时，此导出器很有用。</target>
        </trans-unit>
        <trans-unit id="05c5ca178aed5dd7a5d9f3e1d915dbde9140a00a" translate="yes" xml:space="preserve">
          <source>Add the following to the exporter config,</source>
          <target state="translated">在exporter配置中添加以下内容。</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">高级用法</target>
        </trans-unit>
        <trans-unit id="e34c67a413cc13bff1bc120db1eff1424946ce93" translate="yes" xml:space="preserve">
          <source>Alternative backing engines</source>
          <target state="translated">替代支持引擎</target>
        </trans-unit>
        <trans-unit id="eed87c23b43026871c8ab6c71ec1c981e97ce04e" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;create_element&lt;/code&gt;, a &lt;code&gt;parse_html&lt;/code&gt; method is also available. Use it to interface with other HTML generators, like template engines.</source>
          <target state="translated">除了 &lt;code&gt;create_element&lt;/code&gt; 之外，还可以使用 &lt;code&gt;parse_html&lt;/code&gt; 方法。使用它与其他HTML生成器（例如模板引擎）交互。</target>
        </trans-unit>
        <trans-unit id="23936ce755dd1fe091ab90a6314553128ac91956" translate="yes" xml:space="preserve">
          <source>Automatic conversion of entity data to HTML attributes (int &amp;amp; boolean to string, style object to style string).</source>
          <target state="translated">自动将实体数据转换为HTML属性（将in＆boolean转换为字符串，将样式对象转换为样式字符串）。</target>
        </trans-unit>
        <trans-unit id="b45d3746128e467f7961f387dfd30507a14e8fb6" translate="yes" xml:space="preserve">
          <source>By default, the exporter uses a dependency-free engine called &lt;code&gt;string&lt;/code&gt; to build the DOM tree. There are two alternative backing engines: &lt;code&gt;html5lib&lt;/code&gt; (via BeautifulSoup) and &lt;code&gt;lxml&lt;/code&gt;.</source>
          <target state="translated">默认情况下，导出器使用名为 &lt;code&gt;string&lt;/code&gt; 的无依赖关系引擎来构建DOM树。有两种备用支持引擎： &lt;code&gt;html5lib&lt;/code&gt; （通过BeautifulSoup）和 &lt;code&gt;lxml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">配置</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">贡献</target>
        </trans-unit>
        <trans-unit id="a0059a104cab5b52db320a50024325d57d9d5b41" translate="yes" xml:space="preserve">
          <source>Convert line breaks to &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">将换行符转换为 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">学分</target>
        </trans-unit>
        <trans-unit id="7f87cef1328db5f76b4a3b465748829b2ad4e37e" translate="yes" xml:space="preserve">
          <source>Custom backing engines</source>
          <target state="translated">定制支持引擎</target>
        </trans-unit>
        <trans-unit id="d47791d6d5efdc5ba7a9604f430d5b0a4824883f" translate="yes" xml:space="preserve">
          <source>Custom components</source>
          <target state="translated">定制组件</target>
        </trans-unit>
        <trans-unit id="1613092717ed25ebbf74b9eb37330065f2ccbbb8" translate="yes" xml:space="preserve">
          <source>Default, extensible block &amp;amp; inline style maps for common HTML elements.</source>
          <target state="translated">通用HTML元素的默认，可扩展的块和内联样式图。</target>
        </trans-unit>
        <trans-unit id="138972dce3c10c9054f9319cfea2b277053f676f" translate="yes" xml:space="preserve">
          <source>Define any attribute in the block map &amp;ndash; custom class names for elements.</source>
          <target state="translated">在程序框图中定义任何属性&amp;ndash;元素的自定义类名称。</target>
        </trans-unit>
        <trans-unit id="3b230184677b394f28380b69742259082517aeb9" translate="yes" xml:space="preserve">
          <source>Draft.js exporter</source>
          <target state="translated">Draft.js导出器</target>
        </trans-unit>
        <trans-unit id="a1e0e94d24568d9ad9d3e3e750a3e358fce19109" translate="yes" xml:space="preserve">
          <source>Draft.js stores data in a JSON representation based on blocks, representing lines of content in the editor, annotated with entities and styles to represent rich text. For more information, &lt;a href=&quot;https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2&quot;&gt;this article&lt;/a&gt; covers the concepts further.</source>
          <target state="translated">Draft.js将数据存储在基于块的JSON表示中，表示编辑器中的内容行，并用实体和样式进行注释以表示富文本。有关更多信息，&lt;a href=&quot;https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2&quot;&gt;本文&lt;/a&gt;将进一步介绍这些概念。</target>
        </trans-unit>
        <trans-unit id="f87adc97bc867db111b5ecc593cbc185b5d73608" translate="yes" xml:space="preserve">
          <source>Extensive configuration of the generated HTML.</source>
          <target state="translated">对生成的HTML进行广泛的配置。</target>
        </trans-unit>
        <trans-unit id="9569b61bb8c7d39f232c2190f89e63b08ef14cbc" translate="yes" xml:space="preserve">
          <source>Fallback components</source>
          <target state="translated">后备部件</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特点</target>
        </trans-unit>
        <trans-unit id="366df0afdce10822973f04858c3997d19fa5838c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;html5lib&lt;/code&gt;, do &lt;code&gt;pip install draftjs_exporter[html5lib]&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;html5lib&lt;/code&gt; ，请 &lt;code&gt;pip install draftjs_exporter[html5lib]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02d697e666cdfdfad29896088986c67d483bdafc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;lxml&lt;/code&gt;, do &lt;code&gt;pip install draftjs_exporter[lxml]&lt;/code&gt;. It also requires &lt;code&gt;libxml2&lt;/code&gt; and &lt;code&gt;libxslt&lt;/code&gt; to be available on your system.</source>
          <target state="translated">对于 &lt;code&gt;lxml&lt;/code&gt; ，请 &lt;code&gt;pip install draftjs_exporter[lxml]&lt;/code&gt; 。它还需要 &lt;code&gt;libxml2&lt;/code&gt; 和 &lt;code&gt;libxslt&lt;/code&gt; 在您的系统上可用。</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">开始</target>
        </trans-unit>
        <trans-unit id="0146b1998d9c21dcad837a3041918ac2bbbbd7b4" translate="yes" xml:space="preserve">
          <source>Here is an example implementation:</source>
          <target state="translated">下面是一个实施例。</target>
        </trans-unit>
        <trans-unit id="84b25dbbab0326264e48f81207c8107d5d4ddac7" translate="yes" xml:space="preserve">
          <source>If you just want to set up the project on your own computer, the contribution guidelines also contain all of the setup commands.</source>
          <target state="translated">如果你只是想在自己的电脑上设置项目,贡献指南也包含了所有的设置命令。</target>
        </trans-unit>
        <trans-unit id="8115dee2d09b458eefa214ea8fb390c538ccc822" translate="yes" xml:space="preserve">
          <source>In your code, create an exporter and use the &lt;code&gt;render&lt;/code&gt; method to create HTML:</source>
          <target state="translated">在您的代码中，创建一个导出器并使用 &lt;code&gt;render&lt;/code&gt; 方法创建HTML：</target>
        </trans-unit>
        <trans-unit id="2fa1427428a8ffd3f332b187e2845a2cfa63a7d7" translate="yes" xml:space="preserve">
          <source>It is developed alongside the &lt;a href=&quot;https://www.draftail.org/&quot;&gt;Draftail&lt;/a&gt; rich text editor, for &lt;a href=&quot;https://github.com/wagtail/wagtail&quot;&gt;Wagtail&lt;/a&gt;. Check out the &lt;a href=&quot;http://playground.draftail.org/&quot;&gt;online demo&lt;/a&gt;, and our &lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;introductory blog post&lt;/a&gt;.</source>
          <target state="translated">它是沿着发展&lt;a href=&quot;https://www.draftail.org/&quot;&gt;Draftail&lt;/a&gt;富文本编辑器，&lt;a href=&quot;https://github.com/wagtail/wagtail&quot;&gt;鹡鸰&lt;/a&gt;。查看&lt;a href=&quot;http://playground.draftail.org/&quot;&gt;在线演示&lt;/a&gt;以及我们的&lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;介绍性博客文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be3aee2b8e06230d8040ba6d278239204a311722" translate="yes" xml:space="preserve">
          <source>Library to convert rich text from Draft.js raw ContentState to HTML</source>
          <target state="translated">将Draft.js的原始ContentState中的富文本转换为HTML的库。</target>
        </trans-unit>
        <trans-unit id="e873658e5f0c19da47f55c011ffbbd18c4eb5d20" translate="yes" xml:space="preserve">
          <source>Library to convert rich text from Draft.js raw ContentState to HTML.</source>
          <target state="translated">将Draft.js原始ContentState的富文本转换为HTML的库。</target>
        </trans-unit>
        <trans-unit id="5b13fec6e9cea54c79c5356366d7b55079a8d5ee" translate="yes" xml:space="preserve">
          <source>Nested lists (&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements go inside &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;, with multiple levels).</source>
          <target state="translated">嵌套列表（ &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素位于 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; 中，具有多个级别）。</target>
        </trans-unit>
        <trans-unit id="26973964d473f363cf6b3cb58a4856dd150bc285" translate="yes" xml:space="preserve">
          <source>Output inline styles as inline elements (&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;, pick and choose, with any attribute).</source>
          <target state="translated">将内联样式输出为内联元素（ &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; ，带任意属性的选择）。</target>
        </trans-unit>
        <trans-unit id="2690b01f8e1a51798c69ef8b4d3187b150b3a371" translate="yes" xml:space="preserve">
          <source>Overlapping inline style and entity ranges.</source>
          <target state="translated">重叠的内联样式和实体范围。</target>
        </trans-unit>
        <trans-unit id="63e2c791a91e6a1dc538d6d2c1d4651b708e0f0e" translate="yes" xml:space="preserve">
          <source>Python 3.6+ type annotations.</source>
          <target state="translated">Python 3.6+类型注释。</target>
        </trans-unit>
        <trans-unit id="89bfc1b2c5f330360922a11d59527779b265e93c" translate="yes" xml:space="preserve">
          <source>React-like API to create custom components.</source>
          <target state="translated">类似React的API来创建自定义组件。</target>
        </trans-unit>
        <trans-unit id="e7ffc95076489a08bf4c953f0385eb76f0b9c40f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;example.py&quot;&gt;examples.py&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;example.py&quot;&gt;examples.py&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b135f1026e31ef84e9526343e061c27354b26c0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;examples.py&lt;/code&gt; in the repository for more details.</source>
          <target state="translated">有关更多详细信息，请参见存储库中的 &lt;code&gt;examples.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4c5fc5e40da96827ca1e31814ae47db5f75fe12" translate="yes" xml:space="preserve">
          <source>See anything you like in here? Anything missing? We welcome all support, whether on bug reports, feature requests, code, design, reviews, tests, documentation, and more. Please have a look at our &lt;a href=&quot;docs/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt;.</source>
          <target state="translated">在这里看到你喜欢的东西吗？缺少什么？我们欢迎所有支持，无论是关于错误报告，功能请求，代码，设计，审查，测试，文档等等。请查看我们的&lt;a href=&quot;docs/CONTRIBUTING.md&quot;&gt;贡献准则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="542e39ab85fa9280fa866f682a9eb117162ca28a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;string&lt;/code&gt; engine is the fastest, and does not have any dependencies. Its only drawback is that the &lt;code&gt;parse_html&lt;/code&gt; method does not escape/sanitise HTML like that of other engines.</source>
          <target state="translated">该 &lt;code&gt;string&lt;/code&gt; 引擎是最快的，并没有任何相关性。唯一的缺点是 &lt;code&gt;parse_html&lt;/code&gt; 方法不会像其他引擎那样转义/清除HTML。</target>
        </trans-unit>
        <trans-unit id="1befcd0f7f47a13dc8049fb4b573f1d73a2bb541" translate="yes" xml:space="preserve">
          <source>The exporter output is extensively configurable to cater for varied rich text requirements.</source>
          <target state="translated">输出器的输出可广泛配置,以满足各种丰富的文本要求。</target>
        </trans-unit>
        <trans-unit id="42ad4a38ec45fbcdca465aba8f7764c29a85ada4" translate="yes" xml:space="preserve">
          <source>The exporter supports using custom engines to generate its output via the &lt;code&gt;DOM&lt;/code&gt; API. This can be useful to implement custom export formats, e.g. &lt;a href=&quot;https://github.com/thibaudcolas/draftjs_exporter_markdown&quot;&gt;to Markdown (experimental)&lt;/a&gt;.</source>
          <target state="translated">导出器支持使用自定义引擎通过 &lt;code&gt;DOM&lt;/code&gt; API生成其输出。这对于实现自定义导出格式很有用，例如&lt;a href=&quot;https://github.com/thibaudcolas/draftjs_exporter_markdown&quot;&gt;Markdown（实验性）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2093690a5b3c5b4cf51261feb5e3099767b27b9c" translate="yes" xml:space="preserve">
          <source>The exporter&amp;rsquo;s codebase is typed with annotations from the Python 3.6+ standard library, checked with mypy. Reusable types are made available:</source>
          <target state="translated">导出程序的代码库中键入了Python 3.6+标准库中的注释，并通过mypy进行了检查。提供了可重用的类型：</target>
        </trans-unit>
        <trans-unit id="6a7fc17d24bf9ba459616ca4a1f5b2ce888c1fce" translate="yes" xml:space="preserve">
          <source>The initial use case was to gain more control over the content managed by rich text editors in a Wagtail/Django site. If you want to read the full story, have a look at our blog post: &lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;Rethinking rich text pipelines with Draft.js&lt;/a&gt;.</source>
          <target state="translated">最初的用例是对Wagtail / Django站点中的富文本编辑器管理的内容进行更多控制。如果您想阅读全文，请查看我们的博客文章：&lt;a href=&quot;https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js&quot;&gt;使用Draft.js重新思考富文本管道&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01258a11c84ee0c86392bfe1cecb3160754f8f71" translate="yes" xml:space="preserve">
          <source>Then, use the &lt;code&gt;engine&lt;/code&gt; attribute of the exporter config:</source>
          <target state="translated">然后，使用导出器配置的 &lt;code&gt;engine&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="d08ec679e497243aaa8a676827ae47fe9bd702a9" translate="yes" xml:space="preserve">
          <source>This exporter takes the Draft.js ContentState data as input, and outputs HTML based on its configuration. To get started, install the package:</source>
          <target state="translated">这个导出器将Draft.js ContentState数据作为输入,并根据其配置输出HTML。要开始使用,请安装该软件包。</target>
        </trans-unit>
        <trans-unit id="440a8811815779de6e5c663faa2f0b1ff2c6fc35" translate="yes" xml:space="preserve">
          <source>This fallback component can now control the exporter behavior when normal components are not found. Here is an example:</source>
          <target state="translated">现在,当找不到正常组件时,这个后备组件可以控制出口商的行为。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="c79109d7cce0de25a887741031ccbc36fc50dffa" translate="yes" xml:space="preserve">
          <source>This project adheres to &lt;a href=&quot;http://semver.org/spec/v2.0.0.html&quot;&gt;Semantic Versioning&lt;/a&gt;, and &lt;a href=&quot;https://thib.me/python-memory-profiling-for-the-draft-js-exporter&quot;&gt;measures performance&lt;/a&gt; and &lt;a href=&quot;https://coveralls.io/github/springload/draftjs_exporter&quot;&gt;code coverage&lt;/a&gt;. Code is checked with &lt;a href=&quot;https://mypy.readthedocs.io/en/latest/index.html&quot;&gt;mypy&lt;/a&gt;.</source>
          <target state="translated">该项目遵循&lt;a href=&quot;http://semver.org/spec/v2.0.0.html&quot;&gt;语义版本控制&lt;/a&gt;，并&lt;a href=&quot;https://thib.me/python-memory-profiling-for-the-draft-js-exporter&quot;&gt;测量性能&lt;/a&gt;和&lt;a href=&quot;https://coveralls.io/github/springload/draftjs_exporter&quot;&gt;代码覆盖率&lt;/a&gt;。使用&lt;a href=&quot;https://mypy.readthedocs.io/en/latest/index.html&quot;&gt;mypy&lt;/a&gt;检查代码。</target>
        </trans-unit>
        <trans-unit id="66e5e2a2528a4675a0eb1d62c4147298c7c68bad" translate="yes" xml:space="preserve">
          <source>This project is made possible by the work of &lt;a href=&quot;https://github.com/springload&quot;&gt;Springload&lt;/a&gt;, a New Zealand digital agency. The &lt;em&gt;beautiful&lt;/em&gt; demo site is the work of &lt;a href=&quot;https://github.com/thibaudcolas&quot;&gt;@thibaudcolas&lt;/a&gt;.</source>
          <target state="translated">新西兰数字代理商&lt;a href=&quot;https://github.com/springload&quot;&gt;Springload&lt;/a&gt;的工作使该项目成为可能。在&lt;em&gt;美丽的&lt;/em&gt;演示站点的工作&lt;a href=&quot;https://github.com/thibaudcolas&quot;&gt;@thibaudcolas&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60d3b3cec85b2e8a6c2ca0a70edccd768e932f6d" translate="yes" xml:space="preserve">
          <source>To generate arbitrary markup with dynamic data, the exporter comes with an API to create rendering components. This API mirrors React&amp;rsquo;s &lt;a href=&quot;https://facebook.github.io/react/docs/top-level-api.html#react.createelement&quot;&gt;createElement&lt;/a&gt; API (what JSX compiles to).</source>
          <target state="translated">为了使用动态数据生成任意标记，导出器附带了一个用于创建渲染组件的API。该API反映了React的&lt;a href=&quot;https://facebook.github.io/react/docs/top-level-api.html#react.createelement&quot;&gt;createElement&lt;/a&gt; API（JSX编译到的API）。</target>
        </trans-unit>
        <trans-unit id="ee5f3de7938afc6193f57957cf627bbf0b440e19" translate="yes" xml:space="preserve">
          <source>Type annotations</source>
          <target state="translated">类型注释</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="e3a322c037cb083b908858e3a7f73e3960b5564e" translate="yes" xml:space="preserve">
          <source>View the full list of &lt;a href=&quot;https://github.com/springload/draftjs_exporter/graphs/contributors&quot;&gt;contributors&lt;/a&gt;. &lt;a href=&quot;LICENSE&quot;&gt;MIT licensed&lt;/a&gt;.</source>
          <target state="translated">查看&lt;a href=&quot;https://github.com/springload/draftjs_exporter/graphs/contributors&quot;&gt;贡献者&lt;/a&gt;的完整列表。&lt;a href=&quot;LICENSE&quot;&gt;麻省理工学院许可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dddfe422b9e0076cc9e2e14243bdcfb70dccdc4" translate="yes" xml:space="preserve">
          <source>We support the following Python versions: 3.6, 3.7, 3.8. For Python 2.7 and 3.4 support, please use &lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v2.1.7&quot;&gt;v2.1.7&lt;/a&gt; of the exporter. For Python 3.5, use &lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v3.0.1&quot;&gt;v3.0.1&lt;/a&gt;.</source>
          <target state="translated">我们支持以下Python版本：3.6、3.7、3.8。要获得Python 2.7和3.4支持，请使用&lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v2.1.7&quot;&gt;导出程序的v2.1.7&lt;/a&gt;。对于Python 3.5，请使用&lt;a href=&quot;https://github.com/springload/draftjs_exporter/tree/v3.0.1&quot;&gt;v3.0.1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f345c5915212fcd9dcefa383e28d0756c53cbcd" translate="yes" xml:space="preserve">
          <source>When dealing with changes in the content schema, as part of ongoing development or migrations, some content can go stale.
To solve this, the exporter allows the definition of fallback components for blocks, styles, and entities.
This feature is only used for development at the moment, if you have a use case for this in production we would love to hear from you.
Please get in touch!</source>
          <target state="translated">当处理内容模式的变化时,作为正在进行的开发或迁移的一部分,一些内容可能会过时。为了解决这个问题,exporter允许为块、样式和实体定义回退组件。此功能目前仅用于开发,如果您在生产中使用此功能,我们很乐意听取您的意见。请与我们联系</target>
        </trans-unit>
        <trans-unit id="21e2caea4476d26af34541ca7c909c7ff2fa4a7f" translate="yes" xml:space="preserve">
          <source>Why</source>
          <target state="translated">为什么会这样?</target>
        </trans-unit>
        <trans-unit id="7b49e2225355c3757580e86b24df95951ac7b1bb" translate="yes" xml:space="preserve">
          <source>You can also run an example by downloading this repository and then using &lt;code&gt;python example.py&lt;/code&gt;, or by using our &lt;a href=&quot;http://playground.draftail.org/&quot;&gt;online Draft.js demo&lt;/a&gt;.</source>
          <target state="translated">您还可以通过下载此存储库，然后使用 &lt;code&gt;python example.py&lt;/code&gt; 或使用我们的&lt;a href=&quot;http://playground.draftail.org/&quot;&gt;在线Draft.js演示&lt;/a&gt;来运行示例。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
