<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/har-server/">
    <body>
      <group id="har-server">
        <trans-unit id="06baffbb8ed84c4bec0bb08ceea0549dab19883c" translate="yes" xml:space="preserve">
          <source>After this message is sent, the service will respond to</source>
          <target state="translated">该消息发送后,服务将回复到</target>
        </trans-unit>
        <trans-unit id="2a00b730e257831a58577780b3f4b020e7a8cb1b" translate="yes" xml:space="preserve">
          <source>GET /status</source>
          <target state="translated">GET /status</target>
        </trans-unit>
        <trans-unit id="068dee427a728efb9b41d6353a823186583147b3" translate="yes" xml:space="preserve">
          <source>Programmable HTTP server for testing</source>
          <target state="translated">可编程的HTTP服务器,用于测试</target>
        </trans-unit>
        <trans-unit id="79b54294f5874bfff3b3a8cc4881c85cf088b009" translate="yes" xml:space="preserve">
          <source>Simple programmable HTTP API server.</source>
          <target state="translated">简单的可编程HTTP API服务器。</target>
        </trans-unit>
        <trans-unit id="ae96c36b6b56e294c210f26c303396e34003fc3f" translate="yes" xml:space="preserve">
          <source>The primary use case is to return programmed responses to specified
requests.  The response is POSTed to service along with a matching request.
Both are specified as HAR objects &amp;ndash; the request is a &lt;a href=&quot;http://www.softwareishard.com/blog/har-12-spec/#request&quot;&gt;HAR request&lt;/a&gt; and
the response is a &lt;a href=&quot;http://www.softwareishard.com/blog/har-12-spec/#response&quot;&gt;HAR response&lt;/a&gt;</source>
          <target state="translated">主要用例是将已编程的响应返回给指定的请求。响应将与匹配请求一起发布到服务中。两者都指定为HAR对象-请求是&lt;a href=&quot;http://www.softwareishard.com/blog/har-12-spec/#request&quot;&gt;HAR请求&lt;/a&gt;，响应是&lt;a href=&quot;http://www.softwareishard.com/blog/har-12-spec/#response&quot;&gt;HAR响应&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d709c6df8c64790dd4a7e2bfee3178a5ddbbdbc" translate="yes" xml:space="preserve">
          <source>The server is programmable using elements from the &lt;a href=&quot;http://www.softwareishard.com/blog/har-12-spec/&quot;&gt;HTTP Archive&lt;/a&gt; (HAR)
specification originally developed by &lt;a href=&quot;http://www.softwareishard.com/blog/about/&quot;&gt;Jan Odvarko&lt;/a&gt; and the &lt;a href=&quot;https://w3c.github.io/web-performance/specs/HAR/Overview.html&quot;&gt;W3C&lt;/a&gt;
web-performance working group.  It was never moved beyond draft in the
W3C.  Jan Odvarko has maintained the specification on his blog.  I created
this project after discovering the &lt;a href=&quot;https://mockbin.com/&quot;&gt;mockbin&lt;/a&gt; service created by &lt;a href=&quot;https://en.wikipedia.org/wiki/Mashape&quot;&gt;Mashape&lt;/a&gt;
(now &lt;a href=&quot;https://konghq.com/&quot;&gt;KongHQ&lt;/a&gt;).  Unfortunately &lt;a href=&quot;https://mockbin.com/&quot;&gt;mockbin&lt;/a&gt; does not meet my exact needs.</source>
          <target state="translated">可以使用最初由&lt;a href=&quot;http://www.softwareishard.com/blog/about/&quot;&gt;Jan Odvarko&lt;/a&gt;和&lt;a href=&quot;https://w3c.github.io/web-performance/specs/HAR/Overview.html&quot;&gt;W3C&lt;/a&gt; Web性能工作组开发的&lt;a href=&quot;http://www.softwareishard.com/blog/har-12-spec/&quot;&gt;HTTP存档&lt;/a&gt;（HAR）规范中的元素对服务器进行编程。它从未在W3C中超越草案。 Jan Odvarko在他的博客上维护了该规范。在发现&lt;a href=&quot;https://en.wikipedia.org/wiki/Mashape&quot;&gt;Mashape&lt;/a&gt; （现为&lt;a href=&quot;https://konghq.com/&quot;&gt;KongHQ&lt;/a&gt;）创建的&lt;a href=&quot;https://mockbin.com/&quot;&gt;模拟&lt;/a&gt;服务之后，我创建了这个项目。不幸的是，&lt;a href=&quot;https://mockbin.com/&quot;&gt;模拟垃圾箱&lt;/a&gt;无法满足我的确切需求。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="5bab9a697e16333a0a800ec5acd53051e440e24d" translate="yes" xml:space="preserve">
          <source>on port 32443 with the registered response:</source>
          <target state="translated">端口32443上的注册响应。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
