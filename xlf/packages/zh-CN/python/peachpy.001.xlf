<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/peachpy/">
    <body>
      <group id="peachpy">
        <trans-unit id="65191b8f5a0f2816aede1c167d8a3ef61553088c" translate="yes" xml:space="preserve">
          <source>Allows to define constants in the place where they are used (just like in high-level languages)</source>
          <target state="translated">允许在使用常量的地方定义常量(就像在高级语言中一样)。</target>
        </trans-unit>
        <trans-unit id="12149ede772cc9fc060aa82e13cb840fe22949d3" translate="yes" xml:space="preserve">
          <source>Automatic register allocation</source>
          <target state="translated">自动寄存器分配</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="621f63e00de055d84aa47e5ca84946498d042971" translate="yes" xml:space="preserve">
          <source>Generating versions of a function for different calling conventions from the same source (e.g. functions for Microsoft x64 ABI and System V x86-64 ABI can be generated from the same source)</source>
          <target state="translated">从同一源生成不同调用习惯的函数版本(例如,Microsoft x64 ABI和System V x86-64 ABI的函数可以从同一源生成)。</target>
        </trans-unit>
        <trans-unit id="e85c95283e5620d142bb420d48273f904507f51f" translate="yes" xml:space="preserve">
          <source>Multiplexing of multiple instruction streams (helpful for software pipelining)</source>
          <target state="translated">多指令流的多路复用(对软件流水线有帮助</target>
        </trans-unit>
        <trans-unit id="e6b01bb2dbcfc7d11d90d30d18b18b303b4e66a6" translate="yes" xml:space="preserve">
          <source>PEACH-Py is a Python framework for writing high-performance assembly kernels. PEACH-Py is developed to simplify writing optimized assembly kernels while preserving all optimization opportunities of traditional assembly. Some PEACH-Py features:</source>
          <target state="translated">PEACH-Py 是一个用于编写高性能汇编内核的 Python 框架。PEACH-Py的开发目的是为了简化优化汇编内核的编写,同时保留传统汇编的所有优化机会。PEACH-Py的一些特点。</target>
        </trans-unit>
        <trans-unit id="f3fa4f51f8a01606965acb3e629955dc24d29f2c" translate="yes" xml:space="preserve">
          <source>Portable Efficient Assembly Codegen in Higher-level Python</source>
          <target state="translated">高阶Python中的便携式高效汇编代码生成器</target>
        </trans-unit>
        <trans-unit id="f6934e49a587a74a262be09edf5bca93a4cd0a82" translate="yes" xml:space="preserve">
          <source>Stack frame management, including re-aligning of stack frame as needed</source>
          <target state="translated">堆栈框架管理,包括根据需要重新调整堆栈框架。</target>
        </trans-unit>
        <trans-unit id="c99a6e2eae2b55a5779e563e1b6ab2210e3fce4e" translate="yes" xml:space="preserve">
          <source>Tracking of instruction extensions used in the function.</source>
          <target state="translated">跟踪函数中使用的指令扩展。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
