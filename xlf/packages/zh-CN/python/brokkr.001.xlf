<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/brokkr/">
    <body>
      <group id="brokkr">
        <trans-unit id="df0e7c3bb2d179b4e325c6bb0b758f9021382cbf" translate="yes" xml:space="preserve">
          <source>(e.g. &lt;code&gt;brokkr configure-system hamma /home/pi/dev/mjolnir-hamma&lt;/code&gt;)</source>
          <target state="translated">（例如， &lt;code&gt;brokkr configure-system hamma /home/pi/dev/mjolnir-hamma&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5a2a00e69d563c38709b6ad1ed5b83319f0bd448" translate="yes" xml:space="preserve">
          <source>(e.g. &lt;code&gt;brokkr configure-unit 1 --network-interface wlan0&lt;/code&gt;)</source>
          <target state="translated">（例如， &lt;code&gt;brokkr configure-unit 1 --network-interface wlan0&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="68e7ae8485381fb1c4693b195d4c6be085c79d46" translate="yes" xml:space="preserve">
          <source>A client for data ingest/logging/uplink, remote management and autonomous &amp; central control of scientific IoT sensors as part of the Mjolnir system.</source>
          <target state="translated">作为Mjolnir系统一部分的数据摄取/记录/上行链路，远程管理以及科学IoT传感器的自主和集中控制的客户端。</target>
        </trans-unit>
        <trans-unit id="89e3cae78745b4a188589c0d16b1e26265b5a6b1" translate="yes" xml:space="preserve">
          <source>A client for data ingest/logging/uplink, remote management and autonomous &amp;amp; central control of scientific IoT sensors as part of the Mjolnir system.
Originally developed to receive science data and status information from a local HAMMA2 lightning sensor and a Sunsaver MPPT-15L charge controller, store it locally, and transmit it back to a central server (generally, but not necessarily one running the Sindri package), but is now being evolved to be extensible and configurable for a wide variety of applications, from low-cost, low-power arrays of hundreds of environmental monitoring sensors, to sophisticated instruments mounted on aircraft and UAVs.
Further, it can maintain a reverse SSH tunnel to an accessible server for remote access, and receive and execute power, processing system and sensor control commands forwarded as TCP packets over said connection.</source>
          <target state="translated">作为Mjolnir系统一部分的数据摄取/记录/上行链路，远程管理以及科学IoT传感器的自主和集中控制的客户端。最初开发用于从本地HAMMA2闪电传感器和Sunsaver MPPT-15L充电控制器接收科学数据和状态信息，将其存储在本地，然后将其传输回中央服务器（通常，但不一定是运行Sindri软件包的服务器），但是现在，它已经发展成为可扩展和可配置的应用程序，从低成本，低功率的数百个环境监测传感器阵列到飞机和无人机上安装的精密仪器。此外，它可以维护到可访问服务器的反向SSH隧道以进行远程访问，并接收和执行电源，处理系统和传感器控制命令作为TCP数据包通过上述连接转发。</target>
        </trans-unit>
        <trans-unit id="9334f3dc0e7b236462064e977fc295b5892f9c84" translate="yes" xml:space="preserve">
          <source>A major design goal of Brokkr and the Mjolnir system is extensive, flexible and straightforward reconfiguration for different sensor networks and changing needs.
All the system configuration is normally handled through the Mjolnir-HAMMA system config package in the standard Mjolnir config schema developed for this system (located at ~/dev/mjolnir-hamma), aside from a few high-level elements specific to each unit which all have interactive configuration commands as below.</source>
          <target state="translated">Brokkr和Mjolnir系统的一个主要设计目标是针对不同的传感器网络和不断变化的需求进行广泛、灵活和直接的重新配置。所有的系统配置通常都是通过Mjolnir-HAMMA系统配置包来处理的,在为本系统开发的标准Mjolnir配置模式中(位于~/dev/mjolnir-hamma),除此之外,每个单元特有的一些高级元素都有交互式配置命令,如下图。</target>
        </trans-unit>
        <trans-unit id="cbdcbd0b3ca0410196eb27a75ad7b5b2609a213a" translate="yes" xml:space="preserve">
          <source>A sample bash script will be provided that runs steps 3-9 of this workflow automatically, and can be customized to the needs of a specific system.</source>
          <target state="translated">我们将提供一个bash脚本示例,它可以自动运行该工作流程的第3-9步,并可以根据特定系统的需要进行定制。</target>
        </trans-unit>
        <trans-unit id="7cfbde6dd40b5f5e9f1a33150236c89770ab0398" translate="yes" xml:space="preserve">
          <source>A typical semi-automated install flow might look like the following</source>
          <target state="translated">一个典型的半自动化安装流程可能是这样的</target>
        </trans-unit>
        <trans-unit id="e6d67902f8b25a3a2010f3b3daa75b03a203e2b7" translate="yes" xml:space="preserve">
          <source>After flashing the Pi and activating the appropriate venv, run &lt;code&gt;brokkr setup-device&lt;/code&gt; to regenerate the harnesses device-specific items (password, hashes, SSH keys, etc). You&amp;rsquo;ll need to enter the Pi&amp;rsquo;s current and desired password at the interactive prompt.</source>
          <target state="translated">在刷新Pi并激活适当的venv之后，运行 &lt;code&gt;brokkr setup-device&lt;/code&gt; 以重新生成线束设备特定的项（密码，哈希，SSH密钥等）。您需要在交互式提示下输入Pi的当前密码和所需密码。</target>
        </trans-unit>
        <trans-unit id="76441228b4024c4f569f4cc8fb76baa1924d651a" translate="yes" xml:space="preserve">
          <source>Automated clean install</source>
          <target state="translated">自动清洁安装</target>
        </trans-unit>
        <trans-unit id="a773001a7b51a529380a55f0d6c16fb10adb4af9" translate="yes" xml:space="preserve">
          <source>Basic status check and latest log output</source>
          <target state="translated">基本状态检查和最新日志输出</target>
        </trans-unit>
        <trans-unit id="ca0de5a9a3a53a189f55ba58efbc4ed03c5a21e1" translate="yes" xml:space="preserve">
          <source>Brokkr</source>
          <target state="translated">Brokkr</target>
        </trans-unit>
        <trans-unit id="bc19da936e001381b6f4aa20228e146bd7a68c97" translate="yes" xml:space="preserve">
          <source>Built and tested under Python 3.7 (but should be compatible with Python &amp;gt;=3.6; lack thereof should be considered a bug), and should be forward-compatible with Python 3.8 (albeit as yet not fully tested).
Compatible and tested with recent (&amp;gt;= 2019) versions of the packages listed in the &lt;code&gt;requirements.txt&lt;/code&gt; file.
Works best on Linux, but is tested to be fully functional (aside from service features) on Windows (and &lt;em&gt;should&lt;/em&gt; work equally macOS) under the Anaconda distribution.</source>
          <target state="translated">在Python 3.7下构建和测试（但应与Python&amp;gt; = 3.6兼容；缺少Python应该被视为bug），并且应与Python 3.8向前兼容（尽管尚未经过全面测试）。与 &lt;code&gt;requirements.txt&lt;/code&gt; 文件中列出的软件包的最新版本（&amp;gt; = 2019）兼容并进行了测试。在Anaconda发行版下，它在Linux上运行效果最佳，但经过测试在Windows上具有完整功能（除了服务功能）（并且&lt;em&gt;应&lt;/em&gt;与macOS一样工作）。</target>
        </trans-unit>
        <trans-unit id="4310a244bc3994bea41ec2d0b5a9905d781f0327" translate="yes" xml:space="preserve">
          <source>Built-in support for dozens of different sensors including ECH2O EC-5, EC-10, EC-20, DS18S20, DS1822, DS18B20, DS28EA00, DS1825, MAX31850K, HIH6130, Si7021, SHT31D, MPL3115A2, MLX90614, HTU21D, DHT11, DHT22, BMP280, BME280, MPPT-15L, HAMMA2, ADS1015, ADS1115, and generic switch, counter, GPIO and analog anemometer dir and speed, plus time, runtime, ping, and more</source>
          <target state="translated">内置支持数十种不同的传感器,包括ECH2O EC-5、EC-10、EC-20、DS18S20、DS1822、DS18B20、DS28EA00、DS1825、MAX31850K、HIH6130、Si7021、SHT31D、MPL3115A2、MLX90614。HTU21D、DHT11、DHT22、BMP280、BME280、MPPT-15L、HAMMA2、ADS1015、ADS1115,以及通用的开关、计数器、GPIO和模拟风速计dir和速度,还有时间、运行时间、ping等。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">配置</target>
        </trans-unit>
        <trans-unit id="2e6a92a2c2438a218ce2871c3365ab82c4ceb3a8" translate="yes" xml:space="preserve">
          <source>Configuration files are located under the XDG-standard &lt;code&gt;~/.config/brokkr&lt;/code&gt; directory in the ini-like &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; format; they can be generated by running &lt;code&gt;brokkr configure-init&lt;/code&gt; (which will not overwrite them if they already exist), and reset to defaults with &lt;code&gt;brokkr configure-reset&lt;/code&gt;.</source>
          <target state="translated">配置文件以类似ini的&lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt;格式位于XDG标准 &lt;code&gt;~/.config/brokkr&lt;/code&gt; 目录下。可以通过运行 &lt;code&gt;brokkr configure-init&lt;/code&gt; 生成它们（如果它们已经存在，则不会覆盖它们），并使用 &lt;code&gt;brokkr configure-reset&lt;/code&gt; 重置为默认值。</target>
        </trans-unit>
        <trans-unit id="c62734684ddc3a0c843654a434c8b5c4471e12db" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2019-2020 C.A.M. Gerlach, the UAH HAMMA Group and the Project Mjolnir Contributors</source>
          <target state="translated">版权所有&amp;copy;2019-2020 CAM Gerlach，UAH HAMMA Group和Mjolnir项目贡献者</target>
        </trans-unit>
        <trans-unit id="88fbf6c7efe3420519716388447833ffcdaec62b" translate="yes" xml:space="preserve">
          <source>Create and activate venv, &lt;code&gt;pip install brokkr --no-dependencies&lt;/code&gt; from offline sdist and copy system config dir and any keyfiles</source>
          <target state="translated">创建并激活venv， &lt;code&gt;pip install brokkr --no-dependencies&lt;/code&gt; 脱机sdist 不依赖并复制系统配置目录和任何密钥文件</target>
        </trans-unit>
        <trans-unit id="319ef02997738bb295b73861dfe0914f01984714" translate="yes" xml:space="preserve">
          <source>Create venv for Sindri and &lt;code&gt;pip install sindri&lt;/code&gt; it (optional)</source>
          <target state="translated">为Sindri创建venv并 &lt;code&gt;pip install sindri&lt;/code&gt; Sindri （可选）</target>
        </trans-unit>
        <trans-unit id="b3a74fa260a0c87102115e66a35b00b46070607e" translate="yes" xml:space="preserve">
          <source>Drop-in, declarative preset system for supporting new sensors, devices and protocols; presets can be enabled with as little as 1 line in the master config file, and extensively customized via config options</source>
          <target state="translated">即插即用的声明式预设系统,用于支持新的传感器、设备和协议;预设可以在主配置文件中只需一行就能启用,并通过配置选项进行广泛的定制。</target>
        </trans-unit>
        <trans-unit id="f1a7d2f60f2f6c70f49c674d8d2b780a4ae32cd8" translate="yes" xml:space="preserve">
          <source>Easy to use, powerful plugin framework with a simple API and minimal boilterplate for input, processing and output steps; can be either simple Python files placed in a specific directory, or proper Python packages</source>
          <target state="translated">简单易用、功能强大的插件框架,具有简单的API和最小的boilterplate,用于输入、处理和输出步骤;可以是放在特定目录下的简单Python文件,也可以是合适的Python包。</target>
        </trans-unit>
        <trans-unit id="4c60172a320014c676f21894dfa08aa4e753267d" translate="yes" xml:space="preserve">
          <source>Enable/disable running on startup</source>
          <target state="translated">开启/关闭启动时的运行</target>
        </trans-unit>
        <trans-unit id="b4d79af590a8426842de51ff637e6f0b73579b90" translate="yes" xml:space="preserve">
          <source>Finally, on site, once the final unit configuration is set (or after it is changed in the future), perform on-site setup as below</source>
          <target state="translated">最后,在现场,当最终的机组配置设置好后(或将来更改后),按以下方式进行现场设置。</target>
        </trans-unit>
        <trans-unit id="42c90ed8eed700cd227dbeb6ce26a99c1c3e9991" translate="yes" xml:space="preserve">
          <source>Finally, you can check that Brokkr is working with &lt;code&gt;brokkr --version&lt;/code&gt;, &lt;code&gt;brokkr status&lt;/code&gt; and the other commands detailed in &lt;code&gt;brokkr --help&lt;/code&gt;.
Simply reboot to automatically complete setup and start the &lt;code&gt;brokkr&lt;/code&gt; service, or on all platforms you can manually execute it on the command line immediately with &lt;code&gt;brokkr start&lt;/code&gt;.</source>
          <target state="translated">最后，您可以检查Brokkr是否正在使用 &lt;code&gt;brokkr --version&lt;/code&gt; ， &lt;code&gt;brokkr status&lt;/code&gt; 以及 &lt;code&gt;brokkr --help&lt;/code&gt; 中详细介绍的其他命令。只需重新启动即可自动完成设置并启动 &lt;code&gt;brokkr&lt;/code&gt; 服务，或者在所有平台上，您可以使用 &lt;code&gt;brokkr start&lt;/code&gt; 立即在命令行上手动执行该服务。</target>
        </trans-unit>
        <trans-unit id="6c05de758095d676ce000f3ea513ad075a2d4607" translate="yes" xml:space="preserve">
          <source>Finally, you can run the post-installation setup steps as needed for your system.
For a simple system, to just install the systemd service unit to run Brokkr on startup and restart it if it fails,</source>
          <target state="translated">最后,你可以根据系统的需要运行安装后的设置步骤。对于一个简单的系统,只需要安装systemd服务单元,在启动时运行Brokkr,如果失败则重启。</target>
        </trans-unit>
        <trans-unit id="2c96f39e2e3366555d77bb09b610defc75b37609" translate="yes" xml:space="preserve">
          <source>First activate the appropriate Python virtual environment (&lt;code&gt;source ENV_DIR/bin/activate&lt;/code&gt;).</source>
          <target state="translated">首先激活适当的Python虚拟环境（ &lt;code&gt;source ENV_DIR/bin/activate&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13b8b1ac534f3e18026c2dca8a1eb3f714e389b4" translate="yes" xml:space="preserve">
          <source>Flash SD card with OS image</source>
          <target state="translated">带有操作系统图像的SD闪存卡</target>
        </trans-unit>
        <trans-unit id="ba224c48ff55deae165226f595e06e3e0e24af72" translate="yes" xml:space="preserve">
          <source>Flashing Brokkr onto a prepared card</source>
          <target state="translated">在准备好的卡片上闪现Brokkr</target>
        </trans-unit>
        <trans-unit id="3257407a911a22d819768bebacbc7e073b8ca753" translate="yes" xml:space="preserve">
          <source>For the avoidance of doubt, per the terms of the LGPL, plugins, presets and configuration packages are not considered integral parts of the covered work, and may be released under any license, free or proprietary.</source>
          <target state="translated">为了避免疑问,根据LGPL的条款,插件、预设和配置包不被视为所涵盖作品的组成部分,可以在任何许可证下发布,无论是免费的还是专有的。</target>
        </trans-unit>
        <trans-unit id="2a1cee1c31b1b6afbad1fb01f853c69387364179" translate="yes" xml:space="preserve">
          <source>Full log output (also logged to text file &lt;code&gt;~/brokkr/hamma/brokkr_hamma_NNN.log&lt;/code&gt;)</source>
          <target state="translated">完整日志输出（也记录到文本文件 &lt;code&gt;~/brokkr/hamma/brokkr_hamma_NNN.log&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="77daedc1ef71a364b59a4c80fc13606ffa6b3d7b" translate="yes" xml:space="preserve">
          <source>Generate empty local per-system (i.e. override) config files if not already present:</source>
          <target state="translated">生成空的本地每系统(即覆盖)配置文件,如果还没有的话。</target>
        </trans-unit>
        <trans-unit id="fa21b581851e8a4cd6a81c8379ea846fef644298" translate="yes" xml:space="preserve">
          <source>Generate local config files</source>
          <target state="translated">生成本地配置文件</target>
        </trans-unit>
        <trans-unit id="47888729520073516f52bdb2fb6f6626f8d7ffbe" translate="yes" xml:space="preserve">
          <source>Generate, install and enable service automatically</source>
          <target state="translated">自动生成、安装和启用服务</target>
        </trans-unit>
        <trans-unit id="cf744f6ef6edc5eaca194b11a27882d111b0429b" translate="yes" xml:space="preserve">
          <source>Hierarchical configuration system, allowing for multiple levels of settings and overrides</source>
          <target state="translated">层次化的配置系统,允许多层次的设置和覆盖。</target>
        </trans-unit>
        <trans-unit id="97b80cce75217a34624e11819d56cbddd17b45f8" translate="yes" xml:space="preserve">
          <source>High-level local setting configuration</source>
          <target state="translated">高级本地设置配置</target>
        </trans-unit>
        <trans-unit id="12ed95d92250a5f18f64fe6504b5b7c3960ea249" translate="yes" xml:space="preserve">
          <source>However, for setup on typical IoT devices (i.e. single-board computers like the Raspberry Pi) running a clean copy of a modern Linux-based operating system, Brokkr features a comprehensive setup routine that can bootstrap all key aspects of a factory-fresh system to be ready for deployment in the field.
Simply declare the configuration files you want copied, packages and services you want installed/enabled/disabled/removed, firewall ports you want open closed, and other custom actions (move files, sed scripts, commands run, etc) for each phase of the install as part of the system config package, and on your command, brokkr will do the rest.</source>
          <target state="translated">然而,对于在典型的物联网设备(即像树莓派这样的单板计算机)上进行设置,运行一个干净的基于Linux的现代操作系统副本,Brokkr提供了一个全面的设置例程,它可以引导一个工厂新鲜系统的所有关键方面,为在现场部署做好准备。只需声明你想复制的配置文件,你想安装/启用/禁用/移除的包和服务,你想打开关闭的防火墙端口,以及其他自定义操作(移动文件,sed脚本,命令运行等),作为系统配置包的一部分,然后在你的命令下,brokkr将完成剩下的工作。</target>
        </trans-unit>
        <trans-unit id="d1bc328ee1c7ab3d5c2a3c02b01b45e48272f0fd" translate="yes" xml:space="preserve">
          <source>However, if local customization is needed beyond the high-level options specified here, instead of modifying the version-control-tracked system config package directly, the config system built for this is fully hierarchical and all settings can be fully overridden via the corresponding local config in ~/.config/brokkr/hamma
Brokkr fully supports configuration, logging, operation and output of any number of Mjolnir systems simultaneously, all on the same Pi.</source>
          <target state="translated">但是,如果需要在这里指定的高级选项之外进行本地定制,则不需要直接修改版本控制跟踪的系统配置包,而是通过~/.config/brokkr/hamma中对应的本地配置,构建的配置系统是完全分层的,所有的设置都可以通过~/.config/brokkr/hamma中对应的本地配置完全覆盖。 Brokkr完全支持在同一个Pi上同时配置、记录、操作和输出任意数量的Mjolnir系统。</target>
        </trans-unit>
        <trans-unit id="97d12a184a5d895dd8d79249f8f8c7cad4f33cb2" translate="yes" xml:space="preserve">
          <source>If a card is already prepared via the steps mentioned in the &quot;Automated clean install&quot; section (minus the &lt;code&gt;brokkr setup-device&lt;/code&gt; step), flashing it onto another device and preparing it for deployment is simple.</source>
          <target state="translated">如果已经通过&amp;ldquo;自动 &lt;code&gt;brokkr setup-device&lt;/code&gt; 安装&amp;rdquo;部分中提到的步骤（减去brokkr设置设备步骤）准备了卡，则将其闪存到另一台设备上并为部署做准备很简单。</target>
        </trans-unit>
        <trans-unit id="a8f39a0eaff1e31685a2b14797108f08b8c37cd0" translate="yes" xml:space="preserve">
          <source>Installation and Setup</source>
          <target state="translated">安装和设置</target>
        </trans-unit>
        <trans-unit id="5d015b02f115b4632d48e12bcb7cae89f82ea237" translate="yes" xml:space="preserve">
          <source>Interactive Use (Foreground)</source>
          <target state="translated">互动使用(前景</target>
        </trans-unit>
        <trans-unit id="c961da4e3b66e2f97987a7afe330011eb7cb4e36" translate="yes" xml:space="preserve">
          <source>Key Features</source>
          <target state="translated">主要特点</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="fa1d2b711c5f0d36162d373298d2f21f32702b2f" translate="yes" xml:space="preserve">
          <source>Lightweight realtime monitoring (prints to screen, can also write to file): &lt;code&gt;brokkr monitor&lt;/code&gt;</source>
          <target state="translated">轻量级实时监控（打印到屏幕，也可以写入文件）： &lt;code&gt;brokkr monitor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46f3d390d11a7da4256c70225dd592812540005" translate="yes" xml:space="preserve">
          <source>Main foreground start command, for testing: &lt;code&gt;brokkr start&lt;/code&gt;</source>
          <target state="translated">主要前台启动命令，用于测试： &lt;code&gt;brokkr start&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e991aaeb0eee65f54df8d54a85f87b0368489d6" translate="yes" xml:space="preserve">
          <source>On Linux, Brokkr can be installed like any other Python package via &lt;code&gt;pip&lt;/code&gt; into a virtual environment like so (with the venv created inside &lt;code&gt;ENV_NAME&lt;/code&gt; in the current working directory), with the extra packages needed to support specific sensor types (e.g. &lt;code&gt;modbus&lt;/code&gt;, &lt;code&gt;serial&lt;/code&gt;, &lt;code&gt;adafruit&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; etc) installed as desired:</source>
          <target state="translated">在Linux上，可以像其他任何Python软件包一样通过 &lt;code&gt;pip&lt;/code&gt; 将Brokkr安装到虚拟环境中（在当前工作目录的ENV_NAME内部创建 &lt;code&gt;ENV_NAME&lt;/code&gt; ），并带有支持特定传感器类型（例如 &lt;code&gt;modbus&lt;/code&gt; ， &lt;code&gt;serial&lt;/code&gt; ， &lt;code&gt;adafruit&lt;/code&gt; ， &lt;code&gt;all&lt;/code&gt; 等）按要求安装：</target>
        </trans-unit>
        <trans-unit id="399eaf4c2397a460e71f0736af04329d0162e90f" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, use of Anaconda/Miniconda is recommended, substituting conda environments for venvs. While these platforms are supported for development, some functionality specific to running Brokkr in production may be unavailable.</source>
          <target state="translated">在 Windows 和 Mac 上,建议使用 Anaconda/Miniconda,用 conda 环境代替 venvs。虽然这些平台支持开发,但在生产中运行Brokkr的一些特定功能可能不可用。</target>
        </trans-unit>
        <trans-unit id="716a2c8c4fde889342cd7e06d095fce13857168b" translate="yes" xml:space="preserve">
          <source>On site, you'll want to take a couple additional actions to pair a specific device with a specific site, and test connectivity.</source>
          <target state="translated">在现场,你会想要采取一些额外的操作,将特定的设备与特定的站点配对,并测试连接性。</target>
        </trans-unit>
        <trans-unit id="51493e8a9de2950a334522f0e43858485a6251d1" translate="yes" xml:space="preserve">
          <source>On-site setup</source>
          <target state="translated">现场设置</target>
        </trans-unit>
        <trans-unit id="17241a9c4a9c68dd062916f1b9b70e43b884fb5b" translate="yes" xml:space="preserve">
          <source>Once on-site, perform unit configuration (see below)</source>
          <target state="translated">到现场后,进行设备配置(见下文)。</target>
        </trans-unit>
        <trans-unit id="78505fd9911563f1eb2775ffce5297c91559915c" translate="yes" xml:space="preserve">
          <source>Oneshot status output: &lt;code&gt;brokkr status&lt;/code&gt;</source>
          <target state="translated">Oneshot状态输出： &lt;code&gt;brokkr status&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="72089056cb494d3993d84660abfe5bb0f108bdc4" translate="yes" xml:space="preserve">
          <source>Perform basic raspi-config, Fedora, etc. setup; change username if desired</source>
          <target state="translated">执行基本的 raspi-config、Fedora 等设置;如果需要,请更改用户名。</target>
        </trans-unit>
        <trans-unit id="06c8d1a41ced8c0c0de9fcab6174175734fd0cc9" translate="yes" xml:space="preserve">
          <source>Plugins for alerts/triggered actions, Slack notifications, REST/web APIs and much more</source>
          <target state="translated">警报/触发动作、Slack通知、REST/Web API等插件。</target>
        </trans-unit>
        <trans-unit id="554dbf4b2a66f718b1b7bae772adb8b807e3d059" translate="yes" xml:space="preserve">
          <source>Power off the device, connect it to all desired hardware and reboot</source>
          <target state="translated">关闭设备电源,将其连接到所有需要的硬件上,然后重新启动</target>
        </trans-unit>
        <trans-unit id="85b4bfa3efef108eceac05a5eb2c69ae56267c4f" translate="yes" xml:space="preserve">
          <source>Register a Mjolnir system:</source>
          <target state="translated">注册一个Mjolnir系统。</target>
        </trans-unit>
        <trans-unit id="e853357f89a151a530194feb38e01e74806c384b" translate="yes" xml:space="preserve">
          <source>Register, update and remove systems</source>
          <target state="translated">登记、更新和删除系统</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="1d7c76d34a5f676f0c4ae7099ecae62255f24167" translate="yes" xml:space="preserve">
          <source>Reset configuration</source>
          <target state="translated">重置配置</target>
        </trans-unit>
        <trans-unit id="42578e5d9e1ad91e419b4eea2cf554b538b9e239" translate="yes" xml:space="preserve">
          <source>Reset unit and local override configuration (optionally minus system registry):</source>
          <target state="translated">重置单元和本地覆盖配置(可选择减去系统注册表)。</target>
        </trans-unit>
        <trans-unit id="51235016e6ea8a9a323dfad0689066c96d2d7995" translate="yes" xml:space="preserve">
          <source>Robust error handling, status logging, automatic installation, service configuration and multiprocess management infrastructure</source>
          <target state="translated">强大的错误处理、状态记录、自动安装、服务配置和多进程管理基础设施</target>
        </trans-unit>
        <trans-unit id="bfee5010ffc750fb03e7c28edbb83063393f7751" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr configure-system &amp;lt;systemname&amp;gt; &amp;lt;systempath&amp;gt;&lt;/code&gt; to set the system config dir path</source>
          <target state="translated">运行 &lt;code&gt;brokkr configure-system &amp;lt;systemname&amp;gt; &amp;lt;systempath&amp;gt;&lt;/code&gt; 系统路径&amp;gt;以设置系统配置目录路径</target>
        </trans-unit>
        <trans-unit id="87b210d27e06dbcbfe42cf4f3d8a5072ae1770a5" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr configure-unit &amp;lt;unit-number&amp;gt; --network-interface &amp;lt;network-interface&amp;gt;&lt;/code&gt; to set up the basic unit configuration</source>
          <target state="translated">运行 &lt;code&gt;brokkr configure-unit &amp;lt;unit-number&amp;gt; --network-interface &amp;lt;network-interface&amp;gt;&lt;/code&gt; 设置基本单元配置</target>
        </trans-unit>
        <trans-unit id="f0b6ea222868a07efe49133de868fdd47d59c887" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr install --phase 1&lt;/code&gt; to perform the necessary steps to enable Internet</source>
          <target state="translated">运行 &lt;code&gt;brokkr install --phase 1&lt;/code&gt; 以执行必要的步骤以启用Internet</target>
        </trans-unit>
        <trans-unit id="5ee83b0ebef19d7e3584a21696a0c3d46cb3bc51" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr install --phase 2&lt;/code&gt; to install remaining items</source>
          <target state="translated">运行 &lt;code&gt;brokkr install --phase 2&lt;/code&gt; 以安装其余项目</target>
        </trans-unit>
        <trans-unit id="3b93bd0e50d94913ace4049d712917d3fe3d330f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr setup-device&lt;/code&gt; to trigger device-specific setup actions</source>
          <target state="translated">运行 &lt;code&gt;brokkr setup-device&lt;/code&gt; 触发设备特定的设置操作</target>
        </trans-unit>
        <trans-unit id="4c4bd4d957efb581c943efb812de55f75a03aad6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr setup-unit&lt;/code&gt; to perform final per-unit on-site setup, register and test the link to the sensor, and verify connectivity to the upstream server</source>
          <target state="translated">运行 &lt;code&gt;brokkr setup-unit&lt;/code&gt; 来执行最终的每个单位的现场设置，注册并测试到传感器的链接，并验证与上游服务器的连接</target>
        </trans-unit>
        <trans-unit id="ccbbd3b891e1d62d7afb7fe8b8360f7e8aa9e74b" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;brokkr status&lt;/code&gt; command to get a snapshot of the monitoring data, and the &lt;code&gt;brokkr monitor&lt;/code&gt; command to get a pretty-printed display of all the main monitoring variables, updated in real time (1s) as you watch.</source>
          <target state="translated">Run the &lt;code&gt;brokkr status&lt;/code&gt; command to get a snapshot of the monitoring data, and the &lt;code&gt;brokkr monitor&lt;/code&gt; command to get a pretty-printed display of all the main monitoring variables, updated in real time (1s) as you watch.</target>
        </trans-unit>
        <trans-unit id="94cf566341875b58d9b39bc87b5f65577df3a464" translate="yes" xml:space="preserve">
          <source>Running Brokkr as a Service (Background)</source>
          <target state="translated">将Brokkr作为服务来运行(后台</target>
        </trans-unit>
        <trans-unit id="563158da254be63c56174e1d19fea05370059346" translate="yes" xml:space="preserve">
          <source>Set per-unit configuration</source>
          <target state="translated">设置每台设备的配置</target>
        </trans-unit>
        <trans-unit id="d094472ebcd2d75164a0dc2a4a20cfa832aed869" translate="yes" xml:space="preserve">
          <source>Standard install</source>
          <target state="translated">标准安装</target>
        </trans-unit>
        <trans-unit id="8bc2be80f7224446b77d2c9b05d01f3f5d3bfcb8" translate="yes" xml:space="preserve">
          <source>Start/stop</source>
          <target state="translated">开始/停止</target>
        </trans-unit>
        <trans-unit id="960a81e0b68cdb65421b7df897591e20d4ed392b" translate="yes" xml:space="preserve">
          <source>Support for SPI, I2C, GPIO, Analog, SMBus, UART, Modbus, TCP, UDP, and more as inputs, and print/pretty print, file and system logging, CSV, and TCP packets as output built into the core</source>
          <target state="translated">支持SPI、I2C、GPIO、模拟量、SMBus、UART、Modbus、TCP、UDP等作为输入,并将打印/pretty打印、文件和系统日志、CSV、TCP数据包等作为输出内置在核心中</target>
        </trans-unit>
        <trans-unit id="c2145d4397e46337b1ff56b05f5f7ad48893fa52" translate="yes" xml:space="preserve">
          <source>System-independent and fully multi-system capable; all metadata, config, plugins and presets stored within VCS-trackable self-contained package for easy management</source>
          <target state="translated">系统独立,并具有完全的多系统功能;所有的元数据、配置、插件和预设都存储在VCS可跟踪的独立包内,便于管理。</target>
        </trans-unit>
        <trans-unit id="e96d9e81dc6029dd77e151b1f8cb398566ae2b9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brokkr install-*&lt;/code&gt; commands perform installation functions and the &lt;code&gt;brokkr configure-*&lt;/code&gt; scripts help set up a new or updated &lt;code&gt;brokkr&lt;/code&gt; install.
Use &lt;code&gt;brokkr --help&lt;/code&gt; to get help, &lt;code&gt;brokkr --version&lt;/code&gt; to get the current version.
On Linux, the &lt;code&gt;brokkr&lt;/code&gt; systemd service can be interacted with via the standard systemd commands, e.g. &lt;code&gt;sudo systemd {start, stop, enable, disable} brokkr-hamma&lt;/code&gt;, &lt;code&gt;systemd status brokkr-hamma&lt;/code&gt;, &lt;code&gt;journalctl -u brokkr-hamma&lt;/code&gt;, etc, and the same for &lt;code&gt;autossh-brokkr&lt;/code&gt; which controls remote SSH connectivity.</source>
          <target state="translated">该 &lt;code&gt;brokkr install-*&lt;/code&gt; 命令进行安装功能和 &lt;code&gt;brokkr configure-*&lt;/code&gt; 脚本帮助建立一个新的或更新 &lt;code&gt;brokkr&lt;/code&gt; 安装。使用 &lt;code&gt;brokkr --help&lt;/code&gt; 获取帮助，使用 &lt;code&gt;brokkr --version&lt;/code&gt; 获取当前版本。在Linux上，可以通过标准systemd命令与 &lt;code&gt;brokkr&lt;/code&gt; systemd服务进行交互，例如 &lt;code&gt;sudo systemd {start, stop, enable, disable} brokkr-hamma&lt;/code&gt; ， &lt;code&gt;systemd status brokkr-hamma&lt;/code&gt; &lt;code&gt;journalctl -u brokkr-hamma&lt;/code&gt; ，journalctl -u brokkr-hamma等，以及对于控制远程SSH连接 &lt;code&gt;autossh-brokkr&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="2687badc746fe70d4db188c2e9b0a0cf37b3178e" translate="yes" xml:space="preserve">
          <source>The code at the following paths are released under the MIT (Expat) License, Copyright &amp;copy; C.A.M. Gerlach 2019-2020, and subject to future independent release:</source>
          <target state="translated">以下路径中的代码已根据MIT（Expat）许可证发布，版权&amp;copy;CAM Gerlach 2019-2020，并受未来独立发行的约束：</target>
        </trans-unit>
        <trans-unit id="e78bb63a768515f4d7bd7470aca0bca61f701b34" translate="yes" xml:space="preserve">
          <source>The goal of Project Mjolnir is to make it easy for PIs or students without a coding background to easily get started gathering and analyzing data from low-cost sensors right away, and allowing those with basic programming experience to easily develop, test and share their own plugins to work with new types of sensors, outputs and more with little or no extra work over a &quot;quick and dirty&quot; approach but major long-term benefits.
The long-term vision is to create an ecosystem of open-source presets, plugins, examples and more for a wide variety of low-cost scientific IoT sensors.</source>
          <target state="translated">Mjolnir项目的目标是让没有编码背景的PI或学生可以轻松地立即开始收集和分析来自低成本传感器的数据,并允许那些有基本编程经验的人轻松地开发、测试和分享他们自己的插件,以与新类型的传感器、输出等一起工作,与 &quot;快速和肮脏 &quot;的方法相比,很少或没有额外的工作,但主要的长期利益。长期愿景是为各种低成本的科学物联网传感器创建一个开源预设、插件、示例等的生态系统。</target>
        </trans-unit>
        <trans-unit id="10e872cab5fb3b580c0b7dfff98cc73a6fd5a69a" translate="yes" xml:space="preserve">
          <source>Then, you need to take a few more steps to get your environment set up: clone the system config package(s) you want to use with Brokkr (replace the example &lt;code&gt;mjolnir-config-template&lt;/code&gt; path with yours), register them, and set up your config and unit information.
&lt;code&gt;SYSTEM_SHORTNAME&lt;/code&gt; is whatever name you want to register the system with in the system file, and &lt;code&gt;UNIT_NUMBER&lt;/code&gt; is the integer number (arbitrary, but should be unique) you want to designate the device you're installing on.</source>
          <target state="translated">然后，您需要采取一些其他步骤来设置环境：克隆要与Brokkr一起使用的系统配置包（将示例 &lt;code&gt;mjolnir-config-template&lt;/code&gt; 路径替换为您的），注册并设置您的配置和单位信息。 &lt;code&gt;SYSTEM_SHORTNAME&lt;/code&gt; 是您要在系统文件中注册系统的名称，而 &lt;code&gt;UNIT_NUMBER&lt;/code&gt; 是要指定要在其上安装的设备的整数（任意，但应该是唯一的）。</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">那么..:</target>
        </trans-unit>
        <trans-unit id="42f822f2b109856b4b6a9dc55420460d9d276977" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.</source>
          <target state="translated">本程序发布的目的是希望它是有用的,但没有任何保证,甚至没有默示的适销性或适合特定用途的保证。更多细节请参见 GNU Lesser General Public License。</target>
        </trans-unit>
        <trans-unit id="acaabdd95d8cc1cd1584cf7bb05e48d8f0ed363d" translate="yes" xml:space="preserve">
          <source>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.</source>
          <target state="translated">本程序是自由软件:你可以根据自由软件基金会发布的GNU Lesser General Public License(GNU较小通用公共许可证)的条款,或者是该许可证的第3版,或者(由你选择)任何更新的版本来重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="90db4de6cf0fe6fc9e7973ae53828c714bdb6c0e" translate="yes" xml:space="preserve">
          <source>Update all packages to latest (&lt;code&gt;apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove&lt;/code&gt;) and reinstall brokkr with all packages (&lt;code&gt;pip uninstall brokkr &amp;amp;&amp;amp; pip install brokkr&lt;/code&gt;)</source>
          <target state="translated">将所有软件包更新到最新版本（ &lt;code&gt;apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove&lt;/code&gt; ），然后重新安装所有软件包的 &lt;code&gt;pip uninstall brokkr &amp;amp;&amp;amp; pip install brokkr&lt;/code&gt; （pip卸载brokkr &amp;amp;&amp;amp; pip install brokkr）</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="2fb41479dc6421d4c643d86f661f2e3684be68d4" translate="yes" xml:space="preserve">
          <source>You can also use this command to remove, update, verify and set default systems with the appropriate arguments, see brokkr configure-system --help``</source>
          <target state="translated">你也可以使用这个命令来删除、更新、验证和设置默认系统,并使用适当的参数,参见brokkr configure-system --help``。</target>
        </trans-unit>
        <trans-unit id="b9f0d03fa5a402a18c38ed6eb7d7ab0e4b5dd9eb" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see &lt;a href=&quot;https://www.gnu.org/licenses/&quot;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.</source>
          <target state="translated">您应该已经与该程序一起收到了GNU通用公共通用许可证的副本。如果没有，请参阅&lt;a href=&quot;https://www.gnu.org/licenses/&quot;&gt;https://www.gnu.org/licenses/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e64d4e68bb2e9025c291a1148c58a88aae8b9191" translate="yes" xml:space="preserve">
          <source>or for a full install of all post-setup tasks, including the config files, firewall access, and (on Linux) serial port access, Brokkr systemd service, and SSH/AutoSSH service and configuration:</source>
          <target state="translated">或所有后设置任务的完整安装,包括配置文件、防火墙访问、(在Linux上)串口访问、Brokkr系统服务、SSH/AutoSSH服务和配置。</target>
        </trans-unit>
        <trans-unit id="ee34e52140cdf4b8a1a9b589b5b22ba65591ef25" translate="yes" xml:space="preserve">
          <source>or, to install a development version:</source>
          <target state="translated">或者,安装一个开发版。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
