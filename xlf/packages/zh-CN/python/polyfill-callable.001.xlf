<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/polyfill-callable/">
    <body>
      <group id="polyfill-callable">
        <trans-unit id="bdf3cbb847c41b0705b2067dc1ed63ea6029dd2a" translate="yes" xml:space="preserve">
          <source>, and polyfill it into the global namespace by using</source>
          <target state="translated">, and polyfill it into the global namespace by using</target>
        </trans-unit>
        <trans-unit id="4f58b8aa74ba48f6dfea8dd53bdb239e04c10688" translate="yes" xml:space="preserve">
          <source>As of this writing on 2018-02-17, this module only has a</source>
          <target state="translated">截至2018-02-17写稿时,该模块只有一个</target>
        </trans-unit>
        <trans-unit id="025d2df253bd0be1198b30bb7cdc7bcddbc3a8ab" translate="yes" xml:space="preserve">
          <source>Attempts to ensure the</source>
          <target state="translated">试图确保</target>
        </trans-unit>
        <trans-unit id="3b7d32d87ffb7c9ba42c6427217418538df32dd2" translate="yes" xml:space="preserve">
          <source>Attempts to ensure the ``callable`` builtin is available.</source>
          <target state="translated">试图确保内置的 &quot;可调用 &quot;是可用的。</target>
        </trans-unit>
        <trans-unit id="16c3301d1c0bcbb879b30266b17df8e35ab73b54" translate="yes" xml:space="preserve">
          <source>If there are other Python implementation versions where it would be
possible to support a polyfill, they might eventually be added here.</source>
          <target state="translated">如果有其他的 Python 实现版本可以支持 polyfill,它们可能最终会被添加到这里。</target>
        </trans-unit>
        <trans-unit id="51d40aaac14c0ccaea9b97f0a54db0850d99c79d" translate="yes" xml:space="preserve">
          <source>If your Python runtime has no</source>
          <target state="translated">如果您的Python运行时没有</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="73adb875d063d4268fc1ebb7886a65a99d861745" translate="yes" xml:space="preserve">
          <source>Just make sure you run this before you run any other code that uses</source>
          <target state="translated">只要确保在运行任何其他使用</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">局限性</target>
        </trans-unit>
        <trans-unit id="d8e782e5cc67f3343aec3d24e1a75a5b03880e9f" translate="yes" xml:space="preserve">
          <source>Most Python versions have a native builtin function called</source>
          <target state="translated">大多数Python版本都有一个本地的内置函数,叫做</target>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="024bf97c7f598a8f6a5f812b03379990ced5dd66" translate="yes" xml:space="preserve">
          <source>On versions of Python where</source>
          <target state="translated">在Python的版本中</target>
        </trans-unit>
        <trans-unit id="d095cbbf05aec7b23716c2571b38268fde3e6d9e" translate="yes" xml:space="preserve">
          <source>On versions without a</source>
          <target state="translated">在不含的版本上</target>
        </trans-unit>
        <trans-unit id="83bf4fc5cbf1bd521994b49843bcae6a3affb2b7" translate="yes" xml:space="preserve">
          <source>The concept behind this module is that it attempts to ensure that the</source>
          <target state="translated">这个模块背后的概念是它试图确保</target>
        </trans-unit>
        <trans-unit id="9f181363c85d7cbe7f0c9e889aa06e8b3c4b9550" translate="yes" xml:space="preserve">
          <source>The current version number is available in the variable</source>
          <target state="translated">当前的版本号可以在变量</target>
        </trans-unit>
        <trans-unit id="36f7a7d3f229cdd2f9d5f35bbcc89af4ba5d61ed" translate="yes" xml:space="preserve">
          <source>The early CPython 3 versions that shipped without</source>
          <target state="translated">早期的CPython 3版本在出厂时并没有采用</target>
        </trans-unit>
        <trans-unit id="8aae3130851215986fcaacbb32ec0ccac62108e4" translate="yes" xml:space="preserve">
          <source>This applies to all modern supported versions of CPython (including
stackless), PyPy, Jython, IronPython, MicroPython, PyPy.js, Brython,
and probably others, but there is a small handful of Python versions
where</source>
          <target state="translated">这适用于所有现代支持的CPython (包括stackless)、PyPy、Jython、IronPython、MicroPython、PyPy.js、Brython等版本,但也有一小部分Python版本,在这些版本中</target>
        </trans-unit>
        <trans-unit id="3a66e35fdd343449ef76fe43f7324db2cf559592" translate="yes" xml:space="preserve">
          <source>This library&amp;rsquo;s version numbers follow the &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;SemVer 2.0.0 specification&lt;/a&gt;.</source>
          <target state="translated">This library&amp;rsquo;s version numbers follow the &lt;a href=&quot;https://semver.org/spec/v2.0.0.html&quot;&gt;SemVer 2.0.0 specification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">版本设计</target>
        </trans-unit>
        <trans-unit id="d4515e588f5114762d7c13dfadc9b2355f18e398" translate="yes" xml:space="preserve">
          <source>You can also catch</source>
          <target state="translated">你也可以抓住</target>
        </trans-unit>
        <trans-unit id="8c86bcd48590740431d11cfb9fc95c2873537059" translate="yes" xml:space="preserve">
          <source>__version__</source>
          <target state="translated">__版__</target>
        </trans-unit>
        <trans-unit id="0ee411f7a610ed476b6271030f36c347b7473708" translate="yes" xml:space="preserve">
          <source>alone.</source>
          <target state="translated">独自一人。</target>
        </trans-unit>
        <trans-unit id="c45ca54f8a11a1b09467013432f266eb02562387" translate="yes" xml:space="preserve">
          <source>as is normal for Python modules.</source>
          <target state="translated">如同正常的Python模块一样。</target>
        </trans-unit>
        <trans-unit id="2e2955400907ae6bd5aac9d7a218bae3910e651f" translate="yes" xml:space="preserve">
          <source>before
it was added back in in CPython 3.2. There we can reimplement it using</source>
          <target state="translated">之前在CPython 3.2中加入了这个功能。在那里我们可以使用</target>
        </trans-unit>
        <trans-unit id="2c83e6db3e25f13ab17276246b39735fc594241c" translate="yes" xml:space="preserve">
          <source>builtin and this code is
unable to polyfill it, it will raise a</source>
          <target state="translated">内建的,而这段代码无法对其进行多角化填充,它将引发一个</target>
        </trans-unit>
        <trans-unit id="9e95147268919858179c3379bc53a7fb730f9080" translate="yes" xml:space="preserve">
          <source>builtin is available.</source>
          <target state="translated">内置有。</target>
        </trans-unit>
        <trans-unit id="dfe8aff9d3651cc4c13ff503a7d381902228b38e" translate="yes" xml:space="preserve">
          <source>builtin is available:</source>
          <target state="translated">内置有。</target>
        </trans-unit>
        <trans-unit id="b48ee8c893c9976232029af9cf338da97daf52f2" translate="yes" xml:space="preserve">
          <source>builtin, on import this will
attempt to inject an equivalent implementation, so that code invoking</source>
          <target state="translated">内建,在导入时,这将尝试注入一个等价的实现,因此,调用</target>
        </trans-unit>
        <trans-unit id="bd1dc6f71297c711fd62c63df1bdbc3f49918cb3" translate="yes" xml:space="preserve">
          <source>builtins</source>
          <target state="translated">内置</target>
        </trans-unit>
        <trans-unit id="021ce54cf4460e3d6551baea02d784522d9a994c" translate="yes" xml:space="preserve">
          <source>callable</source>
          <target state="translated">可调用</target>
        </trans-unit>
        <trans-unit id="0ef2dd144526acd79d2147ce789d295256783f37" translate="yes" xml:space="preserve">
          <source>continues to work.</source>
          <target state="translated">继续工作。</target>
        </trans-unit>
        <trans-unit id="0d8768fe8ed5b3b50f265d1b36511b5e36a8af83" translate="yes" xml:space="preserve">
          <source>ctypes</source>
          <target state="translated">ctypes</target>
        </trans-unit>
        <trans-unit id="63ac7dc5ca30f89a83f7127b59837bbf51f988f9" translate="yes" xml:space="preserve">
          <source>if you&amp;rsquo;d like to gracefully
handle the lack of</source>
          <target state="translated">if you&amp;rsquo;d like to gracefully handle the lack of</target>
        </trans-unit>
        <trans-unit id="01876336dad588a7eb715d0ac11ee77b51b257f3" translate="yes" xml:space="preserve">
          <source>is already available,
importing this doesn&amp;rsquo;t break anything and leaves</source>
          <target state="translated">is already available, importing this doesn&amp;rsquo;t break anything and leaves</target>
        </trans-unit>
        <trans-unit id="c0f427275260ef65d456f854357782f2a753ce2d" translate="yes" xml:space="preserve">
          <source>isn&amp;rsquo;t implemented.</source>
          <target state="translated">isn&amp;rsquo;t implemented.</target>
        </trans-unit>
        <trans-unit id="c1e1e0789ecb47bc71291e0600a85d575cc11503" translate="yes" xml:space="preserve">
          <source>polyfill for:</source>
          <target state="translated">填充物为:</target>
        </trans-unit>
        <trans-unit id="71548b44285756e1856ff1da0f12b010c89f7eb3" translate="yes" xml:space="preserve">
          <source>which checks if the argument is a callable object.</source>
          <target state="translated">它检查参数是否为可调用对象。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
