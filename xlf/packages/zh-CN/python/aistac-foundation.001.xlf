<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/aistac-foundation/">
    <body>
      <group id="aistac-foundation">
        <trans-unit id="a5c6d2ad46a2e210b7aa3e3cc2a532710d8940a9" translate="yes" xml:space="preserve">
          <source>&amp;lt;name&amp;gt;_key</source>
          <target state="translated">&amp;lt;名称&amp;gt; _key</target>
        </trans-unit>
        <trans-unit id="5ee33ef03a5b78dce421fab51637d7a4b78d25db" translate="yes" xml:space="preserve">
          <source>. Likewise
the</source>
          <target state="translated">。同样的</target>
        </trans-unit>
        <trans-unit id="674b9795aad292630b1f71d5d68cbba28b0944cf" translate="yes" xml:space="preserve">
          <source>1&amp;nbsp;&amp;nbsp;&amp;nbsp;What is Project Hadron</source>
          <target state="translated">1什么是强子计划</target>
        </trans-unit>
        <trans-unit id="13095088d3313284c1951208f1c40f516dffc5f9" translate="yes" xml:space="preserve">
          <source>1. Machine Learning Capability Mapping - Separation of capabilities, breaking the machine learning vertical into a set
of decoupled and targeted layers of discrete and refined actions that collectively present a human lead (ethical AI)
base truth to the next set of capabilities. This not only allows improved transparency of, what is, a messy and
sometimes confusing set of discovery orientated coded ideas but also loosely couples and targets activities that are,
generally, complex and specialized into identifiable and discrete capabilities that can be chained as separately
allocated activities.</source>
          <target state="translated">1.机器学习能力图谱--能力的分离,将机器学习纵向分解成一组解耦的、有针对性的层层离散和细化的行动,这些行动共同向下一组能力呈现出人类主导(伦理人工智能)的基础真相。这不仅可以提高透明度,什么是乱七八糟的、有时令人困惑的一套以发现为导向的编码思想,而且还可以将一般来说是复杂的、专门的活动松散地耦合和锁定为可识别的、离散的能力,作为单独分配的活动进行连锁。</target>
        </trans-unit>
        <trans-unit id="f05f4394da2d1d4c93c9019868af944dd0a7d43d" translate="yes" xml:space="preserve">
          <source>2&amp;nbsp;&amp;nbsp;&amp;nbsp;Main features</source>
          <target state="translated">2主要特点</target>
        </trans-unit>
        <trans-unit id="d7ae31f090f44671f31f40899f3c8069300bd2e5" translate="yes" xml:space="preserve">
          <source>2. Parametrized Intent - A unique technique extracting the ideas and thinking of the data scientist from their
discovery code and capturing it as intent with parameters that can be replayed against productionized code and data.
This decoupling and Separation of Concern between data, code and the intent of actions from that code on that data,
considerably improves time to market, code reuse, transparency of actions and the communication of ideas between data
scientists and product delivery specialists.</source>
          <target state="translated">2.参数化意图 ----一种独特的技术,从数据科学家的发现代码中提取出他们的想法和思维,并将其捕捉为带有参数的意图,可以针对生产化的代码和数据进行重放。这种数据、代码和代码对数据的操作意图之间的解耦和分离关注,大大改善了数据科学家和产品交付专家之间的上市时间、代码重用、操作的透明度和想法的沟通。</target>
        </trans-unit>
        <trans-unit id="841dc6b5cae3c9252dd134d2e75eef911a5fbd48" translate="yes" xml:space="preserve">
          <source>3&amp;nbsp;&amp;nbsp;&amp;nbsp;Overview</source>
          <target state="translated">3概述</target>
        </trans-unit>
        <trans-unit id="e697e8e6cfa32211f788af59afa058fc046ed7b5" translate="yes" xml:space="preserve">
          <source>3. Discovery Transitioning - Discovery Transitioning - is a foundation of the sepatation of concerns between data
provisioning and feature selection. As part of the Accelerated ML discovery Vertical, Transitioning is a foundation
base truth facilitating a transparent transition of the raw canonical dataset to a fit-for-purpose canonical dataset
to enable the optimisation of discovery analysis and the identification of features-of-interest, for the data scientist
and created boundary separation of capabilities decoupling the Data Scientist for the Data Engineer. As output it also
provides &amp;lsquo;intelligent Communication&amp;rsquo;, not only to the Data Scientist through canonical fit-for-purpose datasets, but
more generally offers powerful visual discovery tools and artefact generation for production architects, data and
business SME&amp;rsquo;s, Stakeholders and is the initiator of Augmented Knowledge for an enriched and transparent shared view of
the extended data knowledge.</source>
          <target state="translated">3.发现过渡-发现过渡-是数据供应和功能选择之间关注点分离的基础。作为&amp;ldquo;加速的ML发现垂直&amp;rdquo;的一部分，&amp;ldquo;过渡&amp;rdquo;是一个基础知识，可促进原始规范数据集向适合用途的规范数据集的透明过渡，从而能够优化发现分析和识别感兴趣的特征，为数据科学家服务，并创建了功能界限，从而将数据科学家与数据工程师分离。作为输出，它不仅提供&amp;ldquo;智能交流&amp;rdquo;，不仅通过适合用途的规范数据集为数据科学家提供信息，而且更广泛地为生产架构师，数据和商业SME提供强大的视觉发现工具和人工制品生成，利益相关者，并且是扩展知识的发起者，以获取扩展数据知识的丰富而透明的共享视图。</target>
        </trans-unit>
        <trans-unit id="baf42aae5709d3877f1171ee0219c0bbfc5c7bef" translate="yes" xml:space="preserve">
          <source>4&amp;nbsp;&amp;nbsp;&amp;nbsp;Background</source>
          <target state="translated">4背景</target>
        </trans-unit>
        <trans-unit id="9ba986219595a08a3c8836134c08f46ef1ebf422" translate="yes" xml:space="preserve">
          <source>4. Feature Cataloguing &amp;ndash; With cross over skills within machine learning and advanced data heuristics,
investigation identified commonality and separation across customer engagements that particularly challenged our
Ph.D data scientists in their effective delivery of customer success. As a result the project designed and developed
Feature Cataloguing, a machine learning technique of extracting and engineering features and their characteristics
appropriately parameterized for model selection.  This technique implements a juxta view of how features are
characterized and presented to the modelling layer. Traditionally features are directly mapped as a representation
of the underlying data set. Feature Cataloguing treats each individual feature as its own individual set of
characteristics as its representation. The resulting outcome considerably improves experimentation, cross feature
association, even when unrelated in the original data sets, and the reuse of identified features-of-interest across
use case and business domains.</source>
          <target state="translated">4.功能分类-利用机器学习和高级数据启发式技术中的交叉技能，调查确定了客户参与的共性和分离性，这尤其挑战了我们的博士数据科学家如何有效地交付客户成功。结果，该项目设计并开发了Feature Cataloguing，这是一种机器学习技术，用于提取和工程化特征及其特征，并为模型选择适当地设置了参数。该技术实现了特征的表征以及如何将其呈现给建模层的并列视图。传统上，要素直接映射为基础数据集的表示。特征编录将每个单独的特征视为其自己的单独特征集作为其表示。所产生的结果大大改善了实验，跨功能关联（即使在原始数据集中不相关时）以及跨用例和业务域重复使用已识别的感兴趣功能。</target>
        </trans-unit>
        <trans-unit id="cdd47ea44a3c363d7b951e8d5a17e4740554dc1f" translate="yes" xml:space="preserve">
          <source>5&amp;nbsp;&amp;nbsp;&amp;nbsp;Installation</source>
          <target state="translated">5安装</target>
        </trans-unit>
        <trans-unit id="53f5853b2f0024d7927f58d4245dc873d0921713" translate="yes" xml:space="preserve">
          <source>5. Augmented Knowledge - This the ability to capture information on data, activities and the rich stream of subject
matter expertise, injected into the machine learning discovery vertical to provide an Augmented n-view of the model
build. This includes security, sensitivity, data value scaling, dictionary, observations, performance, optimization,
bias, etc. This enriched view of data allows, amongst other things, improved knowledge share, AI explainability,
feature transparency, and accountability that feeds into AI ethics, and insight analysis.</source>
          <target state="translated">5.Augmented Knowledge--这是捕捉数据、活动和丰富的主题专业知识流信息的能力,注入机器学习发现垂直领域,提供模型构建的Augmented n视图。这包括安全性、敏感性、数据值缩放、字典、观测值、性能、优化、偏差等。这种丰富的数据视图可以让,提高知识共享、AI可解释性、特征透明性和责任感,从而反馈到AI伦理、洞察分析中。</target>
        </trans-unit>
        <trans-unit id="34c843cd434032e2b27b45c164ef8c9d57f47b99" translate="yes" xml:space="preserve">
          <source>6&amp;nbsp;&amp;nbsp;&amp;nbsp;Package Overview</source>
          <target state="translated">6包装概述</target>
        </trans-unit>
        <trans-unit id="695f36c3f97ae299bd327f3fb303c2f120a88856" translate="yes" xml:space="preserve">
          <source>6.1&amp;nbsp;&amp;nbsp;&amp;nbsp;AbstractComponent</source>
          <target state="translated">6.1 AbstractComponent</target>
        </trans-unit>
        <trans-unit id="6e2da09f8e1db066421529626d1135139ff8fff2" translate="yes" xml:space="preserve">
          <source>6.2&amp;nbsp;&amp;nbsp;&amp;nbsp;AbstractPropertyManager</source>
          <target state="translated">6.2 AbstractPropertyManager</target>
        </trans-unit>
        <trans-unit id="e851ce8073bb77c422931b852ac8c6e3edd4aece" translate="yes" xml:space="preserve">
          <source>6.3&amp;nbsp;&amp;nbsp;&amp;nbsp;AbstractIntentModel</source>
          <target state="translated">6.3 AbstractIntentModel</target>
        </trans-unit>
        <trans-unit id="2f44cc5a4cb23763964da49156dc86033537473d" translate="yes" xml:space="preserve">
          <source>7&amp;nbsp;&amp;nbsp;&amp;nbsp;Reference</source>
          <target state="translated">7参考</target>
        </trans-unit>
        <trans-unit id="5221fd6253e4309658a7a243e7597b4ae941c70a" translate="yes" xml:space="preserve">
          <source>7.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Python version</source>
          <target state="translated">7.1 Python版本</target>
        </trans-unit>
        <trans-unit id="50cdf766be3211c25033ac0e25435474fbf23ba5" translate="yes" xml:space="preserve">
          <source>7.2&amp;nbsp;&amp;nbsp;&amp;nbsp;GitHub Project</source>
          <target state="translated">7.2 GitHub项目</target>
        </trans-unit>
        <trans-unit id="3ebe69442e6c352eea1888e55b86690ad9c254c1" translate="yes" xml:space="preserve">
          <source>7.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Change log</source>
          <target state="translated">7.3变更记录</target>
        </trans-unit>
        <trans-unit id="584b74517537788646c24a475bd4aadaaecd31d1" translate="yes" xml:space="preserve">
          <source>7.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Licence</source>
          <target state="translated">7.4许可证</target>
        </trans-unit>
        <trans-unit id="d4f3abfcf2fa0029db5e7de668610b3f675f48de" translate="yes" xml:space="preserve">
          <source>7.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Authors</source>
          <target state="translated">7.5作者</target>
        </trans-unit>
        <trans-unit id="677373092ea5f9722d119e21593299344b12cf6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://opengrass.io&quot;&gt;Gigas64&lt;/a&gt;  (&lt;a href=&quot;https://twitter.com/gigas64&quot;&gt;@gigas64&lt;/a&gt;) created aistac-foundation.</source>
          <target state="translated">&lt;a href=&quot;http://opengrass.io&quot;&gt;Gigas64&lt;/a&gt; （&lt;a href=&quot;https://twitter.com/gigas64&quot;&gt;@ gigas64&lt;/a&gt;）创建了aistac基础。</target>
        </trans-unit>
        <trans-unit id="70d24955aa60a155473bb771af3fdf44bfe26fbd" translate="yes" xml:space="preserve">
          <source>Abstract AI Single Task Application Component (AI-STAC) Class for Parameterised Intent containing parameterised
intent registration methods</source>
          <target state="translated">抽象的AI单任务应用组件(AI-STAC)类,用于参数化意图,包含参数化意图的注册方法。</target>
        </trans-unit>
        <trans-unit id="3e08cb986f46c1dd3957928c1440f0548e5b0d45" translate="yes" xml:space="preserve">
          <source>Abstract AI Single Task Application Component (AI-STAC) class that creates a super class for all properties
managers</source>
          <target state="translated">抽象的AI单任务应用组件(AI-STAC)类,为所有属性管理器创建一个超级类。</target>
        </trans-unit>
        <trans-unit id="ddef1c57ef9443143c5c237cdb8cf821a72eb977" translate="yes" xml:space="preserve">
          <source>Abstract AI Single Task Application Component (AI-STAC) component class provides all the basic building blocks
of a components build including property management, augmented knowledge notes and parameterised intent pipeline.</source>
          <target state="translated">抽象的AI单任务应用组件(AI-STAC)组件类提供了组件构建的所有基本构件,包括属性管理、增强的知识笔记和参数化的意图管道。</target>
        </trans-unit>
        <trans-unit id="689993eb16f472bb974d3fa57a0eb608e214a0de" translate="yes" xml:space="preserve">
          <source>AbstractComponent</source>
          <target state="translated">AbstractComponent</target>
        </trans-unit>
        <trans-unit id="d40ca470d9fe192b8be77bdbb5e4acec566cebb4" translate="yes" xml:space="preserve">
          <source>AbstractIntentModel</source>
          <target state="translated">AbstractIntentModel</target>
        </trans-unit>
        <trans-unit id="88efe87f7e08269bd2ec584f63355f637b9e57fd" translate="yes" xml:space="preserve">
          <source>AbstractPropertiesManager</source>
          <target state="translated">摘要属性管理器(AbstractPropertiesManager)</target>
        </trans-unit>
        <trans-unit id="403882d98790b59b630a1fc323c3d87afe27a473" translate="yes" xml:space="preserve">
          <source>As an example concrete implementation of this method:</source>
          <target state="translated">作为本方法的具体实施例。</target>
        </trans-unit>
        <trans-unit id="fcb1a9243ebd2c75fcaebf1bbfad2f0f7cd55e41" translate="yes" xml:space="preserve">
          <source>As an example of a run_pipeline that iteratively updates a canonical with each intent</source>
          <target state="translated">以run_pipeline为例,每一次意图都会迭代更新canonical。</target>
        </trans-unit>
        <trans-unit id="0c9fe9c6505aae2fb405de1b9fd38d042a3a3a0f" translate="yes" xml:space="preserve">
          <source>As an example of an initialisation method</source>
          <target state="translated">以初始化方法为例</target>
        </trans-unit>
        <trans-unit id="ab0e533f9e742e7dbb2a01f35bc7246910ed567e" translate="yes" xml:space="preserve">
          <source>Augmented Intent Single Task Adaptive Components</source>
          <target state="translated">增强型意图单任务自适应组件。</target>
        </trans-unit>
        <trans-unit id="2184c5264fe6f18192e7621ec0db27fb854b77cf" translate="yes" xml:space="preserve">
          <source>Augmented Knowledge</source>
          <target state="translated">增强型知识</target>
        </trans-unit>
        <trans-unit id="e0b8cdfc31df0fb871e325bd701adf4f503893ef" translate="yes" xml:space="preserve">
          <source>BSD-3-Clause: &lt;a href=&quot;https://github.com/project-hadron-cs/aistac-foundation/blob/master/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt;.</source>
          <target state="translated">BSD-3条款：&lt;a href=&quot;https://github.com/project-hadron-cs/aistac-foundation/blob/master/LICENSE.txt&quot;&gt;LICENSE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="791975da55b74adb81a49d117aaca1aad31078ba" translate="yes" xml:space="preserve">
          <source>Born out of the frustration of time constraints and the inability to show business value
within a business expectation, this project aims to provide a set of tools to quickly
produce visual and observational results. It also aims to improve the communication
outputs needed by ML delivery to talk to Pre-Sales, Stakholders, Business SME&amp;rsquo;s, Data SME&amp;rsquo;s
product coders and tooling engineers while still remaining within familiar code paragigms.</source>
          <target state="translated">由于时间限制的困扰以及无法在业务期望范围内显示业务价值，该项目旨在提供一组工具来快速产生视觉和观察结果。它还旨在改善ML交付所需的通信输出，以与售前，Stakholders，Business SME，Data SME的产品编码人员和工具工程师进行对话，同时仍保持熟悉的代码范式。</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">内容</target>
        </trans-unit>
        <trans-unit id="cb96a381f16a6eab9fca4980a12d8b95aa60feef" translate="yes" xml:space="preserve">
          <source>Discovery Transitioning</source>
          <target state="translated">发现过渡</target>
        </trans-unit>
        <trans-unit id="228371874f06ff810c6eaf9e872ab6cdbc638a16" translate="yes" xml:space="preserve">
          <source>Feature Cataloguing</source>
          <target state="translated">专题目录</target>
        </trans-unit>
        <trans-unit id="4cf11f2337246465d9f8d52337c3960f2b5cfb82" translate="yes" xml:space="preserve">
          <source>For convenience there are two Factory Initialisation methods available</source>
          <target state="translated">为方便起见,有两种工厂初始化方法可供选择。</target>
        </trans-unit>
        <trans-unit id="28f378ad68f358211656840a2db3d2fcc3b61e2d" translate="yes" xml:space="preserve">
          <source>For example if we were using an AWS S3 where the schema is s3:// the Factory method be similar to:</source>
          <target state="translated">例如,如果我们使用的是AWS S3,其中的模式是s3://工厂方法类似于。</target>
        </trans-unit>
        <trans-unit id="f47f1874656a22f66a4b07d6646a69594a5bb322" translate="yes" xml:space="preserve">
          <source>Here is a default example of an initialisation method:</source>
          <target state="translated">这里是一个默认的初始化方法的例子。</target>
        </trans-unit>
        <trans-unit id="2d86caf30d0c1b4620b68fb31d32bf006065fd64" translate="yes" xml:space="preserve">
          <source>In addition the need to remove the opaque nature of the machine learning end-to-end required better transparency and
traceability, to better inform to the broadest of interested parties and be able to adapt without leaving being the
code &amp;lsquo;sludge&amp;rsquo; of redundant ideas. Project Hadron is a disruptive innovation, changing the way we approach the
challenges of Machine Learning and Augmented Inelegance, introduces the ideas of &amp;lsquo;Single Task Adaptive Component&amp;rsquo;
around the core concept of &amp;lsquo;Parameterised Intent&amp;rsquo;</source>
          <target state="translated">此外，需要消除端到端机器学习的不透明特性，这需要更好的透明性和可追溯性，以便更好地通知最广泛的相关方，并且能够适应而不会成为多余想法的代码&amp;ldquo;污点&amp;rdquo;。 Hadron项目是一项颠覆性创新，改变了我们应对机器学习和增强型优雅挑战的方式，围绕&amp;ldquo;参数化意图&amp;rdquo;的核心概念引入了&amp;ldquo;单任务自适应组件&amp;rdquo;的思想</target>
        </trans-unit>
        <trans-unit id="f4d8d0c50aeb55934d4345ef3dbd42aef73ba564" translate="yes" xml:space="preserve">
          <source>Machine Learning Capability Mapping</source>
          <target state="translated">机器学习能力图谱</target>
        </trans-unit>
        <trans-unit id="4aaab7e45d60d8771ea82f58c210864d267af4df" translate="yes" xml:space="preserve">
          <source>More complex</source>
          <target state="translated">更复杂</target>
        </trans-unit>
        <trans-unit id="b0b968f930a2fe0f1a460631e5afb02a1019e96d" translate="yes" xml:space="preserve">
          <source>Parametrised Intent</source>
          <target state="translated">参数化意图</target>
        </trans-unit>
        <trans-unit id="866a1ffbcb2a016111dac6020436b0f953d5aff0" translate="yes" xml:space="preserve">
          <source>Project Hadron is a change of approach in terms of improving productivity of the data
scientists. This approach deconstructs the machine learning discovery vertical into a set of capabilities, ideas and
knowledge.  It presents a completely novel approach to the traditional process automation and model wrapping that is
broadly offered as a solution to solve the considerable challenges that currently restrict the effectiveness of
machine learning in the enterprise business.</source>
          <target state="translated">在提高数据科学家的生产力方面,Project Hadron是一种方法的改变。这种方法将机器学习发现垂直领域解构为一套能力、想法和知识。它对传统的流程自动化和模型包装提出了一种全新的方法,广泛地提供了一种解决方案,以解决目前限制机器学习在企业业务中的有效性的相当大的挑战。</target>
        </trans-unit>
        <trans-unit id="88b4b20002cf3fb615168325b357eee7751139f0" translate="yes" xml:space="preserve">
          <source>Project Hadron is based on &amp;lsquo;Augmented Intent - Single Task Adaptive Components&amp;rsquo; (AI-STAC) is a unique approach to
data recovery, discovery, synthesis and modeling that innovates the approach to data science and it&amp;rsquo;s transition to
production. it&amp;rsquo;s origins came from an incubator project that shadowed a team of Ph.D. data scientists in connection
with the development and delivery of machine learning initiatives to define measurable benefit propositions for
customer success. From this, a number of observable &amp;lsquo;capabilities&amp;rsquo; were identified as unique and separate concerns.
The challenges of the data scientist, and in turn the production teams, were to effectively leveraging that separation
of concern and distribute and loosely couple the specialist capability needs to the appropriate skills set.</source>
          <target state="translated">Hadron项目基于&amp;ldquo;增强的意图-单任务自适应组件&amp;rdquo;（AI-STAC），是一种用于数据恢复，发现，综合和建模的独特方法，该方法创新了数据科学方法并向生产过渡。它的起源来自一个孵化器项目，该项目使一个博士团队蒙上了阴影。数据科学家，负责开发和交付机器学习计划，以定义可衡量的客户成功提议。由此可见，许多可观察到的&amp;ldquo;能力&amp;rdquo;被确定为独特且独立的关注点。数据科学家以及生产团队的挑战是有效地利用关注点的分离，并将专家的能力需求与适当的技能组合进行松散耦合。</target>
        </trans-unit>
        <trans-unit id="2fd4fa0c71446cd8cfb5d7e25e51865d87981710" translate="yes" xml:space="preserve">
          <source>Python 2.6 and 2.7 are not supported nor is Python 3.5. Although Python 3.6 is supported, it is recommended to install</source>
          <target state="translated">不支持 Python 2.6 和 2.7,也不支持 Python 3.5。虽然支持 Python 3.6,但建议安装</target>
        </trans-unit>
        <trans-unit id="3f095aefc4f5ecd63cfbd3f5ce2e22c4bafac5f1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/project-hadron/aistac-foundation/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;https://github.com/project-hadron/aistac-foundation/blob/master/CHANGELOG.rst&quot;&gt;CHANGELOG&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="3584de7b8f56d8214030eba6561ff1bc74d09264" translate="yes" xml:space="preserve">
          <source>The Class initialisation is abstracted and is the only abstracted method. A concrete implementation of the
overloaded</source>
          <target state="translated">Class初始化是抽象的,是唯一的抽象方法。具体实现重载的</target>
        </trans-unit>
        <trans-unit id="8d9e27ad1067ef3e67b45519ac870151f571a3e5" translate="yes" xml:space="preserve">
          <source>The best way to install this package is directly from the Python Package Index repository using pip</source>
          <target state="translated">安装这个包的最好方法是直接从Python包索引仓库中使用pip</target>
        </trans-unit>
        <trans-unit id="ba449176d21e12f0b21747267e90a66168d9bb29" translate="yes" xml:space="preserve">
          <source>The following is a code snippet of setting a ConnectorContract and loading its content</source>
          <target state="translated">以下是一个设置ConnectorContract和加载其内容的代码片段</target>
        </trans-unit>
        <trans-unit id="8a86eeedbf5b7cc4ac766b2861994b9e986f6ee8" translate="yes" xml:space="preserve">
          <source>The package looks to build a set of outputs as part of standard data wrangling and ML exploration
that, by their nature, are familiar tools to the various reliant people and processes. For example
Data dictionaries for SME&amp;rsquo;s, Visual representations for clients and stakeholders and configuration
contracts for architects, tool builders and data ingestion.</source>
          <target state="translated">该软件包希望构建一组输出，作为标准数据整理和ML探索的一部分，从本质上来说，它们是各种依赖人员和流程的熟悉工具。例如，中小型企业的数据字典，客户和利益相关者的视觉表示以及架构师，工具制造商和数据提取的配置合同。</target>
        </trans-unit>
        <trans-unit id="4633582420520921b0fe54d53d8d1e5c492149ee" translate="yes" xml:space="preserve">
          <source>The property manager is not responsible for persisting the properties but provides the methods to load and persist
its in memory structure. To initialise the load and persist a ConnectorContract must be set up.</source>
          <target state="translated">属性管理器不负责持久化属性,但提供了加载和持久化其内存结构的方法。为了初始化加载和持久化,必须设置一个ConnectorContract。</target>
        </trans-unit>
        <trans-unit id="fe1cacb6ab711e06c879496343eb4d54a89f3d4b" translate="yes" xml:space="preserve">
          <source>To achieve this, the project offers advanced and specialized programming methods that are unique in approach and novel
while maintaining familiarity within common tooling can be identified in four constructs.</source>
          <target state="translated">为了实现这一目标,该项目提供了先进的和专门的编程方法,这些方法在方法上是独特的和新颖的,同时在常见的工具中保持熟悉性可以在四个构造中确定。</target>
        </trans-unit>
        <trans-unit id="11888901be7cabb0a9d9ddd688aed7497d4d4fd0" translate="yes" xml:space="preserve">
          <source>To implement a new remote class Factory Method follow the method naming convention &amp;lsquo;_from_remote_&amp;lt;schema&amp;gt;()&amp;rsquo;
where &amp;lt;schema&amp;gt; is the uri schema name. this method should be a @classmethod and return a tuple of
module_name and handler.</source>
          <target state="translated">要实现新的远程类Factory Method，请遵循方法命名约定'_from_remote_ &amp;lt;schema&amp;gt;（）'，其中&amp;lt;schema&amp;gt;是uri模式名称。此方法应为@classmethod，并返回一个模块名和处理程序的元组。</target>
        </trans-unit>
        <trans-unit id="6bf4049bcfea2f5e04573401ff2b05cf801f81d9" translate="yes" xml:space="preserve">
          <source>When using the property manager it will not automatically persist its properties and must be explicitely managed in
the component class. This removes the persist decision making away from the property manager. To persist the
properties use the method call</source>
          <target state="translated">当使用属性管理器时,它不会自动持久化其属性,必须在组件类中明确管理。这就将持久化决策从属性管理器中移除。要持久化属性,请使用方法调用</target>
        </trans-unit>
        <trans-unit id="1939f247b3ae06244a8d50fa7dabbcc975c6fc4c" translate="yes" xml:space="preserve">
          <source>__init__</source>
          <target state="translated">__在里面__</target>
        </trans-unit>
        <trans-unit id="c0f0a333afe51fe39af27a80ab08125f6e8c40f4" translate="yes" xml:space="preserve">
          <source>_init_properties(...)</source>
          <target state="translated">_init_properties（...）</target>
        </trans-unit>
        <trans-unit id="6bb80fff9fd27f82a0d5cc30ad4dbd8f28388c90" translate="yes" xml:space="preserve">
          <source>_intent_builder(...)</source>
          <target state="translated">_intent_builder（...）</target>
        </trans-unit>
        <trans-unit id="ece5d61cd3c036a551beae1b0c03214c96ebdc74" translate="yes" xml:space="preserve">
          <source>_set_intend_signature(...)</source>
          <target state="translated">_set_intend_signature（...）</target>
        </trans-unit>
        <trans-unit id="915032717c67e84b7459ee925a622289b45be5c5" translate="yes" xml:space="preserve">
          <source>adds a catalog key to the restricted catalog keys.</source>
          <target state="translated">将目录密钥添加到受限制的目录密钥中。</target>
        </trans-unit>
        <trans-unit id="df5431f2014b80f85c8b367e58d23476ba37b343" translate="yes" xml:space="preserve">
          <source>adds a key
property reference to the root of the properties and can be referenced directly with</source>
          <target state="translated">在属性的根部添加了一个关键属性引用,并且可以直接使用</target>
        </trans-unit>
        <trans-unit id="27e9c1869efe03216e760f53204f1399cfbd0d70" translate="yes" xml:space="preserve">
          <source>against the latest Python 3.7&amp;gt; whenever possible.
Python 3 is the default for Homebrew installations starting with version 0.9.4.</source>
          <target state="translated">尽可能使用最新的Python 3.7&amp;gt;。从版本0.9.4开始，Python 3是Homebrew安装的默认选项。</target>
        </trans-unit>
        <trans-unit id="b6934de966153c6aa596b4841ccc0bb70f7e356e" translate="yes" xml:space="preserve">
          <source>aistac-foundation</source>
          <target state="translated">Aistac-Foundation</target>
        </trans-unit>
        <trans-unit id="d401c2d007d34f81592fb9a0acf78ec67b25dc0c" translate="yes" xml:space="preserve">
          <source>aistac-foundation: &lt;a href=&quot;https://github.com/project-hadron/aistac-foundation&quot;&gt;https://github.com/project-hadron/aistac-foundation&lt;/a&gt;.</source>
          <target state="translated">aistac-foundation：&lt;a href=&quot;https://github.com/project-hadron/aistac-foundation&quot;&gt;https&lt;/a&gt; : //github.com/project-hadron/aistac-foundation。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="c371d021e913ff51464256510dd93eb4ddfd4912" translate="yes" xml:space="preserve">
          <source>base.primary_key</source>
          <target state="translated">base.primary_key</target>
        </trans-unit>
        <trans-unit id="52c8f5812c77efd43677e7bffd110b9b547ac28d" translate="yes" xml:space="preserve">
          <source>base.secondary_key</source>
          <target state="translated">base.secondary_key</target>
        </trans-unit>
        <trans-unit id="e38efa87e9cdad2f184e3068e995a9db2160d0f0" translate="yes" xml:space="preserve">
          <source>boolean and a</source>
          <target state="translated">布尔型和</target>
        </trans-unit>
        <trans-unit id="6d0314e16634e1f851b1ba2db14d95ad5ddaeee3" translate="yes" xml:space="preserve">
          <source>class is a foundation class for the component build. It provides an encapsulated view of
the Property Management and Parameterised Intent</source>
          <target state="translated">类是组件构建的基础类。它提供了属性管理和参数化意图的封装视图。</target>
        </trans-unit>
        <trans-unit id="f366b0b1f8c4ea779affc513922a5d05e9ff540e" translate="yes" xml:space="preserve">
          <source>constructs, where a grouping of keys might be desirable, passing a dictionary of name
value pairs as part of the list allows a root base to group related next level keys. For example</source>
          <target state="translated">构造,在这种情况下,键的分组可能是可取的,传递一个名称值对的字典作为列表的一部分,允许根基对相关的下一级键进行分组。例如</target>
        </trans-unit>
        <trans-unit id="733acbda533c96f5a818f1efa1b9220f8e741eef" translate="yes" xml:space="preserve">
          <source>default_intent_level</source>
          <target state="translated">default_intent_level</target>
        </trans-unit>
        <trans-unit id="1fcc919f7e1d3390dd6d17ac725d78b46a3253fd" translate="yes" xml:space="preserve">
          <source>default_save_intent</source>
          <target state="translated">default_save_intent</target>
        </trans-unit>
        <trans-unit id="11ab8daec55f9956e073ab0d05f1a95ed457d4d3" translate="yes" xml:space="preserve">
          <source>facilitates the Parameterised Intent, giving the base methods to record and replay intent.</source>
          <target state="translated">促进了参数化意图,给出了记录和重放意图的基础方法。</target>
        </trans-unit>
        <trans-unit id="d25e94af8c2c8921363fc78b1d42665b8c16244f" translate="yes" xml:space="preserve">
          <source>facilitates the management of all the contract properties  including that of the
connector handlers, parameterised intent and Augmented Knowledge</source>
          <target state="translated">方便管理所有的合同属性,包括连接器处理程序、参数化意图和增强知识的属性。</target>
        </trans-unit>
        <trans-unit id="12f8efe6978bdc7fc400fb035c9a2a19a7717e1d" translate="yes" xml:space="preserve">
          <source>for this construct. The</source>
          <target state="translated">为这个结构。的</target>
        </trans-unit>
        <trans-unit id="c9a71f07696c42e051e1385147ebcdd7984a31a3" translate="yes" xml:space="preserve">
          <source>from_env(...)</source>
          <target state="translated">from_env(...)</target>
        </trans-unit>
        <trans-unit id="87feb63014fa0c7ed04680616bab7226f6a52b08" translate="yes" xml:space="preserve">
          <source>from_uri(...)</source>
          <target state="translated">from_uri(...)</target>
        </trans-unit>
        <trans-unit id="8fb6bb6d249572bdbf89928f67eddc5f88e10ea1" translate="yes" xml:space="preserve">
          <source>if you want to upgrade your current version then using pip</source>
          <target state="translated">如果你想升级你当前的版本,那么使用pip?</target>
        </trans-unit>
        <trans-unit id="bcc1c22721415c54682c50f5c4b2481ebe8aca8f" translate="yes" xml:space="preserve">
          <source>in order to define the run pattern for the component task</source>
          <target state="translated">以定义组件任务的运行模式。</target>
        </trans-unit>
        <trans-unit id="bf080f7907000124f8e81cf154b25d0715764c15" translate="yes" xml:space="preserve">
          <source>intent_param_exclude</source>
          <target state="translated">intent_param_exclude</target>
        </trans-unit>
        <trans-unit id="3f784f49502435a02d4eac52c8df692e5d493a2e" translate="yes" xml:space="preserve">
          <source>is an abstracted method
that defines the run pipeline of the intent.</source>
          <target state="translated">是一个抽象的方法,定义了意图的运行管道。</target>
        </trans-unit>
        <trans-unit id="1547d3cbfebe55146e18a64e35d37c4e71ab60ae" translate="yes" xml:space="preserve">
          <source>it is creating a construct initialisation to allow for the control and definition of an</source>
          <target state="translated">它正在创建一个结构初始化,以允许控制和定义一个新的结构。</target>
        </trans-unit>
        <trans-unit id="f11c10413aab69c09237cd85b184f6c4a1fc1b54" translate="yes" xml:space="preserve">
          <source>knowledge_key</source>
          <target state="translated">知识钥匙</target>
        </trans-unit>
        <trans-unit id="d4089c732d5b338cd66e8b11f7ee8d02933d5ae3" translate="yes" xml:space="preserve">
          <source>list,</source>
          <target state="translated">列表:</target>
        </trans-unit>
        <trans-unit id="062ec143b012d7846fd249d20148850c49670939" translate="yes" xml:space="preserve">
          <source>manages the</source>
          <target state="translated">管理</target>
        </trans-unit>
        <trans-unit id="89b5453393be011c28304677631c787cbf6fd4c4" translate="yes" xml:space="preserve">
          <source>methods to set the properties connector</source>
          <target state="translated">方法来设置连接器的属性</target>
        </trans-unit>
        <trans-unit id="126dc2cb6ed2eaa206f6222d59a4410d966d3c2b" translate="yes" xml:space="preserve">
          <source>package install</source>
          <target state="translated">包安装</target>
        </trans-unit>
        <trans-unit id="579c681d2addfe864a7282487d529bf4a36cb68b" translate="yes" xml:space="preserve">
          <source>persist_properties()</source>
          <target state="translated">persist_properties()</target>
        </trans-unit>
        <trans-unit id="2a68b6131c574194e46a97c3b83455bad8cce450" translate="yes" xml:space="preserve">
          <source>root_key</source>
          <target state="translated">root_key</target>
        </trans-unit>
        <trans-unit id="ad79d34bf406ac2b66ff0f6c9d52a9654c83369d" translate="yes" xml:space="preserve">
          <source>run_intent_pipeline(...)</source>
          <target state="translated">run_intent_pipeline(...)</target>
        </trans-unit>
        <trans-unit id="9cbdbd87569c1ee9c9f2fcee7ecc59f6481dd817" translate="yes" xml:space="preserve">
          <source>the
second being an abstract method. This factory method initialises the concrete PropertyManager and IntentModel
classes and should use the parent</source>
          <target state="translated">第二个是一个抽象方法。这个工厂方法初始化了具体的PropertyManager和IntentModel类,并且应该使用父类的</target>
        </trans-unit>
        <trans-unit id="befad9abb9a5375db8e47e1d73f1ce1460d081e2" translate="yes" xml:space="preserve">
          <source>to the list of keys.</source>
          <target state="translated">到键的列表中。</target>
        </trans-unit>
        <trans-unit id="345c822266c73d960e7e049d7d44d3fac7c7ec19" translate="yes" xml:space="preserve">
          <source>value.</source>
          <target state="translated">价值。</target>
        </trans-unit>
        <trans-unit id="8244267d76ea66adb3d3dc4686a1ee8a22a782ab" translate="yes" xml:space="preserve">
          <source>would add</source>
          <target state="translated">会加</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
