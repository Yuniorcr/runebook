<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dkimpy/">
    <body>
      <group id="dkimpy">
        <trans-unit id="8d3a086dffca43ad509cc1ba3ccf3318d8e9d04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;python2.7 ./testarc.py sign runners/arcsigntest.py&lt;/code&gt;&lt;code&gt;python2.7 ./testarc.py validate runners/arcverifytest.py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;python2.7 ./testarc.py sign runners/arcsigntest.py&lt;/code&gt; &lt;code&gt;python2.7 ./testarc.py validate runners/arcverifytest.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc0f6b52af9dad59773440644b7aa4d7fc9369e0" translate="yes" xml:space="preserve">
          <source>A non-tlsrpt signed with a key record with s=tlsrpt won't verify.  Since the
service type (s=) is optional in the DKIM public key record, it is not
required by RFC 8460.  When checking for a tlsrpt signature, set the tlsrpt=
flag when verifying the signature:</source>
          <target state="translated">用s=tlsrpt的密钥记录签署的非tlsrpt将无法验证。由于服务类型(s=)在DKIM公钥记录中是可选的,所以RFC 8460不要求它。在检查tlsrpt签名时,验证签名时设置tlsrpt=标志。</target>
        </trans-unit>
        <trans-unit id="11e6893885b0568469a52a9f24d8217239c2d375" translate="yes" xml:space="preserve">
          <source>ARC (Authenticated Receive Chain)</source>
          <target state="translated">ARC(认证接收链</target>
        </trans-unit>
        <trans-unit id="f8ef5951b6b04fb2e2752cd47024b392d06fb952" translate="yes" xml:space="preserve">
          <source>ASYNC SUPPORT</source>
          <target state="translated">ASYNC支持</target>
        </trans-unit>
        <trans-unit id="aca6e1554e0e3b9b985f937f066a01451158ca5e" translate="yes" xml:space="preserve">
          <source>Alternatively, if you have testrepository installed:</source>
          <target state="translated">或者,如果你安装了testrepository。</target>
        </trans-unit>
        <trans-unit id="e77ebc34423221e8ef95c9546dbcb813a3d8700c" translate="yes" xml:space="preserve">
          <source>An online version of the package documentation for the most recent release can
be found at:</source>
          <target state="translated">最新版本的软件包文档的在线版本可以在下面找到。</target>
        </trans-unit>
        <trans-unit id="ce8a3fd464ba3c0c7f6a9a8b0b44dac95d817624" translate="yes" xml:space="preserve">
          <source>As of 0.6.0, all tests pass for both python2.7 and python3. The test suite
ships with test runners for dkimpy.  After downloading the test suite, you
can run the signing and validation tests like this:</source>
          <target state="translated">从0.6.0开始,所有测试都通过了python2.7和python3的测试。该测试套件附带了 dkimpy 的测试运行程序。下载测试套件后,你可以像这样运行签名和验证测试。</target>
        </trans-unit>
        <trans-unit id="a3dec25d5698a95a2aa3f1369f43c5952e450174" translate="yes" xml:space="preserve">
          <source>As of version 0.6.0, dkimpy provides experimental support for ARC (Authenticated
Received Chain).  See RFC 8617 for the current version of ARC:</source>
          <target state="translated">从0.6.0版本开始,dkimpy提供了对ARC(Authenticated Received Chain)的实验性支持。关于ARC的当前版本,请参见RFC 8617。</target>
        </trans-unit>
        <trans-unit id="f389fc5f7b8a2b5dda9548a6d0045f21462eb523" translate="yes" xml:space="preserve">
          <source>As of version 0.7, experimental signing and verifying of DKIM Ed25519
signatures is supported as described in draft-ietf-dcrup-dkim-crypto:</source>
          <target state="translated">从0.7版本开始,支持DKIM Ed25519签名的实验性签名和验证,如draft-ietf-dcrup-dkim-crypto中所述。</target>
        </trans-unit>
        <trans-unit id="0a6ddba6491f62e7c1b97ba155889d2d911c480b" translate="yes" xml:space="preserve">
          <source>As of version 0.7, the dkimpy defaults largely support these requirements.</source>
          <target state="translated">从0.7版本开始,dkimpy默认值基本支持这些要求。</target>
        </trans-unit>
        <trans-unit id="59328b3f4d6903db2528edd2f47886a5880c85a4" translate="yes" xml:space="preserve">
          <source>As of version 1.0, an alternative to dkim.verify for use in an async
environment is provied.  It requires aiodns, &lt;a href=&quot;https://pypi.org/project/aiodns/&quot;&gt;https://pypi.org/project/aiodns/&lt;/a&gt;.
Here is a simple example of dkim.verify_async usage:</source>
          <target state="translated">从1.0版开始，提供了dkim.verify的替代方法，供在异步环境中使用。它需要aiodns，&lt;a href=&quot;https://pypi.org/project/aiodns/&quot;&gt;https:&lt;/a&gt; //pypi.org/project/aiodns/ 。这是dkim.verify_async用法的一个简单示例：</target>
        </trans-unit>
        <trans-unit id="ce0c28fb1b1b61540fd3e229db11ad5f78ce4671" translate="yes" xml:space="preserve">
          <source>As of version 1.0, the RFC 8460 tlsrpt service type is supported:</source>
          <target state="translated">从1.0版本开始,支持RFC 8460 tlsrpt服务类型。</target>
        </trans-unit>
        <trans-unit id="44d429f652912126866fef5f933aa37deb70bb54" translate="yes" xml:space="preserve">
          <source>Both DKIM ed25519 and ARC are now considered stable (no longer experimantal).</source>
          <target state="translated">DKIM ed25519和ARC现在都被认为是稳定的(不再是实验性的)。</target>
        </trans-unit>
        <trans-unit id="bcc2a38a09252bcaee19abe06a73826b80af8197" translate="yes" xml:space="preserve">
          <source>Bug reports may be submitted to the bug tracker for the dkimpy project on
launchpad.</source>
          <target state="translated">错误报告可以提交到 launchpad 上的 dkimpy 项目的错误跟踪器。</target>
        </trans-unit>
        <trans-unit id="f263fd820c8e6435c6f63c52c018c23fb95a54a3" translate="yes" xml:space="preserve">
          <source>DKIM (DomainKeys Identified Mail), ARC (Authenticated Receive Chain), and TLSRPT (TLS Report) email signing and verification</source>
          <target state="translated">DKIM(DomainKeys Identified Mail)、ARC(Authenticated Receive Chain)和TLSRPT(TLS Report)邮件签名和验证。</target>
        </trans-unit>
        <trans-unit id="ec9fadb3d4e74c3f8498356ae70d7e1a22f4bd72" translate="yes" xml:space="preserve">
          <source>DKIM RSA MODERNIZATION (RFC 8301)</source>
          <target state="translated">DKIM RSA MODERNIZATION (RFC 8301)</target>
        </trans-unit>
        <trans-unit id="e1214415c84a58cfd9aa22a1f3f96e8a7cdffb15" translate="yes" xml:space="preserve">
          <source>DKIM SCRIPTS</source>
          <target state="translated">DKIM条款</target>
        </trans-unit>
        <trans-unit id="96cc00d75846a718bd722cef8a33a50a6d0f5535" translate="yes" xml:space="preserve">
          <source>DOCUMENTATION</source>
          <target state="translated">文件</target>
        </trans-unit>
        <trans-unit id="bd59b56eac0dd84f3f89df05a9075965e7765103" translate="yes" xml:space="preserve">
          <source>Dependencies will be automatically included for normal DKIM usage.  The
extras_requires feature 'ed25519' will add the dependencies needed for signing
and verifying using the new DCRUP ed25519-sha256 algorithm.  The
extras_requires feature 'ARC' will add the extra dependencies needed for ARC.
Similarly, extras_requires feature 'asyncio' will add the extra dependencies
needed for asyncio.</source>
          <target state="translated">在正常的DKIM使用中会自动包含依赖性。extras_requires 功能'ed25519'将添加使用新的 DCRUP ed25519-sha256 算法进行签名和验证所需的依赖性。extras_requires 特性 'ARC' 将添加 ARC 所需的额外依赖性。同样,extras_requires特性'asyncio'将增加asyncio所需的额外依赖性。</target>
        </trans-unit>
        <trans-unit id="a849d1a30c8b30689e4bee6c0a3b115989082d3d" translate="yes" xml:space="preserve">
          <source>ED25519 (RFC 8463) SUPPORT</source>
          <target state="translated">ED25519(RFC 8463)支持</target>
        </trans-unit>
        <trans-unit id="489edc9160737f1f5321c8439e0d90f85d95108c" translate="yes" xml:space="preserve">
          <source>FEEDBACK</source>
          <target state="translated">意见反馈</target>
        </trans-unit>
        <trans-unit id="a8d32bf50a033f9c0c87f1e48c4003946cbdf5d5" translate="yes" xml:space="preserve">
          <source>Friendly fork of:
&lt;a href=&quot;http://hewgill.com/pydkim/&quot;&gt;http://hewgill.com/pydkim/&lt;/a&gt;</source>
          <target state="translated">的友好分支：&lt;a href=&quot;http://hewgill.com/pydkim/&quot;&gt;http&lt;/a&gt;： //hewgill.com/pydkim/</target>
        </trans-unit>
        <trans-unit id="9d09dba09f4e15504911bf4a5e67189762904dd8" translate="yes" xml:space="preserve">
          <source>INSTALLATION</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="0270ca97abe5bddc53ed95fb7179da4406621a18" translate="yes" xml:space="preserve">
          <source>INTRODUCTION</source>
          <target state="translated">导言</target>
        </trans-unit>
        <trans-unit id="71cf1d137d52afa699a3484264318134b460e560" translate="yes" xml:space="preserve">
          <source>If tlsrpt='strict', only public key records with s=tlsrpt will be considered
valid.  If set to tlsrpt=True, the service type is not required, but other
RFC 8460 requirements are applied.</source>
          <target state="translated">如果tlsrpt='strict',只有s=tlsrpt的公钥记录才会被视为有效。如果设置为tlsrpt=True,则不需要服务类型,但会应用其他RFC 8460要求。</target>
        </trans-unit>
        <trans-unit id="74d03048827618ae51470b9ae637726fb980ffb6" translate="yes" xml:space="preserve">
          <source>In addition to arcsign and arcverify, the dkim module now provides
arc_sign and arc_verify functions as well as an ARC class.</source>
          <target state="translated">除了arcsign和arcverify之外,dkim模块现在还提供了arc_sign和arc_verify函数以及一个ARC类。</target>
        </trans-unit>
        <trans-unit id="0dc0921e896028f9658fbbee5267443a03b4aaa9" translate="yes" xml:space="preserve">
          <source>In version 0.9.0, the default set of header fields that are oversigned was
changed from 'from', 'subject', 'date' to 'from' to reduce fragility of
signatures.  To restore the previous behavior, you can add them back after
instantiating your DKIM class using the add_frozen function as shown in the
following example:</source>
          <target state="translated">在0.9.0版本中,为了降低签名的脆弱性,默认的超签头字段集从 &quot;from&quot;、&quot;subject&quot;、&quot;date &quot;改为 &quot;from&quot;。要恢复以前的行为,你可以在实例化你的DKIM类后使用add_frozen函数将它们添加回来,如下例所示。</target>
        </trans-unit>
        <trans-unit id="ab969599892cadb52ed87bf3fab0cd05f5a80dd2" translate="yes" xml:space="preserve">
          <source>It is possible to override the minimum key size to a lower value, but this is
strongly discouraged.  As of 2018, keys much smaller than the minimum are not
difficult to factor.</source>
          <target state="translated">可以将最小密钥大小覆盖到一个较低的值,但强烈不鼓励这样做。截至2018年,比最小值小得多的密钥不难系数。</target>
        </trans-unit>
        <trans-unit id="d12b0674e1b8bc9ae3fb271e0e358c2d83fa64b6" translate="yes" xml:space="preserve">
          <source>It removed use of rsa-sha1.</source>
          <target state="translated">它取消了rsa-sha1的使用。</target>
        </trans-unit>
        <trans-unit id="24fcd5145fab2b2b850be3672cf33e0107a335c1" translate="yes" xml:space="preserve">
          <source>It set the minimum valid RSA key size to 1024 bits.</source>
          <target state="translated">它将最小有效的RSA密钥大小设置为1024位。</target>
        </trans-unit>
        <trans-unit id="f065b8a3f0869a873c16354cafdc505f7f200ec1" translate="yes" xml:space="preserve">
          <source>PyNaCl.  Needed for use of ed25519 capability.</source>
          <target state="translated">PyNaCl。需要使用ed25519能力。</target>
        </trans-unit>
        <trans-unit id="cef2f67f3f2fc797a473c66a5d02939002e43852" translate="yes" xml:space="preserve">
          <source>Python 2.x &amp;gt;= 2.7, or Python 3.x &amp;gt;= 3.5.  Recent versions have not been
tested on python &amp;lt; 2.7 or python3 &amp;lt; 3.4, but may still work on python2.6
and python 3.1 - 3.3.</source>
          <target state="translated">Python 2.x&amp;gt; = 2.7或Python 3.x&amp;gt; = 3.5。最新版本尚未在python &amp;lt;2.7或python3 &amp;lt;3.4上进行过测试，但仍可能在python2.6和python 3.1-3.3上运行。</target>
        </trans-unit>
        <trans-unit id="5f121318efb144a8b6001419391a5b20c6c3f189" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS</source>
          <target state="translated">要求</target>
        </trans-unit>
        <trans-unit id="ad6a3aaa6803d6890b4d7e8ddea3c0ee7043bee3" translate="yes" xml:space="preserve">
          <source>RFC8301 updated DKIM requirements in two ways:</source>
          <target state="translated">RFC8301从两个方面更新了DKIM要求。</target>
        </trans-unit>
        <trans-unit id="cb73eb0155af5a3da3bb4a63646b40201ab650c4" translate="yes" xml:space="preserve">
          <source>TESTING</source>
          <target state="translated">测试</target>
        </trans-unit>
        <trans-unit id="13140b8510e3ac35b8de3de35a3e066617f9bc67" translate="yes" xml:space="preserve">
          <source>TLSRPT (TLS Report)</source>
          <target state="translated">TLSRPT(TLS报告</target>
        </trans-unit>
        <trans-unit id="75fbb2b5f3cd99fcaedd44f9393bf3d038d837e1" translate="yes" xml:space="preserve">
          <source>The RFC that documents ed25519 DKIM signatures, RFC 8463, has been released
and dkimpy 0.7 and later are aligned to its requirements.  As of 0.8, ed25519
need not be considered experimental.  The dkimpy implementation has
successfully interoperated with three other implementations and the technical
parameters for ed25519-sha256 are defined and stable.</source>
          <target state="translated">记录ed25519 DKIM签名的RFC 8463已经发布,dkimpy 0.7及以后的版本都与它的要求一致。从0.8开始,ed25519不需要被认为是实验性的。dkimpy实现已经成功地与其他三个实现进行了互操作,ed25519-sha256的技术参数已经定义并稳定。</target>
        </trans-unit>
        <trans-unit id="d4d386e3fdf317fbd4355cba3435eabd31287f90" translate="yes" xml:space="preserve">
          <source>The code for rsa-sha1 signing and verification is retained, but not used for
signing by default.  Future releases will raise warnings and then errors when
verifying rsa-sha1 signatures.  There are still some significant users of
rsa-sha1 signatures, so operationally it's premature to disable verification
of rsa-sha1.</source>
          <target state="translated">rsa-sha1签名和验证的代码被保留,但默认情况下不用于签名。未来的版本会在验证rsa-sha1签名时发出警告,然后出错。目前仍有一些重要的用户在使用rsa-sha1签名,所以在操作上,禁用rsa-sha1的验证还为时尚早。</target>
        </trans-unit>
        <trans-unit id="d4f4e2b3ddd7d5643d5cd83412c4234ef09db56f" translate="yes" xml:space="preserve">
          <source>The dkimpy library offers one module called dkim. The sign() function takes an
RFC822 formatted message, along with some signing options, and returns a
DKIM-Signature header line that can be prepended to the message. The verify()
function takes an RFC822 formatted message, and returns True or False depending
on whether the signature verifies correctly.  There is also a DKIM class which
can be used to perform these functions in a more modern way.</source>
          <target state="translated">dkimpy 库提供了一个名为 dkim 的模块。sign()函数接收一个RFC822格式的消息,以及一些签名选项,并返回一个DKIM-Signature头行,它可以作为消息的前缀。verify()函数接收一个 RFC822 格式的消息,并根据签名是否正确验证而返回 True 或 False。还有一个DKIM类,可以用更现代的方式来执行这些功能。</target>
        </trans-unit>
        <trans-unit id="64ca33a38391fc255920285ab7bd173b508288af" translate="yes" xml:space="preserve">
          <source>The identity is optional and defaults to &quot;@domain&quot;.</source>
          <target state="translated">身份是可选的,默认为&quot;@domain&quot;。</target>
        </trans-unit>
        <trans-unit id="e52a96aeb69d61380b4729d3b39cdae36a933903" translate="yes" xml:space="preserve">
          <source>The included ARC tests are very limited.  The primary testing method for ARC
is using the ARC test suite: &lt;a href=&quot;https://github.com/ValiMail/arc_test_suite&quot;&gt;https://github.com/ValiMail/arc_test_suite&lt;/a&gt;</source>
          <target state="translated">包含的ARC测试非常有限。ARC的主要测试方法是使用ARC测试套件：&lt;a href=&quot;https://github.com/ValiMail/arc_test_suite&quot;&gt;https&lt;/a&gt; : //github.com/ValiMail/arc_test_suite</target>
        </trans-unit>
        <trans-unit id="04bc06f57ace77f5f4fdff9e612003021e240f42" translate="yes" xml:space="preserve">
          <source>This feature requires python3.5 or newer.</source>
          <target state="translated">此功能需要python3.5或更新版本。</target>
        </trans-unit>
        <trans-unit id="c8aa6b3456fcbe37292e75fae1592f248e050070" translate="yes" xml:space="preserve">
          <source>This is dkimpy 1.0.5.</source>
          <target state="translated">这是dkimpy 1.0.5。</target>
        </trans-unit>
        <trans-unit id="1235c266da2f83d4a9cc879c51a66b2e6921596b" translate="yes" xml:space="preserve">
          <source>This package includes a scripts and man pages.  For those to be installed when
installing using setup.py, the following incantation is required because
setuptools developers decided not being able to do this by default is a
feature:</source>
          <target state="translated">这个包包括一个脚本和man页。对于那些要在使用setup.py安装时安装的脚本,需要使用下面的咒语,因为setuptools的开发人员决定不能默认这样做是一个功能。</target>
        </trans-unit>
        <trans-unit id="2d99093de9a7aaf0e70ea34614ee21556d956127" translate="yes" xml:space="preserve">
          <source>Three helper programs are also supplied: dknewkey, dkimsign and
dkimverify</source>
          <target state="translated">还提供了三个辅助程序:dknewkey、dkimsign和dkimverify。</target>
        </trans-unit>
        <trans-unit id="76f5486cbdbbf6438521a6ba1202a8052cfe4b5f" translate="yes" xml:space="preserve">
          <source>To install from pypi with the required optional depenencies, use the ed25519
option:</source>
          <target state="translated">要从pypi安装所需的选项,使用ed25519选项。</target>
        </trans-unit>
        <trans-unit id="9943d636201e14a401ee5b6c460169811adfc869" translate="yes" xml:space="preserve">
          <source>To run dkimpy's test suite:</source>
          <target state="translated">运行 dkimpy 的测试套件。</target>
        </trans-unit>
        <trans-unit id="cf3bfa9a159c5a5ddc20da1eccd6bbddbdc037e4" translate="yes" xml:space="preserve">
          <source>USAGE</source>
          <target state="translated">使用</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">版本</target>
        </trans-unit>
        <trans-unit id="ce4d281d05b0ac9f3393e1ea27028a7203d449e1" translate="yes" xml:space="preserve">
          <source>You should install all optional dependencies required for the test suite, e.g.
by creating a virtualenv and using:</source>
          <target state="translated">您应该安装测试套件所需的所有可选依赖项,例如,通过创建一个 virtualenv 并使用:</target>
        </trans-unit>
        <trans-unit id="1f1a4ec3397fba515eb323af80cab62d90e8db74" translate="yes" xml:space="preserve">
          <source>aiodns.  Needed for asycnio (Requires python3.5 or later)</source>
          <target state="translated">aiodns.需要用于asycnio (需要python3.5或更新版本)</target>
        </trans-unit>
        <trans-unit id="c34e4fc23f6d61858bf221763be15c45c8dee057" translate="yes" xml:space="preserve">
          <source>argparse.  Standard library in python2.7 and later.</source>
          <target state="translated">argparse。python2.7及以后版本的标准库。</target>
        </trans-unit>
        <trans-unit id="e07464e2a9c9851a4e7e547acd9e6aead83b1572" translate="yes" xml:space="preserve">
          <source>authres.  Needed for ARC.</source>
          <target state="translated">authres.需要ARC。</target>
        </trans-unit>
        <trans-unit id="933676bf55e4c9eedad95fa27526d4596ad8147d" translate="yes" xml:space="preserve">
          <source>dkimpy - DKIM (DomainKeys Identified Mail)
&lt;a href=&quot;https://launchpad.net/dkimpy/&quot;&gt;https://launchpad.net/dkimpy/&lt;/a&gt;</source>
          <target state="translated">dkimpy-DKIM（DomainKeys识别邮件） &lt;a href=&quot;https://launchpad.net/dkimpy/&quot;&gt;https://launchpad.net/dkimpy/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d138d38490a80f7a6d20cdd29770954815c11dc4" translate="yes" xml:space="preserve">
          <source>dkimpy is a library that implements DKIM (DomainKeys Identified Mail) email
signing and verification.  Basic DKIM requirements are defined in RFC 6376:</source>
          <target state="translated">dkimpy是一个实现DKIM(DomainKeys Identified Mail)电子邮件签名和验证的库。RFC 6376中定义了DKIM的基本要求。</target>
        </trans-unit>
        <trans-unit id="b75a5c75eb4452a16e6984c6208a88a20a7b986d" translate="yes" xml:space="preserve">
          <source>dkimsign is a filter that reads an RFC822 message on standard input, and
writes the same message on standard output with a DKIM-Signature line
prepended. The signing options are specified on the command line:</source>
          <target state="translated">dkimsign 是一个过滤器,它可以在标准输入端读取 RFC822 消息,并在标准输出端写入相同的消息,并在前面加上 DKIM-Signature 行。签名选项是在命令行中指定的。</target>
        </trans-unit>
        <trans-unit id="8e07edccb9aa166168b1c2c5a7d5f28b0543e377" translate="yes" xml:space="preserve">
          <source>dkimsign selector domain privatekeyfile [identity]</source>
          <target state="translated">dkimsign选择器域私钥文件[身份]。</target>
        </trans-unit>
        <trans-unit id="c75e12b05478826886debeb5f8bc58fa966c8f64" translate="yes" xml:space="preserve">
          <source>dkimverify reads an RFC822 message on standard input, and returns with exit
code 0 if the signature verifies successfully. Otherwise, it returns with exit
code 1.</source>
          <target state="translated">dkimverify 读取标准输入的 RFC822 消息,如果签名验证成功,则以退出代码 0 返回。否则,它将以退出代码1返回。</target>
        </trans-unit>
        <trans-unit id="894d20d36bb855cf9808f9c5cb125a8abebeb8b4" translate="yes" xml:space="preserve">
          <source>dknewkey is s script that produces private and public key pairs suitable
for use with DKIM.  Note that the private key file format used for ed25519 is
not standardized (there is no standard) and is unique to dkimpy.</source>
          <target state="translated">dknewkey 是一个脚本,它可以产生适合 DKIM 使用的私钥和公钥对。请注意,用于 ed25519 的私钥文件格式不是标准化的(没有标准),是 dkimpy 独有的。</target>
        </trans-unit>
        <trans-unit id="d1f13101d92d168c3d5fcad13d13f82ebbe5fd38" translate="yes" xml:space="preserve">
          <source>dnspython or pydns. dnspython is preferred if both are present and
installed to satisfy the DNS module requirement if neither are installed.</source>
          <target state="translated">dnspython或pydns,如果两者都没有安装,则首选安装dnspython,以满足DNS模块的要求。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
