<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/gns3-proxy/">
    <body>
      <group id="gns3-proxy">
        <trans-unit id="9e94df6e4ddc3605d337de5b7b418929ff82a544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_images.py&quot;&gt;gns3_proxy_manage_images.py&lt;/a&gt; and
&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns_proxy_manage_templates.py&quot;&gt;gns_proxy_manage_templates.py&lt;/a&gt;
additionally offer im- and export as well as deletion and listing of all images and templates on backend servers.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_images.py&quot;&gt;gns3_proxy_manage_images.py&lt;/a&gt;和 &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns_proxy_manage_templates.py&quot;&gt;gns_proxy_manage_templates.py&lt;/a&gt; 还提供im-和导出以及后端服务器上所有图像和模板的删除和列表。</target>
        </trans-unit>
        <trans-unit id="89c38fd31f4c23faad36d6fdbed0ef541aa751bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt; allows management of projects on backend servers, e.g., bulk import, export,
start, stop, delete projects on all or certain backend servers based on regexp.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt;允许管理后端服务器上的项目，例如，基于regexp批量导入，导出，启动，停止，删除所有或某些后端服务器上的项目。</target>
        </trans-unit>
        <trans-unit id="e32dd95409b9d8f3b70d0c055470234d2f7b22f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt; facilitates the management of projects on backend servers.
Command syntax is:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt;简化了后端服务器上项目的管理。命令语法为：</target>
        </trans-unit>
        <trans-unit id="72ebb92ce4af9985154035002b80217085545cdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt; facilitates the replication of projects across backend servers.
Command syntax is:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;有助于跨后端服务器复制项目。命令语法为：</target>
        </trans-unit>
        <trans-unit id="9140f44c76b4dbcd12fc2a0ff84dcae5ffd2c720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt; supports replication of projects across backend servers.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;支持跨后端服务器复制项目。</target>
        </trans-unit>
        <trans-unit id="fe02ee4b39a4a39826dff9a3ce88b4fd1e52fe84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_password&lt;/strong&gt; Password to use to connect to GNS3 server backend (default: password)</source>
          <target state="translated">&lt;strong&gt;backend_password&lt;/strong&gt;用于连接到GNS3服务器后端的密码（默认值：密码）</target>
        </trans-unit>
        <trans-unit id="abf669f9a4f78f8733fc21b96542386251c7cdac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_port&lt;/strong&gt; TCP port the backend servers listen on (default: 3080, standard GNS3 server port)</source>
          <target state="translated">&lt;strong&gt;backend_port&lt;/strong&gt;后端服务器侦听的TCP端口（默认值：3080，标准GNS3服务器端口）</target>
        </trans-unit>
        <trans-unit id="bf8fd26fa5c5021c51e9a40242bd2f4f0b6a845e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_user&lt;/strong&gt; Username to use to connect to GNS3 server backend (default: admin, standard GNS3 server user)</source>
          <target state="translated">&lt;strong&gt;backend_user&lt;/strong&gt;用于连接到GNS3服务器后端的用户名（默认：admin，标准GNS3服务器用户）</target>
        </trans-unit>
        <trans-unit id="015a99607410e65b99149fa5b1fb22e0f7f12540" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backlog&lt;/strong&gt; Backlog of the proxy. Increase to allow the processing of more concurrent requests (default: 1000)</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;代理的&lt;strong&gt;积压&lt;/strong&gt;。增加以允许处理更多并发请求（默认值：1000）</target>
        </trans-unit>
        <trans-unit id="d711d1f98d98a17cbe0f389904d7d53811294a70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;client-recvbuf-size&lt;/strong&gt; Client receive buffer size (TCP socket) of the proxy in bytes. Increase this value for better performance of large requests from clients (default: 8192, recommended for production: 1048576)</source>
          <target state="translated">&lt;strong&gt;client-recvbuf-size&lt;/strong&gt;客户端接收代理的缓冲区大小（TCP套接字），以字节为单位。增大此值可更好地处理来自客户端的大型请求（默认值：8192，建议用于生产环境：1048576）</target>
        </trans-unit>
        <trans-unit id="f904703e1366cbac11bee8bc1b281d38db4ccd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default_server&lt;/strong&gt; Default server backend to use if no individual mapping for the user was found. Can be omitted to use explicit mapping (default: gns3-1)</source>
          <target state="translated">&lt;strong&gt;default_server&lt;/strong&gt;如果未找到用户的单个映射，则使用的默认服务器后端。可以省略以使用显式映射（默认值：gns3-1）</target>
        </trans-unit>
        <trans-unit id="8177061c166edc24fe0ed982b662e0a713e83087" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hostname:&lt;/strong&gt; IP address or corresponding hostname the proxy should bind to, listening for incoming requests (default: 0.0.0.0)</source>
          <target state="translated">&lt;strong&gt;主机名：&lt;/strong&gt;代理应绑定到的IP地址或相应的主机名，侦听传入的请求（默认值：0.0.0.0）</target>
        </trans-unit>
        <trans-unit id="6abae1ade7c93e860014678747645621c5ea4e9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;log-level&lt;/strong&gt; Log level. Increase to DEBUG for debugging output. (default: INFO)</source>
          <target state="translated">&lt;strong&gt;日志级别&lt;/strong&gt;日志级别。增加到DEBUG以调试输出。（默认：INFO）</target>
        </trans-unit>
        <trans-unit id="1b1c4d525585cd915c6beae4543f3fc3fb3717ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;open-file-limit&lt;/strong&gt; Maximum number of parallel open files (socket fds) of the proxy (default: 1024)</source>
          <target state="translated">&lt;strong&gt;open-file-limit&lt;/strong&gt;代理的并行打开文件（套接字fds）的最大数量（默认值：1024）</target>
        </trans-unit>
        <trans-unit id="3f416f83d4d4985eda94fe551dd12fbe425cbaa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;port&lt;/strong&gt; TCP port the proxy will listen on (default: 14080)</source>
          <target state="translated">&lt;strong&gt;port&lt;/strong&gt;代理将侦听的TCP端口（默认值：14080）</target>
        </trans-unit>
        <trans-unit id="73c581b211bf2ecf5b12a93653ec11c2a303ad70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;server-recvbuf-size&lt;/strong&gt; Server receive buffer size (TCP socket) of the proxy in bytes. Increase this value for better performance of large responses from backend servers (default: 8192, recommended for production: 1048576)</source>
          <target state="translated">&lt;strong&gt;server-recvbuf-size&lt;/strong&gt;服务器接收代理的缓冲区大小（TCP套接字），以字节为单位。增加此值可提高后端服务器的大型响应的性能（默认值：8192，建议用于生产环境：1048576）</target>
        </trans-unit>
        <trans-unit id="0e4397a2e866e3e70a144ccb72eec68b1354cb52" translate="yes" xml:space="preserve">
          <source>After you changed the config of the GNS3 backend servers and restarted them, configure gns3_proxy_config.ini based
on your needs and run gns3_proxy.py. You can then, configure GNS3-GUI to use the proxy as a remote GNS3 server.
By default, the proxy listens on 0.0.0.0 and TCP port 14080.</source>
          <target state="translated">当你改变了GNS3后台服务器的配置并重新启动它们之后,根据你的需求配置gns3_proxy_config.ini并运行gns3_proxy.py。然后,你就可以,配置GNS3-GUI来使用代理作为远程GNS3服务器。默认情况下,代理服务器监听0.0.0.0和TCP端口14080。</target>
        </trans-unit>
        <trans-unit id="f89c083e1f39683bbea33236a9070310cfbf6af0" translate="yes" xml:space="preserve">
          <source>Afterwards you can use &quot;Migrate&quot; from another GNS3 host to migrate setup and images and projects to the new backend.</source>
          <target state="translated">之后,你可以使用 &quot;迁移 &quot;从另一个GNS3主机迁移设置和图像和项目到新的后台。</target>
        </trans-unit>
        <trans-unit id="34c4b14159ca32bcee1953e6e355d6a79431e0d4" translate="yes" xml:space="preserve">
          <source>Also, you can install the gns3-proxy from &lt;a href=&quot;https://pypi.org/project/gns3-proxy/&quot;&gt;PyPI&lt;/a&gt; using</source>
          <target state="translated">此外，您还可以安装从GNS3代理&lt;a href=&quot;https://pypi.org/project/gns3-proxy/&quot;&gt;的PyPI&lt;/a&gt;使用</target>
        </trans-unit>
        <trans-unit id="a5a100d57b32268c6139386e2582b101602c9431" translate="yes" xml:space="preserve">
          <source>Basic access logging/status monitoring support</source>
          <target state="translated">支持基本的访问记录/状态监控</target>
        </trans-unit>
        <trans-unit id="41143fef39367a16c3f74c4ea2d88e754b092b3b" translate="yes" xml:space="preserve">
          <source>Changes/enhancements to proxy.py:</source>
          <target state="translated">对proxy.py的修改/增强。</target>
        </trans-unit>
        <trans-unit id="c05bafdb56031bb64da1f1d1861f60118932c605" translate="yes" xml:space="preserve">
          <source>Concept</source>
          <target state="translated">理念</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">配置</target>
        </trans-unit>
        <trans-unit id="f35d8f747abd6ef6926d9ce007f57262ffa5c663" translate="yes" xml:space="preserve">
          <source>Configuration file to allow basic proxy configuration as well as GNS3 backend server, users, mappings and request filters</source>
          <target state="translated">配置文件允许基本的代理配置,以及GNS3后端服务器、用户、映射和请求过滤器。</target>
        </trans-unit>
        <trans-unit id="4733f176c61cc5544f2c72712873e6d4d18bb8fe" translate="yes" xml:space="preserve">
          <source>Definition of users (username and password used in GNS3-GUI) for authentication and authorization at the proxy, proxy replaces credentials for backend servers</source>
          <target state="translated">定义用户(GNS3-GUI中使用的用户名和密码)在代理处进行认证和授权,代理取代后台服务器的凭证。</target>
        </trans-unit>
        <trans-unit id="187ad625bbd9dffb08a5bd9023f51fc2ea2a4b28" translate="yes" xml:space="preserve">
          <source>Deploy the GNS3 server appliance as usual. You can find further information regarding the installation of a server
for multiple clients in the &lt;a href=&quot;https://docs.gns3.com/1K_OVfincey0cUw6CP4dWVgs_pBXMdIJ6gdFGjNy8EZQ/index.html&quot;&gt;GNS3 server for multiple clients docu&lt;/a&gt;.
Make sure to allow VT-x/AMD-V for the backend server. If configured correctly, &quot;KVM support available: true&quot; should be
displayed in the menu after starting the server. The server should be configured to use a static IP address. This can
be done using the Shell or selecting the option &quot;Network&quot; (Configure network settings) from the GNS3 menu. Configure
static IP addresses using the template in /etc/netplan/90_gns3vm_static_netcfg.yaml.</source>
          <target state="translated">照常部署GNS3服务器设备。您可以在&lt;a href=&quot;https://docs.gns3.com/1K_OVfincey0cUw6CP4dWVgs_pBXMdIJ6gdFGjNy8EZQ/index.html&quot;&gt;GNS3服务器（用于多个客户端）docu中&lt;/a&gt;找到有关为多个客户端安装服务器的更多信息。确保后端服务器允许使用VT-x / AMD-V。如果配置正确，则启动服务器后，菜单中应显示&amp;ldquo; KVM support available：true&amp;rdquo;。服务器应配置为使用静态IP地址。这可以使用命令行管理程序或从GNS3菜单中选择选项&amp;ldquo;网络&amp;rdquo;（配置网络设置）来完成。使用/etc/netplan/90_gns3vm_static_netcfg.yaml中的模板配置静态IP地址。</target>
        </trans-unit>
        <trans-unit id="6ec978fd273cde1928840836594eb788c0940488" translate="yes" xml:space="preserve">
          <source>Deploying and managing projects on gns3-proxy backends</source>
          <target state="translated">在gns3-proxy后端部署和管理项目。</target>
        </trans-unit>
        <trans-unit id="974e9e4b0248abfe62b8b90dc0b5f1a6c1d23dd6" translate="yes" xml:space="preserve">
          <source>Distributed as a single file module</source>
          <target state="translated">作为单一文件模块分发</target>
        </trans-unit>
        <trans-unit id="5a801211517a4c2cd4fbb4f9d6bd67cda7c3dbc5" translate="yes" xml:space="preserve">
          <source>Even easier is the installation using a Docker container. Simply install and run the latest version of the &lt;a href=&quot;https://cloud.docker.com/u/flex/repository/docker/flex/gns3-proxy&quot;&gt;gns3-proxy
container image&lt;/a&gt;
from Docker Hub, e.g., using</source>
          <target state="translated">使用Docker容器进行安装更加容易。只需 从Docker Hub安装并运行&lt;a href=&quot;https://cloud.docker.com/u/flex/repository/docker/flex/gns3-proxy&quot;&gt;gns3-proxy容器映像&lt;/a&gt;的最新版本，例如，使用</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特点</target>
        </trans-unit>
        <trans-unit id="813790a6bd9e597719e7f9186a0cf7c6ab490965" translate="yes" xml:space="preserve">
          <source>Filtering of denied requests to server backends (based on username, REST/HTTP method/URL path/headers/body (using regexp)</source>
          <target state="translated">过滤拒绝向服务器后端发出的请求(基于用户名、REST/HTTP方法/URL路径/headers/body(使用regexp))。</target>
        </trans-unit>
        <trans-unit id="90a105e5ee5f4d1b35f6bd6eed1ee7b88ad0d7b8" translate="yes" xml:space="preserve">
          <source>Fixes and tweaks to allow the connection to GNS3 backends, especially keeping connections alive and leaving HTTP headers to support direct passthrough of WebSocket connections</source>
          <target state="translated">修复和调整,以允许连接到GNS3后端,特别是保持连接的活力,并留下HTTP头,以支持WebSocket连接的直接穿透。</target>
        </trans-unit>
        <trans-unit id="3aa9c3dacb56584ba5c47f525ac807845fb634b8" translate="yes" xml:space="preserve">
          <source>Further utilities provided to use the proxy:</source>
          <target state="translated">为使用代理提供了更多的实用工具。</target>
        </trans-unit>
        <trans-unit id="b5c27a0d891701fe79e5761504b67009516f34cd" translate="yes" xml:space="preserve">
          <source>GNS3 Proxy based on proxy.py by Abhinav Singh (https://github.com/abhinavsingh/proxy.py)</source>
          <target state="translated">GNS3 Proxy based on proxy.py by Abhinav Singh (https://github.com/abhinavsingh/proxy.py)</target>
        </trans-unit>
        <trans-unit id="940939c8882b591d0b5fd69773e7f38af2ec1649" translate="yes" xml:space="preserve">
          <source>IPv4 and IPv6 support</source>
          <target state="translated">支持IPv4和IPv6</target>
        </trans-unit>
        <trans-unit id="6b8945f4d1f14c5a08f9368655a3f71f0ef18b19" translate="yes" xml:space="preserve">
          <source>In our Network Laboratory we use several network emulators (besides GNS3 esp., mininet, VIRL and EVE-NG) and simulators
for courses and lab sessions as well as individual research or students' projects. As GNS3 is focusing on single user
installations, several changes were necessary to provide lab session in class as well as to students working from
at home. The following figure describes our setup:</source>
          <target state="translated">在我们的网络实验室里,我们使用了几个网络仿真器(除了GNS3之外,还有mininet,VIRL和EVE-NG)和模拟器,用于课程和实验室课程,以及个人研究和学生的项目。由于GNS3专注于单个用户的安装,因此有必要进行一些改变,以便在课堂上提供实验课,以及为在家工作的学生提供服务。下图描述了我们的设置。</target>
        </trans-unit>
        <trans-unit id="a439d4f2c4074d5ce1576854091789514999816a" translate="yes" xml:space="preserve">
          <source>Inherited from proxy.py:</source>
          <target state="translated">继承自proxy.py。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="db7432dce307fd8829c688219499780f46c822f0" translate="yes" xml:space="preserve">
          <source>Installing a new server backend</source>
          <target state="translated">安装一个新的服务器后台</target>
        </trans-unit>
        <trans-unit id="9f151fb5a5e2be7975872983d98cad96431c4819" translate="yes" xml:space="preserve">
          <source>Manual configuration of GNS3 server backends</source>
          <target state="translated">手动配置GNS3服务器后端</target>
        </trans-unit>
        <trans-unit id="a8af82a44892d29e4f47712be08f5a8572cd8247" translate="yes" xml:space="preserve">
          <source>No external dependency other than standard Python library</source>
          <target state="translated">除了标准的Python库,没有其他的外部依赖</target>
        </trans-unit>
        <trans-unit id="b3db96da1745e0123bdd9a5ae9805ce0e4f385ef" translate="yes" xml:space="preserve">
          <source>Optimized for large file uploads and downloads</source>
          <target state="translated">针对大文件上传和下载进行了优化</target>
        </trans-unit>
        <trans-unit id="41d80892b3403fd7e91f7502bec19055a7b6dd33" translate="yes" xml:space="preserve">
          <source>Proof-of-concept for a Proxy Server for GNS3. The proxy is configured as a
regular remote server in the GNS3-GUI, as the GNS3-GUI client does not yet
support proxies &lt;a href=&quot;https://github.com/GNS3/gns3-gui/issues/2696&quot;&gt;gns3-gui issue #2696&lt;/a&gt;. Basic idea
is to allow the use of central GNS3 server backends for classroom / lab setups,
as used, e.g., in the &lt;a href=&quot;https://www.hs-fulda.de/en/studies/departments/applied-computer-science/about-us/laboratories/netlab/&quot;&gt;Network Laboratory of Fulda University of Applied
Sciences&lt;/a&gt;. Students can connect to the proxy and requests will be authenticated,
filtered and forwarded to appropriate backend servers. Proxy authentication
also circumvents the current lack of multi-user support in GNS3. Without the
proxy, due to the single user limitation (see &quot;MULTIPLE USERS ENVIRONMENT&quot;
in &lt;a href=&quot;https://docs.gns3.com/1ON9JBXSeR7Nt2-Qum2o3ZX0GU86BZwlmNSUgvmqNWGY/index.html&quot;&gt;GNS3 Security&lt;/a&gt;),
users will have to use the same admin credentials for GNS3 to access the
backend. Also, requests cannot be filtered and authorized (e.g., to deny
deletion/creation of projects etc.). As GNS3 does not support proxies, several
tweaks were necessary to the forked proxy.py project to allow transparent
REST and WebSocket passthrough.</source>
          <target state="translated">GNS3代理服务器的概念验证。代理已在GNS3-GUI中配置为常规远程服务器，因为GNS3-GUI客户端尚不支持代理&lt;a href=&quot;https://github.com/GNS3/gns3-gui/issues/2696&quot;&gt;gns3-gui问题＃2696&lt;/a&gt;。基本思想是允许将中央GNS3服务器后端用于教室/实验室设置，例如在&lt;a href=&quot;https://www.hs-fulda.de/en/studies/departments/applied-computer-science/about-us/laboratories/netlab/&quot;&gt;富尔达应用科学大学&lt;/a&gt;的网络实验室中使用的那样。学生可以连接到代理，请求将被认证，过滤并转发到适当的后端服务器。代理身份验证还规避了GNS3当前缺乏多用户支持的情况。没有代理服务器，由于单用户限制（请参阅&lt;a href=&quot;https://docs.gns3.com/1ON9JBXSeR7Nt2-Qum2o3ZX0GU86BZwlmNSUgvmqNWGY/index.html&quot;&gt;GNS3安全性中的&lt;/a&gt;&amp;ldquo;多用户环境&amp;rdquo;），则用户必须对GNS3使用相同的管理员凭据才能访问后端。同样，请求不能被过滤和授权（例如，拒绝删除/创建项目等）。由于GNS3不支持代理，因此需要对分支的proxy.py项目进行一些调整，以允许透明的REST和WebSocket直通。</target>
        </trans-unit>
        <trans-unit id="882d472e304919b923383d377a9c8e3abdee2a20" translate="yes" xml:space="preserve">
          <source>Redirect requests to backend servers (fixed proxying independent from request URL)</source>
          <target state="translated">将请求重定向到后端服务器(固定代理,独立于请求URL)</target>
        </trans-unit>
        <trans-unit id="4fc3d81b2cceb1a67d6eaeeab956c6513dbaa8ef" translate="yes" xml:space="preserve">
          <source>Selection (mapping) of GNS3 backend server and possibility of load-balancing based on username (using regexp)</source>
          <target state="translated">选择(映射)GNS3后台服务器和基于用户名的负载平衡的可能性(使用regexp)</target>
        </trans-unit>
        <trans-unit id="b67a9a579dce38ed5873e3012cc608281fd640ba" translate="yes" xml:space="preserve">
          <source>Settings of the proxy are stored in &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/gns3_proxy_config.ini&quot;&gt;gns3_proxy_config.ini&lt;/a&gt;.
The &lt;code&gt;[proxy]&lt;/code&gt; section contains following parameters for gns3-proxy:</source>
          <target state="translated">代理的设置存储在&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/gns3_proxy_config.ini&quot;&gt;gns3_proxy_config.ini中&lt;/a&gt;。的 &lt;code&gt;[proxy]&lt;/code&gt; 部分包含以下为GNS3代理参数：</target>
        </trans-unit>
        <trans-unit id="7b8bda86df4d363fd7379df6908a43384f3ff632" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;websockets&lt;/code&gt; request proxy</source>
          <target state="translated">支持 &lt;code&gt;http&lt;/code&gt; ， &lt;code&gt;https&lt;/code&gt; 和 &lt;code&gt;websockets&lt;/code&gt; 请求代理</target>
        </trans-unit>
        <trans-unit id="fd77829b1b974295d7f6b6fc6a2b7ff219add5a6" translate="yes" xml:space="preserve">
          <source>Support for REST calls (GET requests with body etc., not handled by proxy.py)</source>
          <target state="translated">支持REST调用(带有body等的GET请求,不由proxy.py处理)</target>
        </trans-unit>
        <trans-unit id="4c0a9dce4185c8cfe44f5c8a02c06c97b1de6f09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[deny]&lt;/code&gt; section defines requests that should be filtered and hence denied by the proxy (rule_id=&quot;user regexp&quot;:&quot;http_request_method&quot;:&quot;url regexp&quot;:&quot;header regexp&quot;:&quot;body regexp&quot;), e.g. to deny modification to existing projects as well as deletion and creation of projects:</source>
          <target state="translated">的 &lt;code&gt;[deny]&lt;/code&gt; ，例如，以拒绝修改应当被过滤掉并且因此否认了由代理（&amp;ldquo;http_request_method&amp;rdquo;：&amp;ldquo;URL的regexp&amp;rdquo;：&amp;ldquo;报头的regexp&amp;rdquo;，&amp;ldquo;体的正则表达式&amp;rdquo; RULE_ID =&amp;ldquo;用户的regexp&amp;rdquo;）部分定义了请求现有项目以及项目的删除和创建：</target>
        </trans-unit>
        <trans-unit id="48925777495e7c18fcf5535523a0d76e81951d48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[mapping]&lt;/code&gt; section maps users to the backend servers (mapping_id=&quot;user regexp&quot;:&quot;server_name&quot;), e.g.:</source>
          <target state="translated">的 &lt;code&gt;[mapping]&lt;/code&gt; 部分映射用户的后端服务器（mapping_id =&amp;ldquo;正则表达式的用户&amp;rdquo;：&amp;ldquo;服务器名&amp;rdquo;），例如：</target>
        </trans-unit>
        <trans-unit id="b2633b8e137b43f60a95a3452a9aedcad83c3039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[servers]&lt;/code&gt; section contains the defined backend servers (server_name=ip_address), e.g.:</source>
          <target state="translated">的 &lt;code&gt;[servers]&lt;/code&gt; 部分包含定义后端服务器（服务器名称= IP_ADDRESS），例如：</target>
        </trans-unit>
        <trans-unit id="7fd042a7c2fffc70a3b27aa44ed5cc14911f3031" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[users]&lt;/code&gt; section defines the users allowed to access the proxy and their passwords (username=password), e.g.:</source>
          <target state="translated">的 &lt;code&gt;[users]&lt;/code&gt; 节定义允许访问代理和他们的密码（用户名=密码）的用户，例如：</target>
        </trans-unit>
        <trans-unit id="89327fb74927ce66d237f2c498b1c5e359fb6dad" translate="yes" xml:space="preserve">
          <source>The first argument should lead to a gns3-proxy config containing backend port, username, password to use. Second
argument is the the IP address of the new backend to be configured.</source>
          <target state="translated">第一个参数应该指向一个包含后端端口、用户名、密码的gns3-proxy配置。第二个参数是要配置的新后台的IP地址。</target>
        </trans-unit>
        <trans-unit id="2977f862335a04915acf0859e8ffd043727bb5cb" translate="yes" xml:space="preserve">
          <source>The only change necessary in the GNS3 server backends, is to edit the regular
gns3_server.conf (available in the appliance terminal and, e.g., used to
change username password etc., see also
&lt;a href=&quot;https://docs.gns3.com/1f6uXq05vukccKdMCHhdki5MXFhV8vcwuGwiRvXMQvM0/index.html&quot;&gt;GNS3 server configuration file&lt;/a&gt;)
and change the hostname from 0.0.0.0 to the IP address the server should
listen on, e.g.:</source>
          <target state="translated">GNS3服务器后端唯一需要做的更改是编辑常规的gns3_server.conf（在设备终端中可用，例如，用于更改用户名密码等，另请参见 &lt;a href=&quot;https://docs.gns3.com/1f6uXq05vukccKdMCHhdki5MXFhV8vcwuGwiRvXMQvM0/index.html&quot;&gt;GNS3服务器配置文件&lt;/a&gt;），并将主机名从0.0更改。服务器监听的IP地址为0.0，例如：</target>
        </trans-unit>
        <trans-unit id="9c1b17226d8ccea30ecb3c8d4b20833186550aa9" translate="yes" xml:space="preserve">
          <source>The provided example &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontab&lt;/a&gt; contains examples to
use gns3_proxy_manage_projects.py. For example:</source>
          <target state="translated">提供的示例&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontab&lt;/a&gt;包含使用gns3_proxy_manage_projects.py的示例。例如：</target>
        </trans-unit>
        <trans-unit id="9a49830d51b84e1b3e4c8617cf98a73180d75c2a" translate="yes" xml:space="preserve">
          <source>The provided example &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontab&lt;/a&gt; contains examples to
use gns3_proxy_replicate_projects.py. For example:</source>
          <target state="translated">提供的示例&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontab&lt;/a&gt;包含使用gns3_proxy_replicate_projects.py的示例。例如：</target>
        </trans-unit>
        <trans-unit id="2203fff8b36b1177ee2e721284812b4d1119216b" translate="yes" xml:space="preserve">
          <source>To configure the backend directly for gns3-proxy, an easier option is to use the provided &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/setup-backend.sh&quot;&gt;setup-backend.sh&lt;/a&gt;
script, e.g., by running:</source>
          <target state="translated">要直接为gns3-proxy配置后端，一个更简单的选择是使用提供的&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/setup-backend.sh&quot;&gt;setup-backend.sh&lt;/a&gt; 脚本，例如，通过运行：</target>
        </trans-unit>
        <trans-unit id="b5bcf774d99bada4ff852b144bbd0f079b24a870" translate="yes" xml:space="preserve">
          <source>Using gns3-proxy, we can use separate credentials for users accessing the proxy without needing to share the single
admin user provided by the standard gns3 server. However, no modifications are necessary to the standard GNS3 server
used in our backends and for the GNS3 client GUI. Users defined in the proxy, e.g., a group of students working
together in a group or on individual projects from at home, will be mapped to an individual backend server allowing
load balancing and failover, since GNS3 compared to other network emulation environments does not offer a cluster setup
to spread running projects and contained resources. The proxy also allows to filter and hence deny requests that
contain modifications to projects. Prepared projects are periodically synced to all server backends using cron and the
replication utility &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;.</source>
          <target state="translated">使用gns3-proxy，我们可以为访问代理的用户使用单独的凭据，而无需共享标准gns3服务器提供的单个管理员用户。但是，无需修改我们的后端和GNS3客户端GUI中使用的标准GNS3服务器。代理中定义的用户（例如，一组学生一起工作或在家里进行单个项目）将被映射到单个后端服务器，从而实现负载平衡和故障转移，因为与其他网络仿真环境相比，GNS3不提供此功能群集设置以传播正在运行的项目和包含的资源。代理还允许过滤并因此拒绝包含对项目所做修改的请求。使用cron和复制实用程序将准备好的项目定期同步到所有服务器后端&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dda1d929ae5d8b4ffdefba567ca4c6a6b905fdf1" translate="yes" xml:space="preserve">
          <source>You can clone this repository or simply copy gns3_proxy.py and gns3_proxy_config.ini to a host that has Python &amp;gt;=3.4
installed.</source>
          <target state="translated">您可以克隆此存储库，也可以将gns3_proxy.py和gns3_proxy_config.ini复制到安装了Python&amp;gt; = 3.4的主机上。</target>
        </trans-unit>
        <trans-unit id="fa32c3290560f89675e516a8a131e5f32e137504" translate="yes" xml:space="preserve">
          <source>You can find &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/scripts/docker-container-example&quot;&gt;sample scripts&lt;/a&gt; to run and manage
the container in the scripts directory of this repository.</source>
          <target state="translated">您可以在此存储库的scripts目录中找到&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/scripts/docker-container-example&quot;&gt;示例脚本&lt;/a&gt;来运行和管理容器。</target>
        </trans-unit>
        <trans-unit id="a92ab5fa6ee157ea88ce3afa98cc621060f1a919" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_images.py&quot;&gt;gns3_proxy_replicate_images.py&lt;/a&gt;
and &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_templates.py&quot;&gt;gns3_proxy_replicate_templates.py&lt;/a&gt;
to replicate all templates and images of an existing backend server to new server. These scripts can also be used
periodically using cron to replicate images and templates to all gns3-proxy backends.</source>
          <target state="translated">您可以使用&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_images.py&quot;&gt;gns3_proxy_replicate_images.py&lt;/a&gt; 和&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_templates.py&quot;&gt;gns3_proxy_replicate_templates.py&lt;/a&gt; 将现有后端服务器的所有模板和图像复制到新服务器。也可以使用cron定期使用这些脚本，以将图像和模板复制到所有gns3-proxy后端。</target>
        </trans-unit>
        <trans-unit id="a017e38c176e7f6ea03c17a688271f602cba852b" translate="yes" xml:space="preserve">
          <source>gns3-proxy</source>
          <target state="translated">gns3-proxy</target>
        </trans-unit>
        <trans-unit id="99fc639eb1171729a41aad16e076a5f925158caa" translate="yes" xml:space="preserve">
          <source>gns3_proxy_manage_project.py and gns3_proxy_replicate_projects.py be combined with &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;cron entry&lt;/a&gt; to run tasks periodically.</source>
          <target state="translated">gns3_proxy_manage_project.py和gns3_proxy_replicate_projects.py与&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;cron条目&lt;/a&gt;结合使用以定期运行任务。</target>
        </trans-unit>
        <trans-unit id="62c2e9ce771c7660ff0686fc54bc82abff1bb843" translate="yes" xml:space="preserve">
          <source>will export the project TestProject from gns3-1 to a ZIP file that can be used as a backup, e.g. to import later using
GNS3 GUI, or --import-from-file option, like:</source>
          <target state="translated">将从gns3-1导出TestProject项目到一个ZIP文件中,作为备份,例如以后使用GNS3 GUI或--import-from-file选项导入,如。</target>
        </trans-unit>
        <trans-unit id="8a6d3c7eba51cb67d1b4fa0c1c3cfa296e90bf11" translate="yes" xml:space="preserve">
          <source>will import GNS3 project exported in file project.zip to backend server gns3-1. The specified project-id (must be a valid UUID v4
in GNS3) will be used for the import.</source>
          <target state="translated">将导入以project.zip文件导出的GNS3项目到后台服务器gns3-1。指定的project-id(必须是GNS3中有效的UUID v4)将被用于导入。</target>
        </trans-unit>
        <trans-unit id="cf5a9f6d7a5d732974ad60753bd845a4a60a0f8e" translate="yes" xml:space="preserve">
          <source>will replicate all GNS3 project names beginning with &quot;KommProt&quot; from the backend server gns3-master as the source to
all backend servers matching the regular expression &quot;gns3-.(.*)&quot;. The option --force tells the utility to overwrite existing
projects with the same name on the targets without further notice. The option --regenerate-mac-address searches for the
given MAC address in the projects and creates a new locally administered MAC address. This is especially necessary for
links to cloud node types in the project. Otherwise all projects will use the same address leading to duplicate MAC and
consequently duplicated IP addresses.</source>
          <target state="translated">将会把所有以 &quot;KommProt &quot;开头的GNS3项目名称从后端服务器gns3-master作为源文件复制到所有匹配正则表达式 &quot;gns3-.(.*)&quot;的后端服务器。选项 --force 告诉实用程序覆盖目标上现有的同名项目,而无需另行通知。选项 --regenerate-mac-address 在项目中搜索给定的 MAC 地址,并创建一个新的本地管理的 MAC 地址。这对于项目中与云节点类型的链接尤为必要。否则,所有项目都将使用相同的地址,导致重复的 MAC,从而导致重复的 IP 地址。</target>
        </trans-unit>
        <trans-unit id="3aa359a59426621936a7bd44de75c860ef0f5957" translate="yes" xml:space="preserve">
          <source>will show the status of all projects on all backend server.</source>
          <target state="translated">将显示所有后台服务器上所有项目的状态。</target>
        </trans-unit>
        <trans-unit id="2ae44aee21d566a5f003f409d221fec6043743f3" translate="yes" xml:space="preserve">
          <source>will start the project with the name TestProject on the server gns3-1 defined as a backend in gns3_proxy_config.ini.
Can be used, e.g., together with cron to start the project ahead of time for lab sessions or courses, avoiding
waiting for projects to be ready for use when students take the lab.</source>
          <target state="translated">将在gns3_proxy_config.ini中定义为后端的服务器gns3-1上启动名为TestProject的项目。可以和cron一起使用,例如在实验课或课程中提前启动项目,避免学生上实验课时等待项目准备好使用。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
