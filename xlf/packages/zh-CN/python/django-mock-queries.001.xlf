<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/django-mock-queries/">
    <body>
      <group id="django-mock-queries">
        <trans-unit id="c9a22ec35b9d12e33ad090939c6d269178c2825b" translate="yes" xml:space="preserve">
          <source>. Use a wildcard import to get all
the regular settings as well.</source>
          <target state="translated">。也可以使用通配符导入来获取所有常规设置。</target>
        </trans-unit>
        <trans-unit id="c4b8e9ac3c632bc2db41e4ae6814b9721418c6f1" translate="yes" xml:space="preserve">
          <source>A django library for mocking queryset functions in memory for testing</source>
          <target state="translated">一个用于在内存中模拟测试queryset函数的django库。</target>
        </trans-unit>
        <trans-unit id="b219d0465c2b25d4dd4e8388f1e4d1f8f1ab9c9b" translate="yes" xml:space="preserve">
          <source>A library for mocking Django queryset functions in memory for testing</source>
          <target state="translated">一个在内存中模拟Django查询集函数的库,用于测试。</target>
        </trans-unit>
        <trans-unit id="e0e333be866aa7e340612426c04a6929250e99ef" translate="yes" xml:space="preserve">
          <source>Add docs as a service like readthedocs with examples for every
feature</source>
          <target state="translated">像readthedocs那样将文档作为一项服务添加到每个功能的示例中</target>
        </trans-unit>
        <trans-unit id="9765aa80642150f5b76651d248ed17a5a552a38e" translate="yes" xml:space="preserve">
          <source>Add support for missing QuerySet methods/Field lookups/Aggregation
functions:</source>
          <target state="translated">增加对缺失的QuerySet方法/字段查找/聚合功能的支持。</target>
        </trans-unit>
        <trans-unit id="285d8ee1ce554fb9c629ca4da3a45a17165f7898" translate="yes" xml:space="preserve">
          <source>Add/modify relevant tests</source>
          <target state="translated">添加/修改相关测试</target>
        </trans-unit>
        <trans-unit id="a0dfd51fd40a3d8c48620e5f1ac9c5e8ddb10802" translate="yes" xml:space="preserve">
          <source>Aggregates generation</source>
          <target state="translated">总量生成</target>
        </trans-unit>
        <trans-unit id="05e2b181c2a04135c3711917c90942022639aaf5" translate="yes" xml:space="preserve">
          <source>Aggregation functions: StdDev, Variance</source>
          <target state="translated">聚合函数。StdDev、Variance</target>
        </trans-unit>
        <trans-unit id="10fe1b1f7b133d108f5737a6577a17c1a85123e1" translate="yes" xml:space="preserve">
          <source>Anything missing or not functioning correctly? PRs are always welcome!
Otherwise, you can create an issue so someone else does it when time
allows.</source>
          <target state="translated">有什么缺失或功能不正常的地方吗?我们随时欢迎PR! 否则,你可以创建一个问题,让别人在时间允许的情况下做。</target>
        </trans-unit>
        <trans-unit id="fbaa568fdf473b3a1f0b2340bdc542ffca49ddaa" translate="yes" xml:space="preserve">
          <source>CRUD functions</source>
          <target state="translated">CRUD功能</target>
        </trans-unit>
        <trans-unit id="a57897b43ecd22a5d4cf41cf916e371439a57f14" translate="yes" xml:space="preserve">
          <source>Clone your fork:</source>
          <target state="translated">克隆你的叉子。</target>
        </trans-unit>
        <trans-unit id="217241e8b663646f528248746e940a012d15131f" translate="yes" xml:space="preserve">
          <source>Commit and push local branch to your origin</source>
          <target state="translated">提交并推送本地分支到您的原点</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">贡献</target>
        </trans-unit>
        <trans-unit id="f15f54a10c34d555b72ff683c2e2ac900e98d76a" translate="yes" xml:space="preserve">
          <source>Create pull request</source>
          <target state="translated">创建拉动请求</target>
        </trans-unit>
        <trans-unit id="adf226bb06b2e7bd32a7c4fdad0461d4e22d2e67" translate="yes" xml:space="preserve">
          <source>Django Mock Queries</source>
          <target state="translated">Django模拟查询</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特点</target>
        </trans-unit>
        <trans-unit id="e9a1f3162e984c22776c04000f60154f1ea2d6b7" translate="yes" xml:space="preserve">
          <source>Field lookups</source>
          <target state="translated">字段查询</target>
        </trans-unit>
        <trans-unit id="3e8850e3b578237f5e4fc97d17f88cf7f7faf55b" translate="yes" xml:space="preserve">
          <source>Field lookups: search</source>
          <target state="translated">字段查询:搜索</target>
        </trans-unit>
        <trans-unit id="f5116bf48390491d8e7f08b4153f64efe232c091" translate="yes" xml:space="preserve">
          <source>Filtering with Q objects</source>
          <target state="translated">用Q对象过滤</target>
        </trans-unit>
        <trans-unit id="2b191e9c0935b30f336d12fd67877200117a5255" translate="yes" xml:space="preserve">
          <source>Fork the repo from this page</source>
          <target state="translated">从这个页面上分叉回购</target>
        </trans-unit>
        <trans-unit id="b6cd73dd0789e6b2b20e0ddf99f41e8fda3798d9" translate="yes" xml:space="preserve">
          <source>Full Example</source>
          <target state="translated">完整示例</target>
        </trans-unit>
        <trans-unit id="074037c0c0de477ccadfbfd17580f608e90c5af7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the pytest equivalent:</source>
          <target state="translated">这是pytest等效项：</target>
        </trans-unit>
        <trans-unit id="283f6a9ded3d0de2d7545162289d19d809b25798" translate="yes" xml:space="preserve">
          <source>If you want to run your tests without a database, you need to tell
Django to skip the tests that need a database. You can do that by
putting a skip decorator on the test classes or test methods that need a
database.</source>
          <target state="translated">如果你想在没有数据库的情况下运行测试,你需要告诉Django跳过那些需要数据库的测试。你可以通过在需要数据库的测试类或测试方法上加一个跳过装饰符来实现。</target>
        </trans-unit>
        <trans-unit id="7479bb88fffb344a913a2bed4e97d18f0e351690" translate="yes" xml:space="preserve">
          <source>Implement feature/fix</source>
          <target state="translated">实施功能/修复</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="7a09399973c9a8ace29d9ae735c6982e95b9eaf4" translate="yes" xml:space="preserve">
          <source>Methods that do not return QuerySets: bulk_create, in_bulk,
as_manager</source>
          <target state="translated">不返回QuerySets的方法:bulk_create、in_bulk、as_manager。</target>
        </trans-unit>
        <trans-unit id="e9e9d0ee81901119ce50a449f990c7687a5fa60b" translate="yes" xml:space="preserve">
          <source>Methods that return new QuerySets: annotate, reverse, none, extra,
raw</source>
          <target state="translated">返回新QuerySets的方法:annotate、reverse、none、extra、raw。</target>
        </trans-unit>
        <trans-unit id="940eae8661951fd883431ba72918b5c58b915900" translate="yes" xml:space="preserve">
          <source>QuerySet style support for method chaining</source>
          <target state="translated">支持方法链的QuerySet风格</target>
        </trans-unit>
        <trans-unit id="aa31410c030394caeec2105319b2474426138426" translate="yes" xml:space="preserve">
          <source>Run tox to verify all tests and flake8 quality checks pass</source>
          <target state="translated">运行 tox 来验证所有测试和 flake8 质量检查是否通过。</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">待办事项</target>
        </trans-unit>
        <trans-unit id="badd616f2ef5f1aaced34c1e86310a239158ce40" translate="yes" xml:space="preserve">
          <source>Test django-rest-framework model serializer:</source>
          <target state="translated">测试django-rest-framework模型序列器。</target>
        </trans-unit>
        <trans-unit id="9faf30eddf790218e4bd3e619eff5ee9741d6a5e" translate="yes" xml:space="preserve">
          <source>Test function that uses Django QuerySet:</source>
          <target state="translated">使用Django QuerySet的测试函数。</target>
        </trans-unit>
        <trans-unit id="4f324ea6a7bf1f92176be519ebc816531f0d0469" translate="yes" xml:space="preserve">
          <source>That will run your tests without setting up a test database. All of your
tests that use Django mock queries should run fine, but what about the
tests that really need a database?</source>
          <target state="translated">这样就可以在不设置测试数据库的情况下运行你的测试。所有使用Django模拟查询的测试应该都能正常运行,但是真正需要数据库的测试呢?</target>
        </trans-unit>
        <trans-unit id="24fabe98e8f57c86a0e281e657a17c6cf82d15cf" translate="yes" xml:space="preserve">
          <source>Then run your Django tests with the new settings file:</source>
          <target state="translated">然后用新的设置文件运行你的Django测试。</target>
        </trans-unit>
        <trans-unit id="f221b37434d8e1a58c19e4cb101a6822183f7df8" translate="yes" xml:space="preserve">
          <source>There is a full Django application in the</source>
          <target state="translated">有一个完整的Django应用程序在。</target>
        </trans-unit>
        <trans-unit id="a70d8009a1fd953972ce3825394918198db16d2a" translate="yes" xml:space="preserve">
          <source>To run your Django tests without a database, add a new settings file,
and call</source>
          <target state="translated">要在没有数据库的情况下运行Django测试,添加一个新的设置文件,然后调用</target>
        </trans-unit>
        <trans-unit id="84fc707610a64e96867d44bfccaab79c47c44c99" translate="yes" xml:space="preserve">
          <source>You can follow these guidelines:</source>
          <target state="translated">你可以遵循这些准则。</target>
        </trans-unit>
        <trans-unit id="dbfddddbd1727436197bf5029d7b9e3ddbee6272" translate="yes" xml:space="preserve">
          <source>django-rest-framework serializer asserts</source>
          <target state="translated">django-rest-framework序列化器断言</target>
        </trans-unit>
        <trans-unit id="c2626d3dfb11d7da3784e0d1fd178ab3f6fb7a98" translate="yes" xml:space="preserve">
          <source>django_mock_queries</source>
          <target state="translated">django_mock_queries</target>
        </trans-unit>
        <trans-unit id="b61d73fccfb710a0e6d575bb99e90aeb75bdaffe" translate="yes" xml:space="preserve">
          <source>examples/users</source>
          <target state="translated">例子/用户</target>
        </trans-unit>
        <trans-unit id="bd00d8d4083c09a96b9890ed783fe191a2564807" translate="yes" xml:space="preserve">
          <source>folder. It
shows how to configure</source>
          <target state="translated">文件夹。它展示了如何配置</target>
        </trans-unit>
        <trans-unit id="921f427d32cdbc251ed3252d7319a27463a54471" translate="yes" xml:space="preserve">
          <source>in your tests and run
them with or without setting up a Django database. Running the mock
tests without a database can be much faster when your Django application
has a lot of database migrations.</source>
          <target state="translated">在你的测试中,无论是否设置了Django数据库,都可以运行它们。当你的Django应用有大量的数据库迁移时,在没有数据库的情况下运行模拟测试会更快。</target>
        </trans-unit>
        <trans-unit id="6d1885b1338b852777266953390160fcf6ba38c8" translate="yes" xml:space="preserve">
          <source>monkey_patch_test_db()</source>
          <target state="translated">monkey_patch_test_db()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
