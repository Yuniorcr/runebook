<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/ibmdbpy/">
    <body>
      <group id="ibmdbpy">
        <trans-unit id="9595bd9d6dadc2d2ddba3519d2b4528f59a1d236" translate="yes" xml:space="preserve">
          <source>A Pandas-like SQL-wrapper for in-database analytics with IBM Db2 Warehouse.</source>
          <target state="translated">一个类似于Pandas的SQL封装器,用于IBM Db2 Warehouse的数据库内分析。</target>
        </trans-unit>
        <trans-unit id="c8ae95e2a4e7613c064212af1be1fe1273abb8f0" translate="yes" xml:space="preserve">
          <source>A few sample data sets are included in ibmdbpy for you to experiment. We can firstly load the well-known IRIS table into this Db2 database.</source>
          <target state="translated">ibmdbpy中包含了几组样本数据,供大家实验。我们可以首先将著名的IRIS表加载到这个Db2数据库中。</target>
        </trans-unit>
        <trans-unit id="a9f61a44894906a9ae9f232beef6435bfce0419e" translate="yes" xml:space="preserve">
          <source>A more detailed roadmap is available on Github, in the</source>
          <target state="translated">更详细的路线图可以在Github的</target>
        </trans-unit>
        <trans-unit id="c4676681c9e5885470c47670bee4677788dba1dd" translate="yes" xml:space="preserve">
          <source>Accelerating Python Analytics by In-Database Processing</source>
          <target state="translated">通过数据库内处理加速Python分析</target>
        </trans-unit>
        <trans-unit id="d7489296e45e62b90e0952c757235ac3b8c9fbbf" translate="yes" xml:space="preserve">
          <source>Add more functions and improve what already exists</source>
          <target state="translated">增加更多的功能并改进现有的功能</target>
        </trans-unit>
        <trans-unit id="4eca9f13fa681e7408b19c916b3e6a11c8ba9385" translate="yes" xml:space="preserve">
          <source>Add wrappers for several ML-Algorithms (Linear regression, Sequential patterns&amp;hellip;)</source>
          <target state="translated">添加几个ML算法的包装器（线性回归，顺序模式&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="ab37488cd210bec23485c1e425448b2e197db3b5" translate="yes" xml:space="preserve">
          <source>Assuming that all ODBC connection parameters are correctly set, issue the following statements to connect to a database (in this case, a Db2 database named BLUDB) via ODBC:</source>
          <target state="translated">假设所有的ODBC连接参数都被正确设置,发出以下语句通过ODBC连接到一个数据库(在本例中,一个名为BLUDB的Db2数据库)。</target>
        </trans-unit>
        <trans-unit id="79da6dd267a1af7c49de528a0958693f9d1cc7f9" translate="yes" xml:space="preserve">
          <source>Avipsa Roy (geospatial extension)</source>
          <target state="translated">Avipsa Roy(地理空间扩展)</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">贡献者</target>
        </trans-unit>
        <trans-unit id="53274ddc6816e9168a41a5ba0319121b830188a6" translate="yes" xml:space="preserve">
          <source>Craig Blaha (documentation)</source>
          <target state="translated">Craig Blaha(文件)</target>
        </trans-unit>
        <trans-unit id="b8f43cb5b8831bfea0a762aa5645eeb66493b00b" translate="yes" xml:space="preserve">
          <source>Edouard Fouch&amp;eacute; (core)</source>
          <target state="translated">爱德华&amp;middot;福谢（核心）</target>
        </trans-unit>
        <trans-unit id="39a860ec2e7ba65e8fe8de7be96bedff7714060e" translate="yes" xml:space="preserve">
          <source>Et voil&amp;agrave; !</source>
          <target state="translated">等等！</target>
        </trans-unit>
        <trans-unit id="715d6865751ba9bda8dd0f407d4e440cd697eb0a" translate="yes" xml:space="preserve">
          <source>Eva Feillet (core, geospatial extension, documentation)</source>
          <target state="translated">Eva Feillet(核心、地理空间扩展、文件)</target>
        </trans-unit>
        <trans-unit id="1e2bfc0d574ebb3c0866208d70d9a4defc9229e8" translate="yes" xml:space="preserve">
          <source>Feature Selection</source>
          <target state="translated">特征选择</target>
        </trans-unit>
        <trans-unit id="66131ffb4d284b6d4e38da3ad143ee53b0e4c901" translate="yes" xml:space="preserve">
          <source>Full test coverage (a basic coverage is already provided)</source>
          <target state="translated">全面的测试覆盖率(已提供基本覆盖率)。</target>
        </trans-unit>
        <trans-unit id="4cf3e293068617d183148bc7815b586c691d1c50" translate="yes" xml:space="preserve">
          <source>How ibmdbpy works</source>
          <target state="translated">ibmdbpy如何工作</target>
        </trans-unit>
        <trans-unit id="91a2f768088a321921cfe914f09b51c436e8d7f0" translate="yes" xml:space="preserve">
          <source>How the geospatial functions work</source>
          <target state="translated">地理空间功能如何工作</target>
        </trans-unit>
        <trans-unit id="407a2341028c18119bf47ef501bda9e3bc71a44a" translate="yes" xml:space="preserve">
          <source>How to contribute</source>
          <target state="translated">如何捐款</target>
        </trans-unit>
        <trans-unit id="52c3c814dafd8e9352ef8d651003b7f1194ae204" translate="yes" xml:space="preserve">
          <source>IBM Db2 is a database management system. The ibmdbpy project can be used by Python developers with very little additional knowledge, because it copies the well-known interface of the Pandas library for data manipulation and the Scikit-learn library for the use of machine learning algorithms.</source>
          <target state="translated">IBM Db2是一个数据库管理系统。ibmdbpy项目可以让Python开发者在几乎没有额外知识的情况下使用,因为它复制了众所周知的用于数据操作的Pandas库和用于机器学习算法的Scikit-learn库的接口。</target>
        </trans-unit>
        <trans-unit id="56afd812f0100877e160ac2dc743312e5be77056" translate="yes" xml:space="preserve">
          <source>Ibmdbpy provides a range of functions to support efficient in-database feature selection, e.g. to estimate the relevance of attributes with respect to a particular target. Functions and documentation can be found in the submodule</source>
          <target state="translated">Ibmdbpy提供了一系列函数来支持高效的数据库内特征选择,例如估计属性与特定目标的相关性。函数和文档可以在子模块--Ibmdbpy中找到。</target>
        </trans-unit>
        <trans-unit id="36b6482dd26073ef5da62027036a2a30cf724577" translate="yes" xml:space="preserve">
          <source>If you are a member of the ibmdbanalytics group, you can create branchs and merge them to master. Otherwise, you can fork the project and do a pull request. You are very welcome to contribute to the code and to the documentation.</source>
          <target state="translated">如果你是ibmdbanalytics组的成员,你可以创建分支并将它们合并到master。否则,你可以对项目进行分叉,并进行拉取请求。我们非常欢迎你对代码和文档做出贡献。</target>
        </trans-unit>
        <trans-unit id="3cb0afc721e0866ed6111fd7039a57e4f6e7e249" translate="yes" xml:space="preserve">
          <source>In the background, ibmdbpy looks for numerical columns in the table and builds an SQL request that returns the correlation between each pair of columns. Here is the SQL request that was executed for this example:</source>
          <target state="translated">在后台,ibmdbpy寻找表中的数字列,并建立一个SQL请求,返回每对列之间的相关性。下面是这个例子中执行的SQL请求。</target>
        </trans-unit>
        <trans-unit id="5f91bb3b05543fd44739c40a0dde7a2ce9e87b6b" translate="yes" xml:space="preserve">
          <source>In the background, ibmdbpy looks for the column defined as &lt;strong&gt;geometry&lt;/strong&gt; in the table and builds an SQL request that returns the area of each ST_MULTIPOLYGON object (a multipolygon is a collection of polygons).
Here is the SQL request that was executed for this example:</source>
          <target state="translated">在后台，ibmdbpy在表中查找定义为&lt;strong&gt;几何&lt;/strong&gt;的列，并构建一个SQL请求，该请求返回每个ST_MULTIPOLYGON对象的面积（多多边形是多边形的集合）。这是为该示例执行的SQL请求：</target>
        </trans-unit>
        <trans-unit id="06fc890d73f5303d61e38339be6e01d75873c3c4" translate="yes" xml:space="preserve">
          <source>Michael Wurst (core)</source>
          <target state="translated">Michael Wurst(核心)</target>
        </trans-unit>
        <trans-unit id="0139e3498911eda6527df96e4ec57cd4ef1b4f2e" translate="yes" xml:space="preserve">
          <source>Next, we can create an IDA data frame (IDA stands for in-database Analytics) that points to the table we just uploaded. Let&amp;rsquo;s use this one:</source>
          <target state="translated">接下来，我们可以创建一个IDA数据框（IDA代表数据库内Analytics（分析）），该数据框指向我们刚刚上传的表。让我们使用这个：</target>
        </trans-unit>
        <trans-unit id="9b3e833ac4c94506c8a79c6b32a3f8b7da9bd88b" translate="yes" xml:space="preserve">
          <source>Nicole Schoen (core)</source>
          <target state="translated">妮可鞋(核心)</target>
        </trans-unit>
        <trans-unit id="f099176e41bf1db03dae3424d37788676254f3f6" translate="yes" xml:space="preserve">
          <source>Note that to create an IDA data frame using the IdaDataFrame object, we need to specify our previously opened IdaDataBase object, because it holds the connection.</source>
          <target state="translated">需要注意的是,要使用IdaDataFrame对象创建一个IDA数据帧,我们需要指定我们之前打开的IdaDataBase对象,因为它拥有连接。</target>
        </trans-unit>
        <trans-unit id="9729a229e99064ddd7f6c82c7812d74ffd1a7dcb" translate="yes" xml:space="preserve">
          <source>Note that to create an IdaGeoDataframe using the IdaDataFrame object, we need to specify our previously opened IdaDataBase object, because it holds the connection.</source>
          <target state="translated">请注意,要使用IdaDataFrame对象创建一个IdaGeoDataframe,我们需要指定我们之前打开的IdaDataBase对象,因为它拥有连接。</target>
        </trans-unit>
        <trans-unit id="38729b3a0a266dcdda680ca8e8d697354d871bde" translate="yes" xml:space="preserve">
          <source>Now let us compute the area of the counties in the GEO_COUNTY table. The result of the area will be stored as a new column &amp;lsquo;area&amp;rsquo; in the IdaGeoDataFrame:</source>
          <target state="translated">现在，让我们计算GEO_COUNTY表中的县面积。区域的结果将作为新列&amp;ldquo;区域&amp;rdquo;存储在IdaGeoDataFrame中：</target>
        </trans-unit>
        <trans-unit id="eabe7bce51b6c96f0b7323fdcacd72247dc6fa62" translate="yes" xml:space="preserve">
          <source>Now let us compute the correlation matrix:</source>
          <target state="translated">现在让我们计算一下相关矩阵。</target>
        </trans-unit>
        <trans-unit id="c7e0729ac4f2f8f68be5d7f509ba0772b52f9120" translate="yes" xml:space="preserve">
          <source>Project Roadmap</source>
          <target state="translated">项目路线图</target>
        </trans-unit>
        <trans-unit id="4c29dbf9b35d69cc32ca294e6562b7b424e6bbc2" translate="yes" xml:space="preserve">
          <source>ROADMAP.txt</source>
          <target state="translated">ROADMAP.txt</target>
        </trans-unit>
        <trans-unit id="125d184be9e6977845c21c9495db6a97a0a8480d" translate="yes" xml:space="preserve">
          <source>Rafael Rodriguez Morales (geospatial extension, core)</source>
          <target state="translated">Rafael Rodriguez Morales(地理空间扩展,核心)</target>
        </trans-unit>
        <trans-unit id="82b8713f1d9f4393aa66500fda3cc306f7a29606" translate="yes" xml:space="preserve">
          <source>The following scenario illustrates how ibmdbpy works.</source>
          <target state="translated">下面的场景说明了ibmdbpy的工作原理。</target>
        </trans-unit>
        <trans-unit id="46fa8faf402c0e4193dbdd749f4c5fa7fceb8651" translate="yes" xml:space="preserve">
          <source>The following scenario illustrates how spatial functions work by creating an IDA geospatial data frame that points to a sample table in Db2:</source>
          <target state="translated">下面的场景说明了空间函数如何通过创建一个指向Db2中的示例表的IDA地理空间数据框架来工作。</target>
        </trans-unit>
        <trans-unit id="d064c24e4df4d708201d9ffcc00b898949f24c04" translate="yes" xml:space="preserve">
          <source>The ibmdbpy package provides a Python interface to the in-database geospatial functions of IBM Db2 Spatial Extender (db2gse). It identifies the geometry column for spatial tables and lets you perform spatial queries based upon this column. The results are fetched and formatted into the corresponding data structure, for example, an IdaGeoDataframe.</source>
          <target state="translated">ibmdbpy包为IBM Db2 Spatial Extender(db2gse)的数据库内地理空间功能提供了一个Python接口。它可以识别空间表的几何列,并让你基于此列执行空间查询。结果被获取并格式化到相应的数据结构中,例如,一个IdaGeoDataframe。</target>
        </trans-unit>
        <trans-unit id="efb66699f9844ce4046a473c9f211f5460c2bf1c" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project is compatible with Python releases 2.7 up to 3.6 and can be connected to Db2 databases via ODBC or JDBC.</source>
          <target state="translated">ibmdbpy项目兼容Python 2.7到3.6版本,可以通过ODBC或JDBC连接到Db2数据库。</target>
        </trans-unit>
        <trans-unit id="22a7c215290aea6d778ea12717e38c34a879eb98" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project provides a Python interface for data manipulation and access to in-database algorithms in IBM Db2. It accelerates Python analytics by seamlessly pushing operations written in Python into the underlying database for execution, thereby benefitting from in-database performance-enhancing features, such as columnar storage and parallel processing.</source>
          <target state="translated">ibmdbpy项目提供了一个Python接口,用于在IBM Db2中进行数据操作和访问数据库内算法。它通过将用Python编写的操作无缝地推送到底层数据库中执行来加速Python分析,从而受益于数据库内的性能增强功能,如列式存储和并行处理。</target>
        </trans-unit>
        <trans-unit id="97700c64a496f6a372f997ec7617b9b25bdffbba" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project translates Pandas-like syntax into SQL and uses a middleware API (pypyodbc/JayDeBeApi) to send it to an ODBC or JDBC-connected database for execution. After fetching the results, printing them will look similar to printing a pandas.DataFrame or a pandas.Series. Ibmdbpy essential abstractions are IdaDataFrames, similar to Pandas.DataFrames, and IdaSeries, similar to Pandas.Series.Ibmdbpy also provides you with tools dedicated to geospatial data: you will use IdaGeoDataFrames which can be compared to the GeoDataFrames from GeoPandas, the geospatial extension of Pandas.</source>
          <target state="translated">ibmdbpy项目将类似Pandas的语法翻译成SQL,并使用中间件API(pypyodbc/JayDeBeApi)将其发送到ODBC或JDBC连接的数据库中执行。取到结果后,打印结果会类似于打印pandas.DataFrame或pandas.Series。Ibmdbpy必不可少的抽象是IdaDataFrames,类似于Pandas.DataFrames,以及IdaSeries,类似于Pandas.Series.Ibmdbpy还为你提供了专门用于地理空间数据的工具:你将使用IdaGeoDataFrames,它可以与Pandas的地理空间扩展GeoPandas的GeoDataFrames进行比较。</target>
        </trans-unit>
        <trans-unit id="eab32dcf40b426cf256d20020c6ca242ee001f42" translate="yes" xml:space="preserve">
          <source>The ibmdbpy project was initiated in April 2015 at IBM Deutschland Reasearch &amp;amp; Development, B&amp;ouml;blingen.
Here is the list of the persons who contributed to the project, in the chronological order of their contribution:</source>
          <target state="translated">ibmdbpy项目于2015年4月在伯布林根的IBM Deutschland Reasearch＆Development发起。以下是按时间顺序排列的项目贡献者列表：</target>
        </trans-unit>
        <trans-unit id="ad23c9db1abd65151ceea214af4201c956b5c99d" translate="yes" xml:space="preserve">
          <source>The latest version of ibmdbpy is available on the &lt;a href=&quot;https://pypi.python.org/pypi/ibmdbpy&quot;&gt;Python Package Index&lt;/a&gt; and &lt;a href=&quot;https://github.com/ibmdbanalytics/ibmdbpy&quot;&gt;Github&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;https://pypi.python.org/pypi/ibmdbpy&quot;&gt;Python Package Index&lt;/a&gt;和&lt;a href=&quot;https://github.com/ibmdbanalytics/ibmdbpy&quot;&gt;Github&lt;/a&gt;上获得ibmdbpy的最新版本。</target>
        </trans-unit>
        <trans-unit id="1c01d763fb2bb42be93332b5b006b178185fdacf" translate="yes" xml:space="preserve">
          <source>The project is still at an early stage and many of its features are still in development. However, several experiments have already demonstrated that it provides significant performance advantages when operating on medium or large amounts of data, that is, on tables of 1 million rows or more.</source>
          <target state="translated">该项目仍处于早期阶段,其许多功能仍在开发中。然而,一些实验已经表明,在对中等或大量数据进行操作时,即在对100万行或更多的表进行操作时,它具有显著的性能优势。</target>
        </trans-unit>
        <trans-unit id="56c73fd133bbac3454bd1177d4dbf95d90a20549" translate="yes" xml:space="preserve">
          <source>The result fetched by ibmdbpy is a tuple containing all values of the matrix. This tuple is formatted back into a Pandas.DataFrame and then returned:</source>
          <target state="translated">ibmdbpy获取的结果是一个包含矩阵所有值的元组。这个元组被格式化成Pandas.DataFrame,然后返回。</target>
        </trans-unit>
        <trans-unit id="9fd31dd7bec0b91101c3db1a61e9c8b126f875a4" translate="yes" xml:space="preserve">
          <source>There are many ways to contribute. If you find bugs and have improvement ideas or need some new specific features, please open a ticket! We do care about it.</source>
          <target state="translated">有很多方法可以做出贡献。如果你发现了bug,有改进的想法,或者需要一些新的特定功能,请开一个票据! 我们确实很关心这个问题。</target>
        </trans-unit>
        <trans-unit id="812bcc2e2b4e742ce3885244c72e77b382a23735" translate="yes" xml:space="preserve">
          <source>Toni Bollinger (core)</source>
          <target state="translated">Toni Bollinger(核心)</target>
        </trans-unit>
        <trans-unit id="9986b5ce0489055c6c4caec728a8bd643f12f871" translate="yes" xml:space="preserve">
          <source>William Moore (documentation)</source>
          <target state="translated">威廉-穆尔(文件)</target>
        </trans-unit>
        <trans-unit id="6cf14d59304d33400f8c8f44f06697e469654e43" translate="yes" xml:space="preserve">
          <source>You want to contribute? That&amp;rsquo;s great! There are many things you can do.</source>
          <target state="translated">你想贡献吗？那很棒！您可以做很多事情。</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">档案</target>
        </trans-unit>
        <trans-unit id="a9574b7b2cb02ba5a93dc214f1aadfbe4fc4415f" translate="yes" xml:space="preserve">
          <source>ibmdbpy.feature_selection</source>
          <target state="translated">ibmdbpy.feature_selection</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
