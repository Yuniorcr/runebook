<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/fluent-logger/">
    <body>
      <group id="fluent-logger">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">，</target>
        </trans-unit>
        <trans-unit id="a21a8a881b6a752307e8dfd0430826ee85f9f556" translate="yes" xml:space="preserve">
          <source>, so it&amp;rsquo;s
just a matter of importing from a different module.</source>
          <target state="translated">，因此只需从其他模块导入即可。</target>
        </trans-unit>
        <trans-unit id="ea595cbc278adbcaf2a36a0c85082fe36f53145c" translate="yes" xml:space="preserve">
          <source>- there are also corresponding asynchronous versions in</source>
          <target state="translated">-也有相应的异步版本</target>
        </trans-unit>
        <trans-unit id="b70ddc24849145e9a1e00ab4f3f9c00176de4ed5" translate="yes" xml:space="preserve">
          <source>. By doing so the thread doing the logging won&amp;rsquo;t block
even when the queue is full, the new event will be added to the queue by discarding the oldest one.</source>
          <target state="translated">。这样，即使队列已满，进行日志记录的线程也不会阻塞，新事件将通过丢弃最旧的事件而添加到队列中。</target>
        </trans-unit>
        <trans-unit id="5de810e0f59c2172744fbb3111ee803356b40da3" translate="yes" xml:space="preserve">
          <source>. If an error happens in</source>
          <target state="translated">。如果发生错误</target>
        </trans-unit>
        <trans-unit id="216b446b07e7c4162a7469e027cda332c8bbf1ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fluent/fluentd&quot;&gt;Fluentd&lt;/a&gt; solves that problem by
having: easy installation, small footprint, plugins, reliable buffering,
log forwarding, etc.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fluent/fluentd&quot;&gt;Fluentd&lt;/a&gt;通过以下方式解决了该问题：易于安装，占地面积小，插件，可靠的缓冲，日志转发等。</target>
        </trans-unit>
        <trans-unit id="60a2a58672f80e060bc7b9b6f2b8a6cedb764bf3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Version 0.8.0 is the last version supporting Python 2.6, 3.2 and 3.3</source>
          <target state="translated">&lt;strong&gt;重要说明&lt;/strong&gt;：版本0.8.0是支持Python 2.6、3.2和3.3的最新版本</target>
        </trans-unit>
        <trans-unit id="3c1527caf4277d226017b3394ed2d48ddeac041e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: please note that it&amp;rsquo;s important to close the sender or the handler at program termination. This will make
sure the communication thread terminates and it&amp;rsquo;s joined correctly. Otherwise the program won&amp;rsquo;t exit, waiting for
the thread, unless forcibly killed.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：请注意，在程序终止时关闭发送方或处理程序很重要。这将确保通信线程终止并正确连接。否则，除非被强制终止，否则程序将不会退出，等待线程。</target>
        </trans-unit>
        <trans-unit id="58210e5c57d0eb9c889c78cf5b86ab511b64ebf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: setting</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：设置</target>
        </trans-unit>
        <trans-unit id="9b8bdd5906b2473abcf9da54746f8ad244bd2d0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fluent-logger-python&lt;/strong&gt; is a Python library, to record the events from
Python application.</source>
          <target state="translated">&lt;strong&gt;fluent-logger-python&lt;/strong&gt;是一个Python库，用于记录来自Python应用程序的事件。</target>
        </trans-unit>
        <trans-unit id="d8bd5092e9624958cd47257c6b06c5f8409eb291" translate="yes" xml:space="preserve">
          <source>A Python logging handler for Fluentd event collector</source>
          <target state="translated">一个用于Fluentd事件收集器的Python日志处理程序。</target>
        </trans-unit>
        <trans-unit id="ac3460a57df0a3917d6dbab7b32a0549e4e84f5b" translate="yes" xml:space="preserve">
          <source>A sample configuration</source>
          <target state="translated">配置示例</target>
        </trans-unit>
        <trans-unit id="b1eb8e6e4efec052fab27c8d56577098488c63d9" translate="yes" xml:space="preserve">
          <source>After that, type following command:</source>
          <target state="translated">然后,输入以下命令。</target>
        </trans-unit>
        <trans-unit id="8038e0fed9c1eeb7200740c230a8de9bf439e1be" translate="yes" xml:space="preserve">
          <source>Apache License, Version 2.0</source>
          <target state="translated">Apache许可,2.0版本</target>
        </trans-unit>
        <trans-unit id="58bd2fe76169f5403bf47169a6773a253151dc9c" translate="yes" xml:space="preserve">
          <source>Asynchronous Communication</source>
          <target state="translated">异步通信</target>
        </trans-unit>
        <trans-unit id="30082596023a17e7154e72d585fc89dcef1a43ec" translate="yes" xml:space="preserve">
          <source>Besides the regular interfaces - the event-based one provided by</source>
          <target state="translated">除了常规的接口--基于事件的接口由</target>
        </trans-unit>
        <trans-unit id="979a800136b21987cbd1b870075b511a6d57a7ac" translate="yes" xml:space="preserve">
          <source>By default, the logger assumes fluentd daemon is launched locally. You
can also specify remote logger by passing the options.</source>
          <target state="translated">默认情况下,日志记录器假定fluentd守护进程在本地启动。你也可以通过传递选项来指定远程记录器。</target>
        </trans-unit>
        <trans-unit id="00100112fcb334f093b99f54cf7ebd3007d9eec9" translate="yes" xml:space="preserve">
          <source>Circular queue mode</source>
          <target state="translated">圆形时尚尾巴</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">配置</target>
        </trans-unit>
        <trans-unit id="a60a223c98b2c36522f0b7f89f57ae14e144678a" translate="yes" xml:space="preserve">
          <source>Contributors</source>
          <target state="translated">贡献者</target>
        </trans-unit>
        <trans-unit id="3993e83e41540a6e6f1d640fbba557239ea07c67" translate="yes" xml:space="preserve">
          <source>Event-Based Interface</source>
          <target state="translated">基于事件的接口</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">假的</target>
        </trans-unit>
        <trans-unit id="2bf9753b533bea49b7a93bfebb18a4761147c35f" translate="yes" xml:space="preserve">
          <source>First, you need to call</source>
          <target state="translated">首先,你需要调用</target>
        </trans-unit>
        <trans-unit id="96c31c589eac40152741fc3d74698e0ef3269fbc" translate="yes" xml:space="preserve">
          <source>FluentHandler</source>
          <target state="translated">语音</target>
        </trans-unit>
        <trans-unit id="c9ae4e5b776cd264db9d5466d6a422df72d2d7fa" translate="yes" xml:space="preserve">
          <source>FluentSender</source>
          <target state="translated">FluentSender</target>
        </trans-unit>
        <trans-unit id="332e8c8c029d72c0d6efa837b0fb15469a5ee9a9" translate="yes" xml:space="preserve">
          <source>FluentSender Interface</source>
          <target state="translated">FluentSender接口</target>
        </trans-unit>
        <trans-unit id="53b565c46ccbc1717fa3617d1b0113ce7fb55f0a" translate="yes" xml:space="preserve">
          <source>Fluentd daemon must be launched with a tcp source configuration:</source>
          <target state="translated">Fluentd守护进程必须以tcp源配置启动。</target>
        </trans-unit>
        <trans-unit id="e925f0bfa9ad083353d470016428dfbf1706a2d6" translate="yes" xml:space="preserve">
          <source>For instance, for the event-based interface:</source>
          <target state="translated">例如,对于基于事件的接口。</target>
        </trans-unit>
        <trans-unit id="39eb1c4d671b887c01206612e03bf1b364ce9808" translate="yes" xml:space="preserve">
          <source>For sending event, call</source>
          <target state="translated">发送事件时,请致电</target>
        </trans-unit>
        <trans-unit id="42ea5308a914664d7b9cd09a3cee5c2964212cb6" translate="yes" xml:space="preserve">
          <source>Handler for buffer overflow</source>
          <target state="translated">缓冲区溢出处理程序</target>
        </trans-unit>
        <trans-unit id="a4d23d184303812522a35f65be63e515cf61405c" translate="yes" xml:space="preserve">
          <source>If you want to shutdown the client, call</source>
          <target state="translated">如果您想关闭客户端,请调用</target>
        </trans-unit>
        <trans-unit id="f17de7905fbefeda5b80f7b6fc052b152489c915" translate="yes" xml:space="preserve">
          <source>In some applications it can be especially important to guarantee that the logging process won&amp;rsquo;t block under &lt;em&gt;any&lt;/em&gt;
circumstance, even when it&amp;rsquo;s logging faster than the sending thread could handle (&lt;em&gt;backpressure&lt;/em&gt;). In this case it&amp;rsquo;s
possible to enable the</source>
          <target state="translated">在某些应用程序中，尤其重要的是要确保日志记录过程在&lt;em&gt;任何&lt;/em&gt; 情况下都不会阻塞，即使它的日志记录速度比发送线程可以处理的速度（&lt;em&gt;背压&lt;/em&gt;）也是如此。在这种情况下，可以启用</target>
        </trans-unit>
        <trans-unit id="a8e735381d08033b7f0a7d02b237864e33305abf" translate="yes" xml:space="preserve">
          <source>Initialization code of Event-Based API is below:</source>
          <target state="translated">基于事件的API的初始化代码如下。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="7f2c7143bb55398574c9fa448c3e00a4d8dd91bf" translate="yes" xml:space="preserve">
          <source>Many web/mobile applications generate huge amount of event logs (c,f.
login, logout, purchase, follow, etc). To analyze these event logs could
be really valuable for improving the service. However, the challenge is
collecting these logs easily and reliably.</source>
          <target state="translated">许多网络/移动应用程序会产生大量的事件日志(如登录、注销、购买、关注等)。分析这些事件日志对改善服务非常有价值。然而,如何轻松可靠地收集这些日志是一个挑战。</target>
        </trans-unit>
        <trans-unit id="b45f0eb56832ae32d3b4a389cfee7552abeff3f1" translate="yes" xml:space="preserve">
          <source>Need wheel package.</source>
          <target state="translated">需要轮毂包。</target>
        </trans-unit>
        <trans-unit id="dd2a4355b5b74bc0475e338b6e435429f1001c8f" translate="yes" xml:space="preserve">
          <source>Other methods for Event-Based Interface.</source>
          <target state="translated">基于事件接口的其他方法。</target>
        </trans-unit>
        <trans-unit id="72e6526fcd4929cf5d2dc77b7ab15a36652874e7" translate="yes" xml:space="preserve">
          <source>Patches contributed by &lt;a href=&quot;https://github.com/fluent/fluent-logger-python/contributors&quot;&gt;those
people&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fluent/fluent-logger-python/contributors&quot;&gt;那些人&lt;/a&gt;贡献的补丁。</target>
        </trans-unit>
        <trans-unit id="b8b32846f6d3c1a9fdb83a976c0b02f5767fd4f2" translate="yes" xml:space="preserve">
          <source>Python 2.7 or 3.4+</source>
          <target state="translated">Python 2.7或3.4+</target>
        </trans-unit>
        <trans-unit id="071d87d3eb51c9578f9cc0a641968eba91b6ad2f" translate="yes" xml:space="preserve">
          <source>Python logging.Handler interface</source>
          <target state="translated">Python logging.Handler接口</target>
        </trans-unit>
        <trans-unit id="d41f56cea1ac933d25c57aebc6522e2b6c58eb87" translate="yes" xml:space="preserve">
          <source>Release</source>
          <target state="translated">释放</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">测试</target>
        </trans-unit>
        <trans-unit id="b1d473d6e5c9c193cd1c9eab41692e30f5cb1872" translate="yes" xml:space="preserve">
          <source>Testing can be done using
&lt;a href=&quot;https://nose.readthedocs.org/en/latest/&quot;&gt;nose&lt;/a&gt;.</source>
          <target state="translated">可以用&lt;a href=&quot;https://nose.readthedocs.org/en/latest/&quot;&gt;鼻子&lt;/a&gt;做测试 。</target>
        </trans-unit>
        <trans-unit id="0c0cb1002d5452b40b90796409464637cf309723" translate="yes" xml:space="preserve">
          <source>The interfaces in</source>
          <target state="translated">接口在</target>
        </trans-unit>
        <trans-unit id="5690fb26e272d2c256af906fc72c4dee7462db20" translate="yes" xml:space="preserve">
          <source>Then, please create the events like this. This will send the event to
fluentd, with tag &amp;lsquo;app.follow&amp;rsquo; and the attributes &amp;lsquo;from&amp;rsquo; and &amp;lsquo;to&amp;rsquo;.</source>
          <target state="translated">然后，请创建这样的事件。这会将事件发送到fluentd，带有标签&amp;ldquo; app.follow&amp;rdquo;以及属性&amp;ldquo; from&amp;rdquo;和&amp;ldquo; to&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="87bfe669bd3c7b443feb7d794ca3fbd99806f226" translate="yes" xml:space="preserve">
          <source>This API is a wrapper for</source>
          <target state="translated">这个API是一个包装器,用于</target>
        </trans-unit>
        <trans-unit id="27b8911d5e6673232e84add5c0cc9d493eabb2f5" translate="yes" xml:space="preserve">
          <source>This client-library also has</source>
          <target state="translated">该客户库还拥有</target>
        </trans-unit>
        <trans-unit id="0555a169862aa43d30511518bad8774bd928539b" translate="yes" xml:space="preserve">
          <source>This handler is also called when pending events exist during</source>
          <target state="translated">该处理程序也会在</target>
        </trans-unit>
        <trans-unit id="9aa6c17b6a04f9445c78a61307d9141b1b27f01a" translate="yes" xml:space="preserve">
          <source>This library is distributed as &amp;lsquo;fluent-logger&amp;rsquo; python package. Please
execute the following command to install it.</source>
          <target state="translated">该库以&amp;ldquo; fluent-logger&amp;rdquo; python软件包分发。请执行以下命令进行安装。</target>
        </trans-unit>
        <trans-unit id="266b6a7f698f00c1e776de52a94bf7607dcf19a5" translate="yes" xml:space="preserve">
          <source>To quickly test your setup, add a matcher that logs to the stdout:</source>
          <target state="translated">为了快速测试你的设置,添加一个能记录到stdout的匹配器。</target>
        </trans-unit>
        <trans-unit id="cdd219e355d1ce77e1cc572f47cf753e588ae044" translate="yes" xml:space="preserve">
          <source>To send events with nanosecond-precision timestamps (Fluent 0.14 and up),
specify</source>
          <target state="translated">要以纳秒级精度的时间戳发送事件(Fluent 0.14及以上),请指定</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="f353a2dc478d9577b16ee57a328acb3b230d422b" translate="yes" xml:space="preserve">
          <source>You can also customize formatter via logging.config.dictConfig</source>
          <target state="translated">你也可以通过logging.config.dictConfig自定义formatter。</target>
        </trans-unit>
        <trans-unit id="5740ea28df3434ced96cd5c1c2c6686fd2bbd9b6" translate="yes" xml:space="preserve">
          <source>You can detect an error via return value of</source>
          <target state="translated">你可以通过返回值</target>
        </trans-unit>
        <trans-unit id="f61ef350222de5de074ddb9a4e15b8ad2227163f" translate="yes" xml:space="preserve">
          <source>You can inject your own custom proc to handle buffer overflow in the event of connection failure. This will mitigate the loss of data instead of simply throwing data away.</source>
          <target state="translated">你可以注入自己的自定义proc来处理连接失败时的缓冲区溢出。这将减轻数据的损失,而不是简单地扔掉数据。</target>
        </trans-unit>
        <trans-unit id="f54fdc5d5b8af7ed6080f6a94698ccfe833666dd" translate="yes" xml:space="preserve">
          <source>You should handle any exception in handler. fluent-logger ignores exceptions from</source>
          <target state="translated">你应该在处理程序中处理任何异常,fluent-logger会忽略来自于</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="80bdc1068071cf0482d59c1e8d742a9f3c925bc3" translate="yes" xml:space="preserve">
          <source>and get an error object using</source>
          <target state="translated">并使用</target>
        </trans-unit>
        <trans-unit id="b9307d41990bad33d3dd6a246dd1c1b725a773fd" translate="yes" xml:space="preserve">
          <source>and the python logging one
provided by</source>
          <target state="translated">和由</target>
        </trans-unit>
        <trans-unit id="094df23c23c6fb9436eefeb96a1ed9cd85846696" translate="yes" xml:space="preserve">
          <source>are exactly the same as those in</source>
          <target state="translated">恰恰是那些在</target>
        </trans-unit>
        <trans-unit id="5ab76696f55628281d61d93906bf8707719bb28d" translate="yes" xml:space="preserve">
          <source>asynchandler</source>
          <target state="translated">异步处理程序</target>
        </trans-unit>
        <trans-unit id="e7d959699191959799c6227313a38acb3f8f8fe0" translate="yes" xml:space="preserve">
          <source>asynchandler.FluentHandler</source>
          <target state="translated">asynchandler.FluentHandler。</target>
        </trans-unit>
        <trans-unit id="92c47b763eaaf4e9689af2c24f6278e223cc69bb" translate="yes" xml:space="preserve">
          <source>asyncsender</source>
          <target state="translated">asyncsender</target>
        </trans-unit>
        <trans-unit id="475b86f7d41b0c29a3cf4d188cfa70a114fc81d2" translate="yes" xml:space="preserve">
          <source>asyncsender.FluentSender</source>
          <target state="translated">asyncsender.FluentSender。</target>
        </trans-unit>
        <trans-unit id="445bd0e792c24c12a2ff4e95192da41053074725" translate="yes" xml:space="preserve">
          <source>buffer_overflow_handler</source>
          <target state="translated">缓冲区溢出处理程序</target>
        </trans-unit>
        <trans-unit id="ea4e6c11f33118988ec3a207b737a7a7b2cce9b4" translate="yes" xml:space="preserve">
          <source>circular queue</source>
          <target state="translated">循环队列</target>
        </trans-unit>
        <trans-unit id="6b2b33de79989e971af670279210e2106b3fe227" translate="yes" xml:space="preserve">
          <source>class for Python logging
module.</source>
          <target state="translated">Python日志模块的类。</target>
        </trans-unit>
        <trans-unit id="2553a9bd0bdcd6eb0bf6c9b17385b6c5a9a5420a" translate="yes" xml:space="preserve">
          <source>close()</source>
          <target state="translated">关闭()</target>
        </trans-unit>
        <trans-unit id="2e96e89125f4c1aef797410a4bfdb32c0632ef0c" translate="yes" xml:space="preserve">
          <source>emit</source>
          <target state="translated">发出</target>
        </trans-unit>
        <trans-unit id="74893a875dfd2526247611a38ba00f85e6cc1b78" translate="yes" xml:space="preserve">
          <source>event.Event</source>
          <target state="translated">事件.事件</target>
        </trans-unit>
        <trans-unit id="31a81ec93db3740ee3984fc40e34a60b0412643d" translate="yes" xml:space="preserve">
          <source>handler</source>
          <target state="translated">处理者</target>
        </trans-unit>
        <trans-unit id="7265a26268e1b6be1d2a902862877c36f4160816" translate="yes" xml:space="preserve">
          <source>handler.FluentHandler</source>
          <target state="translated">处理器.FluentHandler</target>
        </trans-unit>
        <trans-unit id="80cc38321e4cd5534ccaea8135f041417988045f" translate="yes" xml:space="preserve">
          <source>has one limitation which can&amp;rsquo;t return success/failure result.</source>
          <target state="translated">有一个限制，不能返回成功/失败结果。</target>
        </trans-unit>
        <trans-unit id="2f39bf585644f4cb979f1182ddc9154dc97f3a89" translate="yes" xml:space="preserve">
          <source>in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de6d4c8d9b3334c86ee31b760c9c22dfce242be" translate="yes" xml:space="preserve">
          <source>is a structured event logger for Fluentd.</source>
          <target state="translated">是Fluentd的一个结构化事件记录器。</target>
        </trans-unit>
        <trans-unit id="79834a5a40480a8072c01a517c2a44ee27982372" translate="yes" xml:space="preserve">
          <source>last_error</source>
          <target state="translated">最后的错误</target>
        </trans-unit>
        <trans-unit id="aa0f455e347e36c51df6a59c28daf3290191be09" translate="yes" xml:space="preserve">
          <source>logger
instance. This call needs to be called only once, at the beginning of
the application for example.</source>
          <target state="translated">记录仪实例。这个调用只需要调用一次,例如在应用程序开始时。</target>
        </trans-unit>
        <trans-unit id="52899af8348da562189740c937c96981ca3defec" translate="yes" xml:space="preserve">
          <source>logging.yaml</source>
          <target state="translated">logging.yaml</target>
        </trans-unit>
        <trans-unit id="c3ebeb46278c9a05719cf3ae6a81f99e2ad831d0" translate="yes" xml:space="preserve">
          <source>method with your event. Following example will send the event to
fluentd, with tag &amp;lsquo;app.follow&amp;rsquo; and the attributes &amp;lsquo;from&amp;rsquo; and &amp;lsquo;to&amp;rsquo;.</source>
          <target state="translated">事件的方法。以下示例会将事件发送到fluentd，其标签为&amp;ldquo; app.follow&amp;rdquo;，属性为&amp;ldquo; from&amp;rdquo;和&amp;ldquo; to&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="946465000bd9e24c032001a54783f3574c94142e" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="translated">方法。</target>
        </trans-unit>
        <trans-unit id="db91a23b57b4372ad3361fcacec0e65611b851c4" translate="yes" xml:space="preserve">
          <source>mode, by passing</source>
          <target state="translated">模式,通过传递</target>
        </trans-unit>
        <trans-unit id="b3eb9bd934f07f98fb01761443b5bfd7ac1521d5" translate="yes" xml:space="preserve">
          <source>msgpack-python</source>
          <target state="translated">msgpack-python</target>
        </trans-unit>
        <trans-unit id="24183108a923daa19d96cd2486cfa5b57961d2a7" translate="yes" xml:space="preserve">
          <source>nanosecond_precision</source>
          <target state="translated">纳秒精度</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">关于</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="7067ae9936228297efbec4036f087d50468ce194" translate="yes" xml:space="preserve">
          <source>or for the python logging interface:</source>
          <target state="translated">或用于python日志接口。</target>
        </trans-unit>
        <trans-unit id="aa92df48663b19ec217434b2529739ea5fcc868f" translate="yes" xml:space="preserve">
          <source>parameter of</source>
          <target state="translated">的参数</target>
        </trans-unit>
        <trans-unit id="18a93a90f5c548a1b29a92118734174b68fb4b51" translate="yes" xml:space="preserve">
          <source>queue_circular</source>
          <target state="translated">循环排队</target>
        </trans-unit>
        <trans-unit id="ecea3d23b1b921417af2af45446c25f8cd32d9cb" translate="yes" xml:space="preserve">
          <source>respectively. These versions use a separate thread to handle the communication with the remote fluentd
server. In this way the client of the library won&amp;rsquo;t be blocked during the logging of the events, and won&amp;rsquo;t risk going
into timeout if the fluentd server becomes unreachable. Also it won&amp;rsquo;t be slowed down by the network overhead.</source>
          <target state="translated">分别。这些版本使用单独的线程来处理与远程流利服务器的通信。这样，库的客户端将不会在事件记录期间被阻止，并且即使流利的服务器变得不可访问，也不会冒超时的风险。而且它不会因网络开销而减慢速度。</target>
        </trans-unit>
        <trans-unit id="414e681ebabcd2f23de1f32468992b9c81c5f909" translate="yes" xml:space="preserve">
          <source>returns</source>
          <target state="translated">返回</target>
        </trans-unit>
        <trans-unit id="acc6a31daa43161b626de8ab3de5e1e70ad5a4c0" translate="yes" xml:space="preserve">
          <source>sender</source>
          <target state="translated">发件人</target>
        </trans-unit>
        <trans-unit id="70bedb1384711af39b9c5d52704672a6d66cd4c8" translate="yes" xml:space="preserve">
          <source>sender.FluentSender</source>
          <target state="translated">transmitter.FluentSender</target>
        </trans-unit>
        <trans-unit id="566103808d9956bc0eca2983dde7b44f38929167" translate="yes" xml:space="preserve">
          <source>sender.setup()</source>
          <target state="translated">sender.setup()</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">にとって</target>
        </trans-unit>
        <trans-unit id="7286623d3e3e75ec5192f068b1babb59ba2d7549" translate="yes" xml:space="preserve">
          <source>to create global</source>
          <target state="translated">以创建全球</target>
        </trans-unit>
        <trans-unit id="9ab96d9690092a50c81fdfe97f6f46121f20c643" translate="yes" xml:space="preserve">
          <source>will cause loss of events if the queue fills up completely! Make sure
that this doesn&amp;rsquo;t happen, or it&amp;rsquo;s acceptable for your application.</source>
          <target state="translated">如果队列完全填满，将导致事件丢失！确保这不会发生，或者对于您的应用程序是可接受的。</target>
        </trans-unit>
        <trans-unit id="a0ebc00ce2803c4b05ae16c519fdb6afbeecd7c8" translate="yes" xml:space="preserve">
          <source>would be:</source>
          <target state="translated">将是。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
