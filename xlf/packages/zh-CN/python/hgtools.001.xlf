<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/hgtools/">
    <body>
      <group id="hgtools">
        <trans-unit id="b61cc2376d4620a532af9b88468d873bf4f22f9c" translate="yes" xml:space="preserve">
          <source>) will only prevent you from getting
bug fixes. Only specify an upper bound if you require support for older
versions of Python.</source>
          <target state="translated">）只会阻止您修复错误。仅在需要支持较旧版本的Python时指定上限。</target>
        </trans-unit>
        <trans-unit id="ac2c20d90a3333d40ac118dacd1a5ac07f9d7fd9" translate="yes" xml:space="preserve">
          <source>, set it to a non-empty dictionary with
one or more of the following parameters:</source>
          <target state="translated">，将其设置为具有以下一个或多个参数的非空字典：</target>
        </trans-unit>
        <trans-unit id="c6ba5655483872bbd7c0997c86a25f87c73707f6" translate="yes" xml:space="preserve">
          <source>. An
in-process RepoManager for Mercurial exists but has been disabled due to
issues that arise when run in certain environments (namely setuptools
sandboxing).</source>
          <target state="translated">。存在用于Mercurial的进程内RepoManager，但由于在某些环境中运行时出现问题（即setuptools沙箱）而被禁用。</target>
        </trans-unit>
        <trans-unit id="4d0a658fc0562a11539101c81d8133d9357d0a79" translate="yes" xml:space="preserve">
          <source>:
A Python function with the following signature:</source>
          <target state="translated">：具有以下签名的Python函数：</target>
        </trans-unit>
        <trans-unit id="92781ec5c0a74731a752705e3530aa5f15d6f999" translate="yes" xml:space="preserve">
          <source>:
A string indicating the default version increment for the project.
By default, this value is &amp;lsquo;0.1&amp;rsquo;, meaning hgtools will use the version
&amp;lsquo;1.1dev&amp;rsquo; for builds following the 1.0 release and &amp;lsquo;1.10dev&amp;rsquo; for builds
following a 1.9.3 release. Set this value to &amp;lsquo;1.0&amp;rsquo; or &amp;lsquo;0.0.1&amp;rsquo; for the
current tree to help hgtools guess the target version.</source>
          <target state="translated">：一个字符串，指示项目的默认版本增量。默认情况下，此值为'0.1'，这意味着hgtools将在版本1.0以后的版本中使用版本'1.1dev'，在版本1.9.3之后的版本中使用'1.10dev'。对于当前树，将此值设置为&amp;ldquo; 1.0&amp;rdquo;或&amp;ldquo; 0.0.1&amp;rdquo;，以帮助hgtools猜测目标版本。</target>
        </trans-unit>
        <trans-unit id="d363846f311f88ebc59eb8bbadd0475a03b0e99d" translate="yes" xml:space="preserve">
          <source>A distutils hook has been created to hack setuptools to use this version
information automatically. To use this functionality, just use the</source>
          <target state="translated">我们创建了一个 distutils 钩子来黑掉 setuptools,使其自动使用这些版本信息。要使用这个功能,只要使用</target>
        </trans-unit>
        <trans-unit id="81815d4f34d3921772adc0172f04ad9dd1e572a9" translate="yes" xml:space="preserve">
          <source>Auto Version Numbering</source>
          <target state="translated">自动版本编号</target>
        </trans-unit>
        <trans-unit id="e2a9616834d880a07d1efbea6246653ed597e99f" translate="yes" xml:space="preserve">
          <source>Classes and setuptools plugin for Mercurial and Git repositories</source>
          <target state="translated">适用于Mercurial和Git仓库的类和setuptools插件。</target>
        </trans-unit>
        <trans-unit id="84f7e9505916512510fce551fa69ebcb5af24043" translate="yes" xml:space="preserve">
          <source>For example, if the repo contains the tags 0.1, 0.2, and 0.3 and the
repo is not on any of those tags, get_current_version will return
&amp;lsquo;0.3.1dev&amp;rsquo; and get_current_version(increment=&amp;rsquo;0.1&amp;rsquo;) will return
&amp;lsquo;0.4dev&amp;rsquo;.</source>
          <target state="translated">例如，如果回购包含标签0.1、0.2和0.3，而回购不在这些标签中的任何一个上，则get_current_version将返回'0.3.1dev'，而get_current_version（increment ='0.1'）将返回'0.4dev'。</target>
        </trans-unit>
        <trans-unit id="91871abfa62ca87bdee8debb581524939dc6e1ab" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple example of a setup.py that uses hgtools:</source>
          <target state="translated">这是一个使用hgtools的setup.py的简单示例：</target>
        </trans-unit>
        <trans-unit id="d78393d5efaedc1e591c4407ac13f4ccd794be08" translate="yes" xml:space="preserve">
          <source>If the value supplied to use_vcs_version resolves to True, hgtools will
use the tagged version to determine the version of the
package (based on get_current_version). If an sdist is created, hgtools
will store the calculated version in the tag_build of the setup.cfg and
will use that version when deploying remotely. Therefore, if you are
using auto-versioning, you should not use setuptools tags explicitly.</source>
          <target state="translated">如果提供给use_vcs_version的值解析为True,hgtools将使用标记的版本来确定软件包的版本(基于get_current_version)。如果创建了 sdist,hgtools 会将计算出的版本存储在 setup.cfg 的 tag_build 中,并在远程部署时使用该版本。因此,如果您正在使用自动版本,则不应明确使用 setuptools 标签。</target>
        </trans-unit>
        <trans-unit id="56d3afee85b316dd5f5255cfe960c09993039ce5" translate="yes" xml:space="preserve">
          <source>If you run the setup.py above, setuptools will automatically download
hgtools to the directory where the setup.py is located at (and won&amp;rsquo;t
install it anywhere else) to get all package data files from the
sourec code repository.</source>
          <target state="translated">如果运行上面的setup.py，setuptools将自动将hgtools下载到setup.py所在的目录中（并且不会在其他任何地方安装它），以从sourec代码存储库中获取所有程序包数据文件。</target>
        </trans-unit>
        <trans-unit id="590cb1fa14a0c6202823ca228c90c778175af6c8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to pass keyword parameters to use_vcs_version to
tweak how it generates version numbers. To pass parameters, instead of
setting</source>
          <target state="translated">也可以将关键字参数传递给use_vcs_version来调整其生成版本号的方式。传递参数，而不是设置</target>
        </trans-unit>
        <trans-unit id="8875df48c18030126ef5ef5a6f5c93b23451fb9f" translate="yes" xml:space="preserve">
          <source>MANIFEST.in</source>
          <target state="translated">MANIFEST.in</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Noot:</target>
        </trans-unit>
        <trans-unit id="2a11b23105469306f81c6e15df0d07d427e9978e" translate="yes" xml:space="preserve">
          <source>Released versions currently must conform to the StrictVersion in
distutils. Any tags that don&amp;rsquo;t match this scheme will be ignored.
Future releases may relax this restriction.</source>
          <target state="translated">当前发布的版本必须符合distutils中的StrictVersion。与该方案不匹配的所有标签都将被忽略。将来的版本可能会放宽此限制。</target>
        </trans-unit>
        <trans-unit id="7b5751263628fdccff7f35b400c9b4eb688655ef" translate="yes" xml:space="preserve">
          <source>Repo tags are used to indicate released versions.</source>
          <target state="translated">Repo标签用来表示发布的版本。</target>
        </trans-unit>
        <trans-unit id="f91920649f40890a7ca725576d3053521dc2e8a9" translate="yes" xml:space="preserve">
          <source>See the jaraco.util setup.py for an example of this technique.</source>
          <target state="translated">参见jaraco.util setup.py中的一个例子。</target>
        </trans-unit>
        <trans-unit id="c688c76fe5480518dbbe4af59c96043c386f45f7" translate="yes" xml:space="preserve">
          <source>Tag names are specified as the version only (i.e. 0.1 and not
v0.1 or release-0.1)</source>
          <target state="translated">标签名称只指定为版本(即0.1而不是v0.1或release-0.1)。</target>
        </trans-unit>
        <trans-unit id="2b10ea0d9ad5955abe1b74f0a3591ecc20fc18e9" translate="yes" xml:space="preserve">
          <source>The classes provided by hgtools are designed to use subprocess invocation to
leverage the command-line interfaces of the VCS tools</source>
          <target state="translated">hgtools提供的类被设计为使用子进程调用来利用VCS工具的命令行接口。</target>
        </trans-unit>
        <trans-unit id="b631c1a700af8aefbc537c5208355ded4386de62" translate="yes" xml:space="preserve">
          <source>The first thing to note is the mgr does not yet provide a nice
interface for getting anything but the tags for a revision, so the
example digs into the underlying API to extract the ID. hgtools should
provide better support in the HGRepoManager classes in future releases.</source>
          <target state="translated">首先要注意的是,mgr还没有提供一个很好的接口来获取除了修订版的标签之外的任何东西,所以这个例子挖掘了底层的API来提取ID,hgtools在未来的版本中应该会在HGRepoManager类中提供更好的支持。</target>
        </trans-unit>
        <trans-unit id="d62d034d2084062e9012ef4856f4d360b38020c5" translate="yes" xml:space="preserve">
          <source>The setuptools feature</source>
          <target state="translated">setuptools功能</target>
        </trans-unit>
        <trans-unit id="616d0acba8f71c8a3dd57d4b7c35c03a69d63d5a" translate="yes" xml:space="preserve">
          <source>Thereafter, you may use the RepoManager.get_current_version to
determine the version of your product. If the current revision is tagged
with a valid version, that version will be used. Otherwise, the tags in
the repo will be searched, the latest release will be found, and hgtools
will infer the upcoming release version.</source>
          <target state="translated">此后,您可以使用 RepoManager.get_current_version 来确定产品的版本。如果当前的修订版带有有效的版本标签,那么将使用该版本。否则,将搜索repo中的标签,找到最新的版本,hgtools将推断出即将发布的版本。</target>
        </trans-unit>
        <trans-unit id="bc75dc75eb02324d15c1b6838072ecd9e422855b" translate="yes" xml:space="preserve">
          <source>To use this feature, your project must follow the following assumptions:</source>
          <target state="translated">要使用此功能,您的项目必须遵循以下假设。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="afdbba727aca55d7b2a8a7db5ac3a5ff1cb8011a" translate="yes" xml:space="preserve">
          <source>Use this feature with caution. If you have not already read the
&lt;a href=&quot;http://packages.python.org/distribute/setuptools.html#specifying-your-project-s-version&quot;&gt;setuptools documentation on specifying a project version&lt;/a&gt;,
the author recommends you do read that.</source>
          <target state="translated">请谨慎使用此功能。如果您尚未阅读&lt;a href=&quot;http://packages.python.org/distribute/setuptools.html#specifying-your-project-s-version&quot;&gt;有关指定项目版本&lt;/a&gt;的setuptools文档，则建议您阅读该 文档。</target>
        </trans-unit>
        <trans-unit id="3f9f81536afc0d8d427d8c12c75f277ccc3b9502" translate="yes" xml:space="preserve">
          <source>Use this option, for example, to include the commit hash or local
revision ID in the version:</source>
          <target state="translated">例如,使用这个选项可以在版本中包含提交哈希或本地版本号。</target>
        </trans-unit>
        <trans-unit id="f9ade127815a5a850be91997c41302e9647508f4" translate="yes" xml:space="preserve">
          <source>Versioning Parameters</source>
          <target state="translated">版本参数</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">警告</target>
        </trans-unit>
        <trans-unit id="3f50a04dacf116eaf1e1759066b3719ec7922560" translate="yes" xml:space="preserve">
          <source>With the 0.4 release, hgtools adds support for automatically generating
project version numbers from the repository in which the
project is developed.</source>
          <target state="translated">在0.4版本中,hgtools增加了对自动从开发项目的仓库中生成项目版本号的支持。</target>
        </trans-unit>
        <trans-unit id="10bab2af6c25a0cde01d46eef37804b9866ec419" translate="yes" xml:space="preserve">
          <source>You can read about the setuptools plugin provided by hgtools in the
&lt;a href=&quot;http://pythonhosted.org/setuptools/setuptools.html#adding-support-for-other-revision-control-systems&quot;&gt;setuptools documentation&lt;/a&gt;. It basically returns a list of files that are
under VCS when running the</source>
          <target state="translated">您可以在&lt;a href=&quot;http://pythonhosted.org/setuptools/setuptools.html#adding-support-for-other-revision-control-systems&quot;&gt;setuptools文档中&lt;/a&gt;阅读有关hgtools提供的setuptools插件的 信息。运行该命令时，它基本上会返回VCS下的文件列表。</target>
        </trans-unit>
        <trans-unit id="cef52f1f64b265da06f17f5e14b4757d37ddebd5" translate="yes" xml:space="preserve">
          <source>You should not need to, and I recommend you don&amp;rsquo;t, install hgtools in
your site-packages directory. Let setuptools grab it on demand. Also,
try not to specify an upper bound for the requirement. Usually, simply
specifying &amp;lsquo;hgtools&amp;rsquo; will get the latest version, which is likely to
remain compatible (as a plugin) for the life of the project. Specifying
an upper bound (i.e.</source>
          <target state="translated">您不需要，而且我建议您不要在您的site-packages目录中安装hgtools。让setuptools按需抓取它。另外，请尝试不要为需求指定上限。通常，仅指定&amp;ldquo; hgtools&amp;rdquo;将获得最新版本，该版本很可能在项目生命周期内保持兼容（作为插件）。指定上限（即</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="3a687c0ba24a0460c8ed4f8cf0eb706f8fc160fc" translate="yes" xml:space="preserve">
          <source>function, e.g. if
you create a source and binary distribution. It&amp;rsquo;s a simple yet effective way
of not having to define package data (non-Python files) manually in MANIFEST
templates (</source>
          <target state="translated">功能，例如，如果您创建源代码和二进制发行版。这是一种无需在MANIFEST模板中手动定义包数据（非Python文件）的简单而有效的方法（</target>
        </trans-unit>
        <trans-unit id="46f1a0bd5592a2f9244ca321b129902a06b53e03" translate="yes" xml:space="preserve">
          <source>git</source>
          <target state="translated">粪便</target>
        </trans-unit>
        <trans-unit id="b821103a5881b0d768dd9f697df6b0b7951110b2" translate="yes" xml:space="preserve">
          <source>hg</source>
          <target state="translated">hg</target>
        </trans-unit>
        <trans-unit id="dec92a8d7e06d720238bd2ba8e208cd516fbb6f7" translate="yes" xml:space="preserve">
          <source>hgtools builds on the setuptools_hg plugin for setuptools. hgtools
provides classes for inspecting and working with repositories in the
Mercurial and Git version control systems (VCS).</source>
          <target state="translated">hgtools建立在setuptools的setuptools_hg插件基础上,hgtools提供了在Mercurial和Git版本控制系统(VCS)中检查和处理版本库的类。</target>
        </trans-unit>
        <trans-unit id="0f94930a31fcfa405adb72f661137ad21465581f" translate="yes" xml:space="preserve">
          <source>hgtools is defunct. It has been largely superseded by the
&lt;a href=&quot;https://pypi.python.org/pypi/setuptools_scm&quot;&gt;setuptools_scm&lt;/a&gt;
project.</source>
          <target state="translated">hgtools已失效。它在很大程度上已被&lt;a href=&quot;https://pypi.python.org/pypi/setuptools_scm&quot;&gt;setuptools_scm&lt;/a&gt; 项目取代 。</target>
        </trans-unit>
        <trans-unit id="1ca3f04bdde3abecbf0d1f53d11a21fc830b1011" translate="yes" xml:space="preserve">
          <source>hgtools provides a plugin for setuptools that enables setuptools to find
files managed by the VCS (currently only Mercurial support is implemented).</source>
          <target state="translated">hgtools为setuptools提供了一个插件,使setuptools能够找到由VCS管理的文件(目前只实现了Mercurial支持)。</target>
        </trans-unit>
        <trans-unit id="99dd74f43f26de87d1def9d6a0726530e987052d" translate="yes" xml:space="preserve">
          <source>hgtools will use this function instead of its default implementation
to customize the version number calculation. The</source>
          <target state="translated">hgtools 将使用该函数代替默认实现来定制版本号的计算。这个</target>
        </trans-unit>
        <trans-unit id="8bf746949ca19c92e04815919f507fcd6805d5e0" translate="yes" xml:space="preserve">
          <source>hgtools&amp;lt;1.1</source>
          <target state="translated">hgtools &amp;lt;1.1</target>
        </trans-unit>
        <trans-unit id="38795d1bfff7a891aaae8b44417581b73fdda905" translate="yes" xml:space="preserve">
          <source>hgtools.managers.base.RepoManager</source>
          <target state="translated">hgtools.manager.base.RepoManager。</target>
        </trans-unit>
        <trans-unit id="1f7b3e48ea8357510fab79f2492a09b42e30cd82" translate="yes" xml:space="preserve">
          <source>increment</source>
          <target state="translated">增量</target>
        </trans-unit>
        <trans-unit id="02454a4a815dab0c360abedc00453b163161f7d6" translate="yes" xml:space="preserve">
          <source>is the dictionary passed to use_vcs_version.</source>
          <target state="translated">是传递给use_vcs_version的字典。</target>
        </trans-unit>
        <trans-unit id="5bfcfbe428cce428952787978643f2a5993438aa" translate="yes" xml:space="preserve">
          <source>mgr</source>
          <target state="translated">管理员</target>
        </trans-unit>
        <trans-unit id="80edcefd108bb666ca3e9fbc3cb6e859cb19ff72" translate="yes" xml:space="preserve">
          <source>object is the</source>
          <target state="translated">对象是</target>
        </trans-unit>
        <trans-unit id="6406de31c54c294c75bef84387fb15d2ef9b1eb1" translate="yes" xml:space="preserve">
          <source>object referencing the local repo
and the</source>
          <target state="translated">对象,引用本地的Repo和</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">opções</target>
        </trans-unit>
        <trans-unit id="b79917c8065e7f8f07c97ea1b61210626030b308" translate="yes" xml:space="preserve">
          <source>parameter to setup.
For example:</source>
          <target state="translated">要设置的参数。例如:</target>
        </trans-unit>
        <trans-unit id="80437a44a661d141174209119d54125a59a64b2a" translate="yes" xml:space="preserve">
          <source>setup</source>
          <target state="translated">设置</target>
        </trans-unit>
        <trans-unit id="10ed01f7dbb37d335c5677f94a1218817accf0f4" translate="yes" xml:space="preserve">
          <source>use_vcs_version</source>
          <target state="translated">使用_vcs_version</target>
        </trans-unit>
        <trans-unit id="aef7921eb0816c05013b3f4c0a7ad2512b5ca8fa" translate="yes" xml:space="preserve">
          <source>use_vcs_version = True</source>
          <target state="translated">use_vcs_version=True</target>
        </trans-unit>
        <trans-unit id="c2da37669328d462b5be7798f96d347a5276a3bc" translate="yes" xml:space="preserve">
          <source>version_handler</source>
          <target state="translated">版本处理程序</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
