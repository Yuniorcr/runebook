<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/lektor-webpack-support/">
    <body>
      <group id="lektor-webpack-support">
        <trans-unit id="1c5c361b990ee5ec57dd26dbd96a5886844e8eef" translate="yes" xml:space="preserve">
          <source>Creating a Webpack Project</source>
          <target state="translated">创建一个Webpack项目</target>
        </trans-unit>
        <trans-unit id="5d803f3b3159b683039c5578469cae18501c5223" translate="yes" xml:space="preserve">
          <source>Creating the App</source>
          <target state="translated">创建应用程序</target>
        </trans-unit>
        <trans-unit id="b810ed5f11a4561de867300ae968f0e80a787031" translate="yes" xml:space="preserve">
          <source>Enabling the Plugin</source>
          <target state="translated">启用插件</target>
        </trans-unit>
        <trans-unit id="f1653393005f301b57a3352688c437078f91567a" translate="yes" xml:space="preserve">
          <source>Including The Files</source>
          <target state="translated">包括档案</target>
        </trans-unit>
        <trans-unit id="0df2b72b7a205a90baa0db7a47d1d94920e45df4" translate="yes" xml:space="preserve">
          <source>Manual Builds</source>
          <target state="translated">手动建造</target>
        </trans-unit>
        <trans-unit id="9d0751c1a9a5103fcd0bd21aef5df023406fd361" translate="yes" xml:space="preserve">
          <source>Next up is the webpack config file.  Here we will go with a very basic
setup that's good enough to cover most things you will encounter.  The
idea is to build the files from &lt;code&gt;webpack/scss&lt;/code&gt; and &lt;code&gt;webpack/js&lt;/code&gt; into
&lt;code&gt;assets/static/gen&lt;/code&gt; so that we can use it even if we do not have webpack
installed for as long as someone else ran it before.</source>
          <target state="translated">接下来是webpack配置文件。在这里，我们将进行非常基本的设置，足以涵盖您将遇到的大多数事情。这个想法是将 &lt;code&gt;webpack/scss&lt;/code&gt; 和 &lt;code&gt;webpack/js&lt;/code&gt; 中的文件构建到 &lt;code&gt;assets/static/gen&lt;/code&gt; 以便即使以前没有安装过webpack的人只要我们已经运行过它，我们就可以使用它。</target>
        </trans-unit>
        <trans-unit id="38c7da14fe614fb3068fd6a660c58209d1b85e26" translate="yes" xml:space="preserve">
          <source>Next you need to create a webpack project. Create a &lt;code&gt;webpack/&lt;/code&gt; folder and
inside that folder create &lt;code&gt;package.json&lt;/code&gt; and a &lt;code&gt;webpack.config.js&lt;/code&gt;</source>
          <target state="translated">接下来，您需要创建一个webpack项目。创建一个 &lt;code&gt;webpack/&lt;/code&gt; 文件夹，并在该文件夹内创建 &lt;code&gt;package.json&lt;/code&gt; 和一个 &lt;code&gt;webpack.config.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dd1920b0802a2f77b522dc44cd41c9941d3848b" translate="yes" xml:space="preserve">
          <source>Now we can &lt;code&gt;npm install&lt;/code&gt; (or &lt;code&gt;yarn add&lt;/code&gt;) the rest:</source>
          <target state="translated">现在我们可以 &lt;code&gt;npm install&lt;/code&gt; （或用 &lt;code&gt;yarn add&lt;/code&gt; ）其余的：</target>
        </trans-unit>
        <trans-unit id="1886264809cf336c10603228a8c15b2ffb86c8c7" translate="yes" xml:space="preserve">
          <source>Now we can start building our app.  We configured at least two files
in webpack: &lt;code&gt;js/main.js&lt;/code&gt; and &lt;code&gt;scss/main.scss&lt;/code&gt;.  Those are the entry
points we need to have.  You can create them as empty files in
&lt;code&gt;webpack/js/main.js&lt;/code&gt; and &lt;code&gt;webpack/scss/main.scss&lt;/code&gt;.</source>
          <target state="translated">现在我们可以开始构建我们的应用程序了。我们在webpack中配置了至少两个文件： &lt;code&gt;js/main.js&lt;/code&gt; 和 &lt;code&gt;scss/main.scss&lt;/code&gt; 。这些是我们需要的切入点。您可以在 &lt;code&gt;webpack/js/main.js&lt;/code&gt; 和 &lt;code&gt;webpack/scss/main.scss&lt;/code&gt; 中将它们创建为空文件 。</target>
        </trans-unit>
        <trans-unit id="edbef0ecbe9c034c55145e9fb55b71600c3ca33d" translate="yes" xml:space="preserve">
          <source>Now you need to include the files in your template.  This will do it:</source>
          <target state="translated">现在你需要在你的模板中包含这些文件。这样就可以了。</target>
        </trans-unit>
        <trans-unit id="a9bfcf98673db7ff5a4813710a6aa9aeaa0adb09" translate="yes" xml:space="preserve">
          <source>Now you're ready to go.  When you run &lt;code&gt;lektor server&lt;/code&gt; webpack will not
run, instead you need to now run it as &lt;code&gt;lektor server -f webpack&lt;/code&gt; which
will enable the webpack build.  Webpack automatically builds your files
into &lt;code&gt;assets/static/gen&lt;/code&gt; and this is where Lektor will then pick up the
files.  This is done so that you can ship the webpack generated assets
to others that do not have webpack installed which simplifies using a
Lektor website that uses webpack.</source>
          <target state="translated">现在您可以开始了。当您运行 &lt;code&gt;lektor server&lt;/code&gt; webpack将不会运行，相反，您现在需要将其作为 &lt;code&gt;lektor server -f webpack&lt;/code&gt; 来运行，它将启用webpack构建。Webpack会自动将您的文件构建到 &lt;code&gt;assets/static/gen&lt;/code&gt; ，然后Lektor将在此处收集文件。这样做是为了将webpack生成的资产运送到其他未安装webpack的资产，从而简化了使用使用webpack的Lektor网站的工作。</target>
        </trans-unit>
        <trans-unit id="48dd916c96025b1e57f8d56813d8611d15c051e4" translate="yes" xml:space="preserve">
          <source>Running the Server</source>
          <target state="translated">运行服务器</target>
        </trans-unit>
        <trans-unit id="64916c4955917776fb26b565620e7c3e64a3ee6d" translate="yes" xml:space="preserve">
          <source>Super simple Lektor plugin that runs a webpack watcher</source>
          <target state="translated">超级简单的Lektor插件,可以运行webpack观察器。</target>
        </trans-unit>
        <trans-unit id="42b8e1749f5f83730c1cd41f4040bb36ddb3a842" translate="yes" xml:space="preserve">
          <source>This file instructs &lt;code&gt;npm&lt;/code&gt; which packages we will need.  All we need for a
start is to create an almost empty file (name and version fields are mandatory
but not important for functionality, change them to suit your own needs):</source>
          <target state="translated">该文件指示 &lt;code&gt;npm&lt;/code&gt; 我们需要哪些软件包。首先，我们需要创建一个几乎为空的文件（名称和版本字段为必填项，但对于功能而言并不重要，请对其进行更改以适合您的需要）：</target>
        </trans-unit>
        <trans-unit id="836e71b50cf7917d80cb25cc6412a0a97376e195" translate="yes" xml:space="preserve">
          <source>This is a plugin for Lektor that adds support for webpack to projects.  When
enabled it can build a webpack project from the &lt;code&gt;webpack/&lt;/code&gt; folder into the
asset folder automatically when the server (or build process) is run with
the &lt;code&gt;-f webpack&lt;/code&gt; flag.</source>
          <target state="translated">这是Lektor的插件，为项目添加了对Webpack的支持。启用后，当使用 &lt;code&gt;-f webpack&lt;/code&gt; 标志运行服务器（或构建过程）时，它可以自动将webpack项目从 &lt;code&gt;webpack/&lt;/code&gt; 文件夹构建到资产文件夹。</target>
        </trans-unit>
        <trans-unit id="0c85019f6049520cdcef3bbef0584acfa1c2957f" translate="yes" xml:space="preserve">
          <source>This will install webpack itself together with babel and sass as well as
a bunch of loaders we need for getting all that configured.  Because we
created a &lt;code&gt;package.json&lt;/code&gt; before and we use &lt;code&gt;--save-dev&lt;/code&gt; the dependencies
will be remembered in the &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">这会将webpack本身与babel和sass以及一堆装载程序一起安装，以进行所有配置。因为我们之前创建了 &lt;code&gt;package.json&lt;/code&gt; ，并且使用了 &lt;code&gt;--save-dev&lt;/code&gt; ,所以依赖关系将被记住在 &lt;code&gt;package.json&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="945ce48297bf9072d6a5c4eb7b6d146f7197c4fc" translate="yes" xml:space="preserve">
          <source>To enable the plugin add this to your project file, run this command while
sitting in your Lektor project directory:</source>
          <target state="translated">要启用该插件,请将此添加到你的项目文件中,在你的Lektor项目目录中运行此命令。</target>
        </trans-unit>
        <trans-unit id="e01ee9f088796f10c013c406d150f2fcd2ee37f5" translate="yes" xml:space="preserve">
          <source>To manually trigger a build that also invokes webpack you can use
&lt;code&gt;lektor build -f webpack&lt;/code&gt;.</source>
          <target state="translated">要手动触发也会调用webpack的构建，可以使用 &lt;code&gt;lektor build -f webpack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b4a197af46053a4184246b9438ab6fbe58a3124" translate="yes" xml:space="preserve">
          <source>lektor-webpack-support</source>
          <target state="translated">lektor-webpack-support</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
