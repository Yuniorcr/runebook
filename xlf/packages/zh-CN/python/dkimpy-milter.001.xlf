<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/dkimpy-milter/">
    <body>
      <group id="dkimpy-milter">
        <trans-unit id="88573316c8494037c3105ecb07be3f67dcf77fb2" translate="yes" xml:space="preserve">
          <source>(a) When the MTA will be used for relaying emails, e.g. delivering to other
hosts using the aliases mechanism, it is important not to break
signatures inserted by the original sender.  This is particularly sensitive
particular when the sending domain has published a &quot;reject&quot; DMARC policy.</source>
          <target state="translated">（a）当MTA将用于中继电子邮件时，例如使用别名机制传递到其他主机时，重要的是不要破坏原始发件人插入的签名。当发送域发布了&amp;ldquo;拒绝&amp;rdquo; DMARC策略时，这尤其敏感。</target>
        </trans-unit>
        <trans-unit id="d96cc0cbab3c8df553c10efdf44a3a0e327dc3df" translate="yes" xml:space="preserve">
          <source>(b) As stated in sendmail's KNOWNBUGS file, sendmail truncates header field
values longer than 256 characters, which could mean truncating the domain
of a long From: header field value and invalidating the signature.
You may wish to consider increasing MAXNAME in sendmail/conf.h to mitigate
changing the messages and invalidating their signatures.  This change
requires recompiling sendmail.</source>
          <target state="translated">（b）如sendmail的KNOWNBUGS文件中所述，sendmail会截短长度超过256个字符的标头字段值，这可能意味着截断长的From：标头字段值的域并使签名无效。您不妨考虑在sendmail / conf.h中增加MAXNAME，以减轻更改消息和使消息签名无效的麻烦。此更改需要重新编译sendmail。</target>
        </trans-unit>
        <trans-unit id="03b3a7f311b213ed473be5da48afd8b6a29feb50" translate="yes" xml:space="preserve">
          <source>(c) Similar to (a) above, sendmail may wrap very long single-line recipient
fields for presentation purposes; for example:</source>
          <target state="translated">（c）与上述（a）类似，sendmail可能会包装很长的单行收件人字段以用于演示；例如：</target>
        </trans-unit>
        <trans-unit id="a63780aea9d6d22effa58904beb0edcdeac6e9a0" translate="yes" xml:space="preserve">
          <source>As an example, to change the run directory to /var/run, one would do:</source>
          <target state="translated">例如,要将运行目录改为/var/run,可以这样做。</target>
        </trans-unit>
        <trans-unit id="6d0eceff48c2bd1a38b3692d32e5824e5c00b3af" translate="yes" xml:space="preserve">
          <source>As with all milters, dkimpy-milter needs to be integrated with your MTA of
choice (Sendmail or Postfix).  When integrating with your MTA, the risk of
signature invalidation due to content conversion of the message body needs to
be considered.  See RFC 6376, Section 5.3 for discussion of this issue.  As a
practical matter, when signing, configure the milter to follow all others that
might modify the message body.  When verifying, configure the milter before
other processes that might modify the message body.</source>
          <target state="translated">与所有的过滤软件一样,dkimpy-milter需要与您选择的MTA(Sendmail或Postfix)集成。当与您的MTA集成时,需要考虑由于消息主体的内容转换导致的签名无效的风险。关于这个问题的讨论,请参见RFC 6376,5.3节。作为一个实际问题,当签名时,配置milter遵循所有其他可能修改消息体的内容。当验证时,在其他可能修改消息体的进程之前配置milter。</target>
        </trans-unit>
        <trans-unit id="2172dee673ec46d7887d7f22ecd566a57e32439a" translate="yes" xml:space="preserve">
          <source>Both a systemd unit file and a sysv init file are provided.  Both make
assumptions about defaults being used, e.g. if a non-standard pidfile name is
used, they will need to be updated.  The sysv init file uses start-stop-deamon
from Debian.  It is not portable to systems without that available.</source>
          <target state="translated">提供了systemd unit文件和sysv init文件。两者都对默认值进行了假设,例如,如果使用了非标准的pidfile名,就需要更新。sysv init文件使用了Debian的start-stop-deamon。它不能移植到没有该文件的系统上。</target>
        </trans-unit>
        <trans-unit id="19c39e1770abfa777f8007031f0b82115d24020c" translate="yes" xml:space="preserve">
          <source>Both public and private keys for RSA have standard formats and there are many
tools available to create them.  Keys must (RFC 8302) have a minimum size of
1024 bits and should have a size of at least 2048 bits.  The dknewkey script
that is provided with dkimpy is one such tool:</source>
          <target state="translated">RSA的公钥和私钥都有标准格式,而且有许多工具可以用来创建它们。密钥必须(RFC 8302)有1024位的最小大小,并且应该有至少2048位的大小。dkimpy提供的dknewkey脚本就是这样一个工具。</target>
        </trans-unit>
        <trans-unit id="5f3fb7c776ee6f02ef6590885a4a7a97ce1e1435" translate="yes" xml:space="preserve">
          <source>COMPLEX SIGNING CONFIGURATIONS</source>
          <target state="translated">复杂的签名配置</target>
        </trans-unit>
        <trans-unit id="917508ffa8a9172d62f39302317abe8c66d9c56a" translate="yes" xml:space="preserve">
          <source>Care is required to segregate outbound mail to be signed and inbound mail to
be verified.  The above example uses two instances of dkimpy-milter to do
this.  There are many possible ways.  Here is another example using milter
macros to keep the mail streams segregated:</source>
          <target state="translated">需要注意的是,要把要签名的出站邮件和要验证的入站邮件分开。上面的例子使用了两个 dkimpy-milter 实例来实现这一目的。有很多可能的方法。下面是另一个使用 milter 宏来保持邮件流隔离的例子。</target>
        </trans-unit>
        <trans-unit id="34682efb1315542a312fe9a8989a2e26f08a97ad" translate="yes" xml:space="preserve">
          <source>Changing the sendmail.mc file requires a Make (to compile it into sendmail.cf)
and a restart of sendmail.  Note that S= needs to match the value of Socket in
the dkimpy-milter configuration file.</source>
          <target state="translated">改变sendmail.mc文件需要一个Make(将其编译成sendmail.cf)和重启sendmail。注意,S=需要与dkimpy-milter配置文件中的Socket值相匹配。</target>
        </trans-unit>
        <trans-unit id="7e72824d8118a3f138bfda3b38d8a5fbd19fb9bd" translate="yes" xml:space="preserve">
          <source>Configuration is very similar to opendkim, but needs some adjustment for
dkimpy-milter. Here's an example configuration line to include in your
sendmail.mc:</source>
          <target state="translated">配置与opendkim非常相似,但需要为dkimpy-milter做一些调整。下面是一个在sendmail.mc中包含的配置行的例子。</target>
        </trans-unit>
        <trans-unit id="ff36f73945f41fd03114e8d8a41faf731f52ba60" translate="yes" xml:space="preserve">
          <source>DKIM with Ed25519 signatures are described in RFC 8463.  Version 1.0.0 and
later support Ed25519 signing and verification.  RFC 8301 removed rsa-sha1
from DKIM.  dkimpy-milter does not sign with rsa-sha1, but still considers
rsa-sha1 signatures as valid for verification because they are still in
common use and are not known to be cryptographically broken.</source>
          <target state="translated">RFC 8463中描述了使用Ed25519签名的DKIM。1.0.0及以后的版本支持Ed25519签名和验证。RFC 8301从DKIM中删除了rsa-sha1。dkimpy-milter不使用rsa-sha1签名,但仍然认为rsa-sha1签名是有效的验证,因为它们仍然是常用的,而且不知道在密码学上被破解。</target>
        </trans-unit>
        <trans-unit id="287c061320aa44487f4c2b0a82cb40d7dbf1a8ba" translate="yes" xml:space="preserve">
          <source>Dkimpy-milter.conf:</source>
          <target state="translated">Dkimpy-milter.conf。</target>
        </trans-unit>
        <trans-unit id="889dc46e908efb37522342a2d57f4969240f0191" translate="yes" xml:space="preserve">
          <source>Domain Keys Identified Mail (DKIM) signing/verifying milter for Postfix/Sendmail.</source>
          <target state="translated">Postfix/Sendmail的域密钥识别邮件(DKIM)签名/验证机制。</target>
        </trans-unit>
        <trans-unit id="ba9fb1358355ff4ce72752768f260f4aff72d86e" translate="yes" xml:space="preserve">
          <source>ED25519</source>
          <target state="translated">ED25519</target>
        </trans-unit>
        <trans-unit id="1dd21da3d930243d120614f14f290ba4f9dffeec" translate="yes" xml:space="preserve">
          <source>Finally, tell the filter that it should use these files by adding this to
your configuration file:</source>
          <target state="translated">最后,通过在配置文件中添加以下内容,告诉过滤器它应该使用这些文件。</target>
        </trans-unit>
        <trans-unit id="312c99ca9acc0b897a94799f00878d88ab683d8a" translate="yes" xml:space="preserve">
          <source>First, select the type of database you will use for each.  They need not
be the same.  The &quot;DATA SETS&quot; portion of the dkimpy-milter(8) man page
describes the possibilities and how they are formatted.  Then, construct those
databases.</source>
          <target state="translated">首先,选择你将为每个数据库使用的类型。它们不需要是相同的。dkimpy-milter(8)man page中的 &quot;DATA SETS &quot;部分描述了各种可能性以及它们的格式。然后,构建这些数据库。</target>
        </trans-unit>
        <trans-unit id="ec84c0811db73dd1376a44e90bfc6a1a19363233" translate="yes" xml:space="preserve">
          <source>First, write the KeyTable.  This is a list of the keys you intend to use,
and you just assign arbitrary names to them.  So as a flat file, the KeyTable
for the above might look like this:</source>
          <target state="translated">首先,编写KeyTable。这是一个你打算使用的键的列表,你只需要给它们分配任意的名字。所以作为一个平面文件,上面的KeyTable可能是这样的。</target>
        </trans-unit>
        <trans-unit id="2e4dd4d2e7801d08d7f7a6c87b698f4281776f0e" translate="yes" xml:space="preserve">
          <source>For users of Debian Stable (Debian 9, Codename Squeeze), all dependencies are
available in either the main or backports repositories:</source>
          <target state="translated">对于Debian Stable (Debian 9,代号Squeeze)的用户来说,所有的依赖关系都可以在主仓库或后置仓库中找到。</target>
        </trans-unit>
        <trans-unit id="9d09dba09f4e15504911bf4a5e67189762904dd8" translate="yes" xml:space="preserve">
          <source>INSTALLATION</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="a27f7f448db9b20c937d92bb2e104c4e156870cf" translate="yes" xml:space="preserve">
          <source>ISSUES USING SENDMAIL TO SIGN AND VERIFY</source>
          <target state="translated">使用SENDMAIL签收和验证的问题</target>
        </trans-unit>
        <trans-unit id="434730b0678b1cd81e06212569e57db0f1e1fffb" translate="yes" xml:space="preserve">
          <source>If also signing with ed25519, specify a KeyTableEd25519, with the same
names, pointing to the keys needed for ed25519.  Both KeyTable and
KeyTableEd25519 are evaluated if there is a SigningTable (see below).</source>
          <target state="translated">如果也用ed25519签名,请指定一个KeyTableEd25519,名称相同,指向ed25519所需的密钥。如果有SigningTable,KeyTable和KeyTableEd25519都会被评估(见下文)。</target>
        </trans-unit>
        <trans-unit id="64e45f351c4e84ec3f75293d06299f576bc80e33" translate="yes" xml:space="preserve">
          <source>In order to create DKIM signatures, a private key must be available.  Signing
keys should be protected (owned by root:root with permissions 600 in a
directory that is not world readable).  Different keys are required for RSA
and (if used) Ed25519.</source>
          <target state="translated">为了创建DKIM签名,必须有一个私钥。签名密钥应该是受保护的(由root:root拥有,权限为600,放在一个世界上不可读的目录中)。RSA和(如果使用)Ed25519需要不同的密钥。</target>
        </trans-unit>
        <trans-unit id="19af87b97df7ab90bc2f66208fbbc5fab4b4ea1d" translate="yes" xml:space="preserve">
          <source>Integration of dkimpy-milter into Postfix is like any milter (See Postfix's
README_FILES/MILTER_README).  Here's an example master.cf excerpt that talks
to two dkimpy-milter instances, one configured for signing and one configured
for verification:</source>
          <target state="translated">将 dkimpy-milter 集成到 Postfix 中就像任何 milter 一样 (参见 Postfix 的 README_FILES/MILTER_README)。这里有一个master.cf的例子,它与两个dkimpy-milter实例对话,一个配置为签名,一个配置为验证。</target>
        </trans-unit>
        <trans-unit id="7d215d10e5b3efacabb74ffca4c9386ff1fcac3f" translate="yes" xml:space="preserve">
          <source>It is also available in the Debian package archive:</source>
          <target state="translated">它也可以在Debian软件包存档中找到。</target>
        </trans-unit>
        <trans-unit id="62437c72eccfdb064f5bda9e13a298c551713b59" translate="yes" xml:space="preserve">
          <source>Let's suppose you want to sign for two domains, example.com and example.net.
Within example.com, you want to sign for user &quot;president&quot; differently than
everyone else.  Let's say further that you want to use a flat text file.</source>
          <target state="translated">假设你想为两个域名签名,example.com和example.net。在example.com中,你想以不同于其他人的方式为用户 &quot;总统 &quot;签名。让我们进一步说,你想使用一个扁平的文本文件。</target>
        </trans-unit>
        <trans-unit id="883a2844879a26a177af9733b6b02671679be3dc" translate="yes" xml:space="preserve">
          <source>MTA INTEGRATION</source>
          <target state="translated">MTA INTEGRATION</target>
        </trans-unit>
        <trans-unit id="eab0044b9d9a2365549916230f077dbfaaf6659e" translate="yes" xml:space="preserve">
          <source>Milter support should be present by default in most versions of sendmail
these days, but if not included in your Sendmail build, see:
&lt;a href=&quot;http://www.elandsys.com/resources/sendmail/milter.html&quot;&gt;http://www.elandsys.com/resources/sendmail/milter.html&lt;/a&gt;</source>
          <target state="translated">目前，默认情况下，大多数版本的sendmail中都应提供Milter支持，但如果未包含在Sendmail版本中，请参阅：&lt;a href=&quot;http://www.elandsys.com/resources/sendmail/milter.html&quot;&gt;http&lt;/a&gt; : //www.elandsys.com/resources/sendmail/milter.html</target>
        </trans-unit>
        <trans-unit id="cbc4e2d2c25020d961bc455a46aae200cfd2d078" translate="yes" xml:space="preserve">
          <source>NON-STANDARD INSTALLATION PATHS</source>
          <target state="translated">非标准安装路径</target>
        </trans-unit>
        <trans-unit id="e69fc18a69727f31dc484cc6cc5d98f4552fffd6" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">附注</target>
        </trans-unit>
        <trans-unit id="a87e15870c113e44945eb71cb0cea1fe3cfa6feb" translate="yes" xml:space="preserve">
          <source>Next, write the SigningTable.  This maps senders (by default, taken from the
From: header field of a message passing through the filter) to which keys
will be used to sign their mail.  Wildcards are allowed.  So to do what was
described above, we write it as follows:</source>
          <target state="translated">接下来,编写SigningTable。这将发件人(默认情况下,从通过过滤器的邮件的From:头部字段中提取)映射到哪个键来签署他们的邮件。允许使用通配符。所以,为了做到上面所说的,我们写成如下。</target>
        </trans-unit>
        <trans-unit id="e164e41a561c469ad80493a7b397d3bb7c7ab79f" translate="yes" xml:space="preserve">
          <source>Note: Unlike opendkim, dkimpy-milter will check for &quot;*&quot; in the signing table
regardless of if refile is specified or not.  Use of refile is supported for
compatibility with configurations initially developed for use with opendkim.</source>
          <target state="translated">注意:与 opendkim 不同,无论是否指定了 refile,dkimpy-milter 都会在签名表中检查 &quot;*&quot;。使用refile是为了兼容最初为opendkim开发的配置。</target>
        </trans-unit>
        <trans-unit id="f275fdb83760cf7f81c0389520bf2b7351b38004" translate="yes" xml:space="preserve">
          <source>OVERVIEW</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="f64b7aa3460497cec3f51324e2d1e456d6669ae8" translate="yes" xml:space="preserve">
          <source>POSTFIX</source>
          <target state="translated">POSTFIX</target>
        </trans-unit>
        <trans-unit id="5b368e81e096b98cc56b14046d07188282219646" translate="yes" xml:space="preserve">
          <source>Per the documentation, multi-field data sets that are made of flat files have
the fields separated by colons, but the key and value(s) are separated by
whitespace.</source>
          <target state="translated">根据文档,由平面文件组成的多字段数据集的字段用冒号分隔,但键和值用空格分隔。</target>
        </trans-unit>
        <trans-unit id="37e60cb9feec579894885a8955495d81048f82db" translate="yes" xml:space="preserve">
          <source>Postfix master.cf:</source>
          <target state="translated">Postfix master.cf:</target>
        </trans-unit>
        <trans-unit id="56d91d770f6fd64e188020f40d1d915be6e046dc" translate="yes" xml:space="preserve">
          <source>RSA</source>
          <target state="translated">RSA</target>
        </trans-unit>
        <trans-unit id="3334625f4766a132e1c0b68a2399b1ceab54880f" translate="yes" xml:space="preserve">
          <source>SENDMAIL</source>
          <target state="translated">发送邮件</target>
        </trans-unit>
        <trans-unit id="93d5cdf0fbce4ae8d70e72b5109a926e1641df8a" translate="yes" xml:space="preserve">
          <source>SETUP</source>
          <target state="translated">设置</target>
        </trans-unit>
        <trans-unit id="ad699a1e94d9bbb2668e5aa2159900364555dcb5" translate="yes" xml:space="preserve">
          <source>SIGNING KEYS</source>
          <target state="translated">签字键</target>
        </trans-unit>
        <trans-unit id="14f32d898aece0211d31dd545aa81698b6334ab8" translate="yes" xml:space="preserve">
          <source>Since /var/run or /run is sometimes on a tempfs, if the PID file directory is
missing, the milter will create it on startup.</source>
          <target state="translated">由于/var/run或/run有时在tempfs上,如果PID文件目录缺失,milter将在启动时创建它。</target>
        </trans-unit>
        <trans-unit id="f03d9550cce995dc148e6ccbeae8862dd9f31219" translate="yes" xml:space="preserve">
          <source>Since we want to use wildcards, we can't actually use a regular flat file.
Wildcards require a regular expression file, or &quot;refile&quot;.  The above is
valid format for one of those.  Let's say you put this in
/usr/local/etc/dkim/signingtable.</source>
          <target state="translated">由于我们要使用通配符,所以实际上我们不能使用正则平文件。通配符需要一个正则表达式文件,也就是 &quot;重文件&quot;。上面是有效的格式之一。假设你把这个放在/usr/local/etc/dkim/signingtable中。</target>
        </trans-unit>
        <trans-unit id="207179a0be77a9966e0286c1a3a3a36d9046e1d5" translate="yes" xml:space="preserve">
          <source>So now we've named each key file, and specified with which selector and domain
each will be used, and then given each of those groupings a name.  This
is your KeyTable.  Let's say you put it in /usr/local/etc/dkim/keytable.</source>
          <target state="translated">所以,现在我们已经给每个密钥文件命名,并指定了每个文件将使用的选择器和域,然后给每个分组起了个名字。这就是你的KeyTable。假设你把它放在/usr/local/etc/dkim/keytable中。</target>
        </trans-unit>
        <trans-unit id="5d2fa3f19c20f956fdc796118e24e16aa4d48818" translate="yes" xml:space="preserve">
          <source>The KeyTable, KeyTableEd25519, and SigningTable are used to define signing
instructions to the filter where use of Domain, Selector and KeyFile together
are insufficient.</source>
          <target state="translated">KeyTable、KeyTableEd25519和SigningTable用于定义过滤器的签名指令,当使用Domain、Selector和KeyFile一起使用是不够的。</target>
        </trans-unit>
        <trans-unit id="4e3a33cbe5eaf9171d49563425dbf38c5609366f" translate="yes" xml:space="preserve">
          <source>The configuration file is designed to be compatible with OpenDKIM, but only
a subset of OpenDKIM options are supported.  If an unsupported option is
specified, an error will be raised.</source>
          <target state="translated">配置文件被设计为与OpenDKIM兼容,但只支持OpenDKIM选项的一个子集。如果指定了一个不支持的选项,就会出现错误。</target>
        </trans-unit>
        <trans-unit id="287a8a9838dfa25f0e9ee5e75af600d61aec60e2" translate="yes" xml:space="preserve">
          <source>The dkimpy-milter drops priviledges after setup to the user/group specified in
UserID.  During initial setup, this system user needs to be manually created.
As an example, using the default dkimpy-user on Debian, the command would be:</source>
          <target state="translated">dkimpy-milter在设置后会将权限丢给UserID中指定的用户/组。在初始设置时,这个系统用户需要手动创建。例如,在Debian上使用默认的dkimpy-user,命令如下。</target>
        </trans-unit>
        <trans-unit id="33b4c0355720ec76b0135102395a7362bccf485a" translate="yes" xml:space="preserve">
          <source>The milter will work with either py3dns (DNS) or dnspython (dns), preferring
dnspython if both are available.  The dkimpy DKIM module also works with
either.</source>
          <target state="translated">milter将与py3dns(DNS)或dnspython(dns)一起工作,如果两者都可用,则首选dnspython。dkimpy DKIM模块也可以和其中一种一起工作。</target>
        </trans-unit>
        <trans-unit id="52351a052e046c396f38a7331b1297e961255cd4" translate="yes" xml:space="preserve">
          <source>The package includes a custom setup command called expand.  It allows various
file locations in init scripts, man pages, and config files to be over-ridden
at install time.</source>
          <target state="translated">该软件包包含一个名为expand的自定义设置命令。它允许在安装时覆盖init脚本、man页和配置文件中的各种文件位置。</target>
        </trans-unit>
        <trans-unit id="9b5d19ac55192a35a09a269119b532753ced6101" translate="yes" xml:space="preserve">
          <source>The preferred method of installation is from PyPi using pip (if distribution
packages are not available):</source>
          <target state="translated">首选的安装方法是使用pip从PyPi中安装(如果没有发行包的话)。</target>
        </trans-unit>
        <trans-unit id="10b8fa1794e8af20926b201783b26cf9dea4361c" translate="yes" xml:space="preserve">
          <source>The python DKIM library, dkimpy, requires the entire message being signed or
verified to be in memory, so dkimpy-milter does not write messages out to a
temp file.  This may impact performance on low-memory systems.</source>
          <target state="translated">python DKIM 库 dkimpy 要求整个消息的签名或验证都在内存中,所以 dkimpy-milter 不会将消息写到临时文件中。这可能会影响低内存系统的性能。</target>
        </trans-unit>
        <trans-unit id="f090872085a6df03bae1fb39fb8e6df6df010bb1" translate="yes" xml:space="preserve">
          <source>There is no standardized non-binary representation for Ed25519 private keys,
so in order to generate Ed25519 keys for dkimpy-milter, dkimpy specific tools
must be used to be compatible.  The same dknewkey script support Ed25519:</source>
          <target state="translated">Ed25519私钥没有标准化的非二进制表示方式,所以要为dkimpy-milter生成Ed25519密钥,必须使用dkimpy专用工具来兼容。同样的dknewkey脚本也支持Ed25519。</target>
        </trans-unit>
        <trans-unit id="c3996effc280f22ed675129b27e5458d1e588636" translate="yes" xml:space="preserve">
          <source>These need to match the Socket value for each dkimpy-milter instance.</source>
          <target state="translated">这些需要匹配每个dkimpy-milter实例的Socket值。</target>
        </trans-unit>
        <trans-unit id="d299f02e90d55a70432ce37b398bf99998325a7c" translate="yes" xml:space="preserve">
          <source>This is a DKIM signing and verification milter.  It has been tested with both
Postfix and Sendmail.</source>
          <target state="translated">这是一个DKIM签名和验证模拟器。它已经在Postfix和Sendmail上进行了测试。</target>
        </trans-unit>
        <trans-unit id="a49fe4bb575cb20a505c651fb7f576f05d9f069a" translate="yes" xml:space="preserve">
          <source>This package includes a default configuration file and man pages.  For those
to be installed when installing using setup.py, the following incantation is
required because setuptools developers decided not being able to do this by
default is a feature:</source>
          <target state="translated">这个包包括一个默认的配置文件和man页。对于那些要在使用setup.py安装时安装的,需要下面的咒语,因为setuptools的开发者决定不能默认这样做是一个功能。</target>
        </trans-unit>
        <trans-unit id="7d0cfe06f64a8776aafc6661dfdae28d42a72a03" translate="yes" xml:space="preserve">
          <source>To start dkimpy-milter with systemd for the first time, you will need to take
the following steps:</source>
          <target state="translated">第一次使用systemd启动dkimpy-milter,需要进行以下步骤。</target>
        </trans-unit>
        <trans-unit id="7a0c30a3c45f073994d6b9da5c7248b5a425635a" translate="yes" xml:space="preserve">
          <source>Using pip will cause required packages to be installed via easy_install if they
have not been previously installed.  Because pymilter and PyNaCl are compiled
Python extensions, the system will need appropriate development packages and
an C compiler.  Alternately, install these dependencies from distribution/OS
packages and then pip install dkimpy_milter.</source>
          <target state="translated">如果之前没有安装所需的包,使用pip会导致通过easy_install安装。因为pymilter和PyNaCl是经过编译的Python扩展,所以系统需要相应的开发包和C编译器。另外,从发行版/OS包中安装这些依赖包,然后用pip安装dkimpy_milter。</target>
        </trans-unit>
        <trans-unit id="55e68c7091a7fa265d8d150d50923792feefbd2b" translate="yes" xml:space="preserve">
          <source>When installing using the Debian package, all dependencies are automatically
installed.</source>
          <target state="translated">当使用Debian软件包安装时,所有的依赖关系都会自动安装。</target>
        </trans-unit>
        <trans-unit id="e93179e7b0d9f29bc2bc989cdc60d8d667b4cab7" translate="yes" xml:space="preserve">
          <source>When using the sendmail MTA in both signing and verifying mode, there are
a few issues of which to be aware that might cause operational problems
and deserve consideration.</source>
          <target state="translated">在签名和验证模式下使用sendmail MTA时,有几个问题需要注意,可能会造成操作上的问题,值得考虑。</target>
        </trans-unit>
        <trans-unit id="3b3c06ab3bd899219f587b309c0c5bf185349b4a" translate="yes" xml:space="preserve">
          <source>You could put &quot;file:&quot; in front of the filename for the KeyTable just to be
precise, but &quot;file:&quot; is assumed if the value starts with a &quot;/&quot;.</source>
          <target state="translated">为了精确起见,你可以在KeyTable的文件名前加上 &quot;file:&quot;,但如果值是以&quot;/&quot;开头,则假定 &quot;file:&quot;。</target>
        </trans-unit>
        <trans-unit id="322235c7e9edde4a9dd7c3f33b2115bb24111048" translate="yes" xml:space="preserve">
          <source>You've generated private key files for each of these and stored them
in the directory /usr/local/etc/dkim/keys as files &quot;president&quot;, &quot;excom&quot; and
&quot;exnet&quot;, with the obvious intents.  You want to use selectors &quot;foo&quot;, &quot;bar&quot;
and &quot;baz&quot; for those, respectively.  The signing domains match the senders
(i.e. the signatures for example.com's stuff will be held by example.com,
and example.net likewise).</source>
          <target state="translated">你已经为每一个文件生成了私钥文件,并将它们作为文件 &quot;President&quot;、&quot;excom &quot;和 &quot;exnet &quot;存储在/usr/local/etc/dkim/keys目录下,意图很明显。你要分别使用选择器 &quot;foo&quot;、&quot;bar &quot;和 &quot;baz &quot;来处理这些。签名域与发送者相匹配(即example.com的东西的签名将由example.com持有,example.net同样如此)。</target>
        </trans-unit>
        <trans-unit id="3001fe2fc6e606cee84c3ccb0a9a5eec274e6a80" translate="yes" xml:space="preserve">
          <source>[sudo] apt install dkimpy-milter [Debian 10 or later]
[sudo] apt install -t stretch-backports dkimpy-milter [Debian 9]</source>
          <target state="translated">[sudo] apt install dkimpy-milter [Debian 10或更高版本] [sudo] apt install -t Stretch-backports dkimpy-milter [Debian 9]</target>
        </trans-unit>
        <trans-unit id="b9aa4c105264339c01ded2faa78e4d122c09a867" translate="yes" xml:space="preserve">
          <source>[sudo] apt install python3-milter python3-nacl python3-dnspython
[sudo] apt install -t stretch-backports python3-authres python3-dkim</source>
          <target state="translated">[sudo]易于安装python3-milter python3-nacl python3-dnspython [sudo]易于安装-t Stretch-backports python3-authres python3-dkim</target>
        </trans-unit>
        <trans-unit id="a5193b3fd05a552b702d97d8c0fd4fb9c76d6c61" translate="yes" xml:space="preserve">
          <source>[sudo] pip install dkimpy_milter</source>
          <target state="translated">[sudo] pip install dkimpy_milter</target>
        </trans-unit>
        <trans-unit id="259c5be6ff2a7d6acf5f36db315d6f05578a899d" translate="yes" xml:space="preserve">
          <source>[sudo] python3 setup.py install --single-version-externally-managed --record=/dev/null</source>
          <target state="translated">[sudo] python3 setup.py install --single-version-externally-managed --record = / dev / null</target>
        </trans-unit>
        <trans-unit id="0ad6c89738bd0113ffab95f799aefc0d120e247c" translate="yes" xml:space="preserve">
          <source>or in a single step (the order matters):</source>
          <target state="translated">或一步到位(顺序很重要)。</target>
        </trans-unit>
        <trans-unit id="f3657f9f5c3c6909ef826d1588b78a96c4d4d3f9" translate="yes" xml:space="preserve">
          <source>will produce both the private key file (.key suffix) and a file with the DKIM
public key record to be published DNS (.dns suffix).  RSA is the default key
type.  2048 bits is the default key size.</source>
          <target state="translated">将产生私钥文件(.key后缀)和一个带有DKIM公钥记录的文件,以便发布DNS(.dns后缀)。RSA是默认的密钥类型。2048位是默认的密钥大小。</target>
        </trans-unit>
        <trans-unit id="3792992c308ead6519b6937602f54d28038e3ef9" translate="yes" xml:space="preserve">
          <source>will provide both the private key file (.key suffix) and a file with the DKIM
public key record to be published DNS (.dns suffix).  Ed25519 keys do not have
variable bit lengths.</source>
          <target state="translated">将同时提供私钥文件(.key后缀)和要发布DNS的DKIM公钥记录的文件(.dns后缀)。Ed25519密钥没有可变位长。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
