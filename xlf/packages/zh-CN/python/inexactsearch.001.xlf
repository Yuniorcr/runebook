<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/inexactsearch/">
    <body>
      <group id="inexactsearch">
        <trans-unit id="c0a764e8a835fbe841281e4a58a0486612d6a8c4" translate="yes" xml:space="preserve">
          <source>By mixing both written like(edit distance) and sounds like(soundex),
we achieve an efficient aproximate string searching. This application
is capable of cross language string search too. That means, you can
search Hindi words in Malayalam text. If there is any Malayalam word,
which is approximate transliteration of hindi word, or sounds alike
the hindi words, it will be returned as an approximate match. The
&amp;ldquo;written like&amp;rdquo; algorithm used here is a bigram average algorithm.  The
ratio of common bigrams in two strings and average number of bigrams
will give a factor which is greater than zero and less
than 1. Similarly the soundex algorithm also gives a weight. By
selecting words which has comparison weight more than the threshold
weight(which 0.6), we get the search results.</source>
          <target state="translated">通过混合书写的like（编辑距离）和声音like（soundex），我们实现了高效的字符串搜索。该应用程序也能够跨语言字符串搜索。也就是说，您可以在马拉雅拉姆语文本中搜索印地语单词。如果有任何马来亚拉姆语单词（近似于印地语单词的音译），或者听起来像印地语单词，则将其作为近似匹配项返回。此处使用的&amp;ldquo;类似文字&amp;rdquo;算法是一个双语法例平均算法。两个字符串中的常见二元组之比与二元组的平均数将得​​出一个大于零且小于1的因子。类似地，soundex算法也给出了权重。通过选择比较权重大于阈值权重（0.6）的单词，我们可以获得搜索结果。</target>
        </trans-unit>
        <trans-unit id="8ff84627f867d72a263349d1315e55c4dde24951" translate="yes" xml:space="preserve">
          <source>Fuzzy String search algorithm using Soundex for Indian language</source>
          <target state="translated">使用Soundex的印度语模糊字符串搜索算法</target>
        </trans-unit>
        <trans-unit id="1f3f7d61fa6a6c1092404565998805d7c1fbaf25" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Fuzzy_string_searching&quot;&gt;Fuzzy string search&lt;/a&gt;
application. This application illustrates the combined use of &lt;a href=&quot;http://en.wikipedia.org/wiki/Levenshtein_distance&quot;&gt;Edit
distance&lt;/a&gt; and
&lt;a href=&quot;http://silpa.org.in/Soundex&quot;&gt;Indic Soundex&lt;/a&gt; algorithm.</source>
          <target state="translated">这是一个&lt;a href=&quot;http://en.wikipedia.org/wiki/Fuzzy_string_searching&quot;&gt;模糊字符串搜索&lt;/a&gt; 应用程序。此应用程序说明了&amp;ldquo;&lt;a href=&quot;http://en.wikipedia.org/wiki/Levenshtein_distance&quot;&gt;编辑距离&amp;rdquo;&lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;http://silpa.org.in/Soundex&quot;&gt;印度Soundex&amp;rdquo;&lt;/a&gt;算法的组合使用。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
