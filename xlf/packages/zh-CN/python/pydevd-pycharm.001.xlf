<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/pydevd-pycharm/">
    <body>
      <group id="pydevd-pycharm">
        <trans-unit id="16f06807000ba754e1eb03232292b2aa209b66cf" translate="yes" xml:space="preserve">
          <source>&amp;ndash; so, when
debugging a process which runs in another machine, it&amp;rsquo;s possible to</source>
          <target state="translated">&amp;ndash;因此，当调试在另一台计算机上运行的进程时，可以</target>
        </trans-unit>
        <trans-unit id="fc1e22caf709177e75e26e3fc1924406d57c747f" translate="yes" xml:space="preserve">
          <source>Appveyor (Windows CI):</source>
          <target state="translated">Appveyor(Windows CI)。</target>
        </trans-unit>
        <trans-unit id="637332af13fc736c826e94fc2569321dba58dff6" translate="yes" xml:space="preserve">
          <source>In general, the debugger backend should &lt;strong&gt;NOT&lt;/strong&gt; be installed separately if you&amp;rsquo;re using an IDE which already
bundles it (such as PyDev or PyCharm).</source>
          <target state="translated">一般情况下，调试器后端应该&lt;strong&gt;不&lt;/strong&gt;分开，如果你正在使用的已经捆绑了它的IDE（如PyDev的或PyCharm）安装。</target>
        </trans-unit>
        <trans-unit id="bbdbfc12a0ae5ed704ec7a6deae7a3f5ab486345" translate="yes" xml:space="preserve">
          <source>It is however available in PyPi so that it can be installed for doing remote debugging with</source>
          <target state="translated">然而,它在PyPi中是可用的,因此可以安装它来进行远程调试,并使用</target>
        </trans-unit>
        <trans-unit id="16b3e194cb218c1b3bd76f8ec1e39a70a906f712" translate="yes" xml:space="preserve">
          <source>It should be compatible with Python 2.6 onwards (as well as Jython 2.7, IronPython and PyPy &amp;ndash; and
any other variant which properly supports the Python structure for debuggers &amp;ndash; i.e.: sys.settrace/threading.settrace).</source>
          <target state="translated">它应该与Python 2.6及更高版本兼容（以及Jython 2.7，IronPython和PyPy &amp;ndash;以及任何其他支持调试器Python结构的变体&amp;ndash; sys.settrace / threading.settrace）。</target>
        </trans-unit>
        <trans-unit id="a28c5884b9aeca19fbbfa82b586c128d804ecd22" translate="yes" xml:space="preserve">
          <source>PyCharm Debugger (used in PyCharm and PyDev)</source>
          <target state="translated">PyCharm调试器(在PyCharm和PyDev中使用</target>
        </trans-unit>
        <trans-unit id="52697b23ca0968edeb1975bd3a1b316568ccb86d" translate="yes" xml:space="preserve">
          <source>Recent versions contain speedup modules using Cython, which are generated with a few changes in the regular files
to</source>
          <target state="translated">最近的版本包含了使用Cython的加速模块,这些模块是在常规文件中进行一些修改后生成的,以达到</target>
        </trans-unit>
        <trans-unit id="a5ad80393252023804a28802968721aaac6d38c0" translate="yes" xml:space="preserve">
          <source>The sources for the PyDev.Debugger (used in PyDev &amp;amp; PyCharm) may be seen at:</source>
          <target state="translated">PyDev.Debugger（在PyDev和PyCharm中使用）的源可以在以下位置找到：</target>
        </trans-unit>
        <trans-unit id="3ed12ebd1470d390b651a3733b3449cd30599ff4" translate="yes" xml:space="preserve">
          <source>To generate a distribution to upload to PyPi,</source>
          <target state="translated">生成一个发行版上传到PyPi。</target>
        </trans-unit>
        <trans-unit id="3ecd8df81e45d81105f9186af82207a44e9dc94e" translate="yes" xml:space="preserve">
          <source>To generate a distribution with the precompiled binaries for the IDE,</source>
          <target state="translated">生成一个带有IDE预编译二进制文件的发行版。</target>
        </trans-unit>
        <trans-unit id="6f58c51ac08671ad8f76830f6502e7a34c23f3b3" translate="yes" xml:space="preserve">
          <source>Travis (Linux CI):</source>
          <target state="translated">Travis(Linux CI)。</target>
        </trans-unit>
        <trans-unit id="e15b30907be24b8f291a058d304cf67d68c71810" translate="yes" xml:space="preserve">
          <source>and in the code use</source>
          <target state="translated">并在代码中使用</target>
        </trans-unit>
        <trans-unit id="c31aff620076a8dac7ec181dc9a5f36ad2e36929" translate="yes" xml:space="preserve">
          <source>build_binaries_windows.py</source>
          <target state="translated">build_binaries_windows.py</target>
        </trans-unit>
        <trans-unit id="4bb1af6b3641392b4991851df91cef1372d9dc34" translate="yes" xml:space="preserve">
          <source>build_tools/build.py</source>
          <target state="translated">build_tools/build.py</target>
        </trans-unit>
        <trans-unit id="a690e5ac0f3d1154c2082a899a209490d203ff11" translate="yes" xml:space="preserve">
          <source>cythonize</source>
          <target state="translated">蟒蛇化</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">pip</target>
        </trans-unit>
        <trans-unit id="d70567216015c55ac47ccef9c58c6d3460e8d641" translate="yes" xml:space="preserve">
          <source>pip install pydevd-pycharm</source>
          <target state="translated">pip install pydevd-pycharm</target>
        </trans-unit>
        <trans-unit id="34c893ae58bcb497e6d0bfc869dfbe3b38fcf498" translate="yes" xml:space="preserve">
          <source>pydevd_pycharm.settrace(host=&amp;rsquo;10.1.1.1&amp;rsquo;)</source>
          <target state="translated">pydevd_pycharm.settrace（host = '10 .1.1.1'）</target>
        </trans-unit>
        <trans-unit id="194d092dc60883d3b4f6bc4fc7a89592021233a1" translate="yes" xml:space="preserve">
          <source>python setup.py sdist bdist_wheel</source>
          <target state="translated">python setup.py sdist bdist_wheel</target>
        </trans-unit>
        <trans-unit id="f062dad30cb4c2a10bed91621d72f1ce252ae63b" translate="yes" xml:space="preserve">
          <source>should be run &amp;ndash; note that the resulting .pyx and .c files should be commited.</source>
          <target state="translated">应该运行&amp;ndash;请注意，应提交生成的.pyx和.c文件。</target>
        </trans-unit>
        <trans-unit id="f5f21b9bf1d4ed42122d0d7b6e9b7e0bbd9b4e2c" translate="yes" xml:space="preserve">
          <source>should be run (
note that the environments must be pre-created as specified in that file).</source>
          <target state="translated">(注意,必须按照该文件中的指定预先创建环境)。</target>
        </trans-unit>
        <trans-unit id="b9830d0ca74bd428d62a7858c5b6f839e4a41be8" translate="yes" xml:space="preserve">
          <source>should be run for each python version
which should have a wheel and afterwards</source>
          <target state="translated">应该为每个 python 版本运行一个轮子,然后</target>
        </trans-unit>
        <trans-unit id="582ce29dec90dbf895540a5df57acc165b37022a" translate="yes" xml:space="preserve">
          <source>should be run to actually upload the contents
to PyPi.</source>
          <target state="translated">应该运行以实际上传内容到PyPi。</target>
        </trans-unit>
        <trans-unit id="07f58a5dab0022d36e59d2dd5c361b0de8fdbef9" translate="yes" xml:space="preserve">
          <source>the files. To update and compile the cython sources (and generate some other auto-generated files),</source>
          <target state="translated">的文件。更新和编译cython源代码(并生成一些其他自动生成的文件)。</target>
        </trans-unit>
        <trans-unit id="40b44a22a7e02b18f57ed6b02d46e764eb189a7b" translate="yes" xml:space="preserve">
          <source>to connect the debugger backend to the debugger UI running in the IDE
(whereas previously the sources had to be manually copied from the IDE installation).</source>
          <target state="translated">来连接调试器后端和IDE中运行的调试器UI(而以前的源代码必须从IDE安装中手动复制)。</target>
        </trans-unit>
        <trans-unit id="03eba737fdbc9dd299bb52e4f95262987f1d0d62" translate="yes" xml:space="preserve">
          <source>twine upload -s dist/pydevd-*</source>
          <target state="translated">twine upload -s dist/pydevd-*。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
