<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/fixturefilehandler/">
    <body>
      <group id="fixturefilehandler">
        <trans-unit id="e2fc85b57b9001f2db3e0449e1c6f9fd10d3a372" translate="yes" xml:space="preserve">
          <source>&amp;darr; setup</source>
          <target state="translated">&amp;darr;设定</target>
        </trans-unit>
        <trans-unit id="c74e8f2cb169b284fbe647fa576970951a2745e2" translate="yes" xml:space="preserve">
          <source>&amp;darr; teardown</source>
          <target state="translated">&amp;darr;拆解</target>
        </trans-unit>
        <trans-unit id="e0a694160414d8759f1eab5e4ebe01bbbe330cb1" translate="yes" xml:space="preserve">
          <source>1. Install</source>
          <target state="translated">1.安装</target>
        </trans-unit>
        <trans-unit id="fedaa8fe77d8106ab4e61b75f20102b369c64d90" translate="yes" xml:space="preserve">
          <source>2-1. Case when unittest: implement setUp() and doCleanups()</source>
          <target state="translated">2-1.unittest时的情况:实现setUp()和doCleanups()</target>
        </trans-unit>
        <trans-unit id="0b4ac0596d7ec4df2e36869349b8ceb66b879a16" translate="yes" xml:space="preserve">
          <source>2-2. Case when pytest: implement fixture</source>
          <target state="translated">2-2.当pytest:实施夹具时的情况</target>
        </trans-unit>
        <trans-unit id="18c5c1fa2acd0b95fc67f86c4e8933b74be47ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fixture File Handler&lt;/code&gt; is framework to realize simply implement
the vacate and deploy actions while keeping the existing files.
Of course, even if there is no file in the target path, it works fine.</source>
          <target state="translated">&lt;code&gt;Fixture File Handler&lt;/code&gt; 是一个框架，可在保留现有文件的同时简单地实现腾空和部署操作。当然，即使目标路径中没有文件，它也可以正常工作。</target>
        </trans-unit>
        <trans-unit id="1f09031426b085e9d9eb09842997e09b1793e313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup()&lt;/code&gt; and &lt;code&gt;teardown()&lt;/code&gt; also accept file_paths argument.</source>
          <target state="translated">&lt;code&gt;setup()&lt;/code&gt; 和 &lt;code&gt;teardown()&lt;/code&gt; 也接受file_paths参数。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="6ab87c8e657b137e04285d277a6a4d6e69b9d385" translate="yes" xml:space="preserve">
          <source>Basic behavior</source>
          <target state="translated">基本行为</target>
        </trans-unit>
        <trans-unit id="462a09d8a11cabfd4ec470f20b9d211e43973cd1" translate="yes" xml:space="preserve">
          <source>Case when pytest:</source>
          <target state="translated">案,当pytest。</target>
        </trans-unit>
        <trans-unit id="a07c1db420d9bdf1fda5c9a26de809043d61925c" translate="yes" xml:space="preserve">
          <source>Case when unittest:</source>
          <target state="translated">案例当单位测试。</target>
        </trans-unit>
        <trans-unit id="f3d6c12927c845bb9caf223c451f091fa558685b" translate="yes" xml:space="preserve">
          <source>Common behavior</source>
          <target state="translated">常见行为</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">语境</target>
        </trans-unit>
        <trans-unit id="f6a480a87a646238e1a3fc394890fc0758487460" translate="yes" xml:space="preserve">
          <source>Deployer</source>
          <target state="translated">部署者</target>
        </trans-unit>
        <trans-unit id="23fee4a115262b796ed34003e3f6eddda75db868" translate="yes" xml:space="preserve">
          <source>Fixture File Handler</source>
          <target state="translated">夹具文件处理程序</target>
        </trans-unit>
        <trans-unit id="9ed59038559f520d37f0ec03735c631f8450483c" translate="yes" xml:space="preserve">
          <source>How do I...</source>
          <target state="translated">我怎么...</target>
        </trans-unit>
        <trans-unit id="34885c930e7cb95d0ae51e92b0835884c7ee5191" translate="yes" xml:space="preserve">
          <source>If file / directory already exists on backup path,
setup raise &lt;code&gt;BackupAlreadyExistError&lt;/code&gt;
because it's unexpected situation and developer may want to resque those backup files.</source>
          <target state="translated">如果备份路径上已经存在文件/目录，则安装程序会引发 &lt;code&gt;BackupAlreadyExistError&lt;/code&gt; , 因为这是意外情况，开发人员可能希望重新格式化这些备份文件。</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">快速启动</target>
        </trans-unit>
        <trans-unit id="3a89468ea2a6c420b18a57798dfb58c939ced6ee" translate="yes" xml:space="preserve">
          <source>RelativeDeployFilePath</source>
          <target state="translated">RelativeDeployFilePath</target>
        </trans-unit>
        <trans-unit id="05ea553e7b4b56bd641a0129012089dffc646832" translate="yes" xml:space="preserve">
          <source>RelativeVacateFilePath</source>
          <target state="translated">RelativeVacateFilePath</target>
        </trans-unit>
        <trans-unit id="ddf38bfc0ea4589d52e93a5c0c318844c7ea5f1c" translate="yes" xml:space="preserve">
          <source>SimpleDeployFilePath</source>
          <target state="translated">SimpleDeployFilePath</target>
        </trans-unit>
        <trans-unit id="19e82abf16ae2980c230d7908c165e36a044170c" translate="yes" xml:space="preserve">
          <source>SimpleVacateFilePath</source>
          <target state="translated">SimpleVacateFilePath</target>
        </trans-unit>
        <trans-unit id="09087ceb94c2a9b856afb4a47deace00343143ca" translate="yes" xml:space="preserve">
          <source>The file / directory you want to deploy and let product code read / write in unit testing.
It may test resource file or template file like &lt;code&gt;*.dist&lt;/code&gt; file.</source>
          <target state="translated">您要部署的文件/目录，并允许在单元测试中读写产品代码。它可以测试资源文件或模板文件，例如 &lt;code&gt;*.dist&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="eb89117093aead0fa9a093e3f7a26dd18758d581" translate="yes" xml:space="preserve">
          <source>The file path to back up existing file / directory on target file path between unit testing.</source>
          <target state="translated">单元测试之间在目标文件路径上备份现有文件/目录的文件路径。</target>
        </trans-unit>
        <trans-unit id="6ea40bb4ca326f85a4e49840f0f68efda972c6ee" translate="yes" xml:space="preserve">
          <source>The most popular setup / teardown tasks about file system on unit testing is
almost 2 kinds.</source>
          <target state="translated">在单元测试中,最受欢迎的关于文件系统的设置/拆卸任务几乎有2种。</target>
        </trans-unit>
        <trans-unit id="7da2debb602e96ca3f7e4553560611f230288b5a" translate="yes" xml:space="preserve">
          <source>The target file path to vacate or deploy file / directory for unit testing.</source>
          <target state="translated">腾出或部署文件/目录的目标文件路径,用于单元测试。</target>
        </trans-unit>
        <trans-unit id="2cf9c0d55de3add55ae3dd40244510121286553b" translate="yes" xml:space="preserve">
          <source>Then we have to think about how to back up existing file / directory between unit testing
because maybe developer wants to keep those handwritten files for development.</source>
          <target state="translated">那么我们就要考虑如何在单元测试之间备份现有的文件/目录,因为可能开发人员想保留这些手写文件用于开发。</target>
        </trans-unit>
        <trans-unit id="d422ea855e564d4eff0d9d685e0f4a4f85a6cefc" translate="yes" xml:space="preserve">
          <source>This instance holds path to target and backup.
Each path is independent each other.</source>
          <target state="translated">这个实例保存着通往目标和备份的路径。每条路径相互独立。</target>
        </trans-unit>
        <trans-unit id="682f200aabc10c78f205b29e81a8fc583575618c" translate="yes" xml:space="preserve">
          <source>This instance holds path to target, backup, and base.
Each path is relative based on base path.</source>
          <target state="translated">这个实例保存着通往目标、备份和基地的路径。每条路径都是基于base路径的相对路径。</target>
        </trans-unit>
        <trans-unit id="b0e859a783b5ed4dec10e8567b3a8fa09e99d56e" translate="yes" xml:space="preserve">
          <source>This instance holds path to target, backup, and resource.
Each path is independent each other.</source>
          <target state="translated">这个实例保存着通往目标、备份和资源的路径。每条路径相互独立。</target>
        </trans-unit>
        <trans-unit id="a76d268e0cf93bfaac794b6d564a9cbcb8b21011" translate="yes" xml:space="preserve">
          <source>This instance holds path to target, backup, resource, and base.
Each path is relative based on base path.</source>
          <target state="translated">这个实例保存着通往目标、备份、资源和基地的路径。每个路径都是基于base路径的相对路径。</target>
        </trans-unit>
        <trans-unit id="aba35fbd826c4f965e0fb97872380c9a061b00a9" translate="yes" xml:space="preserve">
          <source>This project helps you to vacate specific file path or deploy resource file into specific file path when unit testing.</source>
          <target state="translated">本项目帮助您在进行单元测试时,腾出特定的文件路径或将资源文件部署到特定的文件路径。</target>
        </trans-unit>
        <trans-unit id="c12db084084adfb30a4cae99ab64377dce6931a7" translate="yes" xml:space="preserve">
          <source>Ubiquitous Language</source>
          <target state="translated">无处不在的语言</target>
        </trans-unit>
        <trans-unit id="28ec87e82216bcc29ae4be48910e42f7eb7878e5" translate="yes" xml:space="preserve">
          <source>Use different paths for each test?</source>
          <target state="translated">每次测试使用不同的路径?</target>
        </trans-unit>
        <trans-unit id="ed27ef7cfeb04f44da3620f42a0702eaafcf5411" translate="yes" xml:space="preserve">
          <source>Vacator</source>
          <target state="translated">度假者</target>
        </trans-unit>
        <trans-unit id="89121dc99c7db9ce2553a093a2ab29e07f7df34f" translate="yes" xml:space="preserve">
          <source>backup</source>
          <target state="translated">后援</target>
        </trans-unit>
        <trans-unit id="fc1c086b69a6cccfcd4b4ccff3f5d5e7630ee976" translate="yes" xml:space="preserve">
          <source>backup path</source>
          <target state="translated">备用路径</target>
        </trans-unit>
        <trans-unit id="e360f37cbf2df4d905f8e51d138b446727962196" translate="yes" xml:space="preserve">
          <source>deploy fixture file / directory into specific file path for testing file import /export function</source>
          <target state="translated">将夹具文件/目录部署到特定的文件路径,用于测试文件的导入/导出功能。</target>
        </trans-unit>
        <trans-unit id="e88f53f21373a586e4aae5b95754e93f41769652" translate="yes" xml:space="preserve">
          <source>existing file / dir</source>
          <target state="translated">现有文件/目录</target>
        </trans-unit>
        <trans-unit id="525fc315def7721f39e9d5d57cabd72773078639" translate="yes" xml:space="preserve">
          <source>existing file /dir</source>
          <target state="translated">现有文件 /dir</target>
        </trans-unit>
        <trans-unit id="e78f226dc533dd4adf70e1d023e4622ad0faecfb" translate="yes" xml:space="preserve">
          <source>file_paths</source>
          <target state="translated">file_paths</target>
        </trans-unit>
        <trans-unit id="7a104738973573b63f13bdc7a1d816e09b6016ad" translate="yes" xml:space="preserve">
          <source>resource</source>
          <target state="translated">资源</target>
        </trans-unit>
        <trans-unit id="792f48daec05c9b12489ca050e2bed8a1b84ea6b" translate="yes" xml:space="preserve">
          <source>resource file / dir</source>
          <target state="translated">资源文件/目录</target>
        </trans-unit>
        <trans-unit id="ce9206f49d6da7b5466c72cb11ca96af61d6dec1" translate="yes" xml:space="preserve">
          <source>resource path</source>
          <target state="translated">资源路径</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">目标</target>
        </trans-unit>
        <trans-unit id="707ecf266e169ce20d34a834afa5523e3026168f" translate="yes" xml:space="preserve">
          <source>target path</source>
          <target state="translated">目标路径</target>
        </trans-unit>
        <trans-unit id="cce653c91be06d4e915f655312dca8e6ee3699b4" translate="yes" xml:space="preserve">
          <source>vacate specific file path for testing file export function</source>
          <target state="translated">腾出特定的文件路径,用于测试文件导出功能。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
