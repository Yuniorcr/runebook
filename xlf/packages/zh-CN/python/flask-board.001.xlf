<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/flask-board/">
    <body>
      <group id="flask-board">
        <trans-unit id="97c27d2bd349c89cc5cc478d929475d3edbc57c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://flask.palletsprojects.com/en/1.1.x/&quot;&gt;Flask&lt;/a&gt; is a powerful and flexible web framework.
Since it is so flexible, we have to &quot;copy&quot; some codes to start a new production project.
Flask Board is aimed to start a flask project depends on some carefully prepared templates.</source>
          <target state="translated">&lt;a href=&quot;https://flask.palletsprojects.com/en/1.1.x/&quot;&gt;Flask&lt;/a&gt;是一个强大而灵活的Web框架。由于它非常灵活，因此我们必须&amp;ldquo;复制&amp;rdquo;一些代码以启动新的生产项目。Flask Board的目标是取决于一些精心准备的模板来启动烧瓶项目。</target>
        </trans-unit>
        <trans-unit id="72a426f94bfaac69de09826657d193db21898c40" translate="yes" xml:space="preserve">
          <source>After installation, we can see flask board installed as a flask command plugin.</source>
          <target state="translated">安装后,我们可以看到flask板作为flask命令插件安装。</target>
        </trans-unit>
        <trans-unit id="f1a7fd1605953c40266698fc0d137627664819e0" translate="yes" xml:space="preserve">
          <source>And exclude directories and all files under it (default excludes directories .git, &lt;code&gt;__pycache__&lt;/code&gt;, *.egg-info, build, dist, .idea).</source>
          <target state="translated">并排除目录及其下的所有文件（默认不包括目录.git， &lt;code&gt;__pycache__&lt;/code&gt; ，*。egg-info，build，dist，.idea）。</target>
        </trans-unit>
        <trans-unit id="fba0d5d40593bdd36dba40124dba6394fb872ade" translate="yes" xml:space="preserve">
          <source>Available built-in templates</source>
          <target state="translated">可用的内置模板</target>
        </trans-unit>
        <trans-unit id="2381ae3b31af2d8bb963e01bf0cb3c9ea5c8f657" translate="yes" xml:space="preserve">
          <source>Build base flask app depends on template.</source>
          <target state="translated">构建基础的flask应用取决于模板。</target>
        </trans-unit>
        <trans-unit id="cc2144b9cc5eebbccb36af90d71f970b7d081f7b" translate="yes" xml:space="preserve">
          <source>Change project directory by option &lt;code&gt;-d&lt;/code&gt;, default use the current directory.</source>
          <target state="translated">通过选项 &lt;code&gt;-d&lt;/code&gt; 更改项目目录，默认使用当前目录。</target>
        </trans-unit>
        <trans-unit id="1d08f6f8e10fbd6fe2b3eed3356661f2c96e136c" translate="yes" xml:space="preserve">
          <source>Change the project directory</source>
          <target state="translated">更改项目目录</target>
        </trans-unit>
        <trans-unit id="87e6f72b37d1ef3c0282112062509af1da7b9679" translate="yes" xml:space="preserve">
          <source>Create flask project depends on pre defined templates.</source>
          <target state="translated">创建烧瓶项目取决于预先定义的模板。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>
        </trans-unit>
        <trans-unit id="c62191c488d2134e5a9559f8f416dee5e0584f5a" translate="yes" xml:space="preserve">
          <source>Flask Board</source>
          <target state="translated">烧瓶板</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="442f5b717e22cfb07f12005092ab083b835096b9" translate="yes" xml:space="preserve">
          <source>Same as using the &lt;code&gt;default&lt;/code&gt; template.</source>
          <target state="translated">与使用 &lt;code&gt;default&lt;/code&gt; 模板相同。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="16db661f7464daefa90a37b78e3aa1517fdfa1ae" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-t&lt;/code&gt; option point to the custom project directory.</source>
          <target state="translated">使用 &lt;code&gt;-t&lt;/code&gt; 选项指向自定义项目目录。</target>
        </trans-unit>
        <trans-unit id="9050f261221c53e8b91d697dcf99bc1da231b9d6" translate="yes" xml:space="preserve">
          <source>Use your own project template</source>
          <target state="translated">使用自己的项目模板</target>
        </trans-unit>
        <trans-unit id="55c28b613b2a0b917f03a0fed6f5589ca49d6941" translate="yes" xml:space="preserve">
          <source>We can also exclude files in the template directory (default excludes file patterns *.pyc, *.pyo, *.pyd, *.egg, *.log, *.so, *.zip, *.tar, *.tar.gz).</source>
          <target state="translated">我们还可以排除模板目录下的文件(默认排除文件模式*.pyc、*.pyo、*.pyd、*.egg、*.log、*.so、*.zip、*.tar、*.tar.gz)。</target>
        </trans-unit>
        <trans-unit id="7078ca140f15bb27ede9ab339cb84c7c3c00311c" translate="yes" xml:space="preserve">
          <source>We use jinja2 engine to render all files in the template directory.</source>
          <target state="translated">我们使用jinja2引擎来渲染模板目录下的所有文件。</target>
        </trans-unit>
        <trans-unit id="79eff33a608e1d79730375ea96ae61b0a7068afb" translate="yes" xml:space="preserve">
          <source>celery: flask app with celery</source>
          <target state="translated">芹菜:带芹菜的烧瓶应用。</target>
        </trans-unit>
        <trans-unit id="346a3ae034c53801f5ca61a59040fdd7ad08b31a" translate="yes" xml:space="preserve">
          <source>default: default flask web app</source>
          <target state="translated">默认:默认flask网络应用</target>
        </trans-unit>
        <trans-unit id="d902c0babd3a0b4b074529704a261a842ba9c980" translate="yes" xml:space="preserve">
          <source>restful: flask restful API web app</source>
          <target state="translated">restful:flask restful API web app</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
