<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/cocof/">
    <body>
      <group id="cocof">
        <trans-unit id="4a27e4c94b82d64030b2d8ec9a2187c91b94da6e" translate="yes" xml:space="preserve">
          <source>Cocof</source>
          <target state="translated">Cocof</target>
        </trans-unit>
        <trans-unit id="a6aa1fe8caf29aaa4cefe729b7c72821caeba703" translate="yes" xml:space="preserve">
          <source>Cocof takes a file path and a &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON patch&lt;/a&gt; string as arguments.
It then modifies the datastructure given by the file's content accordingly and
writies it back to the same file (in-place editing).
You can also tell &lt;code&gt;cocof&lt;/code&gt; to read from &lt;code&gt;stdin&lt;/code&gt;, in which case it will output
it's result to &lt;code&gt;stdout&lt;/code&gt;. TOML, YAML and JSON expect their content to be &lt;code&gt;utf-8&lt;/code&gt;
encoded. PLIST expects either an &lt;code&gt;utf-8&lt;/code&gt; encoded xml content or binary content.</source>
          <target state="translated">Cocof将文件路径和&lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON修补程序&lt;/a&gt;字符串作为参数。然后，它会相应地修改文件内容所提供的数据结构，并将其写回同一文件（就地编辑）。您还可以告诉 &lt;code&gt;cocof&lt;/code&gt; 从 &lt;code&gt;stdin&lt;/code&gt; 读取，在这种情况下，它将把结果输出到 &lt;code&gt;stdout&lt;/code&gt; 。TOML，YAML和JSON希望其内容以 &lt;code&gt;utf-8&lt;/code&gt; 编码。PLIST期望 &lt;code&gt;utf-8&lt;/code&gt; 编码的xml内容或二进制内容。</target>
        </trans-unit>
        <trans-unit id="58dbe199d1ee6ef35c67d7a91d444d44548cf5f0" translate="yes" xml:space="preserve">
          <source>Cocof, short for consistent config file, is a python module that allows the
modification of different key-value config files on the comand line.</source>
          <target state="translated">Cocof是一致配置文件的简称,是一个python模块,允许在comand行上修改不同键值的配置文件。</target>
        </trans-unit>
        <trans-unit id="8d7b415a1f845fedaaf7defc4460713e13b5daa8" translate="yes" xml:space="preserve">
          <source>Consistent CLI config file modifier</source>
          <target state="translated">一致的CLI配置文件修改器</target>
        </trans-unit>
        <trans-unit id="3e56ee1a6a4ddf28f08d8b5de8f8afeef647c8b6" translate="yes" xml:space="preserve">
          <source>Currently supported formats are TOML, YAML, JSON and PLIST.</source>
          <target state="translated">目前支持的格式有TOML、YAML、JSON和PLIST。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例子</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="ccd96bd3a6233dfd63f0af7485dc82c7fc3f216b" translate="yes" xml:space="preserve">
          <source>Most importantly: For YAML and TOML it &lt;em&gt;It will keep line breaks and comments
the same.&lt;/em&gt; So the file will look more or less like the original (depending on
the operations on it of course).</source>
          <target state="translated">最重要的是：对于YAML和TOML，&lt;em&gt;它将使换行符和注释保持不变。&lt;/em&gt;因此，该文件看起来或多或少都类似于原始文件（当然取决于其操作）。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="d0f188e0e9a6e67c81ec2e8655fb68ba5f82ab75" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;{&quot;op&quot;: &quot;add&quot;, &quot;path&quot;: &quot;/subtitle&quot;, &quot;value&quot;: &quot;Sub&quot;}&lt;/code&gt; as modification
yields:</source>
          <target state="translated">使用 &lt;code&gt;{&quot;op&quot;: &quot;add&quot;, &quot;path&quot;: &quot;/subtitle&quot;, &quot;value&quot;: &quot;Sub&quot;}&lt;/code&gt; 作为修改会产生：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
