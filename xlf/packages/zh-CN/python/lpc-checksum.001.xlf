<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/lpc-checksum/">
    <body>
      <group id="lpc-checksum">
        <trans-unit id="dcf2397ad7efbceec8ebc21bbe6a884ff705c9eb" translate="yes" xml:space="preserve">
          <source>As a module</source>
          <target state="translated">作为一个模块</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="51353a43b73d83e159cc64232c6fc87d5fc3deba" translate="yes" xml:space="preserve">
          <source>On error, an exception will be raised.</source>
          <target state="translated">出错时,将引发异常。</target>
        </trans-unit>
        <trans-unit id="61c7efbc4d9912d14dbcea5ef6e99dbf0e6c8fff" translate="yes" xml:space="preserve">
          <source>Program exits with a non-zero error code when it failed.</source>
          <target state="translated">程序失败时,以非零的错误代码退出。</target>
        </trans-unit>
        <trans-unit id="0c91ffe4f844f596250637114f3e4ac113d7d74d" translate="yes" xml:space="preserve">
          <source>Python script to calculate LPC firmware checksums</source>
          <target state="translated">计算LPC固件校验和的Python脚本</target>
        </trans-unit>
        <trans-unit id="720ec7b2d4aa079c8f57da0154a69690ba5088da" translate="yes" xml:space="preserve">
          <source>Python script to calculate LPC firmware checksums, based on the C version by Roel Verdult. It can be used as a standalone application, or as a Python module that integrates directly in a build environment (e.g. SCons). It does not need to be compiled.</source>
          <target state="translated">计算LPC固件校验和的Python脚本,基于Roel Verdult的C版本。它可以作为一个独立的应用程序使用,也可以作为一个Python模块直接集成到构建环境中(例如SCons)。它不需要编译。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">所需经费</target>
        </trans-unit>
        <trans-unit id="bdda23c47fb259f53c953ad8d8f10c9fc8b998f8" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;LICENSE&lt;/code&gt; file (MIT license).</source>
          <target state="translated">请参阅 &lt;code&gt;LICENSE&lt;/code&gt; 文件（MIT许可证）。</target>
        </trans-unit>
        <trans-unit id="1d10323c27ec5f9982ad73377fd582ff949840f8" translate="yes" xml:space="preserve">
          <source>Standalone</source>
          <target state="translated">单机</target>
        </trans-unit>
        <trans-unit id="03b209329a7b06917545e9312e8a81db3d6b2573" translate="yes" xml:space="preserve">
          <source>The only requirement is Python 2.7 or Python 3.5+.</source>
          <target state="translated">唯一的要求是Python 2.7或Python 3.5以上。</target>
        </trans-unit>
        <trans-unit id="23c733201f317d71ac19cfbdbe41a0e299abd903" translate="yes" xml:space="preserve">
          <source>There are two ways of using &lt;code&gt;lpc_checksum&lt;/code&gt;.</source>
          <target state="translated">有两种使用 &lt;code&gt;lpc_checksum&lt;/code&gt; 的方法。</target>
        </trans-unit>
        <trans-unit id="20d4730c4dd90f1b44ed01cd28b497510f17340f" translate="yes" xml:space="preserve">
          <source>This module can be installed from Pypi via &lt;code&gt;pip install lpc_checksum&lt;/code&gt;. Alternatively, you can install the latest version by cloning this repository and run &lt;code&gt;python setup.py install&lt;/code&gt;.</source>
          <target state="translated">可以通过 &lt;code&gt;pip install lpc_checksum&lt;/code&gt; 从Pypi安装该模块。另外，您可以通过克隆此存储库来安装最新版本，然后运行 &lt;code&gt;python setup.py install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="beb3f0b7a456cfcf7183c6e9653ccf2fef8e8030" translate="yes" xml:space="preserve">
          <source>When installed via Pip or from source, the command &lt;code&gt;lpc_checksum&lt;/code&gt; should be available on your PATH. By default, it assumes the input file is a binary file.</source>
          <target state="translated">通过Pip或从源安装时，命令 &lt;code&gt;lpc_checksum&lt;/code&gt; 应该在PATH上可用。默认情况下，它假定输入文件是二进制文件。</target>
        </trans-unit>
        <trans-unit id="f43a29ca43eaafec847f9037d3704aaa837310dc" translate="yes" xml:space="preserve">
          <source>lpc_checksum</source>
          <target state="translated">lpc_checksum</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
