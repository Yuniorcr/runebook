<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/mockselector/">
    <body>
      <group id="mockselector">
        <trans-unit id="5c965f39de05fddf61e772dedb0d43e46a8cd234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListenSocket&lt;/code&gt; is used to mimic a listening socket. Its initializer takes
an iterable of &lt;code&gt;socket.socket&lt;/code&gt; objects (including plain &lt;code&gt;Mock&lt;/code&gt; or
&lt;code&gt;MockSocket&lt;/code&gt; objects) or callables returning an object like that.
The socket objects are returned one at a time by the &lt;code&gt;accept&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;ListenSocket&lt;/code&gt; 用于模仿监听套接字。它的初始化程序采用可迭代的 &lt;code&gt;socket.socket&lt;/code&gt; 对象（包括普通的 &lt;code&gt;Mock&lt;/code&gt; 或 &lt;code&gt;MockSocket&lt;/code&gt; 对象）或可调用对象，其返回这样的对象。套接字对象通过 &lt;code&gt;accept&lt;/code&gt; 方法一次返回一个。</target>
        </trans-unit>
        <trans-unit id="c4c3d95df3f41b38d2755c5a26eaaad051affddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MockSelector&lt;/code&gt; is a &lt;code&gt;selectors.BaseSelector&lt;/code&gt; subclass. At creation time it
takes an iterable of objects. Those objects can be:</source>
          <target state="translated">&lt;code&gt;MockSelector&lt;/code&gt; 是 &lt;code&gt;selectors.BaseSelector&lt;/code&gt; 子类。在创建时，它需要一个可迭代的对象。这些对象可以是：</target>
        </trans-unit>
        <trans-unit id="8a9d75c0ca6b526ecf4ba88c7fa5b11e9b89b3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MockSocket&lt;/code&gt; is a specialization of a &lt;code&gt;Mock(socket.socket)&lt;/code&gt;. Its initializer
takes an iterable of byte strings or functions returning byte strings.
The functions can be used as a run time side effect to set a flag in a
server and allow a clean exit from the main loop.
The byte strings are returned one at a time by the &lt;code&gt;recv&lt;/code&gt; method. When
the iterable is exhausted, &lt;code&gt;recv&lt;/code&gt; returns an empty byte string (&lt;code&gt;b''&lt;/code&gt;)
to mimic a client close or shutdown on the socket.</source>
          <target state="translated">&lt;code&gt;MockSocket&lt;/code&gt; 是 &lt;code&gt;Mock(socket.socket)&lt;/code&gt; 的一种特殊形式。它的初始值设定项采用可迭代的字节字符串或返回字节字符串的函数。该函数可用作运行时的副作用，以在服务器中设置标志并允许从主循环中干净退出。字节字符串通过 &lt;code&gt;recv&lt;/code&gt; 方法一次返回一个。当iterable耗尽时， &lt;code&gt;recv&lt;/code&gt; 返回一个空字节串（ &lt;code&gt;b''&lt;/code&gt; ），以模仿客户端在套接字上的关闭或关闭。</target>
        </trans-unit>
        <trans-unit id="196ead3d4d613eaa7efe5ed4e3d4a7fa785cc9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mockselector&lt;/code&gt; relies on &lt;code&gt;setuptools-scm&lt;/code&gt; to automatically extract a
version number from git metadata and store it in a &lt;code&gt;version.py&lt;/code&gt; file
for later use. The requires the availability of both &lt;code&gt;git&lt;/code&gt; (which should
not be a problem when the project is downloaded from Github), and
&lt;code&gt;setuptools-scm&lt;/code&gt;. If it fails because one is not available or because
git metadata is not there (if you only downloaded a zip archive from
Github), the version is set to 0.0.0</source>
          <target state="translated">&lt;code&gt;mockselector&lt;/code&gt; 依靠 &lt;code&gt;setuptools-scm&lt;/code&gt; 从git元数据中自动提取版本号，并将其存储在 &lt;code&gt;version.py&lt;/code&gt; 文件中，以备后用。需要 &lt;code&gt;git&lt;/code&gt; （从Github下载项目时应该没有问题）和 &lt;code&gt;setuptools-scm&lt;/code&gt; 的可用性。如果由于一个不可用或git元数据不存在而失败（如果您仅从Github下载了一个zip存档），则版本设置为0.0.0。</target>
        </trans-unit>
        <trans-unit id="4b6592e407f065a26e072951418c2497e5ed88ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pip&lt;/code&gt; should be used to install it for the first time in order to have
&lt;code&gt;setuptools-scm&lt;/code&gt; to generate the &lt;code&gt;version.py&lt;/code&gt; file from git metadata.
Once this is done, &lt;code&gt;setup.py&lt;/code&gt; can be used with no special issue.</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 应该使用pip进行首次安装，以使 &lt;code&gt;setuptools-scm&lt;/code&gt; 从git元数据生成 &lt;code&gt;version.py&lt;/code&gt; 文件。完成此操作后，就可以使用 &lt;code&gt;setup.py&lt;/code&gt; 了，而不会出现特殊问题。</target>
        </trans-unit>
        <trans-unit id="101fb22f34cc02d4f73529a03d2c53188f7a16a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pip&lt;/code&gt; uses the &lt;code&gt;pyproject.toml&lt;/code&gt; file with respect to PEP-518 and
PEP-517 to know that &lt;code&gt;setuptools-scm&lt;/code&gt; is required before the build.</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 使用针对PEP-518和PEP-517的 &lt;code&gt;pyproject.toml&lt;/code&gt; 文件来知道在构建之前需要 &lt;code&gt;setuptools-scm&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1ab285d567a2f02ce550dc09de2a5df8c708358" translate="yes" xml:space="preserve">
          <source>Advanced use and contribution</source>
          <target state="translated">先进的使用和贡献</target>
        </trans-unit>
        <trans-unit id="b5311e1c64b6abbdd9b39654888e91122b36d66b" translate="yes" xml:space="preserve">
          <source>Alternatively you can manually install &lt;code&gt;setuptools-scm&lt;/code&gt;:</source>
          <target state="translated">另外，您可以手动安装 &lt;code&gt;setuptools-scm&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="168929183d2470cb5fd9c8ab272eed288ccb698d" translate="yes" xml:space="preserve">
          <source>Basic use</source>
          <target state="translated">基本用途</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>
        </trans-unit>
        <trans-unit id="5deddc83e30130f483cdfd9d3f63b05d6aff5cb8" translate="yes" xml:space="preserve">
          <source>Disclaimer: beta quality</source>
          <target state="translated">声明:测试版质量</target>
        </trans-unit>
        <trans-unit id="d11a97d90a845be5521ce7e78d03c57c33f7776a" translate="yes" xml:space="preserve">
          <source>Even if the package has a nice test coverage (&amp;gt; 95%), it currently only
contains what I need to test another project of mine. It might not meet
your own requirements, or main contain Still Unidentified Bugs...</source>
          <target state="translated">即使该程序包具有良好的测试覆盖率（&amp;gt; 95％），它目前仅包含我需要测试我的另一个项目的内容。它可能不符合您自己的要求，或者主要包含尚无法识别的错误...</target>
        </trans-unit>
        <trans-unit id="ed4acbbfb6dce0686b9903c1f84471846953ee1d" translate="yes" xml:space="preserve">
          <source>Facing a main server loop close to:</source>
          <target state="translated">面对主服务器的循环近。</target>
        </trans-unit>
        <trans-unit id="af05ea80ae71129e0e6f32126b09a86a4f5d08f6" translate="yes" xml:space="preserve">
          <source>For that reason, if you do not use git to download the sources, you
should download a source distribution from PyPI, because the latter
contains a valid &lt;code&gt;version.py&lt;/code&gt;</source>
          <target state="translated">因此，如果您不使用git下载源代码，则应从PyPI下载源代码发行版，因为后者包含有效的 &lt;code&gt;version.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6099df6a655a96ea2246feae778e64089bd6cfc" translate="yes" xml:space="preserve">
          <source>From Github</source>
          <target state="translated">来自Github</target>
        </trans-unit>
        <trans-unit id="0497f9c6f240debffc9e9a2160d24cab3f0d8f5e" translate="yes" xml:space="preserve">
          <source>From PyPI</source>
          <target state="translated">来自PyPI</target>
        </trans-unit>
        <trans-unit id="a72acdedb02c9456c4f5532eb2d3e5d794db7fe5" translate="yes" xml:space="preserve">
          <source>I will be glad to receive issues that would help to improve this project...</source>
          <target state="translated">我将很高兴收到有助于改进这个项目的问题......</target>
        </trans-unit>
        <trans-unit id="da830bd98271f4bdee879704bbba3e964907e33c" translate="yes" xml:space="preserve">
          <source>If you want to tailor the package, it already contains a number of tests.
You can run all of them from the top folder:</source>
          <target state="translated">如果你想定制这个软件包,它已经包含了许多测试。你可以从顶部文件夹中运行所有这些测试。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="577f7ee5c88ba7d2a5031bc7e2ffb21c1726a58c" translate="yes" xml:space="preserve">
          <source>It is still a 0.x version, so the API is not guaranteed to be stable.</source>
          <target state="translated">目前还是0.x版本,所以不能保证API的稳定性。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">许可证</target>
        </trans-unit>
        <trans-unit id="2822ed554c7be24e89138ad6c33c90d1a860c3cc" translate="yes" xml:space="preserve">
          <source>Mock subclass of BaseSelector</source>
          <target state="translated">BaseSelector的模拟子类</target>
        </trans-unit>
        <trans-unit id="ddadf321ace3a61dcf80e64655b29a265a14a516" translate="yes" xml:space="preserve">
          <source>MockSelector</source>
          <target state="translated">MockSelector</target>
        </trans-unit>
        <trans-unit id="43d089df1f9715e26c2001956a2b35a41746ec95" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;test&lt;/code&gt; folder is only available in the source distribution.</source>
          <target state="translated">注意： &lt;code&gt;test&lt;/code&gt; 文件夹仅在源分发中可用。</target>
        </trans-unit>
        <trans-unit id="8b8721ee58ba353c54d34430f12eff5ad5230371" translate="yes" xml:space="preserve">
          <source>Of course, this can be done in a relevant venv if you do not want to have it
in your main installation.</source>
          <target state="translated">当然,如果你不想在你的主安装中拥有它,可以在相关的venv中进行。</target>
        </trans-unit>
        <trans-unit id="c7e0a7eae14b049ebb14444ce538953f5f662ee8" translate="yes" xml:space="preserve">
          <source>Once installed, you can easily import it in your tests.</source>
          <target state="translated">安装后,你可以很容易地在你的测试中导入它。</target>
        </trans-unit>
        <trans-unit id="1b7728b9ec6cee44a957511a2f48bf8e2c25a783" translate="yes" xml:space="preserve">
          <source>Special handling of &lt;code&gt;version.py&lt;/code&gt;:</source>
          <target state="translated">对 &lt;code&gt;version.py&lt;/code&gt; 的特殊处理：</target>
        </trans-unit>
        <trans-unit id="9b79b971c6f36b36653862b1e6817495b8652c45" translate="yes" xml:space="preserve">
          <source>Starting from 0.1.1, &lt;code&gt;mockselector&lt;/code&gt; is available on PyPI. If you just want to
use it in your projects, it is the recommended way:</source>
          <target state="translated">从0.1.1开始， &lt;code&gt;mockselector&lt;/code&gt; 在PyPI上可用。如果只想在项目中使用它，则建议使用以下方法：</target>
        </trans-unit>
        <trans-unit id="329862ba1bf52f198f010d40f26763efbfd252b2" translate="yes" xml:space="preserve">
          <source>That work is licenced under a MIT Licence. See &lt;a href=&quot;https://raw.githubusercontent.com/s-ball/MockSelector/master/LICENCE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;</source>
          <target state="translated">该作品已获得麻省理工学院许可。参见&lt;a href=&quot;https://raw.githubusercontent.com/s-ball/MockSelector/master/LICENCE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4f24180723e72148f05f247d61d7fadcd5213a4" translate="yes" xml:space="preserve">
          <source>This is a collection of Python classes designed to help to test TCP servers
based on selectors. The &lt;code&gt;mockselector&lt;/code&gt; package provides everything needed to easily write
unittest TestCases simulating incoming connections and the associated
input data</source>
          <target state="translated">这是旨在帮助基于选择器测试TCP服务器的Python类的集合。所述 &lt;code&gt;mockselector&lt;/code&gt; 包提供根据需要方便地写入单元测试的TestCases模拟传入的连接和相关联的输入数据的一切</target>
        </trans-unit>
        <trans-unit id="864c64f3daffbccc5d3469b3e428ead1f9ff353f" translate="yes" xml:space="preserve">
          <source>This is the recommended way if you want to contribute or simply tweak
&lt;code&gt;mockselector&lt;/code&gt; to your own requirements. You can get a local copy by
downloading a zipfile but if you want to make changes, you should
rather clone the repository to have access to all &lt;code&gt;git&lt;/code&gt; goodies:</source>
          <target state="translated">如果您想为自己的需求做出贡献或简单地调整 &lt;code&gt;mockselector&lt;/code&gt; ，则这是推荐的方法 。您可以通过下载一个zip文件来获取本地副本，但是如果要进行更改，则应该克隆存储库以访问所有 &lt;code&gt;git&lt;/code&gt; goodies：</target>
        </trans-unit>
        <trans-unit id="b2b4a58364a66ddc31be2ebe3b25104e625fbee3" translate="yes" xml:space="preserve">
          <source>Typical use</source>
          <target state="translated">典型用途</target>
        </trans-unit>
        <trans-unit id="907ec8dd47bc3fc0d7e789b5f4942f384b9adefd" translate="yes" xml:space="preserve">
          <source>You can do:</source>
          <target state="translated">你可以做。</target>
        </trans-unit>
        <trans-unit id="2930805d8e9c7be12b45006dbad4cebd64b69b13" translate="yes" xml:space="preserve">
          <source>You can find a full code example in the &lt;code&gt;miniserv.py&lt;/code&gt; and &lt;code&gt;test_miniserv.py&lt;/code&gt;
files in the tests folder</source>
          <target state="translated">您可以 在tests文件夹的 &lt;code&gt;miniserv.py&lt;/code&gt; 和 &lt;code&gt;test_miniserv.py&lt;/code&gt; 文件中找到完整的代码示例。</target>
        </trans-unit>
        <trans-unit id="62371cdaedf2325d05d161e5cbd16a8c64121246" translate="yes" xml:space="preserve">
          <source>You can then install it in your main Python installation or in a venv with:</source>
          <target state="translated">然后您可以将它安装在您的主Python安装中,或者在venv中使用。</target>
        </trans-unit>
        <trans-unit id="81672b3eefa3fd74b60b8a9c157758291fad07c1" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;socket.socket&lt;/code&gt; (or a &lt;code&gt;Mock&lt;/code&gt;) that will be returned by a &lt;code&gt;select&lt;/code&gt; call
along with an &lt;code&gt;EVENT_READ&lt;/code&gt; event</source>
          <target state="translated">一个 &lt;code&gt;socket.socket&lt;/code&gt; （或 &lt;code&gt;Mock&lt;/code&gt; ），将通过返回 &lt;code&gt;select&lt;/code&gt; 呼叫与沿 &lt;code&gt;EVENT_READ&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="32feb6bb42a2f4c588f6ddca474388fa882bff62" translate="yes" xml:space="preserve">
          <source>a pair &lt;code&gt;(socket, event)&lt;/code&gt; that will be returned - this allows to pass
&lt;code&gt;EVENT_WRITE&lt;/code&gt; events</source>
          <target state="translated">将返回的一对 &lt;code&gt;(socket, event)&lt;/code&gt; -这允许传递 &lt;code&gt;EVENT_WRITE&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="37c75840d617bcee050d37558935873a501f9fe6" translate="yes" xml:space="preserve">
          <source>an iterable of above elements. They will be returned in a list by a
single &lt;code&gt;select&lt;/code&gt; call as &lt;em&gt;simultaneous&lt;/em&gt; events</source>
          <target state="translated">以上元素的迭代。单个 &lt;code&gt;select&lt;/code&gt; 调用会将它们作为&lt;em&gt;同时&lt;/em&gt;事件返回到列表中</target>
        </trans-unit>
        <trans-unit id="18ab2bf3c96d7c91902aa402ae115a01b32d5cc0" translate="yes" xml:space="preserve">
          <source>or on Windows with the launcher:</source>
          <target state="translated">或在Windows上使用启动器。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
