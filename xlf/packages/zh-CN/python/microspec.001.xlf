<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/microspec/">
    <body>
      <group id="microspec">
        <trans-unit id="8d3489696e966184bfbd09ec5a450d68e8b8a6b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;microspeclib&lt;/code&gt; accesses this USB interface using &lt;code&gt;pyserial&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;microspeclib&lt;/code&gt; 使用 &lt;code&gt;pyserial&lt;/code&gt; 访问此USB接口。</target>
        </trans-unit>
        <trans-unit id="dbe7bcb85f91b25723ea61e2da7017dbc2a02d45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sean Cusack&lt;/strong&gt; - &lt;em&gt;Initial version&lt;/em&gt; - &lt;a href=&quot;https://github.com/eruciform&quot;&gt;GitHub&lt;/a&gt;&lt;a href=&quot;https://eruciform.com&quot;&gt;Blog&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;肖恩&amp;middot;库萨克&lt;/strong&gt;-&lt;em&gt;初始版本&lt;/em&gt;- &lt;a href=&quot;https://github.com/eruciform&quot;&gt;GitHub的&lt;/a&gt;&lt;a href=&quot;https://eruciform.com&quot;&gt;博客&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">作者</target>
        </trans-unit>
        <trans-unit id="d90dc3484f569562ac7b0d677dd34abe3ca6dbdd" translate="yes" xml:space="preserve">
          <source>Command Line API</source>
          <target state="translated">命令行API</target>
        </trans-unit>
        <trans-unit id="b1b9124cd443317b1d7031d33b3a00ce4ac3b5e0" translate="yes" xml:space="preserve">
          <source>Developers may want to install additional packages required for
running unit tests and rebuilding documentation.</source>
          <target state="translated">开发人员可能需要安装运行单元测试和重建文档所需的附加包。</target>
        </trans-unit>
        <trans-unit id="8374e342e62c9bfe0e0f090eb41483bf476ce03d" translate="yes" xml:space="preserve">
          <source>Emulate hardware with &lt;code&gt;-e&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;-e&lt;/code&gt; 模拟硬件</target>
        </trans-unit>
        <trans-unit id="50b5d5f867e2a12edf487b172da0ff6c375be08f" translate="yes" xml:space="preserve">
          <source>Emulator</source>
          <target state="translated">仿真器</target>
        </trans-unit>
        <trans-unit id="16aae584ec26cc4b4ee75e3dd51aa0193aae5b1f" translate="yes" xml:space="preserve">
          <source>For example, to set the exposure and cycles and then get 3
capture frames spaced 1.5 seconds apart, with a timeout of 0.2
seconds on each, and print it in CSV format:</source>
          <target state="translated">例如,设置曝光和周期,然后得到3张间隔为1.5秒,每张超时0.2秒的捕捉画面,并以CSV格式打印出来。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="818e5c5dc4016723f858a4c50a20de2adadbac20" translate="yes" xml:space="preserve">
          <source>For now, this is only supported on Linux and MacOSX, and requires
the &lt;code&gt;socat&lt;/code&gt; executable to be installed and available on your PATH.</source>
          <target state="translated">目前，这仅在Linux和MacOSX上受支持，并且要求 &lt;code&gt;socat&lt;/code&gt; 可执行文件已安装并在PATH上可用。</target>
        </trans-unit>
        <trans-unit id="c126d74e5215b6b617751426756a6f70acbaeede" translate="yes" xml:space="preserve">
          <source>If &quot;Load VCP&quot; is not enabled, &lt;code&gt;pyserial&lt;/code&gt; cannot communicate with
the dev-kit and &lt;code&gt;microspec&lt;/code&gt; will report that it does not see a
connected USB device.</source>
          <target state="translated">如果未启用&amp;ldquo;加载VCP&amp;rdquo;，则 &lt;code&gt;pyserial&lt;/code&gt; 无法与dev-kit通信，并且 &lt;code&gt;microspec&lt;/code&gt; 将报告其看不到已连接的USB设备。</target>
        </trans-unit>
        <trans-unit id="1d6f877a0a3f64cc110b6b183183dde31a651f46" translate="yes" xml:space="preserve">
          <source>Import the API in a Python script or at a Python REPL:</source>
          <target state="translated">在Python脚本或Python REPL中导入API。</target>
        </trans-unit>
        <trans-unit id="0937a6d6cc904d7233f5be11755faf3ca2d2a9b1" translate="yes" xml:space="preserve">
          <source>Install extra requirements for testing and documentation</source>
          <target state="translated">安装额外的测试和文档要求</target>
        </trans-unit>
        <trans-unit id="847401c2e0e8c56d026910487f74d5918dbab74c" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;microspec&lt;/code&gt; project with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;pip&lt;/code&gt; 安装 &lt;code&gt;microspec&lt;/code&gt; 项目：</target>
        </trans-unit>
        <trans-unit id="eaf76b75c4c78bc43ce5f5cc760fbbc9540a91b8" translate="yes" xml:space="preserve">
          <source>Install the Python API</source>
          <target state="translated">安装Python API</target>
        </trans-unit>
        <trans-unit id="8abd8774fb619c639fa28d7d35414945e050caa5" translate="yes" xml:space="preserve">
          <source>Many of the &lt;code&gt;microspec&lt;/code&gt; unit tests use an emulator to fake the
dev-kit hardware. The emulator requires utility &lt;code&gt;socat&lt;/code&gt;, which is
only available for Mac and Linux.</source>
          <target state="translated">许多 &lt;code&gt;microspec&lt;/code&gt; 单元测试使用仿真器来伪造dev-kit硬件。该模拟器需要实用程序 &lt;code&gt;socat&lt;/code&gt; ，该实用程序仅适用于Mac和Linux。</target>
        </trans-unit>
        <trans-unit id="6eabf943315982a3887e38d315474c823b18a0be" translate="yes" xml:space="preserve">
          <source>MicroSpec Overview</source>
          <target state="translated">微规格概述</target>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="translated">更多信息</target>
        </trans-unit>
        <trans-unit id="faf3d338e9591fca66e750be54909653b3a6c8cd" translate="yes" xml:space="preserve">
          <source>Note that if you have no hardware connected, you can (on Linux
and MacOSX) add a &quot;-e&quot; flag to use the emulator. It won't return
very interesting capture frame data, but it will give an
opportunity to test the interface.</source>
          <target state="translated">请注意,如果你没有连接硬件,你可以(在Linux和MacOSX上)添加一个&quot;-e &quot;标志来使用模拟器。它不会返回非常有趣的捕获帧数据,但它将提供一个测试接口的机会。</target>
        </trans-unit>
        <trans-unit id="868f17a167263f286c40c603461b022662fa7faf" translate="yes" xml:space="preserve">
          <source>Now &quot;Load VCP&quot; is enabled every time the dev-kit is connected to
this Windows computer.</source>
          <target state="translated">现在,&quot;Load VCP &quot;在每次连接到这台Windows电脑时都会被启用。</target>
        </trans-unit>
        <trans-unit id="01bfd4536f81b0e979d8498919afa6a97428b781" translate="yes" xml:space="preserve">
          <source>On Windows, replace &lt;code&gt;microspec_cmdline.py&lt;/code&gt; in the above lines
with &lt;code&gt;microspec_cmdline.exe&lt;/code&gt;.</source>
          <target state="translated">在Windows中，取代 &lt;code&gt;microspec_cmdline.py&lt;/code&gt; 在上面的线， &lt;code&gt;microspec_cmdline.exe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="653216e3f5c4d69191d4aa7805903e962eda87f9" translate="yes" xml:space="preserve">
          <source>On Windows, when connecting the dev-kit for the first time:</source>
          <target state="translated">在Windows上,当第一次连接dev-kit时。</target>
        </trans-unit>
        <trans-unit id="f90971f3e163858cccdd2de4a23c00ac50494bd5" translate="yes" xml:space="preserve">
          <source>Open Device Manager:</source>
          <target state="translated">打开设备管理器。</target>
        </trans-unit>
        <trans-unit id="df25d3b26fb586c6c1b1ae8c88896c1daa50dd37" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;microspeclib&lt;/code&gt; is a Python API for the Chromation
spectrometer dev-kit.</source>
          <target state="translated">软件包 &lt;code&gt;microspeclib&lt;/code&gt; 是Chromation光谱仪dev-kit的Python API。</target>
        </trans-unit>
        <trans-unit id="cdeb0e3c9288946537518a8548e039af5ae86d97" translate="yes" xml:space="preserve">
          <source>Please see the project homepage for more information:</source>
          <target state="translated">更多信息请见项目主页。</target>
        </trans-unit>
        <trans-unit id="b2b6077dbdbab0d4c19af1d6a081a21e224ada5d" translate="yes" xml:space="preserve">
          <source>Python API for the Chromation spectrometer dev-kit</source>
          <target state="translated">色谱仪开发工具包的Python API。</target>
        </trans-unit>
        <trans-unit id="a108d46613ed9b29aa476a181580b0b23edfdeee" translate="yes" xml:space="preserve">
          <source>Spectrometer Hardware</source>
          <target state="translated">光谱仪硬件</target>
        </trans-unit>
        <trans-unit id="f512f4e60bcee8e72ccd48b2e754aa5bdde659f8" translate="yes" xml:space="preserve">
          <source>The -t timeout is how long it will wait for the command each
time, and if it fails it will print None and move on. If a -r
repeat is specified, it will run the command that many times.
And if it is repeating, a -w wait will wait that long in between
commands. All times are in fractional seconds.</source>
          <target state="translated">-t超时是指每次等待命令的时间,如果失败,将打印None并继续运行。如果指定了-r repeat,它将运行该命令的次数。如果是重复运行,那么-w wait将在两次命令之间等待多长时间。所有时间的单位都是小数点后的秒数。</target>
        </trans-unit>
        <trans-unit id="39d8c08485b7d505319fa61287e3bb0ebcb9c565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microspec&lt;/code&gt; project also includes:</source>
          <target state="translated">该 &lt;code&gt;microspec&lt;/code&gt; 项目还包括：</target>
        </trans-unit>
        <trans-unit id="165e12da050870c7d565836ccd13b66cefbdbb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microspec_cmdline.py&lt;/code&gt; executable will run a single command
and print the reply to stdout, optionally in CSV format. The
default is to look for hardware, but -f FILE can be used to point
it to either a device file or the name of a port, as in &quot;COM3&quot;,
if necessary. The command itself is case-insensitive, and after
the command are key=value pairs of options for the command, if
necessary, such as &lt;code&gt;led_num=0&lt;/code&gt; or &lt;code&gt;cycles=100&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;microspec_cmdline.py&lt;/code&gt; 可执行文件将运行单个命令并打印回复到stdout，任选以CSV格式。缺省值是查找硬件，但如有必要，可以使用-f FILE将其指向设备文件或端口名称，如&amp;ldquo; COM3&amp;rdquo;中所示。该命令本身是不区分大小写的，并且在命令之后是该命令的选项的key = value对，例如 &lt;code&gt;led_num=0&lt;/code&gt; 或 &lt;code&gt;cycles=100&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81327bf4980ba1c3ebb317786f4e07950e124302" translate="yes" xml:space="preserve">
          <source>The API is a set of commands for configuring the spectrometer and
acquiring data.</source>
          <target state="translated">API是一组用于配置光谱仪和获取数据的命令。</target>
        </trans-unit>
        <trans-unit id="114b532f122e5eded490c183a4ec88bbe6a3aacb" translate="yes" xml:space="preserve">
          <source>The Chromation spectrometer is a surface-mount PCB package
consisting of a linear photodiode array and optical components.</source>
          <target state="translated">色谱仪是由线性光电二极管阵列和光学元件组成的表面贴装PCB封装。</target>
        </trans-unit>
        <trans-unit id="389dcc605b79c272c1126161259325753e9975b5" translate="yes" xml:space="preserve">
          <source>The Python API communicates with firmware on the two
microcontrollers in the dev-kit, one on each of the stacked PCBs.</source>
          <target state="translated">Python API与开发套件中的两个微控制器上的固件进行通信,每个堆叠的PCB上都有一个。</target>
        </trans-unit>
        <trans-unit id="e707ba1dc1984462002736d6139d7b03d6443770" translate="yes" xml:space="preserve">
          <source>The command line utility is a &lt;code&gt;.exe&lt;/code&gt; on Windows</source>
          <target state="translated">命令行实用程序是Windows上的 &lt;code&gt;.exe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="462080da4170fe3f63f2636ab587465e912dd235" translate="yes" xml:space="preserve">
          <source>The documentation is built with Sphinx. Developers extending
the API will need to rebuild the documentation. Install the
Sphinx-related requirements by adding &lt;code&gt;[dev]&lt;/code&gt; to the &lt;code&gt;install&lt;/code&gt;
command:</source>
          <target state="translated">该文档是使用Sphinx构建的。扩展API的开发人员将需要重建文档。通过在 &lt;code&gt;install&lt;/code&gt; 命令中添加 &lt;code&gt;[dev]&lt;/code&gt; 来安装与Sphinx相关的要求：</target>
        </trans-unit>
        <trans-unit id="224229d8f145a2494ff5d90d40ea20535dfffced" translate="yes" xml:space="preserve">
          <source>The following will connect to the dev-kit USB hardware, capture a
single frame, then print the status, number of pixels, and the
value of the 3rd pixel.</source>
          <target state="translated">下面将连接dev-kit的USB硬件,捕获一帧画面,然后打印状态、像素数和第3个像素的值。</target>
        </trans-unit>
        <trans-unit id="5737e7815ab81b75a7e93a640fca71d334eb97cb" translate="yes" xml:space="preserve">
          <source>The microcontroller on the PCB stacked above provides a USB
bridge that turns the SPI interface into a USB interface.</source>
          <target state="translated">上面堆叠的PCB上的微控制器提供了一个USB桥,将SPI接口变成了USB接口。</target>
        </trans-unit>
        <trans-unit id="9a6edeb0aab435e406e78531d2d4da6eeb972f84" translate="yes" xml:space="preserve">
          <source>The microcontroller on the bottom of the stack provides a SPI
interface to the Chromation spectrometer.</source>
          <target state="translated">堆栈底部的微控制器为色度仪提供了一个SPI接口。</target>
        </trans-unit>
        <trans-unit id="fc5858ef08d93cdeca720307d93d4442456c8064" translate="yes" xml:space="preserve">
          <source>There is one method for each command. Commands are
camelCaseFormatted. Commands return the received reply object. If
there is an error or a timeout, the reply is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">每个命令只有一种方法。命令是camelCaseFormatted。命令返回收到的回复对象。如果有错误或超时，则答复为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c73a0f25bfedf2b17af6cd86c2d283dc2643d87" translate="yes" xml:space="preserve">
          <source>To extend/customize/repurpose the API, clone the repository from
the project homepage:
&lt;a href=&quot;https://github.com/microspectrometer/microspec&quot;&gt;https://github.com/microspectrometer/microspec&lt;/a&gt; and install in
&lt;code&gt;--editable&lt;/code&gt; mode.</source>
          <target state="translated">要扩展/自定义/重新定义API，请从项目主页克隆存储库：&lt;a href=&quot;https://github.com/microspectrometer/microspec&quot;&gt;https&lt;/a&gt; : //github.com/microspectrometer/microspec并以 &lt;code&gt;--editable&lt;/code&gt; 模式安装 。</target>
        </trans-unit>
        <trans-unit id="69fc6d9baf70bfb2c7a0b51e6df53eee49d53039" translate="yes" xml:space="preserve">
          <source>Use the Python API</source>
          <target state="translated">使用Python API</target>
        </trans-unit>
        <trans-unit id="8d49a259d8a069f3951444cd08bacff109b59d02" translate="yes" xml:space="preserve">
          <source>Use the emulator with the &lt;code&gt;microspeclib.simple&lt;/code&gt; or
&lt;code&gt;microspeclib.expert&lt;/code&gt; API with keyword argument &lt;code&gt;emulation=True&lt;/code&gt;.</source>
          <target state="translated">将仿真器与带有关键字参数 &lt;code&gt;emulation=True&lt;/code&gt; 的 &lt;code&gt;microspeclib.simple&lt;/code&gt; 或 &lt;code&gt;microspeclib.expert&lt;/code&gt; API结合使用。</target>
        </trans-unit>
        <trans-unit id="6d6641a4b775c660652c3d0f0d161f7d75b000c7" translate="yes" xml:space="preserve">
          <source>Use the emulator with the command-line utility by adding a &quot;-e&quot;
flag.</source>
          <target state="translated">通过添加&quot;-e &quot;标志来使用带有命令行实用程序的仿真器。</target>
        </trans-unit>
        <trans-unit id="d5290d603f71bb44d2e81d553866f50b91fb6680" translate="yes" xml:space="preserve">
          <source>Windows Load VCP</source>
          <target state="translated">窗口加载VCP</target>
        </trans-unit>
        <trans-unit id="f7f4ced23003b2fdc74d5628b2d86cdcb21f50de" translate="yes" xml:space="preserve">
          <source>an emulator (Mac and Linux only) for faking the dev-kit
hardware in unit tests</source>
          <target state="translated">仿真器(仅限Mac和Linux),用于在单元测试中伪造dev-kit硬件。</target>
        </trans-unit>
        <trans-unit id="0eac7662880bd24bfd91de305ab0b6f463809707" translate="yes" xml:space="preserve">
          <source>check &quot;Load VCP&quot;</source>
          <target state="translated">检查 &quot;加载VCP&quot;</target>
        </trans-unit>
        <trans-unit id="c289e0598edc757eb75192cff25e37d289276343" translate="yes" xml:space="preserve">
          <source>command line utility &lt;code&gt;microspec-cmdline&lt;/code&gt; for running basic
measurements without developing a Python application</source>
          <target state="translated">命令行实用程序 &lt;code&gt;microspec-cmdline&lt;/code&gt; ,用于运行基本测量而无需开发Python应用程序</target>
        </trans-unit>
        <trans-unit id="561a0bbf9bedd2fba52c6d00449a376a62d04bb0" translate="yes" xml:space="preserve">
          <source>cycle power to the dev-kit (unplug/plug the USB cable)</source>
          <target state="translated">循环给dev-kit供电(拔掉/插入USB线)。</target>
        </trans-unit>
        <trans-unit id="c8866f88fd76d7ad83e2e039b3655438a609f4df" translate="yes" xml:space="preserve">
          <source>go to tab &quot;Advanced&quot;</source>
          <target state="translated">进入 &quot;高级 &quot;标签</target>
        </trans-unit>
        <trans-unit id="9c59e4e6bbe7309e82cfb2ce1134e108962557f0" translate="yes" xml:space="preserve">
          <source>right-click on USB Serial Converter</source>
          <target state="translated">右键点击USB串行转换器</target>
        </trans-unit>
        <trans-unit id="f6d1d67049efa081c649ae3245612171373225f8" translate="yes" xml:space="preserve">
          <source>select Properties</source>
          <target state="translated">选择属性</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
