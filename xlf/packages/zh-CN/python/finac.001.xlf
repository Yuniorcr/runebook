<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://pypi.org/project/finac/">
    <body>
      <group id="finac">
        <trans-unit id="e0bc517f0382d1efa183357805c58a52da93c168" translate="yes" xml:space="preserve">
          <source>1 000,00 = 1000.0</source>
          <target state="translated">1 000,00=1000.0</target>
        </trans-unit>
        <trans-unit id="1f9249ef94b109311950d364cb0a2e72fb5721b3" translate="yes" xml:space="preserve">
          <source>1,000.00 = 1000.0</source>
          <target state="translated">1,000.00=1000.0</target>
        </trans-unit>
        <trans-unit id="5169a545a687004c5e394a108684ed16f6be68e1" translate="yes" xml:space="preserve">
          <source>1.000,00 = 1000.0</source>
          <target state="translated">1.000,00=1000.0</target>
        </trans-unit>
        <trans-unit id="e89b9db8f721acfe4688b4092470e3133c82d784" translate="yes" xml:space="preserve">
          <source>10,0 = 10.0</source>
          <target state="translated">10,0=10.0</target>
        </trans-unit>
        <trans-unit id="7c24cfa5d29ac382a304fdcc5bd5e624a2610327" translate="yes" xml:space="preserve">
          <source>10.0 = 10.0</source>
          <target state="translated">10.0=10.0</target>
        </trans-unit>
        <trans-unit id="961a249e293835cec043533b0a2e79600ff29397" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;account&lt;/strong&gt; bank account, counterparty account, tax account, special account
etc. Everything is accounts :)</source>
          <target state="translated">&lt;strong&gt;帐户&lt;/strong&gt;银行帐户，交易对手帐户，税收帐户，特殊帐户等。一切都是帐户:)</target>
        </trans-unit>
        <trans-unit id="bfdabb02b078586fc26e7e10af181d8303920292" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;asset&lt;/strong&gt; currency, ISIN, stock code etc., currencies &quot;USD&quot; and &quot;EUR&quot; are
created automatically. Finac doesn't divide assets into currencies, property
and other. This allows creating applications for the various areas using the
single library.</source>
          <target state="translated">&lt;strong&gt;资产&lt;/strong&gt;货币，ISIN，股票代码等，货币&amp;ldquo; USD&amp;rdquo;和&amp;ldquo; EUR&amp;rdquo;会自动创建。Finac不会将资产分为货币，房地产和其他。这允许使用单个库为各个区域创建应用程序。</target>
        </trans-unit>
        <trans-unit id="2b4ca40aa4370cbfb8dd10113ddc306c82428eb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transaction&lt;/strong&gt; movements from (credit) / to (debit) and between accounts</source>
          <target state="translated">&lt;strong&gt;交易&lt;/strong&gt;从（贷方）/到（借方）以及账户之间的移动</target>
        </trans-unit>
        <trans-unit id="231f1b12f7eab989171425d19c7d79cf952bac15" translate="yes" xml:space="preserve">
          <source>Accounts of types &quot;tax&quot;, &quot;supplier&quot; and &quot;finagent&quot; are passive by default.</source>
          <target state="translated">&quot;税务&quot;、&quot;供应商 &quot;和 &quot;财务代理 &quot;类型的账户默认为被动账户。</target>
        </trans-unit>
        <trans-unit id="7d9c653f4e5248ba952e2f8ba1f0ba49196f0e1e" translate="yes" xml:space="preserve">
          <source>Actually, transaction templates are useful for any repeating operations. You
may specify all same arguments, as for the core functions.</source>
          <target state="translated">实际上,事务模板对于任何重复的操作都是有用的。你可以指定所有相同的参数,就像核心函数一样。</target>
        </trans-unit>
        <trans-unit id="3e47a34b2ca5976eb9101b04ab875b9df6180439" translate="yes" xml:space="preserve">
          <source>After the previous operation, we have &lt;em&gt;4,890.00&lt;/em&gt; USD on &quot;acc1&quot; and want to move
all except $1000 to &quot;acc2&quot;. Let's do it:</source>
          <target state="translated">经过上一次操作，我们有&lt;em&gt;4,890.00&lt;/em&gt;在&amp;ldquo; acc1&amp;rdquo;上美元，并希望将除$ 1000外的所有美元都移至&amp;ldquo; acc2&amp;rdquo;。我们开始做吧：</target>
        </trans-unit>
        <trans-unit id="ab81efb949e5a152ae566045ff2ea716fe3433af" translate="yes" xml:space="preserve">
          <source>As you see, there's no counterparty account in lazy exchange. This feature is
useful for personal accounting and special applications, but for the
professional accounting, you should create counterparty exchange account and
perform buy-sell transactions with it.</source>
          <target state="translated">如你所见,懒人交易所中没有交易对手账户。这个功能对于个人会计和特殊应用是有用的,但对于专业会计来说,你应该创建对手方交易所账户,并用它进行买卖交易。</target>
        </trans-unit>
        <trans-unit id="843f302dcb0938f7b0a5147d458e936f2b7d8874" translate="yes" xml:space="preserve">
          <source>Assets have &lt;strong&gt;rates&lt;/strong&gt; - value of one asset, relative to other.</source>
          <target state="translated">资产有&lt;strong&gt;利率&lt;/strong&gt;-一种资产相对于另一种资产的价值。</target>
        </trans-unit>
        <trans-unit id="ccf83992f2fcc156d5bdcfb04a7f02d0a4676284" translate="yes" xml:space="preserve">
          <source>But the problem is there's a lot of transactions you should sum up. Or
calculate the difference between bank balance and accounting. Pretty common,
eh? Don't do this, we have targets.</source>
          <target state="translated">但问题是有很多交易你应该总结。或者计算银行余额和会计的区别。很常见,是吧?不要这样做,我们有目标。</target>
        </trans-unit>
        <trans-unit id="b5115124cf1d108916d1916201db31d5e536206c" translate="yes" xml:space="preserve">
          <source>Client-server mode and HTTP API</source>
          <target state="translated">客户端-服务器模式和HTTP API</target>
        </trans-unit>
        <trans-unit id="10788e048525f3fc5205d6c0e7e36e5eb1a0a8e7" translate="yes" xml:space="preserve">
          <source>Data multiplier</source>
          <target state="translated">数据乘法器</target>
        </trans-unit>
        <trans-unit id="f38c7f187adb1398d48e3bc72bd0062ecc005154" translate="yes" xml:space="preserve">
          <source>Depending on data, it may be useful to store numeric values in database as
integers instead of floats. Finac library has built-in data multiplier feature,
to enable it, set &lt;em&gt;multiplier=N&lt;/em&gt; in &lt;em&gt;finac.init()&lt;/em&gt; method, e.g.
&lt;em&gt;multiplier=1000&lt;/em&gt; if you want to store integers in tables and have data with
max precision 3 digits after comma.</source>
          <target state="translated">根据数据，将数字值存储为整数而不是浮点数可能会很有用。Finac库具有内置的数据乘法器功能，要启用它，请在&lt;em&gt;finac.init（）&lt;/em&gt;方法中设置&lt;em&gt;multiplier = N&lt;/em&gt;，例如 &lt;em&gt;multiplier = 1000&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;如果要在表中存储整数并且数据的最大精度为逗号后3位。</target>
        </trans-unit>
        <trans-unit id="8a127e64a9ead93f82c7317d4e36a9d1ed934818" translate="yes" xml:space="preserve">
          <source>Depending to your database type, it's REQUIRED to convert these columns to
either DATETIME (SQLite, for MySQL DATETIME(6) recommended) or TIMESTAMPTZ
(PostgreSQL, with timezone).</source>
          <target state="translated">根据你的数据库类型,需要将这些列转换为DATETIME(SQLite,推荐MySQL的DATETIME(6))或TIMESTAMPTZ(PostgreSQL,带时区)。</target>
        </trans-unit>
        <trans-unit id="0355bead37046ef9ccf42665436f3429df923847" translate="yes" xml:space="preserve">
          <source>Documentation: &lt;a href=&quot;https://finac.readthedocs.io/&quot;&gt;https://finac.readthedocs.io/&lt;/a&gt;</source>
          <target state="translated">文档：&lt;a href=&quot;https://finac.readthedocs.io/&quot;&gt;https&lt;/a&gt; : //finac.readthedocs.io/</target>
        </trans-unit>
        <trans-unit id="21f6c7d432e5c7bcf8faad8a58ecba05dd344f3e" translate="yes" xml:space="preserve">
          <source>Enterprise server and support</source>
          <target state="translated">企业服务器和支持</target>
        </trans-unit>
        <trans-unit id="87ecef59c5c568d2a2d70b0af30a1d0fe1a4d195" translate="yes" xml:space="preserve">
          <source>Example: you have a repeating payment orders in your bank, which pay office
utility bills every 5th day of month, plus automatically moves $100 to saving
account. To fill this into accounting, just create YAML transaction template:</source>
          <target state="translated">例如:你在银行有一个重复付款单,每月5日支付办公室水电费,另外自动将100元转入储蓄账户。要把这个填入会计,只需创建YAML交易模板。</target>
        </trans-unit>
        <trans-unit id="5e22b52adcdd3450d4860a16253732a7a0352c95" translate="yes" xml:space="preserve">
          <source>Finac - financial accounting for humans</source>
          <target state="translated">Finac----人类的财务会计</target>
        </trans-unit>
        <trans-unit id="065cd4576e7fc6135d6a8cc143984e4edd47f3f0" translate="yes" xml:space="preserve">
          <source>Finac can automatically move assets between accounts with different currencies,
if exchange rate is set or specified in transaction details:</source>
          <target state="translated">如果在交易细节中设置了汇率或指定了汇率,Finac可以在不同货币的账户之间自动移动资产。</target>
        </trans-unit>
        <trans-unit id="787e87b8248c9634a4639ada317dd0de56596846" translate="yes" xml:space="preserve">
          <source>Finac database contain 3 entity types:</source>
          <target state="translated">Finac数据库包含3种实体类型。</target>
        </trans-unit>
        <trans-unit id="5da82b531dff48cd3d8eea4baae1e7e94fa20385" translate="yes" xml:space="preserve">
          <source>Finac doesn't use system locale. If you input amounts and targets as strings,
you may input them in any format and Finac will try converting it to the float
numeric automatically. The following values for amounts and targets are valid
and will be automatically parsed:</source>
          <target state="translated">Finac不使用系统定位。如果您以字符串形式输入金额和目标,您可以以任何格式输入,Finac将尝试自动将其转换为浮点数。以下的金额和目标值是有效的,并将自动解析。</target>
        </trans-unit>
        <trans-unit id="eb7dce8af31488284cd96b43c0097782eeb46899" translate="yes" xml:space="preserve">
          <source>Finac is a library and function set for Jupyter/ipython, which provides a
double-entry bookkeeping database.</source>
          <target state="translated">Finac是Jupyter/ipython的一个库和函数集,它提供了一个复式记账数据库。</target>
        </trans-unit>
        <trans-unit id="f6db852251168f06c237606c8464d69a7b2bb1f8" translate="yes" xml:space="preserve">
          <source>Finac is simple, open and free. It can work with SQLite or any database
supported by SQLAlchemy (tested: SQLite, MySQL, PostgreSQL).</source>
          <target state="translated">Finac是简单、开放和免费的。它可以与SQLite或SQLAlchemy支持的任何数据库一起工作(测试:SQLite、MySQL、PostgreSQL)。</target>
        </trans-unit>
        <trans-unit id="cb66a6b7997424bbc275985008d4d8ebfc48e01a" translate="yes" xml:space="preserve">
          <source>Finac supports multiple currencies, simple transactions, double-entry
bookkeeping transactions, watches overdrafts, balance limits and has many
useful features, which make accounting simple and fun.</source>
          <target state="translated">Finac支持多币种、简单交易、复式记账交易、观看透支、余额限制等多种实用功能,让会计工作变得简单而有趣。</target>
        </trans-unit>
        <trans-unit id="6797637815a072ceed2c538f5dc5827eb884c7c0" translate="yes" xml:space="preserve">
          <source>Financial accounting library</source>
          <target state="translated">财务会计库</target>
        </trans-unit>
        <trans-unit id="6207cf5beafb0add58ff6b030351511f75ce03a7" translate="yes" xml:space="preserve">
          <source>For the simple transactions (&lt;em&gt;f.tr(...))&lt;/em&gt;), use &lt;em&gt;target=&lt;/em&gt;.</source>
          <target state="translated">对于简单事务（&lt;em&gt;f.tr（...）&lt;/em&gt;），请使用&lt;em&gt;target =&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8e0a112192126b3a522a88b2c524fb4479a126c8" translate="yes" xml:space="preserve">
          <source>Full list of tables and fields is available in dict
&lt;em&gt;finac.core.multiply_fields&lt;/em&gt;.</source>
          <target state="translated">dict &lt;em&gt;finac.core.multiply_fields中&lt;/em&gt;提供了表和字段的完整列表 。</target>
        </trans-unit>
        <trans-unit id="c9564149c757f2b2cd165ab9969aed8288a9d43d" translate="yes" xml:space="preserve">
          <source>How to embed Finac library into own project</source>
          <target state="translated">如何将Finac库嵌入到自己的项目中?</target>
        </trans-unit>
        <trans-unit id="4003f48231860e273ee7655256b4352a94f5daed" translate="yes" xml:space="preserve">
          <source>How to use in interactive mode</source>
          <target state="translated">如何在互动模式下使用</target>
        </trans-unit>
        <trans-unit id="0b44d2ce5a2d2c398754110453bf2a61dd5b404b" translate="yes" xml:space="preserve">
          <source>If account is passive, its assets are decremented from totals. To create
passive account, use &lt;em&gt;passive&lt;/em&gt; argument:</source>
          <target state="translated">如果帐户是被动帐户，则其资产将从总计中减少。要创建被动帐户，请使用&lt;em&gt;被动&lt;/em&gt;参数：</target>
        </trans-unit>
        <trans-unit id="22de1db043b79d5789ef7e3924b1debf6bfa7840" translate="yes" xml:space="preserve">
          <source>If you want to specify a debit account balance target instead, use &lt;em&gt;target_dt&lt;/em&gt;
function argument. Note: calculated transaction amount should be always greater
than zero (if you try specifying credit account target higher than its current
balance, you get &lt;em&gt;ValueError&lt;/em&gt; exception)</source>
          <target state="translated">如果要指定借方帐户余额目标，请使用&lt;em&gt;target_dt&lt;/em&gt; 函数参数。注意：计算的交易金额应始终大于零（如果您尝试将贷方帐户目标指定为高于其当前余额，则会出现&lt;em&gt;ValueError&lt;/em&gt;异常）</target>
        </trans-unit>
        <trans-unit id="715135eccd2a1be75031415df8bfccfe7c6296ef" translate="yes" xml:space="preserve">
          <source>Inside database, Finac uses numeric IDs to connect objects, so all their codes
can be changed without any problems.</source>
          <target state="translated">在数据库内部,Finac使用数字ID来连接对象,因此所有对象的代码都可以毫无问题地改变。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">安装</target>
        </trans-unit>
        <trans-unit id="7bc74cfef23e3fe136eaa61920dbbd9e6566a5dc" translate="yes" xml:space="preserve">
          <source>Lazy exchange</source>
          <target state="translated">懒人交换</target>
        </trans-unit>
        <trans-unit id="53e528ec0890a39483f9d31bb36e56cc71409b6e" translate="yes" xml:space="preserve">
          <source>Note: multiplier can be used only with integer and numeric(X) field types, as
core conversion functions always return rounded value.</source>
          <target state="translated">注意:乘法器只能用于整数和数值(X)字段类型,因为核心转换函数总是返回四舍五入的值。</target>
        </trans-unit>
        <trans-unit id="8766d2e63c6824e94635bf01f22382c0a755a14d" translate="yes" xml:space="preserve">
          <source>Note: when addressing currencies and accounts both in interactive and API mode,
you should use account and asset codes as object identifiers. &lt;strong&gt;All codes
are case-insensitive&lt;/strong&gt;.</source>
          <target state="translated">注意：以交互方式和API模式同时处理货币和帐户时，应使用帐户和资产代码作为对象标识符。&lt;strong&gt;所有代码都不区分大小写&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a7417f328934dab7503609c163ec3236cfcb65c1" translate="yes" xml:space="preserve">
          <source>Note: you must manually convert table fields to numeric/integer types, and
multiply them if performing data multiplier implementation on living database.</source>
          <target state="translated">注意:如果在活的数据库中执行数据乘法器,必须手动将表字段转换为数字/整数类型,并将它们相乘。</target>
        </trans-unit>
        <trans-unit id="2918c4d5af1ec648f31fc83cb72666722f8d463c" translate="yes" xml:space="preserve">
          <source>Number formatting</source>
          <target state="translated">数字格式化</target>
        </trans-unit>
        <trans-unit id="28ac803e1696169a0797715a8cce52d973db3786" translate="yes" xml:space="preserve">
          <source>Passive accounts</source>
          <target state="translated">被动账户</target>
        </trans-unit>
        <trans-unit id="eff03ccbb28c77c758eeffd73614fb81f4e092ca" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://finac.readthedocs.io/&quot;&gt;Finac documentation&lt;/a&gt; for core function API
details.</source>
          <target state="translated">有关核心功能API的详细信息，请参见&lt;a href=&quot;https://finac.readthedocs.io/&quot;&gt;Finac文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be1cf028afae737ac346bf53d0eee6fc5cc5e045" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://finac.readthedocs.io/&quot;&gt;Finac documentation&lt;/a&gt; for server mode and
HTTP API details.</source>
          <target state="translated">有关服务器模式和HTTP API详细信息，请参见&lt;a href=&quot;https://finac.readthedocs.io/&quot;&gt;Finac文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45f2ea3bbe779b3b012fdd33c247f82a910fc12d" translate="yes" xml:space="preserve">
          <source>Sources: &lt;a href=&quot;https://github.com/alttch/finac&quot;&gt;https://github.com/alttch/finac&lt;/a&gt;</source>
          <target state="translated">资料来源：&lt;a href=&quot;https://github.com/alttch/finac&quot;&gt;https&lt;/a&gt; : //github.com/alttch/finac</target>
        </trans-unit>
        <trans-unit id="2e51c9be1bab0010b7ca23dacefc249b0aae2c03" translate="yes" xml:space="preserve">
          <source>Special features</source>
          <target state="translated">特殊功能</target>
        </trans-unit>
        <trans-unit id="04cd7e5008cd273d52b314962fc93af90962443e" translate="yes" xml:space="preserve">
          <source>Specifying targets instead of amount tells Finac to calculate transaction
amount by itself.</source>
          <target state="translated">指定目标而不是金额时,Finac会自行计算交易金额。</target>
        </trans-unit>
        <trans-unit id="12d6431bb48e25868633cc1c0a8ca7d97585fb58" translate="yes" xml:space="preserve">
          <source>Starting from 0.4, Finac uses DateTime columns for:</source>
          <target state="translated">从0.4开始,Finac使用DateTime列进行。</target>
        </trans-unit>
        <trans-unit id="d35260a00f655f27edcc35a7eb16da44a4f671a6" translate="yes" xml:space="preserve">
          <source>Targets</source>
          <target state="translated">目标</target>
        </trans-unit>
        <trans-unit id="09f8f33671784d283159bc6680ac0c0a20be1475" translate="yes" xml:space="preserve">
          <source>Targets is a feature I wrote Finac for. You have account balances in bank and
in accounting. They differ by some amount and you are going to record this with
a single transaction.</source>
          <target state="translated">目标是我写的Finac的一个功能。你在银行和会计中都有账户余额。它们之间有一定的差异,而你要用一笔交易来记录这些差异。</target>
        </trans-unit>
        <trans-unit id="6cea15b0a09fb20c7ed3e8a007b34dabb9042d7f" translate="yes" xml:space="preserve">
          <source>The transaction amount is automatically calculated. Lazy people are happy :)</source>
          <target state="translated">交易金额自动计算。懒人是幸福的:)</target>
        </trans-unit>
        <trans-unit id="06b3f2ab488c785b43619aa68ab4f08a26739472" translate="yes" xml:space="preserve">
          <source>Transaction templates</source>
          <target state="translated">交易模板</target>
        </trans-unit>
        <trans-unit id="09a741a781a67c9bc811c4a9c246128e2cc471d8" translate="yes" xml:space="preserve">
          <source>Transactions can be simple (no counterparty) or classic double-entry
bookkeeping (between debit and credit account)</source>
          <target state="translated">交易可以是简单的(没有交易对手),也可以是经典的复式记账(借记账户和贷记账户之间)</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">更新</target>
        </trans-unit>
        <trans-unit id="39a2132a809569ad32e1370c0c12059d1c3be9d7" translate="yes" xml:space="preserve">
          <source>Want to integrate Finac into your enterprise app or service? Need a support?
Check &lt;a href=&quot;https://www.altertech.com/products/fes/&quot;&gt;Finac Enterprise Server&lt;/a&gt;.</source>
          <target state="translated">要将Finac集成到您的企业应用程序或服务中吗？需要支持吗？检查&lt;a href=&quot;https://www.altertech.com/products/fes/&quot;&gt;Finac Enterprise Server&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc5235deeb21f5bfd3df4fbffab30cec89215127" translate="yes" xml:space="preserve">
          <source>You can use Finac either in interactive mode with
&lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt;, &lt;a href=&quot;https://www.spyder-ide.org/&quot;&gt;Spyder-IDE&lt;/a&gt;,
ipython or other similar environment or embed Finac library into own projects.
The library may be used in accounting applications as well it's useful for the
fin-tech services.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt;，&lt;a href=&quot;https://www.spyder-ide.org/&quot;&gt;Spyder-IDE&lt;/a&gt;，ipython或其他类似环境的交互模式下使用 Finac，也可以将Finac库嵌入到自己的项目中。该库也可以用于会计应用程序，并且对于金融科技服务很有用。</target>
        </trans-unit>
        <trans-unit id="183e231219675ca0833418d845d44aaf7d82a5ff" translate="yes" xml:space="preserve">
          <source>asset_rate.d</source>
          <target state="translated">资产率.d</target>
        </trans-unit>
        <trans-unit id="ab47d67959a33e65c2c9721ae431e02d706920a2" translate="yes" xml:space="preserve">
          <source>from 0.3.x</source>
          <target state="translated">从0.3.x开始</target>
        </trans-unit>
        <trans-unit id="ca91f16ab04848742fde8a9e99e88af81c07411d" translate="yes" xml:space="preserve">
          <source>from 0.4.10</source>
          <target state="translated">从0.4.10开始</target>
        </trans-unit>
        <trans-unit id="5d0b916b9c153bf0cad0e3641584fadef39fed58" translate="yes" xml:space="preserve">
          <source>hoorah, account acc5 got 100 EUR! And exchange rate was 1.1. Let's check:</source>
          <target state="translated">万岁,acc5账户得到了100欧元! 汇率是1.1 我们来看看</target>
        </trans-unit>
        <trans-unit id="ff00a244382306ab8f9421298471f21b135269ef" translate="yes" xml:space="preserve">
          <source>then create a cron job which calls &lt;em&gt;f.transaction_apply(&quot;/path/to/file.yml&quot;)&lt;/em&gt;
and that's it.</source>
          <target state="translated">然后创建一个cron作业，调用&lt;em&gt;f.transaction_apply（&amp;ldquo; / path / to / file.yml&amp;rdquo;）&lt;/em&gt; 就是这样。</target>
        </trans-unit>
        <trans-unit id="1e1875984cbf3816ef60f114e69b41b65d6e0b15" translate="yes" xml:space="preserve">
          <source>transact.d</source>
          <target state="translated">交易.d</target>
        </trans-unit>
        <trans-unit id="417fc82b269ac2c57985772cd332e9cac7030fd8" translate="yes" xml:space="preserve">
          <source>transact.d_created</source>
          <target state="translated">事务处理.d_created</target>
        </trans-unit>
        <trans-unit id="e75f77cc451ea89cd6128ef6d42c84fe3d169423" translate="yes" xml:space="preserve">
          <source>transact.deleted</source>
          <target state="translated">刪除</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
