<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/eyefi/">
    <body>
      <group id="eyefi">
        <trans-unit id="475144e4e531f3a6ea02c1638f44db7ef05db5be" translate="yes" xml:space="preserve">
          <source>After associating with one of the configured wireless networks,
the card authenticates a session with the server. The shared
secret needs to be obtained from the settings of the Win/OSX
application. The server can cope with multiple cards that are
identified by their MAC address. After authentication, the card
pushes the images that have not yet been posted to the server.
The server unpacks the tarred bundle (optionally in a directory
per MAC address). It then resolves the wireless networks that were
logged by the card at the time the picture was taken into a
geolocation using the Google API. The geolocation data is stored
in an XMP sidecar. Finally, you can trigger your own scripts
on complete upload, extraction and tagging.</source>
          <target state="translated">設定された無線ネットワークの1つに関連付けると、カードはサーバーとのセッションを認証します。共有秘密は、Win/OSXアプリケーションの設定から取得する必要があります。サーバーは、MACアドレスによって識別される複数のカードに対処することができます。認証後、カードはまだ投稿されていない画像をサーバにプッシュします。サーバは、タール化されたバンドルを解凍します(オプションでMACアドレスごとのディレクトリに)。次に、画像が撮影された時にカードによって記録された無線ネットワークを、Google APIを使用してジオロケーションに解決します。ジオロケーションデータはXMPサイドカーに保存されます。最後に、完全なアップロード、抽出、タグ付けの際に独自のスクリプトをトリガーすることができます。</target>
        </trans-unit>
        <trans-unit id="569494533c94be55518941d5feffa05b921bf327" translate="yes" xml:space="preserve">
          <source>EyeFi Server Framework</source>
          <target state="translated">EyeFiサーバーフレームワーク</target>
        </trans-unit>
        <trans-unit id="2e965268fb0c93a28147b6d204ef615267153d61" translate="yes" xml:space="preserve">
          <source>The EyeFi cards include both some 2-8GB of SDHC storage and an</source>
          <target state="translated">EyeFiカードには、2~8GBのSDHCストレージと</target>
        </trans-unit>
        <trans-unit id="344b637c52822d1fd473e292725930fb5a54aaf1" translate="yes" xml:space="preserve">
          <source>embedded microprocessor with WiFi (802.11bgn) that can upload
images as soon as they have been captured. While the software
bundled with the cards is closed and Win/OSX only, the protocol
is decently clean SOAP (like XML RPC via HTTP) and can be
implemented with twisted and soappy.</source>
          <target state="translated">WiFi(802.11bgn)を搭載したマイクロプロセッサを内蔵しており、キャプチャしたらすぐに画像をアップロードすることができます。カードにバンドルされているソフトウェアはクローズドでWin/OSXのみだが、プロトコルはまともにクリーンなSOAP(HTTP経由のXML RPCのようなもの)で、ひねくれたSoappyを実装することができる。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
