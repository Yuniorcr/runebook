<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/betacode/">
    <body>
      <group id="betacode">
        <trans-unit id="b3cd195562e841820415716910df47b2007b260d" translate="yes" xml:space="preserve">
          <source>Betacode to Unicode converter.</source>
          <target state="translated">BetacodeからUnicodeへの変換。</target>
        </trans-unit>
        <trans-unit id="edb1a6ec033b43b4f12fa32ef48e7f7bdc25b2bd" translate="yes" xml:space="preserve">
          <source>Betacode to unicode</source>
          <target state="translated">ベータコードからユニコードへ</target>
        </trans-unit>
        <trans-unit id="d3e35f5e5ada536b2f1e73f7253568fbe387ecbf" translate="yes" xml:space="preserve">
          <source>Conversion can also be made more strict by using the</source>
          <target state="translated">また、変換をより厳密にするために</target>
        </trans-unit>
        <trans-unit id="1cf79be5352210b263ba6b50eb109f80d1fa447b" translate="yes" xml:space="preserve">
          <source>Convert betacode to unicode and vice-versa easily. Tested on python 3.4,
3.5, and 3.6. The definition used is based off what is found at the &lt;a href=&quot;http://www.tlg.uci.edu/encoding/BCM.pdf&quot;&gt;TLG
Beta Code Manual&lt;/a&gt;. Only the
Greek sections were paid attention to.</source>
          <target state="translated">ベータコードをユニコードに、またはその逆を簡単に変換します。Python 3.4、3.5、および3.6でテスト済み。使用されている定義は、&lt;a href=&quot;http://www.tlg.uci.edu/encoding/BCM.pdf&quot;&gt;TLG Beta Code Manualにある&lt;/a&gt;ものに基づいています。ギリシャのセクションだけが注目されました。</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">開発の様子</target>
        </trans-unit>
        <trans-unit id="4f9d1ffdef409da197526ac8e0a70ed4114b38c3" translate="yes" xml:space="preserve">
          <source>I am no classicist, and this was done in my free time. It is very
possible that there are some letters missing that are not accounted for,
or some punctuation that is not properly handled. If that is the case,
please tell me as it is easy to fix, or please open a PR for your own
branch. Write tests if you do add a feature.</source>
          <target state="translated">私は古典派ではないので、これは暇な時にやったものです。説明不足の文字があったり、句読点が適切に処理されていなかったりする可能性が非常に高いです。その場合は簡単に直せるので教えていただくか、自分のブランチのPRを開いてください。機能追加する場合はテストを書いてください。</target>
        </trans-unit>
        <trans-unit id="ee8b9d84394671720e5520119b9003f25d6b2e61" translate="yes" xml:space="preserve">
          <source>I was working a classics research project and had to use the Perseus
catalog to extract some Greek work. Much to my surprise however, the
only download I could find was a betacode version. An encoding that is
over 30 years old, rather than modern, fancy, clean unicode. There was
no nice pip package that I could easily go to for this simple task, so I
decided to roll my own.</source>
          <target state="translated">私は古典の研究プロジェクトに取り組んでいて、ペルセウスのカタログを使ってギリシャ語の作品を抽出しなければなりませんでした。驚いたことに、私が見つけることができた唯一のダウンロードはベータコード版でした。30年以上も前のエンコーディングで、現代的でファンシーでクリーンなユニコードではありません。この単純な作業のために簡単に行けるような素敵なpipパッケージがなかったので、私は自分でロールバックすることにしました。</target>
        </trans-unit>
        <trans-unit id="f9e472db28ec4512052e2be84d83ba7247a0d307" translate="yes" xml:space="preserve">
          <source>If set, only the cannonical order of diacritics is accepted in betacode.
If it is not set, then any order is allowed as long as capital letters
begin with a</source>
          <target state="translated">この値が設定されている場合、betacritics の標準的な順序のみが許容されます。もし設定されていなければ、大文字の先頭が</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="bc10c1ba9c65203d7efd65666e78a5bc0108d0ff" translate="yes" xml:space="preserve">
          <source>Installation is easy. Use</source>
          <target state="translated">設置は簡単です。使用する</target>
        </trans-unit>
        <trans-unit id="7dde410acbf56b51ab56a3843576b376cac25eb3" translate="yes" xml:space="preserve">
          <source>Modified Betacode</source>
          <target state="translated">変更されたベータコード</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">モチベーション</target>
        </trans-unit>
        <trans-unit id="0f593d9187fbb07ef3caf4a052f9be2176f390e1" translate="yes" xml:space="preserve">
          <source>Note that in all examples, strings are unicode encoded. Input can be in
upper or lower case. The official definition from TLG uses only
uppercase, but many resources, such as the Perseus catalog, are encoded
in lowercase, so this package accepts both. This package also can
disregard the unnecessary cannonical order of Greek diacritics from the
official definition. The only thing that matters in order for the
betacode to be unambiguous is that each unit must either begin with a</source>
          <target state="translated">すべての例で、文字列はユニコードでエンコードされていることに注意してください。入力は大文字でも小文字でも構いません。TLGの公式定義では大文字のみを使用していますが、Perseusカタログのような多くのリソースは小文字でエンコードされているので、本パッケージは両方を受け入れます。また、本パッケージは、公式定義にあるギリシャ語の不要なキャノニカルな発音順を無視することもできます。ベータコードが曖昧でないようにするために重要なことは、各ユニットが</target>
        </trans-unit>
        <trans-unit id="67d62af798a1335a54b51ef43d2356592fb7e949" translate="yes" xml:space="preserve">
          <source>Note that polytonic accent marks will be used, and not monotonic accent
marks. Both are de jure equivalent in Greece, but betacode was initially
developed to encode classic works so the polytonic diacritics are more
fitting. In other words, the oxe&amp;icirc;a will be used rather than t&amp;oacute;nos. The
oxe&amp;icirc;a form can be converted to the modern accent form easily either
through search and replace, or unicode normalization since oxe&amp;icirc;a has
canonical decomposition into t&amp;oacute;nos.</source>
          <target state="translated">単調なアクセント記号ではなく、多調的なアクセント記号が使用されることに注意してください。どちらもギリシャでは法的に同等ですが、betacodeは当初、古典的な作品をエンコードするために開発されたため、多調性発音区別符号がより適切です。言い換えれば、トノスではなくオキセアが使用されます。oxe&amp;icirc;aフォームは、検索と置換、またはユニコード正規化のいずれかを使用して、モダンなアクセント形に簡単に変換できます。</target>
        </trans-unit>
        <trans-unit id="2d2cb022bc3d26bd1407c4aa787d5e46e1ad4c3b" translate="yes" xml:space="preserve">
          <source>Speed</source>
          <target state="translated">スピード</target>
        </trans-unit>
        <trans-unit id="52625f21204b45641f1dede98d37a7a2c6f80aed" translate="yes" xml:space="preserve">
          <source>The original implementation used a custom made trie. This maybe was not
the fastest (I wasn&amp;rsquo;t sure). So, I compared against a third party trie
implementation, pygtrie. The pygtrie had nicer prefix methods which
allowed for much faster processing of large texts. This changed
converting all of Strabo or Herodotus in the Perseus catalog from a many
minute operation to a ~3-4 second operation. I have seen implementations
that use regular expressions which I suspsect might be faster since the
underlying implementation is in C. However, this package is much smaller
and simpler if betacode conversion is all that is needed than CLTK, for
example.</source>
          <target state="translated">オリジナルの実装では、カスタムトライを使用していました。これはおそらく最速ではありませんでした（確信が持てませんでした）。それで、私はサードパーティのトライ実装であるpygtrieと比較しました。 pygtrieにはより大きなプレフィックスメソッドがあり、大きなテキストの処理がはるかに高速になりました。これにより、Perseusカタログ内のすべてのStraboまたはHerodotusが、数分の操作から約3〜4秒の操作に変換されました。正規表現を使用する実装は、基礎となる実装がC言語であるため高速である可能性があります。ただし、CLTKよりもベータコード変換が必要な場合は、このパッケージははるかに小さく簡単です。</target>
        </trans-unit>
        <trans-unit id="e8d98e50a75680c2e1adf0e170c3b5e5fcf8fee1" translate="yes" xml:space="preserve">
          <source>The unicode text can use polytonic (oxe&amp;icirc;a) accent marks or monotonic
(t&amp;oacute;nos) accent marks can be used.</source>
          <target state="translated">ユニコードテキストでは、ポリトニック（oxe&amp;icirc;a）アクセントマークまたはモノトニック（tonos）アクセントマークを使用できます。</target>
        </trans-unit>
        <trans-unit id="8b5a218d6b551b88be739168aea5a263dc3fbe58" translate="yes" xml:space="preserve">
          <source>There is talk of a modified betacode that I have seen around on the
internet. I have never been able to find a definitive definition of this
so I have not implemented it. Among some differences is word final sigma
usage,</source>
          <target state="translated">ネット上で見たことのあるベタコードを修正したものが話題になっています。私はこれの明確な定義を見つけることができなかったので、実装していません。いくつかの違いの中には、ファイナルシグマという言葉の使い方があります。</target>
        </trans-unit>
        <trans-unit id="07aaf7420220a5eba14fd597cf4cea0bd5420e99" translate="yes" xml:space="preserve">
          <source>Unicode to betacode</source>
          <target state="translated">ユニコードからベタコードへ</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="ae29b0081f3239bf52354c8f8b1fcf561680179e" translate="yes" xml:space="preserve">
          <source>and lowercase letters begin with the letter and not a
diacritic.</source>
          <target state="translated">と小文字は文字で始まり、ダイアクリットではありません。</target>
        </trans-unit>
        <trans-unit id="6f5f934cc78e6e5896946aeb30957705e6f177be" translate="yes" xml:space="preserve">
          <source>as macron, and uppercase and lowercase roman letters
instead of using</source>
          <target state="translated">を macron とし、大文字と小文字のローマ字の代わりに</target>
        </trans-unit>
        <trans-unit id="a3e0b42d1b53e2bf0933e6f8de49d79f46e44cf6" translate="yes" xml:space="preserve">
          <source>betacode</source>
          <target state="translated">ベータコード</target>
        </trans-unit>
        <trans-unit id="964992a57d111bb0865d708e942f8599f79c480d" translate="yes" xml:space="preserve">
          <source>flag.</source>
          <target state="translated">フラグを表示しています。</target>
        </trans-unit>
        <trans-unit id="dbc2295bf00cdf626f678a9ac7252675cfacfb76" translate="yes" xml:space="preserve">
          <source>or a letter. As long as these constraints are followed, breathing
marks, accents, and such can go in any order. However, the cannonical
order will be returned when going from unicode to betacode. Also note
that currently, only individual, non-combining characters are handled.
This means that you cannot do all combinations of letters and
diacritics. Only those defined as composite characters in the Greek and
Extended Greek sections of unicode.</source>
          <target state="translated">または文字です。これらの制約に従う限り、ブリージングマークやアクセントなどはどのような順序であっても構いません。しかし、unicodeからbetacodeに移行する際には、キャノニカルな順序が返されます。また、現在のところ、個々の非結合文字のみが扱われていることにも注意してください。これは、文字やダイアクリティックのすべての組み合わせを扱うことができないことを意味しています。unicodeのギリシャ語と拡張ギリシャ語のセクションで複合文字として定義されているものだけが扱われます。</target>
        </trans-unit>
        <trans-unit id="2efa14a5fe81ce30b9830d1f03de2c01ee1b8319" translate="yes" xml:space="preserve">
          <source>or your preferred method to download
from PyPI.</source>
          <target state="translated">または、PyPI からダウンロードする方法を選択してください。</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">ピップ</target>
        </trans-unit>
        <trans-unit id="41eaab877ca3a0e3aa14f5a4b7981f590e3c2bd6" translate="yes" xml:space="preserve">
          <source>strict</source>
          <target state="translated">厳し目</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
