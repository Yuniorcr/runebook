<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/audioconverter/">
    <body>
      <group id="audioconverter">
        <trans-unit id="92939daab980ec4da251d31641c4a7cc9b0ba795" translate="yes" xml:space="preserve">
          <source>.aiff</source>
          <target state="translated">.aiff</target>
        </trans-unit>
        <trans-unit id="efc425468bd02a1829732639503062d37e09642a" translate="yes" xml:space="preserve">
          <source>.flac</source>
          <target state="translated">.flac</target>
        </trans-unit>
        <trans-unit id="a1680124621c5adda0066d259ad41ce6b5a2d08a" translate="yes" xml:space="preserve">
          <source>.m4a</source>
          <target state="translated">.m4a</target>
        </trans-unit>
        <trans-unit id="12beb598feedaf30399d20e07f7fbfd2273efcad" translate="yes" xml:space="preserve">
          <source>.mp3</source>
          <target state="translated">.mp3</target>
        </trans-unit>
        <trans-unit id="2bf5d215f67675901a33dbf902e7fc75e8e74861" translate="yes" xml:space="preserve">
          <source>.mp4</source>
          <target state="translated">.mp4</target>
        </trans-unit>
        <trans-unit id="119f601d625e6d42dd015e36d0fd13e76a0d0a94" translate="yes" xml:space="preserve">
          <source>A simple CLI to convert a directory of audio files from  one format
to another. This CLI sits ontop of &lt;code&gt;pydub&lt;/code&gt; and &lt;code&gt;ffmpeg&lt;/code&gt;</source>
          <target state="translated">オーディオファイルのディレクトリをある形式から別の形式に変換するシンプルなCLI。このCLIは &lt;code&gt;pydub&lt;/code&gt; と &lt;code&gt;ffmpeg&lt;/code&gt; の上にあります</target>
        </trans-unit>
        <trans-unit id="85876b4b4b4949735b592748a57c87a3bcf9e123" translate="yes" xml:space="preserve">
          <source>Accepted Formats</source>
          <target state="translated">受け入れられたフォーマット</target>
        </trans-unit>
        <trans-unit id="d8931cf16ae5d4c8c4f7fdd1a3b9066e590ba0dd" translate="yes" xml:space="preserve">
          <source>Audio Converter CLI</source>
          <target state="translated">オーディオコンバータCLI</target>
        </trans-unit>
        <trans-unit id="fa3aa15326e2be84191893b4292d8bdee8f56628" translate="yes" xml:space="preserve">
          <source>AudioConverter</source>
          <target state="translated">オーディオコンバータ</target>
        </trans-unit>
        <trans-unit id="789aca07cb59366dcdfc7805d65bb9bd1ddac0a6" translate="yes" xml:space="preserve">
          <source>Due to not being super savvy with audio formats, I hard coded the extensions
that are searched for in the &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; and acceptable &lt;code&gt;TARGET_FORMAT&lt;/code&gt;.
Here is a list of formats I thought were popular:</source>
          <target state="translated">オーディオ形式に精通していないため、 &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; および許容可能な &lt;code&gt;TARGET_FORMAT&lt;/code&gt; で検索される拡張機能をハードコーディングしました。ここに私が人気があると思ったフォーマットのリストがあります：</target>
        </trans-unit>
        <trans-unit id="17a348350e5741060773463325d7810ac70c1916" translate="yes" xml:space="preserve">
          <source>Go follow the &lt;code&gt;pydub&lt;/code&gt;&lt;a href=&quot;https://github.com/jiaaro/pydub#getting-ffmpeg-set-up&quot;&gt;tutorial&lt;/a&gt;
on how to set up &lt;code&gt;ffmpeg&lt;/code&gt; on the various platforms.</source>
          <target state="translated">さまざまなプラットフォームで &lt;code&gt;ffmpeg&lt;/code&gt; を設定する方法について、 &lt;code&gt;pydub&lt;/code&gt; &lt;a href=&quot;https://github.com/jiaaro/pydub#getting-ffmpeg-set-up&quot;&gt;チュートリアル&lt;/a&gt;に従ってください。</target>
        </trans-unit>
        <trans-unit id="9ae0cc663fdc94d4da5324ac97f587c697267d4a" translate="yes" xml:space="preserve">
          <source>I have some old music in a lossless format. Now that I am constantly
jumping between computers, I wanted it to be converted in
a more universal format such as &lt;code&gt;mp3&lt;/code&gt; so that I can play it with
the simplest of players. I also wanted to avoid having
to stream my music on cloud platforms. Upon a cursory and naive scan
on the web, I found that existing scripts are defunct (again cursory)
or was not as simple as I would like it to be. I did not want to download
a GUI for a one time use or upload a directory of music online to have it
be converted on some server and download it again either. Instead, I wrote
this quick CLI to do it for me.</source>
          <target state="translated">古い音楽をロスレス形式で持っています。私は常にコンピューター間を行き来しているので、最も単純なプレーヤーで再生できるように、 &lt;code&gt;mp3&lt;/code&gt; などのより汎用的な形式に変換したいと考えていました。また、クラウドプラットフォームで音楽をストリーミングする必要がないようにしたいと思っていました。Web上でざっくばらしく素朴なスキャンを行ったところ、既存のスクリプトが機能しなくなっている（これもまたざっくりしている）か、希望するほど単純ではないことがわかりました。GUIを一度だけダウンロードしたり、音楽のディレクトリをオンラインでアップロードして、サーバーで変換して再度ダウンロードしたりしたくありませんでした。代わりに、私はそれを行うためにこのクイックCLIを作成しました。</target>
        </trans-unit>
        <trans-unit id="e6764ce487d3644f2ba99cc1fdd6b3cc3c507c9a" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;ffmpeg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ffmpeg&lt;/code&gt; をインストールする</target>
        </trans-unit>
        <trans-unit id="0ee131360f441177e6dc4022daeae695138d96aa" translate="yes" xml:space="preserve">
          <source>Install CLI</source>
          <target state="translated">CLIのインストール</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">モチベーション</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">セットアップ</target>
        </trans-unit>
        <trans-unit id="be703af06dd0bcd12685f8dc11d3f78f4a961a30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--verbose/-v&lt;/code&gt; flag must be provided before the &lt;code&gt;convert&lt;/code&gt; command. This
will enable debugging logs and allow you to monitor progress.</source>
          <target state="translated">&lt;code&gt;--verbose/-v&lt;/code&gt; フラグが前に提供されなければならない &lt;code&gt;convert&lt;/code&gt; コマンド。これにより、デバッグログが有効になり、進行状況を監視できます。</target>
        </trans-unit>
        <trans-unit id="d06ffde176be81f4cf66de856d135a385a1c54c9" translate="yes" xml:space="preserve">
          <source>This will recursively search the &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; for files with music
extensions. Each file found will then be converted to the &lt;code&gt;TARGET_FORMAT&lt;/code&gt; and
placed in the &lt;code&gt;OUTPUT_DIRECTORY&lt;/code&gt; with the same name but updated extension.</source>
          <target state="translated">これにより、 &lt;code&gt;INPUT_DIRECTORY&lt;/code&gt; で音楽拡張子のあるファイルが再帰的に検索されます。見つかった各ファイルは &lt;code&gt;TARGET_FORMAT&lt;/code&gt; に変換され、同じ名前で &lt;code&gt;OUTPUT_DIRECTORY&lt;/code&gt; に配置されますが、拡張子は更新されます。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
