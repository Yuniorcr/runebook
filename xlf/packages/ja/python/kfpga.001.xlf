<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/kfpga/">
    <body>
      <group id="kfpga">
        <trans-unit id="435aa76754de723adae0226652151952dc6712c8" translate="yes" xml:space="preserve">
          <source>An open source FPGA</source>
          <target state="translated">オープンソースFPGA</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">建築</target>
        </trans-unit>
        <trans-unit id="2b32d07147e57a1c2cbd7fcb616c00c66fa73aa7" translate="yes" xml:space="preserve">
          <source>Creating a new kFPGA core</source>
          <target state="translated">新しいkFPGAコアの作成</target>
        </trans-unit>
        <trans-unit id="b1d6efc3f8f3bafaff39e673c30bf3b5601b5b8a" translate="yes" xml:space="preserve">
          <source>Currently, the architecture of kFPGA core is very simple: only LUTs and interconnect. The following functionalities are planned:</source>
          <target state="translated">現在のところ、kFPGAコアのアーキテクチャは非常にシンプルで、LUTと相互接続のみです。以下の機能が予定されています。</target>
        </trans-unit>
        <trans-unit id="4af150d4408b99edac09b0c3b852b0b01a8b4845" translate="yes" xml:space="preserve">
          <source>DSP&amp;nbsp;blocks</source>
          <target state="translated">DSPブロック</target>
        </trans-unit>
        <trans-unit id="6e6418d395e6e5fcafcc7d6b9014fa5e17259710" translate="yes" xml:space="preserve">
          <source>First, create the kFPGA core</source>
          <target state="translated">まず、kFPGAコアを作成します。</target>
        </trans-unit>
        <trans-unit id="d600deecd9fabec09865ba5fbee27a4731d8713b" translate="yes" xml:space="preserve">
          <source>From source</source>
          <target state="translated">ソースから</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">実施の様子</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="d1a946bf8b2f2a7292c250063ee28989d742cd4b" translate="yes" xml:space="preserve">
          <source>Programming</source>
          <target state="translated">プログラミング</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="f0642b94da6369a8e73a42954a63105dcb8a8d88" translate="yes" xml:space="preserve">
          <source>Then, you can generate the RTL of the core like this</source>
          <target state="translated">そして、以下のようにコアのRTLを生成します。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="649c2d8428bd5b3ad98036eaf08c1e003e5f2fee" translate="yes" xml:space="preserve">
          <source>Using pip</source>
          <target state="translated">ピップの使用</target>
        </trans-unit>
        <trans-unit id="f8238669b956fa19dccab064503df843a0c1a13e" translate="yes" xml:space="preserve">
          <source>carry chain</source>
          <target state="translated">キャリーチェーン</target>
        </trans-unit>
        <trans-unit id="225315dbd1d02292743e94a3e191459c061c59ad" translate="yes" xml:space="preserve">
          <source>kFPGA</source>
          <target state="translated">kFPGA</target>
        </trans-unit>
        <trans-unit id="be51a8b5b5ebc145704b33ff3a905631fd0d1fb3" translate="yes" xml:space="preserve">
          <source>kFPGA cores are programmed with the &lt;code&gt;kfpga-programmer&lt;/code&gt; command</source>
          <target state="translated">kFPGAコアは &lt;code&gt;kfpga-programmer&lt;/code&gt; コマンドでプログラムされます</target>
        </trans-unit>
        <trans-unit id="6b19764d9af642f227ef41b7cc30edb256acaf73" translate="yes" xml:space="preserve">
          <source>kFPGA cores can be implemented on FPGA for testing purpose, as an ASIC or integrated in a SoC.</source>
          <target state="translated">kFPGAコアは、テスト目的でFPGA上に実装したり、ASICとして実装したり、SoCに組み込んだりすることができます。</target>
        </trans-unit>
        <trans-unit id="fb9d040b916b26aa66718f8e3eca636dc7d35c64" translate="yes" xml:space="preserve">
          <source>kFPGA is an opensource platform for creating and programming FPGA cores.</source>
          <target state="translated">kFPGAは、FPGAコアを作成してプログラミングするためのオープンソースのプラットフォームです。</target>
        </trans-unit>
        <trans-unit id="bef3ebd0a2aa697141daabbe1da2970aba0ab9a8" translate="yes" xml:space="preserve">
          <source>memory blocks</source>
          <target state="translated">メモリブロック</target>
        </trans-unit>
        <trans-unit id="44e5caf28e2a71bee355f9d2606d8791e47b0bfc" translate="yes" xml:space="preserve">
          <source>support for generated clock, set, reset and enable signals</source>
          <target state="translated">生成されたクロック、セット、リセット、イネーブル信号をサポート</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
