<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/cobras/">
    <body>
      <group id="cobras">
        <trans-unit id="39c3694020422be690a8542138c584a3f21e3226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;, the swiss army knife of the internet which provide a very scalable publish/subscribe feature to dispatch messages while retaining them and allowing lookups of old messages (see [Redis Streams] (&lt;a href=&quot;https://redis.io/topics/streams-intro&quot;&gt;https://redis.io/topics/streams-intro&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;は、インターネットのスイスアーミーナイフであり、非常にスケーラブルなパブリッシュ/サブスクライブ機能を提供して、メッセージを保持しながら古いメッセージのルックアップを可能にします（[Redis Streams]（&lt;a href=&quot;https://redis.io/topics/streams-intro&quot;&gt;https://redis.io/topics/streams-intro&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6592b40b27231327f8b41e94aa3b6968d3f7ced3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; (and &lt;a href=&quot;https://realpython.com/async-io-python/&quot;&gt;asyncio&lt;/a&gt;, one of the killer python3 feature !)</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;（そして、&lt;a href=&quot;https://realpython.com/async-io-python/&quot;&gt;強力な&lt;/a&gt; python3機能の1つであるasyncio！）</target>
        </trans-unit>
        <trans-unit id="b89530f0321777545730c6b895736f7e61ff5050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cobras init&lt;/code&gt; needs to be run once to generate an app configuration file, in &lt;code&gt;~/.cobra.yaml&lt;/code&gt;. That file contains all the roles, secrets and apps configured. Clients will use this data to authenticate.</source>
          <target state="translated">&lt;code&gt;cobras init&lt;/code&gt; &lt;code&gt;~/.cobra.yaml&lt;/code&gt; アプリ構成ファイルを生成するには、cobras initを1回実行する必要があります。そのファイルには、構成されているすべての役割、シークレット、およびアプリが含まれています。クライアントはこのデータを使用して認証します。</target>
        </trans-unit>
        <trans-unit id="c69296765a3c29b1646eab98c99f526d4f19571c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bavarde&lt;/em&gt; is a chat client that runs against the public cobra server. Bring up 2 terminals, runs the 2 commands below and start typing.</source>
          <target state="translated">&lt;em&gt;bavarde&lt;/em&gt;は、パブリックコブラサーバーに対して実行されるチャットクライアントです。2つの端末を起動し、以下の2つのコマンドを実行して入力を開始します。</target>
        </trans-unit>
        <trans-unit id="1fae5c2bd318c72cede3e832a6d9a32efc06256f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;publish&lt;/em&gt;: send data to a channel, which will be broadcasted to anyone subscribed to that channel</source>
          <target state="translated">&lt;em&gt;publish&lt;/em&gt;：データをチャネルに送信します。チャネルは、そのチャネルにサブスクライブしているすべてのユーザーにブロードキャストされます</target>
        </trans-unit>
        <trans-unit id="78afe8855622e37067ad27e8cb7a5adb89cc239c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;read&lt;/em&gt;: retrieve data</source>
          <target state="translated">&lt;em&gt;読み取り&lt;/em&gt;：データを取得する</target>
        </trans-unit>
        <trans-unit id="d586f14b95ac8e9424f7f7aedd1c8e544391b4e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;subscribe&lt;/em&gt;: receive events sent to a channel in real time.</source>
          <target state="translated">&lt;em&gt;subscribe&lt;/em&gt;：チャンネルに送信されたイベントをリアルタイムで受信します。</target>
        </trans-unit>
        <trans-unit id="24dc2247609ea3fec313ba785084b0b1906d6b63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;write&lt;/em&gt;: record some data (addressed by a key)</source>
          <target state="translated">&lt;em&gt;書き込み&lt;/em&gt;：いくつかのデータを記録します（キーでアドレス指定されます）</target>
        </trans-unit>
        <trans-unit id="59fcad1df4eee9a7a741ded26cf1fc0f5a6bf51b" translate="yes" xml:space="preserve">
          <source>A realtime messaging server using WebSockets and Redis.</source>
          <target state="translated">WebSocketsとRedisを使ったリアルタイムメッセージングサーバ。</target>
        </trans-unit>
        <trans-unit id="cb53a0afb968f47d43997b86a88d99dc8c4b3511" translate="yes" xml:space="preserve">
          <source>Clone this repo first, then:</source>
          <target state="translated">まずこのレポをクローンしてから</target>
        </trans-unit>
        <trans-unit id="1182390de09a02771262fa86c317d44e77a73b9e" translate="yes" xml:space="preserve">
          <source>Cobra has been used in production receiving heavy traffic for about a year. Since it was written in Python it was named after a snake as an hommage to a great programming language.</source>
          <target state="translated">Cobraは1年ほど前から激しいトラフィックを受けて本番で使われています。Pythonで書かれているので、偉大なプログラミング言語へのオマージュとして蛇にちなんで名付けられました。</target>
        </trans-unit>
        <trans-unit id="90761019408a4260102aacb15e279389929a97aa" translate="yes" xml:space="preserve">
          <source>Cobra is a realtime messaging server using Python3, WebSockets and Redis Streams. It was presented in great details during &lt;a href=&quot;https://events.redislabs.com/redis-conf/redis-conf-2019/&quot;&gt;RedisConf 2019&lt;/a&gt;. Since then we've added history support which let cobra retain messages published to a channel that no-one is subscribed to. This makes it easier to blow up your systems through &lt;a href=&quot;https://en.wikipedia.org/wiki/Out_of_memory&quot;&gt;OOMs&lt;/a&gt; and fill your hard drives, but it makes cobra much more useful.</source>
          <target state="translated">Cobraは、Python3、WebSockets、Redis Streamsを使用したリアルタイムメッセージングサーバーです。これは、&lt;a href=&quot;https://events.redislabs.com/redis-conf/redis-conf-2019/&quot;&gt;RedisConf 2019&lt;/a&gt;中に詳細に発表されました。それ以来、誰も購読していないチャンネルに公開されたメッセージをコブラが保持できるようにする履歴サポートを追加しました。これにより、&lt;a href=&quot;https://en.wikipedia.org/wiki/Out_of_memory&quot;&gt;OOM&lt;/a&gt;を介してシステムを爆破し、ハードドライブをいっぱいにすることが容易になりますが、コブラははるかに便利になります。</target>
        </trans-unit>
        <trans-unit id="9cabedc41fbfb184546373913ae07e9f82c14d34" translate="yes" xml:space="preserve">
          <source>Cobra is actively being developed, check out the &lt;a href=&quot;docs/CHANGELOG.md&quot;&gt;changelog&lt;/a&gt; to know what's cooking.</source>
          <target state="translated">Cobraは活発に開発されています。何が料理されているかを知るために変更&lt;a href=&quot;docs/CHANGELOG.md&quot;&gt;ログ&lt;/a&gt;をチェックしてください。</target>
        </trans-unit>
        <trans-unit id="ba484094df5cf1f17df2d69be94f0203733de311" translate="yes" xml:space="preserve">
          <source>Cobra server and test clients</source>
          <target state="translated">Cobra サーバーとテストクライアント</target>
        </trans-unit>
        <trans-unit id="db4ccf47171ad33eca1932910befc1942493122b" translate="yes" xml:space="preserve">
          <source>For development</source>
          <target state="translated">開発のために</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">一般的な</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="af285be58404b03ae34d7629ec7e2b557e352d63" translate="yes" xml:space="preserve">
          <source>Interested ? Go read the &lt;a href=&quot;https://machinezone.github.io/cobra/&quot;&gt;docs&lt;/a&gt; ! If things don't work as expected, please create an issue in github, or even better a pull request if you know how to fix your problem.</source>
          <target state="translated">興味がある ？&lt;a href=&quot;https://machinezone.github.io/cobra/&quot;&gt;ドキュメントを&lt;/a&gt;読んでください！期待どおりに機能しない場合は、githubで問題を作成するか、問題の修正方法を知っている場合はプルリクエストを作成してください。</target>
        </trans-unit>
        <trans-unit id="34c808d0a63f277e04fb23a5f76cc83d0a3e024b" translate="yes" xml:space="preserve">
          <source>News</source>
          <target state="translated">ニュース</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">ワンライナーとしても</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">セットアップ</target>
        </trans-unit>
        <trans-unit id="6b50e31a7e1337db9ecb0e2fcb6e65ca27f57df5" translate="yes" xml:space="preserve">
          <source>Thank you</source>
          <target state="translated">ありがとうございます</target>
        </trans-unit>
        <trans-unit id="955d9eec0d27a7892eb26b005ff874e8faad661f" translate="yes" xml:space="preserve">
          <source>The python &lt;a href=&quot;https://aioredis.readthedocs.io/en/v1.2.0/&quot;&gt;aioredis&lt;/a&gt; library used to talk to Redis. This &lt;a href=&quot;https://redislabs.com/blog/async-await-programming-basics-python-examples/&quot;&gt;redis labs&lt;/a&gt; article explains some pitfalls with asyncio and how to get the best performance out of it.</source>
          <target state="translated">Redisとの通信に使用されるpython &lt;a href=&quot;https://aioredis.readthedocs.io/en/v1.2.0/&quot;&gt;aioredis&lt;/a&gt;ライブラリ。この&lt;a href=&quot;https://redislabs.com/blog/async-await-programming-basics-python-examples/&quot;&gt;redisラボの&lt;/a&gt;記事では、asyncioのいくつかの落とし穴と、そこから最高のパフォーマンスを引き出す方法について説明します。</target>
        </trans-unit>
        <trans-unit id="effc54da61965812eaf7643cdeafe9466cc4ffd3" translate="yes" xml:space="preserve">
          <source>The python &lt;a href=&quot;https://websockets.readthedocs.io/en/stable/intro.html&quot;&gt;websockets&lt;/a&gt; library, very elegantly implementing the &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;WebSockets&lt;/a&gt; protocol using &lt;strong&gt;asyncio&lt;/strong&gt;.</source>
          <target state="translated">Pythonは&lt;a href=&quot;https://websockets.readthedocs.io/en/stable/intro.html&quot;&gt;WebSocketを&lt;/a&gt;非常にエレガントに実装すると、ライブラリ&lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;のWebSocketの&lt;/a&gt;使用プロトコル&lt;strong&gt;asyncioを&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="900cd8dee99adbd41ca8d6162b555c06bffa82b2" translate="yes" xml:space="preserve">
          <source>There are 4 operations that a client can execute against a cobra server: &lt;em&gt;publish&lt;/em&gt;, &lt;em&gt;subscribe&lt;/em&gt;, &lt;em&gt;read&lt;/em&gt; and &lt;em&gt;write&lt;/em&gt;. &lt;em&gt;publish&lt;/em&gt; and &lt;em&gt;subscribe&lt;/em&gt; are the 2 operations core to a group-chat. &lt;em&gt;read&lt;/em&gt; and &lt;em&gt;write&lt;/em&gt; are the typical operations that key value stores (such as memcached), or a python dictionnary provide.</source>
          <target state="translated">クライアントがcobraサーバーに対して実行できる操作は、&lt;em&gt;発行&lt;/em&gt;、&lt;em&gt;購読&lt;/em&gt;、&lt;em&gt;読み取り&lt;/em&gt;、&lt;em&gt;書き込みの4つ&lt;/em&gt;です。&lt;em&gt;パブリッシュ&lt;/em&gt;と&lt;em&gt;サブスクライブ&lt;/em&gt;は、グループチャットの2つの操作の中核です。&lt;em&gt;読み取り&lt;/em&gt;と&lt;em&gt;書き込み&lt;/em&gt;は、キー値ストア（memcachedなど）またはpython辞書が提供する典型的な操作です。</target>
        </trans-unit>
        <trans-unit id="75a494d1be83f9dff22549a4c86611eea8469b02" translate="yes" xml:space="preserve">
          <source>There would be no cobra without some other amazing open-source projects and tech. Here are 3 very remarkable ones.</source>
          <target state="translated">他の素晴らしいオープンソースのプロジェクトや技術がなければ、コブラは存在しないでしょう。ここでは3つの注目すべきプロジェクトを紹介します。</target>
        </trans-unit>
        <trans-unit id="d75a19cb316f58c1531fa3c9a9175d4ad2f489a4" translate="yes" xml:space="preserve">
          <source>To run in production you will need a redis (version &amp;gt; 5) instance. Here are environment variables that you will likely want to tweak, to connect to 2 redis instances (for scalabity), and to bind on 0.0.0.0 so that the internet can see your instance.</source>
          <target state="translated">本番環境で実行するには、redis（バージョン&amp;gt; 5）インスタンスが必要です。以下は、微調整、2つのredisインスタンス（スケーラビリティー）への接続、および0.0.0.0でのバインドによってインターネットがインスタンスを認識できるようにする環境変数です。</target>
        </trans-unit>
        <trans-unit id="3ce5d747122f6843ed83b85a231589bd1bcc1e20" translate="yes" xml:space="preserve">
          <source>To run the server use &lt;code&gt;cobra run&lt;/code&gt;. You can run a health-check against the server with &lt;code&gt;cobra health&lt;/code&gt;.</source>
          <target state="translated">サーバーを実行するには &lt;code&gt;cobra run&lt;/code&gt; を使用します。 &lt;code&gt;cobra health&lt;/code&gt; を使用して、サーバーに対してヘルスチェックを実行できます。</target>
        </trans-unit>
        <trans-unit id="8f0f4c613b4cd38b9bcde4d4b95fcf651bcedabf" translate="yes" xml:space="preserve">
          <source>UNIX one liner</source>
          <target state="translated">ユニックスワンライナー</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="1ad4a023f317d80464d8d793033fad3ad5351b9b" translate="yes" xml:space="preserve">
          <source>With docker</source>
          <target state="translated">ドッカーで</target>
        </trans-unit>
        <trans-unit id="6c77cfc850a767748619c85b8169ef8382927809" translate="yes" xml:space="preserve">
          <source>With docker-compose</source>
          <target state="translated">docker-composeで</target>
        </trans-unit>
        <trans-unit id="8a5bf487c45be0856219ac26271b4e9b699b9bf4" translate="yes" xml:space="preserve">
          <source>With pip</source>
          <target state="translated">ピップ付き</target>
        </trans-unit>
        <trans-unit id="61b5317b4012394dde56783574a2057f61d29fa2" translate="yes" xml:space="preserve">
          <source>You can see what the install script is doing first &lt;a href=&quot;https://github.com/machinezone/cobra/blob/master/tools/install.sh&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/machinezone/cobra/blob/master/tools/install.sh&quot;&gt;ここで&lt;/a&gt;、インストールスクリプトが最初に実行していることを確認できます。</target>
        </trans-unit>
        <trans-unit id="2f674c86ae36591f009f1187c02817678a5ee083" translate="yes" xml:space="preserve">
          <source>bavarde</source>
          <target state="translated">ババルド</target>
        </trans-unit>
        <trans-unit id="d11ce424081d27fe82877ed86056b9eb7a0f224c" translate="yes" xml:space="preserve">
          <source>slides</source>
          <target state="translated">スライド</target>
        </trans-unit>
        <trans-unit id="d5244a331aad290f924ed5ed8c070d65d2e0633e" translate="yes" xml:space="preserve">
          <source>youtube</source>
          <target state="translated">ユーチューブ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
