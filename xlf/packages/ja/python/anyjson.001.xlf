<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/anyjson/">
    <body>
      <group id="anyjson">
        <trans-unit id="02abcef777bf7dc85f9f0ad2b22d124f5873e82e" translate="yes" xml:space="preserve">
          <source>And deserializing a JSON string with invalid JSON raises a ValueError:</source>
          <target state="translated">また、JSON文字列を無効なJSONでデシリアライズするとValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="3c01f2cf8b95a5fd9b2fb25d6c6a486686ea093b" translate="yes" xml:space="preserve">
          <source>Anyjson loads whichever is the fastest JSON module installed and provides
a uniform API regardless of which JSON implementation is used.</source>
          <target state="translated">AnyjsonはインストールされているJSONモジュールの中で最も速い方をロードし、どのJSON実装が使用されているかに関わらず、統一されたAPIを提供します。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">変更履歴</target>
        </trans-unit>
        <trans-unit id="b37456c4530be810dc040f50da72eda09addfb0a" translate="yes" xml:space="preserve">
          <source>Contact</source>
          <target state="translated">連絡先</target>
        </trans-unit>
        <trans-unit id="e0fe6b749d7c6f2ecc4b0526a8aa18cfddd2e9ea" translate="yes" xml:space="preserve">
          <source>Conversion the other way is done with the</source>
          <target state="translated">他の方法での変換は</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="3bc1734036dc8349431f1700fc3641d746691037" translate="yes" xml:space="preserve">
          <source>Originally part of carrot (&lt;a href=&quot;http://github.com/ask/carrot/&quot;&gt;http://github.com/ask/carrot/&lt;/a&gt;)</source>
          <target state="translated">元々はニンジンの一部（&lt;a href=&quot;http://github.com/ask/carrot/&quot;&gt;http://github.com/ask/carrot/&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="0a6d182eddae4a8c741039feaa69173d60b5cee1" translate="yes" xml:space="preserve">
          <source>Regardless of the JSON implementation used, the exceptions will be the same.
This means that trying to serialize something not compatible with JSON
raises a TypeError:</source>
          <target state="translated">使用するJSONの実装に関わらず、例外は同じです。つまり、JSON と互換性のないものをシリアライズしようとすると TypeError が発生します。</target>
        </trans-unit>
        <trans-unit id="d268e242950b28bba0e5de39c156a7c34f6a121c" translate="yes" xml:space="preserve">
          <source>See CHANGELOG file</source>
          <target state="translated">CHANGELOGファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="c15b32f2cab71aa64dd2afbbc49470863329f7bc" translate="yes" xml:space="preserve">
          <source>The module is maintaned by Rune F. Halvorsen &amp;lt;&lt;a href=&quot;mailto:runefh%40gmail.com&quot;&gt;runefh@gmail.com&lt;/a&gt;&amp;gt;.
The project resides at &lt;a href=&quot;http://bitbucket.org/runeh/anyjson&quot;&gt;http://bitbucket.org/runeh/anyjson&lt;/a&gt; . Bugs and feature
requests can be submitted there. Patches are also very welcome.</source>
          <target state="translated">モジュールはRune F. Halvorsen &amp;lt; &lt;a href=&quot;mailto:runefh%40gmail.com&quot;&gt;runefh@gmail.com&lt;/a&gt; &amp;gt; によってメンテナンスされています。プロジェクトは&lt;a href=&quot;http://bitbucket.org/runeh/anyjson&quot;&gt;http://bitbucket.org/runeh/anyjsonにあり&lt;/a&gt;ます。バグや機能のリクエストはそこで提出できます。パッチも大歓迎です。</target>
        </trans-unit>
        <trans-unit id="ac6a8b04a94e6930ced03e84edf69441b47d2913" translate="yes" xml:space="preserve">
          <source>To serialize a python object to a JSON string, call the</source>
          <target state="translated">python オブジェクトを JSON 文字列にシリアライズするには</target>
        </trans-unit>
        <trans-unit id="edb38510442f5756c182766d781e4a766cad3a90" translate="yes" xml:space="preserve">
          <source>Wraps the best available JSON implementation available in a common interface</source>
          <target state="translated">共通のインターフェイスで利用可能な最高のJSON実装をラップします。</target>
        </trans-unit>
        <trans-unit id="01eeb3a3ce36a45d2ed8b640d6a38cc855a0aea9" translate="yes" xml:space="preserve">
          <source>call.</source>
          <target state="translated">を呼び出します。</target>
        </trans-unit>
        <trans-unit id="59df4159d803b745d2984211a74ab01de3391cae" translate="yes" xml:space="preserve">
          <source>deserialize</source>
          <target state="translated">デシリアライズ</target>
        </trans-unit>
        <trans-unit id="1dfae75987ab2c547d85f2eedd53692b234672e0" translate="yes" xml:space="preserve">
          <source>function:</source>
          <target state="translated">関数を使用しています。</target>
        </trans-unit>
        <trans-unit id="f14b5cbdda1c544bfbe498b81a77ce71fa513fdf" translate="yes" xml:space="preserve">
          <source>see the LICENSE file</source>
          <target state="translated">ライセンスファイルを参照してください</target>
        </trans-unit>
        <trans-unit id="8b98a923648538ef4b42e662d8e9408deb0bd085" translate="yes" xml:space="preserve">
          <source>serialize</source>
          <target state="translated">シリアライズ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
