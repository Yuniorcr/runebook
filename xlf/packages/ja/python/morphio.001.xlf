<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/morphio/">
    <body>
      <group id="morphio">
        <trans-unit id="05c589e6ce1353b60ee34985282c2669b644e238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Morphology&lt;/code&gt;: the morphology object contains general information about the loaded cell
but also provides accessors to the different sections.</source>
          <target state="translated">&lt;code&gt;Morphology&lt;/code&gt; ：モルフォロジーオブジェクトには、ロードされたセルに関する一般的な情報が含まれていますが、さまざまなセクションへのアクセサーも提供されます。</target>
        </trans-unit>
        <trans-unit id="17c91ef80661a47799660bac4cf72d7913dfe81f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Section&lt;/code&gt;: a section is the succession of points between two bifurcations. To the bare minimum
the &lt;code&gt;Section&lt;/code&gt; object will contain the section type, the position and diameter of each point.</source>
          <target state="translated">&lt;code&gt;Section&lt;/code&gt; ：セクションは、2つの分岐点の間の一連のポイントです。最低限、 &lt;code&gt;Section&lt;/code&gt; オブジェクトには、セクションタイプ、各ポイントの位置と直径が含まれます。</target>
        </trans-unit>
        <trans-unit id="0f650063b57767e19f8bf82fee773669da33e18e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Soma&lt;/code&gt;: contains the information related to the soma.</source>
          <target state="translated">&lt;code&gt;Soma&lt;/code&gt; ：相馬に関連する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="084102c1a86e9298ac2a3c793be10a082875501e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append_section&lt;/code&gt;: creates a new mitochondrial section
_ &lt;code&gt;depth_begin&lt;/code&gt;: a depth first iterator
_ &lt;code&gt;breadth_begin&lt;/code&gt;: a breadth first iterator
_ &lt;code&gt;upstream_begin&lt;/code&gt;: an upstream iterator</source>
          <target state="translated">&lt;code&gt;append_section&lt;/code&gt; ：_新しいミトコンドリアセクションを作成 &lt;code&gt;depth_begin&lt;/code&gt; ：深さ最初のイテレータ_ &lt;code&gt;breadth_begin&lt;/code&gt; ：幅優先イテレータ_ &lt;code&gt;upstream_begin&lt;/code&gt; 上流イテレータ</target>
        </trans-unit>
        <trans-unit id="a2f74157a11a484951549eb2a8ad57e3e5ac98ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::NO_DUPLICATES&lt;/code&gt;:
The duplicate point are not present. It means the first point of each section
is no longer the last point of the parent section.</source>
          <target state="translated">&lt;code&gt;morphio::NO_DUPLICATES&lt;/code&gt; ：重複ポイントが存在しません。これは、各セクションの最初のポイントが親セクションの最後のポイントではなくなったことを意味します。</target>
        </trans-unit>
        <trans-unit id="010a7b231ebd4c5631e87064addc5b73aec28e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::NO_MODIFIER&lt;/code&gt;:
This is the default flag, it will do nothing.</source>
          <target state="translated">&lt;code&gt;morphio::NO_MODIFIER&lt;/code&gt; ：これはデフォルトのフラグであり、何もしません。</target>
        </trans-unit>
        <trans-unit id="d6240a55d3bfb1484af4269babc0e8aca1ac8f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::NRN_ORDER&lt;/code&gt;:
Neurite are reordered according to the
&lt;a href=&quot;https://github.com/neuronsimulator/nrn/blob/2dbf2ebf95f1f8e5a9f0565272c18b1c87b2e54c/share/lib/hoc/import3d/import3d_gui.hoc#L874&quot;&gt;NEURON simulator ordering&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;morphio::NRN_ORDER&lt;/code&gt; ：神経突起は&lt;a href=&quot;https://github.com/neuronsimulator/nrn/blob/2dbf2ebf95f1f8e5a9f0565272c18b1c87b2e54c/share/lib/hoc/import3d/import3d_gui.hoc#L874&quot;&gt;NEURONシミュレータの順序&lt;/a&gt;に従って並べ替えられ ます</target>
        </trans-unit>
        <trans-unit id="22c1c9d644f179b01cd766b2175cd2cc85465fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::SOMA_SPHERE&lt;/code&gt;:
The soma is reduced to a sphere which is the center of gravity of the real soma.</source>
          <target state="translated">&lt;code&gt;morphio::SOMA_SPHERE&lt;/code&gt; ：相馬は、実際の相馬の重心である球に縮小されます。</target>
        </trans-unit>
        <trans-unit id="7b245606abb9b148b8f37177bfcedc95356c30bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::TWO_POINTS_SECTIONS&lt;/code&gt;:
Each section gets reduce to a line made of the first and last point.</source>
          <target state="translated">&lt;code&gt;morphio::TWO_POINTS_SECTIONS&lt;/code&gt; ：各セクションは、最初と最後のポイントで構成される線に縮小されます。</target>
        </trans-unit>
        <trans-unit id="d3b8b6c79cb1b524fd5094b65f68001332f4faa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;root_sections&lt;/code&gt;: returns the section ID of the starting mitochondrial section
of each mitochondrion.</source>
          <target state="translated">&lt;code&gt;root_sections&lt;/code&gt; ：各ミトコンドリアの開始ミトコンドリアセクションのセクションIDを返します。</target>
        </trans-unit>
        <trans-unit id="a1338fba018f2704fa578b78fda517cf5bea3b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;section(id)&lt;/code&gt;: returns a given mitochondrial section</source>
          <target state="translated">&lt;code&gt;section(id)&lt;/code&gt; ：指定されたミトコンドリアセクションを返します</target>
        </trans-unit>
        <trans-unit id="36a1d3d66ce44264089e8e3dafb62324323c66a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C++ vs Python&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;C ++とPython&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3ea5fd7ac9be36255ef9155761cc743987a1cf9f" translate="yes" xml:space="preserve">
          <source>A C++11 compiler</source>
          <target state="translated">C++11 コンパイラ</target>
        </trans-unit>
        <trans-unit id="952e5cab273d68e6168ccc6f357494b9a2cf5a2e" translate="yes" xml:space="preserve">
          <source>A neuron morphology IO library</source>
          <target state="translated">ニューロンの形態学的IOライブラリ</target>
        </trans-unit>
        <trans-unit id="4eefb7a0a2507987ebe0ff9baa649da3595b32fb" translate="yes" xml:space="preserve">
          <source>ASC (aka. neurolucida)</source>
          <target state="translated">アスキー</target>
        </trans-unit>
        <trans-unit id="be41078d03acbc74475d2c31d68aae80591b4f6f" translate="yes" xml:space="preserve">
          <source>BB5</source>
          <target state="translated">ビービーファイブ</target>
        </trans-unit>
        <trans-unit id="fc2b4216164cfb01ac45112054b3fedda8b56c86" translate="yes" xml:space="preserve">
          <source>C++</source>
          <target state="translated">C++</target>
        </trans-unit>
        <trans-unit id="9ec7b0a7c5b1451ed0f91bdb0a424184336bd671" translate="yes" xml:space="preserve">
          <source>C++ accessors become Python properties.</source>
          <target state="translated">C++アクセサはPythonのプロパティになります。</target>
        </trans-unit>
        <trans-unit id="b6f64f2703632fef3173b2740e88e81c303b62ad" translate="yes" xml:space="preserve">
          <source>C++ immutable</source>
          <target state="translated">シープラスふかのう</target>
        </trans-unit>
        <trans-unit id="594f8d144469b338c45f9cbb3aba6b9ddc07be92" translate="yes" xml:space="preserve">
          <source>C++ mutable</source>
          <target state="translated">シープラスミュータブル</target>
        </trans-unit>
        <trans-unit id="b2c28ff5668997c3ea08dbe005d29f11d4afe3e9" translate="yes" xml:space="preserve">
          <source>C++:</source>
          <target state="translated">C++:</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">貢献</target>
        </trans-unit>
        <trans-unit id="a882dcfd5751516ddb30c1beb8b0f3d24999e53c" translate="yes" xml:space="preserve">
          <source>Creating morphologies</source>
          <target state="translated">形態素の作成</target>
        </trans-unit>
        <trans-unit id="81bc189a8ba6d9c96baa2558edfa534d827ece83" translate="yes" xml:space="preserve">
          <source>Creating morphologies with the mutable API</source>
          <target state="translated">mutable APIを使ったモーフォロジーの作成</target>
        </trans-unit>
        <trans-unit id="6ad6786301d68961d7a03c9e68187e94afcca1ea" translate="yes" xml:space="preserve">
          <source>Debian:</source>
          <target state="translated">Debianです。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">依存関係</target>
        </trans-unit>
        <trans-unit id="ed806390ccd044a9cf9ef1c79ebe33380c22960a" translate="yes" xml:space="preserve">
          <source>Endoplasmic reticulum</source>
          <target state="translated">小胞体</target>
        </trans-unit>
        <trans-unit id="c869c8f77edec3e80935b2de9d8ed4c32e3d9555" translate="yes" xml:space="preserve">
          <source>Endoplasmic reticulum can also be stored and written to H5 file.
The specification is part of the &lt;a href=&quot;https://bbpteam.epfl.ch/documentation/projects/Morphology%20Documentation/latest/h5v1.html&quot;&gt;BBP morphology documentation&lt;/a&gt;
There is one endoplasmic reticulum object per morphology. It contains 4 attributes. Each attribute is an array and each line
refers to the value of the attribute for a specific neuronal section.</source>
          <target state="translated">小胞体を保存してH5ファイルに書き込むこともできます。仕様は&lt;a href=&quot;https://bbpteam.epfl.ch/documentation/projects/Morphology%20Documentation/latest/h5v1.html&quot;&gt;BBP形態文書の&lt;/a&gt;一部です 。形態ごとに1つの小胞体オブジェクトがあります。4つの属性が含まれています。各属性は配列であり、各行は特定のニューロンセクションの属性の値を参照します。</target>
        </trans-unit>
        <trans-unit id="74d325cfa7d43408ca489dd55501d3c44449fa27" translate="yes" xml:space="preserve">
          <source>For manual installation:</source>
          <target state="translated">手作業での設置の場合。</target>
        </trans-unit>
        <trans-unit id="4510b73730f1f3f889e0f84e7cd48578735b8b9e" translate="yes" xml:space="preserve">
          <source>For more convenience, all section data are accessed through properties, such as:</source>
          <target state="translated">より便利なように、すべてのセクションデータは、次のようなプロパティからアクセスされます。</target>
        </trans-unit>
        <trans-unit id="4561ff1365760290c7ec9b97ec2b7a6401500beb" translate="yes" xml:space="preserve">
          <source>H5 v1</source>
          <target state="translated">H5 v1</target>
        </trans-unit>
        <trans-unit id="5e644f8043bbb54eeaec2ac83b8e276b66c247fc" translate="yes" xml:space="preserve">
          <source>H5 v2</source>
          <target state="translated">H5 v2</target>
        </trans-unit>
        <trans-unit id="f3fb61d3823b3ba53d22425dd2f87558a62add31" translate="yes" xml:space="preserve">
          <source>Here is a simple example to create a morphology from scratch and write it to disk</source>
          <target state="translated">ここでは、形態素をゼロから作成してディスクに書き込む簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="25c2aeef8238138fec1533453e6b954e43c9c9b8" translate="yes" xml:space="preserve">
          <source>Here is a simple example to create a morphology from scratch and writing it to disk</source>
          <target state="translated">ここでは、形態素をゼロから作成してディスクに書き込む簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="183114ec6263f1b2f7612d8d4d73f7609f67c822" translate="yes" xml:space="preserve">
          <source>If you want to improve the project or you see any issue, every contribution is welcome.
Please check the &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; for more information.</source>
          <target state="translated">プロジェクトを改善したい場合、または問題が発生した場合は、すべての貢献を歓迎します。詳細&lt;a href=&quot;CONTRIBUTING.md&quot;&gt;について&lt;/a&gt;は、投稿ガイドラインを確認してください。</target>
        </trans-unit>
        <trans-unit id="114213187c45073b9488db12a9130b6c2014d2da" translate="yes" xml:space="preserve">
          <source>In C++ the API is available under the &lt;code&gt;morphio/mut&lt;/code&gt; namespace:</source>
          <target state="translated">C ++では、APIは &lt;code&gt;morphio/mut&lt;/code&gt; 名前空間で使用できます。</target>
        </trans-unit>
        <trans-unit id="147e6bf169b28710f197c1e0d96a454edfb6e705" translate="yes" xml:space="preserve">
          <source>In Python the API is available under the &lt;code&gt;morphio.mut&lt;/code&gt; module:</source>
          <target state="translated">Pythonでは、APIは &lt;code&gt;morphio.mut&lt;/code&gt; モジュールで利用できます。</target>
        </trans-unit>
        <trans-unit id="a8231de76a3f518c186c700115abe7cc01f5d09e" translate="yes" xml:space="preserve">
          <source>Include/Imports</source>
          <target state="translated">インクルード/インポート</target>
        </trans-unit>
        <trans-unit id="6d3729afc73ff147d644c95aef6eaf50fe33d95e" translate="yes" xml:space="preserve">
          <source>Include/imports</source>
          <target state="translated">インクルード/インポート</target>
        </trans-unit>
        <trans-unit id="a2d71948a02d35ad51d5f966864650112c64ca49" translate="yes" xml:space="preserve">
          <source>Install as a C++ library</source>
          <target state="translated">C++ライブラリとしてインストール</target>
        </trans-unit>
        <trans-unit id="e312a1d57652e97231a80899e82c8bc4dff7ed74" translate="yes" xml:space="preserve">
          <source>Install as a Python package</source>
          <target state="translated">Pythonパッケージとしてインストール</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="9542862800f3484f8a3dd301a53be94b09387164" translate="yes" xml:space="preserve">
          <source>Installation instructions</source>
          <target state="translated">設置方法</target>
        </trans-unit>
        <trans-unit id="9edf58da50a63a4c1cf0a67e04af2e8d0a21bc04" translate="yes" xml:space="preserve">
          <source>Internally, in this API the morphology object is in fact where all data are stored. The
Soma and Section classes are lightweight classes that provide views on the Morphology data.</source>
          <target state="translated">内部的には、このAPIでは、実際にはすべてのデータが格納されているのは形態学オブジェクトです。Soma クラスと Section クラスは、モーフォロジーデータのビューを提供する軽量クラスです。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">序章</target>
        </trans-unit>
        <trans-unit id="ec9c2a5c5316f26059f59cb45640593a4ebe01ea" translate="yes" xml:space="preserve">
          <source>It is also possible to read and write mitochondria from/to the h5 files (&lt;em&gt;SWC and ASC are not supported&lt;/em&gt;).
As mitochondria can be represented as trees, one can define the concept of &lt;em&gt;mitochondrial section&lt;/em&gt;
similar to neuronal section and end up with a similar API. The morphology object has a
&lt;em&gt;mitochondria&lt;/em&gt; handle method that exposes the basic methods:</source>
          <target state="translated">h5ファイルとの間でミトコンドリアの読み取りと書き込みを行うこともできます（&lt;em&gt;SWCとASCはサポートされていません&lt;/em&gt;）。ミトコンドリアは木として表すことができるので、&lt;em&gt;ミトコンドリアのセクション&lt;/em&gt;の概念 をニューロンのセクションと同様に定義し、最終的に同様のAPIを作成することができます。モルフォロジーオブジェクトには、基本的なメソッドを公開する &lt;em&gt;ミトコンドリア&lt;/em&gt;ハンドルメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="117907d437056a5e88dce3c5688f4ba1dbbda6f8" translate="yes" xml:space="preserve">
          <source>It provides 3 C++ classes that are the starting point of every morphology analysis:</source>
          <target state="translated">すべての形態素解析の出発点となる3つのC++クラスを提供します。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="b606f232674637f7a8f4fed66b0a7b7e377385d3" translate="yes" xml:space="preserve">
          <source>Max OS:</source>
          <target state="translated">最大のOSです。</target>
        </trans-unit>
        <trans-unit id="f2c829ac5573c78081963440a6b2337a3941c4bb" translate="yes" xml:space="preserve">
          <source>Maximum number of warnings</source>
          <target state="translated">警告の最大数</target>
        </trans-unit>
        <trans-unit id="db1cefa795d685c66374eb43ff579bb3d7b48e60" translate="yes" xml:space="preserve">
          <source>Mitochondria</source>
          <target state="translated">ミトコンドリア</target>
        </trans-unit>
        <trans-unit id="89c293ae9e42d33997e1555ddf06be22bee9a94e" translate="yes" xml:space="preserve">
          <source>MorphIO</source>
          <target state="translated">モーフアイオー</target>
        </trans-unit>
        <trans-unit id="258ac5fa4785075b0feb313f1509effe8b452c1d" translate="yes" xml:space="preserve">
          <source>MorphIO is a library for reading and writing neuron morphology files.
It supports the following formats:</source>
          <target state="translated">MorphIOは、ニューロンの形態情報ファイルを読み書きするためのライブラリです。以下のフォーマットをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c66d1d47ff62b4dfc2ef9dda3ff36be734274d3a" translate="yes" xml:space="preserve">
          <source>MorphIO is licensed under the terms of the GNU Lesser General Public License version 3.
Refer to COPYING.LESSER and COPYING for details.</source>
          <target state="translated">MorphIOはGNU Lesser General Public License version 3の条件でライセンスされています。詳細はCOPYING.LESSERとCOPYINGを参照してください。</target>
        </trans-unit>
        <trans-unit id="c7ca7bbd0f6b67fb5c8addddb279599da3fd5ec1" translate="yes" xml:space="preserve">
          <source>Multiple flags can be passed by using the standard bit flag manipulation (works the same way in C++ and Python):</source>
          <target state="translated">複数のフラグは、標準のビットフラグ操作を使用して渡すことができます(C++やPythonでも同じように動作します)。</target>
        </trans-unit>
        <trans-unit id="0e729aa5219592a72f30ec40888559e7d7912e09" translate="yes" xml:space="preserve">
          <source>Mutable (read/write) API</source>
          <target state="translated">ムータブル(読み書き可能)API</target>
        </trans-unit>
        <trans-unit id="1ef709bfed82149668ab96ecb08faea20a78ac74" translate="yes" xml:space="preserve">
          <source>Mutable Python</source>
          <target state="translated">Python Mutable</target>
        </trans-unit>
        <trans-unit id="1441b86c851079bc3324060b94073138efe31e37" translate="yes" xml:space="preserve">
          <source>Mutable Read/Write API</source>
          <target state="translated">むへんてきよみとりかきこみエーピーアイ</target>
        </trans-unit>
        <trans-unit id="696b21aa4b7ed6e6f418e1fdc078ec15cf49001e" translate="yes" xml:space="preserve">
          <source>On can control the maximum number of warnings using the command:</source>
          <target state="translated">On は、コマンドを使用して警告の最大数を制御することができます。</target>
        </trans-unit>
        <trans-unit id="98431f5e457c27365b1e03d91a81d64816a4f689" translate="yes" xml:space="preserve">
          <source>One important concept is that MorphIO is split into a &lt;em&gt;read-only&lt;/em&gt; part and a &lt;em&gt;read/write&lt;/em&gt; one.</source>
          <target state="translated">重要な概念の1つは、MorphIOが&lt;em&gt;読み取り専用&lt;/em&gt;部分と&lt;em&gt;読み取り/書き込み&lt;/em&gt;部分に分割される&lt;em&gt;こと&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="5f97525c2acf891503485ccbea5b86572e32965e" translate="yes" xml:space="preserve">
          <source>Opening flags</source>
          <target state="translated">オープニングフラッグ</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">パイソン</target>
        </trans-unit>
        <trans-unit id="f96ca1efe04a34a959623ed64609ac02c285f127" translate="yes" xml:space="preserve">
          <source>Python immutable</source>
          <target state="translated">パイソン不変</target>
        </trans-unit>
        <trans-unit id="d1569d4613d11c61dcbad3c408de9854a4232680" translate="yes" xml:space="preserve">
          <source>Python mutable</source>
          <target state="translated">パイソンミュータブル</target>
        </trans-unit>
        <trans-unit id="11ddfe4eada9c7c023a10c9be0db1975b537dd2c" translate="yes" xml:space="preserve">
          <source>Python:</source>
          <target state="translated">パイソンです。</target>
        </trans-unit>
        <trans-unit id="afad0406448ca26099a8a4b7585e12f2817dd38e" translate="yes" xml:space="preserve">
          <source>Quick summary</source>
          <target state="translated">簡単なまとめ</target>
        </trans-unit>
        <trans-unit id="3c7be3cfe1c5724916797c2e8575306b835d6b4e" translate="yes" xml:space="preserve">
          <source>Read-only API</source>
          <target state="translated">読み取り専用API</target>
        </trans-unit>
        <trans-unit id="e9effdd507f4b5f063079045910f919a92dc80dd" translate="yes" xml:space="preserve">
          <source>Reading endoplasmic reticula from H5 files</source>
          <target state="translated">H5ファイルから網状体内膜を読み取る</target>
        </trans-unit>
        <trans-unit id="2392f4926ea8aea0ae156e0cf4fab05ea63b5510" translate="yes" xml:space="preserve">
          <source>Reading mithochondria from H5 files:</source>
          <target state="translated">H5ファイルからミトコンドリアを読み取る。</target>
        </trans-unit>
        <trans-unit id="1148f4c63e27da113a22876674739c6318bbb569" translate="yes" xml:space="preserve">
          <source>Reading morphologies</source>
          <target state="translated">形態素を読む</target>
        </trans-unit>
        <trans-unit id="186a329d06866a482f19d11379a8b41c0fec7749" translate="yes" xml:space="preserve">
          <source>Red Hat:</source>
          <target state="translated">レッドハット</target>
        </trans-unit>
        <trans-unit id="818632e1f6ea77e4409af37db61ba13a053ce0f1" translate="yes" xml:space="preserve">
          <source>SWC</source>
          <target state="translated">SWC</target>
        </trans-unit>
        <trans-unit id="e0f094863987a3aa84bfc9a251a41dbed7abbeb1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md&quot;&gt;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md&quot;&gt;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.mdを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">仕様</target>
        </trans-unit>
        <trans-unit id="93fd8ff6d44795d76f5d83a406fc3da024e263a4" translate="yes" xml:space="preserve">
          <source>Table of content</source>
          <target state="translated">目次</target>
        </trans-unit>
        <trans-unit id="39dced20d71a61023f7ab9bc7bf0c274bc9918f5" translate="yes" xml:space="preserve">
          <source>The python binding can directly be installed using pip:</source>
          <target state="translated">pythonのバインディングはpipを使って直接インストールすることができます。</target>
        </trans-unit>
        <trans-unit id="f1b5d341762470401eba5d30dc9c3871b27700cc" translate="yes" xml:space="preserve">
          <source>The read-only API aims at providing better performances as its internal data
representation is contiguous in memory. All accessors return immutable objects.</source>
          <target state="translated">読み取り専用APIは、内部のデータ表現がメモリ内で連続しているため、より良いパフォーマンスを提供することを目的としています。すべてのアクセサは不変オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">ヒント</target>
        </trans-unit>
        <trans-unit id="c18e5b92741c17b68d38ed2f93d9423bce4afb89" translate="yes" xml:space="preserve">
          <source>To build MorphIO from sources, the following dependencies are required:</source>
          <target state="translated">ソースからMorphIOを構築するには、以下の依存関係が必要です。</target>
        </trans-unit>
        <trans-unit id="c7c8f50f1666be4b11b355987693154d7fb7259d" translate="yes" xml:space="preserve">
          <source>To use the installed library:</source>
          <target state="translated">インストールされているライブラリを使用するには</target>
        </trans-unit>
        <trans-unit id="3d6156d5f75b5b8f3a1cec51258c650d3b4145e2" translate="yes" xml:space="preserve">
          <source>When opening the file, modifier flags can be passed to alter the morphology representation.
The following flags are supported:</source>
          <target state="translated">ファイルを開くときに,修飾子フラグを渡して形態表現を変更することができます.以下のフラグがサポートされています。</target>
        </trans-unit>
        <trans-unit id="020e47bdadcc35f24bdfca2c096994ec4b2e97e0" translate="yes" xml:space="preserve">
          <source>Writing endoplasmic reticula from H5 files</source>
          <target state="translated">H5ファイルからの網状体内膜の書き込み</target>
        </trans-unit>
        <trans-unit id="07c3478e35aa306a568ba86886d52535c8017336" translate="yes" xml:space="preserve">
          <source>cmake &amp;gt;= 3.2</source>
          <target state="translated">cmake&amp;gt; = 3.2</target>
        </trans-unit>
        <trans-unit id="517a915971c6fdb27e7b68a7b57ffbd61405ed45" translate="yes" xml:space="preserve">
          <source>filament_count:
This 1 column dataset is composed of integers that represent the number of filaments in the segment of the reticulum lying in the section referenced by the corresponding row in the section_index dataset.</source>
          <target state="translated">filament_count.この1列データセットは,section_indexデータセットの対応する行が参照するセクションにある小胞体のセグメントのフィラメントの数を表す整数で構成されています.</target>
        </trans-unit>
        <trans-unit id="fd0f8c3ef5711d9f9b812afbf3881f5994b7fc20" translate="yes" xml:space="preserve">
          <source>libhdf5-dev</source>
          <target state="translated">リフディーエフファイブデブ</target>
        </trans-unit>
        <trans-unit id="abe2323ac33bea8e665eeaf956c36cb656766ebe" translate="yes" xml:space="preserve">
          <source>section_index:
Each row of this dataset represents the index of a neuronal section. Each row of the other properties (eg. volume) refer to the part of the reticulum
present in the corresponding section for each row.</source>
          <target state="translated">section_index.このデータセットの各行は,ニューロンのセクションのインデックスを表す.他のプロパティ(体積など)の各行は、各行の対応するセクションに存在する小胞体の部分を表しています。</target>
        </trans-unit>
        <trans-unit id="a92ce7ffe5e2cbc6c1cf6c1e7333e2f806f19b45" translate="yes" xml:space="preserve">
          <source>style: C++ functions are camel case while Python ones are snake case.</source>
          <target state="translated">というスタイルを採用しています。C++の関数はキャメルケース、Pythonの関数はスネークケースです。</target>
        </trans-unit>
        <trans-unit id="1d871f40bf2707774af399a0cb2a663ed48aeff0" translate="yes" xml:space="preserve">
          <source>surface_area:
Similar to the volume dataset, this dataset represents the surface area of the reticulum in each section in the section_index dataset.</source>
          <target state="translated">surface_area.ボリュームデータセットと同様に、このデータセットはsection_indexデータセットの各セクションにおける小胞体の表面積を表しています。</target>
        </trans-unit>
        <trans-unit id="dd43ad275adec129e3f7f213d1dda56a8b3fc7d8" translate="yes" xml:space="preserve">
          <source>volume:
One column dataset indexed by section_index. Contains volumes of the reticulum per each corresponding section it lies in.</source>
          <target state="translated">ボリュームを指定します。section_indexでインデックス化された1列のデータセット。小胞体の体積を、対応するセクションごとに格納しています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
