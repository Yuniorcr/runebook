<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/museval/">
    <body>
      <group id="museval">
        <trans-unit id="0b1dae957ad059a3d14aaa4106982c398622108b" translate="yes" xml:space="preserve">
          <source>1. Pull Docker Container</source>
          <target state="translated">1.Dockerコンテナを引っ張る</target>
        </trans-unit>
        <trans-unit id="52b836a07f90a0dafb65b73f11316adc4df89f60" translate="yes" xml:space="preserve">
          <source>2. Run evaluation</source>
          <target state="translated">2.評価の実行</target>
        </trans-unit>
        <trans-unit id="4c4cb4b30ce20299f4b44b9620f998be8764a6fa" translate="yes" xml:space="preserve">
          <source>:bulb: you use the &lt;code&gt;--iswav&lt;/code&gt; flag to use the decoded wav &lt;em&gt;musdb&lt;/em&gt; dataset.</source>
          <target state="translated">：bulb： &lt;code&gt;--iswav&lt;/code&gt; フラグを使用して、デコードされた&lt;em&gt;wavmusdb&lt;/em&gt;データセットを使用します。</target>
        </trans-unit>
        <trans-unit id="91fb3372715803a18d3f0fc50fd72cd93c9f41e1" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;museval&lt;/code&gt; requires a significant amount of memory for the evaluation. Evaluating all five targets for &lt;em&gt;MUSDB18&lt;/em&gt; may require more than 4GB of RAM. If you use multiprocessing by using the &lt;code&gt;-p&lt;/code&gt; switch in &lt;code&gt;museval&lt;/code&gt;, this results in 16GB of RAM. It is recommended to adjust your Docker preferences, because the docker container might just quit if its out of memory.</source>
          <target state="translated">：warning： &lt;code&gt;museval&lt;/code&gt; は、評価のためにかなりの量のメモリを必要とします。&lt;em&gt;MUSDB18の&lt;/em&gt;5つのターゲットすべてを評価するには、4GBを超えるRAMが必要になる場合があります。 &lt;code&gt;museval&lt;/code&gt; で &lt;code&gt;-p&lt;/code&gt; スイッチを使用してマルチプロセッシングを使用する場合、これにより16GBのRAMが生成されます。Dockerコンテナがメモリ不足になると終了する可能性があるため、Dockerプリファレンスを調整することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f894ad4e677e493ff7d4f3c5efd5f49b1d93605e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;estimatesdir&lt;/code&gt; will stand here for the absolute path to the estimates directory. (For instance &lt;code&gt;/home/faroit/dev/mymethod/musdboutput&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;estimatesdir&lt;/code&gt; は、見積もりディレクトリへの絶対パスを表します。（たとえば、 &lt;code&gt;/home/faroit/dev/mymethod/musdboutput&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="aea721b294f1d298f12b51c7cdf3fde1f456b1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;musdbdir&lt;/code&gt; will stand here for the absolute path to the root folder of musdb. (For instance &lt;code&gt;/home/faroit/dev/data/musdb18&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;musdbdir&lt;/code&gt; は、ここではmusdbのルートフォルダーへの絶対パスを表します。（たとえば、 &lt;code&gt;/home/faroit/dev/data/musdb18&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="affae19a7f15ce3b1c1d75b7445687b8452f1668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputdir&lt;/code&gt; will stand here for the absolute path to the output directory. (For instance &lt;code&gt;/home/faroit/dev/mymethod/scores&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;outputdir&lt;/code&gt; は、ここでは出力ディレクトリへの絶対パスを表します。（たとえば、 &lt;code&gt;/home/faroit/dev/mymethod/scores&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5bda406e508e1442ecd2e818e692ce913bdd8884" translate="yes" xml:space="preserve">
          <source>A python package to evaluate source separation results using the &lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18&lt;/a&gt; dataset. This package was part of the &lt;a href=&quot;https://sisec.inria.fr/home/2018-professionally-produced-music-recordings/&quot;&gt;MUS task&lt;/a&gt; of the &lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;Signal Separation Evaluation Campaign (SISEC)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://sigsep.github.io/musdb&quot;&gt;MUSDB18&lt;/a&gt;データセットを使用してソース分離の結果を評価するためのPythonパッケージ。このパッケージは、&lt;a href=&quot;https://sisec.inria.fr/&quot;&gt;信号分離評価キャンペーン（SISEC）&lt;/a&gt;の&lt;a href=&quot;https://sisec.inria.fr/home/2018-professionally-produced-music-recordings/&quot;&gt;MUSタスクの&lt;/a&gt;一部でした。</target>
        </trans-unit>
        <trans-unit id="51cc03d6f04f594e75b71e73893e0f15b48eeebb" translate="yes" xml:space="preserve">
          <source>A. If you use the &lt;code&gt;museval&lt;/code&gt; in the context of source separation evaluation comparing a method it to other methods of &lt;a href=&quot;http://sisec18.unmix.app/&quot;&gt;SiSEC 2018&lt;/a&gt;, please cite</source>
          <target state="translated">A.ソース分離評価のコンテキストで &lt;code&gt;museval&lt;/code&gt; を使用する場合は、その方法を&lt;a href=&quot;http://sisec18.unmix.app/&quot;&gt;SiSEC2018の&lt;/a&gt;他の方法と比較してください。</target>
        </trans-unit>
        <trans-unit id="05b75891acc19ac0aa2e1ffb0148215fd38a218d" translate="yes" xml:space="preserve">
          <source>Aggregate and Analyze Scores</source>
          <target state="translated">スコアの集計と分析</target>
        </trans-unit>
        <trans-unit id="0f48147765a2e6058c1ebdd20ac5b097428faf73" translate="yes" xml:space="preserve">
          <source>B. if you use the software for any other purpose, you can cite the software release</source>
          <target state="translated">B.その他の目的でソフトウェアを使用する場合は、ソフトウェアのリリースを引用することができます。</target>
        </trans-unit>
        <trans-unit id="faa7c1aedffe0265552568c29cf738efe6cbd63b" translate="yes" xml:space="preserve">
          <source>BSSEval v4</source>
          <target state="translated">BSSEval v4</target>
        </trans-unit>
        <trans-unit id="8e7103c3030f2cc7a65b256b0330c89a3238e6a9" translate="yes" xml:space="preserve">
          <source>Commandline tool</source>
          <target state="translated">コマンドラインツール</target>
        </trans-unit>
        <trans-unit id="a6f2a3cb0dc490bd66e79c6c852a5777d249d7a2" translate="yes" xml:space="preserve">
          <source>Evaluate MUSDB18 tracks later</source>
          <target state="translated">MUSDB18のトラックを後から評価</target>
        </trans-unit>
        <trans-unit id="b7e92509815591b1f03d60d3782bb78ff944c3e6" translate="yes" xml:space="preserve">
          <source>Evaluation tools for the SIGSEP MUS database</source>
          <target state="translated">SIGSEP MUSデータベースの評価ツール</target>
        </trans-unit>
        <trans-unit id="6216dda44ef392d90f9b88eafd182872c5b5dd6f" translate="yes" xml:space="preserve">
          <source>For this package, we enabled the option of having &lt;em&gt;time invariant&lt;/em&gt; distortion filters, instead of necessarily taking them as varying over time as done in the previous versions of BSS eval. First, enabling this option &lt;em&gt;significantly reduces&lt;/em&gt; the computational cost for evaluation because matching needs to be done only once for the whole signal. Second, it introduces much more dynamics in the evaluation, because time-varying matching filters turn out to over-estimate performance. Third, this makes matching more robust, because true sources are not silent throughout the whole recording, while they often were for short windows.</source>
          <target state="translated">このパッケージでは、以前のバージョンのBSS evalで行われていたように、必ずしも時間の経過とともに変化するのではなく、&lt;em&gt;時不変の&lt;/em&gt;歪みフィルターを使用するオプションを有効にしました。まず、このオプションを&lt;em&gt;有効にすると&lt;/em&gt;、信号全体に対して1回だけマッチングを行う必要があるため、評価の計算コストが&lt;em&gt;大幅に削減さ&lt;/em&gt;れます。次に、時変マッチングフィルターがパフォーマンスを過大評価することが判明するため、評価にはるかに多くのダイナミクスが導入されます。第三に、これによりマッチングがより堅牢になります。これは、実際のソースは録音全体を通してサイレントではないためですが、多くの場合、短いウィンドウ用でした。</target>
        </trans-unit>
        <trans-unit id="ab3693d82950b9cfe47093dc304a2be055b0863e" translate="yes" xml:space="preserve">
          <source>If you don't want to set up a Python environment to run the evaluation, we would recommend to use &lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;. Assuming you have already computed your estimates and installed docker in your machine, you just need to run the following two lines in your terminal:</source>
          <target state="translated">評価を実行するためにPython環境をセットアップしたくない場合は、&lt;a href=&quot;http://docker.com&quot;&gt;Docker&lt;/a&gt;を使用することをお勧めします。見積もりを計算し、Dockerをマシンにインストールしたと仮定すると、ターミナルで次の2行を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="a9cb6ebdbc46ecc62428437618235f999bc9a654" translate="yes" xml:space="preserve">
          <source>If you have already computed your estimates, we provide you with an easy-to-use function to process evaluation results afterwards.</source>
          <target state="translated">すでに見積もりを算出している場合は、後から評価結果を処理するための使いやすい機能をご用意しています。</target>
        </trans-unit>
        <trans-unit id="82f5ee2bb893b60eaf63625024cf7e186daf4f29" translate="yes" xml:space="preserve">
          <source>If you want to perform evaluation while processing your source separation results, you can make use &lt;code&gt;musdb&lt;/code&gt; track objects.
Here is an example for such a function separating the mixture into a &lt;strong&gt;vocals&lt;/strong&gt; and &lt;strong&gt;accompaniment&lt;/strong&gt; track:</source>
          <target state="translated">ソース分離結果の処理中に評価を実行する場合は、 &lt;code&gt;musdb&lt;/code&gt; トラックオブジェクトを使用できます。混合物を&lt;strong&gt;ボーカル&lt;/strong&gt;と&lt;strong&gt;伴奏&lt;/strong&gt;トラックに分離するこのような機能の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="06afbe0b83817d883d08034e1192f3604ccca0ee" translate="yes" xml:space="preserve">
          <source>In the line above, replace &lt;code&gt;estimatesdir&lt;/code&gt;, &lt;code&gt;musdbdir&lt;/code&gt; and &lt;code&gt;outputdir&lt;/code&gt; by the absolute paths for your setting.  Please note that docker requires absolute paths so you have to rely on your command line environment to convert relative paths to absolute paths (e.g. by using &lt;code&gt;$HOME/&lt;/code&gt; on Unix).</source>
          <target state="translated">上記の行で、 &lt;code&gt;estimatesdir&lt;/code&gt; 、 &lt;code&gt;musdbdir&lt;/code&gt; 、 &lt;code&gt;outputdir&lt;/code&gt; を設定の絶対パスに置き換えます。dockerには絶対パスが必要であるため、コマンドライン環境に依存して相対パスを絶対パスに変換する必要があることに注意してください（たとえば、Unixで &lt;code&gt;$HOME/&lt;/code&gt; を使用します）。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="8a7ec5636ae09a194c950c4def88cc5e2a9891cd" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;output_dir&lt;/code&gt; is set. &lt;code&gt;museval&lt;/code&gt; will recreate the &lt;code&gt;musdb&lt;/code&gt; file structure in that folder and write the evaluation results to this folder.</source>
          <target state="translated">&lt;code&gt;output_dir&lt;/code&gt; が設定されていることを確認してください。 &lt;code&gt;museval&lt;/code&gt; は、そのフォルダーに &lt;code&gt;musdb&lt;/code&gt; ファイル構造を再作成し、評価結果をこのフォルダーに書き込みます。</target>
        </trans-unit>
        <trans-unit id="77ca84718e0ad8247dcc8f32f65ce5736bf1270f" translate="yes" xml:space="preserve">
          <source>Package installation</source>
          <target state="translated">パッケージのインストール</target>
        </trans-unit>
        <trans-unit id="455e35c86ca328841291a9f407befe2e5e1baf02" translate="yes" xml:space="preserve">
          <source>Pull our precompiled &lt;code&gt;sigsep-mus-eval&lt;/code&gt; image from &lt;a href=&quot;https://hub.docker.com/r/faroit/sigsep-mus-eval/&quot;&gt;dockerhub&lt;/a&gt;:</source>
          <target state="translated">コンパイル済みの &lt;code&gt;sigsep-mus-eval&lt;/code&gt; イメージを&lt;a href=&quot;https://hub.docker.com/r/faroit/sigsep-mus-eval/&quot;&gt;dockerhub&lt;/a&gt;からプルします。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">参考文献</target>
        </trans-unit>
        <trans-unit id="cc7635f28ae3288eac8bd8a380bb1d7629b35001" translate="yes" xml:space="preserve">
          <source>Scores for each track can also be aggregated in a pandas DataFrame for easier analysis or the creation of boxplots.
To aggregate multiple tracks in a DataFrame, create &lt;code&gt;museval.EvalStore()&lt;/code&gt; object and add the track scores successively.</source>
          <target state="translated">各トラックのスコアは、分析や箱ひげ図の作成を容易にするために、パンダのDataFrameに集約することもできます。DataFrame内の複数のトラックを集約するには、museval.EvalStore &lt;code&gt;museval.EvalStore()&lt;/code&gt; オブジェクトを作成し、トラックスコアを連続して追加します。</target>
        </trans-unit>
        <trans-unit id="f69ea6473306b2d6254f0d96a0b499ddc1e23959" translate="yes" xml:space="preserve">
          <source>Separate MUSDB18 tracks and Evaluate on-the-fly</source>
          <target state="translated">MUSDB18のトラックを分離し、その場で評価を行う</target>
        </trans-unit>
        <trans-unit id="a104a1211164d9bd43244ac6bfaca16254bb004e" translate="yes" xml:space="preserve">
          <source>Simply use the &lt;code&gt;museval.eval_mus_dir&lt;/code&gt; to evaluate your &lt;code&gt;estimates_dir&lt;/code&gt; and write the results into the &lt;code&gt;output_dir&lt;/code&gt;. For convenience, the &lt;code&gt;eval_mus_dir&lt;/code&gt; function accepts all parameters of the &lt;code&gt;musdb.run()&lt;/code&gt;. That way e.g. multiprocessing can easily be enabled by setting &lt;code&gt;parallel=True&lt;/code&gt;:</source>
          <target state="translated">単純に使用 &lt;code&gt;museval.eval_mus_dir&lt;/code&gt; をご評価する &lt;code&gt;estimates_dir&lt;/code&gt; をし、に結果を書き込む &lt;code&gt;output_dir&lt;/code&gt; 。便宜上、 &lt;code&gt;eval_mus_dir&lt;/code&gt; 関数は &lt;code&gt;musdb.run()&lt;/code&gt; のすべてのパラメーターを受け入れます。そうすれば、たとえば、 &lt;code&gt;parallel=True&lt;/code&gt; を設定することで、マルチプロセッシングを簡単に有効にできます。</target>
        </trans-unit>
        <trans-unit id="571c5f16641539a79af38d9b64ae2ea2e2be10ce" translate="yes" xml:space="preserve">
          <source>The BSSEval metrics, as implemented in the &lt;a href=&quot;http://bass-db.gforge.inria.fr/bss_eval/&quot;&gt;MATLAB toolboxes&lt;/a&gt; and their re-implementation in &lt;a href=&quot;http://craffel.github.io/mir_eval/#module-mir_eval.separation&quot;&gt;mir_eval&lt;/a&gt; are widely used in the audio separation literature. One particularity of BSSEval is to compute the metrics after optimally matching the estimates to the true sources through linear distortion filters. This allows the criteria to be robust to some linear mismatches. Apart from the optional evaluation for all possible permutations of the sources, this matching is the reason for most of the computation cost of BSSEval, especially considering it is done for each evaluation window when the metrics are computed on a framewise basis.</source>
          <target state="translated">実装されBSSEvalメトリック、&lt;a href=&quot;http://bass-db.gforge.inria.fr/bss_eval/&quot;&gt;MATLABツールボックス&lt;/a&gt;およびそれらの再実装&lt;a href=&quot;http://craffel.github.io/mir_eval/#module-mir_eval.separation&quot;&gt;mir_evalは&lt;/a&gt;広くオーディオ分離文献に使用されています。 BSSEvalの特徴の1つは、線形歪みフィルターを介して推定値を真のソースに最適に一致させた後、メトリックを計算することです。これにより、いくつかの線形不一致に対して基準を堅牢にすることができます。ソースのすべての可能な順列に対するオプションの評価とは別に、このマッチングは、特にメトリックがフレーム単位で計算されるときに各評価ウィンドウに対して行われることを考えると、BSSEvalの計算コストの大部分の理由です。</target>
        </trans-unit>
        <trans-unit id="1e2db5a13873f5efd3e5f196bebf771738384775" translate="yes" xml:space="preserve">
          <source>The purpose of this package is to evaluate source separation results and write out validated &lt;code&gt;json&lt;/code&gt; files. We want to encourage users to use this evaluation output format as the standardized way to share source separation results. &lt;code&gt;museval&lt;/code&gt; is designed to work in conjuction with the &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-db&quot;&gt;musdb&lt;/a&gt; tools and the MUSDB18 dataset (however, &lt;code&gt;museval&lt;/code&gt; can also be used without &lt;code&gt;musdb&lt;/code&gt;).</source>
          <target state="translated">このパッケージの目的は、ソース分離の結果を評価し、検証済みの &lt;code&gt;json&lt;/code&gt; ファイルを書き出すことです。ソース分離の結果を共有するための標準化された方法として、この評価出力形式を使用することをユーザーに推奨したいと思います。 &lt;code&gt;museval&lt;/code&gt; は、&lt;a href=&quot;https://github.com/sigsep/sigsep-mus-db&quot;&gt;musdb&lt;/a&gt;ツールおよびMUSDB18データセットと連携して機能するように設計されています（ただし、 &lt;code&gt;museval&lt;/code&gt; は &lt;code&gt;musdb&lt;/code&gt; なしでも使用できます）。</target>
        </trans-unit>
        <trans-unit id="42ba84c6bb591dbd5e3e2912945476bed8d3b692" translate="yes" xml:space="preserve">
          <source>To compare against participants from &lt;a href=&quot;https://github.com/sigsep/sigsep-mus-2018&quot;&gt;SiSEC MUS 2018&lt;/a&gt;, we provide a convenient method to load the existing scores on demand using &lt;code&gt;methods.add_sisec18()&lt;/code&gt;. For the creation of plots and statistical significance tests we refer to our &lt;a href=&quot;/examples&quot;&gt;list of examples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sigsep/sigsep-mus-2018&quot;&gt;SiSEC MUS 2018の&lt;/a&gt;参加者と比較するために、methods.add_sisec18 &lt;code&gt;methods.add_sisec18()&lt;/code&gt; を使用して既存のスコアをオンデマンドでロードする便利なメソッドを提供します。プロットと統計的有意性検定の作成については&lt;a href=&quot;/examples&quot;&gt;、例のリスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="aeacdc87793d62885e0b31c5a4df71dd70c22edb" translate="yes" xml:space="preserve">
          <source>To compare multiple methods, create a &lt;code&gt;museval.MethodStore()&lt;/code&gt; object add the results</source>
          <target state="translated">複数のメソッドを比較するには、 &lt;code&gt;museval.MethodStore()&lt;/code&gt; オブジェクトを作成して結果を追加します</target>
        </trans-unit>
        <trans-unit id="1c2d42f3921c7db9d3936a82cfeafa1381cba112" translate="yes" xml:space="preserve">
          <source>To run the evaluation inside of the docker, three absolute paths are required:</source>
          <target state="translated">docker内部で評価を実行するには、3つの絶対パスが必要です。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="cc5d3eba3df6350193fb868f0abedb0713eb72eb" translate="yes" xml:space="preserve">
          <source>Using Docker for Evaluation</source>
          <target state="translated">評価にDockerを使う</target>
        </trans-unit>
        <trans-unit id="3d889acaf74f5348937d02868d1946f27ad8b75b" translate="yes" xml:space="preserve">
          <source>We just mount these directories into the docker container using the &lt;code&gt;-v&lt;/code&gt; flags and start the docker instance:</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; フラグを使用してこれらのディレクトリをDockerコンテナにマウントし、Dockerインスタンスを起動します。</target>
        </trans-unit>
        <trans-unit id="2582e9ed151ee1d02df636cec15b95f5f71f7bed" translate="yes" xml:space="preserve">
          <source>We provide a command line wrapper of &lt;code&gt;eval_mus_dir&lt;/code&gt; by calling the &lt;code&gt;museval&lt;/code&gt; command line tool. The following example is equivalent to the code example above:</source>
          <target state="translated">&lt;code&gt;museval&lt;/code&gt; コマンドラインツールを呼び出すことにより、 &lt;code&gt;eval_mus_dir&lt;/code&gt; のコマンドラインラッパーを提供します。次の例は、上記のコード例と同等です。</target>
        </trans-unit>
        <trans-unit id="f5673699af77525be1c3fa4b3778577547332862" translate="yes" xml:space="preserve">
          <source>When all tracks have been added, the aggregated scores can be shown using &lt;code&gt;print(results)&lt;/code&gt; and results may be saved as a pandas DataFrame &lt;code&gt;results.save('my_method.pandas')&lt;/code&gt;.</source>
          <target state="translated">すべてのトラックが追加されると、 &lt;code&gt;print(results)&lt;/code&gt; を使用して集計されたスコアを表示でき、結果をpandas DataFrame results.save &lt;code&gt;results.save('my_method.pandas')&lt;/code&gt; として保存できます。</target>
        </trans-unit>
        <trans-unit id="b25189e837cce7fb54efaec70b16a21e86875885" translate="yes" xml:space="preserve">
          <source>You can install the &lt;code&gt;museval&lt;/code&gt; parsing package using pip:</source>
          <target state="translated">pipを使用して &lt;code&gt;museval&lt;/code&gt; 解析パッケージをインストールできます。</target>
        </trans-unit>
        <trans-unit id="542dd89ace1ba604f84195cf9a71a01598ffdfc1" translate="yes" xml:space="preserve">
          <source>museval</source>
          <target state="translated">ムセバル</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
