<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/cwltool/">
    <body>
      <group id="cwltool">
        <trans-unit id="99b01d38a789c2d6488310d585f4bf2cc3f0fae7" translate="yes" xml:space="preserve">
          <source>#main</source>
          <target state="translated">#main</target>
        </trans-unit>
        <trans-unit id="62eac18ab6416c9e3b0c36a420cc25fb9855ca23" translate="yes" xml:space="preserve">
          <source>$graph</source>
          <target state="translated">$graph</target>
        </trans-unit>
        <trans-unit id="f399eaac18698359018077313d861aa72cb8e2cb" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;-n&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;-n&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="0b5137b8f5e0bf7684aeab194d804eef63c01b5f" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Galaxy packages&amp;rdquo; are a lighter weight alternative to Environment Modules that are
really just defined by a way to lay out directories into packages and versions
to find little scripts that are sourced to modify the environment. They have
been used for years in Galaxy community to adapt Galaxy tools to cluster
environments but require neither knowledge of Galaxy nor any special tools to
setup. These should work just fine for CWL tools.</source>
          <target state="translated">&amp;ldquo;Galaxy packages&amp;rdquo; are a lighter weight alternative to Environment Modules that are really just defined by a way to lay out directories into packages and versions to find little scripts that are sourced to modify the environment. They have been used for years in Galaxy community to adapt Galaxy tools to cluster environments but require neither knowledge of Galaxy nor any special tools to setup. These should work just fine for CWL tools.</target>
        </trans-unit>
        <trans-unit id="0ac1f0684f42e8b1a644dd5f35e066673cb040af" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;mpirun&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;mpirun&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="28ed3a797da3c48c309a4ef792147f3c56cfec40" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">（</target>
        </trans-unit>
        <trans-unit id="a97ef8638aa9423beef2b8778eff03d82355908d" translate="yes" xml:space="preserve">
          <source>(/tests)</source>
          <target state="translated">(/tests)</target>
        </trans-unit>
        <trans-unit id="d1ebb957c91052faf87b6513601afff506c5ceb4" translate="yes" xml:space="preserve">
          <source>(indicating
there is currently no work ready to run) or end of iteration (indicating
the process is complete.)</source>
          <target state="translated">(indicating there is currently no work ready to run) or end of iteration (indicating the process is complete.)</target>
        </trans-unit>
        <trans-unit id="45f2b3a0131eadfff7418c2d478ffa83c7857997" translate="yes" xml:space="preserve">
          <source>) option.  This
takes the name of an output parameter, workflow step, or input
parameter in the top level workflow.  You may provide multiple
targets.</source>
          <target state="translated">) option. This takes the name of an output parameter, workflow step, or input parameter in the top level workflow. You may provide multiple targets.</target>
        </trans-unit>
        <trans-unit id="83acd28328ace3e6b9990cd59119cd28cda7f3d0" translate="yes" xml:space="preserve">
          <source>). The directory layout is simply:</source>
          <target state="translated">). The directory layout is simply:</target>
        </trans-unit>
        <trans-unit id="331c12a504944b0fb8357de8c2db6985d2b566a3" translate="yes" xml:space="preserve">
          <source>, then the tool&amp;rsquo;s command
line will be extended with the commands needed to launch it with</source>
          <target state="translated">, then the tool&amp;rsquo;s command line will be extended with the commands needed to launch it with</target>
        </trans-unit>
        <trans-unit id="b378a65f7c5d4770bc520ea4574f701e7f1b3cc8" translate="yes" xml:space="preserve">
          <source>, which is the implementation-agnostic name for the
default CWL interpreter installed on a host.</source>
          <target state="translated">, which is the implementation-agnostic name for the default CWL interpreter installed on a host.</target>
        </trans-unit>
        <trans-unit id="bb7e3a6b9cf0a1c0e28c3b13bf9b076a5305bddb" translate="yes" xml:space="preserve">
          <source>--add-tool-registry</source>
          <target state="translated">--add-tool-registry</target>
        </trans-unit>
        <trans-unit id="a2ba6870a22a33285d2f752482d5226b8a905f38" translate="yes" xml:space="preserve">
          <source>--beta-conda-dependencies</source>
          <target state="translated">--beta-conda-dependencies</target>
        </trans-unit>
        <trans-unit id="4f3f0936a32469e27ca7cda410bc17330e1440af" translate="yes" xml:space="preserve">
          <source>--beta-dependency-resolvers-configuration</source>
          <target state="translated">--beta-dependency-resolvers-configuration</target>
        </trans-unit>
        <trans-unit id="8e6514a8c1c1705f9ac5006090ec5ed0eb6b1753" translate="yes" xml:space="preserve">
          <source>--enable-ext</source>
          <target state="translated">--enable-ext</target>
        </trans-unit>
        <trans-unit id="650e31754134a6880ee5cd6033096c715ef22ed7" translate="yes" xml:space="preserve">
          <source>--mpi-config-file</source>
          <target state="translated">--mpi-config-file</target>
        </trans-unit>
        <trans-unit id="997748768a961696c3c7a2d03b065bb1cf3a13d6" translate="yes" xml:space="preserve">
          <source>--pack</source>
          <target state="translated">--pack</target>
        </trans-unit>
        <trans-unit id="57d84e279b8a2caf4bf675b3987c86429c85a580" translate="yes" xml:space="preserve">
          <source>--print-dot</source>
          <target state="translated">--print-dot</target>
        </trans-unit>
        <trans-unit id="05fff23fda21b4feae9c54eba7f996e9177d2687" translate="yes" xml:space="preserve">
          <source>--print-subgraph</source>
          <target state="translated">--print-subgraph</target>
        </trans-unit>
        <trans-unit id="b41b4b2ce82fc7538065afd58fc55149b21cfbbc" translate="yes" xml:space="preserve">
          <source>--print-targets</source>
          <target state="translated">--print-targets</target>
        </trans-unit>
        <trans-unit id="b26948d968e5d7fdb8625baf634682f43cebb818" translate="yes" xml:space="preserve">
          <source>--singularity</source>
          <target state="translated">--singularity</target>
        </trans-unit>
        <trans-unit id="11c32630a58444c7ac1a7cabadb6f4e400c50368" translate="yes" xml:space="preserve">
          <source>--target</source>
          <target state="translated">--target</target>
        </trans-unit>
        <trans-unit id="93812491dd7470819bf5c8d620b283d3527c4e5f" translate="yes" xml:space="preserve">
          <source>--tmp-outdir-prefix</source>
          <target state="translated">--tmp-outdir-prefix</target>
        </trans-unit>
        <trans-unit id="595e30d36a0a5d912a944bf4618dc144c50a07c1" translate="yes" xml:space="preserve">
          <source>--tmpdir-prefix</source>
          <target state="translated">--tmpdir-prefix</target>
        </trans-unit>
        <trans-unit id="93d91e5eac9b8b90c26683bb9881222b950229d3" translate="yes" xml:space="preserve">
          <source>--user-space-docker-cmd</source>
          <target state="translated">--user-space-docker-cmd</target>
        </trans-unit>
        <trans-unit id="1ffa835f18b0d84b7be1c7c0ecd4eb3e149bf81a" translate="yes" xml:space="preserve">
          <source>-t</source>
          <target state="translated">-t</target>
        </trans-unit>
        <trans-unit id="3c5b6efda231864227c8c511ceb1b3dbd2137b33" translate="yes" xml:space="preserve">
          <source>.
This option allows one to specify a dependency resolver&amp;rsquo;s configuration file.
This file may be specified as either XML or YAML and very simply describes various
plugins to enable to &amp;ldquo;resolve&amp;rdquo;</source>
          <target state="translated">. This option allows one to specify a dependency resolver&amp;rsquo;s configuration file. This file may be specified as either XML or YAML and very simply describes various plugins to enable to &amp;ldquo;resolve&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="00120d273b67f61bb5781e0d7ab0e2551b9ee7fa" translate="yes" xml:space="preserve">
          <source>.
With Singularity,</source>
          <target state="translated">. With Singularity,</target>
        </trans-unit>
        <trans-unit id="5861f9fa9b54cfefa5b6ef233c2fe6f603f433ee" translate="yes" xml:space="preserve">
          <source>.  This runs the tool and gets output.</source>
          <target state="translated">. This runs the tool and gets output.</target>
        </trans-unit>
        <trans-unit id="61f557e83079ab0d2dd7fd4710b3185f113a7a81" translate="yes" xml:space="preserve">
          <source>. A simple dependency resolvers configuration file, called</source>
          <target state="translated">. A simple dependency resolvers configuration file, called</target>
        </trans-unit>
        <trans-unit id="88a6368abe4518c1f881b64e2e49a361c5940823" translate="yes" xml:space="preserve">
          <source>. This means cluster
users likely won&amp;rsquo;t have the binary</source>
          <target state="translated">. This means cluster users likely won&amp;rsquo;t have the binary</target>
        </trans-unit>
        <trans-unit id="741b785538c5ab3a32b7ef7424db157ad001a0ee" translate="yes" xml:space="preserve">
          <source>. To try out this example with
mapping, execute the following command from the cwltool root directory:</source>
          <target state="translated">. To try out this example with mapping, execute the following command from the cwltool root directory:</target>
        </trans-unit>
        <trans-unit id="132269bc32621ccd556e40fcd3d9c381576ac69f" translate="yes" xml:space="preserve">
          <source>. We will
demonstrate this using</source>
          <target state="translated">. We will demonstrate this using</target>
        </trans-unit>
        <trans-unit id="a791ffaf0e16e7da5822c89cf538c4e5ee328f72" translate="yes" xml:space="preserve">
          <source>. When the tool
definition has this in its</source>
          <target state="translated">. When the tool definition has this in its</target>
        </trans-unit>
        <trans-unit id="a2838e9876e1108815fc1a55c54de1448f243dad" translate="yes" xml:space="preserve">
          <source>. cwltool has such a test tool called</source>
          <target state="translated">. cwltool has such a test tool called</target>
        </trans-unit>
        <trans-unit id="7d6e9b59d20d17189bbcaa96ab0fa717958c5016" translate="yes" xml:space="preserve">
          <source>/Users</source>
          <target state="translated">/Users</target>
        </trans-unit>
        <trans-unit id="b1c414c9ddee44aafbf3ce754e72761fdc469d5d" translate="yes" xml:space="preserve">
          <source>/Var</source>
          <target state="translated">/Var</target>
        </trans-unit>
        <trans-unit id="04b53927c1304f217ac422867e79076ba3af3b73" translate="yes" xml:space="preserve">
          <source>1.0.0-rc1</source>
          <target state="translated">1.0.0-rc1</target>
        </trans-unit>
        <trans-unit id="aa3635847868f133d7adb1c74b8e61351360789d" translate="yes" xml:space="preserve">
          <source>3.x {x = 5, 6, 7, 8}</source>
          <target state="translated">3.x {x=5,6,7,8}の場合</target>
        </trans-unit>
        <trans-unit id="b5080649087658f6d58f5d42214abc48505fbb6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/indigo-dc/udocker&quot;&gt;https://github.com/indigo-dc/udocker&lt;/a&gt; and another
is</source>
          <target state="translated">&lt;a href=&quot;https://github.com/indigo-dc/udocker&quot;&gt;https://github.com/indigo-dc/udocker&lt;/a&gt; and another is</target>
        </trans-unit>
        <trans-unit id="aa6976d23b252a9fb1ce3d0986316b9bda3f8e1b" translate="yes" xml:space="preserve">
          <source>A dictionary whose keys are
the environment variables set
and the values being the
values.</source>
          <target state="translated">キーが設定された環境変数、値が値である辞書。</target>
        </trans-unit>
        <trans-unit id="71adc91d9fec8c496052302338f4e37f991ee0c8" translate="yes" xml:space="preserve">
          <source>A list of any other flags to
be added to the runner&amp;rsquo;s
command line before
the</source>
          <target state="translated">A list of any other flags to be added to the runner&amp;rsquo;s command line before the</target>
        </trans-unit>
        <trans-unit id="87517e3c5e11166b2e35ea0f0f07493fc6584974" translate="yes" xml:space="preserve">
          <source>A list of environment
variables that should be
passed from the host
environment through to the
tool (e.g. giving the
nodelist as set by your
scheduler).</source>
          <target state="translated">ホスト環境からツールに渡すべき環境変数のリスト (スケジューラで設定されたモデルリストを渡すなど)。</target>
        </trans-unit>
        <trans-unit id="52012c80bdd27b2ac9b63ab0c525adaa3979fe50" translate="yes" xml:space="preserve">
          <source>A list of python regular
expressions that will be
matched against the host&amp;rsquo;s
environment. Those that match
will be passed through.</source>
          <target state="translated">A list of python regular expressions that will be matched against the host&amp;rsquo;s environment. Those that match will be passed through.</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">追加</target>
        </trans-unit>
        <trans-unit id="fa4e2a862d02d50be082e5d96718f938d96f1b7a" translate="yes" xml:space="preserve">
          <source>An implementation of the toplevel workflow execution loop, should
synchronously run a process object to completion and return the
output object.</source>
          <target state="translated">トップレベルのワークフロー実行ループの実装では、プロセスオブジェクトを同期的に実行して完了し、出力オブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="c3e32a04de45310814e16e1f55634078ecfeaac8" translate="yes" xml:space="preserve">
          <source>And the corresponding mapping configuraiton file (</source>
          <target state="translated">そして、対応するマッピング設定ファイル(</target>
        </trans-unit>
        <trans-unit id="cb53964ffb5c19e9a694d3f1dee76683d33cf243" translate="yes" xml:space="preserve">
          <source>Applies preprocessing (syntax/identifier expansion and normalization)</source>
          <target state="translated">前処理(構文/識別子の展開と正規化)を行います。</target>
        </trans-unit>
        <trans-unit id="af04ed540daf9a900118dd7006a89f2a29d437a9" translate="yes" xml:space="preserve">
          <source>By default, cwltool searches &lt;a href=&quot;https://dockstore.org/&quot;&gt;https://dockstore.org/&lt;/a&gt; .  Use</source>
          <target state="translated">By default, cwltool searches &lt;a href=&quot;https://dockstore.org/&quot;&gt;https://dockstore.org/&lt;/a&gt; . Use</target>
        </trans-unit>
        <trans-unit id="5ec0a69c99e73b6d611ba2b510763479efba8a69" translate="yes" xml:space="preserve">
          <source>CWL Tool Control Flow</source>
          <target state="translated">CWLツール制御フロー</target>
        </trans-unit>
        <trans-unit id="c53522eca4998ed4f780afa55b346a583554e0a0" translate="yes" xml:space="preserve">
          <source>CWL documents can be expressed as RDF triple graphs.</source>
          <target state="translated">CWL文書はRDFトリプルグラフで表現することができます。</target>
        </trans-unit>
        <trans-unit id="cac1101ff007497c7a1195b03ea3b52e9a0bf6ff" translate="yes" xml:space="preserve">
          <source>CWL tools may be decorated with</source>
          <target state="translated">CWLツールには、以下のような装飾が施されている場合があります。</target>
        </trans-unit>
        <trans-unit id="aa94904bdf032ea032465b68ea2894387c0a7d20" translate="yes" xml:space="preserve">
          <source>Combining parts of a workflow into a single document</source>
          <target state="translated">ワークフローの一部を1つのドキュメントにまとめる</target>
        </trans-unit>
        <trans-unit id="5c46e86acecbef88bcb4ccefa7caef63d9bc7163" translate="yes" xml:space="preserve">
          <source>CommandLineJob</source>
          <target state="translated">コマンドラインジョブ</target>
        </trans-unit>
        <trans-unit id="f2ee84b0c8a18cd217e40b9d19747f7232376491" translate="yes" xml:space="preserve">
          <source>CommandLineTool</source>
          <target state="translated">コマンドラインツール</target>
        </trans-unit>
        <trans-unit id="33a56379967ee06d9e70f46e94c38fd6ddbc90d7" translate="yes" xml:space="preserve">
          <source>CommandLineTool.make_job_runner</source>
          <target state="translated">CommandLineTool.make_job_runner</target>
        </trans-unit>
        <trans-unit id="e5e6e54347101cc36f7cf4c39b9a35da271851b5" translate="yes" xml:space="preserve">
          <source>Common Workflow Language tool description reference implementation</source>
          <target state="translated">共通ワークフロー言語ツール記述参照実装</target>
        </trans-unit>
        <trans-unit id="ff592fc741d18f31b61e1e1c837947528a42a535" translate="yes" xml:space="preserve">
          <source>Common workflow language reference implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb92a90d0ca0e47c3b6280c361fc99a654a3217a" translate="yes" xml:space="preserve">
          <source>Conda for [Galaxy] Tool Dependencies</source>
          <target state="translated">コンダ for [Galaxy]ツールの依存関係</target>
        </trans-unit>
        <trans-unit id="876c2d1ad06baced0e7c77f7a667f5cc88591530" translate="yes" xml:space="preserve">
          <source>Construct a Fetcher object with the supplied cache and HTTP session.</source>
          <target state="translated">供給されたキャッシュと HTTP セッションを使用して Fetcher オブジェクトを構築します。</target>
        </trans-unit>
        <trans-unit id="5ad37eff9fb08c08735cb493826d98025963e885" translate="yes" xml:space="preserve">
          <source>Constructs a Process object using</source>
          <target state="translated">を使用してプロセスオブジェクトを構築します。</target>
        </trans-unit>
        <trans-unit id="ac9605de676d8f3dacf716cca88f9dc444111112" translate="yes" xml:space="preserve">
          <source>Create and return a job runner object (this implements concrete execution of a command line tool).</source>
          <target state="translated">ジョブランナーオブジェクトを作成して返します(これはコマンドラインツールの具体的な実行を実装しています)。</target>
        </trans-unit>
        <trans-unit id="da8870f4b149f0f855775f716b072c4690265932" translate="yes" xml:space="preserve">
          <source>Create and return a workflow step object.</source>
          <target state="translated">ワークフローのステップオブジェクトを作成して返します。</target>
        </trans-unit>
        <trans-unit id="d11ec830daa3584176ff70de0e1c910c0e2826bb" translate="yes" xml:space="preserve">
          <source>Cwltool can launch tools directly from &lt;a href=&quot;https://github.com/ga4gh/tool-registry-schemas&quot;&gt;GA4GH Tool Registry API&lt;/a&gt; endpoints.</source>
          <target state="translated">Cwltool can launch tools directly from &lt;a href=&quot;https://github.com/ga4gh/tool-registry-schemas&quot;&gt;GA4GH Tool Registry API&lt;/a&gt; endpoints.</target>
        </trans-unit>
        <trans-unit id="3cf86454664ec0c2f735025d5c7770dc02044f87" translate="yes" xml:space="preserve">
          <source>Cwltool supports an extension to the CWL spec</source>
          <target state="translated">CwltoolはCWL仕様の拡張をサポートしています。</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">デフォルト</target>
        </trans-unit>
        <trans-unit id="b43785f8ef68dd27a8eb1a9e4b6f5b5b6a11e95d" translate="yes" xml:space="preserve">
          <source>Default number of processes.</source>
          <target state="translated">デフォルトのプロセス数。</target>
        </trans-unit>
        <trans-unit id="ae9b8f263c7983712a1f58d9a906693250ad1b29" translate="yes" xml:space="preserve">
          <source>Dependency Resolvers in Galaxy</source>
          <target state="translated">ギャラクシーの依存関係リゾルバ</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">開発の様子</target>
        </trans-unit>
        <trans-unit id="f448f79b40dfb1ac3ed16675af244358a55f6b22" translate="yes" xml:space="preserve">
          <source>DockerRequirement</source>
          <target state="translated">DockerRequirement</target>
        </trans-unit>
        <trans-unit id="309e69ebe29eb3d17c06f3152cdf2eac19a5f892" translate="yes" xml:space="preserve">
          <source>Each runnable item is yielded back up to top level run loop</source>
          <target state="translated">実行可能な各アイテムは、トップレベルのランループに戻されます。</target>
        </trans-unit>
        <trans-unit id="1cdc640c475344a22e6efdd953399b10bebfd1c4" translate="yes" xml:space="preserve">
          <source>Each time the</source>
          <target state="translated">のたびに</target>
        </trans-unit>
        <trans-unit id="4d73f5d0284e178aac77d7aa5c1a6bb53d0c1cde" translate="yes" xml:space="preserve">
          <source>Extension points</source>
          <target state="translated">拡張ポイント</target>
        </trans-unit>
        <trans-unit id="e5e7956d33c6be569f4809c0904825939d4d6e06" translate="yes" xml:space="preserve">
          <source>Fetches the document from file or URL</source>
          <target state="translated">ファイルまたは URL からドキュメントを取得します。</target>
        </trans-unit>
        <trans-unit id="53b235ada475117e6350fcfa6d4e49b2fffa8c99" translate="yes" xml:space="preserve">
          <source>Files are mapped from their &amp;ldquo;resolved&amp;rdquo; location to a &amp;ldquo;target&amp;rdquo; path where
they will appear at tool invocation (for example, a location inside a
Docker container.)  The target paths are used on the command line.</source>
          <target state="translated">Files are mapped from their &amp;ldquo;resolved&amp;rdquo; location to a &amp;ldquo;target&amp;rdquo; path where they will appear at tool invocation (for example, a location inside a Docker container.) The target paths are used on the command line.</target>
        </trans-unit>
        <trans-unit id="bcc89a237a7b21f62f6fa11e9a2ec23d829c971e" translate="yes" xml:space="preserve">
          <source>Files are staged to targets paths using either Docker volume binds (when
using containers) or symlinks (if not).  This staging step enables files
to be logically rearranged or renamed independent of their source layout.</source>
          <target state="translated">ファイルは、Dockerボリュームバインド(コンテナを使用している場合)またはシンボリックリンク(そうでない場合)のいずれかを使用して、ターゲットのパスにステージングされます。このステージングステップにより、ファイルをソースのレイアウトに依存せずに論理的に並べ替えたり、名前を変更したりすることができます。</target>
        </trans-unit>
        <trans-unit id="21603e1ba708cdbd283c01a27abe81f9c894226d" translate="yes" xml:space="preserve">
          <source>Flag to set number of
processes to start.</source>
          <target state="translated">起動するプロセス数を設定するフラグ。</target>
        </trans-unit>
        <trans-unit id="44837c9f276b1192a655fc8923cdbb89b01f3b2e" translate="yes" xml:space="preserve">
          <source>For MacOS X, other UNIXes or Windows packages prepared by the conda-forge project. Please follow instructions of conda-forge (&lt;a href=&quot;https://conda-forge.org/#about&quot;&gt;https://conda-forge.org/#about&lt;/a&gt;) for its installation, then perform:</source>
          <target state="translated">For MacOS X, other UNIXes or Windows packages prepared by the conda-forge project. Please follow instructions of conda-forge (&lt;a href=&quot;https://conda-forge.org/#about&quot;&gt;https://conda-forge.org/#about&lt;/a&gt;) for its installation, then perform:</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="092031be73aab286789aa64675eadd84cc89f36c" translate="yes" xml:space="preserve">
          <source>For this example, grab the test.json (and input file) from &lt;a href=&quot;https://github.com/CancerCollaboratory/dockstore-tool-bamstats&quot;&gt;https://github.com/CancerCollaboratory/dockstore-tool-bamstats&lt;/a&gt;</source>
          <target state="translated">For this example, grab the test.json (and input file) from &lt;a href=&quot;https://github.com/CancerCollaboratory/dockstore-tool-bamstats&quot;&gt;https://github.com/CancerCollaboratory/dockstore-tool-bamstats&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f8b9dbc33b13c7d2a299e389f90bf8f69d5e56a" translate="yes" xml:space="preserve">
          <source>Handler object for logging.</source>
          <target state="translated">ロギングのためのハンドラオブジェクト。</target>
        </trans-unit>
        <trans-unit id="37c33c0b8cbfdefe2a2383c2772729e7e315583b" translate="yes" xml:space="preserve">
          <source>Hook to construct a Process object (eg CommandLineTool) object from a document.</source>
          <target state="translated">ドキュメントからプロセスオブジェクト(例えばCommandLineTool)オブジェクトを構築するためのフックです。</target>
        </trans-unit>
        <trans-unit id="71228a12581a52a50045b0b59f2801816b399019" translate="yes" xml:space="preserve">
          <source>If a target is an output parameter, it will only run only the steps
that contribute to that output.  If a target is a workflow step, it
will run the workflow starting from that step.  If a target is an
input parameter, it will only run only the steps that are connected to
that input.</source>
          <target state="translated">ターゲットが出力パラメータの場合、その出力に寄与するステップのみを実行します。ターゲットがワークフローステップの場合、そのステップから始まるワークフローを実行します。ターゲットが入力パラメータの場合、その入力に接続されたステップのみを実行します。</target>
        </trans-unit>
        <trans-unit id="efb81175d6605c3dc76d6fced7e58fbe30363e77" translate="yes" xml:space="preserve">
          <source>If installing alongside another CWL implementation then</source>
          <target state="translated">他のCWL実装と一緒にインストールする場合</target>
        </trans-unit>
        <trans-unit id="1451e8b29eb5c12d9810220b2a6fbed624af6e4a" translate="yes" xml:space="preserve">
          <source>If necessary, updates the document to latest spec</source>
          <target state="translated">必要に応じて、ドキュメントを最新の仕様に更新</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">の場合は</target>
        </trans-unit>
        <trans-unit id="0604e44534f8bc25727c3c9d59df8e9a669be399" translate="yes" xml:space="preserve">
          <source>Import as a module</source>
          <target state="translated">モジュールとしてインポート</target>
        </trans-unit>
        <trans-unit id="8029c76d54e844a332432f9458c650da4821b7af" translate="yes" xml:space="preserve">
          <source>In addition, when providing custom subclasses of Process objects, you can override the following methods:</source>
          <target state="translated">また、プロセスオブジェクトのカスタムサブクラスを提供する際には、以下のメソッドをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="6b1bc4f30b8b11ab95078309006dc452d0e37c92" translate="yes" xml:space="preserve">
          <source>Initial cwltool Integration Pull Request</source>
          <target state="translated">初期の cwltool 統合プルリクエスト</target>
        </trans-unit>
        <trans-unit id="fe946271ec8ec380fa2b07764bb2719f95a12ea2" translate="yes" xml:space="preserve">
          <source>Input job files and Workflow steps (via the</source>
          <target state="translated">ジョブファイルとワークフローのステップを入力します。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="b49b2b32fda1c0a7220d686888f9d86d54c3eaa0" translate="yes" xml:space="preserve">
          <source>Installing cwltool in this fashion enables several new command line options.
The most general of these options is</source>
          <target state="translated">この方法で cwltool をインストールすると、いくつかの新しいコマンドラインオプションが有効になります。これらのオプションの中で最も一般的なものは</target>
        </trans-unit>
        <trans-unit id="f716e8c07f362381d01db7b0c2e040fd4fac270a" translate="yes" xml:space="preserve">
          <source>Installing the official package from PyPi (will install &amp;ldquo;cwltool&amp;rdquo; package as
well)</source>
          <target state="translated">Installing the official package from PyPi (will install &amp;ldquo;cwltool&amp;rdquo; package as well)</target>
        </trans-unit>
        <trans-unit id="df547e933a9e4d561f8ce5ec6e3376c017d8a6a1" translate="yes" xml:space="preserve">
          <source>Instructions for running these tests can be found in the Common Workflow Language Specification repository at &lt;a href=&quot;https://github.com/common-workflow-language/common-workflow-language/blob/main/CONFORMANCE_TESTS.md&quot;&gt;https://github.com/common-workflow-language/common-workflow-language/blob/main/CONFORMANCE_TESTS.md&lt;/a&gt;</source>
          <target state="translated">Instructions for running these tests can be found in the Common Workflow Language Specification repository at &lt;a href=&quot;https://github.com/common-workflow-language/common-workflow-language/blob/main/CONFORMANCE_TESTS.md&quot;&gt;https://github.com/common-workflow-language/common-workflow-language/blob/main/CONFORMANCE_TESTS.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1998d8a43bfb1c3471799aa453337fddd4386f5c" translate="yes" xml:space="preserve">
          <source>Interaction with containers: the MPIRequirement currently prepends its
commands to the front of the command line that is constructed. If you
wish to run a containerised application in parallel, for simple use
cases this does work with Singularity, depending upon the platform
setup. However this combination should be considered &amp;ldquo;alpha&amp;rdquo; &amp;ndash; please
do report any issues you have! This does not work with Docker at the
moment. (More precisely, you get</source>
          <target state="translated">Interaction with containers: the MPIRequirement currently prepends its commands to the front of the command line that is constructed. If you wish to run a containerised application in parallel, for simple use cases this does work with Singularity, depending upon the platform setup. However this combination should be considered &amp;ldquo;alpha&amp;rdquo; &amp;ndash; please do report any issues you have! This does not work with Docker at the moment. (More precisely, you get</target>
        </trans-unit>
        <trans-unit id="dd0b772b531103ab6c8089c3bcbce773b73a9ca8" translate="yes" xml:space="preserve">
          <source>Invoke the runnable item by calling</source>
          <target state="translated">を呼び出して実行可能な項目を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8716ac7d774c04ba647694b2b58a2a35c506aecb" translate="yes" xml:space="preserve">
          <source>It is possible that the</source>
          <target state="translated">の可能性があります。</target>
        </trans-unit>
        <trans-unit id="93bf901ea1836222d52c7351444f552db1d9cefd" translate="yes" xml:space="preserve">
          <source>Iterate on the</source>
          <target state="translated">で反復処理を行います。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">キー</target>
        </trans-unit>
        <trans-unit id="1ddabca6541f75df416c7c5aa954dbaec8319a27" translate="yes" xml:space="preserve">
          <source>Leveraging SoftwareRequirements (Beta)</source>
          <target state="translated">ソフトウェア要件の活用(ベータ版</target>
        </trans-unit>
        <trans-unit id="fd166d8d34a7dfbbf67a879b8d81fea8fa5ff13b" translate="yes" xml:space="preserve">
          <source>List of all environment can be seen using:</source>
          <target state="translated">全ての環境のリストを使用して見ることができます。</target>
        </trans-unit>
        <trans-unit id="9c5886971925d5d1738499100fc81aba04dba340" translate="yes" xml:space="preserve">
          <source>List[str]</source>
          <target state="translated">リスト[str]</target>
        </trans-unit>
        <trans-unit id="82af872174103e74d43e97a4d5b8a5afae8de5e9" translate="yes" xml:space="preserve">
          <source>Mapping Files - Implementation</source>
          <target state="translated">マッピングファイル-実装</target>
        </trans-unit>
        <trans-unit id="693c858aceea6d3cb5abfbfbfb64daf1f156ee52" translate="yes" xml:space="preserve">
          <source>Mapping[str,str]</source>
          <target state="translated">マッピング[str,str]</target>
        </trans-unit>
        <trans-unit id="d464280664e72b18f37182ff558e6ba47e878777" translate="yes" xml:space="preserve">
          <source>Modeling a CWL document as RDF</source>
          <target state="translated">CWL文書をRDFとしてモデリングする</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">なし</target>
        </trans-unit>
        <trans-unit id="27d5991ece87b5153f5b21d77d2392207f82dbb2" translate="yes" xml:space="preserve">
          <source>Now imagine deploying cwltool on a cluster with Software Modules installed
and that a</source>
          <target state="translated">ここで、ソフトウェアモジュールがインストールされているクラスタに cwltool をデプロイし、そのクラスタの</target>
        </trans-unit>
        <trans-unit id="ec9855307dbf16a947bde7c0e99e2e0692e4ae44" translate="yes" xml:space="preserve">
          <source>One such &amp;ldquo;user space&amp;rdquo; friendly docker replacement is</source>
          <target state="translated">One such &amp;ldquo;user space&amp;rdquo; friendly docker replacement is</target>
        </trans-unit>
        <trans-unit id="2a22e1d6614075d0ace611df0e499d88b795e1ff" translate="yes" xml:space="preserve">
          <source>Or if you have multiple CWL implementations installed and you want to override
the default cwl-runner use:</source>
          <target state="translated">あるいは、複数のCWL実装がインストールされていて、デフォルトのcwl-runnerの使用をオーバーライドしたい場合。</target>
        </trans-unit>
        <trans-unit id="ad6def60ad56ab5f222a9441958ca49aa462a523" translate="yes" xml:space="preserve">
          <source>Or you can install from source:</source>
          <target state="translated">もしくはソースからインストールしてください。</target>
        </trans-unit>
        <trans-unit id="1eabb8f20988fd387ba7fca9f3860fe5bfb6ff1b" translate="yes" xml:space="preserve">
          <source>Output of a process is reported by an output callback.</source>
          <target state="translated">プロセスの出力は、出力コールバックによって報告されます。</target>
        </trans-unit>
        <trans-unit id="78d51cc7d80c870854ebd09b9e802aea871a5ac9" translate="yes" xml:space="preserve">
          <source>Overrides can be specified either on the command line, or as part of the job
input document.  Workflow steps are identified using the name of the workflow
file followed by the step name as a document fragment identifier &amp;ldquo;#id&amp;rdquo;.
Override identifiers are relative to the toplevel workflow document.</source>
          <target state="translated">Overrides can be specified either on the command line, or as part of the job input document. Workflow steps are identified using the name of the workflow file followed by the step name as a document fragment identifier &amp;ldquo;#id&amp;rdquo;. Override identifiers are relative to the toplevel workflow document.</target>
        </trans-unit>
        <trans-unit id="38c28132c893f31461d1047c9d74fb720adbbb1b" translate="yes" xml:space="preserve">
          <source>Overriding workflow requirements at load time</source>
          <target state="translated">ロード時のワークフロー要件のオーバーライド</target>
        </trans-unit>
        <trans-unit id="09bd6a353a7bb8a33e37cfee71ada9fc9ce37d89" translate="yes" xml:space="preserve">
          <source>PATH</source>
          <target state="translated">パス</target>
        </trans-unit>
        <trans-unit id="3122cf7004cfc13aa4e03358bd7e9e73ab81f01c" translate="yes" xml:space="preserve">
          <source>Remember, if co-installing multiple CWL implementations then you need to
maintain which implementation</source>
          <target state="translated">複数のCWL実装を共同インストールする場合は、どの実装を維持する必要があることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="4be3a33ff7a3a551938641a977f9492acce9e42e" translate="yes" xml:space="preserve">
          <source>Resolve a relative document identifier to an absolute one which can be fetched.</source>
          <target state="translated">相対的な文書識別子を、取得可能な絶対的な文書識別子に解決します。</target>
        </trans-unit>
        <trans-unit id="cc1501cc8e277d7d91f5faa9fcf0582c7652e5b0" translate="yes" xml:space="preserve">
          <source>Return a file system access object.</source>
          <target state="translated">ファイルシステムアクセスオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="baa91ea5634b713b99f24149eb59b73892a568c4" translate="yes" xml:space="preserve">
          <source>Return version string.</source>
          <target state="translated">バージョン文字列を返します。</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">走れ</target>
        </trans-unit>
        <trans-unit id="4d53700e50c33734cca10e9ab7341a80bbf19e41" translate="yes" xml:space="preserve">
          <source>Run on the command line</source>
          <target state="translated">コマンドラインで実行</target>
        </trans-unit>
        <trans-unit id="a1ff87c8d69b6a4e910bd7d9bb939803a659140a" translate="yes" xml:space="preserve">
          <source>Running MPI-based tools that need to be launched</source>
          <target state="translated">起動が必要な MPI ベースのツールの実行</target>
        </trans-unit>
        <trans-unit id="1e4c379e1b4e36383f0520500c6baf64988f7ec8" translate="yes" xml:space="preserve">
          <source>Running a tool or workflow from remote or local locations</source>
          <target state="translated">リモートまたはローカルの場所からツールやワークフローを実行する</target>
        </trans-unit>
        <trans-unit id="297895e79ac3df0268816d748743f47696c354c6" translate="yes" xml:space="preserve">
          <source>Running basic tests</source>
          <target state="translated">基本的なテストの実行</target>
        </trans-unit>
        <trans-unit id="84217ae958dbf377fd7729b0aaa035378b4d3ba0" translate="yes" xml:space="preserve">
          <source>Running only part of a workflow</source>
          <target state="translated">ワークフローの一部のみを実行する</target>
        </trans-unit>
        <trans-unit id="ad47e6267f59496027a52a912cf7fa26d3c55c8b" translate="yes" xml:space="preserve">
          <source>Running tests locally</source>
          <target state="translated">ローカルでテストを実行する</target>
        </trans-unit>
        <trans-unit id="cae259ed096e123f5b8dfe2ae3d6b4e0d214207c" translate="yes" xml:space="preserve">
          <source>Running the entire suite of CWL conformance tests:</source>
          <target state="translated">CWL適合性試験の全スイートを実行します。</target>
        </trans-unit>
        <trans-unit id="04d385260191ab6b98a3f1f94c595c07ce5da790" translate="yes" xml:space="preserve">
          <source>Simple command:</source>
          <target state="translated">シンプルなコマンド。</target>
        </trans-unit>
        <trans-unit id="560dd9c678964aeb18c938ce162939f0f1fda947" translate="yes" xml:space="preserve">
          <source>So consider the resolvers configuration file
(</source>
          <target state="translated">そこで、リゾルバの設定ファイル (</target>
        </trans-unit>
        <trans-unit id="b651eda169e0f33582ff99270505ea4799dcf827" translate="yes" xml:space="preserve">
          <source>SoftwareRequirement</source>
          <target state="translated">ソフトウェア要求事項</target>
        </trans-unit>
        <trans-unit id="4df0f1bc6c35e8b6ffa5aa62b08dda74095c7388" translate="yes" xml:space="preserve">
          <source>Some shared computing environments don&amp;rsquo;t support Docker software containers for technical or policy reasons.
As a work around, the CWL reference runner supports using alternative</source>
          <target state="translated">Some shared computing environments don&amp;rsquo;t support Docker software containers for technical or policy reasons. As a work around, the CWL reference runner supports using alternative</target>
        </trans-unit>
        <trans-unit id="a7182f1e2264b671d46df61e0a45cdffae703b9c" translate="yes" xml:space="preserve">
          <source>Sometimes a workflow needs additional requirements to run in a particular
environment or with a particular dataset.  To avoid the need to modify the
underlying workflow, cwltool supports requirement &amp;ldquo;overrides&amp;rdquo;.</source>
          <target state="translated">Sometimes a workflow needs additional requirements to run in a particular environment or with a particular dataset. To avoid the need to modify the underlying workflow, cwltool supports requirement &amp;ldquo;overrides&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="e4ce9d3c3b5c72e81ad7857ee4060ed1907da7ea" translate="yes" xml:space="preserve">
          <source>Specifications - Implementation</source>
          <target state="translated">仕様-実装</target>
        </trans-unit>
        <trans-unit id="32930cf887a459db1cdf05827e2752a203dd5a96" translate="yes" xml:space="preserve">
          <source>Take a resource request and turn it into a concrete resource assignment.</source>
          <target state="translated">リソースのリクエストを受けて、それを具体的なリソースの割り当てに変えます。</target>
        </trans-unit>
        <trans-unit id="47364f1f02103ed7c20e3ef3862c089cd5ec0957" translate="yes" xml:space="preserve">
          <source>Technical outline of how cwltool works internally, for maintainers.</source>
          <target state="translated">cwltool が内部的にどのように動作するのか、メンテナ向けの技術的な概要。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="4aa5b85f2c0caaf31de354374cb257362d85d454" translate="yes" xml:space="preserve">
          <source>The CWL specification allows URIs to be attached to</source>
          <target state="translated">CWL仕様では、URIを</target>
        </trans-unit>
        <trans-unit id="ce6ce6d535d5cdb691e09eec1eaaf8c19cf2932e" translate="yes" xml:space="preserve">
          <source>The CommandLineTool</source>
          <target state="translated">コマンドラインツール</target>
        </trans-unit>
        <trans-unit id="783c668b41492942fe69e6af173046ee05582e4f" translate="yes" xml:space="preserve">
          <source>The Conda plugin can be endlessly configured, but a sensible set of defaults
that has proven a powerful stack for dependency management within the Galaxy tool
development ecosystem can be enabled by simply passing cwltool the</source>
          <target state="translated">Conda プラグインは無限に設定することができますが、Galaxy ツール開発のエコシステムの中で依存関係管理のための強力なスタックであることが証明されている賢明なデフォルトのセットは、cwltool に</target>
        </trans-unit>
        <trans-unit id="009484a1c8d63082f536e7064f8ab7bcff4b30f3" translate="yes" xml:space="preserve">
          <source>The GitHub repository for the CWL specifications contains a script that tests a CWL
implementation against a wide array of valid CWL files using the &lt;a href=&quot;https://github.com/common-workflow-language/cwltest&quot;&gt;cwltest&lt;/a&gt;
program</source>
          <target state="translated">The GitHub repository for the CWL specifications contains a script that tests a CWL implementation against a wide array of valid CWL files using the &lt;a href=&quot;https://github.com/common-workflow-language/cwltest&quot;&gt;cwltest&lt;/a&gt; program</target>
        </trans-unit>
        <trans-unit id="9525781e4e3916cd3626ce5197dee05ac2cc0aba" translate="yes" xml:space="preserve">
          <source>The WorkflowJob iterates over each WorkflowJobStep and determines if the
inputs the step are ready.</source>
          <target state="translated">WorkflowJob は、各 WorkflowJobStep を反復処理し、ステップの入力が準備ができているかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="e88468db83b57a07c7fb8ecdbc8b4e6222e211ff" translate="yes" xml:space="preserve">
          <source>The cwltool source code repository&amp;rsquo;s test directory is setup with a very simple
directory that defines a set of &amp;ldquo;Galaxy  packages&amp;rdquo; (but really just defines one
package named</source>
          <target state="translated">The cwltool source code repository&amp;rsquo;s test directory is setup with a very simple directory that defines a set of &amp;ldquo;Galaxy packages&amp;rdquo; (but really just defines one package named</target>
        </trans-unit>
        <trans-unit id="93ea01a952995a84e0ed0ad4c0f7d893169520b7" translate="yes" xml:space="preserve">
          <source>The easiest way to use cwltool to run a tool or workflow from Python is to use a Factory</source>
          <target state="translated">cwltoolを使ってPythonからツールやワークフローを実行する最も簡単な方法は、Factoryを使うことです。</target>
        </trans-unit>
        <trans-unit id="92a1c344d0085d007eeb64d43a2e166f8c12d4e1" translate="yes" xml:space="preserve">
          <source>The example can be executed using the command:</source>
          <target state="translated">この例は、コマンドを使って実行できます。</target>
        </trans-unit>
        <trans-unit id="7dd7db0043806d5125c3f0acda2e5e49dfc48bb0" translate="yes" xml:space="preserve">
          <source>The following functions can be passed to main() to override or augment
the listed behaviors.</source>
          <target state="translated">以下の関数を main()に渡すことで、リストにある動作をオーバーライドしたり、拡張したりすることができます。</target>
        </trans-unit>
        <trans-unit id="a257430769f72f6e5a5a47a42704a1cef1628c14" translate="yes" xml:space="preserve">
          <source>The following functions can be set in LoadingContext to override or
augment the listed behaviors.</source>
          <target state="translated">以下の関数を LoadingContext に設定することで、リストされた動作をオーバーライドしたり、拡張したりすることができます。</target>
        </trans-unit>
        <trans-unit id="a9b338df452daaeeea1027085365598748cd09c5" translate="yes" xml:space="preserve">
          <source>The following functions can be set in RuntimeContext to override or
augment the listed behaviors.</source>
          <target state="translated">以下の関数を RuntimeContext に設定して、リストされた動作をオーバーライドしたり、拡張したりすることができます。</target>
        </trans-unit>
        <trans-unit id="0245c91477d606d998f0354baabf075fbbb2f615" translate="yes" xml:space="preserve">
          <source>The format of the &amp;ldquo;overrides&amp;rdquo; object is a mapping of item identifier (workflow,
workflow step, or command line tool) to the process requirements that should be applied.</source>
          <target state="translated">The format of the &amp;ldquo;overrides&amp;rdquo; object is a mapping of item identifier (workflow, workflow step, or command line tool) to the process requirements that should be applied.</target>
        </trans-unit>
        <trans-unit id="f6df7865a85f99a0ada99ffe88cdecfbaec1b084" translate="yes" xml:space="preserve">
          <source>The host-specific parameters are configured in a simple YAML file
(specified with the</source>
          <target state="translated">ホスト固有のパラメータはシンプルなYAMLファイルで設定されます(</target>
        </trans-unit>
        <trans-unit id="c1081c948f7ae886939402366b7182052bdb525a" translate="yes" xml:space="preserve">
          <source>The job method configures the CommandLineJob object by setting public
attributes</source>
          <target state="translated">jobメソッドは、パブリック属性を設定することでCommandLineJobオブジェクトを設定します。</target>
        </trans-unit>
        <trans-unit id="2aa848855fa2ccc3fe3d65e68ab3a0eea8a799b1" translate="yes" xml:space="preserve">
          <source>The job method iterates over file and directories inputs to the
CommandLineTool and creates a &amp;ldquo;path map&amp;rdquo;.</source>
          <target state="translated">The job method iterates over file and directories inputs to the CommandLineTool and creates a &amp;ldquo;path map&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="800df28d60da9d15fb1f60b9e17fcc1b36338dae" translate="yes" xml:space="preserve">
          <source>The outer list indicates that one plugin is being enabled, the plugin parameters are
defined as a dictionary for this one list item. There is only one required parameter
for the plugin above, this is</source>
          <target state="translated">外側のリストは、1つのプラグインが有効になっていることを示し、プラグインのパラメータは、この1つのリスト項目のための辞書として定義されています。上記のプラグインに必要なパラメータは1つだけで、これは</target>
        </trans-unit>
        <trans-unit id="e6789c847d0c820010a6848c5d70017d2e81f90a" translate="yes" xml:space="preserve">
          <source>The plugin framework for managing resolution of these software requirements
as maintained as part of &lt;a href=&quot;https://github.com/galaxyproject/galaxy/tree/dev/packages/tool_util&quot;&gt;galaxy-tool-util&lt;/a&gt; - a small,
portable subset of the Galaxy project. More information on configuration and implementation can be found
at the following links:</source>
          <target state="translated">The plugin framework for managing resolution of these software requirements as maintained as part of &lt;a href=&quot;https://github.com/galaxyproject/galaxy/tree/dev/packages/tool_util&quot;&gt;galaxy-tool-util&lt;/a&gt; - a small, portable subset of the Galaxy project. More information on configuration and implementation can be found at the following links:</target>
        </trans-unit>
        <trans-unit id="d6ad97129a996250fb767014c5e68591d35607e2" translate="yes" xml:space="preserve">
          <source>The previous examples demonstrated leveraging existing infrastructure to
provide requirements for CWL tools. If instead a real package manager is used
cwltool has the opportunity to install requirements as needed. While initial
support for Homebrew/Linuxbrew plugins is available, the most developed such
plugin is for the &lt;a href=&quot;https://conda.io/docs/#&quot;&gt;Conda&lt;/a&gt; package manager. Conda has the nice properties
of allowing multiple versions of a package to be installed simultaneously,
not requiring evaluated permissions to install Conda itself or packages using
Conda, and being cross platform. For these reasons, cwltool may run as a normal
user, install its own Conda environment and manage multiple versions of Conda packages
on both Linux and Mac OS X.</source>
          <target state="translated">The previous examples demonstrated leveraging existing infrastructure to provide requirements for CWL tools. If instead a real package manager is used cwltool has the opportunity to install requirements as needed. While initial support for Homebrew/Linuxbrew plugins is available, the most developed such plugin is for the &lt;a href=&quot;https://conda.io/docs/#&quot;&gt;Conda&lt;/a&gt; package manager. Conda has the nice properties of allowing multiple versions of a package to be installed simultaneously, not requiring evaluated permissions to install Conda itself or packages using Conda, and being cross platform. For these reasons, cwltool may run as a normal user, install its own Conda environment and manage multiple versions of Conda packages on both Linux and Mac OS X.</target>
        </trans-unit>
        <trans-unit id="3920be250648fa09b430bbb53b0c4ee6b4f86bb1" translate="yes" xml:space="preserve">
          <source>The primary command to use.</source>
          <target state="translated">使用する主なコマンド。</target>
        </trans-unit>
        <trans-unit id="129176d0f86abdb6eb3f0e0c20c9070a2863c83f" translate="yes" xml:space="preserve">
          <source>The reference implementation consists of two packages.  The</source>
          <target state="translated">リファレンス実装は2つのパッケージで構成されています。このパッケージには</target>
        </trans-unit>
        <trans-unit id="e4026c07814b87954bb4a2affad35f459bba790b" translate="yes" xml:space="preserve">
          <source>The resolvers configuration file in the above example was simply:</source>
          <target state="translated">上記の例のリゾルバの設定ファイルは、単純なものでした。</target>
        </trans-unit>
        <trans-unit id="53695fabd7948c43be3d46ec05e1f8ddafd5a6fa" translate="yes" xml:space="preserve">
          <source>Then cwltool will simply find that</source>
          <target state="translated">そうすると、cwltoolは単純に</target>
        </trans-unit>
        <trans-unit id="9ff9ebd875aa404267950a3bc5a88aeacea49d7b" translate="yes" xml:space="preserve">
          <source>This example demonstrates both that cwltool can leverage
existing software installations and also handle workflows with dependencies
on different versions of the same software and libraries. However the above
example does require an existing module setup so it is impossible to test this example
&amp;ldquo;out of the box&amp;rdquo; with cwltool. For a more isolated test that demonstrates all
the same concepts - the resolver plugin type</source>
          <target state="translated">This example demonstrates both that cwltool can leverage existing software installations and also handle workflows with dependencies on different versions of the same software and libraries. However the above example does require an existing module setup so it is impossible to test this example &amp;ldquo;out of the box&amp;rdquo; with cwltool. For a more isolated test that demonstrates all the same concepts - the resolver plugin type</target>
        </trans-unit>
        <trans-unit id="fdd758d5b2480c4f4c6217826510b6b9cc280777" translate="yes" xml:space="preserve">
          <source>This is a full example that works since resolving &amp;ldquo;Galaxy packages&amp;rdquo; has no
external requirements. Try it out by executing the following command from cwltool&amp;rsquo;s
root directory:</source>
          <target state="translated">This is a full example that works since resolving &amp;ldquo;Galaxy packages&amp;rdquo; has no external requirements. Try it out by executing the following command from cwltool&amp;rsquo;s root directory:</target>
        </trans-unit>
        <trans-unit id="0932279243787d5ccec2804102551da51122c76c" translate="yes" xml:space="preserve">
          <source>This is saying if cwltool encounters a requirement of</source>
          <target state="translated">これは、もし cwltool が</target>
        </trans-unit>
        <trans-unit id="8ddd63a9d6b88b45bf7aef059d727db1a5d718ed" translate="yes" xml:space="preserve">
          <source>This is the reference implementation of the Common Workflow Language.  It is
intended to be feature complete and provide comprehensive validation of CWL
files as well as provide other tools related to working with CWL.</source>
          <target state="translated">こ れは、 Common Workflow Language の参照実装です。完全な機能を持ち、CWLファイルの包括的な検証を提供するとともに、CWLでの作業に関連する他のツールを提供することを意図しています。</target>
        </trans-unit>
        <trans-unit id="249f309540bb368942ffb5a434497ec8311a28d9" translate="yes" xml:space="preserve">
          <source>This is written and tested for
&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;</source>
          <target state="translated">This is written and tested for &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c65ff54a843e37d8a0303a7a8569abf039a460c" translate="yes" xml:space="preserve">
          <source>To construct custom types for CommandLineTool, Workflow, or
ExpressionTool, provide a custom</source>
          <target state="translated">CommandLineTool、Workflow、またはExpressionToolのためのカスタム型を構築するために、カスタムの</target>
        </trans-unit>
        <trans-unit id="61c3646a654731452aa364cfdb2b930eb05199f1" translate="yes" xml:space="preserve">
          <source>To discuss some of these plugins and how to configure them, first consider the
following</source>
          <target state="translated">これらのプラグインのいくつかとその設定方法を説明するために、まず以下のことを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="b441fa482fd9b9ebb44724c62264cfa2b99030bc" translate="yes" xml:space="preserve">
          <source>To run CWL successfully with boot2docker you need to set the</source>
          <target state="translated">boot2dockerでCWLを正常に実行するためには</target>
        </trans-unit>
        <trans-unit id="2ae1bf4a16fa81a731804cd7578988ffb6280371" translate="yes" xml:space="preserve">
          <source>To run the basic tests after installing</source>
          <target state="translated">インストール後に基本的なテストを実行するには</target>
        </trans-unit>
        <trans-unit id="0471c5fcb8cd8511ad436af3a8dce9d615fa396e" translate="yes" xml:space="preserve">
          <source>To run various tests in all supported Python environments we use &lt;a href=&quot;https://github.com/common-workflow-language/cwltool/tree/main/tox.ini&quot;&gt;tox&lt;/a&gt;. To run the test suite in all supported Python environments
first downloading the complete code repository (see the</source>
          <target state="translated">To run various tests in all supported Python environments we use &lt;a href=&quot;https://github.com/common-workflow-language/cwltool/tree/main/tox.ini&quot;&gt;tox&lt;/a&gt;. To run the test suite in all supported Python environments first downloading the complete code repository (see the</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">タイプ</target>
        </trans-unit>
        <trans-unit id="2f121e15844bedf5379469686f75cb0d9478e818" translate="yes" xml:space="preserve">
          <source>Under the hood, conda setups virtual environments before installing</source>
          <target state="translated">コンダは、インストール前に仮想環境を設定します。</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="5648c9976b004558e2fa313aac3acd153bcf7f63" translate="yes" xml:space="preserve">
          <source>Use CWL</source>
          <target state="translated">CWLを使用する</target>
        </trans-unit>
        <trans-unit id="e76b8c2d28cae2e8550bcf550e8ad6e7d6d28981" translate="yes" xml:space="preserve">
          <source>Use with GA4GH Tool Registry API</source>
          <target state="translated">GA4GHツールレジストリAPIとの併用</target>
        </trans-unit>
        <trans-unit id="c81d1a942d99267bc5291f06c59f209fd25ab4f5" translate="yes" xml:space="preserve">
          <source>Use with boot2docker</source>
          <target state="translated">boot2dockerとの併用</target>
        </trans-unit>
        <trans-unit id="57f2b181d0a5e79a147ea1cdf41457f58dbbb3c9" translate="yes" xml:space="preserve">
          <source>Users</source>
          <target state="translated">利用者</target>
        </trans-unit>
        <trans-unit id="e819ee2642fc33a7a3091ba64523820a329133e9" translate="yes" xml:space="preserve">
          <source>Using user-space replacements for Docker</source>
          <target state="translated">Dockerのユーザースペースの置換を使用する</target>
        </trans-unit>
        <trans-unit id="f9f29163959daa892e350188188e2084b37de6bc" translate="yes" xml:space="preserve">
          <source>Utilizing</source>
          <target state="translated">活用</target>
        </trans-unit>
        <trans-unit id="684c57b5bc35409aa356e78d006b99af454db867" translate="yes" xml:space="preserve">
          <source>Validates the document based on cwlVersion</source>
          <target state="translated">cwlVersionに基づいてドキュメントを検証します。</target>
        </trans-unit>
        <trans-unit id="580ec1dec4000be4264b645a2c490cedba23402d" translate="yes" xml:space="preserve">
          <source>Visualizing a CWL document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c1a4aa253dd164de54eca8f445ddf106d765f6" translate="yes" xml:space="preserve">
          <source>When a step is ready, it constructs an input object for that step and
iterates on the</source>
          <target state="translated">ステップの準備ができたら、そのステップの入力オブジェクトを構築して</target>
        </trans-unit>
        <trans-unit id="6de2cc55943c36062af05b1c8c093348c38289ea" translate="yes" xml:space="preserve">
          <source>When a step job completes and receives an output callback, the
job outputs are assigned to the output of the workflow step.</source>
          <target state="translated">ステップジョブが完了し、出力コールバックを受信すると、ジョブの出力がワークフローステップの出力に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="c92ef88f9e32137a6a94a844cad81036af380066" translate="yes" xml:space="preserve">
          <source>When all steps are complete, the intermediate files are moved to a final
workflow output, intermediate directories are deleted, and the output
callback for the workflow is called.</source>
          <target state="translated">すべてのステップが完了すると、中間ファイルが最終的なワークフロー出力に移動され、中間ディレクトリが削除され、ワークフローの出力コールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="69438e73d3bacabde1cb3bd0a9e057845317c4f3" translate="yes" xml:space="preserve">
          <source>With this we can use the seqtk example above without Docker and without
any externally managed services - cwltool should install everything it needs
and create an environment for the tool. Try it out with the follwing command:</source>
          <target state="translated">これで、Dockerを使わず、外部管理されたサービスを使わずに上のseqtkの例を使うことができます-cwltoolは必要なものをすべてインストールして、ツールのための環境を作ります。以下のコマンドで試してみてください。</target>
        </trans-unit>
        <trans-unit id="d9178deba9a72b7a6f94fb7b5141d8dd9905574f" translate="yes" xml:space="preserve">
          <source>Without these, some examples in the CWL tutorials at &lt;a href=&quot;http://www.commonwl.org/user_guide/&quot;&gt;http://www.commonwl.org/user_guide/&lt;/a&gt; may not work.</source>
          <target state="translated">Without these, some examples in the CWL tutorials at &lt;a href=&quot;http://www.commonwl.org/user_guide/&quot;&gt;http://www.commonwl.org/user_guide/&lt;/a&gt; may not work.</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">ワークフロー</target>
        </trans-unit>
        <trans-unit id="ed854ac3b681198bd283e0d124295976f5743a04" translate="yes" xml:space="preserve">
          <source>Workflow.make_workflow_step</source>
          <target state="translated">Workflow.make_workflow_step</target>
        </trans-unit>
        <trans-unit id="906614210d78151443753d46537f5ceb7a41acda" translate="yes" xml:space="preserve">
          <source>WorkflowJob</source>
          <target state="translated">ワークフロージョブ</target>
        </trans-unit>
        <trans-unit id="fff47b9336bc43af0c52a68aabe72928f251002c" translate="yes" xml:space="preserve">
          <source>WorkflowJobStep</source>
          <target state="translated">ワークフロージョブステップ</target>
        </trans-unit>
        <trans-unit id="22d0b06ab6697336780029eb518e6cdd2c05382e" translate="yes" xml:space="preserve">
          <source>You can also use</source>
          <target state="translated">また、以下のような使い方もできます。</target>
        </trans-unit>
        <trans-unit id="47ed2520690353cdd4ebed07eaed2e9dd9e70e78" translate="yes" xml:space="preserve">
          <source>You can run a partial workflow with the</source>
          <target state="translated">部分的なワークフローを</target>
        </trans-unit>
        <trans-unit id="fa7e56f6231fb9e7fa85a83b357c0ed561a36136" translate="yes" xml:space="preserve">
          <source>You can set cwltool options in the environment with CWLTOOL_OPTIONS,
these will be inserted at the beginning of the command line:</source>
          <target state="translated">CWLTOOL_OPTIONSで環境内のcwltoolのオプションを設定することができ、これらはコマンドラインの先頭に挿入されます。</target>
        </trans-unit>
        <trans-unit id="02cc61578495257790612fe9accd4bfdaf378c6c" translate="yes" xml:space="preserve">
          <source>You may also want to have the following installed:
node.js
Docker, udocker, or Singularity (optional)</source>
          <target state="translated">次のものをインストールしておくとよいでしょう。node.js Docker、udocker、またはSingularity(オプション)。</target>
        </trans-unit>
        <trans-unit id="680c7be6c45745a41f26cc8488b137a8fd32a445" translate="yes" xml:space="preserve">
          <source>Your operating system may offer cwltool directly. For &lt;a href=&quot;https://tracker.debian.org/pkg/cwltool&quot;&gt;Debian&lt;/a&gt;  or &lt;a href=&quot;https://launchpad.net/ubuntu/+source/cwltool&quot;&gt;Ubuntu&lt;/a&gt; try</source>
          <target state="translated">Your operating system may offer cwltool directly. For &lt;a href=&quot;https://tracker.debian.org/pkg/cwltool&quot;&gt;Debian&lt;/a&gt; or &lt;a href=&quot;https://launchpad.net/ubuntu/+source/cwltool&quot;&gt;Ubuntu&lt;/a&gt; try</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="c3cf335fea12ff7e5a8217b30fad41eaede77875" translate="yes" xml:space="preserve">
          <source>and (defaults to latest when a version is not specified)</source>
          <target state="translated">と (バージョンが指定されていない場合はデフォルトは最新)</target>
        </trans-unit>
        <trans-unit id="85bfe18c832d837ec9710715ba6266055ec27a69" translate="yes" xml:space="preserve">
          <source>and additionally run a specific test using this format:</source>
          <target state="translated">さらに、このフォーマットを使用して特定のテストを実行します。</target>
        </trans-unit>
        <trans-unit id="e932208b602e59e34a78a1cdb92fc649f2776a84" translate="yes" xml:space="preserve">
          <source>and defines the plugin type. This parameter
is required for all plugins. The available plugins and the parameters
available for each are documented (incompletely) &lt;a href=&quot;https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html&quot;&gt;here&lt;/a&gt;.
Unfortunately, this documentation is in the context of Galaxy tool</source>
          <target state="translated">and defines the plugin type. This parameter is required for all plugins. The available plugins and the parameters available for each are documented (incompletely) &lt;a href=&quot;https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html&quot;&gt;here&lt;/a&gt;. Unfortunately, this documentation is in the context of Galaxy tool</target>
        </trans-unit>
        <trans-unit id="47158267da6963585742cd0bed7201cf8dc8d316" translate="yes" xml:space="preserve">
          <source>and running a specfic test env using:</source>
          <target state="translated">を使用して specfic テスト環境を実行しています。</target>
        </trans-unit>
        <trans-unit id="0718dd9f5b100c2caa47abdd27557773fecdd234" translate="yes" xml:space="preserve">
          <source>and therefore works with Docker images only, native
Singularity images are not supported. To use Singularity as the Docker container
runtime, provide</source>
          <target state="translated">はDockerイメージのみで動作し、ネイティブのSingularityイメージはサポートされていません。DockerコンテナランタイムとしてSingularityを使用するには、以下を提供します。</target>
        </trans-unit>
        <trans-unit id="7907fd18c189ea5e6f0ac62a2001364846784db2" translate="yes" xml:space="preserve">
          <source>at version</source>
          <target state="translated">アットバージョン</target>
        </trans-unit>
        <trans-unit id="b9ee2a978acf9d0876ac410da6716766ad732b12" translate="yes" xml:space="preserve">
          <source>baseCommand</source>
          <target state="translated">ベースコマンド</target>
        </trans-unit>
        <trans-unit id="dabb493192c1cc70f1a9350301ca499e500b0e99" translate="yes" xml:space="preserve">
          <source>boot2docker runs Docker inside a virtual machine and it only mounts</source>
          <target state="translated">boot2dockerは仮想マシンの中でDockerを実行し、マウントするだけです。</target>
        </trans-unit>
        <trans-unit id="15c7dcc779625e5519fbdd3d9380c4c787605003" translate="yes" xml:space="preserve">
          <source>but the concepts apply equally well
to Environment Modules or Conda packages (described below) for instance.</source>
          <target state="translated">しかし、この概念は例えば環境モジュールやCondaパッケージ(後述)にも同様に適用されます。</target>
        </trans-unit>
        <trans-unit id="7ac414f6fe345f65858399a4b6364fafaf5a9211" translate="yes" xml:space="preserve">
          <source>by default, but after
sourcing this module with the command</source>
          <target state="translated">デフォルトでは、このモジュールは</target>
        </trans-unit>
        <trans-unit id="7851814f3d84115f5198fac35f6046cc94b812d4" translate="yes" xml:space="preserve">
          <source>callback.  This yields a
CommandLineTool, Workflow, or ExpressionTool.  For workflows, this
recursively constructs each workflow step.</source>
          <target state="translated">コールバックを使用しています。これは、CommandLineTool、Workflow、またはExpressionToolを生成します。ワークフローの場合、これは各ワークフロー・ステップを再帰的に構築します。</target>
        </trans-unit>
        <trans-unit id="b720c83eb17bc4e760fb64e0f74c234436ca3768" translate="yes" xml:space="preserve">
          <source>can be used.</source>
          <target state="translated">を使用することができます。</target>
        </trans-unit>
        <trans-unit id="b75c2608a9b0fc5c9093e142d60642c3e106e952" translate="yes" xml:space="preserve">
          <source>can pass all CWL v1.0 conformance tests, except
those involving Docker container ENTRYPOINTs.</source>
          <target state="translated">は、DockerコンテナのENTRYPOINTを含むものを除き、すべてのCWL v1.0コンフォーマンステストに合格することができます。</target>
        </trans-unit>
        <trans-unit id="baa5fb57fab48a8751b566f60fc58746257f7893" translate="yes" xml:space="preserve">
          <source>can run tool and workflow descriptions on both local and remote
systems via its support for HTTP[S] URLs.</source>
          <target state="translated">は、HTTP[S]URL をサポートしているため、ローカルシステムとリモートシステムの両方でツールとワークフローの記述を実行することができます。</target>
        </trans-unit>
        <trans-unit id="a8724bd36b9e3b32b5a719e80bf0f89e96f1c3e6" translate="yes" xml:space="preserve">
          <source>can use &lt;a href=&quot;http://singularity.lbl.gov/&quot;&gt;Singularity&lt;/a&gt; version 2.6.1
or later as a Docker container runtime.</source>
          <target state="translated">can use &lt;a href=&quot;http://singularity.lbl.gov/&quot;&gt;Singularity&lt;/a&gt; version 2.6.1 or later as a Docker container runtime.</target>
        </trans-unit>
        <trans-unit id="5222c3e91d55bacaa99573daad7de39d47d7468f" translate="yes" xml:space="preserve">
          <source>command line option to</source>
          <target state="translated">コマンドラインオプション</target>
        </trans-unit>
        <trans-unit id="6b1d2fbe49934d727dd6b81a68e33f0214fc95a2" translate="yes" xml:space="preserve">
          <source>construct_tool_object</source>
          <target state="translated">コンストラクトツールオブジェクト</target>
        </trans-unit>
        <trans-unit id="42bb077d98fe621429eaa5fdd75f8b60cd10cfdb" translate="yes" xml:space="preserve">
          <source>copies of the same single process
image run at the same time that cannot communicate with each other.)</source>
          <target state="translated">同じ単一プロセスイメージのコピーが同時に実行されていて、お互いに通信できない場合)</target>
        </trans-unit>
        <trans-unit id="d3a0a9cf0ff033e6f9c7d1b0123f187d4940359d" translate="yes" xml:space="preserve">
          <source>cwl-runner</source>
          <target state="translated">走馬灯</target>
        </trans-unit>
        <trans-unit id="a645fcaab80cc09565965a8422f828c2f04b94a8" translate="yes" xml:space="preserve">
          <source>cwldep &amp;lt;https://github.com/common-workflow-language/cwldep&amp;gt;</source>
          <target state="translated">cwldep &amp;lt;https://github.com/common-workflow-language/cwldep&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c6fa3b9b4b7b4cee6e735a3ad017047527626162" translate="yes" xml:space="preserve">
          <source>cwlref-runner</source>
          <target state="translated">cwllefランナ</target>
        </trans-unit>
        <trans-unit id="c244dd4dadd6f1b6e4213300a4e1a19941c072a8" translate="yes" xml:space="preserve">
          <source>cwltool</source>
          <target state="translated">クルツール</target>
        </trans-unit>
        <trans-unit id="df8b75ecd6fb64fa2838b3c746a2e448cd846ab4" translate="yes" xml:space="preserve">
          <source>cwltool is distributed with an example of such seqtk tool and sample corresponding
job. It could executed from the cwltool root using a dependency resolvers
configuration file such as the above one using the command:</source>
          <target state="translated">cwltool はそのような seqtk ツールの例とそれに対応するジョブのサンプルが配布されている。上記のような依存関係リゾルバの設定ファイルを使って cwltool のルートからコマンドを使って実行することができます。</target>
        </trans-unit>
        <trans-unit id="23e45d2de9fed8b1149a6b2bde0d4788aa12b290" translate="yes" xml:space="preserve">
          <source>default_nproc</source>
          <target state="translated">デフォルトプロック</target>
        </trans-unit>
        <trans-unit id="e2bd821b2000de0bf5e4b73d77f6b5b87af47b05" translate="yes" xml:space="preserve">
          <source>definition for an example CWL tool.</source>
          <target state="translated">の定義を参照してください。</target>
        </trans-unit>
        <trans-unit id="25aef5d8abd1841f5c75c959cdc47be9f5e638c4" translate="yes" xml:space="preserve">
          <source>dependencies.</source>
          <target state="translated">依存関係があります。</target>
        </trans-unit>
        <trans-unit id="4126cc66594fad16d4890bde7270029ea2b8df68" translate="yes" xml:space="preserve">
          <source>dependency-resolvers-conf.yml</source>
          <target state="translated">dependency-resolvers-conf.yml</target>
        </trans-unit>
        <trans-unit id="9f2696583122964a7d696a2d47ac4a3db6ad1bcb" translate="yes" xml:space="preserve">
          <source>deps</source>
          <target state="translated">落ちこぼれ</target>
        </trans-unit>
        <trans-unit id="c2c220028bd018e522601b9666823404e5fe908b" translate="yes" xml:space="preserve">
          <source>directive) can reference CWL
documents using absolute or relative local filesytem paths. If a relative path
is referenced and that document isn&amp;rsquo;t found in the current directory then the
following locations will be searched:
&lt;a href=&quot;http://www.commonwl.org/v1.0/CommandLineTool.html#Discovering_CWL_documents_on_a_local_filesystem&quot;&gt;http://www.commonwl.org/v1.0/CommandLineTool.html#Discovering_CWL_documents_on_a_local_filesystem&lt;/a&gt;</source>
          <target state="translated">directive) can reference CWL documents using absolute or relative local filesytem paths. If a relative path is referenced and that document isn&amp;rsquo;t found in the current directory then the following locations will be searched: &lt;a href=&quot;http://www.commonwl.org/v1.0/CommandLineTool.html#Discovering_CWL_documents_on_a_local_filesystem&quot;&gt;http://www.commonwl.org/v1.0/CommandLineTool.html#Discovering_CWL_documents_on_a_local_filesystem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ba996400093075a2f2a255f1394f12fc28e1b7f" translate="yes" xml:space="preserve">
          <source>directory in cwltool&amp;rsquo;s root and a</source>
          <target state="translated">directory in cwltool&amp;rsquo;s root and a</target>
        </trans-unit>
        <trans-unit id="e982f17bcbe0f724063b708a4f76db211a999304" translate="yes" xml:space="preserve">
          <source>docker</source>
          <target state="translated">ドッカー</target>
        </trans-unit>
        <trans-unit id="348a3c4a81ea6081e50dd1888d577fda55d8e4f6" translate="yes" xml:space="preserve">
          <source>dot</source>
          <target state="translated">dot</target>
        </trans-unit>
        <trans-unit id="90f21b5c9f207aeb043ef28fec506f1e436d0dec" translate="yes" xml:space="preserve">
          <source>dx-docker</source>
          <target state="translated">ディーエックスドッカー</target>
        </trans-unit>
        <trans-unit id="1f3190e1056d7d05e0886482201e23bb5706230d" translate="yes" xml:space="preserve">
          <source>dx-docker installation: start with the DNAnexus toolkit (see &lt;a href=&quot;https://wiki.dnanexus.com/Downloads&quot;&gt;https://wiki.dnanexus.com/Downloads&lt;/a&gt; for instructions).</source>
          <target state="translated">dx-docker installation: start with the DNAnexus toolkit (see &lt;a href=&quot;https://wiki.dnanexus.com/Downloads&quot;&gt;https://wiki.dnanexus.com/Downloads&lt;/a&gt; for instructions).</target>
        </trans-unit>
        <trans-unit id="fd1d6f1a1ce5d15e5f48a8d5b9dcdce4f266487d" translate="yes" xml:space="preserve">
          <source>env.sh</source>
          <target state="translated">エンベロープ</target>
        </trans-unit>
        <trans-unit id="33b58f0ce3d1ebf4b89365b01966009637137e45" translate="yes" xml:space="preserve">
          <source>env_pass</source>
          <target state="translated">エンベロープパス</target>
        </trans-unit>
        <trans-unit id="28075371cc25bdb8013adaafba258625805da369" translate="yes" xml:space="preserve">
          <source>env_pass_regex</source>
          <target state="translated">エンベロープパス正規表現</target>
        </trans-unit>
        <trans-unit id="3c580f493d4f84ad4a722d780fafc86deb673204" translate="yes" xml:space="preserve">
          <source>env_set</source>
          <target state="translated">エンベロープセット</target>
        </trans-unit>
        <trans-unit id="0219600396bc7e001b9ff7f911eebbdf7700e386" translate="yes" xml:space="preserve">
          <source>execute the following:</source>
          <target state="translated">を実行してください。</target>
        </trans-unit>
        <trans-unit id="b1033ae408cacd21f6b306f88a50bf6e8654cd4f" translate="yes" xml:space="preserve">
          <source>executor</source>
          <target state="translated">しっこうしゃ</target>
        </trans-unit>
        <trans-unit id="28fa500d0a6c1c0c5cdd1420dd47deb45bc91019" translate="yes" xml:space="preserve">
          <source>extra_flags</source>
          <target state="translated">エキストラフラグ</target>
        </trans-unit>
        <trans-unit id="c3a6c32d6b9ec1cd521668d0fc30ff4ff1fec4f9" translate="yes" xml:space="preserve">
          <source>fetcher_constructor</source>
          <target state="translated">フェッチャーコンストラクタ</target>
        </trans-unit>
        <trans-unit id="c83d82c67f23a95f201360180e39fe85b1fcaa91" translate="yes" xml:space="preserve">
          <source>field.  Cross references (such as</source>
          <target state="translated">フィールドを参照してください。クロスリファレンス(</target>
        </trans-unit>
        <trans-unit id="aaa1356f27733f791f7851b31a098b488e609ff7" translate="yes" xml:space="preserve">
          <source>fields) are updated to internal references within the new packed
document.  The top level workflow is named</source>
          <target state="translated">フィールド)は、新しいパックされたドキュメント内の内部参照に更新されます。トップレベルのワークフローの名前は</target>
        </trans-unit>
        <trans-unit id="2d4a5dd04e7684807bfe5b2953c8f12f85bf9000" translate="yes" xml:space="preserve">
          <source>file and source it before executing
the corresponding tool. That</source>
          <target state="translated">ファイルを作成し、対応するツールを実行する前にソースを作成します。その</target>
        </trans-unit>
        <trans-unit id="dd559a8e898b24999d322b008fa0c280016958c3" translate="yes" xml:space="preserve">
          <source>flag). The allowed keys are
given in the following table; all are optional.</source>
          <target state="translated">フラグ)。許可されるキーは以下の表の通りです。</target>
        </trans-unit>
        <trans-unit id="964992a57d111bb0865d708e942f8599f79c480d" translate="yes" xml:space="preserve">
          <source>flag.</source>
          <target state="translated">フラグを表示しています。</target>
        </trans-unit>
        <trans-unit id="6d4ac54f299265cbbce792dac08bb8e06404e97b" translate="yes" xml:space="preserve">
          <source>for instance, that would enable cwltool to source
the correct module environment before executing the above tool would simply be:</source>
          <target state="translated">例えば、上記のツールを実行する前に cwltool が正しいモジュール環境をソースすることができるようにするには、単純に次のようになります。</target>
        </trans-unit>
        <trans-unit id="bf405c26c7da9f2aa07fa39c62eb8ac8d57b084e" translate="yes" xml:space="preserve">
          <source>galaxy_packages</source>
          <target state="translated">ギャラクシーパッケージ</target>
        </trans-unit>
        <trans-unit id="13232f086b1187b5d169650212189b5a9ada6100" translate="yes" xml:space="preserve">
          <source>git clone</source>
          <target state="translated">gitクローン</target>
        </trans-unit>
        <trans-unit id="734c3c67dba099bc9f9d716c5b06aa5d84014b4f" translate="yes" xml:space="preserve">
          <source>hint</source>
          <target state="translated">ヒント</target>
        </trans-unit>
        <trans-unit id="27c5017f15c5cbd940ce8296d021d603b9255cd8" translate="yes" xml:space="preserve">
          <source>hints</source>
          <target state="translated">ヒント</target>
        </trans-unit>
        <trans-unit id="08594b44e2a88d58fdb70086996f2b73a4c8bbd4" translate="yes" xml:space="preserve">
          <source>hints that cwltool
may in turn use to resolve to packages in various package managers or
dependency management systems such as &lt;a href=&quot;http://modules.sourceforge.net/&quot;&gt;Environment Modules&lt;/a&gt;.</source>
          <target state="translated">hints that cwltool may in turn use to resolve to packages in various package managers or dependency management systems such as &lt;a href=&quot;http://modules.sourceforge.net/&quot;&gt;Environment Modules&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0750e7b2f4c01f27350976f685861867a74c2bf9" translate="yes" xml:space="preserve">
          <source>hints using cwltool requires an optional
dependency, for this reason be sure to use specify the</source>
          <target state="translated">cwltool を使った hints はオプションの依存関係を必要とします。</target>
        </trans-unit>
        <trans-unit id="34b1db1feb3c33cde6007a277275d565420c65d5" translate="yes" xml:space="preserve">
          <source>implementations on Linux
with the</source>
          <target state="translated">を使用してLinux上で実装しています。</target>
        </trans-unit>
        <trans-unit id="4a9b918b2cf29fb19dc10f5d9fd8a77f0f5fadb1" translate="yes" xml:space="preserve">
          <source>in a tool, to rewrite to our specific plugin as</source>
          <target state="translated">として特定のプラグインに書き換えるために、ツールで</target>
        </trans-unit>
        <trans-unit id="f2ef4dbae22cdbfa38c30dd3e8d2abd4a1dcfe14" translate="yes" xml:space="preserve">
          <source>instructions above) and then run
the following in the terminal:</source>
          <target state="translated">上記の手順)を実行し、ターミナルで以下のように実行します。</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">インスタント</target>
        </trans-unit>
        <trans-unit id="c4d637fd194943f4d2c8bcbc8c3682fc682c4dc7" translate="yes" xml:space="preserve">
          <source>is
available on the</source>
          <target state="translated">で利用可能です。</target>
        </trans-unit>
        <trans-unit id="20ba72e4bc65e5315f0bf63b289a3094f010a264" translate="yes" xml:space="preserve">
          <source>is a generator method (uses the Python iterator protocol)</source>
          <target state="translated">はジェネレータメソッドです (Pythonのイテレータプロトコルを使用します)。</target>
        </trans-unit>
        <trans-unit id="90ec41f91909df890f49cb90376cab707b625b22" translate="yes" xml:space="preserve">
          <source>is provided by the CWL project, &lt;a href=&quot;https://sfconservancy.org/news/2018/apr/11/cwl-new-member-project/&quot;&gt;a member project of Software Freedom Conservancy&lt;/a&gt; and our &lt;a href=&quot;https://github.com/common-workflow-language/cwltool/graphs/contributors&quot;&gt;many contributors&lt;/a&gt;.</source>
          <target state="translated">is provided by the CWL project, &lt;a href=&quot;https://sfconservancy.org/news/2018/apr/11/cwl-new-member-project/&quot;&gt;a member project of Software Freedom Conservancy&lt;/a&gt; and our &lt;a href=&quot;https://github.com/common-workflow-language/cwltool/graphs/contributors&quot;&gt;many contributors&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7deecf6bd4ab203498110eb667374765eea56b41" translate="yes" xml:space="preserve">
          <source>job()</source>
          <target state="translated">ジョブ</target>
        </trans-unit>
        <trans-unit id="3e2cfeb60625bb9cdf4c4a03e065828fb9023fb4" translate="yes" xml:space="preserve">
          <source>job() objects yield a single runnable object.</source>
          <target state="translated">job()オブジェクトは、単一の実行可能なオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="10a4146f8c9f0284d1734f31167a98310cfc75b1" translate="yes" xml:space="preserve">
          <source>just as you normally would, but with the new option, e.g. from the conformance tests:</source>
          <target state="translated">通常と同じように、例えば適合性テストのような新しいオプションを使用してください。</target>
        </trans-unit>
        <trans-unit id="f3a908bebf52c5d6dc351af44ef4d7e8049f20cf" translate="yes" xml:space="preserve">
          <source>load_tool()</source>
          <target state="translated">ロードツール()</target>
        </trans-unit>
        <trans-unit id="2b27f9afd2610508f2eb0609e12e81a4342f595d" translate="yes" xml:space="preserve">
          <source>logger_handler</source>
          <target state="translated">ロガーハンドラ</target>
        </trans-unit>
        <trans-unit id="ce5fa20b345ade2ca0ea57b7a9be365f0e995046" translate="yes" xml:space="preserve">
          <source>make_fs_access</source>
          <target state="translated">メークファイルアクセス</target>
        </trans-unit>
        <trans-unit id="59fbb3dc191360b26fffdff5225c50f5e3990caa" translate="yes" xml:space="preserve">
          <source>make_job_runner()</source>
          <target state="translated">make_job_runner()</target>
        </trans-unit>
        <trans-unit id="b2b24bcbb04544631d9fb56442d31ab0064dd1b3" translate="yes" xml:space="preserve">
          <source>make_tool()</source>
          <target state="translated">make_tool()</target>
        </trans-unit>
        <trans-unit id="40b3c83002de4e55693c6de3e3c4be5b6f1f89a8" translate="yes" xml:space="preserve">
          <source>make_tool()`</source>
          <target state="translated">make_tool()</target>
        </trans-unit>
        <trans-unit id="406f4ebab76c78d02244f9b65f5959c16631c7f7" translate="yes" xml:space="preserve">
          <source>mapping_files</source>
          <target state="translated">マッピングファイル</target>
        </trans-unit>
        <trans-unit id="89acae75416dedfe18b8cfee073b7d7682ea1868" translate="yes" xml:space="preserve">
          <source>may be iterated over multiple times.  It will yield all the work
that is currently ready to run and then yield None.</source>
          <target state="translated">は複数回繰り返し実行することができます。これは、現在実行可能な状態にあるすべての作業を生成し、次に None を生成します。</target>
        </trans-unit>
        <trans-unit id="ed13ad81b580b49656a24e75554a9bcab9ecd1c6" translate="yes" xml:space="preserve">
          <source>method calls</source>
          <target state="translated">メソッドコール</target>
        </trans-unit>
        <trans-unit id="11879bfb50b8c655e3bfa1941e5961126ef1e1ab" translate="yes" xml:space="preserve">
          <source>method is invoked in an iteration, it returns one
of: a runnable item (an object with a</source>
          <target state="translated">メソッドが反復で呼び出された場合、次のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="fe4862d36241e02be66202ab2e7918a2e6d6f992" translate="yes" xml:space="preserve">
          <source>method of CommandLineJob executes the command line tool or
Docker container, waits for it to complete, collects output, and makes
the output callback.</source>
          <target state="translated">CommandLineJobのメソッドは、コマンドラインツールやDockerコンテナを実行し、それが完了するのを待ち、出力を収集し、出力コールバックを行います。</target>
        </trans-unit>
        <trans-unit id="dbf110b702ece6544c1492c663ad1d5e0c3b215f" translate="yes" xml:space="preserve">
          <source>method of the Process object to get back runnable jobs.</source>
          <target state="translated">メソッドを使用して、実行可能なジョブを取得します。</target>
        </trans-unit>
        <trans-unit id="333f121da41c1d43365a90c2f87c32ec837b65df" translate="yes" xml:space="preserve">
          <source>method of the workflow job step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca99c4ec475dcb7dab9b54519a3f1336ffb6f205" translate="yes" xml:space="preserve">
          <source>method),</source>
          <target state="translated">メソッド)を使用しています。</target>
        </trans-unit>
        <trans-unit id="f0a54b014a6a1fdfb30dddb4a0023f45ad119894" translate="yes" xml:space="preserve">
          <source>modifier when
installing cwltool. For instance:</source>
          <target state="translated">モディファイアを使用しています。例えば</target>
        </trans-unit>
        <trans-unit id="d3eb8273e764585828a09362b4f9e3207f16f616" translate="yes" xml:space="preserve">
          <source>module and console executable by the same name.</source>
          <target state="translated">モジュールと同名のコンソール実行ファイルがあります。</target>
        </trans-unit>
        <trans-unit id="440c8ef0b07f37aff2d65358252f0bf9bb2c3af4" translate="yes" xml:space="preserve">
          <source>module is available at version</source>
          <target state="translated">モジュールはバージョン</target>
        </trans-unit>
        <trans-unit id="3a3a039123a5481794262d74e702df49f1fcf1eb" translate="yes" xml:space="preserve">
          <source>modulecmd sh load seqtk/r93</source>
          <target state="translated">modulecmd sh load seqtk/r93</target>
        </trans-unit>
        <trans-unit id="bca18a13ab674e36ac7a1d8c32c4feb8e74b7d4b" translate="yes" xml:space="preserve">
          <source>mpirun</source>
          <target state="translated">ぴるん</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="756c0a16304b68f8c715cb899ca87db5fe1487c2" translate="yes" xml:space="preserve">
          <source>nproc_flag</source>
          <target state="translated">エヌプロックフラグ</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">物体</target>
        </trans-unit>
        <trans-unit id="1c17aa7be39abfe254e70e2578bec833ed2b15c9" translate="yes" xml:space="preserve">
          <source>objects create a corresponding</source>
          <target state="translated">オブジェクトは対応する</target>
        </trans-unit>
        <trans-unit id="9ad8edfaa4c85f575f7e25ac1d13985fc3bddcde" translate="yes" xml:space="preserve">
          <source>objects to hold the workflow state for the duration of the job invocation.</source>
          <target state="translated">ジョブ呼び出しの間、ワークフローの状態を保持するためのオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="99c95b992ac4f819a0c1461a81b5fec61536d7f3" translate="yes" xml:space="preserve">
          <source>on it. The default behavior of CWL is to create temporary directories under e.g.</source>
          <target state="translated">の下に一時的なディレクトリを作成します。CWLのデフォルトの動作は、例えば</target>
        </trans-unit>
        <trans-unit id="984cb28e94e282987d9a15c5cc2fcd763cc20913" translate="yes" xml:space="preserve">
          <source>on their</source>
          <target state="translated">彼らの上に</target>
        </trans-unit>
        <trans-unit id="d1ca32e85e763ef88d009da6195b5b04df2ffba0" translate="yes" xml:space="preserve">
          <source>option will print a file suitable for Graphviz</source>
          <target state="translated">オプションはGraphvizに適したファイルを印刷します。</target>
        </trans-unit>
        <trans-unit id="12cb917fa6b139c69bd08293a23c4256c452e570" translate="yes" xml:space="preserve">
          <source>option.</source>
          <target state="translated">オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">或いは</target>
        </trans-unit>
        <trans-unit id="a53a8a5fe15a0902144009b1f8e5fb146a458098" translate="yes" xml:space="preserve">
          <source>or similar. You can specify the number of processes to
start as either a literal integer or an expression (that will result
in an integer). For example:</source>
          <target state="translated">またはそれに近いものを指定します。開始するプロセスの数をリテラル整数か式 (整数になる)のいずれかで指定することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="9799aaa6351c4ecf68c15d810a1041002c50114f" translate="yes" xml:space="preserve">
          <source>package
is the primary Python module containing the reference implementation in the</source>
          <target state="translated">パッケージは</target>
        </trans-unit>
        <trans-unit id="6b7fbb8e6cace3adf663ad3c27645e32a4332284" translate="yes" xml:space="preserve">
          <source>package is optional and provides an additional entry point
under the alias</source>
          <target state="translated">パッケージはオプションで、エイリアスの下に追加のエントリポイントを提供します。</target>
        </trans-unit>
        <trans-unit id="b3b3f259fcbce0cd9b61c81aad9052618d1bb45b" translate="yes" xml:space="preserve">
          <source>pip install tox; tox</source>
          <target state="translated">pip install tox;tox</target>
        </trans-unit>
        <trans-unit id="8957e2edeb397e808d4739aff53d9678a8368439" translate="yes" xml:space="preserve">
          <source>plugin is enabled and pointed at the</source>
          <target state="translated">プラグインを有効にして</target>
        </trans-unit>
        <trans-unit id="613d22ed866f94eb4e4c8a0770d140a5bc8d1e1b" translate="yes" xml:space="preserve">
          <source>points to via a symbolic file
system link or &lt;a href=&quot;https://wiki.debian.org/DebianAlternatives&quot;&gt;another facility&lt;/a&gt;.</source>
          <target state="translated">points to via a symbolic file system link or &lt;a href=&quot;https://wiki.debian.org/DebianAlternatives&quot;&gt;another facility&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e3e3691c22440d0cb6eb10b259a9b72ac624f3e0" translate="yes" xml:space="preserve">
          <source>program.  Here is a bash onliner to generate a Scalable Vector Graphic (SVG) file:</source>
          <target state="translated">プログラムを使用しています。Scalable Vector Graphic (SVG)ファイルを生成するための bash onliner です。</target>
        </trans-unit>
        <trans-unit id="49a6e2d6c06b266f189ccffb510b3c8c4827b068" translate="yes" xml:space="preserve">
          <source>r93</source>
          <target state="translated">r93</target>
        </trans-unit>
        <trans-unit id="1decffb46bc69168eb0f292e731fd533154eeb5c" translate="yes" xml:space="preserve">
          <source>random-lines</source>
          <target state="translated">乱線</target>
        </trans-unit>
        <trans-unit id="5b460465f99e2749e4c5e9af1f0008ea469a3043" translate="yes" xml:space="preserve">
          <source>randomLines</source>
          <target state="translated">乱数線</target>
        </trans-unit>
        <trans-unit id="6916c4a7c42b0ad6b98ff7bfd36f97eb12a41f4c" translate="yes" xml:space="preserve">
          <source>random_lines_mapping.cwl</source>
          <target state="translated">random_lines_mapping.cwl</target>
        </trans-unit>
        <trans-unit id="15320ae28eb8c86bdd49bdd100b91b5e65c55697" translate="yes" xml:space="preserve">
          <source>requirement</source>
          <target state="translated">条件</target>
        </trans-unit>
        <trans-unit id="ed2eb3742618bb10d3b2ba0231ab69fecc8d716b" translate="yes" xml:space="preserve">
          <source>requirements</source>
          <target state="translated">条件</target>
        </trans-unit>
        <trans-unit id="186ee145e02e7a295fd0bae6ddd7a48508acb144" translate="yes" xml:space="preserve">
          <source>resolver</source>
          <target state="translated">リゾルバ</target>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">走らせる</target>
        </trans-unit>
        <trans-unit id="f805aaf52532959faf0be97c80abde3c8ae5e849" translate="yes" xml:space="preserve">
          <source>run()</source>
          <target state="translated">ラン()</target>
        </trans-unit>
        <trans-unit id="502850d3997d8233e5712009a43cd24c02891cc4" translate="yes" xml:space="preserve">
          <source>run:</source>
          <target state="translated">を実行します。</target>
        </trans-unit>
        <trans-unit id="63a5fd3bc5f45a0490e4deca178d288050e26803" translate="yes" xml:space="preserve">
          <source>runner</source>
          <target state="translated">ランナー</target>
        </trans-unit>
        <trans-unit id="99e5624ba94f99f3ed7d110175514ff4aff1f3fd" translate="yes" xml:space="preserve">
          <source>s
that allow disambiguation of package names. If the mapping files described above
allow deployers to adapt tools to their infrastructure, this mechanism allows
tools to adapt their requirements to multiple package managers. To demonstrate
this within the context of the seqtk, we can simply break the package name we
use and then specify a specific Conda package as follows:</source>
          <target state="translated">パッケージ名の曖昧性の解消を可能にする 上で説明したマッピングファイルによって、デプロイ者がツールをインフラストラクチャに適応させることができるのであれば、このメカニズムによって、ツールが複数のパッケージマネージャに要件を適応させることができるようになります。これをseqtkの文脈の中で実証するために、私たちが使用するパッケージ名を単純に区切り、次のように特定のCondaパッケージを指定することができます。</target>
        </trans-unit>
        <trans-unit id="e7c6ecebb9be03595d41d9b3a2736df8eeea7364" translate="yes" xml:space="preserve">
          <source>s in a given CWL tool will not
match the module names for a given cluster. Such requirements can be re-mapped
to specific deployed packages and/or versions using another file specified using
the resolver plugin parameter</source>
          <target state="translated">のモジュール名は、指定されたクラスタのモジュール名とは一致しません。このような要件は、リゾルバプラグインパラメータ</target>
        </trans-unit>
        <trans-unit id="128014ab9472609bab58ee2a8ed1a21f50b348ea" translate="yes" xml:space="preserve">
          <source>s instead of CWL</source>
          <target state="translated">の代わりにCWL</target>
        </trans-unit>
        <trans-unit id="a98b78b9a8edbef00cf817742299437cda969390" translate="yes" xml:space="preserve">
          <source>s, but the concepts map fairly directly.</source>
          <target state="translated">とはいえ、コンセプトはかなり直接的にマッピングされています。</target>
        </trans-unit>
        <trans-unit id="80003fcb11b098694b234c8e14493e92d03eb706" translate="yes" xml:space="preserve">
          <source>script is only responsible for modifying
the job&amp;rsquo;s</source>
          <target state="translated">script is only responsible for modifying the job&amp;rsquo;s</target>
        </trans-unit>
        <trans-unit id="3cc56cc5ab4e98091808b5838fe6bda88dae0261" translate="yes" xml:space="preserve">
          <source>section, and
cwltool has been run with</source>
          <target state="translated">セクションで、cwltoolは</target>
        </trans-unit>
        <trans-unit id="a174b3cf00a89099722a480e6777d451c53443ff" translate="yes" xml:space="preserve">
          <source>select_resources</source>
          <target state="translated">セレクトリソース</target>
        </trans-unit>
        <trans-unit id="f1a3cf843d639dfcf61066b8e9a9dae6720f08cd" translate="yes" xml:space="preserve">
          <source>seqtk</source>
          <target state="translated">シークtk</target>
        </trans-unit>
        <trans-unit id="d0192309c17f71248db1ec65da6d8ecbf86ef949" translate="yes" xml:space="preserve">
          <source>source:</source>
          <target state="translated">ソースです。</target>
        </trans-unit>
        <trans-unit id="3442496b96dd01591a8cd44b1eec1368ab728aba" translate="yes" xml:space="preserve">
          <source>str</source>
          <target state="translated">スト</target>
        </trans-unit>
        <trans-unit id="0b43b1eb699db7458227971d0f2e628c6cf5738b" translate="yes" xml:space="preserve">
          <source>such as the following is encountered.</source>
          <target state="translated">などが発生します。</target>
        </trans-unit>
        <trans-unit id="eb0edad37fa84c0a37c97ca8cf79bfb2afb58d27" translate="yes" xml:space="preserve">
          <source>tests/test_deps_env</source>
          <target state="translated">tests/test_deps_env</target>
        </trans-unit>
        <trans-unit id="d4b158c8adec781fd8299bfc55ac1440e76b68fa" translate="yes" xml:space="preserve">
          <source>tests/test_deps_env_resolvers_conf_rewrite.yml</source>
          <target state="translated">tests/test_deps_env_resolvers_conf_rewrite.yml</target>
        </trans-unit>
        <trans-unit id="0fcdbcb678ab1571a35de0e2da2f75fa4b02f602" translate="yes" xml:space="preserve">
          <source>tests/test_deps_mapping.yml</source>
          <target state="translated">tests/test_deps_mapping.yml</target>
        </trans-unit>
        <trans-unit id="591d897511303b7b9e1cf0bc08d43a55eee65378" translate="yes" xml:space="preserve">
          <source>that contains such a source</source>
          <target state="translated">そのようなソースを含む</target>
        </trans-unit>
        <trans-unit id="cec9caad8fa2d72b5eab2510c93e0dd5feef9735" translate="yes" xml:space="preserve">
          <source>to
avoid conflicting versions of the same library. When installing cwltool directly,
it is recommended to do the same manually:</source>
          <target state="translated">を使用することで、同じライブラリのバージョンの競合を避けることができます。cwltool を直接インストールする場合は、手動で行うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5861d7241f2228b37f1dd29f3606e15e05c7f407" translate="yes" xml:space="preserve">
          <source>to add other registries to the search path.</source>
          <target state="translated">を使用して、他のレジストリを検索パスに追加します。</target>
        </trans-unit>
        <trans-unit id="68d25451a8632a658eaba4813ab5e5f93131461d" translate="yes" xml:space="preserve">
          <source>to add the required binaries.</source>
          <target state="translated">をクリックして、必要なバイナリを追加します。</target>
        </trans-unit>
        <trans-unit id="ec4588855fc87ed1de7bf50fa55f54d91239f136" translate="yes" xml:space="preserve">
          <source>to combine a workflow made up of multiple files into a
single compound document.  This operation takes all the CWL files
referenced by a workflow and builds a new CWL document with all
Process objects (CommandLineTool and Workflow) in a list in the</source>
          <target state="translated">を使用して、複数のファイルで構成されたワークフローを単一の複合文書に結合することができます。この操作は、ワークフローで参照されているすべてのCWLファイルを取得し、すべてのプロセスオブジェクト(CommandLineToolとWorkflow)を持つ新しいCWL文書を</target>
        </trans-unit>
        <trans-unit id="d9bdd3d0938168ceea2877bc094267e733d9042b" translate="yes" xml:space="preserve">
          <source>to create a</source>
          <target state="translated">を作成するために</target>
        </trans-unit>
        <trans-unit id="6c8a2004b702808220d82cd6504b2ab2210929cc" translate="yes" xml:space="preserve">
          <source>to get a listing of the targets of a workflow.
To see exactly which steps will run, use</source>
          <target state="translated">を使用して、ワークフローのターゲットのリストを取得します。どのステップが実行されるかを正確に確認するには</target>
        </trans-unit>
        <trans-unit id="eb8f182ed2a91e3c105fa66d85f3b82c7fedfac3" translate="yes" xml:space="preserve">
          <source>to get a printout of the workflow subgraph for the
selected targets.</source>
          <target state="translated">選択されたターゲットのワークフローサブグラフのプリントアウトを取得します。</target>
        </trans-unit>
        <trans-unit id="98fcb5b9c719f07256e30b940e0bf81c19c2c7c6" translate="yes" xml:space="preserve">
          <source>to load document.</source>
          <target state="translated">をクリックしてドキュメントをロードします。</target>
        </trans-unit>
        <trans-unit id="13d253a2e8ad3c22ca3adf54e648e2bb36a94260" translate="yes" xml:space="preserve">
          <source>to manage dependencies on external tools and workflows.</source>
          <target state="translated">を使用して、外部ツールやワークフローへの依存関係を管理することができます。</target>
        </trans-unit>
        <trans-unit id="b2145e5c4d81539b81177280f867665c828e3f87" translate="yes" xml:space="preserve">
          <source>to somewhere under</source>
          <target state="translated">下まで</target>
        </trans-unit>
        <trans-unit id="92b2cb16f0f67e3554d2d815e7333c0341b71a3a" translate="yes" xml:space="preserve">
          <source>to your script.</source>
          <target state="translated">をスクリプトに追加します。</target>
        </trans-unit>
        <trans-unit id="2534f6b975a1e6a273fce62825eda9eec47a5075" translate="yes" xml:space="preserve">
          <source>tox --listenvs</source>
          <target state="translated">tox --listenvs</target>
        </trans-unit>
        <trans-unit id="4c93e795cb8011a741cb8ffa0f7985dbbe159bca" translate="yes" xml:space="preserve">
          <source>tox -e &amp;lt;env name&amp;gt;</source>
          <target state="translated">tox -e &amp;lt;env name&amp;gt;</target>
        </trans-unit>
        <trans-unit id="689ccc8a422bde4f637660e57360dd00015033ec" translate="yes" xml:space="preserve">
          <source>tox -epy36-unit--tests/test_examples.py::TestParamMatching</source>
          <target state="translated">tox -epy36-unit--tests/test_examples.py::TestParamMatching</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">タイプ</target>
        </trans-unit>
        <trans-unit id="9c520eea6530ef9f6b49e743f82e31e8cac92418" translate="yes" xml:space="preserve">
          <source>udocker</source>
          <target state="translated">ウドッカー</target>
        </trans-unit>
        <trans-unit id="3d42830f30d25189f3e729544e1205294c076823" translate="yes" xml:space="preserve">
          <source>udocker installation: &lt;a href=&quot;https://github.com/indigo-dc/udocker/blob/main/doc/installation_manual.md#22-install-from-indigo-datacloud-repositories&quot;&gt;https://github.com/indigo-dc/udocker/blob/main/doc/installation_manual.md#22-install-from-indigo-datacloud-repositories&lt;/a&gt;</source>
          <target state="translated">udocker installation: &lt;a href=&quot;https://github.com/indigo-dc/udocker/blob/main/doc/installation_manual.md#22-install-from-indigo-datacloud-repositories&quot;&gt;https://github.com/indigo-dc/udocker/blob/main/doc/installation_manual.md#22-install-from-indigo-datacloud-repositories&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e725641c7487964940c516e64423c88481ccc76f" translate="yes" xml:space="preserve">
          <source>versionfunc</source>
          <target state="translated">バージョンプルフンチ</target>
        </trans-unit>
        <trans-unit id="d85ee43b1203e2f9f956771bb0aedc0cc0f23adc" translate="yes" xml:space="preserve">
          <source>which is not accessible to Docker containers.</source>
          <target state="translated">はDockerコンテナにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">をもって</target>
        </trans-unit>
        <trans-unit id="bb41b1971cd2d4add082af989e202a45f4517785" translate="yes" xml:space="preserve">
          <source>with Singularity will run software containers specified in</source>
          <target state="translated">で指定されたソフトウェアコンテナを実行します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
