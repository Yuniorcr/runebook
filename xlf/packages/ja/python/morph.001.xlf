<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/morph/">
    <body>
      <group id="morph">
        <trans-unit id="15263ae554d4706fcfebb3d6888e152863ab6f93" translate="yes" xml:space="preserve">
          <source>(This is primarily useful when dealing with INI files, which can only
be flat: the</source>
          <target state="translated">（これは主に、フラットにしかできないINIファイルを処理するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fb2cbfabdb8e737b0d06483c62e1324811531752" translate="yes" xml:space="preserve">
          <source>(note that
lists cannot be unflattened).</source>
          <target state="translated">（リストはフラット化できないことに注意してください）。</target>
        </trans-unit>
        <trans-unit id="b2357079b956ff72c55c5066adf40ed6f8d9d7f6" translate="yes" xml:space="preserve">
          <source>(which defaults to</source>
          <target state="translated">（デフォルトは</target>
        </trans-unit>
        <trans-unit id="f42079a69ed8aee641cf555c14823f4b26a6116c" translate="yes" xml:space="preserve">
          <source>) or square brackets (</source>
          <target state="translated">）または角括弧（</target>
        </trans-unit>
        <trans-unit id="bcd6c92092ccba6b9fe58ac0ff2894b906b56a71" translate="yes" xml:space="preserve">
          <source>), returns that;
otherwise throws a ValueError exception.</source>
          <target state="translated">）、それを返します; それ以外の場合は、ValueError例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f334120f4ec9b1ed6b6330bdd37fc6b7f7f507d6" translate="yes" xml:space="preserve">
          <source>**kws</source>
          <target state="translated">** kws</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">、</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">、および</target>
        </trans-unit>
        <trans-unit id="ad73b3a7b0550b040a0a3aa4d90d35208d483360" translate="yes" xml:space="preserve">
          <source>, passed as the second
argument to</source>
          <target state="translated">、2番目の引数としてに渡されます</target>
        </trans-unit>
        <trans-unit id="a10e9926e0e929587afb1394c2f7ff1dffdc1235" translate="yes" xml:space="preserve">
          <source>, should always support an arbitrary number
of keyword parameters (i.e. should always end the parameter list with
something like</source>
          <target state="translated">は、常に任意の数のキーワードパラメータをサポートする必要があります（つまり、パラメータリストは常に次のようなもので終了する必要があります）</target>
        </trans-unit>
        <trans-unit id="5e7ce2ada0e18f9c80f35a8bbd780fd239ca1004" translate="yes" xml:space="preserve">
          <source>, specifies that keys that start with the specified value
should be stripped from the returned dict.</source>
          <target state="translated">、指定された値で始まるキーを、返されたdictから削除する必要があることを指定します。</target>
        </trans-unit>
        <trans-unit id="030b220b5d05b2b4046d2478bd033a87b32d316d" translate="yes" xml:space="preserve">
          <source>, specifies that only keys that start with the specified
string will be returned (and also filtered for the specified keys),
with the prefix stripped from the keys. If no keys are specified,
this will simply return only the keys with the specified prefix.</source>
          <target state="translated">は、指定された文字列で始まるキーのみが返されることを指定します（また、指定されたキーに対してフィルタリングされます）。プレフィックスはキーから削除されます。キーが指定されていない場合、これは単に指定されたプレフィックスを持つキーのみを返します。</target>
        </trans-unit>
        <trans-unit id="261a6839aaf407a37d31249da271b9f4f83754ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dict&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;辞書&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="905364791955e4760e61abfc678bfb1889a23173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;プレフィックス&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="394fca637af302045f285921799f43776483cd7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tree&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;ツリー&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="367f9d3e711e56b68193ff217c3e45ded25b78a3" translate="yes" xml:space="preserve">
          <source>A collection of routines to help identify and morph objects.</source>
          <target state="translated">オブジェクトの識別やモーフィングに役立つルーチンのコレクション。</target>
        </trans-unit>
        <trans-unit id="c694364fdeb56817df59134c924e14b4adcb130d" translate="yes" xml:space="preserve">
          <source>Converse of</source>
          <target state="translated">コンバース</target>
        </trans-unit>
        <trans-unit id="872d9a7e434a3f8eac01f8a956be9ef98e1065ef" translate="yes" xml:space="preserve">
          <source>Converts</source>
          <target state="translated">コンバート</target>
        </trans-unit>
        <trans-unit id="b458bf596556352820d6f7b75b73543215f89864" translate="yes" xml:space="preserve">
          <source>Converts a multi-dimensional list or dict type
to a one-dimensional list or dict.</source>
          <target state="translated">多次元リストまたはディクト型を1次元リストまたはディクトに変換します。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">例。</target>
        </trans-unit>
        <trans-unit id="3365992453c130e29136383b891582245412c563" translate="yes" xml:space="preserve">
          <source>Extracts a subset of key/value pairs from a
dict-like object where the key is a specific
value or has a specific prefix.</source>
          <target state="translated">キーが特定の値であるか、または特定の接頭辞を持つdictライクなオブジェクトから、キーと値のペアのサブセットを抽出します。</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="68839cce52f25f5e722d684d280b2b741a295de7" translate="yes" xml:space="preserve">
          <source>Flattening</source>
          <target state="translated">フラット化</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">のために</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">機能性</target>
        </trans-unit>
        <trans-unit id="7f4338fb13cf2368a58e80c63471c618c1e6db92" translate="yes" xml:space="preserve">
          <source>If specified and truthy, then the keys specified to either</source>
          <target state="translated">指定されていてtruthyであれば、どちらかに指定されたキーが</target>
        </trans-unit>
        <trans-unit id="079bc3b6a59d995ce86a46665da2718451aea120" translate="yes" xml:space="preserve">
          <source>Is</source>
          <target state="translated">でしょうか?</target>
        </trans-unit>
        <trans-unit id="9de98aaac7b886db78e7b039c54eb9f3d19dfddb" translate="yes" xml:space="preserve">
          <source>Morph provides the following functions to help identify object types:</source>
          <target state="translated">Morphでは、オブジェクトの種類を識別するために以下のような機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="8b445b91a85f865e232afcb3a4f9e1eb4b88ca28" translate="yes" xml:space="preserve">
          <source>Morph provides the following functions to help morph objects:</source>
          <target state="translated">Morphは、オブジェクトのモーフィングを助けるために以下の関数を提供しています。</target>
        </trans-unit>
        <trans-unit id="74132370c3837494a5d4046ad003db251256d2fd" translate="yes" xml:space="preserve">
          <source>Morph&amp;rsquo;s</source>
          <target state="translated">モーフの</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名前</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">なし</target>
        </trans-unit>
        <trans-unit id="f1b2ae84cb59204a2e53d29c4d050b8e94e906cf" translate="yes" xml:space="preserve">
          <source>Note that lists can never be unflattened, and unflattening dicts is
not garanteed to be round-trip consistent. The latter can happen if
the dict-to-be-flattened had keys with special characters in them,
such as a period (</source>
          <target state="translated">リストは決してアンフラット化されないことに注意してください。また、ディクトをアンフラット化することはラウンドトリップの一貫性を保証するものではありません。後者は、フラット化されるディクトにピリオド (</target>
        </trans-unit>
        <trans-unit id="bdb2a6361bb0172ab78782a74ec6921f44d95c09" translate="yes" xml:space="preserve">
          <source>Note that the callback function</source>
          <target state="translated">コールバック関数</target>
        </trans-unit>
        <trans-unit id="2ad06f04bfbf5b72d03d4af0b584e23bc7c19bdd" translate="yes" xml:space="preserve">
          <source>Picking and Omitting</source>
          <target state="translated">ピッキングと省略</target>
        </trans-unit>
        <trans-unit id="dfc481d600b4b81fb6cdf8966f040ef140473662" translate="yes" xml:space="preserve">
          <source>Recursively transforms sequences &amp;amp; dicts in</source>
          <target state="translated">でシーケンスとディクテーションを再帰的に変換します</target>
        </trans-unit>
        <trans-unit id="1475cd289e44455ecdf27a73928d30c906cfdbec" translate="yes" xml:space="preserve">
          <source>Reverses the effects of</source>
          <target state="translated">の効果を逆転させる</target>
        </trans-unit>
        <trans-unit id="e0a2d14ab2f474f3a08ce175db9ee0e87c1beff1" translate="yes" xml:space="preserve">
          <source>Specifies the class type that should be returned, which defaults
to the standard python</source>
          <target state="translated">返されるクラスの型を指定します。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">変形</target>
        </trans-unit>
        <trans-unit id="ca5e1888f7ff9f4679a3377b455596a48d014681" translate="yes" xml:space="preserve">
          <source>ValueError</source>
          <target state="translated">値エラー</target>
        </trans-unit>
        <trans-unit id="6bafa40ada13db972fa2bd005ec8f46294f1321d" translate="yes" xml:space="preserve">
          <source>When flattening a dict-like object, it collapses list- and dict-
subkeys into indexed and dotted top-level keys. For example:</source>
          <target state="translated">dict的なオブジェクトをフラットにすると、リストとdict-のサブキーをインデックス付きのトップレベルキーとドット付きのトップレベルキーに折りたたまれます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2aa78b04fc68da30832b366c50d22a81560a56cf" translate="yes" xml:space="preserve">
          <source>When flattening a sequence-like object (i.e. list or tuple),</source>
          <target state="translated">シーケンスのようなオブジェクト(リストやタプルなど)を平坦化する場合。</target>
        </trans-unit>
        <trans-unit id="e053eec5f5e782282a0d1c8a83e9c3122c0daff5" translate="yes" xml:space="preserve">
          <source>With some limitations, this also works on object properties. For
example:</source>
          <target state="translated">いくつかの制限がありますが、これはオブジェクトのプロパティでも動作します。例えば</target>
        </trans-unit>
        <trans-unit id="b94f1f069c4f8dcf66fdcb2b34da7feb40477fea" translate="yes" xml:space="preserve">
          <source>a dict-like type? This means that it
must have at least the following methods:</source>
          <target state="translated">ディクトのような型?ということは、少なくとも以下のメソッドを持っていなければならないということです。</target>
        </trans-unit>
        <trans-unit id="eade0daf9ecfb0e6b76ba603340e74d8e9d712ea" translate="yes" xml:space="preserve">
          <source>a sequence-like (i.e. iterable) type
(but not a string or dict)?</source>
          <target state="translated">シーケンスのような (反復可能な)型 (文字列やディクトではない)?</target>
        </trans-unit>
        <trans-unit id="f8b528cfa42edcb5624d9cdf970d95c1311748f0" translate="yes" xml:space="preserve">
          <source>a string?</source>
          <target state="translated">紐?</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="9738e486d9f6d57cfbbc4e2fb154a09c670b9574" translate="yes" xml:space="preserve">
          <source>are evaluated as a multi-dimensional item addresses like
those produced by</source>
          <target state="translated">で生成されたような多次元のアイテムアドレスとして評価されます。</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">デフォルト</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">ディクティクト</target>
        </trans-unit>
        <trans-unit id="b9c7b42de27fde88448357eef801bbafbf848468" translate="yes" xml:space="preserve">
          <source>flat</source>
          <target state="translated">ぺらぺら</target>
        </trans-unit>
        <trans-unit id="bacef8c5a0403758a34a8d363562e7b7769cb548" translate="yes" xml:space="preserve">
          <source>flatten</source>
          <target state="translated">ぺしゃんこにする</target>
        </trans-unit>
        <trans-unit id="a585197e0ed22e03b24a006c0287e7b73c65871f" translate="yes" xml:space="preserve">
          <source>functions allow converting
between complex structures and flat INI files).</source>
          <target state="translated">関数は、複雑な構造体とフラットなINIファイル間の変換を可能にします)。</target>
        </trans-unit>
        <trans-unit id="c8be8c2ce8e681bcacce5f0ca4c796bdf2e31217" translate="yes" xml:space="preserve">
          <source>functions allow you to extract a set of keys
(or properties) from a dict-like object (or plain object). These
functions will aggressively return a valid dict, regardless of the
supplied value &amp;ndash; i.e. if</source>
          <target state="translated">関数を使用すると、dictのようなオブジェクト（またはプレーンオブジェクト）からキー（またはプロパティ）のセットを抽出できます。これらの関数は、指定された値に関係なく、有効なdictを積極的に返します。</target>
        </trans-unit>
        <trans-unit id="72004cf8aac76471573dc78d5fc0b32685a79253" translate="yes" xml:space="preserve">
          <source>helper function can be used to recursively transform
all the items in a list &amp;amp; dictionary tree &amp;ndash; this effectively allows
the ease of list comprehensions to be applied to nested list/dict
structures.</source>
          <target state="translated">ヘルパー関数を使用して、リストおよび辞書ツリー内のすべてのアイテムを再帰的に変換できます。これにより、ネストされたリスト/辞書構造にリスト内包表記を簡単に適用できます。</target>
        </trans-unit>
        <trans-unit id="f6e4f784011e1fbb03e7a2a9049da1e17b960c20" translate="yes" xml:space="preserve">
          <source>is
truthy, the default), and otherwise returns a
list with itself as single object.</source>
          <target state="translated">がtruthyの場合はデフォルト)、そうでない場合はそれ自身を単一のオブジェクトとしてリストを返します。</target>
        </trans-unit>
        <trans-unit id="3967a89da4a12e7520bdccc41ae49e6ec8254b9e" translate="yes" xml:space="preserve">
          <source>is given as a source, an empty dict
is returned. Furthermore, the following optional keyword parameters
are accepted:</source>
          <target state="translated">がソースとして与えられた場合は、空の dict が返されます。さらに、以下のオプションのキーワード・パラメータが受け付けられます。</target>
        </trans-unit>
        <trans-unit id="196c5627adc844f20fe17c2ef02d7116dec834fa" translate="yes" xml:space="preserve">
          <source>is truthy, the default); if
sequence-like, returns itself converted to a list
(optionally flattened if keyword</source>
          <target state="translated">が truthy の場合はデフォルト)、シーケンスライクな場合は、それ自身をリストに変換したものを返します (キーワード</target>
        </trans-unit>
        <trans-unit id="45df03f6982dee80f2e029129ae75e0048f371b1" translate="yes" xml:space="preserve">
          <source>items()</source>
          <target state="translated">アイテム()</target>
        </trans-unit>
        <trans-unit id="02c5870c446f2d6370d3611295dcf86df5b32cea" translate="yes" xml:space="preserve">
          <source>keys()</source>
          <target state="translated">キー()</target>
        </trans-unit>
        <trans-unit id="6f85c5c07720f2ceb1f27f7efce7d4e1a656afc0" translate="yes" xml:space="preserve">
          <source>morph.flatten</source>
          <target state="translated">モーフフラット</target>
        </trans-unit>
        <trans-unit id="8d1a621447e91388402dd39d386e6ff1976eaa9d" translate="yes" xml:space="preserve">
          <source>morph.flatten(obj)</source>
          <target state="translated">morph.flatten(obj)</target>
        </trans-unit>
        <trans-unit id="73885d2f1c6e878f86dd439096bad144eb111ad6" translate="yes" xml:space="preserve">
          <source>morph.isdict(obj)</source>
          <target state="translated">morph.isdict(obj)</target>
        </trans-unit>
        <trans-unit id="e036b4277031ccc341bce61d58482fb59eed2c06" translate="yes" xml:space="preserve">
          <source>morph.isseq(obj)</source>
          <target state="translated">morph.isseq(obj)</target>
        </trans-unit>
        <trans-unit id="b9e6dfe26866c04fe1b44a2aa1d48c83b6cf3d50" translate="yes" xml:space="preserve">
          <source>morph.isstr(obj)</source>
          <target state="translated">morph.isstr(obj)</target>
        </trans-unit>
        <trans-unit id="94c1dd04a8d64fef6dd66c51075352e7306c2993" translate="yes" xml:space="preserve">
          <source>morph.omit(...)</source>
          <target state="translated">morph.omit(...)</target>
        </trans-unit>
        <trans-unit id="98a10406950ebdb85ee5dc2d5ab86c065e903e7f" translate="yes" xml:space="preserve">
          <source>morph.pick()</source>
          <target state="translated">morph.pick()</target>
        </trans-unit>
        <trans-unit id="02dc41d03f6336f8189114854e7eea68728817ed" translate="yes" xml:space="preserve">
          <source>morph.pick(...)</source>
          <target state="translated">morph.pick(...)</target>
        </trans-unit>
        <trans-unit id="5b25cf75b82ee27e22e009eac841dc369538297d" translate="yes" xml:space="preserve">
          <source>morph.tobool(obj)</source>
          <target state="translated">morph.tobool(obj)</target>
        </trans-unit>
        <trans-unit id="89fd1c0a1794cc403053221cf717dd386d61ebe0" translate="yes" xml:space="preserve">
          <source>morph.tolist(obj)</source>
          <target state="translated">morph.tolist(obj)</target>
        </trans-unit>
        <trans-unit id="613031ba90dd6b1af1561d99a00aab2a33feaf72" translate="yes" xml:space="preserve">
          <source>morph.unflatten(obj)</source>
          <target state="translated">morph.unflatten(obj)</target>
        </trans-unit>
        <trans-unit id="4e564da6aa9f57a28b2c7993caec7dad663c4d2b" translate="yes" xml:space="preserve">
          <source>morph.xform</source>
          <target state="translated">形態素形材</target>
        </trans-unit>
        <trans-unit id="9f710881b18886613679f3d186416c54dbf47684" translate="yes" xml:space="preserve">
          <source>morph.xform(obj, func)</source>
          <target state="translated">morph.xform(obj,func)</target>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">オブジェ</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">物体</target>
        </trans-unit>
        <trans-unit id="0f189b4a857c01fc184fa0a206d26a49a6fa2d5e" translate="yes" xml:space="preserve">
          <source>omit</source>
          <target state="translated">削る</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">或いは</target>
        </trans-unit>
        <trans-unit id="e8fb7396dfe54e9d49f629d842bcb834eb35a9e9" translate="yes" xml:space="preserve">
          <source>parameter is not</source>
          <target state="translated">パラメータは</target>
        </trans-unit>
        <trans-unit id="4c2e8554e331d42c11b4f804c340783b34447b3c" translate="yes" xml:space="preserve">
          <source>pick</source>
          <target state="translated">摘む</target>
        </trans-unit>
        <trans-unit id="fae60010450bd8c73194900a74c256fd6d91dbda" translate="yes" xml:space="preserve">
          <source>recursively reduces multi-dimensional arrays to a
single dimension, but only for elements of each descended list that
are list-like. For example:</source>
          <target state="translated">は,多次元配列を再帰的に1次元に削減しますが,リストライクな各降順リストの要素のみを対象とします.例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">裂ける</target>
        </trans-unit>
        <trans-unit id="657412ebc9ee3d7cead0fd5ae863c8d1fc1ceaaa" translate="yes" xml:space="preserve">
          <source>to a bool; if string-like, it
is matched against a list of &amp;ldquo;truthy&amp;rdquo; or &amp;ldquo;falsy&amp;rdquo;
strings; if bool-like, returns itself; then, if
the</source>
          <target state="translated">ブール値に; 文字列のような場合は、「真実」または「偽の」文字列のリストと照合されます。boolのような場合、それ自体を返します。次に、</target>
        </trans-unit>
        <trans-unit id="2f8539b1e397be919869ad28e36720a03a39a8bb" translate="yes" xml:space="preserve">
          <source>to a list; if string-like, it
splits it according to Unix shell semantics (if
keyword</source>
          <target state="translated">文字列に似ている場合は、Unixシェルのセマンティクスに従って分割します(キーワードが</target>
        </trans-unit>
        <trans-unit id="c1e7e23c9d7c1dc650f0d98f72356b3068127801" translate="yes" xml:space="preserve">
          <source>type.</source>
          <target state="translated">のタイプがあります。</target>
        </trans-unit>
        <trans-unit id="f4db7f09384f465cc5269fbd1cd0fdfcfc73e527" translate="yes" xml:space="preserve">
          <source>unflatten</source>
          <target state="translated">脹らみのない</target>
        </trans-unit>
        <trans-unit id="e28357700f15fb0774e5a47c6c8abe8eac68b036" translate="yes" xml:space="preserve">
          <source>values()</source>
          <target state="translated">values()</target>
        </trans-unit>
        <trans-unit id="abcfcdca4ad93b28ec49bf52844bbe0ee0073acb" translate="yes" xml:space="preserve">
          <source>xformer</source>
          <target state="translated">往年の人</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
