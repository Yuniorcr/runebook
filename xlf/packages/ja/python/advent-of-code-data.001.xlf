<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/advent-of-code-data/">
    <body>
      <group id="advent-of-code-data">
        <trans-unit id="1b2e9e17feec6b6c93a4fa1130f257bdd2213d33" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;entry-points&amp;rdquo;. My entry-point name is &amp;ldquo;wim&amp;rdquo; so an example for running &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/blob/master/setup.py#L30&quot;&gt;my code&lt;/a&gt; (after</source>
          <target state="translated">「エントリーポイント」。私のエントリポイント名は「wim」なので、&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/blob/master/setup.py#L30&quot;&gt;私のコード&lt;/a&gt;を実行する例（後</target>
        </trans-unit>
        <trans-unit id="d8fdd9d293c9f6bcb0db2d99e41af186443fcdb7" translate="yes" xml:space="preserve">
          <source>) would be:</source>
          <target state="translated">） だろう：</target>
        </trans-unit>
        <trans-unit id="a4ec5bf3b1cf651414f64c5e2105a4f3fdb657a7" translate="yes" xml:space="preserve">
          <source>--timeout=120</source>
          <target state="translated">--timeout = 120</target>
        </trans-unit>
        <trans-unit id="9a318765459dffc2bf0a10290db5d22be5a86579" translate="yes" xml:space="preserve">
          <source>. To remove any
caches, you may simply delete whatever files you want under that directory tree.
If you&amp;rsquo;d prefer to use a different path, then export an</source>
          <target state="translated">。キャッシュを削除するには、そのディレクトリツリーの下にある必要なファイルを削除するだけです。別のパスを使用したい場合は、</target>
        </trans-unit>
        <trans-unit id="225fcf6baa361d67a2aeb4fbcece415e453538d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;New in version 0.4.0.&lt;/em&gt; Basic use:</source>
          <target state="translated">&lt;em&gt;バージョン0.4.0の新機能。&lt;/em&gt;基本的な使用：</target>
        </trans-unit>
        <trans-unit id="ef100592788fef309840b1bcd0d4e5f466c04399" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;New in version 0.8.0.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;バージョン0.8.0の新機能。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5155bfbb7b89cdc5612b464af7a32c49afb2d758" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If you don&amp;rsquo;t like the env var, you could also put into a text file
in your home directory (use the filename</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; env varが気に入らない場合は、ホームディレクトリのテキストファイルに書き込むこともできます（ファイル名</target>
        </trans-unit>
        <trans-unit id="e05f2a02b3a3184f93fc5496cca40290861397e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;every problem has a solution that completes in at most 15 seconds on ten-year-old hardware&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;すべての問題には、10年前のハードウェアで最大15秒で完了する解決策があります&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36b220dcc983e82368cdf7331080aba85fa9ade8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:  Please use version 0.3+ of this library.&lt;/strong&gt;  It memoizes successful
requests client side and rate-limits the get_data function, as
&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/3v64sb/aoc_is_fragile_please_be_gentle/&quot;&gt;requested by the AoC author&lt;/a&gt;.
Thanks!</source>
          <target state="translated">&lt;strong&gt;注：このライブラリのバージョン0.3以降を使用してください。&lt;/strong&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/3v64sb/aoc_is_fragile_please_be_gentle/&quot;&gt;AoC作成者の要求に応じて、&lt;/a&gt; クライアント側で成功した要求をメモし、get_data関数をレート制限します 。ありがとう！</target>
        </trans-unit>
        <trans-unit id="2fbb2b999fdb6dd71977a1889b25886835375669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Puzzle inputs differ by user.&lt;/strong&gt;   So export your session ID, for example:</source>
          <target state="translated">&lt;strong&gt;パズルの入力はユーザーによって異なります。&lt;/strong&gt; たとえば、セッションIDをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="a3d0a97a9b904df6770cfb7ecba2a7cae76040ae" translate="yes" xml:space="preserve">
          <source>A filename like</source>
          <target state="translated">のようなファイル名</target>
        </trans-unit>
        <trans-unit id="d250512ad0908b0d3841c37a98c260126298254d" translate="yes" xml:space="preserve">
          <source>AOCD_DIR</source>
          <target state="translated">エーオーシーディーディーアール</target>
        </trans-unit>
        <trans-unit id="1974aa2fc5c5c34b8aeb417f79433857e33b4a04" translate="yes" xml:space="preserve">
          <source>As you can see above, I actually had incorrect code for &lt;a href=&quot;https://adventofcode.com/2017/day/20&quot;&gt;2017 Day 20: Particle Swarm&lt;/a&gt;, but that &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/commit/31e454270001c6d06b46014fe5dafd03e29507b8&quot;&gt;bug&lt;/a&gt; only showed up for the google token&amp;rsquo;s dataset. Whoops. Also, it looks like my algorithm for &lt;a href=&quot;https://adventofcode.com/2017/day/13&quot;&gt;2017 Day 13: Packet Scanners&lt;/a&gt; was kinda garbage. Too slow. According to &lt;a href=&quot;https://adventofcode.com/about&quot;&gt;AoC FAQ&lt;/a&gt;:</source>
          <target state="translated">上記を見るとわかるように、私は実際には&lt;a href=&quot;https://adventofcode.com/2017/day/20&quot;&gt;2017 Day 20：Particle Swarmの&lt;/a&gt;コードが正しくありませんでしたが、その&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-wim/commit/31e454270001c6d06b46014fe5dafd03e29507b8&quot;&gt;バグ&lt;/a&gt;はgoogleトークンのデータセットにのみ現れました。おっと。また、&lt;a href=&quot;https://adventofcode.com/2017/day/13&quot;&gt;2017年13日の&lt;/a&gt;アルゴリズム：パケットスキャナーはごみのようでした。遅すぎる。&lt;a href=&quot;https://adventofcode.com/about&quot;&gt;AoC FAQに&lt;/a&gt;よると：</target>
        </trans-unit>
        <trans-unit id="db272f7c87edbde6cc2f248058913a294a2468b5" translate="yes" xml:space="preserve">
          <source>Automated submission</source>
          <target state="translated">自動送信</target>
        </trans-unit>
        <trans-unit id="d6ade166fe0e611ebbb19da532f22644c0ad36e0" translate="yes" xml:space="preserve">
          <source>By the way, the</source>
          <target state="translated">ちなみに、このような</target>
        </trans-unit>
        <trans-unit id="7839d2cb0f40ad3ec7e268709443f9e7d0de0890" translate="yes" xml:space="preserve">
          <source>Cache invalidation?</source>
          <target state="translated">キャッシュ無効化?</target>
        </trans-unit>
        <trans-unit id="0f2b1654adc0aaa4bde0e26ace5dd519073fc5fb" translate="yes" xml:space="preserve">
          <source>Ever tried running your code against other people&amp;rsquo;s inputs? AoC is full of tricky edge cases. You may find that sometimes you&amp;rsquo;re only getting the right answer by luck, and your code will fail on some other dataset. Using aocd, you can collect a few different auth tokens for each of your accounts (github/google/reddit/twitter) and verify your answers across multiple datasets.</source>
          <target state="translated">他の人の入力に対してコードを実行してみましたか？AoCは、トリッキーなエッジケースでいっぱいです。運によっては正しい答えしか得られないことがあり、他のデータセットではコードが失敗する場合があります。aocdを使用すると、アカウント（github / google / reddit / twitter）ごとにいくつかの異なる認証トークンを収集し、複数のデータセットにわたって回答を確認できます。</target>
        </trans-unit>
        <trans-unit id="25cf984134c76f36011f4e8caf33c135ae402d12" translate="yes" xml:space="preserve">
          <source>Get your puzzle data with a single import</source>
          <target state="translated">1回のインポートでパズルデータを取得</target>
        </trans-unit>
        <trans-unit id="0587351e2a97fb4879b4ba306965618c0b6d2069" translate="yes" xml:space="preserve">
          <source>Get your puzzle data with a single import statement:</source>
          <target state="translated">1つのインポート文でパズルデータを取得します。</target>
        </trans-unit>
        <trans-unit id="df8b8387fbd3cba196358c3a1355b46b0b5b12a8" translate="yes" xml:space="preserve">
          <source>How does this library work?</source>
          <target state="translated">このライブラリはどのように機能するのでしょうか?</target>
        </trans-unit>
        <trans-unit id="d7cf73d518daaad4f01a2ee97065f13f4ef611bf" translate="yes" xml:space="preserve">
          <source>Input data is via regular attribute access. Example usage:</source>
          <target state="translated">入力データは通常の属性アクセスによるものです。使用例。</target>
        </trans-unit>
        <trans-unit id="cdb527421c9c06ec85d558465c535244b7d3f645" translate="yes" xml:space="preserve">
          <source>Install with pip</source>
          <target state="translated">パイプを使ってインストール</target>
        </trans-unit>
        <trans-unit id="46f509ef372988eff1d4c7c989eadb78d59c046c" translate="yes" xml:space="preserve">
          <source>It will automatically get today&amp;rsquo;s data at import time, if used within the
interactive interpreter.  Otherwise, the date is found by introspection of the
path and file name from which</source>
          <target state="translated">対話型インタープリター内で使用されている場合、インポート時に今日のデータを自動的に取得します。それ以外の場合、日付は、パスとファイル名のイントロスペクションによって検出されます。</target>
        </trans-unit>
        <trans-unit id="28525f7708649489e52e7a247e826db23f0b0c85" translate="yes" xml:space="preserve">
          <source>Might be useful for lazy Pythonistas and speedhackers.</source>
          <target state="translated">怠け者のPythonistasやスピードハッカーには便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="612eecb9314a4b1cb2288e1c7b1f85d28e6af9a4" translate="yes" xml:space="preserve">
          <source>Note that the same filename introspection of year/day also works for automated
submission. There&amp;rsquo;s also introspection of the &amp;ldquo;level&amp;rdquo;, i.e. part a or part b,
aocd can automatically determine if you have already completed part a or not
and submit your answer for the correct part accordingly. In this case, just use:</source>
          <target state="translated">年/日の同じファイル名イントロスペクションは、自動送信にも機能することに注意してください。「レベル」の内省、つまりパートaまたはパートbもあります。aocdは、パートaがすでに完了しているかどうかを自動的に判断し、それに応じて正しいパートの回答を送信できます。この場合は、次のように使用します。</target>
        </trans-unit>
        <trans-unit id="528a1b37f5723c9b679e7c37e9f60ae9dee0104c" translate="yes" xml:space="preserve">
          <source>OOP-style interfaces</source>
          <target state="translated">OOPスタイルインタフェース</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">クイックスタート</target>
        </trans-unit>
        <trans-unit id="8e6764df4041d2c9aea627de23941fd71b1edd7a" translate="yes" xml:space="preserve">
          <source>Solutions can be executed using &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptools style plugins&lt;/a&gt; for your code, i.e. the</source>
          <target state="translated">ソリューションは、コードの&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptoolsスタイルのプラグイン&lt;/a&gt;を使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="9218f9b92da5694d9a6faa484618216027baf3af" translate="yes" xml:space="preserve">
          <source>Submitting answers is also by regular attribute access. Any incorrect answers you submitted are remembered, and aocd will prevent you from attempting to submit the same incorrect value twice:</source>
          <target state="translated">回答の提出は通常の属性アクセスによるものです。あなたが提出した不正確な回答は記憶され、aocdは同じ不正確な値を2度提出することを防ぎます。</target>
        </trans-unit>
        <trans-unit id="7d394ae7b0313fdc168ce960bc0b8cb1f11d1c40" translate="yes" xml:space="preserve">
          <source>The response message from AoC will be printed in the terminal. If you gave
the right answer, then the puzzle will be refreshed in your web browser
(so you can read the instructions for the next part, for example).
&lt;strong&gt;Proceed with caution!&lt;/strong&gt; If you submit wrong guesses, your user &lt;strong&gt;WILL&lt;/strong&gt;
get rate-limited by Eric, so don&amp;rsquo;t call submit until you&amp;rsquo;re fairly confident
you have a correct answer!</source>
          <target state="translated">AoCからの応答メッセージが端末に出力されます。正解すると、パズルはWebブラウザーで更新されます（たとえば、次のパートの説明を読むことができます）。 &lt;strong&gt;注意して続行してください！&lt;/strong&gt;間違った推測を提出した場合、ユーザーは&lt;strong&gt;WILL&lt;/strong&gt; エリックによってレート制限されますので、あなたは、あなたが正しい答えを持っているかなり確信してまで提出呼び出すことはありません！</target>
        </trans-unit>
        <trans-unit id="824fff4f7103f9014fa581a196185b55db11db35" translate="yes" xml:space="preserve">
          <source>This is a cookie which is set when you login to AoC.  You can find it with
your browser inspector.  If you&amp;rsquo;re hacking on AoC at all you probably already
know these kind of tricks, but if you need help with that part then you can
&lt;a href=&quot;https://github.com/wimglenn/advent-of-code/issues/1&quot;&gt;look here&lt;/a&gt;.</source>
          <target state="translated">これは、AoCにログインしたときに設定されるCookieです。あなたはあなたのブラウザインスペクタでそれを見つけることができます。AoCをハッキングしているのであれば、おそらくこの種のトリックを既に知っているはずですが、その部分のヘルプが必要な場合は、 &lt;a href=&quot;https://github.com/wimglenn/advent-of-code/issues/1&quot;&gt;こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="775949f19085bf88678d7ee5fc7179e45803737b" translate="yes" xml:space="preserve">
          <source>This means your filenames should be something sensible. The examples below
should all parse correctly, because they have digits in the path that are
unambiguously recognisable as AoC years (2015+) or days (1-25).</source>
          <target state="translated">これは、あなたのファイル名が賢明なものでなければならないことを意味します。以下の例では、パスの中に AoC 年 (2015+)や日 (1-25)と明確に認識できる数字が含まれているので、すべて正しくパースされるはずです。</target>
        </trans-unit>
        <trans-unit id="67b23c30ea0f0aa806f36de17699b8e950396d29" translate="yes" xml:space="preserve">
          <source>To see an example of how to setup the entry-point for your code, look at &lt;a href=&quot;https://github.com/wimglenn/advent-of-code-sample&quot;&gt;advent-of-code-sample&lt;/a&gt; for some inspiration. After dumping a bunch of session tokens into</source>
          <target state="translated">コードのエントリポイントを設定する方法の例を確認するには、いくつかのヒントを得るために&lt;a href=&quot;https://github.com/wimglenn/advent-of-code-sample&quot;&gt;advent-of-code-sample&lt;/a&gt;を参照してください。一連のセッショントークンをダンプした後</target>
        </trans-unit>
        <trans-unit id="77b872c43b6a974ae65c90fdf0501b3580f30d8a" translate="yes" xml:space="preserve">
          <source>Verify your code against multiple different inputs</source>
          <target state="translated">複数の異なる入力に対してコードを検証</target>
        </trans-unit>
        <trans-unit id="ec801f28f8053d098edbbf492efa62800c748382" translate="yes" xml:space="preserve">
          <source>aoc</source>
          <target state="translated">アオック</target>
        </trans-unit>
        <trans-unit id="8f784f7d3dcb7ef84fefb5b477c2179f480b3486" translate="yes" xml:space="preserve">
          <source>aocd</source>
          <target state="translated">アオキュード</target>
        </trans-unit>
        <trans-unit id="68175c7c1f5063a4a4525895cf8a3a6402462970" translate="yes" xml:space="preserve">
          <source>aocd.get_data()</source>
          <target state="translated">aocd.get_data()</target>
        </trans-unit>
        <trans-unit id="4636a20401bba819d6bbde7a25493e482d2dfa4b" translate="yes" xml:space="preserve">
          <source>console script:</source>
          <target state="translated">コンソールスクリプトを使用しています。</target>
        </trans-unit>
        <trans-unit id="e8b70ff60cdffd656d93028218065671f39e131c" translate="yes" xml:space="preserve">
          <source>environment
variable with the desired location.</source>
          <target state="translated">環境変数に任意の場所を指定します。</target>
        </trans-unit>
        <trans-unit id="d9d7dfd7b48c9ea92ca6b64d16c353f0dfe33606" translate="yes" xml:space="preserve">
          <source>function
instead and have a nice day!</source>
          <target state="translated">関数を使用して、素敵な一日を過ごしましょう</target>
        </trans-unit>
        <trans-unit id="5b6491462ec4fa1e8f3abe89ea556e6aabd610f1" translate="yes" xml:space="preserve">
          <source>module was imported.</source>
          <target state="translated">モジュールがインポートされました。</target>
        </trans-unit>
        <trans-unit id="b5335edcecc401d1dda3c9d9fd1e901d60b0c742" translate="yes" xml:space="preserve">
          <source>pip install advent-of-code-wim</source>
          <target state="translated">pip install advent-of-code-wim</target>
        </trans-unit>
        <trans-unit id="4dee32b918a39a51856fcda6beecfa1d512a63c1" translate="yes" xml:space="preserve">
          <source>pkg_resources</source>
          <target state="translated">pkg_resources</target>
        </trans-unit>
        <trans-unit id="b49ab0b753786ae2ed4ea7fa9bca6b235b0902bf" translate="yes" xml:space="preserve">
          <source>problem_one.py</source>
          <target state="translated">問題1.py</target>
        </trans-unit>
        <trans-unit id="ce3cf783516d45ba23bcb0d2c7abffc4e196f1e6" translate="yes" xml:space="preserve">
          <source>runner will kill your code if it takes more than 60 seconds, you can increase/decrease this by passing a command-line option, e.g.</source>
          <target state="translated">runnerは60秒以上かかるとコードを終了させますが、これはコマンドラインオプションを渡すことで増減できます。</target>
        </trans-unit>
        <trans-unit id="d4c30e6b0c1d4ae031c38bf56b0213f760f89ca3" translate="yes" xml:space="preserve">
          <source>saves puzzle inputs, answers, names, and your bad guesses to avoid hitting
the AoC servers any more often than strictly necessary (this also speeds things up).
All data is persisted in plain text files under</source>
          <target state="translated">は、パズルの入力、答え、名前、間違った当て方を保存し、AoCサーバーを必要以上に頻繁に使用しないようにしています。すべてのデータは、プレーンテキストファイルに保存されます。</target>
        </trans-unit>
        <trans-unit id="1a25a44a4eef5700554e711d2742dd538985ee78" translate="yes" xml:space="preserve">
          <source>will not work, so don&amp;rsquo;t do that.  If
you don&amp;rsquo;t like weird frame hacks, just use the</source>
          <target state="translated">動作しませんので、しないでください。奇妙なフレームのハックが気に入らない場合は、</target>
        </trans-unit>
        <trans-unit id="140c6c5361f76963bfcf7b9eebb0b1f32d1c9ce0" translate="yes" xml:space="preserve">
          <source>you could do something like this by running the</source>
          <target state="translated">を実行することで、このようなことができます。</target>
        </trans-unit>
        <trans-unit id="7c76313496eb19c8df7b0e3a65d156c64459b345" translate="yes" xml:space="preserve">
          <source>~/.config/aocd</source>
          <target state="translated">〜/ .config / aocd</target>
        </trans-unit>
        <trans-unit id="71fe30b39f5e7bffad492e4b2c5f0342e12387c3" translate="yes" xml:space="preserve">
          <source>~/.config/aocd/token</source>
          <target state="translated">〜/ .config / aocd / token</target>
        </trans-unit>
        <trans-unit id="3f8f384180c34215ff4d24469fe7e751d30a1376" translate="yes" xml:space="preserve">
          <source>~/.config/aocd/tokens.json</source>
          <target state="translated">〜/ .config / aocd / tokens.json</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
