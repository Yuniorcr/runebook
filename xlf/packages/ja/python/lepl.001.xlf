<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/lepl/">
    <body>
      <group id="lepl">
        <trans-unit id="8b59407e91b9c85eb8f4e2a0b521af6ddb48b525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.acooke.org/lepl/lepl5.0.html&quot;&gt;Release 5&lt;/a&gt; has simpler stream
(input) handling.  Memoisation, line-aware lexing and memory use have also
been revised.  These changes make future extension easier, fix several bugs,
and improve performance.</source>
          <target state="translated">&lt;a href=&quot;http://www.acooke.org/lepl/lepl5.0.html&quot;&gt;リリース5&lt;/a&gt;では、ストリーム（入力）の処理が簡単になっています。メモ化、行認識字句解析、およびメモリ使用も改訂されました。これらの変更により、将来の拡張が容易になり、いくつかのバグが修正され、パフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="dcf165b1bcb3bc7266d233ae8c0600620cd5ffcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Friendly syntax&lt;/strong&gt; using Python&amp;rsquo;s operators allows grammars
to be defined in a declarative style close to BNF.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Pythonの演算子を使用したわかりやすい&lt;strong&gt;構文&lt;/strong&gt;により、BNFに近い宣言型のスタイルで文法を定義できます。</target>
        </trans-unit>
        <trans-unit id="4f561d5b518b9ae830b160401fe1b343aa7f6858" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parser rewriting&lt;/strong&gt;.  The parser can itself be manipulated by
Python code.  This gives unlimited opportunities for future
expansion and optimisation.</source>
          <target state="translated">&lt;strong&gt;パーサーの書き換え&lt;/strong&gt;。パーサー自体はPythonコードで操作できます。これにより、将来の拡張と最適化の機会が無限に広がります。</target>
        </trans-unit>
        <trans-unit id="a2c4bd62c1da5a5c40ec6071f7b022fbb19c9a46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parsers are Python code&lt;/strong&gt;, defined in Python itself.  No separate
grammar is necessary.</source>
          <target state="translated">&lt;strong&gt;パーサーはPythonコード&lt;/strong&gt;であり、Python自体で定義されています。個別の文法は必要ありません。</target>
        </trans-unit>
        <trans-unit id="70866221745a1418bcde933992974989853c3d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unlimited recursion depth&lt;/strong&gt;.  The underlying algorithm is
recursive descent, which can exhaust the stack for complex grammars
and large data sets.  LEPL avoids this problem by using Python
generators as coroutines (aka &amp;ldquo;trampolining&amp;rdquo;).</source>
          <target state="translated">&lt;strong&gt;無制限の再帰の深さ&lt;/strong&gt;。基礎となるアルゴリズムは再帰下降であり、複雑な文法や大規模なデータセットのスタックを使い果たす可能性があります。LEPLは、Pythonジェネレーターをコルーチンとして使用することでこの問題を回避します（別名「トランポリン」）。</target>
        </trans-unit>
        <trans-unit id="a80415d1bd11d5892d74470e04084671a57b27f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Well documented&lt;/strong&gt; and easy to extend.</source>
          <target state="translated">&lt;strong&gt;十分に文書化されて&lt;/strong&gt;おり、簡単に拡張できます。</target>
        </trans-unit>
        <trans-unit id="be91da727724f10f3030b406d10219e18f542889" translate="yes" xml:space="preserve">
          <source>A Parser Library for Python 2.6+/3+: Recursive Descent; Full Backtracking</source>
          <target state="translated">Python 2.6+/3+用のパーサライブラリ。再帰的降下;フルバックトラック</target>
        </trans-unit>
        <trans-unit id="998c9a2df4c33a3d27fc2c07fd63e7d7f0d6824e" translate="yes" xml:space="preserve">
          <source>Built-in &lt;strong&gt;AST support&lt;/strong&gt; with support for iteration, traversal and
re&amp;ndash;writing.</source>
          <target state="translated">反復、トラバーサル、および再書き込みをサポート&lt;strong&gt;する&lt;/strong&gt;組み込みの&lt;strong&gt;ASTサポート&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特徴</target>
        </trans-unit>
        <trans-unit id="237fff0d6c895b48b76fc1ec355575e22b0a8e79" translate="yes" xml:space="preserve">
          <source>For example, it is not limited by the Python stack, because it uses
trampolining and co-routines.  Multiple parses can be found for ambiguous
grammars and it can also handle left-recursive grammars.</source>
          <target state="translated">例えば、トランポリンやコ・ルーティンを使うので、Pythonスタックの制限を受けません。曖昧な文法に対して複数のパースを見つけることができ、左再帰的な文法も扱うことができます。</target>
        </trans-unit>
        <trans-unit id="d13272dbf605470d5987c679f283ee03b00763be" translate="yes" xml:space="preserve">
          <source>Generic, pure-Python approach supports parsing a wide variety of data
including &lt;strong&gt;bytes&lt;/strong&gt; (Python 3+ only).</source>
          <target state="translated">一般的な純粋なPythonアプローチは、&lt;strong&gt;バイト&lt;/strong&gt;を含むさまざまなデータの解析をサポートし&lt;strong&gt;ます&lt;/strong&gt;（Python 3以降のみ）。</target>
        </trans-unit>
        <trans-unit id="459d802d603b95d370570c642b66ae187be7049a" translate="yes" xml:space="preserve">
          <source>Integrated, optional &lt;strong&gt;lexer&lt;/strong&gt; simplifies handling whitespace.</source>
          <target state="translated">統合されたオプションの&lt;strong&gt;レクサーは&lt;/strong&gt;、空白の処理を簡素化します。</target>
        </trans-unit>
        <trans-unit id="87c5743b91bd75d449b16a0775316c59cb902e5f" translate="yes" xml:space="preserve">
          <source>LEPL is a recursive descent parser, written in Python, which has a a friendly,
easy-to-use syntax.  The underlying implementation includes
several features that make it more powerful than might be expected.</source>
          <target state="translated">LEPLはPythonで書かれた再帰的降下パーサで、フレンドリーで使いやすい構文を持っています。基礎となる実装には、予想以上に強力な機能がいくつか含まれています。</target>
        </trans-unit>
        <trans-unit id="b2dbf7f56a1596a6bcdb2143e0781af0c1e8d4ab" translate="yes" xml:space="preserve">
          <source>Memoisation can detect and control &lt;strong&gt;left-recursive grammars&lt;/strong&gt;.  Together
with LEPL&amp;rsquo;s support for ambiguity this means that &amp;ldquo;any&amp;rdquo; grammar can be
supported.</source>
          <target state="translated">メモ化は、&lt;strong&gt;左再帰文法を&lt;/strong&gt;検出および制御できます。LEPLのあいまいさのサポートとともに、これは「任意の」文法をサポートできることを意味します。</target>
        </trans-unit>
        <trans-unit id="281b5d7ac1d5c25a7d09c76eb3499a76a5c7ab37" translate="yes" xml:space="preserve">
          <source>Parsers can be made more &lt;strong&gt;efficient&lt;/strong&gt; with automatic memoisation (&amp;ldquo;packrat
parsing&amp;rdquo;).</source>
          <target state="translated">自動メモ化（「packrat解析」）を使用すると、パーサーをより&lt;strong&gt;効率的に&lt;/strong&gt;することができます。</target>
        </trans-unit>
        <trans-unit id="53327c1a25884cb1a1ab37d7f8fb1c782c7e6790" translate="yes" xml:space="preserve">
          <source>Support for ambiguous grammars (&lt;strong&gt;complete backtracking&lt;/strong&gt;).  A
parser can return more than one result (aka &lt;strong&gt;&amp;ldquo;parse forests&amp;rdquo;&lt;/strong&gt;).</source>
          <target state="translated">あいまいな文法のサポート（&lt;strong&gt;完全なバックトラック&lt;/strong&gt;）。パーサーは複数の結果を返すことができます（別名&lt;strong&gt;「フォレストの解析」&lt;/strong&gt;）。</target>
        </trans-unit>
        <trans-unit id="b2ec67336431bf0605e40b3af09d6159014d9539" translate="yes" xml:space="preserve">
          <source>THIS PROJECT IS NO LONGER DEVELOPED.  PLEASE SEE THE
&lt;a href=&quot;http://www.acooke.org/lepl&quot;&gt;SITE&lt;/a&gt; FOR MORE INFORMATION.</source>
          <target state="translated">このプロジェクトはもはや開発されていません。参照してください &lt;a href=&quot;http://www.acooke.org/lepl&quot;&gt;SITEを&lt;/a&gt;詳細情報を参照してください。</target>
        </trans-unit>
        <trans-unit id="297d78ea5281169c97f03d729e46f1b5909094b5" translate="yes" xml:space="preserve">
          <source>The aim is a powerful, extensible parser that will also give solid, reliable
results to first-time users.</source>
          <target state="translated">その目的は、強力で拡張性の高いパーサーであり、初めてのユーザーにも確実で信頼性の高い結果を提供することです。</target>
        </trans-unit>
        <trans-unit id="053e63df8ec1d4bc209f44100344c3bced429ec2" translate="yes" xml:space="preserve">
          <source>Trace and resource management, including &lt;strong&gt;&amp;ldquo;deepest match&amp;rdquo; diagnostics&lt;/strong&gt;
and the ability to limit backtracking.</source>
          <target state="translated">&lt;strong&gt;「最も深い一致」の診断&lt;/strong&gt; とバックトラックを制限する機能を含む、トレースとリソースの管理。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
