<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/py-daemon/">
    <body>
      <group id="py-daemon">
        <trans-unit id="257abd43fadf89cd2e209a0a65d1c1a9d7b1a2f3" translate="yes" xml:space="preserve">
          <source># Do stuff</source>
          <target state="translated"># Do stuff</target>
        </trans-unit>
        <trans-unit id="8154a2994c8d7052be0468ba54d3022214862e1a" translate="yes" xml:space="preserve">
          <source>* `restart()` - does `stop()` then `start()`.</source>
          <target state="translated">* `restart()` - does `stop()` then `start()`.</target>
        </trans-unit>
        <trans-unit id="f9846ec6b0c52e1e1547b6b38d7cb126495a0425" translate="yes" xml:space="preserve">
          <source>* `start()` - starts the daemon (creates PID and daemonizes).</source>
          <target state="translated">* `start()` - starts the daemon (creates PID and daemonizes).</target>
        </trans-unit>
        <trans-unit id="81b50069a60ff6230e550b7f98afee9f2bd4153b" translate="yes" xml:space="preserve">
          <source>* `stop()` - stops the daemon (stops the child process and removes the PID).</source>
          <target state="translated">* `stop()` - stops the daemon (stops the child process and removes the PID).</target>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">アクション</target>
        </trans-unit>
        <trans-unit id="f913b7213f15df2e95ab66230ce4cf7dc5e36a6e" translate="yes" xml:space="preserve">
          <source>Based on [this original version from jejik.com](http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/).</source>
          <target state="translated">原作は[jejik.comのオリジナル版](http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/)。</target>
        </trans-unit>
        <trans-unit id="098118f0404052d987936a810450d270e1556f0c" translate="yes" xml:space="preserve">
          <source>Continuous execution</source>
          <target state="translated">継続的な実行</target>
        </trans-unit>
        <trans-unit id="461562f0bb0d7c561091c1c73193798fb2686e00" translate="yes" xml:space="preserve">
          <source>Create a new object of your class, specifying where you want your PID file to exist:</source>
          <target state="translated">自分のクラスの新しいオブジェクトを作成し、PIDファイルを存在させたい場所を指定します。</target>
        </trans-unit>
        <trans-unit id="54bdaad0cd18271b92590f0ebac6846cdc0d1cac" translate="yes" xml:space="preserve">
          <source>Define a class which inherits from `Daemon` and has a `run()` method (which is what will be called once the daemonization is completed.</source>
          <target state="translated">Daemon` を継承し、`run()`メソッド(デーモン化が完了したら呼び出されるもの)を持つクラスを定義する。</target>
        </trans-unit>
        <trans-unit id="f7745efdedae8430f407638389ab56b4f858eeed" translate="yes" xml:space="preserve">
          <source>Foreground</source>
          <target state="translated">前景</target>
        </trans-unit>
        <trans-unit id="ce0338af572a90b4bbb9a4233d9f2c70c3031e2c" translate="yes" xml:space="preserve">
          <source>Python daemonizer class</source>
          <target state="translated">Python デーモナイザクラス</target>
        </trans-unit>
        <trans-unit id="bd755f7faf7df154cc9d93ba03510bc65c355dad" translate="yes" xml:space="preserve">
          <source>Python daemonizer for Unix, Linux and OS X</source>
          <target state="translated">Unix、Linux、OS X 用 Python デーモナイザ</target>
        </trans-unit>
        <trans-unit id="4bedd1699e1c4b8c35a095495f3c28e31dfbb353" translate="yes" xml:space="preserve">
          <source>The `run()` method will be executed just once so if you want the daemon to be doing stuff continuously you may wish to use the [sched][1] module to execute code repeatedly ([example][2]).</source>
          <target state="translated">run()` メソッドは一度だけ実行されるので、デーモンに何かを継続的に実行させたい場合は、コードを繰り返し実行するために [sched][1]モジュールを使用したいかもしれません ([example][2])。</target>
        </trans-unit>
        <trans-unit id="95e8866582b749ac79e17bbd3fc63553fda4957e" translate="yes" xml:space="preserve">
          <source>This is a Python class that will daemonize your Python script so it can continue running in the background. It works on Unix, Linux and OS X, creates a PID file and has standard commands (start, stop, restart) + a foreground mode.</source>
          <target state="translated">これは Python スクリプトをデーモン化し、バックグラウンドで実行し続けることができるようにする Python クラスです。Unix,Linux,OS X で動作し、PID ファイルを作成し、標準コマンド (start,stop,restart)とフォアグラウンドモードを持ちます。</target>
        </trans-unit>
        <trans-unit id="95372948bff22b89d6731b872462ea9b1cd29e5c" translate="yes" xml:space="preserve">
          <source>This is useful for debugging because you can start the code without making it a daemon. The running script then depends on the open shell like any normal Python script.</source>
          <target state="translated">これは、デーモンにすることなくコードを起動できるので、デバッグに便利です。実行中のスクリプトは、通常の Python スクリプトのようにオープンシェルに依存します。</target>
        </trans-unit>
        <trans-unit id="92c04a88ea234306aba6bb42e29db5951d23ad19" translate="yes" xml:space="preserve">
          <source>To do this, just call the `run()` method directly.</source>
          <target state="translated">これを行うには、`run()`メソッドを直接呼び出してください。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="d26838d0b7e89a95c55e76948363015a14d59520" translate="yes" xml:space="preserve">
          <source>[1]: http://docs.python.org/library/sched.html</source>
          <target state="translated">[1]: http://docs.python.org/library/sched.html</target>
        </trans-unit>
        <trans-unit id="43b4854ed9017d3b112c3ebd70d91070e4aad607" translate="yes" xml:space="preserve">
          <source>[2]: https://github.com/serverdensity/sd-agent/blob/master/agent.py#L339</source>
          <target state="translated">[2]: https://github.com/serverdensity/sd-agent/blob/master/agent.py#L339</target>
        </trans-unit>
        <trans-unit id="d70cac17f5c3f17a57cda476d9b6dd7153f20763" translate="yes" xml:space="preserve">
          <source>class pantalaimon(Daemon):</source>
          <target state="translated">class pantalaimon(Daemon)。</target>
        </trans-unit>
        <trans-unit id="d9096d97c422134c85a3a5a4754c45aa13c827f9" translate="yes" xml:space="preserve">
          <source>def run(self):</source>
          <target state="translated">def run(self).</target>
        </trans-unit>
        <trans-unit id="4d2097d0996101ab6a9bcb885196c642f20cb237" translate="yes" xml:space="preserve">
          <source>from daemon import Daemon</source>
          <target state="translated">from daemon import Daemon</target>
        </trans-unit>
        <trans-unit id="7ddb04e48e74940b9c9f490d61ce2c82edfe772c" translate="yes" xml:space="preserve">
          <source>pineMarten = pantalaimon('/path/to/pid.pid')</source>
          <target state="translated">pineMarten=pantalaimon('/path/to/pid.pid')</target>
        </trans-unit>
        <trans-unit id="b355b9d4a49cb60d3ba1b7be275e148c48b77521" translate="yes" xml:space="preserve">
          <source>pineMarten.run()</source>
          <target state="translated">pineMarten.run()</target>
        </trans-unit>
        <trans-unit id="09783be0077c5ad3bbb505905efb5fb126f85e8c" translate="yes" xml:space="preserve">
          <source>pineMarten.start()</source>
          <target state="translated">pineMarten.start()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
