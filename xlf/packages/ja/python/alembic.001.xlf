<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/alembic/">
    <body>
      <group id="alembic">
        <trans-unit id="8458b53b78a2e5044af11eb1a958e7075036f4e6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;auto generation&amp;rdquo; of migrations. While real world migrations are far more
complex than what can be automatically determined, Alembic can still
eliminate the initial grunt work in generating new migration directives
from an altered schema.  The</source>
          <target state="translated">移行の「自動生成」。実際の移行は、自動的に決定できる移行よりもはるかに複雑ですが、Alembicは、変更されたスキーマから新しい移行ディレクティブを生成する際の初期の面倒な作業を排除できます。の</target>
        </trans-unit>
        <trans-unit id="32c15aa6bf1cdf50f11797596e4399ff85d05265" translate="yes" xml:space="preserve">
          <source>--autogenerate</source>
          <target state="translated">-自動生成</target>
        </trans-unit>
        <trans-unit id="79be64fbfcbac730126260737683a2ace8223d9b" translate="yes" xml:space="preserve">
          <source>A database migration tool for SQLAlchemy.</source>
          <target state="translated">SQLAlchemy用のデータベース移行ツールです。</target>
        </trans-unit>
        <trans-unit id="050cab9398e18c793c185ec23434d1e82433a62e" translate="yes" xml:space="preserve">
          <source>Above all, SQLAlchemy places great emphasis on polite, thoughtful, and
constructive communication between users and developers.
Please see our current Code of Conduct at
&lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">何よりも、SQLAlchemyはユーザーと開発者の間の礼儀正しく、思慮深く、建設的なコミュニケーションに大きな重点を置いています。で、行動の私たちの現在のコードを参照してください &lt;a href=&quot;https://www.sqlalchemy.org/codeofconduct.html&quot;&gt;行動規範&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed93ccfb2e93cce318ad215757760a5eb6a2215a" translate="yes" xml:space="preserve">
          <source>Alembic is a database migrations tool written by the author
of &lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt;.  A migrations tool
offers the following functionality:</source>
          <target state="translated">Alembicは、&lt;a href=&quot;http://www.sqlalchemy.org&quot;&gt;SQLAlchemy&lt;/a&gt;の作成者が作成したデータベース移行ツールです。移行ツールには次の機能があります。</target>
        </trans-unit>
        <trans-unit id="c523d8646d33a476249705c180bd0d84e03f3b92" translate="yes" xml:space="preserve">
          <source>Alembic is distributed under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.</source>
          <target state="translated">Alembicは&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MITライセンスの&lt;/a&gt;下で配布されます。</target>
        </trans-unit>
        <trans-unit id="c6effbd95a98cf3f8922f051b4da82f21479ada3" translate="yes" xml:space="preserve">
          <source>Alembic is part of the &lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemy Project&lt;/a&gt; and
adheres to the same standards and conventions as the core project.</source>
          <target state="translated">Alembicは&lt;a href=&quot;https://www.sqlalchemy.org&quot;&gt;SQLAlchemyプロジェクトの&lt;/a&gt;一部であり、コアプロジェクトと同じ標準と規約に準拠しています。</target>
        </trans-unit>
        <trans-unit id="2caf180e7eeeb94982ba97c4515abb7904321377" translate="yes" xml:space="preserve">
          <source>Allows the scripts to execute in some sequential manner.</source>
          <target state="translated">スクリプトを何らかの順序で実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="b32d49f1401d4f9f889e5d35222bf1ba9ea7be2e" translate="yes" xml:space="preserve">
          <source>At long last, bring SQLite and its inablity to ALTER things into the fold,
but in such a way that SQLite&amp;rsquo;s very special workflow needs are accommodated
in an explicit way that makes the most of a bad situation, through the
concept of a &amp;ldquo;batch&amp;rdquo; migration, where multiple changes to a table can
be batched together to form a series of instructions for a single, subsequent
&amp;ldquo;move-and-copy&amp;rdquo; workflow.   You can even use &amp;ldquo;move-and-copy&amp;rdquo; workflow for
other databases, if you want to recreate a table in the background
on a busy system.</source>
          <target state="translated">ついに、SQLiteとその機能を変更できないようにして、SQLiteの非常に特殊なワークフローのニーズに、「バッチ」の概念を通じて、悪い状況を最大限に活用する明示的な方法で対応できるようにします。移行。テーブルへの複数の変更をバッチ処理して、単一の後続の「移動とコピー」ワークフローのための一連の指示を作成できます。ビジー状態のシステムでバックグラウンドでテーブルを再作成する場合は、他のデータベースの「移動とコピー」ワークフローを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="624f3b913fa937a736c0cd8d54bd5fadc490a2b2" translate="yes" xml:space="preserve">
          <source>Can emit ALTER statements to a database in order to change
the structure of tables and other constructs</source>
          <target state="translated">テーブルや他の構造体の構造を変更するために、データベースにALTER文を発行することができます。</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">行動規範</target>
        </trans-unit>
        <trans-unit id="77cb3ee1d47bde3bc338c9fbcf0e4be86b1428b5" translate="yes" xml:space="preserve">
          <source>Development / Bug reporting / Pull requests</source>
          <target state="translated">開発/バグ報告/プルリクエスト</target>
        </trans-unit>
        <trans-unit id="567a6d33bf116fe2ed15d94b82c96f99b93c83d7" translate="yes" xml:space="preserve">
          <source>Documentation and status of Alembic is at &lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/&lt;/a&gt;</source>
          <target state="translated">Alembicのドキュメントとステータスは&lt;a href=&quot;https://alembic.sqlalchemy.org/&quot;&gt;https://alembic.sqlalchemy.org/にあります&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09eb8faa5de32a52f2a0ce8468cf52b05cd4eb3a" translate="yes" xml:space="preserve">
          <source>Full support for migrations generated as SQL scripts.   Those of us who
work in corporate environments know that direct access to DDL commands on a
production database is a rare privilege, and DBAs want textual SQL scripts.
Alembic&amp;rsquo;s usage model and commands are oriented towards being able to run a
series of migrations into a textual output file as easily as it runs them
directly to a database. Care must be taken in this mode to not invoke other
operations that rely upon in-memory SELECTs of rows - Alembic tries to
provide helper constructs like bulk_insert() to help with data-oriented
operations that are compatible with script-based DDL.</source>
          <target state="translated">SQLスクリプトとして生成された移行の完全サポート。企業環境で作業している私たちは、本番データベースのDDLコマンドに直接アクセスすることはまれな特権であることを知っており、DBAはテキストのSQLスクリプトを必要としています。Alembicの使用モデルとコマンドは、データベースに対して直接実行するのと同じくらい簡単に、一連の移行をテキスト出力ファイルに実行できるようになっています。このモードでは、行のメモリ内SELECTに依存する他の操作を呼び出さないように注意する必要があります。Alembicは、bulk_insert（）などのヘルパーコンストラクトを提供して、スクリプトベースのDDLと互換性のあるデータ指向の操作を支援しようとします。</target>
        </trans-unit>
        <trans-unit id="29352cce3621de5a7556c6dcdd7b05688c414885" translate="yes" xml:space="preserve">
          <source>Full support for transactional DDL.   The default scripts ensure that all
migrations occur within a transaction - for those databases which support
this (Postgresql, Microsoft SQL Server), migrations can be tested with no
need to manually undo changes upon failure.</source>
          <target state="translated">トランザクションDDLを完全にサポート。デフォルトのスクリプトは、すべての移行がトランザクション内で行われることを保証します。これをサポートするデータベース(Postgresql、Microsoft SQL Server)では、失敗しても手動で変更を元に戻す必要なく、移行をテストできます。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="48ec0553f698534a6e66221e7887915615f78c49" translate="yes" xml:space="preserve">
          <source>Minimalist script construction.  Basic operations like renaming
tables/columns, adding/removing columns, changing column attributes can be
performed through one line commands like alter_column(), rename_table(),
add_constraint(). There is no need to recreate full SQLAlchemy Table
structures for simple operations like these - the functions themselves
generate minimalist schema structures behind the scenes to achieve the given
DDL sequence.</source>
          <target state="translated">最小限のスクリプト構成。テーブル/カラムの名前の変更、カラムの追加/削除、カラム属性の変更などの基本的な操作は、 alter_column()、 rename_table()、add_constraint()のような一行コマンドで実行することができます。このような単純な操作のために完全な SQLAlchemy テーブル構造を再作成する必要はありません。関数自体が、与えられた DDL シーケンスを実現するための最小限のスキーマ構造を舞台裏で生成します。</target>
        </trans-unit>
        <trans-unit id="3b2e11fb0d5b4303d76fef2652a26da78071e8f3" translate="yes" xml:space="preserve">
          <source>Non-linear, dependency-graph versioning.   Scripts are given UUID
identifiers similarly to a DVCS, and the linkage of one script to the next
is achieved via human-editable markers within the scripts themselves.
The structure of a set of migration files is considered as a
directed-acyclic graph, meaning any migration file can be dependent
on any other arbitrary set of migration files, or none at
all.  Through this open-ended system, migration files can be organized
into branches, multiple roots, and mergepoints, without restriction.
Commands are provided to produce new branches, roots, and merges of
branches automatically.</source>
          <target state="translated">非線形、依存関係グラフのバージョニング。スクリプトには DVCS と同様の UUID 識別子が与えられ、あるスクリプトから次のスクリプトへのリンクは、スクリプト自体の中にある人間が編集可能なマーカーによって実現されます。つまり、どのマイグレーションファイルも他の任意のマイグレーションファイルセットに依存していたり、全く依存していなかったりします。このオープンエンドのシステムを通して、マイグレーションファイルは、制限なく、ブランチ、複数のルート、マージポイントに編成することができます。新しいブランチ、ルート、ブランチのマージを自動的に生成するためのコマンドが提供されています。</target>
        </trans-unit>
        <trans-unit id="3317c96580f9a295a287a36960ca1ac3848d4c9e" translate="yes" xml:space="preserve">
          <source>Please refer to the
&lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemy Community Guide&lt;/a&gt; for
guidelines on coding and participating in this project.</source>
          <target state="translated">このプロジェクトのコーディングと参加に関するガイドラインについては、&lt;a href=&quot;https://www.sqlalchemy.org/develop.html&quot;&gt;SQLAlchemyコミュニティガイド&lt;/a&gt;を参照してください 。</target>
        </trans-unit>
        <trans-unit id="fc1a4a029f51aa104cdb8b00e39f2958c1b5ae01" translate="yes" xml:space="preserve">
          <source>Provide a library of ALTER constructs that can be used by any SQLAlchemy
application. The DDL constructs build upon SQLAlchemy&amp;rsquo;s own DDLElement base
and can be used standalone by any application or script.</source>
          <target state="translated">SQLAlchemyアプリケーションで使用できるALTER構文のライブラリを提供します。DDLコンストラクトはSQLAlchemy独自のDDLElementベースに基づいて構築されており、任意のアプリケーションまたはスクリプトでスタンドアロンで使用できます。</target>
        </trans-unit>
        <trans-unit id="88b302d41e9a6a1112e7143e9e6e8f37d1265fa0" translate="yes" xml:space="preserve">
          <source>Provides a system whereby &amp;ldquo;migration scripts&amp;rdquo; may be constructed;
each script indicates a particular series of steps that can &amp;ldquo;upgrade&amp;rdquo; a
target database to a new version, and optionally a series of steps that can
&amp;ldquo;downgrade&amp;rdquo; similarly, doing the same steps in reverse.</source>
          <target state="translated">「移行スクリプト」を構築できるシステムを提供します。各スクリプトは、ターゲットデータベースを新しいバージョンに「アップグレード」できる特定の一連の手順と、オプションで同じ手順を逆に実行して同様に「ダウングレード」できる一連の手順を示します。</target>
        </trans-unit>
        <trans-unit id="af3ce9a108e869672fca95e25ffe5a0e7aa5cb63" translate="yes" xml:space="preserve">
          <source>The SQLAlchemy Project</source>
          <target state="translated">SQLAlchemyプロジェクト</target>
        </trans-unit>
        <trans-unit id="fea6abb36b5b955e04e2da98b4c5a62bdbcd8831" translate="yes" xml:space="preserve">
          <source>The goals of Alembic are:</source>
          <target state="translated">アレムビックの目標は</target>
        </trans-unit>
        <trans-unit id="aa0b572ab1e556153ce0327b9b36c2ed88dd0e24" translate="yes" xml:space="preserve">
          <source>Very open ended and transparent configuration and operation.   A new
Alembic environment is generated from a set of templates which is selected
among a set of options when setup first occurs. The templates then deposit a
series of scripts that define fully how database connectivity is established
and how migration scripts are invoked; the migration scripts themselves are
generated from a template within that series of scripts. The scripts can
then be further customized to define exactly how databases will be
interacted with and what structure new migration files should take.</source>
          <target state="translated">非常にオープンエンドで透過的な設定と操作が可能です。新しいAlembic環境は、最初にセットアップが行われたときに、一連のオプションの中から選択されたテンプレートのセットから生成されます。テンプレートは、データベース接続の確立方法や移行スクリプトの起動方法を完全に定義する一連のスクリプトを提供します。移行スクリプト自体は、その一連のスクリプトの中のテンプレートから生成されます。</target>
        </trans-unit>
        <trans-unit id="ac2929a680f8164a191f94e8157db17de75f969f" translate="yes" xml:space="preserve">
          <source>feature will inspect the
current status of a database using SQLAlchemy&amp;rsquo;s schema inspection
capabilities, compare it to the current state of the database model as
specified in Python, and generate a series of &amp;ldquo;candidate&amp;rdquo; migrations,
rendering them into a new migration script as Python directives. The
developer then edits the new file, adding additional directives and data
migrations as needed, to produce a finished migration. Table and column
level changes can be detected, with constraints and indexes to follow as
well.</source>
          <target state="translated">この機能は、SQLAlchemyのスキーマ検査機能を使用してデータベースの現在のステータスを検査し、Pythonで指定されているデータベースモデルの現在の状態と比較して、一連の「候補」移行を生成し、それらをPythonディレクティブとして新しい移行スクリプトにレンダリングします。その後、開発者は新しいファイルを編集し、必要に応じてディレクティブとデータ移行を追加して、完成した移行を生成します。表および列レベルの変更を検出でき、制約および索引も追跡できます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
