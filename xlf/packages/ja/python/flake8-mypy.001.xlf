<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/flake8-mypy/">
    <body>
      <group id="flake8-mypy">
        <trans-unit id="60488cac36c3dc3751c1291910e0d7cab19677b7" translate="yes" xml:space="preserve">
          <source>&amp;macr;\_(ツ)_/&amp;macr;</source>
          <target state="translated">&amp;macr;\ _（ツ）_ /&amp;macr;</target>
        </trans-unit>
        <trans-unit id="c5de8b04dcdf529c65c8be3014afcd34cc5b662b" translate="yes" xml:space="preserve">
          <source>). The value of that option should be a path to a
mypy.ini or setup.cfg compatible file. For full configuration syntax,
follow &lt;a href=&quot;http://mypy.readthedocs.io/en/latest/config_file.html&quot;&gt;mypy
documentation&lt;/a&gt;.</source>
          <target state="translated">）。そのオプションの値は、mypy.iniまたはsetup.cfg互換ファイルへのパスである必要があります。完全な構成構文については、&lt;a href=&quot;http://mypy.readthedocs.io/en/latest/config_file.html&quot;&gt;mypyのドキュメント&lt;/a&gt;に従ってください。</target>
        </trans-unit>
        <trans-unit id="3589ac6e3e8d464a43586be5e04841eee061246a" translate="yes" xml:space="preserve">
          <source>--disallow-untyped-calls</source>
          <target state="translated">--disallow-untyped-calls</target>
        </trans-unit>
        <trans-unit id="54038f5a1c66a56b596028b7372d7545f52cfc96" translate="yes" xml:space="preserve">
          <source>--follow-imports</source>
          <target state="translated">--follow-imports</target>
        </trans-unit>
        <trans-unit id="46120ae092895e4fcab91fc5e752ef8f6497eedf" translate="yes" xml:space="preserve">
          <source>--mypy-config=</source>
          <target state="translated">--mypy-config =</target>
        </trans-unit>
        <trans-unit id="3ca0d8063e6fb00a77a7818fd98c45eae7922ab4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Flake8&lt;/em&gt; operates on unrelated files, it doesn&amp;rsquo;t perform full program
analysis. In other words, it doesn&amp;rsquo;t follow imports. This is a curse and
a blessing. We cannot find complex problems and the number of warnings
we can safely show without risking false positives is lower. In return,
we can provide useful warnings with great performance, usable for
realtime editor integration.</source>
          <target state="translated">&lt;em&gt;Flake8&lt;/em&gt;は無関係のファイルで動作し、完全なプログラム分析を実行しません。言い換えれば、それはインポートに従わない。これは呪いと祝福です。複雑な問題を見つけることはできず、誤検知のリスクを冒さずに安全に表示できる警告の数は少なくなります。その見返りとして、リアルタイムのエディター統合に使用できる、優れたパフォーマンスを備えた便利な警告を提供できます。</target>
        </trans-unit>
        <trans-unit id="1e6a33b799d99a72b912f28a90ea025eb3386657" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flake8-mypy&lt;/em&gt; reserves &lt;strong&gt;T4&lt;/strong&gt; for all current and future codes, T being
the natural letter for typing-related errors. There are other plugins
greedily reserving the entire letter &lt;strong&gt;T&lt;/strong&gt;. To this I say:</source>
          <target state="translated">&lt;em&gt;flake8-mypy&lt;/em&gt;は、現在および将来のすべてのコード用に&lt;strong&gt;T4&lt;/strong&gt;を予約します。Tは、入力関連のエラーの自然な文字です。文字&lt;strong&gt;T&lt;/strong&gt;全体を貪欲に予約する他のプラグインがあります。これに私は言う：</target>
        </trans-unit>
        <trans-unit id="bd5c4dcdf2ee1ea515601f8540c77dc661d32621" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mypy&lt;/em&gt; shines when given a full program to analyze. You can then use
options like</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;分析するための完全なプログラムが与えられると、&lt;em&gt;mypyは&lt;/em&gt;輝きます。その後、次のようなオプションを使用できます</target>
        </trans-unit>
        <trans-unit id="974887dfa46a311b9f39c0942ae5d39115b9222a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;T400&lt;/strong&gt;: any typing note.</source>
          <target state="translated">&lt;strong&gt;T400&lt;/strong&gt;：タイピングノート。</target>
        </trans-unit>
        <trans-unit id="14da6db46ca06b5d99b2d6cda83558a26e6c9c79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;T484&lt;/strong&gt;: any typing error (after PEP 484, geddit?).</source>
          <target state="translated">&lt;strong&gt;T484&lt;/strong&gt;：入力エラー（PEP 484の後、geddit？）。</target>
        </trans-unit>
        <trans-unit id="631a7e672461b4c5f9af05f3b2e2c193caf44968" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;T498&lt;/strong&gt;: internal &lt;em&gt;mypy&lt;/em&gt; error.</source>
          <target state="translated">&lt;strong&gt;T498&lt;/strong&gt;：内部&lt;em&gt;mypy&lt;/em&gt;エラー。</target>
        </trans-unit>
        <trans-unit id="a0dacfe6bcd97c970d9f2b206d84f6c13c70b89c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;T499&lt;/strong&gt;: internal &lt;em&gt;mypy&lt;/em&gt; traceback, stderr output, or an unmatched
line.</source>
          <target state="translated">&lt;strong&gt;T499&lt;/strong&gt;：内部&lt;em&gt;mypy&lt;/em&gt;トレースバック、stderr出力、または一致しない行。</target>
        </trans-unit>
        <trans-unit id="f04261d13987fe5171a6036526d16e31e8e44548" translate="yes" xml:space="preserve">
          <source>A plugin for &lt;a href=&quot;http://flake8.pycqa.org/&quot;&gt;Flake8&lt;/a&gt; integrating
&lt;a href=&quot;http://mypy-lang.org/&quot;&gt;mypy&lt;/a&gt;. The idea is to enable limited type
checking as a linter inside editors and other tools that already support
&lt;em&gt;Flake8&lt;/em&gt; warning syntax and config.</source>
          <target state="translated">&lt;a href=&quot;http://flake8.pycqa.org/&quot;&gt;mypyを&lt;/a&gt;統合する &lt;a href=&quot;http://mypy-lang.org/&quot;&gt;Flake8の&lt;/a&gt;プラグイン。アイデアは、&lt;em&gt;Flake8&lt;/em&gt;警告構文と&lt;em&gt;構成&lt;/em&gt;をすでにサポートしているエディターやその他のツール内のリンターとして限定型チェックを有効にすること です。</target>
        </trans-unit>
        <trans-unit id="818767d0f3f0d4c305cb2870d32965cfd535224d" translate="yes" xml:space="preserve">
          <source>A plugin for flake8 integrating mypy.</source>
          <target state="translated">mypy を統合した flake8 用のプラグインです。</target>
        </trans-unit>
        <trans-unit id="bf04a90969ef3054c9ddc9e9938177793e24f289" translate="yes" xml:space="preserve">
          <source>As it turns out, in this mode of operation, &lt;em&gt;mypy&lt;/em&gt; is still able to
provide useful information on the annotations within and at least usage
of stubbed standard library and third party libraries. However, for best
effects, you will want to use separate configuration for &lt;em&gt;mypy&lt;/em&gt;&amp;rsquo;s
standalone mode and for usage as a &lt;em&gt;Flake8&lt;/em&gt; plugin.</source>
          <target state="translated">&lt;em&gt;結局のところ&lt;/em&gt;、この操作モードでも、&lt;em&gt;mypy&lt;/em&gt;は、&lt;em&gt;スタブさ&lt;/em&gt;れた標準ライブラリとサードパーティライブラリ内のアノテーションと少なくともその使用法に関する有用な情報を提供できます。ただし、最高の効果を得るには、&lt;em&gt;mypy&lt;/em&gt;のスタンドアロンモードと&lt;em&gt;Flake8&lt;/em&gt;プラグインとして使用するために別々の構成を使用することをお&lt;em&gt;勧めし&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">著者</target>
        </trans-unit>
        <trans-unit id="cf81e7d259138135771f83dad79d7314a0e2ed14" translate="yes" xml:space="preserve">
          <source>By making the code exclusively Python 3.5+, I&amp;rsquo;m able to focus on the
quality of the checks and re-use all the nice features of the new
releases (check out
&lt;a href=&quot;docs.python.org/3/library/pathlib.html&quot;&gt;pathlib&lt;/a&gt;) instead of wasting
cycles on Unicode compatibility, etc.</source>
          <target state="translated">コードをPython3.5以降のみにすることで、チェックの品質に集中し、Unicode互換性などでサイクルを無駄にすることなく、新しいリリースのすべての優れた機能を再利用できます（&lt;a href=&quot;docs.python.org/3/library/pathlib.html&quot;&gt;pathlibを&lt;/a&gt;チェックして ください）。</target>
        </trans-unit>
        <trans-unit id="9c74fb571984d7f3e781ea8b013e5f74bcd16389" translate="yes" xml:space="preserve">
          <source>Change Log</source>
          <target state="translated">変更ログ</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">構成</target>
        </trans-unit>
        <trans-unit id="8b2f5cc82eb598461d90350ee365e079b3eda5cf" translate="yes" xml:space="preserve">
          <source>Due to the reasoning above, by default &lt;em&gt;flake8-mypy&lt;/em&gt; will operate with
options equivalent to the following:</source>
          <target state="translated">上記の理由により、デフォルトでは、&lt;em&gt;flake8-mypy&lt;/em&gt;は次と同等のオプションで動作します。</target>
        </trans-unit>
        <trans-unit id="9b3adb8e7e52e763c4d388ea00c733415b004ab6" translate="yes" xml:space="preserve">
          <source>For the sake of simplicity and readability, the config you provide will
fully replace the one listed above. Values left out will be using
&lt;em&gt;mypy&lt;/em&gt;&amp;rsquo;s own defaults.</source>
          <target state="translated">単純さと読みやすさのために、提供する構成は上記の構成を完全に置き換えます。&lt;em&gt;省略&lt;/em&gt;された値は、 &lt;em&gt;mypy&lt;/em&gt;独自のデフォルトを使用します。</target>
        </trans-unit>
        <trans-unit id="6079753cffde07ec1b9796ca4dbc24a645992d45" translate="yes" xml:space="preserve">
          <source>Glued together by &lt;a href=&quot;mailto:lukasz%40langa.pl&quot;&gt;Łukasz Langa&lt;/a&gt;.</source>
          <target state="translated">ŁukaszLangaによって&lt;a href=&quot;mailto:lukasz%40langa.pl&quot;&gt;接着&lt;/a&gt;されています。</target>
        </trans-unit>
        <trans-unit id="0475411b3386d0057115cf895be7d1a1cd488f8f" translate="yes" xml:space="preserve">
          <source>I plan to support more fine-grained error codes for specific &lt;em&gt;mypy&lt;/em&gt;
errors in the future.</source>
          <target state="translated">将来的には、特定の&lt;em&gt;mypy&lt;/em&gt;エラーに対してよりきめ細かいエラーコードをサポートする予定です。</target>
        </trans-unit>
        <trans-unit id="59670c588f206d175b558ff346b27889051cdd0d" translate="yes" xml:space="preserve">
          <source>If you disagree with the defaults above, you can specify your own &lt;em&gt;mypy&lt;/em&gt;
configuration by providing the</source>
          <target state="translated">上記のデフォルトに同意できない場合は、を 提供することで独自の&lt;em&gt;mypy&lt;/em&gt;構成を指定できます。</target>
        </trans-unit>
        <trans-unit id="accadaa2de1d9b54d08912507fc259d22f1d0931" translate="yes" xml:space="preserve">
          <source>Just run:</source>
          <target state="translated">走れ</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="5516fee04290d8fb240eb1035f9649b7af9c46bc" translate="yes" xml:space="preserve">
          <source>List of warnings</source>
          <target state="translated">警告の一覧</target>
        </trans-unit>
        <trans-unit id="89690ac571dcf4c9c40c842efed3f11171d07b29" translate="yes" xml:space="preserve">
          <source>MIT</source>
          <target state="translated">マサチューセッツ工科大学</target>
        </trans-unit>
        <trans-unit id="e5235c3d74608e18ac9a99adeba9dde4044408a5" translate="yes" xml:space="preserve">
          <source>NOTE: This plugin requires &lt;em&gt;mypy&lt;/em&gt; &amp;gt;=0.500, as of Mar 1st no released
version satisfies this yet. You can use master in the mean time.</source>
          <target state="translated">注：このプラグインには&lt;em&gt;mypy&lt;/em&gt; &amp;gt; = 0.500が必要です。3月1日の時点で、これを満たすリリースバージョンはまだありません。その間、マスターを使用できます。</target>
        </trans-unit>
        <trans-unit id="12e19660be012b4eba852959c0cfdb85d3bd927b" translate="yes" xml:space="preserve">
          <source>Note: chaing the</source>
          <target state="translated">注:チェイングは</target>
        </trans-unit>
        <trans-unit id="e36741c0ba08cc37f8bfbe95a6affd2ddc5b5471" translate="yes" xml:space="preserve">
          <source>OMG, this is Python 3 only!</source>
          <target state="translated">OMG、これはPython 3のみです!</target>
        </trans-unit>
        <trans-unit id="38479adfbc61c2036e2fc6b0467c2047db17d640" translate="yes" xml:space="preserve">
          <source>Remember that for the best user experience, your linter integration mode
shouldn&amp;rsquo;t generally display errors that a full run of &lt;em&gt;mypy&lt;/em&gt; wouldn&amp;rsquo;t.
This would be confusing.</source>
          <target state="translated">最高のユーザーエクスペリエンスを実現するために、リンター統合モードでは通常、&lt;em&gt;mypyの&lt;/em&gt;フル実行では表示されないエラーが表示されないようにする&lt;em&gt;必要&lt;/em&gt;があります。これは混乱を招くでしょう。</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">テスト</target>
        </trans-unit>
        <trans-unit id="6ca0550bdbe31ceea7515b9973420cf532d0e801" translate="yes" xml:space="preserve">
          <source>Two levels of type checking</source>
          <target state="translated">2段階のタイプチェック</target>
        </trans-unit>
        <trans-unit id="b5b99244a9d16756d53a44f391e4137f95f047dc" translate="yes" xml:space="preserve">
          <source>Yes, so is &lt;em&gt;mypy&lt;/em&gt;. Relax, you can run &lt;em&gt;Flake8&lt;/em&gt; with all popular plugins
&lt;strong&gt;as a tool&lt;/strong&gt; perfectly fine under Python 3.5+ even if you want to
analyze Python&amp;nbsp;2 code. This way you&amp;rsquo;ll be able to parse all of the new
syntax supported on Python 3 but also &lt;em&gt;effectively all&lt;/em&gt; the Python 2
syntax at the same time.</source>
          <target state="translated">はい、&lt;em&gt;mypy&lt;/em&gt;もそうです。リラックスしてください&lt;em&gt;。Python2&lt;/em&gt;コードを分析したい場合でも、&lt;em&gt;Python3.5以降&lt;/em&gt;ではすべての一般的なプラグイン&lt;strong&gt;を&lt;/strong&gt;&lt;em&gt;使用&lt;/em&gt;して&lt;em&gt;Flake8&lt;/em&gt;を &lt;strong&gt;ツールとして&lt;/strong&gt;完全に&lt;em&gt;正常に&lt;/em&gt;実行できます。このようにして、Python 3でサポートされているすべての新しい構文だけでなく、&lt;em&gt;事実上すべて&lt;/em&gt;のPython2構文を同時に解析できます。</target>
        </trans-unit>
        <trans-unit id="54caab93217af0f5a295a3ceb50447edb5f3b7cb" translate="yes" xml:space="preserve">
          <source>always run type checks from a temporary directory to avoid clashing
with unrelated files in the same directory</source>
          <target state="translated">同じディレクトリ内の無関係なファイルとの衝突を避けるために、常に一時ディレクトリから型チェックを実行します。</target>
        </trans-unit>
        <trans-unit id="fd9fd63588735ed2f20df436b4ef13a1224493ce" translate="yes" xml:space="preserve">
          <source>avoid raising errors in the default config which don&amp;rsquo;t happen during
a full run (disable warn_unused_ignores and warn_redundant_casts)</source>
          <target state="translated">フルラン中に発生しないデフォルト設定でエラーが発生しないようにします（warn_unused_ignoresおよびwarn_redundant_castsを無効にします）</target>
        </trans-unit>
        <trans-unit id="954af3ede91f571ff68eee59cce29ee578445fac" translate="yes" xml:space="preserve">
          <source>bugfix: don&amp;rsquo;t crash on relative imports in the form</source>
          <target state="translated">バグ修正：フォームの相対インポートでクラッシュしない</target>
        </trans-unit>
        <trans-unit id="3da0e2535ecbeec5d12440c6e632abec61c8ae54" translate="yes" xml:space="preserve">
          <source>bugfix: using &lt;em&gt;Flake8&lt;/em&gt; with absolute paths now correctly matches
&lt;em&gt;mypy&lt;/em&gt; messages</source>
          <target state="translated">バグ修正：絶対パスで&lt;em&gt;Flake8&lt;/em&gt;を使用&lt;em&gt;する&lt;/em&gt;と、&lt;em&gt;mypy&lt;/em&gt;メッセージと正しく一致 するようになりました</target>
        </trans-unit>
        <trans-unit id="cfe4311042959f04387387a2bc4b7ffa4d5f07eb" translate="yes" xml:space="preserve">
          <source>bugfix: when running over an entire directory, T484 is now correctly
used instead of T499</source>
          <target state="translated">ディレクトリ全体で実行する際に、T499 の代わりに T484 が正しく使用されるようになった。</target>
        </trans-unit>
        <trans-unit id="74bc72bc5e3b152dc1e0945e5c2f4f54eae624d5" translate="yes" xml:space="preserve">
          <source>command-line option to
&lt;em&gt;Flake8&lt;/em&gt; (with the .flake8/setup.cfg equivalent being called</source>
          <target state="translated">&lt;em&gt;Flake8の&lt;/em&gt;コマンドラインオプション （.flake8 /setup.cfgと同等のものが呼び出されます）</target>
        </trans-unit>
        <trans-unit id="f90e09f0523a6748b6e6749a04730a63f6c8b4f0" translate="yes" xml:space="preserve">
          <source>date-versioned</source>
          <target state="translated">日付変更済み</target>
        </trans-unit>
        <trans-unit id="c6fcbab7e6b771c2287910acf25eb269ee96b2fb" translate="yes" xml:space="preserve">
          <source>first published version</source>
          <target state="translated">初版</target>
        </trans-unit>
        <trans-unit id="cebf7969bb81174d32a8d8bebcb633487a68a468" translate="yes" xml:space="preserve">
          <source>follow_imports</source>
          <target state="translated">フォローインポート</target>
        </trans-unit>
        <trans-unit id="72da8abfddfca33cea60457e4b28e80601bdb63f" translate="yes" xml:space="preserve">
          <source>from &amp;ldquo;silent&amp;rdquo; to &amp;ldquo;skip&amp;rdquo; to avoid name
clashing files being used to follow imports within
&lt;a href=&quot;https://github.com/python/typeshed/&quot;&gt;typeshed&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/python/typeshed/&quot;&gt;タイプシェッド&lt;/a&gt;内のインポートを追跡するために使用される名前の衝突ファイルを回避するための「サイレント」から「スキップ」へ</target>
        </trans-unit>
        <trans-unit id="39198568ff36b27b1332a183f68a81d4b18d870b" translate="yes" xml:space="preserve">
          <source>from . import X</source>
          <target state="translated">から .import X</target>
        </trans-unit>
        <trans-unit id="6fdbd71a54a14094c9a27a4b8ea68ff2fd32fc5a" translate="yes" xml:space="preserve">
          <source>mypy_config</source>
          <target state="translated">マイピー設定</target>
        </trans-unit>
        <trans-unit id="842cb3868b389b38969f4028bde3dc6bfa6aa100" translate="yes" xml:space="preserve">
          <source>option might have surprising
effects. If the file you&amp;rsquo;re linting with Flake8 has other files around
it, then in &amp;ldquo;silent&amp;rdquo; or &amp;ldquo;normal&amp;rdquo; mode those files will be used to follow
imports. This includes imports from
&lt;a href=&quot;https://github.com/python/typeshed/&quot;&gt;typeshed&lt;/a&gt;.</source>
          <target state="translated">オプションは驚くべき効果をもたらす可能性があります。Flake8でリントしているファイルの周囲に他のファイルがある場合、「サイレント」または「通常」モードでは、それらのファイルがインポートの追跡に使用されます。これには、&lt;a href=&quot;https://github.com/python/typeshed/&quot;&gt;typeshed&lt;/a&gt;からのインポートが含まれ ます。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">或いは</target>
        </trans-unit>
        <trans-unit id="e52f654b92917aea6efd4174a78067ef96fa58af" translate="yes" xml:space="preserve">
          <source>performance optimization: skip running &lt;em&gt;mypy&lt;/em&gt; over files that contain
no annotations or imports from</source>
          <target state="translated">パフォーマンスの最適化：注釈&lt;em&gt;やからの&lt;/em&gt;インポートを含まないファイル&lt;em&gt;に対するmypyの&lt;/em&gt;実行をスキップします</target>
        </trans-unit>
        <trans-unit id="70e95468414ffb8125815974910831c61f7f1dd9" translate="yes" xml:space="preserve">
          <source>set MYPYPATH by default to give stubs from typeshed higher priority
than local sources</source>
          <target state="translated">デフォルトで MYPYPATH を設定して、タイプシェッドからのスタブをローカルソースよりも優先します。</target>
        </trans-unit>
        <trans-unit id="1b2a57913ec4c00a6268bfd7ad8fe8e5fb8a9543" translate="yes" xml:space="preserve">
          <source>suppress &lt;em&gt;mypy&lt;/em&gt; messages about relative imports</source>
          <target state="translated">相対インポートに関する&lt;em&gt;mypy&lt;/em&gt;メッセージを抑制します</target>
        </trans-unit>
        <trans-unit id="01ba7992f85de477e8e630428eb5ed14769f9155" translate="yes" xml:space="preserve">
          <source>switch</source>
          <target state="translated">替わる</target>
        </trans-unit>
        <trans-unit id="e63b0644ff79a6fc86c737b67aca9392a7eca9a0" translate="yes" xml:space="preserve">
          <source>to
exercise the full transitive closure of your modules, catching errors
stemming from bad API usage or incompatible types. That being said,
those checks take time, and require access to the entire codebase. For
some tools, like an editor with an open file, or a code review tool,
achieving this is not trivial. This is where a more limited approach
inside a linter comes in.</source>
          <target state="translated">を使用することで、モジュールの完全なtransitiveクロージャを実行し、 APIの不正な使用や互換性のない型に起因するエラーを検出することができます。しかし、これらのチェックには時間がかかり、コードベース全体にアクセスする必要があります。ファイルを開いているエディタやコードレビューツールのようなツールでは、これを実現するのは簡単なことではありません。そこで、リンター内でのより限定的なアプローチの出番です。</target>
        </trans-unit>
        <trans-unit id="02d7d3475883e6dccc76a4a332e908c39c996571" translate="yes" xml:space="preserve">
          <source>typing</source>
          <target state="translated">打ち込み</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
