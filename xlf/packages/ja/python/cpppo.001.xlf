<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/cpppo/">
    <body>
      <group id="cpppo">
        <trans-unit id="824327a6f273ad028a0a84f26209e916e5865839" translate="yes" xml:space="preserve">
          <source>An example included with cpppo is an implementation of a subset of the
EtherNet/IP CIP language used by some industrial control equipment, such as
Rockwell&amp;rsquo;s ControlLogix Controllers.  The cpppo.server.enip package can be used
to create Python programs which can parse requests in this protocol (eg. as a
server, to implement something like a simulated Controller) or originate
requests in this protocol (eg. as a client, sending commands to a Controller).</source>
          <target state="translated">cpppoに含まれる例は、ロックウェルのControlLogixコントローラなどの一部の産業用制御機器で使用されるEtherNet / IP CIP言語のサブセットの実装です。 cpppo.server.enipパッケージを使用して、このプロトコルで要求を解析する（たとえば、サーバーとして、シミュレートされたコントローラーのようなものを実装する）Pythonプログラムを作成したり、このプロトコルで要求を送信したりする（たとえば、クライアントとして、送信する）コントローラへのコマンド）。</target>
        </trans-unit>
        <trans-unit id="45e3a6167f038f627ee32e973303d457e1f5e38c" translate="yes" xml:space="preserve">
          <source>Cpppo is a Communication Protocol Python Parser and Originator</source>
          <target state="translated">Cpppoは通信プロトコルPythonパーサーとオリジネーターです。</target>
        </trans-unit>
        <trans-unit id="d10f29fc61ef7d08f08529d69c3eb7b657f3296a" translate="yes" xml:space="preserve">
          <source>Cpppo is used to create event-driven state machines which consume a stream
of input and generate a series of state changes, or an indication that no
progress is possible due to (for example) exhaustion of input symbols.</source>
          <target state="translated">Cpppoは、入力のストリームを消費して一連の状態変化を生成するイベント駆動型ステートマシンを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9034ce3b0318527361217254f4a3c5d4660843f7" translate="yes" xml:space="preserve">
          <source>In addition, the ability to read, write and poll remote PLCs of
various types including Modbus/TCP is provided.</source>
          <target state="translated">また、Modbus/TCPを含む様々なタイプのリモートPLCの読み取り、書き込み、ポーリングが可能です。</target>
        </trans-unit>
        <trans-unit id="b860731939cbe1170dd8495642a5ce7c9aef8fc5" translate="yes" xml:space="preserve">
          <source>This is useful for creating parsers for complex grammars describing
languages, including binary computer protocols.</source>
          <target state="translated">バイナリコンピュータプロトコルを含む言語を記述する複雑な文法のパーサーを作成するのに便利です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
