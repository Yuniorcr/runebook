<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/ghlinguist/">
    <body>
      <group id="ghlinguist">
        <trans-unit id="8a5bd700778dc76504e8c5fee1a507a6d1580c37" translate="yes" xml:space="preserve">
          <source>Both cases simply return the string &lt;code&gt;Python&lt;/code&gt; or &lt;code&gt;Fortran&lt;/code&gt; etc.</source>
          <target state="translated">どちらの場合も、 &lt;code&gt;Python&lt;/code&gt; や &lt;code&gt;Fortran&lt;/code&gt; などの文字列を返すだけです。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="b48f894948f31dd3913f643828d8617bd0aa51f1" translate="yes" xml:space="preserve">
          <source>From Terminal:</source>
          <target state="translated">ターミナルから</target>
        </trans-unit>
        <trans-unit id="fbdb39e7e67a0cb8fade1ceee82341e66bdafa79" translate="yes" xml:space="preserve">
          <source>If the directory is not a Git repo, &lt;code&gt;None&lt;/code&gt; is returned</source>
          <target state="translated">ディレクトリがGitリポジトリでない場合、 &lt;code&gt;None&lt;/code&gt; が返されます</target>
        </trans-unit>
        <trans-unit id="0edf96811dd7fe4c662c9af0aca999b27f833497" translate="yes" xml:space="preserve">
          <source>If you don't already have RubyGems setup on Linux:</source>
          <target state="translated">Linux上でRubyGemsの設定をしていない場合。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="e1d2620dd4bd10e7f24bac2c0aa0156cbd7080ed" translate="yes" xml:space="preserve">
          <source>Install Linguist as usual:</source>
          <target state="translated">いつものようにLinguistをインストールします。</target>
        </trans-unit>
        <trans-unit id="68bf86483f265ba4441455aa31328c19360b8c8a" translate="yes" xml:space="preserve">
          <source>Install this Python wrapper:</source>
          <target state="translated">このPythonラッパーをインストールします。</target>
        </trans-unit>
        <trans-unit id="d6470d742c6be68bf3b3f1ee242925b542f261df" translate="yes" xml:space="preserve">
          <source>Linux prereqs</source>
          <target state="translated">リナックス予備知識</target>
        </trans-unit>
        <trans-unit id="a235b3bf89b84dc848864641fccb756ceea4e4d2" translate="yes" xml:space="preserve">
          <source>Linux: see Notes section at bottom of this README</source>
          <target state="translated">Linux:この README の下部にある注意事項のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="dca3d21fe2f53655fc3772681afd132fa7e5f5e4" translate="yes" xml:space="preserve">
          <source>MacOS / Linux Homebrew: &lt;code&gt;brew install ruby&lt;/code&gt;</source>
          <target state="translated">MacOS / Linux Homebrew： &lt;code&gt;brew install ruby&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">注意事項</target>
        </trans-unit>
        <trans-unit id="ff583663796e0b564f9763cd45af7ad5db3f48d6" translate="yes" xml:space="preserve">
          <source>Or import as a Python module.</source>
          <target state="translated">またはPythonモジュールとしてインポートします。</target>
        </trans-unit>
        <trans-unit id="16ec4d428b5458baa8dd2e6da390acc3c805afcc" translate="yes" xml:space="preserve">
          <source>Pure Python command-line wrapper of Ruby-based Github &lt;a href=&quot;https://github.com/github/linguist&quot;&gt;Linguist&lt;/a&gt;.
Linguist detects the language of a Git repo based on the &lt;code&gt;commit&lt;/code&gt;ed files.
The repo file
&lt;a href=&quot;https://github.com/github/linguist#using-gitattributes&quot;&gt;.gitattributes&lt;/a&gt;
is used to configure Linguist to not get distracted by &lt;code&gt;docs&lt;/code&gt; or archive files, etc. using several straightforward rules.</source>
          <target state="translated">RubyベースのGithub&lt;a href=&quot;https://github.com/github/linguist&quot;&gt;言語学者の&lt;/a&gt;純粋なPythonコマンドラインラッパー。言語学者は、 &lt;code&gt;commit&lt;/code&gt; れたファイルに基づいてGitリポジトリの言語を検出します。リポジトリファイルの &lt;a href=&quot;https://github.com/github/linguist#using-gitattributes&quot;&gt;.gitattributes&lt;/a&gt; は、いくつかの簡単なルールを使用して、 &lt;code&gt;docs&lt;/code&gt; やアーカイブファイルなどに気を取られないようにLinguistを構成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6c9d7d8665b5ae6fee9f8bb1f12823f160d4e3e3" translate="yes" xml:space="preserve">
          <source>Ruby is required for Linguist:</source>
          <target state="translated">LinguistにはRubyが必要です。</target>
        </trans-unit>
        <trans-unit id="ca6b8bdf028b0bb502ffbd2b56398c1e6c1b57bf" translate="yes" xml:space="preserve">
          <source>The functions return a list of tuples like:</source>
          <target state="translated">のようなタプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="211ceccc6fb63b8fd670e94c934c468bac772b91" translate="yes" xml:space="preserve">
          <source>The primary reason behind creating this Python Linguist wrapper is automatically detecting the repo type, so that appropriate templates can be applied &lt;em&gt;en masse&lt;/em&gt; to a large number of repos.
Thus to get the repo language from the command line, as GitHub would:</source>
          <target state="translated">このPythonLinguistラッパーを作成する主な理由は、リポジトリタイプを自動的に検出することです。これにより、適切なテンプレートを多数のリポジトリに&lt;em&gt;まとめ&lt;/em&gt;て適用できます。したがって、GitHubのように、コマンドラインからリポジトリ言語を取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="559b3fc86a0855fc35e01ae9c70039440c888689" translate="yes" xml:space="preserve">
          <source>This Python wrapper makes Linguist more intuitive by warning users of uncommitted changes or additions that could make Linguist silently give inaccurate results, since Linguist only works on files that have been &lt;code&gt;git commit&lt;/code&gt;ed.</source>
          <target state="translated">このPythonラッパーは、Linguistが &lt;code&gt;git commit&lt;/code&gt; されたファイルに対してのみ機能するため、Linguistがサイレントに不正確な結果を与える可能性のあるコミットされていない変更または追加についてユーザーに警告することにより、Linguistをより直感的にします。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="27394ea7f87d336660b39fa869bce5d239f9d7c4" translate="yes" xml:space="preserve">
          <source>Windows: Windows Subsystem for Linux is recommended.</source>
          <target state="translated">Windowsです。Linux用のWindowsサブシステムを推奨します。</target>
        </trans-unit>
        <trans-unit id="bf6be3cb41737bb28edfafaabfd3d0f9ecb706da" translate="yes" xml:space="preserve">
          <source>be sure Gems are installed to home directory, NOT system (no sudo) by adding to &lt;code&gt;~/.bashrc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;~/.bashrc&lt;/code&gt; 追加して、Gemsがシステム（sudoなし）ではなくホームディレクトリにインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="56b451f54b68d9f36d287c09e0a7391e3ea33ffb" translate="yes" xml:space="preserve">
          <source>ghLinguist parses text output from
&lt;a href=&quot;https://github.com/github/linguist#using-emacs-or-vim-modelines&quot;&gt;GitHub Linguist&lt;/a&gt;,
which is a Ruby program.
We call &lt;code&gt;github-linguist&lt;/code&gt; executable since &lt;code&gt;linguist&lt;/code&gt; overlaps with QT Lingiust.</source>
          <target state="translated">ghLinguistからテキスト出力を解析し、 &lt;a href=&quot;https://github.com/github/linguist#using-emacs-or-vim-modelines&quot;&gt;GitHubの言語学者&lt;/a&gt;Rubyプログラムです、。我々は呼んで &lt;code&gt;github-linguist&lt;/code&gt; ため、実行可能ファイルを &lt;code&gt;linguist&lt;/code&gt; QT Lingiustと重なります。</target>
        </trans-unit>
        <trans-unit id="00e9cc64724de9876183ed4dc70c94468f4ed019" translate="yes" xml:space="preserve">
          <source>linguist-python</source>
          <target state="translated">リンガイストパイソン</target>
        </trans-unit>
        <trans-unit id="bac07d3773f55cec82ae1d604535d01380d65d7d" translate="yes" xml:space="preserve">
          <source>or as a Python module:</source>
          <target state="translated">またはPythonモジュールとして。</target>
        </trans-unit>
        <trans-unit id="2ecc7c4120f0ec157d3e20717e910ab2671b53c3" translate="yes" xml:space="preserve">
          <source>setup RubyGems:</source>
          <target state="translated">RubyGemsを設定します。</target>
        </trans-unit>
        <trans-unit id="fb0192163d85b7478b9917e2c047d695d724deba" translate="yes" xml:space="preserve">
          <source>simple command-line parser of GitHub Linguist Ruby program.</source>
          <target state="translated">GitHub Linguist Ruby プログラムのシンプルなコマンドラインパーサー。</target>
        </trans-unit>
        <trans-unit id="0cc38a6f537dad17a95e6e9d8a15103810527d81" translate="yes" xml:space="preserve">
          <source>where the second number is the percentage of code detected for that language.</source>
          <target state="translated">ここで、2 番目の数字は、その言語で検出されたコードの割合です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
