<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/justbytes/">
    <body>
      <group id="justbytes">
        <trans-unit id="447b8348b9c2348111a636255e107995a2ed4367" translate="yes" xml:space="preserve">
          <source>All errors raised by justbytes operations are subtypes of the RangeError class.</source>
          <target state="translated">ジャストバイト操作によって発生するすべてのエラーは、RangeErrorクラスのサブタイプです。</target>
        </trans-unit>
        <trans-unit id="3c736d39cfcbcaf284f80530e8748d5df12b2eb3" translate="yes" xml:space="preserve">
          <source>Alternative Packages</source>
          <target state="translated">代替パッケージ</target>
        </trans-unit>
        <trans-unit id="1f878420017dbe53c0a2676a433496213e5811a0" translate="yes" xml:space="preserve">
          <source>Computing the Representation of a Range</source>
          <target state="translated">範囲の表現を計算する</target>
        </trans-unit>
        <trans-unit id="7b6af984283fa6b9adedb133907862c2f2663660" translate="yes" xml:space="preserve">
          <source>Consequently, computations such as addition of two Ranges, and conversion
between different magnitudes of bytes, i.e., from MiB to GiB, must be done
precisely. The underlying implementation must therefore use a precise
representation of the number of bytes. Floating point numbers, which are
frequently the preferred type for the representation of physical
quantities, are disallowed by this requirement.</source>
          <target state="translated">その結果、2つのRangesの加算や、異なる大きさのバイト間の変換、すなわちMiBからGiBへの変換などの計算は、正確に行われなければなりません。したがって、基礎となる実装は、バイト数の正確な表現を使用しなければなりません。浮動小数点数は、物理量の表現に好ましい型であることが多いが、この要件では認められない。</target>
        </trans-unit>
        <trans-unit id="3f4700f344a55dd2a413f15f371fad0a05b8a575" translate="yes" xml:space="preserve">
          <source>Constructing Ranges Programatically</source>
          <target state="translated">プログラムによる範囲の構築</target>
        </trans-unit>
        <trans-unit id="9c6c971ced78a1f9bbe931fd59030db5c8588db9" translate="yes" xml:space="preserve">
          <source>Displaying Ranges</source>
          <target state="translated">レンジの表示</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">エラー</target>
        </trans-unit>
        <trans-unit id="cbfba25d0250d74cb72b3ec89534cd1cbcf21211" translate="yes" xml:space="preserve">
          <source>Floating Point Numbers</source>
          <target state="translated">浮動小数点数</target>
        </trans-unit>
        <trans-unit id="d6d84fa09f507b8c85bc8b38c187fe899a44a5c1" translate="yes" xml:space="preserve">
          <source>If you are interested in computing in Python with physical, rather than
logical, quantities, you should consult the pint package:
&lt;a href=&quot;http://pint.readthedocs.org&quot;&gt;http://pint.readthedocs.org&lt;/a&gt;.</source>
          <target state="translated">論理的な量ではなく物理的な量を使用してPythonで計算することに興味がある場合は、pintパッケージ（&lt;a href=&quot;http://pint.readthedocs.org&quot;&gt;http://pint.readthedocs.org）を&lt;/a&gt;参照してください 。</target>
        </trans-unit>
        <trans-unit id="8d205500c8f287783d5e6ffd528d2f8fbd78d600" translate="yes" xml:space="preserve">
          <source>It is not possible to use floating point numbers or Decimal in computations
with Ranges. Where a fractional quantity is desired, use Fraction objects.
Thus, Range(0) * 1.2 and Range(0) * Decimal(&amp;ldquo;1.2&amp;rdquo;) raise an exception, but
Range(0) * Fraction(&amp;ldquo;1.2&amp;rdquo;) is acceptable.</source>
          <target state="translated">Rangesを使用した計算では、浮動小数点数またはDecimalを使用することはできません。分数が必要な場合は、分数オブジェクトを使用します。したがって、Range（0）* 1.2およびRange（0）* Decimal（ &quot;1.2&quot;）は例外を発生させますが、Range（0）* Fraction（ &quot;1.2&quot;）は許容されます。</target>
        </trans-unit>
        <trans-unit id="d2fac8f190d6ba2310cd04193e6922d40dd4506a" translate="yes" xml:space="preserve">
          <source>Its sole purpose is the representation of real address ranges on real
machines. For that reason, it does not allow powers of ranges, imprecise
ranges, or non-finite ranges. In order that the
usual laws of arithmetic can be maintained, it does allow fractional ranges.</source>
          <target state="translated">その唯一の目的は、実マシン上での実アドレス範囲の表現です。そのため、範囲の累乗、不正確な範囲、または有限ではない範囲を許可しません。通常の算術の法則を維持するために、小数の範囲を許可しています。</target>
        </trans-unit>
        <trans-unit id="45882d11d2960503d0c63d16f01836831a20d4a5" translate="yes" xml:space="preserve">
          <source>Justbytes</source>
          <target state="translated">ジャストバイト</target>
        </trans-unit>
        <trans-unit id="fadaa413fdb8e444db665691407ee547102d51d5" translate="yes" xml:space="preserve">
          <source>Justbytes is a module for handling computation with
address ranges expressed in bytes. Its principle feature is a Range class from
which can be constructed Range objects which represent a precise and finite
address range in bytes. Various arithmetic operations are defined for Range
objects.</source>
          <target state="translated">Justbytesは、アドレス範囲をバイトで表現した計算を扱うためのモジュールです。その主な特徴は、Rangeクラスであり、そこから、正確で有限のアドレス範囲をバイトで表現するRangeオブジェクトを構築することができます。Rangeオブジェクトには様々な演算が定義されています。</target>
        </trans-unit>
        <trans-unit id="e3ac283515eac7e729ac10b009dc00d848c8e9ac" translate="yes" xml:space="preserve">
          <source>Memory Consumption and Bandwidth vs. Address Ranges</source>
          <target state="translated">メモリ消費量と帯域幅とアドレス範囲の比較</target>
        </trans-unit>
        <trans-unit id="65725c5cbb6b40fb6d8721e0f58b7f2d9f219336" translate="yes" xml:space="preserve">
          <source>Memory consumption, e.g., by a process during execution on a specified
workload, is a quantity, that like address ranges, is specified in
bytes. However, memory consumption is simply a measurement of the amount of
a phsyical quantity consumed.  When bytes are used only to represent memory
consumption, computations do not generally require the special handling
supplied by this library. Generally, measurement of memory consumption can
be treated like any other physical quantity. The same reasoning applies to
bandwidth. For a physical analogy, one can imagine memory consumption to be
analogous to volume, e.g., litres, and bandwidth to be analogous to flow,
e.g., litres per minute.</source>
          <target state="translated">メモリ消費量は、例えば、指定されたワークロードの実行中にプロセスが消費する量であり、アドレス範囲と同様にバイト単位で指定されます。しかし、メモリ消費量は、単に消費された物理的な量を測定したものに過ぎません。バイトがメモリ消費量を表すためにのみ使用される場合、計算は一般的にこのライブラリが提供する特別な処理を必要としません。一般的に、メモリ消費量の測定は他の物理量と同じように扱うことができます。同じ推論が帯域幅にも適用されます。物理的なアナロジーとしては、メモリ消費量を体積(例:リットル)に、帯域幅を流量(例:毎分リットル)に例えることができます。</target>
        </trans-unit>
        <trans-unit id="8a99d14f970e76756815cc726112e9e4f2356fee" translate="yes" xml:space="preserve">
          <source>New Range objects can be constructed from Range objects, numeric values, e.g.,
int or Fraction, or strings which represent such numeric values.
strings may be used to represent fractional quantities, e.g., &amp;ldquo;1.2&amp;rdquo;, but
floats and Decimals are disallowed.</source>
          <target state="translated">新しいRangeオブジェクトは、Rangeオブジェクト、intやFractionなどの数値、またはそのような数値を表す文字列から作成できます。文字列は、「1.2」などの小数を表すために使用できますが、浮動小数点数と小数は許可されていません。</target>
        </trans-unit>
        <trans-unit id="8e8e76e830d5d5d96809802aa0ea50ad46a0e846" translate="yes" xml:space="preserve">
          <source>Numerous computations with address ranges are nonsensical. For example, 2
raised to a power which is some address range, is a meaningless computation.
All such operations cause an error to be raised.</source>
          <target state="translated">アドレス範囲を使った多くの計算は無意味です。例えば、あるアドレス範囲の何乗かに2を上げることは無意味な計算です。このような演算はすべてエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">業務内容</target>
        </trans-unit>
        <trans-unit id="43aaf6f57b7c95249bd643787aad1b1255593812" translate="yes" xml:space="preserve">
          <source>Practical Computing with Address Ranges</source>
          <target state="translated">アドレス範囲を使った実用的なコンピューティング</target>
        </trans-unit>
        <trans-unit id="a85446ae4efaa1d6aaa78d5db82169a15cd8c137" translate="yes" xml:space="preserve">
          <source>Representing Units</source>
          <target state="translated">単位を表す</target>
        </trans-unit>
        <trans-unit id="32508a9e120d4892b64a069406f889c0158d8e4a" translate="yes" xml:space="preserve">
          <source>Some computations with precise, finite, values may yield irrational results.
For example, while 2 is rational, its square root is an irrational number.
There is no allowed operation on Range objects which can result in an
irrational Range value. It turns out that all such operations are either
nonsensical or would result in a value with an unrepresentable type.</source>
          <target state="translated">正確で有限な値を使った計算では、非合理的な結果が得られることがあります。例えば、2は有理ですが、その平方根は不合理な数です。Rangeオブジェクトに対しては、非合理的なRange値になるような操作は許されていません。そのような操作はすべて非論理的であるか、表現不可能な型の値を生成するかのどちらかであることがわかります。</target>
        </trans-unit>
        <trans-unit id="a8b73a8356a1277aa6a8d1b69dbdb2cb2c5bcc98" translate="yes" xml:space="preserve">
          <source>The Range class also has standard methods for the representation of Range
objects as str objects.</source>
          <target state="translated">Rangeクラスには、Rangeオブジェクトをstrオブジェクトとして表現するための標準メソッドもあります。</target>
        </trans-unit>
        <trans-unit id="94d414b4b47ed43fadec12a10ba6e7313b163f7c" translate="yes" xml:space="preserve">
          <source>The constructor takes an optional units specifier, which defaults to bytes
for all numeric values, and to None for Range objects. The type of the
unit specifier is a named prefix supplied by the size module or a Range object.</source>
          <target state="translated">コンス ト ラ ク タ はオプシ ョ ナルな単位指定子を取り、 デフ ォル ト はすべての数値の場合はバ イ ト 数、 Range オブジ ェ ク ト の場合は None です。単位指定子の型は、サイズモジュールまたは Range オブジェクトから与えられる名前付き接頭辞です。</target>
        </trans-unit>
        <trans-unit id="097c7c0496973f59f9c251a898f12945055be5c7" translate="yes" xml:space="preserve">
          <source>The representation of a Range is computed according to a specified
configuration. In the default configuration, the representation uses IEC
rather than SI units.</source>
          <target state="translated">レンジの表現は、指定された設定に従って計算されます。デフォルトの設定では、SI単位ではなくIEC単位を使用します。</target>
        </trans-unit>
        <trans-unit id="10256571c4110a674ceb91b10fbb1a84d4045c07" translate="yes" xml:space="preserve">
          <source>The representation of a Range is not a string, but a structured representation
of the precise value, as well as the relationship of the representation to
the actual value.</source>
          <target state="translated">Rangeの表現は文字列ではなく、正確な値の構造化された表現であり、実際の値との関係も表現されています。</target>
        </trans-unit>
        <trans-unit id="39a94149ce22e4db399e8e0e373611c2d8539226" translate="yes" xml:space="preserve">
          <source>The result type of operations is a Range, where appropriate, or a subtype of
Rational, where a numeric value is appropriate.</source>
          <target state="translated">演算の結果タイプは、適切な場合はRange、数値が適切な場合はRationalのサブタイプとなります。</target>
        </trans-unit>
        <trans-unit id="9ed4545ef7ef3799a6493364429d8f4f3088d609" translate="yes" xml:space="preserve">
          <source>The size module supplies a set of named prefixes for both SI and binary units,
for all non-fractional prefixes. Fractional prefixes are not defined.</source>
          <target state="translated">sizeモジュールは、SI単位とバイナリ単位の両方で、すべての非フラクショナル接頭辞に対して名前付き接頭辞のセットを提供します。フラクショナル接頭辞は定義されていません。</target>
        </trans-unit>
        <trans-unit id="6c9670cfffbaa49a042fc163ff0b2776907074d3" translate="yes" xml:space="preserve">
          <source>The str representation can also be configured. The manipulation of the
representation to form a str object is abstracted from the rest of the source
to emphasize that clients of the package may choose to represent address ranges
in any manner they choose.</source>
          <target state="translated">str 表現も設定することができます。str オブジェクトを形成するための表現の操作は、パッケージのクライアントが任意の方法でアドレス範囲を表現することができることを強調するために、ソースの他の部分から抽象化されています。</target>
        </trans-unit>
        <trans-unit id="c9d82d1c8a3f153080dfa8f031173eb4da4b8f13" translate="yes" xml:space="preserve">
          <source>This module does not accomodate multi-dimensionality of address ranges.
Consequently, multiplying one Range object by another Range object will cause
an error to be raised, since bytes^2 is not representable by the module.
For most uses any operation which would yield a multi-dimensional quantity
is not useful. There are no plans to adapt this package so that it
can accomodate multi-dimensionality of address ranges.</source>
          <target state="translated">このモジュールは、アドレス範囲の多次元化に対応していません。その結果、あるレンジオブジェクトに別のレンジオブジェクトを乗算すると、 bytes^2 がモジュールで表現できないため、エラーが発生します。ほとんどの用途では、多次元の量を得るような操作は有用ではありません。アドレス範囲の多次元化に対応できるように、このパッケージを適応させる予定はありません。</target>
        </trans-unit>
        <trans-unit id="d5695091f3f7dbec419aa9a43a489657cd3cec78" translate="yes" xml:space="preserve">
          <source>This package does not handle arbitrary user input. It is expected that the
client will transform any input, from whatever source, into a number and an
optional unit specification which can be passed directly to the Range
constructor.</source>
          <target state="translated">本パッケージは、任意のユーザ入力を扱いません。クライアントは、どのようなソースからの入力であっても、数値とオプションの単位指定に変換して Range コンストラクタに直接渡すことが期待されています。</target>
        </trans-unit>
        <trans-unit id="0ad10cd434a732c22b242d2eb564844e1c3e7716" translate="yes" xml:space="preserve">
          <source>This representation is exposed to clients of the library, which may use it
in any way.</source>
          <target state="translated">この表現はライブラリのクライアントに公開されており、ライブラリはそれをどのような方法でも使用することができます。</target>
        </trans-unit>
        <trans-unit id="0b75d4ee12567b39421e5cdafacb9fdac3567042" translate="yes" xml:space="preserve">
          <source>User Input</source>
          <target state="translated">ユーザー入力</target>
        </trans-unit>
        <trans-unit id="4cfb3a9ba784840220f2270e361d47e1ff0d6f04" translate="yes" xml:space="preserve">
          <source>When computing with address ranges, the numeric value can be viewed as a
logical, rather than a physical, quantity. That is, unlike, e.g., mass or
length, which are quantities which must be measured with a measuring instrument
which has some built-in imprecision, an address range
is a quantity that is not measured, but is known precisely.
This precision arises because the number represents not as much an amount of
memory as a number of addressable, byte-size, locations in memory.</source>
          <target state="translated">アドレス範囲を使用して計算する場合、数値は物理的な量ではなく論理的な量とみなすことができます。つまり、例えば質量や長さなど、ある程度の不正確さを内蔵した測定器で測定しなければならない量であるのとは異なり、アドレス範囲は測定されないが正確に知られている量です。この精度は、数値がメモリ内のバイトサイズのアドレス可能な位置の数ほどメモリの量を表していないために発生します。</target>
        </trans-unit>
        <trans-unit id="d2fff8678cd4207ea323bf9803cc0d1f80906f54" translate="yes" xml:space="preserve">
          <source>computing with and displaying bytes</source>
          <target state="translated">バイト計算表示</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
