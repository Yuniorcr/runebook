<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/brokkr/">
    <body>
      <group id="brokkr">
        <trans-unit id="df0e7c3bb2d179b4e325c6bb0b758f9021382cbf" translate="yes" xml:space="preserve">
          <source>(e.g. &lt;code&gt;brokkr configure-system hamma /home/pi/dev/mjolnir-hamma&lt;/code&gt;)</source>
          <target state="translated">（例： &lt;code&gt;brokkr configure-system hamma /home/pi/dev/mjolnir-hamma&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5a2a00e69d563c38709b6ad1ed5b83319f0bd448" translate="yes" xml:space="preserve">
          <source>(e.g. &lt;code&gt;brokkr configure-unit 1 --network-interface wlan0&lt;/code&gt;)</source>
          <target state="translated">（例： &lt;code&gt;brokkr configure-unit 1 --network-interface wlan0&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="68e7ae8485381fb1c4693b195d4c6be085c79d46" translate="yes" xml:space="preserve">
          <source>A client for data ingest/logging/uplink, remote management and autonomous &amp; central control of scientific IoT sensors as part of the Mjolnir system.</source>
          <target state="translated">Mjolnirシステムの一部として、科学的なIoTセンサーのデータの取り込み/ロギング/アップリンク、リモート管理、自律的および中央制御のクライアント。</target>
        </trans-unit>
        <trans-unit id="89e3cae78745b4a188589c0d16b1e26265b5a6b1" translate="yes" xml:space="preserve">
          <source>A client for data ingest/logging/uplink, remote management and autonomous &amp;amp; central control of scientific IoT sensors as part of the Mjolnir system.
Originally developed to receive science data and status information from a local HAMMA2 lightning sensor and a Sunsaver MPPT-15L charge controller, store it locally, and transmit it back to a central server (generally, but not necessarily one running the Sindri package), but is now being evolved to be extensible and configurable for a wide variety of applications, from low-cost, low-power arrays of hundreds of environmental monitoring sensors, to sophisticated instruments mounted on aircraft and UAVs.
Further, it can maintain a reverse SSH tunnel to an accessible server for remote access, and receive and execute power, processing system and sensor control commands forwarded as TCP packets over said connection.</source>
          <target state="translated">Mjolnirシステムの一部として、科学的なIoTセンサーのデータの取り込み/ロギング/アップリンク、リモート管理、自律的および中央制御のクライアント。もともとは、ローカルのHAMMA2雷センサーとSunsaver MPPT-15L充電コントローラーから科学データとステータス情報を受信し、ローカルに保存して、中央サーバー（通常は、必ずしもSindriパッケージを実行しているサーバーではない）に送信するために開発されましたが、は現在、数百の環境監視センサーの低コスト、低電力アレイから、航空機やUAVに搭載された高度な機器まで、幅広いアプリケーション向けに拡張可能で構成可能なように進化しています。さらに、リモートアクセスのためにアクセス可能なサーバーへのリバースSSHトンネルを維持し、電力を受け取って実行することができます。上記の接続を介してTCPパケットとして転送される処理システムおよびセンサー制御コマンド。</target>
        </trans-unit>
        <trans-unit id="9334f3dc0e7b236462064e977fc295b5892f9c84" translate="yes" xml:space="preserve">
          <source>A major design goal of Brokkr and the Mjolnir system is extensive, flexible and straightforward reconfiguration for different sensor networks and changing needs.
All the system configuration is normally handled through the Mjolnir-HAMMA system config package in the standard Mjolnir config schema developed for this system (located at ~/dev/mjolnir-hamma), aside from a few high-level elements specific to each unit which all have interactive configuration commands as below.</source>
          <target state="translated">BrokkrとMjolnirシステムの主要な設計目標は、異なるセンサーネットワークと変化するニーズのための広範で柔軟性のある簡単な再構成です。すべてのシステム構成は通常、このシステムのために開発された標準Mjolnir configスキーマ(~/dev/mjolnir-hammaにある)のMjolnir-HAMMAシステム構成パッケージを介して処理され、以下のようにすべての対話的な構成コマンドを持っている各ユニットに固有のいくつかの高レベルの要素は別として。</target>
        </trans-unit>
        <trans-unit id="cbdcbd0b3ca0410196eb27a75ad7b5b2609a213a" translate="yes" xml:space="preserve">
          <source>A sample bash script will be provided that runs steps 3-9 of this workflow automatically, and can be customized to the needs of a specific system.</source>
          <target state="translated">このワークフローのステップ3~9を自動的に実行するサンプルbashスクリプトが提供され、特定のシステムのニーズに合わせてカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="7cfbde6dd40b5f5e9f1a33150236c89770ab0398" translate="yes" xml:space="preserve">
          <source>A typical semi-automated install flow might look like the following</source>
          <target state="translated">典型的な半自動インストールの流れは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e6d67902f8b25a3a2010f3b3daa75b03a203e2b7" translate="yes" xml:space="preserve">
          <source>After flashing the Pi and activating the appropriate venv, run &lt;code&gt;brokkr setup-device&lt;/code&gt; to regenerate the harnesses device-specific items (password, hashes, SSH keys, etc). You&amp;rsquo;ll need to enter the Pi&amp;rsquo;s current and desired password at the interactive prompt.</source>
          <target state="translated">Piをフラッシュして適切なvenvをアクティブ化した後、 &lt;code&gt;brokkr setup-device&lt;/code&gt; を実行して、ハーネスのデバイス固有のアイテム（パスワード、ハッシュ、SSHキーなど）を再生成します。インタラクティブプロンプトでPiの現在の希望するパスワードを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="76441228b4024c4f569f4cc8fb76baa1924d651a" translate="yes" xml:space="preserve">
          <source>Automated clean install</source>
          <target state="translated">自動クリーンインストール</target>
        </trans-unit>
        <trans-unit id="a773001a7b51a529380a55f0d6c16fb10adb4af9" translate="yes" xml:space="preserve">
          <source>Basic status check and latest log output</source>
          <target state="translated">基本的な状態確認と最新のログ出力</target>
        </trans-unit>
        <trans-unit id="ca0de5a9a3a53a189f55ba58efbc4ed03c5a21e1" translate="yes" xml:space="preserve">
          <source>Brokkr</source>
          <target state="translated">ブローククル</target>
        </trans-unit>
        <trans-unit id="bc19da936e001381b6f4aa20228e146bd7a68c97" translate="yes" xml:space="preserve">
          <source>Built and tested under Python 3.7 (but should be compatible with Python &amp;gt;=3.6; lack thereof should be considered a bug), and should be forward-compatible with Python 3.8 (albeit as yet not fully tested).
Compatible and tested with recent (&amp;gt;= 2019) versions of the packages listed in the &lt;code&gt;requirements.txt&lt;/code&gt; file.
Works best on Linux, but is tested to be fully functional (aside from service features) on Windows (and &lt;em&gt;should&lt;/em&gt; work equally macOS) under the Anaconda distribution.</source>
          <target state="translated">Python 3.7の下でビルドおよびテストされています（ただし、Python&amp;gt; = 3.6と互換性がある必要があります。その不足はバグと見なされます）。Python3.8との上位互換性があります（ただし、まだ完全にはテストされていません）。 &lt;code&gt;requirements.txt&lt;/code&gt; ファイルにリストされているパッケージの最新（&amp;gt; = 2019）バージョンと互換性があり、テスト済みです。Linux上で最適に動作しますが、Windows上（脇サービス機能から）完全に機能するためにテストされる（と&lt;em&gt;すべき&lt;/em&gt;均等にMacOSの仕事）アナコンダ分布の下で。</target>
        </trans-unit>
        <trans-unit id="4310a244bc3994bea41ec2d0b5a9905d781f0327" translate="yes" xml:space="preserve">
          <source>Built-in support for dozens of different sensors including ECH2O EC-5, EC-10, EC-20, DS18S20, DS1822, DS18B20, DS28EA00, DS1825, MAX31850K, HIH6130, Si7021, SHT31D, MPL3115A2, MLX90614, HTU21D, DHT11, DHT22, BMP280, BME280, MPPT-15L, HAMMA2, ADS1015, ADS1115, and generic switch, counter, GPIO and analog anemometer dir and speed, plus time, runtime, ping, and more</source>
          <target state="translated">ECH2O EC-5、EC-10、EC-20、DS18S20、DS1822、DS18B20、DS28EA00、DS1825、MAX31850K、HIH6130、Si7021、SHT31D、MPL3115A2、MLX90614を含む数十種類のセンサを内蔵。HTU21D、DHT11、DHT22、BMP280、BME280、MPPT-15L、HAMMA2、ADS1015、ADS1115、および汎用スイッチ、カウンタ、GPIO、アナログ風速計のディレクトリと速度、さらに時間、ランタイム、pingなど。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">構成</target>
        </trans-unit>
        <trans-unit id="2e6a92a2c2438a218ce2871c3365ab82c4ceb3a8" translate="yes" xml:space="preserve">
          <source>Configuration files are located under the XDG-standard &lt;code&gt;~/.config/brokkr&lt;/code&gt; directory in the ini-like &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; format; they can be generated by running &lt;code&gt;brokkr configure-init&lt;/code&gt; (which will not overwrite them if they already exist), and reset to defaults with &lt;code&gt;brokkr configure-reset&lt;/code&gt;.</source>
          <target state="translated">構成ファイルは、XDG標準の &lt;code&gt;~/.config/brokkr&lt;/code&gt; ディレクトリーの下に、iniに似た&lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt;形式で配置されています。これらは、 &lt;code&gt;brokkr configure-init&lt;/code&gt; （すでに存在する場合は上書きされません）を実行して生成でき、 &lt;code&gt;brokkr configure-reset&lt;/code&gt; でデフォルトにリセットできます。</target>
        </trans-unit>
        <trans-unit id="c62734684ddc3a0c843654a434c8b5c4471e12db" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2019-2020 C.A.M. Gerlach, the UAH HAMMA Group and the Project Mjolnir Contributors</source>
          <target state="translated">Copyright&amp;copy;2019-2020 CAM Gerlach、UAH HAMMA Group、およびProject Mjolnir貢献者</target>
        </trans-unit>
        <trans-unit id="88fbf6c7efe3420519716388447833ffcdaec62b" translate="yes" xml:space="preserve">
          <source>Create and activate venv, &lt;code&gt;pip install brokkr --no-dependencies&lt;/code&gt; from offline sdist and copy system config dir and any keyfiles</source>
          <target state="translated">venvを作成してアクティブ化し、 &lt;code&gt;pip install brokkr --no-dependencies&lt;/code&gt; from offline sdist and copy system config dir and any keyfiles</target>
        </trans-unit>
        <trans-unit id="319ef02997738bb295b73861dfe0914f01984714" translate="yes" xml:space="preserve">
          <source>Create venv for Sindri and &lt;code&gt;pip install sindri&lt;/code&gt; it (optional)</source>
          <target state="translated">Sindriのvenvを作成し、 &lt;code&gt;pip install sindri&lt;/code&gt; it（オプション）</target>
        </trans-unit>
        <trans-unit id="b3a74fa260a0c87102115e66a35b00b46070607e" translate="yes" xml:space="preserve">
          <source>Drop-in, declarative preset system for supporting new sensors, devices and protocols; presets can be enabled with as little as 1 line in the master config file, and extensively customized via config options</source>
          <target state="translated">新しいセンサー、デバイス、プロトコルをサポートするためのドロップイン、宣言的プリセットシステム。プリセットはマスターコンフィグファイルのわずか1行で有効にすることができ、コンフィグオプションで広範囲にカスタマイズ可能</target>
        </trans-unit>
        <trans-unit id="f1a7d2f60f2f6c70f49c674d8d2b780a4ae32cd8" translate="yes" xml:space="preserve">
          <source>Easy to use, powerful plugin framework with a simple API and minimal boilterplate for input, processing and output steps; can be either simple Python files placed in a specific directory, or proper Python packages</source>
          <target state="translated">入力、処理、出力のステップのためのシンプルな API と最小限のフィルタプレートを備えた、使いやすくパワフルなプラグインフレームワーク。</target>
        </trans-unit>
        <trans-unit id="4c60172a320014c676f21894dfa08aa4e753267d" translate="yes" xml:space="preserve">
          <source>Enable/disable running on startup</source>
          <target state="translated">起動時の実行の有効化/無効化</target>
        </trans-unit>
        <trans-unit id="b4d79af590a8426842de51ff637e6f0b73579b90" translate="yes" xml:space="preserve">
          <source>Finally, on site, once the final unit configuration is set (or after it is changed in the future), perform on-site setup as below</source>
          <target state="translated">最後に、現場では、最終的なユニット構成を設定した後(または将来的に変更した後)、以下のように現場設定を行います。</target>
        </trans-unit>
        <trans-unit id="42c90ed8eed700cd227dbeb6ce26a99c1c3e9991" translate="yes" xml:space="preserve">
          <source>Finally, you can check that Brokkr is working with &lt;code&gt;brokkr --version&lt;/code&gt;, &lt;code&gt;brokkr status&lt;/code&gt; and the other commands detailed in &lt;code&gt;brokkr --help&lt;/code&gt;.
Simply reboot to automatically complete setup and start the &lt;code&gt;brokkr&lt;/code&gt; service, or on all platforms you can manually execute it on the command line immediately with &lt;code&gt;brokkr start&lt;/code&gt;.</source>
          <target state="translated">最後に、Brokkrが &lt;code&gt;brokkr --version&lt;/code&gt; 、 &lt;code&gt;brokkr status&lt;/code&gt; 、および &lt;code&gt;brokkr --help&lt;/code&gt; で詳述されている他のコマンドを使用して動作していることを確認できます。再起動するだけで、セットアップが自動的に完了して &lt;code&gt;brokkr&lt;/code&gt; サービスが開始されます。または、すべてのプラットフォームで、コマンドラインで &lt;code&gt;brokkr start&lt;/code&gt; を使用して、手動ですぐに実行できます。</target>
        </trans-unit>
        <trans-unit id="6c05de758095d676ce000f3ea513ad075a2d4607" translate="yes" xml:space="preserve">
          <source>Finally, you can run the post-installation setup steps as needed for your system.
For a simple system, to just install the systemd service unit to run Brokkr on startup and restart it if it fails,</source>
          <target state="translated">最後に、システムに必要に応じてインストール後のセットアップ手順を実行します。シンプルなシステムの場合は、起動時にBrokkrを実行するためのsystemdサービスユニットをインストールし、失敗した場合は再起動するだけです。</target>
        </trans-unit>
        <trans-unit id="2c96f39e2e3366555d77bb09b610defc75b37609" translate="yes" xml:space="preserve">
          <source>First activate the appropriate Python virtual environment (&lt;code&gt;source ENV_DIR/bin/activate&lt;/code&gt;).</source>
          <target state="translated">最初に適切なPython仮想環境をアクティブ化します（ &lt;code&gt;source ENV_DIR/bin/activate&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13b8b1ac534f3e18026c2dca8a1eb3f714e389b4" translate="yes" xml:space="preserve">
          <source>Flash SD card with OS image</source>
          <target state="translated">OSイメージのフラッシュSDカード</target>
        </trans-unit>
        <trans-unit id="ba224c48ff55deae165226f595e06e3e0e24af72" translate="yes" xml:space="preserve">
          <source>Flashing Brokkr onto a prepared card</source>
          <target state="translated">用意されたカードにBrokkrを点滅させる</target>
        </trans-unit>
        <trans-unit id="3257407a911a22d819768bebacbc7e073b8ca753" translate="yes" xml:space="preserve">
          <source>For the avoidance of doubt, per the terms of the LGPL, plugins, presets and configuration packages are not considered integral parts of the covered work, and may be released under any license, free or proprietary.</source>
          <target state="translated">疑念を避けるために、LGPLの条項によれば、プラグイン、プリセット、設定パッケージは、カバーされている作品の不可欠な部分とはみなされず、任意のライセンス、フリーまたはプロプライエタリなライセンスの下でリリースされるかもしれません。</target>
        </trans-unit>
        <trans-unit id="2a1cee1c31b1b6afbad1fb01f853c69387364179" translate="yes" xml:space="preserve">
          <source>Full log output (also logged to text file &lt;code&gt;~/brokkr/hamma/brokkr_hamma_NNN.log&lt;/code&gt;)</source>
          <target state="translated">完全なログ出力（テキストファイル &lt;code&gt;~/brokkr/hamma/brokkr_hamma_NNN.log&lt;/code&gt; も記録されます）</target>
        </trans-unit>
        <trans-unit id="77daedc1ef71a364b59a4c80fc13606ffa6b3d7b" translate="yes" xml:space="preserve">
          <source>Generate empty local per-system (i.e. override) config files if not already present:</source>
          <target state="translated">まだ存在しない場合は、空のローカルのシステムごとの (つまりオーバーライドの)設定ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="fa21b581851e8a4cd6a81c8379ea846fef644298" translate="yes" xml:space="preserve">
          <source>Generate local config files</source>
          <target state="translated">ローカル設定ファイルの生成</target>
        </trans-unit>
        <trans-unit id="47888729520073516f52bdb2fb6f6626f8d7ffbe" translate="yes" xml:space="preserve">
          <source>Generate, install and enable service automatically</source>
          <target state="translated">サービスを自動的に生成、インストール、有効化</target>
        </trans-unit>
        <trans-unit id="cf744f6ef6edc5eaca194b11a27882d111b0429b" translate="yes" xml:space="preserve">
          <source>Hierarchical configuration system, allowing for multiple levels of settings and overrides</source>
          <target state="translated">階層的な設定システムで、複数のレベルの設定とオーバーライドを可能にします。</target>
        </trans-unit>
        <trans-unit id="97b80cce75217a34624e11819d56cbddd17b45f8" translate="yes" xml:space="preserve">
          <source>High-level local setting configuration</source>
          <target state="translated">高レベルローカル設定設定</target>
        </trans-unit>
        <trans-unit id="12ed95d92250a5f18f64fe6504b5b7c3960ea249" translate="yes" xml:space="preserve">
          <source>However, for setup on typical IoT devices (i.e. single-board computers like the Raspberry Pi) running a clean copy of a modern Linux-based operating system, Brokkr features a comprehensive setup routine that can bootstrap all key aspects of a factory-fresh system to be ready for deployment in the field.
Simply declare the configuration files you want copied, packages and services you want installed/enabled/disabled/removed, firewall ports you want open closed, and other custom actions (move files, sed scripts, commands run, etc) for each phase of the install as part of the system config package, and on your command, brokkr will do the rest.</source>
          <target state="translated">しかし、最新のLinuxベースのオペレーティングシステムのクリーンコピーを実行している典型的なIoTデバイス(Raspberry Piのようなシングルボードコンピュータ)のセットアップのために、Brokkrは、工場出荷時のフレッシュなシステムのすべての重要な側面をブートストラップして、フィールドでの展開の準備ができるようにすることができる包括的なセットアップルーチンを備えています。コピーしたい設定ファイル、インストール/有効/無効/削除したいパッケージやサービス、オープン/クローズしたいファイアウォールポート、その他のカスタムアクション(ファイルの移動、sedスクリプト、コマンドの実行など)をシステム設定パッケージの一部としてインストールの各フェーズで宣言するだけで、あとはBrokkrが実行します。</target>
        </trans-unit>
        <trans-unit id="d1bc328ee1c7ab3d5c2a3c02b01b45e48272f0fd" translate="yes" xml:space="preserve">
          <source>However, if local customization is needed beyond the high-level options specified here, instead of modifying the version-control-tracked system config package directly, the config system built for this is fully hierarchical and all settings can be fully overridden via the corresponding local config in ~/.config/brokkr/hamma
Brokkr fully supports configuration, logging, operation and output of any number of Mjolnir systems simultaneously, all on the same Pi.</source>
          <target state="translated">しかし、ここで指定された高レベルのオプションを超えてローカルのカスタマイズが必要な場合は、バージョン制御で追跡されたシステムconfigパッケージを直接修正する代わりに、このために構築されたconfigシステムは完全に階層化されており、~/.config/brokkr/hammaにある対応するローカルconfigを介してすべての設定を完全にオーバーライドすることができます。 Brokkrは、すべて同じPi上で、任意の数のMjolnirシステムの設定、ロギング、操作、および出力を同時に完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="97d12a184a5d895dd8d79249f8f8c7cad4f33cb2" translate="yes" xml:space="preserve">
          <source>If a card is already prepared via the steps mentioned in the &quot;Automated clean install&quot; section (minus the &lt;code&gt;brokkr setup-device&lt;/code&gt; step), flashing it onto another device and preparing it for deployment is simple.</source>
          <target state="translated">「自動クリーンインストール」セクションに記載されている手順（ &lt;code&gt;brokkr setup-device&lt;/code&gt; 手順を除く）でカードがすでに準備されている場合、別のデバイスにフラッシュして展開の準備をするのは簡単です。</target>
        </trans-unit>
        <trans-unit id="a8f39a0eaff1e31685a2b14797108f08b8c37cd0" translate="yes" xml:space="preserve">
          <source>Installation and Setup</source>
          <target state="translated">インストールとセットアップ</target>
        </trans-unit>
        <trans-unit id="5d015b02f115b4632d48e12bcb7cae89f82ea237" translate="yes" xml:space="preserve">
          <source>Interactive Use (Foreground)</source>
          <target state="translated">インタラクティブな使い方(前景</target>
        </trans-unit>
        <trans-unit id="c961da4e3b66e2f97987a7afe330011eb7cb4e36" translate="yes" xml:space="preserve">
          <source>Key Features</source>
          <target state="translated">主な特徴</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="fa1d2b711c5f0d36162d373298d2f21f32702b2f" translate="yes" xml:space="preserve">
          <source>Lightweight realtime monitoring (prints to screen, can also write to file): &lt;code&gt;brokkr monitor&lt;/code&gt;</source>
          <target state="translated">軽量のリアルタイム監視（画面への出力、ファイルへの書き込みも可能）： &lt;code&gt;brokkr monitor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46f3d390d11a7da4256c70225dd592812540005" translate="yes" xml:space="preserve">
          <source>Main foreground start command, for testing: &lt;code&gt;brokkr start&lt;/code&gt;</source>
          <target state="translated">テスト用のメインフォアグラウンドスタートコマンド： &lt;code&gt;brokkr start&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e991aaeb0eee65f54df8d54a85f87b0368489d6" translate="yes" xml:space="preserve">
          <source>On Linux, Brokkr can be installed like any other Python package via &lt;code&gt;pip&lt;/code&gt; into a virtual environment like so (with the venv created inside &lt;code&gt;ENV_NAME&lt;/code&gt; in the current working directory), with the extra packages needed to support specific sensor types (e.g. &lt;code&gt;modbus&lt;/code&gt;, &lt;code&gt;serial&lt;/code&gt;, &lt;code&gt;adafruit&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; etc) installed as desired:</source>
          <target state="translated">Linuxでは、Brokkrは他のPythonパッケージと同様に、 &lt;code&gt;pip&lt;/code&gt; を介して（現在の作業ディレクトリの &lt;code&gt;ENV_NAME&lt;/code&gt; 内に作成されたvenvを使用して）特定のセンサータイプ（例： &lt;code&gt;modbus&lt;/code&gt; 、 &lt;code&gt;serial&lt;/code&gt; 、 &lt;code&gt;adafruit&lt;/code&gt; 、 &lt;code&gt;all&lt;/code&gt; etc）必要に応じてインストール：</target>
        </trans-unit>
        <trans-unit id="399eaf4c2397a460e71f0736af04329d0162e90f" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, use of Anaconda/Miniconda is recommended, substituting conda environments for venvs. While these platforms are supported for development, some functionality specific to running Brokkr in production may be unavailable.</source>
          <target state="translated">WindowsとMacでは、conda環境をvenvsの代わりにAnaconda/Minicondaを使用することをお勧めします。これらのプラットフォームは開発用にサポートされていますが、本番環境でのBrokkrの実行に特有の機能の一部が利用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="716a2c8c4fde889342cd7e06d095fce13857168b" translate="yes" xml:space="preserve">
          <source>On site, you'll want to take a couple additional actions to pair a specific device with a specific site, and test connectivity.</source>
          <target state="translated">現場では、特定のデバイスと特定のサイトをペアリングしたり、接続性をテストしたりするために、さらにいくつかのアクションを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="51493e8a9de2950a334522f0e43858485a6251d1" translate="yes" xml:space="preserve">
          <source>On-site setup</source>
          <target state="translated">オンサイトセットアップ</target>
        </trans-unit>
        <trans-unit id="17241a9c4a9c68dd062916f1b9b70e43b884fb5b" translate="yes" xml:space="preserve">
          <source>Once on-site, perform unit configuration (see below)</source>
          <target state="translated">現場に到着したら、ユニットの設定を行います(以下を参照)。</target>
        </trans-unit>
        <trans-unit id="78505fd9911563f1eb2775ffce5297c91559915c" translate="yes" xml:space="preserve">
          <source>Oneshot status output: &lt;code&gt;brokkr status&lt;/code&gt;</source>
          <target state="translated">Oneshotステータス出力： &lt;code&gt;brokkr status&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="72089056cb494d3993d84660abfe5bb0f108bdc4" translate="yes" xml:space="preserve">
          <source>Perform basic raspi-config, Fedora, etc. setup; change username if desired</source>
          <target state="translated">基本的な raspi-config、Fedora などのセットアップを実行します。</target>
        </trans-unit>
        <trans-unit id="06c8d1a41ced8c0c0de9fcab6174175734fd0cc9" translate="yes" xml:space="preserve">
          <source>Plugins for alerts/triggered actions, Slack notifications, REST/web APIs and much more</source>
          <target state="translated">アラート/トリガーアクション、Slack通知、REST/Web APIなどのプラグイン</target>
        </trans-unit>
        <trans-unit id="554dbf4b2a66f718b1b7bae772adb8b807e3d059" translate="yes" xml:space="preserve">
          <source>Power off the device, connect it to all desired hardware and reboot</source>
          <target state="translated">デバイスの電源を切り、必要なハードウェアに接続し、再起動します。</target>
        </trans-unit>
        <trans-unit id="85b4bfa3efef108eceac05a5eb2c69ae56267c4f" translate="yes" xml:space="preserve">
          <source>Register a Mjolnir system:</source>
          <target state="translated">Mjolnirシステムを登録します。</target>
        </trans-unit>
        <trans-unit id="e853357f89a151a530194feb38e01e74806c384b" translate="yes" xml:space="preserve">
          <source>Register, update and remove systems</source>
          <target state="translated">システムの登録・更新・削除</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">必要条件</target>
        </trans-unit>
        <trans-unit id="1d7c76d34a5f676f0c4ae7099ecae62255f24167" translate="yes" xml:space="preserve">
          <source>Reset configuration</source>
          <target state="translated">設定のリセット</target>
        </trans-unit>
        <trans-unit id="42578e5d9e1ad91e419b4eea2cf554b538b9e239" translate="yes" xml:space="preserve">
          <source>Reset unit and local override configuration (optionally minus system registry):</source>
          <target state="translated">ユニットとローカルのオーバーライド設定をリセットします(オプションでシステムレジストリを差し引いたもの)。</target>
        </trans-unit>
        <trans-unit id="51235016e6ea8a9a323dfad0689066c96d2d7995" translate="yes" xml:space="preserve">
          <source>Robust error handling, status logging, automatic installation, service configuration and multiprocess management infrastructure</source>
          <target state="translated">堅牢なエラー処理、ステータスロギング、自動インストール、サービス構成、マルチプロセス管理インフラストラクチャ</target>
        </trans-unit>
        <trans-unit id="bfee5010ffc750fb03e7c28edbb83063393f7751" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr configure-system &amp;lt;systemname&amp;gt; &amp;lt;systempath&amp;gt;&lt;/code&gt; to set the system config dir path</source>
          <target state="translated">&lt;code&gt;brokkr configure-system &amp;lt;systemname&amp;gt; &amp;lt;systempath&amp;gt;&lt;/code&gt; 実行して、システム構成ディレクトリパスを設定します</target>
        </trans-unit>
        <trans-unit id="87b210d27e06dbcbfe42cf4f3d8a5072ae1770a5" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr configure-unit &amp;lt;unit-number&amp;gt; --network-interface &amp;lt;network-interface&amp;gt;&lt;/code&gt; to set up the basic unit configuration</source>
          <target state="translated">ファイル名を指定して実行 &lt;code&gt;brokkr configure-unit &amp;lt;unit-number&amp;gt; --network-interface &amp;lt;network-interface&amp;gt;&lt;/code&gt; 基本ユニット構成を設定するには</target>
        </trans-unit>
        <trans-unit id="f0b6ea222868a07efe49133de868fdd47d59c887" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr install --phase 1&lt;/code&gt; to perform the necessary steps to enable Internet</source>
          <target state="translated">実行 &lt;code&gt;brokkr install --phase 1&lt;/code&gt; インターネットを可能にするために必要な手順を実行します</target>
        </trans-unit>
        <trans-unit id="5ee83b0ebef19d7e3584a21696a0c3d46cb3bc51" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr install --phase 2&lt;/code&gt; to install remaining items</source>
          <target state="translated">ランは &lt;code&gt;brokkr install --phase 2&lt;/code&gt; 残りの項目をインストールします</target>
        </trans-unit>
        <trans-unit id="3b93bd0e50d94913ace4049d712917d3fe3d330f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr setup-device&lt;/code&gt; to trigger device-specific setup actions</source>
          <target state="translated">&lt;code&gt;brokkr setup-device&lt;/code&gt; を実行して、デバイス固有のセットアップアクションをトリガーします</target>
        </trans-unit>
        <trans-unit id="4c4bd4d957efb581c943efb812de55f75a03aad6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;brokkr setup-unit&lt;/code&gt; to perform final per-unit on-site setup, register and test the link to the sensor, and verify connectivity to the upstream server</source>
          <target state="translated">実行 &lt;code&gt;brokkr setup-unit&lt;/code&gt; 、最終単位当たりのオンサイトのセットアップを実行登録して、センサーへのリンクをテストし、アップストリームサーバーへの接続を確認します</target>
        </trans-unit>
        <trans-unit id="ccbbd3b891e1d62d7afb7fe8b8360f7e8aa9e74b" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;brokkr status&lt;/code&gt; command to get a snapshot of the monitoring data, and the &lt;code&gt;brokkr monitor&lt;/code&gt; command to get a pretty-printed display of all the main monitoring variables, updated in real time (1s) as you watch.</source>
          <target state="translated">&lt;code&gt;brokkr status&lt;/code&gt; コマンドを実行してモニタリングデータのスナップショットを取得し、 &lt;code&gt;brokkr monitor&lt;/code&gt; コマンドを実行して、すべての主要なモニタリング変数をきれいに表示し、リアルタイムで更新（1秒）します。</target>
        </trans-unit>
        <trans-unit id="94cf566341875b58d9b39bc87b5f65577df3a464" translate="yes" xml:space="preserve">
          <source>Running Brokkr as a Service (Background)</source>
          <target state="translated">Brokkrをサービスとして実行する(バックグラウンド</target>
        </trans-unit>
        <trans-unit id="563158da254be63c56174e1d19fea05370059346" translate="yes" xml:space="preserve">
          <source>Set per-unit configuration</source>
          <target state="translated">ユニット単位の設定</target>
        </trans-unit>
        <trans-unit id="d094472ebcd2d75164a0dc2a4a20cfa832aed869" translate="yes" xml:space="preserve">
          <source>Standard install</source>
          <target state="translated">標準インストール</target>
        </trans-unit>
        <trans-unit id="8bc2be80f7224446b77d2c9b05d01f3f5d3bfcb8" translate="yes" xml:space="preserve">
          <source>Start/stop</source>
          <target state="translated">スタート/ストップ</target>
        </trans-unit>
        <trans-unit id="960a81e0b68cdb65421b7df897591e20d4ed392b" translate="yes" xml:space="preserve">
          <source>Support for SPI, I2C, GPIO, Analog, SMBus, UART, Modbus, TCP, UDP, and more as inputs, and print/pretty print, file and system logging, CSV, and TCP packets as output built into the core</source>
          <target state="translated">入力としてSPI、I2C、GPIO、アナログ、SMBus、UART、Modbus、TCP、UDPなどをサポートし、出力としてprint/pretty print、ファイルおよびシステムロギング、CSV、TCPパケットをコアに内蔵しています。</target>
        </trans-unit>
        <trans-unit id="c2145d4397e46337b1ff56b05f5f7ad48893fa52" translate="yes" xml:space="preserve">
          <source>System-independent and fully multi-system capable; all metadata, config, plugins and presets stored within VCS-trackable self-contained package for easy management</source>
          <target state="translated">システムに依存せず、完全にマルチシステムに対応、すべてのメタデータ、コンフィグ、プラグイン、プリセットはVCSトラック可能な自己完結型パッケージに保存され、簡単に管理可能</target>
        </trans-unit>
        <trans-unit id="e96d9e81dc6029dd77e151b1f8cb398566ae2b9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;brokkr install-*&lt;/code&gt; commands perform installation functions and the &lt;code&gt;brokkr configure-*&lt;/code&gt; scripts help set up a new or updated &lt;code&gt;brokkr&lt;/code&gt; install.
Use &lt;code&gt;brokkr --help&lt;/code&gt; to get help, &lt;code&gt;brokkr --version&lt;/code&gt; to get the current version.
On Linux, the &lt;code&gt;brokkr&lt;/code&gt; systemd service can be interacted with via the standard systemd commands, e.g. &lt;code&gt;sudo systemd {start, stop, enable, disable} brokkr-hamma&lt;/code&gt;, &lt;code&gt;systemd status brokkr-hamma&lt;/code&gt;, &lt;code&gt;journalctl -u brokkr-hamma&lt;/code&gt;, etc, and the same for &lt;code&gt;autossh-brokkr&lt;/code&gt; which controls remote SSH connectivity.</source>
          <target state="translated">&lt;code&gt;brokkr install-*&lt;/code&gt; コマンドは、インストール機能および実行 &lt;code&gt;brokkr configure-*&lt;/code&gt; 新規または更新された設定スクリプトのヘルプ &lt;code&gt;brokkr&lt;/code&gt; インストールを。 &lt;code&gt;brokkr --help&lt;/code&gt; を使用してヘルプを取得し、 &lt;code&gt;brokkr --version&lt;/code&gt; を使用して現在のバージョンを取得します。 Linuxでは、 &lt;code&gt;brokkr&lt;/code&gt; systemdサービスは、標準のsystemdコマンドを介して対話できます。たとえば、 &lt;code&gt;sudo systemd {start, stop, enable, disable} brokkr-hamma&lt;/code&gt; 、 &lt;code&gt;systemd status brokkr-hamma&lt;/code&gt; 、 &lt;code&gt;journalctl -u brokkr-hamma&lt;/code&gt; など。リモートSSH接続を制御する &lt;code&gt;autossh-brokkr&lt;/code&gt; についても同様です。</target>
        </trans-unit>
        <trans-unit id="2687badc746fe70d4db188c2e9b0a0cf37b3178e" translate="yes" xml:space="preserve">
          <source>The code at the following paths are released under the MIT (Expat) License, Copyright &amp;copy; C.A.M. Gerlach 2019-2020, and subject to future independent release:</source>
          <target state="translated">以下のパスにあるコードは、MIT（Expat）ライセンス、Copyright&amp;copy;CAM Gerlach 2019-2020に基づいてリリースされており、将来の独立リリースの対象となります。</target>
        </trans-unit>
        <trans-unit id="e78bb63a768515f4d7bd7470aca0bca61f701b34" translate="yes" xml:space="preserve">
          <source>The goal of Project Mjolnir is to make it easy for PIs or students without a coding background to easily get started gathering and analyzing data from low-cost sensors right away, and allowing those with basic programming experience to easily develop, test and share their own plugins to work with new types of sensors, outputs and more with little or no extra work over a &quot;quick and dirty&quot; approach but major long-term benefits.
The long-term vision is to create an ecosystem of open-source presets, plugins, examples and more for a wide variety of low-cost scientific IoT sensors.</source>
          <target state="translated">Project Mjolnirの目標は、コーディングのバックグラウンドを持たないPIや学生が、低価格センサーからのデータ収集や分析をすぐに簡単に始められるようにし、基本的なプログラミングの経験がある人が、新しいタイプのセンサーや出力などで動作する独自のプラグインを簡単に開発、テスト、共有できるようにすることで、「素早くて汚い」アプローチではなく、長期的に大きな利益を得ることです。長期的なビジョンは、低コストで科学的なIoTセンサーの多種多様なもののためのオープンソースのプリセット、プラグイン、サンプルなどのエコシステムを作ることです。</target>
        </trans-unit>
        <trans-unit id="10e872cab5fb3b580c0b7dfff98cc73a6fd5a69a" translate="yes" xml:space="preserve">
          <source>Then, you need to take a few more steps to get your environment set up: clone the system config package(s) you want to use with Brokkr (replace the example &lt;code&gt;mjolnir-config-template&lt;/code&gt; path with yours), register them, and set up your config and unit information.
&lt;code&gt;SYSTEM_SHORTNAME&lt;/code&gt; is whatever name you want to register the system with in the system file, and &lt;code&gt;UNIT_NUMBER&lt;/code&gt; is the integer number (arbitrary, but should be unique) you want to designate the device you're installing on.</source>
          <target state="translated">次に、環境をセットアップするために、さらにいくつかの手順を実行する必要があります。Brokkrで使用するシステム構成パッケージのクローンを作成し（サンプルの &lt;code&gt;mjolnir-config-template&lt;/code&gt; パスを自分のものに置き換え）、それらを登録して設定します。設定とユニット情報をアップします。 &lt;code&gt;SYSTEM_SHORTNAME&lt;/code&gt; は、システムファイルにシステムを登録する名前です &lt;code&gt;UNIT_NUMBER&lt;/code&gt; は、インストールするデバイスを指定する整数（任意ですが、一意である必要があります）です。</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">ならば</target>
        </trans-unit>
        <trans-unit id="42f822f2b109856b4b6a9dc55420460d9d276977" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.</source>
          <target state="translated">このプログラムは有用であることを期待して配布されていますが、商品性や特定目的への適合性についての暗黙の保証もなく、何の保証もありません。詳細はGNU Lesser General Public Licenseを参照してください。</target>
        </trans-unit>
        <trans-unit id="acaabdd95d8cc1cd1584cf7bb05e48d8f0ed363d" translate="yes" xml:space="preserve">
          <source>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.</source>
          <target state="translated">このプログラムはフリーソフトウェアです:フリーソフトウェアファウンデーションによって発行されたGNU劣等一般公衆利用許諾書のバージョン3、あるいはそれ以降のバージョン(あなたの選択で)のいずれかの条件のもとで、再配布および/または変更することができます。</target>
        </trans-unit>
        <trans-unit id="90db4de6cf0fe6fc9e7973ae53828c714bdb6c0e" translate="yes" xml:space="preserve">
          <source>Update all packages to latest (&lt;code&gt;apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove&lt;/code&gt;) and reinstall brokkr with all packages (&lt;code&gt;pip uninstall brokkr &amp;amp;&amp;amp; pip install brokkr&lt;/code&gt;)</source>
          <target state="translated">すべてのパッケージを最新に &lt;code&gt;apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove&lt;/code&gt; （apt update &amp;amp;&amp;amp; apt full-upgrade &amp;amp;&amp;amp; apt autoremove）、brokkrをすべてのパッケージで再インストールします（ &lt;code&gt;pip uninstall brokkr &amp;amp;&amp;amp; pip install brokkr&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="2fb41479dc6421d4c643d86f661f2e3684be68d4" translate="yes" xml:space="preserve">
          <source>You can also use this command to remove, update, verify and set default systems with the appropriate arguments, see brokkr configure-system --help``</source>
          <target state="translated">また、このコマンドを使用して、適切な引数でデフォルトシステムの削除、更新、検証、設定を行うこともできます。</target>
        </trans-unit>
        <trans-unit id="b9f0d03fa5a402a18c38ed6eb7d7ab0e4b5dd9eb" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see &lt;a href=&quot;https://www.gnu.org/licenses/&quot;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.</source>
          <target state="translated">このプログラムと共に、GNU Lesser General Public Licenseのコピーを受け取っているはずです。そうでない場合は、&lt;a href=&quot;https://www.gnu.org/licenses/&quot;&gt;https：//www.gnu.org/licenses/を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e64d4e68bb2e9025c291a1148c58a88aae8b9191" translate="yes" xml:space="preserve">
          <source>or for a full install of all post-setup tasks, including the config files, firewall access, and (on Linux) serial port access, Brokkr systemd service, and SSH/AutoSSH service and configuration:</source>
          <target state="translated">または、設定ファイル、ファイアウォールアクセス、(Linuxでは)シリアルポートアクセス、Brokkr systemdサービス、SSH/AutoSSHサービスと設定を含むすべてのポストセットアップタスクのフルインストール。</target>
        </trans-unit>
        <trans-unit id="ee34e52140cdf4b8a1a9b589b5b22ba65591ef25" translate="yes" xml:space="preserve">
          <source>or, to install a development version:</source>
          <target state="translated">または、開発版をインストールします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
