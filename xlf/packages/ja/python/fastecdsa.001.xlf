<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/fastecdsa/">
    <body>
      <group id="fastecdsa">
        <trans-unit id="1abbbd166a07f43a17fcd532d5c2bc2bd25d2fe0" translate="yes" xml:space="preserve">
          <source>11m39.53s</source>
          <target state="translated">ばんごう</target>
        </trans-unit>
        <trans-unit id="2498420c9ad919074b497f3192fbf0b51f8cf8f8" translate="yes" xml:space="preserve">
          <source>12.11s</source>
          <target state="translated">12.11s</target>
        </trans-unit>
        <trans-unit id="7e24de468378a50393aa8d0760dbafe41cfa3f1e" translate="yes" xml:space="preserve">
          <source>1m35.49s</source>
          <target state="translated">一時三十五分四十九秒</target>
        </trans-unit>
        <trans-unit id="5e9e2ea3e72483ba6798b4cede6025e58a9079ff" translate="yes" xml:space="preserve">
          <source>22.21s</source>
          <target state="translated">22.21s</target>
        </trans-unit>
        <trans-unit id="595362244536ad838a378a22264ea919edffe339" translate="yes" xml:space="preserve">
          <source>2m13.42s</source>
          <target state="translated">二時十三分四十二秒</target>
        </trans-unit>
        <trans-unit id="3a7f59bab13f4f754a1e8dffe83c3c8b863f057b" translate="yes" xml:space="preserve">
          <source>2m52.43s</source>
          <target state="translated">二分五十二秒四十三秒</target>
        </trans-unit>
        <trans-unit id="061de031685e5e1a0c7318657e57e17cadfcb9c7" translate="yes" xml:space="preserve">
          <source>2m57.19s</source>
          <target state="translated">二分五十七秒</target>
        </trans-unit>
        <trans-unit id="bcf924c9980c0a6d726a2a183653e839791fc597" translate="yes" xml:space="preserve">
          <source>3.62s</source>
          <target state="translated">3.62s</target>
        </trans-unit>
        <trans-unit id="ee62fb1647c1d78ce7d60df838ee8d451ed50ca0" translate="yes" xml:space="preserve">
          <source>4.50s</source>
          <target state="translated">4.50s</target>
        </trans-unit>
        <trans-unit id="9afe45d1d811eb5dd931a43536c951add1ea3a2c" translate="yes" xml:space="preserve">
          <source>5.92s</source>
          <target state="translated">5.92s</target>
        </trans-unit>
        <trans-unit id="79738666e304fdc7752d1ba15634e80b7ac8b667" translate="yes" xml:space="preserve">
          <source>6.15s</source>
          <target state="translated">6.15s</target>
        </trans-unit>
        <trans-unit id="7c584cd59a19170dcab8a53a95c5e7e2aaa7c964" translate="yes" xml:space="preserve">
          <source>6m21.01s</source>
          <target state="translated">6時21分01秒</target>
        </trans-unit>
        <trans-unit id="8af203e7cc940624fdfa3d913f75632da6ac6b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ecdsa&lt;/code&gt; time</source>
          <target state="translated">&lt;code&gt;ecdsa&lt;/code&gt; 時間</target>
        </trans-unit>
        <trans-unit id="4b791a98c29aec71399bf390b8b57ec07f5c0265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fastecdsa&lt;/code&gt; time</source>
          <target state="translated">&lt;code&gt;fastecdsa&lt;/code&gt; 時間</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">について</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">謝辞</target>
        </trans-unit>
        <trans-unit id="c488cad885b7f6a854dca0dc9cc79d9a9dd54bff" translate="yes" xml:space="preserve">
          <source>Any hash function in the &lt;code&gt;hashlib&lt;/code&gt; module (&lt;code&gt;md5, sha1, sha224, sha256, sha384, sha512&lt;/code&gt;)
will work, as will any hash function that implements the same interface / core functionality as the
those in &lt;code&gt;hashlib&lt;/code&gt;. For instance, if you wish to use SHA3 as the hash function the
&lt;code&gt;pysha3&lt;/code&gt; package will work with this library as long as it is at version &amp;gt;=1.0b1 (as previous
versions didn&amp;rsquo;t work with the &lt;code&gt;hmac&lt;/code&gt; module which is used in nonce generation). Note
that &lt;code&gt;sha3_224, sha3_256, sha3_384, sha3_512&lt;/code&gt; are all in &lt;code&gt;hashlib&lt;/code&gt; as of python3.6.</source>
          <target state="translated">内の任意のハッシュ関数 &lt;code&gt;hashlib&lt;/code&gt; のモジュールは（ &lt;code&gt;md5, sha1, sha224, sha256, sha384, sha512&lt;/code&gt; ）任意のハッシュ関数のものと同じ器具インタフェース/コア機能することをするように、動作する &lt;code&gt;hashlib&lt;/code&gt; 。たとえば、ハッシュ関数としてSHA3を使用する場合、 &lt;code&gt;pysha3&lt;/code&gt; パッケージはバージョン&amp;gt; = 1.0b1である限り、このライブラリで機能し ます（以前のバージョンはナンス生成で使用される &lt;code&gt;hmac&lt;/code&gt; モジュールでは機能しなかったため））。ことを注意 &lt;code&gt;sha3_224, sha3_256, sha3_384, sha3_512&lt;/code&gt; 全てである &lt;code&gt;hashlib&lt;/code&gt; python3.6のよう。</target>
        </trans-unit>
        <trans-unit id="9791b58b72f0abe543c98926d7545ffb2a57a518" translate="yes" xml:space="preserve">
          <source>Arbitrary Curves</source>
          <target state="translated">任意の曲線</target>
        </trans-unit>
        <trans-unit id="f82a56254ae98c550b265077108cc027c348f8bf" translate="yes" xml:space="preserve">
          <source>Arbitrary Elliptic Curve Arithmetic</source>
          <target state="translated">任意の楕円曲線演算</target>
        </trans-unit>
        <trans-unit id="c3d65d3d3712e3c127a7b6ca4b4ea698bec097be" translate="yes" xml:space="preserve">
          <source>As of version 1.5.1 construction of arbitrary curves in Weierstrass form
(&lt;code&gt;y^2 = x^3 + ax + b (mod p)&lt;/code&gt;) is supported. I advise against using custom curves for any
security critical applications. It&amp;rsquo;s up to you to make sure that the parameters you pass here are
correct, no validation of the base point is done, and in general no sanity checks are done. Use
at your own risk.</source>
          <target state="translated">バージョン1.5.1以降、ワイエルシュトラス形式の任意の曲線の作成（ &lt;code&gt;y^2 = x^3 + ax + b (mod p)&lt;/code&gt; ）がサポートされています。セキュリティが重要なアプリケーションにはカスタムカーブを使用しないことをお勧めします。ここで渡すパラメーターが正しいこと、ベースポイントの検証が行われないこと、および一般にサニティチェックが行われないことを確認するのはあなた次第です。自己責任。</target>
        </trans-unit>
        <trans-unit id="22166bd15c9ddba16d29e0da734874e4a72378bc" translate="yes" xml:space="preserve">
          <source>BSI</source>
          <target state="translated">ビーエスアイ</target>
        </trans-unit>
        <trans-unit id="6f3b2ca2746598a5c0c336c60d7f1e5542f3b64a" translate="yes" xml:space="preserve">
          <source>Benchmarking</source>
          <target state="translated">ベンチマーキング</target>
        </trans-unit>
        <trans-unit id="47a22f238697e2421192f6fd97f8b4f809a2fed1" translate="yes" xml:space="preserve">
          <source>Certicom</source>
          <target state="translated">サーティコム</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">クラス</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">内容</target>
        </trans-unit>
        <trans-unit id="21e77e8c6244a97357d1f4d310170c134535ac4f" translate="yes" xml:space="preserve">
          <source>Current Issues</source>
          <target state="translated">現在の問題点</target>
        </trans-unit>
        <trans-unit id="12c5d44822ce8578763628268f606f8d0fb0f649" translate="yes" xml:space="preserve">
          <source>Currently it does elliptic curve arithmetic significantly faster than the &lt;code&gt;ecdsa&lt;/code&gt;
package. You can see the times for 1,000 signature and verification operations over
various curves below. These were run on an early 2014 MacBook Air with a 1.4 GHz Intel
Core i5.</source>
          <target state="translated">現在、楕円曲線演算は &lt;code&gt;ecdsa&lt;/code&gt; パッケージよりも大幅に高速です。以下のさまざまな曲線で、1,000回の署名および検証操作の時間を確認できます。これらは、1.4 GHz Intel Corei5を搭載した2014年初頭のMacBookAirで実行されました。</target>
        </trans-unit>
        <trans-unit id="916f09aff8581def400950df77b1473df959cb52" translate="yes" xml:space="preserve">
          <source>Curve</source>
          <target state="translated">曲線</target>
        </trans-unit>
        <trans-unit id="1f709e41fbe841f662313d40d0fed9d0261ba3ae" translate="yes" xml:space="preserve">
          <source>Curves over Prime Fields</source>
          <target state="translated">プライムフィールド上の曲線</target>
        </trans-unit>
        <trans-unit id="f02bd8f09b76d0b9f6acbdc03613caf6fc893a60" translate="yes" xml:space="preserve">
          <source>DER encoding of ECDSA signatures as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2459&quot;&gt;RFC2459&lt;/a&gt; is also supported. The
&lt;code&gt;fastecdsa.encoding.der&lt;/code&gt; provides the &lt;code&gt;DEREncoder&lt;/code&gt; class which encodes signatures:</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc2459&quot;&gt;RFC2459&lt;/a&gt;で定義されているECDSA署名のDERエンコーディングもサポートされています。 &lt;code&gt;fastecdsa.encoding.der&lt;/code&gt; が提供 &lt;code&gt;DEREncoder&lt;/code&gt; の署名をコードするクラス：</target>
        </trans-unit>
        <trans-unit id="5e872fac267b9b7da33ad6b7ac9040dea12546ef" translate="yes" xml:space="preserve">
          <source>Encoding Signatures</source>
          <target state="translated">符号化署名</target>
        </trans-unit>
        <trans-unit id="008ec2c197d2d0553db0073402a5f1fc80d5dffa" translate="yes" xml:space="preserve">
          <source>Fast elliptic curve digital signatures</source>
          <target state="translated">高速楕円曲線デジタルシグネチャ</target>
        </trans-unit>
        <trans-unit id="c6ce968783b8e6c124bf886fa2a77b21bf538586" translate="yes" xml:space="preserve">
          <source>Generating Keys</source>
          <target state="translated">キーの生成</target>
        </trans-unit>
        <trans-unit id="fb017d04335c5958f6953095940e64dfeaf241a6" translate="yes" xml:space="preserve">
          <source>Hash Functions</source>
          <target state="translated">ハッシュ関数</target>
        </trans-unit>
        <trans-unit id="23d81a63d6402319dd695c301e0dbbea9cb2696a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to benchmark performance on your machine you can do so using the command:</source>
          <target state="translated">マシンのパフォーマンスをベンチマークする場合は、次のコマンドを使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="ada959c6e080dacc28186bfbe8166136f6ce5b6f" translate="yes" xml:space="preserve">
          <source>Importing and Exporting Keys</source>
          <target state="translated">キーのインポートとエクスポート</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="322d2720fa9e376bee26165f4018f8ab1701594d" translate="yes" xml:space="preserve">
          <source>JJChiDguez</source>
          <target state="translated">JJChiDguez</target>
        </trans-unit>
        <trans-unit id="7cd5c5a2fed542419e00e6da7e8e69f40673755e" translate="yes" xml:space="preserve">
          <source>Keys stored in this format can also be imported. The import function will figure out if the key
is a public or private key and parse it accordingly:</source>
          <target state="translated">この形式で保存された鍵は、インポートすることもできます。インポート機能は、鍵が公開鍵なのか秘密鍵なのかを判断し、それに応じて解析します。</target>
        </trans-unit>
        <trans-unit id="2f2a6c39fc947b6d8b3b1b1f04e5ea279529e076" translate="yes" xml:space="preserve">
          <source>Minerva - see issue #40</source>
          <target state="translated">ミネルバ-第40号を参照</target>
        </trans-unit>
        <trans-unit id="ef74421f91874ba0262403abf7025f0015bc41d9" translate="yes" xml:space="preserve">
          <source>NIST / NSA</source>
          <target state="translated">NIST/NSA</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名前</target>
        </trans-unit>
        <trans-unit id="eba9fa003bcddbad1befe2585dbae1a251ced88c" translate="yes" xml:space="preserve">
          <source>NotStatilko</source>
          <target state="translated">ノンスタチルコ</target>
        </trans-unit>
        <trans-unit id="3b8792738ef3118cd8433aa360ce1c14ecb83cef" translate="yes" xml:space="preserve">
          <source>Operating Systems Supported</source>
          <target state="translated">サポートされているオペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="fcbe1dfb34bac7de50ec5ac825a0e1dcf4bffd31" translate="yes" xml:space="preserve">
          <source>Other encoding formats can also be specified, such as &lt;a href=&quot;http://www.secg.org/sec1-v2.pdf&quot;&gt;SEC1&lt;/a&gt; for public keys. This is done using
classes found in the &lt;code&gt;fastecdsa.encoding&lt;/code&gt; package, and passing them as keyword args to
the key functions:</source>
          <target state="translated">公開鍵用の&lt;a href=&quot;http://www.secg.org/sec1-v2.pdf&quot;&gt;SEC1&lt;/a&gt;など、他のエンコード形式も指定できます。これは、 &lt;code&gt;fastecdsa.encoding&lt;/code&gt; パッケージにあるクラスを使用して行われ、それらをキーワード引数として主要な関数に渡します。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="000b2cd3378d4ebdf9097d68413920239fef266c" translate="yes" xml:space="preserve">
          <source>P192</source>
          <target state="translated">P192</target>
        </trans-unit>
        <trans-unit id="2c9cb1cf67a9ca70851152c20c8d5f4e88e99333" translate="yes" xml:space="preserve">
          <source>P192 / secp192r1</source>
          <target state="translated">P192/secp192r1</target>
        </trans-unit>
        <trans-unit id="62036612004ab2531c22854abe6ea0821d8bb313" translate="yes" xml:space="preserve">
          <source>P224</source>
          <target state="translated">P224</target>
        </trans-unit>
        <trans-unit id="c07acb2b8ea2e0dcf1bda91dae5b6a97aac09583" translate="yes" xml:space="preserve">
          <source>P224 / secp224r1</source>
          <target state="translated">P224/secp224r1</target>
        </trans-unit>
        <trans-unit id="8d3399e56d712faf2aedfe0cbfa8745b17c89264" translate="yes" xml:space="preserve">
          <source>P256</source>
          <target state="translated">P256</target>
        </trans-unit>
        <trans-unit id="afe1e4fdf41ca16e56d89b5610cc5fb3c60a534a" translate="yes" xml:space="preserve">
          <source>P256 / secp256r1</source>
          <target state="translated">P256/secp256r1</target>
        </trans-unit>
        <trans-unit id="580d00a9ea1cc7e74e58f50142b9fa253162acfc" translate="yes" xml:space="preserve">
          <source>P384</source>
          <target state="translated">P384</target>
        </trans-unit>
        <trans-unit id="996b25af87a3f445ee2b9591a0c853db62f424fc" translate="yes" xml:space="preserve">
          <source>P384 / secp384r1</source>
          <target state="translated">P384/secp384r1</target>
        </trans-unit>
        <trans-unit id="a3966ff5e26423d950b645ddae6d3980024b80b8" translate="yes" xml:space="preserve">
          <source>P521</source>
          <target state="translated">P521</target>
        </trans-unit>
        <trans-unit id="d65b41ee7fc8a8468ee4960513e19452fd293c81" translate="yes" xml:space="preserve">
          <source>P521 / secp521r1</source>
          <target state="translated">P521/secp521r1</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">パフォーマンス</target>
        </trans-unit>
        <trans-unit id="6bfc9e54394ee5ad616e5594e6f89764460a2ab5" translate="yes" xml:space="preserve">
          <source>Proposed By</source>
          <target state="translated">提案者</target>
        </trans-unit>
        <trans-unit id="46b979d680604e279296cb0e44e0abb5d8dc4ce6" translate="yes" xml:space="preserve">
          <source>Python Versions Supported</source>
          <target state="translated">Python のサポートバージョン</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">セキュリティ</target>
        </trans-unit>
        <trans-unit id="a9d804662ae2fb4c77f29644a69abf4a2d58db97" translate="yes" xml:space="preserve">
          <source>Signing and Verifying</source>
          <target state="translated">署名と確認</target>
        </trans-unit>
        <trans-unit id="3009d02dd084f53e3f351d9d8eecc22e21edbe76" translate="yes" xml:space="preserve">
          <source>Some basic usage is shown below:</source>
          <target state="translated">基本的な使い方は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="ec00edb305f5467efc568d8d173f3496354073f1" translate="yes" xml:space="preserve">
          <source>Speedup</source>
          <target state="translated">スピードアップ</target>
        </trans-unit>
        <trans-unit id="be2390e4944b5098bb718fb20c29054a8d3db493" translate="yes" xml:space="preserve">
          <source>Supported Primitives</source>
          <target state="translated">サポートされているプリミティブ</target>
        </trans-unit>
        <trans-unit id="336f589105816b7021931e266354620f911b8e52" translate="yes" xml:space="preserve">
          <source>Thanks to those below for contributing improvements:</source>
          <target state="translated">以下、改善にご協力いただいた方々に感謝します。</target>
        </trans-unit>
        <trans-unit id="cb228bbb46e8ecc79d0a8fed6085a3e9babef772" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point&lt;/code&gt; class allows arbitrary arithmetic to be performed over curves. The two main
operations are point addition and point multiplication (by a scalar) which can be done via the
standard python operators (&lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; respectively):</source>
          <target state="translated">&lt;code&gt;Point&lt;/code&gt; クラスは、任意の算術曲線上で実行されることを可能にします。2つの主要な操作は、標準のpython演算子（それぞれ &lt;code&gt;+&lt;/code&gt; と &lt;code&gt;*&lt;/code&gt; ）を介して実行できるポイント加算とポイント乗算（スカラーによる）です。</target>
        </trans-unit>
        <trans-unit id="3ff950bd5575240b69d4a03e51bb3fc054cc959a" translate="yes" xml:space="preserve">
          <source>The initial release of this package was targeted at python2.7. Earlier versions may work but have
no guarantee of correctness or stability. As of release 1.2.1+ python3 is supported as well. Due to
python2&amp;rsquo;s EOL on January 1st 2020 release 2.x of this package only supports python3.5+.</source>
          <target state="translated">このパッケージの最初のリリースは、python2.7を対象としていました。以前のバージョンは機能する可能性がありますが、正確性や安定性の保証はありません。リリース1.2.1以降では、python3もサポートされています。2020年1月1日のpython2のEOLにより、このパッケージのリリース2.xはpython3.5 +のみをサポートします。</target>
        </trans-unit>
        <trans-unit id="049b1034d3bca1cba47bab39395e0ba171793998" translate="yes" xml:space="preserve">
          <source>There is no nonce reuse, no branching on secret material,
and all points are validated before any operations are performed on them. Timing side challenges
are mitigated via Montgomery point multiplication. Nonces are generated per &lt;a href=&quot;https://tools.ietf.org/html/rfc6979&quot;&gt;RFC6979&lt;/a&gt;. The default
curve used throughout the package is P256 which provides 128 bits of security. If you require a
higher level of security you can specify the curve parameter in a method to use a curve over a
bigger field e.g. P384. All that being said, crypto is tricky and I&amp;rsquo;m not beyond making mistakes.
Please use a more established and reviewed library for security critical applications. Open an
issue or email me if you see any security issue or risk with this library.</source>
          <target state="translated">ナンスの再利用や秘密の資料の分岐はなく、すべてのポイントは、操作が実行される前に検証されます。タイミングサイドの課題は、モンゴメリのポイント乗算によって軽減されます。ノンスはRFC6979に従って生成され&lt;a href=&quot;https://tools.ietf.org/html/rfc6979&quot;&gt;ます&lt;/a&gt;。パッケージ全体で使用されるデフォルトの曲線は、128ビットのセキュリティを提供するP256です。より高いレベルのセキュリティが必要な場合は、メソッドで曲線パラメータを指定して、P384などのより大きなフィールドで曲線を使用できます。そうは言っても、暗号はトリッキーであり、私は間違いを犯すことを超えていません。セキュリティが重要なアプリケーションには、より確立されレビューされたライブラリを使用してください。このライブラリにセキュリティ上の問題やリスクがある場合は、問題を開くか、メールでお知らせください。</target>
        </trans-unit>
        <trans-unit id="dbc09be8085261842a02908bee7c6a650b755782" translate="yes" xml:space="preserve">
          <source>This is a python package for doing fast elliptic curve cryptography, specifically
digital signatures.</source>
          <target state="translated">これは、高速な楕円曲線暗号、特にデジタル署名を行うための python パッケージです。</target>
        </trans-unit>
        <trans-unit id="2d9842f75a100b78b815bb6ffa2df1aa83c70d7d" translate="yes" xml:space="preserve">
          <source>This package is targeted at the Linux and MacOS operating systems. Due to the the dependency on
the GMP C library building this package on Windows is difficult and no official support or
distributions are provided for Windows OSes. See &lt;a href=&quot;https://github.com/AntonKueltz/fastecdsa/issues/11&quot;&gt;issue11&lt;/a&gt; for what users have done to get things
building.</source>
          <target state="translated">このパッケージは、LinuxおよびMacOSオペレーティングシステムを対象としています。GMP Cライブラリに依存しているため、Windowsでこのパッケージを構築することは困難であり、WindowsOSの公式サポートや配布は提供されていません。物事を構築するためにユーザーが行ったことについては、&lt;a href=&quot;https://github.com/AntonKueltz/fastecdsa/issues/11&quot;&gt;issue11&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9700d5bb5d5d8aaa6909c9ff32dbe03297350bd" translate="yes" xml:space="preserve">
          <source>This will use the &lt;code&gt;timeit&lt;/code&gt; module to benchmark 1000 signature and verification operations
for each curve supported by this package. Alternatively, if you have not cloned the repo but
have installed the package via e.g. &lt;code&gt;pip&lt;/code&gt; you can use the following command:</source>
          <target state="translated">これは、 &lt;code&gt;timeit&lt;/code&gt; モジュールを使用して、このパッケージでサポートされている各曲線の1000の署名および検証操作のベンチマークを行います。または、リポジトリのクローンを作成していないが、たとえば &lt;code&gt;pip&lt;/code&gt; を介してパッケージをインストールした場合は、次のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="c6ca6147b26658d153f7572290385e10ce471253" translate="yes" xml:space="preserve">
          <source>You can also export keys as files, ASN.1 encoded and formatted per &lt;a href=&quot;https://tools.ietf.org/html/rfc5480&quot;&gt;RFC5480&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5915&quot;&gt;RFC5915&lt;/a&gt;. Both
private keys and public keys can be exported as follows:</source>
          <target state="translated">キーをファイルとしてエクスポートすることもできます&lt;a href=&quot;https://tools.ietf.org/html/rfc5480&quot;&gt;。ASN.1はRFC5480&lt;/a&gt;および&lt;a href=&quot;https://tools.ietf.org/html/rfc5915&quot;&gt;RFC5915&lt;/a&gt;に従ってエンコードおよびフォーマットされています。秘密鍵と公開鍵の両方を次のようにエクスポートできます。</target>
        </trans-unit>
        <trans-unit id="d5462734c272764945efe830f924158354e42cb8" translate="yes" xml:space="preserve">
          <source>You can use pip: &lt;code&gt;$ pip install fastecdsa&lt;/code&gt; or clone the repo and use
&lt;code&gt;$ python setup.py install&lt;/code&gt;. Note that you need to have a C compiler.
You  also need to have &lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt; on your system as the underlying
C code in this package includes the &lt;code&gt;gmp.h&lt;/code&gt; header (and links against gmp
via the &lt;code&gt;-lgmp&lt;/code&gt; flag). You can install all dependencies as follows:</source>
          <target state="translated">pip： &lt;code&gt;$ pip install fastecdsa&lt;/code&gt; を使用するか、リポジトリのクローンを作成して &lt;code&gt;$ python setup.py install&lt;/code&gt; を使用できます 。Cコンパイラが必要であることに注意してください。このパッケージの基礎となるCコードには &lt;code&gt;gmp.h&lt;/code&gt; ヘッダー（および &lt;code&gt;-lgmp&lt;/code&gt; フラグを介したgmpへのリンク）が含まれているため、システムに&lt;a href=&quot;https://gmplib.org/&quot;&gt;GMP&lt;/a&gt;が必要です。次のようにすべての依存関係をインストールできます。</target>
        </trans-unit>
        <trans-unit id="b1ebbdb92ebb4bfc9920227625106f5e52386366" translate="yes" xml:space="preserve">
          <source>You can use this package to generate keys if you like. Recall that private keys on elliptic curves
are integers, and public keys are points i.e. integer pairs.</source>
          <target state="translated">お好みであれば、このパッケージを使って鍵を生成することができます。楕円曲線の秘密鍵は整数であり、公開鍵は点、つまり整数のペアであることを思い出してください。</target>
        </trans-unit>
        <trans-unit id="2f5d98a7a5323fbccd4cb7aa3417ebef6bd04a19" translate="yes" xml:space="preserve">
          <source>apt</source>
          <target state="translated">適当</target>
        </trans-unit>
        <trans-unit id="9b96c19c25079a6d37f38330b65a3faeb4b323a1" translate="yes" xml:space="preserve">
          <source>bbbrumley</source>
          <target state="translated">ブラムリー</target>
        </trans-unit>
        <trans-unit id="d9a4a0611e3e301b3838b8984a21e917d9c51819" translate="yes" xml:space="preserve">
          <source>boneyard93501</source>
          <target state="translated">盆地93501</target>
        </trans-unit>
        <trans-unit id="97aaa0aa9c67c91eb8764074c51053b85f5e583b" translate="yes" xml:space="preserve">
          <source>brainpoolP160r1</source>
          <target state="translated">ブレインプールP160r1</target>
        </trans-unit>
        <trans-unit id="8345af1837db664ef95121e9c6b3cfb90d163a36" translate="yes" xml:space="preserve">
          <source>brainpoolP192r1</source>
          <target state="translated">ブレインプールP192r1</target>
        </trans-unit>
        <trans-unit id="de8004669d048860aae2d119a8abbd392330e299" translate="yes" xml:space="preserve">
          <source>brainpoolP224r1</source>
          <target state="translated">ブレインプールP224r1</target>
        </trans-unit>
        <trans-unit id="07bf238cba9e0fbc46d3a9122147265fd115cb66" translate="yes" xml:space="preserve">
          <source>brainpoolP256r1</source>
          <target state="translated">ブレインプールP256r1</target>
        </trans-unit>
        <trans-unit id="55875450b1aeb59267756f98d8e96c99cdd4e061" translate="yes" xml:space="preserve">
          <source>brainpoolP320r1</source>
          <target state="translated">ブレインプールP320r1</target>
        </trans-unit>
        <trans-unit id="b5de63ac163e0e37287fd96aa424cc502a171699" translate="yes" xml:space="preserve">
          <source>brainpoolP384r1</source>
          <target state="translated">ブレインプールP384r1</target>
        </trans-unit>
        <trans-unit id="8f370f5701a64cedb9738f12460c12cff6e133ea" translate="yes" xml:space="preserve">
          <source>brainpoolP512r1</source>
          <target state="translated">ブレインプールP512r1</target>
        </trans-unit>
        <trans-unit id="9df715b447ac2b552ae61aca3f565a353214e7e4" translate="yes" xml:space="preserve">
          <source>clouds56</source>
          <target state="translated">五十六雲</target>
        </trans-unit>
        <trans-unit id="a65ce8cb358f4953b4869aa3313f31de03cefa51" translate="yes" xml:space="preserve">
          <source>luinxz</source>
          <target state="translated">ルインクス</target>
        </trans-unit>
        <trans-unit id="7216a71e23c06b514d28bc69f2c09a39d34ab6fc" translate="yes" xml:space="preserve">
          <source>m-kus</source>
          <target state="translated">エムカス</target>
        </trans-unit>
        <trans-unit id="d7c740d6ed936795844177164f5522daeedc6957" translate="yes" xml:space="preserve">
          <source>secp192k1</source>
          <target state="translated">エスシーピーいちゅうふくしゅうふくしゅうふくしゅうふくしゅうふくしゅうふくしゅうふくしゅうふくしゅう</target>
        </trans-unit>
        <trans-unit id="3b9657cbe26d17049ff1ba3d7adb9803a0b78ed0" translate="yes" xml:space="preserve">
          <source>secp224k1</source>
          <target state="translated">セックピー224K1</target>
        </trans-unit>
        <trans-unit id="1d7cf6efa0f7424f664d816f6db2507be8918318" translate="yes" xml:space="preserve">
          <source>secp256k1</source>
          <target state="translated">セックピー256K1</target>
        </trans-unit>
        <trans-unit id="5d0cf80bdc3e5097dda03b6aa8348823f0547766" translate="yes" xml:space="preserve">
          <source>secp256k1 (bitcoin curve)</source>
          <target state="translated">secp256k1 (ビットコインカーブ)</target>
        </trans-unit>
        <trans-unit id="a73e8f17643ebc1d60fb655876dd93e3c9077176" translate="yes" xml:space="preserve">
          <source>sirk390</source>
          <target state="translated">鎌三百九十</target>
        </trans-unit>
        <trans-unit id="f9d6cc68dd88a482db16693dbe751c67ac5c51e6" translate="yes" xml:space="preserve">
          <source>targon</source>
          <target state="translated">ターゴン</target>
        </trans-unit>
        <trans-unit id="3c14423e8df2e904b8d7543f12428253b7451183" translate="yes" xml:space="preserve">
          <source>yum</source>
          <target state="translated">旨い</target>
        </trans-unit>
        <trans-unit id="a95adb0d473aec283ffc5e16a1ae47560b8a671e" translate="yes" xml:space="preserve">
          <source>~26x</source>
          <target state="translated">〜26x</target>
        </trans-unit>
        <trans-unit id="0500696edac33e0367aa386b6c3f69df7e77d663" translate="yes" xml:space="preserve">
          <source>~28x</source>
          <target state="translated">〜28x</target>
        </trans-unit>
        <trans-unit id="4ea945357b5f50fb84fbe65c773070ad175b74ae" translate="yes" xml:space="preserve">
          <source>~29x</source>
          <target state="translated">〜29x</target>
        </trans-unit>
        <trans-unit id="e4352bfed1c6b9ef7b5ce299d3f181ee4b5632f3" translate="yes" xml:space="preserve">
          <source>~30x</source>
          <target state="translated">〜30x</target>
        </trans-unit>
        <trans-unit id="070877fa17b63cefbf6dc5c85d0c822533ebe3cf" translate="yes" xml:space="preserve">
          <source>~31x</source>
          <target state="translated">〜31x</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
