<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/leap-ec/">
    <body>
      <group id="leap-ec">
        <trans-unit id="706d7f0c88f049886aaea08eea120791107b9b85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Demo of LEAP running a 3-population island model on a real-valued optimization problem.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;実数値の最適化問題で3母集団の島モデルを実行するLEAPのデモ。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="340ce4eaf50bf4bac490c53f90eb1e83703380ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Written by Dr. Jeffrey K. Bassett, Dr. Mark Coletti, and Eric Scott&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ジェフリー・K・バセット博士、マーク・コレッティ博士、エリック・スコット著&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d08b6dd5695b0b13841bbc17dbd481889a849ec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LEAP: Evolutionary Algorithms in Python&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LEAP：Pythonの進化的アルゴリズム&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17170da13cbc0e38e44bcd4c9dd247541a1acc89" translate="yes" xml:space="preserve">
          <source>A general purpose Library for Evolutionary Algorithms in Python.</source>
          <target state="translated">Pythonの進化的アルゴリズムのための汎用ライブラリ。</target>
        </trans-unit>
        <trans-unit id="d7dcd5f7368a4bf45203caf6a939166023bcd44c" translate="yes" xml:space="preserve">
          <source>A number of LEAP demo applications are found in the the &lt;code&gt;example/&lt;/code&gt; directory of the github repository:</source>
          <target state="translated">githubリポジトリの &lt;code&gt;example/&lt;/code&gt; ディレクトリには、いくつかのLEAPデモアプリケーションがあります。</target>
        </trans-unit>
        <trans-unit id="7ada83324d7b5c812c05c726cc9fa2d6959af882" translate="yes" xml:space="preserve">
          <source>And use the Makefile to install the package:</source>
          <target state="translated">そしてMakefileを使ってパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">ドキュメント</target>
        </trans-unit>
        <trans-unit id="216faf26a2dea7c48ab99073bb84bb955f107198" translate="yes" xml:space="preserve">
          <source>Genetic Algorithm Example</source>
          <target state="translated">遺伝的アルゴリズムの例</target>
        </trans-unit>
        <trans-unit id="953a2ea8bb7865d1a53009ca9ab170e83a693f67" translate="yes" xml:space="preserve">
          <source>Get the stable version of LEAP from the Python package index with</source>
          <target state="translated">安定版の LEAP を Python のパッケージインデックスから取得するには</target>
        </trans-unit>
        <trans-unit id="98b1e4884835470f97e3c5181d8ec9c12a874ed2" translate="yes" xml:space="preserve">
          <source>Here's an example that applies a genetic algorithm variant to solve the
&lt;code&gt;MaxOnes&lt;/code&gt; optimization problem.  It uses bitflip mutation, uniform crossover,
and binary tournament selection:</source>
          <target state="translated">これは、 &lt;code&gt;MaxOnes&lt;/code&gt; 最適化問題を解決するために遺伝的アルゴリズムのバリアントを適用する例です 。これは、ビットフリップミューテーション、均一クロスオーバー、およびバイナリトーナメント選択を使用します。</target>
        </trans-unit>
        <trans-unit id="2a2b6e5167889265a825bda1e18ece25ec840633" translate="yes" xml:space="preserve">
          <source>If you want to build a fresh set of docs for yourself, you can do so after running &lt;code&gt;make setup&lt;/code&gt;:</source>
          <target state="translated">自分用に新しいドキュメントのセットを作成したい場合は、makesetupを実行した後に &lt;code&gt;make setup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb0beea38cec465a867d15d24bcb2e4ceeb338ae" translate="yes" xml:space="preserve">
          <source>Installing from Source</source>
          <target state="translated">ソースからのインストール</target>
        </trans-unit>
        <trans-unit id="9661db24591b38fb5d0c28cf5972b1dfbfb766d3" translate="yes" xml:space="preserve">
          <source>LEAP is a general purpose Evolutionary Computation package that combines
readable and easy-to-use syntax for search and optimization algorithms with
powerful distribution and visualization features.</source>
          <target state="translated">LEAPは、検索および最適化アルゴリズムのための読みやすく使いやすい構文と、強力な配布および可視化機能を兼ね備えた汎用の進化型計算パッケージです。</target>
        </trans-unit>
        <trans-unit id="c15276842739609722acd88f76549fbfb8a03276" translate="yes" xml:space="preserve">
          <source>LEAP ships with a two-part &lt;code&gt;pytest&lt;/code&gt; harness, divided into fast and slow tests.  You can run them with</source>
          <target state="translated">LEAPには、高速テストと低速テストに分けられた2つの部分からなる &lt;code&gt;pytest&lt;/code&gt; ハーネスが付属しています。あなたはそれらを実行することができます</target>
        </trans-unit>
        <trans-unit id="82883064b15aeabe76eddd6b678cf00bf687b3a7" translate="yes" xml:space="preserve">
          <source>LEAP's signature is its operator pipeline, which uses a simple list of
functional operators to concisely express a metaheuristic algorithm's
configuration as high-level code.  Adding metrics, visualization, or
special features (like distribution, coevolution, or island migrations)
is often as simple as adding operators into the pipeline.</source>
          <target state="translated">LEAP の特徴は、演算子パイプラインであり、機能演算子のシンプルなリストを使用して、メタヒューリスティック・アルゴリズムの構成を高レベルのコードとして簡潔に表現しています。メトリクス、可視化、または特別な機能(分布、共進化、または島の移行など)を追加することは、多くの場合、パイプラインに演算子を追加するのと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="65607507695dbb68853f7200e33956e39fd6a15d" translate="yes" xml:space="preserve">
          <source>More Examples</source>
          <target state="translated">その他の例</target>
        </trans-unit>
        <trans-unit id="3f938428fb46002c0de7747d302e8c275a2281b7" translate="yes" xml:space="preserve">
          <source>Run the Test Suite</source>
          <target state="translated">テストスイートの実行</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">簡単な例</target>
        </trans-unit>
        <trans-unit id="40a09be7ecd2e6602e93c9a8bf0953e3f5e81d04" translate="yes" xml:space="preserve">
          <source>The easiest way to use an evolutionary algorithm in LEAP is to use the
&lt;code&gt;leap_ec.simple&lt;/code&gt; package, which contains simple interfaces for pre-built
algorithms:</source>
          <target state="translated">LEAPで進化的アルゴリズムを使用する最も簡単な方法は、事前に構築されたアルゴリズム用の単純なインターフェイスを含む &lt;code&gt;leap_ec.simple&lt;/code&gt; パッケージを使用すること です。</target>
        </trans-unit>
        <trans-unit id="287dc68b36959dcb3f4618f0302630b1dfde6cf9" translate="yes" xml:space="preserve">
          <source>The next-easiest way to use LEAP is to configure a custom algorithm via one
of the metaheuristic functions in the &lt;code&gt;leap_ec.algorithms&lt;/code&gt; package.  These
interfaces off you a flexible way to customize the various operators,
representations, and other components that go into a modern evolutionary
algorithm.</source>
          <target state="translated">LEAPを使用する次の最も簡単な方法は、 &lt;code&gt;leap_ec.algorithms&lt;/code&gt; パッケージのメタヒューリスティック関数の1つを介してカスタムアルゴリズムを構成することです。これらのインターフェースは、最新の進化的アルゴリズムに組み込まれるさまざまな演算子、表現、およびその他のコンポーネントをカスタマイズするための柔軟な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="70ce07171f370929bccd088d85eb3490fdca9852" translate="yes" xml:space="preserve">
          <source>The stable version of LEAP's full documentation is over at &lt;a href=&quot;https://leap_gmu.readthedocs.io/&quot;&gt;ReadTheDocs&lt;/a&gt;.</source>
          <target state="translated">LEAPの完全なドキュメントの安定版は&lt;a href=&quot;https://leap_gmu.readthedocs.io/&quot;&gt;ReadTheDocsにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="24ac1b730208261b4c6dce716659e3e5177e717a" translate="yes" xml:space="preserve">
          <source>This will create HTML documentation in the &lt;code&gt;docs/build/html/&lt;/code&gt; directory.  It might take a while the first time,
since building the docs involves generating some plots and executing some example algorithms.</source>
          <target state="translated">これにより、 &lt;code&gt;docs/build/html/&lt;/code&gt; ディレクトリにHTMLドキュメントが作成されます。ドキュメントの作成にはいくつかのプロットの生成といくつかのサンプルアルゴリズムの実行が含まれるため、最初は時間がかかる場合があります。</target>
        </trans-unit>
        <trans-unit id="33be4b2f70a399edccc01dbcc1160e6b8bb286d4" translate="yes" xml:space="preserve">
          <source>To install a source distribution of LEAP, clone the repo:</source>
          <target state="translated">LEAPのソースディストリビューションをインストールするには、repoをクローンしてください。</target>
        </trans-unit>
        <trans-unit id="67d4265ac65da2927de38887eec57f3fc38f7165" translate="yes" xml:space="preserve">
          <source>Using LEAP</source>
          <target state="translated">LEAPを使用して</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="7e13a6af9adbba378f33d62a1b34d72ee88fd0a7" translate="yes" xml:space="preserve">
          <source>respectively.</source>
          <target state="translated">をそれぞれ使用しています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
