<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/drb-client/">
    <body>
      <group id="drb-client">
        <trans-unit id="16be2db0181d374d7688acbe57bee91eefdbefeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt; project</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt;プロジェクト</target>
        </trans-unit>
        <trans-unit id="706722bdc65d138213c144a5154870f167628060" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;League of Entropy&lt;/a&gt; project</source>
          <target state="translated">&lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;エントロピーリーグ&lt;/a&gt;プロジェクト</target>
        </trans-unit>
        <trans-unit id="d1e95f34e183af96806eee335a7d475b6fcb8f35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devrandom&lt;/code&gt; - (default) writes collected entropy into &lt;code&gt;/dev/random&lt;/code&gt; device, without increment of kernel counter of available entropy in pool.</source>
          <target state="translated">&lt;code&gt;devrandom&lt;/code&gt; -（デフォルト）プールで使用可能なエントロピーのカーネルカウンターをインクリメントせずに、収集したエントロピーを &lt;code&gt;/dev/random&lt;/code&gt; デバイスに書き込みます。</target>
        </trans-unit>
        <trans-unit id="35807d461d389bdeeda1b6e89ddc4f49c61e50fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drb-client&lt;/code&gt; can be used as a standalone source of high-quality random number, or as additional source for entropy pool in Linux kernel. Produced amount of entropy should be sufficient to derail attacks based on RNG predictability.</source>
          <target state="translated">&lt;code&gt;drb-client&lt;/code&gt; は、高品質の乱数のスタンドアロンソースとして、またはLinuxカーネルのエントロピープールの追加ソースとして使用できます。生成されたエントロピーの量は、RNGの予測可能性に基づいて攻撃を脱線させるのに十分なはずです。</target>
        </trans-unit>
        <trans-unit id="d6edc5f9a8464caf9e6ccbdd9133b471e07bf046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drb-client&lt;/code&gt; constructs each output of entropy from at least &lt;code&gt;quorum&lt;/code&gt; (&lt;code&gt;-Q&lt;/code&gt; option) distinct inputs. It is assumed at least &lt;code&gt;node_count - quorum + 1&lt;/code&gt; nodes produce truly unpredictable secure random numbers, so any &lt;code&gt;quorum&lt;/code&gt; of distinct responses definitely contain at least one truly random input (due to &lt;a href=&quot;https://en.wikipedia.org/wiki/Pigeonhole_principle&quot;&gt;pigeonhole principle&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;drb-client&lt;/code&gt; は、少なくとも &lt;code&gt;quorum&lt;/code&gt; （ &lt;code&gt;-Q&lt;/code&gt; オプション）の個別の入力からエントロピーの各出力を構築します。少なくとも &lt;code&gt;node_count - quorum + 1&lt;/code&gt; ノードが真に予測不可能な安全な乱数を生成すると想定されるため、個別の応答の &lt;code&gt;quorum&lt;/code&gt; には、少なくとも1つの真にランダムな入力が確実に含まれます（&lt;a href=&quot;https://en.wikipedia.org/wiki/Pigeonhole_principle&quot;&gt;鳩の巣原理によ​​る&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="612a6789d9ad9466ab111943560aa664cd760840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drb-client&lt;/code&gt; polls list of &lt;code&gt;drand&lt;/code&gt; servers with given interval and requests private entropy data portion from each one. Communication between &lt;code&gt;drb-client&lt;/code&gt; and &lt;code&gt;drand&lt;/code&gt; is protected with AES256-GCM encryption derived on BN-256 curve on top of TLS (this is imposed by &lt;code&gt;drand&lt;/code&gt; API format).</source>
          <target state="translated">&lt;code&gt;drb-client&lt;/code&gt; は、指定された間隔で &lt;code&gt;drand&lt;/code&gt; サーバーのリストをポーリングし、各サーバーにプライベートエントロピーデータ部分を要求します。 &lt;code&gt;drb-client&lt;/code&gt; と &lt;code&gt;drand&lt;/code&gt; の間の通信は、TLSに加えてBN-256カーブで派生したAES256-GCM暗号化で保護されます（これは &lt;code&gt;drand&lt;/code&gt; API形式によって課されます）。</target>
        </trans-unit>
        <trans-unit id="8b8f98f7e465fe1afd037734d11a467c0f3148c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rndaddentropy&lt;/code&gt; - writes collected entropy into &lt;code&gt;/dev/random&lt;/code&gt; device with increment of kernel counter of available entropy in pool. Requires superuser privileges to operate.</source>
          <target state="translated">&lt;code&gt;rndaddentropy&lt;/code&gt; -収集されたエントロピーを &lt;code&gt;/dev/random&lt;/code&gt; デバイスに書き込み、プールで使用可能なエントロピーのカーネルカウンターをインクリメントします。操作するにはスーパーユーザー権限が必要です。</target>
        </trans-unit>
        <trans-unit id="2a245b8128e5153894dcf93e72b3a36700f7d0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdout&lt;/code&gt; - writes collected entropy into standard output.</source>
          <target state="translated">&lt;code&gt;stdout&lt;/code&gt; -収集されたエントロピーを標準出力に書き込みます。</target>
        </trans-unit>
        <trans-unit id="66c98284a75eb1efe4c63540023400f8d00cfa97" translate="yes" xml:space="preserve">
          <source>Contribute into &lt;code&gt;/dev/random&lt;/code&gt; and increment entropy counter:</source>
          <target state="translated">&lt;code&gt;/dev/random&lt;/code&gt; に貢献し、エントロピーカウンターをインクリメントします。</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">クレジット</target>
        </trans-unit>
        <trans-unit id="2915d592de5d14cc30bb5502791f53baae7449e8" translate="yes" xml:space="preserve">
          <source>Cryptography background</source>
          <target state="translated">暗号の背景</target>
        </trans-unit>
        <trans-unit id="03697c01c384673422d77e83692b6546b235f430" translate="yes" xml:space="preserve">
          <source>Default poll interval is 60 seconds and such interval is chosen for a reason. &lt;code&gt;drand&lt;/code&gt; generates entropy for each response using its &lt;code&gt;/dev/urandom&lt;/code&gt;. On Linux &lt;code&gt;urandom&lt;/code&gt; gets reinitialized from &lt;code&gt;/dev/random&lt;/code&gt; each 1 minute. So there is no reason to fetch random data more often: responses between reinitializations are in functional dependence.</source>
          <target state="translated">デフォルトのポーリング間隔は60秒であり、そのような間隔が理由で選択されています。 &lt;code&gt;drand&lt;/code&gt; は、 &lt;code&gt;/dev/urandom&lt;/code&gt; を使用して各応答のエントロピーを生成します。Linuxでは、 &lt;code&gt;urandom&lt;/code&gt; は1分ごとに &lt;code&gt;/dev/random&lt;/code&gt; から再初期化されます。したがって、ランダムデータをより頻繁にフェッチする理由はありません。再初期化間の応答は機能に依存しています。</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">展開</target>
        </trans-unit>
        <trans-unit id="a86c8f2a7b6efe6b811bdd1bd57f18a81f625847" translate="yes" xml:space="preserve">
          <source>Distributed Randomness Beacon client</source>
          <target state="translated">分散ランダム性ビーコンクライアント</target>
        </trans-unit>
        <trans-unit id="f63f53163f65e1da190f3ea968a5e74e4fe1762f" translate="yes" xml:space="preserve">
          <source>Download or clone repository and run following command in source code directory:</source>
          <target state="translated">リポジトリをダウンロードまたはクローンし、ソースコードディレクトリで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="6dfedb9bd89a9120196f7dbb3d1a16ca4f91382c" translate="yes" xml:space="preserve">
          <source>Entropy portions from beacon servers are mixed using stateful HKDF-based mixer. Each sufficient set of random responses is used to produce random output and new salt value for HKDF mixer. Therefore, mixer output becomes unpredictable after successful generation of first output, even if all beacon servers get compromised and start feeding client with biased data.</source>
          <target state="translated">ビーコンサーバーからのエントロピー部分は、ステートフルHKDFベースのミキサーを使用して混合されます。ランダムな応答の各十分なセットは、HKDFミキサーのためのランダムな出力と新しいソルト値を生成するために使用されます。したがって、すべてのビーコンサーバが危険にさらされ、偏ったデータをクライアントに供給し始めたとしても、最初の出力の生成に成功すると、ミキサの出力は予測不可能になります。</target>
        </trans-unit>
        <trans-unit id="7ea67bd13a5b4336449ca6a2562a692dc86a115c" translate="yes" xml:space="preserve">
          <source>For logging into file see &quot;Synopsis&quot; section.</source>
          <target state="translated">ファイルへのログインについては、「概要」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="0497f9c6f240debffc9e9a2160d24cab3f0d8f5e" translate="yes" xml:space="preserve">
          <source>From PyPI</source>
          <target state="translated">PyPIより</target>
        </trans-unit>
        <trans-unit id="d600deecd9fabec09865ba5fbee27a4731d8713b" translate="yes" xml:space="preserve">
          <source>From source</source>
          <target state="translated">ソースから</target>
        </trans-unit>
        <trans-unit id="037ead3306b448ee9e9214cd69cf382a259f3389" translate="yes" xml:space="preserve">
          <source>Gathers entropy from multiple &lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt; instances, securely mixes responses and outputs to kernel entropy pool or stdout. Suitable for use with &lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;League of Entropy&lt;/a&gt; servers (see &quot;Running&quot; section).</source>
          <target state="translated">複数の&lt;a href=&quot;https://github.com/dedis/drand&quot;&gt;drand&lt;/a&gt;インスタンスからエントロピーを収集し、応答と出力をカーネルエントロピープールまたはstdoutに安全に混合します。&lt;a href=&quot;https://www.cloudflare.com/leagueofentropy/&quot;&gt;League of Entropy&lt;/a&gt;サーバーでの使用に適しています（「実行中」セクションを参照）。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="1d1c27a9f28ca3885f8bf099d2c5ee36e7046cbb" translate="yes" xml:space="preserve">
          <source>Jack Lloyd for &lt;a href=&quot;https://github.com/randombit/pairings.py&quot;&gt;BN256 implementation for Python&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/randombit/pairings.py&quot;&gt;Python&lt;/a&gt;用のBN256実装のJackLloyd</target>
        </trans-unit>
        <trans-unit id="8af07d96c15ebc52a8026ef804eb20c221df9b7e" translate="yes" xml:space="preserve">
          <source>Requires Python 3.5.3+</source>
          <target state="translated">Python 3.5.3+要件</target>
        </trans-unit>
        <trans-unit id="012afe619ad7a9bdc7c6e9b4ff577292ef574b2c" translate="yes" xml:space="preserve">
          <source>Run with default sink:</source>
          <target state="translated">デフォルトのシンクで実行します。</target>
        </trans-unit>
        <trans-unit id="73989d9c59264da08a15dba21c7d58237a91f08f" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="translated">ランニング</target>
        </trans-unit>
        <trans-unit id="08fdcff8058ae31a1a5f1a8c2b510d8c82a5e877" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/Snawoot/drb-client/blob/master/deploy/drb-client.service&quot;&gt;deploy/drb-client.service&lt;/a&gt; for example of systemd unit file.</source>
          <target state="translated">systemdユニットファイルの例については、&lt;a href=&quot;https://github.com/Snawoot/drb-client/blob/master/deploy/drb-client.service&quot;&gt;deploy /drb-client.serviceを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">あらすじ</target>
        </trans-unit>
        <trans-unit id="29c73887b0dd81e92d679a830369fa1d69a8f1e3" translate="yes" xml:space="preserve">
          <source>There are few available entropy sinks (option &lt;code&gt;-O&lt;/code&gt;):</source>
          <target state="translated">利用可能なエントロピーシンクはほとんどありません（オプション &lt;code&gt;-O&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="a6c57aac7e138943cab0d208aab337d7f0dce79f" translate="yes" xml:space="preserve">
          <source>You may obtain latest &lt;code&gt;group.toml&lt;/code&gt; config with list of League of Entropy servers &lt;a href=&quot;https://github.com/dedis/drand/tree/master/deploy&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dedis/drand/tree/master/deploy&quot;&gt;ここ&lt;/a&gt;で、League &lt;code&gt;group.toml&lt;/code&gt; サーバーのリストを含む最新のgroup.toml構成を取得できます。</target>
        </trans-unit>
        <trans-unit id="ca898c3556f54c12964ee90a088d3f504d5e267f" translate="yes" xml:space="preserve">
          <source>drb-client</source>
          <target state="translated">DRBクライアント</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
