<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/gitlab-registry-usage-rest/">
    <body>
      <group id="gitlab-registry-usage-rest">
        <trans-unit id="9c0db57d0d956bdcc02b1fe7ef658e3fa36508aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/auth_token&lt;/code&gt;: Accepts a request with basic auth (and valid LDAP credentials) and returns an auth token for further
api usage. All other endpoints only accept requests with a valid &lt;code&gt;Bearer&lt;/code&gt; authorization header:</source>
          <target state="translated">&lt;code&gt;/auth_token&lt;/code&gt; ：基本認証（および有効なLDAP認証情報）を使用してリクエストを受け入れ、APIをさらに使用するための認証トークンを返します。他のすべてのエンドポイントは、有効な &lt;code&gt;Bearer&lt;/code&gt; 認証ヘッダーを持つリクエストのみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="f84630428651e3a993a75bff6674586b69aec97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/repositories/&amp;lt;repository_name&amp;gt;/tags/&amp;lt;tag_name&amp;gt;&lt;/code&gt;: Lists attributes of a tagged image stored in a repository:</source>
          <target state="translated">&lt;code&gt;/repositories/&amp;lt;repository_name&amp;gt;/tags/&amp;lt;tag_name&amp;gt;&lt;/code&gt; ：リポジトリに保存されているタグ付き画像の属性を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="a07d6bfb8f39aa72829dce2897ef859f28f7eb8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/repositories/&amp;lt;repository_name&amp;gt;/tags&lt;/code&gt;: Endpoint for the collection of repository tags, currently without any content.</source>
          <target state="translated">&lt;code&gt;/repositories/&amp;lt;repository_name&amp;gt;/tags&lt;/code&gt; ：現在コンテンツがないリポジトリタグのコレクションのエンドポイント。</target>
        </trans-unit>
        <trans-unit id="bb09cd105b4e442a6a2be3c387dcadec6db7957c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/repositories/&amp;lt;repository_name&amp;gt;&lt;/code&gt;: Queries attributes of a specific repository:</source>
          <target state="translated">&lt;code&gt;/repositories/&amp;lt;repository_name&amp;gt;&lt;/code&gt; ：特定のリポジトリの属性を照会します。</target>
        </trans-unit>
        <trans-unit id="67ab8ed484c159129bf42107191105286d599c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/repositories&lt;/code&gt;: Lists attributes of the &lt;em&gt;repositories&lt;/em&gt; collection. Currently, only the timestamp of the last data
refresh is contained:</source>
          <target state="translated">&lt;code&gt;/repositories&lt;/code&gt; ：&lt;em&gt;リポジトリ&lt;/em&gt;コレクションの属性を一覧表示します。現在、最後のデータ更新のタイムスタンプのみが含まれています。</target>
        </trans-unit>
        <trans-unit id="14426e199bff668bab87b13094b11566129058a5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GitLab-Registry-Usage-REST&lt;/em&gt; is a package that periodically collects repository information (names, tags, sizes) of a
GitLab registry server and offers the data via a secured &lt;a href=&quot;http://stateless.co/hal_specification.html&quot;&gt;RESTful HAL&lt;/a&gt; api.
For the initial authentication a LDAP server is needed. Subsequent queries are secured by &lt;em&gt;JSON Web Tokens&lt;/em&gt; (JWT).</source>
          <target state="translated">&lt;em&gt;GitLab-Registry-Usage-REST&lt;/em&gt;は、GitLabレジストリサーバーのリポジトリ情報（名前、タグ、サイズ）を定期的に収集し、セキュリティで保護された&lt;a href=&quot;http://stateless.co/hal_specification.html&quot;&gt;RESTful&lt;/a&gt; HALAPIを介してデータを提供するパッケージです。初期認証には、LDAPサーバーが必要です。後続のクエリは、&lt;em&gt;JSON Web Token&lt;/em&gt;（JWT）によって保護され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="adc9b09adc8e5b512b3b867d1f4e22814a56efa9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Gitlab-Registry-Usage-REST&lt;/em&gt; needs a configuration file in order to run. The default path is
&lt;code&gt;/etc/gitlab_registry_usage_rest.conf&lt;/code&gt; but can be altered with the &lt;code&gt;-c&lt;/code&gt; command line switch. To get started, you can run</source>
          <target state="translated">&lt;em&gt;Gitlab-Registry-Usage-REST&lt;/em&gt;を実行するには、構成ファイルが必要です。デフォルトのパスは &lt;code&gt;/etc/gitlab_registry_usage_rest.conf&lt;/code&gt; ですが、 &lt;code&gt;-c&lt;/code&gt; コマンドラインスイッチで変更できます。開始するには、実行できます</target>
        </trans-unit>
        <trans-unit id="2099682d1e184a685bf975db793960d401826322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Docker expects an absolute path for the local configuration file.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：Dockerは、ローカル構成ファイルの絶対パスを想定しています。</target>
        </trans-unit>
        <trans-unit id="5ed9eb2ed2ebcd9b8e7b285af12682f4b3198a6e" translate="yes" xml:space="preserve">
          <source>A restful web service for querying the repository sizes of a GitLab registry.</source>
          <target state="translated">GitLab レジストリのリポジトリサイズを問い合わせるためのレストフルなウェブサービスです。</target>
        </trans-unit>
        <trans-unit id="0a45d6431d7979337a760f88643febb729ca4c03" translate="yes" xml:space="preserve">
          <source>Additionally, all api endpoints (except &lt;code&gt;/auth_token&lt;/code&gt;) offer an &lt;code&gt;_embedded&lt;/code&gt; and a &lt;code&gt;_links&lt;/code&gt; attribute if requested with
the query string:</source>
          <target state="translated">さらに、（除くすべてのAPIエンドポイント &lt;code&gt;/auth_token&lt;/code&gt; が）を提供 &lt;code&gt;_embedded&lt;/code&gt; と &lt;code&gt;_links&lt;/code&gt; のクエリ文字列で要求された場合の属性を：</target>
        </trans-unit>
        <trans-unit id="f66ae0e5f7322d12846026d41ff12577c2dd15f7" translate="yes" xml:space="preserve">
          <source>GitLab-Registry-Usage-REST</source>
          <target state="translated">GitLab-Registry-Usage-REST</target>
        </trans-unit>
        <trans-unit id="6771d38f699b09eb64789c1469a6c36f9f805e30" translate="yes" xml:space="preserve">
          <source>If you would like to use the docker repository, you can bind mount a local configuration file with the &lt;code&gt;-v&lt;/code&gt; switch:</source>
          <target state="translated">Dockerリポジトリを使用する場合は、 &lt;code&gt;-v&lt;/code&gt; スイッチを使用してローカル構成ファイルをバインドマウントできます。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="41035b8e2632595f949e197a34390b37c55c82d2" translate="yes" xml:space="preserve">
          <source>Instead of a boolean value, the embed key can also take an integer number to only request a specific level of embedded
resources.</source>
          <target state="translated">真偽値の代わりに、埋め込みキーは、特定のレベルの埋め込みリソースのみを要求するための整数値を取ることもできます。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">序章</target>
        </trans-unit>
        <trans-unit id="fe00fd376110c63afb9aeb7d980eba78e7f18e9a" translate="yes" xml:space="preserve">
          <source>Links can be used to easily navigate between related resources. Embedded resources are convenient to query a complete
hierarchy of resources with one GET request. Accordingly, the request</source>
          <target state="translated">リンクは、関連するリソース間を簡単にナビゲートするために使用することができます。埋め込まれたリソースは、1回のGETリクエストでリソースの完全な階層を問い合わせるのに便利です。したがって、リクエスト</target>
        </trans-unit>
        <trans-unit id="5ca8f7a7d3fa6cae51685ac17ab66f887b887dd7" translate="yes" xml:space="preserve">
          <source>The latest version can be obtained from PyPI:</source>
          <target state="translated">最新版はPyPIから入手できます。</target>
        </trans-unit>
        <trans-unit id="d46367a2d94b9adf64babffe324d49e6cab050d3" translate="yes" xml:space="preserve">
          <source>The server offers these api endpoints:</source>
          <target state="translated">サーバは以下のAPIエンドポイントを提供しています。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="7d90f9b9a0f1c10c3bbca6b3cc885c3e188ecf93" translate="yes" xml:space="preserve">
          <source>and edit this default configuration to fit your environment.</source>
          <target state="translated">をクリックして、このデフォルト設定を環境に合わせて編集します。</target>
        </trans-unit>
        <trans-unit id="8237c923f610d40198be9873d3434403cf2a4d03" translate="yes" xml:space="preserve">
          <source>or from DockerHub:</source>
          <target state="translated">またはDockerHubから。</target>
        </trans-unit>
        <trans-unit id="8722ff23e0b82cf56fb2253b1f3736f5ed035f9d" translate="yes" xml:space="preserve">
          <source>or from the AUR for Arch Linux based systems:</source>
          <target state="translated">または Arch Linux ベースのシステムの AUR から。</target>
        </trans-unit>
        <trans-unit id="fb809b777f30537de6e41bb9c98dce03706ff1d4" translate="yes" xml:space="preserve">
          <source>returns all resources at once.</source>
          <target state="translated">は、すべてのリソースを一度に返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
