<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/cognite-dash-components/">
    <body>
      <group id="cognite-dash-components">
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">基本的な使い方</target>
        </trans-unit>
        <trans-unit id="040cdc83e990937e431e79daacc2d01a83ffaa35" translate="yes" xml:space="preserve">
          <source>Below is an example on how to use the components.
Note: Authentication relies on SSL. To achieve this locally create a dummy certificate/key pair by running:</source>
          <target state="translated">以下にコンポーネントの使用方法の例を示します。注意:認証は SSL に依存しています。これをローカルで実現するには、以下のように実行してダミーの証明書とキーのペアを作成します。</target>
        </trans-unit>
        <trans-unit id="14026145b75dc2926333fda29812ccda53324149" translate="yes" xml:space="preserve">
          <source>Cognite Client Provider</source>
          <target state="translated">コグナイトクライアントプロバイダ</target>
        </trans-unit>
        <trans-unit id="29ba1230b44d3c57e23f4fd8fa09a21e652fa90e" translate="yes" xml:space="preserve">
          <source>Cognite Dash Components</source>
          <target state="translated">コグナイトダッシュのコンポーネント</target>
        </trans-unit>
        <trans-unit id="5829c764293688cfc00966057b679bcc5bb84550" translate="yes" xml:space="preserve">
          <source>Cognite Tenant Selector</source>
          <target state="translated">コグナイトテナントセレクター</target>
        </trans-unit>
        <trans-unit id="221690b390896cffde3d33524704265a6957565d" translate="yes" xml:space="preserve">
          <source>CogniteClientProvider</source>
          <target state="translated">コグナイトクライアントプロバイダ</target>
        </trans-unit>
        <trans-unit id="b6273c90c627e0e89aaf9a2e8e3fca3dd30ec23c" translate="yes" xml:space="preserve">
          <source>CogniteTenantSelector</source>
          <target state="translated">コグニテナントセレクタ</target>
        </trans-unit>
        <trans-unit id="76cb58b55472a8e8e436f7e788d02b84dac3779d" translate="yes" xml:space="preserve">
          <source>Cogntie Dash Components contains Python components that help Plotly Dash users to work with CDF. The current supported components are:</source>
          <target state="translated">Cogntie Dash Componentsには、Plotly DashユーザーがCDFを使って作業するのに役立つPythonコンポーネントが含まれています。現在サポートされているコンポーネントは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b3c826d358a7abdabdad30edd66a442123935d36" translate="yes" xml:space="preserve">
          <source>If a user goes directly to a url containing a valid project the authentication flow will be triggered. If they still have a valid token then this will be used to authenticate them with CDF and provide the component with the users details.</source>
          <target state="translated">ユーザが有効なプロジェクトを含むURLに直接アクセスした場合、認証フローが起動されます。ユーザーが有効なトークンを持っている場合、これはCDFでユーザーを認証し、ユーザーの詳細をコンポーネントに提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9e5cfbf5f20e25959f4b92e5bb41164f99872fde" translate="yes" xml:space="preserve">
          <source>Import the package to your Plotly Dash Application</source>
          <target state="translated">パッケージをPlotly Dashアプリケーションにインポートする</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="c980ef61ccbd5c027218404b9b7434a117106f68" translate="yes" xml:space="preserve">
          <source>Note each &lt;code&gt;tenant&lt;/code&gt; should have the correct &lt;code&gt;baseUrl&lt;/code&gt; supplied.</source>
          <target state="translated">各 &lt;code&gt;tenant&lt;/code&gt; は正しい &lt;code&gt;baseUrl&lt;/code&gt; が提供されている必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="41c2b51c191b8021fccd9325f3655e48ddf86e6b" translate="yes" xml:space="preserve">
          <source>Plotly Components for Cognite</source>
          <target state="translated">コグナイトのためのプロットリーコンポーネント</target>
        </trans-unit>
        <trans-unit id="4e58b8326d2763d7215c939f1477d02630051b0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CogniteTenantSelector&lt;/code&gt; is used to let the user enter the project they want to authenticate against. This is useful if you are developing a Dash application for multiple projects. It has the following properties:</source>
          <target state="translated">&lt;code&gt;CogniteTenantSelector&lt;/code&gt; は、ユーザーが、彼らはに対して認証するプロジェクトを入力してみましょうするために使用されます。これは、複数のプロジェクト用のDashアプリケーションを開発している場合に役立ちます。次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="1973bb0860241d97838eb5bfb01cf2bd4ee6aa28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validTenants&lt;/code&gt; property is a list of customer projects that your app will allow people to login from. The term &lt;strong&gt;tenant&lt;/strong&gt;, &lt;strong&gt;project&lt;/strong&gt; and &lt;strong&gt;company name&lt;/strong&gt; are used interchangeably. The &lt;code&gt;validTenants&lt;/code&gt; list must be formatted in the following way:</source>
          <target state="translated">&lt;code&gt;validTenants&lt;/code&gt; のプロパティは、あなたのアプリからのログインに人々をできるようになると、顧客のプロジェクトのリストです。&lt;strong&gt;テナント&lt;/strong&gt;、&lt;strong&gt;プロジェクト&lt;/strong&gt;、&lt;strong&gt;会社名&lt;/strong&gt;という用語は同じ意味で使用されます。 &lt;code&gt;validTenants&lt;/code&gt; リストは、以下の方法でフォーマットする必要があります。</target>
        </trans-unit>
        <trans-unit id="6459a07376f0bc74979d50ef5a10230cdb093ca2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;accessToken&lt;/strong&gt; is saved as a cookie called &lt;code&gt;_csrf_token&lt;/code&gt;. This is then used by &lt;strong&gt;Dash&lt;/strong&gt; to inject the token into each requests header under the key &lt;code&gt;X-Csrftoken&lt;/code&gt;. This can be easily retrieved by creating a function like the one below:</source>
          <target state="translated">&lt;strong&gt;accessTokenは&lt;/strong&gt;と呼ばれるクッキーとして保存されます &lt;code&gt;_csrf_token&lt;/code&gt; 。次に、これを&lt;strong&gt;Dash&lt;/strong&gt;が使用して、キー &lt;code&gt;X-Csrftoken&lt;/code&gt; の下の各リクエストヘッダーにトークンを挿入します。これは、以下のような関数を作成することで簡単に取得できます。</target>
        </trans-unit>
        <trans-unit id="35e6029f612e744fcf589ac51a7d0e1c6816d833" translate="yes" xml:space="preserve">
          <source>The package can be installed using pip</source>
          <target state="translated">パッケージはpipでインストールできます。</target>
        </trans-unit>
        <trans-unit id="b320ec90a5ec7cf94f96952953f62d329aa7265b" translate="yes" xml:space="preserve">
          <source>There should be only one &lt;code&gt;CogniteClientProvider&lt;/code&gt;. This component provides the login functionality. It has the following properties:</source>
          <target state="translated">&lt;code&gt;CogniteClientProvider&lt;/code&gt; は1つだけである必要があります。このコンポーネントは、ログイン機能を提供します。次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="a65d29f8fbe663a8bc2560ea0ba91c19e7e8c64b" translate="yes" xml:space="preserve">
          <source>This can then be used in &lt;code&gt;app.callback&lt;/code&gt; to register authenticate a &lt;code&gt;CogniteClient&lt;/code&gt; on the backend.</source>
          <target state="translated">これを &lt;code&gt;app.callback&lt;/code&gt; で使用して、バックエンドで &lt;code&gt;CogniteClient&lt;/code&gt; 認証を登録できます。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="595642cac1857b0f70257bd44b8b2bd1d20e6c98" translate="yes" xml:space="preserve">
          <source>When a user enters a valid tenant the components &lt;code&gt;project&lt;/code&gt; property is updated. This can then be passed to the &lt;code&gt;CogniteClientProvider&lt;/code&gt; to trigger authentication against the project. When a user is authenticated you can hide the tenant selector by setting the &lt;code&gt;hidden&lt;/code&gt; property to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">ユーザーが有効なテナントを入力すると、コンポーネントの &lt;code&gt;project&lt;/code&gt; プロパティが更新されます。次に、これを &lt;code&gt;CogniteClientProvider&lt;/code&gt; に渡して、プロジェクトに対する認証をトリガーできます。ユーザーが認証されると、 &lt;code&gt;hidden&lt;/code&gt; プロパティを &lt;code&gt;True&lt;/code&gt; に設定することにより、テナントセレクターを非表示にできます。</target>
        </trans-unit>
        <trans-unit id="955e841b773b6180d6b22ef4bea6627049f6cbc6" translate="yes" xml:space="preserve">
          <source>When the component recieves a valid &lt;code&gt;project&lt;/code&gt; the user is redirected to the CDF login page. On successfully signing in they are redirected back to the application from which they have come, with their &lt;strong&gt;project&lt;/strong&gt; in the pathname and the &lt;strong&gt;id_token&lt;/strong&gt; and &lt;strong&gt;access_token&lt;/strong&gt; in the search parameters.</source>
          <target state="translated">コンポーネントが有効な &lt;code&gt;project&lt;/code&gt; 受信すると、ユーザーはCDFログインページにリダイレクトされます。成功した彼らに署名するには、彼らがして、来て、そこからアプリケーションに戻さをリダイレクトしている&lt;strong&gt;プロジェクト&lt;/strong&gt;のパス名でかつ&lt;strong&gt;id_token&lt;/strong&gt;と&lt;strong&gt;access_tokenは&lt;/strong&gt;検索パラメータに。</target>
        </trans-unit>
        <trans-unit id="c5c8dd7465210f11e9fcbaaf361512ad48078136" translate="yes" xml:space="preserve">
          <source>authenticated: Set when a user is authenticated to &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">authentication：ユーザーが認証されたときに &lt;code&gt;True&lt;/code&gt; に設定されます</target>
        </trans-unit>
        <trans-unit id="8287d27ef20c09eeb8faf4b0d2fc13bb93c2dcea" translate="yes" xml:space="preserve">
          <source>hidden: A boolean that can hide the component from the user</source>
          <target state="translated">hidden を指定します。ユーザーからコンポーネントを隠すことができるブール値。</target>
        </trans-unit>
        <trans-unit id="3afd5dad7bf3c3a826019d0bec56bb3c4fd080a8" translate="yes" xml:space="preserve">
          <source>id: Unique component id to use in Dash</source>
          <target state="translated">id。Dashで使用するユニークなコンポーネントID</target>
        </trans-unit>
        <trans-unit id="a4a5decc1c0b6a12dd0101874fa536e36b9ff72c" translate="yes" xml:space="preserve">
          <source>project: The project to authenticate against</source>
          <target state="translated">プロジェクトを使用します。に対して認証するプロジェクト</target>
        </trans-unit>
        <trans-unit id="90cd468050cbbed9934ed776f36b6337d95c0782" translate="yes" xml:space="preserve">
          <source>project: The valid tenant entered by the user</source>
          <target state="translated">プロジェクトに入力された有効なテナント。ユーザーが入力した有効なテナント</target>
        </trans-unit>
        <trans-unit id="ef18417916ad6bc5f3e8976864df532a6fa616e2" translate="yes" xml:space="preserve">
          <source>title: Text to show in the tenant selector</source>
          <target state="translated">タイトルを指定します。テナントセレクターに表示するテキスト</target>
        </trans-unit>
        <trans-unit id="d6fb63256a68c59c80c1506f435ab1a5a26f7033" translate="yes" xml:space="preserve">
          <source>user: The authenticated users email address</source>
          <target state="translated">ユーザーを指定します。認証されたユーザーのメールアドレス</target>
        </trans-unit>
        <trans-unit id="1c70b63a514ac898883506c0b1939fafd0c741f9" translate="yes" xml:space="preserve">
          <source>validTenants: A list of valid tenant dictionaries</source>
          <target state="translated">validTenants。有効なテナント辞書のリスト</target>
        </trans-unit>
        <trans-unit id="5676d68e7d078edc7f91739215a4a3423826e697" translate="yes" xml:space="preserve">
          <source>validTenants: Same as for the Client Provider</source>
          <target state="translated">validTenants と同じです。クライアントプロバイダと同じ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
