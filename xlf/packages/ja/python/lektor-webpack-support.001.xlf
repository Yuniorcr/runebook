<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/lektor-webpack-support/">
    <body>
      <group id="lektor-webpack-support">
        <trans-unit id="1c5c361b990ee5ec57dd26dbd96a5886844e8eef" translate="yes" xml:space="preserve">
          <source>Creating a Webpack Project</source>
          <target state="translated">Webpackプロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="5d803f3b3159b683039c5578469cae18501c5223" translate="yes" xml:space="preserve">
          <source>Creating the App</source>
          <target state="translated">アプリの作成</target>
        </trans-unit>
        <trans-unit id="b810ed5f11a4561de867300ae968f0e80a787031" translate="yes" xml:space="preserve">
          <source>Enabling the Plugin</source>
          <target state="translated">プラグインを有効にする</target>
        </trans-unit>
        <trans-unit id="f1653393005f301b57a3352688c437078f91567a" translate="yes" xml:space="preserve">
          <source>Including The Files</source>
          <target state="translated">ファイルを含む</target>
        </trans-unit>
        <trans-unit id="0df2b72b7a205a90baa0db7a47d1d94920e45df4" translate="yes" xml:space="preserve">
          <source>Manual Builds</source>
          <target state="translated">マニュアルビルド</target>
        </trans-unit>
        <trans-unit id="9d0751c1a9a5103fcd0bd21aef5df023406fd361" translate="yes" xml:space="preserve">
          <source>Next up is the webpack config file.  Here we will go with a very basic
setup that's good enough to cover most things you will encounter.  The
idea is to build the files from &lt;code&gt;webpack/scss&lt;/code&gt; and &lt;code&gt;webpack/js&lt;/code&gt; into
&lt;code&gt;assets/static/gen&lt;/code&gt; so that we can use it even if we do not have webpack
installed for as long as someone else ran it before.</source>
          <target state="translated">次はwebpack設定ファイルです。ここでは、遭遇するほとんどのことをカバーするのに十分な非常に基本的なセットアップを行います。アイデアは、 &lt;code&gt;webpack/scss&lt;/code&gt; と &lt;code&gt;webpack/js&lt;/code&gt; から &lt;code&gt;assets/static/gen&lt;/code&gt; にファイルをビルドして、他の誰かが以前に実行している限りwebpackがインストールされていなくても使用できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="38c7da14fe614fb3068fd6a660c58209d1b85e26" translate="yes" xml:space="preserve">
          <source>Next you need to create a webpack project. Create a &lt;code&gt;webpack/&lt;/code&gt; folder and
inside that folder create &lt;code&gt;package.json&lt;/code&gt; and a &lt;code&gt;webpack.config.js&lt;/code&gt;</source>
          <target state="translated">次に、webpackプロジェクトを作成する必要があります。 &lt;code&gt;webpack/&lt;/code&gt; フォルダーを作成し、そのフォルダー内に &lt;code&gt;package.json&lt;/code&gt; と &lt;code&gt;webpack.config.js&lt;/code&gt; を作成します</target>
        </trans-unit>
        <trans-unit id="0dd1920b0802a2f77b522dc44cd41c9941d3848b" translate="yes" xml:space="preserve">
          <source>Now we can &lt;code&gt;npm install&lt;/code&gt; (or &lt;code&gt;yarn add&lt;/code&gt;) the rest:</source>
          <target state="translated">これで、残りを &lt;code&gt;npm install&lt;/code&gt; （または &lt;code&gt;yarn add&lt;/code&gt; ）できます。</target>
        </trans-unit>
        <trans-unit id="1886264809cf336c10603228a8c15b2ffb86c8c7" translate="yes" xml:space="preserve">
          <source>Now we can start building our app.  We configured at least two files
in webpack: &lt;code&gt;js/main.js&lt;/code&gt; and &lt;code&gt;scss/main.scss&lt;/code&gt;.  Those are the entry
points we need to have.  You can create them as empty files in
&lt;code&gt;webpack/js/main.js&lt;/code&gt; and &lt;code&gt;webpack/scss/main.scss&lt;/code&gt;.</source>
          <target state="translated">これで、アプリの作成を開始できます。 webpackに少なくとも2つのファイル &lt;code&gt;js/main.js&lt;/code&gt; と &lt;code&gt;scss/main.scss&lt;/code&gt; を設定しました。これらは、必要なエントリポイントです。それらを &lt;code&gt;webpack/js/main.js&lt;/code&gt; および &lt;code&gt;webpack/scss/main.scss&lt;/code&gt; 空のファイルとして作成できます 。</target>
        </trans-unit>
        <trans-unit id="edbef0ecbe9c034c55145e9fb55b71600c3ca33d" translate="yes" xml:space="preserve">
          <source>Now you need to include the files in your template.  This will do it:</source>
          <target state="translated">ここで、テンプレートにファイルを含める必要があります。これで完了です。</target>
        </trans-unit>
        <trans-unit id="a9bfcf98673db7ff5a4813710a6aa9aeaa0adb09" translate="yes" xml:space="preserve">
          <source>Now you're ready to go.  When you run &lt;code&gt;lektor server&lt;/code&gt; webpack will not
run, instead you need to now run it as &lt;code&gt;lektor server -f webpack&lt;/code&gt; which
will enable the webpack build.  Webpack automatically builds your files
into &lt;code&gt;assets/static/gen&lt;/code&gt; and this is where Lektor will then pick up the
files.  This is done so that you can ship the webpack generated assets
to others that do not have webpack installed which simplifies using a
Lektor website that uses webpack.</source>
          <target state="translated">これで、準備が整いました。 &lt;code&gt;lektor server&lt;/code&gt; を実行すると、webpackは実行されません。代わりに、Webpackビルドを有効にする &lt;code&gt;lektor server -f webpack&lt;/code&gt; として実行する必要があります。Webpackはファイルを &lt;code&gt;assets/static/gen&lt;/code&gt; に自動的にビルドし、ここでLektorがファイルを取得します。これは、webpackで生成されたアセットを、webpackがインストールされていない他のユーザーに出荷できるようにするためです。これにより、webpackを使用するLektorWebサイトの使用が簡単になります。</target>
        </trans-unit>
        <trans-unit id="48dd916c96025b1e57f8d56813d8611d15c051e4" translate="yes" xml:space="preserve">
          <source>Running the Server</source>
          <target state="translated">サーバーの実行</target>
        </trans-unit>
        <trans-unit id="64916c4955917776fb26b565620e7c3e64a3ee6d" translate="yes" xml:space="preserve">
          <source>Super simple Lektor plugin that runs a webpack watcher</source>
          <target state="translated">ウェブパックウォッチャーを実行する超シンプルなLektorプラグイン</target>
        </trans-unit>
        <trans-unit id="42b8e1749f5f83730c1cd41f4040bb36ddb3a842" translate="yes" xml:space="preserve">
          <source>This file instructs &lt;code&gt;npm&lt;/code&gt; which packages we will need.  All we need for a
start is to create an almost empty file (name and version fields are mandatory
but not important for functionality, change them to suit your own needs):</source>
          <target state="translated">このファイルは、必要なパッケージを &lt;code&gt;npm&lt;/code&gt; に指示します。最初に必要なのは、ほとんど空のファイルを作成することだけです（名前とバージョンのフィールドは必須ですが、機能にとって重要ではありません。自分のニーズに合わせて変更してください）。</target>
        </trans-unit>
        <trans-unit id="836e71b50cf7917d80cb25cc6412a0a97376e195" translate="yes" xml:space="preserve">
          <source>This is a plugin for Lektor that adds support for webpack to projects.  When
enabled it can build a webpack project from the &lt;code&gt;webpack/&lt;/code&gt; folder into the
asset folder automatically when the server (or build process) is run with
the &lt;code&gt;-f webpack&lt;/code&gt; flag.</source>
          <target state="translated">これは、プロジェクトにwebpackのサポートを追加するLektorのプラグインです。有効にすると、サーバー（またはビルドプロセス）が &lt;code&gt;-f webpack&lt;/code&gt; フラグを指定して実行されるときに、 &lt;code&gt;webpack/&lt;/code&gt; フォルダーからアセットフォルダーにwebpackプロジェクトを自動的にビルドできます。</target>
        </trans-unit>
        <trans-unit id="0c85019f6049520cdcef3bbef0584acfa1c2957f" translate="yes" xml:space="preserve">
          <source>This will install webpack itself together with babel and sass as well as
a bunch of loaders we need for getting all that configured.  Because we
created a &lt;code&gt;package.json&lt;/code&gt; before and we use &lt;code&gt;--save-dev&lt;/code&gt; the dependencies
will be remembered in the &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">これにより、webpack自体が、babelとsass、およびすべてを構成するために必要な一連のローダーと一緒にインストールされます。以前に &lt;code&gt;package.json&lt;/code&gt; を作成し、 &lt;code&gt;--save-dev&lt;/code&gt; を使用しているため、依存関係は &lt;code&gt;package.json&lt;/code&gt; ファイルに記憶されます。</target>
        </trans-unit>
        <trans-unit id="945ce48297bf9072d6a5c4eb7b6d146f7197c4fc" translate="yes" xml:space="preserve">
          <source>To enable the plugin add this to your project file, run this command while
sitting in your Lektor project directory:</source>
          <target state="translated">プラグインを有効にするには、プロジェクトファイルにこのコマンドを追加し、Lektorのプロジェクトディレクトリでこのコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="e01ee9f088796f10c013c406d150f2fcd2ee37f5" translate="yes" xml:space="preserve">
          <source>To manually trigger a build that also invokes webpack you can use
&lt;code&gt;lektor build -f webpack&lt;/code&gt;.</source>
          <target state="translated">手動でも呼び出すには、使用することができますWebPACKのことビルドをトリガするには &lt;code&gt;lektor build -f webpack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b4a197af46053a4184246b9438ab6fbe58a3124" translate="yes" xml:space="preserve">
          <source>lektor-webpack-support</source>
          <target state="translated">レクターウェブパックサポート</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
