<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/pymatgen/">
    <body>
      <group id="pymatgen">
        <trans-unit id="bdcce6bfbf70da07319dd470fa07ab5ffe7b7624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It is (fairly) robust.&lt;/strong&gt; Pymatgen is used by thousands of researchers,
and is the analysis code powering the &lt;a href=&quot;https://www.materialsproject.org&quot;&gt;Materials Project&lt;/a&gt;.
The analysis it produces survives rigorous scrutiny every single day. Bugs
tend to be found and corrected quickly. Pymatgen also uses
&lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and &lt;a href=&quot;https://www.appveyor.com/&quot;&gt;Appveyor&lt;/a&gt;
for continuous integration on the Linux and Windows platforms,
respectively, which ensures that every commit passes a comprehensive suite
of unittests.</source>
          <target state="translated">&lt;strong&gt;It is (fairly) robust.&lt;/strong&gt; Pymatgen is used by thousands of researchers, and is the analysis code powering the &lt;a href=&quot;https://www.materialsproject.org&quot;&gt;Materials Project&lt;/a&gt;. The analysis it produces survives rigorous scrutiny every single day. Bugs tend to be found and corrected quickly. Pymatgen also uses &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCI&lt;/a&gt; and &lt;a href=&quot;https://www.appveyor.com/&quot;&gt;Appveyor&lt;/a&gt; for continuous integration on the Linux and Windows platforms, respectively, which ensures that every commit passes a comprehensive suite of unittests.</target>
        </trans-unit>
        <trans-unit id="16ed00b350bb4cbddfa092b30d81babcdf1a4ed9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It is fast.&lt;/strong&gt; Many of the core numerical methods in pymatgen have been
optimized by vectorizing in numpy/scipy. This means that coordinate
manipulations are extremely fast and are in fact comparable to codes
written in other languages. Pymatgen also comes with a complete system for
handling periodic boundary conditions.</source>
          <target state="translated">&lt;strong&gt;It is fast.&lt;/strong&gt; Many of the core numerical methods in pymatgen have been optimized by vectorizing in numpy/scipy. This means that coordinate manipulations are extremely fast and are in fact comparable to codes written in other languages. Pymatgen also comes with a complete system for handling periodic boundary conditions.</target>
        </trans-unit>
        <trans-unit id="319d2584b5345b5a64a7440c2cd280d8d0466db3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It is open.&lt;/strong&gt; You are free to use and contribute to pymatgen. It also means
that pymatgen is continuously being improved. We will attribute any code you
contribute to any publication you specify. Contributing to pymatgen means
your research becomes more visible, which translates to greater impact.</source>
          <target state="translated">&lt;strong&gt;It is open.&lt;/strong&gt; You are free to use and contribute to pymatgen. It also means that pymatgen is continuously being improved. We will attribute any code you contribute to any publication you specify. Contributing to pymatgen means your research becomes more visible, which translates to greater impact.</target>
        </trans-unit>
        <trans-unit id="55096fe75ea64aa1b6086be8522c236ac38ff4c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It is well documented.&lt;/strong&gt; A fairly comprehensive documentation has been
written to help you get to grips with it quickly.</source>
          <target state="translated">&lt;strong&gt;It is well documented.&lt;/strong&gt; A fairly comprehensive documentation has been written to help you get to grips with it quickly.</target>
        </trans-unit>
        <trans-unit id="50f6c806617ae74bfb1a71aee4175c2a487a51e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It will be around.&lt;/strong&gt; Pymatgen is not a pet research project. It is used in
the well-established Materials Project. It is also actively being developed
and maintained by the &lt;a href=&quot;https://www.materialsvirtuallab.org&quot;&gt;Materials Virtual Lab&lt;/a&gt;,
the ABINIT group and many other research groups.</source>
          <target state="translated">&lt;strong&gt;It will be around.&lt;/strong&gt; Pymatgen is not a pet research project. It is used in the well-established Materials Project. It is also actively being developed and maintained by the &lt;a href=&quot;https://www.materialsvirtuallab.org&quot;&gt;Materials Virtual Lab&lt;/a&gt;, the ABINIT group and many other research groups.</target>
        </trans-unit>
        <trans-unit id="c1b33263a8b577419f4bfa53f8f4b3a6bd6ca3d3" translate="yes" xml:space="preserve">
          <source>Electronic structure analyses, such as density of states and band structure.</source>
          <target state="translated">状態密度やバンド構造などの電子構造解析。</target>
        </trans-unit>
        <trans-unit id="6cdb45097a1792966b56db0c94961763c80d5bcb" translate="yes" xml:space="preserve">
          <source>Extensive input/output support, including support for
&lt;a href=&quot;http://cms.mpi.univie.ac.at/vasp/&quot;&gt;VASP&lt;/a&gt;, &lt;a href=&quot;http://www.abinit.org/&quot;&gt;ABINIT&lt;/a&gt;,
CIF, Gaussian, XYZ, and many other file formats.</source>
          <target state="translated">Extensive input/output support, including support for &lt;a href=&quot;http://cms.mpi.univie.ac.at/vasp/&quot;&gt;VASP&lt;/a&gt;, &lt;a href=&quot;http://www.abinit.org/&quot;&gt;ABINIT&lt;/a&gt;, CIF, Gaussian, XYZ, and many other file formats.</target>
        </trans-unit>
        <trans-unit id="c1e229b30d05af41122fb4ef8afa3a2933b2f9c2" translate="yes" xml:space="preserve">
          <source>Highly flexible classes for the representation of Element, Site, Molecule,
Structure objects.</source>
          <target state="translated">Element,Site,Molecule,Structureオブジェクトを表現するための柔軟性の高いクラスです。</target>
        </trans-unit>
        <trans-unit id="cff2960295be24deab5c6905ff95864eae10cb28" translate="yes" xml:space="preserve">
          <source>Integration with the Materials Project REST API.</source>
          <target state="translated">Materials Project REST APIとの統合。</target>
        </trans-unit>
        <trans-unit id="7b8a5fde0f8eceb9433e01670f965297ea440e34" translate="yes" xml:space="preserve">
          <source>Official docs: &lt;a href=&quot;http://pymatgen.org/&quot;&gt;http://pymatgen.org&lt;/a&gt;</source>
          <target state="translated">Official docs: &lt;a href=&quot;http://pymatgen.org/&quot;&gt;http://pymatgen.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84efa278f6ebd8add4be3fa4311b8ef3c8c40c6e" translate="yes" xml:space="preserve">
          <source>Powerful analysis tools, including generation of phase diagrams, Pourbaix
diagrams, diffusion analyses, reactions, etc.</source>
          <target state="translated">相図、Pourbaix図、拡散解析、反応などの生成を含む強力な解析ツール。</target>
        </trans-unit>
        <trans-unit id="d8be6b4c859233805c937b9719330698ba5301d5" translate="yes" xml:space="preserve">
          <source>Pymatgen (Python Materials Genomics) is a robust, open-source Python library
for materials analysis. These are some of the main features:</source>
          <target state="translated">Pymatgen (Python Materials Genomics)は、材料分析のための堅牢でオープンソースのPythonライブラリです。主な機能の一部をご紹介します。</target>
        </trans-unit>
        <trans-unit id="2d38e52935805e3bb5d36699a790fb94ff2d8abe" translate="yes" xml:space="preserve">
          <source>Pymatgen is free to use. However, we also welcome your help to improve this
library by making your own contributions.  These contributions can be in the
form of additional tools or modules you develop, or feature requests and bug
reports. Please report any bugs and issues at pymatgen's [Github page]
(&lt;a href=&quot;https://github.com/materialsproject/pymatgen&quot;&gt;https://github.com/materialsproject/pymatgen&lt;/a&gt;). For help with any pymatgen
issues, please use the &lt;a href=&quot;https://discuss.matsci.org/c/pymatgen&quot;&gt;Discourse page&lt;/a&gt;.</source>
          <target state="translated">Pymatgen is free to use. However, we also welcome your help to improve this library by making your own contributions. These contributions can be in the form of additional tools or modules you develop, or feature requests and bug reports. Please report any bugs and issues at pymatgen's [Github page] (&lt;a href=&quot;https://github.com/materialsproject/pymatgen&quot;&gt;https://github.com/materialsproject/pymatgen&lt;/a&gt;). For help with any pymatgen issues, please use the &lt;a href=&quot;https://discuss.matsci.org/c/pymatgen&quot;&gt;Discourse page&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="597b145ae61877082fe67d95b9eb8eb0c2a838b3" translate="yes" xml:space="preserve">
          <source>Python Materials Genomics is a robust materials analysis code that defines core object representations for structures and molecules with support for many electronic structure codes. It is currently the core analysis code powering the Materials Project (https://www.materialsproject.org).</source>
          <target state="translated">Python Materials Genomics は、多くの電子構造コードをサポートした構造や分子のコアオブジェクト表現を定義する堅牢な材料解析コードです。現在、Materials Project (https://www.materialsproject.org)のコア解析コードとなっています。</target>
        </trans-unit>
        <trans-unit id="69ec5734f1d3c501e744c043a9deb576dfd3a446" translate="yes" xml:space="preserve">
          <source>There are many materials analysis codes out there, both commerical and free,
but pymatgen offer several advantages:</source>
          <target state="translated">市販のものと無料のものの両方で、そこに多くの材料分析コードがありますが、pymatgenはいくつかの利点を提供します。</target>
        </trans-unit>
        <trans-unit id="8b0b26d30e03f1b7a14c8add37527d94e2e87cb0" translate="yes" xml:space="preserve">
          <source>Why use pymatgen?</source>
          <target state="translated">なぜpymatgenを使うのか?</target>
        </trans-unit>
        <trans-unit id="ed3520b91dfa83de04935f7fa8664fbbcb4f90c6" translate="yes" xml:space="preserve">
          <source>With effect from version 2019.1.1, pymatgen only supports Python 3.x. Users
who require Python 2.7 should install pymatgen v2018.x.</source>
          <target state="translated">バージョン2019.1.1からの影響で、pymatgenはPython 3.xのみをサポートしています。Python 2.7を必要とするユーザーはpymatgen v2018.xをインストールする必要があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
