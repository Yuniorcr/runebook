<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/concurrentloghandler/">
    <body>
      <group id="concurrentloghandler">
        <trans-unit id="e07f8e23c0c928d716c6dd95a411fd0fe5999554" translate="yes" xml:space="preserve">
          <source>, here is an example:</source>
          <target state="translated">、ここに例があります：</target>
        </trans-unit>
        <trans-unit id="0c517ef6bd2f1729176842d7685d39a4ad223c36" translate="yes" xml:space="preserve">
          <source>, which will
strictly adhere to the maximum file size.</source>
          <target state="translated">、これは最大ファイルサイズに厳密に準拠します。</target>
        </trans-unit>
        <trans-unit id="6aa54f386b7bdcb03cc56d0f4c5ef0269eb2d943" translate="yes" xml:space="preserve">
          <source>.  Extra care is taken to ensure that logs
can be safely rotated before the rotation process is started. (This module works
around the file rename issue with</source>
          <target state="translated">。ローテーションプロセスを開始する前に、ログを安全にローテーションできるように特別な注意が払われています。（このモジュールは、</target>
        </trans-unit>
        <trans-unit id="12e324934490e515b4bfb40e5fc7042448a6384a" translate="yes" xml:space="preserve">
          <source>. This class
is now available using</source>
          <target state="translated">。このクラスは現在使用可能です</target>
        </trans-unit>
        <trans-unit id="15b6dab431df6b039db89d2e28de6e41f4699dd0" translate="yes" xml:space="preserve">
          <source>. This module uses file
locking so that multiple processes can concurrently log to a single file without
dropping or clobbering log events. This module provides a file rotation scheme
like with</source>
          <target state="translated">。このモジュールはファイルロックを使用するため、複数のプロセスがログイベントを削除したり、壊したりせずに1つのファイルに同時にログを記録できます。このモジュールは、次のようなファイルローテーションスキームを提供します。</target>
        </trans-unit>
        <trans-unit id="8e1254db18c1bae88fc9c6f7982aca9051973602" translate="yes" xml:space="preserve">
          <source>. You should not attempt to mix
and match</source>
          <target state="translated">。混ぜ合わせてはいけません</target>
        </trans-unit>
        <trans-unit id="a573f475c3b2e4d24fcbf5efa759b2e4876973f1" translate="yes" xml:space="preserve">
          <source>0.7.4:  Minor bug fix</source>
          <target state="translated">0.7.4:マイナーなバグフィックス</target>
        </trans-unit>
        <trans-unit id="f746b55e9763219b42397accf967e34a612cff29" translate="yes" xml:space="preserve">
          <source>0.8.0:  Minor feature release</source>
          <target state="translated">0.8.0:マイナー機能のリリース</target>
        </trans-unit>
        <trans-unit id="2389b7958f82b15b1c5dcb0bccc3939177885a13" translate="yes" xml:space="preserve">
          <source>0.8.1:  Minor bug fix release</source>
          <target state="translated">0.8.1:マイナーバグフィックスリリース</target>
        </trans-unit>
        <trans-unit id="fcdae8f8a112e5dc020d1108ee61ac435c56494d" translate="yes" xml:space="preserve">
          <source>0.8.2:  Minor bug fix release (again)</source>
          <target state="translated">0.8.2:マイナーバグフィックスのリリース (再度)</target>
        </trans-unit>
        <trans-unit id="2389078deadd6b10716b0c66bc79697a4a09ab60" translate="yes" xml:space="preserve">
          <source>0.8.3:  Fixed a log file rotation bug and updated docs</source>
          <target state="translated">0.8.3:ログファイルのローテーションのバグを修正し、ドキュメントを更新しました。</target>
        </trans-unit>
        <trans-unit id="89011b6e34a427d3084f36593f9c81a4ab2700ac" translate="yes" xml:space="preserve">
          <source>0.8.4:  Fixed lock-file naming issue</source>
          <target state="translated">0.8.4:ロックファイルの名前の問題を修正</target>
        </trans-unit>
        <trans-unit id="c2a97259a2ceb51495a14fd16a8da13440af0e4a" translate="yes" xml:space="preserve">
          <source>0.8.5:  Fixed ValueError: I/O operation on closed file</source>
          <target state="translated">0.8.5:Fixed ValueError.クローズドファイルでのI/O操作</target>
        </trans-unit>
        <trans-unit id="81ebf9a842bbfdaab0a9686fd4b7ed01ef7e81dd" translate="yes" xml:space="preserve">
          <source>0.8.6:  Fixed packaging bug with test script</source>
          <target state="translated">0.8.6:テストスクリプトのパッケージングのバグを修正</target>
        </trans-unit>
        <trans-unit id="ee524e1e9bdc1b0e0e9945583538c10485eec9a4" translate="yes" xml:space="preserve">
          <source>0.9.0:  Now requires Python 2.6+</source>
          <target state="translated">0.9.0:Python 2.6+が必要になりました。</target>
        </trans-unit>
        <trans-unit id="d2b92c45ccb2ec17a8d69beadaccf3535b05dd38" translate="yes" xml:space="preserve">
          <source>0.9.1:  Bug fixes - &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199332&quot;&gt;LP Bug 1199332&lt;/a&gt; and &lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199333&quot;&gt;LP Bug 1199333&lt;/a&gt;.</source>
          <target state="translated">0.9.1：バグ修正&lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199332&quot;&gt;-LP Bug 1199332&lt;/a&gt;および&lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler/+bug/1199333&quot;&gt;LP Bug 1199333&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3100c4e69d3e58aa0be234c10b6cae3d3333f9cb" translate="yes" xml:space="preserve">
          <source>Add better support for using</source>
          <target state="translated">使用のためのより良いサポートを追加</target>
        </trans-unit>
        <trans-unit id="c4e6de36ab0de1430b1aa9e4771ce2ce83ce0ccc" translate="yes" xml:space="preserve">
          <source>Add the &amp;lsquo;delay&amp;rsquo; parameter (delayed log file opening) to better match the
core logging functionality in more recent version of Python.</source>
          <target state="translated">'delay'パラメーター（遅延ログファイルのオープン）を追加して、Pythonの最新バージョンのコアロギング機能とより一致させます。</target>
        </trans-unit>
        <trans-unit id="53880d1b550ef1c8c3547454e9094347ecf9c9d2" translate="yes" xml:space="preserve">
          <source>Added a change log; which you are reading now.</source>
          <target state="translated">変更ログを追加しました。</target>
        </trans-unit>
        <trans-unit id="ddd888b57ec8cea5ffcc65c29e5bdf323b1419b7" translate="yes" xml:space="preserve">
          <source>Automatic fallback example</source>
          <target state="translated">自動フォールバックの例</target>
        </trans-unit>
        <trans-unit id="5ea2c0d0d9b03ca14d6d6d281f2f3bc6b4bca171" translate="yes" xml:space="preserve">
          <source>Big thanks to Dan Callaghan for forwarding these issues and patches.</source>
          <target state="translated">これらの問題とパッチを転送してくれた Dan Callaghan に感謝します。</target>
        </trans-unit>
        <trans-unit id="9c74fb571984d7f3e781ea8b013e5f74bcd16389" translate="yes" xml:space="preserve">
          <source>Change Log</source>
          <target state="translated">変更ログ</target>
        </trans-unit>
        <trans-unit id="6d448766a5fe4c1b8aa4deb1cab3ce7c0144ba4e" translate="yes" xml:space="preserve">
          <source>Cleanup the docs. (aka &amp;ldquo;the page you are reading right now&amp;rdquo;) I fixed some
silly mistakes and typos&amp;hellip; who writes this stuff?</source>
          <target state="translated">ドキュメントをクリーンアップします。（別名「今読んでいるページ」）私はいくつかの愚かな間違いやタイプミスを修正しました&amp;hellip;誰がこれを書いているのですか？</target>
        </trans-unit>
        <trans-unit id="b6614773086afbebc5c6952e20ab5ae21cd2977a" translate="yes" xml:space="preserve">
          <source>Concurrent logging handler (drop-in replacement for RotatingFileHandler) Python 2.6+</source>
          <target state="translated">並行ロギングハンドラ (RotatingFileHandler のドロップイン置き換え)Python 2.6+</target>
        </trans-unit>
        <trans-unit id="1b28af8c3a1495f4847afb98eb455a75bac21fe6" translate="yes" xml:space="preserve">
          <source>ConcurrentLogHandler</source>
          <target state="translated">コンカレントログハンドラ</target>
        </trans-unit>
        <trans-unit id="252106d5210fdbd5c7fd5a0832019d80400c2c0a" translate="yes" xml:space="preserve">
          <source>ConcurrentRotatingFileHandler</source>
          <target state="translated">ConcurrentRotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="5d0355535f712761cd5201c136989cc42aae49f7" translate="yes" xml:space="preserve">
          <source>Config file example</source>
          <target state="translated">コンフィグファイルの例</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">詳細</target>
        </trans-unit>
        <trans-unit id="253b515d0eeb3f8296e6237afd95c0a302518957" translate="yes" xml:space="preserve">
          <source>Example Python code:</source>
          <target state="translated">Pythonのコード例。</target>
        </trans-unit>
        <trans-unit id="ebf00a274c6977681a376459f36dd8b2146ac132" translate="yes" xml:space="preserve">
          <source>Example config file:</source>
          <target state="translated">設定ファイルの例。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="7b157c5085b418b69189811f4781f323a1b3c1c6" translate="yes" xml:space="preserve">
          <source>Fix a small packaging bug from the 0.8.5 release.  (Thanks to Bj&amp;ouml;rn H&amp;auml;user
for bringing this to my attention.)</source>
          <target state="translated">0.8.5リリースからの小さなパッケージングバグを修正します。（これを私の注意を引いてくれたBj&amp;ouml;rnH&amp;auml;userに感謝します。）</target>
        </trans-unit>
        <trans-unit id="bf172c93d2bc3efba5e569fe47f7c647a46958ba" translate="yes" xml:space="preserve">
          <source>Fixed a bug that happens after log rotation when multiple processes are
witting to the same log file. Each process ends up writing to their own
log file (&amp;ldquo;log.1&amp;rdquo; or &amp;ldquo;log.2&amp;rdquo; instead of &amp;ldquo;log&amp;rdquo;). The fix is simply to reopen
the log file and check the size again.  I do not believe this bug results in
data loss; however, this certainly was not the desired behavior.  (A big
thanks goes to Oliver Tonnhofer for finding, documenting, and providing a
patch for this bug.)</source>
          <target state="translated">複数のプロセスが同じログファイルを参照しているときに、ログローテーション後に発生するバグを修正しました。各プロセスは、独自のログファイル（「log」ではなく「log.1」または「log.2」）に書き込みます。修正は、ログファイルを再度開いて、サイズを再度確認することです。このバグによってデータが失われるとは思いません。しかし、これは確かに望ましい動作ではありませんでした。（このバグのパッチを見つけ、文書化し、提供してくれたOliver Tonnhoferに大いに感謝します。）</target>
        </trans-unit>
        <trans-unit id="8cf0d5b810af174252c95b8fbf9e535462b359f6" translate="yes" xml:space="preserve">
          <source>Fixed a typo in the package description (incorrect class name)</source>
          <target state="translated">パッケージの説明のタイプミスを修正 (クラス名が正しくない)</target>
        </trans-unit>
        <trans-unit id="ae3c1d93fe9fd70b0948209e311a61bfccd4ec71" translate="yes" xml:space="preserve">
          <source>Fixed minor spelling mistakes</source>
          <target state="translated">細かいスペルミスを修正</target>
        </trans-unit>
        <trans-unit id="1e743b0b91f69142ae8cf27d6a9d4941c7120af5" translate="yes" xml:space="preserve">
          <source>Fixed the</source>
          <target state="translated">を修正しました。</target>
        </trans-unit>
        <trans-unit id="5fd950ce63193af2d4699a5523f6640ad2409690" translate="yes" xml:space="preserve">
          <source>For anyone still using Python 2.3-2.5, please use the latest 0.8.x release</source>
          <target state="translated">まだ Python 2.3-2.5 を使っている人は、最新の 0.8.x リリースを使ってください。</target>
        </trans-unit>
        <trans-unit id="6a5f920c23e00c90b84313ae6a37c9568a1d9ee7" translate="yes" xml:space="preserve">
          <source>Found and resolved another issue with older logging packages that do not
support encoding.</source>
          <target state="translated">エンコーディングをサポートしていない古いロギングパッケージの別の問題を発見し、解決しました。</target>
        </trans-unit>
        <trans-unit id="a9b5bcfdd83ac7019e46fa338d531c88f101270c" translate="yes" xml:space="preserve">
          <source>Handle logging.shutdown() in Python 2.7+. Close the lock file stream via
close().</source>
          <target state="translated">Python 2.7+でlogging.shutdown()を扱う。close()でロックファイルストリームを閉じる。</target>
        </trans-unit>
        <trans-unit id="838120fff8d6be71ef54cf7952fa67ea584bf69a" translate="yes" xml:space="preserve">
          <source>Here is a example demonstrating how to use this module directly (from within
Python code):</source>
          <target state="translated">ここでは、このモジュールを直接 (Python コード内から)使用する方法を示す例を示します。</target>
        </trans-unit>
        <trans-unit id="b50417bf1327026fb3df8de5c929f6bae9cfe73b" translate="yes" xml:space="preserve">
          <source>If you are distributing your code and you are unsure if the</source>
          <target state="translated">コードを配布しているときに</target>
        </trans-unit>
        <trans-unit id="8ca35add8370298abe65b8542611934195a91208" translate="yes" xml:space="preserve">
          <source>If you are installing from source, you can use:</source>
          <target state="translated">ソースからインストールする場合は</target>
        </trans-unit>
        <trans-unit id="481ed98a35c1305512719dad3b4f91271f9630d6" translate="yes" xml:space="preserve">
          <source>If you have multiple instances of a script (or multiple scripts) all running at
the same time and writing to the same log file, then &lt;em&gt;all&lt;/em&gt; of the scripts should
be using</source>
          <target state="translated">スクリプトの複数のインスタンス（または複数のスクリプト）がすべて同時に実行され、同じログファイルに書き込まれている場合は、&lt;em&gt;すべて&lt;/em&gt;のスクリプトが</target>
        </trans-unit>
        <trans-unit id="a1a1db1c9f7b0b7c96fdfd1ba07226a56eab12bd" translate="yes" xml:space="preserve">
          <source>Initial Python 3 support (needs more testing)</source>
          <target state="translated">初期のPython 3のサポート(より多くのテストが必要)</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="960432724edb9cae58ccc74001b698ecabdc7a98" translate="yes" xml:space="preserve">
          <source>Minor changes in how the</source>
          <target state="translated">方法のマイナーチェンジ</target>
        </trans-unit>
        <trans-unit id="c2b4942c333f9df10cc770fc5d0c33a0086059f2" translate="yes" xml:space="preserve">
          <source>More gracefully handle out of disk space scenarios. Prevent release() from
throwing an exception.</source>
          <target state="translated">ディスク容量不足のシナリオをより優雅に処理するようになりました。release()が例外をスローしないようにしました。</target>
        </trans-unit>
        <trans-unit id="aa944a28eda3e7deb14b1414484ae0c5124badec" translate="yes" xml:space="preserve">
          <source>Now importing &amp;ldquo;codecs&amp;rdquo; directly; I found some slight differences in the
logging module in different Python 2.4.x releases that caused the module to
fail to load.</source>
          <target state="translated">「コーデック」を直接インポートします。異なるPython2.4.xリリースのロギングモジュールに若干の違いがあり、モジュールのロードに失敗することがわかりました。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="21bd6353604ca4624fa65d83d3e730e737d2d612" translate="yes" xml:space="preserve">
          <source>Resolved a minor issue where lock-files would be improperly named if the
log file contained &amp;ldquo;.log&amp;rdquo; in the middle of the log name.  For example, if
you log file was &amp;ldquo;/var/log/mycompany.logging.mysource.log&amp;rdquo;, the lock file
would be named &amp;ldquo;/var/log/mycompany.ging.mysource.lock&amp;rdquo;, which is not correct.
Thanks to Dirk Rothe for pointing this out.  Since this introduce a slight
lock-file behavior difference, make sure all concurrent writers are updated
to 0.8.4 at the same time if this issue effects you.</source>
          <target state="translated">ログファイルのログ名の途中に「.log」が含まれていると、ロックファイルに不適切な名前が付けられるというマイナーな問題が解決されました。たとえば、ログファイルが「/var/log/mycompany.logging.mysource.log」の場合、ロックファイルの名前は「/var/log/mycompany.ging.mysource.lock」になりますが、これは正しくありません。これを指摘してくれたDirkRotheに感謝します。これによりロックファイルの動作にわずかな違いが生じるため、この問題が発生した場合は、すべての同時ライターが同時に0.8.4に更新されるようにしてください。</target>
        </trans-unit>
        <trans-unit id="f550fc849962936098991389a7440b3727fd732f" translate="yes" xml:space="preserve">
          <source>Revamp file opening/closing and file-locking internals (inspired by
feedback from Vinay Sajip.)</source>
          <target state="translated">ファイルの開閉とファイルロックの内部を刷新 (Vinay Sajip からのフィードバックに触発されて)</target>
        </trans-unit>
        <trans-unit id="84c242a1292be7c78ad1acc56caac0a8dd07191a" translate="yes" xml:space="preserve">
          <source>RotatingFileHandler</source>
          <target state="translated">ローテートファイルハンドラ</target>
        </trans-unit>
        <trans-unit id="5e304f056e58b6e6eaa24303b5a9eee156ad581f" translate="yes" xml:space="preserve">
          <source>RotatingFileHanler</source>
          <target state="translated">ローテートファイルハンラー</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">簡単な例</target>
        </trans-unit>
        <trans-unit id="f4f5fd84a0ba5891046137ed24b1a1918ee6f9a9" translate="yes" xml:space="preserve">
          <source>Thanks to Vince Carney, Arif Kasim, Matt Drew, Nick Coghlan, and
Dan Callaghan for bug reports.  Bugs can now be filled here:
&lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler&quot;&gt;https://bugs.launchpad.net/python-concurrent-log-handler&lt;/a&gt;.  Bugs resolved
&lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=858912&quot;&gt;Red Hat Bug #858912&lt;/a&gt; and &lt;a href=&quot;http://bugs.python.org/issue15960&quot;&gt;Python Bug #15960&lt;/a&gt;</source>
          <target state="translated">バグレポートを提供してくれたVince Carney、Arif Kasim、Matt Drew、Nick Coghlan、Dan Callaghanに感謝します。バグはここで埋めることができます：&lt;a href=&quot;https://bugs.launchpad.net/python-concurrent-log-handler&quot;&gt;https&lt;/a&gt;： //bugs.launchpad.net/python-concurrent-log-handler。バグは &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=858912&quot;&gt;Red Hatのバグ＃858912&lt;/a&gt;と&lt;a href=&quot;http://bugs.python.org/issue15960&quot;&gt;Pythonのバグ＃15960を解決しました&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="7fab5c314c4c97e01b24313cafebf44bb2c31657" translate="yes" xml:space="preserve">
          <source>This example shows you how to use this log handler with the logging config file
parser. This allows you to keep your logging configuration code separate from
your application code.</source>
          <target state="translated">この例では、このログハンドラをロギング設定ファイルパーサで使用する方法を示しています。これにより、ロギング設定コードをアプリケーションコードから分離しておくことができます。</target>
        </trans-unit>
        <trans-unit id="591fbbfbabf886124da3e228a718d579ede0ac38" translate="yes" xml:space="preserve">
          <source>This module attempts to preserve log records at all cost. This means that log
files will grow larger than the specified maximum (rotation) size. So if disk
space is tight, you may want to stick with</source>
          <target state="translated">このモジュールは、あらゆるコストをかけてログレコードを保存しようとします。これは、ログファイルが指定された最大 (回転)サイズよりも大きくなることを意味します。ですから、ディスクスペースが限られている場合は</target>
        </trans-unit>
        <trans-unit id="ab311f9f87d9274361b6a5f331584dd5cf7b4941" translate="yes" xml:space="preserve">
          <source>This module has had minimal testing in a multi-threaded process.  I see no
reason why this should be an issue, but no stress-testing has been done in a
threaded situation. If this is important to you, you could always add
threading support to the</source>
          <target state="translated">このモジュールは、マルチスレッドプロセスでのテストは最小限に抑えられています。これが問題になる理由は何もありませんが、スレッド状況でのストレステストは行われていません。もしこれが重要であれば、常にスレッド化のサポートを</target>
        </trans-unit>
        <trans-unit id="c9f5b89e5c0d45f0a790e323e5048199fa9c215f" translate="yes" xml:space="preserve">
          <source>This module provides an additional log handler for Python&amp;rsquo;s standard logging
package (PEP 282). This handler will write log events to log file which is
rotated when the log file reaches a certain size.  Multiple processes can
safely write to the same log file concurrently.</source>
          <target state="translated">このモジュールは、Pythonの標準ログパッケージ（PEP 282）に追加のログハンドラーを提供します。このハンドラーは、ログファイルが特定のサイズに達したときにローテーションされるログファイルにログイベントを書き込みます。複数のプロセスが同じログファイルに同時に安全に書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="a868d044935008956cbb4011585c9147e69c375c" translate="yes" xml:space="preserve">
          <source>This package bundles &lt;a href=&quot;http://code.activestate.com/recipes/65203/&quot;&gt;portalocker&lt;/a&gt; to deal with file locking.  Please be aware
that portalocker only supports Unix (posix) an NT platforms at this time, and
therefore this package only supports those platforms as well.</source>
          <target state="translated">このパッケージには、ファイルロックを処理するための&lt;a href=&quot;http://code.activestate.com/recipes/65203/&quot;&gt;portalocker&lt;/a&gt;がバンドルされています。現時点では、portalockerはUnix（posix）とNTプラットフォームのみをサポートしているため、このパッケージはこれらのプラットフォームのみをサポートしていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7939660430e4cce43c10138b94042e02743cf5f6" translate="yes" xml:space="preserve">
          <source>To-do</source>
          <target state="translated">To-do</target>
        </trans-unit>
        <trans-unit id="7ef379c5669e534519847d1455279fa57e3cd4b2" translate="yes" xml:space="preserve">
          <source>Updated ez_setup.py to 0.6c11</source>
          <target state="translated">ez_setup.pyを0.6c11に更新しました。</target>
        </trans-unit>
        <trans-unit id="fe6f69855bbda1debd08927eac1157f9145b262b" translate="yes" xml:space="preserve">
          <source>Updated ez_setup.py to 0.7.7</source>
          <target state="translated">ez_setup.pyを0.7.7に更新</target>
        </trans-unit>
        <trans-unit id="507ff62859907be4cb3a2ad7eced9cf1519784d1" translate="yes" xml:space="preserve">
          <source>Updated portalocker to 0.3 (now maintained by Rick van Hattem)</source>
          <target state="translated">portalocker を 0.3 に更新 (現在は Rick van Hattem がメンテナンスしています)</target>
        </trans-unit>
        <trans-unit id="c71517071fdd54a8179d6045cb86fb6c5c8285a8" translate="yes" xml:space="preserve">
          <source>Updated stresstest.py to always use the correct python version when
launching sub-processes instead of the system&amp;rsquo;s default &amp;ldquo;python&amp;rdquo;.</source>
          <target state="translated">システムのデフォルトの「python」ではなく、サブプロセスを起動するときに常に正しいpythonバージョンを使用するようにstresstest.pyを更新しました。</target>
        </trans-unit>
        <trans-unit id="74e0788da0ada826238ddfc60fffbd7ddc0f253c" translate="yes" xml:space="preserve">
          <source>Use the following command to install this package:</source>
          <target state="translated">このパッケージをインストールするには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="13cce7fd076299c81b4986166f3d822791c9490e" translate="yes" xml:space="preserve">
          <source>app.py</source>
          <target state="translated">アプリパイ</target>
        </trans-unit>
        <trans-unit id="f06c85e6af13f13bf2d2737584bab320feb822c1" translate="yes" xml:space="preserve">
          <source>class is a drop-in replacement for
Python&amp;rsquo;s standard log handler</source>
          <target state="translated">クラスは、Pythonの標準ログハンドラーのドロップイン置換です</target>
        </trans-unit>
        <trans-unit id="531039cb2e0902f99711796108453af33f232f17" translate="yes" xml:space="preserve">
          <source>class=handlers.ConcurrentRotatingFileHandler</source>
          <target state="translated">class=handlers.ConcurrentRotatingFileHandler</target>
        </trans-unit>
        <trans-unit id="2553a9bd0bdcd6eb0bf6c9b17385b6c5a9a5420a" translate="yes" xml:space="preserve">
          <source>close()</source>
          <target state="translated">クローズ()</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">ファイル名</target>
        </trans-unit>
        <trans-unit id="4c7c166129f06380d97de36b173359e6227788b8" translate="yes" xml:space="preserve">
          <source>logging.config.fileConfig()</source>
          <target state="translated">logging.config.fileConfig()</target>
        </trans-unit>
        <trans-unit id="d3a23f55db3ef4ca04b49ef38c66b3c1f75f0d19" translate="yes" xml:space="preserve">
          <source>logging.ini</source>
          <target state="translated">ロギングイニ</target>
        </trans-unit>
        <trans-unit id="2df60f69ee74ecf27ea5e85076b617da0aed1ead" translate="yes" xml:space="preserve">
          <source>method to no longer assume that stream is still
open.</source>
          <target state="translated">メソッドを使用して、ストリームがまだオープンされていると仮定しないようにします。</target>
        </trans-unit>
        <trans-unit id="0e9702e970720874da53f588b6ca91ed5ca1fcc3" translate="yes" xml:space="preserve">
          <source>on Windows, where a
rotation failure means that all subsequent log events are dropped).</source>
          <target state="translated">Windowsでは、ローテーションが失敗した場合、それ以降のログイベントはすべて削除されます)。</target>
        </trans-unit>
        <trans-unit id="15cbfd057853a767a14eb00bcefd25b67f69e542" translate="yes" xml:space="preserve">
          <source>package has been installed everywhere your code will run,
Python makes it easy to gracefully fallback to the built in</source>
          <target state="translated">パッケージがあなたのコードが実行される場所にインストールされている場合、Python は組み込みの</target>
        </trans-unit>
        <trans-unit id="d80bb01ec045b4ec0982ea33d24bd2f2986db0b2" translate="yes" xml:space="preserve">
          <source>parameter is handled when given a
relative path.</source>
          <target state="translated">パラメータは相対パスが与えられたときに処理されます。</target>
        </trans-unit>
        <trans-unit id="bd6d165fd10d5312ed5565eabd2ba2c8e453af97" translate="yes" xml:space="preserve">
          <source>script and send me the patch.</source>
          <target state="translated">スクリプトとパッチを送ってください。</target>
        </trans-unit>
        <trans-unit id="4f91fb4c69a069c3817d655e8765afa21659d905" translate="yes" xml:space="preserve">
          <source>stresstest.py</source>
          <target state="translated">ストレステスト.py</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
