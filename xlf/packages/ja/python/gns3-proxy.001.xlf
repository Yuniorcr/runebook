<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/gns3-proxy/">
    <body>
      <group id="gns3-proxy">
        <trans-unit id="9e94df6e4ddc3605d337de5b7b418929ff82a544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_images.py&quot;&gt;gns3_proxy_manage_images.py&lt;/a&gt; and
&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns_proxy_manage_templates.py&quot;&gt;gns_proxy_manage_templates.py&lt;/a&gt;
additionally offer im- and export as well as deletion and listing of all images and templates on backend servers.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_images.py&quot;&gt;gns3_proxy_manage_images.py&lt;/a&gt;と &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns_proxy_manage_templates.py&quot;&gt;gns_proxy_manage_templates.pyは&lt;/a&gt; さらに、バックエンドサーバー上のすべての画像とテンプレートのim-とexport、および削除とリストを提供します。</target>
        </trans-unit>
        <trans-unit id="89c38fd31f4c23faad36d6fdbed0ef541aa751bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt; allows management of projects on backend servers, e.g., bulk import, export,
start, stop, delete projects on all or certain backend servers based on regexp.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.pyを&lt;/a&gt;使用すると、バックエンドサーバー上のプロジェクトを管理できます。たとえば、regexpに基づいて、すべてまたは特定のバックエンドサーバー上のプロジェクトを一括インポート、エクスポート、開始、停止、削除できます。</target>
        </trans-unit>
        <trans-unit id="e32dd95409b9d8f3b70d0c055470234d2f7b22f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt; facilitates the management of projects on backend servers.
Command syntax is:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_manage_projects.py&quot;&gt;gns3_proxy_manage_projects.py&lt;/a&gt;は、バックエンドサーバー上のプロジェクトの管理を容易にします。コマンド構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="72ebb92ce4af9985154035002b80217085545cdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt; facilitates the replication of projects across backend servers.
Command syntax is:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;は、バックエンドサーバー間でのプロジェクトのレプリケーションを容易にします。コマンド構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9140f44c76b4dbcd12fc2a0ff84dcae5ffd2c720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt; supports replication of projects across backend servers.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;は、バックエンドサーバー間でのプロジェクトのレプリケーションをサポートします。</target>
        </trans-unit>
        <trans-unit id="fe02ee4b39a4a39826dff9a3ce88b4fd1e52fe84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_password&lt;/strong&gt; Password to use to connect to GNS3 server backend (default: password)</source>
          <target state="translated">&lt;strong&gt;backend_password&lt;/strong&gt; GNS3サーバーバックエンドへの接続に使用するパスワード（デフォルト：パスワード）</target>
        </trans-unit>
        <trans-unit id="abf669f9a4f78f8733fc21b96542386251c7cdac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_port&lt;/strong&gt; TCP port the backend servers listen on (default: 3080, standard GNS3 server port)</source>
          <target state="translated">&lt;strong&gt;backend_port&lt;/strong&gt;バックエンドサーバーがリッスンするTCPポート（デフォルト：3080、標準GNS3サーバーポート）</target>
        </trans-unit>
        <trans-unit id="bf8fd26fa5c5021c51e9a40242bd2f4f0b6a845e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backend_user&lt;/strong&gt; Username to use to connect to GNS3 server backend (default: admin, standard GNS3 server user)</source>
          <target state="translated">&lt;strong&gt;backend_user&lt;/strong&gt; GNS3サーバーバックエンドへの接続に使用するユーザー名（デフォルト：admin、標準GNS3サーバーユーザー）</target>
        </trans-unit>
        <trans-unit id="015a99607410e65b99149fa5b1fb22e0f7f12540" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;backlog&lt;/strong&gt; Backlog of the proxy. Increase to allow the processing of more concurrent requests (default: 1000)</source>
          <target state="translated">&lt;strong&gt;backlog&lt;/strong&gt;プロキシの&lt;strong&gt;バック&lt;/strong&gt;ログ。より多くの同時リクエストを処理できるように増やす（デフォルト：1000）</target>
        </trans-unit>
        <trans-unit id="d711d1f98d98a17cbe0f389904d7d53811294a70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;client-recvbuf-size&lt;/strong&gt; Client receive buffer size (TCP socket) of the proxy in bytes. Increase this value for better performance of large requests from clients (default: 8192, recommended for production: 1048576)</source>
          <target state="translated">&lt;strong&gt;client-recvbuf-size&lt;/strong&gt;プロキシのクライアント受信バッファサイズ（TCPソケット）（バイト単位）。クライアントからの大規模な要求のパフォーマンスを向上させるには、この値を増やします（デフォルト：8192、本番環境に推奨：1048576）</target>
        </trans-unit>
        <trans-unit id="f904703e1366cbac11bee8bc1b281d38db4ccd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default_server&lt;/strong&gt; Default server backend to use if no individual mapping for the user was found. Can be omitted to use explicit mapping (default: gns3-1)</source>
          <target state="translated">&lt;strong&gt;default_server&lt;/strong&gt;ユーザーの個別のマッピングが見つからなかった場合に使用するデフォルトのサーバーバックエンド。明示的なマッピングを使用するために省略できます（デフォルト：gns3-1）</target>
        </trans-unit>
        <trans-unit id="8177061c166edc24fe0ed982b662e0a713e83087" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hostname:&lt;/strong&gt; IP address or corresponding hostname the proxy should bind to, listening for incoming requests (default: 0.0.0.0)</source>
          <target state="translated">&lt;strong&gt;ホスト名：&lt;/strong&gt;プロキシがバインドするIPアドレスまたは対応するホスト名で、着信要求をリッスンします（デフォルト：0.0.0.0）</target>
        </trans-unit>
        <trans-unit id="6abae1ade7c93e860014678747645621c5ea4e9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;log-level&lt;/strong&gt; Log level. Increase to DEBUG for debugging output. (default: INFO)</source>
          <target state="translated">&lt;strong&gt;ログレベル&lt;/strong&gt;ログレベル。出力をデバッグするには、DEBUGに増やします。（デフォルト：INFO）</target>
        </trans-unit>
        <trans-unit id="1b1c4d525585cd915c6beae4543f3fc3fb3717ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;open-file-limit&lt;/strong&gt; Maximum number of parallel open files (socket fds) of the proxy (default: 1024)</source>
          <target state="translated">&lt;strong&gt;open-file-limit&lt;/strong&gt;プロキシの並列オープンファイル（ソケットfds）の最大数（デフォルト：1024）</target>
        </trans-unit>
        <trans-unit id="3f416f83d4d4985eda94fe551dd12fbe425cbaa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;port&lt;/strong&gt; TCP port the proxy will listen on (default: 14080)</source>
          <target state="translated">&lt;strong&gt;ポート&lt;/strong&gt;プロキシがリッスンするTCPポート（デフォルト：14080）</target>
        </trans-unit>
        <trans-unit id="73c581b211bf2ecf5b12a93653ec11c2a303ad70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;server-recvbuf-size&lt;/strong&gt; Server receive buffer size (TCP socket) of the proxy in bytes. Increase this value for better performance of large responses from backend servers (default: 8192, recommended for production: 1048576)</source>
          <target state="translated">&lt;strong&gt;server-recvbuf-size&lt;/strong&gt;サーバーはプロキシのバッファサイズ（TCPソケット）をバイト単位で受信します。バックエンドサーバーからの大規模な応答のパフォーマンスを向上させるには、この値を増やします（デフォルト：8192、本番環境に推奨：1048576）</target>
        </trans-unit>
        <trans-unit id="0e4397a2e866e3e70a144ccb72eec68b1354cb52" translate="yes" xml:space="preserve">
          <source>After you changed the config of the GNS3 backend servers and restarted them, configure gns3_proxy_config.ini based
on your needs and run gns3_proxy.py. You can then, configure GNS3-GUI to use the proxy as a remote GNS3 server.
By default, the proxy listens on 0.0.0.0 and TCP port 14080.</source>
          <target state="translated">GNS3バックエンドサーバの設定を変更して再起動したら、必要に応じてgns3_proxy_config.iniを設定し、gns3_proxy.pyを実行します。その後、GNS3-GUIを設定して、プロキシをリモートGNS3サーバとして使用するようにします。デフォルトでは、プロキシは0.0.0.0.0とTCPポート14080をリッスンします。</target>
        </trans-unit>
        <trans-unit id="f89c083e1f39683bbea33236a9070310cfbf6af0" translate="yes" xml:space="preserve">
          <source>Afterwards you can use &quot;Migrate&quot; from another GNS3 host to migrate setup and images and projects to the new backend.</source>
          <target state="translated">その後、別のGNS3ホストから「Migrate」を使用して、セットアップやイメージ、プロジェクトを新しいバックエンドに移行することができます。</target>
        </trans-unit>
        <trans-unit id="34c4b14159ca32bcee1953e6e355d6a79431e0d4" translate="yes" xml:space="preserve">
          <source>Also, you can install the gns3-proxy from &lt;a href=&quot;https://pypi.org/project/gns3-proxy/&quot;&gt;PyPI&lt;/a&gt; using</source>
          <target state="translated">また、を使用して&lt;a href=&quot;https://pypi.org/project/gns3-proxy/&quot;&gt;PyPI&lt;/a&gt;からgns3-proxyをインストールできます</target>
        </trans-unit>
        <trans-unit id="a5a100d57b32268c6139386e2582b101602c9431" translate="yes" xml:space="preserve">
          <source>Basic access logging/status monitoring support</source>
          <target state="translated">基本的なアクセスログ/状態監視のサポート</target>
        </trans-unit>
        <trans-unit id="41143fef39367a16c3f74c4ea2d88e754b092b3b" translate="yes" xml:space="preserve">
          <source>Changes/enhancements to proxy.py:</source>
          <target state="translated">proxy.py への変更/拡張。</target>
        </trans-unit>
        <trans-unit id="c05bafdb56031bb64da1f1d1861f60118932c605" translate="yes" xml:space="preserve">
          <source>Concept</source>
          <target state="translated">コンセプト</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">構成</target>
        </trans-unit>
        <trans-unit id="f35d8f747abd6ef6926d9ce007f57262ffa5c663" translate="yes" xml:space="preserve">
          <source>Configuration file to allow basic proxy configuration as well as GNS3 backend server, users, mappings and request filters</source>
          <target state="translated">基本的なプロキシ設定のほか、GNS3バックエンドサーバ、ユーザ、マッピング、リクエストフィルタを許可するための設定ファイル</target>
        </trans-unit>
        <trans-unit id="4733f176c61cc5544f2c72712873e6d4d18bb8fe" translate="yes" xml:space="preserve">
          <source>Definition of users (username and password used in GNS3-GUI) for authentication and authorization at the proxy, proxy replaces credentials for backend servers</source>
          <target state="translated">プロキシでの認証と承認のためのユーザ(GNS3-GUIで使用されるユーザ名とパスワード)の定義、プロキシはバックエンドサーバの認証情報を置き換える</target>
        </trans-unit>
        <trans-unit id="187ad625bbd9dffb08a5bd9023f51fc2ea2a4b28" translate="yes" xml:space="preserve">
          <source>Deploy the GNS3 server appliance as usual. You can find further information regarding the installation of a server
for multiple clients in the &lt;a href=&quot;https://docs.gns3.com/1K_OVfincey0cUw6CP4dWVgs_pBXMdIJ6gdFGjNy8EZQ/index.html&quot;&gt;GNS3 server for multiple clients docu&lt;/a&gt;.
Make sure to allow VT-x/AMD-V for the backend server. If configured correctly, &quot;KVM support available: true&quot; should be
displayed in the menu after starting the server. The server should be configured to use a static IP address. This can
be done using the Shell or selecting the option &quot;Network&quot; (Configure network settings) from the GNS3 menu. Configure
static IP addresses using the template in /etc/netplan/90_gns3vm_static_netcfg.yaml.</source>
          <target state="translated">通常どおり、GNS3サーバーアプライアンスを展開します。複数のクライアント用のサーバーのインストールに関する詳細については、複数のクライアント用の&lt;a href=&quot;https://docs.gns3.com/1K_OVfincey0cUw6CP4dWVgs_pBXMdIJ6gdFGjNy8EZQ/index.html&quot;&gt;GNS3サーバー&lt;/a&gt;のドキュメントを参照してください。バックエンドサーバーにVT-x / AMD-Vを許可していることを確認してください。正しく構成されている場合、サーバーの起動後に「KVMサポートが利用可能：true」がメニューに表示されます。サーバーは、静的IPアドレスを使用するように構成する必要があります。これは、シェルを使用するか、GNS3メニューから[ネットワーク]（ネットワーク設定の構成）オプションを選択して実行できます。/etc/netplan/90_gns3vm_static_netcfg.yamlのテンプレートを使用して静的IPアドレスを構成します。</target>
        </trans-unit>
        <trans-unit id="6ec978fd273cde1928840836594eb788c0940488" translate="yes" xml:space="preserve">
          <source>Deploying and managing projects on gns3-proxy backends</source>
          <target state="translated">gns3-proxy バックエンドでのプロジェクトの展開と管理</target>
        </trans-unit>
        <trans-unit id="974e9e4b0248abfe62b8b90dc0b5f1a6c1d23dd6" translate="yes" xml:space="preserve">
          <source>Distributed as a single file module</source>
          <target state="translated">単一ファイルモジュールとして配布</target>
        </trans-unit>
        <trans-unit id="5a801211517a4c2cd4fbb4f9d6bd67cda7c3dbc5" translate="yes" xml:space="preserve">
          <source>Even easier is the installation using a Docker container. Simply install and run the latest version of the &lt;a href=&quot;https://cloud.docker.com/u/flex/repository/docker/flex/gns3-proxy&quot;&gt;gns3-proxy
container image&lt;/a&gt;
from Docker Hub, e.g., using</source>
          <target state="translated">さらに簡単なのは、Dockerコンテナを使用したインストールです。 Docker Hubから最新バージョンの&lt;a href=&quot;https://cloud.docker.com/u/flex/repository/docker/flex/gns3-proxy&quot;&gt;gns3-proxyコンテナイメージ&lt;/a&gt;をインストールして実行するだけです。たとえば、</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特徴</target>
        </trans-unit>
        <trans-unit id="813790a6bd9e597719e7f9186a0cf7c6ab490965" translate="yes" xml:space="preserve">
          <source>Filtering of denied requests to server backends (based on username, REST/HTTP method/URL path/headers/body (using regexp)</source>
          <target state="translated">サーババックエンドへの拒否されたリクエストのフィルタリング (ユーザ名、REST/HTTP メソッド、URL パス、ヘッダ、ボディ (正規表現を使用)に基づく)</target>
        </trans-unit>
        <trans-unit id="90a105e5ee5f4d1b35f6bd6eed1ee7b88ad0d7b8" translate="yes" xml:space="preserve">
          <source>Fixes and tweaks to allow the connection to GNS3 backends, especially keeping connections alive and leaving HTTP headers to support direct passthrough of WebSocket connections</source>
          <target state="translated">GNS3 バックエンドへの接続を可能にするための修正と微調整、特に接続を生きたままにし、HTTP ヘッダを残して WebSocket 接続の直接パススルーをサポートするようにしました。</target>
        </trans-unit>
        <trans-unit id="3aa9c3dacb56584ba5c47f525ac807845fb634b8" translate="yes" xml:space="preserve">
          <source>Further utilities provided to use the proxy:</source>
          <target state="translated">プロキシを使用するために提供されている追加のユーティリティ。</target>
        </trans-unit>
        <trans-unit id="b5c27a0d891701fe79e5761504b67009516f34cd" translate="yes" xml:space="preserve">
          <source>GNS3 Proxy based on proxy.py by Abhinav Singh (https://github.com/abhinavsingh/proxy.py)</source>
          <target state="translated">GNS3 Proxy based on proxy.py by Abhinav Singh (https://github.com/abhinavsingh/proxy.py)</target>
        </trans-unit>
        <trans-unit id="940939c8882b591d0b5fd69773e7f38af2ec1649" translate="yes" xml:space="preserve">
          <source>IPv4 and IPv6 support</source>
          <target state="translated">IPv4 および IPv6 をサポート</target>
        </trans-unit>
        <trans-unit id="6b8945f4d1f14c5a08f9368655a3f71f0ef18b19" translate="yes" xml:space="preserve">
          <source>In our Network Laboratory we use several network emulators (besides GNS3 esp., mininet, VIRL and EVE-NG) and simulators
for courses and lab sessions as well as individual research or students' projects. As GNS3 is focusing on single user
installations, several changes were necessary to provide lab session in class as well as to students working from
at home. The following figure describes our setup:</source>
          <target state="translated">私たちのネットワークラボでは、いくつかのネットワークエミュレータ(GNS3の他に、mininet、VIRL、EVE-NG)とシミュレータをコースやラボセッション、個人研究や学生のプロジェクトのために使用しています。GNS3はシングルユーザのインストールに焦点を当てているので、授業中のラボセッションや自宅で作業する学生にも提供するために、いくつかの変更が必要でした。次の図は、私たちのセットアップを説明しています。</target>
        </trans-unit>
        <trans-unit id="a439d4f2c4074d5ce1576854091789514999816a" translate="yes" xml:space="preserve">
          <source>Inherited from proxy.py:</source>
          <target state="translated">proxy.pyから継承しています。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="db7432dce307fd8829c688219499780f46c822f0" translate="yes" xml:space="preserve">
          <source>Installing a new server backend</source>
          <target state="translated">新しいサーバーバックエンドのインストール</target>
        </trans-unit>
        <trans-unit id="9f151fb5a5e2be7975872983d98cad96431c4819" translate="yes" xml:space="preserve">
          <source>Manual configuration of GNS3 server backends</source>
          <target state="translated">GNS3サーバーバックエンドの手動設定</target>
        </trans-unit>
        <trans-unit id="a8af82a44892d29e4f47712be08f5a8572cd8247" translate="yes" xml:space="preserve">
          <source>No external dependency other than standard Python library</source>
          <target state="translated">標準のPythonライブラリ以外の外部依存がない</target>
        </trans-unit>
        <trans-unit id="b3db96da1745e0123bdd9a5ae9805ce0e4f385ef" translate="yes" xml:space="preserve">
          <source>Optimized for large file uploads and downloads</source>
          <target state="translated">大容量ファイルのアップロードとダウンロードに最適化</target>
        </trans-unit>
        <trans-unit id="41d80892b3403fd7e91f7502bec19055a7b6dd33" translate="yes" xml:space="preserve">
          <source>Proof-of-concept for a Proxy Server for GNS3. The proxy is configured as a
regular remote server in the GNS3-GUI, as the GNS3-GUI client does not yet
support proxies &lt;a href=&quot;https://github.com/GNS3/gns3-gui/issues/2696&quot;&gt;gns3-gui issue #2696&lt;/a&gt;. Basic idea
is to allow the use of central GNS3 server backends for classroom / lab setups,
as used, e.g., in the &lt;a href=&quot;https://www.hs-fulda.de/en/studies/departments/applied-computer-science/about-us/laboratories/netlab/&quot;&gt;Network Laboratory of Fulda University of Applied
Sciences&lt;/a&gt;. Students can connect to the proxy and requests will be authenticated,
filtered and forwarded to appropriate backend servers. Proxy authentication
also circumvents the current lack of multi-user support in GNS3. Without the
proxy, due to the single user limitation (see &quot;MULTIPLE USERS ENVIRONMENT&quot;
in &lt;a href=&quot;https://docs.gns3.com/1ON9JBXSeR7Nt2-Qum2o3ZX0GU86BZwlmNSUgvmqNWGY/index.html&quot;&gt;GNS3 Security&lt;/a&gt;),
users will have to use the same admin credentials for GNS3 to access the
backend. Also, requests cannot be filtered and authorized (e.g., to deny
deletion/creation of projects etc.). As GNS3 does not support proxies, several
tweaks were necessary to the forked proxy.py project to allow transparent
REST and WebSocket passthrough.</source>
          <target state="translated">GNS3のプロキシサーバーの概念実証。 GNS3-GUIクライアントはプロキシ&lt;a href=&quot;https://github.com/GNS3/gns3-gui/issues/2696&quot;&gt;gns3-guiissue＃2696を&lt;/a&gt;まだサポートしていないため、プロキシはGNS3-GUIで通常のリモートサーバーとして構成されています。基本的な考え方は、たとえば&lt;a href=&quot;https://www.hs-fulda.de/en/studies/departments/applied-computer-science/about-us/laboratories/netlab/&quot;&gt;フルダ&lt;/a&gt;単科大学のネットワークラボで使用されているように、教室/ラボのセットアップに中央のGNS3サーバーバックエンドを使用できるようにすることです。学生はプロキシに接続でき、リクエストは認証され、フィルタリングされ、適切なバックエンドサーバーに転送されます。プロキシ認証は、GNS3でのマルチユーザーサポートの現在の欠如も回避します。シングルユーザー制限のため、プロキシなし（&lt;a href=&quot;https://docs.gns3.com/1ON9JBXSeR7Nt2-Qum2o3ZX0GU86BZwlmNSUgvmqNWGY/index.html&quot;&gt;GNS3セキュリティの&lt;/a&gt;「マルチユーザー環境」を参照））、ユーザーはバックエンドにアクセスするためにGNS3と同じ管理者資格情報を使用する必要があります。また、リクエストをフィルタリングして承認することはできません（たとえば、プロジェクトの削除/作成を拒否するなど）。GNS3はプロキシをサポートしていないため、フォークされたproxy.pyプロジェクトには、透過的なRESTとWebSocketのパススルーを可能にするためにいくつかの調整が必要でした。</target>
        </trans-unit>
        <trans-unit id="882d472e304919b923383d377a9c8e3abdee2a20" translate="yes" xml:space="preserve">
          <source>Redirect requests to backend servers (fixed proxying independent from request URL)</source>
          <target state="translated">リクエストをバックエンドサーバにリダイレクト (リクエストURLから独立した固定プロキシ)</target>
        </trans-unit>
        <trans-unit id="4fc3d81b2cceb1a67d6eaeeab956c6513dbaa8ef" translate="yes" xml:space="preserve">
          <source>Selection (mapping) of GNS3 backend server and possibility of load-balancing based on username (using regexp)</source>
          <target state="translated">GNS3バックエンドサーバの選択(マッピング)とユーザ名に基づく負荷分散の可能性(正規表現を使用)</target>
        </trans-unit>
        <trans-unit id="b67a9a579dce38ed5873e3012cc608281fd640ba" translate="yes" xml:space="preserve">
          <source>Settings of the proxy are stored in &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/gns3_proxy_config.ini&quot;&gt;gns3_proxy_config.ini&lt;/a&gt;.
The &lt;code&gt;[proxy]&lt;/code&gt; section contains following parameters for gns3-proxy:</source>
          <target state="translated">プロキシの設定は&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/gns3_proxy_config.ini&quot;&gt;gns3_proxy_config.iniに&lt;/a&gt;保存されます。 &lt;code&gt;[proxy]&lt;/code&gt; セクションには、GNS3プロキシのパラメータ次のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="7b8bda86df4d363fd7379df6908a43384f3ff632" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;websockets&lt;/code&gt; request proxy</source>
          <target state="translated">&lt;code&gt;http&lt;/code&gt; 、 &lt;code&gt;https&lt;/code&gt; 、および &lt;code&gt;websockets&lt;/code&gt; リクエストプロキシのサポート</target>
        </trans-unit>
        <trans-unit id="fd77829b1b974295d7f6b6fc6a2b7ff219add5a6" translate="yes" xml:space="preserve">
          <source>Support for REST calls (GET requests with body etc., not handled by proxy.py)</source>
          <target state="translated">RESTコールのサポート (proxy.pyでは処理されないボディなどを含むGETリクエスト)</target>
        </trans-unit>
        <trans-unit id="4c0a9dce4185c8cfe44f5c8a02c06c97b1de6f09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[deny]&lt;/code&gt; section defines requests that should be filtered and hence denied by the proxy (rule_id=&quot;user regexp&quot;:&quot;http_request_method&quot;:&quot;url regexp&quot;:&quot;header regexp&quot;:&quot;body regexp&quot;), e.g. to deny modification to existing projects as well as deletion and creation of projects:</source>
          <target state="translated">&lt;code&gt;[deny]&lt;/code&gt; に変更を拒否するように、例えば、濾過、したがってプロキシ（「身体正規表現」：「http_request_method」：「URL正規表現」：「ヘッダの正規表現」RULE_ID =「ユーザの正規表現」）によって拒否されなければならないセクション定義要求を既存のプロジェクト、およびプロジェクトの削除と作成：</target>
        </trans-unit>
        <trans-unit id="48925777495e7c18fcf5535523a0d76e81951d48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[mapping]&lt;/code&gt; section maps users to the backend servers (mapping_id=&quot;user regexp&quot;:&quot;server_name&quot;), e.g.:</source>
          <target state="translated">&lt;code&gt;[mapping]&lt;/code&gt; 、例えば：セクションでは、バックエンドサーバ（「SERVER_NAME」mapping_id =「ユーザーの正規表現」）にユーザーをマップします。</target>
        </trans-unit>
        <trans-unit id="b2633b8e137b43f60a95a3452a9aedcad83c3039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[servers]&lt;/code&gt; section contains the defined backend servers (server_name=ip_address), e.g.:</source>
          <target state="translated">&lt;code&gt;[servers]&lt;/code&gt; セクションには、定義されたバックエンドサーバが含まれています（SERVER_NAME = IP_ADDRESS）、例えば：</target>
        </trans-unit>
        <trans-unit id="7fd042a7c2fffc70a3b27aa44ed5cc14911f3031" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[users]&lt;/code&gt; section defines the users allowed to access the proxy and their passwords (username=password), e.g.:</source>
          <target state="translated">&lt;code&gt;[users]&lt;/code&gt; セクションには、プロキシとそのパスワード（ユーザー名=パスワード）にアクセスできるユーザーを定義して、例えば：</target>
        </trans-unit>
        <trans-unit id="89327fb74927ce66d237f2c498b1c5e359fb6dad" translate="yes" xml:space="preserve">
          <source>The first argument should lead to a gns3-proxy config containing backend port, username, password to use. Second
argument is the the IP address of the new backend to be configured.</source>
          <target state="translated">最初の引数は、バックエンドのポート、ユーザ名、使用するパスワードを含むgns3-proxyの設定へと導く必要があります。第二引数は、設定する新しいバックエンドのIPアドレスです。</target>
        </trans-unit>
        <trans-unit id="2977f862335a04915acf0859e8ffd043727bb5cb" translate="yes" xml:space="preserve">
          <source>The only change necessary in the GNS3 server backends, is to edit the regular
gns3_server.conf (available in the appliance terminal and, e.g., used to
change username password etc., see also
&lt;a href=&quot;https://docs.gns3.com/1f6uXq05vukccKdMCHhdki5MXFhV8vcwuGwiRvXMQvM0/index.html&quot;&gt;GNS3 server configuration file&lt;/a&gt;)
and change the hostname from 0.0.0.0 to the IP address the server should
listen on, e.g.:</source>
          <target state="translated">GNS3サーバーバックエンドで必要な唯一の変更は、通常のgns3_server.conf（アプライアンス端末で利用可能で、ユーザー名パスワードの変更などに使用されます&lt;a href=&quot;https://docs.gns3.com/1f6uXq05vukccKdMCHhdki5MXFhV8vcwuGwiRvXMQvM0/index.html&quot;&gt;。GNS3サーバー構成ファイル&lt;/a&gt;も参照）を 編集し、ホスト名を0.0から変更することです。サーバーがリッスンする必要のあるIPアドレスに0.0。例：</target>
        </trans-unit>
        <trans-unit id="9c1b17226d8ccea30ecb3c8d4b20833186550aa9" translate="yes" xml:space="preserve">
          <source>The provided example &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontab&lt;/a&gt; contains examples to
use gns3_proxy_manage_projects.py. For example:</source>
          <target state="translated">提供されているサンプル&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontabに&lt;/a&gt;は、gns3_proxy_manage_projects.pyを使用するための例が含まれています。例えば：</target>
        </trans-unit>
        <trans-unit id="9a49830d51b84e1b3e4c8617cf98a73180d75c2a" translate="yes" xml:space="preserve">
          <source>The provided example &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontab&lt;/a&gt; contains examples to
use gns3_proxy_replicate_projects.py. For example:</source>
          <target state="translated">提供されている例の&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;crontabに&lt;/a&gt;は、gns3_proxy_replicate_projects.pyを使用するための例が含まれています。例えば：</target>
        </trans-unit>
        <trans-unit id="2203fff8b36b1177ee2e721284812b4d1119216b" translate="yes" xml:space="preserve">
          <source>To configure the backend directly for gns3-proxy, an easier option is to use the provided &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/setup-backend.sh&quot;&gt;setup-backend.sh&lt;/a&gt;
script, e.g., by running:</source>
          <target state="translated">gns3-proxyのバックエンドを直接構成するには、次のコマンドを実行するなどして、提供されている&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/setup-backend.sh&quot;&gt;setup-backend.sh&lt;/a&gt; スクリプトを使用する方が簡単です。</target>
        </trans-unit>
        <trans-unit id="b5bcf774d99bada4ff852b144bbd0f079b24a870" translate="yes" xml:space="preserve">
          <source>Using gns3-proxy, we can use separate credentials for users accessing the proxy without needing to share the single
admin user provided by the standard gns3 server. However, no modifications are necessary to the standard GNS3 server
used in our backends and for the GNS3 client GUI. Users defined in the proxy, e.g., a group of students working
together in a group or on individual projects from at home, will be mapped to an individual backend server allowing
load balancing and failover, since GNS3 compared to other network emulation environments does not offer a cluster setup
to spread running projects and contained resources. The proxy also allows to filter and hence deny requests that
contain modifications to projects. Prepared projects are periodically synced to all server backends using cron and the
replication utility &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;.</source>
          <target state="translated">gns3-proxyを使用すると、標準のgns3サーバーによって提供される単一の管理者ユーザーを共有する必要なしに、プロキシにアクセスするユーザーに個別の資格情報を使用できます。ただし、バックエンドおよびGNS3クライアントGUIで使用される標準のGNS3サーバーを変更する必要はありません。プロキシで定義されたユーザー、たとえば、グループで一緒に作業する学生のグループ、または自宅から個々のプロジェクトで作業するユーザーは、他のネットワークエミュレーション環境と比較してGNS3が提供しないため、負荷分散とフェイルオーバーを可能にする個々のバックエンドサーバーにマップされます実行中のプロジェクトと含まれるリソースを分散するためのクラスター設定。プロキシを使用すると、プロジェクトへの変更を含むリクエストをフィルタリングして拒否することもできます。準備されたプロジェクトは、cronとレプリケーションユーティリティを使用して、すべてのサーバーバックエンドに定期的に同期されます&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_projects.py&quot;&gt;gns3_proxy_replicate_projects.py&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dda1d929ae5d8b4ffdefba567ca4c6a6b905fdf1" translate="yes" xml:space="preserve">
          <source>You can clone this repository or simply copy gns3_proxy.py and gns3_proxy_config.ini to a host that has Python &amp;gt;=3.4
installed.</source>
          <target state="translated">このリポジトリのクローンを作成するか、gns3_proxy.pyとgns3_proxy_config.iniをPython&amp;gt; = 3.4がインストールされているホストにコピーするだけです。</target>
        </trans-unit>
        <trans-unit id="fa32c3290560f89675e516a8a131e5f32e137504" translate="yes" xml:space="preserve">
          <source>You can find &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/scripts/docker-container-example&quot;&gt;sample scripts&lt;/a&gt; to run and manage
the container in the scripts directory of this repository.</source>
          <target state="translated">コンテナを実行および管理するための&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/tree/develop/scripts/docker-container-example&quot;&gt;サンプルスクリプト&lt;/a&gt;は、このリポジトリのscriptsディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="a92ab5fa6ee157ea88ce3afa98cc621060f1a919" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_images.py&quot;&gt;gns3_proxy_replicate_images.py&lt;/a&gt;
and &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_templates.py&quot;&gt;gns3_proxy_replicate_templates.py&lt;/a&gt;
to replicate all templates and images of an existing backend server to new server. These scripts can also be used
periodically using cron to replicate images and templates to all gns3-proxy backends.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_images.py&quot;&gt;gns3_proxy_replicate_images.py&lt;/a&gt; および&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_replicate_templates.py&quot;&gt;gns3_proxy_replicate_templates.py&lt;/a&gt; を使用して、既存のバックエンドサーバーのすべてのテンプレートとイメージを新しいサーバーに複製できます。これらのスクリプトは、cronを使用して定期的に使用して、イメージとテンプレートをすべてのgns3-proxyバックエンドに複製することもできます。</target>
        </trans-unit>
        <trans-unit id="a017e38c176e7f6ea03c17a688271f602cba852b" translate="yes" xml:space="preserve">
          <source>gns3-proxy</source>
          <target state="translated">ジーエヌエススリープロキシ</target>
        </trans-unit>
        <trans-unit id="99fc639eb1171729a41aad16e076a5f925158caa" translate="yes" xml:space="preserve">
          <source>gns3_proxy_manage_project.py and gns3_proxy_replicate_projects.py be combined with &lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;cron entry&lt;/a&gt; to run tasks periodically.</source>
          <target state="translated">gns3_proxy_manage_project.pyおよびgns3_proxy_replicate_projects.pyを&lt;a href=&quot;https://github.com/srieger1/gns3-proxy/blob/develop/gns3_proxy_crontab&quot;&gt;cronエントリ&lt;/a&gt;と組み合わせて、タスクを定期的に実行します。</target>
        </trans-unit>
        <trans-unit id="62c2e9ce771c7660ff0686fc54bc82abff1bb843" translate="yes" xml:space="preserve">
          <source>will export the project TestProject from gns3-1 to a ZIP file that can be used as a backup, e.g. to import later using
GNS3 GUI, or --import-from-file option, like:</source>
          <target state="translated">はgns3-1からプロジェクトTestProjectをZIPファイルにエクスポートします。これはバックアップとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="8a6d3c7eba51cb67d1b4fa0c1c3cfa296e90bf11" translate="yes" xml:space="preserve">
          <source>will import GNS3 project exported in file project.zip to backend server gns3-1. The specified project-id (must be a valid UUID v4
in GNS3) will be used for the import.</source>
          <target state="translated">は、project.zipファイルでエクスポートしたGNS3プロジェクトをバックエンドサーバgns3-1にインポートします。指定されたproject-id(GNS3で有効なUUID v4でなければなりません)がインポートに使用されます。</target>
        </trans-unit>
        <trans-unit id="cf5a9f6d7a5d732974ad60753bd845a4a60a0f8e" translate="yes" xml:space="preserve">
          <source>will replicate all GNS3 project names beginning with &quot;KommProt&quot; from the backend server gns3-master as the source to
all backend servers matching the regular expression &quot;gns3-.(.*)&quot;. The option --force tells the utility to overwrite existing
projects with the same name on the targets without further notice. The option --regenerate-mac-address searches for the
given MAC address in the projects and creates a new locally administered MAC address. This is especially necessary for
links to cloud node types in the project. Otherwise all projects will use the same address leading to duplicate MAC and
consequently duplicated IP addresses.</source>
          <target state="translated">は、&quot;KommProt &quot;で始まるすべてのGNS3プロジェクト名を、ソースとしてのバックエンドサーバgns3-masterから、正規表現 &quot;gns3-...(.*)&quot;にマッチするすべてのバックエンドサーバに複製します。オプション --force は、ユーティリティーがターゲット上の同名の既存のプロジェクトを予告なしに上書きするように指示します。オプション --regenerate-mac-address は、プロジェクト内の指定された MAC アドレスを検索し、ローカルで管理された新しい MAC アドレスを作成する。これは、プロジェクト内のクラウド ノード タイプへのリンクの場合に特に必要です。そうしないと、すべてのプロジェクトで同じアドレスを使用することになり、MACアドレスが重複し、結果としてIPアドレスが重複することになります。</target>
        </trans-unit>
        <trans-unit id="3aa359a59426621936a7bd44de75c860ef0f5957" translate="yes" xml:space="preserve">
          <source>will show the status of all projects on all backend server.</source>
          <target state="translated">はすべてのバックエンドサーバ上のすべてのプロジェクトの状態を表示します。</target>
        </trans-unit>
        <trans-unit id="2ae44aee21d566a5f003f409d221fec6043743f3" translate="yes" xml:space="preserve">
          <source>will start the project with the name TestProject on the server gns3-1 defined as a backend in gns3_proxy_config.ini.
Can be used, e.g., together with cron to start the project ahead of time for lab sessions or courses, avoiding
waiting for projects to be ready for use when students take the lab.</source>
          <target state="translated">は、gns3_proxy_config.iniでバックエンドとして定義されているgns3-1サーバ上でTestProjectという名前でプロジェクトを開始します。例えば、研究室のセッションやコースの前にプロジェクトを開始するためにcronと一緒に使用することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
