<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/flowdock-api-wrapper/">
    <body>
      <group id="flowdock-api-wrapper">
        <trans-unit id="535b372b76e4b7f47c3da3b76c796aaf7405b551" translate="yes" xml:space="preserve">
          <source>(event type) &amp;cap; (since ID - until ID) &amp;rarr; sort [desc|asc] &amp;rarr; limit N</source>
          <target state="translated">（イベントタイプ）&amp;cap;（ID以降-IDまで）&amp;rarr;ソート[desc | asc]&amp;rarr;制限N</target>
        </trans-unit>
        <trans-unit id="dea9f842d50a58bfaef3202b196664236cd3edaa" translate="yes" xml:space="preserve">
          <source>(plural).</source>
          <target state="translated">（複数）。</target>
        </trans-unit>
        <trans-unit id="cbbda320a2f6365cbd384bd94934021acf45d58d" translate="yes" xml:space="preserve">
          <source>(search keywords) &amp;cup; (match tags in mode) &amp;rarr; skip N &amp;rarr; limit N</source>
          <target state="translated">（キーワードの検索）&amp;cup;（モードでタグを一致させる）&amp;rarr;Nをスキップ&amp;rarr;Nを制限</target>
        </trans-unit>
        <trans-unit id="fbe9c083764b210b9a8dc707f530ee8462393bed" translate="yes" xml:space="preserve">
          <source>(singular) with given thread ID.</source>
          <target state="translated">（単数）指定されたスレッドID。</target>
        </trans-unit>
        <trans-unit id="54a6a40b01107b73a7ece6285879d067cd98d1e5" translate="yes" xml:space="preserve">
          <source>, refer to pages of Flowdock API documents for more information:</source>
          <target state="translated">、詳細については、FlowdockAPIドキュメントのページを参照してください。</target>
        </trans-unit>
        <trans-unit id="c8a7c932c59c3ce9e6d5fa924e119578bd3751a4" translate="yes" xml:space="preserve">
          <source>, there are only other parameters</source>
          <target state="translated">、他のパラメータのみがあります</target>
        </trans-unit>
        <trans-unit id="f364ae35573a92b54df512e488c8c65ed541480a" translate="yes" xml:space="preserve">
          <source>.
In this case, you don&amp;rsquo;t have to be the author.</source>
          <target state="translated">。この場合、作成者である必要はありません。</target>
        </trans-unit>
        <trans-unit id="a9f0f13c9ae3012e3d11ad61006c8f221f6949ee" translate="yes" xml:space="preserve">
          <source>.
To present an activity, it requires only</source>
          <target state="translated">。アクティビティを提示するには、必要なのは</target>
        </trans-unit>
        <trans-unit id="dcf4ef6622d9d61b22b299f3014af8f9ec6e2425" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>
        </trans-unit>
        <trans-unit id="e97031e5b02712739e29d1d815c7253fa3f2748a" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>
        </trans-unit>
        <trans-unit id="e5f3396b4b6306cddce6de101d7f1eb3f1cf6fd5" translate="yes" xml:space="preserve">
          <source>:url</source>
          <target state="translated">：url</target>
        </trans-unit>
        <trans-unit id="63e79700e11f6880d98148c771bffd63dfd9c403" translate="yes" xml:space="preserve">
          <source>:user:team</source>
          <target state="translated">：user：team</target>
        </trans-unit>
        <trans-unit id="e6b92a5debf52e823db1fb82ecce243e8033be8b" translate="yes" xml:space="preserve">
          <source>;
to verify the messages, invoke</source>
          <target state="translated">; メッセージを確認するには、</target>
        </trans-unit>
        <trans-unit id="ded4041cb3493fd09952b4496de9e472df009b21" translate="yes" xml:space="preserve">
          <source>A basic example is as below. Note that the result is always in &lt;em&gt;ascending&lt;/em&gt; order.</source>
          <target state="translated">基本的な例は以下のとおりです。結果は常に&lt;em&gt;昇順&lt;/em&gt;であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5fe22ee988164fdcf2cd3f2c330be64a56b4fdcc" translate="yes" xml:space="preserve">
          <source>A possible solution is emulating browser behavior to login with password, create web socket connection,
and then communicate with Flowdock server to ask change emoji.
It is too complicated, besides, user should not provide their password on chatbot;
that&amp;rsquo;s why this library does not provide emoji support, either.</source>
          <target state="translated">考えられる解決策は、ブラウザの動作をエミュレートしてパスワードでログインし、Webソケット接続を作成してから、Flowdockサーバーと通信して絵文字の変更を依頼することです。複雑すぎます。さらに、ユーザーはチャットボットでパスワードを入力しないでください。そのため、このライブラリは絵文字のサポートも提供していません。</target>
        </trans-unit>
        <trans-unit id="3207033a0824e66cca16a705d7c43d86e7295367" translate="yes" xml:space="preserve">
          <source>A thread</source>
          <target state="translated">スレッド</target>
        </trans-unit>
        <trans-unit id="5911dec63159176d87b9a2304d41a86ef13a01ed" translate="yes" xml:space="preserve">
          <source>API document list &lt;a href=&quot;https://www.flowdock.com/api/threads#/List&quot;&gt;parameters of listing flow threads&lt;/a&gt;, but not match the current Flowdock API.
In addition to parameter</source>
          <target state="translated">&lt;a href=&quot;https://www.flowdock.com/api/threads#/List&quot;&gt;フロースレッドを&lt;/a&gt;一覧表示するAPIドキュメントリストパラメータ。ただし、現在のFlowdockAPIとは一致しません。パラメータに加えて</target>
        </trans-unit>
        <trans-unit id="f0e2abbe340e98c4f3d044e52913cf714bfb6f27" translate="yes" xml:space="preserve">
          <source>API wrapper of some resources are not implemented because they are rarely used. List below:</source>
          <target state="translated">一部のリソースのAPIラッパーは、ほとんど使われていないため実装されていません。以下にリストアップします。</target>
        </trans-unit>
        <trans-unit id="6b21fb791ac05170893860c248401cd24a59b732" translate="yes" xml:space="preserve">
          <source>About</source>
          <target state="translated">について</target>
        </trans-unit>
        <trans-unit id="6580ed7415f76b6681c550d544ad1513e4342bc2" translate="yes" xml:space="preserve">
          <source>Activities is just like the item history,
therefore, each updating item operation should be presented with an activity.</source>
          <target state="translated">アクティビティは項目の履歴と同じように、更新項目の操作ごとにアクティビティを提示する必要があります。</target>
        </trans-unit>
        <trans-unit id="f918bf7f5554f4ccf23819257a47a16f282aa9bf" translate="yes" xml:space="preserve">
          <source>Add Emoji onto a Message</source>
          <target state="translated">メッセージに絵文字を追加する</target>
        </trans-unit>
        <trans-unit id="43c29e9ebf9457f8a66211468c271e356e235e97" translate="yes" xml:space="preserve">
          <source>After presenting an activity or discussion, Flowdock API will not return the resource ID of activity or discussion.
A workaround is checking the latest sent message.</source>
          <target state="translated">アクティビティやディスカッションを提示した後、Flowdock APIはアクティビティやディスカッションのリソースIDを返しません。回避策は、最新の送信メッセージを確認することです。</target>
        </trans-unit>
        <trans-unit id="5eed8892c88ab9029ce108964fe4e9ad095db309" translate="yes" xml:space="preserve">
          <source>Also, you can simply give user&amp;rsquo;s display name to get UID and then join the private channel in one line:</source>
          <target state="translated">また、ユーザーの表示名を指定してUIDを取得し、プライベートチャネルに1行で参加することもできます。</target>
        </trans-unit>
        <trans-unit id="6e0bc4c6d37459ec116121d73944ccc35930e2f3" translate="yes" xml:space="preserve">
          <source>Although this Flowdock API is flexible to combine parameters, there are still rules hidden behind API.
After trial and error, we summarize two pattern here.</source>
          <target state="translated">このFlowdock APIはパラメータの組み合わせに柔軟性がありますが、APIの裏にはまだまだルールが隠されています。試行錯誤の末、ここでは2つのパターンをまとめてみました。</target>
        </trans-unit>
        <trans-unit id="9cb22d183bc3706627203f6da05d18bfc0340cbf" translate="yes" xml:space="preserve">
          <source>Authentication and Channel</source>
          <target state="translated">認証とチャンネル</target>
        </trans-unit>
        <trans-unit id="dd02d30eac673261477069d9e54c565481956891" translate="yes" xml:space="preserve">
          <source>Authorize your app with OAuth:
&lt;a href=&quot;https://www.flowdock.com/api/production-integrations#/oauth2-authorize&quot;&gt;https://www.flowdock.com/api/production-integrations#/oauth2-authorize&lt;/a&gt;</source>
          <target state="translated">OAuthを使用してアプリを承認します：&lt;a href=&quot;https://www.flowdock.com/api/production-integrations#/oauth2-authorize&quot;&gt;https&lt;/a&gt;： //www.flowdock.com/api/production-integrations#/oauth2-authorize</target>
        </trans-unit>
        <trans-unit id="fe1676b76470d6a8b70f00abad74615a168bc0a6" translate="yes" xml:space="preserve">
          <source>Based on &lt;a href=&quot;https://www.w3.org/TR/2009/WD-eventsource-20090421/#event-stream-interpretation&quot;&gt;Server-Sent Events&lt;/a&gt;, &lt;a href=&quot;https://www.flowdock.com/api/streaming&quot;&gt;Flowdock streaming API&lt;/a&gt; sends JSON content via</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/2009/WD-eventsource-20090421/#event-stream-interpretation&quot;&gt;サーバー送信イベントに&lt;/a&gt;基づいて、&lt;a href=&quot;https://www.flowdock.com/api/streaming&quot;&gt;FlowdockストリーミングAPIは&lt;/a&gt;JSONコンテンツを経由で送信します</target>
        </trans-unit>
        <trans-unit id="0222e4db5e3c677be7a0c9faaf97779756aab5be" translate="yes" xml:space="preserve">
          <source>By constrcutors:</source>
          <target state="translated">議員によって。</target>
        </trans-unit>
        <trans-unit id="bdac990acf4dc05293901346432fe9e0b958773d" translate="yes" xml:space="preserve">
          <source>Check Presented Items</source>
          <target state="translated">プレゼント品のチェック</target>
        </trans-unit>
        <trans-unit id="b2e01a5ad1e03842bc3be793b4914b4013f4f92c" translate="yes" xml:space="preserve">
          <source>Connecting Flowdock with flow token is similar with personal API token;
the flow token bound to an individual flow is not required to specify flow.</source>
          <target state="translated">Flowdockをフロートークンで接続する方法は個人APIトークンと同様であり、個々のフローにバインドされたフロートークンはフローを指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="75011fefdfc23aaf18e8a4dcf54410a0f6df9aa0" translate="yes" xml:space="preserve">
          <source>Construct &lt;tt&gt;author&lt;/tt&gt; and &lt;tt&gt;thread&lt;/tt&gt;</source>
          <target state="translated">構築物の&lt;tt&gt;著者&lt;/tt&gt;や&lt;tt&gt;スレッド&lt;/tt&gt;</target>
        </trans-unit>
        <trans-unit id="f5cbdf6bfb51439be085b5c6b7460a7c91eabc3c" translate="yes" xml:space="preserve">
          <source>Contents</source>
          <target state="translated">内容</target>
        </trans-unit>
        <trans-unit id="756d832d0fed9a9075a36aa69c66d77c1547008b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t know which keys are necessary.</source>
          <target state="translated">どのキーが必要かわからない。</target>
        </trans-unit>
        <trans-unit id="dea929836dd0b1c41e52a5483df32459222fb04a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t remember the name of the keys.</source>
          <target state="translated">キーの名前を覚えていない。</target>
        </trans-unit>
        <trans-unit id="5903bb39ab124c6c10547567755bd02966037018" translate="yes" xml:space="preserve">
          <source>Event Monitor</source>
          <target state="translated">イベントモニタ</target>
        </trans-unit>
        <trans-unit id="bb319ced391656c126d60707bedb7922f873af25" translate="yes" xml:space="preserve">
          <source>Every message sent to a flow belongs to a thread:</source>
          <target state="translated">フローに送られたメッセージはすべてスレッドに属します。</target>
        </trans-unit>
        <trans-unit id="4cffcc80a31379fd1b83d6da7c3bb28a8795baa0" translate="yes" xml:space="preserve">
          <source>Flow token &amp;ndash; As an external service integration to access inbox.
It is generated after adding an integration onto a flow.</source>
          <target state="translated">フロートークン&amp;ndash;受信ボックスにアクセスするための外部サービス統合として。フローに統合を追加した後に生成されます。</target>
        </trans-unit>
        <trans-unit id="7426403a87507e1a190b1be913023a2dd73f9218" translate="yes" xml:space="preserve">
          <source>Flowdock API Wrapper</source>
          <target state="translated">Flowdock APIラッパー</target>
        </trans-unit>
        <trans-unit id="afca600833f139b62dc8e3100bd82fe9c20f5196" translate="yes" xml:space="preserve">
          <source>Flowdock allows user to delete an presented item, too, just like delete a message. &lt;a href=&quot;#id9&quot; id=&quot;id7&quot;&gt;[&amp;sect;]&lt;/a&gt;&lt;a href=&quot;#id10&quot; id=&quot;id8&quot;&gt;[&amp;para;]&lt;/a&gt;</source>
          <target state="translated">Flowdockを使用すると、メッセージを削除するのと同じように、ユーザーは提示されたアイテムを削除することもできます。&lt;a href=&quot;#id9&quot; id=&quot;id7&quot;&gt;[&amp;sect;] &lt;/a&gt;&lt;a href=&quot;#id10&quot; id=&quot;id8&quot;&gt;[&amp;para;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eea9a79ac79bdc0b4db49ec3948f05d7c23daacc" translate="yes" xml:space="preserve">
          <source>Flowdock allows user to tag and reply an presented item, just like tag and reply a message.</source>
          <target state="translated">Flowdockでは、メッセージにタグを付けて返信するのと同じように、提示されたアイテムにタグを付けて返信することができます。</target>
        </trans-unit>
        <trans-unit id="4f6148d75a807e5057bdcf216adf49fdd570c150" translate="yes" xml:space="preserve">
          <source>Flowdock can integrate external services, e.g. Trello, onto Flowdock Inbox,
so that you can track item status, user activities, and discussion on the item.</source>
          <target state="translated">Flowdockは、Trelloなどの外部サービスをFlowdock Inboxに統合することができるので、アイテムのステータス、ユーザーの活動、アイテムに関するディスカッションを追跡することができます。</target>
        </trans-unit>
        <trans-unit id="12426551fbb7bcb08d681a9295935aad407083bc" translate="yes" xml:space="preserve">
          <source>Flows</source>
          <target state="translated">フロー</target>
        </trans-unit>
        <trans-unit id="9e7282ea336b6c33ad3fa4aaaed56cfd6f463c03" translate="yes" xml:space="preserve">
          <source>Following content focus on introduing the usage of this wrapper;
besides, since part of &lt;a href=&quot;https://www.flowdock.com/api&quot;&gt;Flowdock API Document&lt;/a&gt; doesn&amp;rsquo;t match current behavior,
there are notifications added in each sections.</source>
          <target state="translated">以下のコンテンツは、このラッパーの使用法の紹介に焦点を当てています。さらに、&lt;a href=&quot;https://www.flowdock.com/api&quot;&gt;Flowdock APIドキュメントの&lt;/a&gt;一部が現在の動作と一致しないため、各セクションに通知が追加されています。</target>
        </trans-unit>
        <trans-unit id="0195ba2af2e909fe52b0bb28f0da7fc22c22c020" translate="yes" xml:space="preserve">
          <source>For convenience, you can join a channel in one line:</source>
          <target state="translated">便宜上、1行でチャンネルに参加することができます。</target>
        </trans-unit>
        <trans-unit id="3d5881eb24f899833bca835e60bcfa897748ee56" translate="yes" xml:space="preserve">
          <source>For example above, which present with a discussion, one can list only last discussion event,
or list content/body contains the string (obviously it does not work with activity):</source>
          <target state="translated">上記の例では、ディスカッションを提示していますが、最後のディスカッションイベントだけをリストアップすることもできますし、文字列を含むcontent/bodyをリストアップすることもできます(明らかにアクティビティとは連動しません)。</target>
        </trans-unit>
        <trans-unit id="e5c577cd25abdca7a8ff3e29e9776d9f37d225d4" translate="yes" xml:space="preserve">
          <source>For example below, it takes the results of matching event types greater than an ID and less than an ID,
then limit the first some or last some. &lt;a href=&quot;#id5&quot; id=&quot;id3&quot;&gt;[&amp;dagger;]&lt;/a&gt;&lt;a href=&quot;#id6&quot; id=&quot;id4&quot;&gt;[&amp;Dagger;]&lt;/a&gt;</source>
          <target state="translated">たとえば、以下の例では、IDより大きくIDより小さいイベントタイプの一致の結果を取得し、最初のいくつかまたは最後のいくつかを制限します。&lt;a href=&quot;#id5&quot; id=&quot;id3&quot;&gt;[&amp;dagger;] &lt;/a&gt;&lt;a href=&quot;#id6&quot; id=&quot;id4&quot;&gt;[&amp;Dagger;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1036556542711650a063dbee9973c938b81b5d58" translate="yes" xml:space="preserve">
          <source>For example below, it takes union of search results and tags matching results,
skip the newest some, then limit the first some. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[*]&lt;/a&gt;</source>
          <target state="translated">以下の例では、検索結果と結果に一致するタグの和集合を取り、最新のいくつかをスキップして、最初のいくつかを制限します。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[*]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c80151206e99b46e2b716a434c9961238ebd535b" translate="yes" xml:space="preserve">
          <source>For item description,</source>
          <target state="translated">アイテムの説明はこちら</target>
        </trans-unit>
        <trans-unit id="8482e55c2e178dafb1b5c5b936e795155d066afd" translate="yes" xml:space="preserve">
          <source>Getting started:
&lt;a href=&quot;https://www.flowdock.com/api/integration-getting-started#/getting-started&quot;&gt;https://www.flowdock.com/api/integration-getting-started#/getting-started&lt;/a&gt;</source>
          <target state="translated">はじめに：&lt;a href=&quot;https://www.flowdock.com/api/integration-getting-started#/getting-started&quot;&gt;https&lt;/a&gt;： //www.flowdock.com/api/integration-getting-started#/getting-started</target>
        </trans-unit>
        <trans-unit id="3cf7ad8fa150b62ba5554e837e33a6e8b6c01ceb" translate="yes" xml:space="preserve">
          <source>Here, this wrapper provides constructors for data structure hints.</source>
          <target state="translated">ここでは、このラッパーはデータ構造ヒントのためのコンストラクタを提供します。</target>
        </trans-unit>
        <trans-unit id="8e518198fc40b4f677da4b5ee3e0da27cb5d8a6f" translate="yes" xml:space="preserve">
          <source>Here, we assume keys are stored in a Python file, say</source>
          <target state="translated">ここでは、鍵がPythonファイルに格納されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="b6254b4893732e9fe8b71c32d7e4bb19ac3463da" translate="yes" xml:space="preserve">
          <source>If a item has been presented before and nothing changed, then it can be presented with only item id,
for example, discussion.</source>
          <target state="translated">以前に項目が提示されていて、何も変わっていない場合は、項目IDだけで提示することができます。</target>
        </trans-unit>
        <trans-unit id="e18329e28a7d36ca0fe506d5bd1ecb313a39111c" translate="yes" xml:space="preserve">
          <source>If all activities/discussions are deleted, the thread of item will be hidden on Flowdock.
However, it can still found by thread API.</source>
          <target state="translated">全てのアクティビティ/ディスカッションが削除された場合、そのアイテムのスレッドはFlowdock上で非表示になります。ただし、スレッドAPIを利用することで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="69de00c2a891a0cc33011bfedf7a84cda9640532" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#present-an-external-service-item&quot;&gt;Present an External Service Item&lt;/a&gt;, an example shows how to construct data,
which has some disadvantages during development:</source>
          <target state="translated">「&lt;a href=&quot;#present-an-external-service-item&quot;&gt;外部サービスアイテムの提示&lt;/a&gt;」の例では、データの作成方法を示していますが、開発中にいくつかの欠点があります。</target>
        </trans-unit>
        <trans-unit id="04827b77186da3819fb89ce88eae17fe594f45cf" translate="yes" xml:space="preserve">
          <source>In contrast to listing messages, the result of listing threads is always in &lt;em&gt;descending&lt;/em&gt; order.</source>
          <target state="translated">メッセージの一覧表示とは対照的に、スレッドの一覧表示の結果は常に&lt;em&gt;降順&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="7bd5dcb4e08a730995a4b3091d432a8bca9fdbf9" translate="yes" xml:space="preserve">
          <source>In the other side, the items, which aren&amp;rsquo;t presented before and don&amp;rsquo;t have both activites and discussion
after integration added, are not shown in Flowdock.</source>
          <target state="translated">一方、以前に提示されておらず、統合後のアクティビティとディスカッションの両方が追加されていないアイテムは、Flowdockに表示されません。</target>
        </trans-unit>
        <trans-unit id="899e5920ef1372292f1f4f69d3125e5a5f5a1dfb" translate="yes" xml:space="preserve">
          <source>Integration</source>
          <target state="translated">統合</target>
        </trans-unit>
        <trans-unit id="9b69a35ab52450fb70bf29cfd08bf16692f7278b" translate="yes" xml:space="preserve">
          <source>Invitations</source>
          <target state="translated">招待状</target>
        </trans-unit>
        <trans-unit id="040e3645b9e2018ad521f62621bb87083a6b3f68" translate="yes" xml:space="preserve">
          <source>It is supported in private channels as well.</source>
          <target state="translated">プライベートチャンネルでも対応しています。</target>
        </trans-unit>
        <trans-unit id="33d1fbb116d6eab6d8b14ef453e5f50fc55afca7" translate="yes" xml:space="preserve">
          <source>It seems anyone in the channel has privilege to delete activities and discussions.
If so, it is dangerous because that deleted activities or discussions are hard to retrieve again.
Moreover, in general, there is no need to delete them.</source>
          <target state="translated">チャンネル内の誰もが活動や議論を削除する権限を持っているようです。もしそうだとしたら、削除された活動や議論は再取得が困難になるので危険です。また、一般的には削除する必要はありません。</target>
        </trans-unit>
        <trans-unit id="707fb6aeff86e7207e1ca703c0e317318d58e233" translate="yes" xml:space="preserve">
          <source>Like emoji, invoking</source>
          <target state="translated">絵文字のように、呼び出し</target>
        </trans-unit>
        <trans-unit id="3443d8575aa19836189086a755a4ae300149cfea" translate="yes" xml:space="preserve">
          <source>List Messages</source>
          <target state="translated">メッセージ一覧</target>
        </trans-unit>
        <trans-unit id="0e28aeb1e8f78ee3f47201ffcf2a84661240feb8" translate="yes" xml:space="preserve">
          <source>List Threads</source>
          <target state="translated">スレッド一覧</target>
        </trans-unit>
        <trans-unit id="8f3bc44e845bb37e96484995b06ac5acc5be8c9e" translate="yes" xml:space="preserve">
          <source>May have typo not found until verifying on browser.</source>
          <target state="translated">ブラウザで確認するまでタイプミスが見つからない可能性があります。</target>
        </trans-unit>
        <trans-unit id="3fa5ad544ddd75818010f8949636c120c24cc8b8" translate="yes" xml:space="preserve">
          <source>Message types (&amp;ldquo;activity&amp;rdquo; and &amp;ldquo;discussion&amp;rdquo;):
&lt;a href=&quot;https://www.flowdock.com/api/integration-getting-started#/message-types&quot;&gt;https://www.flowdock.com/api/integration-getting-started#/message-types&lt;/a&gt;</source>
          <target state="translated">メッセージタイプ（「アクティビティ」および「ディスカッション」）：&lt;a href=&quot;https://www.flowdock.com/api/integration-getting-started#/message-types&quot;&gt;https&lt;/a&gt;： //www.flowdock.com/api/integration-getting-started#/message-types</target>
        </trans-unit>
        <trans-unit id="caef62a004c44aeebaeff5a89c90fde1b3810abc" translate="yes" xml:space="preserve">
          <source>Messaging</source>
          <target state="translated">メッセージング</target>
        </trans-unit>
        <trans-unit id="7d027be127b12e87b6e2966461f4570f67af49fe" translate="yes" xml:space="preserve">
          <source>Not Implemented</source>
          <target state="translated">未実施</target>
        </trans-unit>
        <trans-unit id="244b1328e61e6561e490e03918893c14441d2979" translate="yes" xml:space="preserve">
          <source>One can get thread ID of a message by two ways:</source>
          <target state="translated">メッセージのスレッドIDを取得するには、次の2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="740028dfdd4b9c28d30fe2b2768446cd9d6dfe97" translate="yes" xml:space="preserve">
          <source>One can know which names are required by</source>
          <target state="translated">でどの名前が必要かを知ることができます。</target>
        </trans-unit>
        <trans-unit id="07605242f7a070b43bdc103189dccf6a5cc43506" translate="yes" xml:space="preserve">
          <source>Organizations</source>
          <target state="translated">組織</target>
        </trans-unit>
        <trans-unit id="bf515ce4912aa3b86ecaf495f13edde79944f922" translate="yes" xml:space="preserve">
          <source>Personal API token &amp;ndash; As a user to access private channels and flows.
A user can get personal API token from &lt;a href=&quot;https://www.flowdock.com/account/tokens&quot;&gt;API tokens&lt;/a&gt; page.</source>
          <target state="translated">パーソナルAPIトークン&amp;ndash;プライベートチャネルおよびフローにアクセスするユーザーとして。ユーザーは、&lt;a href=&quot;https://www.flowdock.com/account/tokens&quot;&gt;APIトークン&lt;/a&gt;ページから個人のAPIトークンを取得できます。</target>
        </trans-unit>
        <trans-unit id="2bc3306587b2f487cb68d2cda6559e5298e6ad63" translate="yes" xml:space="preserve">
          <source>Present an External Service Item</source>
          <target state="translated">外部サービス項目の提示</target>
        </trans-unit>
        <trans-unit id="1c0e61790c566b71bb9fcdc1813e8926f58783d6" translate="yes" xml:space="preserve">
          <source>Private conversations</source>
          <target state="translated">プライベートな会話</target>
        </trans-unit>
        <trans-unit id="2b81e8d257885b06ee241b8ace35d69a09229589" translate="yes" xml:space="preserve">
          <source>Re-thread a Message onto a Thread</source>
          <target state="translated">スレッドへのメッセージの再スレッド</target>
        </trans-unit>
        <trans-unit id="96b403d608c59dca35730e16815fd9a419d6d37d" translate="yes" xml:space="preserve">
          <source>Refer to Flowdock API documents below to understand the relationship between items and Flowdock threads,
and activities/discussions of an items.</source>
          <target state="translated">下記のFlowdock APIドキュメントを参照して、アイテムとFlowdockスレッドの関係、アイテムのアクティビティ/ディスカッションを理解してください。</target>
        </trans-unit>
        <trans-unit id="84a6c9b37b0f6b3f36760f1e05c07543e70b2d42" translate="yes" xml:space="preserve">
          <source>Reply Message onto a Thread</source>
          <target state="translated">スレッドにメッセージを返信する</target>
        </trans-unit>
        <trans-unit id="fd9588c461139acecd109dcdc2d046c5628378b9" translate="yes" xml:space="preserve">
          <source>Send, Edit, and Delete a Message</source>
          <target state="translated">メッセージの送信、編集、削除</target>
        </trans-unit>
        <trans-unit id="560203cdd5efc539bf0b8b09436d5d09debc4acc" translate="yes" xml:space="preserve">
          <source>Since there may be newer message has been sent during checking the latest sent message,
it requires some restrictions to assure the last one is which you sent.</source>
          <target state="translated">最新の送信済みメッセージを確認している間に、より新しいメッセージが送信されている可能性がありますので、最後の1つはあなたが送信したものであることを保証するためにいくつかの制限を必要とします。</target>
        </trans-unit>
        <trans-unit id="2eb56be3c2d93cdab0c52e677e3167dfddb30ac5" translate="yes" xml:space="preserve">
          <source>Sources</source>
          <target state="translated">情報源</target>
        </trans-unit>
        <trans-unit id="1cd2625fb8d33c7f657bc892ec3fb266c343a3fb" translate="yes" xml:space="preserve">
          <source>Supported status colors are as below; constructor</source>
          <target state="translated">サポートされているステータスカラーは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1420276b39a656456369cf4b0a3b8badb8867676" translate="yes" xml:space="preserve">
          <source>Tag a Message</source>
          <target state="translated">メッセージのタグ</target>
        </trans-unit>
        <trans-unit id="d53f85b5b7085dcd38c08edeaa0ae7b00be62a6e" translate="yes" xml:space="preserve">
          <source>Tag, Reply, and Delete a Presented Item</source>
          <target state="translated">提示されたアイテムにタグを付け、返信し、削除する</target>
        </trans-unit>
        <trans-unit id="348c9003fc4df018f313c4ac9d2e5d0212b0d63d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uid&lt;/code&gt; above is &amp;ldquo;user ID&amp;rdquo;, which can be found in the tail of a private channel URI.</source>
          <target state="translated">上記の &lt;code&gt;uid&lt;/code&gt; は「ユーザーID」であり、プライベートチャネルURIの末尾にあります。</target>
        </trans-unit>
        <trans-unit id="9866e193118161688599b090af1b2b9d650755d4" translate="yes" xml:space="preserve">
          <source>The components of an integration message:
&lt;a href=&quot;https://www.flowdock.com/api/integration-getting-started#/components-of-a-message&quot;&gt;https://www.flowdock.com/api/integration-getting-started#/components-of-a-message&lt;/a&gt;</source>
          <target state="translated">統合メッセージのコンポーネント：&lt;a href=&quot;https://www.flowdock.com/api/integration-getting-started#/components-of-a-message&quot;&gt;https&lt;/a&gt;： //www.flowdock.com/api/integration-getting-started#/components-of-a-message</target>
        </trans-unit>
        <trans-unit id="572f60a55e2cf9c87709f16b75dd4280b830a3ff" translate="yes" xml:space="preserve">
          <source>The expected result is as below.
Note that &amp;ldquo;ExternalService&amp;rdquo; shown in the figure is the integration name rather than the external service name,
thus it is recommended to set integration name the same as external service name.</source>
          <target state="translated">期待される結果は以下のとおりです。なお、図に示す「ExternalService」は外部サービス名ではなく統合名であるため、統合名は外部サービス名と同じにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="45d923d37338c6f2ea235dad92788ce4b880222c" translate="yes" xml:space="preserve">
          <source>The origin data:</source>
          <target state="translated">原点データです。</target>
        </trans-unit>
        <trans-unit id="7a44bba1ca67a982cbfc2b71f1faaf6af0c8c35e" translate="yes" xml:space="preserve">
          <source>The other workaround is more stable: presenting every thread with optional attribute</source>
          <target state="translated">もう一つの回避策は、より安定した方法です。</target>
        </trans-unit>
        <trans-unit id="784cb28a84eb456a412592e7c8f03f7f73dee959" translate="yes" xml:space="preserve">
          <source>The parameter</source>
          <target state="translated">パラメータ</target>
        </trans-unit>
        <trans-unit id="f5e659586187bda02594033aafea77f67937f7c1" translate="yes" xml:space="preserve">
          <source>The tags prefixed with colon, like</source>
          <target state="translated">のようにコロンで始まるタグは</target>
        </trans-unit>
        <trans-unit id="0a6dddff26e573ac987a992f56630ae5b1f87fce" translate="yes" xml:space="preserve">
          <source>There is no further constructor for</source>
          <target state="translated">のコンストラクタはありません。</target>
        </trans-unit>
        <trans-unit id="076c612b303b199ced32b01758aeac24046aafbe" translate="yes" xml:space="preserve">
          <source>This API wrapper aim to &lt;strong&gt;summarize&lt;/strong&gt; Flowdock API usage with &lt;strong&gt;intuitive&lt;/strong&gt; implementation,
in order to make development simpler, like creating chatbots, integrating services, and monitoring Flowdock flows.</source>
          <target state="translated">このAPIラッパー&lt;strong&gt;は、&lt;/strong&gt;チャットボットの作成、サービスの統合、Flowdockフローの監視など、開発を簡素化するために、FlowdockAPIの使用法を&lt;strong&gt;直感的な&lt;/strong&gt;実装で&lt;strong&gt;要約する&lt;/strong&gt;ことを目的と&lt;strong&gt;して&lt;/strong&gt;います。</target>
        </trans-unit>
        <trans-unit id="aae6d267802384d24a98eac3dcdd597c5699c4c5" translate="yes" xml:space="preserve">
          <source>Those data maitained on the external servicesa are treated as items, every item has its ID and name, as shown below:</source>
          <target state="translated">外部サービスに登録されているデータはアイテムとして扱われ、以下のようにアイテムごとにIDと名前がついています。</target>
        </trans-unit>
        <trans-unit id="ac4c11d64a42f63431281a32006e511f8ef26718" translate="yes" xml:space="preserve">
          <source>Those methods are supported in private channels as well.</source>
          <target state="translated">これらのメソッドはプライベートチャンネルでもサポートされています。</target>
        </trans-unit>
        <trans-unit id="e36b408f53167719b876a01f6414e265179fa601" translate="yes" xml:space="preserve">
          <source>To access resources of private channel/flows/external service integrations, Flowdock provides 2 kinds of tokens:</source>
          <target state="translated">プライベートチャネル/フロー/外部サービス統合のリソースにアクセスするために、Flowdockは2種類のトークンを提供しています。</target>
        </trans-unit>
        <trans-unit id="4fd1cd2c8c53070e7d64e6cbdee44cc2d4794544" translate="yes" xml:space="preserve">
          <source>To connect Flowdock with personal API token, simply invoke</source>
          <target state="translated">パーソナルAPIトークンを使ってFlowdockに接続するには、以下を呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="b277f4d55161cef1a426922185a3a77e161101de" translate="yes" xml:space="preserve">
          <source>To contribute the wrapper, refer to development guide in</source>
          <target state="translated">ラッパーを提供するには、以下の開発ガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="0ac9b57357c3dd5cd43a6a6d0ccfaab7a3eb4ab1" translate="yes" xml:space="preserve">
          <source>To edit/delete a message, invoke</source>
          <target state="translated">メッセージを編集/削除するには</target>
        </trans-unit>
        <trans-unit id="f1218a6a0e26de3dc79eff9097dfd83aff28f0ef" translate="yes" xml:space="preserve">
          <source>To install the wrapper, use</source>
          <target state="translated">ラッパーをインストールするには</target>
        </trans-unit>
        <trans-unit id="862fb67bee0bd09d4437a137c250dc3efa882fb4" translate="yes" xml:space="preserve">
          <source>To list messages contains link or Email, there is a way as below:</source>
          <target state="translated">リンクやメールを含むメッセージをリストアップするには、以下のような方法があります。</target>
        </trans-unit>
        <trans-unit id="02c5bb98e037aa853b7c1a0fd6f4993f265a00a9" translate="yes" xml:space="preserve">
          <source>To list messages mentioned user with given &lt;a href=&quot;#display-name&quot;&gt;display name&lt;/a&gt;, for example, &amp;ldquo;@team&amp;rdquo;:</source>
          <target state="translated">たとえば「@team」など、指定された&lt;a href=&quot;#display-name&quot;&gt;表示名&lt;/a&gt;でユーザーに言及されたメッセージを一覧表示するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="bcfbf73ad514a9dcf7ffdecb827bc6a25dd36a85" translate="yes" xml:space="preserve">
          <source>To list messages under a thread, invoke</source>
          <target state="translated">スレッドの下にメッセージを一覧表示するには</target>
        </trans-unit>
        <trans-unit id="68db664758e7595ffe8e7a375734956eff7ed6ff" translate="yes" xml:space="preserve">
          <source>To list messages with some constraints, invoke</source>
          <target state="translated">制約のあるメッセージをリストアップするには</target>
        </trans-unit>
        <trans-unit id="500070fe81cf778b70d34321b583dd0b9fe0e410" translate="yes" xml:space="preserve">
          <source>To list the threads under the flow, invoke</source>
          <target state="translated">フローの下にあるスレッドをリストアップするには</target>
        </trans-unit>
        <trans-unit id="4b83b57eab26d323b4ee1b053cfeecbe5e999b00" translate="yes" xml:space="preserve">
          <source>To list uploaded files, both ways below work:</source>
          <target state="translated">アップロードされたファイルを一覧表示するには、以下の両方の方法が有効です。</target>
        </trans-unit>
        <trans-unit id="b41de7ca1723914377d4667887356c373d58b6ba" translate="yes" xml:space="preserve">
          <source>To monitor a flow, invoke</source>
          <target state="translated">フローを監視するには</target>
        </trans-unit>
        <trans-unit id="f0dabf42984b4ee6c51f89b3ecf3cbe67f7adee1" translate="yes" xml:space="preserve">
          <source>To override the tags of an existing message, set keyword argument</source>
          <target state="translated">既存のメッセージのタグを上書きするには、キーワード引数に</target>
        </trans-unit>
        <trans-unit id="5a257c2637abb60b5b94c12a401a90858d444e3f" translate="yes" xml:space="preserve">
          <source>To present a user activity or discussion on the item requires define a user first.</source>
          <target state="translated">項目に関するユーザーの活動や議論を提示するには、まずユーザーを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="6aa5b955fb80b24268703ce853ad0b9d09281014" translate="yes" xml:space="preserve">
          <source>To send a message onto the thread, invoke</source>
          <target state="translated">スレッドにメッセージを送信するには</target>
        </trans-unit>
        <trans-unit id="51307b31b5326b31be7d1cf3894c2db5eccb01ff" translate="yes" xml:space="preserve">
          <source>To send a message with tags in a flow, set keyword argument</source>
          <target state="translated">フロー内のタグでメッセージを送信するには、キーワード引数に</target>
        </trans-unit>
        <trans-unit id="9fdd98aa46b0f6704c63ee63bc0f0aafa693ee45" translate="yes" xml:space="preserve">
          <source>To send message in a flow, invoke</source>
          <target state="translated">フロー内でメッセージを送信するには</target>
        </trans-unit>
        <trans-unit id="5f8fa21a7840b5a281fb66ac14cfd81a7ccbdf97" translate="yes" xml:space="preserve">
          <source>To upload a file in a flow, invoke</source>
          <target state="translated">フロー内でファイルをアップロードするには、次のように呼び出します。</target>
        </trans-unit>
        <trans-unit id="43ca7f6925b260b62a06ae6f259751e07524b720" translate="yes" xml:space="preserve">
          <source>Unfortunately, invoking</source>
          <target state="translated">残念ながら、呼び出し</target>
        </trans-unit>
        <trans-unit id="1712546b9c603cf14f126bf9f95b249645e67389" translate="yes" xml:space="preserve">
          <source>UpdateAction</source>
          <target state="translated">更新動作</target>
        </trans-unit>
        <trans-unit id="3a1e04bfb0ba8d8a284c60c48f98c1e924c588ff" translate="yes" xml:space="preserve">
          <source>Upload and Download a File</source>
          <target state="translated">ファイルのアップロードとダウンロード</target>
        </trans-unit>
        <trans-unit id="57f2b181d0a5e79a147ea1cdf41457f58dbbb3c9" translate="yes" xml:space="preserve">
          <source>Users</source>
          <target state="translated">利用者</target>
        </trans-unit>
        <trans-unit id="82af35034d2a9df19e42d7138a9ce387e4abf48e" translate="yes" xml:space="preserve">
          <source>ViewAction</source>
          <target state="translated">ビューアクション</target>
        </trans-unit>
        <trans-unit id="20f81990cffe0efc412442d4582ee33e4f070c32" translate="yes" xml:space="preserve">
          <source>What will be sent via &lt;a href=&quot;https://www.flowdock.com/api/streaming&quot;&gt;Flowdock streaming API&lt;/a&gt; is undocumented and really interesting.
For example, one can monitoring whether or not a user is typing.</source>
          <target state="translated">&lt;a href=&quot;https://www.flowdock.com/api/streaming&quot;&gt;FlowdockストリーミングAPI&lt;/a&gt;を介して送信されるものは文書化されておらず、非常に興味深いものです。たとえば、ユーザーが入力しているかどうかを監視できます。</target>
        </trans-unit>
        <trans-unit id="4e7abc2f8de6e4bb4547a149a2efe56247d3db3c" translate="yes" xml:space="preserve">
          <source>When sending a new message, those special tags would be generated by backend;
in addition, backend eliminates duplicated tags and not change the order of tags.
An example of simply adding and removing tags is as below:</source>
          <target state="translated">新しいメッセージを送信する際には、これらの特殊なタグがバックエンドで生成されますが、バックエンドはタグの重複を排除し、タグの順番を変更しません。単純にタグを追加したり削除したりする例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="1d440438a1bbf9c7d1641086c973ea2a3f2a853d" translate="yes" xml:space="preserve">
          <source>While delete an uploaded file, the response of &amp;ldquo;filtering last some&amp;rdquo; becomes incorrect,
and will be recovered later about 5 minutes.</source>
          <target state="translated">アップロードしたファイルを削除していると、「最後の一部をフィルタリング」の応答が不正確になり、約5分後に回復します。</target>
        </trans-unit>
        <trans-unit id="d4f42e13cde1d71d76fbf8817b9e82dacd7e0156" translate="yes" xml:space="preserve">
          <source>With given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="e4fcd4609155c756073c926ad3ee930fd75c6e15" translate="yes" xml:space="preserve">
          <source>With no restriction, simply invoke</source>
          <target state="translated">何の制限もなく、単に</target>
        </trans-unit>
        <trans-unit id="47b779b56f58bcd0a7bb428623417fe0b148eaf9" translate="yes" xml:space="preserve">
          <source>With the client, you can &amp;ldquo;join&amp;rdquo; the different channels with the same client.</source>
          <target state="translated">クライアントを使用すると、同じクライアントでさまざまなチャネルに「参加」できます。</target>
        </trans-unit>
        <trans-unit id="a82524e5c2c92b0ec7df9d98cad39224eac920a9" translate="yes" xml:space="preserve">
          <source>You can edit both content and tags at the same time; in this case, you have to be the author.</source>
          <target state="translated">コンテンツとタグの両方を同時に編集することができます。</target>
        </trans-unit>
        <trans-unit id="42853147387f240c8f9d5af18c01e205858a8922" translate="yes" xml:space="preserve">
          <source>You can get UID by user&amp;rsquo;s display name (&amp;ldquo;Display name&amp;rdquo; field in &lt;a href=&quot;https://www.flowdock.com/account/edit&quot;&gt;Edit profile&lt;/a&gt; page) as below.</source>
          <target state="translated">以下のように、ユーザーの表示名（&lt;a href=&quot;https://www.flowdock.com/account/edit&quot;&gt;プロファイル編集&lt;/a&gt;ページの「表示名」フィールド）でUIDを取得できます。</target>
        </trans-unit>
        <trans-unit id="1ff6cb486cf419dc2761e99fa905ff20a6c47d46" translate="yes" xml:space="preserve">
          <source>[&amp;Dagger;]</source>
          <target state="translated">[&amp;Dagger;]</target>
        </trans-unit>
        <trans-unit id="cec71e235375c4c4cbcbda661ac51aa975df58b6" translate="yes" xml:space="preserve">
          <source>[&amp;dagger;]</source>
          <target state="translated">[&amp;dagger;]</target>
        </trans-unit>
        <trans-unit id="24b9c2c77b6281022b31b070d7742320cdba03ac" translate="yes" xml:space="preserve">
          <source>[&amp;para;]</source>
          <target state="translated">[&amp;para;]</target>
        </trans-unit>
        <trans-unit id="c19ebd0bad2e3cb002648d9d67a32d2e0e63df06" translate="yes" xml:space="preserve">
          <source>[&amp;sect;]</source>
          <target state="translated">[&amp;sect;]</target>
        </trans-unit>
        <trans-unit id="ebbdc33c103355d1a029df57f5752955b85095d9" translate="yes" xml:space="preserve">
          <source>[&amp;spades;]</source>
          <target state="translated">[&amp;spades;]</target>
        </trans-unit>
        <trans-unit id="cf8fd7d7ba3583e2536872ab05324ee9006259ea" translate="yes" xml:space="preserve">
          <source>above, are used on web page display.</source>
          <target state="translated">上記のように、Webページの表示に使用されています。</target>
        </trans-unit>
        <trans-unit id="326b426f9ac7a96ed6baf62f8838565416d27df8" translate="yes" xml:space="preserve">
          <source>actions</source>
          <target state="translated">ぎょうむ</target>
        </trans-unit>
        <trans-unit id="ce6cb75758302fd9f3dbbaa90ac4cd927d16c95e" translate="yes" xml:space="preserve">
          <source>already:</source>
          <target state="translated">すでに</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="7c61df38567d8ac19fb839d304575e0f7b065d8d" translate="yes" xml:space="preserve">
          <source>and then invoke</source>
          <target state="translated">を呼び出して</target>
        </trans-unit>
        <trans-unit id="4ef4c6704a4a3a59504a33aa42ed8b4ed369844a" translate="yes" xml:space="preserve">
          <source>are supported.</source>
          <target state="translated">がサポートされています。</target>
        </trans-unit>
        <trans-unit id="f64cd8e32f5ac7553c150bd05d6f2252bb73f68d" translate="yes" xml:space="preserve">
          <source>author</source>
          <target state="translated">書き手</target>
        </trans-unit>
        <trans-unit id="7fbff8493e9e220dd2b50b5bb3678b414542e22f" translate="yes" xml:space="preserve">
          <source>because its data structure is flexible
and would be bound to external services just like</source>
          <target state="translated">のように、データ構造が柔軟で、外部サービスにバインドされるからです。</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">胴体</target>
        </trans-unit>
        <trans-unit id="5ebd5e6985f5bdf4535dffa9f9eaae4a5092585e" translate="yes" xml:space="preserve">
          <source>can be either comma seperated string (as document described) or a list of string in fact.</source>
          <target state="translated">はカンマで区切られた文字列(ドキュメントに記載されているように)か、実際には文字列のリストのいずれかです。</target>
        </trans-unit>
        <trans-unit id="8faad8f3bc8e87090964c8ec88299908fba5a4fc" translate="yes" xml:space="preserve">
          <source>comment.</source>
          <target state="translated">どのように。</target>
        </trans-unit>
        <trans-unit id="f11a107f38328604e9320754224b60375758bca1" translate="yes" xml:space="preserve">
          <source>connect</source>
          <target state="translated">繋ぐ</target>
        </trans-unit>
        <trans-unit id="d7789d046f85d0aab99507854bbc415b95c1ccec" translate="yes" xml:space="preserve">
          <source>could validate the supported colors.</source>
          <target state="translated">はサポートされている色を検証することができました。</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">データ</target>
        </trans-unit>
        <trans-unit id="51b1b6da9682510d130ebd09243ca990fa2d0c5f" translate="yes" xml:space="preserve">
          <source>data structure is complex. See example below. &lt;a href=&quot;#id13&quot; id=&quot;id11&quot;&gt;[#]&lt;/a&gt;&lt;a href=&quot;#id14&quot; id=&quot;id12&quot;&gt;[&amp;spades;]&lt;/a&gt;</source>
          <target state="translated">データ構造は複雑です。以下の例を参照してください。&lt;a href=&quot;#id13&quot; id=&quot;id11&quot;&gt;[＃] &lt;/a&gt;&lt;a href=&quot;#id14&quot; id=&quot;id12&quot;&gt;[&amp;spades;]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dc26ca96a338084a66965286f4daf0f6f25be1d" translate="yes" xml:space="preserve">
          <source>defines how Flowdock send HTTP requests to the external service.
It will not work if external services are in private network;
in this case, consider</source>
          <target state="translated">は、Flowdockがどのように外部サービスにHTTPリクエストを送信するかを定義します。外部サービスがプライベートネットワーク内にある場合は動作しません。</target>
        </trans-unit>
        <trans-unit id="9485989ff514b5106b7738850fd73c23e8c1e3f7" translate="yes" xml:space="preserve">
          <source>delete</source>
          <target state="translated">抹消</target>
        </trans-unit>
        <trans-unit id="817248fb77fb5c2cef3f2c732ad257cb1fb9c5e4" translate="yes" xml:space="preserve">
          <source>download</source>
          <target state="translated">ダウンロード</target>
        </trans-unit>
        <trans-unit id="9ead47a82a0d25985f22f10651d1f93b3abba317" translate="yes" xml:space="preserve">
          <source>edit</source>
          <target state="translated">へんしゅう</target>
        </trans-unit>
        <trans-unit id="82d50d9042decb175894924272dd3b5a14cd3716" translate="yes" xml:space="preserve">
          <source>events</source>
          <target state="translated">行事</target>
        </trans-unit>
        <trans-unit id="30ad1e2df18447774b14cf286397dc70511f2670" translate="yes" xml:space="preserve">
          <source>external_url</source>
          <target state="translated">外部URL</target>
        </trans-unit>
        <trans-unit id="eec417dc528bc5805b9608033c2fc0eee6697dc9" translate="yes" xml:space="preserve">
          <source>field of events,
and this API wrapper loads JSON content into Python dict.</source>
          <target state="translated">イベントのフィールドで、このAPIラッパーはPythonのdictにJSONコンテンツをロードします。</target>
        </trans-unit>
        <trans-unit id="e4c01d131035e0e53362d312579890ae3d77b1dc" translate="yes" xml:space="preserve">
          <source>flowdock.py</source>
          <target state="translated">フロードック.py</target>
        </trans-unit>
        <trans-unit id="3ce3c04b42bf994352078b4da89d619ddbc96453" translate="yes" xml:space="preserve">
          <source>for changing behavior,
and will not change the order of result.</source>
          <target state="translated">行動を変えるためのものであり、結果の順番を変えるものではありません。</target>
        </trans-unit>
        <trans-unit id="512e2fb316373a4054d0804fba21ed9e1dca3ed3" translate="yes" xml:space="preserve">
          <source>for item and</source>
          <target state="translated">アイテムと</target>
        </trans-unit>
        <trans-unit id="3b6a16d7c615879e02517b3e294311f83b7eeb1c" translate="yes" xml:space="preserve">
          <source>for the activity description;
to present a discusion, it requires not only</source>
          <target state="translated">活動の説明のために、discusionを提示するためには、単に</target>
        </trans-unit>
        <trans-unit id="0a22b758cb392495a7954af8be909e0ef0e96e31" translate="yes" xml:space="preserve">
          <source>for the description of discussion itself
(e.g. &amp;ldquo;comment&amp;rdquo;) but also</source>
          <target state="translated">ディスカッション自体の説明（「コメント」など）だけでなく、</target>
        </trans-unit>
        <trans-unit id="b39f88d16a779842de3c458ee4494fee642cfc95" translate="yes" xml:space="preserve">
          <source>for the discussion content.</source>
          <target state="translated">議論の内容について。</target>
        </trans-unit>
        <trans-unit id="64bfe9a88508ec8d1e317cb130d9d2d643333c62" translate="yes" xml:space="preserve">
          <source>for user, you can present an activity or discussion by</source>
          <target state="translated">を使用して、活動や議論を提示することができます。</target>
        </trans-unit>
        <trans-unit id="398eebf37c698e4f2f2bf52b740d508ad204b4e2" translate="yes" xml:space="preserve">
          <source>for workaround.</source>
          <target state="translated">を使用して回避します。</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">貰う</target>
        </trans-unit>
        <trans-unit id="e4d68c5a97e466323c2fbe2b655ab578066a1cd5" translate="yes" xml:space="preserve">
          <source>limit</source>
          <target state="translated">限界</target>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="translated">羅列</target>
        </trans-unit>
        <trans-unit id="be2f52fcd698c6c13c173754ad87d3e131db58f3" translate="yes" xml:space="preserve">
          <source>of the channel.</source>
          <target state="translated">チャンネルの</target>
        </trans-unit>
        <trans-unit id="cc8a1154ffe19c0a3e9a70f40610fb632fd50664" translate="yes" xml:space="preserve">
          <source>only works with parameter</source>
          <target state="translated">パラメータでのみ動作します。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">或いは</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">ピップ</target>
        </trans-unit>
        <trans-unit id="65b79327a7ab394468eae8422dd234a714b1f3df" translate="yes" xml:space="preserve">
          <source>pipenv</source>
          <target state="translated">パイナップルベンブ</target>
        </trans-unit>
        <trans-unit id="50644481c7cd620b733fcc580e5d6745665dac74" translate="yes" xml:space="preserve">
          <source>present</source>
          <target state="translated">げんざい</target>
        </trans-unit>
        <trans-unit id="fd5a5ef180f45662010778fe8398005797c84740" translate="yes" xml:space="preserve">
          <source>returns an iterator.
An example that monitoring a flow and sending a message concurrently as below:</source>
          <target state="translated">はイテレータを返します。以下のように、フローを監視しながら同時にメッセージを送信する例です。</target>
        </trans-unit>
        <trans-unit id="37ed539c0cef13959abd980bebf30f4922f606e3" translate="yes" xml:space="preserve">
          <source>send</source>
          <target state="translated">送る</target>
        </trans-unit>
        <trans-unit id="9fb29051f2217270a7b253a39f820310d85a78f0" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="translated">見せる</target>
        </trans-unit>
        <trans-unit id="2eb888e95f113117c63e0d526f68ad90267a45e6" translate="yes" xml:space="preserve">
          <source>since</source>
          <target state="translated">以後</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">並び替え</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">態勢</target>
        </trans-unit>
        <trans-unit id="9b6ef5a1a499923ea7c52002ec03583cd27287ea" translate="yes" xml:space="preserve">
          <source>tags</source>
          <target state="translated">tags</target>
        </trans-unit>
        <trans-unit id="e03fc47d1054e607150a57d1f56bd2f3d24d513f" translate="yes" xml:space="preserve">
          <source>test_tokens.py</source>
          <target state="translated">テストtokens.py</target>
        </trans-unit>
        <trans-unit id="c283e375ed8cebf3b8d1b5101fd51bb522961656" translate="yes" xml:space="preserve">
          <source>thread</source>
          <target state="translated">thread</target>
        </trans-unit>
        <trans-unit id="c91e11a1f2a2f6f290fe5039f78f07f318049442" translate="yes" xml:space="preserve">
          <source>threads</source>
          <target state="translated">threads</target>
        </trans-unit>
        <trans-unit id="3c6de1b7dd91465d437ef415f94f36afc1fbc8a8" translate="yes" xml:space="preserve">
          <source>title</source>
          <target state="translated">題名</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">にとって</target>
        </trans-unit>
        <trans-unit id="7aa2e5d1a3ebe7cda610d75fcb7599d53e99746d" translate="yes" xml:space="preserve">
          <source>to get message properties.</source>
          <target state="translated">を使用して、メッセージのプロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="bbd077dfed8cbbbf6750dc65c136b8b161cecea1" translate="yes" xml:space="preserve">
          <source>to get the last one:</source>
          <target state="translated">を使って最後の一枚を手に入れよう。</target>
        </trans-unit>
        <trans-unit id="fcc00609cb900939c559287f0c69b608e6778d30" translate="yes" xml:space="preserve">
          <source>to initialize a &amp;ldquo;client&amp;rdquo;.</source>
          <target state="translated">「クライアント」を初期化します。</target>
        </trans-unit>
        <trans-unit id="48109170e539d0f52f2c16e15cbd0a394eab5493" translate="yes" xml:space="preserve">
          <source>to re-thread a sent message doesn&amp;rsquo;t work;
Flowdock doesn&amp;rsquo;t provide API for re-threading, either.</source>
          <target state="translated">送信されたメッセージを再スレッド化することは機能しません。 Flowdockは、再スレッド化のためのAPIも提供していません。</target>
        </trans-unit>
        <trans-unit id="5729a1368b4e7f820ff984cc61d45c8aa8f03cf1" translate="yes" xml:space="preserve">
          <source>to set emoji doesn&amp;rsquo;t work;
Flowdock doesn&amp;rsquo;t provide API for emoji, either.</source>
          <target state="translated">絵文字を設定することはできません。Flowdockは絵文字用のAPIも提供していません。</target>
        </trans-unit>
        <trans-unit id="dad64cc6f975d048a78e4283720db3e86293ca8e" translate="yes" xml:space="preserve">
          <source>under</source>
          <target state="translated">under</target>
        </trans-unit>
        <trans-unit id="b310f4d4d89b8570184b9777ad7d90fc1df20457" translate="yes" xml:space="preserve">
          <source>until</source>
          <target state="translated">まで</target>
        </trans-unit>
        <trans-unit id="bb73aaafa1596e5425dc514a361ad4ef658f2758" translate="yes" xml:space="preserve">
          <source>upload</source>
          <target state="translated">アップロード</target>
        </trans-unit>
        <trans-unit id="1968c112b432001c6f6df789446bdcb3f22a0b3d" translate="yes" xml:space="preserve">
          <source>which means the item URI actually. With the URI, one can indentify the thread.
Since it is almost impossible multiple integration presenting the same item,
one can assure the last activity/discussion is sent by themselves.</source>
          <target state="translated">これは実際にはアイテムのURIを意味します。URIがあれば、スレッドを特定することができます。同じ項目を提示する複数の統合はほとんど不可能なので、最後の活動/議論は自分自身で送信されることを保証することができます。</target>
        </trans-unit>
        <trans-unit id="7a377fc230f27c8cbf02c44fc4fb7da54a135a55" translate="yes" xml:space="preserve">
          <source>with parameters defined in &lt;a href=&quot;https://www.flowdock.com/api/messages&quot;&gt;List Messages &amp;ndash; Parameters&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.flowdock.com/api/messages&quot;&gt;リストメッセージ&amp;ndash;パラメータで&lt;/a&gt;定義されたパラメータを使用します。</target>
        </trans-unit>
        <trans-unit id="b73a30477521d5dc264906ed8c58e6d15c5e7f16" translate="yes" xml:space="preserve">
          <source>with the file path;
to download the file, get URI path by</source>
          <target state="translated">でファイルのパスを取得します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
