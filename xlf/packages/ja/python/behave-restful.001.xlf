<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/behave-restful/">
    <body>
      <group id="behave-restful">
        <trans-unit id="f17c935d78d8025c4ff04d002202621472fb1374" translate="yes" xml:space="preserve">
          <source>.feature</source>
          <target state="translated">。特徴</target>
        </trans-unit>
        <trans-unit id="8ea74df87fad70ead7ffb3650322e7497b4ec273" translate="yes" xml:space="preserve">
          <source>Although, Behave Restful is implemented in &lt;a href=&quot;http://www.python.org&quot;&gt;python&lt;/a&gt; and
uses &lt;a href=&quot;https://pythonhosted.org/behave/&quot;&gt;behave&lt;/a&gt; as underlying framework, it can
test services implemented in any language as easy as:</source>
          <target state="translated">Behave Restfulは&lt;a href=&quot;http://www.python.org&quot;&gt;Python&lt;/a&gt;で実装され、基本的なフレームワークとして&lt;a href=&quot;https://pythonhosted.org/behave/&quot;&gt;動作&lt;/a&gt;しますが、次のように簡単に任意の言語で実装されたサービスをテストできます。</target>
        </trans-unit>
        <trans-unit id="351e4daed345f2c8b5fe908c179ee921947fde29" translate="yes" xml:space="preserve">
          <source>And under</source>
          <target state="translated">また、以下のように</target>
        </trans-unit>
        <trans-unit id="b8094bbf8aa262c6c50d4310241e1ccb735deced" translate="yes" xml:space="preserve">
          <source>As you can see in the example, we send a POST request to the specified url with
a JSON payload, and we can validate the result very easy. First, we verify that
the status of the response is CREATED (it succeeds). Then we validate the
response JSON body using the expected &lt;a href=&quot;http://json-schema.org/&quot;&gt;JSON Schema&lt;/a&gt;.
Finally, we validate specific values in the response using
&lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt;</source>
          <target state="translated">例からわかるように、JSONペイロードを使用して、指定されたURLにPOSTリクエストを送信し、結果を非常に簡単に検証できます。まず、応答のステータスがCREATED（成功）であることを確認します。次に、予期される&lt;a href=&quot;http://json-schema.org/&quot;&gt;JSONスキーマ&lt;/a&gt;を使用して応答JSON本文を検証します。最後に、&lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt;を使用して応答の特定の値を検証します</target>
        </trans-unit>
        <trans-unit id="110b6add49421587b83cabd70cca640075714133" translate="yes" xml:space="preserve">
          <source>Behave Restful is a Behavior Driven Development (BDD) framework based on
&lt;a href=&quot;https://pythonhosted.org/behave/&quot;&gt;behave&lt;/a&gt;, that implements a language suitable
to test and validate REST APIs and Services. It leverages the power of the
&lt;a href=&quot;https://github.com/cucumber/cucumber/wiki/Gherkin&quot;&gt;gherkin&lt;/a&gt; language to write
business readable tests that validate the behavior of REST APIs.</source>
          <target state="translated">振る舞いのRestfulはに基づいて開発（BDD）フレームワークドリブン行動で &lt;a href=&quot;https://pythonhosted.org/behave/&quot;&gt;振る舞い&lt;/a&gt;、そのテストおよび検証のREST APIおよびサービスに適した実装言語。&lt;a href=&quot;https://github.com/cucumber/cucumber/wiki/Gherkin&quot;&gt;ガーキン&lt;/a&gt;言語の力を利用して 、REST APIの動作を検証するビジネスで読み取り可能なテストを記述します。</target>
        </trans-unit>
        <trans-unit id="c2dbbf414f2c22d8504a7476c8d7bbbce85dbd40" translate="yes" xml:space="preserve">
          <source>Implements Gherking language for REST services.</source>
          <target state="translated">REST サービスのための Gherking 言語を実装します。</target>
        </trans-unit>
        <trans-unit id="1409eb5d5ef9262a28bad7592a0fb7271260da02" translate="yes" xml:space="preserve">
          <source>In the root of your</source>
          <target state="translated">あなたの根っこの部分で</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">セットアップ</target>
        </trans-unit>
        <trans-unit id="c364d94cb5cbcc27f829b4029ae0cf60ec6e8e7c" translate="yes" xml:space="preserve">
          <source>To add support for</source>
          <target state="translated">のサポートを追加するには</target>
        </trans-unit>
        <trans-unit id="3872b089ae064a49ce5a8d6971b62e528d745510" translate="yes" xml:space="preserve">
          <source>Use pip to install behave-restful in your project</source>
          <target state="translated">プロジェクトに behave-restful をインストールするには pip を使用します。</target>
        </trans-unit>
        <trans-unit id="f6a2dab741ac7f9f7391535bb934e2a1bbc018f5" translate="yes" xml:space="preserve">
          <source>You can do this simply by adding two boilerplate files to your project:</source>
          <target state="translated">これは、プロジェクトに2つのボイラープレートファイルを追加することで簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="60ad4f3d2e9b04a9b0a0bb97ab6a8a4c018b785e" translate="yes" xml:space="preserve">
          <source>__init__.py</source>
          <target state="translated">__init__.py</target>
        </trans-unit>
        <trans-unit id="c7d4c1b0859e93a58aa2045c97c6d54040328c27" translate="yes" xml:space="preserve">
          <source>add this</source>
          <target state="translated">これを加える</target>
        </trans-unit>
        <trans-unit id="6cd2b41d441174b0570e9d508b53d1c08393037d" translate="yes" xml:space="preserve">
          <source>behave-restful</source>
          <target state="translated">振舞う</target>
        </trans-unit>
        <trans-unit id="3156c72b3e61651ad6b0afdfddd2254e01e92052" translate="yes" xml:space="preserve">
          <source>directory, add this</source>
          <target state="translated">ディレクトリに追加します。</target>
        </trans-unit>
        <trans-unit id="ef7d19d085c41481345d5aa44b1f37d6d542bee5" translate="yes" xml:space="preserve">
          <source>environment.py</source>
          <target state="translated">かんきょうピー</target>
        </trans-unit>
        <trans-unit id="4f944542e06cd6f28fa72685120ec1c9e2b84a27" translate="yes" xml:space="preserve">
          <source>features</source>
          <target state="translated">顔ぶれ</target>
        </trans-unit>
        <trans-unit id="0c18ce6aaf6d3425612ad3fc2207c928a213d6c4" translate="yes" xml:space="preserve">
          <source>features/steps</source>
          <target state="translated">機能/ステップ</target>
        </trans-unit>
        <trans-unit id="d0998110d4f271571ea799f05b153504a56056c0" translate="yes" xml:space="preserve">
          <source>file:</source>
          <target state="translated">ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="90681506e2986a95d0223eb53d496a9fad16069e" translate="yes" xml:space="preserve">
          <source>files, you need to include behave-restful&amp;rsquo;s environment and step definitions.</source>
          <target state="translated">ファイル、behave-restfulの環境とステップ定義を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="c5eb2f9701545cd965cdffe5d8e13aa07314e343" translate="yes" xml:space="preserve">
          <source>steps in your</source>
          <target state="translated">歩み</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
