<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/mbed-ls/">
    <body>
      <group id="mbed-ls">
        <trans-unit id="27069c4e704d4c4ceb6ebeac64720d6d6112e85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt; - This accesses the file system before doing any filtering. It is the most accurate option and is recommended for most uses. This is the default behavior of the command-line tool and the API.</source>
          <target state="translated">&lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt; -これは、フィルタリングを実行する前にファイルシステムにアクセスします。これは最も正確なオプションであり、ほとんどの用途に推奨されます。これは、コマンドラインツールとAPIのデフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="444e7b8fe6ec41eb1dbb9b4fbf899037cdacf6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSInteraction.NEVER&lt;/code&gt; - This is the fastest option but also potentially the least accurate. It never touches the file system of the devices. It uses only the information available through the USB descriptors. This is appropriate for use in a highly controlled environment (such as an automated Continuous Integration setup). &lt;strong&gt;This has the potential to provide incorrect names and data. It may also lead to devices not being detected at all.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;FSInteraction.NEVER&lt;/code&gt; -これは最速のオプションですが、精度が最も低くなる可能性もあります。デバイスのファイルシステムに触れることはありません。USB記述子を介して利用可能な情報のみを使用します。これは、高度に制御された環境（自動化された継続的インテグレーションセットアップなど）での使用に適しています。&lt;strong&gt;これにより、誤った名前とデータが提供される可能性があります。また、デバイスがまったく検出されない可能性もあります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9acc57a9aa98aacb8a3d0754e9ce20ea97ba658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSInterfaction.AfterFilter&lt;/code&gt; - This accesses the file system but only after application of the &lt;code&gt;filter_function&lt;/code&gt;. This can lead to speed increases but at the risk of filtering on inaccurate information.</source>
          <target state="translated">&lt;code&gt;FSInterfaction.AfterFilter&lt;/code&gt; -これはファイルシステムにアクセスしますが、 &lt;code&gt;filter_function&lt;/code&gt; の適用後にのみアクセスします。これにより速度が向上する可能性がありますが、不正確な情報をフィルタリングするリスクがあります。</target>
        </trans-unit>
        <trans-unit id="da8679b923167eb816a849dda787dd29c1cfa5a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;'+'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;デフォルト：&lt;/strong&gt; &lt;code&gt;'+'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64cad439d8fc41ba703f369df90f4dc2a73b92da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;'daplink'&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;デフォルト：&lt;/strong&gt; &lt;code&gt;'daplink'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a081a9ca83b30fd62287bf46536a662e6b830d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;デフォルト：&lt;/strong&gt; &lt;code&gt;FSInteraction.BeforeFilter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c89ef4e3ddfa81047ca81999094467a19a3a48b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;デフォルト：&lt;/strong&gt; &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1af24f2c81df6856d9fa1eb5559a82f98a9df0b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;デフォルト：&lt;/strong&gt; &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed55f4be49dfe64c5ede41c611d0a82a13aad4b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;デフォルト：&lt;/strong&gt; &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ae5dad53f0a152b6a932beeb51c97886190a507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Due to a quirk in the parameter formatting, the command-line can interpret &lt;code&gt;-*&lt;/code&gt; as another parameter instead of a value. It is necessary to use the complete &lt;code&gt;--mock=&quot;-*&quot;&lt;/code&gt; syntax, so the command-line interprets each part of the command correctly.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;パラメーターのフォーマットに問題があるため、コマンドラインで &lt;code&gt;-*&lt;/code&gt; を値ではなく別のパラメーターとして解釈できます。完全な &lt;code&gt;--mock=&quot;-*&quot;&lt;/code&gt; 構文を使用する必要があるため、コマンドラインはコマンドの各部分を正しく解釈します。</target>
        </trans-unit>
        <trans-unit id="941ebbbfd0e1b6910a3291098be93386444118d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If your OS is Windows, please follow the installation instructions &lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;for the serial port driver&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; OSがWindowsの場合&lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;は、シリアルポートドライバーの&lt;/a&gt;インストール手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="4f0d9ba7746d1c70a55dbd3921863feb059dc741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;https://github.com/armmbed/mbed-cli&quot;&gt;Mbed CLI&lt;/a&gt; has a similarly-named command &lt;code&gt;mbed ls&lt;/code&gt;; however, the commands are different. Be sure to omit the space when using the Mbed LS command-line tool.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;&lt;a href=&quot;https://github.com/armmbed/mbed-cli&quot;&gt;mbed CLIに&lt;/a&gt;は、同様の名前のコマンド &lt;code&gt;mbed ls&lt;/code&gt; ます。ただし、コマンドは異なります。Mbed LSコマンドラインツールを使用するときは、必ずスペースを省略してください。</target>
        </trans-unit>
        <trans-unit id="b511e0ce6ffd2d321b491362f76847958e4e2c24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prerequisites:&lt;/strong&gt; You need to have &lt;a href=&quot;https://www.python.org/download/releases/2.7/&quot;&gt;Python 2.7.x&lt;/a&gt; or &lt;a href=&quot;https://www.python.org/downloads/release/python-362/&quot;&gt;Python 3.6.x&lt;/a&gt; installed on your system.</source>
          <target state="translated">&lt;strong&gt;前提条件：&lt;/strong&gt;システムに&lt;a href=&quot;https://www.python.org/download/releases/2.7/&quot;&gt;Python2.7.x&lt;/a&gt;または&lt;a href=&quot;https://www.python.org/downloads/release/python-362/&quot;&gt;Python3.6.xが&lt;/a&gt;インストールされている必要があります。</target>
        </trans-unit>
        <trans-unit id="e3ed2432385bb9a98a9273181e00a11af363e8ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Required&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;必須&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c2fdad86254cfddc9b35e908ef4a64b758483f0" translate="yes" xml:space="preserve">
          <source>A link to the J-Link firmware binary if possible</source>
          <target state="translated">可能であれば、J-Link ファームウェアのバイナリへのリンクです。</target>
        </trans-unit>
        <trans-unit id="aab00ca8d0c26dd7535a9026f8513a0e77d843c1" translate="yes" xml:space="preserve">
          <source>Add an entry to the &lt;code&gt;daplink&lt;/code&gt; section of the &lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt;&lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt; &lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;daplink&lt;/code&gt; セクションにエントリを追加します。</target>
        </trans-unit>
        <trans-unit id="ed6c75c3a55a6dafe9ebe34e7678f37141a965b3" translate="yes" xml:space="preserve">
          <source>Adding a new platform with a supported debugger</source>
          <target state="translated">サポートされているデバッガで新しいプラットフォームを追加する</target>
        </trans-unit>
        <trans-unit id="9d7df9739bfb3d55bc0ebcfd56102b0c11b34c05" translate="yes" xml:space="preserve">
          <source>Adding a new type of debugger</source>
          <target state="translated">新しいタイプのデバッガの追加</target>
        </trans-unit>
        <trans-unit id="ba4df3d379fbf1a210503ae0c74ea45965c23c40" translate="yes" xml:space="preserve">
          <source>Adding platform support</source>
          <target state="translated">プラットフォームサポートの追加</target>
        </trans-unit>
        <trans-unit id="384e57a72eddded96d201977f863c09c8dee4e21" translate="yes" xml:space="preserve">
          <source>Adding support for DAPLink-compatible platforms (DAPLink, ST-LINK, and CMSIS-DAP)</source>
          <target state="translated">DAPLink対応プラットフォーム(DAPLink、ST-LINK、CMSIS-DAP)のサポート追加</target>
        </trans-unit>
        <trans-unit id="cf6398cb90d6ed5f321099c5fc109a060e7b7e26" translate="yes" xml:space="preserve">
          <source>Adding support for J-Link platforms</source>
          <target state="translated">J-Linkプラットフォームへの対応を追加</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">引数</target>
        </trans-unit>
        <trans-unit id="7505721212c47b50446c6adefda7e0c45840626e" translate="yes" xml:space="preserve">
          <source>As a lambda function:</source>
          <target state="translated">ラムダ関数として</target>
        </trans-unit>
        <trans-unit id="d3860a6a335daabd593293e6f04310b5340c11a0" translate="yes" xml:space="preserve">
          <source>As a normal function definition:</source>
          <target state="translated">通常の関数の定義として</target>
        </trans-unit>
        <trans-unit id="ed61cd463f1c3c6f7ce5e0ecdec6720fb01e1e21" translate="yes" xml:space="preserve">
          <source>As well as the related but legacy &lt;a href=&quot;https://github.com/mbedmicro/CMSIS-DAP&quot;&gt;CMSIS-DAP&lt;/a&gt; firmware</source>
          <target state="translated">関連するがレガシーの&lt;a href=&quot;https://github.com/mbedmicro/CMSIS-DAP&quot;&gt;CMSIS-DAP&lt;/a&gt;ファームウェアと同様に</target>
        </trans-unit>
        <trans-unit id="3ae03f42cf8b6df3c634810cda895f3bede0fd1a" translate="yes" xml:space="preserve">
          <source>Chooses which device type entries are retrieved from the platform database.</source>
          <target state="translated">どのデバイスタイプのエントリをプラットフォームデータベースから取得するかを選択します。</target>
        </trans-unit>
        <trans-unit id="b574f2e6be67e57c80811b8a2d243201fea30187" translate="yes" xml:space="preserve">
          <source>Code coverage</source>
          <target state="translated">コードカバレッジ</target>
        </trans-unit>
        <trans-unit id="48808a0068ecad9365b667728617fc992cbdc5ea" translate="yes" xml:space="preserve">
          <source>Command-line</source>
          <target state="translated">コマンドライン</target>
        </trans-unit>
        <trans-unit id="ffd7c5b20d9366e0a2a2cdb3f0847ed14585052e" translate="yes" xml:space="preserve">
          <source>DAPLink</source>
          <target state="translated">ディーエーピーリンク</target>
        </trans-unit>
        <trans-unit id="a8c5a3b94826af621da5a375d345ece1f610fcc9" translate="yes" xml:space="preserve">
          <source>Development moved</source>
          <target state="translated">開発移転</target>
        </trans-unit>
        <trans-unit id="c222a7bb9ac91eb0efc6dfad1873ac9f664d98a6" translate="yes" xml:space="preserve">
          <source>Device unique identifier</source>
          <target state="translated">デバイス固有の識別子</target>
        </trans-unit>
        <trans-unit id="065c4a219ca6bba31819c269b0328aed07cf9abd" translate="yes" xml:space="preserve">
          <source>Each device must have a unique identifier. This identifier has two parts: a &lt;strong&gt;platform ID&lt;/strong&gt; and a &lt;strong&gt;platform unique string&lt;/strong&gt;.</source>
          <target state="translated">各デバイスには一意の識別子が必要です。この識別子には、&lt;strong&gt;プラットフォームID&lt;/strong&gt;と&lt;strong&gt;プラットフォーム固有の文字列の&lt;/strong&gt;2つの部分があり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3489538eb14b2a12d05635ddbb70d67e376e53e6" translate="yes" xml:space="preserve">
          <source>For example, to change the &lt;code&gt;serial_port&lt;/code&gt; of the K64F with a &lt;code&gt;target_id&lt;/code&gt; of &lt;code&gt;0240000032044e4500257009997b00386781000097969900&lt;/code&gt;, the &lt;code&gt;mbedls.json&lt;/code&gt; file contains the following:</source>
          <target state="translated">例えば、変更する &lt;code&gt;serial_port&lt;/code&gt; でK64Fのを &lt;code&gt;target_id&lt;/code&gt; の &lt;code&gt;0240000032044e4500257009997b00386781000097969900&lt;/code&gt; 、 &lt;code&gt;mbedls.json&lt;/code&gt; のファイルの内容は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="78ce0e22bc4db13d8d2ed3f085f34853e27277c5" translate="yes" xml:space="preserve">
          <source>If a new type of debugger is being introduced to Mbed LS with the platform, you will need to add the Vendor ID to the &lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;identification map&lt;/a&gt;. You will also need to assign the correct &quot;update from the filesystem&quot; logic &lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;here&lt;/a&gt;. If the debugger is compatible with the files presented by DAPLink, you may reuse that implementation when updating the device information from the filesystem. If it is not, you may need to write your own update logic. If you need guidance on this, please ask for it when you submit an issue or a pull request.</source>
          <target state="translated">プラットフォームを備えたMbedLSに新しいタイプのデバッガーが導入されている場合は、&lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;識別マップに&lt;/a&gt;ベンダーIDを追加する必要があります。また、ここで正しい「ファイルシステムからの更新」ロジックを割り当てる必要があり&lt;a href=&quot;../../src/mbed_os_tools/detect/lstools_base.py&quot;&gt;ます&lt;/a&gt;。デバッガーがDAPLinkによって提示されたファイルと互換性がある場合は、ファイルシステムからデバイス情報を更新するときにその実装を再利用できます。そうでない場合は、独自の更新ロジックを作成する必要があります。これに関するガイダンスが必要な場合は、問題またはプルリクエストを送信するときにガイダンスを求めてください。</target>
        </trans-unit>
        <trans-unit id="27c4db5d8360922366195f06f5df940ed4caf304" translate="yes" xml:space="preserve">
          <source>If a platform meets the Mbed Enabled technical requirements (stated above), it can be added to Mbed LS.</source>
          <target state="translated">プラットフォームがMbed Enabledの技術要件(上記)を満たしていれば、Mbed LSに追加することができます。</target>
        </trans-unit>
        <trans-unit id="6d92870fb590e5ccc29d8f9b455ec25715e0f433" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;'+'&lt;/code&gt;, the mocked platform is enabled. If &lt;code&gt;'-'&lt;/code&gt;, the mocked platform is disabled.</source>
          <target state="translated">&lt;code&gt;'+'&lt;/code&gt; に設定すると、モックされたプラットフォームが有効になります。場合は &lt;code&gt;'-'&lt;/code&gt; 、嘲笑プラットフォームが無効になっています。</target>
        </trans-unit>
        <trans-unit id="d966fec8b00dd3e6a4cdff1402946b6cbda4f643" translate="yes" xml:space="preserve">
          <source>If your J-Link platform does not follow this convention, please raise an issue with the following information:</source>
          <target state="translated">お使いのJ-Linkプラットフォームがこの規約に従っていない場合は、以下の情報をもとに問題提起をお願いします。</target>
        </trans-unit>
        <trans-unit id="7fecaf93c27ea93376ca21270e2f3bd5338c93cf" translate="yes" xml:space="preserve">
          <source>If your platform's name is &lt;code&gt;NEW_PLATFORM&lt;/code&gt; and it has platform ID of &lt;code&gt;9999&lt;/code&gt;, the new entry should be:</source>
          <target state="translated">プラットフォームの名前が &lt;code&gt;NEW_PLATFORM&lt;/code&gt; で、プラットフォームIDが &lt;code&gt;9999&lt;/code&gt; の場合、新しいエントリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="bc92c249533ddcfe955be7b16aa51ec2df784791" translate="yes" xml:space="preserve">
          <source>Install Mbed LS from sources with the following commands:</source>
          <target state="translated">以下のコマンドでソースからMbed LSをインストールします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="96d0cf4660194fdfbac644302310f6124c5e1dc2" translate="yes" xml:space="preserve">
          <source>Installation from PyPI (Python Package Index)</source>
          <target state="translated">PyPI (Python パッケージインデックス)からのインストール</target>
        </trans-unit>
        <trans-unit id="9747b78a5614166db6f72d19c44d36053023a65b" translate="yes" xml:space="preserve">
          <source>Installation from Python sources</source>
          <target state="translated">Pythonソースからのインストール</target>
        </trans-unit>
        <trans-unit id="0b930968a527590e6defa86b90fec0dcafac10a4" translate="yes" xml:space="preserve">
          <source>Instead of a platform ID, there is a target-unique string (&lt;code&gt;X729475D28G&lt;/code&gt; in this case). This should correspond with the unique part of the link present in the &lt;code&gt;Board.html&lt;/code&gt; or &lt;code&gt;User Guide.html&lt;/code&gt;. This seems to vary among the platforms. In general, try following the links in each file. You want to use the url that links to a product page that references the platform. The J-Link logic in Mbed LS assumes that the url has the target-unique string on the end (after the last &lt;code&gt;/&lt;/code&gt; character). In the above example, the expected url structure would be &lt;code&gt;http://www.nordicsemi.com/X729475D28G&lt;/code&gt;.</source>
          <target state="translated">プラットフォームIDの代わりに、ターゲット固有の文字列（この場合は &lt;code&gt;X729475D28G&lt;/code&gt; ）があります。これは、 &lt;code&gt;Board.html&lt;/code&gt; またはUserGuide.htmlにあるリンクの一意の部分に対応している必要があり &lt;code&gt;User Guide.html&lt;/code&gt; 。これはプラットフォームによって異なるようです。一般に、各ファイルのリンクをたどってみてください。プラットフォームを参照する製品ページにリンクするURLを使用するとします。 Mbed LSのJ-Linkロジックは、URLの末尾（最後の &lt;code&gt;/&lt;/code&gt; 文字の後）にtarget-unique文字列があることを前提としています。上記の例では、予想されるURL構造は &lt;code&gt;http://www.nordicsemi.com/X729475D28G&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f6f3b5c60023b4a1db5ce9388c1152a21c9485bf" translate="yes" xml:space="preserve">
          <source>It is possible to change the returned results for certain platforms depending on the current directory. This is especially useful when developing new platforms.</source>
          <target state="translated">カレントディレクトリに応じて、特定のプラットフォームに対して返される結果を変更することが可能です。これは特に新しいプラットフォームを開発するときに便利です。</target>
        </trans-unit>
        <trans-unit id="39a11a364b10f19422233335ca59c833b1ecadec" translate="yes" xml:space="preserve">
          <source>It provides the following information for all connected boards in a console (terminal) output:</source>
          <target state="translated">コンソール(端子)出力に接続されているすべてのボードについて、以下の情報を提供します。</target>
        </trans-unit>
        <trans-unit id="e1eca7b7865658734ad00ffbac2c02a03e29b290" translate="yes" xml:space="preserve">
          <source>J-Link</source>
          <target state="translated">ジェイリンク</target>
        </trans-unit>
        <trans-unit id="4c402e234d6a0468078fbd3d220c71f65bf8ea29" translate="yes" xml:space="preserve">
          <source>J-Link detection works differently due to the information present on the platform's filesystem. All new entries should be added to the &lt;code&gt;jlink&lt;/code&gt; section of the &lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt;&lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プラットフォームのファイルシステムに情報が存在するため、J-Link検出の動作は異なります。すべての新しいエントリは、&lt;a href=&quot;../../src/mbed_os_tools/detect/platform_database.py&quot;&gt; &lt;code&gt;DEFAULT_PLATFORM_DB&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;jlink&lt;/code&gt; セクションに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">ジェイソン</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">リナックス</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">ロギング</target>
        </trans-unit>
        <trans-unit id="79a7aea8af1e177c03709e6e26d0881fc1d858f1" translate="yes" xml:space="preserve">
          <source>Mbed Enabled technical requirements overview</source>
          <target state="translated">Mbed Enabled 技術要件の概要</target>
        </trans-unit>
        <trans-unit id="97bdccbfa44092b96f922a85c040daf6702c58f3" translate="yes" xml:space="preserve">
          <source>Mbed LS</source>
          <target state="translated">エムベッドエルエス</target>
        </trans-unit>
        <trans-unit id="4c320a7161be83e7ba2ff5533e7b7f8786c9fa27" translate="yes" xml:space="preserve">
          <source>Mbed LS assigns a unique name to each platform when this is set to &lt;code&gt;True&lt;/code&gt;. The unique name takes the form of &lt;code&gt;K64F[0]&lt;/code&gt;, where the number between the brackets is an incrementing value. This name is accessible through the dictionary member &lt;code&gt;platform_unique_name&lt;/code&gt; in the returned platform data.</source>
          <target state="translated">Mbed LSは、これが &lt;code&gt;True&lt;/code&gt; に設定されている場合、各プラットフォームに一意の名前を割り当てます。一意の名前は &lt;code&gt;K64F[0]&lt;/code&gt; 形式を取ります。ここで、角かっこの間の数字は増分値です。この名前には、返されたプラットフォームデータのディクショナリメンバー &lt;code&gt;platform_unique_name&lt;/code&gt; からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5b203fc6a3997fff6f733afa4e94c35f715f75de" translate="yes" xml:space="preserve">
          <source>Mbed LS currently supports the following types of debuggers:</source>
          <target state="translated">Mbed LSは現在、以下のタイプのデバッガをサポートしています。</target>
        </trans-unit>
        <trans-unit id="8379de91a7d39891bd787716503a054d122d0f3f" translate="yes" xml:space="preserve">
          <source>Mbed LS is a Python (2 and 3) module that detects and lists Mbed Enabled devices connected to the host computer. The Mbed OS team publishes Mbed LS on PyPI. It works on all major operating systems (Windows, Linux and Mac OS X).</source>
          <target state="translated">Mbed LSは、ホストコンピュータに接続されたMbed Enabledデバイスを検出して一覧表示するPython(2,3)モジュールです。Mbed OSチームはMbed LSをPyPI上で公開しています。すべての主要なオペレーティングシステム(Windows、Linux、Mac OS X)で動作します。</target>
        </trans-unit>
        <trans-unit id="41f79d20c54e774b80047654ef5c408442ece22b" translate="yes" xml:space="preserve">
          <source>Mbed LS reads more data from the file system on each device when this is set to &lt;code&gt;True&lt;/code&gt;. It can provide useful management data but also takes more time to execute.</source>
          <target state="translated">これが &lt;code&gt;True&lt;/code&gt; に設定されている場合、MbedLSは各デバイスのファイルシステムからより多くのデータを読み取ります。有用な管理データを提供できますが、実行に時間がかかります。</target>
        </trans-unit>
        <trans-unit id="079d098ed6b868f06d0aa6a4673cc5b9e49f56a7" translate="yes" xml:space="preserve">
          <source>Mbed LS requires you to mount a platform before it shows up in the results. Many Linux systems do not automatically mount USB devices. We recommend you use an automounter to manage this for you.</source>
          <target state="translated">Mbed LSは、結果に表示される前にプラットフォームをマウントする必要があります。多くのLinuxシステムはUSBデバイスを自動的にマウントしません。これを管理するためにオートマウンターを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c27ed87aca5b063909135a22ac91b3bae0145721" translate="yes" xml:space="preserve">
          <source>Mbed LS uses the Python &lt;code&gt;logging&lt;/code&gt; module for all of its logging needs. Mbed LS uses the logger &lt;code&gt;&quot;mbedls&quot;&lt;/code&gt; as its root, and all other loggers start with &lt;code&gt;&quot;mbedls.&quot;&lt;/code&gt;. Configuring the Python root logger automatically redirects all of the Mbed LS logs to the configured endpoint. When using the Python API, configure logging, such as by calling &lt;code&gt;logging.basicConfig()&lt;/code&gt;.</source>
          <target state="translated">Mbed LSは、すべてのロギングニーズにPython &lt;code&gt;logging&lt;/code&gt; モジュールを使用します。 &lt;code&gt;&quot;mbedls&quot;&lt;/code&gt; LSは、ロガー「mbedls」をルートとして使用し、他のすべてのロガーは &lt;code&gt;&quot;mbedls.&quot;&lt;/code&gt; 。Pythonルートロガーを構成すると、すべてのMbedLSログが構成済みのエンドポイントに自動的にリダイレクトされます。Python APIを使用する場合は、 &lt;code&gt;logging.basicConfig()&lt;/code&gt; を呼び出すなどして、ロギングを構成します。</target>
        </trans-unit>
        <trans-unit id="be1b963ff7bc34323e988a022f055a24a329431f" translate="yes" xml:space="preserve">
          <source>Mbed OS platform name.</source>
          <target state="translated">Mbed OSのプラットフォーム名。</target>
        </trans-unit>
        <trans-unit id="c953a4cf5a580bbcfdfe4e28d784b940635670d6" translate="yes" xml:space="preserve">
          <source>Mocking (renaming) platforms</source>
          <target state="translated">プラットフォームのモッキング(名前の変更</target>
        </trans-unit>
        <trans-unit id="86340f4d997452ca0fd4d12af094a3159500e6e9" translate="yes" xml:space="preserve">
          <source>Mount point (MSD or disk).</source>
          <target state="translated">マウントポイント(MSDまたはディスク)。</target>
        </trans-unit>
        <trans-unit id="ae86a65fcc8c3f61599a72cdc047a393506271b9" translate="yes" xml:space="preserve">
          <source>Note how both platforms share the same platform ID (&lt;code&gt;0240&lt;/code&gt;) but have a unique ending string.</source>
          <target state="translated">両方のプラットフォームが同じプラットフォームID（ &lt;code&gt;0240&lt;/code&gt; ）を共有しているが、一意の終了文字列を持っていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bf7c1a82ea41a07e72348345441b0eb47414b50e" translate="yes" xml:space="preserve">
          <source>Note how the &lt;code&gt;serial_port&lt;/code&gt; value changed from &lt;code&gt;COM18&lt;/code&gt; to &lt;code&gt;COM99&lt;/code&gt;. Deleting the &lt;code&gt;mbedls.json&lt;/code&gt; or using the &lt;code&gt;--skip-retarget&lt;/code&gt; parameter removes these changes.</source>
          <target state="translated">どのように注意してください &lt;code&gt;serial_port&lt;/code&gt; の値から変更さ &lt;code&gt;COM18&lt;/code&gt; に &lt;code&gt;COM99&lt;/code&gt; 。 &lt;code&gt;mbedls.json&lt;/code&gt; を削除するか、-skip &lt;code&gt;--skip-retarget&lt;/code&gt; パラメーターを使用すると、これらの変更が削除されます。</target>
        </trans-unit>
        <trans-unit id="b4bb449d1f8629a27f6c14231d568113507bbfab" translate="yes" xml:space="preserve">
          <source>OS-specific behavior</source>
          <target state="translated">OS固有の動作</target>
        </trans-unit>
        <trans-unit id="6ff6a92d3d70f0cd836357bfb5bf3c3cccefbb1a" translate="yes" xml:space="preserve">
          <source>Override a platform's name using the &lt;code&gt;--mock&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;code&gt;--mock&lt;/code&gt; パラメーターを使用してプラットフォームの名前をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="2e208f937e2de99c03cc02590c564dd8637f71de" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;platform_name&lt;/code&gt; for any platform with a &lt;code&gt;target_id&lt;/code&gt; that starts with &lt;code&gt;mid&lt;/code&gt;.</source>
          <target state="translated">オーバーライドし &lt;code&gt;platform_name&lt;/code&gt; で任意のプラットフォーム用の &lt;code&gt;target_id&lt;/code&gt; で始まっていること &lt;code&gt;mid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ff7601f9ac32f6fa79aa6488bc72cfe9bb3f830" translate="yes" xml:space="preserve">
          <source>Please order the entries by the platform ID when adding new platforms.</source>
          <target state="translated">新規にプラットフォームを追加する場合は、プラットフォームIDで順番に入力してください。</target>
        </trans-unit>
        <trans-unit id="0711b02500c16372db7e037b0db241051fe28013" translate="yes" xml:space="preserve">
          <source>Python API</source>
          <target state="translated">パイソンエーピーアイ</target>
        </trans-unit>
        <trans-unit id="c72d26b6da860988583472365adff7ded0de3426" translate="yes" xml:space="preserve">
          <source>Result formats</source>
          <target state="translated">結果のフォーマット</target>
        </trans-unit>
        <trans-unit id="1a4dc4f6d88706f6a8e12bd1988584a776d0671f" translate="yes" xml:space="preserve">
          <source>Retargeting platforms</source>
          <target state="translated">リターゲティングプラットフォーム</target>
        </trans-unit>
        <trans-unit id="cb9874e294257c0603a7adc3aee1addb709433bf" translate="yes" xml:space="preserve">
          <source>ST-LINK</source>
          <target state="translated">エスティーリンク</target>
        </trans-unit>
        <trans-unit id="8bac297d094eb652dad70929648f5aa575b2a6d1" translate="yes" xml:space="preserve">
          <source>Serial port.</source>
          <target state="translated">シリアルポート。</target>
        </trans-unit>
        <trans-unit id="c65bccc3cb6c00c92bed4233093072804a495336" translate="yes" xml:space="preserve">
          <source>Simple (no table formatting)</source>
          <target state="translated">シンプル(テーブルフォーマットなし</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">テスト</target>
        </trans-unit>
        <trans-unit id="b4c998d6856f9776936e78445f071ceacd8defaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mock&lt;/code&gt; parameter accepts a platform ID and a platform name, separated by the &lt;code&gt;:&lt;/code&gt; character. The platform ID is the first 4 characters of the &lt;code&gt;target_id&lt;/code&gt;. The platform name is the name you are temporarily assigning to this platform.</source>
          <target state="translated">&lt;code&gt;--mock&lt;/code&gt; のパラメータが区切ら、プラットフォームのIDとプラットフォーム名を受け入れ &lt;code&gt;:&lt;/code&gt; 文字。プラットフォームIDは、 &lt;code&gt;target_id&lt;/code&gt; の最初の4文字です。プラットフォーム名は、このプラットフォームに一時的に割り当てる名前です。</target>
        </trans-unit>
        <trans-unit id="9c4e328bbd6eacf665f9285ec8c6ddc1f48f5ada" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/test&lt;/code&gt; directory contains all tests. You can run the tests with the following command:</source>
          <target state="translated">&lt;code&gt;/test&lt;/code&gt; ディレクトリには、すべてのテストが含まれています。次のコマンドでテストを実行できます。</target>
        </trans-unit>
        <trans-unit id="12bb9c80c87f6d5ee75935c0c51bf42abc08e5d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;coverage&lt;/code&gt; Python package measures code coverage. You can install it with following command:</source>
          <target state="translated">&lt;code&gt;coverage&lt;/code&gt; Pythonパッケージは、コードカバレッジを測定します。次のコマンドでインストールできます。</target>
        </trans-unit>
        <trans-unit id="2b10dbe87adc3585561214801bc55f5caf680b7f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;platform ID&lt;/strong&gt; contains four ASCII characters containing only hexadecimal values (A-F and 0-9). This platform ID is the same for all platforms of the same type. For example, all &lt;code&gt;K64F&lt;/code&gt; platforms have a platform ID of &lt;code&gt;0240&lt;/code&gt;. &lt;code&gt;mbedls&lt;/code&gt; uses this to identify the platform.</source>
          <target state="translated">&lt;strong&gt;プラットフォームIDは&lt;/strong&gt;唯一進値（AF及び0-9）を含む4つのASCII文字を含みます。このプラットフォームIDは、同じタイプのすべてのプラットフォームで同じです。たとえば、すべての &lt;code&gt;K64F&lt;/code&gt; プラットフォームのプラットフォームIDは &lt;code&gt;0240&lt;/code&gt; です。 &lt;code&gt;mbedls&lt;/code&gt; はこれを使用してプラットフォームを識別します。</target>
        </trans-unit>
        <trans-unit id="566d41300dc4280182af0f6623be1a66e8f5256e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;platform unique string&lt;/strong&gt; can be any length of characters (a-z, A-Z and 0-9) that you can use to uniquely identify platforms of the same type on the same machine. For example, two FRDM-K64F platforms attached to the same machine could have the following attributes:</source>
          <target state="translated">&lt;strong&gt;プラットフォーム固有の文字列は、&lt;/strong&gt;あなたが独自に同じマシン上で同じタイプのプラットフォームを識別するために使用することができます任意の文字の長さ（AZ、AZと0-9）することができます。たとえば、同じマシンに接続された2つのFRDM-K64Fプラットフォームは、次の属性を持つことができます。</target>
        </trans-unit>
        <trans-unit id="9248dc38683cb1d2cfe9462379c515ff9b302cb9" translate="yes" xml:space="preserve">
          <source>The Mbed LS command-line accepts a few arguments to change the format of the results. The default format is a table. You may pass &lt;code&gt;--simple&lt;/code&gt; to simplify this table format, and &lt;code&gt;--json&lt;/code&gt; to print the table as a json list of the rows.</source>
          <target state="translated">Mbed LSコマンドラインは、結果の形式を変更するためのいくつかの引数を受け入れます。デフォルトの形式はテーブルです。あなたは渡すことが &lt;code&gt;--simple&lt;/code&gt; このテーブル形式を簡素化するために、そして &lt;code&gt;--json&lt;/code&gt; は、行のJSONリストとしてテーブルを印刷します。</target>
        </trans-unit>
        <trans-unit id="3bb72899ca6b75d677eae2430cfb0d90e3908156" translate="yes" xml:space="preserve">
          <source>The Mbed serial port works by default on Mac and Linux, but Windows needs a driver. Check &lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;here&lt;/a&gt; for more details.</source>
          <target state="translated">MbedシリアルポートはMacとLinuxでデフォルトで機能しますが、Windowsにはドライバーが必要です。詳細については、&lt;a href=&quot;https://os.mbed.com/docs/latest/tutorials/windows-serial-driver.html&quot;&gt;こちら&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="a6d1a26c7503b4b8881a89e5e0fc4fbd048ae9cb" translate="yes" xml:space="preserve">
          <source>The Python API is available through the &lt;code&gt;mbed_lstools&lt;/code&gt; module.</source>
          <target state="translated">Python APIは、 &lt;code&gt;mbed_lstools&lt;/code&gt; モジュールから利用できます。</target>
        </trans-unit>
        <trans-unit id="58c258a7ec2561eedf2383e413a10a18b75b91cd" translate="yes" xml:space="preserve">
          <source>The command-line tool and Python API check the current directory for a file named &lt;code&gt;mbedls.json&lt;/code&gt;. When it is present, it overrides the returned values. The format of the &lt;code&gt;mbedls.json&lt;/code&gt; file is:</source>
          <target state="translated">コマンドラインツールと &lt;code&gt;mbedls.json&lt;/code&gt; という名前のファイルの現在のディレクトリをチェックします。存在する場合、戻り値をオーバーライドします。 &lt;code&gt;mbedls.json&lt;/code&gt; ファイルの形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="531606ff885001fa10465f778a6fb49d37af86f9" translate="yes" xml:space="preserve">
          <source>The command-line tool is available with the command &lt;code&gt;mbedls&lt;/code&gt;.</source>
          <target state="translated">コマンドラインツールは、コマンド &lt;code&gt;mbedls&lt;/code&gt; で使用できます。</target>
        </trans-unit>
        <trans-unit id="27db96a890b1a8edd8a722b79481b5a83745d0a4" translate="yes" xml:space="preserve">
          <source>The development of Mbed LS has been moved into the &lt;a href=&quot;../../src/mbed_os_tools&quot;&gt;mbed-os-tools&lt;/a&gt; package. You can continue to use this module for legacy reasons, however all further development should be continued in the new package.</source>
          <target state="translated">Mbed LSの開発は、&lt;a href=&quot;../../src/mbed_os_tools&quot;&gt;mbed-os-tools&lt;/a&gt;パッケージに移されました。従来の理由でこのモジュールを引き続き使用できますが、それ以降の開発はすべて新しいパッケージで継続する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e5421e8ecf6b21b7824db41af9f84f9da4a0bae" translate="yes" xml:space="preserve">
          <source>The file &lt;strong&gt;names and contents&lt;/strong&gt; present on the platform's filesystem</source>
          <target state="translated">プラットフォームのファイルシステムに存在するファイル&lt;strong&gt;名とコンテンツ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d49177a8e49d3f7df5dd7525d48edb64416d137" translate="yes" xml:space="preserve">
          <source>The first four characters of the &lt;code&gt;target_id&lt;/code&gt; that you want to mock.</source>
          <target state="translated">モックする &lt;code&gt;target_id&lt;/code&gt; の最初の4文字。</target>
        </trans-unit>
        <trans-unit id="b328e0217f6fe3da6a6bd33be1a9de749b5ca25c" translate="yes" xml:space="preserve">
          <source>The following is an example &lt;code&gt;jlink&lt;/code&gt; platform entry:</source>
          <target state="translated">以下は、 &lt;code&gt;jlink&lt;/code&gt; プラットフォームエントリの例です。</target>
        </trans-unit>
        <trans-unit id="df1ccb6914d6625c344bdfe72475d2baa2e2e5d6" translate="yes" xml:space="preserve">
          <source>The name of the platform</source>
          <target state="translated">プラットフォームの名前</target>
        </trans-unit>
        <trans-unit id="60ed4791411b63e3f43db2f08dce575b64172af8" translate="yes" xml:space="preserve">
          <source>The type of debugger present on the platform affects how it is detected. The USB Vendor ID is used to detect which type of debugger is present on the platform.</source>
          <target state="translated">プラットフォーム上に存在するデバッガのタイプは、デバッガの検出方法に影響を与えます。USB Vendor ID は、プラットフォーム上に存在するデバッガのタイプを検出するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6289959a10bfef52952cf1f15bc73820766311f0" translate="yes" xml:space="preserve">
          <source>There are many automounters available, and it is ultimately up to you to determine which is the best one for your use case. However, the &lt;code&gt;usbmount&lt;/code&gt; package on Ubuntu makes it easy to start. If you need more control over your automounter, you can build and run an open source project called &lt;a href=&quot;https://github.com/LemonBoy/ldm&quot;&gt;ldm&lt;/a&gt;.</source>
          <target state="translated">利用可能なオートマウンターは多数あり、最終的には、ユースケースに最適なオートマウンターを決定するのはあなた次第です。ただし、Ubuntuの &lt;code&gt;usbmount&lt;/code&gt; パッケージを使用すると、簡単に起動できます。オートマウンターをさらに制御する必要がある場合は、&lt;a href=&quot;https://github.com/LemonBoy/ldm&quot;&gt;ldm&lt;/a&gt;と呼ばれるオープンソースプロジェクトをビルドして実行できます。</target>
        </trans-unit>
        <trans-unit id="95f80aa1ea6b75add11cc99024768dc27e5c5089" translate="yes" xml:space="preserve">
          <source>This argument controls the accuracy and speed of this function. There are three choices (in ascending order of accuracy and decreasing order of speed):</source>
          <target state="translated">この引数は、この関数の精度と速度を制御します。3つの選択肢があります(精度の高い順、速度の低い順)。</target>
        </trans-unit>
        <trans-unit id="bc1a9a33ee43f838188c32b218a70eb7ece0d4fa" translate="yes" xml:space="preserve">
          <source>This function allows you to filter results based on platform data. This can hasten the execution of the &lt;code&gt;list_mbeds&lt;/code&gt; function.</source>
          <target state="translated">この関数を使用すると、プラットフォームデータに基づいて結果をフィルタリングできます。これにより、 &lt;code&gt;list_mbeds&lt;/code&gt; 関数の実行を早めることができます。</target>
        </trans-unit>
        <trans-unit id="2616a7fb825b0d78910a933f6e64a48ed97638fc" translate="yes" xml:space="preserve">
          <source>This results in the following output from the command-line tool:</source>
          <target state="translated">この結果、コマンドラインツールから以下のような出力が得られます。</target>
        </trans-unit>
        <trans-unit id="718b41fe0e6d59fb7aefd593a4beb15871ef8155" translate="yes" xml:space="preserve">
          <source>This returns an instance that provides access to the rest of the API.</source>
          <target state="translated">これは、APIの残りの部分へのアクセスを提供するインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="5f0bd6b95ba6b0d1aa4804d3b1c2d843052d543f" translate="yes" xml:space="preserve">
          <source>This tool relies on board interfaces conforming to certain standards, so it can detect platforms properly. The &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;Mbed Enabled&lt;/a&gt; program sets these standards. Please see the &lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/mbed-enabled-program-requirements/&quot;&gt;Technical Requirements&lt;/a&gt; for more information.</source>
          <target state="translated">このツールは、特定の規格に準拠したボードインターフェイスに依存しているため、プラットフォームを適切に検出できます。&lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/&quot;&gt;MBED有効&lt;/a&gt;プログラムは、これらの基準を設定します。詳細については、&lt;a href=&quot;https://www.mbed.com/en/about-mbed/mbed-enabled/mbed-enabled-program-requirements/&quot;&gt;技術要件&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ac491a738fa8d9a39630b689c1ab8d30e9fa8f43" translate="yes" xml:space="preserve">
          <source>To install Mbed LS from &lt;a href=&quot;https://pypi.python.org/pypi/mbed-ls&quot;&gt;PyPI&lt;/a&gt;, run the following command:</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/mbed-ls&quot;&gt;PyPI&lt;/a&gt;からMbedLSをインストールするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="aa90b441cbc22332ee18c74acf6a4dcb743bdc9d" translate="yes" xml:space="preserve">
          <source>To remove a mocked platform, use the &lt;code&gt;--mock&lt;/code&gt; parameter again. Continuing from the previous example, use &lt;code&gt;-&amp;lt;platform id&amp;gt;&lt;/code&gt; as the value:</source>
          <target state="translated">モックされたプラットフォームを削除するには、 &lt;code&gt;--mock&lt;/code&gt; パラメーターを再度使用します。前の例から続けて、値として &lt;code&gt;-&amp;lt;platform id&amp;gt;&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="9403b0ec7a7cb4ea552d292ac82b3987260b4644" translate="yes" xml:space="preserve">
          <source>To run the tests while measuring code coverage, use the following command:</source>
          <target state="translated">コードカバレッジを測定しながらテストを実行するには、以下のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="9331b4db422359a901cde6ec4d52d6baab1f617a" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;True&lt;/code&gt;, this includes unmounted platforms in the results. This enables the same behavior as the &lt;code&gt;-u&lt;/code&gt; command-line flag.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; に設定すると、マウントされていないプラットフォームが結果に含まれます。これにより、 &lt;code&gt;-u&lt;/code&gt; コマンドラインフラグと同じ動作が可能になります。</target>
        </trans-unit>
        <trans-unit id="a38bda969277c0a30151ab8dbdcd3e714d30808b" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;True&lt;/code&gt;, this skips the retargetting step, and the results are unmodified. This enables the same behavior as the &lt;code&gt;--skip-retarget&lt;/code&gt; command-line flag.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; に設定すると、再ターゲティング手順がスキップされ、結果は変更されません。これにより、 &lt;code&gt;--skip-retarget&lt;/code&gt; コマンドラインフラグと同じ動作が可能になります。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">ウィンドウズ</target>
        </trans-unit>
        <trans-unit id="9e7e495e29027bd2f702596510aeedd3c804c67d" translate="yes" xml:space="preserve">
          <source>You can also remove all mocked platforms by supplying &lt;code&gt;*&lt;/code&gt; as the &lt;code&gt;target_id&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;target_id&lt;/code&gt; として &lt;code&gt;*&lt;/code&gt; を指定することにより、すべてのモックされたプラットフォームを削除することもできます。</target>
        </trans-unit>
        <trans-unit id="208159282a8d50da07a95b879e7a063f68aea27d" translate="yes" xml:space="preserve">
          <source>You can then generate a report:</source>
          <target state="translated">そして、レポートを作成することができます。</target>
        </trans-unit>
        <trans-unit id="cc183b059a454b327ed04b841628aff0e3c10d2a" translate="yes" xml:space="preserve">
          <source>mbed-ls is a Python module that detects and lists mbed-enabled devices connected to the host computer</source>
          <target state="translated">mbed-ls はホストコンピュータに接続された mbed 対応デバイスを検出して一覧表示する Python モジュールです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
