<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/microspec/">
    <body>
      <group id="microspec">
        <trans-unit id="8d3489696e966184bfbd09ec5a450d68e8b8a6b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;microspeclib&lt;/code&gt; accesses this USB interface using &lt;code&gt;pyserial&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;microspeclib&lt;/code&gt; が使用してインターフェイスこのUSBアクセス &lt;code&gt;pyserial&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="dbe7bcb85f91b25723ea61e2da7017dbc2a02d45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sean Cusack&lt;/strong&gt; - &lt;em&gt;Initial version&lt;/em&gt; - &lt;a href=&quot;https://github.com/eruciform&quot;&gt;GitHub&lt;/a&gt;&lt;a href=&quot;https://eruciform.com&quot;&gt;Blog&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;ショーン・キューザック&lt;/strong&gt;-&lt;em&gt;最初のバージョン&lt;/em&gt;-&lt;a href=&quot;https://github.com/eruciform&quot;&gt;のGitHub&lt;/a&gt;&lt;a href=&quot;https://eruciform.com&quot;&gt;ブログ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">著者</target>
        </trans-unit>
        <trans-unit id="d90dc3484f569562ac7b0d677dd34abe3ca6dbdd" translate="yes" xml:space="preserve">
          <source>Command Line API</source>
          <target state="translated">コマンドライン API</target>
        </trans-unit>
        <trans-unit id="b1b9124cd443317b1d7031d33b3a00ce4ac3b5e0" translate="yes" xml:space="preserve">
          <source>Developers may want to install additional packages required for
running unit tests and rebuilding documentation.</source>
          <target state="translated">開発者は、ユニットテストの実行やドキュメントの再構築に必要なパッケージを追加でインストールしたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="8374e342e62c9bfe0e0f090eb41483bf476ce03d" translate="yes" xml:space="preserve">
          <source>Emulate hardware with &lt;code&gt;-e&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; を使用してハードウェアをエミュレートします</target>
        </trans-unit>
        <trans-unit id="50b5d5f867e2a12edf487b172da0ff6c375be08f" translate="yes" xml:space="preserve">
          <source>Emulator</source>
          <target state="translated">エミュレータ</target>
        </trans-unit>
        <trans-unit id="16aae584ec26cc4b4ee75e3dd51aa0193aae5b1f" translate="yes" xml:space="preserve">
          <source>For example, to set the exposure and cycles and then get 3
capture frames spaced 1.5 seconds apart, with a timeout of 0.2
seconds on each, and print it in CSV format:</source>
          <target state="translated">例えば、露出とサイクルを設定して、1.5秒間隔で3つのキャプチャフレームを取得し、それぞれ0.2秒ずつタイムアウトしてCSV形式で印刷します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="818e5c5dc4016723f858a4c50a20de2adadbac20" translate="yes" xml:space="preserve">
          <source>For now, this is only supported on Linux and MacOSX, and requires
the &lt;code&gt;socat&lt;/code&gt; executable to be installed and available on your PATH.</source>
          <target state="translated">現在のところ、これはLinuxとMacOSXでのみサポートされており、 &lt;code&gt;socat&lt;/code&gt; 実行可能ファイルがPATHにインストールされて利用可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="c126d74e5215b6b617751426756a6f70acbaeede" translate="yes" xml:space="preserve">
          <source>If &quot;Load VCP&quot; is not enabled, &lt;code&gt;pyserial&lt;/code&gt; cannot communicate with
the dev-kit and &lt;code&gt;microspec&lt;/code&gt; will report that it does not see a
connected USB device.</source>
          <target state="translated">「ロードVCPは、」有効でない場合、 &lt;code&gt;pyserial&lt;/code&gt; はDEV-KITと通信できないと &lt;code&gt;microspec&lt;/code&gt; は、それが接続されたUSBデバイスを見ていないことを報告します。</target>
        </trans-unit>
        <trans-unit id="1d6f877a0a3f64cc110b6b183183dde31a651f46" translate="yes" xml:space="preserve">
          <source>Import the API in a Python script or at a Python REPL:</source>
          <target state="translated">PythonスクリプトまたはPython REPLでAPIをインポートします。</target>
        </trans-unit>
        <trans-unit id="0937a6d6cc904d7233f5be11755faf3ca2d2a9b1" translate="yes" xml:space="preserve">
          <source>Install extra requirements for testing and documentation</source>
          <target state="translated">テストと文書化のための追加要件のインストール</target>
        </trans-unit>
        <trans-unit id="847401c2e0e8c56d026910487f74d5918dbab74c" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;microspec&lt;/code&gt; project with &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;microspec&lt;/code&gt; プロジェクトを &lt;code&gt;pip&lt;/code&gt; でインストールします。</target>
        </trans-unit>
        <trans-unit id="eaf76b75c4c78bc43ce5f5cc760fbbc9540a91b8" translate="yes" xml:space="preserve">
          <source>Install the Python API</source>
          <target state="translated">Python APIのインストール</target>
        </trans-unit>
        <trans-unit id="8abd8774fb619c639fa28d7d35414945e050caa5" translate="yes" xml:space="preserve">
          <source>Many of the &lt;code&gt;microspec&lt;/code&gt; unit tests use an emulator to fake the
dev-kit hardware. The emulator requires utility &lt;code&gt;socat&lt;/code&gt;, which is
only available for Mac and Linux.</source>
          <target state="translated">&lt;code&gt;microspec&lt;/code&gt; ユニットテストの多くは、エミュレーターを使用して開発キットハードウェアを偽造します。エミュレータにはユーティリティ &lt;code&gt;socat&lt;/code&gt; が必要です。これはMacとLinuxでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="6eabf943315982a3887e38d315474c823b18a0be" translate="yes" xml:space="preserve">
          <source>MicroSpec Overview</source>
          <target state="translated">マイクロスペックの概要</target>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="translated">詳細情報</target>
        </trans-unit>
        <trans-unit id="faf3d338e9591fca66e750be54909653b3a6c8cd" translate="yes" xml:space="preserve">
          <source>Note that if you have no hardware connected, you can (on Linux
and MacOSX) add a &quot;-e&quot; flag to use the emulator. It won't return
very interesting capture frame data, but it will give an
opportunity to test the interface.</source>
          <target state="translated">ハードウェアが接続されていない場合、(LinuxとMacOSXでは)エミュレータを使用するために&quot;-e &quot;フラグを追加することができることに注意してください。これはあまり興味深いキャプチャフレームデータを返しませんが、インターフェイスをテストする機会を与えてくれます。</target>
        </trans-unit>
        <trans-unit id="868f17a167263f286c40c603461b022662fa7faf" translate="yes" xml:space="preserve">
          <source>Now &quot;Load VCP&quot; is enabled every time the dev-kit is connected to
this Windows computer.</source>
          <target state="translated">これで、このWindowsコンピュータにdev-kitを接続するたびに &quot;Load VCP &quot;が有効になりました。</target>
        </trans-unit>
        <trans-unit id="01bfd4536f81b0e979d8498919afa6a97428b781" translate="yes" xml:space="preserve">
          <source>On Windows, replace &lt;code&gt;microspec_cmdline.py&lt;/code&gt; in the above lines
with &lt;code&gt;microspec_cmdline.exe&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、置き換える &lt;code&gt;microspec_cmdline.py&lt;/code&gt; を持つ上記の行に &lt;code&gt;microspec_cmdline.exe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="653216e3f5c4d69191d4aa7805903e962eda87f9" translate="yes" xml:space="preserve">
          <source>On Windows, when connecting the dev-kit for the first time:</source>
          <target state="translated">Windowsの場合、初めてdev-kitを接続したとき。</target>
        </trans-unit>
        <trans-unit id="f90971f3e163858cccdd2de4a23c00ac50494bd5" translate="yes" xml:space="preserve">
          <source>Open Device Manager:</source>
          <target state="translated">デバイスマネージャを開きます。</target>
        </trans-unit>
        <trans-unit id="df25d3b26fb586c6c1b1ae8c88896c1daa50dd37" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;microspeclib&lt;/code&gt; is a Python API for the Chromation
spectrometer dev-kit.</source>
          <target state="translated">パッケージ &lt;code&gt;microspeclib&lt;/code&gt; は、クロメーションスペクトロメータ開発キット用のPythonAPIです。</target>
        </trans-unit>
        <trans-unit id="cdeb0e3c9288946537518a8548e039af5ae86d97" translate="yes" xml:space="preserve">
          <source>Please see the project homepage for more information:</source>
          <target state="translated">詳しくはプロジェクトのホームページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b2b6077dbdbab0d4c19af1d6a081a21e224ada5d" translate="yes" xml:space="preserve">
          <source>Python API for the Chromation spectrometer dev-kit</source>
          <target state="translated">クロメーション分光器 dev-kit 用 Python API</target>
        </trans-unit>
        <trans-unit id="a108d46613ed9b29aa476a181580b0b23edfdeee" translate="yes" xml:space="preserve">
          <source>Spectrometer Hardware</source>
          <target state="translated">分光計ハードウェア</target>
        </trans-unit>
        <trans-unit id="f512f4e60bcee8e72ccd48b2e754aa5bdde659f8" translate="yes" xml:space="preserve">
          <source>The -t timeout is how long it will wait for the command each
time, and if it fails it will print None and move on. If a -r
repeat is specified, it will run the command that many times.
And if it is repeating, a -w wait will wait that long in between
commands. All times are in fractional seconds.</source>
          <target state="translated">t タイムアウトは、コマンドを実行するたびにどれくらいの時間待つかを指定し、失敗した場合は None と表示して次のコマンドに進みます。r repeat が指定されている場合は、その回数だけコマンドを実行します。また、繰り返し実行している場合は、-w wait を指定すると、コマンドとコマンドの間にそれだけの長さの待ち時間が発生します。すべての時間は端数秒単位で表示されます。</target>
        </trans-unit>
        <trans-unit id="39d8c08485b7d505319fa61287e3bb0ebcb9c565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microspec&lt;/code&gt; project also includes:</source>
          <target state="translated">&lt;code&gt;microspec&lt;/code&gt; のプロジェクトも含まれています：</target>
        </trans-unit>
        <trans-unit id="165e12da050870c7d565836ccd13b66cefbdbb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;microspec_cmdline.py&lt;/code&gt; executable will run a single command
and print the reply to stdout, optionally in CSV format. The
default is to look for hardware, but -f FILE can be used to point
it to either a device file or the name of a port, as in &quot;COM3&quot;,
if necessary. The command itself is case-insensitive, and after
the command are key=value pairs of options for the command, if
necessary, such as &lt;code&gt;led_num=0&lt;/code&gt; or &lt;code&gt;cycles=100&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;microspec_cmdline.py&lt;/code&gt; の実行は、単一のコマンドを実行し、必要に応じてCSV形式で、標準出力に応答を印刷します。デフォルトではハードウェアを検索しますが、必要に応じて、「COM3」のように、-fFILEを使用してデバイスファイルまたはポートの名前を指すことができます。コマンド自体は大文字と小文字を区別せず、コマンドの後には、必要に応じて、 &lt;code&gt;led_num=0&lt;/code&gt; や &lt;code&gt;cycles=100&lt;/code&gt; などのコマンドのオプションのkey = valueペアがあります。</target>
        </trans-unit>
        <trans-unit id="81327bf4980ba1c3ebb317786f4e07950e124302" translate="yes" xml:space="preserve">
          <source>The API is a set of commands for configuring the spectrometer and
acquiring data.</source>
          <target state="translated">APIは、分光器を設定してデータを取得するためのコマンド群です。</target>
        </trans-unit>
        <trans-unit id="114b532f122e5eded490c183a4ec88bbe6a3aacb" translate="yes" xml:space="preserve">
          <source>The Chromation spectrometer is a surface-mount PCB package
consisting of a linear photodiode array and optical components.</source>
          <target state="translated">クロメーション分光器は、リニアフォトダイオードアレイと光学部品で構成される表面実装PCBパッケージです。</target>
        </trans-unit>
        <trans-unit id="389dcc605b79c272c1126161259325753e9975b5" translate="yes" xml:space="preserve">
          <source>The Python API communicates with firmware on the two
microcontrollers in the dev-kit, one on each of the stacked PCBs.</source>
          <target state="translated">Python API は、dev-kit の 2 つのマイクロコントローラ上のファームウェアと通信します。</target>
        </trans-unit>
        <trans-unit id="e707ba1dc1984462002736d6139d7b03d6443770" translate="yes" xml:space="preserve">
          <source>The command line utility is a &lt;code&gt;.exe&lt;/code&gt; on Windows</source>
          <target state="translated">コマンドラインユーティリティは、Windowsでは &lt;code&gt;.exe&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="462080da4170fe3f63f2636ab587465e912dd235" translate="yes" xml:space="preserve">
          <source>The documentation is built with Sphinx. Developers extending
the API will need to rebuild the documentation. Install the
Sphinx-related requirements by adding &lt;code&gt;[dev]&lt;/code&gt; to the &lt;code&gt;install&lt;/code&gt;
command:</source>
          <target state="translated">ドキュメントはSphinxで作成されています。APIを拡張する開発者は、ドキュメントを再構築する必要があります。 &lt;code&gt;install&lt;/code&gt; コマンドに &lt;code&gt;[dev]&lt;/code&gt; を追加して、Sphinx関連の要件をインストールします。</target>
        </trans-unit>
        <trans-unit id="224229d8f145a2494ff5d90d40ea20535dfffced" translate="yes" xml:space="preserve">
          <source>The following will connect to the dev-kit USB hardware, capture a
single frame, then print the status, number of pixels, and the
value of the 3rd pixel.</source>
          <target state="translated">以下はdev-kitのUSBハードウェアに接続し、1フレームをキャプチャし、ステータス、ピクセル数、3ピクセル目の値を印刷します。</target>
        </trans-unit>
        <trans-unit id="5737e7815ab81b75a7e93a640fca71d334eb97cb" translate="yes" xml:space="preserve">
          <source>The microcontroller on the PCB stacked above provides a USB
bridge that turns the SPI interface into a USB interface.</source>
          <target state="translated">上に積み上げられたPCB上のマイクロコントローラは、SPIインターフェースをUSBインターフェースに変えるUSBブリッジを提供します。</target>
        </trans-unit>
        <trans-unit id="9a6edeb0aab435e406e78531d2d4da6eeb972f84" translate="yes" xml:space="preserve">
          <source>The microcontroller on the bottom of the stack provides a SPI
interface to the Chromation spectrometer.</source>
          <target state="translated">スタックの下部にあるマイクロコントローラは、クロメーション分光器へのSPIインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="fc5858ef08d93cdeca720307d93d4442456c8064" translate="yes" xml:space="preserve">
          <source>There is one method for each command. Commands are
camelCaseFormatted. Commands return the received reply object. If
there is an error or a timeout, the reply is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">コマンドごとに1つのメソッドがあります。コマンドはcamelCaseFormattedです。コマンドは、受信した応答オブジェクトを返します。エラーまたはタイムアウトが発生した場合、応答は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3c73a0f25bfedf2b17af6cd86c2d283dc2643d87" translate="yes" xml:space="preserve">
          <source>To extend/customize/repurpose the API, clone the repository from
the project homepage:
&lt;a href=&quot;https://github.com/microspectrometer/microspec&quot;&gt;https://github.com/microspectrometer/microspec&lt;/a&gt; and install in
&lt;code&gt;--editable&lt;/code&gt; mode.</source>
          <target state="translated">APIを拡張/カスタマイズ/再利用するには、プロジェクトのホームページ（&lt;a href=&quot;https://github.com/microspectrometer/microspec&quot;&gt;https://github.com/microspectrometer/microspec）&lt;/a&gt;からリポジトリのクローンを作成し、 &lt;code&gt;--editable&lt;/code&gt; モードでインストールし ます。</target>
        </trans-unit>
        <trans-unit id="69fc6d9baf70bfb2c7a0b51e6df53eee49d53039" translate="yes" xml:space="preserve">
          <source>Use the Python API</source>
          <target state="translated">Python APIを使う</target>
        </trans-unit>
        <trans-unit id="8d49a259d8a069f3951444cd08bacff109b59d02" translate="yes" xml:space="preserve">
          <source>Use the emulator with the &lt;code&gt;microspeclib.simple&lt;/code&gt; or
&lt;code&gt;microspeclib.expert&lt;/code&gt; API with keyword argument &lt;code&gt;emulation=True&lt;/code&gt;.</source>
          <target state="translated">キーワード引数 &lt;code&gt;emulation=True&lt;/code&gt; を指定した &lt;code&gt;microspeclib.simple&lt;/code&gt; または &lt;code&gt;microspeclib.expert&lt;/code&gt; APIでエミュレーターを使用します。</target>
        </trans-unit>
        <trans-unit id="6d6641a4b775c660652c3d0f0d161f7d75b000c7" translate="yes" xml:space="preserve">
          <source>Use the emulator with the command-line utility by adding a &quot;-e&quot;
flag.</source>
          <target state="translated">e&quot; フラグを追加して、コマンドラインユーティリティでエミュレータを使用します。</target>
        </trans-unit>
        <trans-unit id="d5290d603f71bb44d2e81d553866f50b91fb6680" translate="yes" xml:space="preserve">
          <source>Windows Load VCP</source>
          <target state="translated">Windows負荷VCP</target>
        </trans-unit>
        <trans-unit id="f7f4ced23003b2fdc74d5628b2d86cdcb21f50de" translate="yes" xml:space="preserve">
          <source>an emulator (Mac and Linux only) for faking the dev-kit
hardware in unit tests</source>
          <target state="translated">ユニットテストで dev-kit ハードウェアを偽装するためのエミュレータ (Mac と Linux のみ)</target>
        </trans-unit>
        <trans-unit id="0eac7662880bd24bfd91de305ab0b6f463809707" translate="yes" xml:space="preserve">
          <source>check &quot;Load VCP&quot;</source>
          <target state="translated">VCPを読み込む」にチェックを入れる</target>
        </trans-unit>
        <trans-unit id="c289e0598edc757eb75192cff25e37d289276343" translate="yes" xml:space="preserve">
          <source>command line utility &lt;code&gt;microspec-cmdline&lt;/code&gt; for running basic
measurements without developing a Python application</source>
          <target state="translated">Pythonアプリケーションを開発せずに基本的な測定を実行するためのコマンドラインユーティリティ &lt;code&gt;microspec-cmdline&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="561a0bbf9bedd2fba52c6d00449a376a62d04bb0" translate="yes" xml:space="preserve">
          <source>cycle power to the dev-kit (unplug/plug the USB cable)</source>
          <target state="translated">電源をdev-kitに循環させる (USBケーブルを抜く/差し込む)</target>
        </trans-unit>
        <trans-unit id="c8866f88fd76d7ad83e2e039b3655438a609f4df" translate="yes" xml:space="preserve">
          <source>go to tab &quot;Advanced&quot;</source>
          <target state="translated">タブの &quot;詳細 &quot;に移動します。</target>
        </trans-unit>
        <trans-unit id="9c59e4e6bbe7309e82cfb2ce1134e108962557f0" translate="yes" xml:space="preserve">
          <source>right-click on USB Serial Converter</source>
          <target state="translated">USBシリアルコンバータを右クリック</target>
        </trans-unit>
        <trans-unit id="f6d1d67049efa081c649ae3245612171373225f8" translate="yes" xml:space="preserve">
          <source>select Properties</source>
          <target state="translated">プロパティを選択します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
