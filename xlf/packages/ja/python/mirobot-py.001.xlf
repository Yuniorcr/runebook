<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/mirobot-py/">
    <body>
      <group id="mirobot-py">
        <trans-unit id="362025236ef642c6b751ee681f51209de39b7060" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;Matthew's library&lt;/a&gt; takes the traditional approach to recieving output from the robot as they appear. Basically this replicates the live terminal feedback in a client similar to Wlkata's Studio program. The original code has a thread listening the background for new messages and displays them as they appear.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;Matthewのライブラリ&lt;/a&gt;は、ロボットからの出力を表示されたとおりに受信するための従来のアプローチを採用しています。基本的に、これはWlkataのStudioプログラムと同様に、クライアントでライブ端末のフィードバックを複製します。元のコードには、新しいメッセージの背景をリッスンし、表示されたとおりに表示するスレッドがあります。</target>
        </trans-unit>
        <trans-unit id="a17c36d438ad8622c804ab3519ec91865c391827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mirobot&lt;/code&gt; is a python module that can be used to control the &lt;a href=&quot;http://www.wlkata.com/site/index.html&quot;&gt;WLkata Mirobot&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; を制御するために使用することができるPythonモジュールである&lt;a href=&quot;http://www.wlkata.com/site/index.html&quot;&gt;WLkata Mirobotを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8afa3c0c2ad7485fc26a2a95e3990ba726705a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mirobot&lt;/code&gt; requires Python &amp;gt;= 3.6. Use &lt;code&gt;pip3&lt;/code&gt; to install it:</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; にはPython&amp;gt; = 3.6が必要です。 &lt;code&gt;pip3&lt;/code&gt; を使用してインストールします。</target>
        </trans-unit>
        <trans-unit id="23f40b725ca4c86b9fe54ff02b310fea19490a95" translate="yes" xml:space="preserve">
          <source>A Python interface library for WKlata's Mirobot</source>
          <target state="translated">WKlataのMirobotのためのPythonインターフェースライブラリ</target>
        </trans-unit>
        <trans-unit id="afb73331b2572947237b16f9ce516386484f6c17" translate="yes" xml:space="preserve">
          <source>And that's it! Now if you want to save keystrokes, here's a even more minimal version:</source>
          <target state="translated">そして、それはそれです! キーストロークを保存したい場合は、ここにさらにミニマムなバージョンがあります。</target>
        </trans-unit>
        <trans-unit id="9389fb235c0e40f0d6714cb38b6338207f4f91ec" translate="yes" xml:space="preserve">
          <source>Big thanks to Mattew Wachter for laying down the framework for this library-- please check out his links below:</source>
          <target state="translated">このライブラリのフレームワークを構築してくれたMattew Wachterに大きな感謝を捧げます。</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">クレジット</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>
        </trans-unit>
        <trans-unit id="e8a60d9416df2c4413a94ab176f954f4add08ba4" translate="yes" xml:space="preserve">
          <source>Differences from source repository</source>
          <target state="translated">ソースリポジトリとの違い</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">ドキュメント</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="f2972a004a2cd00b7b0ab7e2bd7312f929551f3e" translate="yes" xml:space="preserve">
          <source>In the end, while developing this approach to error responsibility, I realized that this would probably not suit everyone's needs-- sometimes people just want a live feed of output. That is why I think Matthew's continued work would be great for the community. I don't want this repository and its beliefs to consume another. I also do not see a way to combine both approaches-- they are inherently incompatible at the core level.</source>
          <target state="translated">結局、エラー責任に対するこのアプローチを開発している間に、これはおそらくすべての人のニーズには合わないだろうということに気がつきました。だからこそ、Matthew氏の継続的な仕事はコミュニティにとって素晴らしいものになると思います。私はこのリポジトリとその信念が別のものを消費することを望んでいません。また、私は両方のアプローチを組み合わせる方法も考えていません。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="7c8493cf9aba35c8dea23fc91c483c0e2886798d" translate="yes" xml:space="preserve">
          <source>It is my belief that people who are looking to do significant scripting and logic-testing routines will benefit greatly from this library. People who are looking to use a CLI-friendly framework should instead use Matthew's &lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt;&lt;code&gt;py-mirobot&lt;/code&gt;&lt;/a&gt; library.</source>
          <target state="translated">重要なスクリプトおよびロジックテストルーチンを実行しようとしている人々は、このライブラリから大きな恩恵を受けると私は信じています。CLI対応のフレームワークの使用を検討している人は、代わりにMatthewの&lt;a href=&quot;https://github.com/matthewwachter/py-mirobot&quot;&gt; &lt;code&gt;py-mirobot&lt;/code&gt; &lt;/a&gt;ライブラリを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="a1b9ee166c86baccfbab5d0551c3b7661bee5648" translate="yes" xml:space="preserve">
          <source>License: &lt;a href=&quot;https://github.com/rirze/mirobot-py/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;</source>
          <target state="translated">ライセンス：&lt;a href=&quot;https://github.com/rirze/mirobot-py/blob/master/LICENSE&quot;&gt;MIT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0d5980b800d0dc1b1982551f33943af7bbebfb" translate="yes" xml:space="preserve">
          <source>Make sure to &lt;strong&gt;not&lt;/strong&gt; install the &lt;code&gt;mirobot&lt;/code&gt; package-- that package is unrelated to this one.</source>
          <target state="translated">&lt;code&gt;mirobot&lt;/code&gt; パッケージをインストールし&lt;strong&gt;ないで&lt;/strong&gt;ください。このパッケージはこのパッケージとは無関係です。</target>
        </trans-unit>
        <trans-unit id="d01c2d48eaec7523f72c7389d6756e2910114cf3" translate="yes" xml:space="preserve">
          <source>Many of the functions and structures in this library are documented. The documentation is hosted &lt;a href=&quot;https://rirze.github.io/mirobot-py/&quot;&gt;here&lt;/a&gt;. If anything is unclear in the docs, please open a Github issue.</source>
          <target state="translated">このライブラリの関数と構造の多くは文書化されています。ドキュメントは&lt;a href=&quot;https://rirze.github.io/mirobot-py/&quot;&gt;ここ&lt;/a&gt;でホストされています。ドキュメントで不明な点がある場合は、Githubの問題を開いてください。</target>
        </trans-unit>
        <trans-unit id="60e4a7e9c69c428a2a0ca9dea63e556a01264850" translate="yes" xml:space="preserve">
          <source>Matthew Wachter</source>
          <target state="translated">マシュー・ワッチャー</target>
        </trans-unit>
        <trans-unit id="c356ca9f0745648468b1e7bd350cf44080c0d7b9" translate="yes" xml:space="preserve">
          <source>Reasons to fork (and not merge upstream)</source>
          <target state="translated">フォークする理由(上流でマージしない理由</target>
        </trans-unit>
        <trans-unit id="7439c4a034ab3fedb79765047a4b14d30c04e941" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mirobot&lt;/code&gt; class can detect existing open serial ports and &quot;guess&quot; which one to use as the Mirobot. There's no need to specify a portname for most cases!</source>
          <target state="translated">&lt;code&gt;Mirobot&lt;/code&gt; のクラスは1つがMirobotとして使用する既存のオープンシリアルポートと「推測」を検出することができます。ほとんどの場合、ポート名を指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e4deffc302c6e805cc8803dbc9b1dd7d562b14cf" translate="yes" xml:space="preserve">
          <source>This library uses the G code protocol to communicate with the Mirobot over a serial connection. The official &lt;strong&gt;G code instruction set&lt;/strong&gt; and &lt;strong&gt;driver download&lt;/strong&gt; for the Mirobot can be found at the &lt;a href=&quot;http://www.wlkata.com/site/downloads.html&quot;&gt;WLkata Download Page&lt;/a&gt;</source>
          <target state="translated">このライブラリは、Gコードプロトコルを使用して、シリアル接続を介してMirobotと通信します。Mirobotの公式&lt;strong&gt;Gコード命令セット&lt;/strong&gt;と&lt;strong&gt;ドライバーのダウンロード&lt;/strong&gt;は、&lt;a href=&quot;http://www.wlkata.com/site/downloads.html&quot;&gt;WLkataダウンロードページにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c5c7ece530ede971ca700ba24973f87ece75417" translate="yes" xml:space="preserve">
          <source>This repository intends to take a more programmatic approach to this behavior. Specifically it narrows down the path to responsibility by explicitly pairing each command to its output. In a stream-messages-as-they-come approach to output messaging, it is not clear (or atleast easy) to determine which command failed and how to ensure scripts stop execution at exactly the point of failure (and not after). That is why each instruction in this library has a dedicated output, ensuring success and having its own message output as a return value. This approach is a lot harder to construct and relies on adapting to the idiosyncrasies of gcode and Mirobot programming.</source>
          <target state="translated">このリポジトリは、この動作に対してよりプログラム的なアプローチを取ることを意図しています。具体的には、各コマンドとその出力を明示的にペアリングすることで、責任への道筋を狭めています。ストリームメッセージをそのまま出力するアプローチでは、どのコマンドが失敗したかを判断したり、スクリプトの実行を失敗した時点で(失敗した後ではなく)確実に停止させる方法が明確ではありません(少なくとも簡単ではありません)。そのため、このライブラリの各命令は専用の出力を持ち、成功を確実にし、戻り値として独自のメッセージ出力を持つようにしています。このアプローチは、構築するのがはるかに難しく、gcodeやMirobotプログラミングの特殊性に適応することに依存しています。</target>
        </trans-unit>
        <trans-unit id="85d96bf4f4b7ec862016aae49d12e3351453f180" translate="yes" xml:space="preserve">
          <source>VT Pro Design</source>
          <target state="translated">VTプロデザイン</target>
        </trans-unit>
        <trans-unit id="dee403b61717691c434f2d196144026802c27fec" translate="yes" xml:space="preserve">
          <source>While based of the same code initially, this repository has developed in a different direction with opinionated views on how one should use a robotics library. Specifically, there is the problem of 'output' when operating a gcode-programmed machine like Mirobot.</source>
          <target state="translated">このリポジトリは、当初は同じコードをベースにしていましたが、ロボットライブラリの使い方について意見を出し合いながら、別の方向に発展してきました。具体的には、Mirobotのようなコードでプログラムされたマシンを操作する際の「出力」の問題です。</target>
        </trans-unit>
        <trans-unit id="deeea39e2cbd3497d1ef37331ccf63692811f1ff" translate="yes" xml:space="preserve">
          <source>mirobot</source>
          <target state="translated">ミロボ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
