<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/emailfilter/">
    <body>
      <group id="emailfilter">
        <trans-unit id="073359573c1c366aae63b8eba6b5d84f4ba40599" translate="yes" xml:space="preserve">
          <source>&amp;ndash; which name it will be depends
on which specific flavor of Unix/Linux you are running).</source>
          <target state="translated">&amp;ndash;どの名前になるかは、実行しているUnix / Linuxの特定のフレーバーによって異なります）。</target>
        </trans-unit>
        <trans-unit id="1e1407a87015e8d38b47ba2685a76f0ccc461910" translate="yes" xml:space="preserve">
          <source>, but as above, filtering will be
significantly slower).</source>
          <target state="translated">、ただし、上記のように、フィルタリングは大幅に遅くなります）。</target>
        </trans-unit>
        <trans-unit id="9370b0f96df8f69289e644aa5162c86a18683f78" translate="yes" xml:space="preserve">
          <source>, can automatically detect if
you don&amp;rsquo;t have PLIB installed, and if so, it will download
and install it for you before installing EMailFilter.</source>
          <target state="translated">は、PLIBがインストールされていないかどうかを自動的に検出できます。インストールされている場合は、EMailFilterをインストールする前にダウンロードしてインストールします。</target>
        </trans-unit>
        <trans-unit id="345ba69cc2fea67ce22656b09e83f149b6b96534" translate="yes" xml:space="preserve">
          <source>, or the</source>
          <target state="translated">、 または</target>
        </trans-unit>
        <trans-unit id="ddbfe46d29072725b61a3ee03c6abfefa0973acd" translate="yes" xml:space="preserve">
          <source>-c</source>
          <target state="translated">-c</target>
        </trans-unit>
        <trans-unit id="d868a680affb6ad2c7e2392566b6adc4e3201dea" translate="yes" xml:space="preserve">
          <source>-n</source>
          <target state="translated">-n</target>
        </trans-unit>
        <trans-unit id="1ffa835f18b0d84b7be1c7c0ecd4eb3e149bf81a" translate="yes" xml:space="preserve">
          <source>-t</source>
          <target state="translated">-t</target>
        </trans-unit>
        <trans-unit id="0a49e354e9dd17267d29d87941a4a2580e28e534" translate="yes" xml:space="preserve">
          <source>. However, the helper module used by EMailFilter&amp;rsquo;s
setup script,</source>
          <target state="translated">。ただし、EMailFilterのセットアップスクリプトで使用されるヘルパーモジュールは、</target>
        </trans-unit>
        <trans-unit id="ad5f0d3aa968bd29b8485d520075dd9cb51f5e7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTER.PY&lt;/strong&gt;: the core filter logic; it allows
you to add as many Python filtering modules as you
want, and will give each filtering module a chance
to examine each e-mail message and (possibly) add
&amp;lsquo;X-&amp;lsquo; headers to record its findings.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTER.PY&lt;/strong&gt;：コアフィルターロジック。必要な数のPythonフィルタリングモジュールを追加でき、各フィルタリングモジュールに各電子メールメッセージを調べて、（場合によっては）「X-」ヘッダーを追加してその結果を記録する機会を与えます。</target>
        </trans-unit>
        <trans-unit id="fa8d57d3cbd88502fdef1c39e6aa7ad930c22c3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERC.PY&lt;/strong&gt;: a command-line client program that
takes its standard input, sends it through a socket
to the daemon on the appropriate port, receives the processed
data back, and writes it to standard output. This
is &lt;em&gt;not&lt;/em&gt; the preferred method of talking to the daemon;
see the</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERC.PY&lt;/strong&gt;：標準入力を受け取り、ソケットを介して適切なポートのデーモンに送信し、処理されたデータを受信して​​標準出力に書き込むコマンドラインクライアントプログラム。これは、デーモンと通信するための推奨される方法ではあり&lt;em&gt;ません&lt;/em&gt;。を参照してください</target>
        </trans-unit>
        <trans-unit id="aca13ba9112e07888524011116d4f9b185493d74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERC&lt;/strong&gt;: a shell script to invoke the client; it
can use</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERC&lt;/strong&gt;：クライアントを呼び出すためのシェルスクリプト。使用できます</target>
        </trans-unit>
        <trans-unit id="43e28b97931ae8774ded8800848c1df77a8a250b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERD.PY&lt;/strong&gt;: the preferred mode of operation
for EMailFilter; it wraps EMAILFILTER.PY in a daemon
that listens on a user-specific port (currently the
port number is 5590 + the user id) and processes each e-mail
message sent to it through that port.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERD.PY：EMailFilter&lt;/strong&gt;の推奨される操作モード。ユーザー固有のポート（現在、ポート番号は5590 +ユーザーID）をリッスンし、そのポートを介して送信された各電子メールメッセージを処理するデーモンでEMAILFILTER.PYをラップします。</target>
        </trans-unit>
        <trans-unit id="bfc33bdcdd6c9d7ba330bf647fe9011021b54c24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERD&lt;/strong&gt;: a shell script to invoke the daemon.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERD&lt;/strong&gt;：デーモンを呼び出すためのシェルスクリプト。</target>
        </trans-unit>
        <trans-unit id="3882a5e89594b54a693e8745093c07f93888526e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EMAILFILTERDEFS.PY&lt;/strong&gt;: common definitions for all
the above modules.</source>
          <target state="translated">&lt;strong&gt;EMAILFILTERDEFS.PY&lt;/strong&gt;：上記のすべてのモジュールに共通の定義。</target>
        </trans-unit>
        <trans-unit id="63101d61d4a65613435628c0ffdc7bf7addd6d36" translate="yes" xml:space="preserve">
          <source>A customizable e-mail content filter.</source>
          <target state="translated">カスタマイズ可能なメールコンテンツフィルタ。</target>
        </trans-unit>
        <trans-unit id="cf3ebf8f74eecd27b471c2991ee7b17d7bd42691" translate="yes" xml:space="preserve">
          <source>EMailFilter is a customizable e-mail content filter
written in Python. It consists of the following
Python modules and shell scripts:</source>
          <target state="translated">EMailFilter は Python で書かれたカスタマイズ可能な電子メールコンテンツフィルタです。以下のPythonモジュールとシェルスクリプトで構成されています。</target>
        </trans-unit>
        <trans-unit id="711f86046eadedee098296749c20990e9058dcfb" translate="yes" xml:space="preserve">
          <source>EMailFilter requires the PLIB Python library package,
which is available from the Python Package Index under the
name</source>
          <target state="translated">EMailFilter は PLIB Python ライブラリパッケージを必要とします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="3ec77ccb09e48d1f860fa56530f9662f05a37bf3" translate="yes" xml:space="preserve">
          <source>Most e-mail clients can be set up to invoke any
desired filter program, sending it messages on standard
input and receiving processed messages on standard output;
thus, to use EMailFilter, simply tell your e-mail client
to invoke</source>
          <target state="translated">ほとんどのメールクライアントは、任意のフィルタプログラムを起動し、標準入力でメッセージを送信し、標準出力で処理されたメッセージを受信するように設定することができます。</target>
        </trans-unit>
        <trans-unit id="15a857bf81f2e990d31ecb018928fa65cad0d691" translate="yes" xml:space="preserve">
          <source>SetupHelper</source>
          <target state="translated">セットアップヘルパー</target>
        </trans-unit>
        <trans-unit id="942a5f363da15c6ed14d297e3245489fb1e30628" translate="yes" xml:space="preserve">
          <source>To install EMailFilter, you can simply run:</source>
          <target state="translated">EMailFilterをインストールするには、実行するだけです。</target>
        </trans-unit>
        <trans-unit id="f66fcce01612266ae8c11ccb435d30c667263134" translate="yes" xml:space="preserve">
          <source>above if necessary, but this
is slow because it requires a new instance of the Python
interpreter to be loaded for each e-mail message (the
message comes in on standard input and the processed
message is written to standard output). The preferred
method is to use either the CFilter program (available on
SourceForge, see &lt;a href=&quot;http://cfilter.sourceforge.net&quot;&gt;http://cfilter.sourceforge.net&lt;/a&gt;) as
the client (this is done by invoking this script with
the</source>
          <target state="translated">必要に応じて上記を参照しますが、電子メールメッセージごとにPythonインタープリターの新しいインスタンスをロードする必要があるため、これは遅くなります（メッセージは標準入力で受信され、処理されたメッセージは標準出力に書き込まれます）。好ましい方法は、（参照、SourceForgeで利用可能CFILTERプログラムのいずれかを使用することです&lt;a href=&quot;http://cfilter.sourceforge.net&quot;&gt;http://cfilter.sourceforge.netを&lt;/a&gt;（これはと、このスクリプトを呼び出すことによって行われているクライアントとして）</target>
        </trans-unit>
        <trans-unit id="e57f6b460138b1d45df955eea7ba00d8e555a4c9" translate="yes" xml:space="preserve">
          <source>as the filter program (you
can leave out the</source>
          <target state="translated">をフィルタプログラムとして使用します(</target>
        </trans-unit>
        <trans-unit id="92ca2409efcc85724c7881aa28584cc2c5b98c76" translate="yes" xml:space="preserve">
          <source>at a shell prompt from the directory into which you
unzipped the source tarball (the same directory that this
README file is in). This will install EMailFilter, and then
run each of the post-install scripts in the scripts
directory.</source>
          <target state="translated">をシェルプロンプトで実行してください。これで EMailFilter がインストールされ、scripts ディレクトリにあるインストール後のスクリプトがそれぞれ実行されます。</target>
        </trans-unit>
        <trans-unit id="055b9ec50e882a652bb6b94ed3558c4b76174325" translate="yes" xml:space="preserve">
          <source>emailfilterc</source>
          <target state="translated">メールフィルタ</target>
        </trans-unit>
        <trans-unit id="e0583ea28d3f33c20c587d8ffcbeb1a154436e87" translate="yes" xml:space="preserve">
          <source>emailfilterc -c</source>
          <target state="translated">emailfilterc -c</target>
        </trans-unit>
        <trans-unit id="f6c01ef30e273de25f3fcc8ddf8aa2044e0c70d3" translate="yes" xml:space="preserve">
          <source>emailfilterc.py</source>
          <target state="translated">emailfilterc.py</target>
        </trans-unit>
        <trans-unit id="e04227249fdfdd11253d2eef9789589a54d09a93" translate="yes" xml:space="preserve">
          <source>nc</source>
          <target state="translated">エヌシー</target>
        </trans-unit>
        <trans-unit id="8ec45b7271aa9736d42a4a9e5ef4480f97b8e869" translate="yes" xml:space="preserve">
          <source>netcat</source>
          <target state="translated">ネットキャット</target>
        </trans-unit>
        <trans-unit id="547da0e78c6ea30a33af11350d7b80683bdd74f7" translate="yes" xml:space="preserve">
          <source>option if it goes by the
command name</source>
          <target state="translated">オプションを指定します。</target>
        </trans-unit>
        <trans-unit id="0367d0c037ef1044bfb5864f4b4c17f36f577acf" translate="yes" xml:space="preserve">
          <source>option) or the &amp;ldquo;TCP/IP swiss army knife&amp;rdquo;
netcat program (this is done by invoking the script with
either the</source>
          <target state="translated">オプション）または「TCP / IPスイスアーミーナイフ」netcatプログラム（これは、スクリプトを呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="7547ef5f0c956cc20103a8f103523725806e114b" translate="yes" xml:space="preserve">
          <source>option, if netcat goes by the command
name</source>
          <target state="translated">オプションを指定すると、 netcat がコマンド名で</target>
        </trans-unit>
        <trans-unit id="73bfbbb9813abafc85c333f40f13bd6aab71f8a8" translate="yes" xml:space="preserve">
          <source>plib</source>
          <target state="translated">ぷにぷに</target>
        </trans-unit>
        <trans-unit id="b5014390e1322352942183b3996e62228665f1e1" translate="yes" xml:space="preserve">
          <source>shell script below.</source>
          <target state="translated">以下のシェルスクリプトを参照してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
