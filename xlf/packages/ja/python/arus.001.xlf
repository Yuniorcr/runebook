<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/arus/">
    <body>
      <group id="arus">
        <trans-unit id="c158a1daebfd720ca67c1fe3c26671bb7dfa2dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[demo]&lt;/code&gt;: This optional component installs dependency supports for running the demo app that demonstrates a real-time interactive activity recognition training and testing program.</source>
          <target state="translated">&lt;code&gt;arus[demo]&lt;/code&gt; ：このオプションのコンポーネントは、リアルタイムのインタラクティブなアクティビティ認識トレーニングおよびテストプログラムを示すデモアプリを実行するための依存関係サポートをインストールします。</target>
        </trans-unit>
        <trans-unit id="efbad0c56155b6009f39d1e39b0adc6b734fb507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[dev]&lt;/code&gt;: These optional component installs dependency supports for running some package and version management functions in the &lt;code&gt;arus.dev&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;arus[dev]&lt;/code&gt; ：これらのオプションのコンポーネントは、 &lt;code&gt;arus.dev&lt;/code&gt; モジュールでいくつかのパッケージおよびバージョン管理機能を実行するための依存関係サポートをインストールします。</target>
        </trans-unit>
        <trans-unit id="36ed836dd82bc20e5a01c217602fba9bb4faf86d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[metawear]&lt;/code&gt;: This optional component installs dependency supports for streaming data from Bluetooth metawear sensors.</source>
          <target state="translated">&lt;code&gt;arus[metawear]&lt;/code&gt; ：このオプションのコンポーネントは、Bluetoothメタウェアセンサーからのストリーミングデータの依存関係サポートをインストールします。</target>
        </trans-unit>
        <trans-unit id="c886f1ecd6b2986111f72eabbc60e5577287de55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arus[nn]&lt;/code&gt;: The optional component installs dependency supports for PyTorch and Tensorboard, which are required by &lt;code&gt;arus.models.report&lt;/code&gt; module. Note that for Windows, you should install the &lt;code&gt;torch&lt;/code&gt; package manually using &lt;code&gt;pip&lt;/code&gt; following the &lt;code&gt;pytorch.org&lt;/code&gt; instruction.</source>
          <target state="translated">&lt;code&gt;arus[nn]&lt;/code&gt; ：オプションコンポーネントは、PyTorchおよびTensorboardの依存関係サポートをインストールします。これらは、 &lt;code&gt;arus.models.report&lt;/code&gt; モジュールで必要です。Windowsの場合、 &lt;code&gt;pytorch.org&lt;/code&gt; の指示に従って &lt;code&gt;pip&lt;/code&gt; を使用して手動で &lt;code&gt;torch&lt;/code&gt; パッケージをインストールする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="55af0c35a2a8df37a3e28045a349907dd0a02028" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ARUS&lt;/strong&gt; python package provides a computational and experimental framework to manage and process sensory data or wireless devices, to develop and run activity recognition algorithms on the data, and to create interactive programs using the algorithms and wireless devices.</source>
          <target state="translated">&lt;strong&gt;ARUS&lt;/strong&gt; pythonパッケージは、感覚データまたは無線デバイスを管理および処理し、データにアクティビティ認識アルゴリズムを開発して実行し、アルゴリズムと無線デバイスを使用してインタラクティブなプログラムを作成するための計算および実験フレームワークを提供します。</target>
        </trans-unit>
        <trans-unit id="453e6cf801535612fc7b1ff0715e98614260c42e" translate="yes" xml:space="preserve">
          <source>Activity Recognition with Ubiquitous Sensing</source>
          <target state="translated">ユビキタスセンシングによる活動認識</target>
        </trans-unit>
        <trans-unit id="afe7e466b52539ac12bef91712f8bc82d1d0b2de" translate="yes" xml:space="preserve">
          <source>After commits, even not bumping and releasing the package, you may run &lt;code&gt;arus package docs --release&lt;/code&gt; to update the documentation website, where the developer version changelogs will be updated immediately.</source>
          <target state="translated">コミットした後、パッケージをぶつけたりリリースしたりしなくても、 &lt;code&gt;arus package docs --release&lt;/code&gt; を実行して、ドキュメントバージョンのウェブサイトを更新できます。開発者バージョンの変更ログはすぐに更新されます。</target>
        </trans-unit>
        <trans-unit id="b4939b44af0db8e69fcca6fe36f957cc79f6b3ba" translate="yes" xml:space="preserve">
          <source>Changelogs are automatically generated when building the documentation website, do not create it manually.</source>
          <target state="translated">チェンジログは、ドキュメントのウェブサイトを構築する際に自動的に生成されますので、手動で作成しないでください。</target>
        </trans-unit>
        <trans-unit id="c01130de5f80e76f155af53c037504beb58e7af7" translate="yes" xml:space="preserve">
          <source>Development conventions</source>
          <target state="translated">開発規約</target>
        </trans-unit>
        <trans-unit id="b125ea73b5247d8e1ead3d46fe0c55d734957c4c" translate="yes" xml:space="preserve">
          <source>Get started for development</source>
          <target state="translated">開発を開始する</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="945853de658aa735720564f8498a773b45d85db9" translate="yes" xml:space="preserve">
          <source>Optional components</source>
          <target state="translated">オプション部品</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="df85c3cce8d09ba96fceaf55a12dc0f1cae20a52" translate="yes" xml:space="preserve">
          <source>Prerequists</source>
          <target state="translated">前置詞</target>
        </trans-unit>
        <trans-unit id="fb9ab6e27152138eca8f6311695f8ccda76dd027" translate="yes" xml:space="preserve">
          <source>Pypi release will be handled by github action &lt;code&gt;deploy.yml&lt;/code&gt;, which will be triggered whenever a new tag is pushed. Therefore, developers should only tag release versions.</source>
          <target state="translated">Pypiリリースはgithubアクション &lt;code&gt;deploy.yml&lt;/code&gt; によって処理され、新しいタグがプッシュされるたびにトリガーされます。したがって、開発者はリリースバージョンのみにタグを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="16d78941db1b98928536a6c08478394a8bbfb0cf" translate="yes" xml:space="preserve">
          <source>This package is licensed under &lt;a href=&quot;https://qutang.github.io/arus/LICENSE/&quot;&gt;GPL version 3&lt;/a&gt;.</source>
          <target state="translated">このパッケージは&lt;a href=&quot;https://qutang.github.io/arus/LICENSE/&quot;&gt;GPLバージョン3で&lt;/a&gt;ライセンスされています。</target>
        </trans-unit>
        <trans-unit id="02359ebc426c745cbd847136a1fe205a601f291c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;arus package release VERSION --release&lt;/code&gt; to bump and tag versions. &lt;code&gt;VERSION&lt;/code&gt; can be manual version code following semantic versioning, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;minor&lt;/code&gt;, or &lt;code&gt;major&lt;/code&gt;.</source>
          <target state="translated">バージョンをバンプおよびタグ付けするには、 &lt;code&gt;arus package release VERSION --release&lt;/code&gt; を使用します。 &lt;code&gt;VERSION&lt;/code&gt; は、セマンティックバージョニング、 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;minor&lt;/code&gt; 、または &lt;code&gt;major&lt;/code&gt; 続く手動バージョンコードにすることができます。</target>
        </trans-unit>
        <trans-unit id="ce34905552a2c5ec1536daedfaa0f514115af8cd" translate="yes" xml:space="preserve">
          <source>Use Google's python coding guidance: &lt;a href=&quot;http://google.github.io/styleguide/pyguide.html&quot;&gt;http://google.github.io/styleguide/pyguide.html&lt;/a&gt;.</source>
          <target state="translated">Googleのpythonコーディングガイダンスを使用します：&lt;a href=&quot;http://google.github.io/styleguide/pyguide.html&quot;&gt;http&lt;/a&gt; : //google.github.io/styleguide/pyguide.html。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
