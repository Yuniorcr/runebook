<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/pastream/">
    <body>
      <group id="pastream">
        <trans-unit id="c31e0d99e1375158004b0b2c953cd525158143be" translate="yes" xml:space="preserve">
          <source>--recursive</source>
          <target state="translated">--recursive</target>
        </trans-unit>
        <trans-unit id="bb7825c9d34486c1e8c632a23b2b84932e7287e1" translate="yes" xml:space="preserve">
          <source>/examples</source>
          <target state="translated">/examples</target>
        </trans-unit>
        <trans-unit id="3463b8b97bd4b9398382f1fdbe8ef9f5ba377ae4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.portaudio.com&quot;&gt;PortAudio&lt;/a&gt; and &lt;a href=&quot;http://www.mega-nerd.com/libsndfile/&quot;&gt;libsndfile&lt;/a&gt; (Linux/Unix):</source>
          <target state="translated">&lt;a href=&quot;http://www.portaudio.com&quot;&gt;PortAudio&lt;/a&gt; and &lt;a href=&quot;http://www.mega-nerd.com/libsndfile/&quot;&gt;libsndfile&lt;/a&gt; (Linux/Unix):</target>
        </trans-unit>
        <trans-unit id="dbbbe00a5bc09dc7880b7fa56deff1d7f1f2acb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://sourceware.org/libffi/&quot;&gt;libffi&lt;/a&gt; (Linux/Unix/MacOSX):</source>
          <target state="translated">&lt;a href=&quot;https://sourceware.org/libffi/&quot;&gt;libffi&lt;/a&gt; (Linux/Unix/MacOSX):</target>
        </trans-unit>
        <trans-unit id="032ab531c87396e1241fd3d19f404c19e664652a" translate="yes" xml:space="preserve">
          <source>Building Documentation</source>
          <target state="translated">ビルディング・ドキュメント</target>
        </trans-unit>
        <trans-unit id="01385765a1d8f6edb95c1e5cbd610c1a1a4b92e7" translate="yes" xml:space="preserve">
          <source>Building From Source</source>
          <target state="translated">ソースからの構築</target>
        </trans-unit>
        <trans-unit id="32e8c8800f8e48c342d1803c5c50e0f8ce76d944" translate="yes" xml:space="preserve">
          <source>Built-in support for working with SoundFiles and numpy ndarrays</source>
          <target state="translated">SoundFiles と numpy ndarrays を扱うための組み込みサポート</target>
        </trans-unit>
        <trans-unit id="1074467e0f6d00993f0a1ea4b92c1829d81e8cd4" translate="yes" xml:space="preserve">
          <source>Checkout the repository and cd into it:</source>
          <target state="translated">リポジトリをチェックアウトして、それにCDを入れます。</target>
        </trans-unit>
        <trans-unit id="a93a69f80046b7cb208829e2e538313361539b33" translate="yes" xml:space="preserve">
          <source>Clone pastream with the</source>
          <target state="translated">でpastreamをクローンします。</target>
        </trans-unit>
        <trans-unit id="8fcd001da8baed1607dd225a2d08866c68dfdfb1" translate="yes" xml:space="preserve">
          <source>Command Line Application</source>
          <target state="translated">コマンドラインアプリケーション</target>
        </trans-unit>
        <trans-unit id="53b1087d49932f053b1c91a931356352933264dc" translate="yes" xml:space="preserve">
          <source>Display the help file:</source>
          <target state="translated">ヘルプファイルを表示します。</target>
        </trans-unit>
        <trans-unit id="87f2ce2b2ab25beb1df14db598ffdd38f384a1f9" translate="yes" xml:space="preserve">
          <source>Documentation for pastream can be easily generated in a wide variety of formats
using Sphinx. Just follow the steps below.</source>
          <target state="translated">pastreamのためのドキュメントは、Sphinxを使って簡単に様々な形式で生成することができます。以下の手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="ed0350dc3257153d84758ae6cd511caacb10aa9d" translate="yes" xml:space="preserve">
          <source>Documentation:</source>
          <target state="translated">ドキュメンテーション。</target>
        </trans-unit>
        <trans-unit id="4b032728c016f4a7b56413be7ab91431947a2c1f" translate="yes" xml:space="preserve">
          <source>Efficiently retrieve live audio capture data through an iterable. As simple as:</source>
          <target state="translated">イテレート可能なライブオーディオキャプチャデータを効率的に取得します。簡単です。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="d910266533ff5b374016693b85046fff9f7a9821" translate="yes" xml:space="preserve">
          <source>External Dependencies</source>
          <target state="translated">外部依存性</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特徴</target>
        </trans-unit>
        <trans-unit id="ca0e5c2353800e920bcd76e229cc3b809f64a4ee" translate="yes" xml:space="preserve">
          <source>Finally, do a pip install from your local working copy:</source>
          <target state="translated">最後に、ローカルの作業コピーから pip インストールを行います。</target>
        </trans-unit>
        <trans-unit id="cd363c3a604225295361e62b30e5cfd228b4c09b" translate="yes" xml:space="preserve">
          <source>GIL-less Audio Callbacks</source>
          <target state="translated">GILレス・オーディオ・コールバック</target>
        </trans-unit>
        <trans-unit id="dfe6d9c8d9f3f69393d34889921d27eb5d5dc195" translate="yes" xml:space="preserve">
          <source>GIL-less Portaudio Streams for Python</source>
          <target state="translated">Python用のGILレスPortaudioストリーム</target>
        </trans-unit>
        <trans-unit id="8caf62a8a25e87053e3d4357a208201dd7e65e56" translate="yes" xml:space="preserve">
          <source>Generate a pure tone on-the-fly</source>
          <target state="translated">その場でピュアトーンを生成</target>
        </trans-unit>
        <trans-unit id="94490b0a2d1b633d9011accbc416a9406ce5cd10" translate="yes" xml:space="preserve">
          <source>Grab (real) frequency transformed live audio stream with 50% overlap:</source>
          <target state="translated">50%のオーバーラップで(実際の)周波数変換されたライブオーディオストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="6dbe057e0308a57c862fad954677e5f7aa9cc518" translate="yes" xml:space="preserve">
          <source>Having the portaudio callback implemented in C means audio interrupts can
be serviced quickly and reliably without ever needing to acquire the Python
Global Interpreter Lock (GIL). This is crucial when working with libraries
like &lt;a href=&quot;https://python-pillow.org/&quot;&gt;Pillow&lt;/a&gt; which may greedily grab and
hold the GIL subsequently causing audio overruns/underruns.</source>
          <target state="translated">Having the portaudio callback implemented in C means audio interrupts can be serviced quickly and reliably without ever needing to acquire the Python Global Interpreter Lock (GIL). This is crucial when working with libraries like &lt;a href=&quot;https://python-pillow.org/&quot;&gt;Pillow&lt;/a&gt; which may greedily grab and hold the GIL subsequently causing audio overruns/underruns.</target>
        </trans-unit>
        <trans-unit id="7ff60f9f341abb06f9497b9bbbdff38a1f84721a" translate="yes" xml:space="preserve">
          <source>Input Stream iterators</source>
          <target state="translated">入力ストリームのイテレータ</target>
        </trans-unit>
        <trans-unit id="8b242e941d69babb42d7e6c2ce77940428884d0f" translate="yes" xml:space="preserve">
          <source>Install documentation dependencies using requirements file:</source>
          <target state="translated">要件ファイルを使用してドキュメントの依存関係をインストールします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="968d0ac714975a3fd54a0d59477998b186ecc06e" translate="yes" xml:space="preserve">
          <source>Linux and Unix users will also need to install a recent version of the</source>
          <target state="translated">Linux および Unix ユーザは、最新バージョンの</target>
        </trans-unit>
        <trans-unit id="96e4c91532724e9f235569c72e1b2c4ca16f331b" translate="yes" xml:space="preserve">
          <source>List available audio devices:</source>
          <target state="translated">使用可能なオーディオ機器をリストアップします。</target>
        </trans-unit>
        <trans-unit id="c5e0f0a617382ab5c8207c19de52b51a55a22e08" translate="yes" xml:space="preserve">
          <source>More information on installing</source>
          <target state="translated">インストールの詳細はこちら</target>
        </trans-unit>
        <trans-unit id="07dd474d13820d984edf7f2edfc357cded0774dc" translate="yes" xml:space="preserve">
          <source>Once installed, the pastream application should be callable from your command
line. If you&amp;rsquo;re familiar with &lt;a href=&quot;http://sox.sourceforge.net/&quot;&gt;SoX&lt;/a&gt; you&amp;rsquo;ll
notice that some of the command line syntax is quite similar. Here are a few
examples to help get you started.</source>
          <target state="translated">Once installed, the pastream application should be callable from your command line. If you&amp;rsquo;re familiar with &lt;a href=&quot;http://sox.sourceforge.net/&quot;&gt;SoX&lt;/a&gt; you&amp;rsquo;ll notice that some of the command line syntax is quite similar. Here are a few examples to help get you started.</target>
        </trans-unit>
        <trans-unit id="b21503fda19415d88b601c281f15c286955f847a" translate="yes" xml:space="preserve">
          <source>Once the above dependencies have been resolved, you can install pastream using
pip:</source>
          <target state="translated">上記の依存関係が解消されたら、pipを使ってpastreamをインストールします。</target>
        </trans-unit>
        <trans-unit id="679a6ec2dce32a510f85145578bf2858b5f99ac8" translate="yes" xml:space="preserve">
          <source>Or, if you already have a checkout:</source>
          <target state="translated">もしくは、すでにチェックアウトしている場合。</target>
        </trans-unit>
        <trans-unit id="4290162d7b2f024abe24e675d5b2e684c78effbf" translate="yes" xml:space="preserve">
          <source>Pipe input from sox using the AU format and record the playback:</source>
          <target state="translated">auフォーマットでソックスからパイプ入力して再生録音。</target>
        </trans-unit>
        <trans-unit id="64b0a13d50c2fee79ab4f00643f37cd1ce094bd5" translate="yes" xml:space="preserve">
          <source>Play a RAW file:</source>
          <target state="translated">RAWファイルを再生します。</target>
        </trans-unit>
        <trans-unit id="49f5caa8138cf355fb7932ebee8f54872a4b24e5" translate="yes" xml:space="preserve">
          <source>Playback 10 seconds of a file, adding zero padding if the file is shorter, and
record the result to memory:</source>
          <target state="translated">ファイルを10秒再生し、ファイルが短い場合はパディングをゼロにして、その結果をメモリに記録します。</target>
        </trans-unit>
        <trans-unit id="89a46693301c5693687f523b55b4d37023611672" translate="yes" xml:space="preserve">
          <source>PortAudio</source>
          <target state="translated">ポートオーディオ</target>
        </trans-unit>
        <trans-unit id="a4e56d6e6b55889efc82657ec8db1054dc8c8128" translate="yes" xml:space="preserve">
          <source>Reader/Writer Threads</source>
          <target state="translated">読者・ライタースレッド</target>
        </trans-unit>
        <trans-unit id="5814c2fc6b08fe308d7a7d46336c2eb5977a20b6" translate="yes" xml:space="preserve">
          <source>Record 10 minutes of audio at 48kHz:</source>
          <target state="translated">48kHzで10分間の音声を録音します。</target>
        </trans-unit>
        <trans-unit id="375a2c35f5e31771112984df5b57ca21a6362a0b" translate="yes" xml:space="preserve">
          <source>Record one second of audio to memory, then play it back:</source>
          <target state="translated">1秒間の音声をメモリに録音し、再生します。</target>
        </trans-unit>
        <trans-unit id="dab5bded3e0cfcbed35ac9b72dfc3adbe684657a" translate="yes" xml:space="preserve">
          <source>Seamless support for playback/recording of numpy ndarrays, generic buffer
types, and SoundFiles.</source>
          <target state="translated">numpy ndarrays、汎用バッファタイプ、SoundFilesの再生/録音をシームレスにサポート。</target>
        </trans-unit>
        <trans-unit id="ce3df4d818316dd10c7bca5ae8539c894dc07dbb" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">ご覧ください。</target>
        </trans-unit>
        <trans-unit id="0f1095d1229bec98472fdba5f5d8a8fa8b04fbb2" translate="yes" xml:space="preserve">
          <source>See also the included examples under</source>
          <target state="translated">の下に含まれる例も参照してください。</target>
        </trans-unit>
        <trans-unit id="f3c9d46627d5c51e6b67274b5f3f547b23af24be" translate="yes" xml:space="preserve">
          <source>Simultaneous play and record from the default audio device:</source>
          <target state="translated">デフォルトのオーディオデバイスからの同時再生と録音。</target>
        </trans-unit>
        <trans-unit id="4573fc159477b4a49e0ae59d330d0a1ba1b26d6f" translate="yes" xml:space="preserve">
          <source>Source code repository and issue tracker:</source>
          <target state="translated">ソースコードリポジトリとイシュートラッカー。</target>
        </trans-unit>
        <trans-unit id="af179d504c5b663b0b60f276fc5ef68b31d03880" translate="yes" xml:space="preserve">
          <source>Then use the included Makefile/make.bat to generate documentation. (Here we
output to the html format):</source>
          <target state="translated">そして、付属のMakefile/make.batを使ってドキュメントを生成します。(ここではhtml形式で出力しています)。</target>
        </trans-unit>
        <trans-unit id="be596ddf5c8a3948226dd39f9202af4b7f44c585" translate="yes" xml:space="preserve">
          <source>There are a few compiled libraries pastream requires which &lt;em&gt;may&lt;/em&gt; need to be
installed separately depending on your operating system. Windows users are
luckiest, they can skip this section entirely.</source>
          <target state="translated">There are a few compiled libraries pastream requires which &lt;em&gt;may&lt;/em&gt; need to be installed separately depending on your operating system. Windows users are luckiest, they can skip this section entirely.</target>
        </trans-unit>
        <trans-unit id="7d8edf370eae46c1114854d501de80f1f0f032f4" translate="yes" xml:space="preserve">
          <source>Under Linux/Unix/MacOSX platforms you&amp;rsquo;ll need to install the ffi
library. (For Windows users, ffi is already included with the python cffi
package.)  libffi is available through most package managers:</source>
          <target state="translated">Under Linux/Unix/MacOSX platforms you&amp;rsquo;ll need to install the ffi library. (For Windows users, ffi is already included with the python cffi package.) libffi is available through most package managers:</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="5275c416c6d877d7780559080d0cdfae38ce57b2" translate="yes" xml:space="preserve">
          <source>apt-get install libportaudio2 libsndfile</source>
          <target state="translated">apt-get install libportaudio2 libsndfile</target>
        </trans-unit>
        <trans-unit id="4c2739da77bbfe79a70e61f9d468372506bfcc90" translate="yes" xml:space="preserve">
          <source>builds on top of &lt;a href=&quot;http://www.portaudio.com/&quot;&gt;portaudio&lt;/a&gt; and the
excellent &lt;a href=&quot;http://github.com/spatialaudio/python-sounddevice&quot;&gt;sounddevice&lt;/a&gt;
python bindings to provide some more advanced functionality right out of the
box. Note that in addition to the pastream &lt;em&gt;library&lt;/em&gt;, pastream includes a
&lt;a href=&quot;#command-line-application&quot;&gt;command line application&lt;/a&gt; for playing
and recording audio files.</source>
          <target state="translated">builds on top of &lt;a href=&quot;http://www.portaudio.com/&quot;&gt;portaudio&lt;/a&gt; and the excellent &lt;a href=&quot;http://github.com/spatialaudio/python-sounddevice&quot;&gt;sounddevice&lt;/a&gt; python bindings to provide some more advanced functionality right out of the box. Note that in addition to the pastream &lt;em&gt;library&lt;/em&gt;, pastream includes a &lt;a href=&quot;#command-line-application&quot;&gt;command line application&lt;/a&gt; for playing and recording audio files.</target>
        </trans-unit>
        <trans-unit id="bfb25acacfee9b368b8451a01028b79227967aef" translate="yes" xml:space="preserve">
          <source>flag:</source>
          <target state="translated">フラグを表示しています。</target>
        </trans-unit>
        <trans-unit id="54e8aeef7a2daa0ebf6af699ba899a4ed6aeab2c" translate="yes" xml:space="preserve">
          <source>for debian/raspbian) or
install the latest stable build from the package website (Recommended).</source>
          <target state="translated">for debian/raspbian)またはパッケージサイトから最新の安定版をインストールしてください (推奨)。</target>
        </trans-unit>
        <trans-unit id="ba0f4bd6ac46da9060116744cfea15a5f62268b5" translate="yes" xml:space="preserve">
          <source>is available in the cffi
documentation &lt;a href=&quot;https://cffi.readthedocs.io/en/latest/installation.html#platform-specific-instructions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">is available in the cffi documentation &lt;a href=&quot;https://cffi.readthedocs.io/en/latest/installation.html#platform-specific-instructions&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2c0d2e15cfeb57ee73c16304c7416183dbe12289" translate="yes" xml:space="preserve">
          <source>libffi</source>
          <target state="translated">リブフィ</target>
        </trans-unit>
        <trans-unit id="4e34bb4f76b2ab56102a5cbc54a8a33126f1b3e9" translate="yes" xml:space="preserve">
          <source>libraries. (For Windows and OSX, the
sounddevice and soundfile python packages include prebuilt versions for
you.) You can either install the latest available from your package manager
(e.g.</source>
          <target state="translated">ライブラリを使用しています。(Windows と OSX の場合、sounddevice と soundfile python パッケージにはビルド済みのバージョンが含まれています)。パッケージマネージャから最新のものをインストールするか (例えば</target>
        </trans-unit>
        <trans-unit id="6e45b81870335b709ab38d95a0a965c90488f31b" translate="yes" xml:space="preserve">
          <source>libsndfile</source>
          <target state="translated">リブサンドファイル</target>
        </trans-unit>
        <trans-unit id="946465000bd9e24c032001a54783f3574c94142e" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="translated">メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="dd77d72bbccc1b42626617eda65eee213d0827c9" translate="yes" xml:space="preserve">
          <source>pastream</source>
          <target state="translated">過ぎ去りし日</target>
        </trans-unit>
        <trans-unit id="0e7c1b356a2a55c851f43d210f47642c2523cda5" translate="yes" xml:space="preserve">
          <source>pastream simplifies the process of implementing stream reader and writer
threads to manipulate and/or generate data in the background while leaving
the main thread free for higher level management tasks.</source>
          <target state="translated">pastream は、メインスレッドをより高度な管理タスクのために自由にしておきながら、バックグラウンドでデータを操作したり生成したりするためのストリームリーダとライタースレッドの実装プロセスを簡素化します。</target>
        </trans-unit>
        <trans-unit id="f37e6ad94ba4a9ad95334980d48ac6e2c7971db4" translate="yes" xml:space="preserve">
          <source>pastream.InputStream.chunks</source>
          <target state="translated">pastream.InputStream.chunks</target>
        </trans-unit>
        <trans-unit id="95b55ffce10cf5172b37026fb4f724691ed563a0" translate="yes" xml:space="preserve">
          <source>pastream.chunks</source>
          <target state="translated">パストリーム・チャンク</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
