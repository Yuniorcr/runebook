<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/pycld3/">
    <body>
      <group id="pycld3">
        <trans-unit id="09989bf3c012ec1bb9170cf703eb925145ad8b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cld3&lt;/code&gt; exports two module-level functions, &lt;code&gt;get_language()&lt;/code&gt; and &lt;code&gt;get_frequent_languages()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;cld3&lt;/code&gt; は、2つのモジュールレベルの関数 &lt;code&gt;get_language()&lt;/code&gt; と &lt;code&gt;get_frequent_languages()&lt;/code&gt; をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="a62f400e9f0d8bc0d52078ed8a619c2475c97ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cld3&lt;/code&gt; incorrectly detects my input.  How can I fix this?</source>
          <target state="translated">&lt;code&gt;cld3&lt;/code&gt; が私の入力を誤って検出します。どうすればこれを修正できますか？</target>
        </trans-unit>
        <trans-unit id="a2d3434c65c5e86b3d170e26feebc9e95cb12e9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcc-c++&lt;/code&gt; with &lt;code&gt;g++&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;gcc-c++&lt;/code&gt; と &lt;code&gt;g++&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a057b50babeae86858f345e9278260de17def10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;python3-devel&lt;/code&gt; with &lt;code&gt;python-devel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;python3-devel&lt;/code&gt; と &lt;code&gt;python-devel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d116263bdf1ca3c8262e85d58a691f26c14ff76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;:
&lt;a href=&quot;https://pythonspeed.com/articles/alpine-docker-python/&quot;&gt;Alpine Linux does not support PyPI wheels&lt;/a&gt;
as of April 2020.  The steps below are mandatory on Alpine Linux because you will need
to install from the source distribution.  If the situation permits, using a Debian distro
should be much easier (and faster).</source>
          <target state="translated">&lt;em&gt;注&lt;/em&gt;：&lt;a href=&quot;https://pythonspeed.com/articles/alpine-docker-python/&quot;&gt;Alpine Linuxは&lt;/a&gt;、2020年4月の時点でPyPIホイールをサポートしていません。ソースディストリビューションからインストールする必要があるため、AlpineLinuxでは以下の手順が必須です。状況が許せば、Debianディストリビューションの使用ははるかに簡単（そして高速）になるはずです。</target>
        </trans-unit>
        <trans-unit id="55b615141657b16b56642c65b60e5892da7214fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In some other cases, you cannot fix the incorrect detection.&lt;/strong&gt;
Language detection algorithms in general may perform poorly with very short inputs.
Rarely should you trust the output of something like &lt;code&gt;detect(&quot;hi&quot;)&lt;/code&gt;.  Keep this limitation in mind regardless
of what library you are using.</source>
          <target state="translated">&lt;strong&gt;その他の場合、誤った検出を修正できないことがあります。&lt;/strong&gt;一般に、言語検出アルゴリズムは、入力が非常に短いとパフォーマンスが低下する可能性があります。まれに、 &lt;code&gt;detect(&quot;hi&quot;)&lt;/code&gt; のような出力を信頼する必要があります。使用しているライブラリに関係なく、この制限に注意してください。</target>
        </trans-unit>
        <trans-unit id="1e0a3988996f1dd1c3b93acfc22e578ea9c124d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Linux&lt;/strong&gt;: CPython 3.5, 3.6, 3.7, and 3.8; the wheels are &lt;a href=&quot;https://www.python.org/dev/peps/pep-0513/#the-manylinux1-policy&quot;&gt;manylinux1&lt;/a&gt;
x86-64 wheels, so should work on a varity of Linux variants.</source>
          <target state="translated">&lt;strong&gt;Linux&lt;/strong&gt;：CPython 3.5、3.6、3.7、および3.8; ホイールは&lt;a href=&quot;https://www.python.org/dev/peps/pep-0513/#the-manylinux1-policy&quot;&gt;manylinux1x86-64&lt;/a&gt;ホイールであるため、さまざまなLinuxバリアントで動作するはずです。</target>
        </trans-unit>
        <trans-unit id="e7f8e2d85a8f71bfce2427224bf90726c90d6bdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MacOS 10.13 and 10.15&lt;/strong&gt;: CPython 3.5, 3.6, 3.7, and 3.8.</source>
          <target state="translated">&lt;strong&gt;MacOS 10.13および10.15&lt;/strong&gt;：CPython 3.5、3.6、3.7、および3.8。</target>
        </trans-unit>
        <trans-unit id="55b2762bc6bd8ba8e1d8e5243827ef21cd86a374" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;Note&lt;/em&gt;: This URL regex aims for simplicity.  It requires a domain name, and doesn't allow a username or password; it allows the scheme
(http or https) to be omitted if it can be inferred from the subdomain (www).  Source: &lt;em&gt;Regular Expressions Cookbook, 2nd ed.&lt;/em&gt; - Goyvaerts &amp;amp; Levithan.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;注&lt;/em&gt;：このURL正規表現は、単純化を目的としています。ドメイン名が必要であり、ユーザー名やパスワードは許可されていません。サブドメイン（www）から推測できる場合は、スキーム（httpまたはhttps）を省略できます。出典：&lt;em&gt;Regular Expressions Cookbook、第2版。&lt;/em&gt;--Goyvaerts＆Levithan。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="069db9b46b0f5fd14a9665ac7e9a9d30003ca8ed" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;The wheels for both MacOS and manylinux1 include the external protobuf library copied into the wheel itself
via &lt;a href=&quot;https://github.com/pypa/auditwheel&quot;&gt;auditwheel&lt;/a&gt; or
&lt;a href=&quot;https://github.com/matthew-brett/delocate&quot;&gt;delocate&lt;/a&gt; so that you won't need to install any extra non-PyPI dependencies.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;MacOSのとmanylinux1の両方の車輪が経由して、ホイール自体にコピーされた外部いるProtobufライブラリが含ま&lt;a href=&quot;https://github.com/pypa/auditwheel&quot;&gt;auditwheel&lt;/a&gt;または&lt;a href=&quot;https://github.com/matthew-brett/delocate&quot;&gt;delocateを&lt;/a&gt;使用すると、余分な非は、PyPIの依存関係をインストールする必要はありませんように。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a97755e419d3adc005dff48e3ab875187560c09d" translate="yes" xml:space="preserve">
          <source>A first resort is to &lt;strong&gt;preprocess (clean) your input text&lt;/strong&gt; based on conditions specific to your program.</source>
          <target state="translated">最初の手段は、プログラムに固有の条件に基づい&lt;strong&gt;て入力テキスト&lt;/strong&gt;を&lt;strong&gt;前処理（クリーンアップ）すること&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="b46eced8b81da5ec72b670de4d7d37e72abdf596" translate="yes" xml:space="preserve">
          <source>A salient example is to remove URLs and email addresses from the input.  &lt;strong&gt;CLD3 (unlike &lt;a href=&quot;https://github.com/CLD2Owners/cld2&quot;&gt;CLD2&lt;/a&gt;)
does almost none of this cleaning for you&lt;/strong&gt;, in the spirit of not penalizing other users with overhead that they may not need.</source>
          <target state="translated">顕著な例は、入力からURLと電子メールアドレスを削除することです。&lt;strong&gt;CLD3（CLD2とは異なり）は&lt;a href=&quot;https://github.com/CLD2Owners/cld2&quot;&gt;&lt;/a&gt;&lt;/strong&gt;、他のユーザーに必要のないオーバーヘッドでペナルティを&lt;strong&gt;課さ&lt;/strong&gt;ないという精神で、&lt;strong&gt;このクリーニングをほとんど実行&lt;/strong&gt;しません。</target>
        </trans-unit>
        <trans-unit id="d37f4ff1a2b4f0ecc135be09ff64034730d58d3c" translate="yes" xml:space="preserve">
          <source>Alfredo Luque (&lt;a href=&quot;https://github.com/iamthebot&quot;&gt;@iamthebot&lt;/a&gt;)</source>
          <target state="translated">アルフレド・ルケ（&lt;a href=&quot;https://github.com/iamthebot&quot;&gt;@iamthebot&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b22b9b68907cb792712aa38be0dc788fd38bfd3d" translate="yes" xml:space="preserve">
          <source>Alpine Linux</source>
          <target state="translated">アルパインリナックス</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">著者</target>
        </trans-unit>
        <trans-unit id="421f8b995c3c2d17bb839cdb3d37d264523e994b" translate="yes" xml:space="preserve">
          <source>Brad Solomon (&lt;a href=&quot;https://github.com/bsolomon1124&quot;&gt;@bsolomon1124&lt;/a&gt;)</source>
          <target state="translated">ブラッド・ソロモン（&lt;a href=&quot;https://github.com/bsolomon1124&quot;&gt;@ bsolomon1124&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="58437493b5b514a4255dfa3e92cb68cd1d8357c7" translate="yes" xml:space="preserve">
          <source>CLD3 Python bindings</source>
          <target state="translated">CLD3 Python バインディング</target>
        </trans-unit>
        <trans-unit id="31f638d4256cac5197fad975a7a32487286699ba" translate="yes" xml:space="preserve">
          <source>CentOS/RHEL</source>
          <target state="translated">セントス/RHEL</target>
        </trans-unit>
        <trans-unit id="48c68b51ec546420339181c96645a39010433e47" translate="yes" xml:space="preserve">
          <source>Debian/Ubuntu</source>
          <target state="translated">Debian/Ubuntu</target>
        </trans-unit>
        <trans-unit id="dbbf51696012ecb309a677a70fe7f9ce60cd3a1d" translate="yes" xml:space="preserve">
          <source>Elizabeth Myers (&lt;a href=&quot;https://github.com/Elizafox&quot;&gt;@Elizafox&lt;/a&gt;)</source>
          <target state="translated">エリザベスマイヤーズ（&lt;a href=&quot;https://github.com/Elizafox&quot;&gt;@Elizafox&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">よくあるご質問</target>
        </trans-unit>
        <trans-unit id="d539fe3499cdc23a03a24adca66157a1db6aaac7" translate="yes" xml:space="preserve">
          <source>First, please make sure you have read the &lt;a href=&quot;#installation-supported-versions-and-platforms&quot;&gt;installation&lt;/a&gt; section that that you have
installed Protobuf if necessary.</source>
          <target state="translated">まず、必要に応じて、Protobufを&lt;a href=&quot;#installation-supported-versions-and-platforms&quot;&gt;インストールし&lt;/a&gt;たインストールセクションを読んでください。</target>
        </trans-unit>
        <trans-unit id="a984ad6ce4317464a5e2b0ebbec90b666ebdf772" translate="yes" xml:space="preserve">
          <source>Here's such an example using a simplified URL regex from &lt;em&gt;Regular Expressions Cookbook, 2nd ed.&lt;/em&gt;:</source>
          <target state="translated">これは、&lt;em&gt;Regular Expressions Cookbook、第2版の&lt;/em&gt;簡略化されたURL正規表現を使用したそのような例&lt;em&gt;です。&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="598d0bea7909f459bb6c1608cd0e65c19a23fc07" translate="yes" xml:space="preserve">
          <source>I'm seeing an error during &lt;code&gt;pip&lt;/code&gt; installation.  How can I fix this?</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; のインストール中にエラーが発生します。どうすればこれを修正できますか？</target>
        </trans-unit>
        <trans-unit id="064ff28e0ee21b59e58552087f8c2f49690a0766" translate="yes" xml:space="preserve">
          <source>If for whatever reason you are on a Unix host but unable to use the wheels (for instance, if you have an i686 architecture), here is a quick-and-dirty guide to installing.</source>
          <target state="translated">何らかの理由で Unix ホスト上にいてホイールが使えない場合 (例えば i686 アーキテクチャを使っている場合)には、ここにインストールの簡単で簡単なガイドがあります。</target>
        </trans-unit>
        <trans-unit id="8318ba0e1643b1c9fc009f192638792babb47ddc" translate="yes" xml:space="preserve">
          <source>If that doesn't help, please &lt;a href=&quot;https://github.com/bsolomon1124/pycld3/issues&quot;&gt;file an issue&lt;/a&gt; in this repository.
The build process for this project is somewhat complex because it involves both Cython and Protobuf, but I do my best
to make it work everywhere possible.</source>
          <target state="translated">それでも問題が解決しない場合は、このリポジトリに&lt;a href=&quot;https://github.com/bsolomon1124/pycld3/issues&quot;&gt;問題&lt;/a&gt;を報告してください。このプロジェクトのビルドプロセスは、CythonとProtobufの両方が関係するため、やや複雑ですが、可能な限り機能するように最善を尽くしています。</target>
        </trans-unit>
        <trans-unit id="7a05f359aeb41fcb1e4c2ee1969119f21b2f4fee" translate="yes" xml:space="preserve">
          <source>If you are installing on one of the variants listed above, you should &lt;strong&gt;not&lt;/strong&gt; need to have &lt;code&gt;protoc&lt;/code&gt; or &lt;code&gt;libprotobuf&lt;/code&gt; installed.  All you need is a recent version (19 or later) of &lt;code&gt;pip&lt;/code&gt;:</source>
          <target state="translated">上記のバリアントのいずれかにインストールする場合は、 &lt;code&gt;protoc&lt;/code&gt; または &lt;code&gt;libprotobuf&lt;/code&gt; をインストールする必要&lt;strong&gt;は&lt;/strong&gt;ありませ&lt;strong&gt;ん&lt;/strong&gt;。必要なのは、 &lt;code&gt;pip&lt;/code&gt; の最新バージョン（19以降）だけです。</target>
        </trans-unit>
        <trans-unit id="9678f1e962206b87b675e2eed7d87f2b6c3031c8" translate="yes" xml:space="preserve">
          <source>If you are not on a platform variant that is eligible to use a wheel, you may still be able to use &lt;code&gt;pycld3&lt;/code&gt; via its &lt;a href=&quot;https://docs.python.org/3/distutils/sourcedist.html&quot;&gt;source distribution&lt;/a&gt; (&lt;code&gt;tar.gz&lt;/code&gt;), but a bit more work is required to install.
Namely, you'll also need:</source>
          <target state="translated">ホイールを使用する資格のあるプラットフォームバリアントを使用していない場合でも、&lt;a href=&quot;https://docs.python.org/3/distutils/sourcedist.html&quot;&gt;ソースディストリビューション&lt;/a&gt;（ &lt;code&gt;tar.gz&lt;/code&gt; ）を介して &lt;code&gt;pycld3&lt;/code&gt; を使用できる場合がありますが、インストールにはもう少し作業が必要です。つまり、次のものも必要になります。</target>
        </trans-unit>
        <trans-unit id="d20418280d6101b72b9113b95eacf60fc9870b0b" translate="yes" xml:space="preserve">
          <source>If you would like to help contribute Windows wheels (preferably as a job within the project's
CI/CD pipelines), please &lt;a href=&quot;https://github.com/bsolomon1124/pycld3&quot;&gt;file an issue&lt;/a&gt;.</source>
          <target state="translated">Windowsホイールの提供を支援したい場合（できればプロジェクトのCI / CDパイプライン内のジョブとして）、&lt;a href=&quot;https://github.com/bsolomon1124/pycld3&quot;&gt;問題&lt;/a&gt;を提出してください。</target>
        </trans-unit>
        <trans-unit id="2aca81992b32141b989f9cb2c932f34c5baa821f" translate="yes" xml:space="preserve">
          <source>If you've installed Protobuf, but are seeing an error such as:</source>
          <target state="translated">Protobufをインストールしたにもかかわらず、次のようなエラーが表示されている場合。</target>
        </trans-unit>
        <trans-unit id="f55aca16a92fd9dc9ad68a9f6b269d6c6dc8b367" translate="yes" xml:space="preserve">
          <source>Install from source, as root/UID 0:</source>
          <target state="translated">ソースからroot/UID 0でインストールします。</target>
        </trans-unit>
        <trans-unit id="957f4d02f4ed41d9857ec09662d7524e225b312f" translate="yes" xml:space="preserve">
          <source>Installing from Source: Prerequisites</source>
          <target state="translated">ソースからのインストール 前提条件</target>
        </trans-unit>
        <trans-unit id="468b98371ae886b34cde774efc191341a2eb0caa" translate="yes" xml:space="preserve">
          <source>Installing with Wheels: Supported Versions and Platforms</source>
          <target state="translated">ホイールを使ったインストール サポートされているバージョンとプラットフォーム</target>
        </trans-unit>
        <trans-unit id="3d05cf63506f0e51f70b939b06699ac504e62f3a" translate="yes" xml:space="preserve">
          <source>Johannes Baiter (&lt;a href=&quot;https://github.com/jbaiter&quot;&gt;@jbaiter&lt;/a&gt;)</source>
          <target state="translated">Johannes &lt;a href=&quot;https://github.com/jbaiter&quot;&gt;Baiter&lt;/a&gt;（@jbaiter）</target>
        </trans-unit>
        <trans-unit id="1c3e33b3b70bb7b1ffe8e391b869a78926507e2c" translate="yes" xml:space="preserve">
          <source>MacOS/Homebrew</source>
          <target state="translated">MacOS/Homebrew</target>
        </trans-unit>
        <trans-unit id="7931f6871b73fe8cf1718a6606df9c4e45c81158" translate="yes" xml:space="preserve">
          <source>Note: the steps above are for CentOS 8.  For earlier versions, you may need to replace:</source>
          <target state="translated">注:上記の手順はCentOS 8の場合です。それ以前のバージョンの場合は、置き換える必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="56b3aaa191f0e9d9e54098d1ba80e17d4e4ce453" translate="yes" xml:space="preserve">
          <source>Please consult &lt;a href=&quot;https://github.com/protocolbuffers/protobuf&quot;&gt;the official protobuf repository&lt;/a&gt; for information on installing Protobuf.
The project contains an &lt;a href=&quot;https://github.com/protocolbuffers/protobuf/tree/master/src&quot;&gt;Installation README&lt;/a&gt; that covers installation
on Windows and Unix.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/protocolbuffers/protobuf&quot;&gt;Protobufの&lt;/a&gt;インストールについては、公式のprotobufリポジトリを参照してください。プロジェクトには、WindowsおよびUnixへのインストールをカバーする&lt;a href=&quot;https://github.com/protocolbuffers/protobuf/tree/master/src&quot;&gt;インストールREADME&lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="2f7c2854f64e1cd7e000abb650f27df040a39eba" translate="yes" xml:space="preserve">
          <source>Please consult Protobuf's
&lt;a href=&quot;https://github.com/protocolbuffers/protobuf/tree/master/src#c-installation---windows&quot;&gt;C++ Installation - Windows&lt;/a&gt;
section for help with installing Protobuf on Windows.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/protocolbuffers/protobuf/tree/master/src#c-installation---windows&quot;&gt;Windowsへの&lt;/a&gt;Protobufのインストールについては、ProtobufのC ++インストール-Windowsセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="890000c25a950d64eedce699bba2d38da44fb86a" translate="yes" xml:space="preserve">
          <source>Please remember that, at the end of the day, this project is just a Python wrapper to the CLD3 C++ library that does the actual heavy-lifting.</source>
          <target state="translated">一日の終わりに、このプロジェクトは、実際にヘビーリフティングを行うCLD3 C++ライブラリへのPythonのラッパーに過ぎないことを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="2845ae8712137778cca66dc117d7e69385c7ed76" translate="yes" xml:space="preserve">
          <source>Protobuf is installed, but I'm still seeing &quot;cannot open shared object file&quot;</source>
          <target state="translated">Protobufはインストールされていますが、&quot;cannot open shared object file &quot;が表示されます。</target>
        </trans-unit>
        <trans-unit id="20b165e590947734eaac42c1356ffddf28944282" translate="yes" xml:space="preserve">
          <source>Python bindings to the Compact Language Detector v3 (CLD3).</source>
          <target state="translated">Compact Language Detector v3 (CLD3)へのPythonバインディング。</target>
        </trans-unit>
        <trans-unit id="a08247fed1ab4ed655d22991edf644aa8e8a8d02" translate="yes" xml:space="preserve">
          <source>RNogales (&lt;a href=&quot;https://github.com/RNogales94&quot;&gt;@RNogales94&lt;/a&gt;)</source>
          <target state="translated">RNogales（&lt;a href=&quot;https://github.com/RNogales94&quot;&gt;@ RNogales94&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6430af97d368aeb0d4644992a02c828ac17ae6ca" translate="yes" xml:space="preserve">
          <source>Then, you can add the directory containing this file to &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;:</source>
          <target state="translated">次に、このファイルを含むディレクトリを &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; に追加できます。</target>
        </trans-unit>
        <trans-unit id="6a2048f93c14374b3a7bf49d2bbbb5a4845c52c8" translate="yes" xml:space="preserve">
          <source>This likely means that Python is not finding the &lt;code&gt;libprotobuf&lt;/code&gt; shared object,
possibly because &lt;code&gt;ldconfig&lt;/code&gt; didn't do what it was supposed to.
You may need to tell it where to look.</source>
          <target state="translated">これは、Pythonが &lt;code&gt;libprotobuf&lt;/code&gt; 共有オブジェクトを見つけていないことを意味している可能性があり &lt;code&gt;ldconfig&lt;/code&gt; 。これは、おそらくldconfigが想定どおりに機能しなかったためです。どこを見ればよいかを伝える必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="084ac048da41eae66da04f84e15e76fd35bdab89" translate="yes" xml:space="preserve">
          <source>This package contains Python bindings (via Cython) to Google's &lt;a href=&quot;https://github.com/google/cld3/&quot;&gt;CLD3&lt;/a&gt; library.</source>
          <target state="translated">このパッケージには、Googleの&lt;a href=&quot;https://github.com/google/cld3/&quot;&gt;CLD3&lt;/a&gt;ライブラリへの（Cython経由の）Pythonバインディングが含まれています。</target>
        </trans-unit>
        <trans-unit id="553085436e8a3b776f9c5763dbee3217e6662d42" translate="yes" xml:space="preserve">
          <source>This project supports &lt;strong&gt;CPython versions 3.5 through 3.8.&lt;/strong&gt;</source>
          <target state="translated">このプロジェクトは、&lt;strong&gt;CPythonバージョン3.5から3.8を&lt;/strong&gt;サポートし&lt;strong&gt;ます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1de5464f9dd479304b1462345e3724727d139a60" translate="yes" xml:space="preserve">
          <source>This repository contains a fork of &lt;a href=&quot;https://github.com/google/cld3/&quot;&gt;&lt;code&gt;google/cld3&lt;/code&gt;&lt;/a&gt; at commit 06f695f.  The license for &lt;code&gt;google/cld3&lt;/code&gt; can be found at
&lt;a href=&quot;https://github.com/bsolomon1124/pycld3/blob/master/LICENSES/CLD3_LICENSE&quot;&gt;LICENSES/CLD3_LICENSE&lt;/a&gt;.</source>
          <target state="translated">このリポジトリには、コミット06f695fでの&lt;a href=&quot;https://github.com/google/cld3/&quot;&gt; &lt;code&gt;google/cld3&lt;/code&gt; の&lt;/a&gt;フォークが含まれています。 &lt;code&gt;google/cld3&lt;/code&gt; のライセンスは、&lt;a href=&quot;https://github.com/bsolomon1124/pycld3/blob/master/LICENSES/CLD3_LICENSE&quot;&gt;LICENSES / CLD3_LICENSEにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="18ef40dda70bd5a69fa3d2c3a3518908b459e5a8" translate="yes" xml:space="preserve">
          <source>This repository is a combination of changes &lt;a href=&quot;https://github.com/google/cld3/issues/15&quot;&gt;introduced&lt;/a&gt; by &lt;a href=&quot;https://github.com/google/cld3/network/members&quot;&gt;various forks&lt;/a&gt; of &lt;code&gt;google/cld3&lt;/code&gt; by the following people:</source>
          <target state="translated">このリポジトリには、変化の組み合わせで&lt;a href=&quot;https://github.com/google/cld3/issues/15&quot;&gt;導入&lt;/a&gt;することにより&lt;a href=&quot;https://github.com/google/cld3/network/members&quot;&gt;、様々なフォーク&lt;/a&gt;の &lt;code&gt;google/cld3&lt;/code&gt; 以下の人々によって：</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="f84b8046bd465c70c28f4df6f2aa2f7bb7736a35" translate="yes" xml:space="preserve">
          <source>WISESIGHT (&lt;a href=&quot;https://github.com/ThothMedia&quot;&gt;@ThothMedia&lt;/a&gt;)</source>
          <target state="translated">WISESIGHT（&lt;a href=&quot;https://github.com/ThothMedia&quot;&gt;@ThothMedia&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="0fc69f98eada27cc4025d8e4e6d8746e885a47d0" translate="yes" xml:space="preserve">
          <source>We publish &lt;a href=&quot;https://pypi.org/project/pycld3/#files&quot;&gt;wheels&lt;/a&gt; for the following matrix:</source>
          <target state="translated">次のマトリックスの&lt;a href=&quot;https://pypi.org/project/pycld3/#files&quot;&gt;ホイール&lt;/a&gt;を公​​開しています。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">ウィンドウズ</target>
        </trans-unit>
        <trans-unit id="2dd9f8821ce7c2fd4cba920957155533205d4f37" translate="yes" xml:space="preserve">
          <source>Witold Bołt (&lt;a href=&quot;https://github.com/houp&quot;&gt;@houp&lt;/a&gt;)</source>
          <target state="translated">WitoldBołt（&lt;a href=&quot;https://github.com/houp&quot;&gt;@houp&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f96f64fb8613fa72e72257919bb1a6cf926f94fe" translate="yes" xml:space="preserve">
          <source>You can find where the library sits via:</source>
          <target state="translated">図書館がどこにあるのかは、こちらから確認できます。</target>
        </trans-unit>
        <trans-unit id="cb90e7412aff8894e253feb0b2409726ef728ed0" translate="yes" xml:space="preserve">
          <source>You can quickly test that this worked:</source>
          <target state="translated">これがうまくいったことをすぐにテストできます。</target>
        </trans-unit>
        <trans-unit id="0b81d38889f06ef3412b63b331cfd734b173ee39" translate="yes" xml:space="preserve">
          <source>a compiler, preferably &lt;code&gt;g++&lt;/code&gt;</source>
          <target state="translated">コンパイラ、できれば &lt;code&gt;g++&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="124a86766680e67f5da4194318884c677cd0b681" translate="yes" xml:space="preserve">
          <source>the Protobuf compiler (the &lt;code&gt;protoc&lt;/code&gt; executable)</source>
          <target state="translated">Protobufコンパイラ（ &lt;code&gt;protoc&lt;/code&gt; 実行可能ファイル）</target>
        </trans-unit>
        <trans-unit id="4e3f39f575b3b89574a1cf0bd1e49f401baf3e25" translate="yes" xml:space="preserve">
          <source>the Protobuf development headers and &lt;code&gt;libprotoc&lt;/code&gt; library</source>
          <target state="translated">Protobuf開発ヘッダーと &lt;code&gt;libprotoc&lt;/code&gt; ライブラリ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
