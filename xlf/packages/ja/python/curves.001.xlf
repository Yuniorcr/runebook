<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/curves/">
    <body>
      <group id="curves">
        <trans-unit id="29382ac9b12af35645c8a1ed14b43b3d61b4a90a" translate="yes" xml:space="preserve">
          <source>Bootstrapper</source>
          <target state="translated">ブートラッパー</target>
        </trans-unit>
        <trans-unit id="ab35e63581777d22917208125da3857bc58cb078" translate="yes" xml:space="preserve">
          <source>Curve Granularity</source>
          <target state="translated">曲線の粒度</target>
        </trans-unit>
        <trans-unit id="09143a846ef21837b76c5f738b5ece5f998683a0" translate="yes" xml:space="preserve">
          <source>Daily granularity natural gas forward curves from traded daily, weekly, monthly, quarterly, seasonal, and
gas year granularity forward and futures prices.</source>
          <target state="translated">取引された日次、週次、月次、四半期、季節、ガス年度粒度のフォワードと先物価格からの日次粒度天然ガスフォワードカーブ。</target>
        </trans-unit>
        <trans-unit id="b44aafd75c229d9b9f6dfd71f0a43d1261a59996" translate="yes" xml:space="preserve">
          <source>Displays the following:</source>
          <target state="translated">以下のように表示されます。</target>
        </trans-unit>
        <trans-unit id="4bbd5f18c92ad38e2f8aa755dd2baa7abfc3ebd8" translate="yes" xml:space="preserve">
          <source>Examples of types of curve which can be constructed using this package:</source>
          <target state="translated">本パッケージを用いて作成できる曲線の種類の例です。</target>
        </trans-unit>
        <trans-unit id="2987df553ec0f175145fe98b8bdae1b03dcc2700" translate="yes" xml:space="preserve">
          <source>For details of more advanced usage, view the docstrings for either of these functions and the Jupyter Notebook &lt;a href=&quot;https://github.com/cmdty/curves/blob/master/samples/python/curves_tutorial.ipynb&quot;&gt;curves_tutorial&lt;/a&gt;.</source>
          <target state="translated">For details of more advanced usage, view the docstrings for either of these functions and the Jupyter Notebook &lt;a href=&quot;https://github.com/cmdty/curves/blob/master/samples/python/curves_tutorial.ipynb&quot;&gt;curves_tutorial&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8977fab35d3650c07a1c808f77a63bf37cf9c34f" translate="yes" xml:space="preserve">
          <source>Half-hourly granularity power forward curves from traded daily, weekly, monthly, quarterly, and seasonal
granularity forward and futures prices.</source>
          <target state="translated">取引されている日次、週次、月次、四半期、季節ごとの粒度のフォワードと先物価格からの半時間ごとの粒度のパワーフォワードカーブ。</target>
        </trans-unit>
        <trans-unit id="a55247d3e31387e013a7d6c62d1a2137ff77c12f" translate="yes" xml:space="preserve">
          <source>In order to facility creating a curve with higher granularity than the input contracts, the curves package includes the max_smooth_interp function.
This uses a maximum smoothness algorithm to interpolate input contracts with a fourth-order spline, whilst maintaining the average price constraints
inherent in the input contract prices.</source>
          <target state="translated">入力コントラクトよりも高い粒度のカーブを作成するために、 curvesパッケージにはmax_smooth_interp関数が含まれています。これは、入力契約価格に固有の平均価格制約を維持しながら、4次スプラインで入力契約を補間するために最大平滑化アルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="15ff7d736bf058c04c1402a35a8e3bec9c105337" translate="yes" xml:space="preserve">
          <source>Monthly granularity oil products swap curves from traded monthly, quarterly, and calendar yearly granularity
market swap rates.</source>
          <target state="translated">取引された毎月、四半期、暦年粒度市場のスワップレートから毎月の粒度オイル製品のスワップカーブ。</target>
        </trans-unit>
        <trans-unit id="5a2f91c1bc442b72e2a36050b118aa84afbec49a" translate="yes" xml:space="preserve">
          <source>More specifically, the problem being solved is to take a collection of traded forward prices, and tranform these into a
forward curve of homogenous granularity. Additionally the derived curve can constructed to be in a granularity higher
than what is traded in the market.</source>
          <target state="translated">より具体的には、解決される問題は、取引されているフォワード価格のコレクションを取り、これらを均質な粒度のフォワードカーブに変換することです。さらに、派生した曲線は、市場で取引されているものよりも高い粒度になるように構築することができます。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="a80fcaf19390f7f56abc231dedbc41849cbd5b9e" translate="yes" xml:space="preserve">
          <source>Spline Interpolation</source>
          <target state="translated">スプライン補間</target>
        </trans-unit>
        <trans-unit id="b8fa33b3a4860f367576e8083528dd2c2f77c94e" translate="yes" xml:space="preserve">
          <source>The above code prints to the following:</source>
          <target state="translated">上記のコードは以下のように印刷されます。</target>
        </trans-unit>
        <trans-unit id="ec49fbb92d933c95fe9b31607d881c3331abe8ef" translate="yes" xml:space="preserve">
          <source>The basic functionality of the method bootstrap_contracts is to take a set of forward prices, for contracts with overlapping
delivery/fixing periods, and return a curve with overlapping periods removed, but with prices consistent with the original inputs.
Below is a basic example showing prices for January and Q1 delivery period periods being bootstrapped into
consistent January, February and March forward prices.</source>
          <target state="translated">bootstrap_contractsメソッドの基本的な機能は、配送期間と固定期間が重なっている契約の先渡価格のセットを取り、重なっている期間を取り除いた曲線を返しますが、価格は元の入力と一致しています。以下は、1月、2月、3月の一貫した先渡価格にブートストラップされている1月とQ1の配信期間の価格を示す基本的な例です。</target>
        </trans-unit>
        <trans-unit id="ea9a76f90a8c6d058c6aa3b59574594879af36b5" translate="yes" xml:space="preserve">
          <source>The curves package contains a set of tools for building commodity forward, swaps, and futures curves.</source>
          <target state="translated">カーブパッケージには、商品フォワード、スワップ、先物カーブを構築するためのツールセットが含まれています。</target>
        </trans-unit>
        <trans-unit id="952d3eef342cc0a59457f5b9e03fcbf38c1822d2" translate="yes" xml:space="preserve">
          <source>The example below creates a daily granularity curve, from input contracts of various granularities. As would usually be the case in a practical scenario,
the bootstrap_contracts method is first used to remove the overlaps from the contracts. The example below also shows how the input contracts can have gaps
between them, which the spline will interpolate over, filling in the gaps in the final smooth curve. It also demonstrates the different ways of representing
the contract delivery period in the contract tuples and use of the helper module contract_period.</source>
          <target state="translated">以下の例では、さまざまな粒度の入力コントラクトから日次粒度曲線を作成しています。通常、実用的なシナリオではそうですが、最初に bootstrap_contracts メソッドを使用して、契約から重複を削除します。下の例は、入力行列がどのように隙間を持つことができるかを示しており、スプラインが補間し、最終的な滑らかな曲線の隙間を埋めます。また、契約タプルでの契約期間の表現方法の違いや、ヘルパーモジュール contract_period の使用方法も示しています。</target>
        </trans-unit>
        <trans-unit id="6567434af8c128ce2b5fde8e59a6ee466ae1b816" translate="yes" xml:space="preserve">
          <source>The granularity of the derived curves is controlled by the string passed in as the freq parameter. For returned values
which are of type pandas.Series, this parameter is used when constructing these objects, with more details on the these
frequency strings found in the pandas documentation
&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;here&lt;/a&gt;.
The package level dict variable FREQ_TO_PERIOD_TYPE contains a mapping between freq parameter values and the underlying
managed types from the &lt;a href=&quot;https://github.com/cmdty/time-period-value-types&quot;&gt;.NET Time Period Library&lt;/a&gt; used to represent
the resulting curve index type, and hence granularity. As such, the keys of
FREQ_TO_PERIOD_TYPE can be used to determine the set of admissible values for the freq parameter.</source>
          <target state="translated">The granularity of the derived curves is controlled by the string passed in as the freq parameter. For returned values which are of type pandas.Series, this parameter is used when constructing these objects, with more details on the these frequency strings found in the pandas documentation &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;here&lt;/a&gt;. The package level dict variable FREQ_TO_PERIOD_TYPE contains a mapping between freq parameter values and the underlying managed types from the &lt;a href=&quot;https://github.com/cmdty/time-period-value-types&quot;&gt;.NET Time Period Library&lt;/a&gt; used to represent the resulting curve index type, and hence granularity. As such, the keys of FREQ_TO_PERIOD_TYPE can be used to determine the set of admissible values for the freq parameter.</target>
        </trans-unit>
        <trans-unit id="b3122bc4d17eda3a50469728a14cfd89f25a091a" translate="yes" xml:space="preserve">
          <source>The resulting curves should be consistent with inputs, in that they average back to the input forward contract prices.
This is a necessary to ensure that there are no arbitrage opportunities introduced between input contracts, and the derived forward curve.</source>
          <target state="translated">結果として得られるカーブは、入力されたフォワード契約の価格に平均的に戻るという点で、入力と一致していなければならない。これは、入力契約と派生したフォワードカーブの間に導入された裁定取引の機会がないことを保証するために必要である。</target>
        </trans-unit>
        <trans-unit id="19d469ba0eb5317380c7d482a8dc23844b5908fd" translate="yes" xml:space="preserve">
          <source>Tools for building commodity forward, swaps, and futures curves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ec73ff9e8dc0e480a3f484260badf4b56041c3" translate="yes" xml:space="preserve">
          <source>Two functions in the curves package are the core of the curve building calculations; bootstrap_contracts and max_smooth_interp.
Some basic examples of both of these function are given below. Both of these methods make extensive use of pandas, with
the pandas.Series type used to represent forward curves, and pandas.Period for the delivery period of an input forward contract
or derived forward curve.</source>
          <target state="translated">curvesパッケージに含まれる2つの関数は、曲線構築計算の中核となるものです。これらの関数の基本的な例を以下に示します。これらの方法は、どちらもpandas.Series型を用いてフォワード曲線を表現し、pandas.Periodを入力フォワード契約または派生フォワード曲線の配信期間に使用しています。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
