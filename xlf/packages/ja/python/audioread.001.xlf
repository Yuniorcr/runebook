<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/audioread/">
    <body>
      <group id="audioread">
        <trans-unit id="a3e03da92f7de2acb3efced48251bff53546865a" translate="yes" xml:space="preserve">
          <source>) containing raw &lt;strong&gt;16-bit little-endian signed integer PCM
data&lt;/strong&gt;. (Currently, these PCM format parameters are not configurable, but this
could be added to most of the backends.)</source>
          <target state="translated">）生の&lt;strong&gt;16ビットリトルエンディアン符号付き整数PCMデータ&lt;/strong&gt;を含み&lt;strong&gt;ます&lt;/strong&gt;。（現在、これらのPCM形式のパラメーターは構成可能ではありませんが、ほとんどのバックエンドに追加できます。）</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">、</target>
        </trans-unit>
        <trans-unit id="d2eaaa9bdf039da9e91ea52b4b7e64982afda0de" translate="yes" xml:space="preserve">
          <source>, are missing.
The GStreamer backend now accepts relative paths.
Fix a hang in GStreamer when the stream finishes before it begins (when
reading broken files).
Initial support for Python 3.</source>
          <target state="translated">、欠落しています。GStreamerバックエンドが相対パスを受け入れるようになりました。開始前にストリームが終了したとき（壊れたファイルを読み取るとき）にGStreamerがハングする問題を修正しました。Python 3の初期サポート。</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">、または</target>
        </trans-unit>
        <trans-unit id="5a4d178aa61d59ca0c260d65e87f6db7fb76eed6" translate="yes" xml:space="preserve">
          <source>. Each buffer is a bytes-like object (</source>
          <target state="translated">。各バッファはバイトのようなオブジェクトです（</target>
        </trans-unit>
        <trans-unit id="17d878547a6cc186f09a446a2a26d97c908dc142" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.apple.com/technologies/mac/audio-and-video.html&quot;&gt;Core Audio&lt;/a&gt; on Mac OS X via &lt;a href=&quot;http://docs.python.org/library/ctypes.html&quot;&gt;ctypes&lt;/a&gt;. (PyObjC not required.)</source>
          <target state="translated">&lt;a href=&quot;http://developer.apple.com/technologies/mac/audio-and-video.html&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://docs.python.org/library/ctypes.html&quot;&gt;ctypes&lt;/a&gt;を介したMac OS X上のCore Audio。（PyObjCは不要です。）</target>
        </trans-unit>
        <trans-unit id="d9f6651ca458c9520ced11784a73969b06ba8ac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt; or &lt;a href=&quot;https://www.libav.org/&quot;&gt;Libav&lt;/a&gt; via its command-line interface.</source>
          <target state="translated">&lt;a href=&quot;http://ffmpeg.org/&quot;&gt;&lt;/a&gt;コマンドラインインターフェイスを介したFFmpegまたは&lt;a href=&quot;https://www.libav.org/&quot;&gt;Libav&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d89245b92f1d52f507934886304a78fb8dcf9a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://gstreamer.freedesktop.org/&quot;&gt;Gstreamer&lt;/a&gt; via &lt;a href=&quot;https://pygobject.readthedocs.io/&quot;&gt;PyGObject&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://gstreamer.freedesktop.org/&quot;&gt;PyGObject&lt;/a&gt;を介した&lt;a href=&quot;https://pygobject.readthedocs.io/&quot;&gt;Gstreamer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="774c9559d03b9f34b166fa147066717fe8a567c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.underbit.com/products/mad/&quot;&gt;MAD&lt;/a&gt; via the &lt;a href=&quot;http://spacepants.org/src/pymad/&quot;&gt;pymad&lt;/a&gt; bindings.</source>
          <target state="translated">&lt;a href=&quot;http://www.underbit.com/products/mad/&quot;&gt;MAD&lt;/a&gt;経由&lt;a href=&quot;http://spacepants.org/src/pymad/&quot;&gt;pymad&lt;/a&gt;バインディング。</target>
        </trans-unit>
        <trans-unit id="9292a3b0f4a29b1ef7ae59b893d0f8fb5d19b384" translate="yes" xml:space="preserve">
          <source>A second optional parameter to</source>
          <target state="translated">2番目のオプションパラメータは</target>
        </trans-unit>
        <trans-unit id="4e3aca4ff3be21e33fd4200ffbb57ac57229c029" translate="yes" xml:space="preserve">
          <source>Add support for FFmpeg on Windows (thanks to Jean-Christophe Saad-Dupuy).</source>
          <target state="translated">WindowsでのFFmpegのサポートを追加(Jean-Christophe Saad-Dupuy氏に感謝)。</target>
        </trans-unit>
        <trans-unit id="1b3f581a702660f861567fe8481cebecae5b7900" translate="yes" xml:space="preserve">
          <source>Add support for Sun/NeXT &lt;a href=&quot;http://en.wikipedia.org/wiki/Au_file_format&quot;&gt;Au files&lt;/a&gt; via the standard-library</source>
          <target state="translated">標準ライブラリを介してSun / NeXT &lt;a href=&quot;http://en.wikipedia.org/wiki/Au_file_format&quot;&gt;Auファイルの&lt;/a&gt;サポートを追加する</target>
        </trans-unit>
        <trans-unit id="1f178d35b7ae54f1e7eb08e7752b0d689831280f" translate="yes" xml:space="preserve">
          <source>Additional values are available as fields on the audio file object:</source>
          <target state="translated">追加の値は、オーディオファイルオブジェクトのフィールドとして利用可能です。</target>
        </trans-unit>
        <trans-unit id="534f50a1a613aa4be1d73264ce30ac4eef51205b" translate="yes" xml:space="preserve">
          <source>All decoding errors are now subclasses of</source>
          <target state="translated">すべてのデコードエラーは、現在では</target>
        </trans-unit>
        <trans-unit id="56e03ac7e07ff8dc858b270314b57ff49ef1672f" translate="yes" xml:space="preserve">
          <source>Audioread is &amp;ldquo;universal&amp;rdquo; and supports both Python 2 (2.6+) and Python 3
(3.2+).</source>
          <target state="translated">Audioreadは「ユニバーサル」で、Python 2（2.6以降）とPython 3（3.2以降）の両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="7fa0362df6182e785bda8f2af02f1bdad9d26aee" translate="yes" xml:space="preserve">
          <source>Avoid some warnings in the GStreamer backend when using modern versions of
GLib. We now require at least GLib 2.32.</source>
          <target state="translated">最新バージョンのGLibを使用している場合、GStreamerのバックエンドでいくつかの警告を回避してください。少なくとも GLib 2.32 以上を必要とするようになりました。</target>
        </trans-unit>
        <trans-unit id="84cc1787561dc9fd9e2ccdbc0151747e8d82b78e" translate="yes" xml:space="preserve">
          <source>Buffers in the file can be accessed by iterating over the object returned from</source>
          <target state="translated">から返されたオブジェクトを繰り返し処理することで、ファイル内のバッファにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="3269d3e5242e119c0470d444f81936881c415b8d" translate="yes" xml:space="preserve">
          <source>Catch GStreamer&amp;rsquo;s exception when necessary components, such as</source>
          <target state="translated">次のような必要なコンポーネントがある場合、GStreamerの例外をキャッチします。</target>
        </trans-unit>
        <trans-unit id="36a3ddd4607214fb8fb0b4bf5a860484266625c2" translate="yes" xml:space="preserve">
          <source>Decode audio files using whichever backend is available. The library
currently supports:</source>
          <target state="translated">利用可能なバックエンドを使ってオーディオファイルをデコードします。このライブラリは現在サポートしています。</target>
        </trans-unit>
        <trans-unit id="af5331f290c888dcafc00d46d0555b6bd8eced38" translate="yes" xml:space="preserve">
          <source>DecodeError</source>
          <target state="translated">デコードエラー</target>
        </trans-unit>
        <trans-unit id="804c2c21e7e3bb290b6e0809ed91ee05a38f1d3a" translate="yes" xml:space="preserve">
          <source>Et Cetera</source>
          <target state="translated">エトセトラ</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="be4b7afc0de0478e3634191dde1dcbfd96a97c37" translate="yes" xml:space="preserve">
          <source>Fix a &amp;ldquo;no such process&amp;rdquo; crash in the FFmpeg backend on Windows Subsystem for
Linux (thanks to @llamasoft).
Avoid suppressing SIGINT in the GStreamer backend on older versions of
PyGObject (thanks to @lazka).</source>
          <target state="translated">Linux用WindowsサブシステムのFFmpegバックエンドでの「そのようなプロセスがない」クラッシュを修正しました（@llamasoftに感謝）。古いバージョンのPyGObjectのGStreamerバックエンドでSIGINTを抑制しないようにしてください（@lazkaに感謝）。</target>
        </trans-unit>
        <trans-unit id="929436b22eb798aa5e524067e600e4e865af27a8" translate="yes" xml:space="preserve">
          <source>Fix a bug in the FFmpeg backend where, after closing a file, the program&amp;rsquo;s
standard input stream would be &amp;ldquo;broken&amp;rdquo; and wouldn&amp;rsquo;t receive any input.</source>
          <target state="translated">FFmpegバックエンドのバグを修正します。ファイルを閉じた後、プログラムの標準入力ストリームが「破損」し、入力を受け取りません。</target>
        </trans-unit>
        <trans-unit id="31288178634dfad218204761243ec7562f04cfcb" translate="yes" xml:space="preserve">
          <source>Fix a file descriptor leak when opening and closing many files using
GStreamer.</source>
          <target state="translated">GStreamer を使用して多くのファイルを開閉する際のファイルディスクリプターのリークを修正しました。</target>
        </trans-unit>
        <trans-unit id="8d228e379acaf298f8de629dd3a7670b1b7daeb1" translate="yes" xml:space="preserve">
          <source>Fix a hang in the GStreamer backend that occurs occasionally on some
platforms.</source>
          <target state="translated">一部のプラットフォームで時々発生する GStreamer バックエンドのハングを修正しました。</target>
        </trans-unit>
        <trans-unit id="88a26a2109b3b4dc62c86f758b72e406aa5aa5a4" translate="yes" xml:space="preserve">
          <source>Fix a problem with the Gstreamer backend where audio files could be left open
even after the</source>
          <target state="translated">Gstreamer のバックエンドで、オーディオファイルが</target>
        </trans-unit>
        <trans-unit id="d5442a0dd254b5c8e640a21cfb0a0aabd61ef730" translate="yes" xml:space="preserve">
          <source>Fix an unhandled</source>
          <target state="translated">手の届かないところで固定</target>
        </trans-unit>
        <trans-unit id="a3aa7998d3a339aea0c584a3d65e72631d313293" translate="yes" xml:space="preserve">
          <source>Fix an unhandled exception when opening non-raw audio files (thanks to
aostanin).
Fix Python 3 compatibility for the raw-file backend.</source>
          <target state="translated">(aostanin のおかげで)raw ではないオーディオファイルを開いたときに発生していた手のかからない例外を修正しました。raw-file バックエンドの Python 3 互換性を修正。</target>
        </trans-unit>
        <trans-unit id="7844d000fc9893ada77bddbbe84a045e63bdda0a" translate="yes" xml:space="preserve">
          <source>Fix channel count detection for FFmpeg backend.</source>
          <target state="translated">FFmpeg バックエンドのチャンネルカウント検出を修正。</target>
        </trans-unit>
        <trans-unit id="4666860658562f7cece66b4255a62262c8ef0017" translate="yes" xml:space="preserve">
          <source>Fix crash when FFmpeg fails to report a duration.
Fix a hang when FFmpeg fills up its stderr output buffer.
Add a timeout to</source>
          <target state="translated">FFmpeg がデュレーションのレポートに失敗した場合のクラッシュを修正。FFmpeg が標準エラー出力バッファを一杯にした時のハングを修正。タイムアウトを</target>
        </trans-unit>
        <trans-unit id="637e667da7889a47d144c88947415f5b404d9d63" translate="yes" xml:space="preserve">
          <source>Fix opening WAV and AIFF files via Unicode filenames.</source>
          <target state="translated">Unicode ファイル名で WAV と AIFF ファイルを開くのを修正しました。</target>
        </trans-unit>
        <trans-unit id="0dac8a68da52b6b46920ae3f7237c145e4b5e425" translate="yes" xml:space="preserve">
          <source>GstAudioFile</source>
          <target state="translated">ジーストオーディオファイル</target>
        </trans-unit>
        <trans-unit id="a7aaaf8103e147f7508e66b5f7be824742d34faa" translate="yes" xml:space="preserve">
          <source>IOError</source>
          <target state="translated">アイオーエラー</target>
        </trans-unit>
        <trans-unit id="970d9459b2c3bd1aab215bea63f715a31dc6bf75" translate="yes" xml:space="preserve">
          <source>Initial release.</source>
          <target state="translated">初回リリース。</target>
        </trans-unit>
        <trans-unit id="65dae59bad85a6db837299e4a42c08db20f45624" translate="yes" xml:space="preserve">
          <source>Just fix ReST formatting in the README.</source>
          <target state="translated">READMEでReSTのフォーマットを修正してください。</target>
        </trans-unit>
        <trans-unit id="a19ce08bcebbb06519a3b9ddf47f32f528dbe174" translate="yes" xml:space="preserve">
          <source>Make FFmpeg timeout more robust.
Dump FFmpeg output on timeout.
Fix a nondeterministic hang in the Gstreamer backend.
Fix a file descriptor leak in the MAD backend.</source>
          <target state="translated">FFmpeg のタイムアウトをより強固なものにした。タイムアウト時に FFmpeg 出力をダンプするようにした。Gstreamer バックエンドの非決定的なハングを修正。MAD バックエンドのファイルディスクリプターリークを修正。</target>
        </trans-unit>
        <trans-unit id="495dc72791fecbe14725db696ffa42ad8b5edf3d" translate="yes" xml:space="preserve">
          <source>OSError</source>
          <target state="translated">オーエスエラー</target>
        </trans-unit>
        <trans-unit id="34b72bc281ce459080bf7e33d5f9b5cd6bb2fc30" translate="yes" xml:space="preserve">
          <source>Properly clean up the file handle when a backend fails to decode a file.
Fix parsing of &amp;ldquo;N.M&amp;rdquo; channel counts in the FFmpeg backend (thanks to @piem).
Avoid a crash in the raw backend when a file uses an unsupported number of
bits per sample (namely, 24-bit samples in Python &amp;lt; 3.4).
Add a</source>
          <target state="translated">バックエンドがファイルのデコードに失敗したときに、ファイルハンドルを適切にクリーンアップします。FFmpegバックエンドでの「NM」チャネルカウントの解析を修正（@piemに感謝）。ファイルがサンプルあたりサポートされていないビット数（つまり、Python &amp;lt;3.4の24ビットサンプル）を使用する場合に、生のバックエンドでのクラッシュを回避します。追加する</target>
        </trans-unit>
        <trans-unit id="65836690b39dc8b8ec7e6f04fb9750d9e75a9330" translate="yes" xml:space="preserve">
          <source>Properly close some filehandles in the FFmpeg backend (thanks to
@RyanMarcus and @ssssam).
The maddec backend now always produces bytes objects, like the other
backends (thanks to @ssssam).
Resolve an audio data memory leak in the GStreamer backend (thanks again to
@ssssam).
You can now optionally specify which specific backends</source>
          <target state="translated">FFmpeg バックエンドのいくつかのファイルハンドルを適切に閉じるようにした (@RyanMarcus と @ssssam に感謝します)。maddec バックエンドは、他のバックエンドと同様に常にバイトオブジェクトを生成するようになりました(@ssssamさんのおかげです)。GStreamer バックエンドのオーディオデータのメモリリークを解決しました (@ssssam さんのおかげです)。オプションで特定のバックエンドを指定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="f2ae63e73fd1f993d2f2b49a0a570b1f78c26172" translate="yes" xml:space="preserve">
          <source>ReadTimeoutError</source>
          <target state="translated">リードタイムアウトエラー</target>
        </trans-unit>
        <trans-unit id="2d83b46416a841412be2af21b1ca4aaf1cb1b88d" translate="yes" xml:space="preserve">
          <source>Send SIGKILL, not SIGTERM, to ffmpeg processes to avoid occasional hangs.</source>
          <target state="translated">ffmpegプロセスにSIGTERMではなくSIGKILLを送信してハングアップを回避します。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="183f3268644077f173fc2bfe3eb946a6aed983f4" translate="yes" xml:space="preserve">
          <source>The FFmpeg backend can now also use Libav&amp;rsquo;s</source>
          <target state="translated">FFmpegバックエンドは、Libavの</target>
        </trans-unit>
        <trans-unit id="2361c083f56fb52c072b3727fc05f642db3aaa36" translate="yes" xml:space="preserve">
          <source>The GStreamer backend now uses GStreamer 1.x via the new
gobject-introspection API (and is compatible with Python 3).</source>
          <target state="translated">GStreamerバックエンドは、新しいgobject-introspection APIを介してGStreamer 1.xを使用するようになりました(Python 3との互換性があります)。</target>
        </trans-unit>
        <trans-unit id="6b010e41a3a506fe0004d4c15cb054fc7c71d424" translate="yes" xml:space="preserve">
          <source>The included</source>
          <target state="translated">同梱されている</target>
        </trans-unit>
        <trans-unit id="f369059ecc220e8f8d598ad3a236c87bf9b55706" translate="yes" xml:space="preserve">
          <source>The standard library &lt;a href=&quot;http://docs.python.org/library/wave.html&quot;&gt;wave&lt;/a&gt;, &lt;a href=&quot;http://docs.python.org/library/aifc.html&quot;&gt;aifc&lt;/a&gt;, and &lt;a href=&quot;http://docs.python.org/library/sunau.html&quot;&gt;sunau&lt;/a&gt; modules (for
uncompressed audio formats).</source>
          <target state="translated">標準ライブラリの&lt;a href=&quot;http://docs.python.org/library/wave.html&quot;&gt;wave&lt;/a&gt;、&lt;a href=&quot;http://docs.python.org/library/aifc.html&quot;&gt;aifc&lt;/a&gt;、および&lt;a href=&quot;http://docs.python.org/library/sunau.html&quot;&gt;sunau&lt;/a&gt;モジュール（非圧縮オーディオ形式用）。</target>
        </trans-unit>
        <trans-unit id="7682ba41f2d8f6990b0eb878a4d9dc084a11ce1d" translate="yes" xml:space="preserve">
          <source>Use the library like so:</source>
          <target state="translated">そんな感じで図書館を利用します。</target>
        </trans-unit>
        <trans-unit id="5e6aba0477858d0d284f9b82924599aa9c572704" translate="yes" xml:space="preserve">
          <source>Use the rawread (standard-library) backend for .wav files.</source>
          <target state="translated">.wav ファイルには rawread (標準ライブラリ)バックエンドを使用します。</target>
        </trans-unit>
        <trans-unit id="6974ab729b6242600700a81b1ec6d4d1a48c0a94" translate="yes" xml:space="preserve">
          <source>Version History</source>
          <target state="translated">バージョン履歴</target>
        </trans-unit>
        <trans-unit id="966cecf492f3edbd3c667cb04fbe0af4f7705512" translate="yes" xml:space="preserve">
          <source>When GStreamer fails to report a duration, raise an exception instead of
silently setting the duration field to None.</source>
          <target state="translated">GStreamer が継続時間の報告に失敗した場合、継続時間フィールドを None に設定する代わりに例外を発生させるようにしました。</target>
        </trans-unit>
        <trans-unit id="d0cc64f97f8a9a30f61ebc1b381b324fc463b2a5" translate="yes" xml:space="preserve">
          <source>When running FFmpeg on Windows, disable its crash dialog. Thanks to
jcsaaddupuy.</source>
          <target state="translated">WindowsでFFmpegを実行している場合は、そのクラッシュダイアログを無効にしてください。jcsaaddupuyさんに感謝します。</target>
        </trans-unit>
        <trans-unit id="8c86bcd48590740431d11cfb9fc95c2873537059" translate="yes" xml:space="preserve">
          <source>__version__</source>
          <target state="translated">__バージョン__</target>
        </trans-unit>
        <trans-unit id="a622aa2f34a3bf520bd8fc3b795c350941dcf4b1" translate="yes" xml:space="preserve">
          <source>audio_open</source>
          <target state="translated">オーディオオープン</target>
        </trans-unit>
        <trans-unit id="e1e3ad225a67dc1c3a6d92c3307de08b397c919f" translate="yes" xml:space="preserve">
          <source>audioread</source>
          <target state="translated">オーディオリーディング</target>
        </trans-unit>
        <trans-unit id="af24972ce0e4a148db8506d8ff92ae7f91daca98" translate="yes" xml:space="preserve">
          <source>available_backends</source>
          <target state="translated">アベイラブルバックエンド</target>
        </trans-unit>
        <trans-unit id="d4896d46b606958b5ae7c2707a7ca3ef9247c851" translate="yes" xml:space="preserve">
          <source>avconv</source>
          <target state="translated">アヴコンヴ</target>
        </trans-unit>
        <trans-unit id="e53c2ea1fe4bd2b78bf4723c7c155a578e020a25" translate="yes" xml:space="preserve">
          <source>buffer</source>
          <target state="translated">バッファ</target>
        </trans-unit>
        <trans-unit id="ce8605ff30b56a513cfb82f11af0adb15216e97a" translate="yes" xml:space="preserve">
          <source>bytearray</source>
          <target state="translated">バイト配列</target>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">バイト</target>
        </trans-unit>
        <trans-unit id="3536f72ac0ec1d785e357fed37a3e83c4bc651e2" translate="yes" xml:space="preserve">
          <source>channels</source>
          <target state="translated">逕路</target>
        </trans-unit>
        <trans-unit id="465caf614517f594f29548cda29d4bb7fba7c198" translate="yes" xml:space="preserve">
          <source>command.
Fix a warning by requiring GStreamer &amp;gt;= 1.0.
Fix some Python 3 crashes with the new GStreamer backend (thanks to
@xix-xeaon).</source>
          <target state="translated">コマンド。GStreamer&amp;gt; = 1.0を要求して警告を修正します。新しいGStreamerバックエンドでのPython 3のクラッシュを修正しました（@ xix-xeaonに感謝）。</target>
        </trans-unit>
        <trans-unit id="671909975eb3190ea2fb191cb0b6fef8c06befb1" translate="yes" xml:space="preserve">
          <source>decode.py</source>
          <target state="translated">デコードパイ</target>
        </trans-unit>
        <trans-unit id="5d3f344b5bd21e9500c69ca575a3286c85b28f1c" translate="yes" xml:space="preserve">
          <source>duration</source>
          <target state="translated">じかん</target>
        </trans-unit>
        <trans-unit id="6fa0b6d7585195f0f8bc5a6119a66147cc541dee" translate="yes" xml:space="preserve">
          <source>exception is raised if the tool times
out.</source>
          <target state="translated">例外は、ツールがタイムアウトした場合に発生します。</target>
        </trans-unit>
        <trans-unit id="8d100c0af93e5061375aa36b26cce290f6a0475a" translate="yes" xml:space="preserve">
          <source>exception is raised. This exception is only used when the file type is
unsupported by the backends; if the file doesn&amp;rsquo;t exist, a standard</source>
          <target state="translated">例外が発生します。この例外は、ファイルタイプがバックエンドでサポートされていない場合にのみ使用されます。ファイルが存在しない場合、標準</target>
        </trans-unit>
        <trans-unit id="037917f6f7b206f561ed7bb899f759cf17cb3104" translate="yes" xml:space="preserve">
          <source>ffmpeg</source>
          <target state="translated">エフエムペッグ</target>
        </trans-unit>
        <trans-unit id="90125892000c069e4dc6cb9e21c93e5592b24228" translate="yes" xml:space="preserve">
          <source>function to get a list backends that are usable on the
current system.</source>
          <target state="translated">関数を使用して、現在のシステムで使用可能なバックエンドのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="c3452a0273de490a23c16badfd12852410af9456" translate="yes" xml:space="preserve">
          <source>function transparently selects a backend that can read the
file. (Each backend is implemented in a module inside the</source>
          <target state="translated">関数は、ファイルを読み込めるバックエンドを透過的に選択します。(各バックエンドは</target>
        </trans-unit>
        <trans-unit id="3fec49d74ec3e5d6725f779f9fe949392a0bee4c" translate="yes" xml:space="preserve">
          <source>is by Adrian Sampson. It is made available under &lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;the MIT
license&lt;/a&gt;. An alternative to this module is &lt;a href=&quot;http://www.brailleweb.com/cgi-bin/python.py&quot;&gt;decoder.py&lt;/a&gt;.</source>
          <target state="translated">エイドリアンサンプソンによるものです。&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MITライセンスの&lt;/a&gt;下で利用できます。このモジュールの代替は、&lt;a href=&quot;http://www.brailleweb.com/cgi-bin/python.py&quot;&gt;decoder.py&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="25623324f2220742b1f16f67360fce37962188e4" translate="yes" xml:space="preserve">
          <source>is given in Hz (an integer).</source>
          <target state="translated">はHz(整数)で与えられます。</target>
        </trans-unit>
        <trans-unit id="ea30980ce2c5e7a311afdba3a49c49921d67cfba" translate="yes" xml:space="preserve">
          <source>is the length of the audio in seconds (a float).</source>
          <target state="translated">は、音声の長さを秒単位で指定します(浮動小数点)。</target>
        </trans-unit>
        <trans-unit id="b5f047361976c63e9fa2001fda775f37273b9d3d" translate="yes" xml:space="preserve">
          <source>is the number of audio channels (an integer).</source>
          <target state="translated">はオーディオチャンネル数(整数)です。</target>
        </trans-unit>
        <trans-unit id="7da5763f45d334d2a4eabeaf90dc91b6df4f1e56" translate="yes" xml:space="preserve">
          <source>module (thanks to Dan Ellis).</source>
          <target state="translated">モジュール(ダン・エリス氏に感謝します)。</target>
        </trans-unit>
        <trans-unit id="3b4e6e3ef302e94fd0bac14f5a1e73e3c2741f31" translate="yes" xml:space="preserve">
          <source>multi-library, cross-platform audio decoding</source>
          <target state="translated">マルチライブラリ、クロスプラットフォームのオーディオデコード</target>
        </trans-unit>
        <trans-unit id="5f6826d045ce402a1364def3fdaa9b960be22912" translate="yes" xml:space="preserve">
          <source>package.) If no backends succeed in opening the file, a</source>
          <target state="translated">パッケージを使用しています)。バックエンドがファイルを開くことに成功しなかった場合は</target>
        </trans-unit>
        <trans-unit id="9400e3a07211b4a5395d80177414100954bceb08" translate="yes" xml:space="preserve">
          <source>samplerate</source>
          <target state="translated">サンプラー</target>
        </trans-unit>
        <trans-unit id="dfceba68b011247cc2889491f4014dcf5a0accf9" translate="yes" xml:space="preserve">
          <source>script demonstrates using this package to
convert compressed audio files to WAV files.</source>
          <target state="translated">スクリプトは、このパッケージを使って圧縮されたオーディオファイルを WAV ファイルに変換するデモを行います。</target>
        </trans-unit>
        <trans-unit id="aa8b7775cbfb850ba08065157ce205cf314f8fbf" translate="yes" xml:space="preserve">
          <source>should
try (thanks once again to @ssssam).
On Windows, avoid opening a console window to run FFmpeg (thanks to @flokX).</source>
          <target state="translated">を試してみてください(@ssssamさんのおかげです)。Windowsでは、FFmpegを実行するためにコンソールウィンドウを開かないようにしてください(@flokXさんのおかげです)。</target>
        </trans-unit>
        <trans-unit id="69382e4de766a827de4c996bbae5ffeeff306d14" translate="yes" xml:space="preserve">
          <source>specifies which backends to try
(instead of trying them all, which is the default). You can use the</source>
          <target state="translated">はどのバックエンドを試すかを指定します (デフォルトであるすべてのバックエンドを試すのではなく)。これはデフォルトです。</target>
        </trans-unit>
        <trans-unit id="0687062ea8db61c8a99218af9c7cd91f150cf621" translate="yes" xml:space="preserve">
          <source>sunau</source>
          <target state="translated">スナウ</target>
        </trans-unit>
        <trans-unit id="234455ec14ecdc84e7e3fcf5c598e9367a5a0cb7" translate="yes" xml:space="preserve">
          <source>tool execution (currently 10 seconds for each
4096-byte read); a</source>
          <target state="translated">ツールの実行(現在は4096バイトの読み込みごとに10秒)。</target>
        </trans-unit>
        <trans-unit id="e0249a9c118b5aff73eba5ddbfdfa4c4c5445014" translate="yes" xml:space="preserve">
          <source>uridecodebin</source>
          <target state="translated">尿素コードビン</target>
        </trans-unit>
        <trans-unit id="33a238098e4019e6f8cd8ff0cc1300d98c48aa8f" translate="yes" xml:space="preserve">
          <source>value to the package.</source>
          <target state="translated">の値をパッケージに追加します。</target>
        </trans-unit>
        <trans-unit id="376a1b8016a47ff405fa5714658664c81cafdddd" translate="yes" xml:space="preserve">
          <source>was &amp;ldquo;closed&amp;rdquo;.</source>
          <target state="translated">閉鎖されました&quot;。</target>
        </trans-unit>
        <trans-unit id="d13f627aa352712d626eaf79b34592b7be131f54" translate="yes" xml:space="preserve">
          <source>when FFmpeg is not installed.</source>
          <target state="translated">FFmpegがインストールされていない場合</target>
        </trans-unit>
        <trans-unit id="add65f28453d6f2539014fa98805499bf8ef0fb7" translate="yes" xml:space="preserve">
          <source>will be raised.</source>
          <target state="translated">が上がります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
