<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/autologging/">
    <body>
      <group id="autologging">
        <trans-unit id="273f19086473dfb34281e511b7a251090e111921" translate="yes" xml:space="preserve">
          <source>(Use &lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt; or
&lt;a href=&quot;https://pypi.python.org/pypi/wheel&quot;&gt;wheel&lt;/a&gt; to install the .whl.)</source>
          <target state="translated">（.whlをインストールするには、&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;または &lt;a href=&quot;https://pypi.python.org/pypi/wheel&quot;&gt;wheel&lt;/a&gt;を使用します。）</target>
        </trans-unit>
        <trans-unit id="af8648017801cf2c2d1588dc9f88cd6ffbcad947" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;New in version 1.2.0:&lt;/em&gt; automatic yield/stop tracing of Python
&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-iterator&quot;&gt;generator iterators&lt;/a&gt;
(if the &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;
function is traced).</source>
          <target state="translated">&lt;em&gt;バージョン1.2.0の新&lt;/em&gt;機能&lt;em&gt;：&lt;/em&gt; Python &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-iterator&quot;&gt;ジェネレーターイテレーターの&lt;/a&gt;自動生成/停止トレース （&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt; 関数がトレースされている場合）。</target>
        </trans-unit>
        <trans-unit id="aa9eebe373ff3165f3b24bbf212c3eaefd59434e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;TRACE&lt;/code&gt;&lt;/strong&gt;
The &lt;code&gt;autologging.TRACE&lt;/code&gt; (level 1) log level is registered with the
Python &lt;code&gt;logging&lt;/code&gt; module when Autologging is imported so that tracing
can be configured and controlled independently of application logging.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;TRACE&lt;/code&gt; &lt;/strong&gt; ザ &lt;code&gt;autologging.TRACE&lt;/code&gt; （レベル1）ログレベルはパイソンに登録されている &lt;code&gt;logging&lt;/code&gt; そのトレースが設定され、独立したアプリケーションロギング制御することができるので、オートログインがインポートされたモジュール。</target>
        </trans-unit>
        <trans-unit id="be803a9bf04d5a6543f462585ecb3908c98d114b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;logged&lt;/code&gt;&lt;/strong&gt;
Decorate a class to create a &lt;code&gt;__log&lt;/code&gt; member. The logger is named by
default to match the dotted-name of the containing class. A function
may also be decorated, creating a &lt;code&gt;_log&lt;/code&gt; attribute on the function
object whose default name matches the containing module.
A specifically-named logger may also be passed to the decorator (i.e.
&lt;code&gt;logged(my_logger)&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;logged&lt;/code&gt; &lt;/strong&gt; クラスを装飾して &lt;code&gt;__log&lt;/code&gt; メンバーを作成します。ロガーはデフォルトで、含まれているクラスのドット表記名と一致するように名前が付けられます。関数を装飾して、デフォルト名が含まれているモジュールと一致する関数オブジェクトに &lt;code&gt;_log&lt;/code&gt; 属性を作成することもできます。特定の名前のロガーをデコレーターに渡すこともでき &lt;code&gt;logged(my_logger)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5409e98fa3c0ddb9b1b8c5ec789d3f7d99b901ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;traced&lt;/code&gt;&lt;/strong&gt;
Decorate a class to provide &lt;strong&gt;automatic&lt;/strong&gt; method call/return tracing. By
default, all class, static, and instance methods are traced (excluding
&quot;&lt;strong&gt;special&lt;/strong&gt;&quot; methods, with the exception of &lt;code&gt;__init__&lt;/code&gt; and &lt;code&gt;__call__&lt;/code&gt;).
As with the &lt;code&gt;logged&lt;/code&gt; decorator, the default name of the tracing logger
matches the dotted-name of the containing class and may be overridden by
passing a specifically-named logger to the decorator.
Additionally, this decorator accepts multiple string arguments that
explicitly name the methods to be traced (and may even name
&quot;&lt;strong&gt;special&lt;/strong&gt;&quot; methods).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;traced&lt;/code&gt; &lt;/strong&gt; クラスを装飾して、&lt;strong&gt;自動&lt;/strong&gt;メソッド呼び出し/戻りトレースを提供し&lt;strong&gt;ます&lt;/strong&gt;。デフォルトでは、すべてのクラス、静的、およびインスタンスメソッドがトレースされます（「 &lt;code&gt;__init__&lt;/code&gt; と &lt;code&gt;__call__&lt;/code&gt; を除いて、「&lt;strong&gt;特殊&lt;/strong&gt;」メソッドを除く）。 &lt;code&gt;logged&lt;/code&gt; デコレータと同様に、トレースロガーのデフォルト名は、含まれているクラスのドット表記名と一致し、特定の名前のロガーをデコレータに渡すことでオーバーライドできます。さらに、このデコレーターは、トレースするメソッドに明示的に名前を付ける（さらに「&lt;strong&gt;特別な&lt;/strong&gt;」メソッドに名前を付けることもできる）複数の文字列引数を受け入れます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d119f8ecbc83194d883921f782583301b260b77f" translate="yes" xml:space="preserve">
          <source>A brief example</source>
          <target state="translated">簡単な例</target>
        </trans-unit>
        <trans-unit id="f98879524e741ebc955a3cad24a2daaa858b3a88" translate="yes" xml:space="preserve">
          <source>A simple logged and traced class:</source>
          <target state="translated">シンプルなログとトレースのクラスです。</target>
        </trans-unit>
        <trans-unit id="6e6fb2f6a2bafc04b078d9b9dc79392f1d37bc27" translate="yes" xml:space="preserve">
          <source>Alternatively, download and extract a source .zip or .tar.gz archive
from &lt;a href=&quot;https://github.com/mzipay/Autologging/releases&quot;&gt;https://github.com/mzipay/Autologging/releases&lt;/a&gt;,
&lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt; or
&lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https://sourceforge.net/projects/autologging/files/&lt;/a&gt;.</source>
          <target state="translated">また、ソースから.zipファイルまたは.tar.gzアーカイブをダウンロードして解凍&lt;a href=&quot;https://github.com/mzipay/Autologging/releases&quot;&gt;https://github.com/mzipay/Autologging/releases&lt;/a&gt;、 &lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt;または &lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;// sourceforgeの：HTTPSを。 net / projects / autologging / files /&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="741f0dbd2f4233c97931fad6b316ddf0c7714a89" translate="yes" xml:space="preserve">
          <source>Autologging - easier logging and tracing for Python classes</source>
          <target state="translated">自動ログ化-Python クラスのロギングとトレースを容易にする</target>
        </trans-unit>
        <trans-unit id="dd58c22dc26a5e2161bb32f11f91728ca7d90867" translate="yes" xml:space="preserve">
          <source>Autologging allows for tracing to be configured (and controlled)
independently from application logging. Toggle tracing on/off, write
trace log records to a separate log, and use different formatting for
trace log entries - all via standard Python logging facilities, and
without affecting your application logging.</source>
          <target state="translated">自動ログ化により、トレースをアプリケーションのロギングから独立して設定(制御)することができます。トレースのオン/オフを切り替えたり、トレースログレコードを別のログに書き込んだり、トレースログエントリに異なるフォーマットを使用したりすることができます-すべて標準の Python ロギング機能を介して、アプリケーションのロギングに影響を与えることなく。</target>
        </trans-unit>
        <trans-unit id="d7fe294bd70d8cb7b652755df3a929dab38709c2" translate="yes" xml:space="preserve">
          <source>Autologging eliminates boilerplate logging setup code and tracing code,
and provides a means to separate application logging from program flow
and data tracing.</source>
          <target state="translated">自動ログ化は、ボイラプレートのロギング設定コードとトレースコードを排除し、アプリケーションのロギングをプログラムフローとデータトレースから分離する手段を提供します。</target>
        </trans-unit>
        <trans-unit id="63c21aabf3c1c523959923aa673f25505c6caf50" translate="yes" xml:space="preserve">
          <source>Autologging exposes two decorators and a custom log level:</source>
          <target state="translated">オートログでは、2つのデコレータとカスタムログレベルが公開されます。</target>
        </trans-unit>
        <trans-unit id="6f65bdf829cc20ac73ec0dc0bad007df088f933d" translate="yes" xml:space="preserve">
          <source>Autologging makes logging and tracing Python classes easy.</source>
          <target state="translated">オートログにより、Pythonクラスのロギングとトレースが簡単になります。</target>
        </trans-unit>
        <trans-unit id="78260b935740f97b3ad2042d507d31c128aebb80" translate="yes" xml:space="preserve">
          <source>Binary installation</source>
          <target state="translated">バイナリインストール</target>
        </trans-unit>
        <trans-unit id="d60ab76116a1beab390764e1e653979deaf56335" translate="yes" xml:space="preserve">
          <source>Clone or fork the repository:</source>
          <target state="translated">リポジトリをクローンまたはフォークします。</target>
        </trans-unit>
        <trans-unit id="7ffd0b9dd1a4c4732932377cdfa0c240be9e13aa" translate="yes" xml:space="preserve">
          <source>Download the Python wheel (.whl) or a Windows installer from
&lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt; or
&lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https://sourceforge.net/projects/autologging/files/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.python.org/pypi/Autologging&quot;&gt;https://pypi.python.org/pypi/Autologging&lt;/a&gt;または &lt;a href=&quot;https://sourceforge.net/projects/autologging/files/&quot;&gt;https://sourceforge.net/projects/autologging/files/&lt;/a&gt;からPythonホイール（.whl）またはWindowsインストーラーをダウンロードし ます。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">序章</target>
        </trans-unit>
        <trans-unit id="86b07b23c0065c3bc9303920d223921da4750654" translate="yes" xml:space="preserve">
          <source>Logging and tracing output:</source>
          <target state="translated">出力のロギングとトレースを行います。</target>
        </trans-unit>
        <trans-unit id="00e191c31700f3bf1c093fd102f688b4a25c5913" translate="yes" xml:space="preserve">
          <source>Module-level functions may also be traced using this decorator.</source>
          <target state="translated">モジュールレベルの関数は、このデコレータを使ってトレースすることもできます。</target>
        </trans-unit>
        <trans-unit id="e4d8420fc64e6556b9a9e153ff6123d849cb6db0" translate="yes" xml:space="preserve">
          <source>Python modules that make use of Autologging are cleaner, leaner, and
more resilient to changes that would otherwise require updating tracing
statements.</source>
          <target state="translated">Autologgingを利用したPythonモジュールは、よりクリーンで無駄がなく、トレース文の更新が必要な変更に対してより回復力があります。</target>
        </trans-unit>
        <trans-unit id="aa21b6f6cb1c196fdd1a5802e24e9df1dc31d4b7" translate="yes" xml:space="preserve">
          <source>Run the test suite and install the &lt;code&gt;autologging&lt;/code&gt; module: (make sure you
have &lt;a href=&quot;https://pypi.python.org/pypi/setuptools&quot;&gt;setuptools&lt;/a&gt; installed!)</source>
          <target state="translated">テストスイートを実行し、 &lt;code&gt;autologging&lt;/code&gt; モジュールをインストールします（&lt;a href=&quot;https://pypi.python.org/pypi/setuptools&quot;&gt;setuptoolsが&lt;/a&gt;インストールされていることを確認してください）。</target>
        </trans-unit>
        <trans-unit id="d39ef77de83053b1f8c24fdc0211054e4953703c" translate="yes" xml:space="preserve">
          <source>Source installation</source>
          <target state="translated">ソースのインストール</target>
        </trans-unit>
        <trans-unit id="a53007c7885214cc793414c4b9e60c144773d021" translate="yes" xml:space="preserve">
          <source>The easiest way to install Autologging is to use
&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;:</source>
          <target state="translated">自動ロギングをインストールする最も簡単な方法は、&lt;a href=&quot;https://pip.pypa.io/&quot;&gt;pip&lt;/a&gt;を使用すること です。</target>
        </trans-unit>
        <trans-unit id="dbe90631c99d9e4e74f61518dabb9bb383408413" translate="yes" xml:space="preserve">
          <source>Tracing may be disabled entirely by setting the
&lt;code&gt;AUTOLOGGING_TRACED_NOOP&lt;/code&gt; environment variable or by calling the
&lt;code&gt;autologging.install_traced_noop()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;AUTOLOGGING_TRACED_NOOP&lt;/code&gt; 環境変数を設定するか、 &lt;code&gt;autologging.install_traced_noop()&lt;/code&gt; 関数を呼び出すことにより 、トレースを完全に無効にすることができ ます。</target>
        </trans-unit>
        <trans-unit id="ed38704948bd01cf801923ea8f4725184bc8f85a" translate="yes" xml:space="preserve">
          <source>What's in the &lt;code&gt;autologging&lt;/code&gt; namespace?</source>
          <target state="translated">&lt;code&gt;autologging&lt;/code&gt; 名前空間には何がありますか？</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
