<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/codechat/">
    <body>
      <group id="codechat">
        <trans-unit id="09b3dbcc35b97f008313b0e4b5aa3109e5add9e9" translate="yes" xml:space="preserve">
          <source>.tex</source>
          <target state="translated">.tex</target>
        </trans-unit>
        <trans-unit id="d6f4f17452c4f73f3a597ea45979c4a3f6ae9db2" translate="yes" xml:space="preserve">
          <source>.w</source>
          <target state="translated">.w</target>
        </trans-unit>
        <trans-unit id="13ec13a330dec27dadb7be649604516016804e45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/README.html&quot;&gt;CodeChat&lt;/a&gt; transforms source code into a web page, allowing developers to view their program as a beautiful and descriptive document by adding headings, formatting, hyperlinks, diagrams, images, and other forms of rich content to capture the ideas and insights that naturally flow from the process of writing a program. It also provides a blank slate in which to plan ahead, by sketching out an algorithm before committing it to code or laying out a design document which can evolve as the code does. This &lt;a href=&quot;http://www.literateprogramming.com/&quot;&gt;literate programming&lt;/a&gt; paradigm changes the way developers think by intermingling ideas with their implementation as code, dramatically improving a programmer&amp;rsquo;s abilities.</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/README.html&quot;&gt;CodeChat&lt;/a&gt;はソースコードをWebページに変換し、開発者が見出し、書式設定、ハイパーリンク、図、画像、その他の形式のリッチコンテンツを追加して、プログラムから自然に流れるアイデアや洞察をキャプチャすることで、プログラムを美しく説明的なドキュメントとして表示できるようにします。プログラムを書くプロセス。また、コードにコミットする前にアルゴリズムをスケッチしたり、コードと同じように進化できる設計ドキュメントをレイアウトしたりすることで、事前に計画を立てるための白紙の状態を提供します。この&lt;a href=&quot;http://www.literateprogramming.com/&quot;&gt;文芸的プログラミング&lt;/a&gt;パラダイムは、アイデアをコードとして実装することで、開発者の考え方を変え、プログラマーの能力を劇的に向上させます。</target>
        </trans-unit>
        <trans-unit id="3594eb97b7c8a87a7fd63fd88f75c5abce050061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pyinstaller-sample-hook.readthedocs.io/en/latest/&quot;&gt;Documentation&lt;/a&gt; for integrating a PyInstaller hook into a distribution.</source>
          <target state="translated">&lt;a href=&quot;https://pyinstaller-sample-hook.readthedocs.io/en/latest/&quot;&gt;&lt;/a&gt;PyInstallerフックをディストリビューションに統合するためのドキュメント。</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">背景</target>
        </trans-unit>
        <trans-unit id="ccd9aa449370636c2b6335449c9a3a7f8c05cb0d" translate="yes" xml:space="preserve">
          <source>Code examples in a course on &lt;a href=&quot;http://www.ece.msstate.edu/courses/ece3724/main_pic24/docs/sphinx/textbook_examples.html&quot;&gt;microprocessors&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.ece.msstate.edu/courses/ece3724/main_pic24/docs/sphinx/textbook_examples.html&quot;&gt;マイクロプロセッサ&lt;/a&gt;に関するコースのコード例</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="translated">詳細情報</target>
        </trans-unit>
        <trans-unit id="052533e59d4ffd074657a5de716813bdd738edad" translate="yes" xml:space="preserve">
          <source>Put simply, literate programming (LP) is the realization that a program is a document written to and for fellow programmers, not simply a list of instructions for a computer. LP tools therefore produce a nicely-formatted document which contains the code intermixed with explanatory prose. &lt;a href=&quot;http://en.wikipedia.org/wiki/Donald_Knuth&quot;&gt;Donald Knuth&lt;/a&gt; introduced literate programming using his WEB tool in his seminal &lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;paper&lt;/a&gt;. Per Figure 1 of this &lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;paper&lt;/a&gt;, the WEB system takes a</source>
          <target state="translated">簡単に言えば、文芸的プログラミング（LP）は、プログラムが、単にコンピューターの命令のリストではなく、仲間のプログラマーのために書かれたドキュメントであるという認識です。したがって、LPツールは、説明文と混合されたコードを含む、適切にフォーマットされたドキュメントを生成します。&lt;a href=&quot;http://en.wikipedia.org/wiki/Donald_Knuth&quot;&gt;ドナルドクヌース&lt;/a&gt;は、彼の独創的な&lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;論文&lt;/a&gt;で彼のWEBツールを使用した文芸的プログラミングを紹介しました。この&lt;a href=&quot;http://www.literateprogramming.com/knuthweb.pdf&quot;&gt;ペーパーの&lt;/a&gt;図1に従って、WEBシステムは</target>
        </trans-unit>
        <trans-unit id="b70f2c9643f19f2f7a45ecc584b93e5963be496d" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;http://codechat.readthedocs.io/en/latest&quot;&gt;CodeChat docuumentation&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;http://codechat.readthedocs.io/en/latest&quot;&gt;CodeChatのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="59dbbd3433e1ce13041b878645a377e0e3badc95" translate="yes" xml:space="preserve">
          <source>Some examples of literate programming using CodeChat:</source>
          <target state="translated">CodeChatを使ったリテラシーのあるプログラミングの例をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="43901d5b1e7a0b4df9a9633e146034e02f1bfa84" translate="yes" xml:space="preserve">
          <source>The CodeChat system for software documentation</source>
          <target state="translated">ソフトウェア・ドキュメンテーションのための CodeChat システム</target>
        </trans-unit>
        <trans-unit id="f9d07df9c9f594005fd14f254b45dba780e53a9b" translate="yes" xml:space="preserve">
          <source>Use of a</source>
          <target state="translated">の使用</target>
        </trans-unit>
        <trans-unit id="3e036e1a3ed2e9e4e7fed7e9b1af6d895baccbcf" translate="yes" xml:space="preserve">
          <source>Use of a numbered list to explain a &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#summary-and-implementation&quot;&gt;simple state machine&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#summary-and-implementation&quot;&gt;単純なステートマシン&lt;/a&gt;を説明するための番号付きリストの使用。</target>
        </trans-unit>
        <trans-unit id="6316801373c2c29bc8d4c9cd028f2aab1032547b" translate="yes" xml:space="preserve">
          <source>Use of fonts to show what</source>
          <target state="translated">何を示すためのフォントの使用</target>
        </trans-unit>
        <trans-unit id="c3f78e5f16a7e76e120bf6503d6ff601746dfa8b" translate="yes" xml:space="preserve">
          <source>Use of hyperlinks to provide reference information for all &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/conf.py.html&quot;&gt;Sphinx configuration values&lt;/a&gt;.</source>
          <target state="translated">ハイパーリンクを使用して、すべての&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/conf.py.html&quot;&gt;Sphinx構成値の&lt;/a&gt;参照情報を提供します。</target>
        </trans-unit>
        <trans-unit id="295b8ccca5f3fca3e9ada55ed8c49414e2f01244" translate="yes" xml:space="preserve">
          <source>Use of tables to help design a &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#step-5-of-lexer-to-rest&quot;&gt;simple parser&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/CodeChat/CodeToRest.py.html#step-5-of-lexer-to-rest&quot;&gt;単純なパーサーの&lt;/a&gt;設計に役立つテーブルの使用。</target>
        </trans-unit>
        <trans-unit id="aa4352b968c73dff491a2a0fcc512112f7ee9e37" translate="yes" xml:space="preserve">
          <source>commands to run</source>
          <target state="translated">実行コマンド</target>
        </trans-unit>
        <trans-unit id="c459a58aeff9f607a36f3b75a342a8866e7b1a0e" translate="yes" xml:space="preserve">
          <source>directive to categorize all source files in &lt;a href=&quot;http://codechat.readthedocs.io/en/latest/&quot;&gt;CodeChat itself&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://codechat.readthedocs.io/en/latest/&quot;&gt;CodeChat自体の&lt;/a&gt;すべてのソースファイルを分類するディレクティブ</target>
        </trans-unit>
        <trans-unit id="33eb18b8de1c779b8be1aa8b0e14a179c3e53c95" translate="yes" xml:space="preserve">
          <source>document as input then produces either a &amp;ldquo;tangled&amp;rdquo; source file for compilation or a &amp;ldquo;woven&amp;rdquo; document as a</source>
          <target state="translated">次に、入力としてのドキュメントは、コンパイル用の「もつれた」ソースファイルまたは「織り込まれた」ドキュメントのいずれかを生成します。</target>
        </trans-unit>
        <trans-unit id="a8cd4f13eafdf715804211547339728f665302e4" translate="yes" xml:space="preserve">
          <source>file. The document is beautiful; the WEB source is difficult to digest (see Figure 2a-c); the source code is completely unreadable (see Figure 3). While a plethora of &lt;a href=&quot;http://en.wikipedia.org/wiki/Literate_programming#Tools&quot;&gt;tools&lt;/a&gt; developed over the years attempt to address these problems, only one &lt;a href=&quot;http://rant.gulbrandsen.priv.no/udoc/history&quot;&gt;LP-inspired&lt;/a&gt; variant has gained widespread acceptance: documentation generators, such as &lt;a href=&quot;http://www.doxygen.org&quot;&gt;Doxygen&lt;/a&gt; and &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html&quot;&gt;JavaDoc&lt;/a&gt;, which extract documentation directly from source code, rather than extracting source code from the documentation, as WEB and most LP tools do. CodeChat addresses these LP weaknesses by producing a document directly from the code; employing human-readable markup (reStructuredText); and by supporting a GUI to make editing an LP document-program faster and easier.</source>
          <target state="translated">ファイル。ドキュメントは美しいです。 WEBソースを要約するのは困難です（図2a-cを参照）。ソースコードは完全に読み取れません（図3を参照）。過多ながら&lt;a href=&quot;http://en.wikipedia.org/wiki/Literate_programming#Tools&quot;&gt;ツール&lt;/a&gt;長年にわたって開発は、これらの問題に対処しようとすると、唯一の&lt;a href=&quot;http://rant.gulbrandsen.priv.no/udoc/history&quot;&gt;LP-インスピレーションを得た&lt;/a&gt;ようなドキュメンテーションジェネレータ、：バリアントは広く受け入れ得てい&lt;a href=&quot;http://www.doxygen.org&quot;&gt;たDoxygen&lt;/a&gt;と&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html&quot;&gt;のJavaDoc&lt;/a&gt;、ソースコードから直接抽出のドキュメントではなく、からソースコードを抽出しますWEBやほとんどのLPツールと同様に、ドキュメント。 CodeChatは、コードから直接ドキュメントを作成することにより、これらのLPの弱点に対処します。人間が読めるマークアップ（reStructuredText）を採用する。そして、LP文書プログラムの編集をより速くそしてより簡単にするGUIをサポートすることによって。</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">セットアップパイ</target>
        </trans-unit>
        <trans-unit id="60c429e65647070146bf6d2cad045c35c2801f27" translate="yes" xml:space="preserve">
          <source>toctree</source>
          <target state="translated">トクトリー</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
