<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/captcha-harvester/">
    <body>
      <group id="captcha-harvester">
        <trans-unit id="7fb505d333ffbfca21839989658311c79424d705" translate="yes" xml:space="preserve">
          <source>&amp;gt; harvester</source>
          <target state="translated">&amp;gt;ハーベスター</target>
        </trans-unit>
        <trans-unit id="1779e3f54ff270d17ed5708e454502ac09afdfd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The way the harvester is currently setup, if you use the &lt;code&gt;-b&lt;/code&gt; flag to start up the browser, then when you quit either the browser or the server, the other will also terminate.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：ハーベスタの現在の設定方法です。- &lt;code&gt;-b&lt;/code&gt; フラグを使用してブラウザを起動すると、ブラウザまたはサーバーのいずれかを終了すると、もう一方も終了します。</target>
        </trans-unit>
        <trans-unit id="072d20f55098e62fcb2f0f0bac460312bf91a3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Without the &lt;code&gt;-b/--browser&lt;/code&gt; only the server will start up, without the browser. You won't
be able to access the site correctly on your normal browsers because the host won't be correctly
mapped to the local server. This could be useful if you want to open the browser with your own
command line options or you already have one running from a previous session.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;： &lt;code&gt;-b/--browser&lt;/code&gt; ない場合、サーバーはブラウザなしで起動します。ホストがローカルサーバーに正しくマッピングされないため、通常のブラウザーではサイトに正しくアクセスできません。これは、独自のコマンドラインオプションを使用してブラウザを開く場合や、以前のセッションから既に実行している場合に便利です。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="3fe643b265d20b260a59d70a3cde15e9509f7dba" translate="yes" xml:space="preserve">
          <source>Additonally, V3 ReCaptcha's require an action when submitting the captcha. Sometimes they don't
matter if the target site dosen't double check them and you can get away passing anything to (-a/--data-action).
However, it is advised that you grab the correct &lt;code&gt;data-action&lt;/code&gt; attribute when looking for the sitekey, they
should be near each other.</source>
          <target state="translated">さらに、V3 ReCaptchaはキャプチャを送信するときにアクションを必要とします。ターゲットサイトがそれらを再確認しないかどうかに関係なく、（-a /-data-action）に何も渡さなくてもかまいません。ただし、サイトキーを探すときは正しい &lt;code&gt;data-action&lt;/code&gt; 属性を取得することをお勧めします。これらは互いに近くにある必要があります。</target>
        </trans-unit>
        <trans-unit id="3864eeb539c9df959bdb7e6247306ba05b74fcba" translate="yes" xml:space="preserve">
          <source>Any Other Lanuage (via HTTP API)</source>
          <target state="translated">その他の言語 (HTTP API経由)</target>
        </trans-unit>
        <trans-unit id="55f45fc0081a5ed9ca7af87f6b119c977ec51d92" translate="yes" xml:space="preserve">
          <source>Basically this sets the DNS record for &lt;code&gt;example.com&lt;/code&gt; to &lt;code&gt;127.0.0.1:5000&lt;/code&gt; rather than querying a DNS server
for the actual IP of the real site. This helps us trick the captcha provider into thinking that the captcha
is actually being loaded on their client's.</source>
          <target state="translated">基本的に、これはDNSサーバーに実際のサイトの実際のIPを照会するのではなく、 &lt;code&gt;example.com&lt;/code&gt; のDNSレコードを &lt;code&gt;127.0.0.1:5000&lt;/code&gt; に設定します。これは、キャプチャプロバイダーがクライアントに実際にキャプチャがロードされていると思い込ませるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="a4689aa17ba52c30664d1cbd2d626c02440c8871" translate="yes" xml:space="preserve">
          <source>CaptchaHarvester</source>
          <target state="translated">CaptchaHarvester</target>
        </trans-unit>
        <trans-unit id="06eb2f0298434a2205253ad0bafc1893668bddb9" translate="yes" xml:space="preserve">
          <source>CloudProxy</source>
          <target state="translated">クラウドプロキシ</target>
        </trans-unit>
        <trans-unit id="8ac4fa30873706b40c1ce1934cd117d2f81c0310" translate="yes" xml:space="preserve">
          <source>Configuring The Browser</source>
          <target state="translated">ブラウザの設定</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">クレジット</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>
        </trans-unit>
        <trans-unit id="bccc14ee7da1d20ff06b9ff2497087e8c7d9f28b" translate="yes" xml:space="preserve">
          <source>Discord</source>
          <target state="translated">不協和音</target>
        </trans-unit>
        <trans-unit id="6d658e3b4a9ba01dcd5e064f450e95c837f53375" translate="yes" xml:space="preserve">
          <source>For help contact @&lt;code&gt;MacHacker#7322&lt;/code&gt; (Discord)</source>
          <target state="translated">ヘルプについては@ &lt;code&gt;MacHacker#7322&lt;/code&gt; （Discord）</target>
        </trans-unit>
        <trans-unit id="ab77231edaee5d3518142f58bef4702fb011d5e1" translate="yes" xml:space="preserve">
          <source>Has CaptchaHarvester saved you money on your project? Consider buying me a coffee for the countless hours I have
spent making your job easier?</source>
          <target state="translated">CaptchaHarvesterはあなたのプロジェクトでお金を節約していますか?私があなたの仕事を楽にするために費やした数え切れないほどの時間のために私にコーヒーを買うことを考慮してください?</target>
        </trans-unit>
        <trans-unit id="7ca4b5181c2ec33ed753d9712d48363506b456b9" translate="yes" xml:space="preserve">
          <source>How do I use the tokens of the captcha's I solve?</source>
          <target state="translated">解いたキャプチャのトークンはどうやって使うの?</target>
        </trans-unit>
        <trans-unit id="b813f3dea95a7e7e0342b05d8aae2dd54fbad3cc" translate="yes" xml:space="preserve">
          <source>How do we do this the EASY way?</source>
          <target state="translated">どうやってEASYにするの?</target>
        </trans-unit>
        <trans-unit id="c95593a768dbcb253cab3337146cd9943707c5bc" translate="yes" xml:space="preserve">
          <source>How do we do this the HARD way?</source>
          <target state="translated">HARDのやり方は?</target>
        </trans-unit>
        <trans-unit id="b8deb3047fa46ff3e7b14411af407cf86ce28159" translate="yes" xml:space="preserve">
          <source>If for some reason you don't want a browser launched on the start of the harvester or you want to configure it
youself, all you have to do is pass the &lt;code&gt;-b/--no-browser&lt;/code&gt; flag.</source>
          <target state="translated">なんらかの理由で、ハーベスターの起動時にブラウザーを起動したくない場合、または自分で構成したい場合は、 &lt;code&gt;-b/--no-browser&lt;/code&gt; -no -browserフラグを渡すだけです。</target>
        </trans-unit>
        <trans-unit id="09a3cac761c82f30f0a0e0f659520f86b04cad85" translate="yes" xml:space="preserve">
          <source>If you are running MacOS/Windows and have the &lt;a href=&quot;https://brave.com/&quot;&gt;Brave Browser&lt;/a&gt;
or &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt;, all you have to do is pass
the &lt;code&gt;-b/--browser&lt;/code&gt; flag set to either &lt;code&gt;chrome&lt;/code&gt; or &lt;code&gt;brave&lt;/code&gt;. This will automatically open
a new instance of Brave/Chrome under a temporary profile with and map the &lt;code&gt;domain&lt;/code&gt; to the
local server.</source>
          <target state="translated">MacOS / Windowsを実行していて、&lt;a href=&quot;https://brave.com/&quot;&gt;Brave Browser&lt;/a&gt; または&lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt;を使用している場合は、 &lt;code&gt;-b/--browser&lt;/code&gt; フラグを &lt;code&gt;chrome&lt;/code&gt; または &lt;code&gt;brave&lt;/code&gt; に設定して渡すだけです。これにより、一時プロファイルの下でBrave / Chromeの新しいインスタンスが自動的に開き、 &lt;code&gt;domain&lt;/code&gt; がローカルサーバーにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="c618109fe21840a7a57a061dbca478b6494ebf8b" translate="yes" xml:space="preserve">
          <source>If you are using this project with PyArmor and or PyInstaller then fear not, it has
already been configured to work seamlessly when packages into an &lt;code&gt;.exe&lt;/code&gt; file. All you
have to do is add the following to your &lt;code&gt;.spec&lt;/code&gt; file's &lt;code&gt;Anaysis&lt;/code&gt; call.</source>
          <target state="translated">あなたはPyArmorおよびまたはpyInstallerのと、このプロジェクトを恐れることはない使用している場合、それはすでにシームレスに動作するように設定されたときに、パッケージ &lt;code&gt;.exe&lt;/code&gt; ファイル。 &lt;code&gt;.spec&lt;/code&gt; ファイルの &lt;code&gt;Anaysis&lt;/code&gt; 呼び出しに以下を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="23a20d8519c12cb90bd2a8763406e7fdb60f877f" translate="yes" xml:space="preserve">
          <source>If you need help feel free to swing by my &lt;a href=&quot;https://discord.gg/AAQrkhR&quot;&gt;Discord&lt;/a&gt;!</source>
          <target state="translated">助けが必要な場合は、私の&lt;a href=&quot;https://discord.gg/AAQrkhR&quot;&gt;Discordで&lt;/a&gt;自由にスイングしてください。</target>
        </trans-unit>
        <trans-unit id="0213a1bc3f6dd8dc64018cdb81c30db31844aafa" translate="yes" xml:space="preserve">
          <source>If you want to access the tokens with a Python script, you are in luck! I've included a handy
wrapper for the API which makes things really simple. Just take a look at this example:</source>
          <target state="translated">Python スクリプトでトークンにアクセスしたいなら、運がいいですね! API用の便利なラッパーを用意しました。この例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c3e5bfa09cabd6f79eaa2985ca0febfc9f8f4a4e" translate="yes" xml:space="preserve">
          <source>If you would like to come up with an automated solution for your OS, I am open to PR requests.</source>
          <target state="translated">OSの自動化ソリューションを考えてみたいという方は、PR依頼を受け付けています。</target>
        </trans-unit>
        <trans-unit id="cd8af2911c37dc7bef6f5dd9a71c47d218a493bc" translate="yes" xml:space="preserve">
          <source>If your lanuage of choice isn't Python, then you can grab tokens by making calls to the API endpoints
that the harvester's server has avalible.</source>
          <target state="translated">もしあなたの選択した言語がPythonでない場合は、収穫機のサーバーが利用可能なAPIエンドポイントを呼び出すことでトークンを取得することができます。</target>
        </trans-unit>
        <trans-unit id="7fbcd400f1cda7a80ec7c0cb7d0f1841ccb95692" translate="yes" xml:space="preserve">
          <source>In most cases you'll probably want to use the API to fetch the tokens.</source>
          <target state="translated">ほとんどの場合、トークンを取得するために API を使用することになるでしょう。</target>
        </trans-unit>
        <trans-unit id="c45c12d89161a29b3c2ee6057ae5a161cc5f9774" translate="yes" xml:space="preserve">
          <source>Inspred by &lt;a href=&quot;https://github.com/Cosmo3904/Recaptcha-Harvester-V2&quot;&gt;Cosmo3904/Recaptcha-Harvester-V2&lt;/a&gt;.</source>
          <target state="translated">Cosmo3904 &lt;a href=&quot;https://github.com/Cosmo3904/Recaptcha-Harvester-V2&quot;&gt;/ Recaptcha-Harvester-V2&lt;/a&gt;によって提供されます。</target>
        </trans-unit>
        <trans-unit id="e2f529c6cbca4fb6f216ccdee95e9b749d5d9f47" translate="yes" xml:space="preserve">
          <source>List[String]</source>
          <target state="translated">リスト[文字列]</target>
        </trans-unit>
        <trans-unit id="3ff97be3cff763af433c29eeb40a4587c764692c" translate="yes" xml:space="preserve">
          <source>Luckily, the easy way is pretty easy. You literally have to do nothing! However, this only works on Mac/Windows (Linux
support coming soon). Additionally, you can pass the path to a &lt;strong&gt;Chromium&lt;/strong&gt; browser binary/&lt;code&gt;.exe&lt;/code&gt; or a browser
that can be found in your $PATH envrionment variable through the &lt;code&gt;-b/--browser&lt;/code&gt;.</source>
          <target state="translated">幸い、簡単な方法はかなり簡単です。あなたは文字通り何もする必要はありません！ただし、これはMac / Windowsでのみ機能します（Linuxのサポートは近日提供予定）。さらに、パスを&lt;strong&gt;Chromium&lt;/strong&gt;ブラウザバイナリ/ &lt;code&gt;.exe&lt;/code&gt; または$ PATH環境変数にある &lt;code&gt;-b/--browser&lt;/code&gt; -browserを介して渡すことができます。</target>
        </trans-unit>
        <trans-unit id="0eeecd8242dfe3e4e5e38f7064e843dbdd7631bc" translate="yes" xml:space="preserve">
          <source>Made with ❤️ by &lt;a href=&quot;https://github.com/NoahCardoza&quot;&gt;@NoahCardoza&lt;/a&gt;</source>
          <target state="translated">@NoahCardozaの❤️で&lt;a href=&quot;https://github.com/NoahCardoza&quot;&gt;作成&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5de29fb047e31888189bff84addf617e55cd52ba" translate="yes" xml:space="preserve">
          <source>Mainly through the use on the &lt;code&gt;--host-rules&lt;/code&gt; Chromium flag. Here's an example:</source>
          <target state="translated">主に &lt;code&gt;--host-rules&lt;/code&gt; Chromiumフラグを使用します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="a8000f6d9a3db4e6f40fa058d82f7cc54b06438e" translate="yes" xml:space="preserve">
          <source>Programtically</source>
          <target state="translated">プログラム的に</target>
        </trans-unit>
        <trans-unit id="4f4d8bd58af9bc33d0a0890bec69a139c1ea36cb" translate="yes" xml:space="preserve">
          <source>PyArmor/PyInstaller</source>
          <target state="translated">PyArmor/PyInstaller</target>
        </trans-unit>
        <trans-unit id="643619899deccf1c9a941c05486245c8e5ade051" translate="yes" xml:space="preserve">
          <source>PyPi</source>
          <target state="translated">パイピー</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">パイソン</target>
        </trans-unit>
        <trans-unit id="c703dec9d9e14de8d799db54bb1883c73ea5695a" translate="yes" xml:space="preserve">
          <source>ReCaptcha: V2 vs. V3</source>
          <target state="translated">ReCaptcha:V2 vs.V3</target>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">ルート</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">セットアップ</target>
        </trans-unit>
        <trans-unit id="677d54e4a2ad63dc543678fef08950fe8b67884b" translate="yes" xml:space="preserve">
          <source>Solve captchas yourself without having to pay for services like 2captcha for use in automated projects.</source>
          <target state="translated">自動化されたプロジェクトで使用するための2captchaのようなサービスにお金を払う必要はありません。</target>
        </trans-unit>
        <trans-unit id="c0994f61b9aac7e86fcad8a53357959fae9351a8" translate="yes" xml:space="preserve">
          <source>Solveing V2 Captchas with &lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;Buster&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;バスターで&lt;/a&gt; V2キャプチャーを解決する</target>
        </trans-unit>
        <trans-unit id="2ff25e18559a1f42918c3d5265e7566c23680cc2" translate="yes" xml:space="preserve">
          <source>Sometimes there will be updates I'm working on that won't be pushed to the master branch/PyPi
because I haven't had time to test them. Sometimes these patches will fix problems you experience
in the stable branch, but if things get buggy don't be surprised.</source>
          <target state="translated">時々、私が作業しているアップデートがマスターブランチ/PyPi にプッシュされないことがありますが、それは私がテストする時間がなかったからです。時々、これらのパッチは安定版ブランチで経験した問題を修正することがありますが、もしバグが発生しても驚かないでください。</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">ひもじ</target>
        </trans-unit>
        <trans-unit id="24beb9985deee2175892e1aaa0b147a522b0e87b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dev&lt;/code&gt; Branch</source>
          <target state="translated">&lt;code&gt;dev&lt;/code&gt; の支店</target>
        </trans-unit>
        <trans-unit id="ae890c4e48dc04b8723ea4931e1bf514ba4d0c78" translate="yes" xml:space="preserve">
          <source>The main advantage of setting up the harvester programtically is you can
set multiple interccepter hooks to solve captchas on multiple domains.</source>
          <target state="translated">ハーベスタをプログラム的に設定する主な利点は、複数のインターセプターフックを設定して、複数のドメインのキャプチャーを解決できることです。</target>
        </trans-unit>
        <trans-unit id="f29fd41939bbc6de937ba90984e9b7c0f45b87b4" translate="yes" xml:space="preserve">
          <source>There are a few other arguments the harvester uses to make things easier and simpler which can be found in
&lt;a href=&quot;https://github.com/NoahCardoza/CaptchaHarvester/blob/master/harvester/browser.py&quot;&gt;/harvester/browser.py&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/NoahCardoza/CaptchaHarvester/blob/master/harvester/browser.py&quot;&gt;/harvester/browser.pyにあるハーベスタ&lt;/a&gt;が物事をより簡単かつ簡単にするために使用する他の引数がいくつかあります 。</target>
        </trans-unit>
        <trans-unit id="9a13bca08b02a89f72e982e5a8f6c49a659ef53d" translate="yes" xml:space="preserve">
          <source>This is your most useful endpoint. When called it will pop a token from the queue and return it in plain text. If no tokens are available it will return a &lt;a href=&quot;https://httpstatuses.com/418&quot;&gt;418 status code&lt;/a&gt;.</source>
          <target state="translated">これが最も便利なエンドポイントです。呼び出されると、キューからトークンをポップし、プレーンテキストで返します。トークンがない場合は、&lt;a href=&quot;https://httpstatuses.com/418&quot;&gt;418のステータスコード&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="e92ababd0f077baee969e8d7c335b3205114a2b1" translate="yes" xml:space="preserve">
          <source>This project allows you to solve Google's V2 and V3 ReCaptchas as well as
hCaptchas. However, since Google's V3 ReCaptchas are based on a rating
system of your browser and browsing habits, it's slightly less reliable.</source>
          <target state="translated">このプロジェクトでは、hCaptchasだけでなく、GoogleのV2とV3のReCaptchasを解くことができます。ただし、GoogleのV3のReCaptchasは、ブラウザや閲覧習慣の評価を元にしているので、やや信頼性が低いです。</target>
        </trans-unit>
        <trans-unit id="b7bf46dc58cd014abfbaff664cd514e1b262bd52" translate="yes" xml:space="preserve">
          <source>This project is also natively supported by a newer project of mine which allows you to bypass
Cloudflare's Bot Detection. It's super simlpe to setup, just follow the instructions &lt;a href=&quot;https://github.com/NoahCardoza/CloudProxy#harvester&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">このプロジェクトは、Cloudflareのボット検出をバイパスできる私の新しいプロジェクトでもネイティブにサポートされています。セットアップはとても簡単&lt;a href=&quot;https://github.com/NoahCardoza/CloudProxy#harvester&quot;&gt;です&lt;/a&gt;。こちらの手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="be1a14e95fb133112162867412861c509b521b40" translate="yes" xml:space="preserve">
          <source>This will return a list of all the avalible tokens in the queue. It is recomended that you never use any tokens you see in this list because then &lt;code&gt;/token&lt;/code&gt; may return an already used token.</source>
          <target state="translated">これにより、キュー内のすべての有効なトークンのリストが返されます。 &lt;code&gt;/token&lt;/code&gt; は既に使用されているトークンを返す可能性があるため、このリストに表示されているトークンを使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a9b8787550aa118283c2f42ab25ddd4a566faa76" translate="yes" xml:space="preserve">
          <source>This will setup an HTTP server at &lt;code&gt;https://127.0.0.1:5000&lt;/code&gt; by default.</source>
          <target state="translated">これにより、HTTPサーバーがデフォルトで &lt;code&gt;https://127.0.0.1:5000&lt;/code&gt; にセットアップされます。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">タイプ</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">使用事例</target>
        </trans-unit>
        <trans-unit id="188e999acded8422599aaefff54e44481c3e5600" translate="yes" xml:space="preserve">
          <source>When accessing the server to collect the tokens you have to do it the right way and you can't connect to it
just like any old server. You configure your browser to think that the server is actually the site we want
to collect captcha tokens for</source>
          <target state="translated">トークンを収集するためにサーバーにアクセスする際には、正しい方法でアクセスしなければならず、古いサーバーのように接続することはできません。ブラウザを設定して、サーバーが実際にキャプチャトークンを収集したいサイトであると思わせるようにします。</target>
        </trans-unit>
        <trans-unit id="921cf36ac899ac816dd480faa8b1be9a7c9dbfbe" translate="yes" xml:space="preserve">
          <source>When solving Google's v3 captchas, you should login to a Google Account first. The v3 captcha's
work of a raiting system of your browsing habits. They are a little finicky compared to their v2
predecessors. If the tokens stop working, you should start using a different Google Account or
wait a little bit between reloading the captcha harvester page.</source>
          <target state="translated">Googleのv3キャプチャを解くときは、まずGoogleアカウントにログインする必要があります。v3のキャプチャは、あなたのブラウジングの習慣を評価するシステムの働きをしています。v2の前任者と比較して、彼らは少し微妙です。トークンが動作しなくなった場合は、別のGoogleアカウントを使用し始めるか、キャプチャハーベスターページをリロードする間に少し待つ必要があります。</target>
        </trans-unit>
        <trans-unit id="8eea4e2d81d87dc9dc0e4d1f9ef3e36b86abf6be" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;-b&lt;/code&gt;, a browser instance will be lanuched that's totally disconnected from your main Profile
(unless you pass &lt;code&gt;-r&lt;/code&gt;, which &lt;em&gt;MIGHT&lt;/em&gt; be buggy on Windows).</source>
          <target state="translated">使用する場合は &lt;code&gt;-b&lt;/code&gt; を、ブラウザインスタンスは、（あなたが合格しない限り、完全にあなたの主なプロフィールから切り離さだとlanuchedされます &lt;code&gt;-r&lt;/code&gt; れ、&lt;em&gt;MIGHT&lt;/em&gt; Windows上のバグが）。</target>
        </trans-unit>
        <trans-unit id="00761b5837e6754cd93df29269a9e528dbccb587" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; is the domain the harvester was lanuched on. We need this because the harvester supports intercepting multiple domains at a time.</source>
          <target state="translated">ここで、 &lt;code&gt;&amp;lt;domain&amp;gt;&lt;/code&gt; 収穫が上lanuchedたドメインです。ハーベスタは一度に複数のドメインのインターセプトをサポートするため、これが必要です。</target>
        </trans-unit>
        <trans-unit id="f91e7f3452ac124fc13d7719c8608082343af961" translate="yes" xml:space="preserve">
          <source>You can check out &lt;a href=&quot;example.py&quot;&gt;example.py&lt;/a&gt; to see how to progamatically
start the server and access the tokens by integrating the harvester with
your existsing (or new) code.</source>
          <target state="translated">&lt;a href=&quot;example.py&quot;&gt;example.py&lt;/a&gt;をチェックして、サーバーをプログラムで起動し、ハーベスターを既存の（または新しい）コードと統合してトークンにアクセスする方法を確認できます。</target>
        </trans-unit>
        <trans-unit id="04fb40e31c0d6d7fc8a915772bd89155c8fb58e2" translate="yes" xml:space="preserve">
          <source>You might find it useful to use &lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;Buster&lt;/a&gt; when solving V2 Captchas.
You can clone and build the extension for chrome, and then pass the path of the built extension
to harvester with the &lt;code&gt;-e/--load-extension&lt;/code&gt; flag.</source>
          <target state="translated">V2 Captchaを解くときに&lt;a href=&quot;https://github.com/dessant/buster&quot;&gt;Buster&lt;/a&gt;を使用すると便利な場合があります。chromeの拡張機能を複製して構築し、 &lt;code&gt;-e/--load-extension&lt;/code&gt; フラグを使用して、構築した拡張機能のパスをハーベスターに渡すことができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
