<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/aws-cdk-aws-synthetics/">
    <body>
      <group id="aws-cdk-aws-synthetics">
        <trans-unit id="58b63e273b964039d6ef432a415df3f177c818e5" translate="yes" xml:space="preserve">
          <source>---</source>
          <target state="translated">---</target>
        </trans-unit>
        <trans-unit id="b2256b911085d07c0bb01b9d1ad16bf2b50b2b4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canary.metricDuration()&lt;/code&gt; - how much time each canary run takes, in seconds.</source>
          <target state="translated">&lt;code&gt;canary.metricDuration()&lt;/code&gt; -各カナリア実行にかかる時間（秒単位）。</target>
        </trans-unit>
        <trans-unit id="9d48df594c9c8394e314617c3ecaf84440a17202" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canary.metricFailed()&lt;/code&gt; - number of failed canary runs over a given time</source>
          <target state="translated">&lt;code&gt;canary.metricFailed()&lt;/code&gt; -所定の時間に失敗したカナリア実行の数</target>
        </trans-unit>
        <trans-unit id="408e1139d9f79e9a2e53c70a1e52aafc8893d0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canary.metricSuccessPercent()&lt;/code&gt; - percentage of successful canary runs over a given time</source>
          <target state="translated">&lt;code&gt;canary.metricSuccessPercent()&lt;/code&gt; -所定の時間に成功したカナリア実行の割合</target>
        </trans-unit>
        <trans-unit id="f21c0829998c84c1eca5ce36087bde880b1a83f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code.fromAsset(path)&lt;/code&gt; - specify a .zip file or a directory in the local filesystem which will be zipped and uploaded to S3 on deployment. See the above Note for directory structure.</source>
          <target state="translated">&lt;code&gt;code.fromAsset(path)&lt;/code&gt; -展開時にS3に圧縮およびアップロードされる.zipファイルまたはローカルファイルシステムのディレクトリを指定します。ディレクトリ構造については、上記の注を参照してください。</target>
        </trans-unit>
        <trans-unit id="ed09605a1102ac31c78540ffa939f655acaa1327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code.fromBucket(bucket, key[, objectVersion])&lt;/code&gt; - specify an S3 object that contains the .zip file of your runtime code. See the above Note for directory structure.</source>
          <target state="translated">&lt;code&gt;code.fromBucket(bucket, key[, objectVersion])&lt;/code&gt; -ランタイムコードの.zipファイルを含むS3オブジェクトを指定します。ディレクトリ構造については、上記の注を参照してください。</target>
        </trans-unit>
        <trans-unit id="a059d8c60496d8e3f097e0e7f311ba8df0456ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code.fromInline(code)&lt;/code&gt; - specify an inline script.</source>
          <target state="translated">&lt;code&gt;code.fromInline(code)&lt;/code&gt; -インラインスクリプトを指定します。</target>
        </trans-unit>
        <trans-unit id="1c5b09800dfa48be2db5698640d8e95bceb5a1b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For &lt;code&gt;code.fromAsset()&lt;/code&gt; and &lt;code&gt;code.fromBucket()&lt;/code&gt;, the canary resource requires the following folder structure:</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;について &lt;code&gt;code.fromAsset()&lt;/code&gt; と &lt;code&gt;code.fromBucket()&lt;/code&gt; 、カナリアリソースは、以下のフォルダ構造を必要とします。</target>
        </trans-unit>
        <trans-unit id="aadb4de3ba7d0a9c3c2233a32f7d1666813714af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The function &lt;strong&gt;must&lt;/strong&gt; be called &lt;code&gt;handler&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;関数&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;handler&lt;/code&gt; と呼ばれる&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="603b7f9391750d3702db5a5f219a3591001e7a8b" translate="yes" xml:space="preserve">
          <source>Add blueprints to the Test class &lt;a href=&quot;https://github.com/aws/aws-cdk/issues/9613#issue-677134857&quot;&gt;#9613&lt;/a&gt;.</source>
          <target state="translated">Testクラス&lt;a href=&quot;https://github.com/aws/aws-cdk/issues/9613#issue-677134857&quot;&gt;＃9613&lt;/a&gt;にブループリントを追加します。</target>
        </trans-unit>
        <trans-unit id="131dd3d64a585c056ac1cd60d9d9753954f5c66f" translate="yes" xml:space="preserve">
          <source>Alarms</source>
          <target state="translated">アラーム</target>
        </trans-unit>
        <trans-unit id="c66a188405ae23cc321fe9d7a1295fb697f13a5c" translate="yes" xml:space="preserve">
          <source>All classes with the &lt;code&gt;Cfn&lt;/code&gt; prefix in this module (&lt;a href=&quot;https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib&quot;&gt;CFN Resources&lt;/a&gt;) are always stable and safe to use.</source>
          <target state="translated">このモジュール（&lt;a href=&quot;https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib&quot;&gt;CFN Resources&lt;/a&gt;）に &lt;code&gt;Cfn&lt;/code&gt; プレフィックスが付いているすべてのクラスは、常に安定していて安全に使用できます。</target>
        </trans-unit>
        <trans-unit id="3a162c3ea76300c0a510b196cdc789464189339d" translate="yes" xml:space="preserve">
          <source>Amazon CloudWatch Synthetics Construct Library</source>
          <target state="translated">Amazon CloudWatch Synthetics Construct Library</target>
        </trans-unit>
        <trans-unit id="1146dcd4cdbae7b8e6d28ce6292891c9fb02dd7b" translate="yes" xml:space="preserve">
          <source>Amazon CloudWatch Synthetics allow you to monitor your application by generating &lt;strong&gt;synthetic&lt;/strong&gt; traffic. The traffic is produced by a &lt;strong&gt;canary&lt;/strong&gt;: a configurable script that runs on a schedule. You configure the canary script to follow the same routes and perform the same actions as a user, which allows you to continually verify your user experience even when you don't have any traffic on your applications.</source>
          <target state="translated">Amazon CloudWatch Syntheticsを使用すると、&lt;strong&gt;合成&lt;/strong&gt;トラフィックを生成してアプリケーションを監視できます。トラフィックは&lt;strong&gt;カナリア&lt;/strong&gt;によって生成されます：スケジュールで実行される構成可能なスクリプト。ユーザーと同じルートをたどり、同じアクションを実行するようにカナリアスクリプトを構成します。これにより、アプリケーションにトラフィックがない場合でも、ユーザーエクスペリエンスを継続的に確認できます。</target>
        </trans-unit>
        <trans-unit id="dad882c9c3e0a7a06ab377ce15833cf98595a06c" translate="yes" xml:space="preserve">
          <source>Canary</source>
          <target state="translated">カナリア</target>
        </trans-unit>
        <trans-unit id="cecf300cc8f7f55e7f784fca3bdf4b1185d8d0d0" translate="yes" xml:space="preserve">
          <source>Configuring the Canary Script</source>
          <target state="translated">カナリアスクリプトの設定</target>
        </trans-unit>
        <trans-unit id="288c12dae681241c534899761fafabf6f3316499" translate="yes" xml:space="preserve">
          <source>Create an alarm that tracks the canary metric:</source>
          <target state="translated">カナリアのメトリックを追跡するアラームを作成します。</target>
        </trans-unit>
        <trans-unit id="c3cba160fe064a0d9a4fc24f20540221a2aff0ed" translate="yes" xml:space="preserve">
          <source>Future Work</source>
          <target state="translated">今後の仕事</target>
        </trans-unit>
        <trans-unit id="c75a4b338f3d2c584367c71f04b34cb0270a193f" translate="yes" xml:space="preserve">
          <source>See Synthetics &lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_WritingCanary.html&quot;&gt;docs&lt;/a&gt;.</source>
          <target state="translated">Synthetics &lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_WritingCanary.html&quot;&gt;docsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="69fd70a2ac69920f0a4f25d493e0db6f4035ee50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;synthetics.Code&lt;/code&gt; class exposes static methods to bundle your code artifacts:</source>
          <target state="translated">&lt;code&gt;synthetics.Code&lt;/code&gt; のクラスは、あなたのコードの成果物をバンドルする静的メソッドを公開しています。</target>
        </trans-unit>
        <trans-unit id="3dbcc18ab4e657e549e75fa1c70952b084642819" translate="yes" xml:space="preserve">
          <source>The APIs of higher level constructs in this module are experimental and under active development. They are subject to non-backward compatible changes or removal in any future version. These are not subject to the &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; model and breaking changes will be announced in the release notes. This means that while you may use them, you may need to update your source code when upgrading to a newer version of this package.</source>
          <target state="translated">このモジュールのより高いレベルの構成のAPIは実験的であり、活発に開発中です。将来のバージョンでは、下位互換性のない変更または削除の対象となります。これらは&lt;a href=&quot;https://semver.org/&quot;&gt;セマンティックバージョニング&lt;/a&gt;モデルの対象ではなく、重大な変更はリリースノートで発表されます。つまり、それらを使用することはできますが、このパッケージの新しいバージョンにアップグレードするときに、ソースコードを更新する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="8395b785306e64d1a6749bfc5e8f3d840646e645" translate="yes" xml:space="preserve">
          <source>The CDK Construct Library for AWS::Synthetics</source>
          <target state="translated">AWS::SyntheticsのためのCDKコンストラクトライブラリ</target>
        </trans-unit>
        <trans-unit id="161d33f6226b583eec36ae6abd98aaa06f86147c" translate="yes" xml:space="preserve">
          <source>The Canary code will be executed in a lambda function created by Synthetics on your behalf. The Lambda function includes a custom &lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html&quot;&gt;runtime&lt;/a&gt; provided by Synthetics. The provided runtime includes a variety of handy tools such as &lt;a href=&quot;https://www.npmjs.com/package/puppeteer-core&quot;&gt;Puppeteer&lt;/a&gt;  and Chromium. To learn more about Synthetics capabilities, check out the &lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries.html&quot;&gt;docs&lt;/a&gt;.</source>
          <target state="translated">Canaryコードは、Syntheticsが作成したラムダ関数で実行されます。 Lambda関数には、Syntheticsによって提供されるカスタム&lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html&quot;&gt;ランタイム&lt;/a&gt;が含まれています。提供されているランタイムには、&lt;a href=&quot;https://www.npmjs.com/package/puppeteer-core&quot;&gt;Puppeteer&lt;/a&gt; やChromium などのさまざまな便利なツールが含まれています。 Synthetics機能の詳細については、&lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries.html&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="f8e704bf6fdc41192f7c6eb39fcdefdef7e36f2a" translate="yes" xml:space="preserve">
          <source>The below code defines a canary that will hit the &lt;code&gt;books/topbook&lt;/code&gt; endpoint every 5 minutes:</source>
          <target state="translated">以下のコードは、 &lt;code&gt;books/topbook&lt;/code&gt; エンドポイントを5分ごとにヒットするカナリアを定義します。</target>
        </trans-unit>
        <trans-unit id="7c680be5a92e03686ef1a206fbf1e84977c52d86" translate="yes" xml:space="preserve">
          <source>The canary will automatically produce a CloudWatch Dashboard:</source>
          <target state="translated">カナリアが自動的にCloudWatch Dashboardを作成してくれます。</target>
        </trans-unit>
        <trans-unit id="f269718e13b142e422dcc4a9d8af04a1b193e917" translate="yes" xml:space="preserve">
          <source>The following is an example of an &lt;code&gt;index.js&lt;/code&gt; file which exports the &lt;code&gt;handler&lt;/code&gt; function:</source>
          <target state="translated">以下は、 &lt;code&gt;handler&lt;/code&gt; 関数をエクスポートする &lt;code&gt;index.js&lt;/code&gt; ファイルの例です。</target>
        </trans-unit>
        <trans-unit id="7ddc831a173c96ffd1938163a8a7d309a55e5f4b" translate="yes" xml:space="preserve">
          <source>To configure the script the canary executes, use the &lt;code&gt;test&lt;/code&gt; property. The &lt;code&gt;test&lt;/code&gt; property accepts a &lt;code&gt;Test&lt;/code&gt; instance that can be initialized by the &lt;code&gt;Test&lt;/code&gt; class static methods. Currently, the only implemented method is &lt;code&gt;Test.custom()&lt;/code&gt;, which allows you to bring your own code. In the future, other methods will be added. &lt;code&gt;Test.custom()&lt;/code&gt; accepts &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;handler&lt;/code&gt; properties -- both are required by Synthetics to create a lambda function on your behalf.</source>
          <target state="translated">カナリアが実行するスクリプトを構成するには、 &lt;code&gt;test&lt;/code&gt; プロパティを使用します。 &lt;code&gt;test&lt;/code&gt; プロパティは、受け入れ &lt;code&gt;Test&lt;/code&gt; によって初期化することができるインスタンス &lt;code&gt;Test&lt;/code&gt; クラスの静的メソッドを。現在、実装されている唯一のメソッドは &lt;code&gt;Test.custom()&lt;/code&gt; です。これにより、独自のコードを使用できます。将来的には、他の方法が追加される予定です。 &lt;code&gt;Test.custom()&lt;/code&gt; は &lt;code&gt;code&lt;/code&gt; と &lt;code&gt;handler&lt;/code&gt; プロパティを受け入れます。どちらもSyntheticsがユーザーに代わってラムダ関数を作成するために必要です。</target>
        </trans-unit>
        <trans-unit id="8b1b7cfa99177b90b61c386555c0ba1ba4f1e73c" translate="yes" xml:space="preserve">
          <source>To illustrate how to use a canary, assume your application defines the following endpoint:</source>
          <target state="translated">カナリアの使い方を説明するために、アプリケーションが以下のエンドポイントを定義しているとします。</target>
        </trans-unit>
        <trans-unit id="e409ad252b96639e1f4b631704844d713ce6cb33" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Code&lt;/code&gt; class static initializers:</source>
          <target state="translated">&lt;code&gt;Code&lt;/code&gt; クラスの静的初期化子を使用します。</target>
        </trans-unit>
        <trans-unit id="9020fb0b279e2acdff4f5dfd25b203ec21b5db3e" translate="yes" xml:space="preserve">
          <source>You can configure a CloudWatch Alarm on a canary metric. Metrics are emitted by CloudWatch automatically and can be accessed by the following APIs:</source>
          <target state="translated">カナリメトリックにCloudWatchアラームを設定することができます。メトリクスはCloudWatchによって自動的に発行され、以下のAPIでアクセスできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
