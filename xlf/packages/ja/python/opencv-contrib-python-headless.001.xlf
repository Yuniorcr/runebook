<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/opencv-contrib-python-headless/">
    <body>
      <group id="opencv-contrib-python-headless">
        <trans-unit id="eef3ce61cec32e1f1462f376a3af2508c17f6d2b" translate="yes" xml:space="preserve">
          <source>3.5 (EOL in 2020-09-13, builds for 3.5 will not be provided after this)</source>
          <target state="translated">3.5 (2020-09-13でEOL、3.5用のビルドはこれ以降提供されません)</target>
        </trans-unit>
        <trans-unit id="0d35d14aa1a0bbc0b4f0032b1cfaefe8602abcd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CI_BUILD&lt;/code&gt;. Set to &lt;code&gt;1&lt;/code&gt; to emulate the CI environment build behaviour. Used only in CI builds to force certain build flags on in &lt;code&gt;setup.py&lt;/code&gt;. Do not use this unless you know what you are doing.</source>
          <target state="translated">&lt;code&gt;CI_BUILD&lt;/code&gt; 。 &lt;code&gt;1&lt;/code&gt; に設定すると、CI環境のビルド動作がエミュレートされます。 &lt;code&gt;setup.py&lt;/code&gt; で特定のビルドフラグを強制的にオンにするためにCIビルドでのみ使用されます。何をしているのかわからない場合は、これを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="3b817c4b6fcaf2f7426e295beca6aaf9543695ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMAKE_ARGS&lt;/code&gt;. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.</source>
          <target state="translated">&lt;code&gt;CMAKE_ARGS&lt;/code&gt; 。OpenCVのCMake呼び出しに対する追加の引数。これを使用して、カスタムビルドを作成できます。</target>
        </trans-unit>
        <trans-unit id="aae9c340a781c5a235cb3ad5d5171747054d6dcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; and &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt;. Set to &lt;code&gt;1&lt;/code&gt; to build the contrib and/or headless version</source>
          <target state="translated">&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; および &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt; 。 &lt;code&gt;1&lt;/code&gt; に設定して、コントリビュートおよび/またはヘッドレスバージョンをビルドします</target>
        </trans-unit>
        <trans-unit id="12ad39d8037131bcde0f7d453d738145c280d646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENABLE_JAVA&lt;/code&gt;, Set to &lt;code&gt;1&lt;/code&gt; to enable the Java client build.  This is disabled by default.</source>
          <target state="translated">&lt;code&gt;ENABLE_JAVA&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; に設定すると、Javaクライアントのビルドが有効になります。これはデフォルトで無効になっています。</target>
        </trans-unit>
        <trans-unit id="60345bea60a436263f6ef6085b7bcf7848935d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cv_major.cv_minor.cv_revision+git_hash_of_this_repo&lt;/code&gt; e.g. &lt;code&gt;3.1.0+14a8d39&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cv_major.cv_minor.cv_revision+git_hash_of_this_repo&lt;/code&gt; 例： &lt;code&gt;3.1.0+14a8d39&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2262213727e68f97384f00952c65c81c055d3d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cv_major.cv_minor.cv_revision.package_revision&lt;/code&gt; e.g. &lt;code&gt;3.1.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cv_major.cv_minor.cv_revision.package_revision&lt;/code&gt; 例： &lt;code&gt;3.1.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdb27f0bac09bfee6d9534ce0c50e8862023f583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_version.py&lt;/code&gt; script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string. It saves the version information to &lt;code&gt;version.py&lt;/code&gt; file under &lt;code&gt;cv2&lt;/code&gt; in addition to some other flags.</source>
          <target state="translated">&lt;code&gt;find_version.py&lt;/code&gt; スクリプトは、OpenCVソースからバージョン情報を検索し、このリポジトリに固有のリビジョン番号もバージョン文字列に追加します。他のいくつかのフラグに加えて、バージョン情報を &lt;code&gt;cv2&lt;/code&gt; の下の &lt;code&gt;version.py&lt;/code&gt; ファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="9f7d69417504ae2e94cfb550c685df2c36fbcf01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Do I need to install also OpenCV separately?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：OpenCVも別途インストールする必要がありますか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0d9591cc84b3f1d006523f25d372e22adbc524b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: I have some other import errors?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：他にインポートエラーがありますか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06a787acaf7b1542f41eecc38603cae26fe86724" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Import fails on Windows: &lt;code&gt;ImportError: DLL load failed: The specified module could not be found.&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：Windowsでインポートが失敗します： &lt;code&gt;ImportError: DLL load failed: The specified module could not be found.&lt;/code&gt; ？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dae636d3c71e0030adf19ae51afada3984a844f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Pip install fails with &lt;code&gt;Could not find a version that satisfies the requirement ...&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：Pipのインストールが失敗し &lt;code&gt;Could not find a version that satisfies the requirement ...&lt;/code&gt; ？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb5da4d47c1a0dad31ba9c993ac5c273ba14e587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Pip install fails with &lt;code&gt;ModuleNotFoundError: No module named 'skbuild'&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：Pipのインストールが &lt;code&gt;ModuleNotFoundError: No module named 'skbuild'&lt;/code&gt; 失敗します：「skbuild」という名前のモジュールがありませんか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26c1a145278d34fcc62d21ba71f35722dfad7ebd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Why the package and import are different (opencv-python vs. cv2)?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：パッケージとインポートが異なるのはなぜですか（opencv-pythonとcv2）？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e66fbeb7d0d225e13c30648fbd354d0dab4edb8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q: Why the packages do not include non-free algorithms?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q：パッケージに非フリーアルゴリズムが含まれていないのはなぜですか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91fe8b643c6dacb31053a9a2df2b03b51b02133c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unofficial&lt;/strong&gt; pre-built OpenCV packages for Python.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Python用の&lt;strong&gt;非公式&lt;/strong&gt;のビルド済みOpenCVパッケージ。</target>
        </trans-unit>
        <trans-unit id="65be52049304c320afbf1208e6c270feb2dff1c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;a.&lt;/strong&gt; Packages for standard desktop environments (Windows, macOS, almost any GNU/Linux distribution)</source>
          <target state="translated">&lt;strong&gt;a。&lt;/strong&gt;標準デスクトップ環境用のパッケージ（Windows、macOS、ほぼすべてのGNU / Linuxディストリビューション）</target>
        </trans-unit>
        <trans-unit id="c348dd346de67debca982f63462a090421a0940d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;b.&lt;/strong&gt; Packages for server (headless) environments</source>
          <target state="translated">&lt;strong&gt;b。&lt;/strong&gt;サーバー（ヘッドレス）環境用のパッケージ</target>
        </trans-unit>
        <trans-unit id="fee3bab91e308d3bbe36ed69240bf1ba4f61c00f" translate="yes" xml:space="preserve">
          <source>A release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:</source>
          <target state="translated">新しいタグが master ブランチにプッシュされるとリリースが作成され、PyPI にアップロードされます。これらのタグはパッケージを区別するためのもので (このレポでは変更があっても OpenCV のバージョンは変わらない)、順次インクリメントしていく必要があります。実際には、リリースのバージョン番号は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7c2defb728105bfc82a0c94298eef3033f8ceb30" translate="yes" xml:space="preserve">
          <source>A: If the import fails on Windows, make sure you have &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48145&quot;&gt;Visual C++ redistributable 2015&lt;/a&gt; installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, &lt;a href=&quot;https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows&quot;&gt;Universal C Runtime&lt;/a&gt; might be also required.</source>
          <target state="translated">A：Windowsでインポートが失敗した場合は、&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48145&quot;&gt;Visual C ++再配布可能ファイル2015が&lt;/a&gt;インストールされていることを確認してください。Windows 10より古いバージョンのWindowsを使用していて、最新のシステム更新プログラムがインストールされていない場合は、&lt;a href=&quot;https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows&quot;&gt;ユニバーサルCランタイム&lt;/a&gt;も必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="e5286b718798b738a402cc16011b7c65ed69dd16" translate="yes" xml:space="preserve">
          <source>A: It's easier for users to understand &lt;code&gt;opencv-python&lt;/code&gt; than &lt;code&gt;cv2&lt;/code&gt; and it makes it easier to find the package with search engines. &lt;code&gt;cv2&lt;/code&gt; (old interface in old OpenCV versions was named as &lt;code&gt;cv&lt;/code&gt;) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the &lt;code&gt;import cv2&lt;/code&gt;.</source>
          <target state="translated">A：ユーザーは &lt;code&gt;cv2&lt;/code&gt; よりもopencv &lt;code&gt;opencv-python&lt;/code&gt; を理解しやすく、検索エンジンでパッケージを見つけやすくなっています。 &lt;code&gt;cv2&lt;/code&gt; （古いOpenCVバージョンの古いインターフェイスは &lt;code&gt;cv&lt;/code&gt; という名前でした）は、OpenCV開発者がバインディングジェネレーターを作成したときに選択した名前です。これは、インターネット上のさまざまな種類のチュートリアルと一致するように、インポート名として保持されます。インポートの名前や動作を変更すると、 &lt;code&gt;import cv2&lt;/code&gt; 慣れている経験豊富なユーザーにとっても混乱を招きます。</target>
        </trans-unit>
        <trans-unit id="c412169e7d1889fac51d89ceadbf5dae1fce4b20" translate="yes" xml:space="preserve">
          <source>A: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).</source>
          <target state="translated">A:OpenCV の Python バインディング (サイトパッケージ内の cv2.so または cv2.pyd)を手動でインストールした古いものを削除したことを確認してください。</target>
        </trans-unit>
        <trans-unit id="bb201b01cd2fda2117cf9ce5cae709e807e3f615" translate="yes" xml:space="preserve">
          <source>A: Most likely the issue is related to too old pip and can be fixed by running &lt;code&gt;pip install --upgrade pip&lt;/code&gt;. Note that the wheel (especially manylinux) format does not currently support properly ARM architecture so there are no packages for ARM based platforms in PyPI. However, &lt;code&gt;opencv-python&lt;/code&gt; packages for Raspberry Pi can be found from &lt;a href=&quot;https://www.piwheels.org/&quot;&gt;https://www.piwheels.org/&lt;/a&gt;.</source>
          <target state="translated">A：問題は古いpipに関連している可能性が高く、 &lt;code&gt;pip install --upgrade pip&lt;/code&gt; 実行することで修正できます。ホイール（特にmanylinux）形式は現在ARMアーキテクチャを適切にサポートしていないため、PyPIにはARMベースのプラットフォーム用のパッケージがないことに注意してください。ただし、Raspberry Piの &lt;code&gt;opencv-python&lt;/code&gt; パッケージは、&lt;a href=&quot;https://www.piwheels.org/&quot;&gt;https：//www.piwheels.org/&lt;/a&gt;から入手できます。</target>
        </trans-unit>
        <trans-unit id="5855ec3443c09944b960cb910181bf030e9c945c" translate="yes" xml:space="preserve">
          <source>A: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.</source>
          <target state="translated">A:いいえ,パッケージは特別なホイールバイナリパッケージで,すでに静的にビルドされたOpenCVバイナリが含まれています.</target>
        </trans-unit>
        <trans-unit id="fd22fa3e514270d23e5625037ca02792f1d04a45" translate="yes" xml:space="preserve">
          <source>A: Non-free algorithms such as SURF are not included in these packages because they are patented / non-free and therefore cannot be distributed as built binaries. Note that SIFT is included in the builds due to patent expiration since OpenCV versions 4.3.0 and 3.4.10. See this issue for more info: &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/126&quot;&gt;https://github.com/skvark/opencv-python/issues/126&lt;/a&gt;</source>
          <target state="translated">A：SURFなどの非フリーアルゴリズムは、特許取得済み/非フリーであり、ビルドされたバイナリとして配布できないため、これらのパッケージには含まれていません。OpenCVバージョン4.3.0および3.4​​.10以降の特許満了により、SIFTがビルドに含まれていることに注意してください。詳細については、この問題を参照してください：&lt;a href=&quot;https://github.com/skvark/opencv-python/issues/126&quot;&gt;https&lt;/a&gt;：//github.com/skvark/opencv-python/issues/126</target>
        </trans-unit>
        <trans-unit id="28834acbbc216ed1a7f8c707f9bda3b2e3923890" translate="yes" xml:space="preserve">
          <source>Add custom Cmake flags if needed, for example: &lt;code&gt;export CMAKE_ARGS=&quot;-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF&quot;&lt;/code&gt; (in Windows you need to set environment variables differently depending on Command Line or PowerShell)</source>
          <target state="translated">必要に応じて、カスタムCmakeフラグを追加します。例： &lt;code&gt;export CMAKE_ARGS=&quot;-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF&quot;&lt;/code&gt; （Windowsでは、コマンドラインまたはPowerShellに応じて環境変数を異なる方法で設定する必要があります）</target>
        </trans-unit>
        <trans-unit id="d31137698c052b0d28b578c2a1d017cd13976be2" translate="yes" xml:space="preserve">
          <source>All packages contain haarcascade files. &lt;code&gt;cv2.data.haarcascades&lt;/code&gt; can be used as a shortcut to the data folder. For example:</source>
          <target state="translated">すべてのパッケージには、haarcascadeファイルが含まれています。 &lt;code&gt;cv2.data.haarcascades&lt;/code&gt; は、データフォルダーへのショートカットとして使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="e5d0869d4bb2b3e943082d76a8b28b4a921829a9" translate="yes" xml:space="preserve">
          <source>All wheels ship with &lt;a href=&quot;http://ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&quot;&gt;LGPLv2.1&lt;/a&gt;.</source>
          <target state="translated">すべてのホイールには、&lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html&quot;&gt;LGPLv2.1で&lt;/a&gt;ライセンスされた&lt;a href=&quot;http://ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt;が付属しています。</target>
        </trans-unit>
        <trans-unit id="23a7808b48afc84b0dceb9136590ca7bfdbb9b77" translate="yes" xml:space="preserve">
          <source>Backward compatibility</source>
          <target state="translated">下位互換性</target>
        </trans-unit>
        <trans-unit id="51a7c742c1af01bd741e224fb64c35ee77efc585" translate="yes" xml:space="preserve">
          <source>Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.</source>
          <target state="translated">新しい問題を開く前に、以下のFAQを読んで、すでに開いている他の問題を見てみてください。</target>
        </trans-unit>
        <trans-unit id="ed8be40119bb404acece481d9977c53a6312208d" translate="yes" xml:space="preserve">
          <source>Build OpenCV</source>
          <target state="translated">OpenCVを構築する</target>
        </trans-unit>
        <trans-unit id="c829cb4d9806fbd919121f46e8b185019b2c859e" translate="yes" xml:space="preserve">
          <source>CI build process</source>
          <target state="translated">CIビルドプロセス</target>
        </trans-unit>
        <trans-unit id="1428bcac99c18e46b7ea28b1e507c8d4b0c5b287" translate="yes" xml:space="preserve">
          <source>Checkout repository and submodules</source>
          <target state="translated">リポジトリとサブモジュールをチェックアウト</target>
        </trans-unit>
        <trans-unit id="96cd4a478a777929649e65dfeefd175585b0e6a4" translate="yes" xml:space="preserve">
          <source>Clone this repository: &lt;code&gt;git clone --recursive https://github.com/skvark/opencv-python.git&lt;/code&gt;</source>
          <target state="translated">このリポジトリの &lt;code&gt;git clone --recursive https://github.com/skvark/opencv-python.git&lt;/code&gt; ます：git clone --recursive https://github.com/skvark/opencv-python.git</target>
        </trans-unit>
        <trans-unit id="0b00068709d2d2e0450334c2a4b719476924161e" translate="yes" xml:space="preserve">
          <source>Contrib modules are also included as a submodule</source>
          <target state="translated">Contribモジュールもサブモジュールとして含まれています。</target>
        </trans-unit>
        <trans-unit id="da0ae4bd6efeeaf942c1849cb0803873fa702b46" translate="yes" xml:space="preserve">
          <source>Currently, builds for following Python versions are provided:</source>
          <target state="translated">現在、以下のバージョンのPythonのビルドが提供されています。</target>
        </trans-unit>
        <trans-unit id="e749149ae2a4a4f247688f8c5aa59dc434e5d5ea" translate="yes" xml:space="preserve">
          <source>Development builds</source>
          <target state="translated">開発ビルド</target>
        </trans-unit>
        <trans-unit id="4771fc506234b8cd368c7216c7da29d9919eedc7" translate="yes" xml:space="preserve">
          <source>Documentation for opencv-python</source>
          <target state="translated">opencv-python 用ドキュメント</target>
        </trans-unit>
        <trans-unit id="a07b4f571bcf753bfa5d1fa9d9a4bf202de4f732" translate="yes" xml:space="preserve">
          <source>Every commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:</source>
          <target state="translated">このレポのマスターブランチへのすべてのコミットがビルドされます。ビルドされる可能性のある成果物はローカルのバージョン識別子を使用します。</target>
        </trans-unit>
        <trans-unit id="f39b0e05ba2013500991746afbeaaaa496098560" translate="yes" xml:space="preserve">
          <source>Find OpenCV version from the sources</source>
          <target state="translated">ソースからOpenCVのバージョンを探す</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">よくある質問</target>
        </trans-unit>
        <trans-unit id="395c83eb8e23b0df758007923ffc1f7ae68b6926" translate="yes" xml:space="preserve">
          <source>If some dependency is not enabled in the pre-built wheels, you can also run the build locally to create a custom wheel.</source>
          <target state="translated">事前にビルドされたホイールで有効になっていない依存関係がある場合は、ローカルでビルドを実行してカスタムホイールを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="8d0899c6ca142e453a98b8d204fb64443010105d" translate="yes" xml:space="preserve">
          <source>If the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see &lt;a href=&quot;https://github.com/skvark/opencv-python/issues/36&quot;&gt;this issue&lt;/a&gt; for a manual fix.</source>
          <target state="translated">上記が役に立たない場合は、Anacondaを使用しているかどうかを確認してください。古いAnacondaバージョンには、エラーの原因となるバグがあります。手動修正については、&lt;a href=&quot;https://github.com/skvark/opencv-python/issues/36&quot;&gt;この問題&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5bc9ea7898090286e66cd13a2af7f633ab4f2c73" translate="yes" xml:space="preserve">
          <source>If you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called &quot;Media Foundation&quot; in the Server Manager. Beware, some posts advise to install &quot;Windows Server Essentials Media Pack&quot;, but this one requires the &quot;Windows Server Essentials Experience&quot; role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the &quot;Media Foundation&quot; should be a safer choice.</source>
          <target state="translated">Windows Server 2012+をお使いの場合、メディアDLLも不足している可能性がありますので、サーバーマネージャーに「Media Foundation」という機能をインストールしてください。注意してください。&quot;Windows Server Essentials Media Pack &quot;をインストールすることを勧めている記事がありますが、これは &quot;Windows Server Essentials Experience &quot;の役割を必要とし、この役割は(アクティブディレクトリの統合などを強制することで)Windows Serverの設定に深く影響します。</target>
        </trans-unit>
        <trans-unit id="6fc9598089c860b777e90289e0e2f79fe3e607c9" translate="yes" xml:space="preserve">
          <source>If you have previous/other manually installed (= not installed via &lt;code&gt;pip&lt;/code&gt;) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.</source>
          <target state="translated">以前の/他の手動でインストールされた（= &lt;code&gt;pip&lt;/code&gt; 経由でインストールされていない）バージョンのOpenCVがインストールされている場合（たとえば、Pythonのサイトパッケージのルートにあるcv2モジュール）、競合を避けるためにインストールする前に削除してください。</target>
        </trans-unit>
        <trans-unit id="a80aaa7111b6bdf3b0886b3354e4bf5eb8b6c669" translate="yes" xml:space="preserve">
          <source>If you need contrib modules or headless version, just change the package name (step 4 in the previous section is not needed). However, any additional CMake flags can be provided via environment variables as described in step 3 of the manual build section. If none are provided, OpenCV's CMake scripts will attempt to find and enable any suitable dependencies. Headless distributions have hard coded CMake flags which disable all possible GUI dependencies.</source>
          <target state="translated">contribモジュールやヘッドレス版が必要な場合は、パッケージ名を変更するだけです(前節のステップ4は必要ありません)。しかし、追加の CMake フラグは、マニュアルビルドセクションのステップ 3 で説明したように、環境変数を介して提供することができます。何も指定されていない場合,OpenCV の CMake スクリプトは,適切な依存関係を見つけて有効にしようとします.ヘッドレスディストリビューションには,ハードコードされた CMake フラグがあり,これは,すべての可能な GUI 依存関係を無効にします.</target>
        </trans-unit>
        <trans-unit id="48837e74de4819b04913c2d7d3cd76cdad62d560" translate="yes" xml:space="preserve">
          <source>If you still encounter the error after you have checked all the previous solutions, download &lt;a href=&quot;https://github.com/lucasg/Dependencies&quot;&gt;Dependencies&lt;/a&gt; and open the &lt;code&gt;cv2.pyd&lt;/code&gt; (located usually at &lt;code&gt;C:\Users\username\AppData\Local\Programs\Python\PythonXX\Lib\site-packages\cv2&lt;/code&gt;) file with it to debug missing DLL issues.</source>
          <target state="translated">以前のすべての解決策を確認した後もエラーが発生する場合は、&lt;a href=&quot;https://github.com/lucasg/Dependencies&quot;&gt;依存関係&lt;/a&gt;をダウンロードして、 &lt;code&gt;cv2.pyd&lt;/code&gt; （通常は &lt;code&gt;C:\Users\username\AppData\Local\Programs\Python\PythonXX\Lib\site-packages\cv2&lt;/code&gt; しているDLLの問題をデバッグするためのcv2）ファイル。</target>
        </trans-unit>
        <trans-unit id="a4880e1e81fd1273a065c5bf46f7f94e421d1078" translate="yes" xml:space="preserve">
          <source>Import the package:</source>
          <target state="translated">パッケージをインポートします。</target>
        </trans-unit>
        <trans-unit id="b571a43cbe752bc2f9bc5fb79c2c28c47b425733" translate="yes" xml:space="preserve">
          <source>In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against</source>
          <target state="translated">Linux と MacOS のビルドでは,OpenCV のオプションの C 依存関係を取得して,それに対してコンパイルします.</target>
        </trans-unit>
        <trans-unit id="1dc8bf455308db2639bcf41ed9e41878acba6091" translate="yes" xml:space="preserve">
          <source>Install the generated wheel</source>
          <target state="translated">生成されたホイールを取り付ける</target>
        </trans-unit>
        <trans-unit id="c606fdbf6de357bfc1116bac2ce0d38a13ee0476" translate="yes" xml:space="preserve">
          <source>Installation and Usage</source>
          <target state="translated">設置と使用方法</target>
        </trans-unit>
        <trans-unit id="aa636d64869928622347b0ebd93665113e78146c" translate="yes" xml:space="preserve">
          <source>Licensing</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="3d65823f4614ddda57e25c1eb5dd4642b744e50c" translate="yes" xml:space="preserve">
          <source>Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly</source>
          <target state="translated">Linux と macOS のホイールは auditwheel と delocate で変換されます。</target>
        </trans-unit>
        <trans-unit id="84a6aaa8ae799345a833b3b8583acff6e481c1f6" translate="yes" xml:space="preserve">
          <source>Linux builds run in manylinux Docker containers (CentOS 5)</source>
          <target state="translated">Linux ビルドは manylinux Docker コンテナで実行 (CentOS 5)</target>
        </trans-unit>
        <trans-unit id="8acd7c56f9e74bc54f208459154c66e000c564a4" translate="yes" xml:space="preserve">
          <source>Linux wheels are built using &lt;a href=&quot;https://github.com/pypa/python-manylinux-demo&quot;&gt;manylinux&lt;/a&gt;. These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.</source>
          <target state="translated">Linuxホイールは&lt;a href=&quot;https://github.com/pypa/python-manylinux-demo&quot;&gt;manylinux&lt;/a&gt;を使用して構築されています。これらのホイールは、古いバージョンのglibcに対して構築されているため、ほとんどのディストリビューション（GNU C標準ライブラリを使用）でそのまま使用できます。</target>
        </trans-unit>
        <trans-unit id="c1a62b5595acffff194d1cbab9f2577c207235c6" translate="yes" xml:space="preserve">
          <source>Manual builds</source>
          <target state="translated">マニュアルビルド</target>
        </trans-unit>
        <trans-unit id="70c160d16fc6657e80d9eab19d0459c7ca874a5d" translate="yes" xml:space="preserve">
          <source>Manylinux wheels</source>
          <target state="translated">マニックスホイール</target>
        </trans-unit>
        <trans-unit id="4727565afc44f086995098036df23d10dc4a1e3f" translate="yes" xml:space="preserve">
          <source>Non-headless Linux and MacOS wheels ship with &lt;a href=&quot;http://doc.qt.io/qt-5/lgpl.html&quot;&gt;Qt 5&lt;/a&gt; licensed under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;LGPLv3&lt;/a&gt;.</source>
          <target state="translated">非ヘッドレスLinuxとMacOSの輪が同梱さ&lt;a href=&quot;http://doc.qt.io/qt-5/lgpl.html&quot;&gt;Qtの5&lt;/a&gt;の下でライセンス&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;LGPLv3の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed8ed2e52bb669fdcaacf72f5c3cc54078a14a4a" translate="yes" xml:space="preserve">
          <source>OpenCV is included as submodule and the version is updated
manually by maintainers when a new OpenCV release has been made</source>
          <target state="translated">OpenCV はサブモジュールとして含まれており,OpenCV の新しいリリースが行われた際には,メンテナが手動でバージョンを更新します.</target>
        </trans-unit>
        <trans-unit id="6ed23106254f524388275919f59d1a7c80ab903b" translate="yes" xml:space="preserve">
          <source>OpenCV itself is available under &lt;a href=&quot;https://github.com/opencv/opencv/blob/master/LICENSE&quot;&gt;3-clause BSD License&lt;/a&gt;.</source>
          <target state="translated">OpenCV自体は、&lt;a href=&quot;https://github.com/opencv/opencv/blob/master/LICENSE&quot;&gt;3条項BSDライセンスの&lt;/a&gt;下で利用できます。</target>
        </trans-unit>
        <trans-unit id="fefac029e2b79731f94eb99fc8d4b3bfe3c7dfc6" translate="yes" xml:space="preserve">
          <source>OpenCV on Wheels</source>
          <target state="translated">OpenCV on Wheels</target>
        </trans-unit>
        <trans-unit id="be518637d7a809f6f83132187e62fc3645e83706" translate="yes" xml:space="preserve">
          <source>Opencv-python package (scripts in this repository) is available under MIT license.</source>
          <target state="translated">Opencv-python パッケージ (このリポジトリのスクリプト)は MIT ライセンスで利用可能です。</target>
        </trans-unit>
        <trans-unit id="908086bb08c7a1ac21b25e6d7ff63ad81addd951" translate="yes" xml:space="preserve">
          <source>Optional: on Linux use the &lt;code&gt;manylinux&lt;/code&gt; images as a build hosts if maximum portability is needed and run &lt;code&gt;auditwheel&lt;/code&gt; for the wheel after build</source>
          <target state="translated">オプション：Linuxでは、最大限の移植性が必要な場合は、 &lt;code&gt;manylinux&lt;/code&gt; イメージをビルドホストとして使用し、ビルド後にホイールの &lt;code&gt;auditwheel&lt;/code&gt; を実行します</target>
        </trans-unit>
        <trans-unit id="53d296ab5e224ca4ee0b4d1a690dfd44b841f1a7" translate="yes" xml:space="preserve">
          <source>Optional: on macOS use &lt;code&gt;delocate&lt;/code&gt; (same as &lt;code&gt;auditwheel&lt;/code&gt; but for macOS)</source>
          <target state="translated">オプション：macOSでは &lt;code&gt;delocate&lt;/code&gt; を使用します（auditwheelと同じ &lt;code&gt;auditwheel&lt;/code&gt; が、macOSの場合）</target>
        </trans-unit>
        <trans-unit id="4a05d49a8e6c5a228f104e23a0801c52969e8ded" translate="yes" xml:space="preserve">
          <source>Please note that build tools and &lt;code&gt;numpy&lt;/code&gt; are required for the build to succeed. On slow systems such as Raspberry Pi the full build may take several hours. On a 8-core Ryzen 7 3700X the build takes about 6 minutes.</source>
          <target state="translated">ビルドを成功させるには、ビルドツールと &lt;code&gt;numpy&lt;/code&gt; が必要であることに注意してください。Raspberry Piなどの低速システムでは、完全なビルドに数時間かかる場合があります。8コアのRyzen7 3700Xでは、ビルドに約6分かかります。</target>
        </trans-unit>
        <trans-unit id="36306c8036ecbf620c41451e2befd59172ccc71b" translate="yes" xml:space="preserve">
          <source>Python 3.x releases are provided for officially supported versions (not in EOL).</source>
          <target state="translated">Python 3.xのリリースは、公式にサポートされているバージョン(EOL中ではない)を対象に提供されています。</target>
        </trans-unit>
        <trans-unit id="f90f1a0d4ff492e82c95ecf2a9e61bed9e7a034c" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCVのドキュメント&lt;/a&gt;を読む</target>
        </trans-unit>
        <trans-unit id="479d8086b04986dca20311f3d645e1438e0d40ae" translate="yes" xml:space="preserve">
          <source>Rearrange OpenCV's build result, add our custom files and generate wheel</source>
          <target state="translated">OpenCV のビルド結果を再編成し,カスタムファイルを追加し,ホイールを生成します.</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">リリース</target>
        </trans-unit>
        <trans-unit id="9bebeb1391a426d579391391fc4fb6f1e895146c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;pip wheel . --verbose&lt;/code&gt;. NOTE: make sure you have the latest &lt;code&gt;pip&lt;/code&gt;, the &lt;code&gt;pip wheel&lt;/code&gt; command replaces the old &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt; command which does not support &lt;code&gt;pyproject.toml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pip wheel . --verbose&lt;/code&gt; 実行します。--verbose。注：ことを確認してくださいあなたは、最新の持っている &lt;code&gt;pip&lt;/code&gt; 、 &lt;code&gt;pip wheel&lt;/code&gt; コマンドは古い置き換える &lt;code&gt;python setup.py bdist_wheel&lt;/code&gt; サポートしていないコマンド &lt;code&gt;pyproject.toml&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d1e4ac244a004b1c83781a7bc8fee8b617c2b8ce" translate="yes" xml:space="preserve">
          <source>See the next section for more info about manual builds outside the CI environment.</source>
          <target state="translated">CI環境外でのマニュアルビルドの詳細については、次のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="1174823c443db8aeb2ae801944640c46f41d3b59" translate="yes" xml:space="preserve">
          <source>Select the correct package for your environment:</source>
          <target state="translated">ご使用の環境に合ったパッケージを選択してください。</target>
        </trans-unit>
        <trans-unit id="288b0ab2242f27457dfb41f6cab90deeacb6e3a5" translate="yes" xml:space="preserve">
          <source>Select the version which you wish to build with &lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; and &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt;: i.e. &lt;code&gt;export ENABLE_CONTRIB=1&lt;/code&gt; if you wish to build &lt;code&gt;opencv-contrib-python&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ENABLE_CONTRIB&lt;/code&gt; と &lt;code&gt;ENABLE_HEADLESS&lt;/code&gt; を使用してビルドするバージョンを選択します。つまり、opencv &lt;code&gt;opencv-contrib-python&lt;/code&gt; をビルドする場合は、 &lt;code&gt;export ENABLE_CONTRIB=1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29261adc76e88820b8310623b11636328203fe8e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;opencv-python&lt;/code&gt; version 4.3.0.*, &lt;code&gt;manylinux1&lt;/code&gt; wheels were replaced by &lt;code&gt;manylinux2014&lt;/code&gt; wheels. If your pip is too old, it will try to use the new source distribution introduced in 4.3.0.38 to manually build OpenCV because it does not know how to install &lt;code&gt;manylinux2014&lt;/code&gt; wheels. However, source build will also fail because of too old &lt;code&gt;pip&lt;/code&gt; because it does not understand build dependencies in &lt;code&gt;pyproject.toml&lt;/code&gt;. To use the new &lt;code&gt;manylinux2014&lt;/code&gt; pre-built wheels (or to build from source), your &lt;code&gt;pip&lt;/code&gt; version must be &amp;gt;= 19.3. Please upgrade &lt;code&gt;pip&lt;/code&gt; with &lt;code&gt;pip install --upgrade pip&lt;/code&gt;.</source>
          <target state="translated">以来 &lt;code&gt;opencv-python&lt;/code&gt; バージョン4.3.0。*、 &lt;code&gt;manylinux1&lt;/code&gt; の車輪が置き換えられました &lt;code&gt;manylinux2014&lt;/code&gt; ホイール。 pipが古すぎる場合、 &lt;code&gt;manylinux2014&lt;/code&gt; ホイールをインストールする方法がわからないため、4.3.0.38で導入された新しいソースディストリビューションを使用してOpenCVを手動でビルドしようとします。ただし、 &lt;code&gt;pyproject.toml&lt;/code&gt; のビルド依存関係を理解し​​ていないため、 &lt;code&gt;pip&lt;/code&gt; が古すぎるため、ソースビルドも失敗します。新しい &lt;code&gt;manylinux2014&lt;/code&gt; のビルド済みホイールを使用する（またはソースからビルドする）には、 &lt;code&gt;pip&lt;/code&gt; バージョンが19.3以上である必要があります。アップグレードしてください &lt;code&gt;pip&lt;/code&gt; と &lt;code&gt;pip install --upgrade pip&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2a2dadb62a32e8f79cce8c1815f2f8edf07c04b" translate="yes" xml:space="preserve">
          <source>Since OpenCV version 4.3.0, also source distributions are provided in PyPI. This means that if your system is not compatible with any of the wheels in PyPI, &lt;code&gt;pip&lt;/code&gt; will attempt to build OpenCV from sources.</source>
          <target state="translated">OpenCVバージョン4.3.0以降、ソースディストリビューションもPyPIで提供されています。これは、システムがPyPIのどのホイールとも互換性がない場合、 &lt;code&gt;pip&lt;/code&gt; はソースからOpenCVを構築しようとすることを意味します。</target>
        </trans-unit>
        <trans-unit id="d3d4fb9ddfc4beb11245a82e465f66d6fc2a3f97" translate="yes" xml:space="preserve">
          <source>Source distributions</source>
          <target state="translated">ソースの分布</target>
        </trans-unit>
        <trans-unit id="0d769c67cd466c08214f053cb3a7a14c68ec04dc" translate="yes" xml:space="preserve">
          <source>Starting from 4.2.0 and 3.4.9 builds the macOS Travis build environment was updated to XCode 9.4. The change effectively dropped support for older than 10.13 macOS versions.</source>
          <target state="translated">4.2.0 および 3.4.9 ビルドから、macOS Travis のビルド環境が XCode 9.4 に更新されました。この変更により、10.13 より古いバージョンの macOS のサポートが事実上削除されました。</target>
        </trans-unit>
        <trans-unit id="f64296398f9f6dcbc0c267ef640ab9cf604dd06f" translate="yes" xml:space="preserve">
          <source>Starting from 4.3.0 and 3.4.10 builds the Linux build environment was updated from &lt;code&gt;manylinux1&lt;/code&gt; to &lt;code&gt;manylinux2014&lt;/code&gt;. This dropped support for old Linux distributions.</source>
          <target state="translated">4.3.0および3.4​​.10ビルド以降、Linuxビルド環境が &lt;code&gt;manylinux1&lt;/code&gt; から &lt;code&gt;manylinux2014&lt;/code&gt; に更新されました。これにより、古いLinuxディストリビューションのサポートが終了しました。</target>
        </trans-unit>
        <trans-unit id="f8faa602b194ed58b7e194b8c29b84a215908892" translate="yes" xml:space="preserve">
          <source>Steps 1--4 are handled by &lt;code&gt;pip wheel&lt;/code&gt;.</source>
          <target state="translated">手順1〜4は、 &lt;code&gt;pip wheel&lt;/code&gt; 処理されます。</target>
        </trans-unit>
        <trans-unit id="08ba552fef49ea2b5a1c7d81969ccab1af7c640a" translate="yes" xml:space="preserve">
          <source>Supported Python versions</source>
          <target state="translated">サポートされているPythonのバージョン</target>
        </trans-unit>
        <trans-unit id="80da1c8ca729fb248bb8ebe52fdcca97b72f9b15" translate="yes" xml:space="preserve">
          <source>Test that Python can import the library and run some sanity checks</source>
          <target state="translated">Python がライブラリをインポートしてサニティチェックを実行できるかどうかをテストする</target>
        </trans-unit>
        <trans-unit id="d69382be5d67aad7b7354d52fe7ed27b44b7508a" translate="yes" xml:space="preserve">
          <source>The aim of this repository is to provide means to package each new &lt;a href=&quot;https://github.com/opencv/opencv/releases&quot;&gt;OpenCV release&lt;/a&gt; for the most used Python versions and platforms.</source>
          <target state="translated">このリポジトリの目的は、最も使用されているPythonバージョンとプラットフォーム用に新しい&lt;a href=&quot;https://github.com/opencv/opencv/releases&quot;&gt;OpenCVリリース&lt;/a&gt;をパッケージ化する手段を提供することです。</target>
        </trans-unit>
        <trans-unit id="e4b2a943392a23b93c37c9a43689d68b7d4071db" translate="yes" xml:space="preserve">
          <source>The build can be customized with environment variables. In addition to any variables that OpenCV's build accepts, we recognize:</source>
          <target state="translated">ビルドは,環境変数を用いてカスタマイズすることができます.OpenCV のビルドが受け付ける変数に加えて,以下のようなものがあります.</target>
        </trans-unit>
        <trans-unit id="228758fcec052c632058ab426f2399fac97a5cb0" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;manylinux&lt;/code&gt; images have been extended with some OpenCV dependencies. See &lt;a href=&quot;https://github.com/skvark/opencv-python/tree/master/docker&quot;&gt;Docker folder&lt;/a&gt; for more info.</source>
          <target state="translated">デフォルトの &lt;code&gt;manylinux&lt;/code&gt; イメージは、いくつかのOpenCV依存関係で拡張されています。詳細については、&lt;a href=&quot;https://github.com/skvark/opencv-python/tree/master/docker&quot;&gt;Dockerフォルダー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d5bce5c03e622c70e84bee1d8f93f421f19380a" translate="yes" xml:space="preserve">
          <source>The master branch follows OpenCV master branch releases. 3.4 branch follows OpenCV 3.4 bugfix releases.</source>
          <target state="translated">master ブランチは OpenCV の master ブランチのリリースに従います。3.4 ブランチは OpenCV 3.4 のバグフィックスリリースに従っています。</target>
        </trans-unit>
        <trans-unit id="4b07b42d28c101c8ee273097b1bf85e01e7a5d12" translate="yes" xml:space="preserve">
          <source>The packages include also other binaries. Full list of licenses can be found from &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;.</source>
          <target state="translated">パッケージには他のバイナリも含まれています。ライセンスの完全なリストは、&lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txtにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8efa7864d43e5cca9a222df760aac72cbabf98a8" translate="yes" xml:space="preserve">
          <source>The project is structured like a normal Python package with a standard &lt;code&gt;setup.py&lt;/code&gt; file.
The build process for a single entry in the build matrices is as follows (see for example &lt;code&gt;appveyor.yml&lt;/code&gt; file):</source>
          <target state="translated">プロジェクトは、標準の &lt;code&gt;setup.py&lt;/code&gt; ファイルを含む通常のPythonパッケージのように構成されています。ビルドマトリックスの単一エントリのビルドプロセスは次のとおりです（たとえば、 &lt;code&gt;appveyor.yml&lt;/code&gt; ファイルを参照）。</target>
        </trans-unit>
        <trans-unit id="d86ad4ba7983f04196af0c6309e5a99f01e132f5" translate="yes" xml:space="preserve">
          <source>There are four different packages and you should &lt;strong&gt;select only one of them&lt;/strong&gt;. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (&lt;code&gt;cv2&lt;/code&gt;). If you installed multiple different packages in the same environment, uninstall them all with &lt;code&gt;pip uninstall&lt;/code&gt; and reinstall only one package.</source>
          <target state="translated">4つの異なるパッケージがあり&lt;strong&gt;、そのうちの1つだけ&lt;/strong&gt;を&lt;strong&gt;選択&lt;/strong&gt;する必要が&lt;strong&gt;あります&lt;/strong&gt;。同じ環境に複数の異なるパッケージをインストールしないでください。プラグインアーキテクチャはありません。すべてのパッケージが同じ名前空間（ &lt;code&gt;cv2&lt;/code&gt; ）を使用します。同じ環境に複数の異なるパッケージをインストールした場合は、 &lt;code&gt;pip uninstall&lt;/code&gt; を使用してそれらをすべてアンインストールし、1つのパッケージのみを再インストールします。</target>
        </trans-unit>
        <trans-unit id="80bc18bc5d9fa1f7eb0cde0a1542a75bffecf74b" translate="yes" xml:space="preserve">
          <source>These artifacts can't be and will not be uploaded to PyPI.</source>
          <target state="translated">これらの成果物は、PyPI にアップロードすることができませんし、アップロードすることもできません。</target>
        </trans-unit>
        <trans-unit id="ae9af5ee1c7f1a7f919099882178e70f1b9c0fb2" translate="yes" xml:space="preserve">
          <source>These packages do not contain any GUI functionality. They are smaller and suitable for more restricted environments.</source>
          <target state="translated">これらのパッケージには GUI 機能は含まれていません。これらのパッケージは小さく、より制限された環境に適しています。</target>
        </trans-unit>
        <trans-unit id="7fa23e24b613ba0341eb0144512496605ab7e430" translate="yes" xml:space="preserve">
          <source>Third party package licenses are at &lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;.</source>
          <target state="translated">サードパーティのパッケージライセンスは、&lt;a href=&quot;https://github.com/skvark/opencv-python/blob/master/LICENSE-3RD-PARTY.txt&quot;&gt;LICENSE-3RD-PARTY.txtにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="da07910edd84663c51c0e8e16fc20bf16ce198c3" translate="yes" xml:space="preserve">
          <source>Use twine to upload the generated wheel to PyPI (only in release builds)</source>
          <target state="translated">twine を使って生成されたホイールを PyPI にアップロードする (リリースビルドのみ)</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">バージョニング</target>
        </trans-unit>
        <trans-unit id="b072e2244b4098070c4794dc85bc4b4abbc354ad" translate="yes" xml:space="preserve">
          <source>Windows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also &lt;a href=&quot;https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions&quot;&gt;Windows Media Feature Pack&lt;/a&gt;.</source>
          <target state="translated">Windows NおよびKNエディションには、OpenCVに必要なMedia FeaturePackは含まれていません。Windows NまたはKNエディションを使用している場合は、&lt;a href=&quot;https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions&quot;&gt;Windows Media FeaturePack&lt;/a&gt;もインストールしてください。</target>
        </trans-unit>
        <trans-unit id="a1ba26270de64803b222b63013e41ec8dc5a65e6" translate="yes" xml:space="preserve">
          <source>Wrapper package for OpenCV python bindings.</source>
          <target state="translated">OpenCV python バインディング用ラッパーパッケージ.</target>
        </trans-unit>
        <trans-unit id="e1029785330a41d62b485656887e0e78951cb780" translate="yes" xml:space="preserve">
          <source>You can also force &lt;code&gt;pip&lt;/code&gt; to build the wheels from the source distribution. Some examples:</source>
          <target state="translated">また、 &lt;code&gt;pip&lt;/code&gt; にソースディストリビューションからホイールを構築するように強制することもできます。いくつかの例：</target>
        </trans-unit>
        <trans-unit id="fb4c74623c75857933bac5606cb7b8114c3c81f0" translate="yes" xml:space="preserve">
          <source>You'll have the wheel file in the &lt;code&gt;dist&lt;/code&gt; folder and you can do with that whatever you wish</source>
          <target state="translated">あなたは &lt;code&gt;dist&lt;/code&gt; フォルダにwheelファイルを持っているでしょう、そしてあなたはそれであなたが望むものは何でもすることができます</target>
        </trans-unit>
        <trans-unit id="370f6982fa966b078349dde951ef044a609ee79f" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-contrib-python-headless&lt;/code&gt; if you need both main and contrib modules (check extra modules listing from &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;)</source>
          <target state="translated">mainモジュールとcontribモジュールの両方が必要な場合は、 &lt;code&gt;pip install opencv-contrib-python-headless&lt;/code&gt; を実行します（&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCVドキュメント&lt;/a&gt;から追加のモジュールリストを確認してください）</target>
        </trans-unit>
        <trans-unit id="a529d7d500fa8b6306f02d25d839d140374d5b71" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-contrib-python&lt;/code&gt; if you need both main and contrib modules (check extra modules listing from &lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCV documentation&lt;/a&gt;)</source>
          <target state="translated">mainモジュールとcontribモジュールの両方が必要な場合は、 &lt;code&gt;pip install opencv-contrib-python&lt;/code&gt; を実行します（&lt;a href=&quot;https://docs.opencv.org/master/&quot;&gt;OpenCVドキュメント&lt;/a&gt;から追加のモジュールリストを確認してください）</target>
        </trans-unit>
        <trans-unit id="7dfe1942eb4688bcc4c30da3e7684a6bc31aaae2" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-python-headless&lt;/code&gt; if you need only main modules</source>
          <target state="translated">メインモジュールのみが必要な場合は、 &lt;code&gt;pip install opencv-python-headless&lt;/code&gt; 実行します</target>
        </trans-unit>
        <trans-unit id="9348c7347d7f0923e0460ee59c968829333d3aff" translate="yes" xml:space="preserve">
          <source>run &lt;code&gt;pip install opencv-python&lt;/code&gt; if you need only main modules</source>
          <target state="translated">メインモジュールのみが必要な場合は、 &lt;code&gt;pip install opencv-python&lt;/code&gt; 実行します</target>
        </trans-unit>
        <trans-unit id="d551e1881ef81217e97f4db8cb2ebdb46e61ad5e" translate="yes" xml:space="preserve">
          <source>source distributions are separate entries in the build matrix</source>
          <target state="translated">ソース分布はビルド行列の別のエントリです。</target>
        </trans-unit>
        <trans-unit id="0370216d60c6160041cfb82e3574bd9dac2caa6d" translate="yes" xml:space="preserve">
          <source>tests are disabled, otherwise build time increases too much</source>
          <target state="translated">テストが無効になっている場合は、ビルド時間が長くなりすぎます。</target>
        </trans-unit>
        <trans-unit id="60cf39a5f73e0806b468683704787cdbdf29901a" translate="yes" xml:space="preserve">
          <source>there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)</source>
          <target state="translated">各ビルドの組み合わせには4つのビルドマトリックスエントリがあります:contribモジュールの有無、GUIの有無(ヘッドレス)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
