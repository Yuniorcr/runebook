<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/fbpygif/">
    <body>
      <group id="fbpygif">
        <trans-unit id="4bb923aa2c91851746b420d82668e39e60b744ee" translate="yes" xml:space="preserve">
          <source># FBpyGIF</source>
          <target state="translated">＃FBpyGIF</target>
        </trans-unit>
        <trans-unit id="816c8a05a228e2dc8b095769e81e97d57cd72b89" translate="yes" xml:space="preserve">
          <source>## Description</source>
          <target state="translated">##説明</target>
        </trans-unit>
        <trans-unit id="7e81eef3177d8f71b7892e9ecc465cf38fc4d9fa" translate="yes" xml:space="preserve">
          <source>### How to install</source>
          <target state="translated">＃＃＃ インストールする方法</target>
        </trans-unit>
        <trans-unit id="9ea91bb9a7993d00d0281cf5f6ed908dd38f20f8" translate="yes" xml:space="preserve">
          <source>### How to use</source>
          <target state="translated">＃＃＃ 使い方</target>
        </trans-unit>
        <trans-unit id="547fb134895b29e002245595465d7630a30757f6" translate="yes" xml:space="preserve">
          <source>### Tested on</source>
          <target state="translated">###テスト済み</target>
        </trans-unit>
        <trans-unit id="bc54c8539eb3a0dac84de1912acda56976fc7118" translate="yes" xml:space="preserve">
          <source>### To-do</source>
          <target state="translated">###やること</target>
        </trans-unit>
        <trans-unit id="4bd9d72befc52cb15338470d7c26a8f466969f1c" translate="yes" xml:space="preserve">
          <source>#### Features</source>
          <target state="translated">＃＃＃＃ 特徴</target>
        </trans-unit>
        <trans-unit id="af3219fea8b6bf72332ad31dc4430b50287cce11" translate="yes" xml:space="preserve">
          <source>#### Note</source>
          <target state="translated">＃＃＃＃ 注意</target>
        </trans-unit>
        <trans-unit id="e9d95720e2200efbf8a8fbe12545f8743dd08dcd" translate="yes" xml:space="preserve">
          <source>#### Problem domain</source>
          <target state="translated">####問題のドメイン</target>
        </trans-unit>
        <trans-unit id="0013ab1b287c9446bb85b809b2fbdb2e7b4e5bc3" translate="yes" xml:space="preserve">
          <source>- Archlinux (No, not with the ARM version on RPi, but the one on a vagrant VM)</source>
          <target state="translated">--Archlinux（いいえ、RPiのARMバージョンではなく、vagrant VMのバージョン）</target>
        </trans-unit>
        <trans-unit id="34a560d38d65a656c9118bf862b27925bc12d2bf" translate="yes" xml:space="preserve">
          <source>- Latest Raspbian on Raspberry pi 2 B+</source>
          <target state="translated">-Raspberry pi 2 B +の最新のRaspbian</target>
        </trans-unit>
        <trans-unit id="0b70d3d4c816a2d63972de4cac179177eecdf30a" translate="yes" xml:space="preserve">
          <source>- Library and script is written for Python &amp;gt;= 3.</source>
          <target state="translated">-ライブラリとスクリプトはPython&amp;gt; = 3用に作成されています。</target>
        </trans-unit>
        <trans-unit id="83a2391476dbcc4a7199d1edca157a76a118d1a1" translate="yes" xml:space="preserve">
          <source>- Ubuntu Mate Xenial on Odroid C2</source>
          <target state="translated">-OdroidC2上のUbuntuMate Xenial</target>
        </trans-unit>
        <trans-unit id="643537ba7930a623561db4629e48f1200221a8fd" translate="yes" xml:space="preserve">
          <source>- Utility</source>
          <target state="translated">-ユーティリティ</target>
        </trans-unit>
        <trans-unit id="47165d4d3a928a5662d85a0b2b643acab8d81438" translate="yes" xml:space="preserve">
          <source>- Writing directly to frame buffer driver needs superuser priviledge.</source>
          <target state="translated">-フレームバッファードライバーに直接書き込むには、スーパーユーザー権限が必要です。</target>
        </trans-unit>
        <trans-unit id="46e5d7d0fc16763e9727e23c312e70d70830b79a" translate="yes" xml:space="preserve">
          <source>- [ ] Add more options to program</source>
          <target state="translated">-[]プログラムにオプションを追加する</target>
        </trans-unit>
        <trans-unit id="a3ccf9e070f34c8d9e18dae6d8cbc4f20812bde8" translate="yes" xml:space="preserve">
          <source>- [ ] Background loading of next animation file to reduce loading delay between them</source>
          <target state="translated">-[]次のアニメーションファイルのバックグラウンドロードにより、それらの間のロード遅延を削減します</target>
        </trans-unit>
        <trans-unit id="764823f049045a6205efdaf6f45c1669f4603c86" translate="yes" xml:space="preserve">
          <source>- [ ] Bugfix with wrong ioctl command. `dmesg` shows `bcm2708_fb soc:fb: Unknown ioctl 0x5401`</source>
          <target state="translated">-[]間違ったioctlコマンドのバグ修正。`dmesg`は` bcm2708_fb soc：fb：Unknown ioctl0x5401`を示しています</target>
        </trans-unit>
        <trans-unit id="7b09778f62f6a2dfb35904d392aab451852b31b0" translate="yes" xml:space="preserve">
          <source>- [ ] Layer support</source>
          <target state="translated">-[]レイヤーのサポート</target>
        </trans-unit>
        <trans-unit id="f22b60e1f047e0779863dcf37be472734da50c8c" translate="yes" xml:space="preserve">
          <source>- [ ] Optimize with setting screen to RGB mode by sending mailbox message (RGB_to_BGR function will be unused)</source>
          <target state="translated">-[]メールボックスメッセージを送信して画面をRGBモードに設定して最適化します（RGB_to_BGR関数は使用されません）</target>
        </trans-unit>
        <trans-unit id="487f4352c4cd149c1043708650e08cc90f42d3d2" translate="yes" xml:space="preserve">
          <source>- [ ] Picture frame</source>
          <target state="translated">- [ ] 額縁</target>
        </trans-unit>
        <trans-unit id="b1d9d4b5740eeb1bd9baec49e9ac6dbe45323e14" translate="yes" xml:space="preserve">
          <source>- [ ] Wiki documentation about ioctl and mmap with pure Python.</source>
          <target state="translated">-[]純粋なPythonを使用したioctlとmmapに関するWikiドキュメント。</target>
        </trans-unit>
        <trans-unit id="f3fc116f44edbf5465a1abbdfde896f2529c4fa1" translate="yes" xml:space="preserve">
          <source>- [x] Checking Python version</source>
          <target state="translated">-[x] Pythonバージョンの確認</target>
        </trans-unit>
        <trans-unit id="f86ca693cab85954f2a201701b3419b85a77e0b9" translate="yes" xml:space="preserve">
          <source>- [x] Custom clearing</source>
          <target state="translated">-[x]カスタムクリアリング</target>
        </trans-unit>
        <trans-unit id="72e992f27273f4a649393cfa43cad30f0fcb52b9" translate="yes" xml:space="preserve">
          <source>- [x] Make installation script</source>
          <target state="translated">-[x]インストールスクリプトを作成します</target>
        </trans-unit>
        <trans-unit id="2bffb0117e50e75d0740e48788bfa31b1ae43927" translate="yes" xml:space="preserve">
          <source>- [x] Proper animtation time delay on every frames</source>
          <target state="translated">-[x]すべてのフレームでの適切なアニメーション時間遅延</target>
        </trans-unit>
        <trans-unit id="19696027018df765882c4dcb5e63f6b3b533a253" translate="yes" xml:space="preserve">
          <source>- [x] Shuffling</source>
          <target state="translated">-[x]シャッフル</target>
        </trans-unit>
        <trans-unit id="3e575b80528a77081d4e5fe8b0b3d8dc4f2e3ab4" translate="yes" xml:space="preserve">
          <source>- [x] Standard argument style launcher</source>
          <target state="translated">-[x]標準の引数スタイルランチャー</target>
        </trans-unit>
        <trans-unit id="d0d7077f3f0956c3e611816970724f2ce64bb441" translate="yes" xml:space="preserve">
          <source>- [x] Upload on PyPi to let it be installable with `pip install`.</source>
          <target state="translated">-[x] PyPiにアップロードして、 `pipinstall`でインストールできるようにします。</target>
        </trans-unit>
        <trans-unit id="2c3c9a4b9bbde9dec73a85f540b861e118a02f4a" translate="yes" xml:space="preserve">
          <source>- `FBpyGIF --help` to see all commands.</source>
          <target state="translated">--`FBpyGIF--help`ですべてのコマンドを表示します。</target>
        </trans-unit>
        <trans-unit id="6d3c01b4bb5d6e8476a238aec60d4467cda0519e" translate="yes" xml:space="preserve">
          <source>- `FBpyGIF -ct` will put you into color test mode. (Aware of hypnotising screen ;) )</source>
          <target state="translated">--`FBpyGIF -ct`は、カラーテストモードになります。（催眠術の画面を認識しています;））</target>
        </trans-unit>
        <trans-unit id="a0933ea304e4ad3661d58b9cff25b85ecb5a14fe" translate="yes" xml:space="preserve">
          <source>- `python3 -m FBpyGIF.util size_cat ~/pictures` will categorize pictures based on its sizes and move into folders horizontal, vertical, square under the directory you run it.</source>
          <target state="translated">--`python3 -m FBpyGIF.util size_cat〜 / pictures`は、サイズに基づいて画像を分類し、実行するディレクトリの下の水平、垂直、正方形のフォルダに移動します。</target>
        </trans-unit>
        <trans-unit id="5040ca9b95a9fd757119e7ee11cec47cfa584e77" translate="yes" xml:space="preserve">
          <source>- option1: use pip</source>
          <target state="translated">-オプション1：pipを使用する</target>
        </trans-unit>
        <trans-unit id="0620c2cbec1f1f5db6e63ad4db827ca32e2d8247" translate="yes" xml:space="preserve">
          <source>- option2: use git and setup.py</source>
          <target state="translated">-オプション2：gitとsetup.pyを使用します</target>
        </trans-unit>
        <trans-unit id="25deb8bf1a3c47ee19e33b38425a6f5cacb69cce" translate="yes" xml:space="preserve">
          <source>- prerequisite for pillow (for fresh raspbian)</source>
          <target state="translated">-枕の前提条件（新鮮なラズビアン用）</target>
        </trans-unit>
        <trans-unit id="4435f2726f203c52fb91d6e7b9d018caae4a8b5f" translate="yes" xml:space="preserve">
          <source>Frame Buffer drawing libray with GIF support for Python3</source>
          <target state="translated">Python3 で GIF をサポートした Frame Buffer 描画用の libray</target>
        </trans-unit>
        <trans-unit id="6eda95af1964a092119ae808a3a2651f2694d25d" translate="yes" xml:space="preserve">
          <source>Pure Python implemented Memory-mapped Frame Buffer mainly for GIF animation on Raspberry pi</source>
          <target state="translated">Pure Pythonは主にRaspberry pi上のGIFアニメーションのためにMemory-maped Frame Bufferを実装しました。</target>
        </trans-unit>
        <trans-unit id="052334a9c20f4ddc36d57ea4bf161a2030425c4d" translate="yes" xml:space="preserve">
          <source>Recent Raspberry pi and similar single-board computers which needs efficient way to show image usually uses [fbi](https://www.kraxel.org/blog/linux/fbida/).</source>
          <target state="translated">画像を表示するための効率的な方法を必要とする最近のRaspberry piと同様のシングルボードコンピュータは、通常、[fbi](https://www.kraxel.org/blog/linux/fbida/)を使用しています。</target>
        </trans-unit>
        <trans-unit id="0c8734834efbafd2f0dd5aff96347968066c9b1e" translate="yes" xml:space="preserve">
          <source>So I decided to make almost pure Python implemented library that is utilizing frame buffer and memory mapping.</source>
          <target state="translated">そこで、フレームバッファとメモリマッピングを活用したほぼ純粋なPython実装のライブラリを作ることにしました。</target>
        </trans-unit>
        <trans-unit id="3adc42563f2357c6c6f9a5fe03808a5c6c1c5ef9" translate="yes" xml:space="preserve">
          <source>The only a thing about 'pure' with this library is that it uses PIL library that is default installed python libarary on official Raspbian to convert image formats into raw BGR(A) and is also providing ways to use imagemagick as decompressor.</source>
          <target state="translated">このライブラリで「ピュア」なのは、公式RaspbianにデフォルトでインストールされているPython libararyというライブラリを使って画像フォーマットを生のBGR(A)に変換していることと、デコンプレッサーとしてimagemagickを使う方法を提供していることです。</target>
        </trans-unit>
        <trans-unit id="7b959b1146937a650c242d63616c5f1b6ea7fd97" translate="yes" xml:space="preserve">
          <source>There are many documents online how to mmap frame buffer with C, but none of similar are with Python, which also has mmap library by default. Actually there aren't so many examples about Python mmap library either. Hope this code helps you to understand how to ioctl and mmap not only frame buffers but also general Linux drivers with pure Python.</source>
          <target state="translated">C言語でフレームバッファをmmapする方法はオンライン上にたくさんのドキュメントがありますが、Pythonもデフォルトでmmapライブラリを持っていますので、似たようなものはありません。実際、Python の mmap ライブラリに関する例もあまり多くはありません。このコードがフレームバッファだけでなく、純粋なPythonでioctlとmmapを行う方法を理解するのに役立つことを願っています。</target>
        </trans-unit>
        <trans-unit id="a02df26e7fb7bea7dd5afeff6d60e482ec1672ea" translate="yes" xml:space="preserve">
          <source>These three are identical.</source>
          <target state="translated">この3つは同じです。</target>
        </trans-unit>
        <trans-unit id="a85745ae74d49ed0e05e8ffd40cb98672ca749de" translate="yes" xml:space="preserve">
          <source>This pack of C libraries and programs are able to show GIF image properly thorugh direct frame buffer, but in lack of function to play GIF animation files.</source>
          <target state="translated">このC言語のライブラリとプログラムのパックは、ダイレクトフレームバッファを通してGIF画像を適切に表示することができますが、GIFアニメーションファイルを再生する機能がありません。</target>
        </trans-unit>
        <trans-unit id="bbc0aff80688baeb01a5a4cb720794fe808ad957" translate="yes" xml:space="preserve">
          <source>```</source>
          <target state="translated">「」</target>
        </trans-unit>
        <trans-unit id="567ca4398233937443d73bc1a1a7417c9218347d" translate="yes" xml:space="preserve">
          <source>cd FBpyGIF</source>
          <target state="translated">cd FBpyGIF</target>
        </trans-unit>
        <trans-unit id="f863e71e5f8adb9de37e4a32c50433c85eaaaf04" translate="yes" xml:space="preserve">
          <source>git clone https://github.com/chidea/FBpyGIF</source>
          <target state="translated">git clone https://github.com/chidea/FBpyGIF</target>
        </trans-unit>
        <trans-unit id="11652d1e38cf9ca3683f86b771467e5b1513dfb1" translate="yes" xml:space="preserve">
          <source>sudo FBpyGIF [directory or file list...]</source>
          <target state="translated">sudo FBpyGIF [ディレクトリまたはファイルリスト...]</target>
        </trans-unit>
        <trans-unit id="cb2cefe463cf8c3332282ffcb80249fa7c38f603" translate="yes" xml:space="preserve">
          <source>sudo apt install git</source>
          <target state="translated">sudo apt install git</target>
        </trans-unit>
        <trans-unit id="9d89f022a28aa4ad7ec393eac5251c560ef307e4" translate="yes" xml:space="preserve">
          <source>sudo apt install libjpeg8-dev libfreetype6-dev libwebp-dev -y</source>
          <target state="translated">sudo apt install libjpeg8-dev libfreetype6-dev libwebp-dev -y</target>
        </trans-unit>
        <trans-unit id="a6422a9ece63e25da4b9ff45fea57968d5c2ffab" translate="yes" xml:space="preserve">
          <source>sudo apt install python3-pip</source>
          <target state="translated">sudo apt install python3-pip</target>
        </trans-unit>
        <trans-unit id="609a600fe2fce5c34a6db475037539de9dec9270" translate="yes" xml:space="preserve">
          <source>sudo pip3 install fbpygif</source>
          <target state="translated">sudo pip3 install fbpygif</target>
        </trans-unit>
        <trans-unit id="829add41fc3bbd80a2969aa4314acadde0b76e0e" translate="yes" xml:space="preserve">
          <source>sudo python3 -m FBpyGIF [...]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41430818b2a1cf86cb6f4bace5ee1414812bf6d7" translate="yes" xml:space="preserve">
          <source>sudo python3 -m FBpyGIF.main [...]</source>
          <target state="translated">sudo python3 -m FBpyGIF.main [....]</target>
        </trans-unit>
        <trans-unit id="a6a36aa482f8363b82abc089359d6eb2aca3c2a5" translate="yes" xml:space="preserve">
          <source>sudo python3 setup.py install</source>
          <target state="translated">sudo python3 setup.py install</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
