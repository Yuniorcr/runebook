<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/optimuspyspark/">
    <body>
      <group id="optimuspyspark">
        <trans-unit id="4d14fe8053086dacebd27af943b6b4edfd55e646" translate="yes" xml:space="preserve">
          <source>&quot;In OpenRefine, clustering refers to the operation of &quot;finding groups of different values that might be alternative representations of the same thing&quot;. For example, the two strings &quot;New York&quot; and &quot;new york&quot; are very likely to refer to the same concept and just have capitalization differences. Likewise, &quot;G&amp;ouml;del&quot; and &quot;Godel&quot; probably refer to the same person.&quot;</source>
          <target state="translated">「OpenRefineでは、クラスタリングは「同じものの代替表現である可能性のある異なる値のグループを見つける」操作を指します。たとえば、2つの文字列「NewYork」と「newyork」は同じものを参照する可能性が非常に高いです。同様に、「G&amp;ouml;del」と「Godel」はおそらく同じ人物を指します。」</target>
        </trans-unit>
        <trans-unit id="f94f3d12eb049a1a8b46cda8906673bff6ccd2bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/docs/source&quot;&gt;Documentation&lt;/a&gt; updates, enhancements, designs, or   bugfixes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/docs/source&quot;&gt;ドキュメントの&lt;/a&gt;更新、拡張、設計、またはバグ修正。</target>
        </trans-unit>
        <trans-unit id="a444d24a2bfd2d9604721453ba0dca28110f3993" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hioptimus.com/category/blog/&quot;&gt;Blogging, speaking about, or creating tutorials&lt;/a&gt;   about Optimus and its many features.</source>
          <target state="translated">&lt;a href=&quot;https://hioptimus.com/category/blog/&quot;&gt;&lt;/a&gt; Optimusとその多くの機能に関するブログ、講演、またはチュートリアルの作成。</target>
        </trans-unit>
        <trans-unit id="b39cc4550d7c3f3683a586bc3406628a6f4dcbf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://twitter.com/search?q=optimusdata&quot;&gt;Searching #optimusdata on twitter&lt;/a&gt; and helping someone else who needs help.</source>
          <target state="translated">&lt;a href=&quot;https://twitter.com/search?q=optimusdata&quot;&gt;Twitter&lt;/a&gt;で#optimusdataを検索し、助けが必要な人を助けます。</target>
        </trans-unit>
        <trans-unit id="5dfa22eb03d5e4e8b6f3cc445dc50fd1fd3ab06d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: We are working hard in version 3.0 &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/develop-3.0&quot;&gt;https://github.com/ironmussa/Optimus/tree/develop-3.0&lt;/a&gt;. in which you could use pandas, cudf, Dask, Dask/cudf as backend using a unified API.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注：バージョン3.0https &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/develop-3.0&quot;&gt;：//github.com/ironmussa/Optimus/tree/develop-3.0で&lt;/a&gt;懸命に取り組んでいます。統合APIを使用して、パンダ、cudf、Dask、Dask / cudfをバックエンドとして使用できます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f28100b7b9410799303a48f9e4b0d72d56607409" translate="yes" xml:space="preserve">
          <source>Adding unit, or functional &lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/tests&quot;&gt;tests&lt;/a&gt;</source>
          <target state="translated">ユニットの追加、または機能&lt;a href=&quot;https://github.com/ironmussa/Optimus/tree/master/tests&quot;&gt;テスト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a7fe27838c05306fa98b1a213519043a42e8dac" translate="yes" xml:space="preserve">
          <source>Also if you want to a suggestion or feature request use &lt;a href=&quot;https://github.com/ironmussa/optimus/issues&quot;&gt;https://github.com/ironmussa/optimus/issues&lt;/a&gt;</source>
          <target state="translated">また、提案や機能のリクエストが必要な場合は、&lt;a href=&quot;https://github.com/ironmussa/optimus/issues&quot;&gt;https：//github.com/ironmussa/optimus/issuesを&lt;/a&gt;使用してください</target>
        </trans-unit>
        <trans-unit id="ccffb6f8d2a70dbf4e238f9525387d7f5f4dd0e3" translate="yes" xml:space="preserve">
          <source>Also you can create a dataframe from a panda dataframe</source>
          <target state="translated">また、パンダのデータフレームからデータフレームを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="ae80296465e7b2d56ced3ba44e1d720336be89b5" translate="yes" xml:space="preserve">
          <source>Also you can create a dataframe from scratch</source>
          <target state="translated">また、スクラッチからデータフレームを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="44098a317afdcb405601a636a06f08879735e1ce" translate="yes" xml:space="preserve">
          <source>Also you can go to the &lt;a href=&quot;examples/&quot;&gt;examples&lt;/a&gt; folder to found specific notebooks about data cleaning, data munging, profiling, data enrichment and how to create ML and DL models.</source>
          <target state="translated">また、&lt;a href=&quot;examples/&quot;&gt;examples&lt;/a&gt;フォルダーに移動して、データクリーニング、データ変更、プロファイリング、データエンリッチメント、およびMLモデルとDLモデルの作成方法に関する特定のノートブックを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="9623366d47462decfeab98a941369cbf2e4cf854" translate="yes" xml:space="preserve">
          <source>Also you can load data from oracle, redshift, mysql and postgres. See &lt;em&gt;&lt;strong&gt;Database connection&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">また、oracle、redshift、mysql、postgresからデータをロードすることもできます。&lt;em&gt;&lt;strong&gt;データベース接続を&lt;/strong&gt;&lt;/em&gt;参照してください&lt;em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00527151b2a5583f94ba8fa29b10a42be77782af" translate="yes" xml:space="preserve">
          <source>Also you can save data to oracle, redshift, mysql and postgres. See &lt;em&gt;&lt;strong&gt;Database connection&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">また、データをoracle、redshift、mysql、postgresに保存することもできます。&lt;em&gt;&lt;strong&gt;データベース接続を&lt;/strong&gt;&lt;/em&gt;参照してください&lt;em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c01e50396b269c6b07d0382253ca889245cd82f0" translate="yes" xml:space="preserve">
          <source>Apache 2.0 &amp;copy;</source>
          <target state="translated">Apache2.0&amp;copy;</target>
        </trans-unit>
        <trans-unit id="6d0002dbcf3f5e3f42c123efb8183554561a5a48" translate="yes" xml:space="preserve">
          <source>Apache Spark created a library called MLlib where they coded great algorithms for Machine Learning. Now
with the ML library we can take advantage of the Dataframe API and its optimization to create Machine Learning Pipelines easily.</source>
          <target state="translated">Apache SparkはMLlibと呼ばれるライブラリを作成し、そこでは機械学習のための素晴らしいアルゴリズムをコーディングしていました。今ではMLライブラリを使って、Dataframe APIとその最適化を利用して、簡単に機械学習パイプラインを作成することができます。</target>
        </trans-unit>
        <trans-unit id="b64899a2bdc5b82518d0aa1d53407cb40ea64271" translate="yes" xml:space="preserve">
          <source>Apache Spark&amp;gt;= 2.4.0</source>
          <target state="translated">Apache Spark&amp;gt; = 2.4.0</target>
        </trans-unit>
        <trans-unit id="143b54ceee9211cfe2dd5cba55d7902dc55fc52d" translate="yes" xml:space="preserve">
          <source>Argenis Leon</source>
          <target state="translated">アルジェニス・レオン</target>
        </trans-unit>
        <trans-unit id="6fd1df7dfa78cabba847e0dde68d6d658f085ff6" translate="yes" xml:space="preserve">
          <source>Backers</source>
          <target state="translated">バッカーズ</target>
        </trans-unit>
        <trans-unit id="d9952600de28d03ed79e04ced140a6c129cacd6b" translate="yes" xml:space="preserve">
          <source>Besides check the &lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/ironmussa/Optimus/blob/master/docs/cheatsheet/optimus_cheat_sheet.html&quot;&gt;Cheat Sheet&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/ironmussa/Optimus/blob/master/docs/cheatsheet/optimus_cheat_sheet.html&quot;&gt;チートシートを&lt;/a&gt;確認する以外に</target>
        </trans-unit>
        <trans-unit id="75c9c06ddcaae908df34f4e711c15b1a3a80558d" translate="yes" xml:space="preserve">
          <source>Besides histograms and frequency plots you also have scatter plots and box plots. All powered by Apache by pyspark</source>
          <target state="translated">ヒストグラムや度数プロットの他に、散布図やボックスプロットもあります。pysparkのApacheがすべての機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="9f148a70dea99c79a6a47ae323868f352202d0ae" translate="yes" xml:space="preserve">
          <source>Cleaning and Processing</source>
          <target state="translated">洗浄・加工</target>
        </trans-unit>
        <trans-unit id="d8c3d53c906d2dd170a8596124fbf2f967344d48" translate="yes" xml:space="preserve">
          <source>Clustering Strings</source>
          <target state="translated">文字列のクラスタリング</target>
        </trans-unit>
        <trans-unit id="22ca0897fc6982e71f87e7929084c43a6ab7a29a" translate="yes" xml:space="preserve">
          <source>Contributing to Optimus</source>
          <target state="translated">オプティマスへの貢献</target>
        </trans-unit>
        <trans-unit id="f2635b7b0ed569c022b022ba6007e92017d47267" translate="yes" xml:space="preserve">
          <source>Contributions go far beyond pull requests and commits. We are very happy to receive any kind of contributions</source>
          <target state="translated">貢献はプルリクエストやコミットをはるかに超えています。どのような種類の貢献でも歓迎します。</target>
        </trans-unit>
        <trans-unit id="8086adb5746e504bbe3902757baf1389e8c9f958" translate="yes" xml:space="preserve">
          <source>Contributors:</source>
          <target state="translated">投稿者:おーぷんさん。</target>
        </trans-unit>
        <trans-unit id="c1174865dc451c21b895e949b274d7ea1e9b90ef" translate="yes" xml:space="preserve">
          <source>Core Team</source>
          <target state="translated">コアチーム</target>
        </trans-unit>
        <trans-unit id="52cf7f8d5b2139a264e0c1c8417d153748adbf8a" translate="yes" xml:space="preserve">
          <source>Create dataframes</source>
          <target state="translated">データフレームの作成</target>
        </trans-unit>
        <trans-unit id="253deb0b4c3f25b5d0a8ab69ab15a0a5e8a1bbf9" translate="yes" xml:space="preserve">
          <source>Custom functions</source>
          <target state="translated">カスタム機能</target>
        </trans-unit>
        <trans-unit id="fd5611faec913bc587e10f784ae2c907e58313ca" translate="yes" xml:space="preserve">
          <source>Data enrichment</source>
          <target state="translated">データの充実</target>
        </trans-unit>
        <trans-unit id="099dccef26c430d514bb04516655f1fc1871153b" translate="yes" xml:space="preserve">
          <source>Data profiling</source>
          <target state="translated">データプロファイリング</target>
        </trans-unit>
        <trans-unit id="56b1f3c77e89f25574edd3a96c9fb62795f51729" translate="yes" xml:space="preserve">
          <source>Database connection</source>
          <target state="translated">データベース接続</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">ドキュメント</target>
        </trans-unit>
        <trans-unit id="48722e5be3bba84358ac63702a8027f8a1c4e657" translate="yes" xml:space="preserve">
          <source>Even though this task is not extremely hard, it is not easy. The way most Machine Learning models work on Spark
are not straightforward, and they need lots of feature engineering to work. That's why we created the feature engineering
section inside Optimus.</source>
          <target state="translated">このタスクは非常に難しいものではありませんが、簡単なものではありません。ほとんどの機械学習モデルがSpark上で動作する方法は一筋縄ではいかず、動作させるためには多くのフィーチャーエンジニアリングが必要です。そのため、Optimusの中にフィーチャーエンジニアリングセクションを作りました。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">フィードバック</target>
        </trans-unit>
        <trans-unit id="81d491964033aed7e6a234630d82d03105881aaf" translate="yes" xml:space="preserve">
          <source>Feedback is what drive Optimus future, so please take a couple of minutes to help shape the Optimus' Roadmap:  &lt;a href=&quot;http://bit.ly/optimus_survey&quot;&gt;http://bit.ly/optimus_survey&lt;/a&gt;</source>
          <target state="translated">フィードバックはOptimusの将来を推進するものなので、Optimusのロードマップの作成に役立つように数分かかります：&lt;a href=&quot;http://bit.ly/optimus_survey&quot;&gt;http&lt;/a&gt;： //bit.ly/optimus_survey</target>
        </trans-unit>
        <trans-unit id="3ec72eab087de454a1888a04353532ab6bdd7c4a" translate="yes" xml:space="preserve">
          <source>For dates data types Optimus can give you extra information</source>
          <target state="translated">日付のデータ型については、Optimusが追加情報を提供することができます。</target>
        </trans-unit>
        <trans-unit id="6c91cea6cde8e0b6f747e53b935e7a8e4507af64" translate="yes" xml:space="preserve">
          <source>For example you can load data from a url, transform and apply some predefined cleaning functions:</source>
          <target state="translated">例えば、URLからデータをロードしたり、変換したり、定義済みのクリーニング関数を適用したりすることができます。</target>
        </trans-unit>
        <trans-unit id="bd03d183677c1ca394c4df4b71ed497f9131247e" translate="yes" xml:space="preserve">
          <source>For more informacion see this:
&lt;a href=&quot;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&quot;&gt;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth&quot;&gt;https&lt;/a&gt;：//github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depthを参照して ください。</target>
        </trans-unit>
        <trans-unit id="5ae14b6c0988ac95bdedf36da2d4ed80ae6c5b89" translate="yes" xml:space="preserve">
          <source>Get the ouliers using tukey</source>
          <target state="translated">トゥッキーを使ってオーリエをゲット</target>
        </trans-unit>
        <trans-unit id="acea85e5fa226bf29f03f18bbe6b583c782bda4e" translate="yes" xml:space="preserve">
          <source>Handling Spark jars, packages and repositories</source>
          <target state="translated">Sparkのjar、パッケージ、リポジトリを扱う</target>
        </trans-unit>
        <trans-unit id="351dbcc3ae6252820c722dc1b3b0fcc3a6d0bfe6" translate="yes" xml:space="preserve">
          <source>Handling column output</source>
          <target state="translated">カラム出力の処理</target>
        </trans-unit>
        <trans-unit id="73a0f5a1427e7ea76b5b97f1d724bcc512ed2f47" translate="yes" xml:space="preserve">
          <source>Helping others on &lt;a href=&quot;https://img.shields.io/discord/579030865468719104.svg&quot;&gt;Discord&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://img.shields.io/discord/579030865468719104.svg&quot;&gt;不和で&lt;/a&gt;他の人を助ける</target>
        </trans-unit>
        <trans-unit id="225c92a02117e16bc8a9084b75440c31379706cf" translate="yes" xml:space="preserve">
          <source>Here a quote from its site:</source>
          <target state="translated">ここでは、そのサイトからの引用です。</target>
        </trans-unit>
        <trans-unit id="e043b4221f71c79974691a407d97e9e2dc852f0d" translate="yes" xml:space="preserve">
          <source>Here you apply a function to the &quot;billingid&quot; column. Sum 1 and 2 to the current column value. All powered by Pandas UDF</source>
          <target state="translated">ここでは、「billingid」カラムに関数を適用します。1と2を現在の列の値に合計します。すべての動力源は Pandas UDF</target>
        </trans-unit>
        <trans-unit id="95ad823182c8526f5d6a850e990a354c316fb467" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;list&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;list&lt;/strong&gt; is passed in &lt;strong&gt;out_cols&lt;/strong&gt; Optimus will output every input column in the respective output column</source>
          <target state="translated">場合は&lt;strong&gt;、リストが&lt;/strong&gt;渡され&lt;strong&gt;input_cols&lt;/strong&gt;と&lt;strong&gt;リストが&lt;/strong&gt;渡され&lt;strong&gt;out_cols&lt;/strong&gt;意志出力オプティマスそれぞれの出力列内のすべての入力欄を</target>
        </trans-unit>
        <trans-unit id="3b4928a399e8e1305ef7347ccaad8060349b441d" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;list&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;out_cols&lt;/strong&gt; Optimus will concatenate the list with every element in the list to create a new column name with the output</source>
          <target state="translated">場合は&lt;strong&gt;、リストが&lt;/strong&gt;渡され&lt;strong&gt;input_cols&lt;/strong&gt;と&lt;strong&gt;文字列が&lt;/strong&gt;渡され&lt;strong&gt;out_cols&lt;/strong&gt;オプティマスは出力で新しい列名を作成するには、リスト内のすべての要素のリストを連結します</target>
        </trans-unit>
        <trans-unit id="112348424b2fbe5ef93be2c463be508902fcb017" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and &lt;strong&gt;output_cols&lt;/strong&gt; is not defined the result from the operation is going to be saved in the same input column</source>
          <target state="translated">&lt;strong&gt;文字列&lt;/strong&gt;が&lt;strong&gt;input_colsに&lt;/strong&gt;渡され、&lt;strong&gt;output_cols&lt;/strong&gt;が定義されていない場合、操作の結果は同じ入力列に保存されます。</target>
        </trans-unit>
        <trans-unit id="2f67aeb095042bddf7e1402e86ac60fffc91ea72" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;input_cols&lt;/strong&gt; and a &lt;strong&gt;string&lt;/strong&gt; is passed to &lt;strong&gt;output_cols&lt;/strong&gt; the output is going to be saved in the output column</source>
          <target state="translated">場合は&lt;strong&gt;、文字列が&lt;/strong&gt;渡され&lt;strong&gt;input_cols&lt;/strong&gt;と&lt;strong&gt;文字列が&lt;/strong&gt;渡され&lt;strong&gt;output_cols&lt;/strong&gt;出力は出力列内に保存されようとしています</target>
        </trans-unit>
        <trans-unit id="af08144db1541754ca59a16a0f56ce793cf0f34a" translate="yes" xml:space="preserve">
          <source>If you want to apply a Column Expression use &lt;code&gt;apply_expr()&lt;/code&gt; like this. In this case we pass an argument 10 to divide the actual column value</source>
          <target state="translated">列式を適用する場合は、次のように &lt;code&gt;apply_expr()&lt;/code&gt; を使用します。この場合、引数10を渡して、実際の列の値を除算します。</target>
        </trans-unit>
        <trans-unit id="9b4de938a4e9fe687dc20ff2f6af9ac174587912" translate="yes" xml:space="preserve">
          <source>In your terminal just type  &lt;code&gt;pip install optimuspyspark&lt;/code&gt;</source>
          <target state="translated">ターミナルで「 &lt;code&gt;pip install optimuspyspark&lt;/code&gt; 入力するだけ です</target>
        </trans-unit>
        <trans-unit id="605d82caa33e3e8cfa09db3546bb282d9af04f98" translate="yes" xml:space="preserve">
          <source>Installation (pip):</source>
          <target state="translated">設置(パイプ)。</target>
        </trans-unit>
        <trans-unit id="a00f74a53d5eedf3a1cd6d0d801d4fb76b93de5c" translate="yes" xml:space="preserve">
          <source>Into this</source>
          <target state="translated">この中に</target>
        </trans-unit>
        <trans-unit id="a87058f0a1f68dfc71b04f8a59e58dc31002f1f0" translate="yes" xml:space="preserve">
          <source>Keycolision</source>
          <target state="translated">キーコリジョン</target>
        </trans-unit>
        <trans-unit id="485999aadd7f73d21af416e165768fff9d4110c3" translate="yes" xml:space="preserve">
          <source>Let's load a &quot;big&quot; dataset</source>
          <target state="translated">大きな」データセットを読み込んでみよう</target>
        </trans-unit>
        <trans-unit id="df0ea4a1b61af9dc45f0e4e89319efc67f28b7c2" translate="yes" xml:space="preserve">
          <source>Let's load a tiny dataset we can enrich</source>
          <target state="translated">充実させることができる小さなデータセットをロードしてみよう</target>
        </trans-unit>
        <trans-unit id="de13bf1ab0b419f34cb1b3b43e094c84009a42db" translate="yes" xml:space="preserve">
          <source>License:</source>
          <target state="translated">ライセンス。</target>
        </trans-unit>
        <trans-unit id="ffa42d904be90d9cc75f8ce5b379c6fd7af8c23f" translate="yes" xml:space="preserve">
          <source>Loading data</source>
          <target state="translated">データの読み込み</target>
        </trans-unit>
        <trans-unit id="f97db96938c3125697cc24ed503988866799c024" translate="yes" xml:space="preserve">
          <source>Machine Learning</source>
          <target state="translated">機械学習</target>
        </trans-unit>
        <trans-unit id="6d650f6e78d279358a1452410fcada035f1d3021" translate="yes" xml:space="preserve">
          <source>Machine Learning is one of the last steps, and the goal for most Data Science WorkFlows.</source>
          <target state="translated">機械学習は最後のステップの一つであり、ほとんどのデータサイエンスワークフローのゴールです。</target>
        </trans-unit>
        <trans-unit id="1786c24866d6ea107cece1d5a4392b1aebef85a5" translate="yes" xml:space="preserve">
          <source>Nearest Neighbor Methods</source>
          <target state="translated">ニアレストネイバー法</target>
        </trans-unit>
        <trans-unit id="5b0015426b1a5705cc29013903b274ea6b63f863" translate="yes" xml:space="preserve">
          <source>Note that you can use Optimus functions and Spark functions(&lt;code&gt;.WithColumn()&lt;/code&gt;) and all the df function availables in a Spark Dataframe at the same time. To know about all the Optimus functionality please go to this &lt;a href=&quot;examples/&quot;&gt;notebooks&lt;/a&gt;</source>
          <target state="translated">Optimus関数とSpark関数（ &lt;code&gt;.WithColumn()&lt;/code&gt; ）、およびSparkデータフレームで使用可能なすべてのdf関数を同時に使用できることに注意してください。Optimusのすべての機能について知るには、この&lt;a href=&quot;examples/&quot;&gt;ノートブックに&lt;/a&gt;アクセスしてください。</target>
        </trans-unit>
        <trans-unit id="c4d639e2b3de5627d2201837d4055c423ecdfe8d" translate="yes" xml:space="preserve">
          <source>Now Optimus can load data in csv, json, parquet, avro, excel from a local file or URL.</source>
          <target state="translated">Optimusは、ローカルファイルまたはURLからcsv、json、parquet、avro、excelのデータを読み込むことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">数値</target>
        </trans-unit>
        <trans-unit id="0e07a46de25f6377b1ffdf9cab12b584b61b5a1f" translate="yes" xml:space="preserve">
          <source>One of the best &quot;tree&quot; models for machine learning is Random Forest. What about creating a RF model with just
one line? With Optimus is really easy.</source>
          <target state="translated">機械学習に最適な「木」モデルの一つにランダムフォレストがあります。1行だけでRFモデルを作るのはどうでしょうか?Optimusを使えば本当に簡単です。</target>
        </trans-unit>
        <trans-unit id="49a082f76ace2f07c67d69b56065dada5d841f72" translate="yes" xml:space="preserve">
          <source>Optimus V2 was created to make data cleaning a breeze. The API was designed to be super easy to newcomers and very familiar for people that comes from Pandas.
Optimus expands the Spark DataFrame functionality adding .rows and .cols attributes.</source>
          <target state="translated">Optimus V2は、データクリーニングを簡単にするために作られました。APIは新規参入者には簡単に、Pandasから来た人には親しみやすいように設計されています。OptimusはSpark DataFrameの機能を拡張し、.rowsと.cols属性を追加しました。</target>
        </trans-unit>
        <trans-unit id="0a049d1036baf67d842cc2c328333eb70491379c" translate="yes" xml:space="preserve">
          <source>Optimus comes with a powerful and unique data profiler. Besides basic and advance stats like min, max, kurtosis, mad etc,
it also let you know what type of data has every column. For example if a string column have string, integer, float, bool, date Optimus can give you an unique overview about your data.
Just run &lt;code&gt;df.profile(&quot;*&quot;)&lt;/code&gt; to profile all the columns. For more info about the profiler please go to this &lt;a href=&quot;./examples/profiler.ipynb&quot;&gt;notebook&lt;/a&gt;.</source>
          <target state="translated">Optimusには、強力で独自のデータプロファイラーが付属しています。min、max、kurtosis、madなどの基本的な統計と高度な統計に加えて、すべての列に含まれるデータの種類もわかります。たとえば、文字列列にstring、integer、float、bool、dateがある場合、Optimusはデータに関する独自の概要を提供します。 &lt;code&gt;df.profile(&quot;*&quot;)&lt;/code&gt; を実行するだけで、すべての列のプロファイルが作成されます。プロファイラーの詳細については、この&lt;a href=&quot;./examples/profiler.ipynb&quot;&gt;ノートブックに&lt;/a&gt;アクセスしてください。</target>
        </trans-unit>
        <trans-unit id="4f13d53339395bd7da551c6ddc5593c384dca018" translate="yes" xml:space="preserve">
          <source>Optimus has a tiny API so you can use any plotting library. For example, you can use &lt;code&gt;df.cols.scatter()&lt;/code&gt;, &lt;code&gt;df.cols.frequency()&lt;/code&gt;, &lt;code&gt;df.cols.boxplot()&lt;/code&gt; or &lt;code&gt;df.cols.hist()&lt;/code&gt; to output a JSON that you can process to adapt the data to any plotting library.</source>
          <target state="translated">Optimusには小さなAPIがあるため、任意のプロットライブラリを使用できます。たとえば、 &lt;code&gt;df.cols.scatter()&lt;/code&gt; 、 &lt;code&gt;df.cols.frequency()&lt;/code&gt; 、 &lt;code&gt;df.cols.boxplot()&lt;/code&gt; 、または &lt;code&gt;df.cols.hist()&lt;/code&gt; を使用して、データを適応させるために処理できるJSONを出力できます。任意のプロットライブラリ。</target>
        </trans-unit>
        <trans-unit id="bd5b27005e74eb22a1ec115deb958daa573b0c03" translate="yes" xml:space="preserve">
          <source>Optimus have handy tools to connect to databases and extract informacion. Optimus can handle &lt;strong&gt;redshift&lt;/strong&gt;, &lt;strong&gt;postgres&lt;/strong&gt;, &lt;strong&gt;oracle&lt;/strong&gt; and &lt;strong&gt;mysql&lt;/strong&gt;</source>
          <target state="translated">Optimusには、データベースに接続して情報を抽出するための便利なツールがあります。オプティマスは扱うことができる&lt;strong&gt;赤方偏移&lt;/strong&gt;、&lt;strong&gt;postgresの&lt;/strong&gt;、&lt;strong&gt;オラクル&lt;/strong&gt;や&lt;strong&gt;MySQLを&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="749dba28b73aa7dd9669a93e1def006267e04a03" translate="yes" xml:space="preserve">
          <source>Optimus implements some funciton to cluster Strings. We get graet inspiration from OpenRefine</source>
          <target state="translated">Optimusは文字列をクラスタ化する機能を実装しています。OpenRefineからインスピレーションを得ています。</target>
        </trans-unit>
        <trans-unit id="741a6fa4f68a91ec5d4eaf75967c8df131fcbc63" translate="yes" xml:space="preserve">
          <source>Optimus is the missing framework for cleaning and pre-processing data in a distributed fashion with pyspark.</source>
          <target state="translated">Optimusは、pysparkを使ってデータのクリーニングや前処理を分散して行うための不足しているフレームワークです。</target>
        </trans-unit>
        <trans-unit id="5de1be387bf1294d6b0e044a93d57ea7e355e271" translate="yes" xml:space="preserve">
          <source>Optimus is the missing framework to profile, clean, process and do ML in a distributed fashion using Apache Spark(PySpark).</source>
          <target state="translated">Optimusは、Apache Spark(PySpark)を使って分散型でMLをプロファイリング、クリーンアップ、処理、実行するために必要なフレームワークです。</target>
        </trans-unit>
        <trans-unit id="2391c08fc249856b1c54e1ed7752ff81621c2f54" translate="yes" xml:space="preserve">
          <source>Outliers</source>
          <target state="translated">外れ値</target>
        </trans-unit>
        <trans-unit id="9c7f732592c60c73495ab8cfa2ee876c5d38a75b" translate="yes" xml:space="preserve">
          <source>Plots</source>
          <target state="translated">プロット</target>
        </trans-unit>
        <trans-unit id="6daf9b127f4e79e79d38466b13f3d7eb1cf895de" translate="yes" xml:space="preserve">
          <source>Processing Dates</source>
          <target state="translated">処理日</target>
        </trans-unit>
        <trans-unit id="a6bebceebc7168fb5c3c23eb88206fb5594f59d5" translate="yes" xml:space="preserve">
          <source>Profiler Speed</source>
          <target state="translated">プロファイラの速度</target>
        </trans-unit>
        <trans-unit id="3d5e552928a7cf576c5c54d1d0cee15508a078ab" translate="yes" xml:space="preserve">
          <source>Python&amp;gt;=3.6</source>
          <target state="translated">Python&amp;gt; = 3.6</target>
        </trans-unit>
        <trans-unit id="3a8fb719124ec75125cf20f89fb39b569e7f38ea" translate="yes" xml:space="preserve">
          <source>README.md corrections or redesigns.</source>
          <target state="translated">README.mdの修正または再設計。</target>
        </trans-unit>
        <trans-unit id="517ee675246bfcfecf9d244c2c99d3de71305378" translate="yes" xml:space="preserve">
          <source>Remove the outliers using tukey</source>
          <target state="translated">tukeyを使用して外れ値を除去</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">必要条件</target>
        </trans-unit>
        <trans-unit id="98a0b85afae07ada377061c63a7066485e66ebb5" translate="yes" xml:space="preserve">
          <source>Saving Data</source>
          <target state="translated">データの保存</target>
        </trans-unit>
        <trans-unit id="4a6821a915e3cc10e41229edf6d22998283c456b" translate="yes" xml:space="preserve">
          <source>So lets see the prediction compared with the actual label:</source>
          <target state="translated">では、実際のラベルと比較した予測を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b1574dadc6e954073386e178cfa6d1573b49b451" translate="yes" xml:space="preserve">
          <source>Spark has multiple ways to transform your data like rdd, Column Expression, udf and pandas udf. In Optimus we created the &lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;apply_expr&lt;/code&gt; which handles all the implementation complexity.</source>
          <target state="translated">Sparkには、rdd、列式、udf、pandasudfなどのデータを変換する複数の方法があります。Optimus &lt;code&gt;apply()&lt;/code&gt; 、すべての実装の複雑さを処理するapply（）と &lt;code&gt;apply_expr&lt;/code&gt; を作成しました。</target>
        </trans-unit>
        <trans-unit id="d8b7e7f32ed35848c9cc60c69053a5983fa5b6d7" translate="yes" xml:space="preserve">
          <source>Spelling or grammar fixes.</source>
          <target state="translated">スペルや文法の修正。</target>
        </trans-unit>
        <trans-unit id="82cebd0cac45c28817fad5367f93a5bced93dca0" translate="yes" xml:space="preserve">
          <source>Sponsors</source>
          <target state="translated">スポンサー</target>
        </trans-unit>
        <trans-unit id="4b2e320b95c30a01a67dc4b759deab8d882230a0" translate="yes" xml:space="preserve">
          <source>Start Optimus</source>
          <target state="translated">スタートオプティマス</target>
        </trans-unit>
        <trans-unit id="f392cfce3b6819a0d1e67ff0575fb76872a1d1df" translate="yes" xml:space="preserve">
          <source>The rf_model variable contains the Random Forest model for analysis.</source>
          <target state="translated">rf_model変数には、分析のためのランダムフォレストモデルが含まれています。</target>
        </trans-unit>
        <trans-unit id="1609b07c3671906dfb737f735df050f37e036e97" translate="yes" xml:space="preserve">
          <source>This will create a DataFrame with the predictions of the Random Forest model.</source>
          <target state="translated">これにより、ランダムフォレストモデルの予測値を持つDataFrameが作成されます。</target>
        </trans-unit>
        <trans-unit id="80244c81a374a8ac242c48a3f2feb46a072fb40f" translate="yes" xml:space="preserve">
          <source>To launch a live notebook server to test optimus using binder or Colab, click on one of the following badges:</source>
          <target state="translated">binderやColabを使用してオプティマスをテストするためのライブノートサーバーを起動するには、以下のバッジのいずれかをクリックします。</target>
        </trans-unit>
        <trans-unit id="cc890e574a48085553a3c66f5e7b0b8905329e56" translate="yes" xml:space="preserve">
          <source>To return to HTML just:</source>
          <target state="translated">HTMLに戻るには</target>
        </trans-unit>
        <trans-unit id="dc1087570abb61a7c2645a8f8aee8a3fc7f02982" translate="yes" xml:space="preserve">
          <source>Triaging GitHub issues -- especially determining whether an issue still persists or is reproducible.</source>
          <target state="translated">GitHub の課題のトリアージ --特に、その課題がまだ残っているのか、再現性があるのかを判断します。</target>
        </trans-unit>
        <trans-unit id="47e5418187692bc55e287967965e23498ba6daf2" translate="yes" xml:space="preserve">
          <source>Using other plotting libraries</source>
          <target state="translated">他のプロッティングライブラリの使用</target>
        </trans-unit>
        <trans-unit id="0710dbbf09341848f24211b2bca05cdf5b4274b8" translate="yes" xml:space="preserve">
          <source>With .table() you have a beautifull way to show your data. You have extra information like column number, column data type and marked white spaces</source>
          <target state="translated">.table()を使うと、データを美しく表示することができます。列番号、列のデータタイプ、マークされたホワイトスペースなどの追加情報があります。</target>
        </trans-unit>
        <trans-unit id="22e0ffabd067ed0d7f66a8e811a63e8aea610b5a" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;relative_error&lt;/strong&gt; and &lt;strong&gt;approx_count&lt;/strong&gt; params you can control how some operations are caculated so you can speedup the profiling in case is needed.</source>
          <target state="translated">&lt;strong&gt;relative_error&lt;/strong&gt;と&lt;strong&gt;approx_count&lt;/strong&gt;のparams、あなたが必要な場合には、プロファイリングを高速化することができますので、いくつかの操作がcaculated方法を制御することができます。</target>
        </trans-unit>
        <trans-unit id="49936fd43ebe6f75a550101929b0cc757d457f4e" translate="yes" xml:space="preserve">
          <source>With Optimus you can handle how the output column from a transformation in going to be handled.</source>
          <target state="translated">Optimusを使用すると、変換からの出力列をどのように処理するかを扱うことができます。</target>
        </trans-unit>
        <trans-unit id="f55abcf262823440a1dc4af596c98253fd4cc28e" translate="yes" xml:space="preserve">
          <source>With optimus is easy to loading jars, packages and repos. You can init optimus/spark like</source>
          <target state="translated">optimusを使用すると、jar、パッケージ、reposをロードするのは簡単です。以下のようにoptimus/sparkをinitすることができます。</target>
        </trans-unit>
        <trans-unit id="3ccddab032707039d30ed3327be0108ba91269a1" translate="yes" xml:space="preserve">
          <source>You also can use an already created Spark session:</source>
          <target state="translated">また、すでに作成されたSparkセッションを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="882e46634ed62075c97171db09004fcbe03a5990" translate="yes" xml:space="preserve">
          <source>You can also use z_score, modified_z_score or mad</source>
          <target state="translated">また、z_score、modified_z_score、mad</target>
        </trans-unit>
        <trans-unit id="06bb78db3d29fc8fe670096f1cee9381f788b9a5" translate="yes" xml:space="preserve">
          <source>You can change the table output back to ascii if you wish</source>
          <target state="translated">必要に応じてテーブルの出力をアスキーに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="419fea641f757fb8fcb9827d945874bba97c6714" translate="yes" xml:space="preserve">
          <source>You can connect to any external API to enrich your data using Optimus. Optimus uses MongoDB to download the data and then merge it with the Spark Dataframe. You need to install MongoDB</source>
          <target state="translated">任意の外部APIに接続して、Optimusを使ってデータを充実させることができます。OptimusはMongoDBを使ってデータをダウンロードし、Spark Dataframeにマージします。MongoDBをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="5aa8511f4fc3788fadeb7cb558d000ed370beae8" translate="yes" xml:space="preserve">
          <source>You can go to the 10 minutes to Optimus &lt;a href=&quot;https://github.com/ironmussa/Optimus/blob/master/examples/10_min_from_spark_to_pandas_with_optimus.ipynb&quot;&gt;notebook&lt;/a&gt; where you can find the basic to start working.</source>
          <target state="translated">作業を開始するための基本を見つけることができるOptimus&lt;a href=&quot;https://github.com/ironmussa/Optimus/blob/master/examples/10_min_from_spark_to_pandas_with_optimus.ipynb&quot;&gt;ノートブックに&lt;/a&gt;10分行くことができます。</target>
        </trans-unit>
        <trans-unit id="87efdfdf5b9ad3c37371f183937665401245fd4f" translate="yes" xml:space="preserve">
          <source>You can output to the notebook or as an image</source>
          <target state="translated">ノートに出力したり、画像として出力することができます。</target>
        </trans-unit>
        <trans-unit id="d075e4329646b313f2d5700676201fe1e7c0a4cc" translate="yes" xml:space="preserve">
          <source>You transform this</source>
          <target state="translated">あなたはこれを変換します。</target>
        </trans-unit>
        <trans-unit id="9f7c47dbf6344c8e10018f45814af56dd70d87d6" translate="yes" xml:space="preserve">
          <source>[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;Become a backer&lt;/a&gt;] and get your image on our README on Github with a link to your site.</source>
          <target state="translated">[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;後援者になる&lt;/a&gt;]そしてあなたのサイトへのリンクとともにGithubのREADMEであなたの画像を入手してください。</target>
        </trans-unit>
        <trans-unit id="10bb1eb46cdc42726b6a25926b04ff3ea0e8eaf7" translate="yes" xml:space="preserve">
          <source>[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;Become a sponsor&lt;/a&gt;] and get your image on our README on Github with a link to your site.</source>
          <target state="translated">[&lt;a href=&quot;https://opencollective.com/optimus#backer&quot;&gt;スポンサーになる&lt;/a&gt;]そしてあなたのサイトへのリンクとともにGithubのREADMEであなたの画像を入手してください。</target>
        </trans-unit>
        <trans-unit id="ceb250e61e71c8fad372f47251f5fd3302e96b5b" translate="yes" xml:space="preserve">
          <source>approx_count: Use &lt;code&gt;approx_count_distinct&lt;/code&gt; or &lt;code&gt;countDistinct&lt;/code&gt;. &lt;code&gt;approx_count_distinct&lt;/code&gt; is faster</source>
          <target state="translated">approx_count： &lt;code&gt;approx_count_distinct&lt;/code&gt; または &lt;code&gt;countDistinct&lt;/code&gt; を使用します。 &lt;code&gt;approx_count_distinct&lt;/code&gt; が速い</target>
        </trans-unit>
        <trans-unit id="0941a7de527ef8d70925bf8e132d2d331c9b9ca7" translate="yes" xml:space="preserve">
          <source>including:</source>
          <target state="translated">を含む。</target>
        </trans-unit>
        <trans-unit id="63e989a6f377267dc402891b3cade81ae30309dc" translate="yes" xml:space="preserve">
          <source>relative_error: Relative Error for quantile discretizer calculation. 1 is Faster, 0 Slower</source>
          <target state="translated">relative_error.分位離散化計算の相対誤差を指定します。1は速く、0は遅くなります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
