<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/ipwb/">
    <body>
      <group id="ipwb">
        <trans-unit id="06e2345659ef91547b398c738861507f6102e187" translate="yes" xml:space="preserve">
          <source>...for example, from the root of the ipwb repository:</source>
          <target state="translated">...たとえば、ipwbリポジトリのルートから：</target>
        </trans-unit>
        <trans-unit id="2ee77b1984d30adfe92c847867331d0951e1f7d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Peer-To-Peer Permanence of Web Archives&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Webアーカイブのピアツーピアの永続性&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e2d3bf70b8cb34a7fca9a6659848dc363edbcb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ipwb/indexer.py&lt;/strong&gt; - archival indexing script that takes the path to a WARC input, extracts the HTTP headers, HTTP payload (response body), and relevant parts of the WARC-response record header from the WARC specified and creates byte string representations. The indexer then pushes the byte strings into IPFS using a locally running IPFS daemon then creates a &lt;a href=&quot;https://github.com/oduwsdl/ORS/wiki/CDXJ&quot;&gt;CDXJ&lt;/a&gt; file with this metadata for replay.py.</source>
          <target state="translated">&lt;strong&gt;ipwb / indexer.py&lt;/strong&gt; -WARC入力へのパスを&lt;strong&gt;取得&lt;/strong&gt;し、指定されたWARCからHTTPヘッダー、HTTPペイロード（応答本文）、およびWARC応答レコードヘッダーの関連部分を抽出し、バイト文字列表現を作成するアーカイブインデックス作成スクリプト。次に、インデクサーは、ローカルで実行されているIPFSデーモンを使用してバイト文字列をIPFSにプッシュし、&lt;a href=&quot;https://github.com/oduwsdl/ORS/wiki/CDXJ&quot;&gt;replay.pyの&lt;/a&gt;このメタデータを使用してCDXJファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="be88dde89885f711e34d52ef22c677825420a1f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ipwb/replay.py&lt;/strong&gt; - rudimentary replay script to resolve requests for archival content contained in IPFS for replay in the browser.</source>
          <target state="translated">&lt;strong&gt;ipwb /replay.py-&lt;/strong&gt;ブラウザで再生するためにIPFSに含まれるアーカイブコンテンツのリクエストを解決するための基本的な再生スクリプト。</target>
        </trans-unit>
        <trans-unit id="b7d077dd899c7d229f99e0de196434fc49e5b60b" translate="yes" xml:space="preserve">
          <source>A pictorial representation of the ipwb indexing and replay process:</source>
          <target state="translated">ipwbのインデキシングとリプレイのプロセスを絵で表現したもの。</target>
        </trans-unit>
        <trans-unit id="55bd269e3afb67bd2dfaea54fa7300aa6464fc66" translate="yes" xml:space="preserve">
          <source>A pre-built Docker image is made available that can be run as following:</source>
          <target state="translated">事前にビルドされたDockerイメージが用意されており、以下のように実行することができます。</target>
        </trans-unit>
        <trans-unit id="65e25ef42cdbe3ba21bab8361ce5779085964d2c" translate="yes" xml:space="preserve">
          <source>An archival replay system is also included with ipwb to re-experience the content disseminated to IPFS. A CDXJ index needs to be provided and used by the ipwb replay system by specifying the path of the index file as a parameter to the replay system:</source>
          <target state="translated">ipwb には、IPFS に配信されたコンテンツを再体験するためのアーカイブ再生システムも含まれています。ipwb再生システムでは、再生システムへのパラメータとしてインデックスファイルのパスを指定して、CDXJインデックスを提供して利用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c5050f193a520cf9c7432406f6fcc4e6838a12ba" translate="yes" xml:space="preserve">
          <source>An important aspect of archival replay systems is rewriting various resource references for proper memento reconstruction so that they are dereferenced properly from the archive from around the same datetime as of the root memento and not from the live site (in which case the resource might have changed or gone missing). Many archival replay systems perform server-side rewriting, but it has its limitations when URIs are generated using JavaScript. To handle this we use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service Worker&lt;/a&gt; for rerouting requests on the client-side when they are dereferenced to avoid any server-side rewiring. For this, we have implemented a separate library, &lt;a href=&quot;https://oduwsdl.github.io/Reconstructive/&quot;&gt;Reconstructive&lt;/a&gt;, which is reusable and extendable by any archival replay system.</source>
          <target state="translated">アーカイブ再生システムの重要な側面は、適切なメメント再構築のためにさまざまなリソース参照を書き換えて、ライブサイトからではなく、ルートメメントとほぼ同じ日時からアーカイブから適切に参照解除されるようにすることです（この場合、リソースが変更されている可能性があります）または行方不明になりました）。多くのアーカイブ再生システムはサーバー側の書き換えを実行しますが、JavaScriptを使用してURIを生成する場合には制限があります。これに対処するために、我々は、使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;サービスの労働者を&lt;/a&gt;彼らがどのサーバー側の再配線を避けるために逆参照されている場合、クライアント側の要求を再ルーティングするために。このために、アーカイブ再生システムで再利用および拡張できる別のライブラリ&lt;a href=&quot;https://oduwsdl.github.io/Reconstructive/&quot;&gt;Reconstructive&lt;/a&gt;を実装しました。</target>
        </trans-unit>
        <trans-unit id="15f1ed0e14f5d5b28c49a63f8b4fd0c61ce3582b" translate="yes" xml:space="preserve">
          <source>Another important feature of archival replays is the inclusion of an archival banner in mementos. The purpose of an archival banner is to highlight that a replayed page is a memento and not a live page, to provide metadata about the memento and the archive, and to facilitate additional interactivity. Many archival banners used in different web archival replay systems are obtrusive in nature and have issues like style leakage. To eliminate both of these issues we have implemented a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;Custom HTML Element&lt;/a&gt;, &lt;a href=&quot;https://oduwsdl.github.io/Reconstructive/docs/class/Reconstructive/reconstructive-banner.js%7EReconstructiveBanner.html&quot;&gt;&amp;lt;reconstructive-banner&amp;gt;&lt;/a&gt; as part of the &lt;a href=&quot;https://oduwsdl.github.io/Reconstructive/&quot;&gt;Reconstructive&lt;/a&gt; library and used in the ipwb.</source>
          <target state="translated">アーカイブリプレイのもう1つの重要な機能は、記念品にアーカイブバナーが含まれていることです。アーカイブバナーの目的は、再生されたページがライブページではなくメメントであることを強調し、メメントとアーカイブに関するメタデータを提供し、追加の対話性を促進することです。さまざまなWebアーカイブ再生システムで使用される多くのアーカイブバナーは、本質的に目障りであり、スタイルのリークなどの問題があります。我々が実施しているこれらの問題の両方解消するために、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;カスタムHTML要素&lt;/a&gt;、&lt;a href=&quot;https://oduwsdl.github.io/Reconstructive/docs/class/Reconstructive/reconstructive-banner.js%7EReconstructiveBanner.html&quot;&gt;&amp;lt;再建-バナーを&amp;gt;&lt;/a&gt;の一環として&lt;a href=&quot;https://oduwsdl.github.io/Reconstructive/&quot;&gt;再建&lt;/a&gt;ライブラリとipwbで使用します。</target>
        </trans-unit>
        <trans-unit id="6d7af7007f339e84fc4c2de5df5b67bacbc49164" translate="yes" xml:space="preserve">
          <source>By default, the image building process also performs tests, so it might take a while to build the image. It ensures that an image will not be created with failing tests. However, it is possible to skip tests by supplying a build-arg &lt;code&gt;--build-arg SKIPTEST=true&lt;/code&gt; as illustrated below:</source>
          <target state="translated">デフォルトでは、イメージ構築プロセスもテストを実行するため、イメージの構築に時間がかかる場合があります。これにより、テストが失敗してもイメージが作成されないことが保証されます。ただし、以下に示すように、build-arg &lt;code&gt;--build-arg SKIPTEST=true&lt;/code&gt; を指定することで、テストをスキップできます。</target>
        </trans-unit>
        <trans-unit id="81c8fe621b0eccc77a08435bab3cb65dac5b3b28" translate="yes" xml:space="preserve">
          <source>Citing Project</source>
          <target state="translated">引用プロジェクト</target>
        </trans-unit>
        <trans-unit id="9ecea0dacc72c9dda1b28914a57568d8febec652" translate="yes" xml:space="preserve">
          <source>For conventional usage, the latest release of ipwb can be installed using pip:</source>
          <target state="translated">従来の使い方では、最新リリースのipwbをpipでインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">ヘルプ</target>
        </trans-unit>
        <trans-unit id="18cda72bbdc6519fd8818fe9fad8a2413f6c02c6" translate="yes" xml:space="preserve">
          <source>If the host folder structure is something other than &lt;code&gt;/some/path/{warc,cdxj,ipfs}&lt;/code&gt; then these volumes need to be mounted separately.</source>
          <target state="translated">ホストフォルダ構造が &lt;code&gt;/some/path/{warc,cdxj,ipfs}&lt;/code&gt; 場合、これらのボリュームは個別にマウントする必要があります。</target>
        </trans-unit>
        <trans-unit id="333fa6880824b1a0a04ba574a034b122afc8c90f" translate="yes" xml:space="preserve">
          <source>If you encounter a conflict with the default API port of 5001 when starting the daemon, running the following prior to launching the daemon will change the API port to access to one of your choosing (here, shown to be 5002):</source>
          <target state="translated">デーモンの起動時に5001のデフォルトAPIポートとの競合が発生した場合、デーモンを起動する前に以下を実行すると、APIポートを変更して選択したものにアクセスします(ここでは、5002として示されています)。</target>
        </trans-unit>
        <trans-unit id="4a455c1218dcb14bbda9fd52343b4dd39b78406a" translate="yes" xml:space="preserve">
          <source>In a separate terminal session (or the same if you started the daemon in the background), instruct ipwb to push contents of a WARC file into IPFS and create an index of records:</source>
          <target state="translated">別のターミナルセッション(またはバックグラウンドでデーモンを起動した場合も同様)で、WARCファイルの内容をIPFSにプッシュし、レコードのインデックスを作成するようにipwbに指示します。</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">インデックス</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="19357182557718b1e0bf5808b04030cce9490a3b" translate="yes" xml:space="preserve">
          <source>InterPlanetary Wayback (ipwb)</source>
          <target state="translated">惑星間ウェイバック</target>
        </trans-unit>
        <trans-unit id="a09fd116f6d0b1bba040a6d00e3aebf1c4153e62" translate="yes" xml:space="preserve">
          <source>InterPlanetary Wayback (ipwb) facilitates permanence and collaboration in web archives by disseminating the contents of &lt;a href=&quot;http://www.iso.org/iso/catalogue_detail.htm?csnumber=44717&quot;&gt;WARC&lt;/a&gt; files into the IPFS network. &lt;a href=&quot;https://ipfs.io/&quot;&gt;IPFS&lt;/a&gt; is a peer-to-peer content-addressable file system that inherently allows deduplication and facilitates opt-in replication. ipwb splits the header and payload of WARC response records before disseminating into IPFS to leverage the deduplication, builds a &lt;a href=&quot;https://github.com/oduwsdl/ORS/wiki/CDXJ&quot;&gt;CDXJ index&lt;/a&gt; with references to the IPFS hashes returned, and combines the header and payload from IPFS at the time of replay.</source>
          <target state="translated">InterPlanetary Wayback（ipwb）は、&lt;a href=&quot;http://www.iso.org/iso/catalogue_detail.htm?csnumber=44717&quot;&gt;WARC&lt;/a&gt;ファイルのコンテンツをIPFSネットワークに配布することにより、Webアーカイブでの永続性とコラボレーションを促進します。&lt;a href=&quot;https://ipfs.io/&quot;&gt;IPFS&lt;/a&gt;は、本質的に重複排除を可能にし、オプトインレプリケーションを容易にするピアツーピアのコンテンツアドレス可能なファイルシステムです。ipwbは、重複排除を活用するためにIPFSに配布する前にWARC応答レコードのヘッダーとペイロードを分割し、返されたIPFSハッシュへの参照を使用して&lt;a href=&quot;https://github.com/oduwsdl/ORS/wiki/CDXJ&quot;&gt;CDXJインデックス&lt;/a&gt;を作成し、再生時にIPFSからのヘッダーとペイロードを結合します。</target>
        </trans-unit>
        <trans-unit id="7cad164ec83177b70c542f7c54b11491ad6801a6" translate="yes" xml:space="preserve">
          <source>InterPlanetary Wayback (ipwb) requires Python 3.7+. ipwb can also be used with Docker (&lt;a href=&quot;#user-content-using-docker&quot;&gt;see below&lt;/a&gt;).</source>
          <target state="translated">InterPlanetary Wayback（ipwb）にはPython3.7以降が必要です。ipwbはDockerでも使用できます（&lt;a href=&quot;#user-content-using-docker&quot;&gt;以下を参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c944df46aa48f9ad2f50c18c6b540f3e5f369013" translate="yes" xml:space="preserve">
          <source>InterPlanetary Wayback (ipwb): Web Archive integration with IPFS</source>
          <target state="translated">InterPlanetary Wayback (ipwb).IPFS とウェブアーカイブの統合</target>
        </trans-unit>
        <trans-unit id="ccb4eba544ad27b675212b67ab6f3e9dedb62fef" translate="yes" xml:space="preserve">
          <source>InterPlanetary Wayback primarily consists of two scripts:</source>
          <target state="translated">InterPlanetary Waybackは主に2つのスクリプトで構成されています。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="89690ac571dcf4c9c40c842efed3f11171d07b29" translate="yes" xml:space="preserve">
          <source>MIT</source>
          <target state="translated">マサチューセッツ工科大学</target>
        </trans-unit>
        <trans-unit id="50ebc49c256d22e38e0443852b867f8ee5d31bc6" translate="yes" xml:space="preserve">
          <source>Mat Kelly, Sawood Alam, Michael L. Nelson, and Michele C. Weigle. &lt;strong&gt;InterPlanetary Wayback: Peer-To-Peer Permanence of Web Archives&lt;/strong&gt;. In &lt;em&gt;Proceedings of the 20th International Conference on Theory and Practice of Digital Libraries&lt;/em&gt;, pages 411&amp;ndash;416, Hamburg, Germany, June 2016.</source>
          <target state="translated">マット・ケリー、サウッド・アラム、マイケル・L・ネルソン、ミケーレ・C・ワイグル。&lt;strong&gt;InterPlanetary Wayback：Webアーカイブのピアツーピア永続性&lt;/strong&gt;。で&lt;em&gt;電子図書館の理論と実践上の第20回国際会議の議事録&lt;/em&gt;、ページ411-416、ハンブルク、ドイツ、2016年6月。</target>
        </trans-unit>
        <trans-unit id="280fcb3c140ac32a4c80dc5f2e2cff8af750f0f9" translate="yes" xml:space="preserve">
          <source>Once started, the replay system's web interface can be accessed through a web browser, e.g., &lt;a href=&quot;http://localhost:5000/&quot;&gt;http://localhost:5000/&lt;/a&gt; by default.</source>
          <target state="translated">開始すると、再生システムのWebインターフェイスには、デフォルトで&lt;a href=&quot;http://localhost:5000/&quot;&gt;http：// localhost：5000 /などの&lt;/a&gt;Webブラウザからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b8442dc4d1ec0bad64eee08dd76a30bc77df4064" translate="yes" xml:space="preserve">
          <source>Project History</source>
          <target state="translated">プロジェクトの歴史</target>
        </trans-unit>
        <trans-unit id="4cbc9b79dabc02dd5ba1414234564bd4645b9735" translate="yes" xml:space="preserve">
          <source>Replaying</source>
          <target state="translated">再生</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">セットアップ</target>
        </trans-unit>
        <trans-unit id="bd10f47230c2a9b0135b0cb7ec8955bb7d1fd138" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://fox.cs.vt.edu/wadl2016.html&quot;&gt;Web Archiving and Digital Libraries (WADL) 2016 workshop&lt;/a&gt; in Newark, NJ in June 2016.</source>
          <target state="translated">&lt;a href=&quot;http://fox.cs.vt.edu/wadl2016.html&quot;&gt;ウェブアーカイブとデジタル・ライブラリ（WADL）2016ワークショップ&lt;/a&gt;2016年6月ではニューアーク、ニュージャージー州インチ</target>
        </trans-unit>
        <trans-unit id="2dcf353afbd930f92a87457f283f80190ecc6d9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://netpreserve.org/wac2017/&quot;&gt;International Internet Preservation Consortium (IIPC) Web Archiving Conference (WAC) 2017&lt;/a&gt; in London, England in June 2017.</source>
          <target state="translated">&lt;a href=&quot;http://netpreserve.org/wac2017/&quot;&gt;国際インターネット保存コンソーシアム（IIPC）のWebアーカイブ会議（WAC）2017&lt;/a&gt; 2017年6月ではロンドン、イングランドインチ</target>
        </trans-unit>
        <trans-unit id="22524760ddfa238b1e7b190816c2d288595cdca1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.jcdl2016.org/&quot;&gt;Joint Conference on Digital Libraries 2016&lt;/a&gt; in Newark, NJ in June 2016.</source>
          <target state="translated">&lt;a href=&quot;http://www.jcdl2016.org/&quot;&gt;デジタル図書館2016に関する合同会議&lt;/a&gt;2016年6月ではニューアーク、ニュージャージー州インチ</target>
        </trans-unit>
        <trans-unit id="9689ff1ffcfaa553c88669971142168667abb46f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.tpdl2016.org/&quot;&gt;Theory and Practice on Digital Libraries (TPDL) 2016&lt;/a&gt; in Hannover, Germany in September 2016.</source>
          <target state="translated">2016年9月にドイツのハノーバーで&lt;a href=&quot;http://www.tpdl2016.org/&quot;&gt;開催されたデジタルライブラリ（TPDL）2016&lt;/a&gt;の理論と実践。</target>
        </trans-unit>
        <trans-unit id="de4a1718ce4cc57be02a114a4c1efd22d9a60518" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://archivesunleashed.com/call-for-participation-au4/&quot;&gt;Archives Unleashed 4.0: Web Archive Datathon&lt;/a&gt; in London, England in June 2017.</source>
          <target state="translated">&lt;a href=&quot;https://archivesunleashed.com/call-for-participation-au4/&quot;&gt;4.0解き放たアーカイブ：WebアーカイブDatathon&lt;/a&gt; 2017年6月にロンドンで、イングランド。</target>
        </trans-unit>
        <trans-unit id="39bd5c9fcdf6fdbe4f5e2c3bffff1bd953af7b33" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.decentralizedweb.net/&quot;&gt;Decentralized Web Summit 2018's&lt;/a&gt; IPFS Lab Day in San Francisco, CA in August 2018.</source>
          <target state="translated">&lt;a href=&quot;https://www.decentralizedweb.net/&quot;&gt;分散型のWebサミット2018の&lt;/a&gt;2018年8月で、サンフランシスコ、カリフォルニア州IPFSラボの日。</target>
        </trans-unit>
        <trans-unit id="8ea766ccac44e1cafd8e8d5427f8ed1f7fbe3887" translate="yes" xml:space="preserve">
          <source>The InterPlanetary Filesystem (ipfs) daemon must be installed and running before starting ipwb. See the &lt;a href=&quot;https://ipfs.io/docs/install/&quot;&gt;Install IPFS&lt;/a&gt; page to accomplish this. In the future, we hope to make this more automated. Once ipfs is installed, start the daemon:</source>
          <target state="translated">ipwbを開始する前に、InterPlanetary Filesystem（ipfs）デーモンをインストールして実行する必要があります。これを行うには、「&lt;a href=&quot;https://ipfs.io/docs/install/&quot;&gt;IPFS&lt;/a&gt;のインストール」ページを参照してください。将来的には、これをより自動化することを望んでいます。ipfsがインストールされたら、デーモンを起動します。</target>
        </trans-unit>
        <trans-unit id="0b0c4d17c42a40a64af9420d43d0b3a4020a42c9" translate="yes" xml:space="preserve">
          <source>The container will run an IPFS daemon, index a sample WARC file, and replay it using the newly created index. It will take a few seconds to be ready, then the replay will be accessible at &lt;a href=&quot;http://localhost:5000/&quot;&gt;http://localhost:5000/&lt;/a&gt; with a sample archived page.</source>
          <target state="translated">コンテナはIPFSデーモンを実行し、サンプルWARCファイルにインデックスを付け、新しく作成されたインデックスを使用して再生します。準備が整うまでに数秒かかります。その後、サンプルのアーカイブページを使用して&lt;a href=&quot;http://localhost:5000/&quot;&gt;http：// localhost：5000 /&lt;/a&gt;からリプレイにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="303f24ccd6cd043206250bc3946f6ea7c6da15c6" translate="yes" xml:space="preserve">
          <source>The ipwb indexer partitions the WARC into WARC Records and extracts the WARC Response headers, HTTP response headers, and the HTTP response bodies (payloads). Relevant information is extracted from the WARC Response headers, temporary byte strings are created for the HTTP response headers and payload, and these two bytes strings are pushed into IPFS. The resulting CDXJ data is written to &lt;code&gt;STDOUT&lt;/code&gt; by default but can be redirected to a file, e.g.,</source>
          <target state="translated">ipwbインデクサーは、WARCをWARCレコードに分割し、WARC応答ヘッダー、HTTP応答ヘッダー、およびHTTP応答本文（ペイロード）を抽出します。関連情報がWARC応答ヘッダーから抽出され、HTTP応答ヘッダーとペイロード用に一時的なバイト文字列が作成され、これらの2バイトの文字列がIPFSにプッシュされます。結果のCDXJデータはデフォルトで &lt;code&gt;STDOUT&lt;/code&gt; に書き込まれますが、ファイルにリダイレクトできます。</target>
        </trans-unit>
        <trans-unit id="479e52e8f617f9038c9b21e771e6d3296a9bb24b" translate="yes" xml:space="preserve">
          <source>The latest development version containing changes not yet released can be installed from source:</source>
          <target state="translated">未公開の変更点を含む最新の開発版をソースからインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="627d22102b7377e70070b81ef3943caa143f921a" translate="yes" xml:space="preserve">
          <source>This repo contains the code for integrating &lt;a href=&quot;http://www.iso.org/iso/catalogue_detail.htm?csnumber=44717&quot;&gt;WARC&lt;/a&gt;s and &lt;a href=&quot;https://ipfs.io/&quot;&gt;IPFS&lt;/a&gt; as developed at the &lt;a&gt;Archives Unleashed: Web Archive Hackathon&lt;/a&gt; in Toronto, Canada in March 2016. The project was also presented at:</source>
          <target state="translated">このリポジトリには、2016年3月にカナダのトロントで開催された&lt;a&gt;Archives Unleashed：Web Archive Hackathon&lt;/a&gt;で開発された&lt;a href=&quot;http://www.iso.org/iso/catalogue_detail.htm?csnumber=44717&quot;&gt;WARC&lt;/a&gt;と&lt;a href=&quot;https://ipfs.io/&quot;&gt;IPFS&lt;/a&gt;を統合するためのコードが含まれています。このプロジェクトは、次の場所でも発表されました。</target>
        </trans-unit>
        <trans-unit id="57c0feda619e4bd8b71a80886c53aa2ff3920eed" translate="yes" xml:space="preserve">
          <source>To build an image from the source, run the following command from the directory where the source code is checked out. The name of the locally built image could be anything, but we use &lt;code&gt;oduwsdl/ipwb&lt;/code&gt; to be consistent with the above commands.</source>
          <target state="translated">ソースからイメージを作成するには、ソースコードがチェックアウトされているディレクトリから次のコマンドを実行します。ローカルで作成されたイメージの名前は何でも &lt;code&gt;oduwsdl/ipwb&lt;/code&gt; んが、上記のコマンドと一貫性を保つためにoduwsdl / ipwbを使用します。</target>
        </trans-unit>
        <trans-unit id="2d66e0a72f236d5c3e76da62ac908d47aab1cdd7" translate="yes" xml:space="preserve">
          <source>To index and replay your own WARC file, bind mount your data folders inside the container using &lt;code&gt;-v&lt;/code&gt; (or &lt;code&gt;--volume&lt;/code&gt;) flag and run commands accordingly. The provided docker image has designated &lt;code&gt;/data&lt;/code&gt; directory, inside which there are &lt;code&gt;warc&lt;/code&gt;, &lt;code&gt;cdxj&lt;/code&gt;, and &lt;code&gt;ipfs&lt;/code&gt; folders where host folders can be mounted separately or as a single mount point at the parent &lt;code&gt;/data&lt;/code&gt; directory. Assuming that the host machine has a &lt;code&gt;/path/to/data&lt;/code&gt; folder under which there are &lt;code&gt;warc&lt;/code&gt;, &lt;code&gt;cdxj&lt;/code&gt;, and &lt;code&gt;ipfs&lt;/code&gt; folders and a WARC file at &lt;code&gt;/path/to/data/warc/custom.warc.gz&lt;/code&gt;.</source>
          <target state="translated">独自のWARCファイルにインデックスを付けて再生するには、 &lt;code&gt;-v&lt;/code&gt; （または &lt;code&gt;--volume&lt;/code&gt; ）フラグを使用してコンテナ内のデータフォルダをバインドマウントし、それに応じてコマンドを実行します。提供されたDockerイメージには指定された &lt;code&gt;/data&lt;/code&gt; ディレクトリがあり、その中に &lt;code&gt;warc&lt;/code&gt; 、 &lt;code&gt;cdxj&lt;/code&gt; 、および &lt;code&gt;ipfs&lt;/code&gt; フォルダーがあり、ホストフォルダーを個別にマウントすることも、親 &lt;code&gt;/data&lt;/code&gt; ディレクトリに単一のマウントポイントとしてマウントすることもできます。ホストマシンに &lt;code&gt;/path/to/data&lt;/code&gt; フォルダーがあり、その下に &lt;code&gt;warc&lt;/code&gt; 、 &lt;code&gt;cdxj&lt;/code&gt; 、および &lt;code&gt;ipfs&lt;/code&gt; フォルダーがあり、WARCファイルが &lt;code&gt;/path/to/data/warc/custom.warc.gz&lt;/code&gt; にあると仮定します。</target>
        </trans-unit>
        <trans-unit id="f6877d0f5d9b7e6b6fe72694ce71c6e26a52b6be" translate="yes" xml:space="preserve">
          <source>To run it under a domain name other than &lt;code&gt;localhost&lt;/code&gt;, the easiest approach is to use a reverse proxy that supports HTTPS. The replay system utilizes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service Worker&lt;/a&gt; for URL rerouting/rewriting to prevent &lt;a href=&quot;http://ws-dl.blogspot.com/2012/10/2012-10-10-zombies-in-archives.html&quot;&gt;live leakage (zombies)&lt;/a&gt;. However, for security reason many web browsers have mandated HTTPS for the Service Worker API with only exception if the domain is &lt;code&gt;localhost&lt;/code&gt;. &lt;a href=&quot;https://caddyserver.com/&quot;&gt;Caddy Server&lt;/a&gt; and &lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt; can be used as a reverse-proxy server and are very easy to setup. They come with built-in HTTPS support and manage (install and update) TLS certificates transparently and automatically from &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let's Encrypt&lt;/a&gt;. However, any web server proxy that has HTTPS support on the front-end will work. To make ipwb replay aware of the proxy, use &lt;code&gt;--proxy&lt;/code&gt; or &lt;code&gt;-P&lt;/code&gt; flag to supply the proxy URL. This way the replay will yield the supplied proxy URL as a prefix when generating various fully qualified domain name (FQDN) URIs or absolute URIs (for example, those in the TimeMap or Link header) instead of the default &lt;code&gt;http://localhost:5000&lt;/code&gt;. This can be necessary when the service is running in a private network or a container and only exposed via a reverse-proxy. Suppose a reverse-proxy server is running and ready to forward all traffic on the &lt;code&gt;https://ipwb.example.com&lt;/code&gt; to the ipwb replay server then the replay can be started as following:</source>
          <target state="translated">&lt;code&gt;localhost&lt;/code&gt; 以外のドメイン名で実行するには、HTTPSをサポートするリバースプロキシを使用するのが最も簡単な方法です。再生システムは、URLの再ルーティング/書き換えに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;Service Worker&lt;/a&gt;を利用して、&lt;a href=&quot;http://ws-dl.blogspot.com/2012/10/2012-10-10-zombies-in-archives.html&quot;&gt;ライブリーク（ゾンビ）&lt;/a&gt;を防ぎます。ただし、セキュリティ上の理由から、ドメインが &lt;code&gt;localhost&lt;/code&gt; の場合を除いて、多くのWebブラウザはService WorkerAPIにHTTPSを義務付けています。&lt;a href=&quot;https://caddyserver.com/&quot;&gt;Caddy Server&lt;/a&gt;と&lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt;は、リバースプロキシサーバーとして使用でき、セットアップが非常に簡単です。組み込みのHTTPSサポートが付属しており、&lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let's Encrypt&lt;/a&gt;からTLS証明書を透過的かつ自動的に管理（インストールおよび更新）します。。ただし、フロントエンドでHTTPSをサポートしているWebサーバープロキシはすべて機能します。 ipwb replayにプロキシを認識させるには、 &lt;code&gt;--proxy&lt;/code&gt; または &lt;code&gt;-P&lt;/code&gt; フラグを使用してプロキシURLを指定します。このように、リプレイは、デフォルトの &lt;code&gt;http://localhost:5000&lt;/code&gt; の代わりに、さまざまな完全修飾ドメイン名（FQDN）URIまたは絶対URI（たとえば、TimeMapまたはLinkヘッダー内のもの）を生成するときに、指定されたプロキシURLをプレフィックスとして生成します。。これは、サービスがプライベートネットワークまたはコンテナで実行されており、リバースプロキシ経由でのみ公開されている場合に必要になることがあります。リバースプロキシサーバーが実行中で、 &lt;code&gt;https://ipwb.example.com&lt;/code&gt; //ipwb.example.com上のすべてのトラフィックをipwbリプレイサーバーに転送する準備ができているとすると、リプレイは次のように開始できます。</target>
        </trans-unit>
        <trans-unit id="57ffd16df72d6eef36ddb2fae5f71afca197b424" translate="yes" xml:space="preserve">
          <source>Usage of sub-commands in ipwb can be accessed through providing the &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; flag, like any of the below.</source>
          <target state="translated">ipwbでのサブコマンドの使用には、以下のいずれかのように、 &lt;code&gt;-h&lt;/code&gt; または &lt;code&gt;--help&lt;/code&gt; フラグを指定することでアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f1e887ad301db2838308801456e01403dfd27811" translate="yes" xml:space="preserve">
          <source>Using Docker</source>
          <target state="translated">Dockerを使用して</target>
        </trans-unit>
        <trans-unit id="b6df9757d187b07028baf8d27cd4b57a78abedbe" translate="yes" xml:space="preserve">
          <source>We have numerous publications related to this project, but the most significant and primary one was published in TPDL 2016. (&lt;a href=&quot;http://www.cs.odu.edu/%7Emkelly/papers/2016_tpdl_ipwb.pdf&quot;&gt;Read the PDF&lt;/a&gt;)</source>
          <target state="translated">このプロジェクトに関連する出版物は数多くありますが、最も重要で主要な出版物はTPDL 2016で出版されました。（&lt;a href=&quot;http://www.cs.odu.edu/%7Emkelly/papers/2016_tpdl_ipwb.pdf&quot;&gt;PDFを読む&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="daba946216be60ed41b22da33cd78990c628860e" translate="yes" xml:space="preserve">
          <source>ipwb also supports using an IPFS hash or any HTTP location as the source of the CDXJ:</source>
          <target state="translated">ipwb は CDXJ のソースとして IPFS ハッシュや任意の HTTP ロケーションの使用もサポートしています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
