<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/jsonselect/">
    <body>
      <group id="jsonselect">
        <trans-unit id="01ef8cf6c349285bee9cb8fdcccc03f6d89a037d" translate="yes" xml:space="preserve">
          <source>## Project status</source>
          <target state="translated">##プロジェクトのステータス</target>
        </trans-unit>
        <trans-unit id="6acd5424dab7b92c7ebe61c9fc818dbcdc0ea6ea" translate="yes" xml:space="preserve">
          <source>## Usage</source>
          <target state="translated">＃＃ 使用法</target>
        </trans-unit>
        <trans-unit id="967881cf19aa47aae787fe9ce1cb130e967c7a3e" translate="yes" xml:space="preserve">
          <source>### Full Usage</source>
          <target state="translated">###フル使用</target>
        </trans-unit>
        <trans-unit id="8ea08731dbd9ac66e106e01521f5fb98bd0b3768" translate="yes" xml:space="preserve">
          <source>##Tests</source>
          <target state="translated">##テスト</target>
        </trans-unit>
        <trans-unit id="cfab321be91e8cdb30d9b94e5e5dc0b19f22f35c" translate="yes" xml:space="preserve">
          <source>#jsonselect.py</source>
          <target state="translated">＃jsonselect.py</target>
        </trans-unit>
        <trans-unit id="cbb8b6e5433d405f55f7ce6e02cc8bc0a49a70f1" translate="yes" xml:space="preserve">
          <source>$aws ec2 describe-instances --filters &quot;Name=tag:Name,Values=kafka&quot; | python -m jsonselect .InstanceId</source>
          <target state="translated">$ aws ec2 describe-instances --filters &quot;Name = tag：Name、Values = kafka&quot; | python -m jsonselect .InstanceId</target>
        </trans-unit>
        <trans-unit id="b6dda526f48334bda02e8bffebcb2692ade7fc16" translate="yes" xml:space="preserve">
          <source>&amp;lt;img src=&quot;https://travis-ci.org/mwhooker/jsonselect.png&quot; /&amp;gt;</source>
          <target state="translated">&amp;lt;img src = &quot;https://travis-ci.org/mwhooker/jsonselect.png&quot; /&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9ce0429f918c1a23e0ba3f07fac28e4aa4384ca6" translate="yes" xml:space="preserve">
          <source>--list, -l          new-line separated list of values. works best on lists.</source>
          <target state="translated">--list、-l改行で区切られた値のリスト。リストで最適に機能します。</target>
        </trans-unit>
        <trans-unit id="e8df90b65fd86cd1bb7f0630cb33e1db12a4aec8" translate="yes" xml:space="preserve">
          <source>--machine-readable  Print json with no formatting</source>
          <target state="translated">-機械可読な印刷jsonをフォーマットなしで</target>
        </trans-unit>
        <trans-unit id="550b757cda7322f73ed049446a5463aea5ae83e3" translate="yes" xml:space="preserve">
          <source>-h, --help          show this help message and exit</source>
          <target state="translated">-h、-helpこのヘルプメッセージを表示して終了します</target>
        </trans-unit>
        <trans-unit id="706ece0ba72ef1c3ac8a673ab352e82e4d44a416" translate="yes" xml:space="preserve">
          <source>Python implementation of jsonselect (http://jsonselect.org/)</source>
          <target state="translated">jsonselect の Python 実装 (http://jsonselect.org/)</target>
        </trans-unit>
        <trans-unit id="000e33ca3b79fce546be706cb5f7146d7e594039" translate="yes" xml:space="preserve">
          <source>Run specific level conformance tests with</source>
          <target state="translated">で特定のレベルの適合性テストを実行します。</target>
        </trans-unit>
        <trans-unit id="76f273d1da9939e2ed217be473ba0af2b958b423" translate="yes" xml:space="preserve">
          <source>This is usefull, for example, for parsing out values from JSON APIs.</source>
          <target state="translated">これは、例えばJSON APIから値を解析するのに便利です。</target>
        </trans-unit>
        <trans-unit id="4e20b66093fb87b56aa34cc15a5342ee980fa65b" translate="yes" xml:space="preserve">
          <source>You can find more information here http://jsonselect.org/</source>
          <target state="translated">詳細はこちらからご覧いただけます http://jsonselect.org/</target>
        </trans-unit>
        <trans-unit id="79021f462e882994e3b900ce39f97b27f56ee88e" translate="yes" xml:space="preserve">
          <source>[&quot;i-12345678&quot;, &quot;i-23456789&quot;, &quot;i-3456789A&quot;]</source>
          <target state="translated">[&quot;i-12345678&quot;、 &quot;i-23456789&quot;、 &quot;i-3456789A&quot;]</target>
        </trans-unit>
        <trans-unit id="bbc0aff80688baeb01a5a4cb720794fe808ad957" translate="yes" xml:space="preserve">
          <source>```</source>
          <target state="translated">「」</target>
        </trans-unit>
        <trans-unit id="c58a9f29b60d463e870f825b614981a438424cba" translate="yes" xml:space="preserve">
          <source>```sh</source>
          <target state="translated">`` `sh</target>
        </trans-unit>
        <trans-unit id="8d47d7b14b993a95862a5c119ae1509ed81c02e6" translate="yes" xml:space="preserve">
          <source>`python -m jsonselect &amp;lt;selector&amp;gt; &amp;lt; jsonfile`</source>
          <target state="translated">`python -m jsonselect &amp;lt;selector&amp;gt; &amp;lt;jsonfile`</target>
        </trans-unit>
        <trans-unit id="03d3c7470e2ffdec41cf5226565c85461680d93e" translate="yes" xml:space="preserve">
          <source>get the upstream conformance tests:</source>
          <target state="translated">上流の適合性テストを取得します。</target>
        </trans-unit>
        <trans-unit id="b51d538a0d89b8bea90b324c25c6a566e5be8a24" translate="yes" xml:space="preserve">
          <source>git submodule update --init</source>
          <target state="translated">git submodule update --init</target>
        </trans-unit>
        <trans-unit id="615f0d06a3a4bbc28f62ed41ad5581d42cf7ce56" translate="yes" xml:space="preserve">
          <source>infile</source>
          <target state="translated">インファイル</target>
        </trans-unit>
        <trans-unit id="1488edaba8f8191b05cf70e2410d662f63c09430" translate="yes" xml:space="preserve">
          <source>jsonselect can be called directly from the command line.</source>
          <target state="translated">jsonselectはコマンドラインから直接呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="cb401398c962f16220333915aac641e67fdeec40" translate="yes" xml:space="preserve">
          <source>jsonselect.py currently implements levels 1 &amp;amp; 2 of these conformance tests https://github.com/lloyd/JSONSelectTests</source>
          <target state="translated">jsonselect.pyは現在、これらの適合性テストのレベル1と2を実装していますhttps://github.com/lloyd/JSONSelectTests</target>
        </trans-unit>
        <trans-unit id="3a59255c9130f8d69e7a4a500a6d58061dacc729" translate="yes" xml:space="preserve">
          <source>jsonselect.py is a python implementation of https://github.com/fd/json_select</source>
          <target state="translated">jsonselect.py は https://github.com/fd/json_select の python 実装です。</target>
        </trans-unit>
        <trans-unit id="1b67c7689ab0e4d0fa2ee22af6e89ed363a97160" translate="yes" xml:space="preserve">
          <source>level 3 is unimplemented because I was having trouble understanding what the correct behavior should be</source>
          <target state="translated">レベル3が実装されていないのは、何が正しい動作なのか理解できなかったからです。</target>
        </trans-unit>
        <trans-unit id="ff1f7fb57d0559282c68be749e13e2ad6ca1b976" translate="yes" xml:space="preserve">
          <source>nosetests -m '.*_level_1' ./tests/test_conformance.py</source>
          <target state="translated">nosetests -m '.*_level_1' ./tests/test_conformance.py</target>
        </trans-unit>
        <trans-unit id="7f4e2fed9f0643c1bf6c0067747902a9eec96d61" translate="yes" xml:space="preserve">
          <source>optional arguments:</source>
          <target state="translated">オプションの引数を指定します。</target>
        </trans-unit>
        <trans-unit id="5e8fb2ab3687ee5ba840cfaaf93c3743964159d9" translate="yes" xml:space="preserve">
          <source>parse json with jsonselect.</source>
          <target state="translated">jsonselectでjsonをパースします。</target>
        </trans-unit>
        <trans-unit id="ad4c56e7c36064d8a866576926bf3baf09551b59" translate="yes" xml:space="preserve">
          <source>positional arguments:</source>
          <target state="translated">位置的な議論。</target>
        </trans-unit>
        <trans-unit id="9e472ba184920adc07464fe7685f8c3b092dee68" translate="yes" xml:space="preserve">
          <source>selector</source>
          <target state="translated">セレクター</target>
        </trans-unit>
        <trans-unit id="66f392a343e374c834bef334efc4c28c5ebad6ea" translate="yes" xml:space="preserve">
          <source>usage: __main__.py [-h] [--list | --machine-readable] selector [infile]</source>
          <target state="translated">使い方は以下の通りです。__main__.py [-h][--list | --machinereadable]selector [infile]セレクタ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
