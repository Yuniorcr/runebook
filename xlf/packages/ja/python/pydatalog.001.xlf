<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/pydatalog/">
    <body>
      <group id="pydatalog">
        <trans-unit id="30ee3e160c87f4cb08e4464e6c9ce673e7576c41" translate="yes" xml:space="preserve">
          <source>#### Datalog = SQL + recursivity
Datalog is a truly declarative language derived from Prolog, with strong academic foundations.  It complements Python very well for:</source>
          <target state="translated">####データログ= SQL +再帰性データログは、強力な学術的基盤を備えた、Prologから派生した真に宣言型の言語です。これは、Pythonを非常によく補完します。</target>
        </trans-unit>
        <trans-unit id="5ce278aef6a44b4a6d85c267016a3cc878e8b48f" translate="yes" xml:space="preserve">
          <source>#### Simple as Excel
Datalog excels at accelerated development : Datalog programs are often shorter than their Python equivalent,
and Datalog statements can be specified in any order, as simply as formula in a spreadsheet.</source>
          <target state="translated">#### Excel Datalogは開発の加速に優れているためシンプル：DatalogプログラムはPythonの同等のプログラムよりも短いことが多く、Datalogステートメントはスプレッドシートの数式のように任意の順序で指定できます。</target>
        </trans-unit>
        <trans-unit id="1cc21bb1c9ffc625faccd2bf8037b2e805394a6c" translate="yes" xml:space="preserve">
          <source>###1.1 pyDatalog</source>
          <target state="translated">### 1.1 pyDatalog</target>
        </trans-unit>
        <trans-unit id="6092b1cb915e381d977776c4e9963ee6c352d447" translate="yes" xml:space="preserve">
          <source>###1.2 Datalog</source>
          <target state="translated">### 1.2データログ</target>
        </trans-unit>
        <trans-unit id="3dd7a992f7d04e210019cc150205ddcb8259fa06" translate="yes" xml:space="preserve">
          <source>##1. Description
The main goal of pyDatalog is to introduce Datalog as a Domain Specific Language (DSL) inside Python syntax and programs.</source>
          <target state="translated">## 1。説明pyDatalogの主な目的は、Python構文およびプログラム内にドメイン固有言語（DSL）としてDatalogを導入することです。</target>
        </trans-unit>
        <trans-unit id="3bc1e3fd28a367b2b2d2ccf225e2c6b701b70e26" translate="yes" xml:space="preserve">
          <source>A pure-python implementation of Datalog, a truly declarative language derived from Prolog.</source>
          <target state="translated">Prologから派生した真の宣言型言語であるDatalogの純粋なpython実装です。</target>
        </trans-unit>
        <trans-unit id="6c721ad53a91094717081d14a3a9d33e9dfe0444" translate="yes" xml:space="preserve">
          <source>it can perform multi-database queries (from memory datastore, 11 relational databases, and noSQL database with appropriate connectors)</source>
          <target state="translated">複数のデータベースクエリを実行することができます(メモリデータストア、11のリレーショナルデータベース、および適切なコネクタを備えたnoSQLデータベースから)。</target>
        </trans-unit>
        <trans-unit id="6966b54b4aa3de34ac5a5c25caacfd47c1347ede" translate="yes" xml:space="preserve">
          <source>it facilitates re-use of SQL code snippet (e.g. for frequent joins or formula);</source>
          <target state="translated">SQLコードスニペットの再利用を容易にします(頻繁な結合や数式など)。</target>
        </trans-unit>
        <trans-unit id="08fee37b868dff3ee91fefc7da2165e4fb3fe72f" translate="yes" xml:space="preserve">
          <source>it is more expressive than SQL, with a cleaner syntax;</source>
          <target state="translated">はSQLよりも表現力があり、構文もすっきりしています。</target>
        </trans-unit>
        <trans-unit id="001ccd2545a9f6a94d661aff17c000a5c13d47f2" translate="yes" xml:space="preserve">
          <source>managing complex sets of related information (e.g. in data integration or the semantic web).</source>
          <target state="translated">複雑な関連情報の集合を管理すること(データ統合やセマンティックウェブなど)。</target>
        </trans-unit>
        <trans-unit id="985cf3bcf22fd53cc11acdeccce166358d086573" translate="yes" xml:space="preserve">
          <source>performing recursive algorithms (e.g. in network protocol, code and graph analysis, parsing)</source>
          <target state="translated">再帰的アルゴリズムの実行</target>
        </trans-unit>
        <trans-unit id="66c26ef355255508dbbc81f0da48ab27d7a10e2f" translate="yes" xml:space="preserve">
          <source>pyDatalog adds the logic programming paradigm to Python&amp;rsquo;s toolbox, in a pythonic way.
You can now run logic queries on databases or Python objects, and use logic clauses to define python classes.
In particular, pyDatalog can be used as a query language:</source>
          <target state="translated">pyDatalogは、Pythonの方法で論理プログラミングパラダイムをPythonのツールボックスに追加します。データベースまたはPythonオブジェクトでロジッククエリを実行し、ロジック句を使用してPythonクラスを定義できるようになりました。特に、pyDatalogはクエリ言語として使用できます。</target>
        </trans-unit>
        <trans-unit id="30995bb5e233e47e6bb257a64794e11305c0b156" translate="yes" xml:space="preserve">
          <source>requirements, bugs&amp;hellip;</source>
          <target state="translated">要件、バグ&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="49f78e96336d68f2c9e30f93b50c766c08b0ad06" translate="yes" xml:space="preserve">
          <source>simulating intelligent behavior (e.g. in games),</source>
          <target state="translated">擬態</target>
        </trans-unit>
        <trans-unit id="6000cbc8da1255f5d1752f8e983c87d722723e7a" translate="yes" xml:space="preserve">
          <source>solving discrete constraint problems.</source>
          <target state="translated">離散制約問題を解く</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
