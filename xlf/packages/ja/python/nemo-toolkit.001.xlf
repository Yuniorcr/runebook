<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/nemo-toolkit/">
    <body>
      <group id="nemo-toolkit">
        <trans-unit id="27a19058859991fafb53ec85a8dd4aba161582f9" translate="yes" xml:space="preserve">
          <source>:class:&lt;code&gt;NeuralType&amp;lt;nemo.core.neural_types.NeuralType&amp;gt;&lt;/code&gt; the semantics, axis order, and dimensions of a tensor and more.</source>
          <target state="translated">：class： &lt;code&gt;NeuralType&amp;lt;nemo.core.neural_types.NeuralType&amp;gt;&lt;/code&gt; テンソルのセマンティクス、軸の順序、次元など。</target>
        </trans-unit>
        <trans-unit id="2e261b32671575429a5221b63a183c112ed86ec3" translate="yes" xml:space="preserve">
          <source>:class:&lt;code&gt;NmTensor&amp;lt;nemo.core.neural_types.NmTensor&amp;gt;&lt;/code&gt; objects flow between modules from port to port.</source>
          <target state="translated">：class： &lt;code&gt;NmTensor&amp;lt;nemo.core.neural_types.NmTensor&amp;gt;&lt;/code&gt; オブジェクトは、モジュール間をポート間で流れます。</target>
        </trans-unit>
        <trans-unit id="9cd000d02a6cdd1ce2b5b891a249af3f0f24bcc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lazy execution&lt;/em&gt; model. First, user defines activation flow graph. Then, calls &lt;em&gt;action&lt;/em&gt; (such as training). Actual computation happen only after action is called.</source>
          <target state="translated">&lt;em&gt;怠惰な実行&lt;/em&gt;モデル。まず、ユーザーがアクティベーションフローグラフを定義します。次に、&lt;em&gt;アクション&lt;/em&gt;（トレーニングなど）を呼び出します。実際の計算は、アクションが呼び出された後にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="03de2cdafacee4c26fc1e6464c8b5f0713822791" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NeMo Core&lt;/strong&gt; provides the fundamental building blocks for all neural models and NeMo's type system.</source>
          <target state="translated">&lt;strong&gt;NeMo Core&lt;/strong&gt;は、すべてのニューラルモデルとNeMoの型システムの基本的な構成要素を提供します。</target>
        </trans-unit>
        <trans-unit id="2675f0d9439a1d232b18f9e7644708a615ed9d34" translate="yes" xml:space="preserve">
          <source>Built to run on GPUs</source>
          <target state="translated">GPU上で動作するように構築されている</target>
        </trans-unit>
        <trans-unit id="04c76dfffe375903127bf09cbd8a18040afad04e" translate="yes" xml:space="preserve">
          <source>Core Principles</source>
          <target state="translated">基本理念</target>
        </trans-unit>
        <trans-unit id="1389bb3b7e57997cc83859178b7a5bc9d7df9829" translate="yes" xml:space="preserve">
          <source>Distributed evaluation</source>
          <target state="translated">分散評価</target>
        </trans-unit>
        <trans-unit id="8e4c34e05be8dbc0422dcf44923163853cd4628d" translate="yes" xml:space="preserve">
          <source>Distributed training</source>
          <target state="translated">分散型トレーニング</target>
        </trans-unit>
        <trans-unit id="661eac50a06b6efaee986b8ad80c20ad983d4d91" translate="yes" xml:space="preserve">
          <source>Domain or module-specific &lt;em&gt;Callbacks&lt;/em&gt; are used for evaluations and inspecting training performance.</source>
          <target state="translated">ドメインまたはモジュール固有の&lt;em&gt;コールバック&lt;/em&gt;は、トレーニングパフォーマンスの評価と検査に使用されます。</target>
        </trans-unit>
        <trans-unit id="aca01ae7bd976ab51c59e1753f8b5bca0ba73165" translate="yes" xml:space="preserve">
          <source>Examples: pre-trained language model, acoustic model, encoder, decoder, etc.</source>
          <target state="translated">例:事前学習済み言語モデル、音響モデル、エンコーダ、デコーダなど</target>
        </trans-unit>
        <trans-unit id="90bfb497d485dac276c6cc95915e35cc92600d87" translate="yes" xml:space="preserve">
          <source>Mixed-precision training using Tensor Cores on NVIDIA's Volta and Turing GPUs</source>
          <target state="translated">NVIDIAのVoltaおよびTuring GPU上のTensorコアを用いた混合精度トレーニング</target>
        </trans-unit>
        <trans-unit id="ba773e336945b5958c532f2455a2333c0a4c25cb" translate="yes" xml:space="preserve">
          <source>NEMO core package. Necessary for all collections</source>
          <target state="translated">NEMOコアパッケージ。すべてのコレクションに必要</target>
        </trans-unit>
        <trans-unit id="f170221da4d7e8c10d9d11f87c4e20baecbe422e" translate="yes" xml:space="preserve">
          <source>NEMO is built around these principles:</source>
          <target state="translated">NEMOはこれらの原則に基づいて構築されています。</target>
        </trans-unit>
        <trans-unit id="2d152c605f5f12e7bbf0b1355ac9bab0c3188c2a" translate="yes" xml:space="preserve">
          <source>NeMo (&lt;strong&gt;Ne&lt;/strong&gt;ural &lt;strong&gt;Mo&lt;/strong&gt;dules) is a toolkit for creating AI applications built around &lt;strong&gt;neural modules&lt;/strong&gt;, conceptual blocks of neural networks that take &lt;em&gt;typed&lt;/em&gt; inputs and produce &lt;em&gt;typed&lt;/em&gt; outputs.</source>
          <target state="translated">NEMO（&lt;strong&gt;ネ&lt;/strong&gt;ウラル&lt;strong&gt;のMo&lt;/strong&gt; dules）を中心に構築されたAIアプリケーション作成のためのツールキットである&lt;strong&gt;ニューラルモジュール&lt;/strong&gt;とるニューラルネットワークの概念ブロック&lt;em&gt;型付けされた&lt;/em&gt;入力および生成&lt;em&gt;型付けされた&lt;/em&gt;出力を。</target>
        </trans-unit>
        <trans-unit id="b78ba8646e469ea6b66c8d819c9b6331dcf4b982" translate="yes" xml:space="preserve">
          <source>NeMo Core provides:</source>
          <target state="translated">NeMo Coreが提供しています。</target>
        </trans-unit>
        <trans-unit id="1bbd80d3d4d913a8dc19dd042e9b54d043507f6b" translate="yes" xml:space="preserve">
          <source>NeMo-based application is a DAG of :class:&lt;code&gt;NeuralModule&amp;lt;nemo.core.neural_modules.NeuralModule&amp;gt;&lt;/code&gt; objects connected together via &lt;strong&gt;typed&lt;/strong&gt;&lt;em&gt;input&lt;/em&gt; and &lt;em&gt;output&lt;/em&gt; ports.</source>
          <target state="translated">NeMoベースのアプリケーションは、&lt;strong&gt;型指定された&lt;/strong&gt;&lt;em&gt;入力&lt;/em&gt;ポートと&lt;em&gt;出力&lt;/em&gt;ポートを介して &lt;code&gt;NeuralModule&amp;lt;nemo.core.neural_modules.NeuralModule&amp;gt;&lt;/code&gt; 接続された：class：NeuralModule &amp;lt;nemo.core.neural_modules.NeuralModule&amp;gt;オブジェクトのDAGです。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15d7a869bf29ec6aae6a5acd08a5391e740292b0" translate="yes" xml:space="preserve">
          <source>Neural Module is a block that computes a set of outputs from a set of inputs.</source>
          <target state="translated">ニューラルモジュールは、一連の入力から一連の出力を計算するブロックです。</target>
        </trans-unit>
        <trans-unit id="078930ec9448e32c68d4aa5faac9e88b44576474" translate="yes" xml:space="preserve">
          <source>The input and output ports of each neural module and :class:&lt;code&gt;NmTensor&amp;lt;nemo.core.neural_types.NmTensor&amp;gt;&lt;/code&gt; objects all have &lt;em&gt;Neural Type&lt;/em&gt; - :class:&lt;code&gt;NeuralType&amp;lt;nemo.core.neural_types.NeuralType&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">各ニューラルモジュールの入力ポートと出力ポート、および：class： &lt;code&gt;NmTensor&amp;lt;nemo.core.neural_types.NmTensor&amp;gt;&lt;/code&gt; オブジェクトはすべて&lt;em&gt;Neural &lt;/em&gt; &lt;code&gt;NeuralType&amp;lt;nemo.core.neural_types.NeuralType&amp;gt;&lt;/code&gt; ：class：NeuralType &amp;lt;nemo.core.neural_types.NeuralType&amp;gt;を持っています。</target>
        </trans-unit>
        <trans-unit id="e4ade9805116883065de82eaa0c7934f699b76cf" translate="yes" xml:space="preserve">
          <source>Think of it as an abstraction between a layer and a neural network.</source>
          <target state="translated">レイヤーとニューラルネットワークの間の抽象化と考えてください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
