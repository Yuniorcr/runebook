<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/py3nvml/">
    <body>
      <group id="py3nvml">
        <trans-unit id="704431f167e4c89d2c536290e8106e4498938413" translate="yes" xml:space="preserve">
          <source>(Added by me - not ported from NVIDIA library)</source>
          <target state="translated">（私が追加しました-NVIDIAライブラリから移植されていません）</target>
        </trans-unit>
        <trans-unit id="227bc31d7b36b370ad9fb845a11f08a6ab053529" translate="yes" xml:space="preserve">
          <source>(below here is everything ported from pynvml)</source>
          <target state="translated">（以下はpynvmlから移植されたすべてのものです）</target>
        </trans-unit>
        <trans-unit id="60bbdaa80921b503f91ea89f2c2ae243d07ab490" translate="yes" xml:space="preserve">
          <source>(this shows a slightly modified process info pane below).</source>
          <target state="translated">（これは、わずかに変更されたプロセス情報ペインを下に示しています）。</target>
        </trans-unit>
        <trans-unit id="7cc55a87b4033159e9476add24ac25052695ef54" translate="yes" xml:space="preserve">
          <source>, which checks the memory usage of a gpu, this
function checks if a process is running on a gpu. For a system with N gpus, returns a list of N booleans, where the nth
value is True if no process was found running on gpu n. An example use is:</source>
          <target state="translated">、gpuのメモリ使用量をチェックするこの関数は、プロセスがgpuで実行されているかどうかをチェックします。N gpusを使用するシステムの場合、Nブール値のリストを返します。gpunで実行されているプロセスが見つからなかった場合、n番目の値はTrueです。使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="91934a72bc889f2943dc05bf3a9f58516be89cb3" translate="yes" xml:space="preserve">
          <source>. It simply returns a list of integers
with the number of processes running on each gpu. E.g. if you had 1 process
running on gpu 5 in an 8 gpu system, you would expect to get the following:</source>
          <target state="translated">。各GPUで実行されているプロセスの数を含む整数のリストを返すだけです。たとえば、8GPUシステムのGPU5で1つのプロセスを実行している場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="12e74228fcf492e4b44240660f7f6beb1d738614" translate="yes" xml:space="preserve">
          <source>. The print code is horribly messy but the query code is very
simple and should be understandable.</source>
          <target state="translated">。印刷コードはひどく乱雑ですが、クエリコードは非常に単純で、理解できるはずです。</target>
        </trans-unit>
        <trans-unit id="d8c214ff645bee46d196d7d7c1547798fbe8173f" translate="yes" xml:space="preserve">
          <source>. This does the equivalent of the</source>
          <target state="translated">。これは、</target>
        </trans-unit>
        <trans-unit id="266251eb2c07262b529acf428a1f2f1cdecf8269" translate="yes" xml:space="preserve">
          <source>5.  All meaningful NVML constants and enums are exposed in Python. E.g. the constant</source>
          <target state="translated">5.すべての意味のあるNVMLの定数と列挙はPythonで公開されています。例えば、定数</target>
        </trans-unit>
        <trans-unit id="8d7dab62e143b4a72dde1445dc8401030a6ea3c5" translate="yes" xml:space="preserve">
          <source>A function to &amp;lsquo;restrict&amp;rsquo; the available GPUs by setting the</source>
          <target state="translated">を設定することにより、使用可能なGPUを「制限」する関数</target>
        </trans-unit>
        <trans-unit id="c6dd990fb0db5865282a050b1b283b6b2d1bebc4" translate="yes" xml:space="preserve">
          <source>A script for displaying a differently formatted nvidia-smi.</source>
          <target state="translated">異なるフォーマットの nvidia-smi を表示するためのスクリプト。</target>
        </trans-unit>
        <trans-unit id="dbe0cd1883bf0d42b17bf7de137c669d242ad502" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 2.285.  See NVML documentation for more information.</source>
          <target state="translated">NVML 2.285の新機能を追加しました。詳細はNVMLのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1deb5bbae008eade6b5dcb0a625acd0591daffc7" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 3.295.  See NVML documentation for more information.</source>
          <target state="translated">NVML 3.295用の新機能を追加しました。詳細は NVML のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="735911b677104cb5028b4da58fa91df8314e35dd" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 4.304.  See NVML documentation for more information.</source>
          <target state="translated">NVML 4.304の新機能を追加しました。詳細はNVMLのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6501db0477ac065c7bad35525b338a45afdb5859" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 5.319.  See NVML documentation for more information.</source>
          <target state="translated">NVML 5.319の新機能を追加しました。詳細はNVMLのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="74439b8de6b2a44d5e98c7f96c25e00709b55e38" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 6.340.  See NVML documentation for more information.</source>
          <target state="translated">NVML 6.340の新機能を追加しました。詳細はNVMLのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c89632354ca3ef49116e2c099c4e475c87703661" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 7.346.  See NVML documentation for more information.</source>
          <target state="translated">NVML 7.346 の新機能を追加しました。詳細はNVMLのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6ff149aaa39cc78e346b524c63db3dcadd42a317" translate="yes" xml:space="preserve">
          <source>Added new functions for NVML 7.352.  See NVML documentation for more information.</source>
          <target state="translated">NVML 7.352の新機能を追加しました。詳細はNVMLのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="af4032642a16e6ce6dc653303563c5d13ec729f2" translate="yes" xml:space="preserve">
          <source>Added nvidia_smi.py tool as a sample app.</source>
          <target state="translated">サンプルアプリとしてnvidia_smi.pyツールを追加しました。</target>
        </trans-unit>
        <trans-unit id="f5ae27e7f9268d20255645cd8d9bcf218a6cada9" translate="yes" xml:space="preserve">
          <source>Additionally, see</source>
          <target state="translated">さらに、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="369e445c7fba3d6563f78e32c1bc7f70d5b3daa0" translate="yes" xml:space="preserve">
          <source>Becomes</source>
          <target state="translated">になります。</target>
        </trans-unit>
        <trans-unit id="e949293bb3141d39921183faafd54e8bcb4089c2" translate="yes" xml:space="preserve">
          <source>Becomes:</source>
          <target state="translated">になります。</target>
        </trans-unit>
        <trans-unit id="60bb376ae1ce78b17c061cdfd24472de92207578" translate="yes" xml:space="preserve">
          <source>C function output parameters are returned from the corresponding Python function as tuples, rather than requiring pointers. Eg the C function:</source>
          <target state="translated">C関数の出力パラメータは、対応するPython関数からタプルとして返されます。例えば、C関数です。</target>
        </trans-unit>
        <trans-unit id="2905dac8b61f5bcd1de6af089bac4b6b474145b2" translate="yes" xml:space="preserve">
          <source>C structs are converted into Python classes. E.g. the C struct:</source>
          <target state="translated">Cの構造体はPythonのクラスに変換されます。例えば、Cの構造体。</target>
        </trans-unit>
        <trans-unit id="e352fc138c5e488dc34254c3ee2e99e3e9aaf288" translate="yes" xml:space="preserve">
          <source>COPYRIGHT</source>
          <target state="translated">著作権について</target>
        </trans-unit>
        <trans-unit id="8ca62237c945f3edd9281cf14c1e3443a046dbf9" translate="yes" xml:space="preserve">
          <source>CUDA_VISIBLE_DEVICES</source>
          <target state="translated">CUDA_VISIBLE_DEVICES</target>
        </trans-unit>
        <trans-unit id="2f6ba8758de1d885a0d3872a275066ca478ea17d" translate="yes" xml:space="preserve">
          <source>Can be called like so:</source>
          <target state="translated">そのように呼ぶことができます。</target>
        </trans-unit>
        <trans-unit id="069e13cf3af30589ad6833df9acef9dabc3e551c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011-2015, NVIDIA Corporation.  All rights reserved.</source>
          <target state="translated">Copyright (c)2011-2015,NVIDIA Corporation.すべての権利は留保されています。</target>
        </trans-unit>
        <trans-unit id="50c48d0dfd1dbe71efefaa1cb3393583fb4e3777" translate="yes" xml:space="preserve">
          <source>Differences from NVML</source>
          <target state="translated">NVMLとの違い</target>
        </trans-unit>
        <trans-unit id="db5fa106a436feaf5d006bd04120ced20aa11ad8" translate="yes" xml:space="preserve">
          <source>Documentation also available at &lt;a href=&quot;https://py3nvml.readthedocs.io/en/latest/&quot;&gt;readthedocs&lt;/a&gt;.</source>
          <target state="translated">ドキュメントは&lt;a href=&quot;https://py3nvml.readthedocs.io/en/latest/&quot;&gt;readthedocs&lt;/a&gt;でも入手できます。</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="501651209e2106677cbbfb39831edf741cac6663" translate="yes" xml:space="preserve">
          <source>Finally, I will remove the</source>
          <target state="translated">最後に、私が削除するのは</target>
        </trans-unit>
        <trans-unit id="4e28dfa89940cdd68d9f582a02149b891b0b37ab" translate="yes" xml:space="preserve">
          <source>Fixing nvmlUnitGetDeviceCount bug</source>
          <target state="translated">nvmlUnitGetDeviceCount のバグを修正</target>
        </trans-unit>
        <trans-unit id="92521aadb5ff34be1fd8e987c4188b17dd0475b0" translate="yes" xml:space="preserve">
          <source>For py3smi, you can specify an update period so it will refresh the feed every
few seconds. I.e., similar to &lt;code&gt;watch -n5 nvidia-smi&lt;/code&gt;, you can run
&lt;code&gt;py3smi -l 5&lt;/code&gt;.</source>
          <target state="translated">py3smiの場合、更新期間を指定して、数秒ごとにフィードを更新することができます。すなわち、に似 &lt;code&gt;watch -n5 nvidia-smi&lt;/code&gt; 、あなたが実行することができます &lt;code&gt;py3smi -l 5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ac4ec4b658f9b82462d6e40fbef20ad8cbd67ef" translate="yes" xml:space="preserve">
          <source>From GitHub:</source>
          <target state="translated">GitHubより。</target>
        </trans-unit>
        <trans-unit id="6c3465d12c7b6b8435a8a4dc1983188ec6d223d7" translate="yes" xml:space="preserve">
          <source>From PyPi:</source>
          <target state="translated">PyPiより。</target>
        </trans-unit>
        <trans-unit id="e5f2e481faf49aa3c50477d5e6f9cb346286dd61" translate="yes" xml:space="preserve">
          <source>I found the default</source>
          <target state="translated">デフォルトの</target>
        </trans-unit>
        <trans-unit id="992afe3b01a5d9b3e27fb777f83eb43df7a1a30b" translate="yes" xml:space="preserve">
          <source>I have copied in the
C docstring. While this will result in some strange looking docstrings which
will be slightly incorrect, they should give good guidance on the scope of the
function, something which was ill-defined before.</source>
          <target state="translated">私はCのdocstringをコピーしました。この結果、少し不正確な見た目のdocstringになってしまいますが、以前は定義が甘かった関数のスコープについての良いガイダンスを与えてくれるはずです。</target>
        </trans-unit>
        <trans-unit id="d00a94812cca7916994a62a20718f506645fa915" translate="yes" xml:space="preserve">
          <source>I have found this useful as I have a shared gpu server and like to use tensorflow which is very greedy and calls to
&lt;code&gt;tf.Session()&lt;/code&gt; grabs all available gpus.</source>
          <target state="translated">私は共有GPUサーバーを持っていて、非常に貪欲で &lt;code&gt;tf.Session()&lt;/code&gt; を呼び出すと、利用可能なすべてのGPUを取得するtensorflowを使用するので、これが便利であることがわかりました。</target>
        </trans-unit>
        <trans-unit id="0d1240aac65831337cd9bdde0d32f51e7a1c9cc3" translate="yes" xml:space="preserve">
          <source>If it could connect to the GPUs but not enough were available (i.e. more than
1 was requested), it will take everything it can and raise a RuntimeWarning.</source>
          <target state="translated">GPU に接続できたが、十分な数の GPU が利用できなかった場合(つまり、1 つ以上の GPU が要求された場合)、可能な限りの処理を行い、RuntimeWarning を発生させます。</target>
        </trans-unit>
        <trans-unit id="ed2b8f17a7d2b4a8db4d540ccab284b39ca4423a" translate="yes" xml:space="preserve">
          <source>If it could connect to the GPUs, but there were none available, it will
raise a ValueError.</source>
          <target state="translated">GPUに接続できても利用可能なGPUがなかった場合、ValueErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="b252c185783690b130c12fce2ddd8c35acfef584" translate="yes" xml:space="preserve">
          <source>If the method could not connect to any NVIDIA gpus, it will raise
a RuntimeWarning.</source>
          <target state="translated">メソッドがどのNVIDIA gpusにも接続できなかった場合、RuntimeWarningが発生します。</target>
        </trans-unit>
        <trans-unit id="e097708d277a2d697174749e649d6518f6b0c686" translate="yes" xml:space="preserve">
          <source>In addition to these NVIDIA functions to query the state of the GPU, I have written
a couple functions/tools to help in using gpus (particularly for a shared
gpu server). These are:</source>
          <target state="translated">GPUの状態を問い合わせるためのNVIDIAの関数に加えて、私はgpusを使用するのに役立つ関数/ツールをいくつか書きました(特に共有のgpuサーバーのために)。これらは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="a3e131a915414ce8cf4a7270e2e3c671ccb2a4f3" translate="yes" xml:space="preserve">
          <source>Instead of returning error codes, failing error codes are raised as Python exceptions. I.e. They should be wrapped with exception handlers.</source>
          <target state="translated">エラーコードを返す代わりに、失敗したエラーコードはPythonの例外として発生します。つまり、例外ハンドラでラップされている必要があります。</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="fc21b17e3c047c9d7adcd7f277f0e530933bf10f" translate="yes" xml:space="preserve">
          <source>NVML_TEMPERATURE_GPU</source>
          <target state="translated">NVML_TEMPERATERTARTION_GPU</target>
        </trans-unit>
        <trans-unit id="744d639566dcd19c2a130dd3663ffcc7893f8621" translate="yes" xml:space="preserve">
          <source>NVML_VALUE_NOT_AVAILABLE</source>
          <target state="translated">NVML_VALUE_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="ddce60bdbe867b91685dbf9d22230e58dc0d0d74" translate="yes" xml:space="preserve">
          <source>Neither the name of the NVIDIA Corporation nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.</source>
          <target state="translated">NVIDIA Corporationの名称およびその貢献者の名称を、書面による事前の特別な許可なしに、本ソフトウェアから派生した製品を推奨または宣伝するために使用することはできません。</target>
        </trans-unit>
        <trans-unit id="3ddb6f391c98ce1acabaa86671720fb684ebe4d5" translate="yes" xml:space="preserve">
          <source>Or the following will grab 2 gpus from the first 4 (and leave any higher gpus untouched)</source>
          <target state="translated">または、以下は最初の4つのgpusから2つのgpusを取得します(そして、より高いgpusは手つかずのままにしておきます)。</target>
        </trans-unit>
        <trans-unit id="d43f8378b439b7e6707baa3a72eb26a84c780d3b" translate="yes" xml:space="preserve">
          <source>Or, download and pip install:</source>
          <target state="translated">または、ダウンロードしてpipでインストールします。</target>
        </trans-unit>
        <trans-unit id="832dc285ce4f7c5de8a16a81acaa9528741d8199" translate="yes" xml:space="preserve">
          <source>Ported to support Python 3.0 and Python 2.0 syntax.</source>
          <target state="translated">Python 3.0とPython 2.0の構文をサポートするために移植されました。</target>
        </trans-unit>
        <trans-unit id="498066086bbf68c8bb559d197592643e0ac0dd69" translate="yes" xml:space="preserve">
          <source>Python 3 Bindings for the NVIDIA Management Library</source>
          <target state="translated">NVIDIA管理ライブラリのためのPython 3バインディング</target>
        </trans-unit>
        <trans-unit id="348bb74784a431e09fc89ea2883c70553eec3de9" translate="yes" xml:space="preserve">
          <source>Python 3 compatible bindings to the NVIDIA Management Library. Can be used to
query the state of the GPUs on your system. This was ported from the NVIDIA
provided python bindings &lt;a href=&quot;https://pypi.python.org/pypi/nvidia-ml-py/7.352.0&quot;&gt;nvidia-ml-py&lt;/a&gt;, which only
supported python 2. I have forked from version 7.352.0. The old library was
itself a wrapper around the &lt;a href=&quot;http://developer.nvidia.com/nvidia-management-library-nvml&quot;&gt;NVIDIA Management Library&lt;/a&gt;.</source>
          <target state="translated">NVIDIA管理ライブラリへのPython3互換のバインディング。システム上のGPUの状態を照会するために使用できます。これは、NVIDIAが提供するpythonバインディング&lt;a href=&quot;https://pypi.python.org/pypi/nvidia-ml-py/7.352.0&quot;&gt;nvidia-ml-py&lt;/a&gt;から移植されました。これは、python2のみをサポートしていました。バージョン7.352.0からフォークしました。古いライブラリは、それ自体が&lt;a href=&quot;http://developer.nvidia.com/nvidia-management-library-nvml&quot;&gt;NVIDIA管理ライブラリの&lt;/a&gt;ラッパーでした。</target>
        </trans-unit>
        <trans-unit id="7eb9a0922eac8ead10ca27b9a58e8e9aa959cda6" translate="yes" xml:space="preserve">
          <source>Python 3.5+.</source>
          <target state="translated">Python 3.5+。</target>
        </trans-unit>
        <trans-unit id="7a9e7bd80962382a9a912d3b964d77cd22f8401a" translate="yes" xml:space="preserve">
          <source>Python handles string buffer creation.  E.g. the C function:</source>
          <target state="translated">Pythonは文字列バッファの作成を処理します。例えばC言語の関数。</target>
        </trans-unit>
        <trans-unit id="c20bb0f7c4d78b01fa838319a2981e9b417f1f05" translate="yes" xml:space="preserve">
          <source>Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:</source>
          <target state="translated">この場合、以下の条件が満たされていることを条件に、ソースおよびバイナリ形式での再配布および使用が許可されます。</target>
        </trans-unit>
        <trans-unit id="57ec4bae787e02e75ae9439f5fbfc851c887f70f" translate="yes" xml:space="preserve">
          <source>Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.</source>
          <target state="translated">バイナリ形式で再配布する場合は、上記の著作権表示、この条件のリスト、および以下の免責事項を、配布物と共に提供されるドキュメントおよび/またはその他の資料に複製しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b7338b5245c44e48d0d288fd4ec6f22445873f8e" translate="yes" xml:space="preserve">
          <source>Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.</source>
          <target state="translated">ソースコードの再配布には、上記の著作権表示、この条件リスト、および以下の免責事項を保持しなければなりません。</target>
        </trans-unit>
        <trans-unit id="13691cf14b512760be4b1cedef755eeca1ba33bc" translate="yes" xml:space="preserve">
          <source>Regular Usage</source>
          <target state="translated">通常の使用方法</target>
        </trans-unit>
        <trans-unit id="5826bb879e5266b9bd371e5afef847dd5dab8c61" translate="yes" xml:space="preserve">
          <source>Release Notes (for pynvml)</source>
          <target state="translated">リリースノート (pynvml用)</target>
        </trans-unit>
        <trans-unit id="63c2178c36666b52b538ae4daf84c57f71791918" translate="yes" xml:space="preserve">
          <source>Requires</source>
          <target state="translated">必要なもの</target>
        </trans-unit>
        <trans-unit id="734bd5b4462fb02a485b86fa225dc775792b4bc5" translate="yes" xml:space="preserve">
          <source>Running pip install will now put this script in your python&amp;rsquo;s
bin, and you&amp;rsquo;ll be able to run it from the command line. Here is a comparison of
the two outputs:</source>
          <target state="translated">pip installを実行すると、このスクリプトがPythonのbinに配置され、コマンドラインから実行できるようになります。2つの出力の比較を次に示します。</target>
        </trans-unit>
        <trans-unit id="3c4a8ed56694d0489d0758c2bf05c7d1bf41c87a" translate="yes" xml:space="preserve">
          <source>See the Utils section below for more info.</source>
          <target state="translated">詳細は下記の「利用編」をご覧ください。</target>
        </trans-unit>
        <trans-unit id="492a841972bf67520a805dd7c1a900fe70ae424f" translate="yes" xml:space="preserve">
          <source>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &amp;ldquo;AS IS&amp;rdquo; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</source>
          <target state="translated">このソフトウェアは、著作権所有者および寄稿者によって「現状有姿」で提供され、商品性および特定目的への適合性の黙示の保証を含むがこれに限定されない、明示または黙示の保証は否認されます。いかなる場合でも、著作権者または寄稿者は、直接的、間接的、偶発的、特別、例示的、または間接的な損害（代替商品またはサービスの購入、使用、データ、または利益の損失を含みますが、これらに限定されません）に対して責任を負わないものとします。またはビジネスの中断）責任の理論にかかわらず、契約、厳格責任、または不法行為（過失またはその他の場合を含む）にかかわらず、このソフトウェアの使用にかかわらず、このソフトウェアの使用の有無を問わず</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="a17ccb0e786e5be596b23b255eb985c316e59dcb" translate="yes" xml:space="preserve">
          <source>The py3nvml library consists of python methods which wrap
several NVML functions, implemented in a C shared library.
Each function&amp;rsquo;s use is the same with the following exceptions:</source>
          <target state="translated">py3nvmlライブラリは、C共有ライブラリに実装されたいくつかのNVML関数をラップするPythonメソッドで構成されています。各関数の使用法は、次の例外を除いて同じです。</target>
        </trans-unit>
        <trans-unit id="73af3e91bd8b4138712c534603967a8ee83e9444" translate="yes" xml:space="preserve">
          <source>This function has no return codes but may raise some warnings/exceptions:</source>
          <target state="translated">この関数にはリターンコードはありませんが、いくつかの警告や例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bcb8937b8ed2af638d4ade82de7ff9aca38d5dc4" translate="yes" xml:space="preserve">
          <source>This function is called by</source>
          <target state="translated">この関数は</target>
        </trans-unit>
        <trans-unit id="eb17757444438b386d2785d0368cdd190a0ce018" translate="yes" xml:space="preserve">
          <source>This tool can query the gpu status. Unlike the default for</source>
          <target state="translated">このツールは gpu の状態を問い合わせることができます。のデフォルトとは異なり</target>
        </trans-unit>
        <trans-unit id="2577f1f58f982d2c3230e6125914a7c51ee5ed2d" translate="yes" xml:space="preserve">
          <source>This will look for 3 available gpus in the range of gpus from 0 to 3. The range option is not necessary, and it only
serves to restrict the search space for the grab_gpus.</source>
          <target state="translated">これは0から3までのgpusの範囲内で3つの利用可能なgpusを探します。 rangeオプションは必須ではなく、grab_gpusの検索空間を制限するのに役立つだけです。</target>
        </trans-unit>
        <trans-unit id="22b6e3589839140fd4ba1930ad60f08e94a96176" translate="yes" xml:space="preserve">
          <source>To try and keep py3nvml somewhat up-to-date with the constantly evolving nvidia
drivers, I have done some work to the</source>
          <target state="translated">py3nvml を常に進化し続ける nvidia ドライバに対応するために、私は</target>
        </trans-unit>
        <trans-unit id="a63973d287af6801bc621e6561a3547ef84c0931" translate="yes" xml:space="preserve">
          <source>Updated nvidia_smi.py tool</source>
          <target state="translated">nvidia_smi.py ツールを更新しました。</target>
        </trans-unit>
        <trans-unit id="342416bab2fc7ca2c2db14c0b87567aecd55c1bf" translate="yes" xml:space="preserve">
          <source>Updated nvidia_smi.py tool
- Includes additional error handling</source>
          <target state="translated">更新された nvidia_smi.py ツール-追加のエラー処理を含む</target>
        </trans-unit>
        <trans-unit id="06b1bdb677a0f744d39a83c7a275b004dd2bdae4" translate="yes" xml:space="preserve">
          <source>Updates in Version 0.2.3</source>
          <target state="translated">バージョン0.2.3のアップデート</target>
        </trans-unit>
        <trans-unit id="24a271451e65e20717de9aee72e172c4a79d419b" translate="yes" xml:space="preserve">
          <source>Utils</source>
          <target state="translated">活用法</target>
        </trans-unit>
        <trans-unit id="a84e24132b15412a19df8221013949e101c55fb7" translate="yes" xml:space="preserve">
          <source>Version 2.285.0</source>
          <target state="translated">バージョン2.285.0</target>
        </trans-unit>
        <trans-unit id="424d515f57cd4be403371b578ceaefb9a1694096" translate="yes" xml:space="preserve">
          <source>Version 3.295.0</source>
          <target state="translated">バージョン3.295.0</target>
        </trans-unit>
        <trans-unit id="60410531de5de932f3c14bb2321f2fb3c899e48e" translate="yes" xml:space="preserve">
          <source>Version 4.304.0</source>
          <target state="translated">バージョン4.304.0</target>
        </trans-unit>
        <trans-unit id="b57420d369fa4b5619d1fe9c0b91ac44b2dd133c" translate="yes" xml:space="preserve">
          <source>Version 4.304.3</source>
          <target state="translated">バージョン4.304.3</target>
        </trans-unit>
        <trans-unit id="5a0bfa91792b8a2728cf758c0073ca9f5d26f164" translate="yes" xml:space="preserve">
          <source>Version 5.319.0</source>
          <target state="translated">バージョン5.319.0</target>
        </trans-unit>
        <trans-unit id="629a16124706073cc4659c90813d6c86299cb3c7" translate="yes" xml:space="preserve">
          <source>Version 6.340.0</source>
          <target state="translated">バージョン6.340.0</target>
        </trans-unit>
        <trans-unit id="a55154b62aad0f22608266e16b1b447b86e480fd" translate="yes" xml:space="preserve">
          <source>Version 7.346.0</source>
          <target state="translated">バージョン 7.346.0</target>
        </trans-unit>
        <trans-unit id="1de9161c410a4e4844ea46feb191534e8fb68885" translate="yes" xml:space="preserve">
          <source>Version 7.352.0</source>
          <target state="translated">バージョン7.352.0</target>
        </trans-unit>
        <trans-unit id="fcbaf9283f183bb6c0c9f79efe2224c06f1bacc8" translate="yes" xml:space="preserve">
          <source>Visit &lt;a href=&quot;https://docs.nvidia.com/deploy/nvml-api/index.html&quot;&gt;NVML reference&lt;/a&gt; for a list of the
functions available and their help. Also the script py3smi is a bit hacky but
shows examples of me querying the GPUs for info.</source>
          <target state="translated">訪問&lt;a href=&quot;https://docs.nvidia.com/deploy/nvml-api/index.html&quot;&gt;NVML参照&lt;/a&gt;可能な機能と彼らの助けのリストについて。また、スクリプトpy3smiは少しハックですが、GPUに情報を照会する例を示しています。</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">と一緒に</target>
        </trans-unit>
        <trans-unit id="0bc0d53928cebde48aae4cbefff387a8439e7549" translate="yes" xml:space="preserve">
          <source>You can adjust the memory threshold for determining if a GPU is free/used with the &lt;code&gt;gpu_fraction&lt;/code&gt; parameter
(default is 1):</source>
          <target state="translated">GPUが空き/使用されているかどうかを判断するためのメモリしきい値を &lt;code&gt;gpu_fraction&lt;/code&gt; パラメーター（デフォルトは1）で調整できます。</target>
        </trans-unit>
        <trans-unit id="6f035e1d457790c8603eb1d7dcbb39015737c414" translate="yes" xml:space="preserve">
          <source>You can also get the full output (very similar to nvidia-smi) by running</source>
          <target state="translated">を実行することで、完全な出力を得ることもできます(nvidia-smiと非常によく似ています)。</target>
        </trans-unit>
        <trans-unit id="728e2975282484231f7526dea55261c96f75e65d" translate="yes" xml:space="preserve">
          <source>You can call the &lt;code&gt;grab_gpus(num_gpus, gpu_select, gpu_fraction=.95)&lt;/code&gt; function to check the available gpus and set
the</source>
          <target state="translated">あなたは呼び出すことができます &lt;code&gt;grab_gpus(num_gpus, gpu_select, gpu_fraction=.95)&lt;/code&gt; 利用可能なGPUをチェックする機能を設定し、</target>
        </trans-unit>
        <trans-unit id="b56345d25d16b8f7ab95f7f01a6382017a2cc434" translate="yes" xml:space="preserve">
          <source>command:</source>
          <target state="translated">コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="8c4d6478bbb2f8c7126fd20d5bb2b5a62a7a53f5" translate="yes" xml:space="preserve">
          <source>constant is not used.  Instead None is mapped to the field.</source>
          <target state="translated">定数は使用されません。代わりに None がフィールドにマップされます。</target>
        </trans-unit>
        <trans-unit id="8d0b60bc01a5c7654c3fb5ff8e2c46005bcd60f7" translate="yes" xml:space="preserve">
          <source>environment variable as need be. It determines if a GPU is available by checking if the
amount of free memory is below memory-usage is above/equal to the gpu_fraction value. The default of .95 allows for some
small amount of memory to be taken before it deems the gpu as being &amp;lsquo;used&amp;rsquo;.</source>
          <target state="translated">必要に応じて環境変数。空きメモリの量がメモリを下回っているかどうかを確認することで、GPUが使用可能かどうかを判断します。使用量はgpu_fraction値を上回っています。デフォルトの.95では、GPUが「使用済み」であると見なされる前に、少量のメモリを使用できます。</target>
        </trans-unit>
        <trans-unit id="fed8dddda7bd1744a6df8c63fb5e5702f3cd9fa2" translate="yes" xml:space="preserve">
          <source>environment variable.</source>
          <target state="translated">環境変数を使用しています。</target>
        </trans-unit>
        <trans-unit id="5ac8c16f64282ce55550b3ffdc9c54ef8f71d410" translate="yes" xml:space="preserve">
          <source>from python with subprocess.</source>
          <target state="translated">pythonからサブプロセスで</target>
        </trans-unit>
        <trans-unit id="ecc1b7adbf1516af0cf74bb546f4f7d2ec5b60b0" translate="yes" xml:space="preserve">
          <source>get_free_gpus</source>
          <target state="translated">ゲットフリーgpus</target>
        </trans-unit>
        <trans-unit id="88d37485b4f6c6a7f751728dbab10a85a9e55c30" translate="yes" xml:space="preserve">
          <source>get_num_procs</source>
          <target state="translated">get_num_procs</target>
        </trans-unit>
        <trans-unit id="ee06ae481ff22e1fb93ff6f1bf8a47c71c2376cc" translate="yes" xml:space="preserve">
          <source>grab_gpus</source>
          <target state="translated">グラブgpus</target>
        </trans-unit>
        <trans-unit id="7bd8e063d0b2bd77153a4cbb4935df900737bde8" translate="yes" xml:space="preserve">
          <source>is available under</source>
          <target state="translated">は以下で利用可能です。</target>
        </trans-unit>
        <trans-unit id="20ed587270a1ca91b4a908b6b7651f51cc18aaff" translate="yes" xml:space="preserve">
          <source>module in a future version, as
I believe it was only ever meant as an example of how to use the nvml functions
to query the gpus, and is now quite out of date. To get the same functionality,
you can call</source>
          <target state="translated">モジュールを将来のバージョンで使用することをお勧めします。同じ機能を得るには</target>
        </trans-unit>
        <trans-unit id="c41c35762d4e943916d5591e0e99735a35d67a15" translate="yes" xml:space="preserve">
          <source>module to query the device and get info on the
GPUs, and then defined my own printout. I have included this as a script in</source>
          <target state="translated">モジュールを使用してデバイスに問い合わせてGPUの情報を取得し、独自のプリントアウトを定義しました。これをスクリプトとして</target>
        </trans-unit>
        <trans-unit id="a36d0effc6d7cb4853b469cf9d391c6275850548" translate="yes" xml:space="preserve">
          <source>module. In particular,
I have updated all the constants that were missing in py3nvml and existing in the
&lt;a href=&quot;https://github.com/NVIDIA/nvidia-settings/blob/master/src/nvml.h&quot;&gt;NVIDIA source&lt;/a&gt; as of version 418.43. In addition, I have wrapped all of these
constants in Enums so it is easier to see what constants go together. Finally,
for all the functions in</source>
          <target state="translated">モジュール。特に、バージョン418.43の時点で、py3nvmlになく、&lt;a href=&quot;https://github.com/NVIDIA/nvidia-settings/blob/master/src/nvml.h&quot;&gt;NVIDIAソースに&lt;/a&gt;存在するすべての定数を更新しました。さらに、これらすべての定数を列挙型でラップしたので、どの定数が一緒になるかを簡単に確認できます。最後に、のすべての機能について</target>
        </trans-unit>
        <trans-unit id="0104cbd0e9876f60416d064b5a9418133bd0a6f7" translate="yes" xml:space="preserve">
          <source>nvidia-smi</source>
          <target state="translated">エヌブイディアスミ</target>
        </trans-unit>
        <trans-unit id="0bf0ac838e2fa2261506d4caf6d11b23eb733494" translate="yes" xml:space="preserve">
          <source>nvidia-smi -q -x</source>
          <target state="translated">nvidia-smi -q -x</target>
        </trans-unit>
        <trans-unit id="f94f7ee06d2ff87ad29641d8717dbb9e5f512857" translate="yes" xml:space="preserve">
          <source>output was missing some useful info, so made use of the</source>
          <target state="translated">出力にはいくつかの有用な情報が欠けていたので</target>
        </trans-unit>
        <trans-unit id="90baa8c11990535925900fd8352fbcb5a49880fc" translate="yes" xml:space="preserve">
          <source>py3nvml.NVML_TEMPERATURE_GPU</source>
          <target state="translated">py3nvml.NVML_TEMPERATURE_GPU</target>
        </trans-unit>
        <trans-unit id="17766ab629b8fa1378bdda7e35f528492e22c899" translate="yes" xml:space="preserve">
          <source>py3nvml.nvidia_smi</source>
          <target state="translated">py3nvml.nvidia_smi</target>
        </trans-unit>
        <trans-unit id="55247edf0607be94a824068a02eb08b5f91121a4" translate="yes" xml:space="preserve">
          <source>py3nvml.nvidia_smi.py</source>
          <target state="translated">py3nvml.nvidia_smi.py</target>
        </trans-unit>
        <trans-unit id="3fda2dd8065434de0a3b195f66f4857fe29aee96" translate="yes" xml:space="preserve">
          <source>py3nvml.py3nvml</source>
          <target state="translated">py3nvml.py3nvml</target>
        </trans-unit>
        <trans-unit id="06362e0d46ddaf9fcf67aaeeab5b12b22136fb21" translate="yes" xml:space="preserve">
          <source>py3nvml/nvidia_smi.py</source>
          <target state="translated">py3nvml/nvidia_smi.py</target>
        </trans-unit>
        <trans-unit id="5349a6cb60b3a4ab7dec4a29e5967ff599559f32" translate="yes" xml:space="preserve">
          <source>py3smi</source>
          <target state="translated">パイスリースミ</target>
        </trans-unit>
        <trans-unit id="8ea102dc84c7a0a65e9a4894f774b5c0f2f38b2a" translate="yes" xml:space="preserve">
          <source>py3smi
-f</source>
          <target state="translated">py3smi -f</target>
        </trans-unit>
        <trans-unit id="96c7d8616bbccc116d7cf0e4ac7cb16e2752fc28" translate="yes" xml:space="preserve">
          <source>scripts/py3smi</source>
          <target state="translated">スクリプト/py3smi</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
