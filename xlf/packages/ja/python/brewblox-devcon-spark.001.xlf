<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/brewblox-devcon-spark/">
    <body>
      <group id="brewblox-devcon-spark">
        <trans-unit id="062f6038bdb1c4907e6d3ab78df647fd0496c6af" translate="yes" xml:space="preserve">
          <source>![Command Transformation](&lt;a href=&quot;http://www.plantuml.com/plantuml/png/dLPDZ-Cs3BtdLn2vJ59aaalHmw0eTfC9q2tQpc2JOe-58jDZxSYIAyepOnJzxwKasx7piOjTdsnza7oFZwJVaHVErwM6ZIrBOJBOEs4ejwuKNbapcLIyhy8hJ4MbbbKpXNydmC_iXpdStlu2quyeKRqW_BhVFuB3VseaFur7ulQZS8GWt5DTel44kRFbw2pCQgU1VQ-iWuFDclbqShp-XwZ07ZwZz2jgo6EvgfpDbKROVFph7lBQo1YTjx3ZM9z19Y2KGZ3M8pZrLFZu6PxjcoWhZNVm-B3Rmuh2hLLoGJ4cvP10iFtj-_tsxuVrRzlDlZExwCq4iWHamWiWRns2T2WyndtalU1vae0CECpmHKaSqDW3tLZpWiu3eGj7uCDzm2IjySvgZOuNflsD2x32i-llCW0EYRnJveaMCLWf31mup4AO9ypWq80l46hsjnmPsGnT9ZkA4vUCXAyCFRfIcQEHOvHdfXWJ1UIA8BC6mutCSb1ihStha4DjxNDTBISZA-yDu9l4ohTsd534lbNED8m9ugzQPm5bRckJ7OCv9gHR6UH4sWmbfmHcQCBxV9YRFZ_Rk0S7RULp37awEdCb8qSMV52BOhWs7rG3f_ZHMMyFTNwRl0TIFTBopCpEbfYuyas5lLJPRENmbgj28b5WbglabCAUnYZzGEA3mKzyUrtJtTd9BYBET8Y8G76aDoBBk33e1dA5JF8iXZa7GN0GX3_zsAdjFFArmzUrjc_mAYBc0akcWYej6eRB57H23COA3fBzgbBewnRtXOeduMTEJUjUdejDcSJE2JbXFP4zcuzjzphf5lwxefZO35ZkuqBknRAk5LFKzjHl4GeZhbaZGUL85N-hWmvgTYqy7p2aaalzUYIbLZbdXlzadtSWfBGkYmPYtIHVYu6aGMXkObaJ_Dz4OpTN-3c7l0jxBU85yFYG1RmgNp2GIZVJ2pVIPFXMalOCdfgoHDQ6P8tOghAa-3ZNrGdloskbs4wXY32GSQ4oBx2uFl94NcaTM18TJrqpAz3XTsggwqAfwYvteNlytYwqkyRPLnhRby8V3QxHt8Zpk9z6NnrSltFV9wWhvdCu_mhXavAGJkOCRvzaw5E1NFW-54PAAW-lnUajpbWGlkBI3PqdICdMJaOYk1fyCKxTXpXY1X6rCpHEbmN45aFjuC_IW2JnadhQSQfT64C37jj_A5yxS_8BDU4Jx_WA_vxz3m00&quot;&gt;http://www.plantuml.com/plantuml/png/dLPDZ-Cs3BtdLn2vJ59aaalHmw0eTfC9q2tQpc2JOe-58jDZxSYIAyepOnJzxwKasx7piOjTdsnza7oFZwJVaHVErwM6ZIrBOJBOEs4ejwuKNbapcLIyhy8hJ4MbbbKpXNydmC_iXpdStlu2quyeKRqW_BhVFuB3VseaFur7ulQZS8GWt5DTel44kRFbw2pCQgU1VQ-iWuFDclbqShp-XwZ07ZwZz2jgo6EvgfpDbKROVFph7lBQo1YTjx3ZM9z19Y2KGZ3M8pZrLFZu6PxjcoWhZNVm-B3Rmuh2hLLoGJ4cvP10iFtj-_tsxuVrRzlDlZExwCq4iWHamWiWRns2T2WyndtalU1vae0CECpmHKaSqDW3tLZpWiu3eGj7uCDzm2IjySvgZOuNflsD2x32i-llCW0EYRnJveaMCLWf31mup4AO9ypWq80l46hsjnmPsGnT9ZkA4vUCXAyCFRfIcQEHOvHdfXWJ1UIA8BC6mutCSb1ihStha4DjxNDTBISZA-yDu9l4ohTsd534lbNED8m9ugzQPm5bRckJ7OCv9gHR6UH4sWmbfmHcQCBxV9YRFZ_Rk0S7RULp37awEdCb8qSMV52BOhWs7rG3f_ZHMMyFTNwRl0TIFTBopCpEbfYuyas5lLJPRENmbgj28b5WbglabCAUnYZzGEA3mKzyUrtJtTd9BYBET8Y8G76aDoBBk33e1dA5JF8iXZa7GN0GX3_zsAdjFFArmzUrjc_mAYBc0akcWYej6eRB57H23COA3fBzgbBewnRtXOeduMTEJUjUdejDcSJE2JbXFP4zcuzjzphf5lwxefZO35ZkuqBknRAk5LFKzjHl4GeZhbaZGUL85N-hWmvgTYqy7p2aaalzUYIbLZbdXlzadtSWfBGkYmPYtIHVYu6aGMXkObaJ_Dz4OpTN-3c7l0jxBU85yFYG1RmgNp2GIZVJ2pVIPFXMalOCdfgoHDQ6P8tOghAa-3ZNrGdloskbs4wXY32GSQ4oBx2uFl94NcaTM18TJrqpAz3XTsggwqAfwYvteNlytYwqkyRPLnhRby8V3QxHt8Zpk9z6NnrSltFV9wWhvdCu_mhXavAGJkOCRvzaw5E1NFW-54PAAW-lnUajpbWGlkBI3PqdICdMJaOYk1fyCKxTXpXY1X6rCpHEbmN45aFjuC_IW2JnadhQSQfT64C37jj_A5yxS_8BDU4Jx_WA_vxz3m00&lt;/a&gt; &amp;ldquo;Command Transformation&amp;rdquo;)</source>
          <target state="translated">！[コマンド変換]（&lt;a href=&quot;http://www.plantuml.com/plantuml/png/dLPDZ-Cs3BtdLn2vJ59aaalHmw0eTfC9q2tQpc2JOe-58jDZxSYIAyepOnJzxwKasx7piOjTdsnza7oFZwJVaHVErwM6ZIrBOJBOEs4ejwuKNbapcLIyhy8hJ4MbbbKpXNydmC_iXpdStlu2quyeKRqW_BhVFuB3VseaFur7ulQZS8GWt5DTel44kRFbw2pCQgU1VQ-iWuFDclbqShp-XwZ07ZwZz2jgo6EvgfpDbKROVFph7lBQo1YTjx3ZM9z19Y2KGZ3M8pZrLFZu6PxjcoWhZNVm-B3Rmuh2hLLoGJ4cvP10iFtj-_tsxuVrRzlDlZExwCq4iWHamWiWRns2T2WyndtalU1vae0CECpmHKaSqDW3tLZpWiu3eGj7uCDzm2IjySvgZOuNflsD2x32i-llCW0EYRnJveaMCLWf31mup4AO9ypWq80l46hsjnmPsGnT9ZkA4vUCXAyCFRfIcQEHOvHdfXWJ1UIA8BC6mutCSb1ihStha4DjxNDTBISZA-yDu9l4ohTsd534lbNED8m9ugzQPm5bRckJ7OCv9gHR6UH4sWmbfmHcQCBxV9YRFZ_Rk0S7RULp37awEdCb8qSMV52BOhWs7rG3f_ZHMMyFTNwRl0TIFTBopCpEbfYuyas5lLJPRENmbgj28b5WbglabCAUnYZzGEA3mKzyUrtJtTd9BYBET8Y8G76aDoBBk33e1dA5JF8iXZa7GN0GX3_zsAdjFFArmzUrjc_mAYBc0akcWYej6eRB57H23COA3fBzgbBewnRtXOeduMTEJUjUdejDcSJE2JbXFP4zcuzjzphf5lwxefZO35ZkuqBknRAk5LFKzjHl4GeZhbaZGUL85N-hWmvgTYqy7p2aaalzUYIbLZbdXlzadtSWfBGkYmPYtIHVYu6aGMXkObaJ_Dz4OpTN-3c7l0jxBU85yFYG1RmgNp2GIZVJ2pVIPFXMalOCdfgoHDQ6P8tOghAa-3ZNrGdloskbs4wXY32GSQ4oBx2uFl94NcaTM18TJrqpAz3XTsggwqAfwYvteNlytYwqkyRPLnhRby8V3QxHt8Zpk9z6NnrSltFV9wWhvdCu_mhXavAGJkOCRvzaw5E1NFW-54PAAW-lnUajpbWGlkBI3PqdICdMJaOYk1fyCKxTXpXY1X6rCpHEbmN45aFjuC_IW2JnadhQSQfT64C37jj_A5yxS_8BDU4Jx_WA_vxz3m00&quot;&gt;http：//www.plantuml。COM / plantuml / PNG / dLPDZ-Cs3BtdLn2vJ59aaalHmw0eTfC9q2tQpc2JOe-58jDZxSYIAyepOnJzxwKasx7piOjTdsnza7oFZwJVaHVErwM6ZIrBOJBOEs4ejwuKNbapcLIyhy8hJ4MbbbKpXNydmC_iXpdStlu2quyeKRqW_BhVFuB3VseaFur7ulQZS8GWt5DTel44kRFbw2pCQgU1VQ-iWuFDclbqShp-XwZ07ZwZz2jgo6EvgfpDbKROVFph7lBQo1YTjx3ZM9z19Y2KGZ3M8pZrLFZu6PxjcoWhZNVm-B3Rmuh2hLLoGJ4cvP10iFtj-_tsxuVrRzlDlZExwCq4iWHamWiWRns2T2WyndtalU1vae0CECpmHKaSqDW3tLZpWiu3eGj7uCDzm2IjySvgZOuNflsD2x32i-llCW0EYRnJveaMCLWf31mup4AO9ypWq80l46hsjnmPsGnT9ZkA4vUCXAyCFRfIcQEHOvHdfXWJ1UIA8BC6mutCSb1ihStha4DjxNDTBISZA-yDu9l4ohTsd534lbNED8m9ugzQPm5bRckJ7OCv9gHR6UH4sWmbfmHcQCBxV9YRFZ_Rk0S7RULp37awEdCb8qSMV52BOhWs7rG3f_ZHMMyFTNwRl0TIFTBopCpEbfYuyas5lLJPRENmbgj28b5WbglabCAUnYZzGEA3mKzyUrtJtTd9BYBET8Y8G76aDoBBk33e1dA5JF8iXZa7GN0GX3_zsAdjFFArmzUrjc_mAYBc0akcWYej6eRB57H23COA3fBzgbBewnRtXOeduMTEJUjUdejDcSJE2JbXFP4zcuzjzphf5lwxefZO35ZkuqBknRAk5LFKzjHl4GeZhbaZGUL85N-hWmvgTYqy7p2aaalzUYIbLZbdXlzadtSWfBGkYmPYtIHVYu6aGMXkObaJ_Dz4OpTN-3c7l0jxBU85yFYG1RmgNp2GIZVJ2pVIPFXMalOCdfgoHDQ6P8tOghAa-3ZNrGdloskbs4wXY32GSQ4oBx2uFl94NcaTM18TJrqpAz3XTsggwqAfwYvteNlytYwqkyRPLnhRby8V3QxHt8Zpk9z6NnrSltFV9wWhvdCu_mhXavAGJkOCRvzaw5E1NFW-54PAAW-lnUajpbWGlkBI3PqdICdMJaOYk1fyCKxTXpXY1X6rCpHEbmN45aFjuC_IW2JnadhQSQfT64C37jj_A5yxS_8BDU4Jx_WA_vxz3m00&lt;/a&gt; 「コマンド変換」）</target>
        </trans-unit>
        <trans-unit id="7c2c6193c962ac9067e6a490ba32a5ab03736a40" translate="yes" xml:space="preserve">
          <source>![build status](&lt;a href=&quot;https://travis-ci.org/BrewBlox/brewblox-devcon-spark.svg?branch=develop&quot;&gt;https://travis-ci.org/BrewBlox/brewblox-devcon-spark.svg?branch=develop&lt;/a&gt;)</source>
          <target state="translated">！[ビルドステータス]（&lt;a href=&quot;https://travis-ci.org/BrewBlox/brewblox-devcon-spark.svg?branch=develop&quot;&gt;https://travis-ci.org/BrewBlox/brewblox-devcon-spark.svg?branch=develop&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b4f8f1bb2d66d64787361c57b763061827bc7d48" translate="yes" xml:space="preserve">
          <source># Spark Service</source>
          <target state="translated">＃Sparkサービス</target>
        </trans-unit>
        <trans-unit id="57251adf3375dc25500671ee7d5655fa1894f682" translate="yes" xml:space="preserve">
          <source>## Features</source>
          <target state="translated">＃＃ 特徴</target>
        </trans-unit>
        <trans-unit id="9512fdecb6c8a2d8c66c62a88dd013c980064cbf" translate="yes" xml:space="preserve">
          <source>## REST API</source>
          <target state="translated">## REST API</target>
        </trans-unit>
        <trans-unit id="31aa58e6bfbcdbb9550bad0e0e0389c955edd2bf" translate="yes" xml:space="preserve">
          <source>### AliasApi ([alias_api.py](./brewblox_devcon_spark/api/alias_api.py))</source>
          <target state="translated">### AliasApi（[alias_api.py]（./ brewblox_devcon_spark / api / alias_api.py））</target>
        </trans-unit>
        <trans-unit id="9ef4aaa72469ee87c23eef707b40e5d1847da305" translate="yes" xml:space="preserve">
          <source>### Broadcaster ([broadcaster.py](./brewblox_devcon_spark/broadcaster.py))</source>
          <target state="translated">###ブロードキャスター（[broadcaster.py]（./ brewblox_devcon_spark / broadcaster.py））</target>
        </trans-unit>
        <trans-unit id="23f78ed18ec4977f864705439316255b1392f7f7" translate="yes" xml:space="preserve">
          <source>### Codec ([codec.py](./brewblox_devcon_spark/codec/codec.py))</source>
          <target state="translated">###コーデック（[codec.py]（./ brewblox_devcon_spark / codec / codec.py））</target>
        </trans-unit>
        <trans-unit id="3b7e2cfdd197530038a6326a3a7a963be076a076" translate="yes" xml:space="preserve">
          <source>### Controlbox Protocol ([commands.py](./brewblox_devcon_spark/commands.py))</source>
          <target state="translated">###コントロールボックスプロトコル（[commands.py]（./ brewblox_devcon_spark / commands.py））</target>
        </trans-unit>
        <trans-unit id="1f8a64887288c0fb22633e79e24b0442c5af4893" translate="yes" xml:space="preserve">
          <source>### Datastore ([datastore.py](./brewblox_devcon_spark/datastore.py))</source>
          <target state="translated">###データストア（[datastore.py]（./ brewblox_devcon_spark / datastore.py））</target>
        </trans-unit>
        <trans-unit id="76aeee3f6d3938e280766ee61b98f31917d44cbf" translate="yes" xml:space="preserve">
          <source>### ObjectApi ([object_api.py](./brewblox_devcon_spark/api/object_api.py))</source>
          <target state="translated">### ObjectApi（[object_api.py]（./ brewblox_devcon_spark / api / object_api.py））</target>
        </trans-unit>
        <trans-unit id="bea925839af137302f998414f79b06e1e93f20af" translate="yes" xml:space="preserve">
          <source>### RemoteApi ([remote_api.py](./brewblox_devcon_spark/api/remote_api.py))</source>
          <target state="translated">### RemoteApi（[remote_api.py]（./ brewblox_devcon_spark / api / remote_api.py））</target>
        </trans-unit>
        <trans-unit id="24e7c0cdafcd9de58f5c41991589954109d83dde" translate="yes" xml:space="preserve">
          <source>### Seeder ([seeder.py](./brewblox_devcon_spark/seeder.py))</source>
          <target state="translated">###シーダー（[seeder.py]（./ brewblox_devcon_spark / seeder.py））</target>
        </trans-unit>
        <trans-unit id="ca425530dd5ba3cfcf8e6cd236402a91accf4f8f" translate="yes" xml:space="preserve">
          <source>### SimulationCommander ([commander_sim.py](./brewblox_devcon_spark/commander_sim.py))</source>
          <target state="translated">### SimulationCommander（[commander_sim.py]（./ brewblox_devcon_spark / commander_sim.py））</target>
        </trans-unit>
        <trans-unit id="cef573f11469d707cac59f0e32fc8097d9b56541" translate="yes" xml:space="preserve">
          <source>### SparkCommander ([commander.py](./brewblox_devcon_spark/commander.py))</source>
          <target state="translated">### SparkCommander（[commander.py]（./ brewblox_devcon_spark / commander.py））</target>
        </trans-unit>
        <trans-unit id="e103e48eeb2844f5cd658d617dbd69159fbcebd2" translate="yes" xml:space="preserve">
          <source>### SparkConduit ([communication.py](./brewblox_devcon_spark/communication.py))</source>
          <target state="translated">### SparkConduit（[communication.py]（./ brewblox_devcon_spark / communication.py））</target>
        </trans-unit>
        <trans-unit id="62e8e7ef2223f731e7634e517225a8bd791c511e" translate="yes" xml:space="preserve">
          <source>### SparkController ([device.py](./brewblox_devcon_spark/device.py))</source>
          <target state="translated">### SparkController（[device.py]（./ brewblox_devcon_spark / device.py））</target>
        </trans-unit>
        <trans-unit id="3397b51fa05d2cf16f19797d8b8968bc63a0694a" translate="yes" xml:space="preserve">
          <source>### SystemApi ([system_api.py](./brewblox_devcon_spark/api/system_api.py))</source>
          <target state="translated">### SystemApi（[system_api.py]（./ brewblox_devcon_spark / api / system_api.py））</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">、</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">、および</target>
        </trans-unit>
        <trans-unit id="c9f5060da7ba2994b4d2bec37ab6f7603761ebda" translate="yes" xml:space="preserve">
          <source>All objects can have user-defined names. The AliasAPI allows users to set or change those names.</source>
          <target state="translated">すべてのオブジェクトは、ユーザー定義の名前を持つことができます。AliasAPIを使用すると、ユーザーはこれらの名前を設定したり変更したりすることができます。</target>
        </trans-unit>
        <trans-unit id="31ff691a74743f800be9f1d7008840d1504c6226" translate="yes" xml:space="preserve">
          <source>Any command is modified both incoming and outgoing: ID&amp;rsquo;s are converted using the datastore, data is sent to codec, and everything is wrapped in the correct command before it is sent to</source>
          <target state="translated">コマンドは受信と送信の両方で変更されます。IDはデータストアを使用して変換され、データはコーデックに送信され、送信前にすべてが正しいコマンドにラップされます。</target>
        </trans-unit>
        <trans-unit id="c2862d4a6234b896d34417823d0fa10063109aa7" translate="yes" xml:space="preserve">
          <source>Broadcaster</source>
          <target state="translated">ブロードキャスター</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">コマンド</target>
        </trans-unit>
        <trans-unit id="70b9ec5a80745aeedd0a95c348e8dc50c752be27" translate="yes" xml:space="preserve">
          <source>Communication with Spark controllers</source>
          <target state="translated">Sparkコントローラとの通信</target>
        </trans-unit>
        <trans-unit id="14d04f1b71d3c6de69a896d4d0ced73424c0afa5" translate="yes" xml:space="preserve">
          <source>Direct communication with the Spark is handled here, for both USB and TCP connections. Data is not decoded or interpreted, but passed on to the</source>
          <target state="translated">Sparkとの直接通信は、USB接続とTCP接続の両方でここで処理されます。データはデコードや解釈されずに</target>
        </trans-unit>
        <trans-unit id="0e6b75713ab34fd32ece4e0ba0c07223151067d7" translate="yes" xml:space="preserve">
          <source>Examples are:
* Setting Spark system clock
* Reading controller-specific data from the remote datastore</source>
          <target state="translated">例としては、以下のようなものがあります。*Sparkシステムクロックの設定*リモートデータストアからのコントローラ固有のデータの読み込み</target>
        </trans-unit>
        <trans-unit id="2a5b927eca671d6bc6910c2323df00f81c4bd7e9" translate="yes" xml:space="preserve">
          <source>For this reason, the object payload in Controlbox consists of two parts: a numerical</source>
          <target state="translated">このため、Controlboxのオブジェクトペイロードは2つの部分から構成されています。</target>
        </trans-unit>
        <trans-unit id="6159781ea1a691593a69662b90e67cddb2f65a5a" translate="yes" xml:space="preserve">
          <source>For when using an actual Spark is inconvenient, there is a simulation version. It serves as a drop-in replacement for the real commander: it handles commands, and returns sensible values.
Commands are encoded/decoded, to closely match the real situation.</source>
          <target state="translated">実際のSparkを使うのが不便な場合のために、シミュレーションバージョンがあります。コマンドを処理し、適切な値を返します。コマンドは実際の状況に合わせてエンコード/デコードされています。</target>
        </trans-unit>
        <trans-unit id="68a762c93b575ac13aaae023190fa40350323c3b" translate="yes" xml:space="preserve">
          <source>Here, the data will likely be picked up by the [History Service](&lt;a href=&quot;https://github.com/BrewBlox/brewblox-history&quot;&gt;https://github.com/BrewBlox/brewblox-history&lt;/a&gt;).</source>
          <target state="translated">ここでは、データはおそらく[履歴サービス]（&lt;a href=&quot;https://github.com/BrewBlox/brewblox-history&quot;&gt;https://github.com/BrewBlox/brewblox-history&lt;/a&gt;）によって取得されます。</target>
        </trans-unit>
        <trans-unit id="d48b2f16162c9c575e3e5edffd15128d0e5c21ab" translate="yes" xml:space="preserve">
          <source>ID, and the</source>
          <target state="translated">IDと</target>
        </trans-unit>
        <trans-unit id="c3fd776a3423ef5c9074a8c22977d6387a593d41" translate="yes" xml:space="preserve">
          <source>In the commands module, this protocol of bits and bytes is encapsulated by</source>
          <target state="translated">コマンドモジュールでは、このビットとバイトのプロトコルは</target>
        </trans-unit>
        <trans-unit id="1919f1758cdfc9fbb7343fa2fbccfe4039aacbbb" translate="yes" xml:space="preserve">
          <source>In the sensor/heater example, the Spark with the heater would be configured to have a dummy sensor object linked to the heater.</source>
          <target state="translated">センサ/ヒータの例では、ヒータ付きスパークは、ヒータと連動したダミーセンサオブジェクトを有するように構成される。</target>
        </trans-unit>
        <trans-unit id="51c5e6c66a32d84738c392373f68ff8b24e06b2d" translate="yes" xml:space="preserve">
          <source>Instead of directly reading a sensor, this dummy object is updated by the service whenever it receives an update from the master object (the real sensor).</source>
          <target state="translated">このダミーオブジェクトは、センサを直接読み込むのではなく、マスタオブジェクト(本物のセンサ)からの更新を受けるたびに、サービスによって更新されます。</target>
        </trans-unit>
        <trans-unit id="8310292159fd6313938a08accff3cf130ba890b6" translate="yes" xml:space="preserve">
          <source>Object metadata is persisted to files. This does not include object settings - these are the responsibility of the Spark itself.</source>
          <target state="translated">オブジェクトのメタデータはファイルに永続化されます。これにはオブジェクトの設定は含まれません。</target>
        </trans-unit>
        <trans-unit id="86df7728fe17f2700924bcc5f5fe7a4ddde0ae26" translate="yes" xml:space="preserve">
          <source>Occasionally, it is desirable for multiple Sparks to work in concert. One might be connected to a temperature sensor, while the other controls a heater.</source>
          <target state="translated">時折、複数のスパークが協調して動作することが望ましい場合があります。1つは温度センサーに接続され、もう1つはヒーターを制御している場合があります。</target>
        </trans-unit>
        <trans-unit id="c8ea51a16abcf355e90f1a203cf0a5e31c07139c" translate="yes" xml:space="preserve">
          <source>Offers full CRUD (Create, Read, Update, Delete) functionality for Spark objects.</source>
          <target state="translated">SparkオブジェクトのCRUD (Create,Read,Update,Delete)機能を提供します。</target>
        </trans-unit>
        <trans-unit id="65e069f8655ea7e536d1cbee8eec755a43662076" translate="yes" xml:space="preserve">
          <source>Remote blocks allow synchronization between master and slave blocks.</source>
          <target state="translated">リモートブロックは、マスターブロックとスレーブブロック間の同期を可能にします。</target>
        </trans-unit>
        <trans-unit id="908537a3b58a5eb1cffad25febee52b04e948163" translate="yes" xml:space="preserve">
          <source>Serial communication is asynchronous: requests and responses are not linked at the transport layer.</source>
          <target state="translated">シリアル通信は非同期です。リクエストとレスポンスはトランスポート層ではリンクされていません。</target>
        </trans-unit>
        <trans-unit id="e281317dd932a559cfd6c1f137ec6587aa214324" translate="yes" xml:space="preserve">
          <source>Services are capable of interacting with a BrewPi Spark that has pre-existing blocks, but will be unable to display objects with a human-meaningful name.</source>
          <target state="translated">サービスは、既存のブロックを持つBrewPi Sparkと対話することができますが、人間が意味のある名前を持つオブジェクトを表示することはできません。</target>
        </trans-unit>
        <trans-unit id="7dd962dc5e1ae764ce8e11902683466bc92808b5" translate="yes" xml:space="preserve">
          <source>Some actions are required when connecting to a (new) Spark controller.
The Seeder feature waits for a connection to be made, and then performs these one-time tasks.</source>
          <target state="translated">(新しい)Sparkコントローラに接続する際には、いくつかのアクションが必要になります。Seeder機能は、接続が確立されるのを待ってから、これらの1回限りのタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="3016f293c6d4460fa1d5d8732d7bf43b17aa4d17" translate="yes" xml:space="preserve">
          <source>SparkCommander</source>
          <target state="translated">スパークコマンダー</target>
        </trans-unit>
        <trans-unit id="175c5657829bff4cbc6bfdf7004a6d8508e09c2e" translate="yes" xml:space="preserve">
          <source>SparkController</source>
          <target state="translated">スパークコントローラ</target>
        </trans-unit>
        <trans-unit id="869b5440b7c869e55cfca4e97df1eebd9b85a465" translate="yes" xml:space="preserve">
          <source>System objects are distinct from normal objects in that they can&amp;rsquo;t be created or deleted by the user.</source>
          <target state="translated">システムオブジェクトは、ユーザーが作成または削除できないという点で、通常のオブジェクトとは異なります。</target>
        </trans-unit>
        <trans-unit id="a754b8699166a8f7ea2b318dc55f9452199234fe" translate="yes" xml:space="preserve">
          <source>The Spark communicates using the [Controlbox protocol](&lt;a href=&quot;https://brewblox.netlify.com/dev/reference/spark_commands.html&quot;&gt;https://brewblox.netlify.com/dev/reference/spark_commands.html&lt;/a&gt;). A set of commands is defined to manage blocks on the controller.</source>
          <target state="translated">Sparkは、[Controlboxプロトコル]（&lt;a href=&quot;https://brewblox.netlify.com/dev/reference/spark_commands.html&quot;&gt;https://brewblox.netlify.com/dev/reference/spark_commands.html&lt;/a&gt;）を使用して通信します。コントローラー上のブロックを管理するための一連のコマンドが定義されています。</target>
        </trans-unit>
        <trans-unit id="2a134a20abbe6708927e8e86ed3162f34dff6577" translate="yes" xml:space="preserve">
          <source>The Spark service handles connectivity for the BrewPi Spark controller.</source>
          <target state="translated">Sparkサービスは、BrewPi Sparkコントローラの接続を処理します。</target>
        </trans-unit>
        <trans-unit id="f1f3974328d629f037fb22c6bea77d07909a6ebe" translate="yes" xml:space="preserve">
          <source>The Spark service is not responsible for retaining any object data. Any requests are encoded and forwarded to the Spark.</source>
          <target state="translated">Sparkサービスはオブジェクトデータを保持する責任を負いません。すべてのリクエストはエンコードされてSparkに転送されます。</target>
        </trans-unit>
        <trans-unit id="5e093aeb4a9a8bc5ca121b68c7d7499fd5f90a37" translate="yes" xml:space="preserve">
          <source>The codec is responsible for converting JSON-serializable dicts to byte arrays, and vice versa. A specific transcoder is defined for each object.</source>
          <target state="translated">コーデックは、JSONでシリアライズ可能なディクショナリをバイト配列に変換したり、その逆を行ったりします。それぞれのオブジェクトに対して特定のトランスコーダが定義されています。</target>
        </trans-unit>
        <trans-unit id="b6014bbd56a751c5d2efb3dcd2faccb3ee5f0264" translate="yes" xml:space="preserve">
          <source>The service must keep track of object metadata not directly persisted by the controller. This includes user-defined object names and descriptions.</source>
          <target state="translated">サービスは、コントローラが直接保持していないオブジェクトのメタデータを追跡する必要があります。これには、ユーザ定義のオブジェクト名と説明が含まれます。</target>
        </trans-unit>
        <trans-unit id="ffc34338ef8a95e2cdac7f60300d133a9997d1d4" translate="yes" xml:space="preserve">
          <source>This includes USB/TCP communication with the controller, but also encoding, decoding, and broadcasting data.</source>
          <target state="translated">コントローラとのUSB/TCP通信だけでなく、データのエンコード、デコード、ブロードキャストなども含まれています。</target>
        </trans-unit>
        <trans-unit id="77309ed34bc9fd06a11ebd90639a0cd3a62518ea" translate="yes" xml:space="preserve">
          <source>To reduce the impact of this bottleneck, and to persist historic data,</source>
          <target state="translated">このボトルネックの影響を軽減し、過去のデータを永続化するために</target>
        </trans-unit>
        <trans-unit id="3319390e0f6d1ea5b167209a3a83789d7a5bc9e1" translate="yes" xml:space="preserve">
          <source>While the controller &amp;lt;-&amp;gt; service communication uses the Controlbox protocol, individual objects are encoded separately, using Google&amp;rsquo;s [Protocol Buffers](&lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;).</source>
          <target state="translated">コントローラー&amp;lt;-&amp;gt;サービス通信はControlboxプロトコルを使用しますが、個々のオブジェクトは、Googleの[プロトコルバッファー]（&lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;）を使用して個別にエンコードされます。</target>
        </trans-unit>
        <trans-unit id="846bb95efa5fa77e706ae93e4085c324ccff0da7" translate="yes" xml:space="preserve">
          <source>bytes.</source>
          <target state="translated">バイトになります。</target>
        </trans-unit>
        <trans-unit id="088d042cc974bd92f69ad955a0bde3e863dbc7fe" translate="yes" xml:space="preserve">
          <source>classes. They are capable of converting a Python dict to a hexadecimal byte string, and vice versa.</source>
          <target state="translated">クラスを使用しています。Pythonのdictを16進数のバイト文字列に変換したり、その逆も可能です。</target>
        </trans-unit>
        <trans-unit id="d061f60af2b575d74177d705546a29f3e357d962" translate="yes" xml:space="preserve">
          <source>codec</source>
          <target state="translated">コーデック</target>
        </trans-unit>
        <trans-unit id="43e251c7355e436d09fb40d0f437cc5c5d1ba2a6" translate="yes" xml:space="preserve">
          <source>combines the functionality of</source>
          <target state="translated">の機能を兼ね備えています。</target>
        </trans-unit>
        <trans-unit id="bb8e5f5deaa683d5a9811fbdfb0ea93c2c7dd641" translate="yes" xml:space="preserve">
          <source>commander</source>
          <target state="translated">司令官</target>
        </trans-unit>
        <trans-unit id="37929e0a3b9a27eb82473ae04ede11fbc9f9b00a" translate="yes" xml:space="preserve">
          <source>commands</source>
          <target state="translated">命令</target>
        </trans-unit>
        <trans-unit id="c12b8c889e8734d2695eb93f99645715c0956652" translate="yes" xml:space="preserve">
          <source>datastore</source>
          <target state="translated">データストア</target>
        </trans-unit>
        <trans-unit id="69e71c02c4c85bdca2d7f62a259fae5045700c9d" translate="yes" xml:space="preserve">
          <source>is responsible for building and sending a command, and then matching it with a subsequently received response.</source>
          <target state="translated">は、コマンドを構築して送信し、その後に受信したレスポンスとマッチングさせる役割を担っています。</target>
        </trans-unit>
        <trans-unit id="3619f9ccae3986cfda42d442d7c0c1c9201e89d8" translate="yes" xml:space="preserve">
          <source>object_data</source>
          <target state="translated">オブジェクトデータ</target>
        </trans-unit>
        <trans-unit id="9e5e963faf3962475512247f6d6b23551b48e96e" translate="yes" xml:space="preserve">
          <source>object_type</source>
          <target state="translated">オブジェクトタイプ</target>
        </trans-unit>
        <trans-unit id="75d1a2ea2b983baf379d24a6d87068ce59da9003" translate="yes" xml:space="preserve">
          <source>reads all objects every few seconds, and broadcasts their values to the eventbus.</source>
          <target state="translated">は数秒ごとにすべてのオブジェクトを読み込み、その値をイベントバスにブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="b1b4a1231900c2bb4555692e3fc524f9863c4592" translate="yes" xml:space="preserve">
          <source>to allow interaction with the Spark using Pythonic functions.</source>
          <target state="translated">Pythonic関数を使用してSparkとのインタラクションを可能にします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
