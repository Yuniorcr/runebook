<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/av/">
    <body>
      <group id="av">
        <trans-unit id="a904d18b8392ae7217a99dd80d10544884f8b9a2" translate="yes" xml:space="preserve">
          <source>Alternative installation methods</source>
          <target state="translated">代替設置方法</target>
        </trans-unit>
        <trans-unit id="6b2125538cd18817a07a94d43ee7b8adfec664a8" translate="yes" xml:space="preserve">
          <source>And if you want to build from the absolute source (for development or testing):</source>
          <target state="translated">そして、絶対的なソースから構築したい場合(開発やテストの場合)。</target>
        </trans-unit>
        <trans-unit id="1396fba7cf549cf833a11e054ef5b370181152ec" translate="yes" xml:space="preserve">
          <source>Another way of installing PyAV is via &lt;a href=&quot;https://conda-forge.github.io/&quot;&gt;conda-forge&lt;/a&gt;:</source>
          <target state="translated">PyAVをインストールする別の方法は&lt;a href=&quot;https://conda-forge.github.io/&quot;&gt;conda-forgeを使用すること&lt;/a&gt;です：</target>
        </trans-unit>
        <trans-unit id="19174812bc39647b418f1d6b59a95ff577fad29b" translate="yes" xml:space="preserve">
          <source>But where you can't work without it, PyAV is a critical tool.</source>
          <target state="translated">しかし、これがないと仕事ができないところでは、PyAVは重要なツールです。</target>
        </trans-unit>
        <trans-unit id="7d4502c56320dc8ff6b7d59b90a76f7478a2da82" translate="yes" xml:space="preserve">
          <source>Due to the complexity of the dependencies, PyAV is not always the easiest Python package to install from source. Since release 8.0.0 binary wheels are provided on &lt;a href=&quot;https://pypi.org/project/av&quot;&gt;PyPI&lt;/a&gt; for Linux, Mac and Windows linked against a modern FFmpeg. You can install these wheels by running:</source>
          <target state="translated">依存関係は複雑であるため、PyAVは常にソースからインストールするのに最も簡単なPythonパッケージではありません。リリース8.0.0以降、バイナリホイールは最新のFFmpegにリンクされたLinux、Mac、およびWindows用の&lt;a href=&quot;https://pypi.org/project/av&quot;&gt;PyPI&lt;/a&gt;で提供されます。次のコマンドを実行して、これらのホイールを取り付けることができます。</target>
        </trans-unit>
        <trans-unit id="e28fdbdb978978c7753e85a08cf8c78c4d508985" translate="yes" xml:space="preserve">
          <source>Have fun, &lt;a href=&quot;http://pyav.org/docs&quot;&gt;read the docs&lt;/a&gt;, &lt;a href=&quot;https://gitter.im/PyAV-Org&quot;&gt;come chat with us&lt;/a&gt;, and good luck!</source>
          <target state="translated">楽しみを持って、&lt;a href=&quot;http://pyav.org/docs&quot;&gt;ドキュメントを読んで&lt;/a&gt;、&lt;a href=&quot;https://gitter.im/PyAV-Org&quot;&gt;私たちとのチャットに来&lt;/a&gt;て、幸運を！</target>
        </trans-unit>
        <trans-unit id="fc1576159d3dc6c02ccd3f079a479c98ddcbdb01" translate="yes" xml:space="preserve">
          <source>If you want to use your existing FFmpeg/Libav, the C-source version of PyAV is on &lt;a href=&quot;https://pypi.org/project/av&quot;&gt;PyPI&lt;/a&gt; too:</source>
          <target state="translated">既存のFFmpeg / Libavを使用する場合は、PyAVのCソースバージョンも&lt;a href=&quot;https://pypi.org/project/av&quot;&gt;PyPIにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="4eb1348c0e2c582cd5b7f9ab64d73581507ad610" translate="yes" xml:space="preserve">
          <source>PyAV</source>
          <target state="translated">パイエーヴ</target>
        </trans-unit>
        <trans-unit id="3d049f032f581f7cc4bda1185838f6521e01baf4" translate="yes" xml:space="preserve">
          <source>PyAV is a Pythonic binding for the &lt;a href=&quot;http://ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt; libraries. We aim to provide all of the power and control of the underlying library, but manage the gritty details as much as possible.</source>
          <target state="translated">PyAVは&lt;a href=&quot;http://ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt;ライブラリのPythonicバインディングです。基盤となるライブラリのすべての機能と制御を提供することを目指していますが、ザラザラした詳細を可能な限り管理します。</target>
        </trans-unit>
        <trans-unit id="45bc0b249b25b9cc0a8ec7a8e8f7a35ce0366de9" translate="yes" xml:space="preserve">
          <source>PyAV is for direct and precise access to your media via containers, streams, packets, codecs, and frames. It exposes a few transformations of that data, and helps you get your data to/from other packages (e.g. Numpy and Pillow).</source>
          <target state="translated">PyAV はコンテナ、ストリーム、パケット、コーデック、フレームを介してメディアに直接かつ正確にアクセスするためのものです。PyAV はデータのいくつかの変換を公開し、他のパッケージ (Numpy や Pillow など)との間でデータをやり取りするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="44240bfca9a282efe180a6bb4d1ea5924cb394bf" translate="yes" xml:space="preserve">
          <source>Pythonic bindings for FFmpeg's libraries.</source>
          <target state="translated">FFmpeg のライブラリの Pythonic バインディング。</target>
        </trans-unit>
        <trans-unit id="f60d4ee6164ccea2e3ab458d0390f3745c934ce8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://conda.io/docs/install/quick.html&quot;&gt;Conda quick install&lt;/a&gt; docs to get started with (mini)Conda.</source>
          <target state="translated">（mini）Condaを使い始めるには、&lt;a href=&quot;https://conda.io/docs/install/quick.html&quot;&gt;Condaクイックインストール&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f7f1b8fbb95c4c0aa365556081dc681517c77ff5" translate="yes" xml:space="preserve">
          <source>This power does come with some responsibility as working with media is horrendously complicated and PyAV can't abstract it away or make all the best decisions for you. If the &lt;code&gt;ffmpeg&lt;/code&gt; command does the job without you bending over backwards, PyAV is likely going to be more of a hindrance than a help.</source>
          <target state="translated">メディアでの作業は非常に複雑であり、PyAVはそれを抽象化したり、最適な決定を下したりできないため、この力にはある程度の責任が伴います。場合 &lt;code&gt;ffmpeg&lt;/code&gt; のコマンドを使用して、後方に曲げずに仕事をして、PyAVは、おそらくより多くの障害の助けよりになるだろう。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
