<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/multiprocessing-logging/">
    <body>
      <group id="multiprocessing-logging">
        <trans-unit id="c9ec5e5657e5f40928b1752779c215a60aee96f2" translate="yes" xml:space="preserve">
          <source>Before you start logging but after you configure the logging framework (maybe with &lt;code&gt;logging.basicConfig(...)&lt;/code&gt;), do the following:</source>
          <target state="translated">ロギングを開始する前ですが、ロギングフレームワークを構成した後（おそらく &lt;code&gt;logging.basicConfig(...)&lt;/code&gt; を使用して）、以下を実行します。</target>
        </trans-unit>
        <trans-unit id="b873d9f38336208e261114b54175807f9972aeb6" translate="yes" xml:space="preserve">
          <source>It's currently tested in Linux and Python 2.7 &amp;amp; 3.5+.</source>
          <target state="translated">現在、LinuxおよびPython2.7および3.5以降でテストされています。</target>
        </trans-unit>
        <trans-unit id="c2ac3f477d870fbba8eae3b8f4f962e61493b4c7" translate="yes" xml:space="preserve">
          <source>Later, several improvements have been contributed.</source>
          <target state="translated">その後、いくつかの改良が加えられました。</target>
        </trans-unit>
        <trans-unit id="c0abfb5af678766e21d32b10a7c67a67e59edc95" translate="yes" xml:space="preserve">
          <source>Logger for multiprocessing applications</source>
          <target state="translated">マルチプロセッシングアプリケーション用ロガー</target>
        </trans-unit>
        <trans-unit id="e216d13ccd3b6d025cd7a30a85e0e1a75584913b" translate="yes" xml:space="preserve">
          <source>Only works on POSIX systems and only Linux is supported. It does not work on Windows.</source>
          <target state="translated">POSIXシステム上でのみ動作し、Linuxのみサポートされています。Windowsでは動作しません。</target>
        </trans-unit>
        <trans-unit id="44ab85a252adb7ade8ca36fec4157a862c1f725f" translate="yes" xml:space="preserve">
          <source>Origin</source>
          <target state="translated">由来</target>
        </trans-unit>
        <trans-unit id="83f6511b839576bf11e8b26a237fcce6a7459f8c" translate="yes" xml:space="preserve">
          <source>Pypy appears to be working, recently.</source>
          <target state="translated">ピピィは仕事をしているように見えます、最近。</target>
        </trans-unit>
        <trans-unit id="0a8b9005646d33d9dd1702dcff3a576b72a4fbab" translate="yes" xml:space="preserve">
          <source>Pypy3 hangs on the tests so I don't recommend using it.</source>
          <target state="translated">Pypy3はテストでハングアップするので、使うのはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="24c38bee8b6b9c9ab114f4086a361b67b6cc369a" translate="yes" xml:space="preserve">
          <source>This library was taken verbatim from a &lt;a href=&quot;http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python&quot;&gt;StackOverflow post&lt;/a&gt;
and extracted into a module so that I wouldn't have to copy the code in every
project.</source>
          <target state="translated">このライブラリは、&lt;a href=&quot;http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python&quot;&gt;StackOverflowの投稿&lt;/a&gt;から逐語的に取得 され、モジュールに抽出されたため、すべてのプロジェクトでコードをコピーする必要はありません。</target>
        </trans-unit>
        <trans-unit id="7276a05e5c32bff422597c6bff461345f6e7381e" translate="yes" xml:space="preserve">
          <source>This simple module implements a &lt;code&gt;Handler&lt;/code&gt; that when set on the root
&lt;code&gt;Logger&lt;/code&gt; will handle tunneling the records to the main process so that
they are handled correctly.</source>
          <target state="translated">この単純なモジュールは、ルート &lt;code&gt;Logger&lt;/code&gt; に設定されたときに、レコードが正しく処理されるようにメインプロセスへのレコードのトンネリングを処理する &lt;code&gt;Handler&lt;/code&gt; を 実装します。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="95cb5cb7bcfe6a3aabf66ddb3b4bff0f937a630a" translate="yes" xml:space="preserve">
          <source>When using a Pool, make sure &lt;code&gt;install_mp_handler&lt;/code&gt; is called before the Pool is instantiated, for example:</source>
          <target state="translated">プールを使用する場合は、プールがインスタンス化される前に &lt;code&gt;install_mp_handler&lt;/code&gt; が呼び出されていることを確認してください。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="5840eaad783ad072e619ad972706a1c8a13226b7" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;multiprocessing&lt;/code&gt; module, logging becomes less useful since
sub-processes should log to individual files/streams or there's the risk of
records becoming garbled.</source>
          <target state="translated">&lt;code&gt;multiprocessing&lt;/code&gt; モジュールを使用する場合、サブプロセスは個々のファイル/ストリームにログを記録する必要があるため、ログの有用性が低下します。そうしないと、レコードが文字化けするリスクがあります。</target>
        </trans-unit>
        <trans-unit id="670f85233f2563499767188601a939172b658623" translate="yes" xml:space="preserve">
          <source>With multiprocessing.Pool</source>
          <target state="translated">マルチプロセシングとプール</target>
        </trans-unit>
        <trans-unit id="82b49dcdd5da0962de992503a9a8b0b5fa0a526a" translate="yes" xml:space="preserve">
          <source>and that's it.</source>
          <target state="translated">と、それだけです。</target>
        </trans-unit>
        <trans-unit id="66b7cda3597658cfdf4bc3b0f786070b25e2a1c3" translate="yes" xml:space="preserve">
          <source>multiprocessing-logging</source>
          <target state="translated">マルチプロセッシングロギング</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
