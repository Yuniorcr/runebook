<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/flip/">
    <body>
      <group id="flip">
        <trans-unit id="ac838a2537511b4fc5bc1bc99f97d9784cb290bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flip&lt;/strong&gt; is a logical framework written in Python.  A logical framework is
a library for defining logics and writing applications such as theorem
provers.  One Flip application is a proof checker for entering and
editing proofs in natural deduction style.  Here is some output from
the checker, generated from a Python proof script:</source>
          <target state="translated">&lt;strong&gt;Flip&lt;/strong&gt;は、Pythonで記述された論理フレームワークです。論理フレームワークは、論理を定義し、定理証明器などのアプリケーションを作成するためのライブラリです。 1つのフリップアプリケーションは、自然演繹スタイルでプルーフを入力および編集するためのプルーフチェッカーです。 Pythonプルーフスクリプトから生成されたチェッカーからの出力は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="98f9260f05eb51cb0e0bb2dbb26c467ba6b79b51" translate="yes" xml:space="preserve">
          <source>F L i P : Logical Framework in Python</source>
          <target state="translated">F L i P:Pythonの論理フレームワーク</target>
        </trans-unit>
        <trans-unit id="6a63c0fec8b5d1246c5634345cb0ddbd176afd83" translate="yes" xml:space="preserve">
          <source>Flip was undertaken as a Python programming exercise.  It is not
intended to compete with industrial-strength theorem provers such as HOL,
nor with nicely-designed educational provers such as Jape.
That said, the checker is quite capable of working the examples and
exercises in university-level textbooks on logic for computer science or
mathematics, such as Kaye, Huth and Ryan, and Bornat.</source>
          <target state="translated">FlipはPythonのプログラミング演習として行われました。HOLのような産業用の強力な定理証明機や、Japeのようなデザイン性の高い教育用証明機と競合することを意図したものではありません。とはいえ、このチェッカーは、Kaye,Huth and Ryan,Bornat などの大学レベルのコンピュータサイエンスや数学のための論理学の教科書に載っている例題や演習問題にも十分に対応できます。</target>
        </trans-unit>
        <trans-unit id="1cc62108e4ba2253d28ad6af13e8bcd651280ca2" translate="yes" xml:space="preserve">
          <source>The checker can use different logics; Flip comes with several.  You
can add another logic, or add axioms and derived rules, by writing a
module in Python.  Python is both the object language and the
metalanguage.  Formulas, inference rules, and entire proofs are Python
expressions.  Prover commands are Python functions.  The Python
interpreter itself is the only user interface to the proof checker
application.  (It is not necessary to know much Python to use the
checker.)</source>
          <target state="translated">チェッカーは異なるロジックを使うことができます。Pythonでモジュールを書くことで、別のロジックを追加したり、公理や派生ルールを追加したりすることができます。Python はオブジェクト言語であり、メタ言語でもあります。定式、推論規則、証明全体はPythonの式です。プローバのコマンドはPythonの関数です。Pythonインタプリタ自体が、証明チェッカーアプリケーションの唯一のユーザーインターフェースです。(チェッカーを使用するためにPythonの知識はあまり必要ありません)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
