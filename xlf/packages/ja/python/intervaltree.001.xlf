<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/intervaltree/">
    <body>
      <group id="intervaltree">
        <trans-unit id="04524b5a0dc46b5e6579936dda1bfecd98c49a78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/chaimleib/intervaltree&quot;&gt;Chaim Leib Halbert&lt;/a&gt;, 2013-2020</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chaimleib/intervaltree&quot;&gt;Chaim Leib Halbert&lt;/a&gt;、2013-2020</target>
        </trans-unit>
        <trans-unit id="a46af0faf1e893c1c4018d69464d96d5f0c77a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/konstantint/PyIntervalTree&quot;&gt;konstantint/Konstantin Tretyakov&lt;/a&gt; of the University of Tartu (Estonia)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/konstantint/PyIntervalTree&quot;&gt;&lt;/a&gt;タルトゥ大学（エストニア）のkonstantint / Konstantin Tretyakov</target>
        </trans-unit>
        <trans-unit id="1fc4a8fc5511b157c7b039a3f5dd0040e58a892d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lmcarril/intervaltree&quot;&gt;lmcarril/Luis M. Carril&lt;/a&gt; of the Karlsruhe Institute for Technology (Germany)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lmcarril/intervaltree&quot;&gt;&lt;/a&gt;カールスルーエ工科大学（ドイツ）のlmcarril / Luis M. Carril</target>
        </trans-unit>
        <trans-unit id="6146a7e9fe347e3cfc3a157b01d20d7ce2e881be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntervalTree(tree)&lt;/code&gt;    (&lt;code&gt;Interval&lt;/code&gt; objects are same as those in tree)</source>
          <target state="translated">&lt;code&gt;IntervalTree(tree)&lt;/code&gt; （ &lt;code&gt;Interval&lt;/code&gt; オブジェクトはtreeのものと同じです）</target>
        </trans-unit>
        <trans-unit id="322f4da58e37a53a2ee5648a78e14cb15b840885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chop(begin, end)&lt;/code&gt;      (slice intervals and remove everything between &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, optionally modifying the data fields of the chopped-up intervals)</source>
          <target state="translated">&lt;code&gt;chop(begin, end)&lt;/code&gt; （間隔をスライスし、 &lt;code&gt;begin&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 間のすべてを削除します。オプションで、切り刻まれた間隔のデータフィールドを変更します）</target>
        </trans-unit>
        <trans-unit id="5a3b796a208e1ed3c243046230016c0d683e3d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;interval_obj in tree&lt;/code&gt;              (this is fastest, O(1))</source>
          <target state="translated">&lt;code&gt;interval_obj in tree&lt;/code&gt; （これが最速、O（1））</target>
        </trans-unit>
        <trans-unit id="d10ce8cc9ec40360895d1905cf65b5d97d26103d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;list(tree)&lt;/code&gt;            (ditto)</source>
          <target state="translated">&lt;code&gt;list(tree)&lt;/code&gt; （同上）</target>
        </trans-unit>
        <trans-unit id="c36b3a500dec83bd2aa5998ad8ca64e74627291b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge_equals()&lt;/code&gt; (joins intervals with matching ranges into a single interval, optionally merging the data fields)</source>
          <target state="translated">&lt;code&gt;merge_equals()&lt;/code&gt; （一致する範囲の間隔を単一の間隔に結合し、オプションでデータフィールドをマージします）</target>
        </trans-unit>
        <trans-unit id="a21683741a9b25054314a6db5fcd9f312586cf1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;merge_overlaps()&lt;/code&gt; (joins overlapping intervals into a single interval, optionally merging the data fields)</source>
          <target state="translated">&lt;code&gt;merge_overlaps()&lt;/code&gt; （重複する間隔を単一の間隔に結合し、オプションでデータフィールドをマージします）</target>
        </trans-unit>
        <trans-unit id="0678d9af5af49f969641f60eb443df8dbf96fa99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set(tree)&lt;/code&gt;             (can later be fed into &lt;code&gt;IntervalTree()&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;set(tree)&lt;/code&gt; （後で &lt;code&gt;IntervalTree()&lt;/code&gt; に入力できます）</target>
        </trans-unit>
        <trans-unit id="f6ba1482652b98b8ac5232e5a3ac04f6b753e8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice(point)&lt;/code&gt;          (slice intervals at &lt;code&gt;point&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;slice(point)&lt;/code&gt; （ATスライス間隔 &lt;code&gt;point&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2fa3dcbbfc68f0ca5355236163dde37cd75ca219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;split_overlaps()&lt;/code&gt;      (slice at all interval boundaries, optionally modifying the data field)</source>
          <target state="translated">&lt;code&gt;split_overlaps()&lt;/code&gt; （すべての間隔境界でスライスし、オプションでデータフィールドを変更します）</target>
        </trans-unit>
        <trans-unit id="a70e0cc6b12277c35747b19b634a7a6978f0925a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.at(point)&lt;/code&gt;                    (same as previous)</source>
          <target state="translated">&lt;code&gt;tree.at(point)&lt;/code&gt; （前と同じ）</target>
        </trans-unit>
        <trans-unit id="804a410466292ce3af592a583d3f598086a6e2be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.begin()&lt;/code&gt;          (the &lt;code&gt;begin&lt;/code&gt; coordinate of the leftmost interval)</source>
          <target state="translated">&lt;code&gt;tree.begin()&lt;/code&gt; （左端の間隔の &lt;code&gt;begin&lt;/code&gt; 座標）</target>
        </trans-unit>
        <trans-unit id="2986321f494f588dd65f4cbfa6049b1e81ee4c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.copy()&lt;/code&gt;           (&lt;code&gt;Interval&lt;/code&gt; objects are shallow copies of those in tree)</source>
          <target state="translated">&lt;code&gt;tree.copy()&lt;/code&gt; （ &lt;code&gt;Interval&lt;/code&gt; オブジェクトはツリー内のオブジェクトの浅いコピーです）</target>
        </trans-unit>
        <trans-unit id="493abc2d8a4ef3341a236f4c994f1ecab05c0a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.discard(interval)&lt;/code&gt;            (quiet if not present)</source>
          <target state="translated">&lt;code&gt;tree.discard(interval)&lt;/code&gt; （存在しない場合は静か）</target>
        </trans-unit>
        <trans-unit id="752290a25e0391002c3ec4173400a290f2c60c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.discardi(begin, end, data)&lt;/code&gt;   (short for &lt;code&gt;tree.discard(Interval(begin, end, data))&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tree.discardi(begin, end, data)&lt;/code&gt; （ &lt;code&gt;tree.discard(Interval(begin, end, data))&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7937715f207005d3c7b09712e8d21fa872075c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.end()&lt;/code&gt;            (the &lt;code&gt;end&lt;/code&gt; coordinate of the rightmost interval)</source>
          <target state="translated">&lt;code&gt;tree.end()&lt;/code&gt; （右端の間隔の &lt;code&gt;end&lt;/code&gt; 座標）</target>
        </trans-unit>
        <trans-unit id="6153e4f23ef51bccb242eec308aee081dd62380d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.overlap(begin, end)&lt;/code&gt;          (same as previous)</source>
          <target state="translated">&lt;code&gt;tree.overlap(begin, end)&lt;/code&gt; （前と同じ）</target>
        </trans-unit>
        <trans-unit id="2c2c341f96b3c11ca5a8006039e750d23816975f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.remove(interval)&lt;/code&gt;             (raises &lt;code&gt;ValueError&lt;/code&gt; if not present)</source>
          <target state="translated">&lt;code&gt;tree.remove(interval)&lt;/code&gt; （存在しない場合は &lt;code&gt;ValueError&lt;/code&gt; を発生させます）</target>
        </trans-unit>
        <trans-unit id="f45a9b3ab2d23be6a3c5a42fe94e506b491af9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.remove_envelop(begin, end)&lt;/code&gt;   (removes all enveloped in the range)</source>
          <target state="translated">&lt;code&gt;tree.remove_envelop(begin, end)&lt;/code&gt; （範囲内のすべてのエンベロープを削除します）</target>
        </trans-unit>
        <trans-unit id="5fdf50ea814f9dedb6bbcadec7dfa756faebc390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.remove_overlap(begin, end)&lt;/code&gt;   (removes all overlapping the range)</source>
          <target state="translated">&lt;code&gt;tree.remove_overlap(begin, end)&lt;/code&gt; （範囲に重複するすべてを削除します）</target>
        </trans-unit>
        <trans-unit id="522b88342be334a4d56792198416502d08ca18f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree.removei(begin, end, data)&lt;/code&gt;    (short for &lt;code&gt;tree.remove(Interval(begin, end, data))&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;tree.removei(begin, end, data)&lt;/code&gt; （ &lt;code&gt;tree.remove(Interval(begin, end, data))&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="51eebea93e61666f72d7e5c5c4008db04ea7499d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree1.issubset(tree2)&lt;/code&gt; or &lt;code&gt;tree1 &amp;lt;= tree2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tree1.issubset(tree2)&lt;/code&gt; またはtree1 &lt;code&gt;tree1 &amp;lt;= tree2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23f88317e970732b632250aaeb5c3777816bc918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tree1.issuperset(tree2)&lt;/code&gt; or &lt;code&gt;tree1 &amp;gt; tree2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tree1.issuperset(tree2)&lt;/code&gt; またはtree1 &lt;code&gt;tree1 &amp;gt; tree2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="feb1286669ba030d0060971e795b3d8a32eeb7c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Version 3 changes!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;バージョン3の変更！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3ce2e65600d95a9b4cd0dfa82df667541603c3c" translate="yes" xml:space="preserve">
          <source>A mutable, self-balancing interval tree for Python 2 and 3. Queries may be by point, by range overlap, or by range envelopment.</source>
          <target state="translated">Python 2,3 用のセルフバランスをとることができる変異可能なインターバルツリーです。クエリは、点によるもの、範囲の重複によるもの、範囲包絡によるものがあります。</target>
        </trans-unit>
        <trans-unit id="3f21003249cd732df970e0de2775a6c4fd687469" translate="yes" xml:space="preserve">
          <source>Accessing an &lt;code&gt;Interval&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Interval&lt;/code&gt; オブジェクトへのアクセス</target>
        </trans-unit>
        <trans-unit id="aee83699d707019da01d46eafecac5bba871dfea" translate="yes" xml:space="preserve">
          <source>Adding intervals - any object works!</source>
          <target state="translated">間隔を追加する-どのようなオブジェクトでも動作します</target>
        </trans-unit>
        <trans-unit id="52b673af7f2db67112dc8d0b52ae1132e78a51cd" translate="yes" xml:space="preserve">
          <source>Automatic AVL balancing</source>
          <target state="translated">自動AVLバランシング</target>
        </trans-unit>
        <trans-unit id="77bfa67a49fef6dcaad2ca14b2f3a394829e089b" translate="yes" xml:space="preserve">
          <source>Based on</source>
          <target state="translated">基づいています。</target>
        </trans-unit>
        <trans-unit id="5abc48c89fe82f37e632bb1850157ad71f80a3f2" translate="yes" xml:space="preserve">
          <source>Chopping</source>
          <target state="translated">チョッピング</target>
        </trans-unit>
        <trans-unit id="051a599a6aa92513fbec307d2999de71396df753" translate="yes" xml:space="preserve">
          <source>Constructing from lists of intervals</source>
          <target state="translated">間隔のリストからの構築</target>
        </trans-unit>
        <trans-unit id="c75f9354fd283d269dca7b244574249c5746ec70" translate="yes" xml:space="preserve">
          <source>Copying and typecasting</source>
          <target state="translated">コピーとタイプキャスティング</target>
        </trans-unit>
        <trans-unit id="a420abf6e89816696d0724f377c00c6447c28f0a" translate="yes" xml:space="preserve">
          <source>Copyright</source>
          <target state="translated">著作権</target>
        </trans-unit>
        <trans-unit id="6965af92aabc21c927e703775bac75583859abcc" translate="yes" xml:space="preserve">
          <source>Deletions</source>
          <target state="translated">削除</target>
        </trans-unit>
        <trans-unit id="d21b899bc84e649ed6211b49f993fb68293c0134" translate="yes" xml:space="preserve">
          <source>Editable interval tree data structure for Python 2 and 3</source>
          <target state="translated">Python 2,3用の編集可能なインターバルツリーデータ構造体</target>
        </trans-unit>
        <trans-unit id="c00be53239883938e4964f9334f4facd59de2579" translate="yes" xml:space="preserve">
          <source>Envelop queries</source>
          <target state="translated">エンベロープクエリ</target>
        </trans-unit>
        <trans-unit id="ddee7966a570621eb64cd75d19d7e71c5fbd5ab1" translate="yes" xml:space="preserve">
          <source>Eternally Confuzzled's &lt;a href=&quot;http://www.eternallyconfuzzled.com/tuts/datastructures/jsw_tut_avl.aspx&quot;&gt;AVL tree&lt;/a&gt;</source>
          <target state="translated">EternallyConfuzzledの&lt;a href=&quot;http://www.eternallyconfuzzled.com/tuts/datastructures/jsw_tut_avl.aspx&quot;&gt;AVLツリー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特徴</target>
        </trans-unit>
        <trans-unit id="8eed5e2b9bd9d595bfae07f00217cde0a8b123da" translate="yes" xml:space="preserve">
          <source>Future improvements</source>
          <target state="translated">今後の改善点</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">始めるには</target>
        </trans-unit>
        <trans-unit id="1a1edf616886a358519f6464e30f2c9c39de7b5f" translate="yes" xml:space="preserve">
          <source>Heavily modified from Tyler Kahn's &lt;a href=&quot;http://zurb.com/forrst/posts/Interval_Tree_implementation_in_python-e0K&quot;&gt;Interval Tree implementation in Python&lt;/a&gt; (&lt;a href=&quot;https://github.com/tylerkahn/intervaltree-python&quot;&gt;GitHub project&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;http://zurb.com/forrst/posts/Interval_Tree_implementation_in_python-e0K&quot;&gt;Pythonで&lt;/a&gt;のTylerKahnの区間木実装から大幅に変更されました（&lt;a href=&quot;https://github.com/tylerkahn/intervaltree-python&quot;&gt;GitHubプロジェクト&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="de7b4e39d6c8b5acb31e4f8dd6e1d981de4c1809" translate="yes" xml:space="preserve">
          <source>Incorporates contributions from:</source>
          <target state="translated">貢献を盛り込んでいます。</target>
        </trans-unit>
        <trans-unit id="3ec2f2ac1394df865a664e65adca819e4fc833e3" translate="yes" xml:space="preserve">
          <source>Initializing</source>
          <target state="translated">初期化</target>
        </trans-unit>
        <trans-unit id="0600290d357e4013d26660486b770967207e6c3d" translate="yes" xml:space="preserve">
          <source>Insertions</source>
          <target state="translated">挿入</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="08ca6a3da933ca6826a2f4d3fcc919af71d7e380" translate="yes" xml:space="preserve">
          <source>Iterable</source>
          <target state="translated">反復可能</target>
        </trans-unit>
        <trans-unit id="0e3adcb8be25ab7f9384124c39985587341098f1" translate="yes" xml:space="preserve">
          <source>Licensed under the &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache License, version 2.0&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apacheライセンス、バージョン2.0の&lt;/a&gt;下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="4423ac9f7d0c52389a794b70d56a5db2e832d9c7" translate="yes" xml:space="preserve">
          <source>Membership queries</source>
          <target state="translated">メンバーシップ・クエリー</target>
        </trans-unit>
        <trans-unit id="fe02e53b861224a1ab4a5adb9b654d03f8a0a1bf" translate="yes" xml:space="preserve">
          <source>Methods like &lt;code&gt;merge_overlaps()&lt;/code&gt; which took a &lt;code&gt;strict&lt;/code&gt; argument consistently default to &lt;code&gt;strict=True&lt;/code&gt;. Before, some methods defaulted to &lt;code&gt;True&lt;/code&gt; and others to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strict&lt;/code&gt; 引数をとった &lt;code&gt;merge_overlaps()&lt;/code&gt; のようなメソッドは、一貫してデフォルトで &lt;code&gt;strict=True&lt;/code&gt; になります。以前は、一部のメソッドはデフォルトで &lt;code&gt;True&lt;/code&gt; に設定され、他のメソッドは &lt;code&gt;False&lt;/code&gt; にデフォルト設定されていました。</target>
        </trans-unit>
        <trans-unit id="c18e13121c35f669d28503289584ea463a481813" translate="yes" xml:space="preserve">
          <source>Modifications, &lt;a href=&quot;https://github.com/konstantint/PyIntervalTree&quot;&gt;Konstantin Tretyakov&lt;/a&gt;, 2014</source>
          <target state="translated">変更、&lt;a href=&quot;https://github.com/konstantint/PyIntervalTree&quot;&gt;Konstantin Tretyakov&lt;/a&gt;、2014</target>
        </trans-unit>
        <trans-unit id="d017584d3131d6549ceadca0098c010b28cdd75d" translate="yes" xml:space="preserve">
          <source>Note that ranges are inclusive of the lower limit, but non-inclusive of the upper limit. So:</source>
          <target state="translated">範囲は下限値を含みますが、上限値を含まないことに注意してください。ということで、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="f7a3d854bfa0266e9c4a954b8a4122785d12b7cc" translate="yes" xml:space="preserve">
          <source>Or even:</source>
          <target state="translated">あるいは、それさえも。</target>
        </trans-unit>
        <trans-unit id="a427dbcead3b01099ce0d98771c0bfa2e9ea27b9" translate="yes" xml:space="preserve">
          <source>Or remove intervals that overlap a range:</source>
          <target state="translated">または、範囲に重なる間隔を削除します。</target>
        </trans-unit>
        <trans-unit id="361950879ee8afaf91fb72ae4598513e02c3a27c" translate="yes" xml:space="preserve">
          <source>Or, if we don't need the data fields:</source>
          <target state="translated">あるいは、データフィールドが不要な場合。</target>
        </trans-unit>
        <trans-unit id="62171be02f8e1065877cccaa9e9a75d19d21db76" translate="yes" xml:space="preserve">
          <source>Overlap queries</source>
          <target state="translated">オーバーラップクエリ</target>
        </trans-unit>
        <trans-unit id="5859820e1123b363aa8ca079ae2c38a0154e7fd8" translate="yes" xml:space="preserve">
          <source>Pickle-friendly</source>
          <target state="translated">ピクルスに優しい</target>
        </trans-unit>
        <trans-unit id="f752ac1d253f3d8c5e57c6772be91b5cf70983c4" translate="yes" xml:space="preserve">
          <source>Point queries</source>
          <target state="translated">ポイントクエリ</target>
        </trans-unit>
        <trans-unit id="1748e9a977e0d797f3fb7962a05979ddeca1c482" translate="yes" xml:space="preserve">
          <source>Query by point</source>
          <target state="translated">ポイントによる問い合わせ</target>
        </trans-unit>
        <trans-unit id="0760f38774f77c115945649eb893c42bf1cbb6b1" translate="yes" xml:space="preserve">
          <source>Query by range</source>
          <target state="translated">範囲による問い合わせ</target>
        </trans-unit>
        <trans-unit id="4ce3a86946ad182cdd1222ed6d94a1ac588514d4" translate="yes" xml:space="preserve">
          <source>Removing intervals</source>
          <target state="translated">インターバルの削除</target>
        </trans-unit>
        <trans-unit id="d699d1e173f275ede017803062e9fe22a3179544" translate="yes" xml:space="preserve">
          <source>Restructuring</source>
          <target state="translated">リストラクチャリング</target>
        </trans-unit>
        <trans-unit id="4fc7c24cc62dfd05872fd739a711fa21c212149e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/chaimleib/intervaltree/issues&quot;&gt;issue tracker&lt;/a&gt; on GitHub.</source>
          <target state="translated">GitHubの&lt;a href=&quot;https://github.com/chaimleib/intervaltree/issues&quot;&gt;課題追跡システム&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="872717ad094860aa1c279280d94bf862a448e835" translate="yes" xml:space="preserve">
          <source>Set-like operations</source>
          <target state="translated">セットのような操作</target>
        </trans-unit>
        <trans-unit id="03bc7a1c89cbfd55bddac8e9e2ec496de99730a5" translate="yes" xml:space="preserve">
          <source>Since our search was over &lt;code&gt;2 &amp;le; x &amp;lt; 4&lt;/code&gt;, neither &lt;code&gt;Interval(1, 2)&lt;/code&gt; nor &lt;code&gt;Interval(4, 7)&lt;/code&gt;
was included. The first interval, &lt;code&gt;1 &amp;le; x &amp;lt; 2&lt;/code&gt; does not include &lt;code&gt;x = 2&lt;/code&gt;. The second
interval, &lt;code&gt;4 &amp;le; x &amp;lt; 7&lt;/code&gt;, does include &lt;code&gt;x = 4&lt;/code&gt;, but our search interval excludes it. So,
there were no overlapping intervals. However:</source>
          <target state="translated">Googleの検索があったためオーバー &lt;code&gt;2 &amp;le; x &amp;lt; 4&lt;/code&gt; 、どちらの &lt;code&gt;Interval(1, 2)&lt;/code&gt; や &lt;code&gt;Interval(4, 7)&lt;/code&gt; 含まれていました。最初の区間、 &lt;code&gt;1 &amp;le; x &amp;lt; 2&lt;/code&gt; は、 &lt;code&gt;x = 2&lt;/code&gt; は含まれません。2番目の区間 &lt;code&gt;4 &amp;le; x &amp;lt; 7&lt;/code&gt; には、 &lt;code&gt;x = 4&lt;/code&gt; が含まれていますが、検索区間では除外されています。したがって、重複する間隔はありませんでした。しかしながら：</target>
        </trans-unit>
        <trans-unit id="de7805a2f8658223efcb68debf683046f01bc471" translate="yes" xml:space="preserve">
          <source>Sizing</source>
          <target state="translated">サイジング</target>
        </trans-unit>
        <trans-unit id="0b8d3bff7b282e8424f968f9e948b9dc2006e7fb" translate="yes" xml:space="preserve">
          <source>Slicing</source>
          <target state="translated">スライシング</target>
        </trans-unit>
        <trans-unit id="328725715485d0e90087fc6033b9634b51379a18" translate="yes" xml:space="preserve">
          <source>Supports Python 2.7 and Python 3.5+ (Tested under 2.7, and 3.5 thru 3.8)</source>
          <target state="translated">Python 2.7 と Python 3.5+をサポート (2.7 以下でテスト、3.5 から 3.8 まではテスト済み)</target>
        </trans-unit>
        <trans-unit id="98e4d06c8b0edcb980bebd1182be38b8cc8ba15e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extend(items)&lt;/code&gt; method no longer exists. Instead, use &lt;code&gt;update(items)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extend(items)&lt;/code&gt; する方法は存在しません。代わりに、 &lt;code&gt;update(items)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="8e041b7267f5827638e69411b2f98a0430e32f6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;search(begin, end, strict)&lt;/code&gt; method no longer exists. Instead, use one of these:</source>
          <target state="translated">&lt;code&gt;search(begin, end, strict)&lt;/code&gt; 方法は存在しません。代わりに、次のいずれかを使用してください。</target>
        </trans-unit>
        <trans-unit id="0e84b7340dfb81dc97a71db967581abc83cd81c8" translate="yes" xml:space="preserve">
          <source>The result of a query is a &lt;code&gt;set&lt;/code&gt; object, so if ordering is important,
you must sort it first.</source>
          <target state="translated">クエリの結果は &lt;code&gt;set&lt;/code&gt; オブジェクトであるため、順序付けが重要な場合は、最初に並べ替える必要があります。</target>
        </trans-unit>
        <trans-unit id="1ccf64bb5c013bf8606e01f5c6f94625254a3cfb" translate="yes" xml:space="preserve">
          <source>The source code for this project is at &lt;a href=&quot;https://github.com/chaimleib/intervaltree&quot;&gt;https://github.com/chaimleib/intervaltree&lt;/a&gt;</source>
          <target state="translated">このプロジェクトのソースコードは&lt;a href=&quot;https://github.com/chaimleib/intervaltree&quot;&gt;https://github.com/chaimleib/intervaltreeにあります&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1b65316e29b5ffcecfaa303b8c56690ac0cdaca" translate="yes" xml:space="preserve">
          <source>This library was designed to allow tagging text and time intervals, where the intervals include the lower bound but not the upper bound.</source>
          <target state="translated">このライブラリは、テキストと時間間隔をタグ付けできるように設計されており、間隔には下界は含まれるが上界は含まれない。</target>
        </trans-unit>
        <trans-unit id="c2f4f9abb3f7b6641615e4f8daaee80f0b1dba79" translate="yes" xml:space="preserve">
          <source>To modify the new intervals' data fields based on which side of the interval is being chopped:</source>
          <target state="translated">新しい間隔のデータフィールドを、間隔のどちら側が切り取られているかに基づいて変更する。</target>
        </trans-unit>
        <trans-unit id="90e496228f6e3c6b6b8407d190e01b157b00979d" translate="yes" xml:space="preserve">
          <source>To only return intervals that are completely enveloped by the search range:</source>
          <target state="translated">検索範囲に完全に包まれた間隔のみを返す。</target>
        </trans-unit>
        <trans-unit id="602122693a60adf1a5f2887086d63d13298f0794" translate="yes" xml:space="preserve">
          <source>We can also remove only those intervals completely enveloped in a range:</source>
          <target state="translated">また、範囲内に完全に包まれた間隔だけを削除することもできます。</target>
        </trans-unit>
        <trans-unit id="131f55da64f2678b168daaf433012b5f528eaf1c" translate="yes" xml:space="preserve">
          <source>We could also chop out parts of the tree:</source>
          <target state="translated">木の部分を切り取ることもできました。</target>
        </trans-unit>
        <trans-unit id="e0373599fc979cc813e4e9080a14ce3cd6d311c0" translate="yes" xml:space="preserve">
          <source>We could also empty a tree entirely:</source>
          <target state="translated">木を丸ごと空にすることもできます。</target>
        </trans-unit>
        <trans-unit id="52f5370a057afa050906b3c710904ab7600d4479" translate="yes" xml:space="preserve">
          <source>We could have made a similar tree this way:</source>
          <target state="translated">このように似たような木を作ることができました。</target>
        </trans-unit>
        <trans-unit id="f1f88c4016ac779c52f31f79b0b831b0c2cd4d4d" translate="yes" xml:space="preserve">
          <source>Wikipedia's &lt;a href=&quot;http://en.wikipedia.org/wiki/Interval_tree&quot;&gt;Interval Tree&lt;/a&gt;</source>
          <target state="translated">ウィキペディアの&lt;a href=&quot;http://en.wikipedia.org/wiki/Interval_tree&quot;&gt;区間木&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="893b37a61c5f9ded7490a6de11504b8856f838f6" translate="yes" xml:space="preserve">
          <source>You can also set the data fields, for example, re-using &lt;code&gt;datafunc()&lt;/code&gt; from above:</source>
          <target state="translated">データフィールドを設定することもできます。たとえば、上記の &lt;code&gt;datafunc()&lt;/code&gt; を再利用します。</target>
        </trans-unit>
        <trans-unit id="b05e19fff600fabadfdd51246c6b11b4e42df7d5" translate="yes" xml:space="preserve">
          <source>You can also slice intervals in the tree without removing them:</source>
          <target state="translated">また、ツリーの間隔を切らずにスライスすることもできます。</target>
        </trans-unit>
        <trans-unit id="6af82b07943068db5c29638a9a6a4c93fd5838e3" translate="yes" xml:space="preserve">
          <source>blank &lt;code&gt;tree = IntervalTree()&lt;/code&gt;</source>
          <target state="translated">空白の &lt;code&gt;tree = IntervalTree()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d04521b659a980378ebb5bda98bc5d6300c89c8" translate="yes" xml:space="preserve">
          <source>comparison</source>
          <target state="translated">比較</target>
        </trans-unit>
        <trans-unit id="479a07bcd73d86e37ea3745786681111a441786b" translate="yes" xml:space="preserve">
          <source>depristo/MarkDePristo</source>
          <target state="translated">デプリスト/MarkDePristo</target>
        </trans-unit>
        <trans-unit id="48d53c6e22192bbaaff43be3456d5f6f5d82da6f" translate="yes" xml:space="preserve">
          <source>difference</source>
          <target state="translated">difference</target>
        </trans-unit>
        <trans-unit id="7c14bf19c658c2430be8590b9a789e144099ed38" translate="yes" xml:space="preserve">
          <source>from an iterable of &lt;code&gt;Interval&lt;/code&gt; objects (&lt;code&gt;tree = IntervalTree(intervals)&lt;/code&gt;)</source>
          <target state="translated">反復可能な &lt;code&gt;Interval&lt;/code&gt; オブジェクトから（ &lt;code&gt;tree = IntervalTree(intervals)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9409e545e306f37a5a1f8fac58d48c4aa2f412e1" translate="yes" xml:space="preserve">
          <source>from an iterable of tuples (&lt;code&gt;tree = IntervalTree.from_tuples(interval_tuples)&lt;/code&gt;)</source>
          <target state="translated">タプルの反復可能から（ &lt;code&gt;tree = IntervalTree.from_tuples(interval_tuples)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4b6914c620d2daa62ebe5994f36f361b3a759bf8" translate="yes" xml:space="preserve">
          <source>intersection</source>
          <target state="translated">交差点</target>
        </trans-unit>
        <trans-unit id="cd5550981745c86f1542cb02fc65c16cfee97047" translate="yes" xml:space="preserve">
          <source>intervaltree</source>
          <target state="translated">インターバル</target>
        </trans-unit>
        <trans-unit id="7e0f1772592fa4ece541e1830c6855a9b610b273" translate="yes" xml:space="preserve">
          <source>siniG/Avi Gabay</source>
          <target state="translated">siniG/アヴィ・ガベイ</target>
        </trans-unit>
        <trans-unit id="fda22ac0b555bc0ceca6a0a60cd133986cffbc5f" translate="yes" xml:space="preserve">
          <source>symmetric difference</source>
          <target state="translated">対称差</target>
        </trans-unit>
        <trans-unit id="67ad5a07a2b999e38f2228365318c33459ab727a" translate="yes" xml:space="preserve">
          <source>union</source>
          <target state="translated">聯合</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
