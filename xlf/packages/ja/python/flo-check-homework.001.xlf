<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/flo-check-homework/">
    <body>
      <group id="flo-check-homework">
        <trans-unit id="80fc287d09ff8e08f902b6686e57b0326822038d" translate="yes" xml:space="preserve">
          <source>--interactive</source>
          <target state="translated">-インタラクティブ</target>
        </trans-unit>
        <trans-unit id="ffd2f1f485d108570820e83c9139dfd8d3a434b8" translate="yes" xml:space="preserve">
          <source>A program that allows to run other programs only after a set of questions have been correctly answered</source>
          <target state="translated">一連の質問に正解した後にのみ、他のプログラムを実行できるようにするプログラム</target>
        </trans-unit>
        <trans-unit id="e4c1a61cbf505ca7b31a1850e03b687eb27fc032" translate="yes" xml:space="preserve">
          <source>A way to consolidate calculus and grammar skills</source>
          <target state="translated">微積分と文法力を定着させる方法</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">追加の注意事項</target>
        </trans-unit>
        <trans-unit id="5962d284fa8eaed04540374257bf768292aff88d" translate="yes" xml:space="preserve">
          <source>Advanced tips (or hacks)</source>
          <target state="translated">上級者向けのヒント(またはハック</target>
        </trans-unit>
        <trans-unit id="2ae6ee7da3e41d74ae626a49c556d3582a7bbbe8" translate="yes" xml:space="preserve">
          <source>All images, as the rest of the package, are free according to the &lt;a href=&quot;http://www.debian.org/social_contract#guidelines&quot;&gt;Debian Free
Software Guidelines&lt;/a&gt; (DFSG-free for short). I wanted to use photos of
angry-looking dogs easily found with Google Images, but unfortunately, they
all appear to be non-free. If you have good suggestions of free
software-licensed images to improve this program, please advise.</source>
          <target state="translated">パッケージの残りの部分と同様に、すべてのイメージは、&lt;a href=&quot;http://www.debian.org/social_contract#guidelines&quot;&gt;Debianフリーソフトウェアガイドライン&lt;/a&gt;（略してDFSGフリー）に従って無料です。 Google画像検索で簡単に見つけられる怒りっぽい犬の写真を使いたかったのですが、残念ながら、それらはすべて無料ではないようです。このプログラムを改善するためのフリーソフトウェアライセンスの画像の良い提案がある場合は、アドバイスしてください。</target>
        </trans-unit>
        <trans-unit id="93c2b225b1f93a8ab0b96d862930f2d6dbb16c55" translate="yes" xml:space="preserve">
          <source>AllowExitBeforeChild</source>
          <target state="translated">AllowExitBeforeChild</target>
        </trans-unit>
        <trans-unit id="fd3e3e3a6c5c78509eaa48d39b9f171cbecec906" translate="yes" xml:space="preserve">
          <source>Currently, the questions are designed to help consolidate simple additions,
substractions, multiplications, euclidian divisions and conjugations of French
verbs. The questionnaires are built at run-time and can be customized to some
extent via a configuration file
(~/.config/Florent Rougon/flo-check-homework.ini on Unix-like systems). It is
easy for a Python programmer to add new question generators, questionnaires or
subquestionnaires.</source>
          <target state="translated">現在のところ、この問題はフランス語動詞の単純な足し算、置換、乗算、ユークリッド除算、活用を統合するのに役立つように設計されています。問題は実行時に作成され、設定ファイル (Unix 系システムでは ~/.config/Florent Rougon/flo-check-homeework.ini)を介してある程度カスタマイズすることができます。Pythonプログラマーが新しい質問ジェネレータ、質問票やサブ質問票を追加するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="665f4ce958b0a1bbc5b29473741899e6e7addc1f" translate="yes" xml:space="preserve">
          <source>Either let the super magic token expire by itself, or launch
flo-check-homework and use the appropriate item from the Magic menu to
remove it.</source>
          <target state="translated">スーパーマジックトークンを勝手に失効させるか、 flo-check-homeeworkを起動してマジックメニューから適切なアイテムを使用して削除するかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="cd1645e897882589cb2e3eda1e13baade07b2ebc" translate="yes" xml:space="preserve">
          <source>Ensure the child has done his work correctly, be it with flo-check-homework,
yourself, or any way that seems reasonable to you.</source>
          <target state="translated">子どもが正しく仕事をしたかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="030481c43e867f8fe37468374f11b58c43f91745" translate="yes" xml:space="preserve">
          <source>Enter the super magic word in flo-check-homework. This grants you a virtual
&amp;ldquo;super magic token&amp;rdquo; stored on the filesystem that persists even after
flo-check-homework has been ended (the storage location being under
&amp;lsquo;~/.config/Florent Rougon&amp;rsquo; on Unix-like systems).</source>
          <target state="translated">flo-check-homeworkに超魔法の言葉を入力してください。これにより、ファイルシステムに保存された仮想の「スーパーマジックトークン」が付与され、flo-check-homeworkが終了した後も保持されます（Unixライクなシステムでは保存場所は「〜/ .config / FlorentRougon」の下にあります）。</target>
        </trans-unit>
        <trans-unit id="798a79a87bcd390915a0f7e1c0f990754cb1ffa7" translate="yes" xml:space="preserve">
          <source>For installation instructions, please refer to INSTALL.txt.</source>
          <target state="translated">インストール方法については、INSTALL.txtを参照してください。</target>
        </trans-unit>
        <trans-unit id="7565e1fad70a1b6ae5c2952de6827b907ad2f6f3" translate="yes" xml:space="preserve">
          <source>ForceInteractive</source>
          <target state="translated">フォースインターアクティブ</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">一般的な</target>
        </trans-unit>
        <trans-unit id="56c5a89e19b4fe04021988b2e90bba54d677c525" translate="yes" xml:space="preserve">
          <source>General idea</source>
          <target state="translated">一般的な考え方</target>
        </trans-unit>
        <trans-unit id="880609180f38118f09532768032a83fd6d8afa6f" translate="yes" xml:space="preserve">
          <source>In flo-check-homework&amp;rsquo;s graphical user interface, a &amp;ldquo;magic word&amp;rdquo; button allows
one to bypass the test in case the pupil has already done his homework in
another way. It also makes it possible to exit the program immediately.</source>
          <target state="translated">flo-check-homeworkのグラフィカルユーザーインターフェイスでは、「魔法の言葉」ボタンを使用すると、生徒がすでに別の方法で宿題を済ませている場合に、テストをバイパスできます。また、プログラムをすぐに終了することもできます。</target>
        </trans-unit>
        <trans-unit id="b1e4d05fbc6aa0cc48d92ee9a8d49fa68df6ba8f" translate="yes" xml:space="preserve">
          <source>In short, the suggested use of this feature is the following:</source>
          <target state="translated">要するに、この機能を利用することを示唆しているのは、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cdd540d41c5e2c8dcfc5030b213717d0e8dc411d" translate="yes" xml:space="preserve">
          <source>In this mode, flo-check-homework uses a call from the exec*(2) family
(execvp(2) in version 0.10.0) without forking beforehand. Consequently, it
doesn&amp;rsquo;t consume any resource whatsoever once the decorated program is started,
and the exit code returned is exactly the same as if the decorated program had
been run without flo-check-homework intervening. This is why this mode is said
to allow transparent execution of the decorated programs.</source>
          <target state="translated">このモードでは、flo-check-homeworkは、事前にフォークせずにexec *（2）ファミリ（バージョン0.10.0ではexecvp（2））からの呼び出しを使用します。その結果、装飾されたプログラムが開始されると、リソースをまったく消費せず、返される終了コードは、装飾されたプログラムがflo-check-homeworkを介さずに実行された場合とまったく同じです。これが、このモードが装飾されたプログラムの透過的な実行を可能にすると言われている理由です。</target>
        </trans-unit>
        <trans-unit id="2b16c8dc952e322001104c5878a4536b787b7846" translate="yes" xml:space="preserve">
          <source>Indeed, flo-check-homework refuses to quit immediately unless option -e was
given or a sufficient score was obtained; this is done so as to avoid the
children validating the whole questionnaire with incorrect answers only to get
corrections that they can blindly copy after rerunning the program. For the
same reason, some of the question generators purposedly don&amp;rsquo;t remember
incorrect answers, in contrast with the initial design.</source>
          <target state="translated">実際、flo-check-homeworkは、オプション-eが与えられるか、十分なスコアが得られない限り、すぐに終了することを拒否します。これは、子供たちがプログラムを再実行した後に盲目的にコピーできる修正を得るためだけに、間違った答えで質問票全体を検証することを避けるために行われます。同じ理由で、最初の設計とは対照的に、一部の質問ジェネレーターは意図的に間違った答えを覚えていません。</target>
        </trans-unit>
        <trans-unit id="161f3e746be72aa6cb96db0b38395155cb083397" translate="yes" xml:space="preserve">
          <source>It is possible to run flo-check-homework from a clone of that repository, but
two things that are not part of it have to be set up in order for everything
to work properly:</source>
          <target state="translated">そのリポジトリのクローンから flo-check-homework を実行することは可能ですが、すべてが正しく動作するためには、そのリポジトリの一部ではない二つのことを設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="133c5a89f68af948c2da128b0d53975350219af3" translate="yes" xml:space="preserve">
          <source>It is possible to setup launcher scripts that call flo-check-homework with the
appropriate parameters depending on the script (and parameters passed to the
script). The flo-check-homework-decorate-games program from the &amp;lsquo;tools&amp;rsquo;
directory is provided to help automate such a setup. Basically, you write a
list of programs/games in an XML file which we&amp;rsquo;ll call DATAFILE for the sake
of the example. You may look at flo-check-homework-decorate-games.xml from the
tools/flo-check-homework-decorate-games folder or run
&amp;lsquo;flo-check-homework-decorate-games &amp;ndash;help&amp;rsquo; for an example of such a file. Once
you have a proper DATAFILE, run the following command as a user who has
permission to write to /usr/local/games:</source>
          <target state="translated">スクリプト（およびスクリプトに渡されるパラメーター）に応じて、適切なパラメーターを使用してflo-check-homeworkを呼び出すランチャースクリプトをセットアップすることができます。 'tools'ディレクトリのflo-check-homework-decorate-gamesプログラムは、このような設定を自動化するために提供されています。基本的に、プログラム/ゲームのリストをXMLファイルに記述します。このファイルは、例のためにDATAFILEと呼びます。このような例については、tools / flo-check-homework-decorate-gamesフォルダーからflo-check-homework-decorate-games.xmlを参照するか、「flo-check-homework-decorate-games &amp;ndash;help」を実行してください。ファイル。適切なDATAFILEを取得したら、/ usr / local / gamesへの書き込み権限を持つユーザーとして次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="8ec69a406f54aa6f7db3e5219710ccc258f8d176" translate="yes" xml:space="preserve">
          <source>Let the child play with any of the decorated games without
flo-check-homework interfering during the validity period of the super
magic token.</source>
          <target state="translated">子供を極度の魔法のトークンの有効期間の間に干渉する flo-check-homeework なしで飾られたゲームのどれとで遊ぶことを許可して下さい。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">注)。</target>
        </trans-unit>
        <trans-unit id="5627db6dbc837d76a10e6b37103eb01f82730feb" translate="yes" xml:space="preserve">
          <source>Note: there is still some locking performed when flo-check-homework runs the
decorated game &amp;ldquo;transparently&amp;rdquo; after finding out that the user has a valid
super magic token. However, it is very short, the lock being released before
the decorated game is started. Therefore, several decorated programs/games may
be run concurrently this way, even though the corresponding flo-check-homework
processes may block each other for a short time because of the locking
performed in order to protect the QSettings.</source>
          <target state="translated">注：ユーザーが有効なスーパーマジックトークンを持っていることを確認した後、flo-check-homeworkが装飾されたゲームを「透過的に」実行すると、ロックが実行されます。ただし、非常に短く、装飾されたゲームが開始される前にロックが解除されます。したがって、QSettingsを保護するために実行されるロックのために、対応するflo-check-homeworkプロセスが短時間互いにブロックする場合でも、複数の装飾されたプログラム/ゲームをこの方法で同時に実行できます。</target>
        </trans-unit>
        <trans-unit id="4450e4719d8f5fdd09242d06cf4a3a418ab4dbea" translate="yes" xml:space="preserve">
          <source>PyQt&amp;nbsp;4.10.3 is known to work, version 4.9 should be enough and older
versions will most probably not work with this version of
flo-check-homework.</source>
          <target state="translated">PyQt 4.10.3は動作することがわかっており、バージョン4.9で十分であり、古いバージョンはおそらくこのバージョンのflo-check-homeworkでは動作しません。</target>
        </trans-unit>
        <trans-unit id="9b95704072a5fb3ef3f8759520dabc6a71d42c18" translate="yes" xml:space="preserve">
          <source>Python&amp;nbsp;3.1 or later in the 3 series;</source>
          <target state="translated">3シリーズのPython3.1以降。</target>
        </trans-unit>
        <trans-unit id="9b0dcbbc2e073c0aab824f74d6b2c4fcca46ce24" translate="yes" xml:space="preserve">
          <source>Qt&amp;nbsp;4.8 or later;</source>
          <target state="translated">Qt4.8以降。</target>
        </trans-unit>
        <trans-unit id="810eaa30191e2b0db016b43617505a9d527c4f0d" translate="yes" xml:space="preserve">
          <source>Quit flo-check-homework (or accept to be limited to the game and parameters
given on flo-check-homework&amp;rsquo;s command line as specified in the previous
step).</source>
          <target state="translated">flo-check-homeworkを終了します（または、前の手順で指定したように、flo-check-homeworkのコマンドラインで指定されたゲームとパラメーターに制限されることを受け入れます）。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">必要条件</target>
        </trans-unit>
        <trans-unit id="196440dd80c5af06d8d9ca6bf02d644f0c8a61fc" translate="yes" xml:space="preserve">
          <source>Running flo-check-homework from the Git repository</source>
          <target state="translated">Git リポジトリから flo-check-homeework を実行します。</target>
        </trans-unit>
        <trans-unit id="6bea7a2357d85a5d57ac42ecb3ab4a3d4be6eab7" translate="yes" xml:space="preserve">
          <source>Seen objects (used to remember which items of a given type have been seen
in the current session) can be shared between several question generators.
This avoids asking the same question twice in case several question
generators are likely to generate the same question.</source>
          <target state="translated">Seen オブジェクト(現在のセッションで特定のタイプのアイテムを見たことを記憶するために使用されます)は、複数の質問ジェネレータ間で共有することができます。これにより、複数の質問ジェネレータが同じ質問を生成する可能性がある場合に、同じ質問を2回することを避けることができます。</target>
        </trans-unit>
        <trans-unit id="10aede5886f6ed1e9eaf125bf18147de7e8c8381" translate="yes" xml:space="preserve">
          <source>Since flo-check-homework-decorate-games is currently only able to generate
shell scripts, it is not expected to be of any use on platforms that cannot
run them. This means that you can fill in questionnaires on these platforms
but can&amp;rsquo;t expect to be able to run the desired program/games from
flo-check-homework after a good enough work without some adaptation for such
platforms. (For Windows platforms, one might use Cygwin or adapt
flo-check-homework-decorate-games to generate batch files, or something else,
let Windows experts decide in this matter&amp;hellip;)</source>
          <target state="translated">flo-check-homework-decorate-gamesは現在、シェルスクリプトしか生成できないため、それらを実行できないプラットフォームでの使用は期待されていません。つまり、これらのプラットフォームで質問票に記入することはできますが、そのようなプラットフォームにある程度適応しなければ、十分な作業を行った後、flo-check-homeworkから目的のプログラム/ゲームを実行できるとは期待できません。 （Windowsプラットフォームの場合、Cygwinを使用するか、flo-check-homework-decorate-gamesを適応させてバッチファイルを生成するか、Windowsの専門家にこの問題を決定させることができます&amp;hellip;）</target>
        </trans-unit>
        <trans-unit id="02a2664b4ef8d7bc3fbab92cc0ebe1eebdb77eb5" translate="yes" xml:space="preserve">
          <source>Since version 0.10.0, a new kind of magic word, creatively called the &amp;ldquo;super
magic word&amp;rdquo;, allows one to run the decorated games more easily and
transparently. When one chooses this function from the Magic menu (added in
version 0.10.0) or from the toolbar, one is asked to enter the super magic
word, similarly to the simple &amp;ldquo;magic word&amp;rdquo;. If the given answer is correct, a
&amp;ldquo;super magic token&amp;rdquo; is granted that allows one to run all decorated programs
(likely to be games) in a transparent manner. This special permission is valid
for some time that depends on the super magic word that was given (see the
source!). Once the token has been granted, it is possible to launch the
predefined game from flo-check-homework&amp;rsquo;s GUI, as for a simple &amp;ldquo;magic word&amp;rdquo;.
However, in order to run different games under the super magic token super
powers, one should rather quit flo-check-homework first, otherwise the locking
mechanism used to protect the QSettings against eventual corruption caused by
several concurrent uses would prevent other instances of flo-check-homework
from running normally, and therefore make it impossible to run other decorated
games until the instance that is holding the lock is ended.</source>
          <target state="translated">バージョン0.10.0以降、クリエイティブに「スーパーマジックワード」と呼ばれる新しい種類のマジックワードにより、装飾されたゲームをより簡単かつ透過的に実行できるようになりました。マジックメニュー（バージョン0.10.0で追加）またはツールバーからこの機能を選択すると、単純な「マジックワード」と同様に、スーパーマジックワードを入力するように求められます。与えられた答えが正しければ、「スーパーマジックトークン」が付与され、装飾されたすべてのプログラム（ゲームである可能性が高い）を透過的に実行できるようになります。この特別な許可は、与えられた超魔法の言葉に応じてしばらくの間有効です（ソースを参照してください！）。トークンが付与されると、単純な「魔法の言葉」のように、flo-check-homeworkのGUIから事前定義されたゲームを起動することができます。しかし、スーパーマジックトークンのスーパーパワーの下でさまざまなゲームを実行するために、最初にflo-check-homeworkを終了する必要があります。そうしないと、複数の同時使用によって引き起こされる最終的な破損からQSettingsを保護するために使用されるロックメカニズムにより、flo-check-homeworkの他のインスタンスが正常に実行されなくなり、他のインスタンスを実行できなくなります。ロックを保持しているインスタンスが終了するまで、装飾されたゲーム。</target>
        </trans-unit>
        <trans-unit id="2bf9153113f97a52d096223d75939351b81ac95a" translate="yes" xml:space="preserve">
          <source>Since version 0.10.0, it is possible to tell flo-check-homework to use an
intermediate launcher to start the desired program (game or whatever you
want). This is done by setting ProgramLauncher in the configuration file to
the name or path to the launcher executable. This results in a command where
the value of ProgramLauncher is prepended to the command line for the desired
program. Of course, if ProgramLauncher is empty or unset, no intermediate
launcher is used.</source>
          <target state="translated">バージョン0.10.0以降、希望するプログラム(ゲームでも何でも)を起動するために中間ランチャーを使用するようにflo-check-homeworkに指示することが可能です。これは、設定ファイルのProgramLauncherをランチャー実行ファイルの名前またはパスに設定することによって行われます。これにより、目的のプログラムのコマンドラインに ProgramLauncher の値が付加されたコマンドが生成されます。もちろん、ProgramLauncher が空か設定されていない場合は、中間ランチャーは使用されません。</target>
        </trans-unit>
        <trans-unit id="87eb05079ed92eedec39183ff490d67db145909b" translate="yes" xml:space="preserve">
          <source>Since version 0.10.0, there is a new feature called &lt;em&gt;super magic word&lt;/em&gt; that
gives, if properly entered, a &lt;em&gt;super magic token&lt;/em&gt; which is valid for a limited
amount of time (see &lt;a href=&quot;#the-super-magic-word&quot;&gt;The super magic word&lt;/a&gt; below). This allows more freedom
to run the available games once the token has been granted. Since my goal is
definitely not to use technical means in order to limit the pleasure children
can have with games, a successful work does grant a super magic token, just as
if the super magic word had been entered.</source>
          <target state="translated">バージョン0.10.0以降、&lt;em&gt;スーパーマジックワード&lt;/em&gt;と呼ばれる新機能があり、正しく入力すると、限られた時間だけ有効な&lt;em&gt;スーパーマジックトークン&lt;/em&gt;が得られます（以下&lt;a href=&quot;#the-super-magic-word&quot;&gt;のスーパーマジックワードを&lt;/a&gt;参照）。これにより、トークンが付与されると、利用可能なゲームをより自由に実行できるようになります。私の目標は、子供たちがゲームで持つことができる喜びを制限するために技術的な手段を使用しないことですので、成功した作品は、まるでスーパーマジックワードが入力されたかのようにスーパーマジックトークンを付与します。</target>
        </trans-unit>
        <trans-unit id="b96c3a8635c3770d08ff63f990bca8d89bad88c9" translate="yes" xml:space="preserve">
          <source>The ItemGenerator class, which is the basis for many question generators, has
the following properties:</source>
          <target state="translated">多くの質問ジェネレータの基礎となる ItemGenerator クラスには以下のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="409f40293679c2d1e2ac9d442bea77f60166e849" translate="yes" xml:space="preserve">
          <source>The above trick, based on the PATH environment variable, also works if the
game is started from the &lt;a href=&quot;http://www.freedesktop.org/&quot;&gt;freedesktop&lt;/a&gt; menu, because freedesktop .desktop files
usually don&amp;rsquo;t specify a full path to the executable (when they do, the only
recourse is to fix the .desktop file manually and report a bug to the game in
question). The format of .desktop files is described in the &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec&quot;&gt;Desktop Entry
specification&lt;/a&gt;.</source>
          <target state="translated">freedesktop .desktopファイルは通常、実行可能ファイルへのフルパスを指定しないため、PATH環境変数に基づく上記のトリックは、ゲームが&lt;a href=&quot;http://www.freedesktop.org/&quot;&gt;freedesktop&lt;/a&gt;メニューから開始された場合にも機能します（指定されている場合、唯一の手段は修正することです） .desktopファイルを手動で作成し、問題のゲームにバグを報告します）。.desktopファイルの形式は、&lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/desktop-entry-spec&quot;&gt;デスクトップエントリの仕様で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="60225f7b23bfb9495a8f953a0350cd6cd19fa99d" translate="yes" xml:space="preserve">
          <source>The following software is required to run flo-check-homework:</source>
          <target state="translated">flo-check-homeworkを実行するには、以下のソフトウェアが必要です。</target>
        </trans-unit>
        <trans-unit id="feef7c6180b57c3f200e43cc876f0855a059b4a8" translate="yes" xml:space="preserve">
          <source>The setup described in the previous paragraph requires a little modification
to wrapper scripts, which by default check the executable bit of the program
to run. In this case, the check would necessarily fail and should be skipped.
Invoking flo-check-homework-decorate-games with the &amp;ndash;no-exec-check option
generates scripts that don&amp;rsquo;t perform such a check.</source>
          <target state="translated">前の段落で説明したセットアップでは、ラッパースクリプトに少し変更を加える必要があります。ラッパースクリプトは、デフォルトで、実行するプログラムの実行可能ビットをチェックします。この場合、チェックは必ず失敗するため、スキップする必要があります。&amp;ndash;no-exec-checkオプションを指定してflo-check-homework-decorate-gamesを呼び出すと、そのようなチェックを実行しないスクリプトが生成されます。</target>
        </trans-unit>
        <trans-unit id="e43070a5897719cd5959ea93548910643d35ad7f" translate="yes" xml:space="preserve">
          <source>The super magic word</source>
          <target state="translated">超魔法の言葉</target>
        </trans-unit>
        <trans-unit id="60c12f98bc7315368e4cd10260700dc33b2d836e" translate="yes" xml:space="preserve">
          <source>This new feature can be used in a setup where for instance /usr/games does not
have the executable bit set for the user running flo-check-homework, but does
have it for a particular group which we&amp;rsquo;ll call gamers for the sake of this
discussion. If you create a custom launcher program in C that uses the
setgroups(2) system call to add the gamers group to the list of supplementary
groups for the calling process before using execve(2) to run the desired
program, then it becomes possible for the user to run the desired program
through flo-check-homework even though it would appear to be impossible at
first (of course, the launcher program is the one providing the required
privileges here, and is also accessible to the user in such a setup).</source>
          <target state="translated">この新機能は、たとえば/ usr / gamesにflo-check-homeworkを実行しているユーザー用に設定された実行可能ビットがないが、ゲーマーと呼ぶ特定のグループ用に設定されているセットアップで使用できます。この議論の。 execve（2）を使用して目的のプログラムを実行する前に、setgroups（2）システムコールを使用してゲーマーグループを呼び出しプロセスの補足グループのリストに追加するカスタムランチャープログラムをCで作成すると、次のことが可能になります。ユーザーは、最初は不可能に見えても、flo-check-homeworkを介して目的のプログラムを実行できます（もちろん、ランチャープログラムは、ここで必要な特権を提供するプログラムであり、このような設定でユーザーがアクセスすることもできます。 ）。</target>
        </trans-unit>
        <trans-unit id="8746abde09188a2d2feddfef59d920ee59aa3609" translate="yes" xml:space="preserve">
          <source>This will create an appropriate launcher script in /usr/local/games for every
program listed in DATAFILE. If /usr/local/games is prepended to the system
PATH, then the launcher scripts will take precedence over the corresponding
game executables when a user tries to run a game, unless a full path to the
game executable is specified. So, when using wrapper scripts, the call chain
looks like the following:</source>
          <target state="translated">これにより、/usr/local/games の中に、DATAFILE にあるすべてのプログラムに対応する適切なランチャースクリプトが作成されます。もし /usr/local/games がシステムの PATH の前に付加されている場合、ユーザがゲームを実行しようとしたときには、 ゲーム実行ファイルへのフルパスが指定されていない限り、 ランチャースクリプトが対応するゲーム実行ファイルよりも優先されます。そのため、ラッパースクリプトを使う場合、コールチェーンは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e38e2a91667d4e9a3d49f8d76a4a0af12cde5f1f" translate="yes" xml:space="preserve">
          <source>To be of any use, a launcher program as described above would need the
CAP_SETGID capability on Linux. As a consequence, it would require great
care in writing and installing. For a start, the GID of the group passed in
the aforementioned setgroups(2) system call &lt;em&gt;must not&lt;/em&gt; be something that
unprivileged users can choose, and that group should have no more powers
than being able to access /usr/games in a read-only manner. Additionally,
the launcher program should be installed on a partition where unprivileged
users have absolutely no write access, otherwise they could make a hard link
to the executable that would defeat the purpose of a security update (this
is a general issue to consider whenever using setuid or setgid executables
or, as described here, programs with special capabilities&amp;mdash;in the specific
sense this word has for Linux, as documented in the capabilities(7) manual
page). For all these reasons, and because of its obvious side effects (such
as not being able to execute fortune(6) normally, if installed in
/usr/games), this kind of setup should only be adopted if really necessary
(not to mention the fact that it can be easily defeated; as announced in the
title, it is a hack!).</source>
          <target state="translated">上記のようなランチャープログラムを使用するには、LinuxでCAP_SETGID機能が必要です。結果として、それは書面とインストールにおいて細心の注意を必要とするでしょう。まず、前述のsetgroups（2）システムコールで渡されたグループのGIDは、次のことを行っては&lt;em&gt;なりません。&lt;/em&gt;特権のないユーザーが選択できるものであり、そのグループには、読み取り専用の方法で/ usr / gamesにアクセスできる以上の権限はありません。さらに、ランチャープログラムは、特権のないユーザーが書き込みアクセス権をまったく持たないパーティションにインストールする必要があります。そうしないと、実行可能ファイルへのハードリンクが作成され、セキュリティ更新の目的が損なわれる可能性があります（これは、setuidを使用する場合に考慮すべき一般的な問題です。またはsetgid実行可能ファイル、またはここで説明するように、特別な機能を備えたプログラム&amp;mdash;特定の意味でこの単語がLinuxに対して持つのは、capabilities（7）のマニュアルページに記載されています）。これらすべての理由と、明らかな副作用（/ usr / gamesにインストールされている場合、fortune（6）を正常に実行できないなど）のために、この種の設定は、本当に必要な場合にのみ採用する必要があります（簡単に打ち負かすことができるという事実は言うまでもなく、タイトルで発表されているように、それはハックです！）。</target>
        </trans-unit>
        <trans-unit id="fbc41e061314de114e40f81514ee23bd859c111a" translate="yes" xml:space="preserve">
          <source>Version 0.10.0 also introduced the</source>
          <target state="translated">また、バージョン0.10.0では</target>
        </trans-unit>
        <trans-unit id="318bae7670c0efadc90cd642b101b2b0de0913bc" translate="yes" xml:space="preserve">
          <source>Version 0.11.1 of flo-check-homework has been tested on Linux with
Python&amp;nbsp;3.5.1, Qt&amp;nbsp;4.8.7 and PyQt&amp;nbsp;4.11.4. It should work on any platform with
the aforementioned dependencies installed, but trivial bugs are likely to pop
up on non-Unix platforms as no test whatsoever has been done on them. Please
report.</source>
          <target state="translated">flo-check-homeworkのバージョン0.11.1は、Python 3.5.1、Qt 4.8.7、およびPyQt4.11.4を搭載したLinuxでテストされています。前述の依存関係がインストールされているすべてのプラットフォームで機能するはずですが、Unix以外のプラットフォームではテストが行​​われていないため、些細なバグが発生する可能性があります。報告してください。</target>
        </trans-unit>
        <trans-unit id="486025537dad6adaf0f34522902145eaf2a7135c" translate="yes" xml:space="preserve">
          <source>When flo-check-homework is started, it can operate in two distinct modes:
either the graphical interface is displayed, or the program specified on the
command line is automatically run. The former is called &lt;em&gt;interactive mode&lt;/em&gt; and
the latter &lt;em&gt;transparent mode&lt;/em&gt;. Interactive mode is chosen if, and only if:</source>
          <target state="translated">flo-check-homeworkを開始すると、グラフィカルインターフェイスが表示されるか、コマンドラインで指定されたプログラムが自動的に実行されるかの2つの異なるモードで動作できます。前者は&lt;em&gt;インタラクティブモード&lt;/em&gt;と呼ばれ、後者は&lt;em&gt;透過モード&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。インタラクティブモードは、次の場合にのみ選択されます。</target>
        </trans-unit>
        <trans-unit id="ecda100d7a6ddf2e0f8b363e19da0fc751a72513" translate="yes" xml:space="preserve">
          <source>configuration
file parameter in the</source>
          <target state="translated">の設定ファイルパラメータを指定します。</target>
        </trans-unit>
        <trans-unit id="8fdbf7390fc60fdb3e3f668eb1e8c566a85ee022" translate="yes" xml:space="preserve">
          <source>cycles through all items but does not yield an item that has already been
seen in the current session (unless all items have been seen)</source>
          <target state="translated">すべてのアイテムを循環させますが、現在のセッションですでに見られているアイテムは生成されません(すべてのアイテムが見られていない限り)。</target>
        </trans-unit>
        <trans-unit id="21ea12c431c8259ca7275d9da727ac407e2857d5" translate="yes" xml:space="preserve">
          <source>flo-check-homework is maintained in a &lt;a href=&quot;https://github.com/frougon/flo-check-homework&quot;&gt;Git repository&lt;/a&gt; that can be cloned with:</source>
          <target state="translated">flo-check-homeworkは、次の方法で複製できる&lt;a href=&quot;https://github.com/frougon/flo-check-homework&quot;&gt;Gitリポジトリに&lt;/a&gt;保持されます。</target>
        </trans-unit>
        <trans-unit id="15c5c3b38ffb24b00ac2eb8e071b2d777826d46e" translate="yes" xml:space="preserve">
          <source>flo-check-homework presents one or more questionnaires to the user. Once all
questions have been answered, and if the score exceeds a predefined threshold,
a special button is enabled. When pressed, this button launches the program
(with optional arguments) that was specified on flo-check-homework&amp;rsquo;s command
line. For instance, the following command:</source>
          <target state="translated">flo-check-homeworkは、1つ以上の質問票をユーザーに提示します。すべての質問に回答し、スコアが事前定義されたしきい値を超えると、特別なボタンが有効になります。このボタンを押すと、flo-check-homeworkのコマンドラインで指定されたプログラム（オプションの引数付き）が起動します。たとえば、次のコマンド：</target>
        </trans-unit>
        <trans-unit id="abbc3782c92a22ff4cf2dff5e70febeb0f376869" translate="yes" xml:space="preserve">
          <source>flo-check-homework-decorate-games has options to customize the paths such as
/usr/games and /usr/local/games, as well as options to choose which locale to
use when a launcher script starts flo-check-homework, and when
flo-check-homework runs a game. See the output of
&amp;lsquo;flo-check-homework-decorate-games &amp;ndash;help&amp;rsquo; for more information.</source>
          <target state="translated">flo-check-homework-decorate-gamesには、/ usr / gamesや/ usr / local / gamesなどのパスをカスタマイズするオプションと、ランチャースクリプトがflo-check-homeworkを開始するときに使用するロケールを選択するオプションがあります。そして、flo-check-homeworkがゲームを実行するとき。詳細については、「flo-check-homework-decorate-games &amp;ndash;help」の出力を参照してください。</target>
        </trans-unit>
        <trans-unit id="6c34eedb49cc89c966d5c2826f17f97c28a0047a" translate="yes" xml:space="preserve">
          <source>option has been given or;</source>
          <target state="translated">オプションが与えられているか</target>
        </trans-unit>
        <trans-unit id="035055fb5e044a5edb8224d63f50f407ac595779" translate="yes" xml:space="preserve">
          <source>or;</source>
          <target state="translated">または</target>
        </trans-unit>
        <trans-unit id="9c35afdee62e0ac638c479b971dd4e9291491d3a" translate="yes" xml:space="preserve">
          <source>section of the
configuration file is equal to</source>
          <target state="translated">セクションは</target>
        </trans-unit>
        <trans-unit id="d89c73a62a8a33e33a5e28c5794a4c5ffcaf684b" translate="yes" xml:space="preserve">
          <source>section, defaulting to 1. If set to 0,
quitting is also forbidden as long as the program specified on the command
line (&amp;ldquo;desired program&amp;rdquo;) is running&amp;mdash;assuming it was started from
flo-check-homework. This can be useful with kids misusing a super magic
token to run dozens of games simultaneously.</source>
          <target state="translated">セクション。デフォルトは1です。0に設定すると、コマンドラインで指定されたプログラム（「目的のプログラム」）が実行されている限り、終了も禁止されます。ただし、flo-check-homeworkから開始されたと仮定します。これは、子供がスーパーマジックトークンを悪用して数十のゲームを同時に実行する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1d8d13e8df1a87bdeac8f3285a54d4ed93447d38" translate="yes" xml:space="preserve">
          <source>setting in the</source>
          <target state="translated">嵌め込み</target>
        </trans-unit>
        <trans-unit id="93792e8ea52eb13ae554efa3d25fc71ca840fae0" translate="yes" xml:space="preserve">
          <source>starts with items that have been incorrectly answered in previous sessions</source>
          <target state="translated">前回のセッションで不正解だった項目からスタート</target>
        </trans-unit>
        <trans-unit id="bbccdf2efb33b52e6c9d0a14dd70b2d415fbea6e" translate="yes" xml:space="preserve">
          <source>the</source>
          <target state="translated">その</target>
        </trans-unit>
        <trans-unit id="a34602e05906320153590326dff5a3194012161b" translate="yes" xml:space="preserve">
          <source>the .qm files (used for translations) that are relevant to your locale
settings must be generated from the corresponding .ts source files; this
can be done automatically with the Makefile shipped in the top-level
directory of the Git repository, provided you have GNU Make (run &amp;lsquo;make&amp;rsquo;).</source>
          <target state="translated">ロケール設定に関連する.qmファイル（翻訳に使用）は、対応する.tsソースファイルから生成する必要があります。これは、GNU Make（run'make '）があれば、GitリポジトリのトップレベルディレクトリにあるMakefileを使用して自動的に実行できます。</target>
        </trans-unit>
        <trans-unit id="df0f736415947135da47f1e6a701d071ca19def3" translate="yes" xml:space="preserve">
          <source>the flo_check_homework/images directory tree containing icons and &amp;ldquo;reward
images&amp;rdquo; must be copied from a release tarball, otherwise there will be an
error when all questions have been answered and the program tries to show
an image;</source>
          <target state="translated">アイコンと「報酬画像」を含むflo_check_homework / imagesディレクトリツリーは、リリースtarballからコピーする必要があります。そうしないと、すべての質問に回答してプログラムが画像を表示しようとしたときにエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="cfceded82883405c2241fa5de5c43ac2122cf721" translate="yes" xml:space="preserve">
          <source>the user has no valid super magic token.</source>
          <target state="translated">ユーザーは有効なスーパーマジックトークンを持っていません。</target>
        </trans-unit>
        <trans-unit id="a2f3a53ad672bb407ba64ebb77a56e551f73b61b" translate="yes" xml:space="preserve">
          <source>where each arrow indicates a different process. &amp;ldquo;some options&amp;rdquo; typically
contains -p (&amp;ndash;pretty-name) to tell flo-check-homework the &amp;ldquo;pretty name&amp;rdquo; of
program &amp;lsquo;foo&amp;rsquo;, for displaying in the graphical user interface.</source>
          <target state="translated">ここで、各矢印は異なるプロセスを示します。「一部のオプション」には通常、グラフィカルユーザーインターフェイスに表示するためのプログラム「foo」の「プリティネーム」をflo-check-homeworkに伝えるための-p（-pretty-name）が含まれています。</target>
        </trans-unit>
        <trans-unit id="6df9ca3870af8ed36f477739e3fc08da5c815836" translate="yes" xml:space="preserve">
          <source>will start flo-check-homework without any option and allow the pupil to run,
if the questionnaires receive good enough answers, the program &amp;lsquo;prog&amp;rsquo; with 3
arguments: &amp;lsquo;arg1&amp;rsquo;, &amp;lsquo;arg2&amp;rsquo; and &amp;lsquo;arg3&amp;rsquo;. To see all available command line
options, you may run:</source>
          <target state="translated">オプションなしでflo-check-homeworkを開始し、生徒が実行できるようにします。質問票が十分な回答を受け取った場合、プログラム「prog」は3つの引数「arg1」、「arg2」、「arg3」を持ちます。使用可能なすべてのコマンドラインオプションを表示するには、次のコマンドを実行します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
