<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/nbval/">
    <body>
      <group id="nbval">
        <trans-unit id="9e3577b50a267a6ba9e13878527edc2f89158308" translate="yes" xml:space="preserve">
          <source>2014 - 2017 David Cortes-Ortuno, Oliver Laslett, T. Kluyver, Vidar
Fauske, Maximilian Albert, MinRK, Ondrej Hovorka, Hans Fangohr</source>
          <target state="translated">2014年~2017年 ダヴィッド・コルテス=オルトゥーノ、オリバー・ラスレット、T・クルイバー、ヴィダル・ファウスケ、マクシミリアン・アルベルト、MinRK、オンドレイ・ホボルカ、ハンス・ファンゴア</target>
        </trans-unit>
        <trans-unit id="b84ee74f270c83638dbcc75bc2e3d3c0378bc73c" translate="yes" xml:space="preserve">
          <source>A py.test plugin to validate Jupyter notebooks</source>
          <target state="translated">Jupyter ノートブックを検証するための py.test プラグイン</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">謝辞</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">著者</target>
        </trans-unit>
        <trans-unit id="10a103c79d4525b5380e061fe594b670187d7080" translate="yes" xml:space="preserve">
          <source>Available on PyPi:</source>
          <target state="translated">PyPi で利用可能。</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">カバレッジ</target>
        </trans-unit>
        <trans-unit id="1a32b38370bfbfec799a436b6466b14b5d489fab" translate="yes" xml:space="preserve">
          <source>EPSRC&amp;acirc;&amp;euro;&amp;trade;s Centre for Doctoral Training in Next Generation
Computational Modelling, &lt;a href=&quot;http://ngcm.soton.ac.uk&quot;&gt;http://ngcm.soton.ac.uk&lt;/a&gt; (#EP/L015382/1) and
EPSRC&amp;acirc;&amp;euro;&amp;trade;s Doctoral Training Centre in Complex System Simulation
((EP/G03690X/1),</source>
          <target state="translated">EPSRCの次世代計算モデリングにおけるドクタートレーニングセンター、&lt;a href=&quot;http://ngcm.soton.ac.uk&quot;&gt;http：&lt;/a&gt; //ngcm.soton.ac.uk（＃EP / L015382 / 1）およびEPSRCの複雑系シミュレーションにおけるドクタートレーニングセンター（（EP / G03690X） / 1）、</target>
        </trans-unit>
        <trans-unit id="5f8eb8182ca21d1337c271701447a968d160491d" translate="yes" xml:space="preserve">
          <source>Each cell is taken as a test, a cell that doesn't reproduce the expected
output will fail.</source>
          <target state="translated">各セルはテストとして取られ、期待された出力を再現しないセルは失敗します。</target>
        </trans-unit>
        <trans-unit id="6d525b71568c2d982f46feb96b332bedcdc6e4a0" translate="yes" xml:space="preserve">
          <source>Execution</source>
          <target state="translated">実行</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">ヘルプ</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">どのように動作するか</target>
        </trans-unit>
        <trans-unit id="93140a74c161efd4dc729810e71ebacac01c9ebc" translate="yes" xml:space="preserve">
          <source>If the output lines are going to be sanitized, an extra flag, &lt;code&gt;--sanitize-with&lt;/code&gt;
together with the path to a confguration file with regex expressions, must be passed,
i.e.</source>
          <target state="translated">出力行を &lt;code&gt;--sanitize-with&lt;/code&gt; する場合は、追加のフラグ--sanitize-with と、正規表現を含む構成ファイルへのパスを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="891b49b9de74be531e0e0135440c14f4448e1a9e" translate="yes" xml:space="preserve">
          <source>In general, the functionality of the IPython notebook system is
quite complex, but a detailed explanation of the messages
and how the system works, can be found here</source>
          <target state="translated">一般的に、IPythonのノートブックシステムの機能は非常に複雑ですが、メッセージやシステムがどのように動作するかについての詳細な説明はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="b47730117882b11259d167e10bbaae3d9ff7da7e" translate="yes" xml:space="preserve">
          <source>OpenDreamKit Horizon 2020 European Research Infrastructures project (#676541), &lt;a href=&quot;http://opendreamkit.org&quot;&gt;http://opendreamkit.org&lt;/a&gt;</source>
          <target state="translated">OpenDreamKit Horizo​​n 2020 European Research Infrastructuresプロジェクト（＃676541）、&lt;a href=&quot;http://opendreamkit.org&quot;&gt;http：&lt;/a&gt; //opendreamkit.org</target>
        </trans-unit>
        <trans-unit id="830d344e8ff7afeadea59e7df0d1160cc5be0d73" translate="yes" xml:space="preserve">
          <source>Parallel execution</source>
          <target state="translated">並列実行</target>
        </trans-unit>
        <trans-unit id="bb6dd767a7ade75c1ad4ca8bfb2d614d4cf71369" translate="yes" xml:space="preserve">
          <source>Py.test plugin for validating Jupyter notebooks</source>
          <target state="translated">Jupyter ノートブックを検証するための Py.test プラグイン</target>
        </trans-unit>
        <trans-unit id="de79b5bfdcbfeec5538b642bed9053e945abfda8" translate="yes" xml:space="preserve">
          <source>Regarding the execution, roughly, the script initiates an
IPython Kernel with a &lt;code&gt;shell&lt;/code&gt; and
an &lt;code&gt;iopub&lt;/code&gt; sockets. The &lt;code&gt;shell&lt;/code&gt; is needed to execute the cells in
the notebook (it sends requests to the Kernel) and the &lt;code&gt;iopub&lt;/code&gt; provides
an interface to get the messages from the outputs. The contents
of the messages obtained from the Kernel are organised in dictionaries
with different information, such as time stamps of executions,
cell data types, cell types, the status of the Kernel, username, etc.</source>
          <target state="translated">実行に関しては、大まかに &lt;code&gt;iopub&lt;/code&gt; 、スクリプトは &lt;code&gt;shell&lt;/code&gt; とiopubソケットを使用してIPythonカーネルを開始します。 &lt;code&gt;shell&lt;/code&gt; （それがカーネルに要求を送信します）ノートブック内のセルを実行するために必要であると &lt;code&gt;iopub&lt;/code&gt; は出力からのメッセージを取得するためのインタフェースを提供します。カーネルから取得したメッセージの内容は、実行のタイムスタンプ、セルのデータ型、セルの種類、カーネルのステータス、ユーザー名など、さまざまな情報を含む辞書に整理されています。</target>
        </trans-unit>
        <trans-unit id="8f66cc399a9922f88f00d7cf4ecbc0e559d48989" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://nbviewer.jupyter.org/github/computationalmodelling/nbval/blob/master/docs/source/index.ipynb&quot;&gt;&lt;code&gt;docs/source/index.ipynb&lt;/code&gt;&lt;/a&gt; for the full documentation.</source>
          <target state="translated">完全なドキュメントについては、&lt;a href=&quot;http://nbviewer.jupyter.org/github/computationalmodelling/nbval/blob/master/docs/source/index.ipynb&quot;&gt; &lt;code&gt;docs/source/index.ipynb&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a10d079ccf65eb3432e00d5ff7b22a77c823e06e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;py.test&lt;/code&gt; system help can be obtained with &lt;code&gt;py.test -h&lt;/code&gt;, which will
show all the flags that can be passed to the command, such as the
verbose &lt;code&gt;-v&lt;/code&gt; option. The IPython notebook plugin can be found under the
&lt;code&gt;general&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;py.test&lt;/code&gt; システムのヘルプを用いて得ることができる &lt;code&gt;py.test -h&lt;/code&gt; など、詳細として、コマンドに渡すことができ、すべてのフラグが表示されますこれは、 &lt;code&gt;-v&lt;/code&gt; オプションを選択します。IPythonノートブックプラグインは、 &lt;code&gt;general&lt;/code&gt; セクションにあります。</target>
        </trans-unit>
        <trans-unit id="89cdc61ee6a994ecd850b818885b969a6b622684" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;regex&lt;/code&gt; option contains the expression that is going to be matched in the outputs, and
&lt;code&gt;replace&lt;/code&gt; is the string that will replace the &lt;code&gt;regex&lt;/code&gt; match. Currently, the section
names do not have any meaning or influence in the testing system, it will take
all the sections and replace the corresponding options.</source>
          <target state="translated">&lt;code&gt;regex&lt;/code&gt; のオプションは、出力にマッチされようとしている表現が含まれている、と &lt;code&gt;replace&lt;/code&gt; 置換する文字列です。 &lt;code&gt;regex&lt;/code&gt; のマッチを。現在、セクション名はテストシステムでは意味も影響もありません。すべてのセクションを取得し、対応するオプションを置き換えます。</target>
        </trans-unit>
        <trans-unit id="7cd4a45d93de8ee232f40191609d914d44915566" translate="yes" xml:space="preserve">
          <source>The Gordon and Betty Moore Foundation through Grant GBMF #4856,by the
Alfred P. Sloan Foundation and by the Helmsley Trust.</source>
          <target state="translated">ゴードン・アンド・ベティ・ムーア財団、アルフレッド・P・スローン財団、ヘルムスレイ・トラストによる助成金GBMF #4856。</target>
        </trans-unit>
        <trans-unit id="5807314d4d9efe7ab6d6c0dab4a460eb60dd4d20" translate="yes" xml:space="preserve">
          <source>The commands above will execute all the &lt;code&gt;.ipynb&lt;/code&gt; files and 'pytest' tests in the current folder.
Specify &lt;code&gt;-p no:python&lt;/code&gt; if you would like to execute notebooks only. Alternatively, you can execute a specific notebook:</source>
          <target state="translated">上記のコマンドは、現在のフォルダー内のすべての &lt;code&gt;.ipynb&lt;/code&gt; ファイルと「pytest」テストを実行します。ノートブックのみを実行する場合は、 &lt;code&gt;-p no:python&lt;/code&gt; を指定します。または、特定のノートブックを実行することもできます。</target>
        </trans-unit>
        <trans-unit id="271ed2b8b6f023cf9d8d2167f57cb43cb3f174dd" translate="yes" xml:space="preserve">
          <source>The extension looks through every cell that contains code in an IPython notebook
and then the &lt;code&gt;py.test&lt;/code&gt; system compares the outputs stored in the notebook
with the outputs of the cells when they are executed. Thus, the notebook itself is
used as a testing function.
The output lines when executing the notebook can be sanitized passing an
extra option and file, when calling the &lt;code&gt;py.test&lt;/code&gt; command. This file
is a usual configuration file for the &lt;code&gt;ConfigParser&lt;/code&gt; library.</source>
          <target state="translated">拡張機能は、IPythonノートブックのコードを含むすべてのセルを &lt;code&gt;py.test&lt;/code&gt; 、py.testシステムは、ノートブックに保存されている出力を、実行時にセルの出力と比較します。したがって、ノートブック自体がテスト機能として使用されます。ノートブックの実行時の出力行は、 &lt;code&gt;py.test&lt;/code&gt; コマンドを呼び出すときに、追加のオプションとファイルを渡してサニタイズできます。このファイルは、 &lt;code&gt;ConfigParser&lt;/code&gt; ライブラリの通常の構成ファイルです。</target>
        </trans-unit>
        <trans-unit id="2371a8e99b5d33ea38dd2240d6c7e55ab6c36c4e" translate="yes" xml:space="preserve">
          <source>The original prototype was based on the template in
&lt;a href=&quot;https://gist.github.com/timo/2621679&quot;&gt;https://gist.github.com/timo/2621679&lt;/a&gt; and the code of a testing system
for notebooks &lt;a href=&quot;https://gist.github.com/minrk/2620735&quot;&gt;https://gist.github.com/minrk/2620735&lt;/a&gt; which we
integrated and mixed with the &lt;code&gt;py.test&lt;/code&gt; system.</source>
          <target state="translated">オリジナルのプロトタイプは、テンプレートに基づいた &lt;a href=&quot;https://gist.github.com/timo/2621679&quot;&gt;https://gist.github.com/timo/2621679&lt;/a&gt;およびノートブックの試験システムのコード&lt;a href=&quot;https://gist.github.com/minrk/2620735&quot;&gt;https://gist.github.com/minrk/2620735&lt;/a&gt;我々は統合と混合します &lt;code&gt;py.test&lt;/code&gt; システム。</target>
        </trans-unit>
        <trans-unit id="d3351e698693a7398443ef94ae09bee4fc4ba928" translate="yes" xml:space="preserve">
          <source>The plugin adds functionality to py.test to recognise and collect Jupyter
notebooks. The intended purpose of the tests is to determine whether execution
of the stored inputs match the stored outputs of the &lt;code&gt;.ipynb&lt;/code&gt; file. Whilst also
ensuring that the notebooks are running without errors.</source>
          <target state="translated">プラグインは、Jupyterノートブックを認識して収集する機能をpy.testに追加します。テストの目的は、保存された入力の実行が &lt;code&gt;.ipynb&lt;/code&gt; ファイルの保存された出力と一致するかどうかを判断することです。また、ノートブックがエラーなしで実行されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="39f596eac520f21f991cd752978caefc396cf0fb" translate="yes" xml:space="preserve">
          <source>The tests were designed to ensure that Jupyter notebooks (especially those for
reference and documentation), are executing consistently.</source>
          <target state="translated">このテストは、Jupyter ノートブック (特にリファレンスとドキュメント用)が一貫して実行されていることを確認するために設計されました。</target>
        </trans-unit>
        <trans-unit id="518ad536f14769b43acda82d480724d2abbee622" translate="yes" xml:space="preserve">
          <source>This plugin was inspired by Andrea Zonca's py.test plugin for collecting unit
tests in the IPython notebooks (&lt;a href=&quot;https://github.com/zonca/pytest-ipynb&quot;&gt;https://github.com/zonca/pytest-ipynb&lt;/a&gt;).</source>
          <target state="translated">このプラグインは、IPythonノートブック（&lt;a href=&quot;https://github.com/zonca/pytest-ipynb&quot;&gt;https://github.com/zonca/pytest-ipynb&lt;/a&gt;）で単体テストを収集するためのAndreaZoncaのpy.testプラグインに触発されました。</target>
        </trans-unit>
        <trans-unit id="a8cbc59fb9fec235c0627d2f3e2d71d8ce034281" translate="yes" xml:space="preserve">
          <source>To execute this plugin, you need to execute &lt;code&gt;py.test&lt;/code&gt; with the &lt;code&gt;nbval&lt;/code&gt; flag
to differentiate the testing from the usual python files:</source>
          <target state="translated">このプラグインを実行するには、 &lt;code&gt;nbval&lt;/code&gt; フラグを &lt;code&gt;py.test&lt;/code&gt; してpy.testを実行し、テストを通常のpythonファイルと区別する必要があります。</target>
        </trans-unit>
        <trans-unit id="25f7d0e4cd673d533d66708ed77f8d1831d37722" translate="yes" xml:space="preserve">
          <source>To use notebooks to generate coverage for imported code, use the pytest-cov plugin.
nbval should automatically detect the relevant options and configure itself with it.</source>
          <target state="translated">ノートブックを使ってインポートされたコードのカバレッジを生成するには、 pytest-cov プラグインを使います。</target>
        </trans-unit>
        <trans-unit id="351da27665bebedc10f7f339bd01a6c9c7d8be82" translate="yes" xml:space="preserve">
          <source>We acknowledge financial support from</source>
          <target state="translated">経済的な支援を受けています。</target>
        </trans-unit>
        <trans-unit id="951f7f57f46b8d597182d4567340720e50ca50f0" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;--nbval-lax&lt;/code&gt;, which runs notebooks and checks for
errors, but only compares the outputs of cells with a &lt;code&gt;#NBVAL_CHECK_OUTPUT&lt;/code&gt;
marker comment.</source>
          <target state="translated">ノートブックを実行してエラーをチェックする &lt;code&gt;--nbval-lax&lt;/code&gt; を指定することもできますが、セルの出力は &lt;code&gt;#NBVAL_CHECK_OUTPUT&lt;/code&gt; マーカーコメントとのみ比較されます。</target>
        </trans-unit>
        <trans-unit id="10a28015b77a458b6058cdf5f9a802bf1a2a2a58" translate="yes" xml:space="preserve">
          <source>from the main directory. To uninstall:</source>
          <target state="translated">をメインディレクトリから削除してください。アンインストールするには</target>
        </trans-unit>
        <trans-unit id="6d5f6af97b5c1d4ac98897a7b20f62e6f1c784f6" translate="yes" xml:space="preserve">
          <source>nbval is compatible with the pytest-xdist plugin for parallel running of tests. It does
however require the use of the &lt;code&gt;--dist loadscope&lt;/code&gt; flag to ensure that all cells of one
notebook are run on the same kernel.</source>
          <target state="translated">nbvalは、テストを並列実行するためのpytest-xdistプラグインと互換性があります。ただし、1つのノートブックのすべてのセルが同じカーネルで実行されるようにするには、 &lt;code&gt;--dist loadscope&lt;/code&gt; フラグを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="de51b37bde794dedd808217657178fabb74f064b" translate="yes" xml:space="preserve">
          <source>or install the latest version from cloning the repository and running:</source>
          <target state="translated">または、リポジトリをクローンして実行している状態から最新版をインストールします。</target>
        </trans-unit>
        <trans-unit id="46ce7c5e3ad1585fbdb7a7d60311074a84b4879d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;my_sanitize_file&lt;/code&gt; has the following structure.</source>
          <target state="translated">ここで、 &lt;code&gt;my_sanitize_file&lt;/code&gt; の構造は次のとおりです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
