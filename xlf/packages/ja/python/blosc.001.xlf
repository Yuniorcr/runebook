<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/blosc/">
    <body>
      <group id="blosc">
        <trans-unit id="306f7d8f592613b6ffb22a3c50e9e6cdf296c0b7" translate="yes" xml:space="preserve">
          <source>) on this build-path with the appropriate
OS environment variables</source>
          <target state="translated">）適切なOS環境変数を含むこのビルドパス</target>
        </trans-unit>
        <trans-unit id="ca273357bc1f6243f21cd300385f2cd522cf0998" translate="yes" xml:space="preserve">
          <source>) or disabled (</source>
          <target state="translated">）または無効（</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">、</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">、および</target>
        </trans-unit>
        <trans-unit id="8c0d479d4bf0f3462961008326688ca35d7abd75" translate="yes" xml:space="preserve">
          <source>. By default all the codecs in Blosc are enabled except Snappy
(due to some issues with C++ with the</source>
          <target state="translated">。Snappy以外のBloscのすべてのコーデックはデフォルトで有効になっています（C ++でのいくつかの問題により、</target>
        </trans-unit>
        <trans-unit id="24cebc7d579a65c1685a019a4fda49673f4b29cd" translate="yes" xml:space="preserve">
          <source>. This often causes
trouble with the Snappy codec, which is written in C++, and as a result Snappy
is no longer compiled by default. This problem is not known to affect MSVC or
clang. Snappy is considered optional in Blosc as its compression performance
is below that of the other codecs.</source>
          <target state="translated">。これは、C ++で記述されたSnappyコーデックで問題を引き起こすことが多く、その結果、Snappyはデフォルトでコンパイルされなくなりました。この問題は、MSVCまたはclangに影響することはわかっていません。Snappyは、その圧縮パフォーマンスが他のコーデックの圧縮パフォーマンスよりも低いため、Bloscではオプションと見なされます。</target>
        </trans-unit>
        <trans-unit id="75297e2457f06bb491e17495af9d323154ab0d9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enjoy data!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;データをお楽しみください！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8ac573d6d9b75d461d7e1ca9c85ccc7319a3d17" translate="yes" xml:space="preserve">
          <source>After compiling, you can quickly check that the package is sane by
running the doctests in</source>
          <target state="translated">コンパイル後、パッケージが正常に動作しているかどうかは</target>
        </trans-unit>
        <trans-unit id="5c0b51aa9b1f4d1a6887b4524e2c81517e87f76e" translate="yes" xml:space="preserve">
          <source>Also, Blosc works quite well on ARM processors (even without NEON support yet):</source>
          <target state="translated">また、BloscはARMプロセッサ上では(NEONをサポートしていなくても)非常によく動作します。</target>
        </trans-unit>
        <trans-unit id="30afc21a61b60c236beb0f946f8bcb31d34b58f5" translate="yes" xml:space="preserve">
          <source>Also, some examples are available on python-blosc wiki page:</source>
          <target state="translated">また、いくつかの例は python-blosc wiki ページにあります。</target>
        </trans-unit>
        <trans-unit id="bcc9896e3686796a7f15958417961a869dd71f1a" translate="yes" xml:space="preserve">
          <source>Anaconda:</source>
          <target state="translated">アナコンダ</target>
        </trans-unit>
        <trans-unit id="569390ae26ca5da1c1e096e574657d275ef2d29e" translate="yes" xml:space="preserve">
          <source>Any codec can be enabled (</source>
          <target state="translated">任意のコーデックを有効にすることができます(</target>
        </trans-unit>
        <trans-unit id="71ddc1bc8336589cdd49da454cb853d0937840f3" translate="yes" xml:space="preserve">
          <source>Appveyor:</source>
          <target state="translated">アプベイヤー</target>
        </trans-unit>
        <trans-unit id="844550ab738ea00a30b8da99f16182fb8c79d223" translate="yes" xml:space="preserve">
          <source>Author:</source>
          <target state="translated">著者。</target>
        </trans-unit>
        <trans-unit id="6f3b2ca2746598a5c0c336c60d7f1e5542f3b64a" translate="yes" xml:space="preserve">
          <source>Benchmarking</source>
          <target state="translated">ベンチマーキング</target>
        </trans-unit>
        <trans-unit id="b8e58409dd8ba30f4054eb8efd5a862026c8105a" translate="yes" xml:space="preserve">
          <source>Blosc (&lt;a href=&quot;http://blosc.org&quot;&gt;http://blosc.org&lt;/a&gt;) is a high performance compressor optimized for
binary data.  It has been designed to transmit data to the processor
cache faster than the traditional, non-compressed, direct memory fetch
approach via a memcpy() OS call.</source>
          <target state="translated">Blosc（&lt;a href=&quot;http://blosc.org&quot;&gt;http://blosc.org&lt;/a&gt;）は、バイナリデータ用に最適化された高性能コンプレッサーです。これは、memcpy（）OS呼び出しを介した従来の非圧縮ダイレクトメモリフェッチアプローチよりも高速にデータをプロセッサキャッシュに送信するように設計されています。</target>
        </trans-unit>
        <trans-unit id="e6b23e86b7740f8c02b821ca4e934cb6446735a5" translate="yes" xml:space="preserve">
          <source>Blosc data compressor</source>
          <target state="translated">ブロスクデータ圧縮機</target>
        </trans-unit>
        <trans-unit id="0fd55b51a04b628cfbcbfb156f94b3cff34aa285" translate="yes" xml:space="preserve">
          <source>Blosc works well for compressing numerical arrays that contains data
with relatively low entropy, like sparse data, time series, grids with
regular-spaced values, etc.</source>
          <target state="translated">Bloscは、疎なデータ、時系列、等間隔のグリッドなど、比較的エントロピーの低いデータを含む数値配列を圧縮するのに適しています。</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">建物</target>
        </trans-unit>
        <trans-unit id="c5a976de7b5231fa616fbeac8a2d2805c1e84ee2" translate="yes" xml:space="preserve">
          <source>CC</source>
          <target state="translated">cc</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">行動規範</target>
        </trans-unit>
        <trans-unit id="c173852c1bde916154f0fd3dd8a4e279eb8fd1dd" translate="yes" xml:space="preserve">
          <source>Compiler specific optimisations are automatically enabled by inspecting
the CPU flags building Blosc. They can be manually disabled by setting
the following environmental variables:</source>
          <target state="translated">コンパイラ固有の最適化は、Blosc を構築する CPU フラグを検査することで自動的に有効になります。これらは、以下の環境変数を設定することで手動で無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="31d20aaa7a4f83b38f279c72da2082275b6834b2" translate="yes" xml:space="preserve">
          <source>Compiling with an installed Blosc library</source>
          <target state="translated">インストールされている Blosc ライブラリを使ってコンパイルする</target>
        </trans-unit>
        <trans-unit id="fb2f2ecf23eaf92105cedede8225f24465fcbbb2" translate="yes" xml:space="preserve">
          <source>Contact:</source>
          <target state="translated">連絡先</target>
        </trans-unit>
        <trans-unit id="97bb9934dcd21913a557d0f866f2f6f6900895ae" translate="yes" xml:space="preserve">
          <source>DISABLE_BLOSC_AVX2</source>
          <target state="translated">DISABLE_BLOSC_AVX2</target>
        </trans-unit>
        <trans-unit id="a989e5ec78309b53b60f23de30b35e7503a72071" translate="yes" xml:space="preserve">
          <source>DISABLE_BLOSC_SSE2</source>
          <target state="translated">DISABLE_BLOSC_SSE2</target>
        </trans-unit>
        <trans-unit id="7ca18cd9bc5ff3607a326944fe72195eca705ea4" translate="yes" xml:space="preserve">
          <source>Discussion about this module is welcome in the Blosc list:</source>
          <target state="translated">このモジュールについての議論は Blosc リストで歓迎します。</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">ドキュメント</target>
        </trans-unit>
        <trans-unit id="e40ede28fd5990dd24adf36f95917d01627691b9" translate="yes" xml:space="preserve">
          <source>For details on the ARM benchmark see: &lt;a href=&quot;https://github.com/Blosc/python-blosc/issues/105&quot;&gt;https://github.com/Blosc/python-blosc/issues/105&lt;/a&gt;</source>
          <target state="translated">ARMベンチマークの詳細については、&lt;a href=&quot;https://github.com/Blosc/python-blosc/issues/105&quot;&gt;https&lt;/a&gt;：//github.com/Blosc/python-blosc/issues/105を参照してください。</target>
        </trans-unit>
        <trans-unit id="bbbe05154cadab8f07232ad344b56d87ab5d0e3c" translate="yes" xml:space="preserve">
          <source>Francesc Alted</source>
          <target state="translated">フランチェスク・アルテッド</target>
        </trans-unit>
        <trans-unit id="1e9554d33659f8e6e1da82514dd1ba33ad0a8d35" translate="yes" xml:space="preserve">
          <source>Github:</source>
          <target state="translated">Githubです。</target>
        </trans-unit>
        <trans-unit id="4154018fa4fe8d89dae4d2c12358d35a42de2fc6" translate="yes" xml:space="preserve">
          <source>Gitter:</source>
          <target state="translated">ギッター</target>
        </trans-unit>
        <trans-unit id="ea9853c03f2ea48721d16ee4813dfb5ff51f5701" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://github.com/Blosc/c-blosc/releases&quot;&gt;https://github.com/Blosc/c-blosc/releases&lt;/a&gt; and download and install
the C-Blosc library.  Then, you can tell python-blosc where is the
C-Blosc library in a couple of ways:</source>
          <target state="translated">移動し&lt;a href=&quot;https://github.com/Blosc/c-blosc/releases&quot;&gt;https://github.com/Blosc/c-blosc/releases&lt;/a&gt;ダウンロードおよびC-Bloscライブラリをインストールします。次に、いくつかの方法でpython-bloscにC-Bloscライブラリの場所を通知できます。</target>
        </trans-unit>
        <trans-unit id="539f9075f1115963b758ca3c1539818b9f6c48a1" translate="yes" xml:space="preserve">
          <source>INCLUDE_LZ4</source>
          <target state="translated">INCLUDE_LZ4</target>
        </trans-unit>
        <trans-unit id="92b8f338b217a513f4b13d5dc8e87c461cbb0644" translate="yes" xml:space="preserve">
          <source>INCLUDE_SNAPPY</source>
          <target state="translated">INCLUDE_SNAPPY</target>
        </trans-unit>
        <trans-unit id="aeb8b6622d9d05946d04c010b0e005bb966b63a0" translate="yes" xml:space="preserve">
          <source>INCLUDE_ZLIB</source>
          <target state="translated">INCLUDE_ZLIB</target>
        </trans-unit>
        <trans-unit id="2212a8db764cc45767a86acd14cf340c4573dadf" translate="yes" xml:space="preserve">
          <source>If curious, you may want to run a small benchmark that compares a plain
NumPy array copy against compression through different compressors in
your Blosc build:</source>
          <target state="translated">興味があれば、NumPy のプレーンな配列コピーを、Blosc のビルドで異なるコンプレッサーを使った圧縮と比較する小さなベンチマークを実行してみるのもいいでしょう。</target>
        </trans-unit>
        <trans-unit id="0aac94de6f3cdf07ffec6de88c6304cdfb6bcb8e" translate="yes" xml:space="preserve">
          <source>If you need more control, there are different ways to compile python-blosc,
depending if you want to link with an already installed Blosc library or not.</source>
          <target state="translated">より多くの制御が必要な場合は、すでにインストールされている Blosc ライブラリとリンクするかどうかによって、 python-blosc をコンパイルする方法が異なります。</target>
        </trans-unit>
        <trans-unit id="9f7c74202d54b235dac151ebb60f6c1361f85b32" translate="yes" xml:space="preserve">
          <source>In case you find your own results interesting, please report them back
to the authors!</source>
          <target state="translated">もし、あなた自身の結果が面白いと思った場合は、著者に報告してください!</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="c9db08fa8a8423097b53c88f73664924e3af0150" translate="yes" xml:space="preserve">
          <source>Installing via setuptools</source>
          <target state="translated">setuptools経由でのインストール</target>
        </trans-unit>
        <trans-unit id="b38aeb2f302ef256e3a3b48ac9b724fdc64fea65" translate="yes" xml:space="preserve">
          <source>Just to whet your appetite, here are the results for an Intel Xeon
E5-2695 v3 @ 2.30GHz, running Python 3.5, CentOS 7, but YMMV (and
will vary!):</source>
          <target state="translated">ちょうどあなたの食欲をそそるために、ここでは、Intel Xeon E5-2695 v3 @ 2.30GHz、Python 3.5、CentOS 7を実行した結果ですが、YMMV(と変化するでしょう!)。</target>
        </trans-unit>
        <trans-unit id="0d95e238387210ec6d40b15964d300b404128167" translate="yes" xml:space="preserve">
          <source>Lastly, here is the &lt;a href=&quot;https://www.youtube.com/watch?v=rilU44j_wUU&amp;amp;list=PLNkWzv63CorW83NY3U93gUar645jTXpJF&amp;amp;index=15&quot;&gt;recording&lt;/a&gt;
and the &lt;a href=&quot;http://www.blosc.org/docs/haenel-ep14-compress-me-stupid.pdf&quot;&gt;slides&lt;/a&gt; from the talk
&amp;ldquo;Compress me stupid&amp;rdquo; at the EuroPython 2014.</source>
          <target state="translated">最後に、ここで&lt;a href=&quot;https://www.youtube.com/watch?v=rilU44j_wUU&amp;amp;list=PLNkWzv63CorW83NY3U93gUar645jTXpJF&amp;amp;index=15&quot;&gt;記録&lt;/a&gt; し、&lt;a href=&quot;http://www.blosc.org/docs/haenel-ep14-compress-me-stupid.pdf&quot;&gt;スライド&lt;/a&gt;の話からはEuroPython 2014で「私は愚か圧縮」。</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="d2a1123e6461654a07e49c2ea0e3f5b116e7bf06" translate="yes" xml:space="preserve">
          <source>Mailing list</source>
          <target state="translated">メーリングリスト</target>
        </trans-unit>
        <trans-unit id="5ca136fe28a0fd907c7bd7ec4f7d90933bda6008" translate="yes" xml:space="preserve">
          <source>Once installed, you can re-run the tests at any time with:</source>
          <target state="translated">一度インストールしてしまえば、いつでもテストを再実行することができます。</target>
        </trans-unit>
        <trans-unit id="ed41f3a91c4efb0dafdb3aa557d78cf0dcbbe317" translate="yes" xml:space="preserve">
          <source>Or alternatively, you can use the third-party</source>
          <target state="translated">あるいは、サードパーティ製の</target>
        </trans-unit>
        <trans-unit id="c826bab3ea34178653f4ea0f0686a8176c6fb9b2" translate="yes" xml:space="preserve">
          <source>Or, install it as a typical Python source package (requires c-compiler and
Python headers) from PyPi using</source>
          <target state="translated">または、PyPi から典型的な Python ソースパッケージ (c-compiler と Python ヘッダが必要)としてインストールします。</target>
        </trans-unit>
        <trans-unit id="2ce9f8ea41cba6368bf2ed457bba86fa278483eb" translate="yes" xml:space="preserve">
          <source>PyPi:</source>
          <target state="translated">PyPiです。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">テスト</target>
        </trans-unit>
        <trans-unit id="308be0a98cca2304771da77ffe97f0d6090fc34b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all. You can proceed with testing section now.</source>
          <target state="translated">それで全部です。テストセクションに進むことができます。</target>
        </trans-unit>
        <trans-unit id="1ef40047112237951589b1399580a61acf6831c8" translate="yes" xml:space="preserve">
          <source>The Blosc community has adopted a Code of Conduct that we expect project
participants to adhere to.  Please read the &lt;a href=&quot;CODE_OF_CONDUCT.md&quot;&gt;full text&lt;/a&gt;
so that you can understand what actions will and will not be tolerated.</source>
          <target state="translated">Bloscコミュニティは、プロジェクト参加者が遵守することを期待する行動規範を採用しています。 許容されるアクションと許容されないアクションを理解できるように、&lt;a href=&quot;CODE_OF_CONDUCT.md&quot;&gt;全文を&lt;/a&gt;読んでください。</target>
        </trans-unit>
        <trans-unit id="ea74ef142347113e92939064cdbcea8f037842f1" translate="yes" xml:space="preserve">
          <source>The Sphinx based documentation is here:</source>
          <target state="translated">Sphinxベースのドキュメントはこちらです。</target>
        </trans-unit>
        <trans-unit id="2d9de4f417e9427d4ef5d7ffab47f6cf69eb4f62" translate="yes" xml:space="preserve">
          <source>The software is licenses under a 3-Clause BSD licsense. A copy of the
python-blosc license can be found in &lt;a href=&quot;LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt;. A copy of all licenses can be
found in &lt;a href=&quot;LICENSES/&quot;&gt;LICENSES/&lt;/a&gt;.</source>
          <target state="translated">ソフトウェアは、3-Clause BSDライセンスのもとでのライセンスです。python-bloscライセンスのコピーは&lt;a href=&quot;LICENSE.txt&quot;&gt;LICENSE.txtにあり&lt;/a&gt;ます。すべてのライセンスのコピーは&lt;a href=&quot;LICENSES/&quot;&gt;LICENSES /にあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="58e26d28fc690962e157dd98c876b78b26347ff5" translate="yes" xml:space="preserve">
          <source>This approach uses pre-built, fully optimized versions of Blosc built via
CMake.</source>
          <target state="translated">このアプローチでは、CMake経由でビルドされたBloscの完全に最適化されたバージョンを使用します。</target>
        </trans-unit>
        <trans-unit id="052f6d688a3afdd321af78da204ac5569b57b883" translate="yes" xml:space="preserve">
          <source>Travis CI:</source>
          <target state="translated">トラヴィスCI。</target>
        </trans-unit>
        <trans-unit id="4274d554b3145370c23778bbf09ce9ba3452fd2a" translate="yes" xml:space="preserve">
          <source>URL:</source>
          <target state="translated">URLを表示します。</target>
        </trans-unit>
        <trans-unit id="7bec331040f3f70e2d692a486355511b0f3c666a" translate="yes" xml:space="preserve">
          <source>Using a flag:</source>
          <target state="translated">旗を使って</target>
        </trans-unit>
        <trans-unit id="e3ac499ec5fc66c5e2423f485e2a2e22781c5cbb" translate="yes" xml:space="preserve">
          <source>Using an environment variable:</source>
          <target state="translated">環境変数を使用しています。</target>
        </trans-unit>
        <trans-unit id="8e94246307cfc5038f114589e093dcb0ea2704ae" translate="yes" xml:space="preserve">
          <source>Valentin Haenel</source>
          <target state="translated">ヴァレンティン・ハイネル</target>
        </trans-unit>
        <trans-unit id="f8c94a3b4b1ef4285d46fa4ec2b367def151945e" translate="yes" xml:space="preserve">
          <source>What it is</source>
          <target state="translated">それが何であるか</target>
        </trans-unit>
        <trans-unit id="73758d71bb35948d9d84a937a59d064e14d18382" translate="yes" xml:space="preserve">
          <source>You can install binary packages with</source>
          <target state="translated">バイナリパッケージをインストールするには</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="5f7cdeb1e9f5dd079ce43da43c52ebf6c4e68dcf" translate="yes" xml:space="preserve">
          <source>blosc/test.py</source>
          <target state="translated">blosc/test.py</target>
        </trans-unit>
        <trans-unit id="9ac0de4daba957020c6a15ddddd1c03d76de4098" translate="yes" xml:space="preserve">
          <source>blosc@googlegroups.com</source>
          <target state="translated">blosc@googlegroups.com</target>
        </trans-unit>
        <trans-unit id="c15554fb9cc74ff0bedcd0e95cb60daf8fe29dda" translate="yes" xml:space="preserve">
          <source>comes with the Blosc sources with it and can be built with:</source>
          <target state="translated">Bloscソースが付属していて、それを使ってビルドすることができます。</target>
        </trans-unit>
        <trans-unit id="93e9a081a8643853030bf2c6cdb69e594aea735a" translate="yes" xml:space="preserve">
          <source>conda</source>
          <target state="translated">コンダ</target>
        </trans-unit>
        <trans-unit id="bbf2891940e505c4b9e433226b4e5c30e8a637ea" translate="yes" xml:space="preserve">
          <source>faltet@gmail.com</source>
          <target state="translated">faltet@gmail.com</target>
        </trans-unit>
        <trans-unit id="fce79b7fe1fee3a977fa1bd4efbd9e9a06c29c14" translate="yes" xml:space="preserve">
          <source>gcc</source>
          <target state="translated">ジーシーシー</target>
        </trans-unit>
        <trans-unit id="ce229d12ad5b8faddeceb209090e87fc7c9e0e27" translate="yes" xml:space="preserve">
          <source>is limited to using the compiler specified in the environment
variable</source>
          <target state="translated">は環境変数</target>
        </trans-unit>
        <trans-unit id="ed02b419c71a40639ee3cab560c7f968bea3ca80" translate="yes" xml:space="preserve">
          <source>nosetests</source>
          <target state="translated">ノーズテスト</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">ピップ</target>
        </trans-unit>
        <trans-unit id="fe483860332488bc52b4a123ce793fe2880b2e2b" translate="yes" xml:space="preserve">
          <source>python-blosc</source>
          <target state="translated">python-blosc</target>
        </trans-unit>
        <trans-unit id="4ae0bf4f975c855af7528a539a12a585a85a3712" translate="yes" xml:space="preserve">
          <source>python-blosc a Python package that wraps Blosc.  python-blosc supports
Python 3.6 or higher versions.</source>
          <target state="translated">python-blosc Blosc をラップした Python パッケージです。</target>
        </trans-unit>
        <trans-unit id="97cb05aa36628f817f4bc82cf0a9b29de7c3ad90" translate="yes" xml:space="preserve">
          <source>python-blosc: a Python wrapper for the extremely fast Blosc compression library</source>
          <target state="translated">python-blosc:超高速 Blosc 圧縮ライブラリの Python ラッパー</target>
        </trans-unit>
        <trans-unit id="543ba5faab29be163929a8cd3b2c4bafb96cdc17" translate="yes" xml:space="preserve">
          <source>script:</source>
          <target state="translated">スクリプトを使用しています。</target>
        </trans-unit>
        <trans-unit id="bff5288d43b5b0b423a623fd27ab60ad387791d3" translate="yes" xml:space="preserve">
          <source>setuptools</source>
          <target state="translated">セットアップツール</target>
        </trans-unit>
        <trans-unit id="073ba70e5cbdde5f61f4ad1444171350b89e0e3b" translate="yes" xml:space="preserve">
          <source>toolchain).</source>
          <target state="translated">ツールチェイン)を使用しています。</target>
        </trans-unit>
        <trans-unit id="4d788a4791b20ad4dbd4ea5ca6d6816777cd3816" translate="yes" xml:space="preserve">
          <source>valentin@haenel.co</source>
          <target state="translated">valentin@haenel.co</target>
        </trans-unit>
        <trans-unit id="74bf0e2b143e404ea881b20d88b63c3722a08121" translate="yes" xml:space="preserve">
          <source>which on posix systems is usually</source>
          <target state="translated">これは posix システムでは通常</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
