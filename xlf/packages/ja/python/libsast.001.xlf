<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/libsast/">
    <body>
      <group id="libsast">
        <trans-unit id="2b296af17506c34fd448def3990662f0d97db288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ajinabraham/njsscan&quot;&gt;njsscan&lt;/a&gt; SAST is built with libsast pattern matcher and semantic grep.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ajinabraham/njsscan&quot;&gt;njsscan&lt;/a&gt; SASTは、libsastパターンマッチャーとセマンティックgrepを使用して構築されています。</target>
        </trans-unit>
        <trans-unit id="a5d4bea91199618ecbd32a26e2630760069cb051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ajinabraham/nodejsscan&quot;&gt;nodejsscan&lt;/a&gt; nodejsscan is a static security code scanner for Node.js applications.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ajinabraham/nodejsscan&quot;&gt;nodejsscan&lt;/a&gt; nodejsscanは、Node.jsアプリケーション用の静的セキュリティコードスキャナーです。</target>
        </trans-unit>
        <trans-unit id="9c780f6921bb760168d9679225553fc2e80e0c1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://mobsf.github.io/Mobile-Security-Framework-MobSF/&quot;&gt;MobSF&lt;/a&gt; Static Code Analyzer for Android and iOS mobile applications.</source>
          <target state="translated">&lt;a href=&quot;https://mobsf.github.io/Mobile-Security-Framework-MobSF/&quot;&gt;&lt;/a&gt;AndroidおよびiOSモバイルアプリケーション用のMobSF静的コードアナライザー。</target>
        </trans-unit>
        <trans-unit id="13678f4d833ed7f9ca639008a0a5569a6c5a4f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;custom_field&lt;/code&gt;: Define your own custom fields that you can use as metadata</source>
          <target state="translated">&lt;code&gt;custom_field&lt;/code&gt; ：メタデータとして使用できる独自のカスタムフィールドを定義します</target>
        </trans-unit>
        <trans-unit id="c1650a1015f8a547a2b0986c3058fd98d4c3adba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;: A description for the rule</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt; ：ルールの説明</target>
        </trans-unit>
        <trans-unit id="bf45085704926f5222f2a482e253b7034a123560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; : A unique id for the rule</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ：ルールの一意のID</target>
        </trans-unit>
        <trans-unit id="d65467b15ed1a59ab2f6cac5fce89710231af6b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input_case&lt;/code&gt;: It can be &lt;code&gt;exact&lt;/code&gt;, &lt;code&gt;upper&lt;/code&gt; or &lt;code&gt;lower&lt;/code&gt;. Data will be converted to lower case/upper case/as it is before comparing with the regex.</source>
          <target state="translated">&lt;code&gt;input_case&lt;/code&gt; ： &lt;code&gt;exact&lt;/code&gt; 、 &lt;code&gt;upper&lt;/code&gt; または &lt;code&gt;lower&lt;/code&gt; にすることができます。データは、正規表現と比較する前に、小文字/大文字/そのままに変換されます。</target>
        </trans-unit>
        <trans-unit id="850a107df04803d7e0933e7ef0f3d740157d7655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pattern&lt;/code&gt;: List of patterns depends on &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pattern&lt;/code&gt; ：パターンのリストは &lt;code&gt;type&lt;/code&gt; によって異なります。</target>
        </trans-unit>
        <trans-unit id="c88bc6ef3494b7ac334d8841f5ea76ce3c96948b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;severity&lt;/code&gt;: It can be &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;severity&lt;/code&gt; ： &lt;code&gt;error&lt;/code&gt; 、 &lt;code&gt;warning&lt;/code&gt; または &lt;code&gt;info&lt;/code&gt; 可能性があります</target>
        </trans-unit>
        <trans-unit id="d064b00a450647b2bdd1274e1163613307010db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: Pattern Matcher supports &lt;code&gt;Regex&lt;/code&gt;, &lt;code&gt;RegexAnd&lt;/code&gt;, &lt;code&gt;RegexOr&lt;/code&gt;, &lt;code&gt;RegexAndOr&lt;/code&gt;, &lt;code&gt;RegexAndNot&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; ：パターンマッチャーは、 &lt;code&gt;Regex&lt;/code&gt; 、 &lt;code&gt;RegexAnd&lt;/code&gt; 、 &lt;code&gt;RegexOr&lt;/code&gt; 、 &lt;code&gt;RegexAndOr&lt;/code&gt; 、 &lt;code&gt;RegexAndNot&lt;/code&gt; をサポートします</target>
        </trans-unit>
        <trans-unit id="f247b1fb5fa24bf1b479437c1fedcb7ca492da8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pattern Matcher&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;パターンマッチャー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cb3836ba7565afa0be429a0e90a03027bb0f80c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Semantic Grep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;セマンティックGrep&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c6aae1f12e2111dd70c94c241b873c781e2bb5d" translate="yes" xml:space="preserve">
          <source>A generic SAST core built on top of semgrep and regex</source>
          <target state="translated">semgrep と regex の上に構築された汎用 SAST コア</target>
        </trans-unit>
        <trans-unit id="8da7b19a814147a079b7f59c2de1d0494f1c33ca" translate="yes" xml:space="preserve">
          <source>A rule consist of</source>
          <target state="translated">ルールは次のように構成されています。</target>
        </trans-unit>
        <trans-unit id="620211ea511c80fff41aa138ac55fa8ad5a2587a" translate="yes" xml:space="preserve">
          <source>A sample rule for Python code looks like</source>
          <target state="translated">Pythonコードのサンプルルールは次のようになります。</target>
        </trans-unit>
        <trans-unit id="0fd2854c95d1fe97c2bd26a493396a1f337579ba" translate="yes" xml:space="preserve">
          <source>A sample rule looks like</source>
          <target state="translated">サンプルルールは次のようになります。</target>
        </trans-unit>
        <trans-unit id="259152359663c90603cb3de10503242f1d86995e" translate="yes" xml:space="preserve">
          <source>CWE</source>
          <target state="translated">シーイーエムイー</target>
        </trans-unit>
        <trans-unit id="4b91918e82d5cef17a745f0886369f20996ba6c7" translate="yes" xml:space="preserve">
          <source>Command Line Options</source>
          <target state="translated">コマンドラインオプション</target>
        </trans-unit>
        <trans-unit id="641bf546bf5a3007f6e6fc43452d3c2754b5c924" translate="yes" xml:space="preserve">
          <source>Currently Pattern Matcher supports any language.</source>
          <target state="translated">現在、Pattern Matcherはどの言語にも対応しています。</target>
        </trans-unit>
        <trans-unit id="2eece05f4082ba6c81a926dbfc1e505fbb9eaf05" translate="yes" xml:space="preserve">
          <source>Currently it supports Python, Java, JavaScript, Go and C.</source>
          <target state="translated">現在はPython、Java、JavaScript、Go、Cをサポートしています。</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="403863b65d7f67071a92c4de9a41aa9a60100aad" translate="yes" xml:space="preserve">
          <source>Example: &lt;a href=&quot;https://github.com/ajinabraham/libsast/blob/master/tests/assets/rules/pattern_matcher/patterns.yaml&quot;&gt;Pattern Matcher Rule&lt;/a&gt;</source>
          <target state="translated">例：&lt;a href=&quot;https://github.com/ajinabraham/libsast/blob/master/tests/assets/rules/pattern_matcher/patterns.yaml&quot;&gt;パターンマッチャールール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d8879cbd44f4f62ba19bb5e0555b29e219f4251" translate="yes" xml:space="preserve">
          <source>Example: &lt;a href=&quot;https://github.com/ajinabraham/libsast/blob/master/tests/assets/rules/semantic_grep/sgrep.yaml&quot;&gt;Semantic Grep Rule&lt;/a&gt;</source>
          <target state="translated">例：&lt;a href=&quot;https://github.com/ajinabraham/libsast/blob/master/tests/assets/rules/semantic_grep/sgrep.yaml&quot;&gt;セマンティックGrepルール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f947ba524e8d83e06463f35d23aaae712de1f932" translate="yes" xml:space="preserve">
          <source>Generic SAST for Security Engineers. Powered by regex based pattern matcher and semantic aware &lt;a href=&quot;https://github.com/returntocorp/semgrep&quot;&gt;semgrep&lt;/a&gt;.</source>
          <target state="translated">セキュリティエンジニア向けの汎用SAST。正規表現ベースのパターンマッチャーとセマンティック対応の&lt;a href=&quot;https://github.com/returntocorp/semgrep&quot;&gt;semgrepを搭載&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f02060da66e4df81d5b93b0422fbc18a54583fe1" translate="yes" xml:space="preserve">
          <source>Inbuilt Standard Mapping Support</source>
          <target state="translated">組み込みの標準マッピングサポート</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="132ce498b42cc49c696f566fef217ce7dd3d698c" translate="yes" xml:space="preserve">
          <source>Made with</source>
          <target state="translated">で作られた</target>
        </trans-unit>
        <trans-unit id="86b16d60668705cc211788957d8275f36088939f" translate="yes" xml:space="preserve">
          <source>OWASP MASVS</source>
          <target state="translated">オワスプMASVS</target>
        </trans-unit>
        <trans-unit id="21d8c06b0d461fb1d813a685425206ee1a7acaff" translate="yes" xml:space="preserve">
          <source>OWASP Mobile Top 10</source>
          <target state="translated">OWASP モバイルトップ 10</target>
        </trans-unit>
        <trans-unit id="7e243b3abf10b547ff87aa77e9590ca8c2bae88d" translate="yes" xml:space="preserve">
          <source>OWASP Web Top 10</source>
          <target state="translated">OWASP ウェブトップ10</target>
        </trans-unit>
        <trans-unit id="92bc09ba7343da225a111739445eb93ddc04d63a" translate="yes" xml:space="preserve">
          <source>Pattern Matcher</source>
          <target state="translated">パターン マッチャー</target>
        </trans-unit>
        <trans-unit id="754c48215469f9af1fab1ec98187f8f75f68e222" translate="yes" xml:space="preserve">
          <source>Pattern Matcher is cross-platform, but Semgrep supports only Mac and Linux.</source>
          <target state="translated">Pattern Matcherはクロスプラットフォームですが、SemgrepはMacとLinuxしかサポートしていません。</target>
        </trans-unit>
        <trans-unit id="0711b02500c16372db7e037b0db241051fe28013" translate="yes" xml:space="preserve">
          <source>Python API</source>
          <target state="translated">パイソンエーピーアイ</target>
        </trans-unit>
        <trans-unit id="04fb80ea92de20695e3852663886f5cf6ef6f374" translate="yes" xml:space="preserve">
          <source>Realworld Implementations</source>
          <target state="translated">実世界での実装</target>
        </trans-unit>
        <trans-unit id="8978a5efd7852db4914317dd9b3dc6cf026054d1" translate="yes" xml:space="preserve">
          <source>See semgrep documentation &lt;a href=&quot;https://github.com/returntocorp/semgrep/blob/develop/docs/configuration-files.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">semgrepマニュアルを参照してください&lt;a href=&quot;https://github.com/returntocorp/semgrep/blob/develop/docs/configuration-files.md&quot;&gt;ここに&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="060de5741d7f8753e6ed99c8523f50f4415ad8d7" translate="yes" xml:space="preserve">
          <source>Semantic Grep</source>
          <target state="translated">セマンティックグラフ</target>
        </trans-unit>
        <trans-unit id="6f19af0a3d142fc32cb61facb31af289a781b1fc" translate="yes" xml:space="preserve">
          <source>Semantic Grep uses &lt;a href=&quot;https://github.com/returntocorp/semgrep&quot;&gt;semgrep&lt;/a&gt;, a fast and syntax-aware semantic code pattern search for many languages: like grep but for code.</source>
          <target state="translated">Semantic Grepは、&lt;a href=&quot;https://github.com/returntocorp/semgrep&quot;&gt;semgrepを&lt;/a&gt;使用します。これは、grepと同様ですがコードに対して、多くの言語に対して高速で構文を認識するセマンティックコードパターン検索です。</target>
        </trans-unit>
        <trans-unit id="a6863c04901557fd9f856b0ec0ec4caae0ed0f29" translate="yes" xml:space="preserve">
          <source>Test your pattern matcher rules</source>
          <target state="translated">パターンマッチャーのルールをテストする</target>
        </trans-unit>
        <trans-unit id="3113d7e125abc6107bbbec6751891664a3f370c4" translate="yes" xml:space="preserve">
          <source>Test your semgrep rules</source>
          <target state="translated">semgrepルールのテスト</target>
        </trans-unit>
        <trans-unit id="91768f5aaa427ecd6b1854b6250470b03661cf36" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://regex101.com/r/nGbAay/1&quot;&gt;Regex 101&lt;/a&gt; to write simple Python Regex rule patterns.</source>
          <target state="translated">&lt;a href=&quot;https://regex101.com/r/nGbAay/1&quot;&gt;Regex 101&lt;/a&gt;を使用して、単純なPythonRegexルールパターンを記述します。</target>
        </trans-unit>
        <trans-unit id="b0a6fd42e368f0d729012f3e0c8f38ea2162e71c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://semgrep.dev/vAb&quot;&gt;semgrep.dev&lt;/a&gt; to write semantic grep rule patterns.</source>
          <target state="translated">&lt;a href=&quot;https://semgrep.dev/vAb&quot;&gt;semgrep.dev&lt;/a&gt;を使用して、セマンティックgrepルールパターンを記述します。</target>
        </trans-unit>
        <trans-unit id="07ed7b45f2897cf64fa4f946550bb30ca54a8084" translate="yes" xml:space="preserve">
          <source>With libsast, you can write your own static analysis tools. libsast provides two matching engines:</source>
          <target state="translated">libsast を使うと、独自の静的解析ツールを書くことができます。</target>
        </trans-unit>
        <trans-unit id="1903eb866a2866cfbf58c107f8cdafbc4a9a8cc0" translate="yes" xml:space="preserve">
          <source>Write you own Static Analysis tool</source>
          <target state="translated">独自の静的解析ツールを作成</target>
        </trans-unit>
        <trans-unit id="02a7aff814163ce3ebff4fab0fe2de5f03335f60" translate="yes" xml:space="preserve">
          <source>in India</source>
          <target state="translated">インドで</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
