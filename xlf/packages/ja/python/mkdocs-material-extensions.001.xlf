<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/mkdocs-material-extensions/">
    <body>
      <group id="mkdocs-material-extensions">
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">例。</target>
        </trans-unit>
        <trans-unit id="f5e1055bf37b3ff6b56485d2613a913655a7cde0" translate="yes" xml:space="preserve">
          <source>Extension pack for Python Markdown.</source>
          <target state="translated">Python Markdown用の拡張パックです。</target>
        </trans-unit>
        <trans-unit id="17c076391013450ceb7b86b199052bb1fe65bdf3" translate="yes" xml:space="preserve">
          <source>If an icon name is already in the index, the icon will not be added. It is recommended to always have your icons in
sub-folders to help namespace them to avoid name collisions. In the example above, &lt;code&gt;bird&lt;/code&gt; was under &lt;code&gt;animals&lt;/code&gt; which
created the name &lt;code&gt;:animals-bird:&lt;/code&gt; and helped create a more unique name with less of a chance of creating a duplicate
name with existing emoji and Material icons.</source>
          <target state="translated">アイコン名がすでにインデックスにある場合、アイコンは追加されません。名前の衝突を避けるために名前空間を作成できるように、アイコンは常にサブフォルダーに入れることをお勧めします。上記の例では、 &lt;code&gt;bird&lt;/code&gt; は &lt;code&gt;:animals-bird:&lt;/code&gt; という名前を作成した &lt;code&gt;animals&lt;/code&gt; 下にあり、既存の絵文字とマテリアルアイコンで重複した名前を作成する可能性が少なく、よりユニークな名前を作成するのに役立ちました。</target>
        </trans-unit>
        <trans-unit id="59beb8d3be9596cd1e36a12dfec4b37770ab9d5b" translate="yes" xml:space="preserve">
          <source>If given an icon at &lt;code&gt;my_project/my_icons/animals/bird.svg&lt;/code&gt;, the icon would be available using the emoji syntax as
&lt;code&gt;:animals-bird:&lt;/code&gt;. Notice that the base folder that is provided doesn't contribute to the icon's name. Also, folders
are separated with &lt;code&gt;-&lt;/code&gt;. Folder names and icon names should be compatible with the emoji syntax, so special characters
should be avoided -- &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; are okay.</source>
          <target state="translated">アイコンを与えた場合 &lt;code&gt;my_project/my_icons/animals/bird.svg&lt;/code&gt; 、アイコンはと絵文字の構文を使用して利用可能となる &lt;code&gt;:animals-bird:&lt;/code&gt; 。提供されているベースフォルダはアイコンの名前に影響しないことに注意してください。また、フォルダは &lt;code&gt;-&lt;/code&gt; で区切られます。特殊文字は避けるべきであるように、名前とアイコン名は、絵文字の構文と互換性がありますフォルダ- &lt;code&gt;-&lt;/code&gt; と &lt;code&gt;_&lt;/code&gt; 大丈夫です。</target>
        </trans-unit>
        <trans-unit id="2cd94e53848fe9fc6efc914b3d450c583ad80aed" translate="yes" xml:space="preserve">
          <source>In MkDocs, you can override theme assets locally, and even add assets to the theme. Unfortunately, the Markdown parsing
process isn't aware of the MkDocs environment. Luckily, if you are using PyMdown Extensions 7.1, you can pass in custom
icon paths that will be used when constructing the emoji index and include your custom SVG assets. If a folder path of
&lt;code&gt;theme/my_icons&lt;/code&gt; was given to the index builder, all icons under &lt;code&gt;my_project/my_icons&lt;/code&gt;, even in sub-folders, would
become part of the index.</source>
          <target state="translated">MkDocsでは、テーマアセットをローカルでオーバーライドしたり、テーマにアセットを追加したりすることもできます。残念ながら、Markdown解析プロセスはMkDocs環境を認識していません。幸い、PyMdown Extensions 7.1を使用している場合は、絵文字インデックスを作成するときに使用されるカスタムアイコンパスを渡して、カスタムSVGアセットを含めることができます。 &lt;code&gt;theme/my_icons&lt;/code&gt; のフォルダーパスが インデックスビルダーに指定された場合、サブフォルダー内であっても、 &lt;code&gt;my_project/my_icons&lt;/code&gt; の下のすべてのアイコンがインデックスの一部になります。</target>
        </trans-unit>
        <trans-unit id="3c2611898371c8785487e231908db3e8c1afbf25" translate="yes" xml:space="preserve">
          <source>In addition to the custom index, you must also specify the associated custom generator. This will will find the
appropriate icon and insert it into your Markdown content as an inlined SVG.</source>
          <target state="translated">カスタムインデックスに加えて、関連するカスタムジェネレーターも指定する必要があります。これは適切なアイコンを見つけ、インラインSVGとしてMarkdownコンテンツに挿入します。</target>
        </trans-unit>
        <trans-unit id="5e67a02373654838808b08db96cc409aef257a3f" translate="yes" xml:space="preserve">
          <source>Inline SVG Icons</source>
          <target state="translated">インラインSVGアイコン</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="7115e8eb4fe680a3052f9e3ec9d4c28b69e5204f" translate="yes" xml:space="preserve">
          <source>Markdown extension resources for &lt;a href=&quot;https://github.com/squidfunk/mkdocs-material&quot;&gt;MkDocs for Material&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/squidfunk/mkdocs-material&quot;&gt;MkDocs forMaterialのマーク&lt;/a&gt;ダウン拡張リソース</target>
        </trans-unit>
        <trans-unit id="cbb07f930fa392fac74ad3f7c65e2dfb001979c7" translate="yes" xml:space="preserve">
          <source>MkDocs Material Extensions</source>
          <target state="translated">MkDocsマテリアル拡張機能</target>
        </trans-unit>
        <trans-unit id="7b383e3c8b17a4876e8fcfa6789a9202fe17a44b" translate="yes" xml:space="preserve">
          <source>MkDocs Material provides numerous icons from Material, FontAwesome, and Octicons, but it does so by inlining the SVG
icons into the source. Currently there is no easy way access these icons and arbitrarily insert them into Markdown
content. Users must include the icon fonts themselves and do it with HTML.</source>
          <target state="translated">MkDocs MaterialはMaterial、FontAwesome、およびOcticonsから多数のアイコンを提供しますが、SVGアイコンをソースにインライン化することで提供します。現在のところ、これらのアイコンにアクセスして任意にMarkdownコンテンツに挿入する簡単な方法はありません。ユーザーは、アイコンフォントを自分自身でインクルードし、HTMLでそれを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="b421e36b31ba979e30bb4cf179a2ffb4a4de1e43" translate="yes" xml:space="preserve">
          <source>Then, using the folder structure of Material's &lt;code&gt;.icons&lt;/code&gt; folder, you can specify icons:</source>
          <target state="translated">次に、Materialの &lt;code&gt;.icons&lt;/code&gt; フォルダーのフォルダー構造を使用して、アイコンを指定できます。</target>
        </trans-unit>
        <trans-unit id="df8642c2b8f3937719aa838b896a029ff02ae4f3" translate="yes" xml:space="preserve">
          <source>This module allows you to use PyMdown Extensions' &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/&quot;&gt;Emoji&lt;/a&gt; extension to enable easy insertion of MkDocs Material's
SVG assets using simple &lt;code&gt;:emoji-syntax:&lt;/code&gt;.  This is done by creating our own &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-indexes&quot;&gt;emoji index&lt;/a&gt; and
&lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-generators&quot;&gt;emoji generator&lt;/a&gt;. The custom index provides a modified version of the Emoji extensions Twemoji
index.</source>
          <target state="translated">このモジュールを使用すると、PyMdown Extensionsの&lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/&quot;&gt;Emoji&lt;/a&gt;拡張機能を使用して、単純な &lt;code&gt;:emoji-syntax:&lt;/code&gt; を使用してMkDocsMaterialのSVGアセットを簡単に挿入できます。これは、独自の&lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-indexes&quot;&gt;絵文字インデックス&lt;/a&gt;と &lt;a href=&quot;https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-generators&quot;&gt;絵文字ジェネレータを&lt;/a&gt;作成することによって行われます。カスタムインデックスは、絵文字拡張機能Twemojiインデックスの修正バージョンを提供します。</target>
        </trans-unit>
        <trans-unit id="e48c75e79062c267d2f499c2d095f4d23411a4c6" translate="yes" xml:space="preserve">
          <source>Using Local Custom Icons</source>
          <target state="translated">ローカルカスタムアイコンの使用</target>
        </trans-unit>
        <trans-unit id="858c84947a51f344057d4e099f892ba1e11652f2" translate="yes" xml:space="preserve">
          <source>You can provide as many paths as you would like, and they will be evaluated in the order that they are specified. The
Material theme's own icons will be evaluated after all custom paths. This allows a user to override Material's icons if
desired.</source>
          <target state="translated">好きなだけパスを指定することができ、指定された順に評価されます。Material テーマ独自のアイコンは、すべてのカスタムパスの後に評価されます。これにより、ユーザーは必要に応じて Material のアイコンを上書きすることができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
