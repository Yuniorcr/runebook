<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/adafruit-blinka/">
    <body>
      <group id="adafruit-blinka">
        <trans-unit id="7fe096fdbb0c5f131aa2e255f53dc284ae5b4368" translate="yes" xml:space="preserve">
          <source>. Open the index.html in your browser to
view them. It will also (due to -W) error out on any warning like Travis will. This is a good way to
locally verify it will pass.</source>
          <target state="translated">。ブラウザでindex.htmlを開いて表示します。また、（-Wにより）Travisのように警告が出た場合はエラーになります。これは、ローカルでパスすることを確認するための良い方法です。</target>
        </trans-unit>
        <trans-unit id="33344901740620a71025dc80505c59c7b6bfa894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;analogio&lt;/strong&gt; - analog input/output pins, using pin identities from board+microcontroller packages</source>
          <target state="translated">&lt;strong&gt;analogio-&lt;/strong&gt;ボード+マイクロコントローラーパッケージのピンIDを使用したアナログ入力/出力ピン</target>
        </trans-unit>
        <trans-unit id="715e0968514a5ceb268c09813f20aa29520194d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bitbangio&lt;/strong&gt; - software-driven interfaces for I2C, SPI</source>
          <target state="translated">&lt;strong&gt;bitbangio&lt;/strong&gt; -I2C、SPI用のソフトウェア駆動型インターフェース</target>
        </trans-unit>
        <trans-unit id="0372eb4a27ec9f5d176c1b38834c622dc11b5c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;board&lt;/strong&gt; - breakout-specific pin identities</source>
          <target state="translated">&lt;strong&gt;ボード&lt;/strong&gt; -ブレークアウト固有のピンID</target>
        </trans-unit>
        <trans-unit id="a1ea219213044b92c3451b17e53699d6cf545ae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;busio&lt;/strong&gt; - hardware-driven interfaces for I2C, SPI, UART</source>
          <target state="translated">&lt;strong&gt;busio&lt;/strong&gt; -I2C、SPI、UART用のハードウェア駆動型インターフェース</target>
        </trans-unit>
        <trans-unit id="cefdf4d2cbd2c4ac7a0e779108fb38ab9fb70eeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;digitalio&lt;/strong&gt; - digital input/output pins, using pin identities from board+microcontroller packages</source>
          <target state="translated">&lt;strong&gt;digitalio-&lt;/strong&gt;ボード+マイクロコントローラーパッケージのピンIDを使用するデジタル入力/出力ピン</target>
        </trans-unit>
        <trans-unit id="6bb0ba190d3b87c796e8108631548ef9cc146f56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;microcontroller&lt;/strong&gt; - chip-specific pin identities</source>
          <target state="translated">&lt;strong&gt;マイクロコントローラー&lt;/strong&gt; -チップ固有のピンID</target>
        </trans-unit>
        <trans-unit id="7a70bca1d4caef86ae690ca1f7f1bc9052e4b4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;time&lt;/strong&gt; * - substitute functions monkey-patched to time module</source>
          <target state="translated">&lt;strong&gt;time&lt;/strong&gt; *-時間モジュールにサルパッチされた代替関数</target>
        </trans-unit>
        <trans-unit id="a3d5329836aaf4177c98af048f53ef8e67274571" translate="yes" xml:space="preserve">
          <source>An example log from running the suites is &lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/issues/2#issuecomment-366713394&quot;&gt;here&lt;/a&gt; .</source>
          <target state="translated">スイートの実行によるログの例は&lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/issues/2#issuecomment-366713394&quot;&gt;こちら&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e26fea122a58c840dcfae6e063bef9434cf1bac1" translate="yes" xml:space="preserve">
          <source>At the time of writing (&lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/tree/7fc1f8ab477124628a5afebbf6826005955805f9&quot;&gt;git:7fc1f8ab&lt;/a&gt;),
the following sequence runs through some basic testing of the digitalio compatibility layer&amp;hellip;</source>
          <target state="translated">執筆時点（&lt;a href=&quot;https://github.com/cefn/Adafruit_Micropython_Blinka/tree/7fc1f8ab477124628a5afebbf6826005955805f9&quot;&gt;git：7fc1f8ab&lt;/a&gt;）では、次のシーケンスでdigitalio互換性レイヤーの基本的なテストを実行しています&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="99b633b8b55f4a4a0e4b874bf81f4324ac607609" translate="yes" xml:space="preserve">
          <source>Building locally</source>
          <target state="translated">地域に根ざした建物</target>
        </trans-unit>
        <trans-unit id="cb69dd8799c3abdb809d444b44a231f674fa024f" translate="yes" xml:space="preserve">
          <source>CircuitPython APIs for non-CircuitPython versions of Python such as CPython on Linux and MicroPython.</source>
          <target state="translated">Linux上のCPythonやMicroPythonなど、CircuitPython以外のバージョンのPythonのためのCircuitPython APIです。</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">貢献</target>
        </trans-unit>
        <trans-unit id="d56545e75d95b2435cc9c62cc398e3172c149ff4" translate="yes" xml:space="preserve">
          <source>Contributions are welcome! Please read our &lt;a href=&quot;https://github.com/adafruit/Adafruit_Blinka/blob/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;
before contributing to help this project stay welcoming.</source>
          <target state="translated">寄付は大歓迎です！ このプロジェクトを歓迎するために貢献する前&lt;a href=&quot;https://github.com/adafruit/Adafruit_Blinka/blob/master/CODE_OF_CONDUCT.md&quot;&gt;に行動規範を&lt;/a&gt;お読みください。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">依存関係</target>
        </trans-unit>
        <trans-unit id="b18e57b632a145ef125d8087b991254aaba98bc7" translate="yes" xml:space="preserve">
          <source>Installing from PyPI</source>
          <target state="translated">PyPIからのインストール</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">序章</target>
        </trans-unit>
        <trans-unit id="d86e86d26d7ed5831dd833e50db15beabe3b427a" translate="yes" xml:space="preserve">
          <source>Now, once you have the virtual environment activated:</source>
          <target state="translated">さて、仮想環境を有効にしたら</target>
        </trans-unit>
        <trans-unit id="6a19b9a532649d90147e5a88a947e03c26bb8062" translate="yes" xml:space="preserve">
          <source>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally &lt;a href=&quot;https://pypi.org/project/Adafruit-Blinka/&quot;&gt;from
PyPI&lt;/a&gt;. To install for current user:</source>
          <target state="translated">Raspberry PiなどのサポートされているGNU / Linuxシステムでは&lt;a href=&quot;https://pypi.org/project/Adafruit-Blinka/&quot;&gt;、PyPIから&lt;/a&gt;ローカルにドライバーをインストールできます。現在のユーザー向けにインストールするには：</target>
        </trans-unit>
        <trans-unit id="3e5c433f7d8cae971116b806e0ec8bd42c01c056" translate="yes" xml:space="preserve">
          <source>Sphinx documentation</source>
          <target state="translated">Sphinx ドキュメント</target>
        </trans-unit>
        <trans-unit id="3adf46447ec01b8679115961376c4e99e2c224f1" translate="yes" xml:space="preserve">
          <source>Sphinx is used to build the documentation based on rST files and comments in the code. First,
install dependencies (feel free to reuse the virtual environment from above):</source>
          <target state="translated">Sphinxを使って、コード内のrSTファイルやコメントを元にドキュメントを構築しています。まず、依存関係をインストールします(上の仮想環境を自由に再利用してください)。</target>
        </trans-unit>
        <trans-unit id="e77156778fbb21961728cc3fa1aae851da6b2f08" translate="yes" xml:space="preserve">
          <source>The Micropython compatibility layers described above are intended to provide a CircuitPython-like API for devices which
are running CPython or Micropython. Since corresponding packages should be built-in to any standard
CircuitPython image, they have no value on a device already running CircuitPython and would likely conflict in unhappy ways.</source>
          <target state="translated">上で説明したMicropython互換性レイヤは、CPythonやMicropythonが動作しているデバイスにCircuitPythonライクなAPIを提供することを目的としています。対応するパッケージは標準的なCircuitPythonイメージに組み込まれているはずなので、すでにCircuitPythonが動作しているデバイスでは何の価値もありません。</target>
        </trans-unit>
        <trans-unit id="6f19ffd32ecda6eff8a86c43a9d74b52ce7b09b7" translate="yes" xml:space="preserve">
          <source>The test suites in the test/src folder under &lt;strong&gt;testing.universal&lt;/strong&gt; are by design
intended to run on &lt;em&gt;either&lt;/em&gt; CircuitPython &lt;em&gt;or&lt;/em&gt; Micropython+compatibility layer to prove conformance.</source>
          <target state="translated">下のテスト/ srcのフォルダ内のテストスイート&lt;strong&gt;testing.universalは&lt;/strong&gt;、設計により上で実行することが意図されている&lt;em&gt;いずれか&lt;/em&gt; CircuitPython &lt;em&gt;または&lt;/em&gt;適合性を証明するためにMicropython +互換性レイヤ。</target>
        </trans-unit>
        <trans-unit id="5268ee3ffd38731aedcd480c195ec7624dcb46e8" translate="yes" xml:space="preserve">
          <source>This repository contains a selection of packages mirroring the CircuitPython API
on hosts running micropython. Working code exists to emulate the CircuitPython packages;</source>
          <target state="translated">このリポジトリには、micropythonが動作するホスト上でCircuitPython APIをミラーリングするパッケージが含まれています。CircuitPythonパッケージをエミュレートするための作業コードが存在します。</target>
        </trans-unit>
        <trans-unit id="53def67f6cbb39bce727a19f3a4558b94445af77" translate="yes" xml:space="preserve">
          <source>This will output the documentation to</source>
          <target state="translated">これは、ドキュメントを</target>
        </trans-unit>
        <trans-unit id="20630bf0bbe606a8cc817859bc925353782b3826" translate="yes" xml:space="preserve">
          <source>To install in a virtual environment in your current project:</source>
          <target state="translated">現在のプロジェクトの仮想環境にインストールするには</target>
        </trans-unit>
        <trans-unit id="31c2d531b91fc97976f1c8ace6110a618ddf43c7" translate="yes" xml:space="preserve">
          <source>To install system-wide (this may be required in some cases):</source>
          <target state="translated">システム全体にインストールする場合(場合によっては必要な場合もあります)。</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="39c20b829084d89585fba49031f96b4b0c49208a" translate="yes" xml:space="preserve">
          <source>docs/_build/html</source>
          <target state="translated">docs/build/html</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
