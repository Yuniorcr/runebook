<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/pydevd-reload/">
    <body>
      <group id="pydevd-reload">
        <trans-unit id="c8ba0e0e80da8e7a15bd54e300f9c1fc5eae951d" translate="yes" xml:space="preserve">
          <source>$ pip install pydevd_reload</source>
          <target state="translated">$ pip install pydevd_reload</target>
        </trans-unit>
        <trans-unit id="372c8649cc95a925c310291239087ac7775591a0" translate="yes" xml:space="preserve">
          <source>$ python pydevd_reload/tests/test_pydevd_reload.py</source>
          <target state="translated">$ python pydevd_reload / tests / test_pydevd_reload.py</target>
        </trans-unit>
        <trans-unit id="64fe8b1993c3631efd9a57e0ba61a04e4ce10634" translate="yes" xml:space="preserve">
          <source>A class may contain functions.</source>
          <target state="translated">クラスは関数を含むことができます。</target>
        </trans-unit>
        <trans-unit id="45ed41f76256f0c8b783bf69bacf78005bed15ee" translate="yes" xml:space="preserve">
          <source>A class or module may include a method called &amp;lsquo;__xreload_after_reload_update__&amp;rsquo; which is called
after the reload finishes.</source>
          <target state="translated">クラスまたはモジュールには、リロードの終了後に呼び出される「__xreload_after_reload_update__」というメソッドが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="8764b9ff81fa76d23d5dc7e38cf09970b63e12fd" translate="yes" xml:space="preserve">
          <source>A class or module may include a method called &amp;lsquo;__xreload_old_new__&amp;rsquo; which is called when pydevd_reload is
unable to reload a given attribute.</source>
          <target state="translated">クラスまたはモジュールには、pydevd_reloadが特定の属性をリロードできないときに呼び出される「__xreload_old_new__」というメソッドが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="0f09cf966c35f988877c84496048b18804f0d7c0" translate="yes" xml:space="preserve">
          <source>A module may contain classes and functions.</source>
          <target state="translated">モジュールは、クラスと関数を含むことができます。</target>
        </trans-unit>
        <trans-unit id="85fc8e14c0e5998747d59112477c85dca240cc33" translate="yes" xml:space="preserve">
          <source>A program may contain modules, classes and functions.</source>
          <target state="translated">プログラムは、モジュール、クラス、関数を含むことができます。</target>
        </trans-unit>
        <trans-unit id="e8ca47570e23771a28bf4833998c9e52346f05c0" translate="yes" xml:space="preserve">
          <source>A running python program consists of code logic and corresponding data. Code logic is the logic of what the program perform. Corresponding data is the environment of logic running.</source>
          <target state="translated">実行中のpythonプログラムは、コードロジックとそれに対応するデータで構成されています。コードロジックとは、プログラムが実行する内容のロジックです。対応するデータはロジックが動作している環境です。</target>
        </trans-unit>
        <trans-unit id="930546ec3c81e9675015651621a5c720389103df" translate="yes" xml:space="preserve">
          <source>Added code object name check to avoid update monkey patched code. *</source>
          <target state="translated">コードオブジェクト名のチェックを追加し、アップデートモンキーパッチを回避するようにしました。*</target>
        </trans-unit>
        <trans-unit id="f43c6bf58d5e02ac5c578cfe597fd4e7753ab141" translate="yes" xml:space="preserve">
          <source>Added support to update callable object. *</source>
          <target state="translated">呼び出し可能なオブジェクトの更新に対応しました。*</target>
        </trans-unit>
        <trans-unit id="fa448c61d554068e57e2d6ba9d37506c6350f10c" translate="yes" xml:space="preserve">
          <source>Added support to update function annotation.</source>
          <target state="translated">関数アノテーションの更新に対応しました。</target>
        </trans-unit>
        <trans-unit id="562d88ff9461caac1c9a6f737f09905fea107b48" translate="yes" xml:space="preserve">
          <source>Added support to update function closure. *</source>
          <target state="translated">関数クロージャの更新に対応しました。*</target>
        </trans-unit>
        <trans-unit id="f9857227698b6bc8c5e5cc29cd56f85f32e2a0a5" translate="yes" xml:space="preserve">
          <source>Also, you can just copy &amp;amp; paste the pydevd_reload.py which require no third-party dependency.</source>
          <target state="translated">また、サードパーティの依存関係を必要としないpydevd_reload.pyをコピーして貼り付けることもできます。</target>
        </trans-unit>
        <trans-unit id="febc5cf59486e64b60be23dfe8429b9e5a247c9e" translate="yes" xml:space="preserve">
          <source>An enhanced reload module from PyDev</source>
          <target state="translated">PyDev からの強化されたリロードモジュール</target>
        </trans-unit>
        <trans-unit id="c6bdcfacbce4969990084fda9947891d6603b6e2" translate="yes" xml:space="preserve">
          <source>Attributes/constants are added, but not changed (so singletons and the application state is not
broken &amp;ndash; use provided hooks to workaround it).</source>
          <target state="translated">属性/定数は追加されますが、変更されません（したがって、シングルトンとアプリケーションの状態は壊れません。提供されたフックを使用して回避します）。</target>
        </trans-unit>
        <trans-unit id="a36389df15f85ddff57a24739bab5d9f749b3485" translate="yes" xml:space="preserve">
          <source>Code using metaclasses may not always work.</source>
          <target state="translated">メタクラスを使用したコードは、必ずしも動作するとは限りません。</target>
        </trans-unit>
        <trans-unit id="1575183a2afc5189a73f3026780a3a1e238e8412" translate="yes" xml:space="preserve">
          <source>Dependent modules are not reloaded.</source>
          <target state="translated">依存モジュールはリロードされません。</target>
        </trans-unit>
        <trans-unit id="1fb2253b9a9bba300e791055b6751ed04bf56542" translate="yes" xml:space="preserve">
          <source>Fixed __file__ attribute in namespace so they will be updated.</source>
          <target state="translated">名前空間の__file__属性が更新されるように修正。</target>
        </trans-unit>
        <trans-unit id="d884ab5440373ad6cb467402bbb5604c682b23a3" translate="yes" xml:space="preserve">
          <source>Fixed compiled python file support.</source>
          <target state="translated">コンパイルされたpythonファイルのサポートを修正しました。</target>
        </trans-unit>
        <trans-unit id="10db143d946b605522ab3a4f6b03ad0dfdea35a6" translate="yes" xml:space="preserve">
          <source>Fixed reload failed when python code compiled from different paths.</source>
          <target state="translated">異なるパスからコンパイルした python コードのリロードに失敗したのを修正</target>
        </trans-unit>
        <trans-unit id="5fca07ff7702607ec38f8041c5988cf4f3621fed" translate="yes" xml:space="preserve">
          <source>If pydevd_reload find it to be a __metaclass__, then try to update it as a regular class.</source>
          <target state="translated">pydevd_reload で __metaclass__であることがわかったら、通常のクラスとして更新してみてください。</target>
        </trans-unit>
        <trans-unit id="507327e929ec7727429d2bcf336fc946999bf096" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have much time, just perform</source>
          <target state="translated">時間がない場合は、実行するだけです</target>
        </trans-unit>
        <trans-unit id="fb69047d126f2fa0616f60fd634ac6f29f02166c" translate="yes" xml:space="preserve">
          <source>If you have the source code you can run the tests with</source>
          <target state="translated">ソースコードがあれば、テストを実行するには</target>
        </trans-unit>
        <trans-unit id="9aaca1d509a90d7564b6699c9158b4947a7ffbe5" translate="yes" xml:space="preserve">
          <source>Important: when providing a hook, always use the namespace or cls provided and not anything in the global
namespace, as the global namespace are only temporarily created during the reload and may not reflect the
actual application state (while the cls and namespace passed are).</source>
          <target state="translated">重要:フックを提供する際には、常に提供された名前空間か cls を使用し、グローバル名前空間には何も入れないようにしてください。</target>
        </trans-unit>
        <trans-unit id="df66ef4f9fec541e48971fe99984a92ee3d241bf" translate="yes" xml:space="preserve">
          <source>Improvements</source>
          <target state="translated">改良点</target>
        </trans-unit>
        <trans-unit id="2e8583d4adf2a6cc5d33e8521a0b7bb5440b020e" translate="yes" xml:space="preserve">
          <source>In a class:</source>
          <target state="translated">クラスの中で。</target>
        </trans-unit>
        <trans-unit id="25401c5f88219049dd365daa1f047256a219c97d" translate="yes" xml:space="preserve">
          <source>In a module:</source>
          <target state="translated">モジュールの中で</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="c5cd3f4d6d64f4f7804d7f4afd084d11c8960fd5" translate="yes" xml:space="preserve">
          <source>Just import pydevd_reload and use pydevd_reload.xreload as the reload built-in function.</source>
          <target state="translated">pydevd_reloadをインポートして、リロード組み込み関数としてpydevd_reload.xreloadを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">制限事項</target>
        </trans-unit>
        <trans-unit id="4775fb7d3586c7dadca7b958095a6b39870f0c3b" translate="yes" xml:space="preserve">
          <source>New __slots__ can&amp;rsquo;t be added to existing classes.</source>
          <target state="translated">新しい__slots__を既存のクラスに追加することはできません。</target>
        </trans-unit>
        <trans-unit id="5862b2c1f6766ec8c4840b2264389393785062a6" translate="yes" xml:space="preserve">
          <source>Refined reload hooks. (eg, __xreload_old_new__ and __xreload_after_reload_update__)</source>
          <target state="translated">洗練されたリロードフック。(例:__xreload_old_new__と __xreload_after_reload_update__)</target>
        </trans-unit>
        <trans-unit id="54c03f3e134aef6ddbdf8e809d5f2003e41335c2" translate="yes" xml:space="preserve">
          <source>Reload hooks were changed</source>
          <target state="translated">リロードフックを変更しました</target>
        </trans-unit>
        <trans-unit id="952783fe2c6fbe060f6107a2d256c679963529e8" translate="yes" xml:space="preserve">
          <source>Removed limitation that functions with decorators cannot be handled. *</source>
          <target state="translated">デコレータを持つ関数は扱えないという制限を削除しました。*</target>
        </trans-unit>
        <trans-unit id="97096e9520d80309f7e87d1b6b72cb711476595c" translate="yes" xml:space="preserve">
          <source>Removed pydevd dependency.</source>
          <target state="translated">pydevdの依存関係を削除しました。</target>
        </trans-unit>
        <trans-unit id="aa0d9d2e9d4ebaa984e658a60348945ed33e9b89" translate="yes" xml:space="preserve">
          <source>Renamings are not handled correctly.</source>
          <target state="translated">名前の変更が正しく処理されない。</target>
        </trans-unit>
        <trans-unit id="312386841084261c610413fa4de8b7505f469407" translate="yes" xml:space="preserve">
          <source>Repository</source>
          <target state="translated">リポジトリ</target>
        </trans-unit>
        <trans-unit id="b021de41a69f320a39d2c764bd987241d9fd8beb" translate="yes" xml:space="preserve">
          <source>So, function is the basic logic structure of a program. The code logic hides in the high-level function object, reloading is based on replacing the code object of function object. The running environment may change, which means it&amp;rsquo;s probably dangerous to manipulate logic relevant data, so pydevd_reload provide custom hooks which allow data updates in demands.</source>
          <target state="translated">したがって、関数はプログラムの基本的な論理構造です。コードロジックは高レベルの関数オブジェクトに隠れており、リロードは関数オブジェクトのコードオブジェクトの置き換えに基づいています。実行環境が変更される可能性があります。つまり、論理関連データを操作するのはおそらく危険です。そのため、pydevd_reloadは、要求に応じてデータを更新できるカスタムフックを提供します。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">テスト</target>
        </trans-unit>
        <trans-unit id="daf76c8355dd752b4e63fb67b0bf5bf5d0922951" translate="yes" xml:space="preserve">
          <source>The project is hosted on GitHub. You can look at the source here:</source>
          <target state="translated">プロジェクトはGitHubでホストされています。ソースはこちらで見ることができます。</target>
        </trans-unit>
        <trans-unit id="ced36084041a234d47190a3bd1d3f54b3d289524" translate="yes" xml:space="preserve">
          <source>These changes make it more stable, especially in the common case (where in a debug session only the
contents of a function are changed), besides providing flexibility for users that want to extend
on it.</source>
          <target state="translated">これらの変更により、特に一般的なケース(デバッグセッションでは関数の内容のみが変更される)では、より安定したものとなり、それを拡張したいユーザのための柔軟性を提供しています。</target>
        </trans-unit>
        <trans-unit id="444890383e259dd383b7eb98f04344d7e73d3e6f" translate="yes" xml:space="preserve">
          <source>This is a reload library based on pydevd_reload.py from &lt;a href=&quot;https://github.com/fabioz/PyDev.Debugger&quot;&gt;https://github.com/fabioz/PyDev.Debugger&lt;/a&gt;. The original library is used in PyDev &amp;amp; PyCharm.</source>
          <target state="translated">これは、&lt;a href=&quot;https://github.com/fabioz/PyDev.Debugger&quot;&gt;https：&lt;/a&gt; //github.com/fabioz/PyDev.Debuggerのpydevd_reload.pyに基づくリロードライブラリです。元のライブラリはPyDevとPyCharmで使用されます。</target>
        </trans-unit>
        <trans-unit id="16f28ce6d1fb08887c80cbe8360701f940e536c1" translate="yes" xml:space="preserve">
          <source>This standalone pydevd_reload library has following improvements than original pydevd_reload.py:</source>
          <target state="translated">このスタンドアロンの pydevd_reload ライブラリは、オリジナルの pydevd_reload.py よりも以下の点が改善されています。</target>
        </trans-unit>
        <trans-unit id="4a0f419d94bb4a51b5ea7b0869ff756489538f1c" translate="yes" xml:space="preserve">
          <source>To do something after the whole reload is finished:</source>
          <target state="translated">全体のリロードが終わった後に何かをすること。</target>
        </trans-unit>
        <trans-unit id="7e0c34c448ef7de4248fec8afa04e0ff00a9e05d" translate="yes" xml:space="preserve">
          <source>To participate in the change of some attribute:</source>
          <target state="translated">何らかの属性の変更に参加すること。</target>
        </trans-unit>
        <trans-unit id="77a12b53bc8b1c126f4d0b8b475764762dde6031" translate="yes" xml:space="preserve">
          <source>Update code by default</source>
          <target state="translated">デフォルトでコードを更新</target>
        </trans-unit>
        <trans-unit id="3626c06466a47b97d4108194c72b0601d76130f1" translate="yes" xml:space="preserve">
          <source>Update data by custom hooks</source>
          <target state="translated">カスタムフックによるデータ更新</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="f8e24a405ad1f2b5536c366d3d604e25b01a449a" translate="yes" xml:space="preserve">
          <source>__xreload_after_reload_update__</source>
          <target state="translated">__xreload_after_reload_update__</target>
        </trans-unit>
        <trans-unit id="59b4df78bdded94fd1994ae9c04ecbd43df41874" translate="yes" xml:space="preserve">
          <source>__xreload_old_new__</source>
          <target state="translated">__xreload_old_new__</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="c9ca701af63e72a3afcca265af4dd45abf522e5c" translate="yes" xml:space="preserve">
          <source>custom hooks which allow user to update data in a module. The hook functions can also be hot updated in a reload.</source>
          <target state="translated">ユーザがモジュール内のデータを更新できるようにするカスタムフックです。フック関数は、リロード時にホットアップデートすることもできます。</target>
        </trans-unit>
        <trans-unit id="5166eb0a62786aeb2f6b1f405ca7aedcf143bd5b" translate="yes" xml:space="preserve">
          <source>in a class:</source>
          <target state="translated">クラスの中で</target>
        </trans-unit>
        <trans-unit id="7248daef1e22d30a2bef2e2af75603553514ad86" translate="yes" xml:space="preserve">
          <source>pydevd_reload don&amp;rsquo;t recreate the old namespace from new classes. Rather, it keeps the existing namespace, load a new version of it and update only some of the things pydevd_reload can inplace. That way, pydevd_reload don&amp;rsquo;t break things such as singletons or end up with a second representation of the same class in memory.</source>
          <target state="translated">pydevd_reloadは、新しいクラスから古い名前空間を再作成しません。むしろ、既存の名前空間を保持し、その新しいバージョンをロードして、pydevd_reloadがインプレースできるものの一部のみを更新します。そうすれば、pydevd_reloadはシングルトンなどを壊したり、メモリ内の同じクラスの2番目の表現になってしまうことはありません。</target>
        </trans-unit>
        <trans-unit id="9531a11e423b84da4f12c9f48f568359077a0360" translate="yes" xml:space="preserve">
          <source>pydevd_reload don&amp;rsquo;t remove old attributes (and leave them lying around even if they&amp;rsquo;re no longer used).</source>
          <target state="translated">pydevd_reloadは古い属性を削除しません（そして、それらが使用されなくなったとしても、それらをそのままにしておきます）。</target>
        </trans-unit>
        <trans-unit id="8a4791a753fd21347b422d69435ce3fddf705080" translate="yes" xml:space="preserve">
          <source>pydevd_reload reloads code objects in a module by default, and provides</source>
          <target state="translated">pydevd_reloadはデフォルトでモジュール内のコードオブジェクトをリロードします。</target>
        </trans-unit>
        <trans-unit id="af67514588e4b438d95718d7b2f158306257dfb9" translate="yes" xml:space="preserve">
          <source>which will install the module(without tests) on your system.</source>
          <target state="translated">これはあなたのシステムにモジュール(テストなし)をインストールします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
