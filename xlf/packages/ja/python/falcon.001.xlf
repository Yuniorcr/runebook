<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/falcon/">
    <body>
      <group id="falcon">
        <trans-unit id="47ffdbbd14daa10bb38719f58a11e44b2d1bc933" translate="yes" xml:space="preserve">
          <source>$ xdg-open docs/_build/html/index.html</source>
          <target state="translated">$ xdg-docs / _build / html /index.htmlを開きます</target>
        </trans-unit>
        <trans-unit id="987dc9b6845074c013fdfd0ad40a0731cd2e367b" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Falcon is rock solid and it&amp;rsquo;s fast.&amp;rdquo;</source>
          <target state="translated">「ファルコンは堅実で高速です。」</target>
        </trans-unit>
        <trans-unit id="ff1a1ce11f3e966a139e7d980322e4604f3c17c8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Falcon looks great so far. I hacked together a quick test for a
tiny server of mine and was ~40% faster with only 20 minutes of
work.&amp;rdquo;</source>
          <target state="translated">「これまでのところ、ファルコンは素晴らしいようです。私は私の小さなサーバーの簡単なテストを組み合わせてハックし、わずか20分の作業で最大40％高速になりました。」</target>
        </trans-unit>
        <trans-unit id="38cdb6353f0df1d3444fef5bfc78559fbc3638c2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;I feel like I&amp;rsquo;m just talking HTTP at last, with nothing in the
middle. Falcon seems like the requests of backend.&amp;rdquo;</source>
          <target state="translated">「ついにHTTPを話しているように感じますが、途中には何もありません。Falconはバックエンドのリクエストのようです。」</target>
        </trans-unit>
        <trans-unit id="4b60856cac7099fb678e501e54cc608214024152" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;I&amp;rsquo;m loving #falconframework! Super clean and simple, I finally
have the speed and flexibility I need!&amp;rdquo;</source>
          <target state="translated">「私は#falconframeworkが大好きです！非常にクリーンでシンプル、必要なスピードと柔軟性がついに実現しました！」</target>
        </trans-unit>
        <trans-unit id="a701e27daff8acc26230529120c26eedb6998897" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;The source code for Falcon is so good, I almost prefer it to
documentation. It basically can&amp;rsquo;t be wrong.&amp;rdquo;</source>
          <target state="translated">「Falconのソースコードはとても良いので、ドキュメントよりもほとんど好きです。基本的に間違いはありません。」</target>
        </trans-unit>
        <trans-unit id="1954c176b4fb4901c89087d1cd880d8f28a9199c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;We have been using Falcon as a replacement for [framework] and we simply love the performance (three times faster) and code base size (easily half of our original [framework] code).&amp;rdquo;</source>
          <target state="translated">「[フレームワーク]の代わりにFalconを使用してきましたが、パフォーマンス（3倍高速）とコードベースサイズ（元の[フレームワーク]コードの半分）が気に入っています。」</target>
        </trans-unit>
        <trans-unit id="1bebe06c37fc9792864c909c11d0dac7776ed9b0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;What other framework has integrated support for 786 TRY IT NOW ?&amp;rdquo;</source>
          <target state="translated">「他のどのフレームワークが786 TRY IT NOWのサポートを統合しましたか？」</target>
        </trans-unit>
        <trans-unit id="f2b3122dfc617597edd298c7eb3d974f67d1f69a" translate="yes" xml:space="preserve">
          <source>, which will in turn detect the presence of Cython
and then compile (AKA cythonize) the Falcon framework with the system&amp;rsquo;s
default C compiler.</source>
          <target state="translated">、Cythonの存在を検出し、システムのデフォルトのCコンパイラを使用してFalconフレームワークをコンパイル（別名cythonize）します。</target>
        </trans-unit>
        <trans-unit id="75262c839fe7bdce825dee598401d72dc8394722" translate="yes" xml:space="preserve">
          <source>-v</source>
          <target state="translated">-v</target>
        </trans-unit>
        <trans-unit id="88f83d5feb7c22b5e9553dc817e91eec62859a55" translate="yes" xml:space="preserve">
          <source>7ideas</source>
          <target state="translated">セブンアイデア</target>
        </trans-unit>
        <trans-unit id="7c958e6846c515af33c4c8ad9e6e5b0f189936b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://pypy.org/&quot;&gt;PyPy&lt;/a&gt; is the fastest way to run your Falcon app.
Both PyPy2.7 and PyPy3.5 are supported as of PyPy v5.10.</source>
          <target state="translated">&lt;a href=&quot;http://pypy.org/&quot;&gt;PyPy&lt;/a&gt;はFalconアプリを実行する最速の方法です。PyPy v5.10では、PyPy2.7とPyPy3.5の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="48b713fa01669ca9ea3a39d18c67317459c215af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://falconframework.org&quot;&gt;Falcon&lt;/a&gt; is a reliable,
high-performance Python web framework for building
large-scale app backends and microservices. It encourages the REST
architectural style, and tries to do as little as possible while
remaining highly effective.</source>
          <target state="translated">&lt;a href=&quot;https://falconframework.org&quot;&gt;Falcon&lt;/a&gt;は、大規模なアプリバックエンドとマイクロサービスを構築するための信頼性の高い高性能Pythonウェブフレームワークです。これは、RESTアーキテクチャースタイルを奨励し、非常に効果的でありながら、できる限り少ないことを試みます。</target>
        </trans-unit>
        <trans-unit id="3e43e25f6223f565dca759f571c57750860bb5d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry/dev for Falcon contributors&lt;/a&gt; @ Gitter</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;Falcon貢献者向けのfalconry / dev&lt;/a&gt; @ Gitter</target>
        </trans-unit>
        <trans-unit id="cfa0111ce52e2c7b73f0813c0cb8c46c3b6fe2a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;falconry/user for Falcon users&lt;/a&gt; @ Gitter</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;Falconユーザー用のfalconry / user&lt;/a&gt; @ Gitter</target>
        </trans-unit>
        <trans-unit id="67f91d1ca140fecb368aba1f496fa949ba0989c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;- Antoine de Saint-Exup&amp;eacute;ry&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-アントワーヌドサンテグジュペリ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1cb5058b74e7cf413e7a88730fe773866defbe5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debuggable.&lt;/strong&gt; Falcon eschews magic. It&amp;rsquo;s easy to tell which inputs
lead to which outputs. Unhandled exceptions are never encapsulated or
masked. Potentially surprising behaviors, such as automatic request body
parsing, are well-documented and disabled by default. Finally, when it
comes to the framework itself, we take care to keep logic paths simple
and understandable. All this makes it easier to reason about the code
and to debug edge cases in large-scale deployments.</source>
          <target state="translated">&lt;strong&gt;デバッグ可能。&lt;/strong&gt;ファルコンは魔法を避けます。どの入力がどの出力につながるかは簡単にわかります。未処理の例外がカプセル化またはマスクされることはありません。自動リクエスト本文の解析などの潜在的に驚くべき動作は十分に文書化されており、デフォルトでは無効になっています。最後に、フレームワーク自体に関しては、ロジックパスをシンプルでわかりやすいものに保つように注意しています。これらすべてにより、コードを推論し、大規模な展開でエッジケースをデバッグすることが容易になります。</target>
        </trans-unit>
        <trans-unit id="d4fc576374150903e4da607d935600ed9ecf5c59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fast.&lt;/strong&gt; Same hardware, more requests. Falcon turns around
requests several times faster than most other Python frameworks. For
an extra speed boost, Falcon compiles itself with Cython when
available, and also works well with &lt;a href=&quot;https://pypy.org&quot;&gt;PyPy&lt;/a&gt;.
Considering a move to another programming language? Benchmark with
Falcon + PyPy first.</source>
          <target state="translated">&lt;strong&gt;速い。&lt;/strong&gt;同じハードウェア、より多くの要求。Falconは、他のほとんどのPythonフレームワークよりも数倍速くリクエストを処理します。さらに高速化するために、Falconは利用可能な場合はCythonで自動的にコンパイルされ、&lt;a href=&quot;https://pypy.org&quot;&gt;PyPy&lt;/a&gt;でもうまく機能します。別のプログラミング言語への移行を検討していますか？Falcon + PyPyを最初に使用したベンチマーク。</target>
        </trans-unit>
        <trans-unit id="c744ced3ca5f2a74639d8b9a5d9db12bb2c99ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Flexible.&lt;/strong&gt; Falcon leaves a lot of decisions and implementation
details to you, the API developer. This gives you a lot of freedom to
customize and tune your implementation. Due to Falcon&amp;rsquo;s minimalist
design, Python community members are free to independently innovate on
&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon add-ons and complementary packages&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;フレキシブル。&lt;/strong&gt;Falconは、API開発者であるあなたに多くの決定と実装の詳細を残します。これにより、実装をカスタマイズおよび調整する自由が大幅に広がります。Falconのミニマリストデザインにより、Pythonコミュニティのメンバーは、&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falconアドオンと補足パッケージを&lt;/a&gt;自由に革新できます。</target>
        </trans-unit>
        <trans-unit id="a850502bae1f427adc3517c437b7e307839a2047" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Installing on OS X&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;OS Xへのインストール&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39cf29289e092b732525795f51819e30740b7f9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reliable.&lt;/strong&gt; We go to great lengths to avoid introducing
breaking changes, and when we do they are fully documented and only
introduced (in the spirit of
&lt;a href=&quot;http://semver.org/&quot;&gt;SemVer&lt;/a&gt;) with a major version
increment. The code is rigorously tested with numerous inputs and we
require 100% coverage at all times. Falcon does not depend on any
external Python packages.</source>
          <target state="translated">&lt;strong&gt;信頼性のある。&lt;/strong&gt;重大な変更が導入されないように&lt;a href=&quot;http://semver.org/&quot;&gt;細心の注意を払ってい&lt;/a&gt;ます。変更が行われると、完全に文書化され、メジャーバージョンの増分でのみ（SemVerの精神で）導入され ます。コードは多数の入力で厳密にテストされており、常に100％のカバレッジが必要です。Falconは外部のPythonパッケージに依存していません。</target>
        </trans-unit>
        <trans-unit id="8c534ebb5db5df1cac602a6e41637d1d1a18249a" translate="yes" xml:space="preserve">
          <source>A more complex example</source>
          <target state="translated">より複雑な例</target>
        </trans-unit>
        <trans-unit id="e332cccd28f9d33eb4afbb0ba6f5e96e9c76b914" translate="yes" xml:space="preserve">
          <source>A number of Falcon add-ons, templates, and complementary packages are
available for use in your projects. We&amp;rsquo;ve listed several of these on the
&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wiki&lt;/a&gt; as a starting
point, but you may also wish to search PyPI for additional resources.</source>
          <target state="translated">多くのFalconアドオン、テンプレート、および補足パッケージがプロジェクトで使用できます。これらのいくつかを&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wikiに&lt;/a&gt;開始点としてリストしましたが、追加のリソースについてPyPIを検索することもできます。</target>
        </trans-unit>
        <trans-unit id="1ae4de082167bd69886283d58fc776d53edd3ccb" translate="yes" xml:space="preserve">
          <source>APPSEC(riker): In all trust, there is the possibility for betrayal.</source>
          <target state="translated">APPSEC(ライカー)。すべての信頼には裏切りの可能性がある。</target>
        </trans-unit>
        <trans-unit id="39e7013369f95cb36ddf9d7e2c58567c6aa444fd" translate="yes" xml:space="preserve">
          <source>An unladen web framework for building APIs and app backends.</source>
          <target state="translated">APIやアプリのバックエンドを構築するための無負荷のWebフレームワーク。</target>
        </trans-unit>
        <trans-unit id="abd629313c9209739dc2af7e50536221a8fcc407" translate="yes" xml:space="preserve">
          <source>Before submitting a pull request, please ensure you have added/updated
the appropriate tests (and that all existing tests still pass with your
changes), and that your coding style follows PEP 8 and doesn&amp;rsquo;t cause
pyflakes to complain.</source>
          <target state="translated">プルリクエストを送信する前に、適切なテストを追加/更新したこと（および、既存のすべてのテストが変更に合格していること）、およびコーディングスタイルがPEP 8に準拠しており、pyflakesが文句を言わないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="3348cc07058a464ebb973af5bfdb70ca7968c2db" translate="yes" xml:space="preserve">
          <source>CPython</source>
          <target state="translated">シーパイソン</target>
        </trans-unit>
        <trans-unit id="8c247b055f1e59fe3f6f0d430c6df285d1cef3aa" translate="yes" xml:space="preserve">
          <source>CPython 2.7, CPython 3.5+, PyPy2.7, and PyPy3.5 support</source>
          <target state="translated">CPython 2.7、CPython 3.5+、PyPy2.7、PyPy3.5をサポートします。</target>
        </trans-unit>
        <trans-unit id="198fc4e0b715dea305d8c73f215116b5ad3112ca" translate="yes" xml:space="preserve">
          <source>Comments follow &lt;a href=&quot;https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments&quot;&gt;Google&amp;rsquo;s style guide&lt;/a&gt;,
with the additional requirement of prefixing inline comments using your
GitHub nick and an appropriate prefix:</source>
          <target state="translated">コメントは&lt;a href=&quot;https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments&quot;&gt;Googleのスタイルガイドに&lt;/a&gt;従いますが、GitHubニックネームと適切なプレフィックスを使用してインラインコメントにプレフィックスを付けるという追加要件があります。</target>
        </trans-unit>
        <trans-unit id="26e3591fb254ea5f02e84a9f4b42fe69b726eb43" translate="yes" xml:space="preserve">
          <source>Commit messages should be formatted using &lt;a href=&quot;https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines&quot;&gt;AngularJS
conventions&lt;/a&gt;.</source>
          <target state="translated">コミットメッセージは、&lt;a href=&quot;https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines&quot;&gt;AngularJSの規則&lt;/a&gt;を使用してフォーマットする必要があります。</target>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">コミュニティ</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">貢献</target>
        </trans-unit>
        <trans-unit id="03d6abbbd5f0d35502a6680bc0b2b9f7da842571" translate="yes" xml:space="preserve">
          <source>Copyright 2013-2019 by Individual and corporate contributors as
noted in the individual source files.</source>
          <target state="translated">Copyright 2013-2019 by Individual and Corporate contributors as stated in individual source files.</target>
        </trans-unit>
        <trans-unit id="2173925ca03217e63463d2a77316cf649645885b" translate="yes" xml:space="preserve">
          <source>Cronitor</source>
          <target state="translated">クロニター</target>
        </trans-unit>
        <trans-unit id="d599667d492faa0d4dc25235bb3f1908820235e5" translate="yes" xml:space="preserve">
          <source>DRY request processing via middleware components and hooks</source>
          <target state="translated">ミドルウェアコンポーネントとフックによるDRYリクエスト処理</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">依存関係</target>
        </trans-unit>
        <trans-unit id="6156a516dbfc6ea31bca7b52f7d996c965a0b36f" translate="yes" xml:space="preserve">
          <source>EMC</source>
          <target state="translated">イーエムシー</target>
        </trans-unit>
        <trans-unit id="7a5cfd205582374128d08fa3eed383f40815420b" translate="yes" xml:space="preserve">
          <source>Easy access to headers and bodies through request and response
classes</source>
          <target state="translated">リクエストクラスとレスポンスクラスを介してヘッダとボディに簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="ff48f03e1496cdfcab9efde703a6ff29f4c06783" translate="yes" xml:space="preserve">
          <source>Falcon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;lives on GitHub&lt;/a&gt;, making the
code easy to browse, download, fork, etc. Pull requests are always welcome! Also,
please remember to star the project if it makes you happy. :)</source>
          <target state="translated">Falcon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;はGitHub上&lt;/a&gt;にあり、コードの閲覧、ダウンロード、フォークなどを簡単に行うことができます。プルリクエストはいつでも歓迎です！また、プロジェクトに満足できる場合は、スターを付けてください。:)</target>
        </trans-unit>
        <trans-unit id="2ff92c93236f195dd672d7d5152b84a0ce77a3ac" translate="yes" xml:space="preserve">
          <source>Falcon add-ons and complementary packages</source>
          <target state="translated">ファルコンのアドオンと補完パッケージ</target>
        </trans-unit>
        <trans-unit id="002b14694690e328be54f6c23431c08d2c5df58d" translate="yes" xml:space="preserve">
          <source>Falcon also fully supports
&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.7 and 3.5+.</source>
          <target state="translated">ファルコンは、完全にサポート &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;はCPython&lt;/a&gt; 2.7および3.5+。</target>
        </trans-unit>
        <trans-unit id="77812327df461b35042a24d25e99dababb29a1ca" translate="yes" xml:space="preserve">
          <source>Falcon apps work with any WSGI server, and run like a champ under
CPython 2.7, CPython 3.5+, PyPy2.7, and PyPy3.5.</source>
          <target state="translated">FalconのアプリはWSGIサーバで動作し、CPython 2.7、CPython 3.5+、PyPy2.7、PyPy3.5の下でチャンプのように動作します。</target>
        </trans-unit>
        <trans-unit id="bfa24d4ce865aa72cfef302695b40332439ab154" translate="yes" xml:space="preserve">
          <source>Falcon does not require the installation of any other packages, although if
Cython has been installed into the environment, it will be used to optimize
the framework when not using a manylinux wheel, as explained above.</source>
          <target state="translated">Falcon は他のパッケージのインストールを必要としませんが、もし Cython が環境にインストールされている場合は、上で説明したように manylinux ホイールを使用していないときにフレームワークを最適化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="15a321e1fd9a0e3086dac6f948202f8b6bbcc6a7" translate="yes" xml:space="preserve">
          <source>Falcon image courtesy of &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Brown-Falcon,-Vic,-3.1.2008.jpg&quot;&gt;John
O&amp;rsquo;Neill&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Brown-Falcon,-Vic,-3.1.2008.jpg&quot;&gt;ジョンオニールの&lt;/a&gt;好意によるハヤブサの画像。</target>
        </trans-unit>
        <trans-unit id="e693fff89fba4cc021a57b3ebb6d7f3af5f9c8c5" translate="yes" xml:space="preserve">
          <source>Falcon is used around the world by a growing number of organizations,
including:</source>
          <target state="translated">ファルコンは世界中で使用されており、以下のような組織が増えています。</target>
        </trans-unit>
        <trans-unit id="ec2cf57886dfd94a138ab528debe4d7f89ff1901" translate="yes" xml:space="preserve">
          <source>Falcon speaks WSGI, and so in order to serve a Falcon app, you will
need a WSGI server. Gunicorn and uWSGI are some of the more popular
ones out there, but anything that can load a WSGI app will do.</source>
          <target state="translated">FalconはWSGIを話すので、Falconアプリを提供するためにはWSGIサーバが必要になります。GunicornとuWSGIはそこにあるよりポピュラーなもののいくつかですが、WSGIアプリをロードできるものであれば何でもよいでしょう。</target>
        </trans-unit>
        <trans-unit id="00b805955b6ca46c1f5fe233004ea2255ebc74ef" translate="yes" xml:space="preserve">
          <source>Falcon talks, podcasts, and blog posts</source>
          <target state="translated">ファルコントーク、ポッドキャスト、ブログ記事</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">特徴</target>
        </trans-unit>
        <trans-unit id="76e7a3a3f9c225fe820ba7e9cff10ea2a73b79a1" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="translated">始めるには</target>
        </trans-unit>
        <trans-unit id="c4cad81e998cd6e254b92361c04556874d95a05e" translate="yes" xml:space="preserve">
          <source>Has Falcon helped you make an awesome app? Show your support today with a one-time donation or by becoming a patron. Supporters get cool gear, an opportunity to promote their brand to Python developers, and
prioritized support.</source>
          <target state="translated">ファルコンはあなたが素晴らしいアプリを作るのを助けてくれましたか?1回限りの寄付、またはパトロンになることで、今日中にあなたのサポートを表明してください。サポーターは、クールなギア、Python開発者にブランドを宣伝する機会、優先的なサポートを得ることができます。</target>
        </trans-unit>
        <trans-unit id="1cbc952e8c63914134e2eede89ef63a1c732924d" translate="yes" xml:space="preserve">
          <source>Here is a more involved example that demonstrates reading headers and
query parameters, handling errors, and working with request and response
bodies.</source>
          <target state="translated">ここでは、ヘッダやクエリパラメータの読み込み、エラーの処理、リクエストやレスポンスのボディの処理を実演する、より複雑な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="73d4ef1bd486057b10a87588b9e1345e026d2f84" translate="yes" xml:space="preserve">
          <source>Here is a simple, contrived example showing how to create a Falcon-based
API.</source>
          <target state="translated">ここでは、Falcon ベースの API をどのようにして作成するかを示す、シンプルで工夫された例を示しています。</target>
        </trans-unit>
        <trans-unit id="c764fba7f0ff6cdb79f8d9ac8fe3052d5b821e23" translate="yes" xml:space="preserve">
          <source>Highly-optimized, extensible code base</source>
          <target state="translated">高度に最適化された拡張可能なコードベース</target>
        </trans-unit>
        <trans-unit id="6b350e685accbcb696e9f21fed781eca73acb604" translate="yes" xml:space="preserve">
          <source>How is Falcon Different?</source>
          <target state="translated">ファルコンはどう違うの?</target>
        </trans-unit>
        <trans-unit id="843d7bd0a3c1afa93060c8650324bda7c63c03a6" translate="yes" xml:space="preserve">
          <source>Hurricane Electric</source>
          <target state="translated">ハリケーン電気</target>
        </trans-unit>
        <trans-unit id="8414b4fd22c852e869cd79ac92f078aafd072b6f" translate="yes" xml:space="preserve">
          <source>Idiomatic HTTP error responses</source>
          <target state="translated">イディオマティックな HTTP エラーレスポンス</target>
        </trans-unit>
        <trans-unit id="9df4e83e5b0f2301e105772694047456e209f5a1" translate="yes" xml:space="preserve">
          <source>If you are using the Falcon framework for a community or commercial
project, please consider adding your information to our wiki under
&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;Who&amp;rsquo;s Using Falcon?&lt;/a&gt;</source>
          <target state="translated">コミュニティまたは商用プロジェクトでFalconフレームワークを使用している場合は、&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;Whoを使用しているの&lt;/a&gt;下のWikiに情報を追加することを検討してください。</target>
        </trans-unit>
        <trans-unit id="aa396e2e252f871b7636db728e114d44d9a490c2" translate="yes" xml:space="preserve">
          <source>If you want to verify that Cython is being invoked, simply
pass</source>
          <target state="translated">Cythonが起動されているかどうかを確認したい場合は、単に</target>
        </trans-unit>
        <trans-unit id="8f92054db21d8198ff200efa373df38c77d4a3c6" translate="yes" xml:space="preserve">
          <source>If you would like to contribute but don&amp;rsquo;t already have something in mind,
we invite you to take a look at the issues listed under our
&lt;a href=&quot;https://github.com/falconry/falcon/milestones&quot;&gt;next milestone&lt;/a&gt;.
If you see one you&amp;rsquo;d like to work on, please leave a quick comment so that we don&amp;rsquo;t
end up with duplicated effort. Thanks in advance!</source>
          <target state="translated">貢献したいが、まだ何かを考えていない場合は、&lt;a href=&quot;https://github.com/falconry/falcon/milestones&quot;&gt;次のマイルストーンに&lt;/a&gt;リストされている問題を確認することをお勧めします 。作業したいものを見つけた場合は、重複した作業に終わらないように、簡単なコメントを残してください。前もって感謝します！</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="20c52e00f1813458387eeb6afc3de39bf772d139" translate="yes" xml:space="preserve">
          <source>Installing one of the pre-built Falcon wheels is a great way to get up and
running quickly. However, when deploying your application in production, you
may wish to compile Falcon via Cython yourself, using the target system&amp;rsquo;s
native toolchain.</source>
          <target state="translated">構築済みのファルコンホイールの1つを取り付けることは、すばやく立ち上げて実行するための優れた方法です。ただし、アプリケーションを本番環境にデプロイする場合は、ターゲットシステムのネイティブツールチェーンを使用して、Cython経由でFalconを自分でコンパイルすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d10567ff32e2cdcd410d4f313e69bc56c6cb04b6" translate="yes" xml:space="preserve">
          <source>Intuitive routing via URI templates and REST-inspired resource
classes</source>
          <target state="translated">URI テンプレートと REST にインスパイアされたリソースクラスによる直感的なルーティング</target>
        </trans-unit>
        <trans-unit id="0645c2efb43274d5ee05ebcaa28c7710a5611f1a" translate="yes" xml:space="preserve">
          <source>John Vrbanac (&lt;strong&gt;jmvrbanac&lt;/strong&gt; on GH and Gitter, and &lt;strong&gt;jvrbanac&lt;/strong&gt; on Twitter)</source>
          <target state="translated">ジョンVrbanac（&lt;strong&gt;jmvrbanac&lt;/strong&gt; GHとギッター上、および&lt;strong&gt;jvrbanac&lt;/strong&gt;ツイッター上）</target>
        </trans-unit>
        <trans-unit id="b7032fbdf250b19104a49e3eeed551cd92141e7b" translate="yes" xml:space="preserve">
          <source>Kurt Griffiths, Project Lead (&lt;strong&gt;kgriffs&lt;/strong&gt; on GH, Gitter, and Twitter)</source>
          <target state="translated">Kurt Griffiths、プロジェクトリーダー（GH、Gitter、Twitterの&lt;strong&gt;kgriffs&lt;/strong&gt;）</target>
        </trans-unit>
        <trans-unit id="30ee8e7c3e291db43f99c5ce645f3f9d498b40ca" translate="yes" xml:space="preserve">
          <source>Leadpages</source>
          <target state="translated">リードページ</target>
        </trans-unit>
        <trans-unit id="56fe269a49915241cd1dffdd3ebc1d8257dd4d77" translate="yes" xml:space="preserve">
          <source>Learn how to support Falcon development</source>
          <target state="translated">ファルコン開発をサポートする方法を学ぶ</target>
        </trans-unit>
        <trans-unit id="902c91d94e0fd512d0a7f41cf7f018ee6f01bf85" translate="yes" xml:space="preserve">
          <source>Legal</source>
          <target state="translated">リーガル</target>
        </trans-unit>
        <trans-unit id="53303f5c4015e5bf0c239033576655234d3a8b53" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;); you may
not use any portion of the Falcon framework except in compliance with
the License. Contributors agree to license their work under the same
License. You may obtain a copy of the License at
&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;</source>
          <target state="translated">Apacheライセンスバージョン2.0（「ライセンス」）に基づいてライセンス供与されます。ライセンスに準拠する場合を除き、Falconフレームワークのいかなる部分も使用することはできません。寄稿者は、同じライセンスの下で自分の作品のライセンスを取得することに同意します。ライセンスのコピーは&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;で 入手できます。</target>
        </trans-unit>
        <trans-unit id="0b0afb702cf776869dbe10b48edbb7ac514b462f" translate="yes" xml:space="preserve">
          <source>NOTE(riker): Well, that&amp;rsquo;s certainly good to know.</source>
          <target state="translated">注（ライカー）：まあ、それは確かに知っておくと良いことです。</target>
        </trans-unit>
        <trans-unit id="1214f3732c4253ef4383d07893f77051d67bd11b" translate="yes" xml:space="preserve">
          <source>Nick Zaccardi (&lt;strong&gt;nZac&lt;/strong&gt; on GH and Gitter)</source>
          <target state="translated">Nick Zaccardi（GHおよびGitterの&lt;strong&gt;nZac&lt;/strong&gt;）</target>
        </trans-unit>
        <trans-unit id="c9fc352cefc141d44ae45888de551723388e2571" translate="yes" xml:space="preserve">
          <source>Once the docs have been built, you can view them by opening the following
index page in your browser. On OS X it&amp;rsquo;s as simple as:</source>
          <target state="translated">ドキュメントが作成されたら、ブラウザで次のインデックスページを開いてドキュメントを表示できます。OS Xでは、次のように簡単です。</target>
        </trans-unit>
        <trans-unit id="9c6f9bc1cfe0a36fa875aa95eae59b41d61bd809" translate="yes" xml:space="preserve">
          <source>Once you have cloned the repo or downloaded a tarball from GitHub, you
can install Falcon like this:</source>
          <target state="translated">レポをクローンするか、GitHubからtarballをダウンロードしたら、このようにFalconをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="619dcf8e8b26d26cbbf2f58aff969858596e90a6" translate="yes" xml:space="preserve">
          <source>Online docs are available at: &lt;a href=&quot;https://falcon.readthedocs.io&quot;&gt;https://falcon.readthedocs.io&lt;/a&gt;</source>
          <target state="translated">オンラインドキュメントは、&lt;a href=&quot;https://falcon.readthedocs.io&quot;&gt;https&lt;/a&gt;：//falcon.readthedocs.ioで入手できます。</target>
        </trans-unit>
        <trans-unit id="3d8bd6f9a145c81ba3f59062586c5cf6108400d0" translate="yes" xml:space="preserve">
          <source>OpenStack</source>
          <target state="translated">オープンスタック</target>
        </trans-unit>
        <trans-unit id="ec88fcb6d25d5b1be71e82bce96f86acb7be89b1" translate="yes" xml:space="preserve">
          <source>Opera Software</source>
          <target state="translated">オペラソフトウェア</target>
        </trans-unit>
        <trans-unit id="ed83cc1138b01c27b6845a510ae0c03e6fb942b4" translate="yes" xml:space="preserve">
          <source>Or on Linux:</source>
          <target state="translated">またはLinuxで。</target>
        </trans-unit>
        <trans-unit id="25f4768f2d0bf2d9493d3f638e85e7c78f3db953" translate="yes" xml:space="preserve">
          <source>Or, if you want to edit the code, first fork the main repo, clone the fork
to your desktop, and then run the following to install it using symbolic
linking, so that when you change your code, the changes will be automagically
available to your app without having to reinstall the package:</source>
          <target state="translated">または、コードを編集したい場合は、まずメインのレポをフォークし、そのフォークをデスクトップにクローンし、以下を実行してシンボリックリンクを使用してインストールすることで、コードを変更したときに、パッケージを再インストールすることなく、変更が自動的にアプリで利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="c5b258f43418d6aa5bca2b2f7856e2cbaa25764b" translate="yes" xml:space="preserve">
          <source>Or, to install the latest beta or release candidate, if any:</source>
          <target state="translated">または、最新のベータ版やリリース候補があれば、それをインストールします。</target>
        </trans-unit>
        <trans-unit id="fb9e852068a0bd991030aaafb5a1ac94af3ec5cf" translate="yes" xml:space="preserve">
          <source>Or, to run the default set of tests:</source>
          <target state="translated">または、デフォルトのテストセットを実行します。</target>
        </trans-unit>
        <trans-unit id="3b58ec54d5832dabf6e505062e5305085b435a4b" translate="yes" xml:space="preserve">
          <source>PERF(riker): Travel time to the nearest starbase?</source>
          <target state="translated">PERF(ライカー)。最寄りの星基地までの移動時間は?</target>
        </trans-unit>
        <trans-unit id="db29affa7d0b37eec3a63ced5e9423cd3f52ef05" translate="yes" xml:space="preserve">
          <source>Per our
&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;,
we expect everyone who participates in community discussions to act
professionally, and lead by example in encouraging constructive
discussions. Each individual in the community is responsible for
creating a positive, constructive, and productive culture.</source>
          <target state="translated">私たち&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;の行動規範に&lt;/a&gt;よれば 、コミュニティの議論に参加するすべての人が専門的に行動し、建設的な議論を奨励するために模範を示すことを期待しています。コミュニティの各個人は、前向きで建設的で生産的な文化を創造する責任があります。</target>
        </trans-unit>
        <trans-unit id="89285d2a833db68bbdb2e0703c2fb6bfb0962ec3" translate="yes" xml:space="preserve">
          <source>Perfection is finally attained not when there is no longer anything
to add, but when there is no longer anything to take away.</source>
          <target state="translated">完璧とは、もはや加えるものがないときではなく、もはや奪うものがないときに、最終的に達成されます。</target>
        </trans-unit>
        <trans-unit id="ca4f2f41584370112a98a174a02c38c8abf411a5" translate="yes" xml:space="preserve">
          <source>Please don&amp;rsquo;t hesitate to reach out if you have any questions, or just need a
little help getting started. You can find us in
&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry/dev&lt;/a&gt; on Gitter.</source>
          <target state="translated">ご不明な点がある場合や、ご利用を開始する際に少しサポートが必要な場合は、遠慮なくご連絡ください。Gitterの&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry / dev&lt;/a&gt;で私たちを見つけることができます 。</target>
        </trans-unit>
        <trans-unit id="192e200e349afc7e9747d57b0f4ad2e3068c9ba4" translate="yes" xml:space="preserve">
          <source>Please note that all contributors and maintainers of this project are subject to our &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.</source>
          <target state="translated">このプロジェクトのすべての貢献者と維持者は、私たち&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CODEOFCONDUCT.md&quot;&gt;の行動規範の&lt;/a&gt;対象となることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="translated">パイパイ</target>
        </trans-unit>
        <trans-unit id="917bcf00a5f43df11b199071267499daef7275d9" translate="yes" xml:space="preserve">
          <source>Quick Links</source>
          <target state="translated">クイックリンク</target>
        </trans-unit>
        <trans-unit id="2637a04add25ca378ec74004768868e8b4d48576" translate="yes" xml:space="preserve">
          <source>Rackspace</source>
          <target state="translated">ラックスペース</target>
        </trans-unit>
        <trans-unit id="d4a74b503a1543250fe9facd1ec8c2b031a7e575" translate="yes" xml:space="preserve">
          <source>Read the docs</source>
          <target state="translated">ドキュメントを読む</target>
        </trans-unit>
        <trans-unit id="cd5024cdd958df478f96e23b02b7cde852f39f71" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/tox.ini&quot;&gt;tox.ini&lt;/a&gt;
file for a full list of available environments.</source>
          <target state="translated">使用可能な環境の完全なリストについては、&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/tox.ini&quot;&gt;tox.ini&lt;/a&gt;ファイルも参照してください。</target>
        </trans-unit>
        <trans-unit id="074adae60995c34ba8079e85fd4c661bf13e4f85" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;</source>
          <target state="translated">参照：&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b98c2c148cc55f43358c84052c0a677a5b68fef" translate="yes" xml:space="preserve">
          <source>Shiftgig</source>
          <target state="translated">シフトギグ</target>
        </trans-unit>
        <trans-unit id="4a540a31340238b7255a499672950eb2f1bd6896" translate="yes" xml:space="preserve">
          <source>Snappy unit testing through WSGI helpers and mocks</source>
          <target state="translated">WSGIヘルパーとモックを使った迅速なユニットテスト</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">ソースコード</target>
        </trans-unit>
        <trans-unit id="b5ae3ef33e83e257a6d9f01f8f5e3b2c8b064a1d" translate="yes" xml:space="preserve">
          <source>Straightforward exception handling</source>
          <target state="translated">簡単な例外処理</target>
        </trans-unit>
        <trans-unit id="f5a4773e69c7f71a18e6e9baecc0757901feca3b" translate="yes" xml:space="preserve">
          <source>Support Falcon Development</source>
          <target state="translated">ファルコン開発をサポート</target>
        </trans-unit>
        <trans-unit id="7c7eec7867809f5c836c829912a023cf4977d510" translate="yes" xml:space="preserve">
          <source>TODO(riker): Damage report!</source>
          <target state="translated">TODO(ライカー)。被害報告!</target>
        </trans-unit>
        <trans-unit id="ecfda3a905e095bc4d5530c609cff5072e12fcab" translate="yes" xml:space="preserve">
          <source>Thanks for your interest in the project! We welcome pull requests from
developers of all skill levels. To get started, simply fork the master branch
on GitHub to your personal account and then clone the fork into your
development environment.</source>
          <target state="translated">プロジェクトに興味を持っていただきありがとうございます あらゆるスキルレベルの開発者からのプルリクエストを歓迎します。始めるには、GitHub の master ブランチを自分のアカウントにフォークして、そのフォークを自分の開発環境にクローンするだけです。</target>
        </trans-unit>
        <trans-unit id="1da20795f84bb9c5e16697aea34f14720e38fc37" translate="yes" xml:space="preserve">
          <source>Thanks!</source>
          <target state="translated">ありがとうございます!</target>
        </trans-unit>
        <trans-unit id="e21d7c49012994e774a11f0973067fce75e4bcd3" translate="yes" xml:space="preserve">
          <source>The Clang compiler treats unrecognized command-line options as
errors, for example:</source>
          <target state="translated">Clangコンパイラは認識されていないコマンドラインオプションをエラーとして扱います。</target>
        </trans-unit>
        <trans-unit id="d9ddac2b2a870aaf2a0e0d40984dc0e7f390490e" translate="yes" xml:space="preserve">
          <source>The Falcon Web Framework</source>
          <target state="translated">ファルコンウェブフレームワーク</target>
        </trans-unit>
        <trans-unit id="c03671cd560e5b6adbfb6500836db13ed6c21d36" translate="yes" xml:space="preserve">
          <source>The Falconry community on Gitter is a great place to ask questions and
share your ideas. You can find us in &lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;falconry/user&lt;/a&gt;. We also have a
&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;falconry/dev&lt;/a&gt; room for discussing
the design and development of the framework itself.</source>
          <target state="translated">GitterのFalconryコミュニティは、質問をしたり、アイデアを共有したりするのに最適な場所です。あなたは&lt;a href=&quot;https://gitter.im/falconry/user&quot;&gt;鷹狩り/ユーザーで&lt;/a&gt;私たちを見つけることができます。また、フレームワーク自体の設計と開発について話し合うための&lt;a href=&quot;https://gitter.im/falconry/dev&quot;&gt;鷹狩り/&lt;/a&gt;開発室もあり ます。</target>
        </trans-unit>
        <trans-unit id="6fc072218026286a7c3f845d921ece3899f7075f" translate="yes" xml:space="preserve">
          <source>The core Falcon project maintainers are:</source>
          <target state="translated">Falcon プロジェクトの中心的なメンテナは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8ffffae6301364db865374e600a6f6857d22f85f" translate="yes" xml:space="preserve">
          <source>The docstrings in the Falcon code base are quite extensive, and we
recommend keeping a REPL running while learning the framework so that
you can query the various modules and classes as you have questions.</source>
          <target state="translated">Falconのコードベースのdocstringsは非常に広範囲にわたっており、私たちはフレームワークを学習しながら REPLを実行しておくことを推奨します。</target>
        </trans-unit>
        <trans-unit id="c433ce15540cbc15721c82777f9a59a106fdf8f5" translate="yes" xml:space="preserve">
          <source>The following commands tell pip to install Cython, and then to invoke
Falcon&amp;rsquo;s</source>
          <target state="translated">次のコマンドは、pipにCythonをインストールしてから、Falconを呼び出すように指示します。</target>
        </trans-unit>
        <trans-unit id="058ff83bf433fdce34d17ad46cb30fd2b9c0f837" translate="yes" xml:space="preserve">
          <source>Then, in another terminal:</source>
          <target state="translated">そして、別の端末で。</target>
        </trans-unit>
        <trans-unit id="0aa6825aba3252c5cebbc0305750407b383e14f4" translate="yes" xml:space="preserve">
          <source>Universal and manylinux wheels are available on PyPI for the Falcon
framework. Installation is as simple as:</source>
          <target state="translated">Universal と manylinux のホイールは PyPI で Falcon フレームワーク用に用意されています。インストールは簡単です。</target>
        </trans-unit>
        <trans-unit id="bf36c74e851db7c2ce95b5900cf8acc21ac10271" translate="yes" xml:space="preserve">
          <source>Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.</source>
          <target state="translated">適用される法律で要求されない限り、または書面で同意されない限り、ライセンスに基づいて配布されるソフトウェアは、明示または黙示を問わず、いかなる種類の保証または条件もなく、「現状のまま」で配布されます。ライセンスに基づく許可と制限を規定する特定の言語については、ライセンスを参照してください。</target>
        </trans-unit>
        <trans-unit id="75f1a9bb07b099caf683e0ef3f59fe6444658eed" translate="yes" xml:space="preserve">
          <source>Vytautas Liuolia (&lt;strong&gt;vytas7&lt;/strong&gt; on GH and Gitter)</source>
          <target state="translated">Vytautas Liuolia（GHとGitterの&lt;strong&gt;vytas7&lt;/strong&gt;）</target>
        </trans-unit>
        <trans-unit id="2c7fda5d092b0a9b1af3f0f496ee105b32f8db7e" translate="yes" xml:space="preserve">
          <source>WSGI Server</source>
          <target state="translated">WSGIサーバー</target>
        </trans-unit>
        <trans-unit id="11c1278fd3553d645ff750d02cd067ccb361bc86" translate="yes" xml:space="preserve">
          <source>We designed Falcon to support the demanding needs of large-scale
microservices and responsive app backends. Falcon complements more
general Python web frameworks by providing bare-metal performance,
reliability, and flexibility wherever you need it.</source>
          <target state="translated">私たちは、大規模なマイクロサービスやレスポンシブアプリのバックエンドの厳しいニーズをサポートするためにFalconを設計しました。Falconは、必要な場所であればどこでもベアメタルなパフォーマンス、信頼性、柔軟性を提供することで、より一般的なPythonのウェブフレームワークを補完します。</target>
        </trans-unit>
        <trans-unit id="1dc23e9126d4d3ffedcd374faff18887fd6788e1" translate="yes" xml:space="preserve">
          <source>What People are Saying</source>
          <target state="translated">人々が言っていること</target>
        </trans-unit>
        <trans-unit id="a1cb97c392a99daad01e60de73a0ba6de2e7eea7" translate="yes" xml:space="preserve">
          <source>Who&amp;rsquo;s Using Falcon?</source>
          <target state="translated">誰がファルコンを使用していますか？</target>
        </trans-unit>
        <trans-unit id="63dbb48f79311b945d143d6838d8a92702053301" translate="yes" xml:space="preserve">
          <source>Xcode Command Line Tools are required to compile Cython. Install them
with this command:</source>
          <target state="translated">CythonをコンパイルするにはXcodeコマンドラインツールが必要です。このコマンドでインストールします。</target>
        </trans-unit>
        <trans-unit id="69241970aa05f43202cdbee663577d138feb8e4c" translate="yes" xml:space="preserve">
          <source>You can build the same docs locally as follows:</source>
          <target state="translated">以下のようにローカルに同じドキュメントを構築することができます。</target>
        </trans-unit>
        <trans-unit id="536278b7175149e76eeaaf6ea6df40dd2dce2ae6" translate="yes" xml:space="preserve">
          <source>You can manually test changes to the Falcon framework by switching to the
directory of the cloned repo and then running pytest:</source>
          <target state="translated">クローン化されたレポのディレクトリに切り替えて pytest を実行することで、Falcon フレームワークへの変更を手動でテストすることができます。</target>
        </trans-unit>
        <trans-unit id="8213796246cc13c7a664c2b4cff5b6ee3472e803" translate="yes" xml:space="preserve">
          <source>You can run the above example using any WSGI server, such as uWSGI or
Gunicorn. For example:</source>
          <target state="translated">上記の例は、uWSGIやGunicornなどの任意のWSGIサーバーを使って実行することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="68093482c3d1393ed1022814b68c7d5988e22976" translate="yes" xml:space="preserve">
          <source>You might also see warnings about unused functions. You can work around
these issues by setting additional Clang C compiler flags as follows:</source>
          <target state="translated">また、使用されていない関数についての警告が表示されるかもしれません。これらの問題は、以下のように追加の Clang C コンパイラフラグを設定することで回避することができます。</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">セットアップパイ</target>
        </trans-unit>
        <trans-unit id="91a58bbf6422870801d8bf676712611df0dc19ca" translate="yes" xml:space="preserve">
          <source>tempfil.es</source>
          <target state="translated">テンプフィル</target>
        </trans-unit>
        <trans-unit id="393b2d63c932471ac3d8d61c1a9b61c8515ea1a0" translate="yes" xml:space="preserve">
          <source>to pip in order to echo the compilation commands:</source>
          <target state="translated">を使って、コンパイルコマンドをエコーするために pip に追加しました。</target>
        </trans-unit>
        <trans-unit id="70cc91e5ef505e485c1f0e4bffac914c20c63cec" translate="yes" xml:space="preserve">
          <source>~20% speed boost under CPython when Cython is available</source>
          <target state="translated">Cythonが利用可能な場合、CPythonで最大20％の速度向上</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
