<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/ak-gchartwrapper/">
    <body>
      <group id="ak-gchartwrapper">
        <trans-unit id="e424f866e4010cddd34312998b30a98fd8b54015" translate="yes" xml:space="preserve">
          <source>&quot;&quot;&quot;Main chart class</source>
          <target state="translated">「」メインチャートクラス</target>
        </trans-unit>
        <trans-unit id="0ff9f863db6491b3e222bb9792a7b5ba5af2beb4" translate="yes" xml:space="preserve">
          <source>#  Copyright (C) 2009  Justin Quick &amp;lt;justquick@gmail.com&amp;gt;</source>
          <target state="translated">＃Copyright（C）2009 Justin Quick &amp;lt;justquick@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e9981bc2bc4f3f91cab56bd0a30a7616e6f5f95c" translate="yes" xml:space="preserve">
          <source>#  GChartWrapper - v0.9</source>
          <target state="translated">＃GChartWrapper-v0.9</target>
        </trans-unit>
        <trans-unit id="af7ef7e6b3f51f2e32994b689129685ccde40825" translate="yes" xml:space="preserve">
          <source>#  This program is free software. See attached LICENSE.txt for more info</source>
          <target state="translated">＃このプログラムはフリーソフトウェアです。詳細については、添付のLICENSE.txtを参照してください</target>
        </trans-unit>
        <trans-unit id="36702ea62e8e70a53a81dfc4d049b7303d592d2b" translate="yes" xml:space="preserve">
          <source># 3D Piechart</source>
          <target state="translated">＃3D円グラフ</target>
        </trans-unit>
        <trans-unit id="90c55b0bcc5ea58ddd3c86b6c32b4c7af50d0f51" translate="yes" xml:space="preserve">
          <source># Also 2 dimensional</source>
          <target state="translated">＃また、2次元</target>
        </trans-unit>
        <trans-unit id="cbcf799f4751e01e82f0f6b1a8673240c099fa48" translate="yes" xml:space="preserve">
          <source># As an HTML &amp;lt;img&amp;gt; tag, kw arguments can be valid tag attributes</source>
          <target state="translated">＃HTML &amp;lt;img&amp;gt;タグとして、kw引数は有効なタグ属性にすることができます</target>
        </trans-unit>
        <trans-unit id="da2ca1a9995e092cbabb7ae4514301cf6d274f50" translate="yes" xml:space="preserve">
          <source># As the chart URL itself using __str__</source>
          <target state="translated">＃__str__を使用してグラフのURL自体として</target>
        </trans-unit>
        <trans-unit id="aed2eea4fa8e93470e91a13538ef3d2e883aebf9" translate="yes" xml:space="preserve">
          <source># Datasets</source>
          <target state="translated">＃データセット</target>
        </trans-unit>
        <trans-unit id="6b15d33a2b5d51ed5da67c907250e5b8a71ccfa9" translate="yes" xml:space="preserve">
          <source># Encoding (simple/text/extended)</source>
          <target state="translated">＃エンコード（シンプル/テキスト/拡張）</target>
        </trans-unit>
        <trans-unit id="55517ed549e79b4f7bf9afab86e3983e44fc2240" translate="yes" xml:space="preserve">
          <source># Now fetch the PngImageFile using the PIL module for manipulation</source>
          <target state="translated">＃PILモジュールを使用してPngImageFileをフェッチし、操作します</target>
        </trans-unit>
        <trans-unit id="01727d4bd5ee6bf8ed605b7d7153c3151d44024a" translate="yes" xml:space="preserve">
          <source># Now that you have the image instance, the world is your oyster</source>
          <target state="translated">＃これでイメージインスタンスが作成されたので、世界はカキです</target>
        </trans-unit>
        <trans-unit id="e3bf65e4a7b3f7b341aeb9ed188354c4d728e1f9" translate="yes" xml:space="preserve">
          <source># OR directly pass in API parameters</source>
          <target state="translated">＃またはAPIパラメータを直接渡す</target>
        </trans-unit>
        <trans-unit id="7ab0e7ff8f8d23a0ad1e61bfb0dea1a3cc9592df" translate="yes" xml:space="preserve">
          <source># Save chart to a file as PNG image, returns filename</source>
          <target state="translated">＃グラフをPNG画像としてファイルに保存し、ファイル名を返します</target>
        </trans-unit>
        <trans-unit id="262ed9813c00a8837f26da40c9ff13d71ec49722" translate="yes" xml:space="preserve">
          <source># Show URL directly in default web browser</source>
          <target state="translated">＃デフォルトのWebブラウザにURLを直接表示</target>
        </trans-unit>
        <trans-unit id="b32da7c7af6254b785f017a06d7f47f74641cb22" translate="yes" xml:space="preserve">
          <source># Size</source>
          <target state="translated">＃サイズ</target>
        </trans-unit>
        <trans-unit id="d560b1183d857deb75500ca0587bed649b035b95" translate="yes" xml:space="preserve">
          <source># Try saving image as JPEG,GIF,etc.</source>
          <target state="translated">＃画像をJPEG、GIFなどとして保存してみます。</target>
        </trans-unit>
        <trans-unit id="4c1c4e4db9eac536fb012c3d84894ef8b5896082" translate="yes" xml:space="preserve">
          <source># View code</source>
          <target state="translated">＃コードを表示</target>
        </trans-unit>
        <trans-unit id="ec1f1243f1b1e9aef955fee9b6a2170bf080a226" translate="yes" xml:space="preserve">
          <source># example.html template code</source>
          <target state="translated">＃example.htmlテンプレートコード</target>
        </trans-unit>
        <trans-unit id="2d05238a0d24fbdf89effb10280765de3cc9c2a1" translate="yes" xml:space="preserve">
          <source># maxValue (for encoding values)</source>
          <target state="translated">＃maxValue（値のエンコード用）</target>
        </trans-unit>
        <trans-unit id="b808c4add699cdd0e9f02dd1adee9646c76dc71e" translate="yes" xml:space="preserve">
          <source>$ python tests.py [&amp;lt;mode&amp;gt;]</source>
          <target state="translated">$ python tests.py [&amp;lt;モード&amp;gt;]</target>
        </trans-unit>
        <trans-unit id="cc61fa0cec3f5a4eb39916a201b0c6962f79a4c3" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G = GChart('p3', dataset, chtt='My Cool Chart', chl='A|B|C')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G = GChart（ 'p3'、dataset、chtt = 'My Cool Chart'、chl = 'A | B | C'）</target>
        </trans-unit>
        <trans-unit id="a6d8b3d421062f77d0eaa728c095354fbed11a54" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G = GChart('p3', dataset, encoding='text')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G = GChart（ 'p3'、dataset、encoding = 'text'）</target>
        </trans-unit>
        <trans-unit id="f2c1bc9f90b42a083ebbbdb61242e73084ea5df8" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G = GChart('p3', dataset, maxValue=100)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G = GChart（ 'p3'、データセット、maxValue = 100）</target>
        </trans-unit>
        <trans-unit id="a5a00771bbcca5b2cd13bf6c099a7c8a9ff292fe" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G = GChart('p3', dataset, size=(300,150))</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G = GChart（ 'p3'、dataset、size =（300,150））</target>
        </trans-unit>
        <trans-unit id="ca0bd6b94c0e1b994e94d0b53058318d7142f9a2" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G = GChart.fromurl('http://chart.apis.google.com/chart?ch...')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G = GChart.fromurl（ 'http：//chart.apis.google.com/chart？ch ...'）</target>
        </trans-unit>
        <trans-unit id="2d9b382aa14a0d9d5f3f7c8a8cae52a78973367e" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G = Pie3D(range(1,5))</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G = Pie3D（範囲（1,5））</target>
        </trans-unit>
        <trans-unit id="a2310ed1c183f9e3d671654c93c927dbb6f207b9" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.color('00dd00')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.color（ '00dd00'）</target>
        </trans-unit>
        <trans-unit id="81c0a119801bc6c082ab494bc08a1b87ef1e2f0e" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.color('green')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.color（ '緑'）</target>
        </trans-unit>
        <trans-unit id="319755fb9ccec416e1904acddb7161ca6a8c8a00" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.image()</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.image（）</target>
        </trans-unit>
        <trans-unit id="a44266e9c6c6749f717108363a4b857fc870ffc1" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.image().save('my-cool-chart.jpg','JPEG')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.image（）。save（ 'my-cool-chart.jpg'、 'JPEG'）</target>
        </trans-unit>
        <trans-unit id="5ada32ba4c64547bc1816ff1d27482de28e88d6b" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.img(height=500,id=&quot;chart&quot;)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.img（height = 500、id = &quot;chart&quot;）</target>
        </trans-unit>
        <trans-unit id="c0947ddf0f5d3fcdf2db9fb4b227de2ee5c8bbf6" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.label('A','B','C','D')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.label（ 'A'、 'B'、 'C​​'、 'D'）</target>
        </trans-unit>
        <trans-unit id="e4433ba419065e2f285f0756d12f5144fc8d6b78" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.save('my-cool-chart')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.save（ 'my-cool-chart'）</target>
        </trans-unit>
        <trans-unit id="d11fdc8995332155a2366ba34c53c58c7b4c0011" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; G.show()</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; G.show（）</target>
        </trans-unit>
        <trans-unit id="18c4254027cdbbb3e90d24cc579aef63007b80f5" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; GChart('p3', dataset)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; GChart（ 'p3'、データセット）</target>
        </trans-unit>
        <trans-unit id="e00e7a5464cc39c8ed5a452c54b9816885dcc9d5" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; dataset = (1, 2, 3)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;データセット=（1、2、3）</target>
        </trans-unit>
        <trans-unit id="e3c80772aaf90e79cb4596019c3855fa842cd51b" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; dataset = [[3,4], [5,6], [7,8]]</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;データセット= [[3,4]、[5,6]、[7,8]]</target>
        </trans-unit>
        <trans-unit id="42628c9709aaf8547d9007c2a152c2dc452ba648" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; print G</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt;プリントG</target>
        </trans-unit>
        <trans-unit id="c73cce8f45d023a966bd2f5d14a41498275f3926" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; print Pie3D(range(1,5)).label('A','B','C','D').color('00dd00')</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; print Pie3D（range（1,5））。label（ 'A'、 'B'、 'C​​'、 'D'）。color（ '00dd00'）</target>
        </trans-unit>
        <trans-unit id="935c4e60657446f77707ae28b3920ee0b25a3b2a" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt;&amp;gt; str(G)</source>
          <target state="translated">&amp;gt;&amp;gt;&amp;gt; str（G）</target>
        </trans-unit>
        <trans-unit id="5b1ee8404416b0c72f03ba796c65608df59f06df" translate="yes" xml:space="preserve">
          <source>&amp;lt;GChart  p3 (1, 2, 3)&amp;gt;</source>
          <target state="translated">&amp;lt;GChart p3（1、2、3）&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f3d97db1355b1302075c416ef6e029dc811b5a74" translate="yes" xml:space="preserve">
          <source>&amp;lt;GChartWrapper.GChart instance at...&amp;gt;</source>
          <target state="translated">&amp;lt;GChartWrapper.GChartインスタンスat ...&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e812df55fd97ee7cdf6c1e237c07aedb5fef8ca" translate="yes" xml:space="preserve">
          <source>&amp;lt;PngImagePlugin.PngImageFile instance at 0xb795ee4c&amp;gt;</source>
          <target state="translated">&amp;lt;0xb795ee4cのPngImagePlugin.PngImageFileインスタンス&amp;gt;</target>
        </trans-unit>
        <trans-unit id="84ddc74cb0130c1493a5b4426f81805a55a7a5cb" translate="yes" xml:space="preserve">
          <source>'&amp;lt;img alt=&quot;&quot; title=&quot;&quot; src=&quot;http://chart.apis.google.com/chart?...&quot; id=&quot;chart&quot; height=&quot;500&quot; &amp;gt;'</source>
          <target state="translated">'&amp;lt;img alt = &quot;&quot; title = &quot;&quot; src = &quot;http：//chart.apis.google.com/chart？...&quot; id = &quot;chart&quot; height = &quot;500&quot;&amp;gt;'</target>
        </trans-unit>
        <trans-unit id="49d7721073579c4e21a5542b3e42edbc59a632f7" translate="yes" xml:space="preserve">
          <source>'http://chart.apis.google.com/chart?...'</source>
          <target state="translated">「http：//chart.apis.google.com/chart？...」</target>
        </trans-unit>
        <trans-unit id="d7655ab36cf63e4c8ceeab1cb626e45503410e5e" translate="yes" xml:space="preserve">
          <source>'my-cool-chart.png'</source>
          <target state="translated">「my-cool-chart.png」</target>
        </trans-unit>
        <trans-unit id="3d5ab94ecec45df4445dee0b88d4d22287bf17f3" translate="yes" xml:space="preserve">
          <source>-- 0.6 --</source>
          <target state="translated">-0.6-</target>
        </trans-unit>
        <trans-unit id="14d5db85d0b2de77da83a9dd5c6c784146eba1d6" translate="yes" xml:space="preserve">
          <source>-- 0.7 --</source>
          <target state="translated">-0.7-</target>
        </trans-unit>
        <trans-unit id="df342518a34bcf6b950372656a7d055a22b2aa13" translate="yes" xml:space="preserve">
          <source>-- 0.8 --</source>
          <target state="translated">-0.8-</target>
        </trans-unit>
        <trans-unit id="2d2c02518846812499cce379ed8365b3bf3ab0aa" translate="yes" xml:space="preserve">
          <source>-- 0.9 --</source>
          <target state="translated">-0.9-</target>
        </trans-unit>
        <trans-unit id="c001cbca54cb5f6a6ed830cbc45b48c8a188e976" translate="yes" xml:space="preserve">
          <source>1.1 General</source>
          <target state="translated">1.1 一般</target>
        </trans-unit>
        <trans-unit id="0387b889a5c40c1dd316e81a14ae9b908a788182" translate="yes" xml:space="preserve">
          <source>1.2 Constructing</source>
          <target state="translated">1.2 構成</target>
        </trans-unit>
        <trans-unit id="aadd26dfccb4e2b682d1023f7076ca714f0460d2" translate="yes" xml:space="preserve">
          <source>1.3 Rendering and Viewing</source>
          <target state="translated">1.3 レンダリングと表示</target>
        </trans-unit>
        <trans-unit id="9584bd5522820ba4f8aa696393a5322d72d3411d" translate="yes" xml:space="preserve">
          <source>2.1 Django Extension</source>
          <target state="translated">2.1 Django 拡張機能</target>
        </trans-unit>
        <trans-unit id="e8e66f1115e14cf83edfd8a19d76de1dc3021a38" translate="yes" xml:space="preserve">
          <source>2.1 Django extension</source>
          <target state="translated">2.1 Django 拡張機能</target>
        </trans-unit>
        <trans-unit id="dd152868bf69659cea4757f5b2b54a2f66d4b5b9" translate="yes" xml:space="preserve">
          <source>2.2 Static data</source>
          <target state="translated">2.2 静的データ</target>
        </trans-unit>
        <trans-unit id="d9393a3a5e74782bc516671f724e0b21893cb0b4" translate="yes" xml:space="preserve">
          <source>2.3 Dynamic data</source>
          <target state="translated">2.3 動的データ</target>
        </trans-unit>
        <trans-unit id="363c6719295aa24b42eab1a9a4468deab54013b4" translate="yes" xml:space="preserve">
          <source>3.1 Other Templating Langs</source>
          <target state="translated">3.1 その他のテンプレング</target>
        </trans-unit>
        <trans-unit id="cf5a4cad0752c3331b9e0b64e804be63556608d8" translate="yes" xml:space="preserve">
          <source>3.1 Other Templating Languages</source>
          <target state="translated">3.1 その他のテンプテーション言語</target>
        </trans-unit>
        <trans-unit id="e24c82800518df3d7ac2e1d9a1a86fea44b88c15" translate="yes" xml:space="preserve">
          <source>4.1 Test framework</source>
          <target state="translated">4.1 テストフレームワーク</target>
        </trans-unit>
        <trans-unit id="c019c8935063d977975de3fae2fbe0dec5237ce9" translate="yes" xml:space="preserve">
          <source>5.1 API Documentation</source>
          <target state="translated">5.1 API ドキュメント</target>
        </trans-unit>
        <trans-unit id="aed7de620aad2b5db1a931a92e4cd3275ee7a608" translate="yes" xml:space="preserve">
          <source>5.1 API documentation</source>
          <target state="translated">5.1 API ドキュメント</target>
        </trans-unit>
        <trans-unit id="7fccc87f96ad318892be573076ee236f9b2fce83" translate="yes" xml:space="preserve">
          <source>Added some more templating examples</source>
          <target state="translated">テンプレート化の例をいくつか追加しました。</target>
        </trans-unit>
        <trans-unit id="5e5a1827115c6240dfdce81fcc62d48d5742ae1d" translate="yes" xml:space="preserve">
          <source>Airspeed?</source>
          <target state="translated">対気速度は?</target>
        </trans-unit>
        <trans-unit id="e876e2a30aa9e05b09aeb8d07d945081ff46018e" translate="yes" xml:space="preserve">
          <source>Centralized and added unittests</source>
          <target state="translated">ユニテストの集中化と追加</target>
        </trans-unit>
        <trans-unit id="a05945eff06c378afea6cb4cd363e2f346bfdb97" translate="yes" xml:space="preserve">
          <source>Chaining fixes</source>
          <target state="translated">チェーンの修正</target>
        </trans-unit>
        <trans-unit id="db6c160e4de98e8b38e037c721a9bc5a524ad43d" translate="yes" xml:space="preserve">
          <source>Changelog:</source>
          <target state="translated">変更履歴。</target>
        </trans-unit>
        <trans-unit id="128823f1e8761408129b33466e7ae2bfe0cbb098" translate="yes" xml:space="preserve">
          <source>Chart type must be valid for cht parameter</source>
          <target state="translated">チャートタイプは cht パラメータで有効でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3e6f8f4e706d1d0c1eb1709ac8ac8916c66b4cca" translate="yes" xml:space="preserve">
          <source>Cheetah - done</source>
          <target state="translated">チーター-終わった</target>
        </trans-unit>
        <trans-unit id="0e54be72c44932d25e06f32acbbd5c9bdcb5fe8f" translate="yes" xml:space="preserve">
          <source>Color name lookup from the css names: http://www.w3schools.com/css/css_colornames.asp</source>
          <target state="translated">css名から色名を検索:http://www.w3schools.com/css/css_colornames.asp</target>
        </trans-unit>
        <trans-unit id="690fc3f30c3877ebe6a876028aa76a06d83cf05d" translate="yes" xml:space="preserve">
          <source>Currently under development</source>
          <target state="translated">現在開発中</target>
        </trans-unit>
        <trans-unit id="5214993e10ce9bcc8c28ece9ae4b123f05de1575" translate="yes" xml:space="preserve">
          <source>Customizable charts can be generated using the Google Chart API available</source>
          <target state="translated">カスタマイズ可能なチャートは、利用可能な Google Chart API を使用して生成することができます。</target>
        </trans-unit>
        <trans-unit id="0b5940e92f8a0da845348d55bd67008a8379f524" translate="yes" xml:space="preserve">
          <source>Dataset can be any python iterable and be multi dimensional</source>
          <target state="translated">データセットは任意のpythonの反復可能で多次元であることができます。</target>
        </trans-unit>
        <trans-unit id="36c44de2062016ff5ef7acf0c44f04a04c66735d" translate="yes" xml:space="preserve">
          <source>Demos pages w/ source code</source>
          <target state="translated">ソースコード付きデモページ</target>
        </trans-unit>
        <trans-unit id="66610a8d9d52463e385f74bedd17aa262cf7993a" translate="yes" xml:space="preserve">
          <source>Django project to get you started.</source>
          <target state="translated">あなたを始めるためのDjangoプロジェクト。</target>
        </trans-unit>
        <trans-unit id="6b047ae4026f43dbc9e7200872b56201b644b555" translate="yes" xml:space="preserve">
          <source>Django templates. This allows for dynamic insertion of data for viewing on any</source>
          <target state="translated">Django のテンプレート。これにより、任意の</target>
        </trans-unit>
        <trans-unit id="9d3cd080aa754f9cfb72bccff1f267227f4e8072" translate="yes" xml:space="preserve">
          <source>Doc TOC:</source>
          <target state="translated">Doc TOC.</target>
        </trans-unit>
        <trans-unit id="f7191b625f0ccf8e234fd3ddb5a323e90ab06079" translate="yes" xml:space="preserve">
          <source>Enhanced unicode support</source>
          <target state="translated">強化されたユニコードのサポート</target>
        </trans-unit>
        <trans-unit id="06f49a26fc51961f379d7147e35ddd7fa7dbe595" translate="yes" xml:space="preserve">
          <source>Full py3k compliance</source>
          <target state="translated">py3kのフルコンプライアンス</target>
        </trans-unit>
        <trans-unit id="c69ed5d3d87c9833de880b8f0fba0762ccabf240" translate="yes" xml:space="preserve">
          <source>GChartWrapper - Google Chart API Wrapper</source>
          <target state="translated">GChartWrapper-Google Chart API Wrapper</target>
        </trans-unit>
        <trans-unit id="0f619da1847be222fc405d4a5e98cb13e8e2dd96" translate="yes" xml:space="preserve">
          <source>GChartWrapper/testing.py. The tests are executed through GChartWrapper/tests.py</source>
          <target state="translated">GChartWrapper/testing.pyを使用しています。テストは GChartWrapper/tests.py を通して実行されます。</target>
        </trans-unit>
        <trans-unit id="e96ca9d1fc1f6b84631e579f2a15d103da46a559" translate="yes" xml:space="preserve">
          <source>Genshi?</source>
          <target state="translated">げんし?</target>
        </trans-unit>
        <trans-unit id="7d43f07d323dfc785bcbce2352619ee6504b308e" translate="yes" xml:space="preserve">
          <source>In the templating folder there is a folder called djangoproj which is an example</source>
          <target state="translated">テンプレートフォルダ内には、djangoprojと呼ばれるフォルダがあります。</target>
        </trans-unit>
        <trans-unit id="198920083a8a17c3aa6c640e57794422dcb2cc6c" translate="yes" xml:space="preserve">
          <source>Initialize the chart with a valid type (see API reference) and dataset</source>
          <target state="translated">チャートを有効な型(APIリファレンスを参照)とデータセットで初期化します。</target>
        </trans-unit>
        <trans-unit id="1617c5beeb915235a8aa5a638402738bf957cc24" translate="yes" xml:space="preserve">
          <source>Jinja2 - working, gonna b rough</source>
          <target state="translated">働いている、荒れそうなので、Jinja2-働いている。</target>
        </trans-unit>
        <trans-unit id="65e3a08c083a5a0fcb4a11669cd9750c84efb99f" translate="yes" xml:space="preserve">
          <source>Just include the '{% load charts %}' tag in your templates before making charts.</source>
          <target state="translated">チャートを作成する前に、テンプレートに'{% load charts %}'タグを含めるだけです。</target>
        </trans-unit>
        <trans-unit id="d69f6404b9ef279fad5c5358778a53ebefd19b72" translate="yes" xml:space="preserve">
          <source>Kwargs will be put into chart API params if valid&quot;&quot;&quot;</source>
          <target state="translated">Kwargsは有効な場合、チャートのAPIパラメータに入れられます&quot;&quot;&quot;&quot;</target>
        </trans-unit>
        <trans-unit id="238ca011717fb3bbfe5b3c8d2d53586d8f864933" translate="yes" xml:space="preserve">
          <source>Look to example.html in the djangoproj for more detailed examples</source>
          <target state="translated">より詳細な例については djangoproj の example.html を参照してください。</target>
        </trans-unit>
        <trans-unit id="91ba0281dfb2799e423a1dbbf9c7ac24b7c465ab" translate="yes" xml:space="preserve">
          <source>Mako - done</source>
          <target state="translated">マコ-終了しました。</target>
        </trans-unit>
        <trans-unit id="7bfe5c8aa877576e522f09744f561e1b35315401" translate="yes" xml:space="preserve">
          <source>More to come...</source>
          <target state="translated">まだまだ続く...</target>
        </trans-unit>
        <trans-unit id="3762d3316a54d87691e55f494ad4977ebc36543d" translate="yes" xml:space="preserve">
          <source>New chart PieC for concentric pie charts</source>
          <target state="translated">同心円グラフ用の新チャートPieC</target>
        </trans-unit>
        <trans-unit id="2991a3a8e0f7c8425d742d241029dce3fb170c5b" translate="yes" xml:space="preserve">
          <source>New charts Note,Text,Pin,Bubble</source>
          <target state="translated">新しいチャート ノート、テキスト、ピン、バブル</target>
        </trans-unit>
        <trans-unit id="4172ed1bd11f776d06cac90a33cc52de73aa416e" translate="yes" xml:space="preserve">
          <source>Newer versions of the wrapper contain templatetags for generating charts in</source>
          <target state="translated">新しいバージョンのラッパーには,チャートを生成するためのテンプレートタグが含まれています.</target>
        </trans-unit>
        <trans-unit id="737e30ba48a3e0fa2a6176a54a71139b4f09193b" translate="yes" xml:space="preserve">
          <source>Or try a bubble</source>
          <target state="translated">またはバブルを試してみてください</target>
        </trans-unit>
        <trans-unit id="dfe3a2854b78ae719f8eb7a4e61e5bf2c59c4417" translate="yes" xml:space="preserve">
          <source>Other examples of using the chartwrapper in templating languages</source>
          <target state="translated">テンプレート言語での chartwrapper の使用の他の例</target>
        </trans-unit>
        <trans-unit id="16f093e68ab486b2de3df744c2e02c71213f960c" translate="yes" xml:space="preserve">
          <source>Python Google Chart Wrapper</source>
          <target state="translated">Python Google Chart Wrapper</target>
        </trans-unit>
        <trans-unit id="37c8126ec38dfbbd7d1eeb0da7f315880d9c28b7" translate="yes" xml:space="preserve">
          <source>Restuctured Axes functions</source>
          <target state="translated">レストアクスの機能</target>
        </trans-unit>
        <trans-unit id="74540c597893caaf6f59618c97f131ac222721d2" translate="yes" xml:space="preserve">
          <source>Reverse functionality</source>
          <target state="translated">リバース機能</target>
        </trans-unit>
        <trans-unit id="b7fcb16efa9eafdd1cb04d769338989d1c41593d" translate="yes" xml:space="preserve">
          <source>Switched to New BSD License</source>
          <target state="translated">新しいBSDライセンスに切り替えました</target>
        </trans-unit>
        <trans-unit id="8630140803521983db97aa1cb1d6920780be9ae2" translate="yes" xml:space="preserve">
          <source>The Epydoc API information is generated in HTML format and available in the</source>
          <target state="translated">Epydoc APIの情報はHTML形式で生成され</target>
        </trans-unit>
        <trans-unit id="65ca87d5dca462ac335dcfe45a5d0a58408996e9" translate="yes" xml:space="preserve">
          <source>The chart takes any iterable python data type (now including numpy arrays)</source>
          <target state="translated">このチャートは、反復可能な python データ型 (現在では numpy 配列を含む)を受け取ります。</target>
        </trans-unit>
        <trans-unit id="96a44140f436cb4f6d8642a419d3762822e69fca" translate="yes" xml:space="preserve">
          <source>The module also comes with a test framework with sample charts available in</source>
          <target state="translated">このモジュールには、サンプルチャートを含むテストフレームワークも付属しています。</target>
        </trans-unit>
        <trans-unit id="3fa724d1bd09b20c383e6b9621095fa934705e59" translate="yes" xml:space="preserve">
          <source>The module supports dynamic insertion of any variable within the context like so</source>
          <target state="translated">モジュールは、コンテキスト内の任意の変数の動的挿入をサポートしています。</target>
        </trans-unit>
        <trans-unit id="4bf222d0d155e2fb16422d50d25b7ac162f5151d" translate="yes" xml:space="preserve">
          <source>The new way with chaining</source>
          <target state="translated">チェーンを使った新しい方法</target>
        </trans-unit>
        <trans-unit id="b06217ee40a1c5e023db938521d4977c3a2be77a" translate="yes" xml:space="preserve">
          <source>The old way:</source>
          <target state="translated">昔からのやり方。</target>
        </trans-unit>
        <trans-unit id="ddc8fd32b3214d1c1f3572b74117e256ba2a30d6" translate="yes" xml:space="preserve">
          <source>The wrapper can render the URL of the Google chart based on your parameters.</source>
          <target state="translated">ラッパーは、あなたのパラメータに基づいてGoogleチャートのURLをレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="ad3de41238082ed65568df9c4da2ff6d376da58e" translate="yes" xml:space="preserve">
          <source>The wrapper has many useful ways to take the URL of your chart and output it</source>
          <target state="translated">ラッパーには、チャートのURLを取得して出力するための多くの便利な方法があります。</target>
        </trans-unit>
        <trans-unit id="d107645ffa7eca3404d4ebd36846767182820700" translate="yes" xml:space="preserve">
          <source>The wrapper now supports chaining</source>
          <target state="translated">ラッパーがチェーン化をサポートするようになりました</target>
        </trans-unit>
        <trans-unit id="7b05290005b0a43373540a0f0c67bbc3e6b5af55" translate="yes" xml:space="preserve">
          <source>Then try out some static data in your templates</source>
          <target state="translated">その後、テンプレートの静的データを試してみてください。</target>
        </trans-unit>
        <trans-unit id="6cd4ff6dd9dacca685bea9536974a101f89c478b" translate="yes" xml:space="preserve">
          <source>Updated Django templatetags to allow context inclusion and new charts</source>
          <target state="translated">Django のテンプレートタグを更新し、コンテキストの包含と新しいチャートを可能にしました。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">使用方法</target>
        </trans-unit>
        <trans-unit id="27993f72d8dd27097099bf50d8fa970eb337652d" translate="yes" xml:space="preserve">
          <source>Where mode is one of the following:</source>
          <target state="translated">ここで、モードは以下のいずれかである。</target>
        </trans-unit>
        <trans-unit id="c67466ab372fe095b2217bb57b30c035614f7508" translate="yes" xml:space="preserve">
          <source>With the chart you can render an HTML img tag to insert into webpages on the fly,</source>
          <target state="translated">このチャートでは、HTMLのimgタグをレンダリングしてウェブページに挿入することができます。</target>
        </trans-unit>
        <trans-unit id="fb37caf744dafb5b5784b1bc10efdfc12ed941c5" translate="yes" xml:space="preserve">
          <source>and does the encoding for you</source>
          <target state="translated">とエンコーディングをしてくれます。</target>
        </trans-unit>
        <trans-unit id="430d63cb0b4cf47d197333e5feb268aef13be364" translate="yes" xml:space="preserve">
          <source>at http://code.google.com/apis/chart/. The GChart Wrapper allows Pythonic access</source>
          <target state="translated">http://code.google.com/apis/chart/。GChart Wrapperは、Pythonicアクセスを可能にします。</target>
        </trans-unit>
        <trans-unit id="ab1db161029f38e3b8ced1f83b3521cef8053580" translate="yes" xml:space="preserve">
          <source>class GChart(Dict):</source>
          <target state="translated">クラス GChart(Dict)。</target>
        </trans-unit>
        <trans-unit id="22848125074aa40f734dc4fa82fefea7c83acd0b" translate="yes" xml:space="preserve">
          <source>def __init__(self, ctype=None, dataset=[], **kwargs):</source>
          <target state="translated">def __init__(self,ctype=None,dataset=[],**kwargs).</target>
        </trans-unit>
        <trans-unit id="f582a65a740f6048fc0e7d517e66fc06312d0d32" translate="yes" xml:space="preserve">
          <source>def example(request):</source>
          <target state="translated">def example(request)。</target>
        </trans-unit>
        <trans-unit id="8a87e9ac7b9cb3bdaf8e5762826b28ef57b47a14" translate="yes" xml:space="preserve">
          <source>demo - Creates html demo pages (needs pygments)</source>
          <target state="translated">demo-html デモページを作成する (pygments が必要)</target>
        </trans-unit>
        <trans-unit id="3df092f272786c1a09b22a750319df85c6adbdd5" translate="yes" xml:space="preserve">
          <source>docs folder under index.html</source>
          <target state="translated">index.htmlの下にあるdocsフォルダ</target>
        </trans-unit>
        <trans-unit id="13d119c0f473e9e537ed082f12ef0c475f985976" translate="yes" xml:space="preserve">
          <source>into different formats like...</source>
          <target state="translated">のような異なるフォーマットに...</target>
        </trans-unit>
        <trans-unit id="536f421a4ed53103c145591a6a5e01be32e34f3b" translate="yes" xml:space="preserve">
          <source>place 'GChartWrapper.charts' in your INSTALLED_APPS and then you are ready to go.</source>
          <target state="translated">INSTALLED_APPSに'GChartWrapper.charts'を配置すれば準備完了です。</target>
        </trans-unit>
        <trans-unit id="f9148b65bf7616494cf9b60f88ea55e770c01d13" translate="yes" xml:space="preserve">
          <source>return render_to_response('example.html',{'dataset':range(50)})</source>
          <target state="translated">return render_to_response('example.html',{'dataset':range(50)})</target>
        </trans-unit>
        <trans-unit id="a14914540db55372c104cb8697da4bca95ebdf9e" translate="yes" xml:space="preserve">
          <source>save - Saves images of all charts in 'tests' folder</source>
          <target state="translated">save-すべてのチャートの画像を 'tests' フォルダに保存する</target>
        </trans-unit>
        <trans-unit id="ac190f95fcddeba88c3db39b0847de8bb1fd2f30" translate="yes" xml:space="preserve">
          <source>show it directly in a webbrowser, or save the chart PNG to disk.</source>
          <target state="translated">ウェブブラウザで直接表示したり、チャートのPNGをディスクに保存したりすることができます。</target>
        </trans-unit>
        <trans-unit id="645df2ba6bdf91375ccaa54c59c6d8b6535840e9" translate="yes" xml:space="preserve">
          <source>to the parameters of constructing the charts and displaying the URLs generated.</source>
          <target state="translated">をチャートの構築と生成されたURLの表示のパラメータに変更します。</target>
        </trans-unit>
        <trans-unit id="ee47bf93c6bce9101bbcd44f3a61e555bed218ec" translate="yes" xml:space="preserve">
          <source>unit - Runs unit test cases for all charts to see if checksums match</source>
          <target state="translated">unit-すべてのチャートに対してユニットテストケースを実行し,チェックサムが一致するかどうかを確認する.</target>
        </trans-unit>
        <trans-unit id="3b4325e48389f794ab49bd00e8cf2692c8871b9c" translate="yes" xml:space="preserve">
          <source>url - Prints urls of all charts [default]</source>
          <target state="translated">url-すべてのチャートのURLを印刷します [default]。</target>
        </trans-unit>
        <trans-unit id="d58c5df283bf3940c111266afd384d6bd1867580" translate="yes" xml:space="preserve">
          <source>web application. Install the module first using `python setup.py install` then</source>
          <target state="translated">ウェブアプリケーションにインストールします。モジュールをインストールするには、まず `python setup.py install` を使用します。</target>
        </trans-unit>
        <trans-unit id="99ae53efc042d0b727bcaaf0f6cf1037557c95f2" translate="yes" xml:space="preserve">
          <source>{% bubble icon_text_big snack bb $2.99 ffbb00 black as img %}</source>
          <target state="translated">{％バブルicon_text_bigスナックBB $ 2.99 ffbb00ブラックimg％}</target>
        </trans-unit>
        <trans-unit id="622751ffb32949cdf8026cb54724e60e9f57afc4" translate="yes" xml:space="preserve">
          <source>{% chart Line GurMrabsClgubaolGvzCrgrefOrnhgvshyvforggregunahtyl  %}</source>
          <target state="translated">{％グラフLine GurMrabsClgubaolGvzCrgrefOrnhgvshyvforggregunahtyl％}</target>
        </trans-unit>
        <trans-unit id="5b145ce49c32dca069b6f5cbe02c30955f65d77d" translate="yes" xml:space="preserve">
          <source>{% chart Line dataset  %}</source>
          <target state="translated">{％チャートラインデータセット％}</target>
        </trans-unit>
        <trans-unit id="00c619084b293cf8145d7a41820c8d4530d02319" translate="yes" xml:space="preserve">
          <source>{% color 00cc00 %}</source>
          <target state="translated">{％color 00cc00％}</target>
        </trans-unit>
        <trans-unit id="ad7a234b8f504d8cc997ad5fb53866b2ec75a054" translate="yes" xml:space="preserve">
          <source>{% endchart %}</source>
          <target state="translated">{％エンドチャート％}</target>
        </trans-unit>
        <trans-unit id="efdd88c8cadc10ddc2d7e7be436609980a6b9b7a" translate="yes" xml:space="preserve">
          <source>{% title 'The Zen of Python' 00cc00 36 %}</source>
          <target state="translated">{％タイトル 'The Zen of Python' 00cc00 36％}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
