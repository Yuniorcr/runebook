<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/livereload/">
    <body>
      <group id="livereload">
        <trans-unit id="081beb50f6c4dc5e76355974fb78f352f6467ec4" translate="yes" xml:space="preserve">
          <source>'livereload'</source>
          <target state="translated">'livereload'</target>
        </trans-unit>
        <trans-unit id="be1e6a613e204620f017c3063edbfe700aac3863" translate="yes" xml:space="preserve">
          <source>, for starting a server in a directory.</source>
          <target state="translated">、ディレクトリ内のサーバーを起動するため。</target>
        </trans-unit>
        <trans-unit id="8dbff69149a8667550c7d56b0f7e6b7b2110850e" translate="yes" xml:space="preserve">
          <source>./manage.py livereload</source>
          <target state="translated">./manage.py livereload</target>
        </trans-unit>
        <trans-unit id="82243e0988dd1633eb18d18c3312ba5d397045c7" translate="yes" xml:space="preserve">
          <source>./manage.py livereload -h</source>
          <target state="translated">./manage.py livereload -h</target>
        </trans-unit>
        <trans-unit id="3b8ac6c75a9274bd6c7b12be1395b5c22b3a06be" translate="yes" xml:space="preserve">
          <source>Bottle</source>
          <target state="translated">ボトル</target>
        </trans-unit>
        <trans-unit id="ae06a732b088c296d5b86a05207844bbe7c9ebd3" translate="yes" xml:space="preserve">
          <source>By default, it will listen to port 35729, the common port for &lt;a href=&quot;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-&quot;&gt;LiveReload browser extensions&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-&quot;&gt;LiveReloadブラウザ拡張機能の&lt;/a&gt;共通ポートであるポート35729をリッスンします。</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">コマンドラインインタフェース</target>
        </trans-unit>
        <trans-unit id="45e199c34f2e47d26bd6cf3b0bc418229f9353d7" translate="yes" xml:space="preserve">
          <source>Developer Guide</source>
          <target state="translated">開発者ガイド</target>
        </trans-unit>
        <trans-unit id="b6c95e2580609775eb2b7302ad50c369810daef6" translate="yes" xml:space="preserve">
          <source>Django</source>
          <target state="translated">ジャンゴ</target>
        </trans-unit>
        <trans-unit id="b58aa96da1fdda8eb190071552ee01b4b1984e55" translate="yes" xml:space="preserve">
          <source>Download on PyPi</source>
          <target state="translated">PyPi でダウンロード</target>
        </trans-unit>
        <trans-unit id="f749d85face6d985a84c2dd0bb2da0a1fcb65288" translate="yes" xml:space="preserve">
          <source>Flask</source>
          <target state="translated">フラスコ</target>
        </trans-unit>
        <trans-unit id="40922b194282f4e05b2268f92c6ebd130edc0400" translate="yes" xml:space="preserve">
          <source>For Django there is a management command included.</source>
          <target state="translated">Django には管理コマンドが含まれています。</target>
        </trans-unit>
        <trans-unit id="154e5e355681ddde38277eb897d0a7b563146de5" translate="yes" xml:space="preserve">
          <source>For available options like host and ports please refer to</source>
          <target state="translated">ホストやポートなどの利用可能なオプションについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="04f6698ca97926daebce763358ab791c3b369601" translate="yes" xml:space="preserve">
          <source>Frameworks Integration</source>
          <target state="translated">フレームワークの統合</target>
        </trans-unit>
        <trans-unit id="b01514bd91d2d8cd6d9e0ace6dc91840382cf92c" translate="yes" xml:space="preserve">
          <source>Guardfile</source>
          <target state="translated">ガードファイル</target>
        </trans-unit>
        <trans-unit id="5c2f91339a044e3c27ac63aae69edae0156efeab" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple example script that rebuilds Sphinx documentation:</source>
          <target state="translated">Sphinxドキュメントを再構築する簡単なサンプルスクリプトを次に示します。</target>
        </trans-unit>
        <trans-unit id="f20870c5fe9f8118e8fb4eca60c4dcb38053af40" translate="yes" xml:space="preserve">
          <source>INSTALLED_APPS</source>
          <target state="translated">インストールされているアプリケーション</target>
        </trans-unit>
        <trans-unit id="6a06e46176aee33a71fcaa2b488f3c7e948d477a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have pip installed, try easy_install:</source>
          <target state="translated">pipがインストールされていない場合は、easy_installを試してください。</target>
        </trans-unit>
        <trans-unit id="691b993d2c87d8ea1d2bd6f10d1f06821b2405a4" translate="yes" xml:space="preserve">
          <source>Install Python LiveReload with pip:</source>
          <target state="translated">pipでPythonのLiveReloadをインストールします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="74a60901efa52be67e7f19bca0b4dff842291f94" translate="yes" xml:space="preserve">
          <source>Livereload can work seamlessly with your favorite framework.</source>
          <target state="translated">Livereloadはお好きなフレームワークとシームレスに連携することができます。</target>
        </trans-unit>
        <trans-unit id="8ddea612a501a2add9bf3ca14810bbd7810197c4" translate="yes" xml:space="preserve">
          <source>Older versions of Python LiveReload used a</source>
          <target state="translated">古いバージョンのPython LiveReloadでは</target>
        </trans-unit>
        <trans-unit id="54982317ae3f211dbe87a62fae75a58649924f0e" translate="yes" xml:space="preserve">
          <source>Python LiveReload is an awesome tool for web developers</source>
          <target state="translated">Python LiveReloadはウェブ開発者のための素晴らしいツールです。</target>
        </trans-unit>
        <trans-unit id="0dde2e17ce4f305b29c4e224fa39392744326e39" translate="yes" xml:space="preserve">
          <source>Python LiveReload is designed for web developers who know Python.</source>
          <target state="translated">Python LiveReloadは、Pythonを知っているWeb開発者向けに設計されています。</target>
        </trans-unit>
        <trans-unit id="b856f323bfebfa1a5a2533840d3df68d288abe8e" translate="yes" xml:space="preserve">
          <source>Python LiveReload provides a command line utility,</source>
          <target state="translated">PythonのLiveReloadはコマンドラインユーティリティを提供しています。</target>
        </trans-unit>
        <trans-unit id="eec171a0092cae83bdd307618b04d521ac8ee105" translate="yes" xml:space="preserve">
          <source>Run it, then open &lt;a href=&quot;http://localhost:5500/&quot;&gt;http://localhost:5500/&lt;/a&gt; and you can see the documentation changes in real time.</source>
          <target state="translated">それを実行し、&lt;a href=&quot;http://localhost:5500/&quot;&gt;http：// localhost：5500 /&lt;/a&gt;を開くと、ドキュメントの変更をリアルタイムで確認できます。</target>
        </trans-unit>
        <trans-unit id="f78c15a08b49e9a530e76efccebbb371f08e4308" translate="yes" xml:space="preserve">
          <source>Script example: Sphinx</source>
          <target state="translated">スクリプトの例。スフィンクス</target>
        </trans-unit>
        <trans-unit id="e05a50e02c7b708cc9b7ec3cefc9482bffbe2109" translate="yes" xml:space="preserve">
          <source>Security Report</source>
          <target state="translated">セキュリティレポート</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">サーバー</target>
        </trans-unit>
        <trans-unit id="7e7361f3deb5086df72b1730b50ee20c04bc9052" translate="yes" xml:space="preserve">
          <source>Setup a server with</source>
          <target state="translated">でサーバーを設定します。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="3521e58828372bca0792a48be0b58ea2cd5c1cff" translate="yes" xml:space="preserve">
          <source>The new livereload server is designed for developers. It can power a
wsgi application now:</source>
          <target state="translated">新しい livereload サーバは、開発者のために設計されています。wsgiアプリケーションを動かすことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="62b4e09a4fa475ce18873677009d717ffbceca7b" translate="yes" xml:space="preserve">
          <source>The powerful</source>
          <target state="translated">パワフルな</target>
        </trans-unit>
        <trans-unit id="3132fbe2010bcb0126ec47aa54c38c465f6581cc" translate="yes" xml:space="preserve">
          <source>This is a brand new LiveReload in version 2.0.0.</source>
          <target state="translated">これはバージョン2.0.0の真新しいLiveReloadです。</target>
        </trans-unit>
        <trans-unit id="7ef2cbe9b2bb79e88a59a54b9548d5a52210955a" translate="yes" xml:space="preserve">
          <source>To automagically serve static files like the native</source>
          <target state="translated">ネイティブのような静的ファイルを自動で提供するには</target>
        </trans-unit>
        <trans-unit id="4b5392cfdf232f6cc068904b2d9b657e651e978e" translate="yes" xml:space="preserve">
          <source>To report a security vulnerability, please use the
&lt;a href=&quot;https://tidelift.com/security&quot;&gt;Tidelift security contact&lt;/a&gt;.
Tidelift will coordinate the fix and disclosure.</source>
          <target state="translated">セキュリティの脆弱性を報告するには、&lt;a href=&quot;https://tidelift.com/security&quot;&gt;Tideliftのセキュリティ連絡先&lt;/a&gt;を使用してください。Tideliftが修正と公開を調整します。</target>
        </trans-unit>
        <trans-unit id="136d808d7dc02d86355aa6f3dc62c83719ff6b0c" translate="yes" xml:space="preserve">
          <source>To use simply</source>
          <target state="translated">簡単に使用するには</target>
        </trans-unit>
        <trans-unit id="34b90c493df25f8dd7c1eec42d3b91b94fb3bbe8" translate="yes" xml:space="preserve">
          <source>Wrap Flask with livereload is much simpler:</source>
          <target state="translated">ラップフラスコにリバロードを入れると、よりシンプルになります。</target>
        </trans-unit>
        <trans-unit id="c193784a78c178a03f0f524af358f707624909ce" translate="yes" xml:space="preserve">
          <source>Wrap the</source>
          <target state="translated">ラップ</target>
        </trans-unit>
        <trans-unit id="28903806b591994133c023d649022c5f95e08bd3" translate="yes" xml:space="preserve">
          <source>You can also use other library (for example: formic) for more powerful
file adding:</source>
          <target state="translated">より強力なファイル追加のために、他のライブラリ(例えばformic)を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="c2a8cc9df3a914fc3cf2268bdc052380df9deff1" translate="yes" xml:space="preserve">
          <source>You can delay a certain seconds to send the reload signal:</source>
          <target state="translated">リロード信号の送信を一定時間遅らせることができます。</target>
        </trans-unit>
        <trans-unit id="3a18c8bbc8efa0489e5aa8fa3586e07fcaa49e89" translate="yes" xml:space="preserve">
          <source>`server.setHeader`</source>
          <target state="translated">`server.setHeader`</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">付け足す</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">そして</target>
        </trans-unit>
        <trans-unit id="04ad2745057c2fbbeb338919d915810c65d9ff07" translate="yes" xml:space="preserve">
          <source>app with livereload server:</source>
          <target state="translated">アプリを livereload サーバーで使用しています。</target>
        </trans-unit>
        <trans-unit id="5877bcac762338cb0f5b44ccb63013ea670898d0" translate="yes" xml:space="preserve">
          <source>app: a wsgi application</source>
          <target state="translated">アプリ:wsgiアプリケーション</target>
        </trans-unit>
        <trans-unit id="7d87d5e6ff9f43cc2dc34c0e9483e87fe3b22755" translate="yes" xml:space="preserve">
          <source>can be used to add one or more headers to the HTTP
response:</source>
          <target state="translated">を使用して、HTTP レスポンスに一つ以上のヘッダを追加することができます。</target>
        </trans-unit>
        <trans-unit id="b39340dda9d98232e9491acb47af96d37c4ca086" translate="yes" xml:space="preserve">
          <source>can watch a filepath, a directory and a glob pattern:</source>
          <target state="translated">は、ファイルパス、ディレクトリ、グロブパターンを見ることができます。</target>
        </trans-unit>
        <trans-unit id="083107986b283a77e9345c116244ffa11348caf5" translate="yes" xml:space="preserve">
          <source>class accepts parameters:</source>
          <target state="translated">クラスはパラメータを受け付けます。</target>
        </trans-unit>
        <trans-unit id="aef6a569e8828be430a06e46b4a13e3ac5747764" translate="yes" xml:space="preserve">
          <source>command you have to use &lt;a href=&quot;https://github.com/kennethreitz/dj-static&quot;&gt;dj-static&lt;/a&gt;. (follow the simple instructions there).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kennethreitz/dj-static&quot;&gt;dj-static&lt;/a&gt;を使用する必要があるコマンド。（そこにある簡単な指示に従ってください）。</target>
        </trans-unit>
        <trans-unit id="c2b301c8d9c8ae9f195bf828ab9c243510dc260b" translate="yes" xml:space="preserve">
          <source>function will help you to execute shell commands. You
can use it with</source>
          <target state="translated">関数はシェルコマンドを実行するのに役立ちます。これを</target>
        </trans-unit>
        <trans-unit id="637023bdbf92e77e6a8c9b0b44a95f214e13e6b4" translate="yes" xml:space="preserve">
          <source>livereload</source>
          <target state="translated">レバーロード</target>
        </trans-unit>
        <trans-unit id="86e03f8d415d9b720fa90fc57742fc7e1921d5b0" translate="yes" xml:space="preserve">
          <source>method. It can create a static server
and a livereload server:</source>
          <target state="translated">メソッドを使用します。静的なサーバと livereload サーバを作成することができます。</target>
        </trans-unit>
        <trans-unit id="6fd6c91c108a60273406378da5b889b6f108aed1" translate="yes" xml:space="preserve">
          <source>runserver</source>
          <target state="translated">ランサーバ</target>
        </trans-unit>
        <trans-unit id="3578ec7a3caf062cb7b16544e5bbbfc060e70bb5" translate="yes" xml:space="preserve">
          <source>server.serve</source>
          <target state="translated">サーバーサーブ</target>
        </trans-unit>
        <trans-unit id="3ca70e001c2b861106c91a462dc77c7813cd1a40" translate="yes" xml:space="preserve">
          <source>server.setHeader</source>
          <target state="translated">server.setHeader</target>
        </trans-unit>
        <trans-unit id="25147cf2611f4b857d75c96f8a8ff049a10ca3aa" translate="yes" xml:space="preserve">
          <source>server.watch</source>
          <target state="translated">サーバーウォッチ</target>
        </trans-unit>
        <trans-unit id="ec122f54cf16a175b3e22979e240684f7734079a" translate="yes" xml:space="preserve">
          <source>shell</source>
          <target state="translated">貝殻</target>
        </trans-unit>
        <trans-unit id="1c015e3e76ad17cfb144dcab64eacad602c50e6f" translate="yes" xml:space="preserve">
          <source>then run</source>
          <target state="translated">走らせる</target>
        </trans-unit>
        <trans-unit id="93097c77061395fec2e57eef80ddd438c260cb84" translate="yes" xml:space="preserve">
          <source>to describe optional additional rules for files to watch and build commands to run on changes.  This conflicted with other tools that used the same file for their configuration and is no longer supported since Python LiveReload version 2.0.0.  Instead of a</source>
          <target state="translated">を使用して、監視するファイルと変更に対して実行するビルドコマンドのオプションの追加ルールを記述しました。これは、設定に同じファイルを使用する他のツールと競合し、Python LiveReload バージョン 2.0.0 以降ではサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="ab91077b25792e5df5bbb22f17e5b0bda9153722" translate="yes" xml:space="preserve">
          <source>to your</source>
          <target state="translated">にとって</target>
        </trans-unit>
        <trans-unit id="8989e48c109cabfc13f2ef9a865ad6fe5ccf1f2b" translate="yes" xml:space="preserve">
          <source>watcher: a watcher instance, you don&amp;rsquo;t have to create one</source>
          <target state="translated">ウォッチャー：ウォッチャーインスタンス、作成する必要はありません</target>
        </trans-unit>
        <trans-unit id="792a38aa93ef974f17fda8f9ddcaaea0569530a3" translate="yes" xml:space="preserve">
          <source>you can now write a Python script using very similar syntax and run it instead of the command line application.</source>
          <target state="translated">これで、非常に似た構文を使ってPythonスクリプトを書き、コマンドラインアプリケーションの代わりに実行することができるようになりました。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
