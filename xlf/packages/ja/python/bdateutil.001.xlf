<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://pypi.org/project/bdateutil/">
    <body>
      <group id="bdateutil">
        <trans-unit id="c6a2db76feb84be87491cc2c9962f2264c4ded96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;Pull Requests&lt;/a&gt; are always welcome.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ryanss/bdateutil/issues&quot;&gt;問題&lt;/a&gt;と&lt;a href=&quot;https://github.com/ryanss/bdateutil/pulls&quot;&gt;プルリクエスト&lt;/a&gt;はいつでも歓迎です。</target>
        </trans-unit>
        <trans-unit id="1be273a0f8002b29bf6f4f31ce1e1cfd2612e163" translate="yes" xml:space="preserve">
          <source>A new function &lt;code&gt;isbday&lt;/code&gt; which returns &lt;code&gt;True&lt;/code&gt; if the argument
passed to it falls on a business day and &lt;code&gt;False&lt;/code&gt; if it is a weekend or
holiday. Option keyword argument &lt;code&gt;holidays&lt;/code&gt; adds the ability to take
into account a specific set of holidays.</source>
          <target state="translated">新しい関数 &lt;code&gt;isbday&lt;/code&gt; は、渡された引数が営業日に該当する場合は &lt;code&gt;True&lt;/code&gt; を返し、週末または休日の場合は &lt;code&gt;False&lt;/code&gt; を返します。オプションキーワード引数の &lt;code&gt;holidays&lt;/code&gt; は、特定の休日のセットを考慮する機能を追加します。</target>
        </trans-unit>
        <trans-unit id="3aecf00c9ac3214c61cb9cf72de8cb19f502b130" translate="yes" xml:space="preserve">
          <source>A new, optional, keyword argument &lt;code&gt;bdays&lt;/code&gt; is available when using
relativedelta to add or remove time to a datetime object.</source>
          <target state="translated">relativedeltaを使用して日時オブジェクトに時間を追加または削除するときに、新しいオプションのキーワード引数 &lt;code&gt;bdays&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="1d52f769f98c104490db3f5b36e626ac9b452174" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.</source>
          <target state="translated">python-dateutilにビジネスデイロジックを追加し、データ型の柔軟性を向上させました。</target>
        </trans-unit>
        <trans-unit id="c952082357224df8dfe4780645521bf97219589b" translate="yes" xml:space="preserve">
          <source>Adds business day logic and improved data type flexibility to python-dateutil.
100% backwards compatible with python-dateutil, simply replace &lt;code&gt;dateutil&lt;/code&gt;
imports with &lt;code&gt;bdateutil&lt;/code&gt;.</source>
          <target state="translated">営業日のロジックを追加し、データ型の柔軟性をpython-dateutilに改善しました。python-dateutilと100％下位互換性があります。単に &lt;code&gt;dateutil&lt;/code&gt; インポートを &lt;code&gt;bdateutil&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="b4eda2fbedb81256ca8293a03548ea21f9fcbf05" translate="yes" xml:space="preserve">
          <source>Another new, optional, keyword argument &lt;code&gt;holidays&lt;/code&gt; is available when
using relativedelta to support the &lt;code&gt;bdays&lt;/code&gt; feature. Without holidays
business days are only calculated using weekdays. By passing a list of
holidays a more accurate and useful business day calculation can be
performed. The Python package &lt;code&gt;holidays.py&lt;/code&gt; is installed as a
requirement with bdateutil and that is the prefered way to generate
holidays.</source>
          <target state="translated">relativedeltaを使用して &lt;code&gt;bdays&lt;/code&gt; 機能をサポートする場合、別の新しいオプションのキーワード引数 &lt;code&gt;holidays&lt;/code&gt; を使用できます。休日がない場合、営業日は平日のみを使用して計算されます。休日のリストを渡すことにより、より正確で有用な営業日の計算を実行できます。Pythonパッケージ &lt;code&gt;holidays.py&lt;/code&gt; は、bdateutilの要件としてインストールされており、休日を生成するために推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="e276e3de7d758cf4c9cba9cadf6c02d820098425" translate="yes" xml:space="preserve">
          <source>Code and documentation are available according to the MIT License
(see &lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt;).</source>
          <target state="translated">コードとドキュメントはMITライセンス（参照に応じて利用可能な&lt;a href=&quot;https://github.com/ryanss/bdateutil/raw/master/LICENSE&quot;&gt;ライセンスが&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">貢献</target>
        </trans-unit>
        <trans-unit id="80e13549b47a4dfc6e898a282920091b209c78be" translate="yes" xml:space="preserve">
          <source>Coverage</source>
          <target state="translated">カバレッジ</target>
        </trans-unit>
        <trans-unit id="3b2fd4ec2592a60a39c5a925470fa44f8d46d6aa" translate="yes" xml:space="preserve">
          <source>Development Version</source>
          <target state="translated">開発バージョン</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">ドキュメント</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="7efdb52575026e30170fcb12e99298e7a5bb425e" translate="yes" xml:space="preserve">
          <source>If the above fails, please use easy_install instead:</source>
          <target state="translated">上記が失敗した場合は、代わりにeasy_installを使用してください。</target>
        </trans-unit>
        <trans-unit id="ff653d773e8dd454b8236149f3ea5869cd555830" translate="yes" xml:space="preserve">
          <source>Import shortcuts are available that make importing the bdateutil features a
little easier than python-dateutil. However, importing from bdateutil using
the longer method used by python-dateutil still works to remain 100%
backwards compatibility.</source>
          <target state="translated">python-dateutilよりも少しだけ簡単にbdateutilの機能をインポートできるショートカットがあります。しかし、bdateutilからのインポートは、python-dateutilで使用されている長い方法を使用しても、100%の下位互換性を維持するために動作します。</target>
        </trans-unit>
        <trans-unit id="973142621f185d8147d34352e131c396b6dc2ac3" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;datetime&lt;/code&gt; and &lt;code&gt;date&lt;/code&gt; types, relativedelta works
with all strings/bytes regardless of encoding and integer/float timestamps.
It does this by running all date/datetime parameters through the
&lt;code&gt;parse&lt;/code&gt; function which has been modified to accept many different
types than strings, including date/datetime which will return without
modifications. This allows you to call &lt;code&gt;parse(dt)&lt;/code&gt; on an object
regardless of type and ensure a datetime object is returned.</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; と &lt;code&gt;date&lt;/code&gt; タイプに加えて、relativedeltaは、エンコーディングと整数/浮動タイムスタンプに関係なく、すべての文字列/バイトで機能します。これは、変更なしで返される日付/日付時刻を含む、文字列以外の多くの異なるタイプを受け入れるように変更された &lt;code&gt;parse&lt;/code&gt; 関数を介してすべての日付/日付時刻パラメーターを実行することによって 行われます。これにより、タイプに関係なくオブジェクトで &lt;code&gt;parse(dt)&lt;/code&gt; を呼び出し、datetimeオブジェクトが返されることを確認できます。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">インストール</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">ライセンス</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="0643938b9ff7bc45b4a1e703bd0e242ce253edfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rrule&lt;/code&gt; feature has a new &lt;code&gt;BDAILY&lt;/code&gt; option for use as the &lt;code&gt;freq&lt;/code&gt; argument.
This will create a generator which yields business days. Rrule also will now
accept an optional &lt;code&gt;holidays&lt;/code&gt; keyword argument which affects the
&lt;code&gt;BDAILY&lt;/code&gt; freq only. The existing &lt;code&gt;dtstart&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt;
arugments can now be passed as any type resembling a date/datetime.</source>
          <target state="translated">&lt;code&gt;rrule&lt;/code&gt; 機能は、新しい持つ &lt;code&gt;BDAILY&lt;/code&gt; のとして使用するためのオプション &lt;code&gt;freq&lt;/code&gt; 引数を。これにより、営業日を生み出すジェネレータが作成されます。Rrule は、 &lt;code&gt;BDAILY&lt;/code&gt; freqのみに影響するオプションの &lt;code&gt;holidays&lt;/code&gt; キーワード引数 も受け入れるようになりました。既存の &lt;code&gt;dtstart&lt;/code&gt; と &lt;code&gt;until&lt;/code&gt; arugmentsは、日付/日付時刻に似た任意のタイプとして渡すことができます。</target>
        </trans-unit>
        <trans-unit id="334597efb34b5ccf530650c298d5ee47398a89df" translate="yes" xml:space="preserve">
          <source>The latest development version can be installed directly from GitHub:</source>
          <target state="translated">最新の開発版はGitHubから直接インストールできます。</target>
        </trans-unit>
        <trans-unit id="93de043e205c48ecd0e520c7ca8c2bcb0c95c963" translate="yes" xml:space="preserve">
          <source>The latest stable version can always be installed or updated via pip:</source>
          <target state="translated">最新の安定版は常にインストールされているか、pip経由で更新することができます。</target>
        </trans-unit>
        <trans-unit id="3b9616eaeaa514ec9e018618e5cbed82c61fe0e4" translate="yes" xml:space="preserve">
          <source>This section will outline the additional functionality of bdateutil only. For
full documentation on the features provided by python-dateutil please see its
documentation at &lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https://labix.org/python-dateutil&lt;/a&gt;.</source>
          <target state="translated">このセクションでは、bdateutilのみの追加機能について概説します。python-dateutilが提供する機能の完全なドキュメントについては、&lt;a href=&quot;https://labix.org/python-dateutil&quot;&gt;https：&lt;/a&gt; //labix.org/python-dateutilにあるドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="92c23e1bbcaa6fa57e61d36eb923d91999e1419a" translate="yes" xml:space="preserve">
          <source>When passing two datetime arguments to relativedelta, the resulting
relativedelta object will contain a &lt;code&gt;bdays&lt;/code&gt; attribute with the number
of business days between the datetime arguments.</source>
          <target state="translated">2つの日時引数をrelativedeltaに渡すと、結果のrelativedeltaオブジェクトには、日時引数間の営業日数を含む &lt;code&gt;bdays&lt;/code&gt; 属性が含まれます。</target>
        </trans-unit>
        <trans-unit id="789efc0771c509982e172ccecac3212fac56a420" translate="yes" xml:space="preserve">
          <source>bdateutil is 100% backwards compatible with python-dateutil. You can replace
&lt;code&gt;dateutil&lt;/code&gt; with &lt;code&gt;bdateutil&lt;/code&gt; across your entire project and
everything will continue to work the same but you will have access to the
following additional features:</source>
          <target state="translated">bdateutilは、python-dateutilと100％下位互換性があります。プロジェクト全体で &lt;code&gt;dateutil&lt;/code&gt; を &lt;code&gt;bdateutil&lt;/code&gt; に置き換える と、すべてが同じように機能し続けますが、次の追加機能にアクセスできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
