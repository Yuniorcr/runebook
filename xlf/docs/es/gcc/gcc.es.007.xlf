<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="e19fab7ccaf71008439ad46e66a6dd8a8249abc0" translate="yes" xml:space="preserve">
          <source>As in the preceding example, you can explicitly specify the alignment (in bytes) that you wish the compiler to use for a given &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;union&lt;/code&gt; type. Alternatively, you can leave out the alignment factor and just ask the compiler to align a type to the maximum useful alignment for the target machine you are compiling for. For example, you could write:</source>
          <target state="translated">Como en el ejemplo anterior, puede especificar expl&amp;iacute;citamente la alineaci&amp;oacute;n (en bytes) que desea que el compilador utilice para una &lt;code&gt;struct&lt;/code&gt; determinada o tipo de &lt;code&gt;union&lt;/code&gt; . Alternativamente, puede omitir el factor de alineaci&amp;oacute;n y simplemente pedirle al compilador que alinee un tipo con la alineaci&amp;oacute;n &amp;uacute;til m&amp;aacute;xima para la m&amp;aacute;quina de destino para la que est&amp;aacute; compilando. Por ejemplo, podr&amp;iacute;as escribir:</target>
        </trans-unit>
        <trans-unit id="b67040c22389d40183c4661602eeb071108d65a1" translate="yes" xml:space="preserve">
          <source>As in the preceding examples, you can explicitly specify the alignment (in bytes) that you wish the compiler to use for a given variable or structure field. Alternatively, you can leave out the alignment factor and just ask the compiler to align a variable or field to the default alignment for the target architecture you are compiling for. The default alignment is sufficient for all scalar types, but may not be enough for all vector types on a target that supports vector operations. The default alignment is fixed for a particular target ABI.</source>
          <target state="translated">Al igual que en los ejemplos anteriores,se puede especificar explícitamente la alineación (en bytes)que se desea que el compilador utilice para una determinada variable o campo de estructura.Alternativamente,puede omitir el factor de alineación y simplemente pedir al compilador que alinee una variable o campo a la alineación por defecto para la arquitectura de destino para la que está compilando.La alineación por defecto es suficiente para todos los tipos escalares,pero puede no serlo para todos los tipos de vectores en un objetivo que admita operaciones vectoriales.La alineación por defecto es fija para un ABI de objetivo particular.</target>
        </trans-unit>
        <trans-unit id="4953117cca7e33df31955c24738168de010b1a14" translate="yes" xml:space="preserve">
          <source>As long as the stack frame backchain is not used, code generated with</source>
          <target state="translated">Mientras no se utilice la cadena de retroceso del marco de la pila,el código generado con</target>
        </trans-unit>
        <trans-unit id="55612a0f57841c9314e7eae808cb715df500b680" translate="yes" xml:space="preserve">
          <source>As mentioned above, the new exceptions do not support handling types other than Objective-C objects. Furthermore, when used from Objective-C++, the Objective-C exception model does not interoperate with C++ exceptions at this time. This means you cannot &lt;code&gt;@throw&lt;/code&gt; an exception from Objective-C and &lt;code&gt;catch&lt;/code&gt; it in C++, or vice versa (i.e., &lt;code&gt;throw &amp;hellip; @catch&lt;/code&gt;).</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, las nuevas excepciones no admiten tipos de manejo distintos de los objetos Objective-C. Adem&amp;aacute;s, cuando se usa desde Objective-C ++, el modelo de excepci&amp;oacute;n de Objective-C no interopera con las excepciones de C ++ en este momento. Esto significa que no puede &lt;code&gt;@throw&lt;/code&gt; una excepci&amp;oacute;n de Objective-C y &lt;code&gt;catch&lt;/code&gt; en C ++, o viceversa (es decir, &lt;code&gt;throw &amp;hellip; @catch&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="294a250033394e9398ee357e8a3028f8f81f0fc0" translate="yes" xml:space="preserve">
          <source>As new Intel processors are deployed in the marketplace, the behavior of this option will change. Therefore, if you upgrade to a newer version of GCC, code generation controlled by this option will change to reflect the most current Intel processors at the time that version of GCC is released.</source>
          <target state="translated">A medida que nuevos procesadores de Intel se despliegan en el mercado,el comportamiento de esta opción cambiará.Por lo tanto,si actualiza a una versión más reciente de GCC,la generación de código controlada por esta opción cambiará para reflejar los procesadores Intel más actuales en el momento en que se publique esa versión de GCC.</target>
        </trans-unit>
        <trans-unit id="071c1df1bb91e5145c672769a3ad43fada5e0f32" translate="yes" xml:space="preserve">
          <source>As new processors are deployed in the marketplace, the behavior of this option will change. Therefore, if you upgrade to a newer version of GCC, code generation controlled by this option will change to reflect the processors that are most common at the time that version of GCC is released.</source>
          <target state="translated">A medida que se desplieguen nuevos procesadores en el mercado,el comportamiento de esta opción cambiará.Por lo tanto,si se actualiza a una versión más reciente de GCC,la generación de código controlada por esta opción cambiará para reflejar los procesadores más comunes en el momento en que se libere esa versión de GCC.</target>
        </trans-unit>
        <trans-unit id="3744f46b0905194e3e22c08ee725283caaeed6c9" translate="yes" xml:space="preserve">
          <source>As of the GCC 4.7.1 release, GCC supports the Go 1 language standard, described at &lt;a href=&quot;https://golang.org/doc/go1&quot;&gt;https://golang.org/doc/go1&lt;/a&gt;.</source>
          <target state="translated">A partir de la versi&amp;oacute;n 4.7.1 de GCC, GCC admite el est&amp;aacute;ndar de idioma Go 1, que se describe en &lt;a href=&quot;https://golang.org/doc/go1&quot;&gt;https://golang.org/doc/go1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e64c1bee27f99a750cc73752558d5aa035a91d3b" translate="yes" xml:space="preserve">
          <source>As of this writing, only the NeXT runtime on Mac OS X 10.4 and later has support for invoking the &lt;code&gt;- (id) .cxx_construct&lt;/code&gt; and &lt;code&gt;- (void) .cxx_destruct&lt;/code&gt; methods.</source>
          <target state="translated">En el momento de escribir este art&amp;iacute;culo, solo el tiempo de ejecuci&amp;oacute;n de NeXT en Mac OS X 10.4 y posterior tiene soporte para invocar los m&amp;eacute;todos &lt;code&gt;- (id) .cxx_construct&lt;/code&gt; y &lt;code&gt;- (void) .cxx_destruct&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="190838497fcc16bfeb19ed9bf8cb7b33b5859658" translate="yes" xml:space="preserve">
          <source>As of this writing, there are no SPARC implementations that have hardware support for the quad-word floating-point instructions. They all invoke a trap handler for one of these instructions, and then the trap handler emulates the effect of the instruction. Because of the trap handler overhead, this is much slower than calling the ABI library routines. Thus the</source>
          <target state="translated">En el momento de escribir esto,no hay implementaciones de SPARC que tengan soporte de hardware para las instrucciones de punto flotante de cuatro palabras.Todas invocan un manejador de trampas para una de estas instrucciones,y luego el manejador de trampas emula el efecto de la instrucción.Debido a la sobrecarga del manejador de trampas,esto es mucho más lento que llamar a las rutinas de la biblioteca ABI.Por lo tanto,el</target>
        </trans-unit>
        <trans-unit id="ea115f65d5a89a6a0ce102bba12e75c8b98c940e" translate="yes" xml:space="preserve">
          <source>As part of the Security Extensions GCC implements the intrinsics below. FPTR is used here to mean any function pointer type.</source>
          <target state="translated">Como parte de las Extensiones de Seguridad,el GCC implementa lo intrínseco a continuación.FPTR se utiliza aquí para referirse a cualquier tipo de puntero de función.</target>
        </trans-unit>
        <trans-unit id="44e4fff7ccbcdce5ca766f79d5a621ec9dbe0d23" translate="yes" xml:space="preserve">
          <source>As part of the Security Extensions GCC implements two new function attributes: &lt;code&gt;cmse_nonsecure_entry&lt;/code&gt; and &lt;code&gt;cmse_nonsecure_call&lt;/code&gt;.</source>
          <target state="translated">Como parte de las extensiones de seguridad, GCC implementa dos nuevos atributos de funci&amp;oacute;n: &lt;code&gt;cmse_nonsecure_entry&lt;/code&gt; y &lt;code&gt;cmse_nonsecure_call&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7eaf9c2848babad871d614fdc58e037312c5b34b" translate="yes" xml:space="preserve">
          <source>As per</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bdd745d898a259ccaad1e7c0edf927d13bbb62" translate="yes" xml:space="preserve">
          <source>As per the previous level, but also show events for the entry to each function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c247ef3385f14a80d57ef00798ecd37f7339e8" translate="yes" xml:space="preserve">
          <source>As per the previous level, but also show events relating to control flow that are significant to triggering the issue (e.g. &amp;ldquo;true path taken&amp;rdquo; at a conditional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efe9a9ef3b6fb5fc179ca740391f6374be999fe" translate="yes" xml:space="preserve">
          <source>As per the previous level, but show all control flow events, not just significant ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6f3f1d276c90c5e06c8b6bf28158a5a889bccd" translate="yes" xml:space="preserve">
          <source>As permitted by ISO C11 and for compatibility with other compilers, GCC allows you to define a structure or union that contains, as fields, structures and unions without names. For example:</source>
          <target state="translated">Según lo permitido por la norma ISO C11 y para la compatibilidad con otros compiladores,GCC permite definir una estructura o unión que contiene,como campos,estructuras y uniones sin nombres.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="cd38e2252e3cfbc1562a66af3fc83a7b3476b926" translate="yes" xml:space="preserve">
          <source>As required by ISO C++, GCC considers member functions defined within the body of a class to be marked inline even if they are not explicitly declared with the &lt;code&gt;inline&lt;/code&gt; keyword. You can override this with</source>
          <target state="translated">Como lo requiere ISO C ++, GCC considera que las funciones miembro definidas dentro del cuerpo de una clase se marcan en l&amp;iacute;nea incluso si no se declaran expl&amp;iacute;citamente con la palabra clave en &lt;code&gt;inline&lt;/code&gt; . Puede anular esto con</target>
        </trans-unit>
        <trans-unit id="ee86d176185420b2cd516cd28e0d2c038499f36a" translate="yes" xml:space="preserve">
          <source>As with all outermost parameter qualifiers, &lt;code&gt;__restrict__&lt;/code&gt; is ignored in function definition matching. This means you only need to specify &lt;code&gt;__restrict__&lt;/code&gt; in a function definition, rather than in a function prototype as well.</source>
          <target state="translated">Al igual que con todos los calificadores de par&amp;aacute;metros m&amp;aacute;s externos, &lt;code&gt;__restrict__&lt;/code&gt; se ignora en la coincidencia de definiciones de funciones. Esto significa que solo necesita especificar &lt;code&gt;__restrict__&lt;/code&gt; en una definici&amp;oacute;n de funci&amp;oacute;n, en lugar de tambi&amp;eacute;n en un prototipo de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ba3fbd93824241c0022727ea0aaa70098dbf8058" translate="yes" xml:space="preserve">
          <source>As with global register variables, it is recommended that you choose a register that is normally saved and restored by function calls on your machine, so that calls to library routines will not clobber it.</source>
          <target state="translated">Al igual que con las variables de registro global,se recomienda elegir un registro que normalmente se guarda y se restaura mediante llamadas a funciones de la máquina,de modo que las llamadas a las rutinas de la biblioteca no lo estropeen.</target>
        </trans-unit>
        <trans-unit id="9d9e595b377650b7d530b408f01a2295e9aa3eb5" translate="yes" xml:space="preserve">
          <source>As with the C front end, G++ understands the C99 feature of restricted pointers, specified with the &lt;code&gt;__restrict__&lt;/code&gt;, or &lt;code&gt;__restrict&lt;/code&gt; type qualifier. Because you cannot compile C++ by specifying the</source>
          <target state="translated">Como con el extremo C frente, G ++ entiende la caracter&amp;iacute;stica de C99 de punteros restringidas, especificada con el &lt;code&gt;__restrict__&lt;/code&gt; , o &lt;code&gt;__restrict&lt;/code&gt; tipo calificador. Debido a que no puede compilar C ++ especificando el</target>
        </trans-unit>
        <trans-unit id="21e7da79fc603087dc1baeac067752aa75dc3fe9" translate="yes" xml:space="preserve">
          <source>Assembler Options</source>
          <target state="translated">Opciones del ensamblador</target>
        </trans-unit>
        <trans-unit id="bcf5f12f4332ce70ca2c9b5133dda1d57f7cdf19" translate="yes" xml:space="preserve">
          <source>Assembler code that must be preprocessed.</source>
          <target state="translated">Código de ensamblador que debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="f9cab59729ce9a72e9592405aff1f8fcf01f46db" translate="yes" xml:space="preserve">
          <source>Assembler code.</source>
          <target state="translated">Ensamblar el código.</target>
        </trans-unit>
        <trans-unit id="32b8b4178e9d441788dbf96199839a839961313d" translate="yes" xml:space="preserve">
          <source>Assembler names for data:</source>
          <target state="translated">Nombres de los ensambladores para los datos:</target>
        </trans-unit>
        <trans-unit id="a60468da111a0ab238610d89ab550d7cb3db7634" translate="yes" xml:space="preserve">
          <source>Assembler names for functions:</source>
          <target state="translated">Nombres de los ensambladores para las funciones:</target>
        </trans-unit>
        <trans-unit id="c09492c8b5916e81a92681e73286dd4d053d0d64" translate="yes" xml:space="preserve">
          <source>Assembly output</source>
          <target state="translated">Resultado del montaje</target>
        </trans-unit>
        <trans-unit id="c20d25392b6fcd428956d9fadf904cf6f25c34c2" translate="yes" xml:space="preserve">
          <source>Assert that compilation targets a freestanding environment. This implies</source>
          <target state="translated">Afirmar que la compilación se dirige a un entorno independiente.Esto implica</target>
        </trans-unit>
        <trans-unit id="d5b5344f90d89057b5b4c1d64f39bf480cc87ed4" translate="yes" xml:space="preserve">
          <source>Assert that compilation targets a hosted environment. This implies</source>
          <target state="translated">Afirmar que la compilación se dirige a un entorno de acogida.Esto implica</target>
        </trans-unit>
        <trans-unit id="3d6a91afbb703874ed1adcc1fc07fbc355255566" translate="yes" xml:space="preserve">
          <source>Assignments are also expressions and have an rvalue. However when assigning to a scalar volatile, the volatile object is not reread, regardless of whether the assignment expression&amp;rsquo;s rvalue is used or not. If the assignment&amp;rsquo;s rvalue is used, the value is that assigned to the volatile object. For instance, there is no read of &lt;var&gt;vobj&lt;/var&gt; in all the following cases:</source>
          <target state="translated">Las asignaciones tambi&amp;eacute;n son expresiones y tienen un valor r. Sin embargo, cuando se asigna a un vol&amp;aacute;til escalar, el objeto vol&amp;aacute;til no se vuelve a leer, independientemente de si se usa o no el valor r de la expresi&amp;oacute;n de asignaci&amp;oacute;n. Si se usa el rvalue de la asignaci&amp;oacute;n, el valor es el asignado al objeto vol&amp;aacute;til. Por ejemplo, no hay lectura de &lt;var&gt;vobj&lt;/var&gt; en los siguientes casos:</target>
        </trans-unit>
        <trans-unit id="0c40f851ca2e4b0159b069f87df3cdf0c325569f" translate="yes" xml:space="preserve">
          <source>Assume (do not assume) that all symbols have 32-bit values, regardless of the selected ABI. This option is useful in combination with</source>
          <target state="translated">Asuma (no asuma)que todos los símbolos tienen valores de 32 bits,independientemente del ABI seleccionado.Esta opción es útil en combinación con</target>
        </trans-unit>
        <trans-unit id="29f90ada4a3fec867ca24dbc5026596c24d16fc4" translate="yes" xml:space="preserve">
          <source>Assume (do not assume) that externally-defined data is in a small data section if the size of that data is within the</source>
          <target state="translated">Suponga (no suponga)que los datos definidos externamente se encuentran en una pequeña sección de datos si el tamaño de esos datos está dentro de la</target>
        </trans-unit>
        <trans-unit id="2cfe16d43985ee39e482829ca4a8dfdcb2d636f4" translate="yes" xml:space="preserve">
          <source>Assume (do not assume) that the reciprocal estimate instructions provide higher-precision estimates than is mandated by the PowerPC ABI.</source>
          <target state="translated">Suponga (no suponga)que las instrucciones de estimación recíproca proporcionan estimaciones de mayor precisión que las exigidas por el ABI del PowerPC.</target>
        </trans-unit>
        <trans-unit id="ec6f2df5d90d0e07067a08f77629a109a7baeb7c" translate="yes" xml:space="preserve">
          <source>Assume (do not assume) that the reciprocal estimate instructions provide higher-precision estimates than is mandated by the PowerPC ABI. Selecting</source>
          <target state="translated">Suponga (no suponga)que las instrucciones de estimación recíproca proporcionan estimaciones de mayor precisión que las exigidas por el ABI del PowerPC.Seleccionando</target>
        </trans-unit>
        <trans-unit id="813b5f0f913426f167f43f6e9f2605b43322e0d6" translate="yes" xml:space="preserve">
          <source>Assume (do not assume) that the static and dynamic linkers support PLTs and copy relocations. This option only affects</source>
          <target state="translated">Asuma (no asuma)que los enlazadores estáticos y dinámicos soportan PLTs y reubicaciones de copias.Esta opción sólo afecta a</target>
        </trans-unit>
        <trans-unit id="6218242555601cfde6dcb1f0fb4410c65b0c0afe" translate="yes" xml:space="preserve">
          <source>Assume (do not assume) that zero displacement conditional branch instructions &lt;code&gt;bt&lt;/code&gt; and &lt;code&gt;bf&lt;/code&gt; are fast. If</source>
          <target state="translated">Suponga (no asuma) que las instrucciones de bifurcaci&amp;oacute;n condicional de desplazamiento cero &lt;code&gt;bt&lt;/code&gt; y &lt;code&gt;bf&lt;/code&gt; son r&amp;aacute;pidas. Si</target>
        </trans-unit>
        <trans-unit id="4d87b438e6a49fee40ee2b8e75d048b2cb33a8d4" translate="yes" xml:space="preserve">
          <source>Assume &lt;code&gt;int&lt;/code&gt; to be 8-bit integer. This affects the sizes of all types: a &lt;code&gt;char&lt;/code&gt; is 1 byte, an &lt;code&gt;int&lt;/code&gt; is 1 byte, a &lt;code&gt;long&lt;/code&gt; is 2 bytes, and &lt;code&gt;long long&lt;/code&gt; is 4 bytes. Please note that this option does not conform to the C standards, but it results in smaller code size.</source>
          <target state="translated">Suponga que &lt;code&gt;int&lt;/code&gt; es un entero de 8 bits. Esto afecta los tama&amp;ntilde;os de todos los tipos: un &lt;code&gt;char&lt;/code&gt; es de 1 byte, un &lt;code&gt;int&lt;/code&gt; es de 1 byte, un &lt;code&gt;long&lt;/code&gt; es de 2 bytes y un &lt;code&gt;long long&lt;/code&gt; es de 4 bytes. Tenga en cuenta que esta opci&amp;oacute;n no se ajusta a los est&amp;aacute;ndares C, pero da como resultado un tama&amp;ntilde;o de c&amp;oacute;digo m&amp;aacute;s peque&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="5c2bc85ec675432aace4d6922b50129cffa86b60" translate="yes" xml:space="preserve">
          <source>Assume &lt;var&gt;num&lt;/var&gt; to be the cost for a branch instruction. Higher numbers make the compiler try to generate more branch-free code if possible. If not specified the value is selected depending on the processor type that is being compiled for.</source>
          <target state="translated">Suponga que &lt;var&gt;num&lt;/var&gt; es el costo de una instrucci&amp;oacute;n de bifurcaci&amp;oacute;n. Los n&amp;uacute;meros m&amp;aacute;s altos hacen que el compilador intente generar m&amp;aacute;s c&amp;oacute;digo sin ramificaciones si es posible. Si no se especifica, el valor se selecciona seg&amp;uacute;n el tipo de procesador para el que se compila.</target>
        </trans-unit>
        <trans-unit id="a18b03a98d3895d8de33097ebfdc73e386381f27" translate="yes" xml:space="preserve">
          <source>Assume a large TLS segment when generating thread-local code.</source>
          <target state="translated">Asumir un gran segmento TLS al generar el código local del hilo.</target>
        </trans-unit>
        <trans-unit id="dcc9240dada623776592057c6e5b8a92da4c9b4e" translate="yes" xml:space="preserve">
          <source>Assume addresses can be loaded as 16-bit unsigned values. This does not apply to function addresses for which</source>
          <target state="translated">Supongamos que las direcciones pueden ser cargadas como valores de 16 bits sin signo.Esto no se aplica a las direcciones de funciones para las cuales</target>
        </trans-unit>
        <trans-unit id="fb31614e67999bd6734c6361178e2cdabb52e555" translate="yes" xml:space="preserve">
          <source>Assume all objects live in the lower 16MB of memory (so that their addresses can be loaded with the &lt;code&gt;ld24&lt;/code&gt; instruction), and assume all subroutines are reachable with the &lt;code&gt;bl&lt;/code&gt; instruction. This is the default.</source>
          <target state="translated">Suponga que todos los objetos viven en los 16 MB inferiores de memoria (para que sus direcciones se puedan cargar con la instrucci&amp;oacute;n &lt;code&gt;ld24&lt;/code&gt; ) y suponga que todas las subrutinas son accesibles con la instrucci&amp;oacute;n &lt;code&gt;bl&lt;/code&gt; . Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="c507ae5c9607f036356273bef8470c3d07a51113" translate="yes" xml:space="preserve">
          <source>Assume inline assembler is using unified asm syntax. The default is currently off which implies divided syntax. This option has no impact on Thumb2. However, this may change in future releases of GCC. Divided syntax should be considered deprecated.</source>
          <target state="translated">Supongamos que el ensamblador en línea está usando sintaxis asm unificada.El valor por defecto es actualmente apagado,lo que implica una sintaxis dividida.Esta opción no tiene impacto en Pulgarcito2.Sin embargo,esto puede cambiar en futuras versiones de GCC.La sintaxis dividida debe considerarse obsoleta.</target>
        </trans-unit>
        <trans-unit id="db05f7ded93295035bf91b215647f3c25bb15bd8" translate="yes" xml:space="preserve">
          <source>Assume loading data from flash is slower than fetching instruction. Therefore literal load is minimized for better performance. This option is only supported when compiling for ARMv7 M-profile and off by default. It conflicts with</source>
          <target state="translated">Supongamos que la carga de los datos del flash es más lenta que la de las instrucciones.Por lo tanto,la carga literal se minimiza para un mejor rendimiento.Esta opción sólo se admite cuando se compila para el perfil M de ARMv7 y está desactivada de forma predeterminada.Entra en conflicto con</target>
        </trans-unit>
        <trans-unit id="d4a16bcb883f109ce15025d3902db389e542f4a1" translate="yes" xml:space="preserve">
          <source>Assume objects may be anywhere in the 32-bit address space (the compiler generates &lt;code&gt;seth/add3&lt;/code&gt; instructions to load their addresses), and assume all subroutines are reachable with the &lt;code&gt;bl&lt;/code&gt; instruction.</source>
          <target state="translated">Suponga que los objetos pueden estar en cualquier lugar del espacio de direcciones de 32 bits (el compilador genera instrucciones &lt;code&gt;seth/add3&lt;/code&gt; para cargar sus direcciones) y asuma que todas las subrutinas son accesibles con la instrucci&amp;oacute;n &lt;code&gt;bl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d339dd7aa4708a54eb51d13312b9c328ad3f5e5" translate="yes" xml:space="preserve">
          <source>Assume objects may be anywhere in the 32-bit address space (the compiler generates &lt;code&gt;seth/add3&lt;/code&gt; instructions to load their addresses), and assume subroutines may not be reachable with the &lt;code&gt;bl&lt;/code&gt; instruction (the compiler generates the much slower &lt;code&gt;seth/add3/jl&lt;/code&gt; instruction sequence).</source>
          <target state="translated">Suponga que los objetos pueden estar en cualquier lugar del espacio de direcciones de 32 bits (el compilador genera instrucciones &lt;code&gt;seth/add3&lt;/code&gt; para cargar sus direcciones), y asuma que las subrutinas pueden no ser accesibles con la instrucci&amp;oacute;n &lt;code&gt;bl&lt;/code&gt; (el compilador genera la instrucci&amp;oacute;n &lt;code&gt;seth/add3/jl&lt;/code&gt; mucho m&amp;aacute;s lenta secuencia).</target>
        </trans-unit>
        <trans-unit id="c85e043c6d4b72a1f02e91090d703114e74e4f8f" translate="yes" xml:space="preserve">
          <source>Assume that &lt;code&gt;RJMP&lt;/code&gt; and &lt;code&gt;RCALL&lt;/code&gt; can target the whole program memory.</source>
          <target state="translated">Suponga que &lt;code&gt;RJMP&lt;/code&gt; y &lt;code&gt;RCALL&lt;/code&gt; pueden apuntar a toda la memoria del programa.</target>
        </trans-unit>
        <trans-unit id="33caf9125270759b9ef9dbfd91c8e100e633839c" translate="yes" xml:space="preserve">
          <source>Assume that ICPLBs are enabled at run time. This has an effect on certain anomaly workarounds. For Linux targets, the default is to assume ICPLBs are enabled; for standalone applications the default is off.</source>
          <target state="translated">Supongamos que los ICPLB están activados en tiempo de ejecución.Esto tiene un efecto sobre ciertas anomalías.Para los objetivos de Linux,el valor por defecto es asumir que los ICPLBs están activados;para las aplicaciones autónomas el valor por defecto es off.</target>
        </trans-unit>
        <trans-unit id="b5ac123daea99f10bd295c162e2bdc33dbbb4983" translate="yes" xml:space="preserve">
          <source>Assume that a loop with an exit will eventually take the exit and not loop indefinitely. This allows the compiler to remove loops that otherwise have no side-effects, not considering eventual endless looping as such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed72c79186a186d46e787e25dd72b1da5c105ed8" translate="yes" xml:space="preserve">
          <source>Assume that all Objective-C message dispatches (&lt;code&gt;[receiver
message:arg]&lt;/code&gt;) in this translation unit ensure that the receiver is not &lt;code&gt;nil&lt;/code&gt;. This allows for more efficient entry points in the runtime to be used. This option is only available in conjunction with the NeXT runtime and ABI version 0 or 1.</source>
          <target state="translated">Suponga que todos los env&amp;iacute;os de mensajes de Objective-C ( &lt;code&gt;[receiver message:arg]&lt;/code&gt; ) en esta unidad de traducci&amp;oacute;n aseguran que el receptor no sea &lt;code&gt;nil&lt;/code&gt; . Esto permite utilizar puntos de entrada m&amp;aacute;s eficientes en el tiempo de ejecuci&amp;oacute;n. Esta opci&amp;oacute;n solo est&amp;aacute; disponible junto con el tiempo de ejecuci&amp;oacute;n NeXT y la versi&amp;oacute;n 0 o 1 de ABI.</target>
        </trans-unit>
        <trans-unit id="866258482a2aa9fcb54dee6ab333e2e33fa56a9f" translate="yes" xml:space="preserve">
          <source>Assume that all data in static storage can be accessed by LDS / STS instructions. This option has only an effect on reduced Tiny devices like ATtiny40. See also the &lt;code&gt;absdata&lt;/code&gt;&lt;a href=&quot;variable-attributes#AVR-Variable-Attributes&quot;&gt;variable attribute&lt;/a&gt;.</source>
          <target state="translated">Suponga que se puede acceder a todos los datos del almacenamiento est&amp;aacute;tico mediante instrucciones LDS / STS. Esta opci&amp;oacute;n solo tiene efecto en dispositivos Tiny reducidos como ATtiny40. Consulte tambi&amp;eacute;n el &lt;code&gt;absdata&lt;/code&gt; &lt;a href=&quot;variable-attributes#AVR-Variable-Attributes&quot;&gt;variable &lt;/a&gt;absdata .</target>
        </trans-unit>
        <trans-unit id="9ef3d0ef83e6f997acb69f32efa34ce5f18bfd5d" translate="yes" xml:space="preserve">
          <source>Assume that doubles have 8-byte alignment. This is the default.</source>
          <target state="translated">Supongamos que los dobles tienen una alineación de 8 bytes.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="856f36f37f5770dafc37ec4f5ce9ae4ba43b9ab0" translate="yes" xml:space="preserve">
          <source>Assume that floating-point registers are 32 bits wide.</source>
          <target state="translated">Supongamos que los registros de punto flotante tienen 32 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="89754b304532c00897fca86b5c5a4a2fdb8ea856" translate="yes" xml:space="preserve">
          <source>Assume that floating-point registers are 64 bits wide.</source>
          <target state="translated">Supongamos que los registros de punto flotante tienen 64 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="6c5971ed7912aa4bcfc190d25dcfc54913916046" translate="yes" xml:space="preserve">
          <source>Assume that floating-point stores and loads are not likely to cause a conflict when placed into the same instruction group. This option is disabled by default.</source>
          <target state="translated">Supongamos que las tiendas y cargas de punto flotante no es probable que causen un conflicto cuando se colocan en el mismo grupo de instrucción.Esta opción está desactivada por defecto.</target>
        </trans-unit>
        <trans-unit id="79ddd95e70fe2bc8d68e335f2358d8d016cca43e" translate="yes" xml:space="preserve">
          <source>Assume that general-purpose registers are 32 bits wide.</source>
          <target state="translated">Supongamos que los registros de uso general tienen 32 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="67b1eea988cecf507f4140115cf0f3a04a0b6bc0" translate="yes" xml:space="preserve">
          <source>Assume that general-purpose registers are 64 bits wide.</source>
          <target state="translated">Supongamos que los registros de uso general tienen 64 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="d05b8de7cb58ad911a3c660af041154da0f70378" translate="yes" xml:space="preserve">
          <source>Assume that programs cannot safely dereference null pointers, and that no code or data element resides at address zero. This option enables simple constant folding optimizations at all optimization levels. In addition, other optimization passes in GCC use this flag to control global dataflow analyses that eliminate useless checks for null pointers; these assume that a memory access to address zero always results in a trap, so that if a pointer is checked after it has already been dereferenced, it cannot be null.</source>
          <target state="translated">Supongamos que los programas no pueden derivar con seguridad los punteros nulos,y que ningún código o elemento de datos reside en la dirección cero.Esta opción permite optimizaciones simples y constantes de plegado en todos los niveles de optimización.Además,otras pasadas de optimización en GCC utilizan esta bandera para controlar los análisis de flujo de datos globales que eliminan las comprobaciones inútiles de los punteros nulos;éstos asumen que un acceso de memoria a la dirección cero siempre resulta en una trampa,de modo que si un puntero se comprueba después de que ya se haya desreferenciado,no puede ser nulo.</target>
        </trans-unit>
        <trans-unit id="076633874f4c1995b07023b5b94aab209c515c86" translate="yes" xml:space="preserve">
          <source>Assume that runtime support has been provided and so omit the simulator library (</source>
          <target state="translated">Supongamos que se ha proporcionado soporte de tiempo de ejecución y omitamos la biblioteca del simulador (</target>
        </trans-unit>
        <trans-unit id="42823e20bce5001093b19d4ebc090a1f52fb87fe" translate="yes" xml:space="preserve">
          <source>Assume that runtime support has been provided and so there is no need to include the simulator library (</source>
          <target state="translated">Supongamos que se ha proporcionado soporte de tiempo de ejecución y,por lo tanto,no es necesario incluir la biblioteca del simulador (</target>
        </trans-unit>
        <trans-unit id="0d530f525409fd98b58f0bb247b2945e9f43679e" translate="yes" xml:space="preserve">
          <source>Assume that the current compilation unit represents the whole program being compiled. All public functions and variables with the exception of &lt;code&gt;main&lt;/code&gt; and those merged by attribute &lt;code&gt;externally_visible&lt;/code&gt; become static functions and in effect are optimized more aggressively by interprocedural optimizers.</source>
          <target state="translated">Suponga que la unidad de compilaci&amp;oacute;n actual representa el programa completo que se est&amp;aacute; compilando. Todas las funciones y variables p&amp;uacute;blicas con la excepci&amp;oacute;n de &lt;code&gt;main&lt;/code&gt; y aquellas fusionadas por atributo &lt;code&gt;externally_visible&lt;/code&gt; se convierten en funciones est&amp;aacute;ticas y, en efecto, se optimizan de manera m&amp;aacute;s agresiva mediante optimizadores interprocedimientos.</target>
        </trans-unit>
        <trans-unit id="d4cfc093a537b06194880f65fa701bc5be05c19f" translate="yes" xml:space="preserve">
          <source>Assume that the device supports the Read-Modify-Write instructions &lt;code&gt;XCH&lt;/code&gt;, &lt;code&gt;LAC&lt;/code&gt;, &lt;code&gt;LAS&lt;/code&gt; and &lt;code&gt;LAT&lt;/code&gt;.</source>
          <target state="translated">Suponga que el dispositivo es compatible con las instrucciones de lectura-modificaci&amp;oacute;n-escritura &lt;code&gt;XCH&lt;/code&gt; , &lt;code&gt;LAC&lt;/code&gt; , &lt;code&gt;LAS&lt;/code&gt; y &lt;code&gt;LAT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="766547e453a1be99c1e3faccd183445d895ac153" translate="yes" xml:space="preserve">
          <source>Assume that the displacement between the text and data segments is fixed at static link time. This allows data to be referenced by offset from start of text address instead of GOT since PC-relative addressing is not supported.</source>
          <target state="translated">Supongamos que el desplazamiento entre los segmentos de texto y datos está fijado en el tiempo de enlace estático.Esto permite que los datos sean referenciados por desplazamiento desde el inicio de la dirección del texto en lugar de GOT,ya que no se admite el direccionamiento relacionado con el PC.</target>
        </trans-unit>
        <trans-unit id="ebfb14654d3ce6ee7fc14d89650e1df706d43a0e" translate="yes" xml:space="preserve">
          <source>Assume that the displacement between the text and data segments is fixed at static link time. This permits using PC-relative addressing operations to access data known to be in the data segment. For non-VxWorks RTP targets, this option is enabled by default. When disabled on such targets, it will enable</source>
          <target state="translated">Supongamos que el desplazamiento entre los segmentos de texto y datos está fijado en el tiempo de enlace estático.Esto permite utilizar operaciones de direccionamiento relacionadas con el PC para acceder a los datos que se sabe que están en el segmento de datos.Para los objetivos RTP que no son de VxWorks,esta opción está activada por defecto.Cuando se desactiva en esos objetivos,se habilitará</target>
        </trans-unit>
        <trans-unit id="38bffa713c2a7cd96b200f3894b2b7a3ab419ebb" translate="yes" xml:space="preserve">
          <source>Assume that the flash memory has a size of &lt;var&gt;num&lt;/var&gt; times 64 KiB.</source>
          <target state="translated">Supongamos que la memoria flash tiene un tama&amp;ntilde;o de &lt;var&gt;num&lt;/var&gt; Tiempos 64 KiB.</target>
        </trans-unit>
        <trans-unit id="0381000794bbd2c3b341dcaa9dd877537e5d82e9" translate="yes" xml:space="preserve">
          <source>Assume that the floating-point coprocessor only supports single-precision operations.</source>
          <target state="translated">Supongamos que el coprocesador de punto flotante sólo admite operaciones de una sola precisión.</target>
        </trans-unit>
        <trans-unit id="da28820fdda9574eb1ba106e15f86ccdafa0352f" translate="yes" xml:space="preserve">
          <source>Assume that the floating-point coprocessor supports double-precision operations. This is the default.</source>
          <target state="translated">Supongamos que el coprocesador de punto flotante soporta operaciones de doble precisión.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="fdfa0bfee5480efa2b5e12152c0e653e6cc25473" translate="yes" xml:space="preserve">
          <source>Assume that the handler uses a shadow register set, instead of the main general-purpose registers. An optional argument &lt;code&gt;intstack&lt;/code&gt; is supported to indicate that the shadow register set contains a valid stack pointer.</source>
          <target state="translated">Suponga que el manejador usa un conjunto de registros sombra, en lugar de los registros principales de prop&amp;oacute;sito general. Se &lt;code&gt;intstack&lt;/code&gt; argumento opcional intstack para indicar que el conjunto de registros de sombra contiene un puntero de pila v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="cb05f1c18ebd5a07940293ac38328ed8480807dc" translate="yes" xml:space="preserve">
          <source>Assume that the program is arbitrarily large. This is the default.</source>
          <target state="translated">Supongamos que el programa es arbitrariamente grande.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="bea8e60014028d1c1e2350ea91c13bef18cfe395" translate="yes" xml:space="preserve">
          <source>Assume the incoming stack is aligned to a 2 raised to &lt;var&gt;num&lt;/var&gt; byte boundary. If</source>
          <target state="translated">Suponga que la pila entrante est&amp;aacute; alineada con un l&amp;iacute;mite de 2 elevado a &lt;var&gt;num&lt;/var&gt; bytes. Si</target>
        </trans-unit>
        <trans-unit id="2b0c018c4bbeac1a835b6bc4f97980f45c5201f9" translate="yes" xml:space="preserve">
          <source>At level &lt;var&gt;2&lt;/var&gt;, the call in the example above is again diagnosed, but this time because with &lt;var&gt;a&lt;/var&gt; equal to a 32-bit &lt;code&gt;INT_MIN&lt;/code&gt; the first &lt;code&gt;%i&lt;/code&gt; directive will write some of its digits beyond the end of the destination buffer. To make the call safe regardless of the values of the two variables, the size of the destination buffer must be increased to at least 34 bytes. GCC includes the minimum size of the buffer in an informational note following the warning.</source>
          <target state="translated">En el nivel &lt;var&gt;2&lt;/var&gt; , la llamada en el ejemplo anterior se diagnostica nuevamente, pero esta vez porque con &lt;var&gt;a&lt;/var&gt; &lt;code&gt;INT_MIN&lt;/code&gt; de 32 bits igual, la primera directiva &lt;code&gt;%i&lt;/code&gt; escribir&amp;aacute; algunos de sus d&amp;iacute;gitos m&amp;aacute;s all&amp;aacute; del final del b&amp;uacute;fer de destino. Para que la llamada sea segura independientemente de los valores de las dos variables, el tama&amp;ntilde;o del b&amp;uacute;fer de destino debe aumentarse a al menos 34 bytes. GCC incluye el tama&amp;ntilde;o m&amp;iacute;nimo del b&amp;uacute;fer en una nota informativa que sigue a la advertencia.</target>
        </trans-unit>
        <trans-unit id="3ddf0f631ce882bb84e3fb93f118fee7f5a7f5f9" translate="yes" xml:space="preserve">
          <source>At present, GCC only provides support for operations on 32-bit vectors. The vector type associated with 8-bit integer data is usually called &lt;code&gt;v4i8&lt;/code&gt;, the vector type associated with Q7 is usually called &lt;code&gt;v4q7&lt;/code&gt;, the vector type associated with 16-bit integer data is usually called &lt;code&gt;v2i16&lt;/code&gt;, and the vector type associated with Q15 is usually called &lt;code&gt;v2q15&lt;/code&gt;. They can be defined in C as follows:</source>
          <target state="translated">En la actualidad, GCC solo proporciona soporte para operaciones en vectores de 32 bits. El tipo de vector asociado con datos enteros de 8 bits generalmente se llama &lt;code&gt;v4i8&lt;/code&gt; , el tipo de vector asociado con Q7 generalmente se llama &lt;code&gt;v4q7&lt;/code&gt; , el tipo de vector asociado con datos enteros de 16 bits generalmente se llama &lt;code&gt;v2i16&lt;/code&gt; y el tipo de vector asociado con Q15 generalmente es llamado &lt;code&gt;v2q15&lt;/code&gt; . Se pueden definir en C de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="7562b8145986b9d15bbe747f7453ec31fbcb23e3" translate="yes" xml:space="preserve">
          <source>At present, a declaration to which &lt;code&gt;weakref&lt;/code&gt; is attached can only be &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="translated">En la actualidad, una declaraci&amp;oacute;n a la que se adjunta &lt;code&gt;weakref&lt;/code&gt; solo puede ser &lt;code&gt;static&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4135487f1e326a7c07cb63519ab457040bcc6fd" translate="yes" xml:space="preserve">
          <source>At present, the first parameter in a function prototype must have some type specifier that is not an attribute specifier; this resolves an ambiguity in the interpretation of &lt;code&gt;void f(int
(__attribute__((foo)) x))&lt;/code&gt;, but is subject to change. At present, if the parentheses of a function declarator contain only attributes then those attributes are ignored, rather than yielding an error or warning or implying a single parameter of type int, but this is subject to change.</source>
          <target state="translated">Actualmente, el primer par&amp;aacute;metro en un prototipo de funci&amp;oacute;n debe tener alg&amp;uacute;n especificador de tipo que no sea un especificador de atributo; esto resuelve una ambig&amp;uuml;edad en la interpretaci&amp;oacute;n de &lt;code&gt;void f(int (__attribute__((foo)) x))&lt;/code&gt; , pero est&amp;aacute; sujeto a cambios. En la actualidad, si los par&amp;eacute;ntesis de un declarador de funci&amp;oacute;n contienen solo atributos, entonces esos atributos se ignoran, en lugar de producir un error o advertencia o implicar un solo par&amp;aacute;metro de tipo int, pero esto est&amp;aacute; sujeto a cambios.</target>
        </trans-unit>
        <trans-unit id="aba1eab05ac64c3b09192d2f6e850b4049723108" translate="yes" xml:space="preserve">
          <source>At the user level, the extension is visible with a new storage class keyword: &lt;code&gt;__thread&lt;/code&gt;. For example:</source>
          <target state="translated">A nivel de usuario, la extensi&amp;oacute;n es visible con una nueva palabra clave de clase de almacenamiento: &lt;code&gt;__thread&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="822a22d01653371bac14c53e07474f5d45325389" translate="yes" xml:space="preserve">
          <source>At this level</source>
          <target state="translated">A este nivel</target>
        </trans-unit>
        <trans-unit id="87ea658ed4a4a90d1fc99e8e69012153c56f031c" translate="yes" xml:space="preserve">
          <source>At this level, in addition to diagnosing all the same constructs as at level 1, a diagnostic is also issued for placement new expressions that construct an object in the last member of structure whose type is an array of a single element and whose size is less than the size of the object being constructed. While the previous example would be diagnosed, the following construct makes use of the flexible member array extension to avoid the warning at level 2.</source>
          <target state="translated">En este nivel,además de diagnosticar todas las mismas construcciones que en el nivel 1,también se emite un diagnóstico para la colocación de nuevas expresiones que construyen un objeto en el último miembro de la estructura cuyo tipo es un conjunto de un solo elemento y cuyo tamaño es menor que el tamaño del objeto que se está construyendo.Mientras que el ejemplo anterior sería diagnosticado,la construcción siguiente utiliza la extensión de la matriz de miembros flexibles para evitar la advertencia en el nivel 2.</target>
        </trans-unit>
        <trans-unit id="899a58ab48a1eeb8b5da7677f79db54f17f5ac4a" translate="yes" xml:space="preserve">
          <source>At this level, interprocedural call and return events are displayed, along with the most pertinent state-change events relating to a diagnostic. For example, for a double-&lt;code&gt;free&lt;/code&gt; diagnostic, both calls to &lt;code&gt;free&lt;/code&gt; will be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d0144240e3a9879fbee890a976db3a3119bfe0" translate="yes" xml:space="preserve">
          <source>At this time GCC tries to detect also a few terminals that are known to not implement the URL feature, and have bugs or at least had bugs in some versions that are still in use, where the URL escapes are likely to misbehave, i.e. print garbage on the screen. That list is currently xfce4-terminal, certain known to be buggy gnome-terminal versions, the linux console, and mingw. This check can be skipped with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bef66661f5c0b03146d1698ca3afb51d9a26fb" translate="yes" xml:space="preserve">
          <source>Atomic built-in functions with memory model.</source>
          <target state="translated">Funciones atómicas incorporadas con modelo de memoria.</target>
        </trans-unit>
        <trans-unit id="4ce1364206864236a22c5c48cd625fe86883adb2" translate="yes" xml:space="preserve">
          <source>Atomic types are not permitted for bit-fields.</source>
          <target state="translated">Los tipos atómicos no están permitidos para los campos de bits.</target>
        </trans-unit>
        <trans-unit id="b41c8daf0a5d584177e036c6b54eb5d698ff31ca" translate="yes" xml:space="preserve">
          <source>Attempt to avoid false dependencies in scheduled code by making use of registers left over after register allocation. This optimization most benefits processors with lots of registers. Depending on the debug information format adopted by the target, however, it can make debugging impossible, since variables no longer stay in a &amp;ldquo;home register&amp;rdquo;.</source>
          <target state="translated">Intente evitar dependencias falsas en el c&amp;oacute;digo programado haciendo uso de los registros que quedan despu&amp;eacute;s de la asignaci&amp;oacute;n de registros. Esta optimizaci&amp;oacute;n beneficia a la mayor&amp;iacute;a de los procesadores con muchos registros. Sin embargo, dependiendo del formato de informaci&amp;oacute;n de depuraci&amp;oacute;n adoptado por el objetivo, puede hacer que la depuraci&amp;oacute;n sea imposible, ya que las variables ya no permanecen en un &quot;registro de inicio&quot;.</target>
        </trans-unit>
        <trans-unit id="c6f5acede0fbb18382444dea8c6c4247f6477d4a" translate="yes" xml:space="preserve">
          <source>Attempt to convert calls to virtual functions to direct calls. This is done both within a procedure and interprocedurally as part of indirect inlining (</source>
          <target state="translated">Intenta convertir las llamadas a funciones virtuales para dirigir las llamadas.Esto se hace tanto dentro de un procedimiento como interprocediendo como parte de la inlining indirecta (</target>
        </trans-unit>
        <trans-unit id="23ecd786dc35f08a1baffd99e6e7d5e25ec53b58" translate="yes" xml:space="preserve">
          <source>Attempt to convert calls to virtual functions to speculative direct calls. Based on the analysis of the type inheritance graph, determine for a given call the set of likely targets. If the set is small, preferably of size 1, change the call into a conditional deciding between direct and indirect calls. The speculative calls enable more optimizations, such as inlining. When they seem useless after further optimization, they are converted back into original form.</source>
          <target state="translated">Intenta convertir las llamadas a funciones virtuales en llamadas directas especulativas.Basándose en el análisis del gráfico de herencia de tipos,determinar para una llamada dada el conjunto de objetivos probables.Si el conjunto es pequeño,preferentemente de tamaño 1,cambiar la llamada en un condicional decidiendo entre llamadas directas e indirectas.Las llamadas especulativas permiten más optimizaciones,como el inlining.Cuando parecen inútiles después de una mayor optimización,se convierten de nuevo en la forma original.</target>
        </trans-unit>
        <trans-unit id="015c279bf199fbda7e73b9795378a6fd0b0af2c9" translate="yes" xml:space="preserve">
          <source>Attempt to decrease register pressure through register live range shrinkage. This is helpful for fast processors with small or moderate size register sets.</source>
          <target state="translated">Intenta disminuir la presión del registro mediante la reducción del rango de vida del registro.Esto es útil para los procesadores rápidos con conjuntos de registros de tamaño pequeño o moderado.</target>
        </trans-unit>
        <trans-unit id="687510f6384de354811653c1b3a65669791e13da" translate="yes" xml:space="preserve">
          <source>Attempt to determine location views that can be omitted from location view lists. This requires the compiler to have very accurate insn length estimates, which isn&amp;rsquo;t always the case, and it may cause incorrect view lists to be generated silently when using an assembler that does not support location view lists. The GNU assembler will flag any such error as a &lt;code&gt;view number mismatch&lt;/code&gt;. This is only enabled on ports that define a reliable estimation function.</source>
          <target state="translated">Intente determinar las vistas de ubicaci&amp;oacute;n que se pueden omitir de las listas de vistas de ubicaci&amp;oacute;n. Esto requiere que el compilador tenga estimaciones de longitud de insn muy precisas, lo que no siempre es el caso, y puede hacer que se generen listas de vistas incorrectas de forma silenciosa cuando se usa un ensamblador que no admite listas de vistas de ubicaci&amp;oacute;n. El ensamblador GNU marcar&amp;aacute; cualquier error como una &lt;code&gt;view number mismatch&lt;/code&gt; . Esto solo est&amp;aacute; habilitado en puertos que definen una funci&amp;oacute;n de estimaci&amp;oacute;n confiable.</target>
        </trans-unit>
        <trans-unit id="aac236b78fdffe9d37dcfcf412e47b1651113242" translate="yes" xml:space="preserve">
          <source>Attempt to keep the stack boundary aligned to a 2 raised to &lt;var&gt;num&lt;/var&gt; byte boundary. If</source>
          <target state="translated">Intente mantener el l&amp;iacute;mite de la pila alineado con un 2 elevado al l&amp;iacute;mite &lt;var&gt;num&lt;/var&gt; &amp;eacute;rico de bytes. Si</target>
        </trans-unit>
        <trans-unit id="c862c84dcea1c34fb363ef2530e074c7fb9ff011" translate="yes" xml:space="preserve">
          <source>Attempt to merge identical constants (string constants and floating-point constants) across compilation units.</source>
          <target state="translated">Intentar fusionar constantes idénticas (constantes de cadena y constantes de punto flotante)en las unidades de compilación.</target>
        </trans-unit>
        <trans-unit id="50e4bd95dd66a112841cf4cd0b134789556e574d" translate="yes" xml:space="preserve">
          <source>Attempt to merge identical constants and identical variables.</source>
          <target state="translated">Intentar fusionar constantes idénticas y variables idénticas.</target>
        </trans-unit>
        <trans-unit id="0f797d45d3d320c615fd705a20d8464b1c6f92f0" translate="yes" xml:space="preserve">
          <source>Attempt to minimize stack usage. The compiler attempts to use less stack space, even if that makes the program slower. This option implies setting the</source>
          <target state="translated">Intenta minimizar el uso de la pila.El compilador intenta usar menos espacio de pila,incluso si eso hace que el programa sea más lento.Esta opción implica establecer el</target>
        </trans-unit>
        <trans-unit id="1d6331b92854e1a7daaaa3b254ef23d3e2705563" translate="yes" xml:space="preserve">
          <source>Attempt to remove redundant extension instructions. This is especially helpful for the x86-64 architecture, which implicitly zero-extends in 64-bit registers after writing to their lower 32-bit half.</source>
          <target state="translated">Intenta eliminar las instrucciones de extensión redundantes.Esto es especialmente útil para la arquitectura x86-64,que implícitamente se extiende a cero en los registros de 64 bits después de escribir en su mitad inferior de 32 bits.</target>
        </trans-unit>
        <trans-unit id="af8cd75ee0ed545b02a70bb0db32f4bb7b0a164a" translate="yes" xml:space="preserve">
          <source>Attempt to transform conditional jumps in the innermost loops to branch-less equivalents. The intent is to remove control-flow from the innermost loops in order to improve the ability of the vectorization pass to handle these loops. This is enabled by default if vectorization is enabled.</source>
          <target state="translated">Intentar transformar los saltos condicionales en los bucles más internos en equivalentes sin ramas.La intención es eliminar el flujo de control de los bucles más internos para mejorar la capacidad del pase de vectorización para manejar estos bucles.Esto se habilita por defecto si la vectorización está activada.</target>
        </trans-unit>
        <trans-unit id="a82b9d3f6e114711b5045a6cdf1e499c5d11c4fa" translate="yes" xml:space="preserve">
          <source>Attempt to transform conditional jumps into branch-less equivalents. This includes use of conditional moves, min, max, set flags and abs instructions, and some tricks doable by standard arithmetics. The use of conditional execution on chips where it is available is controlled by</source>
          <target state="translated">Intentar transformar los saltos condicionales en equivalentes sin ramas.Esto incluye el uso de movimientos condicionales,min,max,banderas de juego e instrucciones de abdominales,y algunos trucos que se pueden hacer con aritmética estándar.El uso de la ejecución condicional en las fichas donde está disponible está controlado por</target>
        </trans-unit>
        <trans-unit id="1ffd089c28cbc3f051c86ecbaa3c75b1a01df17f" translate="yes" xml:space="preserve">
          <source>Attempt to utilize both instruction sets at once. This effectively doubles the amount of available registers, and on chips with separate execution units for 387 and SSE the execution resources too. Use this option with care, as it is still experimental, because the GCC register allocator does not model separate functional units well, resulting in unstable performance.</source>
          <target state="translated">Intente utilizar ambos conjuntos de instrucciones a la vez.Esto efectivamente duplica la cantidad de registros disponibles,y en las fichas con unidades de ejecución separadas para 387 y SSE los recursos de ejecución también.Utilice esta opción con cuidado,ya que todavía es experimental,porque el asignador de registros del GCC no modela bien las unidades funcionales separadas,lo que da lugar a un rendimiento inestable.</target>
        </trans-unit>
        <trans-unit id="768394a0c657893c518e749955ef528cb8973c45" translate="yes" xml:space="preserve">
          <source>Attribute specifiers may be mixed with type qualifiers appearing inside the &lt;code&gt;[]&lt;/code&gt; of a parameter array declarator, in the C99 construct by which such qualifiers are applied to the pointer to which the array is implicitly converted. Such attribute specifiers apply to the pointer, not to the array, but at present this is not implemented and they are ignored.</source>
          <target state="translated">Los especificadores de atributo se pueden mezclar con los calificadores de tipo que aparecen dentro de &lt;code&gt;[]&lt;/code&gt; de un declarador de matriz de par&amp;aacute;metros, en la construcci&amp;oacute;n C99 mediante la cual dichos calificadores se aplican al puntero al que la matriz se convierte impl&amp;iacute;citamente. Dichos especificadores de atributos se aplican al puntero, no a la matriz, pero en la actualidad esto no est&amp;aacute; implementado y se ignoran.</target>
        </trans-unit>
        <trans-unit id="f15f9fabc9141a4fd02709ab1f144944da1df77d" translate="yes" xml:space="preserve">
          <source>Attributes considered include &lt;code&gt;alloc_align&lt;/code&gt;, &lt;code&gt;alloc_size&lt;/code&gt;, &lt;code&gt;cold&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;hot&lt;/code&gt;, &lt;code&gt;leaf&lt;/code&gt;, &lt;code&gt;malloc&lt;/code&gt;, &lt;code&gt;nonnull&lt;/code&gt;, &lt;code&gt;noreturn&lt;/code&gt;, &lt;code&gt;nothrow&lt;/code&gt;, &lt;code&gt;pure&lt;/code&gt;, &lt;code&gt;returns_nonnull&lt;/code&gt;, and &lt;code&gt;returns_twice&lt;/code&gt;.</source>
          <target state="translated">Los atributos considerados incluyen &lt;code&gt;alloc_align&lt;/code&gt; , &lt;code&gt;alloc_size&lt;/code&gt; , &lt;code&gt;cold&lt;/code&gt; , &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;hot&lt;/code&gt; , &lt;code&gt;leaf&lt;/code&gt; , &lt;code&gt;malloc&lt;/code&gt; , &lt;code&gt;nonnull&lt;/code&gt; , &lt;code&gt;noreturn&lt;/code&gt; , &lt;code&gt;nothrow&lt;/code&gt; , &lt;code&gt;pure&lt;/code&gt; , &lt;code&gt;returns_nonnull&lt;/code&gt; y &lt;code&gt;returns_twice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e72cecf4ee93be8444bf26683f3314180b4f20f" translate="yes" xml:space="preserve">
          <source>Augment variable location lists with progressive view numbers implied from the line number table. This enables debug information consumers to inspect state at certain points of the program, even if no instructions associated with the corresponding source locations are present at that point. If the assembler lacks support for view numbers in line number tables, this will cause the compiler to emit the line number table, which generally makes them somewhat less compact. The augmented line number tables and location lists are fully backward-compatible, so they can be consumed by debug information consumers that are not aware of these augmentations, but they won&amp;rsquo;t derive any benefit from them either.</source>
          <target state="translated">Aumente las listas de ubicaci&amp;oacute;n de variables con n&amp;uacute;meros de vista progresivos impl&amp;iacute;citos en la tabla de n&amp;uacute;meros de l&amp;iacute;nea. Esto permite a los consumidores de informaci&amp;oacute;n de depuraci&amp;oacute;n inspeccionar el estado en ciertos puntos del programa, incluso si no hay instrucciones asociadas con las ubicaciones de origen correspondientes en ese punto. Si el ensamblador carece de soporte para los n&amp;uacute;meros de vista en las tablas de n&amp;uacute;meros de l&amp;iacute;nea, esto har&amp;aacute; que el compilador emita la tabla de n&amp;uacute;meros de l&amp;iacute;nea, lo que generalmente los hace algo menos compactos. Las tablas de n&amp;uacute;meros de l&amp;iacute;nea aumentadas y las listas de ubicaciones son totalmente compatibles con versiones anteriores, por lo que pueden ser consumidas por consumidores de informaci&amp;oacute;n de depuraci&amp;oacute;n que no conocen estos aumentos, pero tampoco obtendr&amp;aacute;n ning&amp;uacute;n beneficio de ellos.</target>
        </trans-unit>
        <trans-unit id="e028ddf293b9280450ea608fcf02b6afb803a5cf" translate="yes" xml:space="preserve">
          <source>Automatically convert relative source file names to absolute path names in the</source>
          <target state="translated">Convierte automáticamente los nombres de los archivos de origen relativos en nombres de ruta absolutos en el</target>
        </trans-unit>
        <trans-unit id="5484fc94aa2d1ceccb816e9c671bdaec50d90ef7" translate="yes" xml:space="preserve">
          <source>Average number of iterations of a loop.</source>
          <target state="translated">Número medio de iteraciones de un bucle.</target>
        </trans-unit>
        <trans-unit id="04f04d96d845a90ad835e69c3cba86443a61a89a" translate="yes" xml:space="preserve">
          <source>Avoid or allow generating memory accesses that may not be aligned on a natural object boundary as described in the architecture specification.</source>
          <target state="translated">Evitar o permitir la generación de accesos de memoria que pueden no estar alineados con un límite de objeto natural como se describe en la especificación de la arquitectura.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="25ec48c867ed8bb8e6f96a8b43aad4372bc4578a" translate="yes" xml:space="preserve">
          <source>B register</source>
          <target state="translated">Registro B</target>
        </trans-unit>
        <trans-unit id="cde782be8b675144b1c3a413d952e5058ca53d38" translate="yes" xml:space="preserve">
          <source>BL</source>
          <target state="translated">BL</target>
        </trans-unit>
        <trans-unit id="7a64a2253d2959f0bf9362ab5d3438b38d98d231" translate="yes" xml:space="preserve">
          <source>BMI instructions.</source>
          <target state="translated">Instrucciones del IMC.</target>
        </trans-unit>
        <trans-unit id="a694b7ba8977f0d1b0d7c872c114539da755bd3b" translate="yes" xml:space="preserve">
          <source>BMI2 instructions.</source>
          <target state="translated">Instrucciones del IMC2.</target>
        </trans-unit>
        <trans-unit id="bfdb06081cf1ce665b573d70cc38b7b454902ff9" translate="yes" xml:space="preserve">
          <source>BRIG files (binary representation of HSAIL).</source>
          <target state="translated">Archivos BRIG (representación binaria de HSAIL).</target>
        </trans-unit>
        <trans-unit id="089ea9746c8cbdc04b34721f820ba603e6881ff2" translate="yes" xml:space="preserve">
          <source>Base pointer register (r28&amp;ndash;r31)</source>
          <target state="translated">Registro de puntero base (r28 &amp;ndash; r31)</target>
        </trans-unit>
        <trans-unit id="92f76287d800c12dfd6b51ad7e80eed03e92c213" translate="yes" xml:space="preserve">
          <source>Base::Base</source>
          <target state="translated">Base::Base</target>
        </trans-unit>
        <trans-unit id="9039faeb6333b5e373bf646f9ff036f287abc6be" translate="yes" xml:space="preserve">
          <source>Base::operator=</source>
          <target state="translated">Base::operator=</target>
        </trans-unit>
        <trans-unit id="7b3a608459615b9bc19c9d4a294c3d2c0cd4a8a0" translate="yes" xml:space="preserve">
          <source>Basic use of constraints.</source>
          <target state="translated">Uso básico de las restricciones.</target>
        </trans-unit>
        <trans-unit id="d5770040433fcf2fed9fca7319c3ac627f6efe91" translate="yes" xml:space="preserve">
          <source>Be aware of this when performing timing tests, for instance the following loop can be completely removed, provided &lt;code&gt;some_expression&lt;/code&gt; can provably not change any global state.</source>
          <target state="translated">Tenga esto en cuenta al realizar pruebas de temporizaci&amp;oacute;n, por ejemplo, el siguiente bucle se puede eliminar por completo, siempre que &lt;code&gt;some_expression&lt;/code&gt; no pueda demostrar ning&amp;uacute;n estado global.</target>
        </trans-unit>
        <trans-unit id="6d4c386efa741fabb074be3b34ff11b267e4e0d7" translate="yes" xml:space="preserve">
          <source>Be aware that headers from outside your project, in particular system headers and headers from any other library you use, may not be expecting to be compiled with visibility other than the default. You may need to explicitly say &lt;code&gt;#pragma GCC visibility push(default)&lt;/code&gt; before including any such headers.</source>
          <target state="translated">Tenga en cuenta que los encabezados externos a su proyecto, en particular los encabezados del sistema y los encabezados de cualquier otra biblioteca que utilice, pueden no esperar compilarse con una visibilidad distinta a la predeterminada. Es posible que deba decir expl&amp;iacute;citamente &lt;code&gt;#pragma GCC visibility push(default)&lt;/code&gt; antes de incluir dichos encabezados.</target>
        </trans-unit>
        <trans-unit id="b31e54ef88fe124b0da9af9ee2524cfb6800e5f0" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;__builtin_longjmp&lt;/code&gt; depends on the function return mechanism to restore the stack context, it cannot be called from the same function calling &lt;code&gt;__builtin_setjmp&lt;/code&gt; to initialize &lt;var&gt;buf&lt;/var&gt;. It can only be called from a function called (directly or indirectly) from the function calling &lt;code&gt;__builtin_setjmp&lt;/code&gt;.</source>
          <target state="translated">Debido a que &lt;code&gt;__builtin_longjmp&lt;/code&gt; depende del mecanismo de retorno de la funci&amp;oacute;n para restaurar el contexto de la pila, no se puede llamar desde la misma funci&amp;oacute;n que llama a &lt;code&gt;__builtin_setjmp&lt;/code&gt; para inicializar &lt;var&gt;buf&lt;/var&gt; . Solo se puede llamar desde una funci&amp;oacute;n llamada (directa o indirectamente) desde la funci&amp;oacute;n que llama a &lt;code&gt;__builtin_setjmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d94ff60e2bbcd755c2d21600b1c5beacc8d88e0e" translate="yes" xml:space="preserve">
          <source>Because of the interactions between synchronization and exception handling, you can only use &lt;code&gt;@synchronized&lt;/code&gt; when compiling with exceptions enabled, that is with the command line option</source>
          <target state="translated">Debido a las interacciones entre la sincronizaci&amp;oacute;n y el manejo de excepciones, solo puede usar &lt;code&gt;@synchronized&lt;/code&gt; cuando compila con las excepciones habilitadas, es decir, con la opci&amp;oacute;n de l&amp;iacute;nea de comando</target>
        </trans-unit>
        <trans-unit id="bc31609fad1f0a543a7bf312e8fc7b4e085e75b6" translate="yes" xml:space="preserve">
          <source>Because of the special nature of the flag output operands, the constraint may not include alternatives.</source>
          <target state="translated">Debido a la naturaleza especial de los operandos de salida de la bandera,es posible que la restricción no incluya alternativas.</target>
        </trans-unit>
        <trans-unit id="74b7dab219d7dd89ab8e51f25903de3035d7b00a" translate="yes" xml:space="preserve">
          <source>Because of the way GCC instruments calls, a call count can be shown after a line with no individual blocks. As you can see, line 33 contains a basic block that was not executed.</source>
          <target state="translated">Debido a la forma en que los instrumentos GCC llaman,se puede mostrar un conteo de llamadas después de una línea sin bloques individuales.Como pueden ver,la línea 33 contiene un bloque básico que no fue ejecutado.</target>
        </trans-unit>
        <trans-unit id="ba975e496f98093e5f2ea388a49453725d139a4b" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;asm&lt;/code&gt; statement unconditionally transfers control out of the function, control never reaches the end of the function body. The &lt;code&gt;__builtin_unreachable&lt;/code&gt; is in fact unreachable and communicates this fact to the compiler.</source>
          <target state="translated">Debido a que la instrucci&amp;oacute;n &lt;code&gt;asm&lt;/code&gt; transfiere incondicionalmente el control de la funci&amp;oacute;n, el control nunca llega al final del cuerpo de la funci&amp;oacute;n. El &lt;code&gt;__builtin_unreachable&lt;/code&gt; es de hecho inalcanzable y comunica este hecho al compilador.</target>
        </trans-unit>
        <trans-unit id="a314cc1449bd666eda6884b69e668c28f95c1087" translate="yes" xml:space="preserve">
          <source>Before you can use this option, you must first generate profiling information. See &lt;a href=&quot;instrumentation-options#Instrumentation-Options&quot;&gt;Instrumentation Options&lt;/a&gt;, for information about the</source>
          <target state="translated">Antes de poder utilizar esta opci&amp;oacute;n, primero debe generar informaci&amp;oacute;n de perfil. Consulte &lt;a href=&quot;instrumentation-options#Instrumentation-Options&quot;&gt;Opciones de instrumentaci&amp;oacute;n&lt;/a&gt; para obtener informaci&amp;oacute;n sobre el</target>
        </trans-unit>
        <trans-unit id="5ba07a31df23960760847e555518779312499558" translate="yes" xml:space="preserve">
          <source>Below</source>
          <target state="translated">Below</target>
        </trans-unit>
        <trans-unit id="5788148d39b8d5244dcdc29f7a93a22a6334768d" translate="yes" xml:space="preserve">
          <source>Besides declarations, the file indicates, in comments, the origin of each declaration (source file and line), whether the declaration was implicit, prototyped or unprototyped (&amp;lsquo;</source>
          <target state="translated">Adem&amp;aacute;s de las declaraciones, el archivo indica, en los comentarios, el origen de cada declaraci&amp;oacute;n (archivo fuente y l&amp;iacute;nea), si la declaraci&amp;oacute;n fue impl&amp;iacute;cita, prototipada o no prototipada ('</target>
        </trans-unit>
        <trans-unit id="51eccbcd60621399284c614907bba67ce4fca17c" translate="yes" xml:space="preserve">
          <source>Beware that on some ELF systems this attribute is unsuitable for global functions in shared libraries with lazy binding (which is the default). Lazy binding sends the first call via resolving code in the loader, which might assume EAX, EDX and ECX can be clobbered, as per the standard calling conventions. Solaris 8 is affected by this. Systems with the GNU C Library version 2.1 or higher and FreeBSD are believed to be safe since the loaders there save EAX, EDX and ECX. (Lazy binding can be disabled with the linker or the loader if desired, to avoid the problem.)</source>
          <target state="translated">Tenga en cuenta que en algunos sistemas ELF este atributo no es adecuado para las funciones globales en las bibliotecas compartidas con vinculación perezosa (que es el valor por defecto).Lazy binding envía la primera llamada a través de código de resolución en el cargador,lo que podría suponer que EAX,EDX y ECX pueden ser golpeados,según las convenciones de llamada estándar.Solaris 8 está afectado por esto.Se cree que los sistemas con la biblioteca C de GNU versión 2.1 o superior y FreeBSD son seguros,ya que los cargadores allí guardan EAX,EDX y ECX.(La vinculación perezosa puede ser desactivada con el enlazador o el cargador si se desea,para evitar el problema).</target>
        </trans-unit>
        <trans-unit id="2c5d61cd9cd2849c270a6af03ebe1306ad2048ca" translate="yes" xml:space="preserve">
          <source>Binary Compatibility</source>
          <target state="translated">Compatibilidad binaria</target>
        </trans-unit>
        <trans-unit id="8668d27514898ff49d03fb634b072fd0aba7e0f7" translate="yes" xml:space="preserve">
          <source>Binary arithmetic operations.</source>
          <target state="translated">Operaciones de aritmética binaria.</target>
        </trans-unit>
        <trans-unit id="18e9b92cdcd75a69e0946923d3da4f8d0a7fd71d" translate="yes" xml:space="preserve">
          <source>Binary compatibility encompasses several related concepts:</source>
          <target state="translated">La compatibilidad binaria abarca varios conceptos relacionados:</target>
        </trans-unit>
        <trans-unit id="f8ed98dae9970ec4cee447405cb8c658f46ef706" translate="yes" xml:space="preserve">
          <source>Binary constants using the &amp;lsquo;</source>
          <target state="translated">Constantes binarias usando el '</target>
        </trans-unit>
        <trans-unit id="666bffac0affe44914b807024f7928a6d6ca6941" translate="yes" xml:space="preserve">
          <source>Bind references to global symbols when building a shared object. Warn about any unresolved references (unless overridden by the link editor option</source>
          <target state="translated">Vincular las referencias a los símbolos globales cuando se construye un objeto compartido.Advierta sobre cualquier referencia no resuelta (a menos que sea anulada por la opción del editor de enlaces</target>
        </trans-unit>
        <trans-unit id="628682c1112ff8669d8fed436fe1daac74760ad6" translate="yes" xml:space="preserve">
          <source>Bit reversal. Return the result of reversing the bits in &lt;var&gt;value&lt;/var&gt;. Bit 15 is swapped with bit 0, bit 14 is swapped with bit 1, and so on.</source>
          <target state="translated">Inversi&amp;oacute;n de bits. Devuelve el resultado de invertir los bits en &lt;var&gt;value&lt;/var&gt; . El bit 15 se intercambia con el bit 0, el bit 14 se intercambia con el bit 1, y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="2eb3706f981c5da19b9c626f35ee7ccc246608e1" translate="yes" xml:space="preserve">
          <source>Bitwise operators act on the representation of the value including both the sign and value bits, where the sign bit is considered immediately above the highest-value value bit. Signed &amp;lsquo;</source>
          <target state="translated">Los operadores bit a bit act&amp;uacute;an sobre la representaci&amp;oacute;n del valor, incluidos los bits de signo y valor, donde el bit de signo se considera inmediatamente por encima del bit de valor m&amp;aacute;s alto. Firmado '</target>
        </trans-unit>
        <trans-unit id="8b063c3045af1663a8359f63f1ffd9a1d853789c" translate="yes" xml:space="preserve">
          <source>Blackfin family&amp;mdash;</source>
          <target state="translated">Familia Blackfin</target>
        </trans-unit>
        <trans-unit id="0daa776b5dad37eac562c1bddec1cfa040024e9a" translate="yes" xml:space="preserve">
          <source>Borland C++ solved the template instantiation problem by adding the code equivalent of common blocks to their linker; the compiler emits template instances in each translation unit that uses them, and the linker collapses them together. The advantage of this model is that the linker only has to consider the object files themselves; there is no external complexity to worry about. The disadvantage is that compilation time is increased because the template code is being compiled repeatedly. Code written for this model tends to include definitions of all templates in the header file, since they must be seen to be instantiated.</source>
          <target state="translated">Borland C++resolvió el problema de la instanciación de plantillas agregando el equivalente en código de los bloques comunes a su enlazador;el compilador emite instancias de plantillas en cada unidad de traducción que las utiliza,y el enlazador las colapsa juntas.La ventaja de este modelo es que el enlazador sólo tiene que considerar los archivos objeto en sí mismos;no hay ninguna complejidad externa de la que preocuparse.La desventaja es que el tiempo de compilación aumenta porque el código de la plantilla se compila repetidamente.El código escrito para este modelo tiende a incluir definiciones de todas las plantillas en el archivo de cabecera,ya que deben verse como instanciadas.</target>
        </trans-unit>
        <trans-unit id="200e3a355b82a42f3341fd59904fc5750775b807" translate="yes" xml:space="preserve">
          <source>Borland model</source>
          <target state="translated">Modelo Borland</target>
        </trans-unit>
        <trans-unit id="06b22f59b253dcf9c37ea4fe24c6526c4dd1e47c" translate="yes" xml:space="preserve">
          <source>Both global and local variables can be associated with a register. The consequences of performing this association are very different between the two, as explained in the sections below.</source>
          <target state="translated">Tanto las variables globales como las locales pueden asociarse a un registro.Las consecuencias de realizar esta asociación son muy diferentes entre las dos,como se explica en las secciones siguientes.</target>
        </trans-unit>
        <trans-unit id="fc4416d6a83edb82efd0f4cdffd08c5cd70ca428" translate="yes" xml:space="preserve">
          <source>Bound on number of candidates for induction variables, below which all candidates are considered for each use in induction variable optimizations. If there are more candidates than this, only the most relevant ones are considered to avoid quadratic time complexity.</source>
          <target state="translated">Límite en el número de candidatos para las variables de inducción,por debajo del cual se consideran todos los candidatos para cada uso en las optimizaciones de las variables de inducción.Si hay más candidatos que esto,sólo se consideran los más relevantes para evitar la complejidad del tiempo cuadrático.</target>
        </trans-unit>
        <trans-unit id="430f77e04bd4e8702495c79a5ebb639d2a4812c8" translate="yes" xml:space="preserve">
          <source>Bound on size of expressions used in the scalar evolutions analyzer. Large expressions slow the analyzer.</source>
          <target state="translated">Ligado al tamaño de las expresiones usadas en el analizador de evoluciones escalares.Las expresiones grandes ralentizan el analizador.</target>
        </trans-unit>
        <trans-unit id="f0e549afa5762802ff68ea72f123883ebb295578" translate="yes" xml:space="preserve">
          <source>Bound on the complexity of the expressions in the scalar evolutions analyzer. Complex expressions slow the analyzer.</source>
          <target state="translated">Ligado a la complejidad de las expresiones en el analizador de evoluciones escalares.Las expresiones complejas ralentizan el analizador.</target>
        </trans-unit>
        <trans-unit id="c2a6a8fa6e2e8a317cd5dd66c604413295e3eb45" translate="yes" xml:space="preserve">
          <source>Bound on the cost of an expression to compute the number of iterations.</source>
          <target state="translated">Se limita al costo de una expresión para calcular el número de iteraciones.</target>
        </trans-unit>
        <trans-unit id="26981c43732b427e5b2eae3c3cb43a791d6ce820" translate="yes" xml:space="preserve">
          <source>Brain half-precision floating-point instructions. This also enables Advanced SIMD and floating-point instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb1b62c34f820227fd0537f593962386bf2cc61" translate="yes" xml:space="preserve">
          <source>Branch register</source>
          <target state="translated">Registro de sucursales</target>
        </trans-unit>
        <trans-unit id="a833b9b5c7959a93636f56f73df394e8d3c434e8" translate="yes" xml:space="preserve">
          <source>Branches are present only with &lt;var&gt;-b&lt;/var&gt; option. Fields of the &lt;var&gt;line&lt;/var&gt; element have following semantics:</source>
          <target state="translated">Las ramas est&amp;aacute;n presentes solo con la opci&amp;oacute;n &lt;var&gt;-b&lt;/var&gt; . Los campos del elemento de &lt;var&gt;line&lt;/var&gt; tienen la siguiente sem&amp;aacute;ntica:</target>
        </trans-unit>
        <trans-unit id="a6495e1aabddcd6526141ce6efe62824f5a7eae3" translate="yes" xml:space="preserve">
          <source>Brief list of all options, without explanations.</source>
          <target state="translated">Breve lista de todas las opciones,sin explicaciones.</target>
        </trans-unit>
        <trans-unit id="654ffe48f6054af226250c2aa3867b5fc4c80bcc" translate="yes" xml:space="preserve">
          <source>Bugs we will fix later.</source>
          <target state="translated">Bugs que arreglaremos más tarde.</target>
        </trans-unit>
        <trans-unit id="de5bfe3fd9b6538bfa34acbeb7a505866d87ffce" translate="yes" xml:space="preserve">
          <source>Build a standalone application for Core A of BF561 when using the one-application-per-core programming model. Proper start files and link scripts are used to support Core A, and the macro &lt;code&gt;__BFIN_COREA&lt;/code&gt; is defined. This option can only be used in conjunction with</source>
          <target state="translated">Cree una aplicaci&amp;oacute;n independiente para Core A de BF561 cuando utilice el modelo de programaci&amp;oacute;n de una aplicaci&amp;oacute;n por n&amp;uacute;cleo. Se utilizan archivos de inicio y scripts de enlace adecuados para admitir Core A, y se define la macro &lt;code&gt;__BFIN_COREA&lt;/code&gt; . Esta opci&amp;oacute;n solo se puede utilizar junto con</target>
        </trans-unit>
        <trans-unit id="6320906d93f259f860a69b97e3abeb20581c59d7" translate="yes" xml:space="preserve">
          <source>Build a standalone application for Core B of BF561 when using the one-application-per-core programming model. Proper start files and link scripts are used to support Core B, and the macro &lt;code&gt;__BFIN_COREB&lt;/code&gt; is defined. When this option is used, &lt;code&gt;coreb_main&lt;/code&gt; should be used instead of &lt;code&gt;main&lt;/code&gt;. This option can only be used in conjunction with</source>
          <target state="translated">Cree una aplicaci&amp;oacute;n independiente para Core B de BF561 cuando utilice el modelo de programaci&amp;oacute;n de una aplicaci&amp;oacute;n por n&amp;uacute;cleo. Se utilizan archivos de inicio y scripts de enlace adecuados para admitir Core B, y se define la macro &lt;code&gt;__BFIN_COREB&lt;/code&gt; . Cuando se usa esta opci&amp;oacute;n, &lt;code&gt;coreb_main&lt;/code&gt; debe usarse en lugar de &lt;code&gt;main&lt;/code&gt; . Esta opci&amp;oacute;n solo se puede utilizar junto con</target>
        </trans-unit>
        <trans-unit id="e010c48c400b5b030ac052e6ece9a00978fee8f4" translate="yes" xml:space="preserve">
          <source>Build a standalone application for SDRAM. Proper start files and link scripts are used to put the application into SDRAM, and the macro &lt;code&gt;__BFIN_SDRAM&lt;/code&gt; is defined. The loader should initialize SDRAM before loading the application.</source>
          <target state="translated">Cree una aplicaci&amp;oacute;n independiente para SDRAM. Se utilizan archivos de inicio y secuencias de comandos de enlace adecuados para poner la aplicaci&amp;oacute;n en SDRAM, y se define la macro &lt;code&gt;__BFIN_SDRAM&lt;/code&gt; . El cargador debe inicializar SDRAM antes de cargar la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="93828509d9639cf155e61322b59daf0187eb136a" translate="yes" xml:space="preserve">
          <source>Build a standalone application for multicore Blackfin processors. This option causes proper start files and link scripts supporting multicore to be used, and defines the macro &lt;code&gt;__BFIN_MULTICORE&lt;/code&gt;. It can only be used with</source>
          <target state="translated">Cree una aplicaci&amp;oacute;n independiente para procesadores Blackfin multin&amp;uacute;cleo. Esta opci&amp;oacute;n hace que se utilicen archivos de inicio y scripts de enlace adecuados que admiten multin&amp;uacute;cleo, y define la macro &lt;code&gt;__BFIN_MULTICORE&lt;/code&gt; . Solo se puede utilizar con</target>
        </trans-unit>
        <trans-unit id="f3ef0f891e9c255998243907e244b5b488c698cb" translate="yes" xml:space="preserve">
          <source>Build-in macro that resolves to a decimal number that identifies the architecture and depends on the</source>
          <target state="translated">Macro de construcción que se resuelve a un número decimal que identifica la arquitectura y depende de la</target>
        </trans-unit>
        <trans-unit id="2d34970179e2bcbb0ecc79b090b87f98043678d3" translate="yes" xml:space="preserve">
          <source>Building data dependencies is expensive for very large loops. This parameter limits the number of data references in loops that are considered for data dependence analysis. These large loops are no handled by the optimizations using loop data dependencies.</source>
          <target state="translated">La creación de dependencias de datos es costosa para los bucles muy grandes.Este parámetro limita el número de referencias de datos en los bucles que se consideran para el análisis de la dependencia de datos.Estos grandes bucles no son manejados por las optimizaciones que utilizan las dependencias de datos de los bucles.</target>
        </trans-unit>
        <trans-unit id="2d296efa2545fd43e5ab712c86bbcd120531a39c" translate="yes" xml:space="preserve">
          <source>Built-in Function:  &lt;strong id=&quot;index-_005f_005fbuiltin_005fva_005farg_005fpack&quot;&gt;__builtin_va_arg_pack&lt;/strong&gt; ()</source>
          <target state="translated">Funci&amp;oacute;n &lt;strong id=&quot;index-_005f_005fbuiltin_005fva_005farg_005fpack&quot;&gt;incorporada&lt;/strong&gt; : &lt;strong id=&quot;index-_005f_005fbuiltin_005fva_005farg_005fpack&quot;&gt;__builtin_va_arg_pack&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="77cea55a1a3d5467f8414836cb770a0b2fa5b655" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fadd_005ffetch&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_add_fetch&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fadd_005ffetch&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_add_fetch&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="65f1c3be3667c2fa06bb169c518b6d4d03675142" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fand_005ffetch&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_and_fetch&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fand_005ffetch&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_and_fetch&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="a03055a0cd281ae02bbb4f07ca3c585700a7af0b" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fexchange_005fn&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_exchange_n&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fexchange_005fn&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_exchange_n&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="6eb648ab26ef838877bc3cc4ee57b8ff3c3ec10d" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fadd&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_fetch_add&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fadd&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_fetch_add&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="caf737dd7d0b652a623f88bdd6fd64fcd63596e4" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fand&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_fetch_and&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fand&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_fetch_and&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="f9b1604908ceaddf5e7b79ba9db81f0f1c23485e" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fnand&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_fetch_nand&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fnand&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_fetch_nand&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="45f4365ebf0124211f5cb2705e77bd2bfd90775d" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005for&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_fetch_or&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005for&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_fetch_or&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="cf646256d882577bfba56a5678e5b9426274e60b" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fsub&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_fetch_sub&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fsub&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_fetch_sub&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="5041b1cf8f3a6577d287aff4388265cba990c15b" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fxor&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_fetch_xor&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005ffetch_005fxor&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_fetch_xor&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="75268ab0697eb9af1dc5c6b541d4d1ba8ac4dbf6" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fload_005fn&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_load_n&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fload_005fn&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_load_n&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, int memorder)</target>
        </trans-unit>
        <trans-unit id="cd00e4ef24b741036ea643da78829d2849f8f8d7" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fnand_005ffetch&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_nand_fetch&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fnand_005ffetch&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_nand_fetch&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="a4657eb44924236cf67282c47ad4d932f5594137" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005for_005ffetch&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_or_fetch&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005for_005ffetch&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_or_fetch&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="57b4ecf7d291340ab5ae6cc114b7f02d58e8a705" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fsub_005ffetch&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_sub_fetch&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fsub_005ffetch&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_sub_fetch&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="a52f64419e32735eabc4e3c18aa68dedfb2e4625" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fatomic_005fxor_005ffetch&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__atomic_xor_fetch&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fatomic_005fxor_005ffetch&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__atomic_xor_fetch&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="1167cb7b44d7d9f620598ea0aefcbfdf9dc55a1f" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fbuiltin_005fcall_005fwith_005fstatic_005fchain-1&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__builtin_call_with_static_chain&lt;/strong&gt; (&lt;var&gt;call_exp&lt;/var&gt;, &lt;var&gt;pointer_exp&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fbuiltin_005fcall_005fwith_005fstatic_005fchain-1&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__builtin_call_with_static_chain&lt;/strong&gt; ( &lt;var&gt;call_exp&lt;/var&gt; , &lt;var&gt;pointer_exp&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="34f799a7c8358da11b0de0991867b1ca62dd416b" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fbuiltin_005fchoose_005fexpr&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__builtin_choose_expr&lt;/strong&gt; (&lt;var&gt;const_exp&lt;/var&gt;, &lt;var&gt;exp1&lt;/var&gt;, &lt;var&gt;exp2&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fbuiltin_005fchoose_005fexpr&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__builtin_choose_expr&lt;/strong&gt; ( &lt;var&gt;const_exp&lt;/var&gt; , &lt;var&gt;exp1&lt;/var&gt; , &lt;var&gt;exp2&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="11e363a3b892d8f6c1c1fdfdd845f80862a3606b" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fbuiltin_005fcomplex&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__builtin_complex&lt;/strong&gt; (&lt;var&gt;real&lt;/var&gt;, &lt;var&gt;imag&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fbuiltin_005fcomplex&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__builtin_complex&lt;/strong&gt; ( &lt;var&gt;real&lt;/var&gt; , &lt;var&gt;imag&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="9eec0865162048e6dccab85fb3d740aa5f07fc05" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fbuiltin_005fspeculation_005fsafe_005fvalue-1&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__builtin_speculation_safe_value&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; val, &lt;var&gt;type&lt;/var&gt; failval)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fbuiltin_005fspeculation_005fsafe_005fvalue-1&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__builtin_speculation_safe_value&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; val, &lt;var&gt;type&lt;/var&gt; failval)</target>
        </trans-unit>
        <trans-unit id="7c5c7616bd765dd4fc8d843ce99908ad16336f51" translate="yes" xml:space="preserve">
          <source>Built-in Function: &lt;var id=&quot;index-_005f_005fbuiltin_005ftgmath&quot;&gt;type&lt;/var&gt;&lt;strong&gt;__builtin_tgmath&lt;/strong&gt; (&lt;var&gt;functions&lt;/var&gt;, &lt;var&gt;arguments&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: &lt;var id=&quot;index-_005f_005fbuiltin_005ftgmath&quot;&gt;type&lt;/var&gt; &lt;strong&gt;__builtin_tgmath&lt;/strong&gt; ( &lt;var&gt;functions&lt;/var&gt; , &lt;var&gt;arguments&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="e3600affbf40f82a1f599528ce0f72402f629874" translate="yes" xml:space="preserve">
          <source>Built-in Function: Pmode &lt;strong id=&quot;index-_005f_005fbuiltin_005fextend_005fpointer-1&quot;&gt;__builtin_extend_pointer&lt;/strong&gt; (void * x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: Pmode &lt;strong id=&quot;index-_005f_005fbuiltin_005fextend_005fpointer-1&quot;&gt;__builtin_extend_pointer&lt;/strong&gt; (void * x)</target>
        </trans-unit>
        <trans-unit id="b7ca6e3021fea0b720388d29d28e89de6177efaa" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Decimal128 &lt;strong id=&quot;index-_005f_005fbuiltin_005finfd128&quot;&gt;__builtin_infd128&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Decimal128 &lt;strong id=&quot;index-_005f_005fbuiltin_005finfd128&quot;&gt;__builtin_infd128&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="bf8fbba0296cd046f79b2f8fac454e9f96b680c3" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Decimal128 &lt;strong id=&quot;index-_005f_005fbuiltin_005fnand128&quot;&gt;__builtin_nand128&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Decimal128 &lt;strong id=&quot;index-_005f_005fbuiltin_005fnand128&quot;&gt;__builtin_nand128&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="ad3f5c8f497e0e257636ccbaf6459ad1ad8e6479" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Decimal32 &lt;strong id=&quot;index-_005f_005fbuiltin_005finfd32&quot;&gt;__builtin_infd32&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Decimal32 &lt;strong id=&quot;index-_005f_005fbuiltin_005finfd32&quot;&gt;__builtin_infd32&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="2d12b2517571e9887a8920d94ebf233b53b0d3e9" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Decimal32 &lt;strong id=&quot;index-_005f_005fbuiltin_005fnand32&quot;&gt;__builtin_nand32&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Decimal32 &lt;strong id=&quot;index-_005f_005fbuiltin_005fnand32&quot;&gt;__builtin_nand32&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="c4f59dbda6a0f6f12e013b7d8146bb95b52fddbf" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Decimal64 &lt;strong id=&quot;index-_005f_005fbuiltin_005finfd64&quot;&gt;__builtin_infd64&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Decimal64 &lt;strong id=&quot;index-_005f_005fbuiltin_005finfd64&quot;&gt;__builtin_infd64&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="dcf12c95c5e2671a78a61f716ad8c91e6ab3dca2" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Decimal64 &lt;strong id=&quot;index-_005f_005fbuiltin_005fnand64&quot;&gt;__builtin_nand64&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Decimal64 &lt;strong id=&quot;index-_005f_005fbuiltin_005fnand64&quot;&gt;__builtin_nand64&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="e065d1bdd11d40eb46afaa76c7e3c275e0e7c656" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005fhuge_005fvalfn&quot;&gt;n&lt;/var&gt;&lt;strong&gt;__builtin_huge_valf&lt;var&gt;n&lt;/var&gt;&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005fhuge_005fvalfn&quot;&gt;n&lt;/var&gt; &lt;strong&gt;__builtin_huge_valf &lt;var&gt;n&lt;/var&gt; &lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="bc1ad27f368302d827ffdedc2f161e1a34576916" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005fhuge_005fvalfnx&quot;&gt;n&lt;/var&gt;x &lt;strong&gt;__builtin_huge_valf&lt;var&gt;n&lt;/var&gt;x&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005fhuge_005fvalfnx&quot;&gt;n&lt;/var&gt; x &lt;strong&gt;__builtin_huge_valf &lt;var&gt;n&lt;/var&gt; x&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="4f4a5dc00bc657abe7ad80938a7d60c8e79b5015" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005finffn&quot;&gt;n&lt;/var&gt;&lt;strong&gt;__builtin_inff&lt;var&gt;n&lt;/var&gt;&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005finffn&quot;&gt;n&lt;/var&gt; &lt;strong&gt;__builtin_inff &lt;var&gt;n&lt;/var&gt; &lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="28b60d24ae373b1240786dec7b198434f539e010" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005finffnx&quot;&gt;n&lt;/var&gt;&lt;strong&gt;__builtin_inff&lt;var&gt;n&lt;/var&gt;x&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005finffnx&quot;&gt;n&lt;/var&gt; &lt;strong&gt;__builtin_inff &lt;var&gt;n&lt;/var&gt; x&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="bf9f5f175d78dc2baeeae0348c4b4da7826acad2" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005fnanfn&quot;&gt;n&lt;/var&gt;&lt;strong&gt;__builtin_nanf&lt;var&gt;n&lt;/var&gt;&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005fnanfn&quot;&gt;n&lt;/var&gt; &lt;strong&gt;__builtin_nanf &lt;var&gt;n&lt;/var&gt; &lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="d8897a35cb1a3842c5a7b59ff4525f61eb36974a" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005fnanfnx&quot;&gt;n&lt;/var&gt;x &lt;strong&gt;__builtin_nanf&lt;var&gt;n&lt;/var&gt;x&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005fnanfnx&quot;&gt;n&lt;/var&gt; x &lt;strong&gt;__builtin_nanf &lt;var&gt;n&lt;/var&gt; x&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="1bd15fd91da1a9d9a87216c52e010f17bc3d22e6" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005fnansfn&quot;&gt;n&lt;/var&gt;&lt;strong&gt;__builtin_nansf&lt;var&gt;n&lt;/var&gt;&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005fnansfn&quot;&gt;n&lt;/var&gt; &lt;strong&gt;__builtin_nansf &lt;var&gt;n&lt;/var&gt; &lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="615e03fdb9ea794729a2a1d7c358b1e301921c3b" translate="yes" xml:space="preserve">
          <source>Built-in Function: _Float&lt;var id=&quot;index-_005f_005fbuiltin_005fnansfnx&quot;&gt;n&lt;/var&gt;x &lt;strong&gt;__builtin_nansf&lt;var&gt;n&lt;/var&gt;x&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: _Float &lt;var id=&quot;index-_005f_005fbuiltin_005fnansfnx&quot;&gt;n&lt;/var&gt; x &lt;strong&gt;__builtin_nansf &lt;var&gt;n&lt;/var&gt; x&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="f520d1247e2979f87ba6e5662e70795dbd438963" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fatomic_005falways_005flock_005ffree&quot;&gt;__atomic_always_lock_free&lt;/strong&gt; (size_t size, void *ptr)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fatomic_005falways_005flock_005ffree&quot;&gt;__atomic_always_lock_free&lt;/strong&gt; (size_t size, void * ptr)</target>
        </trans-unit>
        <trans-unit id="24b1fe88fa6197e2c0740249ab472fde949dc447" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fatomic_005fcompare_005fexchange&quot;&gt;__atomic_compare_exchange&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; *expected, &lt;var&gt;type&lt;/var&gt; *desired, bool weak, int success_memorder, int failure_memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fatomic_005fcompare_005fexchange&quot;&gt;__atomic_compare_exchange&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; * esperado, &lt;var&gt;type&lt;/var&gt; * deseado, bool d&amp;eacute;bil, int success_memorder, int failure_memorder)</target>
        </trans-unit>
        <trans-unit id="e0cae369ba572d6fc730f1208ec5ebfd8c31b5c9" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fatomic_005fcompare_005fexchange_005fn&quot;&gt;__atomic_compare_exchange_n&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; *expected, &lt;var&gt;type&lt;/var&gt; desired, bool weak, int success_memorder, int failure_memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fatomic_005fcompare_005fexchange_005fn&quot;&gt;__atomic_compare_exchange_n&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; * esperado, &lt;var&gt;type&lt;/var&gt; deseado, bool d&amp;eacute;bil, int success_memorder, int failure_memorder)</target>
        </trans-unit>
        <trans-unit id="e6ff9b335ec817f16bd5f09bc44d64b4868726b1" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fatomic_005fis_005flock_005ffree&quot;&gt;__atomic_is_lock_free&lt;/strong&gt; (size_t size, void *ptr)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fatomic_005fis_005flock_005ffree&quot;&gt;__atomic_is_lock_free&lt;/strong&gt; (size_t size, void * ptr)</target>
        </trans-unit>
        <trans-unit id="24aee6114b477fd331dab8c2aef844fb97f49851" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fatomic_005ftest_005fand_005fset&quot;&gt;__atomic_test_and_set&lt;/strong&gt; (void *ptr, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fatomic_005ftest_005fand_005fset&quot;&gt;__atomic_test_and_set&lt;/strong&gt; (void * ptr, int memorder)</target>
        </trans-unit>
        <trans-unit id="64b8a4ae04512641547c12a9c73d39675cb460a9" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fadd_005foverflow&quot;&gt;__builtin_add_overflow&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fadd_005foverflow&quot;&gt;__builtin_add_overflow&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; * res)</target>
        </trans-unit>
        <trans-unit id="af59554b89a8bf55a3dc48af48346f20f06e852a" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fadd_005foverflow_005fp&quot;&gt;__builtin_add_overflow_p&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; c)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fadd_005foverflow_005fp&quot;&gt;__builtin_add_overflow_p&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; c)</target>
        </trans-unit>
        <trans-unit id="be98828c48e0d16aa6b6e2421edf84970dc86a6f" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fhas_005fattribute-1&quot;&gt;__builtin_has_attribute&lt;/strong&gt; (&lt;var&gt;type-or-expression&lt;/var&gt;, &lt;var&gt;attribute&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fhas_005fattribute-1&quot;&gt;__builtin_has_attribute&lt;/strong&gt; ( &lt;var&gt;type-or-expression&lt;/var&gt; , &lt;var&gt;attribute&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="b7e50b8a64da2b188793a4579bb5cae5cac82268" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fis_005fconstant_005fevaluated&quot;&gt;__builtin_is_constant_evaluated&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fis_005fconstant_005fevaluated&quot;&gt;__builtin_is_constant_evaluate&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="ee9d3aabacf2156e5d393cd93749ff7c8037d66e" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fmul_005foverflow&quot;&gt;__builtin_mul_overflow&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fmul_005foverflow&quot;&gt;__builtin_mul_overflow&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; * res)</target>
        </trans-unit>
        <trans-unit id="8fd735437fc9239fd342fe45001594bf9731cdde" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fmul_005foverflow_005fp&quot;&gt;__builtin_mul_overflow_p&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; c)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fmul_005foverflow_005fp&quot;&gt;__builtin_mul_overflow_p&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; c)</target>
        </trans-unit>
        <trans-unit id="25ee4265411f06ce5b584d4448bc72ef70be2921" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsadd_005foverflow&quot;&gt;__builtin_sadd_overflow&lt;/strong&gt; (int a, int b, int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsadd_005foverflow&quot;&gt;__builtin_sadd_overflow&lt;/strong&gt; (int a, int b, int * res)</target>
        </trans-unit>
        <trans-unit id="69472084a70d9c551110645ab2de32722f859a56" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsaddl_005foverflow&quot;&gt;__builtin_saddl_overflow&lt;/strong&gt; (long int a, long int b, long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsaddl_005foverflow&quot;&gt;__builtin_saddl_overflow&lt;/strong&gt; (long int a, long int b, long int * res)</target>
        </trans-unit>
        <trans-unit id="d167da624174d67a584837afb39ffafce3529192" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsaddll_005foverflow&quot;&gt;__builtin_saddll_overflow&lt;/strong&gt; (long long int a, long long int b, long long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsaddll_005foverflow&quot;&gt;__builtin_saddll_overflow&lt;/strong&gt; (long long int a, long long int b, long long int * res)</target>
        </trans-unit>
        <trans-unit id="0751d990e1a6176428723a69b8b9d35eb80fd837" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsmul_005foverflow&quot;&gt;__builtin_smul_overflow&lt;/strong&gt; (int a, int b, int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsmul_005foverflow&quot;&gt;__builtin_smul_overflow&lt;/strong&gt; (int a, int b, int * res)</target>
        </trans-unit>
        <trans-unit id="956b1e662b4c40d70010047e2d0274713e3963f3" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsmull_005foverflow&quot;&gt;__builtin_smull_overflow&lt;/strong&gt; (long int a, long int b, long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsmull_005foverflow&quot;&gt;__builtin_smull_overflow&lt;/strong&gt; (long int a, long int b, long int * res)</target>
        </trans-unit>
        <trans-unit id="90b14c01667b17099ca43e693ecf1b190d3e0c9b" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsmulll_005foverflow&quot;&gt;__builtin_smulll_overflow&lt;/strong&gt; (long long int a, long long int b, long long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsmulll_005foverflow&quot;&gt;__builtin_smulll_overflow&lt;/strong&gt; (long long int a, long long int b, long long int * res)</target>
        </trans-unit>
        <trans-unit id="77b2f488874750806435b3aaff4f191420925191" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fssub_005foverflow&quot;&gt;__builtin_ssub_overflow&lt;/strong&gt; (int a, int b, int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fssub_005foverflow&quot;&gt;__builtin_ssub_overflow&lt;/strong&gt; (int a, int b, int * res)</target>
        </trans-unit>
        <trans-unit id="49724eb9cf1b5f433d9a763058afdd03539a15c8" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fssubl_005foverflow&quot;&gt;__builtin_ssubl_overflow&lt;/strong&gt; (long int a, long int b, long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fssubl_005foverflow&quot;&gt;__builtin_ssubl_overflow&lt;/strong&gt; (long int a, long int b, long int * res)</target>
        </trans-unit>
        <trans-unit id="8bb17f1956b296109f50ac2e4c7c8a50ec613924" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fssubll_005foverflow&quot;&gt;__builtin_ssubll_overflow&lt;/strong&gt; (long long int a, long long int b, long long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fssubll_005foverflow&quot;&gt;__builtin_ssubll_overflow&lt;/strong&gt; (long long int a, long long int b, long long int * res)</target>
        </trans-unit>
        <trans-unit id="3ca0d6297a605dc41e2b859a3577a44be6641a95" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsub_005foverflow&quot;&gt;__builtin_sub_overflow&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsub_005foverflow&quot;&gt;__builtin_sub_overflow&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; * res)</target>
        </trans-unit>
        <trans-unit id="cc3ccbf74e07a994d7fa1a99c72273b8a5afff58" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsub_005foverflow_005fp&quot;&gt;__builtin_sub_overflow_p&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; c)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fsub_005foverflow_005fp&quot;&gt;__builtin_sub_overflow_p&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; a, &lt;var&gt;type2&lt;/var&gt; b, &lt;var&gt;type3&lt;/var&gt; c)</target>
        </trans-unit>
        <trans-unit id="5b02b9649ef1800e43226f7e7109d8bbef8357dc" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fuadd_005foverflow&quot;&gt;__builtin_uadd_overflow&lt;/strong&gt; (unsigned int a, unsigned int b, unsigned int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fuadd_005foverflow&quot;&gt;__builtin_uadd_overflow&lt;/strong&gt; (unsigned int a, unsigned int b, unsigned int * res)</target>
        </trans-unit>
        <trans-unit id="567411aa095944ed062923c573393ad7b9494fcc" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fuaddl_005foverflow&quot;&gt;__builtin_uaddl_overflow&lt;/strong&gt; (unsigned long int a, unsigned long int b, unsigned long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fuaddl_005foverflow&quot;&gt;__builtin_uaddl_overflow&lt;/strong&gt; (unsigned long int a, unsigned long int b, unsigned long int * res)</target>
        </trans-unit>
        <trans-unit id="a7d580478c24cd4b2a59ce2c1f75d3bbd1e01675" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fuaddll_005foverflow&quot;&gt;__builtin_uaddll_overflow&lt;/strong&gt; (unsigned long long int a, unsigned long long int b, unsigned long long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fuaddll_005foverflow&quot;&gt;__builtin_uaddll_overflow&lt;/strong&gt; (unsigned long long int a, unsigned long long int b, unsigned long long int * res)</target>
        </trans-unit>
        <trans-unit id="4df720b89a79aa504ee2325733fecf62f5d154df" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fumul_005foverflow&quot;&gt;__builtin_umul_overflow&lt;/strong&gt; (unsigned int a, unsigned int b, unsigned int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fumul_005foverflow&quot;&gt;__builtin_umul_overflow&lt;/strong&gt; (unsigned int a, unsigned int b, unsigned int * res)</target>
        </trans-unit>
        <trans-unit id="127b7aa724932fc0c15543b161cf5ca336f40c65" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fumull_005foverflow&quot;&gt;__builtin_umull_overflow&lt;/strong&gt; (unsigned long int a, unsigned long int b, unsigned long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fumull_005foverflow&quot;&gt;__builtin_umull_overflow&lt;/strong&gt; (unsigned long int a, unsigned long int b, unsigned long int * res)</target>
        </trans-unit>
        <trans-unit id="6e0e5de085f1421cd056a7b7c2d1ac4593a791e8" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fumulll_005foverflow&quot;&gt;__builtin_umulll_overflow&lt;/strong&gt; (unsigned long long int a, unsigned long long int b, unsigned long long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fumulll_005foverflow&quot;&gt;__builtin_umulll_overflow&lt;/strong&gt; (unsigned long long int a, unsigned long long int b, unsigned long long int * res)</target>
        </trans-unit>
        <trans-unit id="43f0099aa9a654a142bfe318e5e28643d8ddc6f6" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fusub_005foverflow&quot;&gt;__builtin_usub_overflow&lt;/strong&gt; (unsigned int a, unsigned int b, unsigned int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fusub_005foverflow&quot;&gt;__builtin_usub_overflow&lt;/strong&gt; (unsigned int a, unsigned int b, unsigned int * res)</target>
        </trans-unit>
        <trans-unit id="1c5542c5653c759c2ffcd0eb56e8e4fce2653611" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fusubl_005foverflow&quot;&gt;__builtin_usubl_overflow&lt;/strong&gt; (unsigned long int a, unsigned long int b, unsigned long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fusubl_005foverflow&quot;&gt;__builtin_usubl_overflow&lt;/strong&gt; (unsigned long int a, unsigned long int b, unsigned long int * res)</target>
        </trans-unit>
        <trans-unit id="8967205f7b6c405e734e918e4030fc20dcc7a6e8" translate="yes" xml:space="preserve">
          <source>Built-in Function: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fusubll_005foverflow&quot;&gt;__builtin_usubll_overflow&lt;/strong&gt; (unsigned long long int a, unsigned long long int b, unsigned long long int *res)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: bool &lt;strong id=&quot;index-_005f_005fbuiltin_005fusubll_005foverflow&quot;&gt;__builtin_usubll_overflow&lt;/strong&gt; (unsigned long long int a, unsigned long long int b, unsigned long long int * res)</target>
        </trans-unit>
        <trans-unit id="3d3ebe01d55449070f5b00bc45933b6ab0472f70" translate="yes" xml:space="preserve">
          <source>Built-in Function: const char * &lt;strong id=&quot;index-_005f_005fbuiltin_005fFILE&quot;&gt;__builtin_FILE&lt;/strong&gt; ()</source>
          <target state="translated">Funci&amp;oacute;n incorporada: const char * &lt;strong id=&quot;index-_005f_005fbuiltin_005fFILE&quot;&gt;__builtin_FILE&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="0721ec3a797458f28da3b2711e9fc2d2af1823e2" translate="yes" xml:space="preserve">
          <source>Built-in Function: const char * &lt;strong id=&quot;index-_005f_005fbuiltin_005fFUNCTION&quot;&gt;__builtin_FUNCTION&lt;/strong&gt; ()</source>
          <target state="translated">Funci&amp;oacute;n incorporada: const char * &lt;strong id=&quot;index-_005f_005fbuiltin_005fFUNCTION&quot;&gt;__builtin_FUNCTION&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="2a1712d1ad359c0cac12cd7a3537116bd9e795fc" translate="yes" xml:space="preserve">
          <source>Built-in Function: double &lt;strong id=&quot;index-_005f_005fbuiltin_005fhuge_005fval&quot;&gt;__builtin_huge_val&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble &lt;strong id=&quot;index-_005f_005fbuiltin_005fhuge_005fval&quot;&gt;__builtin_huge_val&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="ffafe4d74af74fb9ca60ea9821704b751632b93c" translate="yes" xml:space="preserve">
          <source>Built-in Function: double &lt;strong id=&quot;index-_005f_005fbuiltin_005finf&quot;&gt;__builtin_inf&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble &lt;strong id=&quot;index-_005f_005fbuiltin_005finf&quot;&gt;__builtin_inf&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="2864a0d09a57cc7f91ca4ff8697942e0585349f6" translate="yes" xml:space="preserve">
          <source>Built-in Function: double &lt;strong id=&quot;index-_005f_005fbuiltin_005fnan&quot;&gt;__builtin_nan&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble &lt;strong id=&quot;index-_005f_005fbuiltin_005fnan&quot;&gt;__builtin_nan&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="51bc6d3e017f472618e17d8b483f22c00009407c" translate="yes" xml:space="preserve">
          <source>Built-in Function: double &lt;strong id=&quot;index-_005f_005fbuiltin_005fnans&quot;&gt;__builtin_nans&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble &lt;strong id=&quot;index-_005f_005fbuiltin_005fnans&quot;&gt;__builtin_nans&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="b40603712a54f648b2195d490214834e3f8465f8" translate="yes" xml:space="preserve">
          <source>Built-in Function: double &lt;strong id=&quot;index-_005f_005fbuiltin_005fpowi-1&quot;&gt;__builtin_powi&lt;/strong&gt; (double, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble &lt;strong id=&quot;index-_005f_005fbuiltin_005fpowi-1&quot;&gt;__builtin_powi&lt;/strong&gt; (doble, int)</target>
        </trans-unit>
        <trans-unit id="37264a6694867df8b96fcd2a07266108a13c8c2e" translate="yes" xml:space="preserve">
          <source>Built-in Function: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fhuge_005fvalf&quot;&gt;__builtin_huge_valf&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fhuge_005fvalf&quot;&gt;__builtin_huge_valf&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="605b7b7bd5e72cf972739ddb673591e051dadcd8" translate="yes" xml:space="preserve">
          <source>Built-in Function: float &lt;strong id=&quot;index-_005f_005fbuiltin_005finff&quot;&gt;__builtin_inff&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: float &lt;strong id=&quot;index-_005f_005fbuiltin_005finff&quot;&gt;__builtin_inff&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="a84c6b7adfcd7dc51b670ecde42ed816377e7198" translate="yes" xml:space="preserve">
          <source>Built-in Function: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fnanf&quot;&gt;__builtin_nanf&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fnanf&quot;&gt;__builtin_nanf&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="ae6f3577a561b5595beef7b2c40d9183bbecdc53" translate="yes" xml:space="preserve">
          <source>Built-in Function: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fnansf&quot;&gt;__builtin_nansf&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fnansf&quot;&gt;__builtin_nansf&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="a17547d96b5dcfda1585e7b927ed2efd4413b34e" translate="yes" xml:space="preserve">
          <source>Built-in Function: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fpowif-1&quot;&gt;__builtin_powif&lt;/strong&gt; (float, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: float &lt;strong id=&quot;index-_005f_005fbuiltin_005fpowif-1&quot;&gt;__builtin_powif&lt;/strong&gt; (float, int)</target>
        </trans-unit>
        <trans-unit id="5af70608a64ebe69db59d9a08864316c44173d0e" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fLINE&quot;&gt;__builtin_LINE&lt;/strong&gt; ()</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fLINE&quot;&gt;__builtin_LINE&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="48642fe0ecb713fe1c2c62aceb4756a077c1f773" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005faligned&quot;&gt;__builtin_arc_aligned&lt;/strong&gt; (void *&lt;var&gt;val&lt;/var&gt;, int &lt;var&gt;alignval&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005faligned&quot;&gt;__builtin_arc_aligned&lt;/strong&gt; (void * &lt;var&gt;val&lt;/var&gt; , int &lt;var&gt;alignval&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="d03ad02fdd87a3d6c105f1b3776333e8f10a10d5" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fdivaw&quot;&gt;__builtin_arc_divaw&lt;/strong&gt; (int &lt;var&gt;a&lt;/var&gt;, int &lt;var&gt;b&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fdivaw&quot;&gt;__builtin_arc_divaw&lt;/strong&gt; (int &lt;var&gt;a&lt;/var&gt; , int &lt;var&gt;b&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="9c45a4bbd1df9874258bef23963c99d6fdf07ecc" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fnorm&quot;&gt;__builtin_arc_norm&lt;/strong&gt; (int &lt;var&gt;src&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fnorm&quot;&gt;__builtin_arc_norm&lt;/strong&gt; (int &lt;var&gt;src&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="343cfc12f31c0a60920faf8b433b92fcf3f860cf" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fswap&quot;&gt;__builtin_arc_swap&lt;/strong&gt; (int &lt;var&gt;src&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fswap&quot;&gt;__builtin_arc_swap&lt;/strong&gt; (int &lt;var&gt;src&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="4d84191dd5a2bd1c0e1ed8ebf20f4a6e76b3cbe6" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclrsb&quot;&gt;__builtin_clrsb&lt;/strong&gt; (int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclrsb&quot;&gt;__builtin_clrsb&lt;/strong&gt; (int x)</target>
        </trans-unit>
        <trans-unit id="26c48a9f003c2411e7dd88432db5f58cb7b19302" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclrsbl&quot;&gt;__builtin_clrsbl&lt;/strong&gt; (long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclrsbl&quot;&gt;__builtin_clrsbl&lt;/strong&gt; (long)</target>
        </trans-unit>
        <trans-unit id="def7076c73776e0b25f88bdee6855cecbffd2e2a" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclrsbll&quot;&gt;__builtin_clrsbll&lt;/strong&gt; (long long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclrsbll&quot;&gt;__builtin_clrsbll&lt;/strong&gt; (long long)</target>
        </trans-unit>
        <trans-unit id="68a0ab60ba16fc861473b90def46ecb8b60b639d" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclz&quot;&gt;__builtin_clz&lt;/strong&gt; (unsigned int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclz&quot;&gt;__builtin_clz&lt;/strong&gt; (unsigned int x)</target>
        </trans-unit>
        <trans-unit id="af52cee1c123c25328e32f99b41a08f4a5682992" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclzl&quot;&gt;__builtin_clzl&lt;/strong&gt; (unsigned long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclzl&quot;&gt;__builtin_clzl&lt;/strong&gt; (unsigned long)</target>
        </trans-unit>
        <trans-unit id="f3a7c4157a06fcdbaf2b34c2852b5f5191d70ac6" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclzll&quot;&gt;__builtin_clzll&lt;/strong&gt; (unsigned long long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fclzll&quot;&gt;__builtin_clzll&lt;/strong&gt; (unsigned long long)</target>
        </trans-unit>
        <trans-unit id="e47a14a24701e5c3353b9003a2bdd96c5e473a94" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fconstant_005fp&quot;&gt;__builtin_constant_p&lt;/strong&gt; (&lt;var&gt;exp&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fconstant_005fp&quot;&gt;__builtin_constant_p&lt;/strong&gt; ( &lt;var&gt;exp&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="ef14ea6a7a4d27be1b6d59915aed4bf7b4b1a9b6" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fis&quot;&gt;__builtin_cpu_is&lt;/strong&gt; (const char *&lt;var&gt;cpuname&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fis&quot;&gt;__builtin_cpu_is&lt;/strong&gt; (const char * &lt;var&gt;cpuname&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="b3f1d6da484baf586ba4417cd2ac456d3490d574" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fis-1&quot;&gt;__builtin_cpu_is&lt;/strong&gt; (const char *&lt;var&gt;cpuname&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fis-1&quot;&gt;__builtin_cpu_is&lt;/strong&gt; (const char * &lt;var&gt;cpuname&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="8f5e90517840f43dd21b0d12105cc6839b7ba276" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fsupports&quot;&gt;__builtin_cpu_supports&lt;/strong&gt; (const char *&lt;var&gt;feature&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fsupports&quot;&gt;__builtin_cpu_supports&lt;/strong&gt; (const char * &lt;var&gt;feature&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="be485791899d037b9a8263a3418dab2b9ad4f3b5" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fsupports-1&quot;&gt;__builtin_cpu_supports&lt;/strong&gt; (const char *&lt;var&gt;feature&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005fsupports-1&quot;&gt;__builtin_cpu_supports&lt;/strong&gt; (const char * &lt;var&gt;feature&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="7f22b95a5cdd587669aed9814a5480962c20cb7d" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fctz&quot;&gt;__builtin_ctz&lt;/strong&gt; (unsigned int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fctz&quot;&gt;__builtin_ctz&lt;/strong&gt; (unsigned int x)</target>
        </trans-unit>
        <trans-unit id="8e1e06b0d6fb4ae3123c409271d97e77380c487c" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fctzl&quot;&gt;__builtin_ctzl&lt;/strong&gt; (unsigned long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fctzl&quot;&gt;__builtin_ctzl&lt;/strong&gt; (unsigned long)</target>
        </trans-unit>
        <trans-unit id="20a1238733f66fff846c6029aaa32b6b42066621" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fctzll&quot;&gt;__builtin_ctzll&lt;/strong&gt; (unsigned long long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fctzll&quot;&gt;__builtin_ctzll&lt;/strong&gt; (unsigned long long)</target>
        </trans-unit>
        <trans-unit id="0937729bdd117da89bde58b2fd5056203d7a7e12" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fffs&quot;&gt;__builtin_ffs&lt;/strong&gt; (int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fffs&quot;&gt;__builtin_ffs&lt;/strong&gt; (int x)</target>
        </trans-unit>
        <trans-unit id="c820dda274694fd7c04aa653b01ff9cf75ba5bae" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fffsl&quot;&gt;__builtin_ffsl&lt;/strong&gt; (long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fffsl&quot;&gt;__builtin_ffsl&lt;/strong&gt; (long)</target>
        </trans-unit>
        <trans-unit id="0419174c77d9db8a178954419d9e7c6e3dc80183" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fffsll&quot;&gt;__builtin_ffsll&lt;/strong&gt; (long long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fffsll&quot;&gt;__builtin_ffsll&lt;/strong&gt; (long long)</target>
        </trans-unit>
        <trans-unit id="d32b1e79ff752f0a0ce225c7feb84f484de727e9" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ffpclassify-1&quot;&gt;__builtin_fpclassify&lt;/strong&gt; (int, int, int, int, int, ...)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ffpclassify-1&quot;&gt;__builtin_fpclassify&lt;/strong&gt; (int, int, int, int, int, ...)</target>
        </trans-unit>
        <trans-unit id="e67b5cb4d37226ea2da9240fb2bf4c5fbfb5a8e1" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fgoacc_005fparlevel_005fid&quot;&gt;__builtin_goacc_parlevel_id&lt;/strong&gt; (int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fgoacc_005fparlevel_005fid&quot;&gt;__builtin_goacc_parlevel_id&lt;/strong&gt; (int x)</target>
        </trans-unit>
        <trans-unit id="6e97eb7d6696130c1b12f3a195f09c5fe85037ac" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fgoacc_005fparlevel_005fsize&quot;&gt;__builtin_goacc_parlevel_size&lt;/strong&gt; (int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fgoacc_005fparlevel_005fsize&quot;&gt;__builtin_goacc_parlevel_size&lt;/strong&gt; (int x)</target>
        </trans-unit>
        <trans-unit id="6d1c7c86aea003afe938bab829e378b0663f340f" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fisinf_005fsign-1&quot;&gt;__builtin_isinf_sign&lt;/strong&gt; (...)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fisinf_005fsign-1&quot;&gt;__builtin_isinf_sign&lt;/strong&gt; (...)</target>
        </trans-unit>
        <trans-unit id="b6364cb6c54b3f23f200e94c257634d572b72a2b" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmfsr&quot;&gt;__builtin_nds32_mfsr&lt;/strong&gt; (int &lt;var&gt;sr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmfsr&quot;&gt;__builtin_nds32_mfsr&lt;/strong&gt; (int &lt;var&gt;sr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="75355c68c6a70985d49c27c009882adbab77b765" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmfusr&quot;&gt;__builtin_nds32_mfusr&lt;/strong&gt; (int &lt;var&gt;usr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmfusr&quot;&gt;__builtin_nds32_mfusr&lt;/strong&gt; (int &lt;var&gt;usr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="4ea0be9b20abc1e8c8611e711574fc9d068aecdf" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fparity&quot;&gt;__builtin_parity&lt;/strong&gt; (unsigned int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fparity&quot;&gt;__builtin_parity&lt;/strong&gt; (unsigned int x)</target>
        </trans-unit>
        <trans-unit id="d2674768572b8928e01401026a8478558c974780" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fparityl&quot;&gt;__builtin_parityl&lt;/strong&gt; (unsigned long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fparityl&quot;&gt;__builtin_parityl&lt;/strong&gt; (unsigned long)</target>
        </trans-unit>
        <trans-unit id="ee9664e69ce71d737f813b0b4d98ebf2574871d2" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fparityll&quot;&gt;__builtin_parityll&lt;/strong&gt; (unsigned long long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fparityll&quot;&gt;__builtin_parityll&lt;/strong&gt; (unsigned long long)</target>
        </trans-unit>
        <trans-unit id="f4ff1595ae9b712ea80b334ac2a6cdea20f82b68" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fpopcount&quot;&gt;__builtin_popcount&lt;/strong&gt; (unsigned int x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fpopcount&quot;&gt;__builtin_popcount&lt;/strong&gt; (unsigned int x)</target>
        </trans-unit>
        <trans-unit id="06a51eea95b9b1a09db27133b891662e30ce0448" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fpopcountl&quot;&gt;__builtin_popcountl&lt;/strong&gt; (unsigned long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fpopcountl&quot;&gt;__builtin_popcountl&lt;/strong&gt; (unsigned long)</target>
        </trans-unit>
        <trans-unit id="cdd076b3e2da0133a80ede36a8b399d240589b8d" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fpopcountll&quot;&gt;__builtin_popcountll&lt;/strong&gt; (unsigned long long)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fpopcountll&quot;&gt;__builtin_popcountll&lt;/strong&gt; (unsigned long long)</target>
        </trans-unit>
        <trans-unit id="81ba97f2fd93c345aa1ebd2ae07061c6b3b1e18d" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvfachi&quot;&gt;__builtin_rx_mvfachi&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvfachi&quot;&gt;__builtin_rx_mvfachi&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="bc349ef1269f6645b577d9e0423a3da86a3c0c64" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvfacmi&quot;&gt;__builtin_rx_mvfacmi&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvfacmi&quot;&gt;__builtin_rx_mvfacmi&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="3c6283c7dae9e9bf7ecb0b6d081f4b083bb18c46" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvfc&quot;&gt;__builtin_rx_mvfc&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvfc&quot;&gt;__builtin_rx_mvfc&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="061b61de0614f91eda3a2e79ebd09fdb750a9e0f" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005frevw&quot;&gt;__builtin_rx_revw&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005frevw&quot;&gt;__builtin_rx_revw&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="90ac1419f6405c9d67980323a8c6db2b17519fa4" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fsat&quot;&gt;__builtin_rx_sat&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fsat&quot;&gt;__builtin_rx_sat&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="ba08ce759241ad5b54043023fc31cb69ea10ef12" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fsetjmp&quot;&gt;__builtin_setjmp&lt;/strong&gt; (intptr_t *&lt;var&gt;buf&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005fsetjmp&quot;&gt;__builtin_setjmp&lt;/strong&gt; (intptr_t * &lt;var&gt;buf&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="3b5f4e2e49e883c140bdde81a146113e7826c6e9" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin&quot;&gt;__builtin_tbegin&lt;/strong&gt; (void*)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin&quot;&gt;__builtin_tbegin&lt;/strong&gt; (void *)</target>
        </trans-unit>
        <trans-unit id="00769436b2cde422b3b7011657e79f1018006b03" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin_005fnofloat&quot;&gt;__builtin_tbegin_nofloat&lt;/strong&gt; (void*)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin_005fnofloat&quot;&gt;__builtin_tbegin_nofloat&lt;/strong&gt; (void *)</target>
        </trans-unit>
        <trans-unit id="b626c4c35bdf8b837ccbdac21dccf04d3259501c" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin_005fretry&quot;&gt;__builtin_tbegin_retry&lt;/strong&gt; (void*, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin_005fretry&quot;&gt;__builtin_tbegin_retry&lt;/strong&gt; (void *, int)</target>
        </trans-unit>
        <trans-unit id="7b0e1df41de31ed2e428c07e756094f54001f4e6" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin_005fretry_005fnofloat&quot;&gt;__builtin_tbegin_retry_nofloat&lt;/strong&gt; (void*, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbegin_005fretry_005fnofloat&quot;&gt;__builtin_tbegin_retry_nofloat&lt;/strong&gt; (void *, int)</target>
        </trans-unit>
        <trans-unit id="5a37cc4aa4480ad9e51ba1642145972ee824d1c3" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftend&quot;&gt;__builtin_tend&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftend&quot;&gt;__builtin_tend&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="b156bfa334cc82648dee3d2f253e789fdf0de655" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftx_005fnesting_005fdepth&quot;&gt;__builtin_tx_nesting_depth&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftx_005fnesting_005fdepth&quot;&gt;__builtin_tx_nesting_depth&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="7d1b9cf1258d4a3f36ac2384619d6f6feef8480b" translate="yes" xml:space="preserve">
          <source>Built-in Function: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftypes_005fcompatible_005fp&quot;&gt;__builtin_types_compatible_p&lt;/strong&gt; (&lt;var&gt;type1&lt;/var&gt;, &lt;var&gt;type2&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: int &lt;strong id=&quot;index-_005f_005fbuiltin_005ftypes_005fcompatible_005fp&quot;&gt;__builtin_types_compatible_p&lt;/strong&gt; ( &lt;var&gt;type1&lt;/var&gt; , &lt;var&gt;type2&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="ab0fd3c8fa261ef1e9881453b5ce3996db8b353f" translate="yes" xml:space="preserve">
          <source>Built-in Function: long &lt;strong id=&quot;index-_005f_005fbuiltin_005fexpect&quot;&gt;__builtin_expect&lt;/strong&gt; (long &lt;var&gt;exp&lt;/var&gt;, long &lt;var&gt;c&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: long &lt;strong id=&quot;index-_005f_005fbuiltin_005fexpect&quot;&gt;__builtin_expect&lt;/strong&gt; (long &lt;var&gt;exp&lt;/var&gt; , long &lt;var&gt;c&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="f748429dddf7f60efd21f75bc9d96a2f04db2076" translate="yes" xml:space="preserve">
          <source>Built-in Function: long &lt;strong id=&quot;index-_005f_005fbuiltin_005fexpect_005fwith_005fprobability&quot;&gt;__builtin_expect_with_probability&lt;/strong&gt;</source>
          <target state="translated">Funci&amp;oacute;n incorporada: long &lt;strong id=&quot;index-_005f_005fbuiltin_005fexpect_005fwith_005fprobability&quot;&gt;__builtin_expect_with_probability&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="971be5dbeae5d7765bfe0bd927cc0410ae39a447" translate="yes" xml:space="preserve">
          <source>Built-in Function: long double &lt;strong id=&quot;index-_005f_005fbuiltin_005fhuge_005fvall&quot;&gt;__builtin_huge_vall&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble largo &lt;strong id=&quot;index-_005f_005fbuiltin_005fhuge_005fvall&quot;&gt;__builtin_huge_vall&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="f890816fdc58a1aea60b82df935d886c00b2bf15" translate="yes" xml:space="preserve">
          <source>Built-in Function: long double &lt;strong id=&quot;index-_005f_005fbuiltin_005finfl&quot;&gt;__builtin_infl&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble largo &lt;strong id=&quot;index-_005f_005fbuiltin_005finfl&quot;&gt;__builtin_infl&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="4324db719b621df0af588063a194c3f4173810b5" translate="yes" xml:space="preserve">
          <source>Built-in Function: long double &lt;strong id=&quot;index-_005f_005fbuiltin_005fnanl&quot;&gt;__builtin_nanl&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble largo &lt;strong id=&quot;index-_005f_005fbuiltin_005fnanl&quot;&gt;__builtin_nanl&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="05afbb2ee64f8e1c3ac88b778a44096576c7f966" translate="yes" xml:space="preserve">
          <source>Built-in Function: long double &lt;strong id=&quot;index-_005f_005fbuiltin_005fnansl&quot;&gt;__builtin_nansl&lt;/strong&gt; (const char *str)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble largo &lt;strong id=&quot;index-_005f_005fbuiltin_005fnansl&quot;&gt;__builtin_nansl&lt;/strong&gt; (const char * str)</target>
        </trans-unit>
        <trans-unit id="2b868b2b6ef31f0d2806eabe890d6c604ddddf56" translate="yes" xml:space="preserve">
          <source>Built-in Function: long double &lt;strong id=&quot;index-_005f_005fbuiltin_005fpowil-1&quot;&gt;__builtin_powil&lt;/strong&gt; (long double, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: doble largo &lt;strong id=&quot;index-_005f_005fbuiltin_005fpowil-1&quot;&gt;__builtin_powil&lt;/strong&gt; (doble largo, int)</target>
        </trans-unit>
        <trans-unit id="d356427c6ff17cd4bc34021c1341be077bc0c8a1" translate="yes" xml:space="preserve">
          <source>Built-in Function: short int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fnormw&quot;&gt;__builtin_arc_normw&lt;/strong&gt; (short int &lt;var&gt;src&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: short int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fnormw&quot;&gt;__builtin_arc_normw&lt;/strong&gt; (short int &lt;var&gt;src&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="f029118b8798750fa6c678264c3c7762285f4d28" translate="yes" xml:space="preserve">
          <source>Built-in Function: size_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fobject_005fsize-1&quot;&gt;__builtin_object_size&lt;/strong&gt; (const void * &lt;var&gt;ptr&lt;/var&gt;, int &lt;var&gt;type&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: size_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fobject_005fsize-1&quot;&gt;__builtin_object_size&lt;/strong&gt; (const void * &lt;var&gt;ptr&lt;/var&gt; , int &lt;var&gt;type&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="e7554947332f78bb70c0521290e9a6608845a4d1" translate="yes" xml:space="preserve">
          <source>Built-in Function: size_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fobject_005fsize-3&quot;&gt;__builtin_object_size&lt;/strong&gt; (const void * &lt;var&gt;ptr&lt;/var&gt;, int &lt;var&gt;type&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: size_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fobject_005fsize-3&quot;&gt;__builtin_object_size&lt;/strong&gt; (const void * &lt;var&gt;ptr&lt;/var&gt; , int &lt;var&gt;type&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="989a30653b65ffed34f5682558a8970a9aa0e644" translate="yes" xml:space="preserve">
          <source>Built-in Function: size_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fva_005farg_005fpack_005flen&quot;&gt;__builtin_va_arg_pack_len&lt;/strong&gt; ()</source>
          <target state="translated">Funci&amp;oacute;n incorporada: size_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fva_005farg_005fpack_005flen&quot;&gt;__builtin_va_arg_pack_len&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="22d331467c48fe2922c4d1d28e785562b4d984a9" translate="yes" xml:space="preserve">
          <source>Built-in Function: uint16_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fbswap16&quot;&gt;__builtin_bswap16&lt;/strong&gt; (uint16_t x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: uint16_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fbswap16&quot;&gt;__builtin_bswap16&lt;/strong&gt; (uint16_t x)</target>
        </trans-unit>
        <trans-unit id="c1726e6c424d7f99d5018566837c4927b7db5948" translate="yes" xml:space="preserve">
          <source>Built-in Function: uint32_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fbswap32&quot;&gt;__builtin_bswap32&lt;/strong&gt; (uint32_t x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: uint32_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fbswap32&quot;&gt;__builtin_bswap32&lt;/strong&gt; (uint32_t x)</target>
        </trans-unit>
        <trans-unit id="3c5352b73e73ceeb994fa2584683f756d8f9d112" translate="yes" xml:space="preserve">
          <source>Built-in Function: uint64_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fbswap64&quot;&gt;__builtin_bswap64&lt;/strong&gt; (uint64_t x)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: uint64_t &lt;strong id=&quot;index-_005f_005fbuiltin_005fbswap64&quot;&gt;__builtin_bswap64&lt;/strong&gt; (uint64_t x)</target>
        </trans-unit>
        <trans-unit id="abc61c858b13f41c2e5ca8e8946562bef29c71f9" translate="yes" xml:space="preserve">
          <source>Built-in Function: unsigned &lt;strong id=&quot;index-long&quot;&gt;long&lt;/strong&gt; long __builtin_bpf_load_byte (unsigned long long &lt;var&gt;offset&lt;/var&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa41c7be715e464532b85eaa4dc6a456f1c00215" translate="yes" xml:space="preserve">
          <source>Built-in Function: unsigned &lt;strong id=&quot;index-long-1&quot;&gt;long&lt;/strong&gt; long __builtin_bpf_load_half (unsigned long long &lt;var&gt;offset&lt;/var&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b96451756f237a6911f0f759acff406d9ac6251" translate="yes" xml:space="preserve">
          <source>Built-in Function: unsigned &lt;strong id=&quot;index-long-2&quot;&gt;long&lt;/strong&gt; long __builtin_bpf_load_word (unsigned long long &lt;var&gt;offset&lt;/var&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509ae15fd2e87932ac8b26cb6b1d223cd12aa699" translate="yes" xml:space="preserve">
          <source>Built-in Function: unsigned int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fcore_005fread&quot;&gt;__builtin_arc_core_read&lt;/strong&gt; (unsigned int &lt;var&gt;regno&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: unsigned int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fcore_005fread&quot;&gt;__builtin_arc_core_read&lt;/strong&gt; (unsigned int &lt;var&gt;regno&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="930e355c3b80a5a9fc58fc1acd0a189dee429782" translate="yes" xml:space="preserve">
          <source>Built-in Function: unsigned int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005flr&quot;&gt;__builtin_arc_lr&lt;/strong&gt; (unsigned int &lt;var&gt;auxr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: unsigned int &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005flr&quot;&gt;__builtin_arc_lr&lt;/strong&gt; (unsigned int &lt;var&gt;auxr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="fe43f813f2eb2f9db208678d8efd3062ab0ae06f" translate="yes" xml:space="preserve">
          <source>Built-in Function: unsigned int &lt;strong id=&quot;index-_005f_005fbuiltin_005fsh_005fget_005ffpscr&quot;&gt;__builtin_sh_get_fpscr&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: unsigned int &lt;strong id=&quot;index-_005f_005fbuiltin_005fsh_005fget_005ffpscr&quot;&gt;__builtin_sh_get_fpscr&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="7bd053e0e0e0c481f2fd8761cce8fb20e0497500" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fapply&quot;&gt;__builtin_apply&lt;/strong&gt; (void (*&lt;var&gt;function&lt;/var&gt;)(), void *&lt;var&gt;arguments&lt;/var&gt;, size_t &lt;var&gt;size&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fapply&quot;&gt;__builtin_apply&lt;/strong&gt; (void (* &lt;var&gt;function&lt;/var&gt; ) (), void * &lt;var&gt;arguments&lt;/var&gt; , size_t &lt;var&gt;size&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="34fa5cc333ec1b465b8bc1469ac13a9805646394" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fapply_005fargs&quot;&gt;__builtin_apply_args&lt;/strong&gt; ()</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fapply_005fargs&quot;&gt;__builtin_apply_args&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="ae3f4e7eb7b92dd81ca2567a194a5a901d0bfe5f" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fassume_005faligned&quot;&gt;__builtin_assume_aligned&lt;/strong&gt; (const void *&lt;var&gt;exp&lt;/var&gt;, size_t &lt;var&gt;align&lt;/var&gt;, ...)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fassume_005faligned&quot;&gt;__builtin_assume_aligned&lt;/strong&gt; (const void * &lt;var&gt;exp&lt;/var&gt; , size_t &lt;var&gt;align&lt;/var&gt; , ...)</target>
        </trans-unit>
        <trans-unit id="89fd532a50930c3b77686313f0365b067e8b2061" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fextract_005freturn_005faddr&quot;&gt;__builtin_extract_return_addr&lt;/strong&gt; (void *&lt;var&gt;addr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fextract_005freturn_005faddr&quot;&gt;__builtin_extract_return_addr&lt;/strong&gt; (void * &lt;var&gt;addr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="af5db4b2531bc00d2c26aa89ffd98b83b1ec2ffd" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fframe_005faddress&quot;&gt;__builtin_frame_address&lt;/strong&gt; (unsigned int &lt;var&gt;level&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fframe_005faddress&quot;&gt;__builtin_frame_address&lt;/strong&gt; ( &lt;var&gt;level&lt;/var&gt; int sin firmar )</target>
        </trans-unit>
        <trans-unit id="d65d4d6005c36effe3b2d9cb5dc89b8f157bffcd" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005ffrob_005freturn_005faddr&quot;&gt;__builtin_frob_return_addr&lt;/strong&gt; (void *&lt;var&gt;addr&lt;/var&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae549b690a18db077d51fc88ddfe8895c32f392" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005ffrob_005freturn_005faddress&quot;&gt;__builtin_frob_return_address&lt;/strong&gt; (void *&lt;var&gt;addr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005ffrob_005freturn_005faddress&quot;&gt;__builtin_frob_return_address&lt;/strong&gt; (void * &lt;var&gt;addr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="570bc19f96ffb431d4ed4e07d4a76a73d90b1bab" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005freturn_005faddress&quot;&gt;__builtin_return_address&lt;/strong&gt; (unsigned int &lt;var&gt;level&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005freturn_005faddress&quot;&gt;__builtin_return_address&lt;/strong&gt; ( &lt;var&gt;level&lt;/var&gt; int sin firmar )</target>
        </trans-unit>
        <trans-unit id="2a17d8a48dd1cfb01e5eca9e0fefb74ccd1f3e19" translate="yes" xml:space="preserve">
          <source>Built-in Function: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fthread_005fpointer&quot;&gt;__builtin_thread_pointer&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void * &lt;strong id=&quot;index-_005f_005fbuiltin_005fthread_005fpointer&quot;&gt;__builtin_thread_pointer&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="f386f8fa1a3ce61aaddb01d8f87e99be90ce722e" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_002a_005f_005fbuiltin_005falloca&quot;&gt;*__builtin_alloca&lt;/strong&gt; (size_t size)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_002a_005f_005fbuiltin_005falloca&quot;&gt;* __ builtin_alloca&lt;/strong&gt; (size_t size)</target>
        </trans-unit>
        <trans-unit id="c063cc66ca8c65c97e5563c39a35ab67426b4796" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_002a_005f_005fbuiltin_005falloca_005fwith_005falign&quot;&gt;*__builtin_alloca_with_align&lt;/strong&gt; (size_t size, size_t alignment)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_002a_005f_005fbuiltin_005falloca_005fwith_005falign&quot;&gt;* __ builtin_alloca_with_align&lt;/strong&gt; (size_t size, size_t alineaci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="9c9a2cc82b83f94f4d0c65d76c51d114da95b31b" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_002a_005f_005fbuiltin_005falloca_005fwith_005falign_005fand_005fmax&quot;&gt;*__builtin_alloca_with_align_and_max&lt;/strong&gt; (size_t size, size_t alignment, size_t max_size)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_002a_005f_005fbuiltin_005falloca_005fwith_005falign_005fand_005fmax&quot;&gt;* __ builtin_alloca_with_align_and_max&lt;/strong&gt; (size_t size, size_t alineaci&amp;oacute;n, size_t max_size)</target>
        </trans-unit>
        <trans-unit id="9362d0fd68d2bba012773ea9bf47a7cf19548a71" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fclear&quot;&gt;__atomic_clear&lt;/strong&gt; (bool *ptr, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fclear&quot;&gt;__atomic_clear&lt;/strong&gt; (bool * ptr, int memorder)</target>
        </trans-unit>
        <trans-unit id="af38ddba7b2c30fcdbcb19cb7f7f28b84121aca6" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fexchange&quot;&gt;__atomic_exchange&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; *val, &lt;var&gt;type&lt;/var&gt; *ret, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fexchange&quot;&gt;__atomic_exchange&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; * val, &lt;var&gt;type&lt;/var&gt; * ret, int memorder)</target>
        </trans-unit>
        <trans-unit id="81cf5ada4648091ed72e1aa65aae72b350e8c4d3" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fload&quot;&gt;__atomic_load&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; *ret, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fload&quot;&gt;__atomic_load&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; * ret, int memorder)</target>
        </trans-unit>
        <trans-unit id="a339c94ea5a60096d289e4b1ba778af9caadce5c" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fsignal_005ffence&quot;&gt;__atomic_signal_fence&lt;/strong&gt; (int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fsignal_005ffence&quot;&gt;__atomic_signal_fence&lt;/strong&gt; (int memorder)</target>
        </trans-unit>
        <trans-unit id="a1bcb5179154226f5bada80a127d69eae1eb5cec" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fstore&quot;&gt;__atomic_store&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; *val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fstore&quot;&gt;__atomic_store&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; * val, int memorder)</target>
        </trans-unit>
        <trans-unit id="0a97d93631348e25f6183eb76cee2e101979f75e" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fstore_005fn&quot;&gt;__atomic_store_n&lt;/strong&gt; (&lt;var&gt;type&lt;/var&gt; *ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fstore_005fn&quot;&gt;__atomic_store_n&lt;/strong&gt; ( &lt;var&gt;type&lt;/var&gt; * ptr, &lt;var&gt;type&lt;/var&gt; val, int memorder)</target>
        </trans-unit>
        <trans-unit id="2d340009d0a0b7de28ca2e66c34cf11a1340bae0" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fatomic_005fthread_005ffence&quot;&gt;__atomic_thread_fence&lt;/strong&gt; (int memorder)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fatomic_005fthread_005ffence&quot;&gt;__atomic_thread_fence&lt;/strong&gt; (int memorder)</target>
        </trans-unit>
        <trans-unit id="de406e12d51eaad788fc9e9d5903dcbf3bcb9513" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005f_005f_005fclear_005fcache&quot;&gt;__builtin___clear_cache&lt;/strong&gt; (void *&lt;var&gt;begin&lt;/var&gt;, void *&lt;var&gt;end&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005f_005f_005fclear_005fcache&quot;&gt;__builtin___clear_cache&lt;/strong&gt; (void * &lt;var&gt;begin&lt;/var&gt; , void * &lt;var&gt;end&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="fbdc79fbdaaac306ca33e716a38d2039cdbc731c" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fbrk&quot;&gt;__builtin_arc_brk&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fbrk&quot;&gt;__builtin_arc_brk&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="41dfbf690d1f1831d27b0be428eb428d5c08e800" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fcore_005fwrite&quot;&gt;__builtin_arc_core_write&lt;/strong&gt; (unsigned int &lt;var&gt;regno&lt;/var&gt;, unsigned int &lt;var&gt;val&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fcore_005fwrite&quot;&gt;__builtin_arc_core_write&lt;/strong&gt; (unsigned int &lt;var&gt;regno&lt;/var&gt; , unsigned int &lt;var&gt;val&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="938747d2d81b773df4eb146dc47c371852f38281" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fflag&quot;&gt;__builtin_arc_flag&lt;/strong&gt; (unsigned int &lt;var&gt;a&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fflag&quot;&gt;__builtin_arc_flag&lt;/strong&gt; (unsigned int &lt;var&gt;a&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="dacbc2eeaf144c8f5f67ca6a60249f78488adc0b" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fmul64&quot;&gt;__builtin_arc_mul64&lt;/strong&gt; (int &lt;var&gt;a&lt;/var&gt;, int &lt;var&gt;b&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fmul64&quot;&gt;__builtin_arc_mul64&lt;/strong&gt; (int &lt;var&gt;a&lt;/var&gt; , int &lt;var&gt;b&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="5df39d3186b8d524cef79461c8ccbf9360ab5670" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fmulu64&quot;&gt;__builtin_arc_mulu64&lt;/strong&gt; (unsigned int &lt;var&gt;a&lt;/var&gt;, unsigned int &lt;var&gt;b&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fmulu64&quot;&gt;__builtin_arc_mulu64&lt;/strong&gt; (unsigned int &lt;var&gt;a&lt;/var&gt; , unsigned int &lt;var&gt;b&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="f6b3b375828d6b123d4a73fe0837a99b6630234e" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fnop&quot;&gt;__builtin_arc_nop&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fnop&quot;&gt;__builtin_arc_nop&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="3e99485526d0fd614866e77c7a635130751c7b1d" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005frtie&quot;&gt;__builtin_arc_rtie&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005frtie&quot;&gt;__builtin_arc_rtie&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="5cc0e84fe67d81076fbea0352fb8f5781564ffca" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fsleep&quot;&gt;__builtin_arc_sleep&lt;/strong&gt; (int &lt;var&gt;a&lt;/var&gt;</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fsleep&quot;&gt;__builtin_arc_sleep&lt;/strong&gt; (int &lt;var&gt;a&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="39ed65244aa708bd181a626a0afcf9435d2147f5" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fsr&quot;&gt;__builtin_arc_sr&lt;/strong&gt; (unsigned int &lt;var&gt;auxr&lt;/var&gt;, unsigned int &lt;var&gt;val&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fsr&quot;&gt;__builtin_arc_sr&lt;/strong&gt; (unsigned int &lt;var&gt;auxr&lt;/var&gt; , unsigned int &lt;var&gt;val&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="f420eb345d10d7bfd574d6a3346de63183adc893" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fswi&quot;&gt;__builtin_arc_swi&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fswi&quot;&gt;__builtin_arc_swi&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="b42e0753d14b76f3a20b1e491681f5295a8dc135" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fsync&quot;&gt;__builtin_arc_sync&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005fsync&quot;&gt;__builtin_arc_sync&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="78cc7129f46ffcafd69b91e8eda56456c2ecced9" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005ftrap_005fs&quot;&gt;__builtin_arc_trap_s&lt;/strong&gt; (unsigned int &lt;var&gt;c&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005ftrap_005fs&quot;&gt;__builtin_arc_trap_s&lt;/strong&gt; (unsigned int &lt;var&gt;c&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="627e1715f16535c4e6e435528706da2168cf77df" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005funimp_005fs&quot;&gt;__builtin_arc_unimp_s&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005farc_005funimp_005fs&quot;&gt;__builtin_arc_unimp_s&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="b29e71f1f17adad688b68068d1063df98d3d4aee" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005finit&quot;&gt;__builtin_cpu_init&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005finit&quot;&gt;__builtin_cpu_init&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="ae429fc5f0112c7890dcdff589f10f47deea16dd" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005finit-1&quot;&gt;__builtin_cpu_init&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fcpu_005finit-1&quot;&gt;__builtin_cpu_init&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="d3cd845b205509711bbf6256051511ce8b3607ab" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005flongjmp&quot;&gt;__builtin_longjmp&lt;/strong&gt; (intptr_t *&lt;var&gt;buf&lt;/var&gt;, int &lt;var&gt;val&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005flongjmp&quot;&gt;__builtin_longjmp&lt;/strong&gt; (intptr_t * &lt;var&gt;buf&lt;/var&gt; , int &lt;var&gt;val&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="fff14e5c46a00a91c0c0603fe5f170bde38d705e" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fisb&quot;&gt;__builtin_nds32_isb&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fisb&quot;&gt;__builtin_nds32_isb&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="fe5501c6b5d93e7b033487f6a848dd334597db03" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fisync&quot;&gt;__builtin_nds32_isync&lt;/strong&gt; (int *&lt;var&gt;addr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fisync&quot;&gt;__builtin_nds32_isync&lt;/strong&gt; (int * &lt;var&gt;addr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="841f0b2bab051a37cafce912e8b554544bed4ffb" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmtsr&quot;&gt;__builtin_nds32_mtsr&lt;/strong&gt; (int &lt;var&gt;value&lt;/var&gt;, int &lt;var&gt;sr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmtsr&quot;&gt;__builtin_nds32_mtsr&lt;/strong&gt; (int &lt;var&gt;value&lt;/var&gt; , int &lt;var&gt;sr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="df8bab86f6689c778da28b14954604543548fb9b" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmtusr&quot;&gt;__builtin_nds32_mtusr&lt;/strong&gt; (int &lt;var&gt;value&lt;/var&gt;, int &lt;var&gt;usr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fmtusr&quot;&gt;__builtin_nds32_mtusr&lt;/strong&gt; (int &lt;var&gt;value&lt;/var&gt; , int &lt;var&gt;usr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="cc7672c01bcce0ae5cb385b443579f1f0e814383" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fsetgie_005fdis&quot;&gt;__builtin_nds32_setgie_dis&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fsetgie_005fdis&quot;&gt;__builtin_nds32_setgie_dis&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="01c2cb53755ea177e9b7bcabfb291e59bf8c8d8b" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fsetgie_005fen&quot;&gt;__builtin_nds32_setgie_en&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnds32_005fsetgie_005fen&quot;&gt;__builtin_nds32_setgie_en&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="2f23c91db2e471b60a85c1d974b337410d93c4ae" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnon_005ftx_005fstore&quot;&gt;__builtin_non_tx_store&lt;/strong&gt; (uint64_t *, uint64_t)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fnon_005ftx_005fstore&quot;&gt;__builtin_non_tx_store&lt;/strong&gt; (uint64_t *, uint64_t)</target>
        </trans-unit>
        <trans-unit id="2321505821d1604108a7105b3b6858f231f0c9ea" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fprefetch&quot;&gt;__builtin_prefetch&lt;/strong&gt; (const void *&lt;var&gt;addr&lt;/var&gt;, ...)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fprefetch&quot;&gt;__builtin_prefetch&lt;/strong&gt; (const void * &lt;var&gt;addr&lt;/var&gt; , ...)</target>
        </trans-unit>
        <trans-unit id="fe3fc0ac7968932105d1c1d3ab50d7b85cfe594b" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005freturn&quot;&gt;__builtin_return&lt;/strong&gt; (void *&lt;var&gt;result&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005freturn&quot;&gt;__builtin_return&lt;/strong&gt; (void * &lt;var&gt;result&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="a1a8dfdf0491f60d9f3285d8de87cb556335dd7c" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fbrk&quot;&gt;__builtin_rx_brk&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fbrk&quot;&gt;__builtin_rx_brk&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="baafeee4f82f6b2b3615bbf58d2dd0b69de47091" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fclrpsw&quot;&gt;__builtin_rx_clrpsw&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fclrpsw&quot;&gt;__builtin_rx_clrpsw&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="40ac58e52ec8cfeb1ed0ce17f884d6ca28de4bb2" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fint&quot;&gt;__builtin_rx_int&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fint&quot;&gt;__builtin_rx_int&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="60f5dc479a3c9ca583cab1eca4c28279f3d7220a" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmachi&quot;&gt;__builtin_rx_machi&lt;/strong&gt; (int, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmachi&quot;&gt;__builtin_rx_machi&lt;/strong&gt; (int, int)</target>
        </trans-unit>
        <trans-unit id="8e28f28fffe61c4b4679e59b89330fa5d0042874" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmaclo&quot;&gt;__builtin_rx_maclo&lt;/strong&gt; (int, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmaclo&quot;&gt;__builtin_rx_maclo&lt;/strong&gt; (int, int)</target>
        </trans-unit>
        <trans-unit id="46c536195bce3a86157c9c49ee77c45d3577dcc4" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmulhi&quot;&gt;__builtin_rx_mulhi&lt;/strong&gt; (int, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmulhi&quot;&gt;__builtin_rx_mulhi&lt;/strong&gt; (int, int)</target>
        </trans-unit>
        <trans-unit id="5621acbcbc1163f811efb159aa50ed209c490ad9" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmullo&quot;&gt;__builtin_rx_mullo&lt;/strong&gt; (int, int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmullo&quot;&gt;__builtin_rx_mullo&lt;/strong&gt; (int, int)</target>
        </trans-unit>
        <trans-unit id="227762640b3aca70bd083850fd27548557a69595" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtachi&quot;&gt;__builtin_rx_mvtachi&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtachi&quot;&gt;__builtin_rx_mvtachi&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="4eefd425b2ddf508a48e8a2189b6454058653fea" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtaclo&quot;&gt;__builtin_rx_mvtaclo&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtaclo&quot;&gt;__builtin_rx_mvtaclo&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="662dad4c2fd795f4f1dddab9d3e0737c1c8a5708" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtc&quot;&gt;__builtin_rx_mvtc&lt;/strong&gt; (int reg, int val)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtc&quot;&gt;__builtin_rx_mvtc&lt;/strong&gt; (int reg, int val)</target>
        </trans-unit>
        <trans-unit id="276391cb278528b1f872b1280affb29edbd7927c" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtipl&quot;&gt;__builtin_rx_mvtipl&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fmvtipl&quot;&gt;__builtin_rx_mvtipl&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="700036ac6c5189b95316dbc5c4ae3b0309325df1" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fracw&quot;&gt;__builtin_rx_racw&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fracw&quot;&gt;__builtin_rx_racw&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="c48b2b82b14ae8b91fdb2fe28e06b8ea0b1cb522" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005frmpa&quot;&gt;__builtin_rx_rmpa&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005frmpa&quot;&gt;__builtin_rx_rmpa&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="4595d30c690a3b8c89c7807c08a9959f30d56800" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fround&quot;&gt;__builtin_rx_round&lt;/strong&gt; (float)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fround&quot;&gt;__builtin_rx_round&lt;/strong&gt; (float)</target>
        </trans-unit>
        <trans-unit id="c5948033a96e4003655c71953e27a3f9741045b3" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fsetpsw&quot;&gt;__builtin_rx_setpsw&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fsetpsw&quot;&gt;__builtin_rx_setpsw&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="f89dbf6d50890784687748f168df8d729aebf79c" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fwait&quot;&gt;__builtin_rx_wait&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005frx_005fwait&quot;&gt;__builtin_rx_wait&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="95b218b72a2c6b938556ce1a8c8a3cca255a13b1" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fset_005fthread_005fpointer&quot;&gt;__builtin_set_thread_pointer&lt;/strong&gt; (void *&lt;var&gt;ptr&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fset_005fthread_005fpointer&quot;&gt;__builtin_set_thread_pointer&lt;/strong&gt; (void * &lt;var&gt;ptr&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="2db4725d0eae1acd204db5ae18744d85101db3ea" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fsh_005fset_005ffpscr&quot;&gt;__builtin_sh_set_fpscr&lt;/strong&gt; (unsigned int &lt;var&gt;val&lt;/var&gt;)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005fsh_005fset_005ffpscr&quot;&gt;__builtin_sh_set_fpscr&lt;/strong&gt; (unsigned int &lt;var&gt;val&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="f9baaf9b0798ed586e63831552a408b61b1a992c" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftabort&quot;&gt;__builtin_tabort&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftabort&quot;&gt;__builtin_tabort&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="d228c7f65857695f955c2630b92714965d36378f" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbeginc&quot;&gt;__builtin_tbeginc&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftbeginc&quot;&gt;__builtin_tbeginc&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="94689ecdbd4d60ff7b0fd602ce7245bc7b6beb10" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftrap&quot;&gt;__builtin_trap&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftrap&quot;&gt;__builtin_trap&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="4a1c671de0baf7c15aaf53f248312afd293d5b33" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftx_005fassist&quot;&gt;__builtin_tx_assist&lt;/strong&gt; (int)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005ftx_005fassist&quot;&gt;__builtin_tx_assist&lt;/strong&gt; (int)</target>
        </trans-unit>
        <trans-unit id="5904be3f2c9a60beac8be0103847c267a6f80e80" translate="yes" xml:space="preserve">
          <source>Built-in Function: void &lt;strong id=&quot;index-_005f_005fbuiltin_005funreachable&quot;&gt;__builtin_unreachable&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n incorporada: void &lt;strong id=&quot;index-_005f_005fbuiltin_005funreachable&quot;&gt;__builtin_unreachable&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="836cf5a0e71cae3a60324503179866ad686508a7" translate="yes" xml:space="preserve">
          <source>Built-in functions for limited buffer overflow checking.</source>
          <target state="translated">Funciones incorporadas para la comprobación del desbordamiento de la memoria intermedia.</target>
        </trans-unit>
        <trans-unit id="d4b5ba0eb7000fc998fff5b209a2516ba2e54a3f" translate="yes" xml:space="preserve">
          <source>Built-in functions specific to particular targets.</source>
          <target state="translated">Funciones incorporadas específicas para objetivos particulares.</target>
        </trans-unit>
        <trans-unit id="253258e2e82600175022e888019e1f8e9ab9c3a1" translate="yes" xml:space="preserve">
          <source>Built-in functions to perform arithmetics and arithmetic overflow checking.</source>
          <target state="translated">Funciones incorporadas para realizar aritmética y control de desbordamiento aritmético.</target>
        </trans-unit>
        <trans-unit id="4708bb7371d5b0f788e5028a015745453830a6ee" translate="yes" xml:space="preserve">
          <source>Built-in macros, macros defined on the command line, and macros defined in include files are not warned about.</source>
          <target state="translated">Las macros incorporadas,las macros definidas en la línea de comandos y las macros definidas en los archivos de inclusión no son advertidas.</target>
        </trans-unit>
        <trans-unit id="606b68375f39bb1e243e870d45cdf01eab0caad3" translate="yes" xml:space="preserve">
          <source>But if you need to debug a problem with method signatures and need to know how they are implemented (i.e., the &amp;ldquo;ABI&amp;rdquo;), read on.</source>
          <target state="translated">Pero si necesita depurar un problema con las firmas de m&amp;eacute;todos y necesita saber c&amp;oacute;mo se implementan (es decir, la &quot;ABI&quot;), siga leyendo.</target>
        </trans-unit>
        <trans-unit id="18ba03b4395ba58ba0713d75a0907aa6ed34a2f6" translate="yes" xml:space="preserve">
          <source>But in the definition of &lt;code&gt;foo&lt;/code&gt;, the file-scope type is used because that is available to be inherited. Thus, the definition and the prototype do not match, and you get an error.</source>
          <target state="translated">Pero en la definici&amp;oacute;n de &lt;code&gt;foo&lt;/code&gt; , se usa el tipo de alcance de archivo porque est&amp;aacute; disponible para ser heredado. Por lo tanto, la definici&amp;oacute;n y el prototipo no coinciden y se obtiene un error.</target>
        </trans-unit>
        <trans-unit id="54f71fd5d9e178736a8b25951cca5312e798d273" translate="yes" xml:space="preserve">
          <source>But in this example, the &lt;code&gt;std::move&lt;/code&gt; call prevents copy elision.</source>
          <target state="translated">Pero en este ejemplo, la llamada &lt;code&gt;std::move&lt;/code&gt; evita la elisi&amp;oacute;n de copia.</target>
        </trans-unit>
        <trans-unit id="cf56c043a9173e054f17c75c7e06c6a5d352b771" translate="yes" xml:space="preserve">
          <source>But this definition computes either &lt;var id=&quot;index-side-effects_002c-macro-argument&quot;&gt;a&lt;/var&gt; or &lt;var&gt;b&lt;/var&gt; twice, with bad results if the operand has side effects. In GNU C, if you know the type of the operands (here taken as &lt;code&gt;int&lt;/code&gt;), you can avoid this problem by defining the macro as follows:</source>
          <target state="translated">Pero esta definici&amp;oacute;n calcula &lt;var id=&quot;index-side-effects_002c-macro-argument&quot;&gt;a&lt;/var&gt; o &lt;var&gt;b&lt;/var&gt; dos veces, con malos resultados si el operando tiene efectos secundarios. En GNU C, si conoce el tipo de operandos (aqu&amp;iacute; tomados como &lt;code&gt;int&lt;/code&gt; ), puede evitar este problema definiendo la macro de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="089c24745336688f5099a4bd50557aedc8fc6fff" translate="yes" xml:space="preserve">
          <source>By contrast, PCC on most target machines returns structures and unions of any size by copying the data into an area of static storage, and then returning the address of that storage as if it were a pointer value. The caller must copy the data from that memory area to the place where the value is wanted. GCC does not use this method because it is slower and nonreentrant.</source>
          <target state="translated">Por el contrario,el PCC de la mayoría de las máquinas de destino devuelve estructuras y uniones de cualquier tamaño copiando los datos en un área de almacenamiento estático,y luego devolviendo la dirección de ese almacenamiento como si fuera un valor de puntero.La persona que llama debe copiar los datos de esa área de memoria al lugar donde se quiere el valor.GCC no utiliza este método porque es más lento y no reentrante.</target>
        </trans-unit>
        <trans-unit id="8e8864b0dc6da1e44443610d33567bb75bb81d17" translate="yes" xml:space="preserve">
          <source>By declaring a function inline, you can direct GCC to make calls to that function faster. One way GCC can achieve this is to integrate that function&amp;rsquo;s code into the code for its callers. This makes execution faster by eliminating the function-call overhead; in addition, if any of the actual argument values are constant, their known values may permit simplifications at compile time so that not all of the inline function&amp;rsquo;s code needs to be included. The effect on code size is less predictable; object code may be larger or smaller with function inlining, depending on the particular case. You can also direct GCC to try to integrate all &amp;ldquo;simple enough&amp;rdquo; functions into their callers with the option</source>
          <target state="translated">Al declarar una funci&amp;oacute;n en l&amp;iacute;nea, puede indicarle a GCC que realice llamadas a esa funci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pido. Una forma en que GCC puede lograr esto es integrar el c&amp;oacute;digo de esa funci&amp;oacute;n en el c&amp;oacute;digo para sus llamadores. Esto acelera la ejecuci&amp;oacute;n al eliminar la sobrecarga de llamadas a funciones; Adem&amp;aacute;s, si alguno de los valores reales del argumento es constante, sus valores conocidos pueden permitir simplificaciones en el momento de la compilaci&amp;oacute;n, de modo que no es necesario incluir todo el c&amp;oacute;digo de la funci&amp;oacute;n en l&amp;iacute;nea. El efecto sobre el tama&amp;ntilde;o del c&amp;oacute;digo es menos predecible; el c&amp;oacute;digo de objeto puede ser m&amp;aacute;s grande o m&amp;aacute;s peque&amp;ntilde;o con la funci&amp;oacute;n en l&amp;iacute;nea, dependiendo del caso particular. Tambi&amp;eacute;n puede indicarle a GCC que intente integrar todas las funciones &quot;suficientemente simples&quot; en las personas que llaman con la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="571c61d917cc3bc4c5e2835a5dd40c5c41bd768f" translate="yes" xml:space="preserve">
          <source>By default (unless configured otherwise), GCC generates code for the GR5 variant of the Visium architecture.</source>
          <target state="translated">Por defecto (a menos que se configure de otra manera),el GCC genera código para la variante GR5 de la arquitectura de Visio.</target>
        </trans-unit>
        <trans-unit id="8ff1bd96a4bdcc76b002de9ee97861c9f804a0dc" translate="yes" xml:space="preserve">
          <source>By default (unless configured otherwise), GCC generates code for the V7 variant of the SPARC architecture. With</source>
          <target state="translated">Por defecto (a menos que esté configurado de otra manera),GCC genera código para la variante V7 de la arquitectura SPARC.Con</target>
        </trans-unit>
        <trans-unit id="44c806b35c6f92efecb7ce7748b95c7a4f87c40c" translate="yes" xml:space="preserve">
          <source>By default GCC inlines string operations only when the destination is known to be aligned to least a 4-byte boundary. This enables more inlining and increases code size, but may improve performance of code that depends on fast &lt;code&gt;memcpy&lt;/code&gt; and &lt;code&gt;memset&lt;/code&gt; for short lengths. The option enables inline expansion of &lt;code&gt;strlen&lt;/code&gt; for all pointer alignments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5c102e65c6f170a209b204a4dbc9b094f06846" translate="yes" xml:space="preserve">
          <source>By default GCC inlines string operations only when the destination is known to be aligned to least a 4-byte boundary. This enables more inlining and increases code size, but may improve performance of code that depends on fast &lt;code&gt;memcpy&lt;/code&gt;, &lt;code&gt;strlen&lt;/code&gt;, and &lt;code&gt;memset&lt;/code&gt; for short lengths.</source>
          <target state="translated">De forma predeterminada, las operaciones de cadena en l&amp;iacute;nea de GCC solo cuando se sabe que el destino est&amp;aacute; alineado con un l&amp;iacute;mite m&amp;iacute;nimo de 4 bytes. Esto permite m&amp;aacute;s inserci&amp;oacute;n y aumenta el tama&amp;ntilde;o del c&amp;oacute;digo, pero puede mejorar el rendimiento del c&amp;oacute;digo que depende de &lt;code&gt;memcpy&lt;/code&gt; , &lt;code&gt;strlen&lt;/code&gt; y &lt;code&gt;memset&lt;/code&gt; r&amp;aacute;pidos para longitudes cortas.</target>
        </trans-unit>
        <trans-unit id="828f5d805ef0fc5866d738b0ffbff970c7d7f41f" translate="yes" xml:space="preserve">
          <source>By default assume that all calls are far away so that a longer and more expensive calling sequence is required. This is required for calls farther than 32 megabytes (33,554,432 bytes) from the current location. A short call is generated if the compiler knows the call cannot be that far away. This setting can be overridden by the &lt;code&gt;shortcall&lt;/code&gt; function attribute, or by &lt;code&gt;#pragma
longcall(0)&lt;/code&gt;.</source>
          <target state="translated">Por defecto, suponga que todas las llamadas est&amp;aacute;n lejos, por lo que se requiere una secuencia de llamadas m&amp;aacute;s larga y costosa. Esto es necesario para llamadas a m&amp;aacute;s de 32 megabytes (33,554,432 bytes) desde la ubicaci&amp;oacute;n actual. Se genera una llamada corta si el compilador sabe que la llamada no puede estar tan lejos. Esta configuraci&amp;oacute;n puede ser anulada por el &lt;code&gt;shortcall&lt;/code&gt; funci&amp;oacute;n shortcall o por &lt;code&gt;#pragma longcall(0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7d64d02eb42b84df503cac7606206757e75fdfc" translate="yes" xml:space="preserve">
          <source>By default instance variables in Objective-C can be accessed as if they were local variables from within the methods of the class they&amp;rsquo;re declared in. This can lead to shadowing between instance variables and other variables declared either locally inside a class method or globally with the same name. Specifying the</source>
          <target state="translated">De forma predeterminada, se puede acceder a las variables de instancia en Objective-C como si fueran variables locales desde dentro de los m&amp;eacute;todos de la clase en la que est&amp;aacute;n declaradas. Esto puede llevar al sombreado entre las variables de instancia y otras variables declaradas localmente dentro de un m&amp;eacute;todo de clase o globalmente con el mismo nombre. Especificando el</target>
        </trans-unit>
        <trans-unit id="812f601802f8d41b61d44c3f0bd220d17f966e00" translate="yes" xml:space="preserve">
          <source>By default it is treated as &lt;code&gt;signed int&lt;/code&gt; but this may be changed by the</source>
          <target state="translated">De forma predeterminada, se trata como &lt;code&gt;signed int&lt;/code&gt; pero esto puede ser cambiado por el</target>
        </trans-unit>
        <trans-unit id="42ef9328c623bad5538b4f26249da5459c5c08d3" translate="yes" xml:space="preserve">
          <source>By default or when</source>
          <target state="translated">Por defecto o cuando</target>
        </trans-unit>
        <trans-unit id="3fa72f6f9c5a94c5d09caf64d4a1e9c339e8bb7c" translate="yes" xml:space="preserve">
          <source>By default the analyzer attempts to simplify analysis by merging sufficiently similar states at each program point as it builds its &amp;ldquo;exploded graph&amp;rdquo;. With</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238d21ed5942f525fb456a138be81dac5934eca2" translate="yes" xml:space="preserve">
          <source>By default the analyzer attempts to simplify analysis by purging aspects of state at a program point that appear to no longer be relevant e.g. the values of locals that aren&amp;rsquo;t accessed later in the function and which aren&amp;rsquo;t relevant to leak analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b76575429db7ab5c66debc083d774f7e949e1c" translate="yes" xml:space="preserve">
          <source>By default this feature is not enabled. The default can be restored via the</source>
          <target state="translated">Por defecto,esta función no está activada.El valor por defecto puede ser restaurado a través de la</target>
        </trans-unit>
        <trans-unit id="be7bad4b8f0ace00e1f8f2cdea4bdacee4c90882" translate="yes" xml:space="preserve">
          <source>By default when the C++ frontend prints diagnostics showing mismatching template types, common parts of the types are printed as &amp;ldquo;[...]&amp;rdquo; to simplify the error message. For example:</source>
          <target state="translated">De forma predeterminada, cuando la interfaz de C ++ imprime diagn&amp;oacute;sticos que muestran tipos de plantilla que no coinciden, las partes comunes de los tipos se imprimen como &quot;[...]&quot; para simplificar el mensaje de error. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e5c0fdbe4acada00b33542c8af5765b2142c6787" translate="yes" xml:space="preserve">
          <source>By default, GCC also provides some additional extensions to the C++ language that on rare occasions conflict with the C++ standard. See &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Options Controlling C++ Dialect&lt;/a&gt;. Use of the</source>
          <target state="translated">Por defecto, GCC tambi&amp;eacute;n proporciona algunas extensiones adicionales al lenguaje C ++ que en raras ocasiones entran en conflicto con el est&amp;aacute;ndar C ++. Consulte &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Opciones que controlan el dialecto de C ++&lt;/a&gt; . Uso del</target>
        </trans-unit>
        <trans-unit id="1b721c8be1fed47cd95a2b324cc0ec1f3f3fd2db" translate="yes" xml:space="preserve">
          <source>By default, GCC emits an error message if the feedback profiles do not match the source code. This error can be turned into a warning by using</source>
          <target state="translated">Por defecto,GCC emite un mensaje de error si los perfiles de retroalimentación no coinciden con el código fuente.Este error puede convertirse en una advertencia mediante el uso de</target>
        </trans-unit>
        <trans-unit id="68205120aabfb538f7bc7f4202c9b447a1cf9091" translate="yes" xml:space="preserve">
          <source>By default, GCC generates a branch hint instruction to avoid pipeline stalls for always-taken or probably-taken branches. A hint is not generated closer than 8 instructions away from its branch. There is little reason to disable them, except for debugging purposes, or to make an object a little bit smaller.</source>
          <target state="translated">Por defecto,el GCC genera una instrucción de sugerencia de rama para evitar paradas de oleoductos para las ramas siempre tomadas o probablemente tomadas.Una pista no se genera más cerca de 8 instrucciones de su rama.Hay pocas razones para desactivarlas,excepto para propósitos de depuración,o para hacer un objeto un poco más pequeño.</target>
        </trans-unit>
        <trans-unit id="0f0fae0fc27ffb4e00a4f068905f564a20595bd8" translate="yes" xml:space="preserve">
          <source>By default, GCC generates code assuming that addresses are never larger than 18 bits. With</source>
          <target state="translated">Por defecto,GCC genera código asumiendo que las direcciones nunca son mayores de 18 bits.Con</target>
        </trans-unit>
        <trans-unit id="bfc14d5fdff5ebfd96cb93f60f01d2cd55db824a" translate="yes" xml:space="preserve">
          <source>By default, GCC ignores trigraphs, but in standard-conforming modes it converts them. See the</source>
          <target state="translated">Por defecto,el GCC ignora los trigrafos,pero en los modos de conformidad estándar los convierte.Vea el</target>
        </trans-unit>
        <trans-unit id="7b2b09a4a457e7ae05463c18b24ed251756826ce" translate="yes" xml:space="preserve">
          <source>By default, GCC inserts NOPs to increase dual issue when it expects it to increase performance. &lt;var&gt;n&lt;/var&gt; can be a value from 0 to 10. A smaller &lt;var&gt;n&lt;/var&gt; inserts fewer NOPs. 10 is the default, 0 is the same as</source>
          <target state="translated">De forma predeterminada, GCC inserta NOP para aumentar el problema dual cuando espera que aumente el rendimiento. &lt;var&gt;n&lt;/var&gt; puede ser un valor de 0 a 10. Una &lt;var&gt;n&lt;/var&gt; m&amp;aacute;s peque&amp;ntilde;a inserta menos NOP. 10 es el valor predeterminado, 0 es lo mismo que</target>
        </trans-unit>
        <trans-unit id="fb6ff38e6ed640debf4ee9a5067811f24a626ac7" translate="yes" xml:space="preserve">
          <source>By default, GCC limits the size of functions that can be inlined. This flag allows coarse control of this limit. &lt;var&gt;n&lt;/var&gt; is the size of functions that can be inlined in number of pseudo instructions.</source>
          <target state="translated">De forma predeterminada, GCC limita el tama&amp;ntilde;o de las funciones que se pueden insertar. Esta bandera permite un control aproximado de este l&amp;iacute;mite. &lt;var&gt;n&lt;/var&gt; es el tama&amp;ntilde;o de las funciones que se pueden incluir en el n&amp;uacute;mero de pseudoinstrucciones.</target>
        </trans-unit>
        <trans-unit id="9bf107b2c0510e1f5a934dedd69183ab9f3da713" translate="yes" xml:space="preserve">
          <source>By default, GCC links against startup code that assumes the SPU-style main function interface (which has an unconventional parameter list). With</source>
          <target state="translated">Por defecto,GCC se vincula con el código de inicio que asume la interfaz de la función principal al estilo de la SPU (que tiene una lista de parámetros no convencional).Con</target>
        </trans-unit>
        <trans-unit id="7b2fda2cbe2c03ae974fe1e7172dd8c82c7ece3a" translate="yes" xml:space="preserve">
          <source>By default, GCC provides some extensions to the C language that, on rare occasions conflict with the C standard. See &lt;a href=&quot;c-extensions#C-Extensions&quot;&gt;Extensions to the C Language Family&lt;/a&gt;. Some features that are part of the C99 standard are accepted as extensions in C90 mode, and some features that are part of the C11 standard are accepted as extensions in C90 and C99 modes. Use of the</source>
          <target state="translated">De forma predeterminada, GCC proporciona algunas extensiones del lenguaje C que, en raras ocasiones, entran en conflicto con el est&amp;aacute;ndar C. Ver &lt;a href=&quot;c-extensions#C-Extensions&quot;&gt;Extensiones al C Lengua&lt;/a&gt; . Algunas funciones que forman parte del est&amp;aacute;ndar C99 se aceptan como extensiones en el modo C90, y algunas funciones que forman parte del est&amp;aacute;ndar C11 se aceptan como extensiones en los modos C90 y C99. Uso del</target>
        </trans-unit>
        <trans-unit id="9893f2e72481c2382557fc2f081ec3a8e97bc79b" translate="yes" xml:space="preserve">
          <source>By default, an edge in this graph can contain the effects of a run of multiple statements within a basic block. With</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7c9e5570dcde91269bdc30909a64efa434ef4f" translate="yes" xml:space="preserve">
          <source>By default, each diagnostic emitted includes text indicating the command-line option that directly controls the diagnostic (if such an option is known to the diagnostic machinery). Specifying the</source>
          <target state="translated">Por defecto,cada diagnóstico emitido incluye un texto que indica la opción de la línea de comandos que controla directamente el diagnóstico (si la maquinaria de diagnóstico conoce dicha opción).Especificando la</target>
        </trans-unit>
        <trans-unit id="6a4309cf8cee66811505f90edea42d61f9045107" translate="yes" xml:space="preserve">
          <source>By default, each diagnostic emitted includes the original source line and a caret &amp;lsquo;</source>
          <target state="translated">De forma predeterminada, cada diagn&amp;oacute;stico emitido incluye la l&amp;iacute;nea de origen original y un signo de intercalaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="bac331913dd18e98186423b1f11ca77a9b8683cf" translate="yes" xml:space="preserve">
          <source>By default, no debug information is produced for symbols that are not actually used. Use this option if you want debug information for all symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7763701cba03a5661d0405bf0959714c47202a4e" translate="yes" xml:space="preserve">
          <source>By default, only &amp;ldquo;high-level&amp;rdquo; messages are emitted. This option enables additional, more detailed, messages, which are likely to only be of interest to GCC developers.</source>
          <target state="translated">De forma predeterminada, solo se emiten mensajes de &quot;alto nivel&quot;. Esta opci&amp;oacute;n habilita mensajes adicionales, m&amp;aacute;s detallados, que probablemente solo sean de inter&amp;eacute;s para los desarrolladores de GCC.</target>
        </trans-unit>
        <trans-unit id="98a82faa0eba738f33fea70355cca2f77f4d752d" translate="yes" xml:space="preserve">
          <source>By default, the analysis silently stops if the code is too complicated for the analyzer to fully explore and it reaches an internal limit. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d31796fedde16b57588ddd5284b3abd8463c996" translate="yes" xml:space="preserve">
          <source>By default, the assembler file name for a source file is made by replacing the suffix &amp;lsquo;</source>
          <target state="translated">De forma predeterminada, el nombre del archivo ensamblador para un archivo fuente se crea reemplazando el sufijo '</target>
        </trans-unit>
        <trans-unit id="10caadf2568f37c4e4608d0c62719e2855118ce6" translate="yes" xml:space="preserve">
          <source>By default, the dump will contain messages about successful optimizations (equivalent to</source>
          <target state="translated">Por defecto,el volcado contendrá mensajes sobre optimizaciones exitosas (equivalentes a</target>
        </trans-unit>
        <trans-unit id="ae9a2b16ff551e2f7ff627c2fd6228056bed25a8" translate="yes" xml:space="preserve">
          <source>By default, the keyword &lt;code&gt;__vector&lt;/code&gt; is added. The macro &lt;code&gt;vector&lt;/code&gt; is defined in &lt;code&gt;&amp;lt;spu_intrinsics.h&amp;gt;&lt;/code&gt; and can be undefined.</source>
          <target state="translated">De forma predeterminada, se agrega la palabra clave &lt;code&gt;__vector&lt;/code&gt; . El &lt;code&gt;vector&lt;/code&gt; macro est&amp;aacute; definido en &lt;code&gt;&amp;lt;spu_intrinsics.h&amp;gt;&lt;/code&gt; y puede no estar definido.</target>
        </trans-unit>
        <trans-unit id="b102924aa2fe89599576741a2bd8c5becb0889f6" translate="yes" xml:space="preserve">
          <source>By default, the object file name for a source file is made by replacing the suffix &amp;lsquo;</source>
          <target state="translated">De forma predeterminada, el nombre del archivo de objeto para un archivo de origen se crea reemplazando el sufijo '</target>
        </trans-unit>
        <trans-unit id="4e689c10c02894b0d8e0dcec9a7f6bd5f47a0486" translate="yes" xml:space="preserve">
          <source>By default, when printing source code (via</source>
          <target state="translated">Por defecto,al imprimir el código fuente (a través de</target>
        </trans-unit>
        <trans-unit id="f618b8855eb83706e0dd5ba4b20f8784c6acdce1" translate="yes" xml:space="preserve">
          <source>Byte swap. Return the result of swapping the upper and lower bytes of &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">Intercambio de bytes. Devuelve el resultado de intercambiar los bytes de &lt;var&gt;value&lt;/var&gt; superior e inferior .</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="8c7f20acc9bb2d58739f2e1f94cb9494f549d093" translate="yes" xml:space="preserve">
          <source>C Language Options</source>
          <target state="translated">C Opciones de idioma</target>
        </trans-unit>
        <trans-unit id="4f2345e5746cc2edc7fabec343cb3f91233c3786" translate="yes" xml:space="preserve">
          <source>C and Objective-C-only Warning Options</source>
          <target state="translated">C y las opciones de alerta del Objetivo C solamente</target>
        </trans-unit>
        <trans-unit id="a16bcf14a78c44b6bfc6c36207ff504cb459f2ef" translate="yes" xml:space="preserve">
          <source>C code</source>
          <target state="translated">Código C</target>
        </trans-unit>
        <trans-unit id="43bd1aa29c2f227114eb9168f3aeb20a853ce287" translate="yes" xml:space="preserve">
          <source>C contains many standard functions that return a value that most programs choose to ignore. One obvious example is &lt;code&gt;printf&lt;/code&gt;. Warning about this practice only leads the defensive programmer to clutter programs with dozens of casts to &lt;code&gt;void&lt;/code&gt;. Such casts are required so frequently that they become visual noise. Writing those casts becomes so automatic that they no longer convey useful information about the intentions of the programmer. For functions where the return value should never be ignored, use the &lt;code&gt;warn_unused_result&lt;/code&gt; function attribute (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;).</source>
          <target state="translated">C contiene muchas funciones est&amp;aacute;ndar que devuelven un valor que la mayor&amp;iacute;a de los programas eligen ignorar. Un ejemplo obvio es &lt;code&gt;printf&lt;/code&gt; . Advertencia sobre esta pr&amp;aacute;ctica solo lleva al programador defensivo a saturar programas con docenas de conversiones para &lt;code&gt;void&lt;/code&gt; . Tales yesos se requieren con tanta frecuencia que se convierten en ruido visual. Escribir esos casts se vuelve tan autom&amp;aacute;tico que ya no transmiten informaci&amp;oacute;n &amp;uacute;til sobre las intenciones del programador. Para funciones donde el valor de retorno nunca debe ignorarse, use el &lt;code&gt;warn_unused_result&lt;/code&gt; funci&amp;oacute;n warn_unused_result (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b3d334ba58e80b66d4161266b799ef1fa9dce232" translate="yes" xml:space="preserve">
          <source>C flag clear or unsigned less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa17b2be06e6856744ee3e4f2479342954c18298" translate="yes" xml:space="preserve">
          <source>C flag set or unsigned greater than equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc85e5ef0494952e2e594d8f572f0cb62561829" translate="yes" xml:space="preserve">
          <source>C has the concept of volatile objects. These are normally accessed by pointers and used for accessing hardware or inter-thread communication. The standard encourages compilers to refrain from optimizations concerning accesses to volatile objects, but leaves it implementation defined as to what constitutes a volatile access. The minimum requirement is that at a sequence point all previous accesses to volatile objects have stabilized and no subsequent accesses have occurred. Thus an implementation is free to reorder and combine volatile accesses that occur between sequence points, but cannot do so for accesses across a sequence point. The use of volatile does not allow you to violate the restriction on updating objects multiple times between two sequence points.</source>
          <target state="translated">C tiene el concepto de objetos volátiles.Normalmente se accede a ellos mediante punteros y se utilizan para acceder al hardware o a la comunicación entre hilos.La norma alienta a los compiladores a abstenerse de optimizaciones relativas a los accesos a los objetos volátiles,pero deja su aplicación definida en cuanto a lo que constituye un acceso volátil.El requisito mínimo es que en un punto de la secuencia todos los accesos anteriores a objetos volátiles se hayan estabilizado y que no se hayan producido accesos posteriores.Así pues,una implementación es libre de reordenar y combinar los accesos volátiles que se producen entre puntos de secuencia,pero no puede hacerlo para los accesos a través de un punto de secuencia.El uso de volátiles no permite violar la restricción de actualizar los objetos varias veces entre dos puntos de secuencia.</target>
        </trans-unit>
        <trans-unit id="c49f69bf7866959fd041d254d44ecd95bab5ba98" translate="yes" xml:space="preserve">
          <source>C register.</source>
          <target state="translated">Registro C.</target>
        </trans-unit>
        <trans-unit id="2327d3d6eb8a5f7ce91755caf9e65d7a2e7dc1de" translate="yes" xml:space="preserve">
          <source>C source code that must be preprocessed.</source>
          <target state="translated">Código fuente C que debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="61f8a2e0d02a243e776c6bb9750832b606cb81e5" translate="yes" xml:space="preserve">
          <source>C source code that should not be preprocessed.</source>
          <target state="translated">Código fuente C que no debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="11548c240585bf5af759bc0a6b301b88b353e27e" translate="yes" xml:space="preserve">
          <source>C++ Language Options</source>
          <target state="translated">Opciones de lenguaje C++</target>
        </trans-unit>
        <trans-unit id="57f68a93b1bb79e369d8676d696444f1cbbc7bb2" translate="yes" xml:space="preserve">
          <source>C++ comments are recognized.</source>
          <target state="translated">Se reconocen los comentarios de C++.</target>
        </trans-unit>
        <trans-unit id="7f61cc8037210ca9970d93d649a42c41aee100de" translate="yes" xml:space="preserve">
          <source>C++ concepts provide much-improved support for generic programming. In particular, they allow the specification of constraints on template arguments. The constraints are used to extend the usual overloading and partial specialization capabilities of the language, allowing generic data structures and algorithms to be &amp;ldquo;refined&amp;rdquo; based on their properties rather than their type names.</source>
          <target state="translated">Los conceptos de C ++ proporcionan un soporte mucho mejor para la programaci&amp;oacute;n gen&amp;eacute;rica. En particular, permiten la especificaci&amp;oacute;n de restricciones sobre argumentos de plantilla. Las restricciones se utilizan para ampliar las capacidades habituales de sobrecarga y especializaci&amp;oacute;n parcial del lenguaje, permitiendo que las estructuras de datos gen&amp;eacute;ricos y los algoritmos se &quot;refinen&quot; en funci&amp;oacute;n de sus propiedades en lugar de sus nombres de tipo.</target>
        </trans-unit>
        <trans-unit id="98cd14ec337b46f3c719029c11a0be19021fb2b8" translate="yes" xml:space="preserve">
          <source>C++ header file to be turned into a precompiled header or Ada spec.</source>
          <target state="translated">Archivo de cabecera C++para ser convertido en una cabecera precompilada o Ada spec.</target>
        </trans-unit>
        <trans-unit id="f7bc99762b7f83b6b621c845d769390544ce75a0" translate="yes" xml:space="preserve">
          <source>C++ is a complex language and an evolving one, and its standard definition (the ISO C++ standard) was only recently completed. As a result, your C++ compiler may occasionally surprise you, even when its behavior is correct. This section discusses some areas that frequently give rise to questions of this sort.</source>
          <target state="translated">C++es un lenguaje complejo y en evolución,y su definición estándar (la norma ISO C++)sólo se ha completado recientemente.Como resultado,su compilador de C++puede sorprenderle ocasionalmente,incluso cuando su comportamiento es correcto.Esta sección trata algunas áreas que frecuentemente dan lugar a preguntas de este tipo.</target>
        </trans-unit>
        <trans-unit id="e84a747565fa51df782491a580d39e6a3f403239" translate="yes" xml:space="preserve">
          <source>C++ requires information about types to be written out in order to implement &amp;lsquo;</source>
          <target state="translated">C ++ requiere que se escriba informaci&amp;oacute;n sobre los tipos para implementar '</target>
        </trans-unit>
        <trans-unit id="fda8008d202b2d7ff2b02b361c7ea913221a6d44" translate="yes" xml:space="preserve">
          <source>C++ source code that must be preprocessed. Note that in &amp;lsquo;</source>
          <target state="translated">C&amp;oacute;digo fuente C ++ que debe procesarse previamente. Tenga en cuenta que en '</target>
        </trans-unit>
        <trans-unit id="99fa7c5a2c337828c11bc2c4ade3aae26a30fe89" translate="yes" xml:space="preserve">
          <source>C++ source code that should not be preprocessed.</source>
          <target state="translated">Código fuente C++que no debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="cc9e861072d065eff5c8caf3bd72ac42f37e3e61" translate="yes" xml:space="preserve">
          <source>C++ source files conventionally use one of the suffixes &amp;lsquo;</source>
          <target state="translated">Los archivos fuente de C ++ usan convencionalmente uno de los sufijos '</target>
        </trans-unit>
        <trans-unit id="e4d70d761fb7676ae22ebe197ff2d2dd053c553d" translate="yes" xml:space="preserve">
          <source>C++ templates were the first language feature to require more intelligence from the environment than was traditionally found on a UNIX system. Somehow the compiler and linker have to make sure that each template instance occurs exactly once in the executable if it is needed, and not at all otherwise. There are two basic approaches to this problem, which are referred to as the Borland model and the Cfront model.</source>
          <target state="translated">Las plantillas C++fueron la primera característica del lenguaje que requirió más inteligencia del entorno que la que se encontraba tradicionalmente en un sistema UNIX.De alguna manera,el compilador y el enlazador tienen que asegurarse de que cada instancia de la plantilla se produzca exactamente una vez en el ejecutable si se necesita,y no de otra manera.Hay dos enfoques básicos de este problema,que se conocen como el modelo Borland y el modelo Cfront.</target>
        </trans-unit>
        <trans-unit id="16bd188cbd64c4bf1a17218266102bf9d269e075" translate="yes" xml:space="preserve">
          <source>C++ virtual functions are implemented in most compilers using a lookup table, known as a vtable. The vtable contains pointers to the virtual functions provided by a class, and each object of the class contains a pointer to its vtable (or vtables, in some multiple-inheritance situations). If the class declares any non-inline, non-pure virtual functions, the first one is chosen as the &amp;ldquo;key method&amp;rdquo; for the class, and the vtable is only emitted in the translation unit where the key method is defined.</source>
          <target state="translated">Las funciones virtuales de C ++ se implementan en la mayor&amp;iacute;a de los compiladores mediante una tabla de b&amp;uacute;squeda, conocida como vtable. La vtable contiene punteros a las funciones virtuales proporcionadas por una clase, y cada objeto de la clase contiene un puntero a su vtable (o vtables, en algunas situaciones de herencia m&amp;uacute;ltiple). Si la clase declara cualquier funci&amp;oacute;n virtual no en l&amp;iacute;nea, no pura, la primera se elige como el &quot;m&amp;eacute;todo clave&quot; para la clase, y la vtable solo se emite en la unidad de traducci&amp;oacute;n donde se define el m&amp;eacute;todo clave.</target>
        </trans-unit>
        <trans-unit id="17265012fdaf7b797d7862b29ff392331cd3a4a0" translate="yes" xml:space="preserve">
          <source>C++17 provides a standard way to suppress the</source>
          <target state="translated">C++17 proporciona una forma estándar de suprimir la</target>
        </trans-unit>
        <trans-unit id="f78d571177e03968d05d81e87283c743f9bd11eb" translate="yes" xml:space="preserve">
          <source>C, C++, Objective-C or Objective-C++ header file to be turned into a precompiled header (default), or C, C++ header file to be turned into an Ada spec (via the</source>
          <target state="translated">C,C++,Objetivo-C o Objetivo-C++archivo de cabecera para ser convertido en una cabecera precompilada (por defecto),o C,C++archivo de cabecera para ser convertido en un Ada spec (a través del</target>
        </trans-unit>
        <trans-unit id="6297518e9deb3ffb36cfb4da17e5731d4f43ddd3" translate="yes" xml:space="preserve">
          <source>C-EUCJP</source>
          <target state="translated">C-EUCJP</target>
        </trans-unit>
        <trans-unit id="fea2102020df627a3fcd18f01c6b90d1d1ebc0a5" translate="yes" xml:space="preserve">
          <source>C-JIS</source>
          <target state="translated">C-JIS</target>
        </trans-unit>
        <trans-unit id="8aed662488c94d21a572d72dd344a0c46e870bc0" translate="yes" xml:space="preserve">
          <source>C-SJIS</source>
          <target state="translated">C-SJIS</target>
        </trans-unit>
        <trans-unit id="e1c33b8c4686460cd515031a9d28c68a3cfcef87" translate="yes" xml:space="preserve">
          <source>C-SKY&amp;mdash;</source>
          <target state="translated">C-SKY&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="e66b4865aad9938d99c99c6f4ab23939ca58e09e" translate="yes" xml:space="preserve">
          <source>C99 Annex F is followed.</source>
          <target state="translated">Se sigue el Anexo F del C99.</target>
        </trans-unit>
        <trans-unit id="0817809900308ce7f22b686082215869550cf931" translate="yes" xml:space="preserve">
          <source>C99 restricted pointers and references.</source>
          <target state="translated">C99 restringido a punteros y referencias.</target>
        </trans-unit>
        <trans-unit id="792d9ffa119c05fda74148cc441c8be905361027" translate="yes" xml:space="preserve">
          <source>CALL_INSN</source>
          <target state="translated">CALL_INSN</target>
        </trans-unit>
        <trans-unit id="a4c1d0441ce79e81e5b485ea5fcda7d1c56b743e" translate="yes" xml:space="preserve">
          <source>CB</source>
          <target state="translated">CB</target>
        </trans-unit>
        <trans-unit id="7c9c078a9c0f1169f25be27f38940093778bb37c" translate="yes" xml:space="preserve">
          <source>CET Function: ret_type &lt;strong id=&quot;index-_005fget_005fssp&quot;&gt;_get_ssp&lt;/strong&gt; (void)</source>
          <target state="translated">Funci&amp;oacute;n CET: ret_type &lt;strong id=&quot;index-_005fget_005fssp&quot;&gt;_get_ssp&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="01ab10eefead0e21345d5d4e4f22d758ced4568b" translate="yes" xml:space="preserve">
          <source>CET Function: void &lt;strong id=&quot;index-_005finc_005fssp&quot;&gt;_inc_ssp&lt;/strong&gt; (unsigned int)</source>
          <target state="translated">Funci&amp;oacute;n CET: void &lt;strong id=&quot;index-_005finc_005fssp&quot;&gt;_inc_ssp&lt;/strong&gt; (unsigned int)</target>
        </trans-unit>
        <trans-unit id="feca3790fce7c96d6df26540c7b4128215a81089" translate="yes" xml:space="preserve">
          <source>CMOV instruction.</source>
          <target state="translated">Instrucción de CMOV.</target>
        </trans-unit>
        <trans-unit id="c2711a4d5237b1b481ba6a122e49ae7f80826ead" translate="yes" xml:space="preserve">
          <source>CPU does not have a timebase (eg, 601 and 403gx).</source>
          <target state="translated">La CPU no tiene una base de tiempo (por ejemplo,601 y 403gx).</target>
        </trans-unit>
        <trans-unit id="ca704ae8911deda5afe0231823961924eb739a85" translate="yes" xml:space="preserve">
          <source>CPU has a CELL broadband engine.</source>
          <target state="translated">La CPU tiene un motor de banda ancha CELL.</target>
        </trans-unit>
        <trans-unit id="4f3f4709b09760afc34be4c56dc4c6225a92c342" translate="yes" xml:space="preserve">
          <source>CPU has a SIMD/Vector Unit.</source>
          <target state="translated">La CPU tiene una unidad SIMD/Vectorial.</target>
        </trans-unit>
        <trans-unit id="7513f4d098c1065cad2f73416dc6c7b6d28bb7ca" translate="yes" xml:space="preserve">
          <source>CPU has a SPE double precision floating point unit.</source>
          <target state="translated">La CPU tiene una unidad de punto flotante de doble precisión SPE.</target>
        </trans-unit>
        <trans-unit id="249044ceb00915a3621d91cc9c9342822f5d3a2e" translate="yes" xml:space="preserve">
          <source>CPU has a SPE single precision floating point unit.</source>
          <target state="translated">La CPU tiene una unidad de punto flotante de precisión única SPE.</target>
        </trans-unit>
        <trans-unit id="afc457a7d1f6c70e1a12a91ad1a70b454e13c88b" translate="yes" xml:space="preserve">
          <source>CPU has a decimal floating point unit.</source>
          <target state="translated">La CPU tiene una unidad de punto flotante decimal.</target>
        </trans-unit>
        <trans-unit id="daecf052e0ef6eddacd32a707988a46a48b10a26" translate="yes" xml:space="preserve">
          <source>CPU has a floating point unit.</source>
          <target state="translated">La CPU tiene una unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="e350ba25d5b50e7eecaa8cd017e06461b70e0e96" translate="yes" xml:space="preserve">
          <source>CPU has a memory management unit.</source>
          <target state="translated">La CPU tiene una unidad de gestión de memoria.</target>
        </trans-unit>
        <trans-unit id="d25b3ec38c741ef05546cfa00487c01e86a288da" translate="yes" xml:space="preserve">
          <source>CPU has a signal processing extension unit.</source>
          <target state="translated">La CPU tiene una unidad de extensión de procesamiento de señales.</target>
        </trans-unit>
        <trans-unit id="a6cdbd18b45d3ceafe188679188c10b0e63fc06b" translate="yes" xml:space="preserve">
          <source>CPU has hardware transaction memory instructions.</source>
          <target state="translated">La CPU tiene instrucciones de memoria de transacciones de hardware.</target>
        </trans-unit>
        <trans-unit id="817e69cd99aa2fae8e8cb1ea4ccb1e7cade39e36" translate="yes" xml:space="preserve">
          <source>CPU has unified I/D cache.</source>
          <target state="translated">La CPU ha unificado el caché de I/D.</target>
        </trans-unit>
        <trans-unit id="a85030d258895560b198880492e35a8dc7104678" translate="yes" xml:space="preserve">
          <source>CPU support simultaneous multi-threading.</source>
          <target state="translated">La CPU soporta el multihilo simultáneo.</target>
        </trans-unit>
        <trans-unit id="1fa8be29b90ade4bb4d6c9abca15ef4efb5cea12" translate="yes" xml:space="preserve">
          <source>CPU supports 128-bit IEEE binary floating point instructions.</source>
          <target state="translated">La CPU soporta instrucciones de punto flotante binario IEEE de 128 bits.</target>
        </trans-unit>
        <trans-unit id="d0ec10bc634bb744e9ff5bc9b6ccebe2f8a4c1fd" translate="yes" xml:space="preserve">
          <source>CPU supports 32-bit mode execution.</source>
          <target state="translated">La CPU soporta la ejecución en modo de 32 bits.</target>
        </trans-unit>
        <trans-unit id="c550c34cceac587d8bfa3d110ce84630536005e1" translate="yes" xml:space="preserve">
          <source>CPU supports 64-bit mode execution.</source>
          <target state="translated">La CPU soporta la ejecución en modo de 64 bits.</target>
        </trans-unit>
        <trans-unit id="969f1a1bfc594794e1d088866f33884cafe4c0a3" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.00 (eg, POWER4)</source>
          <target state="translated">La CPU soporta ISA 2.00 (por ejemplo,POWER4)</target>
        </trans-unit>
        <trans-unit id="f021a7b007d311f22fec3723c62516e8f3a0319b" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.02 (eg, POWER5)</source>
          <target state="translated">La CPU soporta ISA 2.02 (por ejemplo,POWER5)</target>
        </trans-unit>
        <trans-unit id="ee64c969eb8481f0eae6c612175233cd07361227" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.03 (eg, POWER5+)</source>
          <target state="translated">La CPU soporta ISA 2.03 (por ejemplo,POWER5+)</target>
        </trans-unit>
        <trans-unit id="13964fdc29b60cfc0a706e4cb0569a01c55f1208" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.05 (eg, POWER6)</source>
          <target state="translated">La CPU soporta ISA 2.05 (por ejemplo,POWER6)</target>
        </trans-unit>
        <trans-unit id="4ba1460155478447375ae1fb486a30ad51582aec" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.05 (eg, POWER6) extended opcodes mffgpr and mftgpr.</source>
          <target state="translated">La CPU soporta ISA 2.05 (por ejemplo,POWER6)opcodes extendidos mffgpr y mftgpr.</target>
        </trans-unit>
        <trans-unit id="990b205fa1433a7d0dc63ad9070ee91af0800dd1" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.06 (eg, POWER7)</source>
          <target state="translated">La CPU soporta ISA 2.06 (por ejemplo,POWER7)</target>
        </trans-unit>
        <trans-unit id="6a9081f5b37e7737655ad795c102d5fe7087b65d" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 2.07 (eg, POWER8)</source>
          <target state="translated">La CPU soporta ISA 2.07 (por ejemplo,POWER8)</target>
        </trans-unit>
        <trans-unit id="dcf25ddc902c83eba265e85451df12c824bf2a7b" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 3.0 (eg, POWER9)</source>
          <target state="translated">La CPU soporta ISA 3.0 (por ejemplo,POWER9)</target>
        </trans-unit>
        <trans-unit id="6092133b8e23ee5373746ec5bc5db76ea54238a4" translate="yes" xml:space="preserve">
          <source>CPU supports ISA 3.1 (eg, POWER10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055a8304e60c6c298c280b0809896894a417c35e" translate="yes" xml:space="preserve">
          <source>CPU supports a little-endian mode that uses address swizzling.</source>
          <target state="translated">La CPU soporta un modo &quot;little-endian&quot; que utiliza la dirección swizzling.</target>
        </trans-unit>
        <trans-unit id="255ddfc220c178db8c2fdf2c3d887268be52afce" translate="yes" xml:space="preserve">
          <source>CPU supports event base branching.</source>
          <target state="translated">La CPU soporta la ramificación de la base de eventos.</target>
        </trans-unit>
        <trans-unit id="7a546c031cbdf8f942b2e95c5d11fb1b52e9cc57" translate="yes" xml:space="preserve">
          <source>CPU supports hardware transaction memory but does not support the &lt;code&gt;tsuspend.&lt;/code&gt; instruction.</source>
          <target state="translated">La CPU admite la memoria de transacciones de hardware, pero no admite &lt;code&gt;tsuspend.&lt;/code&gt; instrucci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="98cc31dee3a3972d6c8549b9b9d63935ff74bd07" translate="yes" xml:space="preserve">
          <source>CPU supports icache snooping capabilities.</source>
          <target state="translated">La CPU soporta la capacidad de husmeo de iconos.</target>
        </trans-unit>
        <trans-unit id="86a7a3dc0108d58ef63d3f6ab2c6e0a72b7c8029" translate="yes" xml:space="preserve">
          <source>CPU supports the &lt;code&gt;darn&lt;/code&gt; (deliver a random number) instruction.</source>
          <target state="translated">La CPU admite la instrucci&amp;oacute;n &lt;code&gt;darn&lt;/code&gt; (entregar un n&amp;uacute;mero aleatorio).</target>
        </trans-unit>
        <trans-unit id="77d7a3e63ab0326c7992c2322e10e155757df7b2" translate="yes" xml:space="preserve">
          <source>CPU supports the Embedded ISA category.</source>
          <target state="translated">La CPU soporta la categoría ISA Embebida.</target>
        </trans-unit>
        <trans-unit id="c159e0e90690ac6c2f371b7dff8ce2db12767971" translate="yes" xml:space="preserve">
          <source>CPU supports the PA Semi 6T CORE ISA.</source>
          <target state="translated">La CPU soporta el PA Semi 6T CORE ISA.</target>
        </trans-unit>
        <trans-unit id="2267dd90003bf8b5f66bba6f8158082ed6e95240" translate="yes" xml:space="preserve">
          <source>CPU supports the data stream control register.</source>
          <target state="translated">La CPU soporta el registro de control del flujo de datos.</target>
        </trans-unit>
        <trans-unit id="45a297e9cc9f2eb5df0912ac8e91302da6382422" translate="yes" xml:space="preserve">
          <source>CPU supports the integer select instruction.</source>
          <target state="translated">La CPU soporta la instrucción de selección de números enteros.</target>
        </trans-unit>
        <trans-unit id="2e306759e72b16093678ea3f4c4c712cd49b17a9" translate="yes" xml:space="preserve">
          <source>CPU supports the matrix-multiply assist instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a95efc8023d10b71a08bff59a8789aa22a0fb6" translate="yes" xml:space="preserve">
          <source>CPU supports the old POWER ISA (eg, 601)</source>
          <target state="translated">La CPU soporta el antiguo POWER ISA (por ejemplo,601)</target>
        </trans-unit>
        <trans-unit id="309f8ee6774ef217dd65020d0047499e145915f8" translate="yes" xml:space="preserve">
          <source>CPU supports the set of compatible performance monitoring events.</source>
          <target state="translated">La CPU soporta el conjunto de eventos compatibles de monitoreo de desempeño.</target>
        </trans-unit>
        <trans-unit id="654d56ee4aa1191ad640c84c9cda741472551b11" translate="yes" xml:space="preserve">
          <source>CPU supports the target address register.</source>
          <target state="translated">La CPU soporta el registro de la dirección del objetivo.</target>
        </trans-unit>
        <trans-unit id="2b74cd2604db8f416c0c904f549425dc7576345f" translate="yes" xml:space="preserve">
          <source>CPU supports the vector cryptography instructions.</source>
          <target state="translated">La CPU soporta las instrucciones de criptografía vectorial.</target>
        </trans-unit>
        <trans-unit id="2910c789b3b4293207054dd9a2e43cc18d433b78" translate="yes" xml:space="preserve">
          <source>CPU supports the vector-scalar extension.</source>
          <target state="translated">La CPU soporta la extensión vectorial-escalar.</target>
        </trans-unit>
        <trans-unit id="41c99496e20c6a12697b36d694855c474afbe5bb" translate="yes" xml:space="preserve">
          <source>CPU supports true little-endian mode.</source>
          <target state="translated">La CPU soporta el verdadero modo little-endian.</target>
        </trans-unit>
        <trans-unit id="2ec7e4eb5fc127660ed425c7dcd89cd8eddc4bc5" translate="yes" xml:space="preserve">
          <source>CPUs based on AMD Family 10h cores with x86-64 instruction set support. (This supersets MMX, SSE, SSE2, SSE3, SSE4A, 3DNow!, enhanced 3DNow!, ABM and 64-bit instruction set extensions.)</source>
          <target state="translated">CPUs basadas en núcleos de 10h de la familia AMD con soporte de conjuntos de instrucciones x86-64.(Esto supera a las extensiones MMX,SSE,SSE2,SSE3,SSE4A,3DNow!,3DNow! mejorado,ABM y conjunto de instrucciones de 64 bits).</target>
        </trans-unit>
        <trans-unit id="b84062366ba14fb3f3b6ff6b47d03c475a3828a9" translate="yes" xml:space="preserve">
          <source>CPUs based on AMD Family 14h cores with x86-64 instruction set support. (This supersets MMX, SSE, SSE2, SSE3, SSSE3, SSE4A, CX16, ABM and 64-bit instruction set extensions.)</source>
          <target state="translated">CPUs basadas en núcleos de la familia AMD 14h con soporte de conjuntos de instrucciones x86-64.(Esto supera las extensiones de los conjuntos de instrucciones MMX,SSE,SSE2,SSE3,SSSE3,SSE4A,CX16,ABM y 64 bits).</target>
        </trans-unit>
        <trans-unit id="7cd17945f4d7f7d90dbb7eb4390b3e09de24051b" translate="yes" xml:space="preserve">
          <source>CPUs based on AMD Family 15h cores with x86-64 instruction set support. (This supersets FMA4, AVX, XOP, LWP, AES, PCLMUL, CX16, MMX, SSE, SSE2, SSE3, SSE4A, SSSE3, SSE4.1, SSE4.2, ABM and 64-bit instruction set extensions.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113524bb3893cb5857442da17502358001cf141b" translate="yes" xml:space="preserve">
          <source>CPUs based on AMD Family 15h cores with x86-64 instruction set support. (This supersets FMA4, AVX, XOP, LWP, AES, PCL_MUL, CX16, MMX, SSE, SSE2, SSE3, SSE4A, SSSE3, SSE4.1, SSE4.2, ABM and 64-bit instruction set extensions.)</source>
          <target state="translated">CPUs basadas en núcleos de la familia AMD 15h con soporte de conjuntos de instrucciones x86-64.(Esto reemplaza a las extensiones de conjuntos de instrucciones de FMA4,AVX,XOP,LWP,AES,PCL_MUL,CX16,MMX,SSE,SSE2,SSE3,SSE4A,SSSE3,SSE4.1,SSE4.2,ABM y 64 bits).</target>
        </trans-unit>
        <trans-unit id="de84db6df1b92636fc4cae8a7a0a74534cf2484c" translate="yes" xml:space="preserve">
          <source>CPUs based on AMD Family 16h cores with x86-64 instruction set support. This includes MOVBE, F16C, BMI, AVX, PCLMUL, AES, SSE4.2, SSE4.1, CX16, ABM, SSE4A, SSSE3, SSE3, SSE2, SSE, MMX and 64-bit instruction set extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a0219528807f6268d19e1c7ca96f3e9c601c1e" translate="yes" xml:space="preserve">
          <source>CPUs based on AMD Family 16h cores with x86-64 instruction set support. This includes MOVBE, F16C, BMI, AVX, PCL_MUL, AES, SSE4.2, SSE4.1, CX16, ABM, SSE4A, SSSE3, SSE3, SSE2, SSE, MMX and 64-bit instruction set extensions.</source>
          <target state="translated">CPUs basadas en núcleos de la familia AMD 16h con soporte de conjuntos de instrucciones x86-64.Esto incluye MOVBE,F16C,BMI,AVX,PCL_MUL,AES,SSE4.2,SSE4.1,CX16,ABM,SSE4A,SSSE3,SSE3,SSE2,SSE,MMX y extensiones de conjuntos de instrucciones de 64 bits.</target>
        </trans-unit>
        <trans-unit id="762cf7076b068d306d32ea79b0d0e2277121f2b5" translate="yes" xml:space="preserve">
          <source>CR</source>
          <target state="translated">CR</target>
        </trans-unit>
        <trans-unit id="5e1fb0077df92097ce069aa21ed47aa03c3d5c5d" translate="yes" xml:space="preserve">
          <source>CR16 Architecture&amp;mdash;</source>
          <target state="translated">Arquitectura CR16&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="f9c744e8c0ecb712753e6342db41d199b59d9bf6" translate="yes" xml:space="preserve">
          <source>CTR</source>
          <target state="translated">CTR</target>
        </trans-unit>
        <trans-unit id="58ad68590efc1385d2b4fd64a16b4b9f8cfaaa44" translate="yes" xml:space="preserve">
          <source>Call operand, const_int, for absolute calls.</source>
          <target state="translated">Llamada operando,const_int,para llamadas absolutas.</target>
        </trans-unit>
        <trans-unit id="3373e7e79f4085d8f7291896ef1d3760c15083be" translate="yes" xml:space="preserve">
          <source>Call operand, reg, for indirect calls</source>
          <target state="translated">Llamada operando,reg,para llamadas indirectas</target>
        </trans-unit>
        <trans-unit id="3c51d11770c5ea3546c0d152d73faf160c859f37" translate="yes" xml:space="preserve">
          <source>Call operand, symbol, for relative calls.</source>
          <target state="translated">Operando de llamada,símbolo,para llamadas de parientes.</target>
        </trans-unit>
        <trans-unit id="f0c515fe9bf062328bec62182c3bb93d352208ec" translate="yes" xml:space="preserve">
          <source>Call the named function &lt;var&gt;function&lt;/var&gt;, passing it &lt;var&gt;args&lt;/var&gt;. &lt;var&gt;args&lt;/var&gt; is first processed as a nested spec string, then split into an argument vector in the usual fashion. The function returns a string which is processed as if it had appeared literally as part of the current spec.</source>
          <target state="translated">Llame a la funci&amp;oacute;n llamada &lt;var&gt;function&lt;/var&gt; , pas&amp;aacute;ndole &lt;var&gt;args&lt;/var&gt; . &lt;var&gt;args&lt;/var&gt; se procesa primero como una cadena de especificaciones anidada, luego se divide en un vector de argumentos de la manera habitual. La funci&amp;oacute;n devuelve una cadena que se procesa como si hubiera aparecido literalmente como parte de la especificaci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="4b1ccc6ccff0a4b4d69b01f9c83e0859c8e4f058" translate="yes" xml:space="preserve">
          <source>Calling conventions are a subset of an ABI that specify of how arguments are passed and function results are returned.</source>
          <target state="translated">Las convenciones de llamada son un subconjunto de un ABI que especifican de qué manera se pasan los argumentos y se devuelven los resultados de las funciones.</target>
        </trans-unit>
        <trans-unit id="8e13d2ff4cf44ed7d75b8cee9472ba906dfafd20" translate="yes" xml:space="preserve">
          <source>Calling this function with a nonzero argument can have unpredictable effects, including crashing the calling program. As a result, calls that are considered unsafe are diagnosed when the</source>
          <target state="translated">Llamar a esta función con un argumento distinto de cero puede tener efectos impredecibles,incluyendo la caída del programa de llamada.Como resultado,las llamadas que se consideran inseguras se diagnostican cuando el</target>
        </trans-unit>
        <trans-unit id="fc12921ff6d4899e4dc68b34cc1cd37e3157e57e" translate="yes" xml:space="preserve">
          <source>Calls a library function that performs the operation in double precision floating point. Division by zero causes a floating-point exception. This is the default for SHcompact with FPU. Specifying this for targets that do not have a double precision FPU defaults to &lt;code&gt;call-div1&lt;/code&gt;.</source>
          <target state="translated">Llama a una funci&amp;oacute;n de biblioteca que realiza la operaci&amp;oacute;n en coma flotante de doble precisi&amp;oacute;n. La divisi&amp;oacute;n por cero provoca una excepci&amp;oacute;n de punto flotante. Este es el valor predeterminado para SHcompact con FPU. Especificar esto para los objetivos que no tienen una FPU de precisi&amp;oacute;n doble se establece de forma predeterminada en &lt;code&gt;call-div1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29e8cd2fa85f5515142e26b60a518bb56cd4bcb6" translate="yes" xml:space="preserve">
          <source>Calls a library function that uses a lookup table for small divisors and the &lt;code&gt;div1&lt;/code&gt; instruction with case distinction for larger divisors. Division by zero calculates an unspecified result and does not trap. This is the default for SH4. Specifying this for targets that do not have dynamic shift instructions defaults to &lt;code&gt;call-div1&lt;/code&gt;.</source>
          <target state="translated">Llama a una funci&amp;oacute;n de biblioteca que usa una tabla de b&amp;uacute;squeda para divisores peque&amp;ntilde;os y la instrucci&amp;oacute;n &lt;code&gt;div1&lt;/code&gt; con distinci&amp;oacute;n de may&amp;uacute;sculas y min&amp;uacute;sculas para divisores m&amp;aacute;s grandes. La divisi&amp;oacute;n por cero calcula un resultado no especificado y no captura. Este es el valor predeterminado para SH4. Especificar esto para los destinos que no tienen instrucciones de cambio din&amp;aacute;mico se establece de forma predeterminada en &lt;code&gt;call-div1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b66ee13b0a48eb1333567adb5302965969bbf50a" translate="yes" xml:space="preserve">
          <source>Calls a library function that uses the single-step division instruction &lt;code&gt;div1&lt;/code&gt; to perform the operation. Division by zero calculates an unspecified result and does not trap. This is the default except for SH4, SH2A and SHcompact.</source>
          <target state="translated">Llama a una funci&amp;oacute;n de biblioteca que utiliza la instrucci&amp;oacute;n de divisi&amp;oacute;n de un solo paso &lt;code&gt;div1&lt;/code&gt; para realizar la operaci&amp;oacute;n. La divisi&amp;oacute;n por cero calcula un resultado no especificado y no captura. &amp;Eacute;ste es el valor predeterminado excepto para SH4, SH2A y SHcompact.</target>
        </trans-unit>
        <trans-unit id="b45cc51de5de6fd998285ffd2412d7b2646d5ad0" translate="yes" xml:space="preserve">
          <source>Calls to &lt;code&gt;foo&lt;/code&gt; are mapped to calls to &lt;code&gt;foo{20040821}&lt;/code&gt;.</source>
          <target state="translated">Las llamadas a &lt;code&gt;foo&lt;/code&gt; se asignan a llamadas a &lt;code&gt;foo{20040821}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293878ce1781e2ea1bacb79578feb3fbe4be3315" translate="yes" xml:space="preserve">
          <source>Calls to external functions with this attribute must return to the current compilation unit only by return or by exception handling. In particular, a leaf function is not allowed to invoke callback functions passed to it from the current compilation unit, directly call functions exported by the unit, or &lt;code&gt;longjmp&lt;/code&gt; into the unit. Leaf functions might still call functions from other compilation units and thus they are not necessarily leaf in the sense that they contain no function calls at all.</source>
          <target state="translated">Las llamadas a funciones externas con este atributo deben regresar a la unidad de compilaci&amp;oacute;n actual solo mediante devoluci&amp;oacute;n o manejo de excepciones. En particular, una funci&amp;oacute;n de hoja no puede invocar funciones de devoluci&amp;oacute;n de llamada que se le pasaron desde la unidad de compilaci&amp;oacute;n actual, llamar directamente a funciones exportadas por la unidad o &lt;code&gt;longjmp&lt;/code&gt; a la unidad. Las funciones de hoja a&amp;uacute;n pueden llamar a funciones de otras unidades de compilaci&amp;oacute;n y, por lo tanto, no son necesariamente hojas en el sentido de que no contienen ninguna llamada de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4271715ba8546178ce2b0fafe7396f6340205ed7" translate="yes" xml:space="preserve">
          <source>Calls to functions that have no observable effects on the state of the program other than to return a value may lend themselves to optimizations such as common subexpression elimination. Declaring such functions with the &lt;code&gt;pure&lt;/code&gt; attribute allows GCC to avoid emitting some calls in repeated invocations of the function with the same argument values.</source>
          <target state="translated">Las llamadas a funciones que no tienen efectos observables en el estado del programa que no sean devolver un valor pueden prestarse a optimizaciones como la eliminaci&amp;oacute;n de subexpresiones comunes. Declarar tales funciones con el atributo &lt;code&gt;pure&lt;/code&gt; permite a GCC evitar emitir algunas llamadas en invocaciones repetidas de la funci&amp;oacute;n con los mismos valores de argumento.</target>
        </trans-unit>
        <trans-unit id="3b52d0ab938b444cac1b9e9d1c160806cd6da345" translate="yes" xml:space="preserve">
          <source>Calls to functions whose return value is not affected by changes to the observable state of the program and that have no observable effects on such state other than to return a value may lend themselves to optimizations such as common subexpression elimination. Declaring such functions with the &lt;code&gt;const&lt;/code&gt; attribute allows GCC to avoid emitting some calls in repeated invocations of the function with the same argument values.</source>
          <target state="translated">Las llamadas a funciones cuyo valor de retorno no se ve afectado por cambios en el estado observable del programa y que no tienen efectos observables en dicho estado aparte de devolver un valor pueden prestarse a optimizaciones como la eliminaci&amp;oacute;n de subexpresiones comunes. Declarar tales funciones con el atributo &lt;code&gt;const&lt;/code&gt; permite a GCC evitar emitir algunas llamadas en invocaciones repetidas de la funci&amp;oacute;n con los mismos valores de argumento.</target>
        </trans-unit>
        <trans-unit id="f8eba46ecad008a4e218a210a71672db04d7e157" translate="yes" xml:space="preserve">
          <source>Cancel an assertion with the predicate &lt;var&gt;predicate&lt;/var&gt; and answer &lt;var&gt;answer&lt;/var&gt;.</source>
          <target state="translated">Cancelar una aserci&amp;oacute;n con el predicado &lt;var&gt;predicate&lt;/var&gt; y responder &lt;var&gt;answer&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="59d15eea66865b0282cb17c0e3120ed653071f95" translate="yes" xml:space="preserve">
          <source>Cancel any previous definition of &lt;var&gt;name&lt;/var&gt;, either built in or provided with a</source>
          <target state="translated">Cancelar cualquier definici&amp;oacute;n previa de &lt;var&gt;name&lt;/var&gt; , ya sea incorporada o provista con un</target>
        </trans-unit>
        <trans-unit id="192387cfc73b539ff900c725ddee4d021db73db5" translate="yes" xml:space="preserve">
          <source>Casting to union type from any member of the union.</source>
          <target state="translated">Casting al tipo de unión de cualquier miembro de la unión.</target>
        </trans-unit>
        <trans-unit id="b08eca4544a17d0207cde77668a933d9951e246a" translate="yes" xml:space="preserve">
          <source>Cause gas to print out tomcat statistics.</source>
          <target state="translated">Causar que el gas imprima las estadísticas de los gatos.</target>
        </trans-unit>
        <trans-unit id="5a1bd09378f19d49cb410444dadaeb9f88738a8a" translate="yes" xml:space="preserve">
          <source>Cause the errors having to do with files that have the wrong architecture to be fatal.</source>
          <target state="translated">Causar que los errores que tienen que ver con los archivos que tienen la arquitectura equivocada sean fatales.</target>
        </trans-unit>
        <trans-unit id="5019333f8c270c0e57b171951e0397047e39d35e" translate="yes" xml:space="preserve">
          <source>Causes GCC to remember the state of the diagnostics as of each &lt;code&gt;push&lt;/code&gt;, and restore to that point at each &lt;code&gt;pop&lt;/code&gt;. If a &lt;code&gt;pop&lt;/code&gt; has no matching &lt;code&gt;push&lt;/code&gt;, the command-line options are restored.</source>
          <target state="translated">Hace que GCC recuerde el estado de los diagn&amp;oacute;sticos a partir de cada &lt;code&gt;push&lt;/code&gt; y lo restaure a ese punto en cada &lt;code&gt;pop&lt;/code&gt; . Si una &lt;code&gt;pop&lt;/code&gt; no tiene una &lt;code&gt;push&lt;/code&gt; coincidente , se restauran las opciones de la l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="667cccec716e1283ccef9e29985511e0bdf9e0a0" translate="yes" xml:space="preserve">
          <source>Causes all functions to default to the &lt;code&gt;.far&lt;/code&gt; section. Without this option, functions default to the &lt;code&gt;.near&lt;/code&gt; section.</source>
          <target state="translated">Hace que todas las funciones se &lt;code&gt;.far&lt;/code&gt; forma predeterminada en la secci&amp;oacute;n .far . Sin esta opci&amp;oacute;n, las funciones est&amp;aacute;n predeterminadas en la secci&amp;oacute;n &lt;code&gt;.near&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e30905206e2b1ac1064f6ac3bbe5bd6c803a6b79" translate="yes" xml:space="preserve">
          <source>Causes all variables to default to the &lt;code&gt;.tiny&lt;/code&gt; section. Note that there is a 65536-byte limit to this section. Accesses to these variables use the &lt;code&gt;%gp&lt;/code&gt; base register.</source>
          <target state="translated">Hace que todas las variables &lt;code&gt;.tiny&lt;/code&gt; defecto la secci&amp;oacute;n .tiny . Tenga en cuenta que hay un l&amp;iacute;mite de 65536 bytes para esta secci&amp;oacute;n. Los accesos a estas variables utilizan el registro base &lt;code&gt;%gp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98be0c7de301463de1c80070885a43330018a0b2" translate="yes" xml:space="preserve">
          <source>Causes constant variables to be placed in the &lt;code&gt;.near&lt;/code&gt; section.</source>
          <target state="translated">Hace que las variables constantes se coloquen en la secci&amp;oacute;n &lt;code&gt;.near&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="655599ac8eaa0291e221b62364ffdf96a51309de" translate="yes" xml:space="preserve">
          <source>Causes the output file to be marked such that the dynamic linker will bind all undefined references when the file is loaded or launched.</source>
          <target state="translated">Hace que el archivo de salida se marque de tal manera que el enlazador dinámico enlazará todas las referencias no definidas cuando se cargue o se lance el archivo.</target>
        </trans-unit>
        <trans-unit id="c48452dfc4582d4eee857576d8fb13bb7694884b" translate="yes" xml:space="preserve">
          <source>Causes variables to be assigned to the &lt;code&gt;.far&lt;/code&gt; section by default.</source>
          <target state="translated">Hace que las variables se asignen a la secci&amp;oacute;n &lt;code&gt;.far&lt;/code&gt; de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="13cb136a09a7c1b01f2dc417dcf7c22b8038c03d" translate="yes" xml:space="preserve">
          <source>Causes variables to be assigned to the &lt;code&gt;.near&lt;/code&gt; section by default.</source>
          <target state="translated">Hace que las variables se asignen a la secci&amp;oacute;n &lt;code&gt;.near&lt;/code&gt; de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="efdb8f56a4df91a529ce6b66e59857019a48ac1f" translate="yes" xml:space="preserve">
          <source>Certain ABI-changing flags are required to match in all compilation units, and trying to override this at link time with a conflicting value is ignored. This includes options such as</source>
          <target state="translated">Ciertas banderas de cambio de ABI deben coincidir en todas las unidades de compilación,y se ignora el intento de anular esto en el momento del enlace con un valor conflictivo.Esto incluye opciones como</target>
        </trans-unit>
        <trans-unit id="a8db3b10d95cbc07c88dbe64efa680baa0d22c3b" translate="yes" xml:space="preserve">
          <source>Certain local variables aren&amp;rsquo;t recognized by debuggers when you compile with optimization.</source>
          <target state="translated">Los depuradores no reconocen ciertas variables locales cuando compila con optimizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="be7c527dd55f67d739c97b4f416bd42f396b0844" translate="yes" xml:space="preserve">
          <source>Cfront model</source>
          <target state="translated">Modelo Cfront</target>
        </trans-unit>
        <trans-unit id="1aba59b0fc2fb3ed3ce5d3423cf83addc1f152f7" translate="yes" xml:space="preserve">
          <source>Change ABI to use double word insns.</source>
          <target state="translated">Cambie el ABI para usar la palabra doble insns.</target>
        </trans-unit>
        <trans-unit id="9f8ed70cb1d356e0b695cceb7ab02d866b216534" translate="yes" xml:space="preserve">
          <source>Change paragraph 1</source>
          <target state="translated">Cambiar el párrafo 1</target>
        </trans-unit>
        <trans-unit id="3cb692fbb429d564d86c14c1772ab21a4cec5d73" translate="yes" xml:space="preserve">
          <source>Change paragraph 2</source>
          <target state="translated">Cambiar el párrafo 2</target>
        </trans-unit>
        <trans-unit id="9b9fbfc9cacb726e629a9636bbe98d28a8d83b9b" translate="yes" xml:space="preserve">
          <source>Change paragraph 2 to</source>
          <target state="translated">Cambie el párrafo 2 por</target>
        </trans-unit>
        <trans-unit id="cb241f39f5fa8625fba68e7d9da30611af7534b7" translate="yes" xml:space="preserve">
          <source>Change the current ABI to use IBM extended-precision long double. This is not likely to work if your system defaults to using IEEE extended-precision long double. If you change the long double type from IEEE extended-precision, the compiler will issue a warning unless you use the</source>
          <target state="translated">Cambiar el ABI actual para usar el doble de largo de precisión extendida de IBM.No es probable que esto funcione si su sistema utiliza por defecto el doble largo de precisión extendida del IEEE.Si cambia el tipo de doble largo de IEEE extended-precision,el compilador emitirá una advertencia a menos que utilice el</target>
        </trans-unit>
        <trans-unit id="8b05bb4515e125b765f13f146e5cba54744fff37" translate="yes" xml:space="preserve">
          <source>Change the current ABI to use IEEE extended-precision long double. This is not likely to work if your system defaults to using IBM extended-precision long double. If you change the long double type from IBM extended-precision, the compiler will issue a warning unless you use the</source>
          <target state="translated">Cambiar el ABI actual para usar el doble largo de precisión IEEE.No es probable que esto funcione si su sistema utiliza por defecto el doble largo de precisión extendida de IBM.Si cambia el tipo de doble largo de IBM extended-precision,el compilador emitirá una advertencia a menos que utilice el</target>
        </trans-unit>
        <trans-unit id="24cf332293e237ad325e62a5ee2905fadea5402b" translate="yes" xml:space="preserve">
          <source>Change the current ABI to use the ELFv1 ABI. This is the default ABI for big-endian PowerPC 64-bit Linux. Overriding the default ABI requires special system support and is likely to fail in spectacular ways.</source>
          <target state="translated">Cambiar el ABI actual para usar el ABI ELFv1.Esta es la ABI por defecto para el gran PowerPC de 64 bits de Linux.Anular la ABI por defecto requiere un soporte especial del sistema y es probable que falle de manera espectacular.</target>
        </trans-unit>
        <trans-unit id="8ed54cd4038a43f7d20137c040c4f60546641dbf" translate="yes" xml:space="preserve">
          <source>Change the current ABI to use the ELFv2 ABI. This is the default ABI for little-endian PowerPC 64-bit Linux. Overriding the default ABI requires special system support and is likely to fail in spectacular ways.</source>
          <target state="translated">Cambiar el ABI actual para usar el ABI ELFv2.Esta es la ABI por defecto para el pequeño PowerPC de 64 bits de Linux.Anular la ABI por defecto requiere un soporte especial del sistema y es probable que falle de manera espectacular.</target>
        </trans-unit>
        <trans-unit id="85a1bd4814c92b33b933c24808e3438fdd28e471" translate="yes" xml:space="preserve">
          <source>Change the preferred SIMD mode to SImode. The default is</source>
          <target state="translated">Cambie el modo SIMD preferido a modo SImode.El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="1693787c0c1da76f7df927835bc9d253ab1baa96" translate="yes" xml:space="preserve">
          <source>Change the target of the rule emitted by dependency generation. By default CPP takes the name of the main input file, deletes any directory components and any file suffix such as &amp;lsquo;</source>
          <target state="translated">Cambie el destino de la regla emitida por la generaci&amp;oacute;n de dependencia. Por defecto, CPP toma el nombre del archivo de entrada principal, elimina cualquier componente de directorio y cualquier sufijo de archivo como '</target>
        </trans-unit>
        <trans-unit id="aca39a5b032e87a9c462bafacf2e62ade09bc55e" translate="yes" xml:space="preserve">
          <source>Check calls to &lt;code&gt;printf&lt;/code&gt; and &lt;code&gt;scanf&lt;/code&gt;, etc., to make sure that the arguments supplied have types appropriate to the format string specified, and that the conversions specified in the format string make sense. This includes standard functions, and others specified by format attributes (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), in the &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;scanf&lt;/code&gt;, &lt;code&gt;strftime&lt;/code&gt; and &lt;code&gt;strfmon&lt;/code&gt; (an X/Open extension, not in the C standard) families (or other target-specific families). Which functions are checked without format attributes having been specified depends on the standard version selected, and such checks of functions without the attribute specified are disabled by</source>
          <target state="translated">Verifique las llamadas a &lt;code&gt;printf&lt;/code&gt; y &lt;code&gt;scanf&lt;/code&gt; , etc., para asegurarse de que los argumentos proporcionados tengan los tipos apropiados para la cadena de formato especificada y que las conversiones especificadas en la cadena de formato tengan sentido. Esto incluye funciones est&amp;aacute;ndar y otras especificadas por atributos de formato (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), en las &lt;code&gt;strftime&lt;/code&gt; &lt;code&gt;printf&lt;/code&gt; , &lt;code&gt;scanf&lt;/code&gt; , strftime y &lt;code&gt;strfmon&lt;/code&gt; (una extensi&amp;oacute;n X / Open, no en el est&amp;aacute;ndar C) (u otras familias espec&amp;iacute;ficas de destino). Las funciones que se verifican sin que se hayan especificado atributos de formato dependen de la versi&amp;oacute;n est&amp;aacute;ndar seleccionada, y tales verificaciones de funciones sin el atributo especificado est&amp;aacute;n deshabilitadas por</target>
        </trans-unit>
        <trans-unit id="c6a3f453fdd63ac92077276df83570873739aa07" translate="yes" xml:space="preserve">
          <source>Check for 64 bits wide constants for add/sub instructions</source>
          <target state="translated">Comprueba las constantes de 64 bits de ancho para las instrucciones add/sub</target>
        </trans-unit>
        <trans-unit id="fac4c7c683a989d8b06bb9ece7f678cee49ed294" translate="yes" xml:space="preserve">
          <source>Check that the pointer returned by &lt;code&gt;operator new&lt;/code&gt; is non-null before attempting to modify the storage allocated. This check is normally unnecessary because the C++ standard specifies that &lt;code&gt;operator new&lt;/code&gt; only returns &lt;code&gt;0&lt;/code&gt; if it is declared &lt;code&gt;throw()&lt;/code&gt;, in which case the compiler always checks the return value even without this option. In all other cases, when &lt;code&gt;operator new&lt;/code&gt; has a non-empty exception specification, memory exhaustion is signalled by throwing &lt;code&gt;std::bad_alloc&lt;/code&gt;. See also &amp;lsquo;</source>
          <target state="translated">Compruebe que el puntero devuelto por el &lt;code&gt;operator new&lt;/code&gt; no sea nulo antes de intentar modificar el almacenamiento asignado. Esta verificaci&amp;oacute;n es normalmente innecesaria porque el est&amp;aacute;ndar C ++ especifica que el &lt;code&gt;operator new&lt;/code&gt; solo devuelve &lt;code&gt;0&lt;/code&gt; si se declara &lt;code&gt;throw()&lt;/code&gt; , en cuyo caso el compilador siempre verifica el valor de retorno incluso sin esta opci&amp;oacute;n. En todos los dem&amp;aacute;s casos, cuando el &lt;code&gt;operator new&lt;/code&gt; tiene una especificaci&amp;oacute;n de excepci&amp;oacute;n no vac&amp;iacute;a, el agotamiento de la memoria se &lt;code&gt;std::bad_alloc&lt;/code&gt; lanzando std :: bad_alloc . Ver tambi&amp;eacute;n '</target>
        </trans-unit>
        <trans-unit id="81e890de105f29124c3560894740b09b086a655a" translate="yes" xml:space="preserve">
          <source>Check the code for syntax errors, but don&amp;rsquo;t do anything beyond that.</source>
          <target state="translated">Verifique el c&amp;oacute;digo en busca de errores de sintaxis, pero no haga nada m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="5b609f7a36a96f87c3d3229801dbbe278531362e" translate="yes" xml:space="preserve">
          <source>Checking the number and type of arguments to a function which has an old-fashioned definition and no prototype.</source>
          <target state="translated">Comprobando el número y el tipo de argumentos de una función que tiene una definición anticuada y ningún prototipo.</target>
        </trans-unit>
        <trans-unit id="fd9acb009d6a873fdb579dcb1f012d6d507dcf76" translate="yes" xml:space="preserve">
          <source>Choose a data model. The choices for &lt;var&gt;model&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Elija un modelo de datos. Las opciones de &lt;var&gt;model&lt;/var&gt; o son '</target>
        </trans-unit>
        <trans-unit id="8d3369d8e5fea9b901b46c632d20401df2fdb02c" translate="yes" xml:space="preserve">
          <source>Choose between the two available implementations of</source>
          <target state="translated">Elija entre las dos implementaciones disponibles de</target>
        </trans-unit>
        <trans-unit id="41e3a1c87aff0500a839e105b5b619da6d89b8a6" translate="yes" xml:space="preserve">
          <source>Choose integer type as 32-bit wide.</source>
          <target state="translated">Elija el tipo entero como 32 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="fd477ac5e4063d79ef6de9d30fdf3c13757351dd" translate="yes" xml:space="preserve">
          <source>Choose startup files and linker script suitable for the simulator.</source>
          <target state="translated">Elija los archivos de inicio y el guión del enlazador adecuados para el simulador.</target>
        </trans-unit>
        <trans-unit id="a7c124dc3d6f2fff1283f2960f19679f618eb758" translate="yes" xml:space="preserve">
          <source>Chopped rounding mode. Floating-point numbers are rounded towards zero.</source>
          <target state="translated">Modo de redondeo cortado.Los números de punto flotante se redondean hacia el cero.</target>
        </trans-unit>
        <trans-unit id="baeeaf6c90ab7667596e853c19ec9377ba1a6bed" translate="yes" xml:space="preserve">
          <source>Chunk size of omp schedule for loops parallelized by parloops.</source>
          <target state="translated">El tamaño de un trozo del programa de omp para bucles paralelos a los bucles.</target>
        </trans-unit>
        <trans-unit id="39f6c5316b94c42ede9e8f3c0902f04af5a47ac9" translate="yes" xml:space="preserve">
          <source>Clobber descriptions may not in any way overlap with an input or output operand. For example, you may not have an operand describing a register class with one member when listing that register in the clobber list. Variables declared to live in specific registers (see &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Explicit Register Variables&lt;/a&gt;) and used as &lt;code&gt;asm&lt;/code&gt; input or output operands must have no part mentioned in the clobber description. In particular, there is no way to specify that input operands get modified without also specifying them as output operands.</source>
          <target state="translated">Las descripciones de Clobber no pueden superponerse de ninguna manera con un operando de entrada o salida. Por ejemplo, es posible que no tenga un operando que describa una clase de registro con un miembro al incluir ese registro en la lista clobber. Las variables declaradas para vivir en registros espec&amp;iacute;ficos (consulte &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Variables de registro expl&amp;iacute;citas&lt;/a&gt; ) y utilizadas como operandos de entrada o salida de &lt;code&gt;asm&lt;/code&gt; no deben tener ninguna parte mencionada en la descripci&amp;oacute;n del clobber. En particular, no hay forma de especificar que los operandos de entrada se modifiquen sin especificarlos tambi&amp;eacute;n como operandos de salida.</target>
        </trans-unit>
        <trans-unit id="e7d5e82c3d8cf6aecb50f1c3dec1dfd81862c300" translate="yes" xml:space="preserve">
          <source>Code Generation Options</source>
          <target state="translated">Opciones de generación de código</target>
        </trans-unit>
        <trans-unit id="de73aa04e00c631b2bba60472a9b4cb42f90647b" translate="yes" xml:space="preserve">
          <source>Code generation tweaks that disable, respectively, splitting of 32-bit loads, generation of post-increment addresses, and generation of post-modify addresses. The defaults are</source>
          <target state="translated">Los ajustes de generación de códigos que desactivan,respectivamente,la división de cargas de 32 bits,la generación de direcciones post-incremento y la generación de direcciones post-modificadas.Los valores por defecto son</target>
        </trans-unit>
        <trans-unit id="0acb8ba8662201458fc8762cdc2bfb973da3d9b7" translate="yes" xml:space="preserve">
          <source>Code like this may run successfully under some other compilers, particularly obsolete cfront-based compilers that delete temporaries along with normal local variables. However, the GNU C++ behavior is standard-conforming, so if your program depends on late destruction of temporaries it is not portable.</source>
          <target state="translated">Este tipo de código puede funcionar satisfactoriamente con algunos otros compiladores,en particular con los obsoletos compiladores basados en el frente que eliminan las variables temporales junto con las variables locales normales.Sin embargo,el comportamiento de C++de GNU es estándar,así que si su programa depende de la destrucción tardía de temporales no es portable.</target>
        </trans-unit>
        <trans-unit id="d477ef0f890f99da791a35a9c4922d4a6b4caa9b" translate="yes" xml:space="preserve">
          <source>Code that (effectively) clobbers bits of &lt;code&gt;SREG&lt;/code&gt; other than the &lt;code&gt;I&lt;/code&gt;-flag by writing to the memory location of &lt;code&gt;SREG&lt;/code&gt;.</source>
          <target state="translated">Codifique (efectivamente) los bits de &lt;code&gt;SREG&lt;/code&gt; que no sean el indicador &lt;code&gt;I&lt;/code&gt; escribiendo en la ubicaci&amp;oacute;n de memoria de &lt;code&gt;SREG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22aee03764143c3347036737d5c49aa3c48b93fe" translate="yes" xml:space="preserve">
          <source>Code that uses inline assembler to jump to a different function which expects (parts of) the prologue code as outlined above to be present.</source>
          <target state="translated">Código que utiliza el ensamblador en línea para saltar a una función diferente que espera que (partes de)el código del prólogo como se ha descrito anteriormente esté presente.</target>
        </trans-unit>
        <trans-unit id="a04d4be0af028c55d37a5eda8e2e9e52e00d9883" translate="yes" xml:space="preserve">
          <source>Collect and dump debug information into a temporary file if an internal compiler error (ICE) occurs.</source>
          <target state="translated">Recopilar y volcar la información de depuración en un archivo temporal si se produce un error de compilación interna (ICE).</target>
        </trans-unit>
        <trans-unit id="3de9bf73c20469d02f33a82c6c1b964c35ca72c5" translate="yes" xml:space="preserve">
          <source>Collect the profiles for different set of inputs, and use this tool to merge them. One can specify the weight to factor in the relative importance of each input.</source>
          <target state="translated">Recopile los perfiles de diferentes conjuntos de entradas y utilice esta herramienta para fusionarlos.Se puede especificar el peso a tener en cuenta en la importancia relativa de cada entrada.</target>
        </trans-unit>
        <trans-unit id="674fdd25c0f94978ce5404bf7783af22ebecb1fb" translate="yes" xml:space="preserve">
          <source>Combine increments or decrements of addresses with memory accesses. This pass is always skipped on architectures that do not have instructions to support this. Enabled by default at</source>
          <target state="translated">Combinar incrementos o disminuciones de direcciones con accesos de memoria.Este pase siempre se salta en las arquitecturas que no tienen instrucciones que lo respalden.Habilitado por defecto en</target>
        </trans-unit>
        <trans-unit id="5c675961000becf8ff6422c0eeb1b9242b5fdf0f" translate="yes" xml:space="preserve">
          <source>Combines the effects of both &lt;code&gt;__ATOMIC_ACQUIRE&lt;/code&gt; and &lt;code&gt;__ATOMIC_RELEASE&lt;/code&gt;.</source>
          <target state="translated">Combina los efectos de &lt;code&gt;__ATOMIC_ACQUIRE&lt;/code&gt; y &lt;code&gt;__ATOMIC_RELEASE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4393d8b520a9b50ddef09d9f77984a620fcf38de" translate="yes" xml:space="preserve">
          <source>Combining several classes is possible, although this usually restricts the output so much that there is nothing to display. One case where it does work, however, is when one of the classes is &lt;var&gt;target&lt;/var&gt;. For example, to display all the target-specific optimization options, use:</source>
          <target state="translated">Es posible combinar varias clases, aunque esto suele restringir tanto la salida que no hay nada que mostrar. Sin embargo, un caso en el que funciona es cuando una de las clases es &lt;var&gt;target&lt;/var&gt; . Por ejemplo, para mostrar todas las opciones de optimizaci&amp;oacute;n espec&amp;iacute;ficas del objetivo, utilice:</target>
        </trans-unit>
        <trans-unit id="72a257637f31b3509bd8ac95d015b26d1c5d9ce9" translate="yes" xml:space="preserve">
          <source>Command options supported by &amp;lsquo;</source>
          <target state="translated">Opciones de comando compatibles con '</target>
        </trans-unit>
        <trans-unit id="8e5bbd00924927db3116b7ce896a99d0d6c09a71" translate="yes" xml:space="preserve">
          <source>Commit the current transaction. When no transaction is active this faults. All memory side effects of the transaction become visible to other threads in an atomic manner.</source>
          <target state="translated">Comienza la transacción actual.Cuando no hay ninguna operación activa,esto falla.Todos los efectos secundarios de la memoria de la transacción se hacen visibles a otros hilos de manera atómica.</target>
        </trans-unit>
        <trans-unit id="953dbfff4f1c2d7c9623cfa81345a412c8c95e6f" translate="yes" xml:space="preserve">
          <source>Common misunderstandings with GNU C++.</source>
          <target state="translated">Malentendidos comunes con GNU C++.</target>
        </trans-unit>
        <trans-unit id="99484341af697bedb30f82944a2b8048a7bd9d3b" translate="yes" xml:space="preserve">
          <source>Compare at most &lt;var&gt;num&lt;/var&gt; string bytes with inline code. If the difference or end of string is not found at the end of the inline compare a call to &lt;code&gt;strcmp&lt;/code&gt; or &lt;code&gt;strncmp&lt;/code&gt; will take care of the rest of the comparison. The default is 64 bytes.</source>
          <target state="translated">Compare como m&amp;aacute;ximo &lt;var&gt;num&lt;/var&gt; bytes de cadena con el c&amp;oacute;digo en l&amp;iacute;nea. Si la diferencia o el final de la cadena no se encuentra al final de la comparaci&amp;oacute;n en l&amp;iacute;nea, una llamada a &lt;code&gt;strcmp&lt;/code&gt; o &lt;code&gt;strncmp&lt;/code&gt; se encargar&amp;aacute; del resto de la comparaci&amp;oacute;n. El valor predeterminado es 64 bytes.</target>
        </trans-unit>
        <trans-unit id="7e11797436f7910f8bb83ca2860c72513034685a" translate="yes" xml:space="preserve">
          <source>Comparison of four paired-single values (&lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;/&lt;code&gt;cabs.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;, &lt;code&gt;bc1any4t&lt;/code&gt;/&lt;code&gt;bc1any4f&lt;/code&gt;).</source>
          <target state="translated">Comparaci&amp;oacute;n de cuatro valores individuales emparejados ( &lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; / &lt;code&gt;cabs.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; , &lt;code&gt;bc1any4t&lt;/code&gt; / &lt;code&gt;bc1any4f&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c8cb7f422f46057d6869362d0511c9090d3a1fd7" translate="yes" xml:space="preserve">
          <source>Comparison of two paired-single values (&lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;, &lt;code&gt;bc1t&lt;/code&gt;/&lt;code&gt;bc1f&lt;/code&gt;).</source>
          <target state="translated">Comparaci&amp;oacute;n de dos valores individuales emparejados ( &lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; , &lt;code&gt;bc1t&lt;/code&gt; / &lt;code&gt;bc1f&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="11a9160f31b23e32c54ba7fe5458de10730189d9" translate="yes" xml:space="preserve">
          <source>Comparison of two paired-single values (&lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;/&lt;code&gt;cabs.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;, &lt;code&gt;bc1any2t&lt;/code&gt;/&lt;code&gt;bc1any2f&lt;/code&gt;).</source>
          <target state="translated">Comparaci&amp;oacute;n de dos valores individuales emparejados ( &lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; / &lt;code&gt;cabs.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; , &lt;code&gt;bc1any2t&lt;/code&gt; / &lt;code&gt;bc1any2f&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="651d13a7683a8781ee0feea932b0d34d198ddce8" translate="yes" xml:space="preserve">
          <source>Comparison operations.</source>
          <target state="translated">Operaciones de comparación.</target>
        </trans-unit>
        <trans-unit id="1adbeb956bb205e79fa3fa9ca1c2daca593fb1fa" translate="yes" xml:space="preserve">
          <source>Compatibilities with earlier definitions of C++.</source>
          <target state="translated">Compatibilidad con definiciones anteriores de C++.</target>
        </trans-unit>
        <trans-unit id="51c2b0659cd05018587a8d43545227600a32a376" translate="yes" xml:space="preserve">
          <source>Compilation can involve up to four stages: preprocessing, compilation proper, assembly and linking, always in that order. GCC is capable of preprocessing and compiling several files either into several assembler input files, or into one assembler input file; then each assembler input file produces an object file, and linking combines all the object files (those newly compiled, and those specified as input) into an executable file.</source>
          <target state="translated">La compilación puede implicar hasta cuatro etapas:preprocesamiento,compilación propiamente dicha,ensamblaje y vinculación,siempre en ese orden.GCC es capaz de preprocesar y compilar varios archivos ya sea en varios archivos de entrada del ensamblador,o en un archivo de entrada del ensamblador;luego cada archivo de entrada del ensamblador produce un archivo de objeto,y el enlazado combina todos los archivos de objeto (los recién compilados y los especificados como entrada)en un archivo ejecutable.</target>
        </trans-unit>
        <trans-unit id="1f490d968ba17b1a6b9c49acd428a6392e787830" translate="yes" xml:space="preserve">
          <source>Compile ARCv2 code with a multiplier design option. You can specify the option using either a string or numeric value for &lt;var&gt;multo&lt;/var&gt;. &amp;lsquo;</source>
          <target state="translated">Compile c&amp;oacute;digo ARCv2 con una opci&amp;oacute;n de dise&amp;ntilde;o de multiplicador. Puede especificar la opci&amp;oacute;n utilizando una cadena o un valor num&amp;eacute;rico para &lt;var&gt;multo&lt;/var&gt; . '</target>
        </trans-unit>
        <trans-unit id="4a90dd66273f8436ce33369f342227123629a080" translate="yes" xml:space="preserve">
          <source>Compile code assuming that IEEE signaling NaNs may generate user-visible traps during floating-point operations. Setting this option disables optimizations that may change the number of exceptions visible with signaling NaNs. This option implies</source>
          <target state="translated">Compilar el código suponiendo que el IEEE que señala las NaN puede generar trampas visibles para el usuario durante las operaciones en puntos flotantes.Al establecer esta opción se desactivan las optimizaciones que pueden cambiar el número de excepciones visibles con la señalización de NaNs.Esta opción implica</target>
        </trans-unit>
        <trans-unit id="9970fa5395affc7dc93ea1ed06f8fdd6c082c5bc" translate="yes" xml:space="preserve">
          <source>Compile code assuming that floating-point operations cannot generate user-visible traps. These traps include division by zero, overflow, underflow, inexact result and invalid operation. This option requires that</source>
          <target state="translated">Compilar el código asumiendo que las operaciones en coma flotante no pueden generar trampas visibles para el usuario.Estas trampas incluyen la división por cero,el desbordamiento,el subdesbordamiento,el resultado inexacto y la operación inválida.Esta opción requiere que</target>
        </trans-unit>
        <trans-unit id="7167229840a9f09cf85e4d3c02813e6e3f7c2954" translate="yes" xml:space="preserve">
          <source>Compile code assuming that pointers to the PPU address space accessed via the &lt;code&gt;__ea&lt;/code&gt; named address space qualifier are either 32 or 64 bits wide. The default is 32 bits. As this is an ABI-changing option, all object code in an executable must be compiled with the same setting.</source>
          <target state="translated">Compile el c&amp;oacute;digo asumiendo que los punteros al espacio de direcciones PPU al que se accede a trav&amp;eacute;s del calificador de espacio de direcciones con nombre &lt;code&gt;__ea&lt;/code&gt; tienen 32 o 64 bits de ancho. El valor predeterminado es 32 bits. Como se trata de una opci&amp;oacute;n de cambio de ABI, todo el c&amp;oacute;digo objeto de un ejecutable debe compilarse con la misma configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="31103695d6eecad4fc985951c0af142d11cd5c1a" translate="yes" xml:space="preserve">
          <source>Compile code compatible with Android platform. This is the default on &amp;lsquo;</source>
          <target state="translated">Compila c&amp;oacute;digo compatible con la plataforma Android. Este es el predeterminado en '</target>
        </trans-unit>
        <trans-unit id="894efb97728307a39eeed2699c1c4e4bd26dd9dc" translate="yes" xml:space="preserve">
          <source>Compile code for big-endian mode. This is the default.</source>
          <target state="translated">Compilar el código para el modo big-endian.Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="d1832ee4b35f2abfa3f4e141edadd28f18085110" translate="yes" xml:space="preserve">
          <source>Compile code for big-endian targets. Use of these options is now deprecated. Big-endian code is supported by configuring GCC to build &lt;code&gt;arceb-elf32&lt;/code&gt; and &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; targets, for which big endian is the default.</source>
          <target state="translated">Compile c&amp;oacute;digo para objetivos big-endian. El uso de estas opciones ahora est&amp;aacute; en desuso. El c&amp;oacute;digo big-endian se admite configurando GCC para construir &lt;code&gt;arceb-elf32&lt;/code&gt; y &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; , para los cuales big endian es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="be8c22e36ad1f39109ec2efd6cc1a81d955acd13" translate="yes" xml:space="preserve">
          <source>Compile code for little-endian mode.</source>
          <target state="translated">Compilar el código para el modo little-endian.</target>
        </trans-unit>
        <trans-unit id="9b8ec4f965ec58185bb6754ac805aafeb89d3ae4" translate="yes" xml:space="preserve">
          <source>Compile code for little-endian targets. Use of these options is now deprecated. Little-endian code is supported by configuring GCC to build &lt;code&gt;arc-elf32&lt;/code&gt; and &lt;code&gt;arc-linux-uclibc&lt;/code&gt; targets, for which little endian is the default.</source>
          <target state="translated">Compila c&amp;oacute;digo para objetivos little-endian. El uso de estas opciones ahora est&amp;aacute; en desuso. El c&amp;oacute;digo Little-endian es compatible con la configuraci&amp;oacute;n de GCC para construir &lt;code&gt;arc-elf32&lt;/code&gt; y &lt;code&gt;arc-linux-uclibc&lt;/code&gt; , para los cuales little endian es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="b9cb11574bb395057387b096cea7b6d6f515f971" translate="yes" xml:space="preserve">
          <source>Compile code for the processor in big-endian mode.</source>
          <target state="translated">Compilar el código para el procesador en modo big-endian.</target>
        </trans-unit>
        <trans-unit id="9f489feb9b6caedf9bb6320c99f84e7364f3077b" translate="yes" xml:space="preserve">
          <source>Compile code for the processor in little-endian mode.</source>
          <target state="translated">Compilar el código para el procesador en modo little-endian.</target>
        </trans-unit>
        <trans-unit id="39bc5e8e166e8b03d8be316efdd326cda59c0f57" translate="yes" xml:space="preserve">
          <source>Compile for ARC 600 CPU with &lt;code&gt;norm&lt;/code&gt; and 32x16-bit multiply instructions enabled.</source>
          <target state="translated">Compile para CPU ARC 600 con instrucciones de multiplicaci&amp;oacute;n &lt;code&gt;norm&lt;/code&gt; al y de 32x16 bits habilitadas.</target>
        </trans-unit>
        <trans-unit id="17be7dfb615c6d886c0d693b9048e7e155b99fb6" translate="yes" xml:space="preserve">
          <source>Compile for ARC 600 CPU with &lt;code&gt;norm&lt;/code&gt; and &lt;code&gt;mul64&lt;/code&gt;-family instructions enabled.</source>
          <target state="translated">Compile para la CPU ARC 600 con las instrucciones &lt;code&gt;norm&lt;/code&gt; y &lt;code&gt;mul64&lt;/code&gt; -family habilitadas.</target>
        </trans-unit>
        <trans-unit id="d7f2d72dcd31900923f3da8d539cfc9292aa3f8e" translate="yes" xml:space="preserve">
          <source>Compile for ARC 600 CPU with &lt;code&gt;norm&lt;/code&gt; instructions enabled.</source>
          <target state="translated">Compile para la CPU ARC 600 con instrucciones de &lt;code&gt;norm&lt;/code&gt; a habilitadas.</target>
        </trans-unit>
        <trans-unit id="16696f4c8426aaf6854eeea45ee7e1bd467edd27" translate="yes" xml:space="preserve">
          <source>Compile for ARC 601 CPU with &lt;code&gt;norm&lt;/code&gt; and 32x16-bit multiply instructions enabled.</source>
          <target state="translated">Compile para la CPU ARC 601 con instrucciones de multiplicaci&amp;oacute;n &lt;code&gt;norm&lt;/code&gt; al y de 32x16 bits habilitadas.</target>
        </trans-unit>
        <trans-unit id="5bca932c9c4e343d44b89be260ad06bfe429ab8a" translate="yes" xml:space="preserve">
          <source>Compile for ARC 601 CPU with &lt;code&gt;norm&lt;/code&gt; and &lt;code&gt;mul64&lt;/code&gt;-family instructions enabled.</source>
          <target state="translated">Compile para la CPU ARC 601 con las instrucciones &lt;code&gt;norm&lt;/code&gt; y &lt;code&gt;mul64&lt;/code&gt; -family habilitadas.</target>
        </trans-unit>
        <trans-unit id="02df7632e889a6c5616971f35e12edcc4a5d8c62" translate="yes" xml:space="preserve">
          <source>Compile for ARC 601 CPU with &lt;code&gt;norm&lt;/code&gt; instructions enabled.</source>
          <target state="translated">Compile para la CPU ARC 601 con las instrucciones de &lt;code&gt;norm&lt;/code&gt; a habilitadas.</target>
        </trans-unit>
        <trans-unit id="b7fdc4d4b7214e5e7819e3d3a90236053d8b22cd" translate="yes" xml:space="preserve">
          <source>Compile for ARC 700 on NPS400 chip.</source>
          <target state="translated">Compilar para el ARC 700 en el chip NPS400.</target>
        </trans-unit>
        <trans-unit id="1e4380f255d2d18d4e8f267e7678f7435eab73b8" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM CPU with no hardware extensions.</source>
          <target state="translated">Compilar para el CPU ARC EM sin extensiones de hardware.</target>
        </trans-unit>
        <trans-unit id="d617eff21e80138509c5fb71d3dfb75e71687f6e" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM minimalist configuration featuring reduced register set.</source>
          <target state="translated">Compilar para la configuración minimalista de ARC EM con un conjunto de registros reducidos.</target>
        </trans-unit>
        <trans-unit id="75b4e707d87f6b65d51c529906a072e95ff89b29" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM.</source>
          <target state="translated">Compilar para ARC EM.</target>
        </trans-unit>
        <trans-unit id="da70dd835733600356587db74a19ff09214dbd17" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM4 CPU.</source>
          <target state="translated">Compilar para el CPU ARC EM4.</target>
        </trans-unit>
        <trans-unit id="a460d3a31969ec154e7b1632e56830c60250b541" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM4 DMIPS CPU with single-precision floating-point and double assist instructions.</source>
          <target state="translated">Compilar para el ARC EM4 DMIPS CPU con un punto flotante de precisión simple e instrucciones de doble asistencia.</target>
        </trans-unit>
        <trans-unit id="a5b00683884602ca4044736a233bc8c892a0f636" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM4 DMIPS CPU with the single-precision floating-point extension.</source>
          <target state="translated">Compilar para ARC EM4 DMIPS CPU con la extensión de punto flotante de precisión única.</target>
        </trans-unit>
        <trans-unit id="88b1ffe9efdf7ea63c9f3422bb5547df94d22ce1" translate="yes" xml:space="preserve">
          <source>Compile for ARC EM4 DMIPS CPU.</source>
          <target state="translated">Compilar para ARC EM4 DMIPS CPU.</target>
        </trans-unit>
        <trans-unit id="086d9196358fe7f0fa7f3e7051ae4fc4f433b7ae" translate="yes" xml:space="preserve">
          <source>Compile for ARC HS CPU with no hardware extensions except the atomic instructions.</source>
          <target state="translated">Compilar para la CPU ARC HS sin extensiones de hardware excepto las instrucciones atómicas.</target>
        </trans-unit>
        <trans-unit id="cacfee18847f11dad685598d36ea6ee3b6957c02" translate="yes" xml:space="preserve">
          <source>Compile for ARC HS.</source>
          <target state="translated">Compilar para ARC HS.</target>
        </trans-unit>
        <trans-unit id="847cd27652d52b58f36a4f2e5ea5cead4371673c" translate="yes" xml:space="preserve">
          <source>Compile for ARC HS34 CPU.</source>
          <target state="translated">Compilar para el CPU ARC HS34.</target>
        </trans-unit>
        <trans-unit id="d44b3581972b8ea0a69f39fb0ebefd762b42bbe7" translate="yes" xml:space="preserve">
          <source>Compile for ARC HS38 CPU with all hardware extensions on.</source>
          <target state="translated">Compilar para el CPU ARC HS38 con todas las extensiones de hardware activadas.</target>
        </trans-unit>
        <trans-unit id="4c711906d8e4d4a87fb48440c2cfaa0c80bee620" translate="yes" xml:space="preserve">
          <source>Compile for ARC HS38 CPU.</source>
          <target state="translated">Compilar para el CPU ARC HS38.</target>
        </trans-unit>
        <trans-unit id="8348ca27592b892d967948ee652e94376f711101" translate="yes" xml:space="preserve">
          <source>Compile for ARC600. Aliases:</source>
          <target state="translated">Compilar para el ARC600.Alias:</target>
        </trans-unit>
        <trans-unit id="9c0fc8bbbde2253a58a83a11623bea243e8a7c8b" translate="yes" xml:space="preserve">
          <source>Compile for ARC601. Alias:</source>
          <target state="translated">Compilar para ARC601.Alias:</target>
        </trans-unit>
        <trans-unit id="05e0d990baf06011ef4d82bdf9df53fdce00286b" translate="yes" xml:space="preserve">
          <source>Compile for ARC700. Aliases:</source>
          <target state="translated">Compilar para el ARC700.Alias:</target>
        </trans-unit>
        <trans-unit id="e278797da8990f0ccb7f07f045508cd4010b76aa" translate="yes" xml:space="preserve">
          <source>Compile for GCN3 Fiji devices (gfx803).</source>
          <target state="translated">Compilar para los dispositivos GCN3 de Fiji (gfx803).</target>
        </trans-unit>
        <trans-unit id="713b8f86530a1c2d9a5d702e486321c4dc351849" translate="yes" xml:space="preserve">
          <source>Compile for GCN5 Vega 10 devices (gfx900).</source>
          <target state="translated">Compilar para los dispositivos GCN5 Vega 10 (gfx900).</target>
        </trans-unit>
        <trans-unit id="b90b725a08b6d96eebe36b77a50cd90bcf52390d" translate="yes" xml:space="preserve">
          <source>Compile for GCN5 Vega 20 devices (gfx906).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c48f84ed7faf104f474152b0d3bc268ee56eba" translate="yes" xml:space="preserve">
          <source>Compile or assemble the source files, but do not link. The linking stage simply is not done. The ultimate output is in the form of an object file for each source file.</source>
          <target state="translated">Compilar o ensamblar los archivos de origen,pero no enlazar.La etapa de vinculación simplemente no está hecha.El resultado final es en forma de un archivo objeto para cada archivo fuente.</target>
        </trans-unit>
        <trans-unit id="aada22a2dba27d65c33f8d484ca9df970f74fa8a" translate="yes" xml:space="preserve">
          <source>Compile the source files additionally with</source>
          <target state="translated">Compilar los archivos de origen adicionalmente con</target>
        </trans-unit>
        <trans-unit id="8e1d1625ee50b70503b880bddd8c2899625cfd1d" translate="yes" xml:space="preserve">
          <source>Compile the source files with</source>
          <target state="translated">Compilar los archivos de origen con</target>
        </trans-unit>
        <trans-unit id="bae2f3f4c4da22165b65f81f0ab47bfdf72e5a74" translate="yes" xml:space="preserve">
          <source>Compile your code with</source>
          <target state="translated">Compila tu código con</target>
        </trans-unit>
        <trans-unit id="61a5380160ff93557be23ea688dad9be208e4dbd" translate="yes" xml:space="preserve">
          <source>Compile your template-using code with</source>
          <target state="translated">Compila tu código de uso de plantillas con</target>
        </trans-unit>
        <trans-unit id="bb1fb4ab4c5c8120d8c582a624d0a9ac53f55fe3" translate="yes" xml:space="preserve">
          <source>Compiler encoding</source>
          <target state="translated">Codificación del compilador</target>
        </trans-unit>
        <trans-unit id="24922f29f09454ba5b177fdcf5e81c9543043eef" translate="yes" xml:space="preserve">
          <source>Compiler support for type traits.</source>
          <target state="translated">Soporte del compilador para los rasgos de tipo.</target>
        </trans-unit>
        <trans-unit id="2d58377b2111c9408f411d965f3b8abfb37ec05b" translate="yes" xml:space="preserve">
          <source>Compiling C++ programs.</source>
          <target state="translated">Compilando programas de C++.</target>
        </trans-unit>
        <trans-unit id="ed13de84ad4a0f0cd9e6bd0e630f5cc19d816c7d" translate="yes" xml:space="preserve">
          <source>Compiling a header once, and using it many times.</source>
          <target state="translated">Compilar un encabezado una vez,y usarlo muchas veces.</target>
        </trans-unit>
        <trans-unit id="a9cb191f84bf0e0a5fd4e8fafa0cbeb0ce255ebb" translate="yes" xml:space="preserve">
          <source>Compiling with</source>
          <target state="translated">Compilar con</target>
        </trans-unit>
        <trans-unit id="8097f9a2f49c7bb34a8f3d4a23b5682dee4f13c4" translate="yes" xml:space="preserve">
          <source>Complex multiplication and division follow Fortran rules. Range reduction is done as part of complex division, but there is no checking whether the result of a complex multiplication or division is &lt;code&gt;NaN
+ I*NaN&lt;/code&gt;, with an attempt to rescue the situation in that case.</source>
          <target state="translated">La multiplicaci&amp;oacute;n y divisi&amp;oacute;n complejas siguen las reglas de Fortran. La reducci&amp;oacute;n de rango se realiza como parte de una divisi&amp;oacute;n compleja, pero no se puede verificar si el resultado de una multiplicaci&amp;oacute;n o divisi&amp;oacute;n compleja es &lt;code&gt;NaN + I*NaN&lt;/code&gt; , con un intento de rescatar la situaci&amp;oacute;n en ese caso.</target>
        </trans-unit>
        <trans-unit id="e323088fd5a174d70e9a002849c8a4e688bcae61" translate="yes" xml:space="preserve">
          <source>Complex types</source>
          <target state="translated">Tipos complejos</target>
        </trans-unit>
        <trans-unit id="a513e209b739423b55158eb7f0004ee614ede0ee" translate="yes" xml:space="preserve">
          <source>Comply with the calling conventions defined by Renesas.</source>
          <target state="translated">Cumplir con las convenciones de llamada definidas por Renesas.</target>
        </trans-unit>
        <trans-unit id="7ca1263e4404b74af40b4e0106fd5b298bab578a" translate="yes" xml:space="preserve">
          <source>Comply with the calling conventions defined for GCC before the Renesas conventions were available. This option is the default for all targets of the SH toolchain.</source>
          <target state="translated">Cumplir con las convenciones de llamada definidas para el GCC antes de que las convenciones de Renesas estuvieran disponibles.Esta opción es la predeterminada para todos los objetivos de la cadena de herramientas SH.</target>
        </trans-unit>
        <trans-unit id="8065b09eb57234d64105b727689f45402502d3a0" translate="yes" xml:space="preserve">
          <source>Compound literals for scalar types and union types are also allowed. In the following example the variable &lt;code&gt;i&lt;/code&gt; is initialized to the value &lt;code&gt;2&lt;/code&gt;, the result of incrementing the unnamed object created by the compound literal.</source>
          <target state="translated">Tambi&amp;eacute;n se permiten literales compuestos para tipos escalares y tipos de uni&amp;oacute;n. En el siguiente ejemplo, la variable &lt;code&gt;i&lt;/code&gt; se inicializa con el valor &lt;code&gt;2&lt;/code&gt; , el resultado de incrementar el objeto sin nombre creado por el literal compuesto.</target>
        </trans-unit>
        <trans-unit id="a6bff82561ec7274ee97d8914e7822d45d55dda6" translate="yes" xml:space="preserve">
          <source>Compound literals give structures, unions or arrays as values.</source>
          <target state="translated">Las literaturas compuestas dan estructuras,uniones o conjuntos como valores.</target>
        </trans-unit>
        <trans-unit id="9966e73a786b7c65f837b6274e264d2ae3402caf" translate="yes" xml:space="preserve">
          <source>Compress all code using the Ft32B code compression scheme.</source>
          <target state="translated">Comprimir todo el código usando el esquema de compresión de código Ft32B.</target>
        </trans-unit>
        <trans-unit id="6c77d95794a767632393b14f518d98416da9d81b" translate="yes" xml:space="preserve">
          <source>Compute the overlap score between the two specified profile directories. The overlap score is computed based on the arc profiles. It is defined as the sum of min (p1_counter[i] / p1_sum_all, p2_counter[i] / p2_sum_all), for all arc counter i, where p1_counter[i] and p2_counter[i] are two matched counters and p1_sum_all and p2_sum_all are the sum of counter values in profile 1 and profile 2, respectively.</source>
          <target state="translated">Calcular la puntuación de superposición entre los dos directorios de perfiles especificados.La puntuación de superposición se calcula en base a los perfiles de arco.Se define como la suma de min (p1_contador[i]/p1_suma_todos,p2_contador[i]/p2_suma_todos),para todos los contadores de arco i,donde p1_contador[i]y p2_contador[i]son dos contadores coincidentes y p1_suma_todos y p2_suma_todos son la suma de los valores de los contadores en el perfil 1 y el perfil 2,respectivamente.</target>
        </trans-unit>
        <trans-unit id="e0428c06ffccfdc67cd165569d403d34631d68a4" translate="yes" xml:space="preserve">
          <source>Condition code register</source>
          <target state="translated">Registro de código de condición</target>
        </trans-unit>
        <trans-unit id="0ae2a8a1d30f4ab16342776ecad8922a8468db3e" translate="yes" xml:space="preserve">
          <source>Condition register field 0, &lt;code&gt;cr0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cba93bc22565aab9f967f87bf72c15fbda6979" translate="yes" xml:space="preserve">
          <source>Conditional move based on absolute comparison (&lt;code&gt;cabs.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;, &lt;code&gt;movt.ps&lt;/code&gt;/&lt;code&gt;movf.ps&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;movt.ps&lt;/code&gt; condicional basado en comparaci&amp;oacute;n absoluta ( &lt;code&gt;cabs.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; , movt.ps / &lt;code&gt;movf.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef8ee622eb15147934b0f1ea15e7848c0fa98464" translate="yes" xml:space="preserve">
          <source>Conditional move based on floating-point comparison (&lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt;, &lt;code&gt;movt.ps&lt;/code&gt;/&lt;code&gt;movf.ps&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;movt.ps&lt;/code&gt; condicional basado en la comparaci&amp;oacute;n de punto flotante ( &lt;code&gt;c.&lt;var&gt;cond&lt;/var&gt;.ps&lt;/code&gt; , movt.ps / &lt;code&gt;movf.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="34fb4ffc803fecfe4e7aef7908f668b60686f196" translate="yes" xml:space="preserve">
          <source>Configure a board specific runtime. This will be passed to the linker for newlib board library linking. The default is &lt;code&gt;or1ksim&lt;/code&gt;.</source>
          <target state="translated">Configure un tiempo de ejecuci&amp;oacute;n espec&amp;iacute;fico de la placa. Esto se pasar&amp;aacute; al vinculador para vincular la biblioteca de la placa newlib. El valor predeterminado es &lt;code&gt;or1ksim&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73691e44c058afa420e3a5b298659ae385093f25" translate="yes" xml:space="preserve">
          <source>Conform to the language syntax of Objective-C 1.0, the language recognized by GCC 4.0. This only affects the Objective-C additions to the C/C++ language; it does not affect conformance to C/C++ standards, which is controlled by the separate C/C++ dialect option flags. When this option is used with the Objective-C or Objective-C++ compiler, any Objective-C syntax that is not recognized by GCC 4.0 is rejected. This is useful if you need to make sure that your Objective-C code can be compiled with older versions of GCC.</source>
          <target state="translated">Conforme a la sintaxis del lenguaje del Objetivo-C 1.0,el lenguaje reconocido por el GCC 4.0.Esto sólo afecta a las adiciones de Objective-C al lenguaje C/C++;no afecta a la conformidad con las normas de C/C++,que se controla mediante las banderas de opción de dialecto de C/C++separadas.Cuando se utiliza esta opción con el compilador de Objective-C o de Objective-C++,se rechaza cualquier sintaxis de Objective-C que no sea reconocida por el CCG 4.0.Esto es útil si necesita asegurarse de que su código de Objective-C puede ser compilado con versiones anteriores de GCC.</target>
        </trans-unit>
        <trans-unit id="276327c90b14e9bc39dc498e6536c698c6fb7874" translate="yes" xml:space="preserve">
          <source>Conformance to the same ABI and the same behavior of implementation-defined features are both relevant for compatibility.</source>
          <target state="translated">La conformidad con el mismo ABI y el mismo comportamiento de las características definidas por la implementación son ambos relevantes para la compatibilidad.</target>
        </trans-unit>
        <trans-unit id="af74bda50719fa1b3103b3627d3eb38149eb7313" translate="yes" xml:space="preserve">
          <source>Consider (as in C99 subclause 6.7.5 paragraph 4) a declaration &lt;code&gt;T
D1&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; contains declaration specifiers that specify a type &lt;var&gt;Type&lt;/var&gt; (such as &lt;code&gt;int&lt;/code&gt;) and &lt;code&gt;D1&lt;/code&gt; is a declarator that contains an identifier &lt;var&gt;ident&lt;/var&gt;. The type specified for &lt;var&gt;ident&lt;/var&gt; for derived declarators whose type does not include an attribute specifier is as in the ISO C standard.</source>
          <target state="translated">Considere (como en C99 subcl&amp;aacute;usula 6.7.5 p&amp;aacute;rrafo 4) una declaraci&amp;oacute;n &lt;code&gt;T D1&lt;/code&gt; , donde &lt;code&gt;T&lt;/code&gt; contiene especificadores de declaraci&amp;oacute;n que especifican un tipo &lt;var&gt;Type&lt;/var&gt; (como &lt;code&gt;int&lt;/code&gt; ) y &lt;code&gt;D1&lt;/code&gt; es un declarador que contiene un identificador &lt;var&gt;ident&lt;/var&gt; . El tipo especificado para &lt;var&gt;ident&lt;/var&gt; para declaradores derivados cuyo tipo no incluye un especificador de atributo es como en el est&amp;aacute;ndar ISO C.</target>
        </trans-unit>
        <trans-unit id="9b667c089da7e561b4d6f55e12e93a78181226e5" translate="yes" xml:space="preserve">
          <source>Consider all &lt;code&gt;static&lt;/code&gt; functions called once for inlining into their caller even if they are not marked &lt;code&gt;inline&lt;/code&gt;. If a call to a given function is integrated, then the function is not output as assembler code in its own right.</source>
          <target state="translated">Considere todas las funciones &lt;code&gt;static&lt;/code&gt; llamadas una vez para integrarse en su llamador, incluso si no est&amp;aacute;n marcadas en &lt;code&gt;inline&lt;/code&gt; . Si se integra una llamada a una funci&amp;oacute;n determinada, entonces la funci&amp;oacute;n no se genera como c&amp;oacute;digo ensamblador por derecho propio.</target>
        </trans-unit>
        <trans-unit id="35a3be8ed672f20c07ec027046430f867cf3e587" translate="yes" xml:space="preserve">
          <source>Consider all functions for inlining, even if they are not declared inline. The compiler heuristically decides which functions are worth integrating in this way.</source>
          <target state="translated">Considere todas las funciones para el inlining,incluso si no se declaran en el inline.El compilador decide heurísticamente qué funciones vale la pena integrar de esta manera.</target>
        </trans-unit>
        <trans-unit id="7b85816a30be72db5578a7db246b88f298f1a216" translate="yes" xml:space="preserve">
          <source>Consider that instructions that may throw exceptions but don&amp;rsquo;t otherwise contribute to the execution of the program can be optimized away. This option is enabled by default for the Ada front end, as permitted by the Ada language specification. Optimization passes that cause dead exceptions to be removed are enabled independently at different optimization levels.</source>
          <target state="translated">Tenga en cuenta que las instrucciones que pueden arrojar excepciones pero que no contribuyen de otro modo a la ejecuci&amp;oacute;n del programa pueden optimizarse. Esta opci&amp;oacute;n est&amp;aacute; habilitada de forma predeterminada para la interfaz Ada, seg&amp;uacute;n lo permitido por la especificaci&amp;oacute;n del lenguaje Ada. Los pases de optimizaci&amp;oacute;n que provocan la eliminaci&amp;oacute;n de excepciones muertas se habilitan de forma independiente en diferentes niveles de optimizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="56b80af072fa83ee95788ec24e46c4595598d634" translate="yes" xml:space="preserve">
          <source>Consider the following example,</source>
          <target state="translated">Considere el siguiente ejemplo,</target>
        </trans-unit>
        <trans-unit id="a59af01b7f010c19c9dde4af8032ceeec0657a9d" translate="yes" xml:space="preserve">
          <source>Consider type &lt;code&gt;int&lt;/code&gt; to be 16 bits wide, like &lt;code&gt;short int&lt;/code&gt;. Additionally, parameters passed on the stack are also aligned to a 16-bit boundary even on targets whose API mandates promotion to 32-bit.</source>
          <target state="translated">Considere que el tipo &lt;code&gt;int&lt;/code&gt; tiene 16 bits de ancho, como &lt;code&gt;short int&lt;/code&gt; . Adem&amp;aacute;s, los par&amp;aacute;metros pasados ​​en la pila tambi&amp;eacute;n se alinean con un l&amp;iacute;mite de 16 bits, incluso en los objetivos cuya API exige la promoci&amp;oacute;n a 32 bits.</target>
        </trans-unit>
        <trans-unit id="14249be6954dd348580bb1e0a79129f5f1192211" translate="yes" xml:space="preserve">
          <source>Constant 255.</source>
          <target state="translated">Constante 255.</target>
        </trans-unit>
        <trans-unit id="7c36129cdf24a616a089dfb7d284688c9138762e" translate="yes" xml:space="preserve">
          <source>Constant 65535.</source>
          <target state="translated">Constante 65535.</target>
        </trans-unit>
        <trans-unit id="7ebcf06cc87a00b632c948fbc204e56f0827cd01" translate="yes" xml:space="preserve">
          <source>Constant &lt;var&gt;n&lt;/var&gt;, where &lt;var&gt;n&lt;/var&gt; is a single-digit constant in the range 0 to 4.</source>
          <target state="translated">Constante &lt;var&gt;n&lt;/var&gt; , donde &lt;var&gt;n&lt;/var&gt; es una constante de un solo d&amp;iacute;gito en el rango de 0 a 4.</target>
        </trans-unit>
        <trans-unit id="37323b42fe56e6f04c3dbbef4d9fbb95b7fc380b" translate="yes" xml:space="preserve">
          <source>Constant for arithmetic/logical operations. This is like &lt;code&gt;i&lt;/code&gt;, except that for position independent code, no symbols / expressions needing relocations are allowed.</source>
          <target state="translated">Constante para operaciones aritm&amp;eacute;ticas / l&amp;oacute;gicas. Esto es como &lt;code&gt;i&lt;/code&gt; , excepto que para el c&amp;oacute;digo independiente de posici&amp;oacute;n, no se permiten s&amp;iacute;mbolos / expresiones que necesiten reubicaciones.</target>
        </trans-unit>
        <trans-unit id="c7644d686263ca6ceaeace041caa08f8c6cf68aa" translate="yes" xml:space="preserve">
          <source>Constant greater than -1, less than 64</source>
          <target state="translated">Constante mayor de -1,menor de 64</target>
        </trans-unit>
        <trans-unit id="09c49e4a44186e5736b6b3d234fbcdd1b306818b" translate="yes" xml:space="preserve">
          <source>Constant greater than -64, less than 1</source>
          <target state="translated">Constante mayor de -64,menor de 1</target>
        </trans-unit>
        <trans-unit id="629c52a6147c82fa4c525c23e4812fa96465cd8a" translate="yes" xml:space="preserve">
          <source>Constant integer -1</source>
          <target state="translated">Entero constante -1</target>
        </trans-unit>
        <trans-unit id="721c7841ba7521d9d4cd87f007487a95dabae8a8" translate="yes" xml:space="preserve">
          <source>Constant integer 0</source>
          <target state="translated">Entero constante 0</target>
        </trans-unit>
        <trans-unit id="4c0d77dad954cfa376cbed314919134fe483d92e" translate="yes" xml:space="preserve">
          <source>Constant integer 1</source>
          <target state="translated">Entero constante 1</target>
        </trans-unit>
        <trans-unit id="a0be78fc92c33b25cda27188d52e852922b4e406" translate="yes" xml:space="preserve">
          <source>Constant integer 2</source>
          <target state="translated">Entero constante 2</target>
        </trans-unit>
        <trans-unit id="202072b2675376ab5d42618242f422abd21566ab" translate="yes" xml:space="preserve">
          <source>Constant integer 8, 16, or 24</source>
          <target state="translated">Entero constante 8,16,o 24</target>
        </trans-unit>
        <trans-unit id="5bf3f3ad783e97cd6b61e26de5af436d02b8dbc8" translate="yes" xml:space="preserve">
          <source>Constant integer with a value of 0x7fffffff.</source>
          <target state="translated">Un número entero constante con un valor de 0x7fffffff.</target>
        </trans-unit>
        <trans-unit id="4b2e9b490d5b5f4c17de70d9c9fdf5aa2b4b1450" translate="yes" xml:space="preserve">
          <source>Constant larger than 31</source>
          <target state="translated">Constante mayor de 31</target>
        </trans-unit>
        <trans-unit id="47f3d5d59a235c75b0766f99a2edf9666aa348c9" translate="yes" xml:space="preserve">
          <source>Constant that fits in 8 bits</source>
          <target state="translated">Constante que encaja en 8 bits</target>
        </trans-unit>
        <trans-unit id="719b7b797492e1507d09c13adb21a02c3fe64069" translate="yes" xml:space="preserve">
          <source>Constant whose negation is a signed 16-bit constant</source>
          <target state="translated">Constante cuya negación es una constante firmada de 16 bits</target>
        </trans-unit>
        <trans-unit id="180e678224087bf03d6c9c2f7ac11f4d9834fa9a" translate="yes" xml:space="preserve">
          <source>Constant zero</source>
          <target state="translated">Cero constante</target>
        </trans-unit>
        <trans-unit id="a9100a8537fb85e4bf388bedae7d5d58f76e7b6e" translate="yes" xml:space="preserve">
          <source>Constant?</source>
          <target state="translated">Constant?</target>
        </trans-unit>
        <trans-unit id="7efcb4b4f328cdb249f8926cb267f61ac8015a9d" translate="yes" xml:space="preserve">
          <source>Constraints for &lt;code&gt;asm&lt;/code&gt; operands</source>
          <target state="translated">Restricciones para operandos &lt;code&gt;asm&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e3f7e5411ee0f1fda2ac40b39097fae6a9abb77" translate="yes" xml:space="preserve">
          <source>Constructs webs as commonly used for register allocation purposes and assign each web individual pseudo register. This allows the register allocation pass to operate on pseudos directly, but also strengthens several other optimization passes, such as CSE, loop optimizer and trivial dead code remover. It can, however, make debugging impossible, since variables no longer stay in a &amp;ldquo;home register&amp;rdquo;.</source>
          <target state="translated">Construye webs como se usan com&amp;uacute;nmente para prop&amp;oacute;sitos de asignaci&amp;oacute;n de registros y asigna cada pseudo registro individual web. Esto permite que la pasada de asignaci&amp;oacute;n de registros opere en pseudos directamente, pero tambi&amp;eacute;n fortalece varias otras pasadas de optimizaci&amp;oacute;n, como CSE, optimizador de bucle y eliminador de c&amp;oacute;digo muerto trivial. Sin embargo, puede hacer que la depuraci&amp;oacute;n sea imposible, ya que las variables ya no permanecen en un &quot;registro de inicio&quot;.</target>
        </trans-unit>
        <trans-unit id="d4f501afecf0b8b5f3993371f4f6074a753dc0e6" translate="yes" xml:space="preserve">
          <source>Contributors to GCC</source>
          <target state="translated">Contribuyentes del CCG</target>
        </trans-unit>
        <trans-unit id="4648a291e89516ba0f4f56b93d6fdb1d01cfd9c4" translate="yes" xml:space="preserve">
          <source>Control GCC&amp;rsquo;s optimizations to produce output suitable for live-patching.</source>
          <target state="translated">Controle las optimizaciones de GCC para producir una salida adecuada para parchear en vivo.</target>
        </trans-unit>
        <trans-unit id="2000010d8fcae415d2b9780e43435379e14ee053" translate="yes" xml:space="preserve">
          <source>Control how GCC aligns variables and constants of array, structure, or union types. Supported values for &lt;var&gt;type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc7b6b362569344fe25ab394774bd26a1bf6f6a" translate="yes" xml:space="preserve">
          <source>Control how GCC aligns variables. Supported values for &lt;var&gt;type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Controle c&amp;oacute;mo GCC alinea las variables. Los valores admitidos para el &lt;var&gt;type&lt;/var&gt; son '</target>
        </trans-unit>
        <trans-unit id="7e88213c055c1aca5596a30dea879bf4859e75f5" translate="yes" xml:space="preserve">
          <source>Control how many registers are used to pass integer arguments. By default, no registers are used to pass arguments, and at most 3 registers can be used. You can control this behavior for a specific function by using the function attribute &lt;code&gt;regparm&lt;/code&gt;. See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;.</source>
          <target state="translated">Controle cu&amp;aacute;ntos registros se utilizan para pasar argumentos enteros. De forma predeterminada, no se utilizan registros para pasar argumentos y se pueden utilizar como m&amp;aacute;ximo 3 registros. Puede controlar este comportamiento para una funci&amp;oacute;n espec&amp;iacute;fica utilizando el atributo de funci&amp;oacute;n &lt;code&gt;regparm&lt;/code&gt; . Consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae31e36dd1f96d1b47c3f78f649f25722c9f1d7b" translate="yes" xml:space="preserve">
          <source>Control if warning triggered by the &lt;code&gt;warn_if_not_aligned&lt;/code&gt; attribute should be issued. This is enabled by default. Use</source>
          <target state="translated">Controle si se debe emitir una advertencia activada por el atributo &lt;code&gt;warn_if_not_aligned&lt;/code&gt; . Esto est&amp;aacute; habilitado por defecto. Utilizar</target>
        </trans-unit>
        <trans-unit id="9e5c3f2f79d503814d4fe18475f20d72c26564d7" translate="yes" xml:space="preserve">
          <source>Control if warnings triggered by the &lt;code&gt;warn_if_not_aligned&lt;/code&gt; attribute should be issued. These warnings are enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7631dd8867c98dbe9aea4e0521ca0a270c9af1bd" translate="yes" xml:space="preserve">
          <source>Control level of reproducibility of profile gathered by &lt;code&gt;-fprofile-generate&lt;/code&gt;. This makes it possible to rebuild program with same outcome which is useful, for example, for distribution packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f461ee948da2dba5ee60b9ffddb2967c79a05b" translate="yes" xml:space="preserve">
          <source>Control the IEEE compliance of floating-point comparisons, which affects the handling of cases where the result of a comparison is unordered. By default</source>
          <target state="translated">Controlar el cumplimiento del IEEE de las comparaciones en coma flotante,lo que afecta al tratamiento de los casos en que el resultado de una comparación no está ordenado.Por defecto</target>
        </trans-unit>
        <trans-unit id="2afb7e07aedef4a32dbbca185426a76a2840c4b0" translate="yes" xml:space="preserve">
          <source>Control the dumping at various stages of inter-procedural analysis language tree to a file. The file name is generated by appending a switch specific suffix to the source file name, and the file is created in the same directory as the output file. The following dumps are possible:</source>
          <target state="translated">Controlar el vertido en varias etapas del análisis interprocesal del árbol de lenguaje a un archivo.El nombre del archivo se genera añadiendo un sufijo específico del interruptor al nombre del archivo fuente,y el archivo se crea en el mismo directorio que el archivo de salida.Son posibles los siguientes volcados:</target>
        </trans-unit>
        <trans-unit id="f18aaf944d2648faf5bedcbbdbf1ddd945fad607" translate="yes" xml:space="preserve">
          <source>Control the dumping at various stages of processing the intermediate language tree to a file. If the &amp;lsquo;</source>
          <target state="translated">Controle el volcado en varias etapas del procesamiento del &amp;aacute;rbol de idioma intermedio en un archivo. Si el '</target>
        </trans-unit>
        <trans-unit id="c0a71f6d1404f7b16378e5d31c9c7e2a41e97704" translate="yes" xml:space="preserve">
          <source>Control the dumping of language-specific information. The &lt;var&gt;options&lt;/var&gt; and &lt;var&gt;filename&lt;/var&gt; portions behave as described in the</source>
          <target state="translated">Controle el vertido de informaci&amp;oacute;n espec&amp;iacute;fica del idioma. Las &lt;var&gt;options&lt;/var&gt; y las partes del &lt;var&gt;filename&lt;/var&gt; comportan como se describe en la</target>
        </trans-unit>
        <trans-unit id="d78b6d3fd867212c02526e9987edeed79105b1e7" translate="yes" xml:space="preserve">
          <source>Control the probability of the expression having the specified value. This parameter takes a percentage (i.e. 0 ... 100) as input.</source>
          <target state="translated">Controlar la probabilidad de que la expresión tenga el valor especificado.Este parámetro toma un porcentaje (es decir,0 ...100)como entrada.</target>
        </trans-unit>
        <trans-unit id="3bc8404322e32343cc4763c8bd1ae2d2c9dab937" translate="yes" xml:space="preserve">
          <source>Control the verbosity of the dump file for the integrated register allocator. The default value is 5. If the value &lt;var&gt;n&lt;/var&gt; is greater or equal to 10, the dump output is sent to stderr using the same format as &lt;var&gt;n&lt;/var&gt; minus 10.</source>
          <target state="translated">Controle la verbosidad del archivo de volcado para el asignador de registros integrado. El valor predeterminado es 5. Si el valor &lt;var&gt;n&lt;/var&gt; es mayor o igual a 10, la salida de volcado se env&amp;iacute;a a stderr usando el mismo formato que &lt;var&gt;n&lt;/var&gt; menos 10.</target>
        </trans-unit>
        <trans-unit id="f9bae08f2081e939f273d8f52a1db45d82560f46" translate="yes" xml:space="preserve">
          <source>Control whether GCC aligns &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt;, and &lt;code&gt;long long&lt;/code&gt; variables on a two-word boundary or a one-word boundary. Aligning &lt;code&gt;double&lt;/code&gt; variables on a two-word boundary produces code that runs somewhat faster on a Pentium at the expense of more memory.</source>
          <target state="translated">Controle si GCC alinea variables &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;long double&lt;/code&gt; y &lt;code&gt;long long&lt;/code&gt; en un l&amp;iacute;mite de dos palabras o en un l&amp;iacute;mite de una palabra. Alinear variables &lt;code&gt;double&lt;/code&gt; en un l&amp;iacute;mite de dos palabras produce c&amp;oacute;digo que se ejecuta algo m&amp;aacute;s r&amp;aacute;pido en un Pentium a expensas de m&amp;aacute;s memoria.</target>
        </trans-unit>
        <trans-unit id="8f446d353bc1e77fdd352360a3275f518dfbc090" translate="yes" xml:space="preserve">
          <source>Control whether GCC aligns &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;long long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, and &lt;code&gt;long double&lt;/code&gt; variables on a 32-bit boundary (</source>
          <target state="translated">Controle si GCC alinea variables &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;long long&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; y &lt;code&gt;long double&lt;/code&gt; en un l&amp;iacute;mite de 32 bits (</target>
        </trans-unit>
        <trans-unit id="75311304fc882ae2426d795d34cedb8140da086e" translate="yes" xml:space="preserve">
          <source>Control whether or not the compiler uses IEEE floating-point comparisons. These correctly handle the case where the result of a comparison is unordered.</source>
          <target state="translated">Controla si el compilador utiliza o no las comparaciones de punto flotante del IEEE.Estas manejan correctamente el caso en que el resultado de una comparación no está ordenado.</target>
        </trans-unit>
        <trans-unit id="62bad428ae7c19b0490d45917456075bd42d88a6" translate="yes" xml:space="preserve">
          <source>Controlling header files and macro definitions. Also, getting dependency information for Make.</source>
          <target state="translated">Controlando los archivos de cabecera y las definiciones de las macros.También,obteniendo información de dependencia para Make.</target>
        </trans-unit>
        <trans-unit id="e99744632595e185715acaad17e041aa084fa9ba" translate="yes" xml:space="preserve">
          <source>Controlling how diagnostics should be formatted.</source>
          <target state="translated">Controlar cómo se deben formatear los diagnósticos.</target>
        </trans-unit>
        <trans-unit id="e7841aeb7ad7a7b2bbd17b2d58521eec5ba1a4f0" translate="yes" xml:space="preserve">
          <source>Controlling the kind of output: an executable, object files, assembler files, or preprocessed source.</source>
          <target state="translated">Controlando el tipo de salida:un ejecutable,archivos de objeto,archivos de ensamblador o fuente preprocesada.</target>
        </trans-unit>
        <trans-unit id="c6ecef85f48d8878d76bfb7e0a0331e88e337d9a" translate="yes" xml:space="preserve">
          <source>Controlling the variant of C language compiled.</source>
          <target state="translated">Controlando la variante del lenguaje C compilado.</target>
        </trans-unit>
        <trans-unit id="35f36b715e771eac424fea4a5652ad0db1feb811" translate="yes" xml:space="preserve">
          <source>Controls optimization dumps from various optimization passes. If the &amp;lsquo;</source>
          <target state="translated">Controla los volcados de optimizaci&amp;oacute;n de varias pasadas de optimizaci&amp;oacute;n. Si el '</target>
        </trans-unit>
        <trans-unit id="addf45283fa1231bccd97d1a11480f865b18f29c" translate="yes" xml:space="preserve">
          <source>Controls warnings if a shift count is greater than or equal to the bit width of the type. This warning is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8bc0ebce27c4f8597b1ed37dbc7e6eb2315759" translate="yes" xml:space="preserve">
          <source>Controls warnings if a shift count is negative. This warning is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae41d379a4cfbab73e910f93e19e6f3bad5167f" translate="yes" xml:space="preserve">
          <source>Controls whether TLS variables may be accessed with offsets from the TLS segment register (&lt;code&gt;%gs&lt;/code&gt; for 32-bit, &lt;code&gt;%fs&lt;/code&gt; for 64-bit), or whether the thread base pointer must be added. Whether or not this is valid depends on the operating system, and whether it maps the segment to cover the entire TLS area.</source>
          <target state="translated">Controla si se puede acceder a las variables TLS con desplazamientos del registro de segmento TLS ( &lt;code&gt;%gs&lt;/code&gt; para 32 bits, &lt;code&gt;%fs&lt;/code&gt; para 64 bits) o si se debe agregar el puntero base de subproceso. Si esto es v&amp;aacute;lido o no, depende del sistema operativo y si asigna el segmento para cubrir toda el &amp;aacute;rea de TLS.</target>
        </trans-unit>
        <trans-unit id="eb9ef4e6ab162f6fc8a3bf857fc774382a954629" translate="yes" xml:space="preserve">
          <source>Conversely, &lt;code&gt;bar&lt;/code&gt; and the call to &lt;code&gt;foo&lt;/code&gt; in the fourth marked line are used in contexts that do depend on the type of &lt;code&gt;T&lt;/code&gt;, so they are only looked up at the point of instantiation, and you can provide declarations for them after declaring the template, but before instantiating it. In particular, if you instantiate &lt;code&gt;A::f&amp;lt;int&amp;gt;&lt;/code&gt;, the last line will call an overloaded &lt;code&gt;::foo(int)&lt;/code&gt; if one was provided, even if after the declaration of &lt;code&gt;struct A&lt;/code&gt;.</source>
          <target state="translated">Por el contrario, &lt;code&gt;bar&lt;/code&gt; y la llamada a &lt;code&gt;foo&lt;/code&gt; en la cuarta l&amp;iacute;nea marcada se usan en contextos que dependen del tipo de &lt;code&gt;T&lt;/code&gt; , por lo que solo se buscan en el punto de instanciaci&amp;oacute;n, y puede proporcionar declaraciones para ellos despu&amp;eacute;s de declarar la plantilla, pero antes de instanciarlo. En particular, si usted instancia &lt;code&gt;A::f&amp;lt;int&amp;gt;&lt;/code&gt; , la &amp;uacute;ltima l&amp;iacute;nea se llame a una sobrecarga &lt;code&gt;::foo(int)&lt;/code&gt; si se ha proporcionado, incluso si despu&amp;eacute;s de la declaraci&amp;oacute;n de &lt;code&gt;struct A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dbc54a6ca4a64275cd12138ea70589c4f463e73" translate="yes" xml:space="preserve">
          <source>Conversely, if the register is a call-clobbered register, making calls to functions that use standard ABI may lose contents of the variable. Such calls may be created by the compiler even if none are evident in the original program, for example when libgcc functions are used to make up for unavailable instructions.</source>
          <target state="translated">Por el contrario,si el registro es un registro de llamadas,al hacer llamadas a funciones que utilizan ABI estándar puede perderse el contenido de la variable.Tales llamadas pueden ser creadas por el compilador aunque no sean evidentes en el programa original,por ejemplo cuando las funciones libgcc se utilizan para compensar instrucciones no disponibles.</target>
        </trans-unit>
        <trans-unit id="ff7d2b7b709500e425e46256b872f1c524a8fe88" translate="yes" xml:space="preserve">
          <source>Conversely, when you include the same header file in a main source file that declares it as &amp;lsquo;</source>
          <target state="translated">Por el contrario, cuando incluye el mismo archivo de encabezado en un archivo fuente principal que lo declara como '</target>
        </trans-unit>
        <trans-unit id="f8292e36ff2425ba64b2fca8bba18ef8c5d24cbf" translate="yes" xml:space="preserve">
          <source>Conversion from double precision to single precision.</source>
          <target state="translated">Conversión de doble precisión a precisión simple.</target>
        </trans-unit>
        <trans-unit id="e8f87ba256340926897664cced7edc0ce8ec124d" translate="yes" xml:space="preserve">
          <source>Conversion from floating point to signed or unsigned integer types, with truncation towards zero.</source>
          <target state="translated">Conversión de los tipos de punto flotante a enteros con o sin signo,con truncamiento hacia cero.</target>
        </trans-unit>
        <trans-unit id="e8ec2eea2629558824283e676ad9bac71b3d3e53" translate="yes" xml:space="preserve">
          <source>Conversion from signed or unsigned integer types to floating-point types.</source>
          <target state="translated">Conversión de tipos enteros con o sin signo a tipos de punto flotante.</target>
        </trans-unit>
        <trans-unit id="416cd3e7b0ad0f46f99e977b880dc368db1cdff8" translate="yes" xml:space="preserve">
          <source>Conversion from single precision to double precision.</source>
          <target state="translated">Conversión de precisión simple a doble precisión.</target>
        </trans-unit>
        <trans-unit id="0fc5b8691f90f80b04961e22033d17dee1964933" translate="yes" xml:space="preserve">
          <source>Conversion from single-precision floating point to signed integer, rounding to the nearest integer and ties away from zero. This corresponds to the &lt;code&gt;__builtin_lroundf&lt;/code&gt; function when</source>
          <target state="translated">Conversi&amp;oacute;n de punto flotante de precisi&amp;oacute;n simple a entero con signo, redondeando al entero m&amp;aacute;s cercano y empates alej&amp;aacute;ndose de cero. Esto corresponde a la funci&amp;oacute;n &lt;code&gt;__builtin_lroundf&lt;/code&gt; cuando</target>
        </trans-unit>
        <trans-unit id="536e910ea0e856f9ebf3793f69bec672bb95cd2c" translate="yes" xml:space="preserve">
          <source>Conversions by prototypes between fixed/floating-point values and vice versa. The absence of these prototypes when compiling with traditional C causes serious problems. This is a subset of the possible conversion warnings; for the full set use</source>
          <target state="translated">Conversiones por prototipos entre valores de punto fijo y flotante y viceversa.La ausencia de estos prototipos al compilar con el C tradicional causa serios problemas.Este es un subconjunto de las posibles advertencias de conversión;para el uso del conjunto completo</target>
        </trans-unit>
        <trans-unit id="0912352accd4bfa1711e2febca470cb4f85bbc4c" translate="yes" xml:space="preserve">
          <source>Conversions:</source>
          <target state="translated">Conversions:</target>
        </trans-unit>
        <trans-unit id="baf1df2f34189a80f5d58da24bff382fe6f23f9c" translate="yes" xml:space="preserve">
          <source>Convert a 128-bit IEEE floating point value to &lt;code&gt;double&lt;/code&gt; using round to odd as the rounding mode.</source>
          <target state="translated">Convierta un valor de punto flotante IEEE de 128 bits en &lt;code&gt;double&lt;/code&gt; utilizando redondeo a impar como modo de redondeo.</target>
        </trans-unit>
        <trans-unit id="c5f6051eea145ce2adef0c8027dd705cfcc7007e" translate="yes" xml:space="preserve">
          <source>Convert function return with &lt;var&gt;choice&lt;/var&gt;. The default is &amp;lsquo;</source>
          <target state="translated">Convertir retorno de funci&amp;oacute;n con &lt;var&gt;choice&lt;/var&gt; . El valor predeterminado es '</target>
        </trans-unit>
        <trans-unit id="454c8084600f90536a1954e8c20d848d81c823ed" translate="yes" xml:space="preserve">
          <source>Convert indirect call and jump with &lt;var&gt;choice&lt;/var&gt;. The default is &amp;lsquo;</source>
          <target state="translated">Convierta llamada indirecta y salte con &lt;var&gt;choice&lt;/var&gt; . El valor predeterminado es '</target>
        </trans-unit>
        <trans-unit id="e6098cfb721df754afe96180a874c8cc3a1a8ded" translate="yes" xml:space="preserve">
          <source>Convert pair lower to single (&lt;code&gt;cvt.s.pl&lt;/code&gt;).</source>
          <target state="translated">Convierta el par inferior en sencillo ( &lt;code&gt;cvt.s.pl&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="52f3ab191bdd722d1394008161cded401dd949a0" translate="yes" xml:space="preserve">
          <source>Convert pair to paired single (&lt;code&gt;cvt.ps.s&lt;/code&gt;).</source>
          <target state="translated">Convierta par en emparejado sencillo ( &lt;code&gt;cvt.ps.s&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dbfe6d8e23313dd7f9196c8cdcc1c08381a49c43" translate="yes" xml:space="preserve">
          <source>Convert pair upper to single (&lt;code&gt;cvt.s.pu&lt;/code&gt;).</source>
          <target state="translated">Convierta el par superior en sencillo ( &lt;code&gt;cvt.s.pu&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="055bbf265923b2e5410a5e939d7297c0c9f2b211" translate="yes" xml:space="preserve">
          <source>Convert paired single to paired word (&lt;code&gt;cvt.pw.ps&lt;/code&gt;).</source>
          <target state="translated">Convierte una palabra emparejada en una palabra emparejada ( &lt;code&gt;cvt.pw.ps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8b6b177ab15aa362100af3868aea344b1c1501b0" translate="yes" xml:space="preserve">
          <source>Convert paired word to paired single (&lt;code&gt;cvt.ps.pw&lt;/code&gt;).</source>
          <target state="translated">Convierta una palabra emparejada en una sola emparejada ( &lt;code&gt;cvt.ps.pw&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b04bf1a5e85023c3eed3599d79cb09164690ab2" translate="yes" xml:space="preserve">
          <source>Copy Assignment operators copy virtual bases twice</source>
          <target state="translated">Copiar Los operadores de asignación copian las bases virtuales dos veces</target>
        </trans-unit>
        <trans-unit id="d5eae2b9f3ad758ce3ef79fc7015a6ffa9156eac" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1988-2019 Free Software Foundation, Inc.</source>
          <target state="translated">Copyright &amp;copy; 1988-2019 Free Software Foundation, Inc.</target>
        </trans-unit>
        <trans-unit id="00d80b436f1c8689f9094a048f0b7d3b3fb4eee4" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1988-2020 Free Software Foundation, Inc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5bc69c89234b43d34e0f300cbb8e8580610fdc" translate="yes" xml:space="preserve">
          <source>Core control register class.</source>
          <target state="translated">Clase de registro de control del núcleo.</target>
        </trans-unit>
        <trans-unit id="26ed802e7eb78ff2045b4541fe370087376fea5e" translate="yes" xml:space="preserve">
          <source>Cost to assume for a multiply instruction, with &amp;lsquo;</source>
          <target state="translated">Costo a asumir para una instrucci&amp;oacute;n de multiplicar, con '</target>
        </trans-unit>
        <trans-unit id="c2ddd3bb796bfb895719a519a79aeec2d836822b" translate="yes" xml:space="preserve">
          <source>Cost, roughly measured as the cost of a single typical machine instruction, at which GCSE optimizations do not constrain the distance an expression can travel. This is currently supported only in the code hoisting pass. The lesser the cost, the more aggressive code hoisting is. Specifying 0 allows all expressions to travel unrestricted distances.</source>
          <target state="translated">Costo,medido aproximadamente como el costo de una sola instrucción de máquina típica,en la cual las optimizaciones del GCSE no limitan la distancia que una expresión puede recorrer.Actualmente,esto sólo está soportado en el pase de elevación de código.Cuanto menor es el costo,más agresiva es la elevación del código.Especificar 0 permite que todas las expresiones viajen distancias ilimitadas.</target>
        </trans-unit>
        <trans-unit id="73a8cda37ae16987b1b76b7dd95bcc1d393efb64" translate="yes" xml:space="preserve">
          <source>Create a canonical counter for number of iterations in loops for which determining number of iterations requires complicated analysis. Later optimizations then may determine the number easily. Useful especially in connection with unrolling.</source>
          <target state="translated">Crear un contador canónico para el número de iteraciones en bucles para el que determinar el número de iteraciones requiere un análisis complicado.Las optimizaciones posteriores pueden entonces determinar el número fácilmente.Útil especialmente en relación con el desenrollado.</target>
        </trans-unit>
        <trans-unit id="abd404fec245486ddadc6af0006baee144b9f9b5" translate="yes" xml:space="preserve">
          <source>Create a shared object. It is recommended that</source>
          <target state="translated">Crear un objeto compartido.Se recomienda que</target>
        </trans-unit>
        <trans-unit id="f1fd203b49f15a9115d31d7e6edbf2d093ba7de0" translate="yes" xml:space="preserve">
          <source>Create constant pools in the compiler instead of deferring it to the assembler. This option is the default and required for correct code generation on CK801 and CK802, and is optional on other processors.</source>
          <target state="translated">Crear piscinas constantes en el compilador en lugar de aplazarlo al ensamblador.Esta opción es la predeterminada y necesaria para la correcta generación de código en CK801 y CK802,y es opcional en otros procesadores.</target>
        </trans-unit>
        <trans-unit id="b23e0354f5ad5eff5e150918b9120e5576f9697a" translate="yes" xml:space="preserve">
          <source>Create long file names for included source files. For example, if the header file</source>
          <target state="translated">Crear nombres de archivos largos para los archivos de origen incluidos.Por ejemplo,si el archivo de cabecera</target>
        </trans-unit>
        <trans-unit id="e38ae255fe9e80cdce8fdaed0460f9c86fe6b8ba" translate="yes" xml:space="preserve">
          <source>Creates a new &amp;lsquo;</source>
          <target state="translated">Crea un nuevo '</target>
        </trans-unit>
        <trans-unit id="99dfbad76db4acc6eb91954940ce7b9993db8870" translate="yes" xml:space="preserve">
          <source>Creates an inter-thread happens-before constraint from the release (or stronger) semantic store to this acquire load. Can prevent hoisting of code to before the operation.</source>
          <target state="translated">Crea un inter-hilo que sucede antes de la restricción de la liberación (o más fuerte)del almacén semántico a esta carga adquirida.Puede prevenir el levantamiento del código antes de la operación.</target>
        </trans-unit>
        <trans-unit id="281a58c77cb45edf43cfdf897384199b4ab0a3ee" translate="yes" xml:space="preserve">
          <source>Creates an inter-thread happens-before constraint to acquire (or stronger) semantic loads that read from this release store. Can prevent sinking of code to after the operation.</source>
          <target state="translated">Crea un inter-hilo que ocurre antes de la restricción para adquirir (o más fuerte)las cargas semánticas que se leen de este almacén de liberación.Puede evitar el hundimiento del código para después de la operación.</target>
        </trans-unit>
        <trans-unit id="67ae8f8fb8bba8ab92d3a89b17a6600fa05951e3" translate="yes" xml:space="preserve">
          <source>Creates and defines a register class. These register classes can be used by inline &lt;code&gt;asm&lt;/code&gt; constructs. &lt;var&gt;registers&lt;/var&gt; may be a single register, register range separated by ellipses, or comma-separated list of those. Example:</source>
          <target state="translated">Crea y define una clase de registro. Estas clases de registro pueden ser utilizadas por construcciones &lt;code&gt;asm&lt;/code&gt; en l&amp;iacute;nea . &lt;var&gt;registers&lt;/var&gt; pueden ser un solo registro, un rango de registros separados por puntos suspensivos o una lista separada por comas de esos. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="6e67e7d1e719647852b7fdbba193a58bb75ed395" translate="yes" xml:space="preserve">
          <source>Critical functions disable interrupts upon entry and restore the previous interrupt state upon exit. Critical functions cannot also have the &lt;code&gt;naked&lt;/code&gt;, &lt;code&gt;reentrant&lt;/code&gt; or &lt;code&gt;interrupt&lt;/code&gt; attributes.</source>
          <target state="translated">Las funciones cr&amp;iacute;ticas desactivan las interrupciones al entrar y restauran el estado de interrupci&amp;oacute;n anterior al salir. Las funciones cr&amp;iacute;ticas tampoco pueden tener los atributos &lt;code&gt;naked&lt;/code&gt; , &lt;code&gt;reentrant&lt;/code&gt; es o de &lt;code&gt;interrupt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3cb5c6e6c93496c35c07eb658977d77e8d997f1" translate="yes" xml:space="preserve">
          <source>Current argument is the name of a library or startup file of some sort. Search for that file in a standard list of directories and substitute the full name found. The current working directory is included in the list of directories scanned.</source>
          <target state="translated">El argumento actual es el nombre de una biblioteca o un archivo de inicio de algún tipo.Busca ese archivo en una lista estándar de directorios y sustituye el nombre completo encontrado.El directorio de trabajo actual está incluido en la lista de directorios analizados.</target>
        </trans-unit>
        <trans-unit id="27ed6e70669ea07173e0ff90384757c33382fb6e" translate="yes" xml:space="preserve">
          <source>Current argument is the name of a linker script. Search for that file in the current list of directories to scan for libraries. If the file is located insert a</source>
          <target state="translated">El argumento actual es el nombre de un script de enlace.Busca ese archivo en la lista actual de directorios para buscar bibliotecas.Si el archivo está localizado,inserte un</target>
        </trans-unit>
        <trans-unit id="318f590d6974d7ec1e4d3da7f86481fca68df621" translate="yes" xml:space="preserve">
          <source>Current gcov-tool supports the following functionalities:</source>
          <target state="translated">La herramienta actual de la GCOV apoya las siguientes funcionalidades:</target>
        </trans-unit>
        <trans-unit id="883949fd66aefc2f68b17e769896d2b8ef7a23bf" translate="yes" xml:space="preserve">
          <source>Currently the x86 GNU/Linux target provides an implementation based on Intel Control-flow Enforcement Technology (CET).</source>
          <target state="translated">Actualmente el objetivo x86 GNU/Linux proporciona una implementación basada en la Tecnología de Aplicación de Flujo de Control (CET)de Intel.</target>
        </trans-unit>
        <trans-unit id="4e2c32ee916d61bb5fb82fcf33fd745d76fa8899" translate="yes" xml:space="preserve">
          <source>Currently this feature only works for</source>
          <target state="translated">Actualmente esta característica sólo funciona para</target>
        </trans-unit>
        <trans-unit id="0990f74b9abadf3ef16d92f66dc8a33347d7b30f" translate="yes" xml:space="preserve">
          <source>Currently, ARM and AArch64 back ends do not support ACLE 2.0 fully. Both back ends support CRC32 intrinsics and the ARM back end supports the Coprocessor intrinsics, all from</source>
          <target state="translated">Actualmente,los back ends ARM y AArch64 no soportan completamente el ACLE 2.0.Ambos extremos traseros soportan los intrínsecos del CRC32 y el extremo trasero de ARM soporta los intrínsecos del Coprocesador,todos de</target>
        </trans-unit>
        <trans-unit id="31736ea72fe4084b8c34c06d50c0f1b2816826be" translate="yes" xml:space="preserve">
          <source>Currently, GCC defines &lt;code&gt;__STDC__&lt;/code&gt; unconditionally. This provides good results in practice.</source>
          <target state="translated">Actualmente, GCC define &lt;code&gt;__STDC__&lt;/code&gt; incondicionalmente. Esto proporciona buenos resultados en la pr&amp;aacute;ctica.</target>
        </trans-unit>
        <trans-unit id="2f63ff4fabd516030a0097fd6f4d244c1efad6e8" translate="yes" xml:space="preserve">
          <source>Currently, the attribute is ignored for inlined functions. If the attribute is applied to a symbol &lt;em&gt;definition&lt;/em&gt;, an error is reported. If a symbol previously declared &lt;code&gt;dllimport&lt;/code&gt; is later defined, the attribute is ignored in subsequent references, and a warning is emitted. The attribute is also overridden by a subsequent declaration as &lt;code&gt;dllexport&lt;/code&gt;.</source>
          <target state="translated">Actualmente, el atributo se ignora para funciones en l&amp;iacute;nea. Si el atributo se aplica a una &lt;em&gt;definici&amp;oacute;n de&lt;/em&gt; s&amp;iacute;mbolo , se informa de un error. Si posteriormente se define un s&amp;iacute;mbolo &lt;code&gt;dllimport&lt;/code&gt; previamente declarado , el atributo se ignora en las referencias posteriores y se emite una advertencia. El atributo tambi&amp;eacute;n se anula mediante una declaraci&amp;oacute;n posterior como &lt;code&gt;dllexport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="590e74950b3a359e45f46ccc033df08293e7e8d0" translate="yes" xml:space="preserve">
          <source>Currently, the preferred dialect makes plain bit-fields signed, because this is simplest. Since &lt;code&gt;int&lt;/code&gt; is the same as &lt;code&gt;signed int&lt;/code&gt; in every other context, it is cleanest for them to be the same in bit-fields as well.</source>
          <target state="translated">Actualmente, el dialecto preferido hace que los campos de bits simples est&amp;eacute;n firmados, porque esto es lo m&amp;aacute;s simple. Dado que &lt;code&gt;int&lt;/code&gt; es lo mismo que &lt;code&gt;signed int&lt;/code&gt; en todos los dem&amp;aacute;s contextos, es m&amp;aacute;s limpio que sean iguales tambi&amp;eacute;n en los campos de bits.</target>
        </trans-unit>
        <trans-unit id="62ab12d09721515fc5fde562eb0862cdc8c3be63" translate="yes" xml:space="preserve">
          <source>Currently, there are two Blackfin-specific built-in functions. These are used for generating &lt;code&gt;CSYNC&lt;/code&gt; and &lt;code&gt;SSYNC&lt;/code&gt; machine insns without using inline assembly; by using these built-in functions the compiler can automatically add workarounds for hardware errata involving these instructions. These functions are named as follows:</source>
          <target state="translated">Actualmente, hay dos funciones integradas espec&amp;iacute;ficas de Blackfin. Estos se utilizan para la generaci&amp;oacute;n de &lt;code&gt;CSYNC&lt;/code&gt; y &lt;code&gt;SSYNC&lt;/code&gt; insns m&amp;aacute;quina sin usar l&amp;iacute;nea de montaje; Al usar estas funciones integradas, el compilador puede agregar autom&amp;aacute;ticamente soluciones alternativas para las erratas de hardware relacionadas con estas instrucciones. Estas funciones se denominan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3463fd1fcbee98183382ce3e6bfb37d05534e64b" translate="yes" xml:space="preserve">
          <source>Custom instruction assignments given by individual</source>
          <target state="translated">Asignaciones de instrucción personalizadas dadas por el individuo</target>
        </trans-unit>
        <trans-unit id="f2bc7d2b6265d22c6647e1fcd64c13f072748076" translate="yes" xml:space="preserve">
          <source>D documentation code (Ddoc).</source>
          <target state="translated">Código de documentación D (Ddoc).</target>
        </trans-unit>
        <trans-unit id="2c7c0a531f3f523f274fda8de9447eb2371b07a9" translate="yes" xml:space="preserve">
          <source>D interface file.</source>
          <target state="translated">Archivo de la interfaz D.</target>
        </trans-unit>
        <trans-unit id="6e41c2f41f21895821ff2de4b2b537b418d821df" translate="yes" xml:space="preserve">
          <source>D register</source>
          <target state="translated">Registro D</target>
        </trans-unit>
        <trans-unit id="2b608c731b27a1c96a6f8a0e732c2d9673589c56" translate="yes" xml:space="preserve">
          <source>D source code.</source>
          <target state="translated">Código fuente D.</target>
        </trans-unit>
        <trans-unit id="6e946b779e60851d5c244c3ad74774cbf9f1d48d" translate="yes" xml:space="preserve">
          <source>DD</source>
          <target state="translated">DD</target>
        </trans-unit>
        <trans-unit id="333132be138ba9ace941111a0f174248952df7a1" translate="yes" xml:space="preserve">
          <source>DF</source>
          <target state="translated">DF</target>
        </trans-unit>
        <trans-unit id="53a81edefe355889dccbacb38a4a1453f4e85785" translate="yes" xml:space="preserve">
          <source>DL</source>
          <target state="translated">DL</target>
        </trans-unit>
        <trans-unit id="8fe69de0441ad2ce15deb455eb1d3b4c6713b22c" translate="yes" xml:space="preserve">
          <source>Data file relocation.</source>
          <target state="translated">Reubicación de archivos de datos.</target>
        </trans-unit>
        <trans-unit id="12293b22c91f6b4096277825dea65487973f1c86" translate="yes" xml:space="preserve">
          <source>Data prefetch does not generate faults if &lt;var&gt;addr&lt;/var&gt; is invalid, but the address expression itself must be valid. For example, a prefetch of &lt;code&gt;p-&amp;gt;next&lt;/code&gt; does not fault if &lt;code&gt;p-&amp;gt;next&lt;/code&gt; is not a valid address, but evaluation faults if &lt;code&gt;p&lt;/code&gt; is not a valid address.</source>
          <target state="translated">Captaci&amp;oacute;n previa de datos no genera fallos si &lt;var&gt;addr&lt;/var&gt; no es v&amp;aacute;lida, pero la expresi&amp;oacute;n propia direcci&amp;oacute;n debe ser v&amp;aacute;lida. Por ejemplo, una captaci&amp;oacute;n previa de &lt;code&gt;p-&amp;gt;next&lt;/code&gt; no falla si &lt;code&gt;p-&amp;gt;next&lt;/code&gt; no es una direcci&amp;oacute;n v&amp;aacute;lida, pero la evaluaci&amp;oacute;n falla si &lt;code&gt;p&lt;/code&gt; no es una direcci&amp;oacute;n v&amp;aacute;lida.</target>
        </trans-unit>
        <trans-unit id="c2a93a0b6a01599dcd1bcda6f09bcde290d7a928" translate="yes" xml:space="preserve">
          <source>Data register</source>
          <target state="translated">Registro de datos</target>
        </trans-unit>
        <trans-unit id="46a7bcc6b46e84d9b5870e2cd0ac98f1bdb1402e" translate="yes" xml:space="preserve">
          <source>Data register (arbitrary general purpose register)</source>
          <target state="translated">Registro de datos (registro arbitrario de propósito general)</target>
        </trans-unit>
        <trans-unit id="47be067ca541e17c43e79dffecbcbbad2c9d9a08" translate="yes" xml:space="preserve">
          <source>Data type: &lt;strong id=&quot;index-struct-_005f_005fhtm_005ftdb&quot;&gt;struct __htm_tdb&lt;/strong&gt;</source>
          <target state="translated">Tipo de datos: &lt;strong id=&quot;index-struct-_005f_005fhtm_005ftdb&quot;&gt;struct __htm_tdb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2310e7e6984f7b9841fe3043d76bb8748b8032aa" translate="yes" xml:space="preserve">
          <source>Data types for complex numbers.</source>
          <target state="translated">Tipos de datos para números complejos.</target>
        </trans-unit>
        <trans-unit id="c002fd4f69749774cd614b7282439760b0a132f5" translate="yes" xml:space="preserve">
          <source>Debug dumps can be enabled with a</source>
          <target state="translated">Los depósitos de depuración pueden activarse con un</target>
        </trans-unit>
        <trans-unit id="d5a9f22c83f9299405413f6e5e553516a6cf6903" translate="yes" xml:space="preserve">
          <source>Debugging (</source>
          <target state="translated">Depuración (</target>
        </trans-unit>
        <trans-unit id="b7b96436cf5229d16fb5897e129a114445f95678" translate="yes" xml:space="preserve">
          <source>Debugging Options</source>
          <target state="translated">Opciones de depuración</target>
        </trans-unit>
        <trans-unit id="aff6d1089cf54da46ac69c2183c78d051d04eff0" translate="yes" xml:space="preserve">
          <source>Decimal Floating Types.</source>
          <target state="translated">Tipos flotantes decimales.</target>
        </trans-unit>
        <trans-unit id="6a66960857760a2cd63559ec52ee94a4a711e705" translate="yes" xml:space="preserve">
          <source>Declarations of external variables and functions within a block apply only to the block containing the declaration. In other words, they have the same scope as any other declaration in the same place.</source>
          <target state="translated">Las declaraciones de las variables y funciones externas dentro de un bloque se aplican sólo al bloque que contiene la declaración.En otras palabras,tienen el mismo alcance que cualquier otra declaración en el mismo lugar.</target>
        </trans-unit>
        <trans-unit id="226f69acb8ae88a869e2645962bf30e8ec7e974f" translate="yes" xml:space="preserve">
          <source>Declares the instruction to be commutative for this operand and the following operand. This means that the compiler may interchange the two operands if that is the cheapest way to make all operands fit the constraints. &amp;lsquo;</source>
          <target state="translated">Declara que la instrucci&amp;oacute;n es conmutativa para este operando y el siguiente operando. Esto significa que el compilador puede intercambiar los dos operandos si esa es la forma m&amp;aacute;s barata de hacer que todos los operandos se ajusten a las restricciones. '</target>
        </trans-unit>
        <trans-unit id="6e381a53c21bfca57ae3c6418395aa6805faa3e6" translate="yes" xml:space="preserve">
          <source>Declaring multiple function versions.</source>
          <target state="translated">Declarando versiones de funciones múltiples.</target>
        </trans-unit>
        <trans-unit id="9df458345b87f143e1443622e3689e81c8f18de5" translate="yes" xml:space="preserve">
          <source>Declaring objects with &lt;code&gt;uncached&lt;/code&gt; allows you to exclude data-cache participation in load and store operations on those objects without involving the additional semantic implications of &lt;code&gt;volatile&lt;/code&gt;. The &lt;code&gt;.di&lt;/code&gt; instruction suffix is used for all loads and stores of data declared &lt;code&gt;uncached&lt;/code&gt;.</source>
          <target state="translated">Declarar objetos sin &lt;code&gt;uncached&lt;/code&gt; permite excluir la participaci&amp;oacute;n de la cach&amp;eacute; de datos en las operaciones de carga y almacenamiento en esos objetos sin involucrar las implicaciones sem&amp;aacute;nticas adicionales de &lt;code&gt;volatile&lt;/code&gt; . El sufijo de instrucci&amp;oacute;n &lt;code&gt;.di&lt;/code&gt; se utiliza para todas las cargas y almacenes de datos declarados no &lt;code&gt;uncached&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dea979b67c132bc175e1957da54321717a0b3e04" translate="yes" xml:space="preserve">
          <source>Declaring that functions have no side effects, or that they can never return.</source>
          <target state="translated">Declarando que las funciones no tienen efectos secundarios,o que nunca pueden volver.</target>
        </trans-unit>
        <trans-unit id="63030d3cd1e02a687549d142e20f0269121d2b83" translate="yes" xml:space="preserve">
          <source>Declaring the variable</source>
          <target state="translated">Declarando la variable</target>
        </trans-unit>
        <trans-unit id="b2609010c78f10c37fecace799c32d84a8b0113e" translate="yes" xml:space="preserve">
          <source>Declaring zero-length arrays in other contexts, including as interior members of structure objects or as non-member objects, is discouraged. Accessing elements of zero-length arrays declared in such contexts is undefined and may be diagnosed.</source>
          <target state="translated">Se desaconseja la declaración de conjuntos de longitud cero en otros contextos,incluso como miembros interiores de objetos de estructura o como objetos no miembros.El acceso a los elementos de los conjuntos de longitud cero declarados en esos contextos no está definido y puede ser diagnosticado.</target>
        </trans-unit>
        <trans-unit id="c0ce91fb53831d435a29b5632774a3c603665597" translate="yes" xml:space="preserve">
          <source>Declaring zero-length arrays is allowed in GNU C as an extension. A zero-length array can be useful as the last element of a structure that is really a header for a variable-length object:</source>
          <target state="translated">Declarar matrices de longitud cero está permitido en GNU C como una extensión.Un arreglo de longitud cero puede ser útil como el último elemento de una estructura que es realmente una cabecera para un objeto de longitud variable:</target>
        </trans-unit>
        <trans-unit id="6ccbb003fcbbef0455a040407eca25644a68c8af" translate="yes" xml:space="preserve">
          <source>Default instruction scheduling parameters are used for values that select an architecture and not an implementation. These are &amp;lsquo;</source>
          <target state="translated">Los par&amp;aacute;metros de programaci&amp;oacute;n de instrucciones predeterminados se utilizan para valores que seleccionan una arquitectura y no una implementaci&amp;oacute;n. Estos son '</target>
        </trans-unit>
        <trans-unit id="ba9d931a2de4e95a1c6e18f4c96c1c9b9529c7aa" translate="yes" xml:space="preserve">
          <source>Default to 64-bit memory allocation routines.</source>
          <target state="translated">Rutinas de asignación de memoria de 64 bits por defecto.</target>
        </trans-unit>
        <trans-unit id="bc0e52c70e2e3d40aed76c210b466f12c8a6307d" translate="yes" xml:space="preserve">
          <source>Default visibility corresponds to &amp;ldquo;external linkage&amp;rdquo; in the language.</source>
          <target state="translated">La visibilidad predeterminada corresponde a &quot;vinculaci&amp;oacute;n externa&quot; en el idioma.</target>
        </trans-unit>
        <trans-unit id="422c626b9da356260a74af4c444e356b1dff1705" translate="yes" xml:space="preserve">
          <source>Default visibility is the normal case for the object file format. This value is available for the visibility attribute to override other options that may change the assumed visibility of entities.</source>
          <target state="translated">La visibilidad por defecto es el caso normal para el formato de archivo del objeto.Este valor está disponible para que el atributo de visibilidad anule otras opciones que pueden cambiar la supuesta visibilidad de las entidades.</target>
        </trans-unit>
        <trans-unit id="dcc8364c434a51851187f20fa9cd4e3c3aefb760" translate="yes" xml:space="preserve">
          <source>Define a copy constructor and an assignment operator for classes with dynamically-allocated memory.</source>
          <target state="translated">Definir un constructor de copias y un operador de asignación para las clases con memoria asignada dinámicamente.</target>
        </trans-unit>
        <trans-unit id="5e2f8d06c00c297c0f950f50c2f9216e48b9c380" translate="yes" xml:space="preserve">
          <source>Define additional macros required for using the POSIX threads library. You should use this option consistently for both compilation and linking. This option is supported on GNU/Linux targets, most other Unix derivatives, and also on x86 Cygwin and MinGW targets.</source>
          <target state="translated">Definir las macros adicionales necesarias para usar la biblioteca de hilos POSIX.Debería usar esta opción de manera consistente tanto para la compilación como para el enlazado.Esta opción está soportada en objetivos GNU/Linux,la mayoría de los otros derivados de Unix,y también en objetivos x86 Cygwin y MinGW.</target>
        </trans-unit>
        <trans-unit id="8c097d198bbcce6c15c43b9673925ec2a844aa50" translate="yes" xml:space="preserve">
          <source>Define an argument called &lt;var&gt;key&lt;/var&gt; with a value of &lt;var&gt;value&lt;/var&gt; for the plugin called &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="translated">Defina un argumento llamado &lt;var&gt;key&lt;/var&gt; con un valor de &lt;var&gt;value&lt;/var&gt; para el complemento llamado &lt;var&gt;name&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3b065b864c454ddad2ef2e2ee36967d76b136921" translate="yes" xml:space="preserve">
          <source>Define how many insn groups (cycles) are examined for a dependency on a stalled insn that is a candidate for premature removal from the queue of stalled insns. This has an effect only during the second scheduling pass, and only if</source>
          <target state="translated">Definir cuántos grupos de insn (ciclos)se examinan para una dependencia de un insn estancado que es candidato a ser eliminado prematuramente de la cola de insn estancados.Esto tiene un efecto sólo durante el segundo pase de programación,y sólo si</target>
        </trans-unit>
        <trans-unit id="d9b9a323e114f08ae98c07403af86c1b8b068b0b" translate="yes" xml:space="preserve">
          <source>Define how many insns (if any) can be moved prematurely from the queue of stalled insns into the ready list during the second scheduling pass.</source>
          <target state="translated">Defina cuántos insumos (si los hay)pueden ser movidos prematuramente de la cola de insumos estancados a la lista de listos durante el segundo pase de programación.</target>
        </trans-unit>
        <trans-unit id="c71f73e3c6f3ec478d5a3cb4a896c06575c34175" translate="yes" xml:space="preserve">
          <source>Define the value of the global environment variable &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007a5a1c8e0d06fa894878b70ba1b2c632ffae5b" translate="yes" xml:space="preserve">
          <source>Defined if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461eb2c6003ae0aaa3a339d944fe5cf6fb4d9e9b" translate="yes" xml:space="preserve">
          <source>Defined if the compiler supports 32-bit double resp. 64-bit double. The actual layout is specified by option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02590046df70d51175d1e6e43007843fa86e90a" translate="yes" xml:space="preserve">
          <source>Defining a register variable does not reserve the register. Other than when invoking the Extended &lt;code&gt;asm&lt;/code&gt;, the contents of the specified register are not guaranteed. For this reason, the following uses are explicitly &lt;em&gt;not&lt;/em&gt; supported. If they appear to work, it is only happenstance, and may stop working as intended due to (seemingly) unrelated changes in surrounding code, or even minor changes in the optimization of a future version of gcc:</source>
          <target state="translated">La definici&amp;oacute;n de una variable de registro no reserva el registro. Aparte de cuando se invoca el extendido &lt;code&gt;asm&lt;/code&gt; , el contenido del registro especificado no est&amp;aacute;n garantizados. Por esta raz&amp;oacute;n, los siguientes usos &lt;em&gt;no se&lt;/em&gt; admiten expl&amp;iacute;citamente . Si parecen funcionar, es solo una casualidad y pueden dejar de funcionar como se esperaba debido a cambios (aparentemente) no relacionados en el c&amp;oacute;digo circundante, o incluso cambios menores en la optimizaci&amp;oacute;n de una versi&amp;oacute;n futura de gcc:</target>
        </trans-unit>
        <trans-unit id="827f9d9fc11f005c60202a566cf0397ae86dd11d" translate="yes" xml:space="preserve">
          <source>Defining inline functions (as fast as macros).</source>
          <target state="translated">Definir las funciones en línea (tan rápido como las macros).</target>
        </trans-unit>
        <trans-unit id="85adcd212de2e338813907851ee4a5662c5f1efc" translate="yes" xml:space="preserve">
          <source>Defining variables residing in specified registers.</source>
          <target state="translated">Definición de variables que residen en registros específicos.</target>
        </trans-unit>
        <trans-unit id="83ee69015768e1155b22074ebd3a36cc37e95cce" translate="yes" xml:space="preserve">
          <source>Delay execution for &lt;var&gt;ticks&lt;/var&gt; cycles. Note that this built-in does not take into account the effect of interrupts that might increase delay time. &lt;var&gt;ticks&lt;/var&gt; must be a compile-time integer constant; delays with a variable number of cycles are not supported.</source>
          <target state="translated">Retrasar la ejecuci&amp;oacute;n de los ciclos de &lt;var&gt;ticks&lt;/var&gt; . Tenga en cuenta que esta funci&amp;oacute;n incorporada no tiene en cuenta el efecto de las interrupciones que podr&amp;iacute;an aumentar el tiempo de retardo. &lt;var&gt;ticks&lt;/var&gt; deben ser una constante entera en tiempo de compilaci&amp;oacute;n; no se admiten retrasos con un n&amp;uacute;mero variable de ciclos.</target>
        </trans-unit>
        <trans-unit id="1610d19a0a48226750b3049b914e4786781d22cd" translate="yes" xml:space="preserve">
          <source>Deleting &amp;ldquo;empty&amp;rdquo; loops.</source>
          <target state="translated">Eliminando bucles &quot;vac&amp;iacute;os&quot;.</target>
        </trans-unit>
        <trans-unit id="36a3093d26bbd3d1360751144e1efe12aeac3836" translate="yes" xml:space="preserve">
          <source>Depending on the target and how GCC was configured, a slightly different set of optimizations may be enabled at each</source>
          <target state="translated">Dependiendo del objetivo y de cómo se configuró el GCC,se puede habilitar un conjunto ligeramente diferente de optimizaciones en cada</target>
        </trans-unit>
        <trans-unit id="c9892e7a514c42b2b22214f98f72a5abf448bce9" translate="yes" xml:space="preserve">
          <source>Describes the type of hardware multiply supported by the target. Accepted values are &amp;lsquo;</source>
          <target state="translated">Describe el tipo de hardware que admite el destino. Los valores aceptados son '</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="230a2f1369c19e9bed8580ef0c388abed833d36f" translate="yes" xml:space="preserve">
          <source>Despite the nomenclature, &amp;lsquo;</source>
          <target state="translated">A pesar de la nomenclatura, '</target>
        </trans-unit>
        <trans-unit id="bd519eb03ed0c213fdab64aa985771c57b8bf1cd" translate="yes" xml:space="preserve">
          <source>Detect floating-point division by zero. Unlike other similar options,</source>
          <target state="translated">Detectar división de punto flotante por cero.A diferencia de otras opciones similares,</target>
        </trans-unit>
        <trans-unit id="f275b676db5ca45003e8d7fdde53e395b48ae26a" translate="yes" xml:space="preserve">
          <source>Detect integer division by zero as well as &lt;code&gt;INT_MIN / -1&lt;/code&gt; division.</source>
          <target state="translated">Detecta la divisi&amp;oacute;n de enteros por cero, as&amp;iacute; como la divisi&amp;oacute;n &lt;code&gt;INT_MIN / -1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f073b8e3005614eac7c90dae6865076fed02ebe" translate="yes" xml:space="preserve">
          <source>Detect paths that trigger erroneous or undefined behavior due to a null value being used in a way forbidden by a &lt;code&gt;returns_nonnull&lt;/code&gt; or &lt;code&gt;nonnull&lt;/code&gt; attribute. Isolate those paths from the main control flow and turn the statement with erroneous or undefined behavior into a trap. This is not currently enabled, but may be enabled by</source>
          <target state="translated">Detecta rutas que desencadenan un comportamiento err&amp;oacute;neo o indefinido debido a que un valor nulo se utiliza de una manera prohibida por un atributo &lt;code&gt;returns_nonnull&lt;/code&gt; o &lt;code&gt;nonnull&lt;/code&gt; . A&amp;iacute;sle esas rutas del flujo de control principal y convierta la declaraci&amp;oacute;n con un comportamiento err&amp;oacute;neo o indefinido en una trampa. Esto no est&amp;aacute; habilitado actualmente, pero puede ser habilitado por</target>
        </trans-unit>
        <trans-unit id="6fd69cb31930da8cd040a4ffab1183319f8c09e1" translate="yes" xml:space="preserve">
          <source>Detect paths that trigger erroneous or undefined behavior due to dereferencing a null pointer. Isolate those paths from the main control flow and turn the statement with erroneous or undefined behavior into a trap. This flag is enabled by default at</source>
          <target state="translated">Detectar los caminos que desencadenan un comportamiento erróneo o indefinido debido a la derivación de un puntero nulo.Aislar esos caminos del flujo de control principal y convertir la declaración con comportamiento erróneo o indefinido en una trampa.Este indicador se activa por defecto en</target>
        </trans-unit>
        <trans-unit id="b579efc699383256e0ea46438d32e07c0012bfb5" translate="yes" xml:space="preserve">
          <source>Determine the language standard. See &lt;a href=&quot;standards#Standards&quot;&gt;Language Standards Supported by GCC&lt;/a&gt;, for details of these standard versions. This option is currently only supported when compiling C or C++.</source>
          <target state="translated">Determine el est&amp;aacute;ndar del idioma. Consulte &lt;a href=&quot;standards#Standards&quot;&gt;Est&amp;aacute;ndares de lenguaje admitidos por GCC&lt;/a&gt; para obtener detalles de estas versiones est&amp;aacute;ndar. Actualmente, esta opci&amp;oacute;n solo se admite al compilar C o C ++.</target>
        </trans-unit>
        <trans-unit id="86070f5116cf4fafa20ed47f8a131328fabf7c26" translate="yes" xml:space="preserve">
          <source>Determined by ABI.</source>
          <target state="translated">Determinado por el ABI.</target>
        </trans-unit>
        <trans-unit id="3673862083301334f396f6717a9c4dfccba740e6" translate="yes" xml:space="preserve">
          <source>Determined by ABI. The options</source>
          <target state="translated">Determinado por el ABI.Las opciones</target>
        </trans-unit>
        <trans-unit id="95662524b23c122195f82746bb2090bea580b1d6" translate="yes" xml:space="preserve">
          <source>Determining the alignment of a function, type or variable.</source>
          <target state="translated">Determinar la alineación de una función,tipo o variable.</target>
        </trans-unit>
        <trans-unit id="1e53b5ee672acae1a69a324148d3c1bc9485a2b5" translate="yes" xml:space="preserve">
          <source>Developer Options</source>
          <target state="translated">Opciones para el desarrollador</target>
        </trans-unit>
        <trans-unit id="76b02b7503c565a218e0634291f3750002ba2b81" translate="yes" xml:space="preserve">
          <source>Devices belonging to &lt;code&gt;avrtiny&lt;/code&gt; and &lt;code&gt;avrxmega3&lt;/code&gt; can access flash memory by means of &lt;code&gt;LD*&lt;/code&gt; instructions because the flash memory is mapped into the RAM address space. There is &lt;em&gt;no need&lt;/em&gt; for language extensions like &lt;code&gt;__flash&lt;/code&gt; or attribute &lt;a href=&quot;variable-attributes#AVR-Variable-Attributes&quot;&gt;&lt;code&gt;progmem&lt;/code&gt;&lt;/a&gt;. The default linker description files for these devices cater for that feature and &lt;code&gt;.rodata&lt;/code&gt; stays in flash: The compiler just generates &lt;code&gt;LD*&lt;/code&gt; instructions, and the linker script adds core specific offsets to all &lt;code&gt;.rodata&lt;/code&gt; symbols: &lt;code&gt;0x4000&lt;/code&gt; in the case of &lt;code&gt;avrtiny&lt;/code&gt; and &lt;code&gt;0x8000&lt;/code&gt; in the case of &lt;code&gt;avrxmega3&lt;/code&gt;. See &lt;a href=&quot;avr-options#AVR-Options&quot;&gt;AVR Options&lt;/a&gt; for a list of respective devices.</source>
          <target state="translated">Los dispositivos que pertenecen a &lt;code&gt;avrtiny&lt;/code&gt; y &lt;code&gt;avrxmega3&lt;/code&gt; pueden acceder a la memoria flash mediante instrucciones &lt;code&gt;LD*&lt;/code&gt; porque la memoria flash se asigna al espacio de direcciones RAM. No &lt;em&gt;hay necesidad&lt;/em&gt; de extensiones de idioma como &lt;code&gt;__flash&lt;/code&gt; o atributo &lt;a href=&quot;variable-attributes#AVR-Variable-Attributes&quot;&gt; &lt;code&gt;progmem&lt;/code&gt; &lt;/a&gt; . Los archivos de descripci&amp;oacute;n de engarce por defecto para estos dispositivos atender a esa caracter&amp;iacute;stica y &lt;code&gt;.rodata&lt;/code&gt; estancias flash: El compilador genera simplemente &lt;code&gt;LD*&lt;/code&gt; instrucciones, y el gui&amp;oacute;n enlazador a&amp;ntilde;ade compensaciones espec&amp;iacute;ficas b&amp;aacute;sicas para todos los &lt;code&gt;.rodata&lt;/code&gt; s&amp;iacute;mbolos: &lt;code&gt;0x4000&lt;/code&gt; en el caso de &lt;code&gt;avrtiny&lt;/code&gt; y &lt;code&gt;0x8000&lt;/code&gt; en el caso de &lt;code&gt;avrxmega3&lt;/code&gt; . Consulte &lt;a href=&quot;avr-options#AVR-Options&quot;&gt;Opciones de AVR&lt;/a&gt; para obtener una lista de los dispositivos respectivos.</target>
        </trans-unit>
        <trans-unit id="ce3941724906083a5cbd3b764ac34bb494078fce" translate="yes" xml:space="preserve">
          <source>Diagnostic Message Formatting Options</source>
          <target state="translated">Opciones de formato de mensajes de diagnóstico</target>
        </trans-unit>
        <trans-unit id="24dd6971b6b8e1e14c204ff9047942c4efd19644" translate="yes" xml:space="preserve">
          <source>Diagnostic messages can optionally have an associated &lt;a href=&quot;https://cwe.mitre.org/index.html&quot;&gt;CWE&lt;/a&gt; identifier. GCC itself only provides such metadata for some of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bef0ef417e13647c36cc079b8003855e534522" translate="yes" xml:space="preserve">
          <source>Diagnostic options such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f68058e1e87ea41d8c9d3c7c1f94f8140abe531" translate="yes" xml:space="preserve">
          <source>Diagnostics can have child diagnostics. For example, this error and note:</source>
          <target state="translated">Los diagnósticos pueden tener diagnósticos infantiles.Por ejemplo,este error y nota:</target>
        </trans-unit>
        <trans-unit id="f2f5c489e6e2397fb8b9f0a64fb5a021b4c96f8f" translate="yes" xml:space="preserve">
          <source>Diagnostics consist of all the output sent to stderr by GCC.</source>
          <target state="translated">Los diagnósticos consisten en toda la salida enviada a stderr por GCC.</target>
        </trans-unit>
        <trans-unit id="3545c8182bd90d9cc3755c0e6e77d7f64b0e4f2b" translate="yes" xml:space="preserve">
          <source>Different sets of tools are interoperable if they generate files that can be used in the same program. The set of tools includes compilers, assemblers, linkers, libraries, header files, startup files, and debuggers. Binaries produced by different sets of tools are not interoperable unless they implement the same ABI. This applies to different versions of the same tools as well as tools from different vendors.</source>
          <target state="translated">Diferentes conjuntos de herramientas son interoperables si generan archivos que pueden ser usados en el mismo programa.El conjunto de herramientas incluye compiladores,ensambladores,enlazadores,bibliotecas,archivos de cabecera,archivos de inicio y depuradores.Los binarios producidos por diferentes conjuntos de herramientas no son interoperables a menos que implementen la misma ABI.Esto se aplica a diferentes versiones de las mismas herramientas,así como a herramientas de diferentes proveedores.</target>
        </trans-unit>
        <trans-unit id="356087678cfa620825af09ad133165c6564b44fe" translate="yes" xml:space="preserve">
          <source>Direct the linker to not merge together strings in the debugging information that are identical in different object files. Merging is not supported by all assemblers or linkers. Merging decreases the size of the debug information in the output file at the cost of increasing link processing time. Merging is enabled by default.</source>
          <target state="translated">Dirige el enlazador para que no se fusionen cadenas en la información de depuración que son idénticas en diferentes archivos de objetos.La fusión no está soportada por todos los ensambladores o enlazadores.La fusión disminuye el tamaño de la información de depuración en el archivo de salida a costa de aumentar el tiempo de procesamiento del enlace.La fusión está habilitada por defecto.</target>
        </trans-unit>
        <trans-unit id="7eb0eda4de9f69bec3e03226fe8296271cfe198f" translate="yes" xml:space="preserve">
          <source>Directories specified with</source>
          <target state="translated">Los directorios especificados con</target>
        </trans-unit>
        <trans-unit id="f710acdf8c3a36b577ab367527e400e4e4519a38" translate="yes" xml:space="preserve">
          <source>Directory Options</source>
          <target state="translated">Opciones de directorio</target>
        </trans-unit>
        <trans-unit id="9a7d4e0687b14e2b7cda406900b802782cd50a62" translate="yes" xml:space="preserve">
          <source>Disable</source>
          <target state="translated">Disable</target>
        </trans-unit>
        <trans-unit id="2d24b1d992d1c4af780c8f9d61b9c942a6314962" translate="yes" xml:space="preserve">
          <source>Disable (do not disable) use of the &lt;code&gt;jal&lt;/code&gt; instruction. Calling functions using &lt;code&gt;jal&lt;/code&gt; is more efficient but requires the caller and callee to be in the same 256 megabyte segment.</source>
          <target state="translated">Desactive (no desactive) el uso de la instrucci&amp;oacute;n &lt;code&gt;jal&lt;/code&gt; . Las funciones de llamada que usan &lt;code&gt;jal&lt;/code&gt; son m&amp;aacute;s eficientes, pero requieren que la persona que llama y la persona que llama est&amp;eacute;n en el mismo segmento de 256 megabytes.</target>
        </trans-unit>
        <trans-unit id="df30c5939a2b24c38598155ef45390b83313cc5d" translate="yes" xml:space="preserve">
          <source>Disable (or enable) optimizations that use the small data section. This may be useful for working around optimizer bugs.</source>
          <target state="translated">Deshabilitar (o activar)las optimizaciones que utilizan la sección de datos pequeños.Esto puede ser útil para trabajar en torno a los errores de la optimización.</target>
        </trans-unit>
        <trans-unit id="7f2ac79b60fc58bb07e366adfa0ca3573c94fc1b" translate="yes" xml:space="preserve">
          <source>Disable (or re-enable) the generation of PC-relative jump instructions.</source>
          <target state="translated">Deshabilitar (o volver a habilitar)la generación de instrucciones de salto relacionadas con el PC.</target>
        </trans-unit>
        <trans-unit id="e288cae69ca3cd91f647a069f6407394ee8f11c1" translate="yes" xml:space="preserve">
          <source>Disable (or re-enable) the generation of hardware floating point instructions. This option is only significant when the target architecture is &amp;lsquo;</source>
          <target state="translated">Deshabilite (o vuelva a habilitar) la generaci&amp;oacute;n de instrucciones de punto flotante de hardware. Esta opci&amp;oacute;n solo es significativa cuando la arquitectura de destino es '</target>
        </trans-unit>
        <trans-unit id="b671582f983bdaa2dca5a8611789524ffa3c4ce1" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;lr&lt;/code&gt; and &lt;code&gt;sr&lt;/code&gt; instructions from using FPX extension aux registers.</source>
          <target state="translated">Desactive las instrucciones &lt;code&gt;lr&lt;/code&gt; y &lt;code&gt;sr&lt;/code&gt; para que no utilicen los registros auxiliares de la extensi&amp;oacute;n FPX.</target>
        </trans-unit>
        <trans-unit id="c1660e5f22d4c71c2ee4abdaec7f4aef18aa78c9" translate="yes" xml:space="preserve">
          <source>Disable IPA pass &lt;var&gt;pass&lt;/var&gt;. &lt;var&gt;pass&lt;/var&gt; is the pass name. If the same pass is statically invoked in the compiler multiple times, the pass name should be appended with a sequential number starting from 1.</source>
          <target state="translated">Desactivar IPA pasan &lt;var&gt;pass&lt;/var&gt; . &lt;var&gt;pass&lt;/var&gt; es el nombre de la contrase&amp;ntilde;a. Si el mismo paso se invoca est&amp;aacute;ticamente en el compilador varias veces, el nombre del paso debe agregarse con un n&amp;uacute;mero secuencial que comience desde 1.</target>
        </trans-unit>
        <trans-unit id="9d85b585d1d05ada062cacb1bc9babcd262635c5" translate="yes" xml:space="preserve">
          <source>Disable RTL pass &lt;var&gt;pass&lt;/var&gt;. &lt;var&gt;pass&lt;/var&gt; is the pass name. If the same pass is statically invoked in the compiler multiple times, the pass name should be appended with a sequential number starting from 1. &lt;var&gt;range-list&lt;/var&gt; is a comma-separated list of function ranges or assembler names. Each range is a number pair separated by a colon. The range is inclusive in both ends. If the range is trivial, the number pair can be simplified as a single number. If the function&amp;rsquo;s call graph node&amp;rsquo;s &lt;var&gt;uid&lt;/var&gt; falls within one of the specified ranges, the &lt;var&gt;pass&lt;/var&gt; is disabled for that function. The &lt;var&gt;uid&lt;/var&gt; is shown in the function header of a dump file, and the pass names can be dumped by using option</source>
          <target state="translated">Desactivar pase de &lt;var&gt;pass&lt;/var&gt; RTL . &lt;var&gt;pass&lt;/var&gt; es el nombre de la contrase&amp;ntilde;a. Si el mismo paso se invoca est&amp;aacute;ticamente en el compilador varias veces, el nombre del paso debe agregarse con un n&amp;uacute;mero secuencial comenzando por 1. &lt;var&gt;range-list&lt;/var&gt; es una lista separada por comas de rangos de funciones o nombres de ensambladores. Cada rango es un par de n&amp;uacute;meros separados por dos puntos. El rango es inclusivo en ambos extremos. Si el rango es trivial, el par de n&amp;uacute;meros se puede simplificar como un solo n&amp;uacute;mero. Si el &lt;var&gt;uid&lt;/var&gt; del nodo del gr&amp;aacute;fico de llamadas de la funci&amp;oacute;n cae dentro de uno de los rangos especificados, el &lt;var&gt;pass&lt;/var&gt; est&amp;aacute; deshabilitado para esa funci&amp;oacute;n. El &lt;var&gt;uid&lt;/var&gt; se muestra en el encabezado de la funci&amp;oacute;n de un archivo de volcado, y los nombres de paso se pueden volcar usando la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="7472182885a7c5023818095d70ccee0a1003a982" translate="yes" xml:space="preserve">
          <source>Disable Wpedantic warnings about constructs used in MFC, such as implicit int and getting a pointer to member function via non-standard syntax.</source>
          <target state="translated">Deshabilitar las advertencias de Wpedantic sobre las construcciones utilizadas en el MFC,como la int implícita y la obtención de un puntero a la función de miembro a través de una sintaxis no estándar.</target>
        </trans-unit>
        <trans-unit id="d634773489054e3f820c752b2fe8a75da7d7b819" translate="yes" xml:space="preserve">
          <source>Disable all estimate instructions, equivalent to</source>
          <target state="translated">Desactivar todas las instrucciones de estimación,equivalentes a</target>
        </trans-unit>
        <trans-unit id="24c834ead83a4d1ebc3aa24aef6d4685246dfacb" translate="yes" xml:space="preserve">
          <source>Disable any machine-specific peephole optimizations. The difference between</source>
          <target state="translated">Deshabilite cualquier optimización de mirillas específica de la máquina.La diferencia entre</target>
        </trans-unit>
        <trans-unit id="dd10c462b4994eb3982bf5bd6da47ab31464aa34" translate="yes" xml:space="preserve">
          <source>Disable built-in declarations of functions that are not mandated by ANSI/ISO C. These include &lt;code&gt;ffs&lt;/code&gt;, &lt;code&gt;alloca&lt;/code&gt;, &lt;code&gt;_exit&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;bzero&lt;/code&gt;, &lt;code&gt;conjf&lt;/code&gt;, and other related functions.</source>
          <target state="translated">Disable incorporado en las declaraciones de funciones que no est&amp;aacute;n obligados por ANSI / ISO C. Estos incluyen &lt;code&gt;ffs&lt;/code&gt; , &lt;code&gt;alloca&lt;/code&gt; , &lt;code&gt;_exit&lt;/code&gt; , &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;bzero&lt;/code&gt; , &lt;code&gt;conjf&lt;/code&gt; , y otras funciones relacionadas.</target>
        </trans-unit>
        <trans-unit id="e02b6f324995da402dd843cdd3b4c4bea9e780ea" translate="yes" xml:space="preserve">
          <source>Disable compilation effects of</source>
          <target state="translated">Desactivar los efectos de la compilación de</target>
        </trans-unit>
        <trans-unit id="4deddc96335abb292813c9ba7387aa150fa39b18" translate="yes" xml:space="preserve">
          <source>Disable compiler generated atomic sequences and emit library calls for atomic operations. This is the default if the target is not &lt;code&gt;sh*-*-linux*&lt;/code&gt;.</source>
          <target state="translated">Deshabilite las secuencias at&amp;oacute;micas generadas por el compilador y emita llamadas de biblioteca para operaciones at&amp;oacute;micas. Este es el valor predeterminado si el destino no es &lt;code&gt;sh*-*-linux*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e03c896d7744b1b31e15f0be1dc55290d5dd4d98" translate="yes" xml:space="preserve">
          <source>Disable diagnostics that the standard says a compiler does not need to issue. Currently, the only such diagnostic issued by G++ is the one for a name having multiple meanings within a class.</source>
          <target state="translated">Deshabilitar los diagnósticos que el estándar dice que un compilador no necesita emitir.Actualmente,el único diagnóstico de este tipo emitido por G++es el de un nombre con múltiples significados dentro de una clase.</target>
        </trans-unit>
        <trans-unit id="15a8077f24c55fd5c21ad0119861505db428aa18" translate="yes" xml:space="preserve">
          <source>Disable generation of &lt;code&gt;bcnz&lt;/code&gt; instructions.</source>
          <target state="translated">Desactive la generaci&amp;oacute;n de instrucciones &lt;code&gt;bcnz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5286938aafbdfcae094ead274d86fb0eb12ec590" translate="yes" xml:space="preserve">
          <source>Disable generation of information about every class with virtual functions for use by the C++ run-time type identification features (&lt;code&gt;dynamic_cast&lt;/code&gt; and &lt;code&gt;typeid&lt;/code&gt;). If you don&amp;rsquo;t use those parts of the language, you can save some space by using this flag. Note that exception handling uses the same information, but G++ generates it as needed. The &lt;code&gt;dynamic_cast&lt;/code&gt; operator can still be used for casts that do not require run-time type information, i.e. casts to &lt;code&gt;void *&lt;/code&gt; or to unambiguous base classes.</source>
          <target state="translated">Deshabilite la generaci&amp;oacute;n de informaci&amp;oacute;n sobre cada clase con funciones virtuales para su uso por las caracter&amp;iacute;sticas de identificaci&amp;oacute;n de tipo en tiempo de ejecuci&amp;oacute;n de C ++ ( &lt;code&gt;dynamic_cast&lt;/code&gt; y &lt;code&gt;typeid&lt;/code&gt; ). Si no usa esas partes del idioma, puede ahorrar algo de espacio usando esta bandera. Tenga en cuenta que el manejo de excepciones utiliza la misma informaci&amp;oacute;n, pero G ++ la genera seg&amp;uacute;n sea necesario. El operador &lt;code&gt;dynamic_cast&lt;/code&gt; todav&amp;iacute;a se puede usar para conversiones que no requieren informaci&amp;oacute;n de tipo de tiempo de ejecuci&amp;oacute;n, es decir, conversiones a &lt;code&gt;void *&lt;/code&gt; o a clases base inequ&amp;iacute;vocas.</target>
        </trans-unit>
        <trans-unit id="2c5d893b2d5daa4c819c5a8197085e49914249d8" translate="yes" xml:space="preserve">
          <source>Disable global interrupt.</source>
          <target state="translated">Deshabilitar la interrupción global.</target>
        </trans-unit>
        <trans-unit id="5c285b2217d4516708f07171dfd66ed9be6d9834" translate="yes" xml:space="preserve">
          <source>Disable instruction scheduling across basic blocks, which is normally enabled when scheduling before register allocation, i.e. with</source>
          <target state="translated">Deshabilitar la programación de instrucciones a través de bloques básicos,que normalmente se habilita cuando se programa antes de la asignación de registros,es decir,con</target>
        </trans-unit>
        <trans-unit id="0e98c6ae6e073a4473bf45d5938dfbe138a13b1c" translate="yes" xml:space="preserve">
          <source>Disable interprocedural optimizations between the function with this attribute and its callers, as if the body of the function is not available when optimizing callers and the callers are unavailable when optimizing the body. This attribute implies &lt;code&gt;noinline&lt;/code&gt;, &lt;code&gt;noclone&lt;/code&gt; and &lt;code&gt;no_icf&lt;/code&gt; attributes. However, this attribute is not equivalent to a combination of other attributes, because its purpose is to suppress existing and future optimizations employing interprocedural analysis, including those that do not have an attribute suitable for disabling them individually. This attribute is supported mainly for the purpose of testing the compiler.</source>
          <target state="translated">Deshabilite las optimizaciones entre procedimientos entre la funci&amp;oacute;n con este atributo y sus llamadores, como si el cuerpo de la funci&amp;oacute;n no estuviera disponible al optimizar los llamantes y los llamadores no estuvieran disponibles al optimizar el cuerpo. Este atributo implica atributos &lt;code&gt;noinline&lt;/code&gt; , &lt;code&gt;noclone&lt;/code&gt; y &lt;code&gt;no_icf&lt;/code&gt; . Sin embargo, este atributo no es equivalente a una combinaci&amp;oacute;n de otros atributos, porque su prop&amp;oacute;sito es suprimir las optimizaciones existentes y futuras empleando an&amp;aacute;lisis interprocedimiento, incluyendo aquellas que no tienen un atributo adecuado para deshabilitarlas individualmente. Este atributo es compatible principalmente con el prop&amp;oacute;sito de probar el compilador.</target>
        </trans-unit>
        <trans-unit id="c37151a8e5f5341e877c6066a7b31e954ab243b6" translate="yes" xml:space="preserve">
          <source>Disable lazy binding of function calls. This option is the default and is defined for compatibility with Diab.</source>
          <target state="translated">Deshabilitar la vinculación perezosa de las llamadas de función.Esta opción es la predeterminada y está definida para la compatibilidad con Diab.</target>
        </trans-unit>
        <trans-unit id="79f399771b0bd71907b7340d736452ada0291344" translate="yes" xml:space="preserve">
          <source>Disable linking effects of</source>
          <target state="translated">Desactivar los efectos de vinculación de</target>
        </trans-unit>
        <trans-unit id="609817ad0deecdec8c6b793819e36a0c5e4631a2" translate="yes" xml:space="preserve">
          <source>Disable nested conditional execution optimizations.</source>
          <target state="translated">Deshabilitar las optimizaciones de ejecución condicional anidadas.</target>
        </trans-unit>
        <trans-unit id="252fe391b1a4b9d960215788262ee75bfd6c19f6" translate="yes" xml:space="preserve">
          <source>Disable optimization of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; in conditional execution.</source>
          <target state="translated">Desactive la optimizaci&amp;oacute;n de &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; en ejecuci&amp;oacute;n condicional.</target>
        </trans-unit>
        <trans-unit id="161926f247c9f892e24d049743fa9253ac876603" translate="yes" xml:space="preserve">
          <source>Disable sharing of stack slots allocated for pseudo-registers. Each pseudo-register that does not get a hard register gets a separate stack slot, and as a result function stack frames are larger.</source>
          <target state="translated">Deshabilitar el uso compartido de las ranuras de pila asignadas a los pseudo-registros.Cada pseudo-registro que no obtiene un registro duro obtiene una ranura de pila separada,y como resultado los marcos de pila de función son más grandes.</target>
        </trans-unit>
        <trans-unit id="c4a9a68d37ad2c1a1ec5ead44b9d2a2ec4d10976" translate="yes" xml:space="preserve">
          <source>Disable sharing of stack slots used for saving call-used hard registers living through a call. Each hard register gets a separate stack slot, and as a result function stack frames are larger.</source>
          <target state="translated">Deshabilitar el uso compartido de las ranuras de pila utilizadas para guardar los registros duros de llamadas que viven a través de una llamada.Cada registro duro tiene una ranura de pila separada,y como resultado la función de los marcos de pila son más grandes.</target>
        </trans-unit>
        <trans-unit id="64d3adeb52b81d55606f0c9f79019d7885ab8d8f" translate="yes" xml:space="preserve">
          <source>Disable speculative motion of non-load instructions, which is normally enabled when scheduling before register allocation, i.e. with</source>
          <target state="translated">Deshabilitar el movimiento especulativo de las instrucciones de no carga,que normalmente se habilita cuando se programa antes de la asignación de registros,es decir,con</target>
        </trans-unit>
        <trans-unit id="1b9e6a10d7feb88af30d21664dcd930d0d3d0e48" translate="yes" xml:space="preserve">
          <source>Disable the ARCompact-specific pass to generate conditional execution instructions.</source>
          <target state="translated">Deshabilitar el pase específico de ARCompact para generar instrucciones de ejecución condicional.</target>
        </trans-unit>
        <trans-unit id="e7b7d0aa54600e475f975b3ad94c992870425a43" translate="yes" xml:space="preserve">
          <source>Disable the ARM-state integer division extension.</source>
          <target state="translated">Deshabilite la extensión de la división entera del estado del ARM.</target>
        </trans-unit>
        <trans-unit id="9ae205131ae6c1f0b1ad1d6cdc75d88e53999201" translate="yes" xml:space="preserve">
          <source>Disable the Advanced SIMD instructions (does not disable floating point).</source>
          <target state="translated">Deshabilita las instrucciones del SIMD Avanzado (no deshabilita el punto flotante).</target>
        </trans-unit>
        <trans-unit id="57b7e24dd0dd62653de9bd626e4944fa6899e1dd" translate="yes" xml:space="preserve">
          <source>Disable the DSP extension.</source>
          <target state="translated">Deshabilite la extensión DSP.</target>
        </trans-unit>
        <trans-unit id="734f786ab444d8f65fc0c46cdddee12bfda3218d" translate="yes" xml:space="preserve">
          <source>Disable the DSP instructions on &amp;lsquo;</source>
          <target state="translated">Deshabilite las instrucciones de DSP en '</target>
        </trans-unit>
        <trans-unit id="c7d8376c95023cbfb7c660163253089208b34ece" translate="yes" xml:space="preserve">
          <source>Disable the cryptographic extension.</source>
          <target state="translated">Deshabilite la extensión criptográfica.</target>
        </trans-unit>
        <trans-unit id="7f3f13b931ffd3d75ba124cd726692f8712aa12e" translate="yes" xml:space="preserve">
          <source>Disable the cryptographic instructions.</source>
          <target state="translated">Deshabilite las instrucciones criptográficas.</target>
        </trans-unit>
        <trans-unit id="354594897b575026e6476d5a01060d1ccbb17336" translate="yes" xml:space="preserve">
          <source>Disable the diagnostic for converting a bound pointer to member function to a plain pointer.</source>
          <target state="translated">Deshabilitar el diagnóstico para convertir un puntero de la función de miembro en un puntero simple.</target>
        </trans-unit>
        <trans-unit id="c0bf355bf048a8a4bc609b141cbb68d7e3532d66" translate="yes" xml:space="preserve">
          <source>Disable the floating-point and Advanced SIMD instructions.</source>
          <target state="translated">Deshabilitar el punto flotante y las instrucciones del SIMD Avanzado.</target>
        </trans-unit>
        <trans-unit id="f50bf78f4ef90550849e16bf00e7f8fd3e26a980" translate="yes" xml:space="preserve">
          <source>Disable the floating-point extension.</source>
          <target state="translated">Deshabilite la extensión del punto flotante.</target>
        </trans-unit>
        <trans-unit id="04850fd68730a9ccdd397aa31033dbe8ded5b8ec" translate="yes" xml:space="preserve">
          <source>Disable the floating-point extensions.</source>
          <target state="translated">Deshabilite las extensiones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="c08d0916688b59b4478dd3a8a8d551babc61d679" translate="yes" xml:space="preserve">
          <source>Disable the floating-point instructions.</source>
          <target state="translated">Deshabilite las instrucciones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="005c34c6f1c2fb8f1d59d1e3c41e0a0a2122f930" translate="yes" xml:space="preserve">
          <source>Disable the floating-point, Advanced SIMD and cryptographic instructions.</source>
          <target state="translated">Deshabilitar el punto flotante,el SIMD avanzado y las instrucciones criptográficas.</target>
        </trans-unit>
        <trans-unit id="9c28f6f627d67c9bbae1a8f36d817bb71ee86b5b" translate="yes" xml:space="preserve">
          <source>Disable the insertion of cache barriers. This is the default setting.</source>
          <target state="translated">Deshabilitar la inserción de las barreras de caché.Esta es la configuración por defecto.</target>
        </trans-unit>
        <trans-unit id="f56b2447b6cc6f830b2511a8763a44abd8412f42" translate="yes" xml:space="preserve">
          <source>Disable the optimization pass that scans for opportunities to use &amp;ldquo;decrement and branch&amp;rdquo; instructions on a count register instead of instruction sequences that decrement a register, compare it against zero, and then branch based upon the result. This option is only meaningful on architectures that support such instructions, which include x86, PowerPC, IA-64 and S/390. Note that the</source>
          <target state="translated">Deshabilite el paso de optimizaci&amp;oacute;n que busca oportunidades para usar instrucciones de &quot;decremento y bifurcaci&amp;oacute;n&quot; en un registro de conteo en lugar de secuencias de instrucciones que reducen un registro, comp&amp;aacute;relo con cero y luego bifurque seg&amp;uacute;n el resultado. Esta opci&amp;oacute;n solo es significativa en arquitecturas que admiten tales instrucciones, que incluyen x86, PowerPC, IA-64 y S / 390. Tenga en cuenta que el</target>
        </trans-unit>
        <trans-unit id="c15dc65887ffe75f7696788f129ef9f9ee6c4b19" translate="yes" xml:space="preserve">
          <source>Disable the use of conditional execution.</source>
          <target state="translated">Deshabilitar el uso de la ejecución condicional.</target>
        </trans-unit>
        <trans-unit id="47a29a4761de80ec38be8a0cf5e531389fb7bc55" translate="yes" xml:space="preserve">
          <source>Disable the use of conditional set instructions.</source>
          <target state="translated">Deshabilitar el uso de las instrucciones del conjunto condicional.</target>
        </trans-unit>
        <trans-unit id="5cb2b9c6309800d129c0dac9ca4f0d952c4c16ba" translate="yes" xml:space="preserve">
          <source>Disable the use of conditional-move instructions.</source>
          <target state="translated">Deshabilitar el uso de las instrucciones de movimiento condicional.</target>
        </trans-unit>
        <trans-unit id="c4ab5898827402073a5b1c951bd92d3ef7f4f26a" translate="yes" xml:space="preserve">
          <source>Disable the warning about a throw-expression that will immediately result in a call to &lt;code&gt;terminate&lt;/code&gt;.</source>
          <target state="translated">Deshabilite la advertencia sobre una expresi&amp;oacute;n de lanzamiento que resultar&amp;aacute; inmediatamente en una llamada para &lt;code&gt;terminate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e916b556b452967e0dcb5e2d11c70ff45829cad" translate="yes" xml:space="preserve">
          <source>Disable the warning about the case when a conversion function converts an object to the same type, to a base class of that type, or to void; such a conversion function will never be called.</source>
          <target state="translated">Deshabilitar la advertencia sobre el caso en que una función de conversión convierte un objeto al mismo tipo,a una clase base de ese tipo,o al vacío;tal función de conversión nunca será llamada.</target>
        </trans-unit>
        <trans-unit id="97813576f6a1f168ea49d44405f937b0428780d3" translate="yes" xml:space="preserve">
          <source>Disable transformations and optimizations that assume default floating-point rounding behavior. This is round-to-zero for all floating point to integer conversions, and round-to-nearest for all other arithmetic truncations. This option should be specified for programs that change the FP rounding mode dynamically, or that may be executed with a non-default rounding mode. This option disables constant folding of floating-point expressions at compile time (which may be affected by rounding mode) and arithmetic transformations that are unsafe in the presence of sign-dependent rounding modes.</source>
          <target state="translated">Deshabilitar las transformaciones y optimizaciones que asumen un comportamiento de redondeo de punto flotante por defecto.Esto es redondeo a cero para todas las conversiones de punto flotante a entero,y redondeo a casi cero para todos los demás truncamientos aritméticos.Esta opción debe especificarse para los programas que cambian dinámicamente el modo de redondeo de FP,o que pueden ejecutarse con un modo de redondeo no predeterminado.Esta opción desactiva el plegado constante de las expresiones en coma flotante en el momento de la compilación (que pueden verse afectadas por el modo de redondeo)y las transformaciones aritméticas que no son seguras en presencia de modos de redondeo dependientes del signo.</target>
        </trans-unit>
        <trans-unit id="fa652af71b1d233eeae7ac973249eb12d16d530a" translate="yes" xml:space="preserve">
          <source>Disable tree pass &lt;var&gt;pass&lt;/var&gt;. See</source>
          <target state="translated">Desactivar pase &amp;aacute;rbol &lt;var&gt;pass&lt;/var&gt; . Ver</target>
        </trans-unit>
        <trans-unit id="c43ef83976903738f93a9dacec55c01d9094fe2c" translate="yes" xml:space="preserve">
          <source>Disable use of the small data area. Variables are put into one of &lt;code&gt;.data&lt;/code&gt;, &lt;code&gt;.bss&lt;/code&gt;, or &lt;code&gt;.rodata&lt;/code&gt; (unless the &lt;code&gt;section&lt;/code&gt; attribute has been specified). This is the default.</source>
          <target state="translated">Desactive el uso del &amp;aacute;rea de datos peque&amp;ntilde;os. Las variables se colocan en uno de &lt;code&gt;.data&lt;/code&gt; , &lt;code&gt;.bss&lt;/code&gt; o &lt;code&gt;.rodata&lt;/code&gt; (a menos que se haya especificado el atributo de &lt;code&gt;section&lt;/code&gt; ). Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="dd6879ec12c29349f77ab51cc9ef664f2b926a46" translate="yes" xml:space="preserve">
          <source>Disable warnings when non-template friend functions are declared within a template. In very old versions of GCC that predate implementation of the ISO standard, declarations such as &amp;lsquo;</source>
          <target state="translated">Deshabilite las advertencias cuando se declaren funciones de amigos que no sean de plantilla dentro de una plantilla. En versiones muy antiguas de GCC que son anteriores a la implementaci&amp;oacute;n del est&amp;aacute;ndar ISO, declaraciones como '</target>
        </trans-unit>
        <trans-unit id="75de5d4a7b64d839362aa8d626128e23f7764239" translate="yes" xml:space="preserve">
          <source>Disabled at level</source>
          <target state="translated">Incapacitado en el nivel</target>
        </trans-unit>
        <trans-unit id="bf492e44698b816bac566d70d52b5954c19119dd" translate="yes" xml:space="preserve">
          <source>Disabled by default.</source>
          <target state="translated">Desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="aac880794e7e82b2a88791e338313ba16ba15074" translate="yes" xml:space="preserve">
          <source>Disables all the optional instructions enabled by</source>
          <target state="translated">Desactiva todas las instrucciones opcionales habilitadas por</target>
        </trans-unit>
        <trans-unit id="870d995d131280874dc4cc508b91ef24ce1bb25e" translate="yes" xml:space="preserve">
          <source>Disables the SIMD (but not floating-point) instructions on &amp;lsquo;</source>
          <target state="translated">Deshabilita las instrucciones SIMD (pero no de punto flotante) en '</target>
        </trans-unit>
        <trans-unit id="a27996206286cd961e06403639946454e47385b1" translate="yes" xml:space="preserve">
          <source>Disables the double-precision component of the floating-point instructions on &amp;lsquo;</source>
          <target state="translated">Deshabilita el componente de doble precisi&amp;oacute;n de las instrucciones de punto flotante en '</target>
        </trans-unit>
        <trans-unit id="f08047d7bdf26e21f60892f7f2f9f2faee1af25c" translate="yes" xml:space="preserve">
          <source>Disables the floating-point instructions on &amp;lsquo;</source>
          <target state="translated">Deshabilita las instrucciones de punto flotante en '</target>
        </trans-unit>
        <trans-unit id="df9e25965e3555d25ff57722cb18d00af55afb9e" translate="yes" xml:space="preserve">
          <source>Disables warnings about the generation of inefficient code. These warnings can be generated, for example, when compiling code that performs byte-level memory operations on the MAC AE type. The MAC AE has no hardware support for byte-level memory operations, so all byte load/stores must be synthesized from word load/store operations. This is inefficient and a warning is generated to indicate that you should rewrite the code to avoid byte operations, or to target an AE type that has the necessary hardware support. This option disables these warnings.</source>
          <target state="translated">Desactiva las advertencias sobre la generación de código ineficiente.Estas advertencias pueden generarse,por ejemplo,cuando se compila código que realiza operaciones de memoria a nivel de bytes en el tipo MAC AE.El MAC AE no tiene soporte de hardware para operaciones de memoria a nivel de bytes,por lo que toda la carga/almacenamiento de bytes debe ser sintetizada a partir de operaciones de carga/almacenamiento de palabras.Esto es ineficaz y se genera una advertencia para indicar que se debe reescribir el código para evitar las operaciones de bytes,o para dirigirse a un tipo de AE que tenga el soporte de hardware necesario.Esta opción desactiva estas advertencias.</target>
        </trans-unit>
        <trans-unit id="8c83476e13772d4a0c7d47269ca8280ee489e48a" translate="yes" xml:space="preserve">
          <source>Disallow using extensions of later DWARF standard version than selected with</source>
          <target state="translated">No se permite el uso de extensiones de la versión estándar de DWARF posterior a la seleccionada con</target>
        </trans-unit>
        <trans-unit id="48fef3c4f4f198a3fc747aaf4241ba4c8fd572a6" translate="yes" xml:space="preserve">
          <source>Discover read-only, write-only and non-addressable static variables. Enabled by default at</source>
          <target state="translated">Descubra las variables estáticas de sólo lectura,sólo escritura y no direccionables.Habilitadas por defecto en</target>
        </trans-unit>
        <trans-unit id="fcb652ea128e958ac5cce84cb6ef8250a1be8fe4" translate="yes" xml:space="preserve">
          <source>Discover which functions are pure or constant. Enabled by default at</source>
          <target state="translated">Descubre qué funciones son puras o constantes.Habilitado por defecto en</target>
        </trans-unit>
        <trans-unit id="a208f773f4cc31e2ce047d428bfcf70af185cc47" translate="yes" xml:space="preserve">
          <source>Discover which static variables do not escape the compilation unit. Enabled by default at</source>
          <target state="translated">Descubre qué variables estáticas no escapan a la unidad de compilación.Habilitado por defecto en</target>
        </trans-unit>
        <trans-unit id="651cd5d45dfead116269d73c1f57b41b4dbd0dc9" translate="yes" xml:space="preserve">
          <source>Dispatching a call to another function.</source>
          <target state="translated">Enviando una llamada a otra función.</target>
        </trans-unit>
        <trans-unit id="81b470ecff5209cbe640ee9ba4362aba6ca2d2e9" translate="yes" xml:space="preserve">
          <source>Display all of the optimization options supported by the compiler.</source>
          <target state="translated">Mostrar todas las opciones de optimización soportadas por el compilador.</target>
        </trans-unit>
        <trans-unit id="72c8c0bfdf122469f724652953f16cbdb6f10057" translate="yes" xml:space="preserve">
          <source>Display all of the options controlling warning messages produced by the compiler.</source>
          <target state="translated">Mostrar todas las opciones que controlan los mensajes de advertencia producidos por el compilador.</target>
        </trans-unit>
        <trans-unit id="aed462cd18dddfb7255b08046613981f43dcc83d" translate="yes" xml:space="preserve">
          <source>Display demangled function names in output. The default is to show mangled function names.</source>
          <target state="translated">Mostrar los nombres de las funciones desmanteladas en la salida.El valor predeterminado es mostrar los nombres de las funciones desmezcladas.</target>
        </trans-unit>
        <trans-unit id="265008e8627ab28c29c4c783e5dfd9614fe2af35" translate="yes" xml:space="preserve">
          <source>Display help about using &lt;code&gt;gcov-dump&lt;/code&gt; (on the standard output), and exit without doing any further processing.</source>
          <target state="translated">Muestre ayuda sobre el uso de &lt;code&gt;gcov-dump&lt;/code&gt; (en la salida est&amp;aacute;ndar) y salga sin realizar ning&amp;uacute;n procesamiento adicional.</target>
        </trans-unit>
        <trans-unit id="e12fbb96aff9cead22e458e9ec3c8f5e63fa5684" translate="yes" xml:space="preserve">
          <source>Display help about using &lt;code&gt;gcov-tool&lt;/code&gt; (on the standard output), and exit without doing any further processing.</source>
          <target state="translated">Muestre ayuda sobre el uso de &lt;code&gt;gcov-tool&lt;/code&gt; (en la salida est&amp;aacute;ndar) y salga sin realizar ning&amp;uacute;n procesamiento adicional.</target>
        </trans-unit>
        <trans-unit id="c2a32dd6399128ea64f2e8805722cf5f0f40906c" translate="yes" xml:space="preserve">
          <source>Display help about using &lt;code&gt;gcov&lt;/code&gt; (on the standard output), and exit without doing any further processing.</source>
          <target state="translated">Muestre ayuda sobre el uso de &lt;code&gt;gcov&lt;/code&gt; (en la salida est&amp;aacute;ndar) y salga sin realizar ning&amp;uacute;n procesamiento adicional.</target>
        </trans-unit>
        <trans-unit id="05abc5bf9b915eda30e5f0fa5412f4d00c71675a" translate="yes" xml:space="preserve">
          <source>Display only those options that are undocumented.</source>
          <target state="translated">Mostrar sólo las opciones que son indocumentadas.</target>
        </trans-unit>
        <trans-unit id="f03b0f7a546ee49a503453f7975e25ffe065c35f" translate="yes" xml:space="preserve">
          <source>Display options taking an argument that appears after an equal sign in the same continuous piece of text, such as: &amp;lsquo;</source>
          <target state="translated">Mostrar opciones tomando un argumento que aparece despu&amp;eacute;s de un signo igual en el mismo texto continuo, como: '</target>
        </trans-unit>
        <trans-unit id="78dd198d091922fefb8d713c3d97e47984a683e2" translate="yes" xml:space="preserve">
          <source>Display options taking an argument that appears as a separate word following the original option, such as: &amp;lsquo;</source>
          <target state="translated">Mostrar opciones tomando un argumento que aparece como una palabra separada despu&amp;eacute;s de la opci&amp;oacute;n original, como: '</target>
        </trans-unit>
        <trans-unit id="3034576017d5b01854a8c0bd7d19d6bd34b0118e" translate="yes" xml:space="preserve">
          <source>Display target-specific options. Unlike the</source>
          <target state="translated">Mostrar las opciones específicas del objetivo.A diferencia de la</target>
        </trans-unit>
        <trans-unit id="344037446b18226df15907aaf4b6b36a2c93c89d" translate="yes" xml:space="preserve">
          <source>Display the &lt;code&gt;gcov-dump&lt;/code&gt; version number (on the standard output), and exit without doing any further processing.</source>
          <target state="translated">Muestre el n&amp;uacute;mero de versi&amp;oacute;n de &lt;code&gt;gcov-dump&lt;/code&gt; (en la salida est&amp;aacute;ndar) y salga sin realizar ning&amp;uacute;n procesamiento adicional.</target>
        </trans-unit>
        <trans-unit id="35cc61bd60aed0586a7ab81a239eee8b50af7443" translate="yes" xml:space="preserve">
          <source>Display the &lt;code&gt;gcov-tool&lt;/code&gt; version number (on the standard output), and exit without doing any further processing.</source>
          <target state="translated">Muestre el n&amp;uacute;mero de versi&amp;oacute;n de &lt;code&gt;gcov-tool&lt;/code&gt; (en la salida est&amp;aacute;ndar) y salga sin realizar ning&amp;uacute;n procesamiento adicional.</target>
        </trans-unit>
        <trans-unit id="b6e074d4004bd50fbdfdcf5bba3331e5f56c291a" translate="yes" xml:space="preserve">
          <source>Display the &lt;code&gt;gcov&lt;/code&gt; version number (on the standard output), and exit without doing any further processing.</source>
          <target state="translated">Muestre el n&amp;uacute;mero de versi&amp;oacute;n de &lt;code&gt;gcov&lt;/code&gt; (en la salida est&amp;aacute;ndar) y salga sin realizar ning&amp;uacute;n procesamiento adicional.</target>
        </trans-unit>
        <trans-unit id="e1dab73554637fba73ebd51cac08053a6ac2d5d1" translate="yes" xml:space="preserve">
          <source>Display the dump tool help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef9fe7c4ae3fd66d0616ac76fb1a92ba4cf451e" translate="yes" xml:space="preserve">
          <source>Display the options supported for &lt;var&gt;language&lt;/var&gt;, where &lt;var&gt;language&lt;/var&gt; is the name of one of the languages supported in this version of GCC.</source>
          <target state="translated">Muestra las opciones admitidas para el &lt;var&gt;language&lt;/var&gt; , donde &lt;var&gt;language&lt;/var&gt; es el nombre de uno de los idiomas admitidos en esta versi&amp;oacute;n de GCC.</target>
        </trans-unit>
        <trans-unit id="ecaf3dad0e5ad7c6fd0a0b9f49a9e6fe224ab8c8" translate="yes" xml:space="preserve">
          <source>Display the options supported for &lt;var&gt;language&lt;/var&gt;, where &lt;var&gt;language&lt;/var&gt; is the name of one of the languages supported in this version of GCC. If an option is supported by all languages, one needs to select &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab2c82abfc8159be6e9fa8d50b69489311c099e" translate="yes" xml:space="preserve">
          <source>Display the options that are common to all languages.</source>
          <target state="translated">Mostrar las opciones que son comunes a todos los idiomas.</target>
        </trans-unit>
        <trans-unit id="0ec31abb5e51897ba8130f63f01229988bd5728b" translate="yes" xml:space="preserve">
          <source>Display the progress on the standard output.</source>
          <target state="translated">Muestra el progreso en la salida estándar.</target>
        </trans-unit>
        <trans-unit id="6dbb61eb69b04350133e621d0c73b06d5ccc9c5b" translate="yes" xml:space="preserve">
          <source>Display the values recognized by the</source>
          <target state="translated">Mostrar los valores reconocidos por la</target>
        </trans-unit>
        <trans-unit id="34d093aadfdac161b403733078a63e69c40898c6" translate="yes" xml:space="preserve">
          <source>Display the version number and copyrights of the invoked GCC.</source>
          <target state="translated">Mostrar el número de versión y los derechos de autor del GCC invocado.</target>
        </trans-unit>
        <trans-unit id="26dfbbd6de78ea5ea887b6576aa7df3d1cced839" translate="yes" xml:space="preserve">
          <source>Disregard strict standards compliance.</source>
          <target state="translated">Ignorar el estricto cumplimiento de las normas.</target>
        </trans-unit>
        <trans-unit id="810ca5fb4bf9b88327a090dfa7228390b8a8933b" translate="yes" xml:space="preserve">
          <source>Distances are measured from the beginning of functions when using the</source>
          <target state="translated">Las distancias se miden desde el principio de las funciones cuando se utiliza el</target>
        </trans-unit>
        <trans-unit id="700c5d1f81b1eabfd1898baf4899894e603c6ec2" translate="yes" xml:space="preserve">
          <source>Distinguish between prefix and postfix forms of increment and decrement operators.</source>
          <target state="translated">Distinguir entre las formas prefijadas y postfijadas de los operadores de incremento y decremento.</target>
        </trans-unit>
        <trans-unit id="15d45d388da758d77a316f2815f529d6f4aa8a47" translate="yes" xml:space="preserve">
          <source>Do (don&amp;rsquo;t) generate code that uses the fused multiply/add or multiply/subtract instructions. The default is to use these instructions.</source>
          <target state="translated">No genere (no) c&amp;oacute;digo que utilice las instrucciones fusionadas de multiplicar / sumar o multiplicar / restar. El valor predeterminado es utilizar estas instrucciones.</target>
        </trans-unit>
        <trans-unit id="fa3eae74d7b2c9843e7a1a146ef2fdd2dc03d4df" translate="yes" xml:space="preserve">
          <source>Do alignment optimizations for call instructions.</source>
          <target state="translated">Haga optimizaciones de alineación para las instrucciones de llamada.</target>
        </trans-unit>
        <trans-unit id="66402eadff3f8314991b18d5e3fc15f2b633b72a" translate="yes" xml:space="preserve">
          <source>Do not (do) assume that unaligned memory references are handled by the system.</source>
          <target state="translated">No (haga)asumir que las referencias de memoria no alineadas son manejadas por el sistema.</target>
        </trans-unit>
        <trans-unit id="54f30aa11a7322472ca655cc5794b473a6db2cb4" translate="yes" xml:space="preserve">
          <source>Do not affect the &lt;code&gt;long_call&lt;/code&gt; or &lt;code&gt;short_call&lt;/code&gt; attributes of subsequent functions.</source>
          <target state="translated">No afecte los &lt;code&gt;long_call&lt;/code&gt; o &lt;code&gt;short_call&lt;/code&gt; de funciones posteriores.</target>
        </trans-unit>
        <trans-unit id="1d4def84337c056fee739188d13fda579c041fe7" translate="yes" xml:space="preserve">
          <source>Do not align the destination of inlined string operations. This switch reduces code size and improves performance in case the destination is already aligned, but GCC doesn&amp;rsquo;t know about it.</source>
          <target state="translated">No alinee el destino de las operaciones de cadena en l&amp;iacute;nea. Este conmutador reduce el tama&amp;ntilde;o del c&amp;oacute;digo y mejora el rendimiento en caso de que el destino ya est&amp;eacute; alineado, pero GCC no lo sabe.</target>
        </trans-unit>
        <trans-unit id="0de4bbafb6a75d9a2bf9d1dffc4ce55c0685a9e6" translate="yes" xml:space="preserve">
          <source>Do not allow constant data to be placed in code sections. Additionally, when compiling for ELF object format give all text sections the ELF processor-specific section attribute &lt;code&gt;SHF_ARM_PURECODE&lt;/code&gt;. This option is only available when generating non-pic code for M-profile targets with the MOVT instruction.</source>
          <target state="translated">No permita que se coloquen datos constantes en secciones de c&amp;oacute;digo. Adem&amp;aacute;s, al compilar para el formato de objeto ELF, &lt;code&gt;SHF_ARM_PURECODE&lt;/code&gt; todas las secciones de texto el atributo de secci&amp;oacute;n espec&amp;iacute;fico del procesador ELF SHF_ARM_PURECODE . Esta opci&amp;oacute;n solo est&amp;aacute; disponible cuando se genera un c&amp;oacute;digo que no es de imagen para objetivos de perfil M con la instrucci&amp;oacute;n MOVT.</target>
        </trans-unit>
        <trans-unit id="78254c6c406c6c1d161d9cea04f2b296c2dea358" translate="yes" xml:space="preserve">
          <source>Do not allow constant data to be placed in code sections. Additionally, when compiling for ELF object format give all text sections the ELF processor-specific section attribute &lt;code&gt;SHF_ARM_PURECODE&lt;/code&gt;. This option is only available when generating non-pic code for M-profile targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d843db312bcca2cdf09a7f1fe7ee427392d62fac" translate="yes" xml:space="preserve">
          <source>Do not allow the built-in functions &lt;code&gt;ceil&lt;/code&gt;, &lt;code&gt;floor&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt; and &lt;code&gt;trunc&lt;/code&gt;, and their &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;long
double&lt;/code&gt; variants, to generate code that raises the &amp;ldquo;inexact&amp;rdquo; floating-point exception for noninteger arguments. ISO C99 and C11 allow these functions to raise the &amp;ldquo;inexact&amp;rdquo; exception, but ISO/IEC TS 18661-1:2014, the C bindings to IEEE 754-2008, as integrated into ISO C2X, does not allow these functions to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d8305d540b6aba4d4042404329e432ca465541" translate="yes" xml:space="preserve">
          <source>Do not allow the built-in functions &lt;code&gt;ceil&lt;/code&gt;, &lt;code&gt;floor&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt; and &lt;code&gt;trunc&lt;/code&gt;, and their &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;long
double&lt;/code&gt; variants, to generate code that raises the &amp;ldquo;inexact&amp;rdquo; floating-point exception for noninteger arguments. ISO C99 and C11 allow these functions to raise the &amp;ldquo;inexact&amp;rdquo; exception, but ISO/IEC TS 18661-1:2014, the C bindings to IEEE 754-2008, does not allow these functions to do so.</source>
          <target state="translated">No permita que las funciones incorporadas &lt;code&gt;ceil&lt;/code&gt; , &lt;code&gt;floor&lt;/code&gt; , &lt;code&gt;round&lt;/code&gt; y &lt;code&gt;trunc&lt;/code&gt; , y sus variantes &lt;code&gt;float&lt;/code&gt; y &lt;code&gt;long double&lt;/code&gt; , generen c&amp;oacute;digo que genere la excepci&amp;oacute;n de punto flotante &amp;ldquo;inexacto&amp;rdquo; para argumentos que no sean enteros. ISO C99 y C11 permiten que estas funciones generen la excepci&amp;oacute;n &quot;inexacta&quot;, pero ISO / IEC TS 18661-1: 2014, las vinculaciones C a IEEE 754-2008, no permiten que estas funciones lo hagan.</target>
        </trans-unit>
        <trans-unit id="f3ff2c5279a75029bc339b07e7530899c9302db8" translate="yes" xml:space="preserve">
          <source>Do not allow the compiler to generate &lt;em&gt;Long Instruction Word&lt;/em&gt; instructions. This option defines the preprocessor macro &lt;code&gt;__NO_LIW__&lt;/code&gt;.</source>
          <target state="translated">No permita que el compilador genere &lt;em&gt;instrucciones Long Instruction Word&lt;/em&gt; . Esta opci&amp;oacute;n define la macro del preprocesador &lt;code&gt;__NO_LIW__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="308fe4eb96a98c640686f8d44a99dca853e4e2bc" translate="yes" xml:space="preserve">
          <source>Do not allow the compiler to generate &lt;em&gt;SETLB&lt;/em&gt; or &lt;em&gt;Lcc&lt;/em&gt; instructions. This option defines the preprocessor macro &lt;code&gt;__NO_SETLB__&lt;/code&gt;.</source>
          <target state="translated">No permita que el compilador genere instrucciones &lt;em&gt;SETLB&lt;/em&gt; o &lt;em&gt;Lcc&lt;/em&gt; . Esta opci&amp;oacute;n define la macro del preprocesador &lt;code&gt;__NO_SETLB__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c30c06515f3c7a9db38f03e0071054e61d0d6bea" translate="yes" xml:space="preserve">
          <source>Do not apply the &lt;code&gt;longcall&lt;/code&gt; attribute to subsequent function declarations.</source>
          <target state="translated">No aplique el atributo &lt;code&gt;longcall&lt;/code&gt; a declaraciones de funciones posteriores.</target>
        </trans-unit>
        <trans-unit id="6c726465b100e603972419cccdc343f480a4a19b" translate="yes" xml:space="preserve">
          <source>Do not assume a large TLS segment when generating thread-local code.</source>
          <target state="translated">No asuma un gran segmento TLS al generar el código local del hilo.</target>
        </trans-unit>
        <trans-unit id="728fc451cc179eebcc18f5c6344c5c0c36dd581d" translate="yes" xml:space="preserve">
          <source>Do not assume that registers saved by the calling function are restored before calling the &lt;code&gt;noreturn&lt;/code&gt; function.</source>
          <target state="translated">No asuma que los registros guardados por la funci&amp;oacute;n de llamada se restauran antes de llamar a la funci&amp;oacute;n &lt;code&gt;noreturn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e33e43a1033f382fce00f6b8091a2ad6b0b4e974" translate="yes" xml:space="preserve">
          <source>Do not assume that the code being compiled won&amp;rsquo;t link against any ID shared libraries. Slower code is generated for jump and call insns.</source>
          <target state="translated">No asuma que el c&amp;oacute;digo que se est&amp;aacute; compilando no se vincular&amp;aacute; con ninguna biblioteca compartida de ID. Se genera un c&amp;oacute;digo m&amp;aacute;s lento para las entradas de salto y llamadas.</target>
        </trans-unit>
        <trans-unit id="91704a7cde69df99e26557a8fcaceedc0c021417" translate="yes" xml:space="preserve">
          <source>Do not assume the width of floating-point registers.</source>
          <target state="translated">No asuma el ancho de los registros de punto flotante.</target>
        </trans-unit>
        <trans-unit id="56a17068976fe756a1e89e46ec309c06e7526fbb" translate="yes" xml:space="preserve">
          <source>Do not attempt to schedule the preceding instruction into the delay slot of a branch instruction placed at the end of a short loop of six instructions or fewer and always schedule a &lt;code&gt;nop&lt;/code&gt; instruction there instead. The short loop bug under certain conditions causes loops to execute only once or twice, due to a hardware bug in the R5900 chip. The workaround is implemented by the assembler rather than by GCC.</source>
          <target state="translated">No intente programar la instrucci&amp;oacute;n anterior en el intervalo de retardo de una instrucci&amp;oacute;n de bifurcaci&amp;oacute;n ubicada al final de un ciclo corto de seis instrucciones o menos y siempre programe una instrucci&amp;oacute;n &lt;code&gt;nop&lt;/code&gt; all&amp;iacute;. El error de bucle corto en determinadas condiciones hace que los bucles se ejecuten solo una o dos veces, debido a un error de hardware en el chip R5900. La soluci&amp;oacute;n alternativa la implementa el ensamblador en lugar de GCC.</target>
        </trans-unit>
        <trans-unit id="d2be752bd5c8aabe79c7a8b900f158b404d70833" translate="yes" xml:space="preserve">
          <source>Do not consider type &lt;code&gt;int&lt;/code&gt; to be 16 bits wide. This is the default.</source>
          <target state="translated">No considere que el tipo &lt;code&gt;int&lt;/code&gt; tenga 16 bits de ancho. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="08c20a0490ee73056523e456a376bd15da68e3f1" translate="yes" xml:space="preserve">
          <source>Do not create the &lt;code&gt;gcov&lt;/code&gt; output file.</source>
          <target state="translated">No cree el archivo de salida &lt;code&gt;gcov&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61bd4083e901aa03be2fec075c5a07232b9c93d4" translate="yes" xml:space="preserve">
          <source>Do not discard comments, including during macro expansion. This is like</source>
          <target state="translated">No descarte los comentarios,incluso durante la macroexpansión.Esto es como</target>
        </trans-unit>
        <trans-unit id="094e1651c852304b7a16e16ed4d0185ecd59b26b" translate="yes" xml:space="preserve">
          <source>Do not discard comments. All comments are passed through to the output file, except for comments in processed directives, which are deleted along with the directive.</source>
          <target state="translated">No descarte los comentarios.Todos los comentarios se pasan al archivo de salida,excepto los comentarios de las directivas procesadas,que se eliminan junto con la directiva.</target>
        </trans-unit>
        <trans-unit id="91b2c99fa330a126f06708c6cdfa9c96a1c2ca48" translate="yes" xml:space="preserve">
          <source>Do not emit instructions with side effects in addressing modes other than post-increment.</source>
          <target state="translated">No emita instrucciones con efectos secundarios en modos de dirección que no sean post-incremento.</target>
        </trans-unit>
        <trans-unit id="8e8fcc0f33555f7707b3fe0e2c86d30a856ae4de" translate="yes" xml:space="preserve">
          <source>Do not emit the extra code to use the routines specified in the C++ ABI for thread-safe initialization of local statics. You can use this option to reduce code size slightly in code that doesn&amp;rsquo;t need to be thread-safe.</source>
          <target state="translated">No emita el c&amp;oacute;digo adicional para usar las rutinas especificadas en la ABI de C ++ para la inicializaci&amp;oacute;n segura de subprocesos de est&amp;aacute;tica local. Puede usar esta opci&amp;oacute;n para reducir ligeramente el tama&amp;ntilde;o del c&amp;oacute;digo en el c&amp;oacute;digo que no necesita ser seguro para subprocesos.</target>
        </trans-unit>
        <trans-unit id="a50320f9ab85e604d11edb3fea826b2a1de37844" translate="yes" xml:space="preserve">
          <source>Do not enforce a 32-byte alignment for loops. This is the default.</source>
          <target state="translated">No imponga una alineación de 32 bytes para los bucles.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="891fab210e7a9b122822bf86387a01881f014d38" translate="yes" xml:space="preserve">
          <source>Do not expand any functions inline apart from those marked with the &lt;code&gt;always_inline&lt;/code&gt; attribute. This is the default when not optimizing.</source>
          <target state="translated">No expanda ninguna funci&amp;oacute;n en l&amp;iacute;nea aparte de las marcadas con el atributo &lt;code&gt;always_inline&lt;/code&gt; . Este es el valor predeterminado cuando no se optimiza.</target>
        </trans-unit>
        <trans-unit id="e55929ae438e9efde315189f7933071caa5c75d9" translate="yes" xml:space="preserve">
          <source>Do not expand any symbolic links, resolve references to &amp;lsquo;</source>
          <target state="translated">No expanda ning&amp;uacute;n enlace simb&amp;oacute;lico, resuelva las referencias a '</target>
        </trans-unit>
        <trans-unit id="76bc4e801782e79c379029a2b2d98ead9b1c58f2" translate="yes" xml:space="preserve">
          <source>Do not expect a sequence of &lt;code&gt;asm&lt;/code&gt; statements to remain perfectly consecutive after compilation, even when you are using the &lt;code&gt;volatile&lt;/code&gt; qualifier. If certain instructions need to remain consecutive in the output, put them in a single multi-instruction &lt;code&gt;asm&lt;/code&gt; statement.</source>
          <target state="translated">No espere que una secuencia de declaraciones &lt;code&gt;asm&lt;/code&gt; permanezca perfectamente consecutiva despu&amp;eacute;s de la compilaci&amp;oacute;n, incluso cuando est&amp;eacute; utilizando el calificador &lt;code&gt;volatile&lt;/code&gt; . Si ciertas instrucciones deben permanecer consecutivas en la salida, col&amp;oacute;quelas en una sola instrucci&amp;oacute;n &lt;code&gt;asm&lt;/code&gt; de m&amp;uacute;ltiples instrucciones .</target>
        </trans-unit>
        <trans-unit id="1357d76978b996f4f01f805d2256a79e656aef14" translate="yes" xml:space="preserve">
          <source>Do not expect a sequence of &lt;code&gt;asm&lt;/code&gt; statements to remain perfectly consecutive after compilation. If certain instructions need to remain consecutive in the output, put them in a single multi-instruction &lt;code&gt;asm&lt;/code&gt; statement. Note that GCC&amp;rsquo;s optimizers can move &lt;code&gt;asm&lt;/code&gt; statements relative to other code, including across jumps.</source>
          <target state="translated">No espere que una secuencia de declaraciones &lt;code&gt;asm&lt;/code&gt; permanezca perfectamente consecutiva despu&amp;eacute;s de la compilaci&amp;oacute;n. Si ciertas instrucciones deben permanecer consecutivas en la salida, col&amp;oacute;quelas en una sola instrucci&amp;oacute;n &lt;code&gt;asm&lt;/code&gt; de m&amp;uacute;ltiples instrucciones . Tenga en cuenta que los optimizadores de GCC pueden mover declaraciones &lt;code&gt;asm&lt;/code&gt; relaci&amp;oacute;n con otro c&amp;oacute;digo, incluso entre saltos.</target>
        </trans-unit>
        <trans-unit id="84b3d7d09c0c54d717842f06c98dbd62ec42f930" translate="yes" xml:space="preserve">
          <source>Do not generate 16-bit instructions.</source>
          <target state="translated">No generen instrucciones de 16 bits.</target>
        </trans-unit>
        <trans-unit id="ad6e921329e0de0a14badc58726b2429a811f03b" translate="yes" xml:space="preserve">
          <source>Do not generate &lt;code&gt;mpy&lt;/code&gt;-family instructions for ARC700. This option is deprecated.</source>
          <target state="translated">No genere instrucciones &lt;code&gt;mpy&lt;/code&gt; -family para ARC700. Esta opci&amp;oacute;n est&amp;aacute; obsoleta.</target>
        </trans-unit>
        <trans-unit id="677bb296fc46c470e0c30284fe52bf50c8bf95e0" translate="yes" xml:space="preserve">
          <source>Do not generate GP-relative accesses.</source>
          <target state="translated">No generen accesos relacionados con el GP.</target>
        </trans-unit>
        <trans-unit id="f71d5f68821b30e885b1156b06fcb682f984e58f" translate="yes" xml:space="preserve">
          <source>Do not generate code that can only run in supervisor mode. This is relevant only for the &lt;code&gt;casa&lt;/code&gt; instruction emitted for the LEON3 processor. This is the default.</source>
          <target state="translated">No genere c&amp;oacute;digo que solo pueda ejecutarse en modo supervisor. Esto es relevante solo para la instrucci&amp;oacute;n &lt;code&gt;casa&lt;/code&gt; emitida para el procesador LEON3. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="0295c6ec8a8e0c073456a9cdaa9ef67d389ca72d" translate="yes" xml:space="preserve">
          <source>Do not generate code that reads program memory.</source>
          <target state="translated">No genere un código que lea la memoria del programa.</target>
        </trans-unit>
        <trans-unit id="2a55e3aa2938e0b388b8a2f34ed44323717c2975" translate="yes" xml:space="preserve">
          <source>Do not generate code to avoid bugs in the multiply instructions for the MN10300 processors.</source>
          <target state="translated">No generen código para evitar errores en las instrucciones de multiplicación para los procesadores MN10300.</target>
        </trans-unit>
        <trans-unit id="6775dd83d160f5e2159511baea19387bf2da721f" translate="yes" xml:space="preserve">
          <source>Do not generate code using features specific to the AM33 processor. This is the default.</source>
          <target state="translated">No generen código usando las características específicas del procesador AM33.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="159947dfd1a4fc3fd4fb823f295379e5ec4d1e29" translate="yes" xml:space="preserve">
          <source>Do not generate conditional move instructions.</source>
          <target state="translated">No genere instrucciones de movimiento condicionales.</target>
        </trans-unit>
        <trans-unit id="2a7c63697c44693e6c631b03a4bcdf4c623d8e94" translate="yes" xml:space="preserve">
          <source>Do not generate floating-point instructions; use library calls instead. This is the default for 68000, 68010, and 68832 targets. It is also the default for ColdFire devices that have no FPU.</source>
          <target state="translated">No genere instrucciones de punto flotante;utilice en su lugar las llamadas de la biblioteca.Este es el valor por defecto para los objetivos 68000,68010 y 68832.También es el valor por defecto para los dispositivos ColdFire que no tienen FPU.</target>
        </trans-unit>
        <trans-unit id="2cc223b18a9c8fe85db4c5fdd1a4568ac5523351" translate="yes" xml:space="preserve">
          <source>Do not generate inline code for &lt;code&gt;sqrt&lt;/code&gt;.</source>
          <target state="translated">No genere c&amp;oacute;digo en l&amp;iacute;nea para &lt;code&gt;sqrt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dccee88899cb101fdf1122d7b6f87cc5ad98128" translate="yes" xml:space="preserve">
          <source>Do not generate inline code for divides of floating-point values.</source>
          <target state="translated">No genere código en línea para las divisiones de los valores de punto flotante.</target>
        </trans-unit>
        <trans-unit id="db0d6f198e71d6a0581c6b52ba5d158f3703dad4" translate="yes" xml:space="preserve">
          <source>Do not generate inline code for divides of integer values.</source>
          <target state="translated">No genere código inline para dividir los valores enteros.</target>
        </trans-unit>
        <trans-unit id="5bf145c70d37b823fa320934be3a45f2f5b58879" translate="yes" xml:space="preserve">
          <source>Do not generate performance extension 2 instructions.</source>
          <target state="translated">No genere las instrucciones de la extensión de rendimiento 2.</target>
        </trans-unit>
        <trans-unit id="3b1b47a62d265ff0109bc6fe295c353c7dfbd942" translate="yes" xml:space="preserve">
          <source>Do not generate performance extension instructions.</source>
          <target state="translated">No genere instrucciones de extensión del rendimiento.</target>
        </trans-unit>
        <trans-unit id="b028375dbf2397374ef15ae6807634be0bef9937" translate="yes" xml:space="preserve">
          <source>Do not generate sdata references. This is the default for tool chains built for &lt;code&gt;arc-linux-uclibc&lt;/code&gt; and &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; targets.</source>
          <target state="translated">No genere referencias sdata. Este es el valor predeterminado para las cadenas de herramientas creadas para objetivos &lt;code&gt;arc-linux-uclibc&lt;/code&gt; y &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="543afe0ee34f2553275fc1e0d4f92ae4d031e11e" translate="yes" xml:space="preserve">
          <source>Do not generate string extension instructions.</source>
          <target state="translated">No genere instrucciones de extensión de la cadena.</target>
        </trans-unit>
        <trans-unit id="35172dff465f7db05c87cd9d0fa618a5943366ff" translate="yes" xml:space="preserve">
          <source>Do not generate v3 push25/pop25 instructions.</source>
          <target state="translated">No generen instrucciones v3 push25/pop25.</target>
        </trans-unit>
        <trans-unit id="57a412ef71d36d080e33196062eae1a348ffd9a5" translate="yes" xml:space="preserve">
          <source>Do not guess branch probabilities using heuristics.</source>
          <target state="translated">No adivine las probabilidades de la rama usando la heurística.</target>
        </trans-unit>
        <trans-unit id="c3b0780d488de79c8fb5609252ace9e026b5485c" translate="yes" xml:space="preserve">
          <source>Do not link in the C run-time initialization object file.</source>
          <target state="translated">No enlazar en el archivo de objetos de inicialización en tiempo de ejecución de C.</target>
        </trans-unit>
        <trans-unit id="1be7375d07ff18651b91e6f0b8f72660024d9706" translate="yes" xml:space="preserve">
          <source>Do not mark ABI switches in e_flags.</source>
          <target state="translated">No marque los interruptores ABI en e_flags.</target>
        </trans-unit>
        <trans-unit id="431d0ac813eff431a021eadf038696c3b8c0a701" translate="yes" xml:space="preserve">
          <source>Do not optimize (do optimize) basic blocks that use the same index pointer 4 or more times to copy pointer into the &lt;code&gt;ep&lt;/code&gt; register, and use the shorter &lt;code&gt;sld&lt;/code&gt; and &lt;code&gt;sst&lt;/code&gt; instructions. The</source>
          <target state="translated">No optimice (optimice) los bloques b&amp;aacute;sicos que usan el mismo puntero de &amp;iacute;ndice 4 o m&amp;aacute;s veces para copiar el puntero en el registro &lt;code&gt;ep&lt;/code&gt; , y use las instrucciones &lt;code&gt;sld&lt;/code&gt; y &lt;code&gt;sst&lt;/code&gt; m&amp;aacute;s cortas . los</target>
        </trans-unit>
        <trans-unit id="79c5f07fbe7818d1561eea80118156e770e03da3" translate="yes" xml:space="preserve">
          <source>Do not optimize block moves, use &lt;code&gt;memcpy&lt;/code&gt;.</source>
          <target state="translated">No optimice los movimientos de bloque, use &lt;code&gt;memcpy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c81bdb6603f6660bfebcf5b1c10715d6960adf2" translate="yes" xml:space="preserve">
          <source>Do not or do generate unaligned memory accesses. The default is set depending on whether the processor we are optimizing for supports fast unaligned access or not.</source>
          <target state="translated">No generen o generen accesos de memoria no alineados.El valor predeterminado se establece dependiendo de si el procesador que estamos optimizando soporta o no accesos rápidos no alineados.</target>
        </trans-unit>
        <trans-unit id="4a89ae960644f6dae44b3cb05c0d0550f4cbdda0" translate="yes" xml:space="preserve">
          <source>Do not output certain jump instructions (&lt;code&gt;aobleq&lt;/code&gt; and so on) that the Unix assembler for the VAX cannot handle across long ranges.</source>
          <target state="translated">No &lt;code&gt;aobleq&lt;/code&gt; ciertas instrucciones de salto ( aobleq, etc.) que el ensamblador Unix para VAX no pueda manejar en rangos largos.</target>
        </trans-unit>
        <trans-unit id="f8a3ee3da0c5dc6481bc333868effaef20cfecb3" translate="yes" xml:space="preserve">
          <source>Do not pack VLIW instructions.</source>
          <target state="translated">No empaque las instrucciones del VLIW.</target>
        </trans-unit>
        <trans-unit id="5cf0a2e01f314e50aac688fcc0637765ffe183d2" translate="yes" xml:space="preserve">
          <source>Do not predefine any system-specific or GCC-specific macros. The standard predefined macros remain defined.</source>
          <target state="translated">No predefina ningún sistema específico o macros específicos de GCC.Las macros predefinidas estándar siguen estando definidas.</target>
        </trans-unit>
        <trans-unit id="490cb97bfac29c7944f438d394a40917ab27b463" translate="yes" xml:space="preserve">
          <source>Do not print column numbers in diagnostics. This may be necessary if diagnostics are being scanned by a program that does not understand the column numbers, such as &lt;code&gt;dejagnu&lt;/code&gt;.</source>
          <target state="translated">No imprima n&amp;uacute;meros de columna en los diagn&amp;oacute;sticos. Esto puede ser necesario si un programa que no comprende los n&amp;uacute;meros de columna est&amp;aacute; analizando los diagn&amp;oacute;sticos, como &lt;code&gt;dejagnu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a166eec1d3e160d989368c024582f88a817fbe4" translate="yes" xml:space="preserve">
          <source>Do not put function addresses in registers; make each instruction that calls a constant function contain the function&amp;rsquo;s address explicitly.</source>
          <target state="translated">No coloque direcciones de funciones en registros; hacer que cada instrucci&amp;oacute;n que llame a una funci&amp;oacute;n constante contenga la direcci&amp;oacute;n de la funci&amp;oacute;n expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="42d099b873c7985f112edf3c200fc2a3b03ec5d0" translate="yes" xml:space="preserve">
          <source>Do not recognize &lt;code&gt;asm&lt;/code&gt;, &lt;code&gt;inline&lt;/code&gt; or &lt;code&gt;typeof&lt;/code&gt; as a keyword, so that code can use these words as identifiers. You can use the keywords &lt;code&gt;__asm__&lt;/code&gt;, &lt;code&gt;__inline__&lt;/code&gt; and &lt;code&gt;__typeof__&lt;/code&gt; instead.</source>
          <target state="translated">No reconozca &lt;code&gt;asm&lt;/code&gt; , &lt;code&gt;inline&lt;/code&gt; o &lt;code&gt;typeof&lt;/code&gt; como palabra clave, de modo que el c&amp;oacute;digo pueda usar estas palabras como identificadores. En su lugar, puede utilizar las palabras clave &lt;code&gt;__asm__&lt;/code&gt; , &lt;code&gt;__inline__&lt;/code&gt; y &lt;code&gt;__typeof__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4748c7a1ef517bb9ba562d1dfbac2e153a84b556" translate="yes" xml:space="preserve">
          <source>Do not recognize &lt;code&gt;typeof&lt;/code&gt; as a keyword, so that code can use this word as an identifier. You can use the keyword &lt;code&gt;__typeof__&lt;/code&gt; instead. This option is implied by the strict ISO C++ dialects:</source>
          <target state="translated">No reconozca &lt;code&gt;typeof&lt;/code&gt; como palabra clave, por lo que el c&amp;oacute;digo puede utilizar esta palabra como identificador. En su lugar, puede utilizar la palabra clave &lt;code&gt;__typeof__&lt;/code&gt; . Esta opci&amp;oacute;n est&amp;aacute; impl&amp;iacute;cita en los dialectos estrictos de ISO C ++:</target>
        </trans-unit>
        <trans-unit id="d988b2ea918cdfbb994dc84b28dcc9b828621817" translate="yes" xml:space="preserve">
          <source>Do not remove unused C++ allocations in dead code elimination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0184fc6ad01e42f8636e2c8922ca8fae3a1d46de" translate="yes" xml:space="preserve">
          <source>Do not reorder functions or variables marked &lt;code&gt;no_reorder&lt;/code&gt; against each other or top level assembler statements the executable. The actual order in the program will depend on the linker command line. Static variables marked like this are also not removed. This has a similar effect as the</source>
          <target state="translated">No reordene las funciones o variables marcadas como &lt;code&gt;no_reorder&lt;/code&gt; entre s&amp;iacute; o las declaraciones de ensamblador de nivel superior del ejecutable. El orden real en el programa depender&amp;aacute; de la l&amp;iacute;nea de comando del enlazador. Las variables est&amp;aacute;ticas marcadas as&amp;iacute; tampoco se eliminan. Esto tiene un efecto similar al</target>
        </trans-unit>
        <trans-unit id="8ddac79842e7bae2915ad838f14a89d8d6021356" translate="yes" xml:space="preserve">
          <source>Do not reorder top-level functions, variables, and &lt;code&gt;asm&lt;/code&gt; statements. Output them in the same order that they appear in the input file. When this option is used, unreferenced static variables are not removed. This option is intended to support existing code that relies on a particular ordering. For new code, it is better to use attributes when possible.</source>
          <target state="translated">No reordene funciones de nivel superior, variables y declaraciones &lt;code&gt;asm&lt;/code&gt; . Env&amp;iacute;elos en el mismo orden en que aparecen en el archivo de entrada. Cuando se utiliza esta opci&amp;oacute;n, las variables est&amp;aacute;ticas no referenciadas no se eliminan. Esta opci&amp;oacute;n est&amp;aacute; destinada a admitir el c&amp;oacute;digo existente que se basa en un pedido en particular. Para c&amp;oacute;digo nuevo, es mejor usar atributos cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="e09f89632800cad3603644ff83e1a579b7e4eb4f" translate="yes" xml:space="preserve">
          <source>Do not run a pass to pack branches into VLIW instructions.</source>
          <target state="translated">No hagas un pase para empacar ramas en las instrucciones de VLIW.</target>
        </trans-unit>
        <trans-unit id="0dba1f61030583d8ab48fd80d73e6a5afaf9d194" translate="yes" xml:space="preserve">
          <source>Do not save registers in &lt;code&gt;main&lt;/code&gt;. The effect is the same like attaching attribute &lt;a href=&quot;avr-function-attributes#AVR-Function-Attributes&quot;&gt;&lt;code&gt;OS_task&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;main&lt;/code&gt;. It is activated per default if optimization is on.</source>
          <target state="translated">No guarde los registros en &lt;code&gt;main&lt;/code&gt; . El efecto es el mismo que adjuntar el atributo &lt;a href=&quot;avr-function-attributes#AVR-Function-Attributes&quot;&gt; &lt;code&gt;OS_task&lt;/code&gt; &lt;/a&gt; a &lt;code&gt;main&lt;/code&gt; . Est&amp;aacute; activado por defecto si la optimizaci&amp;oacute;n est&amp;aacute; activada.</target>
        </trans-unit>
        <trans-unit id="9b74c0ce30e69827202932531a3c2d31b17cec32" translate="yes" xml:space="preserve">
          <source>Do not search for header files in the C++-specific standard directories, but do still search the other standard directories. (This option is used when building the C++ library.)</source>
          <target state="translated">No busque los archivos de cabecera en los directorios estándar específicos de C++,pero sí en los otros directorios estándar.(Esta opción se utiliza cuando se construye la biblioteca de C++).</target>
        </trans-unit>
        <trans-unit id="10d644d96645c398a65f49953416f8df18eac09b" translate="yes" xml:space="preserve">
          <source>Do not search for header files in the standard directories specific to C++, but do still search the other standard directories. (This option is used when building the C++ library.)</source>
          <target state="translated">No busque los archivos de cabecera en los directorios estándar específicos de C++,pero sí en los otros directorios estándar.(Esta opción se utiliza cuando se construye la biblioteca de C++).</target>
        </trans-unit>
        <trans-unit id="6ee81949a7a2777f7208e1e6ee75bc8ae9472923" translate="yes" xml:space="preserve">
          <source>Do not search the standard system directories for header files. Only the directories explicitly specified with</source>
          <target state="translated">No busque en los directorios estándar del sistema los archivos de cabecera.Sólo los directorios especificados explícitamente con</target>
        </trans-unit>
        <trans-unit id="eb16433a9f72928c54140581a05d1867ea26ccd7" translate="yes" xml:space="preserve">
          <source>Do not set &lt;code&gt;errno&lt;/code&gt; after calling math functions that are executed with a single instruction, e.g., &lt;code&gt;sqrt&lt;/code&gt;. A program that relies on IEEE exceptions for math error handling may want to use this flag for speed while maintaining IEEE arithmetic compatibility.</source>
          <target state="translated">No establezca &lt;code&gt;errno&lt;/code&gt; despu&amp;eacute;s de llamar a funciones matem&amp;aacute;ticas que se ejecutan con una sola instrucci&amp;oacute;n, por ejemplo, &lt;code&gt;sqrt&lt;/code&gt; . Un programa que se basa en las excepciones de IEEE para el manejo de errores matem&amp;aacute;ticos puede querer usar esta marca para la velocidad mientras mantiene la compatibilidad aritm&amp;eacute;tica de IEEE.</target>
        </trans-unit>
        <trans-unit id="20c8d2c68cfa75e481382ec2a217fdac468ae476" translate="yes" xml:space="preserve">
          <source>Do not store floating-point variables in registers, and inhibit other options that might change whether a floating-point value is taken from a register or memory.</source>
          <target state="translated">No almacene las variables de punto flotante en los registros,e inhiba otras opciones que puedan cambiar si un valor de punto flotante se toma de un registro o de la memoria.</target>
        </trans-unit>
        <trans-unit id="1e223b8f5150edab41b25d5219e57c17c3a59917" translate="yes" xml:space="preserve">
          <source>Do not substitute constants for known return value of formatted output functions such as &lt;code&gt;sprintf&lt;/code&gt;, &lt;code&gt;snprintf&lt;/code&gt;, &lt;code&gt;vsprintf&lt;/code&gt;, and &lt;code&gt;vsnprintf&lt;/code&gt; (but not &lt;code&gt;printf&lt;/code&gt; of &lt;code&gt;fprintf&lt;/code&gt;). This transformation allows GCC to optimize or even eliminate branches based on the known return value of these functions called with arguments that are either constant, or whose values are known to be in a range that makes determining the exact return value possible. For example, when</source>
          <target state="translated">No sustituya constantes por valor de retorno conocido de funciones de salida formateadas como &lt;code&gt;sprintf&lt;/code&gt; , &lt;code&gt;snprintf&lt;/code&gt; , &lt;code&gt;vsprintf&lt;/code&gt; y &lt;code&gt;vsnprintf&lt;/code&gt; (pero no &lt;code&gt;printf&lt;/code&gt; de &lt;code&gt;fprintf&lt;/code&gt; ). Esta transformaci&amp;oacute;n permite a GCC optimizar o incluso eliminar ramas en funci&amp;oacute;n del valor de retorno conocido de estas funciones llamadas con argumentos que son constantes o cuyos valores se sabe que est&amp;aacute;n en un rango que hace posible determinar el valor de retorno exacto. Por ejemplo, cuando</target>
        </trans-unit>
        <trans-unit id="cf78eba26b5aa804017da1ef12f012cd3682e1fb" translate="yes" xml:space="preserve">
          <source>Do not treat the operator name keywords &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;bitand&lt;/code&gt;, &lt;code&gt;bitor&lt;/code&gt;, &lt;code&gt;compl&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;xor&lt;/code&gt; as synonyms as keywords.</source>
          <target state="translated">No trate a las palabras clave nombre del operador &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;bitand&lt;/code&gt; , &lt;code&gt;bitor&lt;/code&gt; , &lt;code&gt;compl&lt;/code&gt; , &lt;code&gt;not&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; y &lt;code&gt;xor&lt;/code&gt; como sin&amp;oacute;nimos como palabras clave.</target>
        </trans-unit>
        <trans-unit id="a51f0c8e8070d0d16a2b1996318508b466a43f6d" translate="yes" xml:space="preserve">
          <source>Do not try to dynamically allocate condition code registers, only use &lt;code&gt;icc0&lt;/code&gt; and &lt;code&gt;fcc0&lt;/code&gt;.</source>
          <target state="translated">No intente asignar din&amp;aacute;micamente registros de c&amp;oacute;digos de condici&amp;oacute;n, solo use &lt;code&gt;icc0&lt;/code&gt; y &lt;code&gt;fcc0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4b145e8904eea56f7b19e2cc3eedad3e7a2b834" translate="yes" xml:space="preserve">
          <source>Do not use (do use) external functions to save and restore registers at the prologue and epilogue of a function. The external functions are slower, but use less code space if more than one function saves the same number of registers. The</source>
          <target state="translated">No utilice (utilice)funciones externas para guardar y restaurar registros en el prólogo y el epílogo de una función.Las funciones externas son más lentas,pero utilizan menos espacio de código si más de una función guarda el mismo número de registros.El</target>
        </trans-unit>
        <trans-unit id="00d7092da6abac6816723cc9e024cce735f69d9a" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;__gcc_isr&lt;/code&gt; pseudo instructions in a function with the &lt;code&gt;interrupt&lt;/code&gt; or &lt;code&gt;signal&lt;/code&gt; attribute aka. interrupt service routine (ISR). Use this attribute if the preamble of the ISR prologue should always read</source>
          <target state="translated">No utilice pseudoinstrucciones &lt;code&gt;__gcc_isr&lt;/code&gt; en una funci&amp;oacute;n con el atributo de &lt;code&gt;interrupt&lt;/code&gt; o &lt;code&gt;signal&lt;/code&gt; tambi&amp;eacute;n conocido como. interrumpir la rutina de servicio (ISR). Utilice este atributo si el pre&amp;aacute;mbulo del pr&amp;oacute;logo ISR siempre debe leerse</target>
        </trans-unit>
        <trans-unit id="18d8580e81e8dfe5a32f7016f417e2eb0471dcb3" translate="yes" xml:space="preserve">
          <source>Do not use a so-called &amp;ldquo;red zone&amp;rdquo; for x86-64 code. The red zone is mandated by the x86-64 ABI; it is a 128-byte area beyond the location of the stack pointer that is not modified by signal or interrupt handlers and therefore can be used for temporary data without adjusting the stack pointer. The flag</source>
          <target state="translated">No utilice la denominada &quot;zona roja&quot; para el c&amp;oacute;digo x86-64. La zona roja es obligatoria por la ABI x86-64; es un &amp;aacute;rea de 128 bytes m&amp;aacute;s all&amp;aacute; de la ubicaci&amp;oacute;n del puntero de la pila que no es modificada por los manejadores de se&amp;ntilde;ales o interrupciones y, por lo tanto, se puede usar para datos temporales sin ajustar el puntero de la pila. La bandera</target>
        </trans-unit>
        <trans-unit id="18a500f76abd74325a0b47c0d5b69985957db494" translate="yes" xml:space="preserve">
          <source>Do not use condition-code results from previous instruction; always emit compare and test instructions before use of condition codes.</source>
          <target state="translated">No utilice los resultados del código de condición de la instrucción anterior;emita siempre instrucciones de comparación y prueba antes de utilizar los códigos de condición.</target>
        </trans-unit>
        <trans-unit id="8b90672d13ea8faf72441a2154876e77530d1d87" translate="yes" xml:space="preserve">
          <source>Do not use div and mod instructions.</source>
          <target state="translated">No utilice las instrucciones de div y mod.</target>
        </trans-unit>
        <trans-unit id="a1c8552434007f4da99e51d45212d527e1753ccf" translate="yes" xml:space="preserve">
          <source>Do not use double word instructions.</source>
          <target state="translated">No use instrucciones de doble palabra.</target>
        </trans-unit>
        <trans-unit id="3da98d0922de975e727ce6056f533717a8befbdb" translate="yes" xml:space="preserve">
          <source>Do not use floating-point coprocessor instructions. Implement floating-point calculations using library calls instead.</source>
          <target state="translated">No utilice las instrucciones del coprocesador de punto flotante.Implementar los cálculos de punto flotante usando en su lugar las llamadas a la biblioteca.</target>
        </trans-unit>
        <trans-unit id="9fdd545e439d4b4617a15eacf8cd9e4f96ac14e8" translate="yes" xml:space="preserve">
          <source>Do not use floating-point double instructions.</source>
          <target state="translated">No utilice las instrucciones dobles de punto flotante.</target>
        </trans-unit>
        <trans-unit id="95fd53c42ee138555aacbc40f7b4326fe9304fd6" translate="yes" xml:space="preserve">
          <source>Do not use hardware floating point.</source>
          <target state="translated">No utilice el hardware de punto flotante.</target>
        </trans-unit>
        <trans-unit id="97b2ddca9650ddbadc66a49ca355676910df5582" translate="yes" xml:space="preserve">
          <source>Do not use jump tables for switch statements even where it would be more efficient than other code generation strategies. This option is of use in conjunction with</source>
          <target state="translated">No utilice tablas de salto para las declaraciones de conmutación incluso cuando sería más eficiente que otras estrategias de generación de código.Esta opción es de uso en conjunto con</target>
        </trans-unit>
        <trans-unit id="66b43b46849088f20d198292bf3b1d8b62697198" translate="yes" xml:space="preserve">
          <source>Do not use media instructions.</source>
          <target state="translated">No utilice las instrucciones de los medios de comunicación.</target>
        </trans-unit>
        <trans-unit id="0a7e7f9ca7cad5a355cdeb3565cfa6b4acd871ea" translate="yes" xml:space="preserve">
          <source>Do not use multiply and add/subtract instructions.</source>
          <target state="translated">No use las instrucciones de multiplicar y sumar/restar.</target>
        </trans-unit>
        <trans-unit id="8d9e83aee940103d590cb767e0456c5b78e32683" translate="yes" xml:space="preserve">
          <source>Do not use table-based fast divide for small numbers. The default is to use the fast divide at</source>
          <target state="translated">No utilice la división rápida basada en tablas para números pequeños.El valor predeterminado es utilizar la división rápida en</target>
        </trans-unit>
        <trans-unit id="05b033596194e8c7885a56cfce16297eb0279fb4" translate="yes" xml:space="preserve">
          <source>Do not use the C library or system libraries tightly coupled with it when linking. Still link with the startup files,</source>
          <target state="translated">No utilice la biblioteca C o las bibliotecas del sistema estrechamente unidas a ella al enlazar.Sigue enlazando con los archivos de inicio,</target>
        </trans-unit>
        <trans-unit id="7597081c858717e7804a44bce422498f190040a9" translate="yes" xml:space="preserve">
          <source>Do not use the FPU registers for return values of functions.</source>
          <target state="translated">No utilice los registros de la FPU para los valores de retorno de las funciones.</target>
        </trans-unit>
        <trans-unit id="1d16a9b15ecbbe19aaee48f8f83799d98bf40097" translate="yes" xml:space="preserve">
          <source>Do not use the PLT for external function calls in position-independent code. Instead, load the callee address at call sites from the GOT and branch to it. This leads to more efficient code by eliminating PLT stubs and exposing GOT loads to optimizations. On architectures such as 32-bit x86 where PLT stubs expect the GOT pointer in a specific register, this gives more register allocation freedom to the compiler. Lazy binding requires use of the PLT; with</source>
          <target state="translated">No utilice el PLT para llamadas de funciones externas en código independiente de la posición.En su lugar,cargue la dirección de la calle en los sitios de llamada del GOT y bifurque a ella.Esto conduce a un código más eficiente eliminando los talones del PLT y exponiendo las cargas del GOT a optimizaciones.En arquitecturas como la de 32-bit x86 donde los talones PLT esperan el puntero GOT en un registro específico,esto da más libertad de asignación de registros al compilador.La vinculación perezosa requiere el uso del PLT;con</target>
        </trans-unit>
        <trans-unit id="0ea4440b962126227be7707085ba73c227777ab2" translate="yes" xml:space="preserve">
          <source>Do not use the bit-field instructions. The</source>
          <target state="translated">No use las instrucciones del campo de bits.El</target>
        </trans-unit>
        <trans-unit id="be4c2d58ea2c75689a1e197b8bce077dc3baf8e4" translate="yes" xml:space="preserve">
          <source>Do not use the standard system libraries when linking. Only the libraries you specify are passed to the linker, and options specifying linkage of the system libraries, such as</source>
          <target state="translated">No utilice las bibliotecas del sistema estándar al hacer los enlaces.Sólo se pasan al enlazador las bibliotecas que usted especifica,y las opciones que especifican el enlazamiento de las bibliotecas del sistema,tales como</target>
        </trans-unit>
        <trans-unit id="1749ead3f9e7878168e9e856a83790c8110a2327" translate="yes" xml:space="preserve">
          <source>Do not use the standard system startup files or libraries when linking. No startup files and only the libraries you specify are passed to the linker, and options specifying linkage of the system libraries, such as</source>
          <target state="translated">No utilice los archivos de inicio del sistema estándar o las bibliotecas cuando realice el enlace.No se pasan al enlazador archivos de inicio y sólo las bibliotecas que especifique,y las opciones que especifiquen el enlace de las bibliotecas del sistema,como</target>
        </trans-unit>
        <trans-unit id="c08b8394a0f77286bf2dfe4eba4ed4f08b60e58a" translate="yes" xml:space="preserve">
          <source>Do not use the standard system startup files when linking. The standard system libraries are used normally, unless</source>
          <target state="translated">No utilice los archivos de inicio del sistema estándar al realizar el enlace.Las bibliotecas del sistema estándar se utilizan normalmente,a menos que</target>
        </trans-unit>
        <trans-unit id="52b9f7e2d461f74673bbbc8c6515110fc50b3657" translate="yes" xml:space="preserve">
          <source>Do not use type qualifiers such as &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;volatile&lt;/code&gt;, as the outcome may be contrary to expectations. In particular, using the &lt;code&gt;volatile&lt;/code&gt; qualifier does not fully prevent the compiler from optimizing accesses to the register.</source>
          <target state="translated">No utilice calificadores de tipo como &lt;code&gt;const&lt;/code&gt; y &lt;code&gt;volatile&lt;/code&gt; , ya que el resultado puede ser contrario a las expectativas. En particular, el uso del calificador &lt;code&gt;volatile&lt;/code&gt; no evita completamente que el compilador optimice los accesos al registro.</target>
        </trans-unit>
        <trans-unit id="78d5320a817e4a255712f70b363a7e985f54d40c" translate="yes" xml:space="preserve">
          <source>Do not use type qualifiers such as &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;volatile&lt;/code&gt;, as the outcome may be contrary to expectations. In particular, when the &lt;code&gt;const&lt;/code&gt; qualifier is used, the compiler may substitute the variable with its initializer in &lt;code&gt;asm&lt;/code&gt; statements, which may cause the corresponding operand to appear in a different register.</source>
          <target state="translated">No utilice calificadores de tipo como &lt;code&gt;const&lt;/code&gt; y &lt;code&gt;volatile&lt;/code&gt; , ya que el resultado puede ser contrario a las expectativas. En particular, cuando se usa el calificador &lt;code&gt;const&lt;/code&gt; , el compilador puede sustituir la variable con su inicializador en declaraciones &lt;code&gt;asm&lt;/code&gt; , lo que puede hacer que el operando correspondiente aparezca en un registro diferente.</target>
        </trans-unit>
        <trans-unit id="4a1518a9d7c5d3a374a0e3380575da8c6a0c3463" translate="yes" xml:space="preserve">
          <source>Do not use weak symbol support, even if it is provided by the linker. By default, G++ uses weak symbols if they are available. This option exists only for testing, and should not be used by end-users; it results in inferior code and has no benefits. This option may be removed in a future release of G++.</source>
          <target state="translated">No utilice un soporte de símbolos débil,aunque sea proporcionado por el enlazador.Por defecto,G++utiliza símbolos débiles si están disponibles.Esta opción existe sólo para pruebas,y no debe ser utilizada por los usuarios finales;resulta en un código inferior y no tiene ningún beneficio.Esta opción puede ser eliminada en una futura versión de G++.</target>
        </trans-unit>
        <trans-unit id="1c6a44b0e85a6edc81e27b7d2eeb886e6e3cf31e" translate="yes" xml:space="preserve">
          <source>Do not warn about compile-time integer division by zero. Floating-point division by zero is not warned about, as it can be a legitimate way of obtaining infinities and NaNs.</source>
          <target state="translated">No advierta sobre la división de los enteros en tiempo de compilación por cero.No se advierte sobre la división por cero en coma flotante,ya que puede ser una forma legítima de obtener infinitos y NaNs.</target>
        </trans-unit>
        <trans-unit id="5c0402a3d7a93e89c19d0b2bc886627da9bb7bce" translate="yes" xml:space="preserve">
          <source>Do not warn about compile-time overflow in constant expressions.</source>
          <target state="translated">No advierta sobre el desbordamiento del tiempo de compilación en expresiones constantes.</target>
        </trans-unit>
        <trans-unit id="f3164f98334eb82394edc2af61f2d8e4ea49e902" translate="yes" xml:space="preserve">
          <source>Do not warn about incompatible integer to pointer and pointer to integer conversions. This warning is about implicit conversions; for explicit conversions the warnings</source>
          <target state="translated">No advierta sobre las conversiones incompatibles de entero a puntero y de puntero a entero.Esta advertencia se refiere a las conversiones implícitas;para las conversiones explícitas las advertencias</target>
        </trans-unit>
        <trans-unit id="9ee34e26cbf6dcdf9bae6a606eba5f147e3812eb" translate="yes" xml:space="preserve">
          <source>Do not warn about misuses of pragmas, such as incorrect parameters, invalid syntax, or conflicts between pragmas. See also</source>
          <target state="translated">No advierta sobre los usos indebidos de los pragmas,como parámetros incorrectos,sintaxis inválida o conflictos entre pragmas.Véase también</target>
        </trans-unit>
        <trans-unit id="2fba612926859cd3b2ec30d821b233c2c88e411e" translate="yes" xml:space="preserve">
          <source>Do not warn about returning a pointer (or in C++, a reference) to a variable that goes out of scope after the function returns.</source>
          <target state="translated">No advierta sobre la devolución de un puntero (o en C++,una referencia)a una variable que se salga de su alcance después de que la función regrese.</target>
        </trans-unit>
        <trans-unit id="92098da2097ee55c0bcb42fe16576932a7b751af" translate="yes" xml:space="preserve">
          <source>Do not warn about stray tokens after &lt;code&gt;#else&lt;/code&gt; and &lt;code&gt;#endif&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20062785b98beaefd7db7d397190023d3d7d01c" translate="yes" xml:space="preserve">
          <source>Do not warn about usage of deprecated features. See &lt;a href=&quot;deprecated-features#Deprecated-Features&quot;&gt;Deprecated Features&lt;/a&gt;.</source>
          <target state="translated">No advierta sobre el uso de funciones obsoletas. Consulte &lt;a href=&quot;deprecated-features#Deprecated-Features&quot;&gt;Funciones obsoletas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5741a81d36ae80d4f66c3d238560cf727f6d2221" translate="yes" xml:space="preserve">
          <source>Do not warn about usage of functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;) declared with &lt;code&gt;warning&lt;/code&gt; attribute. By default, this warning is enabled.</source>
          <target state="translated">No advierta sobre el uso de funciones (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; ) declaradas con el atributo de &lt;code&gt;warning&lt;/code&gt; . De forma predeterminada, esta advertencia est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="569882ee6769c783a7c673619d2b596b07ae7884" translate="yes" xml:space="preserve">
          <source>Do not warn about uses of &lt;code&gt;std::initializer_list&lt;/code&gt; that are likely to result in dangling pointers. Since the underlying array for an &lt;code&gt;initializer_list&lt;/code&gt; is handled like a normal C++ temporary object, it is easy to inadvertently keep a pointer to the array past the end of the array&amp;rsquo;s lifetime. For example:</source>
          <target state="translated">No advierta sobre los usos de &lt;code&gt;std::initializer_list&lt;/code&gt; que probablemente resulten en punteros colgantes. Dado que la matriz subyacente para una &lt;code&gt;initializer_list&lt;/code&gt; se maneja como un objeto temporal normal de C ++, es f&amp;aacute;cil mantener inadvertidamente un puntero a la matriz despu&amp;eacute;s del final de la vida de la matriz. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e7879bd2657e4473a1347324fd997f9cdc3d041e" translate="yes" xml:space="preserve">
          <source>Do not warn about uses of functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), and types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;) marked as deprecated by using the &lt;code&gt;deprecated&lt;/code&gt; attribute.</source>
          <target state="translated">No advierta sobre los usos de funciones (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (consulte &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variables&lt;/a&gt; ) y tipos (consulte &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ) marcados como obsoletos mediante el uso del atributo &lt;code&gt;deprecated&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e33f23c639b6d41c2c3035fff8afee57ebc3fce6" translate="yes" xml:space="preserve">
          <source>Do not warn for calls to bounded string manipulation functions such as &lt;code&gt;strncat&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt;, and &lt;code&gt;stpncpy&lt;/code&gt; that may either truncate the copied string or leave the destination unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ba657c651e9df665e818d59934ea7360d21f9d" translate="yes" xml:space="preserve">
          <source>Do not warn for conversions between &lt;code&gt;NULL&lt;/code&gt; and non-pointer types.</source>
          <target state="translated">No advierta sobre conversiones entre tipos &lt;code&gt;NULL&lt;/code&gt; y sin puntero.</target>
        </trans-unit>
        <trans-unit id="f3c7034f14450f34ae37fb2f3dc3f8309df1df4c" translate="yes" xml:space="preserve">
          <source>Do not warn if a caller of a function marked with attribute &lt;code&gt;warn_unused_result&lt;/code&gt; (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;) does not use its return value. The default is</source>
          <target state="translated">No advertir si un llamador de una funci&amp;oacute;n marcada con el atributo &lt;code&gt;warn_unused_result&lt;/code&gt; (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ) no usa su valor de retorno. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="fb9755e0253eb1306289d1103fce8726c90aae41" translate="yes" xml:space="preserve">
          <source>Do not warn if a class type has a base or a field whose type uses the anonymous namespace or depends on a type with no linkage. If a type A depends on a type B with no or internal linkage, defining it in multiple translation units would be an ODR violation because the meaning of B is different in each translation unit. If A only appears in a single translation unit, the best way to silence the warning is to give it internal linkage by putting it in an anonymous namespace as well. The compiler doesn&amp;rsquo;t give this warning for types defined in the main .C file, as those are unlikely to have multiple definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c44e9dcc0d0d2cc0d4fcbe48e1b3887ed71621" translate="yes" xml:space="preserve">
          <source>Do not warn if a multicharacter constant (&amp;lsquo;</source>
          <target state="translated">No advertir si una constante de varios caracteres ('</target>
        </trans-unit>
        <trans-unit id="443e1e0e70a448710aa93209ae6dd62fb7533f28" translate="yes" xml:space="preserve">
          <source>Do not warn if a pointer is compared with a zero character constant. This usually means that the pointer was meant to be dereferenced. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474d345e0c92820e39935346f3f6f08e315a2c69" translate="yes" xml:space="preserve">
          <source>Do not warn if a priority from 0 to 100 is used for constructor or destructor. The use of constructor and destructor attributes allow you to assign a priority to the constructor/destructor to control its order of execution before &lt;code&gt;main&lt;/code&gt; is called or after it returns. The priority values must be greater than 100 as the compiler reserves priority values between 0&amp;ndash;100 for the implementation.</source>
          <target state="translated">No advertir si se usa una prioridad de 0 a 100 para constructor o destructor. El uso de los atributos de constructor y destructor le permite asignar una prioridad al constructor / destructor para controlar su orden de ejecuci&amp;oacute;n antes de que se llame a &lt;code&gt;main&lt;/code&gt; o despu&amp;eacute;s de que regrese. Los valores de prioridad deben ser mayores que 100 ya que el compilador reserva valores de prioridad entre 0 y 100 para la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="732973795e8a7e32daa52d09fac5902c9d2be92b" translate="yes" xml:space="preserve">
          <source>Do not warn if a property for an Objective-C object has no assign semantics specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a797405ed28a43b7b96611721ab2d6938e13b2f" translate="yes" xml:space="preserve">
          <source>Do not warn if an initialized field with side effects is overridden when using designated initializers (see &lt;a href=&quot;designated-inits#Designated-Inits&quot;&gt;Designated Initializers&lt;/a&gt;). This warning is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5958651457da08de9e91cd3ae0fc547368da59b" translate="yes" xml:space="preserve">
          <source>Do not warn if an unexpected &lt;code&gt;__attribute__&lt;/code&gt; is used, such as unrecognized attributes, function attributes applied to variables, etc. This does not stop errors for incorrect use of supported attributes.</source>
          <target state="translated">No advierta si se utiliza un &lt;code&gt;__attribute__&lt;/code&gt; inesperado , como atributos no reconocidos, atributos de funci&amp;oacute;n aplicados a variables, etc. Esto no detiene los errores por el uso incorrecto de los atributos admitidos.</target>
        </trans-unit>
        <trans-unit id="776e98d1dffbde23efe71be5b00aaf8afcebd19f" translate="yes" xml:space="preserve">
          <source>Do not warn if certain built-in macros are redefined. This suppresses warnings for redefinition of &lt;code&gt;__TIMESTAMP__&lt;/code&gt;, &lt;code&gt;__TIME__&lt;/code&gt;, &lt;code&gt;__DATE__&lt;/code&gt;, &lt;code&gt;__FILE__&lt;/code&gt;, and &lt;code&gt;__BASE_FILE__&lt;/code&gt;.</source>
          <target state="translated">No advierta si se redefinen determinadas macros integradas. Esto suprime las advertencias para la redefinici&amp;oacute;n de &lt;code&gt;__TIMESTAMP__&lt;/code&gt; , &lt;code&gt;__TIME__&lt;/code&gt; , &lt;code&gt;__DATE__&lt;/code&gt; , &lt;code&gt;__FILE__&lt;/code&gt; y &lt;code&gt;__BASE_FILE__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5961961b151110f8171f9f71097fa474a97d41f" translate="yes" xml:space="preserve">
          <source>Do not warn if type qualifiers on arrays which are pointer targets are being discarded. Typically, the compiler warns if a &lt;code&gt;const int (*)[]&lt;/code&gt; variable is passed to a function that takes a &lt;code&gt;int (*)[]&lt;/code&gt; parameter. This option can be used to suppress such a warning.</source>
          <target state="translated">No advierta si se descartan los calificadores de tipo en matrices que son objetivos de puntero. Normalmente, el compilador advierte si se pasa una variable &lt;code&gt;const int (*)[]&lt;/code&gt; a una funci&amp;oacute;n que toma un par&amp;aacute;metro &lt;code&gt;int (*)[]&lt;/code&gt; . Esta opci&amp;oacute;n se puede utilizar para suprimir tal advertencia.</target>
        </trans-unit>
        <trans-unit id="4f6ac391aa1f66b1759edea5545511d490e350b4" translate="yes" xml:space="preserve">
          <source>Do not warn if type qualifiers on pointers are being discarded. Typically, the compiler warns if a &lt;code&gt;const char *&lt;/code&gt; variable is passed to a function that takes a &lt;code&gt;char *&lt;/code&gt; parameter. This option can be used to suppress such a warning.</source>
          <target state="translated">No advertir si se descartan los calificadores de tipo en los punteros. Normalmente, el compilador advierte si se pasa una variable &lt;code&gt;const char *&lt;/code&gt; a una funci&amp;oacute;n que toma un par&amp;aacute;metro &lt;code&gt;char *&lt;/code&gt; . Esta opci&amp;oacute;n se puede utilizar para suprimir tal advertencia.</target>
        </trans-unit>
        <trans-unit id="2237d0ea4af513f919bfca5807318b7adb31ba01" translate="yes" xml:space="preserve">
          <source>Do not warn on suspicious constructs involving reverse scalar storage order.</source>
          <target state="translated">No advierta sobre construcciones sospechosas que impliquen un orden de almacenamiento escalar inverso.</target>
        </trans-unit>
        <trans-unit id="dbb582054a4578d09382786263898193b0ff21b0" translate="yes" xml:space="preserve">
          <source>Do not warn upon questionable usage of the macros used to handle variable arguments like &lt;code&gt;va_start&lt;/code&gt;. These warnings are enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b084ddd7e0fe08b48906115755ffa4e3da32fe0c" translate="yes" xml:space="preserve">
          <source>Do not warn when HSAIL cannot be emitted for the compiled function or OpenMP construct. These warnings are enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7781876bcee57ab05b4c1b6a1db698152f3d5c11" translate="yes" xml:space="preserve">
          <source>Do not warn when a &lt;code&gt;switch&lt;/code&gt; statement contains statements between the controlling expression and the first case label, which will never be executed. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28680d2e20ffb7926eea11f38e1b6b85ce89c733" translate="yes" xml:space="preserve">
          <source>Do not warn when a &lt;code&gt;switch&lt;/code&gt; statement has an index of boolean type and the case values are outside the range of a boolean type. It is possible to suppress this warning by casting the controlling expression to a type other than &lt;code&gt;bool&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af5475a41b51138661971a42f878b92d42b232b" translate="yes" xml:space="preserve">
          <source>Do not warn when a conversion function converts an object to the same type, to a base class of that type, or to void; such a conversion function will never be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c13e36c06e819c05d426233228bd8a2938fb6e" translate="yes" xml:space="preserve">
          <source>Do not warn when a string or character literal is followed by a ud-suffix which does not begin with an underscore. As a conforming extension, GCC treats such suffixes as separate preprocessing tokens in order to maintain backwards compatibility with code that uses formatting macros from &lt;code&gt;&amp;lt;inttypes.h&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505f6f0a22dd44c4b12ed8d2e6a399fe3806c159" translate="yes" xml:space="preserve">
          <source>Do not warn when attempting to free an object that was not allocated on the heap.</source>
          <target state="translated">No advierta cuando intente liberar un objeto que no fue asignado en el montón.</target>
        </trans-unit>
        <trans-unit id="0eea2eb346314f258d9bd4887c4a7d0ac495ba36" translate="yes" xml:space="preserve">
          <source>Do not warn when deleting a pointer to incomplete type, which may cause undefined behavior at runtime. This warning is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94889f68926578d446953d9dc1636114cf6715d6" translate="yes" xml:space="preserve">
          <source>Do not warn when the &lt;code&gt;sizeof&lt;/code&gt; operator is applied to a parameter that is declared as an array in a function definition. This warning is enabled by default for C and C++ programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d665894bec0cb8c7c615758edc8127e2b609bfec" translate="yes" xml:space="preserve">
          <source>Do not warn when the address of packed member of struct or union is taken, which usually results in an unaligned pointer value. This is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41e5f71b800c0d75e8bc4c789587d50634e7b35" translate="yes" xml:space="preserve">
          <source>Do not warn when there is a conversion between pointers that have incompatible types. This warning is for cases not covered by</source>
          <target state="translated">No avise cuando haya una conversión entre los punteros que tienen tipos incompatibles.Esta advertencia es para los casos no cubiertos por</target>
        </trans-unit>
        <trans-unit id="7288e67492dfae2c91a3de07cd384be7cd59dcec" translate="yes" xml:space="preserve">
          <source>Do not warn whenever a local variable shadows an instance variable in an Objective-C method.</source>
          <target state="translated">No avise cuando una variable local ensombrezca una variable de instancia en un método de Objetivo-C.</target>
        </trans-unit>
        <trans-unit id="a828e7021a3bac6b8a79dcdabca3402745cfbb45" translate="yes" xml:space="preserve">
          <source>Do not warn whenever an &lt;code&gt;#else&lt;/code&gt; or an &lt;code&gt;#endif&lt;/code&gt; are followed by text. This sometimes happens in older programs with code of the form</source>
          <target state="translated">No advertir siempre que un &lt;code&gt;#else&lt;/code&gt; o un &lt;code&gt;#endif&lt;/code&gt; vayan seguidos de un texto. Esto a veces sucede en programas m&amp;aacute;s antiguos con c&amp;oacute;digo de la forma</target>
        </trans-unit>
        <trans-unit id="12e3a14254e97e0a14b8cdd90a112ee9ef9f78f5" translate="yes" xml:space="preserve">
          <source>Do nothing. Code written for the Borland model works fine, but each translation unit contains instances of each of the templates it uses. The duplicate instances will be discarded by the linker, but in a large program, this can lead to an unacceptable amount of code duplication in object files or shared libraries.</source>
          <target state="translated">No hagas nada.El código escrito para el modelo de Borland funciona bien,pero cada unidad de traducción contiene instancias de cada una de las plantillas que utiliza.Las instancias duplicadas serán descartadas por el enlazador,pero en un programa grande,esto puede llevar a una cantidad inaceptable de duplicación de código en archivos de objetos o bibliotecas compartidas.</target>
        </trans-unit>
        <trans-unit id="36f05070ba1aa8ebb373ea5159cf72f76e048943" translate="yes" xml:space="preserve">
          <source>Do or don&amp;rsquo;t use hardware floating-point divide and square root instructions. This requires the F or D extensions for floating-point registers. The default is to use them if the specified architecture has these instructions.</source>
          <target state="translated">Utilice o no las instrucciones de divisi&amp;oacute;n y ra&amp;iacute;z cuadrada de punto flotante de hardware. Esto requiere las extensiones F o D para registros de punto flotante. El valor predeterminado es usarlos si la arquitectura especificada tiene estas instrucciones.</target>
        </trans-unit>
        <trans-unit id="57a1444191ca5bb7028d2e6eff0344f434565ffa" translate="yes" xml:space="preserve">
          <source>Do or don&amp;rsquo;t use hardware instructions for integer division. This requires the M extension. The default is to use them if the specified architecture has these instructions.</source>
          <target state="translated">Utilice o no instrucciones de hardware para la divisi&amp;oacute;n de enteros. Esto requiere la extensi&amp;oacute;n M. El valor predeterminado es usarlos si la arquitectura especificada tiene estas instrucciones.</target>
        </trans-unit>
        <trans-unit id="ddefab05090bb15a5eac377b4c14800d5252c830" translate="yes" xml:space="preserve">
          <source>Do or don&amp;rsquo;t use smaller but slower prologue and epilogue code that uses library function calls. The default is to use fast inline prologues and epilogues.</source>
          <target state="translated">Utilice o no un c&amp;oacute;digo de ep&amp;iacute;logo y pr&amp;oacute;logo m&amp;aacute;s peque&amp;ntilde;o pero m&amp;aacute;s lento que utilice llamadas a funciones de biblioteca. El valor predeterminado es utilizar pr&amp;oacute;logos y ep&amp;iacute;logos en l&amp;iacute;nea r&amp;aacute;pidos.</target>
        </trans-unit>
        <trans-unit id="96ba75d321eadfeb26cc86353736e08f35e773ab" translate="yes" xml:space="preserve">
          <source>Do output those jump instructions, on the assumption that the GNU assembler is being used.</source>
          <target state="translated">Emitan esas instrucciones de salto,asumiendo que se está usando el ensamblador de GNU.</target>
        </trans-unit>
        <trans-unit id="4d204a72f0077f832ff1f2432253a2d1ae4c41b8" translate="yes" xml:space="preserve">
          <source>Do stack checking using information placed into L1 scratchpad memory by the uClinux kernel.</source>
          <target state="translated">Haz la comprobación de la pila usando la información colocada en la memoria del bloc de notas L1 por el núcleo de uClinux.</target>
        </trans-unit>
        <trans-unit id="63c71786896a4df72c3bdfbb021ed8f95f3c7268" translate="yes" xml:space="preserve">
          <source>Do use the bit-field instructions. The</source>
          <target state="translated">Utiliza las instrucciones del campo de bits.El</target>
        </trans-unit>
        <trans-unit id="73b333e917a724e80117a86ff858d4e12be1cb13" translate="yes" xml:space="preserve">
          <source>Do warn about implicit conversions from arithmetic operations even when conversion of the operands to the same type cannot change their values. This affects warnings from</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
