<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="aeab84fbb87aa1ae0148d00185bbbe64a7f1de75" translate="yes" xml:space="preserve">
          <source>Do/do not align destination of inlined string operations.</source>
          <target state="translated">Alinear/no alinear el destino de las operaciones de cadena en línea.</target>
        </trans-unit>
        <trans-unit id="bc45e676c4601147aa81205b6b35bbce28a0956f" translate="yes" xml:space="preserve">
          <source>Dollar sign is allowed in identifiers.</source>
          <target state="translated">Se permite el signo del dólar en los identificadores.</target>
        </trans-unit>
        <trans-unit id="68e93316f665d706cb16fce9b665aecabf389d83" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t (or do) generate assembler code for the DWARF line number debugging info. This may be useful when not using the GNU assembler.</source>
          <target state="translated">No genere (o haga) c&amp;oacute;digo ensamblador para la informaci&amp;oacute;n de depuraci&amp;oacute;n del n&amp;uacute;mero de l&amp;iacute;nea DWARF. Esto puede resultar &amp;uacute;til cuando no se utiliza el ensamblador GNU.</target>
        </trans-unit>
        <trans-unit id="c37914471f4a30f8d34225039b83103b924890c2" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51bdbcf76c028728ebe02e5fd8a3a1a4630491b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allocate any register in the range &lt;code&gt;r32&lt;/code&gt;&amp;hellip;&lt;code&gt;r63&lt;/code&gt;. That allows code to run on hardware variants that lack these registers.</source>
          <target state="translated">No asigne ning&amp;uacute;n registro en el rango &lt;code&gt;r32&lt;/code&gt; ... &lt;code&gt;r63&lt;/code&gt; . Eso permite que el c&amp;oacute;digo se ejecute en variantes de hardware que carecen de estos registros.</target>
        </trans-unit>
        <trans-unit id="0696f924a6a7aba65bb0c521d005ad21d730a7e5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t allow (allow) the compiler generating privileged mode code. Specifying</source>
          <target state="translated">No permita (permita) que el compilador genere c&amp;oacute;digo en modo privilegiado. Especificando</target>
        </trans-unit>
        <trans-unit id="b4aac26fa88db757f99f48797196bd3cbd91bc9d" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t emit code for implicit instantiations of inline templates, either. The default is to handle inlines differently so that compiles with and without optimization need the same set of explicit instantiations.</source>
          <target state="translated">Tampoco emita c&amp;oacute;digo para instancias impl&amp;iacute;citas de plantillas en l&amp;iacute;nea. El valor predeterminado es manejar inlines de manera diferente para que las compilaciones con y sin optimizaci&amp;oacute;n necesiten el mismo conjunto de instancias expl&amp;iacute;citas.</target>
        </trans-unit>
        <trans-unit id="c69befd629431a6e029cd45dbc6aab7876d6d7d6" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate code to check for violation of exception specifications at run time. This option violates the C++ standard, but may be useful for reducing code size in production builds, much like defining &lt;code&gt;NDEBUG&lt;/code&gt;. This does not give user code permission to throw exceptions in violation of the exception specifications; the compiler still optimizes based on the specifications, so throwing an unexpected exception results in undefined behavior at run time.</source>
          <target state="translated">No genere c&amp;oacute;digo para verificar la violaci&amp;oacute;n de las especificaciones de excepci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n. Esta opci&amp;oacute;n viola el est&amp;aacute;ndar C ++, pero puede ser &amp;uacute;til para reducir el tama&amp;ntilde;o del c&amp;oacute;digo en las compilaciones de producci&amp;oacute;n, al igual que definir &lt;code&gt;NDEBUG&lt;/code&gt; . Esto no le da permiso al c&amp;oacute;digo de usuario para lanzar excepciones en violaci&amp;oacute;n de las especificaciones de excepci&amp;oacute;n; el compilador a&amp;uacute;n optimiza seg&amp;uacute;n las especificaciones, por lo que lanzar una excepci&amp;oacute;n inesperada da como resultado un comportamiento indefinido en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f8291058c6a41a1212fed5bdc0b889e02ad54e73" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate extra code to prevent CSYNC or SSYNC instructions from occurring too soon after a conditional branch.</source>
          <target state="translated">No genere c&amp;oacute;digo adicional para evitar que las instrucciones CSYNC o SSYNC ocurran demasiado pronto despu&amp;eacute;s de una bifurcaci&amp;oacute;n condicional.</target>
        </trans-unit>
        <trans-unit id="92fc05375382df9e90695eff3a44465379a9fc8a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate extra code to prevent speculative loads from occurring.</source>
          <target state="translated">No genere c&amp;oacute;digo adicional para evitar que se produzcan cargas especulativas.</target>
        </trans-unit>
        <trans-unit id="841b2c5913f27dd6d0a0b75be4041ed9060e2a5b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t indicate any priority for target registers.</source>
          <target state="translated">No indique ninguna prioridad para los registros de destino.</target>
        </trans-unit>
        <trans-unit id="316b458b3b915800cc227cb589b8354e8997e031" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t insert NOPs.</source>
          <target state="translated">No inserte NOP.</target>
        </trans-unit>
        <trans-unit id="ff257b74ea5cefc2a6c99dc46dcf1ce2fc00c3e9" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t keep the frame pointer in a register for leaf functions. This avoids the instructions to save, set up and restore frame pointers and makes an extra register available in leaf functions.</source>
          <target state="translated">No mantenga el puntero del marco en un registro para funciones de hoja. Esto evita las instrucciones para guardar, configurar y restaurar punteros de marco y hace que un registro adicional est&amp;eacute; disponible en las funciones de hoja.</target>
        </trans-unit>
        <trans-unit id="29fcb114afda8378c254d0362fee3390fc31a076" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t keep the frame pointer in a register for leaf functions. This avoids the instructions to save, set up, and restore frame pointers and makes an extra register available in leaf functions. The option</source>
          <target state="translated">No mantenga el puntero del marco en un registro para funciones de hoja. Esto evita las instrucciones para guardar, configurar y restaurar punteros de marco y hace que un registro adicional est&amp;eacute; disponible en las funciones de hoja. La opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="ba01c69254f25c86224b738f06e6534bc4f3d911" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t link against AVR-LibC&amp;rsquo;s device specific library &lt;code&gt;lib&amp;lt;mcu&amp;gt;.a&lt;/code&gt;.</source>
          <target state="translated">No se vincule con la biblioteca espec&amp;iacute;fica del dispositivo de AVR-LibC &lt;code&gt;lib&amp;lt;mcu&amp;gt;.a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e29b08debc2f8c83b43cab1a04eee2f4d727ea03" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t output a &lt;code&gt;.size&lt;/code&gt; assembler directive, or anything else that would cause trouble if the function is split in the middle, and the two halves are placed at locations far apart in memory. This option is used when compiling</source>
          <target state="translated">No &lt;code&gt;.size&lt;/code&gt; una directiva de ensamblador .size , o cualquier otra cosa que pueda causar problemas si la funci&amp;oacute;n se divide en el medio, y las dos mitades se colocan en ubicaciones muy separadas en la memoria. Esta opci&amp;oacute;n se utiliza al compilar</target>
        </trans-unit>
        <trans-unit id="d01cd709102ba1930825f66a542ae471f0249850" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t produce a dynamically linked position independent executable.</source>
          <target state="translated">No genere un ejecutable independiente de la posici&amp;oacute;n vinculado din&amp;aacute;micamente.</target>
        </trans-unit>
        <trans-unit id="0d7422ae3d66c98a5899ca6447dbd9bcec60457e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t recognize built-in functions that do not begin with &amp;lsquo;</source>
          <target state="translated">No reconozco las funciones integradas que no comienzan con '</target>
        </trans-unit>
        <trans-unit id="700e3402560c020ff640d0360da073b7f29b63b2" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to return a reference when you must return an object.</source>
          <target state="translated">No intente devolver una referencia cuando deba devolver un objeto.</target>
        </trans-unit>
        <trans-unit id="af0c2963603baeac9b84a7601cb10b5b24bf9b5d" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use less than 25-bit addressing range for calls, which is the offset available for an unconditional branch-and-link instruction. Conditional execution of function calls is suppressed, to allow use of the 25-bit range, rather than the 21-bit range with conditional branch-and-link. This is the default for tool chains built for &lt;code&gt;arc-linux-uclibc&lt;/code&gt; and &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; targets.</source>
          <target state="translated">No utilice un rango de direccionamiento de menos de 25 bits para las llamadas, que es el desplazamiento disponible para una instrucci&amp;oacute;n de bifurcaci&amp;oacute;n y enlace incondicional. Se suprime la ejecuci&amp;oacute;n condicional de llamadas de funci&amp;oacute;n para permitir el uso del rango de 25 bits, en lugar del rango de 21 bits con bifurcaci&amp;oacute;n y enlace condicional. Este es el valor predeterminado para las cadenas de herramientas creadas para objetivos &lt;code&gt;arc-linux-uclibc&lt;/code&gt; y &lt;code&gt;arceb-linux-uclibc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71dc31daaf7ec06b2fa4f05018881b81c4bb5538" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the &lt;code&gt;__cxa_get_exception_ptr&lt;/code&gt; runtime routine. This causes &lt;code&gt;std::uncaught_exception&lt;/code&gt; to be incorrect, but is necessary if the runtime routine is not available.</source>
          <target state="translated">No utilice la rutina de tiempo de ejecuci&amp;oacute;n &lt;code&gt;__cxa_get_exception_ptr&lt;/code&gt; . Esto hace que &lt;code&gt;std::uncaught_exception&lt;/code&gt; sea ​​incorrecto, pero es necesario si la rutina de ejecuci&amp;oacute;n no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="8dcc5d27681a8bdad6a9cb3ee54a8968b968d227" translate="yes" xml:space="preserve">
          <source>Double-precision floating point:</source>
          <target state="translated">Punto flotante de doble precisión:</target>
        </trans-unit>
        <trans-unit id="ed1ceb86db6df41816a7c2bb25eb2a7096005f14" translate="yes" xml:space="preserve">
          <source>Double-precision minimum and maximum. These instructions are only generated if</source>
          <target state="translated">Mínimo y máximo de doble precisión.Estas instrucciones sólo se generan si</target>
        </trans-unit>
        <trans-unit id="37d9eb125267c27f5502a1a9d084767dc36a78f0" translate="yes" xml:space="preserve">
          <source>Double-precision trigonometric and exponential functions. These instructions are only generated if</source>
          <target state="translated">Funciones trigonométricas y exponenciales de doble precisión.Estas instrucciones sólo se generan si</target>
        </trans-unit>
        <trans-unit id="6df71cfe44fe533eddb81c22b571782849f6b7cc" translate="yes" xml:space="preserve">
          <source>Double-word integers&amp;mdash;&lt;code&gt;long long int&lt;/code&gt;.</source>
          <target state="translated">Enteros de dos palabras: &lt;code&gt;long long int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc953a7def63cef4cb68fb70c5f14bea1b94cf60" translate="yes" xml:space="preserve">
          <source>Downgrade some diagnostics about nonconformant code from errors to warnings. Thus, using</source>
          <target state="translated">Bajar algunos diagnósticos sobre código no conforme de errores a advertencias.Así,usando</target>
        </trans-unit>
        <trans-unit id="01180802e3e84af7a4d8039eea60df66e24e2e3d" translate="yes" xml:space="preserve">
          <source>Due to a limitation the &lt;code&gt;__builtin_has_attribute&lt;/code&gt; function returns &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;mode&lt;/code&gt; attribute even if the type or variable referenced by the &lt;var&gt;type-or-expression&lt;/var&gt; argument was declared with one. The function is also not supported with labels, and in C with enumerators.</source>
          <target state="translated">Debido a una limitaci&amp;oacute;n, la funci&amp;oacute;n &lt;code&gt;__builtin_has_attribute&lt;/code&gt; devuelve &lt;code&gt;false&lt;/code&gt; para el atributo de &lt;code&gt;mode&lt;/code&gt; incluso si el tipo o la variable referenciada por el argumento de &lt;var&gt;type-or-expression&lt;/var&gt; se declar&amp;oacute; con uno. La funci&amp;oacute;n tampoco es compatible con etiquetas y en C con enumeradores.</target>
        </trans-unit>
        <trans-unit id="eaa7b08f0e0c97160e76284248f06868dbcb58d2" translate="yes" xml:space="preserve">
          <source>Due to delay slot scheduling and interactions between operand numbers, literal sizes, instruction lengths, and the support for conditional execution, the target-independent pass to generate conditional execution is often lacking, so the ARC port has kept a special pass around that tries to find more conditional execution generation opportunities after register allocation, branch shortening, and delay slot scheduling have been done. This pass generally, but not always, improves performance and code size, at the cost of extra compilation time, which is why there is an option to switch it off. If you have a problem with call instructions exceeding their allowable offset range because they are conditionalized, you should consider using</source>
          <target state="translated">Debido a la programación de los intervalos de demora y a las interacciones entre los números de operandos,los tamaños de los literales,las longitudes de las instrucciones y el apoyo a la ejecución condicional,a menudo falta el pase independiente del objetivo para generar la ejecución condicional,por lo que el puerto ARC ha mantenido un pase especial que trata de encontrar más oportunidades de generación de ejecución condicional después de la asignación de registros,el acortamiento de ramas y la programación de intervalos de demora.Este pase generalmente,pero no siempre,mejora el rendimiento y el tamaño del código,a costa de un tiempo de compilación adicional,por lo que existe la opción de desactivarlo.Si tiene un problema con las instrucciones de llamada que exceden su rango de desviación permitida porque están condicionadas,debería considerar el uso de</target>
        </trans-unit>
        <trans-unit id="8570e266a139eea3cf33870c783885655692c297" translate="yes" xml:space="preserve">
          <source>Due to differences in 64-bit ABIs, any Microsoft ABI function that calls a System V ABI function must consider RSI, RDI and XMM6-15 as clobbered. By default, the code for saving and restoring these registers is emitted inline, resulting in fairly lengthy prologues and epilogues. Using</source>
          <target state="translated">Debido a las diferencias en las ABI de 64 bits,cualquier función ABI de Microsoft que llame a una función ABI del Sistema V debe considerar RSI,RDI y XMM6-15 como &quot;clobbered&quot;.Por defecto,el código para guardar y restaurar estos registros se emite en línea,lo que resulta en prólogos y epílogos bastante largos.Usando</target>
        </trans-unit>
        <trans-unit id="408f58f18488b8883676547177ce8b939c3a83db" translate="yes" xml:space="preserve">
          <source>Dump a representation of the &amp;ldquo;exploded graph&amp;rdquo; suitable for viewing with GraphViz to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169bc667798b22c68aedd5d55d686c15e2808baf" translate="yes" xml:space="preserve">
          <source>Dump a representation of the call graph suitable for viewing with GraphViz to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d46471a4ce7f3b77f03f78421a9baa93db393b" translate="yes" xml:space="preserve">
          <source>Dump a textual representation of the &amp;ldquo;exploded graph&amp;rdquo; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca50a32f407b97e3b5dbaa8c49a491f9e0224426" translate="yes" xml:space="preserve">
          <source>Dump a textual representation of the &amp;ldquo;exploded graph&amp;rdquo; to one dump file per node, to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dc1ed426258fad4287ccc3186c8799b4478fe2" translate="yes" xml:space="preserve">
          <source>Dump after RTL generation.</source>
          <target state="translated">Vertedero después de la generación de RTL.</target>
        </trans-unit>
        <trans-unit id="55112da270658f739f4dfb65c2070abbe0a2de15" translate="yes" xml:space="preserve">
          <source>Dump after all rtl has been unshared.</source>
          <target state="translated">Desechar después de que todo el Rtl haya sido deshecho.</target>
        </trans-unit>
        <trans-unit id="17713d860b95f07f88ad9a9c6f46bff3093dd8bf" translate="yes" xml:space="preserve">
          <source>Dump after auto-inc-dec discovery. This pass is only run on architectures that have auto inc or auto dec instructions.</source>
          <target state="translated">Descarte después del descubrimiento del auto-inc-dec.Este pase sólo se ejecuta en arquitecturas que tienen instrucciones de auto inc o auto dec.</target>
        </trans-unit>
        <trans-unit id="4544c05126cdb19431a178314ee1eee9792fb198" translate="yes" xml:space="preserve">
          <source>Dump after block reordering.</source>
          <target state="translated">Reordenamiento de bloque a bloque.</target>
        </trans-unit>
        <trans-unit id="78c9d4108223d54d2d9b5209aec4c77ba61f990a" translate="yes" xml:space="preserve">
          <source>Dump after branch alignments have been computed.</source>
          <target state="translated">Desechar después de que se hayan calculado las alineaciones de las ramas.</target>
        </trans-unit>
        <trans-unit id="becf6aa3d2a32b64f568f0ff4ffede5097942c5f" translate="yes" xml:space="preserve">
          <source>Dump after cleaning up the barrier instructions.</source>
          <target state="translated">Tíralo después de limpiar las instrucciones de la barrera.</target>
        </trans-unit>
        <trans-unit id="4157bd0dc462fb4b9de6813e4b6322c3ce89115d" translate="yes" xml:space="preserve">
          <source>Dump after combining stack adjustments.</source>
          <target state="translated">Desechar después de combinar los ajustes de la pila.</target>
        </trans-unit>
        <trans-unit id="ca08541014a668445bc90fdf9e0e75729f2449db" translate="yes" xml:space="preserve">
          <source>Dump after common sequence discovery.</source>
          <target state="translated">Desechar después del descubrimiento de una secuencia común.</target>
        </trans-unit>
        <trans-unit id="003a4c3463d2348777de9c3ec96a83fded9a133b" translate="yes" xml:space="preserve">
          <source>Dump after conversion from GCC&amp;rsquo;s &amp;ldquo;flat register file&amp;rdquo; registers to the x87&amp;rsquo;s stack-like registers. This pass is only run on x86 variants.</source>
          <target state="translated">Volcado despu&amp;eacute;s de la conversi&amp;oacute;n de los registros del &amp;ldquo;archivo de registro plano&amp;rdquo; de GCC a los registros de pila de x87. Este pase solo se ejecuta en variantes x86.</target>
        </trans-unit>
        <trans-unit id="83008119d9369fbf18b0ada0441c79a07768ec53" translate="yes" xml:space="preserve">
          <source>Dump after conversion of EH handling range regions.</source>
          <target state="translated">Vertedero después de la conversión de las regiones del rango de manejo del EH.</target>
        </trans-unit>
        <trans-unit id="3bf729ea33ed64d3ed60d59c687162fd5feb227f" translate="yes" xml:space="preserve">
          <source>Dump after converting from cfglayout mode.</source>
          <target state="translated">Volcar después de convertir desde el modo cfglayout.</target>
        </trans-unit>
        <trans-unit id="8c3c2b3635d622c5e7ba8ea735eb12810fb32bac" translate="yes" xml:space="preserve">
          <source>Dump after converting to cfglayout mode.</source>
          <target state="translated">Desechar después de convertir al modo cfglayout.</target>
        </trans-unit>
        <trans-unit id="c3336c59217d8a52dec6ae53e20f9f151f5f642d" translate="yes" xml:space="preserve">
          <source>Dump after converting virtual registers to hard registers.</source>
          <target state="translated">Volcar después de convertir los registros virtuales en registros duros.</target>
        </trans-unit>
        <trans-unit id="9e4924e7d7139d25008b3b0767ee0c48540ad8c8" translate="yes" xml:space="preserve">
          <source>Dump after delayed branch scheduling.</source>
          <target state="translated">Descarte después de la programación retrasada de la sucursal.</target>
        </trans-unit>
        <trans-unit id="d2764959e209d321913a6a9e66c4ca5ca11ad126" translate="yes" xml:space="preserve">
          <source>Dump after duplicating the computed gotos.</source>
          <target state="translated">Desechar después de duplicar los gatos computarizados.</target>
        </trans-unit>
        <trans-unit id="6e4665a9117fc08d9bbcca5529570f4270193b64" translate="yes" xml:space="preserve">
          <source>Dump after finalization of EH handling code.</source>
          <target state="translated">Desechar después de la finalización del código de manejo de EH.</target>
        </trans-unit>
        <trans-unit id="0bd2968b703fd689e056f9d8a3839eaca5ddccc9" translate="yes" xml:space="preserve">
          <source>Dump after fixing rtl statements that have unsatisfied in/out constraints.</source>
          <target state="translated">Tirar después de arreglar las declaraciones de rtl que tienen restricciones in/out insatisfechas.</target>
        </trans-unit>
        <trans-unit id="1f6440e322c9dbaaa59c98dce4c47af3058d32dc" translate="yes" xml:space="preserve">
          <source>Dump after function inlining.</source>
          <target state="translated">Volcado después de la función en línea.</target>
        </trans-unit>
        <trans-unit id="988226cdeaba5c3515016a8a81c5ff5fb6cd975a" translate="yes" xml:space="preserve">
          <source>Dump after generating the function prologues and epilogues.</source>
          <target state="translated">Desechar después de generar los prólogos y epílogos de la función.</target>
        </trans-unit>
        <trans-unit id="337d4408dd5282e57a077069c98fc55c719caf17" translate="yes" xml:space="preserve">
          <source>Dump after hard register copy propagation.</source>
          <target state="translated">Desechar después de la propagación de la copia del registro impreso.</target>
        </trans-unit>
        <trans-unit id="6cfe830bfa04c4483b1574a46bcfd925bca4b994" translate="yes" xml:space="preserve">
          <source>Dump after iterated register allocation.</source>
          <target state="translated">Desechar después de la asignación del registro iterado.</target>
        </trans-unit>
        <trans-unit id="1332404cd20a620c3e5eef9263282d44f935e6c1" translate="yes" xml:space="preserve">
          <source>Dump after jump bypassing and control flow optimizations.</source>
          <target state="translated">Desviación de salto tras salto y optimización del flujo de control.</target>
        </trans-unit>
        <trans-unit id="bbeda7ae9b9627b581ee42ee3d7f61a589a6f9b2" translate="yes" xml:space="preserve">
          <source>Dump after live range splitting.</source>
          <target state="translated">Descarte después de la división del rango de vida.</target>
        </trans-unit>
        <trans-unit id="35f1d73925595e51018771690ad76fb0f4a1f233" translate="yes" xml:space="preserve">
          <source>Dump after modulo scheduling. This pass is only run on some architectures.</source>
          <target state="translated">Desechar después de la programación de los módulos.Este pase sólo se ejecuta en algunas arquitecturas.</target>
        </trans-unit>
        <trans-unit id="d76e4430e6a8233563404db6f071f4d94eacdd64" translate="yes" xml:space="preserve">
          <source>Dump after partitioning hot and cold basic blocks.</source>
          <target state="translated">Tirar después de dividir los bloques básicos calientes y fríos.</target>
        </trans-unit>
        <trans-unit id="93dacaa1e7ab1044d9cdae673b25a3808eaccbc6" translate="yes" xml:space="preserve">
          <source>Dump after performing the machine dependent reorganization pass, if that pass exists.</source>
          <target state="translated">Desechar después de realizar el pase de reorganización dependiente de la máquina,si ese pase existe.</target>
        </trans-unit>
        <trans-unit id="b6bdb28476f2b3244c70b802b4bb64b0a7243f10" translate="yes" xml:space="preserve">
          <source>Dump after post-reload optimizations.</source>
          <target state="translated">Descarga después de las optimizaciones posteriores a la recarga.</target>
        </trans-unit>
        <trans-unit id="88e826a50b33b907232b8a297fb0c5a8f9b2749b" translate="yes" xml:space="preserve">
          <source>Dump after register renumbering.</source>
          <target state="translated">Desechar después de la renumeración del registro.</target>
        </trans-unit>
        <trans-unit id="ababff05976fea728752ca7d70fe16f292f0407d" translate="yes" xml:space="preserve">
          <source>Dump after removing redundant mode switches.</source>
          <target state="translated">Desechar después de quitar los interruptores de modo redundante.</target>
        </trans-unit>
        <trans-unit id="017c4f83a9a4f5ea41d958881b5ab4ae0e8a9034" translate="yes" xml:space="preserve">
          <source>Dump after shortening branches.</source>
          <target state="translated">Tirar después de acortar las ramas.</target>
        </trans-unit>
        <trans-unit id="b3771d727095e3610636bea776ecdc1fc695644e" translate="yes" xml:space="preserve">
          <source>Dump after sibling call optimizations.</source>
          <target state="translated">Optimización de llamadas entre hermanos.</target>
        </trans-unit>
        <trans-unit id="c8dbbab140317072ef733bc98b57dcf08d1828c7" translate="yes" xml:space="preserve">
          <source>Dump after sign/zero extension elimination.</source>
          <target state="translated">Eliminación de la extensión del signo/cero.</target>
        </trans-unit>
        <trans-unit id="e9bbcf22fbbd3795374ba7c5550d62449e5abb59" translate="yes" xml:space="preserve">
          <source>Dump after the RTL instruction combination pass.</source>
          <target state="translated">Desechar después del pase de combinación de la instrucción RTL.</target>
        </trans-unit>
        <trans-unit id="feffc80f8e62ccde9b555546a5afb7ff2768d0f7" translate="yes" xml:space="preserve">
          <source>Dump after the computation of the initial value sets.</source>
          <target state="translated">Volcado después del cálculo de los conjuntos de valores iniciales.</target>
        </trans-unit>
        <trans-unit id="5bf6c1aae6940dca8add6967093968d70664b454" translate="yes" xml:space="preserve">
          <source>Dump after the initialization of the registers.</source>
          <target state="translated">Desechar después de la inicialización de los registros.</target>
        </trans-unit>
        <trans-unit id="d22e8f2d8c89989fe194bf7d0b0983f1d445d944" translate="yes" xml:space="preserve">
          <source>Dump after the peephole pass.</source>
          <target state="translated">Tíralo después del paso por la mirilla.</target>
        </trans-unit>
        <trans-unit id="9201f61bd4694de8e9a9ab14f3cc717f0cf63945" translate="yes" xml:space="preserve">
          <source>Dump after the second jump optimization.</source>
          <target state="translated">Volcado después de la optimización del segundo salto.</target>
        </trans-unit>
        <trans-unit id="418c902efcddfdb022a1c7b5bf343ea52897c514" translate="yes" xml:space="preserve">
          <source>Dump after the standalone dead code elimination passes.</source>
          <target state="translated">Desechar después de que pase la eliminación del código muerto independiente.</target>
        </trans-unit>
        <trans-unit id="79702f60e31788035dc7ae01b75a7919074a5bce" translate="yes" xml:space="preserve">
          <source>Dump after variable tracking.</source>
          <target state="translated">Desechar después de un rastreo variable.</target>
        </trans-unit>
        <trans-unit id="907510a3aae3ec8d9be507f0c620d65e786ea7f0" translate="yes" xml:space="preserve">
          <source>Dump all macro definitions, at the end of preprocessing, in addition to normal output.</source>
          <target state="translated">Descarte todas las definiciones macro,al final del preprocesamiento,además de la salida normal.</target>
        </trans-unit>
        <trans-unit id="c5efd5b60f90b713fff2357c80d7db933b0250ab" translate="yes" xml:space="preserve">
          <source>Dump class hierarchy information. Virtual table information is emitted unless &amp;rsquo;</source>
          <target state="translated">Volcar informaci&amp;oacute;n de jerarqu&amp;iacute;a de clases. La informaci&amp;oacute;n de la tabla virtual se emite a menos que '</target>
        </trans-unit>
        <trans-unit id="7bc6ef641876378e44aa64caddde9a5c6398af12" translate="yes" xml:space="preserve">
          <source>Dump content of records.</source>
          <target state="translated">Vaciar el contenido de los registros.</target>
        </trans-unit>
        <trans-unit id="b65d037ae2af66afd4c389367c4bc6cdd9830974" translate="yes" xml:space="preserve">
          <source>Dump debugging information generated during the debug generation phase.</source>
          <target state="translated">Volcar la información de depuración generada durante la fase de generación de depuración.</target>
        </trans-unit>
        <trans-unit id="c9b2d27d13ca1550be85a391df7269704a34e8f9" translate="yes" xml:space="preserve">
          <source>Dump debugging information generated during the early debug generation phase.</source>
          <target state="translated">Volcar la información de depuración generada durante la fase de generación de depuración temprana.</target>
        </trans-unit>
        <trans-unit id="1abef1a2a1cc464ec73ba64187b2cddb0b1c7d96" translate="yes" xml:space="preserve">
          <source>Dump initial values of the variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5bde1ac03861eb7f209733ddfd1025c1c70bcf" translate="yes" xml:space="preserve">
          <source>Dump instruction size and location in the assembly code.</source>
          <target state="translated">Descarte el tamaño y la ubicación de la instrucción en el código de ensamblaje.</target>
        </trans-unit>
        <trans-unit id="754b569854e205d185835c2d9673785b92b6f32c" translate="yes" xml:space="preserve">
          <source>Dump interface declarations for all classes seen in the source file to a file named</source>
          <target state="translated">Volcar las declaraciones de la interfaz para todas las clases vistas en el archivo fuente a un archivo llamado</target>
        </trans-unit>
        <trans-unit id="71af018e18b101632a18de688096b3fe9f9a731e" translate="yes" xml:space="preserve">
          <source>Dump internal details about what the analyzer is doing to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e377d6eb44f5fb68248439a06aca414e07626287" translate="yes" xml:space="preserve">
          <source>Dump internal details about what the analyzer is doing to stderr. This option overrides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657cfbab09055c61a05bd93612f91cf2d2f1bab3" translate="yes" xml:space="preserve">
          <source>Dump only the defined symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e881c92154f92df37cd4957d4fba3b310ed362c0" translate="yes" xml:space="preserve">
          <source>Dump out a</source>
          <target state="translated">Deshazte de un</target>
        </trans-unit>
        <trans-unit id="72d2bf1fd50afe65e57f8ac99ba069fc8e23ed58" translate="yes" xml:space="preserve">
          <source>Dump positions of records.</source>
          <target state="translated">Tirar las posiciones de los registros.</target>
        </trans-unit>
        <trans-unit id="62f71366775032a269dc239f7ef38d5ece6fef12" translate="yes" xml:space="preserve">
          <source>Dump representations of the &amp;ldquo;supergraph&amp;rdquo; suitable for viewing with GraphViz to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ac4bde087663de0f3a006b963a6f5235611c2d" translate="yes" xml:space="preserve">
          <source>Dump the RTL in the assembler output as a comment before each instruction. Also turns on</source>
          <target state="translated">Vierta el RTL en la salida del ensamblador como un comentario antes de cada instrucción.También enciende</target>
        </trans-unit>
        <trans-unit id="0be5cff07653f79d7c01424690f5d095b8fcbb7d" translate="yes" xml:space="preserve">
          <source>Dump the demangled output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1726ca951812ad3322375de05b128457cc9a8ced" translate="yes" xml:space="preserve">
          <source>Dump the details of LTO objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171aa9511579073802041f0a2e60b1934e57be91" translate="yes" xml:space="preserve">
          <source>Dump the details of specific symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d265d5ceeb36fc58845a8b5aa258590ef02cc80" translate="yes" xml:space="preserve">
          <source>Dump the final internal representation (RTL) to &lt;var&gt;file&lt;/var&gt;. If the optional argument is omitted (or if &lt;var&gt;file&lt;/var&gt; is &lt;code&gt;.&lt;/code&gt;), the name of the dump file is determined by appending &lt;code&gt;.gkd&lt;/code&gt; to the compilation output file name.</source>
          <target state="translated">Vierta la representaci&amp;oacute;n interna final (RTL) al &lt;var&gt;file&lt;/var&gt; . Si se omite el argumento opcional (o si el &lt;var&gt;file&lt;/var&gt; es &lt;code&gt;.&lt;/code&gt; ), El nombre del archivo de volcado se determina agregando &lt;code&gt;.gkd&lt;/code&gt; al nombre del archivo de salida de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6290582c1c9788e12ed9d3f73eafdd3bbcd4abf7" translate="yes" xml:space="preserve">
          <source>Dump the raw internal tree data. This option is applicable to C++ only.</source>
          <target state="translated">Deshazte de los datos internos en bruto del árbol.Esta opción sólo es aplicable a C++.</target>
        </trans-unit>
        <trans-unit id="1afb37f8221633019abbbb6e4139e775923345d4" translate="yes" xml:space="preserve">
          <source>Dump the specific gimple body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1097bb2eea2f70c64d4c1cb70ed1c5ba583376" translate="yes" xml:space="preserve">
          <source>Dump the statistics of gimple statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4757ccb92c3f2e13c8881d180d079b3623ccf0" translate="yes" xml:space="preserve">
          <source>Dump the statistics of tree types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4cd598ed5041028b59e01e68f001fefceb7ea6" translate="yes" xml:space="preserve">
          <source>Dump the statistics of trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b93daf63f806cdb033463ad6f03043c2e411af3" translate="yes" xml:space="preserve">
          <source>Dump the symbols in order of occurrence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389f264332906b0c1d732e39c64a371de3b149c7" translate="yes" xml:space="preserve">
          <source>Dump the symbols in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c09bbbb574ea9794181ca0910564f4164221e71" translate="yes" xml:space="preserve">
          <source>Dumps information about call-graph optimization, unused function removal, and inlining decisions.</source>
          <target state="translated">Descarga la información sobre la optimización de los gráficos de llamada,la eliminación de funciones no utilizadas y la toma de decisiones en línea.</target>
        </trans-unit>
        <trans-unit id="3288dac3087a7accf2fa127698249b8034a173fa" translate="yes" xml:space="preserve">
          <source>Dumps list of details of functions and variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c057075d7f6d1311d665f05607d5a1143e726ae5" translate="yes" xml:space="preserve">
          <source>Duplicate instances of a template can be avoided by defining an explicit instantiation in one object file, and preventing the compiler from doing implicit instantiations in any other object files by using an explicit instantiation declaration, using the &lt;code&gt;extern template&lt;/code&gt; syntax:</source>
          <target state="translated">Las instancias duplicadas de una plantilla se pueden evitar definiendo una instanciaci&amp;oacute;n expl&amp;iacute;cita en un archivo de objeto y evitando que el compilador realice instancias impl&amp;iacute;citas en cualquier otro archivo de objeto mediante el uso de una declaraci&amp;oacute;n de instanciaci&amp;oacute;n expl&amp;iacute;cita, usando la sintaxis de &lt;code&gt;extern template&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="873001cb1e8e159e206fe4747ed8630083de92b7" translate="yes" xml:space="preserve">
          <source>During its analysis of function bodies, IPA-CP employs alias analysis in order to track values pointed to by function parameters. In order not spend too much time analyzing huge functions, it gives up and consider all memory clobbered after examining</source>
          <target state="translated">Durante su análisis de los órganos de función,la IPA-CP emplea un análisis de alias para rastrear los valores señalados por los parámetros de la función.Con el fin de no pasar demasiado tiempo analizando grandes funciones,se rinde y considera que toda la memoria golpeada después de examinar</target>
        </trans-unit>
        <trans-unit id="35ad8603f50d24cddaa26acc281e43114f0f03d6" translate="yes" xml:space="preserve">
          <source>During the incremental link (by</source>
          <target state="translated">Durante el enlace incremental (por</target>
        </trans-unit>
        <trans-unit id="6e5d8e172227784c44cef25322c1d84b5b1ed089" translate="yes" xml:space="preserve">
          <source>During the link-time optimization warn about type mismatches in global declarations from different compilation units. Requires</source>
          <target state="translated">Durante la optimización del tiempo de enlace advierte sobre los desajustes de tipo en las declaraciones globales de las diferentes unidades de compilación.Requiere</target>
        </trans-unit>
        <trans-unit id="3941436ae2dc30b7d71f0708c7f73c50626caec3" translate="yes" xml:space="preserve">
          <source>During the link-time optimization, do not warn about type mismatches in global declarations from different compilation units. Requires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed8a7568d4927beb8ca9fcc2f434426a2ed3775" translate="yes" xml:space="preserve">
          <source>Dynamic rounding mode. A field in the floating-point control register (&lt;var&gt;fpcr&lt;/var&gt;, see Alpha architecture reference manual) controls the rounding mode in effect. The C library initializes this register for rounding towards plus infinity. Thus, unless your program modifies the &lt;var&gt;fpcr&lt;/var&gt;, &amp;lsquo;</source>
          <target state="translated">Modo de redondeo din&amp;aacute;mico. Un campo en el registro de control de punto flotante ( &lt;var&gt;fpcr&lt;/var&gt; , consulte el manual de referencia de la arquitectura Alpha) controla el modo de redondeo en efecto. La biblioteca C inicializa este registro para redondear hacia m&amp;aacute;s infinito. Por lo tanto, a menos que su programa modifique el &lt;var&gt;fpcr&lt;/var&gt; , '</target>
        </trans-unit>
        <trans-unit id="ee61e1d4359d2101e0207f1f6ab138bc105fa253" translate="yes" xml:space="preserve">
          <source>Dynamically allocate condition code registers.</source>
          <target state="translated">Asignar dinámicamente registros de códigos de condición.</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="8424e737649ba7f5ce9529e01136274dd622c253" translate="yes" xml:space="preserve">
          <source>E+</source>
          <target state="translated">E+</target>
        </trans-unit>
        <trans-unit id="b86bd135c70e92d6b2051a988af8d8fd3b21cb67" translate="yes" xml:space="preserve">
          <source>E-</source>
          <target state="translated">E-</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="180b58cf69b13102962b17f297dd40af5fac3b7a" translate="yes" xml:space="preserve">
          <source>EAM register &lt;code&gt;mdb&lt;/code&gt;</source>
          <target state="translated">Registro EAM &lt;code&gt;mdb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4183eec55a2657bd56f5a3f286167e22c41277ca" translate="yes" xml:space="preserve">
          <source>EAM register &lt;code&gt;mdc&lt;/code&gt;</source>
          <target state="translated">Registro EAM &lt;code&gt;mdc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="042b890a506cb1f86b057af9f2065c60f0543326" translate="yes" xml:space="preserve">
          <source>ESC</source>
          <target state="translated">ESC</target>
        </trans-unit>
        <trans-unit id="db3a4c6dcbc964f457aa623cff604baca1fe6abf" translate="yes" xml:space="preserve">
          <source>ESC \</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef29ed353f79614b0af0aa06877e0e8365ad41a3" translate="yes" xml:space="preserve">
          <source>EV</source>
          <target state="translated">EV</target>
        </trans-unit>
        <trans-unit id="8404c13b819cbc829893e6fcf7e6b011dc8afafa" translate="yes" xml:space="preserve">
          <source>EXEC register (EXEC_LO and EXEC_HI)</source>
          <target state="translated">Registro EXEC (EXEC_LO y EXEC_HI)</target>
        </trans-unit>
        <trans-unit id="3633746b067241666bc462dcfe7a24ff23a8db68" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="translated">Each</target>
        </trans-unit>
        <trans-unit id="ec76a07122ba99b0a9685803ebd0fcbd4bc2bfc8" translate="yes" xml:space="preserve">
          <source>Each &amp;lsquo;</source>
          <target state="translated">Cada '</target>
        </trans-unit>
        <trans-unit id="7a238e89c65aac1db813f790141cd6a1706499a7" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;branch&lt;/var&gt; has the following form:</source>
          <target state="translated">Cada &lt;var&gt;branch&lt;/var&gt; tiene la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="3994e33e5e0917632f9e9de329b4a0f3ad3998af" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;file&lt;/var&gt; has the following form:</source>
          <target state="translated">Cada &lt;var&gt;file&lt;/var&gt; tiene la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="c75857c9773e24edc3bfc44893ae2b0b910e079d" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;function&lt;/var&gt; has the following form:</source>
          <target state="translated">Cada &lt;var&gt;function&lt;/var&gt; tiene la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="62acae4631fd900e861a22b9b523800b0a789662" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;line&lt;/var&gt; has the following form:</source>
          <target state="translated">Cada &lt;var&gt;line&lt;/var&gt; tiene la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="1c50fb88397b0c7346926cd4cd765575f7023e36" translate="yes" xml:space="preserve">
          <source>Each architecture defines additional constraints. These constraints are used by the compiler itself for instruction generation, as well as for &lt;code&gt;asm&lt;/code&gt; statements; therefore, some of the constraints are not particularly useful for &lt;code&gt;asm&lt;/code&gt;. Here is a summary of some of the machine-dependent constraints available on some particular machines; it includes both constraints that are useful for &lt;code&gt;asm&lt;/code&gt; and constraints that aren&amp;rsquo;t. The compiler source file mentioned in the table heading for each architecture is the definitive reference for the meanings of that architecture&amp;rsquo;s constraints.</source>
          <target state="translated">Cada arquitectura define restricciones adicionales. Estas restricciones son utilizadas por el propio compilador para la generaci&amp;oacute;n de instrucciones, as&amp;iacute; como para declaraciones &lt;code&gt;asm&lt;/code&gt; ; por lo tanto, algunas de las restricciones no son particularmente &amp;uacute;tiles para &lt;code&gt;asm&lt;/code&gt; . Aqu&amp;iacute; hay un resumen de algunas de las restricciones dependientes de la m&amp;aacute;quina disponibles en algunas m&amp;aacute;quinas en particular; incluye tanto restricciones que son &amp;uacute;tiles para &lt;code&gt;asm&lt;/code&gt; como restricciones que no lo son. El archivo fuente del compilador mencionado en el encabezado de la tabla para cada arquitectura es la referencia definitiva para los significados de las restricciones de esa arquitectura.</target>
        </trans-unit>
        <trans-unit id="9a8f7e527e362e2f465669113fa77cfedd4d35d0" translate="yes" xml:space="preserve">
          <source>Each argument to the macro appears only once in the expansion of the macro. This prevents the size of the macro expansion growing exponentially when calls to such macros are nested inside arguments of such macros.</source>
          <target state="translated">Cada argumento a la macro aparece sólo una vez en la expansión de la macro.Esto evita que el tamaño de la expansión del macro crezca exponencialmente cuando las llamadas a tales macros se anidan dentro de los argumentos de tales macros.</target>
        </trans-unit>
        <trans-unit id="76b41f32117ccc7bbc36f4b00ab7cb610cec2b62" translate="yes" xml:space="preserve">
          <source>Each argument, with the type encoding, followed by the offset (in bytes) of the argument in the list of parameters.</source>
          <target state="translated">Cada argumento,con el tipo de codificación,seguido por el desplazamiento (en bytes)del argumento en la lista de parámetros.</target>
        </trans-unit>
        <trans-unit id="e6b2353f285a19086a3e061a5dcfed498d63a240" translate="yes" xml:space="preserve">
          <source>Each identifier is visible from where it is declared until the end of the enclosing block.</source>
          <target state="translated">Cada identificador es visible desde donde se declara hasta el final del bloque de cierre.</target>
        </trans-unit>
        <trans-unit id="01e3221d2b21a8f447ed5a0ced29ddbea2cbee30" translate="yes" xml:space="preserve">
          <source>Each implementation shall include documentation that identifies all conditionally-supported constructs that it does not support (C++0x 1.4).</source>
          <target state="translated">Cada implementación incluirá documentación que identifique todas las construcciones apoyadas condicionalmente que no apoye (C++0x 1.4).</target>
        </trans-unit>
        <trans-unit id="701d795fb8ee42f93e3f4a253aa01935ee62e44d" translate="yes" xml:space="preserve">
          <source>Each kind of machine has a default for what &lt;code&gt;char&lt;/code&gt; should be. It is either like &lt;code&gt;unsigned char&lt;/code&gt; by default or like &lt;code&gt;signed char&lt;/code&gt; by default.</source>
          <target state="translated">Cada tipo de m&amp;aacute;quina tiene un valor predeterminado para el &lt;code&gt;char&lt;/code&gt; deber&amp;iacute;a ser. Es como un &lt;code&gt;unsigned char&lt;/code&gt; por defecto o como un &lt;code&gt;signed char&lt;/code&gt; por defecto.</target>
        </trans-unit>
        <trans-unit id="ef05478f4365f65d0ddfa7b0d492a5a495d01714" translate="yes" xml:space="preserve">
          <source>Each of the following options must be the same when building and using the precompiled header:</source>
          <target state="translated">Cada una de las siguientes opciones debe ser la misma cuando se construye y se usa la cabecera precompilada:</target>
        </trans-unit>
        <trans-unit id="12375fa3bc94216fddfb3082e628f5277fd37349" translate="yes" xml:space="preserve">
          <source>Each of these represents a register constraint for an individual register, from r0 to r10.</source>
          <target state="translated">Cada una de ellas representa una restricción de registro para un registro individual,de r0 a r10.</target>
        </trans-unit>
        <trans-unit id="c7c856c52d5df36a325270b79c39dbe4777d924c" translate="yes" xml:space="preserve">
          <source>Each target machine supported by GCC can have its own options&amp;mdash;for example, to allow you to compile for a particular processor variant or ABI, or to control optimizations specific to that machine. By convention, the names of machine-specific options start with &amp;lsquo;</source>
          <target state="translated">Cada m&amp;aacute;quina de destino admitida por GCC puede tener sus propias opciones, por ejemplo, para permitirle compilar para una variante de procesador particular o ABI, o para controlar optimizaciones espec&amp;iacute;ficas para esa m&amp;aacute;quina. Por convenci&amp;oacute;n, los nombres de las opciones espec&amp;iacute;ficas de la m&amp;aacute;quina comienzan con '</target>
        </trans-unit>
        <trans-unit id="e1bf5c8e09d672f359406f3ca337be92c84db460" translate="yes" xml:space="preserve">
          <source>Each variable&amp;rsquo;s value is a list of directories separated by a special character, much like &lt;code&gt;PATH&lt;/code&gt;, in which to look for header files. The special character, &lt;code&gt;PATH_SEPARATOR&lt;/code&gt;, is target-dependent and determined at GCC build time. For Microsoft Windows-based targets it is a semicolon, and for almost all other targets it is a colon.</source>
          <target state="translated">El valor de cada variable es una lista de directorios separados por un car&amp;aacute;cter especial, muy parecido a &lt;code&gt;PATH&lt;/code&gt; , en el que buscar archivos de encabezado. El car&amp;aacute;cter especial, &lt;code&gt;PATH_SEPARATOR&lt;/code&gt; , depende del objetivo y se determina en el momento de la compilaci&amp;oacute;n de GCC. Para los destinos basados ​​en Microsoft Windows, es un punto y coma, y ​​para casi todos los dem&amp;aacute;s destinos es dos puntos.</target>
        </trans-unit>
        <trans-unit id="9fc7669bba8b360ced14bcd0e63ab75ab5c8df7f" translate="yes" xml:space="preserve">
          <source>Embedded statements are not allowed in constant expressions, such as the value of an enumeration constant, the width of a bit-field, or the initial value of a static variable.</source>
          <target state="translated">No se permiten declaraciones incrustadas en expresiones constantes,como el valor de una constante de enumeración,el ancho de un campo de bits o el valor inicial de una variable estática.</target>
        </trans-unit>
        <trans-unit id="948e9b48ea593e051a4153362a7090d684f2c222" translate="yes" xml:space="preserve">
          <source>Emit (do not emit) RISC-V attribute to record extra information into ELF objects. This feature requires at least binutils 2.32.</source>
          <target state="translated">Emitir (no emitir)el atributo RISC-V para registrar información extra en los objetos ELF.Esta característica requiere al menos la binutilación 2.32.</target>
        </trans-unit>
        <trans-unit id="070ac08031f3d1c435e4576ba37695a82ca0786d" translate="yes" xml:space="preserve">
          <source>Emit (do not emit) code that allows &lt;code&gt;_mcount&lt;/code&gt; to modify the calling function&amp;rsquo;s return address. When enabled, this option extends the usual &lt;code&gt;_mcount&lt;/code&gt; interface with a new &lt;var&gt;ra-address&lt;/var&gt; parameter, which has type &lt;code&gt;intptr_t *&lt;/code&gt; and is passed in register &lt;code&gt;$12&lt;/code&gt;. &lt;code&gt;_mcount&lt;/code&gt; can then modify the return address by doing both of the following:</source>
          <target state="translated">Emite (no emite) c&amp;oacute;digo que permite a &lt;code&gt;_mcount&lt;/code&gt; modificar la direcci&amp;oacute;n de retorno de la funci&amp;oacute;n de llamada. Cuando est&amp;aacute; habilitada, esta opci&amp;oacute;n extiende la interfaz &lt;code&gt;_mcount&lt;/code&gt; habitual con un nuevo par&amp;aacute;metro de &lt;var&gt;ra-address&lt;/var&gt; , que tiene el tipo &lt;code&gt;intptr_t *&lt;/code&gt; y se pasa en el registro &lt;code&gt;$12&lt;/code&gt; . &lt;code&gt;_mcount&lt;/code&gt; puede modificar la direcci&amp;oacute;n de devoluci&amp;oacute;n haciendo lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ff5e30537593e35e64b6a16b2c1bdbe42c087863" translate="yes" xml:space="preserve">
          <source>Emit .gnu_attribute assembly directives to set tag/value pairs in a .gnu.attributes section that specify ABI variations in function parameters or return values.</source>
          <target state="translated">Emitir directivas de ensamblaje de atributos .gnu para establecer pares de etiquetas/valores en una sección de atributos .gnu que especifiquen las variaciones ABI de los parámetros de la función o los valores de retorno.</target>
        </trans-unit>
        <trans-unit id="20bf9a915993aa5a7a1666c72b879d8cd3f7ac3e" translate="yes" xml:space="preserve">
          <source>Emit &lt;code&gt;.stack_size&lt;/code&gt; directives for each function in the assembly output. This option defaults to off.</source>
          <target state="translated">Emit &lt;code&gt;.stack_size&lt;/code&gt; directivas para cada funci&amp;oacute;n en la salida de montaje. Esta opci&amp;oacute;n est&amp;aacute; desactivada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="2f04fa21301da1a9e382b512bcad8e362a751619" translate="yes" xml:space="preserve">
          <source>Emit &lt;code&gt;static&lt;/code&gt; functions into the object file, even if the function is never used.</source>
          <target state="translated">Emite funciones &lt;code&gt;static&lt;/code&gt; en el archivo de objeto, incluso si la funci&amp;oacute;n nunca se usa.</target>
        </trans-unit>
        <trans-unit id="cb38e0a4e398a1b8eae664d56e6c229db862f612" translate="yes" xml:space="preserve">
          <source>Emit &lt;var&gt;num&lt;/var&gt; NOPs before every other generated instruction.</source>
          <target state="translated">Emitir &lt;var&gt;num&lt;/var&gt; NOP antes de cada otra instrucci&amp;oacute;n generada.</target>
        </trans-unit>
        <trans-unit id="3da3562e4f5b4b2c349aec3c276d4ecf1abb3a7e" translate="yes" xml:space="preserve">
          <source>Emit DWARF unwind info as compiler generated &lt;code&gt;.eh_frame&lt;/code&gt; section instead of using GAS &lt;code&gt;.cfi_*&lt;/code&gt; directives.</source>
          <target state="translated">Emitir informaci&amp;oacute;n de desenrollado DWARF como la secci&amp;oacute;n &lt;code&gt;.eh_frame&lt;/code&gt; generada por el compilador en lugar de utilizar las directivas GAS &lt;code&gt;.cfi_*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="661cfa361d4a5be25ea38381adeec0544f3162ba" translate="yes" xml:space="preserve">
          <source>Emit a special marker instructing &lt;code&gt;ld(1)&lt;/code&gt; not to statically link in the resulting object file, and allow &lt;code&gt;dyld(1)&lt;/code&gt; to load it in at run time instead. This is used in conjunction with the Fix-and-Continue debugging mode, where the object file in question may be recompiled and dynamically reloaded in the course of program execution, without the need to restart the program itself. Currently, Fix-and-Continue functionality is only available in conjunction with the NeXT runtime on Mac OS X 10.3 and later.</source>
          <target state="translated">Emita un marcador especial que indique a &lt;code&gt;ld(1)&lt;/code&gt; no se vincule est&amp;aacute;ticamente en el archivo de objeto resultante y permita que &lt;code&gt;dyld(1)&lt;/code&gt; cargue en tiempo de ejecuci&amp;oacute;n. Esto se usa junto con el modo de depuraci&amp;oacute;n Fix-and-Continue, donde el archivo de objeto en cuesti&amp;oacute;n puede recompilarse y recargarse din&amp;aacute;micamente en el curso de la ejecuci&amp;oacute;n del programa, sin la necesidad de reiniciar el programa. Actualmente, la funcionalidad Reparar y continuar solo est&amp;aacute; disponible junto con el tiempo de ejecuci&amp;oacute;n NeXT en Mac OS X 10.3 y posteriores.</target>
        </trans-unit>
        <trans-unit id="7e8645e36e17a7945813986a8d0a71d3821820d0" translate="yes" xml:space="preserve">
          <source>Emit a warning if the current function exceeds the given frame size. Because this is a compile-time check it doesn&amp;rsquo;t need to be a real problem when the program runs. It is intended to identify functions that most probably cause a stack overflow. It is useful to be used in an environment with limited stack size e.g. the linux kernel.</source>
          <target state="translated">Emite una advertencia si la funci&amp;oacute;n actual excede el tama&amp;ntilde;o de marco dado. Debido a que se trata de una verificaci&amp;oacute;n en tiempo de compilaci&amp;oacute;n, no tiene por qu&amp;eacute; ser un problema real cuando se ejecuta el programa. Su objetivo es identificar funciones que probablemente causen un desbordamiento de pila. Es &amp;uacute;til para ser utilizado en un entorno con un tama&amp;ntilde;o de pila limitado, por ejemplo, el kernel de Linux.</target>
        </trans-unit>
        <trans-unit id="e60a4bf4bc37e66d9947816b7195c8391e4776d0" translate="yes" xml:space="preserve">
          <source>Emit a warning if the function calls &lt;code&gt;alloca&lt;/code&gt; or uses dynamically-sized arrays. This is generally a bad idea with a limited stack size.</source>
          <target state="translated">Emite una advertencia si la funci&amp;oacute;n llama a &lt;code&gt;alloca&lt;/code&gt; o usa matrices de tama&amp;ntilde;o din&amp;aacute;mico. Esta es generalmente una mala idea con un tama&amp;ntilde;o de pila limitado.</target>
        </trans-unit>
        <trans-unit id="9b489883dd494ef67ae3146bb7729487672712a9" translate="yes" xml:space="preserve">
          <source>Emit callgraph information.</source>
          <target state="translated">Emitir información de caligrafía.</target>
        </trans-unit>
        <trans-unit id="f2b5ec1d50c73d9342d0da2e8de77ea3e8b06bfb" translate="yes" xml:space="preserve">
          <source>Emit debug information for struct-like types only when the base name of the compilation source file matches the base name of file in which the struct is defined.</source>
          <target state="translated">Emitir la información de depuración para los tipos de estructura sólo cuando el nombre base del archivo fuente de compilación coincida con el nombre base del archivo en el que se define la estructura.</target>
        </trans-unit>
        <trans-unit id="ea8ad7a3ce89000c68597a212e3b7e178630bf37" translate="yes" xml:space="preserve">
          <source>Emit debug information for struct-like types only when the base name of the compilation source file matches the base name of file in which the type is defined, unless the struct is a template or defined in a system header.</source>
          <target state="translated">Emitir información de depuración para los tipos tipo struct-like sólo cuando el nombre base del archivo fuente de compilación coincida con el nombre base del archivo en el que se define el tipo,a menos que la estructura sea una plantilla o esté definida en una cabecera del sistema.</target>
        </trans-unit>
        <trans-unit id="bcf9409c139607d0741250959d86960d9d3fc823" translate="yes" xml:space="preserve">
          <source>Emit debugging information for all symbols and types.</source>
          <target state="translated">Emitir información de depuración para todos los símbolos y tipos.</target>
        </trans-unit>
        <trans-unit id="8a7c3f8e8609e257b077878b6041fc34297f5e52" translate="yes" xml:space="preserve">
          <source>Emit debugging information for symbols that are used. For stabs debugging format, this enables</source>
          <target state="translated">Emitir información de depuración para los símbolos que se utilizan.Para el formato de depuración de stabs,esto permite</target>
        </trans-unit>
        <trans-unit id="c7be7022731d1d4e89f739d3f084947002265870" translate="yes" xml:space="preserve">
          <source>Emit diagnostics showing where nodes in the &amp;ldquo;exploded graph&amp;rdquo; are in relation to the program source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01323833aaf7728ad582d052fc8f41810ddeadf" translate="yes" xml:space="preserve">
          <source>Emit extra code to check for buffer overflows, such as stack smashing attacks. This is done by adding a guard variable to functions with vulnerable objects. This includes functions that call &lt;code&gt;alloca&lt;/code&gt;, and functions with buffers larger than 8 bytes. The guards are initialized when a function is entered and then checked when the function exits. If a guard check fails, an error message is printed and the program exits.</source>
          <target state="translated">Emite c&amp;oacute;digo adicional para comprobar si hay desbordamientos de b&amp;uacute;fer, como ataques de aplastamiento de pila. Esto se hace agregando una variable de protecci&amp;oacute;n a las funciones con objetos vulnerables. Esto incluye funciones que llaman a &lt;code&gt;alloca&lt;/code&gt; y funciones con b&amp;uacute;feres de m&amp;aacute;s de 8 bytes. Las protecciones se inicializan cuando se ingresa una funci&amp;oacute;n y luego se verifican cuando la funci&amp;oacute;n sale. Si falla una verificaci&amp;oacute;n de guardia, se imprime un mensaje de error y el programa se cierra.</target>
        </trans-unit>
        <trans-unit id="0b4704d417754dd3e2fa8536b703ca97736ecd33" translate="yes" xml:space="preserve">
          <source>Emit extra code to check for buffer overflows, such as stack smashing attacks. This is done by adding a guard variable to functions with vulnerable objects. This includes functions that call &lt;code&gt;alloca&lt;/code&gt;, and functions with buffers larger than or equal to 8 bytes. The guards are initialized when a function is entered and then checked when the function exits. If a guard check fails, an error message is printed and the program exits. Only variables that are actually allocated on the stack are considered, optimized away variables or variables allocated in registers don&amp;rsquo;t count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141c4b8396ef386665e92dca002cbfbddd934501" translate="yes" xml:space="preserve">
          <source>Emit fix-it hints in a machine-parseable format, suitable for consumption by IDEs. For each fix-it, a line will be printed after the relevant diagnostic, starting with the string &amp;ldquo;fix-it:&amp;rdquo;. For example:</source>
          <target state="translated">Emite sugerencias de correcci&amp;oacute;n de errores en un formato analizable por m&amp;aacute;quina, apto para el consumo de IDE. Para cada fix-it, se imprimir&amp;aacute; una l&amp;iacute;nea despu&amp;eacute;s del diagn&amp;oacute;stico correspondiente, comenzando con la cadena &quot;fix-it:&quot;. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1a5a47bca88794809e7e2a3bb7e287c60614c83b" translate="yes" xml:space="preserve">
          <source>Emit function prologues only before parts of the function that need it, rather than at the top of the function. This flag is enabled by default at</source>
          <target state="translated">Emitir la función prologa sólo antes de las partes de la función que lo necesitan,en lugar de en la parte superior de la función.Esta bandera está habilitada por defecto en</target>
        </trans-unit>
        <trans-unit id="7a29575e26772eb5ddc3404ae8049245b33348e5" translate="yes" xml:space="preserve">
          <source>Emit location column information into DWARF debugging information, rather than just file and line. This option is enabled by default.</source>
          <target state="translated">Emitir la información de la columna de localización en la información de depuración de DWARF,en lugar de sólo archivo y línea.Esta opción está activada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="669b4b85cda6e8d55a22a680d295c7c66356a584" translate="yes" xml:space="preserve">
          <source>Emit perf-like colored output for hot lines. Legend of the color scale is printed at the very beginning of the output file.</source>
          <target state="translated">Emite una salida de color similar a la de los peros para las líneas calientes.La leyenda de la escala de colores se imprime al principio del archivo de salida.</target>
        </trans-unit>
        <trans-unit id="bf88babe6e871b26c963f43a03a560a58bbbd726" translate="yes" xml:space="preserve">
          <source>Emit statistics about front-end processing at the end of the compilation. This option is supported only by the C++ front end, and the information is generally only useful to the G++ development team.</source>
          <target state="translated">Emitir estadísticas sobre el procesamiento de la interfaz al final de la compilación.Esta opción sólo está soportada por el front-end de C++,y la información generalmente sólo es útil para el equipo de desarrollo de G++.</target>
        </trans-unit>
        <trans-unit id="986149807dd103440d26581e0c8034fe654a931b" translate="yes" xml:space="preserve">
          <source>Emit variables declared &lt;code&gt;static const&lt;/code&gt; when optimization isn&amp;rsquo;t turned on, even if the variables aren&amp;rsquo;t referenced.</source>
          <target state="translated">Emite variables declaradas &lt;code&gt;static const&lt;/code&gt; cuando la optimizaci&amp;oacute;n no est&amp;aacute; activada, incluso si no se hace referencia a las variables.</target>
        </trans-unit>
        <trans-unit id="7039662b9ecdfee8f51909b1bca797f2d5646847" translate="yes" xml:space="preserve">
          <source>Empty. Empty attributes are ignored.</source>
          <target state="translated">Vacío.Los atributos vacíos son ignorados.</target>
        </trans-unit>
        <trans-unit id="dee5764f5fbac8ea9eadf819b59721dd60ce4b7b" translate="yes" xml:space="preserve">
          <source>En_US</source>
          <target state="translated">En_US</target>
        </trans-unit>
        <trans-unit id="20063ad9053289cecaa20ae630ed2dd758282a07" translate="yes" xml:space="preserve">
          <source>Enable</source>
          <target state="translated">Enable</target>
        </trans-unit>
        <trans-unit id="4fa0f6fb6e440f220b80c6c2d4888a44c80062d9" translate="yes" xml:space="preserve">
          <source>Enable &amp;lsquo;</source>
          <target state="translated">Habilitar '</target>
        </trans-unit>
        <trans-unit id="e92d7b5eafccf1d9c2c8bae0da3467a97bfe43eb" translate="yes" xml:space="preserve">
          <source>Enable (disable) an optimization that pairs consecutive load or store instructions to enable load/store bonding. This option is enabled by default but only takes effect when the selected architecture is known to support bonding.</source>
          <target state="translated">Habilitar (deshabilitar)una optimización que empareja instrucciones de carga o almacenamiento consecutivas para habilitar la unión de carga/almacenamiento.Esta opción está habilitada de forma predeterminada,pero sólo tiene efecto cuando se sabe que la arquitectura seleccionada soporta la vinculación.</target>
        </trans-unit>
        <trans-unit id="a5876c1f4b70b8a6258f54ff9e4b48ce21c8e2cc" translate="yes" xml:space="preserve">
          <source>Enable (disable) frame header optimization in the o32 ABI. When using the o32 ABI, calling functions will allocate 16 bytes on the stack for the called function to write out register arguments. When enabled, this optimization will suppress the allocation of the frame header if it can be determined that it is unused.</source>
          <target state="translated">Habilitar (deshabilitar)la optimización de la cabecera del cuadro en el ABI o32.Cuando se utiliza la ABI de o32,las funciones de llamada asignarán 16 bytes en la pila para que la función llamada escriba argumentos de registro.Cuando se habilite,esta optimización suprimirá la asignación de la cabecera de la trama si se puede determinar que no se utiliza.</target>
        </trans-unit>
        <trans-unit id="69fa958a8a2e61f2783ede1c3821c1af600c12f1" translate="yes" xml:space="preserve">
          <source>Enable (disable) generation of &lt;code&gt;synci&lt;/code&gt; instructions on architectures that support it. The &lt;code&gt;synci&lt;/code&gt; instructions (if enabled) are generated when &lt;code&gt;__builtin___clear_cache&lt;/code&gt; is compiled.</source>
          <target state="translated">Habilite (deshabilite) la generaci&amp;oacute;n de instrucciones de &lt;code&gt;synci&lt;/code&gt; en arquitecturas que lo admitan. Las instrucciones de &lt;code&gt;synci&lt;/code&gt; (si est&amp;aacute;n habilitadas) se generan cuando se compila &lt;code&gt;__builtin___clear_cache&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="affa7a90abe6524cdcc085355a0cf87de25de669" translate="yes" xml:space="preserve">
          <source>Enable (disable) the use of the built-in functions that allow direct access to the Hardware Transactional Memory (HTM) instructions that were added in version 2.07 of the PowerPC ISA.</source>
          <target state="translated">Habilitar (deshabilitar)el uso de las funciones incorporadas que permiten el acceso directo a las instrucciones de la Memoria Transaccional del Hardware (HTM)que fueron añadidas en la versión 2.07 del PowerPC ISA.</target>
        </trans-unit>
        <trans-unit id="a9d43112761b398944fa6b8aebeadd62b27a6873" translate="yes" xml:space="preserve">
          <source>Enable (disable) use of the &lt;code&gt;%hi()&lt;/code&gt; and &lt;code&gt;%lo()&lt;/code&gt; assembler relocation operators. This option has been superseded by</source>
          <target state="translated">Habilite (deshabilite) el uso de los operadores de reubicaci&amp;oacute;n del ensamblador &lt;code&gt;%hi()&lt;/code&gt; y &lt;code&gt;%lo()&lt;/code&gt; . Esta opci&amp;oacute;n ha sido reemplazada por</target>
        </trans-unit>
        <trans-unit id="22e717c26fa88a4531e1982fba5a0708a2d39b81" translate="yes" xml:space="preserve">
          <source>Enable (disable) use of the &lt;code&gt;mad&lt;/code&gt;, &lt;code&gt;madu&lt;/code&gt; and &lt;code&gt;mul&lt;/code&gt; instructions, as provided by the R4650 ISA.</source>
          <target state="translated">Habilite (deshabilite) el uso de las instrucciones &lt;code&gt;mad&lt;/code&gt; , &lt;code&gt;madu&lt;/code&gt; y &lt;code&gt;mul&lt;/code&gt; , tal como las proporciona el ISA R4650.</target>
        </trans-unit>
        <trans-unit id="d7e0884ba3d3cc932c864d47a1ad9e75ce9d3f27" translate="yes" xml:space="preserve">
          <source>Enable (disable) use of the &lt;code&gt;madd&lt;/code&gt; and &lt;code&gt;msub&lt;/code&gt; integer instructions. The default is</source>
          <target state="translated">Habilite (deshabilite) el uso de las instrucciones de enteros &lt;code&gt;madd&lt;/code&gt; y &lt;code&gt;msub&lt;/code&gt; . El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="fb69f64525577d36a129060c4be04db4c7157197" translate="yes" xml:space="preserve">
          <source>Enable (disable) use of the floating-point multiply-accumulate instructions, when they are available. The default is</source>
          <target state="translated">Habilitar (deshabilitar)el uso de las instrucciones de multiplicar y acumular en punto flotante,cuando estén disponibles.El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="b555e3f0b555bfa87127103aa19a5b771c06eb1e" translate="yes" xml:space="preserve">
          <source>Enable 32-bit Floating point Matrix Multiply instructions. This also enables SVE instructions. Use of this option with architectures prior to Armv8.2-A is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72dea94649019bb860dd9ef3c4021f60f45fa32" translate="yes" xml:space="preserve">
          <source>Enable 64-bit AIX ABI and calling convention: 64-bit pointers, 64-bit &lt;code&gt;long&lt;/code&gt; type, and the infrastructure needed to support them. Specifying</source>
          <target state="translated">Habilite la ABI de AIX de 64 bits y la convenci&amp;oacute;n de llamadas: punteros de 64 bits , tipo &lt;code&gt;long&lt;/code&gt; 64 bits y la infraestructura necesaria para admitirlos. Especificando</target>
        </trans-unit>
        <trans-unit id="7b3c726da78dba7ee2a5726b767895d7cdc32731" translate="yes" xml:space="preserve">
          <source>Enable 64-bit Floating point Matrix Multiply instructions. This also enables SVE instructions. Use of this option with architectures prior to Armv8.2-A is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ded79f10cf70cf5831bdeffd10c676f4e368113" translate="yes" xml:space="preserve">
          <source>Enable 8-bit Integer Matrix Multiply instructions. This also enables Advanced SIMD and floating-point instructions. This option is enabled by default for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bed769cd5303c03eac96915f98c0018f45868e" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;div&lt;/code&gt; and &lt;code&gt;rem&lt;/code&gt; instructions for ARCv2 cores.</source>
          <target state="translated">Habilite las instrucciones &lt;code&gt;div&lt;/code&gt; y &lt;code&gt;rem&lt;/code&gt; para los n&amp;uacute;cleos ARCv2.</target>
        </trans-unit>
        <trans-unit id="2b739befdde9d37b726baa741659e214041a11f0" translate="yes" xml:space="preserve">
          <source>Enable AddressSanitizer for Linux kernel. See &lt;a href=&quot;https://github.com/google/kasan/wiki&quot;&gt;https://github.com/google/kasan/wiki&lt;/a&gt; for more details.</source>
          <target state="translated">Habilite AddressSanitizer para el kernel de Linux. Consulte &lt;a href=&quot;https://github.com/google/kasan/wiki&quot;&gt;https://github.com/google/kasan/wiki&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="dd5750bb548742f5f6797880a8c614d311fe2963" translate="yes" xml:space="preserve">
          <source>Enable AddressSanitizer, a fast memory error detector. Memory access instructions are instrumented to detect out-of-bounds and use-after-free bugs. The option enables</source>
          <target state="translated">Habilitar el AddressSanitizer,un detector rápido de errores de memoria.Las instrucciones de acceso a la memoria están instrumentadas para detectar errores fuera de los límites y de uso.La opción permite</target>
        </trans-unit>
        <trans-unit id="b884f9df2c0fdf875f501de19eb4a43163aded4e" translate="yes" xml:space="preserve">
          <source>Enable Advanced SIMD instructions. This also enables floating-point instructions. This is on by default for all possible values for options</source>
          <target state="translated">Habilitar las instrucciones de la SIMD avanzada.Esto también permite instrucciones de punto flotante.Esto está activado por defecto para todos los valores posibles de las opciones</target>
        </trans-unit>
        <trans-unit id="1737ee87e4af9d47c80e040e08ffbf40c4cf4499" translate="yes" xml:space="preserve">
          <source>Enable C-SKY DSP, Enhanced DSP, or Vector DSP instructions, respectively. All of these options default to off.</source>
          <target state="translated">Habilitar las instrucciones de DSP C-SKY,DSP mejorado o DSP vectorial,respectivamente.Todas estas opciones están desactivadas por defecto.</target>
        </trans-unit>
        <trans-unit id="460dd2625e669a6da5fd8971a359142b70341354" translate="yes" xml:space="preserve">
          <source>Enable C-SKY security instructions; the default is off.</source>
          <target state="translated">Habilitar las instrucciones de seguridad de C-SKY;el valor por defecto es off.</target>
        </trans-unit>
        <trans-unit id="be1993c993457eac4e123ff5ca8683dff8eb6707" translate="yes" xml:space="preserve">
          <source>Enable C-SKY trust instructions; the default is off.</source>
          <target state="translated">Habilitar las instrucciones de confianza de C-SKY;el valor por defecto es apagado.</target>
        </trans-unit>
        <trans-unit id="db19cd91956a3cc7c7ec589751c003754ab24a04" translate="yes" xml:space="preserve">
          <source>Enable CFG-sensitive rematerialization in LRA. Instead of loading values of spilled pseudos, LRA tries to rematerialize (recalculate) values if it is profitable.</source>
          <target state="translated">Habilitar la rematerialización sensible a los CFG en el LRA.En lugar de cargar valores de pseudo-derramientos,el LRA intenta rematerializar (recalcular)los valores si es rentable.</target>
        </trans-unit>
        <trans-unit id="3228c63b76a89731a999face742dbc8e98e43fb7" translate="yes" xml:space="preserve">
          <source>Enable CRC extension. This is on by default for</source>
          <target state="translated">Habilitar la extensión de la CRC.Esto está activado por defecto para</target>
        </trans-unit>
        <trans-unit id="6f57bb69abaacf2d80f6a8ad9ba44e14d8d03b75" translate="yes" xml:space="preserve">
          <source>Enable CRIS-specific verbose debug-related information in the assembly code. This option also has the effect of turning off the &amp;lsquo;</source>
          <target state="translated">Habilite la informaci&amp;oacute;n detallada relacionada con la depuraci&amp;oacute;n espec&amp;iacute;fica de CRIS en el c&amp;oacute;digo ensamblador. Esta opci&amp;oacute;n tambi&amp;eacute;n tiene el efecto de apagar el '</target>
        </trans-unit>
        <trans-unit id="a77b829448e4eeb6288384fb17669c5c039a4b5e" translate="yes" xml:space="preserve">
          <source>Enable Crypto extension. This also enables Advanced SIMD and floating-point instructions.</source>
          <target state="translated">Activar la extensión de Crypto.Esto también habilita el SIMD avanzado y las instrucciones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="c34f6f6c7e11aa9f0332985736de3e72e193f5ba" translate="yes" xml:space="preserve">
          <source>Enable FP16 extension. This also enables floating-point instructions.</source>
          <target state="translated">Habilite la extensión del FP16.Esto también permite instrucciones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="2babb7d5abaf4060eeca52d7ae4316df315816d6" translate="yes" xml:space="preserve">
          <source>Enable FP16 fmla extension. This also enables FP16 extensions and floating-point instructions. This option is enabled by default for</source>
          <target state="translated">Habilite la extensión del FP16 fmla.Esto también habilita las extensiones del FP16 y las instrucciones de punto flotante.Esta opción está habilitada por defecto para</target>
        </trans-unit>
        <trans-unit id="3a8ba9a41b704d15493ebc76a0b1f017540a81f2" translate="yes" xml:space="preserve">
          <source>Enable IPA pass &lt;var&gt;pass&lt;/var&gt;. &lt;var&gt;pass&lt;/var&gt; is the pass name. If the same pass is statically invoked in the compiler multiple times, the pass name should be appended with a sequential number starting from 1.</source>
          <target state="translated">Habilitar pase IPA &lt;var&gt;pass&lt;/var&gt; . &lt;var&gt;pass&lt;/var&gt; es el nombre de la contrase&amp;ntilde;a. Si el mismo paso se invoca est&amp;aacute;ticamente en el compilador varias veces, el nombre del paso debe agregarse con un n&amp;uacute;mero secuencial que comience desde 1.</target>
        </trans-unit>
        <trans-unit id="17d5ca6696a8cdc79b6dc05a7cd14c4945472844" translate="yes" xml:space="preserve">
          <source>Enable Large System Extension instructions. This is on by default for</source>
          <target state="translated">Activar las instrucciones de la Extensión del Sistema Grande.Esto está activado por defecto para</target>
        </trans-unit>
        <trans-unit id="5313db34f510b6a28a51ef561341a7742309082f" translate="yes" xml:space="preserve">
          <source>Enable LeakSanitizer, a memory leak detector. This option only matters for linking of executables and the executable is linked against a library that overrides &lt;code&gt;malloc&lt;/code&gt; and other allocator functions. See &lt;a href=&quot;https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer&quot;&gt;https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer&lt;/a&gt; for more details. The run-time behavior can be influenced using the &lt;code&gt;LSAN_OPTIONS&lt;/code&gt; environment variable. The option cannot be combined with</source>
          <target state="translated">Habilite LeakSanitizer, un detector de fugas de memoria. Esta opci&amp;oacute;n solo importa para la vinculaci&amp;oacute;n de ejecutables y el ejecutable est&amp;aacute; vinculado con una biblioteca que anula &lt;code&gt;malloc&lt;/code&gt; y otras funciones de asignaci&amp;oacute;n. Consulte &lt;a href=&quot;https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer&quot;&gt;https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer&lt;/a&gt; para obtener m&amp;aacute;s detalles. El comportamiento en tiempo de ejecuci&amp;oacute;n se puede influir mediante la variable de entorno &lt;code&gt;LSAN_OPTIONS&lt;/code&gt; . La opci&amp;oacute;n no se puede combinar con</target>
        </trans-unit>
        <trans-unit id="963f7996b716be1c17df5a79ae31f2f9bb23a517" translate="yes" xml:space="preserve">
          <source>Enable Local Register Allocation. This is still experimental for ARC, so by default the compiler uses standard reload (i.e.</source>
          <target state="translated">Habilitar la asignación del registro local.Esto es todavía experimental para ARC,así que por defecto el compilador usa la recarga estándar (es decir</target>
        </trans-unit>
        <trans-unit id="3bd13a89a3ec768d816679409bb63a5907cc342b" translate="yes" xml:space="preserve">
          <source>Enable Local Register Allocation. This is still experimental for FT32, so by default the compiler uses standard reload.</source>
          <target state="translated">Habilitar la asignación del registro local.Esto es todavía experimental para FT32,así que por defecto el compilador usa la recarga estándar.</target>
        </trans-unit>
        <trans-unit id="7fa9e4dd118db6c43acdd9765995f0465281818a" translate="yes" xml:space="preserve">
          <source>Enable Local Register Allocation. This is the default for SPARC since GCC 7 so</source>
          <target state="translated">Habilitar la asignación del registro local.Este es el valor por defecto para SPARC desde GCC 7,así que</target>
        </trans-unit>
        <trans-unit id="89bbfd96b1406df4e9daca603ac86b980c364e5c" translate="yes" xml:space="preserve">
          <source>Enable RTL pass &lt;var&gt;pass&lt;/var&gt;. See</source>
          <target state="translated">Habilitar pase RTL &lt;var&gt;pass&lt;/var&gt; . Ver</target>
        </trans-unit>
        <trans-unit id="f44412802c3209f5d9e4e5d01f1b31cdf41ef7c0" translate="yes" xml:space="preserve">
          <source>Enable Round Double Multiply Accumulate instructions. This is on by default for</source>
          <target state="translated">Habilitar las instrucciones de Acumular Redondeo Doble Multiplicación.Esto está activado por defecto para</target>
        </trans-unit>
        <trans-unit id="d370af9affe58a56b9b5454d4d92570e141e8b8f" translate="yes" xml:space="preserve">
          <source>Enable SVE2 aes instructions. This also enables SVE2 instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f75e37c4e4e45b9963ff233f2e2820dcfb4fb8" translate="yes" xml:space="preserve">
          <source>Enable SVE2 bitperm instructions. This also enables SVE2 instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbf22cee4e50726f4cae0a5e266998649407231" translate="yes" xml:space="preserve">
          <source>Enable SVE2 sha3 instructions. This also enables SVE2 instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7cde27311588c6804e4c9ac9068d7a4af84b22" translate="yes" xml:space="preserve">
          <source>Enable SVE2 sm4 instructions. This also enables SVE2 instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1332af3411aa268a3ef4a1b41bc0ae5d1edc2594" translate="yes" xml:space="preserve">
          <source>Enable Scalable Vector Extension instructions. This also enables Advanced SIMD and floating-point instructions.</source>
          <target state="translated">Activar instrucciones de Extensión de Vectores Escalables.Esto también habilita el SIMD avanzado e instrucciones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="082f6e4a45595d5f7a3a2a560115400fb4ee2b89" translate="yes" xml:space="preserve">
          <source>Enable ThreadSanitizer, a fast data race detector. Memory access instructions are instrumented to detect data race bugs. See &lt;a href=&quot;https://github.com/google/sanitizers/wiki#threadsanitizer&quot;&gt;https://github.com/google/sanitizers/wiki#threadsanitizer&lt;/a&gt; for more details. The run-time behavior can be influenced using the &lt;code&gt;TSAN_OPTIONS&lt;/code&gt; environment variable; see &lt;a href=&quot;https://github.com/google/sanitizers/wiki/ThreadSanitizerFlags&quot;&gt;https://github.com/google/sanitizers/wiki/ThreadSanitizerFlags&lt;/a&gt; for a list of supported options. The option cannot be combined with</source>
          <target state="translated">Habilite ThreadSanitizer, un detector de carrera de datos r&amp;aacute;pido. Las instrucciones de acceso a la memoria est&amp;aacute;n instrumentadas para detectar errores de carrera de datos. Consulte &lt;a href=&quot;https://github.com/google/sanitizers/wiki#threadsanitizer&quot;&gt;https://github.com/google/sanitizers/wiki#threadsanitizer&lt;/a&gt; para obtener m&amp;aacute;s detalles. El comportamiento en tiempo de ejecuci&amp;oacute;n se puede influir mediante la variable de entorno &lt;code&gt;TSAN_OPTIONS&lt;/code&gt; ; consulte &lt;a href=&quot;https://github.com/google/sanitizers/wiki/ThreadSanitizerFlags&quot;&gt;https://github.com/google/sanitizers/wiki/ThreadSanitizerFlags&lt;/a&gt; para obtener una lista de las opciones compatibles. La opci&amp;oacute;n no se puede combinar con</target>
        </trans-unit>
        <trans-unit id="949a1a6c2112a203d7294b63f617d43e64b4229c" translate="yes" xml:space="preserve">
          <source>Enable UndefinedBehaviorSanitizer, a fast undefined behavior detector. Various computations are instrumented to detect undefined behavior at runtime. Current suboptions are:</source>
          <target state="translated">Habilitar el UndefinedBehaviorSanitizer,un rápido detector de comportamiento indefinido.Se instrumentan varios cálculos para detectar el comportamiento indefinido en tiempo de ejecución.Las subopciones actuales son:</target>
        </trans-unit>
        <trans-unit id="96f5c056cf8c5a806da05ed8b96789bc0b6d048b" translate="yes" xml:space="preserve">
          <source>Enable all estimate instructions.</source>
          <target state="translated">Activar todas las instrucciones de estimación.</target>
        </trans-unit>
        <trans-unit id="df3c7c5cb30d8d0e87829e7d5c48c82259c25cb7" translate="yes" xml:space="preserve">
          <source>Enable all language-specific dumps.</source>
          <target state="translated">Habilitar todos los volcados específicos del lenguaje.</target>
        </trans-unit>
        <trans-unit id="ae518ed7bc949ae822d65bcaeff9c7041fb826a6" translate="yes" xml:space="preserve">
          <source>Enable allocation of values to registers that are clobbered by function calls, by emitting extra instructions to save and restore the registers around such calls. Such allocation is done only when it seems to result in better code.</source>
          <target state="translated">Habilitar la asignación de valores a los registros que son golpeados por llamadas de función,emitiendo instrucciones adicionales para guardar y restaurar los registros alrededor de dichas llamadas.Tal asignación se hace sólo cuando parece que resulta en un mejor código.</target>
        </trans-unit>
        <trans-unit id="0a0fd86a97f36ba3d21ddbe6e9254e7a16fbfe18" translate="yes" xml:space="preserve">
          <source>Enable and control dumping of pass statistics in a separate file. The file name is generated by appending a suffix ending in &amp;lsquo;</source>
          <target state="translated">Habilite y controle el volcado de estad&amp;iacute;sticas de pases en un archivo separado. El nombre del archivo se genera agregando un sufijo terminado en '</target>
        </trans-unit>
        <trans-unit id="f6804494e75f7aaede40247da0a4be9cdb7a84eb" translate="yes" xml:space="preserve">
          <source>Enable asan allocas/VLAs protection.</source>
          <target state="translated">Habilitar la protección de las alocas y los VLA.</target>
        </trans-unit>
        <trans-unit id="61fd83dce0b4c24f54b3d95d0aba14e424d6bcbf" translate="yes" xml:space="preserve">
          <source>Enable automatic template instantiation at link time. This option also implies</source>
          <target state="translated">Habilitar la instanciación automática de la plantilla en el momento del enlace.Esta opción también implica</target>
        </trans-unit>
        <trans-unit id="803437b7c125524ce44c25382c66dec8a107376e" translate="yes" xml:space="preserve">
          <source>Enable barrel-shift instructions.</source>
          <target state="translated">Activar instrucciones de cambio de barril.</target>
        </trans-unit>
        <trans-unit id="dd1a569881fabce4df110c82ea43f4ea0973b717" translate="yes" xml:space="preserve">
          <source>Enable bbit peephole2.</source>
          <target state="translated">Habilitar la mirilla de bbits2.</target>
        </trans-unit>
        <trans-unit id="180b32141a3f8a46f27f030b1d9db7ce44e7c46b" translate="yes" xml:space="preserve">
          <source>Enable brain half-precision floating-point instructions. This also enables Advanced SIMD and floating-point instructions. This option is enabled by default for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e317e7bf07e0ef1d8933e0c682ab5ffc4c86dfe" translate="yes" xml:space="preserve">
          <source>Enable buffer overflow detection for global objects. This kind of protection is enabled by default if you are using</source>
          <target state="translated">Habilitar la detección de desbordamiento de búferes para objetos globales.Este tipo de protección está habilitada por defecto si se utiliza</target>
        </trans-unit>
        <trans-unit id="0ff2936ea712569b3e61003e75e4a3a94ca881aa" translate="yes" xml:space="preserve">
          <source>Enable buffer overflow detection for memory reads. This kind of protection is enabled by default when using</source>
          <target state="translated">Habilitar la detección de desbordamiento de búfer para lecturas de memoria.Este tipo de protección se activa por defecto cuando se utiliza</target>
        </trans-unit>
        <trans-unit id="c11c559ccc97fad4b1acec42a5bfc66eb0c4fd61" translate="yes" xml:space="preserve">
          <source>Enable buffer overflow detection for memory writes. This kind of protection is enabled by default when using</source>
          <target state="translated">Habilitar la detección de desbordamiento de búfer para las escrituras de memoria.Este tipo de protección se activa por defecto cuando se utiliza</target>
        </trans-unit>
        <trans-unit id="c2ab49f5ce7f3d41ded69401c310972e445af621" translate="yes" xml:space="preserve">
          <source>Enable buffer overflow detection for stack objects. This kind of protection is enabled by default when using</source>
          <target state="translated">Habilitar la detección de desbordamiento del búfer para los objetos apilados.Este tipo de protección se activa por defecto cuando se utiliza</target>
        </trans-unit>
        <trans-unit id="bcd2fc731b6ca5ce8904f8dd2548970ab5fbc93a" translate="yes" xml:space="preserve">
          <source>Enable cache bypass for volatile references.</source>
          <target state="translated">Habilitar la derivación de la caché para referencias volátiles.</target>
        </trans-unit>
        <trans-unit id="dc4973bdf3e5300316096cd00a6ec0877e4070c6" translate="yes" xml:space="preserve">
          <source>Enable code density instructions for ARC EM. This option is on by default for ARC HS.</source>
          <target state="translated">Habilitar las instrucciones de densidad de código para el ARC EM.Esta opción está activada por defecto para ARC HS.</target>
        </trans-unit>
        <trans-unit id="6f26f87d795cdafd882a37f7cf6106b44c65db50" translate="yes" xml:space="preserve">
          <source>Enable code instrumentation of control-flow transfers to increase program security by checking that target addresses of control-flow transfer instructions (such as indirect function call, function return, indirect jump) are valid. This prevents diverting the flow of control to an unexpected target. This is intended to protect against such threats as Return-oriented Programming (ROP), and similarly call/jmp-oriented programming (COP/JOP).</source>
          <target state="translated">Habilitar la instrumentación de códigos de transferencias de flujo de control para aumentar la seguridad del programa comprobando que las direcciones de destino de las instrucciones de transferencia de flujo de control (como llamada de función indirecta,retorno de función,salto indirecto)son válidas.Esto evita que se desvíe el flujo de control a un objetivo inesperado.Esto tiene por objeto proteger contra amenazas tales como la programación orientada al retorno (ROP),y de manera similar la programación orientada a la llamada/jmp (COP/JOP).</target>
        </trans-unit>
        <trans-unit id="b04ea9a65f69d1ed270cd68689d1e12352618b80" translate="yes" xml:space="preserve">
          <source>Enable compact &lt;code&gt;casesi&lt;/code&gt; pattern. This is the default for</source>
          <target state="translated">Habilite el patr&amp;oacute;n de &lt;code&gt;casesi&lt;/code&gt; compactos . Este es el predeterminado para</target>
        </trans-unit>
        <trans-unit id="0c57839724a2712f31a1af12f90ff1f615581733" translate="yes" xml:space="preserve">
          <source>Enable constructor/destructor feature.</source>
          <target state="translated">Habilitar la función de constructor/destructor.</target>
        </trans-unit>
        <trans-unit id="975ccca01950f97ce533ac489aa7f20116354de0" translate="yes" xml:space="preserve">
          <source>Enable coprocessor instructions; the default is off.</source>
          <target state="translated">Habilitar las instrucciones del coprocesador;el valor por defecto es off.</target>
        </trans-unit>
        <trans-unit id="133e4f830a510ad1f945a9a4b1965c6cdd0bf2e0" translate="yes" xml:space="preserve">
          <source>Enable coverage-guided fuzzing code instrumentation. Inserts a call to &lt;code&gt;__sanitizer_cov_trace_pc&lt;/code&gt; into every basic block.</source>
          <target state="translated">Habilite la instrumentaci&amp;oacute;n de c&amp;oacute;digo fuzzing guiada por cobertura. Inserta una llamada a &lt;code&gt;__sanitizer_cov_trace_pc&lt;/code&gt; en cada bloque b&amp;aacute;sico.</target>
        </trans-unit>
        <trans-unit id="787d37d09881b29ce95c34e07e7021e04de78815" translate="yes" xml:space="preserve">
          <source>Enable dataflow guided fuzzing code instrumentation. Inserts a call to &lt;code&gt;__sanitizer_cov_trace_cmp1&lt;/code&gt;, &lt;code&gt;__sanitizer_cov_trace_cmp2&lt;/code&gt;, &lt;code&gt;__sanitizer_cov_trace_cmp4&lt;/code&gt; or &lt;code&gt;__sanitizer_cov_trace_cmp8&lt;/code&gt; for integral comparison with both operands variable or &lt;code&gt;__sanitizer_cov_trace_const_cmp1&lt;/code&gt;, &lt;code&gt;__sanitizer_cov_trace_const_cmp2&lt;/code&gt;, &lt;code&gt;__sanitizer_cov_trace_const_cmp4&lt;/code&gt; or &lt;code&gt;__sanitizer_cov_trace_const_cmp8&lt;/code&gt; for integral comparison with one operand constant, &lt;code&gt;__sanitizer_cov_trace_cmpf&lt;/code&gt; or &lt;code&gt;__sanitizer_cov_trace_cmpd&lt;/code&gt; for float or double comparisons and &lt;code&gt;__sanitizer_cov_trace_switch&lt;/code&gt; for switch statements.</source>
          <target state="translated">Habilite la instrumentaci&amp;oacute;n de c&amp;oacute;digo fuzzing guiado por flujo de datos. Inserta una llamada a &lt;code&gt;__sanitizer_cov_trace_cmp1&lt;/code&gt; , &lt;code&gt;__sanitizer_cov_trace_cmp2&lt;/code&gt; , &lt;code&gt;__sanitizer_cov_trace_cmp4&lt;/code&gt; o &lt;code&gt;__sanitizer_cov_trace_cmp8&lt;/code&gt; para la comparaci&amp;oacute;n integral con ambas variables operandos o &lt;code&gt;__sanitizer_cov_trace_const_cmp1&lt;/code&gt; , &lt;code&gt;__sanitizer_cov_trace_const_cmp2&lt;/code&gt; , &lt;code&gt;__sanitizer_cov_trace_const_cmp4&lt;/code&gt; o &lt;code&gt;__sanitizer_cov_trace_const_cmp8&lt;/code&gt; para la comparaci&amp;oacute;n integral con un operando constante, &lt;code&gt;__sanitizer_cov_trace_cmpf&lt;/code&gt; o &lt;code&gt;__sanitizer_cov_trace_cmpd&lt;/code&gt; de flotador o comparaciones dobles y &lt;code&gt;__sanitizer_cov_trace_switch&lt;/code&gt; para declaraciones de cambio.</target>
        </trans-unit>
        <trans-unit id="1af777f40a3150cb8ba378da9ca8aedaaf114176" translate="yes" xml:space="preserve">
          <source>Enable deduction of a template type parameter as &lt;code&gt;std::initializer_list&lt;/code&gt; from a brace-enclosed initializer list, i.e.</source>
          <target state="translated">Habilite la deducci&amp;oacute;n de un par&amp;aacute;metro de tipo de plantilla como &lt;code&gt;std::initializer_list&lt;/code&gt; de una lista de inicializadores entre llaves, es decir</target>
        </trans-unit>
        <trans-unit id="699beaa366dd56ec35a2702d45f2103e1f67c4dc" translate="yes" xml:space="preserve">
          <source>Enable detection for built-in functions. This kind of protection is enabled by default when using</source>
          <target state="translated">Habilitar la detección para las funciones incorporadas.Este tipo de protección se activa por defecto cuando se utiliza</target>
        </trans-unit>
        <trans-unit id="d53fecd502038ea015d9795c95247289bc1d17ab" translate="yes" xml:space="preserve">
          <source>Enable detection of use-after-return. This kind of protection is enabled by default when using the</source>
          <target state="translated">Habilitar la detección de uso después del regreso.Este tipo de protección se activa por defecto cuando se utiliza el</target>
        </trans-unit>
        <trans-unit id="22325b2d023fcd4619a9818a760c689af219e959" translate="yes" xml:space="preserve">
          <source>Enable divide and modulus instructions.</source>
          <target state="translated">Habilitar las instrucciones de división y módulo.</target>
        </trans-unit>
        <trans-unit id="6860f8ad3c912d9de1bc957db83ae37ff4acd2f1" translate="yes" xml:space="preserve">
          <source>Enable double load/store operations for ARC HS cores.</source>
          <target state="translated">Habilitar las operaciones de doble carga/almacenamiento para los núcleos de ARC HS.</target>
        </trans-unit>
        <trans-unit id="f30747b51f35d511a8324038d0ec742af8852f12" translate="yes" xml:space="preserve">
          <source>Enable dumping various statistics about the pass (not honored by every dump option).</source>
          <target state="translated">Habilitar el volcado de varias estadísticas sobre el pase (no honrado por cada opción de volcado).</target>
        </trans-unit>
        <trans-unit id="e61159e5abc9e858d3e7dc68248bef77e7e66569" translate="yes" xml:space="preserve">
          <source>Enable dumps from all OMP (Offloading and Multi Processing) optimizations.</source>
          <target state="translated">Habilitar los volcados de todas las optimizaciones de OMP (Offloading and Multi Processing).</target>
        </trans-unit>
        <trans-unit id="126e933efdf810fc684f2a27ed78c7f4a97f9db5" translate="yes" xml:space="preserve">
          <source>Enable dumps from all inlining optimizations.</source>
          <target state="translated">Habilitar los volcados de todas las optimizaciones en línea.</target>
        </trans-unit>
        <trans-unit id="d0c94685fdabc0e86d42873897a8642d64c915a0" translate="yes" xml:space="preserve">
          <source>Enable dumps from all interprocedural optimizations.</source>
          <target state="translated">Habilitar los vertederos de todas las optimizaciones interprocesales.</target>
        </trans-unit>
        <trans-unit id="f4a495e6ab007e96555960123af4b2e049e343cb" translate="yes" xml:space="preserve">
          <source>Enable dumps from all loop optimizations.</source>
          <target state="translated">Habilitar volcados de todas las optimizaciones de bucle.</target>
        </trans-unit>
        <trans-unit id="da404a0e7964dc17445f8eab1557032d44193e2a" translate="yes" xml:space="preserve">
          <source>Enable dumps from all optimizations. This is a superset of the optimization groups listed above.</source>
          <target state="translated">Habilitar los volcados de todas las optimizaciones.Este es un superconjunto de los grupos de optimización listados arriba.</target>
        </trans-unit>
        <trans-unit id="82fd093708bd37548045d3e8dc300297a204bb93" translate="yes" xml:space="preserve">
          <source>Enable dumps from all vectorization optimizations.</source>
          <target state="translated">Habilitar los volcados de todas las optimizaciones de vectorización.</target>
        </trans-unit>
        <trans-unit id="1ca26bbd13d508b47dfc0ff9aedfd700309873f0" translate="yes" xml:space="preserve">
          <source>Enable emission of special debug stores within HSA kernels which are then read and reported by libgomp plugin. Generation of these stores is disabled by default, use</source>
          <target state="translated">Habilitar la emisión de almacenes especiales de depuración dentro de los núcleos HSA que luego son leídos y reportados por el plugin libgomp.La generación de estos almacenes está desactivada por defecto,usa</target>
        </trans-unit>
        <trans-unit id="92b0248c8870fe4857fc02d723bd02f0d5d911ee" translate="yes" xml:space="preserve">
          <source>Enable exception handling. Generates extra code needed to propagate exceptions. For some targets, this implies GCC generates frame unwind information for all functions, which can produce significant data size overhead, although it does not affect execution. If you do not specify this option, GCC enables it by default for languages like C++ that normally require exception handling, and disables it for languages like C that do not normally require it. However, you may need to enable this option when compiling C code that needs to interoperate properly with exception handlers written in C++. You may also wish to disable this option if you are compiling older C++ programs that don&amp;rsquo;t use exception handling.</source>
          <target state="translated">Habilite el manejo de excepciones. Genera el c&amp;oacute;digo adicional necesario para propagar excepciones. Para algunos objetivos, esto implica que GCC genera informaci&amp;oacute;n de desenrollado de tramas para todas las funciones, lo que puede producir una sobrecarga de tama&amp;ntilde;o de datos significativa, aunque no afecta la ejecuci&amp;oacute;n. Si no especifica esta opci&amp;oacute;n, GCC la habilita de forma predeterminada para lenguajes como C ++ que normalmente requieren manejo de excepciones, y la deshabilita para lenguajes como C que normalmente no lo requieren. Sin embargo, es posible que deba habilitar esta opci&amp;oacute;n al compilar c&amp;oacute;digo C que necesita interoperar correctamente con controladores de excepciones escritos en C ++. Tambi&amp;eacute;n puede deshabilitar esta opci&amp;oacute;n si est&amp;aacute; compilando programas C ++ m&amp;aacute;s antiguos que no usan el manejo de excepciones.</target>
        </trans-unit>
        <trans-unit id="291b92d09ee9fff716f8b0be8063487213868bdd" translate="yes" xml:space="preserve">
          <source>Enable floating-point instructions. This is on by default for all possible values for options</source>
          <target state="translated">Habilitar instrucciones de punto flotante.Esto está activado por defecto para todos los valores posibles de las opciones</target>
        </trans-unit>
        <trans-unit id="39904b8795d477fdb077dab2b449e06a2b1bd74a" translate="yes" xml:space="preserve">
          <source>Enable garbage collection (GC) in Objective-C and Objective-C++ programs. This option is only available with the NeXT runtime; the GNU runtime has a different garbage collection implementation that does not require special compiler flags.</source>
          <target state="translated">Habilitar la recogida de basura (GC)en los programas Objetivo-C y Objetivo-C++.Esta opción sólo está disponible con el tiempo de ejecución NeXT;el tiempo de ejecución GNU tiene una implementación de recogida de basura diferente que no requiere banderas especiales del compilador.</target>
        </trans-unit>
        <trans-unit id="eb9fbffb72277aaa3548891dbb1b3b1153391a9e" translate="yes" xml:space="preserve">
          <source>Enable generation of ARC SIMD instructions via target-specific builtins. Only valid for</source>
          <target state="translated">Permitir la generación de instrucciones ARC SIMD a través de los objetivos específicos incorporados.Sólo válido para</target>
        </trans-unit>
        <trans-unit id="3476de902c479834e38b15661f3b7c3cc2032cce" translate="yes" xml:space="preserve">
          <source>Enable generation of compare and set flag with immediate (&lt;code&gt;l.sf*i&lt;/code&gt;) instructions. By default extra instructions will be generated to store the immediate to a register first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50921b35a0d76feb95a28aea9efb5fcae7e1038" translate="yes" xml:space="preserve">
          <source>Enable generation of conditional move (&lt;code&gt;l.cmov&lt;/code&gt;) instructions. By default the equivalent will be generated using set and branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64de54a950fd518ed74414f068843cdf15d9e810" translate="yes" xml:space="preserve">
          <source>Enable generation of linemarkers in the preprocessor output that let the compiler know the current working directory at the time of preprocessing. When this option is enabled, the preprocessor emits, after the initial linemarker, a second linemarker with the current working directory followed by two slashes. GCC uses this directory, when it&amp;rsquo;s present in the preprocessed input, as the directory emitted as the current working directory in some debugging information formats. This option is implicitly enabled if debugging information is enabled, but this can be inhibited with the negated form</source>
          <target state="translated">Habilite la generaci&amp;oacute;n de marcadores de l&amp;iacute;nea en la salida del preprocesador que le permitan al compilador conocer el directorio de trabajo actual en el momento del preprocesamiento. Cuando esta opci&amp;oacute;n est&amp;aacute; habilitada, el preprocesador emite, despu&amp;eacute;s del marcador de l&amp;iacute;nea inicial, un segundo marcador de l&amp;iacute;nea con el directorio de trabajo actual seguido de dos barras. GCC usa este directorio, cuando est&amp;aacute; presente en la entrada preprocesada, como el directorio emitido como el directorio de trabajo actual en algunos formatos de informaci&amp;oacute;n de depuraci&amp;oacute;n. Esta opci&amp;oacute;n est&amp;aacute; habilitada impl&amp;iacute;citamente si la informaci&amp;oacute;n de depuraci&amp;oacute;n est&amp;aacute; habilitada, pero esto se puede inhibir con la forma negada</target>
        </trans-unit>
        <trans-unit id="588970c3346f8b21ca330055ce039842b7c95dc3" translate="yes" xml:space="preserve">
          <source>Enable generation of rotate right (&lt;code&gt;l.ror&lt;/code&gt;) instructions. By default functions from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4410c960b2144b2a5392d7e9052119e5a2916ace" translate="yes" xml:space="preserve">
          <source>Enable generation of rotate right with immediate (&lt;code&gt;l.rori&lt;/code&gt;) instructions. By default functions from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2f560a395cf8229af315865d428228064bb2c4" translate="yes" xml:space="preserve">
          <source>Enable generation of shift with immediate (&lt;code&gt;l.srai&lt;/code&gt;, &lt;code&gt;l.srli&lt;/code&gt;, &lt;code&gt;l.slli&lt;/code&gt;) instructions. By default extra instructions will be generated to store the immediate to a register first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64d914c46ba456fccc83d7a0d7c17c411a4e40e" translate="yes" xml:space="preserve">
          <source>Enable generation of sign extension (&lt;code&gt;l.ext*&lt;/code&gt;) instructions. By default memory loads are used to perform sign extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6c2330300990f23059abacc5ecdfe5f1dc0281" translate="yes" xml:space="preserve">
          <source>Enable generation of unaligned load and store instructions.</source>
          <target state="translated">Habilitar la generación de instrucciones de carga y almacenamiento no alineadas.</target>
        </trans-unit>
        <trans-unit id="d26f3d711c1a65ce5ae7ed795204b286f03213ae" translate="yes" xml:space="preserve">
          <source>Enable global interrupt.</source>
          <target state="translated">Habilitar la interrupción global.</target>
        </trans-unit>
        <trans-unit id="2f452efb25c68aa75fbb01603256e25885a6060f" translate="yes" xml:space="preserve">
          <source>Enable handling of OpenACC directives &lt;code&gt;#pragma acc&lt;/code&gt; in C/C++ and &lt;code&gt;!$acc&lt;/code&gt; in Fortran. When</source>
          <target state="translated">Habilite el manejo de directivas de OpenACC &lt;code&gt;#pragma acc&lt;/code&gt; en C / C ++ y &lt;code&gt;!$acc&lt;/code&gt; en Fortran. Cuando</target>
        </trans-unit>
        <trans-unit id="2ca92300312c8fc1987b891433bf16fbf5350717" translate="yes" xml:space="preserve">
          <source>Enable handling of OpenMP directives &lt;code&gt;#pragma omp&lt;/code&gt; in C/C++ and &lt;code&gt;!$omp&lt;/code&gt; in Fortran. When</source>
          <target state="translated">Habilite el manejo de las directivas OpenMP &lt;code&gt;#pragma omp&lt;/code&gt; en C / C ++ y &lt;code&gt;!$omp&lt;/code&gt; en Fortran. Cuando</target>
        </trans-unit>
        <trans-unit id="f764c2e81a54602d1c0862a3fd8d88c71c27e5ef" translate="yes" xml:space="preserve">
          <source>Enable handling of OpenMP&amp;rsquo;s SIMD directives with &lt;code&gt;#pragma omp&lt;/code&gt; in C/C++ and &lt;code&gt;!$omp&lt;/code&gt; in Fortran. Other OpenMP directives are ignored.</source>
          <target state="translated">Habilite el manejo de las directivas SIMD de OpenMP con &lt;code&gt;#pragma omp&lt;/code&gt; en C / C ++ y &lt;code&gt;!$omp&lt;/code&gt; en Fortran. Se ignoran otras directivas de OpenMP.</target>
        </trans-unit>
        <trans-unit id="325afe18f0a625fafbd824b05e823388581382ad" translate="yes" xml:space="preserve">
          <source>Enable inlining of PLT entries in function calls to functions that are not known to bind locally. It has no effect without</source>
          <target state="translated">Habilitar el alineamiento de las entradas PLT en las llamadas de función a funciones que no se sabe que se vinculan localmente.No tiene efecto sin</target>
        </trans-unit>
        <trans-unit id="26c34a078cd9b46fb0bd484cd235d46f5c53f46b" translate="yes" xml:space="preserve">
          <source>Enable internal consistency checking. The default depends on the compiler configuration.</source>
          <target state="translated">Habilitar la comprobación de la consistencia interna.El valor por defecto depende de la configuración del compilador.</target>
        </trans-unit>
        <trans-unit id="b40ab07f35e9ecebed6c91979cb9c80321b2c600" translate="yes" xml:space="preserve">
          <source>Enable interrupt stack instructions; the default is off.</source>
          <target state="translated">Habilitar las instrucciones de la pila de interrupciones;el valor predeterminado es apagado.</target>
        </trans-unit>
        <trans-unit id="fd58b676d0e4ba40cac9f6295490ba16f891fad5" translate="yes" xml:space="preserve">
          <source>Enable kernel development mode. The</source>
          <target state="translated">Activar el modo de desarrollo del núcleo.El</target>
        </trans-unit>
        <trans-unit id="6942946c621ac80c436737b7a31ee339272c871d" translate="yes" xml:space="preserve">
          <source>Enable lazy binding of function calls. This option is equivalent to</source>
          <target state="translated">Habilitar la vinculación perezosa de las llamadas de función.Esta opción es equivalente a</target>
        </trans-unit>
        <trans-unit id="c3e68f8f7d9888cb3d2e2d66e5738f0a5b7bffcf" translate="yes" xml:space="preserve">
          <source>Enable linker relaxation. Linker relaxation is a process whereby the linker attempts to reduce the size of a program by finding shorter versions of various instructions. Disabled by default.</source>
          <target state="translated">Habilitar la relajación del enlazador.La relajación del enlazador es un proceso por el cual el enlazador intenta reducir el tamaño de un programa encontrando versiones más cortas de varias instrucciones.Desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="0765f61b18fd9b0cd981b0d3115e02320dabdb7a" translate="yes" xml:space="preserve">
          <source>Enable loop epilogue vectorization using smaller vector size.</source>
          <target state="translated">Habilitar la vectorización del epílogo en bucle utilizando un tamaño de vector más pequeño.</target>
        </trans-unit>
        <trans-unit id="04769dddbdca1dd3af29e66b89d9df24ccfdaae0" translate="yes" xml:space="preserve">
          <source>Enable more detailed dumps (not honored by every dump option). Also include information from the optimization passes.</source>
          <target state="translated">Habilitar vertederos más detallados (no honrados por cada opción de vertido).Incluya también información de los pases de optimización.</target>
        </trans-unit>
        <trans-unit id="9f3bf571af4fb133a9ed845eaa94347bdecede5e" translate="yes" xml:space="preserve">
          <source>Enable multiply instructions.</source>
          <target state="translated">Habilitar las instrucciones de multiplicación.</target>
        </trans-unit>
        <trans-unit id="6bdc85b650029e698104b9394508a12676ccb6ec" translate="yes" xml:space="preserve">
          <source>Enable multiprocessor instructions; the default is off.</source>
          <target state="translated">Habilitar las instrucciones del multiprocesador;el valor por defecto es off.</target>
        </trans-unit>
        <trans-unit id="dae98acaa0a30e3960a49dff4e2a8d6c6a98eb29" translate="yes" xml:space="preserve">
          <source>Enable nested conditional execution optimizations (default).</source>
          <target state="translated">Habilitar las optimizaciones de ejecución condicional anidadas (por defecto).</target>
        </trans-unit>
        <trans-unit id="0523e9bf64ec1c9137b9f17ae48ec467d581e674" translate="yes" xml:space="preserve">
          <source>Enable optimization of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; in conditional execution (default).</source>
          <target state="translated">Habilite la optimizaci&amp;oacute;n de &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; en ejecuci&amp;oacute;n condicional (predeterminado).</target>
        </trans-unit>
        <trans-unit id="43cad454d19cf94092ebd0b65a6a9f9c7c63ffa9" translate="yes" xml:space="preserve">
          <source>Enable options usually used for instrumenting application to produce profile useful for later recompilation with profile feedback based optimization. You must use</source>
          <target state="translated">Habilitar las opciones que se utilizan habitualmente para la aplicación de instrumentos para producir perfiles útiles para su posterior recompilación con la optimización basada en la retroalimentación de los perfiles.Debe utilizar</target>
        </trans-unit>
        <trans-unit id="9425982687d5465084a29222f1e8d83738debfbc" translate="yes" xml:space="preserve">
          <source>Enable or disable PC-relative literal loads. With this option literal pools are accessed using a single instruction and emitted after each function. This limits the maximum size of functions to 1MB. This is enabled by default for</source>
          <target state="translated">Habilitar o deshabilitar las cargas literales relacionadas con el PC.Con esta opción se accede a las cargas literales mediante una sola instrucción y se emiten después de cada función.Esto limita el tamaño máximo de las funciones a 1MB.Esto se habilita por defecto para</target>
        </trans-unit>
        <trans-unit id="37cd8da3fdbfa9f8188d860129119fec2bfd100c" translate="yes" xml:space="preserve">
          <source>Enable or disable calls to out-of-line helpers to implement atomic operations. These helpers will, at runtime, determine if the LSE instructions from ARMv8.1-A can be used; if not, they will use the load/store-exclusive instructions that are present in the base ARMv8.0 ISA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a34d5bdfa8a40aec1348063e5f43f0a38a44e4b" translate="yes" xml:space="preserve">
          <source>Enable or disable calls to out-of-line helpers to implement atomic operations. This corresponds to the behavior of the command line options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f213f1158c65a76a7da3e44d0dfb546afeb1c37d" translate="yes" xml:space="preserve">
          <source>Enable or disable emitting &lt;code&gt;mul&lt;/code&gt;, &lt;code&gt;mulx&lt;/code&gt; and &lt;code&gt;div&lt;/code&gt; family of instructions by the compiler. The default is to emit &lt;code&gt;mul&lt;/code&gt; and not emit &lt;code&gt;div&lt;/code&gt; and &lt;code&gt;mulx&lt;/code&gt;.</source>
          <target state="translated">Habilite o deshabilite la emisi&amp;oacute;n de la familia de instrucciones &lt;code&gt;mul&lt;/code&gt; , &lt;code&gt;mulx&lt;/code&gt; y &lt;code&gt;div&lt;/code&gt; por parte del compilador. El valor predeterminado es emitir &lt;code&gt;mul&lt;/code&gt; y no emitir &lt;code&gt;div&lt;/code&gt; y &lt;code&gt;mulx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0c735f45199333d31330ebeb1c39ca77bf91fab" translate="yes" xml:space="preserve">
          <source>Enable or disable generation of Nios II R2 BMX (bit manipulation) and CDX (code density) instructions. Enabling these instructions also requires</source>
          <target state="translated">Habilitar o deshabilitar la generación de instrucciones Nios II R2 BMX (manipulación de bits)y CDX (densidad de código).Habilitar estas instrucciones también requiere</target>
        </trans-unit>
        <trans-unit id="e82224b52a26ba48a5b113f09b7fcf8cc858a9c2" translate="yes" xml:space="preserve">
          <source>Enable or disable generation of additional code to track speculative execution through conditional branches. The tracking state can then be used by the compiler when expanding calls to &lt;code&gt;__builtin_speculation_safe_copy&lt;/code&gt; to permit a more efficient code sequence to be generated.</source>
          <target state="translated">Habilite o deshabilite la generaci&amp;oacute;n de c&amp;oacute;digo adicional para rastrear la ejecuci&amp;oacute;n especulativa a trav&amp;eacute;s de ramas condicionales. Luego, el compilador puede utilizar el estado de seguimiento al expandir las llamadas a &lt;code&gt;__builtin_speculation_safe_copy&lt;/code&gt; para permitir que se genere una secuencia de c&amp;oacute;digo m&amp;aacute;s eficiente.</target>
        </trans-unit>
        <trans-unit id="8588fb4dd2a8d4f96274711c0f8a3dcffa809a3b" translate="yes" xml:space="preserve">
          <source>Enable or disable the division approximation. This option only has an effect if</source>
          <target state="translated">Activar o desactivar la aproximación de la división.Esta opción sólo tiene efecto si</target>
        </trans-unit>
        <trans-unit id="da4836dd8fd423982dc5d807088aa304a1a7fb40" translate="yes" xml:space="preserve">
          <source>Enable or disable the reciprocal square root approximation. This option only has an effect if</source>
          <target state="translated">Activar o desactivar la aproximación de la raíz cuadrada recíproca.Esta opción sólo tiene efecto si</target>
        </trans-unit>
        <trans-unit id="6cd2e01bcd6daa77f123d3562e525b53f2208b99" translate="yes" xml:space="preserve">
          <source>Enable or disable the square root approximation. This option only has an effect if</source>
          <target state="translated">Activar o desactivar la aproximación de la raíz cuadrada.Esta opción sólo tiene efecto si</target>
        </trans-unit>
        <trans-unit id="f6d5d7b63171cb59117cb5da0b6d0ce6a7318345" translate="yes" xml:space="preserve">
          <source>Enable or disable the workaround for the ARM Cortex-A53 erratum number 835769. This involves inserting a NOP instruction between memory instructions and 64-bit integer multiply-accumulate instructions.</source>
          <target state="translated">Habilitar o deshabilitar la solución para la Corteza ARM-A53 número de fe de erratas 835769.Esto implica insertar una instrucción NOP entre las instrucciones de la memoria y las instrucciones de multiplicación y acumulación de números enteros de 64 bits.</target>
        </trans-unit>
        <trans-unit id="1b8e841a5a6d9c6fdc72f5d2c3b9462219761996" translate="yes" xml:space="preserve">
          <source>Enable or disable the workaround for the ARM Cortex-A53 erratum number 843419. This erratum workaround is made at link time and this will only pass the corresponding flag to the linker.</source>
          <target state="translated">Habilitar o deshabilitar la solución para la fe de erratas de la Corteza ARM-A53 número 843419.Esta solución se hace en el momento del enlace y sólo pasará la bandera correspondiente al enlazador.</target>
        </trans-unit>
        <trans-unit id="e8d2c7af76155c379ab5d5ec1df26431744e4771" translate="yes" xml:space="preserve">
          <source>Enable or disable use of &lt;code&gt;CONST16&lt;/code&gt; instructions for loading constant values. The &lt;code&gt;CONST16&lt;/code&gt; instruction is currently not a standard option from Tensilica. When enabled, &lt;code&gt;CONST16&lt;/code&gt; instructions are always used in place of the standard &lt;code&gt;L32R&lt;/code&gt; instructions. The use of &lt;code&gt;CONST16&lt;/code&gt; is enabled by default only if the &lt;code&gt;L32R&lt;/code&gt; instruction is not available.</source>
          <target state="translated">Active o desactive el uso de &lt;code&gt;CONST16&lt;/code&gt; instrucciones CONST16 para cargar valores constantes. La instrucci&amp;oacute;n &lt;code&gt;CONST16&lt;/code&gt; no es actualmente una opci&amp;oacute;n est&amp;aacute;ndar de Tensilica. Cuando est&amp;aacute; habilitado, &lt;code&gt;CONST16&lt;/code&gt; instrucciones CONST16 siempre se utilizan en lugar de las instrucciones &lt;code&gt;L32R&lt;/code&gt; est&amp;aacute;ndar . El uso de &lt;code&gt;CONST16&lt;/code&gt; est&amp;aacute; habilitado de forma predeterminada solo si la instrucci&amp;oacute;n &lt;code&gt;L32R&lt;/code&gt; no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="87ea222da3a42af40a5b89fab414b5a2466d4691" translate="yes" xml:space="preserve">
          <source>Enable or disable use of Branch Likely instructions, regardless of the default for the selected architecture. By default, Branch Likely instructions may be generated if they are supported by the selected architecture. An exception is for the MIPS32 and MIPS64 architectures and processors that implement those architectures; for those, Branch Likely instructions are not be generated by default because the MIPS32 and MIPS64 architectures specifically deprecate their use.</source>
          <target state="translated">Habilitar o deshabilitar el uso de las instrucciones Branch Likely,independientemente del valor por defecto para la arquitectura seleccionada.Por defecto,las instrucciones Branch Likely pueden ser generadas si son soportadas por la arquitectura seleccionada.Una excepción es para las arquitecturas y procesadores MIPS32 y MIPS64 que implementan esas arquitecturas;para ellos,las instrucciones Branch Likely no se generan por defecto porque las arquitecturas MIPS32 y MIPS64 deprecian específicamente su uso.</target>
        </trans-unit>
        <trans-unit id="6f7c7366f13d27cab3029da7a7c328e36fbdbb28" translate="yes" xml:space="preserve">
          <source>Enable or disable use of fused multiply/add and multiply/subtract instructions in the floating-point option. This has no effect if the floating-point option is not also enabled. Disabling fused multiply/add and multiply/subtract instructions forces the compiler to use separate instructions for the multiply and add/subtract operations. This may be desirable in some cases where strict IEEE 754-compliant results are required: the fused multiply add/subtract instructions do not round the intermediate result, thereby producing results with &lt;em&gt;more&lt;/em&gt; bits of precision than specified by the IEEE standard. Disabling fused multiply add/subtract instructions also ensures that the program output is not sensitive to the compiler&amp;rsquo;s ability to combine multiply and add/subtract operations.</source>
          <target state="translated">Habilite o deshabilite el uso de instrucciones fusionadas de multiplicar / sumar y multiplicar / restar en la opci&amp;oacute;n de punto flotante. Esto no tiene ning&amp;uacute;n efecto si la opci&amp;oacute;n de punto flotante no est&amp;aacute; tambi&amp;eacute;n habilitada. La desactivaci&amp;oacute;n de las instrucciones fusionadas de multiplicar / sumar y multiplicar / restar obliga al compilador a usar instrucciones separadas para las operaciones de multiplicaci&amp;oacute;n y suma / resta. Esto puede ser deseable en algunos casos donde se requieren resultados estrictos que cumplan con IEEE 754: las instrucciones fusionadas de suma / resta de multiplicaci&amp;oacute;n no redondean el resultado intermedio, por lo que producen resultados con &lt;em&gt;m&amp;aacute;s&lt;/em&gt; bits de precisi&amp;oacute;n que los especificados por el est&amp;aacute;ndar IEEE. La desactivaci&amp;oacute;n de las instrucciones fusionadas de suma / resta de multiplicaci&amp;oacute;n tambi&amp;eacute;n garantiza que la salida del programa no sea sensible a la capacidad del compilador para combinar operaciones de multiplicaci&amp;oacute;n y suma / resta.</target>
        </trans-unit>
        <trans-unit id="f2d29f4186409cdd0269837c4398f5ca04568394" translate="yes" xml:space="preserve">
          <source>Enable other detailed optimization information (only available in certain passes).</source>
          <target state="translated">Habilitar otra información de optimización detallada (sólo disponible en determinados pases).</target>
        </trans-unit>
        <trans-unit id="338cf5f95ce763c97fbfe82953390f719fbef967" translate="yes" xml:space="preserve">
          <source>Enable parsing of function definitions marked with &lt;code&gt;__GIMPLE&lt;/code&gt;. This is an experimental feature that allows unit testing of GIMPLE passes.</source>
          <target state="translated">Habilite el an&amp;aacute;lisis de las definiciones de funciones marcadas con &lt;code&gt;__GIMPLE&lt;/code&gt; . Esta es una funci&amp;oacute;n experimental que permite realizar pruebas unitarias de pases de GIMPLE.</target>
        </trans-unit>
        <trans-unit id="f3fcc68975389b930adf047407384e4de7afa86d" translate="yes" xml:space="preserve">
          <source>Enable pre-reload use of the &lt;code&gt;cbranchsi&lt;/code&gt; pattern.</source>
          <target state="translated">Habilite el uso de &lt;code&gt;cbranchsi&lt;/code&gt; patr&amp;oacute;n cbranchsi .</target>
        </trans-unit>
        <trans-unit id="7aca1894ee9ae073c5e50327164b18c35adaf0e4" translate="yes" xml:space="preserve">
          <source>Enable profile feedback-directed optimizations, and the following optimizations, many of which are generally profitable only with profile feedback available:</source>
          <target state="translated">Habilitar las optimizaciones dirigidas a la retroalimentación de perfiles,y las siguientes optimizaciones,muchas de las cuales son generalmente rentables sólo con la retroalimentación de perfiles disponible:</target>
        </trans-unit>
        <trans-unit id="dd16226a248d7401935b2178b12d750c5c2d817f" translate="yes" xml:space="preserve">
          <source>Enable reduced code size &lt;code&gt;printf&lt;/code&gt; and &lt;code&gt;puts&lt;/code&gt; library functions. The &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b22143dddf716e38b0694ad2ca7a60178731d02" translate="yes" xml:space="preserve">
          <source>Enable register pressure sensitive insn scheduling before register allocation. This only makes sense when scheduling before register allocation is enabled, i.e. with</source>
          <target state="translated">Habilitar la programación del insn sensible a la presión del registro antes de la asignación del mismo.Esto sólo tiene sentido cuando se habilita la programación antes de la asignación de registros,es decir,con</target>
        </trans-unit>
        <trans-unit id="c0432e33b5c323c92ba751b7a0171493013f8ec2" translate="yes" xml:space="preserve">
          <source>Enable sampling-based feedback-directed optimizations, and the following optimizations, many of which are generally profitable only with profile feedback available:</source>
          <target state="translated">Habilitar las optimizaciones basadas en la retroalimentación del muestreo,y las siguientes optimizaciones,muchas de las cuales son generalmente rentables sólo con la retroalimentación del perfil disponible:</target>
        </trans-unit>
        <trans-unit id="9201f89c6bef5151370e84b69891107c6c6b6ade" translate="yes" xml:space="preserve">
          <source>Enable sanitization of local variables to detect use-after-scope bugs. The option sets</source>
          <target state="translated">Habilitar la higienización de las variables locales para detectar errores de uso después del alcance.La opción establece</target>
        </trans-unit>
        <trans-unit id="37f6c409f5734729b3dae114f8c39805c8586c4f" translate="yes" xml:space="preserve">
          <source>Enable showing basic block boundaries (disabled in raw dumps).</source>
          <target state="translated">Habilitar la visualización de los límites básicos de los bloques (desactivado en los vertederos de basura).</target>
        </trans-unit>
        <trans-unit id="92f2f939a0618b052e264a0ddefa5df5b7f5e756" translate="yes" xml:space="preserve">
          <source>Enable showing line numbers for statements.</source>
          <target state="translated">Habilitar la visualización de los números de línea para las declaraciones.</target>
        </trans-unit>
        <trans-unit id="fd380e6ae8aa5c4cc3cef79ab2ea9026b97f5fbd" translate="yes" xml:space="preserve">
          <source>Enable showing missed optimization information (only available in certain passes).</source>
          <target state="translated">Permite mostrar la información de optimización perdida (sólo disponible en ciertos pases).</target>
        </trans-unit>
        <trans-unit id="0d329eb30c66df2a8bec3e0f68514d20ab1b9f92" translate="yes" xml:space="preserve">
          <source>Enable showing optimization information (only available in certain passes).</source>
          <target state="translated">Permite mostrar información de optimización (sólo disponible en determinados pases).</target>
        </trans-unit>
        <trans-unit id="f10fcf4d31c6a2b2451c140a8a88da810228a75d" translate="yes" xml:space="preserve">
          <source>Enable showing scalar evolution analysis details.</source>
          <target state="translated">Permite mostrar los detalles del análisis de la evolución escalar.</target>
        </trans-unit>
        <trans-unit id="1fa4da5aa5a1df45f7fc17506d98a1fa44e7ec97" translate="yes" xml:space="preserve">
          <source>Enable showing the EH region number holding each statement.</source>
          <target state="translated">Permite mostrar el número de la región EH que contiene cada declaración.</target>
        </trans-unit>
        <trans-unit id="c8bfc39b577282d7a982b0609ca5e212d2e36522" translate="yes" xml:space="preserve">
          <source>Enable showing the tree dump for each statement.</source>
          <target state="translated">Permite mostrar el vertedero de árboles para cada declaración.</target>
        </trans-unit>
        <trans-unit id="c1965c688248d83e371ce542160789f937fce791" translate="yes" xml:space="preserve">
          <source>Enable showing the unique ID (&lt;code&gt;DECL_UID&lt;/code&gt;) for each variable.</source>
          <target state="translated">Habilite mostrar el ID &amp;uacute;nico ( &lt;code&gt;DECL_UID&lt;/code&gt; ) para cada variable.</target>
        </trans-unit>
        <trans-unit id="2c8e86f5a7b56d45f646fe90ecd4602077ea1bdc" translate="yes" xml:space="preserve">
          <source>Enable showing virtual operands for every statement.</source>
          <target state="translated">Permite mostrar operandos virtuales para cada declaración.</target>
        </trans-unit>
        <trans-unit id="7287e0e84335a843622d1b816ceb09d5c05aa749" translate="yes" xml:space="preserve">
          <source>Enable sign extend instructions.</source>
          <target state="translated">Activar la señal de extensión de instrucciones.</target>
        </trans-unit>
        <trans-unit id="2106aa3d9fb87ebeededad40a76e40f9c935fadd" translate="yes" xml:space="preserve">
          <source>Enable software pipelining of innermost loops during selective scheduling. This option has no effect unless one of</source>
          <target state="translated">Habilitar la canalización por software de los bucles más internos durante la programación selectiva.Esta opción no tiene efecto a menos que uno de los</target>
        </trans-unit>
        <trans-unit id="523a4757398235b8bbb90229026fc9eed157dbee" translate="yes" xml:space="preserve">
          <source>Enable special code to work around file systems which only permit very short file names, such as MS-DOS.</source>
          <target state="translated">Habilitar un código especial para trabajar con sistemas de archivos que sólo permiten nombres de archivos muy cortos,como MS-DOS.</target>
        </trans-unit>
        <trans-unit id="3536f2d6d38314050bafe0d10aa71b6595a43eae" translate="yes" xml:space="preserve">
          <source>Enable streaming of mangled types names of C++ types and their unification at link time. This increases size of LTO object files, but enables diagnostics about One Definition Rule violations.</source>
          <target state="translated">Habilitar el streaming de los tipos destrozados nombres de los tipos C++y su unificación en el momento del enlace.Esto aumenta el tamaño de los archivos de objetos LTO,pero permite el diagnóstico de las violaciones de la regla de definición única.</target>
        </trans-unit>
        <trans-unit id="07a4edd982a3edcc355177edde03a13c0e84c57f" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;code&gt;char8_t&lt;/code&gt; as adopted for C++2a. This includes the addition of a new &lt;code&gt;char8_t&lt;/code&gt; fundamental type, changes to the types of UTF-8 string and character literals, new signatures for user-defined literals, associated standard library updates, and new &lt;code&gt;__cpp_char8_t&lt;/code&gt; and &lt;code&gt;__cpp_lib_char8_t&lt;/code&gt; feature test macros.</source>
          <target state="translated">Habilite el soporte para &lt;code&gt;char8_t&lt;/code&gt; adoptado para C ++ 2a. Esto incluye la adici&amp;oacute;n de un nuevo tipo fundamental &lt;code&gt;char8_t&lt;/code&gt; , cambios en los tipos de cadenas UTF-8 y literales de caracteres, nuevas firmas para literales definidos por el usuario, actualizaciones de bibliotecas est&amp;aacute;ndar asociadas y nuevas macros de prueba de caracter&amp;iacute;sticas &lt;code&gt;__cpp_char8_t&lt;/code&gt; y &lt;code&gt;__cpp_lib_char8_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86deb01ddbea29be60b5e5fa22319efa9cd9ea02" translate="yes" xml:space="preserve">
          <source>Enable support for C++17 &lt;code&gt;new&lt;/code&gt; of types that require more alignment than &lt;code&gt;void* ::operator new(std::size_t)&lt;/code&gt; provides. A numeric argument such as &lt;code&gt;-faligned-new=32&lt;/code&gt; can be used to specify how much alignment (in bytes) is provided by that function, but few users will need to override the default of &lt;code&gt;alignof(std::max_align_t)&lt;/code&gt;.</source>
          <target state="translated">Habilite el soporte para C ++ 17 &lt;code&gt;new&lt;/code&gt; tipos que requieren m&amp;aacute;s alineaci&amp;oacute;n que la que proporciona &lt;code&gt;void* ::operator new(std::size_t)&lt;/code&gt; . Se puede usar un argumento num&amp;eacute;rico como &lt;code&gt;-faligned-new=32&lt;/code&gt; para especificar cu&amp;aacute;nta alineaci&amp;oacute;n (en bytes) proporciona esa funci&amp;oacute;n, pero pocos usuarios necesitar&amp;aacute;n anular el valor predeterminado de &lt;code&gt;alignof(std::max_align_t)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e96dd7f9b95634f8def4cef0c03097523e0ad470" translate="yes" xml:space="preserve">
          <source>Enable support for the C++ Extensions for Concepts Technical Specification, ISO 19217 (2015), which allows code like</source>
          <target state="translated">Habilitar el soporte para las Extensiones de C++para la Especificación Técnica de Conceptos,ISO 19217 (2015),que permite el código como</target>
        </trans-unit>
        <trans-unit id="14e7ef08a35724e34d06ae98a57c52f37db35541" translate="yes" xml:space="preserve">
          <source>Enable support for the C++ coroutines extension (experimental).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f069479e84a1d7c81e6433a171bacdd46bd05f77" translate="yes" xml:space="preserve">
          <source>Enable syntactic support for structured exception handling in Objective-C, similar to what is offered by C++. This option is required to use the Objective-C keywords &lt;code&gt;@try&lt;/code&gt;, &lt;code&gt;@throw&lt;/code&gt;, &lt;code&gt;@catch&lt;/code&gt;, &lt;code&gt;@finally&lt;/code&gt; and &lt;code&gt;@synchronized&lt;/code&gt;. This option is available with both the GNU runtime and the NeXT runtime (but not available in conjunction with the NeXT runtime on Mac OS X 10.2 and earlier).</source>
          <target state="translated">Habilite el soporte sint&amp;aacute;ctico para el manejo estructurado de excepciones en Objective-C, similar a lo que ofrece C ++. Esta opci&amp;oacute;n es necesaria para utilizar las palabras clave de Objective-C &lt;code&gt;@try&lt;/code&gt; , &lt;code&gt;@throw&lt;/code&gt; , &lt;code&gt;@catch&lt;/code&gt; , &lt;code&gt;@finally&lt;/code&gt; y &lt;code&gt;@synchronized&lt;/code&gt; . Esta opci&amp;oacute;n est&amp;aacute; disponible tanto con el tiempo de ejecuci&amp;oacute;n GNU como con el tiempo de ejecuci&amp;oacute;n NeXT (pero no est&amp;aacute; disponible junto con el tiempo de ejecuci&amp;oacute;n NeXT en Mac OS X 10.2 y anteriores).</target>
        </trans-unit>
        <trans-unit id="2d795a0556dc7d4b23ca50c7c054a8e91a0bb9da" translate="yes" xml:space="preserve">
          <source>Enable the Armv8-a Execution and Data Prediction Restriction instructions. This option is only to enable the extension at the assembler level and does not affect code generation. This option is enabled by default for</source>
          <target state="translated">Habilitar las instrucciones de restricción de ejecución y predicción de datos del Armv8-a.Esta opción es sólo para habilitar la extensión a nivel de ensamblador y no afecta a la generación de código.Esta opción está habilitada por defecto para</target>
        </trans-unit>
        <trans-unit id="9fdfa6853fe490f741b25fcc657be1e589731130" translate="yes" xml:space="preserve">
          <source>Enable the Armv8-a Scalable Vector Extension 2. This also enables SVE instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d449b6d30f1777aba3aa927c43beb1ba1eca16be" translate="yes" xml:space="preserve">
          <source>Enable the Armv8-a Speculation Barrier instruction. This option is only to enable the extension at the assembler level and does not affect code generation. This option is enabled by default for</source>
          <target state="translated">Habilitar la instrucción de Barrera de Especulación Armv8.Esta opción es sólo para habilitar la extensión a nivel de ensamblador y no afecta a la generación de código.Esta opción está habilitada por defecto para</target>
        </trans-unit>
        <trans-unit id="9f3b4e86290c1a4d9bac5d679d03a802d662a426" translate="yes" xml:space="preserve">
          <source>Enable the Armv8-a Speculative Store Bypass Safe instruction. This option is only to enable the extension at the assembler level and does not affect code generation. This option is enabled by default for</source>
          <target state="translated">Habilitar el Armv8,una instrucción especulativa de seguridad de desvío de tienda.Esta opción es sólo para habilitar la extensión a nivel de ensamblador y no afecta a la generación de código.Esta opción está habilitada por defecto para</target>
        </trans-unit>
        <trans-unit id="cb4dff47dd10c4d2d29138894fb337bf731a4703" translate="yes" xml:space="preserve">
          <source>Enable the Armv8-a aes and pmull crypto extension. This also enables Advanced SIMD instructions.</source>
          <target state="translated">Habilitar la extensión criptográfica de Armv8-aes y pmull.Esto también permite instrucciones SIMD avanzadas.</target>
        </trans-unit>
        <trans-unit id="e878790ea268c6c3c0f09ca24b1f8d32605101d6" translate="yes" xml:space="preserve">
          <source>Enable the Armv8-a sha2 crypto extension. This also enables Advanced SIMD instructions.</source>
          <target state="translated">Habilitar la extensión criptográfica Armv8-a sha2.Esto también permite instrucciones avanzadas de SIMD.</target>
        </trans-unit>
        <trans-unit id="712d78d3897110fb983a6b1ce64ceb649bbc8b13" translate="yes" xml:space="preserve">
          <source>Enable the Armv8.5-a Memory Tagging Extensions. This option is only to enable the extension at the assembler level and does not affect code generation.</source>
          <target state="translated">Habilitar las extensiones de etiquetado de memoria del Armv8.5-a.Esta opción es sólo para habilitar la extensión a nivel de ensamblador y no afecta a la generación de código.</target>
        </trans-unit>
        <trans-unit id="9079a098e5a352f9d4734819ee7434e8414e46a7" translate="yes" xml:space="preserve">
          <source>Enable the Armv8.5-a Memory Tagging Extensions. Use of this option with architectures prior to Armv8.5-A is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fc60e33111a67c5486993a8b351f8b44d07966" translate="yes" xml:space="preserve">
          <source>Enable the Armv8.5-a Random Number instructions. This option is only to enable the extension at the assembler level and does not affect code generation.</source>
          <target state="translated">Habilite las instrucciones de Armv8.5-a Random Number.Esta opción es sólo para habilitar la extensión a nivel de ensamblador y no afecta a la generación de código.</target>
        </trans-unit>
        <trans-unit id="180be0b78efe4d6cb3cafec86af33875c8613d90" translate="yes" xml:space="preserve">
          <source>Enable the Custom Datapath Extension (CDE) on selected coprocessors according to the numbers given in the options in the range 0 to 7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baad961c199027af6ce41f297ba396c80d7b6e4" translate="yes" xml:space="preserve">
          <source>Enable the Dot Product extension. This also enables Advanced SIMD instructions.</source>
          <target state="translated">Habilitar la extensión del Producto Punto.Esto también habilita las instrucciones del SIMD Avanzado.</target>
        </trans-unit>
        <trans-unit id="75d41529d8ccf751d43eb43b131c2899752ea6dc" translate="yes" xml:space="preserve">
          <source>Enable the P0136 adjustment to the semantics of C++11 constructor inheritance. This is part of C++17 but also considered to be a Defect Report against C++11 and C++14. This flag is enabled by default unless</source>
          <target state="translated">Habilitar el ajuste de P0136 a la semántica de la herencia del constructor C++11.Esto es parte de C++17 pero también se considera un Informe de Defectos contra C++11 y C++14.Esta bandera está habilitada por defecto a menos que</target>
        </trans-unit>
        <trans-unit id="3336547cc155fdebeb020d2a6fd267e14851b493" translate="yes" xml:space="preserve">
          <source>Enable the P0522 resolution to Core issue 150, template template parameters and default arguments: this allows a template with default template arguments as an argument for a template template parameter with fewer template parameters. This flag is enabled by default for</source>
          <target state="translated">Habilitar la resolución P0522 a Core issue 150,parámetros de plantilla y argumentos por defecto:esto permite una plantilla con argumentos de plantilla por defecto como argumento para un parámetro de plantilla con menos parámetros de plantilla.Este indicador se habilita por defecto para</target>
        </trans-unit>
        <trans-unit id="e10cb464cd66cc6979f0f2bd645896f8d79b1002" translate="yes" xml:space="preserve">
          <source>Enable the RcPc extension. This does not change code generation from GCC, but is passed on to the assembler, enabling inline asm statements to use instructions from the RcPc extension.</source>
          <target state="translated">Habilite la extensión RcPc.Esto no cambia la generación de código de GCC,pero se pasa al ensamblador,permitiendo que las declaraciones asm en línea utilicen las instrucciones de la extensión RcPc.</target>
        </trans-unit>
        <trans-unit id="b8bb0e2cd28800659cbb25749c903e1e45881bcd" translate="yes" xml:space="preserve">
          <source>Enable the Statistical Profiling extension. This option is only to enable the extension at the assembler level and does not affect code generation.</source>
          <target state="translated">Habilitar la extensión de la elaboración de perfiles estadísticos.Esta opción es sólo para habilitar la extensión a nivel de ensamblador y no afecta a la generación de código.</target>
        </trans-unit>
        <trans-unit id="1fe6b0760edee391f1d108920f04662238f04b99" translate="yes" xml:space="preserve">
          <source>Enable the Transactional Memory Extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bf0d0b92eedbfd9d708906c85f1c2c0761dac3" translate="yes" xml:space="preserve">
          <source>Enable the approximation for scalar division.</source>
          <target state="translated">Habilitar la aproximación para la división escalar.</target>
        </trans-unit>
        <trans-unit id="089b193263b191426125d1b838990e7a8cad6bd6" translate="yes" xml:space="preserve">
          <source>Enable the approximation for scalar square root.</source>
          <target state="translated">Habilitar la aproximación para la raíz cuadrada escalar.</target>
        </trans-unit>
        <trans-unit id="9c93085948ceb9475fc7f62f768a72b094e0ccf8" translate="yes" xml:space="preserve">
          <source>Enable the approximation for vectorized division.</source>
          <target state="translated">Habilitar la aproximación para la división vectorial.</target>
        </trans-unit>
        <trans-unit id="57c9384569cf978709f6ae7436442c4140ae097a" translate="yes" xml:space="preserve">
          <source>Enable the approximation for vectorized square root.</source>
          <target state="translated">Habilitar la aproximación para la raíz cuadrada vectorizada.</target>
        </trans-unit>
        <trans-unit id="a491c3894437f3620a7562cbc06a8ae940a33c10" translate="yes" xml:space="preserve">
          <source>Enable the built-in global declarations</source>
          <target state="translated">Habilitar las declaraciones mundiales incorporadas</target>
        </trans-unit>
        <trans-unit id="2237d50ade0b28ca43195c6d9a72499aa22da748" translate="yes" xml:space="preserve">
          <source>Enable the compiler to directly use a symbol name as an address in a load/store instruction, without first loading it into a register. Typically, the use of this option generates larger programs, which run faster than when the option isn&amp;rsquo;t used. However, the results vary from program to program, so it is left as a user option, rather than being permanently enabled.</source>
          <target state="translated">Permita que el compilador use directamente un nombre de s&amp;iacute;mbolo como direcci&amp;oacute;n en una instrucci&amp;oacute;n de carga / almacenamiento, sin cargarlo primero en un registro. Normalmente, el uso de esta opci&amp;oacute;n genera programas m&amp;aacute;s grandes, que se ejecutan m&amp;aacute;s r&amp;aacute;pido que cuando no se usa la opci&amp;oacute;n. Sin embargo, los resultados var&amp;iacute;an de un programa a otro, por lo que se deja como una opci&amp;oacute;n del usuario, en lugar de estar habilitado permanentemente.</target>
        </trans-unit>
        <trans-unit id="41ed1ab2ec5c1611d830306ad10031d9f9977d65" translate="yes" xml:space="preserve">
          <source>Enable the critical-path heuristic in the scheduler. This heuristic favors instructions on the critical path. This is enabled by default when scheduling is enabled, i.e. with</source>
          <target state="translated">Habilitar el heurístico de camino crítico en el programador.Esta heurística favorece las instrucciones en el camino crítico.Esto se habilita por defecto cuando la programación está activada,es decir,con</target>
        </trans-unit>
        <trans-unit id="4067ddde2438b48af6e32a24a3e86763ffbd4275" translate="yes" xml:space="preserve">
          <source>Enable the default instructions, equivalent to</source>
          <target state="translated">Habilitar las instrucciones por defecto,equivalentes a</target>
        </trans-unit>
        <trans-unit id="8f1e0508bfc454c7d53eb8b99b0581386011e857" translate="yes" xml:space="preserve">
          <source>Enable the dependent-count heuristic in the scheduler. This heuristic favors the instruction that has more instructions depending on it. This is enabled by default when scheduling is enabled, i.e. with</source>
          <target state="translated">Habilitar la heurística de cuenta de dependientes en el planificador.Esta heurística favorece la instrucción que tiene más instrucciones dependiendo de ella.Esto se habilita por defecto cuando la programación está activada,es decir,con</target>
        </trans-unit>
        <trans-unit id="507033c0f31508a95a83480597cd9ac155e65d9c" translate="yes" xml:space="preserve">
          <source>Enable the documented workaround for the back-to-back store errata of the GR712RC processor.</source>
          <target state="translated">Habilitar la solución documentada para la errata de almacenamiento del procesador GR712RC.</target>
        </trans-unit>
        <trans-unit id="eef2a052e4462aff6add94764479243457e98b05" translate="yes" xml:space="preserve">
          <source>Enable the documented workaround for the back-to-back store errata of the UT699E/UT700 processor.</source>
          <target state="translated">Habilitar la solución documentada para la errata de almacenamiento del procesador UT699E/UT700.</target>
        </trans-unit>
        <trans-unit id="decf2a901923b7e9eb5ca1ab92693295f143a06a" translate="yes" xml:space="preserve">
          <source>Enable the documented workaround for the single erratum of the Atmel AT697F processor (which corresponds to erratum #13 of the AT697E processor).</source>
          <target state="translated">Habilitar la solución documentada para la única fe de erratas del procesador AT697F de Atmel (que corresponde a la fe de erratas nº 13 del procesador AT697E).</target>
        </trans-unit>
        <trans-unit id="bcb5bb2598740b13546a58b17f6d5aa7c7ba6853" translate="yes" xml:space="preserve">
          <source>Enable the documented workarounds for the floating-point errata and the data cache nullify errata of the UT699 processor.</source>
          <target state="translated">Habilitar las soluciones documentadas para la errata de punto flotante y la memoria caché de datos anula la errata del procesador UT699.</target>
        </trans-unit>
        <trans-unit id="43eeb910cdee4c766507663e6e771a799fe37d3f" translate="yes" xml:space="preserve">
          <source>Enable the double-precision reciprocal approximation instructions.</source>
          <target state="translated">Habilitar las instrucciones de aproximación recíproca de doble precisión.</target>
        </trans-unit>
        <trans-unit id="446e6f12ce2775419c21aa646c548678ff1569c1" translate="yes" xml:space="preserve">
          <source>Enable the double-precision reciprocal square root approximation instructions.</source>
          <target state="translated">Habilitar las instrucciones de aproximación de la raíz cuadrada recíproca de doble precisión.</target>
        </trans-unit>
        <trans-unit id="71718fe9aa5b48da1b26c519c152f829f75fb0c0" translate="yes" xml:space="preserve">
          <source>Enable the extended &lt;code&gt;lrw&lt;/code&gt; instruction. This option defaults to on for CK801 and off otherwise.</source>
          <target state="translated">Habilite la instrucci&amp;oacute;n &lt;code&gt;lrw&lt;/code&gt; extendida . Esta opci&amp;oacute;n est&amp;aacute; activada de forma predeterminada para CK801 y desactivada en caso contrario.</target>
        </trans-unit>
        <trans-unit id="26a17bc6f3de31676776135a782cd9c993e95087" translate="yes" xml:space="preserve">
          <source>Enable the generation of conditional moves.</source>
          <target state="translated">Habilitar la generación de movimientos condicionales.</target>
        </trans-unit>
        <trans-unit id="04969a109a871e39815667dea2edea4731968533" translate="yes" xml:space="preserve">
          <source>Enable the group heuristic in the scheduler. This heuristic favors the instruction that belongs to a schedule group. This is enabled by default when scheduling is enabled, i.e. with</source>
          <target state="translated">Habilita el heurístico de grupo en el programador.Esta heurística favorece la instrucción que pertenece a un grupo de horario.Esto se habilita por defecto cuando la programación está activada,es decir,con</target>
        </trans-unit>
        <trans-unit id="74416a1c4632bd2c9719e7f267cc78921917bec4" translate="yes" xml:space="preserve">
          <source>Enable the identity transformation for graphite. For every SCoP we generate the polyhedral representation and transform it back to gimple. Using</source>
          <target state="translated">Habilitar la transformación de identidad para el grafito.Para cada SCoP generamos la representación poliédrica y la transformamos de nuevo en gimple.Usando</target>
        </trans-unit>
        <trans-unit id="d52969e42d36857a708d794bd442398a6f2b1d5e" translate="yes" xml:space="preserve">
          <source>Enable the isl based loop nest optimizer. This is a generic loop nest optimizer based on the Pluto optimization algorithms. It calculates a loop structure optimized for data-locality and parallelism. This option is experimental.</source>
          <target state="translated">Habilitar el optimizador de nidos de bucle basado en el Islam.Este es un optimizador genérico de nido de lazo basado en los algoritmos de optimización de Plutón.Calcula una estructura de bucle optimizada para la localización de datos y el paralelismo.Esta opción es experimental.</target>
        </trans-unit>
        <trans-unit id="08b7ee5bf2b0eaab5c12a44d79b227e23ee0c0f5" translate="yes" xml:space="preserve">
          <source>Enable the last-instruction heuristic in the scheduler. This heuristic favors the instruction that is less dependent on the last instruction scheduled. This is enabled by default when scheduling is enabled, i.e. with</source>
          <target state="translated">Habilitar la última instrucción heurística en el planificador.Esta heurística favorece la instrucción que es menos dependiente de la última instrucción programada.Esto se habilita por defecto cuando la programación está activada,es decir,con</target>
        </trans-unit>
        <trans-unit id="dc56e6084e464db3d7d083e493fb69fc336bcfc3" translate="yes" xml:space="preserve">
          <source>Enable the optimization pass in the HP-UX linker. Note this makes symbolic debugging impossible. It also triggers a bug in the HP-UX 8 and HP-UX 9 linkers in which they give bogus error messages when linking some programs.</source>
          <target state="translated">Habilitar el pase de optimización en el enlazador HP-UX.Ten en cuenta que esto hace imposible la depuración simbólica.También activa un error en los enlazadores HP-UX 8 y HP-UX 9 en los que dan mensajes de error falsos al enlazar algunos programas.</target>
        </trans-unit>
        <trans-unit id="8008915ad05d64b6cc01c8698eac6fdda560f6c1" translate="yes" xml:space="preserve">
          <source>Enable the rank heuristic in the scheduler. This heuristic favors the instruction belonging to a basic block with greater size or frequency. This is enabled by default when scheduling is enabled, i.e. with</source>
          <target state="translated">Habilitar el rango heurístico en el planificador.Esta heurística favorece la instrucción perteneciente a un bloque básico de mayor tamaño o frecuencia.Esto se habilita por defecto cuando la programación está activada,es decir,con</target>
        </trans-unit>
        <trans-unit id="e6ed1ceef09b312da3bb73bea4902c46d06845e0" translate="yes" xml:space="preserve">
          <source>Enable the reciprocal approximation instructions for both single and double precision.</source>
          <target state="translated">Habilitar las instrucciones de aproximación recíproca tanto para la precisión simple como para la doble.</target>
        </trans-unit>
        <trans-unit id="4c8e53d3299e21b3cf3fba9ff55c2082c7b6b1ec" translate="yes" xml:space="preserve">
          <source>Enable the reciprocal square root approximation instructions for both single and double precision.</source>
          <target state="translated">Habilitar las instrucciones de aproximación de la raíz cuadrada recíproca tanto para la precisión simple como para la doble.</target>
        </trans-unit>
        <trans-unit id="21fb72c5396788f3586c523b20f25c7cd0196802" translate="yes" xml:space="preserve">
          <source>Enable the sha512 and sha3 crypto extension. This also enables Advanced SIMD instructions. Use of this option with architectures prior to Armv8.2-A is not supported.</source>
          <target state="translated">Activar la extensión criptográfica del sha512 y del sha3.Esto también habilita las instrucciones avanzadas de SIMD.El uso de esta opción con arquitecturas anteriores a Armv8.2-A no está soportado.</target>
        </trans-unit>
        <trans-unit id="ac17a049cdd1860b9740d6573dbf1dae4507b37b" translate="yes" xml:space="preserve">
          <source>Enable the single-precision reciprocal approximation instructions.</source>
          <target state="translated">Habilitar las instrucciones de aproximación recíproca de precisión única.</target>
        </trans-unit>
        <trans-unit id="a4aef85fc3ef145e7cf3738dcc41b55cc33d82a4" translate="yes" xml:space="preserve">
          <source>Enable the single-precision reciprocal square root approximation instructions.</source>
          <target state="translated">Habilitar las instrucciones de aproximación de la raíz cuadrada recíproca de precisión única.</target>
        </trans-unit>
        <trans-unit id="0a29cdf0e1f32dd82e6b20680fbd0f552bb364b2" translate="yes" xml:space="preserve">
          <source>Enable the sm3 and sm4 crypto extension. This also enables Advanced SIMD instructions. Use of this option with architectures prior to Armv8.2-A is not supported.</source>
          <target state="translated">Habilite la extensión criptográfica de sm3 y sm4.Esto también habilita las instrucciones avanzadas de SIMD.El uso de esta opción con arquitecturas anteriores a Armv8.2-A no está soportado.</target>
        </trans-unit>
        <trans-unit id="cab5f01ba7747ba0641df8f437ad352196c1c6d3" translate="yes" xml:space="preserve">
          <source>Enable the speculative instruction heuristic in the scheduler. This heuristic favors speculative instructions with greater dependency weakness. This is enabled by default when scheduling is enabled, i.e. with</source>
          <target state="translated">Habilitar la instrucción especulativa heurística en el planificador.Esta heurística favorece las instrucciones especulativas con mayor debilidad de dependencia.Esto se habilita por defecto cuando la programación está activada,es decir,con</target>
        </trans-unit>
        <trans-unit id="e847a09656f326765748affab74d130a0fbbbfb3" translate="yes" xml:space="preserve">
          <source>Enable the use (disable) of the built-in functions that allow direct access to the cryptographic instructions that were added in version 2.07 of the PowerPC ISA.</source>
          <target state="translated">Habilitar el uso (deshabilitar)de las funciones incorporadas que permiten el acceso directo a las instrucciones criptográficas que se añadieron en la versión 2.07 del PowerPC ISA.</target>
        </trans-unit>
        <trans-unit id="0beb7325ebbd427ff6f653a5586006076fc19189" translate="yes" xml:space="preserve">
          <source>Enable the use of &lt;code&gt;GPREL&lt;/code&gt; relocations in the FDPIC ABI for data that is known to be in read-only sections. It&amp;rsquo;s enabled by default, except for</source>
          <target state="translated">Habilite el uso de reubicaciones de &lt;code&gt;GPREL&lt;/code&gt; en FDPIC ABI para datos que se sabe que est&amp;aacute;n en secciones de solo lectura. Est&amp;aacute; habilitado de forma predeterminada, excepto para</target>
        </trans-unit>
        <trans-unit id="4b3e38bf3ad012b6637b58a91ae68d4399ef997c" translate="yes" xml:space="preserve">
          <source>Enable the use of a minimum runtime environment - no static initializers or constructors. This is intended for memory-constrained devices. The compiler includes special symbols in some objects that tell the linker and runtime which code fragments are required.</source>
          <target state="translated">Permitir el uso de un entorno de ejecución mínimo,sin inicializadores o constructores estáticos.Esto está pensado para dispositivos con memoria limitada.El compilador incluye símbolos especiales en algunos objetos que indican al enlazador y al tiempo de ejecución qué fragmentos de código son necesarios.</target>
        </trans-unit>
        <trans-unit id="2e3906c56ec37b4268552279d6414d35519910f2" translate="yes" xml:space="preserve">
          <source>Enable the use of assembler directives only GAS understands.</source>
          <target state="translated">Habilitar el uso de directivas de ensamblador que sólo entiende el GAS.</target>
        </trans-unit>
        <trans-unit id="8315949440093bd19b322b38da5ef593bd5c1273" translate="yes" xml:space="preserve">
          <source>Enable the use of bit manipulation instructions on SH2A.</source>
          <target state="translated">Habilitar el uso de instrucciones de manipulación de bits en el SH2A.</target>
        </trans-unit>
        <trans-unit id="776b7d037afae7efec8fa9845c5ffbd3bad3e0de" translate="yes" xml:space="preserve">
          <source>Enable the use of conditional execution (default).</source>
          <target state="translated">Habilitar el uso de la ejecución condicional (por defecto).</target>
        </trans-unit>
        <trans-unit id="3f92036c53e4d3d87aa05d99ffc56331dbaf7cbe" translate="yes" xml:space="preserve">
          <source>Enable the use of conditional set instructions (default).</source>
          <target state="translated">Habilitar el uso de instrucciones de conjuntos condicionales (por defecto).</target>
        </trans-unit>
        <trans-unit id="f02a7f12f7eb0e41accd67fcdeeacad0f7a7fbae" translate="yes" xml:space="preserve">
          <source>Enable the use of conditional-move instructions (default).</source>
          <target state="translated">Habilitar el uso de instrucciones de movimiento condicional (por defecto).</target>
        </trans-unit>
        <trans-unit id="8bd8c14864a3dc22ad6416f43c205d177280cc14" translate="yes" xml:space="preserve">
          <source>Enable the use of indexed loads. This can be problematic because some optimizers then assume that indexed stores exist, which is not the case.</source>
          <target state="translated">Habilitar el uso de cargas indexadas.Esto puede ser problemático porque algunos optimizadores asumen entonces que existen almacenes indexados,lo que no es el caso.</target>
        </trans-unit>
        <trans-unit id="fa24f968931ae6f6108870656a7843c7774cc339" translate="yes" xml:space="preserve">
          <source>Enable the use of multiply-accumulate instructions. Disabled by default.</source>
          <target state="translated">Habilitar el uso de las instrucciones de multiplicación y acumulación.Desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="d7a1f017f17fab4284673c060b8b2143eec98325" translate="yes" xml:space="preserve">
          <source>Enable the use of odd-numbered single-precision floating-point registers for the o32 ABI. This is the default for processors that are known to support these registers. When using the o32 FPXX ABI,</source>
          <target state="translated">Permitir el uso de registros de punto flotante de precisión única de número impar para el ABI o32.Este es el valor por defecto para los procesadores que se sabe que soportan estos registros.Cuando se utiliza el o32 FPXX ABI,</target>
        </trans-unit>
        <trans-unit id="ea76b09fecc8949f24ae03f9a3f42c9fa0287c50" translate="yes" xml:space="preserve">
          <source>Enable the use of pre/post modify with register displacement.</source>
          <target state="translated">Habilitar el uso de pre y post modificación con desplazamiento de registro.</target>
        </trans-unit>
        <trans-unit id="6635132d2079387847468168f8edcfc7554ca84f" translate="yes" xml:space="preserve">
          <source>Enable the use of the instruction &lt;code&gt;fmovd&lt;/code&gt;. Check</source>
          <target state="translated">Habilite el uso de la instrucci&amp;oacute;n &lt;code&gt;fmovd&lt;/code&gt; . Cheque</target>
        </trans-unit>
        <trans-unit id="a2fdf0058d830cee1f93b69f832936392dc9ed46" translate="yes" xml:space="preserve">
          <source>Enable tree pass &lt;var&gt;pass&lt;/var&gt;. See</source>
          <target state="translated">Habilitar pase de &lt;var&gt;pass&lt;/var&gt; &amp;aacute;rbol . Ver</target>
        </trans-unit>
        <trans-unit id="b8f020346acd5709653f3c40d525659258a1b9db" translate="yes" xml:space="preserve">
          <source>Enable use of &lt;code&gt;bi&lt;/code&gt; or &lt;code&gt;bih&lt;/code&gt; instructions to implement jump tables.</source>
          <target state="translated">Habilite el uso de instrucciones &lt;code&gt;bi&lt;/code&gt; o &lt;code&gt;bih&lt;/code&gt; para implementar tablas de salto.</target>
        </trans-unit>
        <trans-unit id="79a73d3f193a6e6ff330a4b9de3265b919526bff" translate="yes" xml:space="preserve">
          <source>Enable use of the extended instructions of the FT32B processor.</source>
          <target state="translated">Habilitar el uso de las instrucciones extendidas del procesador FT32B.</target>
        </trans-unit>
        <trans-unit id="6d0438ac8bb52c3d5f5f9c3df1e29694d4f64211" translate="yes" xml:space="preserve">
          <source>Enable user-defined instructions.</source>
          <target state="translated">Habilitar las instrucciones definidas por el usuario.</target>
        </trans-unit>
        <trans-unit id="289e8ab3bafc79cd3d4d7a33238e966c5c4d7a05" translate="yes" xml:space="preserve">
          <source>Enable verbose cost model dumping in the debug dump files. This option is provided for use in debugging the compiler.</source>
          <target state="translated">Habilitar el vertido del modelo de costes verboso en los archivos de depuración.Esta opción se proporciona para su uso en la depuración del compilador.</target>
        </trans-unit>
        <trans-unit id="5698cf3230e865992f3f27c124b887d7d8c62160" translate="yes" xml:space="preserve">
          <source>Enable/disable bit-field layout compatible with the native Microsoft Windows compiler.</source>
          <target state="translated">Habilitar/deshabilitar la disposición de los campos de bits compatible con el compilador nativo de Microsoft Windows.</target>
        </trans-unit>
        <trans-unit id="ec1922decad109f864b4cf7878296aa732c83b64" translate="yes" xml:space="preserve">
          <source>Enable/disable inlining of string operations.</source>
          <target state="translated">Activar/desactivar el alineamiento de las operaciones de cuerda.</target>
        </trans-unit>
        <trans-unit id="77a9782fdfbab35d94a1e98b3a7fd934623ad240" translate="yes" xml:space="preserve">
          <source>Enable/disable the &lt;var&gt;__float128&lt;/var&gt; keyword for IEEE 128-bit floating point and use either software emulation for IEEE 128-bit floating point or hardware instructions.</source>
          <target state="translated">Habilite / deshabilite la palabra clave &lt;var&gt;__float128&lt;/var&gt; para el punto flotante IEEE de 128 bits y utilice la emulaci&amp;oacute;n de software para el punto flotante IEEE de 128 bits o las instrucciones de hardware.</target>
        </trans-unit>
        <trans-unit id="eef257e319b773e37c267992617c97ed3ff87e5c" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of RCPSS, RCPPS, RSQRTSS and RSQRTPS instructions followed an additional Newton-Raphson step instead of doing a floating-point division.</source>
          <target state="translated">Activar/desactivar la generación de instrucciones RCPSS,RCPPS,RSQRTSS y RSQRTPS siguió un paso adicional de Newton-Raphson en lugar de hacer una división en punto flotante.</target>
        </trans-unit>
        <trans-unit id="ce9687705ccc627a85aa74c6222e1c475cf39951" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of floating point that depends on IEEE arithmetic.</source>
          <target state="translated">Habilitar/deshabilitar la generación de punto flotante que depende de la aritmética del IEEE.</target>
        </trans-unit>
        <trans-unit id="e06af20ef568b69c3362691eda73268a45b5e6fb" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the 3DNow! instructions.</source>
          <target state="translated">Habilitar/deshabilitar la generación de las instrucciones de 3DNow!</target>
        </trans-unit>
        <trans-unit id="8ea30fdab63dafe3dc7fc652cf67136424f3b625" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt;, and &lt;code&gt;sqrt&lt;/code&gt; instructions on the 387 floating-point unit.</source>
          <target state="translated">Habilite / deshabilite la generaci&amp;oacute;n de las instrucciones &lt;code&gt;sin&lt;/code&gt; , &lt;code&gt;cos&lt;/code&gt; y &lt;code&gt;sqrt&lt;/code&gt; en la unidad de coma flotante 387.</target>
        </trans-unit>
        <trans-unit id="d2ce898ea3fbbf85aca7bdcebad5257c4339a871" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the ADX instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones ADX.</target>
        </trans-unit>
        <trans-unit id="8c51cd7ffa80497e01030865d76bb3aa852e4b11" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AES instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AES.</target>
        </trans-unit>
        <trans-unit id="139f5148751f41ac5e236f52ce09ecaba429fae5" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones AVX.</target>
        </trans-unit>
        <trans-unit id="c03537f2a6f562c3bdf507ee0385caa610905340" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX2 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX2.</target>
        </trans-unit>
        <trans-unit id="2f46ca2cd644ae06703a20fd137f758ec86b545b" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX5124FMAPS instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de AVX5124FMAPS.</target>
        </trans-unit>
        <trans-unit id="07c3fb12af13a9cd69b78d9bc8b1bf44bce2f703" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX5124VNNIW instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX5124VNNIW.</target>
        </trans-unit>
        <trans-unit id="3754f28eb3ff315a901b1086241414b36cdc2445" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512BITALG instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de AVX512BITALG.</target>
        </trans-unit>
        <trans-unit id="9d757b2f48a6a1b6957e3c46cfd35f8cef5e43f2" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512BW instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512BW.</target>
        </trans-unit>
        <trans-unit id="d3c2cb946f575c062fed2315966b199b452fa19e" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512CD instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512CD.</target>
        </trans-unit>
        <trans-unit id="55f4758594e3826b45c045f868cd0c0b6fe314a5" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512DQ instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512DQ.</target>
        </trans-unit>
        <trans-unit id="868a5a7c9ba2cab10b4dbee05b59b72caa86a0f1" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512ER instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512ER.</target>
        </trans-unit>
        <trans-unit id="40cf4ec0c6bc30ab932552059f3f09cac003af63" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512F instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512F.</target>
        </trans-unit>
        <trans-unit id="ba0e32798c4a1b18ba185f7a8c7a840f7e7480c5" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512IFMA instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512IFMA.</target>
        </trans-unit>
        <trans-unit id="cfee43efb9eef88de6b588ce9a55a47d1e02ac8b" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512PF instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512PF.</target>
        </trans-unit>
        <trans-unit id="1d9376176900a884770b47d4b38ffe3800952fda" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512VBMI instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512VBMI.</target>
        </trans-unit>
        <trans-unit id="5315cd056026db5157cf29bd04c56d18b6d556b6" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512VBMI2 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512VBMI2.</target>
        </trans-unit>
        <trans-unit id="ddf56de8dc48259cd81ab8285e90003fb25e73e2" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512VL instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512VL.</target>
        </trans-unit>
        <trans-unit id="26241a02deae96e24160a0ca3f3cc5c41033dbf3" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512VNNI instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512VNNI.</target>
        </trans-unit>
        <trans-unit id="84a8ab5234b9fa4c56baeffdaee98c552e89549f" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the AVX512VPOPCNTDQ instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del AVX512VPOPCNTDQ.</target>
        </trans-unit>
        <trans-unit id="dae7d1054e24eee8d8b487043aaad1fc5f1db574" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the BMI instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del IMC.</target>
        </trans-unit>
        <trans-unit id="3d72a8758536f6a87e94a41fe37b66f09beef533" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the BMI2 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del IMC2.</target>
        </trans-unit>
        <trans-unit id="b738e70323169015d6a48d84ae40dd6c29e5217d" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CLD before string moves.</source>
          <target state="translated">Activar/desactivar la generación del CLD antes de que se mueva la cuerda.</target>
        </trans-unit>
        <trans-unit id="d65d8d65a18d1cfa6dc9c78ebdaad5ad563343cb" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CLDEMOTE instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones CLDEMOTE.</target>
        </trans-unit>
        <trans-unit id="ccb6f558360b355b894e7ea63cd154a997ed12e8" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CLFLUSHOPT instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de CLFLUSHOPT.</target>
        </trans-unit>
        <trans-unit id="f0801d5d70f8b9df1efe3aea49e8a0671ca5bfec" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CLWB instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones CLWB.</target>
        </trans-unit>
        <trans-unit id="94ecea85bbdafb56613082f3e5be7c02237756ed" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CLZERO instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de CLZERO.</target>
        </trans-unit>
        <trans-unit id="f8d79a3c698ec42fbe32e73864266b011f951b2f" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CMPXCHG16B instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del CMPXCHG16B.</target>
        </trans-unit>
        <trans-unit id="b0bd05f01479f2861886a517faf455f95df939c9" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the CRC32 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del CRC32.</target>
        </trans-unit>
        <trans-unit id="d6440333fc0c90bc6217f92335430eaed3b0c3e6" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the F16C instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del F16C.</target>
        </trans-unit>
        <trans-unit id="5cea65073f4a60c1177a3414fc29a42c91b72246" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the FMA instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones FMA.</target>
        </trans-unit>
        <trans-unit id="99871ac8f6615a85bb6ff6e756bf21d0a7db8138" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the FMA4 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del FMA4.</target>
        </trans-unit>
        <trans-unit id="4820cc9a7748ec354eac413d8f383da9dd67e717" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the FSGSBASE instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de la FSGSBASE.</target>
        </trans-unit>
        <trans-unit id="60644d857fe08e2846e93707df49f0bca9fb4a3e" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the FXSR instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones FXSR.</target>
        </trans-unit>
        <trans-unit id="0d58cb597f94125b583603aeaf0cb6d6fac80c1b" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the GFNI instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones GFNI.</target>
        </trans-unit>
        <trans-unit id="9578e9d5e6eece4df004759dd7fc90f39eea18e0" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the HLE instruction prefixes.</source>
          <target state="translated">Activar/desactivar la generación de los prefijos de instrucción HLE.</target>
        </trans-unit>
        <trans-unit id="549533ddadf886e04d518c98906dae343a33a8ce" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the LWP instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de LWP.</target>
        </trans-unit>
        <trans-unit id="8c3785d4101d06b824b0b36311920e0a30ccd2d9" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the LZCNT instructions.</source>
          <target state="translated">Habilitar/deshabilitar la generación de las instrucciones de la LZCNT.</target>
        </trans-unit>
        <trans-unit id="574261210d9c97190453b59ddf32621dc2c86c69" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the MMX instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones MMX.</target>
        </trans-unit>
        <trans-unit id="45a7da12e51c3e52b7908907f0dfac053d1882c4" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the MOVBE instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del MOVBE.</target>
        </trans-unit>
        <trans-unit id="75cfc04edcd4dee4218a715cae2bd3ac7fa16a7e" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the MOVDIR64B instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones MOVDIR64B.</target>
        </trans-unit>
        <trans-unit id="c6371db2050fdd103c6d197692dfd64140187f4a" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the MOVDIRI instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de MOVDIRI.</target>
        </trans-unit>
        <trans-unit id="6e98e7f5d53a1e3439a31b14070244368aebebfe" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the MWAITX instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del MWAITX.</target>
        </trans-unit>
        <trans-unit id="dc37894f7a2ce025aaeba83cdca8f3ca819436f1" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the PCLMUL instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del PCLMUL.</target>
        </trans-unit>
        <trans-unit id="c6ecdb5d5fff5ea045de6d2ca8023861f04ebc4d" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the PCONFIG instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones PCONFIG.</target>
        </trans-unit>
        <trans-unit id="a081a1e7a08745213d7883c3b5236130fe755e13" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the PKU instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de la PKU.</target>
        </trans-unit>
        <trans-unit id="e9e69747966699a82f308dbbadb71d6e9fb92d92" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the POPCNT instruction.</source>
          <target state="translated">Activar/desactivar la generación de la instrucción POPCNT.</target>
        </trans-unit>
        <trans-unit id="f9ed3efe60bd11688e60a3f2cb5a1ff252d812d0" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the PREFETCHW instruction.</source>
          <target state="translated">Activar/desactivar la generación de la instrucción PREFETCHW.</target>
        </trans-unit>
        <trans-unit id="006748470b229e9088cb61bc26a1257f2c9a8615" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the PREFETCHWT1 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de PREFETCHWT1.</target>
        </trans-unit>
        <trans-unit id="2447c34a50f2bd64c3943526353f34051a55f5aa" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the PTWRITE instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de PTWRITE.</target>
        </trans-unit>
        <trans-unit id="5735ee8db2baf84da1ef868849fd1bf84c1f8c11" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the RDPID instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del RDPID.</target>
        </trans-unit>
        <trans-unit id="0b0a5749ac92e20b8e558766d0dd8d71d8adeeaf" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the RDRND instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de RDRND.</target>
        </trans-unit>
        <trans-unit id="4913a7bcb28cb1f12173c4058eaf61ab9315d7d3" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the RDSEED instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de RDSEED.</target>
        </trans-unit>
        <trans-unit id="300142c2ef84f7df525c1aa21af494a1e7bead9f" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the RTM instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones RTM.</target>
        </trans-unit>
        <trans-unit id="0d2ad4e123ffd7abb18aa9c974df2646f0d5508c" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SAHF instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones SAHF.</target>
        </trans-unit>
        <trans-unit id="632f005a4b74a3843a3298d0871cbe50c5ad6aa9" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SGX instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del SGX.</target>
        </trans-unit>
        <trans-unit id="6b57bd12c5e2df48fa7d7e43ba31d0995c7f5553" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SHA instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del SHA.</target>
        </trans-unit>
        <trans-unit id="b5d7ecf6e517427fea4ad12abde111a42bd74cea" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SSE instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones SSE.</target>
        </trans-unit>
        <trans-unit id="1f0972ae163067735798e2e6f4187300ae1137e4" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SSE2 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del SSE2.</target>
        </trans-unit>
        <trans-unit id="b03632fda4a2d3d92f1cf4eac7cca05dbc5a7516" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SSE3 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del SSE3.</target>
        </trans-unit>
        <trans-unit id="5e9b999ddb7457a054d66bdaa2de1a8f647ad215" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SSE4 instructions (both SSE4.1 and SSE4.2).</source>
          <target state="translated">Habilitar/deshabilitar la generación de las instrucciones SSE4 (tanto SSE4.1 como SSE4.2).</target>
        </trans-unit>
        <trans-unit id="21d0ef801e5d8043d92d8c50dd3d6daaddab55a0" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SSE4A instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones SSE4A.</target>
        </trans-unit>
        <trans-unit id="ab7b78506bfd06d655fee8ea1068706000cbeacf" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the SSSE3 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones SSSE3.</target>
        </trans-unit>
        <trans-unit id="f0e97c519b39b4830d04c86470ddf48b233a76c5" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the TBM instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del TBM.</target>
        </trans-unit>
        <trans-unit id="f3acd83d7172837bca3d0b44672674470b67ff86" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the VAES instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del VAES.</target>
        </trans-unit>
        <trans-unit id="9789894eea8adf6b88ad98db26058bba573138b8" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the VPCLMULQDQ instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones VPCLMULQDQ.</target>
        </trans-unit>
        <trans-unit id="b524ba4aef3ce6873b5b0e11048e23307db06122" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the WAITPKG instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de WAITPKG.</target>
        </trans-unit>
        <trans-unit id="a045e3b2a45d14170b9039170f7578c3d2713015" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the WBNOINVD instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de WBNOINVD.</target>
        </trans-unit>
        <trans-unit id="e40cfbce647b2c7f9ddf7f4f626656cc3a1bc167" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the XOP instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones XOP.</target>
        </trans-unit>
        <trans-unit id="af8da63fa2d12d8f18afd42b233c4d37ee867c63" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the XSAVE instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de XSAVE.</target>
        </trans-unit>
        <trans-unit id="1233b5b867e3f5dba2db3c438d3d6df18bde5ef8" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the XSAVEC instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones del XSAVEC.</target>
        </trans-unit>
        <trans-unit id="a0a9e371f8da9a97cd65e604007429c825f18769" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the XSAVEOPT instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de XSAVEOPT.</target>
        </trans-unit>
        <trans-unit id="40e3ea0db494aa36d313e852fcbfd0f81556503b" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the XSAVES instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de XSAVES.</target>
        </trans-unit>
        <trans-unit id="fe009b6bf64ee12df513906e2d5837b5e1c97910" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the advanced bit instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones de bits avanzados.</target>
        </trans-unit>
        <trans-unit id="da867b2b85cc94070610ef36f96c5698f745a3ec" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the enhanced 3DNow! instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones mejoradas de 3DNow!</target>
        </trans-unit>
        <trans-unit id="7b3bd531bffe003f20aeec31cfccd8602793b41a" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the inline code to do small string operations and calling the library routines for large operations.</source>
          <target state="translated">Habilitar/deshabilitar la generación del código en línea para hacer pequeñas operaciones de cadena y llamar a las rutinas de la biblioteca para grandes operaciones.</target>
        </trans-unit>
        <trans-unit id="902acc4f79ae76c2d32a7b6c514f8deac67c62fb" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the sse4.1 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones sse4.1.</target>
        </trans-unit>
        <trans-unit id="2a2818a0c367c053dac063d194f234ec531d06f2" translate="yes" xml:space="preserve">
          <source>Enable/disable the generation of the sse4.2 instructions.</source>
          <target state="translated">Activar/desactivar la generación de las instrucciones sse4.2.</target>
        </trans-unit>
        <trans-unit id="37e917a07fa74d7e4e6dadb9579fbc16f97ae659" translate="yes" xml:space="preserve">
          <source>Enable/disable the shadow stack built-in functions from CET.</source>
          <target state="translated">Activar/desactivar las funciones incorporadas de la pila de sombras desde el CET.</target>
        </trans-unit>
        <trans-unit id="e907f9b58bf0706e2b41d509db8ed99ad239f467" translate="yes" xml:space="preserve">
          <source>Enable/disable using ISA 3.0 hardware instructions to support the &lt;var&gt;__float128&lt;/var&gt; data type.</source>
          <target state="translated">Habilite / deshabilite usando las instrucciones de hardware ISA 3.0 para admitir el tipo de datos &lt;var&gt;__float128&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="41e598e82b094b60e50ff17f84b1a81de5e43516" translate="yes" xml:space="preserve">
          <source>Enabled at level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b32f2d1dc57603e53cae07a8b8cf8dd5b0f7205" translate="yes" xml:space="preserve">
          <source>Enabled at levels</source>
          <target state="translated">Habilitado en los niveles</target>
        </trans-unit>
        <trans-unit id="a2d7a1ae5b45c7663ff5c6c74c01638ab9ca0806" translate="yes" xml:space="preserve">
          <source>Enabled by</source>
          <target state="translated">Habilitado por</target>
        </trans-unit>
        <trans-unit id="87971a35b8aed293eb3378e3d8ac5721ecb5cb96" translate="yes" xml:space="preserve">
          <source>Enabled by default at</source>
          <target state="translated">Habilitado por defecto en</target>
        </trans-unit>
        <trans-unit id="bcd7c586f5c724dfc09404aaf2a878d0206e9f76" translate="yes" xml:space="preserve">
          <source>Enabled by default when</source>
          <target state="translated">Habilitado por defecto cuando</target>
        </trans-unit>
        <trans-unit id="4f94ea1c93e5664c46cd416ea64f7cc9936467d8" translate="yes" xml:space="preserve">
          <source>Enabled by default with</source>
          <target state="translated">Habilitado por defecto con</target>
        </trans-unit>
        <trans-unit id="261c7b9c3b776bec501c26a9d2fe4d480d9d16f7" translate="yes" xml:space="preserve">
          <source>Enabled by default.</source>
          <target state="translated">Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="d3d5b773827f9c4413a2fc452aae96dd06f591fd" translate="yes" xml:space="preserve">
          <source>Enabled for Alpha, AArch64 and x86 at levels</source>
          <target state="translated">Habilitado para Alfa,AArch64 y x86 en los niveles</target>
        </trans-unit>
        <trans-unit id="217f8e562e876828812e90f53725615d6901cc9d" translate="yes" xml:space="preserve">
          <source>Enabled for x86 at levels</source>
          <target state="translated">Habilitado para x86 en niveles</target>
        </trans-unit>
        <trans-unit id="44ce21fc6a64ad296ee8e3cda3bcb2b9759adebf" translate="yes" xml:space="preserve">
          <source>Enabled with</source>
          <target state="translated">Habilitado con</target>
        </trans-unit>
        <trans-unit id="979f6df4ed2e6e9238efa8b3ebc9f087264e476a" translate="yes" xml:space="preserve">
          <source>Enables (</source>
          <target state="translated">Permite (</target>
        </trans-unit>
        <trans-unit id="7eae3793cec99e5fa487fe453e12770d55076d5b" translate="yes" xml:space="preserve">
          <source>Enables (or disables) reading and writing of 16- and 32- bit values from addresses that are not 16- or 32- bit aligned. By default unaligned access is disabled for all pre-ARMv6, all ARMv6-M and for ARMv8-M Baseline architectures, and enabled for all other architectures. If unaligned access is not enabled then words in packed data structures are accessed a byte at a time.</source>
          <target state="translated">Habilita (o deshabilita)la lectura y escritura de valores de 16 y 32 bits de direcciones que no están alineadas a 16 o 32 bits.Por defecto,el acceso no alineado está desactivado para todas las arquitecturas preARMv6,todas las ARMv6-M y para las arquitecturas de línea base ARMv8-M,y activado para todas las demás arquitecturas.Si el acceso no alineado no está habilitado,entonces las palabras en las estructuras de datos empaquetadas son accedidas un byte a la vez.</target>
        </trans-unit>
        <trans-unit id="b65eaeca3be0a544da578e950cb68230b9d67b03" translate="yes" xml:space="preserve">
          <source>Enables IVC2 scheduling. IVC2 is a 64-bit VLIW coprocessor.</source>
          <target state="translated">Permite la programación del IVC2.IVC2 es un coprocesador VLIW de 64 bits.</target>
        </trans-unit>
        <trans-unit id="f8bfc926b8449de54aa34c3f95b4955d0fe52d4e" translate="yes" xml:space="preserve">
          <source>Enables all inter-procedural analysis dumps.</source>
          <target state="translated">Permite todos los vertederos de análisis interprocesales.</target>
        </trans-unit>
        <trans-unit id="39e032a23d350be5be02b628822ab23ba3864dfe" translate="yes" xml:space="preserve">
          <source>Enables all the optional instructions&amp;mdash;average, multiply, divide, bit operations, leading zero, absolute difference, min/max, clip, and saturation.</source>
          <target state="translated">Habilita todas las instrucciones opcionales: promedio, multiplicaci&amp;oacute;n, divisi&amp;oacute;n, operaciones de bits, cero a la izquierda, diferencia absoluta, m&amp;iacute;nimo / m&amp;aacute;ximo, recorte y saturaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dcd06b68e12a4e252dc788f4fd7792582f994c23" translate="yes" xml:space="preserve">
          <source>Enables expression of values of induction variables in later iterations of the unrolled loop using the value in the first iteration. This breaks long dependency chains, thus improving efficiency of the scheduling passes.</source>
          <target state="translated">Permite la expresión de los valores de las variables de inducción en iteraciones posteriores del bucle desenrollado utilizando el valor en la primera iteración.Esto rompe las largas cadenas de dependencia,mejorando así la eficiencia de los pases de programación.</target>
        </trans-unit>
        <trans-unit id="7564b980df27ae9794a4d64f8c88854f784c151d" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of the string manipulation instructions &lt;code&gt;SMOVF&lt;/code&gt;, &lt;code&gt;SCMPU&lt;/code&gt;, &lt;code&gt;SMOVB&lt;/code&gt;, &lt;code&gt;SMOVU&lt;/code&gt;, &lt;code&gt;SUNTIL&lt;/code&gt;&lt;code&gt;SWHILE&lt;/code&gt; and also the &lt;code&gt;RMPA&lt;/code&gt; instruction. These instructions may prefetch data, which is not safe to do if accessing an I/O register. (See section 12.2.7 of the RX62N Group User&amp;rsquo;s Manual for more information).</source>
          <target state="translated">Habilita o deshabilita el uso de las instrucciones de manipulaci&amp;oacute;n de cadenas &lt;code&gt;SMOVF&lt;/code&gt; , &lt;code&gt;SCMPU&lt;/code&gt; , &lt;code&gt;SMOVB&lt;/code&gt; , &lt;code&gt;SMOVU&lt;/code&gt; , &lt;code&gt;SUNTIL&lt;/code&gt; &lt;code&gt;SWHILE&lt;/code&gt; y tambi&amp;eacute;n la instrucci&amp;oacute;n &lt;code&gt;RMPA&lt;/code&gt; . Estas instrucciones pueden obtener datos previamente, lo que no es seguro si se accede a un registro de E / S. (Consulte la secci&amp;oacute;n 12.2.7 del Manual del usuario del grupo RX62N para obtener m&amp;aacute;s informaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="b2d56a3e8dc64cdea92b5b177de5eee2ddc022a5" translate="yes" xml:space="preserve">
          <source>Enables support for &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long long&lt;/code&gt; types to be aligned on 8-byte boundaries. The default is to restrict the alignment of all objects to at most 4-bytes. When</source>
          <target state="translated">Permite la alineaci&amp;oacute;n de tipos &lt;code&gt;long long&lt;/code&gt; &lt;code&gt;double&lt;/code&gt; y largos en l&amp;iacute;mites de 8 bytes. El valor predeterminado es restringir la alineaci&amp;oacute;n de todos los objetos a un m&amp;aacute;ximo de 4 bytes. Cuando</target>
        </trans-unit>
        <trans-unit id="85b9ecfc95ed087be71f719ded533eb947f09555" translate="yes" xml:space="preserve">
          <source>Enables support for all single- and double-precision floating-point hardware extensions. Not available for ARC EM.</source>
          <target state="translated">Permite el soporte de todas las extensiones de hardware de punto flotante de precisión simple y doble.No está disponible para el ARC EM.</target>
        </trans-unit>
        <trans-unit id="f75e5afbbe9ab70b1263a70cb8894e0664caf0b1" translate="yes" xml:space="preserve">
          <source>Enables support for all single-precision floating-point hardware extensions.</source>
          <target state="translated">Permite el soporte de todas las extensiones de hardware de punto flotante de precisión única.</target>
        </trans-unit>
        <trans-unit id="7883565cb4fb9258e363d1f2d7f38e140fa66bc4" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point and fused multiply and add hardware extensions. This option includes option &amp;lsquo;</source>
          <target state="translated">Permite el soporte para punto flotante de doble precisi&amp;oacute;n y multiplicaci&amp;oacute;n fusionada y agrega extensiones de hardware. Esta opci&amp;oacute;n incluye la opci&amp;oacute;n '</target>
        </trans-unit>
        <trans-unit id="09688a51318111fb1133a1873f85c86a0dd2d24a" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point hardware extensions using double-precision assist instructions. All single-precision floating-point hardware extensions are also enabled. This option is only available for ARC EM.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de punto flotante de doble precisión usando instrucciones de asistencia de doble precisión.Todas las extensiones de hardware de punto flotante de precisión simple también están habilitadas.Esta opción sólo está disponible para ARC EM.</target>
        </trans-unit>
        <trans-unit id="998d962adb014531e7dc98dfd0f68752292543ee" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point hardware extensions using double-precision assist instructions. The single-precision floating-point and fused multiply and add hardware extensions are also enabled. This option is only available for ARC EM.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de punto flotante de doble precisión usando instrucciones de asistencia de doble precisión.También se habilitan las extensiones de hardware de punto flotante y fundido de precisión simple,multiplicar y añadir.Esta opción sólo está disponible para ARC EM.</target>
        </trans-unit>
        <trans-unit id="4d9fab6d5bc5404d7e456a561365555b9e55a46b" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point hardware extensions using double-precision assist instructions. The single-precision floating-point extension is also enabled. This option is only available for ARC EM.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de punto flotante de doble precisión usando instrucciones de asistencia de doble precisión.También se habilita la extensión de punto flotante de precisión simple.Esta opción sólo está disponible para ARC EM.</target>
        </trans-unit>
        <trans-unit id="8714aef39627cf0d1b3a7e36332dd7526fef4382" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point hardware extensions using double-precision assist instructions. The single-precision floating-point, square-root, and divide extensions are also enabled. This option is only available for ARC EM.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de punto flotante de doble precisión usando instrucciones de asistencia de doble precisión.También se habilitan las extensiones de punto flotante de precisión simple,raíz cuadrada y división.Esta opción sólo está disponible para ARC EM.</target>
        </trans-unit>
        <trans-unit id="88614dbf859eb550fe6ea83089c08ee2a35b6c5a" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point hardware extensions. The single-precision floating-point extension is also enabled. Not available for ARC EM.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de doble precisión de punto flotante.También se habilita la extensión de punto flotante de precisión simple.No está disponible para ARC EM.</target>
        </trans-unit>
        <trans-unit id="ed75b445d9416dbdcca6532a5b9e4ba16b46347a" translate="yes" xml:space="preserve">
          <source>Enables support for double-precision floating-point, square-root and divide hardware extensions. This option includes option &amp;lsquo;</source>
          <target state="translated">Permite la compatibilidad con extensiones de hardware de doble precisi&amp;oacute;n de punto flotante, ra&amp;iacute;z cuadrada y divisi&amp;oacute;n. Esta opci&amp;oacute;n incluye la opci&amp;oacute;n '</target>
        </trans-unit>
        <trans-unit id="4020a8753a0799a59f9043cec8f1b76a8cbf21f5" translate="yes" xml:space="preserve">
          <source>Enables support for single-precision floating-point and fused multiply and add hardware extensions.</source>
          <target state="translated">Permite el soporte de punto flotante de precisión única y fusionado multiplicar y añadir extensiones de hardware.</target>
        </trans-unit>
        <trans-unit id="739ef3a6f4ad193608707def042ed976fbb38794" translate="yes" xml:space="preserve">
          <source>Enables support for single-precision floating-point hardware extensions.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de punto flotante de precisión única.</target>
        </trans-unit>
        <trans-unit id="69030e58955d3b24f425bf1f743dd072b9ea41e4" translate="yes" xml:space="preserve">
          <source>Enables support for single-precision floating-point, square-root and divide hardware extensions.</source>
          <target state="translated">Permite el soporte de extensiones de hardware de punto flotante,raíz cuadrada y división de precisión única.</target>
        </trans-unit>
        <trans-unit id="dd589dcd1e2f89f81d2aa1944b9d5b300d0537d9" translate="yes" xml:space="preserve">
          <source>Enables support for specific floating-point hardware extensions for ARCv2 cores. Supported values for &lt;var&gt;fpu&lt;/var&gt; are:</source>
          <target state="translated">Permite la compatibilidad con extensiones de hardware de punto flotante espec&amp;iacute;ficas para n&amp;uacute;cleos ARCv2. Los valores admitidos para &lt;var&gt;fpu&lt;/var&gt; son:</target>
        </trans-unit>
        <trans-unit id="40edc654abf50990a91d4feb4df5e9d34bf7f47f" translate="yes" xml:space="preserve">
          <source>Enables support for the RH850 version of the V850 ABI. This is the default. With this version of the ABI the following rules apply:</source>
          <target state="translated">Permite el soporte de la versión RH850 del ABI V850.Este es el valor por defecto.Con esta versión de la ABI se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="a3ccc0d52f2a100abeb7168c2966e22df181fb16" translate="yes" xml:space="preserve">
          <source>Enables support for the old GCC version of the V850 ABI. With this version of the ABI the following rules apply:</source>
          <target state="translated">Permite el soporte de la antigua versión GCC del ABI V850.Con esta versión de la ABI se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="13d14b8a88583d4801772d41f78d731f585ac76d" translate="yes" xml:space="preserve">
          <source>Enables the 32-bit coprocessor&amp;rsquo;s instructions.</source>
          <target state="translated">Habilita las instrucciones del coprocesador de 32 bits.</target>
        </trans-unit>
        <trans-unit id="37f8bcfc01e8c9f171283b3e6b96664748ea2f0b" translate="yes" xml:space="preserve">
          <source>Enables the 64-bit coprocessor&amp;rsquo;s instructions.</source>
          <target state="translated">Habilita las instrucciones del coprocesador de 64 bits.</target>
        </trans-unit>
        <trans-unit id="866afe4dc503faaed460c73ebf4e30e8a9116810" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;abs&lt;/code&gt; instruction, which is the absolute difference between two registers.</source>
          <target state="translated">Habilita la instrucci&amp;oacute;n &lt;code&gt;abs&lt;/code&gt; , que es la diferencia absoluta entre dos registros.</target>
        </trans-unit>
        <trans-unit id="50cf3b6e541adf62bd77b142fc53a61d05fc7c9c" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;ave&lt;/code&gt; instruction, which computes the average of two registers.</source>
          <target state="translated">Habilita la instrucci&amp;oacute;n &lt;code&gt;ave&lt;/code&gt; , que calcula el promedio de dos registros.</target>
        </trans-unit>
        <trans-unit id="2e8478914d75d996b9e9464d4ca7119db6662af4" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;clip&lt;/code&gt; instruction. Note that</source>
          <target state="translated">Habilita la instrucci&amp;oacute;n de &lt;code&gt;clip&lt;/code&gt; . Tenga en cuenta que</target>
        </trans-unit>
        <trans-unit id="e97f2d1656d0f25d2a745cdd7d099a3de6f71833" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;div&lt;/code&gt; and &lt;code&gt;divu&lt;/code&gt; instructions.</source>
          <target state="translated">Habilita las instrucciones &lt;code&gt;div&lt;/code&gt; y &lt;code&gt;divu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13fbaebc3f1567a809a1ff5ab5607726671f6a6a" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;leadz&lt;/code&gt; (leading zero) instruction.</source>
          <target state="translated">Habilita la &lt;code&gt;leadz&lt;/code&gt; (cero a la izquierda ).</target>
        </trans-unit>
        <trans-unit id="1da519d84df5ff1b705dd7abe77d948ec006a771" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; instructions.</source>
          <target state="translated">Habilita el &lt;code&gt;min&lt;/code&gt; y &lt;code&gt;max&lt;/code&gt; instrucciones.</target>
        </trans-unit>
        <trans-unit id="4da5357bac4df4fb4da7516696ce5726e90631ac" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;repeat&lt;/code&gt; and &lt;code&gt;erepeat&lt;/code&gt; instructions, used for low-overhead looping.</source>
          <target state="translated">Habilita las instrucciones de &lt;code&gt;repeat&lt;/code&gt; y &lt;code&gt;erepeat&lt;/code&gt; , que se utilizan para bucles por encima de la cabeza.</target>
        </trans-unit>
        <trans-unit id="b4f230bdb2809992da1b8ee11728eb1397ea6487" translate="yes" xml:space="preserve">
          <source>Enables the bit operation instructions&amp;mdash;bit test (&lt;code&gt;btstm&lt;/code&gt;), set (&lt;code&gt;bsetm&lt;/code&gt;), clear (&lt;code&gt;bclrm&lt;/code&gt;), invert (&lt;code&gt;bnotm&lt;/code&gt;), and test-and-set (&lt;code&gt;tas&lt;/code&gt;).</source>
          <target state="translated">Habilita las instrucciones de operaci&amp;oacute;n de bits: prueba de bits ( &lt;code&gt;btstm&lt;/code&gt; ), set ( &lt;code&gt;bsetm&lt;/code&gt; ), clear ( &lt;code&gt;bclrm&lt;/code&gt; ), invert ( &lt;code&gt;bnotm&lt;/code&gt; ) y test-and-set ( &lt;code&gt;tas&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="650b34422af73f1c39adc7884ebaf0f44be9cbe6" translate="yes" xml:space="preserve">
          <source>Enables the coprocessor instructions. By default, this is a 32-bit coprocessor. Note that the coprocessor is normally enabled via the</source>
          <target state="translated">Activa las instrucciones del coprocesador.Por defecto,este es un coprocesador de 32 bits.Tenga en cuenta que el coprocesador normalmente se habilita a través de la función</target>
        </trans-unit>
        <trans-unit id="849d54c65b67142ad3610bf0ff41505e124671a1" translate="yes" xml:space="preserve">
          <source>Enables the cryptographic instructions on &amp;lsquo;</source>
          <target state="translated">Habilita las instrucciones criptogr&amp;aacute;ficas en '</target>
        </trans-unit>
        <trans-unit id="e300897cde7331a4be041e33bbcd7fc9ca650ebe" translate="yes" xml:space="preserve">
          <source>Enables the generation of position independent data. When enabled any access to constant data is done via an offset from a base address held in a register. This allows the location of constant data to be determined at run time without requiring the executable to be relocated, which is a benefit to embedded applications with tight memory constraints. Data that can be modified is not affected by this option.</source>
          <target state="translated">Permite la generación de datos independientes de la posición.Cuando se habilita,cualquier acceso a los datos constantes se realiza mediante una compensación de una dirección base que se mantiene en un registro.Esto permite determinar la ubicación de los datos constantes en tiempo de ejecución sin necesidad de reubicar el ejecutable,lo que es una ventaja para las aplicaciones integradas con limitaciones de memoria.Los datos que pueden modificarse no se ven afectados por esta opción.</target>
        </trans-unit>
        <trans-unit id="cf1918bfd22c209206d2846ea3d88a19e3a73f7d" translate="yes" xml:space="preserve">
          <source>Enables the loop invariant motion pass in the RTL loop optimizer. Enabled at level</source>
          <target state="translated">Habilita el paso de movimiento invariable del bucle en el optimizador de bucle RTL.Habilitado en el nivel</target>
        </trans-unit>
        <trans-unit id="ecd974872f6eca7f7d4ae7dac04ee2a0a333973d" translate="yes" xml:space="preserve">
          <source>Enables the multiplication and multiply-accumulate instructions.</source>
          <target state="translated">Permite la multiplicación y las instrucciones de multiplicar y acumular.</target>
        </trans-unit>
        <trans-unit id="7fc40693c14939b54a70a171fa80eb19af8d1f4b" translate="yes" xml:space="preserve">
          <source>Enables the saturation instructions. Note that the compiler does not currently generate these itself, but this option is included for compatibility with other tools, like &lt;code&gt;as&lt;/code&gt;.</source>
          <target state="translated">Habilita las instrucciones de saturaci&amp;oacute;n. Tenga en cuenta que el compilador no los genera actualmente, pero esta opci&amp;oacute;n se incluye por compatibilidad con otras herramientas, como &lt;code&gt;as&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d7284a520ac6d5afcc167354eeade161094006" translate="yes" xml:space="preserve">
          <source>Enables the use of a linker plugin during link-time optimization. This option relies on plugin support in the linker, which is available in gold or in GNU ld 2.21 or newer.</source>
          <target state="translated">Permite el uso de un plugin de enlace durante la optimización del tiempo de enlace.Esta opción se basa en el soporte del plugin en el enlazador,que está disponible en oro o en GNU ld 2.21 o más reciente.</target>
        </trans-unit>
        <trans-unit id="118989c6873866bc4e811127fbd742299b49d5aa" translate="yes" xml:space="preserve">
          <source>Enables the use of the e3v5 LOOP instruction. The use of this instruction is not enabled by default when the e3v5 architecture is selected because its use is still experimental.</source>
          <target state="translated">Permite el uso de la instrucción e3v5 LOOP.El uso de esta instrucción no está habilitado por defecto cuando se selecciona la arquitectura e3v5 porque su uso es todavía experimental.</target>
        </trans-unit>
        <trans-unit id="e218c1fa9772e443eea87ffbfc5f0dee5a840cd5" translate="yes" xml:space="preserve">
          <source>Enables using Neon to handle scalar 64-bits operations. This is disabled by default since the cost of moving data from core registers to Neon is high.</source>
          <target state="translated">Permite usar el Neón para manejar operaciones escalares de 64 bits.Está desactivado por defecto ya que el coste de trasladar los datos de los registros centrales a Neon es alto.</target>
        </trans-unit>
        <trans-unit id="93ce405e36a27a5a639a5f340a06317ff8160589" translate="yes" xml:space="preserve">
          <source>Enabling profiling and extra run-time error checking.</source>
          <target state="translated">Activando el perfil y la comprobación de errores en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="e90d4bd4a0cd6ad11d1267ee1ab362b6754a6129" translate="yes" xml:space="preserve">
          <source>Enabling this option effectively enables the following warnings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="1819780111faf7544a66daa1d16d7611734230e4" translate="yes" xml:space="preserve">
          <source>End lock elision on a lock variable. Memory order must be &lt;code&gt;__ATOMIC_RELEASE&lt;/code&gt; or stronger.</source>
          <target state="translated">Finalizar la elisi&amp;oacute;n de bloqueo en una variable de bloqueo. El orden de la memoria debe ser &lt;code&gt;__ATOMIC_RELEASE&lt;/code&gt; o m&amp;aacute;s fuerte.</target>
        </trans-unit>
        <trans-unit id="69cc11cd813a9fd03e4e1fc6cf5b510b36e19495" translate="yes" xml:space="preserve">
          <source>Enforces total ordering with all other &lt;code&gt;__ATOMIC_SEQ_CST&lt;/code&gt; operations.</source>
          <target state="translated">Exige el pedido total con todas las dem&amp;aacute;s operaciones &lt;code&gt;__ATOMIC_SEQ_CST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73b1dc6c07adcccbcc5d5e8b0eff931a874c6d38" translate="yes" xml:space="preserve">
          <source>Enumerator Attributes</source>
          <target state="translated">Atributos del enumerador</target>
        </trans-unit>
        <trans-unit id="761809a73bf6c1d0fb389d9bcb324c7d577436ca" translate="yes" xml:space="preserve">
          <source>Env vars that affect GCC.</source>
          <target state="translated">Env vars que afectan a GCC.</target>
        </trans-unit>
        <trans-unit id="ea26afcbc28cf64cc5104756e2576f023e89221a" translate="yes" xml:space="preserve">
          <source>Epiphany&amp;mdash;</source>
          <target state="translated">Epiphany&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="fdd6abe4d3e43555fd6a8a4c1cf45b848e487e53" translate="yes" xml:space="preserve">
          <source>Equivalent to</source>
          <target state="translated">Equivalente a</target>
        </trans-unit>
        <trans-unit id="0492deafa8eba22fc0afe8f6e0c0ba64239ba223" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;r&lt;/code&gt;; retained for backwards compatibility.</source>
          <target state="translated">Equivalente a &lt;code&gt;r&lt;/code&gt; ; retenido para compatibilidad con versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="5ca07fcd394d3a2e5866991bf00cbd021a139de4" translate="yes" xml:space="preserve">
          <source>Errors in the 1990 ISO C standard were corrected in two Technical Corrigenda published in 1994 and 1996. GCC does not support the uncorrected version.</source>
          <target state="translated">Los errores de la norma ISO C de 1990 se corrigieron en dos correcciones técnicas publicadas en 1994 y 1996.El GCC no apoya la versión no corregida.</target>
        </trans-unit>
        <trans-unit id="9bd134a89f5b4b95f3127d3f912224b4af14b70c" translate="yes" xml:space="preserve">
          <source>Errors in the 1999 ISO C standard were corrected in three Technical Corrigenda published in 2001, 2004 and 2007. GCC does not support the uncorrected version.</source>
          <target state="translated">Los errores de la norma ISO C de 1999 se corrigieron en tres correcciones técnicas publicadas en 2001,2004 y 2007.El GCC no apoya la versión no corregida.</target>
        </trans-unit>
        <trans-unit id="6e25566cabac14a5da9bfa8653af8b052717aff4" translate="yes" xml:space="preserve">
          <source>Estimate on average number of instructions that are executed before prefetch finishes. The distance prefetched ahead is proportional to this constant. Increasing this number may also lead to less streams being prefetched (see</source>
          <target state="translated">Estimación del número medio de instrucciones que se ejecutan antes de que termine el prefetch.La distancia prefetch adelantada es proporcional a esta constante.El aumento de este número también puede llevar a que se prefectúen menos corrientes (ver</target>
        </trans-unit>
        <trans-unit id="72b4ac99601ca6a847d5bc2efd8309225cad447d" translate="yes" xml:space="preserve">
          <source>Evaluate member access, array subscripting, and shift expressions in left-to-right order, and evaluate assignment in right-to-left order, as adopted for C++17. Enabled by default with</source>
          <target state="translated">Evaluar el acceso de los miembros,la suscripción de la matriz y las expresiones de desplazamiento en el orden de izquierda a derecha,y evaluar la asignación en el orden de derecha a izquierda,como se adoptó para C++17.Habilitado por defecto con</target>
        </trans-unit>
        <trans-unit id="ed6e92089eb6b24b347c4f30cb7670720994b11e" translate="yes" xml:space="preserve">
          <source>Even if</source>
          <target state="translated">Incluso si</target>
        </trans-unit>
        <trans-unit id="8ba62c67150da80165ae50905d020111dae00562" translate="yes" xml:space="preserve">
          <source>Even if a recovery mode is turned on the compiler side, it needs to be also enabled on the runtime library side, otherwise the failures are still fatal. The runtime library defaults to &lt;code&gt;halt_on_error=0&lt;/code&gt; for ThreadSanitizer and UndefinedBehaviorSanitizer, while default value for AddressSanitizer is &lt;code&gt;halt_on_error=1&lt;/code&gt;. This can be overridden through setting the &lt;code&gt;halt_on_error&lt;/code&gt; flag in the corresponding environment variable.</source>
          <target state="translated">Incluso si un modo de recuperaci&amp;oacute;n est&amp;aacute; activado en el lado del compilador, tambi&amp;eacute;n debe habilitarse en el lado de la biblioteca en tiempo de ejecuci&amp;oacute;n, de lo contrario, las fallas siguen siendo fatales. La biblioteca en tiempo de ejecuci&amp;oacute;n tiene como valor predeterminado &lt;code&gt;halt_on_error=0&lt;/code&gt; para ThreadSanitizer y UndefinedBehaviorSanitizer, mientras que el valor predeterminado para &lt;code&gt;halt_on_error=1&lt;/code&gt; es halt_on_error = 1 . Esto se puede anular estableciendo el indicador &lt;code&gt;halt_on_error&lt;/code&gt; en la variable de entorno correspondiente.</target>
        </trans-unit>
        <trans-unit id="da53370f643fa43e1823dc15023009c950cb897a" translate="yes" xml:space="preserve">
          <source>Even if a zero-length bit-field is not followed by a normal bit-field, it may still affect the alignment of the structure:</source>
          <target state="translated">Incluso si un campo de bits de longitud cero no va seguido de un campo de bits normal,todavía puede afectar a la alineación de la estructura:</target>
        </trans-unit>
        <trans-unit id="9b825b64ce454de632ebee37b594db5436e47422" translate="yes" xml:space="preserve">
          <source>Even if this switch is enabled, not all function calls are turned into long calls. The heuristic is that static functions, functions that have the &lt;code&gt;short_call&lt;/code&gt; attribute, functions that are inside the scope of a &lt;code&gt;#pragma no_long_calls&lt;/code&gt; directive, and functions whose definitions have already been compiled within the current compilation unit are not turned into long calls. The exceptions to this rule are that weak function definitions, functions with the &lt;code&gt;long_call&lt;/code&gt; attribute or the &lt;code&gt;section&lt;/code&gt; attribute, and functions that are within the scope of a &lt;code&gt;#pragma long_calls&lt;/code&gt; directive are always turned into long calls.</source>
          <target state="translated">Incluso si este interruptor est&amp;aacute; habilitado, no todas las llamadas a funciones se convierten en llamadas largas. La heur&amp;iacute;stica es que las funciones est&amp;aacute;ticas, las funciones que tienen el atributo &lt;code&gt;short_call&lt;/code&gt; , las funciones que est&amp;aacute;n dentro del alcance de una directiva &lt;code&gt;#pragma no_long_calls&lt;/code&gt; y las funciones cuyas definiciones ya han sido compiladas dentro de la unidad de compilaci&amp;oacute;n actual no se convierten en llamadas largas. Las excepciones a esta regla son que las definiciones de funciones d&amp;eacute;biles, las funciones con el atributo &lt;code&gt;long_call&lt;/code&gt; o el atributo &lt;code&gt;section&lt;/code&gt; , y las funciones que est&amp;aacute;n dentro del alcance de una directiva &lt;code&gt;#pragma long_calls&lt;/code&gt; siempre se convierten en llamadas largas.</target>
        </trans-unit>
        <trans-unit id="a177b98fd2580c16f017a412cd7670171b404cf0" translate="yes" xml:space="preserve">
          <source>Even if you specify</source>
          <target state="translated">Incluso si se especifica</target>
        </trans-unit>
        <trans-unit id="026e995923c6387a8240f24bd1c3774f9d66883c" translate="yes" xml:space="preserve">
          <source>Even register</source>
          <target state="translated">Incluso el registro...</target>
        </trans-unit>
        <trans-unit id="1873ee5db4140cfb18dab53240c9f43c6ee8669a" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;sum&lt;/code&gt; is accumulated in the loop, no use is made of that summation, so the accumulation can be removed.</source>
          <target state="translated">Aunque la &lt;code&gt;sum&lt;/code&gt; a se acumula en el ciclo, no se hace uso de esa suma, por lo que la acumulaci&amp;oacute;n se puede eliminar.</target>
        </trans-unit>
        <trans-unit id="0b22f73b585732fa4671fb4003533ee7b0a1cf1d" translate="yes" xml:space="preserve">
          <source>Even-numbered D register</source>
          <target state="translated">Registro D de número par</target>
        </trans-unit>
        <trans-unit id="7a684983474ccc7c72520e56a87f8aeb051b1c6b" translate="yes" xml:space="preserve">
          <source>Even-numbered accumulator register.</source>
          <target state="translated">Registro de acumulador de número par.</target>
        </trans-unit>
        <trans-unit id="5d57aa9755d20359a2247e4c26c56f18f53bb2c4" translate="yes" xml:space="preserve">
          <source>Every data object has an alignment requirement. The alignment requirement for all data except structures, unions, and arrays is either the size of the object or the current packing size (specified with either the &lt;code&gt;aligned&lt;/code&gt; attribute or the &lt;code&gt;pack&lt;/code&gt; pragma), whichever is less. For structures, unions, and arrays, the alignment requirement is the largest alignment requirement of its members. Every object is allocated an offset so that:</source>
          <target state="translated">Cada objeto de datos tiene un requisito de alineaci&amp;oacute;n. El requisito de alineaci&amp;oacute;n para todos los datos, excepto las estructuras, uniones y matrices, es el tama&amp;ntilde;o del objeto o el tama&amp;ntilde;o de empaque actual (especificado con el atributo &lt;code&gt;aligned&lt;/code&gt; o el pragma del &lt;code&gt;pack&lt;/code&gt; ), el que sea menor. Para estructuras, uniones y matrices, el requisito de alineaci&amp;oacute;n es el requisito de alineaci&amp;oacute;n m&amp;aacute;s grande de sus miembros. A cada objeto se le asigna un desplazamiento para que:</target>
        </trans-unit>
        <trans-unit id="f8971cb366f8a5972e5437f17d61872668933fb6" translate="yes" xml:space="preserve">
          <source>Exact power of 2</source>
          <target state="translated">Potencia exacta de 2</target>
        </trans-unit>
        <trans-unit id="54ce059465b2a026c1f41bec2bf7eb93331ac554" translate="yes" xml:space="preserve">
          <source>Exactly like</source>
          <target state="translated">Exactamente como</target>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="861245b8779c3c0a240081e66f72046983ca7d16" translate="yes" xml:space="preserve">
          <source>Example usage</source>
          <target state="translated">Ejemplo de uso</target>
        </trans-unit>
        <trans-unit id="98859dfb330cbeca8950e6e5316d288484dfa387" translate="yes" xml:space="preserve">
          <source>Example usage of these low level built-in functions may look like:</source>
          <target state="translated">Un ejemplo de uso de estas funciones incorporadas de bajo nivel puede parecer:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="3203ec56f6623a12f68979ebebcaf218b0674056" translate="yes" xml:space="preserve">
          <source>Examples of code with undefined behavior are &lt;code&gt;a = a++;&lt;/code&gt;, &lt;code&gt;a[n]
= b[n++]&lt;/code&gt; and &lt;code&gt;a[i++] = i;&lt;/code&gt;. Some more complicated cases are not diagnosed by this option, and it may give an occasional false positive result, but in general it has been found fairly effective at detecting this sort of problem in programs.</source>
          <target state="translated">Ejemplos de c&amp;oacute;digo con comportamiento indefinido son &lt;code&gt;a = a++;&lt;/code&gt; , &lt;code&gt;a[n] = b[n++]&lt;/code&gt; y &lt;code&gt;a[i++] = i;&lt;/code&gt; . Algunos casos m&amp;aacute;s complicados no se diagnostican con esta opci&amp;oacute;n y puede dar un resultado falso positivo ocasional, pero en general se ha encontrado bastante eficaz para detectar este tipo de problema en los programas.</target>
        </trans-unit>
        <trans-unit id="ac2978569b0d96ea67fa55ae3fcac3a58dbeaa7e" translate="yes" xml:space="preserve">
          <source>Examples of the use cases for this tool are:</source>
          <target state="translated">Algunos ejemplos de los casos de uso de esta herramienta son:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="911d893025886382ab91769b068aa06459b40499" translate="yes" xml:space="preserve">
          <source>Exception handlers differ from interrupt handlers because the system pushes an error code on the stack. An exception handler declaration is similar to that for an interrupt handler, but with a different mandatory function signature. The compiler arranges to pop the error code off the stack before the &lt;code&gt;IRET&lt;/code&gt; instruction.</source>
          <target state="translated">Los manejadores de excepciones difieren de los manejadores de interrupciones porque el sistema inserta un c&amp;oacute;digo de error en la pila. Una declaraci&amp;oacute;n de manejador de excepciones es similar a la de un manejador de interrupciones, pero con una firma de funci&amp;oacute;n obligatoria diferente. El compilador se encarga de sacar el c&amp;oacute;digo de error de la pila antes de la instrucci&amp;oacute;n &lt;code&gt;IRET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d60ce999e28bc42ef5590e1790afd26bd6f33f60" translate="yes" xml:space="preserve">
          <source>Exception handlers should only be used for exceptions that push an error code; you should use an interrupt handler in other cases. The system will crash if the wrong kind of handler is used.</source>
          <target state="translated">Los manejadores de excepciones sólo deben utilizarse para las excepciones que empujan un código de error;en los demás casos debe utilizarse un manejador de interrupciones.El sistema se bloqueará si se utiliza el tipo de manejador incorrecto.</target>
        </trans-unit>
        <trans-unit id="61c358f1bb209146fb6ebbb188045ae7738fdddb" translate="yes" xml:space="preserve">
          <source>Execution and Data Prediction Restriction Instructions.</source>
          <target state="translated">Instrucciones de restricción de ejecución y predicción de datos.</target>
        </trans-unit>
        <trans-unit id="cd06a6fd64c8b50d4558cb3316fd26ee9feb5746" translate="yes" xml:space="preserve">
          <source>Expand &lt;code&gt;adddi3&lt;/code&gt; and &lt;code&gt;subdi3&lt;/code&gt; at RTL generation time into &lt;code&gt;add.f&lt;/code&gt;, &lt;code&gt;adc&lt;/code&gt; etc. This option is deprecated.</source>
          <target state="translated">Expanda &lt;code&gt;adddi3&lt;/code&gt; y &lt;code&gt;subdi3&lt;/code&gt; en el momento de la generaci&amp;oacute;n de RTL en &lt;code&gt;add.f&lt;/code&gt; , &lt;code&gt;adc&lt;/code&gt; , etc. Esta opci&amp;oacute;n est&amp;aacute; obsoleta.</target>
        </trans-unit>
        <trans-unit id="ad01d735326a2f6603f39ee595dd5b05ec416e8b" translate="yes" xml:space="preserve">
          <source>Expand into an inline loop.</source>
          <target state="translated">Expandirse en un bucle en línea.</target>
        </trans-unit>
        <trans-unit id="5ddf0ba44f58c348b4ec4063056d25a8b4689f7a" translate="yes" xml:space="preserve">
          <source>Expand using i386 &lt;code&gt;rep&lt;/code&gt; prefix of the specified size.</source>
          <target state="translated">Expanda usando el prefijo i386 &lt;code&gt;rep&lt;/code&gt; del tama&amp;ntilde;o especificado.</target>
        </trans-unit>
        <trans-unit id="7720f0269a2d383f2dd786328047f312351d0105" translate="yes" xml:space="preserve">
          <source>Explain what alignment considerations lead to the decision to make an instruction short or long.</source>
          <target state="translated">Explique qué consideraciones de alineación llevan a la decisión de hacer una instrucción corta o larga.</target>
        </trans-unit>
        <trans-unit id="69ccd30207ce48099a948be1541f4d6a441981f8" translate="yes" xml:space="preserve">
          <source>Explicit instantiations can be used for the largest or most frequently duplicated instances, without having to know exactly which other instances are used in the rest of the program. You can scatter the explicit instantiations throughout your program, perhaps putting them in the translation units where the instances are used or the translation units that define the templates themselves; you can put all of the explicit instantiations you need into one big file; or you can create small files like</source>
          <target state="translated">Las instancias explícitas pueden utilizarse para las instancias más grandes o más frecuentemente duplicadas,sin tener que saber exactamente qué otras instancias se utilizan en el resto del programa.Puedes esparcir las instancias explícitas por todo el programa,quizás poniéndolas en las unidades de traducción donde se usan las instancias o en las unidades de traducción que definen las plantillas mismas;puedes poner todas las instancias explícitas que necesites en un gran archivo;o puedes crear pequeños archivos como</target>
        </trans-unit>
        <trans-unit id="83042939fc50e1e36ef864fc1e78eae1c62725bf" translate="yes" xml:space="preserve">
          <source>Explicitly instantiated inline methods are unaffected by this option as their linkage might otherwise cross a shared library boundary. See &lt;a href=&quot;template-instantiation#Template-Instantiation&quot;&gt;Template Instantiation&lt;/a&gt;.</source>
          <target state="translated">Los m&amp;eacute;todos en l&amp;iacute;nea instanciados expl&amp;iacute;citamente no se ven afectados por esta opci&amp;oacute;n, ya que su vinculaci&amp;oacute;n podr&amp;iacute;a cruzar el l&amp;iacute;mite de una biblioteca compartida. Consulte &lt;a href=&quot;template-instantiation#Template-Instantiation&quot;&gt;Creaci&amp;oacute;n de instancias de plantilla&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61bd3ccba4b2c3767215774893d82391e0bc09ab" translate="yes" xml:space="preserve">
          <source>Expressions are currently only contracted if</source>
          <target state="translated">Actualmente,las expresiones sólo se contraen si</target>
        </trans-unit>
        <trans-unit id="83c4bb072fc47e954ad84b1ea046adec27e854fd" translate="yes" xml:space="preserve">
          <source>Expressions that may be cast to the union type are those whose type matches at least one of the members of the union. Thus, given the following union and variables:</source>
          <target state="translated">Las expresiones que se pueden lanzar al tipo de unión son aquellas cuyo tipo coincide con al menos uno de los miembros de la unión.Así,dada la siguiente unión y variables:</target>
        </trans-unit>
        <trans-unit id="ed9daef21d2e4305e648aee577dd1d6036550745" translate="yes" xml:space="preserve">
          <source>Extend (do not extend) the</source>
          <target state="translated">Extienda (no extienda)la</target>
        </trans-unit>
        <trans-unit id="20891f4ff37ed22f4675dae3faaf487875cf701e" translate="yes" xml:space="preserve">
          <source>Extend the current ABI with a particular extension, or remove such extension. Valid values are &amp;lsquo;</source>
          <target state="translated">Ampl&amp;iacute;e la ABI actual con una extensi&amp;oacute;n en particular o elimine dicha extensi&amp;oacute;n. Los valores v&amp;aacute;lidos son '</target>
        </trans-unit>
        <trans-unit id="91653b5f0401d6aa2a22ebdd6efdf9699bdaeb42" translate="yes" xml:space="preserve">
          <source>Extended &lt;code&gt;asm&lt;/code&gt; statements have to be inside a C function, so to write inline assembly language at file scope (&amp;ldquo;top-level&amp;rdquo;), outside of C functions, you must use basic &lt;code&gt;asm&lt;/code&gt;. You can use this technique to emit assembler directives, define assembly language macros that can be invoked elsewhere in the file, or write entire functions in assembly language. Basic &lt;code&gt;asm&lt;/code&gt; statements outside of functions may not use any qualifiers.</source>
          <target state="translated">Las sentencias &lt;code&gt;asm&lt;/code&gt; extendidas deben estar dentro de una funci&amp;oacute;n C, por lo que para escribir lenguaje ensamblador en l&amp;iacute;nea en el &amp;aacute;mbito del archivo (&quot;nivel superior&quot;), fuera de las funciones C, debe usar &lt;code&gt;asm&lt;/code&gt; b&amp;aacute;sico . Puede utilizar esta t&amp;eacute;cnica para emitir directivas de ensamblador, definir macros en lenguaje ensamblador que se pueden invocar en otra parte del archivo o escribir funciones completas en lenguaje ensamblador. Es posible que las sentencias &lt;code&gt;asm&lt;/code&gt; b&amp;aacute;sicas fuera de las funciones no utilicen calificadores.</target>
        </trans-unit>
        <trans-unit id="04a315d0cc75470cd36dfd3cb992c3efb5b94ebf" translate="yes" xml:space="preserve">
          <source>Extended alignments up to &lt;em&gt;2^{28}&lt;/em&gt; (bytes) are supported for objects of automatic storage duration. Alignments supported for objects of static and thread storage duration are determined by the ABI.</source>
          <target state="translated">Se admiten alineaciones extendidas de hasta &lt;em&gt;2 ^ {28}&lt;/em&gt; (bytes) para objetos de duraci&amp;oacute;n de almacenamiento autom&amp;aacute;tico. Las alineaciones admitidas para objetos de duraci&amp;oacute;n de almacenamiento est&amp;aacute;tico y de subprocesos est&amp;aacute;n determinadas por la ABI.</target>
        </trans-unit>
        <trans-unit id="342b07a4e48b541946d49b2270415ae84b1aef83" translate="yes" xml:space="preserve">
          <source>Extended registers are not stored on stack before execution of function with monitor attribute. Default option is</source>
          <target state="translated">Los registros extendidos no se almacenan en pila antes de la ejecución de la función con atributo de monitor.La opción por defecto es</target>
        </trans-unit>
        <trans-unit id="57cf6f586241383946ebaa10651980906e2e7008" translate="yes" xml:space="preserve">
          <source>Extended registers are stored on stack before execution of function with monitor attribute. Default option is</source>
          <target state="translated">Los registros extendidos se almacenan en pila antes de la ejecución de la función con atributo de monitor.La opción por defecto es</target>
        </trans-unit>
        <trans-unit id="c9dbca1f0ee851a1a4128829e444f15ff917ef20" translate="yes" xml:space="preserve">
          <source>Extra time accounted by inliner for function overhead such as time needed to execute function prologue and epilogue</source>
          <target state="translated">El tiempo extra contabilizado por el inliner para la sobrecarga de la función,como el tiempo necesario para ejecutar el prólogo y el epílogo de la función</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="6b84b9421bc7074ef9cc3088b04a6a18d77c5b2a" translate="yes" xml:space="preserve">
          <source>FMA instructions.</source>
          <target state="translated">Instrucciones de la FMA.</target>
        </trans-unit>
        <trans-unit id="cbf2cb3fe36db407f3a3f0c5e7fef7fc69c6ce00" translate="yes" xml:space="preserve">
          <source>FMA4 instructions.</source>
          <target state="translated">Instrucciones para el FMA4.</target>
        </trans-unit>
        <trans-unit id="b911450c0baee87cf3722095b3e43b717fb436bb" translate="yes" xml:space="preserve">
          <source>FP or VSX register to hold 64-bit doubles for direct moves or NO_REGS.</source>
          <target state="translated">Registro FP o VSX para mantener los dobles de 64 bits para movimientos directos o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="faed2456bafb04f8c1fb3d816c3c01f0fb54a75c" translate="yes" xml:space="preserve">
          <source>FP or VSX register to hold 64-bit integers for VSX insns or NO_REGS.</source>
          <target state="translated">Registro FP o VSX para mantener los enteros de 64 bits para los insumos VSX o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="09f3e1a89b6305e70a6393d549d66dbbcfd2f8f3" translate="yes" xml:space="preserve">
          <source>FP or VSX register to hold 64-bit integers for direct moves or NO_REGS.</source>
          <target state="translated">Registro FP o VSX para mantener los enteros de 64 bits para movimientos directos o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="ec3d1f378b46e7073f89e8d2b44ffed3f4925fb8" translate="yes" xml:space="preserve">
          <source>FP or VSX register to perform ISA 2.07 float ops or NO_REGS.</source>
          <target state="translated">Registro FP o VSX para realizar operaciones de flotación ISA 2.07 o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="c07c5ae5e3671f1039b7da098eb0348a7624af7b" translate="yes" xml:space="preserve">
          <source>FP or VSX register to perform float operations under</source>
          <target state="translated">Registro FP o VSX para realizar operaciones de flotación bajo</target>
        </trans-unit>
        <trans-unit id="a924751782c4ee4b5b496793046fc57512ab59f9" translate="yes" xml:space="preserve">
          <source>FP register if</source>
          <target state="translated">Registro de FP si</target>
        </trans-unit>
        <trans-unit id="5b1d99e5f9118d7c70848e6ad6167bba8b0b23d3" translate="yes" xml:space="preserve">
          <source>FPSCR</source>
          <target state="translated">FPSCR</target>
        </trans-unit>
        <trans-unit id="ff875f9855f1361e4b30af2d77d0d9c23d4bdca2" translate="yes" xml:space="preserve">
          <source>FRV&amp;mdash;</source>
          <target state="translated">FRV&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="230d241b3d82558160cd5187f1fe9d9c435b18d5" translate="yes" xml:space="preserve">
          <source>FSF GCC on Darwin does not create &amp;ldquo;fat&amp;rdquo; object files; it creates an object file for the single architecture that GCC was built to target. Apple&amp;rsquo;s GCC on Darwin does create &amp;ldquo;fat&amp;rdquo; files if multiple</source>
          <target state="translated">FSF GCC en Darwin no crea archivos de objeto &quot;gordos&quot;; crea un archivo de objeto para la arquitectura &amp;uacute;nica para la que se cre&amp;oacute; GCC. GCC de Apple en Darwin crea archivos &quot;gordos&quot; si hay varios</target>
        </trans-unit>
        <trans-unit id="7a156574143e4ca84e24da6dfdb279cf456cca04" translate="yes" xml:space="preserve">
          <source>FT32&amp;mdash;</source>
          <target state="translated">FT32&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="599d4afb33240eb91ea2840bb9ba8f1ff44bf581" translate="yes" xml:space="preserve">
          <source>Fat LTO objects are object files that contain both the intermediate language and the object code. This makes them usable for both LTO linking and normal linking. This option is effective only when compiling with</source>
          <target state="translated">Los objetos LTO gordos son archivos de objetos que contienen tanto el lenguaje intermedio como el código del objeto.Esto los hace utilizables tanto para el enlace LTO como para el enlace normal.Esta opción es efectiva sólo cuando se compila con</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="909a10c01414726d2e86792cc51fea9d589c8fb6" translate="yes" xml:space="preserve">
          <source>Feature Modifiers</source>
          <target state="translated">Modificadores de características</target>
        </trans-unit>
        <trans-unit id="c796b811ac5dce8d8e36d70db0e07e63b27d5eab" translate="yes" xml:space="preserve">
          <source>Feature modifiers used with</source>
          <target state="translated">Los modificadores de características utilizados con</target>
        </trans-unit>
        <trans-unit id="aa0dd17c258c743dbea5c193ddf09bb6cebf5964" translate="yes" xml:space="preserve">
          <source>Fields of the &lt;var&gt;branch&lt;/var&gt; element have following semantics:</source>
          <target state="translated">Los campos del elemento de &lt;var&gt;branch&lt;/var&gt; tienen la siguiente sem&amp;aacute;ntica:</target>
        </trans-unit>
        <trans-unit id="9cc6e9443d376e5757bc3441d57c3f310bf11770" translate="yes" xml:space="preserve">
          <source>Fields of the &lt;var&gt;file&lt;/var&gt; element have following semantics:</source>
          <target state="translated">Los campos del elemento de &lt;var&gt;file&lt;/var&gt; tienen la siguiente sem&amp;aacute;ntica:</target>
        </trans-unit>
        <trans-unit id="95d9f92882f18f3b5a67ac3eeafb040cc8cd3ea3" translate="yes" xml:space="preserve">
          <source>Fields of the &lt;var&gt;function&lt;/var&gt; element have following semantics:</source>
          <target state="translated">Los campos del elemento de &lt;var&gt;function&lt;/var&gt; tienen la siguiente sem&amp;aacute;ntica:</target>
        </trans-unit>
        <trans-unit id="55692b6d4a213073df2d182e70897f1d18b6852c" translate="yes" xml:space="preserve">
          <source>Fields of the root element have following semantics:</source>
          <target state="translated">Los campos del elemento raíz tienen la siguiente semántica:</target>
        </trans-unit>
        <trans-unit id="fba211bc33a4751c92e11eae269c5fe4195a12b5" translate="yes" xml:space="preserve">
          <source>Finally &amp;lsquo;</source>
          <target state="translated">Finalmente '</target>
        </trans-unit>
        <trans-unit id="24e09f2eaae1d9afb97c63e8aa6a65a24f91f73b" translate="yes" xml:space="preserve">
          <source>Finally if the parameter is &lt;code&gt;&quot;&lt;var&gt;name2&lt;/var&gt;@@&lt;var&gt;nodename&lt;/var&gt;&quot;&lt;/code&gt; then in addition to creating a symbol version (as if &lt;code&gt;&quot;&lt;var&gt;name2&lt;/var&gt;@&lt;var&gt;nodename&lt;/var&gt;&quot;&lt;/code&gt; was used) the version will be also used to resolve &lt;var&gt;name2&lt;/var&gt; by the linker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889bce84d14bf80370f700a385229e627febe04d" translate="yes" xml:space="preserve">
          <source>Finally, GCC will examine &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa45d699cd27babdae75f4a8d69ed2b5379e7a87" translate="yes" xml:space="preserve">
          <source>Finally, consider:</source>
          <target state="translated">Por último,considere:</target>
        </trans-unit>
        <trans-unit id="6901050dc8495daab10889e0ec9cf3617e7fb433" translate="yes" xml:space="preserve">
          <source>Finally, note how we declared the &lt;code&gt;len&lt;/code&gt; argument and the return value to be of type &lt;code&gt;unsigned long&lt;/code&gt;. They could also be declared to be of type &lt;code&gt;unsigned int&lt;/code&gt; and everything would still work.</source>
          <target state="translated">Finalmente, observe c&amp;oacute;mo &lt;code&gt;len&lt;/code&gt; argumento len y el valor de retorno son del tipo &lt;code&gt;unsigned long&lt;/code&gt; . Tambi&amp;eacute;n podr&amp;iacute;an declararse como de tipo &lt;code&gt;unsigned int&lt;/code&gt; y todo seguir&amp;iacute;a funcionando.</target>
        </trans-unit>
        <trans-unit id="e5f1ab577d27769ef2407d2da5789ec6bcd34e2a" translate="yes" xml:space="preserve">
          <source>Finally, there is a complication when encoding &lt;code&gt;const char *&lt;/code&gt; versus &lt;code&gt;char * const&lt;/code&gt;. Because &lt;code&gt;char *&lt;/code&gt; is encoded as &lt;code&gt;*&lt;/code&gt; and not as &lt;code&gt;^c&lt;/code&gt;, there is no way to express the fact that &lt;code&gt;r&lt;/code&gt; applies to the pointer or to the pointee.</source>
          <target state="translated">Finalmente, existe una complicaci&amp;oacute;n al codificar &lt;code&gt;const char *&lt;/code&gt; versus &lt;code&gt;char * const&lt;/code&gt; . Como &lt;code&gt;char *&lt;/code&gt; est&amp;aacute; codificado como &lt;code&gt;*&lt;/code&gt; y no como &lt;code&gt;^c&lt;/code&gt; , no hay forma de expresar el hecho de que &lt;code&gt;r&lt;/code&gt; se aplica al puntero o al puntero.</target>
        </trans-unit>
        <trans-unit id="8d30428380add9f793c9b319edf17d149e4e4f73" translate="yes" xml:space="preserve">
          <source>Find the pass dump in a file whose name is composed of three components separated by a period: the name of the source file GCC was invoked to compile, a numeric suffix indicating the pass number followed by the letter &amp;lsquo;</source>
          <target state="translated">Busque el volcado de pase en un archivo cuyo nombre se compone de tres componentes separados por un punto: el nombre del archivo de origen que se invoc&amp;oacute; para compilar GCC, un sufijo num&amp;eacute;rico que indica el n&amp;uacute;mero de pase seguido de la letra '</target>
        </trans-unit>
        <trans-unit id="e29b12881247aeb3ff64dc0cee23e3331d67217f" translate="yes" xml:space="preserve">
          <source>Fine-tune size optimization with regards to instruction lengths and alignment. The recognized values for &lt;var&gt;level&lt;/var&gt; are:</source>
          <target state="translated">Ajuste la optimizaci&amp;oacute;n del tama&amp;ntilde;o con respecto a la longitud y la alineaci&amp;oacute;n de las instrucciones. Los valores reconocidos para el &lt;var&gt;level&lt;/var&gt; son:</target>
        </trans-unit>
        <trans-unit id="ac0c5ec00d58b3e74a205bd50ea7108335fcb5b8" translate="yes" xml:space="preserve">
          <source>First SSE register (&lt;code&gt;%xmm0&lt;/code&gt;).</source>
          <target state="translated">Primer registro SSE ( &lt;code&gt;%xmm0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="846211171f7db5bd2bab9f64d61f4530995ca5a0" translate="yes" xml:space="preserve">
          <source>First, the argument corresponding to a transparent union type can be of any type in the union; no cast is required. Also, if the union contains a pointer type, the corresponding argument can be a null pointer constant or a void pointer expression; and if the union contains a void pointer type, the corresponding argument can be any pointer expression. If the union member type is a pointer, qualifiers like &lt;code&gt;const&lt;/code&gt; on the referenced type must be respected, just as with normal pointer conversions.</source>
          <target state="translated">Primero, el argumento correspondiente a un tipo de uni&amp;oacute;n transparente puede ser de cualquier tipo en la uni&amp;oacute;n; no se requiere yeso. Adem&amp;aacute;s, si la uni&amp;oacute;n contiene un tipo de puntero, el argumento correspondiente puede ser una constante de puntero nulo o una expresi&amp;oacute;n de puntero vac&amp;iacute;a; y si la uni&amp;oacute;n contiene un tipo de puntero vac&amp;iacute;o, el argumento correspondiente puede ser cualquier expresi&amp;oacute;n de puntero. Si el tipo de miembro de uni&amp;oacute;n es un puntero, se deben respetar los calificadores como &lt;code&gt;const&lt;/code&gt; en el tipo referenciado, al igual que con las conversiones de puntero normales.</target>
        </trans-unit>
        <trans-unit id="15ab13a54971de84d7939a64c563f0a383d5df53" translate="yes" xml:space="preserve">
          <source>Fixed form Fortran source code that must be preprocessed (with the traditional preprocessor).</source>
          <target state="translated">Código fuente Fortran de forma fija que debe ser preprocesado (con el preprocesador tradicional).</target>
        </trans-unit>
        <trans-unit id="5552528a96a767723e84e4196dd1b4ccd0182f5d" translate="yes" xml:space="preserve">
          <source>Fixed form Fortran source code that should not be preprocessed.</source>
          <target state="translated">Código fuente Fortran de forma fija que no debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="a31ce070cf9649524c3cf990ab1f1ab74aaffaa3" translate="yes" xml:space="preserve">
          <source>Fixed limit on the size of the static frame of functions: when it is topped by a particular function, stack checking is not reliable and a warning is issued by the compiler.</source>
          <target state="translated">Límite fijo del tamaño del marco estático de las funciones:cuando una función determinada lo supera,la comprobación de la pila no es fiable y el compilador emite una advertencia.</target>
        </trans-unit>
        <trans-unit id="85452dd45f77555cfc8a81ff291dd73781c80f82" translate="yes" xml:space="preserve">
          <source>Fixed-Point Types.</source>
          <target state="translated">Tipos de punto fijo.</target>
        </trans-unit>
        <trans-unit id="9f75981b930fd7189960fca9ba3bbc1796113fd3" translate="yes" xml:space="preserve">
          <source>Fixed-point data values contain fractional and optional integral parts. The format of fixed-point data varies and depends on the target machine.</source>
          <target state="translated">Los valores de datos de punto fijo contienen partes integrales fraccionarias y opcionales.El formato de los datos de punto fijo varía y depende de la máquina objetivo.</target>
        </trans-unit>
        <trans-unit id="cb9fd0ce1881fdc78c0697ef42b75b52d214196d" translate="yes" xml:space="preserve">
          <source>Fixed-point types are supported by the DWARF debug information format.</source>
          <target state="translated">El formato de información de depuración DWARF admite tipos de puntos fijos.</target>
        </trans-unit>
        <trans-unit id="265c5eecf02fb4f371ef39bcfe52b0dfc566b452" translate="yes" xml:space="preserve">
          <source>Flag the first routine whose name starts with &lt;var&gt;prefix&lt;/var&gt; as the main routine for the debugger.</source>
          <target state="translated">Marque la primera rutina cuyo nombre comience con &lt;var&gt;prefix&lt;/var&gt; como la rutina principal del depurador.</target>
        </trans-unit>
        <trans-unit id="b3390bf7e3c55aee432834653f4b1f941089ffde" translate="yes" xml:space="preserve">
          <source>Flexible array members are written as &lt;code&gt;contents[]&lt;/code&gt; without the &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Los miembros de la matriz flexible se escriben como &lt;code&gt;contents[]&lt;/code&gt; sin el &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78dbcf864480c990f48bdd0342e3500b8c1282bd" translate="yes" xml:space="preserve">
          <source>Flexible array members have incomplete type, and so the &lt;code&gt;sizeof&lt;/code&gt; operator may not be applied. As a quirk of the original implementation of zero-length arrays, &lt;code&gt;sizeof&lt;/code&gt; evaluates to zero.</source>
          <target state="translated">Los miembros de la matriz flexible tienen un tipo incompleto, por lo que es posible que no se aplique el operador &lt;code&gt;sizeof&lt;/code&gt; . Como una peculiaridad de la implementaci&amp;oacute;n original de matrices de longitud cero, &lt;code&gt;sizeof&lt;/code&gt; se eval&amp;uacute;a como cero.</target>
        </trans-unit>
        <trans-unit id="417d40e05d0999fe399d7881ccf242563a660e4a" translate="yes" xml:space="preserve">
          <source>Flexible array members may only appear as the last member of a &lt;code&gt;struct&lt;/code&gt; that is otherwise non-empty.</source>
          <target state="translated">Los miembros de matriz flexible solo pueden aparecer como el &amp;uacute;ltimo miembro de una &lt;code&gt;struct&lt;/code&gt; que de otra manera no estar&amp;iacute;a vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="7ffa11ebef97287859a0bb0cd563e4e8b95df556" translate="yes" xml:space="preserve">
          <source>Floating point constant 0.</source>
          <target state="translated">Constante de punto flotante 0.</target>
        </trans-unit>
        <trans-unit id="4560e48bbc91965a1ad028ff4792c55d56a0a598" translate="yes" xml:space="preserve">
          <source>Floating point constant that can be loaded into a register with one instruction per word</source>
          <target state="translated">Constante de punto flotante que puede ser cargada en un registro con una instrucción por palabra</target>
        </trans-unit>
        <trans-unit id="c516f23fc0c0d103a2cd7b68a6433df4fc2451d6" translate="yes" xml:space="preserve">
          <source>Floating point constant that is legal for store immediate</source>
          <target state="translated">Constante de punto flotante que es legal para el almacenamiento inmediato</target>
        </trans-unit>
        <trans-unit id="32a95fa9a487a375449247a65d3193bb1004c1f0" translate="yes" xml:space="preserve">
          <source>Floating point constant that is not a 68881 constant</source>
          <target state="translated">La constante de punto flotante que no es una constante de 68881</target>
        </trans-unit>
        <trans-unit id="79fb00b4bc62aed23a250b86e31fbd72d18840a5" translate="yes" xml:space="preserve">
          <source>Floating point constant zero</source>
          <target state="translated">La constante cero de punto flotante</target>
        </trans-unit>
        <trans-unit id="af1bda543b578583ca4289ffad142bd3d77692c3" translate="yes" xml:space="preserve">
          <source>Floating point register</source>
          <target state="translated">Registro de punto flotante</target>
        </trans-unit>
        <trans-unit id="573ca6d44dc3da178f33a1539aefbe9a7a969613" translate="yes" xml:space="preserve">
          <source>Floating point register (containing 32-bit value)</source>
          <target state="translated">Registro de punto flotante (que contiene un valor de 32 bits)</target>
        </trans-unit>
        <trans-unit id="b5c02f93e377f6b8a0b2a78a784d0d990452bae9" translate="yes" xml:space="preserve">
          <source>Floating point register (containing 64-bit value)</source>
          <target state="translated">Registro de punto flotante (que contiene el valor de 64 bits)</target>
        </trans-unit>
        <trans-unit id="ef449f8f1e197b3fc12f9a7bbd29815185c01715" translate="yes" xml:space="preserve">
          <source>Floating point register (deprecated)</source>
          <target state="translated">Registro de punto flotante (depreciado)</target>
        </trans-unit>
        <trans-unit id="f7558c1a4bb9c6d833aca45e4903e960fa15f358" translate="yes" xml:space="preserve">
          <source>Floating point register if</source>
          <target state="translated">El registro de punto flotante si</target>
        </trans-unit>
        <trans-unit id="c165ca40457d305eb7d330afdb797521f5de1b77" translate="yes" xml:space="preserve">
          <source>Floating point register if direct moves are available, or NO_REGS.</source>
          <target state="translated">Registro de punto flotante si hay movimientos directos disponibles,o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="5262899d7f774e7136ab629899288cb3977b1a82" translate="yes" xml:space="preserve">
          <source>Floating point register if the LFIWAX instruction is enabled or NO_REGS.</source>
          <target state="translated">Registro de punto flotante si la instrucción LFIWAX está activada o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="37f6e14594705b3a931f7fb11f09da2da0b4cf9c" translate="yes" xml:space="preserve">
          <source>Floating point register if the LFIWZX instruction is enabled or NO_REGS.</source>
          <target state="translated">Registro de punto flotante si la instrucción LFIWZX está activada o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="92eb4ccc2dc9e99f2247ac815df53adacfbc08da" translate="yes" xml:space="preserve">
          <source>Floating point register if the STFIWX instruction is enabled or NO_REGS.</source>
          <target state="translated">Registro de punto flotante si la instrucción STFIWX está activada o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="aaae0bc8bed9980f091aa46b02c6dcb5a52b76ec" translate="yes" xml:space="preserve">
          <source>Floating point register, Advanced SIMD vector register or SVE vector register</source>
          <target state="translated">Registro de punto flotante,registro vectorial SIMD avanzado o registro vectorial SVE</target>
        </trans-unit>
        <trans-unit id="16c68eba878493a77d0c164e7869af76e99d9145" translate="yes" xml:space="preserve">
          <source>Floating point registers AC0 through AC3. These can be loaded from/to memory with a single instruction.</source>
          <target state="translated">El punto flotante registra AC0 a AC3.Estos pueden ser cargados desde/hacia la memoria con una sola instrucción.</target>
        </trans-unit>
        <trans-unit id="83ce48a9f40c05895bc4e20f6bb82f032e76933d" translate="yes" xml:space="preserve">
          <source>Floating point registers AC4 and AC5. These cannot be loaded from/to memory with a single instruction.</source>
          <target state="translated">Los registros de punto flotante AC4 y AC5.No se pueden cargar desde/hacia la memoria con una sola instrucción.</target>
        </trans-unit>
        <trans-unit id="f58b0d70fd4d764630301aac0286ba68330e3308" translate="yes" xml:space="preserve">
          <source>Floating-point condition code register.</source>
          <target state="translated">Registro de código de condición de punto flotante.</target>
        </trans-unit>
        <trans-unit id="b56c9d5aa5cba048b4016e56db5b37a9156be6f1" translate="yes" xml:space="preserve">
          <source>Floating-point constant 0.0</source>
          <target state="translated">Constante de punto flotante 0.0</target>
        </trans-unit>
        <trans-unit id="11ca0595ff5b1cee498ed130d48a9d7ef77d2ce2" translate="yes" xml:space="preserve">
          <source>Floating-point constant 0.0 or 1.0</source>
          <target state="translated">Constante de punto flotante 0.0 o 1.0</target>
        </trans-unit>
        <trans-unit id="3af5f60b6556d63fbe7c6434e046d0c15fe3ffe1" translate="yes" xml:space="preserve">
          <source>Floating-point constant whose integral representation can be moved into an integer register using a high/lo_sum instruction sequence</source>
          <target state="translated">Constante de punto flotante cuya representación integral puede ser movida a un registro entero usando una secuencia de instrucciones high/lo_sum</target>
        </trans-unit>
        <trans-unit id="c0e1876d49ff7a36e4b65c8a5784d9cd7a8e4781" translate="yes" xml:space="preserve">
          <source>Floating-point constant whose integral representation can be moved into an integer register using a single mov instruction</source>
          <target state="translated">Constante de punto flotante cuya representación integral puede moverse en un registro entero usando una sola instrucción de movimiento</target>
        </trans-unit>
        <trans-unit id="500223502156611a39a78dc4c23517d86e8a772f" translate="yes" xml:space="preserve">
          <source>Floating-point constant whose integral representation can be moved into an integer register using a single sethi instruction</source>
          <target state="translated">Constante de punto flotante cuya representación integral puede moverse en un registro entero usando una sola instrucción sethi</target>
        </trans-unit>
        <trans-unit id="95fef479c80cb031fff0832cf86c7d5b4d064fb7" translate="yes" xml:space="preserve">
          <source>Floating-point instructions are only generated for 32-bit floating-point values, however, so the FPU hardware is not used for doubles if the</source>
          <target state="translated">Las instrucciones de punto flotante sólo se generan para valores de punto flotante de 32 bits,sin embargo,por lo que el hardware de la FPU no se utiliza para los dobles si el</target>
        </trans-unit>
        <trans-unit id="f213ef5758f227bd35596edf6ff5e36aed746a21" translate="yes" xml:space="preserve">
          <source>Floating-point minimum and maximum. These instructions are only generated if</source>
          <target state="translated">Punto flotante mínimo y máximo.Estas instrucciones sólo se generan si</target>
        </trans-unit>
        <trans-unit id="92610c4245848bdded34c9ee994e62b738188b93" translate="yes" xml:space="preserve">
          <source>Floating-point register</source>
          <target state="translated">Registro de punto flotante</target>
        </trans-unit>
        <trans-unit id="e5380eea89f6db263d5d241526df6bedd0bd11ff" translate="yes" xml:space="preserve">
          <source>Floating-point register on the SPARC-V8 architecture and lower floating-point register on the SPARC-V9 architecture.</source>
          <target state="translated">Registro de punto flotante en la arquitectura SPARC-V8 y registro de punto flotante inferior en la arquitectura SPARC-V9.</target>
        </trans-unit>
        <trans-unit id="2b69cf45a938c9e06197f0424f9a02b9aa9f002d" translate="yes" xml:space="preserve">
          <source>Floating-point register. It is equivalent to &amp;lsquo;</source>
          <target state="translated">Registro de coma flotante. Es equivalente a '</target>
        </trans-unit>
        <trans-unit id="8ed13acd5482c325b73e858b30874f469fb342d2" translate="yes" xml:space="preserve">
          <source>Floating-point register. It is only valid on the SPARC-V9 architecture when the Visual Instruction Set is available.</source>
          <target state="translated">Registro de punto flotante.Sólo es válido en la arquitectura SPARC-V9 cuando el Conjunto de Instrucciones Visuales está disponible.</target>
        </trans-unit>
        <trans-unit id="d0d6928cc5c4254d825994f1f03f5fa64bf43b02" translate="yes" xml:space="preserve">
          <source>Floating-point trigonometric and exponential functions. These instructions are only generated if</source>
          <target state="translated">Funciones trigonométricas y exponenciales en punto flotante.Estas instrucciones sólo se generan si</target>
        </trans-unit>
        <trans-unit id="cebba3f2674f659c3ac76a05e885a881a3fcce6d" translate="yes" xml:space="preserve">
          <source>Floating-point zero</source>
          <target state="translated">Punto flotante cero</target>
        </trans-unit>
        <trans-unit id="c245efe80db566f234058018cbe48e4698e1bcb0" translate="yes" xml:space="preserve">
          <source>Floating-point zero.</source>
          <target state="translated">Punto flotante cero.</target>
        </trans-unit>
        <trans-unit id="bc0561e46ee46f1370ce39f7bd133e69f6b47448" translate="yes" xml:space="preserve">
          <source>Flushing registers to memory has performance implications and may be an issue for time-sensitive code. You can provide better information to GCC to avoid this, as shown in the following examples. At a minimum, aliasing rules allow GCC to know what memory &lt;em&gt;doesn&amp;rsquo;t&lt;/em&gt; need to be flushed.</source>
          <target state="translated">El vaciado de registros en la memoria tiene implicaciones en el rendimiento y puede ser un problema para el c&amp;oacute;digo sensible al tiempo. Puede proporcionar mejor informaci&amp;oacute;n a GCC para evitar esto, como se muestra en los siguientes ejemplos. Como m&amp;iacute;nimo, las reglas de alias permiten a GCC saber qu&amp;eacute; memoria &lt;em&gt;no&lt;/em&gt; necesita vaciarse.</target>
        </trans-unit>
        <trans-unit id="7d035cae4646bbea859b3aa6a64d528d7a19fea6" translate="yes" xml:space="preserve">
          <source>Follow the EABI requirement of always creating a frame pointer whenever a stack frame is allocated. This option is enabled by default and can be disabled with</source>
          <target state="translated">Sigue el requisito del EABI de crear siempre un puntero de cuadro siempre que se asigne un cuadro de pila.Esta opción está habilitada por defecto y puede ser desactivada con</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="9203a30acc55d5bd89f275fd6b63f1da488b512a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;t2&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt; is placed at offset 2, rather than offset 1. Accordingly, the size of &lt;code&gt;t2&lt;/code&gt; is 4. For &lt;code&gt;t3&lt;/code&gt;, the zero-length bit-field does not affect the alignment of &lt;code&gt;bar&lt;/code&gt; or, as a result, the size of the structure.</source>
          <target state="translated">Para &lt;code&gt;t2&lt;/code&gt; , la &lt;code&gt;bar&lt;/code&gt; ra se coloca en el desplazamiento 2, en lugar del desplazamiento 1. Por consiguiente, el tama&amp;ntilde;o de &lt;code&gt;t2&lt;/code&gt; es 4. Para &lt;code&gt;t3&lt;/code&gt; , el campo de bits de longitud cero no afecta la alineaci&amp;oacute;n de la &lt;code&gt;bar&lt;/code&gt; ra o, como resultado, el tama&amp;ntilde;o de la estructura.</target>
        </trans-unit>
        <trans-unit id="c0e04e76cdfed448d6c782b7f817b6eea03c0f50" translate="yes" xml:space="preserve">
          <source>For &lt;var&gt;n&lt;/var&gt; greater than zero,</source>
          <target state="translated">Para &lt;var&gt;n&lt;/var&gt; mayor que cero,</target>
        </trans-unit>
        <trans-unit id="fda527468e7c30de6308efd890e87b3a3fff811b" translate="yes" xml:space="preserve">
          <source>For ARC, a function marked with the &lt;code&gt;long_call&lt;/code&gt; attribute is always called using register-indirect jump-and-link instructions, thereby enabling the called function to be placed anywhere within the 32-bit address space. A function marked with the &lt;code&gt;medium_call&lt;/code&gt; attribute will always be close enough to be called with an unconditional branch-and-link instruction, which has a 25-bit offset from the call site. A function marked with the &lt;code&gt;short_call&lt;/code&gt; attribute will always be close enough to be called with a conditional branch-and-link instruction, which has a 21-bit offset from the call site.</source>
          <target state="translated">Para ARC, una funci&amp;oacute;n marcada con el atributo &lt;code&gt;long_call&lt;/code&gt; siempre se llama usando instrucciones de salto y enlace de registro indirecto, lo que permite que la funci&amp;oacute;n llamada se coloque en cualquier lugar dentro del espacio de direcciones de 32 bits. Una funci&amp;oacute;n marcada con el atributo &lt;code&gt;medium_call&lt;/code&gt; siempre estar&amp;aacute; lo suficientemente cerca para ser llamada con una instrucci&amp;oacute;n de bifurcaci&amp;oacute;n y enlace incondicional, que tiene un desplazamiento de 25 bits desde el sitio de la llamada. Una funci&amp;oacute;n marcada con el atributo &lt;code&gt;short_call&lt;/code&gt; siempre estar&amp;aacute; lo suficientemente cerca como para ser llamada con una instrucci&amp;oacute;n condicional de bifurcaci&amp;oacute;n y enlace, que tiene un desplazamiento de 21 bits desde el sitio de la llamada.</target>
        </trans-unit>
        <trans-unit id="6adc57b693c8942df2cd231eba32d27dd15cba72" translate="yes" xml:space="preserve">
          <source>For C and C++ source and include files, generate corresponding Ada specs. See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gnat_ugn/Generating-Ada-Bindings-for-C-and-C_002b_002b-headers.html#Generating-Ada-Bindings-for-C-and-C_002b_002b-headers&quot;&gt;Generating Ada Bindings for C and C++ headers&lt;/a&gt; in GNAT User&amp;rsquo;s Guide, which provides detailed documentation on this feature.</source>
          <target state="translated">Para archivos fuente e include de C y C ++, genere las especificaciones de Ada correspondientes. Consulte &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gnat_ugn/Generating-Ada-Bindings-for-C-and-C_002b_002b-headers.html#Generating-Ada-Bindings-for-C-and-C_002b_002b-headers&quot;&gt;Generaci&amp;oacute;n de enlaces Ada para encabezados C y C ++&lt;/a&gt; en la Gu&amp;iacute;a del usuario de GNAT, que proporciona documentaci&amp;oacute;n detallada sobre esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a54d6337d3721d977a537facc549a93425ea6c7b" translate="yes" xml:space="preserve">
          <source>For C only, warn about a &lt;code&gt;return&lt;/code&gt; statement with an expression in a function whose return type is &lt;code&gt;void&lt;/code&gt;, unless the expression type is also &lt;code&gt;void&lt;/code&gt;. As a GNU extension, the latter case is accepted without a warning unless</source>
          <target state="translated">Solo para C, advierte sobre una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; con una expresi&amp;oacute;n en una funci&amp;oacute;n cuyo tipo de retorno sea &lt;code&gt;void&lt;/code&gt; , a menos que el tipo de expresi&amp;oacute;n tambi&amp;eacute;n sea &lt;code&gt;void&lt;/code&gt; . Como extensi&amp;oacute;n GNU, el &amp;uacute;ltimo caso se acepta sin advertencia a menos que</target>
        </trans-unit>
        <trans-unit id="2ec28d96fea6d9177d31ee6cda12fa27a81380e2" translate="yes" xml:space="preserve">
          <source>For C++ this also warns for some cases of unnecessary parentheses in declarations, which can indicate an attempt at a function call instead of a declaration:</source>
          <target state="translated">En el caso de C++esto también advierte de algunos casos de paréntesis innecesarios en las declaraciones,que pueden indicar un intento de llamada de función en lugar de una declaración:</target>
        </trans-unit>
        <trans-unit id="a1ba0033d082d3c48e09cd4d28a77031c040292c" translate="yes" xml:space="preserve">
          <source>For C++ types with non-trivial constructors and/or destructors it is impossible for the compiler to determine whether a variable of this type is truly unused if it is not referenced. This type attribute informs the compiler that variables of this type should be warned about if they appear to be unused, just like variables of fundamental types.</source>
          <target state="translated">Para los tipos C++con constructores y/o destructores no triviales es imposible para el compilador determinar si una variable de este tipo está realmente sin usar si no está referenciada.Este atributo de tipo informa al compilador de que las variables de este tipo deben ser advertidas si parecen estar sin usar,al igual que las variables de tipos fundamentales.</target>
        </trans-unit>
        <trans-unit id="0ae259ea1be0c205a219871342f05ea5c73b071c" translate="yes" xml:space="preserve">
          <source>For C++, also warn for confusing overload resolution for user-defined conversions; and conversions that never use a type conversion operator: conversions to &lt;code&gt;void&lt;/code&gt;, the same type, a base class or a reference to them. Warnings about conversions between signed and unsigned integers are disabled by default in C++ unless</source>
          <target state="translated">Para C ++, tambi&amp;eacute;n advierte sobre la resoluci&amp;oacute;n de sobrecarga confusa para las conversiones definidas por el usuario; y conversiones que nunca usan un operador de conversi&amp;oacute;n de tipo: conversiones a &lt;code&gt;void&lt;/code&gt; , el mismo tipo, una clase base o una referencia a ellos. Las advertencias sobre conversiones entre enteros firmados y sin firmar est&amp;aacute;n deshabilitadas de forma predeterminada en C ++ a menos que</target>
        </trans-unit>
        <trans-unit id="e062686eecb3f26c45c0833c30627154026b2d61" translate="yes" xml:space="preserve">
          <source>For C++11 and later standards, narrowing conversions are diagnosed by default, as required by the standard. A narrowing conversion from a constant produces an error, and a narrowing conversion from a non-constant produces a warning, but</source>
          <target state="translated">Para los estándares C++11 y posteriores,las conversiones de estrechamiento se diagnostican por defecto,como lo requiere el estándar.Una conversión de estrechamiento de una constante produce un error,y una conversión de estrechamiento de una no constante produce una advertencia,pero</target>
        </trans-unit>
        <trans-unit id="f97e8575f9ec69703e8c96b79759e90bcf7fbfd5" translate="yes" xml:space="preserve">
          <source>For C, overloaded functions are implemented with macros so the following does not work:</source>
          <target state="translated">En el caso de C,las funciones sobrecargadas se implementan con macros,por lo que lo siguiente no funciona:</target>
        </trans-unit>
        <trans-unit id="9bcf8fa5038512fc6bcb9ac1f639a794219e10dd" translate="yes" xml:space="preserve">
          <source>For Microsoft Windows targets the use of the &lt;code&gt;dllimport&lt;/code&gt; attribute on functions is not necessary, but provides a small performance benefit by eliminating a thunk in the DLL. The use of the &lt;code&gt;dllimport&lt;/code&gt; attribute on imported variables can be avoided by passing the</source>
          <target state="translated">Para los destinos de Microsoft Windows, el uso del atributo &lt;code&gt;dllimport&lt;/code&gt; en las funciones no es necesario, pero proporciona una peque&amp;ntilde;a ventaja de rendimiento al eliminar un procesador en la DLL. El uso del atributo &lt;code&gt;dllimport&lt;/code&gt; en variables importadas se puede evitar pasando el</target>
        </trans-unit>
        <trans-unit id="9b439766be6cedb98071044e5f74180de17ccd28" translate="yes" xml:space="preserve">
          <source>For Microsoft Windows targets there are alternative methods for including the symbol in the DLL&amp;rsquo;s export table such as using a</source>
          <target state="translated">Para los destinos de Microsoft Windows, existen m&amp;eacute;todos alternativos para incluir el s&amp;iacute;mbolo en la tabla de exportaci&amp;oacute;n de la DLL, como usar un</target>
        </trans-unit>
        <trans-unit id="c0f97011eddc4db6c5d876ee996866a2e41c88d5" translate="yes" xml:space="preserve">
          <source>For Objective-C dialects, &lt;code&gt;NSString&lt;/code&gt; (or &lt;code&gt;__NSString__&lt;/code&gt;) is recognized in the same context. Declarations including these format attributes are parsed for correct syntax, however the result of checking of such format strings is not yet defined, and is not carried out by this version of the compiler.</source>
          <target state="translated">Para los dialectos Objective-C, &lt;code&gt;NSString&lt;/code&gt; (o &lt;code&gt;__NSString__&lt;/code&gt; ) se reconoce en el mismo contexto. Las declaraciones que incluyen estos atributos de formato se analizan para determinar la sintaxis correcta; sin embargo, el resultado de la verificaci&amp;oacute;n de dichas cadenas de formato a&amp;uacute;n no est&amp;aacute; definido y esta versi&amp;oacute;n del compilador no lo lleva a cabo.</target>
        </trans-unit>
        <trans-unit id="7b8c007aa57d34905e4e1143a8c9e0a695e59978" translate="yes" xml:space="preserve">
          <source>For Objective-C dialects, the &lt;code&gt;format-arg&lt;/code&gt; attribute may refer to an &lt;code&gt;NSString&lt;/code&gt; reference for compatibility with the &lt;code&gt;format&lt;/code&gt; attribute above.</source>
          <target state="translated">Para los dialectos de Objective-C, el atributo &lt;code&gt;format-arg&lt;/code&gt; puede hacer referencia a una referencia &lt;code&gt;NSString&lt;/code&gt; para compatibilidad con el atributo de &lt;code&gt;format&lt;/code&gt; o anterior.</target>
        </trans-unit>
        <trans-unit id="92a499e6d28c647e0ab66f857f55afedfae35b1a" translate="yes" xml:space="preserve">
          <source>For PMF constants (i.e. expressions of the form &amp;lsquo;</source>
          <target state="translated">Para las constantes PMF (es decir, expresiones de la forma '</target>
        </trans-unit>
        <trans-unit id="da58c329594be0295cc2415f6a69d9838ef88a83" translate="yes" xml:space="preserve">
          <source>For SysV/x86-64, unions with &lt;code&gt;long double&lt;/code&gt; members are passed in memory as specified in psABI. For example:</source>
          <target state="translated">Para SysV / x86-64, las uniones con miembros &lt;code&gt;long double&lt;/code&gt; se pasan a la memoria como se especifica en psABI. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1f5fce8a743c71e90680bcbdd5fc42205fc0e24c" translate="yes" xml:space="preserve">
          <source>For SysV/x86-64, unions with &lt;code&gt;long double&lt;/code&gt; members are passed in memory as specified in psABI. Prior to GCC 4.4, this was not the case. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5082f805fe556d28e82883360f1cc9602556d6" translate="yes" xml:space="preserve">
          <source>For a branch, if it was executed at least once, then a percentage indicating the number of times the branch was taken divided by the number of times the branch was executed will be printed. Otherwise, the message &amp;ldquo;never executed&amp;rdquo; is printed.</source>
          <target state="translated">Para una rama, si se ejecut&amp;oacute; al menos una vez, se imprimir&amp;aacute; un porcentaje que indica el n&amp;uacute;mero de veces que se tom&amp;oacute; la rama dividido por la cantidad de veces que se ejecut&amp;oacute; la rama. De lo contrario, se imprime el mensaje &quot;nunca ejecutado&quot;.</target>
        </trans-unit>
        <trans-unit id="c55de54fa0492ae593f558830d0cb1158609d3e6" translate="yes" xml:space="preserve">
          <source>For a call, if it was executed at least once, then a percentage indicating the number of times the call returned divided by the number of times the call was executed will be printed. This will usually be 100%, but may be less for functions that call &lt;code&gt;exit&lt;/code&gt; or &lt;code&gt;longjmp&lt;/code&gt;, and thus may not return every time they are called.</source>
          <target state="translated">Para una llamada, si se ejecut&amp;oacute; al menos una vez, se imprimir&amp;aacute; un porcentaje que indica el n&amp;uacute;mero de veces que se devolvi&amp;oacute; la llamada dividido por el n&amp;uacute;mero de veces que se ejecut&amp;oacute; la llamada. Por lo general, ser&amp;aacute; 100%, pero puede ser menor para funciones que llaman a &lt;code&gt;exit&lt;/code&gt; o &lt;code&gt;longjmp&lt;/code&gt; y, por lo tanto, es posible que no regresen cada vez que se llaman.</target>
        </trans-unit>
        <trans-unit id="0b932ff19c99d589baf49f81de1fc444d2d6fe68" translate="yes" xml:space="preserve">
          <source>For a full description of what the helpers do, the arguments they take, and the returned value, see the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3a2fcd90b12dd021860d8f2094fd5bb769b990" translate="yes" xml:space="preserve">
          <source>For all builtins, &lt;code&gt;__builtin_arc_&lt;var&gt;someinsn&lt;/var&gt;&lt;/code&gt;, the header file</source>
          <target state="translated">Para todas las incorporaciones, &lt;code&gt;__builtin_arc_&lt;var&gt;someinsn&lt;/var&gt;&lt;/code&gt; , el archivo de encabezado</target>
        </trans-unit>
        <trans-unit id="faea18cdbc9f914fc830faf9ab42ccd57286882b" translate="yes" xml:space="preserve">
          <source>For all of these except the last, the compiler automatically ignores the precompiled header if the conditions aren&amp;rsquo;t met. If you find an option combination that doesn&amp;rsquo;t work and doesn&amp;rsquo;t cause the precompiled header to be ignored, please consider filing a bug report, see &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/Bugs.html#Bugs&quot;&gt;Bugs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0b11d5fd63069d7902f804e3faa32968adf01d" translate="yes" xml:space="preserve">
          <source>For all of these except the last, the compiler automatically ignores the precompiled header if the conditions aren&amp;rsquo;t met. If you find an option combination that doesn&amp;rsquo;t work and doesn&amp;rsquo;t cause the precompiled header to be ignored, please consider filing a bug report, see &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Bugs.html#Bugs&quot;&gt;Bugs&lt;/a&gt;.</source>
          <target state="translated">Para todos estos, excepto el &amp;uacute;ltimo, el compilador ignora autom&amp;aacute;ticamente el encabezado precompilado si no se cumplen las condiciones. Si encuentra una combinaci&amp;oacute;n de opciones que no funciona y no hace que se ignore el encabezado precompilado, considere enviar un informe de errores, consulte &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Bugs.html#Bugs&quot;&gt;Errores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58f02a64f2f86869e0c0753651765b098a5d48fc" translate="yes" xml:space="preserve">
          <source>For an automatic (i.e. local) variable, if there exists a path from the function entry to a use of the variable that is initialized, but there exist some other paths for which the variable is not initialized, the compiler emits a warning if it cannot prove the uninitialized paths are not executed at run time.</source>
          <target state="translated">En el caso de una variable automática (es decir,local),si existe un camino desde la entrada de la función hasta la utilización de la variable que está inicializada,pero existen otros caminos para los que la variable no está inicializada,el compilador emite una advertencia si no puede probar que los caminos no inicializados no se ejecutan en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="66413344ffac4ff8769f77f6b83c7166f806eb53" translate="yes" xml:space="preserve">
          <source>For any declared symbols matching &lt;var&gt;name&lt;/var&gt;, this does three things to that symbol: it forces the symbol to be located at the given address (a number), it forces the symbol to be volatile, and it changes the symbol&amp;rsquo;s scope to be static. This pragma exists for compatibility with other compilers, but note that the common &lt;code&gt;1234H&lt;/code&gt; numeric syntax is not supported (use &lt;code&gt;0x1234&lt;/code&gt; instead). Example:</source>
          <target state="translated">Para cualquier s&amp;iacute;mbolo declarado que coincida con el &lt;var&gt;name&lt;/var&gt; , esto hace tres cosas con ese s&amp;iacute;mbolo: obliga a que el s&amp;iacute;mbolo se ubique en la direcci&amp;oacute;n dada (un n&amp;uacute;mero), fuerza al s&amp;iacute;mbolo a ser vol&amp;aacute;til y cambia el alcance del s&amp;iacute;mbolo para que sea est&amp;aacute;tico. Este pragma existe por compatibilidad con otros compiladores, pero tenga en cuenta que la sintaxis num&amp;eacute;rica com&amp;uacute;n &lt;code&gt;1234H&lt;/code&gt; no es compatible (use &lt;code&gt;0x1234&lt;/code&gt; en su lugar). Ejemplo:</target>
        </trans-unit>
        <trans-unit id="a150049db7b708562952c9c177d8b88f32edb151" translate="yes" xml:space="preserve">
          <source>For any given input file, the file name suffix determines what kind of compilation is done:</source>
          <target state="translated">Para cualquier archivo de entrada,el sufijo del nombre del archivo determina qué tipo de compilación se hace:</target>
        </trans-unit>
        <trans-unit id="07d18512cc77ea85f9b39807bf636696e007c1f0" translate="yes" xml:space="preserve">
          <source>For any input register that is implicitly popped by an &lt;code&gt;asm&lt;/code&gt;, it is necessary to know how to adjust the stack to compensate for the pop. If any non-popped input is closer to the top of the reg-stack than the implicitly popped register, it would not be possible to know what the stack looked like&amp;mdash;it&amp;rsquo;s not clear how the rest of the stack &amp;ldquo;slides up&amp;rdquo;.</source>
          <target state="translated">Para cualquier registro de entrada que sea explotado impl&amp;iacute;citamente por un &lt;code&gt;asm&lt;/code&gt; , es necesario saber c&amp;oacute;mo ajustar la pila para compensar el pop. Si cualquier entrada no emergente est&amp;aacute; m&amp;aacute;s cerca de la parte superior de la pila de registros que el registro emergente impl&amp;iacute;citamente, no ser&amp;iacute;a posible saber c&amp;oacute;mo se ve&amp;iacute;a la pila; no est&amp;aacute; claro c&amp;oacute;mo el resto de la pila se &amp;ldquo;desliza hacia arriba&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="f70c821669087836df1b08a79652756521c81032" translate="yes" xml:space="preserve">
          <source>For basic &lt;code&gt;asm&lt;/code&gt; with non-empty assembler string GCC assumes the assembler block does not change any general purpose registers, but it may read or write any globally accessible variable.</source>
          <target state="translated">B&amp;aacute;sico &lt;code&gt;asm&lt;/code&gt; con no vac&amp;iacute;o GCC cadena ensamblador asume el bloque de ensamblador no cambia los registros de prop&amp;oacute;sito general, pero puede leer o escribir cualquier variable accesible a nivel mundial.</target>
        </trans-unit>
        <trans-unit id="5e325c0c804529598de8767ff4c99ad5a3e91e4a" translate="yes" xml:space="preserve">
          <source>For compatibility with Microsoft Windows compilers, GCC supports &amp;lsquo;</source>
          <target state="translated">Para compatibilidad con compiladores de Microsoft Windows, GCC admite '</target>
        </trans-unit>
        <trans-unit id="2e68646242b9dd84443ad785c99336fb66a4c416" translate="yes" xml:space="preserve">
          <source>For compatibility with Microsoft Windows compilers, GCC supports a set of &lt;code&gt;#pragma&lt;/code&gt; directives that change the maximum alignment of members of structures (other than zero-width bit-fields), unions, and classes subsequently defined. The &lt;var&gt;n&lt;/var&gt; value below always is required to be a small power of two and specifies the new alignment in bytes.</source>
          <target state="translated">Para la compatibilidad con los compiladores de Microsoft Windows, GCC admite un conjunto de directivas &lt;code&gt;#pragma&lt;/code&gt; que cambian la alineaci&amp;oacute;n m&amp;aacute;xima de miembros de estructuras (que no sean campos de bits de ancho cero), uniones y clases definidas posteriormente. El valor de &lt;var&gt;n&lt;/var&gt; a continuaci&amp;oacute;n siempre debe ser una peque&amp;ntilde;a potencia de dos y especifica la nueva alineaci&amp;oacute;n en bytes.</target>
        </trans-unit>
        <trans-unit id="2922cd58b39e0ff05824f3d77b79c0fe7423d78f" translate="yes" xml:space="preserve">
          <source>For compatibility with SVR4, GCC supports a set of &lt;code&gt;#pragma&lt;/code&gt; directives for declaring symbols to be weak, and defining weak aliases.</source>
          <target state="translated">Para compatibilidad con SVR4, GCC admite un conjunto de directivas &lt;code&gt;#pragma&lt;/code&gt; para declarar s&amp;iacute;mbolos d&amp;eacute;biles y definir alias d&amp;eacute;biles.</target>
        </trans-unit>
        <trans-unit id="47783006d3b2d24697c7b14be6b4ca265bdb02d0" translate="yes" xml:space="preserve">
          <source>For compatibility with existing code written for compiler versions that did not implement attributes on nested declarators, some laxity is allowed in the placing of attributes. If an attribute that only applies to types is applied to a declaration, it is treated as applying to the type of that declaration. If an attribute that only applies to declarations is applied to the type of a declaration, it is treated as applying to that declaration; and, for compatibility with code placing the attributes immediately before the identifier declared, such an attribute applied to a function return type is treated as applying to the function type, and such an attribute applied to an array element type is treated as applying to the array type. If an attribute that only applies to function types is applied to a pointer-to-function type, it is treated as applying to the pointer target type; if such an attribute is applied to a function return type that is not a pointer-to-function type, it is treated as applying to the function type.</source>
          <target state="translated">En cuanto a la compatibilidad con el código existente escrito para las versiones del compilador que no implementaron atributos en los declaradores anidados,se permite cierta laxitud en la colocación de los atributos.Si un atributo que sólo se aplica a los tipos se aplica a una declaración,se considera que se aplica al tipo de esa declaración.Si un atributo que sólo se aplica a las declaraciones se aplica al tipo de una declaración,se considera que se aplica a esa declaración;y,para la compatibilidad con el código que coloca los atributos inmediatamente antes del identificador declarado,tal atributo aplicado a un tipo de retorno de función se considera que se aplica al tipo de función,y tal atributo aplicado a un tipo de elemento de matriz se considera que se aplica al tipo de matriz.Si un atributo que sólo se aplica a los tipos de función se aplica a un tipo de puntero a función,se trata como si se aplicara al tipo de destino del puntero;si tal atributo se aplica a un tipo de retorno de función que no es un tipo de puntero a función,se trata como si se aplicara al tipo de función.</target>
        </trans-unit>
        <trans-unit id="55c454a21201bdfc3a9a886c367d99786c9c4842" translate="yes" xml:space="preserve">
          <source>For compatibility, it&amp;rsquo;s always newlib for elf now.</source>
          <target state="translated">Por compatibilidad, ahora siempre es nuevo para elf.</target>
        </trans-unit>
        <trans-unit id="4859bddb1e6f097bf4875ee4cd32afb8f33d13e6" translate="yes" xml:space="preserve">
          <source>For convenience, it is allowed to use a binary vector operation where one operand is a scalar. In that case the compiler transforms the scalar operand into a vector where each element is the scalar from the operation. The transformation happens only if the scalar could be safely converted to the vector-element type. Consider the following code.</source>
          <target state="translated">Por comodidad,se permite utilizar una operación de vector binario en la que un operando es un escalar.En ese caso,el compilador transforma el operando escalar en un vector en el que cada elemento es el escalar de la operación.La transformación sólo se produce si el escalar puede convertirse con seguridad al tipo de elemento vectorial.Considere el siguiente código.</target>
        </trans-unit>
        <trans-unit id="3d923f6f173753b3c978292a218e04d22288b211" translate="yes" xml:space="preserve">
          <source>For conversion to a type of width &lt;em&gt;N&lt;/em&gt;, the value is reduced modulo &lt;em&gt;2^N&lt;/em&gt; to be within range of the type; no signal is raised.</source>
          <target state="translated">Para la conversi&amp;oacute;n a un tipo de ancho &lt;em&gt;N&lt;/em&gt; , el valor se reduce m&amp;oacute;dulo &lt;em&gt;2 ^ N&lt;/em&gt; para estar dentro del rango del tipo; no se eleva ninguna se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="c0bc316f0ef750b2316cb1b5e8278752dde4a8ca" translate="yes" xml:space="preserve">
          <source>For deciding the optimization level of body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3216191fb385483c1e97afafeea464af935a4944" translate="yes" xml:space="preserve">
          <source>For devices not in &lt;code&gt;avrtiny&lt;/code&gt; or &lt;code&gt;avrxmega3&lt;/code&gt;, any data including read-only data is located in RAM (the generic address space) because flash memory is not visible in the RAM address space. In order to locate read-only data in flash memory &lt;em&gt;and&lt;/em&gt; to generate the right instructions to access this data without using (inline) assembler code, special address spaces are needed.</source>
          <target state="translated">Para los dispositivos que no est&amp;aacute;n en &lt;code&gt;avrtiny&lt;/code&gt; o &lt;code&gt;avrxmega3&lt;/code&gt; , cualquier dato, incluidos los de solo lectura, se encuentra en la RAM (el espacio de direcciones gen&amp;eacute;rico) porque la memoria flash no es visible en el espacio de direcciones de RAM. Para ubicar datos de solo lectura en la memoria flash &lt;em&gt;y&lt;/em&gt; generar las instrucciones correctas para acceder a estos datos sin usar c&amp;oacute;digo ensamblador (en l&amp;iacute;nea), se necesitan espacios de direcciones especiales.</target>
        </trans-unit>
        <trans-unit id="0733ee9be6e082cc123e5464c02486573ae7f9cd" translate="yes" xml:space="preserve">
          <source>For documentation of &lt;code&gt;altivec&lt;/code&gt; attribute please see the documentation in &lt;a href=&quot;type-attributes#PowerPC-Type-Attributes&quot;&gt;PowerPC Type Attributes&lt;/a&gt;.</source>
          <target state="translated">Para obtener documentaci&amp;oacute;n &lt;code&gt;altivec&lt;/code&gt; atributo altivec , consulte la documentaci&amp;oacute;n en &lt;a href=&quot;type-attributes#PowerPC-Type-Attributes&quot;&gt;Atributos de tipo de PowerPC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb3f33ef599bbcb991ed9de189514be3fb2765a7" translate="yes" xml:space="preserve">
          <source>For each Objective-C class, check if any of its instance variables is a C++ object with a non-trivial default constructor. If so, synthesize a special &lt;code&gt;- (id) .cxx_construct&lt;/code&gt; instance method which runs non-trivial default constructors on any such instance variables, in order, and then return &lt;code&gt;self&lt;/code&gt;. Similarly, check if any instance variable is a C++ object with a non-trivial destructor, and if so, synthesize a special &lt;code&gt;- (void) .cxx_destruct&lt;/code&gt; method which runs all such default destructors, in reverse order.</source>
          <target state="translated">Para cada clase Objective-C, verifique si alguna de sus variables de instancia es un objeto C ++ con un constructor predeterminado no trivial. Si es as&amp;iacute;, sintetice un m&amp;eacute;todo de instancia especial &lt;code&gt;- (id) .cxx_construct&lt;/code&gt; que ejecute constructores predeterminados no triviales en tales variables de instancia, en orden, y luego devuelva &lt;code&gt;self&lt;/code&gt; . De manera similar, verifique si alguna variable de instancia es un objeto C ++ con un destructor no trivial, y si es as&amp;iacute;, sintetice un m&amp;eacute;todo especial &lt;code&gt;- (void) .cxx_destruct&lt;/code&gt; que ejecute todos esos destructores predeterminados, en orden inverso.</target>
        </trans-unit>
        <trans-unit id="ecabcf6fb487210c3e414abe28454af79991a5a8" translate="yes" xml:space="preserve">
          <source>For each basic block, a line is printed after the last line of the basic block describing the branch or call that ends the basic block. There can be multiple branches and calls listed for a single source line if there are multiple basic blocks that end on that line. In this case, the branches and calls are each given a number. There is no simple way to map these branches and calls back to source constructs. In general, though, the lowest numbered branch or call will correspond to the leftmost construct on the source line.</source>
          <target state="translated">Para cada bloque básico,se imprime una línea después de la última línea del bloque básico que describe la rama o llamada que termina el bloque básico.Puede haber múltiples ramas y llamadas enumeradas para una sola línea de origen si hay varios bloques básicos que terminan en esa línea.En este caso,se da un número a cada una de las ramas y llamadas.No hay una forma sencilla de mapear estas ramas y llamadas a las construcciones de origen.Sin embargo,en general,la rama o llamada de menor número corresponderá a la construcción más a la izquierda de la línea de origen.</target>
        </trans-unit>
        <trans-unit id="7d57dddd1f25be9ff5b83775303a0d6d59fce852" translate="yes" xml:space="preserve">
          <source>For each built-in function for AVR, there is an equally named, uppercase built-in macro defined. That way users can easily query if or if not a specific built-in is implemented or not. For example, if &lt;code&gt;__builtin_avr_nop&lt;/code&gt; is available the macro &lt;code&gt;__BUILTIN_AVR_NOP&lt;/code&gt; is defined to &lt;code&gt;1&lt;/code&gt; and undefined otherwise.</source>
          <target state="translated">Para cada funci&amp;oacute;n incorporada de AVR, se define una macro incorporada en may&amp;uacute;sculas con el mismo nombre. De esa manera, los usuarios pueden consultar f&amp;aacute;cilmente si se implementa o no una funci&amp;oacute;n incorporada espec&amp;iacute;fica. Por ejemplo, si &lt;code&gt;__builtin_avr_nop&lt;/code&gt; est&amp;aacute; disponible, la macro &lt;code&gt;__BUILTIN_AVR_NOP&lt;/code&gt; se define como &lt;code&gt;1&lt;/code&gt; y no est&amp;aacute; definida en caso contrario.</target>
        </trans-unit>
        <trans-unit id="d11a6b019eb02c22d6e7924e271f0d952fce8600" translate="yes" xml:space="preserve">
          <source>For each function, a line is printed showing how many times the function is called, how many times it returns and what percentage of the function&amp;rsquo;s blocks were executed.</source>
          <target state="translated">Para cada funci&amp;oacute;n, se imprime una l&amp;iacute;nea que muestra cu&amp;aacute;ntas veces se llama a la funci&amp;oacute;n, cu&amp;aacute;ntas veces regresa y qu&amp;eacute; porcentaje de los bloques de la funci&amp;oacute;n se ejecutaron.</target>
        </trans-unit>
        <trans-unit id="4bcb841b4282f8986587d3e6966d3ed8c8dbe585" translate="yes" xml:space="preserve">
          <source>For each language compiled by GCC for which there is a standard, GCC attempts to follow one or more versions of that standard, possibly with some exceptions, and possibly with some extensions.</source>
          <target state="translated">Para cada uno de los idiomas compilados por el GCC para los que existe una norma,el GCC intenta seguir una o más versiones de esa norma,posiblemente con algunas excepciones,y posiblemente con algunas extensiones.</target>
        </trans-unit>
        <trans-unit id="454897cc2fe9ad183bab2f7040fb6e5f25d9835d" translate="yes" xml:space="preserve">
          <source>For each named address space supported by avr-gcc there is an equally named but uppercase built-in macro defined. The purpose is to facilitate testing if respective address space support is available or not:</source>
          <target state="translated">Para cada espacio de direcciones con nombre soportado por avr-gcc hay una macro incorporada con nombre igual pero en mayúsculas definida.El propósito es facilitar la prueba de si el respectivo espacio de direcciones está disponible o no:</target>
        </trans-unit>
        <trans-unit id="a3f4882138b251f321ad16e203354e1a8d314d76" translate="yes" xml:space="preserve">
          <source>For each of the other indicated dump files (</source>
          <target state="translated">Para cada uno de los otros archivos de volcado indicados (</target>
        </trans-unit>
        <trans-unit id="52f8ea439a283b5dc96c21715d0fefc3004bcf28" translate="yes" xml:space="preserve">
          <source>For each subprogram to be run, the compiler driver first tries the</source>
          <target state="translated">Para cada subprograma que se ejecute,el controlador del compilador primero intenta el</target>
        </trans-unit>
        <trans-unit id="fdc4fc8f69b51e6f564843d4ff6b4102d66402dd" translate="yes" xml:space="preserve">
          <source>For even more AVR-specific built-in macros see &lt;a href=&quot;named-address-spaces#AVR-Named-Address-Spaces&quot;&gt;AVR Named Address Spaces&lt;/a&gt; and &lt;a href=&quot;avr-built_002din-functions#AVR-Built_002din-Functions&quot;&gt;AVR Built-in Functions&lt;/a&gt;.</source>
          <target state="translated">Para a&amp;uacute;n m&amp;aacute;s AVR-espec&amp;iacute;fica incorporada en las macros ver &lt;a href=&quot;named-address-spaces#AVR-Named-Address-Spaces&quot;&gt;espacios de direcciones AVR con nombre&lt;/a&gt; y &lt;a href=&quot;avr-built_002din-functions#AVR-Built_002din-Functions&quot;&gt;AVR funciones integradas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1baa0cc1603bf61303a12aa930a0094973d11cab" translate="yes" xml:space="preserve">
          <source>For example in the structure below, the member array &lt;code&gt;x&lt;/code&gt; is packed so that it immediately follows &lt;code&gt;a&lt;/code&gt; with no intervening padding:</source>
          <target state="translated">Por ejemplo, en la estructura a continuaci&amp;oacute;n, la matriz miembro de &lt;code&gt;x&lt;/code&gt; se embala de manera que sigue inmediatamente a &lt;code&gt;a&lt;/code&gt; sin relleno intervenir:</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="67c7bfe6911146baef42ccf95311646fa6de1225" translate="yes" xml:space="preserve">
          <source>For example, &amp;lsquo;</source>
          <target state="translated">Por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="f35aae572eaa511b9e1fec745e2f41aff9a397c4" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;-MT '$(objpfx)foo.o'&lt;/code&gt; might give</source>
          <target state="translated">Por ejemplo, &lt;code&gt;-MT '$(objpfx)foo.o'&lt;/code&gt; podr&amp;iacute;a dar</target>
        </trans-unit>
        <trans-unit id="687851312bf05d13456ec79c098b24da9ffe5635" translate="yes" xml:space="preserve">
          <source>For example, GCC warns about &lt;code&gt;i&lt;/code&gt; being uninitialized in the following snippet only when</source>
          <target state="translated">Por ejemplo, GCC advierte de &lt;code&gt;i&lt;/code&gt; est&amp;aacute; sin inicializar en el siguiente fragmento s&amp;oacute;lo cuando</target>
        </trans-unit>
        <trans-unit id="481bf59d3e774632a4ae291477b6e304f7e4939c" translate="yes" xml:space="preserve">
          <source>For example, a bounded case of &lt;code&gt;alloca&lt;/code&gt; could be:</source>
          <target state="translated">Por ejemplo, un caso limitado de &lt;code&gt;alloca&lt;/code&gt; podr&amp;iacute;a ser:</target>
        </trans-unit>
        <trans-unit id="b71521cff46dbe352ddadd34594ed3081919fa62" translate="yes" xml:space="preserve">
          <source>For example, a method with no arguments and returning &lt;code&gt;int&lt;/code&gt; would have the signature &lt;code&gt;i8@0:4&lt;/code&gt; if the size of a pointer is 4. The signature is interpreted as follows: the &lt;code&gt;i&lt;/code&gt; is the return type (an &lt;code&gt;int&lt;/code&gt;), the &lt;code&gt;8&lt;/code&gt; is the total size of the parameters in bytes (two pointers each of size 4), the &lt;code&gt;@0&lt;/code&gt; is the first parameter (an object at byte offset &lt;code&gt;0&lt;/code&gt;) and &lt;code&gt;:4&lt;/code&gt; is the second parameter (a &lt;code&gt;SEL&lt;/code&gt; at byte offset &lt;code&gt;4&lt;/code&gt;).</source>
          <target state="translated">Por ejemplo, un m&amp;eacute;todo sin argumentos y devolviendo &lt;code&gt;int&lt;/code&gt; tendr&amp;iacute;a la firma &lt;code&gt;i8@0:4&lt;/code&gt; si el tama&amp;ntilde;o de un puntero es 4. La firma se interpreta de la siguiente manera: la &lt;code&gt;i&lt;/code&gt; es el tipo de retorno (un &lt;code&gt;int&lt;/code&gt; ), el &lt;code&gt;8&lt;/code&gt; es el tama&amp;ntilde;o total de los par&amp;aacute;metros en bytes (dos punteros cada uno de tama&amp;ntilde;o 4), &lt;code&gt;@0&lt;/code&gt; es el primer par&amp;aacute;metro (un objeto en el byte offset &lt;code&gt;0&lt;/code&gt; ) y &lt;code&gt;:4&lt;/code&gt; es el segundo par&amp;aacute;metro (un &lt;code&gt;SEL&lt;/code&gt; en el byte offset &lt;code&gt;4&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="68ba042328cca36e153d2c8dab7d8879565e3845" translate="yes" xml:space="preserve">
          <source>For example, a program may use a function &lt;code&gt;strfunc&lt;/code&gt; that returns &lt;code&gt;string&lt;/code&gt; objects, and another function &lt;code&gt;charfunc&lt;/code&gt; that operates on pointers to &lt;code&gt;char&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, un programa puede usar una funci&amp;oacute;n &lt;code&gt;strfunc&lt;/code&gt; que devuelve objetos de &lt;code&gt;string&lt;/code&gt; y otra funci&amp;oacute;n &lt;code&gt;charfunc&lt;/code&gt; que opera con punteros a &lt;code&gt;char&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88bf56d21a567365b50f7c0d1260f3e77c253d14" translate="yes" xml:space="preserve">
          <source>For example, a spec string like this:</source>
          <target state="translated">Por ejemplo,una cadena de especificaciones como esta:</target>
        </trans-unit>
        <trans-unit id="9636aa78a9470d85d5322503884f630474bbcbd8" translate="yes" xml:space="preserve">
          <source>For example, an address which is constant is offsettable; so is an address that is the sum of a register and a constant (as long as a slightly larger constant is also within the range of address-offsets supported by the machine); but an autoincrement or autodecrement address is not offsettable. More complicated indirect/indexed addresses may or may not be offsettable depending on the other addressing modes that the machine supports.</source>
          <target state="translated">Por ejemplo,una dirección que es constante es compensable;también lo es una dirección que es la suma de un registro y una constante (siempre que una constante ligeramente mayor esté también dentro del rango de compensaciones de dirección soportadas por la máquina);pero una dirección de autoincremento o autodecrecimiento no es compensable.Las direcciones indirectas/indexadas más complicadas pueden o no ser compensables dependiendo de los otros modos de direccionamiento que la máquina soporta.</target>
        </trans-unit>
        <trans-unit id="bb39fad998b5526c7cd037c77aee5706a45b5058" translate="yes" xml:space="preserve">
          <source>For example, by default a structure containing nothing but 8 &lt;code&gt;unsigned&lt;/code&gt; bit-fields of length 1 is aligned to a 4-byte boundary and has a size of 4 bytes. By using</source>
          <target state="translated">Por ejemplo, de forma predeterminada, una estructura que contiene nada m&amp;aacute;s que 8 campos de bits &lt;code&gt;unsigned&lt;/code&gt; de longitud 1 se alinea con un l&amp;iacute;mite de 4 bytes y tiene un tama&amp;ntilde;o de 4 bytes. Mediante el uso</target>
        </trans-unit>
        <trans-unit id="44c92e45a35c2e3631a1416540d7623d393688e2" translate="yes" xml:space="preserve">
          <source>For example, code using the standard ISA encoding cannot jump directly to MIPS16 or microMIPS code; it must either use a call or an indirect jump.</source>
          <target state="translated">Por ejemplo,el código que utiliza la codificación estándar ISA no puede saltar directamente al código MIPS16 o microMIPS;debe utilizar una llamada o un salto indirecto.</target>
        </trans-unit>
        <trans-unit id="6d3c95f985f19da9d6dbc1a830c9da53b0e26416" translate="yes" xml:space="preserve">
          <source>For example, given this C source file:</source>
          <target state="translated">Por ejemplo,dado este archivo de fuente C:</target>
        </trans-unit>
        <trans-unit id="f0defbb763ebb18b66cf3162b2b446b84c5034e8" translate="yes" xml:space="preserve">
          <source>For example, if an x86 compiler supports two dialects (&amp;lsquo;</source>
          <target state="translated">Por ejemplo, si un compilador x86 admite dos dialectos ('</target>
        </trans-unit>
        <trans-unit id="9b3c7e9c23ebc44c980aef19936a5699e234861d" translate="yes" xml:space="preserve">
          <source>For example, if the object file</source>
          <target state="translated">Por ejemplo,si el archivo del objeto</target>
        </trans-unit>
        <trans-unit id="6277fc8469340ab02cc75749b9fdf00e3b3028a6" translate="yes" xml:space="preserve">
          <source>For example, if the target machine requires a &lt;code&gt;double&lt;/code&gt; value to be aligned on an 8-byte boundary, then &lt;code&gt;__alignof__ (double)&lt;/code&gt; is 8. This is true on many RISC machines. On more traditional machine designs, &lt;code&gt;__alignof__ (double)&lt;/code&gt; is 4 or even 2.</source>
          <target state="translated">Por ejemplo, si la m&amp;aacute;quina de destino requiere que se alinee un valor &lt;code&gt;double&lt;/code&gt; en un l&amp;iacute;mite de 8 bytes, entonces &lt;code&gt;__alignof__ (double)&lt;/code&gt; es 8. Esto es cierto en muchas m&amp;aacute;quinas RISC. En dise&amp;ntilde;os de m&amp;aacute;quinas m&amp;aacute;s tradicionales, &lt;code&gt;__alignof__ (double)&lt;/code&gt; es 4 o incluso 2.</target>
        </trans-unit>
        <trans-unit id="ace71a372dd9faf87968abc19f07a8c712084e3c" translate="yes" xml:space="preserve">
          <source>For example, in the following function the call to &lt;code&gt;g&lt;/code&gt; is unsafe because when &lt;code&gt;overalign&lt;/code&gt; is non-zero, the space allocated by &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; may have been released at the end of the &lt;code&gt;if&lt;/code&gt; statement in which it was called.</source>
          <target state="translated">Por ejemplo, en la siguiente funci&amp;oacute;n, la llamada &lt;code&gt;g&lt;/code&gt; no es segura porque cuando &lt;code&gt;overalign&lt;/code&gt; no es cero, el espacio asignado por &lt;code&gt;__builtin_alloca_with_align&lt;/code&gt; puede haberse liberado al final de la instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; en la que se llam&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="b982bcc761519bf794d14c5f76ed85a5c03967e1" translate="yes" xml:space="preserve">
          <source>For example, in the following, each call to function &lt;code&gt;foo&lt;/code&gt; will print a line similar to &lt;code&gt;&quot;file.c:123: foo: message&quot;&lt;/code&gt; with the name of the file and the line number of the &lt;code&gt;printf&lt;/code&gt; call, the name of the function &lt;code&gt;foo&lt;/code&gt;, followed by the word &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, en lo siguiente, cada llamada a la funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; imprimir&amp;aacute; una l&amp;iacute;nea similar a &lt;code&gt;&quot;file.c:123: foo: message&quot;&lt;/code&gt; con el nombre del archivo y el n&amp;uacute;mero de l&amp;iacute;nea de la llamada &lt;code&gt;printf&lt;/code&gt; , el nombre de la funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; , seguido de la palabra &lt;code&gt;message&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55f28e4d67f6e114f470b97bac400ac0e25f6328" translate="yes" xml:space="preserve">
          <source>For example, on the 68000 in a fullword instruction it is possible to use an immediate operand; but if the immediate value is between -128 and 127, better code results from loading the value into a register and using the register. This is because the load into the register can be done with a &amp;lsquo;</source>
          <target state="translated">Por ejemplo, en el 68000 en una instrucci&amp;oacute;n de palabra completa es posible utilizar un operando inmediato; pero si el valor inmediato est&amp;aacute; entre -128 y 127, se obtiene un mejor c&amp;oacute;digo al cargar el valor en un registro y usar el registro. Esto se debe a que la carga en el registro se puede hacer con un '</target>
        </trans-unit>
        <trans-unit id="2f76b920d411b7e136fa4f9061e5e0a37ad6c0c4" translate="yes" xml:space="preserve">
          <source>For example, since the declaration of the primary function template below makes use of both attribute &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;alloc_size&lt;/code&gt; the declaration of the explicit specialization of the template is diagnosed because it is missing one of the attributes.</source>
          <target state="translated">Por ejemplo, dado que la declaraci&amp;oacute;n de la plantilla de funci&amp;oacute;n principal a continuaci&amp;oacute;n hace uso del atributo &lt;code&gt;malloc&lt;/code&gt; y &lt;code&gt;alloc_size&lt;/code&gt; ,se diagnostica la declaraci&amp;oacute;n de la especializaci&amp;oacute;n expl&amp;iacute;cita de la plantilla porque falta uno de los atributos.</target>
        </trans-unit>
        <trans-unit id="c1b19cb164dc1a4ab8a759ac490b8fde220e9c5e" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;struct A&lt;/code&gt; below is defined in some third party library header to have the alignment requirement &lt;code&gt;N&lt;/code&gt; and to force a warning whenever a variable of the type is not so aligned due to attribute &lt;code&gt;packed&lt;/code&gt;. Specifying the &lt;code&gt;copy&lt;/code&gt; attribute on the definition on the unrelated &lt;code&gt;struct B&lt;/code&gt; has the effect of copying all relevant attributes from the type referenced by the pointer expression to &lt;code&gt;struct B&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, suponga que la &lt;code&gt;struct A&lt;/code&gt; continuaci&amp;oacute;n se define en alg&amp;uacute;n encabezado de biblioteca de terceros para tener el requisito de alineaci&amp;oacute;n &lt;code&gt;N&lt;/code&gt; y forzar una advertencia siempre que una variable del tipo no est&amp;eacute; tan alineada debido al atributo &lt;code&gt;packed&lt;/code&gt; . Especificaci&amp;oacute;n de la &lt;code&gt;copy&lt;/code&gt; atributo en la definici&amp;oacute;n de la relaci&amp;oacute;n &lt;code&gt;struct B&lt;/code&gt; tiene el efecto de copiar todos los atributos relevantes del tipo al que hace referencia la expresi&amp;oacute;n puntero a &lt;code&gt;struct B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0be048f3761817dd96f745d3c57100422574646" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;sprintf&lt;/code&gt; function on SunOS 4.1.3 returns &lt;code&gt;char *&lt;/code&gt; while the C standard says that &lt;code&gt;sprintf&lt;/code&gt; returns an &lt;code&gt;int&lt;/code&gt;. The &lt;code&gt;fixincludes&lt;/code&gt; program could make the prototype for this function match the Standard, but that would be wrong, since the function will still return &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, la funci&amp;oacute;n &lt;code&gt;sprintf&lt;/code&gt; en SunOS 4.1.3 devuelve &lt;code&gt;char *&lt;/code&gt; mientras que el est&amp;aacute;ndar C dice que &lt;code&gt;sprintf&lt;/code&gt; devuelve un &lt;code&gt;int&lt;/code&gt; . El programa &lt;code&gt;fixincludes&lt;/code&gt; podr&amp;iacute;a hacer que el prototipo de esta funci&amp;oacute;n coincida con el est&amp;aacute;ndar, pero eso ser&amp;iacute;a incorrecto, ya que la funci&amp;oacute;n a&amp;uacute;n devolver&amp;aacute; &lt;code&gt;char *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd82a792fa22143d94897d2b758fc399175bbe0e" translate="yes" xml:space="preserve">
          <source>For example, the &lt;var&gt;StrongAlias&lt;/var&gt; macro below makes use of the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;copy&lt;/code&gt; attributes to define an alias named &lt;var&gt;alloc&lt;/var&gt; for function &lt;var&gt;allocate&lt;/var&gt; declared with attributes &lt;var&gt;alloc_size&lt;/var&gt;, &lt;var&gt;malloc&lt;/var&gt;, and &lt;var&gt;nothrow&lt;/var&gt;. Thanks to the &lt;code&gt;__typeof__&lt;/code&gt; operator the alias has the same type as the target function. As a result of the &lt;code&gt;copy&lt;/code&gt; attribute the alias also shares the same attributes as the target.</source>
          <target state="translated">Por ejemplo, la macro &lt;var&gt;StrongAlias&lt;/var&gt; ​​a continuaci&amp;oacute;n hace uso de los atributos de &lt;code&gt;alias&lt;/code&gt; y &lt;code&gt;copy&lt;/code&gt; para definir un alias llamado &lt;var&gt;alloc&lt;/var&gt; para la funci&amp;oacute;n &lt;var&gt;allocate&lt;/var&gt; declarada con atributos &lt;var&gt;alloc_size&lt;/var&gt; , &lt;var&gt;malloc&lt;/var&gt; y &lt;var&gt;nothrow&lt;/var&gt; . Gracias al operador &lt;code&gt;__typeof__&lt;/code&gt; , el alias tiene el mismo tipo que la funci&amp;oacute;n de destino. Como resultado del atributo de &lt;code&gt;copy&lt;/code&gt; el alias tambi&amp;eacute;n comparte los mismos atributos que el destino.</target>
        </trans-unit>
        <trans-unit id="5df659eda3281e74be2356574e1b1c1a2ec73bd0" translate="yes" xml:space="preserve">
          <source>For example, the call to &lt;code&gt;memset&lt;/code&gt; below is diagnosed by the warning because the function expects a value of type &lt;code&gt;size_t&lt;/code&gt; as its argument but the type of &lt;code&gt;32&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt;. With</source>
          <target state="translated">Por ejemplo, la llamada a &lt;code&gt;memset&lt;/code&gt; a continuaci&amp;oacute;n se diagnostica mediante la advertencia porque la funci&amp;oacute;n espera un valor de tipo &lt;code&gt;size_t&lt;/code&gt; como argumento, pero el tipo de &lt;code&gt;32&lt;/code&gt; es &lt;code&gt;int&lt;/code&gt; . Con</target>
        </trans-unit>
        <trans-unit id="aa585d900b6a1decabca1b2daabff17e2775d789" translate="yes" xml:space="preserve">
          <source>For example, the compiler can only unconditionally vectorize the following loop with the pragma:</source>
          <target state="translated">Por ejemplo,el compilador sólo puede vectorizar incondicionalmente el siguiente bucle con el pragma:</target>
        </trans-unit>
        <trans-unit id="46fb01ed368f209c80511e7fc1fb91adc3f606e1" translate="yes" xml:space="preserve">
          <source>For example, the declaration of &lt;code&gt;struct Object&lt;/code&gt; in the argument list of &lt;code&gt;draw&lt;/code&gt; triggers the warning. To avoid it, either remove the redundant class-key &lt;code&gt;struct&lt;/code&gt; or replace it with &lt;code&gt;class&lt;/code&gt; to match its definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f069ed5ba8ea293548f32b787eaedf45bdbd11" translate="yes" xml:space="preserve">
          <source>For example, the declaration:</source>
          <target state="translated">Por ejemplo,la declaración:</target>
        </trans-unit>
        <trans-unit id="40a677ec7a2740cf56a10d8e5968835578281034" translate="yes" xml:space="preserve">
          <source>For example, the first two stores in function &lt;code&gt;bad&lt;/code&gt; are diagnosed because the array elements overlap the subsequent members &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;. The third store is diagnosed by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ea9d42bbb55f00657375149871784a78c15592" translate="yes" xml:space="preserve">
          <source>For example, the following function allocates eight objects of &lt;code&gt;n&lt;/code&gt; bytes each on the stack, storing a pointer to each in consecutive elements of the array &lt;code&gt;a&lt;/code&gt;. It then passes the array to function &lt;code&gt;g&lt;/code&gt; which can safely use the storage pointed to by each of the array elements.</source>
          <target state="translated">Por ejemplo, la siguiente funci&amp;oacute;n asigna ocho objetos de &lt;code&gt;n&lt;/code&gt; bytes cada uno en la pila, almacenando un puntero a cada uno en elementos consecutivos de la matriz &lt;code&gt;a&lt;/code&gt; . Luego pasa la matriz a la funci&amp;oacute;n &lt;code&gt;g&lt;/code&gt; , que puede usar de forma segura el almacenamiento al que apunta cada uno de los elementos de la matriz.</target>
        </trans-unit>
        <trans-unit id="46ff8877e2ba5b3ad38e512c93a9f9393792e49a" translate="yes" xml:space="preserve">
          <source>For example, the following macro can be used to portably check, at compile-time, whether or not adding two constant integers will overflow, and perform the addition only when it is known to be safe and not to trigger a</source>
          <target state="translated">Por ejemplo,la siguiente macro puede utilizarse para comprobar de forma portátil,en el momento de la compilación,si la adición de dos números enteros constantes se desbordará o no,y realizar la adición sólo cuando se sepa que es segura y que no desencadena una</target>
        </trans-unit>
        <trans-unit id="0a5e19a07f0f940d54dbc5e573ed269580925a99" translate="yes" xml:space="preserve">
          <source>For example, the following:</source>
          <target state="translated">Por ejemplo,lo siguiente:</target>
        </trans-unit>
        <trans-unit id="f3e3332c2d5e42f3076c20bce36d2593f9127ee9" translate="yes" xml:space="preserve">
          <source>For example, the implementation of the following function &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, la implementaci&amp;oacute;n de la siguiente funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e188aff9d720764d35dd90d13b53f0b69cd5a6e" translate="yes" xml:space="preserve">
          <source>For example, the intraprocedural example shown for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4fa7f73b59dbaab5c10c7cbf8d1067ea1077b7" translate="yes" xml:space="preserve">
          <source>For example, the same events as above might be printed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a4e8c7eb0a1fa15ef7a86f7ffb6699626c80d0" translate="yes" xml:space="preserve">
          <source>For example, this function has to be used in &lt;code&gt;ifunc&lt;/code&gt; resolvers that check for CPU type using the built-in functions &lt;code&gt;__builtin_cpu_is&lt;/code&gt; and &lt;code&gt;__builtin_cpu_supports&lt;/code&gt;, or in constructors on targets that don&amp;rsquo;t support constructor priority.</source>
          <target state="translated">Por ejemplo, esta funci&amp;oacute;n debe usarse en resolutores &lt;code&gt;ifunc&lt;/code&gt; que verifican el tipo de CPU usando las funciones &lt;code&gt;__builtin_cpu_is&lt;/code&gt; y &lt;code&gt;__builtin_cpu_supports&lt;/code&gt; , o en constructores en destinos que no admiten la prioridad de constructor.</target>
        </trans-unit>
        <trans-unit id="1dddf36660113e27ff669ff510c160e144321d93" translate="yes" xml:space="preserve">
          <source>For example, when the compiler encounters a method invocation such as &lt;code&gt;[object init]&lt;/code&gt;, it compiles it into a call to &lt;code&gt;objc_msg_lookup (object, @selector(init))&lt;/code&gt; followed by a cast of the returned value to the appropriate function pointer type, and then it calls it.</source>
          <target state="translated">Por ejemplo, cuando el compilador encuentra una invocaci&amp;oacute;n de m&amp;eacute;todo como &lt;code&gt;[object init]&lt;/code&gt; , lo compila en una llamada a &lt;code&gt;objc_msg_lookup (object, @selector(init))&lt;/code&gt; seguido de una conversi&amp;oacute;n del valor devuelto al tipo de puntero de funci&amp;oacute;n apropiado, y entonces lo llama.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="25bb7aced1792aec854f4198d7d0398ca1d4713d" translate="yes" xml:space="preserve">
          <source>For full documentation of the struct attributes please see the documentation in &lt;a href=&quot;variable-attributes#x86-Variable-Attributes&quot;&gt;x86 Variable Attributes&lt;/a&gt;.</source>
          <target state="translated">Para obtener la documentaci&amp;oacute;n completa de los atributos de estructura, consulte la documentaci&amp;oacute;n en &lt;a href=&quot;variable-attributes#x86-Variable-Attributes&quot;&gt;Atributos variables x86&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3dc81c80b4604ccbc276f437a5ccc2aaa2515f6c" translate="yes" xml:space="preserve">
          <source>For indirect calls to functions and computed goto, the linker generates &lt;em&gt;stubs&lt;/em&gt;. Stubs are jump pads sometimes also called &lt;em&gt;trampolines&lt;/em&gt;. Thus, the indirect call/jump jumps to such a stub. The stub contains a direct jump to the desired address.</source>
          <target state="translated">Para llamadas indirectas a funciones y goto calculado, el enlazador genera &lt;em&gt;stubs&lt;/em&gt; . Los topes son almohadillas para saltar a veces tambi&amp;eacute;n llamadas &lt;em&gt;trampolines&lt;/em&gt; . Por lo tanto, la llamada / salto indirecto salta a dicho tal&amp;oacute;n. El stub contiene un salto directo a la direcci&amp;oacute;n deseada.</target>
        </trans-unit>
        <trans-unit id="b91d6fa4ba31d00f68a512834bc7eb5f8c52df71" translate="yes" xml:space="preserve">
          <source>For information about the O64 ABI, see &lt;a href=&quot;http://gcc.gnu.org/projects/mipso64-abi.html&quot;&gt;http://gcc.gnu.org/projects/mipso64-abi.html&lt;/a&gt;.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n sobre O64 ABI, consulte &lt;a href=&quot;http://gcc.gnu.org/projects/mipso64-abi.html&quot;&gt;http://gcc.gnu.org/projects/mipso64-abi.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56ee49f1a1b16838ed8d136422788b22655be9ea" translate="yes" xml:space="preserve">
          <source>For input files in any language, generate corresponding Go declarations in &lt;var&gt;file&lt;/var&gt;. This generates Go &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; declarations which may be a useful way to start writing a Go interface to code written in some other language.</source>
          <target state="translated">Para archivos de entrada en cualquier idioma, genere las declaraciones de Go correspondientes en el &lt;var&gt;file&lt;/var&gt; . Esto genera declaraciones Go &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;var&lt;/code&gt; y &lt;code&gt;func&lt;/code&gt; que pueden ser una forma &amp;uacute;til de comenzar a escribir una interfaz Go en c&amp;oacute;digo escrito en alg&amp;uacute;n otro idioma.</target>
        </trans-unit>
        <trans-unit id="c8ce6c094048677a9f8423fec4581d4ef1bd1e5b" translate="yes" xml:space="preserve">
          <source>For instance</source>
          <target state="translated">Por ejemplo</target>
        </trans-unit>
        <trans-unit id="23b7041567e33cbc564ac905e83c0e92b5fee08b" translate="yes" xml:space="preserve">
          <source>For instance,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="a8e07e43db118dd56bbb97b1f96ccc89bac7f5fd" translate="yes" xml:space="preserve">
          <source>For instance, if the stack starts at absolute address &amp;lsquo;</source>
          <target state="translated">Por ejemplo, si la pila comienza en la direcci&amp;oacute;n absoluta '</target>
        </trans-unit>
        <trans-unit id="6abfd7e7f05346e1123b7bf2021cc93c61b8fbd5" translate="yes" xml:space="preserve">
          <source>For instance, if you have &lt;code&gt;#include &quot;all.h&quot;&lt;/code&gt;, and you have</source>
          <target state="translated">Por ejemplo, si tiene &lt;code&gt;#include &quot;all.h&quot;&lt;/code&gt; , y tiene</target>
        </trans-unit>
        <trans-unit id="5b9b6fe2256c52fcd89c847ec80034c7cbe3d49d" translate="yes" xml:space="preserve">
          <source>For instance, on an x86, you could compile a function with &lt;code&gt;target_clones(&quot;sse4.1,avx&quot;)&lt;/code&gt;. GCC creates two function clones, one compiled with</source>
          <target state="translated">Por ejemplo, en un x86, podr&amp;iacute;a compilar una funci&amp;oacute;n con &lt;code&gt;target_clones(&quot;sse4.1,avx&quot;)&lt;/code&gt; . GCC crea dos clones de funciones, uno compilado con</target>
        </trans-unit>
        <trans-unit id="175bbce2fc22d4ed1ec7614154a0e449231ccaf1" translate="yes" xml:space="preserve">
          <source>For instance, on an x86, you could declare one function with the &lt;code&gt;target(&quot;sse4.1,arch=core2&quot;)&lt;/code&gt; attribute and another with &lt;code&gt;target(&quot;sse4a,arch=amdfam10&quot;)&lt;/code&gt;. This is equivalent to compiling the first function with</source>
          <target state="translated">Por ejemplo, en un x86, podr&amp;iacute;a declarar una funci&amp;oacute;n con el &lt;code&gt;target(&quot;sse4.1,arch=core2&quot;)&lt;/code&gt; y otra con &lt;code&gt;target(&quot;sse4a,arch=amdfam10&quot;)&lt;/code&gt; . Esto es equivalente a compilar la primera funci&amp;oacute;n con</target>
        </trans-unit>
        <trans-unit id="60600b26a9fa03b6c3650e82a7d4514147301ef9" translate="yes" xml:space="preserve">
          <source>For instance, on the SB-1, if FP exceptions are disabled, and we are emitting 64-bit code, then we can use both FP pipes. Otherwise, we can only use one FP pipe.</source>
          <target state="translated">Por ejemplo,en el SB-1,si las excepciones de FP están desactivadas,y estamos emitiendo un código de 64 bits,entonces podemos usar ambos tubos de FP.De lo contrario,sólo podemos usar un tubo FP.</target>
        </trans-unit>
        <trans-unit id="4d64dcd6f25c2f8e61dbb8fbe7c56bdb2499ab6d" translate="yes" xml:space="preserve">
          <source>For instance, the following declarations</source>
          <target state="translated">Por ejemplo,las siguientes declaraciones</target>
        </trans-unit>
        <trans-unit id="fd17d596f35be2211443642e76ceab4e5f526b5c" translate="yes" xml:space="preserve">
          <source>For internal names, all characters are significant. For external names, the number of significant characters are defined by the linker; for almost all targets, all characters are significant.</source>
          <target state="translated">Para los nombres internos,todos los caracteres son significativos.Para los nombres externos,el número de caracteres significativos son definidos por el enlazador;para casi todos los objetivos,todos los caracteres son significativos.</target>
        </trans-unit>
        <trans-unit id="9f99386843936f29083f4368b21c1771def8a251" translate="yes" xml:space="preserve">
          <source>For library code, if you want the library to provide all of the template instantiations it needs, just try to link all of its object files together; the link will fail, but cause the instantiations to be generated as a side effect. Be warned, however, that this may cause conflicts if multiple libraries try to provide the same instantiations. For greater control, use explicit instantiation as described in the next option.</source>
          <target state="translated">Para el código de la biblioteca,si quieres que la biblioteca proporcione todas las instancias de plantillas que necesita,intenta enlazar todos sus archivos de objetos;el enlace fallará,pero hará que las instancias se generen como un efecto secundario.Sin embargo,tenga en cuenta que esto puede causar conflictos si varias bibliotecas intentan proporcionar las mismas instancias.Para un mayor control,utilice la instanciación explícita como se describe en la siguiente opción.</target>
        </trans-unit>
        <trans-unit id="275df5c8ab338eac0891dfd5fcb7ca333c414d1c" translate="yes" xml:space="preserve">
          <source>For machines that must pop arguments after a function call, always pop the arguments as soon as each function returns. At levels</source>
          <target state="translated">Para las máquinas que deben hacer saltar los argumentos después de una llamada a una función,siempre lo hacen tan pronto como vuelve cada función.En los niveles</target>
        </trans-unit>
        <trans-unit id="4ab62f1721d989066bd88fccf2cddf5cca6c289c" translate="yes" xml:space="preserve">
          <source>For more information concerning the history of Objective-C that is available online, see &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la historia de Objective-C que est&amp;aacute; disponible en l&amp;iacute;nea, consulte &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af9da95259f3bd0345f2ca30bdb8d3f07bd5caf4" translate="yes" xml:space="preserve">
          <source>For more information on GCC&amp;rsquo;s support for transactional memory, See &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-10.2.0/libitm/Enabling-libitm.html#Enabling-libitm&quot;&gt;The GNU Transactional Memory Library&lt;/a&gt; in GNU Transactional Memory Library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445882425cb6a5526123dcb90201317cd797b812" translate="yes" xml:space="preserve">
          <source>For more information on GCC&amp;rsquo;s support for transactional memory, See &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/libitm/Enabling-libitm.html#Enabling-libitm&quot;&gt;The GNU Transactional Memory Library&lt;/a&gt; in GNU Transactional Memory Library.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el soporte de GCC para la memoria transaccional, consulte &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/libitm/Enabling-libitm.html#Enabling-libitm&quot;&gt;La biblioteca&lt;/a&gt; de memoria transaccional de GNU en la biblioteca de memoria transaccional de GNU.</target>
        </trans-unit>
        <trans-unit id="530d01e06da63e3ae60755b1d0e0664f37ce4c56" translate="yes" xml:space="preserve">
          <source>For profile-directed optimizations, compile the source files again with the same optimization and code generation options plus</source>
          <target state="translated">Para las optimizaciones dirigidas al perfil,compilar los archivos de origen de nuevo con las mismas opciones de optimización y generación de código,además de</target>
        </trans-unit>
        <trans-unit id="1552bee1f905030b453e9bc73123ec457682d5d2" translate="yes" xml:space="preserve">
          <source>For references to Technical Corrigenda, Rationale documents and information concerning the history of C that is available online, see &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</source>
          <target state="translated">Para obtener referencias a los documentos de correcci&amp;oacute;n t&amp;eacute;cnica, fundamentos e informaci&amp;oacute;n sobre la historia de C que est&amp;aacute; disponible en l&amp;iacute;nea, consulte &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98fa91b9c573243f46d98173cb5c6bc69a14f37e" translate="yes" xml:space="preserve">
          <source>For run-time identification, the starting addresses of these areas, which correspond to their respective function entries minus &lt;var&gt;M&lt;/var&gt;, are additionally collected in the &lt;code&gt;__patchable_function_entries&lt;/code&gt; section of the resulting binary.</source>
          <target state="translated">Para la identificaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n, las direcciones de inicio de estas &amp;aacute;reas, que corresponden a sus respectivas entradas de funci&amp;oacute;n menos &lt;var&gt;M&lt;/var&gt; , se recopilan adicionalmente en la secci&amp;oacute;n &lt;code&gt;__patchable_function_entries&lt;/code&gt; del binario resultante.</target>
        </trans-unit>
        <trans-unit id="ee4662af110f3d316db91e4c9bf088b26f37f6fc" translate="yes" xml:space="preserve">
          <source>For single-precision floating-point comparisons, emit an &lt;code&gt;fsub&lt;/code&gt; instruction and test the flags. This is faster than a software comparison, but can get incorrect results in the presence of NaNs, or when two different small numbers are compared such that their difference is calculated as zero. The default is</source>
          <target state="translated">Para comparaciones de punto flotante de precisi&amp;oacute;n simple, emita una instrucci&amp;oacute;n &lt;code&gt;fsub&lt;/code&gt; y pruebe los indicadores. Esto es m&amp;aacute;s r&amp;aacute;pido que una comparaci&amp;oacute;n de software, pero puede obtener resultados incorrectos en presencia de NaN, o cuando se comparan dos n&amp;uacute;meros peque&amp;ntilde;os diferentes de manera que su diferencia se calcula como cero. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="629fb7062147649cb1707cc8cbe18549c87c4fce" translate="yes" xml:space="preserve">
          <source>For some target machines, GCC supports additional options to the format attribute (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaring Attributes of Functions&lt;/a&gt;).</source>
          <target state="translated">Para algunas m&amp;aacute;quinas de destino, GCC admite opciones adicionales para el atributo de formato (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaraci&amp;oacute;n de atributos de funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f693ccd95fd0352057c89a84d6dca28111b1d8d" translate="yes" xml:space="preserve">
          <source>For some targets, a suffix is added to the root directory specified with</source>
          <target state="translated">Para algunos objetivos,se añade un sufijo al directorio raíz especificado con</target>
        </trans-unit>
        <trans-unit id="1eef11d2e0af6679534eba00e39380a79330c652" translate="yes" xml:space="preserve">
          <source>For string operations of unknown size, use run-time checks with inline code for small blocks and a library call for large blocks.</source>
          <target state="translated">Para operaciones de cadena de tamaño desconocido,utilice comprobaciones en tiempo de ejecución con código en línea para bloques pequeños y una llamada de biblioteca para bloques grandes.</target>
        </trans-unit>
        <trans-unit id="c54c726dd72dd80b773414b86e870a30d193ec02" translate="yes" xml:space="preserve">
          <source>For systems that use the GNU C Library, the default is on.</source>
          <target state="translated">Para los sistemas que usan la Biblioteca C de GNU,el valor por defecto es on.</target>
        </trans-unit>
        <trans-unit id="90889da6f3749d2d8e7f525edbcff60563fc34f5" translate="yes" xml:space="preserve">
          <source>For targets that do not support either COMDAT or weak symbols, most entities with vague linkage are emitted as local symbols to avoid duplicate definition errors from the linker. This does not happen for local statics in inlines, however, as having multiple copies almost certainly breaks things.</source>
          <target state="translated">En el caso de los objetivos que no admiten ni COMDAT ni símbolos débiles,la mayoría de las entidades con vinculación vaga se emiten como símbolos locales para evitar errores de definición duplicados por parte del vinculador.Sin embargo,esto no sucede en el caso de la estática local en líneas,ya que tener múltiples copias casi seguro que rompe las cosas.</target>
        </trans-unit>
        <trans-unit id="db393fbd5a98ab60023bfd22b5dbbadca9023150" translate="yes" xml:space="preserve">
          <source>For targets that normally need trampolines for nested functions, always generate them instead of using descriptors. Otherwise, for targets that do not need them, like for example HP-PA or IA-64, do nothing.</source>
          <target state="translated">Para los objetivos que normalmente necesitan camas elásticas para funciones anidadas,siempre las generan en lugar de utilizar descriptores.De lo contrario,para los objetivos que no los necesitan,como por ejemplo HP-PA o IA-64,no hacer nada.</target>
        </trans-unit>
        <trans-unit id="3a882a0a0f801f0c1cb983c784834a8c5870b59e" translate="yes" xml:space="preserve">
          <source>For targets, like GNU/Linux, where all user-mode Xtensa code must be position-independent code (PIC), this option disables PIC for compiling kernel code.</source>
          <target state="translated">Para objetivos como GNU/Linux,donde todo el código de Xtensa en modo de usuario debe ser código independiente de la posición (PIC),esta opción desactiva el PIC para compilar el código del núcleo.</target>
        </trans-unit>
        <trans-unit id="8b8c7be3bb5a9384ba78f18abd2ee5fc45978a5a" translate="yes" xml:space="preserve">
          <source>For test coverage analysis, use &lt;code&gt;gcov&lt;/code&gt; to produce human readable information from the</source>
          <target state="translated">Para el an&amp;aacute;lisis de cobertura de prueba, utilice &lt;code&gt;gcov&lt;/code&gt; para producir informaci&amp;oacute;n legible por humanos a partir del</target>
        </trans-unit>
        <trans-unit id="cdf3f70fc86ab5862691992f6df51e7ca5f5489e" translate="yes" xml:space="preserve">
          <source>For the NeXT runtime with version 2 of the ABI, check for a nil receiver in method invocations before doing the actual method call. This is the default and can be disabled using</source>
          <target state="translated">Para el tiempo de ejecución de NeXT con la versión 2 de la ABI,compruebe si hay un receptor nulo en las invocaciones de métodos antes de hacer la llamada de método real.Este es el valor por defecto y puede ser desactivado usando</target>
        </trans-unit>
        <trans-unit id="96b6c6242e369e6ead381c1d4d982f9072cadf3b" translate="yes" xml:space="preserve">
          <source>For the named functions, the compiler adds code to disable interrupts for the duration of those functions. If any functions so named are not encountered in the source, a warning is emitted that the pragma is not used. Examples:</source>
          <target state="translated">Para las funciones nombradas,el compilador agrega un código para desactivar las interrupciones durante la duración de esas funciones.Si alguna de las funciones así nombradas no se encuentra en la fuente,se emite una advertencia de que la pragmática no se utiliza.Ejemplos:</target>
        </trans-unit>
        <trans-unit id="b4ae72d8349f09925e7db4912a4034594f70873f" translate="yes" xml:space="preserve">
          <source>For the named functions, the compiler always uses a register-indirect call model when calling the named functions. Examples:</source>
          <target state="translated">Para las funciones nombradas,el compilador siempre usa un modelo de llamada de registro-indirecta cuando llama a las funciones nombradas.Ejemplos:</target>
        </trans-unit>
        <trans-unit id="b9c34f2bc66483d538061a0df9fde1756b31b97d" translate="yes" xml:space="preserve">
          <source>For the purposes of branch prediction optimizations, the probability that a &lt;code&gt;__builtin_expect&lt;/code&gt; expression is &lt;code&gt;true&lt;/code&gt; is controlled by GCC&amp;rsquo;s &lt;code&gt;builtin-expect-probability&lt;/code&gt; parameter, which defaults to 90%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f569d15217aa1a086b40826e8ecc6305b091d9b" translate="yes" xml:space="preserve">
          <source>For the purposes of branch prediction optimizations, the probability that a &lt;code&gt;__builtin_expect&lt;/code&gt; expression is &lt;code&gt;true&lt;/code&gt; is controlled by GCC&amp;rsquo;s &lt;code&gt;builtin-expect-probability&lt;/code&gt; parameter, which defaults to 90%. You can also use &lt;code&gt;__builtin_expect_with_probability&lt;/code&gt; to explicitly assign a probability value to individual expressions.</source>
          <target state="translated">A los efectos de las optimizaciones de predicci&amp;oacute;n de bifurcaciones, la probabilidad de que una expresi&amp;oacute;n &lt;code&gt;__builtin_expect&lt;/code&gt; sea &lt;code&gt;true&lt;/code&gt; est&amp;aacute; controlada por el par&amp;aacute;metro de &lt;code&gt;builtin-expect-probability&lt;/code&gt; GCC , que tiene un valor predeterminado del 90%. Tambi&amp;eacute;n puede usar &lt;code&gt;__builtin_expect_with_probability&lt;/code&gt; para asignar expl&amp;iacute;citamente un valor de probabilidad a expresiones individuales.</target>
        </trans-unit>
        <trans-unit id="bf219c0d4bab1b7372e20c5005cc97b0b9e1bb77" translate="yes" xml:space="preserve">
          <source>For the quote form of the include directive, the directories specified by</source>
          <target state="translated">Para la forma de cita de la directiva include,los directorios especificados por</target>
        </trans-unit>
        <trans-unit id="754ebda73d52810694ef0086a8c959916039f5fd" translate="yes" xml:space="preserve">
          <source>For the quote form of the include directive, the directory of the current file is searched first.</source>
          <target state="translated">Para la forma de cita de la directiva include,se busca primero en el directorio del archivo actual.</target>
        </trans-unit>
        <trans-unit id="1d70b004544bcb6341f32cbd058f337db34bac6c" translate="yes" xml:space="preserve">
          <source>For the x86-32 compiler, you must use</source>
          <target state="translated">Para el compilador x86-32,debes usar</target>
        </trans-unit>
        <trans-unit id="9e1a32426c586349d0aa1e4bc4474f828e773b55" translate="yes" xml:space="preserve">
          <source>For those adding visibility support to existing code, you may find &lt;code&gt;#pragma GCC visibility&lt;/code&gt; of use. This works by you enclosing the declarations you wish to set visibility for with (for example) &lt;code&gt;#pragma GCC visibility push(hidden)&lt;/code&gt; and &lt;code&gt;#pragma GCC visibility pop&lt;/code&gt;. Bear in mind that symbol visibility should be viewed &lt;strong&gt;as part of the API interface contract&lt;/strong&gt; and thus all new code should always specify visibility when it is not the default; i.e., declarations only for use within the local DSO should &lt;strong&gt;always&lt;/strong&gt; be marked explicitly as hidden as so to avoid PLT indirection overheads&amp;mdash;making this abundantly clear also aids readability and self-documentation of the code. Note that due to ISO C++ specification requirements, &lt;code&gt;operator new&lt;/code&gt; and &lt;code&gt;operator delete&lt;/code&gt; must always be of default visibility.</source>
          <target state="translated">Para aquellos que agregan soporte de visibilidad al c&amp;oacute;digo existente, puede encontrar la &lt;code&gt;#pragma GCC visibility&lt;/code&gt; de uso de #pragma GCC . Esto funciona adjuntando las declaraciones para las que desea establecer la visibilidad con (por ejemplo) &lt;code&gt;#pragma GCC visibility push(hidden)&lt;/code&gt; y &lt;code&gt;#pragma GCC visibility pop&lt;/code&gt; . Tenga en cuenta que la visibilidad de los s&amp;iacute;mbolos debe verse &lt;strong&gt;como parte del contrato de la interfaz API&lt;/strong&gt; y, por lo tanto, todo el c&amp;oacute;digo nuevo siempre debe especificar la visibilidad cuando no es el predeterminado; es decir, las declaraciones solo para uso dentro del DSO local &lt;strong&gt;siempre&lt;/strong&gt; deben marcarse expl&amp;iacute;citamente como ocultas para evitar sobrecargas indirectas de PLT; dejar esto muy claro tambi&amp;eacute;n ayuda a la legibilidad y auto-documentaci&amp;oacute;n del c&amp;oacute;digo. Tenga en cuenta que debido a los requisitos de la especificaci&amp;oacute;n ISO C ++, &lt;code&gt;operator new&lt;/code&gt; y &lt;code&gt;operator delete&lt;/code&gt; siempre deben tener la visibilidad predeterminada.</target>
        </trans-unit>
        <trans-unit id="bb6de8937de1ff830849ca65a0b4291fa1ceadf7" translate="yes" xml:space="preserve">
          <source>Force (do not force) generated code to have a single exit point in each function.</source>
          <target state="translated">Forzar (no forzar)el código generado para tener un único punto de salida en cada función.</target>
        </trans-unit>
        <trans-unit id="acd5ffdf657527d019579abefcb2cc6ad1c27289" translate="yes" xml:space="preserve">
          <source>Force (do not force) the use of &lt;code&gt;memcpy&lt;/code&gt; for non-trivial block moves. The default is</source>
          <target state="translated">Forzar (no forzar) el uso de &lt;code&gt;memcpy&lt;/code&gt; para movimientos de bloques no triviales. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="f35628fb15f3c423c03af2c93b844cb43e594383" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;long&lt;/code&gt; types to be 64 bits wide. See</source>
          <target state="translated">Obligue a &lt;code&gt;long&lt;/code&gt; tipos largos a tener 64 bits de ancho. Ver</target>
        </trans-unit>
        <trans-unit id="df341c9e8e9829ab23b420935fbc32e82bb7a353" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, and pointer types to be 32 bits wide.</source>
          <target state="translated">Forzar los tipos &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; y pointer a tener 32 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="a65d4b81903833686ba857ca6166053cb9c8d543" translate="yes" xml:space="preserve">
          <source>Force GCC to assign view numbers internally, if</source>
          <target state="translated">Forzar a GCC a asignar números de vista internamente,si</target>
        </trans-unit>
        <trans-unit id="5c6c2109c0abfbfad2c57ae80b233af1137f54d6" translate="yes" xml:space="preserve">
          <source>Force GCC to generate DWARF2+ line number tables internally, if DWARF2+ line number tables are to be generated.</source>
          <target state="translated">Forzar a GCC a generar internamente tablas de números de línea DWARF2+,si se van a generar tablas de números de línea DWARF2+.</target>
        </trans-unit>
        <trans-unit id="e05ff97a2114aff3fe8702e99f968b0b9b270faf" translate="yes" xml:space="preserve">
          <source>Force all calls to functions to be indirect. This is useful when using Intel Processor Trace where it generates more precise timing information for function calls.</source>
          <target state="translated">Forzar que todas las llamadas a funciones sean indirectas.Esto es útil cuando se utiliza el procesador Intel Trace,que genera información de tiempo más precisa para las llamadas a las funciones.</target>
        </trans-unit>
        <trans-unit id="c6aa1876252f253f5c49c98017976af7ef3a9f80" translate="yes" xml:space="preserve">
          <source>Force all functions to be aligned to a 4-byte boundary.</source>
          <target state="translated">Forzar que todas las funciones se alineen a un límite de 4 bytes.</target>
        </trans-unit>
        <trans-unit id="5376700e1a5ed02b4facb60bd51b070a514bbd9d" translate="yes" xml:space="preserve">
          <source>Force all load and store instructions to always bypass cache by using I/O variants of the instructions. The default is not to bypass the cache.</source>
          <target state="translated">Forzar todas las instrucciones de carga y almacenamiento para que siempre puenteen la memoria caché utilizando variantes de E/S de las instrucciones.El valor por defecto es no puentear la caché.</target>
        </trans-unit>
        <trans-unit id="6ba14189273ea29b59425c68e227901a2b9a86ef" translate="yes" xml:space="preserve">
          <source>Force assembly output to always use hex constants. Normally such constants are signed decimals, but this option is available for testsuite and/or aesthetic purposes.</source>
          <target state="translated">Forzar la salida del ensamblaje para usar siempre constantes hexagonales.Normalmente tales constantes son decimales firmados,pero esta opción está disponible para fines de tests y/o estéticos.</target>
        </trans-unit>
        <trans-unit id="a09ed1d5a3164af1580e37f843c9d03a7f3d9584" translate="yes" xml:space="preserve">
          <source>Force code generation in the ARM (A32) ISA.</source>
          <target state="translated">Generación de código de fuerza en el ARM (A32)ISA.</target>
        </trans-unit>
        <trans-unit id="8cf31b1c6efcebcf276d6ea54117f6f86a1ab3b3" translate="yes" xml:space="preserve">
          <source>Force code generation in the Thumb (T16/T32) ISA, depending on the architecture level.</source>
          <target state="translated">Generación de código de fuerza en el Pulgar (T16/T32)ISA,dependiendo del nivel de arquitectura.</target>
        </trans-unit>
        <trans-unit id="57fc3d2f95e9a264681cfb6c086d3f11381e6d22" translate="yes" xml:space="preserve">
          <source>Force indirect call and jump via register.</source>
          <target state="translated">Forzar la llamada indirecta y el salto a través del registro.</target>
        </trans-unit>
        <trans-unit id="c2234a2c2c6fa572bb9aaff40c528a12cc4c9fff" translate="yes" xml:space="preserve">
          <source>Force the usage of delay slots for conditional branches, which stuffs the delay slot with a &lt;code&gt;nop&lt;/code&gt; if a suitable instruction cannot be found. By default this option is disabled. It can be enabled to work around hardware bugs as found in the original SH7055.</source>
          <target state="translated">Forzar el uso de ranuras de retardo para ramas condicionales, lo que llena la ranura de retardo con un &lt;code&gt;nop&lt;/code&gt; si no se puede encontrar una instrucci&amp;oacute;n adecuada. Por defecto, esta opci&amp;oacute;n est&amp;aacute; desactivada. Se puede habilitar para solucionar los errores de hardware que se encuentran en el SH7055 original.</target>
        </trans-unit>
        <trans-unit id="accd79a6ab2ab26b14a5acf0e4624a9287eb4f98" translate="yes" xml:space="preserve">
          <source>Force to call a function using jli_s instruction. This option is valid only for ARCv2 architecture.</source>
          <target state="translated">Forzar a llamar una función usando la instrucción jli_s.Esta opción es válida sólo para la arquitectura ARCv2.</target>
        </trans-unit>
        <trans-unit id="bda8d8b269a45b97f862176d65bac6c1e4f4afe4" translate="yes" xml:space="preserve">
          <source>Forces a particular function to be called using &lt;code&gt;jli&lt;/code&gt; instruction. The &lt;code&gt;jli&lt;/code&gt; instruction makes use of a table stored into &lt;code&gt;.jlitab&lt;/code&gt; section, which holds the location of the functions which are addressed using this instruction.</source>
          <target state="translated">Obliga a que se llame a una funci&amp;oacute;n particular mediante la instrucci&amp;oacute;n &lt;code&gt;jli&lt;/code&gt; . La instrucci&amp;oacute;n &lt;code&gt;jli&lt;/code&gt; hace uso de una tabla almacenada en la secci&amp;oacute;n &lt;code&gt;.jlitab&lt;/code&gt; , que contiene la ubicaci&amp;oacute;n de las funciones que se direccionan mediante esta instrucci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2f084ee73c513d8f966bbd0c40980e7ab5210b2e" translate="yes" xml:space="preserve">
          <source>Formal syntax for attributes.</source>
          <target state="translated">Sintaxis formal de los atributos.</target>
        </trans-unit>
        <trans-unit id="6e97cc41857aff390c1d1352f1580ff15ac71869" translate="yes" xml:space="preserve">
          <source>Format checks specific to particular targets.</source>
          <target state="translated">Comprobaciones de formato específicas para determinados objetivos.</target>
        </trans-unit>
        <trans-unit id="c4653752f8662d9cf50820b53f4f92b88244d0b2" translate="yes" xml:space="preserve">
          <source>Formerly the &lt;code&gt;hi&lt;/code&gt; register. This constraint is no longer supported.</source>
          <target state="translated">Anteriormente el registro &lt;code&gt;hi&lt;/code&gt; . Esta restricci&amp;oacute;n ya no se admite.</target>
        </trans-unit>
        <trans-unit id="fb001b2c292ad2f619c8caf6e0ac8afd191aaa76" translate="yes" xml:space="preserve">
          <source>Framework</source>
          <target state="translated">Framework</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="a4a10834211c2c0fbcb7eeb4d7d706ce399ad1a9" translate="yes" xml:space="preserve">
          <source>Free form Fortran source code that must be preprocessed (with the traditional preprocessor).</source>
          <target state="translated">Código fuente Fortran de forma libre que debe ser preprocesado (con el preprocesador tradicional).</target>
        </trans-unit>
        <trans-unit id="ab1de10d533c059aa65605ce6bb4a93b10329a51" translate="yes" xml:space="preserve">
          <source>Free form Fortran source code that should not be preprocessed.</source>
          <target state="translated">Código fuente Fortran de forma libre que no debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="79c3d4c459214fa53411ede2a681be19e9178e25" translate="yes" xml:space="preserve">
          <source>Fully split wide types early, instead of very late. This option has no effect unless</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3ade0ff4647a9f20d6dba70ea3a9f2cb1aec15" translate="yes" xml:space="preserve">
          <source>Function Pointer Size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5888490bf4ce1fb3617e200efdb6835e0c4faa44" translate="yes" xml:space="preserve">
          <source>Function attributes are introduced by the &lt;code&gt;__attribute__&lt;/code&gt; keyword in the declaration of a function, followed by an attribute specification enclosed in double parentheses. You can specify multiple attributes in a declaration by separating them by commas within the double parentheses or by immediately following one attribute specification with another. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for the exact rules on attribute syntax and placement. Compatible attribute specifications on distinct declarations of the same function are merged. An attribute specification that is not compatible with attributes already applied to a declaration of the same function is ignored with a warning.</source>
          <target state="translated">Los atributos de funci&amp;oacute;n se introducen mediante la palabra clave &lt;code&gt;__attribute__&lt;/code&gt; en la declaraci&amp;oacute;n de una funci&amp;oacute;n, seguida de una especificaci&amp;oacute;n de atributo entre par&amp;eacute;ntesis dobles. Puede especificar varios atributos en una declaraci&amp;oacute;n separ&amp;aacute;ndolos por comas dentro de los par&amp;eacute;ntesis dobles o inmediatamente despu&amp;eacute;s de una especificaci&amp;oacute;n de atributo con otra. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para conocer las reglas exactas sobre la sintaxis y la ubicaci&amp;oacute;n de los atributos. Se fusionan especificaciones de atributos compatibles en distintas declaraciones de la misma funci&amp;oacute;n. Una especificaci&amp;oacute;n de atributo que no es compatible con atributos ya aplicados a una declaraci&amp;oacute;n de la misma funci&amp;oacute;n se ignora con una advertencia.</target>
        </trans-unit>
        <trans-unit id="f93ed46e6d86f7b87373026d5e663168479db390" translate="yes" xml:space="preserve">
          <source>Function precision. The trap handler can determine the function that caused a floating-point exception.</source>
          <target state="translated">Precisión de la función.El manipulador de la trampa puede determinar la función que causó una excepción de punto flotante.</target>
        </trans-unit>
        <trans-unit id="d3d655b1f77fc46f162e436abc252a9dc6d8148d" translate="yes" xml:space="preserve">
          <source>Function prototype</source>
          <target state="translated">Prototipo de función</target>
        </trans-unit>
        <trans-unit id="9e039f9c7013d88c23a38a281ed14037c4166f2d" translate="yes" xml:space="preserve">
          <source>Function reordering based on profile instrumentation collects first time of execution of a function and orders these functions in ascending order.</source>
          <target state="translated">El reordenamiento de funciones basado en la instrumentación de perfiles recoge la primera vez que se ejecuta una función y ordena estas funciones en orden ascendente.</target>
        </trans-unit>
        <trans-unit id="84a74152b608e42b8dbf493e4c08ff7789383e02" translate="yes" xml:space="preserve">
          <source>Function return values larger than 64 bits are passed by using a hidden pointer as the first argument of the function. TI ABI, though, mandates that the pointer can be NULL in case the caller is not using the returned value. GNU always passes and expects a valid return value pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33f90e4120ff23ca44b34b56f5771105ef3b24d" translate="yes" xml:space="preserve">
          <source>Functions are aligned to 16-bit boundaries.</source>
          <target state="translated">Las funciones están alineadas con los límites de 16 bits.</target>
        </trans-unit>
        <trans-unit id="34be57d225a7e4b91308288bf7b00a21a76d0703" translate="yes" xml:space="preserve">
          <source>Functions are aligned to 32-bit boundaries, unless optimizing for size.</source>
          <target state="translated">Las funciones están alineadas con los límites de 32 bits,a menos que se optimice el tamaño.</target>
        </trans-unit>
        <trans-unit id="5a29ddf72dc39612a3206ea0dfa0993bffe35aee" translate="yes" xml:space="preserve">
          <source>Functions declared with the &lt;code&gt;naked&lt;/code&gt; attribute also require basic &lt;code&gt;asm&lt;/code&gt; (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;).</source>
          <target state="translated">Las funciones declaradas con el &lt;code&gt;naked&lt;/code&gt; atributo tambi&amp;eacute;n requieren b&amp;aacute;sica &lt;code&gt;asm&lt;/code&gt; (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b405d9a1c02455968daea5fb86ad7161a05b238c" translate="yes" xml:space="preserve">
          <source>Functions from different modes can be inlined in the caller&amp;rsquo;s mode.</source>
          <target state="translated">Las funciones de diferentes modos se pueden integrar en el modo de llamada.</target>
        </trans-unit>
        <trans-unit id="a51173ce4592b6408dafbf5dcd763cb00409451e" translate="yes" xml:space="preserve">
          <source>Functions prologues/epilogues are expanded as calls to appropriate subroutines. Code size is smaller.</source>
          <target state="translated">Las funciones prólogos/epílogos se amplían como llamadas a subrutinas apropiadas.El tamaño del código es menor.</target>
        </trans-unit>
        <trans-unit id="958942a81a4fb21510019af4adcbaec4037ab18c" translate="yes" xml:space="preserve">
          <source>Functions that are normally built in but do not have semantics defined by ISO C (such as &lt;code&gt;alloca&lt;/code&gt; and &lt;code&gt;ffs&lt;/code&gt;) are not built-in functions when</source>
          <target state="translated">Las funciones que normalmente est&amp;aacute;n construidas en, pero no tienen la sem&amp;aacute;ntica definidas por ISO C (tales como &lt;code&gt;alloca&lt;/code&gt; y &lt;code&gt;ffs&lt;/code&gt; ) no est&amp;aacute;n incorporados en funciones cuando se</target>
        </trans-unit>
        <trans-unit id="a77748cc250a919f08dac1cbb97eb54cbd2d36e9" translate="yes" xml:space="preserve">
          <source>Funding Free Software</source>
          <target state="translated">Financiación del software libre</target>
        </trans-unit>
        <trans-unit id="ad51c11605482040955d96c2db6f7d9f4eca570e" translate="yes" xml:space="preserve">
          <source>Furthermore, if the &lt;em&gt;earlyclobber&lt;/em&gt; operand is also a read/write operand, then that operand is written only after it&amp;rsquo;s used.</source>
          <target state="translated">Adem&amp;aacute;s, si el operando de &lt;em&gt;clobber temprano&lt;/em&gt; tambi&amp;eacute;n es un operando de lectura / escritura, entonces ese operando se escribe solo despu&amp;eacute;s de su uso.</target>
        </trans-unit>
        <trans-unit id="8c1a9865dc580dc97d71f0ac34525d7ff40826cf" translate="yes" xml:space="preserve">
          <source>Future versions of GCC may zero-extend, or use a target-defined &lt;code&gt;ptr_extend&lt;/code&gt; pattern. Do not rely on sign extension.</source>
          <target state="translated">Las versiones futuras de GCC pueden extenderse a cero o usar un patr&amp;oacute;n &lt;code&gt;ptr_extend&lt;/code&gt; definido por el objetivo . No conf&amp;iacute;e en la extensi&amp;oacute;n de la se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="6ed55690929b9e60aff3a9282723cba6d9ce77ea" translate="yes" xml:space="preserve">
          <source>G++ allows a virtual function returning &amp;lsquo;</source>
          <target state="translated">G ++ permite que una funci&amp;oacute;n virtual regrese '</target>
        </trans-unit>
        <trans-unit id="5114ba459fc06431a44841ea4654eb2a26a6c91e" translate="yes" xml:space="preserve">
          <source>G++ allows anonymous structs and unions to have members that are not public non-static data members (i.e. fields). These extensions are deprecated.</source>
          <target state="translated">G++permite a las estructuras anónimas y a los sindicatos tener miembros que no sean miembros de datos públicos no estáticos (es decir,campos).Estas extensiones están desaprobadas.</target>
        </trans-unit>
        <trans-unit id="de3e575c048ce4bfb45f20c4e2302053983a6e85" translate="yes" xml:space="preserve">
          <source>G++ allows attributes to follow a parenthesized direct initializer, e.g. &amp;lsquo;</source>
          <target state="translated">G ++ permite que los atributos sigan un inicializador directo entre par&amp;eacute;ntesis, por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="4279ad338a301cce60cdfae7e5135ebd09b1878c" translate="yes" xml:space="preserve">
          <source>G++ allows floating-point literals to appear in integral constant expressions, e.g. &amp;lsquo;</source>
          <target state="translated">G ++ permite que aparezcan literales de punto flotante en expresiones constantes integrales, por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="c5b988dd39fdeb99ab7e438425f37e6884df0f08" translate="yes" xml:space="preserve">
          <source>G++ allows static data members of const floating-point type to be declared with an initializer in a class definition. The standard only allows initializers for static members of const integral types and const enumeration types so this extension has been deprecated and will be removed from a future version.</source>
          <target state="translated">G++permite declarar miembros de datos estáticos de tipo const en punto flotante con un inicializador en una definición de clase.La norma sólo permite inicializadores para miembros estáticos de tipos integrales de const y tipos de enumeración de const,por lo que esta extensión ha quedado obsoleta y se eliminará de una futura versión.</target>
        </trans-unit>
        <trans-unit id="63f7f4841ad757c79aac590be15aedf6621086d6" translate="yes" xml:space="preserve">
          <source>G++ implements the &amp;ldquo;intuitive&amp;rdquo; algorithm for copy-assignment: assign all direct bases, then assign all members. In that algorithm, the virtual base subobject can be encountered more than once. In the example, copying proceeds in the following order: &amp;lsquo;</source>
          <target state="translated">G ++ implementa el algoritmo &amp;ldquo;intuitivo&amp;rdquo; para la asignaci&amp;oacute;n de copias: asigna todas las bases directas y luego asigna todos los miembros. En ese algoritmo, el subobjeto de base virtual se puede encontrar m&amp;aacute;s de una vez. En el ejemplo, la copia se realiza en el siguiente orden: '</target>
        </trans-unit>
        <trans-unit id="67e3c9106f6559177c33511b2d979e92d246d3b0" translate="yes" xml:space="preserve">
          <source>G++ implements the Borland model on targets where the linker supports it, including ELF targets (such as GNU/Linux), Mac OS X and Microsoft Windows. Otherwise G++ implements neither automatic model.</source>
          <target state="translated">G++implementa el modelo Borland en los objetivos donde el enlazador lo soporta,incluyendo objetivos ELF (como GNU/Linux),Mac OS X y Microsoft Windows.De lo contrario,G++no implementa ninguno de los dos modelos automáticos.</target>
        </trans-unit>
        <trans-unit id="31ff568d5d2e9d2f6743afcdc5f3a983bc913e2f" translate="yes" xml:space="preserve">
          <source>G++ implements the same behavior as GCC does when assigning to a volatile object&amp;mdash;there is no reread of the assigned-to object, the assigned rvalue is reused. Note that in C++ assignment expressions are lvalues, and if used as an lvalue, the volatile object is referred to. For instance, &lt;var&gt;vref&lt;/var&gt; refers to &lt;var&gt;vobj&lt;/var&gt;, as expected, in the following example:</source>
          <target state="translated">G ++ implementa el mismo comportamiento que GCC cuando se asigna a un objeto vol&amp;aacute;til: no se vuelve a leer el objeto asignado, el rvalue asignado se reutiliza. Tenga en cuenta que en C ++, las expresiones de asignaci&amp;oacute;n son valores l y, si se utilizan como valor l, se hace referencia al objeto vol&amp;aacute;til. Por ejemplo, &lt;var&gt;vref&lt;/var&gt; se refiere a &lt;var&gt;vobj&lt;/var&gt; , como se esperaba, en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="a1650ba68fd434ff4571a3ae6e0e946daaa36507" translate="yes" xml:space="preserve">
          <source>G3</source>
          <target state="translated">G3</target>
        </trans-unit>
        <trans-unit id="57c24c56c83113e722078337cfe2d513db43c570" translate="yes" xml:space="preserve">
          <source>G4</source>
          <target state="translated">G4</target>
        </trans-unit>
        <trans-unit id="75cc572d557c39d31a9a311423998e30b6913f73" translate="yes" xml:space="preserve">
          <source>G5</source>
          <target state="translated">G5</target>
        </trans-unit>
        <trans-unit id="47bc5f06e2bc84be8cac3eeae94be31fd0bb67f8" translate="yes" xml:space="preserve">
          <source>GBR</source>
          <target state="translated">GBR</target>
        </trans-unit>
        <trans-unit id="8577b47d2b705ad56be34a1a6a9f6472d1ac1001" translate="yes" xml:space="preserve">
          <source>GCC</source>
          <target state="translated">GCC</target>
        </trans-unit>
        <trans-unit id="2128b3c47a543c2fd225378159dcf1cee572dc1a" translate="yes" xml:space="preserve">
          <source>GCC aims towards being usable as a conforming freestanding implementation, or as the compiler for a conforming hosted implementation. By default, it acts as the compiler for a hosted implementation, defining &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; as &lt;code&gt;1&lt;/code&gt; and presuming that when the names of ISO C functions are used, they have the semantics defined in the standard. To make it act as a conforming freestanding implementation for a freestanding environment, use the option</source>
          <target state="translated">GCC tiene como objetivo ser utilizable como una implementaci&amp;oacute;n independiente conforme, o como el compilador para una implementaci&amp;oacute;n hospedada conforme. De forma predeterminada, act&amp;uacute;a como el compilador para una implementaci&amp;oacute;n alojada, definiendo &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; como &lt;code&gt;1&lt;/code&gt; y asumiendo que cuando se utilizan los nombres de las funciones ISO C, tienen la sem&amp;aacute;ntica definida en el est&amp;aacute;ndar. Para que act&amp;uacute;e como una implementaci&amp;oacute;n independiente conforme para un entorno independiente, utilice la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="a09efcf4281abbe557aa1d8c0037c8b8db485c71" translate="yes" xml:space="preserve">
          <source>GCC allows attributes to be set on C labels. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes. Other attributes are available for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and for types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC permite establecer atributos en etiquetas C. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos. Hay otros atributos disponibles para funciones (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (consulte &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), enumeradores (consulte &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Atributos de&lt;/a&gt; enumerador ), declaraciones (consulte &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Atributos de declaraci&amp;oacute;n&lt;/a&gt; ) y para tipos (consulte &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="188d2c46ce847222650ff9a197ae21b6d36834fd" translate="yes" xml:space="preserve">
          <source>GCC allows attributes to be set on enumerators. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes. Other attributes are available for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and for types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC permite establecer atributos en los enumeradores. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos. Hay otros atributos disponibles para funciones (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (ver &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), etiquetas (ver &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Atributos de etiqueta&lt;/a&gt; ), declaraciones (ver &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Atributos de declaraci&amp;oacute;n&lt;/a&gt; ) y para tipos (ver &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1318f5f0c876968e4d22801744660b2a68a5dbc1" translate="yes" xml:space="preserve">
          <source>GCC allows attributes to be set on null statements. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes. Other attributes are available for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), and for types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC permite que los atributos se establezcan en declaraciones nulas. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos. Hay otros atributos disponibles para funciones (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (ver &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), etiquetas (ver &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Atributos de etiqueta&lt;/a&gt; ), enumeradores (ver &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Atributos de&lt;/a&gt; enumerador ) y para tipos (ver &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f7518a10a612c3aa4683ccb174e0aca674b8c50" translate="yes" xml:space="preserve">
          <source>GCC allows static initialization of flexible array members. This is equivalent to defining a new structure containing the original structure followed by an array of sufficient size to contain the data. E.g. in the following, &lt;code&gt;f1&lt;/code&gt; is constructed as if it were declared like &lt;code&gt;f2&lt;/code&gt;.</source>
          <target state="translated">GCC permite la inicializaci&amp;oacute;n est&amp;aacute;tica de miembros de la matriz flexible. Esto equivale a definir una nueva estructura que contenga la estructura original seguida de una matriz de tama&amp;ntilde;o suficiente para contener los datos. Por ejemplo, a continuaci&amp;oacute;n, &lt;code&gt;f1&lt;/code&gt; se construye como si se declarara como &lt;code&gt;f2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f25be809d122cad042e0db0bcc9a75b7e95df2b" translate="yes" xml:space="preserve">
          <source>GCC allows the user to selectively enable or disable certain types of diagnostics, and change the kind of the diagnostic. For example, a project&amp;rsquo;s policy might require that all sources compile with</source>
          <target state="translated">GCC permite al usuario habilitar o deshabilitar selectivamente ciertos tipos de diagn&amp;oacute;sticos y cambiar el tipo de diagn&amp;oacute;stico. Por ejemplo, la pol&amp;iacute;tica de un proyecto puede requerir que todas las fuentes se compilen con</target>
        </trans-unit>
        <trans-unit id="095246dfc125cf940fca19907500328219191dc3" translate="yes" xml:space="preserve">
          <source>GCC allows using a &lt;code&gt;typedef&lt;/code&gt; name as the type specifier for a vector type, but only under the following circumstances:</source>
          <target state="translated">GCC permite usar un nombre &lt;code&gt;typedef&lt;/code&gt; como especificador de tipo para un tipo de vector, pero solo en las siguientes circunstancias:</target>
        </trans-unit>
        <trans-unit id="118ab2384628648bceb8c24d3c1faa22f9cfc67a" translate="yes" xml:space="preserve">
          <source>GCC allows using a &lt;code&gt;typedef&lt;/code&gt; name as the type specifier for a vector type.</source>
          <target state="translated">GCC permite usar un nombre &lt;code&gt;typedef&lt;/code&gt; como especificador de tipo para un tipo de vector.</target>
        </trans-unit>
        <trans-unit id="4dbc0782ac4d82d0f286d4feca2e87d560c81769" translate="yes" xml:space="preserve">
          <source>GCC allows you to declare &lt;em&gt;local labels&lt;/em&gt; in any nested block scope. A local label is just like an ordinary label, but you can only reference it (with a &lt;code&gt;goto&lt;/code&gt; statement, or by taking its address) within the block in which it is declared.</source>
          <target state="translated">GCC le permite declarar &lt;em&gt;etiquetas locales&lt;/em&gt; en cualquier &amp;aacute;mbito de bloque anidado. Una etiqueta local es como una etiqueta ordinaria, pero solo puede hacer referencia a ella (con una declaraci&amp;oacute;n &lt;code&gt;goto&lt;/code&gt; o tomando su direcci&amp;oacute;n) dentro del bloque en el que est&amp;aacute; declarada.</target>
        </trans-unit>
        <trans-unit id="11edda20db587e9081a40a5791b651f14e5edef4" translate="yes" xml:space="preserve">
          <source>GCC allows you to use</source>
          <target state="translated">El GCC le permite usar</target>
        </trans-unit>
        <trans-unit id="cb8172c4270b6a56a430a2344a1d357df8a89c7e" translate="yes" xml:space="preserve">
          <source>GCC already has an extensive list of suffixes built into it. This directive adds an entry to the end of the list of suffixes, but since the list is searched from the end backwards, it is effectively possible to override earlier entries using this technique.</source>
          <target state="translated">El GCC ya tiene una extensa lista de sufijos incorporados.Esta directiva añade una entrada al final de la lista de sufijos,pero como la lista se busca desde el final hacia atrás,es efectivamente posible anular las entradas anteriores mediante esta técnica.</target>
        </trans-unit>
        <trans-unit id="4946c9e7401c541aac6237c0b11a4f8762636048" translate="yes" xml:space="preserve">
          <source>GCC also defines the macro &lt;code&gt;__m&lt;var&gt;uarch&lt;/var&gt;__&lt;/code&gt; when tuning for ColdFire microarchitecture &lt;var&gt;uarch&lt;/var&gt;, where &lt;var&gt;uarch&lt;/var&gt; is one of the arguments given above.</source>
          <target state="translated">GCC tambi&amp;eacute;n define la macro &lt;code&gt;__m&lt;var&gt;uarch&lt;/var&gt;__&lt;/code&gt; al ajustar la microarquitectura ColdFire &lt;var&gt;uarch&lt;/var&gt; , donde &lt;var&gt;uarch&lt;/var&gt; es uno de los argumentos dados anteriormente.</target>
        </trans-unit>
        <trans-unit id="bd57161c41c158f961b92f3f1147120413b6477d" translate="yes" xml:space="preserve">
          <source>GCC also knows implicitly that arguments starting in</source>
          <target state="translated">El GCC también sabe implícitamente que los argumentos que comienzan en</target>
        </trans-unit>
        <trans-unit id="5590aa7708108855eef5df246b0491a821f68f35" translate="yes" xml:space="preserve">
          <source>GCC also offers a simple mechanism for printing messages during compilation.</source>
          <target state="translated">El CCG también ofrece un mecanismo sencillo para imprimir mensajes durante la compilación.</target>
        </trans-unit>
        <trans-unit id="ff5eb1c7d3d1103b9c01d9df5e0e050903b1adc0" translate="yes" xml:space="preserve">
          <source>GCC also provides a target specific macro &lt;code&gt;__BIGGEST_ALIGNMENT__&lt;/code&gt;, which is the largest alignment ever used for any data type on the target machine you are compiling for. For example, you could write:</source>
          <target state="translated">GCC tambi&amp;eacute;n proporciona una macro espec&amp;iacute;fica de destino &lt;code&gt;__BIGGEST_ALIGNMENT__&lt;/code&gt; , que es la alineaci&amp;oacute;n m&amp;aacute;s grande jam&amp;aacute;s utilizada para cualquier tipo de datos en la m&amp;aacute;quina de destino para la que est&amp;aacute; compilando. Por ejemplo, podr&amp;iacute;as escribir:</target>
        </trans-unit>
        <trans-unit id="1ce6a581ce58e7b0e52deb0ba48b6684312e9d7c" translate="yes" xml:space="preserve">
          <source>GCC also provides intrinsics to directly access the network registers. The intrinsics are:</source>
          <target state="translated">El GCC también proporciona los elementos intrínsecos para acceder directamente a los registros de la red.Los intrínsecos son:</target>
        </trans-unit>
        <trans-unit id="028d66aa5e30f9984efa701c3d35086edefd3f65" translate="yes" xml:space="preserve">
          <source>GCC also supports attributes on variable declarations (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC tambi&amp;eacute;n admite atributos en declaraciones de variable (ver &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), etiquetas (ver &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Atributos de etiqueta&lt;/a&gt; ), enumeradores (ver &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Atributos de&lt;/a&gt; enumerador ), declaraciones (ver &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Atributos de declaraci&amp;oacute;n&lt;/a&gt; ) y tipos (ver &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="51353b73f0da65e20b68eea37e8d612e8b885954" translate="yes" xml:space="preserve">
          <source>GCC also warns about function definitions that might be candidates for &lt;code&gt;format&lt;/code&gt; attributes. Again, these are only possible candidates. GCC guesses that &lt;code&gt;format&lt;/code&gt; attributes might be appropriate for any function that calls a function like &lt;code&gt;vprintf&lt;/code&gt; or &lt;code&gt;vscanf&lt;/code&gt;, but this might not always be the case, and some functions for which &lt;code&gt;format&lt;/code&gt; attributes are appropriate may not be detected.</source>
          <target state="translated">GCC tambi&amp;eacute;n advierte sobre las definiciones de funciones que podr&amp;iacute;an ser candidatas para los atributos de &lt;code&gt;format&lt;/code&gt; o . Nuevamente, estos son solo posibles candidatos. GCC supone que los atributos de &lt;code&gt;format&lt;/code&gt; o pueden ser apropiados para cualquier funci&amp;oacute;n que llame a una funci&amp;oacute;n como &lt;code&gt;vprintf&lt;/code&gt; o &lt;code&gt;vscanf&lt;/code&gt; , pero esto no siempre es as&amp;iacute;, y algunas funciones para las que los atributos de &lt;code&gt;format&lt;/code&gt; o son apropiados pueden no detectarse.</target>
        </trans-unit>
        <trans-unit id="e6346f95ac263c787786ddc66b5d9c0bcd8bac71" translate="yes" xml:space="preserve">
          <source>GCC always follows the C99 and C11 requirement that the result of division is truncated towards zero.</source>
          <target state="translated">GCC siempre sigue el requisito de C99 y C11 de que el resultado de la división se trunque hacia cero.</target>
        </trans-unit>
        <trans-unit id="71e58c529399ec16a2da4be1a53c86f1d271b88e" translate="yes" xml:space="preserve">
          <source>GCC always tries to compile your program if possible; it never gratuitously rejects a program whose meaning is clear merely because (for instance) it fails to conform to a standard. In some cases, however, the C and C++ standards specify that certain extensions are forbidden, and a diagnostic &lt;em&gt;must&lt;/em&gt; be issued by a conforming compiler. The</source>
          <target state="translated">GCC siempre intenta compilar su programa si es posible; nunca rechaza gratuitamente un programa cuyo significado es claro simplemente porque (por ejemplo) no se ajusta a un est&amp;aacute;ndar. En algunos casos, sin embargo, los est&amp;aacute;ndares C y C ++ especifican que ciertas extensiones est&amp;aacute;n prohibidas y un compilador conforme &lt;em&gt;debe&lt;/em&gt; emitir un diagn&amp;oacute;stico . los</target>
        </trans-unit>
        <trans-unit id="3d850d85ff9e9c0132b4336d9517c8233fd73c22" translate="yes" xml:space="preserve">
          <source>GCC by default uses the GNU Objective-C runtime library, which is part of GCC and is not the same as the Apple/NeXT Objective-C runtime library used on Apple systems. There are a number of differences documented in this manual. The options</source>
          <target state="translated">GCC utiliza por defecto la biblioteca de tiempo de ejecución GNU Objective-C,que forma parte de GCC y no es la misma que la biblioteca de tiempo de ejecución Apple/NeXT Objective-C que se utiliza en los sistemas de Apple.Hay varias diferencias documentadas en este manual.Las opciones</target>
        </trans-unit>
        <trans-unit id="1c0b38c968b6ef5ec06e42505963f829a108bef3" translate="yes" xml:space="preserve">
          <source>GCC by itself attempts to be a conforming freestanding implementation. See &lt;a href=&quot;standards#Standards&quot;&gt;Language Standards Supported by GCC&lt;/a&gt;, for details of what this means. Beyond the library facilities required of such an implementation, the rest of the C library is supplied by the vendor of the operating system. If that C library doesn&amp;rsquo;t conform to the C standards, then your programs might get warnings (especially when using</source>
          <target state="translated">GCC por s&amp;iacute; mismo intenta ser una implementaci&amp;oacute;n independiente conforme. Consulte &lt;a href=&quot;standards#Standards&quot;&gt;Est&amp;aacute;ndares de lenguaje admitidos por GCC&lt;/a&gt; para obtener detalles sobre lo que esto significa. M&amp;aacute;s all&amp;aacute; de las facilidades de biblioteca requeridas para tal implementaci&amp;oacute;n, el resto de la biblioteca C es suministrada por el proveedor del sistema operativo. Si esa biblioteca de C no se ajusta a los est&amp;aacute;ndares de C, entonces sus programas pueden recibir advertencias (especialmente al usar</target>
        </trans-unit>
        <trans-unit id="a367622db7093a4cc9943cb9b928ad16a228659d" translate="yes" xml:space="preserve">
          <source>GCC can allocate complex automatic variables in a noncontiguous fashion; it&amp;rsquo;s even possible for the real part to be in a register while the imaginary part is on the stack (or vice versa). Only the DWARF debug info format can represent this, so use of DWARF is recommended. If you are using the stabs debug info format, GCC describes a noncontiguous complex variable as if it were two separate variables of noncomplex type. If the variable&amp;rsquo;s actual name is &lt;code&gt;foo&lt;/code&gt;, the two fictitious variables are named &lt;code&gt;foo$real&lt;/code&gt; and &lt;code&gt;foo$imag&lt;/code&gt;. You can examine and set these two fictitious variables with your debugger.</source>
          <target state="translated">GCC puede asignar variables autom&amp;aacute;ticas complejas de forma no contigua; incluso es posible que la parte real est&amp;eacute; en un registro mientras que la parte imaginaria est&amp;aacute; en la pila (o viceversa). Solo el formato de informaci&amp;oacute;n de depuraci&amp;oacute;n DWARF puede representar esto, por lo que se recomienda el uso de DWARF. Si est&amp;aacute; utilizando el formato de informaci&amp;oacute;n de depuraci&amp;oacute;n de pu&amp;ntilde;aladas, GCC describe una variable compleja no contigua como si fueran dos variables separadas de tipo no complejo. Si el nombre real de la variable es &lt;code&gt;foo&lt;/code&gt; , las dos variables ficticias se denominan &lt;code&gt;foo$real&lt;/code&gt; y &lt;code&gt;foo$imag&lt;/code&gt; . Puede examinar y establecer estas dos variables ficticias con su depurador.</target>
        </trans-unit>
        <trans-unit id="8c74211307275623a7dfd79983ff1fca91bf2ce8" translate="yes" xml:space="preserve">
          <source>GCC can also be configured (via the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f3d3d856350fe50d86862ccf0921b96281e6bd" translate="yes" xml:space="preserve">
          <source>GCC can compile the binary representation (BRIG) of the HSAIL text format as described in HSA Programmer&amp;rsquo;s Reference Manual version 1.0.1. This capability is typically utilized to implement the HSA runtime API&amp;rsquo;s HSAIL finalization extension for a gcc supported processor. HSA standards are freely available at &lt;a href=&quot;http://www.hsafoundation.com/standards/&quot;&gt;http://www.hsafoundation.com/standards/&lt;/a&gt;.</source>
          <target state="translated">GCC puede compilar la representaci&amp;oacute;n binaria (BRIG) del formato de texto HSAIL como se describe en la versi&amp;oacute;n 1.0.1 del Manual de referencia del programador de HSA. Esta capacidad se utiliza normalmente para implementar la extensi&amp;oacute;n de finalizaci&amp;oacute;n HSAIL de la API de tiempo de ejecuci&amp;oacute;n de HSA para un procesador compatible con gcc. Los est&amp;aacute;ndares de HSA est&amp;aacute;n disponibles gratuitamente en &lt;a href=&quot;http://www.hsafoundation.com/standards/&quot;&gt;http://www.hsafoundation.com/standards/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87356dae6f4ed6235c36eedc0fe148afee6229d9" translate="yes" xml:space="preserve">
          <source>GCC can generate code for both VxWorks kernels and real time processes (RTPs). This option switches from the former to the latter. It also defines the preprocessor macro &lt;code&gt;__RTP__&lt;/code&gt;.</source>
          <target state="translated">GCC puede generar c&amp;oacute;digo tanto para n&amp;uacute;cleos de VxWorks como para procesos en tiempo real (RTP). Esta opci&amp;oacute;n cambia de la primera a la &amp;uacute;ltima. Tambi&amp;eacute;n define la macro del preprocesador &lt;code&gt;__RTP__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9f5282eec43cb95e4c422b1995ae6896ab686c" translate="yes" xml:space="preserve">
          <source>GCC can only handle one commutative pair in an asm; if you use more, the compiler may fail. Note that you need not use the modifier if the two alternatives are strictly identical; this would only waste time in the reload pass.</source>
          <target state="translated">GCC sólo puede manejar un par conmutativo en un asm;si usa más,el compilador puede fallar.Tenga en cuenta que no es necesario utilizar el modificador si las dos alternativas son estrictamente idénticas;esto sólo haría perder tiempo en la pasada de recarga.</target>
        </trans-unit>
        <trans-unit id="78d74922e82c5075040c6a08c44444ac34a5ad2a" translate="yes" xml:space="preserve">
          <source>GCC comes with shell scripts to fix certain known problems in system header files. They install corrected copies of various header files in a special directory where only GCC will normally look for them. The scripts adapt to various systems by searching all the system header files for the problem cases that we know about.</source>
          <target state="translated">GCC viene con shell scripts para arreglar ciertos problemas conocidos en los archivos de cabecera del sistema.Instalan copias corregidas de varios archivos de encabezado en un directorio especial donde sólo GCC normalmente los buscará.Los scripts se adaptan a varios sistemas buscando en todos los archivos de cabecera del sistema los casos problemáticos que conocemos.</target>
        </trans-unit>
        <trans-unit id="cd976cd951c888839dc15c99651c6a379e4c0cac" translate="yes" xml:space="preserve">
          <source>GCC compiled code sometimes emits warnings from the HP-UX assembler of the form:</source>
          <target state="translated">El código compilado por GCC a veces emite advertencias del ensamblador HP-UX de la forma:</target>
        </trans-unit>
        <trans-unit id="81e4ed9eaf205df3f6c599be30d212f56ac91924" translate="yes" xml:space="preserve">
          <source>GCC complains about program fragments such as &amp;lsquo;</source>
          <target state="translated">GCC se queja de fragmentos de programas como '</target>
        </trans-unit>
        <trans-unit id="67982454dd3e3b7d64f34362d5f739d9716bb143" translate="yes" xml:space="preserve">
          <source>GCC complains about unterminated character constants inside of preprocessing conditionals that fail. Some programs have English comments enclosed in conditionals that are guaranteed to fail; if these comments contain apostrophes, GCC will probably report an error. For example, this code would produce an error:</source>
          <target state="translated">GCC se queja de las constantes de carácter no terminadas dentro de los condicionales de preprocesamiento que fallan.Algunos programas tienen comentarios en inglés incluidos en los condicionales que están garantizados para fallar;si estos comentarios contienen apóstrofes,GCC probablemente informará de un error.Por ejemplo,este código produciría un error:</target>
        </trans-unit>
        <trans-unit id="e4bb7adbf45dc4a3fb687d7313280a86480960d6" translate="yes" xml:space="preserve">
          <source>GCC complies with the OpenPOWER 64-Bit ELF V2 ABI Specification, which may be found at &lt;a href=&quot;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&quot;&gt;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&lt;/a&gt;. Appendix A of this document lists the vector API interfaces that must be provided by compliant compilers. Programmers should preferentially use the interfaces described therein. However, historically GCC has provided additional interfaces for access to vector instructions. These are briefly described below.</source>
          <target state="translated">GCC cumple con la especificaci&amp;oacute;n ABI ELF V2 de OpenPOWER de 64 bits, que se puede encontrar en &lt;a href=&quot;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&quot;&gt;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&lt;/a&gt; . El Ap&amp;eacute;ndice A de este documento enumera las interfaces API de vector que deben proporcionar los compiladores compatibles. Los programadores deben utilizar preferentemente las interfaces que se describen all&amp;iacute;. Sin embargo, hist&amp;oacute;ricamente GCC ha proporcionado interfaces adicionales para acceder a instrucciones vectoriales. Estos se describen brevemente a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c80707819ec65b1cb82541da2d3b9e30cf2076e3" translate="yes" xml:space="preserve">
          <source>GCC complies with the OpenPOWER 64-Bit ELF V2 ABI Specification, which may be found at &lt;a href=&quot;https://openpowerfoundation.org/?resource_lib=64-bit-elf-v2-abi-specification-power-architecture&quot;&gt;https://openpowerfoundation.org/?resource_lib=64-bit-elf-v2-abi-specification-power-architecture&lt;/a&gt;. Appendix A of this document lists the vector API interfaces that must be provided by compliant compilers. Programmers should preferentially use the interfaces described therein. However, historically GCC has provided additional interfaces for access to vector instructions. These are briefly described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f9b929facca207bcc2021009f1c0587b957cbf" translate="yes" xml:space="preserve">
          <source>GCC currently emits calls to &lt;code&gt;vmldExp2&lt;/code&gt;, &lt;code&gt;vmldLn2&lt;/code&gt;, &lt;code&gt;vmldLog102&lt;/code&gt;, &lt;code&gt;vmldPow2&lt;/code&gt;, &lt;code&gt;vmldTanh2&lt;/code&gt;, &lt;code&gt;vmldTan2&lt;/code&gt;, &lt;code&gt;vmldAtan2&lt;/code&gt;, &lt;code&gt;vmldAtanh2&lt;/code&gt;, &lt;code&gt;vmldCbrt2&lt;/code&gt;, &lt;code&gt;vmldSinh2&lt;/code&gt;, &lt;code&gt;vmldSin2&lt;/code&gt;, &lt;code&gt;vmldAsinh2&lt;/code&gt;, &lt;code&gt;vmldAsin2&lt;/code&gt;, &lt;code&gt;vmldCosh2&lt;/code&gt;, &lt;code&gt;vmldCos2&lt;/code&gt;, &lt;code&gt;vmldAcosh2&lt;/code&gt;, &lt;code&gt;vmldAcos2&lt;/code&gt;, &lt;code&gt;vmlsExp4&lt;/code&gt;, &lt;code&gt;vmlsLn4&lt;/code&gt;, &lt;code&gt;vmlsLog104&lt;/code&gt;, &lt;code&gt;vmlsPow4&lt;/code&gt;, &lt;code&gt;vmlsTanh4&lt;/code&gt;, &lt;code&gt;vmlsTan4&lt;/code&gt;, &lt;code&gt;vmlsAtan4&lt;/code&gt;, &lt;code&gt;vmlsAtanh4&lt;/code&gt;, &lt;code&gt;vmlsCbrt4&lt;/code&gt;, &lt;code&gt;vmlsSinh4&lt;/code&gt;, &lt;code&gt;vmlsSin4&lt;/code&gt;, &lt;code&gt;vmlsAsinh4&lt;/code&gt;, &lt;code&gt;vmlsAsin4&lt;/code&gt;, &lt;code&gt;vmlsCosh4&lt;/code&gt;, &lt;code&gt;vmlsCos4&lt;/code&gt;, &lt;code&gt;vmlsAcosh4&lt;/code&gt; and &lt;code&gt;vmlsAcos4&lt;/code&gt; for corresponding function type when</source>
          <target state="translated">GCC actualmente emite llamadas a &lt;code&gt;vmldExp2&lt;/code&gt; , &lt;code&gt;vmldLn2&lt;/code&gt; , &lt;code&gt;vmldLog102&lt;/code&gt; , &lt;code&gt;vmldPow2&lt;/code&gt; , &lt;code&gt;vmldTanh2&lt;/code&gt; , &lt;code&gt;vmldTan2&lt;/code&gt; , &lt;code&gt;vmldAtan2&lt;/code&gt; , &lt;code&gt;vmldAtanh2&lt;/code&gt; , &lt;code&gt;vmldCbrt2&lt;/code&gt; , &lt;code&gt;vmldSinh2&lt;/code&gt; , &lt;code&gt;vmldSin2&lt;/code&gt; , &lt;code&gt;vmldAsinh2&lt;/code&gt; , &lt;code&gt;vmldAsin2&lt;/code&gt; , &lt;code&gt;vmldCosh2&lt;/code&gt; , &lt;code&gt;vmldCos2&lt;/code&gt; , &lt;code&gt;vmldAcosh2&lt;/code&gt; , &lt;code&gt;vmldAcos2&lt;/code&gt; , &lt;code&gt;vmlsExp4&lt;/code&gt; , &lt;code&gt;vmlsLn4&lt;/code&gt; , &lt;code&gt;vmlsLog104&lt;/code&gt; , &lt;code&gt;vmlsPow4&lt;/code&gt; , &lt;code&gt;vmlsTanh4&lt;/code&gt; , &lt;code&gt;vmlsTan4&lt;/code&gt; , &lt;code&gt;vmlsAtan4&lt;/code&gt; , &lt;code&gt;vmlsAtanh4&lt;/code&gt; , &lt;code&gt;vmlsCbrt4&lt;/code&gt; , &lt;code&gt;vmlsSinh4&lt;/code&gt; , &lt;code&gt;vmlsSin4&lt;/code&gt; , &lt;code&gt;vmlsAsinh4&lt;/code&gt; , &lt;code&gt;vmlsAsin4&lt;/code&gt; , &lt;code&gt;vmlsCosh4&lt;/code&gt; , &lt;code&gt;vmlsCos4&lt;/code&gt; , &lt;code&gt;vmlsAcosh4&lt;/code&gt; y &lt;code&gt;vmlsAcos4&lt;/code&gt; para el tipo de funci&amp;oacute;n correspondiente cuando</target>
        </trans-unit>
        <trans-unit id="16f9d8d14967dad5157f0d4d4177e77917294c63" translate="yes" xml:space="preserve">
          <source>GCC defines a macro &lt;code&gt;__mcf&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; whenever it is generating code for a ColdFire target. The &lt;var&gt;arch&lt;/var&gt; in this macro is one of the</source>
          <target state="translated">GCC define una macro &lt;code&gt;__mcf&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; siempre que est&amp;eacute; generando c&amp;oacute;digo para un objetivo ColdFire. El &lt;var&gt;arch&lt;/var&gt; de esta macro es uno de los</target>
        </trans-unit>
        <trans-unit id="9690667ebb3c4d196426b91a67e183bca646b7c4" translate="yes" xml:space="preserve">
          <source>GCC defines a preprocessor macro for the specified &lt;var&gt;cpu&lt;/var&gt;. For the &amp;lsquo;</source>
          <target state="translated">GCC define una macro de preprocesador para la &lt;var&gt;cpu&lt;/var&gt; especificada . Para el '</target>
        </trans-unit>
        <trans-unit id="1ee4979d83e119fc65d0b3ce42180431e0b52daf" translate="yes" xml:space="preserve">
          <source>GCC defines several built-in macros so that the user code can test for the presence or absence of features. Almost any of the following built-in macros are deduced from device capabilities and thus triggered by the</source>
          <target state="translated">El GCC define varias macros incorporadas para que el código de usuario pueda comprobar la presencia o ausencia de características.Casi cualquiera de las siguientes macros incorporadas se deducen de las capacidades del dispositivo y por lo tanto se activan por el</target>
        </trans-unit>
        <trans-unit id="07c2bb68cb370eca1e6a61c97987834533dcec03" translate="yes" xml:space="preserve">
          <source>GCC defines the macro &lt;code&gt;__mcf_cpu_&lt;var&gt;cpu&lt;/var&gt;&lt;/code&gt; when ColdFire target &lt;var&gt;cpu&lt;/var&gt; is selected. It also defines &lt;code&gt;__mcf_family_&lt;var&gt;family&lt;/var&gt;&lt;/code&gt;, where the value of &lt;var&gt;family&lt;/var&gt; is given by the table above.</source>
          <target state="translated">GCC define la macro &lt;code&gt;__mcf_cpu_&lt;var&gt;cpu&lt;/var&gt;&lt;/code&gt; cuando se selecciona la &lt;var&gt;cpu&lt;/var&gt; de destino de ColdFire . Tambi&amp;eacute;n define &lt;code&gt;__mcf_family_&lt;var&gt;family&lt;/var&gt;&lt;/code&gt; , donde el valor de &lt;var&gt;family&lt;/var&gt; viene dado por la tabla anterior.</target>
        </trans-unit>
        <trans-unit id="57340a71d3d941522f73fea99d6d51e3e8ce6ff1" translate="yes" xml:space="preserve">
          <source>GCC defines the macro &lt;code&gt;__mcfhwdiv__&lt;/code&gt; when this option is enabled.</source>
          <target state="translated">GCC define la macro &lt;code&gt;__mcfhwdiv__&lt;/code&gt; cuando esta opci&amp;oacute;n est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="6a9b1f894460a8c96f48083896afccfe85c9be79" translate="yes" xml:space="preserve">
          <source>GCC defines the macros &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; when tuning for 680x0 architecture &lt;var&gt;arch&lt;/var&gt;. It also defines &lt;code&gt;mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; unless either</source>
          <target state="translated">GCC define las macros &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; y &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; cuando se ajusta para la arquitectura 680x0 &lt;var&gt;arch&lt;/var&gt; . Tambi&amp;eacute;n define &lt;code&gt;mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; menos que</target>
        </trans-unit>
        <trans-unit id="2885698109b0288d9891eaf5f6f566e33bc93a28" translate="yes" xml:space="preserve">
          <source>GCC defines the preprocessor macro &lt;code&gt;__HAVE_BUILTIN_SPECULATION_SAFE_VALUE&lt;/code&gt; for targets that have been updated to support this builtin.</source>
          <target state="translated">GCC define la macro del preprocesador &lt;code&gt;__HAVE_BUILTIN_SPECULATION_SAFE_VALUE&lt;/code&gt; para los destinos que se han actualizado para admitir esta funci&amp;oacute;n integrada.</target>
        </trans-unit>
        <trans-unit id="9502202879d2e8497b3ab7402351c2cfb4aba65d" translate="yes" xml:space="preserve">
          <source>GCC defines two macros based on the value of this option. The first is &lt;code&gt;_MIPS_ARCH&lt;/code&gt;, which gives the name of target architecture, as a string. The second has the form &lt;code&gt;_MIPS_ARCH_&lt;var&gt;foo&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;foo&lt;/var&gt; is the capitalized value of &lt;code&gt;_MIPS_ARCH&lt;/code&gt;. For example,</source>
          <target state="translated">GCC define dos macros seg&amp;uacute;n el valor de esta opci&amp;oacute;n. El primero es &lt;code&gt;_MIPS_ARCH&lt;/code&gt; , que da el nombre de la arquitectura de destino, como una cadena. El segundo tiene la forma &lt;code&gt;_MIPS_ARCH_&lt;var&gt;foo&lt;/var&gt;&lt;/code&gt; , donde &lt;var&gt;foo&lt;/var&gt; es el valor en may&amp;uacute;scula de &lt;code&gt;_MIPS_ARCH&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="a26b5e085873721291414d2146a69ef3ff2df942" translate="yes" xml:space="preserve">
          <source>GCC depresses SSEx instructions when</source>
          <target state="translated">El GCC deprime las instrucciones SSEx cuando</target>
        </trans-unit>
        <trans-unit id="f00d9db0f7babc17a8b2e93a16eaa154dca9484f" translate="yes" xml:space="preserve">
          <source>GCC does not inline any functions when not optimizing unless you specify the &amp;lsquo;</source>
          <target state="translated">GCC no integra ninguna funci&amp;oacute;n cuando no se optimiza a menos que especifique el '</target>
        </trans-unit>
        <trans-unit id="d979e47341cf32b9e9788a98df7db938c53659aa" translate="yes" xml:space="preserve">
          <source>GCC does not parse basic &lt;code&gt;asm&lt;/code&gt;&amp;rsquo;s &lt;var&gt;AssemblerInstructions&lt;/var&gt;, which means there is no way to communicate to the compiler what is happening inside them. GCC has no visibility of symbols in the &lt;code&gt;asm&lt;/code&gt; and may discard them as unreferenced. It also does not know about side effects of the assembler code, such as modifications to memory or registers. Unlike some compilers, GCC assumes that no changes to general purpose registers occur. This assumption may change in a future release.</source>
          <target state="translated">GCC no analiza las &lt;code&gt;asm&lt;/code&gt; de &lt;var&gt;AssemblerInstructions&lt;/var&gt; asm b&amp;aacute;sicas , lo que significa que no hay forma de comunicar al compilador lo que est&amp;aacute; sucediendo dentro de ellas. GCC no tiene visibilidad de los s&amp;iacute;mbolos en la &lt;code&gt;asm&lt;/code&gt; y puede desecharlos como sin referencias. Tampoco conoce los efectos secundarios del c&amp;oacute;digo ensamblador, como modificaciones en la memoria o registros. A diferencia de algunos compiladores, GCC asume que no se producen cambios en los registros de prop&amp;oacute;sito general. Esta suposici&amp;oacute;n puede cambiar en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="cd46297b79a48028b406a3a22f8df3c38f23ed53" translate="yes" xml:space="preserve">
          <source>GCC does not provide the C library functionality associated with</source>
          <target state="translated">El GCC no proporciona la funcionalidad de la biblioteca C asociada con</target>
        </trans-unit>
        <trans-unit id="96d71d57d6177ab6f3fc682f6b185f4541d680d8" translate="yes" xml:space="preserve">
          <source>GCC does not provide the library facilities required only of hosted implementations, nor yet all the facilities required by C99 of freestanding implementations on all platforms. To use the facilities of a hosted environment, you need to find them elsewhere (for example, in the GNU C library). See &lt;a href=&quot;standard-libraries#Standard-Libraries&quot;&gt;Standard Libraries&lt;/a&gt;.</source>
          <target state="translated">GCC no proporciona las facilidades de biblioteca requeridas solo para implementaciones alojadas, ni todas las facilidades requeridas por C99 de implementaciones independientes en todas las plataformas. Para utilizar las instalaciones de un entorno alojado, debe encontrarlas en otro lugar (por ejemplo, en la biblioteca GNU C). Consulte &lt;a href=&quot;standard-libraries#Standard-Libraries&quot;&gt;Bibliotecas est&amp;aacute;ndar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86c923d0a51125464840f7ea1874cf6ab2974fb7" translate="yes" xml:space="preserve">
          <source>GCC does not substitute macro arguments when they appear inside of string constants. For example, the following macro in GCC</source>
          <target state="translated">El GCC no sustituye los argumentos macro cuando aparecen dentro de las constantes de la cadena.Por ejemplo,el siguiente macro en GCC</target>
        </trans-unit>
        <trans-unit id="42a91da8639ee03ec161a4bd756ad60809129b66" translate="yes" xml:space="preserve">
          <source>GCC does not support any extended integer types.</source>
          <target state="translated">El CCG no admite ningún tipo de números enteros extendidos.</target>
        </trans-unit>
        <trans-unit id="3ce5b628a549292da4090df5538cf2cd3541c673" translate="yes" xml:space="preserve">
          <source>GCC does not support using this feature with a non-static local variable since such variables do not have assembler names. If you are trying to put the variable in a particular register, see &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Explicit Register Variables&lt;/a&gt;.</source>
          <target state="translated">GCC no admite el uso de esta funci&amp;oacute;n con una variable local no est&amp;aacute;tica ya que tales variables no tienen nombres de ensamblador. Si est&amp;aacute; intentando poner la variable en un registro en particular, consulte &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Variables de registro expl&amp;iacute;citas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="057dd4b479d4087929d93c02eca9edfef895599b" translate="yes" xml:space="preserve">
          <source>GCC does not use such values.</source>
          <target state="translated">El GCC no utiliza tales valores.</target>
        </trans-unit>
        <trans-unit id="6b22e4a77b39e5fcd62364faba592ec172555481" translate="yes" xml:space="preserve">
          <source>GCC emits warnings based on this attribute by default; use</source>
          <target state="translated">GCC emite advertencias basadas en este atributo por defecto;utilice</target>
        </trans-unit>
        <trans-unit id="6213b35197bfb3bb104e08212f01a4cf35332f2f" translate="yes" xml:space="preserve">
          <source>GCC enables this option by default. If you want to force the compiler to check if a variable is referenced, regardless of whether or not optimization is turned on, use the</source>
          <target state="translated">GCC habilita esta opción por defecto.Si desea obligar al compilador a comprobar si una variable está referenciada,independientemente de si la optimización está activada o no,utilice la opción</target>
        </trans-unit>
        <trans-unit id="d7b2a859b296fb3f8914b78d7834ccf3e648a510" translate="yes" xml:space="preserve">
          <source>GCC has currently no support for non-fragile instance variables.</source>
          <target state="translated">El CCG no tiene actualmente apoyo para las variables de instancia no frágil.</target>
        </trans-unit>
        <trans-unit id="9b64961814c7627599dfb66d9541dfbc1c55e8a3" translate="yes" xml:space="preserve">
          <source>GCC has long supported variadic macros, and used a different syntax that allowed you to give a name to the variable arguments just like any other argument. Here is an example:</source>
          <target state="translated">El GCC ha apoyado durante mucho tiempo las macros variadas,y ha utilizado una sintaxis diferente que le permitía dar un nombre a los argumentos variables como cualquier otro argumento.He aquí un ejemplo:</target>
        </trans-unit>
        <trans-unit id="e677a4ecf07d49ec983c792d6fd35d17489c7528" translate="yes" xml:space="preserve">
          <source>GCC has the following spec strings built into it. Spec files can override these strings or create their own. Note that individual targets can also add their own spec strings to this list.</source>
          <target state="translated">El GCC tiene las siguientes cadenas de especificaciones incorporadas.Los archivos de especificaciones pueden anular estas cadenas o crear las suyas propias.Ten en cuenta que los objetivos individuales también pueden añadir sus propias cadenas de especificaciones a esta lista.</target>
        </trans-unit>
        <trans-unit id="ed8411601030aef9d10cc9d6209db6260f4d910d" translate="yes" xml:space="preserve">
          <source>GCC implements a limited buffer overflow protection mechanism that can prevent some buffer overflow attacks by determining the sizes of objects into which data is about to be written and preventing the writes when the size isn&amp;rsquo;t sufficient. The built-in functions described below yield the best results when used together and when optimization is enabled. For example, to detect object sizes across function boundaries or to follow pointer assignments through non-trivial control flow they rely on various optimization passes enabled with</source>
          <target state="translated">GCC implementa un mecanismo de protecci&amp;oacute;n de desbordamiento de b&amp;uacute;fer limitado que puede evitar algunos ataques de desbordamiento de b&amp;uacute;fer al determinar el tama&amp;ntilde;o de los objetos en los que se van a escribir datos y evitar las escrituras cuando el tama&amp;ntilde;o no es suficiente. Las funciones integradas que se describen a continuaci&amp;oacute;n producen los mejores resultados cuando se usan juntas y cuando la optimizaci&amp;oacute;n est&amp;aacute; habilitada. Por ejemplo, para detectar tama&amp;ntilde;os de objetos a trav&amp;eacute;s de los l&amp;iacute;mites de funciones o para seguir asignaciones de punteros a trav&amp;eacute;s de un flujo de control no trivial, se basan en varias pasadas de optimizaci&amp;oacute;n habilitadas con</target>
        </trans-unit>
        <trans-unit id="c63f8d617f5fcd74378c430997fb1de4655a5a57" translate="yes" xml:space="preserve">
          <source>GCC implements extensions for C as described in the ARM C Language Extensions (ACLE) specification, which can be found at &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&lt;/a&gt;.</source>
          <target state="translated">GCC implementa extensiones para C como se describe en la especificaci&amp;oacute;n ARM C Language Extensions (ACLE), que se puede encontrar en &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="293bbd3b2e69a9d930833e11f1b427e7997876a6" translate="yes" xml:space="preserve">
          <source>GCC implements for both C and C++ a syntactic extension to implement the &lt;code&gt;offsetof&lt;/code&gt; macro.</source>
          <target state="translated">GCC implementa para C y C ++ una extensi&amp;oacute;n sint&amp;aacute;ctica para implementar la macro &lt;code&gt;offsetof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="322077390825044afaea930b7263992ddcea81e8" translate="yes" xml:space="preserve">
          <source>GCC implements taking the address of a nested function using a technique called &lt;em&gt;trampolines&lt;/em&gt;. This technique was described in Lexical Closures for C++ (Thomas M. Breuel, USENIX C++ Conference Proceedings, October 17-21, 1988).</source>
          <target state="translated">GCC implementa tomar la direcci&amp;oacute;n de una funci&amp;oacute;n anidada usando una t&amp;eacute;cnica llamada &lt;em&gt;trampolines&lt;/em&gt; . Esta t&amp;eacute;cnica fue descrita en Lexical Closures for C ++ (Thomas M. Breuel, USENIX C ++ Conference Proceedings, 17-21 de octubre de 1988).</target>
        </trans-unit>
        <trans-unit id="239348ac99d6992297a72fcc17bd9b383a471db0" translate="yes" xml:space="preserve">
          <source>GCC implements the ARMv8-M Security Extensions as described in the ARMv8-M Security Extensions: Requirements on Development Tools Engineering Specification, which can be found at &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&lt;/a&gt;.</source>
          <target state="translated">GCC implementa las extensiones de seguridad ARMv8-M como se describe en las extensiones de seguridad ARMv8-M: requisitos en la especificaci&amp;oacute;n de ingenier&amp;iacute;a de herramientas de desarrollo, que se puede encontrar en &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc. ecm0359818 / ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c1d6efdb055c03457ac985aa41eeb676f9d1c1c" translate="yes" xml:space="preserve">
          <source>GCC implements three different semantics of declaring a function inline. One is available with</source>
          <target state="translated">El GCC implementa tres semánticas diferentes para declarar una función en línea.Una está disponible con</target>
        </trans-unit>
        <trans-unit id="16fab68e571685f848321494bfa65aa76fa12ecf" translate="yes" xml:space="preserve">
          <source>GCC includes built-in versions of many of the functions in the standard C library. These functions come in two forms: one whose names start with the &lt;code&gt;__builtin_&lt;/code&gt; prefix, and the other without. Both forms have the same type (including prototype), the same address (when their address is taken), and the same meaning as the C library functions even if you specify the</source>
          <target state="translated">GCC incluye versiones integradas de muchas de las funciones de la biblioteca C est&amp;aacute;ndar. Estas funciones vienen en dos formas: una cuyos nombres comienzan con el prefijo &lt;code&gt;__builtin_&lt;/code&gt; y la otra sin &amp;eacute;l. Ambos formularios tienen el mismo tipo (incluido el prototipo), la misma direcci&amp;oacute;n (cuando se toma su direcci&amp;oacute;n) y el mismo significado que las funciones de la biblioteca C, incluso si especifica el</target>
        </trans-unit>
        <trans-unit id="6ddb06bf023a460b3469518f6828ceb9799c46e8" translate="yes" xml:space="preserve">
          <source>GCC is incompatible with traditional C.</source>
          <target state="translated">El GCC es incompatible con el C tradicional.</target>
        </trans-unit>
        <trans-unit id="d28b24326033740593178727cd1510ca18099b74" translate="yes" xml:space="preserve">
          <source>GCC is only limited by available memory.</source>
          <target state="translated">El GCC sólo está limitado por la memoria disponible.</target>
        </trans-unit>
        <trans-unit id="e1b7ed70d92a385236df81656270c5df961819cc" translate="yes" xml:space="preserve">
          <source>GCC needs to install corrected versions of some system header files. This is because most target systems have some header files that won&amp;rsquo;t work with GCC unless they are changed. Some have bugs, some are incompatible with ISO C, and some depend on special features of other compilers.</source>
          <target state="translated">GCC necesita instalar versiones corregidas de algunos archivos de encabezado del sistema. Esto se debe a que la mayor&amp;iacute;a de los sistemas de destino tienen algunos archivos de encabezado que no funcionar&amp;aacute;n con GCC a menos que se modifiquen. Algunos tienen errores, otros son incompatibles con ISO C y algunos dependen de caracter&amp;iacute;sticas especiales de otros compiladores.</target>
        </trans-unit>
        <trans-unit id="6fec00d5e695a6ba7008f039024af2f2354b9175" translate="yes" xml:space="preserve">
          <source>GCC no longer supports DWARF Version 1, which is substantially different than Version 2 and later. For historical reasons, some other DWARF-related options such as</source>
          <target state="translated">El GCC ya no soporta la versión 1 de DWARF,que es sustancialmente diferente de la versión 2 y posteriores.Por razones históricas,algunas otras opciones relacionadas con DWARF como</target>
        </trans-unit>
        <trans-unit id="9571fcf4d32ba7634429d5420351196a13337bf1" translate="yes" xml:space="preserve">
          <source>GCC normally defines &lt;code&gt;__STDC__&lt;/code&gt; to be 1, and in addition defines &lt;code&gt;__STRICT_ANSI__&lt;/code&gt; if you specify the</source>
          <target state="translated">GCC normalmente define &lt;code&gt;__STDC__&lt;/code&gt; como 1, y adem&amp;aacute;s define &lt;code&gt;__STRICT_ANSI__&lt;/code&gt; si especifica el</target>
        </trans-unit>
        <trans-unit id="d2a04d28db5bb4fd272285d6f2261f1af937b1aa" translate="yes" xml:space="preserve">
          <source>GCC normally generates special code to handle certain built-in functions more efficiently; for instance, calls to &lt;code&gt;alloca&lt;/code&gt; may become single instructions which adjust the stack directly, and calls to &lt;code&gt;memcpy&lt;/code&gt; may become inline copy loops. The resulting code is often both smaller and faster, but since the function calls no longer appear as such, you cannot set a breakpoint on those calls, nor can you change the behavior of the functions by linking with a different library. In addition, when a function is recognized as a built-in function, GCC may use information about that function to warn about problems with calls to that function, or to generate more efficient code, even if the resulting code still contains calls to that function. For example, warnings are given with</source>
          <target state="translated">GCC normalmente genera c&amp;oacute;digo especial para manejar ciertas funciones integradas de manera m&amp;aacute;s eficiente; por ejemplo, las llamadas a &lt;code&gt;alloca&lt;/code&gt; pueden convertirse en instrucciones &amp;uacute;nicas que ajustan la pila directamente, y las llamadas a &lt;code&gt;memcpy&lt;/code&gt; pueden convertirse en bucles de copia en l&amp;iacute;nea. El c&amp;oacute;digo resultante suele ser m&amp;aacute;s peque&amp;ntilde;o y m&amp;aacute;s r&amp;aacute;pido, pero dado que las llamadas a la funci&amp;oacute;n ya no aparecen como tales, no puede establecer un punto de interrupci&amp;oacute;n en esas llamadas, ni puede cambiar el comportamiento de las funciones vinculando con una biblioteca diferente. Adem&amp;aacute;s, cuando una funci&amp;oacute;n se reconoce como una funci&amp;oacute;n incorporada, GCC puede usar informaci&amp;oacute;n sobre esa funci&amp;oacute;n para advertir sobre problemas con las llamadas a esa funci&amp;oacute;n, o para generar un c&amp;oacute;digo m&amp;aacute;s eficiente, incluso si el c&amp;oacute;digo resultante todav&amp;iacute;a contiene llamadas a esa funci&amp;oacute;n. . Por ejemplo, las advertencias se dan con</target>
        </trans-unit>
        <trans-unit id="7e6e1ac548faaad8ae2131d82037c03b74f72b7e" translate="yes" xml:space="preserve">
          <source>GCC normally makes string constants read-only. If several identical-looking string constants are used, GCC stores only one copy of the string.</source>
          <target state="translated">El GCC normalmente hace constantes de cadena de sólo lectura.Si se utilizan varias constantes de cadena de aspecto idéntico,GCC almacena sólo una copia de la cadena.</target>
        </trans-unit>
        <trans-unit id="11a713f18e4fa0802eb282a6537925d48c0259a3" translate="yes" xml:space="preserve">
          <source>GCC normally uses a single instruction to load values from the GOT. While this is relatively efficient, it only works if the GOT is smaller than about 64k. Anything larger causes the linker to report an error such as:</source>
          <target state="translated">El GCC normalmente utiliza una sola instrucción para cargar los valores del GOT.Aunque esto es relativamente eficiente,sólo funciona si el GOT es más pequeño que unos 64k.Cualquier cosa más grande hace que el enlazador reporte un error como:</target>
        </trans-unit>
        <trans-unit id="be424d75f5ffc48b72e433597659af0ae3069a92" translate="yes" xml:space="preserve">
          <source>GCC option.</source>
          <target state="translated">Opción GCC.</target>
        </trans-unit>
        <trans-unit id="0cb280cc3350dd85b51b4e6912bba246b1815ba4" translate="yes" xml:space="preserve">
          <source>GCC permits a C structure to have no members:</source>
          <target state="translated">El GCC permite que una estructura C no tenga miembros:</target>
        </trans-unit>
        <trans-unit id="410ccd5268fc842081ec500688897d4eab9d507c" translate="yes" xml:space="preserve">
          <source>GCC provides a couple of special builtin functions to aid in the writing of interrupt handlers in C.</source>
          <target state="translated">GCC proporciona un par de funciones especiales incorporadas para ayudar en la escritura de los manejadores de interrupción en C.</target>
        </trans-unit>
        <trans-unit id="9a84666be4b2834544f27c65de6a453c576dd60a" translate="yes" xml:space="preserve">
          <source>GCC provides a large number of built-in functions other than the ones mentioned above. Some of these are for internal use in the processing of exceptions or variable-length argument lists and are not documented here because they may change from time to time; we do not recommend general use of these functions.</source>
          <target state="translated">El CCG proporciona un gran número de funciones incorporadas además de las mencionadas anteriormente.Algunas de ellas son de uso interno en el procesamiento de excepciones o listas de argumentos de longitud variable y no se documentan aquí porque pueden cambiar de vez en cuando;no recomendamos el uso general de estas funciones.</target>
        </trans-unit>
        <trans-unit id="dd6c408349b302ebed79b324cb6148ad8750cb77" translate="yes" xml:space="preserve">
          <source>GCC provides an interface for the PowerPC family of processors to access the AltiVec operations described in Motorola&amp;rsquo;s AltiVec Programming Interface Manual. The interface is made available by including &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; and using</source>
          <target state="translated">GCC proporciona una interfaz para que la familia de procesadores PowerPC acceda a las operaciones de AltiVec descritas en el Manual de interfaz de programaci&amp;oacute;n AltiVec de Motorola. La interfaz est&amp;aacute; disponible al incluir &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; y usar</target>
        </trans-unit>
        <trans-unit id="f17fd1e9e7781f60f577293ffbb0fbe50f2aa38c" translate="yes" xml:space="preserve">
          <source>GCC provides an interface to selected machine instructions from the picoChip instruction set.</source>
          <target state="translated">El GCC proporciona una interfaz para las instrucciones de máquinas seleccionadas del conjunto de instrucciones del picoChip.</target>
        </trans-unit>
        <trans-unit id="5ddbeccb51a8011bd71cee78329676c8768e012d" translate="yes" xml:space="preserve">
          <source>GCC provides built-in versions of the ISO C99 floating-point comparison macros that avoid raising exceptions for unordered operands. They have the same names as the standard macros ( &lt;code&gt;isgreater&lt;/code&gt;, &lt;code&gt;isgreaterequal&lt;/code&gt;, &lt;code&gt;isless&lt;/code&gt;, &lt;code&gt;islessequal&lt;/code&gt;, &lt;code&gt;islessgreater&lt;/code&gt;, and &lt;code&gt;isunordered&lt;/code&gt;) , with &lt;code&gt;__builtin_&lt;/code&gt; prefixed. We intend for a library implementor to be able to simply &lt;code&gt;#define&lt;/code&gt; each standard macro to its built-in equivalent. In the same fashion, GCC provides &lt;code&gt;fpclassify&lt;/code&gt;, &lt;code&gt;isfinite&lt;/code&gt;, &lt;code&gt;isinf_sign&lt;/code&gt;, &lt;code&gt;isnormal&lt;/code&gt; and &lt;code&gt;signbit&lt;/code&gt; built-ins used with &lt;code&gt;__builtin_&lt;/code&gt; prefixed. The &lt;code&gt;isinf&lt;/code&gt; and &lt;code&gt;isnan&lt;/code&gt; built-in functions appear both with and without the &lt;code&gt;__builtin_&lt;/code&gt; prefix.</source>
          <target state="translated">GCC proporciona versiones integradas de las macros de comparaci&amp;oacute;n de punto flotante ISO C99 que evitan generar excepciones para operandos desordenados. Ellos tienen los mismos nombres que las macros est&amp;aacute;ndar ( &lt;code&gt;isgreater&lt;/code&gt; , &lt;code&gt;isgreaterequal&lt;/code&gt; , &lt;code&gt;isless&lt;/code&gt; , &lt;code&gt;islessequal&lt;/code&gt; , &lt;code&gt;islessgreater&lt;/code&gt; y &lt;code&gt;isunordered&lt;/code&gt; ), con &lt;code&gt;__builtin_&lt;/code&gt; prefijado. Pretendemos que un implementador de bibliotecas pueda simplemente &lt;code&gt;#define&lt;/code&gt; cada macro est&amp;aacute;ndar a su equivalente incorporado. De la misma manera, GCC proporciona &lt;code&gt;fpclassify&lt;/code&gt; , &lt;code&gt;isfinite&lt;/code&gt; , &lt;code&gt;isinf_sign&lt;/code&gt; , &lt;code&gt;isnormal&lt;/code&gt; y &lt;code&gt;signbit&lt;/code&gt; incorporados utilizados con el prefijo &lt;code&gt;__builtin_&lt;/code&gt; . Las &lt;code&gt;isinf&lt;/code&gt; &lt;code&gt;isnan&lt;/code&gt; isinf e isnan aparecen con y sin el prefijo &lt;code&gt;__builtin_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2050dfe83adc5c7628805205b83a18bf6445e1ea" translate="yes" xml:space="preserve">
          <source>GCC provides extensions for the SPU processor as described in the Sony/Toshiba/IBM SPU Language Extensions Specification. GCC&amp;rsquo;s implementation differs in several ways.</source>
          <target state="translated">GCC proporciona extensiones para el procesador SPU como se describe en la Especificaci&amp;oacute;n de extensiones de idioma de Sony / Toshiba / IBM SPU. La implementaci&amp;oacute;n de GCC difiere de varias maneras.</target>
        </trans-unit>
        <trans-unit id="e32059373d4f323b9500c52b6c9f30c837d92c67" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access certain instructions of the TI C6X processors. These intrinsics, listed below, are available after inclusion of the &lt;code&gt;c6x_intrinsics.h&lt;/code&gt; header file. They map directly to C6X instructions.</source>
          <target state="translated">GCC proporciona elementos intr&amp;iacute;nsecos para acceder a ciertas instrucciones de los procesadores TI C6X. Estos elementos intr&amp;iacute;nsecos, que se enumeran a continuaci&amp;oacute;n, est&amp;aacute;n disponibles despu&amp;eacute;s de la inclusi&amp;oacute;n del archivo de encabezado &lt;code&gt;c6x_intrinsics.h&lt;/code&gt; . Se asignan directamente a las instrucciones de C6X.</target>
        </trans-unit>
        <trans-unit id="4b78e24ee2fcd774983a8458d70a096c1f01f9ae" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access every instruction of the TILE-Gx processor. The intrinsics are of the form:</source>
          <target state="translated">El GCC proporciona acceso intrínseco a todas las instrucciones del procesador TILE-Gx.Los intrínsecos son de la forma:</target>
        </trans-unit>
        <trans-unit id="9929eef1ea9191b05967ff4d40ec8ba33acf1914" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access every instruction of the TILEPro processor. The intrinsics are of the form:</source>
          <target state="translated">El GCC proporciona acceso intrínseco a todas las instrucciones del procesador TILEPro.Los intrínsecos son de la forma:</target>
        </trans-unit>
        <trans-unit id="ce1f47a40b55c4bca6e7d75e5dd0559de5a981c1" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access the SIMD instructions provided by the MSA MIPS SIMD Architecture. The interface is made available by including &lt;code&gt;&amp;lt;msa.h&amp;gt;&lt;/code&gt; and using</source>
          <target state="translated">GCC proporciona elementos intr&amp;iacute;nsecos para acceder a las instrucciones SIMD proporcionadas por la arquitectura MSA MIPS SIMD. La interfaz est&amp;aacute; disponible al incluir &lt;code&gt;&amp;lt;msa.h&amp;gt;&lt;/code&gt; y usar</target>
        </trans-unit>
        <trans-unit id="40749dfbc24dc6f5a0b131fccc39dc31c09ec61c" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access the SIMD instructions provided by the ST Microelectronics Loongson-2E and -2F processors. These intrinsics, available after inclusion of the &lt;code&gt;loongson.h&lt;/code&gt; header file, operate on the following 64-bit vector types:</source>
          <target state="translated">GCC proporciona elementos intr&amp;iacute;nsecos para acceder a las instrucciones SIMD proporcionadas por los procesadores ST Microelectronics Loongson-2E y -2F. Estos elementos intr&amp;iacute;nsecos, disponibles despu&amp;eacute;s de la inclusi&amp;oacute;n del archivo de encabezado &lt;code&gt;loongson.h&lt;/code&gt; , operan en los siguientes tipos de vectores de 64 bits:</target>
        </trans-unit>
        <trans-unit id="924dd6007d38ce7b6e1d6cc29626f87cdabebfe1" translate="yes" xml:space="preserve">
          <source>GCC provides many FR-V-specific built-in functions. In general, these functions are intended to be compatible with those described by FR-V Family, Softune C/C++ Compiler Manual (V6), Fujitsu Semiconductor. The two exceptions are &lt;code&gt;__MDUNPACKH&lt;/code&gt; and &lt;code&gt;__MBTOHE&lt;/code&gt;, the GCC forms of which pass 128-bit values by pointer rather than by value.</source>
          <target state="translated">GCC proporciona muchas funciones integradas espec&amp;iacute;ficas de FR-V. En general, estas funciones est&amp;aacute;n destinadas a ser compatibles con las descritas por FR-V Family, Softune C / C ++ Compiler Manual (V6), Fujitsu Semiconductor. Las dos excepciones son &lt;code&gt;__MDUNPACKH&lt;/code&gt; y &lt;code&gt;__MBTOHE&lt;/code&gt; , cuyas formas GCC pasan valores de 128 bits por puntero en lugar de por valor.</target>
        </trans-unit>
        <trans-unit id="9e2fa02f56a7975c68bfa6e70c41727409fe7b0c" translate="yes" xml:space="preserve">
          <source>GCC provides other MIPS-specific built-in functions:</source>
          <target state="translated">El GCC proporciona otras funciones incorporadas específicas de MIPS:</target>
        </trans-unit>
        <trans-unit id="c10a95a94bae56390209bcb97b207903625a1bc4" translate="yes" xml:space="preserve">
          <source>GCC provides the built-in functions &lt;code&gt;__builtin_setjmp&lt;/code&gt; and &lt;code&gt;__builtin_longjmp&lt;/code&gt; which are similar to, but not interchangeable with, the C library functions &lt;code&gt;setjmp&lt;/code&gt; and &lt;code&gt;longjmp&lt;/code&gt;. The built-in versions are used internally by GCC&amp;rsquo;s libraries to implement exception handling on some targets. You should use the standard C library functions declared in &lt;code&gt;&amp;lt;setjmp.h&amp;gt;&lt;/code&gt; in user code instead of the builtins.</source>
          <target state="translated">GCC proporciona las funciones &lt;code&gt;__builtin_setjmp&lt;/code&gt; y &lt;code&gt;__builtin_longjmp&lt;/code&gt; que son similares, pero no intercambiables con, las funciones de la biblioteca C &lt;code&gt;setjmp&lt;/code&gt; y &lt;code&gt;longjmp&lt;/code&gt; . Las versiones integradas son utilizadas internamente por las bibliotecas de GCC para implementar el manejo de excepciones en algunos objetivos. Debe usar las funciones de la biblioteca C est&amp;aacute;ndar declaradas en &lt;code&gt;&amp;lt;setjmp.h&amp;gt;&lt;/code&gt; en el c&amp;oacute;digo de usuario en lugar de las funciones integradas.</target>
        </trans-unit>
        <trans-unit id="9735e9559d39719652bb957e983b7d2a3d2f7126" translate="yes" xml:space="preserve">
          <source>GCC provides three magic constants that hold the name of the current function as a string. In C++11 and later modes, all three are treated as constant expressions and can be used in &lt;code&gt;constexpr&lt;/code&gt; constexts. The first of these constants is &lt;code&gt;__func__&lt;/code&gt;, which is part of the C99 standard:</source>
          <target state="translated">GCC proporciona tres constantes m&amp;aacute;gicas que contienen el nombre de la funci&amp;oacute;n actual como una cadena. En C ++ 11 y modos posteriores, los tres se tratan como expresiones constantes y se pueden usar en &lt;code&gt;constexpr&lt;/code&gt; constexts. La primera de estas constantes es &lt;code&gt;__func__&lt;/code&gt; , que es parte del est&amp;aacute;ndar C99:</target>
        </trans-unit>
        <trans-unit id="2948277f494886df96fe31449754e2666c1dabe5" translate="yes" xml:space="preserve">
          <source>GCC provides two interfaces for accessing the Hardware Transactional Memory (HTM) instructions available on some of the PowerPC family of processors (eg, POWER8). The two interfaces come in a low level interface, consisting of built-in functions specific to PowerPC and a higher level interface consisting of inline functions that are common between PowerPC and S/390.</source>
          <target state="translated">GCC proporciona dos interfaces para acceder a las instrucciones de la Memoria Transaccional de Hardware (HTM)disponibles en algunos de los procesadores de la familia PowerPC (por ejemplo,POWER8).Las dos interfaces vienen en una interfaz de bajo nivel,que consiste en funciones incorporadas específicas de PowerPC y una interfaz de nivel superior que consiste en funciones en línea que son comunes entre PowerPC y S/390.</target>
        </trans-unit>
        <trans-unit id="0504373821c4265dbbe47258f3675e81d3bda382" translate="yes" xml:space="preserve">
          <source>GCC searches for the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29e392d59a7180cc6e4238e88b7157ffcf6417f" translate="yes" xml:space="preserve">
          <source>GCC stands for &amp;ldquo;GNU Compiler Collection&amp;rdquo;. GCC is an integrated distribution of compilers for several major programming languages. These languages currently include C, C++, Objective-C, Objective-C++, Fortran, Ada, D, Go, and BRIG (HSAIL).</source>
          <target state="translated">GCC son las siglas de &quot;GNU Compiler Collection&quot;. GCC es una distribuci&amp;oacute;n integrada de compiladores para varios lenguajes de programaci&amp;oacute;n importantes. Estos lenguajes incluyen actualmente C, C ++, Objective-C, Objective-C ++, Fortran, Ada, D, Go y BRIG (HSAIL).</target>
        </trans-unit>
        <trans-unit id="1d5a85fa7b27fa126424357ffe5ddd8aadcd2aa6" translate="yes" xml:space="preserve">
          <source>GCC support of decimal float as specified by the draft technical report is incomplete:</source>
          <target state="translated">El apoyo del CCG a la flotación decimal,tal como se especifica en el proyecto de informe técnico,es incompleto:</target>
        </trans-unit>
        <trans-unit id="28561e4b3e7debdbfb6dbdfe238413f5b85b54ce" translate="yes" xml:space="preserve">
          <source>GCC support of fixed-point types as specified by the draft technical report is incomplete:</source>
          <target state="translated">El apoyo del CCG a los tipos de punto fijo,tal como se especifica en el proyecto de informe técnico,es incompleto:</target>
        </trans-unit>
        <trans-unit id="1fa5de60932a0f2deade437763dee9d9034d0c2f" translate="yes" xml:space="preserve">
          <source>GCC supports &amp;ldquo;traditional&amp;rdquo; Objective-C (also known as &amp;ldquo;Objective-C 1.0&amp;rdquo;) and contains support for the Objective-C exception and synchronization syntax. It has also support for a number of &amp;ldquo;Objective-C 2.0&amp;rdquo; language extensions, including properties, fast enumeration (only for Objective-C), method attributes and the @optional and @required keywords in protocols. GCC supports Objective-C++ and features available in Objective-C are also available in Objective-C++.</source>
          <target state="translated">GCC soporta Objective-C &amp;ldquo;tradicional&amp;rdquo; (tambi&amp;eacute;n conocido como &amp;ldquo;Objective-C 1.0&amp;rdquo;) y contiene soporte para la sintaxis de sincronizaci&amp;oacute;n y excepci&amp;oacute;n de Objective-C. Tambi&amp;eacute;n es compatible con una serie de extensiones de lenguaje &quot;Objective-C 2.0&quot;, incluidas propiedades, enumeraci&amp;oacute;n r&amp;aacute;pida (solo para Objective-C), atributos de m&amp;eacute;todo y las palabras clave @optional y @required en protocolos. GCC es compatible con Objective-C ++ y las funciones disponibles en Objective-C tambi&amp;eacute;n est&amp;aacute;n disponibles en Objective-C ++.</target>
        </trans-unit>
        <trans-unit id="830690076ebfb70e332b381ddb9fe46655004637" translate="yes" xml:space="preserve">
          <source>GCC supports MIPS DSP operations using both the generic vector extensions (see &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Vector Extensions&lt;/a&gt;) and a collection of MIPS-specific built-in functions. Both kinds of support are enabled by the</source>
          <target state="translated">GCC admite operaciones MIPS DSP utilizando tanto las extensiones vectoriales gen&amp;eacute;ricas (consulte &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Extensiones vectoriales&lt;/a&gt; ) como una colecci&amp;oacute;n de funciones integradas espec&amp;iacute;ficas de MIPS. Ambos tipos de soporte est&amp;aacute;n habilitados por el</target>
        </trans-unit>
        <trans-unit id="8d83e55eff0bd290fe83057edfb4aff0d4da11fc" translate="yes" xml:space="preserve">
          <source>GCC supports SIMD operations on the SPARC using both the generic vector extensions (see &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Vector Extensions&lt;/a&gt;) as well as built-in functions for the SPARC Visual Instruction Set (VIS). When you use the</source>
          <target state="translated">GCC admite operaciones SIMD en SPARC utilizando tanto las extensiones vectoriales gen&amp;eacute;ricas (consulte &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Extensiones vectoriales&lt;/a&gt; ) como funciones integradas para el conjunto de instrucciones visuales (VIS) de SPARC. Cuando usa el</target>
        </trans-unit>
        <trans-unit id="76e5e7f27add586f752fd2c88bf216b480271ed7" translate="yes" xml:space="preserve">
          <source>GCC supports a &lt;code&gt;#pragma&lt;/code&gt; directive that changes the name used in assembly for a given declaration. While this pragma is supported on all platforms, it is intended primarily to provide compatibility with the Solaris system headers. This effect can also be achieved using the asm labels extension (see &lt;a href=&quot;asm-labels#Asm-Labels&quot;&gt;Asm Labels&lt;/a&gt;).</source>
          <target state="translated">GCC admite una directiva &lt;code&gt;#pragma&lt;/code&gt; que cambia el nombre usado en ensamblado para una declaraci&amp;oacute;n dada. Si bien este pragma es compatible con todas las plataformas, su objetivo principal es brindar compatibilidad con los encabezados del sistema Solaris. Este efecto tambi&amp;eacute;n se puede lograr usando la extensi&amp;oacute;n de etiquetas ASM (ver &lt;a href=&quot;asm-labels#Asm-Labels&quot;&gt;Etiquetas ASM&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="498314540c8d67676764e9f766eda8fd96a7daed" translate="yes" xml:space="preserve">
          <source>GCC supports a number of command-line options that control adding run-time instrumentation to the code it normally generates. For example, one purpose of instrumentation is collect profiling statistics for use in finding program hot spots, code coverage analysis, or profile-guided optimizations. Another class of program instrumentation is adding run-time checking to detect programming errors like invalid pointer dereferences or out-of-bounds array accesses, as well as deliberately hostile attacks such as stack smashing or C++ vtable hijacking. There is also a general hook which can be used to implement other forms of tracing or function-level instrumentation for debug or program analysis purposes.</source>
          <target state="translated">El GCC soporta una serie de opciones de línea de comando que controlan la adición de instrumentación de tiempo de ejecución al código que normalmente genera.Por ejemplo,uno de los propósitos de la instrumentación es recopilar estadísticas de perfiles para utilizarlas en la búsqueda de puntos calientes de programas,análisis de cobertura de código u optimizaciones guiadas por perfiles.Otra clase de instrumentación de programas es añadir la comprobación en tiempo de ejecución para detectar errores de programación como derivaciones de punteros inválidas o accesos a matrices fuera de límites,así como ataques deliberadamente hostiles como la destrucción de pilas o el secuestro de vtables en C++.También existe un gancho general que puede utilizarse para implementar otras formas de rastreo o instrumentación a nivel de función con fines de depuración o análisis de programas.</target>
        </trans-unit>
        <trans-unit id="1030e6dea2c81b69bdc7270b03b39b5f569ad6fa" translate="yes" xml:space="preserve">
          <source>GCC supports a variant of the o32 ABI in which floating-point registers are 64 rather than 32 bits wide. You can select this combination with</source>
          <target state="translated">El GCC soporta una variante de la ABI o32 en la que los registros de punto flotante tienen 64 en lugar de 32 bits de ancho.Puede seleccionar esta combinación con</target>
        </trans-unit>
        <trans-unit id="c3965449e7a5dc4d5ed8a9dc3199dec909c35dc5" translate="yes" xml:space="preserve">
          <source>GCC supports only two&amp;rsquo;s complement integer types, and all bit patterns are ordinary values.</source>
          <target state="translated">GCC solo admite tipos enteros en complemento a dos, y todos los patrones de bits son valores ordinarios.</target>
        </trans-unit>
        <trans-unit id="83dd0c21621e0a6e0dd523c863cbfaef04449bd4" translate="yes" xml:space="preserve">
          <source>GCC supports paired-single operations using both the generic vector extensions (see &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Vector Extensions&lt;/a&gt;) and a collection of MIPS-specific built-in functions. Both kinds of support are enabled by the</source>
          <target state="translated">GCC admite operaciones emparejadas-individuales utilizando tanto las extensiones vectoriales gen&amp;eacute;ricas (consulte &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Extensiones vectoriales&lt;/a&gt; ) como una colecci&amp;oacute;n de funciones integradas espec&amp;iacute;ficas de MIPS. Ambos tipos de soporte est&amp;aacute;n habilitados por el</target>
        </trans-unit>
        <trans-unit id="b55fc398fe2655fec7265522ba909be632a50b88" translate="yes" xml:space="preserve">
          <source>GCC supports several types of pragmas, primarily in order to compile code originally written for other compilers. Note that in general we do not recommend the use of pragmas; See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;, for further explanation.</source>
          <target state="translated">GCC admite varios tipos de pragmas, principalmente para compilar c&amp;oacute;digo escrito originalmente para otros compiladores. Tenga en cuenta que, en general, no recomendamos el uso de pragmas; Consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="653525fcb8a016916ca28e1dd65b18ab8839e4b5" translate="yes" xml:space="preserve">
          <source>GCC supports some of the RX instructions which cannot be expressed in the C programming language via the use of built-in functions. The following functions are supported:</source>
          <target state="translated">El GCC soporta algunas de las instrucciones de RX que no pueden ser expresadas en el lenguaje de programación C mediante el uso de las funciones incorporadas.Se admiten las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="4b0cba78b946248aec959caf8a965144462518ce" translate="yes" xml:space="preserve">
          <source>GCC supports the D 2.0 programming language. The D language itself is currently defined by its reference implementation and supporting language specification, described at &lt;a href=&quot;https://dlang.org/spec/spec.html&quot;&gt;https://dlang.org/spec/spec.html&lt;/a&gt;.</source>
          <target state="translated">GCC admite el lenguaje de programaci&amp;oacute;n D 2.0. El lenguaje D en s&amp;iacute; est&amp;aacute; actualmente definido por su implementaci&amp;oacute;n de referencia y la especificaci&amp;oacute;n del lenguaje de soporte, descrita en &lt;a href=&quot;https://dlang.org/spec/spec.html&quot;&gt;https://dlang.org/spec/spec.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="359d53772696a2b7864fe27fe3565593d8a4b28c" translate="yes" xml:space="preserve">
          <source>GCC supports the following AVR devices and ISAs:</source>
          <target state="translated">El GCC es compatible con los siguientes dispositivos AVR e ISA:</target>
        </trans-unit>
        <trans-unit id="2ea7c76cda0c4fbb899bd829aa15b4c8a69297f6" translate="yes" xml:space="preserve">
          <source>GCC supports the original ISO C++ standard published in 1998, and the 2011 and 2014 revisions.</source>
          <target state="translated">El GCC apoya la norma ISO C++original publicada en 1998,y las revisiones de 2011 y 2014.</target>
        </trans-unit>
        <trans-unit id="858a69c7492112ce45741ecc79e61821fd61a803" translate="yes" xml:space="preserve">
          <source>GCC supports these options when compiling for C-SKY V2 processors.</source>
          <target state="translated">El GCC apoya estas opciones al compilar para los procesadores C-SKY V2.</target>
        </trans-unit>
        <trans-unit id="0dc67ad6d4b46256a65720385ae1177b91b75554" translate="yes" xml:space="preserve">
          <source>GCC supports two forms of SVE code generation: &amp;ldquo;vector-length agnostic&amp;rdquo; output that works with any size of vector register and &amp;ldquo;vector-length specific&amp;rdquo; output that allows GCC to make assumptions about the vector length when it is useful for optimization reasons. The possible values of &amp;lsquo;</source>
          <target state="translated">GCC admite dos formas de generaci&amp;oacute;n de c&amp;oacute;digo SVE: salida &amp;ldquo;agn&amp;oacute;stica de longitud vectorial&amp;rdquo; que funciona con cualquier tama&amp;ntilde;o de registro vectorial y salida &amp;ldquo;espec&amp;iacute;fica de longitud vectorial&amp;rdquo; que permite a GCC hacer suposiciones sobre la longitud del vector cuando es &amp;uacute;til por motivos de optimizaci&amp;oacute;n. Los posibles valores de '</target>
        </trans-unit>
        <trans-unit id="5b3ded850043ac176423c8bd10dd3fbbab6dc5cd" translate="yes" xml:space="preserve">
          <source>GCC treats all characters of identifiers as significant. According to K&amp;amp;R-1 (2.2), &amp;ldquo;No more than the first eight characters are significant, although more may be used.&amp;rdquo;. Also according to K&amp;amp;R-1 (2.2), &amp;ldquo;An identifier is a sequence of letters and digits; the first character must be a letter. The underscore _ counts as a letter.&amp;rdquo;, but GCC also allows dollar signs in identifiers.</source>
          <target state="translated">GCC trata todos los caracteres de los identificadores como significativos. Seg&amp;uacute;n K &amp;amp; R-1 (2.2), &amp;ldquo;No m&amp;aacute;s de los primeros ocho caracteres son significativos, aunque se pueden usar m&amp;aacute;s&amp;rdquo;. Tambi&amp;eacute;n de acuerdo con K &amp;amp; R-1 (2.2), &amp;ldquo;Un identificador es una secuencia de letras y d&amp;iacute;gitos; el primer car&amp;aacute;cter debe ser una letra. El gui&amp;oacute;n bajo _ cuenta como una letra &amp;rdquo;, pero GCC tambi&amp;eacute;n permite signos de d&amp;oacute;lar en los identificadores.</target>
        </trans-unit>
        <trans-unit id="feaee8cb866302ba1b5ec59a1ce37d673602a1f3" translate="yes" xml:space="preserve">
          <source>GCC uses &lt;var&gt;name&lt;/var&gt; to determine what kind of instructions it can emit when generating assembly code (as if by</source>
          <target state="translated">GCC usa el &lt;var&gt;name&lt;/var&gt; para determinar qu&amp;eacute; tipo de instrucciones puede emitir al generar c&amp;oacute;digo ensamblador (como si</target>
        </trans-unit>
        <trans-unit id="66e1ddf3758925ad2362fd6f220c229932999055" translate="yes" xml:space="preserve">
          <source>GCC uses &lt;var&gt;name&lt;/var&gt; to determine what kind of instructions it can emit when generating assembly code. If</source>
          <target state="translated">GCC usa el &lt;var&gt;name&lt;/var&gt; para determinar qu&amp;eacute; tipo de instrucciones puede emitir al generar c&amp;oacute;digo ensamblador. Si</target>
        </trans-unit>
        <trans-unit id="813ae2789d4b6769128e82ee496ab87522d87f2b" translate="yes" xml:space="preserve">
          <source>GCC uses a garbage collector to manage its own memory allocation. This parameter specifies the minimum percentage by which the garbage collector&amp;rsquo;s heap should be allowed to expand between collections. Tuning this may improve compilation speed; it has no effect on code generation.</source>
          <target state="translated">GCC utiliza un recolector de basura para administrar su propia asignaci&amp;oacute;n de memoria. Este par&amp;aacute;metro especifica el porcentaje m&amp;iacute;nimo por el cual se debe permitir que el mont&amp;oacute;n del recolector de basura se expanda entre colecciones. Ajustar esto puede mejorar la velocidad de compilaci&amp;oacute;n; no tiene ning&amp;uacute;n efecto sobre la generaci&amp;oacute;n de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="ae9ac11b129e57b155bc25157be869b1b76e80ad" translate="yes" xml:space="preserve">
          <source>GCC uses corrected versions of system header files. This is necessary, but doesn&amp;rsquo;t always work smoothly.</source>
          <target state="translated">GCC utiliza versiones corregidas de los archivos de encabezado del sistema. Esto es necesario, pero no siempre funciona correctamente.</target>
        </trans-unit>
        <trans-unit id="819a72ed7eaf70f991d756c9fa760994a62ab526" translate="yes" xml:space="preserve">
          <source>GCC uses heuristics to guess branch probabilities if they are not provided by profiling feedback (</source>
          <target state="translated">El CCG utiliza la heurística para adivinar las probabilidades de las ramas si no se proporcionan mediante la retroalimentación del perfil (</target>
        </trans-unit>
        <trans-unit id="1a8376e3c4e7645e0b124141064b06d15d9df6a1" translate="yes" xml:space="preserve">
          <source>GCC uses the system C library, which might not be compliant with the ISO C standard.</source>
          <target state="translated">El GCC utiliza la biblioteca del sistema C,que podría no cumplir con la norma ISO C.</target>
        </trans-unit>
        <trans-unit id="ca6cd448f1a33799ac2da1a0d9dfa000cd6841ec" translate="yes" xml:space="preserve">
          <source>GCC will not inline any functions if the</source>
          <target state="translated">El GCC no pondrá en línea ninguna función si el</target>
        </trans-unit>
        <trans-unit id="8a47996357771546a1d05e5991be4fe03520b6e5" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s default behavior is to emit all inline functions with the &lt;code&gt;dllexport&lt;/code&gt; attribute. Since this can cause object file-size bloat, you can use</source>
          <target state="translated">El comportamiento predeterminado de GCC es emitir todas las funciones en l&amp;iacute;nea con el atributo &lt;code&gt;dllexport&lt;/code&gt; . Dado que esto puede causar un aumento del tama&amp;ntilde;o del archivo del objeto, puede usar</target>
        </trans-unit>
        <trans-unit id="af8e45be98e36024842dc1bd8893718108d0574b" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s implementation of the high-level language interface available from C and C++ code differs from Motorola&amp;rsquo;s documentation in several ways.</source>
          <target state="translated">La implementaci&amp;oacute;n de GCC de la interfaz de lenguaje de alto nivel disponible en el c&amp;oacute;digo C y C ++ difiere de la documentaci&amp;oacute;n de Motorola en varios aspectos.</target>
        </trans-unit>
        <trans-unit id="e78ca1e1182b55c5bde4b195b5d85015058a98d0" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s optimizers do not treat this code like the non-volatile code in the earlier examples. They do not move it out of loops or omit it on the assumption that the result from a previous call is still valid.</source>
          <target state="translated">Los optimizadores de GCC no tratan este c&amp;oacute;digo como el c&amp;oacute;digo no vol&amp;aacute;til de los ejemplos anteriores. No lo sacan de los bucles ni lo omiten asumiendo que el resultado de una llamada anterior sigue siendo v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="dbc61f28ee0b681eff97897cb82a2c8d282dc076" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s optimizers sometimes discard &lt;code&gt;asm&lt;/code&gt; statements if they determine there is no need for the output variables. Also, the optimizers may move code out of loops if they believe that the code will always return the same result (i.e. none of its input values change between calls). Using the &lt;code&gt;volatile&lt;/code&gt; qualifier disables these optimizations. &lt;code&gt;asm&lt;/code&gt; statements that have no output operands, including &lt;code&gt;asm goto&lt;/code&gt; statements, are implicitly volatile.</source>
          <target state="translated">Los optimizadores de GCC a veces descartan declaraciones &lt;code&gt;asm&lt;/code&gt; si determinan que no hay necesidad de las variables de salida. Adem&amp;aacute;s, los optimizadores pueden sacar el c&amp;oacute;digo de los bucles si creen que el c&amp;oacute;digo siempre devolver&amp;aacute; el mismo resultado (es decir, ninguno de sus valores de entrada cambia entre llamadas). El uso del calificador &lt;code&gt;volatile&lt;/code&gt; desactiva estas optimizaciones. &lt;code&gt;asm&lt;/code&gt; sentencias asm que no tienen operandos de salida, incluidas las &lt;code&gt;asm goto&lt;/code&gt; , son impl&amp;iacute;citamente vol&amp;aacute;tiles.</target>
        </trans-unit>
        <trans-unit id="1e750d3c829a6b818589899b42ede982312a7f98" translate="yes" xml:space="preserve">
          <source>GCOV_ERROR_FILE</source>
          <target state="translated">GCOV_ERROR_FILE</target>
        </trans-unit>
        <trans-unit id="e485aa772b73ea7b58dcf4966c0a2d3b9c745805" translate="yes" xml:space="preserve">
          <source>GCOV_EXIT_AT_ERROR</source>
          <target state="translated">GCOV_EXIT_AT_ERROR</target>
        </trans-unit>
        <trans-unit id="80aecc9b56754f32438dd132183cddc7e4df32f1" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX contains the prefix to add to the absolute paths in the object file. Prefix can be absolute, or relative. The default is no prefix.</source>
          <target state="translated">GCOV_PREFIX contiene el prefijo para añadir a las rutas absolutas en el archivo de objeto.El prefijo puede ser absoluto o relativo.El valor por defecto es sin prefijo.</target>
        </trans-unit>
        <trans-unit id="891aee4538b1a332bb00b85c9e7c43d1cf40d1d1" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX=/target/run</source>
          <target state="translated">GCOV_PREFIX=/target/run</target>
        </trans-unit>
        <trans-unit id="f0bcf8de4466a3194e31ce81577ad85f4f449ccb" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX_STRIP indicates the how many initial directory names to strip off the hardwired absolute paths. Default value is 0.</source>
          <target state="translated">GCOV_PREFIX_STRIP indica el número de nombres de directorios iniciales para quitar las rutas absolutas cableadas.El valor por defecto es 0.</target>
        </trans-unit>
        <trans-unit id="7069713a73584b12e5e1b6c6673abb78172fe103" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX_STRIP=1</source>
          <target state="translated">GCOV_PREFIX_STRIP=1</target>
        </trans-unit>
        <trans-unit id="a007084938316d2847460b0f869fd2dab151324f" translate="yes" xml:space="preserve">
          <source>GFNI instructions.</source>
          <target state="translated">Instrucciones del GFNI.</target>
        </trans-unit>
        <trans-unit id="768001d59e5da45e8ce2de4652950a5db0123cf5" translate="yes" xml:space="preserve">
          <source>GNU C allows you to associate specific hardware registers with C variables. In almost all cases, allowing the compiler to assign registers produces the best code. However under certain unusual circumstances, more precise control over the variable storage is required.</source>
          <target state="translated">GNU C permite asociar registros de hardware específicos con variables C.En casi todos los casos,permitir que el compilador asigne registros produce el mejor código.Sin embargo,bajo ciertas circunstancias inusuales,se requiere un control más preciso sobre el almacenamiento de las variables.</target>
        </trans-unit>
        <trans-unit id="1282a7948680a82fce143391cee57deb8d315356" translate="yes" xml:space="preserve">
          <source>GNU C extends ISO C to allow a function prototype to override a later old-style non-prototype definition. Consider the following example:</source>
          <target state="translated">GNU C extiende ISO C para permitir que un prototipo de función anule una definición posterior de no-prototipo de estilo antiguo.Consideremos el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="e77e07d95404402b67fc9bef0aec0c9a34ecc38f" translate="yes" xml:space="preserve">
          <source>GNU C provides several language features not found in ISO standard C. (The</source>
          <target state="translated">GNU C proporciona varias características de lenguaje que no se encuentran en el estándar ISO C.(El</target>
        </trans-unit>
        <trans-unit id="d45fbb49066a76f230e9020bfe458e74293358d2" translate="yes" xml:space="preserve">
          <source>GNU C++ does not support old-style function definitions, so this extension is irrelevant.</source>
          <target state="translated">GNU C++no soporta definiciones de funciones de estilo antiguo,por lo que esta extensión es irrelevante.</target>
        </trans-unit>
        <trans-unit id="2ba257a10dfda1a80f343df43a5f9faccbca64b3" translate="yes" xml:space="preserve">
          <source>GNU CPP has two further variadic macro extensions, and permits them to be used with either of the above forms of macro definition.</source>
          <target state="translated">El CPP de GNU tiene otras dos extensiones de macros variadas,y permite que se utilicen con cualquiera de las formas de definición de macros mencionadas anteriormente.</target>
        </trans-unit>
        <trans-unit id="9dbaa828d6809d3452cb2a6728f3023aae5a8b22" translate="yes" xml:space="preserve">
          <source>GNU CPP permits you to completely omit the variable arguments in this way. In the above examples, the compiler would complain, though since the expansion of the macro still has the extra comma after the format string.</source>
          <target state="translated">El CPP de GNU permite omitir completamente los argumentos variables de esta manera.En los ejemplos anteriores,el compilador se quejaría,aunque como la expansión de la macro todavía tiene la coma extra después de la cadena de formato.</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">Licencia de Documentación Libre de GNU</target>
        </trans-unit>
        <trans-unit id="d9cbf0740e34d88c506fb7df6e17deeabd18660c" translate="yes" xml:space="preserve">
          <source>GNU General Public License</source>
          <target state="translated">Licencia Pública General de GNU</target>
        </trans-unit>
        <trans-unit id="ea5447d52819458fc788d8fe66484dcf6f8b58c5" translate="yes" xml:space="preserve">
          <source>GNU General Public License says how you can copy and share GCC.</source>
          <target state="translated">La Licencia Pública General de GNU dice cómo puedes copiar y compartir GCC.</target>
        </trans-unit>
        <trans-unit id="a21d2651a31b14abba6b9f4cc89e6d16156a2f47" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides constant string objects that are generated directly by the compiler. You declare a constant string object by prefixing a C constant string with the character &amp;lsquo;</source>
          <target state="translated">GNU Objective-C proporciona objetos de cadena constante que son generados directamente por el compilador. Usted declara un objeto de cadena constante anteponiendo una cadena constante C con el car&amp;aacute;cter '</target>
        </trans-unit>
        <trans-unit id="d4b0f24c5578d309a3a80bcf9db1efef7dc80491" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides exception support built into the language, as in the following example:</source>
          <target state="translated">GNU Objective-C proporciona soporte de excepciones incorporado en el lenguaje,como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="183b8b6fa7f0ebe7cc24b6e6b64ea37e46538bc2" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides support for synchronized blocks:</source>
          <target state="translated">GNU Objective-C proporciona soporte para bloques sincronizados:</target>
        </trans-unit>
        <trans-unit id="5a76f04c435b8a53e2673208f47df13d27337155" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides support for the fast enumeration syntax:</source>
          <target state="translated">GNU Objective-C proporciona soporte para la sintaxis de enumeración rápida:</target>
        </trans-unit>
        <trans-unit id="bd8453bc7fd0b5c5a5eb0b2fb1cc7653d6106ce4" translate="yes" xml:space="preserve">
          <source>GNU Objective-C runtime features.</source>
          <target state="translated">Características del tiempo de ejecución de GNU Objective-C.</target>
        </trans-unit>
        <trans-unit id="dc4139cbd1ca2e4ec1fdbaf154a309856bbea2a6" translate="yes" xml:space="preserve">
          <source>GNU Objective-C supports the &lt;code&gt;@encode&lt;/code&gt; syntax that allows you to create a type encoding from a C/Objective-C type. For example, &lt;code&gt;@encode(int)&lt;/code&gt; is compiled by the compiler into &lt;code&gt;&quot;i&quot;&lt;/code&gt;.</source>
          <target state="translated">GNU Objective-C admite la sintaxis &lt;code&gt;@encode&lt;/code&gt; que le permite crear una codificaci&amp;oacute;n de tipo a partir de un tipo C / Objective-C. Por ejemplo, &lt;code&gt;@encode(int)&lt;/code&gt; es compilado por el compilador en &lt;code&gt;&quot;i&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72bdab580bf81d58abe49ef7feb3d22b198aca72" translate="yes" xml:space="preserve">
          <source>GNU dialect of</source>
          <target state="translated">El dialecto GNU de</target>
        </trans-unit>
        <trans-unit id="0cce44d2e046653755b9171f853b5aa7f7510c0f" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C11. The name &amp;lsquo;</source>
          <target state="translated">Dialecto GNU de ISO C11. El nombre '</target>
        </trans-unit>
        <trans-unit id="17c597be9d56a306b84e8b735a051e0b49bf682b" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C17. This is the default for C code.</source>
          <target state="translated">Dialecto GNU de ISO C17.Este es el valor por defecto para el código C.</target>
        </trans-unit>
        <trans-unit id="cd7ba84a6cf37a43cdd1bd215e060138c20d80ef" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C90 (including some C99 features).</source>
          <target state="translated">dialecto GNU de ISO C90 (incluyendo algunas características del C99).</target>
        </trans-unit>
        <trans-unit id="5a96bf0e0eb1648d92a5415bbf82f314f50fc95d" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C99. The name &amp;lsquo;</source>
          <target state="translated">Dialecto GNU de ISO C99. El nombre '</target>
        </trans-unit>
        <trans-unit id="c7513a88e6766734c8fff0b65e9260cb06e07819" translate="yes" xml:space="preserve">
          <source>GNU extensions to the C language family.</source>
          <target state="translated">Extensiones de GNU a la familia del lenguaje C.</target>
        </trans-unit>
        <trans-unit id="90b8cbfe3e7aa922a28ad77fd2468b165d25db6d" translate="yes" xml:space="preserve">
          <source>GNU extensions to the C++ language.</source>
          <target state="translated">Extensiones de GNU para el lenguaje C++.</target>
        </trans-unit>
        <trans-unit id="73a49c549f68005dbe48c29ca2788c5808080012" translate="yes" xml:space="preserve">
          <source>General purpose register if 64-bit instructions are enabled or NO_REGS.</source>
          <target state="translated">Registro de propósito general si las instrucciones de 64 bits están habilitadas o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="005c5bd36bc2dae00112330a475935d63f7703b1" translate="yes" xml:space="preserve">
          <source>General register 1</source>
          <target state="translated">Registro general 1</target>
        </trans-unit>
        <trans-unit id="b09ef9c6988403ff1cf426fea1c658c5b1f6be6e" translate="yes" xml:space="preserve">
          <source>General register &lt;code&gt;r0&lt;/code&gt; to &lt;code&gt;r3&lt;/code&gt; for &lt;code&gt;addl&lt;/code&gt; instruction</source>
          <target state="translated">Registro general &lt;code&gt;r0&lt;/code&gt; a &lt;code&gt;r3&lt;/code&gt; para instrucci&amp;oacute;n &lt;code&gt;addl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e89cc1c76441abdf1cb24c29330f5f35d304a8e7" translate="yes" xml:space="preserve">
          <source>General register, but not &lt;code&gt;r29&lt;/code&gt;, &lt;code&gt;r30&lt;/code&gt; and &lt;code&gt;r31&lt;/code&gt;</source>
          <target state="translated">Registro general, pero no &lt;code&gt;r29&lt;/code&gt; , &lt;code&gt;r30&lt;/code&gt; y &lt;code&gt;r31&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10bd548f00f5df8e11316ab27529f8ec0d489ead" translate="yes" xml:space="preserve">
          <source>General-purpose 32-bit register</source>
          <target state="translated">Registro de 32 bits de uso general</target>
        </trans-unit>
        <trans-unit id="d86490a439329533a7fda073910d458d177b7499" translate="yes" xml:space="preserve">
          <source>Generally there is no guarantee that a memory transaction ever succeeds and suitable fallback code always needs to be supplied.</source>
          <target state="translated">Por lo general,no hay garantía de que una transacción de memoria tenga éxito y siempre es necesario suministrar un código de respaldo adecuado.</target>
        </trans-unit>
        <trans-unit id="c220eb05478a76fade659e7f472b8e896908bfb7" translate="yes" xml:space="preserve">
          <source>Generally, functions are not inlined unless optimization is specified. For functions declared inline, this attribute inlines the function independent of any restrictions that otherwise apply to inlining. Failure to inline such a function is diagnosed as an error. Note that if such a function is called indirectly the compiler may or may not inline it depending on optimization level and a failure to inline an indirect call may or may not be diagnosed.</source>
          <target state="translated">Por lo general,las funciones no están en línea a menos que se especifique la optimización.En el caso de las funciones declaradas en línea,este atributo pone en línea la función independientemente de cualquier restricción que se aplique a la línea.El hecho de no poner en línea una función de este tipo se diagnostica como un error.Obsérvese que si tal función se llama indirectamente el compilador puede o no inlinearla dependiendo del nivel de optimización y un fallo en la inline de una llamada indirecta puede o no ser diagnosticado.</target>
        </trans-unit>
        <trans-unit id="84a7c319c3d7d28e18ecbf416836eecf761297c6" translate="yes" xml:space="preserve">
          <source>Generally, inlining into a function is limited. For a function marked with this attribute, every call inside this function is inlined, if possible. Functions declared with attribute &lt;code&gt;noinline&lt;/code&gt; and similar are not inlined. Whether the function itself is considered for inlining depends on its size and the current inlining parameters.</source>
          <target state="translated">Generalmente, la integraci&amp;oacute;n en una funci&amp;oacute;n es limitada. Para una funci&amp;oacute;n marcada con este atributo, cada llamada dentro de esta funci&amp;oacute;n est&amp;aacute; en l&amp;iacute;nea, si es posible. Las funciones declaradas con el atributo &lt;code&gt;noinline&lt;/code&gt; y similares no est&amp;aacute;n inline. Si la funci&amp;oacute;n en s&amp;iacute; se considera para la inserci&amp;oacute;n depende de su tama&amp;ntilde;o y de los par&amp;aacute;metros de inserci&amp;oacute;n actuales.</target>
        </trans-unit>
        <trans-unit id="da79890df831b8b599903d6736d5d918432eda2d" translate="yes" xml:space="preserve">
          <source>Generally, options specified at link time override those specified at compile time, although in some cases GCC attempts to infer link-time options from the settings used to compile the input files.</source>
          <target state="translated">Por lo general,las opciones especificadas en el momento del enlace anulan las especificadas en el momento de la compilación,aunque en algunos casos GCC intenta deducir las opciones del tiempo de enlace a partir de los ajustes utilizados para compilar los archivos de entrada.</target>
        </trans-unit>
        <trans-unit id="ba4adeb327e032d99cfca5b51d0fd4daaa9b56fc" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) ColdFire hardware divide and remainder instructions. If</source>
          <target state="translated">Generar (no generar)instrucciones de división y resto del hardware del ColdFire.Si</target>
        </trans-unit>
        <trans-unit id="0fe80a59bc1a906ccb8af3fc3416cadc3264624c" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) GP-relative accesses. The following &lt;var&gt;option&lt;/var&gt; names are recognized:</source>
          <target state="translated">Genere (no genere) accesos relativos a GP. Se reconocen los siguientes nombres de &lt;var&gt;option&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="09abd950717c564f7150fc3aedac403b36224304" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) MIPS16 code. If GCC is targeting a MIPS32 or MIPS64 architecture, it makes use of the MIPS16e ASE.</source>
          <target state="translated">Generar (no generar)el código MIPS16.Si GCC tiene como objetivo una arquitectura MIPS32 o MIPS64,utiliza el MIPS16e ASE.</target>
        </trans-unit>
        <trans-unit id="7322f1cb41e6457edd178c659eebf99bfcbafd3c" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) addressing modes using prefixed load and store instructions when the option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188ec1e266203e4853a13748340fc36d3e35234e" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code that is fully position-independent, and that can therefore be linked into shared libraries. This option only affects</source>
          <target state="translated">Generar (no generar)código que sea totalmente independiente de la posición,y que por lo tanto pueda ser vinculado a bibliotecas compartidas.Esta opción sólo afecta a</target>
        </trans-unit>
        <trans-unit id="0a056a294949b854726ab099acb14488ae9baeac" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code that is suitable for SVR4-style dynamic objects.</source>
          <target state="translated">Generar (no generar)el código adecuado para los objetos dinámicos de tipo SVR4.</target>
        </trans-unit>
        <trans-unit id="200f92cbd3d74fb5f3e648ecaaea7b69d566f040" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code that uses &lt;em&gt;base addresses&lt;/em&gt;. Using a base address automatically generates a request (handled by the assembler and the linker) for a constant to be set up in a global register. The register is used for one or more base address requests within the range 0 to 255 from the value held in the register. The generally leads to short and fast code, but the number of different data items that can be addressed is limited. This means that a program that uses lots of static data may require</source>
          <target state="translated">Genere (no genere) c&amp;oacute;digo que use &lt;em&gt;direcciones base&lt;/em&gt; . El uso de una direcci&amp;oacute;n base genera autom&amp;aacute;ticamente una solicitud (manejada por el ensamblador y el enlazador) para que se configure una constante en un registro global. El registro se utiliza para una o m&amp;aacute;s solicitudes de direcci&amp;oacute;n base dentro del rango de 0 a 255 desde el valor contenido en el registro. Generalmente conduce a un c&amp;oacute;digo corto y r&amp;aacute;pido, pero el n&amp;uacute;mero de elementos de datos diferentes que se pueden abordar es limitado. Esto significa que un programa que usa muchos datos est&amp;aacute;ticos puede requerir</target>
        </trans-unit>
        <trans-unit id="fc8c5a89f214acd8179a09f487fb87bbd0d7c872" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code to load up the static chain register (&lt;code&gt;r11&lt;/code&gt;) when calling through a pointer on AIX and 64-bit Linux systems where a function pointer points to a 3-word descriptor giving the function address, TOC value to be loaded in register &lt;code&gt;r2&lt;/code&gt;, and static chain value to be loaded in register &lt;code&gt;r11&lt;/code&gt;. The</source>
          <target state="translated">Genere (no genere) c&amp;oacute;digo para cargar el registro de cadena est&amp;aacute;tica ( &lt;code&gt;r11&lt;/code&gt; ) al llamar a trav&amp;eacute;s de un puntero en sistemas AIX y Linux de 64 bits donde un puntero de funci&amp;oacute;n apunta a un descriptor de 3 palabras que da la direcci&amp;oacute;n de la funci&amp;oacute;n, el valor de TOC debe ser cargado en el registro &lt;code&gt;r2&lt;/code&gt; y el valor de la cadena est&amp;aacute;tica que se cargar&amp;aacute; en el registro &lt;code&gt;r11&lt;/code&gt; . los</target>
        </trans-unit>
        <trans-unit id="813e9e6ca1642f726fee97bfddf02338960484b7" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code to pass structure parameters with a maximum alignment of 64 bits, for compatibility with older versions of GCC.</source>
          <target state="translated">Generar (no generar)código para pasar los parámetros de la estructura con una alineación máxima de 64 bits,para la compatibilidad con versiones anteriores de GCC.</target>
        </trans-unit>
        <trans-unit id="55cac71e3fa8543a26a5b7f404ac565adfa17f28" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code to save the TOC value in the reserved stack location in the function prologue if the function calls through a pointer on AIX and 64-bit Linux systems. If the TOC value is not saved in the prologue, it is saved just before the call through the pointer. The</source>
          <target state="translated">Generar (no generar)código para guardar el valor TOC en la ubicación de la pila reservada en el prólogo de la función si la función llama a través de un puntero en los sistemas AIX y Linux de 64 bits.Si el valor TOC no se guarda en el prólogo,se guarda justo antes de la llamada a través del puntero.El</target>
        </trans-unit>
        <trans-unit id="492f533f0926b6f12aa3c20775f6e3689bd7771b" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) microMIPS code.</source>
          <target state="translated">Generar (no generar)el código microMIPS.</target>
        </trans-unit>
        <trans-unit id="3996f10552777a166b0e49d921b421c578c5e2f7" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) pc-relative addressing when the option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38ed93b70630b073ac9de0cd53b30eca713a227" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) the &lt;code&gt;friz&lt;/code&gt; instruction when the</source>
          <target state="translated">Genere (no genere) la instrucci&amp;oacute;n &lt;code&gt;friz&lt;/code&gt; cuando el</target>
        </trans-unit>
        <trans-unit id="59dec4f42737e1a4ee2b102faf59b8bbec911145" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) the MMA instructions when the option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87be6d200ff57766f2cf75cef2026526e7116620" translate="yes" xml:space="preserve">
          <source>Generate (or do not generate) code using the &lt;code&gt;bras&lt;/code&gt; instruction to do subroutine calls. This only works reliably if the total executable size does not exceed 64k. The default is to use the &lt;code&gt;basr&lt;/code&gt; instruction instead, which does not have this limitation.</source>
          <target state="translated">Genere (o no genere) c&amp;oacute;digo usando la instrucci&amp;oacute;n &lt;code&gt;bras&lt;/code&gt; para hacer llamadas a subrutinas. Esto solo funciona de manera confiable si el tama&amp;ntilde;o ejecutable total no excede los 64k. El valor predeterminado es usar la instrucci&amp;oacute;n &lt;code&gt;basr&lt;/code&gt; en su lugar, que no tiene esta limitaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dac8cd11137e120330b4b9ae84e6593137818e9a" translate="yes" xml:space="preserve">
          <source>Generate (or do not generate) code using the &lt;code&gt;mvcle&lt;/code&gt; instruction to perform block moves. When</source>
          <target state="translated">Genere (o no genere) c&amp;oacute;digo usando la instrucci&amp;oacute;n &lt;code&gt;mvcle&lt;/code&gt; para realizar movimientos de bloque. Cuando</target>
        </trans-unit>
        <trans-unit id="2e0545421416cf516c0b942352accf8dc6b0a0d5" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) &amp;lsquo;</source>
          <target state="translated">Generar (o no) '</target>
        </trans-unit>
        <trans-unit id="05dd2841d03433fc0ea5db0c7e0df3c7599676c8" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) a stop bit immediately before and after volatile asm statements.</source>
          <target state="translated">Genere (o no) un bit de parada inmediatamente antes y despu&amp;eacute;s de declaraciones ASM vol&amp;aacute;tiles.</target>
        </trans-unit>
        <trans-unit id="a0784cc5b984b19815bf9eec6e275ae1a59c3b0f" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) code for the GNU assembler. This is the default.</source>
          <target state="translated">Genere (o no) c&amp;oacute;digo para el ensamblador GNU. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="2516ed040d38a5388dd7fe01c44239d79052cf2e" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) code for the GNU linker. This is the default.</source>
          <target state="translated">Genere (o no) c&amp;oacute;digo para el enlazador GNU. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="3e316b54c0eaa7bda512b60e40414c689d945ab8" translate="yes" xml:space="preserve">
          <source>Generate 16-bit instructions.</source>
          <target state="translated">Generar instrucciones de 16 bits.</target>
        </trans-unit>
        <trans-unit id="a52620c65360885e469f926c554c75bd50dd9583" translate="yes" xml:space="preserve">
          <source>Generate 3-instruction load and store sequences as sometimes required by the HP-UX 10 linker. This is equivalent to the &amp;lsquo;</source>
          <target state="translated">Genere secuencias de carga y almacenamiento de 3 instrucciones como a veces lo requiere el enlazador HP-UX 10. Esto es equivalente al '</target>
        </trans-unit>
        <trans-unit id="b384dbdcdcc6be12f32b73f9469c3ba6b9f1dccf" translate="yes" xml:space="preserve">
          <source>Generate 32x16-bit multiply and multiply-accumulate instructions.</source>
          <target state="translated">Generar instrucciones de multiplicar y multiplicar-acumular de 32x16 bits.</target>
        </trans-unit>
        <trans-unit id="0ccaaa46afb8881f4f3a477c92bc05eae68e0c4a" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;.debug_pubnames&lt;/code&gt; and &lt;code&gt;.debug_pubtypes&lt;/code&gt; sections in a format suitable for conversion into a GDB index. This option is only useful with a linker that can produce GDB index version 7.</source>
          <target state="translated">Genere secciones &lt;code&gt;.debug_pubnames&lt;/code&gt; y &lt;code&gt;.debug_pubtypes&lt;/code&gt; en un formato adecuado para la conversi&amp;oacute;n en un &amp;iacute;ndice GDB. Esta opci&amp;oacute;n solo es &amp;uacute;til con un enlazador que puede producir la versi&amp;oacute;n 7 del &amp;iacute;ndice GDB.</target>
        </trans-unit>
        <trans-unit id="828612c6e2cc35cf1bee3972f49446cb2047aba1" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;mul64&lt;/code&gt; and &lt;code&gt;mulu64&lt;/code&gt; instructions. Only valid for</source>
          <target state="translated">Genere instrucciones &lt;code&gt;mul64&lt;/code&gt; y &lt;code&gt;mulu64&lt;/code&gt; . Solo valido para</target>
        </trans-unit>
        <trans-unit id="f37d583fd1aea916d55ab9e91fa3002c399aaf84" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;norm&lt;/code&gt; instructions. This is the default if</source>
          <target state="translated">Generar instrucciones &lt;code&gt;norm&lt;/code&gt; ativas . Este es el valor predeterminado si</target>
        </trans-unit>
        <trans-unit id="2934019de0c741342611be8077a1571f0c44928a" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;swap&lt;/code&gt; instructions.</source>
          <target state="translated">Genera instrucciones de &lt;code&gt;swap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="586858db58f3f2f4e0ba5be27cc76fd1d37e386f" translate="yes" xml:space="preserve">
          <source>Generate &lt;var&gt;N&lt;/var&gt; NOPs right at the beginning of each function, with the function entry point before the &lt;var&gt;M&lt;/var&gt;th NOP. If &lt;var&gt;M&lt;/var&gt; is omitted, it defaults to &lt;code&gt;0&lt;/code&gt; so the function entry points to the address just at the first NOP. The NOP instructions reserve extra space which can be used to patch in any desired instrumentation at run time, provided that the code segment is writable. The amount of space is controllable indirectly via the number of NOPs; the NOP instruction used corresponds to the instruction emitted by the internal GCC back-end interface &lt;code&gt;gen_nop&lt;/code&gt;. This behavior is target-specific and may also depend on the architecture variant and/or other compilation options.</source>
          <target state="translated">Genere &lt;var&gt;N&lt;/var&gt; NOP justo al comienzo de cada funci&amp;oacute;n, con el punto de entrada de la funci&amp;oacute;n antes del &lt;var&gt;M&lt;/var&gt; th NOP. Si se omite &lt;var&gt;M&lt;/var&gt; , el valor predeterminado es &lt;code&gt;0&lt;/code&gt; , por lo que la entrada de la funci&amp;oacute;n apunta a la direcci&amp;oacute;n justo en el primer NOP. Las instrucciones NOP reservan espacio adicional que se puede usar para parchear cualquier instrumentaci&amp;oacute;n deseada en tiempo de ejecuci&amp;oacute;n, siempre que el segmento de c&amp;oacute;digo se pueda escribir. La cantidad de espacio se puede controlar indirectamente a trav&amp;eacute;s del n&amp;uacute;mero de NOP; la instrucci&amp;oacute;n NOP utilizada corresponde a la instrucci&amp;oacute;n emitida por la interfaz interna de back-end de GCC &lt;code&gt;gen_nop&lt;/code&gt; . Este comportamiento es espec&amp;iacute;fico del objetivo y tambi&amp;eacute;n puede depender de la variante de arquitectura y / u otras opciones de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b56d0340e46553074756e8938fdcc9bc10345ee9" translate="yes" xml:space="preserve">
          <source>Generate C header describing the largest structure that is passed by value, if any.</source>
          <target state="translated">Genera un encabezado C que describe la mayor estructura que se pasa por valor,si la hay.</target>
        </trans-unit>
        <trans-unit id="497d1946c219789282a881eeb57aa9b71f210579" translate="yes" xml:space="preserve">
          <source>Generate DWARF &lt;code&gt;.debug_pubnames&lt;/code&gt; and &lt;code&gt;.debug_pubtypes&lt;/code&gt; sections.</source>
          <target state="translated">Genere las &lt;code&gt;.debug_pubnames&lt;/code&gt; DWARF .debug_pubnames y &lt;code&gt;.debug_pubtypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0d6b717c142d078ddbdb831a6e380bea411850" translate="yes" xml:space="preserve">
          <source>Generate GNU/Linux compatible gUSA software atomic sequences for the atomic built-in functions. The generated atomic sequences require additional support from the interrupt/exception handling code of the system and are only suitable for SH3* and SH4* single-core systems. This option is enabled by default when the target is &lt;code&gt;sh*-*-linux*&lt;/code&gt; and SH3* or SH4*. When the target is SH4A, this option also partially utilizes the hardware atomic instructions &lt;code&gt;movli.l&lt;/code&gt; and &lt;code&gt;movco.l&lt;/code&gt; to create more efficient code, unless &amp;lsquo;</source>
          <target state="translated">Genere secuencias at&amp;oacute;micas de software gUSA compatibles con GNU / Linux para las funciones integradas at&amp;oacute;micas. Las secuencias at&amp;oacute;micas generadas requieren soporte adicional del c&amp;oacute;digo de manejo de interrupciones / excepciones del sistema y solo son adecuadas para sistemas de un solo n&amp;uacute;cleo SH3 * y SH4 *. Esta opci&amp;oacute;n est&amp;aacute; habilitada de forma predeterminada cuando el destino es &lt;code&gt;sh*-*-linux*&lt;/code&gt; y SH3 * o SH4 *. Cuando el objetivo es SH4A, esta opci&amp;oacute;n tambi&amp;eacute;n utiliza parcialmente las instrucciones at&amp;oacute;micas de hardware &lt;code&gt;movli.l&lt;/code&gt; y &lt;code&gt;movco.l&lt;/code&gt; para crear un c&amp;oacute;digo m&amp;aacute;s eficiente, a menos que '</target>
        </trans-unit>
        <trans-unit id="bf2d938e1c1ea97f318900579ce3c50a9ae898af" translate="yes" xml:space="preserve">
          <source>Generate GP-relative accesses for all data objects in the program. If you use this option, the entire data and BSS segments of your program must fit in 64K of memory and you must use an appropriate linker script to allocate them within the addressable range of the global pointer.</source>
          <target state="translated">Generar accesos GP-relativos para todos los objetos de datos del programa.Si utiliza esta opción,todos los datos y segmentos BSS de su programa deben caber en 64K de memoria y debe utilizar un script enlazador apropiado para asignarlos dentro del rango direccionable del puntero global.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
