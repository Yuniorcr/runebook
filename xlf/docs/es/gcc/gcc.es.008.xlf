<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="2f76b920d411b7e136fa4f9061e5e0a37ad6c0c4" translate="yes" xml:space="preserve">
          <source>For example, since the declaration of the primary function template below makes use of both attribute &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;alloc_size&lt;/code&gt; the declaration of the explicit specialization of the template is diagnosed because it is missing one of the attributes.</source>
          <target state="translated">Por ejemplo, dado que la declaraci&amp;oacute;n de la plantilla de funci&amp;oacute;n principal a continuaci&amp;oacute;n hace uso del atributo &lt;code&gt;malloc&lt;/code&gt; y &lt;code&gt;alloc_size&lt;/code&gt; ,se diagnostica la declaraci&amp;oacute;n de la especializaci&amp;oacute;n expl&amp;iacute;cita de la plantilla porque falta uno de los atributos.</target>
        </trans-unit>
        <trans-unit id="c1b19cb164dc1a4ab8a759ac490b8fde220e9c5e" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;struct A&lt;/code&gt; below is defined in some third party library header to have the alignment requirement &lt;code&gt;N&lt;/code&gt; and to force a warning whenever a variable of the type is not so aligned due to attribute &lt;code&gt;packed&lt;/code&gt;. Specifying the &lt;code&gt;copy&lt;/code&gt; attribute on the definition on the unrelated &lt;code&gt;struct B&lt;/code&gt; has the effect of copying all relevant attributes from the type referenced by the pointer expression to &lt;code&gt;struct B&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, suponga que la &lt;code&gt;struct A&lt;/code&gt; continuaci&amp;oacute;n se define en alg&amp;uacute;n encabezado de biblioteca de terceros para tener el requisito de alineaci&amp;oacute;n &lt;code&gt;N&lt;/code&gt; y forzar una advertencia siempre que una variable del tipo no est&amp;eacute; tan alineada debido al atributo &lt;code&gt;packed&lt;/code&gt; . Especificaci&amp;oacute;n de la &lt;code&gt;copy&lt;/code&gt; atributo en la definici&amp;oacute;n de la relaci&amp;oacute;n &lt;code&gt;struct B&lt;/code&gt; tiene el efecto de copiar todos los atributos relevantes del tipo al que hace referencia la expresi&amp;oacute;n puntero a &lt;code&gt;struct B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0be048f3761817dd96f745d3c57100422574646" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;sprintf&lt;/code&gt; function on SunOS 4.1.3 returns &lt;code&gt;char *&lt;/code&gt; while the C standard says that &lt;code&gt;sprintf&lt;/code&gt; returns an &lt;code&gt;int&lt;/code&gt;. The &lt;code&gt;fixincludes&lt;/code&gt; program could make the prototype for this function match the Standard, but that would be wrong, since the function will still return &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, la funci&amp;oacute;n &lt;code&gt;sprintf&lt;/code&gt; en SunOS 4.1.3 devuelve &lt;code&gt;char *&lt;/code&gt; mientras que el est&amp;aacute;ndar C dice que &lt;code&gt;sprintf&lt;/code&gt; devuelve un &lt;code&gt;int&lt;/code&gt; . El programa &lt;code&gt;fixincludes&lt;/code&gt; podr&amp;iacute;a hacer que el prototipo de esta funci&amp;oacute;n coincida con el est&amp;aacute;ndar, pero eso ser&amp;iacute;a incorrecto, ya que la funci&amp;oacute;n a&amp;uacute;n devolver&amp;aacute; &lt;code&gt;char *&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd82a792fa22143d94897d2b758fc399175bbe0e" translate="yes" xml:space="preserve">
          <source>For example, the &lt;var&gt;StrongAlias&lt;/var&gt; macro below makes use of the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;copy&lt;/code&gt; attributes to define an alias named &lt;var&gt;alloc&lt;/var&gt; for function &lt;var&gt;allocate&lt;/var&gt; declared with attributes &lt;var&gt;alloc_size&lt;/var&gt;, &lt;var&gt;malloc&lt;/var&gt;, and &lt;var&gt;nothrow&lt;/var&gt;. Thanks to the &lt;code&gt;__typeof__&lt;/code&gt; operator the alias has the same type as the target function. As a result of the &lt;code&gt;copy&lt;/code&gt; attribute the alias also shares the same attributes as the target.</source>
          <target state="translated">Por ejemplo, la macro &lt;var&gt;StrongAlias&lt;/var&gt; ​​a continuaci&amp;oacute;n hace uso de los atributos de &lt;code&gt;alias&lt;/code&gt; y &lt;code&gt;copy&lt;/code&gt; para definir un alias llamado &lt;var&gt;alloc&lt;/var&gt; para la funci&amp;oacute;n &lt;var&gt;allocate&lt;/var&gt; declarada con atributos &lt;var&gt;alloc_size&lt;/var&gt; , &lt;var&gt;malloc&lt;/var&gt; y &lt;var&gt;nothrow&lt;/var&gt; . Gracias al operador &lt;code&gt;__typeof__&lt;/code&gt; , el alias tiene el mismo tipo que la funci&amp;oacute;n de destino. Como resultado del atributo de &lt;code&gt;copy&lt;/code&gt; el alias tambi&amp;eacute;n comparte los mismos atributos que el destino.</target>
        </trans-unit>
        <trans-unit id="5df659eda3281e74be2356574e1b1c1a2ec73bd0" translate="yes" xml:space="preserve">
          <source>For example, the call to &lt;code&gt;memset&lt;/code&gt; below is diagnosed by the warning because the function expects a value of type &lt;code&gt;size_t&lt;/code&gt; as its argument but the type of &lt;code&gt;32&lt;/code&gt; is &lt;code&gt;int&lt;/code&gt;. With</source>
          <target state="translated">Por ejemplo, la llamada a &lt;code&gt;memset&lt;/code&gt; a continuaci&amp;oacute;n se diagnostica mediante la advertencia porque la funci&amp;oacute;n espera un valor de tipo &lt;code&gt;size_t&lt;/code&gt; como argumento, pero el tipo de &lt;code&gt;32&lt;/code&gt; es &lt;code&gt;int&lt;/code&gt; . Con</target>
        </trans-unit>
        <trans-unit id="aa585d900b6a1decabca1b2daabff17e2775d789" translate="yes" xml:space="preserve">
          <source>For example, the compiler can only unconditionally vectorize the following loop with the pragma:</source>
          <target state="translated">Por ejemplo,el compilador sólo puede vectorizar incondicionalmente el siguiente bucle con el pragma:</target>
        </trans-unit>
        <trans-unit id="99f069ed5ba8ea293548f32b787eaedf45bdbd11" translate="yes" xml:space="preserve">
          <source>For example, the declaration:</source>
          <target state="translated">Por ejemplo,la declaración:</target>
        </trans-unit>
        <trans-unit id="b9ea9d42bbb55f00657375149871784a78c15592" translate="yes" xml:space="preserve">
          <source>For example, the following function allocates eight objects of &lt;code&gt;n&lt;/code&gt; bytes each on the stack, storing a pointer to each in consecutive elements of the array &lt;code&gt;a&lt;/code&gt;. It then passes the array to function &lt;code&gt;g&lt;/code&gt; which can safely use the storage pointed to by each of the array elements.</source>
          <target state="translated">Por ejemplo, la siguiente funci&amp;oacute;n asigna ocho objetos de &lt;code&gt;n&lt;/code&gt; bytes cada uno en la pila, almacenando un puntero a cada uno en elementos consecutivos de la matriz &lt;code&gt;a&lt;/code&gt; . Luego pasa la matriz a la funci&amp;oacute;n &lt;code&gt;g&lt;/code&gt; , que puede usar de forma segura el almacenamiento al que apunta cada uno de los elementos de la matriz.</target>
        </trans-unit>
        <trans-unit id="46ff8877e2ba5b3ad38e512c93a9f9393792e49a" translate="yes" xml:space="preserve">
          <source>For example, the following macro can be used to portably check, at compile-time, whether or not adding two constant integers will overflow, and perform the addition only when it is known to be safe and not to trigger a</source>
          <target state="translated">Por ejemplo,la siguiente macro puede utilizarse para comprobar de forma portátil,en el momento de la compilación,si la adición de dos números enteros constantes se desbordará o no,y realizar la adición sólo cuando se sepa que es segura y que no desencadena una</target>
        </trans-unit>
        <trans-unit id="0a5e19a07f0f940d54dbc5e573ed269580925a99" translate="yes" xml:space="preserve">
          <source>For example, the following:</source>
          <target state="translated">Por ejemplo,lo siguiente:</target>
        </trans-unit>
        <trans-unit id="f3e3332c2d5e42f3076c20bce36d2593f9127ee9" translate="yes" xml:space="preserve">
          <source>For example, the implementation of the following function &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, la implementaci&amp;oacute;n de la siguiente funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="71a4e8c7eb0a1fa15ef7a86f7ffb6699626c80d0" translate="yes" xml:space="preserve">
          <source>For example, this function has to be used in &lt;code&gt;ifunc&lt;/code&gt; resolvers that check for CPU type using the built-in functions &lt;code&gt;__builtin_cpu_is&lt;/code&gt; and &lt;code&gt;__builtin_cpu_supports&lt;/code&gt;, or in constructors on targets that don&amp;rsquo;t support constructor priority.</source>
          <target state="translated">Por ejemplo, esta funci&amp;oacute;n debe usarse en resolutores &lt;code&gt;ifunc&lt;/code&gt; que verifican el tipo de CPU usando las funciones &lt;code&gt;__builtin_cpu_is&lt;/code&gt; y &lt;code&gt;__builtin_cpu_supports&lt;/code&gt; , o en constructores en destinos que no admiten la prioridad de constructor.</target>
        </trans-unit>
        <trans-unit id="1dddf36660113e27ff669ff510c160e144321d93" translate="yes" xml:space="preserve">
          <source>For example, when the compiler encounters a method invocation such as &lt;code&gt;[object init]&lt;/code&gt;, it compiles it into a call to &lt;code&gt;objc_msg_lookup (object, @selector(init))&lt;/code&gt; followed by a cast of the returned value to the appropriate function pointer type, and then it calls it.</source>
          <target state="translated">Por ejemplo, cuando el compilador encuentra una invocaci&amp;oacute;n de m&amp;eacute;todo como &lt;code&gt;[object init]&lt;/code&gt; , lo compila en una llamada a &lt;code&gt;objc_msg_lookup (object, @selector(init))&lt;/code&gt; seguido de una conversi&amp;oacute;n del valor devuelto al tipo de puntero de funci&amp;oacute;n apropiado, y entonces lo llama.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="25bb7aced1792aec854f4198d7d0398ca1d4713d" translate="yes" xml:space="preserve">
          <source>For full documentation of the struct attributes please see the documentation in &lt;a href=&quot;variable-attributes#x86-Variable-Attributes&quot;&gt;x86 Variable Attributes&lt;/a&gt;.</source>
          <target state="translated">Para obtener la documentaci&amp;oacute;n completa de los atributos de estructura, consulte la documentaci&amp;oacute;n en &lt;a href=&quot;variable-attributes#x86-Variable-Attributes&quot;&gt;Atributos variables x86&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3dc81c80b4604ccbc276f437a5ccc2aaa2515f6c" translate="yes" xml:space="preserve">
          <source>For indirect calls to functions and computed goto, the linker generates &lt;em&gt;stubs&lt;/em&gt;. Stubs are jump pads sometimes also called &lt;em&gt;trampolines&lt;/em&gt;. Thus, the indirect call/jump jumps to such a stub. The stub contains a direct jump to the desired address.</source>
          <target state="translated">Para llamadas indirectas a funciones y goto calculado, el enlazador genera &lt;em&gt;stubs&lt;/em&gt; . Los topes son almohadillas para saltar a veces tambi&amp;eacute;n llamadas &lt;em&gt;trampolines&lt;/em&gt; . Por lo tanto, la llamada / salto indirecto salta a dicho tal&amp;oacute;n. El stub contiene un salto directo a la direcci&amp;oacute;n deseada.</target>
        </trans-unit>
        <trans-unit id="b91d6fa4ba31d00f68a512834bc7eb5f8c52df71" translate="yes" xml:space="preserve">
          <source>For information about the O64 ABI, see &lt;a href=&quot;http://gcc.gnu.org/projects/mipso64-abi.html&quot;&gt;http://gcc.gnu.org/projects/mipso64-abi.html&lt;/a&gt;.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n sobre O64 ABI, consulte &lt;a href=&quot;http://gcc.gnu.org/projects/mipso64-abi.html&quot;&gt;http://gcc.gnu.org/projects/mipso64-abi.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56ee49f1a1b16838ed8d136422788b22655be9ea" translate="yes" xml:space="preserve">
          <source>For input files in any language, generate corresponding Go declarations in &lt;var&gt;file&lt;/var&gt;. This generates Go &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;, and &lt;code&gt;func&lt;/code&gt; declarations which may be a useful way to start writing a Go interface to code written in some other language.</source>
          <target state="translated">Para archivos de entrada en cualquier idioma, genere las declaraciones de Go correspondientes en el &lt;var&gt;file&lt;/var&gt; . Esto genera declaraciones Go &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;var&lt;/code&gt; y &lt;code&gt;func&lt;/code&gt; que pueden ser una forma &amp;uacute;til de comenzar a escribir una interfaz Go en c&amp;oacute;digo escrito en alg&amp;uacute;n otro idioma.</target>
        </trans-unit>
        <trans-unit id="c8ce6c094048677a9f8423fec4581d4ef1bd1e5b" translate="yes" xml:space="preserve">
          <source>For instance</source>
          <target state="translated">Por ejemplo</target>
        </trans-unit>
        <trans-unit id="23b7041567e33cbc564ac905e83c0e92b5fee08b" translate="yes" xml:space="preserve">
          <source>For instance,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="a8e07e43db118dd56bbb97b1f96ccc89bac7f5fd" translate="yes" xml:space="preserve">
          <source>For instance, if the stack starts at absolute address &amp;lsquo;</source>
          <target state="translated">Por ejemplo, si la pila comienza en la direcci&amp;oacute;n absoluta '</target>
        </trans-unit>
        <trans-unit id="6abfd7e7f05346e1123b7bf2021cc93c61b8fbd5" translate="yes" xml:space="preserve">
          <source>For instance, if you have &lt;code&gt;#include &quot;all.h&quot;&lt;/code&gt;, and you have</source>
          <target state="translated">Por ejemplo, si tiene &lt;code&gt;#include &quot;all.h&quot;&lt;/code&gt; , y tiene</target>
        </trans-unit>
        <trans-unit id="5b9b6fe2256c52fcd89c847ec80034c7cbe3d49d" translate="yes" xml:space="preserve">
          <source>For instance, on an x86, you could compile a function with &lt;code&gt;target_clones(&quot;sse4.1,avx&quot;)&lt;/code&gt;. GCC creates two function clones, one compiled with</source>
          <target state="translated">Por ejemplo, en un x86, podr&amp;iacute;a compilar una funci&amp;oacute;n con &lt;code&gt;target_clones(&quot;sse4.1,avx&quot;)&lt;/code&gt; . GCC crea dos clones de funciones, uno compilado con</target>
        </trans-unit>
        <trans-unit id="175bbce2fc22d4ed1ec7614154a0e449231ccaf1" translate="yes" xml:space="preserve">
          <source>For instance, on an x86, you could declare one function with the &lt;code&gt;target(&quot;sse4.1,arch=core2&quot;)&lt;/code&gt; attribute and another with &lt;code&gt;target(&quot;sse4a,arch=amdfam10&quot;)&lt;/code&gt;. This is equivalent to compiling the first function with</source>
          <target state="translated">Por ejemplo, en un x86, podr&amp;iacute;a declarar una funci&amp;oacute;n con el &lt;code&gt;target(&quot;sse4.1,arch=core2&quot;)&lt;/code&gt; y otra con &lt;code&gt;target(&quot;sse4a,arch=amdfam10&quot;)&lt;/code&gt; . Esto es equivalente a compilar la primera funci&amp;oacute;n con</target>
        </trans-unit>
        <trans-unit id="60600b26a9fa03b6c3650e82a7d4514147301ef9" translate="yes" xml:space="preserve">
          <source>For instance, on the SB-1, if FP exceptions are disabled, and we are emitting 64-bit code, then we can use both FP pipes. Otherwise, we can only use one FP pipe.</source>
          <target state="translated">Por ejemplo,en el SB-1,si las excepciones de FP están desactivadas,y estamos emitiendo un código de 64 bits,entonces podemos usar ambos tubos de FP.De lo contrario,sólo podemos usar un tubo FP.</target>
        </trans-unit>
        <trans-unit id="4d64dcd6f25c2f8e61dbb8fbe7c56bdb2499ab6d" translate="yes" xml:space="preserve">
          <source>For instance, the following declarations</source>
          <target state="translated">Por ejemplo,las siguientes declaraciones</target>
        </trans-unit>
        <trans-unit id="fd17d596f35be2211443642e76ceab4e5f526b5c" translate="yes" xml:space="preserve">
          <source>For internal names, all characters are significant. For external names, the number of significant characters are defined by the linker; for almost all targets, all characters are significant.</source>
          <target state="translated">Para los nombres internos,todos los caracteres son significativos.Para los nombres externos,el número de caracteres significativos son definidos por el enlazador;para casi todos los objetivos,todos los caracteres son significativos.</target>
        </trans-unit>
        <trans-unit id="9f99386843936f29083f4368b21c1771def8a251" translate="yes" xml:space="preserve">
          <source>For library code, if you want the library to provide all of the template instantiations it needs, just try to link all of its object files together; the link will fail, but cause the instantiations to be generated as a side effect. Be warned, however, that this may cause conflicts if multiple libraries try to provide the same instantiations. For greater control, use explicit instantiation as described in the next option.</source>
          <target state="translated">Para el código de la biblioteca,si quieres que la biblioteca proporcione todas las instancias de plantillas que necesita,intenta enlazar todos sus archivos de objetos;el enlace fallará,pero hará que las instancias se generen como un efecto secundario.Sin embargo,tenga en cuenta que esto puede causar conflictos si varias bibliotecas intentan proporcionar las mismas instancias.Para un mayor control,utilice la instanciación explícita como se describe en la siguiente opción.</target>
        </trans-unit>
        <trans-unit id="275df5c8ab338eac0891dfd5fcb7ca333c414d1c" translate="yes" xml:space="preserve">
          <source>For machines that must pop arguments after a function call, always pop the arguments as soon as each function returns. At levels</source>
          <target state="translated">Para las máquinas que deben hacer saltar los argumentos después de una llamada a una función,siempre lo hacen tan pronto como vuelve cada función.En los niveles</target>
        </trans-unit>
        <trans-unit id="4ab62f1721d989066bd88fccf2cddf5cca6c289c" translate="yes" xml:space="preserve">
          <source>For more information concerning the history of Objective-C that is available online, see &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la historia de Objective-C que est&amp;aacute; disponible en l&amp;iacute;nea, consulte &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="445882425cb6a5526123dcb90201317cd797b812" translate="yes" xml:space="preserve">
          <source>For more information on GCC&amp;rsquo;s support for transactional memory, See &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/libitm/Enabling-libitm.html#Enabling-libitm&quot;&gt;The GNU Transactional Memory Library&lt;/a&gt; in GNU Transactional Memory Library.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el soporte de GCC para la memoria transaccional, consulte &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/libitm/Enabling-libitm.html#Enabling-libitm&quot;&gt;La biblioteca&lt;/a&gt; de memoria transaccional de GNU en la biblioteca de memoria transaccional de GNU.</target>
        </trans-unit>
        <trans-unit id="530d01e06da63e3ae60755b1d0e0664f37ce4c56" translate="yes" xml:space="preserve">
          <source>For profile-directed optimizations, compile the source files again with the same optimization and code generation options plus</source>
          <target state="translated">Para las optimizaciones dirigidas al perfil,compilar los archivos de origen de nuevo con las mismas opciones de optimización y generación de código,además de</target>
        </trans-unit>
        <trans-unit id="1552bee1f905030b453e9bc73123ec457682d5d2" translate="yes" xml:space="preserve">
          <source>For references to Technical Corrigenda, Rationale documents and information concerning the history of C that is available online, see &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</source>
          <target state="translated">Para obtener referencias a los documentos de correcci&amp;oacute;n t&amp;eacute;cnica, fundamentos e informaci&amp;oacute;n sobre la historia de C que est&amp;aacute; disponible en l&amp;iacute;nea, consulte &lt;a href=&quot;http://gcc.gnu.org/readings.html&quot;&gt;http://gcc.gnu.org/readings.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98fa91b9c573243f46d98173cb5c6bc69a14f37e" translate="yes" xml:space="preserve">
          <source>For run-time identification, the starting addresses of these areas, which correspond to their respective function entries minus &lt;var&gt;M&lt;/var&gt;, are additionally collected in the &lt;code&gt;__patchable_function_entries&lt;/code&gt; section of the resulting binary.</source>
          <target state="translated">Para la identificaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n, las direcciones de inicio de estas &amp;aacute;reas, que corresponden a sus respectivas entradas de funci&amp;oacute;n menos &lt;var&gt;M&lt;/var&gt; , se recopilan adicionalmente en la secci&amp;oacute;n &lt;code&gt;__patchable_function_entries&lt;/code&gt; del binario resultante.</target>
        </trans-unit>
        <trans-unit id="ee4662af110f3d316db91e4c9bf088b26f37f6fc" translate="yes" xml:space="preserve">
          <source>For single-precision floating-point comparisons, emit an &lt;code&gt;fsub&lt;/code&gt; instruction and test the flags. This is faster than a software comparison, but can get incorrect results in the presence of NaNs, or when two different small numbers are compared such that their difference is calculated as zero. The default is</source>
          <target state="translated">Para comparaciones de punto flotante de precisi&amp;oacute;n simple, emita una instrucci&amp;oacute;n &lt;code&gt;fsub&lt;/code&gt; y pruebe los indicadores. Esto es m&amp;aacute;s r&amp;aacute;pido que una comparaci&amp;oacute;n de software, pero puede obtener resultados incorrectos en presencia de NaN, o cuando se comparan dos n&amp;uacute;meros peque&amp;ntilde;os diferentes de manera que su diferencia se calcula como cero. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="629fb7062147649cb1707cc8cbe18549c87c4fce" translate="yes" xml:space="preserve">
          <source>For some target machines, GCC supports additional options to the format attribute (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaring Attributes of Functions&lt;/a&gt;).</source>
          <target state="translated">Para algunas m&amp;aacute;quinas de destino, GCC admite opciones adicionales para el atributo de formato (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaraci&amp;oacute;n de atributos de funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f693ccd95fd0352057c89a84d6dca28111b1d8d" translate="yes" xml:space="preserve">
          <source>For some targets, a suffix is added to the root directory specified with</source>
          <target state="translated">Para algunos objetivos,se añade un sufijo al directorio raíz especificado con</target>
        </trans-unit>
        <trans-unit id="1eef11d2e0af6679534eba00e39380a79330c652" translate="yes" xml:space="preserve">
          <source>For string operations of unknown size, use run-time checks with inline code for small blocks and a library call for large blocks.</source>
          <target state="translated">Para operaciones de cadena de tamaño desconocido,utilice comprobaciones en tiempo de ejecución con código en línea para bloques pequeños y una llamada de biblioteca para bloques grandes.</target>
        </trans-unit>
        <trans-unit id="c54c726dd72dd80b773414b86e870a30d193ec02" translate="yes" xml:space="preserve">
          <source>For systems that use the GNU C Library, the default is on.</source>
          <target state="translated">Para los sistemas que usan la Biblioteca C de GNU,el valor por defecto es on.</target>
        </trans-unit>
        <trans-unit id="90889da6f3749d2d8e7f525edbcff60563fc34f5" translate="yes" xml:space="preserve">
          <source>For targets that do not support either COMDAT or weak symbols, most entities with vague linkage are emitted as local symbols to avoid duplicate definition errors from the linker. This does not happen for local statics in inlines, however, as having multiple copies almost certainly breaks things.</source>
          <target state="translated">En el caso de los objetivos que no admiten ni COMDAT ni símbolos débiles,la mayoría de las entidades con vinculación vaga se emiten como símbolos locales para evitar errores de definición duplicados por parte del vinculador.Sin embargo,esto no sucede en el caso de la estática local en líneas,ya que tener múltiples copias casi seguro que rompe las cosas.</target>
        </trans-unit>
        <trans-unit id="db393fbd5a98ab60023bfd22b5dbbadca9023150" translate="yes" xml:space="preserve">
          <source>For targets that normally need trampolines for nested functions, always generate them instead of using descriptors. Otherwise, for targets that do not need them, like for example HP-PA or IA-64, do nothing.</source>
          <target state="translated">Para los objetivos que normalmente necesitan camas elásticas para funciones anidadas,siempre las generan en lugar de utilizar descriptores.De lo contrario,para los objetivos que no los necesitan,como por ejemplo HP-PA o IA-64,no hacer nada.</target>
        </trans-unit>
        <trans-unit id="3a882a0a0f801f0c1cb983c784834a8c5870b59e" translate="yes" xml:space="preserve">
          <source>For targets, like GNU/Linux, where all user-mode Xtensa code must be position-independent code (PIC), this option disables PIC for compiling kernel code.</source>
          <target state="translated">Para objetivos como GNU/Linux,donde todo el código de Xtensa en modo de usuario debe ser código independiente de la posición (PIC),esta opción desactiva el PIC para compilar el código del núcleo.</target>
        </trans-unit>
        <trans-unit id="8b8c7be3bb5a9384ba78f18abd2ee5fc45978a5a" translate="yes" xml:space="preserve">
          <source>For test coverage analysis, use &lt;code&gt;gcov&lt;/code&gt; to produce human readable information from the</source>
          <target state="translated">Para el an&amp;aacute;lisis de cobertura de prueba, utilice &lt;code&gt;gcov&lt;/code&gt; para producir informaci&amp;oacute;n legible por humanos a partir del</target>
        </trans-unit>
        <trans-unit id="cdf3f70fc86ab5862691992f6df51e7ca5f5489e" translate="yes" xml:space="preserve">
          <source>For the NeXT runtime with version 2 of the ABI, check for a nil receiver in method invocations before doing the actual method call. This is the default and can be disabled using</source>
          <target state="translated">Para el tiempo de ejecución de NeXT con la versión 2 de la ABI,compruebe si hay un receptor nulo en las invocaciones de métodos antes de hacer la llamada de método real.Este es el valor por defecto y puede ser desactivado usando</target>
        </trans-unit>
        <trans-unit id="96b6c6242e369e6ead381c1d4d982f9072cadf3b" translate="yes" xml:space="preserve">
          <source>For the named functions, the compiler adds code to disable interrupts for the duration of those functions. If any functions so named are not encountered in the source, a warning is emitted that the pragma is not used. Examples:</source>
          <target state="translated">Para las funciones nombradas,el compilador agrega un código para desactivar las interrupciones durante la duración de esas funciones.Si alguna de las funciones así nombradas no se encuentra en la fuente,se emite una advertencia de que la pragmática no se utiliza.Ejemplos:</target>
        </trans-unit>
        <trans-unit id="b4ae72d8349f09925e7db4912a4034594f70873f" translate="yes" xml:space="preserve">
          <source>For the named functions, the compiler always uses a register-indirect call model when calling the named functions. Examples:</source>
          <target state="translated">Para las funciones nombradas,el compilador siempre usa un modelo de llamada de registro-indirecta cuando llama a las funciones nombradas.Ejemplos:</target>
        </trans-unit>
        <trans-unit id="0f569d15217aa1a086b40826e8ecc6305b091d9b" translate="yes" xml:space="preserve">
          <source>For the purposes of branch prediction optimizations, the probability that a &lt;code&gt;__builtin_expect&lt;/code&gt; expression is &lt;code&gt;true&lt;/code&gt; is controlled by GCC&amp;rsquo;s &lt;code&gt;builtin-expect-probability&lt;/code&gt; parameter, which defaults to 90%. You can also use &lt;code&gt;__builtin_expect_with_probability&lt;/code&gt; to explicitly assign a probability value to individual expressions.</source>
          <target state="translated">A los efectos de las optimizaciones de predicci&amp;oacute;n de bifurcaciones, la probabilidad de que una expresi&amp;oacute;n &lt;code&gt;__builtin_expect&lt;/code&gt; sea &lt;code&gt;true&lt;/code&gt; est&amp;aacute; controlada por el par&amp;aacute;metro de &lt;code&gt;builtin-expect-probability&lt;/code&gt; GCC , que tiene un valor predeterminado del 90%. Tambi&amp;eacute;n puede usar &lt;code&gt;__builtin_expect_with_probability&lt;/code&gt; para asignar expl&amp;iacute;citamente un valor de probabilidad a expresiones individuales.</target>
        </trans-unit>
        <trans-unit id="bf219c0d4bab1b7372e20c5005cc97b0b9e1bb77" translate="yes" xml:space="preserve">
          <source>For the quote form of the include directive, the directories specified by</source>
          <target state="translated">Para la forma de cita de la directiva include,los directorios especificados por</target>
        </trans-unit>
        <trans-unit id="754ebda73d52810694ef0086a8c959916039f5fd" translate="yes" xml:space="preserve">
          <source>For the quote form of the include directive, the directory of the current file is searched first.</source>
          <target state="translated">Para la forma de cita de la directiva include,se busca primero en el directorio del archivo actual.</target>
        </trans-unit>
        <trans-unit id="1d70b004544bcb6341f32cbd058f337db34bac6c" translate="yes" xml:space="preserve">
          <source>For the x86-32 compiler, you must use</source>
          <target state="translated">Para el compilador x86-32,debes usar</target>
        </trans-unit>
        <trans-unit id="9e1a32426c586349d0aa1e4bc4474f828e773b55" translate="yes" xml:space="preserve">
          <source>For those adding visibility support to existing code, you may find &lt;code&gt;#pragma GCC visibility&lt;/code&gt; of use. This works by you enclosing the declarations you wish to set visibility for with (for example) &lt;code&gt;#pragma GCC visibility push(hidden)&lt;/code&gt; and &lt;code&gt;#pragma GCC visibility pop&lt;/code&gt;. Bear in mind that symbol visibility should be viewed &lt;strong&gt;as part of the API interface contract&lt;/strong&gt; and thus all new code should always specify visibility when it is not the default; i.e., declarations only for use within the local DSO should &lt;strong&gt;always&lt;/strong&gt; be marked explicitly as hidden as so to avoid PLT indirection overheads&amp;mdash;making this abundantly clear also aids readability and self-documentation of the code. Note that due to ISO C++ specification requirements, &lt;code&gt;operator new&lt;/code&gt; and &lt;code&gt;operator delete&lt;/code&gt; must always be of default visibility.</source>
          <target state="translated">Para aquellos que agregan soporte de visibilidad al c&amp;oacute;digo existente, puede encontrar la &lt;code&gt;#pragma GCC visibility&lt;/code&gt; de uso de #pragma GCC . Esto funciona adjuntando las declaraciones para las que desea establecer la visibilidad con (por ejemplo) &lt;code&gt;#pragma GCC visibility push(hidden)&lt;/code&gt; y &lt;code&gt;#pragma GCC visibility pop&lt;/code&gt; . Tenga en cuenta que la visibilidad de los s&amp;iacute;mbolos debe verse &lt;strong&gt;como parte del contrato de la interfaz API&lt;/strong&gt; y, por lo tanto, todo el c&amp;oacute;digo nuevo siempre debe especificar la visibilidad cuando no es el predeterminado; es decir, las declaraciones solo para uso dentro del DSO local &lt;strong&gt;siempre&lt;/strong&gt; deben marcarse expl&amp;iacute;citamente como ocultas para evitar sobrecargas indirectas de PLT; dejar esto muy claro tambi&amp;eacute;n ayuda a la legibilidad y auto-documentaci&amp;oacute;n del c&amp;oacute;digo. Tenga en cuenta que debido a los requisitos de la especificaci&amp;oacute;n ISO C ++, &lt;code&gt;operator new&lt;/code&gt; y &lt;code&gt;operator delete&lt;/code&gt; siempre deben tener la visibilidad predeterminada.</target>
        </trans-unit>
        <trans-unit id="bb6de8937de1ff830849ca65a0b4291fa1ceadf7" translate="yes" xml:space="preserve">
          <source>Force (do not force) generated code to have a single exit point in each function.</source>
          <target state="translated">Forzar (no forzar)el código generado para tener un único punto de salida en cada función.</target>
        </trans-unit>
        <trans-unit id="acd5ffdf657527d019579abefcb2cc6ad1c27289" translate="yes" xml:space="preserve">
          <source>Force (do not force) the use of &lt;code&gt;memcpy&lt;/code&gt; for non-trivial block moves. The default is</source>
          <target state="translated">Forzar (no forzar) el uso de &lt;code&gt;memcpy&lt;/code&gt; para movimientos de bloques no triviales. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="f35628fb15f3c423c03af2c93b844cb43e594383" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;long&lt;/code&gt; types to be 64 bits wide. See</source>
          <target state="translated">Obligue a &lt;code&gt;long&lt;/code&gt; tipos largos a tener 64 bits de ancho. Ver</target>
        </trans-unit>
        <trans-unit id="df341c9e8e9829ab23b420935fbc32e82bb7a353" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, and pointer types to be 32 bits wide.</source>
          <target state="translated">Forzar los tipos &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; y pointer a tener 32 bits de ancho.</target>
        </trans-unit>
        <trans-unit id="a65d4b81903833686ba857ca6166053cb9c8d543" translate="yes" xml:space="preserve">
          <source>Force GCC to assign view numbers internally, if</source>
          <target state="translated">Forzar a GCC a asignar números de vista internamente,si</target>
        </trans-unit>
        <trans-unit id="5c6c2109c0abfbfad2c57ae80b233af1137f54d6" translate="yes" xml:space="preserve">
          <source>Force GCC to generate DWARF2+ line number tables internally, if DWARF2+ line number tables are to be generated.</source>
          <target state="translated">Forzar a GCC a generar internamente tablas de números de línea DWARF2+,si se van a generar tablas de números de línea DWARF2+.</target>
        </trans-unit>
        <trans-unit id="e05ff97a2114aff3fe8702e99f968b0b9b270faf" translate="yes" xml:space="preserve">
          <source>Force all calls to functions to be indirect. This is useful when using Intel Processor Trace where it generates more precise timing information for function calls.</source>
          <target state="translated">Forzar que todas las llamadas a funciones sean indirectas.Esto es útil cuando se utiliza el procesador Intel Trace,que genera información de tiempo más precisa para las llamadas a las funciones.</target>
        </trans-unit>
        <trans-unit id="c6aa1876252f253f5c49c98017976af7ef3a9f80" translate="yes" xml:space="preserve">
          <source>Force all functions to be aligned to a 4-byte boundary.</source>
          <target state="translated">Forzar que todas las funciones se alineen a un límite de 4 bytes.</target>
        </trans-unit>
        <trans-unit id="5376700e1a5ed02b4facb60bd51b070a514bbd9d" translate="yes" xml:space="preserve">
          <source>Force all load and store instructions to always bypass cache by using I/O variants of the instructions. The default is not to bypass the cache.</source>
          <target state="translated">Forzar todas las instrucciones de carga y almacenamiento para que siempre puenteen la memoria caché utilizando variantes de E/S de las instrucciones.El valor por defecto es no puentear la caché.</target>
        </trans-unit>
        <trans-unit id="6ba14189273ea29b59425c68e227901a2b9a86ef" translate="yes" xml:space="preserve">
          <source>Force assembly output to always use hex constants. Normally such constants are signed decimals, but this option is available for testsuite and/or aesthetic purposes.</source>
          <target state="translated">Forzar la salida del ensamblaje para usar siempre constantes hexagonales.Normalmente tales constantes son decimales firmados,pero esta opción está disponible para fines de tests y/o estéticos.</target>
        </trans-unit>
        <trans-unit id="a09ed1d5a3164af1580e37f843c9d03a7f3d9584" translate="yes" xml:space="preserve">
          <source>Force code generation in the ARM (A32) ISA.</source>
          <target state="translated">Generación de código de fuerza en el ARM (A32)ISA.</target>
        </trans-unit>
        <trans-unit id="8cf31b1c6efcebcf276d6ea54117f6f86a1ab3b3" translate="yes" xml:space="preserve">
          <source>Force code generation in the Thumb (T16/T32) ISA, depending on the architecture level.</source>
          <target state="translated">Generación de código de fuerza en el Pulgar (T16/T32)ISA,dependiendo del nivel de arquitectura.</target>
        </trans-unit>
        <trans-unit id="57fc3d2f95e9a264681cfb6c086d3f11381e6d22" translate="yes" xml:space="preserve">
          <source>Force indirect call and jump via register.</source>
          <target state="translated">Forzar la llamada indirecta y el salto a través del registro.</target>
        </trans-unit>
        <trans-unit id="c2234a2c2c6fa572bb9aaff40c528a12cc4c9fff" translate="yes" xml:space="preserve">
          <source>Force the usage of delay slots for conditional branches, which stuffs the delay slot with a &lt;code&gt;nop&lt;/code&gt; if a suitable instruction cannot be found. By default this option is disabled. It can be enabled to work around hardware bugs as found in the original SH7055.</source>
          <target state="translated">Forzar el uso de ranuras de retardo para ramas condicionales, lo que llena la ranura de retardo con un &lt;code&gt;nop&lt;/code&gt; si no se puede encontrar una instrucci&amp;oacute;n adecuada. Por defecto, esta opci&amp;oacute;n est&amp;aacute; desactivada. Se puede habilitar para solucionar los errores de hardware que se encuentran en el SH7055 original.</target>
        </trans-unit>
        <trans-unit id="accd79a6ab2ab26b14a5acf0e4624a9287eb4f98" translate="yes" xml:space="preserve">
          <source>Force to call a function using jli_s instruction. This option is valid only for ARCv2 architecture.</source>
          <target state="translated">Forzar a llamar una función usando la instrucción jli_s.Esta opción es válida sólo para la arquitectura ARCv2.</target>
        </trans-unit>
        <trans-unit id="bda8d8b269a45b97f862176d65bac6c1e4f4afe4" translate="yes" xml:space="preserve">
          <source>Forces a particular function to be called using &lt;code&gt;jli&lt;/code&gt; instruction. The &lt;code&gt;jli&lt;/code&gt; instruction makes use of a table stored into &lt;code&gt;.jlitab&lt;/code&gt; section, which holds the location of the functions which are addressed using this instruction.</source>
          <target state="translated">Obliga a que se llame a una funci&amp;oacute;n particular mediante la instrucci&amp;oacute;n &lt;code&gt;jli&lt;/code&gt; . La instrucci&amp;oacute;n &lt;code&gt;jli&lt;/code&gt; hace uso de una tabla almacenada en la secci&amp;oacute;n &lt;code&gt;.jlitab&lt;/code&gt; , que contiene la ubicaci&amp;oacute;n de las funciones que se direccionan mediante esta instrucci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2f084ee73c513d8f966bbd0c40980e7ab5210b2e" translate="yes" xml:space="preserve">
          <source>Formal syntax for attributes.</source>
          <target state="translated">Sintaxis formal de los atributos.</target>
        </trans-unit>
        <trans-unit id="6e97cc41857aff390c1d1352f1580ff15ac71869" translate="yes" xml:space="preserve">
          <source>Format checks specific to particular targets.</source>
          <target state="translated">Comprobaciones de formato específicas para determinados objetivos.</target>
        </trans-unit>
        <trans-unit id="c4653752f8662d9cf50820b53f4f92b88244d0b2" translate="yes" xml:space="preserve">
          <source>Formerly the &lt;code&gt;hi&lt;/code&gt; register. This constraint is no longer supported.</source>
          <target state="translated">Anteriormente el registro &lt;code&gt;hi&lt;/code&gt; . Esta restricci&amp;oacute;n ya no se admite.</target>
        </trans-unit>
        <trans-unit id="fb001b2c292ad2f619c8caf6e0ac8afd191aaa76" translate="yes" xml:space="preserve">
          <source>Framework</source>
          <target state="translated">Framework</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="a4a10834211c2c0fbcb7eeb4d7d706ce399ad1a9" translate="yes" xml:space="preserve">
          <source>Free form Fortran source code that must be preprocessed (with the traditional preprocessor).</source>
          <target state="translated">Código fuente Fortran de forma libre que debe ser preprocesado (con el preprocesador tradicional).</target>
        </trans-unit>
        <trans-unit id="ab1de10d533c059aa65605ce6bb4a93b10329a51" translate="yes" xml:space="preserve">
          <source>Free form Fortran source code that should not be preprocessed.</source>
          <target state="translated">Código fuente Fortran de forma libre que no debe ser preprocesado.</target>
        </trans-unit>
        <trans-unit id="5888490bf4ce1fb3617e200efdb6835e0c4faa44" translate="yes" xml:space="preserve">
          <source>Function attributes are introduced by the &lt;code&gt;__attribute__&lt;/code&gt; keyword in the declaration of a function, followed by an attribute specification enclosed in double parentheses. You can specify multiple attributes in a declaration by separating them by commas within the double parentheses or by immediately following one attribute specification with another. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for the exact rules on attribute syntax and placement. Compatible attribute specifications on distinct declarations of the same function are merged. An attribute specification that is not compatible with attributes already applied to a declaration of the same function is ignored with a warning.</source>
          <target state="translated">Los atributos de funci&amp;oacute;n se introducen mediante la palabra clave &lt;code&gt;__attribute__&lt;/code&gt; en la declaraci&amp;oacute;n de una funci&amp;oacute;n, seguida de una especificaci&amp;oacute;n de atributo entre par&amp;eacute;ntesis dobles. Puede especificar varios atributos en una declaraci&amp;oacute;n separ&amp;aacute;ndolos por comas dentro de los par&amp;eacute;ntesis dobles o inmediatamente despu&amp;eacute;s de una especificaci&amp;oacute;n de atributo con otra. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para conocer las reglas exactas sobre la sintaxis y la ubicaci&amp;oacute;n de los atributos. Se fusionan especificaciones de atributos compatibles en distintas declaraciones de la misma funci&amp;oacute;n. Una especificaci&amp;oacute;n de atributo que no es compatible con atributos ya aplicados a una declaraci&amp;oacute;n de la misma funci&amp;oacute;n se ignora con una advertencia.</target>
        </trans-unit>
        <trans-unit id="f93ed46e6d86f7b87373026d5e663168479db390" translate="yes" xml:space="preserve">
          <source>Function precision. The trap handler can determine the function that caused a floating-point exception.</source>
          <target state="translated">Precisión de la función.El manipulador de la trampa puede determinar la función que causó una excepción de punto flotante.</target>
        </trans-unit>
        <trans-unit id="d3d655b1f77fc46f162e436abc252a9dc6d8148d" translate="yes" xml:space="preserve">
          <source>Function prototype</source>
          <target state="translated">Prototipo de función</target>
        </trans-unit>
        <trans-unit id="9e039f9c7013d88c23a38a281ed14037c4166f2d" translate="yes" xml:space="preserve">
          <source>Function reordering based on profile instrumentation collects first time of execution of a function and orders these functions in ascending order.</source>
          <target state="translated">El reordenamiento de funciones basado en la instrumentación de perfiles recoge la primera vez que se ejecuta una función y ordena estas funciones en orden ascendente.</target>
        </trans-unit>
        <trans-unit id="d33f90e4120ff23ca44b34b56f5771105ef3b24d" translate="yes" xml:space="preserve">
          <source>Functions are aligned to 16-bit boundaries.</source>
          <target state="translated">Las funciones están alineadas con los límites de 16 bits.</target>
        </trans-unit>
        <trans-unit id="34be57d225a7e4b91308288bf7b00a21a76d0703" translate="yes" xml:space="preserve">
          <source>Functions are aligned to 32-bit boundaries, unless optimizing for size.</source>
          <target state="translated">Las funciones están alineadas con los límites de 32 bits,a menos que se optimice el tamaño.</target>
        </trans-unit>
        <trans-unit id="5a29ddf72dc39612a3206ea0dfa0993bffe35aee" translate="yes" xml:space="preserve">
          <source>Functions declared with the &lt;code&gt;naked&lt;/code&gt; attribute also require basic &lt;code&gt;asm&lt;/code&gt; (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;).</source>
          <target state="translated">Las funciones declaradas con el &lt;code&gt;naked&lt;/code&gt; atributo tambi&amp;eacute;n requieren b&amp;aacute;sica &lt;code&gt;asm&lt;/code&gt; (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b405d9a1c02455968daea5fb86ad7161a05b238c" translate="yes" xml:space="preserve">
          <source>Functions from different modes can be inlined in the caller&amp;rsquo;s mode.</source>
          <target state="translated">Las funciones de diferentes modos se pueden integrar en el modo de llamada.</target>
        </trans-unit>
        <trans-unit id="a51173ce4592b6408dafbf5dcd763cb00409451e" translate="yes" xml:space="preserve">
          <source>Functions prologues/epilogues are expanded as calls to appropriate subroutines. Code size is smaller.</source>
          <target state="translated">Las funciones prólogos/epílogos se amplían como llamadas a subrutinas apropiadas.El tamaño del código es menor.</target>
        </trans-unit>
        <trans-unit id="958942a81a4fb21510019af4adcbaec4037ab18c" translate="yes" xml:space="preserve">
          <source>Functions that are normally built in but do not have semantics defined by ISO C (such as &lt;code&gt;alloca&lt;/code&gt; and &lt;code&gt;ffs&lt;/code&gt;) are not built-in functions when</source>
          <target state="translated">Las funciones que normalmente est&amp;aacute;n construidas en, pero no tienen la sem&amp;aacute;ntica definidas por ISO C (tales como &lt;code&gt;alloca&lt;/code&gt; y &lt;code&gt;ffs&lt;/code&gt; ) no est&amp;aacute;n incorporados en funciones cuando se</target>
        </trans-unit>
        <trans-unit id="a77748cc250a919f08dac1cbb97eb54cbd2d36e9" translate="yes" xml:space="preserve">
          <source>Funding Free Software</source>
          <target state="translated">Financiación del software libre</target>
        </trans-unit>
        <trans-unit id="ad51c11605482040955d96c2db6f7d9f4eca570e" translate="yes" xml:space="preserve">
          <source>Furthermore, if the &lt;em&gt;earlyclobber&lt;/em&gt; operand is also a read/write operand, then that operand is written only after it&amp;rsquo;s used.</source>
          <target state="translated">Adem&amp;aacute;s, si el operando de &lt;em&gt;clobber temprano&lt;/em&gt; tambi&amp;eacute;n es un operando de lectura / escritura, entonces ese operando se escribe solo despu&amp;eacute;s de su uso.</target>
        </trans-unit>
        <trans-unit id="8c1a9865dc580dc97d71f0ac34525d7ff40826cf" translate="yes" xml:space="preserve">
          <source>Future versions of GCC may zero-extend, or use a target-defined &lt;code&gt;ptr_extend&lt;/code&gt; pattern. Do not rely on sign extension.</source>
          <target state="translated">Las versiones futuras de GCC pueden extenderse a cero o usar un patr&amp;oacute;n &lt;code&gt;ptr_extend&lt;/code&gt; definido por el objetivo . No conf&amp;iacute;e en la extensi&amp;oacute;n de la se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="6ed55690929b9e60aff3a9282723cba6d9ce77ea" translate="yes" xml:space="preserve">
          <source>G++ allows a virtual function returning &amp;lsquo;</source>
          <target state="translated">G ++ permite que una funci&amp;oacute;n virtual regrese '</target>
        </trans-unit>
        <trans-unit id="5114ba459fc06431a44841ea4654eb2a26a6c91e" translate="yes" xml:space="preserve">
          <source>G++ allows anonymous structs and unions to have members that are not public non-static data members (i.e. fields). These extensions are deprecated.</source>
          <target state="translated">G++permite a las estructuras anónimas y a los sindicatos tener miembros que no sean miembros de datos públicos no estáticos (es decir,campos).Estas extensiones están desaprobadas.</target>
        </trans-unit>
        <trans-unit id="de3e575c048ce4bfb45f20c4e2302053983a6e85" translate="yes" xml:space="preserve">
          <source>G++ allows attributes to follow a parenthesized direct initializer, e.g. &amp;lsquo;</source>
          <target state="translated">G ++ permite que los atributos sigan un inicializador directo entre par&amp;eacute;ntesis, por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="4279ad338a301cce60cdfae7e5135ebd09b1878c" translate="yes" xml:space="preserve">
          <source>G++ allows floating-point literals to appear in integral constant expressions, e.g. &amp;lsquo;</source>
          <target state="translated">G ++ permite que aparezcan literales de punto flotante en expresiones constantes integrales, por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="c5b988dd39fdeb99ab7e438425f37e6884df0f08" translate="yes" xml:space="preserve">
          <source>G++ allows static data members of const floating-point type to be declared with an initializer in a class definition. The standard only allows initializers for static members of const integral types and const enumeration types so this extension has been deprecated and will be removed from a future version.</source>
          <target state="translated">G++permite declarar miembros de datos estáticos de tipo const en punto flotante con un inicializador en una definición de clase.La norma sólo permite inicializadores para miembros estáticos de tipos integrales de const y tipos de enumeración de const,por lo que esta extensión ha quedado obsoleta y se eliminará de una futura versión.</target>
        </trans-unit>
        <trans-unit id="63f7f4841ad757c79aac590be15aedf6621086d6" translate="yes" xml:space="preserve">
          <source>G++ implements the &amp;ldquo;intuitive&amp;rdquo; algorithm for copy-assignment: assign all direct bases, then assign all members. In that algorithm, the virtual base subobject can be encountered more than once. In the example, copying proceeds in the following order: &amp;lsquo;</source>
          <target state="translated">G ++ implementa el algoritmo &amp;ldquo;intuitivo&amp;rdquo; para la asignaci&amp;oacute;n de copias: asigna todas las bases directas y luego asigna todos los miembros. En ese algoritmo, el subobjeto de base virtual se puede encontrar m&amp;aacute;s de una vez. En el ejemplo, la copia se realiza en el siguiente orden: '</target>
        </trans-unit>
        <trans-unit id="67e3c9106f6559177c33511b2d979e92d246d3b0" translate="yes" xml:space="preserve">
          <source>G++ implements the Borland model on targets where the linker supports it, including ELF targets (such as GNU/Linux), Mac OS X and Microsoft Windows. Otherwise G++ implements neither automatic model.</source>
          <target state="translated">G++implementa el modelo Borland en los objetivos donde el enlazador lo soporta,incluyendo objetivos ELF (como GNU/Linux),Mac OS X y Microsoft Windows.De lo contrario,G++no implementa ninguno de los dos modelos automáticos.</target>
        </trans-unit>
        <trans-unit id="31ff568d5d2e9d2f6743afcdc5f3a983bc913e2f" translate="yes" xml:space="preserve">
          <source>G++ implements the same behavior as GCC does when assigning to a volatile object&amp;mdash;there is no reread of the assigned-to object, the assigned rvalue is reused. Note that in C++ assignment expressions are lvalues, and if used as an lvalue, the volatile object is referred to. For instance, &lt;var&gt;vref&lt;/var&gt; refers to &lt;var&gt;vobj&lt;/var&gt;, as expected, in the following example:</source>
          <target state="translated">G ++ implementa el mismo comportamiento que GCC cuando se asigna a un objeto vol&amp;aacute;til: no se vuelve a leer el objeto asignado, el rvalue asignado se reutiliza. Tenga en cuenta que en C ++, las expresiones de asignaci&amp;oacute;n son valores l y, si se utilizan como valor l, se hace referencia al objeto vol&amp;aacute;til. Por ejemplo, &lt;var&gt;vref&lt;/var&gt; se refiere a &lt;var&gt;vobj&lt;/var&gt; , como se esperaba, en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="a1650ba68fd434ff4571a3ae6e0e946daaa36507" translate="yes" xml:space="preserve">
          <source>G3</source>
          <target state="translated">G3</target>
        </trans-unit>
        <trans-unit id="57c24c56c83113e722078337cfe2d513db43c570" translate="yes" xml:space="preserve">
          <source>G4</source>
          <target state="translated">G4</target>
        </trans-unit>
        <trans-unit id="75cc572d557c39d31a9a311423998e30b6913f73" translate="yes" xml:space="preserve">
          <source>G5</source>
          <target state="translated">G5</target>
        </trans-unit>
        <trans-unit id="47bc5f06e2bc84be8cac3eeae94be31fd0bb67f8" translate="yes" xml:space="preserve">
          <source>GBR</source>
          <target state="translated">GBR</target>
        </trans-unit>
        <trans-unit id="8577b47d2b705ad56be34a1a6a9f6472d1ac1001" translate="yes" xml:space="preserve">
          <source>GCC</source>
          <target state="translated">GCC</target>
        </trans-unit>
        <trans-unit id="2128b3c47a543c2fd225378159dcf1cee572dc1a" translate="yes" xml:space="preserve">
          <source>GCC aims towards being usable as a conforming freestanding implementation, or as the compiler for a conforming hosted implementation. By default, it acts as the compiler for a hosted implementation, defining &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; as &lt;code&gt;1&lt;/code&gt; and presuming that when the names of ISO C functions are used, they have the semantics defined in the standard. To make it act as a conforming freestanding implementation for a freestanding environment, use the option</source>
          <target state="translated">GCC tiene como objetivo ser utilizable como una implementaci&amp;oacute;n independiente conforme, o como el compilador para una implementaci&amp;oacute;n hospedada conforme. De forma predeterminada, act&amp;uacute;a como el compilador para una implementaci&amp;oacute;n alojada, definiendo &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; como &lt;code&gt;1&lt;/code&gt; y asumiendo que cuando se utilizan los nombres de las funciones ISO C, tienen la sem&amp;aacute;ntica definida en el est&amp;aacute;ndar. Para que act&amp;uacute;e como una implementaci&amp;oacute;n independiente conforme para un entorno independiente, utilice la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="a09efcf4281abbe557aa1d8c0037c8b8db485c71" translate="yes" xml:space="preserve">
          <source>GCC allows attributes to be set on C labels. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes. Other attributes are available for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and for types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC permite establecer atributos en etiquetas C. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos. Hay otros atributos disponibles para funciones (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (consulte &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), enumeradores (consulte &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Atributos de&lt;/a&gt; enumerador ), declaraciones (consulte &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Atributos de declaraci&amp;oacute;n&lt;/a&gt; ) y para tipos (consulte &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="188d2c46ce847222650ff9a197ae21b6d36834fd" translate="yes" xml:space="preserve">
          <source>GCC allows attributes to be set on enumerators. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes. Other attributes are available for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and for types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC permite establecer atributos en los enumeradores. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos. Hay otros atributos disponibles para funciones (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (ver &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), etiquetas (ver &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Atributos de etiqueta&lt;/a&gt; ), declaraciones (ver &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Atributos de declaraci&amp;oacute;n&lt;/a&gt; ) y para tipos (ver &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1318f5f0c876968e4d22801744660b2a68a5dbc1" translate="yes" xml:space="preserve">
          <source>GCC allows attributes to be set on null statements. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes. Other attributes are available for functions (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), and for types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC permite que los atributos se establezcan en declaraciones nulas. Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos. Hay otros atributos disponibles para funciones (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ), variables (ver &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), etiquetas (ver &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Atributos de etiqueta&lt;/a&gt; ), enumeradores (ver &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Atributos de&lt;/a&gt; enumerador ) y para tipos (ver &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f7518a10a612c3aa4683ccb174e0aca674b8c50" translate="yes" xml:space="preserve">
          <source>GCC allows static initialization of flexible array members. This is equivalent to defining a new structure containing the original structure followed by an array of sufficient size to contain the data. E.g. in the following, &lt;code&gt;f1&lt;/code&gt; is constructed as if it were declared like &lt;code&gt;f2&lt;/code&gt;.</source>
          <target state="translated">GCC permite la inicializaci&amp;oacute;n est&amp;aacute;tica de miembros de la matriz flexible. Esto equivale a definir una nueva estructura que contenga la estructura original seguida de una matriz de tama&amp;ntilde;o suficiente para contener los datos. Por ejemplo, a continuaci&amp;oacute;n, &lt;code&gt;f1&lt;/code&gt; se construye como si se declarara como &lt;code&gt;f2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f25be809d122cad042e0db0bcc9a75b7e95df2b" translate="yes" xml:space="preserve">
          <source>GCC allows the user to selectively enable or disable certain types of diagnostics, and change the kind of the diagnostic. For example, a project&amp;rsquo;s policy might require that all sources compile with</source>
          <target state="translated">GCC permite al usuario habilitar o deshabilitar selectivamente ciertos tipos de diagn&amp;oacute;sticos y cambiar el tipo de diagn&amp;oacute;stico. Por ejemplo, la pol&amp;iacute;tica de un proyecto puede requerir que todas las fuentes se compilen con</target>
        </trans-unit>
        <trans-unit id="095246dfc125cf940fca19907500328219191dc3" translate="yes" xml:space="preserve">
          <source>GCC allows using a &lt;code&gt;typedef&lt;/code&gt; name as the type specifier for a vector type, but only under the following circumstances:</source>
          <target state="translated">GCC permite usar un nombre &lt;code&gt;typedef&lt;/code&gt; como especificador de tipo para un tipo de vector, pero solo en las siguientes circunstancias:</target>
        </trans-unit>
        <trans-unit id="118ab2384628648bceb8c24d3c1faa22f9cfc67a" translate="yes" xml:space="preserve">
          <source>GCC allows using a &lt;code&gt;typedef&lt;/code&gt; name as the type specifier for a vector type.</source>
          <target state="translated">GCC permite usar un nombre &lt;code&gt;typedef&lt;/code&gt; como especificador de tipo para un tipo de vector.</target>
        </trans-unit>
        <trans-unit id="4dbc0782ac4d82d0f286d4feca2e87d560c81769" translate="yes" xml:space="preserve">
          <source>GCC allows you to declare &lt;em&gt;local labels&lt;/em&gt; in any nested block scope. A local label is just like an ordinary label, but you can only reference it (with a &lt;code&gt;goto&lt;/code&gt; statement, or by taking its address) within the block in which it is declared.</source>
          <target state="translated">GCC le permite declarar &lt;em&gt;etiquetas locales&lt;/em&gt; en cualquier &amp;aacute;mbito de bloque anidado. Una etiqueta local es como una etiqueta ordinaria, pero solo puede hacer referencia a ella (con una declaraci&amp;oacute;n &lt;code&gt;goto&lt;/code&gt; o tomando su direcci&amp;oacute;n) dentro del bloque en el que est&amp;aacute; declarada.</target>
        </trans-unit>
        <trans-unit id="11edda20db587e9081a40a5791b651f14e5edef4" translate="yes" xml:space="preserve">
          <source>GCC allows you to use</source>
          <target state="translated">El GCC le permite usar</target>
        </trans-unit>
        <trans-unit id="cb8172c4270b6a56a430a2344a1d357df8a89c7e" translate="yes" xml:space="preserve">
          <source>GCC already has an extensive list of suffixes built into it. This directive adds an entry to the end of the list of suffixes, but since the list is searched from the end backwards, it is effectively possible to override earlier entries using this technique.</source>
          <target state="translated">El GCC ya tiene una extensa lista de sufijos incorporados.Esta directiva añade una entrada al final de la lista de sufijos,pero como la lista se busca desde el final hacia atrás,es efectivamente posible anular las entradas anteriores mediante esta técnica.</target>
        </trans-unit>
        <trans-unit id="4946c9e7401c541aac6237c0b11a4f8762636048" translate="yes" xml:space="preserve">
          <source>GCC also defines the macro &lt;code&gt;__m&lt;var&gt;uarch&lt;/var&gt;__&lt;/code&gt; when tuning for ColdFire microarchitecture &lt;var&gt;uarch&lt;/var&gt;, where &lt;var&gt;uarch&lt;/var&gt; is one of the arguments given above.</source>
          <target state="translated">GCC tambi&amp;eacute;n define la macro &lt;code&gt;__m&lt;var&gt;uarch&lt;/var&gt;__&lt;/code&gt; al ajustar la microarquitectura ColdFire &lt;var&gt;uarch&lt;/var&gt; , donde &lt;var&gt;uarch&lt;/var&gt; es uno de los argumentos dados anteriormente.</target>
        </trans-unit>
        <trans-unit id="bd57161c41c158f961b92f3f1147120413b6477d" translate="yes" xml:space="preserve">
          <source>GCC also knows implicitly that arguments starting in</source>
          <target state="translated">El GCC también sabe implícitamente que los argumentos que comienzan en</target>
        </trans-unit>
        <trans-unit id="5590aa7708108855eef5df246b0491a821f68f35" translate="yes" xml:space="preserve">
          <source>GCC also offers a simple mechanism for printing messages during compilation.</source>
          <target state="translated">El CCG también ofrece un mecanismo sencillo para imprimir mensajes durante la compilación.</target>
        </trans-unit>
        <trans-unit id="ff5eb1c7d3d1103b9c01d9df5e0e050903b1adc0" translate="yes" xml:space="preserve">
          <source>GCC also provides a target specific macro &lt;code&gt;__BIGGEST_ALIGNMENT__&lt;/code&gt;, which is the largest alignment ever used for any data type on the target machine you are compiling for. For example, you could write:</source>
          <target state="translated">GCC tambi&amp;eacute;n proporciona una macro espec&amp;iacute;fica de destino &lt;code&gt;__BIGGEST_ALIGNMENT__&lt;/code&gt; , que es la alineaci&amp;oacute;n m&amp;aacute;s grande jam&amp;aacute;s utilizada para cualquier tipo de datos en la m&amp;aacute;quina de destino para la que est&amp;aacute; compilando. Por ejemplo, podr&amp;iacute;as escribir:</target>
        </trans-unit>
        <trans-unit id="1ce6a581ce58e7b0e52deb0ba48b6684312e9d7c" translate="yes" xml:space="preserve">
          <source>GCC also provides intrinsics to directly access the network registers. The intrinsics are:</source>
          <target state="translated">El GCC también proporciona los elementos intrínsecos para acceder directamente a los registros de la red.Los intrínsecos son:</target>
        </trans-unit>
        <trans-unit id="028d66aa5e30f9984efa701c3d35086edefd3f65" translate="yes" xml:space="preserve">
          <source>GCC also supports attributes on variable declarations (see &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Variable Attributes&lt;/a&gt;), labels (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;), enumerators (see &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Enumerator Attributes&lt;/a&gt;), statements (see &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Statement Attributes&lt;/a&gt;), and types (see &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Type Attributes&lt;/a&gt;).</source>
          <target state="translated">GCC tambi&amp;eacute;n admite atributos en declaraciones de variable (ver &lt;a href=&quot;variable-attributes#Variable-Attributes&quot;&gt;Atributos de variable&lt;/a&gt; ), etiquetas (ver &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Atributos de etiqueta&lt;/a&gt; ), enumeradores (ver &lt;a href=&quot;enumerator-attributes#Enumerator-Attributes&quot;&gt;Atributos de&lt;/a&gt; enumerador ), declaraciones (ver &lt;a href=&quot;statement-attributes#Statement-Attributes&quot;&gt;Atributos de declaraci&amp;oacute;n&lt;/a&gt; ) y tipos (ver &lt;a href=&quot;type-attributes#Type-Attributes&quot;&gt;Atributos de tipo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="51353b73f0da65e20b68eea37e8d612e8b885954" translate="yes" xml:space="preserve">
          <source>GCC also warns about function definitions that might be candidates for &lt;code&gt;format&lt;/code&gt; attributes. Again, these are only possible candidates. GCC guesses that &lt;code&gt;format&lt;/code&gt; attributes might be appropriate for any function that calls a function like &lt;code&gt;vprintf&lt;/code&gt; or &lt;code&gt;vscanf&lt;/code&gt;, but this might not always be the case, and some functions for which &lt;code&gt;format&lt;/code&gt; attributes are appropriate may not be detected.</source>
          <target state="translated">GCC tambi&amp;eacute;n advierte sobre las definiciones de funciones que podr&amp;iacute;an ser candidatas para los atributos de &lt;code&gt;format&lt;/code&gt; o . Nuevamente, estos son solo posibles candidatos. GCC supone que los atributos de &lt;code&gt;format&lt;/code&gt; o pueden ser apropiados para cualquier funci&amp;oacute;n que llame a una funci&amp;oacute;n como &lt;code&gt;vprintf&lt;/code&gt; o &lt;code&gt;vscanf&lt;/code&gt; , pero esto no siempre es as&amp;iacute;, y algunas funciones para las que los atributos de &lt;code&gt;format&lt;/code&gt; o son apropiados pueden no detectarse.</target>
        </trans-unit>
        <trans-unit id="e6346f95ac263c787786ddc66b5d9c0bcd8bac71" translate="yes" xml:space="preserve">
          <source>GCC always follows the C99 and C11 requirement that the result of division is truncated towards zero.</source>
          <target state="translated">GCC siempre sigue el requisito de C99 y C11 de que el resultado de la división se trunque hacia cero.</target>
        </trans-unit>
        <trans-unit id="71e58c529399ec16a2da4be1a53c86f1d271b88e" translate="yes" xml:space="preserve">
          <source>GCC always tries to compile your program if possible; it never gratuitously rejects a program whose meaning is clear merely because (for instance) it fails to conform to a standard. In some cases, however, the C and C++ standards specify that certain extensions are forbidden, and a diagnostic &lt;em&gt;must&lt;/em&gt; be issued by a conforming compiler. The</source>
          <target state="translated">GCC siempre intenta compilar su programa si es posible; nunca rechaza gratuitamente un programa cuyo significado es claro simplemente porque (por ejemplo) no se ajusta a un est&amp;aacute;ndar. En algunos casos, sin embargo, los est&amp;aacute;ndares C y C ++ especifican que ciertas extensiones est&amp;aacute;n prohibidas y un compilador conforme &lt;em&gt;debe&lt;/em&gt; emitir un diagn&amp;oacute;stico . los</target>
        </trans-unit>
        <trans-unit id="3d850d85ff9e9c0132b4336d9517c8233fd73c22" translate="yes" xml:space="preserve">
          <source>GCC by default uses the GNU Objective-C runtime library, which is part of GCC and is not the same as the Apple/NeXT Objective-C runtime library used on Apple systems. There are a number of differences documented in this manual. The options</source>
          <target state="translated">GCC utiliza por defecto la biblioteca de tiempo de ejecución GNU Objective-C,que forma parte de GCC y no es la misma que la biblioteca de tiempo de ejecución Apple/NeXT Objective-C que se utiliza en los sistemas de Apple.Hay varias diferencias documentadas en este manual.Las opciones</target>
        </trans-unit>
        <trans-unit id="1c0b38c968b6ef5ec06e42505963f829a108bef3" translate="yes" xml:space="preserve">
          <source>GCC by itself attempts to be a conforming freestanding implementation. See &lt;a href=&quot;standards#Standards&quot;&gt;Language Standards Supported by GCC&lt;/a&gt;, for details of what this means. Beyond the library facilities required of such an implementation, the rest of the C library is supplied by the vendor of the operating system. If that C library doesn&amp;rsquo;t conform to the C standards, then your programs might get warnings (especially when using</source>
          <target state="translated">GCC por s&amp;iacute; mismo intenta ser una implementaci&amp;oacute;n independiente conforme. Consulte &lt;a href=&quot;standards#Standards&quot;&gt;Est&amp;aacute;ndares de lenguaje admitidos por GCC&lt;/a&gt; para obtener detalles sobre lo que esto significa. M&amp;aacute;s all&amp;aacute; de las facilidades de biblioteca requeridas para tal implementaci&amp;oacute;n, el resto de la biblioteca C es suministrada por el proveedor del sistema operativo. Si esa biblioteca de C no se ajusta a los est&amp;aacute;ndares de C, entonces sus programas pueden recibir advertencias (especialmente al usar</target>
        </trans-unit>
        <trans-unit id="a367622db7093a4cc9943cb9b928ad16a228659d" translate="yes" xml:space="preserve">
          <source>GCC can allocate complex automatic variables in a noncontiguous fashion; it&amp;rsquo;s even possible for the real part to be in a register while the imaginary part is on the stack (or vice versa). Only the DWARF debug info format can represent this, so use of DWARF is recommended. If you are using the stabs debug info format, GCC describes a noncontiguous complex variable as if it were two separate variables of noncomplex type. If the variable&amp;rsquo;s actual name is &lt;code&gt;foo&lt;/code&gt;, the two fictitious variables are named &lt;code&gt;foo$real&lt;/code&gt; and &lt;code&gt;foo$imag&lt;/code&gt;. You can examine and set these two fictitious variables with your debugger.</source>
          <target state="translated">GCC puede asignar variables autom&amp;aacute;ticas complejas de forma no contigua; incluso es posible que la parte real est&amp;eacute; en un registro mientras que la parte imaginaria est&amp;aacute; en la pila (o viceversa). Solo el formato de informaci&amp;oacute;n de depuraci&amp;oacute;n DWARF puede representar esto, por lo que se recomienda el uso de DWARF. Si est&amp;aacute; utilizando el formato de informaci&amp;oacute;n de depuraci&amp;oacute;n de pu&amp;ntilde;aladas, GCC describe una variable compleja no contigua como si fueran dos variables separadas de tipo no complejo. Si el nombre real de la variable es &lt;code&gt;foo&lt;/code&gt; , las dos variables ficticias se denominan &lt;code&gt;foo$real&lt;/code&gt; y &lt;code&gt;foo$imag&lt;/code&gt; . Puede examinar y establecer estas dos variables ficticias con su depurador.</target>
        </trans-unit>
        <trans-unit id="f1f3d3d856350fe50d86862ccf0921b96281e6bd" translate="yes" xml:space="preserve">
          <source>GCC can compile the binary representation (BRIG) of the HSAIL text format as described in HSA Programmer&amp;rsquo;s Reference Manual version 1.0.1. This capability is typically utilized to implement the HSA runtime API&amp;rsquo;s HSAIL finalization extension for a gcc supported processor. HSA standards are freely available at &lt;a href=&quot;http://www.hsafoundation.com/standards/&quot;&gt;http://www.hsafoundation.com/standards/&lt;/a&gt;.</source>
          <target state="translated">GCC puede compilar la representaci&amp;oacute;n binaria (BRIG) del formato de texto HSAIL como se describe en la versi&amp;oacute;n 1.0.1 del Manual de referencia del programador de HSA. Esta capacidad se utiliza normalmente para implementar la extensi&amp;oacute;n de finalizaci&amp;oacute;n HSAIL de la API de tiempo de ejecuci&amp;oacute;n de HSA para un procesador compatible con gcc. Los est&amp;aacute;ndares de HSA est&amp;aacute;n disponibles gratuitamente en &lt;a href=&quot;http://www.hsafoundation.com/standards/&quot;&gt;http://www.hsafoundation.com/standards/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87356dae6f4ed6235c36eedc0fe148afee6229d9" translate="yes" xml:space="preserve">
          <source>GCC can generate code for both VxWorks kernels and real time processes (RTPs). This option switches from the former to the latter. It also defines the preprocessor macro &lt;code&gt;__RTP__&lt;/code&gt;.</source>
          <target state="translated">GCC puede generar c&amp;oacute;digo tanto para n&amp;uacute;cleos de VxWorks como para procesos en tiempo real (RTP). Esta opci&amp;oacute;n cambia de la primera a la &amp;uacute;ltima. Tambi&amp;eacute;n define la macro del preprocesador &lt;code&gt;__RTP__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9f5282eec43cb95e4c422b1995ae6896ab686c" translate="yes" xml:space="preserve">
          <source>GCC can only handle one commutative pair in an asm; if you use more, the compiler may fail. Note that you need not use the modifier if the two alternatives are strictly identical; this would only waste time in the reload pass.</source>
          <target state="translated">GCC sólo puede manejar un par conmutativo en un asm;si usa más,el compilador puede fallar.Tenga en cuenta que no es necesario utilizar el modificador si las dos alternativas son estrictamente idénticas;esto sólo haría perder tiempo en la pasada de recarga.</target>
        </trans-unit>
        <trans-unit id="78d74922e82c5075040c6a08c44444ac34a5ad2a" translate="yes" xml:space="preserve">
          <source>GCC comes with shell scripts to fix certain known problems in system header files. They install corrected copies of various header files in a special directory where only GCC will normally look for them. The scripts adapt to various systems by searching all the system header files for the problem cases that we know about.</source>
          <target state="translated">GCC viene con shell scripts para arreglar ciertos problemas conocidos en los archivos de cabecera del sistema.Instalan copias corregidas de varios archivos de encabezado en un directorio especial donde sólo GCC normalmente los buscará.Los scripts se adaptan a varios sistemas buscando en todos los archivos de cabecera del sistema los casos problemáticos que conocemos.</target>
        </trans-unit>
        <trans-unit id="cd976cd951c888839dc15c99651c6a379e4c0cac" translate="yes" xml:space="preserve">
          <source>GCC compiled code sometimes emits warnings from the HP-UX assembler of the form:</source>
          <target state="translated">El código compilado por GCC a veces emite advertencias del ensamblador HP-UX de la forma:</target>
        </trans-unit>
        <trans-unit id="81e4ed9eaf205df3f6c599be30d212f56ac91924" translate="yes" xml:space="preserve">
          <source>GCC complains about program fragments such as &amp;lsquo;</source>
          <target state="translated">GCC se queja de fragmentos de programas como '</target>
        </trans-unit>
        <trans-unit id="67982454dd3e3b7d64f34362d5f739d9716bb143" translate="yes" xml:space="preserve">
          <source>GCC complains about unterminated character constants inside of preprocessing conditionals that fail. Some programs have English comments enclosed in conditionals that are guaranteed to fail; if these comments contain apostrophes, GCC will probably report an error. For example, this code would produce an error:</source>
          <target state="translated">GCC se queja de las constantes de carácter no terminadas dentro de los condicionales de preprocesamiento que fallan.Algunos programas tienen comentarios en inglés incluidos en los condicionales que están garantizados para fallar;si estos comentarios contienen apóstrofes,GCC probablemente informará de un error.Por ejemplo,este código produciría un error:</target>
        </trans-unit>
        <trans-unit id="e4bb7adbf45dc4a3fb687d7313280a86480960d6" translate="yes" xml:space="preserve">
          <source>GCC complies with the OpenPOWER 64-Bit ELF V2 ABI Specification, which may be found at &lt;a href=&quot;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&quot;&gt;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&lt;/a&gt;. Appendix A of this document lists the vector API interfaces that must be provided by compliant compilers. Programmers should preferentially use the interfaces described therein. However, historically GCC has provided additional interfaces for access to vector instructions. These are briefly described below.</source>
          <target state="translated">GCC cumple con la especificaci&amp;oacute;n ABI ELF V2 de OpenPOWER de 64 bits, que se puede encontrar en &lt;a href=&quot;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&quot;&gt;http://openpowerfoundation.org/wp-content/uploads/resources/leabi-prd/content/index.html&lt;/a&gt; . El Ap&amp;eacute;ndice A de este documento enumera las interfaces API de vector que deben proporcionar los compiladores compatibles. Los programadores deben utilizar preferentemente las interfaces que se describen all&amp;iacute;. Sin embargo, hist&amp;oacute;ricamente GCC ha proporcionado interfaces adicionales para acceder a instrucciones vectoriales. Estos se describen brevemente a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="65f9b929facca207bcc2021009f1c0587b957cbf" translate="yes" xml:space="preserve">
          <source>GCC currently emits calls to &lt;code&gt;vmldExp2&lt;/code&gt;, &lt;code&gt;vmldLn2&lt;/code&gt;, &lt;code&gt;vmldLog102&lt;/code&gt;, &lt;code&gt;vmldPow2&lt;/code&gt;, &lt;code&gt;vmldTanh2&lt;/code&gt;, &lt;code&gt;vmldTan2&lt;/code&gt;, &lt;code&gt;vmldAtan2&lt;/code&gt;, &lt;code&gt;vmldAtanh2&lt;/code&gt;, &lt;code&gt;vmldCbrt2&lt;/code&gt;, &lt;code&gt;vmldSinh2&lt;/code&gt;, &lt;code&gt;vmldSin2&lt;/code&gt;, &lt;code&gt;vmldAsinh2&lt;/code&gt;, &lt;code&gt;vmldAsin2&lt;/code&gt;, &lt;code&gt;vmldCosh2&lt;/code&gt;, &lt;code&gt;vmldCos2&lt;/code&gt;, &lt;code&gt;vmldAcosh2&lt;/code&gt;, &lt;code&gt;vmldAcos2&lt;/code&gt;, &lt;code&gt;vmlsExp4&lt;/code&gt;, &lt;code&gt;vmlsLn4&lt;/code&gt;, &lt;code&gt;vmlsLog104&lt;/code&gt;, &lt;code&gt;vmlsPow4&lt;/code&gt;, &lt;code&gt;vmlsTanh4&lt;/code&gt;, &lt;code&gt;vmlsTan4&lt;/code&gt;, &lt;code&gt;vmlsAtan4&lt;/code&gt;, &lt;code&gt;vmlsAtanh4&lt;/code&gt;, &lt;code&gt;vmlsCbrt4&lt;/code&gt;, &lt;code&gt;vmlsSinh4&lt;/code&gt;, &lt;code&gt;vmlsSin4&lt;/code&gt;, &lt;code&gt;vmlsAsinh4&lt;/code&gt;, &lt;code&gt;vmlsAsin4&lt;/code&gt;, &lt;code&gt;vmlsCosh4&lt;/code&gt;, &lt;code&gt;vmlsCos4&lt;/code&gt;, &lt;code&gt;vmlsAcosh4&lt;/code&gt; and &lt;code&gt;vmlsAcos4&lt;/code&gt; for corresponding function type when</source>
          <target state="translated">GCC actualmente emite llamadas a &lt;code&gt;vmldExp2&lt;/code&gt; , &lt;code&gt;vmldLn2&lt;/code&gt; , &lt;code&gt;vmldLog102&lt;/code&gt; , &lt;code&gt;vmldPow2&lt;/code&gt; , &lt;code&gt;vmldTanh2&lt;/code&gt; , &lt;code&gt;vmldTan2&lt;/code&gt; , &lt;code&gt;vmldAtan2&lt;/code&gt; , &lt;code&gt;vmldAtanh2&lt;/code&gt; , &lt;code&gt;vmldCbrt2&lt;/code&gt; , &lt;code&gt;vmldSinh2&lt;/code&gt; , &lt;code&gt;vmldSin2&lt;/code&gt; , &lt;code&gt;vmldAsinh2&lt;/code&gt; , &lt;code&gt;vmldAsin2&lt;/code&gt; , &lt;code&gt;vmldCosh2&lt;/code&gt; , &lt;code&gt;vmldCos2&lt;/code&gt; , &lt;code&gt;vmldAcosh2&lt;/code&gt; , &lt;code&gt;vmldAcos2&lt;/code&gt; , &lt;code&gt;vmlsExp4&lt;/code&gt; , &lt;code&gt;vmlsLn4&lt;/code&gt; , &lt;code&gt;vmlsLog104&lt;/code&gt; , &lt;code&gt;vmlsPow4&lt;/code&gt; , &lt;code&gt;vmlsTanh4&lt;/code&gt; , &lt;code&gt;vmlsTan4&lt;/code&gt; , &lt;code&gt;vmlsAtan4&lt;/code&gt; , &lt;code&gt;vmlsAtanh4&lt;/code&gt; , &lt;code&gt;vmlsCbrt4&lt;/code&gt; , &lt;code&gt;vmlsSinh4&lt;/code&gt; , &lt;code&gt;vmlsSin4&lt;/code&gt; , &lt;code&gt;vmlsAsinh4&lt;/code&gt; , &lt;code&gt;vmlsAsin4&lt;/code&gt; , &lt;code&gt;vmlsCosh4&lt;/code&gt; , &lt;code&gt;vmlsCos4&lt;/code&gt; , &lt;code&gt;vmlsAcosh4&lt;/code&gt; y &lt;code&gt;vmlsAcos4&lt;/code&gt; para el tipo de funci&amp;oacute;n correspondiente cuando</target>
        </trans-unit>
        <trans-unit id="16f9d8d14967dad5157f0d4d4177e77917294c63" translate="yes" xml:space="preserve">
          <source>GCC defines a macro &lt;code&gt;__mcf&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; whenever it is generating code for a ColdFire target. The &lt;var&gt;arch&lt;/var&gt; in this macro is one of the</source>
          <target state="translated">GCC define una macro &lt;code&gt;__mcf&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; siempre que est&amp;eacute; generando c&amp;oacute;digo para un objetivo ColdFire. El &lt;var&gt;arch&lt;/var&gt; de esta macro es uno de los</target>
        </trans-unit>
        <trans-unit id="9690667ebb3c4d196426b91a67e183bca646b7c4" translate="yes" xml:space="preserve">
          <source>GCC defines a preprocessor macro for the specified &lt;var&gt;cpu&lt;/var&gt;. For the &amp;lsquo;</source>
          <target state="translated">GCC define una macro de preprocesador para la &lt;var&gt;cpu&lt;/var&gt; especificada . Para el '</target>
        </trans-unit>
        <trans-unit id="1ee4979d83e119fc65d0b3ce42180431e0b52daf" translate="yes" xml:space="preserve">
          <source>GCC defines several built-in macros so that the user code can test for the presence or absence of features. Almost any of the following built-in macros are deduced from device capabilities and thus triggered by the</source>
          <target state="translated">El GCC define varias macros incorporadas para que el código de usuario pueda comprobar la presencia o ausencia de características.Casi cualquiera de las siguientes macros incorporadas se deducen de las capacidades del dispositivo y por lo tanto se activan por el</target>
        </trans-unit>
        <trans-unit id="07c2bb68cb370eca1e6a61c97987834533dcec03" translate="yes" xml:space="preserve">
          <source>GCC defines the macro &lt;code&gt;__mcf_cpu_&lt;var&gt;cpu&lt;/var&gt;&lt;/code&gt; when ColdFire target &lt;var&gt;cpu&lt;/var&gt; is selected. It also defines &lt;code&gt;__mcf_family_&lt;var&gt;family&lt;/var&gt;&lt;/code&gt;, where the value of &lt;var&gt;family&lt;/var&gt; is given by the table above.</source>
          <target state="translated">GCC define la macro &lt;code&gt;__mcf_cpu_&lt;var&gt;cpu&lt;/var&gt;&lt;/code&gt; cuando se selecciona la &lt;var&gt;cpu&lt;/var&gt; de destino de ColdFire . Tambi&amp;eacute;n define &lt;code&gt;__mcf_family_&lt;var&gt;family&lt;/var&gt;&lt;/code&gt; , donde el valor de &lt;var&gt;family&lt;/var&gt; viene dado por la tabla anterior.</target>
        </trans-unit>
        <trans-unit id="57340a71d3d941522f73fea99d6d51e3e8ce6ff1" translate="yes" xml:space="preserve">
          <source>GCC defines the macro &lt;code&gt;__mcfhwdiv__&lt;/code&gt; when this option is enabled.</source>
          <target state="translated">GCC define la macro &lt;code&gt;__mcfhwdiv__&lt;/code&gt; cuando esta opci&amp;oacute;n est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="6a9b1f894460a8c96f48083896afccfe85c9be79" translate="yes" xml:space="preserve">
          <source>GCC defines the macros &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; when tuning for 680x0 architecture &lt;var&gt;arch&lt;/var&gt;. It also defines &lt;code&gt;mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; unless either</source>
          <target state="translated">GCC define las macros &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; y &lt;code&gt;__mc&lt;var&gt;arch&lt;/var&gt;__&lt;/code&gt; cuando se ajusta para la arquitectura 680x0 &lt;var&gt;arch&lt;/var&gt; . Tambi&amp;eacute;n define &lt;code&gt;mc&lt;var&gt;arch&lt;/var&gt;&lt;/code&gt; menos que</target>
        </trans-unit>
        <trans-unit id="2885698109b0288d9891eaf5f6f566e33bc93a28" translate="yes" xml:space="preserve">
          <source>GCC defines the preprocessor macro &lt;code&gt;__HAVE_BUILTIN_SPECULATION_SAFE_VALUE&lt;/code&gt; for targets that have been updated to support this builtin.</source>
          <target state="translated">GCC define la macro del preprocesador &lt;code&gt;__HAVE_BUILTIN_SPECULATION_SAFE_VALUE&lt;/code&gt; para los destinos que se han actualizado para admitir esta funci&amp;oacute;n integrada.</target>
        </trans-unit>
        <trans-unit id="9502202879d2e8497b3ab7402351c2cfb4aba65d" translate="yes" xml:space="preserve">
          <source>GCC defines two macros based on the value of this option. The first is &lt;code&gt;_MIPS_ARCH&lt;/code&gt;, which gives the name of target architecture, as a string. The second has the form &lt;code&gt;_MIPS_ARCH_&lt;var&gt;foo&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;foo&lt;/var&gt; is the capitalized value of &lt;code&gt;_MIPS_ARCH&lt;/code&gt;. For example,</source>
          <target state="translated">GCC define dos macros seg&amp;uacute;n el valor de esta opci&amp;oacute;n. El primero es &lt;code&gt;_MIPS_ARCH&lt;/code&gt; , que da el nombre de la arquitectura de destino, como una cadena. El segundo tiene la forma &lt;code&gt;_MIPS_ARCH_&lt;var&gt;foo&lt;/var&gt;&lt;/code&gt; , donde &lt;var&gt;foo&lt;/var&gt; es el valor en may&amp;uacute;scula de &lt;code&gt;_MIPS_ARCH&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="a26b5e085873721291414d2146a69ef3ff2df942" translate="yes" xml:space="preserve">
          <source>GCC depresses SSEx instructions when</source>
          <target state="translated">El GCC deprime las instrucciones SSEx cuando</target>
        </trans-unit>
        <trans-unit id="f00d9db0f7babc17a8b2e93a16eaa154dca9484f" translate="yes" xml:space="preserve">
          <source>GCC does not inline any functions when not optimizing unless you specify the &amp;lsquo;</source>
          <target state="translated">GCC no integra ninguna funci&amp;oacute;n cuando no se optimiza a menos que especifique el '</target>
        </trans-unit>
        <trans-unit id="d979e47341cf32b9e9788a98df7db938c53659aa" translate="yes" xml:space="preserve">
          <source>GCC does not parse basic &lt;code&gt;asm&lt;/code&gt;&amp;rsquo;s &lt;var&gt;AssemblerInstructions&lt;/var&gt;, which means there is no way to communicate to the compiler what is happening inside them. GCC has no visibility of symbols in the &lt;code&gt;asm&lt;/code&gt; and may discard them as unreferenced. It also does not know about side effects of the assembler code, such as modifications to memory or registers. Unlike some compilers, GCC assumes that no changes to general purpose registers occur. This assumption may change in a future release.</source>
          <target state="translated">GCC no analiza las &lt;code&gt;asm&lt;/code&gt; de &lt;var&gt;AssemblerInstructions&lt;/var&gt; asm b&amp;aacute;sicas , lo que significa que no hay forma de comunicar al compilador lo que est&amp;aacute; sucediendo dentro de ellas. GCC no tiene visibilidad de los s&amp;iacute;mbolos en la &lt;code&gt;asm&lt;/code&gt; y puede desecharlos como sin referencias. Tampoco conoce los efectos secundarios del c&amp;oacute;digo ensamblador, como modificaciones en la memoria o registros. A diferencia de algunos compiladores, GCC asume que no se producen cambios en los registros de prop&amp;oacute;sito general. Esta suposici&amp;oacute;n puede cambiar en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="cd46297b79a48028b406a3a22f8df3c38f23ed53" translate="yes" xml:space="preserve">
          <source>GCC does not provide the C library functionality associated with</source>
          <target state="translated">El GCC no proporciona la funcionalidad de la biblioteca C asociada con</target>
        </trans-unit>
        <trans-unit id="96d71d57d6177ab6f3fc682f6b185f4541d680d8" translate="yes" xml:space="preserve">
          <source>GCC does not provide the library facilities required only of hosted implementations, nor yet all the facilities required by C99 of freestanding implementations on all platforms. To use the facilities of a hosted environment, you need to find them elsewhere (for example, in the GNU C library). See &lt;a href=&quot;standard-libraries#Standard-Libraries&quot;&gt;Standard Libraries&lt;/a&gt;.</source>
          <target state="translated">GCC no proporciona las facilidades de biblioteca requeridas solo para implementaciones alojadas, ni todas las facilidades requeridas por C99 de implementaciones independientes en todas las plataformas. Para utilizar las instalaciones de un entorno alojado, debe encontrarlas en otro lugar (por ejemplo, en la biblioteca GNU C). Consulte &lt;a href=&quot;standard-libraries#Standard-Libraries&quot;&gt;Bibliotecas est&amp;aacute;ndar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86c923d0a51125464840f7ea1874cf6ab2974fb7" translate="yes" xml:space="preserve">
          <source>GCC does not substitute macro arguments when they appear inside of string constants. For example, the following macro in GCC</source>
          <target state="translated">El GCC no sustituye los argumentos macro cuando aparecen dentro de las constantes de la cadena.Por ejemplo,el siguiente macro en GCC</target>
        </trans-unit>
        <trans-unit id="42a91da8639ee03ec161a4bd756ad60809129b66" translate="yes" xml:space="preserve">
          <source>GCC does not support any extended integer types.</source>
          <target state="translated">El CCG no admite ningún tipo de números enteros extendidos.</target>
        </trans-unit>
        <trans-unit id="3ce5b628a549292da4090df5538cf2cd3541c673" translate="yes" xml:space="preserve">
          <source>GCC does not support using this feature with a non-static local variable since such variables do not have assembler names. If you are trying to put the variable in a particular register, see &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Explicit Register Variables&lt;/a&gt;.</source>
          <target state="translated">GCC no admite el uso de esta funci&amp;oacute;n con una variable local no est&amp;aacute;tica ya que tales variables no tienen nombres de ensamblador. Si est&amp;aacute; intentando poner la variable en un registro en particular, consulte &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Variables de registro expl&amp;iacute;citas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="057dd4b479d4087929d93c02eca9edfef895599b" translate="yes" xml:space="preserve">
          <source>GCC does not use such values.</source>
          <target state="translated">El GCC no utiliza tales valores.</target>
        </trans-unit>
        <trans-unit id="6b22e4a77b39e5fcd62364faba592ec172555481" translate="yes" xml:space="preserve">
          <source>GCC emits warnings based on this attribute by default; use</source>
          <target state="translated">GCC emite advertencias basadas en este atributo por defecto;utilice</target>
        </trans-unit>
        <trans-unit id="6213b35197bfb3bb104e08212f01a4cf35332f2f" translate="yes" xml:space="preserve">
          <source>GCC enables this option by default. If you want to force the compiler to check if a variable is referenced, regardless of whether or not optimization is turned on, use the</source>
          <target state="translated">GCC habilita esta opción por defecto.Si desea obligar al compilador a comprobar si una variable está referenciada,independientemente de si la optimización está activada o no,utilice la opción</target>
        </trans-unit>
        <trans-unit id="d7b2a859b296fb3f8914b78d7834ccf3e648a510" translate="yes" xml:space="preserve">
          <source>GCC has currently no support for non-fragile instance variables.</source>
          <target state="translated">El CCG no tiene actualmente apoyo para las variables de instancia no frágil.</target>
        </trans-unit>
        <trans-unit id="9b64961814c7627599dfb66d9541dfbc1c55e8a3" translate="yes" xml:space="preserve">
          <source>GCC has long supported variadic macros, and used a different syntax that allowed you to give a name to the variable arguments just like any other argument. Here is an example:</source>
          <target state="translated">El GCC ha apoyado durante mucho tiempo las macros variadas,y ha utilizado una sintaxis diferente que le permitía dar un nombre a los argumentos variables como cualquier otro argumento.He aquí un ejemplo:</target>
        </trans-unit>
        <trans-unit id="e677a4ecf07d49ec983c792d6fd35d17489c7528" translate="yes" xml:space="preserve">
          <source>GCC has the following spec strings built into it. Spec files can override these strings or create their own. Note that individual targets can also add their own spec strings to this list.</source>
          <target state="translated">El GCC tiene las siguientes cadenas de especificaciones incorporadas.Los archivos de especificaciones pueden anular estas cadenas o crear las suyas propias.Ten en cuenta que los objetivos individuales también pueden añadir sus propias cadenas de especificaciones a esta lista.</target>
        </trans-unit>
        <trans-unit id="ed8411601030aef9d10cc9d6209db6260f4d910d" translate="yes" xml:space="preserve">
          <source>GCC implements a limited buffer overflow protection mechanism that can prevent some buffer overflow attacks by determining the sizes of objects into which data is about to be written and preventing the writes when the size isn&amp;rsquo;t sufficient. The built-in functions described below yield the best results when used together and when optimization is enabled. For example, to detect object sizes across function boundaries or to follow pointer assignments through non-trivial control flow they rely on various optimization passes enabled with</source>
          <target state="translated">GCC implementa un mecanismo de protecci&amp;oacute;n de desbordamiento de b&amp;uacute;fer limitado que puede evitar algunos ataques de desbordamiento de b&amp;uacute;fer al determinar el tama&amp;ntilde;o de los objetos en los que se van a escribir datos y evitar las escrituras cuando el tama&amp;ntilde;o no es suficiente. Las funciones integradas que se describen a continuaci&amp;oacute;n producen los mejores resultados cuando se usan juntas y cuando la optimizaci&amp;oacute;n est&amp;aacute; habilitada. Por ejemplo, para detectar tama&amp;ntilde;os de objetos a trav&amp;eacute;s de los l&amp;iacute;mites de funciones o para seguir asignaciones de punteros a trav&amp;eacute;s de un flujo de control no trivial, se basan en varias pasadas de optimizaci&amp;oacute;n habilitadas con</target>
        </trans-unit>
        <trans-unit id="c63f8d617f5fcd74378c430997fb1de4655a5a57" translate="yes" xml:space="preserve">
          <source>GCC implements extensions for C as described in the ARM C Language Extensions (ACLE) specification, which can be found at &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&lt;/a&gt;.</source>
          <target state="translated">GCC implementa extensiones para C como se describe en la especificaci&amp;oacute;n ARM C Language Extensions (ACLE), que se puede encontrar en &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ihi0053c/IHI0053C_acle_2_0.pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="293bbd3b2e69a9d930833e11f1b427e7997876a6" translate="yes" xml:space="preserve">
          <source>GCC implements for both C and C++ a syntactic extension to implement the &lt;code&gt;offsetof&lt;/code&gt; macro.</source>
          <target state="translated">GCC implementa para C y C ++ una extensi&amp;oacute;n sint&amp;aacute;ctica para implementar la macro &lt;code&gt;offsetof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="322077390825044afaea930b7263992ddcea81e8" translate="yes" xml:space="preserve">
          <source>GCC implements taking the address of a nested function using a technique called &lt;em&gt;trampolines&lt;/em&gt;. This technique was described in Lexical Closures for C++ (Thomas M. Breuel, USENIX C++ Conference Proceedings, October 17-21, 1988).</source>
          <target state="translated">GCC implementa tomar la direcci&amp;oacute;n de una funci&amp;oacute;n anidada usando una t&amp;eacute;cnica llamada &lt;em&gt;trampolines&lt;/em&gt; . Esta t&amp;eacute;cnica fue descrita en Lexical Closures for C ++ (Thomas M. Breuel, USENIX C ++ Conference Proceedings, 17-21 de octubre de 1988).</target>
        </trans-unit>
        <trans-unit id="239348ac99d6992297a72fcc17bd9b383a471db0" translate="yes" xml:space="preserve">
          <source>GCC implements the ARMv8-M Security Extensions as described in the ARMv8-M Security Extensions: Requirements on Development Tools Engineering Specification, which can be found at &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&lt;/a&gt;.</source>
          <target state="translated">GCC implementa las extensiones de seguridad ARMv8-M como se describe en las extensiones de seguridad ARMv8-M: requisitos en la especificaci&amp;oacute;n de ingenier&amp;iacute;a de herramientas de desarrollo, que se puede encontrar en &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc. ecm0359818 / ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c1d6efdb055c03457ac985aa41eeb676f9d1c1c" translate="yes" xml:space="preserve">
          <source>GCC implements three different semantics of declaring a function inline. One is available with</source>
          <target state="translated">El GCC implementa tres semánticas diferentes para declarar una función en línea.Una está disponible con</target>
        </trans-unit>
        <trans-unit id="16fab68e571685f848321494bfa65aa76fa12ecf" translate="yes" xml:space="preserve">
          <source>GCC includes built-in versions of many of the functions in the standard C library. These functions come in two forms: one whose names start with the &lt;code&gt;__builtin_&lt;/code&gt; prefix, and the other without. Both forms have the same type (including prototype), the same address (when their address is taken), and the same meaning as the C library functions even if you specify the</source>
          <target state="translated">GCC incluye versiones integradas de muchas de las funciones de la biblioteca C est&amp;aacute;ndar. Estas funciones vienen en dos formas: una cuyos nombres comienzan con el prefijo &lt;code&gt;__builtin_&lt;/code&gt; y la otra sin &amp;eacute;l. Ambos formularios tienen el mismo tipo (incluido el prototipo), la misma direcci&amp;oacute;n (cuando se toma su direcci&amp;oacute;n) y el mismo significado que las funciones de la biblioteca C, incluso si especifica el</target>
        </trans-unit>
        <trans-unit id="6ddb06bf023a460b3469518f6828ceb9799c46e8" translate="yes" xml:space="preserve">
          <source>GCC is incompatible with traditional C.</source>
          <target state="translated">El GCC es incompatible con el C tradicional.</target>
        </trans-unit>
        <trans-unit id="d28b24326033740593178727cd1510ca18099b74" translate="yes" xml:space="preserve">
          <source>GCC is only limited by available memory.</source>
          <target state="translated">El GCC sólo está limitado por la memoria disponible.</target>
        </trans-unit>
        <trans-unit id="e1b7ed70d92a385236df81656270c5df961819cc" translate="yes" xml:space="preserve">
          <source>GCC needs to install corrected versions of some system header files. This is because most target systems have some header files that won&amp;rsquo;t work with GCC unless they are changed. Some have bugs, some are incompatible with ISO C, and some depend on special features of other compilers.</source>
          <target state="translated">GCC necesita instalar versiones corregidas de algunos archivos de encabezado del sistema. Esto se debe a que la mayor&amp;iacute;a de los sistemas de destino tienen algunos archivos de encabezado que no funcionar&amp;aacute;n con GCC a menos que se modifiquen. Algunos tienen errores, otros son incompatibles con ISO C y algunos dependen de caracter&amp;iacute;sticas especiales de otros compiladores.</target>
        </trans-unit>
        <trans-unit id="6fec00d5e695a6ba7008f039024af2f2354b9175" translate="yes" xml:space="preserve">
          <source>GCC no longer supports DWARF Version 1, which is substantially different than Version 2 and later. For historical reasons, some other DWARF-related options such as</source>
          <target state="translated">El GCC ya no soporta la versión 1 de DWARF,que es sustancialmente diferente de la versión 2 y posteriores.Por razones históricas,algunas otras opciones relacionadas con DWARF como</target>
        </trans-unit>
        <trans-unit id="9571fcf4d32ba7634429d5420351196a13337bf1" translate="yes" xml:space="preserve">
          <source>GCC normally defines &lt;code&gt;__STDC__&lt;/code&gt; to be 1, and in addition defines &lt;code&gt;__STRICT_ANSI__&lt;/code&gt; if you specify the</source>
          <target state="translated">GCC normalmente define &lt;code&gt;__STDC__&lt;/code&gt; como 1, y adem&amp;aacute;s define &lt;code&gt;__STRICT_ANSI__&lt;/code&gt; si especifica el</target>
        </trans-unit>
        <trans-unit id="d2a04d28db5bb4fd272285d6f2261f1af937b1aa" translate="yes" xml:space="preserve">
          <source>GCC normally generates special code to handle certain built-in functions more efficiently; for instance, calls to &lt;code&gt;alloca&lt;/code&gt; may become single instructions which adjust the stack directly, and calls to &lt;code&gt;memcpy&lt;/code&gt; may become inline copy loops. The resulting code is often both smaller and faster, but since the function calls no longer appear as such, you cannot set a breakpoint on those calls, nor can you change the behavior of the functions by linking with a different library. In addition, when a function is recognized as a built-in function, GCC may use information about that function to warn about problems with calls to that function, or to generate more efficient code, even if the resulting code still contains calls to that function. For example, warnings are given with</source>
          <target state="translated">GCC normalmente genera c&amp;oacute;digo especial para manejar ciertas funciones integradas de manera m&amp;aacute;s eficiente; por ejemplo, las llamadas a &lt;code&gt;alloca&lt;/code&gt; pueden convertirse en instrucciones &amp;uacute;nicas que ajustan la pila directamente, y las llamadas a &lt;code&gt;memcpy&lt;/code&gt; pueden convertirse en bucles de copia en l&amp;iacute;nea. El c&amp;oacute;digo resultante suele ser m&amp;aacute;s peque&amp;ntilde;o y m&amp;aacute;s r&amp;aacute;pido, pero dado que las llamadas a la funci&amp;oacute;n ya no aparecen como tales, no puede establecer un punto de interrupci&amp;oacute;n en esas llamadas, ni puede cambiar el comportamiento de las funciones vinculando con una biblioteca diferente. Adem&amp;aacute;s, cuando una funci&amp;oacute;n se reconoce como una funci&amp;oacute;n incorporada, GCC puede usar informaci&amp;oacute;n sobre esa funci&amp;oacute;n para advertir sobre problemas con las llamadas a esa funci&amp;oacute;n, o para generar un c&amp;oacute;digo m&amp;aacute;s eficiente, incluso si el c&amp;oacute;digo resultante todav&amp;iacute;a contiene llamadas a esa funci&amp;oacute;n. . Por ejemplo, las advertencias se dan con</target>
        </trans-unit>
        <trans-unit id="7e6e1ac548faaad8ae2131d82037c03b74f72b7e" translate="yes" xml:space="preserve">
          <source>GCC normally makes string constants read-only. If several identical-looking string constants are used, GCC stores only one copy of the string.</source>
          <target state="translated">El GCC normalmente hace constantes de cadena de sólo lectura.Si se utilizan varias constantes de cadena de aspecto idéntico,GCC almacena sólo una copia de la cadena.</target>
        </trans-unit>
        <trans-unit id="11a713f18e4fa0802eb282a6537925d48c0259a3" translate="yes" xml:space="preserve">
          <source>GCC normally uses a single instruction to load values from the GOT. While this is relatively efficient, it only works if the GOT is smaller than about 64k. Anything larger causes the linker to report an error such as:</source>
          <target state="translated">El GCC normalmente utiliza una sola instrucción para cargar los valores del GOT.Aunque esto es relativamente eficiente,sólo funciona si el GOT es más pequeño que unos 64k.Cualquier cosa más grande hace que el enlazador reporte un error como:</target>
        </trans-unit>
        <trans-unit id="be424d75f5ffc48b72e433597659af0ae3069a92" translate="yes" xml:space="preserve">
          <source>GCC option.</source>
          <target state="translated">Opción GCC.</target>
        </trans-unit>
        <trans-unit id="0cb280cc3350dd85b51b4e6912bba246b1815ba4" translate="yes" xml:space="preserve">
          <source>GCC permits a C structure to have no members:</source>
          <target state="translated">El GCC permite que una estructura C no tenga miembros:</target>
        </trans-unit>
        <trans-unit id="410ccd5268fc842081ec500688897d4eab9d507c" translate="yes" xml:space="preserve">
          <source>GCC provides a couple of special builtin functions to aid in the writing of interrupt handlers in C.</source>
          <target state="translated">GCC proporciona un par de funciones especiales incorporadas para ayudar en la escritura de los manejadores de interrupción en C.</target>
        </trans-unit>
        <trans-unit id="9a84666be4b2834544f27c65de6a453c576dd60a" translate="yes" xml:space="preserve">
          <source>GCC provides a large number of built-in functions other than the ones mentioned above. Some of these are for internal use in the processing of exceptions or variable-length argument lists and are not documented here because they may change from time to time; we do not recommend general use of these functions.</source>
          <target state="translated">El CCG proporciona un gran número de funciones incorporadas además de las mencionadas anteriormente.Algunas de ellas son de uso interno en el procesamiento de excepciones o listas de argumentos de longitud variable y no se documentan aquí porque pueden cambiar de vez en cuando;no recomendamos el uso general de estas funciones.</target>
        </trans-unit>
        <trans-unit id="dd6c408349b302ebed79b324cb6148ad8750cb77" translate="yes" xml:space="preserve">
          <source>GCC provides an interface for the PowerPC family of processors to access the AltiVec operations described in Motorola&amp;rsquo;s AltiVec Programming Interface Manual. The interface is made available by including &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; and using</source>
          <target state="translated">GCC proporciona una interfaz para que la familia de procesadores PowerPC acceda a las operaciones de AltiVec descritas en el Manual de interfaz de programaci&amp;oacute;n AltiVec de Motorola. La interfaz est&amp;aacute; disponible al incluir &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; y usar</target>
        </trans-unit>
        <trans-unit id="f17fd1e9e7781f60f577293ffbb0fbe50f2aa38c" translate="yes" xml:space="preserve">
          <source>GCC provides an interface to selected machine instructions from the picoChip instruction set.</source>
          <target state="translated">El GCC proporciona una interfaz para las instrucciones de máquinas seleccionadas del conjunto de instrucciones del picoChip.</target>
        </trans-unit>
        <trans-unit id="5ddbeccb51a8011bd71cee78329676c8768e012d" translate="yes" xml:space="preserve">
          <source>GCC provides built-in versions of the ISO C99 floating-point comparison macros that avoid raising exceptions for unordered operands. They have the same names as the standard macros ( &lt;code&gt;isgreater&lt;/code&gt;, &lt;code&gt;isgreaterequal&lt;/code&gt;, &lt;code&gt;isless&lt;/code&gt;, &lt;code&gt;islessequal&lt;/code&gt;, &lt;code&gt;islessgreater&lt;/code&gt;, and &lt;code&gt;isunordered&lt;/code&gt;) , with &lt;code&gt;__builtin_&lt;/code&gt; prefixed. We intend for a library implementor to be able to simply &lt;code&gt;#define&lt;/code&gt; each standard macro to its built-in equivalent. In the same fashion, GCC provides &lt;code&gt;fpclassify&lt;/code&gt;, &lt;code&gt;isfinite&lt;/code&gt;, &lt;code&gt;isinf_sign&lt;/code&gt;, &lt;code&gt;isnormal&lt;/code&gt; and &lt;code&gt;signbit&lt;/code&gt; built-ins used with &lt;code&gt;__builtin_&lt;/code&gt; prefixed. The &lt;code&gt;isinf&lt;/code&gt; and &lt;code&gt;isnan&lt;/code&gt; built-in functions appear both with and without the &lt;code&gt;__builtin_&lt;/code&gt; prefix.</source>
          <target state="translated">GCC proporciona versiones integradas de las macros de comparaci&amp;oacute;n de punto flotante ISO C99 que evitan generar excepciones para operandos desordenados. Ellos tienen los mismos nombres que las macros est&amp;aacute;ndar ( &lt;code&gt;isgreater&lt;/code&gt; , &lt;code&gt;isgreaterequal&lt;/code&gt; , &lt;code&gt;isless&lt;/code&gt; , &lt;code&gt;islessequal&lt;/code&gt; , &lt;code&gt;islessgreater&lt;/code&gt; y &lt;code&gt;isunordered&lt;/code&gt; ), con &lt;code&gt;__builtin_&lt;/code&gt; prefijado. Pretendemos que un implementador de bibliotecas pueda simplemente &lt;code&gt;#define&lt;/code&gt; cada macro est&amp;aacute;ndar a su equivalente incorporado. De la misma manera, GCC proporciona &lt;code&gt;fpclassify&lt;/code&gt; , &lt;code&gt;isfinite&lt;/code&gt; , &lt;code&gt;isinf_sign&lt;/code&gt; , &lt;code&gt;isnormal&lt;/code&gt; y &lt;code&gt;signbit&lt;/code&gt; incorporados utilizados con el prefijo &lt;code&gt;__builtin_&lt;/code&gt; . Las &lt;code&gt;isinf&lt;/code&gt; &lt;code&gt;isnan&lt;/code&gt; isinf e isnan aparecen con y sin el prefijo &lt;code&gt;__builtin_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2050dfe83adc5c7628805205b83a18bf6445e1ea" translate="yes" xml:space="preserve">
          <source>GCC provides extensions for the SPU processor as described in the Sony/Toshiba/IBM SPU Language Extensions Specification. GCC&amp;rsquo;s implementation differs in several ways.</source>
          <target state="translated">GCC proporciona extensiones para el procesador SPU como se describe en la Especificaci&amp;oacute;n de extensiones de idioma de Sony / Toshiba / IBM SPU. La implementaci&amp;oacute;n de GCC difiere de varias maneras.</target>
        </trans-unit>
        <trans-unit id="e32059373d4f323b9500c52b6c9f30c837d92c67" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access certain instructions of the TI C6X processors. These intrinsics, listed below, are available after inclusion of the &lt;code&gt;c6x_intrinsics.h&lt;/code&gt; header file. They map directly to C6X instructions.</source>
          <target state="translated">GCC proporciona elementos intr&amp;iacute;nsecos para acceder a ciertas instrucciones de los procesadores TI C6X. Estos elementos intr&amp;iacute;nsecos, que se enumeran a continuaci&amp;oacute;n, est&amp;aacute;n disponibles despu&amp;eacute;s de la inclusi&amp;oacute;n del archivo de encabezado &lt;code&gt;c6x_intrinsics.h&lt;/code&gt; . Se asignan directamente a las instrucciones de C6X.</target>
        </trans-unit>
        <trans-unit id="4b78e24ee2fcd774983a8458d70a096c1f01f9ae" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access every instruction of the TILE-Gx processor. The intrinsics are of the form:</source>
          <target state="translated">El GCC proporciona acceso intrínseco a todas las instrucciones del procesador TILE-Gx.Los intrínsecos son de la forma:</target>
        </trans-unit>
        <trans-unit id="9929eef1ea9191b05967ff4d40ec8ba33acf1914" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access every instruction of the TILEPro processor. The intrinsics are of the form:</source>
          <target state="translated">El GCC proporciona acceso intrínseco a todas las instrucciones del procesador TILEPro.Los intrínsecos son de la forma:</target>
        </trans-unit>
        <trans-unit id="ce1f47a40b55c4bca6e7d75e5dd0559de5a981c1" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access the SIMD instructions provided by the MSA MIPS SIMD Architecture. The interface is made available by including &lt;code&gt;&amp;lt;msa.h&amp;gt;&lt;/code&gt; and using</source>
          <target state="translated">GCC proporciona elementos intr&amp;iacute;nsecos para acceder a las instrucciones SIMD proporcionadas por la arquitectura MSA MIPS SIMD. La interfaz est&amp;aacute; disponible al incluir &lt;code&gt;&amp;lt;msa.h&amp;gt;&lt;/code&gt; y usar</target>
        </trans-unit>
        <trans-unit id="40749dfbc24dc6f5a0b131fccc39dc31c09ec61c" translate="yes" xml:space="preserve">
          <source>GCC provides intrinsics to access the SIMD instructions provided by the ST Microelectronics Loongson-2E and -2F processors. These intrinsics, available after inclusion of the &lt;code&gt;loongson.h&lt;/code&gt; header file, operate on the following 64-bit vector types:</source>
          <target state="translated">GCC proporciona elementos intr&amp;iacute;nsecos para acceder a las instrucciones SIMD proporcionadas por los procesadores ST Microelectronics Loongson-2E y -2F. Estos elementos intr&amp;iacute;nsecos, disponibles despu&amp;eacute;s de la inclusi&amp;oacute;n del archivo de encabezado &lt;code&gt;loongson.h&lt;/code&gt; , operan en los siguientes tipos de vectores de 64 bits:</target>
        </trans-unit>
        <trans-unit id="924dd6007d38ce7b6e1d6cc29626f87cdabebfe1" translate="yes" xml:space="preserve">
          <source>GCC provides many FR-V-specific built-in functions. In general, these functions are intended to be compatible with those described by FR-V Family, Softune C/C++ Compiler Manual (V6), Fujitsu Semiconductor. The two exceptions are &lt;code&gt;__MDUNPACKH&lt;/code&gt; and &lt;code&gt;__MBTOHE&lt;/code&gt;, the GCC forms of which pass 128-bit values by pointer rather than by value.</source>
          <target state="translated">GCC proporciona muchas funciones integradas espec&amp;iacute;ficas de FR-V. En general, estas funciones est&amp;aacute;n destinadas a ser compatibles con las descritas por FR-V Family, Softune C / C ++ Compiler Manual (V6), Fujitsu Semiconductor. Las dos excepciones son &lt;code&gt;__MDUNPACKH&lt;/code&gt; y &lt;code&gt;__MBTOHE&lt;/code&gt; , cuyas formas GCC pasan valores de 128 bits por puntero en lugar de por valor.</target>
        </trans-unit>
        <trans-unit id="9e2fa02f56a7975c68bfa6e70c41727409fe7b0c" translate="yes" xml:space="preserve">
          <source>GCC provides other MIPS-specific built-in functions:</source>
          <target state="translated">El GCC proporciona otras funciones incorporadas específicas de MIPS:</target>
        </trans-unit>
        <trans-unit id="c10a95a94bae56390209bcb97b207903625a1bc4" translate="yes" xml:space="preserve">
          <source>GCC provides the built-in functions &lt;code&gt;__builtin_setjmp&lt;/code&gt; and &lt;code&gt;__builtin_longjmp&lt;/code&gt; which are similar to, but not interchangeable with, the C library functions &lt;code&gt;setjmp&lt;/code&gt; and &lt;code&gt;longjmp&lt;/code&gt;. The built-in versions are used internally by GCC&amp;rsquo;s libraries to implement exception handling on some targets. You should use the standard C library functions declared in &lt;code&gt;&amp;lt;setjmp.h&amp;gt;&lt;/code&gt; in user code instead of the builtins.</source>
          <target state="translated">GCC proporciona las funciones &lt;code&gt;__builtin_setjmp&lt;/code&gt; y &lt;code&gt;__builtin_longjmp&lt;/code&gt; que son similares, pero no intercambiables con, las funciones de la biblioteca C &lt;code&gt;setjmp&lt;/code&gt; y &lt;code&gt;longjmp&lt;/code&gt; . Las versiones integradas son utilizadas internamente por las bibliotecas de GCC para implementar el manejo de excepciones en algunos objetivos. Debe usar las funciones de la biblioteca C est&amp;aacute;ndar declaradas en &lt;code&gt;&amp;lt;setjmp.h&amp;gt;&lt;/code&gt; en el c&amp;oacute;digo de usuario en lugar de las funciones integradas.</target>
        </trans-unit>
        <trans-unit id="9735e9559d39719652bb957e983b7d2a3d2f7126" translate="yes" xml:space="preserve">
          <source>GCC provides three magic constants that hold the name of the current function as a string. In C++11 and later modes, all three are treated as constant expressions and can be used in &lt;code&gt;constexpr&lt;/code&gt; constexts. The first of these constants is &lt;code&gt;__func__&lt;/code&gt;, which is part of the C99 standard:</source>
          <target state="translated">GCC proporciona tres constantes m&amp;aacute;gicas que contienen el nombre de la funci&amp;oacute;n actual como una cadena. En C ++ 11 y modos posteriores, los tres se tratan como expresiones constantes y se pueden usar en &lt;code&gt;constexpr&lt;/code&gt; constexts. La primera de estas constantes es &lt;code&gt;__func__&lt;/code&gt; , que es parte del est&amp;aacute;ndar C99:</target>
        </trans-unit>
        <trans-unit id="2948277f494886df96fe31449754e2666c1dabe5" translate="yes" xml:space="preserve">
          <source>GCC provides two interfaces for accessing the Hardware Transactional Memory (HTM) instructions available on some of the PowerPC family of processors (eg, POWER8). The two interfaces come in a low level interface, consisting of built-in functions specific to PowerPC and a higher level interface consisting of inline functions that are common between PowerPC and S/390.</source>
          <target state="translated">GCC proporciona dos interfaces para acceder a las instrucciones de la Memoria Transaccional de Hardware (HTM)disponibles en algunos de los procesadores de la familia PowerPC (por ejemplo,POWER8).Las dos interfaces vienen en una interfaz de bajo nivel,que consiste en funciones incorporadas específicas de PowerPC y una interfaz de nivel superior que consiste en funciones en línea que son comunes entre PowerPC y S/390.</target>
        </trans-unit>
        <trans-unit id="f29e392d59a7180cc6e4238e88b7157ffcf6417f" translate="yes" xml:space="preserve">
          <source>GCC stands for &amp;ldquo;GNU Compiler Collection&amp;rdquo;. GCC is an integrated distribution of compilers for several major programming languages. These languages currently include C, C++, Objective-C, Objective-C++, Fortran, Ada, D, Go, and BRIG (HSAIL).</source>
          <target state="translated">GCC son las siglas de &quot;GNU Compiler Collection&quot;. GCC es una distribuci&amp;oacute;n integrada de compiladores para varios lenguajes de programaci&amp;oacute;n importantes. Estos lenguajes incluyen actualmente C, C ++, Objective-C, Objective-C ++, Fortran, Ada, D, Go y BRIG (HSAIL).</target>
        </trans-unit>
        <trans-unit id="1d5a85fa7b27fa126424357ffe5ddd8aadcd2aa6" translate="yes" xml:space="preserve">
          <source>GCC support of decimal float as specified by the draft technical report is incomplete:</source>
          <target state="translated">El apoyo del CCG a la flotación decimal,tal como se especifica en el proyecto de informe técnico,es incompleto:</target>
        </trans-unit>
        <trans-unit id="28561e4b3e7debdbfb6dbdfe238413f5b85b54ce" translate="yes" xml:space="preserve">
          <source>GCC support of fixed-point types as specified by the draft technical report is incomplete:</source>
          <target state="translated">El apoyo del CCG a los tipos de punto fijo,tal como se especifica en el proyecto de informe técnico,es incompleto:</target>
        </trans-unit>
        <trans-unit id="1fa5de60932a0f2deade437763dee9d9034d0c2f" translate="yes" xml:space="preserve">
          <source>GCC supports &amp;ldquo;traditional&amp;rdquo; Objective-C (also known as &amp;ldquo;Objective-C 1.0&amp;rdquo;) and contains support for the Objective-C exception and synchronization syntax. It has also support for a number of &amp;ldquo;Objective-C 2.0&amp;rdquo; language extensions, including properties, fast enumeration (only for Objective-C), method attributes and the @optional and @required keywords in protocols. GCC supports Objective-C++ and features available in Objective-C are also available in Objective-C++.</source>
          <target state="translated">GCC soporta Objective-C &amp;ldquo;tradicional&amp;rdquo; (tambi&amp;eacute;n conocido como &amp;ldquo;Objective-C 1.0&amp;rdquo;) y contiene soporte para la sintaxis de sincronizaci&amp;oacute;n y excepci&amp;oacute;n de Objective-C. Tambi&amp;eacute;n es compatible con una serie de extensiones de lenguaje &quot;Objective-C 2.0&quot;, incluidas propiedades, enumeraci&amp;oacute;n r&amp;aacute;pida (solo para Objective-C), atributos de m&amp;eacute;todo y las palabras clave @optional y @required en protocolos. GCC es compatible con Objective-C ++ y las funciones disponibles en Objective-C tambi&amp;eacute;n est&amp;aacute;n disponibles en Objective-C ++.</target>
        </trans-unit>
        <trans-unit id="830690076ebfb70e332b381ddb9fe46655004637" translate="yes" xml:space="preserve">
          <source>GCC supports MIPS DSP operations using both the generic vector extensions (see &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Vector Extensions&lt;/a&gt;) and a collection of MIPS-specific built-in functions. Both kinds of support are enabled by the</source>
          <target state="translated">GCC admite operaciones MIPS DSP utilizando tanto las extensiones vectoriales gen&amp;eacute;ricas (consulte &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Extensiones vectoriales&lt;/a&gt; ) como una colecci&amp;oacute;n de funciones integradas espec&amp;iacute;ficas de MIPS. Ambos tipos de soporte est&amp;aacute;n habilitados por el</target>
        </trans-unit>
        <trans-unit id="8d83e55eff0bd290fe83057edfb4aff0d4da11fc" translate="yes" xml:space="preserve">
          <source>GCC supports SIMD operations on the SPARC using both the generic vector extensions (see &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Vector Extensions&lt;/a&gt;) as well as built-in functions for the SPARC Visual Instruction Set (VIS). When you use the</source>
          <target state="translated">GCC admite operaciones SIMD en SPARC utilizando tanto las extensiones vectoriales gen&amp;eacute;ricas (consulte &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Extensiones vectoriales&lt;/a&gt; ) como funciones integradas para el conjunto de instrucciones visuales (VIS) de SPARC. Cuando usa el</target>
        </trans-unit>
        <trans-unit id="76e5e7f27add586f752fd2c88bf216b480271ed7" translate="yes" xml:space="preserve">
          <source>GCC supports a &lt;code&gt;#pragma&lt;/code&gt; directive that changes the name used in assembly for a given declaration. While this pragma is supported on all platforms, it is intended primarily to provide compatibility with the Solaris system headers. This effect can also be achieved using the asm labels extension (see &lt;a href=&quot;asm-labels#Asm-Labels&quot;&gt;Asm Labels&lt;/a&gt;).</source>
          <target state="translated">GCC admite una directiva &lt;code&gt;#pragma&lt;/code&gt; que cambia el nombre usado en ensamblado para una declaraci&amp;oacute;n dada. Si bien este pragma es compatible con todas las plataformas, su objetivo principal es brindar compatibilidad con los encabezados del sistema Solaris. Este efecto tambi&amp;eacute;n se puede lograr usando la extensi&amp;oacute;n de etiquetas ASM (ver &lt;a href=&quot;asm-labels#Asm-Labels&quot;&gt;Etiquetas ASM&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="498314540c8d67676764e9f766eda8fd96a7daed" translate="yes" xml:space="preserve">
          <source>GCC supports a number of command-line options that control adding run-time instrumentation to the code it normally generates. For example, one purpose of instrumentation is collect profiling statistics for use in finding program hot spots, code coverage analysis, or profile-guided optimizations. Another class of program instrumentation is adding run-time checking to detect programming errors like invalid pointer dereferences or out-of-bounds array accesses, as well as deliberately hostile attacks such as stack smashing or C++ vtable hijacking. There is also a general hook which can be used to implement other forms of tracing or function-level instrumentation for debug or program analysis purposes.</source>
          <target state="translated">El GCC soporta una serie de opciones de línea de comando que controlan la adición de instrumentación de tiempo de ejecución al código que normalmente genera.Por ejemplo,uno de los propósitos de la instrumentación es recopilar estadísticas de perfiles para utilizarlas en la búsqueda de puntos calientes de programas,análisis de cobertura de código u optimizaciones guiadas por perfiles.Otra clase de instrumentación de programas es añadir la comprobación en tiempo de ejecución para detectar errores de programación como derivaciones de punteros inválidas o accesos a matrices fuera de límites,así como ataques deliberadamente hostiles como la destrucción de pilas o el secuestro de vtables en C++.También existe un gancho general que puede utilizarse para implementar otras formas de rastreo o instrumentación a nivel de función con fines de depuración o análisis de programas.</target>
        </trans-unit>
        <trans-unit id="1030e6dea2c81b69bdc7270b03b39b5f569ad6fa" translate="yes" xml:space="preserve">
          <source>GCC supports a variant of the o32 ABI in which floating-point registers are 64 rather than 32 bits wide. You can select this combination with</source>
          <target state="translated">El GCC soporta una variante de la ABI o32 en la que los registros de punto flotante tienen 64 en lugar de 32 bits de ancho.Puede seleccionar esta combinación con</target>
        </trans-unit>
        <trans-unit id="c3965449e7a5dc4d5ed8a9dc3199dec909c35dc5" translate="yes" xml:space="preserve">
          <source>GCC supports only two&amp;rsquo;s complement integer types, and all bit patterns are ordinary values.</source>
          <target state="translated">GCC solo admite tipos enteros en complemento a dos, y todos los patrones de bits son valores ordinarios.</target>
        </trans-unit>
        <trans-unit id="83dd0c21621e0a6e0dd523c863cbfaef04449bd4" translate="yes" xml:space="preserve">
          <source>GCC supports paired-single operations using both the generic vector extensions (see &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Vector Extensions&lt;/a&gt;) and a collection of MIPS-specific built-in functions. Both kinds of support are enabled by the</source>
          <target state="translated">GCC admite operaciones emparejadas-individuales utilizando tanto las extensiones vectoriales gen&amp;eacute;ricas (consulte &lt;a href=&quot;vector-extensions#Vector-Extensions&quot;&gt;Extensiones vectoriales&lt;/a&gt; ) como una colecci&amp;oacute;n de funciones integradas espec&amp;iacute;ficas de MIPS. Ambos tipos de soporte est&amp;aacute;n habilitados por el</target>
        </trans-unit>
        <trans-unit id="b55fc398fe2655fec7265522ba909be632a50b88" translate="yes" xml:space="preserve">
          <source>GCC supports several types of pragmas, primarily in order to compile code originally written for other compilers. Note that in general we do not recommend the use of pragmas; See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;, for further explanation.</source>
          <target state="translated">GCC admite varios tipos de pragmas, principalmente para compilar c&amp;oacute;digo escrito originalmente para otros compiladores. Tenga en cuenta que, en general, no recomendamos el uso de pragmas; Consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="653525fcb8a016916ca28e1dd65b18ab8839e4b5" translate="yes" xml:space="preserve">
          <source>GCC supports some of the RX instructions which cannot be expressed in the C programming language via the use of built-in functions. The following functions are supported:</source>
          <target state="translated">El GCC soporta algunas de las instrucciones de RX que no pueden ser expresadas en el lenguaje de programación C mediante el uso de las funciones incorporadas.Se admiten las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="4b0cba78b946248aec959caf8a965144462518ce" translate="yes" xml:space="preserve">
          <source>GCC supports the D 2.0 programming language. The D language itself is currently defined by its reference implementation and supporting language specification, described at &lt;a href=&quot;https://dlang.org/spec/spec.html&quot;&gt;https://dlang.org/spec/spec.html&lt;/a&gt;.</source>
          <target state="translated">GCC admite el lenguaje de programaci&amp;oacute;n D 2.0. El lenguaje D en s&amp;iacute; est&amp;aacute; actualmente definido por su implementaci&amp;oacute;n de referencia y la especificaci&amp;oacute;n del lenguaje de soporte, descrita en &lt;a href=&quot;https://dlang.org/spec/spec.html&quot;&gt;https://dlang.org/spec/spec.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="359d53772696a2b7864fe27fe3565593d8a4b28c" translate="yes" xml:space="preserve">
          <source>GCC supports the following AVR devices and ISAs:</source>
          <target state="translated">El GCC es compatible con los siguientes dispositivos AVR e ISA:</target>
        </trans-unit>
        <trans-unit id="2ea7c76cda0c4fbb899bd829aa15b4c8a69297f6" translate="yes" xml:space="preserve">
          <source>GCC supports the original ISO C++ standard published in 1998, and the 2011 and 2014 revisions.</source>
          <target state="translated">El GCC apoya la norma ISO C++original publicada en 1998,y las revisiones de 2011 y 2014.</target>
        </trans-unit>
        <trans-unit id="858a69c7492112ce45741ecc79e61821fd61a803" translate="yes" xml:space="preserve">
          <source>GCC supports these options when compiling for C-SKY V2 processors.</source>
          <target state="translated">El GCC apoya estas opciones al compilar para los procesadores C-SKY V2.</target>
        </trans-unit>
        <trans-unit id="0dc67ad6d4b46256a65720385ae1177b91b75554" translate="yes" xml:space="preserve">
          <source>GCC supports two forms of SVE code generation: &amp;ldquo;vector-length agnostic&amp;rdquo; output that works with any size of vector register and &amp;ldquo;vector-length specific&amp;rdquo; output that allows GCC to make assumptions about the vector length when it is useful for optimization reasons. The possible values of &amp;lsquo;</source>
          <target state="translated">GCC admite dos formas de generaci&amp;oacute;n de c&amp;oacute;digo SVE: salida &amp;ldquo;agn&amp;oacute;stica de longitud vectorial&amp;rdquo; que funciona con cualquier tama&amp;ntilde;o de registro vectorial y salida &amp;ldquo;espec&amp;iacute;fica de longitud vectorial&amp;rdquo; que permite a GCC hacer suposiciones sobre la longitud del vector cuando es &amp;uacute;til por motivos de optimizaci&amp;oacute;n. Los posibles valores de '</target>
        </trans-unit>
        <trans-unit id="5b3ded850043ac176423c8bd10dd3fbbab6dc5cd" translate="yes" xml:space="preserve">
          <source>GCC treats all characters of identifiers as significant. According to K&amp;amp;R-1 (2.2), &amp;ldquo;No more than the first eight characters are significant, although more may be used.&amp;rdquo;. Also according to K&amp;amp;R-1 (2.2), &amp;ldquo;An identifier is a sequence of letters and digits; the first character must be a letter. The underscore _ counts as a letter.&amp;rdquo;, but GCC also allows dollar signs in identifiers.</source>
          <target state="translated">GCC trata todos los caracteres de los identificadores como significativos. Seg&amp;uacute;n K &amp;amp; R-1 (2.2), &amp;ldquo;No m&amp;aacute;s de los primeros ocho caracteres son significativos, aunque se pueden usar m&amp;aacute;s&amp;rdquo;. Tambi&amp;eacute;n de acuerdo con K &amp;amp; R-1 (2.2), &amp;ldquo;Un identificador es una secuencia de letras y d&amp;iacute;gitos; el primer car&amp;aacute;cter debe ser una letra. El gui&amp;oacute;n bajo _ cuenta como una letra &amp;rdquo;, pero GCC tambi&amp;eacute;n permite signos de d&amp;oacute;lar en los identificadores.</target>
        </trans-unit>
        <trans-unit id="feaee8cb866302ba1b5ec59a1ce37d673602a1f3" translate="yes" xml:space="preserve">
          <source>GCC uses &lt;var&gt;name&lt;/var&gt; to determine what kind of instructions it can emit when generating assembly code (as if by</source>
          <target state="translated">GCC usa el &lt;var&gt;name&lt;/var&gt; para determinar qu&amp;eacute; tipo de instrucciones puede emitir al generar c&amp;oacute;digo ensamblador (como si</target>
        </trans-unit>
        <trans-unit id="66e1ddf3758925ad2362fd6f220c229932999055" translate="yes" xml:space="preserve">
          <source>GCC uses &lt;var&gt;name&lt;/var&gt; to determine what kind of instructions it can emit when generating assembly code. If</source>
          <target state="translated">GCC usa el &lt;var&gt;name&lt;/var&gt; para determinar qu&amp;eacute; tipo de instrucciones puede emitir al generar c&amp;oacute;digo ensamblador. Si</target>
        </trans-unit>
        <trans-unit id="813ae2789d4b6769128e82ee496ab87522d87f2b" translate="yes" xml:space="preserve">
          <source>GCC uses a garbage collector to manage its own memory allocation. This parameter specifies the minimum percentage by which the garbage collector&amp;rsquo;s heap should be allowed to expand between collections. Tuning this may improve compilation speed; it has no effect on code generation.</source>
          <target state="translated">GCC utiliza un recolector de basura para administrar su propia asignaci&amp;oacute;n de memoria. Este par&amp;aacute;metro especifica el porcentaje m&amp;iacute;nimo por el cual se debe permitir que el mont&amp;oacute;n del recolector de basura se expanda entre colecciones. Ajustar esto puede mejorar la velocidad de compilaci&amp;oacute;n; no tiene ning&amp;uacute;n efecto sobre la generaci&amp;oacute;n de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="ae9ac11b129e57b155bc25157be869b1b76e80ad" translate="yes" xml:space="preserve">
          <source>GCC uses corrected versions of system header files. This is necessary, but doesn&amp;rsquo;t always work smoothly.</source>
          <target state="translated">GCC utiliza versiones corregidas de los archivos de encabezado del sistema. Esto es necesario, pero no siempre funciona correctamente.</target>
        </trans-unit>
        <trans-unit id="819a72ed7eaf70f991d756c9fa760994a62ab526" translate="yes" xml:space="preserve">
          <source>GCC uses heuristics to guess branch probabilities if they are not provided by profiling feedback (</source>
          <target state="translated">El CCG utiliza la heurística para adivinar las probabilidades de las ramas si no se proporcionan mediante la retroalimentación del perfil (</target>
        </trans-unit>
        <trans-unit id="1a8376e3c4e7645e0b124141064b06d15d9df6a1" translate="yes" xml:space="preserve">
          <source>GCC uses the system C library, which might not be compliant with the ISO C standard.</source>
          <target state="translated">El GCC utiliza la biblioteca del sistema C,que podría no cumplir con la norma ISO C.</target>
        </trans-unit>
        <trans-unit id="ca6cd448f1a33799ac2da1a0d9dfa000cd6841ec" translate="yes" xml:space="preserve">
          <source>GCC will not inline any functions if the</source>
          <target state="translated">El GCC no pondrá en línea ninguna función si el</target>
        </trans-unit>
        <trans-unit id="8a47996357771546a1d05e5991be4fe03520b6e5" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s default behavior is to emit all inline functions with the &lt;code&gt;dllexport&lt;/code&gt; attribute. Since this can cause object file-size bloat, you can use</source>
          <target state="translated">El comportamiento predeterminado de GCC es emitir todas las funciones en l&amp;iacute;nea con el atributo &lt;code&gt;dllexport&lt;/code&gt; . Dado que esto puede causar un aumento del tama&amp;ntilde;o del archivo del objeto, puede usar</target>
        </trans-unit>
        <trans-unit id="af8e45be98e36024842dc1bd8893718108d0574b" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s implementation of the high-level language interface available from C and C++ code differs from Motorola&amp;rsquo;s documentation in several ways.</source>
          <target state="translated">La implementaci&amp;oacute;n de GCC de la interfaz de lenguaje de alto nivel disponible en el c&amp;oacute;digo C y C ++ difiere de la documentaci&amp;oacute;n de Motorola en varios aspectos.</target>
        </trans-unit>
        <trans-unit id="e78ca1e1182b55c5bde4b195b5d85015058a98d0" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s optimizers do not treat this code like the non-volatile code in the earlier examples. They do not move it out of loops or omit it on the assumption that the result from a previous call is still valid.</source>
          <target state="translated">Los optimizadores de GCC no tratan este c&amp;oacute;digo como el c&amp;oacute;digo no vol&amp;aacute;til de los ejemplos anteriores. No lo sacan de los bucles ni lo omiten asumiendo que el resultado de una llamada anterior sigue siendo v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="dbc61f28ee0b681eff97897cb82a2c8d282dc076" translate="yes" xml:space="preserve">
          <source>GCC&amp;rsquo;s optimizers sometimes discard &lt;code&gt;asm&lt;/code&gt; statements if they determine there is no need for the output variables. Also, the optimizers may move code out of loops if they believe that the code will always return the same result (i.e. none of its input values change between calls). Using the &lt;code&gt;volatile&lt;/code&gt; qualifier disables these optimizations. &lt;code&gt;asm&lt;/code&gt; statements that have no output operands, including &lt;code&gt;asm goto&lt;/code&gt; statements, are implicitly volatile.</source>
          <target state="translated">Los optimizadores de GCC a veces descartan declaraciones &lt;code&gt;asm&lt;/code&gt; si determinan que no hay necesidad de las variables de salida. Adem&amp;aacute;s, los optimizadores pueden sacar el c&amp;oacute;digo de los bucles si creen que el c&amp;oacute;digo siempre devolver&amp;aacute; el mismo resultado (es decir, ninguno de sus valores de entrada cambia entre llamadas). El uso del calificador &lt;code&gt;volatile&lt;/code&gt; desactiva estas optimizaciones. &lt;code&gt;asm&lt;/code&gt; sentencias asm que no tienen operandos de salida, incluidas las &lt;code&gt;asm goto&lt;/code&gt; , son impl&amp;iacute;citamente vol&amp;aacute;tiles.</target>
        </trans-unit>
        <trans-unit id="1e750d3c829a6b818589899b42ede982312a7f98" translate="yes" xml:space="preserve">
          <source>GCOV_ERROR_FILE</source>
          <target state="translated">GCOV_ERROR_FILE</target>
        </trans-unit>
        <trans-unit id="e485aa772b73ea7b58dcf4966c0a2d3b9c745805" translate="yes" xml:space="preserve">
          <source>GCOV_EXIT_AT_ERROR</source>
          <target state="translated">GCOV_EXIT_AT_ERROR</target>
        </trans-unit>
        <trans-unit id="80aecc9b56754f32438dd132183cddc7e4df32f1" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX contains the prefix to add to the absolute paths in the object file. Prefix can be absolute, or relative. The default is no prefix.</source>
          <target state="translated">GCOV_PREFIX contiene el prefijo para añadir a las rutas absolutas en el archivo de objeto.El prefijo puede ser absoluto o relativo.El valor por defecto es sin prefijo.</target>
        </trans-unit>
        <trans-unit id="891aee4538b1a332bb00b85c9e7c43d1cf40d1d1" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX=/target/run</source>
          <target state="translated">GCOV_PREFIX=/target/run</target>
        </trans-unit>
        <trans-unit id="f0bcf8de4466a3194e31ce81577ad85f4f449ccb" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX_STRIP indicates the how many initial directory names to strip off the hardwired absolute paths. Default value is 0.</source>
          <target state="translated">GCOV_PREFIX_STRIP indica el número de nombres de directorios iniciales para quitar las rutas absolutas cableadas.El valor por defecto es 0.</target>
        </trans-unit>
        <trans-unit id="7069713a73584b12e5e1b6c6673abb78172fe103" translate="yes" xml:space="preserve">
          <source>GCOV_PREFIX_STRIP=1</source>
          <target state="translated">GCOV_PREFIX_STRIP=1</target>
        </trans-unit>
        <trans-unit id="a007084938316d2847460b0f869fd2dab151324f" translate="yes" xml:space="preserve">
          <source>GFNI instructions.</source>
          <target state="translated">Instrucciones del GFNI.</target>
        </trans-unit>
        <trans-unit id="768001d59e5da45e8ce2de4652950a5db0123cf5" translate="yes" xml:space="preserve">
          <source>GNU C allows you to associate specific hardware registers with C variables. In almost all cases, allowing the compiler to assign registers produces the best code. However under certain unusual circumstances, more precise control over the variable storage is required.</source>
          <target state="translated">GNU C permite asociar registros de hardware específicos con variables C.En casi todos los casos,permitir que el compilador asigne registros produce el mejor código.Sin embargo,bajo ciertas circunstancias inusuales,se requiere un control más preciso sobre el almacenamiento de las variables.</target>
        </trans-unit>
        <trans-unit id="1282a7948680a82fce143391cee57deb8d315356" translate="yes" xml:space="preserve">
          <source>GNU C extends ISO C to allow a function prototype to override a later old-style non-prototype definition. Consider the following example:</source>
          <target state="translated">GNU C extiende ISO C para permitir que un prototipo de función anule una definición posterior de no-prototipo de estilo antiguo.Consideremos el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="e77e07d95404402b67fc9bef0aec0c9a34ecc38f" translate="yes" xml:space="preserve">
          <source>GNU C provides several language features not found in ISO standard C. (The</source>
          <target state="translated">GNU C proporciona varias características de lenguaje que no se encuentran en el estándar ISO C.(El</target>
        </trans-unit>
        <trans-unit id="d45fbb49066a76f230e9020bfe458e74293358d2" translate="yes" xml:space="preserve">
          <source>GNU C++ does not support old-style function definitions, so this extension is irrelevant.</source>
          <target state="translated">GNU C++no soporta definiciones de funciones de estilo antiguo,por lo que esta extensión es irrelevante.</target>
        </trans-unit>
        <trans-unit id="2ba257a10dfda1a80f343df43a5f9faccbca64b3" translate="yes" xml:space="preserve">
          <source>GNU CPP has two further variadic macro extensions, and permits them to be used with either of the above forms of macro definition.</source>
          <target state="translated">El CPP de GNU tiene otras dos extensiones de macros variadas,y permite que se utilicen con cualquiera de las formas de definición de macros mencionadas anteriormente.</target>
        </trans-unit>
        <trans-unit id="9dbaa828d6809d3452cb2a6728f3023aae5a8b22" translate="yes" xml:space="preserve">
          <source>GNU CPP permits you to completely omit the variable arguments in this way. In the above examples, the compiler would complain, though since the expansion of the macro still has the extra comma after the format string.</source>
          <target state="translated">El CPP de GNU permite omitir completamente los argumentos variables de esta manera.En los ejemplos anteriores,el compilador se quejaría,aunque como la expansión de la macro todavía tiene la coma extra después de la cadena de formato.</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">Licencia de Documentación Libre de GNU</target>
        </trans-unit>
        <trans-unit id="d9cbf0740e34d88c506fb7df6e17deeabd18660c" translate="yes" xml:space="preserve">
          <source>GNU General Public License</source>
          <target state="translated">Licencia Pública General de GNU</target>
        </trans-unit>
        <trans-unit id="ea5447d52819458fc788d8fe66484dcf6f8b58c5" translate="yes" xml:space="preserve">
          <source>GNU General Public License says how you can copy and share GCC.</source>
          <target state="translated">La Licencia Pública General de GNU dice cómo puedes copiar y compartir GCC.</target>
        </trans-unit>
        <trans-unit id="a21d2651a31b14abba6b9f4cc89e6d16156a2f47" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides constant string objects that are generated directly by the compiler. You declare a constant string object by prefixing a C constant string with the character &amp;lsquo;</source>
          <target state="translated">GNU Objective-C proporciona objetos de cadena constante que son generados directamente por el compilador. Usted declara un objeto de cadena constante anteponiendo una cadena constante C con el car&amp;aacute;cter '</target>
        </trans-unit>
        <trans-unit id="d4b0f24c5578d309a3a80bcf9db1efef7dc80491" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides exception support built into the language, as in the following example:</source>
          <target state="translated">GNU Objective-C proporciona soporte de excepciones incorporado en el lenguaje,como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="183b8b6fa7f0ebe7cc24b6e6b64ea37e46538bc2" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides support for synchronized blocks:</source>
          <target state="translated">GNU Objective-C proporciona soporte para bloques sincronizados:</target>
        </trans-unit>
        <trans-unit id="5a76f04c435b8a53e2673208f47df13d27337155" translate="yes" xml:space="preserve">
          <source>GNU Objective-C provides support for the fast enumeration syntax:</source>
          <target state="translated">GNU Objective-C proporciona soporte para la sintaxis de enumeración rápida:</target>
        </trans-unit>
        <trans-unit id="bd8453bc7fd0b5c5a5eb0b2fb1cc7653d6106ce4" translate="yes" xml:space="preserve">
          <source>GNU Objective-C runtime features.</source>
          <target state="translated">Características del tiempo de ejecución de GNU Objective-C.</target>
        </trans-unit>
        <trans-unit id="dc4139cbd1ca2e4ec1fdbaf154a309856bbea2a6" translate="yes" xml:space="preserve">
          <source>GNU Objective-C supports the &lt;code&gt;@encode&lt;/code&gt; syntax that allows you to create a type encoding from a C/Objective-C type. For example, &lt;code&gt;@encode(int)&lt;/code&gt; is compiled by the compiler into &lt;code&gt;&quot;i&quot;&lt;/code&gt;.</source>
          <target state="translated">GNU Objective-C admite la sintaxis &lt;code&gt;@encode&lt;/code&gt; que le permite crear una codificaci&amp;oacute;n de tipo a partir de un tipo C / Objective-C. Por ejemplo, &lt;code&gt;@encode(int)&lt;/code&gt; es compilado por el compilador en &lt;code&gt;&quot;i&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72bdab580bf81d58abe49ef7feb3d22b198aca72" translate="yes" xml:space="preserve">
          <source>GNU dialect of</source>
          <target state="translated">El dialecto GNU de</target>
        </trans-unit>
        <trans-unit id="0cce44d2e046653755b9171f853b5aa7f7510c0f" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C11. The name &amp;lsquo;</source>
          <target state="translated">Dialecto GNU de ISO C11. El nombre '</target>
        </trans-unit>
        <trans-unit id="17c597be9d56a306b84e8b735a051e0b49bf682b" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C17. This is the default for C code.</source>
          <target state="translated">Dialecto GNU de ISO C17.Este es el valor por defecto para el código C.</target>
        </trans-unit>
        <trans-unit id="cd7ba84a6cf37a43cdd1bd215e060138c20d80ef" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C90 (including some C99 features).</source>
          <target state="translated">dialecto GNU de ISO C90 (incluyendo algunas características del C99).</target>
        </trans-unit>
        <trans-unit id="5a96bf0e0eb1648d92a5415bbf82f314f50fc95d" translate="yes" xml:space="preserve">
          <source>GNU dialect of ISO C99. The name &amp;lsquo;</source>
          <target state="translated">Dialecto GNU de ISO C99. El nombre '</target>
        </trans-unit>
        <trans-unit id="c7513a88e6766734c8fff0b65e9260cb06e07819" translate="yes" xml:space="preserve">
          <source>GNU extensions to the C language family.</source>
          <target state="translated">Extensiones de GNU a la familia del lenguaje C.</target>
        </trans-unit>
        <trans-unit id="90b8cbfe3e7aa922a28ad77fd2468b165d25db6d" translate="yes" xml:space="preserve">
          <source>GNU extensions to the C++ language.</source>
          <target state="translated">Extensiones de GNU para el lenguaje C++.</target>
        </trans-unit>
        <trans-unit id="73a49c549f68005dbe48c29ca2788c5808080012" translate="yes" xml:space="preserve">
          <source>General purpose register if 64-bit instructions are enabled or NO_REGS.</source>
          <target state="translated">Registro de propósito general si las instrucciones de 64 bits están habilitadas o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="005c5bd36bc2dae00112330a475935d63f7703b1" translate="yes" xml:space="preserve">
          <source>General register 1</source>
          <target state="translated">Registro general 1</target>
        </trans-unit>
        <trans-unit id="b09ef9c6988403ff1cf426fea1c658c5b1f6be6e" translate="yes" xml:space="preserve">
          <source>General register &lt;code&gt;r0&lt;/code&gt; to &lt;code&gt;r3&lt;/code&gt; for &lt;code&gt;addl&lt;/code&gt; instruction</source>
          <target state="translated">Registro general &lt;code&gt;r0&lt;/code&gt; a &lt;code&gt;r3&lt;/code&gt; para instrucci&amp;oacute;n &lt;code&gt;addl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e89cc1c76441abdf1cb24c29330f5f35d304a8e7" translate="yes" xml:space="preserve">
          <source>General register, but not &lt;code&gt;r29&lt;/code&gt;, &lt;code&gt;r30&lt;/code&gt; and &lt;code&gt;r31&lt;/code&gt;</source>
          <target state="translated">Registro general, pero no &lt;code&gt;r29&lt;/code&gt; , &lt;code&gt;r30&lt;/code&gt; y &lt;code&gt;r31&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10bd548f00f5df8e11316ab27529f8ec0d489ead" translate="yes" xml:space="preserve">
          <source>General-purpose 32-bit register</source>
          <target state="translated">Registro de 32 bits de uso general</target>
        </trans-unit>
        <trans-unit id="d86490a439329533a7fda073910d458d177b7499" translate="yes" xml:space="preserve">
          <source>Generally there is no guarantee that a memory transaction ever succeeds and suitable fallback code always needs to be supplied.</source>
          <target state="translated">Por lo general,no hay garantía de que una transacción de memoria tenga éxito y siempre es necesario suministrar un código de respaldo adecuado.</target>
        </trans-unit>
        <trans-unit id="c220eb05478a76fade659e7f472b8e896908bfb7" translate="yes" xml:space="preserve">
          <source>Generally, functions are not inlined unless optimization is specified. For functions declared inline, this attribute inlines the function independent of any restrictions that otherwise apply to inlining. Failure to inline such a function is diagnosed as an error. Note that if such a function is called indirectly the compiler may or may not inline it depending on optimization level and a failure to inline an indirect call may or may not be diagnosed.</source>
          <target state="translated">Por lo general,las funciones no están en línea a menos que se especifique la optimización.En el caso de las funciones declaradas en línea,este atributo pone en línea la función independientemente de cualquier restricción que se aplique a la línea.El hecho de no poner en línea una función de este tipo se diagnostica como un error.Obsérvese que si tal función se llama indirectamente el compilador puede o no inlinearla dependiendo del nivel de optimización y un fallo en la inline de una llamada indirecta puede o no ser diagnosticado.</target>
        </trans-unit>
        <trans-unit id="84a7c319c3d7d28e18ecbf416836eecf761297c6" translate="yes" xml:space="preserve">
          <source>Generally, inlining into a function is limited. For a function marked with this attribute, every call inside this function is inlined, if possible. Functions declared with attribute &lt;code&gt;noinline&lt;/code&gt; and similar are not inlined. Whether the function itself is considered for inlining depends on its size and the current inlining parameters.</source>
          <target state="translated">Generalmente, la integraci&amp;oacute;n en una funci&amp;oacute;n es limitada. Para una funci&amp;oacute;n marcada con este atributo, cada llamada dentro de esta funci&amp;oacute;n est&amp;aacute; en l&amp;iacute;nea, si es posible. Las funciones declaradas con el atributo &lt;code&gt;noinline&lt;/code&gt; y similares no est&amp;aacute;n inline. Si la funci&amp;oacute;n en s&amp;iacute; se considera para la inserci&amp;oacute;n depende de su tama&amp;ntilde;o y de los par&amp;aacute;metros de inserci&amp;oacute;n actuales.</target>
        </trans-unit>
        <trans-unit id="da79890df831b8b599903d6736d5d918432eda2d" translate="yes" xml:space="preserve">
          <source>Generally, options specified at link time override those specified at compile time, although in some cases GCC attempts to infer link-time options from the settings used to compile the input files.</source>
          <target state="translated">Por lo general,las opciones especificadas en el momento del enlace anulan las especificadas en el momento de la compilación,aunque en algunos casos GCC intenta deducir las opciones del tiempo de enlace a partir de los ajustes utilizados para compilar los archivos de entrada.</target>
        </trans-unit>
        <trans-unit id="ba4adeb327e032d99cfca5b51d0fd4daaa9b56fc" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) ColdFire hardware divide and remainder instructions. If</source>
          <target state="translated">Generar (no generar)instrucciones de división y resto del hardware del ColdFire.Si</target>
        </trans-unit>
        <trans-unit id="0fe80a59bc1a906ccb8af3fc3416cadc3264624c" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) GP-relative accesses. The following &lt;var&gt;option&lt;/var&gt; names are recognized:</source>
          <target state="translated">Genere (no genere) accesos relativos a GP. Se reconocen los siguientes nombres de &lt;var&gt;option&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="09abd950717c564f7150fc3aedac403b36224304" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) MIPS16 code. If GCC is targeting a MIPS32 or MIPS64 architecture, it makes use of the MIPS16e ASE.</source>
          <target state="translated">Generar (no generar)el código MIPS16.Si GCC tiene como objetivo una arquitectura MIPS32 o MIPS64,utiliza el MIPS16e ASE.</target>
        </trans-unit>
        <trans-unit id="188ec1e266203e4853a13748340fc36d3e35234e" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code that is fully position-independent, and that can therefore be linked into shared libraries. This option only affects</source>
          <target state="translated">Generar (no generar)código que sea totalmente independiente de la posición,y que por lo tanto pueda ser vinculado a bibliotecas compartidas.Esta opción sólo afecta a</target>
        </trans-unit>
        <trans-unit id="0a056a294949b854726ab099acb14488ae9baeac" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code that is suitable for SVR4-style dynamic objects.</source>
          <target state="translated">Generar (no generar)el código adecuado para los objetos dinámicos de tipo SVR4.</target>
        </trans-unit>
        <trans-unit id="200f92cbd3d74fb5f3e648ecaaea7b69d566f040" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code that uses &lt;em&gt;base addresses&lt;/em&gt;. Using a base address automatically generates a request (handled by the assembler and the linker) for a constant to be set up in a global register. The register is used for one or more base address requests within the range 0 to 255 from the value held in the register. The generally leads to short and fast code, but the number of different data items that can be addressed is limited. This means that a program that uses lots of static data may require</source>
          <target state="translated">Genere (no genere) c&amp;oacute;digo que use &lt;em&gt;direcciones base&lt;/em&gt; . El uso de una direcci&amp;oacute;n base genera autom&amp;aacute;ticamente una solicitud (manejada por el ensamblador y el enlazador) para que se configure una constante en un registro global. El registro se utiliza para una o m&amp;aacute;s solicitudes de direcci&amp;oacute;n base dentro del rango de 0 a 255 desde el valor contenido en el registro. Generalmente conduce a un c&amp;oacute;digo corto y r&amp;aacute;pido, pero el n&amp;uacute;mero de elementos de datos diferentes que se pueden abordar es limitado. Esto significa que un programa que usa muchos datos est&amp;aacute;ticos puede requerir</target>
        </trans-unit>
        <trans-unit id="fc8c5a89f214acd8179a09f487fb87bbd0d7c872" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code to load up the static chain register (&lt;code&gt;r11&lt;/code&gt;) when calling through a pointer on AIX and 64-bit Linux systems where a function pointer points to a 3-word descriptor giving the function address, TOC value to be loaded in register &lt;code&gt;r2&lt;/code&gt;, and static chain value to be loaded in register &lt;code&gt;r11&lt;/code&gt;. The</source>
          <target state="translated">Genere (no genere) c&amp;oacute;digo para cargar el registro de cadena est&amp;aacute;tica ( &lt;code&gt;r11&lt;/code&gt; ) al llamar a trav&amp;eacute;s de un puntero en sistemas AIX y Linux de 64 bits donde un puntero de funci&amp;oacute;n apunta a un descriptor de 3 palabras que da la direcci&amp;oacute;n de la funci&amp;oacute;n, el valor de TOC debe ser cargado en el registro &lt;code&gt;r2&lt;/code&gt; y el valor de la cadena est&amp;aacute;tica que se cargar&amp;aacute; en el registro &lt;code&gt;r11&lt;/code&gt; . los</target>
        </trans-unit>
        <trans-unit id="813e9e6ca1642f726fee97bfddf02338960484b7" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code to pass structure parameters with a maximum alignment of 64 bits, for compatibility with older versions of GCC.</source>
          <target state="translated">Generar (no generar)código para pasar los parámetros de la estructura con una alineación máxima de 64 bits,para la compatibilidad con versiones anteriores de GCC.</target>
        </trans-unit>
        <trans-unit id="55cac71e3fa8543a26a5b7f404ac565adfa17f28" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) code to save the TOC value in the reserved stack location in the function prologue if the function calls through a pointer on AIX and 64-bit Linux systems. If the TOC value is not saved in the prologue, it is saved just before the call through the pointer. The</source>
          <target state="translated">Generar (no generar)código para guardar el valor TOC en la ubicación de la pila reservada en el prólogo de la función si la función llama a través de un puntero en los sistemas AIX y Linux de 64 bits.Si el valor TOC no se guarda en el prólogo,se guarda justo antes de la llamada a través del puntero.El</target>
        </trans-unit>
        <trans-unit id="492f533f0926b6f12aa3c20775f6e3689bd7771b" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) microMIPS code.</source>
          <target state="translated">Generar (no generar)el código microMIPS.</target>
        </trans-unit>
        <trans-unit id="c38ed93b70630b073ac9de0cd53b30eca713a227" translate="yes" xml:space="preserve">
          <source>Generate (do not generate) the &lt;code&gt;friz&lt;/code&gt; instruction when the</source>
          <target state="translated">Genere (no genere) la instrucci&amp;oacute;n &lt;code&gt;friz&lt;/code&gt; cuando el</target>
        </trans-unit>
        <trans-unit id="87be6d200ff57766f2cf75cef2026526e7116620" translate="yes" xml:space="preserve">
          <source>Generate (or do not generate) code using the &lt;code&gt;bras&lt;/code&gt; instruction to do subroutine calls. This only works reliably if the total executable size does not exceed 64k. The default is to use the &lt;code&gt;basr&lt;/code&gt; instruction instead, which does not have this limitation.</source>
          <target state="translated">Genere (o no genere) c&amp;oacute;digo usando la instrucci&amp;oacute;n &lt;code&gt;bras&lt;/code&gt; para hacer llamadas a subrutinas. Esto solo funciona de manera confiable si el tama&amp;ntilde;o ejecutable total no excede los 64k. El valor predeterminado es usar la instrucci&amp;oacute;n &lt;code&gt;basr&lt;/code&gt; en su lugar, que no tiene esta limitaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dac8cd11137e120330b4b9ae84e6593137818e9a" translate="yes" xml:space="preserve">
          <source>Generate (or do not generate) code using the &lt;code&gt;mvcle&lt;/code&gt; instruction to perform block moves. When</source>
          <target state="translated">Genere (o no genere) c&amp;oacute;digo usando la instrucci&amp;oacute;n &lt;code&gt;mvcle&lt;/code&gt; para realizar movimientos de bloque. Cuando</target>
        </trans-unit>
        <trans-unit id="2e0545421416cf516c0b942352accf8dc6b0a0d5" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) &amp;lsquo;</source>
          <target state="translated">Generar (o no) '</target>
        </trans-unit>
        <trans-unit id="05dd2841d03433fc0ea5db0c7e0df3c7599676c8" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) a stop bit immediately before and after volatile asm statements.</source>
          <target state="translated">Genere (o no) un bit de parada inmediatamente antes y despu&amp;eacute;s de declaraciones ASM vol&amp;aacute;tiles.</target>
        </trans-unit>
        <trans-unit id="a0784cc5b984b19815bf9eec6e275ae1a59c3b0f" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) code for the GNU assembler. This is the default.</source>
          <target state="translated">Genere (o no) c&amp;oacute;digo para el ensamblador GNU. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="2516ed040d38a5388dd7fe01c44239d79052cf2e" translate="yes" xml:space="preserve">
          <source>Generate (or don&amp;rsquo;t) code for the GNU linker. This is the default.</source>
          <target state="translated">Genere (o no) c&amp;oacute;digo para el enlazador GNU. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="3e316b54c0eaa7bda512b60e40414c689d945ab8" translate="yes" xml:space="preserve">
          <source>Generate 16-bit instructions.</source>
          <target state="translated">Generar instrucciones de 16 bits.</target>
        </trans-unit>
        <trans-unit id="a52620c65360885e469f926c554c75bd50dd9583" translate="yes" xml:space="preserve">
          <source>Generate 3-instruction load and store sequences as sometimes required by the HP-UX 10 linker. This is equivalent to the &amp;lsquo;</source>
          <target state="translated">Genere secuencias de carga y almacenamiento de 3 instrucciones como a veces lo requiere el enlazador HP-UX 10. Esto es equivalente al '</target>
        </trans-unit>
        <trans-unit id="b384dbdcdcc6be12f32b73f9469c3ba6b9f1dccf" translate="yes" xml:space="preserve">
          <source>Generate 32x16-bit multiply and multiply-accumulate instructions.</source>
          <target state="translated">Generar instrucciones de multiplicar y multiplicar-acumular de 32x16 bits.</target>
        </trans-unit>
        <trans-unit id="0ccaaa46afb8881f4f3a477c92bc05eae68e0c4a" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;.debug_pubnames&lt;/code&gt; and &lt;code&gt;.debug_pubtypes&lt;/code&gt; sections in a format suitable for conversion into a GDB index. This option is only useful with a linker that can produce GDB index version 7.</source>
          <target state="translated">Genere secciones &lt;code&gt;.debug_pubnames&lt;/code&gt; y &lt;code&gt;.debug_pubtypes&lt;/code&gt; en un formato adecuado para la conversi&amp;oacute;n en un &amp;iacute;ndice GDB. Esta opci&amp;oacute;n solo es &amp;uacute;til con un enlazador que puede producir la versi&amp;oacute;n 7 del &amp;iacute;ndice GDB.</target>
        </trans-unit>
        <trans-unit id="828612c6e2cc35cf1bee3972f49446cb2047aba1" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;mul64&lt;/code&gt; and &lt;code&gt;mulu64&lt;/code&gt; instructions. Only valid for</source>
          <target state="translated">Genere instrucciones &lt;code&gt;mul64&lt;/code&gt; y &lt;code&gt;mulu64&lt;/code&gt; . Solo valido para</target>
        </trans-unit>
        <trans-unit id="f37d583fd1aea916d55ab9e91fa3002c399aaf84" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;norm&lt;/code&gt; instructions. This is the default if</source>
          <target state="translated">Generar instrucciones &lt;code&gt;norm&lt;/code&gt; ativas . Este es el valor predeterminado si</target>
        </trans-unit>
        <trans-unit id="2934019de0c741342611be8077a1571f0c44928a" translate="yes" xml:space="preserve">
          <source>Generate &lt;code&gt;swap&lt;/code&gt; instructions.</source>
          <target state="translated">Genera instrucciones de &lt;code&gt;swap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="586858db58f3f2f4e0ba5be27cc76fd1d37e386f" translate="yes" xml:space="preserve">
          <source>Generate &lt;var&gt;N&lt;/var&gt; NOPs right at the beginning of each function, with the function entry point before the &lt;var&gt;M&lt;/var&gt;th NOP. If &lt;var&gt;M&lt;/var&gt; is omitted, it defaults to &lt;code&gt;0&lt;/code&gt; so the function entry points to the address just at the first NOP. The NOP instructions reserve extra space which can be used to patch in any desired instrumentation at run time, provided that the code segment is writable. The amount of space is controllable indirectly via the number of NOPs; the NOP instruction used corresponds to the instruction emitted by the internal GCC back-end interface &lt;code&gt;gen_nop&lt;/code&gt;. This behavior is target-specific and may also depend on the architecture variant and/or other compilation options.</source>
          <target state="translated">Genere &lt;var&gt;N&lt;/var&gt; NOP justo al comienzo de cada funci&amp;oacute;n, con el punto de entrada de la funci&amp;oacute;n antes del &lt;var&gt;M&lt;/var&gt; th NOP. Si se omite &lt;var&gt;M&lt;/var&gt; , el valor predeterminado es &lt;code&gt;0&lt;/code&gt; , por lo que la entrada de la funci&amp;oacute;n apunta a la direcci&amp;oacute;n justo en el primer NOP. Las instrucciones NOP reservan espacio adicional que se puede usar para parchear cualquier instrumentaci&amp;oacute;n deseada en tiempo de ejecuci&amp;oacute;n, siempre que el segmento de c&amp;oacute;digo se pueda escribir. La cantidad de espacio se puede controlar indirectamente a trav&amp;eacute;s del n&amp;uacute;mero de NOP; la instrucci&amp;oacute;n NOP utilizada corresponde a la instrucci&amp;oacute;n emitida por la interfaz interna de back-end de GCC &lt;code&gt;gen_nop&lt;/code&gt; . Este comportamiento es espec&amp;iacute;fico del objetivo y tambi&amp;eacute;n puede depender de la variante de arquitectura y / u otras opciones de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b56d0340e46553074756e8938fdcc9bc10345ee9" translate="yes" xml:space="preserve">
          <source>Generate C header describing the largest structure that is passed by value, if any.</source>
          <target state="translated">Genera un encabezado C que describe la mayor estructura que se pasa por valor,si la hay.</target>
        </trans-unit>
        <trans-unit id="497d1946c219789282a881eeb57aa9b71f210579" translate="yes" xml:space="preserve">
          <source>Generate DWARF &lt;code&gt;.debug_pubnames&lt;/code&gt; and &lt;code&gt;.debug_pubtypes&lt;/code&gt; sections.</source>
          <target state="translated">Genere las &lt;code&gt;.debug_pubnames&lt;/code&gt; DWARF .debug_pubnames y &lt;code&gt;.debug_pubtypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0d6b717c142d078ddbdb831a6e380bea411850" translate="yes" xml:space="preserve">
          <source>Generate GNU/Linux compatible gUSA software atomic sequences for the atomic built-in functions. The generated atomic sequences require additional support from the interrupt/exception handling code of the system and are only suitable for SH3* and SH4* single-core systems. This option is enabled by default when the target is &lt;code&gt;sh*-*-linux*&lt;/code&gt; and SH3* or SH4*. When the target is SH4A, this option also partially utilizes the hardware atomic instructions &lt;code&gt;movli.l&lt;/code&gt; and &lt;code&gt;movco.l&lt;/code&gt; to create more efficient code, unless &amp;lsquo;</source>
          <target state="translated">Genere secuencias at&amp;oacute;micas de software gUSA compatibles con GNU / Linux para las funciones integradas at&amp;oacute;micas. Las secuencias at&amp;oacute;micas generadas requieren soporte adicional del c&amp;oacute;digo de manejo de interrupciones / excepciones del sistema y solo son adecuadas para sistemas de un solo n&amp;uacute;cleo SH3 * y SH4 *. Esta opci&amp;oacute;n est&amp;aacute; habilitada de forma predeterminada cuando el destino es &lt;code&gt;sh*-*-linux*&lt;/code&gt; y SH3 * o SH4 *. Cuando el objetivo es SH4A, esta opci&amp;oacute;n tambi&amp;eacute;n utiliza parcialmente las instrucciones at&amp;oacute;micas de hardware &lt;code&gt;movli.l&lt;/code&gt; y &lt;code&gt;movco.l&lt;/code&gt; para crear un c&amp;oacute;digo m&amp;aacute;s eficiente, a menos que '</target>
        </trans-unit>
        <trans-unit id="bf2d938e1c1ea97f318900579ce3c50a9ae898af" translate="yes" xml:space="preserve">
          <source>Generate GP-relative accesses for all data objects in the program. If you use this option, the entire data and BSS segments of your program must fit in 64K of memory and you must use an appropriate linker script to allocate them within the addressable range of the global pointer.</source>
          <target state="translated">Generar accesos GP-relativos para todos los objetos de datos del programa.Si utiliza esta opción,todos los datos y segmentos BSS de su programa deben caber en 64K de memoria y debe utilizar un script enlazador apropiado para asignarlos dentro del rango direccionable del puntero global.</target>
        </trans-unit>
        <trans-unit id="1fc88c33c3fc53124fa0f92092082efc85a7cdc0" translate="yes" xml:space="preserve">
          <source>Generate GP-relative accesses for small data objects that are not external, weak, or uninitialized common symbols. Also use GP-relative addressing for objects that have been explicitly placed in a small data section via a &lt;code&gt;section&lt;/code&gt; attribute.</source>
          <target state="translated">Genere accesos relativos a GP para peque&amp;ntilde;os objetos de datos que no sean s&amp;iacute;mbolos comunes externos, d&amp;eacute;biles o no inicializados. Utilice tambi&amp;eacute;n el direccionamiento relativo a GP para objetos que se hayan colocado expl&amp;iacute;citamente en una peque&amp;ntilde;a secci&amp;oacute;n de datos mediante un atributo de &lt;code&gt;section&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="548a87f5ac4837154b7b55bf3a0684dbbd7b3056" translate="yes" xml:space="preserve">
          <source>Generate GP-relative addresses for function pointers as well as data pointers. If you use this option, the entire text, data, and BSS segments of your program must fit in 64K of memory and you must use an appropriate linker script to allocate them within the addressable range of the global pointer.</source>
          <target state="translated">Generar direcciones GP-relativas para los punteros de función así como los punteros de datos.Si utiliza esta opción,todo el texto,los datos y los segmentos BSS de su programa deben caber en 64K de memoria y debe utilizar un script enlazador apropiado para asignarlos dentro del rango direccionable del puntero global.</target>
        </trans-unit>
        <trans-unit id="9f3a196b430f925ff0ff89b9ccb1a7bf625049d2" translate="yes" xml:space="preserve">
          <source>Generate MIPS16 code on alternating functions. This option is provided for regression testing of mixed MIPS16/non-MIPS16 code generation, and is not intended for ordinary use in compiling user code.</source>
          <target state="translated">Generar el código MIPS16 en funciones alternas.Esta opción se proporciona para la prueba de regresión de la generación de código mixto MIPS16/no MIPS16,y no está pensada para su uso ordinario en la compilación de código de usuario.</target>
        </trans-unit>
        <trans-unit id="b7aa3b59b611b18a6a4ec60f9d9a319cc049bd6b" translate="yes" xml:space="preserve">
          <source>Generate PowerPC64 code for the large model: The TOC may be up to 4G in size. Other data and code is only limited by the 64-bit address space.</source>
          <target state="translated">Generar código PowerPC64 para el modelo grande:El TOC puede tener un tamaño de hasta 4G.Otros datos y código sólo están limitados por el espacio de direcciones de 64 bits.</target>
        </trans-unit>
        <trans-unit id="c7a74518f21d3c00aafcfd3b084cf7c00aee1848" translate="yes" xml:space="preserve">
          <source>Generate PowerPC64 code for the medium model: The TOC and other static data may be up to a total of 4G in size. This is the default for 64-bit Linux.</source>
          <target state="translated">Generar el código PowerPC64 para el modelo medio:El TOC y otros datos estáticos pueden tener un tamaño total de hasta 4G.Este es el valor por defecto para Linux de 64 bits.</target>
        </trans-unit>
        <trans-unit id="8cfde8c4df8b2eb989bc818febefc0e7c28874e7" translate="yes" xml:space="preserve">
          <source>Generate PowerPC64 code for the small model: The TOC is limited to 64k.</source>
          <target state="translated">Generar el código PowerPC64 para el modelo pequeño:El TOC está limitado a 64k.</target>
        </trans-unit>
        <trans-unit id="c7ea62356cd3157102c66b58a868e34df2a5c060" translate="yes" xml:space="preserve">
          <source>Generate VRSAVE instructions when generating AltiVec code.</source>
          <target state="translated">Generar instrucciones VRSAVE al generar el código AltiVec.</target>
        </trans-unit>
        <trans-unit id="0bd45272345d657871ab9cf111cdd01907672885" translate="yes" xml:space="preserve">
          <source>Generate a __return_loc section pointing to all return instrumentation code.</source>
          <target state="translated">Generar una sección de __retorno_loc que apunte a todo el código de instrumentación de retorno.</target>
        </trans-unit>
        <trans-unit id="2cf42b0393916fe85d4396c2a4ea44c0c0b17c4a" translate="yes" xml:space="preserve">
          <source>Generate a call to the function &lt;code&gt;abort&lt;/code&gt; at the end of a &lt;code&gt;noreturn&lt;/code&gt; function. It is executed if the function tries to return.</source>
          <target state="translated">Genere una llamada a la funci&amp;oacute;n &lt;code&gt;abort&lt;/code&gt; ar al final de una funci&amp;oacute;n sin &lt;code&gt;noreturn&lt;/code&gt; . Se ejecuta si la funci&amp;oacute;n intenta regresar.</target>
        </trans-unit>
        <trans-unit id="0bfebab0f7716c6c7d48b3db2e26f828205f2eb0" translate="yes" xml:space="preserve">
          <source>Generate a stack frame that is compliant with the ARM Procedure Call Standard for all functions, even if this is not strictly necessary for correct execution of the code. Specifying</source>
          <target state="translated">Generar un marco de pila que cumpla con el Estándar de Llamada de Procedimiento ARM para todas las funciones,incluso si esto no es estrictamente necesario para la correcta ejecución del código.Especificando</target>
        </trans-unit>
        <trans-unit id="09e70235b2ae102fe1ff7ae3b745820674b997a0" translate="yes" xml:space="preserve">
          <source>Generate a stack frame that is compliant with the Thumb Procedure Call Standard for all leaf functions. (A leaf function is one that does not call any other functions.) The default is</source>
          <target state="translated">Generar un marco de pila que cumpla con el estándar de llamada de procedimiento de pulgar para todas las funciones de la hoja.(Una función de hoja es aquella que no llama a ninguna otra función.)El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="4e955728a6de82a9bddec4fed62b648dcfc40e9a" translate="yes" xml:space="preserve">
          <source>Generate a stack frame that is compliant with the Thumb Procedure Call Standard for all non-leaf functions. (A leaf function is one that does not call any other functions.) The default is</source>
          <target state="translated">Generar un marco de pila que cumpla con el estándar de llamada de procedimiento de pulgar para todas las funciones que no sean de hoja.(Una función de hoja es aquella que no llama a ninguna otra función.)El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="4839b3bf0bbd769aa7c0e4fcd67cdaaed9746bd5" translate="yes" xml:space="preserve">
          <source>Generate an executable in the ELF format, rather than the default &amp;lsquo;</source>
          <target state="translated">Genere un ejecutable en el formato ELF, en lugar del predeterminado '</target>
        </trans-unit>
        <trans-unit id="6c98697c08dfd7f201b6b9c98efc4af59466b6c7" translate="yes" xml:space="preserve">
          <source>Generate an inline expansion using loop code for all block compares that are less than or equal to &lt;var&gt;num&lt;/var&gt; bytes, but greater than the limit for non-loop inline block compare expansion. If the block length is not constant, at most &lt;var&gt;num&lt;/var&gt; bytes will be compared before &lt;code&gt;memcmp&lt;/code&gt; is called to compare the remainder of the block. The default value is target-specific.</source>
          <target state="translated">Genere una expansi&amp;oacute;n en l&amp;iacute;nea usando c&amp;oacute;digo de bucle para todas las comparaciones de bloques que sean menores o iguales a &lt;var&gt;num&lt;/var&gt; bytes, pero mayores que el l&amp;iacute;mite para la expansi&amp;oacute;n de comparaci&amp;oacute;n de bloques en l&amp;iacute;nea sin bucle. Si la longitud del bloque no es constante, se comparar&amp;aacute;n como m&amp;aacute;ximo &lt;var&gt;num&lt;/var&gt; bytes antes de llamar a &lt;code&gt;memcmp&lt;/code&gt; para comparar el resto del bloque. El valor predeterminado es espec&amp;iacute;fico del objetivo.</target>
        </trans-unit>
        <trans-unit id="ee53ff6577ff7bdeec45265bba557ddc96dc42d1" translate="yes" xml:space="preserve">
          <source>Generate big-endian code.</source>
          <target state="translated">Generar un código big-endian.</target>
        </trans-unit>
        <trans-unit id="faa1ec28121e6f94c7459039f3f456a29482ffe4" translate="yes" xml:space="preserve">
          <source>Generate big-endian code. This is the default for &amp;lsquo;</source>
          <target state="translated">Genera c&amp;oacute;digo big-endian. Este es el valor predeterminado para '</target>
        </trans-unit>
        <trans-unit id="497dec8a0e83106900bb3f13f33208ac13cc564e" translate="yes" xml:space="preserve">
          <source>Generate big-endian code. This is the default when GCC is configured for an &amp;lsquo;</source>
          <target state="translated">Genera c&amp;oacute;digo big-endian. Este es el valor predeterminado cuando GCC est&amp;aacute; configurado para un '</target>
        </trans-unit>
        <trans-unit id="9f5c216ca40ddba6d0b7e0356dfb54eddd239c13" translate="yes" xml:space="preserve">
          <source>Generate calls as register indirect calls, thus providing access to the full 32-bit address range.</source>
          <target state="translated">Generar llamadas como registro de llamadas indirectas,proporcionando así acceso a todo el rango de direcciones de 32 bits.</target>
        </trans-unit>
        <trans-unit id="daf711e932fbd2a210fbf658c2ed048fe589f322" translate="yes" xml:space="preserve">
          <source>Generate checks for control speculation in selective scheduling. This flag is disabled by default.</source>
          <target state="translated">Generar cheques para controlar la especulación en la programación selectiva.Este indicador está desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="340f82c2c0a45e961b4cd414df01b6dcda27429e" translate="yes" xml:space="preserve">
          <source>Generate code containing floating-point instructions. This is the default.</source>
          <target state="translated">Generar un código que contenga instrucciones de punto flotante.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="d1eb9be83c7705dec7853ee52d8e983f54f63d2c" translate="yes" xml:space="preserve">
          <source>Generate code containing library calls for floating-point.</source>
          <target state="translated">Generar código que contenga llamadas de biblioteca para punto flotante.</target>
        </trans-unit>
        <trans-unit id="ffda305054ff95e7394bd4003326530b52f9583d" translate="yes" xml:space="preserve">
          <source>Generate code for 32-bit or 64-bit ABI.</source>
          <target state="translated">Generar código para ABI de 32 o 64 bits.</target>
        </trans-unit>
        <trans-unit id="b67c6b7cf041ab09d12159e623bf4650fd97244d" translate="yes" xml:space="preserve">
          <source>Generate code for 32-bit or 64-bit environments of Darwin and SVR4 targets (including GNU/Linux). The 32-bit environment sets int, long and pointer to 32 bits and generates code that runs on any PowerPC variant. The 64-bit environment sets int to 32 bits and long and pointer to 64 bits, and generates code for PowerPC64, as for</source>
          <target state="translated">Generar código para entornos de 32 o 64 bits de Darwin y objetivos SVR4 (incluyendo GNU/Linux).El entorno de 32 bits establece int,long y pointer a 32 bits y genera código que se ejecuta en cualquier variante de PowerPC.El entorno de 64 bits establece int a 32 bits y long y el puntero a 64 bits,y genera código para PowerPC64,como para</target>
        </trans-unit>
        <trans-unit id="a4491a667cb7d0b6c838f6faaee6a864eadc20bd" translate="yes" xml:space="preserve">
          <source>Generate code for CR16C or CR16C+ architecture. CR16C+ architecture is default.</source>
          <target state="translated">Generar código para la arquitectura CR16C o CR16C+.La arquitectura CR16C+es la predeterminada.</target>
        </trans-unit>
        <trans-unit id="67648931cfe6b959b11bf696abb5438c66a26217" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-100 assuming the floating-point unit is in single-precision mode by default.</source>
          <target state="translated">Genera el código para el SH4-100 asumiendo que la unidad de punto flotante está en modo de precisión simple por defecto.</target>
        </trans-unit>
        <trans-unit id="de1af2a9972c47a564f5e7fcce23d995d6ae1b8b" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-100 in such a way that no double-precision floating-point operations are used.</source>
          <target state="translated">Generar el código para el SH4-100 de tal manera que no se utilicen operaciones de doble precisión en punto flotante.</target>
        </trans-unit>
        <trans-unit id="107ca25d9739e824d4175850436b6598a742f5a1" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-100 in such a way that the floating-point unit is not used.</source>
          <target state="translated">Generar el código para el SH4-100 de tal manera que no se utilice la unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="f4838bc707d842b8a2b2e768456d1b164bf348d3" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-100.</source>
          <target state="translated">Generar código para SH4-100.</target>
        </trans-unit>
        <trans-unit id="eb7eb15dc4aa3c46b2283b182c63acf0a395433d" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-200 assuming the floating-point unit is in single-precision mode by default.</source>
          <target state="translated">Generar código para SH4-200 asumiendo que la unidad de punto flotante está en modo de precisión simple por defecto.</target>
        </trans-unit>
        <trans-unit id="c7c33168087299c03364283296e9feb1a533b788" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-200 in such a way that no double-precision floating-point operations are used.</source>
          <target state="translated">Generar el código para el SH4-200 de tal manera que no se utilicen operaciones de doble precisión en punto flotante.</target>
        </trans-unit>
        <trans-unit id="b14c102c6af7d5f6fb411b3d326830a45f2aceb0" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-200 without in such a way that the floating-point unit is not used.</source>
          <target state="translated">Generar el código para el SH4-200 sin de tal manera que no se utilice la unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="5283c23e1460ff21798ade4588312627145b49aa" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-200.</source>
          <target state="translated">Generar código para SH4-200.</target>
        </trans-unit>
        <trans-unit id="2fb0dbc9dfbf231f5e57962b75a086351c1f46b3" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-300 in such a way that no double-precision floating-point operations are used.</source>
          <target state="translated">Generar el código para el SH4-300 de tal manera que no se utilicen operaciones de doble precisión en punto flotante.</target>
        </trans-unit>
        <trans-unit id="ff44e3f28e2fd7daaa679641ff86e04eab85fb68" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-300 without in such a way that the floating-point unit is not used.</source>
          <target state="translated">Generar el código para el SH4-300 sin de tal manera que no se utilice la unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="5dd69911ae792e28eb1d16efd78aa149dec9b0b1" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-300.</source>
          <target state="translated">Generar código para SH4-300.</target>
        </trans-unit>
        <trans-unit id="3190f28d97b238beea538765e992a0880400111e" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-340 (no MMU, no FPU).</source>
          <target state="translated">Generar el código para SH4-340 (en MMU,FPU).</target>
        </trans-unit>
        <trans-unit id="964d89eec4f49e488b7e663bfb784df7de2d9807" translate="yes" xml:space="preserve">
          <source>Generate code for SH4-500 (no FPU). Passes</source>
          <target state="translated">Generar código para SH4-500 (no FPU).Pases</target>
        </trans-unit>
        <trans-unit id="bd07f25b5dfd9dc83556617396ced4ced292840d" translate="yes" xml:space="preserve">
          <source>Generate code for Smart Mode, using only registers numbered 0-7 to allow use of 16-bit instructions. This option is ignored for CK801 where this is the required behavior, and it defaults to on for CK802. For other targets, the default is off.</source>
          <target state="translated">Generar código para el Modo Inteligente,usando sólo los registros numerados 0-7 para permitir el uso de instrucciones de 16 bits.Esta opción se ignora para CK801 donde este es el comportamiento requerido,y se activa por defecto para CK802.Para otros objetivos,el valor predeterminado es off.</target>
        </trans-unit>
        <trans-unit id="d1ef13a03c7e2ed855aab73fe845bb318c6bf94c" translate="yes" xml:space="preserve">
          <source>Generate code for a 16-bit, 32-bit or 64-bit environment. The</source>
          <target state="translated">Generar código para un entorno de 16,32 o 64 bits.El</target>
        </trans-unit>
        <trans-unit id="6f846bc35b4ddbb63662daaf0b8a0b9a36eafb1b" translate="yes" xml:space="preserve">
          <source>Generate code for a 32-bit environment, which sets int, long, and pointer to 32 bits. This is the only supported behavior so the flag is essentially ignored.</source>
          <target state="translated">Generar código para un entorno de 32 bits,que establece int,long y pointer a 32 bits.Este es el único comportamiento soportado por lo que la bandera es esencialmente ignorada.</target>
        </trans-unit>
        <trans-unit id="c70fb6bc63f54c3dd3b6636fb15aabdae1032dda" translate="yes" xml:space="preserve">
          <source>Generate code for a 32-bit or 64-bit environment. The 32-bit environment sets int, long and pointer to 32 bits. The 64-bit environment sets int to 32 bits and long and pointer to 64 bits.</source>
          <target state="translated">Generar código para un entorno de 32 o 64 bits.El entorno de 32 bits establece int,long y pointer a 32 bits.El entorno de 64 bits establece int a 32 bits y long y el puntero a 64 bits.</target>
        </trans-unit>
        <trans-unit id="25466413f97413255c5d54e631be1e6a23f5330d" translate="yes" xml:space="preserve">
          <source>Generate code for a 32-bit or 64-bit environment. The 32-bit environment sets int, long and pointer to 32 bits. The 64-bit environment sets int to 32 bits and long and pointer to 64 bits. These are HP-UX specific flags.</source>
          <target state="translated">Generar código para un entorno de 32 o 64 bits.El entorno de 32 bits establece int,long y pointer a 32 bits.El entorno de 64 bits establece int a 32 bits y long y el puntero a 64 bits.Estas son las banderas específicas de HP-UX.</target>
        </trans-unit>
        <trans-unit id="89222a0849ae48c73c6bd1624ef4d88ea3c84874" translate="yes" xml:space="preserve">
          <source>Generate code for a 32-bit or 64-bit environment. The 32-bit environment sets int, long, and pointer to 32 bits. The 64-bit environment sets int to 32 bits and long and pointer to 64 bits.</source>
          <target state="translated">Generar código para un entorno de 32 o 64 bits.El entorno de 32 bits establece int,long y pointer a 32 bits.El entorno de 64 bits establece int a 32 bits y long y el puntero a 64 bits.</target>
        </trans-unit>
        <trans-unit id="7a6899675bc409f91ebf1c2951874d09f2171d0a" translate="yes" xml:space="preserve">
          <source>Generate code for a PDP-11/10. Implies -msoft-float -mno-split.</source>
          <target state="translated">Generar código para un PDP-11/10.Implica -msoft-float -mno-split.</target>
        </trans-unit>
        <trans-unit id="bee1deaf455b6a6b4cdb2bb13d6ee23ad81f5012" translate="yes" xml:space="preserve">
          <source>Generate code for a PDP-11/40. Implies -msoft-float -mno-split.</source>
          <target state="translated">Generar código para un PDP-11/40.Implica -msoft-flota -mno-split.</target>
        </trans-unit>
        <trans-unit id="d9780d13a5a51c47480c939a428413699ac3ed17" translate="yes" xml:space="preserve">
          <source>Generate code for a PDP-11/45. This is the default.</source>
          <target state="translated">Generar código para un PDP-11/45.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="92b920e8ba8535d90a16588551ee999d568f0291" translate="yes" xml:space="preserve">
          <source>Generate code for a big-endian target.</source>
          <target state="translated">Generar el código para un objetivo big-endian.</target>
        </trans-unit>
        <trans-unit id="d68254cfeddff60f3b9cadfb72e8acbde8b8a455" translate="yes" xml:space="preserve">
          <source>Generate code for a big-endian target. This is the default for HP-UX.</source>
          <target state="translated">Generar el código para un objetivo grande de fuego.Este es el valor por defecto de HP-UX.</target>
        </trans-unit>
        <trans-unit id="5fbe216af63a08f8f99c457d81f72aa33271a249" translate="yes" xml:space="preserve">
          <source>Generate code for a little-endian target.</source>
          <target state="translated">Generar el código para un objetivo poco explosivo.</target>
        </trans-unit>
        <trans-unit id="7fec6c67ff3977f6cbf34379a4b039899b9238d9" translate="yes" xml:space="preserve">
          <source>Generate code for a little-endian target. This is the default for AIX5 and GNU/Linux.</source>
          <target state="translated">Generar el código para un objetivo poco explosivo.Este es el valor por defecto para AIX5 y GNU/Linux.</target>
        </trans-unit>
        <trans-unit id="12a32136f06def3f80692a9e99c0d8f9b7d0b140" translate="yes" xml:space="preserve">
          <source>Generate code for a little-endian target. This is the default.</source>
          <target state="translated">Generar el código para un objetivo poco explosivo.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="86cf4bd8b15db1a7bae18b7503fdfe578d14ff3d" translate="yes" xml:space="preserve">
          <source>Generate code for a processor running in big-endian mode; the default is to compile code for a little-endian processor.</source>
          <target state="translated">Generar código para un procesador que se ejecuta en modo big-endian;el valor por defecto es compilar código para un procesador little-endian.</target>
        </trans-unit>
        <trans-unit id="b9c63b6f7dde24a56bfd3b0c8c39dff387d09612" translate="yes" xml:space="preserve">
          <source>Generate code for a processor running in little-endian mode. This is the default for all standard configurations.</source>
          <target state="translated">Generar código para un procesador que funciona en modo little-endian.Este es el valor por defecto para todas las configuraciones estándar.</target>
        </trans-unit>
        <trans-unit id="7c9d614db21563decf26e4450a12e8ff0db080a3" translate="yes" xml:space="preserve">
          <source>Generate code for a specific M680x0 or ColdFire instruction set architecture. Permissible values of &lt;var&gt;arch&lt;/var&gt; for M680x0 architectures are: &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para una arquitectura de conjunto de instrucciones M680x0 o ColdFire espec&amp;iacute;fica. Los valores permitidos de &lt;var&gt;arch&lt;/var&gt; para arquitecturas M680x0 son: '</target>
        </trans-unit>
        <trans-unit id="4756b1c10e780d22755d4efd055be671187986d0" translate="yes" xml:space="preserve">
          <source>Generate code for a specific M680x0 or ColdFire processor. The M680x0 &lt;var&gt;cpu&lt;/var&gt;s are: &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para un procesador M680x0 o ColdFire espec&amp;iacute;fico. Las &lt;var&gt;cpu&lt;/var&gt; M680x0 son: '</target>
        </trans-unit>
        <trans-unit id="cf0efda24e55f61b98734329e006dab8159c05d8" translate="yes" xml:space="preserve">
          <source>Generate code for given RISC-V ISA (e.g. &amp;lsquo;</source>
          <target state="translated">Generar c&amp;oacute;digo para ISA RISC-V dado (por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="1cc9f255978b92385d0966d847bc3f1f4feff36e" translate="yes" xml:space="preserve">
          <source>Generate code for given the specified PTX ISA (e.g. &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para el PTX ISA especificado (por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="4b8a962abd2bc5357f263a724ad7ce6201860ac4" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which requires divide instruction emulation.</source>
          <target state="translated">Generar el código para el hardware que requiere la emulación de la instrucción de división.</target>
        </trans-unit>
        <trans-unit id="0ff05f7bfb6de148dd31e5b918468ff58be8cc2b" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which requires multiply instruction emulation.</source>
          <target state="translated">Generar el código para el hardware que requiere la emulación de instrucciones múltiples.</target>
        </trans-unit>
        <trans-unit id="9d141b4aab656e3ada981384fd6736554ccf4fe3" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports divide instructions. This is the default.</source>
          <target state="translated">Generar código para el hardware que soporta instrucciones de división.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="63b8cd12a9a7b77524e7516bc8342264efc809e2" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports multiply instructions. This is the default.</source>
          <target state="translated">Generar código para el hardware que soporta instrucciones de multiplicación.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="f67b905d0c7d601714b6d40130d650c8841556d5" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports rotate right instructions.</source>
          <target state="translated">Generar el código para el hardware que soporta las instrucciones de rotación de la derecha.</target>
        </trans-unit>
        <trans-unit id="d8901265c038359c4cabcecef69c62a4ad403284" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports set flag immediate (&lt;code&gt;l.sf*i&lt;/code&gt;) instructions.</source>
          <target state="translated">Genere c&amp;oacute;digo para hardware que admita instrucciones de configuraci&amp;oacute;n inmediata de indicador ( &lt;code&gt;l.sf*i&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cb0dc185d9cce6eac6a0da7c5fde4468c232eb00" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports shift immediate related instructions (i.e. &lt;code&gt;l.srai&lt;/code&gt;, &lt;code&gt;l.srli&lt;/code&gt;, &lt;code&gt;l.slli&lt;/code&gt;, &lt;code&gt;1.rori&lt;/code&gt;). Note, to enable generation of the &lt;code&gt;l.rori&lt;/code&gt; instruction the</source>
          <target state="translated">Generar c&amp;oacute;digo para el hardware, que cambian soportes instrucciones relacionadas inmediata (es decir &lt;code&gt;l.srai&lt;/code&gt; , &lt;code&gt;l.srli&lt;/code&gt; , &lt;code&gt;l.slli&lt;/code&gt; , &lt;code&gt;1.rori&lt;/code&gt; ). Tenga en cuenta que para habilitar la generaci&amp;oacute;n de la instrucci&amp;oacute;n &lt;code&gt;l.rori&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="56c0dd74c2b5f08d1195605802098a996d48ddaa" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports sign-extension instructions.</source>
          <target state="translated">Generar el código para el hardware que soporta las instrucciones de extensión de señales.</target>
        </trans-unit>
        <trans-unit id="c6c9d0431f616f47453feb5bcfe61cef592a68b7" translate="yes" xml:space="preserve">
          <source>Generate code for hardware which supports the conditional move (&lt;code&gt;l.cmov&lt;/code&gt;) instruction.</source>
          <target state="translated">Genere c&amp;oacute;digo para hardware que admita la instrucci&amp;oacute;n de movimiento condicional ( &lt;code&gt;l.cmov&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf79d7ac3430cd100137adc751a91365b039edd3" translate="yes" xml:space="preserve">
          <source>Generate code for inline divides of floating-point values using the maximum throughput algorithm.</source>
          <target state="translated">Generar código para las divisiones en línea de los valores de punto flotante usando el algoritmo de máximo rendimiento.</target>
        </trans-unit>
        <trans-unit id="3cedd11fcbf120218332b498654e7e4160f8c76d" translate="yes" xml:space="preserve">
          <source>Generate code for inline divides of floating-point values using the minimum latency algorithm.</source>
          <target state="translated">Generar código para las divisiones en línea de los valores de punto flotante utilizando el algoritmo de latencia mínima.</target>
        </trans-unit>
        <trans-unit id="1cc7790f16d0c4d4d91471e6f5d653df0c747e44" translate="yes" xml:space="preserve">
          <source>Generate code for inline divides of integer values using the maximum throughput algorithm.</source>
          <target state="translated">Generar código para dividir en línea los valores enteros usando el algoritmo de máximo rendimiento.</target>
        </trans-unit>
        <trans-unit id="faf94b4d20f983cdf533f47ec33942d0ce63586d" translate="yes" xml:space="preserve">
          <source>Generate code for inline divides of integer values using the minimum latency algorithm.</source>
          <target state="translated">Generar código para dividir en línea los valores enteros utilizando el algoritmo de latencia mínima.</target>
        </trans-unit>
        <trans-unit id="5418fa0a1b1b281d2485d7060d2309afdebd6ff4" translate="yes" xml:space="preserve">
          <source>Generate code for inline square roots using the maximum throughput algorithm.</source>
          <target state="translated">Generar código para las raíces cuadradas en línea usando el algoritmo de máximo rendimiento.</target>
        </trans-unit>
        <trans-unit id="83ef176a0741f8d1f5fe6e111f7583e6807956ad" translate="yes" xml:space="preserve">
          <source>Generate code for inline square roots using the minimum latency algorithm.</source>
          <target state="translated">Generar código para las raíces cuadradas en línea usando el algoritmo de latencia mínima.</target>
        </trans-unit>
        <trans-unit id="00979759a61ef121145bed1163bfbd0399a7b98b" translate="yes" xml:space="preserve">
          <source>Generate code for long address mode. This is only supported for 64-bit and x32 environments. It is the default address mode for 64-bit environments.</source>
          <target state="translated">Generar código para el modo de dirección larga.Esto sólo se admite para entornos de 64 bits y x32.Es el modo de dirección por defecto para los entornos de 64 bits.</target>
        </trans-unit>
        <trans-unit id="8adaf3135394010293585c029db12629ab7fdcf7" translate="yes" xml:space="preserve">
          <source>Generate code for short address mode. This is only supported for 32-bit and x32 environments. It is the default address mode for 32-bit and x32 environments.</source>
          <target state="translated">Generar código para el modo de dirección corta.Esto sólo se admite para entornos de 32 bits y x32.Es el modo de dirección por defecto para los entornos de 32 bits y x32.</target>
        </trans-unit>
        <trans-unit id="694f6014654115d073cccf62f6b995dc2510f9c1" translate="yes" xml:space="preserve">
          <source>Generate code for the 210 processor.</source>
          <target state="translated">Generar código para el procesador 210.</target>
        </trans-unit>
        <trans-unit id="85e35fc91e0af86a193c565f8d6f2a96d089e373" translate="yes" xml:space="preserve">
          <source>Generate code for the C-SKY compiler runtime instead of libgcc. This option defaults to off.</source>
          <target state="translated">Generar código para el tiempo de ejecución del compilador C-SKY en lugar de libgcc.Esta opción está desactivada por defecto.</target>
        </trans-unit>
        <trans-unit id="27e854c2e0908c3f4c936f01364c648aa32b367c" translate="yes" xml:space="preserve">
          <source>Generate code for the H8/300H.</source>
          <target state="translated">Generar código para el H8/300H.</target>
        </trans-unit>
        <trans-unit id="bb83090e60c2fc757a89c80487c241185ee5d95a" translate="yes" xml:space="preserve">
          <source>Generate code for the H8S and H8/300H in the normal mode. This switch must be used either with</source>
          <target state="translated">Generar el código para el H8S y el H8/300H en el modo normal.Este interruptor debe ser usado ya sea con</target>
        </trans-unit>
        <trans-unit id="d052e6239d8f301fe0a2b7da20c249087f96d45d" translate="yes" xml:space="preserve">
          <source>Generate code for the H8S.</source>
          <target state="translated">Generar código para el H8S.</target>
        </trans-unit>
        <trans-unit id="6d5ff3e2bd91c0a262161bf6efa2cdef6971233e" translate="yes" xml:space="preserve">
          <source>Generate code for the H8S/2600. This switch must be used with</source>
          <target state="translated">Generar el código para el H8S/2600.Este interruptor debe ser usado con</target>
        </trans-unit>
        <trans-unit id="d28ff0fda5a5612fbf86e8ebd7c80cabd4110b85" translate="yes" xml:space="preserve">
          <source>Generate code for the M32R. This is the default.</source>
          <target state="translated">Generar código para el M32R.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="20e08fc2eddd3584a33dc2a59b26172bf1281828" translate="yes" xml:space="preserve">
          <source>Generate code for the M32R/2.</source>
          <target state="translated">Generar código para el M32R/2.</target>
        </trans-unit>
        <trans-unit id="1939be789de09c47e008a34d88743773021de724" translate="yes" xml:space="preserve">
          <source>Generate code for the M32R/X.</source>
          <target state="translated">Generar código para el M32R/X.</target>
        </trans-unit>
        <trans-unit id="df8817f533054f34d7acf449e4e33f38657d304e" translate="yes" xml:space="preserve">
          <source>Generate code for the SH1.</source>
          <target state="translated">Generar el código para el SH1.</target>
        </trans-unit>
        <trans-unit id="050479be73754de25483a6e1712e26489d053e34" translate="yes" xml:space="preserve">
          <source>Generate code for the SH2.</source>
          <target state="translated">Generar el código para el SH2.</target>
        </trans-unit>
        <trans-unit id="3723c95f415c4a4c6a69d66a7f758a27732147a1" translate="yes" xml:space="preserve">
          <source>Generate code for the SH2a without FPU, or for a SH2a-FPU in such a way that the floating-point unit is not used.</source>
          <target state="translated">Generar código para el SH2a sin FPU,o para un SH2a-FPU de tal manera que no se utilice la unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="bc412156cf20c916e946ffa4cbe84584eb6567a5" translate="yes" xml:space="preserve">
          <source>Generate code for the SH2a-FPU assuming the floating-point unit is in double-precision mode by default.</source>
          <target state="translated">Generar código para el SH2a-FPU asumiendo que la unidad de punto flotante está en modo de doble precisión por defecto.</target>
        </trans-unit>
        <trans-unit id="34abdbdae2fa95db6713e96853be2eca7e9c05eb" translate="yes" xml:space="preserve">
          <source>Generate code for the SH2a-FPU assuming the floating-point unit is in single-precision mode by default.</source>
          <target state="translated">Generar código para el SH2a-FPU asumiendo que la unidad de punto flotante está en modo de precisión simple por defecto.</target>
        </trans-unit>
        <trans-unit id="1f2673d8ddd54030d4d4878de69f24422a5fdba0" translate="yes" xml:space="preserve">
          <source>Generate code for the SH2a-FPU, in such a way that no double-precision floating-point operations are used.</source>
          <target state="translated">Generar el código para el SH2a-FPU,de tal manera que no se utilicen operaciones de doble precisión en punto flotante.</target>
        </trans-unit>
        <trans-unit id="483cb3ca44e923a4b1df433858f80751ca9f93aa" translate="yes" xml:space="preserve">
          <source>Generate code for the SH2e.</source>
          <target state="translated">Generar el código para el SH2e.</target>
        </trans-unit>
        <trans-unit id="1a936c359ffaab90c574043388b2920044ce94c5" translate="yes" xml:space="preserve">
          <source>Generate code for the SH3.</source>
          <target state="translated">Generar el código para el SH3.</target>
        </trans-unit>
        <trans-unit id="52624bfb24aef64a24903a711fc58d43129edfce" translate="yes" xml:space="preserve">
          <source>Generate code for the SH3e.</source>
          <target state="translated">Generar el código para el SH3e.</target>
        </trans-unit>
        <trans-unit id="3974fd9acf25ff513cb6f41c5bd4a7bda9784a55" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4 assuming the floating-point unit is in single-precision mode by default.</source>
          <target state="translated">Generar código para el SH4 asumiendo que la unidad de punto flotante está en modo de precisión simple por defecto.</target>
        </trans-unit>
        <trans-unit id="75d92b5b6d76cda99c6a173e1dd53216d0ca8f31" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4 with a floating-point unit that only supports single-precision arithmetic.</source>
          <target state="translated">Generar código para el SH4 con una unidad de punto flotante que sólo soporta aritmética de precisión simple.</target>
        </trans-unit>
        <trans-unit id="162b02716f568279c8d0d5122c58fd1e1d0d9f75" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4 without a floating-point unit.</source>
          <target state="translated">Generar código para el SH4 sin una unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="63daf68bdeb08d26dfc7feca667cc330215f1c9b" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4.</source>
          <target state="translated">Generar el código para el SH4.</target>
        </trans-unit>
        <trans-unit id="e752d163eaf5a23bc2b7e20cedab4af27f30919d" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4a assuming the floating-point unit is in single-precision mode by default.</source>
          <target state="translated">Generar código para el SH4a asumiendo que la unidad de punto flotante está en modo de precisión simple por defecto.</target>
        </trans-unit>
        <trans-unit id="9bfcba29114940deb31d10a6d0e6239fe06706a5" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4a, in such a way that no double-precision floating-point operations are used.</source>
          <target state="translated">Generar código para el SH4a,de tal manera que no se utilicen operaciones de doble precisión en punto flotante.</target>
        </trans-unit>
        <trans-unit id="c9b792a4628ba5fbcf5191ba54ebda633615fe85" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4a.</source>
          <target state="translated">Generar código para el SH4a.</target>
        </trans-unit>
        <trans-unit id="e7ae153f4f4ad9faa39e7795dea14788da791715" translate="yes" xml:space="preserve">
          <source>Generate code for the SH4al-dsp, or for a SH4a in such a way that the floating-point unit is not used.</source>
          <target state="translated">Generar código para el SH4al-dsp,o para un SH4a de tal manera que no se utilice la unidad de punto flotante.</target>
        </trans-unit>
        <trans-unit id="b868662932b00739d50db318aa2ddd01fc4bd249" translate="yes" xml:space="preserve">
          <source>Generate code for the given ABI.</source>
          <target state="translated">Generar el código para el ABI dado.</target>
        </trans-unit>
        <trans-unit id="54f462554c550dbd112a2f944735d38c4f45d0bc" translate="yes" xml:space="preserve">
          <source>Generate code for the kernel code model. The kernel runs in the negative 2 GB of the address space. This model has to be used for Linux kernel code.</source>
          <target state="translated">Generar código para el modelo de código del núcleo.El núcleo se ejecuta en los 2 GB negativos del espacio de direcciones.Este modelo tiene que ser usado para el código del kernel de Linux.</target>
        </trans-unit>
        <trans-unit id="9f7119380ad6e8c2c7924710a3b532b63b7c448f" translate="yes" xml:space="preserve">
          <source>Generate code for the large code model. This makes no assumptions about addresses and sizes of sections. Programs can be statically linked only.</source>
          <target state="translated">Generar código para el modelo de código grande.Esto no hace suposiciones sobre las direcciones y tamaños de las secciones.Los programas sólo pueden ser enlazados estáticamente.</target>
        </trans-unit>
        <trans-unit id="e3f449db1f29f06f736e88f3d496de39caace854" translate="yes" xml:space="preserve">
          <source>Generate code for the large model. There is no limitation on call distance, pc-relative addresses, or absolute addresses.</source>
          <target state="translated">Generar código para el modelo grande.No hay limitación en la distancia de llamada,direcciones pc-relativas o direcciones absolutas.</target>
        </trans-unit>
        <trans-unit id="9e0fcd5ba89af087e24036d07076369bc21de870" translate="yes" xml:space="preserve">
          <source>Generate code for the large model. This model makes no assumptions about addresses and sizes of sections.</source>
          <target state="translated">Generar código para el modelo grande.Este modelo no hace suposiciones sobre las direcciones y tamaños de las secciones.</target>
        </trans-unit>
        <trans-unit id="0971940cc08a4932dadb19e61d4f634d86124a27" translate="yes" xml:space="preserve">
          <source>Generate code for the medium model: the program is linked in the lower 2 GB of the address space. Small symbols are also placed there. Symbols with sizes larger than</source>
          <target state="translated">Generar el código para el modelo medio:el programa se enlaza en los 2 GB inferiores del espacio de direcciones.Los símbolos pequeños también se colocan allí.Los símbolos con tamaños más grandes que</target>
        </trans-unit>
        <trans-unit id="59ca259d5568c2d002dd2ccbe8f095a11b92f1df" translate="yes" xml:space="preserve">
          <source>Generate code for the medium-any code model. The program and its statically defined symbols must be within any single 2 GiB address range. Programs can be statically or dynamically linked.</source>
          <target state="translated">Generar código para el modelo de código medio-cualquier.El programa y sus símbolos estáticamente definidos deben estar dentro de cualquier rango de 2 direcciones GiB.Los programas pueden ser enlazados estática o dinámicamente.</target>
        </trans-unit>
        <trans-unit id="504796a714036a0c76db86fa41cc45a9fb08427c" translate="yes" xml:space="preserve">
          <source>Generate code for the medium-low code model. The program and its statically defined symbols must lie within a single 2 GiB address range and must lie between absolute addresses -2 GiB and +2 GiB. Programs can be statically or dynamically linked. This is the default code model.</source>
          <target state="translated">Generar código para el modelo de código medio-bajo.El programa y sus símbolos estáticamente definidos deben estar dentro de un rango de direcciones de 2 GiB y deben estar entre las direcciones absolutas -2 GiB y +2 GiB.Los programas pueden ser enlazados estática o dinámicamente.Este es el modelo de código por defecto.</target>
        </trans-unit>
        <trans-unit id="071c751072fdeed9625e903fca26e27c829fa3e5" translate="yes" xml:space="preserve">
          <source>Generate code for the small code model. The program and its statically defined symbols must be within 4GB of each other. Programs can be statically or dynamically linked. This is the default code model.</source>
          <target state="translated">Generar código para el modelo de código pequeño.El programa y sus símbolos estáticamente definidos deben estar dentro de 4GB de distancia.Los programas pueden ser enlazados estática o dinámicamente.Este es el modelo de código por defecto.</target>
        </trans-unit>
        <trans-unit id="051a1860ec3526f5a9b8c1256cff7e9959d2ec61" translate="yes" xml:space="preserve">
          <source>Generate code for the small code model: the program and its symbols must be linked in the lower 2 GB of the address space. Pointers are 64 bits. Programs can be statically or dynamically linked. This is the default code model.</source>
          <target state="translated">Generar código para el modelo de código pequeño:el programa y sus símbolos deben estar vinculados en los 2 GB inferiores del espacio de direcciones.Los punteros son de 64 bits.Los programas pueden ser enlazados estática o dinámicamente.Este es el modelo de código por defecto.</target>
        </trans-unit>
        <trans-unit id="fccb732c10311c882aff8903c1dae6926a19b9e0" translate="yes" xml:space="preserve">
          <source>Generate code for the small model. The distance for direct calls is limited to 500M in either direction. PC-relative addresses are 32 bits. Absolute addresses support the full address range.</source>
          <target state="translated">Generar el código para el modelo pequeño.La distancia para las llamadas directas está limitada a 500M en cualquier dirección.Las direcciones relacionadas con el PC son de 32 bits.Las direcciones absolutas soportan todo el rango de direcciones.</target>
        </trans-unit>
        <trans-unit id="245e4a42ebe1fc23a573492e82ac616ceb7b3a60" translate="yes" xml:space="preserve">
          <source>Generate code for the specified ABI. Permissible values are: &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para la ABI especificada. Los valores permitidos son: '</target>
        </trans-unit>
        <trans-unit id="62cd08507f5129c0313b216b3b312e1f38339400" translate="yes" xml:space="preserve">
          <source>Generate code for the specified architecture. The choices for &lt;var&gt;architecture-type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Genera c&amp;oacute;digo para la arquitectura especificada. Las opciones para &lt;var&gt;architecture-type&lt;/var&gt; de arquitectura son '</target>
        </trans-unit>
        <trans-unit id="fa0e2168d621855d66b05e248a41636b81294293" translate="yes" xml:space="preserve">
          <source>Generate code for the specified calling convention. Permissible values are &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para la convenci&amp;oacute;n de llamada especificada. Los valores permitidos son '</target>
        </trans-unit>
        <trans-unit id="d43b1f64836a5b0a5d775d2376c530695500c9a6" translate="yes" xml:space="preserve">
          <source>Generate code for the specified data model. Permissible values are &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para el modelo de datos especificado. Los valores permitidos son '</target>
        </trans-unit>
        <trans-unit id="e12f5237878118905a68ef1df9fd8353d31db89f" translate="yes" xml:space="preserve">
          <source>Generate code for the supervisor mode, where there are no restrictions on the access to general registers. This is the default.</source>
          <target state="translated">Generar el código para el modo supervisor,donde no hay restricciones en el acceso a los registros generales.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="e6c40e69179c553d840354dee8e09afd6afb670e" translate="yes" xml:space="preserve">
          <source>Generate code for the tiny code model. The program and its statically defined symbols must be within 1MB of each other. Programs can be statically or dynamically linked.</source>
          <target state="translated">Generar código para el modelo de código diminuto.El programa y sus símbolos estáticamente definidos deben estar a menos de 1MB de distancia.Los programas pueden ser enlazados estática o dinámicamente.</target>
        </trans-unit>
        <trans-unit id="9e11e5ef71d66be04277bc1f01b5f5278d9a40a3" translate="yes" xml:space="preserve">
          <source>Generate code for the user mode, where the access to some general registers is forbidden: on the GR5, registers r24 to r31 cannot be accessed in this mode; on the GR6, only registers r29 to r31 are affected.</source>
          <target state="translated">Generar código para el modo de usuario,donde el acceso a algunos registros generales está prohibido:en el GR5,no se puede acceder a los registros r24 a r31 en este modo;en el GR6,sólo se ven afectados los registros r29 a r31.</target>
        </trans-unit>
        <trans-unit id="bd8c4bf394db1eaf7b115e9a97579b1aa69d5063" translate="yes" xml:space="preserve">
          <source>Generate code for use in OpenMP offloading: enables</source>
          <target state="translated">Generar código para su uso en la descarga de OpenMP:permite</target>
        </trans-unit>
        <trans-unit id="16c4c1a05d2b765d07aab8ca18577dc3fd7c3686" translate="yes" xml:space="preserve">
          <source>Generate code in big-endian mode.</source>
          <target state="translated">Generar código en modo big-endian.</target>
        </trans-unit>
        <trans-unit id="617c48669c81ce32d047fdd88ab6cc36cefe714c" translate="yes" xml:space="preserve">
          <source>Generate code in big/little endian mode, respectively.</source>
          <target state="translated">Generar código en modo big/little endian,respectivamente.</target>
        </trans-unit>
        <trans-unit id="f467368c82a003e89d9528f03fca80cb77bf1e51" translate="yes" xml:space="preserve">
          <source>Generate code in little-endian mode.</source>
          <target state="translated">Generar código en modo little-endian.</target>
        </trans-unit>
        <trans-unit id="d2870658bf99f10270c562aaa0ce69afd3724aea" translate="yes" xml:space="preserve">
          <source>Generate code suitable for big switch tables. Use this option only if the assembler/linker complain about out of range branches within a switch table.</source>
          <target state="translated">Generar código adecuado para grandes mesas de cambio.Use esta opción sólo si el ensamblador/enlazador se queja de ramas fuera de rango dentro de una mesa de cambio.</target>
        </trans-unit>
        <trans-unit id="31742c20f6d08e41957b4759da6c2e20cfa33560" translate="yes" xml:space="preserve">
          <source>Generate code suitable for fast turnaround development, such as to allow GDB to dynamically load</source>
          <target state="translated">Generar código adecuado para un desarrollo rápido,como permitir que GDB cargue dinámicamente</target>
        </trans-unit>
        <trans-unit id="f9c5e3444f60e6e1d269aebfea1614af0e0ffa27" translate="yes" xml:space="preserve">
          <source>Generate code that adds (does not add) in TPF OS specific branches to trace routines in the operating system. This option is off by default, even when compiling for the TPF OS.</source>
          <target state="translated">Generar código que agregue (no agregue)en ramas específicas del SO TPF para rastrear rutinas en el sistema operativo.Esta opción está desactivada de forma predeterminada,incluso cuando se compila para el SO TPF.</target>
        </trans-unit>
        <trans-unit id="cf132e8fd4ca1bac8a3c035b0896be35d4f95248" translate="yes" xml:space="preserve">
          <source>Generate code that allows (does not allow) a static executable to be relocated to a different address at run time. A simple embedded PowerPC system loader should relocate the entire contents of &lt;code&gt;.got2&lt;/code&gt; and 4-byte locations listed in the &lt;code&gt;.fixup&lt;/code&gt; section, a table of 32-bit addresses generated by this option. For this to work, all objects linked together must be compiled with</source>
          <target state="translated">Genere c&amp;oacute;digo que permita (no permita) que un ejecutable est&amp;aacute;tico sea reubicado en una direcci&amp;oacute;n diferente en tiempo de ejecuci&amp;oacute;n. Un cargador de sistema PowerPC integrado simple deber&amp;iacute;a reubicar todo el contenido de &lt;code&gt;.got2&lt;/code&gt; y las ubicaciones de 4 bytes enumeradas en la secci&amp;oacute;n &lt;code&gt;.fixup&lt;/code&gt; , una tabla de direcciones de 32 bits generada por esta opci&amp;oacute;n. Para que esto funcione, todos los objetos vinculados entre s&amp;iacute; deben compilarse con</target>
        </trans-unit>
        <trans-unit id="86d1c7c8ebb812df3d75ca440f1dd938fb6de6fb" translate="yes" xml:space="preserve">
          <source>Generate code that allows &lt;code&gt;ld&lt;/code&gt; and &lt;code&gt;ld.so&lt;/code&gt; to build executables and shared libraries with non-executable &lt;code&gt;.plt&lt;/code&gt; and &lt;code&gt;.got&lt;/code&gt; sections. This is a PowerPC 32-bit SYSV ABI option.</source>
          <target state="translated">Genere c&amp;oacute;digo que permita a &lt;code&gt;ld&lt;/code&gt; y &lt;code&gt;ld.so&lt;/code&gt; construir ejecutables y bibliotecas compartidas con secciones &lt;code&gt;.plt&lt;/code&gt; y &lt;code&gt;.got&lt;/code&gt; no ejecutables . Esta es una opci&amp;oacute;n ABI SYSV de PowerPC de 32 bits.</target>
        </trans-unit>
        <trans-unit id="2493e6ad3aa4a2943864620cf6ffd109b6ddb3da" translate="yes" xml:space="preserve">
          <source>Generate code that allows the data segment to be located in a different area of memory from the text segment. This allows for execute in place in an environment without virtual memory management by eliminating relocations against the text section.</source>
          <target state="translated">Generar un código que permita situar el segmento de datos en un área de memoria diferente del segmento de texto.Esto permite la ejecución en un entorno sin gestión de memoria virtual eliminando las reubicaciones contra el segmento de texto.</target>
        </trans-unit>
        <trans-unit id="eb6f87eee15c30331198259c5e0fa884666e3b45" translate="yes" xml:space="preserve">
          <source>Generate code that allows the data segment to be located in a different area of memory from the text segment. This allows for execute-in-place in an environment without virtual memory management. This option implies</source>
          <target state="translated">Generar un código que permita situar el segmento de datos en un área de memoria diferente del segmento de texto.Esto permite la ejecución en el lugar en un entorno sin gestión de memoria virtual.Esta opción implica</target>
        </trans-unit>
        <trans-unit id="338b24d92797baf1f472014c3eb7e81cad28ab15" translate="yes" xml:space="preserve">
          <source>Generate code that allows trapping instructions to throw exceptions. Note that this requires platform-specific runtime support that does not exist everywhere. Moreover, it only allows &lt;em&gt;trapping&lt;/em&gt; instructions to throw exceptions, i.e. memory references or floating-point instructions. It does not allow exceptions to be thrown from arbitrary signal handlers such as &lt;code&gt;SIGALRM&lt;/code&gt;.</source>
          <target state="translated">Genere c&amp;oacute;digo que permita las instrucciones de captura para lanzar excepciones. Tenga en cuenta que esto requiere un soporte de tiempo de ejecuci&amp;oacute;n espec&amp;iacute;fico de la plataforma que no existe en todas partes. Adem&amp;aacute;s, solo permite que las instrucciones de &lt;em&gt;captura&lt;/em&gt; arrojen excepciones, es decir, referencias de memoria o instrucciones de punto flotante. No permite que se generen excepciones desde manejadores de se&amp;ntilde;ales arbitrarios como &lt;code&gt;SIGALRM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd1ec35fb62e61a3c0c9ad20b949b97f631374a" translate="yes" xml:space="preserve">
          <source>Generate code that assumes (does not assume) that all calls are far away so that a longer more expensive calling sequence is required.</source>
          <target state="translated">Generar un código que asuma (no asuma)que todas las llamadas están lejos para que se requiera una secuencia de llamadas más larga y más costosa.</target>
        </trans-unit>
        <trans-unit id="8f709a2890cb93e8763f592a97bd90453baa9bc3" translate="yes" xml:space="preserve">
          <source>Generate code that assumes calls never cross space boundaries. This allows GCC to emit code that performs faster indirect calls.</source>
          <target state="translated">Generar un código que asume que las llamadas nunca cruzan los límites del espacio.Esto permite a GCC emitir un código que realiza llamadas indirectas más rápidas.</target>
        </trans-unit>
        <trans-unit id="16b9beb60bdc4afff878eec93b064cf17ba08cf6" translate="yes" xml:space="preserve">
          <source>Generate code that assumes that the data segment follows the text segment. This is the default.</source>
          <target state="translated">Generar un código que asuma que el segmento de datos sigue al segmento de texto.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="336489e1da74ce723400b7df9bbae17f47d7009a" translate="yes" xml:space="preserve">
          <source>Generate code that assumes the target has no space registers. This allows GCC to generate faster indirect calls and use unscaled index address modes.</source>
          <target state="translated">Genera un código que asume que el objetivo no tiene registros espaciales.Esto permite a GCC generar llamadas indirectas más rápidas y usar modos de dirección de índice no escalados.</target>
        </trans-unit>
        <trans-unit id="918ffaae0c58edeaaf21af8db9990d1e80c480af" translate="yes" xml:space="preserve">
          <source>Generate code that does not use (uses) the floating-point register set. Software floating-point emulation is provided if you use the</source>
          <target state="translated">Generar un código que no utilice (use)el conjunto de registros de punto flotante.La emulación de punto flotante de software se proporciona si se utiliza el</target>
        </trans-unit>
        <trans-unit id="c1d77eef17962d23aa2b64213060026efae223d1" translate="yes" xml:space="preserve">
          <source>Generate code that does not use &lt;code&gt;.local&lt;/code&gt; memory directly for stack storage. Instead, a per-warp stack pointer is maintained explicitly. This enables variable-length stack allocation (with variable-length arrays or &lt;code&gt;alloca&lt;/code&gt;), and when global memory is used for underlying storage, makes it possible to access automatic variables from other threads, or with atomic instructions. This code generation variant is used for OpenMP offloading, but the option is exposed on its own for the purpose of testing the compiler; to generate code suitable for linking into programs using OpenMP offloading, use option</source>
          <target state="translated">Genere c&amp;oacute;digo que no use la memoria &lt;code&gt;.local&lt;/code&gt; directamente para el almacenamiento en pila. En su lugar, un puntero de pila por deformaci&amp;oacute;n se mantiene expl&amp;iacute;citamente. Esto permite la asignaci&amp;oacute;n de pila de longitud variable (con matrices o &lt;code&gt;alloca&lt;/code&gt; longitud variable ), y cuando se usa memoria global para almacenamiento subyacente, hace posible acceder a variables autom&amp;aacute;ticas de otros subprocesos o con instrucciones at&amp;oacute;micas. Esta variante de generaci&amp;oacute;n de c&amp;oacute;digo se utiliza para la descarga de OpenMP, pero la opci&amp;oacute;n se expone por s&amp;iacute; sola con el prop&amp;oacute;sito de probar el compilador; para generar c&amp;oacute;digo adecuado para vincularlo a programas usando la descarga OpenMP, use la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="44ab5ca5f8364ad55909ace91a8c6e880674fbc6" translate="yes" xml:space="preserve">
          <source>Generate code that does not use a global pointer register. The result is not position independent code, and violates the IA-64 ABI.</source>
          <target state="translated">Generar un código que no utilice un registro puntero global.El resultado no es un código independiente de la posición,y viola el ABI IA-64.</target>
        </trans-unit>
        <trans-unit id="60de4e859809d0c4dc8e855c46af0110311ff144" translate="yes" xml:space="preserve">
          <source>Generate code that doesn&amp;rsquo;t assume ID-based shared libraries are being used. This is the default.</source>
          <target state="translated">Genere c&amp;oacute;digo que no asuma que se est&amp;aacute;n utilizando bibliotecas compartidas basadas en ID. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="354fbc6c3e514e9f7e68643c90303161a363d508" translate="yes" xml:space="preserve">
          <source>Generate code that is self-relocatable. This implies</source>
          <target state="translated">Generar un código que sea auto-reubicable.Esto implica</target>
        </trans-unit>
        <trans-unit id="13b5daaeeae847dab7bba6f104ed44e1ab6ee054" translate="yes" xml:space="preserve">
          <source>Generate code that keeps (does not keeps) some integer operations adjacent so that the instructions can be fused together on power8 and later processors.</source>
          <target state="translated">Generar un código que mantenga (no mantenga)algunas operaciones enteras adyacentes para que las instrucciones puedan fusionarse en los procesadores power8 y posteriores.</target>
        </trans-unit>
        <trans-unit id="ebb2d4ebaa412c3ca6bb8549fd5605ffef2b8a3c" translate="yes" xml:space="preserve">
          <source>Generate code that passes function parameters and return values that (in the called function) are seen as registers &lt;code&gt;$0&lt;/code&gt; and up, as opposed to the GNU ABI which uses global registers &lt;code&gt;$231&lt;/code&gt; and up.</source>
          <target state="translated">Genera c&amp;oacute;digo que pasa par&amp;aacute;metros de funci&amp;oacute;n y devuelve valores que (en la funci&amp;oacute;n llamada) se ven como registros &lt;code&gt;$0&lt;/code&gt; y superiores, a diferencia del GNU ABI que usa registros globales de &lt;code&gt;$231&lt;/code&gt; y superiores.</target>
        </trans-unit>
        <trans-unit id="572a137e555b3b3423721fc0e3626b6e8b160c46" translate="yes" xml:space="preserve">
          <source>Generate code that runs on &lt;var&gt;arch&lt;/var&gt;, which can be the name of a generic MIPS ISA, or the name of a particular processor. The ISA names are: &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo que se ejecute en &lt;var&gt;arch&lt;/var&gt; , que puede ser el nombre de un MIPS ISA gen&amp;eacute;rico o el nombre de un procesador en particular. Los nombres de la ISA son: '</target>
        </trans-unit>
        <trans-unit id="e20973741c69f13efd8aaaa56fd8109762470570" translate="yes" xml:space="preserve">
          <source>Generate code that runs on &lt;var&gt;cpu-type&lt;/var&gt;, which is the name of a system representing a certain processor type. Possible values for &lt;var&gt;cpu-type&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo que se ejecute en &lt;var&gt;cpu-type&lt;/var&gt; , que es el nombre de un sistema que representa un determinado tipo de procesador. Los valores posibles para &lt;var&gt;cpu-type&lt;/var&gt; son '</target>
        </trans-unit>
        <trans-unit id="2afe5cce361ce178d21f1f9e300c77965e025f71" translate="yes" xml:space="preserve">
          <source>Generate code that supports calling between the ARM and Thumb instruction sets. Without this option, on pre-v5 architectures, the two instruction sets cannot be reliably used inside one program. The default is</source>
          <target state="translated">Generar código que soporte la llamada entre los conjuntos de instrucciones de ARM y Pulgar.Sin esta opción,en las arquitecturas pre-v5,los dos conjuntos de instrucciones no pueden ser utilizados de forma fiable dentro de un programa.El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="1e1b0c53abd34ffe18acaa9b5781550d29a84379" translate="yes" xml:space="preserve">
          <source>Generate code that supports shared libraries via the library ID method, but assumes that this library or executable won&amp;rsquo;t link against any other ID shared libraries. That allows the compiler to use faster code for jumps and calls.</source>
          <target state="translated">Genere c&amp;oacute;digo que admita bibliotecas compartidas a trav&amp;eacute;s del m&amp;eacute;todo de ID de biblioteca, pero asume que esta biblioteca o ejecutable no se vincular&amp;aacute; con ninguna otra biblioteca de ID compartida. Eso permite al compilador utilizar un c&amp;oacute;digo m&amp;aacute;s r&amp;aacute;pido para saltos y llamadas.</target>
        </trans-unit>
        <trans-unit id="19a4d4ef1ca305d055c2c43578e68d17e9af2a97" translate="yes" xml:space="preserve">
          <source>Generate code that supports shared libraries via the library ID method. This allows for execute in place and shared libraries in an environment without virtual memory management. This option implies</source>
          <target state="translated">Generar código que soporte las bibliotecas compartidas a través del método de identificación de bibliotecas.Esto permite ejecutar en el lugar y las bibliotecas compartidas en un entorno sin gestión de memoria virtual.Esta opción implica</target>
        </trans-unit>
        <trans-unit id="d499e8859196b03e31f4b5d6d30e4cb073e79ae2" translate="yes" xml:space="preserve">
          <source>Generate code that supports shared libraries via the library ID method. This allows for execute-in-place and shared libraries in an environment without virtual memory management. This option implies</source>
          <target state="translated">Generar código que soporte las bibliotecas compartidas a través del método de identificación de bibliotecas.Esto permite la ejecución en el lugar y las bibliotecas compartidas en un entorno sin administración de memoria virtual.Esta opción implica</target>
        </trans-unit>
        <trans-unit id="3080019b4a448b8d2f42e11601716bd17c75e272" translate="yes" xml:space="preserve">
          <source>Generate code that tries to avoid (not avoid) the use of indexed load or store instructions.</source>
          <target state="translated">Generar un código que trate de evitar (no evitar)el uso de instrucciones de carga o almacenamiento indexadas.</target>
        </trans-unit>
        <trans-unit id="1d7d0f8dbe32444b165a61440094a0d21d656220" translate="yes" xml:space="preserve">
          <source>Generate code that tries to avoid (not avoid) the use of indexed load or store instructions. These instructions can incur a performance penalty on Power6 processors in certain situations, such as when stepping through large arrays that cross a 16M boundary. This option is enabled by default when targeting Power6 and disabled otherwise.</source>
          <target state="translated">Generar un código que trate de evitar (no evitar)el uso de instrucciones de carga o almacenamiento indexadas.Estas instrucciones pueden incurrir en una penalización de rendimiento en los procesadores Power6 en ciertas situaciones,como cuando se atraviesan grandes matrices que cruzan un límite de 16M.Esta opción está habilitada por defecto cuando se apunta a Power6 y desactivada en caso contrario.</target>
        </trans-unit>
        <trans-unit id="bf98fe716d964a094592ad1d59afe4951cb9d36f" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) AltiVec instructions, and also enable the use of built-in functions that allow more direct access to the AltiVec instruction set. You may also need to set</source>
          <target state="translated">Generar un código que utilice (no utilice)las instrucciones del AltiVec,y también permitir el uso de las funciones incorporadas que permiten un acceso más directo al conjunto de instrucciones del AltiVec.Puede que también necesite configurar</target>
        </trans-unit>
        <trans-unit id="2f5b28537613ef22817b9ba8bf63c4e1f2104514" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) AltiVec instructions. In 32-bit code, you cannot enable AltiVec instructions unless</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones del AltiVec.En el código de 32 bits,no puede habilitar las instrucciones de AltiVec a menos que</target>
        </trans-unit>
        <trans-unit id="8c04238a31ea4511a013025b49118e3c3e42e84e" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) ISEL instruction.</source>
          <target state="translated">Genera un código que usa (no usa)la instrucción ISEL.</target>
        </trans-unit>
        <trans-unit id="92155be900bc9933add2300c7a5d23503087ce0e" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) VAX F and G floating-point arithmetic instead of IEEE single and double precision.</source>
          <target state="translated">Genera un código que utiliza (no utiliza)la aritmética de punto flotante VAX F y G en lugar de la precisión simple y doble del IEEE.</target>
        </trans-unit>
        <trans-unit id="b95c7c98a27a75ea4aed9a1312a1f6d81d84fc5d" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the FP move to/from general purpose register instructions implemented on the POWER6X processor and other processors that support the extended PowerPC V2.05 architecture.</source>
          <target state="translated">Generar código que utilice (no utilice)el movimiento FP hacia/desde las instrucciones de registro de propósito general implementadas en el procesador POWER6X y otros procesadores que soportan la arquitectura extendida PowerPC V2.05.</target>
        </trans-unit>
        <trans-unit id="a2c4f9d3a1eb191b5662b1d07619055360c468c4" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the FP round to integer instructions implemented on the POWER5+ processor and other processors that support the PowerPC V2.03 architecture.</source>
          <target state="translated">Generar código que utilice (no utilice)las instrucciones de ronda a entero FP implementadas en el procesador POWER5+y otros procesadores que soporten la arquitectura PowerPC V2.03.</target>
        </trans-unit>
        <trans-unit id="46d6eec21f4fa802b85560d860276b9199fed94b" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the atomic quad word memory instructions. The</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones de la memoria atómica de palabras cuádruples.El</target>
        </trans-unit>
        <trans-unit id="262e0fd3e027fbfbead855b3f29a870f608f4f72" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the compare bytes instruction implemented on the POWER6 processor and other processors that support the PowerPC V2.05 architecture.</source>
          <target state="translated">Generar código que utilice (no utilice)la instrucción de comparación de bytes implementada en el procesador POWER6 y otros procesadores que soporten la arquitectura PowerPC V2.05.</target>
        </trans-unit>
        <trans-unit id="08b86aae00b13e22b96514a69b5b064be8919eb4" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the decimal floating-point instructions implemented on some POWER processors.</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones decimales de punto flotante implementadas en algunos procesadores POWER.</target>
        </trans-unit>
        <trans-unit id="3131d9ab648d637f7f2b9519e03b551e9a374743" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the floating-point multiply and accumulate instructions. These instructions are generated by default if hardware floating point is used.</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones de punto flotante,multiplica y acumula.Estas instrucciones se generan por defecto si se utiliza el punto flotante del hardware.</target>
        </trans-unit>
        <trans-unit id="c04a8a825b0f94e2eb07f4e8f21cb84241b2efaf" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the floating-point multiply and accumulate instructions. These instructions are generated by default if hardware floating point is used. The machine-dependent</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones de punto flotante,multiplica y acumula.Estas instrucciones se generan por defecto si se utiliza el punto flotante del hardware.La máquina dependiente</target>
        </trans-unit>
        <trans-unit id="61eadf2cc65c85da3c9ba20e0d77a3b18047c546" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the floating-point register set.</source>
          <target state="translated">Generar un código que utilice (no utilice)el conjunto de registros de punto flotante.</target>
        </trans-unit>
        <trans-unit id="32b3b39a373f02faec1c8e47cea1029610f3648e" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the generation of PAIRED simd instructions.</source>
          <target state="translated">Generar código que usa (no usa)la generación de instrucciones de SIMD PAREADO.</target>
        </trans-unit>
        <trans-unit id="a16384b2cc48decd8d149f4edeab3b4637c6c2dd" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the half-word multiply and multiply-accumulate instructions on the IBM 405, 440, 464 and 476 processors. These instructions are generated by default when targeting those processors.</source>
          <target state="translated">Generar un código que utilice (no utilice)las instrucciones de multiplicación y acumulación de medias palabras en los procesadores IBM 405,440,464 y 476.Estas instrucciones se generan por defecto cuando se dirigen a esos procesadores.</target>
        </trans-unit>
        <trans-unit id="0ae0cd2b0200a8b41b70cb257df1cc0c71cf4ea9" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the load multiple word instructions and the store multiple word instructions.</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones de carga de múltiples palabras y las instrucciones de almacenamiento de múltiples palabras.</target>
        </trans-unit>
        <trans-unit id="2c52b95b537c53566c2534b67e93882f9aca68b1" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the load multiple word instructions and the store multiple word instructions. These instructions are generated by default on POWER systems, and not generated on PowerPC systems. Do not use</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones de carga de múltiples palabras y las instrucciones de almacenamiento de múltiples palabras.Estas instrucciones se generan por defecto en los sistemas POWER,y no se generan en los sistemas PowerPC.No utilice</target>
        </trans-unit>
        <trans-unit id="fd774e2be13b8cb13d5052ff903f2b6dbbaa0be4" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the load or store instructions that update the base register to the address of the calculated memory location.</source>
          <target state="translated">Generar un código que utilice (no utilice)las instrucciones de carga o almacenamiento que actualizan el registro base a la dirección de la ubicación de la memoria calculada.</target>
        </trans-unit>
        <trans-unit id="a22e11f108e540ae0805ccbff5751fce923b96a4" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the load or store instructions that update the base register to the address of the calculated memory location. These instructions are generated by default. If you use</source>
          <target state="translated">Generar un código que utilice (no utilice)las instrucciones de carga o almacenamiento que actualizan el registro base a la dirección de la ubicación de la memoria calculada.Estas instrucciones se generan por defecto.Si utiliza</target>
        </trans-unit>
        <trans-unit id="0770f3e5c30f3b0aaaeba94f431ff5516808b06c" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the load string instructions and the store string word instructions to save multiple registers and do small block moves.</source>
          <target state="translated">Generar un código que utilice (no utilice)las instrucciones de la cadena de carga y las instrucciones de la palabra de la cadena de almacenamiento para guardar múltiples registros y hacer pequeños movimientos de bloque.</target>
        </trans-unit>
        <trans-unit id="386b3e18aecf301e2272c3303cef5b3408b3d72f" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the move from condition register field instruction implemented on the POWER4 processor and other processors that support the PowerPC V2.01 architecture.</source>
          <target state="translated">Generar código que use (no use)el movimiento de la instrucción de campo de registro de condición implementada en el procesador POWER4 y otros procesadores que soportan la arquitectura PowerPC V2.01.</target>
        </trans-unit>
        <trans-unit id="87adae88954ee8917f3f31be376d9936d82cd4bc" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the non-atomic quad word memory instructions. The</source>
          <target state="translated">Genera un código que utiliza (no utiliza)las instrucciones de memoria de palabras cuádruples no atómicas.El</target>
        </trans-unit>
        <trans-unit id="fc8745a466eb796ef7f9c5a441c7003ed311977e" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the optional PowerPC architecture instructions in the General Purpose group, including floating-point square root.</source>
          <target state="translated">Generar código que utilice (no utilice)las instrucciones opcionales de la arquitectura PowerPC en el grupo de Propósito General,incluyendo la raíz cuadrada de punto flotante.</target>
        </trans-unit>
        <trans-unit id="27810752cbb1f58324d02017084ca261477ff314" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the optional PowerPC architecture instructions in the Graphics group, including floating-point select.</source>
          <target state="translated">Generar código que utilice (no utilice)las instrucciones opcionales de la arquitectura PowerPC en el grupo de Gráficos,incluyendo la selección de punto flotante.</target>
        </trans-unit>
        <trans-unit id="98f0227605ad4df08722181505cb7a14d55e9799" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the popcount and double-precision FP reciprocal estimate instruction implemented on the POWER5 processor and other processors that support the PowerPC V2.02 architecture.</source>
          <target state="translated">Generar código que utilice (no utilice)la instrucción de estimación recíproca de popcount y FP de doble precisión implementada en el procesador POWER5 y otros procesadores que soportan la arquitectura PowerPC V2.02.</target>
        </trans-unit>
        <trans-unit id="c07537f1993a55be984ad5f397058498e67120dd" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the popcount instruction implemented on the POWER7 processor and other processors that support the PowerPC V2.06 architecture.</source>
          <target state="translated">Generar código que utilice (no utilice)la instrucción popcount implementada en el procesador POWER7 y otros procesadores que soportan la arquitectura PowerPC V2.06.</target>
        </trans-unit>
        <trans-unit id="4b15de7f2b7f03ed6e1790dbf982c588fb5b3528" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the string-search &amp;lsquo;</source>
          <target state="translated">Genera c&amp;oacute;digo que usa (no usa) la b&amp;uacute;squeda de cadenas '</target>
        </trans-unit>
        <trans-unit id="ab7a2922566d7313797a3ac188f3c0be7688df71" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) the vector and scalar instructions that were added in version 2.07 of the PowerPC ISA. Also enable the use of built-in functions that allow more direct access to the vector instructions.</source>
          <target state="translated">Generar un código que utilice (no utilice)las instrucciones vectoriales y escalares que se añadieron en la versión 2.07 del PowerPC ISA.También permite el uso de funciones incorporadas que permiten un acceso más directo a las instrucciones vectoriales.</target>
        </trans-unit>
        <trans-unit id="f7dd4f67d21a30765965ab7e7de435cac230ac64" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) vector/scalar (VSX) instructions, and also enable the use of built-in functions that allow more direct access to the VSX instruction set.</source>
          <target state="translated">Generar un código que utilice (no utilice)instrucciones vectoriales/escalares (VSX),y también permitir el uso de funciones incorporadas que permitan un acceso más directo al conjunto de instrucciones VSX.</target>
        </trans-unit>
        <trans-unit id="05ca89c3814bc0cbed05cab7398d230442544564" translate="yes" xml:space="preserve">
          <source>Generate code that uses (does not use) vector/scalar (VSX) instructions, and also enable the use of built-in functions that allow more direct access to the VSX instruction set. In 32-bit code, you cannot enable VSX or AltiVec instructions unless</source>
          <target state="translated">Generar un código que utilice (no utilice)instrucciones vectoriales/escalares (VSX),y también permitir el uso de funciones incorporadas que permitan un acceso más directo al conjunto de instrucciones VSX.En el código de 32 bits,no se pueden habilitar las instrucciones VSX o AltiVec a menos que</target>
        </trans-unit>
        <trans-unit id="67b86bb995294b5ded4deb3fb6384281013e8cde" translate="yes" xml:space="preserve">
          <source>Generate code that uses a BSS &lt;code&gt;.plt&lt;/code&gt; section that &lt;code&gt;ld.so&lt;/code&gt; fills in, and requires &lt;code&gt;.plt&lt;/code&gt; and &lt;code&gt;.got&lt;/code&gt; sections that are both writable and executable. This is a PowerPC 32-bit SYSV ABI option.</source>
          <target state="translated">Generar c&amp;oacute;digo que utiliza un BSS &lt;code&gt;.plt&lt;/code&gt; secci&amp;oacute;n que &lt;code&gt;ld.so&lt;/code&gt; rellenos en, y requiere &lt;code&gt;.plt&lt;/code&gt; y &lt;code&gt;.got&lt;/code&gt; secciones que son modificables y ejecutable. Esta es una opci&amp;oacute;n ABI SYSV de PowerPC de 32 bits.</target>
        </trans-unit>
        <trans-unit id="6beeb427ddc734bea4c58516baa43a91d09099d2" translate="yes" xml:space="preserve">
          <source>Generate code that uses a single constant global pointer value. This is useful when compiling kernel code.</source>
          <target state="translated">Genera un código que utiliza un único valor de puntero global constante.Esto es útil cuando se compila el código del núcleo.</target>
        </trans-unit>
        <trans-unit id="6f2e6ea4728870634a5f76e2497b052f725aed62" translate="yes" xml:space="preserve">
          <source>Generate code that uses long call sequences. This ensures that a call is always able to reach linker generated stubs. The default is to generate long calls only when the distance from the call site to the beginning of the function or translation unit, as the case may be, exceeds a predefined limit set by the branch type being used. The limits for normal calls are 7,600,000 and 240,000 bytes, respectively for the PA 2.0 and PA 1.X architectures. Sibcalls are always limited at 240,000 bytes.</source>
          <target state="translated">Genera un código que utiliza largas secuencias de llamadas.Esto asegura que una llamada sea siempre capaz de alcanzar los talones generados por el enlazador.Por defecto,se generan llamadas largas sólo cuando la distancia entre el lugar de la llamada y el comienzo de la función o la unidad de traducción,según el caso,supera un límite predefinido establecido por el tipo de rama que se está utilizando.Los límites para las llamadas normales son de 7.600.000 y 240.000 bytes,respectivamente para las arquitecturas PA 2.0 y PA 1.X.Las llamadas sibaritas están siempre limitadas a 240.000 bytes.</target>
        </trans-unit>
        <trans-unit id="0ddfa4b3d16d23a89e5776522951b15e62426fdc" translate="yes" xml:space="preserve">
          <source>Generate code that uses only the general-purpose registers. This prevents the compiler from using floating-point, vector, mask and bound registers.</source>
          <target state="translated">Generar un código que utilice sólo los registros de uso general.Esto evita que el compilador utilice registros de punto flotante,vectoriales,de máscara y de límite.</target>
        </trans-unit>
        <trans-unit id="baac973b3b5994adc6aef021db0133816bd28382" translate="yes" xml:space="preserve">
          <source>Generate code to access thread-local storage using the &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo para acceder al almacenamiento local de subprocesos usando el '</target>
        </trans-unit>
        <trans-unit id="c88cdcf77b77d16255b95669179f017ca5ceda39" translate="yes" xml:space="preserve">
          <source>Generate code to automatically split the stack before it overflows. The resulting program has a discontiguous stack which can only overflow if the program is unable to allocate any more memory. This is most useful when running threaded programs, as it is no longer necessary to calculate a good stack size to use for each thread. This is currently only implemented for the x86 targets running GNU/Linux.</source>
          <target state="translated">Generar código para dividir automáticamente la pila antes de que se desborde.El programa resultante tiene una pila discontínua que sólo puede desbordarse si el programa no puede asignar más memoria.Esto es muy útil cuando se ejecutan programas con hilos,ya que no es necesario calcular un buen tamaño de pila para usar en cada hilo.Actualmente,esto sólo se implementa para los objetivos x86 que ejecutan GNU/Linux.</target>
        </trans-unit>
        <trans-unit id="915ccec10fdc8928f52708c97467282540464b8a" translate="yes" xml:space="preserve">
          <source>Generate code to avoid bugs in the multiply instructions for the MN10300 processors. This is the default.</source>
          <target state="translated">Generar código para evitar errores en las instrucciones de multiplicación para los procesadores MN10300.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="0df3e04d22344e23f6649b40a52c7d6f0c186350" translate="yes" xml:space="preserve">
          <source>Generate code to ensure that the stack does not grow beyond a certain value, either the value of a register or the address of a symbol. If a larger stack is required, a signal is raised at run time. For most targets, the signal is raised before the stack overruns the boundary, so it is possible to catch the signal without taking special precautions.</source>
          <target state="translated">Generar un código para asegurar que la pila no crezca más allá de un cierto valor,ya sea el valor de un registro o la dirección de un símbolo.Si se requiere una pila más grande,se eleva una señal en tiempo de ejecución.En la mayoría de los objetivos,la señal se levanta antes de que la pila sobrepase el límite,por lo que es posible captar la señal sin tomar precauciones especiales.</target>
        </trans-unit>
        <trans-unit id="1b66c9f22b9ae2f51f7b68dcb90be43a732528ba" translate="yes" xml:space="preserve">
          <source>Generate code to prevent stack clash style attacks. When this option is enabled, the compiler will only allocate one page of stack space at a time and each page is accessed immediately after allocation. Thus, it prevents allocations from jumping over any stack guard page provided by the operating system.</source>
          <target state="translated">Generar el código para evitar los ataques de estilo de choque de pilas.Cuando esta opción está activada,el compilador sólo asignará una página de espacio de pila a la vez y se accede a cada página inmediatamente después de la asignación.De esta manera,evita que las asignaciones salten por encima de cualquier página de guardia de la pila proporcionada por el sistema operativo.</target>
        </trans-unit>
        <trans-unit id="dd0c489c581360afbf7f7a5091b3992e53e109af" translate="yes" xml:space="preserve">
          <source>Generate code to verify that you do not go beyond the boundary of the stack. You should specify this flag if you are running in an environment with multiple threads, but you only rarely need to specify it in a single-threaded environment since stack overflow is automatically detected on nearly all systems if there is only one stack.</source>
          <target state="translated">Generar el código para verificar que no se sobrepasa el límite de la pila.Debe especificar este indicador si se está ejecutando en un entorno con múltiples hilos,pero rara vez es necesario especificarlo en un entorno con un solo hilo,ya que el desbordamiento de la pila se detecta automáticamente en casi todos los sistemas si sólo hay una pila.</target>
        </trans-unit>
        <trans-unit id="f09658f66e71e4832575a43871e37604d20cbdbd" translate="yes" xml:space="preserve">
          <source>Generate code treating the given register range as fixed registers. A fixed register is one that the register allocator cannot use. This is useful when compiling kernel code. A register range is specified as two registers separated by a dash. Multiple register ranges can be specified separated by a comma.</source>
          <target state="translated">Generar código tratando el rango de registro dado como registros fijos.Un registro fijo es aquel que el asignador de registros no puede utilizar.Esto es útil cuando se compila el código del núcleo.Un rango de registros se especifica como dos registros separados por un guión.Se pueden especificar rangos de registros múltiples separados por una coma.</target>
        </trans-unit>
        <trans-unit id="69365c978ad182890bcb4e65e053170c8830231a" translate="yes" xml:space="preserve">
          <source>Generate code using &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; instructions. This option defaults to on.</source>
          <target state="translated">Genere c&amp;oacute;digo usando instrucciones &lt;code&gt;push&lt;/code&gt; y &lt;code&gt;pop&lt;/code&gt; . Esta opci&amp;oacute;n est&amp;aacute; activada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="7f296d4ed278effc8fa87bfb0e530628874d3432" translate="yes" xml:space="preserve">
          <source>Generate code using &lt;code&gt;stm&lt;/code&gt; and &lt;code&gt;ldm&lt;/code&gt; instructions. This option isn&amp;rsquo;t supported on CK801 but is enabled by default on other processors.</source>
          <target state="translated">Genere c&amp;oacute;digo usando las instrucciones &lt;code&gt;stm&lt;/code&gt; y &lt;code&gt;ldm&lt;/code&gt; . Esta opci&amp;oacute;n no es compatible con CK801, pero est&amp;aacute; habilitada de forma predeterminada en otros procesadores.</target>
        </trans-unit>
        <trans-unit id="ba4d33b91d9e6ab2d69e87dce44c7244b439ed9e" translate="yes" xml:space="preserve">
          <source>Generate code using features specific to the AM33 processor.</source>
          <target state="translated">Generar el código usando las características específicas del procesador AM33.</target>
        </trans-unit>
        <trans-unit id="b0f3f1a0016506b7432a6808d95156263172db1a" translate="yes" xml:space="preserve">
          <source>Generate code using features specific to the AM33/2.0 processor.</source>
          <target state="translated">Generar código usando características específicas del procesador AM33/2.0.</target>
        </trans-unit>
        <trans-unit id="4d51b4beaa1d3a18f186ce7d15002cb82d47e204" translate="yes" xml:space="preserve">
          <source>Generate code using features specific to the AM34 processor.</source>
          <target state="translated">Generar código usando características específicas del procesador AM34.</target>
        </trans-unit>
        <trans-unit id="c282f618bb7db95f0feff29b3266b2478e4e252b" translate="yes" xml:space="preserve">
          <source>Generate code using global anchor symbol addresses.</source>
          <target state="translated">Generar el código usando direcciones de símbolos de anclaje global.</target>
        </trans-unit>
        <trans-unit id="cb509e9252b480e0a1aeb49faf8b1ef18fa7edf6" translate="yes" xml:space="preserve">
          <source>Generate code using the FDPIC ABI.</source>
          <target state="translated">Genera el código usando el ABI del FDPIC.</target>
        </trans-unit>
        <trans-unit id="404e8a65099de95616c40afb1bc863ffa2523650" translate="yes" xml:space="preserve">
          <source>Generate code using the high registers numbered 16-31. This option is not supported on CK801, CK802, or CK803, and is enabled by default for other processors.</source>
          <target state="translated">Generar el código usando los registros altos numerados 16-31.Esta opción no está soportada en CK801,CK802,o CK803,y está activada por defecto para otros procesadores.</target>
        </trans-unit>
        <trans-unit id="4cb05ce3f6ef091d20d86e01a77fc7f4a59d0bcc" translate="yes" xml:space="preserve">
          <source>Generate code which uses only the general-purpose registers. This will prevent the compiler from using floating-point and Advanced SIMD registers but will not impose any restrictions on the assembler.</source>
          <target state="translated">Generar un código que utilice sólo los registros de uso general.Esto evitará que el compilador utilice los registros de punto flotante y SIMD avanzado,pero no impondrá ninguna restricción al ensamblador.</target>
        </trans-unit>
        <trans-unit id="9cce76ef82a38c3b96967249a0f61e0fb26b9334" translate="yes" xml:space="preserve">
          <source>Generate compiler predefines and select a startfile for the specified UNIX standard. The choices for &lt;var&gt;unix-std&lt;/var&gt; are &amp;lsquo;</source>
          <target state="translated">Genere predefinidos del compilador y seleccione un archivo de inicio para el est&amp;aacute;ndar UNIX especificado. Las opciones para &lt;var&gt;unix-std&lt;/var&gt; son '</target>
        </trans-unit>
        <trans-unit id="a678e34a31471d170303da9eda1b930e2324a992" translate="yes" xml:space="preserve">
          <source>Generate conditional move instructions.</source>
          <target state="translated">Generar instrucciones de movimiento condicionales.</target>
        </trans-unit>
        <trans-unit id="d72e8c8e0f9b51ca898631ea4a5646d5c76664c2" translate="yes" xml:space="preserve">
          <source>Generate divide instructions. Default is off.</source>
          <target state="translated">Generar instrucciones de división.Por defecto está desactivado.</target>
        </trans-unit>
        <trans-unit id="16d77d1fe0a8bda494d3925636feea2c269c0e3f" translate="yes" xml:space="preserve">
          <source>Generate double-precision FPX instructions, tuned for the compact implementation.</source>
          <target state="translated">Generar instrucciones FPX de doble precisión,ajustadas para la implementación compacta.</target>
        </trans-unit>
        <trans-unit id="c229df63f7c476d6f9fecd75b4ac0f6491159589" translate="yes" xml:space="preserve">
          <source>Generate double-precision FPX instructions, tuned for the fast implementation.</source>
          <target state="translated">Generar instrucciones FPX de doble precisión,ajustadas para una rápida implementación.</target>
        </trans-unit>
        <trans-unit id="efd3351263c1d9caa26ca401350421bfc7b35243" translate="yes" xml:space="preserve">
          <source>Generate extended arithmetic instructions. Currently only &lt;code&gt;divaw&lt;/code&gt;, &lt;code&gt;adds&lt;/code&gt;, &lt;code&gt;subs&lt;/code&gt;, and &lt;code&gt;sat16&lt;/code&gt; are supported. This is always enabled for</source>
          <target state="translated">Genere instrucciones aritm&amp;eacute;ticas extendidas. Actualmente, s&amp;oacute;lo &lt;code&gt;divaw&lt;/code&gt; , &lt;code&gt;adds&lt;/code&gt; , &lt;code&gt;subs&lt;/code&gt; , y &lt;code&gt;sat16&lt;/code&gt; son compatibles. Esto siempre est&amp;aacute; habilitado para</target>
        </trans-unit>
        <trans-unit id="6856e99222352076039e94fbdf5c31806c05feaa" translate="yes" xml:space="preserve">
          <source>Generate extended debug information for inlined functions. Location view tracking markers are inserted at inlined entry points, so that address and view numbers can be computed and output in debug information. This can be enabled independently of location views, in which case the view numbers won&amp;rsquo;t be output, but it can only be enabled along with statement frontiers, and it is only enabled by default if location views are enabled.</source>
          <target state="translated">Genere informaci&amp;oacute;n de depuraci&amp;oacute;n ampliada para funciones en l&amp;iacute;nea. Los marcadores de seguimiento de vista de ubicaci&amp;oacute;n se insertan en puntos de entrada en l&amp;iacute;nea, de modo que los n&amp;uacute;meros de vista y direcci&amp;oacute;n se pueden calcular y generar como informaci&amp;oacute;n de depuraci&amp;oacute;n. Esto se puede habilitar independientemente de las vistas de ubicaci&amp;oacute;n, en cuyo caso los n&amp;uacute;meros de vista no se mostrar&amp;aacute;n, pero solo se puede habilitar junto con las fronteras de declaraci&amp;oacute;n, y solo est&amp;aacute; habilitado de forma predeterminada si las vistas de ubicaci&amp;oacute;n est&amp;aacute;n habilitadas.</target>
        </trans-unit>
        <trans-unit id="5d0b2408362730cc5b4ed897b120cdb4b4cc4031" translate="yes" xml:space="preserve">
          <source>Generate extra code to write profile information suitable for the analysis program &lt;code&gt;prof&lt;/code&gt; (for</source>
          <target state="translated">Genere c&amp;oacute;digo adicional para escribir informaci&amp;oacute;n de perfil adecuada para el programa de an&amp;aacute;lisis &lt;code&gt;prof&lt;/code&gt; (para</target>
        </trans-unit>
        <trans-unit id="c6eeb91a33862dbf10594e59a0033583feb5fde5" translate="yes" xml:space="preserve">
          <source>Generate floating-point arithmetic for selected unit &lt;var&gt;unit&lt;/var&gt;. The choices for &lt;var&gt;unit&lt;/var&gt; are:</source>
          <target state="translated">Genere aritm&amp;eacute;tica de punto flotante para la unidad de &lt;var&gt;unit&lt;/var&gt; seleccionada . Las opciones para la &lt;var&gt;unit&lt;/var&gt; son:</target>
        </trans-unit>
        <trans-unit id="79ec4a91ff56b1468e2e0960559756f702528e59" translate="yes" xml:space="preserve">
          <source>Generate floating-point comparison instructions that compare with respect to the &lt;code&gt;rE&lt;/code&gt; epsilon register.</source>
          <target state="translated">Genere instrucciones de comparaci&amp;oacute;n de punto flotante que se comparen con respecto al registro &amp;eacute;psilon &lt;code&gt;rE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5184b7fbfd727379c1835aa4d91abffedcc6f989" translate="yes" xml:space="preserve">
          <source>Generate floating-point instructions. This is the default for 68020 and above, and for ColdFire devices that have an FPU. It defines the macro &lt;code&gt;__HAVE_68881__&lt;/code&gt; on M680x0 targets and &lt;code&gt;__mcffpu__&lt;/code&gt; on ColdFire targets.</source>
          <target state="translated">Genere instrucciones de punto flotante. Este es el valor predeterminado para 68020 y superior, y para dispositivos ColdFire que tienen una FPU. Define la macro &lt;code&gt;__HAVE_68881__&lt;/code&gt; en objetivos &lt;code&gt;__mcffpu__&lt;/code&gt; y __mcffpu__ en objetivos ColdFire.</target>
        </trans-unit>
        <trans-unit id="6ff3989b144109cfd18ff049af7f71f4c3c9f86e" translate="yes" xml:space="preserve">
          <source>Generate hardware atomic sequences using the &lt;code&gt;movli.l&lt;/code&gt; and &lt;code&gt;movco.l&lt;/code&gt; instructions only. This is only available on SH4A and is suitable for multi-core systems. Since the hardware instructions support only 32 bit atomic variables access to 8 or 16 bit variables is emulated with 32 bit accesses. Code compiled with this option is also compatible with other software atomic model interrupt/exception handling systems if executed on an SH4A system. Additional support from the interrupt/exception handling code of the system is not required for this model.</source>
          <target state="translated">Genere secuencias at&amp;oacute;micas de hardware utilizando &lt;code&gt;movco.l&lt;/code&gt; instrucciones &lt;code&gt;movli.l&lt;/code&gt; y movco.l . Esto solo est&amp;aacute; disponible en SH4A y es adecuado para sistemas multin&amp;uacute;cleo. Dado que las instrucciones de hardware solo admiten variables at&amp;oacute;micas de 32 bits, el acceso a variables de 8 o 16 bits se emula con accesos de 32 bits. El c&amp;oacute;digo compilado con esta opci&amp;oacute;n tambi&amp;eacute;n es compatible con otros sistemas de manejo de interrupciones / excepciones de modelos at&amp;oacute;micos de software si se ejecuta en un sistema SH4A. No se requiere soporte adicional del c&amp;oacute;digo de manejo de interrupciones / excepciones del sistema para este modelo.</target>
        </trans-unit>
        <trans-unit id="d8debf693e895754ae8dfa412a7398684e52957b" translate="yes" xml:space="preserve">
          <source>Generate instructions for the machine type &lt;var&gt;cpu-type&lt;/var&gt;. In contrast to</source>
          <target state="translated">Genere instrucciones para el tipo de m&amp;aacute;quina tipo &lt;var&gt;cpu-type&lt;/var&gt; . En contraste con</target>
        </trans-unit>
        <trans-unit id="4d9806e63398f5c7206d46ddf2dd393879704321" translate="yes" xml:space="preserve">
          <source>Generate instructions supported by barrel shifter. This is the default unless</source>
          <target state="translated">Generar instrucciones con el apoyo del cambiador de barriles.Este es el valor predeterminado a menos que</target>
        </trans-unit>
        <trans-unit id="a86b264be3b7927eef8b4d4ec32bd6e0abb23e9a" translate="yes" xml:space="preserve">
          <source>Generate instrumentation calls for entry and exit to functions. Just after function entry and just before function exit, the following profiling functions are called with the address of the current function and its call site. (On some platforms, &lt;code&gt;__builtin_return_address&lt;/code&gt; does not work beyond the current function, so the call site information may not be available to the profiling functions otherwise.)</source>
          <target state="translated">Generar llamadas de instrumentaci&amp;oacute;n para entrada y salida a funciones. Justo despu&amp;eacute;s de la entrada de la funci&amp;oacute;n y justo antes de la salida de la funci&amp;oacute;n, se llaman las siguientes funciones de generaci&amp;oacute;n de perfiles con la direcci&amp;oacute;n de la funci&amp;oacute;n actual y su sitio de llamada. (En algunas plataformas, &lt;code&gt;__builtin_return_address&lt;/code&gt; no funciona m&amp;aacute;s all&amp;aacute; de la funci&amp;oacute;n actual, por lo que la informaci&amp;oacute;n del sitio de llamada puede no estar disponible para las funciones de generaci&amp;oacute;n de perfiles de otra manera).</target>
        </trans-unit>
        <trans-unit id="a558056c364dd801f66dea4bd9ff5d7025049fb1" translate="yes" xml:space="preserve">
          <source>Generate little-endian (default) or big-endian (experimental) code, respectively.</source>
          <target state="translated">Generar código little-endian (por defecto)o big-endian (experimental),respectivamente.</target>
        </trans-unit>
        <trans-unit id="8c624983438064d33fb3b88653aa23aaa51afa20" translate="yes" xml:space="preserve">
          <source>Generate little-endian code.</source>
          <target state="translated">Generar el código de Little-endian.</target>
        </trans-unit>
        <trans-unit id="d362bc65e7c53091f19c9e25dc0b1f5baf698d4a" translate="yes" xml:space="preserve">
          <source>Generate little-endian code. This is the default for &amp;lsquo;</source>
          <target state="translated">Genera c&amp;oacute;digo little-endian. Este es el valor predeterminado para '</target>
        </trans-unit>
        <trans-unit id="66047ec2f64b4bd1b8fdd5fa2877f3f85b442eac" translate="yes" xml:space="preserve">
          <source>Generate little-endian code. This is the default when GCC is configured for an &amp;lsquo;</source>
          <target state="translated">Genera c&amp;oacute;digo little-endian. Este es el valor predeterminado cuando GCC est&amp;aacute; configurado para un '</target>
        </trans-unit>
        <trans-unit id="e76d98abdce9e7fa1b4a7b7f0a6241f584dc592c" translate="yes" xml:space="preserve">
          <source>Generate mul.x and umul.x instructions. This is the default for &amp;lsquo;</source>
          <target state="translated">Genere instrucciones mul.x y umul.x. Este es el valor predeterminado para '</target>
        </trans-unit>
        <trans-unit id="11b3830c8f1fe1ef2c6dc043ba7fa4b0665f2d6d" translate="yes" xml:space="preserve">
          <source>Generate non-looping inline code for all block compares (such as calls to &lt;code&gt;memcmp&lt;/code&gt; or structure compares) less than or equal to &lt;var&gt;num&lt;/var&gt; bytes. If &lt;var&gt;num&lt;/var&gt; is 0, all inline expansion (non-loop and loop) of block compare is disabled. The default value is target-specific.</source>
          <target state="translated">Genere c&amp;oacute;digo en l&amp;iacute;nea sin bucles para todas las comparaciones de bloques (como llamadas a &lt;code&gt;memcmp&lt;/code&gt; o comparaciones de estructuras) menores o iguales a &lt;var&gt;num&lt;/var&gt; bytes. Si &lt;var&gt;num&lt;/var&gt; es 0, toda la expansi&amp;oacute;n en l&amp;iacute;nea (sin bucle y bucle) de la comparaci&amp;oacute;n de bloques est&amp;aacute; deshabilitada. El valor predeterminado es espec&amp;iacute;fico del objetivo.</target>
        </trans-unit>
        <trans-unit id="726e8e558f2a846b8999b9aeb3c7faa8d320b08e" translate="yes" xml:space="preserve">
          <source>Generate object code compatible with the standard GNU Objective-C runtime. This is the default for most types of systems.</source>
          <target state="translated">Generar código de objeto compatible con el tiempo de ejecución estándar de GNU Objective-C.Este es el valor por defecto para la mayoría de los tipos de sistemas.</target>
        </trans-unit>
        <trans-unit id="5f828fdb836a3167f3a117e320f8c23966c29566" translate="yes" xml:space="preserve">
          <source>Generate output compatible with the NeXT runtime. This is the default for NeXT-based systems, including Darwin and Mac OS X. The macro &lt;code&gt;__NEXT_RUNTIME__&lt;/code&gt; is predefined if (and only if) this option is used.</source>
          <target state="translated">Genere una salida compatible con el tiempo de ejecuci&amp;oacute;n de NeXT. Este es el valor predeterminado para los sistemas basados ​​en NeXT, incluidos Darwin y Mac OS X. La macro &lt;code&gt;__NEXT_RUNTIME__&lt;/code&gt; est&amp;aacute; predefinida si (y solo si) se usa esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3b10b8584ef5629375b0697c006157af2562811c" translate="yes" xml:space="preserve">
          <source>Generate output containing 80387 instructions for floating point.</source>
          <target state="translated">Genera una salida que contiene 80387 instrucciones para el punto flotante.</target>
        </trans-unit>
        <trans-unit id="4ac64fa385d79df6893e650d3c87094e5fab8e8d" translate="yes" xml:space="preserve">
          <source>Generate output containing floating-point instructions. This is the default.</source>
          <target state="translated">Generar la salida que contiene las instrucciones de punto flotante.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="a54c9d559afdf54011312401dae184f34851998d" translate="yes" xml:space="preserve">
          <source>Generate output containing library calls for floating point.</source>
          <target state="translated">Generar la salida que contiene las llamadas de la biblioteca para el punto flotante.</target>
        </trans-unit>
        <trans-unit id="b68715959fa47ba0ff79de672b756a42be41a84c" translate="yes" xml:space="preserve">
          <source>Generate output containing library calls for floating point. &lt;strong&gt;Warning:&lt;/strong&gt; the requisite libraries are not available for all HPPA targets. Normally the facilities of the machine&amp;rsquo;s usual C compiler are used, but this cannot be done directly in cross-compilation. You must make your own arrangements to provide suitable library functions for cross-compilation.</source>
          <target state="translated">Generar una salida que contiene llamadas a las bibliotecas de punto flotante. &lt;strong&gt;Advertencia:&lt;/strong&gt; las bibliotecas necesarias no est&amp;aacute;n disponibles para todos los destinos HPPA. Normalmente se utilizan las facilidades del compilador C habitual de la m&amp;aacute;quina, pero esto no se puede hacer directamente en la compilaci&amp;oacute;n cruzada. Debe hacer sus propios arreglos para proporcionar funciones de biblioteca adecuadas para la compilaci&amp;oacute;n cruzada.</target>
        </trans-unit>
        <trans-unit id="123686fdd6543b04616633629545ce470b234181" translate="yes" xml:space="preserve">
          <source>Generate output containing library calls for floating point. &lt;strong&gt;Warning:&lt;/strong&gt; the requisite libraries are not available for all SPARC targets. Normally the facilities of the machine&amp;rsquo;s usual C compiler are used, but this cannot be done directly in cross-compilation. You must make your own arrangements to provide suitable library functions for cross-compilation. The embedded targets &amp;lsquo;</source>
          <target state="translated">Generar una salida que contiene llamadas a las bibliotecas de punto flotante. &lt;strong&gt;Advertencia:&lt;/strong&gt; las bibliotecas necesarias no est&amp;aacute;n disponibles para todos los destinos SPARC. Normalmente se utilizan las facilidades del compilador C habitual de la m&amp;aacute;quina, pero esto no se puede hacer directamente en la compilaci&amp;oacute;n cruzada. Debe hacer sus propios arreglos para proporcionar funciones de biblioteca adecuadas para la compilaci&amp;oacute;n cruzada. Los objetivos integrados '</target>
        </trans-unit>
        <trans-unit id="374b214aae9f131ecd8bd8fbf3ba7e20116baf86" translate="yes" xml:space="preserve">
          <source>Generate output containing library calls for quad-word (long double) floating-point instructions. The functions called are those specified in the SPARC ABI. This is the default.</source>
          <target state="translated">Generar salidas que contengan llamadas de biblioteca para instrucciones de punto flotante de cuatro palabras (doble largo).Las funciones llamadas son las especificadas en la ABI SPARC.Esta es la predeterminada.</target>
        </trans-unit>
        <trans-unit id="e778386ad4f7c29303d76d557065f8b2cddd1a1e" translate="yes" xml:space="preserve">
          <source>Generate output containing quad-word (long double) floating-point instructions.</source>
          <target state="translated">Generar una salida que contenga instrucciones de cuatro palabras (doble largo)en punto flotante.</target>
        </trans-unit>
        <trans-unit id="72b8d6815f1c63fef196e30ed85ba66e28021cd2" translate="yes" xml:space="preserve">
          <source>Generate output for a 5206e ColdFire CPU. The option is now deprecated in favor of the equivalent</source>
          <target state="translated">Generar la salida para una CPU 5206e ColdFire.La opción está ahora desaprobada en favor del equivalente</target>
        </trans-unit>
        <trans-unit id="64050f292f81abd70f3bb1391b078794170aa43c" translate="yes" xml:space="preserve">
          <source>Generate output for a 520X ColdFire CPU. This is the default when the compiler is configured for 520X-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para una CPU ColdFire 520X.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en 520X.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="4e6125bf5e16c60081ffba73c18391756b953da9" translate="yes" xml:space="preserve">
          <source>Generate output for a 68000. This is the default when the compiler is configured for 68000-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un 68000.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en 68000.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="293fc36513894f8af34456d5d4568e3a8a660df3" translate="yes" xml:space="preserve">
          <source>Generate output for a 68010. This is the default when the compiler is configured for 68010-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un 68010.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en 68010.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="3de0124e7fb5a143b3bdb1e5bf42ea00b8dc1041" translate="yes" xml:space="preserve">
          <source>Generate output for a 68020. This is the default when the compiler is configured for 68020-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un 68020.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en el 68020.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="a2125889bc447fbbe5141c63e65b9cc93af2774c" translate="yes" xml:space="preserve">
          <source>Generate output for a 68030. This is the default when the compiler is configured for 68030-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un 68030.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en el 68030.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="dcd8a9aedf0282928a86db993cf8d4ff8070b038" translate="yes" xml:space="preserve">
          <source>Generate output for a 68040, without using any of the new instructions. This results in code that can run relatively efficiently on either a 68020/68881 or a 68030 or a 68040. The generated code does use the 68881 instructions that are emulated on the 68040.</source>
          <target state="translated">Generar la salida de un 68040,sin usar ninguna de las nuevas instrucciones.Esto da como resultado un código que puede funcionar de manera relativamente eficiente en un 68020/68881 o un 68030 o un 68040.El código generado utiliza las instrucciones 68881 que son emuladas en el 68040.</target>
        </trans-unit>
        <trans-unit id="dd4119d908a2b18c651ef46f26b46cd2bc8b0de2" translate="yes" xml:space="preserve">
          <source>Generate output for a 68040. This is the default when the compiler is configured for 68040-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un 68040.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en el 68040.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="c0e33f0f063c998bb9f2f1ad28f52830efcc367f" translate="yes" xml:space="preserve">
          <source>Generate output for a 68060, without using any of the new instructions. This results in code that can run relatively efficiently on either a 68020/68881 or a 68030 or a 68040. The generated code does use the 68881 instructions that are emulated on the 68060.</source>
          <target state="translated">Generar la salida de un 68060,sin usar ninguna de las nuevas instrucciones.Esto da como resultado un código que puede funcionar de manera relativamente eficiente en un 68020/68881 o un 68030 o un 68040.El código generado utiliza las instrucciones del 68881 que son emuladas en el 68060.</target>
        </trans-unit>
        <trans-unit id="4e0aa817ee3651021250220786d7a8ddadf8d908" translate="yes" xml:space="preserve">
          <source>Generate output for a 68060. This is the default when the compiler is configured for 68060-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un 68060.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en 68060.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="ea5be8485d83583c41e5d8584b5916331ad44880" translate="yes" xml:space="preserve">
          <source>Generate output for a CPU32. This is the default when the compiler is configured for CPU32-based systems. It is equivalent to</source>
          <target state="translated">Generar la salida para un CPU32.Este es el valor por defecto cuando el compilador está configurado para sistemas basados en CPU32.Es equivalente a</target>
        </trans-unit>
        <trans-unit id="e1d15ac03ce80d2a7972245b867ea55ebdb92c9b" translate="yes" xml:space="preserve">
          <source>Generate output for a ColdFire 5307 CPU. The option is now deprecated in favor of the equivalent</source>
          <target state="translated">Generar la salida para una CPU ColdFire 5307.La opción está ahora desaprobada en favor del equivalente</target>
        </trans-unit>
        <trans-unit id="8e01c68482064d3161a9a189e69a1cae2c323dfb" translate="yes" xml:space="preserve">
          <source>Generate output for a ColdFire 5407 CPU. The option is now deprecated in favor of the equivalent</source>
          <target state="translated">Generar la salida para una CPU ColdFire 5407.La opción está ahora desaprobada en favor del equivalente</target>
        </trans-unit>
        <trans-unit id="0aa9f4c3f64933730b3c4adacac26f4b2456673a" translate="yes" xml:space="preserve">
          <source>Generate output for a ColdFire V4e family CPU (e.g. 547x/548x). This includes use of hardware floating-point instructions. The option is equivalent to</source>
          <target state="translated">Generar la salida para una CPU de la familia ColdFire V4e (por ejemplo,547x/548x).Esto incluye el uso de instrucciones de punto flotante del hardware.La opción es equivalente a</target>
        </trans-unit>
        <trans-unit id="e7347e49e1182821745b1b659d00df4d824a3e04" translate="yes" xml:space="preserve">
          <source>Generate output for a member of the ColdFire 528X family. The option is now deprecated in favor of the equivalent</source>
          <target state="translated">Generar la salida para un miembro de la familia ColdFire 528X.La opción está ahora desaprobada en favor del equivalente</target>
        </trans-unit>
        <trans-unit id="18dcb26797382565521c621a512430444b4e53d3" translate="yes" xml:space="preserve">
          <source>Generate performance extension 2 instructions.</source>
          <target state="translated">Generar instrucciones de la extensión de rendimiento 2.</target>
        </trans-unit>
        <trans-unit id="bd6544f4b4eb02ec7c1103af517606738fd2ba09" translate="yes" xml:space="preserve">
          <source>Generate performance extension instructions.</source>
          <target state="translated">Generar instrucciones de extensión del rendimiento.</target>
        </trans-unit>
        <trans-unit id="d399ee7f07dc0a2fb4ab33398b031c9b688f806f" translate="yes" xml:space="preserve">
          <source>Generate position-independent EABI code.</source>
          <target state="translated">Generar código EABI independiente de la posición.</target>
        </trans-unit>
        <trans-unit id="1d1142004c8111e7c50b740035c14c26ae3a4d40" translate="yes" xml:space="preserve">
          <source>Generate position-independent code (PIC) suitable for use in a shared library, if supported for the target machine. Such code accesses all constant addresses through a global offset table (GOT). The dynamic loader resolves the GOT entries when the program starts (the dynamic loader is not part of GCC; it is part of the operating system). If the GOT size for the linked executable exceeds a machine-specific maximum size, you get an error message from the linker indicating that</source>
          <target state="translated">Generar un código independiente de la posición (PIC)adecuado para su uso en una biblioteca compartida,si está soportado por la máquina objetivo.Dicho código accede a todas las direcciones constantes a través de una tabla de compensación global (GOT).El cargador dinámico resuelve las entradas de la GOT cuando se inicia el programa (el cargador dinámico no forma parte de la GCC,sino del sistema operativo).Si el tamaño de la GOT para el ejecutable enlazado excede un tamaño máximo específico de la máquina,se obtiene un mensaje de error del enlazador que indica que</target>
        </trans-unit>
        <trans-unit id="48b952028eaadcc5cf5b2652a4f09475aac1135d" translate="yes" xml:space="preserve">
          <source>Generate secure code as per the &quot;ARMv8-M Security Extensions: Requirements on Development Tools Engineering Specification&quot;, which can be found on &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&lt;/a&gt;.</source>
          <target state="translated">Genere c&amp;oacute;digo seguro seg&amp;uacute;n las &quot;Extensiones de seguridad ARMv8-M: Requisitos de la especificaci&amp;oacute;n de ingenier&amp;iacute;a de herramientas de desarrollo&quot;, que se puede encontrar en &lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf&quot;&gt;http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0. pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61825c7f7fe0283dfaa12a0bf7f79986a97151b2" translate="yes" xml:space="preserve">
          <source>Generate single-precision FPX instructions, tuned for the compact implementation.</source>
          <target state="translated">Generar instrucciones FPX de una sola precisión,ajustadas para la implementación compacta.</target>
        </trans-unit>
        <trans-unit id="57fc66010a803fb795da295b4fbe9fac5a8dbfd1" translate="yes" xml:space="preserve">
          <source>Generate single-precision FPX instructions, tuned for the fast implementation.</source>
          <target state="translated">Generar instrucciones FPX de una sola precisión,ajustadas para una rápida implementación.</target>
        </trans-unit>
        <trans-unit id="03e730324ac713e9445bac5587ed90df17b4e2e3" translate="yes" xml:space="preserve">
          <source>Generate software atomic sequences that temporarily disable interrupts by setting &lt;code&gt;SR.IMASK = 1111&lt;/code&gt;. This model works only when the program runs in privileged mode and is only suitable for single-core systems. Additional support from the interrupt/exception handling code of the system is not required. This model is enabled by default when the target is &lt;code&gt;sh*-*-linux*&lt;/code&gt; and SH1* or SH2*.</source>
          <target state="translated">Genere secuencias at&amp;oacute;micas de software que deshabiliten temporalmente las interrupciones configurando &lt;code&gt;SR.IMASK = 1111&lt;/code&gt; . Este modelo funciona solo cuando el programa se ejecuta en modo privilegiado y solo es adecuado para sistemas de un solo n&amp;uacute;cleo. No se requiere soporte adicional del c&amp;oacute;digo de manejo de interrupciones / excepciones del sistema. Este modelo est&amp;aacute; habilitado por defecto cuando el destino es &lt;code&gt;sh*-*-linux*&lt;/code&gt; y SH1 * o SH2 *.</target>
        </trans-unit>
        <trans-unit id="adcbfbeac80cfe6a3e4b55a0bdfaf3f19f30fbea" translate="yes" xml:space="preserve">
          <source>Generate software atomic sequences that use a variable in the thread control block. This is a variation of the gUSA sequences which can also be used on SH1* and SH2* targets. The generated atomic sequences require additional support from the interrupt/exception handling code of the system and are only suitable for single-core systems. When using this model, the &amp;lsquo;</source>
          <target state="translated">Genere secuencias at&amp;oacute;micas de software que utilicen una variable en el bloque de control de subprocesos. &amp;Eacute;sta es una variaci&amp;oacute;n de las secuencias de gUSA que tambi&amp;eacute;n se puede utilizar en dianas SH1 * y SH2 *. Las secuencias at&amp;oacute;micas generadas requieren soporte adicional del c&amp;oacute;digo de manejo de interrupciones / excepciones del sistema y solo son adecuadas para sistemas de un solo n&amp;uacute;cleo. Al utilizar este modelo, el '</target>
        </trans-unit>
        <trans-unit id="7e273affad800c8c4cf1d009bbdccfc4d50d0a21" translate="yes" xml:space="preserve">
          <source>Generate stack protection code using canary at &lt;var&gt;guard&lt;/var&gt;. Supported locations are &amp;lsquo;</source>
          <target state="translated">Genere c&amp;oacute;digo de protecci&amp;oacute;n de pila usando canary at &lt;var&gt;guard&lt;/var&gt; . Las ubicaciones admitidas son '</target>
        </trans-unit>
        <trans-unit id="b8a639f56facade8c98595f71ed5d4db9ac64830" translate="yes" xml:space="preserve">
          <source>Generate string extension instructions.</source>
          <target state="translated">Generar instrucciones de extensión de la cadena.</target>
        </trans-unit>
        <trans-unit id="8a1f94259681f1ae170bbb57344c845c25fbbd90" translate="yes" xml:space="preserve">
          <source>Generate the &lt;code&gt;tas.b&lt;/code&gt; opcode for &lt;code&gt;__atomic_test_and_set&lt;/code&gt;. Notice that depending on the particular hardware and software configuration this can degrade overall performance due to the operand cache line flushes that are implied by the &lt;code&gt;tas.b&lt;/code&gt; instruction. On multi-core SH4A processors the &lt;code&gt;tas.b&lt;/code&gt; instruction must be used with caution since it can result in data corruption for certain cache configurations.</source>
          <target state="translated">Generar el &lt;code&gt;tas.b&lt;/code&gt; c&amp;oacute;digo de operaci&amp;oacute;n para &lt;code&gt;__atomic_test_and_set&lt;/code&gt; . Tenga en cuenta que, dependiendo de la configuraci&amp;oacute;n particular de hardware y software, esto puede degradar el rendimiento general debido a los vaciados de l&amp;iacute;nea de cach&amp;eacute; de operandos que est&amp;aacute;n impl&amp;iacute;citos en la instrucci&amp;oacute;n &lt;code&gt;tas.b&lt;/code&gt; .En los procesadores SH4A de varios n&amp;uacute;cleos, la instrucci&amp;oacute;n &lt;code&gt;tas.b&lt;/code&gt; debe usarse con precauci&amp;oacute;n, ya que puede provocar da&amp;ntilde;os en los datos para ciertas configuraciones de cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="33b6af1538444b86d0ad7d0fedaceadc538e6781" translate="yes" xml:space="preserve">
          <source>Generate the predefine, &lt;code&gt;_SIO&lt;/code&gt;, for server IO. The default is</source>
          <target state="translated">Genere el predefinido, &lt;code&gt;_SIO&lt;/code&gt; , para el servidor IO. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="556e10b173cc8258302ad6ae7353988cc9258bb9" translate="yes" xml:space="preserve">
          <source>Generate unwind table in DWARF format, if supported by target machine. The table is exact at each instruction boundary, so it can be used for stack unwinding from asynchronous events (such as debugger or garbage collector).</source>
          <target state="translated">Generar tabla de desenrollado en formato DWARF,si está soportado por la máquina de destino.La tabla es exacta en cada límite de la instrucción,por lo que puede utilizarse para el desbobinado de pilas a partir de eventos asíncronos (como el depurador o el recolector de basura).</target>
        </trans-unit>
        <trans-unit id="57527d83fd3616a340b11bb579911dbfd64f477e" translate="yes" xml:space="preserve">
          <source>Generate v3 push25/pop25 instructions.</source>
          <target state="translated">Generar instrucciones v3 push25/pop25.</target>
        </trans-unit>
        <trans-unit id="fb9942d737ee06d15159ff521f994cc01ae69210" translate="yes" xml:space="preserve">
          <source>Generated code is not compatible with hardware interrupts. Code size is smaller.</source>
          <target state="translated">El código generado no es compatible con las interrupciones del hardware.El tamaño del código es más pequeño.</target>
        </trans-unit>
        <trans-unit id="95fc43dc3dce502b8d3a439f3daa647aaa660090" translate="yes" xml:space="preserve">
          <source>Generates</source>
          <target state="translated">Generates</target>
        </trans-unit>
        <trans-unit id="847361d2a7401aea217f81327402896d9c474e00" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;sbit&lt;/code&gt;/&lt;code&gt;cbit&lt;/code&gt; instructions for bit manipulations.</source>
          <target state="translated">Genera instrucciones &lt;code&gt;sbit&lt;/code&gt; / &lt;code&gt;cbit&lt;/code&gt; para manipulaciones de bits.</target>
        </trans-unit>
        <trans-unit id="8c23e71aebd89fa525027dc7a4570046a7a64ce0" translate="yes" xml:space="preserve">
          <source>Generates an error message. This pragma &lt;em&gt;is&lt;/em&gt; considered to indicate an error in the compilation, and it will be treated as such.</source>
          <target state="translated">Genera un mensaje de error. Este pragma &lt;em&gt;se&lt;/em&gt; considera que indica un error en la compilaci&amp;oacute;n, y ser&amp;aacute; tratado como tal.</target>
        </trans-unit>
        <trans-unit id="b4a08a286760cba742dec264941903cd2180c988" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;brk&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;brk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0ffdd1afe0ff10e18f301f3481e988ec1af918" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;clrpsw&lt;/code&gt; machine instruction to clear the specified bit in the processor status word.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;clrpsw&lt;/code&gt; para borrar el bit especificado en la palabra de estado del procesador.</target>
        </trans-unit>
        <trans-unit id="e384966166fe10a7e3cda9622b8d991e42dbafb8" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;crc32b&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;crc32b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="097e8495f2e00512011587a86cec2af02faf3293" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;crc32l&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;crc32l&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="257268a989f9b93ff19c2d7c87cb2336d607cc4f" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;crc32q&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;crc32q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6ee9ffc23cac162df8a9b520916fe8eb4063947" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;crc32w&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;crc32w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c0298bd9ac40c51cad36ed168d5ebaa6178f1de" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;etnd&lt;/code&gt; machine instruction. The current nesting depth is returned as integer value. For a nesting depth of 0 the code is not executed as part of an transaction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;etnd&lt;/code&gt; machine. La profundidad de anidamiento actual se devuelve como un valor entero. Para una profundidad de anidamiento de 0, el c&amp;oacute;digo no se ejecuta como parte de una transacci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ba9daaa604a3528f1838ae3869b5e548870970eb" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;extractps&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;extractps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89f2857c101ed877edbedb096cf0c5b70642f1a6" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;insertps&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;insertps&lt;/code&gt; machine.</target>
        </trans-unit>
        <trans-unit id="bddf0335c49f41b446b0994e140cc0b296730b66" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;int&lt;/code&gt; machine instruction to generate an interrupt with the specified value.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;int&lt;/code&gt; de la m&amp;aacute;quina para generar una interrupci&amp;oacute;n con el valor especificado.</target>
        </trans-unit>
        <trans-unit id="cc578c8838d75de69df84505da3623cd37d917cc" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;machi&lt;/code&gt; machine instruction to add the result of multiplying the top 16 bits of the two arguments into the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;machi&lt;/code&gt; machine para sumar el resultado de multiplicar los 16 bits superiores de los dos argumentos en el acumulador.</target>
        </trans-unit>
        <trans-unit id="99eacdb7a1185745b3f8d3546aa5c195c4ffc120" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;maclo&lt;/code&gt; machine instruction to add the result of multiplying the bottom 16 bits of the two arguments into the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;maclo&lt;/code&gt; para sumar el resultado de multiplicar los 16 bits inferiores de los dos argumentos en el acumulador.</target>
        </trans-unit>
        <trans-unit id="7a0ca51423d0e24c5de865392e13bff92dec8a47" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movhps&lt;/code&gt; machine instruction as a load from memory.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;movhps&lt;/code&gt; como una carga desde la memoria.</target>
        </trans-unit>
        <trans-unit id="a6336fc5b41c1f5923ae66b48c6856394b9f7d5d" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movhps&lt;/code&gt; machine instruction as a store to memory.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;movhps&lt;/code&gt; como almacenamiento en memoria.</target>
        </trans-unit>
        <trans-unit id="81a1c47a7ece45e98596dc9420085617e89d6661" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movlps&lt;/code&gt; machine instruction as a load from memory</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;movlps&lt;/code&gt; como una carga desde la memoria</target>
        </trans-unit>
        <trans-unit id="1e491626b2ecf306727f7b2f326dde340a6befb6" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movlps&lt;/code&gt; machine instruction as a store to memory.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;movlps&lt;/code&gt; como almacenamiento en la memoria.</target>
        </trans-unit>
        <trans-unit id="ac79e7ffaaf077d95a6d1ffa3d8fb253edbeb451" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movss&lt;/code&gt; machine instruction as a load from memory.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;movss&lt;/code&gt; como una carga desde la memoria.</target>
        </trans-unit>
        <trans-unit id="2dc4d75da1c01f01ac98af15d63b74a7af18475d" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movups&lt;/code&gt; machine instruction as a load from memory.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;movups&lt;/code&gt; como una carga desde la memoria.</target>
        </trans-unit>
        <trans-unit id="363646d48f8bc2356c5c4e7f637ebc00c96d25d3" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;movups&lt;/code&gt; machine instruction as a store to memory.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;movups&lt;/code&gt; como almacenamiento en la memoria.</target>
        </trans-unit>
        <trans-unit id="bc35453eece3fefcd1bc15a0d478b36419def393" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mulhi&lt;/code&gt; machine instruction to place the result of multiplying the top 16 bits of the two arguments into the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;mulhi&lt;/code&gt; machine para colocar el resultado de multiplicar los 16 bits superiores de los dos argumentos en el acumulador.</target>
        </trans-unit>
        <trans-unit id="52d614340e6bcb9b13e27d9daf3f3ec4c3e7003e" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mullo&lt;/code&gt; machine instruction to place the result of multiplying the bottom 16 bits of the two arguments into the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;mullo&lt;/code&gt; machine para colocar el resultado de multiplicar los 16 bits inferiores de los dos argumentos en el acumulador.</target>
        </trans-unit>
        <trans-unit id="37702a0f744e0973c9767b2a0ae0b071d0ab6011" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvfachi&lt;/code&gt; machine instruction to read the top 32 bits of the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;mvfachi&lt;/code&gt; para leer los 32 bits superiores del acumulador.</target>
        </trans-unit>
        <trans-unit id="e5e940957ba8e9f4e4a5a9b38f5ec9bacccdcd1d" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvfacmi&lt;/code&gt; machine instruction to read the middle 32 bits of the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;mvfacmi&lt;/code&gt; para leer los 32 bits del medio del acumulador.</target>
        </trans-unit>
        <trans-unit id="84ea7bb4390bbd29b42442b2c0df648769428770" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvfc&lt;/code&gt; machine instruction which reads the control register specified in its argument and returns its value.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;mvfc&lt;/code&gt; que lee el registro de control especificado en su argumento y devuelve su valor.</target>
        </trans-unit>
        <trans-unit id="9a7f85fadc166c23e3a73720a98d17ae8d98c867" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvtachi&lt;/code&gt; machine instruction to set the top 32 bits of the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;mvtachi&lt;/code&gt; para establecer los 32 bits superiores del acumulador.</target>
        </trans-unit>
        <trans-unit id="c2fa5a8c449853ed0e286fabb00686c6c4684432" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvtaclo&lt;/code&gt; machine instruction to set the bottom 32 bits of the accumulator.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;mvtaclo&lt;/code&gt; para configurar los 32 bits inferiores del acumulador.</target>
        </trans-unit>
        <trans-unit id="0c726977269ab1aef450eb4579a182f674e2891b" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvtc&lt;/code&gt; machine instruction which sets control register number &lt;code&gt;reg&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;mvtc&lt;/code&gt; que establece el n&amp;uacute;mero de registro de control &lt;code&gt;reg&lt;/code&gt; en &lt;code&gt;val&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e73288099a5726fcb09aeebaa5734e10714eb5f2" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;mvtipl&lt;/code&gt; machine instruction set the interrupt priority level.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;mvtipl&lt;/code&gt; y establece el nivel de prioridad de interrupci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c95405f984d5d6abab06b81618d6b2d88c6bce16" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;ntstg&lt;/code&gt; machine instruction. The second argument is written to the first arguments location. The store operation will not be rolled-back in case of an transaction abort.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;ntstg&lt;/code&gt; . El segundo argumento se escribe en la ubicaci&amp;oacute;n del primer argumento. La operaci&amp;oacute;n de la tienda no se revertir&amp;aacute; en caso de que se cancele una transacci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="221810e17f3f5b7b6eee2c597dcc35e9560d5c1a" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pause&lt;/code&gt; machine instruction with a compiler memory barrier.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina de &lt;code&gt;pause&lt;/code&gt; con una barrera de memoria del compilador.</target>
        </trans-unit>
        <trans-unit id="fabcc577b37bbc75f15d4acfc478723f40e312bf" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pclmulqdq&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;pclmulqdq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="138581c28238370fdca095f892b8bcc2f037ebde" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pextrb&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;pextrb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc89464fd0e0ffc62121a43ea4c78a22a765f79b" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pextrd&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;pextrd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6995305b1713c32c1cb9c1c29aa123fa501311ad" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pextrq&lt;/code&gt; machine instruction in 64bit mode.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;pextrq&lt;/code&gt; en modo de 64 bits.</target>
        </trans-unit>
        <trans-unit id="7afd0d12563bc8ecde0ac65ab4ecf09a6388cc0c" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pinsrb&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;pinsrb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="587eac9a0053b04618284992d46512728f7465b0" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pinsrd&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;pinsrd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e89f9467a7fdb5f2511c4d93da028b6494b1db2e" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;pinsrq&lt;/code&gt; machine instruction in 64bit mode.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;pinsrq&lt;/code&gt; en modo de 64 bits.</target>
        </trans-unit>
        <trans-unit id="167d17fe5058f3ef0cb33d59903eebaaf6162e68" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;popcntl&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;popcntl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb126029514e2d5bfcb6bca148eb150b8aba8a4" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;popcntl&lt;/code&gt; or &lt;code&gt;popcntq&lt;/code&gt; machine instruction, depending on the size of &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;popcntl&lt;/code&gt; o &lt;code&gt;popcntq&lt;/code&gt; , dependiendo del tama&amp;ntilde;o de &lt;code&gt;unsigned long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c32c9ad948f2048e1fcb6de749499d83eb38bfdd" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;popcntq&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;popcntq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6a384a17f6c55681ebb99e208e7e76367ba0a5f" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;ppa rX,rY,1&lt;/code&gt; machine instruction. Where the integer parameter is loaded into rX and a value of zero is loaded into rY. The integer parameter specifies the number of times the transaction repeatedly aborted.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;ppa rX,rY,1&lt;/code&gt; . Donde el par&amp;aacute;metro entero se carga en rX y un valor de cero se carga en rY. El par&amp;aacute;metro entero especifica el n&amp;uacute;mero de veces que la transacci&amp;oacute;n se abort&amp;oacute; repetidamente.</target>
        </trans-unit>
        <trans-unit id="2ad4e7198804a310937a6c8bd6ea66807f131d33" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;racw&lt;/code&gt; machine instruction to round the accumulator according to the specified mode.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;racw&lt;/code&gt; para redondear el acumulador de acuerdo con el modo especificado.</target>
        </trans-unit>
        <trans-unit id="94afa89c73a482e7f60ea3534ec6652b684e5611" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;revw&lt;/code&gt; machine instruction which swaps the bytes in the argument so that bits 0&amp;ndash;7 now occupy bits 8&amp;ndash;15 and vice versa, and also bits 16&amp;ndash;23 occupy bits 24&amp;ndash;31 and vice versa.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;revw&lt;/code&gt; que intercambia los bytes en el argumento de modo que los bits 0&amp;ndash;7 ahora ocupen los bits 8&amp;ndash;15 y viceversa, y tambi&amp;eacute;n los bits 16&amp;ndash;23 ocupan los bits 24&amp;ndash;31 y viceversa.</target>
        </trans-unit>
        <trans-unit id="6d19e7f0e193910eff939ea1df5fd508cf81e1dd" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;rmpa&lt;/code&gt; machine instruction which initiates a repeated multiply and accumulate sequence.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;rmpa&lt;/code&gt; que inicia una secuencia repetida de multiplicar y acumular.</target>
        </trans-unit>
        <trans-unit id="3a3c845817720a1abf8f57c24608a050c45caf15" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;round&lt;/code&gt; machine instruction which returns the floating-point argument rounded according to the current rounding mode set in the floating-point status word register.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;round&lt;/code&gt; que devuelve el argumento de punto flotante redondeado de acuerdo con el modo de redondeo actual establecido en el registro de palabra de estado de punto flotante.</target>
        </trans-unit>
        <trans-unit id="693bacff2407833725bfd8a8b85cfbf1bb7e034c" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;sat&lt;/code&gt; machine instruction which returns the saturated value of the argument.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;sat&lt;/code&gt; machine que devuelve el valor saturado del argumento.</target>
        </trans-unit>
        <trans-unit id="0bd4f2535ab0460fd7e26bbf4e95465d1caef5d0" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;setpsw&lt;/code&gt; machine instruction to set the specified bit in the processor status word.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;setpsw&lt;/code&gt; para establecer el bit especificado en la palabra de estado del procesador.</target>
        </trans-unit>
        <trans-unit id="86af23191f84ff6e1646de29e1379a9fa322b441" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;tabort&lt;/code&gt; machine instruction with the specified abort code. Abort codes from 0 through 255 are reserved and will result in an error message.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina &lt;code&gt;tabort&lt;/code&gt; con el c&amp;oacute;digo de aborto especificado. Los c&amp;oacute;digos de cancelaci&amp;oacute;n de 0 a 255 est&amp;aacute;n reservados y dar&amp;aacute;n lugar a un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="41fafa8bbaf148ec213bd90ff158b6b99b4cd68d" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;tbegin&lt;/code&gt; machine instruction starting a non-constrained hardware transaction. If the parameter is non-NULL the memory area is used to store the transaction diagnostic buffer and will be passed as first operand to &lt;code&gt;tbegin&lt;/code&gt;. This buffer can be defined using the &lt;code&gt;struct __htm_tdb&lt;/code&gt; C struct defined in &lt;code&gt;htmintrin.h&lt;/code&gt; and must reside on a double-word boundary. The second tbegin operand is set to &lt;code&gt;0xff0c&lt;/code&gt;. This enables save/restore of all GPRs and disables aborts for FPR and AR manipulations inside the transaction body. The condition code set by the tbegin instruction is returned as integer value. The tbegin instruction by definition overwrites the content of all FPRs. The compiler will generate code which saves and restores the FPRs. For soft-float code it is recommended to used the &lt;code&gt;*_nofloat&lt;/code&gt; variant. In order to prevent a TDB from being written it is required to pass a constant zero value as parameter. Passing a zero value through a variable is not sufficient. Although modifications of access registers inside the transaction will not trigger an transaction abort it is not supported to actually modify them. Access registers do not get saved when entering a transaction. They will have undefined state when reaching the abort code.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n &lt;code&gt;tbegin&lt;/code&gt; de la m&amp;aacute;quina iniciando una transacci&amp;oacute;n de hardware no restringida. Si el par&amp;aacute;metro no es NULL, el &amp;aacute;rea de memoria se usa para almacenar el b&amp;uacute;fer de diagn&amp;oacute;stico de transacciones y se pasar&amp;aacute; como primer operando a &lt;code&gt;tbegin&lt;/code&gt; . Este b&amp;uacute;fer se puede definir usando la &lt;code&gt;struct __htm_tdb&lt;/code&gt; C definida en &lt;code&gt;htmintrin.h&lt;/code&gt; y debe residir en un l&amp;iacute;mite de palabra doble. El segundo operando tbegin se establece en &lt;code&gt;0xff0c&lt;/code&gt; . Esto permite guardar / restaurar todos los GPR y deshabilita los abortos para manipulaciones FPR y AR dentro del cuerpo de la transacci&amp;oacute;n. El c&amp;oacute;digo de condici&amp;oacute;n establecido por la instrucci&amp;oacute;n tbegin se devuelve como un valor entero. La instrucci&amp;oacute;n tbegin, por definici&amp;oacute;n, sobrescribe el contenido de todos los FPR. El compilador generar&amp;aacute; c&amp;oacute;digo que guarda y restaura los FPR. Para el c&amp;oacute;digo de flotaci&amp;oacute;n suave se recomienda utilizar el &lt;code&gt;*_nofloat&lt;/code&gt; variante. Para evitar que se escriba una TDB, es necesario pasar un valor cero constante como par&amp;aacute;metro. Pasar un valor cero a trav&amp;eacute;s de una variable no es suficiente. Aunque las modificaciones de los registros de acceso dentro de la transacci&amp;oacute;n no desencadenar&amp;aacute;n un aborto de transacci&amp;oacute;n, no se admite modificarlos realmente. Los registros de acceso no se guardan al ingresar una transacci&amp;oacute;n. Tendr&amp;aacute;n un estado indefinido al llegar al c&amp;oacute;digo de cancelaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e6827eb1aea4f7107218c612803fe4d6ada64dff" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;tbeginc&lt;/code&gt; machine instruction starting a constrained hardware transaction. The second operand is set to &lt;code&gt;0xff08&lt;/code&gt;.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de m&amp;aacute;quina &lt;code&gt;tbeginc&lt;/code&gt; iniciando una transacci&amp;oacute;n de hardware restringida. El segundo operando se establece en &lt;code&gt;0xff08&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1623696be46dd23fac7b3be91a9dabc88baaf7ab" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;tend&lt;/code&gt; machine instruction finishing a transaction and making the changes visible to other threads. The condition code generated by tend is returned as integer value.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina de &lt;code&gt;tend&lt;/code&gt; er al finalizar una transacci&amp;oacute;n y hacer visibles los cambios a otros hilos. El c&amp;oacute;digo de condici&amp;oacute;n generado por tender se devuelve como un valor entero.</target>
        </trans-unit>
        <trans-unit id="98be0f38fb4c5ac278186b26e4d1c15696ff51bf" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;wait&lt;/code&gt; machine instruction.</source>
          <target state="translated">Genera la instrucci&amp;oacute;n de la m&amp;aacute;quina de &lt;code&gt;wait&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0edb628a9542a14f813bd7de9f8386b56c8a58b5" translate="yes" xml:space="preserve">
          <source>Generates:</source>
          <target state="translated">Generates:</target>
        </trans-unit>
        <trans-unit id="ea3f79632679059de141d66e9dca3bc06851d467" translate="yes" xml:space="preserve">
          <source>Generic VIA Nano CPU with x86-64, MMX, SSE, SSE2, SSE3 and SSSE3 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">CPU VIA Nano genérico con soporte de juego de instrucciones x86-64,MMX,SSE,SSE2,SSE3 y SSSE3.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="9aea01d94f58ef40baf7a92523ddcc334efa83d3" translate="yes" xml:space="preserve">
          <source>Get and set the contents of the floating-point control and status register (FPU control register 31). These functions are only available in hard-float code but can be called in both MIPS16 and non-MIPS16 contexts.</source>
          <target state="translated">Obtener y configurar el contenido del registro de control y estado de punto flotante (registro de control FPU 31).Estas funciones sólo están disponibles en código de punto flotante,pero pueden ser llamadas en contextos MIPS16 y no MIPS16.</target>
        </trans-unit>
        <trans-unit id="93019384bd85aa8984f35ea4b05d12346052144c" translate="yes" xml:space="preserve">
          <source>Get the current value of shadow stack pointer if shadow stack support from Intel CET is enabled in the hardware or &lt;code&gt;0&lt;/code&gt; otherwise. The &lt;code&gt;ret_type&lt;/code&gt; is &lt;code&gt;unsigned long long&lt;/code&gt; for 64-bit targets and &lt;code&gt;unsigned int&lt;/code&gt; for 32-bit targets.</source>
          <target state="translated">Obtenga el valor actual del puntero de la pila de sombra si el soporte de pila de sombra de Intel CET est&amp;aacute; habilitado en el hardware o &lt;code&gt;0&lt;/code&gt; en caso contrario. El tipo &lt;code&gt;ret_type&lt;/code&gt; es &lt;code&gt;unsigned long long&lt;/code&gt; para destinos de 64 bits y &lt;code&gt;unsigned int&lt;/code&gt; para destinos de 32 bits.</target>
        </trans-unit>
        <trans-unit id="242390092876b4a7227130b506459512d744c5bd" translate="yes" xml:space="preserve">
          <source>Getting pointers to labels, and computed gotos.</source>
          <target state="translated">Consiguiendo punteros para las etiquetas,y gotos computados.</target>
        </trans-unit>
        <trans-unit id="fbec048bbd1449a0bc11388da4d5291473184989" translate="yes" xml:space="preserve">
          <source>Getting the return or frame address of a function.</source>
          <target state="translated">Obtener la dirección de retorno o marco de una función.</target>
        </trans-unit>
        <trans-unit id="5bde8fdcb7065ba19c1a32d2b6a67073b7fb1601" translate="yes" xml:space="preserve">
          <source>Give a warning when a value of type &lt;code&gt;float&lt;/code&gt; is implicitly promoted to &lt;code&gt;double&lt;/code&gt;. CPUs with a 32-bit &amp;ldquo;single-precision&amp;rdquo; floating-point unit implement &lt;code&gt;float&lt;/code&gt; in hardware, but emulate &lt;code&gt;double&lt;/code&gt; in software. On such a machine, doing computations using &lt;code&gt;double&lt;/code&gt; values is much more expensive because of the overhead required for software emulation.</source>
          <target state="translated">Da una advertencia cuando un valor de tipo &lt;code&gt;float&lt;/code&gt; se promueve impl&amp;iacute;citamente a &lt;code&gt;double&lt;/code&gt; . Las CPU con una unidad de coma flotante de &quot;precisi&amp;oacute;n simple&quot; de 32 bits implementan la &lt;code&gt;float&lt;/code&gt; en el hardware, pero emulan el &lt;code&gt;double&lt;/code&gt; en el software. En una m&amp;aacute;quina de este tipo, realizar c&amp;aacute;lculos con valores &lt;code&gt;double&lt;/code&gt; es mucho m&amp;aacute;s caro debido a la sobrecarga necesaria para la emulaci&amp;oacute;n de software.</target>
        </trans-unit>
        <trans-unit id="133654b9660498348bca9e7a9d9666b1d3206bc1" translate="yes" xml:space="preserve">
          <source>Give a warning whenever a function is used before being declared. In C99 mode (</source>
          <target state="translated">Dar una advertencia cuando se utiliza una función antes de ser declarada.En el modo C99 (</target>
        </trans-unit>
        <trans-unit id="ce9ec4f1d36927037e489058adc0d7c699b3e5d0" translate="yes" xml:space="preserve">
          <source>Give an error whenever the &lt;em&gt;base standard&lt;/em&gt; (see</source>
          <target state="translated">Dar un error siempre que el &lt;em&gt;est&amp;aacute;ndar base&lt;/em&gt; (ver</target>
        </trans-unit>
        <trans-unit id="10288103238e1aab071f91b995853a568ee8af72" translate="yes" xml:space="preserve">
          <source>Given a set of input registers that die in an &lt;code&gt;asm&lt;/code&gt;, it is necessary to know which are implicitly popped by the &lt;code&gt;asm&lt;/code&gt;, and which must be explicitly popped by GCC.</source>
          <target state="translated">Dado un conjunto de registros de entrada que mueren en un &lt;code&gt;asm&lt;/code&gt; , es necesario saber cu&amp;aacute;les son desplegados impl&amp;iacute;citamente por el &lt;code&gt;asm&lt;/code&gt; y cu&amp;aacute;les deben ser desplegados expl&amp;iacute;citamente por GCC.</target>
        </trans-unit>
        <trans-unit id="d87967442824754978f26c181e17cc9e46db44dd" translate="yes" xml:space="preserve">
          <source>Gives all externally visible functions in the file being compiled an ARM instruction set header which switches to Thumb mode before executing the rest of the function. This allows these functions to be called from non-interworking code. This option is not valid in AAPCS configurations because interworking is enabled by default.</source>
          <target state="translated">Da a todas las funciones visibles externamente en el archivo que se está compilando un encabezado de conjunto de instrucciones ARM que cambia al modo Pulgarcito antes de ejecutar el resto de la función.Esto permite que estas funciones sean llamadas desde un código que no sea de interfase.Esta opción no es válida en las configuraciones de AAPCS porque el interfuncionamiento está habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="28fd2d80d56f82ae132cdb0c4269c770aa941c82" translate="yes" xml:space="preserve">
          <source>Global register variables cannot have initial values, because an executable file has no means to supply initial contents for a register.</source>
          <target state="translated">Las variables de registro global no pueden tener valores iniciales,porque un archivo ejecutable no tiene medios para suministrar el contenido inicial de un registro.</target>
        </trans-unit>
        <trans-unit id="e1edbfbe92e2bd9d3f1182eb37f4bcfb20acdde5" translate="yes" xml:space="preserve">
          <source>Go source code.</source>
          <target state="translated">Ve al código fuente.</target>
        </trans-unit>
        <trans-unit id="0104e918e01eb5413cf5e7e2b781b5b40dca1b8d" translate="yes" xml:space="preserve">
          <source>Guide linker to relax instructions.</source>
          <target state="translated">Guiar al enlazador a las instrucciones de relajación.</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="c2d31434fb0f344cb4feeec0b0e57232ab31c7ad" translate="yes" xml:space="preserve">
          <source>HI and LO registers.</source>
          <target state="translated">Registros de HI y LO.</target>
        </trans-unit>
        <trans-unit id="ae1313e0d197443a538cfdaa0498460e61bc9b40" translate="yes" xml:space="preserve">
          <source>HI register.</source>
          <target state="translated">Registro de HI.</target>
        </trans-unit>
        <trans-unit id="9ffcbdd38d89bcb3eaa62489fe7281d06ece8295" translate="yes" xml:space="preserve">
          <source>HIGH register class $r12 to $r14, $r20 to $r31.</source>
          <target state="translated">Clase de registro alto $r12 a $r14,$r20 a $r31.</target>
        </trans-unit>
        <trans-unit id="3cb15a163b8ebe83004d3a7496bed1214d5c34ea" translate="yes" xml:space="preserve">
          <source>HK</source>
          <target state="translated">HK</target>
        </trans-unit>
        <trans-unit id="f187928fdb223e7f3b7b0396e72e2d59a5f12b29" translate="yes" xml:space="preserve">
          <source>HR</source>
          <target state="translated">HR</target>
        </trans-unit>
        <trans-unit id="85df07a121977d0d0044781e9eeed44012e5da35" translate="yes" xml:space="preserve">
          <source>Half-Precision Floating Point.</source>
          <target state="translated">Punto flotante de media precisión.</target>
        </trans-unit>
        <trans-unit id="98b9b2da1252ae05155633eda47b6a7d5cf72927" translate="yes" xml:space="preserve">
          <source>Halt. The processor stops execution. This built-in is useful for implementing assertions.</source>
          <target state="translated">Alto.El procesador detiene la ejecución.Este incorporado es útil para implementar afirmaciones.</target>
        </trans-unit>
        <trans-unit id="04a52ed9fb0a2eefbc17a28c7b4e166c12cd47d4" translate="yes" xml:space="preserve">
          <source>Hardware autoprefetcher scheduler model control flag. Number of lookahead cycles the model looks into; at &amp;rsquo; &amp;rsquo; only enable instruction sorting heuristic.</source>
          <target state="translated">Indicador de control de modelo de programador de autoprefetcher de hardware. N&amp;uacute;mero de ciclos de anticipaci&amp;oacute;n que examina el modelo; at '' solo habilita la heur&amp;iacute;stica de clasificaci&amp;oacute;n de instrucciones.</target>
        </trans-unit>
        <trans-unit id="073339b2e7c4ff717e46d7be967106262132c9d4" translate="yes" xml:space="preserve">
          <source>Hardware multiplies are normally performed by calling a library routine. This saves space in the generated code. When compiling at</source>
          <target state="translated">Las multiplicaciones de hardware se realizan normalmente llamando a una rutina de la biblioteca.Esto ahorra espacio en el código generado.Cuando se compila en</target>
        </trans-unit>
        <trans-unit id="f483db45c59b64e904de79b67a44935e8bf546fe" translate="yes" xml:space="preserve">
          <source>Have &lt;code&gt;operator=&lt;/code&gt; return a reference to &lt;code&gt;*this&lt;/code&gt;.</source>
          <target state="translated">Haga que &lt;code&gt;operator=&lt;/code&gt; devuelva una referencia a &lt;code&gt;*this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="42b05fc1afa3da7a89484cda5a6cb36dbe6e8a78" translate="yes" xml:space="preserve">
          <source>Hence, it is assumed as a convention that &lt;code&gt;r*&lt;/code&gt; means &lt;code&gt;const
char *&lt;/code&gt; (since it is what is most often meant), and there is no way to encode &lt;code&gt;char *const&lt;/code&gt;. &lt;code&gt;char *const&lt;/code&gt; would simply be encoded as &lt;code&gt;*&lt;/code&gt;, and the &lt;code&gt;const&lt;/code&gt; is lost.</source>
          <target state="translated">Por lo tanto, se asume como una convenci&amp;oacute;n que &lt;code&gt;r*&lt;/code&gt; significa &lt;code&gt;const char *&lt;/code&gt; (ya que es lo que se quiere decir con mayor frecuencia), y no hay forma de codificar &lt;code&gt;char *const&lt;/code&gt; . &lt;code&gt;char *const&lt;/code&gt; simplemente se codificar&amp;iacute;a como &lt;code&gt;*&lt;/code&gt; , y la &lt;code&gt;const&lt;/code&gt; se perder&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="c6ff03b9e0183ccfd153d29e4ebb71b3afc43687" translate="yes" xml:space="preserve">
          <source>Here &amp;lsquo;</source>
          <target state="translated">Aqu&amp;iacute; '</target>
        </trans-unit>
        <trans-unit id="63fa474126b5fb0e84bc0e1276f71b4f5949c4a7" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;a&lt;/code&gt; may or may not be restored to its first value when the &lt;code&gt;longjmp&lt;/code&gt; occurs. If &lt;code&gt;a&lt;/code&gt; is allocated in a register, then its first value is restored; otherwise, it keeps the last value stored in it.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;a&lt;/code&gt; puede o no puede ser restaurado a su primer valor cuando ocurre el &lt;code&gt;longjmp&lt;/code&gt; . Si &lt;code&gt;a&lt;/code&gt; se asigna en un registro, entonces su primer valor se restablece; de lo contrario, mantiene el &amp;uacute;ltimo valor almacenado en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="6c22abcd7bcbe4b705f9506a92dff2b4514bc0a5" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;r12&lt;/code&gt; is the name of the register that should be used. Note that this is the same syntax used for defining global register variables, but for a local variable the declaration appears within a function. The &lt;code&gt;register&lt;/code&gt; keyword is required, and cannot be combined with &lt;code&gt;static&lt;/code&gt;. The register name must be a valid register name for the target platform.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;r12&lt;/code&gt; es el nombre del registro que debe utilizarse. Tenga en cuenta que esta es la misma sintaxis que se utiliza para definir variables de registro global, pero para una variable local, la declaraci&amp;oacute;n aparece dentro de una funci&amp;oacute;n. La palabra clave &lt;code&gt;register&lt;/code&gt; es obligatoria y no se puede combinar con &lt;code&gt;static&lt;/code&gt; . El nombre de registro debe ser un nombre de registro v&amp;aacute;lido para la plataforma de destino.</target>
        </trans-unit>
        <trans-unit id="e629674ac2ffa8c8e6f920770dda44cae02f866e" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;r12&lt;/code&gt; is the name of the register that should be used. Note that this is the same syntax used for defining local register variables, but for a global variable the declaration appears outside a function. The &lt;code&gt;register&lt;/code&gt; keyword is required, and cannot be combined with &lt;code&gt;static&lt;/code&gt;. The register name must be a valid register name for the target platform.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;r12&lt;/code&gt; es el nombre del registro que debe utilizarse. Tenga en cuenta que esta es la misma sintaxis que se usa para definir las variables de registro local, pero para una variable global, la declaraci&amp;oacute;n aparece fuera de una funci&amp;oacute;n. La palabra clave &lt;code&gt;register&lt;/code&gt; es obligatoria y no se puede combinar con &lt;code&gt;static&lt;/code&gt; . El nombre de registro debe ser un nombre de registro v&amp;aacute;lido para la plataforma de destino.</target>
        </trans-unit>
        <trans-unit id="1bd41698f09a234c8d3f5259448a5e29c338b76f" translate="yes" xml:space="preserve">
          <source>Here are constraint modifier characters.</source>
          <target state="translated">Aquí están los caracteres modificadores de restricciones.</target>
        </trans-unit>
        <trans-unit id="13c7c696c96d9253d198dc3e9c528b8ff4863b3b" translate="yes" xml:space="preserve">
          <source>Here are some examples showing uses of these options.</source>
          <target state="translated">Aquí hay algunos ejemplos que muestran los usos de estas opciones.</target>
        </trans-unit>
        <trans-unit id="a2f0dcf3cf944a4192020c4b10f40e42e5e117ae" translate="yes" xml:space="preserve">
          <source>Here are some more examples of output operands.</source>
          <target state="translated">Aquí hay algunos ejemplos más de operandos de salida.</target>
        </trans-unit>
        <trans-unit id="25efdeb982b817cc2032012465d473ceaf58d073" translate="yes" xml:space="preserve">
          <source>Here are some types and their encodings, as they are generated by the compiler on an i386 machine:</source>
          <target state="translated">Aquí hay algunos tipos y sus codificaciones,ya que son generados por el compilador en una máquina i386:</target>
        </trans-unit>
        <trans-unit id="807544d18135eba132f45e4832519a518a98b736" translate="yes" xml:space="preserve">
          <source>Here are specific details on what constraint letters you can use with &lt;code&gt;asm&lt;/code&gt; operands. Constraints can say whether an operand may be in a register, and which kinds of register; whether the operand can be a memory reference, and which kinds of address; whether the operand may be an immediate constant, and which possible values it may have. Constraints can also require two operands to match. Side-effects aren&amp;rsquo;t allowed in operands of inline &lt;code&gt;asm&lt;/code&gt;, unless &amp;lsquo;</source>
          <target state="translated">Aqu&amp;iacute; hay detalles espec&amp;iacute;ficos sobre qu&amp;eacute; letras de restricci&amp;oacute;n puede usar con operandos &lt;code&gt;asm&lt;/code&gt; . Las restricciones pueden decir si un operando puede estar en un registro y qu&amp;eacute; tipos de registro; si el operando puede ser una referencia de memoria y qu&amp;eacute; tipo de direcci&amp;oacute;n; si el operando puede ser una constante inmediata y qu&amp;eacute; valores posibles puede tener. Las restricciones tambi&amp;eacute;n pueden requerir que coincidan dos operandos. No se permiten efectos secundarios en operandos de &lt;code&gt;asm&lt;/code&gt; l&amp;iacute;nea , a menos que '</target>
        </trans-unit>
        <trans-unit id="8169e79c24e48ad827616f09316f377a5693db58" translate="yes" xml:space="preserve">
          <source>Here is a fictitious &lt;code&gt;*z++ = *x++ * *y++&lt;/code&gt; instruction. Notice that the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; pointer registers must be specified as input/output because the &lt;code&gt;asm&lt;/code&gt; modifies them.</source>
          <target state="translated">Aqu&amp;iacute; hay una instrucci&amp;oacute;n ficticia &lt;code&gt;*z++ = *x++ * *y++&lt;/code&gt; . Observe que los registros de puntero &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; deben especificarse como entrada / salida porque &lt;code&gt;asm&lt;/code&gt; los modifica.</target>
        </trans-unit>
        <trans-unit id="b840ee95bd53e4b94e99eb87178d11fd9afdba38" translate="yes" xml:space="preserve">
          <source>Here is a fictitious sum of squares instruction, that takes two pointers to floating point values in memory and produces a floating point register output. Notice that &lt;code&gt;x&lt;/code&gt;, and &lt;code&gt;y&lt;/code&gt; both appear twice in the &lt;code&gt;asm&lt;/code&gt; parameters, once to specify memory accessed, and once to specify a base register used by the &lt;code&gt;asm&lt;/code&gt;. You won&amp;rsquo;t normally be wasting a register by doing this as GCC can use the same register for both purposes. However, it would be foolish to use both &lt;code&gt;%1&lt;/code&gt; and &lt;code&gt;%3&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt; in this &lt;code&gt;asm&lt;/code&gt; and expect them to be the same. In fact, &lt;code&gt;%3&lt;/code&gt; may well not be a register. It might be a symbolic memory reference to the object pointed to by &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; hay una instrucci&amp;oacute;n de suma de cuadrados ficticia, que toma dos punteros a valores de coma flotante en la memoria y produce una salida de registro de coma flotante. Observe que tanto &lt;code&gt;x&lt;/code&gt; como &lt;code&gt;y&lt;/code&gt; aparecen dos veces en los par&amp;aacute;metros de &lt;code&gt;asm&lt;/code&gt; , una vez para especificar la memoria a la que se accede y una vez para especificar un registro base utilizado por &lt;code&gt;asm&lt;/code&gt; . Normalmente no desperdiciar&amp;aacute; un registro haciendo esto, ya que GCC puede usar el mismo registro para ambos prop&amp;oacute;sitos. Sin embargo, ser&amp;iacute;a absurdo utilizar ambas &lt;code&gt;%1&lt;/code&gt; y &lt;code&gt;%3&lt;/code&gt; para &lt;code&gt;x&lt;/code&gt; en este &lt;code&gt;asm&lt;/code&gt; y esperar que sean los mismos. De hecho, &lt;code&gt;%3&lt;/code&gt; bien puede no ser un registro. Podr&amp;iacute;a ser una referencia de memoria simb&amp;oacute;lica al objeto al que apunta &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="989c5915dce017df7249cda1058c0a0b75ec727b" translate="yes" xml:space="preserve">
          <source>Here is a fully worked-out example using a Foundation library (which provides the implementation of &lt;code&gt;NSArray&lt;/code&gt;, &lt;code&gt;NSString&lt;/code&gt; and &lt;code&gt;NSLog&lt;/code&gt;):</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo completamente elaborado usando una biblioteca Foundation (que proporciona la implementaci&amp;oacute;n de &lt;code&gt;NSArray&lt;/code&gt; , &lt;code&gt;NSString&lt;/code&gt; y &lt;code&gt;NSLog&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0837d871cde10d5f686c43af16d467ea239dcffc" translate="yes" xml:space="preserve">
          <source>Here is a list of each supported architecture and their supported implementations.</source>
          <target state="translated">Aquí hay una lista de cada arquitectura soportada y sus implementaciones soportadas.</target>
        </trans-unit>
        <trans-unit id="6bbe295750387ad466f92bad763fdcf85832b55b" translate="yes" xml:space="preserve">
          <source>Here is a list of options that are &lt;em&gt;only&lt;/em&gt; for compiling C++ programs:</source>
          <target state="translated">Aqu&amp;iacute; hay una lista de opciones que son &lt;em&gt;solo&lt;/em&gt; para compilar programas C ++:</target>
        </trans-unit>
        <trans-unit id="9c6de7709b9bd71702ea864b6b84c7a93a1c5dfe" translate="yes" xml:space="preserve">
          <source>Here is a list of options that are &lt;em&gt;only&lt;/em&gt; for compiling Objective-C and Objective-C++ programs:</source>
          <target state="translated">Aqu&amp;iacute; hay una lista de opciones que son &lt;em&gt;solo&lt;/em&gt; para compilar programas Objective-C y Objective-C ++:</target>
        </trans-unit>
        <trans-unit id="3d287577ba4a1613932b539025d50b64c148479a" translate="yes" xml:space="preserve">
          <source>Here is a more technical description with the gory details. Consider the code</source>
          <target state="translated">Aquí hay una descripción más técnica con los detalles sangrientos.Considere el código</target>
        </trans-unit>
        <trans-unit id="1f5c95b6edb6a49dd54cd8ace0a3af7f6b8efa6e" translate="yes" xml:space="preserve">
          <source>Here is a realistic example for the VAX showing the use of clobbered registers:</source>
          <target state="translated">Aquí hay un ejemplo realista para el VAX que muestra el uso de los registros de golpeo:</target>
        </trans-unit>
        <trans-unit id="fab100c4848d525a51e3c94ffe939c5c90d217c1" translate="yes" xml:space="preserve">
          <source>Here is a small example of a spec file:</source>
          <target state="translated">Aquí hay un pequeño ejemplo de un archivo de especificaciones:</target>
        </trans-unit>
        <trans-unit id="fd38f38bfeb097a932215690af5b2bcebdd18296" translate="yes" xml:space="preserve">
          <source>Here is a summary of all the options, grouped by type. Explanations are in the following sections.</source>
          <target state="translated">Aquí está un resumen de todas las opciones,agrupadas por tipo.Las explicaciones se encuentran en las siguientes secciones.</target>
        </trans-unit>
        <trans-unit id="776e1d0b1f7cf817731495ac8a0bb9e5528c2c48" translate="yes" xml:space="preserve">
          <source>Here is a table of all defined &amp;lsquo;</source>
          <target state="translated">Aqu&amp;iacute; hay una tabla de todos los definidos '</target>
        </trans-unit>
        <trans-unit id="72ec126b11c4f7e2b3f6db181072684dbe3a798e" translate="yes" xml:space="preserve">
          <source>Here is a truncated example from the ARM port of &lt;code&gt;gcc&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo truncado del puerto ARM de &lt;code&gt;gcc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="816eebea82d67ac72ae8e305241f89073b0b966e" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;code&gt;asm goto&lt;/code&gt; for i386:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de &lt;code&gt;asm goto&lt;/code&gt; para i386:</target>
        </trans-unit>
        <trans-unit id="ddf77123eb0a199270833915774797e456c51dd3" translate="yes" xml:space="preserve">
          <source>Here is an example of a PowerPC vector scale implemented in assembly, complete with vector and condition code clobbers, and some initialized offset registers that are unchanged by the &lt;code&gt;asm&lt;/code&gt;.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un ejemplo de una escala vectorial de PowerPC implementada en ensamblaje, completa con tapones de c&amp;oacute;digo de condici&amp;oacute;n y vector, y algunos registros de compensaci&amp;oacute;n inicializados que el &lt;code&gt;asm&lt;/code&gt; no modifica .</target>
        </trans-unit>
        <trans-unit id="874ef7a4fb34e57091c1bf1216dfbb76680c0a4d" translate="yes" xml:space="preserve">
          <source>Here is an example of basic &lt;code&gt;asm&lt;/code&gt; for i386:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de &lt;code&gt;asm&lt;/code&gt; b&amp;aacute;sico para i386:</target>
        </trans-unit>
        <trans-unit id="578c29000b6f8a220ff3bd98b1f6dac59cfc8f4c" translate="yes" xml:space="preserve">
          <source>Here is an example of constructing a &lt;code&gt;struct foo&lt;/code&gt; with a compound literal:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo de &lt;code&gt;struct foo&lt;/code&gt; construir una estructura foo con un literal compuesto:</target>
        </trans-unit>
        <trans-unit id="b487a854c417efabdfc0cd516c584d94dc1d4a11" translate="yes" xml:space="preserve">
          <source>Here is an example of how to use this feature. Suppose you want to implement a class whose instances hold a weak pointer reference; the following class does this:</source>
          <target state="translated">A continuación se muestra un ejemplo de cómo utilizar esta función.Supongamos que quieres implementar una clase cuyas instancias tienen una referencia de puntero débil;la siguiente clase lo hace:</target>
        </trans-unit>
        <trans-unit id="ab5b5e88b81c892525543bbf2b441bfb5667f5c0" translate="yes" xml:space="preserve">
          <source>Here is an example showing handling for &lt;code&gt;_XABORT_RETRY&lt;/code&gt; and a fallback path for other failures:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo que muestra el manejo de &lt;code&gt;_XABORT_RETRY&lt;/code&gt; y una ruta de respaldo para otras fallas:</target>
        </trans-unit>
        <trans-unit id="156d8468259daa1a9f530dd9ec7054117c896faf" translate="yes" xml:space="preserve">
          <source>Here is an example using symbolic names.</source>
          <target state="translated">Aquí hay un ejemplo usando nombres simbólicos.</target>
        </trans-unit>
        <trans-unit id="aa58661567f951b6e91b047e11c73d9fb7a1db05" translate="yes" xml:space="preserve">
          <source>Here is an example with a typename as the argument:</source>
          <target state="translated">Aquí hay un ejemplo con un nombre de pila como argumento:</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">Aquí hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="26a60c8be4c01c6ccc45bd8984830035c8dc1a26" translate="yes" xml:space="preserve">
          <source>Here the two output filenames</source>
          <target state="translated">Aquí los dos nombres de archivo de salida</target>
        </trans-unit>
        <trans-unit id="00b4a6c83965e727380186cb35a7faefe39e2601" translate="yes" xml:space="preserve">
          <source>Here the type described is that of pointers to &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; el tipo descrito es el de punteros a &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df28516bc4139f3f069071685fe09b0059baa73c" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;d&lt;/code&gt; may either be in a register or in memory. Since the compiler might already have the current value of the &lt;code&gt;uint32_t&lt;/code&gt; location pointed to by &lt;code&gt;e&lt;/code&gt; in a register, you can enable it to choose the best location for &lt;code&gt;d&lt;/code&gt; by specifying both constraints.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;d&lt;/code&gt; puede estar en un registro o en la memoria. Dado que es posible que el compilador ya tenga el valor actual de la ubicaci&amp;oacute;n &lt;code&gt;uint32_t&lt;/code&gt; se&amp;ntilde;alada por &lt;code&gt;e&lt;/code&gt; en un registro, puede habilitarlo para elegir la mejor ubicaci&amp;oacute;n para &lt;code&gt;d&lt;/code&gt; especificando ambas restricciones.</target>
        </trans-unit>
        <trans-unit id="d245b0ad9046b148b54dc212babce2d8a4b44886" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;t4&lt;/code&gt; takes up 4 bytes.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;t4&lt;/code&gt; ocupa 4 bytes.</target>
        </trans-unit>
        <trans-unit id="46a3f0b1a7f9b9f0c9d86a3230e304304bee1bda" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;t5&lt;/code&gt; takes up 2 bytes.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;t5&lt;/code&gt; ocupa 2 bytes.</target>
        </trans-unit>
        <trans-unit id="f9dddf42b68435ab0aa7d4d6b86db289bd3db824" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;std::move&lt;/code&gt; call is redundant. Because G++ implements Core Issue 1579, another example is:</source>
          <target state="translated">Aqu&amp;iacute;, la llamada &lt;code&gt;std::move&lt;/code&gt; es redundante. Como G ++ implementa Core Issue 1579, otro ejemplo es:</target>
        </trans-unit>
        <trans-unit id="94a1520d218a1c0edb195732392c054a4dc1a61d" translate="yes" xml:space="preserve">
          <source>Here, the function &lt;code&gt;intermediate&lt;/code&gt; receives the address of &lt;code&gt;store&lt;/code&gt; as an argument. If &lt;code&gt;intermediate&lt;/code&gt; calls &lt;code&gt;store&lt;/code&gt;, the arguments given to &lt;code&gt;store&lt;/code&gt; are used to store into &lt;code&gt;array&lt;/code&gt;. But this technique works only so long as the containing function (&lt;code&gt;hack&lt;/code&gt;, in this example) does not exit.</source>
          <target state="translated">Aqu&amp;iacute;, la funci&amp;oacute;n &lt;code&gt;intermediate&lt;/code&gt; recibe la direcci&amp;oacute;n de &lt;code&gt;store&lt;/code&gt; como argumento. Si &lt;code&gt;intermediate&lt;/code&gt; llamadas intermedias &lt;code&gt;store&lt;/code&gt; , los argumentos dados para &lt;code&gt;store&lt;/code&gt; se utilizan para almacenar en una &lt;code&gt;array&lt;/code&gt; . Pero esta t&amp;eacute;cnica solo funciona mientras la funci&amp;oacute;n contenedora ( &lt;code&gt;hack&lt;/code&gt; , en este ejemplo) no se cierre.</target>
        </trans-unit>
        <trans-unit id="8e86d7a0668faeeae59dff730b5c0908c7e965fa" translate="yes" xml:space="preserve">
          <source>Here, the names &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; appear in a context that does not depend on the type of &lt;code&gt;T&lt;/code&gt;. The compiler will thus require that they are defined in the context of use in the template, not only before the point of instantiation, and will here use &lt;code&gt;::foo(double)&lt;/code&gt; and &lt;code&gt;A::N&lt;/code&gt;, respectively. In particular, it will convert the integer value to a &lt;code&gt;double&lt;/code&gt; when passing it to &lt;code&gt;::foo(double)&lt;/code&gt;.</source>
          <target state="translated">En este caso, los nombres &lt;code&gt;foo&lt;/code&gt; y &lt;code&gt;N&lt;/code&gt; aparecen en un contexto que no depende del tipo de &lt;code&gt;T&lt;/code&gt; . Por lo tanto, el compilador requerir&amp;aacute; que se definan en el contexto de uso en la plantilla, no solo antes del punto de instanciaci&amp;oacute;n, y aqu&amp;iacute; usar&amp;aacute; &lt;code&gt;::foo(double)&lt;/code&gt; y &lt;code&gt;A::N&lt;/code&gt; , respectivamente. En particular, convertir&amp;aacute; el valor entero en un &lt;code&gt;double&lt;/code&gt; al pasarlo a &lt;code&gt;::foo(double)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a9da0e5c138e6d84a3e4a12f0c523bc1f369e0f" translate="yes" xml:space="preserve">
          <source>Hewlett-Packard PA-RISC&amp;mdash;</source>
          <target state="translated">Hewlett-Packard PA-RISC&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="9e735341d337ae137df7758e8465bb4d998cc55a" translate="yes" xml:space="preserve">
          <source>Hexadecimal floating-point constants.</source>
          <target state="translated">Constantes de punto flotante hexadecimal.</target>
        </trans-unit>
        <trans-unit id="26e165ccce457fee42636ec531aa349640cf4392" translate="yes" xml:space="preserve">
          <source>Hidden visibility indicates that the entity declared has a new form of linkage, which we call &amp;ldquo;hidden linkage&amp;rdquo;. Two declarations of an object with hidden linkage refer to the same object if they are in the same shared object.</source>
          <target state="translated">La visibilidad oculta indica que la entidad declarada tiene una nueva forma de vinculaci&amp;oacute;n, que llamamos &amp;ldquo;vinculaci&amp;oacute;n oculta&amp;rdquo;. Dos declaraciones de un objeto con enlace oculto se refieren al mismo objeto si est&amp;aacute;n en el mismo objeto compartido.</target>
        </trans-unit>
        <trans-unit id="29464505836db623029950c0312fcb03cbd85481" translate="yes" xml:space="preserve">
          <source>Historically, GCC has not deleted &amp;ldquo;empty&amp;rdquo; loops under the assumption that the most likely reason you would put one in a program is to have a delay, so deleting them will not make real programs run any faster.</source>
          <target state="translated">Hist&amp;oacute;ricamente, GCC no ha eliminado los bucles &quot;vac&amp;iacute;os&quot; bajo el supuesto de que la raz&amp;oacute;n m&amp;aacute;s probable por la que usted colocar&amp;iacute;a uno en un programa es para tener un retraso, por lo que eliminarlos no har&amp;aacute; que los programas reales se ejecuten m&amp;aacute;s r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="25855108b662a0e8c1ed703787f979b815d2d1a6" translate="yes" xml:space="preserve">
          <source>Historically, compilers for many languages, including C++ and Fortran, have been implemented as &amp;ldquo;preprocessors&amp;rdquo; which emit another high level language such as C. None of the compilers included in GCC are implemented this way; they all generate machine code directly. This sort of preprocessor should not be confused with the &lt;em&gt;C preprocessor&lt;/em&gt;, which is an integral feature of the C, C++, Objective-C and Objective-C++ languages.</source>
          <target state="translated">Hist&amp;oacute;ricamente, los compiladores para muchos lenguajes, incluidos C ++ y Fortran, se han implementado como &quot;preprocesadores&quot; que emiten otro lenguaje de alto nivel como C. Ninguno de los compiladores incluidos en GCC se implementa de esta manera; todos generan c&amp;oacute;digo de m&amp;aacute;quina directamente. Este tipo de preprocesador no debe confundirse con el &lt;em&gt;preprocesador de C&lt;/em&gt; , que es una caracter&amp;iacute;stica integral de los lenguajes C, C ++, Objective-C y Objective-C ++.</target>
        </trans-unit>
        <trans-unit id="1df0e52c96207e60432f242eee2da9b8ff549d2b" translate="yes" xml:space="preserve">
          <source>How GCC calculates the size of an &lt;code&gt;asm&lt;/code&gt; block.</source>
          <target state="translated">C&amp;oacute;mo GCC calcula el tama&amp;ntilde;o de un &lt;code&gt;asm&lt;/code&gt; bloque.</target>
        </trans-unit>
        <trans-unit id="3f9040ed129a83c15932559ac6449ffd679075c3" translate="yes" xml:space="preserve">
          <source>How GCC implements the ISO C specification.</source>
          <target state="translated">Cómo el GCC implementa la especificación ISO C.</target>
        </trans-unit>
        <trans-unit id="f79f60bc97ae69f938083d6bd71809804c4831c5" translate="yes" xml:space="preserve">
          <source>How GCC implements the ISO C++ specification.</source>
          <target state="translated">Cómo el GCC implementa la especificación ISO C++.</target>
        </trans-unit>
        <trans-unit id="62fab6a3b6832fb352405ce63e5b735618b3cef7" translate="yes" xml:space="preserve">
          <source>How To Get Help with GCC</source>
          <target state="translated">Cómo obtener ayuda con GCC</target>
        </trans-unit>
        <trans-unit id="3e63c682de797883ae23802bc327411231cc31a8" translate="yes" xml:space="preserve">
          <source>How a diagnostic is identified (C90 3.7, C99 and C11 3.10, C90, C99 and C11 5.1.1.3).</source>
          <target state="translated">Cómo se identifica un diagnóstico (C90 3.7,C99 y C11 3.10,C90,C99 y C11 5.1.1.3).</target>
        </trans-unit>
        <trans-unit id="a123b2bec235da6dad3dc58f234c2574673ff822" translate="yes" xml:space="preserve">
          <source>How much optimization?</source>
          <target state="translated">¿Cuánta optimización?</target>
        </trans-unit>
        <trans-unit id="31524a9fb30368b64541b8aeb51e1826b2eb3b0a" translate="yes" xml:space="preserve">
          <source>How picky should the compiler be?</source>
          <target state="translated">¿Qué tan exigente debe ser el compilador?</target>
        </trans-unit>
        <trans-unit id="1e2b472e6c532fe8af4932714956f74293f46083" translate="yes" xml:space="preserve">
          <source>How sequences in both forms of header names are mapped to headers or external source file names (C90 6.1.7, C99 and C11 6.4.7).</source>
          <target state="translated">Cómo se asignan las secuencias en ambas formas de nombres de encabezamiento a los encabezamientos o nombres de archivos de fuentes externas (C90 6.1.7,C99 y C11 6.4.7).</target>
        </trans-unit>
        <trans-unit id="848f6ad2348dcee59d13596577066e141ef4d0ad" translate="yes" xml:space="preserve">
          <source>How the named source file is searched for in an included &amp;lsquo;</source>
          <target state="translated">C&amp;oacute;mo se busca el archivo de origen con nombre en un archivo 'incluido</target>
        </trans-unit>
        <trans-unit id="130378b21f742b32140465d74f388cb06f5001cf" translate="yes" xml:space="preserve">
          <source>How the nearest representable value or the larger or smaller representable value immediately adjacent to the nearest representable value is chosen for certain floating constants (C90 6.1.3.1, C99 and C11 6.4.4.2).</source>
          <target state="translated">Cómo se elige el valor representable más cercano o el valor representable más grande o más pequeño inmediatamente adyacente al valor representable más cercano para ciertas constantes flotantes (C90 6.1.3.1,C99 y C11 6.4.4.2).</target>
        </trans-unit>
        <trans-unit id="606b9fa050c9f5a8165f3052560ba0c7d8b85fa0" translate="yes" xml:space="preserve">
          <source>How to contribute to testing and developing GCC.</source>
          <target state="translated">Cómo contribuir a probar y desarrollar el CCG.</target>
        </trans-unit>
        <trans-unit id="25170558e581aabef161dcb92e9a6de67ff5f448" translate="yes" xml:space="preserve">
          <source>How to help assure funding for free software.</source>
          <target state="translated">Cómo ayudar a asegurar la financiación del software libre.</target>
        </trans-unit>
        <trans-unit id="488dee81569b2dc10244c6b537b50c3cc87269e1" translate="yes" xml:space="preserve">
          <source>How to pass switches to sub-processes.</source>
          <target state="translated">Cómo pasar los interruptores a los subprocesos.</target>
        </trans-unit>
        <trans-unit id="8c1e8efdd3392d7ad8138bb7223322e34b90c240" translate="yes" xml:space="preserve">
          <source>How to use gcov-dump.</source>
          <target state="translated">Cómo usar gcov-dump.</target>
        </trans-unit>
        <trans-unit id="f7d8be53e9f165a3a11bb6dadca7af891ced365f" translate="yes" xml:space="preserve">
          <source>How to use gcov-tool.</source>
          <target state="translated">Cómo usar la herramienta gcov.</target>
        </trans-unit>
        <trans-unit id="dde16118c9faa27675fdfe5cf0405564b55597c4" translate="yes" xml:space="preserve">
          <source>How to use gcov.</source>
          <target state="translated">Cómo usar el gcov.</target>
        </trans-unit>
        <trans-unit id="4e461b3cc6748ec681eab8b558da86d4b08a95ab" translate="yes" xml:space="preserve">
          <source>How you can copy and share this manual.</source>
          <target state="translated">Cómo puede copiar y compartir este manual.</target>
        </trans-unit>
        <trans-unit id="9e8e4dbcb1b211f7b5ab31c6c59b3a79ec59dd4f" translate="yes" xml:space="preserve">
          <source>How, why and where to report bugs.</source>
          <target state="translated">Cómo,por qué y dónde informar de los errores.</target>
        </trans-unit>
        <trans-unit id="0e3275b465f023e98f74ae720920ad438e50264c" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;(union foo) FLT_MAX;&lt;/code&gt; is not a valid cast because the union has no member of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">Sin embargo, &lt;code&gt;(union foo) FLT_MAX;&lt;/code&gt; no es una conversi&amp;oacute;n v&amp;aacute;lida porque la uni&amp;oacute;n no tiene ning&amp;uacute;n miembro de tipo &lt;code&gt;float&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ea71fd7ca0b24f50560578a479dbd93975ddc25" translate="yes" xml:space="preserve">
          <source>However, if a library or main executable is supposed to throw or catch exceptions, you must link it using the G++ driver, or using the option</source>
          <target state="translated">Sin embargo,si una biblioteca o un ejecutable principal se supone que debe lanzar o capturar excepciones,debe enlazarlo usando el controlador G++,o usando la opción</target>
        </trans-unit>
        <trans-unit id="68ad5ea0590b2a354fce31707da021a7a4908783" translate="yes" xml:space="preserve">
          <source>However, if the volatile storage is not being modified, and the value of the volatile storage is not used, then the situation is less obvious. For example</source>
          <target state="translated">Sin embargo,si no se modifica el almacenamiento volátil y no se utiliza el valor del mismo,la situación es menos evidente.Por ejemplo</target>
        </trans-unit>
        <trans-unit id="3955f23a3aaffbcd48d8f54a3969fb80a9687bcd" translate="yes" xml:space="preserve">
          <source>However, the rationale here is that optimization of a nonempty loop cannot produce an empty one. This held for carefully written C compiled with less powerful optimizers but is not always the case for carefully written C++ or with more powerful optimizers. Thus GCC will remove operations from loops whenever it can determine those operations are not externally visible (apart from the time taken to execute them, of course). In case the loop can be proved to be finite, GCC will also remove the loop itself.</source>
          <target state="translated">Sin embargo,el razonamiento aquí es que la optimización de un bucle no vacío no puede producir uno vacío.Esto se sostiene para C cuidadosamente escrito compilado con optimizadores menos poderosos pero no siempre es el caso para C++cuidadosamente escrito o con optimizadores más poderosos.Por lo tanto,GCC eliminará las operaciones de los bucles siempre que pueda determinar que esas operaciones no son visibles externamente (aparte del tiempo necesario para ejecutarlas,por supuesto).En caso de que se pueda demostrar que el bucle es finito,GCC también eliminará el propio bucle.</target>
        </trans-unit>
        <trans-unit id="9091ae1dd68a17c85dd2a3885c0a623d65f81f37" translate="yes" xml:space="preserve">
          <source>However, the use of &lt;code&gt;gcc&lt;/code&gt; does not add the C++ library. &lt;code&gt;g++&lt;/code&gt; is a program that calls GCC and automatically specifies linking against the C++ library. It treats &amp;lsquo;</source>
          <target state="translated">Sin embargo, el uso de &lt;code&gt;gcc&lt;/code&gt; no agrega la biblioteca C ++. &lt;code&gt;g++&lt;/code&gt; es un programa que llama a GCC y especifica autom&amp;aacute;ticamente la vinculaci&amp;oacute;n con la biblioteca C ++. Trata '</target>
        </trans-unit>
        <trans-unit id="25970c1ebc6bb12a4ef702c744afb1bf31667e71" translate="yes" xml:space="preserve">
          <source>However, these built-in functions may interact badly with some sophisticated features or other extensions of the language. It is, therefore, not recommended to use them outside very simple functions acting as mere forwarders for their arguments.</source>
          <target state="translated">Sin embargo,estas funciones incorporadas pueden interactuar mal con algunas características sofisticadas u otras extensiones del lenguaje.Por lo tanto,no es recomendable utilizarlas fuera de funciones muy simples que actúen como meros transcriptores de sus argumentos.</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="5035ba1d98ecd402c64867de896608b2100e61c1" translate="yes" xml:space="preserve">
          <source>I register</source>
          <target state="translated">Me registro</target>
        </trans-unit>
        <trans-unit id="0d25569c1c1c38b68b7adac7a2691f92a581fc48" translate="yes" xml:space="preserve">
          <source>IBM 970 Server CPU (ie, Apple G5).</source>
          <target state="translated">IBM 970 Server CPU (es decir,Apple G5).</target>
        </trans-unit>
        <trans-unit id="7ff989fdaf3c65fbe049204ca8d2d3b298dcd55a" translate="yes" xml:space="preserve">
          <source>IBM A2 64-bit Embedded CPU</source>
          <target state="translated">IBM A2 64-bit Embedded CPU</target>
        </trans-unit>
        <trans-unit id="7ebf129d97228e5e38b88ee3a2bf7cb0f28dd1fe" translate="yes" xml:space="preserve">
          <source>IBM POWER4 Server CPU.</source>
          <target state="translated">CPU del servidor IBM POWER4.</target>
        </trans-unit>
        <trans-unit id="60fedee6d379816b90140e69a6cb94f8d8a8d0f3" translate="yes" xml:space="preserve">
          <source>IBM POWER5 Server CPU.</source>
          <target state="translated">CPU de servidor IBM POWER5.</target>
        </trans-unit>
        <trans-unit id="d3878c6f9c9f4047fa51bbea5fff4ce5c35e5af1" translate="yes" xml:space="preserve">
          <source>IBM POWER5+ Server CPU.</source>
          <target state="translated">CPU de servidor IBM POWER5+.</target>
        </trans-unit>
        <trans-unit id="738e9fd792342dee79476051b27ac20d78ee9cda" translate="yes" xml:space="preserve">
          <source>IBM POWER6 Server CPU (Architected mode).</source>
          <target state="translated">CPU de servidor IBM POWER6 (modo arquitectónico).</target>
        </trans-unit>
        <trans-unit id="a1d93b9cb2926fb05ec1f665abf51961f777a207" translate="yes" xml:space="preserve">
          <source>IBM POWER6 Server CPU (RAW mode).</source>
          <target state="translated">CPU de servidor IBM POWER6 (modo RAW).</target>
        </trans-unit>
        <trans-unit id="dbb9a20762f1a0c1106412992e6cc65c84bffc0f" translate="yes" xml:space="preserve">
          <source>IBM POWER7 Server CPU.</source>
          <target state="translated">CPU del servidor IBM POWER7.</target>
        </trans-unit>
        <trans-unit id="a9a9c9a90077a9f8cbd67dc15b93836e1c987d49" translate="yes" xml:space="preserve">
          <source>IBM POWER8 Server CPU.</source>
          <target state="translated">CPU de servidor IBM POWER8.</target>
        </trans-unit>
        <trans-unit id="c65507ef531be00847ba2a33296dc99803a18664" translate="yes" xml:space="preserve">
          <source>IBM POWER9 Server CPU.</source>
          <target state="translated">CPU del servidor IBM POWER9.</target>
        </trans-unit>
        <trans-unit id="5ad8015703e3cb16c9df6da3a8d9e97de8f9cd44" translate="yes" xml:space="preserve">
          <source>IBM PowerPC 464 32-bit Embedded CPU.</source>
          <target state="translated">IBM PowerPC 464 32-bit Embedded CPU.</target>
        </trans-unit>
        <trans-unit id="a548cb73c6f0d35ac7d906f9a02a9350c2eb6114" translate="yes" xml:space="preserve">
          <source>IBM PowerPC 476FP 32-bit Embedded CPU.</source>
          <target state="translated">IBM PowerPC 476FP 32-bit Embedded CPU.</target>
        </trans-unit>
        <trans-unit id="f3afdcbb4bda95413d989775a1a1f73e05c37f36" translate="yes" xml:space="preserve">
          <source>IBM PowerPC Cell Broadband Engine Architecture CPU.</source>
          <target state="translated">IBM PowerPC Cell Broadband Engine Architecture CPU.</target>
        </trans-unit>
        <trans-unit id="981e760991adb048080be646b9e1438966c192d0" translate="yes" xml:space="preserve">
          <source>IDT WinChip 2 CPU, dealt in same way as i486 with additional MMX and 3DNow! instruction set support.</source>
          <target state="translated">CPU IDT WinChip 2,tratada de la misma manera que la i486 con soporte adicional para el conjunto de instrucciones MMX y 3DNow!</target>
        </trans-unit>
        <trans-unit id="e642e2d5acc8e35a06fd449f3d95c2b4f1486f5e" translate="yes" xml:space="preserve">
          <source>IDT WinChip C6 CPU, dealt in same way as i486 with additional MMX instruction set support.</source>
          <target state="translated">La CPU WinChip C6 de IDT,tratada de la misma manera que la i486 con soporte adicional para el conjunto de instrucciones MMX.</target>
        </trans-unit>
        <trans-unit id="ec8566180afc9d36e3493dbd47d7e2d1e9ae9485" translate="yes" xml:space="preserve">
          <source>IPA-CP attempts to track all possible values and types passed to a function&amp;rsquo;s parameter in order to propagate them and perform devirtualization.</source>
          <target state="translated">IPA-CP intenta rastrear todos los valores y tipos posibles pasados ​​al par&amp;aacute;metro de una funci&amp;oacute;n para propagarlos y realizar la desvirtualizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f55eb535889fe2d3f53ef9f4b4a57453862d05ea" translate="yes" xml:space="preserve">
          <source>IPA-CP calculates its own score of cloning profitability heuristics and performs those cloning opportunities with scores that exceed</source>
          <target state="translated">IPA-CP calcula su propia puntuación de la heurística de rentabilidad de la clonación y realiza esas oportunidades de clonación con puntuaciones que superan</target>
        </trans-unit>
        <trans-unit id="18432c18c0adba44c26c2a586731fb98a9d6d897" translate="yes" xml:space="preserve">
          <source>IPA-CP is also capable to propagate a number of scalar values passed in an aggregate.</source>
          <target state="translated">La IPA-CP también es capaz de propagar una serie de valores escalares pasados en un agregado.</target>
        </trans-unit>
        <trans-unit id="6522b0ebe1c355ebd160511e9d28107d63eb735d" translate="yes" xml:space="preserve">
          <source>IPA-SRA replaces a pointer to an aggregate with one or more new parameters only when their cumulative size is less or equal to</source>
          <target state="translated">La IPA-SRA sustituye un puntero a un agregado con uno o más parámetros nuevos sólo cuando su tamaño acumulado es menor o igual a</target>
        </trans-unit>
        <trans-unit id="b5db770cbd54ca7a4734eeb3ccbfba61d7f93149" translate="yes" xml:space="preserve">
          <source>IRA can be used to evaluate more accurate register pressure in loops for decisions to move loop invariants (see</source>
          <target state="translated">El IRA puede utilizarse para evaluar una presión de registro más precisa en los bucles para las decisiones de mover invariantes de bucle (véase</target>
        </trans-unit>
        <trans-unit id="3c1b099cab9d31b532499457a148771feb1ef850" translate="yes" xml:space="preserve">
          <source>IRA uses regional register allocation by default. If a function contains more loops than the number given by this parameter, only at most the given number of the most frequently-executed loops form regions for regional register allocation.</source>
          <target state="translated">La CRI utiliza la asignación de registros regionales por defecto.Si una función contiene más bucles que el número dado por este parámetro,sólo como máximo el número dado de los bucles más frecuentemente ejecutados forman regiones para la asignación de registros regionales.</target>
        </trans-unit>
        <trans-unit id="e1a35fb9a6e6329c3bd0cf9dd057013f4b706fa3" translate="yes" xml:space="preserve">
          <source>ISA 3.0 of the PowerPC added new atomic memory operation (amo) instructions. GCC provides support for these instructions in 64-bit environments. All of the functions are declared in the include file &lt;code&gt;amo.h&lt;/code&gt;.</source>
          <target state="translated">ISA 3.0 de PowerPC agreg&amp;oacute; nuevas instrucciones de operaci&amp;oacute;n de memoria at&amp;oacute;mica (amo). GCC proporciona soporte para estas instrucciones en entornos de 64 bits. Todas las funciones se declaran en el archivo de inclusi&amp;oacute;n &lt;code&gt;amo.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cc00c6a2a5486718b4fd3642b097add2ed40af8" translate="yes" xml:space="preserve">
          <source>ISO C does not permit such a construct.</source>
          <target state="translated">El ISO C no permite tal construcción.</target>
        </trans-unit>
        <trans-unit id="fff460d30b4f47f8adc19f1a9e29c9166acd036b" translate="yes" xml:space="preserve">
          <source>ISO C requires a &amp;ldquo;diagnostic&amp;rdquo; message for certain kinds of invalid programs, but a warning is defined by GCC to count as a diagnostic. If GCC produces a warning but not an error, that is correct ISO C support. If testsuites call this &amp;ldquo;failure&amp;rdquo;, they should be run with the GCC option</source>
          <target state="translated">ISO C requiere un mensaje de &amp;ldquo;diagn&amp;oacute;stico&amp;rdquo; para ciertos tipos de programas no v&amp;aacute;lidos, pero GCC define una advertencia para que cuente como diagn&amp;oacute;stico. Si GCC produce una advertencia pero no un error, eso es el soporte correcto de ISO C. Si las suites de prueba llaman a esto &quot;falla&quot;, deben ejecutarse con la opci&amp;oacute;n GCC</target>
        </trans-unit>
        <trans-unit id="50648f88649c1f5dd7bf2cb4554ff39825b6b2bb" translate="yes" xml:space="preserve">
          <source>ISO C11, the 2011 revision of the ISO C standard. This standard is substantially completely supported, modulo bugs, floating-point issues (mainly but not entirely relating to optional C11 features from Annexes F and G) and the optional Annexes K (Bounds-checking interfaces) and L (Analyzability). The name &amp;lsquo;</source>
          <target state="translated">ISO C11, la revisi&amp;oacute;n de 2011 de la norma ISO C. Este est&amp;aacute;ndar tiene un soporte sustancialmente completo, errores de m&amp;oacute;dulo, problemas de punto flotante (principalmente, pero no completamente relacionados con las caracter&amp;iacute;sticas opcionales C11 de los Anexos F y G) y los Anexos K (interfaces de verificaci&amp;oacute;n de l&amp;iacute;mites) y L (Analizabilidad) opcionales. El nombre '</target>
        </trans-unit>
        <trans-unit id="a94be837facd76378c47084c4afa22ac2ddb78d6" translate="yes" xml:space="preserve">
          <source>ISO C17, the 2017 revision of the ISO C standard (published in 2018). This standard is same as C11 except for corrections of defects (all of which are also applied with</source>
          <target state="translated">ISO C17,la revisión de 2017 de la norma ISO C (publicada en 2018).Esta norma es la misma que la C11,excepto en lo que respecta a las correcciones de defectos (todas las cuales se aplican también con</target>
        </trans-unit>
        <trans-unit id="835b0fe47c2b2521e64ab3b466f790da05e1cf2c" translate="yes" xml:space="preserve">
          <source>ISO C90 as modified in amendment 1.</source>
          <target state="translated">ISO C90,modificada en la enmienda 1.</target>
        </trans-unit>
        <trans-unit id="dd3ae16769f5e30cd0e25b181c241be07701badf" translate="yes" xml:space="preserve">
          <source>ISO C99 and ISO C++ allow declarations and code to be freely mixed within compound statements. As an extension, GNU C also allows this in C90 mode. For example, you could do:</source>
          <target state="translated">ISO C99 e ISO C++permiten que las declaraciones y el código se mezclen libremente dentro de las declaraciones compuestas.Como extensión,GNU C también permite esto en el modo C90.Por ejemplo,podría hacer:</target>
        </trans-unit>
        <trans-unit id="fd9df382c7a9e275bf54293954eb3cea3a9394da" translate="yes" xml:space="preserve">
          <source>ISO C99 and ISO C++11 support data types for integers that are at least 64 bits wide, and as an extension GCC supports them in C90 and C++98 modes. Simply write &lt;code&gt;long long int&lt;/code&gt; for a signed integer, or &lt;code&gt;unsigned long long int&lt;/code&gt; for an unsigned integer. To make an integer constant of type &lt;code&gt;long long int&lt;/code&gt;, add the suffix &amp;lsquo;</source>
          <target state="translated">ISO C99 e ISO C ++ 11 admiten tipos de datos para enteros que tienen al menos 64 bits de ancho y, como extensi&amp;oacute;n, GCC los admite en los modos C90 y C ++ 98. Simplemente escriba &lt;code&gt;long long int&lt;/code&gt; para un entero con signo, o &lt;code&gt;unsigned long long int&lt;/code&gt; para un entero sin signo. Para hacer una constante entera de tipo &lt;code&gt;long long int&lt;/code&gt; , agregue el sufijo '</target>
        </trans-unit>
        <trans-unit id="8b83453de486a892e712e76d4673bb12ab84c153" translate="yes" xml:space="preserve">
          <source>ISO C99 and ISO C++17 support floating-point numbers written not only in the usual decimal notation, such as &lt;code&gt;1.55e1&lt;/code&gt;, but also numbers such as &lt;code&gt;0x1.fp3&lt;/code&gt; written in hexadecimal format. As a GNU extension, GCC supports this in C90 mode (except in some cases when strictly conforming) and in C++98, C++11 and C++14 modes. In that format the &amp;lsquo;</source>
          <target state="translated">ISO C99 e ISO C ++ 17 admiten n&amp;uacute;meros de punto flotante escritos no solo en la notaci&amp;oacute;n decimal habitual, como &lt;code&gt;1.55e1&lt;/code&gt; , sino tambi&amp;eacute;n n&amp;uacute;meros como &lt;code&gt;0x1.fp3&lt;/code&gt; escritos en formato hexadecimal. Como extensi&amp;oacute;n GNU, GCC admite esto en el modo C90 (excepto en algunos casos cuando es estrictamente conforme) y en los modos C ++ 98, C ++ 11 y C ++ 14. En ese formato el '</target>
        </trans-unit>
        <trans-unit id="f45bb32dfebc99db4671808e81b5e06e1a3ae3f3" translate="yes" xml:space="preserve">
          <source>ISO C99 supports complex floating data types, and as an extension GCC supports them in C90 mode and in C++. GCC also supports complex integer data types which are not part of ISO C99. You can declare complex types using the keyword &lt;code&gt;_Complex&lt;/code&gt;. As an extension, the older GNU keyword &lt;code&gt;__complex__&lt;/code&gt; is also supported.</source>
          <target state="translated">ISO C99 admite tipos de datos flotantes complejos y, como extensi&amp;oacute;n, GCC los admite en modo C90 y en C ++. GCC tambi&amp;eacute;n admite tipos de datos enteros complejos que no forman parte de ISO C99. Puede declarar tipos complejos utilizando la palabra clave &lt;code&gt;_Complex&lt;/code&gt; . Como extensi&amp;oacute;n, tambi&amp;eacute;n se admite la antigua palabra clave GNU &lt;code&gt;__complex__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84c793c819960394587c5cc12a67f14b20b38119" translate="yes" xml:space="preserve">
          <source>ISO C99. This standard is substantially completely supported, modulo bugs and floating-point issues (mainly but not entirely relating to optional C99 features from Annexes F and G). See &lt;a href=&quot;http://gcc.gnu.org/c99status.html&quot;&gt;http://gcc.gnu.org/c99status.html&lt;/a&gt; for more information. The names &amp;lsquo;</source>
          <target state="translated">ISO C99. Este est&amp;aacute;ndar tiene un soporte sustancialmente completo, errores de m&amp;oacute;dulo y problemas de punto flotante (principalmente, pero no completamente relacionados con las caracter&amp;iacute;sticas opcionales de C99 de los Anexos F y G). Consulte &lt;a href=&quot;http://gcc.gnu.org/c99status.html&quot;&gt;http://gcc.gnu.org/c99status.html&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n. Los nombres '</target>
        </trans-unit>
        <trans-unit id="b19dfb0d72b128922f94144b3b4ef7616d4f13d5" translate="yes" xml:space="preserve">
          <source>ISO/IEC TS 18661-3 defines new permissible values for &lt;code&gt;FLT_EVAL_METHOD&lt;/code&gt; that indicate that operations and constants with a semantic type that is an interchange or extended format should be evaluated to the precision and range of that type. These new values are a superset of those permitted under C99/C11, which does not specify the meaning of other positive values of &lt;code&gt;FLT_EVAL_METHOD&lt;/code&gt;. As such, code conforming to C11 may not have been written expecting the possibility of the new values.</source>
          <target state="translated">ISO / IEC TS 18661-3 define nuevos valores permitidos para &lt;code&gt;FLT_EVAL_METHOD&lt;/code&gt; que indican que las operaciones y constantes con un tipo sem&amp;aacute;ntico que es un intercambio o formato extendido deben evaluarse con la precisi&amp;oacute;n y rango de ese tipo. Estos nuevos valores son un superconjunto de los permitidos bajo C99 / C11, que no especifica el significado de otros valores positivos de &lt;code&gt;FLT_EVAL_METHOD&lt;/code&gt; . Como tal, es posible que el c&amp;oacute;digo conforme a C11 no se haya escrito esperando la posibilidad de los nuevos valores.</target>
        </trans-unit>
        <trans-unit id="0704127df0a170eee2b3d8c1f35e3e35e1e33e3c" translate="yes" xml:space="preserve">
          <source>ISO/IEC TS 18661-3:2015 defines C support for additional floating types &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt;, and GCC supports these type names; the set of types supported depends on the target architecture. These types are not supported when compiling C++. Constants with these types use suffixes &lt;code&gt;f&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;F&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;f&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; or &lt;code&gt;F&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt;. These type names can be used together with &lt;code&gt;_Complex&lt;/code&gt; to declare complex types.</source>
          <target state="translated">ISO / IEC TS 18661-3: 2015 define apoyo C para los tipos flotantes adicionales &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; y &lt;code&gt;_Float&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; , y GCC apoya estos nombres de tipo; el conjunto de tipos admitidos depende de la arquitectura de destino. Estos tipos no se admiten al compilar C ++. Las constantes con estos tipos usan sufijos &lt;code&gt;f&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; o &lt;code&gt;F&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; y &lt;code&gt;f&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; o &lt;code&gt;F&lt;var&gt;n&lt;/var&gt;x&lt;/code&gt; . Estos nombres de tipo se pueden usar junto con &lt;code&gt;_Complex&lt;/code&gt; para declarar tipos complejos.</target>
        </trans-unit>
        <trans-unit id="beeb64c7eeaed20d36a340ce018bf60cf4a13bf4" translate="yes" xml:space="preserve">
          <source>Ideally, a portable program should always use &lt;code&gt;signed char&lt;/code&gt; or &lt;code&gt;unsigned char&lt;/code&gt; when it depends on the signedness of an object. But many programs have been written to use plain &lt;code&gt;char&lt;/code&gt; and expect it to be signed, or expect it to be unsigned, depending on the machines they were written for. This option, and its inverse, let you make such a program work with the opposite default.</source>
          <target state="translated">Idealmente, un programa port&amp;aacute;til deber&amp;iacute;a usar siempre un &lt;code&gt;signed char&lt;/code&gt; o un &lt;code&gt;unsigned char&lt;/code&gt; cuando depende de la firma de un objeto. Sin embargo, muchos programas se han escrito para usar llanura &lt;code&gt;char&lt;/code&gt; y esperar que sea firmado, o esperar que sea firmado, en funci&amp;oacute;n de las m&amp;aacute;quinas que fueron escritos para. Esta opci&amp;oacute;n, y su inversa, le permiten hacer que dicho programa funcione con el valor predeterminado opuesto.</target>
        </trans-unit>
        <trans-unit id="ab2f71fc75bf24fc42ea67b7b9de3bc2377f68da" translate="yes" xml:space="preserve">
          <source>Identical like the above one, but the location of the function in the &lt;code&gt;jli&lt;/code&gt; table is known and given as an attribute parameter.</source>
          <target state="translated">Id&amp;eacute;ntico al anterior, pero la ubicaci&amp;oacute;n de la funci&amp;oacute;n en la tabla &lt;code&gt;jli&lt;/code&gt; se conoce y se proporciona como un par&amp;aacute;metro de atributo.</target>
        </trans-unit>
        <trans-unit id="06758e7fffb077a661e9d5cfb54c15702892df80" translate="yes" xml:space="preserve">
          <source>Identifier conflicts with labels. Traditional C lacks a separate namespace for labels.</source>
          <target state="translated">El identificador entra en conflicto con las etiquetas.La C tradicional carece de un espacio de nombre separado para las etiquetas.</target>
        </trans-unit>
        <trans-unit id="5a6386123e656c29d067b76006564d3382accf62" translate="yes" xml:space="preserve">
          <source>Identify the versions of each tool used by the compiler, in a &lt;code&gt;.ident&lt;/code&gt; assembler directive in the output.</source>
          <target state="translated">Identifique las versiones de cada herramienta que utiliza el compilador, en una directiva de ensamblador &lt;code&gt;.ident&lt;/code&gt; en la salida.</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="b94b85388613ff812132cfe4fbfdcb534fff787e" translate="yes" xml:space="preserve">
          <source>If &amp;lsquo;</source>
          <target state="translated">Si '</target>
        </trans-unit>
        <trans-unit id="8cfab80fece1ea34402901dd4726bddf817b9cff" translate="yes" xml:space="preserve">
          <source>If 3DNow! extensions are enabled, &lt;code&gt;V2SF&lt;/code&gt; is used as a mode for a vector of two 32-bit floating-point values.</source>
          <target state="translated">Si 3DNow! las extensiones est&amp;aacute;n habilitadas, &lt;code&gt;V2SF&lt;/code&gt; se utiliza como modo para un vector de dos valores de coma flotante de 32 bits.</target>
        </trans-unit>
        <trans-unit id="23030af34d65c4d0b445c2e6bf477bf6b1f5c071" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;%*&lt;/code&gt; appears as the last part of a spec sequence then a space is added after the end of the last substitution. If there is more text in the sequence, however, then a space is not generated. This allows the &lt;code&gt;%*&lt;/code&gt; substitution to be used as part of a larger string. For example, a spec string like this:</source>
          <target state="translated">Si &lt;code&gt;%*&lt;/code&gt; aparece como la &amp;uacute;ltima parte de una secuencia de especificaciones, se agrega un espacio despu&amp;eacute;s del final de la &amp;uacute;ltima sustituci&amp;oacute;n. Sin embargo, si hay m&amp;aacute;s texto en la secuencia, no se genera un espacio. Esto permite que la sustituci&amp;oacute;n &lt;code&gt;%*&lt;/code&gt; se utilice como parte de una cadena m&amp;aacute;s grande. Por ejemplo, una cadena de especificaciones como esta:</target>
        </trans-unit>
        <trans-unit id="539ea1d3aa99e1f5670827ce3f6d748af1cde993" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;+resolveInstanceMethod:&lt;/code&gt; (or &lt;code&gt;+resolveClassMethod:&lt;/code&gt;) is not implemented or returns &lt;code&gt;NO&lt;/code&gt;, the runtime then tries the forwarding hook.</source>
          <target state="translated">Si &lt;code&gt;+resolveInstanceMethod:&lt;/code&gt; (o &lt;code&gt;+resolveClassMethod:&lt;/code&gt; ) no est&amp;aacute; implementado o devuelve &lt;code&gt;NO&lt;/code&gt; , el tiempo de ejecuci&amp;oacute;n intenta el enlace de reenv&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="3f8dd7c3c9fed3437a52aa9c603d614b32cf2d92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-Walloca-larger-than=500&lt;/code&gt; were passed, the above would trigger a warning, but this time because of the lack of bounds checking.</source>
          <target state="translated">Si se &lt;code&gt;-Walloca-larger-than=500&lt;/code&gt; , lo anterior desencadenar&amp;iacute;a una advertencia, pero esta vez debido a la falta de verificaci&amp;oacute;n de l&amp;iacute;mites.</target>
        </trans-unit>
        <trans-unit id="ca79581e5d9acfa9f2b20401cffd3a6d08f404f9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;D1&lt;/code&gt; has the form &lt;code&gt;( &lt;var&gt;attribute-specifier-list&lt;/var&gt; D )&lt;/code&gt;, and the declaration &lt;code&gt;T D&lt;/code&gt; specifies the type &amp;ldquo;&lt;var&gt;derived-declarator-type-list&lt;/var&gt;&lt;var&gt;Type&lt;/var&gt;&amp;rdquo; for &lt;var&gt;ident&lt;/var&gt;, then &lt;code&gt;T D1&lt;/code&gt; specifies the type &amp;ldquo;&lt;var&gt;derived-declarator-type-list&lt;/var&gt;&lt;var&gt;attribute-specifier-list&lt;/var&gt;&lt;var&gt;Type&lt;/var&gt;&amp;rdquo; for &lt;var&gt;ident&lt;/var&gt;.</source>
          <target state="translated">Si &lt;code&gt;D1&lt;/code&gt; tiene la forma &lt;code&gt;( &lt;var&gt;attribute-specifier-list&lt;/var&gt; D )&lt;/code&gt; , y la declaraci&amp;oacute;n &lt;code&gt;T D&lt;/code&gt; especifica el tipo &quot; &lt;var&gt;derived-declarator-type-list&lt;/var&gt; &lt;var&gt;Type&lt;/var&gt; declaradores derivados &quot; para &lt;var&gt;ident&lt;/var&gt; , entonces &lt;code&gt;T D1&lt;/code&gt; especifica el tipo &quot; &lt;var&gt;derived-declarator-type-list&lt;/var&gt; &lt;var&gt;attribute-specifier-list&lt;/var&gt; &lt;var&gt;Type&lt;/var&gt; lista de especificador &amp;rdquo;para &lt;var&gt;ident&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="bce12bf3e38781beccd90d07d87af63b34ed169d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;D1&lt;/code&gt; has the form &lt;code&gt;*
&lt;var&gt;type-qualifier-and-attribute-specifier-list&lt;/var&gt; D&lt;/code&gt;, and the declaration &lt;code&gt;T D&lt;/code&gt; specifies the type &amp;ldquo;&lt;var&gt;derived-declarator-type-list&lt;/var&gt;&lt;var&gt;Type&lt;/var&gt;&amp;rdquo; for &lt;var&gt;ident&lt;/var&gt;, then &lt;code&gt;T D1&lt;/code&gt; specifies the type &amp;ldquo;&lt;var&gt;derived-declarator-type-list&lt;/var&gt;&lt;var&gt;type-qualifier-and-attribute-specifier-list&lt;/var&gt; pointer to &lt;var&gt;Type&lt;/var&gt;&amp;rdquo; for &lt;var&gt;ident&lt;/var&gt;.</source>
          <target state="translated">Si &lt;code&gt;D1&lt;/code&gt; tiene la forma &lt;code&gt;* &lt;var&gt;type-qualifier-and-attribute-specifier-list&lt;/var&gt; D&lt;/code&gt; , y la declaraci&amp;oacute;n &lt;code&gt;T D&lt;/code&gt; especifica el tipo &quot; &lt;var&gt;derived-declarator-type-list&lt;/var&gt; &lt;var&gt;Type&lt;/var&gt; &quot; para &lt;var&gt;ident&lt;/var&gt; , entonces &lt;code&gt;T D1&lt;/code&gt; especifica el tipo &quot; &lt;var&gt;derived-declarator-type-list&lt;/var&gt; &lt;var&gt;type-qualifier-and-attribute-specifier-list&lt;/var&gt; puntero a &lt;var&gt;Type&lt;/var&gt; &amp;rdquo;para &lt;var&gt;ident&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fdf6957ed3c287429ab808fa75095697e4d021d5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DECL_ASSEMBLER_NAME&lt;/code&gt; has been set for a given decl, use that in the dump instead of &lt;code&gt;DECL_NAME&lt;/code&gt;. Its primary use is ease of use working backward from mangled names in the assembly file.</source>
          <target state="translated">Si &lt;code&gt;DECL_ASSEMBLER_NAME&lt;/code&gt; se ha configurado para una declinaci&amp;oacute;n determinada, util&amp;iacute;celo en el volcado en lugar de &lt;code&gt;DECL_NAME&lt;/code&gt; . Su uso principal es la facilidad de uso trabajando hacia atr&amp;aacute;s a partir de nombres destrozados en el archivo de ensamblaje.</target>
        </trans-unit>
        <trans-unit id="647ff2c6b0ee66be47ceb0fe277c3fe135fc84e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt; is not set, GCC attempts to figure out an appropriate prefix to use based on the pathname it is invoked with.</source>
          <target state="translated">Si no se establece &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt; , GCC intenta encontrar un prefijo apropiado para usar en funci&amp;oacute;n del nombre de ruta con el que se invoca.</target>
        </trans-unit>
        <trans-unit id="7fc3d06e6177481bf26c022c74076e71f4e1f421" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt; is set, it specifies a prefix to use in the names of the subprograms executed by the compiler. No slash is added when this prefix is combined with the name of a subprogram, but you can specify a prefix that ends with a slash if you wish.</source>
          <target state="translated">Si se establece &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt; , especifica un prefijo para usar en los nombres de los subprogramas ejecutados por el compilador. No se agrega ninguna barra cuando este prefijo se combina con el nombre de un subprograma, pero puede especificar un prefijo que termine con una barra si lo desea.</target>
        </trans-unit>
        <trans-unit id="dec8a7933acf37b1c0fdc778b779b3f382d54a7a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LANG&lt;/code&gt; is not defined, or if it has some other value, then the compiler uses &lt;code&gt;mblen&lt;/code&gt; and &lt;code&gt;mbtowc&lt;/code&gt; as defined by the default locale to recognize and translate multibyte characters.</source>
          <target state="translated">Si &lt;code&gt;LANG&lt;/code&gt; no est&amp;aacute; definido, o si tiene alg&amp;uacute;n otro valor, entonces el compilador usa &lt;code&gt;mblen&lt;/code&gt; y &lt;code&gt;mbtowc&lt;/code&gt; como lo define la configuraci&amp;oacute;n regional predeterminada para reconocer y traducir caracteres multibyte.</target>
        </trans-unit>
        <trans-unit id="e1943099aece965452d744a5c53ffc07f2bc9f16" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;S&lt;/code&gt; is given to GCC, substitutes &lt;code&gt;X&lt;/code&gt;; else if &lt;code&gt;T&lt;/code&gt; is given to GCC, substitutes &lt;code&gt;Y&lt;/code&gt;; else substitutes &lt;code&gt;D&lt;/code&gt;. There can be as many clauses as you need. This may be combined with &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, and &lt;code&gt;*&lt;/code&gt; as needed.</source>
          <target state="translated">Si se le da &lt;code&gt;S&lt;/code&gt; a GCC, sustituye a &lt;code&gt;X&lt;/code&gt; ; de lo contrario, si &lt;code&gt;T&lt;/code&gt; se da a GCC, sustituye a &lt;code&gt;Y&lt;/code&gt; ; sustitutos dem&amp;aacute;s &lt;code&gt;D&lt;/code&gt; . Puede haber tantas cl&amp;aacute;usulas como necesite. Esto se puede combinar con &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , y &lt;code&gt;*&lt;/code&gt; seg&amp;uacute;n sea necesario.</target>
        </trans-unit>
        <trans-unit id="404ec67951a627fb06995708ad6a0e24dc041fa8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;TMPDIR&lt;/code&gt; is set, it specifies the directory to use for temporary files. GCC uses temporary files to hold the output of one stage of compilation which is to be used as input to the next stage: for example, the output of the preprocessor, which is the input to the compiler proper.</source>
          <target state="translated">Si se establece &lt;code&gt;TMPDIR&lt;/code&gt; , especifica el directorio que se utilizar&amp;aacute; para los archivos temporales. GCC utiliza archivos temporales para contener la salida de una etapa de la compilaci&amp;oacute;n que se utilizar&amp;aacute; como entrada para la siguiente etapa: por ejemplo, la salida del preprocesador, que es la entrada al compilador propiamente dicho.</target>
        </trans-unit>
        <trans-unit id="1953caa75083ee28850ca171a34b26fd4eb8373f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__has_trivial_constructor (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv class or union type (or array thereof) with a default constructor that is known not to throw an exception then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;__has_trivial_constructor (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase cv o un tipo de uni&amp;oacute;n (o una matriz del mismo) con un constructor predeterminado que se sabe que no arroja una excepci&amp;oacute;n, entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="763c1f95adec0e6f2c3d89c3c9b77ea1bcae352d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__has_trivial_copy (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv-qualified class or union type with copy constructors that are known not to throw an exception then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;__has_trivial_copy (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase calificada por cv o un tipo de uni&amp;oacute;n con constructores de copia que se sabe que no arrojan una excepci&amp;oacute;n, entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="348b274e4746ccb17d0ad8ccc31192a6601178b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__is_class (type)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; then the trait is &lt;code&gt;false&lt;/code&gt;. Otherwise &lt;code&gt;type&lt;/code&gt; is considered empty if and only if: &lt;code&gt;type&lt;/code&gt; has no non-static data members, or all non-static data members, if any, are bit-fields of length 0, and &lt;code&gt;type&lt;/code&gt; has no virtual members, and &lt;code&gt;type&lt;/code&gt; has no virtual base classes, and &lt;code&gt;type&lt;/code&gt; has no base classes &lt;code&gt;base_type&lt;/code&gt; for which &lt;code&gt;__is_empty (base_type)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;__is_class (type)&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; entonces el rasgo es &lt;code&gt;false&lt;/code&gt; . De lo contrario, el &lt;code&gt;type&lt;/code&gt; se considera vac&amp;iacute;o si y solo si: el &lt;code&gt;type&lt;/code&gt; no tiene miembros de datos no est&amp;aacute;ticos, o todos los miembros de datos no est&amp;aacute;ticos, si los hay, son campos de bits de longitud 0, y el &lt;code&gt;type&lt;/code&gt; no tiene miembros virtuales y el &lt;code&gt;type&lt;/code&gt; no tiene virtuales clases base, y el &lt;code&gt;type&lt;/code&gt; no tiene clases base &lt;code&gt;base_type&lt;/code&gt; para las cuales &lt;code&gt;__is_empty (base_type)&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="3fb256b452a67db2fcf29b7d6c9eb3c3b57425ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__is_pod (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;type&lt;/code&gt; is a reference type then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv class or union type (or array thereof) with a trivial destructor ([class.dtor]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;__is_pod (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; o el &lt;code&gt;type&lt;/code&gt; es un tipo de referencia, entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase cv o un tipo de uni&amp;oacute;n (o matriz del mismo) con un destructor trivial ([class.dtor]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="d1bf9587539b51be90adc4a1e785e99e947f0059" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__is_pod (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;type&lt;/code&gt; is a reference type then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv class or union type with a trivial copy constructor ([class.copy]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;__is_pod (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; o el &lt;code&gt;type&lt;/code&gt; es un tipo de referencia, entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase cv o un tipo de uni&amp;oacute;n con un constructor de copia trivial ([class.copy]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario lo es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="2f38bb6a2ade7b8693787a1194261c7451943ac5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;__is_pod (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv-qualified class or union type (or array thereof) with a trivial default constructor ([class.ctor]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;__is_pod (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase calificada por cv o un tipo de uni&amp;oacute;n (o una matriz del mismo) con un constructor predeterminado trivial ([class.ctor]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="d19955ce7ffa6060ce61b406573fd7fa063dda62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;base_type&lt;/code&gt; is a base class of &lt;code&gt;derived_type&lt;/code&gt; ([class.derived]) then the trait is &lt;code&gt;true&lt;/code&gt;, otherwise it is &lt;code&gt;false&lt;/code&gt;. Top-level cv-qualifications of &lt;code&gt;base_type&lt;/code&gt; and &lt;code&gt;derived_type&lt;/code&gt; are ignored. For the purposes of this trait, a class type is considered is own base. Requires: if &lt;code&gt;__is_class (base_type)&lt;/code&gt; and &lt;code&gt;__is_class (derived_type)&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;base_type&lt;/code&gt; and &lt;code&gt;derived_type&lt;/code&gt; are not the same type (disregarding cv-qualifiers), &lt;code&gt;derived_type&lt;/code&gt; shall be a complete type. A diagnostic is produced if this requirement is not met.</source>
          <target state="translated">Si &lt;code&gt;base_type&lt;/code&gt; es una clase base de &lt;code&gt;derived_type&lt;/code&gt; ([class.derived]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; ; de lo contrario, es &lt;code&gt;false&lt;/code&gt; . Las calificaciones de cv de nivel superior de &lt;code&gt;base_type&lt;/code&gt; y &lt;code&gt;derived_type&lt;/code&gt; se ignoran. A los efectos de este rasgo, se considera un tipo de clase como base propia. Requiere: si &lt;code&gt;__is_class (base_type)&lt;/code&gt; y &lt;code&gt;__is_class (derived_type)&lt;/code&gt; son &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;base_type&lt;/code&gt; y &lt;code&gt;derived_type&lt;/code&gt; no son del mismo tipo (sin tener en cuenta los calificadores de cv), &lt;code&gt;derived_type&lt;/code&gt; ser&amp;aacute; un tipo completo. Se produce un diagn&amp;oacute;stico si no se cumple este requisito.</target>
        </trans-unit>
        <trans-unit id="9ad52c7e701f6b6ac16fc011e5c3a814b836cace" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;objc_msg_lookup()&lt;/code&gt; does not find a suitable method implementation, because the receiver does not implement the required method, it tries to see if the class can dynamically register the method.</source>
          <target state="translated">Si &lt;code&gt;objc_msg_lookup()&lt;/code&gt; no encuentra una implementaci&amp;oacute;n de m&amp;eacute;todo adecuada, porque el receptor no implementa el m&amp;eacute;todo requerido, intenta ver si la clase puede registrar din&amp;aacute;micamente el m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="de0324724a4ecec17009f5551872ea4de764d9cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;packed&lt;/code&gt; is used on a structure, or if bit-fields are used, it may be that the Microsoft ABI lays out the structure differently than the way GCC normally does. Particularly when moving packed data between functions compiled with GCC and the native Microsoft compiler (either via function call or as data in a file), it may be necessary to access either format.</source>
          <target state="translated">Si se usa &lt;code&gt;packed&lt;/code&gt; en una estructura, o si se usan campos de bits, puede ser que Microsoft ABI presente la estructura de manera diferente a como lo hace GCC normalmente. Particularmente cuando se mueven datos empaquetados entre funciones compiladas con GCC y el compilador nativo de Microsoft (ya sea mediante una llamada a la funci&amp;oacute;n o como datos en un archivo), puede ser necesario acceder a cualquiera de los formatos.</target>
        </trans-unit>
        <trans-unit id="6f7ba7dbf5e57d92bfe72102ff6203af39a12a8c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;signed&lt;/code&gt; or &lt;code&gt;unsigned&lt;/code&gt; is omitted, the signedness of the vector type is the default signedness of the base type. The default varies depending on the operating system, so a portable program should always specify the signedness.</source>
          <target state="translated">Si se omite &lt;code&gt;signed&lt;/code&gt; o &lt;code&gt;unsigned&lt;/code&gt; , el signo del tipo de vector es el signo predeterminado del tipo base. El valor predeterminado var&amp;iacute;a seg&amp;uacute;n el sistema operativo, por lo que un programa port&amp;aacute;til siempre debe especificar la firma.</target>
        </trans-unit>
        <trans-unit id="ffd246c0a3fbb949c1fa9d8cc2260944e77a3bfb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;const&lt;/code&gt;- qualified or is a reference type then the trait is &lt;code&gt;false&lt;/code&gt;. Otherwise if &lt;code&gt;__is_pod (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv-qualified class or union type with a trivial copy assignment ([class.copy]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es &lt;code&gt;const&lt;/code&gt; ante o es un tipo de referencia, el rasgo es &lt;code&gt;false&lt;/code&gt; . De lo contrario, si &lt;code&gt;__is_pod (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase calificada por cv o un tipo de uni&amp;oacute;n con una asignaci&amp;oacute;n de copia trivial ([class.copy]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="283cf2672e55770fc0551d9647cca120a4bb630b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;const&lt;/code&gt;-qualified or is a reference type then the trait is &lt;code&gt;false&lt;/code&gt;. Otherwise if &lt;code&gt;__has_trivial_assign (type)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then the trait is &lt;code&gt;true&lt;/code&gt;, else if &lt;code&gt;type&lt;/code&gt; is a cv-qualified class or union type with copy assignment operators that are known not to throw an exception then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; est&amp;aacute; calificado &lt;code&gt;const&lt;/code&gt; o es un tipo de referencia, entonces el rasgo es &lt;code&gt;false&lt;/code&gt; . De lo contrario, si &lt;code&gt;__has_trivial_assign (type)&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, si el &lt;code&gt;type&lt;/code&gt; es una clase calificada por cv o un tipo de uni&amp;oacute;n con operadores de asignaci&amp;oacute;n de copia que se sabe que no arrojan una excepci&amp;oacute;n, entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="63c11c8bb0212d553ee20398c564d16b6ec7e69f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a class type with a virtual destructor ([class.dtor]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es un tipo de clase con un destructor virtual ([class.dtor]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="3c2e0cd65d0655c5ce8c12d2d2d4a097d810e389" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a cv POD type ([basic.types]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es un tipo cv POD ([basic.types]), entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="723863e0b5a8fce8c661ff18582b201e84983629" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a cv enumeration type ([basic.compound]) the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es un tipo de enumeraci&amp;oacute;n cv ([basic.compound]) el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b7975a53cee041123902e4671962591f8c2cbd7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a cv union type ([basic.compound]) the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;type&lt;/code&gt; es un tipo de uni&amp;oacute;n cv ([basic.compound]) el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89ab4b13f03f8e9b77ccbec6378e569d290932f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a cv-qualified class type, and not a union type ([basic.compound]) the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;type&lt;/code&gt; es un tipo de clase calificado para cv y no un tipo de uni&amp;oacute;n ([basic.compound]), el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6c08c113aac15208c2698077a3dc6d2ee08e364" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a literal type ([basic.types]) the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si &lt;code&gt;type&lt;/code&gt; es un tipo literal ([basic.types]) el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="44c42d9c3a648a4586d6d80ed2afeb43acc1f98c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a polymorphic class ([class.virtual]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es una clase polim&amp;oacute;rfica ([class.virtual]) entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="902c4582059f6f78c8c47e8d4db16bfd414011e3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a standard-layout type ([basic.types]) the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es un tipo de dise&amp;ntilde;o est&amp;aacute;ndar ([basic.types]), el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="c53c71f1f92604372ad3a40e885b3e290ad04715" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is a trivial type ([basic.types]) the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es un tipo trivial ([basic.types]), el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario, es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="ffe6e21bc41957ab0a00219c12663528f239f642" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is an abstract class ([class.abstract]) then the trait is &lt;code&gt;true&lt;/code&gt;, else it is &lt;code&gt;false&lt;/code&gt;. Requires: &lt;code&gt;type&lt;/code&gt; shall be a complete type, (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;, or an array of unknown bound.</source>
          <target state="translated">Si el &lt;code&gt;type&lt;/code&gt; es una clase abstracta ([class.abstract]) entonces el rasgo es &lt;code&gt;true&lt;/code&gt; , de lo contrario es &lt;code&gt;false&lt;/code&gt; . Requiere: el &lt;code&gt;type&lt;/code&gt; debe ser un tipo completo, (posiblemente calificado como cv) &lt;code&gt;void&lt;/code&gt; o una matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="911911ebb73f24baa4568a362dcf6545a5e8bd9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;X&lt;/var&gt; is &lt;code&gt;0xf&lt;/code&gt;, then the &lt;var&gt;n&lt;/var&gt;-th bit of &lt;var&gt;val&lt;/var&gt; is returned unaltered.</source>
          <target state="translated">Si &lt;var&gt;X&lt;/var&gt; es &lt;code&gt;0xf&lt;/code&gt; , el &lt;var&gt;n&lt;/var&gt; -&amp;eacute;simo bit de &lt;var&gt;val&lt;/var&gt; se devuelve inalterado.</target>
        </trans-unit>
        <trans-unit id="529d14d76239ac927a58af9240682db818e156fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;desired&lt;/var&gt; is written into &lt;code&gt;*&lt;var&gt;ptr&lt;/var&gt;&lt;/code&gt; then &lt;code&gt;true&lt;/code&gt; is returned and memory is affected according to the memory order specified by &lt;var&gt;success_memorder&lt;/var&gt;. There are no restrictions on what memory order can be used here.</source>
          <target state="translated">Si &lt;var&gt;desired&lt;/var&gt; se escribe en &lt;code&gt;*&lt;var&gt;ptr&lt;/var&gt;&lt;/code&gt; entonces &lt;code&gt;true&lt;/code&gt; es devuelta y la memoria se ve afectada de acuerdo con el orden memoria especificada por &lt;var&gt;success_memorder&lt;/var&gt; . No hay restricciones sobre qu&amp;eacute; orden de memoria se puede usar aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="90eefc597dfd05335fdc76d585991dd479f5699e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;device&lt;/var&gt; is not a device but only a core architecture like &amp;lsquo;</source>
          <target state="translated">Si el &lt;var&gt;device&lt;/var&gt; no es un dispositivo, sino solo una arquitectura central como '</target>
        </trans-unit>
        <trans-unit id="37aede7b841b819868fc3f607fc7588d32233439" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exp1&lt;/var&gt; is returned, the return type is the same as &lt;var&gt;exp1&lt;/var&gt;&amp;rsquo;s type. Similarly, if &lt;var&gt;exp2&lt;/var&gt; is returned, its return type is the same as &lt;var&gt;exp2&lt;/var&gt;.</source>
          <target state="translated">Si se devuelve &lt;var&gt;exp1&lt;/var&gt; , el tipo de retorno es el mismo que el tipo de &lt;var&gt;exp1&lt;/var&gt; . De manera similar, si se devuelve &lt;var&gt;exp2&lt;/var&gt; , su tipo de retorno es el mismo que &lt;var&gt;exp2&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="43726f9389a16cd86ccc87693856924d076a1cd7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is</source>
          <target state="translated">Si el &lt;var&gt;file&lt;/var&gt; es</target>
        </trans-unit>
        <trans-unit id="5b94a494d8a93062d1fb2f08cf22419880d46ae7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;m&lt;/var&gt; is not specified, it defaults to &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">Si no se especifica &lt;var&gt;m&lt;/var&gt; , el valor predeterminado es &lt;var&gt;n&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="96e30c03c390fa37f95beff815a87bdc5f2296a9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified or is zero, use a machine-dependent default which is very likely to be &amp;lsquo;</source>
          <target state="translated">Si &lt;var&gt;n&lt;/var&gt; no se especifica o es cero, use un valor predeterminado dependiente de la m&amp;aacute;quina que es muy probable que sea '</target>
        </trans-unit>
        <trans-unit id="4f4c9abfe6823ac3226b1f95cfb68ae207a767d4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified or is zero, use a machine-dependent default.</source>
          <target state="translated">Si no se especifica &lt;var&gt;n&lt;/var&gt; o es cero, utilice un valor predeterminado dependiente de la m&amp;aacute;quina.</target>
        </trans-unit>
        <trans-unit id="edea744d98224ea825d53a93f917e0198d6b4e4e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is not specified or is zero, use a machine-dependent default. The maximum allowed &lt;var&gt;n&lt;/var&gt; option value is 65536.</source>
          <target state="translated">Si no se especifica &lt;var&gt;n&lt;/var&gt; o es cero, utilice un valor predeterminado dependiente de la m&amp;aacute;quina. El valor de opci&amp;oacute;n &lt;var&gt;n&lt;/var&gt; m&amp;aacute;ximo permitido es 65536.</target>
        </trans-unit>
        <trans-unit id="759dfcc7101124f098c766f1c7cd00bcc6b949db" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;options&lt;/var&gt; is omitted, it defaults to &amp;lsquo;</source>
          <target state="translated">Si se omiten las &lt;var&gt;options&lt;/var&gt; , el valor predeterminado es '</target>
        </trans-unit>
        <trans-unit id="4a58d0d422304ea0f155ce08523224eb514fe6b5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;path&lt;/var&gt; is specified, GCC looks at the &lt;var&gt;path&lt;/var&gt; to find the profile feedback data files. See</source>
          <target state="translated">Si se especifica la &lt;var&gt;path&lt;/var&gt; , GCC mira la &lt;var&gt;path&lt;/var&gt; para encontrar los archivos de datos de retroalimentaci&amp;oacute;n del perfil. Ver</target>
        </trans-unit>
        <trans-unit id="424b9b0e5144f1c216be7ac998c97fd4f7a0b3fa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;type&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">Si el &lt;var&gt;type&lt;/var&gt; es '</target>
        </trans-unit>
        <trans-unit id="a48f8bd6ddf94d7b46204690dc61b7e1c17bca21" translate="yes" xml:space="preserve">
          <source>If GCC cannot find the subprogram using the specified prefix, it tries looking in the usual places for the subprogram.</source>
          <target state="translated">Si GCC no puede encontrar el subprograma usando el prefijo especificado,intenta buscar el subprograma en los lugares habituales.</target>
        </trans-unit>
        <trans-unit id="49e516aa2892d9e488e19e4de501aef3c975c28a" translate="yes" xml:space="preserve">
          <source>If GCC was configured to use a GLIBC before 2.23, the built-in function &lt;code&gt;__builtin_cpu_is&lt;/code&gt; always returns a 0 and the compiler issues a warning.</source>
          <target state="translated">Si GCC se configur&amp;oacute; para usar GLIBC antes de 2.23, la funci&amp;oacute;n &lt;code&gt;__builtin_cpu_is&lt;/code&gt; siempre devuelve un 0 y el compilador emite una advertencia.</target>
        </trans-unit>
        <trans-unit id="009bc2728024c27e5f3a38c77a771a92e70da809" translate="yes" xml:space="preserve">
          <source>If GCC was configured to use a GLIBC before 2.23, the built-in function &lt;code&gt;__builtin_cpu_suports&lt;/code&gt; always returns a 0 and the compiler issues a warning.</source>
          <target state="translated">Si GCC se configur&amp;oacute; para usar un GLIBC antes de 2.23, la funci&amp;oacute;n &lt;code&gt;__builtin_cpu_suports&lt;/code&gt; siempre devuelve un 0 y el compilador emite una advertencia.</target>
        </trans-unit>
        <trans-unit id="3d3dbe293db43d1939fa63d41a62ea0fb70dc054" translate="yes" xml:space="preserve">
          <source>If LTO encounters objects with C linkage declared with incompatible types in separate translation units to be linked together (undefined behavior according to ISO C99 6.2.7), a non-fatal diagnostic may be issued. The behavior is still undefined at run time. Similar diagnostics may be raised for other languages.</source>
          <target state="translated">Si la LTO encuentra objetos con vinculación C declarados con tipos incompatibles en unidades de traducción separadas para ser vinculados entre sí (comportamiento no definido según la norma ISO C99 6.2.7),se podrá emitir un diagnóstico no fatal.El comportamiento sigue siendo indefinido en tiempo de ejecución.Se pueden plantear diagnósticos similares para otros idiomas.</target>
        </trans-unit>
        <trans-unit id="8064195381cae5ba1afd9e1080f901756518ee59" translate="yes" xml:space="preserve">
          <source>If SSE extensions are enabled, &lt;code&gt;V4SF&lt;/code&gt; is used for a vector of four 32-bit floating-point values. Some instructions use a vector of four 32-bit integers, these use &lt;code&gt;V4SI&lt;/code&gt;. Finally, some instructions operate on an entire vector register, interpreting it as a 128-bit integer, these use mode &lt;code&gt;TI&lt;/code&gt;.</source>
          <target state="translated">Si las extensiones SSE est&amp;aacute;n habilitadas, &lt;code&gt;V4SF&lt;/code&gt; se utiliza para un vector de cuatro valores de coma flotante de 32 bits. Algunas instrucciones usan un vector de cuatro enteros de 32 bits, estos usan &lt;code&gt;V4SI&lt;/code&gt; . Finalmente, algunas instrucciones operan sobre un registro vectorial completo, interpret&amp;aacute;ndolo como un entero de 128 bits, estas usan el modo &lt;code&gt;TI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8aa3d549316941fe06d6dfd92787397e613a82c" translate="yes" xml:space="preserve">
          <source>If X is in the range 0&amp;hellip;7, then the &lt;var&gt;n&lt;/var&gt;-th result bit is set to the &lt;var&gt;X&lt;/var&gt;-th bit of &lt;var&gt;bits&lt;/var&gt;</source>
          <target state="translated">Si X est&amp;aacute; en el rango 0&amp;hellip; 7, entonces el &lt;var&gt;n&lt;/var&gt; -&amp;eacute;simo bit de resultado se establece en el &lt;var&gt;X&lt;/var&gt; -&amp;eacute;simo bit de &lt;var&gt;bits&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4795ba768ec1950f8dcd780b40f59791bb2c3400" translate="yes" xml:space="preserve">
          <source>If X is in the range 8&amp;hellip;&lt;code&gt;0xe&lt;/code&gt;, then the &lt;var&gt;n&lt;/var&gt;-th result bit is undefined.</source>
          <target state="translated">Si X est&amp;aacute; en el rango 8&amp;hellip; &lt;code&gt;0xe&lt;/code&gt; , entonces el &lt;var&gt;n&lt;/var&gt; -&amp;eacute;simo bit de resultado no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="77a0a28430753763f9053f0aed3455f25006e137" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;named-address-spaces#AVR-Named-Address-Spaces&quot;&gt;named address space&lt;/a&gt; other than generic or &lt;code&gt;__flash&lt;/code&gt; is used, then &lt;code&gt;RAMPZ&lt;/code&gt; is set as needed before the operation.</source>
          <target state="translated">Si se utiliza un &lt;a href=&quot;named-address-spaces#AVR-Named-Address-Spaces&quot;&gt;espacio de direcciones con nombre que&lt;/a&gt; no sea gen&amp;eacute;rico o &lt;code&gt;__flash&lt;/code&gt; , &lt;code&gt;RAMPZ&lt;/code&gt; se configura seg&amp;uacute;n sea necesario antes de la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e78a838d8422ed3d9e1991db7c391d81f3fd283d" translate="yes" xml:space="preserve">
          <source>If a class is declared to implement a protocol, a warning is issued for every method in the protocol that is not implemented by the class. The default behavior is to issue a warning for every method not explicitly implemented in the class, even if a method implementation is inherited from the superclass. If you use the</source>
          <target state="translated">Si se declara que una clase implementa un protocolo,se emite una advertencia para cada método del protocolo que no sea implementado por la clase.El comportamiento por defecto es emitir un aviso para cada método no implementado explícitamente en la clase,incluso si la implementación de un método es heredada de la superclase.Si se utiliza la clase</target>
        </trans-unit>
        <trans-unit id="29f23802437b44fdcdb64561f47637459cfd3577" translate="yes" xml:space="preserve">
          <source>If a diagnostic contains fix-it hints, it has a &lt;code&gt;fixits&lt;/code&gt; array, consisting of half-open intervals, similar to the output of</source>
          <target state="translated">Si un diagn&amp;oacute;stico contiene sugerencias de correcci&amp;oacute;n, tiene una matriz de &lt;code&gt;fixits&lt;/code&gt; , que consta de intervalos semiabiertos, similar a la salida de</target>
        </trans-unit>
        <trans-unit id="e94ab481666483b349181850cc8e39b26f438c5d" translate="yes" xml:space="preserve">
          <source>If a function returns a temporary &lt;code&gt;initializer_list&lt;/code&gt;, or a local &lt;code&gt;initializer_list&lt;/code&gt; variable, the array&amp;rsquo;s lifetime ends at the end of the return statement, so the value returned has a dangling pointer.</source>
          <target state="translated">Si una funci&amp;oacute;n devuelve una variable &lt;code&gt;initializer_list&lt;/code&gt; temporal , o una variable &lt;code&gt;initializer_list&lt;/code&gt; local , la vida &amp;uacute;til de la matriz termina al final de la declaraci&amp;oacute;n de retorno, por lo que el valor devuelto tiene un puntero colgante.</target>
        </trans-unit>
        <trans-unit id="51be4d38853f3a30d7f15e3610ea69ae54265c4e" translate="yes" xml:space="preserve">
          <source>If a loop iterates over an array with a variable stride, create another version of the loop that assumes the stride is always one. For example:</source>
          <target state="translated">Si un bucle itera sobre un array con una zancada variable,crear otra versión del bucle que asuma que la zancada es siempre una.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e603935699eb5e105e69e65a9021ca2022ac4213" translate="yes" xml:space="preserve">
          <source>If a new-expression creates an &lt;code&gt;initializer_list&lt;/code&gt;, the array only lives until the end of the enclosing full-expression, so the &lt;code&gt;initializer_list&lt;/code&gt; in the heap has a dangling pointer.</source>
          <target state="translated">Si una nueva expresi&amp;oacute;n crea una &lt;code&gt;initializer_list&lt;/code&gt; , la matriz solo vive hasta el final de la expresi&amp;oacute;n completa adjunta, por lo que &lt;code&gt;initializer_list&lt;/code&gt; en el mont&amp;oacute;n tiene un puntero colgando.</target>
        </trans-unit>
        <trans-unit id="dcc181452125b891816dee9715c4c073b739c819" translate="yes" xml:space="preserve">
          <source>If a program must use a different C++ library and it&amp;rsquo;s not possible to do the final link using a C++ driver that uses that library by default, it is necessary to tell &lt;code&gt;g++&lt;/code&gt; the location and name of that library. It might also be necessary to specify different startup files and other runtime support libraries, and to suppress the use of GCC&amp;rsquo;s support libraries with one or more of the options</source>
          <target state="translated">Si un programa debe usar una biblioteca C ++ diferente y no es posible hacer el enlace final usando un controlador C ++ que usa esa biblioteca por defecto, es necesario decirle a &lt;code&gt;g++&lt;/code&gt; la ubicaci&amp;oacute;n y el nombre de esa biblioteca. Tambi&amp;eacute;n puede ser necesario especificar diferentes archivos de inicio y otras bibliotecas de soporte de tiempo de ejecuci&amp;oacute;n, y suprimir el uso de las bibliotecas de soporte de GCC con una o m&amp;aacute;s de las opciones.</target>
        </trans-unit>
        <trans-unit id="e84c4785b4be9bc72195941ed1f8c2b45255457e" translate="yes" xml:space="preserve">
          <source>If a standard system include directory, or a directory specified with</source>
          <target state="translated">Si un sistema estándar incluye un directorio,o un directorio especificado con</target>
        </trans-unit>
        <trans-unit id="5c3be2ab717ecd782733ce9b93456fcb31fc4af7" translate="yes" xml:space="preserve">
          <source>If a variable has the &lt;code&gt;below100&lt;/code&gt; attribute (&lt;code&gt;BELOW100&lt;/code&gt; is allowed also), GCC places the variable in the first 0x100 bytes of memory and use special opcodes to access it. Such variables are placed in either the &lt;code&gt;.bss_below100&lt;/code&gt; section or the &lt;code&gt;.data_below100&lt;/code&gt; section.</source>
          <target state="translated">Si una variable tiene el atributo &lt;code&gt;below100&lt;/code&gt; ( &lt;code&gt;BELOW100&lt;/code&gt; se permite BELOW100 ), GCC coloca la variable en los primeros 0x100 bytes de memoria y utiliza c&amp;oacute;digos de operaci&amp;oacute;n especiales para acceder a ella. Tales variables se colocan en la secci&amp;oacute;n &lt;code&gt;.bss_below100&lt;/code&gt; o en la secci&amp;oacute;n &lt;code&gt;.data_below100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38c3454c59e77e91336081ab769819e7fd53ba65" translate="yes" xml:space="preserve">
          <source>If a zero-length bit-field follows a normal bit-field, the type of the zero-length bit-field may affect the alignment of the structure as whole. For example, &lt;code&gt;t2&lt;/code&gt; has a size of 4 bytes, since the zero-length bit-field follows a normal bit-field, and is of type short.</source>
          <target state="translated">Si un campo de bits de longitud cero sigue a un campo de bits normal, el tipo de campo de bits de longitud cero puede afectar a la alineaci&amp;oacute;n de la estructura en su conjunto. Por ejemplo, &lt;code&gt;t2&lt;/code&gt; tiene un tama&amp;ntilde;o de 4 bytes, ya que el campo de bits de longitud cero sigue un campo de bits normal y es de tipo corto.</target>
        </trans-unit>
        <trans-unit id="3930dc0fc00c26bd7cfbb87588dd5cf1e2064acf" translate="yes" xml:space="preserve">
          <source>If a zero-length bit-field is inserted after a bit-field, &lt;code&gt;foo&lt;/code&gt;, and the alignment of the zero-length bit-field is greater than the member that follows it, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt; is aligned as the type of the zero-length bit-field.</source>
          <target state="translated">Si se inserta un campo de bits de longitud cero despu&amp;eacute;s de un campo de bits, &lt;code&gt;foo&lt;/code&gt; , y la alineaci&amp;oacute;n del campo de bits de longitud cero es mayor que el miembro que lo sigue, &lt;code&gt;bar&lt;/code&gt; , &lt;code&gt;bar&lt;/code&gt; se alinea como el tipo de cero. campo de bits de longitud.</target>
        </trans-unit>
        <trans-unit id="487b9fa86178ee0fe71d79bf284c4ff7466101a0" translate="yes" xml:space="preserve">
          <source>If a zero-length bit-field is inserted between two bit-fields that are normally coalesced, the bit-fields are not coalesced.</source>
          <target state="translated">Si se inserta un campo de bits de longitud cero entre dos campos de bits que normalmente están fusionados,los campos de bits no están fusionados.</target>
        </trans-unit>
        <trans-unit id="fce50e2e3a2f90483694041f1d50957c036fd376" translate="yes" xml:space="preserve">
          <source>If accessing any memory location is potentially unsafe when speculative execution is incorrect, then the code can be rewritten as</source>
          <target state="translated">Si acceder a cualquier lugar de la memoria es potencialmente inseguro cuando la ejecución especulativa es incorrecta,entonces el código puede ser reescrito como</target>
        </trans-unit>
        <trans-unit id="19dee42123d1606545b47bdc1aee4dced42d70ef" translate="yes" xml:space="preserve">
          <source>If all calls to a given function are integrated, and the function is declared &lt;code&gt;static&lt;/code&gt;, then the function is normally not output as assembler code in its own right.</source>
          <target state="translated">Si todas las llamadas a una funci&amp;oacute;n determinada est&amp;aacute;n integradas y la funci&amp;oacute;n se declara &lt;code&gt;static&lt;/code&gt; , entonces la funci&amp;oacute;n normalmente no se genera como c&amp;oacute;digo ensamblador por derecho propio.</target>
        </trans-unit>
        <trans-unit id="6747ee18a18040e35fcb4f80dbfe422de83e0b1d" translate="yes" xml:space="preserve">
          <source>If an explicit version number is provided and</source>
          <target state="translated">Si se proporciona un número de versión explícito y</target>
        </trans-unit>
        <trans-unit id="2a42f93a55377bd2fb4570f085c309d8859bae77" translate="yes" xml:space="preserve">
          <source>If an instruction only takes Altivec registers, you do not want to use &lt;code&gt;%x&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Si una instrucci&amp;oacute;n solo toma registros Altivec, no querr&amp;aacute; usar &lt;code&gt;%x&amp;lt;n&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="364981cd1f151ee605ed86bfcc1747b52ebe7a19" translate="yes" xml:space="preserve">
          <source>If any of</source>
          <target state="translated">Si alguno de los</target>
        </trans-unit>
        <trans-unit id="d4335275a2f1edfde414bbe1e986ac43ea3a56a9" translate="yes" xml:space="preserve">
          <source>If any of the enabled test conditions is true, the corresponding entry in the result vector is -1. Otherwise (all of the enabled test conditions are false), the corresponding entry of the result vector is 0.</source>
          <target state="translated">Si alguna de las condiciones de prueba habilitadas es verdadera,la entrada correspondiente en el vector de resultados es -1.En caso contrario (todas las condiciones de prueba habilitadas son falsas),la entrada correspondiente del vector de resultado es 0.</target>
        </trans-unit>
        <trans-unit id="b0cb0b3f3853386544ffbd0fa1ea4935f0522535" translate="yes" xml:space="preserve">
          <source>If any of these options is used, then the linker is not run, and object file names should not be used as arguments. See &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;Overall Options&lt;/a&gt;.</source>
          <target state="translated">Si se usa alguna de estas opciones, el vinculador no se ejecuta y los nombres de los archivos de objetos no deben usarse como argumentos. Consulte &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;Opciones generales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66bff0fe442c04caa45d8e4b29fa05e61e69952b" translate="yes" xml:space="preserve">
          <source>If application code relies on copy-assignment, a user-defined copy-assignment operator removes any uncertainties. With such an operator, the application can define whether and how the virtual base subobject is assigned.</source>
          <target state="translated">Si el código de aplicación se basa en la asignación de copias,un operador de asignación de copias definido por el usuario elimina cualquier incertidumbre.Con tal operador,la aplicación puede definir si y cómo se asigna el subobjeto de base virtual.</target>
        </trans-unit>
        <trans-unit id="3e6fe2d65d6ae8e8dddd4d9d96db3ba491946874" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;signal&lt;/code&gt; and &lt;code&gt;interrupt&lt;/code&gt; are specified for the same function, &lt;code&gt;signal&lt;/code&gt; is silently ignored.</source>
          <target state="translated">Si tanto la &lt;code&gt;signal&lt;/code&gt; como la &lt;code&gt;interrupt&lt;/code&gt; se especifican para la misma funci&amp;oacute;n, la &lt;code&gt;signal&lt;/code&gt; se ignora en silencio.</target>
        </trans-unit>
        <trans-unit id="9edaf55b500443b684dd1328cbcf6a8752769f40" translate="yes" xml:space="preserve">
          <source>If both arguments are zero, hotpatching is disabled.</source>
          <target state="translated">Si ambos argumentos son cero,el hotpatching se desactiva.</target>
        </trans-unit>
        <trans-unit id="32b3bc364441ca8a7ce5db371cd86527cc2b0b55" translate="yes" xml:space="preserve">
          <source>If both the template and enclosing class have explicit visibility, the visibility from the template is used.</source>
          <target state="translated">Si tanto la plantilla como la clase adjunta tienen una visibilidad explícita,se utiliza la visibilidad de la plantilla.</target>
        </trans-unit>
        <trans-unit id="02529d20c3d2e23aefd28ee9dcdbc7281d16eb72" translate="yes" xml:space="preserve">
          <source>If combined with</source>
          <target state="translated">Si se combina con</target>
        </trans-unit>
        <trans-unit id="af3104b1407804a82ad43f4fa2a84131be37f920" translate="yes" xml:space="preserve">
          <source>If control flow reaches the point of the &lt;code&gt;__builtin_unreachable&lt;/code&gt;, the program is undefined. It is useful in situations where the compiler cannot deduce the unreachability of the code.</source>
          <target state="translated">Si el flujo de control alcanza el punto de &lt;code&gt;__builtin_unreachable&lt;/code&gt; , el programa no est&amp;aacute; definido. Es &amp;uacute;til en situaciones en las que el compilador no puede deducir la inalcanzabilidad del c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="36b8c90f4b777d0cb2020f4d21e6ac15532c3ad9" translate="yes" xml:space="preserve">
          <source>If debugging information is output when using the precompiled header, using</source>
          <target state="translated">Si la información de depuración se emite cuando se utiliza el encabezamiento precompilado,utilizando</target>
        </trans-unit>
        <trans-unit id="402b191a6d5b620de512d8843ce1f34d7777a814" translate="yes" xml:space="preserve">
          <source>If either of the ways of changing the assembly name of a declaration are applied to a declaration whose assembly name has already been determined (either by a previous use of one of these features, or because the compiler needed the assembly name in order to generate code), and the new name is different, a warning issues and the name does not change.</source>
          <target state="translated">Si se aplica cualquiera de las formas de cambiar el nombre de ensamblaje de una declaración a una declaración cuyo nombre de ensamblaje ya ha sido determinado (ya sea por un uso anterior de una de estas características,o porque el compilador necesitó el nombre de ensamblaje para generar el código),y el nuevo nombre es diferente,se emite una advertencia y el nombre no cambia.</target>
        </trans-unit>
        <trans-unit id="8e6cf380114ced6b961e13544b6be03dfc3354e5" translate="yes" xml:space="preserve">
          <source>If enabled, control-speculative instructions are chosen for schedule only if there are no other choices at the moment. This makes the use of the control speculation much more conservative. The default setting is disabled.</source>
          <target state="translated">Si está activada,las instrucciones de control y especulación se eligen para la programación sólo si no hay otras opciones por el momento.Esto hace que el uso de la especulación de control sea mucho más conservador.La configuración por defecto está desactivada.</target>
        </trans-unit>
        <trans-unit id="c9aeee8753743f519ff715357d9285071a0d9d86" translate="yes" xml:space="preserve">
          <source>If enabled, data-speculative instructions are chosen for schedule only if there are no other choices at the moment. This makes the use of the data speculation much more conservative. The default setting is disabled.</source>
          <target state="translated">Si está activada,las instrucciones de especulación de datos se eligen para la programación sólo si no hay otras opciones por el momento.Esto hace que el uso de la especulación de datos sea mucho más conservador.La configuración por defecto está desactivada.</target>
        </trans-unit>
        <trans-unit id="12c5281bb30137f5a28029f336bddc2453ae8835" translate="yes" xml:space="preserve">
          <source>If enabled, speculative dependencies are considered during computation of the instructions priorities. This makes the use of the speculation a bit more conservative. The default setting is disabled.</source>
          <target state="translated">Si se habilita,las dependencias especulativas se consideran durante el cálculo de las prioridades de las instrucciones.Esto hace que el uso de la especulación sea un poco más conservador.La configuración por defecto está desactivada.</target>
        </trans-unit>
        <trans-unit id="9d63d7ff73f8a910b7cb613706af4cc8bb2d95b9" translate="yes" xml:space="preserve">
          <source>If enabled, the maximum amount of space required for outgoing arguments is computed in the function prologue. This is faster on most modern CPUs because of reduced dependencies, improved scheduling and reduced stack usage when the preferred stack boundary is not equal to 2. The drawback is a notable increase in code size. This switch implies</source>
          <target state="translated">Si se activa,la cantidad máxima de espacio necesaria para los argumentos salientes se calcula en el prólogo de la función.Esto es más rápido en la mayoría de las CPU modernas debido a la reducción de las dependencias,la mejora de la programación y la reducción del uso de la pila cuando el límite de la pila preferida no es igual a 2.El inconveniente es un notable aumento del tamaño del código.Este cambio implica</target>
        </trans-unit>
        <trans-unit id="40d23331ec805b8693bd0e7ed41af8f41bbbeef4" translate="yes" xml:space="preserve">
          <source>If functions are defined in one file and are called in another file, then be sure to write this declaration in both files.</source>
          <target state="translated">Si las funciones se definen en un archivo y se llaman en otro archivo,entonces asegúrese de escribir esta declaración en ambos archivos.</target>
        </trans-unit>
        <trans-unit id="5a84ad9332942b0583d76324d55388fa827b1dc5" translate="yes" xml:space="preserve">
          <source>If it is a scalar type, or on most targets an aggregate type whose only member object is of a scalar type, or a union type whose member objects are of scalar types, the expression is interpreted by GCC as a read of the volatile object; in the other cases, the expression is only evaluated for its side effects.</source>
          <target state="translated">Si es de tipo escalar,o en la mayoría de los objetivos un tipo agregado cuyo único objeto miembro es de tipo escalar,o un tipo de unión cuyos objetos miembros son de tipo escalar,la expresión es interpretada por GCC como una lectura del objeto volátil;en los demás casos,la expresión sólo se evalúa por sus efectos secundarios.</target>
        </trans-unit>
        <trans-unit id="79c1054be8ddf1396d899393bbaa81764a2eed88" translate="yes" xml:space="preserve">
          <source>If multiple</source>
          <target state="translated">Si son múltiples</target>
        </trans-unit>
        <trans-unit id="e94921c7bd35daddf444608f5259a29f5f4c8cc8" translate="yes" xml:space="preserve">
          <source>If neither</source>
          <target state="translated">Si ninguno de los dos</target>
        </trans-unit>
        <trans-unit id="afb8c1ba0a7e5bf800f44e5494e9d700db801b00" translate="yes" xml:space="preserve">
          <source>If new system header files are installed, nothing automatically arranges to update the corrected header files. They can be updated using the &lt;code&gt;mkheaders&lt;/code&gt; script installed in</source>
          <target state="translated">Si se instalan nuevos archivos de encabezado del sistema, nada se arregla autom&amp;aacute;ticamente para actualizar los archivos de encabezado corregidos. Se pueden actualizar utilizando el script &lt;code&gt;mkheaders&lt;/code&gt; instalado en</target>
        </trans-unit>
        <trans-unit id="b7def704de696eb922c5e5ba1f5217476d727ef7" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;NSFastEnumerationState&lt;/code&gt; is defined in your code, the compiler will automatically replace &lt;code&gt;NSFastEnumerationState *&lt;/code&gt; with &lt;code&gt;struct __objcFastEnumerationState *&lt;/code&gt;, where that type is silently defined by the compiler in an identical way. This can be confusing and we recommend that you define &lt;code&gt;NSFastEnumerationState&lt;/code&gt; (as shown above) instead.</source>
          <target state="translated">Si no se define &lt;code&gt;NSFastEnumerationState&lt;/code&gt; en su c&amp;oacute;digo, el compilador reemplazar&amp;aacute; autom&amp;aacute;ticamente &lt;code&gt;NSFastEnumerationState *&lt;/code&gt; con &lt;code&gt;struct __objcFastEnumerationState *&lt;/code&gt; , donde ese tipo es definido silenciosamente por el compilador de manera id&amp;eacute;ntica. Esto puede resultar confuso y le recomendamos que defina &lt;code&gt;NSFastEnumerationState&lt;/code&gt; (como se muestra arriba) en su lugar.</target>
        </trans-unit>
        <trans-unit id="089bb39031737c14c4b1a0b430296a1926daaea0" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;arg-index&lt;/var&gt; is given to the &lt;code&gt;nonnull&lt;/code&gt; attribute, all pointer arguments are marked as non-null. To illustrate, the following declaration is equivalent to the previous example:</source>
          <target state="translated">Si no se proporciona un &lt;var&gt;arg-index&lt;/var&gt; de &lt;code&gt;nonnull&lt;/code&gt; atributo no nulo, todos los argumentos de puntero se marcan como no nulos. A modo de ilustraci&amp;oacute;n, la siguiente declaraci&amp;oacute;n es equivalente al ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="73b44337d5bc4559e8e1c4b6db36d411b8aef133" translate="yes" xml:space="preserve">
          <source>If no error occurs during compilation, run the compiler a second time, adding &lt;var&gt;opts&lt;/var&gt; and</source>
          <target state="translated">Si no se produce ning&amp;uacute;n error durante la compilaci&amp;oacute;n, ejecute el compilador por segunda vez, agregando &lt;var&gt;opts&lt;/var&gt; y</target>
        </trans-unit>
        <trans-unit id="0e662391588b3d6a0fd25b9abb8a35c922931e60" translate="yes" xml:space="preserve">
          <source>If no fixup is needed, this function simply passes through &lt;var&gt;addr&lt;/var&gt;.</source>
          <target state="translated">Si no se necesita ninguna reparaci&amp;oacute;n, esta funci&amp;oacute;n simplemente pasa por &lt;var&gt;addr&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2c0304f8188faa2beb1f6913883824900b9fd415" translate="yes" xml:space="preserve">
          <source>If not otherwise specified by an attribute, assume all calls might be beyond the offset range of the &lt;code&gt;b&lt;/code&gt; / &lt;code&gt;bl&lt;/code&gt; instructions, and therefore load the function address into a register before performing a (otherwise direct) call. This is the default.</source>
          <target state="translated">Si un atributo no especifica lo contrario, suponga que todas las llamadas pueden estar m&amp;aacute;s all&amp;aacute; del rango de compensaci&amp;oacute;n de las instrucciones &lt;code&gt;b&lt;/code&gt; / &lt;code&gt;bl&lt;/code&gt; y, por lo tanto, cargue la direcci&amp;oacute;n de la funci&amp;oacute;n en un registro antes de realizar una llamada (de otra manera directa). Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="4019c8219c3b5cd2dda4dbb0cb3bf4c2a485adff" translate="yes" xml:space="preserve">
          <source>If not otherwise specified by an attribute, assume all direct calls are in the range of the &lt;code&gt;b&lt;/code&gt; / &lt;code&gt;bl&lt;/code&gt; instructions, so use these instructions for direct calls. The default is</source>
          <target state="translated">Si un atributo no especifica lo contrario, suponga que todas las llamadas directas est&amp;aacute;n en el rango de las instrucciones &lt;code&gt;b&lt;/code&gt; / &lt;code&gt;bl&lt;/code&gt; , as&amp;iacute; que use estas instrucciones para las llamadas directas. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="12a28d9821da145a465f7298f6e4c4d208680d82" translate="yes" xml:space="preserve">
          <source>If number of memory accesses in function being instrumented is greater or equal to this number, use callbacks instead of inline checks. E.g. to disable inline code use</source>
          <target state="translated">Si el número de accesos a la memoria en función que se está instrumentando es mayor o igual a este número,utilice las llamadas de retorno en lugar de las comprobaciones en línea.Por ejemplo,para desactivar el uso de códigos en línea</target>
        </trans-unit>
        <trans-unit id="5104c1df665f6fc4dddeb5595f01af321de5cad6" translate="yes" xml:space="preserve">
          <source>If object files containing GIMPLE bytecode are stored in a library archive, say</source>
          <target state="translated">Si los archivos de objetos que contienen el código de bytes GIMPLE se almacenan en un archivo de biblioteca,digamos</target>
        </trans-unit>
        <trans-unit id="1debeabea3e55864c791086673e07af5641e2395" translate="yes" xml:space="preserve">
          <source>If patchable function entries are enabled globally using the command-line option</source>
          <target state="translated">Si se activan globalmente las entradas de funciones parcheables mediante la opción de línea de comandos</target>
        </trans-unit>
        <trans-unit id="7ae6684dfcfa35ba16cecacd5ec92f0fb9e0c04e" translate="yes" xml:space="preserve">
          <source>If profiling is active (</source>
          <target state="translated">Si la elaboración de perfiles está activa (</target>
        </trans-unit>
        <trans-unit id="88f3c4dd1f2c3c978031ca46886480a0ad40a791" translate="yes" xml:space="preserve">
          <source>If supported by the target machine, generate instructions to prefetch memory to improve the performance of loops that access large arrays.</source>
          <target state="translated">Si la máquina objetivo lo admite,genere instrucciones para prefetar la memoria para mejorar el rendimiento de los bucles que acceden a grandes matrices.</target>
        </trans-unit>
        <trans-unit id="8bfe7e580871525d66e6234642f97096fcdef387" translate="yes" xml:space="preserve">
          <source>If supported for the target machine, attempt to reorder instructions to eliminate execution stalls due to required data being unavailable. This helps machines that have slow floating point or memory load instructions by allowing other instructions to be issued until the result of the load or floating-point instruction is required.</source>
          <target state="translated">Si la máquina objetivo tiene soporte,intente reordenar las instrucciones para eliminar los puestos de ejecución debido a que los datos requeridos no están disponibles.Esto ayuda a las máquinas que tienen instrucciones de carga de memoria o de punto flotante lento,permitiendo que se emitan otras instrucciones hasta que se requiera el resultado de la instrucción de carga o de punto flotante.</target>
        </trans-unit>
        <trans-unit id="3428a2e4a1d11936eea0f07c36277bc2aa02d581" translate="yes" xml:space="preserve">
          <source>If supported for the target machine, attempt to reorder instructions to exploit instruction slots available after delayed branch instructions.</source>
          <target state="translated">Si la máquina objetivo tiene soporte,intente reordenar las instrucciones para explotar las ranuras de instrucción disponibles después de las instrucciones de rama retrasadas.</target>
        </trans-unit>
        <trans-unit id="324f5e0a0812879119b6243a7b551f6c87385665" translate="yes" xml:space="preserve">
          <source>If supported for the target machine, emit position-independent code, suitable for dynamic linking and avoiding any limit on the size of the global offset table. This option makes a difference on AArch64, m68k, PowerPC and SPARC.</source>
          <target state="translated">Si se admite para la máquina objetivo,emitir código independiente de la posición,adecuado para la vinculación dinámica y evitar cualquier límite en el tamaño de la tabla de compensación global.Esta opción marca la diferencia en AArch64,m68k,PowerPC y SPARC.</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">Si el</target>
        </trans-unit>
        <trans-unit id="848af5bfa5ce573c8e5c9af3ee618628d308338c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;LC_ALL&lt;/code&gt; environment variable is set, it overrides the value of &lt;code&gt;LC_CTYPE&lt;/code&gt; and &lt;code&gt;LC_MESSAGES&lt;/code&gt;; otherwise, &lt;code&gt;LC_CTYPE&lt;/code&gt; and &lt;code&gt;LC_MESSAGES&lt;/code&gt; default to the value of the &lt;code&gt;LANG&lt;/code&gt; environment variable. If none of these variables are set, GCC defaults to traditional C English behavior.</source>
          <target state="translated">Si se establece la variable de entorno &lt;code&gt;LC_ALL&lt;/code&gt; , anula el valor de &lt;code&gt;LC_CTYPE&lt;/code&gt; y &lt;code&gt;LC_MESSAGES&lt;/code&gt; ; de lo contrario, &lt;code&gt;LC_CTYPE&lt;/code&gt; y &lt;code&gt;LC_MESSAGES&lt;/code&gt; toman de forma predeterminada el valor de la variable de entorno &lt;code&gt;LANG&lt;/code&gt; . Si no se establece ninguna de estas variables, GCC adopta de forma predeterminada el comportamiento tradicional de C en ingl&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="927b034e0a10d14fe57f4acd375117bf77534e22" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;warning&lt;/code&gt; attribute is used on a function declaration and a call to such a function is not eliminated through dead code elimination or other optimizations, an error or warning (respectively) that includes &lt;var&gt;message&lt;/var&gt; is diagnosed. This is useful for compile-time checking, especially together with &lt;code&gt;__builtin_constant_p&lt;/code&gt; and inline functions where checking the inline function arguments is not possible through &lt;code&gt;extern char [(condition) ? 1 : -1];&lt;/code&gt; tricks.</source>
          <target state="translated">Si el atributo de &lt;code&gt;error&lt;/code&gt; o &lt;code&gt;warning&lt;/code&gt; se utiliza en una declaraci&amp;oacute;n de funci&amp;oacute;n y una llamada a dicha funci&amp;oacute;n no se elimina mediante la eliminaci&amp;oacute;n de c&amp;oacute;digo muerto u otras optimizaciones, se diagnostica un error o advertencia (respectivamente) que incluye el &lt;var&gt;message&lt;/var&gt; . Esto es &amp;uacute;til para la verificaci&amp;oacute;n en tiempo de compilaci&amp;oacute;n, especialmente junto con &lt;code&gt;__builtin_constant_p&lt;/code&gt; y funciones en l&amp;iacute;nea donde no es posible verificar los argumentos de la funci&amp;oacute;n en l&amp;iacute;nea a trav&amp;eacute;s de &lt;code&gt;extern char [(condition) ? 1 : -1];&lt;/code&gt; trucos.</target>
        </trans-unit>
        <trans-unit id="20d0c6878745134aa8d904b0690e4fcbddc7d599" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;filename&lt;/var&gt; is provided, then the dumps from all the applicable optimizations are concatenated into the &lt;var&gt;filename&lt;/var&gt;. Otherwise the dump is output onto</source>
          <target state="translated">Si se proporciona el &lt;var&gt;filename&lt;/var&gt; del archivo , los volcados de todas las optimizaciones aplicables se concatenan en el &lt;var&gt;filename&lt;/var&gt; del archivo . De lo contrario, el volcado se env&amp;iacute;a a</target>
        </trans-unit>
        <trans-unit id="9215ad70f2e3e9c6cab1765215d93885159eaa97" translate="yes" xml:space="preserve">
          <source>If the C code that follows the &lt;code&gt;asm&lt;/code&gt; makes no use of any of the output operands, use &lt;code&gt;volatile&lt;/code&gt; for the &lt;code&gt;asm&lt;/code&gt; statement to prevent the optimizers from discarding the &lt;code&gt;asm&lt;/code&gt; statement as unneeded (see &lt;a href=&quot;#Volatile&quot;&gt;Volatile&lt;/a&gt;).</source>
          <target state="translated">Si el c&amp;oacute;digo C que sigue al &lt;code&gt;asm&lt;/code&gt; no hace uso de ninguno de los operandos de salida, use &lt;code&gt;volatile&lt;/code&gt; para la declaraci&amp;oacute;n &lt;code&gt;asm&lt;/code&gt; para evitar que los optimizadores descarten la declaraci&amp;oacute;n &lt;code&gt;asm&lt;/code&gt; como innecesaria (consulte &lt;a href=&quot;#Volatile&quot;&gt;Vol&amp;aacute;til&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2aa76d6986dfd258dee402c2c95ca11459599c59" translate="yes" xml:space="preserve">
          <source>If the CPU is executing speculatively then either:</source>
          <target state="translated">Si la CPU se está ejecutando de forma especulativa,entonces tampoco:</target>
        </trans-unit>
        <trans-unit id="8fe995e077eb81e27ea124938efd43a017d00001" translate="yes" xml:space="preserve">
          <source>If the CPU is not speculatively executing the code, then &lt;var&gt;val&lt;/var&gt; is returned.</source>
          <target state="translated">Si la CPU no est&amp;aacute; ejecutando el c&amp;oacute;digo de forma especulativa, se devuelve &lt;var&gt;val&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c68ba352d7c54da4de70d37cd280b24a3feb4442" translate="yes" xml:space="preserve">
          <source>If the ISA 2.07 additions to the vector/scalar (power8-vector) instruction set are available, the following additional functions are available for 64-bit targets. New vector types (&lt;var&gt;vector __int128&lt;/var&gt; and &lt;var&gt;vector __uint128&lt;/var&gt;) are available to hold the &lt;var&gt;__int128&lt;/var&gt; and &lt;var&gt;__uint128&lt;/var&gt; types to use these builtins.</source>
          <target state="translated">Si las adiciones ISA 2.07 al conjunto de instrucciones de vector / escalar (power8-vector) est&amp;aacute;n disponibles, las siguientes funciones adicionales est&amp;aacute;n disponibles para destinos de 64 bits. Hay disponibles nuevos tipos de vector ( &lt;var&gt;vector __int128&lt;/var&gt; y &lt;var&gt;vector __uint128&lt;/var&gt; ) para contener los tipos &lt;var&gt;__int128&lt;/var&gt; y &lt;var&gt;__uint128&lt;/var&gt; para usar estos elementos internos.</target>
        </trans-unit>
        <trans-unit id="7ad5ced5d695028f0b739572f683d981d7b325cd" translate="yes" xml:space="preserve">
          <source>If the ISA 2.07 additions to the vector/scalar (power8-vector) instruction set are available, the following additional functions are available for both 32-bit and 64-bit targets. For 64-bit targets, you can use &lt;var&gt;vector long&lt;/var&gt; instead of &lt;var&gt;vector long long&lt;/var&gt;, &lt;var&gt;vector bool long&lt;/var&gt; instead of &lt;var&gt;vector bool long long&lt;/var&gt;, and &lt;var&gt;vector unsigned long&lt;/var&gt; instead of &lt;var&gt;vector unsigned long long&lt;/var&gt;.</source>
          <target state="translated">Si las adiciones ISA 2.07 al conjunto de instrucciones de vector / escalar (power8-vector) est&amp;aacute;n disponibles, las siguientes funciones adicionales est&amp;aacute;n disponibles para destinos de 32 bits y 64 bits. Para objetivos de 64 bits, puede usar &lt;var&gt;vector long&lt;/var&gt; en lugar de &lt;var&gt;vector long long&lt;/var&gt; , &lt;var&gt;vector bool long&lt;/var&gt; en lugar de &lt;var&gt;vector bool long long&lt;/var&gt; y &lt;var&gt;vector unsigned long&lt;/var&gt; en lugar de &lt;var&gt;vector unsigned long long&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c22a3317bedd3145de7eb3a31ecc603e64eb80be" translate="yes" xml:space="preserve">
          <source>If the ISA 3.0 instruction set additions (</source>
          <target state="translated">Si la instrucción ISA 3.0 establece adiciones (</target>
        </trans-unit>
        <trans-unit id="424b99254d8407b86c2beca1ac6e71a6fca8ab99" translate="yes" xml:space="preserve">
          <source>If the ISA 3.0 instruction set additions are enabled (</source>
          <target state="translated">Si el conjunto de instrucciones de ISA 3.0 las adiciones están habilitadas (</target>
        </trans-unit>
        <trans-unit id="b3ba2117601e3a207db62aaa0d548209b490cb82" translate="yes" xml:space="preserve">
          <source>If the argument to the macro has variably modified type, it is evaluated only once when using &lt;code&gt;__auto_type&lt;/code&gt;, but twice if &lt;code&gt;typeof&lt;/code&gt; is used.</source>
          <target state="translated">Si el argumento de la macro tiene un tipo modificado de forma variable, se eval&amp;uacute;a solo una vez cuando se usa &lt;code&gt;__auto_type&lt;/code&gt; , pero dos veces si se usa &lt;code&gt;typeof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5db05160eb702af65a65d649789a2509aade574" translate="yes" xml:space="preserve">
          <source>If the attribute is specified and &lt;code&gt;#pragma omp declare simd&lt;/code&gt; is present on a declaration and the</source>
          <target state="translated">Si se especifica el atributo y &lt;code&gt;#pragma omp declare simd&lt;/code&gt; est&amp;aacute; presente en una declaraci&amp;oacute;n y el</target>
        </trans-unit>
        <trans-unit id="d120c6bfa80fbe55cec1d9862d7e2421db795ea2" translate="yes" xml:space="preserve">
          <source>If the compiler was built to use the system&amp;rsquo;s headers by default, then the default for this option is the system version on which the compiler is running, otherwise the default is to make choices that are compatible with as many systems and code bases as possible.</source>
          <target state="translated">Si el compilador se cre&amp;oacute; para usar los encabezados del sistema de forma predeterminada, entonces la versi&amp;oacute;n predeterminada de esta opci&amp;oacute;n es la versi&amp;oacute;n del sistema en la que se est&amp;aacute; ejecutando el compilador; de lo contrario, la opci&amp;oacute;n predeterminada es hacer elecciones que sean compatibles con tantos sistemas y bases de c&amp;oacute;digo como sea posible.</target>
        </trans-unit>
        <trans-unit id="d67b52944ba9df1fde368725db64f0de08228c75" translate="yes" xml:space="preserve">
          <source>If the compiler&amp;rsquo;s optimization uses a function&amp;rsquo;s body or information extracted from its body to optimize/change another function, the latter is called an impacted function of the former. If a function is patched, its impacted functions should be patched too.</source>
          <target state="translated">Si la optimizaci&amp;oacute;n del compilador utiliza el cuerpo de una funci&amp;oacute;n o la informaci&amp;oacute;n extra&amp;iacute;da de su cuerpo para optimizar / cambiar otra funci&amp;oacute;n, la &amp;uacute;ltima se denomina funci&amp;oacute;n afectada de la primera. Si se parchea una funci&amp;oacute;n, tambi&amp;eacute;n se deben parchear sus funciones afectadas.</target>
        </trans-unit>
        <trans-unit id="b237760180d1507d3e5ec309754cc736d88da667" translate="yes" xml:space="preserve">
          <source>If the cryptographic instructions are enabled (</source>
          <target state="translated">Si las instrucciones criptográficas están activadas (</target>
        </trans-unit>
        <trans-unit id="4fb7464a62433bc1b1813aee95893c7c7b12fed7" translate="yes" xml:space="preserve">
          <source>If the device comes with a specific &lt;code&gt;RAMP&lt;/code&gt; register, the ISR prologue/epilogue saves/restores that SFR and initializes it with zero in case the ISR code might (implicitly) use it.</source>
          <target state="translated">Si el dispositivo viene con un registro &lt;code&gt;RAMP&lt;/code&gt; espec&amp;iacute;fico , el pr&amp;oacute;logo / ep&amp;iacute;logo de ISR guarda / restaura ese SFR y lo inicializa con cero en caso de que el c&amp;oacute;digo ISR pueda usarlo (impl&amp;iacute;citamente).</target>
        </trans-unit>
        <trans-unit id="f359291701f84a5c952e96591467d10e46106142" translate="yes" xml:space="preserve">
          <source>If the device supports RAM larger than 64 KiB and the compiler needs to change &lt;code&gt;RAMPZ&lt;/code&gt; to accomplish an operation, &lt;code&gt;RAMPZ&lt;/code&gt; is reset to zero after the operation.</source>
          <target state="translated">Si el dispositivo admite RAM de m&amp;aacute;s de 64 KiB y el compilador necesita cambiar &lt;code&gt;RAMPZ&lt;/code&gt; para realizar una operaci&amp;oacute;n, &lt;code&gt;RAMPZ&lt;/code&gt; se restablece a cero despu&amp;eacute;s de la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4b99e2eb0f30f6704cb82d8729d610b9c040ff67" translate="yes" xml:space="preserve">
          <source>If the equal sign is omitted, the default</source>
          <target state="translated">Si se omite el signo igual,el valor por defecto</target>
        </trans-unit>
        <trans-unit id="d2b152efe933ab511c3240207de045545a59413b" translate="yes" xml:space="preserve">
          <source>If the forwarding hook does not exist or returns &lt;code&gt;NULL&lt;/code&gt;, the runtime currently attempts forwarding using an older, deprecated API, and if that fails, it aborts the program. In future versions of the GNU Objective-C runtime, the runtime will immediately abort.</source>
          <target state="translated">Si el enlace de reenv&amp;iacute;o no existe o devuelve &lt;code&gt;NULL&lt;/code&gt; , el tiempo de ejecuci&amp;oacute;n actualmente intenta reenviar utilizando una API antigua y obsoleta, y si eso falla, aborta el programa. En futuras versiones del tiempo de ejecuci&amp;oacute;n de GNU Objective-C, el tiempo de ejecuci&amp;oacute;n se cancelar&amp;aacute; inmediatamente.</target>
        </trans-unit>
        <trans-unit id="fb3ee17ffd6e7e71752206840400cc69026ba54d" translate="yes" xml:space="preserve">
          <source>If the function is called repeatedly with &lt;code&gt;untrusted_index&lt;/code&gt; less than the limit of 500, then a branch predictor will learn that the block of code that returns a value stored in &lt;code&gt;array&lt;/code&gt; will be executed. If the function is subsequently called with an out-of-range value it will still try to execute that block of code first until the CPU determines that the prediction was incorrect (the CPU will unwind any incorrect operations at that point). However, depending on how the result of the function is used, it might be possible to leave traces in the cache that can reveal what was stored at the out-of-bounds location. The built-in function can be used to provide some protection against leaking data in this way by changing the code to:</source>
          <target state="translated">Si la funci&amp;oacute;n se llama repetidamente con &lt;code&gt;untrusted_index&lt;/code&gt; menor que el l&amp;iacute;mite de 500, entonces un predictor de rama aprender&amp;aacute; que se ejecutar&amp;aacute; el bloque de c&amp;oacute;digo que devuelve un valor almacenado en una &lt;code&gt;array&lt;/code&gt; . Si la funci&amp;oacute;n se llama posteriormente con un valor fuera de rango, todav&amp;iacute;a intentar&amp;aacute; ejecutar ese bloque de c&amp;oacute;digo primero hasta que la CPU determine que la predicci&amp;oacute;n fue incorrecta (la CPU deshar&amp;aacute; cualquier operaci&amp;oacute;n incorrecta en ese punto). Sin embargo, dependiendo de c&amp;oacute;mo se use el resultado de la funci&amp;oacute;n, es posible dejar rastros en la cach&amp;eacute; que puedan revelar lo que se almacen&amp;oacute; en la ubicaci&amp;oacute;n fuera de los l&amp;iacute;mites. La funci&amp;oacute;n incorporada se puede utilizar para proporcionar cierta protecci&amp;oacute;n contra la fuga de datos de esta manera cambiando el c&amp;oacute;digo a:</target>
        </trans-unit>
        <trans-unit id="4966bfe90659d4fba00a57263dad419daa50166b" translate="yes" xml:space="preserve">
          <source>If the function is declared &lt;code&gt;extern&lt;/code&gt;, then this definition of the function is used only for inlining. In no case is the function compiled as a standalone function, not even if you take its address explicitly. Such an address becomes an external reference, as if you had only declared the function, and had not defined it. This has almost the effect of a macro. The way to use this is to put a function definition in a header file with this attribute, and put another copy of the function, without &lt;code&gt;extern&lt;/code&gt;, in a library file. The definition in the header file causes most calls to the function to be inlined. If any uses of the function remain, they refer to the single copy in the library. Note that the two definitions of the functions need not be precisely the same, although if they do not have the same effect your program may behave oddly.</source>
          <target state="translated">Si la funci&amp;oacute;n se declara &lt;code&gt;extern&lt;/code&gt; , esta definici&amp;oacute;n de la funci&amp;oacute;n se usa solo para inlining. En ning&amp;uacute;n caso la funci&amp;oacute;n se compila como una funci&amp;oacute;n independiente, ni siquiera si toma su direcci&amp;oacute;n expl&amp;iacute;citamente. Dicha direcci&amp;oacute;n se convierte en una referencia externa, como si solo hubiera declarado la funci&amp;oacute;n y no la hubiera definido. Esto tiene casi el efecto de una macro. La forma de usar esto es poner una definici&amp;oacute;n de funci&amp;oacute;n en un archivo de encabezado con este atributo y poner otra copia de la funci&amp;oacute;n, sin &lt;code&gt;extern&lt;/code&gt; , en un archivo de biblioteca. La definici&amp;oacute;n en el archivo de encabezado hace que la mayor&amp;iacute;a de las llamadas a la funci&amp;oacute;n est&amp;eacute;n en l&amp;iacute;nea. Si queda alg&amp;uacute;n uso de la funci&amp;oacute;n, se refieren a la copia &amp;uacute;nica en la biblioteca. Tenga en cuenta que las dos definiciones de las funciones no necesitan ser exactamente iguales, aunque si no tienen el mismo efecto, su programa puede comportarse de manera extra&amp;ntilde;a.</target>
        </trans-unit>
        <trans-unit id="b771c97ff2c33b584d16ad8091b88c7d383e2d71" translate="yes" xml:space="preserve">
          <source>If the function is inlined in several places, the block structure in each location might not be the same. For instance, a condition might now be calculable at compile time in some instances. Because the coverage of all the uses of the inline function will be shown for the same source lines, the line counts themselves might seem inconsistent.</source>
          <target state="translated">Si la función está alineada en varios lugares,la estructura de bloques en cada lugar podría no ser la misma.Por ejemplo,una condición podría ser ahora calculable en tiempo de compilación en algunos casos.Dado que la cobertura de todos los usos de la función en línea se mostrará para las mismas líneas de origen,los propios recuentos de líneas podrían parecer incoherentes.</target>
        </trans-unit>
        <trans-unit id="f54a0365a2045222faa9a6a632a364c211ec115e" translate="yes" xml:space="preserve">
          <source>If the function is not inlined, the compiler must emit an out of line copy of the function, in any object file that needs it. If</source>
          <target state="translated">Si la función no está en línea,el compilador debe emitir una copia fuera de línea de la función,en cualquier archivo de objeto que lo necesite.Si</target>
        </trans-unit>
        <trans-unit id="1d41e4e5598657e0dd5a304d5f9d42468e2c3eb3" translate="yes" xml:space="preserve">
          <source>If the hotpatch option is enabled, a &amp;ldquo;hot-patching&amp;rdquo; function prologue is generated for all functions in the compilation unit. The funtion label is prepended with the given number of two-byte NOP instructions (&lt;var&gt;pre-halfwords&lt;/var&gt;, maximum 1000000). After the label, 2 * &lt;var&gt;post-halfwords&lt;/var&gt; bytes are appended, using the largest NOP like instructions the architecture allows (maximum 1000000).</source>
          <target state="translated">Si la opci&amp;oacute;n hotpatch est&amp;aacute; habilitada, se genera un pr&amp;oacute;logo de funci&amp;oacute;n de &quot;hot-patch&quot; para todas las funciones en la unidad de compilaci&amp;oacute;n. La etiqueta de funci&amp;oacute;n se antepone con el n&amp;uacute;mero dado de instrucciones NOP de dos bytes ( &lt;var&gt;pre-halfwords&lt;/var&gt; , m&amp;aacute;ximo 1000000). Despu&amp;eacute;s de la etiqueta, se a&amp;ntilde;aden 2 * bytes &lt;var&gt;post-halfwords&lt;/var&gt; , utilizando las instrucciones NOP m&amp;aacute;s grandes que permite la arquitectura (m&amp;aacute;ximo 1000000).</target>
        </trans-unit>
        <trans-unit id="1afbfd9c64402361ab2fa39f9fdbd1e3be8c266e" translate="yes" xml:space="preserve">
          <source>If the input program contains a function declaration such as:</source>
          <target state="translated">Si el programa de entrada contiene una declaración de función como:</target>
        </trans-unit>
        <trans-unit id="d87ca5a862edf69ec778f2863678b3c80b02aa1b" translate="yes" xml:space="preserve">
          <source>If the linker complains that an application is using too much small data, you might want to try rebuilding the less performance-critical parts with</source>
          <target state="translated">Si el enlazador se queja de que una aplicación está usando demasiados datos pequeños,puede intentar reconstruir las partes menos críticas para el rendimiento con</target>
        </trans-unit>
        <trans-unit id="2bf1dd3a359ed16413542f38135a6d9bd4288cff" translate="yes" xml:space="preserve">
          <source>If the number of candidates in the set is smaller than this value, always try to remove unnecessary ivs from the set when adding a new one.</source>
          <target state="translated">Si el número de candidatos en el conjunto es menor que este valor,trate siempre de eliminar los ivs innecesarios del conjunto cuando añada uno nuevo.</target>
        </trans-unit>
        <trans-unit id="e7428a6a85aa26ccfc1d34f1f1cde51cd5cd4798" translate="yes" xml:space="preserve">
          <source>If the operand of &lt;code&gt;__alignof__&lt;/code&gt; is an lvalue rather than a type, its value is the required alignment for its type, taking into account any minimum alignment specified by attribute &lt;code&gt;aligned&lt;/code&gt; (see &lt;a href=&quot;common-variable-attributes#Common-Variable-Attributes&quot;&gt;Common Variable Attributes&lt;/a&gt;). For example, after this declaration:</source>
          <target state="translated">Si el operando de &lt;code&gt;__alignof__&lt;/code&gt; es un lvalue en lugar de un tipo, su valor es la alineaci&amp;oacute;n requerida para su tipo, teniendo en cuenta cualquier alineaci&amp;oacute;n m&amp;iacute;nima especificada por atributo &lt;code&gt;aligned&lt;/code&gt; (consulte &lt;a href=&quot;common-variable-attributes#Common-Variable-Attributes&quot;&gt;Atributos de variables comunes&lt;/a&gt; ). Por ejemplo, despu&amp;eacute;s de esta declaraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a5fda9cca36b52c744155ff2696d3cbfb80c2db1" translate="yes" xml:space="preserve">
          <source>If the operand of the &lt;code&gt;__alignof__&lt;/code&gt; expression is a function, the expression evaluates to the alignment of the function which may be specified by attribute &lt;code&gt;aligned&lt;/code&gt; (see &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt;).</source>
          <target state="translated">Si el operando de la expresi&amp;oacute;n &lt;code&gt;__alignof__&lt;/code&gt; es una funci&amp;oacute;n, la expresi&amp;oacute;n eval&amp;uacute;a la alineaci&amp;oacute;n de la funci&amp;oacute;n que puede ser especificada por atributo &lt;code&gt;aligned&lt;/code&gt; (ver &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Atributos de funciones comunes&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="716641ab8a53f52206a358470c323b2f23eaf7fa" translate="yes" xml:space="preserve">
          <source>If the ratio of expression insertions to deletions is larger than this value for any expression, then RTL PRE inserts or removes the expression and thus leaves partially redundant computations in the instruction stream.</source>
          <target state="translated">Si la proporción de inserciones y supresiones de expresiones es mayor que este valor para cualquier expresión,entonces RTL PRE inserta o elimina la expresión y,por lo tanto,deja cálculos parcialmente redundantes en el flujo de instrucciones.</target>
        </trans-unit>
        <trans-unit id="05912318b76a1009d770bd192ecd133075c5fc90" translate="yes" xml:space="preserve">
          <source>If the register is a call-saved register, call ABI is affected: the register will not be restored in function epilogue sequences after the variable has been assigned. Therefore, functions cannot safely return to callers that assume standard ABI.</source>
          <target state="translated">Si se trata de un registro guardado en la llamada,la llamada ABI se ve afectada:el registro no se restaurará en las secuencias de epílogo de la función después de que se haya asignado la variable.Por lo tanto,las funciones no pueden volver con seguridad a los llamantes que asumen la ABI estándar.</target>
        </trans-unit>
        <trans-unit id="9d80c0f0c0e0e7931ed927bbb4a8416d7ae0d80f" translate="yes" xml:space="preserve">
          <source>If the same field is initialized multiple times, or overlapping fields of a union are initialized, the value from the last initialization is used. When a field of a union is itself a structure, the entire structure from the last field initialized is used. If any previous initializer has side effect, it is unspecified whether the side effect happens or not. Currently, GCC discards the side-effecting initializer expressions and issues a warning.</source>
          <target state="translated">Si el mismo campo se inicializa varias veces,o se inicializan campos superpuestos de una unión,se utiliza el valor de la última inicialización.Cuando un campo de una unión es en sí mismo una estructura,se utiliza la estructura completa del último campo inicializado.Si algún inicializador anterior tiene un efecto secundario,no se especifica si el efecto secundario se produce o no.En la actualidad,GCC descarta las expresiones de inicialización con efecto secundario y emite una advertencia.</target>
        </trans-unit>
        <trans-unit id="60d643b079de10a712e4f0092195d4a678550bd1" translate="yes" xml:space="preserve">
          <source>If the second argument of a shift operation is within range, check that the result of a shift operation is not undefined. Note that what exactly is considered undefined differs slightly between C and C++, as well as between ISO C90 and C99, etc.</source>
          <target state="translated">Si el segundo argumento de una operación de desplazamiento está dentro del rango,compruebe que el resultado de una operación de desplazamiento no esté indefinido.Observe que lo que se considera exactamente indefinido difiere ligeramente entre C y C++,así como entre ISO C90 y C99,etc.</target>
        </trans-unit>
        <trans-unit id="a31cdc2866161da54d441996165823d561084f93" translate="yes" xml:space="preserve">
          <source>If the selected floating-point hardware includes the NEON extension (e.g.</source>
          <target state="translated">Si el hardware de punto flotante seleccionado incluye la extensión NEON (por ejemplo.</target>
        </trans-unit>
        <trans-unit id="ba7e4ec3c7ed6c8b730bc79d728df15242bb6315" translate="yes" xml:space="preserve">
          <source>If the size of a local variable in bytes is smaller or equal to this number, directly poison (or unpoison) shadow memory instead of using run-time callbacks.</source>
          <target state="translated">Si el tamaño de una variable local en bytes es menor o igual a este número,envenenar directamente (o no envenenar)la memoria de sombras en lugar de utilizar las llamadas en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="417bd3fd4051d252d11a2c9158594ed0d6e39230" translate="yes" xml:space="preserve">
          <source>If the stack usage is (partly) dynamic and not bounded, it&amp;rsquo;s:</source>
          <target state="translated">Si el uso de la pila es (parcialmente) din&amp;aacute;mico y no est&amp;aacute; limitado, es:</target>
        </trans-unit>
        <trans-unit id="b6665e1bf11576c0ed34f60f152094f72a6d33b1" translate="yes" xml:space="preserve">
          <source>If the stack usage is (partly) dynamic but bounded, it&amp;rsquo;s:</source>
          <target state="translated">Si el uso de la pila es (parcialmente) din&amp;aacute;mico pero limitado, es:</target>
        </trans-unit>
        <trans-unit id="6185bf1adb7da0baa58ee0f68d56a9ef418a48d1" translate="yes" xml:space="preserve">
          <source>If the stack usage is fully static but exceeds the specified amount, it&amp;rsquo;s:</source>
          <target state="translated">Si el uso de la pila es completamente est&amp;aacute;tico pero excede la cantidad especificada, es:</target>
        </trans-unit>
        <trans-unit id="d70267f0ff1a52892efb70d9a08fcf6abe326706" translate="yes" xml:space="preserve">
          <source>If the target does not require instruction cache flushes, &lt;code&gt;__builtin___clear_cache&lt;/code&gt; has no effect. Otherwise either instructions are emitted in-line to clear the instruction cache or a call to the &lt;code&gt;__clear_cache&lt;/code&gt; function in libgcc is made.</source>
          <target state="translated">Si el destino no requiere vaciados de cach&amp;eacute; de instrucciones, &lt;code&gt;__builtin___clear_cache&lt;/code&gt; no tiene ning&amp;uacute;n efecto. De lo contrario, ya sea instrucciones se emiten en l&amp;iacute;nea para borrar la cach&amp;eacute; de instrucciones o una llamada a la &lt;code&gt;__clear_cache&lt;/code&gt; se hace en funci&amp;oacute;n de libgcc.</target>
        </trans-unit>
        <trans-unit id="095e473e81d277e85bb1ebdb8df1dacc96479003" translate="yes" xml:space="preserve">
          <source>If the target does not support data prefetch, the address expression is evaluated if it includes side effects but no other code is generated and GCC does not issue a warning.</source>
          <target state="translated">Si el objetivo no admite la búsqueda previa de datos,la expresión de la dirección se evalúa si incluye efectos secundarios pero no se genera ningún otro código y el GCC no emite una advertencia.</target>
        </trans-unit>
        <trans-unit id="063fcca71547a7fd5efc66500b8f981bd9c39ed3" translate="yes" xml:space="preserve">
          <source>If the target supports a BSS section, GCC by default puts variables that are initialized to zero into BSS. This can save space in the resulting code.</source>
          <target state="translated">Si el objetivo soporta una sección de SRS,GCC por defecto pone las variables que están inicializadas a cero en las SRS.Esto puede ahorrar espacio en el código resultante.</target>
        </trans-unit>
        <trans-unit id="3918a65b7ea046bcd3f9722a5e8050706b67b421" translate="yes" xml:space="preserve">
          <source>If the transaction aborts, all side effects are undone and an abort code encoded as a bit mask is returned. The following macros are defined:</source>
          <target state="translated">Si la transacción se aborta,se deshacen todos los efectos secundarios y se devuelve un código de aborto codificado como una máscara de bits.Se definen las siguientes macros:</target>
        </trans-unit>
        <trans-unit id="52878fb9a18ac14d0e8c56cabf2833c060108631" translate="yes" xml:space="preserve">
          <source>If the value in it has side effects, the side effects happen only once, not for each initialized field by the range initializer.</source>
          <target state="translated">Si el valor en él tiene efectos secundarios,los efectos secundarios se producen sólo una vez,no para cada campo inicializado por el inicializador de rango.</target>
        </trans-unit>
        <trans-unit id="eea091306a656215179432ee609d12ba3a9d954d" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;y&lt;/code&gt; is always 1, 2 or 3, then &lt;code&gt;x&lt;/code&gt; is always initialized, but GCC doesn&amp;rsquo;t know this. To suppress the warning, you need to provide a default case with assert(0) or similar code.</source>
          <target state="translated">Si el valor de &lt;code&gt;y&lt;/code&gt; es siempre 1, 2 o 3, entonces &lt;code&gt;x&lt;/code&gt; siempre se inicializa, pero GCC no lo sabe. Para suprimir la advertencia, debe proporcionar un caso predeterminado con aserci&amp;oacute;n (0) o c&amp;oacute;digo similar.</target>
        </trans-unit>
        <trans-unit id="6a0552d924c971b406818fb3dc8c14b487a51639" translate="yes" xml:space="preserve">
          <source>If the variable is referenced in inline assembly, the type of access must be provided to the compiler via constraints (see &lt;a href=&quot;constraints#Constraints&quot;&gt;Constraints&lt;/a&gt;). Accesses from basic asms are not supported.</source>
          <target state="translated">Si se hace referencia a la variable en el ensamblaje en l&amp;iacute;nea, el tipo de acceso debe proporcionarse al compilador mediante restricciones (consulte &lt;a href=&quot;constraints#Constraints&quot;&gt;Restricciones&lt;/a&gt; ). No se admiten accesos desde conjuntos b&amp;aacute;sicos.</target>
        </trans-unit>
        <trans-unit id="710a7177647056e46d73c6a14fa58cb0a4d39cb4" translate="yes" xml:space="preserve">
          <source>If there are no output operands but there are input operands, place two consecutive colons where the output operands would go:</source>
          <target state="translated">Si no hay operandos de salida pero hay operandos de entrada,coloque dos dos puntos consecutivos donde irían los operandos de salida:</target>
        </trans-unit>
        <trans-unit id="ba1e7edd0bd3070d7470d6998361492b87d52104" translate="yes" xml:space="preserve">
          <source>If there is no pattern or mechanism to provide a lock-free instruction sequence, a call is made to an external routine with the same parameters to be resolved at run time.</source>
          <target state="translated">Si no hay un patrón o mecanismo para proporcionar una secuencia de instrucciones sin bloqueo,se hace una llamada a una rutina externa con los mismos parámetros que se resolverán en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="76caf5beb996fc90102a47daa7e154a5cb406f3a" translate="yes" xml:space="preserve">
          <source>If these options are provided the S/390 back end emits additional instructions in the function prologue that trigger a trap if the stack size is &lt;var&gt;stack-guard&lt;/var&gt; bytes above the &lt;var&gt;stack-size&lt;/var&gt; (remember that the stack on S/390 grows downward). If the &lt;var&gt;stack-guard&lt;/var&gt; option is omitted the smallest power of 2 larger than the frame size of the compiled function is chosen. These options are intended to be used to help debugging stack overflow problems. The additionally emitted code causes only little overhead and hence can also be used in production-like systems without greater performance degradation. The given values have to be exact powers of 2 and &lt;var&gt;stack-size&lt;/var&gt; has to be greater than &lt;var&gt;stack-guard&lt;/var&gt; without exceeding 64k. In order to be efficient the extra code makes the assumption that the stack starts at an address aligned to the value given by &lt;var&gt;stack-size&lt;/var&gt;. The &lt;var&gt;stack-guard&lt;/var&gt; option can only be used in conjunction with &lt;var&gt;stack-size&lt;/var&gt;.</source>
          <target state="translated">Si se proporcionan estas opciones, el back-end del S / 390 emite instrucciones adicionales en el pr&amp;oacute;logo de la funci&amp;oacute;n que desencadenan una trampa si el tama&amp;ntilde;o de la pila es &lt;var&gt;stack-guard&lt;/var&gt; bytes de protecci&amp;oacute;n de pila por encima del &lt;var&gt;stack-size&lt;/var&gt; (recuerde que la pila en S / 390 crece hacia abajo). Si se omite la opci&amp;oacute;n &lt;var&gt;stack-guard&lt;/var&gt; , se elige la potencia m&amp;aacute;s peque&amp;ntilde;a de 2 m&amp;aacute;s grande que el tama&amp;ntilde;o de trama de la funci&amp;oacute;n compilada. Estas opciones est&amp;aacute;n dise&amp;ntilde;adas para ayudar a depurar problemas de desbordamiento de pila. El c&amp;oacute;digo emitido adicionalmente provoca solo una peque&amp;ntilde;a sobrecarga y, por lo tanto, tambi&amp;eacute;n se puede usar en sistemas similares a la producci&amp;oacute;n sin una mayor degradaci&amp;oacute;n del rendimiento. Los valores dados deben ser potencias exactas de 2 y &lt;var&gt;stack-size&lt;/var&gt; debe ser mayor que el &lt;var&gt;stack-guard&lt;/var&gt; de la pila.sin superar los 64k. Para ser eficiente, el c&amp;oacute;digo adicional asume que la pila comienza en una direcci&amp;oacute;n alineada con el valor dado por &lt;var&gt;stack-size&lt;/var&gt; . La opci&amp;oacute;n &lt;var&gt;stack-guard&lt;/var&gt; solo se puede utilizar junto con &lt;var&gt;stack-size&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a905ee4ba472cb30116f3f77a848f112c04b6376" translate="yes" xml:space="preserve">
          <source>If this happens, you should recompile your code with</source>
          <target state="translated">Si esto sucede,deberías recompilar tu código con</target>
        </trans-unit>
        <trans-unit id="1cc1d69b5f6b24d749c4393c1e5384e6327ba002" translate="yes" xml:space="preserve">
          <source>If this option appears multiple times in the command line with different values specified, &amp;lsquo;</source>
          <target state="translated">Si esta opci&amp;oacute;n aparece varias veces en la l&amp;iacute;nea de comando con diferentes valores especificados, '</target>
        </trans-unit>
        <trans-unit id="7d789a669772c260255b8f486a50720c5dbf98e3" translate="yes" xml:space="preserve">
          <source>If this option is disabled, the compiler uses the most efficient instruction. In the previous example, that might be a 32-bit load instruction, even though that accesses bytes that do not contain any portion of the bit-field, or memory-mapped registers unrelated to the one being updated.</source>
          <target state="translated">Si esta opción está desactivada,el compilador utiliza la instrucción más eficiente.En el ejemplo anterior,podría tratarse de una instrucción de carga de 32 bits,aunque acceda a bytes que no contengan ninguna porción del campo de bits,o a registros de mapas de memoria no relacionados con el que se está actualizando.</target>
        </trans-unit>
        <trans-unit id="eaaa3704bd89671f3908d72dc5973515cc911101" translate="yes" xml:space="preserve">
          <source>If this option is enabled, the compiler tries to avoid unnecessarily overaligning functions. It attempts to instruct the assembler to align by the amount specified by</source>
          <target state="translated">Si esta opción está activada,el compilador intenta evitar sobrealinear innecesariamente las funciones.Intenta instruir al compilador para que alinee en la cantidad especificada por</target>
        </trans-unit>
        <trans-unit id="7074bcc3f488dbf4492fda0d639c0f8273ca6d14" translate="yes" xml:space="preserve">
          <source>If this option is not provided but</source>
          <target state="translated">Si no se ofrece esta opción pero</target>
        </trans-unit>
        <trans-unit id="b89db9dde06a530a5dff7a4661614320224ef048" translate="yes" xml:space="preserve">
          <source>If this option is not used, the single-core application programming model is used.</source>
          <target state="translated">Si no se utiliza esta opción,se utiliza el modelo de programación de aplicaciones de un solo núcleo.</target>
        </trans-unit>
        <trans-unit id="58f2a7b1d53a81872af6e83acac9efe5419c83d5" translate="yes" xml:space="preserve">
          <source>If this option is set it also selects the type of hardware multiply support to use, unless this is overridden by an explicit</source>
          <target state="translated">Si se establece esta opción,también se selecciona el tipo de soporte de multiplicación de hardware que se va a utilizar,a menos que esto sea anulado por una explícita</target>
        </trans-unit>
        <trans-unit id="13cec7c0becaf2d393aabd05cb427709a6c05830" translate="yes" xml:space="preserve">
          <source>If this option is used, the compiler will warn for declarations of variable-length arrays whose size is either unbounded, or bounded by an argument that allows the array size to exceed &lt;var&gt;byte-size&lt;/var&gt; bytes. This is similar to how</source>
          <target state="translated">Si se utiliza esta opci&amp;oacute;n, el compilador advertir&amp;aacute; sobre declaraciones de matrices de longitud variable cuyo tama&amp;ntilde;o no est&amp;eacute; acotado o est&amp;eacute; limitado por un argumento que permita que el tama&amp;ntilde;o de la matriz supere los &lt;var&gt;byte-size&lt;/var&gt; byte. Esto es similar a c&amp;oacute;mo</target>
        </trans-unit>
        <trans-unit id="c3115ee12356444486b8dfe277e34da87b4c9653" translate="yes" xml:space="preserve">
          <source>If this variable is set, its value specifies a UNIX timestamp to be used in replacement of the current date and time in the &lt;code&gt;__DATE__&lt;/code&gt; and &lt;code&gt;__TIME__&lt;/code&gt; macros, so that the embedded timestamps become reproducible.</source>
          <target state="translated">Si se establece esta variable, su valor especifica una marca de tiempo UNIX que se utilizar&amp;aacute; en reemplazo de la fecha y hora actuales en las macros &lt;code&gt;__DATE__&lt;/code&gt; y &lt;code&gt;__TIME__&lt;/code&gt; , de modo que las marcas de tiempo incrustadas se vuelvan reproducibles.</target>
        </trans-unit>
        <trans-unit id="9e2fd261f951c508769059b9f0362dce31b86177" translate="yes" xml:space="preserve">
          <source>If this variable is set, its value specifies how to output dependencies for Make based on the non-system header files processed by the compiler. System header files are ignored in the dependency output.</source>
          <target state="translated">Si se establece esta variable,su valor especifica cómo producir dependencias para Make basadas en los archivos de cabecera no del sistema procesados por el compilador.Los archivos de cabecera del sistema son ignorados en la salida de las dependencias.</target>
        </trans-unit>
        <trans-unit id="a402efdff3876f11c94bdea172224e741634fd39" translate="yes" xml:space="preserve">
          <source>If used for a function, print the PLT suffix and generate PIC code. For example, emit &lt;code&gt;foo@PLT&lt;/code&gt; instead of &amp;rsquo;foo&amp;rsquo; for the function foo(). If used for a constant, drop all syntax-specific prefixes and issue the bare constant. See &lt;code&gt;p&lt;/code&gt; above.</source>
          <target state="translated">Si se usa para una funci&amp;oacute;n, imprima el sufijo PLT y genere el c&amp;oacute;digo PIC. Por ejemplo, emita &lt;code&gt;foo@PLT&lt;/code&gt; lugar de 'foo' para la funci&amp;oacute;n foo (). Si se usa para una constante, elimine todos los prefijos espec&amp;iacute;ficos de sintaxis y emita la constante b&amp;aacute;sica. Consulte la &lt;code&gt;p&lt;/code&gt; &amp;aacute;g . Anterior.</target>
        </trans-unit>
        <trans-unit id="0aee4afea693faf480212e1e7dfd95c798d52751" translate="yes" xml:space="preserve">
          <source>If you are invoking the preprocessor from a shell or shell-like program you may need to use the shell&amp;rsquo;s quoting syntax to protect characters such as spaces that have a meaning in the shell syntax.</source>
          <target state="translated">Si est&amp;aacute; invocando el preprocesador desde un shell o un programa similar al shell, es posible que deba utilizar la sintaxis de comillas del shell para proteger caracteres como los espacios que tienen un significado en la sintaxis del shell.</target>
        </trans-unit>
        <trans-unit id="12dd6be4f44a03f04923a3d7c38a665528824bfc" translate="yes" xml:space="preserve">
          <source>If you are not using a linker with plugin support and/or do not enable the linker plugin, then the objects inside</source>
          <target state="translated">Si no está usando un linker con soporte de plugin y/o no habilita el plugin del linker,entonces los objetos dentro</target>
        </trans-unit>
        <trans-unit id="dadbd9ac438963390bc7bff3cc4c1fa602dc81f8" translate="yes" xml:space="preserve">
          <source>If you are not using some other optimization option, consider using</source>
          <target state="translated">Si no está utilizando alguna otra opción de optimización,considere la posibilidad de utilizar</target>
        </trans-unit>
        <trans-unit id="c0c121f354142152248081fdee3df09a5e0cff31" translate="yes" xml:space="preserve">
          <source>If you are using Cfront-model code, you can probably get away with not using</source>
          <target state="translated">Si estás usando el código de Cfront-model,probablemente puedas evitar el uso de</target>
        </trans-unit>
        <trans-unit id="670c5a80eac2c68f98a0b7952c25d85ec989c07c" translate="yes" xml:space="preserve">
          <source>If you are using a &amp;ldquo;Foundation&amp;rdquo; library such as GNUstep-Base, this library will provide you with a rich set of functionality to do most of the inspection tasks, and you probably will only need direct access to the GNU Objective-C runtime API to define new classes or methods.</source>
          <target state="translated">Si est&amp;aacute; utilizando una biblioteca &quot;Foundation&quot; como GNUstep-Base, esta biblioteca le proporcionar&amp;aacute; un amplio conjunto de funciones para realizar la mayor&amp;iacute;a de las tareas de inspecci&amp;oacute;n, y probablemente solo necesitar&amp;aacute; acceso directo a la API de tiempo de ejecuci&amp;oacute;n de GNU Objective-C para definir nuevas clases o m&amp;eacute;todos.</target>
        </trans-unit>
        <trans-unit id="f60cfeeeec61609632220d7b04102d2cfb0874a6" translate="yes" xml:space="preserve">
          <source>If you are writing a header file that must work when included in ISO C programs, write &lt;code&gt;__typeof__&lt;/code&gt; instead of &lt;code&gt;typeof&lt;/code&gt;. See &lt;a href=&quot;alternate-keywords#Alternate-Keywords&quot;&gt;Alternate Keywords&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; escribiendo un archivo de encabezado que debe funcionar cuando se incluye en programas ISO C, escriba &lt;code&gt;__typeof__&lt;/code&gt; en lugar de &lt;code&gt;typeof&lt;/code&gt; . Consulte &lt;a href=&quot;alternate-keywords#Alternate-Keywords&quot;&gt;Palabras clave alternativas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="047e86cc1cc9d18346ee9ad5f63aecd5602b5f99" translate="yes" xml:space="preserve">
          <source>If you are writing a header file to be included in ISO C90 programs, write &lt;code&gt;__inline__&lt;/code&gt; instead of &lt;code&gt;inline&lt;/code&gt;. See &lt;a href=&quot;alternate-keywords#Alternate-Keywords&quot;&gt;Alternate Keywords&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; escribiendo un archivo de encabezado para incluirlo en programas ISO C90, escriba &lt;code&gt;__inline__&lt;/code&gt; en lugar de &lt;code&gt;inline&lt;/code&gt; . Consulte &lt;a href=&quot;alternate-keywords#Alternate-Keywords&quot;&gt;Palabras clave alternativas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbd2d15a4f5e85df131685d7eb92f6861e37e279" translate="yes" xml:space="preserve">
          <source>If you care about controlling the amount of memory that is accessed, use volatile but do not use bit-fields.</source>
          <target state="translated">Si le preocupa controlar la cantidad de memoria a la que se accede,use volátiles pero no use campos de bits.</target>
        </trans-unit>
        <trans-unit id="0103e1abfe788f8d50e7fc73d958416e72e0b9c1" translate="yes" xml:space="preserve">
          <source>If you compile a module &lt;var&gt;Mod&lt;/var&gt; with</source>
          <target state="translated">Si compila un m&amp;oacute;dulo &lt;var&gt;Mod&lt;/var&gt; con</target>
        </trans-unit>
        <trans-unit id="47d85eced409c6f6fef0defc52869795ed0b0f14" translate="yes" xml:space="preserve">
          <source>If you define a class in a header file marked with &amp;lsquo;</source>
          <target state="translated">Si define una clase en un archivo de encabezado marcado con '</target>
        </trans-unit>
        <trans-unit id="8af3483bb66c1cf78841141fb90f1ef9efc295a7" translate="yes" xml:space="preserve">
          <source>If you do not specify an optimization level option</source>
          <target state="translated">Si no se especifica una opción de nivel de optimización</target>
        </trans-unit>
        <trans-unit id="0524dbf059780b836548e3795cd65f22c493bbb4" translate="yes" xml:space="preserve">
          <source>If you do use differing options when generating and using the precompiled header, the actual behavior is a mixture of the behavior for the options. For instance, if you use</source>
          <target state="translated">Si utiliza diferentes opciones al generar y utilizar el encabezado precompilado,el comportamiento real es una mezcla del comportamiento de las opciones.Por ejemplo,si usas</target>
        </trans-unit>
        <trans-unit id="6615402a003808b60f77e922f8fff7dc102cea3e" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t know the type of the operand, you can still do this, but you must use &lt;code&gt;typeof&lt;/code&gt; or &lt;code&gt;__auto_type&lt;/code&gt; (see &lt;a href=&quot;typeof#Typeof&quot;&gt;Typeof&lt;/a&gt;).</source>
          <target state="translated">Si no conoce el tipo de operando, a&amp;uacute;n puede hacerlo, pero debe usar &lt;code&gt;typeof&lt;/code&gt; o &lt;code&gt;__auto_type&lt;/code&gt; (ver &lt;a href=&quot;typeof#Typeof&quot;&gt;Typeof&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c085ab8b04d2de8c46788dc7f554d15750ff8940" translate="yes" xml:space="preserve">
          <source>If you have trouble using GCC.</source>
          <target state="translated">Si tienes problemas para usar el GCC.</target>
        </trans-unit>
        <trans-unit id="4152886dce97a4266954e0590ef45338d28d4f3b" translate="yes" xml:space="preserve">
          <source>If you invoke &lt;code&gt;gcov&lt;/code&gt; with multiple input files, the contributions from each input file are summed. Typically you would invoke it with the same list of files as the final link of your executable.</source>
          <target state="translated">Si invoca &lt;code&gt;gcov&lt;/code&gt; con varios archivos de entrada, se suman las contribuciones de cada archivo de entrada. Normalmente, lo invocar&amp;iacute;as con la misma lista de archivos que el enlace final de tu ejecutable.</target>
        </trans-unit>
        <trans-unit id="f78ebb50b8c8401143c21ca977cd992331a9d441" translate="yes" xml:space="preserve">
          <source>If you invoke GCC in parallel, compiling several different source files that share a common base name in different subdirectories or the same source file compiled for multiple output destinations, it is likely that the different parallel compilers will interfere with each other, and overwrite the temporary files. For instance:</source>
          <target state="translated">Si invoca GCC en paralelo,compilando varios archivos de origen diferentes que comparten un nombre de base común en diferentes subdirectorios o el mismo archivo de origen compilado para múltiples destinos de salida,es probable que los diferentes compiladores paralelos interfieran entre sí y sobrescriban los archivos temporales.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="339873ba9c437ffb773ea97b43d76bef2cd414b1" translate="yes" xml:space="preserve">
          <source>If you know the above will only be reading a ten byte array then you could instead use a memory input like: &lt;code&gt;&quot;m&quot; (*(const char (*)[10]) p)&lt;/code&gt;.</source>
          <target state="translated">Si sabe que lo anterior solo leer&amp;aacute; una matriz de diez bytes, entonces podr&amp;iacute;a usar una entrada de memoria como: &lt;code&gt;&quot;m&quot; (*(const char (*)[10]) p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="888965c4f3b549f1f0054a0f4c6ff67115a7146e" translate="yes" xml:space="preserve">
          <source>If you need a Standard compliant library, then you need to find one, as GCC does not provide one. The GNU C library (called &lt;code&gt;glibc&lt;/code&gt;) provides ISO C, POSIX, BSD, SystemV and X/Open compatibility for GNU/Linux and HURD-based GNU systems; no recent version of it supports other systems, though some very old versions did. Version 2.2 of the GNU C library includes nearly complete C99 support. You could also ask your operating system vendor if newer libraries are available.</source>
          <target state="translated">Si necesita una biblioteca que cumpla con los est&amp;aacute;ndares, entonces necesita encontrar una, ya que GCC no la proporciona. La biblioteca GNU C (llamada &lt;code&gt;glibc&lt;/code&gt; ) proporciona compatibilidad ISO C, POSIX, BSD, SystemV y X / Open para sistemas GNU / Linux y GNU basados ​​en HURD; ninguna versi&amp;oacute;n reciente es compatible con otros sistemas, aunque algunas versiones muy antiguas s&amp;iacute;. La versi&amp;oacute;n 2.2 de la biblioteca GNU C incluye compatibilidad casi completa con C99. Tambi&amp;eacute;n puede preguntarle al proveedor de su sistema operativo si hay bibliotecas m&amp;aacute;s nuevas disponibles.</target>
        </trans-unit>
        <trans-unit id="2295b8a8afca796af761f37955429fb2dfb303ab" translate="yes" xml:space="preserve">
          <source>If you need to precompile the same header file for different languages, targets, or compiler options, you can instead make a &lt;em&gt;directory&lt;/em&gt; named like</source>
          <target state="translated">Si necesita precompilar el mismo archivo de encabezado para diferentes idiomas, destinos u opciones del compilador, puede crear un &lt;em&gt;directorio&lt;/em&gt; llamado como</target>
        </trans-unit>
        <trans-unit id="66af9e4f8d685ec9e9b50745c5edb5982da51a9b" translate="yes" xml:space="preserve">
          <source>If you need to read the volatile object after an assignment has occurred, you must use a separate expression with an intervening sequence point.</source>
          <target state="translated">Si necesita leer el objeto volátil después de que se haya producido una asignación,debe utilizar una expresión separada con un punto de secuencia intermedio.</target>
        </trans-unit>
        <trans-unit id="4adf572d889db0dbe74d88ef8bb1d09b3f0a1cca" translate="yes" xml:space="preserve">
          <source>If you only want some of the stages of compilation, you can use</source>
          <target state="translated">Si sólo quieres algunas de las etapas de la compilación,puedes usar</target>
        </trans-unit>
        <trans-unit id="0a3a127b379e27c78040de67c2f4f38df68d44ac" translate="yes" xml:space="preserve">
          <source>If you plan to use &lt;code&gt;gcov&lt;/code&gt; to help optimize your code, you must first compile your program with a special GCC option &amp;lsquo;</source>
          <target state="translated">Si planea usar &lt;code&gt;gcov&lt;/code&gt; para ayudar a optimizar su c&amp;oacute;digo, primero debe compilar su programa con una opci&amp;oacute;n especial de GCC '</target>
        </trans-unit>
        <trans-unit id="89a00b1663443b615a5e906a67310faf3ab9d3e4" translate="yes" xml:space="preserve">
          <source>If you receive a linker error message that saying you have overflowed the available TOC space, you can reduce the amount of TOC space used with the</source>
          <target state="translated">Si recibes un mensaje de error del enlazador diciendo que has desbordado el espacio TOC disponible,puedes reducir la cantidad de espacio TOC usado con el</target>
        </trans-unit>
        <trans-unit id="be0941cee2405a3cef991d81a7e61b7d98631fbb" translate="yes" xml:space="preserve">
          <source>If you replaced &lt;code&gt;short_a&lt;/code&gt; with &lt;code&gt;short&lt;/code&gt; in the variable declaration, the above program would abort when compiled with</source>
          <target state="translated">Si reemplaza &lt;code&gt;short_a&lt;/code&gt; con &lt;code&gt;short&lt;/code&gt; en la declaraci&amp;oacute;n de la variable, el programa anterior abortar&amp;iacute;a cuando se compila con</target>
        </trans-unit>
        <trans-unit id="35d1d8ed39d0b8c7b146243c81d4152cdc148fcf" translate="yes" xml:space="preserve">
          <source>If you specify &amp;lsquo;</source>
          <target state="translated">Si especifica '</target>
        </trans-unit>
        <trans-unit id="4ecc2b870bc1bb7d3b980a000c9f6dcec5995fb9" translate="yes" xml:space="preserve">
          <source>If you specify both &lt;code&gt;inline&lt;/code&gt; and &lt;code&gt;extern&lt;/code&gt; in the function definition, then the definition is used only for inlining. In no case is the function compiled on its own, not even if you refer to its address explicitly. Such an address becomes an external reference, as if you had only declared the function, and had not defined it.</source>
          <target state="translated">Si especifica tanto &lt;code&gt;inline&lt;/code&gt; como &lt;code&gt;extern&lt;/code&gt; en la definici&amp;oacute;n de la funci&amp;oacute;n, la definici&amp;oacute;n se usa solo para inlining. En ning&amp;uacute;n caso la funci&amp;oacute;n se compila por s&amp;iacute; sola, ni siquiera si hace referencia a su direcci&amp;oacute;n expl&amp;iacute;citamente. Dicha direcci&amp;oacute;n se convierte en una referencia externa, como si solo hubiera declarado la funci&amp;oacute;n y no la hubiera definido.</target>
        </trans-unit>
        <trans-unit id="5d47cb731371550330a13465931e86c5d293dfdf" translate="yes" xml:space="preserve">
          <source>If you specify command-line switches such as</source>
          <target state="translated">Si se especifican interruptores de línea de comandos como</target>
        </trans-unit>
        <trans-unit id="6dac1f1fb59b9ffca6f761fa60561e481b2e6270" translate="yes" xml:space="preserve">
          <source>If you specify neither</source>
          <target state="translated">Si no especifica ninguna de las dos cosas</target>
        </trans-unit>
        <trans-unit id="c921e7f4f95a0df5eb637ba56c7aabab978aaee6" translate="yes" xml:space="preserve">
          <source>If you specify the optional &lt;var&gt;n&lt;/var&gt;, the optimization and code generation done at link time is executed in parallel using &lt;var&gt;n&lt;/var&gt; parallel jobs by utilizing an installed &lt;code&gt;make&lt;/code&gt; program. The environment variable &lt;code&gt;MAKE&lt;/code&gt; may be used to override the program used. The default value for &lt;var&gt;n&lt;/var&gt; is 1.</source>
          <target state="translated">Si especifica el &lt;var&gt;n&lt;/var&gt; opcional , la optimizaci&amp;oacute;n y la generaci&amp;oacute;n de c&amp;oacute;digo realizadas en el momento del enlace se ejecutan en paralelo utilizando &lt;var&gt;n&lt;/var&gt; trabajos paralelos utilizando un programa &lt;code&gt;make&lt;/code&gt; instalado . La variable de entorno &lt;code&gt;MAKE&lt;/code&gt; se puede utilizar para anular el programa utilizado. El valor predeterminado para &lt;var&gt;n&lt;/var&gt; es 1.</target>
        </trans-unit>
        <trans-unit id="925aa9cac99e94c7e1b3007e94e2857fd742f461" translate="yes" xml:space="preserve">
          <source>If you still run out of space in the TOC even when you specify both of these options, specify</source>
          <target state="translated">Si todavía te quedas sin espacio en la TOC incluso cuando especificas ambas opciones,especifica</target>
        </trans-unit>
        <trans-unit id="e9f3b7bcc19fa8799f793151f5d918c0eb44cc5c" translate="yes" xml:space="preserve">
          <source>If you try to call the nested function through its address after the containing function exits, all hell breaks loose. If you try to call it after a containing scope level exits, and if it refers to some of the variables that are no longer in scope, you may be lucky, but it&amp;rsquo;s not wise to take the risk. If, however, the nested function does not refer to anything that has gone out of scope, you should be safe.</source>
          <target state="translated">Si intenta llamar a la funci&amp;oacute;n anidada a trav&amp;eacute;s de su direcci&amp;oacute;n despu&amp;eacute;s de que la funci&amp;oacute;n contenedora sale, se desatar&amp;aacute; el infierno. Si intenta llamarlo despu&amp;eacute;s de que sale un nivel de alcance contenedor, y si se refiere a algunas de las variables que ya no est&amp;aacute;n en el alcance, puede tener suerte, pero no es prudente correr el riesgo. Sin embargo, si la funci&amp;oacute;n anidada no se refiere a nada que haya salido del alcance, deber&amp;iacute;a estar seguro.</target>
        </trans-unit>
        <trans-unit id="f927a3385a1b1e51d949287257534f3a4443c5fc" translate="yes" xml:space="preserve">
          <source>If you update the system&amp;rsquo;s header files, such as by installing a new system version, the fixed header files of GCC are not automatically updated. They can be updated using the &lt;code&gt;mkheaders&lt;/code&gt; script installed in</source>
          <target state="translated">Si actualiza los archivos de encabezado del sistema, por ejemplo, al instalar una nueva versi&amp;oacute;n del sistema, los archivos de encabezado fijo de GCC no se actualizan autom&amp;aacute;ticamente. Se pueden actualizar utilizando el script &lt;code&gt;mkheaders&lt;/code&gt; instalado en</target>
        </trans-unit>
        <trans-unit id="41fb10bf832524090b9ab05176d0ed5567a508f5" translate="yes" xml:space="preserve">
          <source>If you use</source>
          <target state="translated">Si usas</target>
        </trans-unit>
        <trans-unit id="6a51a2c7443f8a2b859ded2344689b9dd5a96d35" translate="yes" xml:space="preserve">
          <source>If you use &amp;lsquo;</source>
          <target state="translated">Si utiliza '</target>
        </trans-unit>
        <trans-unit id="1eb60252a45f0973d8c5683aecd8b85683d307d3" translate="yes" xml:space="preserve">
          <source>If you use both this option and the</source>
          <target state="translated">Si utiliza tanto esta opción como la</target>
        </trans-unit>
        <trans-unit id="daf14f5a30ee5ca1525b7be167b116e92944e7ce" translate="yes" xml:space="preserve">
          <source>If you use multiple</source>
          <target state="translated">Si usas múltiples</target>
        </trans-unit>
        <trans-unit id="9b9352d7bdc60d6db5e3f97a4150de5fffc4de3b" translate="yes" xml:space="preserve">
          <source>If you use one big file to do the instantiations, you may want to compile it without</source>
          <target state="translated">Si usas un archivo grande para hacer las instancias,tal vez quieras compilarlo sin</target>
        </trans-unit>
        <trans-unit id="d5658f3cda5684fd922808fa10e4319b5a492e30" translate="yes" xml:space="preserve">
          <source>If you use one of the &lt;code&gt;__flash&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; address spaces you must arrange your linker script to locate the &lt;code&gt;.progmem&lt;var&gt;N&lt;/var&gt;.data&lt;/code&gt; sections according to your needs.</source>
          <target state="translated">Si utiliza uno de los espacios de direcciones &lt;code&gt;__flash&lt;var&gt;N&lt;/var&gt;&lt;/code&gt; , debe organizar su secuencia de comandos del enlazador para ubicar las secciones &lt;code&gt;.progmem&lt;var&gt;N&lt;/var&gt;.data&lt;/code&gt; acuerdo con sus necesidades.</target>
        </trans-unit>
        <trans-unit id="d09fff5b63f8a00b0aa50a2fbc9e05727d5eaa55" translate="yes" xml:space="preserve">
          <source>If you use the</source>
          <target state="translated">Si usas el</target>
        </trans-unit>
        <trans-unit id="0c2eabb891cc235e2e02c3ade4b4c6be5a7c7761" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;inline&lt;/code&gt; qualifier, then for inlining purposes the size of the &lt;code&gt;asm&lt;/code&gt; statement is taken as the smallest size possible (see &lt;a href=&quot;size-of-an-asm#Size-of-an-asm&quot;&gt;Size of an asm&lt;/a&gt;).</source>
          <target state="translated">Si usa el calificador en &lt;code&gt;inline&lt;/code&gt; , entonces, para prop&amp;oacute;sitos de alineaci&amp;oacute;n, el tama&amp;ntilde;o de la instrucci&amp;oacute;n &lt;code&gt;asm&lt;/code&gt; se toma como el tama&amp;ntilde;o m&amp;aacute;s peque&amp;ntilde;o posible (consulte &lt;a href=&quot;size-of-an-asm#Size-of-an-asm&quot;&gt;Tama&amp;ntilde;o de un asm&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d0a1d145962ca52d117f00e82a8a34efa685f04" translate="yes" xml:space="preserve">
          <source>If you use the ISA 3.0 instruction set (</source>
          <target state="translated">Si utiliza el conjunto de instrucciones ISA 3.0 (</target>
        </trans-unit>
        <trans-unit id="3b409b718d6983a24e16eccb9909125cc43f2697" translate="yes" xml:space="preserve">
          <source>If you want to pass an option that takes a separate argument, you must use</source>
          <target state="translated">Si quieres pasar una opción que toma un argumento separado,debes usar</target>
        </trans-unit>
        <trans-unit id="01e57dac3d1293541430d1619103f3be6de91e09" translate="yes" xml:space="preserve">
          <source>If you want to pass an option that takes an argument, you must use</source>
          <target state="translated">Si quieres pasar una opción que toma un argumento,debes usar</target>
        </trans-unit>
        <trans-unit id="57c0d52053735b1deca65f8fe95302a40e91aba4" translate="yes" xml:space="preserve">
          <source>If you want to pass the array first and the length afterward, you can use a forward declaration in the parameter list&amp;mdash;another GNU extension.</source>
          <target state="translated">Si desea pasar la matriz primero y la longitud despu&amp;eacute;s, puede usar una declaraci&amp;oacute;n de avance en la lista de par&amp;aacute;metros, otra extensi&amp;oacute;n GNU.</target>
        </trans-unit>
        <trans-unit id="714721fbe0a57745166a774e2ee80658db42639e" translate="yes" xml:space="preserve">
          <source>If you want to recompile source files that do not actually use your global register variable so they do not use the specified register for any other purpose, you need not actually add the global register declaration to their source code. It suffices to specify the compiler option</source>
          <target state="translated">Si desea recompilar archivos fuente que no utilizan realmente su variable de registro global para que no utilicen el registro especificado para ningún otro propósito,no es necesario que añada la declaración de registro global a su código fuente.Basta con especificar la opción del compilador</target>
        </trans-unit>
        <trans-unit id="63035fe8f0fef33a809f5df21a239bff0f434564" translate="yes" xml:space="preserve">
          <source>If you want to warn about code that uses the uninitialized value of the variable in its own initializer, use the</source>
          <target state="translated">Si quiere advertir sobre el código que utiliza el valor no inicializado de la variable en su propio inicializador,utilice el</target>
        </trans-unit>
        <trans-unit id="1f9d39a0d621d29f6b4df2f19650e527eb6087e6" translate="yes" xml:space="preserve">
          <source>If you want your own collection object to be usable with fast enumeration, you need to have it implement the method</source>
          <target state="translated">Si quiere que su propio objeto de colección sea utilizable con una enumeración rápida,necesita que implemente el método</target>
        </trans-unit>
        <trans-unit id="66ce7bf0d3f3a0ea10a8e8123399a75d9055c922" translate="yes" xml:space="preserve">
          <source>If you wish to define a function-like macro on the command line, write its argument list with surrounding parentheses before the equals sign (if any). Parentheses are meaningful to most shells, so you should quote the option. With &lt;code&gt;sh&lt;/code&gt; and &lt;code&gt;csh&lt;/code&gt;,</source>
          <target state="translated">Si desea definir una macro similar a una funci&amp;oacute;n en la l&amp;iacute;nea de comando, escriba su lista de argumentos entre par&amp;eacute;ntesis antes del signo igual (si corresponde). Los par&amp;eacute;ntesis son significativos para la mayor&amp;iacute;a de los shells, por lo que debe citar la opci&amp;oacute;n. Con &lt;code&gt;sh&lt;/code&gt; y &lt;code&gt;csh&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="344eca13d4f5455ce9ed14a9174152844b040aa2" translate="yes" xml:space="preserve">
          <source>If your code needs to support multiple assembler dialects (for example, if you are writing public headers that need to support a variety of compilation options), use constructs of this form:</source>
          <target state="translated">Si su código necesita soportar múltiples dialectos de ensamblador (por ejemplo,si está escribiendo cabeceras públicas que necesitan soportar una variedad de opciones de compilación),utilice construcciones de este formulario:</target>
        </trans-unit>
        <trans-unit id="489624b43d62801c5096e0cef6c84a4128aa3f2e" translate="yes" xml:space="preserve">
          <source>If, for some reason, you want to include letter &amp;lsquo;</source>
          <target state="translated">Si, por alguna raz&amp;oacute;n, desea incluir la letra '</target>
        </trans-unit>
        <trans-unit id="8ae25dcd1480cd59f0776f409a8f3b4cc8c76dee" translate="yes" xml:space="preserve">
          <source>If, instead, you use the GCC driver to create shared libraries, you may find that they are not always linked with the shared</source>
          <target state="translated">Si,en cambio,utiliza el controlador GCC para crear bibliotecas compartidas,puede que descubra que no siempre están enlazadas con el</target>
        </trans-unit>
        <trans-unit id="7d34e1e1ae89800680b004320ebb086b09cf39f6" translate="yes" xml:space="preserve">
          <source>Ignore the &lt;code&gt;#ident&lt;/code&gt; directive.</source>
          <target state="translated">Ignore la directiva &lt;code&gt;#ident&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e82df27ea7fceb83aac6e28c3926e8f714c2de0" translate="yes" xml:space="preserve">
          <source>Immediate 15-bit unsigned integer</source>
          <target state="translated">Entero inmediato de 15 bits sin firmar</target>
        </trans-unit>
        <trans-unit id="25ebf6700b63624d3804d20faa7de74e2dccc87c" translate="yes" xml:space="preserve">
          <source>Immediate 16-bit signed integer</source>
          <target state="translated">Un entero inmediato de 16 bits firmado</target>
        </trans-unit>
        <trans-unit id="c2ce26e27211c1d69d3a406bee1c55a3cfc3b488" translate="yes" xml:space="preserve">
          <source>Immediate 32-bit integer in range -16..4294967295 (i.e. 32-bit unsigned integer or &amp;lsquo;</source>
          <target state="translated">Entero inmediato de 32 bits en el rango -16..4294967295 (es decir, entero sin signo de 32 bits o '</target>
        </trans-unit>
        <trans-unit id="7ce04d3df5932775f166ab61ebe67634f6cff4f5" translate="yes" xml:space="preserve">
          <source>Immediate 32-bit signed integer that can be attached to an instruction encoding</source>
          <target state="translated">Un entero inmediato de 32 bits firmado que se puede adjuntar a una codificación de instrucciones</target>
        </trans-unit>
        <trans-unit id="95af07c0237447c6b15292985f8e2b14ec413d35" translate="yes" xml:space="preserve">
          <source>Immediate 64-bit constant that can be split into two &amp;lsquo;</source>
          <target state="translated">Constante inmediata de 64 bits que se puede dividir en dos '</target>
        </trans-unit>
        <trans-unit id="aea4f97beb4642aabcdf84f409c00fa5cd5c2c91" translate="yes" xml:space="preserve">
          <source>Immediate constant -1</source>
          <target state="translated">Constante inmediata -1</target>
        </trans-unit>
        <trans-unit id="293172a51e9ef5dbf0bb7e7f454796275cc1f905" translate="yes" xml:space="preserve">
          <source>Immediate constant that can be inlined in an instruction encoding: integer -16..64, or float 0.0, +/-0.5, +/-1.0, +/-2.0, +/-4.0, 1.0/(2.0*PI)</source>
          <target state="translated">Constante inmediata que puede ser alineada en una codificación de instrucción:entero -16..64,o flotante 0.0,+/-0.5,+/-1.0,+/-2.0,+/-4.0,1.0/(2.0*PI)</target>
        </trans-unit>
        <trans-unit id="a56a5101429aaf4e851ed409b055e85e8d91d6b8" translate="yes" xml:space="preserve">
          <source>Immediate integer in the range -16 to 64</source>
          <target state="translated">Entero inmediato en el rango de -16 a 64</target>
        </trans-unit>
        <trans-unit id="bf320f9d296e81a49f73cab866d640531aefcfad" translate="yes" xml:space="preserve">
          <source>Implement (do not implement) -fno-plt and long calls using an inline PLT call sequence that supports lazy linking and long calls to functions in dlopen&amp;rsquo;d shared libraries. Inline PLT calls are only supported on PowerPC64 ELFv2 and 32-bit PowerPC systems with newer GNU linkers, and are enabled by default if the support is detected when configuring GCC, and, in the case of 32-bit PowerPC, if GCC is configured with</source>
          <target state="translated">Implemente (no implemente) -fno-plt y llamadas largas usando una secuencia de llamadas PLT en l&amp;iacute;nea que admita enlaces perezosos y llamadas largas a funciones en bibliotecas compartidas abiertas. Las llamadas PLT en l&amp;iacute;nea solo se admiten en sistemas PowerPC64 ELFv2 y PowerPC de 32 bits con enlazadores GNU m&amp;aacute;s nuevos y est&amp;aacute;n habilitadas de forma predeterminada si se detecta el soporte al configurar GCC y, en el caso de PowerPC de 32 bits, si GCC est&amp;aacute; configurado con</target>
        </trans-unit>
        <trans-unit id="f6c8b1a3b3ce20b0f24d10325bb5a9fda3cc0723" translate="yes" xml:space="preserve">
          <source>Implies no inter-thread ordering constraints.</source>
          <target state="translated">No implica ninguna restricción en el ordenamiento de los hilos.</target>
        </trans-unit>
        <trans-unit id="fe96af122b5bf84f1ddc818f1e5f57ac3e7dac8c" translate="yes" xml:space="preserve">
          <source>Improved AMD Athlon CPU with MMX, 3DNow!, enhanced 3DNow! and full SSE instruction set support.</source>
          <target state="translated">CPU AMD Athlon mejorada con MMX,3DNow!,3DNow! mejorado y soporte completo para el conjunto de instrucciones SSE.</target>
        </trans-unit>
        <trans-unit id="6774c0ca18d629c919e07781b4bc4345f81613ce" translate="yes" xml:space="preserve">
          <source>Improved support for generic programming.</source>
          <target state="translated">Mejora del apoyo a la programación genérica.</target>
        </trans-unit>
        <trans-unit id="bb701b014b08c67fb59b6b752448015c50d54c43" translate="yes" xml:space="preserve">
          <source>Improved version of Intel Pentium 4 CPU with 64-bit extensions, MMX, SSE, SSE2 and SSE3 instruction set support.</source>
          <target state="translated">Versión mejorada de la CPU del Intel Pentium 4 con extensiones de 64 bits,soporte de conjuntos de instrucciones MMX,SSE,SSE2 y SSE3.</target>
        </trans-unit>
        <trans-unit id="ed782143dc7e1163d3eb2323e646f10006e40097" translate="yes" xml:space="preserve">
          <source>Improved version of Intel Pentium 4 CPU with MMX, SSE, SSE2 and SSE3 instruction set support.</source>
          <target state="translated">Versión mejorada de la CPU del Intel Pentium 4 con soporte para el conjunto de instrucciones MMX,SSE,SSE2 y SSE3.</target>
        </trans-unit>
        <trans-unit id="8a73deb51d5b08d19d0486183c731c2e4df58a6c" translate="yes" xml:space="preserve">
          <source>Improved versions of AMD K6 CPU with MMX and 3DNow! instruction set support.</source>
          <target state="translated">Versiones mejoradas de la CPU AMD K6 con soporte para el conjunto de instrucciones MMX y 3DNow!</target>
        </trans-unit>
        <trans-unit id="0640019f239b6c731b94ce729c56eafeb42fbdce" translate="yes" xml:space="preserve">
          <source>Improved versions of AMD K8 cores with SSE3 instruction set support.</source>
          <target state="translated">Versiones mejoradas de los núcleos de AMD K8 con soporte para el conjunto de instrucciones SSE3.</target>
        </trans-unit>
        <trans-unit id="faa77d9eb98f8c3bb3a99e6c2fd6a673c7a1ef4f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&amp;lt;stddef.h&amp;gt;&lt;/code&gt;, &lt;code&gt;NULL&lt;/code&gt; expands to &lt;code&gt;((void *)0)&lt;/code&gt;. GCC does not provide the other headers which define &lt;code&gt;NULL&lt;/code&gt; and some library implementations may use other definitions in those headers.</source>
          <target state="translated">En &lt;code&gt;&amp;lt;stddef.h&amp;gt;&lt;/code&gt; , &lt;code&gt;NULL&lt;/code&gt; se expande a &lt;code&gt;((void *)0)&lt;/code&gt; . GCC no proporciona los otros encabezados que definen &lt;code&gt;NULL&lt;/code&gt; y algunas implementaciones de biblioteca pueden usar otras definiciones en esos encabezados.</target>
        </trans-unit>
        <trans-unit id="94f792f5735cf258c95fd93f04f6f7c58a83d70b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;get_i()&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt; is not used in a dependent context, so the compiler will look for a name declared at the enclosing namespace scope (which is the global scope here). It will not look into the base class, since that is dependent and you may declare specializations of &lt;code&gt;Base&lt;/code&gt; even after declaring &lt;code&gt;Derived&lt;/code&gt;, so the compiler cannot really know what &lt;code&gt;i&lt;/code&gt; would refer to. If there is no global variable &lt;code&gt;i&lt;/code&gt;, then you will get an error message.</source>
          <target state="translated">En &lt;code&gt;get_i()&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; no se usa en un contexto dependiente, por lo que el compilador buscar&amp;aacute; un nombre declarado en el &amp;aacute;mbito del espacio de nombres adjunto (que es el &amp;aacute;mbito global aqu&amp;iacute;). No buscar&amp;aacute; en la clase base, ya que es dependiente y puede declarar especializaciones de &lt;code&gt;Base&lt;/code&gt; incluso despu&amp;eacute;s de declarar &lt;code&gt;Derived&lt;/code&gt; , por lo que el compilador no puede saber realmente a qu&amp;eacute; &lt;code&gt;i&lt;/code&gt; referir&amp;iacute;a. Si no hay una variable global &lt;code&gt;i&lt;/code&gt; , aparecer&amp;aacute; un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="1efd435b2fd7ff4eeb1d3caefe51e97ec2eabff1" translate="yes" xml:space="preserve">
          <source>In C code, this option controls the placement of global variables defined without an initializer, known as &lt;em&gt;tentative definitions&lt;/em&gt; in the C standard. Tentative definitions are distinct from declarations of a variable with the &lt;code&gt;extern&lt;/code&gt; keyword, which do not allocate storage.</source>
          <target state="translated">En el c&amp;oacute;digo C, esta opci&amp;oacute;n controla la ubicaci&amp;oacute;n de las variables globales definidas sin un inicializador, conocidas como &lt;em&gt;definiciones provisionales&lt;/em&gt; en el est&amp;aacute;ndar C. Las definiciones provisionales son distintas de las declaraciones de una variable con la palabra clave &lt;code&gt;extern&lt;/code&gt; , que no asignan almacenamiento.</target>
        </trans-unit>
        <trans-unit id="986d71cafa07e6d2f235ac194e79a8e70cb9cccf" translate="yes" xml:space="preserve">
          <source>In C mode, this is equivalent to</source>
          <target state="translated">En el modo C,esto equivale a</target>
        </trans-unit>
        <trans-unit id="6e29cf5656ff22cce837fe364a063ee35412d5b9" translate="yes" xml:space="preserve">
          <source>In C this option does not warn about the universal zero initializer &amp;lsquo;</source>
          <target state="translated">En C, esta opci&amp;oacute;n no advierte sobre el inicializador de cero universal '</target>
        </trans-unit>
        <trans-unit id="2f3a5ba446573452e29640c8fc16cb4e894d48dc" translate="yes" xml:space="preserve">
          <source>In C++ code, this allows member names in structures to be similar to previous types declarations.</source>
          <target state="translated">En el código C++,esto permite que los nombres de los miembros en las estructuras sean similares a las declaraciones de tipos anteriores.</target>
        </trans-unit>
        <trans-unit id="c8175f71005ecf03750f6f6a8eb8dfe31c736137" translate="yes" xml:space="preserve">
          <source>In C++ the value of an object is only affected by changes within its lifetime: when the constructor begins, the object has an indeterminate value, and any changes during the lifetime of the object are dead when the object is destroyed. Normally dead store elimination will take advantage of this; if your code relies on the value of the object storage persisting beyond the lifetime of the object, you can use this flag to disable this optimization. To preserve stores before the constructor starts (e.g. because your operator new clears the object storage) but still treat the object as dead after the destructor you, can use</source>
          <target state="translated">En C++el valor de un objeto sólo se ve afectado por los cambios dentro de su vida:cuando el constructor comienza,el objeto tiene un valor indeterminado,y cualquier cambio durante la vida del objeto está muerto cuando el objeto es destruido.Normalmente,la eliminación del almacenamiento muerto se aprovechará de esto;si su código depende de que el valor del almacenamiento del objeto persista más allá de la vida útil del objeto,puede utilizar este indicador para desactivar esta optimización.Para preservar los almacenes antes de que el constructor comience (por ejemplo,porque su operador borra el almacenamiento de objetos)pero aún así tratar el objeto como muerto después del destructor,puede usar</target>
        </trans-unit>
        <trans-unit id="168fb41a49baf3aa442f73f3ecb6a40cd4d6ca59" translate="yes" xml:space="preserve">
          <source>In C++, &amp;lsquo;</source>
          <target state="translated">En C ++, '</target>
        </trans-unit>
        <trans-unit id="1bcce97889f7dbf32fa6b64e8c64b08099b3f7a1" translate="yes" xml:space="preserve">
          <source>In C++, attribute visibility (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;) can also be applied to class, struct, union and enum types. Unlike other type attributes, the attribute must appear between the initial keyword and the name of the type; it cannot appear after the body of the type.</source>
          <target state="translated">En C ++, la visibilidad de atributos (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; ) tambi&amp;eacute;n se puede aplicar a los tipos de clase, estructura, uni&amp;oacute;n y enumeraci&amp;oacute;n. A diferencia de otros atributos de tipo, el atributo debe aparecer entre la palabra clave inicial y el nombre del tipo; no puede aparecer despu&amp;eacute;s del cuerpo del tipo.</target>
        </trans-unit>
        <trans-unit id="41407820aea4af6aceb3725e14d20bcfa5717ed8" translate="yes" xml:space="preserve">
          <source>In C++, if a template argument has limited visibility, this restriction is implicitly propagated to the template instantiation. Otherwise, template instantiations and specializations default to the visibility of their template.</source>
          <target state="translated">En C++,si un argumento de plantilla tiene una visibilidad limitada,esta restricción se propaga implícitamente a la instanciación de la plantilla.De lo contrario,las instancias y especializaciones de la plantilla predeterminan la visibilidad de su plantilla.</target>
        </trans-unit>
        <trans-unit id="453e27477f405b0f81788514a49ffd79d08ff550" translate="yes" xml:space="preserve">
          <source>In C++, if an initializer is present for a thread-local variable, it must be a &lt;var&gt;constant-expression&lt;/var&gt;, as defined in 5.19.2 of the ANSI/ISO C++ standard.</source>
          <target state="translated">En C ++, si hay un inicializador para una variable local de subproceso, debe ser una &lt;var&gt;constant-expression&lt;/var&gt; , como se define en 5.19.2 del est&amp;aacute;ndar ANSI / ISO C ++.</target>
        </trans-unit>
        <trans-unit id="9e8da9f4a402f87aeb0e1e0768c85b6e521a3ae7" translate="yes" xml:space="preserve">
          <source>In C++, pointer to member functions (PMFs) are implemented using a wide pointer of sorts to handle all the possible call mechanisms; the PMF needs to store information about how to adjust the &amp;lsquo;</source>
          <target state="translated">En C ++, el puntero a las funciones miembro (PMF) se implementan utilizando una especie de puntero ancho para manejar todos los posibles mecanismos de llamada; el PMF necesita almacenar informaci&amp;oacute;n sobre c&amp;oacute;mo ajustar el '</target>
        </trans-unit>
        <trans-unit id="34a26947af0331ebcf8b3ff5e4127f49a113bd19" translate="yes" xml:space="preserve">
          <source>In C++, the &lt;code&gt;ifunc&lt;/code&gt; attribute takes a string that is the mangled name of the resolver function. A C++ resolver for a non-static member function of class &lt;code&gt;C&lt;/code&gt; should be declared to return a pointer to a non-member function taking pointer to &lt;code&gt;C&lt;/code&gt; as the first argument, followed by the same arguments as of the implementation function. G++ checks the signatures of the two functions and issues a</source>
          <target state="translated">En C ++, el atributo &lt;code&gt;ifunc&lt;/code&gt; toma una cadena que es el nombre mutilado de la funci&amp;oacute;n de resoluci&amp;oacute;n. Se debe declarar un resolutor de C ++ para una funci&amp;oacute;n miembro no est&amp;aacute;tica de la clase &lt;code&gt;C&lt;/code&gt; para devolver un puntero a una funci&amp;oacute;n no miembro tomando el puntero a &lt;code&gt;C&lt;/code&gt; como primer argumento, seguido de los mismos argumentos que la funci&amp;oacute;n de implementaci&amp;oacute;n. G ++ comprueba las firmas de las dos funciones y emite un</target>
        </trans-unit>
        <trans-unit id="dae3c25a08855a03a679edfb667679b322123fbc" translate="yes" xml:space="preserve">
          <source>In C++, the logic operators &lt;code&gt;!, &amp;amp;&amp;amp;, ||&lt;/code&gt; are available for vectors. &lt;code&gt;!v&lt;/code&gt; is equivalent to &lt;code&gt;v == 0&lt;/code&gt;, &lt;code&gt;a &amp;amp;&amp;amp; b&lt;/code&gt; is equivalent to &lt;code&gt;a!=0 &amp;amp; b!=0&lt;/code&gt; and &lt;code&gt;a || b&lt;/code&gt; is equivalent to &lt;code&gt;a!=0 | b!=0&lt;/code&gt;. For mixed operations between a scalar &lt;code&gt;s&lt;/code&gt; and a vector &lt;code&gt;v&lt;/code&gt;, &lt;code&gt;s &amp;amp;&amp;amp; v&lt;/code&gt; is equivalent to &lt;code&gt;s?v!=0:0&lt;/code&gt; (the evaluation is short-circuit) and &lt;code&gt;v &amp;amp;&amp;amp; s&lt;/code&gt; is equivalent to &lt;code&gt;v!=0 &amp;amp; (s?-1:0)&lt;/code&gt;.</source>
          <target state="translated">En C ++, los operadores l&amp;oacute;gicos &lt;code&gt;!, &amp;amp;&amp;amp;, ||&lt;/code&gt; est&amp;aacute;n disponibles para vectores. &lt;code&gt;!v&lt;/code&gt; es equivalente &lt;code&gt;v == 0&lt;/code&gt; , &lt;code&gt;a &amp;amp;&amp;amp; b&lt;/code&gt; es equivalente a &lt;code&gt;a!=0 &amp;amp; b!=0&lt;/code&gt; y &lt;code&gt;a || b&lt;/code&gt; es equivalente a &lt;code&gt;a!=0 | b!=0&lt;/code&gt; . Para operaciones mixtas entre un escalar &lt;code&gt;s&lt;/code&gt; y un vector &lt;code&gt;v&lt;/code&gt; , &lt;code&gt;s &amp;amp;&amp;amp; v&lt;/code&gt; es equivalente a &lt;code&gt;s?v!=0:0&lt;/code&gt; (la evaluaci&amp;oacute;n es cortocircuito) y &lt;code&gt;v &amp;amp;&amp;amp; s&lt;/code&gt; es equivalente a &lt;code&gt;v!=0 &amp;amp; (s?-1:0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="260b901dabc2f639a1fcfb92f83b3a8bfc6792cb" translate="yes" xml:space="preserve">
          <source>In C++, the ternary operator &lt;code&gt;?:&lt;/code&gt; is available. &lt;code&gt;a?b:c&lt;/code&gt;, where &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; are vectors of the same type and &lt;code&gt;a&lt;/code&gt; is an integer vector with the same number of elements of the same size as &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, computes all three arguments and creates a vector &lt;code&gt;{a[0]?b[0]:c[0], a[1]?b[1]:c[1], &amp;hellip;}&lt;/code&gt;. Note that unlike in OpenCL, &lt;code&gt;a&lt;/code&gt; is thus interpreted as &lt;code&gt;a != 0&lt;/code&gt; and not &lt;code&gt;a &amp;lt; 0&lt;/code&gt;. As in the case of binary operations, this syntax is also accepted when one of &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt; is a scalar that is then transformed into a vector. If both &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; are scalars and the type of &lt;code&gt;true?b:c&lt;/code&gt; has the same size as the element type of &lt;code&gt;a&lt;/code&gt;, then &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; are converted to a vector type whose elements have this type and with the same number of elements as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">En C ++, el operador ternario &lt;code&gt;?:&lt;/code&gt; Est&amp;aacute; disponible. &lt;code&gt;a?b:c&lt;/code&gt; , donde &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; son vectores del mismo tipo y &lt;code&gt;a&lt;/code&gt; es un vector de enteros con el mismo n&amp;uacute;mero de elementos del mismo tama&amp;ntilde;o que &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; , calcula las tres argumentos y crea un vector &lt;code&gt;{a[0]?b[0]:c[0], a[1]?b[1]:c[1], &amp;hellip;}&lt;/code&gt; . Tenga en cuenta que, a diferencia de OpenCL, &lt;code&gt;a&lt;/code&gt; se interpreta como &lt;code&gt;a != 0&lt;/code&gt; y no &lt;code&gt;a &amp;lt; 0&lt;/code&gt; . Como en el caso de operaciones binarias, esta sintaxis tambi&amp;eacute;n se acepta cuando uno de &lt;code&gt;b&lt;/code&gt; o &lt;code&gt;c&lt;/code&gt; es un escalar que se transforma despu&amp;eacute;s en un vector. Si ambos &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; son escalares y el tipo de &lt;code&gt;true?b:c&lt;/code&gt; tiene el mismo tama&amp;ntilde;o que el tipo de elemento de &lt;code&gt;a&lt;/code&gt; , entonces &lt;code&gt;b&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; son convertidos a un tipo de vector cuyos elementos tienen este tipo y con el mismo n&amp;uacute;mero de elementos como &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e8e3384895cb64dc59dfb4ef3c2eae30e005995" translate="yes" xml:space="preserve">
          <source>In C++, the visibility attribute applies to types as well as functions and objects, because in C++ types have linkage. A class must not have greater visibility than its non-static data member types and bases, and class members default to the visibility of their class. Also, a declaration without explicit visibility is limited to the visibility of its type.</source>
          <target state="translated">En C++,el atributo de visibilidad se aplica tanto a los tipos como a las funciones y objetos,porque en C++los tipos tienen vinculación.Una clase no debe tener mayor visibilidad que sus tipos y bases de miembros de datos no estáticos,y los miembros de la clase tienen por defecto la visibilidad de su clase.Además,una declaración sin visibilidad explícita se limita a la visibilidad de su tipo.</target>
        </trans-unit>
        <trans-unit id="9870b14c476e69190f3f39c0be8be66122cac26a" translate="yes" xml:space="preserve">
          <source>In C++, the warning is issued when an explicit specialization of a primary template declared with attribute &lt;code&gt;alloc_align&lt;/code&gt;, &lt;code&gt;alloc_size&lt;/code&gt;, &lt;code&gt;assume_aligned&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;format_arg&lt;/code&gt;, &lt;code&gt;malloc&lt;/code&gt;, or &lt;code&gt;nonnull&lt;/code&gt; is declared without it. Attributes &lt;code&gt;deprecated&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;warning&lt;/code&gt; suppress the warning. (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;).</source>
          <target state="translated">En C ++, la advertencia se emite cuando una especializaci&amp;oacute;n expl&amp;iacute;cita de una plantilla primaria declarada con el atributo &lt;code&gt;alloc_align&lt;/code&gt; , &lt;code&gt;alloc_size&lt;/code&gt; , &lt;code&gt;assume_aligned&lt;/code&gt; , &lt;code&gt;format&lt;/code&gt; , &lt;code&gt;format_arg&lt;/code&gt; , &lt;code&gt;malloc&lt;/code&gt; o &lt;code&gt;nonnull&lt;/code&gt; se declara sin &amp;eacute;l. Los atributos en &lt;code&gt;deprecated&lt;/code&gt; , el &lt;code&gt;error&lt;/code&gt; y la &lt;code&gt;warning&lt;/code&gt; suprimen la advertencia. (ver &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9914fa32f31272fbd1b3c9fd5655fe7c161328ef" translate="yes" xml:space="preserve">
          <source>In C++, this attribute does not depend on &lt;code&gt;extern&lt;/code&gt; in any way, but it still requires the &lt;code&gt;inline&lt;/code&gt; keyword to enable its special behavior.</source>
          <target state="translated">En C ++, este atributo no depende de &lt;code&gt;extern&lt;/code&gt; de ninguna manera, pero a&amp;uacute;n requiere la palabra clave en &lt;code&gt;inline&lt;/code&gt; para habilitar su comportamiento especial.</target>
        </trans-unit>
        <trans-unit id="1330ec9305a2cf36952504f041eeaa71d08a1559" translate="yes" xml:space="preserve">
          <source>In C++, this pragma silently applies only to declarations with &amp;ldquo;C&amp;rdquo; linkage. Again, &lt;code&gt;asm&lt;/code&gt; labels do not have this restriction.</source>
          <target state="translated">En C ++, este pragma se aplica silenciosamente solo a declaraciones con enlace &quot;C&quot;. Nuevamente, las etiquetas &lt;code&gt;asm&lt;/code&gt; no tienen esta restricci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4f1560146bfb02b0050b7346bcee56f1168f8456" translate="yes" xml:space="preserve">
          <source>In C++, this switch only affects the &lt;code&gt;typeof&lt;/code&gt; keyword, since &lt;code&gt;asm&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; are standard keywords. You may want to use the</source>
          <target state="translated">En C ++, este cambio solo afecta al tipo de &lt;code&gt;typeof&lt;/code&gt; clave, ya que &lt;code&gt;asm&lt;/code&gt; e &lt;code&gt;inline&lt;/code&gt; son palabras clave est&amp;aacute;ndar. Es posible que desee utilizar el</target>
        </trans-unit>
        <trans-unit id="83513182660c016337c6a43ced48177d4ad0ef0c" translate="yes" xml:space="preserve">
          <source>In C++, you can mark member functions and static member variables of a class with the visibility attribute. This is useful if you know a particular method or static member variable should only be used from one shared object; then you can mark it hidden while the rest of the class has default visibility. Care must be taken to avoid breaking the One Definition Rule; for example, it is usually not useful to mark an inline method as hidden without marking the whole class as hidden.</source>
          <target state="translated">En C++,puedes marcar las funciones de miembros y las variables estáticas de miembros de una clase con el atributo de visibilidad.Esto es útil si sabes que un método particular o una variable miembro estática sólo debe utilizarse de un objeto compartido;entonces puedes marcarlo como oculto mientras que el resto de la clase tiene visibilidad por defecto.Hay que tener cuidado de no romper la regla de la definición única;por ejemplo,no suele ser útil marcar un método en línea como oculto sin marcar toda la clase como oculta.</target>
        </trans-unit>
        <trans-unit id="1263d4b3bd19eaa09ddd9de78312a5a79d915aa7" translate="yes" xml:space="preserve">
          <source>In C++14, &lt;code&gt;f&lt;/code&gt; calls &lt;code&gt;f&amp;lt;void(*)()&amp;gt;&lt;/code&gt;, but in C++17 it calls &lt;code&gt;f&amp;lt;void(*)()noexcept&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En C ++ 14, &lt;code&gt;f&lt;/code&gt; llama a &lt;code&gt;f&amp;lt;void(*)()&amp;gt;&lt;/code&gt; , pero en C ++ 17 llama a &lt;code&gt;f&amp;lt;void(*)()noexcept&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3eaf8f9d1fd2934be9e06d429d221c630b5bf0a" translate="yes" xml:space="preserve">
          <source>In C++17, the compiler is required to omit these temporaries, but this option still affects trivial member functions.</source>
          <target state="translated">En C++17,el compilador debe omitir estos temporales,pero esta opción sigue afectando a las funciones de los miembros triviales.</target>
        </trans-unit>
        <trans-unit id="2fd9362a64ee90151b4f33ed9f7535e5f0047820" translate="yes" xml:space="preserve">
          <source>In C, &lt;code&gt;__PRETTY_FUNCTION__&lt;/code&gt; is yet another name for &lt;code&gt;__func__&lt;/code&gt;, except that at file (or, in C++, namespace scope), it evaluates to the string &lt;code&gt;&quot;top level&quot;&lt;/code&gt;. In addition, in C++, &lt;code&gt;__PRETTY_FUNCTION__&lt;/code&gt; contains the signature of the function as well as its bare name. For example, this program:</source>
          <target state="translated">En C, &lt;code&gt;__PRETTY_FUNCTION__&lt;/code&gt; es otro nombre para &lt;code&gt;__func__&lt;/code&gt; , excepto que en el archivo (o, en C ++, &amp;aacute;mbito del espacio de nombres), se eval&amp;uacute;a como la cadena &lt;code&gt;&quot;top level&quot;&lt;/code&gt; . Adem&amp;aacute;s, en C ++, &lt;code&gt;__PRETTY_FUNCTION__&lt;/code&gt; contiene la firma de la funci&amp;oacute;n as&amp;iacute; como su nombre desnudo. Por ejemplo, este programa:</target>
        </trans-unit>
        <trans-unit id="89c3cbeabc9fb0c94d32392b571a5dbe1ffa12b0" translate="yes" xml:space="preserve">
          <source>In C, a compound literal designates an unnamed object with static or automatic storage duration. In C++, a compound literal designates a temporary object that only lives until the end of its full-expression. As a result, well-defined C code that takes the address of a subobject of a compound literal can be undefined in C++, so G++ rejects the conversion of a temporary array to a pointer. For instance, if the array compound literal example above appeared inside a function, any subsequent use of &lt;code&gt;foo&lt;/code&gt; in C++ would have undefined behavior because the lifetime of the array ends after the declaration of &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">En C, un literal compuesto designa un objeto sin nombre con una duraci&amp;oacute;n de almacenamiento est&amp;aacute;tica o autom&amp;aacute;tica. En C ++, un literal compuesto designa un objeto temporal que solo vive hasta el final de su expresi&amp;oacute;n completa. Como resultado, el c&amp;oacute;digo C bien definido que toma la direcci&amp;oacute;n de un subobjeto de un literal compuesto puede no estar definido en C ++, por lo que G ++ rechaza la conversi&amp;oacute;n de una matriz temporal en un puntero. Por ejemplo, si el ejemplo de literal compuesto de matriz anterior apareciera dentro de una funci&amp;oacute;n, cualquier uso posterior de &lt;code&gt;foo&lt;/code&gt; en C ++ tendr&amp;iacute;a un comportamiento indefinido porque la vida &amp;uacute;til de la matriz termina despu&amp;eacute;s de la declaraci&amp;oacute;n de &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b955553d29e649b19193fbacbc412a24a27d538d" translate="yes" xml:space="preserve">
          <source>In C, emit &lt;code&gt;static&lt;/code&gt; functions that are declared &lt;code&gt;inline&lt;/code&gt; into the object file, even if the function has been inlined into all of its callers. This switch does not affect functions using the &lt;code&gt;extern inline&lt;/code&gt; extension in GNU C90. In C++, emit any and all inline functions into the object file.</source>
          <target state="translated">En C, emita funciones &lt;code&gt;static&lt;/code&gt; que se declaran en &lt;code&gt;inline&lt;/code&gt; en el archivo de objeto, incluso si la funci&amp;oacute;n se ha incluido en todas sus llamadas. Este conmutador no afecta a las funciones que utilizan la extensi&amp;oacute;n en &lt;code&gt;extern inline&lt;/code&gt; en GNU C90. En C ++, emita todas y cada una de las funciones en l&amp;iacute;nea en el archivo de objeto.</target>
        </trans-unit>
        <trans-unit id="3058a9d60ea1ade68bb14049e675f5bf83c7026b" translate="yes" xml:space="preserve">
          <source>In C, if the function is neither &lt;code&gt;extern&lt;/code&gt; nor &lt;code&gt;static&lt;/code&gt;, then the function is compiled as a standalone function, as well as being inlined where possible.</source>
          <target state="translated">En C, si la funci&amp;oacute;n no es &lt;code&gt;extern&lt;/code&gt; a ni &lt;code&gt;static&lt;/code&gt; , entonces la funci&amp;oacute;n se compila como una funci&amp;oacute;n independiente, adem&amp;aacute;s de estar insertada cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="e352da7bd9ce1ec016de9e2458664a9340519a89" translate="yes" xml:space="preserve">
          <source>In C/C++, every &lt;code&gt;else&lt;/code&gt; branch belongs to the innermost possible &lt;code&gt;if&lt;/code&gt; statement, which in this example is &lt;code&gt;if (b)&lt;/code&gt;. This is often not what the programmer expected, as illustrated in the above example by indentation the programmer chose. When there is the potential for this confusion, GCC issues a warning when this flag is specified. To eliminate the warning, add explicit braces around the innermost &lt;code&gt;if&lt;/code&gt; statement so there is no way the &lt;code&gt;else&lt;/code&gt; can belong to the enclosing &lt;code&gt;if&lt;/code&gt;. The resulting code looks like this:</source>
          <target state="translated">En C / C ++, todas las &lt;code&gt;else&lt;/code&gt; ramas pertenecen a la instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; m&amp;aacute;s interna posible , que en este ejemplo es &lt;code&gt;if (b)&lt;/code&gt; . A menudo, esto no es lo que esperaba el programador, como se ilustra en el ejemplo anterior mediante la sangr&amp;iacute;a que eligi&amp;oacute; el programador. Cuando existe la posibilidad de esta confusi&amp;oacute;n, GCC emite una advertencia cuando se especifica esta bandera. Para eliminar la advertencia, agregue llaves expl&amp;iacute;citas alrededor de la instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; m&amp;aacute;s interna para que no haya forma de que el &lt;code&gt;else&lt;/code&gt; pueda pertenecer al &lt;code&gt;if&lt;/code&gt; adjunto . El c&amp;oacute;digo resultante se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="69cc3b441acbdbe11472c325735b27c046d27c5c" translate="yes" xml:space="preserve">
          <source>In G++, the result value of a statement expression undergoes array and function pointer decay, and is returned by value to the enclosing expression. For instance, if &lt;code&gt;A&lt;/code&gt; is a class, then</source>
          <target state="translated">En G ++, el valor de resultado de una expresi&amp;oacute;n de instrucci&amp;oacute;n sufre un decaimiento del puntero de matriz y funci&amp;oacute;n, y se devuelve por valor a la expresi&amp;oacute;n adjunta. Por ejemplo, si &lt;code&gt;A&lt;/code&gt; es una clase, entonces</target>
        </trans-unit>
        <trans-unit id="2b79b7c58963843a8ca543d9e2a4ed22f6af9388" translate="yes" xml:space="preserve">
          <source>In GNU C and C++, you can use function attributes to specify certain function properties that may help the compiler optimize calls or check code more carefully for correctness. For example, you can use attributes to specify that a function never returns (&lt;code&gt;noreturn&lt;/code&gt;), returns a value depending only on the values of its arguments (&lt;code&gt;const&lt;/code&gt;), or has &lt;code&gt;printf&lt;/code&gt;-style arguments (&lt;code&gt;format&lt;/code&gt;).</source>
          <target state="translated">En GNU C y C ++, puede usar atributos de funci&amp;oacute;n para especificar ciertas propiedades de funci&amp;oacute;n que pueden ayudar al compilador a optimizar las llamadas o verificar el c&amp;oacute;digo con m&amp;aacute;s cuidado para verificar que sea correcto. Por ejemplo, puede usar atributos para especificar que una funci&amp;oacute;n nunca regresa ( &lt;code&gt;noreturn&lt;/code&gt; ), devuelve un valor que depende solo de los valores de sus argumentos ( &lt;code&gt;const&lt;/code&gt; ) o tiene argumentos de estilo &lt;code&gt;printf&lt;/code&gt; ( &lt;code&gt;format&lt;/code&gt; o ).</target>
        </trans-unit>
        <trans-unit id="099e4a52fb6ed11fab7818dcdc84803658fe6ac9" translate="yes" xml:space="preserve">
          <source>In GNU C, addition and subtraction operations are supported on pointers to &lt;code&gt;void&lt;/code&gt; and on pointers to functions. This is done by treating the size of a &lt;code&gt;void&lt;/code&gt; or of a function as 1.</source>
          <target state="translated">En GNU C, las operaciones de suma y resta se admiten en punteros a &lt;code&gt;void&lt;/code&gt; y en punteros a funciones. Esto se hace tratando el tama&amp;ntilde;o de un &lt;code&gt;void&lt;/code&gt; o de una funci&amp;oacute;n como 1.</target>
        </trans-unit>
        <trans-unit id="cca3c66936552d4dc4ee0493549030694bbe3a79" translate="yes" xml:space="preserve">
          <source>In GNU C, an attribute specifier list may appear after the colon following a label, other than a &lt;code&gt;case&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt; label. GNU C++ only permits attributes on labels if the attribute specifier is immediately followed by a semicolon (i.e., the label applies to an empty statement). If the semicolon is missing, C++ label attributes are ambiguous, as it is permissible for a declaration, which could begin with an attribute list, to be labelled in C++. Declarations cannot be labelled in C90 or C99, so the ambiguity does not arise there.</source>
          <target state="translated">En GNU C, puede aparecer una lista de especificadores de atributos despu&amp;eacute;s de los dos puntos despu&amp;eacute;s de una etiqueta, que no sea una etiqueta de &lt;code&gt;case&lt;/code&gt; o &lt;code&gt;default&lt;/code&gt; . GNU C ++ solo permite atributos en etiquetas si el especificador de atributo va seguido inmediatamente de un punto y coma (es decir, la etiqueta se aplica a una declaraci&amp;oacute;n vac&amp;iacute;a). Si falta el punto y coma, los atributos de etiqueta de C ++ son ambiguos, ya que est&amp;aacute; permitido que una declaraci&amp;oacute;n, que podr&amp;iacute;a comenzar con una lista de atributos, est&amp;eacute; etiquetada en C ++. Las declaraciones no se pueden etiquetar en C90 o C99, por lo que la ambig&amp;uuml;edad no surge all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="00f091378926e345c0e4332aa146832525cddb05" translate="yes" xml:space="preserve">
          <source>In GNU C, an attribute specifier list may appear as part of a null statement. The attribute goes before the semicolon.</source>
          <target state="translated">En GNU C,una lista de especificadores de atributos puede aparecer como parte de una declaración nula.El atributo va antes del punto y coma.</target>
        </trans-unit>
        <trans-unit id="1b43625a41fcbb3b41411d6343924dd766870911" translate="yes" xml:space="preserve">
          <source>In GNU C, an attribute specifier list may appear as part of an enumerator. The attribute goes after the enumeration constant, before &lt;code&gt;=&lt;/code&gt;, if present. The optional attribute in the enumerator appertains to the enumeration constant. It is not possible to place the attribute after the constant expression, if present.</source>
          <target state="translated">En GNU C, una lista de especificadores de atributos puede aparecer como parte de un enumerador. El atributo va despu&amp;eacute;s de la constante de enumeraci&amp;oacute;n, antes de &lt;code&gt;=&lt;/code&gt; , si est&amp;aacute; presente. El atributo opcional en el enumerador pertenece a la constante de enumeraci&amp;oacute;n. No es posible colocar el atributo despu&amp;eacute;s de la expresi&amp;oacute;n constante, si est&amp;aacute; presente.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
