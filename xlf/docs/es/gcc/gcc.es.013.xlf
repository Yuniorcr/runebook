<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="ea3c4fdc7ae483f6eeee71767d6d7c25afd3b747" translate="yes" xml:space="preserve">
          <source>ULLK</source>
          <target state="translated">ULLK</target>
        </trans-unit>
        <trans-unit id="bd9c57578a5fa70fa2923dfa1948bb1047652950" translate="yes" xml:space="preserve">
          <source>ULLR</source>
          <target state="translated">ULLR</target>
        </trans-unit>
        <trans-unit id="181f09b6cf6ff48fe2bced4f8717c409974c7ccb" translate="yes" xml:space="preserve">
          <source>ULR</source>
          <target state="translated">ULR</target>
        </trans-unit>
        <trans-unit id="fdf943dd853f60e8f066b9ff1db365525dfa7714" translate="yes" xml:space="preserve">
          <source>UR</source>
          <target state="translated">UR</target>
        </trans-unit>
        <trans-unit id="b92dcc34c6f88a2b085f0fcf11324b5c2cf08f22" translate="yes" xml:space="preserve">
          <source>Unary absolute value.</source>
          <target state="translated">Valor absoluto unitario.</target>
        </trans-unit>
        <trans-unit id="63b13d71007c4da2df4ac38a9e58dea596e4161f" translate="yes" xml:space="preserve">
          <source>Unary negation.</source>
          <target state="translated">Negación unitaria.</target>
        </trans-unit>
        <trans-unit id="5b74b98336e7267fb4f37f0b361c833e21dc0aa0" translate="yes" xml:space="preserve">
          <source>Unary square root operation.</source>
          <target state="translated">Operación de raíz cuadrada unitaria.</target>
        </trans-unit>
        <trans-unit id="00399f106390204b9e8a47f8e8e78be426150d13" translate="yes" xml:space="preserve">
          <source>Unbounded uses, on the other hand, are uses of &lt;code&gt;alloca&lt;/code&gt; with no controlling predicate constraining its integer argument. For example:</source>
          <target state="translated">Los usos ilimitados, por otro lado, son usos de &lt;code&gt;alloca&lt;/code&gt; sin un predicado de control que restrinja su argumento entero. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d6ba59d2b5ffc5c4e08397a280a30fb560e8436a" translate="yes" xml:space="preserve">
          <source>Undefining &lt;code id=&quot;index-std-3&quot;&gt;__STDC__&lt;/code&gt; when</source>
          <target state="translated">Sin definir &lt;code id=&quot;index-std-3&quot;&gt;__STDC__&lt;/code&gt; cuando</target>
        </trans-unit>
        <trans-unit id="f070a98f1b801c2b6e78c0be33c88683a70671cf" translate="yes" xml:space="preserve">
          <source>Undefining &lt;code&gt;__STDC__&lt;/code&gt; in C++.</source>
          <target state="translated">Indefiniendo &lt;code&gt;__STDC__&lt;/code&gt; en C ++.</target>
        </trans-unit>
        <trans-unit id="ca3f9bb4feba0ac0f3a9b154b20506b4c489b2f4" translate="yes" xml:space="preserve">
          <source>Under certain circumstances, GCC may duplicate (or remove duplicates of) your assembly code when optimizing. This can lead to unexpected duplicate symbol errors during compilation if your &lt;code&gt;asm&lt;/code&gt; code defines symbols or labels. Using &amp;lsquo;</source>
          <target state="translated">En determinadas circunstancias, GCC puede duplicar (o eliminar duplicados de) su c&amp;oacute;digo ensamblador al optimizar. Esto puede conducir a errores inesperados de s&amp;iacute;mbolos duplicados durante la compilaci&amp;oacute;n si su c&amp;oacute;digo &lt;code&gt;asm&lt;/code&gt; define s&amp;iacute;mbolos o etiquetas. Utilizando '</target>
        </trans-unit>
        <trans-unit id="199aae5416e814ba38647e12711c671c6b6db5a1" translate="yes" xml:space="preserve">
          <source>Under certain circumstances, GCC may duplicate (or remove duplicates of) your assembly code when optimizing. This can lead to unexpected duplicate symbol errors during compilation if your assembly code defines symbols or labels.</source>
          <target state="translated">Bajo ciertas circunstancias,GCC puede duplicar (o eliminar duplicados de)su código de montaje al optimizar.Esto puede conducir a errores de duplicación de símbolos inesperados durante la compilación si su código de ensamblaje define símbolos o etiquetas.</target>
        </trans-unit>
        <trans-unit id="72b29a25fd6f124cae730e139b0e10b10a80e560" translate="yes" xml:space="preserve">
          <source>Unfortunately, historically GCC used to have a number of bugs in its encoding code. The NeXT runtime expects GCC to emit type encodings in this historical format (compatible with GCC-3.3), so when using the NeXT runtime, GCC will introduce on purpose a number of incorrect encodings:</source>
          <target state="translated">Desafortunadamente,históricamente el GCC solía tener un número de errores en su código de codificación.El tiempo de ejecución NeXT espera que GCC emita codificaciones de tipo en este formato histórico (compatible con GCC-3.3),por lo que al utilizar el tiempo de ejecución NeXT,GCC introducirá a propósito una serie de codificaciones incorrectas:</target>
        </trans-unit>
        <trans-unit id="aeee418a8137652ee6d9ab3008a38b4d74bc2a2f" translate="yes" xml:space="preserve">
          <source>Unfortunately, there are some characters allowed in identifiers by ISO C and ISO C++ that, when turned into NFC, are not allowed in identifiers. That is, there&amp;rsquo;s no way to use these symbols in portable ISO C or C++ and have all your identifiers in NFC.</source>
          <target state="translated">Desafortunadamente, hay algunos caracteres permitidos en los identificadores por ISO C e ISO C ++ que, cuando se convierten en NFC, no est&amp;aacute;n permitidos en los identificadores. Es decir, no hay forma de usar estos s&amp;iacute;mbolos en ISO C o C ++ port&amp;aacute;tiles y tener todos sus identificadores en NFC.</target>
        </trans-unit>
        <trans-unit id="5ddc1e63d4f989177759a83df41bd4b7dad20371" translate="yes" xml:space="preserve">
          <source>Unix C compilers have traditionally allocated storage for uninitialized global variables in a common block. This allows the linker to resolve all tentative definitions of the same variable in different compilation units to the same object, or to a non-tentative definition. This is the behavior specified by</source>
          <target state="translated">Los compiladores de Unix C han asignado tradicionalmente el almacenamiento de las variables mundiales no inicializadas en un bloque común.Esto permite al enlazador resolver todas las definiciones provisionales de la misma variable en diferentes unidades de compilación al mismo objeto,o a una definición no provisional.Este es el comportamiento especificado por</target>
        </trans-unit>
        <trans-unit id="fc9481ccc42310377001eaf4b65f0ba7f43291d9" translate="yes" xml:space="preserve">
          <source>Unless</source>
          <target state="translated">Unless</target>
        </trans-unit>
        <trans-unit id="d6a3e0eb54ec1efd8ae1e1735e817354b9b6421f" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;*ptr&lt;/var&gt; and &lt;var&gt;vobj&lt;/var&gt; can be aliased, it is not guaranteed that the write to &lt;var&gt;*ptr&lt;/var&gt; occurs by the time the update of &lt;var&gt;vobj&lt;/var&gt; happens. If you need this guarantee, you must use a stronger memory barrier such as:</source>
          <target state="translated">A menos que &lt;var&gt;*ptr&lt;/var&gt; y &lt;var&gt;vobj&lt;/var&gt; puedan tener un alias, no se garantiza que la escritura en &lt;var&gt;*ptr&lt;/var&gt; se produzca en el momento en que se &lt;var&gt;vobj&lt;/var&gt; la actualizaci&amp;oacute;n de vobj . Si necesita esta garant&amp;iacute;a, debe usar una barrera de memoria m&amp;aacute;s fuerte, como:</target>
        </trans-unit>
        <trans-unit id="c9e3382936f0af0d7125a8bf9b98d564d02b82c4" translate="yes" xml:space="preserve">
          <source>Unless specified explicitly (with</source>
          <target state="translated">A menos que se especifique explícitamente (con</target>
        </trans-unit>
        <trans-unit id="5eaa8563a22dc64db7ac666eb5d3e5ba11cc1996" translate="yes" xml:space="preserve">
          <source>Unlike Java, Objective-C does not allow for entire methods to be marked &lt;code&gt;@synchronized&lt;/code&gt;. Note that throwing exceptions out of &lt;code&gt;@synchronized&lt;/code&gt; blocks is allowed, and will cause the guarding object to be unlocked properly.</source>
          <target state="translated">A diferencia de Java, Objective-C no permite que los m&amp;eacute;todos completos se &lt;code&gt;@synchronized&lt;/code&gt; como @synchronized . Tenga en cuenta que se permite eliminar excepciones de los bloques &lt;code&gt;@synchronized&lt;/code&gt; y har&amp;aacute; que el objeto de protecci&amp;oacute;n se desbloquee correctamente.</target>
        </trans-unit>
        <trans-unit id="0cd317bbd72a217068977127c104995a9862be9b" translate="yes" xml:space="preserve">
          <source>Unlike for floating-point numbers in the decimal notation the exponent is always required in the hexadecimal notation. Otherwise the compiler would not be able to resolve the ambiguity of, e.g., &lt;code&gt;0x1.f&lt;/code&gt;. This could mean &lt;code&gt;1.0f&lt;/code&gt; or &lt;code&gt;1.9375&lt;/code&gt; since &amp;lsquo;</source>
          <target state="translated">A diferencia de los n&amp;uacute;meros de coma flotante en la notaci&amp;oacute;n decimal, el exponente siempre se requiere en la notaci&amp;oacute;n hexadecimal. De lo contrario, el compilador no ser&amp;iacute;a capaz de resolver la ambig&amp;uuml;edad de, por ejemplo, &lt;code&gt;0x1.f&lt;/code&gt; . Esto podr&amp;iacute;a significar &lt;code&gt;1.0f&lt;/code&gt; o &lt;code&gt;1.9375&lt;/code&gt; desde '</target>
        </trans-unit>
        <trans-unit id="c540371c5127336fc94b6b29fa3c46f81c44897b" translate="yes" xml:space="preserve">
          <source>Unlike in C, in C++, flowing off the end of a non-&lt;code&gt;void&lt;/code&gt; function other than &lt;code&gt;main&lt;/code&gt; results in undefined behavior even when the value of the function is not used.</source>
          <target state="translated">A diferencia de C, en C ++, el fluir del final de una funci&amp;oacute;n no &lt;code&gt;void&lt;/code&gt; que no sea &lt;code&gt;main&lt;/code&gt; da como resultado un comportamiento indefinido incluso cuando no se usa el valor de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2a830c95434f7db0cbf0fd8fd9277c1d051a3f31" translate="yes" xml:space="preserve">
          <source>Unnamed struct/union fields within structs/unions.</source>
          <target state="translated">Campos de estructura/sindicatos sin nombre dentro de las estructuras/sindicatos.</target>
        </trans-unit>
        <trans-unit id="205edf29824c8a0cb244fc56417458952c504c66" translate="yes" xml:space="preserve">
          <source>Unrecognized input files, not requiring compilation or assembly, are ignored.</source>
          <target state="translated">Los archivos de entrada no reconocidos,que no requieren compilación o ensamblaje,son ignorados.</target>
        </trans-unit>
        <trans-unit id="a51fd22f926dc0631cc272a22033e9d7fec59c36" translate="yes" xml:space="preserve">
          <source>Unroll all loops, even if their number of iterations is uncertain when the loop is entered. This usually makes programs run more slowly.</source>
          <target state="translated">Desenrollar todos los bucles,incluso si su número de iteraciones es incierto cuando se introduce el bucle.Esto suele hacer que los programas se ejecuten más lentamente.</target>
        </trans-unit>
        <trans-unit id="fc450b83181b0c2161a73acfdbf2dc658513bec3" translate="yes" xml:space="preserve">
          <source>Unroll loops whose number of iterations can be determined at compile time or upon entry to the loop.</source>
          <target state="translated">Desenrollar los bucles cuyo número de iteraciones puede determinarse en el momento de la compilación o al entrar en el bucle.</target>
        </trans-unit>
        <trans-unit id="ad4d059f80e723b4d81766ec66adc71e8b2e5c48" translate="yes" xml:space="preserve">
          <source>Unsigned 12-bit constant (0&amp;ndash;4095)</source>
          <target state="translated">Constante de 12 bits sin signo (0&amp;ndash;4095)</target>
        </trans-unit>
        <trans-unit id="aec081f8e4cecc49f843970cd77df1a02a1c1643" translate="yes" xml:space="preserve">
          <source>Unsigned 16 bit integer (in the range 0 to 65535)</source>
          <target state="translated">Entero de 16 bits sin signo (en el rango de 0 a 65535)</target>
        </trans-unit>
        <trans-unit id="01dcb67eb6663625a6596ec55251e6ebe419078e" translate="yes" xml:space="preserve">
          <source>Unsigned 16-bit constant</source>
          <target state="translated">Constante de 16 bits sin firmar</target>
        </trans-unit>
        <trans-unit id="005d69054eb4a9d53e3d7fc838909272fcdf1d1e" translate="yes" xml:space="preserve">
          <source>Unsigned 16-bit constant shifted left 16 bits (use &amp;lsquo;</source>
          <target state="translated">Constante de 16 bits sin signo desplazada 16 bits a la izquierda (use '</target>
        </trans-unit>
        <trans-unit id="803ea2cff434611bd7a889a5f8f4e2a80e2f6534" translate="yes" xml:space="preserve">
          <source>Unsigned 16-bit integer constant.</source>
          <target state="translated">Constante entera de 16 bits sin signo.</target>
        </trans-unit>
        <trans-unit id="baffe105924a920d4f7c404a4974ebe483612051" translate="yes" xml:space="preserve">
          <source>Unsigned 3 bit integer (in the range 0 to 7)</source>
          <target state="translated">Un entero de 3 bits sin signo (en el rango de 0 a 7)</target>
        </trans-unit>
        <trans-unit id="5d0b43b79f775a23c99274c057849b2132918314" translate="yes" xml:space="preserve">
          <source>Unsigned 5 bit integer (in the range 0 to 31)</source>
          <target state="translated">Entero de 5 bits sin signo (en el rango de 0 a 31)</target>
        </trans-unit>
        <trans-unit id="ee9e535a39880e194545226484f376dc9293656d" translate="yes" xml:space="preserve">
          <source>Unsigned 7 bit integer (in the range 0 to 127)</source>
          <target state="translated">Entero de 7 bits sin signo (en el rango de 0 a 127)</target>
        </trans-unit>
        <trans-unit id="64587bc80a139da54c64da1869304a4854d6ae7d" translate="yes" xml:space="preserve">
          <source>Unsigned 8-bit constant (0&amp;ndash;255)</source>
          <target state="translated">Constante de 8 bits sin signo (0-255)</target>
        </trans-unit>
        <trans-unit id="389b98b2eb7e556938b37c1b397214bf77e480bb" translate="yes" xml:space="preserve">
          <source>Unsigned 8-bit integer constant (for &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; instructions).</source>
          <target state="translated">Sin signo constante entero de 8 bits (por &lt;code&gt;in&lt;/code&gt; y &lt;code&gt;out&lt;/code&gt; instrucciones).</target>
        </trans-unit>
        <trans-unit id="8f0359d8e4b83d3d17663b1351a70fc1f8166d35" translate="yes" xml:space="preserve">
          <source>Unsigned constant that fits in 4 bits</source>
          <target state="translated">Constante sin signo que encaja en 4 bits</target>
        </trans-unit>
        <trans-unit id="2b90c224883efa79af0519ac0faa9b9d93afd6a8" translate="yes" xml:space="preserve">
          <source>Unsigned constant valid for BccUI instructions</source>
          <target state="translated">Constante no firmada válida para las instrucciones de la BccUI</target>
        </trans-unit>
        <trans-unit id="6f39b25ebfb39b4238321ae23982857dd100a843" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 15-bit value.</source>
          <target state="translated">Valor inmediato de 15 bits sin firmar.</target>
        </trans-unit>
        <trans-unit id="643476a0dd6f53437ba7e1cc7fb664b7f588a51c" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 3-bit value.</source>
          <target state="translated">Valor inmediato de 3 bits sin firmar.</target>
        </trans-unit>
        <trans-unit id="45a42311f5f53acd8a7d22cb085352156026813a" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 4-bit value.</source>
          <target state="translated">Valor inmediato de 4 bits sin firmar.</target>
        </trans-unit>
        <trans-unit id="39b8bb86545b9e829db3c4d0a8f246e834af0861" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 5-bit value for movpi45 instruction with range 16&amp;ndash;47.</source>
          <target state="translated">Valor inmediato de 5 bits sin signo para la instrucci&amp;oacute;n movpi45 con rango 16&amp;ndash;47.</target>
        </trans-unit>
        <trans-unit id="899fe6e57441b37398096e6133a6ef0bf027d95b" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 5-bit value.</source>
          <target state="translated">Valor inmediato de 5 bits sin firmar.</target>
        </trans-unit>
        <trans-unit id="deb14acda231f891d200f45725f5e7e68bae6ef4" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 6-bit value constraint for addri36.sp instruction.</source>
          <target state="translated">Restricción inmediata del valor de 6 bits sin firmar para la instrucción addri36.sp.</target>
        </trans-unit>
        <trans-unit id="4d84bf34896cf4e54d3ca29c18d4eaac197e6b98" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 8-bit value.</source>
          <target state="translated">Valor inmediato de 8 bits sin firmar.</target>
        </trans-unit>
        <trans-unit id="0063ff83a123db3db2d8d12d6f824ef8fd590f5b" translate="yes" xml:space="preserve">
          <source>Unsigned immediate 9-bit value.</source>
          <target state="translated">Valor inmediato de 9 bits sin firmar.</target>
        </trans-unit>
        <trans-unit id="39e06dafd3f0aedfc6583e0a42cd32ba3116cfa2" translate="yes" xml:space="preserve">
          <source>Up: &lt;a href=&quot;executing-code-before-main#Executing-code-before-main&quot;&gt;Executing code before main&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Arriba: &lt;a href=&quot;executing-code-before-main#Executing-code-before-main&quot;&gt;Ejecutando c&amp;oacute;digo antes del&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contenido&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;&amp;Iacute;ndice&lt;/a&gt; ] principal</target>
        </trans-unit>
        <trans-unit id="a632eb28fbdc638221eda735f91ebefbd97cd0d5" translate="yes" xml:space="preserve">
          <source>Up: &lt;a href=&quot;mips-simd-architecture-_0028msa_0029-support#MIPS-SIMD-Architecture-_0028MSA_0029-Support&quot;&gt;MIPS SIMD Architecture (MSA) Support&lt;/a&gt; [&lt;a href=&quot;index#SEC_Contents&quot;&gt;Contents&lt;/a&gt;][&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;Index&lt;/a&gt;]</source>
          <target state="translated">Arriba: &lt;a href=&quot;mips-simd-architecture-_0028msa_0029-support#MIPS-SIMD-Architecture-_0028MSA_0029-Support&quot;&gt;Compatibilidad con la arquitectura MIPS SIMD (MSA)&lt;/a&gt; [ &lt;a href=&quot;index#SEC_Contents&quot;&gt;Contenido&lt;/a&gt; ] [ &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-9.2.0/gcc/Option-Index.html#Option-Index&quot;&gt;&amp;Iacute;ndice&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="62c310f2ecc602f87c21d2fd813dc1c5d88ab539" translate="yes" xml:space="preserve">
          <source>Upon entering the &lt;code&gt;@synchronized&lt;/code&gt; block, a thread of execution shall first check whether a lock has been placed on the corresponding &lt;code&gt;guard&lt;/code&gt; object by another thread. If it has, the current thread shall wait until the other thread relinquishes its lock. Once &lt;code&gt;guard&lt;/code&gt; becomes available, the current thread will place its own lock on it, execute the code contained in the &lt;code&gt;@synchronized&lt;/code&gt; block, and finally relinquish the lock (thereby making &lt;code&gt;guard&lt;/code&gt; available to other threads).</source>
          <target state="translated">Al ingresar al bloque &lt;code&gt;@synchronized&lt;/code&gt; , un subproceso de ejecuci&amp;oacute;n debe verificar primero si otro subproceso ha colocado un bloqueo en el objeto de &lt;code&gt;guard&lt;/code&gt; correspondiente . Si es as&amp;iacute;, el subproceso actual esperar&amp;aacute; hasta que el otro subproceso abandone su bloqueo. Una vez que la &lt;code&gt;guard&lt;/code&gt; est&amp;eacute; disponible, el hilo actual colocar&amp;aacute; su propio bloqueo en &amp;eacute;l, ejecutar&amp;aacute; el c&amp;oacute;digo contenido en el bloque &lt;code&gt;@synchronized&lt;/code&gt; y, finalmente, renunciar&amp;aacute; al bloqueo (haciendo que la &lt;code&gt;guard&lt;/code&gt; est&amp;eacute; disponible para otros hilos).</target>
        </trans-unit>
        <trans-unit id="b8aaa5b821490b029c1a6fe5ed310256ca59552f" translate="yes" xml:space="preserve">
          <source>Upper floating point register (32-bit), floating point register (64-bit)</source>
          <target state="translated">Registro superior en coma flotante (32 bits),registro en coma flotante (64 bits)</target>
        </trans-unit>
        <trans-unit id="06ee1205db8b9a4061f4febc2c51ef1b19f3d539" translate="yes" xml:space="preserve">
          <source>Usage of ISO string concatenation is detected.</source>
          <target state="translated">Se detecta el uso de la concatenación de cadenas ISO.</target>
        </trans-unit>
        <trans-unit id="89c2b631459be5cbc1277d90f51cb2dcbd76dfd6" translate="yes" xml:space="preserve">
          <source>Use (do not use) &amp;lsquo;</source>
          <target state="translated">Use (no use) '</target>
        </trans-unit>
        <trans-unit id="6c996ac92914ff016f27df663925672950a9f247" translate="yes" xml:space="preserve">
          <source>Use (do not use) GP-relative accesses for symbols that are known to be in a small data section; see</source>
          <target state="translated">Utilice (no utilice)los accesos relativos a los GP para los símbolos que se sabe que están en una pequeña sección de datos;véase</target>
        </trans-unit>
        <trans-unit id="841162f62263bc7378cda3013dbe47b1df4ab93e" translate="yes" xml:space="preserve">
          <source>Use (do not use) MIPS Digital Media Extension instructions. This option can only be used when generating 64-bit code and requires hardware floating-point support to be enabled.</source>
          <target state="translated">Use (no use)las instrucciones de la Extensión de Medios Digitales MIPS.Esta opción sólo se puede utilizar cuando se genera un código de 64 bits y requiere que se habilite el soporte de punto flotante del hardware.</target>
        </trans-unit>
        <trans-unit id="b20024dc2d601c71b4e717f07d0f9b2a6822d063" translate="yes" xml:space="preserve">
          <source>Use (do not use) MT Multithreading instructions.</source>
          <target state="translated">Utilice (no utilice)las instrucciones de Multithreading MT.</target>
        </trans-unit>
        <trans-unit id="4c4c87eb21af6765217c1c52b2b2d0c31fe5b0c7" translate="yes" xml:space="preserve">
          <source>Use (do not use) assembler relocation operators when dealing with symbolic addresses. The alternative, selected by</source>
          <target state="translated">Usar (no usar)operadores de reubicación de ensambladores cuando se trata de direcciones simbólicas.La alternativa,seleccionada por</target>
        </trans-unit>
        <trans-unit id="e2fb9fc1fd117af3b437fc4e8c7a5214e20addd7" translate="yes" xml:space="preserve">
          <source>Use (do not use) paired-single floating-point instructions. See &lt;a href=&quot;mips-paired_002dsingle-support#MIPS-Paired_002dSingle-Support&quot;&gt;MIPS Paired-Single Support&lt;/a&gt;. This option requires hardware floating-point support to be enabled.</source>
          <target state="translated">Utilice (no utilice) instrucciones de punto flotante &amp;uacute;nico emparejado. Consulte &lt;a href=&quot;mips-paired_002dsingle-support#MIPS-Paired_002dSingle-Support&quot;&gt;Compatibilidad con MIPS emparejado &amp;uacute;nico&lt;/a&gt; . Esta opci&amp;oacute;n requiere que se habilite el soporte de punto flotante de hardware.</target>
        </trans-unit>
        <trans-unit id="f6259aa651c4c62a1528ed119090031f79dd3a9c" translate="yes" xml:space="preserve">
          <source>Use (do not use) revision 1 of the MIPS DSP ASE. See &lt;a href=&quot;mips-dsp-built_002din-functions#MIPS-DSP-Built_002din-Functions&quot;&gt;MIPS DSP Built-in Functions&lt;/a&gt;. This option defines the preprocessor macro &lt;code&gt;__mips_dsp&lt;/code&gt;. It also defines &lt;code&gt;__mips_dsp_rev&lt;/code&gt; to 1.</source>
          <target state="translated">Utilice (no utilice) la revisi&amp;oacute;n 1 de MIPS DSP ASE. Consulte &lt;a href=&quot;mips-dsp-built_002din-functions#MIPS-DSP-Built_002din-Functions&quot;&gt;Funciones integradas de MIPS DSP&lt;/a&gt; . Esta opci&amp;oacute;n define la macro del preprocesador &lt;code&gt;__mips_dsp&lt;/code&gt; . Tambi&amp;eacute;n define &lt;code&gt;__mips_dsp_rev&lt;/code&gt; como 1.</target>
        </trans-unit>
        <trans-unit id="84f11c6cd6e5cf30011af44cf15833421d85ad29" translate="yes" xml:space="preserve">
          <source>Use (do not use) revision 2 of the MIPS DSP ASE. See &lt;a href=&quot;mips-dsp-built_002din-functions#MIPS-DSP-Built_002din-Functions&quot;&gt;MIPS DSP Built-in Functions&lt;/a&gt;. This option defines the preprocessor macros &lt;code&gt;__mips_dsp&lt;/code&gt; and &lt;code&gt;__mips_dspr2&lt;/code&gt;. It also defines &lt;code&gt;__mips_dsp_rev&lt;/code&gt; to 2.</source>
          <target state="translated">Utilice (no utilice) la revisi&amp;oacute;n 2 de MIPS DSP ASE. Consulte &lt;a href=&quot;mips-dsp-built_002din-functions#MIPS-DSP-Built_002din-Functions&quot;&gt;Funciones integradas de MIPS DSP&lt;/a&gt; . Esta opci&amp;oacute;n define las macros del preprocesador &lt;code&gt;__mips_dsp&lt;/code&gt; y &lt;code&gt;__mips_dspr2&lt;/code&gt; . Tambi&amp;eacute;n define &lt;code&gt;__mips_dsp_rev&lt;/code&gt; como 2.</target>
        </trans-unit>
        <trans-unit id="f05f23d689cc06c1b3087b4a4cee4ab4e3b531c1" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Cyclic Redundancy Check (CRC) instructions.</source>
          <target state="translated">Use (no use)las instrucciones del Chequeo de Redundancia Cíclica (CRC)del MIPS.</target>
        </trans-unit>
        <trans-unit id="41957dbedef9adbd80884a4e90cb75e57229baa1" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Enhanced Virtual Addressing instructions.</source>
          <target state="translated">Use (no use)las instrucciones del direccionamiento virtual mejorado de MIPS.</target>
        </trans-unit>
        <trans-unit id="d449a2af21b4cd68389988954d474d0704ce78ae" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Global INValidate (GINV) instructions.</source>
          <target state="translated">Use (no use)las instrucciones de MIPS Global INValidate (GINV).</target>
        </trans-unit>
        <trans-unit id="321d2808ff8ddfa8d27e08fae5ef2b18bb82a26d" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Loongson EXTensions (EXT) instructions.</source>
          <target state="translated">Use (no use)las instrucciones de MIPS Loongson EXTENSIONES (EXT).</target>
        </trans-unit>
        <trans-unit id="7e1498ad7af62c3d7182f6f503ffa752981eda71" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Loongson EXTensions r2 (EXT2) instructions.</source>
          <target state="translated">Use (no use)las instrucciones de MIPS Loongson EXTENSIONES r2 (EXT2).</target>
        </trans-unit>
        <trans-unit id="2dd360e823e7db9203619f4657c5c205b972d79d" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Loongson MultiMedia extensions Instructions (MMI).</source>
          <target state="translated">Use (no use)las instrucciones de las extensiones MIPS Loongson MultiMedia (MMI).</target>
        </trans-unit>
        <trans-unit id="5f61baef9b142c63c1358980a670d3440a0eab96" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS MCU ASE instructions.</source>
          <target state="translated">Use (no use)las instrucciones del MIPS MCU ASE.</target>
        </trans-unit>
        <trans-unit id="8ec8692f1855f7387d01c2d894055d7cd55aa28a" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS SmartMIPS ASE.</source>
          <target state="translated">Use (no use)el MIPS SmartMIPS ASE.</target>
        </trans-unit>
        <trans-unit id="5ea0be9e9db2179c015e95d8d46f2c8b505a9fe4" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS Virtualization (VZ) instructions.</source>
          <target state="translated">Use (no use)las instrucciones de Virtualización de MIPS (VZ).</target>
        </trans-unit>
        <trans-unit id="a2cdb6f5e1b2e85269c8ddd06af937bfeb499e18" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS eXtended Physical Address (XPA) instructions.</source>
          <target state="translated">Use (no use)las instrucciones de MIPS eXtended Physical Address (XPA).</target>
        </trans-unit>
        <trans-unit id="36354659118438f767b17fe9c67973e669f59454" translate="yes" xml:space="preserve">
          <source>Use (do not use) the MIPS-3D ASE. See &lt;a href=&quot;mips_002d3d-built_002din-functions#MIPS_002d3D-Built_002din-Functions&quot;&gt;MIPS-3D Built-in Functions&lt;/a&gt;. The option</source>
          <target state="translated">Utilice (no utilice) MIPS-3D ASE. Consulte &lt;a href=&quot;mips_002d3d-built_002din-functions#MIPS_002d3D-Built_002din-Functions&quot;&gt;Funciones integradas de MIPS-3D&lt;/a&gt; . La opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="9ef75b208cd56b64585639240694bc21bc152e3d" translate="yes" xml:space="preserve">
          <source>Use (do not use) the hardware decimal-floating-point instructions for decimal-floating-point operations. When</source>
          <target state="translated">Utilice (no utilice)las instrucciones de punto flotante del hardware para operaciones de punto flotante decimal.Cuando</target>
        </trans-unit>
        <trans-unit id="bf41f711c39d909ef84416fdb9864104894d7725" translate="yes" xml:space="preserve">
          <source>Use (do not use) the hardware floating-point instructions and registers for floating-point operations. When</source>
          <target state="translated">Utilice (no utilice)las instrucciones y registros del hardware de punto flotante para las operaciones de punto flotante.Cuando</target>
        </trans-unit>
        <trans-unit id="de7cd0fb38e7a6dbf8bf51e3e0d617effe989eb9" translate="yes" xml:space="preserve">
          <source>Use (do not use) the hardware floating-point instructions for floating-point operations. When</source>
          <target state="translated">Utilice (no utilice)las instrucciones de punto flotante del hardware para las operaciones de punto flotante.Cuando</target>
        </trans-unit>
        <trans-unit id="bd5d0dcb1bead4c9931bcc516462cf8c519e7f83" translate="yes" xml:space="preserve">
          <source>Use (do not use) the packed stack layout. When</source>
          <target state="translated">Usar (no usar)la disposición de la pila empaquetada.Cuando</target>
        </trans-unit>
        <trans-unit id="cbc7bc66fe33b21f66fff87d1b33e82b9091e241" translate="yes" xml:space="preserve">
          <source>Use (do not use) the probable-branch instructions, when static branch prediction indicates a probable branch.</source>
          <target state="translated">Utilice (no utilice)las instrucciones de rama probable,cuando la predicción de rama estática indique una rama probable.</target>
        </trans-unit>
        <trans-unit id="f319b3952ec422e138086d2e7e1d3e6616dd87b3" translate="yes" xml:space="preserve">
          <source>Use 16-bit &lt;code&gt;int&lt;/code&gt;. This is the default.</source>
          <target state="translated">Utilice &lt;code&gt;int&lt;/code&gt; de 16 bits . Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="89aa31a04c6ac47e58631515dc9a5eacae0d2be9" translate="yes" xml:space="preserve">
          <source>Use 32-bit &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">Utilice &lt;code&gt;int&lt;/code&gt; de 32 bits .</target>
        </trans-unit>
        <trans-unit id="41a727b715072a7a83f64450d014d46413f9d7b5" translate="yes" xml:space="preserve">
          <source>Use 32-bit offsets in &lt;code&gt;switch&lt;/code&gt; tables. The default is to use 16-bit offsets.</source>
          <target state="translated">Utilice compensaciones de 32 bits en tablas de &lt;code&gt;switch&lt;/code&gt; . El valor predeterminado es utilizar compensaciones de 16 bits.</target>
        </trans-unit>
        <trans-unit id="88f9f3c158d922b7a42c33cd301395b97a6091ab" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;brk_interrupt&lt;/code&gt; instead of &lt;code&gt;interrupt&lt;/code&gt; for handlers intended to be used with the &lt;code&gt;BRK&lt;/code&gt; opcode (i.e. those that must end with &lt;code&gt;RETB&lt;/code&gt; instead of &lt;code&gt;RETI&lt;/code&gt;).</source>
          <target state="translated">Utilice &lt;code&gt;brk_interrupt&lt;/code&gt; en lugar de &lt;code&gt;interrupt&lt;/code&gt; para los controladores destinados a utilizarse con el c&amp;oacute;digo de operaci&amp;oacute;n &lt;code&gt;BRK&lt;/code&gt; (es decir, aquellos que deben terminar con &lt;code&gt;RETB&lt;/code&gt; en lugar de &lt;code&gt;RETI&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a90fcb500090afb38bb3e24622641ed3199bfbe3" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;class-name&lt;/var&gt; as the name of the class to instantiate for each literal string specified with the syntax &lt;code&gt;@&quot;&amp;hellip;&quot;&lt;/code&gt;. The default class name is &lt;code&gt;NXConstantString&lt;/code&gt; if the GNU runtime is being used, and &lt;code&gt;NSConstantString&lt;/code&gt; if the NeXT runtime is being used (see below). The</source>
          <target state="translated">Utilice &lt;var&gt;class-name&lt;/var&gt; como el nombre de la clase para crear una instancia de cada cadena literal especificada con la sintaxis &lt;code&gt;@&quot;&amp;hellip;&quot;&lt;/code&gt; . El nombre de clase predeterminado es &lt;code&gt;NXConstantString&lt;/code&gt; si se usa el tiempo de ejecuci&amp;oacute;n GNU, y &lt;code&gt;NSConstantString&lt;/code&gt; si se usa el tiempo de ejecuci&amp;oacute;n NeXT (ver m&amp;aacute;s abajo). los</target>
        </trans-unit>
        <trans-unit id="eb4639975214bd02baed9aee7811250d9713b6c2" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;dir&lt;/var&gt; as a subdirectory of the directory containing target-specific C++ headers.</source>
          <target state="translated">Utilice &lt;var&gt;dir&lt;/var&gt; como subdirectorio del directorio que contiene encabezados C ++ espec&amp;iacute;ficos del destino.</target>
        </trans-unit>
        <trans-unit id="6e0e3e325ab15f9c4ea6c1c5a12adf0dc5651ccc" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;dir&lt;/var&gt; as the logical root directory for headers and libraries. For example, if the compiler normally searches for headers in</source>
          <target state="translated">Utilice &lt;var&gt;dir&lt;/var&gt; como directorio ra&amp;iacute;z l&amp;oacute;gico para encabezados y bibliotecas. Por ejemplo, si el compilador normalmente busca encabezados en</target>
        </trans-unit>
        <trans-unit id="6f28e148765dfa527c350e4d6f8a2d064b3f5447" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;script&lt;/var&gt; as the linker script. This option is supported by most systems using the GNU linker. On some targets, such as bare-board targets without an operating system, the</source>
          <target state="translated">Utilice &lt;var&gt;script&lt;/var&gt; como script del enlazador. Esta opci&amp;oacute;n es compatible con la mayor&amp;iacute;a de los sistemas que utilizan el enlazador GNU. En algunos objetivos, como los objetivos de placa base sin un sistema operativo, el</target>
        </trans-unit>
        <trans-unit id="603c63161e45119aff170517df5f944adaf08316" translate="yes" xml:space="preserve">
          <source>Use Bionic C library. This is the default on &amp;lsquo;</source>
          <target state="translated">Utilice la biblioteca Bionic C. Este es el predeterminado en '</target>
        </trans-unit>
        <trans-unit id="e1b7e66656ee6fc5c3b9eff78bd1af4ab51c4a01" translate="yes" xml:space="preserve">
          <source>Use DEC assembler syntax.</source>
          <target state="translated">Usen la sintaxis del ensamblador DEC.</target>
        </trans-unit>
        <trans-unit id="cf5c1a8e637cc6c211fb5b791033642a96c7344a" translate="yes" xml:space="preserve">
          <source>Use GNU assembler syntax. This is the default.</source>
          <target state="translated">Utiliza la sintaxis del ensamblador de GNU.Esta es la predeterminada.</target>
        </trans-unit>
        <trans-unit id="4ca68a7754f649f50b2ce419251af4261f6f0855" translate="yes" xml:space="preserve">
          <source>Use GP-relative &lt;code&gt;.sdata&lt;/code&gt;/&lt;code&gt;.sbss&lt;/code&gt; sections.</source>
          <target state="translated">Utilice las secciones &lt;code&gt;.sdata&lt;/code&gt; / &lt;code&gt;.sbss&lt;/code&gt; relativas a GP .</target>
        </trans-unit>
        <trans-unit id="5a4f813886fea8ad38a8f2df1482e30df599c3e3" translate="yes" xml:space="preserve">
          <source>Use IRA to evaluate register pressure in loops for decisions to move loop invariants. This option usually results in generation of faster and smaller code on machines with large register files (&amp;gt;= 32 registers), but it can slow the compiler down.</source>
          <target state="translated">Utilice IRA para evaluar la presi&amp;oacute;n de registro en bucles para tomar decisiones para mover invariantes de bucle. Esta opci&amp;oacute;n generalmente da como resultado la generaci&amp;oacute;n de c&amp;oacute;digo m&amp;aacute;s r&amp;aacute;pido y m&amp;aacute;s peque&amp;ntilde;o en m&amp;aacute;quinas con archivos de registro grandes (&amp;gt; = 32 registros), pero puede ralentizar el compilador.</target>
        </trans-unit>
        <trans-unit id="9fa83817840cfc83225757a8f388ff5927c560a5" translate="yes" xml:space="preserve">
          <source>Use IRA to evaluate register pressure in the code hoisting pass for decisions to hoist expressions. This option usually results in smaller code, but it can slow the compiler down.</source>
          <target state="translated">Usar el IRA para evaluar la presión de registro en el código de pase de elevación para las decisiones de elevar las expresiones.Esta opción suele dar lugar a un código más pequeño,pero puede ralentizar al compilador.</target>
        </trans-unit>
        <trans-unit id="cf05afd7829c886cb42acb12e1e8f5c401d38cca" translate="yes" xml:space="preserve">
          <source>Use PC-relative switch case tables to enable case table shortening. This is the default for</source>
          <target state="translated">Usar las tablas de casos de los interruptores de PC para permitir el acortamiento de las tablas de casos.Este es el valor predeterminado para</target>
        </trans-unit>
        <trans-unit id="00b72e087f73e29c719a0c570f2c43c4886f6d49" translate="yes" xml:space="preserve">
          <source>Use PUSH operations to store outgoing parameters. This method is shorter and usually equally fast as method using SUB/MOV operations and is enabled by default. In some cases disabling it may improve performance because of improved scheduling and reduced dependencies.</source>
          <target state="translated">Utilice las operaciones de PUSH para almacenar los parámetros de salida.Este método es más corto y normalmente igual de rápido que el método que utiliza las operaciones SUB/MOV y está activado por defecto.En algunos casos su desactivación puede mejorar el rendimiento debido a la mejora de la programación y la reducción de las dependencias.</target>
        </trans-unit>
        <trans-unit id="3d45d39c4ac78022d817a61ee97d331c721c6435" translate="yes" xml:space="preserve">
          <source>Use SSE register passing conventions for float and double arguments and return values. You can control this behavior for a specific function by using the function attribute &lt;code&gt;sseregparm&lt;/code&gt;. See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;.</source>
          <target state="translated">Utilice las convenciones de paso de registros SSE para argumentos flotantes y dobles y valores de retorno. Puede controlar este comportamiento para una funci&amp;oacute;n espec&amp;iacute;fica utilizando el atributo de funci&amp;oacute;n &lt;code&gt;sseregparm&lt;/code&gt; . Consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b404c19baa5a518d1cdcd1a18e31cedc71ed3a2b" translate="yes" xml:space="preserve">
          <source>Use TLS descriptors as the thread-local storage mechanism for dynamic accesses of TLS variables. This is the default.</source>
          <target state="translated">Usar descriptores TLS como mecanismo de almacenamiento local de hilos para accesos dinámicos de variables TLS.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="e3576757916332969b16cf2fe6a0dad2cf57cc25" translate="yes" xml:space="preserve">
          <source>Use Unix assembler syntax.</source>
          <target state="translated">Utiliza la sintaxis del ensamblador de Unix.</target>
        </trans-unit>
        <trans-unit id="203b2b8006e8188de9ec3c4dca584f80e20ca5d1" translate="yes" xml:space="preserve">
          <source>Use a different function-calling convention, in which functions that take a fixed number of arguments return with the &lt;code&gt;ret &lt;var&gt;num&lt;/var&gt;&lt;/code&gt; instruction, which pops their arguments while returning. This saves one instruction in the caller since there is no need to pop the arguments there.</source>
          <target state="translated">Use una convenci&amp;oacute;n de llamada de funci&amp;oacute;n diferente, en la que las funciones que toman un n&amp;uacute;mero fijo de argumentos regresan con la instrucci&amp;oacute;n &lt;code&gt;ret &lt;var&gt;num&lt;/var&gt;&lt;/code&gt; , que muestra sus argumentos mientras regresan. Esto guarda una instrucci&amp;oacute;n en la persona que llama, ya que no es necesario colocar los argumentos all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="da4193d8552139570f953ba462e87b5070659dde" translate="yes" xml:space="preserve">
          <source>Use a different function-calling convention, in which functions that take a fixed number of arguments return with the &lt;code&gt;rtd&lt;/code&gt; instruction, which pops their arguments while returning. This saves one instruction in the caller since there is no need to pop the arguments there.</source>
          <target state="translated">Use una convenci&amp;oacute;n de llamada de funci&amp;oacute;n diferente, en la que las funciones que toman un n&amp;uacute;mero fijo de argumentos regresan con la instrucci&amp;oacute;n &lt;code&gt;rtd&lt;/code&gt; , que muestra sus argumentos mientras regresan. Esto guarda una instrucci&amp;oacute;n en la persona que llama, ya que no es necesario colocar los argumentos all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="331cc29755f1e26195a1d5ecc670eb6f5d017ee2" translate="yes" xml:space="preserve">
          <source>Use a simple check for control speculation. This option is on by default.</source>
          <target state="translated">Usar un simple chequeo para controlar la especulación.Esta opción está activada por defecto.</target>
        </trans-unit>
        <trans-unit id="d6f85727b6057ae83760d6f97594f9ace81b0f7f" translate="yes" xml:space="preserve">
          <source>Use a simple data speculation check. This option is on by default.</source>
          <target state="translated">Usar una simple comprobación de especulación de datos.Esta opción está activada por defecto.</target>
        </trans-unit>
        <trans-unit id="ca6587349df9a9ae271539d7763d513420cd65bb" translate="yes" xml:space="preserve">
          <source>Use a suffix in a fixed-point literal constant:</source>
          <target state="translated">Usar un sufijo en una constante literal de punto fijo:</target>
        </trans-unit>
        <trans-unit id="0eca7aa56a0b3e6cf63ecaa0b25877af246ac580" translate="yes" xml:space="preserve">
          <source>Use address register &lt;code&gt;X&lt;/code&gt; in a way proposed by the hardware. This means that &lt;code&gt;X&lt;/code&gt; is only used in indirect, post-increment or pre-decrement addressing.</source>
          <target state="translated">Utilice el registro de direcciones &lt;code&gt;X&lt;/code&gt; de la forma propuesta por el hardware. Esto significa que &lt;code&gt;X&lt;/code&gt; solo se usa en direccionamiento indirecto, post-incremento o pre-decremento.</target>
        </trans-unit>
        <trans-unit id="3b89385a22047536803090fc547fb07c50377d4f" translate="yes" xml:space="preserve">
          <source>Use all 64 floating-point registers.</source>
          <target state="translated">Utiliza los 64 registros de punto flotante.</target>
        </trans-unit>
        <trans-unit id="feaeb911667dc1becc91e63f2c1dd1a8d7da1545" translate="yes" xml:space="preserve">
          <source>Use all 64 general-purpose registers.</source>
          <target state="translated">Utilice los 64 registros de uso general.</target>
        </trans-unit>
        <trans-unit id="b82e484b31c31a6751f032044a77e4b8d923804b" translate="yes" xml:space="preserve">
          <source>Use all eight media accumulator registers.</source>
          <target state="translated">Utiliza los ocho registros del acumulador de medios de comunicación.</target>
        </trans-unit>
        <trans-unit id="2f6df81f72a01bee304049bedcc53aa9e70e7e34" translate="yes" xml:space="preserve">
          <source>Use all functions as a single region. This typically results in the smallest code size, and is enabled by default for</source>
          <target state="translated">Usar todas las funciones como una sola región.Esto normalmente resulta en el tamaño de código más pequeño,y está habilitado por defecto para</target>
        </trans-unit>
        <trans-unit id="ba424a2a390669d654a999945050b535cb620662" translate="yes" xml:space="preserve">
          <source>Use all loops as register allocation regions. This can give the best results for machines with a small and/or irregular register set.</source>
          <target state="translated">Utilice todos los bucles como regiones de asignación de registros.Esto puede dar los mejores resultados para las máquinas con un conjunto de registros pequeños y/o irregulares.</target>
        </trans-unit>
        <trans-unit id="a043a5ff8ff9ce3ddafabde6a2ea3b417ae65cc6" translate="yes" xml:space="preserve">
          <source>Use all loops except for loops with small register pressure as the regions. This value usually gives the best results in most cases and for most architectures, and is enabled by default when compiling with optimization for speed (</source>
          <target state="translated">Usar todos los bucles excepto los bucles con una presión de registro pequeña como las regiones.Este valor suele dar los mejores resultados en la mayoría de los casos y para la mayoría de las arquitecturas,y se habilita por defecto cuando se compila con optimización para la velocidad (</target>
        </trans-unit>
        <trans-unit id="812a6d3805650c2a1098b0f9c55012ae713394e0" translate="yes" xml:space="preserve">
          <source>Use caller save registers for allocation if those registers are not used by any called function. In that case it is not necessary to save and restore them around calls. This is only possible if called functions are part of same compilation unit as current function and they are compiled before it.</source>
          <target state="translated">Utilice los registros de grabación de llamadas para la asignación si esos registros no son utilizados por ninguna función llamada.En ese caso no es necesario guardarlos y restaurarlos alrededor de las llamadas.Esto sólo es posible si las funciones llamadas forman parte de la misma unidad de compilación que la función actual y se compilan antes de ella.</target>
        </trans-unit>
        <trans-unit id="4382016563c1274a421ee87c295b12ebd4559c24" translate="yes" xml:space="preserve">
          <source>Use color in diagnostics. &lt;var&gt;WHEN&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">Utilice el color en los diagn&amp;oacute;sticos. &lt;var&gt;WHEN&lt;/var&gt; es '</target>
        </trans-unit>
        <trans-unit id="40d7328de5846368928e724db703acd82494276b" translate="yes" xml:space="preserve">
          <source>Use colors for lines of code that have zero coverage. We use red color for non-exceptional lines and cyan for exceptional. Same colors are used for basic blocks with</source>
          <target state="translated">Use colores para las líneas de código que tienen cobertura cero.Usamos el color rojo para las líneas no excepcionales y el cian para las excepcionales.Los mismos colores se usan para los bloques básicos con</target>
        </trans-unit>
        <trans-unit id="b78480b3c04e31f02a22c6b9fc0432c39f656a99" translate="yes" xml:space="preserve">
          <source>Use conditional execution (where available) to transform conditional jumps into branch-less equivalents.</source>
          <target state="translated">Utilice la ejecución condicional (cuando esté disponible)para transformar los saltos condicionales en equivalentes sin ramas.</target>
        </trans-unit>
        <trans-unit id="cfd175a21aedd34017c2ac1e6f5bcb8597ba832d" translate="yes" xml:space="preserve">
          <source>Use features of, and schedule code for, the given CPU. Supported values are in the format &amp;lsquo;</source>
          <target state="translated">Utilice funciones y c&amp;oacute;digo de programaci&amp;oacute;n para la CPU determinada. Los valores admitidos tienen el formato '</target>
        </trans-unit>
        <trans-unit id="3784fc1428664a00120c0092c2a68e1d52938803" translate="yes" xml:space="preserve">
          <source>Use floating-point coprocessor instructions.</source>
          <target state="translated">Usar las instrucciones del coprocesador de punto flotante.</target>
        </trans-unit>
        <trans-unit id="b74dc5c253b5d41873111acddddd0a6e12b4df73" translate="yes" xml:space="preserve">
          <source>Use floating-point double instructions.</source>
          <target state="translated">Use las instrucciones dobles de punto flotante.</target>
        </trans-unit>
        <trans-unit id="92af032aeee5f8e42b7b1aaa0f92eee3c63e96e3" translate="yes" xml:space="preserve">
          <source>Use full-set registers for register allocation.</source>
          <target state="translated">Utilice registros completos para la asignación de registros.</target>
        </trans-unit>
        <trans-unit id="16451ea3ea1710752acecdfbc9b28aca9f971795" translate="yes" xml:space="preserve">
          <source>Use hardware FPP floating point. This is the default. (FIS floating point on the PDP-11/40 is not supported.) Implies -m45.</source>
          <target state="translated">Usar el punto flotante de FPP por hardware.Este es el valor por defecto.(El punto flotante del FIS en el PDP-11/40 no está soportado.)Implica -m45.</target>
        </trans-unit>
        <trans-unit id="1d53b0a05bad4ee0582a36e272217d96ad44c641" translate="yes" xml:space="preserve">
          <source>Use hardware floating-point conversion instructions.</source>
          <target state="translated">Use las instrucciones de conversión de punto flotante del hardware.</target>
        </trans-unit>
        <trans-unit id="7c8d9f72c2a09e8bf637992aee381f0538cc91ce" translate="yes" xml:space="preserve">
          <source>Use hardware floating-point instructions.</source>
          <target state="translated">Usar las instrucciones de punto flotante del hardware.</target>
        </trans-unit>
        <trans-unit id="0a53c63d0196fe12e50c8354a0f08f23a9436376" translate="yes" xml:space="preserve">
          <source>Use hardware floating-point square root instruction.</source>
          <target state="translated">Usar la instrucción de la raíz cuadrada de punto flotante del hardware.</target>
        </trans-unit>
        <trans-unit id="9299be4448e9c807bf8ea8d91a628cfcd14cfa8d" translate="yes" xml:space="preserve">
          <source>Use hardware instructions for floating-point operations.</source>
          <target state="translated">Use las instrucciones del hardware para las operaciones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="d1208904e1c443035a1b8ffe0c523b26cf7b7a8b" translate="yes" xml:space="preserve">
          <source>Use indirect addressing to call functions outside the current compilation unit. This allows the functions to be placed anywhere within the 32-bit address space.</source>
          <target state="translated">Utilice el direccionamiento indirecto para llamar a funciones fuera de la unidad de compilación actual.Esto permite que las funciones se coloquen en cualquier lugar dentro del espacio de direcciones de 32 bits.</target>
        </trans-unit>
        <trans-unit id="78fc9788b47e65039b1b1b871970de2bb141152a" translate="yes" xml:space="preserve">
          <source>Use large-model addressing (20-bit pointers, 32-bit &lt;code&gt;size_t&lt;/code&gt;).</source>
          <target state="translated">Uso a gran modelo de direccionamiento (punteros de 20 bits, 32 bits &lt;code&gt;size_t&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="da84f773a2b422eeb1cc59880ada32d1f5127685" translate="yes" xml:space="preserve">
          <source>Use library routines for floating-point operations.</source>
          <target state="translated">Usar rutinas de biblioteca para operaciones de punto flotante.</target>
        </trans-unit>
        <trans-unit id="089ac39a7bb68a3ed32ee7b6986eee393acae4e9" translate="yes" xml:space="preserve">
          <source>Use media instructions.</source>
          <target state="translated">Use las instrucciones de los medios de comunicación.</target>
        </trans-unit>
        <trans-unit id="0eb15f40fe2c97b8f815cbb7844e284b610d0dac" translate="yes" xml:space="preserve">
          <source>Use multiply and add/subtract instructions.</source>
          <target state="translated">Use las instrucciones de multiplicar y sumar/restar.</target>
        </trans-unit>
        <trans-unit id="3113eba3d237f18c9452620ae8a871803037c9fe" translate="yes" xml:space="preserve">
          <source>Use multiply high instructions for high part of 32x32 multiply.</source>
          <target state="translated">Use las instrucciones de multiplicar alto para la parte alta de 32x32 multiplicar.</target>
        </trans-unit>
        <trans-unit id="274542aa04ed64b151c2d6a22c787feacea52bb1" translate="yes" xml:space="preserve">
          <source>Use of ISO C style function definitions. This warning intentionally is &lt;em&gt;not&lt;/em&gt; issued for prototype declarations or variadic functions because these ISO C features appear in your code when using libiberty&amp;rsquo;s traditional C compatibility macros, &lt;code&gt;PARAMS&lt;/code&gt; and &lt;code&gt;VPARAMS&lt;/code&gt;. This warning is also bypassed for nested functions because that feature is already a GCC extension and thus not relevant to traditional C compatibility.</source>
          <target state="translated">Uso de definiciones de funciones de estilo ISO C. Esta advertencia &lt;em&gt;no se&lt;/em&gt; emite intencionalmente para declaraciones de prototipos o funciones variadas porque estas caracter&amp;iacute;sticas ISO C aparecen en su c&amp;oacute;digo cuando se utilizan las macros de compatibilidad C tradicionales de &lt;code&gt;PARAMS&lt;/code&gt; , PARAMS y &lt;code&gt;VPARAMS&lt;/code&gt; . Esta advertencia tambi&amp;eacute;n se omite para las funciones anidadas porque esa caracter&amp;iacute;stica ya es una extensi&amp;oacute;n de GCC y, por lo tanto, no es relevante para la compatibilidad tradicional de C.</target>
        </trans-unit>
        <trans-unit id="158fc2002245113de73abd265a7ea7ceaec3a883" translate="yes" xml:space="preserve">
          <source>Use of these options requires the</source>
          <target state="translated">El uso de estas opciones requiere la</target>
        </trans-unit>
        <trans-unit id="c4cc269c9473450b3919e9b442477125758842d4" translate="yes" xml:space="preserve">
          <source>Use only (or not only) &lt;code&gt;JSR&lt;/code&gt; instructions to access functions. This option can be used when code size exceeds the range of &lt;code&gt;BSR&lt;/code&gt; instructions. Note that</source>
          <target state="translated">Utilice solo (o no solo) instrucciones &lt;code&gt;JSR&lt;/code&gt; para acceder a las funciones. Esta opci&amp;oacute;n se puede usar cuando el tama&amp;ntilde;o del c&amp;oacute;digo excede el rango de instrucciones &lt;code&gt;BSR&lt;/code&gt; . Tenga en cuenta que</target>
        </trans-unit>
        <trans-unit id="3d7a23d4b8552ff506438fdaad793f73e9ba8b5c" translate="yes" xml:space="preserve">
          <source>Use only the first 32 floating-point registers.</source>
          <target state="translated">Utilice sólo los primeros 32 registros de punto flotante.</target>
        </trans-unit>
        <trans-unit id="514349ebdaf390b152f0baa20866afbb16f28603" translate="yes" xml:space="preserve">
          <source>Use only the first four media accumulator registers.</source>
          <target state="translated">Utilice sólo los primeros cuatro registros del acumulador de medios de comunicación.</target>
        </trans-unit>
        <trans-unit id="dbcdb22850ebf5d2eaa31bb7774cbe3b9ea3b9b1" translate="yes" xml:space="preserve">
          <source>Use options specific to GNU &lt;code&gt;ld&lt;/code&gt;. This passes</source>
          <target state="translated">Utilice opciones espec&amp;iacute;ficas de GNU &lt;code&gt;ld&lt;/code&gt; . Esto pasa</target>
        </trans-unit>
        <trans-unit id="d0990e1967b634e363212e972c2e0f4cff8a380b" translate="yes" xml:space="preserve">
          <source>Use options specific to HP &lt;code&gt;ld&lt;/code&gt;. This passes</source>
          <target state="translated">Utilice opciones espec&amp;iacute;ficas de HP &lt;code&gt;ld&lt;/code&gt; . Esto pasa</target>
        </trans-unit>
        <trans-unit id="b612fc229c98c8b45507f89276f4127d6c212de2" translate="yes" xml:space="preserve">
          <source>Use or do not use assembler relocation operators when dealing with symbolic addresses. The alternative is to use assembler macros instead, which may limit optimization.</source>
          <target state="translated">Usar o no usar operadores de reubicación de ensambladores cuando se trata de direcciones simbólicas.La alternativa es usar macros en ensamblador en su lugar,lo que puede limitar la optimización.</target>
        </trans-unit>
        <trans-unit id="0d238a2890f95ffe47564d56929f04ca231d7f2f" translate="yes" xml:space="preserve">
          <source>Use ordinarily cached memory accesses for volatile references. This is the default.</source>
          <target state="translated">Utilice normalmente accesos de memoria caché para referencias volátiles.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="561289d64c63454cbaa3cc42d60da8f4f3023750" translate="yes" xml:space="preserve">
          <source>Use pattern compare instructions.</source>
          <target state="translated">Use las instrucciones de comparación de patrones.</target>
        </trans-unit>
        <trans-unit id="040518cc797faf0101d0aa9c313c620444e4ee87" translate="yes" xml:space="preserve">
          <source>Use pipes rather than temporary files for communication between the various stages of compilation. This fails to work on some systems where the assembler is unable to read from a pipe; but the GNU assembler has no trouble.</source>
          <target state="translated">Usar tuberías en lugar de archivos temporales para la comunicación entre las diversas etapas de la compilación.Esto no funciona en algunos sistemas donde el ensamblador es incapaz de leer desde un tubo;pero el ensamblador GNU no tiene problemas.</target>
        </trans-unit>
        <trans-unit id="f48e58d8b4ccb76ce170698e169b17f602f7b800" translate="yes" xml:space="preserve">
          <source>Use reduced-set registers for register allocation.</source>
          <target state="translated">Utilizar registros de conjunto reducido para la asignación de registros.</target>
        </trans-unit>
        <trans-unit id="2593d8520ea117d76ab84232fac04161f6934239" translate="yes" xml:space="preserve">
          <source>Use reorder instructions (swap and byte reversed load/store).</source>
          <target state="translated">Utilice las instrucciones de reordenación (intercambio y byte invertido de carga/almacenamiento).</target>
        </trans-unit>
        <trans-unit id="e07ac16585fa1254cfa0cb9da67063979e26bb7c" translate="yes" xml:space="preserve">
          <source>Use scalar floating-point instructions present in the SSE instruction set. This instruction set is supported by Pentium III and newer chips, and in the AMD line by Athlon-4, Athlon XP and Athlon MP chips. The earlier version of the SSE instruction set supports only single-precision arithmetic, thus the double and extended-precision arithmetic are still done using 387. A later version, present only in Pentium 4 and AMD x86-64 chips, supports double-precision arithmetic too.</source>
          <target state="translated">Utilice las instrucciones de punto flotante escalar que se encuentran en el conjunto de instrucciones de SSE.Este conjunto de instrucciones es compatible con el Pentium III y los chips más nuevos,y en la línea AMD con los chips Athlon-4,Athlon XP y Athlon MP.La versión anterior del conjunto de instrucciones SSE sólo admite aritmética de precisión simple,por lo que la aritmética de precisión doble y extendida se sigue haciendo con el 387.Una versión posterior,presente sólo en los chips Pentium 4 y AMD x86-64,también soporta la aritmética de doble precisión.</target>
        </trans-unit>
        <trans-unit id="d6e4ef6e570b37c45555a81f6cdc377b4bae049b" translate="yes" xml:space="preserve">
          <source>Use small-model addressing (16-bit pointers, 16-bit &lt;code&gt;size_t&lt;/code&gt;).</source>
          <target state="translated">Utilice direccionamiento de modelo peque&amp;ntilde;o (punteros de 16 bits, &lt;code&gt;size_t&lt;/code&gt; 16 bits ).</target>
        </trans-unit>
        <trans-unit id="427046297d0e2e2fa23aa9bbce2f51b1069e5680" translate="yes" xml:space="preserve">
          <source>Use software emulation for divides (default).</source>
          <target state="translated">Usar la emulación de software para las divisiones (por defecto).</target>
        </trans-unit>
        <trans-unit id="28d4c98240044920040873705d9156aeeb423961" translate="yes" xml:space="preserve">
          <source>Use software emulation for floating point (default).</source>
          <target state="translated">Usar la emulación de software para el punto flotante (por defecto).</target>
        </trans-unit>
        <trans-unit id="1da6f7e54a7af9cc7e53be95e1caa19cec640f21" translate="yes" xml:space="preserve">
          <source>Use software multiply emulation (default).</source>
          <target state="translated">Usar la emulación de multiplicación de software (por defecto).</target>
        </trans-unit>
        <trans-unit id="51ebd4110af8f919b9d1120fda4a348de24109ee" translate="yes" xml:space="preserve">
          <source>Use specified regions for the integrated register allocator. The &lt;var&gt;region&lt;/var&gt; argument should be one of the following:</source>
          <target state="translated">Utilice regiones espec&amp;iacute;ficas para el asignador de registros integrado. El argumento de la &lt;var&gt;region&lt;/var&gt; debe ser uno de los siguientes:</target>
        </trans-unit>
        <trans-unit id="8bf48e2b51779d631071d9653fad6d3f53bf023b" translate="yes" xml:space="preserve">
          <source>Use table lookup optimization for small signed integer divisions.</source>
          <target state="translated">Use la optimización de búsqueda de tablas para divisiones enteras de signo pequeño.</target>
        </trans-unit>
        <trans-unit id="22aeb5074275903d6cc2bc285a95ec6de6392b7d" translate="yes" xml:space="preserve">
          <source>Use the &amp;lsquo;</source>
          <target state="translated">Utilizar el '</target>
        </trans-unit>
        <trans-unit id="4c08ac9947cb5cb5ba71955417b6bbe576595e7e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;bfd&lt;/code&gt; linker instead of the default linker.</source>
          <target state="translated">Utilice el vinculador &lt;code&gt;bfd&lt;/code&gt; en lugar del vinculador predeterminado.</target>
        </trans-unit>
        <trans-unit id="49f654b96f5c6203d75686fb510717eb4b09cb8c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;dcpl&lt;/code&gt; instruction to load the contents of address &lt;var&gt;x&lt;/var&gt; into the data cache.</source>
          <target state="translated">Utilice la instrucci&amp;oacute;n &lt;code&gt;dcpl&lt;/code&gt; para cargar el contenido de la direcci&amp;oacute;n &lt;var&gt;x&lt;/var&gt; en la cach&amp;eacute; de datos.</target>
        </trans-unit>
        <trans-unit id="bf6f4ab92454be3b8a7530a2bda919c27587ed37" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;gold&lt;/code&gt; linker instead of the default linker.</source>
          <target state="translated">Utilice el vinculador &lt;code&gt;gold&lt;/code&gt; lugar del vinculador predeterminado.</target>
        </trans-unit>
        <trans-unit id="6ce5962b43b6bd52ef348d693006572a8183c27a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;nldub&lt;/code&gt; instruction to load the contents of address &lt;var&gt;x&lt;/var&gt; into the data cache. The instruction is issued in slot I1.</source>
          <target state="translated">Utilice la instrucci&amp;oacute;n &lt;code&gt;nldub&lt;/code&gt; para cargar el contenido de la direcci&amp;oacute;n &lt;var&gt;x&lt;/var&gt; en la cach&amp;eacute; de datos. La instrucci&amp;oacute;n se emite en la ranura I1.</target>
        </trans-unit>
        <trans-unit id="867d5a75d613034d3b5e7a22efb5a5d5d0038d5f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;section&lt;/code&gt; attribute with &lt;em&gt;global&lt;/em&gt; variables and not &lt;em&gt;local&lt;/em&gt; variables, as shown in the example.</source>
          <target state="translated">Utilice el atributo de &lt;code&gt;section&lt;/code&gt; con variables &lt;em&gt;globales&lt;/em&gt; y no &lt;em&gt;con&lt;/em&gt; variables &lt;em&gt;locales&lt;/em&gt; , como se muestra en el ejemplo.</target>
        </trans-unit>
        <trans-unit id="9a7c0df6001ba89f4adccf5164b3cb2c7ebaeebd" translate="yes" xml:space="preserve">
          <source>Use the GNU C library. This is the default except on &amp;lsquo;</source>
          <target state="translated">Usa la biblioteca GNU C. Este es el valor predeterminado excepto en '</target>
        </trans-unit>
        <trans-unit id="750d7f5d1705c279b333b6c74a4ba7e65ef492b9" translate="yes" xml:space="preserve">
          <source>Use the Graphite data dependence analysis to identify loops that can be parallelized. Parallelize all the loops that can be analyzed to not contain loop carried dependences without checking that it is profitable to parallelize the loops.</source>
          <target state="translated">Utilice el análisis de dependencia de datos de Graphite para identificar los bucles que pueden ser paralelizados.Paralelice todos los bucles que pueden ser analizados para que no contengan dependencias transportadas por el bucle sin comprobar que es rentable paralelizar los bucles.</target>
        </trans-unit>
        <trans-unit id="7a211de8053eb75fc4551a2253a98b04c844e3fd" translate="yes" xml:space="preserve">
          <source>Use the LLVM &lt;code&gt;lld&lt;/code&gt; linker instead of the default linker.</source>
          <target state="translated">Utilice el &lt;code&gt;lld&lt;/code&gt; LLVM lld en lugar del vinculador predeterminado.</target>
        </trans-unit>
        <trans-unit id="04b872414955ba2ec914569c9ca7e852388533f1" translate="yes" xml:space="preserve">
          <source>Use the divide instruction. (Enabled by default).</source>
          <target state="translated">Use la instrucción de dividir.(Habilitada por defecto).</target>
        </trans-unit>
        <trans-unit id="558e68bc0e42df73038edd83e1eeba8d09d26633" translate="yes" xml:space="preserve">
          <source>Use the hardware barrel shifter.</source>
          <target state="translated">Usa el cambio de barril de hardware.</target>
        </trans-unit>
        <trans-unit id="3ddc7c28193ef0a55228689dee7a52062a4edc76" translate="yes" xml:space="preserve">
          <source>Use the musl C library. This is the default on &amp;lsquo;</source>
          <target state="translated">Utilice la biblioteca musl C. Este es el predeterminado en '</target>
        </trans-unit>
        <trans-unit id="1f0e93cc02e9fe65de10db69a6186e0dc79df964" translate="yes" xml:space="preserve">
          <source>Use the new LRA register allocator. By default, the old &amp;ldquo;reload&amp;rdquo; allocator is used.</source>
          <target state="translated">Utilice el nuevo asignador de registros LRA. De forma predeterminada, se utiliza el antiguo asignador de &quot;recarga&quot;.</target>
        </trans-unit>
        <trans-unit id="b8160c2417cc8a5cdcd5adcb2b4ace153689638e" translate="yes" xml:space="preserve">
          <source>Use the pc-relative addressing mode of the 68000 directly, instead of using a global offset table. At present, this option implies</source>
          <target state="translated">Utilice el modo de direccionamiento pc-relativo del 68000 directamente,en lugar de utilizar una tabla de compensación global.En la actualidad,esta opción implica</target>
        </trans-unit>
        <trans-unit id="f07a2b31cfd22ad424266d7caad833e89dee9597" translate="yes" xml:space="preserve">
          <source>Use the portable calling conventions proposed by HP for ELF systems.</source>
          <target state="translated">Utiliza las convenciones de llamadas portátiles propuestas por HP para los sistemas ELF.</target>
        </trans-unit>
        <trans-unit id="0b4db49c13b2cd9f44e64e88aadae4892b55bc28" translate="yes" xml:space="preserve">
          <source>Use the simulator runtime. The default is to use the libgloss board-specific runtime.</source>
          <target state="translated">Usa el tiempo de ejecución del simulador.El valor por defecto es usar el tiempo de ejecución específico de la tabla de libgloss.</target>
        </trans-unit>
        <trans-unit id="41338fd388f1668b19ad991f249f38977077076b" translate="yes" xml:space="preserve">
          <source>Use the small address space model. This can produce smaller code, but it does assume that all symbolic values and addresses fit into a 20-bit range.</source>
          <target state="translated">Utiliza el modelo de espacio de direcciones pequeñas.Esto puede producir un código más pequeño,pero asume que todos los valores simbólicos y las direcciones caben en un rango de 20 bits.</target>
        </trans-unit>
        <trans-unit id="13568366d19d7f746b8b97efedd41fb9de7088bc" translate="yes" xml:space="preserve">
          <source>Use the specified algorithm for basic block reordering. The &lt;var&gt;algorithm&lt;/var&gt; argument can be &amp;lsquo;</source>
          <target state="translated">Utilice el algoritmo especificado para el reordenamiento b&amp;aacute;sico de bloques. El argumento del &lt;var&gt;algorithm&lt;/var&gt; puede ser '</target>
        </trans-unit>
        <trans-unit id="ab53cd8c99a5cd67bf095646da8562b04af28820" translate="yes" xml:space="preserve">
          <source>Use the specified coloring algorithm for the integrated register allocator. The &lt;var&gt;algorithm&lt;/var&gt; argument can be &amp;lsquo;</source>
          <target state="translated">Utilice el algoritmo de coloraci&amp;oacute;n especificado para el asignador de registros integrado. El argumento del &lt;var&gt;algorithm&lt;/var&gt; puede ser '</target>
        </trans-unit>
        <trans-unit id="c25bc5036e9135cfbfa139415172d379794c44f1" translate="yes" xml:space="preserve">
          <source>Use the standard 387 floating-point coprocessor present on the majority of chips and emulated otherwise. Code compiled with this option runs almost everywhere. The temporary results are computed in 80-bit precision instead of the precision specified by the type, resulting in slightly different results compared to most of other chips. See</source>
          <target state="translated">Utiliza el coprocesador estándar de punto flotante 387 presente en la mayoría de los chips y emulado de otra manera.El código compilado con esta opción funciona casi en todas partes.Los resultados temporales se calculan con una precisión de 80 bits en lugar de la precisión especificada por el tipo,lo que da como resultado resultados ligeramente diferentes en comparación con la mayoría de los otros chips.Véase</target>
        </trans-unit>
        <trans-unit id="5c3eebf40b38ef456cf7b33dffd08d0bed4ad5c6" translate="yes" xml:space="preserve">
          <source>Use the string argument if you want a single implementation file to include code from multiple header files. (You must also use &amp;lsquo;</source>
          <target state="translated">Utilice el argumento de cadena si desea que un solo archivo de implementaci&amp;oacute;n incluya c&amp;oacute;digo de varios archivos de encabezado. (Tambi&amp;eacute;n debe usar '</target>
        </trans-unit>
        <trans-unit id="8b250eb8bd58bde677af68374494bb2406d4bfb9" translate="yes" xml:space="preserve">
          <source>Use the timing characteristics of the indicated CPU type when scheduling instructions. This does not change the targeted processor type. The CPU type must be one of &amp;lsquo;</source>
          <target state="translated">Utilice las caracter&amp;iacute;sticas de tiempo del tipo de CPU indicado al programar instrucciones. Esto no cambia el tipo de procesador de destino. El tipo de CPU debe ser uno de '</target>
        </trans-unit>
        <trans-unit id="e509cf065cb591da77c6d1b119a1c9955ae2884c" translate="yes" xml:space="preserve">
          <source>Use these attributes on the Blackfin to place the variable into L1 Data SRAM. Variables with &lt;code&gt;l1_data&lt;/code&gt; attribute are put into the specific section named &lt;code&gt;.l1.data&lt;/code&gt;. Those with &lt;code&gt;l1_data_A&lt;/code&gt; attribute are put into the specific section named &lt;code&gt;.l1.data.A&lt;/code&gt;. Those with &lt;code&gt;l1_data_B&lt;/code&gt; attribute are put into the specific section named &lt;code&gt;.l1.data.B&lt;/code&gt;.</source>
          <target state="translated">Utilice estos atributos en Blackfin para colocar la variable en L1 Data SRAM. Las variables con el atributo &lt;code&gt;l1_data&lt;/code&gt; se colocan en la secci&amp;oacute;n espec&amp;iacute;fica llamada &lt;code&gt;.l1.data&lt;/code&gt; . Aquellos con el atributo &lt;code&gt;l1_data_A&lt;/code&gt; se colocan en la secci&amp;oacute;n espec&amp;iacute;fica llamada &lt;code&gt;.l1.data.A&lt;/code&gt; . Aquellos con el atributo &lt;code&gt;l1_data_B&lt;/code&gt; se colocan en la secci&amp;oacute;n espec&amp;iacute;fica llamada &lt;code&gt;.l1.data.B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="160cca57d4e5e0f9858135c86f73f6c1abb97d0c" translate="yes" xml:space="preserve">
          <source>Use these attributes to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when either attribute is present.</source>
          <target state="translated">Utilice estos atributos para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando está presente cualquiera de los atributos.</target>
        </trans-unit>
        <trans-unit id="bf93b175e1b39a6bc44235ab705a17a9dd4f6b45" translate="yes" xml:space="preserve">
          <source>Use these attributes to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when either of these attributes are present.</source>
          <target state="translated">Utilice estos atributos para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando cualquiera de estos atributos está presente.</target>
        </trans-unit>
        <trans-unit id="713ae23784c01f8e2dec060c72284704315954a7" translate="yes" xml:space="preserve">
          <source>Use these options on systems where the linker can perform optimizations to improve locality of reference in the instruction space. Most systems using the ELF object format have linkers with such optimizations. On AIX, the linker rearranges sections (CSECTs) based on the call graph. The performance impact varies.</source>
          <target state="translated">Utilice estas opciones en los sistemas en los que el enlazador puede realizar optimizaciones para mejorar la localidad de referencia en el espacio de instrucción.La mayoría de los sistemas que utilizan el formato de objeto ELF tienen enlazadores con tales optimizaciones.En AIX,el enlazador reordena las secciones (CSECT)basándose en el gráfico de llamada.El impacto del rendimiento varía.</target>
        </trans-unit>
        <trans-unit id="78e3ee99ed9959a22e988df0584ccd7d00c7b9a6" translate="yes" xml:space="preserve">
          <source>Use this attribute on ARM to write Interrupt Service Routines. This is an alias to the &lt;code&gt;interrupt&lt;/code&gt; attribute above.</source>
          <target state="translated">Utilice este atributo en ARM para escribir rutinas de servicio de interrupci&amp;oacute;n. Este es un alias para el atributo de &lt;code&gt;interrupt&lt;/code&gt; anterior.</target>
        </trans-unit>
        <trans-unit id="6c570cb3577b10adeb554e34c1e75804adbd4ff0" translate="yes" xml:space="preserve">
          <source>Use this attribute on SH targets to indicate that an &lt;code&gt;interrupt_handler&lt;/code&gt; function should not save and restore registers R0..R7. This can be used on SH3* and SH4* targets that have a second R0..R7 register bank for non-reentrant interrupt handlers.</source>
          <target state="translated">Utilice este atributo en destinos SH para indicar que una funci&amp;oacute;n &lt;code&gt;interrupt_handler&lt;/code&gt; no debe guardar y restaurar los registros R0..R7. Esto se puede utilizar en destinos SH3 * y SH4 * que tienen un segundo banco de registros R0..R7 para manejadores de interrupciones no reentrantes.</target>
        </trans-unit>
        <trans-unit id="f5c77347991d0824e6e1b28414143e53ed7d053c" translate="yes" xml:space="preserve">
          <source>Use this attribute on fido, a subarchitecture of the m68k, to indicate that the specified function is an interrupt handler that is designed to run as a thread. The compiler omits generate prologue/epilogue sequences and replaces the return instruction with a &lt;code&gt;sleep&lt;/code&gt; instruction. This attribute is available only on fido.</source>
          <target state="translated">Utilice este atributo en fido, una subarquitectura de m68k, para indicar que la funci&amp;oacute;n especificada es un controlador de interrupciones dise&amp;ntilde;ado para ejecutarse como un hilo. El compilador omite generar secuencias de pr&amp;oacute;logo / ep&amp;iacute;logo y reemplaza la instrucci&amp;oacute;n de retorno con una instrucci&amp;oacute;n de &lt;code&gt;sleep&lt;/code&gt; . Este atributo solo est&amp;aacute; disponible en fido.</target>
        </trans-unit>
        <trans-unit id="d1f324113425943e40b53dec4caee6bc8c992d2f" translate="yes" xml:space="preserve">
          <source>Use this attribute on the AVR to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present.</source>
          <target state="translated">Utilice este atributo en el AVR para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando este atributo está presente.</target>
        </trans-unit>
        <trans-unit id="a5bf0a65e4d4990ce1711a80366a15b5a93d0b22" translate="yes" xml:space="preserve">
          <source>Use this attribute on the Blackfin to indicate that the specified function is an NMI handler. The compiler generates function entry and exit sequences suitable for use in an NMI handler when this attribute is present.</source>
          <target state="translated">Utilice este atributo en el Blackfin para indicar que la función especificada es un manejador de NMI.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de NMI cuando este atributo está presente.</target>
        </trans-unit>
        <trans-unit id="dfb0dab0829881fae4719db2bc2a5d4b0371e0d9" translate="yes" xml:space="preserve">
          <source>Use this attribute on the Blackfin to indicate that the specified function is an exception handler. The compiler generates function entry and exit sequences suitable for use in an exception handler when this attribute is present.</source>
          <target state="translated">Utilice este atributo en el Blackfin para indicar que la función especificada es un manejador de excepciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de excepciones cuando este atributo está presente.</target>
        </trans-unit>
        <trans-unit id="8869ad65102c3d5175ee58c9a5d4d12dd9377ae3" translate="yes" xml:space="preserve">
          <source>Use this attribute on the Blackfin to place the variable into L2 SRAM. Variables with &lt;code&gt;l2&lt;/code&gt; attribute are put into the specific section named &lt;code&gt;.l2.data&lt;/code&gt;.</source>
          <target state="translated">Utilice este atributo en Blackfin para colocar la variable en L2 SRAM. Las variables con el atributo &lt;code&gt;l2&lt;/code&gt; se colocan en la secci&amp;oacute;n espec&amp;iacute;fica denominada &lt;code&gt;.l2.data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ba6ef03647597caec122d43f2ce8b19030a7ba" translate="yes" xml:space="preserve">
          <source>Use this attribute on the H8/300, H8/300H, and H8S to indicate that all registers except the stack pointer should be saved in the prologue regardless of whether they are used or not.</source>
          <target state="translated">Utilice este atributo en el H8/300,H8/300H,y H8S para indicar que todos los registros excepto el puntero de la pila deben ser guardados en el prólogo independientemente de si se utilizan o no.</target>
        </trans-unit>
        <trans-unit id="df02a088eeed2ddabe9512b735b51f56751782bf" translate="yes" xml:space="preserve">
          <source>Use this attribute on the H8/300, H8/300H, and H8S to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present.</source>
          <target state="translated">Utilice este atributo en el H8/300,H8/300H y H8S para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando este atributo está presente.</target>
        </trans-unit>
        <trans-unit id="fd7a5bf8f68787afcff36ce2f74606dfa6e83fb2" translate="yes" xml:space="preserve">
          <source>Use this attribute on the H8/300, H8/300H, and H8S to indicate that the specified function should be called through the function vector. Calling a function through the function vector reduces code size; however, the function vector has a limited size (maximum 128 entries on the H8/300 and 64 entries on the H8/300H and H8S) and shares space with the interrupt vector.</source>
          <target state="translated">Utilice este atributo en el H8/300,H8/300H y H8S para indicar que la función especificada debe ser llamada a través del vector de la función.Llamar a una función a través del vector de la función reduce el tamaño del código;sin embargo,el vector de la función tiene un tamaño limitado (máximo 128 entradas en el H8/300 y 64 entradas en el H8/300H y H8S)y comparte espacio con el vector de interrupción.</target>
        </trans-unit>
        <trans-unit id="599c44ccc726a6980df5cc0406dd5d4d98bf81c0" translate="yes" xml:space="preserve">
          <source>Use this attribute on the H8/300, H8/300H, and H8S to indicate that the specified variable should be placed into the eight-bit data section. The compiler generates more efficient code for certain operations on data in the eight-bit data area. Note the eight-bit data area is limited to 256 bytes of data.</source>
          <target state="translated">Utilice este atributo en el H8/300,H8/300H y H8S para indicar que la variable especificada debe colocarse en la sección de datos de ocho bits.El compilador genera un código más eficiente para ciertas operaciones sobre los datos en el área de datos de ocho bits.Nótese que el área de datos de ocho bits está limitada a 256 bytes de datos.</target>
        </trans-unit>
        <trans-unit id="a601987d8058a933f8472ba9226cb9a2f96a02f6" translate="yes" xml:space="preserve">
          <source>Use this attribute on the H8/300H and H8S to indicate that the specified variable should be placed into the tiny data section. The compiler generates more efficient code for loads and stores on data in the tiny data section. Note the tiny data area is limited to slightly under 32KB of data.</source>
          <target state="translated">Utilice este atributo en el H8/300H y H8S para indicar que la variable especificada debe colocarse en la sección de datos diminutos.El compilador genera un código más eficiente para cargar y almacenar datos en la sección de datos diminutos.Tenga en cuenta que el área de datos diminutos se limita a un poco menos de 32KB de datos.</target>
        </trans-unit>
        <trans-unit id="85d60dec57fe15c501fdf7e341a3a258fde629e1" translate="yes" xml:space="preserve">
          <source>Use this attribute on the M32C port to indicate that the specified function is a fast interrupt handler. This is just like the &lt;code&gt;interrupt&lt;/code&gt; attribute, except that &lt;code&gt;freit&lt;/code&gt; is used to return instead of &lt;code&gt;reit&lt;/code&gt;.</source>
          <target state="translated">Utilice este atributo en el puerto M32C para indicar que la funci&amp;oacute;n especificada es un controlador de interrupci&amp;oacute;n r&amp;aacute;pida. Esto es como el atributo de &lt;code&gt;interrupt&lt;/code&gt; , excepto que &lt;code&gt;freit&lt;/code&gt; se usa para regresar en lugar de &lt;code&gt;reit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="297c80fc49a65c78b7920bfb2bee0762b9925dea" translate="yes" xml:space="preserve">
          <source>Use this attribute on the M32R/D to set the addressability of an object. The identifier &lt;var&gt;model-name&lt;/var&gt; is one of &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, or &lt;code&gt;large&lt;/code&gt;, representing each of the code models.</source>
          <target state="translated">Utilice este atributo en el M32R / D para establecer la direccionabilidad de un objeto. El identificador &lt;var&gt;model-name&lt;/var&gt; es &lt;code&gt;small&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; o &lt;code&gt;large&lt;/code&gt; , y representa cada uno de los modelos de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="96da4205ef51f9f643ebc02b337015bd75a20bc4" translate="yes" xml:space="preserve">
          <source>Use this attribute on the NDS32 target to indicate that the specified function is a reset handler. The compiler will generate corresponding sections for use in a reset handler. You can use the following attributes to provide extra exception handling:</source>
          <target state="translated">Utilice este atributo en el objetivo del NDS32 para indicar que la función especificada es un manejador de reinicio.El compilador generará las secciones correspondientes para su uso en un gestor de reinicio.Puede utilizar los siguientes atributos para proporcionar un manejo extra de excepciones:</target>
        </trans-unit>
        <trans-unit id="baa8e68af06ff2588951a9683b9bf9ad21db1c70" translate="yes" xml:space="preserve">
          <source>Use this attribute on the NDS32 target to indicate that the specified function is an exception handler. The compiler will generate corresponding sections for use in an exception handler.</source>
          <target state="translated">Utilice este atributo en el objetivo del NDS32 para indicar que la función especificada es un manejador de excepciones.El compilador generará las secciones correspondientes para su uso en un manejador de excepciones.</target>
        </trans-unit>
        <trans-unit id="420b4fa6a036410c655f106a939e0146c5f824c7" translate="yes" xml:space="preserve">
          <source>Use this attribute on the RX port to indicate that the specified function is a fast interrupt handler. This is just like the &lt;code&gt;interrupt&lt;/code&gt; attribute, except that &lt;code&gt;freit&lt;/code&gt; is used to return instead of &lt;code&gt;reit&lt;/code&gt;.</source>
          <target state="translated">Utilice este atributo en el puerto RX para indicar que la funci&amp;oacute;n especificada es un controlador de interrupci&amp;oacute;n r&amp;aacute;pida. Esto es como el atributo de &lt;code&gt;interrupt&lt;/code&gt; , excepto que &lt;code&gt;freit&lt;/code&gt; se usa para regresar en lugar de &lt;code&gt;reit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8551dfbdf943cb7774be60c5de8ba39aba7167f2" translate="yes" xml:space="preserve">
          <source>Use this attribute on the SH for an &lt;code&gt;interrupt_handler&lt;/code&gt; to return using &lt;code&gt;trapa&lt;/code&gt; instead of &lt;code&gt;rte&lt;/code&gt;. This attribute expects an integer argument specifying the trap number to be used.</source>
          <target state="translated">Use este atributo en el SH para que un &lt;code&gt;interrupt_handler&lt;/code&gt; regrese usando &lt;code&gt;trapa&lt;/code&gt; en lugar de &lt;code&gt;rte&lt;/code&gt; . Este atributo espera un argumento entero que especifique el n&amp;uacute;mero de trampa que se utilizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="96f131ead8b3e83868bdd55e3669cea512c61c77" translate="yes" xml:space="preserve">
          <source>Use this attribute on the SH to indicate an &lt;code&gt;interrupt_handler&lt;/code&gt; function should switch to an alternate stack. It expects a string argument that names a global variable holding the address of the alternate stack.</source>
          <target state="translated">Utilice este atributo en el SH para indicar una &lt;code&gt;interrupt_handler&lt;/code&gt; funci&amp;oacute;n debe cambiar a una pila alternativa. Espera un argumento de cadena que nombre una variable global que contenga la direcci&amp;oacute;n de la pila alternativa.</target>
        </trans-unit>
        <trans-unit id="7835a2a9ca1e1170ad95a6f19a530b6da32924fa" translate="yes" xml:space="preserve">
          <source>Use this attribute to explicitly place a variable in the first 32 kilobytes of memory.</source>
          <target state="translated">Use este atributo para colocar explícitamente una variable en los primeros 32 kilobytes de memoria.</target>
        </trans-unit>
        <trans-unit id="6f81bc7b08ff6f3b4d15b67ecb7306d1b4cac77a" translate="yes" xml:space="preserve">
          <source>Use this attribute to explicitly place a variable in the small data area, which can hold up to 64 kilobytes.</source>
          <target state="translated">Utilice este atributo para colocar explícitamente una variable en la pequeña área de datos,que puede contener hasta 64 kilobytes.</target>
        </trans-unit>
        <trans-unit id="25a478a508b894220fe0716716b37246794c924f" translate="yes" xml:space="preserve">
          <source>Use this attribute to explicitly place a variable in the tiny data area, which can hold up to 256 bytes in total.</source>
          <target state="translated">Utilice este atributo para colocar explícitamente una variable en el área de datos diminuta,que puede contener hasta 256 bytes en total.</target>
        </trans-unit>
        <trans-unit id="236f15e780f5078ecf100afe1366fac4aadd1410" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that all registers except the stack pointer should be saved in the prologue regardless of whether they are used or not.</source>
          <target state="translated">Utilice este atributo para indicar que todos los registros,excepto el puntero de la pila,deben guardarse en el prólogo,independientemente de que se utilicen o no.</target>
        </trans-unit>
        <trans-unit id="764c3380316fc59c0e08f071dd7a44fb3d9e29ae" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the function is an interrupt handler. All volatile registers (in addition to non-volatile registers) are saved in the function prologue. If the function is a leaf function, only volatiles used by the function are saved. A normal function return is generated instead of a return from interrupt.</source>
          <target state="translated">Utilice este atributo para indicar que la función es un manejador de interrupciones.Todos los registros volátiles (además de los no volátiles)se guardan en el prólogo de la función.Si la función es una función de hoja,sólo se guardan los volátiles utilizados por la función.Se genera un retorno de la función normal en lugar de un retorno de la interrupción.</target>
        </trans-unit>
        <trans-unit id="e7371ecf2ac4e4a5beb340500a4170b79e5aeb2e" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function has no caller-saved registers. That is, all registers are callee-saved. For example, this attribute can be used for a function called from an interrupt handler. The compiler generates proper function entry and exit sequences to save and restore any modified registers, except for the EFLAGS register. Since GCC doesn&amp;rsquo;t preserve SSE, MMX nor x87 states, the GCC option</source>
          <target state="translated">Utilice este atributo para indicar que la funci&amp;oacute;n especificada no tiene registros guardados por la persona que llama. Es decir, se guardan todos los registros de llamadas. Por ejemplo, este atributo se puede utilizar para una funci&amp;oacute;n llamada desde un controlador de interrupciones. El compilador genera secuencias de entrada y salida de funciones adecuadas para guardar y restaurar cualquier registro modificado, excepto el registro EFLAGS. Dado que GCC no conserva los estados SSE, MMX ni x87, la opci&amp;oacute;n GCC</target>
        </trans-unit>
        <trans-unit id="7d075359795fbb683e03390ae2ab96a3eb2f08a2" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function is a break handler. The compiler generates function entry and exit sequences suitable for use in an break handler when this attribute is present. The return from &lt;code&gt;break_handler&lt;/code&gt; is done through the &lt;code&gt;rtbd&lt;/code&gt; instead of &lt;code&gt;rtsd&lt;/code&gt;.</source>
          <target state="translated">Utilice este atributo para indicar que la funci&amp;oacute;n especificada es un manejador de interrupciones. El compilador genera secuencias de entrada y salida de funciones adecuadas para su uso en un manejador de interrupciones cuando este atributo est&amp;aacute; presente. El retorno de &lt;code&gt;break_handler&lt;/code&gt; se realiza a trav&amp;eacute;s de &lt;code&gt;rtbd&lt;/code&gt; en lugar de &lt;code&gt;rtsd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2edc9f687349668f0ff9d21a9fd536ad89ad9e2f" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function is an interrupt handler or an exception handler (depending on parameters passed to the function, explained further). The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present. The &lt;code&gt;IRET&lt;/code&gt; instruction, instead of the &lt;code&gt;RET&lt;/code&gt; instruction, is used to return from interrupt handlers. All registers, except for the EFLAGS register which is restored by the &lt;code&gt;IRET&lt;/code&gt; instruction, are preserved by the compiler. Since GCC doesn&amp;rsquo;t preserve SSE, MMX nor x87 states, the GCC option</source>
          <target state="translated">Utilice este atributo para indicar que la funci&amp;oacute;n especificada es un manejador de interrupciones o un manejador de excepciones (dependiendo de los par&amp;aacute;metros pasados ​​a la funci&amp;oacute;n, explicado m&amp;aacute;s adelante). El compilador genera secuencias de entrada y salida de funciones adecuadas para su uso en un manejador de interrupciones cuando este atributo est&amp;aacute; presente. La instrucci&amp;oacute;n &lt;code&gt;IRET&lt;/code&gt; , en lugar de la instrucci&amp;oacute;n &lt;code&gt;RET&lt;/code&gt; , se usa para regresar de los manejadores de interrupciones. Todos los registros, excepto el registro EFLAGS que es restaurado por la instrucci&amp;oacute;n &lt;code&gt;IRET&lt;/code&gt; , son preservados por el compilador. Dado que GCC no conserva los estados SSE, MMX ni x87, la opci&amp;oacute;n GCC</target>
        </trans-unit>
        <trans-unit id="0c30254e85a0958ba0ac7ce6feb29ae31661d530" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present.</source>
          <target state="translated">Utilice este atributo para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando este atributo está presente.</target>
        </trans-unit>
        <trans-unit id="d47a65245a7242658fd94eba35172dfdbe8eccc4" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present. An optional argument is supported for the interrupt attribute which allows the interrupt mode to be described. By default GCC assumes the external interrupt controller (EIC) mode is in use, this can be explicitly set using &lt;code&gt;eic&lt;/code&gt;. When interrupts are non-masked then the requested Interrupt Priority Level (IPL) is copied to the current IPL which has the effect of only enabling higher priority interrupts. To use vectored interrupt mode use the argument &lt;code&gt;vector=[sw0|sw1|hw0|hw1|hw2|hw3|hw4|hw5]&lt;/code&gt;, this will change the behavior of the non-masked interrupt support and GCC will arrange to mask all interrupts from sw0 up to and including the specified interrupt vector.</source>
          <target state="translated">Utilice este atributo para indicar que la funci&amp;oacute;n especificada es un controlador de interrupciones. El compilador genera secuencias de entrada y salida de funciones adecuadas para su uso en un manejador de interrupciones cuando este atributo est&amp;aacute; presente. Se soporta un argumento opcional para el atributo de interrupci&amp;oacute;n que permite describir el modo de interrupci&amp;oacute;n. Por defecto, GCC asume que el modo de controlador de interrupci&amp;oacute;n externo (EIC) est&amp;aacute; en uso, esto se puede configurar expl&amp;iacute;citamente usando &lt;code&gt;eic&lt;/code&gt; . Cuando las interrupciones no est&amp;aacute;n enmascaradas, el nivel de prioridad de interrupci&amp;oacute;n (IPL) solicitado se copia en la IPL actual, lo que tiene el efecto de habilitar solo interrupciones de mayor prioridad. Para usar el modo de interrupci&amp;oacute;n vectorial, use el argumento &lt;code&gt;vector=[sw0|sw1|hw0|hw1|hw2|hw3|hw4|hw5]&lt;/code&gt; , esto cambiar&amp;aacute; el comportamiento del soporte de interrupciones no enmascaradas y GCC se encargar&amp;aacute; de enmascarar todas las interrupciones desde sw0 hasta e incluyendo el vector de interrupci&amp;oacute;n especificado.</target>
        </trans-unit>
        <trans-unit id="0ace02ca61dedf94a751682f5d4174fdf42f160d" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present. Either name may be used.</source>
          <target state="translated">Utilice este atributo para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando este atributo está presente.Se puede utilizar cualquier nombre.</target>
        </trans-unit>
        <trans-unit id="bb60152fa1da7627a1b21880311cc9395167dfd1" translate="yes" xml:space="preserve">
          <source>Use this attribute to indicate that the specified function is an interrupt handler. The compiler generates function entry and exit sequences suitable for use in an interrupt handler when this attribute is present. It may also generate a special section with code to initialize the interrupt vector table.</source>
          <target state="translated">Utilice este atributo para indicar que la función especificada es un manejador de interrupciones.El compilador genera secuencias de entrada y salida de la función adecuadas para su uso en un manejador de interrupciones cuando este atributo está presente.También puede generar una sección especial con código para inicializar la tabla de vectores de interrupción.</target>
        </trans-unit>
        <trans-unit id="ea92b79a9f3c03589b9a2bec6c52bb535643eb63" translate="yes" xml:space="preserve">
          <source>Use this attribute to place a variable in the &lt;code&gt;.shared&lt;/code&gt; memory space. This memory space is private to each cooperative thread array; only threads within one thread block refer to the same instance of the variable. The runtime does not initialize variables in this memory space.</source>
          <target state="translated">Utilice este atributo para colocar una variable en el espacio de memoria &lt;code&gt;.shared&lt;/code&gt; . Este espacio de memoria es privado para cada matriz de subprocesos cooperativos; solo los subprocesos dentro de un bloque de subprocesos se refieren a la misma instancia de la variable. El tiempo de ejecuci&amp;oacute;n no inicializa variables en este espacio de memoria.</target>
        </trans-unit>
        <trans-unit id="b1ecdb3757207ea0940932cf33695720d7e7f73c" translate="yes" xml:space="preserve">
          <source>Use this attribute together with &lt;code&gt;interrupt_handler&lt;/code&gt;, &lt;code&gt;exception_handler&lt;/code&gt; or &lt;code&gt;nmi_handler&lt;/code&gt; to indicate that the function entry code should enable nested interrupts or exceptions.</source>
          <target state="translated">Utilice este atributo junto con &lt;code&gt;interrupt_handler&lt;/code&gt; , &lt;code&gt;exception_handler&lt;/code&gt; o &lt;code&gt;nmi_handler&lt;/code&gt; para indicar que el c&amp;oacute;digo de entrada de la funci&amp;oacute;n debe habilitar interrupciones o excepciones anidadas.</target>
        </trans-unit>
        <trans-unit id="01448e4d9272cc29bf3907d177e8611ce1e38ee0" translate="yes" xml:space="preserve">
          <source>Use this directive in &lt;em&gt;header files&lt;/em&gt; that define object classes, to save space in most of the object files that use those classes. Normally, local copies of certain information (backup copies of inline member functions, debugging information, and the internal tables that implement virtual functions) must be kept in each object file that includes class definitions. You can use this pragma to avoid such duplication. When a header file containing &amp;lsquo;</source>
          <target state="translated">Utilice esta directiva en &lt;em&gt;archivos de encabezado&lt;/em&gt; que definen clases de objetos para ahorrar espacio en la mayor&amp;iacute;a de los archivos de objetos que utilizan esas clases. Normalmente, las copias locales de cierta informaci&amp;oacute;n (copias de seguridad de las funciones de miembros en l&amp;iacute;nea, informaci&amp;oacute;n de depuraci&amp;oacute;n y las tablas internas que implementan funciones virtuales) deben guardarse en cada archivo de objeto que incluye definiciones de clase. Puede utilizar este pragma para evitar esa duplicaci&amp;oacute;n. Cuando un archivo de encabezado que contiene '</target>
        </trans-unit>
        <trans-unit id="d280eeca70b31bee4ab8a083eaebf1bfa7fbe798" translate="yes" xml:space="preserve">
          <source>Use this option for microcontroller with a 5200 core, including the MCF5202, MCF5203, MCF5204 and MCF5206.</source>
          <target state="translated">Utilice esta opción para el microcontrolador con un núcleo de 5200,incluyendo el MCF5202,MCF5203,MCF5204 y MCF5206.</target>
        </trans-unit>
        <trans-unit id="a112527843e5614605b4e3f46e7e6138969c47d8" translate="yes" xml:space="preserve">
          <source>Use this option for microcontrollers with a 68000 or EC000 core, including the 68008, 68302, 68306, 68307, 68322, 68328 and 68356.</source>
          <target state="translated">Utilice esta opción para los microcontroladores con un núcleo de 68000 o EC000,incluyendo los 68008,68302,68306,68307,68322,68328 y 68356.</target>
        </trans-unit>
        <trans-unit id="63187c5307bd577a4586510b3b1f06b54dea5f9f" translate="yes" xml:space="preserve">
          <source>Use this option for microcontrollers with a CPU32 or CPU32+ core, including the 68330, 68331, 68332, 68333, 68334, 68336, 68340, 68341, 68349 and 68360.</source>
          <target state="translated">Utilice esta opción para los microcontroladores con un núcleo CPU32 o CPU32+,incluyendo los 68330,68331,68332,68333,68334,68336,68340,68341,68349 y 68360.</target>
        </trans-unit>
        <trans-unit id="41f23198542e0d6a3a5d2900310d1b7abe9d3260" translate="yes" xml:space="preserve">
          <source>Use this option to require GCC to construct &lt;em&gt;all&lt;/em&gt; integer constants using code, even if it takes more instructions (the maximum is six).</source>
          <target state="translated">Use esta opci&amp;oacute;n para requerir que GCC construya &lt;em&gt;todas las&lt;/em&gt; constantes enteras usando c&amp;oacute;digo, incluso si requiere m&amp;aacute;s instrucciones (el m&amp;aacute;ximo es seis).</target>
        </trans-unit>
        <trans-unit id="6aa829df1806f0740110776091d0764dbe5ca6cc" translate="yes" xml:space="preserve">
          <source>Use this pragma in a &lt;em&gt;main input file&lt;/em&gt;, when you want full output from included header files to be generated (and made globally visible). The included header file, in turn, should use &amp;lsquo;</source>
          <target state="translated">Utilice este pragma en un &lt;em&gt;archivo de entrada principal&lt;/em&gt; , cuando desee que se genere la salida completa de los archivos de encabezado incluidos (y se haga visible globalmente). El archivo de encabezado incluido, a su vez, debe usar '</target>
        </trans-unit>
        <trans-unit id="cf5e8f8ca29a0892846d7e7fbb28cf80ccb1a6dd" translate="yes" xml:space="preserve">
          <source>Use traditional TLS as the thread-local storage mechanism for dynamic accesses of TLS variables.</source>
          <target state="translated">Usar el TLS tradicional como mecanismo de almacenamiento local de hilos para los accesos dinámicos de las variables del TLS.</target>
        </trans-unit>
        <trans-unit id="d8a60407e03b2ced230c36ef1b80cb979fd89c1c" translate="yes" xml:space="preserve">
          <source>Use uClibc C library. This is the default on &amp;lsquo;</source>
          <target state="translated">Utilice la biblioteca uClibc C. Este es el predeterminado en '</target>
        </trans-unit>
        <trans-unit id="5a7b4e094ebc57080c3754943807a6fa36611b6e" translate="yes" xml:space="preserve">
          <source>Use uids starting at this parameter for nondebug insns. The range below the parameter is reserved exclusively for debug insns created by</source>
          <target state="translated">Usar los uides a partir de este parámetro para los insumos sin bichos.El rango por debajo del parámetro está reservado exclusivamente para insumos de depuración creados por</target>
        </trans-unit>
        <trans-unit id="5c902a2c872ceeb654d592edec56cf917fe25417" translate="yes" xml:space="preserve">
          <source>Use version &lt;var&gt;n&lt;/var&gt; of the C++ ABI. The default is version 0.</source>
          <target state="translated">Utilice la versi&amp;oacute;n &lt;var&gt;n&lt;/var&gt; de la ABI de C ++. El valor predeterminado es la versi&amp;oacute;n 0.</target>
        </trans-unit>
        <trans-unit id="80654292da05f375c19f860e1835e2717583ea50" translate="yes" xml:space="preserve">
          <source>Use version &lt;var&gt;n&lt;/var&gt; of the Objective-C ABI for the selected runtime. This option is currently supported only for the NeXT runtime. In that case, Version 0 is the traditional (32-bit) ABI without support for properties and other Objective-C 2.0 additions. Version 1 is the traditional (32-bit) ABI with support for properties and other Objective-C 2.0 additions. Version 2 is the modern (64-bit) ABI. If nothing is specified, the default is Version 0 on 32-bit target machines, and Version 2 on 64-bit target machines.</source>
          <target state="translated">Utilice la versi&amp;oacute;n &lt;var&gt;n&lt;/var&gt; de Objective-C ABI para el tiempo de ejecuci&amp;oacute;n seleccionado. Actualmente, esta opci&amp;oacute;n solo es compatible con el tiempo de ejecuci&amp;oacute;n NeXT. En ese caso, la Versi&amp;oacute;n 0 es la ABI tradicional (32 bits) sin soporte para propiedades y otras adiciones de Objective-C 2.0. La versi&amp;oacute;n 1 es la ABI tradicional (32 bits) con soporte para propiedades y otras adiciones de Objective-C 2.0. La versi&amp;oacute;n 2 es la ABI moderna (64 bits). Si no se especifica nada, el valor predeterminado es la Versi&amp;oacute;n 0 en las m&amp;aacute;quinas de destino de 32 bits y la Versi&amp;oacute;n 2 en las m&amp;aacute;quinas de destino de 64 bits.</target>
        </trans-unit>
        <trans-unit id="60277ce820e41f7e776a5ef4d10492797080b9c8" translate="yes" xml:space="preserve">
          <source>User defined libraries may want to implement their own constant string class. To be able to support them, the GNU Objective-C compiler provides a new command line options</source>
          <target state="translated">Las bibliotecas definidas por el usuario pueden querer implementar su propia clase de cadena constante.Para poder soportarlas,el compilador GNU Objective-C proporciona una nueva opción de línea de comandos</target>
        </trans-unit>
        <trans-unit id="6d924128c5dfe7331fc4ebe7adabf4aa651b95c3" translate="yes" xml:space="preserve">
          <source>Users often think it is a bug when GCC reports an error for code like this:</source>
          <target state="translated">Los usuarios a menudo piensan que es un error cuando GCC reporta un error para un código como este:</target>
        </trans-unit>
        <trans-unit id="af3138cc282360a8600ef75867abc1b680f535c7" translate="yes" xml:space="preserve">
          <source>Using &amp;lsquo;</source>
          <target state="translated">Utilizando '</target>
        </trans-unit>
        <trans-unit id="c673f0c8f99a2c8acaf1de1f7743b24ea2d61bf5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;__auto_type&lt;/code&gt; instead of &lt;code&gt;typeof&lt;/code&gt; has two advantages:</source>
          <target state="translated">Usar &lt;code&gt;__auto_type&lt;/code&gt; en lugar de &lt;code&gt;typeof&lt;/code&gt; tiene dos ventajas:</target>
        </trans-unit>
        <trans-unit id="ae16306fd8fc8ae70da39e8eba7d569ba5d4c5f6" translate="yes" xml:space="preserve">
          <source>Using extended &lt;code&gt;asm&lt;/code&gt; (see &lt;a href=&quot;extended-asm#Extended-Asm&quot;&gt;Extended Asm&lt;/a&gt;) typically produces smaller, safer, and more efficient code, and in most cases it is a better solution than basic &lt;code&gt;asm&lt;/code&gt;. However, there are two situations where only basic &lt;code&gt;asm&lt;/code&gt; can be used:</source>
          <target state="translated">El uso de &lt;code&gt;asm&lt;/code&gt; extendido (consulte &lt;a href=&quot;extended-asm#Extended-Asm&quot;&gt;Asm extendido&lt;/a&gt; ) normalmente produce un c&amp;oacute;digo m&amp;aacute;s peque&amp;ntilde;o, m&amp;aacute;s seguro y m&amp;aacute;s eficiente, y en la mayor&amp;iacute;a de los casos es una mejor soluci&amp;oacute;n que el &lt;code&gt;asm&lt;/code&gt; b&amp;aacute;sico . Sin embargo, hay dos situaciones donde s&amp;oacute;lo b&amp;aacute;sica &lt;code&gt;asm&lt;/code&gt; se puede utilizar:</target>
        </trans-unit>
        <trans-unit id="fdb3b64210e267abb96c2653531b3f456e595b0e" translate="yes" xml:space="preserve">
          <source>Using floating point parameters for indirect calls to static functions will not work when using the HP assembler. There simply is no way for GCC to specify what registers hold arguments for static functions when using the HP assembler. GAS for the PA does not have this problem.</source>
          <target state="translated">El uso de parámetros de punto flotante para llamadas indirectas a funciones estáticas no funcionará cuando se utilice el ensamblador HP.Simplemente no hay forma de que GCC especifique qué registros contienen argumentos para funciones estáticas cuando se utiliza el ensamblador HP.GAS para el PA no tiene este problema.</target>
        </trans-unit>
        <trans-unit id="7f26807350569d85ac77ce79b84cf07a635bf81a" translate="yes" xml:space="preserve">
          <source>Using gcov with GCC optimization.</source>
          <target state="translated">Usando gcov con optimización de GCC.</target>
        </trans-unit>
        <trans-unit id="057195ec8f49950ab0bbd7ddf35c8adeaad3604e" translate="yes" xml:space="preserve">
          <source>Using that same compiler, this code:</source>
          <target state="translated">Usando ese mismo compilador,este código:</target>
        </trans-unit>
        <trans-unit id="2e7015f3209d38900be9cab70f20fe385b6b0e2e" translate="yes" xml:space="preserve">
          <source>Using the GNU Compiler Collection (GCC)</source>
          <target state="translated">Usando la colección de compiladores GNU (GCC)</target>
        </trans-unit>
        <trans-unit id="e084cdbad1b5de611e7b01b9c20a68e2bf4e6eb3" translate="yes" xml:space="preserve">
          <source>Using the argument forms of the &lt;code&gt;constructor&lt;/code&gt; and &lt;code&gt;destructor&lt;/code&gt; attributes on targets where the feature is not supported is rejected with an error.</source>
          <target state="translated">El uso de las formas de argumento de los atributos de &lt;code&gt;constructor&lt;/code&gt; y &lt;code&gt;destructor&lt;/code&gt; en destinos donde la caracter&amp;iacute;stica no es compatible se rechaza con un error.</target>
        </trans-unit>
        <trans-unit id="b7a3e4a21bb4f065c09ef23587c979ac36262bbb" translate="yes" xml:space="preserve">
          <source>Using the built-in functions described below, you can record the arguments a function received, and call another function with the same arguments, without knowing the number or types of the arguments.</source>
          <target state="translated">Mediante las funciones incorporadas que se describen a continuación,se pueden registrar los argumentos que recibe una función y llamar a otra función con los mismos argumentos,sin conocer el número ni el tipo de los mismos.</target>
        </trans-unit>
        <trans-unit id="4a1d87094917525e3f4fb29e2aa35aa01c301737" translate="yes" xml:space="preserve">
          <source>Using the cast as the right-hand side of an assignment to a variable of union type is equivalent to storing in a member of the union with the same type</source>
          <target state="translated">Usar el yeso como la parte derecha de una asignación a una variable de tipo de unión equivale a almacenar en un miembro de la unión con el mismo tipo</target>
        </trans-unit>
        <trans-unit id="db9a503a051e32ac0fce6e9c55331f5affaaa22c" translate="yes" xml:space="preserve">
          <source>Using the variable</source>
          <target state="translated">Usando la variable</target>
        </trans-unit>
        <trans-unit id="b34c5d037644130f54f15d5f39b3ad23e6aef200" translate="yes" xml:space="preserve">
          <source>Using these common set of HTM inline functions, we can create a more portable version of the HTM example in the previous section that will work on either PowerPC or S/390:</source>
          <target state="translated">Utilizando este conjunto común de funciones en línea del HTM,podemos crear una versión más portátil del ejemplo del HTM de la sección anterior que funcionará tanto en el PowerPC como en el S/390:</target>
        </trans-unit>
        <trans-unit id="e5427ab978358d5a7992aa85bab4f2f802b870d2" translate="yes" xml:space="preserve">
          <source>Using this attribute can improve optimization. Compiler predicts that a function with the attribute returns non-null in most cases. Functions like &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;calloc&lt;/code&gt; have this property because they return a pointer to uninitialized or zeroed-out storage. However, functions like &lt;code&gt;realloc&lt;/code&gt; do not have this property, as they can return a pointer to storage containing pointers.</source>
          <target state="translated">El uso de este atributo puede mejorar la optimizaci&amp;oacute;n. El compilador predice que una funci&amp;oacute;n con el atributo devuelve un valor no nulo en la mayor&amp;iacute;a de los casos. Funciones como &lt;code&gt;malloc&lt;/code&gt; y &lt;code&gt;calloc&lt;/code&gt; tienen esta propiedad porque devuelven un puntero al almacenamiento sin inicializar o sin cero. Sin embargo, funciones como &lt;code&gt;realloc&lt;/code&gt; no tienen esta propiedad, ya que pueden devolver un puntero al almacenamiento que contiene punteros.</target>
        </trans-unit>
        <trans-unit id="1b49b124c3d34a77d39d66c92e391e732c60826d" translate="yes" xml:space="preserve">
          <source>Using vector instructions through built-in functions.</source>
          <target state="translated">Usando instrucciones vectoriales a través de funciones incorporadas.</target>
        </trans-unit>
        <trans-unit id="2dfe46da755d749792dfc6596d3900b7c7d1225d" translate="yes" xml:space="preserve">
          <source>Usually, the more IPA optimizations enabled, the larger the number of impacted functions for each function. In order to control the number of impacted functions and more easily compute the list of impacted function, IPA optimizations can be partially enabled at two different levels.</source>
          <target state="translated">Por lo general,cuanto más optimizaciones del IPA estén habilitadas,mayor será el número de funciones impactadas para cada función.A fin de controlar el número de funciones impactadas y calcular más fácilmente la lista de funciones impactadas,las optimizaciones del IPA pueden habilitarse parcialmente en dos niveles diferentes.</target>
        </trans-unit>
        <trans-unit id="75ec5cdb7f54185163f339da83a6bb1078cb8cdf" translate="yes" xml:space="preserve">
          <source>Usually, the specified type of a compound literal is a structure. Assume that &lt;code&gt;struct foo&lt;/code&gt; and &lt;code&gt;structure&lt;/code&gt; are declared as shown:</source>
          <target state="translated">Normalmente, el tipo especificado de un literal compuesto es una estructura. Suponga que la &lt;code&gt;struct foo&lt;/code&gt; y la &lt;code&gt;structure&lt;/code&gt; se declaran como se muestra:</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="574d16a752ab33d0cef891f9de30707743042305" translate="yes" xml:space="preserve">
          <source>V850E2V3</source>
          <target state="translated">V850E2V3</target>
        </trans-unit>
        <trans-unit id="18daea8d25a1ff1128b31b35345423541b18cfb9" translate="yes" xml:space="preserve">
          <source>VFP floating-point registers &lt;code&gt;d0&lt;/code&gt;-&lt;code&gt;d31&lt;/code&gt; and the appropriate subset &lt;code&gt;d0&lt;/code&gt;-&lt;code&gt;d15&lt;/code&gt; based on command line options. Used for 64 bit values only. Not valid for Thumb1.</source>
          <target state="translated">Registros de punto flotante VFP &lt;code&gt;d0&lt;/code&gt; - &lt;code&gt;d31&lt;/code&gt; y el subconjunto apropiado &lt;code&gt;d0&lt;/code&gt; - &lt;code&gt;d15&lt;/code&gt; seg&amp;uacute;n las opciones de la l&amp;iacute;nea de comando. Se utiliza solo para valores de 64 bits. No es v&amp;aacute;lido para Thumb1.</target>
        </trans-unit>
        <trans-unit id="9cbb2d892b07e55db914e77fcb2ce30c1ce00bae" translate="yes" xml:space="preserve">
          <source>VFP floating-point registers &lt;code&gt;s0&lt;/code&gt;-&lt;code&gt;s31&lt;/code&gt;. Used for 32 bit values.</source>
          <target state="translated">Registros de coma flotante VFP &lt;code&gt;s0&lt;/code&gt; - &lt;code&gt;s31&lt;/code&gt; . Se utiliza para valores de 32 bits.</target>
        </trans-unit>
        <trans-unit id="3d910167fb4f24dfbb3904aef13e596ce47de5f7" translate="yes" xml:space="preserve">
          <source>VGPR register</source>
          <target state="translated">Registro VGPR</target>
        </trans-unit>
        <trans-unit id="d5387553aab64197b27321b5224709eacf46c07a" translate="yes" xml:space="preserve">
          <source>VIA C3 CPU with MMX and 3DNow! instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">CPU VIA C3 con soporte de juego de instrucciones MMX y 3DNow! (No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="488b543fd950a74701b966446818fb5fe7d6e4bc" translate="yes" xml:space="preserve">
          <source>VIA C3-2 (Nehemiah/C5XL) CPU with MMX and SSE instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA C3-2 (Nehemiah/C5XL)CPU con soporte de MMX y conjunto de instrucciones SSE.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="ea585482eb4a4acc3a6360d2898743a7c9373beb" translate="yes" xml:space="preserve">
          <source>VIA C7 (Esther) CPU with MMX, SSE, SSE2 and SSE3 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA C7 (Esther)CPU con soporte de conjuntos de instrucciones MMX,SSE,SSE2 y SSE3.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="f935a35014da34c94c36f4bd8a1a050285f9d495" translate="yes" xml:space="preserve">
          <source>VIA Eden Esther CPU with MMX, SSE, SSE2 and SSE3 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Eden Esther CPU con soporte de conjuntos de instrucciones MMX,SSE,SSE2 y SSE3.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="c111443ef87aeb29107b8a68909620c76e8f94c1" translate="yes" xml:space="preserve">
          <source>VIA Eden Nehemiah CPU with MMX and SSE instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Eden Nehemiah CPU con MMX y soporte de conjunto de instrucciones SSE.(No se implementa ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="8cce1c624bb9c2543acc6d544b6d1ed27c2158a4" translate="yes" xml:space="preserve">
          <source>VIA Eden Samuel 2 CPU with MMX and 3DNow! instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Eden Samuel 2 CPU con soporte de juego de instrucciones MMX y 3DNow! (No se ha implementado ninguna programación para este chip.)</target>
        </trans-unit>
        <trans-unit id="2151cc7927e87e8f1c1dda8e6327ac4e0a64b7a2" translate="yes" xml:space="preserve">
          <source>VIA Eden X2 CPU with x86-64, MMX, SSE, SSE2 and SSE3 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Eden X2 CPU con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2 y SSE3.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="1d98ef012706e83dddd4d35e5d791491017f3e46" translate="yes" xml:space="preserve">
          <source>VIA Eden X4 CPU with x86-64, MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and AVX2 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Eden X4 CPU con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2,SSE3,SSSE3,SSE4.1,SSE4.2,AVX y AVX2.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="b8b4d4a862d49f8ff0f8c10fa3fdc814a539ab87" translate="yes" xml:space="preserve">
          <source>VIA Nano 1xxx CPU with x86-64, MMX, SSE, SSE2, SSE3 and SSSE3 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Nano 1xxx CPU con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2,SSE3 y SSSE3.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="dd719c7a93195bbf6d07de4c172b28d8c80267d3" translate="yes" xml:space="preserve">
          <source>VIA Nano 2xxx CPU with x86-64, MMX, SSE, SSE2, SSE3 and SSSE3 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Nano 2xxx CPU con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2,SSE3 y SSSE3.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="01f9fedc3d4f11e857e6f0d9dcaa2b13176b8f56" translate="yes" xml:space="preserve">
          <source>VIA Nano 3xxx CPU with x86-64, MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">CPU VIA Nano 3xxx con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2,SSE3,SSSE3 y SSE4.1.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="06b544d4bdd7d18ca4149d3c750f4127e9f983b2" translate="yes" xml:space="preserve">
          <source>VIA Nano Dual Core CPU with x86-64, MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Nano CPU de doble núcleo con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2,SSE3,SSSE3 y SSE4.1.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="a67ea4083339300c1d547f346d07c9d5764525af" translate="yes" xml:space="preserve">
          <source>VIA Nano Quad Core CPU with x86-64, MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 instruction set support. (No scheduling is implemented for this chip.)</source>
          <target state="translated">VIA Nano CPU de cuatro núcleos con soporte de conjuntos de instrucciones x86-64,MMX,SSE,SSE2,SSE3,SSSE3 y SSE4.1.(No se ha implementado ninguna programación para este chip).</target>
        </trans-unit>
        <trans-unit id="04026107ef9bdc35c4d06c69d4d8d9bd034df2b9" translate="yes" xml:space="preserve">
          <source>VPCLMULQDQ instructions.</source>
          <target state="translated">Instrucciones de VPCLMULQDQ.</target>
        </trans-unit>
        <trans-unit id="47b598fadc542503a4dfb3ab0e7c08963d810a39" translate="yes" xml:space="preserve">
          <source>VRSAVE</source>
          <target state="translated">VRSAVE</target>
        </trans-unit>
        <trans-unit id="55aa2f856c0f4ab3cdcac26a348778a588a6f8d7" translate="yes" xml:space="preserve">
          <source>VSIB address operand.</source>
          <target state="translated">Dirección VSIB operando.</target>
        </trans-unit>
        <trans-unit id="1e028c813fc89395b126781b62fe740e1e2e5612" translate="yes" xml:space="preserve">
          <source>VSX register if direct move instructions are enabled, or NO_REGS.</source>
          <target state="translated">Registro VSX si las instrucciones de movimiento directo están habilitadas,o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="b1bf4ce917ea0e342c5ba87416d3c1425045396d" translate="yes" xml:space="preserve">
          <source>VSX register if the</source>
          <target state="translated">El registro de VSX si el</target>
        </trans-unit>
        <trans-unit id="fa37e771ee1559b7e1a74968d2d6f9d21bbad3f8" translate="yes" xml:space="preserve">
          <source>VSX register to use for IEEE 128-bit floating point TFmode, or NO_REGS.</source>
          <target state="translated">Registro VSX para usar para el modo TFmode de punto flotante de 128 bits del IEEE,o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="dceb09e56dc6976e2ceb44b306b90d48c16cdbfa" translate="yes" xml:space="preserve">
          <source>VSX register to use for IEEE 128-bit floating point, or NO_REGS.</source>
          <target state="translated">Registro VSX para usar para el punto flotante de 128 bits del IEEE,o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="5f2931cf969db5dec892ea6c97702a431f737f4f" translate="yes" xml:space="preserve">
          <source>VSX register to use for ISA 3.0 vector instructions, or NO_REGS.</source>
          <target state="translated">Registro VSX para usar para las instrucciones de vector ISA 3.0,o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="e1e2b74202b4df2a34423d711c880f4bed5b3b14" translate="yes" xml:space="preserve">
          <source>VSX vector register to hold 128 bit integer or NO_REGS.</source>
          <target state="translated">El registro vectorial VSX para mantener un entero de 128 bits o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="f3dc5e0d7bbebef3893829b42a25b08c256dd4d8" translate="yes" xml:space="preserve">
          <source>VSX vector register to hold scalar double values or NO_REGS.</source>
          <target state="translated">Registro vectorial VSX para mantener valores dobles escalares o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="dc350e1093c1db7d408d43c001ed04b73c029f23" translate="yes" xml:space="preserve">
          <source>VSX vector register to hold vector double data or NO_REGS.</source>
          <target state="translated">Registro de vectores VSX para mantener datos dobles de vectores o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="167ef2a892b4ddc57b82f58074b39f524e5008e6" translate="yes" xml:space="preserve">
          <source>VSX vector register to hold vector float data or NO_REGS.</source>
          <target state="translated">Registro vectorial VSX para mantener los datos de los flotadores vectoriales o NO_REGS.</target>
        </trans-unit>
        <trans-unit id="81969f619b07a96e38c916b9993cc433143a784f" translate="yes" xml:space="preserve">
          <source>VTables</source>
          <target state="translated">VTables</target>
        </trans-unit>
        <trans-unit id="f5f8e1247b6f26b263b34207afe669cb4ac9de15" translate="yes" xml:space="preserve">
          <source>Valid ISO C and ISO C++ programs should compile properly with or without this option (though a rare few require</source>
          <target state="translated">Los programas ISO C e ISO C++válidos deben compilar correctamente con o sin esta opción (aunque algunos pocos requieren</target>
        </trans-unit>
        <trans-unit id="6c1f687862693a87865ad97fba05738669eac5ce" translate="yes" xml:space="preserve">
          <source>Valid alignment values other than those returned by an _Alignof expression for fundamental types, if any (C11 6.2.8).</source>
          <target state="translated">Valores de alineación válidos distintos de los devueltos por una expresión _Aligno de los tipos fundamentales,si los hay (C11 6.2.8).</target>
        </trans-unit>
        <trans-unit id="b8f1ffda93c672ca444e36a4f56d16e63e5832c4" translate="yes" xml:space="preserve">
          <source>Valid alignments are powers of 2 up to and including &lt;em&gt;2^{28}&lt;/em&gt;.</source>
          <target state="translated">Las alineaciones v&amp;aacute;lidas son potencias de 2 hasta &lt;em&gt;2 ^ {28}&lt;/em&gt; inclusive .</target>
        </trans-unit>
        <trans-unit id="e0567df87b1ea75cda27929ada4a4306a0c755cd" translate="yes" xml:space="preserve">
          <source>Valid options for &lt;var&gt;time&lt;/var&gt; are</source>
          <target state="translated">Las opciones v&amp;aacute;lidas para el &lt;var&gt;time&lt;/var&gt; son</target>
        </trans-unit>
        <trans-unit id="bd15e3ace5dbddf7a0573a3f99038d776bddea91" translate="yes" xml:space="preserve">
          <source>Value appropriate as displacement.</source>
          <target state="translated">Valor apropiado como desplazamiento.</target>
        </trans-unit>
        <trans-unit id="bb6561e8ab01989a094611590f0602e85a6c5513" translate="yes" xml:space="preserve">
          <source>Values &amp;lsquo;</source>
          <target state="translated">Valores '</target>
        </trans-unit>
        <trans-unit id="d206078a63cff7bace258bb1f4bb9507b5cf8d12" translate="yes" xml:space="preserve">
          <source>Variable, function, and type attributes for C++ only.</source>
          <target state="translated">Atributos de variables,funciones y tipos sólo para C++.</target>
        </trans-unit>
        <trans-unit id="02b16fb34038c0c62719510ede0c2e29dc2b90fc" translate="yes" xml:space="preserve">
          <source>Variable-length automatic arrays are allowed in ISO C99, and as an extension GCC accepts them in C90 mode and in C++. These arrays are declared like any other automatic arrays, but with a length that is not a constant expression. The storage is allocated at the point of declaration and deallocated when the block scope containing the declaration exits. For example:</source>
          <target state="translated">Los arreglos automáticos de longitud variable están permitidos en ISO C99,y como extensión GCC los acepta en modo C90 y en C++.Estos arreglos se declaran como cualquier otro arreglo automático,pero con una longitud que no es una expresión constante.El almacenamiento se asigna en el punto de declaración y se deslocaliza cuando sale el ámbito del bloque que contiene la declaración.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c1cafb0eff03f52681f175e65218139665f9ce2c" translate="yes" xml:space="preserve">
          <source>Variables declared at global scope.</source>
          <target state="translated">Variables declaradas en el ámbito mundial.</target>
        </trans-unit>
        <trans-unit id="5c01cb4a8cb1760f9b45c63f7213bd015da5c74c" translate="yes" xml:space="preserve">
          <source>Variables declared within a function.</source>
          <target state="translated">Variables declaradas dentro de una función.</target>
        </trans-unit>
        <trans-unit id="b8da0198222d30500868466badddd4041e14cce0" translate="yes" xml:space="preserve">
          <source>Variables of size &lt;var&gt;n&lt;/var&gt; bytes or smaller are placed in the &lt;code&gt;.based&lt;/code&gt; section by default. Based variables use the &lt;code&gt;$tp&lt;/code&gt; register as a base register, and there is a 128-byte limit to the &lt;code&gt;.based&lt;/code&gt; section.</source>
          <target state="translated">Las variables de tama&amp;ntilde;o &lt;var&gt;n&lt;/var&gt; bytes o menos se colocan en la secci&amp;oacute;n &lt;code&gt;.based&lt;/code&gt; de forma predeterminada. Las variables basadas utilizan el registro &lt;code&gt;$tp&lt;/code&gt; como registro base, y hay un l&amp;iacute;mite de 128 bytes para la secci&amp;oacute;n &lt;code&gt;.based&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10abea2eed8c32edbb792ccf39c883573091a3b2" translate="yes" xml:space="preserve">
          <source>Variables that are &lt;var&gt;n&lt;/var&gt; bytes or smaller are allocated to the &lt;code&gt;.tiny&lt;/code&gt; section. These variables use the &lt;code&gt;$gp&lt;/code&gt; base register. The default for this option is 4, but note that there&amp;rsquo;s a 65536-byte limit to the &lt;code&gt;.tiny&lt;/code&gt; section.</source>
          <target state="translated">Las variables de &lt;var&gt;n&lt;/var&gt; bytes o menos se asignan a la secci&amp;oacute;n &lt;code&gt;.tiny&lt;/code&gt; . Estas variables usan el registro base &lt;code&gt;$gp&lt;/code&gt; . El valor predeterminado para esta opci&amp;oacute;n es 4, pero tenga en cuenta que hay un l&amp;iacute;mite de 65536 bytes para la secci&amp;oacute;n &lt;code&gt;.tiny&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd3f9d35c079daab2745eafe9db9775e6794913e" translate="yes" xml:space="preserve">
          <source>Variables with the &lt;code&gt;cb&lt;/code&gt; attribute are used to access the control bus, using special instructions. &lt;code&gt;addr&lt;/code&gt; indicates the control bus address. Example:</source>
          <target state="translated">Las variables con el atributo &lt;code&gt;cb&lt;/code&gt; se utilizan para acceder al bus de control, mediante instrucciones especiales. &lt;code&gt;addr&lt;/code&gt; indica la direcci&amp;oacute;n del bus de control. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="de934aeb77c58838cc9846aadb82fbd1b8f30e96" translate="yes" xml:space="preserve">
          <source>Variables with the &lt;code&gt;far&lt;/code&gt; attribute are addressed using a full 32-bit address. Since this covers the entire memory space, this allows modules to make no assumptions about where variables might be stored.</source>
          <target state="translated">Las variables con el atributo &lt;code&gt;far&lt;/code&gt; se direccionan utilizando una direcci&amp;oacute;n completa de 32 bits. Dado que esto cubre todo el espacio de memoria, esto permite que los m&amp;oacute;dulos no hagan suposiciones sobre d&amp;oacute;nde se pueden almacenar las variables.</target>
        </trans-unit>
        <trans-unit id="36905cf24c84385c4961b4619b30de52faf8e512" translate="yes" xml:space="preserve">
          <source>Variables with the &lt;code&gt;io&lt;/code&gt; attribute are used to address memory-mapped peripherals. If an address is specified, the variable is assigned that address, else it is not assigned an address (it is assumed some other module assigns an address). Example:</source>
          <target state="translated">Las variables con el atributo &lt;code&gt;io&lt;/code&gt; se utilizan para abordar perif&amp;eacute;ricos asignados en memoria. Si se especifica una direcci&amp;oacute;n, a la variable se le asigna esa direcci&amp;oacute;n, de lo contrario no se le asigna una direcci&amp;oacute;n (se asume que alg&amp;uacute;n otro m&amp;oacute;dulo asigna una direcci&amp;oacute;n). Ejemplo:</target>
        </trans-unit>
        <trans-unit id="8908399e90d6597694e9414404cf146058083fc2" translate="yes" xml:space="preserve">
          <source>Variables with the &lt;code&gt;near&lt;/code&gt; attribute are assumed to have addresses that fit in a 24-bit addressing mode. This is the default for large variables (&lt;code&gt;-mtiny=4&lt;/code&gt; is the default) but this attribute can override &lt;code&gt;-mtiny=&lt;/code&gt; for small variables, or override &lt;code&gt;-ml&lt;/code&gt;.</source>
          <target state="translated">Se supone que las variables con el atributo &lt;code&gt;near&lt;/code&gt; tienen direcciones que encajan en un modo de direccionamiento de 24 bits. Este es el valor predeterminado para variables grandes ( &lt;code&gt;-mtiny=4&lt;/code&gt; es el valor predeterminado) pero este atributo puede anular &lt;code&gt;-mtiny=&lt;/code&gt; para variables peque&amp;ntilde;as o anular &lt;code&gt;-ml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f34701193da16d128be7840c2b5e27cdc6209c0" translate="yes" xml:space="preserve">
          <source>Variadic functions always use the &lt;code&gt;&quot;aapcs&quot;&lt;/code&gt; calling convention and the compiler rejects attempts to specify an alternative.</source>
          <target state="translated">Las funciones variables siempre usan la convenci&amp;oacute;n de llamada &lt;code&gt;&quot;aapcs&quot;&lt;/code&gt; y el compilador rechaza los intentos de especificar una alternativa.</target>
        </trans-unit>
        <trans-unit id="c34add3442e320001d71a4acf459f90b84551e3c" translate="yes" xml:space="preserve">
          <source>Variations on C++.</source>
          <target state="translated">Variaciones en C++.</target>
        </trans-unit>
        <trans-unit id="0125a3430008ecbd7c8a33ef91916cf2ea436c9e" translate="yes" xml:space="preserve">
          <source>Variations on Objective-C and Objective-C++.</source>
          <target state="translated">Variaciones sobre el Objetivo-C y el Objetivo-C++.</target>
        </trans-unit>
        <trans-unit id="eb5d846c7919ee0bdc2338a4cc38cee42f3c00b6" translate="yes" xml:space="preserve">
          <source>Vector comparison is supported with standard comparison operators: &lt;code&gt;==, !=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=&lt;/code&gt;. Comparison operands can be vector expressions of integer-type or real-type. Comparison between integer-type vectors and real-type vectors are not supported. The result of the comparison is a vector of the same width and number of elements as the comparison operands with a signed integral element type.</source>
          <target state="translated">La comparaci&amp;oacute;n de vectores es compatible con los operadores de comparaci&amp;oacute;n est&amp;aacute;ndar: &lt;code&gt;==, !=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=&lt;/code&gt; . Los operandos de comparaci&amp;oacute;n pueden ser expresiones vectoriales de tipo entero o de tipo real. No se admite la comparaci&amp;oacute;n entre vectores de tipo entero y vectores de tipo real. El resultado de la comparaci&amp;oacute;n es un vector del mismo ancho y n&amp;uacute;mero de elementos que los operandos de comparaci&amp;oacute;n con un tipo de elemento integral con signo.</target>
        </trans-unit>
        <trans-unit id="5abc95e73e06fb4a5dc5582edf5afa312b0850ca" translate="yes" xml:space="preserve">
          <source>Vector condition register: VCC, VCC_LO, VCC_HI</source>
          <target state="translated">Registro de la condición del vector:VCC,VCC_LO,VCC_HI</target>
        </trans-unit>
        <trans-unit id="53804d00035aa75837541b3ccf479dca992da7d5" translate="yes" xml:space="preserve">
          <source>Vector constant that can be loaded with XXSPLTIB &amp;amp; sign extension.</source>
          <target state="translated">Constante vectorial que se puede cargar con XXSPLTIB y extensi&amp;oacute;n de signo.</target>
        </trans-unit>
        <trans-unit id="82f741b1697518a50ba54947e1a23cae2eaec1c0" translate="yes" xml:space="preserve">
          <source>Vector constant that can be loaded with the XXSPLTIB instruction.</source>
          <target state="translated">Constante vectorial que puede ser cargada con la instrucción XXSPLTIB.</target>
        </trans-unit>
        <trans-unit id="46e517c61990308718dcf40277ed1d92f620280a" translate="yes" xml:space="preserve">
          <source>Vector constant that does not require memory</source>
          <target state="translated">Constante vectorial que no requiere memoria</target>
        </trans-unit>
        <trans-unit id="b42c5127757a32ed5d06d2b5cf09ce9893f82ec9" translate="yes" xml:space="preserve">
          <source>Vector constant that is all zeros.</source>
          <target state="translated">Constante vectorial que es todo ceros.</target>
        </trans-unit>
        <trans-unit id="9c36bdfc3b8d0b06a49e5ef972497ba956ef9bbc" translate="yes" xml:space="preserve">
          <source>Vector conversion is available using the &lt;code&gt;__builtin_convertvector (vec, vectype)&lt;/code&gt; function. &lt;var&gt;vec&lt;/var&gt; must be an expression with integral or floating vector type and &lt;var&gt;vectype&lt;/var&gt; an integral or floating vector type with the same number of elements. The result has &lt;var&gt;vectype&lt;/var&gt; type and value of a C cast of every element of &lt;var&gt;vec&lt;/var&gt; to the element type of &lt;var&gt;vectype&lt;/var&gt;.</source>
          <target state="translated">La conversi&amp;oacute;n de vectores est&amp;aacute; disponible mediante la funci&amp;oacute;n &lt;code&gt;__builtin_convertvector (vec, vectype)&lt;/code&gt; . &lt;var&gt;vec&lt;/var&gt; debe ser una expresi&amp;oacute;n con tipo de vector integral o flotante y &lt;var&gt;vectype&lt;/var&gt; un tipo de vector integral o flotante con el mismo n&amp;uacute;mero de elementos. El resultado tiene el tipo &lt;var&gt;vectype&lt;/var&gt; y el valor de una conversi&amp;oacute;n C de cada elemento de &lt;var&gt;vec&lt;/var&gt; al tipo de elemento de &lt;var&gt;vectype&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d3bad6bdbaf23ec0df51bc6d85940b036ecbab94" translate="yes" xml:space="preserve">
          <source>Vector registers.</source>
          <target state="translated">Registros vectoriales.</target>
        </trans-unit>
        <trans-unit id="8e0df7cd51c0d162c1fce7156e6eae770327c8c2" translate="yes" xml:space="preserve">
          <source>Vector shuffling is available using functions &lt;code&gt;__builtin_shuffle (vec, mask)&lt;/code&gt; and &lt;code&gt;__builtin_shuffle (vec0, vec1, mask)&lt;/code&gt;. Both functions construct a permutation of elements from one or two vectors and return a vector of the same type as the input vector(s). The &lt;var&gt;mask&lt;/var&gt; is an integral vector with the same width (&lt;var&gt;W&lt;/var&gt;) and element count (&lt;var&gt;N&lt;/var&gt;) as the output vector.</source>
          <target state="translated">La &lt;code&gt;__builtin_shuffle (vec, mask)&lt;/code&gt; vectores est&amp;aacute; disponible mediante las funciones __builtin_shuffle (vec, mask) y &lt;code&gt;__builtin_shuffle (vec0, vec1, mask)&lt;/code&gt; . Ambas funciones construyen una permutaci&amp;oacute;n de elementos de uno o dos vectores y devuelven un vector del mismo tipo que los vectores de entrada. La &lt;var&gt;mask&lt;/var&gt; es un vector integral con el mismo ancho ( &lt;var&gt;W&lt;/var&gt; ) y recuento de elementos ( &lt;var&gt;N&lt;/var&gt; ) que el vector de salida.</target>
        </trans-unit>
        <trans-unit id="58128c4d1de4d0a51bf04fac4cddbc549bd01efb" translate="yes" xml:space="preserve">
          <source>Vector zero</source>
          <target state="translated">Vector cero</target>
        </trans-unit>
        <trans-unit id="73c5f8f62b1af06d2d8df3f66347a1a059d5cf24" translate="yes" xml:space="preserve">
          <source>Vectors are compared element-wise producing 0 when comparison is false and -1 (constant of the appropriate type where all bits are set) otherwise. Consider the following example.</source>
          <target state="translated">Los vectores se comparan en función del elemento produciendo 0 cuando la comparación es falsa y -1 (constante del tipo apropiado donde todos los bits están fijados)en caso contrario.Consideremos el siguiente ejemplo.</target>
        </trans-unit>
        <trans-unit id="fcd23bd0a88ba1a503b10ed5edf55ece81978ffc" translate="yes" xml:space="preserve">
          <source>Vectors can be subscripted as if the vector were an array with the same number of elements and base type. Out of bound accesses invoke undefined behavior at run time. Warnings for out of bound accesses for vector subscription can be enabled with</source>
          <target state="translated">Los vectores pueden ser suscritos como si el vector fuera un conjunto con el mismo número de elementos y tipo de base.Los accesos fuera del límite invocan un comportamiento indefinido en tiempo de ejecución.Las advertencias para los accesos fuera de límites para la suscripción de vectores pueden ser activadas con</target>
        </trans-unit>
        <trans-unit id="e368f0bdb096cdc80b942de26edde7361d633b14" translate="yes" xml:space="preserve">
          <source>Version 0 refers to the version conforming most closely to the C++ ABI specification. Therefore, the ABI obtained using version 0 will change in different versions of G++ as ABI bugs are fixed.</source>
          <target state="translated">La versión 0 se refiere a la versión que más se ajusta a la especificación C++ABI.Por lo tanto,la ABI obtenida usando la versión 0 cambiará en las diferentes versiones de G++a medida que los errores de la ABI sean corregidos.</target>
        </trans-unit>
        <trans-unit id="4d24a59e560f384b23499b32746ec055716a43ab" translate="yes" xml:space="preserve">
          <source>Version 1 is the version of the C++ ABI that first appeared in G++ 3.2.</source>
          <target state="translated">La versión 1 es la versión del ABI de C++que apareció por primera vez en G++3.2.</target>
        </trans-unit>
        <trans-unit id="3c0b003b505c0ed05512e30de5602e0fe9cf92cd" translate="yes" xml:space="preserve">
          <source>Version 10, which first appeared in G++ 6.1, adds mangling of attributes that affect type identity, such as ia32 calling convention attributes (e.g. &amp;lsquo;</source>
          <target state="translated">La versi&amp;oacute;n 10, que apareci&amp;oacute; por primera vez en G ++ 6.1, agrega alteraci&amp;oacute;n de atributos que afectan la identidad de tipo, como atributos de convenci&amp;oacute;n de llamada ia32 (por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="663092bb020840a15939c0d6a393bb5154dcf611" translate="yes" xml:space="preserve">
          <source>Version 11, which first appeared in G++ 7, corrects the mangling of sizeof... expressions and operator names. For multiple entities with the same name within a function, that are declared in different scopes, the mangling now changes starting with the twelfth occurrence. It also implies</source>
          <target state="translated">La versión 11,que apareció por primera vez en G++7,corrige la manipulación de...expresiones y nombres de operadores.Para múltiples entidades con el mismo nombre dentro de una función,que son declaradas en diferentes ámbitos,la manipulación ahora cambia a partir de la duodécima ocurrencia.También implica</target>
        </trans-unit>
        <trans-unit id="0ca6a1ee7b0905689803a926babe92130837b997" translate="yes" xml:space="preserve">
          <source>Version 12, which first appeared in G++ 8, corrects the calling conventions for empty classes on the x86_64 target and for classes with only deleted copy/move constructors. It accidentally changes the calling convention for classes with a deleted copy constructor and a trivial move constructor.</source>
          <target state="translated">La versión 12,que apareció por primera vez en G++8,corrige las convenciones de llamada para clases vacías en el objetivo x86_64 y para clases con sólo constructores de copia/movimiento borrados.Accidentalmente cambia la convención de llamada para clases con un constructor de copia borrado y un constructor de movimiento trivial.</target>
        </trans-unit>
        <trans-unit id="50a009d60ade6b341d095db62ce8f2e0c4f1391a" translate="yes" xml:space="preserve">
          <source>Version 13, which first appeared in G++ 8.2, fixes the accidental change in version 12.</source>
          <target state="translated">La versión 13,que apareció por primera vez en G++8.2,corrige el cambio accidental de la versión 12.</target>
        </trans-unit>
        <trans-unit id="3b38c5970d57d0e95ac144e09f14ebe98042886d" translate="yes" xml:space="preserve">
          <source>Version 2 is the version of the C++ ABI that first appeared in G++ 3.4, and was the default through G++ 4.9.</source>
          <target state="translated">La versión 2 es la versión del ABI de C++que apareció por primera vez en G++3.4,y fue la predeterminada a través de G++4.9.</target>
        </trans-unit>
        <trans-unit id="b724fbb5aa7b15b70d72eb03063512067a94eeca" translate="yes" xml:space="preserve">
          <source>Version 3 corrects an error in mangling a constant address as a template argument.</source>
          <target state="translated">La versión 3 corrige un error en la manipulación de una dirección constante como argumento de la plantilla.</target>
        </trans-unit>
        <trans-unit id="01a6ae459293959ae77cf0ff9e1fc859781779ed" translate="yes" xml:space="preserve">
          <source>Version 4 may require GDB 7.0 and</source>
          <target state="translated">La versión 4 puede requerir GDB 7.0 y</target>
        </trans-unit>
        <trans-unit id="dd83630f9225432d363943045fc9c9e3da8fa1fd" translate="yes" xml:space="preserve">
          <source>Version 4, which first appeared in G++ 4.5, implements a standard mangling for vector types.</source>
          <target state="translated">La versión 4,que apareció por primera vez en G++4.5,implementa un estándar de manipulación para los tipos de vectores.</target>
        </trans-unit>
        <trans-unit id="bcd8e454766585098e98a3f378e25d4a3a094eb0" translate="yes" xml:space="preserve">
          <source>Version 5, which first appeared in G++ 4.6, corrects the mangling of attribute const/volatile on function pointer types, decltype of a plain decl, and use of a function parameter in the declaration of another parameter.</source>
          <target state="translated">La versión 5,que apareció por primera vez en G++4.6,corrige la manipulación del atributo const/volátil en los tipos de puntero de función,el declive de un declive simple y el uso de un parámetro de función en la declaración de otro parámetro.</target>
        </trans-unit>
        <trans-unit id="b60149f703c30d6cd13e3a5cac7ff5559e1b4439" translate="yes" xml:space="preserve">
          <source>Version 6, which first appeared in G++ 4.7, corrects the promotion behavior of C++11 scoped enums and the mangling of template argument packs, const/static_cast, prefix ++ and &amp;ndash;, and a class scope function used as a template argument.</source>
          <target state="translated">La versi&amp;oacute;n 6, que apareci&amp;oacute; por primera vez en G ++ 4.7, corrige el comportamiento de promoci&amp;oacute;n de las enumeraciones con &amp;aacute;mbito de C ++ 11 y la alteraci&amp;oacute;n de los paquetes de argumentos de plantilla, const / static_cast, prefix ++ y -, y una funci&amp;oacute;n de &amp;aacute;mbito de clase utilizada como argumento de plantilla.</target>
        </trans-unit>
        <trans-unit id="4782295af04ef7af5fe54b3ee6d18f5a34a794e5" translate="yes" xml:space="preserve">
          <source>Version 7, which first appeared in G++ 4.8, that treats nullptr_t as a builtin type and corrects the mangling of lambdas in default argument scope.</source>
          <target state="translated">La versión 7,que apareció por primera vez en G++4.8,que trata nullptr_t como un tipo incorporado y corrige la manipulación de lambdas en el ámbito de los argumentos por defecto.</target>
        </trans-unit>
        <trans-unit id="d1c84e5d1ca1394d2ffa2a327b111624fb731bc7" translate="yes" xml:space="preserve">
          <source>Version 8, which first appeared in G++ 4.9, corrects the substitution behavior of function types with function-cv-qualifiers.</source>
          <target state="translated">La versión 8,que apareció por primera vez en G++4.9,corrige el comportamiento de sustitución de los tipos de función con los calificadores de función-cv.</target>
        </trans-unit>
        <trans-unit id="4ac00f95e84165203755f6a82a57d89ac3c1bab9" translate="yes" xml:space="preserve">
          <source>Version 9, which first appeared in G++ 5.2, corrects the alignment of &lt;code&gt;nullptr_t&lt;/code&gt;.</source>
          <target state="translated">La versi&amp;oacute;n 9, que apareci&amp;oacute; por primera vez en G ++ 5.2, corrige la alineaci&amp;oacute;n de &lt;code&gt;nullptr_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cbaf9a36f9cc94b3082b235b02920043f217806" translate="yes" xml:space="preserve">
          <source>Visium&amp;mdash;</source>
          <target state="translated">Visium&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="ea87a96f76fbda4a0ceea67f5b82b7da4f4e2ed4" translate="yes" xml:space="preserve">
          <source>Volatile memory access bypass the cache using the I/O variants of the load and store instructions. The default is not to bypass the cache.</source>
          <target state="translated">El acceso a la memoria volátil puentea la caché usando las variantes de E/S de las instrucciones de carga y almacenamiento.El valor por defecto es no puentear la caché.</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="1b1d16cb93f0aa2689c3eb4f6494e062863aa127" translate="yes" xml:space="preserve">
          <source>Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011, e.g., identifiers in ISO C++ 1998 that are keywords in ISO C++ 2011. This warning turns on</source>
          <target state="translated">Advierta sobre las construcciones C++cuyo significado difiere entre la ISO C++1998 y la ISO C++2011,por ejemplo,los identificadores en la ISO C++1998 que son palabras clave en la ISO C++2011.Esta advertencia enciende</target>
        </trans-unit>
        <trans-unit id="a16be8e81dda2e7fc6c8f9439ff0fc768831de14" translate="yes" xml:space="preserve">
          <source>Warn about C++ constructs whose meaning differs between ISO C++ 2011 and ISO C++ 2014. This warning is enabled by</source>
          <target state="translated">Advierte sobre las construcciones C++cuyo significado difiere entre la ISO C++2011 y la ISO C++2014.Esta advertencia está habilitada por</target>
        </trans-unit>
        <trans-unit id="7632b789c4deefeb017ad2d53cdd4160afd5fe89" translate="yes" xml:space="preserve">
          <source>Warn about C++ constructs whose meaning differs between ISO C++ 2014 and ISO C++ 2017. This warning is enabled by</source>
          <target state="translated">Advierte sobre las construcciones C++cuyo significado difiere entre la ISO C++2014 y la ISO C++2017.Esta advertencia está habilitada por</target>
        </trans-unit>
        <trans-unit id="53b51f298dc17e10801636bad5bebb8011117716" translate="yes" xml:space="preserve">
          <source>Warn about ISO C constructs that are outside of the common subset of ISO C and ISO C++, e.g. request for implicit conversion from &lt;code&gt;void *&lt;/code&gt; to a pointer to non-&lt;code&gt;void&lt;/code&gt; type.</source>
          <target state="translated">Advierta sobre las construcciones ISO C que est&amp;aacute;n fuera del subconjunto com&amp;uacute;n de ISO C e ISO C ++, por ejemplo, solicitud de conversi&amp;oacute;n impl&amp;iacute;cita de &lt;code&gt;void *&lt;/code&gt; a un puntero a un tipo no &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f7de69bb81f9d506bfb6d47f928c946ab6b330c" translate="yes" xml:space="preserve">
          <source>Warn about One Definition Rule violations during link-time optimization. Requires</source>
          <target state="translated">Advierte sobre las violaciones de la Regla de Una Definición durante la optimización del tiempo de enlace.Requiere</target>
        </trans-unit>
        <trans-unit id="f7cf98ad983fadf59ea9d8e55fff149a4d55f39b" translate="yes" xml:space="preserve">
          <source>Warn about a comparison between values of different enumerated types. In C++ enumerated type mismatches in conditional expressions are also diagnosed and the warning is enabled by default. In C this warning is enabled by</source>
          <target state="translated">Advierte sobre una comparación entre los valores de diferentes tipos enumerados.En C++los desajustes de tipos enumerados en las expresiones condicionales también se diagnostican y la advertencia se activa por defecto.En C esta advertencia se activa mediante</target>
        </trans-unit>
        <trans-unit id="5887fb5f81adf7425e8f523309718b847865d42f" translate="yes" xml:space="preserve">
          <source>Warn about a definition of an unsized deallocation function</source>
          <target state="translated">Advertencia sobre una definición de una función de distribución sin tamaño</target>
        </trans-unit>
        <trans-unit id="a4b22fdd430cf26b4eb0550ba2a6437e719969f1" translate="yes" xml:space="preserve">
          <source>Warn about a new-expression of a type that requires greater alignment than the &lt;code&gt;alignof(std::max_align_t)&lt;/code&gt; but uses an allocation function without an explicit alignment parameter. This option is enabled by</source>
          <target state="translated">Advierte sobre una nueva expresi&amp;oacute;n de un tipo que requiere una mayor alineaci&amp;oacute;n que &lt;code&gt;alignof(std::max_align_t)&lt;/code&gt; pero usa una funci&amp;oacute;n de asignaci&amp;oacute;n sin un par&amp;aacute;metro de alineaci&amp;oacute;n expl&amp;iacute;cito. Esta opci&amp;oacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="57392da628b0c1cb78f8e90a0ce56848a537dcc1" translate="yes" xml:space="preserve">
          <source>Warn about anything that depends on the &amp;ldquo;size of&amp;rdquo; a function type or of &lt;code&gt;void&lt;/code&gt;. GNU C assigns these types a size of 1, for convenience in calculations with &lt;code&gt;void *&lt;/code&gt; pointers and pointers to functions. In C++, warn also when an arithmetic operation involves &lt;code&gt;NULL&lt;/code&gt;. This warning is also enabled by</source>
          <target state="translated">Advierte sobre cualquier cosa que dependa del &quot;tama&amp;ntilde;o&quot; de un tipo de funci&amp;oacute;n o de &lt;code&gt;void&lt;/code&gt; . GNU C asigna a estos tipos un tama&amp;ntilde;o de 1, para facilitar los c&amp;aacute;lculos con punteros &lt;code&gt;void *&lt;/code&gt; y punteros a funciones. En C ++, advierte tambi&amp;eacute;n cuando una operaci&amp;oacute;n aritm&amp;eacute;tica implica &lt;code&gt;NULL&lt;/code&gt; . Esta advertencia tambi&amp;eacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="a808a76d216f717246383427b89eff52c9b874ec" translate="yes" xml:space="preserve">
          <source>Warn about boolean expression compared with an integer value different from &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;. For instance, the following comparison is always false:</source>
          <target state="translated">Advierte sobre la expresi&amp;oacute;n booleana en comparaci&amp;oacute;n con un valor entero diferente de &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; . Por ejemplo, la siguiente comparaci&amp;oacute;n siempre es falsa:</target>
        </trans-unit>
        <trans-unit id="a9d532ae5e4af7c1749f0187b9a6c681cd5f881a" translate="yes" xml:space="preserve">
          <source>Warn about calls to allocation functions decorated with attribute &lt;code&gt;alloc_size&lt;/code&gt; that specify zero bytes, including those to the built-in forms of the functions &lt;code&gt;aligned_alloc&lt;/code&gt;, &lt;code&gt;alloca&lt;/code&gt;, &lt;code&gt;calloc&lt;/code&gt;, &lt;code&gt;malloc&lt;/code&gt;, and &lt;code&gt;realloc&lt;/code&gt;. Because the behavior of these functions when called with a zero size differs among implementations (and in the case of &lt;code&gt;realloc&lt;/code&gt; has been deprecated) relying on it may result in subtle portability bugs and should be avoided.</source>
          <target state="translated">Advierte sobre llamadas a funciones de asignaci&amp;oacute;n decoradas con el atributo &lt;code&gt;alloc_size&lt;/code&gt; que especifican cero bytes, incluidas las de las formas integradas de las funciones &lt;code&gt;aligned_alloc&lt;/code&gt; , &lt;code&gt;alloca&lt;/code&gt; , &lt;code&gt;calloc&lt;/code&gt; , &lt;code&gt;malloc&lt;/code&gt; y &lt;code&gt;realloc&lt;/code&gt; . Debido a que el comportamiento de estas funciones cuando se llaman con un tama&amp;ntilde;o cero difiere entre las implementaciones (y en el caso de &lt;code&gt;realloc&lt;/code&gt; se ha desaprobado) confiar en ellas puede resultar en errores sutiles de portabilidad y debe evitarse.</target>
        </trans-unit>
        <trans-unit id="3cff65779e3725cfbc2854d42263f2ace49a0bba" translate="yes" xml:space="preserve">
          <source>Warn about calls to formatted input/output functions such as &lt;code&gt;snprintf&lt;/code&gt; and &lt;code&gt;vsnprintf&lt;/code&gt; that might result in output truncation. When the exact number of bytes written by a format directive cannot be determined at compile-time it is estimated based on heuristics that depend on the &lt;var&gt;level&lt;/var&gt; argument and on optimization. While enabling optimization will in most cases improve the accuracy of the warning, it may also result in false positives. Except as noted otherwise, the option uses the same logic</source>
          <target state="translated">Advierte sobre llamadas a funciones de entrada / salida formateadas como &lt;code&gt;snprintf&lt;/code&gt; y &lt;code&gt;vsnprintf&lt;/code&gt; que pueden resultar en un truncamiento de la salida. Cuando el n&amp;uacute;mero exacto de bytes escritos por una directiva de formato no se puede determinar en tiempo de compilaci&amp;oacute;n, se estima en base a heur&amp;iacute;sticas que dependen del argumento de &lt;var&gt;level&lt;/var&gt; y de la optimizaci&amp;oacute;n. Si bien la habilitaci&amp;oacute;n de la optimizaci&amp;oacute;n mejorar&amp;aacute; en la mayor&amp;iacute;a de los casos la precisi&amp;oacute;n de la advertencia, tambi&amp;eacute;n puede generar falsos positivos. Salvo que se indique lo contrario, la opci&amp;oacute;n utiliza la misma l&amp;oacute;gica</target>
        </trans-unit>
        <trans-unit id="66472dc4cd87cc63c73cb46419c0fd90cf1906ba" translate="yes" xml:space="preserve">
          <source>Warn about calls to formatted input/output functions such as &lt;code&gt;sprintf&lt;/code&gt; and &lt;code&gt;vsprintf&lt;/code&gt; that might overflow the destination buffer. When the exact number of bytes written by a format directive cannot be determined at compile-time it is estimated based on heuristics that depend on the &lt;var&gt;level&lt;/var&gt; argument and on optimization. While enabling optimization will in most cases improve the accuracy of the warning, it may also result in false positives.</source>
          <target state="translated">Advierte sobre llamadas a funciones de entrada / salida formateadas como &lt;code&gt;sprintf&lt;/code&gt; y &lt;code&gt;vsprintf&lt;/code&gt; que podr&amp;iacute;an desbordar el b&amp;uacute;fer de destino. Cuando el n&amp;uacute;mero exacto de bytes escritos por una directiva de formato no se puede determinar en tiempo de compilaci&amp;oacute;n, se estima en base a heur&amp;iacute;sticas que dependen del argumento de &lt;var&gt;level&lt;/var&gt; y de la optimizaci&amp;oacute;n. Si bien la habilitaci&amp;oacute;n de la optimizaci&amp;oacute;n mejorar&amp;aacute; en la mayor&amp;iacute;a de los casos la precisi&amp;oacute;n de la advertencia, tambi&amp;eacute;n puede generar falsos positivos.</target>
        </trans-unit>
        <trans-unit id="8986e7105a9ec8665e2dbbf6296adf8b057bee04" translate="yes" xml:space="preserve">
          <source>Warn about calls to functions decorated with attribute &lt;code&gt;alloc_size&lt;/code&gt; that attempt to allocate objects larger than the specified number of bytes, or where the result of the size computation in an integer type with infinite precision would exceed the value of &amp;lsquo;</source>
          <target state="translated">Advierte sobre llamadas a funciones decoradas con el atributo &lt;code&gt;alloc_size&lt;/code&gt; que intentan asignar objetos m&amp;aacute;s grandes que el n&amp;uacute;mero especificado de bytes, o donde el resultado del c&amp;aacute;lculo del tama&amp;ntilde;o en un tipo entero con precisi&amp;oacute;n infinita exceder&amp;iacute;a el valor de '</target>
        </trans-unit>
        <trans-unit id="88c937d55912c756c7716e6f943b38520ff30020" translate="yes" xml:space="preserve">
          <source>Warn about cases that are both questionable and easy to avoid. For example the compiler simplifies &lt;code&gt;x + 1 &amp;gt; x&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. This level of</source>
          <target state="translated">Advierte sobre casos que son cuestionables y f&amp;aacute;ciles de evitar. Por ejemplo, el compilador simplifica &lt;code&gt;x + 1 &amp;gt; x&lt;/code&gt; a &lt;code&gt;1&lt;/code&gt; . Este nivel de</target>
        </trans-unit>
        <trans-unit id="179fecfde091b7cc90c5093c0b77e7c3ec453920" translate="yes" xml:space="preserve">
          <source>Warn about catch handlers that do not catch via reference. With</source>
          <target state="translated">Advierta sobre los manipuladores de capturas que no atrapan por referencia.Con</target>
        </trans-unit>
        <trans-unit id="5d56df9ae38e57af735866e84e0cdb01862c2396" translate="yes" xml:space="preserve">
          <source>Warn about certain constructs that behave differently in traditional and ISO C. Also warn about ISO C constructs that have no traditional C equivalent, and/or problematic constructs that should be avoided.</source>
          <target state="translated">Advierta sobre ciertas construcciones que se comportan de manera diferente en el C tradicional y en el ISO C.Advierta también sobre las construcciones ISO C que no tienen un equivalente en el C tradicional,y/o las construcciones problemáticas que deben ser evitadas.</target>
        </trans-unit>
        <trans-unit id="208feed4ba7b2db7b751737e5df71463aa2d59a9" translate="yes" xml:space="preserve">
          <source>Warn about code that may have undefined semantics because of violations of sequence point rules in the C and C++ standards.</source>
          <target state="translated">Advierte sobre el código que puede tener una semántica indefinida debido a las violaciones de las reglas de puntos de secuencia en los estándares C y C++.</target>
        </trans-unit>
        <trans-unit id="120296c8df6378a5551d4a8157d2634bb8869dc7" translate="yes" xml:space="preserve">
          <source>Warn about constructions where there may be confusion to which &lt;code&gt;if&lt;/code&gt; statement an &lt;code&gt;else&lt;/code&gt; branch belongs. Here is an example of such a case:</source>
          <target state="translated">Advertir sobre construcciones donde puede haber confusi&amp;oacute;n en que &lt;code&gt;if&lt;/code&gt; la declaraci&amp;oacute;n de una &lt;code&gt;else&lt;/code&gt; rama pertenece. Aqu&amp;iacute; hay un ejemplo de tal caso:</target>
        </trans-unit>
        <trans-unit id="5a68fb773b2ee57c56ecf208d21e354737b77e2a" translate="yes" xml:space="preserve">
          <source>Warn about conversions between address spaces in the case where the resulting address space is not contained in the incoming address space.</source>
          <target state="translated">Advierta sobre las conversiones entre espacios de direcciones en el caso de que el espacio de direcciones resultante no esté contenido en el espacio de direcciones entrante.</target>
        </trans-unit>
        <trans-unit id="0761a82a1e056ee411ecf4ae535a9dfad8b30dfc" translate="yes" xml:space="preserve">
          <source>Warn about declarations using the &lt;code&gt;alias&lt;/code&gt; and similar attributes whose target is incompatible with the type of the alias. See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaring Attributes of Functions&lt;/a&gt;.</source>
          <target state="translated">Advierte sobre declaraciones utilizando el &lt;code&gt;alias&lt;/code&gt; y atributos similares cuyo destino es incompatible con el tipo de alias. Consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaraci&amp;oacute;n de atributos de funciones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f643480f69fb1c621533ba0cdd904776e7e1ef4b" translate="yes" xml:space="preserve">
          <source>Warn about duplicated conditions in an if-else-if chain. For instance, warn for the following code:</source>
          <target state="translated">Advierte sobre las condiciones duplicadas en una cadena de si-si-si.Por ejemplo,advierte sobre el siguiente código:</target>
        </trans-unit>
        <trans-unit id="f7359f7ae633c3c242379554307ef603621fed1e" translate="yes" xml:space="preserve">
          <source>Warn about features not present in ISO C90, but present in ISO C99. For instance, warn about use of variable length arrays, &lt;code&gt;long long&lt;/code&gt; type, &lt;code&gt;bool&lt;/code&gt; type, compound literals, designated initializers, and so on. This option is independent of the standards mode. Warnings are disabled in the expression that follows &lt;code&gt;__extension__&lt;/code&gt;.</source>
          <target state="translated">Advierte sobre caracter&amp;iacute;sticas que no est&amp;aacute;n presentes en ISO C90, pero s&amp;iacute; en ISO C99. Por ejemplo, advierta sobre el uso de matrices de longitud variable, tipo &lt;code&gt;long long&lt;/code&gt; , tipo &lt;code&gt;bool&lt;/code&gt; , literales compuestos, inicializadores designados, etc. Esta opci&amp;oacute;n es independiente del modo est&amp;aacute;ndar. Las advertencias est&amp;aacute;n deshabilitadas en la expresi&amp;oacute;n que sigue a &lt;code&gt;__extension__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="626c854c9715d516c67e89068f1bb76234cf669a" translate="yes" xml:space="preserve">
          <source>Warn about features not present in ISO C99, but present in ISO C11. For instance, warn about use of anonymous structures and unions, &lt;code&gt;_Atomic&lt;/code&gt; type qualifier, &lt;code&gt;_Thread_local&lt;/code&gt; storage-class specifier, &lt;code&gt;_Alignas&lt;/code&gt; specifier, &lt;code&gt;Alignof&lt;/code&gt; operator, &lt;code&gt;_Generic&lt;/code&gt; keyword, and so on. This option is independent of the standards mode. Warnings are disabled in the expression that follows &lt;code&gt;__extension__&lt;/code&gt;.</source>
          <target state="translated">Advierte sobre caracter&amp;iacute;sticas que no est&amp;aacute;n presentes en ISO C99, pero s&amp;iacute; en ISO C11. Por ejemplo, advierta sobre el uso de estructuras y uniones &lt;code&gt;_Atomic&lt;/code&gt; , calificador de tipo &lt;code&gt;_Thread_local&lt;/code&gt; , especificador de clase de almacenamiento &lt;code&gt;_Alignas&lt;/code&gt; , especificador de &lt;code&gt;Alignof&lt;/code&gt; , operador &lt;code&gt;_Generic&lt;/code&gt; , palabra clave _Generic , y as&amp;iacute; sucesivamente. Esta opci&amp;oacute;n es independiente del modo est&amp;aacute;ndar. Las advertencias est&amp;aacute;n deshabilitadas en la expresi&amp;oacute;n que sigue a &lt;code&gt;__extension__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="643ea2b6cbf0ea1bcfec495e08e3195164382b91" translate="yes" xml:space="preserve">
          <source>Warn about function pointers that might be candidates for &lt;code&gt;format&lt;/code&gt; attributes. Note these are only possible candidates, not absolute ones. GCC guesses that function pointers with &lt;code&gt;format&lt;/code&gt; attributes that are used in assignment, initialization, parameter passing or return statements should have a corresponding &lt;code&gt;format&lt;/code&gt; attribute in the resulting type. I.e. the left-hand side of the assignment or initialization, the type of the parameter variable, or the return type of the containing function respectively should also have a &lt;code&gt;format&lt;/code&gt; attribute to avoid the warning.</source>
          <target state="translated">Advierte sobre punteros de funci&amp;oacute;n que pueden ser candidatos para atributos de &lt;code&gt;format&lt;/code&gt; o . Tenga en cuenta que estos son solo candidatos posibles, no absolutos. GCC supone que los punteros de funci&amp;oacute;n con atributos de &lt;code&gt;format&lt;/code&gt; o que se utilizan en la asignaci&amp;oacute;n, inicializaci&amp;oacute;n, paso de par&amp;aacute;metros o declaraciones de retorno deben tener un atributo de &lt;code&gt;format&lt;/code&gt; o correspondiente en el tipo resultante. Es decir, el lado izquierdo de la asignaci&amp;oacute;n o inicializaci&amp;oacute;n, el tipo de variable de par&amp;aacute;metro o el tipo de retorno de la funci&amp;oacute;n contenedora, respectivamente, tambi&amp;eacute;n deben tener un atributo de &lt;code&gt;format&lt;/code&gt; o para evitar la advertencia.</target>
        </trans-unit>
        <trans-unit id="ff3534585cbc01893459375a2f73a721f1390a46" translate="yes" xml:space="preserve">
          <source>Warn about functions that might be candidates for &lt;code&gt;cold&lt;/code&gt; attribute. This is based on static detection and generally will only warn about functions which always leads to a call to another &lt;code&gt;cold&lt;/code&gt; function such as wrappers of C++ &lt;code&gt;throw&lt;/code&gt; or fatal error reporting functions leading to &lt;code&gt;abort&lt;/code&gt;.</source>
          <target state="translated">Advierte sobre funciones que podr&amp;iacute;an ser candidatas a atributo &lt;code&gt;cold&lt;/code&gt; . Esto se basa en la detecci&amp;oacute;n est&amp;aacute;tica y generalmente solo advertir&amp;aacute; sobre funciones que siempre conducen a una llamada a otra funci&amp;oacute;n en &lt;code&gt;cold&lt;/code&gt; , como envoltorios de C ++ &lt;code&gt;throw&lt;/code&gt; o funciones de reporte de errores fatales que conducen a &lt;code&gt;abort&lt;/code&gt; ar .</target>
        </trans-unit>
        <trans-unit id="ad5773c66378dee79865728b1022e5f1ddb94781" translate="yes" xml:space="preserve">
          <source>Warn about functions that might be candidates for attributes &lt;code&gt;pure&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;noreturn&lt;/code&gt; or &lt;code&gt;malloc&lt;/code&gt;. The compiler only warns for functions visible in other compilation units or (in the case of &lt;code&gt;pure&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;) if it cannot prove that the function returns normally. A function returns normally if it doesn&amp;rsquo;t contain an infinite loop or return abnormally by throwing, calling &lt;code&gt;abort&lt;/code&gt; or trapping. This analysis requires option</source>
          <target state="translated">Advierte sobre funciones que pueden ser candidatas a atributos &lt;code&gt;pure&lt;/code&gt; , &lt;code&gt;const&lt;/code&gt; o &lt;code&gt;noreturn&lt;/code&gt; o &lt;code&gt;malloc&lt;/code&gt; . El compilador solo advierte sobre funciones visibles en otras unidades de compilaci&amp;oacute;n o (en el caso de &lt;code&gt;pure&lt;/code&gt; y &lt;code&gt;const&lt;/code&gt; ) si no puede probar que la funci&amp;oacute;n regresa normalmente. Una funci&amp;oacute;n regresa normalmente si no contiene un bucle infinito o regresa de manera anormal al lanzar, llamar a &lt;code&gt;abort&lt;/code&gt; ar o atrapar. Este an&amp;aacute;lisis requiere la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="97272a64aa6772a9d1f50422c6dbb8adfe294518" translate="yes" xml:space="preserve">
          <source>Warn about left shift overflows. This warning is enabled by default in C99 and C++11 modes (and newer).</source>
          <target state="translated">Advierte sobre los desbordamientos del turno izquierdo.Esta advertencia está activada por defecto en los modos C99 y C++11 (y más recientes).</target>
        </trans-unit>
        <trans-unit id="cab17a3fd72f34df7821e30e584c4c51a37bba48" translate="yes" xml:space="preserve">
          <source>Warn about logical not used on the left hand side operand of a comparison. This option does not warn if the right operand is considered to be a boolean expression. Its purpose is to detect suspicious code like the following:</source>
          <target state="translated">Advierte sobre la lógica no utilizada en el operando del lado izquierdo de una comparación.Esta opción no advierte si el operando derecho se considera una expresión booleana.Su propósito es detectar código sospechoso como el siguiente:</target>
        </trans-unit>
        <trans-unit id="48b82c0283a2915829a3ee6a3436cc1017b5ea05" translate="yes" xml:space="preserve">
          <source>Warn about macros defined in the main file that are unused. A macro is &lt;em&gt;used&lt;/em&gt; if it is expanded or tested for existence at least once. The preprocessor also warns if the macro has not been used at the time it is redefined or undefined.</source>
          <target state="translated">Advierte sobre macros definidas en el archivo principal que no se utilizan. Se &lt;em&gt;utiliza&lt;/em&gt; una macro si se expande o se prueba su existencia al menos una vez. El preprocesador tambi&amp;eacute;n advierte si la macro no se ha utilizado en el momento en que se redefini&amp;oacute; o no se defini&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="b4b8fd61bdb1f1846bd01a97a7bd276155ea4f4c" translate="yes" xml:space="preserve">
          <source>Warn about overriding virtual functions that are not marked with the override keyword.</source>
          <target state="translated">Advierte sobre anular las funciones virtuales que no están marcadas con la palabra clave de anulación.</target>
        </trans-unit>
        <trans-unit id="b83b9745dc97dfb351a27bd912c00da1a8c7a2f9" translate="yes" xml:space="preserve">
          <source>Warn about passing a null pointer for arguments marked as requiring a non-null value by the &lt;code&gt;nonnull&lt;/code&gt; function attribute.</source>
          <target state="translated">Advierte acerca de pasar un puntero nulo para argumentos marcados como que requieren un valor no nulo por el &lt;code&gt;nonnull&lt;/code&gt; funci&amp;oacute;n no nulo .</target>
        </trans-unit>
        <trans-unit id="6aa9959edf6bc4922ebb912c9a250384b3090f7c" translate="yes" xml:space="preserve">
          <source>Warn about placement new expressions with undefined behavior, such as constructing an object in a buffer that is smaller than the type of the object. For example, the placement new expression below is diagnosed because it attempts to construct an array of 64 integers in a buffer only 64 bytes large.</source>
          <target state="translated">Advierte sobre la colocación de nuevas expresiones con un comportamiento indefinido,como la construcción de un objeto en un buffer que es más pequeño que el tipo de objeto.Por ejemplo,la nueva expresión de colocación que se muestra a continuación se diagnostica porque intenta construir un conjunto de 64 enteros en un búfer de sólo 64 bytes de tamaño.</target>
        </trans-unit>
        <trans-unit id="185c654029973156a2e707b7e9ffcc02226e09a9" translate="yes" xml:space="preserve">
          <source>Warn about redundant semicolon after in-class function definition.</source>
          <target state="translated">Advierta sobre el punto y coma redundante después de la definición de la función en clase.</target>
        </trans-unit>
        <trans-unit id="083bdeb1c857ab3b93f3cbf9b4f7687d0f51ffb4" translate="yes" xml:space="preserve">
          <source>Warn about string constants that are longer than the &amp;ldquo;minimum maximum&amp;rdquo; length specified in the C standard. Modern compilers generally allow string constants that are much longer than the standard&amp;rsquo;s minimum limit, but very portable programs should avoid using longer strings.</source>
          <target state="translated">Advierte sobre las constantes de cadena que son m&amp;aacute;s largas que la longitud &quot;m&amp;iacute;nima m&amp;aacute;xima&quot; especificada en el est&amp;aacute;ndar C. Los compiladores modernos generalmente permiten constantes de cadena que son mucho m&amp;aacute;s largas que el l&amp;iacute;mite m&amp;iacute;nimo del est&amp;aacute;ndar, pero los programas muy port&amp;aacute;tiles deben evitar el uso de cadenas m&amp;aacute;s largas.</target>
        </trans-unit>
        <trans-unit id="e453618f3508cc5c8f222f7ad7869db1fe428a6f" translate="yes" xml:space="preserve">
          <source>Warn about suspicious operations on expressions of a boolean type. For instance, bitwise negation of a boolean is very likely a bug in the program. For C, this warning also warns about incrementing or decrementing a boolean, which rarely makes sense. (In C++, decrementing a boolean is always invalid. Incrementing a boolean is invalid in C++17, and deprecated otherwise.)</source>
          <target state="translated">Advierte sobre operaciones sospechosas en expresiones de tipo booleano.Por ejemplo,la negación de una booleana es muy probable que sea un error del programa.Para C,esta advertencia también advierte sobre el incremento o disminución de un booleano,lo cual raramente tiene sentido.(En C++,disminuir un booleano siempre es inválido.Incrementar una booleana es inválido en C++17,y depreciado de otra manera).</target>
        </trans-unit>
        <trans-unit id="2336eb6d6105fde77f9d067a2cdcc81228032540" translate="yes" xml:space="preserve">
          <source>Warn about suspicious uses of logical operators in expressions. This includes using logical operators in contexts where a bit-wise operator is likely to be expected. Also warns when the operands of a logical operator are the same:</source>
          <target state="translated">Advierte sobre usos sospechosos de operadores lógicos en las expresiones.Esto incluye el uso de operadores lógicos en contextos en los que es probable que se espere un operador de bits.También advierte cuando los operandos de un operador lógico son los mismos:</target>
        </trans-unit>
        <trans-unit id="47cf408f4ecd083d50c4f6fada7dd8bdd9b93bb0" translate="yes" xml:space="preserve">
          <source>Warn about suspicious uses of memory addresses. These include using the address of a function in a conditional expression, such as &lt;code&gt;void func(void); if (func)&lt;/code&gt;, and comparisons against the memory address of a string literal, such as &lt;code&gt;if (x == &quot;abc&quot;)&lt;/code&gt;. Such uses typically indicate a programmer error: the address of a function always evaluates to true, so their use in a conditional usually indicate that the programmer forgot the parentheses in a function call; and comparisons against string literals result in unspecified behavior and are not portable in C, so they usually indicate that the programmer intended to use &lt;code&gt;strcmp&lt;/code&gt;. This warning is enabled by</source>
          <target state="translated">Advierte sobre usos sospechosos de direcciones de memoria. Estos incluyen el uso de la direcci&amp;oacute;n de una funci&amp;oacute;n en una expresi&amp;oacute;n condicional, como &lt;code&gt;void func(void); if (func)&lt;/code&gt; y comparaciones con la direcci&amp;oacute;n de memoria de un literal de cadena, como &lt;code&gt;if (x == &quot;abc&quot;)&lt;/code&gt; . Estos usos suelen indicar un error del programador: la direcci&amp;oacute;n de una funci&amp;oacute;n siempre se eval&amp;uacute;a como verdadera, por lo que su uso en un condicional suele indicar que el programador olvid&amp;oacute; los par&amp;eacute;ntesis en una llamada de funci&amp;oacute;n; y las comparaciones con los literales de cadena dan como resultado un comportamiento no especificado y no son port&amp;aacute;tiles en C, por lo que generalmente indican que el programador ten&amp;iacute;a la intenci&amp;oacute;n de usar &lt;code&gt;strcmp&lt;/code&gt; . Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="693b5ffe72b40cbff2e2c2d99e95d2c139392a00" translate="yes" xml:space="preserve">
          <source>Warn about the use of an uncasted &lt;code&gt;NULL&lt;/code&gt; as sentinel. When compiling only with GCC this is a valid sentinel, as &lt;code&gt;NULL&lt;/code&gt; is defined to &lt;code&gt;__null&lt;/code&gt;. Although it is a null pointer constant rather than a null pointer, it is guaranteed to be of the same size as a pointer. But this use is not portable across different compilers.</source>
          <target state="translated">Advertir sobre el uso de un &lt;code&gt;NULL&lt;/code&gt; no lanzado como centinela. Cuando se compila solo con GCC, este es un centinela v&amp;aacute;lido, ya que &lt;code&gt;NULL&lt;/code&gt; se define como &lt;code&gt;__null&lt;/code&gt; . Aunque es una constante de puntero nulo en lugar de un puntero nulo, se garantiza que tendr&amp;aacute; el mismo tama&amp;ntilde;o que un puntero. Pero este uso no es port&amp;aacute;til entre diferentes compiladores.</target>
        </trans-unit>
        <trans-unit id="047e09655cbc00205404926996b3c4d4165e9649" translate="yes" xml:space="preserve">
          <source>Warn about trampolines generated for pointers to nested functions. A trampoline is a small piece of data or code that is created at run time on the stack when the address of a nested function is taken, and is used to call the nested function indirectly. For some targets, it is made up of data only and thus requires no special treatment. But, for most targets, it is made up of code and thus requires the stack to be made executable in order for the program to work properly.</source>
          <target state="translated">Advierte sobre trampolines generados para punteros de funciones anidadas.Una cama elástica es un pequeño dato o código que se crea en tiempo de ejecución en la pila cuando se toma la dirección de una función anidada,y se utiliza para llamar a la función anidada indirectamente.En el caso de algunos punteros,se compone únicamente de datos y,por lo tanto,no requiere un tratamiento especial.Pero,para la mayoría de los objetivos,se compone de código y por lo tanto requiere que la pila se haga ejecutable para que el programa funcione correctamente.</target>
        </trans-unit>
        <trans-unit id="038f9bc926635b6b8fb6c2afe2d9bffe1c8b0f31" translate="yes" xml:space="preserve">
          <source>Warn about types with virtual methods where code quality would be improved if the type were declared with the C++11 &lt;code&gt;final&lt;/code&gt; specifier, or, if possible, declared in an anonymous namespace. This allows GCC to more aggressively devirtualize the polymorphic calls. This warning is more effective with link time optimization, where the information about the class hierarchy graph is more complete.</source>
          <target state="translated">Advierte sobre tipos con m&amp;eacute;todos virtuales en los que la calidad del c&amp;oacute;digo mejorar&amp;iacute;a si el tipo se declarara con el especificador &lt;code&gt;final&lt;/code&gt; de C ++ 11 o, si es posible, se declarara en un espacio de nombres an&amp;oacute;nimo. Esto permite a GCC desvirtualizar de forma m&amp;aacute;s agresiva las llamadas polim&amp;oacute;rficas. Esta advertencia es m&amp;aacute;s eficaz con la optimizaci&amp;oacute;n del tiempo de enlace, donde la informaci&amp;oacute;n sobre el gr&amp;aacute;fico de jerarqu&amp;iacute;a de clases es m&amp;aacute;s completa.</target>
        </trans-unit>
        <trans-unit id="ebb96b1bde565bfb0748c8483dc57189a3190e4d" translate="yes" xml:space="preserve">
          <source>Warn about uninitialized variables that are initialized with themselves. Note this option can only be used with the</source>
          <target state="translated">Advierte sobre las variables no inicializadas que se inicializan con ellas mismas.Tenga en cuenta que esta opción sólo se puede utilizar con el</target>
        </trans-unit>
        <trans-unit id="3e4a4254c8cb8b052f1898488cd3d24c1bac24c2" translate="yes" xml:space="preserve">
          <source>Warn about unsafe multiple statement macros that appear to be guarded by a clause such as &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, or &lt;code&gt;while&lt;/code&gt;, in which only the first statement is actually guarded after the macro is expanded.</source>
          <target state="translated">Advierte sobre macros de instrucciones m&amp;uacute;ltiples inseguras que parecen estar protegidas por una cl&amp;aacute;usula como &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;switch&lt;/code&gt; o &lt;code&gt;while&lt;/code&gt; , en las que solo la primera instrucci&amp;oacute;n est&amp;aacute; realmente protegida despu&amp;eacute;s de que se expande la macro.</target>
        </trans-unit>
        <trans-unit id="c815119ab8450282a6819d07553d786431d0bc98" translate="yes" xml:space="preserve">
          <source>Warn about violations of the following style guidelines from Scott Meyers&amp;rsquo; Effective C++ series of books:</source>
          <target state="translated">Advierta sobre violaciones de las siguientes pautas de estilo de la serie de libros Effective C ++ de Scott Meyers:</target>
        </trans-unit>
        <trans-unit id="44cda8e3e380e8f31dd971fc6b0f31b237513dcc" translate="yes" xml:space="preserve">
          <source>Warn about virtual methods where code quality would be improved if the method were declared with the C++11 &lt;code&gt;final&lt;/code&gt; specifier, or, if possible, its type were declared in an anonymous namespace or with the &lt;code&gt;final&lt;/code&gt; specifier. This warning is more effective with link-time optimization, where the information about the class hierarchy graph is more complete. It is recommended to first consider suggestions of</source>
          <target state="translated">Advierta sobre m&amp;eacute;todos virtuales donde la calidad del c&amp;oacute;digo mejorar&amp;iacute;a si el m&amp;eacute;todo se declarara con el especificador &lt;code&gt;final&lt;/code&gt; de C ++ 11 o, si es posible, su tipo se declarara en un espacio de nombres an&amp;oacute;nimo o con el especificador &lt;code&gt;final&lt;/code&gt; . Esta advertencia es m&amp;aacute;s eficaz con la optimizaci&amp;oacute;n del tiempo de enlace, donde la informaci&amp;oacute;n sobre el gr&amp;aacute;fico de jerarqu&amp;iacute;a de clases es m&amp;aacute;s completa. Se recomienda considerar primero las sugerencias de</target>
        </trans-unit>
        <trans-unit id="be3e052e75298edad5e44ae2d0677574dff86d7c" translate="yes" xml:space="preserve">
          <source>Warn for calls to bounded string manipulation functions such as &lt;code&gt;strncat&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt;, and &lt;code&gt;stpncpy&lt;/code&gt; that may either truncate the copied string or leave the destination unchanged.</source>
          <target state="translated">Advierte de llamadas a funciones de manipulaci&amp;oacute;n de cadenas limitadas como &lt;code&gt;strncat&lt;/code&gt; , &lt;code&gt;strncpy&lt;/code&gt; y &lt;code&gt;stpncpy&lt;/code&gt; que pueden truncar la cadena copiada o dejar el destino sin cambios.</target>
        </trans-unit>
        <trans-unit id="97f52c63875e1d71f753bc97c51fe3992eac28f3" translate="yes" xml:space="preserve">
          <source>Warn for calls to standard functions that compute the absolute value of an argument when a more appropriate standard function is available. For example, calling &lt;code&gt;abs(3.14)&lt;/code&gt; triggers the warning because the appropriate function to call to compute the absolute value of a double argument is &lt;code&gt;fabs&lt;/code&gt;. The option also triggers warnings when the argument in a call to such a function has an unsigned type. This warning can be suppressed with an explicit type cast and it is also enabled by</source>
          <target state="translated">Advierte de llamadas a funciones est&amp;aacute;ndar que calculan el valor absoluto de un argumento cuando est&amp;aacute; disponible una funci&amp;oacute;n est&amp;aacute;ndar m&amp;aacute;s apropiada. Por ejemplo, llamar a &lt;code&gt;abs(3.14)&lt;/code&gt; activa la advertencia porque la funci&amp;oacute;n apropiada para llamar para calcular el valor absoluto de un argumento doble es &lt;code&gt;fabs&lt;/code&gt; . La opci&amp;oacute;n tambi&amp;eacute;n activa advertencias cuando el argumento en una llamada a dicha funci&amp;oacute;n tiene un tipo sin firmar. Esta advertencia se puede suprimir con una conversi&amp;oacute;n de tipo expl&amp;iacute;cita y tambi&amp;eacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="c5733f483a0e2d12a12ef399d58192ff21069495" translate="yes" xml:space="preserve">
          <source>Warn for calls to string manipulation functions such as &lt;code&gt;memcpy&lt;/code&gt; and &lt;code&gt;strcpy&lt;/code&gt; that are determined to overflow the destination buffer. The optional argument is one greater than the type of Object Size Checking to perform to determine the size of the destination. See &lt;a href=&quot;object-size-checking#Object-Size-Checking&quot;&gt;Object Size Checking&lt;/a&gt;. The argument is meaningful only for functions that operate on character arrays but not for raw memory functions like &lt;code&gt;memcpy&lt;/code&gt; which always make use of Object Size type-0. The option also warns for calls that specify a size in excess of the largest possible object or at most &lt;code&gt;SIZE_MAX / 2&lt;/code&gt; bytes. The option produces the best results with optimization enabled but can detect a small subset of simple buffer overflows even without optimization in calls to the GCC built-in functions like &lt;code&gt;__builtin_memcpy&lt;/code&gt; that correspond to the standard functions. In any case, the option warns about just a subset of buffer overflows detected by the corresponding overflow checking built-ins. For example, the option will issue a warning for the &lt;code&gt;strcpy&lt;/code&gt; call below because it copies at least 5 characters (the string &lt;code&gt;&quot;blue&quot;&lt;/code&gt; including the terminating NUL) into the buffer of size 4.</source>
          <target state="translated">Advierte de llamadas a funciones de manipulaci&amp;oacute;n de cadenas como &lt;code&gt;memcpy&lt;/code&gt; y &lt;code&gt;strcpy&lt;/code&gt; que est&amp;aacute;n determinadas a desbordar el b&amp;uacute;fer de destino. El argumento opcional es uno mayor que el tipo de verificaci&amp;oacute;n de tama&amp;ntilde;o de objeto que se debe realizar para determinar el tama&amp;ntilde;o del destino. Consulte &lt;a href=&quot;object-size-checking#Object-Size-Checking&quot;&gt;Comprobaci&amp;oacute;n del tama&amp;ntilde;o del objeto&lt;/a&gt; . El argumento es significativo solo para funciones que operan en matrices de caracteres, pero no para funciones de memoria en bruto como &lt;code&gt;memcpy&lt;/code&gt; , que siempre hacen uso de Object Size type-0. La opci&amp;oacute;n tambi&amp;eacute;n advierte de llamadas que especifican un tama&amp;ntilde;o superior al objeto m&amp;aacute;s grande posible o como m&amp;aacute;ximo &lt;code&gt;SIZE_MAX / 2&lt;/code&gt; bytes. La opci&amp;oacute;n produce los mejores resultados con la optimizaci&amp;oacute;n habilitada, pero puede detectar un peque&amp;ntilde;o subconjunto de desbordamientos de b&amp;uacute;fer simples incluso sin optimizaci&amp;oacute;n en las llamadas a las funciones integradas de GCC como &lt;code&gt;__builtin_memcpy&lt;/code&gt; que corresponden a las funciones est&amp;aacute;ndar. En cualquier caso, la opci&amp;oacute;n advierte acerca de solo un subconjunto de desbordamientos de b&amp;uacute;fer detectados por las correspondientes incorporaciones de verificaci&amp;oacute;n de desbordamiento. Por ejemplo, la opci&amp;oacute;n emitir&amp;aacute; una advertencia para la llamada &lt;code&gt;strcpy&lt;/code&gt; a continuaci&amp;oacute;n porque copia al menos 5 caracteres (la cadena &lt;code&gt;&quot;blue&quot;&lt;/code&gt; incluido el NUL de terminaci&amp;oacute;n) en el b&amp;uacute;fer de tama&amp;ntilde;o 4.</target>
        </trans-unit>
        <trans-unit id="ea89d9fe51cb214a220766e4af0abed7f830d316" translate="yes" xml:space="preserve">
          <source>Warn for cases where adding an attribute may be beneficial. The attributes currently supported are listed below.</source>
          <target state="translated">Adviértase de los casos en que la adición de un atributo puede ser beneficiosa.A continuación se enumeran los atributos actualmente admitidos.</target>
        </trans-unit>
        <trans-unit id="8436e41e82368d15262acc8884e5704ddb1ce7dc" translate="yes" xml:space="preserve">
          <source>Warn for conditionally-supported (C++11 [intro.defs]) constructs.</source>
          <target state="translated">Advertencia para construcciones con soporte condicional (C++11 [intro.defs]).</target>
        </trans-unit>
        <trans-unit id="ddd0db7c59c0ac572b0cd3ff62ca85c741d9e547" translate="yes" xml:space="preserve">
          <source>Warn for implicit conversions that may alter a value. This includes conversions between real and integer, like &lt;code&gt;abs (x)&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;double&lt;/code&gt;; conversions between signed and unsigned, like &lt;code&gt;unsigned ui = -1&lt;/code&gt;; and conversions to smaller types, like &lt;code&gt;sqrtf (M_PI)&lt;/code&gt;. Do not warn for explicit casts like &lt;code&gt;abs
((int) x)&lt;/code&gt; and &lt;code&gt;ui = (unsigned) -1&lt;/code&gt;, or if the value is not changed by the conversion like in &lt;code&gt;abs (2.0)&lt;/code&gt;. Warnings about conversions between signed and unsigned integers can be disabled by using</source>
          <target state="translated">Advierte de conversiones impl&amp;iacute;citas que pueden alterar un valor. Esto incluye conversiones entre real y entero, como &lt;code&gt;abs (x)&lt;/code&gt; cuando &lt;code&gt;x&lt;/code&gt; es &lt;code&gt;double&lt;/code&gt; ; conversiones entre firmado y no firmado, como &lt;code&gt;unsigned ui = -1&lt;/code&gt; ; y conversiones a tipos m&amp;aacute;s peque&amp;ntilde;os, como &lt;code&gt;sqrtf (M_PI)&lt;/code&gt; . No advierta sobre conversiones expl&amp;iacute;citas como &lt;code&gt;abs ((int) x)&lt;/code&gt; y &lt;code&gt;ui = (unsigned) -1&lt;/code&gt; , o si la conversi&amp;oacute;n no cambia el valor como en &lt;code&gt;abs (2.0)&lt;/code&gt; . Las advertencias sobre conversiones entre enteros firmados y no firmados se pueden deshabilitar usando</target>
        </trans-unit>
        <trans-unit id="ec1638cbd7bdbbe5cf0d16d8253b596c446311e3" translate="yes" xml:space="preserve">
          <source>Warn for implicit conversions that may change the sign of an integer value, like assigning a signed integer expression to an unsigned integer variable. An explicit cast silences the warning. In C, this option is enabled also by</source>
          <target state="translated">Advierta de las conversiones implícitas que pueden cambiar el signo de un valor entero,como la asignación de una expresión entera con signo a una variable entera sin signo.Un lanzamiento explícito silencia la advertencia.En C,esta opción se habilita también por</target>
        </trans-unit>
        <trans-unit id="97be0057bd1773b0bcfe31a7fd58f64b07846102" translate="yes" xml:space="preserve">
          <source>Warn for implicit conversions that reduce the precision of a real value. This includes conversions from real to integer, and from higher precision real to lower precision real values. This option is also enabled by</source>
          <target state="translated">Advierte de las conversiones implícitas que reducen la precisión de un valor real.Esto incluye conversiones de real a entero,y de valores reales de mayor precisión a valores reales de menor precisión.Esta opción también está habilitada por</target>
        </trans-unit>
        <trans-unit id="fba779234a6e85d8e28133f5b96c546a4b460be1" translate="yes" xml:space="preserve">
          <source>Warn for invocations of &lt;a href=&quot;_005f_005fatomic-builtins#g_t_005f_005fatomic-Builtins&quot;&gt;__atomic Builtins&lt;/a&gt;, &lt;a href=&quot;_005f_005fsync-builtins#g_t_005f_005fsync-Builtins&quot;&gt;__sync Builtins&lt;/a&gt;, and the C11 atomic generic functions with a memory consistency argument that is either invalid for the operation or outside the range of values of the &lt;code&gt;memory_order&lt;/code&gt; enumeration. For example, since the &lt;code&gt;__atomic_store&lt;/code&gt; and &lt;code&gt;__atomic_store_n&lt;/code&gt; built-ins are only defined for the relaxed, release, and sequentially consistent memory orders the following code is diagnosed:</source>
          <target state="translated">Advertir sobre invocaciones de &lt;a href=&quot;_005f_005fatomic-builtins#g_t_005f_005fatomic-Builtins&quot;&gt;__atomic Builtins&lt;/a&gt; , &lt;a href=&quot;_005f_005fsync-builtins#g_t_005f_005fsync-Builtins&quot;&gt;__sync Builtins&lt;/a&gt; y las funciones gen&amp;eacute;ricas at&amp;oacute;micas C11 con un argumento de consistencia de memoria que no es v&amp;aacute;lido para la operaci&amp;oacute;n o est&amp;aacute; fuera del rango de valores de la enumeraci&amp;oacute;n &lt;code&gt;memory_order&lt;/code&gt; . Por ejemplo, dado que los &lt;code&gt;__atomic_store&lt;/code&gt; &lt;code&gt;__atomic_store_n&lt;/code&gt; __atomic_store y __atomic_store_n solo se definen para los pedidos de memoria relajados, de liberaci&amp;oacute;n y secuencialmente coherentes, se diagnostica el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="588f265a9e502d85c1dc2042e355d13326591d0f" translate="yes" xml:space="preserve">
          <source>Warn for obsolescent usages, according to the C Standard, in a declaration. For example, warn if storage-class specifiers like &lt;code&gt;static&lt;/code&gt; are not the first things in a declaration. This warning is also enabled by</source>
          <target state="translated">Advierte de usos obsoletos, seg&amp;uacute;n el Est&amp;aacute;ndar C, en una declaraci&amp;oacute;n. Por ejemplo, advierta si los especificadores de clase de almacenamiento como &lt;code&gt;static&lt;/code&gt; no son las primeras cosas en una declaraci&amp;oacute;n. Esta advertencia tambi&amp;eacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="e259b4649f2c39d620aa79263dfa4900b1e91328" translate="yes" xml:space="preserve">
          <source>Warn for pointer argument passing or assignment with different signedness. This option is only supported for C and Objective-C. It is implied by</source>
          <target state="translated">Advertencia para la aprobación del argumento del puntero o la asignación con diferente firma.Esta opción sólo se admite para C y Objetivo-C.Está implícita en</target>
        </trans-unit>
        <trans-unit id="9ff91ea12bc4958bf94b9d94062e90a35c47ff2b" translate="yes" xml:space="preserve">
          <source>Warn for suspicious calls to the &lt;code&gt;memset&lt;/code&gt; built-in function where the second argument is not zero and the third argument is zero. For example, the call &lt;code&gt;memset (buf, sizeof buf, 0)&lt;/code&gt; is diagnosed because &lt;code&gt;memset (buf, 0, sizeof buf)&lt;/code&gt; was meant instead. The diagnostic is only emitted if the third argument is a literal zero. Otherwise, if it is an expression that is folded to zero, or a cast of zero to some type, it is far less likely that the arguments have been mistakenly transposed and no warning is emitted. This warning is enabled by</source>
          <target state="translated">Advierte de llamadas sospechosas a la &lt;code&gt;memset&lt;/code&gt; incorporada de memset donde el segundo argumento no es cero y el tercer argumento es cero. Por ejemplo, la llamada &lt;code&gt;memset (buf, sizeof buf, 0)&lt;/code&gt; se diagnostica porque en su lugar se hizo &lt;code&gt;memset (buf, 0, sizeof buf)&lt;/code&gt; . El diagn&amp;oacute;stico solo se emite si el tercer argumento es un cero literal. De lo contrario, si se trata de una expresi&amp;oacute;n plegada a cero, o una conversi&amp;oacute;n de cero a alg&amp;uacute;n tipo, es mucho menos probable que los argumentos se hayan transpuesto por error y no se emita ninguna advertencia. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="bc6dbae9a566682d74e9a96f0ac749b8042dc5bb" translate="yes" xml:space="preserve">
          <source>Warn for suspicious calls to the &lt;code&gt;memset&lt;/code&gt; built-in function, if the first argument references an array, and the third argument is a number equal to the number of elements, but not equal to the size of the array in memory. This indicates that the user has omitted a multiplication by the element size. This warning is enabled by</source>
          <target state="translated">Advierte de llamadas sospechosas a la &lt;code&gt;memset&lt;/code&gt; incorporada memset , si el primer argumento hace referencia a una matriz y el tercer argumento es un n&amp;uacute;mero igual al n&amp;uacute;mero de elementos, pero no igual al tama&amp;ntilde;o de la matriz en la memoria. Esto indica que el usuario ha omitido una multiplicaci&amp;oacute;n por el tama&amp;ntilde;o del elemento. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="d71f136265b6596c9fcf21bacafb65164bba32b6" translate="yes" xml:space="preserve">
          <source>Warn for suspicious divisions of two sizeof expressions that divide the pointer size by the element size, which is the usual way to compute the array size but won&amp;rsquo;t work out correctly with pointers. This warning warns e.g. about &lt;code&gt;sizeof (ptr) / sizeof (ptr[0])&lt;/code&gt; if &lt;code&gt;ptr&lt;/code&gt; is not an array, but a pointer. This warning is enabled by</source>
          <target state="translated">Advierte sobre divisiones sospechosas de dos expresiones de tama&amp;ntilde;o que dividen el tama&amp;ntilde;o del puntero por el tama&amp;ntilde;o del elemento, que es la forma habitual de calcular el tama&amp;ntilde;o de la matriz, pero no funcionar&amp;aacute; correctamente con punteros. Esta advertencia advierte, por ejemplo, sobre &lt;code&gt;sizeof (ptr) / sizeof (ptr[0])&lt;/code&gt; si &lt;code&gt;ptr&lt;/code&gt; no es una matriz, sino un puntero. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="eb46193b49397250439f9bab61fa46107f1cb89b" translate="yes" xml:space="preserve">
          <source>Warn for suspicious length parameters to certain string and memory built-in functions if the argument uses &lt;code&gt;sizeof&lt;/code&gt;. This warning triggers for example for &lt;code&gt;memset (ptr, 0, sizeof (ptr));&lt;/code&gt; if &lt;code&gt;ptr&lt;/code&gt; is not an array, but a pointer, and suggests a possible fix, or about &lt;code&gt;memcpy (&amp;amp;foo, ptr, sizeof (&amp;amp;foo));&lt;/code&gt;.</source>
          <target state="translated">Advierte sobre par&amp;aacute;metros de longitud sospechosos para ciertas funciones integradas de cadena y memoria si el argumento usa &lt;code&gt;sizeof&lt;/code&gt; . Esta advertencia se activa, por ejemplo, para &lt;code&gt;memset (ptr, 0, sizeof (ptr));&lt;/code&gt; si &lt;code&gt;ptr&lt;/code&gt; no es una matriz, sino un puntero, y sugiere una posible soluci&amp;oacute;n, o acerca de &lt;code&gt;memcpy (&amp;amp;foo, ptr, sizeof (&amp;amp;foo));&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="474691b4f69f5e3fa5e5d8572e94d30c04b806ca" translate="yes" xml:space="preserve">
          <source>Warn for suspicious use of integer values where boolean values are expected, such as conditional expressions (?:) using non-boolean integer constants in boolean context, like &lt;code&gt;if (a &amp;lt;= b ? 2 : 3)&lt;/code&gt;. Or left shifting of signed integers in boolean context, like &lt;code&gt;for (a = 0; 1 &amp;lt;&amp;lt; a; a++);&lt;/code&gt;. Likewise for all kinds of multiplications regardless of the data type. This warning is enabled by</source>
          <target state="translated">Advierte sobre el uso sospechoso de valores enteros donde se esperan valores booleanos, como expresiones condicionales (? :) que utilizan constantes enteras no booleanas en contexto booleano, como &lt;code&gt;if (a &amp;lt;= b ? 2 : 3)&lt;/code&gt; . O desplazamiento a la izquierda de enteros con signo en contexto booleano, como &lt;code&gt;for (a = 0; 1 &amp;lt;&amp;lt; a; a++);&lt;/code&gt; . Lo mismo ocurre con todo tipo de multiplicaciones independientemente del tipo de datos. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="ef3f0d67d9be730bb5bb60eec12cdf29a3590cd3" translate="yes" xml:space="preserve">
          <source>Warn for variables that might be changed by &lt;code&gt;longjmp&lt;/code&gt; or &lt;code&gt;vfork&lt;/code&gt;. This warning is also enabled by</source>
          <target state="translated">Advierte sobre las variables que pueden cambiar con &lt;code&gt;longjmp&lt;/code&gt; o &lt;code&gt;vfork&lt;/code&gt; . Esta advertencia tambi&amp;eacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="dd2e7578a65337ecde9cfa288e81a35cf44426a6" translate="yes" xml:space="preserve">
          <source>Warn if &lt;code&gt;long long&lt;/code&gt; type is used. This is enabled by either</source>
          <target state="translated">Advertir si se utiliza &lt;code&gt;long long&lt;/code&gt; tipo largo largo . Esto est&amp;aacute; habilitado por</target>
        </trans-unit>
        <trans-unit id="e19f1630667f871b7fea15d47a722bf79ecb0d1d" translate="yes" xml:space="preserve">
          <source>Warn if a &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; expression referring to an undeclared selector is found. A selector is considered undeclared if no method with that name has been declared before the &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; expression, either explicitly in an &lt;code&gt;@interface&lt;/code&gt; or &lt;code&gt;@protocol&lt;/code&gt; declaration, or implicitly in an &lt;code&gt;@implementation&lt;/code&gt; section. This option always performs its checks as soon as a &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; expression is found, while</source>
          <target state="translated">Advertir si se encuentra una &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; que hace referencia a un selector no declarado. Un selector se considera no declarado si no se ha declarado ning&amp;uacute;n m&amp;eacute;todo con ese nombre antes de la &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; , ya sea expl&amp;iacute;citamente en una declaraci&amp;oacute;n &lt;code&gt;@interface&lt;/code&gt; o &lt;code&gt;@protocol&lt;/code&gt; , o impl&amp;iacute;citamente en una secci&amp;oacute;n &lt;code&gt;@implementation&lt;/code&gt; . Esta opci&amp;oacute;n siempre realiza sus comprobaciones tan pronto como se encuentra una &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; , mientras</target>
        </trans-unit>
        <trans-unit id="004d33c975e481dfebbcb509835b3167b8da9eba" translate="yes" xml:space="preserve">
          <source>Warn if a &lt;code&gt;goto&lt;/code&gt; statement or a &lt;code&gt;switch&lt;/code&gt; statement jumps forward across the initialization of a variable, or jumps backward to a label after the variable has been initialized. This only warns about variables that are initialized when they are declared. This warning is only supported for C and Objective-C; in C++ this sort of branch is an error in any case.</source>
          <target state="translated">Advierte si una sentencia &lt;code&gt;goto&lt;/code&gt; o una sentencia &lt;code&gt;switch&lt;/code&gt; salta hacia adelante a trav&amp;eacute;s de la inicializaci&amp;oacute;n de una variable, o salta hacia atr&amp;aacute;s a una etiqueta despu&amp;eacute;s de que la variable ha sido inicializada. Esto solo advierte sobre las variables que se inicializan cuando se declaran. Esta advertencia solo es compatible con C y Objective-C; en C ++, este tipo de rama es un error en cualquier caso.</target>
        </trans-unit>
        <trans-unit id="70a205e11ff52468e2abea9748f0e8471729efe0" translate="yes" xml:space="preserve">
          <source>Warn if a built-in function is declared with an incompatible signature or as a non-function, or when a built-in function declared with a type that does not include a prototype is called with arguments whose promoted types do not match those expected by the function. When</source>
          <target state="translated">Advertir si una función incorporada se declara con una firma incompatible o como no función,o cuando una función incorporada declarada con un tipo que no incluye un prototipo se llama con argumentos cuyos tipos promovidos no coinciden con los esperados por la función.Cuando</target>
        </trans-unit>
        <trans-unit id="7e0b0c17d1b6ef946e72a0839cb1ce3047e47301" translate="yes" xml:space="preserve">
          <source>Warn if a class type has a base or a field whose type uses the anonymous namespace or depends on a type with no linkage. If a type A depends on a type B with no or internal linkage, defining it in multiple translation units would be an ODR violation because the meaning of B is different in each translation unit. If A only appears in a single translation unit, the best way to silence the warning is to give it internal linkage by putting it in an anonymous namespace as well. The compiler doesn&amp;rsquo;t give this warning for types defined in the main .C file, as those are unlikely to have multiple definitions.</source>
          <target state="translated">Advierte si un tipo de clase tiene una base o un campo cuyo tipo usa el espacio de nombres an&amp;oacute;nimo o depende de un tipo sin v&amp;iacute;nculo. Si un tipo A depende de un tipo B sin vinculaci&amp;oacute;n interna o sin vinculaci&amp;oacute;n, definirlo en varias unidades de traducci&amp;oacute;n ser&amp;iacute;a una violaci&amp;oacute;n de ODR porque el significado de B es diferente en cada unidad de traducci&amp;oacute;n. Si A solo aparece en una &amp;uacute;nica unidad de traducci&amp;oacute;n, la mejor manera de silenciar la advertencia es darle un enlace interno coloc&amp;aacute;ndola tambi&amp;eacute;n en un espacio de nombres an&amp;oacute;nimo. El compilador no da esta advertencia para los tipos definidos en el archivo .C principal, ya que es poco probable que tengan m&amp;uacute;ltiples definiciones.</target>
        </trans-unit>
        <trans-unit id="f50d7f18228e548a744dc4a11054b6259740a50d" translate="yes" xml:space="preserve">
          <source>Warn if a comparison is always true or always false due to the limited range of the data type, but do not warn for constant expressions. For example, warn if an unsigned variable is compared against zero with &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;=&lt;/code&gt;. This warning is also enabled by</source>
          <target state="translated">Advierte si una comparaci&amp;oacute;n es siempre verdadera o siempre falsa debido al rango limitado del tipo de datos, pero no advierte sobre expresiones constantes. Por ejemplo, advierta si una variable sin signo se compara con cero con &lt;code&gt;&amp;lt;&lt;/code&gt; o &lt;code&gt;&amp;gt;=&lt;/code&gt; . Esta advertencia tambi&amp;eacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="2a11d0f858be1c6e9bc24aa3b844f38a2b441160" translate="yes" xml:space="preserve">
          <source>Warn if a declaration has duplicate &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;volatile&lt;/code&gt;, &lt;code&gt;restrict&lt;/code&gt; or &lt;code&gt;_Atomic&lt;/code&gt; specifier. This warning is enabled by</source>
          <target state="translated">Advierte si una declaraci&amp;oacute;n tiene un especificador &lt;code&gt;const&lt;/code&gt; ante , &lt;code&gt;volatile&lt;/code&gt; , &lt;code&gt;restrict&lt;/code&gt; ivo o &lt;code&gt;_Atomic&lt;/code&gt; . Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="435844d61c42ac3708481fd4e2d3779e1e2c4fcb" translate="yes" xml:space="preserve">
          <source>Warn if a function is declared or defined without specifying the argument types. (An old-style function definition is permitted without a warning if preceded by a declaration that specifies the argument types.)</source>
          <target state="translated">Avisar si se declara o define una función sin especificar los tipos de argumento.(Se permite una definición de función de estilo antiguo sin advertencia si va precedida de una declaración que especifique los tipos de argumento).</target>
        </trans-unit>
        <trans-unit id="a760172e23a18bb5477be698491bcdf520546606" translate="yes" xml:space="preserve">
          <source>Warn if a function that is declared as inline cannot be inlined. Even with this option, the compiler does not warn about failures to inline functions declared in system headers.</source>
          <target state="translated">Advierta si una función que se declara como en línea no puede ser en línea.Incluso con esta opción,el compilador no advierte de los fallos en las funciones en línea declaradas en los encabezados del sistema.</target>
        </trans-unit>
        <trans-unit id="8022445f9b194569635957ab8997ae493df541b3" translate="yes" xml:space="preserve">
          <source>Warn if a global function is defined without a previous declaration. Do so even if the definition itself provides a prototype. Use this option to detect global functions that are not declared in header files. In C, no warnings are issued for functions with previous non-prototype declarations; use</source>
          <target state="translated">Avisar si se define una función global sin una declaración previa.Hágalo incluso si la propia definición proporciona un prototipo.Utilice esta opción para detectar las funciones globales que no están declaradas en los archivos de cabecera.En C,no se emiten advertencias para las funciones con declaraciones previas no prototipo;utilice</target>
        </trans-unit>
        <trans-unit id="8accbb9b2caefa3a198b26af7aaf7ecef01e8cb3" translate="yes" xml:space="preserve">
          <source>Warn if a global function is defined without a previous prototype declaration. This warning is issued even if the definition itself provides a prototype. Use this option to detect global functions that do not have a matching prototype declaration in a header file. This option is not valid for C++ because all function declarations provide prototypes and a non-matching declaration declares an overload rather than conflict with an earlier declaration. Use</source>
          <target state="translated">Avisar si se define una función global sin una declaración previa del prototipo.Esta advertencia se emite incluso si la propia definición proporciona un prototipo.Utilice esta opción para detectar funciones globales que no tienen una declaración prototipo coincidente en un archivo de cabecera.Esta opción no es válida para C++porque todas las declaraciones de funciones proporcionan prototipos y una declaración no coincidente declara una sobrecarga en lugar de entrar en conflicto con una declaración anterior.Utilice</target>
        </trans-unit>
        <trans-unit id="158841ec1502166264ebd7700487b8265d3a7024" translate="yes" xml:space="preserve">
          <source>Warn if a pointer is compared with a zero character constant. This usually means that the pointer was meant to be dereferenced. For example:</source>
          <target state="translated">Advierte si un puntero se compara con una constante de carácter cero.Esto normalmente significa que el puntero estaba destinado a ser des-referenciado.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="cc6737ba51245ef04a02acb681eeef00c75f1a8a" translate="yes" xml:space="preserve">
          <source>Warn if a precompiled header (see &lt;a href=&quot;precompiled-headers#Precompiled-Headers&quot;&gt;Precompiled Headers&lt;/a&gt;) is found in the search path but cannot be used.</source>
          <target state="translated">Advierte si un encabezado precompilado (ver &lt;a href=&quot;precompiled-headers#Precompiled-Headers&quot;&gt;Encabezados precompilados&lt;/a&gt; ) se encuentra en la ruta de b&amp;uacute;squeda pero no se puede usar.</target>
        </trans-unit>
        <trans-unit id="0939e5ffcf8a00c23be50c55ee10373ce78e992e" translate="yes" xml:space="preserve">
          <source>Warn if a prototype causes a type conversion that is different from what would happen to the same argument in the absence of a prototype. This includes conversions of fixed point to floating and vice versa, and conversions changing the width or signedness of a fixed-point argument except when the same as the default promotion.</source>
          <target state="translated">Advierte si un prototipo causa una conversión de tipo diferente de lo que sucedería con el mismo argumento en ausencia de un prototipo.Esto incluye conversiones de punto fijo a flotante y viceversa,y conversiones que cambien la anchura o la significación de un argumento de punto fijo,excepto cuando sea el mismo que la promoción por defecto.</target>
        </trans-unit>
        <trans-unit id="f0026b1975a3aa571d75e5560f23067faee1ed8d" translate="yes" xml:space="preserve">
          <source>Warn if a register variable is declared volatile. The volatile modifier does not inhibit all optimizations that may eliminate reads and/or writes to register variables. This warning is enabled by</source>
          <target state="translated">Avisa si una variable de registro se declara volátil.El modificador de volatilidad no inhibe todas las optimizaciones que puedan eliminar las lecturas y/o escrituras de las variables de registro.Esta advertencia se activa mediante</target>
        </trans-unit>
        <trans-unit id="3798bc740d5ed1fe194f654e04bcdb3d1c47efb1" translate="yes" xml:space="preserve">
          <source>Warn if a requested optimization pass is disabled. This warning does not generally indicate that there is anything wrong with your code; it merely indicates that GCC&amp;rsquo;s optimizers are unable to handle the code effectively. Often, the problem is that your code is too big or too complex; GCC refuses to optimize programs when the optimization itself is likely to take inordinate amounts of time.</source>
          <target state="translated">Advertir si un pase de optimizaci&amp;oacute;n solicitado est&amp;aacute; deshabilitado. Esta advertencia generalmente no indica que haya alg&amp;uacute;n problema con su c&amp;oacute;digo; simplemente indica que los optimizadores de GCC no pueden manejar el c&amp;oacute;digo de manera efectiva. A menudo, el problema es que su c&amp;oacute;digo es demasiado grande o complejo; GCC se niega a optimizar programas cuando es probable que la optimizaci&amp;oacute;n en s&amp;iacute; requiera cantidades excesivas de tiempo.</target>
        </trans-unit>
        <trans-unit id="13c5db18900b8a64496f744ccfd5e2648bd6cc79" translate="yes" xml:space="preserve">
          <source>Warn if a self-comparison always evaluates to true or false. This warning detects various mistakes such as:</source>
          <target state="translated">Advierte si una autocomparación siempre se evalúa como verdadera o falsa.Esta advertencia detecta varios errores como:</target>
        </trans-unit>
        <trans-unit id="3ddcbce9d2796dc0f4331ea0e609fc2579e95907" translate="yes" xml:space="preserve">
          <source>Warn if a structure field with explicitly specified alignment in a packed struct or union is misaligned. For example, a warning will be issued on &lt;code&gt;struct S&lt;/code&gt;, like, &lt;code&gt;warning: alignment 1 of
'struct S' is less than 8&lt;/code&gt;, in this code:</source>
          <target state="translated">Advierte si un campo de estructura con una alineaci&amp;oacute;n especificada expl&amp;iacute;citamente en una estructura o uni&amp;oacute;n empaquetada est&amp;aacute; desalineado. Por ejemplo, se emitir&amp;aacute; una advertencia en la &lt;code&gt;struct S&lt;/code&gt; , como, &lt;code&gt;warning: alignment 1 of 'struct S' is less than 8&lt;/code&gt; , en este c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="4090da0abd58db5d6b3c1df786fa78fbd44ccb0c" translate="yes" xml:space="preserve">
          <source>Warn if a structure is given the packed attribute, but the packed attribute has no effect on the layout or size of the structure. Such structures may be mis-aligned for little benefit. For instance, in this code, the variable &lt;code&gt;f.x&lt;/code&gt; in &lt;code&gt;struct bar&lt;/code&gt; is misaligned even though &lt;code&gt;struct bar&lt;/code&gt; does not itself have the packed attribute:</source>
          <target state="translated">Advierte si a una estructura se le asigna el atributo empaquetado, pero el atributo empaquetado no tiene ning&amp;uacute;n efecto sobre el dise&amp;ntilde;o o el tama&amp;ntilde;o de la estructura. Estas estructuras pueden estar mal alineadas para obtener pocos beneficios. Por ejemplo, en este c&amp;oacute;digo, la variable &lt;code&gt;f.x&lt;/code&gt; en la &lt;code&gt;struct bar&lt;/code&gt; est&amp;aacute; desalineada aunque la &lt;code&gt;struct bar&lt;/code&gt; no tenga el atributo empaquetado:</target>
        </trans-unit>
        <trans-unit id="25445489d5b31008c73b432793637e0936c19aa4" translate="yes" xml:space="preserve">
          <source>Warn if a structure&amp;rsquo;s initializer has some fields missing. For example, the following code causes such a warning, because &lt;code&gt;x.h&lt;/code&gt; is implicitly zero:</source>
          <target state="translated">Advierte si al inicializador de una estructura le faltan algunos campos. Por ejemplo, el siguiente c&amp;oacute;digo genera una advertencia de este tipo, porque &lt;code&gt;x.h&lt;/code&gt; es impl&amp;iacute;citamente cero:</target>
        </trans-unit>
        <trans-unit id="ff8391aca57a7124434de4ac423b8ea2b9835ac5" translate="yes" xml:space="preserve">
          <source>Warn if a user-supplied include directory does not exist.</source>
          <target state="translated">Avisar si un directorio de inclusión suministrado por el usuario no existe.</target>
        </trans-unit>
        <trans-unit id="3fc14a4903f34179ede0f1ca4ae1ec5c8d1b70b1" translate="yes" xml:space="preserve">
          <source>Warn if a variable-length array is used in the code.</source>
          <target state="translated">Advierte si se utiliza una matriz de longitud variable en el código.</target>
        </trans-unit>
        <trans-unit id="36f8e0d2c860d788d014b0fd6079fd78b6555ede" translate="yes" xml:space="preserve">
          <source>Warn if an &lt;code&gt;extern&lt;/code&gt; declaration is encountered within a function.</source>
          <target state="translated">Advierte si se encuentra una declaraci&amp;oacute;n &lt;code&gt;extern&lt;/code&gt; a dentro de una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2a938c70ebc261d86f7b298216ca1b2a1c719c46" translate="yes" xml:space="preserve">
          <source>Warn if an aggregate or union initializer is not fully bracketed. In the following example, the initializer for &lt;code&gt;a&lt;/code&gt; is not fully bracketed, but that for &lt;code&gt;b&lt;/code&gt; is fully bracketed. This warning is enabled by</source>
          <target state="translated">Advertir si un inicializador agregado o de uni&amp;oacute;n no est&amp;aacute; completamente entre corchetes. En el siguiente ejemplo, el inicializador para &lt;code&gt;a&lt;/code&gt; no est&amp;aacute; completamente entre corchetes, pero el de &lt;code&gt;b&lt;/code&gt; est&amp;aacute; completamente entre corchetes. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="13b8026e8132cdf11c73019d5520d0d0def0ca31" translate="yes" xml:space="preserve">
          <source>Warn if an array subscript has type &lt;code&gt;char&lt;/code&gt;. This is a common cause of error, as programmers often forget that this type is signed on some machines. This warning is enabled by</source>
          <target state="translated">Advertir si un sub&amp;iacute;ndice de matriz tiene el tipo &lt;code&gt;char&lt;/code&gt; . Esta es una causa com&amp;uacute;n de error, ya que los programadores a menudo olvidan que este tipo est&amp;aacute; firmado en algunas m&amp;aacute;quinas. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="4eadd49680011e5fcccbd2afb576905c49ae4f6b" translate="yes" xml:space="preserve">
          <source>Warn if an automatic variable is used without first being initialized or if a variable may be clobbered by a &lt;code&gt;setjmp&lt;/code&gt; call. In C++, warn if a non-static reference or non-static &lt;code&gt;const&lt;/code&gt; member appears in a class without constructors.</source>
          <target state="translated">Advierte si se usa una variable autom&amp;aacute;tica sin haber sido inicializada primero o si una variable puede ser golpeada por una llamada &lt;code&gt;setjmp&lt;/code&gt; . En C ++, advierte si aparece una referencia no est&amp;aacute;tica o un miembro &lt;code&gt;const&lt;/code&gt; no est&amp;aacute;tico en una clase sin constructores.</target>
        </trans-unit>
        <trans-unit id="dc1ee512cf2decbbe83cea7bedf87603b46e0326" translate="yes" xml:space="preserve">
          <source>Warn if an empty body occurs in an &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt; or &lt;code&gt;do
while&lt;/code&gt; statement. This warning is also enabled by</source>
          <target state="translated">Advertir si aparece un cuerpo vac&amp;iacute;o en una instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; o &lt;code&gt;do while&lt;/code&gt; . Esta advertencia tambi&amp;eacute;n est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="383fdc3973b7b5cc3531ea392827d8edfbd6eb85" translate="yes" xml:space="preserve">
          <source>Warn if an initialized field with side effects is overridden when using designated initializers (see &lt;a href=&quot;designated-inits#Designated-Inits&quot;&gt;Designated Initializers&lt;/a&gt;). This warning is enabled by default.</source>
          <target state="translated">Advertir si un campo inicializado con efectos secundarios se anula cuando se utilizan inicializadores designados (consulte &lt;a href=&quot;designated-inits#Designated-Inits&quot;&gt;Inicializadores designados&lt;/a&gt; ). Esta advertencia est&amp;aacute; habilitada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="fdf68e08c13104db975e1e1b5bfffcc9f671b2dc" translate="yes" xml:space="preserve">
          <source>Warn if an initialized field without side effects is overridden when using designated initializers (see &lt;a href=&quot;designated-inits#Designated-Inits&quot;&gt;Designated Initializers&lt;/a&gt;).</source>
          <target state="translated">Advertir si un campo inicializado sin efectos secundarios se anula cuando se utilizan inicializadores designados (consulte &lt;a href=&quot;designated-inits#Designated-Inits&quot;&gt;Inicializadores designados&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d80a9ebeceb31bde1433b7b0306e206a1d5169eb" translate="yes" xml:space="preserve">
          <source>Warn if an old-style (C-style) cast to a non-void type is used within a C++ program. The new-style casts (&lt;code&gt;dynamic_cast&lt;/code&gt;, &lt;code&gt;static_cast&lt;/code&gt;, &lt;code&gt;reinterpret_cast&lt;/code&gt;, and &lt;code&gt;const_cast&lt;/code&gt;) are less vulnerable to unintended effects and much easier to search for.</source>
          <target state="translated">Advertir si se usa una conversi&amp;oacute;n de estilo antiguo (estilo C) a un tipo no vac&amp;iacute;o dentro de un programa C ++. Los lanzamientos de nuevo estilo ( &lt;code&gt;dynamic_cast&lt;/code&gt; , &lt;code&gt;static_cast&lt;/code&gt; , &lt;code&gt;reinterpret_cast&lt;/code&gt; y &lt;code&gt;const_cast&lt;/code&gt; ) son menos vulnerables a efectos no deseados y mucho m&amp;aacute;s f&amp;aacute;ciles de buscar.</target>
        </trans-unit>
        <trans-unit id="c7f9169958964ae3bf708d5e9fc733f1b6f3d079" translate="yes" xml:space="preserve">
          <source>Warn if an old-style function definition is used. A warning is given even if there is a previous prototype.</source>
          <target state="translated">Avisar si se utiliza una definición de función de estilo antiguo.Se da una advertencia incluso si hay un prototipo anterior.</target>
        </trans-unit>
        <trans-unit id="da6e0c7f139a454bc8182dc0ec55a473f639305f" translate="yes" xml:space="preserve">
          <source>Warn if an undefined identifier is evaluated in an &lt;code&gt;#if&lt;/code&gt; directive. Such identifiers are replaced with zero.</source>
          <target state="translated">Advierte si se eval&amp;uacute;a un identificador indefinido en una directiva &lt;code&gt;#if&lt;/code&gt; . Estos identificadores se reemplazan por cero.</target>
        </trans-unit>
        <trans-unit id="ac1c57ed34616373c808e98ba1a7016be9451740" translate="yes" xml:space="preserve">
          <source>Warn if any functions that return structures or unions are defined or called. (In languages where you can return an array, this also elicits a warning.)</source>
          <target state="translated">Avisar si se define o se llama a las funciones que devuelven las estructuras o uniones.(En los idiomas en los que se puede devolver una matriz,esto también provoca una advertencia).</target>
        </trans-unit>
        <trans-unit id="51dd1d087c6f2f3e06e53605399888ad9deb557f" translate="yes" xml:space="preserve">
          <source>Warn if any trigraphs are encountered that might change the meaning of the program. Trigraphs within comments are not warned about, except those that would form escaped newlines.</source>
          <target state="translated">Advierta si se encuentra algún trigonograma que pueda cambiar el significado del programa.No se advierte sobre los trigrafos dentro de los comentarios,excepto aquellos que formarían nuevas líneas de escape.</target>
        </trans-unit>
        <trans-unit id="4ffcebae22b64bc0188075323e253a892fb2c53e" translate="yes" xml:space="preserve">
          <source>Warn if anything is declared more than once in the same scope, even in cases where multiple declaration is valid and changes nothing.</source>
          <target state="translated">Advierta si algo se declara más de una vez en el mismo ámbito,incluso en los casos en que la declaración múltiple es válida y no cambia nada.</target>
        </trans-unit>
        <trans-unit id="e116ff785f520c78cab89ec80c259fd9b971e9a1" translate="yes" xml:space="preserve">
          <source>Warn if feedback profiles are missing when using the</source>
          <target state="translated">Advierte si faltan perfiles de retroalimentación cuando se utiliza el</target>
        </trans-unit>
        <trans-unit id="159621fc69892b60a8932abc53e5e7077fd3432a" translate="yes" xml:space="preserve">
          <source>Warn if feedback profiles do not match when using the</source>
          <target state="translated">Advierta si los perfiles de retroalimentación no coinciden al usar el</target>
        </trans-unit>
        <trans-unit id="4484a988d285daa67ba50d8d0068eac8b9c3b671" translate="yes" xml:space="preserve">
          <source>Warn if floating-point values are used in equality comparisons.</source>
          <target state="translated">Advierte si se usan valores de punto flotante en las comparaciones de igualdad.</target>
        </trans-unit>
        <trans-unit id="5905365a7243693b281255e7cd734a616d419731" translate="yes" xml:space="preserve">
          <source>Warn if in a loop with constant number of iterations the compiler detects undefined behavior in some statement during one or more of the iterations.</source>
          <target state="translated">Avisa si en un bucle con número constante de iteraciones el compilador detecta un comportamiento indefinido en alguna declaración durante una o más de las iteraciones.</target>
        </trans-unit>
        <trans-unit id="30ffd0486ea9b42613bc7458b80c284dea250c07" translate="yes" xml:space="preserve">
          <source>Warn if left shifting a negative value. This warning is enabled by</source>
          <target state="translated">Advierte si se deja desplazando un valor negativo.Esta advertencia se activa mediante</target>
        </trans-unit>
        <trans-unit id="59ffb10f60449caf44bc018fb1547abe48a875a4" translate="yes" xml:space="preserve">
          <source>Warn if multiple methods of different types for the same selector are found during compilation. The check is performed on the list of methods in the final stage of compilation. Additionally, a check is performed for each selector appearing in a &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; expression, and a corresponding method for that selector has been found during compilation. Because these checks scan the method table only at the end of compilation, these warnings are not produced if the final stage of compilation is not reached, for example because an error is found during compilation, or because the</source>
          <target state="translated">Advertir si se encuentran varios m&amp;eacute;todos de diferentes tipos para el mismo selector durante la compilaci&amp;oacute;n. La verificaci&amp;oacute;n se realiza en la lista de m&amp;eacute;todos en la etapa final de compilaci&amp;oacute;n. Adem&amp;aacute;s, se realiza una comprobaci&amp;oacute;n para cada selector que aparece en una &lt;code&gt;@selector(&amp;hellip;)&lt;/code&gt; , y se ha encontrado un m&amp;eacute;todo correspondiente para ese selector durante la compilaci&amp;oacute;n. Debido a que estas comprobaciones escanean la tabla de m&amp;eacute;todos solo al final de la compilaci&amp;oacute;n, estas advertencias no se producen si no se alcanza la etapa final de compilaci&amp;oacute;n, por ejemplo, porque se encuentra un error durante la compilaci&amp;oacute;n o porque el</target>
        </trans-unit>
        <trans-unit id="cd90c2f7bb5d921c657a205bebfbd186d1fe38a6" translate="yes" xml:space="preserve">
          <source>Warn if multiple methods with differing argument and/or return types are found for a given selector when attempting to send a message using this selector to a receiver of type &lt;code&gt;id&lt;/code&gt; or &lt;code&gt;Class&lt;/code&gt;. When this flag is off (which is the default behavior), the compiler omits such warnings if any differences found are confined to types that share the same size and alignment.</source>
          <target state="translated">Advertir si se encuentran varios m&amp;eacute;todos con diferentes argumentos y / o tipos de retorno para un selector dado cuando se intenta enviar un mensaje usando este selector a un receptor de tipo &lt;code&gt;id&lt;/code&gt; o &lt;code&gt;Class&lt;/code&gt; . Cuando este indicador est&amp;aacute; desactivado (que es el comportamiento predeterminado), el compilador omite tales advertencias si las diferencias encontradas se limitan a tipos que comparten el mismo tama&amp;ntilde;o y alineaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b4a4ef5836fcd4eb9eae356fd7d365383ac64fa2" translate="yes" xml:space="preserve">
          <source>Warn if padding is included in a structure, either to align an element of the structure or to align the whole structure. Sometimes when this happens it is possible to rearrange the fields of the structure to reduce the padding and so make the structure smaller.</source>
          <target state="translated">Advierte si se incluye relleno en una estructura,ya sea para alinear un elemento de la estructura o para alinear toda la estructura.A veces,cuando esto sucede,es posible reorganizar los campos de la estructura para reducir el acolchado y así hacer la estructura más pequeña.</target>
        </trans-unit>
        <trans-unit id="cd9ef45fbb8d72f1831fd326b4e220df7e2faf4b" translate="yes" xml:space="preserve">
          <source>Warn if parentheses are omitted in certain contexts, such as when there is an assignment in a context where a truth value is expected, or when operators are nested whose precedence people often get confused about.</source>
          <target state="translated">Advierta si se omiten los paréntesis en determinados contextos,como cuando hay una asignación en un contexto en el que se espera un valor de verdad,o cuando se anidan operadores cuya precedencia suele confundirse.</target>
        </trans-unit>
        <trans-unit id="3dceb1e23a828c2f0ba0a906a334b86bd9449ace" translate="yes" xml:space="preserve">
          <source>Warn if shift count &amp;gt;= width of type. This warning is enabled by default.</source>
          <target state="translated">Advertir si el n&amp;uacute;mero de turnos&amp;gt; = ancho del tipo. Esta advertencia est&amp;aacute; habilitada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="782b64d027fe58cf65d8d3d5a2401f820f146ca7" translate="yes" xml:space="preserve">
          <source>Warn if shift count is negative. This warning is enabled by default.</source>
          <target state="translated">Avisa si el recuento de turnos es negativo.Esta advertencia está activada por defecto.</target>
        </trans-unit>
        <trans-unit id="9c75b9200e1a12aae1dc4d040bec33d9a26d867e" translate="yes" xml:space="preserve">
          <source>Warn if the C++17 feature making &lt;code&gt;noexcept&lt;/code&gt; part of a function type changes the mangled name of a symbol relative to C++14. Enabled by</source>
          <target state="translated">Advertir si la caracter&amp;iacute;stica de C ++ 17 que no &lt;code&gt;noexcept&lt;/code&gt; parte de un tipo de funci&amp;oacute;n cambia el nombre mutilado de un s&amp;iacute;mbolo relativo a C ++ 14. Habilitado por</target>
        </trans-unit>
        <trans-unit id="46702f45847b2104b177e9b694f3c3f7e2226105" translate="yes" xml:space="preserve">
          <source>Warn if the ISR is misspelled, i.e. without __vector prefix. Enabled by default.</source>
          <target state="translated">Avisa si la ISR está mal escrita,es decir,sin el prefijo __vector.Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="33d88165f92bdb2b45ff7a297ce9db7215dfa02b" translate="yes" xml:space="preserve">
          <source>Warn if the compiler detects paths that trigger erroneous or undefined behavior due to dereferencing a null pointer. This option is only active when</source>
          <target state="translated">Avisa si el compilador detecta caminos que desencadenan un comportamiento erróneo o indefinido debido a la derivación de un puntero nulo.Esta opción sólo está activa cuando</target>
        </trans-unit>
        <trans-unit id="201bd84a1d08c6c2787e78691ed2f3f92ff20d03" translate="yes" xml:space="preserve">
          <source>Warn if the loop cannot be optimized because the compiler cannot assume anything on the bounds of the loop indices. With</source>
          <target state="translated">Avisa si el bucle no puede ser optimizado porque el compilador no puede asumir nada en los límites de los índices del bucle.Con</target>
        </trans-unit>
        <trans-unit id="6ce9dcfeb56e93b36f3824efcafb3fac2f89db30" translate="yes" xml:space="preserve">
          <source>Warn if the return type of a function has a type qualifier such as &lt;code&gt;const&lt;/code&gt;. For ISO C such a type qualifier has no effect, since the value returned by a function is not an lvalue. For C++, the warning is only emitted for scalar types or &lt;code&gt;void&lt;/code&gt;. ISO C prohibits qualified &lt;code&gt;void&lt;/code&gt; return types on function definitions, so such return types always receive a warning even without this option.</source>
          <target state="translated">Advierte si el tipo de retorno de una funci&amp;oacute;n tiene un calificador de tipo como &lt;code&gt;const&lt;/code&gt; . Para ISO C, tal calificador de tipo no tiene ning&amp;uacute;n efecto, ya que el valor devuelto por una funci&amp;oacute;n no es un lvalue. Para C ++, la advertencia solo se emite para tipos escalares o &lt;code&gt;void&lt;/code&gt; . ISO C proh&amp;iacute;be los tipos de devoluci&amp;oacute;n de &lt;code&gt;void&lt;/code&gt; calificados en las definiciones de funciones, por lo que dichos tipos de devoluci&amp;oacute;n siempre reciben una advertencia incluso sin esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="84e834ec069e09da87cddcf3972bf0a3064670e4" translate="yes" xml:space="preserve">
          <source>Warn if the size of a function frame exceeds &lt;var&gt;byte-size&lt;/var&gt;. The computation done to determine the stack frame size is approximate and not conservative. The actual requirements may be somewhat greater than &lt;var&gt;byte-size&lt;/var&gt; even if you do not get a warning. In addition, any space allocated via &lt;code&gt;alloca&lt;/code&gt;, variable-length arrays, or related constructs is not included by the compiler when determining whether or not to issue a warning.</source>
          <target state="translated">Advierte si el tama&amp;ntilde;o de un marco de funci&amp;oacute;n supera el tama&amp;ntilde;o de &lt;var&gt;byte-size&lt;/var&gt; . El c&amp;aacute;lculo realizado para determinar el tama&amp;ntilde;o del marco de la pila es aproximado y no conservador. Los requisitos reales pueden ser algo mayores que &lt;var&gt;byte-size&lt;/var&gt; del byte incluso si no recibe una advertencia. Adem&amp;aacute;s, el compilador no incluye cualquier espacio asignado a trav&amp;eacute;s de &lt;code&gt;alloca&lt;/code&gt; , matrices de longitud variable o construcciones relacionadas al determinar si se debe o no emitir una advertencia.</target>
        </trans-unit>
        <trans-unit id="5b03e969a133a7f61dfd42668c90fbd199dc871d" translate="yes" xml:space="preserve">
          <source>Warn if the stack usage of a function might exceed &lt;var&gt;byte-size&lt;/var&gt;. The computation done to determine the stack usage is conservative. Any space allocated via &lt;code&gt;alloca&lt;/code&gt;, variable-length arrays, or related constructs is included by the compiler when determining whether or not to issue a warning.</source>
          <target state="translated">Advierte si el uso de la pila de una funci&amp;oacute;n puede exceder &lt;var&gt;byte-size&lt;/var&gt; . El c&amp;aacute;lculo realizado para determinar el uso de la pila es conservador. El compilador incluye cualquier espacio asignado a trav&amp;eacute;s de &lt;code&gt;alloca&lt;/code&gt; , matrices de longitud variable o construcciones relacionadas al determinar si se debe emitir una advertencia o no.</target>
        </trans-unit>
        <trans-unit id="949e7c4b1e5fd9dd73b3df3e4dd44a3a50fb46cc" translate="yes" xml:space="preserve">
          <source>Warn if the type of &lt;code&gt;main&lt;/code&gt; is suspicious. &lt;code&gt;main&lt;/code&gt; should be a function with external linkage, returning int, taking either zero arguments, two, or three arguments of appropriate types. This warning is enabled by default in C++ and is enabled by either</source>
          <target state="translated">Advertir si el tipo de &lt;code&gt;main&lt;/code&gt; es sospechoso. &lt;code&gt;main&lt;/code&gt; debe ser una funci&amp;oacute;n con enlace externo, devolviendo int, tomando cero argumentos, dos o tres argumentos de los tipos apropiados. Esta advertencia est&amp;aacute; habilitada de forma predeterminada en C ++ y est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="6da28b5dec8555c7e8c577e4ad18fb400e3b7e57" translate="yes" xml:space="preserve">
          <source>Warn if the vectorizer cost model overrides the OpenMP simd directive set by user. The</source>
          <target state="translated">Advierte si el modelo de costos del vectorizador anula la directiva OpenMP simd establecida por el usuario.El</target>
        </trans-unit>
        <trans-unit id="cd147a815b47d8a61a481259e6bec92f6328c4b1" translate="yes" xml:space="preserve">
          <source>Warn if variadic macros are used in ISO C90 mode, or if the GNU alternate syntax is used in ISO C99 mode. This is enabled by either</source>
          <target state="translated">Advierte si se usan macros variadas en el modo ISO C90,o si se usa la sintaxis alternativa GNU en el modo ISO C99.Esto se activa por</target>
        </trans-unit>
        <trans-unit id="55d977b102dea3867bcd6836e9a2eac79a9f6018" translate="yes" xml:space="preserve">
          <source>Warn if vector operation is not implemented via SIMD capabilities of the architecture. Mainly useful for the performance tuning. Vector operation can be implemented &lt;code&gt;piecewise&lt;/code&gt;, which means that the scalar operation is performed on every vector element; &lt;code&gt;in parallel&lt;/code&gt;, which means that the vector operation is implemented using scalars of wider type, which normally is more performance efficient; and &lt;code&gt;as a single scalar&lt;/code&gt;, which means that vector fits into a scalar type.</source>
          <target state="translated">Advertir si la operaci&amp;oacute;n vectorial no se implementa a trav&amp;eacute;s de las capacidades SIMD de la arquitectura. Principalmente &amp;uacute;til para el ajuste del rendimiento. La operaci&amp;oacute;n vectorial se puede implementar por &lt;code&gt;piecewise&lt;/code&gt; , lo que significa que la operaci&amp;oacute;n escalar se realiza en cada elemento vectorial; &lt;code&gt;in parallel&lt;/code&gt; , lo que significa que la operaci&amp;oacute;n vectorial se implementa utilizando escalares de tipo m&amp;aacute;s amplio, que normalmente es m&amp;aacute;s eficiente en el desempe&amp;ntilde;o; y &lt;code&gt;as a single scalar&lt;/code&gt; , lo que significa que el vector encaja en un tipo escalar.</target>
        </trans-unit>
        <trans-unit id="d552f4c46cc5d3bd7e299e5496e695efcda3d372" translate="yes" xml:space="preserve">
          <source>Warn on uses of the &lt;code&gt;register&lt;/code&gt; storage class specifier, except when it is part of the GNU &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Explicit Register Variables&lt;/a&gt; extension. The use of the &lt;code&gt;register&lt;/code&gt; keyword as storage class specifier has been deprecated in C++11 and removed in C++17. Enabled by default with</source>
          <target state="translated">Advierte sobre los usos del especificador de clase de almacenamiento de &lt;code&gt;register&lt;/code&gt; , excepto cuando es parte de la extensi&amp;oacute;n de &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Variables de registro expl&amp;iacute;citas de&lt;/a&gt; GNU . El uso de la palabra clave &lt;code&gt;register&lt;/code&gt; como especificador de clase de almacenamiento se ha desaprobado en C ++ 11 y se ha eliminado en C ++ 17. Habilitado por defecto con</target>
        </trans-unit>
        <trans-unit id="77c0caa2b84a54b5bcf764add54f563ae56b7071" translate="yes" xml:space="preserve">
          <source>Warn that the implicit declaration of a copy constructor or copy assignment operator is deprecated if the class has a user-provided copy constructor or copy assignment operator, in C++11 and up. This warning is enabled by</source>
          <target state="translated">Advierta que la declaración implícita de un constructor de copias u operador de asignación de copias está desactualizada si la clase tiene un constructor de copias u operador de asignación de copias suministrado por el usuario,en C++11 y superior.Este aviso se activa mediante</target>
        </trans-unit>
        <trans-unit id="4d2e76892f19022181f5882885c8f72e1722da44" translate="yes" xml:space="preserve">
          <source>Warn upon questionable usage of the macros used to handle variable arguments like &lt;code&gt;va_start&lt;/code&gt;. This is default. To inhibit the warning messages, use</source>
          <target state="translated">Advierte sobre el uso cuestionable de las macros utilizadas para manejar argumentos variables como &lt;code&gt;va_start&lt;/code&gt; . Esto es predeterminado. Para inhibir los mensajes de advertencia, utilice</target>
        </trans-unit>
        <trans-unit id="3abec5289cdc959e5a13fe23b53843308a01da72" translate="yes" xml:space="preserve">
          <source>Warn when &lt;code&gt;__sync_fetch_and_nand&lt;/code&gt; and &lt;code&gt;__sync_nand_and_fetch&lt;/code&gt; built-in functions are used. These functions changed semantics in GCC 4.4.</source>
          <target state="translated">Advertir cuando se &lt;code&gt;__sync_fetch_and_nand&lt;/code&gt; &lt;code&gt;__sync_nand_and_fetch&lt;/code&gt; integradas __sync_fetch_and_nand y __sync_nand_and_fetch . Estas funciones cambiaron la sem&amp;aacute;ntica en GCC 4.4.</target>
        </trans-unit>
        <trans-unit id="2aa9b92f65cbea3024eccc7e04605b70f951ef46" translate="yes" xml:space="preserve">
          <source>Warn when &lt;code&gt;delete&lt;/code&gt; is used to destroy an instance of a class that has virtual functions and non-virtual destructor. It is unsafe to delete an instance of a derived class through a pointer to a base class if the base class does not have a virtual destructor. This warning is enabled by</source>
          <target state="translated">Advertir cuando la &lt;code&gt;delete&lt;/code&gt; se usa para destruir una instancia de una clase que tiene funciones virtuales y un destructor no virtual. No es seguro eliminar una instancia de una clase derivada mediante un puntero a una clase base si la clase base no tiene un destructor virtual. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="f21bdb487f01146075a954516a5aced86463b3d2" translate="yes" xml:space="preserve">
          <source>Warn when G++ it generates code that is probably not compatible with the vendor-neutral C++ ABI. Since G++ now defaults to updating the ABI with each major release, normally</source>
          <target state="translated">Advierte cuando G++genera código que probablemente no es compatible con el ABI de C++,que es neutral con respecto al vendedor.Ya que G++ahora actualiza por defecto la ABI con cada versión principal,normalmente</target>
        </trans-unit>
        <trans-unit id="35e0de5085f6b803ca5c49ba47e5ebe4c1616823" translate="yes" xml:space="preserve">
          <source>Warn when a &lt;code&gt;#pragma&lt;/code&gt; directive is encountered that is not understood by GCC. If this command-line option is used, warnings are even issued for unknown pragmas in system header files. This is not the case if the warnings are only enabled by the</source>
          <target state="translated">Advierte cuando se encuentra una directiva &lt;code&gt;#pragma&lt;/code&gt; que GCC no entiende. Si se utiliza esta opci&amp;oacute;n de l&amp;iacute;nea de comandos, incluso se emiten advertencias para pragmas desconocidos en los archivos de encabezado del sistema. Este no es el caso si las advertencias solo las habilita el</target>
        </trans-unit>
        <trans-unit id="62d4dab62f762a61b2f522842ea9ed134dd06936" translate="yes" xml:space="preserve">
          <source>Warn when a class has virtual functions and an accessible non-virtual destructor itself or in an accessible polymorphic base class, in which case it is possible but unsafe to delete an instance of a derived class through a pointer to the class itself or base class. This warning is automatically enabled if</source>
          <target state="translated">Advertir cuando una clase tiene funciones virtuales y un destructor no virtual accesible en sí mismo o en una clase base polimórfica accesible,en cuyo caso es posible,pero no seguro,eliminar una instancia de una clase derivada a través de un puntero a la clase en sí o a la clase base.Esta advertencia se activa automáticamente si</target>
        </trans-unit>
        <trans-unit id="2cb7e95f48120a523e19a1fdc36b0b8e1ca72f8b" translate="yes" xml:space="preserve">
          <source>Warn when a class is defined with a virtual direct base class. Some coding rules disallow multiple inheritance, and this may be used to enforce that rule. The warning is inactive inside a system header file, such as the STL, so one can still use the STL. One may also define classes that indirectly use virtual inheritance.</source>
          <target state="translated">Avisa cuando una clase se define con una clase base virtual directa.Algunas reglas de codificación no permiten la herencia múltiple,y esto puede utilizarse para hacer cumplir esa regla.El aviso está inactivo dentro de un archivo de cabecera del sistema,como el STL,por lo que se puede seguir usando el STL.También se pueden definir clases que utilicen indirectamente la herencia virtual.</target>
        </trans-unit>
        <trans-unit id="856d4cae226810333db6e35bc2ec148c4f408659" translate="yes" xml:space="preserve">
          <source>Warn when a class is defined with multiple direct base classes. Some coding rules disallow multiple inheritance, and this may be used to enforce that rule. The warning is inactive inside a system header file, such as the STL, so one can still use the STL. One may also define classes that indirectly use multiple inheritance.</source>
          <target state="translated">Avisa cuando una clase se define con múltiples clases de base directa.Algunas reglas de codificación no permiten la herencia múltiple,y esto puede utilizarse para hacer cumplir esa regla.El aviso está inactivo dentro de un archivo de cabecera del sistema,como el STL,por lo que se puede seguir usando el STL.También se pueden definir clases que utilicen indirectamente la herencia múltiple.</target>
        </trans-unit>
        <trans-unit id="62d55cbfe764766f5f6f7218d2c7a740a50c90ce" translate="yes" xml:space="preserve">
          <source>Warn when a class seems unusable because all the constructors or destructors in that class are private, and it has neither friends nor public static member functions. Also warn if there are no non-private methods, and there&amp;rsquo;s at least one private member function that isn&amp;rsquo;t a constructor or destructor.</source>
          <target state="translated">Advierte cuando una clase parece inutilizable porque todos los constructores o destructores de esa clase son privados y no tiene amigos ni funciones miembro p&amp;uacute;blicas est&amp;aacute;ticas. Tambi&amp;eacute;n advierte si no hay m&amp;eacute;todos no privados, y hay al menos una funci&amp;oacute;n miembro privada que no es un constructor o destructor.</target>
        </trans-unit>
        <trans-unit id="3da6bed540b8c798c01ac10e6f991d33a93d7840" translate="yes" xml:space="preserve">
          <source>Warn when a comparison between signed and unsigned values could produce an incorrect result when the signed value is converted to unsigned. In C++, this warning is also enabled by</source>
          <target state="translated">Advierta cuando una comparación entre valores firmados y no firmados pueda producir un resultado incorrecto al convertir el valor firmado en no firmado.En C++,esta advertencia también está habilitada por</target>
        </trans-unit>
        <trans-unit id="d0d230a7b94f00a257ce101a92be2d7094f8073f" translate="yes" xml:space="preserve">
          <source>Warn when a declaration does not specify a type. This warning is enabled by</source>
          <target state="translated">Avisar cuando una declaración no especifica un tipo.Este aviso se activa mediante</target>
        </trans-unit>
        <trans-unit id="65d83d710bdf5c622a92b858d79d70755ab8010e" translate="yes" xml:space="preserve">
          <source>Warn when a declaration is found after a statement in a block. This construct, known from C++, was introduced with ISO C99 and is by default allowed in GCC. It is not supported by ISO C90. See &lt;a href=&quot;mixed-declarations#Mixed-Declarations&quot;&gt;Mixed Declarations&lt;/a&gt;.</source>
          <target state="translated">Advertir cuando se encuentra una declaraci&amp;oacute;n despu&amp;eacute;s de una declaraci&amp;oacute;n en un bloque. Esta construcci&amp;oacute;n, conocida de C ++, se introdujo con ISO C99 y est&amp;aacute; permitida por defecto en GCC. No es compatible con ISO C90. Ver &lt;a href=&quot;mixed-declarations#Mixed-Declarations&quot;&gt;declaraciones mixtas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a51fcbd164dc3089b47299b1d3b6f2732c7c6fcc" translate="yes" xml:space="preserve">
          <source>Warn when a declaration of a function is missing one or more attributes that a related function is declared with and whose absence may adversely affect the correctness or efficiency of generated code. For example, the warning is issued for declarations of aliases that use attributes to specify less restrictive requirements than those of their targets. This typically represents a potential optimization opportunity. By contrast, the</source>
          <target state="translated">Advertir cuando en la declaración de una función falte uno o más atributos con los que se declare una función relacionada y cuya ausencia pueda afectar negativamente a la corrección o eficiencia del código generado.Por ejemplo,la advertencia se emite para las declaraciones de alias que utilizan atributos para especificar requisitos menos restrictivos que los de sus destinatarios.Esto suele representar una posible oportunidad de optimización.En cambio,el</target>
        </trans-unit>
        <trans-unit id="4f18983de88b8950abf6205674919e5d25d36a1f" translate="yes" xml:space="preserve">
          <source>Warn when a function call is cast to a non-matching type. For example, warn if a call to a function returning an integer type is cast to a pointer type.</source>
          <target state="translated">Avisa cuando una llamada de función es lanzada a un tipo no coincidente.Por ejemplo,avisar si una llamada a una función que devuelve un tipo entero es lanzada a un tipo puntero.</target>
        </trans-unit>
        <trans-unit id="1fee5efa47b570695ab661666c6e4fee9e9b04a8" translate="yes" xml:space="preserve">
          <source>Warn when a function declaration hides virtual functions from a base class. For example, in:</source>
          <target state="translated">Avisa cuando una declaración de función oculta funciones virtuales de una clase base.Por ejemplo,en:</target>
        </trans-unit>
        <trans-unit id="e0dab17ca245164b1ca8348967e2bf698b2a4654" translate="yes" xml:space="preserve">
          <source>Warn when a function pointer is cast to an incompatible function pointer. In a cast involving function types with a variable argument list only the types of initial arguments that are provided are considered. Any parameter of pointer-type matches any other pointer-type. Any benign differences in integral types are ignored, like &lt;code&gt;int&lt;/code&gt; vs. &lt;code&gt;long&lt;/code&gt; on ILP32 targets. Likewise type qualifiers are ignored. The function type &lt;code&gt;void (*) (void)&lt;/code&gt; is special and matches everything, which can be used to suppress this warning. In a cast involving pointer to member types this warning warns whenever the type cast is changing the pointer to member type. This warning is enabled by</source>
          <target state="translated">Advertir cuando un puntero de funci&amp;oacute;n se convierte en un puntero de funci&amp;oacute;n incompatible. En una conversi&amp;oacute;n que involucra tipos de funci&amp;oacute;n con una lista de argumentos variables, solo se consideran los tipos de argumentos iniciales que se proporcionan. Cualquier par&amp;aacute;metro de tipo puntero coincide con cualquier otro tipo de puntero. Se ignoran las diferencias benignas en los tipos de integrales, como &lt;code&gt;int&lt;/code&gt; vs. &lt;code&gt;long&lt;/code&gt; en los objetivos ILP32. Asimismo, se ignoran los calificadores de tipo. El tipo de funci&amp;oacute;n &lt;code&gt;void (*) (void)&lt;/code&gt; es especial y coincide con todo, lo que se puede utilizar para suprimir esta advertencia. En una conversi&amp;oacute;n que implica puntero a tipos de miembros, esta advertencia advierte siempre que la conversi&amp;oacute;n de tipos est&amp;aacute; cambiando el puntero a tipo de miembro. Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="1c95c86068b8b8d1d8a72bc94ef016e54d5ce483" translate="yes" xml:space="preserve">
          <source>Warn when a literal &amp;lsquo;</source>
          <target state="translated">Advertir cuando un literal '</target>
        </trans-unit>
        <trans-unit id="fc5d5783ac1277dfc41a8a050b298452017de063" translate="yes" xml:space="preserve">
          <source>Warn when a local variable shadows another local variable or parameter whose type is compatible with that of the shadowing variable. In C++, type compatibility here means the type of the shadowing variable can be converted to that of the shadowed variable. The creation of this flag (in addition to</source>
          <target state="translated">Avisa cuando una variable local sombrea otra variable local o parámetro cuyo tipo es compatible con el de la variable de sombreo.En C++,compatibilidad de tipo aquí significa que el tipo de la variable de sombra puede ser convertido al de la variable de sombra.La creación de este indicador (además de</target>
        </trans-unit>
        <trans-unit id="15ad15a27db9c39d53d6f814ef18cd0f426f15bd" translate="yes" xml:space="preserve">
          <source>Warn when a local variable shadows another local variable or parameter. This warning is enabled by</source>
          <target state="translated">Avisa cuando una variable local ensombrece otra variable o parámetro local.Este aviso se activa mediante</target>
        </trans-unit>
        <trans-unit id="7332bfdf0522cbf64f5e187ed28df9e9bbf190d7" translate="yes" xml:space="preserve">
          <source>Warn when a namespace definition is opened. Some coding rules disallow namespaces, and this may be used to enforce that rule. The warning is inactive inside a system header file, such as the STL, so one can still use the STL. One may also use using directives and qualified names.</source>
          <target state="translated">Avisa cuando se abre una definición de espacio de nombres.Algunas reglas de codificación no permiten los espacios de nombres,y esto puede utilizarse para hacer cumplir esa regla.La advertencia está inactiva dentro de un archivo de cabecera del sistema,como el STL,por lo que se puede seguir utilizando el STL.También se puede usar usando directivas y nombres calificados.</target>
        </trans-unit>
        <trans-unit id="0c68af853608801bfccea4375c872dd95f8c2c74" translate="yes" xml:space="preserve">
          <source>Warn when a noexcept-expression evaluates to false because of a call to a function that does not have a non-throwing exception specification (i.e. &lt;code&gt;throw()&lt;/code&gt; or &lt;code&gt;noexcept&lt;/code&gt;) but is known by the compiler to never throw an exception.</source>
          <target state="translated">Advertir cuando una expresi&amp;oacute;n-noexcepto se eval&amp;uacute;a como falsa debido a una llamada a una funci&amp;oacute;n que no tiene una especificaci&amp;oacute;n de excepci&amp;oacute;n que no &lt;code&gt;throw()&lt;/code&gt; es decir, throw () o &lt;code&gt;noexcept&lt;/code&gt; ) pero que el compilador sabe que nunca arroja una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="64beb2070ebf4a8be0aefd1a955c78bef9d98677" translate="yes" xml:space="preserve">
          <source>Warn when a primary template declaration is encountered. Some coding rules disallow templates, and this may be used to enforce that rule. The warning is inactive inside a system header file, such as the STL, so one can still use the STL. One may also instantiate or specialize templates.</source>
          <target state="translated">Avisar cuando se encuentre una declaración de plantilla primaria.Algunas reglas de codificación no permiten las plantillas,y esto puede ser usado para hacer cumplir esa regla.La advertencia está inactiva dentro de un archivo de cabecera del sistema,como el STL,por lo que se puede seguir usando el STL.También se pueden instanciar o especializar las plantillas.</target>
        </trans-unit>
        <trans-unit id="ecfd63f7bf76274a278010015f443553fb311275" translate="yes" xml:space="preserve">
          <source>Warn when a string or character literal is followed by a ud-suffix which does not begin with an underscore. As a conforming extension, GCC treats such suffixes as separate preprocessing tokens in order to maintain backwards compatibility with code that uses formatting macros from &lt;code&gt;&amp;lt;inttypes.h&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">Advierte cuando una cadena o un car&amp;aacute;cter literal va seguido de un sufijo ud que no comienza con un gui&amp;oacute;n bajo. Como una extensi&amp;oacute;n conforme, GCC trata dichos sufijos como tokens de preprocesamiento separados para mantener la compatibilidad hacia atr&amp;aacute;s con el c&amp;oacute;digo que usa macros de formato de &lt;code&gt;&amp;lt;inttypes.h&amp;gt;&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="af55e43f2240ead9470434a0686aeb1f0a48afd9" translate="yes" xml:space="preserve">
          <source>Warn when a switch case falls through. For example:</source>
          <target state="translated">Avisa cuando un caso de cambio se cae.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fae5e5411e11c5c48526329b8f085ab67410eafc" translate="yes" xml:space="preserve">
          <source>Warn when a type with an ABI tag is used in a context that does not have that ABI tag. See &lt;a href=&quot;c_002b_002b-attributes#C_002b_002b-Attributes&quot;&gt;C++ Attributes&lt;/a&gt; for more information about ABI tags.</source>
          <target state="translated">Advierte cuando se utiliza un tipo con una etiqueta ABI en un contexto que no tiene esa etiqueta ABI. Consulte &lt;a href=&quot;c_002b_002b-attributes#C_002b_002b-Attributes&quot;&gt;Atributos&lt;/a&gt; de C ++ para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las etiquetas ABI.</target>
        </trans-unit>
        <trans-unit id="b81088e3c7de4ba5e43b90938614126c8743c79a" translate="yes" xml:space="preserve">
          <source>Warn when a typedef locally defined in a function is not used. This warning is enabled by</source>
          <target state="translated">Avisar cuando no se utilice un tipedef definido localmente en una función.Este aviso se activa mediante</target>
        </trans-unit>
        <trans-unit id="7f92b37eeb1fc74d56bfb3de4e40a33e9756c1f8" translate="yes" xml:space="preserve">
          <source>Warn when an attribute is ignored. This is different from the</source>
          <target state="translated">Avisa cuando un atributo es ignorado.Esto es diferente de la</target>
        </trans-unit>
        <trans-unit id="69d8172c43b83e36a9fc251e2742504cc5f07f18" translate="yes" xml:space="preserve">
          <source>Warn when an expression is casted to its own type.</source>
          <target state="translated">Advierte cuando una expresión es lanzada a su propio tipo.</target>
        </trans-unit>
        <trans-unit id="68276b3f14c999ac5fd8362dd7f4c1eb0d25507e" translate="yes" xml:space="preserve">
          <source>Warn when an if-else has identical branches. This warning detects cases like</source>
          <target state="translated">Avisa cuando un &quot;si no&quot; tiene ramas idénticas.Esta advertencia detecta casos como</target>
        </trans-unit>
        <trans-unit id="4eaddac0ef918127a66832ad98be3ebdfc801bcd" translate="yes" xml:space="preserve">
          <source>Warn when an object referenced by a &lt;code&gt;restrict&lt;/code&gt;-qualified parameter (or, in C++, a &lt;code&gt;__restrict&lt;/code&gt;-qualified parameter) is aliased by another argument, or when copies between such objects overlap. For example, the call to the &lt;code&gt;strcpy&lt;/code&gt; function below attempts to truncate the string by replacing its initial characters with the last four. However, because the call writes the terminating NUL into &lt;code&gt;a[4]&lt;/code&gt;, the copies overlap and the call is diagnosed.</source>
          <target state="translated">Advertir cuando un objeto al que hace referencia un par&amp;aacute;metro con calificaci&amp;oacute;n &lt;code&gt;restrict&lt;/code&gt; iva (o, en C ++, un par&amp;aacute;metro calificado con &lt;code&gt;__restrict&lt;/code&gt; __) tiene un alias de otro argumento, o cuando las copias entre dichos objetos se superponen. Por ejemplo, la llamada a la funci&amp;oacute;n &lt;code&gt;strcpy&lt;/code&gt; a continuaci&amp;oacute;n intenta truncar la cadena reemplazando sus caracteres iniciales con los &amp;uacute;ltimos cuatro. Sin embargo, debido a que la llamada escribe el NUL de terminaci&amp;oacute;n en &lt;code&gt;a[4]&lt;/code&gt; , las copias se superponen y se diagnostica la llamada.</target>
        </trans-unit>
        <trans-unit id="48e014515a7db6fc79ef0eeec4d6a1ef40fdd1b6" translate="yes" xml:space="preserve">
          <source>Warn when comparing an argument marked with the &lt;code&gt;nonnull&lt;/code&gt; function attribute against null inside the function.</source>
          <target state="translated">Advertir al comparar un argumento marcado con el &lt;code&gt;nonnull&lt;/code&gt; funci&amp;oacute;n no nulo con nulo dentro de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="448f3542d0488bfdc3c401daf34114424d62966e" translate="yes" xml:space="preserve">
          <source>Warn when deleting a pointer to incomplete type, which may cause undefined behavior at runtime. This warning is enabled by default.</source>
          <target state="translated">Avisar cuando se borra un puntero a tipo incompleto,lo que puede causar un comportamiento indefinido en tiempo de ejecución.Esta advertencia está activada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="4aead77201e88b8231585b494878f47ece446b42" translate="yes" xml:space="preserve">
          <source>Warn when macros &lt;code&gt;__TIME__&lt;/code&gt;, &lt;code&gt;__DATE__&lt;/code&gt; or &lt;code&gt;__TIMESTAMP__&lt;/code&gt; are encountered as they might prevent bit-wise-identical reproducible compilations.</source>
          <target state="translated">Advertir cuando se encuentren macros &lt;code&gt;__TIME__&lt;/code&gt; , &lt;code&gt;__DATE__&lt;/code&gt; o &lt;code&gt;__TIMESTAMP__&lt;/code&gt; , ya que podr&amp;iacute;an impedir compilaciones reproducibles id&amp;eacute;nticas a nivel de bits.</target>
        </trans-unit>
        <trans-unit id="f416313a5d687fda4c349efcccdbcd43185983e0" translate="yes" xml:space="preserve">
          <source>Warn when overload resolution chooses a promotion from unsigned or enumerated type to a signed type, over a conversion to an unsigned type of the same size. Previous versions of G++ tried to preserve unsignedness, but the standard mandates the current behavior.</source>
          <target state="translated">Advierta cuando la resolución de sobrecarga elija un ascenso de un tipo no firmado o enumerado a un tipo firmado,sobre una conversión a un tipo no firmado del mismo tamaño.Las versiones anteriores de G++trataron de preservar la falta de firma,pero el estándar exige el comportamiento actual.</target>
        </trans-unit>
        <trans-unit id="6b26cc3f03f85ab2638c4cf2001a077d93732070" translate="yes" xml:space="preserve">
          <source>Warn when the &amp;lsquo;</source>
          <target state="translated">Advertir cuando el '</target>
        </trans-unit>
        <trans-unit id="8090e980ff3867e87fe893e55e71d464e21173ec" translate="yes" xml:space="preserve">
          <source>Warn when the &lt;code&gt;sizeof&lt;/code&gt; operator is applied to a parameter that is declared as an array in a function definition. This warning is enabled by default for C and C++ programs.</source>
          <target state="translated">Advierte cuando el operador &lt;code&gt;sizeof&lt;/code&gt; se aplica a un par&amp;aacute;metro que se declara como una matriz en una definici&amp;oacute;n de funci&amp;oacute;n. Esta advertencia est&amp;aacute; habilitada de forma predeterminada para los programas C y C ++.</target>
        </trans-unit>
        <trans-unit id="9e36c088ae2b71459782ca704065537e9a26901f" translate="yes" xml:space="preserve">
          <source>Warn when the address of packed member of struct or union is taken, which usually results in an unaligned pointer value. This is enabled by default.</source>
          <target state="translated">Avisar cuando se toma la dirección de un miembro de la estructura o unión,lo que suele resultar en un valor de puntero no alineado.Esto está habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="99f87649fa1908434c721b9cad02a2282152635b" translate="yes" xml:space="preserve">
          <source>Warn when the destination of a call to a raw memory function such as &lt;code&gt;memset&lt;/code&gt; or &lt;code&gt;memcpy&lt;/code&gt; is an object of class type, and when writing into such an object might bypass the class non-trivial or deleted constructor or copy assignment, violate const-correctness or encapsulation, or corrupt virtual table pointers. Modifying the representation of such objects may violate invariants maintained by member functions of the class. For example, the call to &lt;code&gt;memset&lt;/code&gt; below is undefined because it modifies a non-trivial class object and is, therefore, diagnosed. The safe way to either initialize or clear the storage of objects of such types is by using the appropriate constructor or assignment operator, if one is available.</source>
          <target state="translated">Advertir cuando el destino de una llamada a una funci&amp;oacute;n de memoria en bruto como &lt;code&gt;memset&lt;/code&gt; o &lt;code&gt;memcpy&lt;/code&gt; es un objeto de tipo de clase, y cuando escribir en dicho objeto puede omitir la asignaci&amp;oacute;n de copia o constructor no trivial o eliminado de la clase, violar la correcci&amp;oacute;n constante o encapsulaci&amp;oacute;n o punteros de tabla virtual corruptos. La modificaci&amp;oacute;n de la representaci&amp;oacute;n de tales objetos puede violar las invariantes mantenidas por las funciones miembro de la clase. Por ejemplo, la llamada a &lt;code&gt;memset&lt;/code&gt; a continuaci&amp;oacute;n no est&amp;aacute; definida porque modifica un objeto de clase no trivial y, por lo tanto, se diagnostica. La forma segura de inicializar o borrar el almacenamiento de objetos de este tipo es utilizando el constructor apropiado o el operador de asignaci&amp;oacute;n, si hay alguno disponible.</target>
        </trans-unit>
        <trans-unit id="40608df8d0fb171d8c9fd495ba5d5a7b32bd842d" translate="yes" xml:space="preserve">
          <source>Warn when the indentation of the code does not reflect the block structure. Specifically, a warning is issued for &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;for&lt;/code&gt; clauses with a guarded statement that does not use braces, followed by an unguarded statement with the same indentation.</source>
          <target state="translated">Advertir cuando la sangr&amp;iacute;a del c&amp;oacute;digo no refleja la estructura del bloque. Espec&amp;iacute;ficamente, se emite una advertencia &lt;code&gt;for&lt;/code&gt; cl&amp;aacute;usulas &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; y for con una declaraci&amp;oacute;n cautelosa que no usa llaves, seguida de una declaraci&amp;oacute;n no protegida con la misma sangr&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="ccf62a55eeac02e2a52c16724b5155a1eb1a630e" translate="yes" xml:space="preserve">
          <source>Warn when the order of member initializers given in the code does not match the order in which they must be executed. For instance:</source>
          <target state="translated">Avisar cuando el orden de los inicializadores de miembros dado en el código no coincida con el orden en que deben ser ejecutados.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="761311d3e33c39156d8e3725fcf020a8f1821794" translate="yes" xml:space="preserve">
          <source>Warn when the stack frame of a function exceeds &lt;var&gt;n&lt;/var&gt; bytes.</source>
          <target state="translated">Advierte cuando el marco de pila de una funci&amp;oacute;n supera los &lt;var&gt;n&lt;/var&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="837d376bd42b01ca86e7606408854284b9f96c39" translate="yes" xml:space="preserve">
          <source>Warn whenever &amp;lsquo;</source>
          <target state="translated">Advertir cuando '</target>
        </trans-unit>
        <trans-unit id="0c2135b897d3d5641cf8e18388c032eb11d6e43a" translate="yes" xml:space="preserve">
          <source>Warn whenever a &lt;code&gt;switch&lt;/code&gt; statement contains statements between the controlling expression and the first case label, which will never be executed. For example:</source>
          <target state="translated">Advertir cada vez que una instrucci&amp;oacute;n de &lt;code&gt;switch&lt;/code&gt; contiene instrucciones entre la expresi&amp;oacute;n de control y la primera etiqueta de caso, que nunca se ejecutar&amp;aacute;. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="3eb686177c30ed2e6e5f5f2664f95e4bb53041fa" translate="yes" xml:space="preserve">
          <source>Warn whenever a &lt;code&gt;switch&lt;/code&gt; statement does not have a &lt;code&gt;default&lt;/code&gt; case.</source>
          <target state="translated">Advertir siempre que una sentencia de &lt;code&gt;switch&lt;/code&gt; no tenga un caso &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ee15f4deaad963ee59e6e25cbd36a97c1a0b6f8" translate="yes" xml:space="preserve">
          <source>Warn whenever a &lt;code&gt;switch&lt;/code&gt; statement has an index of boolean type and the case values are outside the range of a boolean type. It is possible to suppress this warning by casting the controlling expression to a type other than &lt;code&gt;bool&lt;/code&gt;. For example:</source>
          <target state="translated">Advertir cada vez que una sentencia &lt;code&gt;switch&lt;/code&gt; tiene un &amp;iacute;ndice de tipo booleano y los valores de caso est&amp;aacute;n fuera del rango de un tipo booleano. Es posible suprimir esta advertencia convirtiendo la expresi&amp;oacute;n de control a un tipo que no sea &lt;code&gt;bool&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d226ed0209ee1c2fb6432b4c47bf17b27b050c76" translate="yes" xml:space="preserve">
          <source>Warn whenever a &lt;code&gt;switch&lt;/code&gt; statement has an index of enumerated type and lacks a &lt;code&gt;case&lt;/code&gt; for one or more of the named codes of that enumeration. (The presence of a &lt;code&gt;default&lt;/code&gt; label prevents this warning.) &lt;code&gt;case&lt;/code&gt; labels outside the enumeration range also provoke warnings when this option is used (even if there is a &lt;code&gt;default&lt;/code&gt; label). This warning is enabled by</source>
          <target state="translated">Advertir cada vez que una instrucci&amp;oacute;n de &lt;code&gt;switch&lt;/code&gt; tiene un &amp;iacute;ndice de tipo enumerado y carece de un &lt;code&gt;case&lt;/code&gt; para uno o m&amp;aacute;s de los c&amp;oacute;digos nombrados de esa enumeraci&amp;oacute;n. (La presencia de una etiqueta &lt;code&gt;default&lt;/code&gt; evita esta advertencia). Las etiquetas de &lt;code&gt;case&lt;/code&gt; fuera del rango de enumeraci&amp;oacute;n tambi&amp;eacute;n provocan advertencias cuando se utiliza esta opci&amp;oacute;n (incluso si hay una etiqueta &lt;code&gt;default&lt;/code&gt; ). Esta advertencia est&amp;aacute; habilitada por</target>
        </trans-unit>
        <trans-unit id="de11d7b668ccdb23ca7bd8a246e58548a37f3260" translate="yes" xml:space="preserve">
          <source>Warn whenever a &lt;code&gt;switch&lt;/code&gt; statement has an index of enumerated type and lacks a &lt;code&gt;case&lt;/code&gt; for one or more of the named codes of that enumeration. &lt;code&gt;case&lt;/code&gt; labels outside the enumeration range also provoke warnings when this option is used. The only difference between</source>
          <target state="translated">Advertir cada vez que una instrucci&amp;oacute;n de &lt;code&gt;switch&lt;/code&gt; tiene un &amp;iacute;ndice de tipo enumerado y carece de un &lt;code&gt;case&lt;/code&gt; para uno o m&amp;aacute;s de los c&amp;oacute;digos nombrados de esa enumeraci&amp;oacute;n. &lt;code&gt;case&lt;/code&gt; etiquetas de caso fuera del rango de enumeraci&amp;oacute;n tambi&amp;eacute;n provocan advertencias cuando se utiliza esta opci&amp;oacute;n. La &amp;uacute;nica diferencia entre</target>
        </trans-unit>
        <trans-unit id="2d59fb66fde78bda0a4dd35cce84a5db357b0d28" translate="yes" xml:space="preserve">
          <source>Warn whenever a comment-start sequence &amp;lsquo;</source>
          <target state="translated">Advertir cada vez que una secuencia de inicio de comentario '</target>
        </trans-unit>
        <trans-unit id="017d9dfe987bf5077b04f6ad0db50c54e128c51c" translate="yes" xml:space="preserve">
          <source>Warn whenever a constant static variable is unused aside from its declaration.</source>
          <target state="translated">Avisar cuando una variable estática constante no sea utilizada aparte de su declaración.</target>
        </trans-unit>
        <trans-unit id="44c2f3d6fa32cff8b5706f1e4a38180d5b65ee57" translate="yes" xml:space="preserve">
          <source>Warn whenever a function is defined with a return type that defaults to &lt;code&gt;int&lt;/code&gt;. Also warn about any &lt;code&gt;return&lt;/code&gt; statement with no return value in a function whose return type is not &lt;code&gt;void&lt;/code&gt; (falling off the end of the function body is considered returning without a value).</source>
          <target state="translated">Advertir cada vez que se define una funci&amp;oacute;n con un tipo de retorno cuyo valor predeterminado es &lt;code&gt;int&lt;/code&gt; . Tambi&amp;eacute;n advierte sobre cualquier declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; sin valor de retorno en una funci&amp;oacute;n cuyo tipo de retorno no es &lt;code&gt;void&lt;/code&gt; (caer al final del cuerpo de la funci&amp;oacute;n se considera que regresa sin un valor).</target>
        </trans-unit>
        <trans-unit id="89fb51e22730b538a06b8e80540c16d1c3734cc8" translate="yes" xml:space="preserve">
          <source>Warn whenever a function parameter is assigned to, but otherwise unused (aside from its declaration).</source>
          <target state="translated">Avisar siempre que se asigne un parámetro de la función,pero que por lo demás no se utilice (aparte de su declaración).</target>
        </trans-unit>
        <trans-unit id="7522f02e51d59309d9911182c3c068a365219bc7" translate="yes" xml:space="preserve">
          <source>Warn whenever a function parameter is unused aside from its declaration.</source>
          <target state="translated">Avisa cuando un parámetro de la función no se utiliza aparte de su declaración.</target>
        </trans-unit>
        <trans-unit id="c0a7eb9ab9f17ff83adfaf6aff2a67a4af1e6664" translate="yes" xml:space="preserve">
          <source>Warn whenever a label is declared but not used. This warning is enabled by</source>
          <target state="translated">Avisar cuando se declare una etiqueta pero no se use.Esta advertencia está habilitada por</target>
        </trans-unit>
        <trans-unit id="2d58d8f5ceb022d5ba0d30591a67aed1db06f84d" translate="yes" xml:space="preserve">
          <source>Warn whenever a local or static variable is unused aside from its declaration. This option implies</source>
          <target state="translated">Avisar cuando una variable local o estática no se utilice aparte de su declaración.Esta opción implica</target>
        </trans-unit>
        <trans-unit id="6e4150091f2d91d35b21758f7af8935b067c74b6" translate="yes" xml:space="preserve">
          <source>Warn whenever a local variable is assigned to, but otherwise unused (aside from its declaration). This warning is enabled by</source>
          <target state="translated">Avisar siempre que se asigne una variable local,pero que no se utilice (aparte de su declaración).Este aviso se activa mediante</target>
        </trans-unit>
        <trans-unit id="79ce592a35665d53c155cc3462735224db9a9571" translate="yes" xml:space="preserve">
          <source>Warn whenever a local variable or type declaration shadows another variable, parameter, type, class member (in C++), or instance variable (in Objective-C) or whenever a built-in function is shadowed. Note that in C++, the compiler warns if a local variable shadows an explicit typedef, but not if it shadows a struct/class/enum. Same as</source>
          <target state="translated">Avisar cuando una variable local o declaración de tipo ensombrezca otra variable,parámetro,tipo,miembro de clase (en C++),o variable de instancia (en Objective-C)o cuando se ensombrezca una función incorporada.Observe que en C++,el compilador advierte si una variable local sombrea un typedef explícito,pero no si sombrea una struct/class/enum.Lo mismo que</target>
        </trans-unit>
        <trans-unit id="05ffb9a97b76e12ea54aaaeb8badea77adb678ae" translate="yes" xml:space="preserve">
          <source>Warn whenever a pointer is cast so as to remove a type qualifier from the target type. For example, warn if a &lt;code&gt;const char *&lt;/code&gt; is cast to an ordinary &lt;code&gt;char *&lt;/code&gt;.</source>
          <target state="translated">Advertir cada vez que se lanza un puntero para eliminar un calificador de tipo del tipo de destino. Por ejemplo, advierta si un &lt;code&gt;const char *&lt;/code&gt; se convierte en un &lt;code&gt;char *&lt;/code&gt; com&amp;uacute;n * .</target>
        </trans-unit>
        <trans-unit id="9c63ef9e66f9b18bee95bf1723987dfd5d11a58f" translate="yes" xml:space="preserve">
          <source>Warn whenever a pointer is cast such that the required alignment of the target is increased. For example, warn if a &lt;code&gt;char *&lt;/code&gt; is cast to an &lt;code&gt;int *&lt;/code&gt; on machines where integers can only be accessed at two- or four-byte boundaries.</source>
          <target state="translated">Advertir cada vez que se lanza un puntero de modo que se aumente la alineaci&amp;oacute;n requerida del objetivo. Por ejemplo, advierta si un &lt;code&gt;char *&lt;/code&gt; se convierte en un &lt;code&gt;int *&lt;/code&gt; en m&amp;aacute;quinas donde solo se puede acceder a enteros en l&amp;iacute;mites de dos o cuatro bytes.</target>
        </trans-unit>
        <trans-unit id="ef7fc95a5c54b16b21f690678e6321f329b8c724" translate="yes" xml:space="preserve">
          <source>Warn whenever a pointer is cast such that the required alignment of the target is increased. For example, warn if a &lt;code&gt;char *&lt;/code&gt; is cast to an &lt;code&gt;int *&lt;/code&gt; regardless of the target machine.</source>
          <target state="translated">Advertir cada vez que se lanza un puntero de modo que se aumente la alineaci&amp;oacute;n requerida del objetivo. Por ejemplo, advierta si un &lt;code&gt;char *&lt;/code&gt; se convierte en un &lt;code&gt;int *&lt;/code&gt; independientemente de la m&amp;aacute;quina de destino.</target>
        </trans-unit>
        <trans-unit id="f17199fabf0d6edb5e8d9320d9584ee47f24d757" translate="yes" xml:space="preserve">
          <source>Warn whenever a statement computes a result that is explicitly not used. To suppress this warning cast the unused expression to &lt;code&gt;void&lt;/code&gt;. This includes an expression-statement or the left-hand side of a comma expression that contains no side effects. For example, an expression such as &lt;code&gt;x[i,j]&lt;/code&gt; causes a warning, while &lt;code&gt;x[(void)i,j]&lt;/code&gt; does not.</source>
          <target state="translated">Advertir cada vez que una declaraci&amp;oacute;n calcula un resultado que no se utiliza expl&amp;iacute;citamente. Para suprimir esta advertencia, arroje la expresi&amp;oacute;n no utilizada al &lt;code&gt;void&lt;/code&gt; . Esto incluye una expresi&amp;oacute;n-declaraci&amp;oacute;n o el lado izquierdo de una expresi&amp;oacute;n de coma que no contiene efectos secundarios. Por ejemplo, una expresi&amp;oacute;n como &lt;code&gt;x[i,j]&lt;/code&gt; provoca una advertencia, mientras que &lt;code&gt;x[(void)i,j]&lt;/code&gt; no.</target>
        </trans-unit>
        <trans-unit id="e9ed26895683fb69327818c06ae2df9969d8a9f1" translate="yes" xml:space="preserve">
          <source>Warn whenever a static function is declared but not defined or a non-inline static function is unused. This warning is enabled by</source>
          <target state="translated">Avisar cuando se declare una función estática pero no se defina o una función estática no en línea no se utilice.Esta advertencia se activa mediante</target>
        </trans-unit>
        <trans-unit id="682ef1b46b2728b71e94a89b2010ca06ceb12456" translate="yes" xml:space="preserve">
          <source>Warn whenever an Objective-C assignment is being intercepted by the garbage collector.</source>
          <target state="translated">Avise cuando una misión del Objetivo-C sea interceptada por el recolector de basura.</target>
        </trans-unit>
        <trans-unit id="5f84fae543b9699e7c995142a54b65f353ecae8d" translate="yes" xml:space="preserve">
          <source>Warn whenever an object is defined whose size exceeds &lt;var&gt;byte-size&lt;/var&gt;.</source>
          <target state="translated">Advertir cada vez que se define un objeto cuyo tama&amp;ntilde;o excede el tama&amp;ntilde;o de &lt;var&gt;byte-size&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ea0ef30fd9bda293d78af05a20b81fc75c62d811" translate="yes" xml:space="preserve">
          <source>Warning Options</source>
          <target state="translated">Opciones de advertencia</target>
        </trans-unit>
        <trans-unit id="986ddebcadb3fa23d23a5b826b014fe8f130debb" translate="yes" xml:space="preserve">
          <source>Warning about assigning a signed value to an unsigned variable.</source>
          <target state="translated">Advertencia sobre la asignación de un valor firmado a una variable no firmada.</target>
        </trans-unit>
        <trans-unit id="e9e66e7d69e59ab3855b10526f1e61fff27e7187" translate="yes" xml:space="preserve">
          <source>Warning about using an expression whose type is signed as a shift count.</source>
          <target state="translated">Advertencia sobre el uso de una expresión cuyo tipo está firmado como un recuento de turnos.</target>
        </trans-unit>
        <trans-unit id="418dee8a9f5c36e0b14dc254214604e6561b0bc6" translate="yes" xml:space="preserve">
          <source>Warning when a non-void function value is ignored.</source>
          <target state="translated">Advertencia cuando se ignora un valor de función no evitable.</target>
        </trans-unit>
        <trans-unit id="6016747760c907aec70fe12b355cb7c681c5c0db" translate="yes" xml:space="preserve">
          <source>Warnings are diagnostic messages that report constructions that are not inherently erroneous but that are risky or suggest there may have been an error.</source>
          <target state="translated">Las advertencias son mensajes de diagnóstico que informan sobre construcciones que no son intrínsecamente erróneas pero que son arriesgadas o sugieren que puede haber habido un error.</target>
        </trans-unit>
        <trans-unit id="0dd982bec66fde4c74400108fddfd5cb384244af" translate="yes" xml:space="preserve">
          <source>Warnings may indicate danger points where you should check to make sure that your program really does what you intend; or the use of obsolete features; or the use of nonstandard features of GNU C or C++. Many warnings are issued only if you ask for them, with one of the</source>
          <target state="translated">Las advertencias pueden indicar puntos de peligro en los que debe comprobar para asegurarse de que su programa realmente hace lo que pretende;o el uso de características obsoletas;o el uso de características no estándar de GNU C o C++.Muchas advertencias se emiten sólo si usted las pide,con una de las</target>
        </trans-unit>
        <trans-unit id="774110e2ee23eade4be0249d185f9d3f531f461a" translate="yes" xml:space="preserve">
          <source>Weak pointers are supported through a new type character specifier represented by the &amp;lsquo;</source>
          <target state="translated">Los punteros d&amp;eacute;biles se admiten mediante un nuevo especificador de caracteres de tipo representado por '</target>
        </trans-unit>
        <trans-unit id="833f5330898dc442fd023004015464621900910e" translate="yes" xml:space="preserve">
          <source>What constitutes an access to a volatile object.</source>
          <target state="translated">Lo que constituye un acceso a un objeto volátil.</target>
        </trans-unit>
        <trans-unit id="29d1640b5550a77154368675da8078c8ec35026f" translate="yes" xml:space="preserve">
          <source>What constitutes an access to an object that has volatile-qualified type (C90 6.5.3, C99 and C11 6.7.3).</source>
          <target state="translated">Lo que constituye un acceso a un objeto de tipo volátil (C90 6.5.3,C99 y C11 6.7.3).</target>
        </trans-unit>
        <trans-unit id="769bb19e615b7f8e2809e5882e2d05a18f57a531" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="translated">When</target>
        </trans-unit>
        <trans-unit id="73ab9ffb5b7365deaf1034842a4b9d0c5073a1f3" translate="yes" xml:space="preserve">
          <source>When G++ and another C++ compiler conform to the same C++ ABI, but the implementations of the Standard C++ Library that they normally use do not follow the same ABI for the Standard C++ Library, object files built with those compilers can be used in the same program only if they use the same C++ library. This requires specifying the location of the C++ library header files when invoking the compiler whose usual library is not being used. The location of GCC&amp;rsquo;s C++ header files depends on how the GCC build was configured, but can be seen by using the G++</source>
          <target state="translated">Cuando G ++ y otro compilador de C ++ se ajustan a la misma ABI de C ++, pero las implementaciones de la biblioteca est&amp;aacute;ndar de C ++ que normalmente usan no siguen la misma ABI para la biblioteca est&amp;aacute;ndar de C ++, los archivos de objetos creados con esos compiladores se pueden usar en el mismo programa solo si usan la misma biblioteca C ++. Esto requiere especificar la ubicaci&amp;oacute;n de los archivos de encabezado de la biblioteca C ++ cuando se invoca el compilador cuya biblioteca habitual no se est&amp;aacute; utilizando. La ubicaci&amp;oacute;n de los archivos de encabezado C ++ de GCC depende de c&amp;oacute;mo se configur&amp;oacute; la compilaci&amp;oacute;n de GCC, pero se puede ver usando G ++</target>
        </trans-unit>
        <trans-unit id="25b318e1653c6b6dda339c34d9872ce5b96093ce" translate="yes" xml:space="preserve">
          <source>When IPA-CP determines that a cloning candidate would make the index of an array access known, it adds a bonus of</source>
          <target state="translated">Cuando la IPA-CP determina que un candidato a la clonación daría a conocer el índice de acceso a una matriz,añade una bonificación de</target>
        </trans-unit>
        <trans-unit id="3fbfba2a71ffaa54417e4d873e33ec3bbc19a7e4" translate="yes" xml:space="preserve">
          <source>When IPA-CP determines that a cloning candidate would make the number of iterations of a loop known, it adds a bonus of</source>
          <target state="translated">Cuando la IPA-CP determina que un candidato a la clonación daría a conocer el número de iteraciones de un bucle,añade una bonificación de</target>
        </trans-unit>
        <trans-unit id="0b074b049fd7c7f48c6da34e1272635cac52856d" translate="yes" xml:space="preserve">
          <source>When a base class is virtual, only one subobject of the base class belongs to each full object. Also, the constructors and destructors are invoked only once, and called from the most-derived class. However, such objects behave unspecified when being assigned. For example:</source>
          <target state="translated">Cuando una clase base es virtual,sólo un subobjeto de la clase base pertenece a cada objeto completo.Además,los constructores y destructores son invocados sólo una vez,y llamados desde la clase más derivada.Sin embargo,tales objetos se comportan de manera no especificada al ser asignados.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="67be4830f6cdd00004022ad6db1aaae5471c2589" translate="yes" xml:space="preserve">
          <source>When a class has static data members, it is not enough to &lt;em&gt;declare&lt;/em&gt; the static member; you must also &lt;em&gt;define&lt;/em&gt; it. For example:</source>
          <target state="translated">Cuando una clase tiene miembros de datos est&amp;aacute;ticos, no es suficiente &lt;em&gt;declarar&lt;/em&gt; el miembro est&amp;aacute;tico; tambi&amp;eacute;n debes &lt;em&gt;definirlo&lt;/em&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d927dabaa85a2fec9fca96ddc5e395f531b27e67" translate="yes" xml:space="preserve">
          <source>When a division strategy has not been specified the default strategy is selected based on the current target. For SH2A the default strategy is to use the &lt;code&gt;divs&lt;/code&gt; and &lt;code&gt;divu&lt;/code&gt; instructions instead of library function calls.</source>
          <target state="translated">Cuando no se ha especificado una estrategia de divisi&amp;oacute;n, la estrategia predeterminada se selecciona en funci&amp;oacute;n del objetivo actual. Para SH2A, la estrategia predeterminada es usar las instrucciones &lt;code&gt;divs&lt;/code&gt; y &lt;code&gt;divu&lt;/code&gt; en lugar de las llamadas a funciones de biblioteca.</target>
        </trans-unit>
        <trans-unit id="0a75adb840378c14dc9a655e4aba002e527f73a2" translate="yes" xml:space="preserve">
          <source>When a file is compiled with</source>
          <target state="translated">Cuando un archivo es compilado con</target>
        </trans-unit>
        <trans-unit id="0cd90cdfd69b208961a20a866e993339b4b5f840" translate="yes" xml:space="preserve">
          <source>When a function is both inline and &lt;code&gt;static&lt;/code&gt;, if all calls to the function are integrated into the caller, and the function&amp;rsquo;s address is never used, then the function&amp;rsquo;s own assembler code is never referenced. In this case, GCC does not actually output assembler code for the function, unless you specify the option</source>
          <target state="translated">Cuando una funci&amp;oacute;n es tanto en l&amp;iacute;nea como &lt;code&gt;static&lt;/code&gt; , si todas las llamadas a la funci&amp;oacute;n est&amp;aacute;n integradas en el llamador, y la direcci&amp;oacute;n de la funci&amp;oacute;n nunca se usa, nunca se hace referencia al c&amp;oacute;digo ensamblador de la funci&amp;oacute;n. En este caso, GCC no genera realmente c&amp;oacute;digo ensamblador para la funci&amp;oacute;n, a menos que especifique la opci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="678a6d73dd419ef65f8fe5fe05b5c39fad57f23c" translate="yes" xml:space="preserve">
          <source>When a list constructor stores the &lt;code&gt;begin&lt;/code&gt; pointer from the &lt;code&gt;initializer_list&lt;/code&gt; argument, this doesn&amp;rsquo;t extend the lifetime of the array, so if a class variable is constructed from a temporary &lt;code&gt;initializer_list&lt;/code&gt;, the pointer is left dangling by the end of the variable declaration statement.</source>
          <target state="translated">Cuando un constructor de lista almacena el puntero de &lt;code&gt;begin&lt;/code&gt; desde el argumento &lt;code&gt;initializer_list&lt;/code&gt; , esto no extiende la vida &amp;uacute;til de la matriz, por lo que si una variable de clase se construye a partir de una &lt;code&gt;initializer_list&lt;/code&gt; temporal , el puntero se deja colgando al final de la declaraci&amp;oacute;n de declaraci&amp;oacute;n de variable.</target>
        </trans-unit>
        <trans-unit id="00f542136163060bf7630e6166417f9110c29edb" translate="yes" xml:space="preserve">
          <source>When a lock acquire fails, it is required for good performance to abort the transaction quickly. This can be done with a &lt;code&gt;_mm_pause&lt;/code&gt;.</source>
          <target state="translated">Cuando falla la adquisici&amp;oacute;n de un bloqueo, es necesario para un buen rendimiento abortar la transacci&amp;oacute;n r&amp;aacute;pidamente. Esto se puede hacer con una &lt;code&gt;_mm_pause&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f7415b6c4bfc3b8582a73345fc35229f98c2491" translate="yes" xml:space="preserve">
          <source>When a type involving an ABI tag is used as the type of a variable or return type of a function where that tag is not already present in the signature of the function, the tag is automatically applied to the variable or function.</source>
          <target state="translated">Cuando se utiliza un tipo que implica una etiqueta ABI como el tipo de una variable o el tipo de retorno de una función en la que esa etiqueta no está ya presente en la firma de la función,la etiqueta se aplica automáticamente a la variable o a la función.</target>
        </trans-unit>
        <trans-unit id="6dad89b8cb0d35ea0fd46b863a5983c0e559d839" translate="yes" xml:space="preserve">
          <source>When added to an interrupt handler with the M32C port, causes the prologue and epilogue to use bank switching to preserve the registers rather than saving them on the stack.</source>
          <target state="translated">Cuando se añade a un manejador de interrupciones con el puerto M32C,hace que el prólogo y el epílogo utilicen el cambio de banco para preservar los registros en lugar de guardarlos en la pila.</target>
        </trans-unit>
        <trans-unit id="f8717fcf897c9e046dd756abc024e5f7d502ccd8" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;initializer_list&lt;/code&gt; variable is assigned from a brace-enclosed initializer list, the temporary array created for the right side of the assignment only lives until the end of the full-expression, so at the next statement the &lt;code&gt;initializer_list&lt;/code&gt; variable has a dangling pointer.</source>
          <target state="translated">Cuando se asigna una variable &lt;code&gt;initializer_list&lt;/code&gt; desde una lista de inicializadores entre llaves, la matriz temporal creada para el lado derecho de la asignaci&amp;oacute;n solo vive hasta el final de la expresi&amp;oacute;n completa, por lo que en la siguiente declaraci&amp;oacute;n, la variable &lt;code&gt;initializer_list&lt;/code&gt; tiene un puntero colgante.</target>
        </trans-unit>
        <trans-unit id="f82873b6d13dce7be3f4357951354ec118469799" translate="yes" xml:space="preserve">
          <source>When an error message refers to a specialization of a function template, the compiler normally prints the signature of the template followed by the template arguments and any typedefs or typenames in the signature (e.g. &lt;code&gt;void f(T) [with T = int]&lt;/code&gt; rather than &lt;code&gt;void f(int)&lt;/code&gt;) so that it&amp;rsquo;s clear which template is involved. When an error message refers to a specialization of a class template, the compiler omits any template arguments that match the default template arguments for that template. If either of these behaviors make it harder to understand the error message rather than easier, you can use</source>
          <target state="translated">Cuando un mensaje de error se refiere a una especializaci&amp;oacute;n de una plantilla de funci&amp;oacute;n, el compilador normalmente imprime la firma de la plantilla seguida de los argumentos de la plantilla y cualquier typedefs o nombre de tipo en la firma (por ejemplo, &lt;code&gt;void f(T) [with T = int]&lt;/code&gt; lugar de &lt;code&gt;void f(int)&lt;/code&gt; ) para que quede claro qu&amp;eacute; plantilla est&amp;aacute; involucrada. Cuando un mensaje de error se refiere a una especializaci&amp;oacute;n de una plantilla de clase, el compilador omite cualquier argumento de plantilla que coincida con los argumentos de plantilla predeterminados para esa plantilla. Si alguno de estos comportamientos dificulta la comprensi&amp;oacute;n del mensaje de error en lugar de hacerlo m&amp;aacute;s f&amp;aacute;cil, puede utilizar</target>
        </trans-unit>
        <trans-unit id="4a0782c5484322bfadd7fe79666979332dd01a38" translate="yes" xml:space="preserve">
          <source>When an executable is run in a massive parallel environment, it is recommended to save profile to different folders. That can be done with variables in &lt;var&gt;path&lt;/var&gt; that are exported during run-time:</source>
          <target state="translated">Cuando un ejecutable se ejecuta en un entorno paralelo masivo, se recomienda guardar el perfil en diferentes carpetas. Eso se puede hacer con variables en la &lt;var&gt;path&lt;/var&gt; que se exportan durante el tiempo de ejecuci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="d2c4f8c7d6b26eab60b9d9e100920ff031a8aaf4" translate="yes" xml:space="preserve">
          <source>When an inline function is not &lt;code&gt;static&lt;/code&gt;, then the compiler must assume that there may be calls from other source files; since a global symbol can be defined only once in any program, the function must not be defined in the other source files, so the calls therein cannot be integrated. Therefore, a non-&lt;code&gt;static&lt;/code&gt; inline function is always compiled on its own in the usual fashion.</source>
          <target state="translated">Cuando una funci&amp;oacute;n en l&amp;iacute;nea no es &lt;code&gt;static&lt;/code&gt; , el compilador debe asumir que puede haber llamadas desde otros archivos fuente; dado que un s&amp;iacute;mbolo global se puede definir solo una vez en cualquier programa, la funci&amp;oacute;n no debe definirse en los otros archivos fuente, por lo que las llamadas que contiene no se pueden integrar. Por lo tanto, una funci&amp;oacute;n en l&amp;iacute;nea no &lt;code&gt;static&lt;/code&gt; siempre se compila por s&amp;iacute; sola de la forma habitual.</target>
        </trans-unit>
        <trans-unit id="b338539fbe33495121e46c5661e5bc16f008a3e0" translate="yes" xml:space="preserve">
          <source>When an insn has two alternative constraint-patterns.</source>
          <target state="translated">Cuando un insn tiene dos patrones de restricción alternativos.</target>
        </trans-unit>
        <trans-unit id="4cbff59218859bab09c21980b2597e3d4c6294f2" translate="yes" xml:space="preserve">
          <source>When an unrecognized warning option is requested (e.g.,</source>
          <target state="translated">Cuando se solicita una opción de advertencia no reconocida (por ejemplo,</target>
        </trans-unit>
        <trans-unit id="537d39cd77a447e897b80dd75224237bdc4e0719" translate="yes" xml:space="preserve">
          <source>When applicable, enable (disable) the generation of 4-operand &lt;code&gt;madd.s&lt;/code&gt;, &lt;code&gt;madd.d&lt;/code&gt; and related instructions. Enabled by default.</source>
          <target state="translated">Cuando corresponda, habilite (deshabilite) la generaci&amp;oacute;n de &lt;code&gt;madd.s&lt;/code&gt; de 4 operandos , &lt;code&gt;madd.d&lt;/code&gt; e instrucciones relacionadas. Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="4c26cdde33cc06bf31aab1a7bf63c69c29f00704" translate="yes" xml:space="preserve">
          <source>When applicable, enable (disable) the generation of &lt;code&gt;lwxc1&lt;/code&gt;, &lt;code&gt;swxc1&lt;/code&gt;, &lt;code&gt;ldxc1&lt;/code&gt;, &lt;code&gt;sdxc1&lt;/code&gt; instructions. Enabled by default.</source>
          <target state="translated">Cuando corresponda, habilite (deshabilite) la generaci&amp;oacute;n de &lt;code&gt;lwxc1&lt;/code&gt; , &lt;code&gt;swxc1&lt;/code&gt; , &lt;code&gt;ldxc1&lt;/code&gt; , &lt;code&gt;sdxc1&lt;/code&gt; . Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="7184e15e5684528f54729686834cdf00887683be" translate="yes" xml:space="preserve">
          <source>When applied to C++ classes, the attribute marks defined non-inlined member functions and static data members as exports. Static consts initialized in-class are not marked unless they are also defined out-of-class.</source>
          <target state="translated">Cuando se aplican a las clases C++,las marcas de atributo definen las funciones de miembros no alineados y los miembros de datos estáticos como exportaciones.Los miembros estáticos inicializados en clase no se marcan a menos que también se definan fuera de clase.</target>
        </trans-unit>
        <trans-unit id="7d9feaafaf97b8f7fe46d8b6b598964809d89431" translate="yes" xml:space="preserve">
          <source>When applied to C++ classes, the attribute marks non-inlined member functions and static data members as imports. However, the attribute is ignored for virtual methods to allow creation of vtables using thunks.</source>
          <target state="translated">Cuando se aplica a las clases C++,el atributo marca como importadas las funciones de los miembros no alineados y los miembros de datos estáticos.Sin embargo,el atributo se ignora en los métodos virtuales para permitir la creación de vtables usando thunks.</target>
        </trans-unit>
        <trans-unit id="bbf180b63c03eb34a3aba311a968f02d5135ed3e" translate="yes" xml:space="preserve">
          <source>When applied to a member function of a C++ class template, the attribute also means that the function is instantiated if the class itself is instantiated.</source>
          <target state="translated">Cuando se aplica a una función miembro de una plantilla de clase C++,el atributo también significa que la función es instanciada si la clase misma es instanciada.</target>
        </trans-unit>
        <trans-unit id="cabddb6e825602d843a117fb734ca3aff3112d1a" translate="yes" xml:space="preserve">
          <source>When applied to a static data member of a C++ class template, the attribute also means that the member is instantiated if the class itself is instantiated.</source>
          <target state="translated">Cuando se aplica a un miembro de datos estáticos de una plantilla de clase C++,el atributo también significa que el miembro es instanciado si la clase misma es instanciada.</target>
        </trans-unit>
        <trans-unit id="59f0e6f1d8d71dac3701cee27ca42c33aae99e5f" translate="yes" xml:space="preserve">
          <source>When attached to a &lt;code&gt;union&lt;/code&gt; or a &lt;code&gt;struct&lt;/code&gt;, this attribute sets the storage order, aka endianness, of the scalar fields of the type, as well as the array fields whose component is scalar. The supported endiannesses are &lt;code&gt;big-endian&lt;/code&gt; and &lt;code&gt;little-endian&lt;/code&gt;. The attribute has no effects on fields which are themselves a &lt;code&gt;union&lt;/code&gt;, a &lt;code&gt;struct&lt;/code&gt; or an array whose component is a &lt;code&gt;union&lt;/code&gt; or a &lt;code&gt;struct&lt;/code&gt;, and it is possible for these fields to have a different scalar storage order than the enclosing type.</source>
          <target state="translated">Cuando se adjunta a una &lt;code&gt;union&lt;/code&gt; o &lt;code&gt;struct&lt;/code&gt; , este atributo establece el orden de almacenamiento, tambi&amp;eacute;n conocido como endianness, de los campos escalares del tipo, as&amp;iacute; como los campos de matriz cuyo componente es escalar. Los endianos admitidos son &lt;code&gt;big-endian&lt;/code&gt; y &lt;code&gt;little-endian&lt;/code&gt; . El atributo no tiene efectos en los campos que son en s&amp;iacute; mismos una &lt;code&gt;union&lt;/code&gt; , una &lt;code&gt;struct&lt;/code&gt; o una matriz cuyo componente es una &lt;code&gt;union&lt;/code&gt; o una &lt;code&gt;struct&lt;/code&gt; , y es posible que estos campos tengan un orden de almacenamiento escalar diferente al del tipo adjunto.</target>
        </trans-unit>
        <trans-unit id="5370f9b64efe5c0ffe3fe15dfade832ac9be14df" translate="yes" xml:space="preserve">
          <source>When attached to a type (including a &lt;code&gt;union&lt;/code&gt; or a &lt;code&gt;struct&lt;/code&gt;), this attribute means that variables of that type are meant to appear possibly unused. GCC does not produce a warning for any variables of that type, even if the variable appears to do nothing. This is often the case with lock or thread classes, which are usually defined and then not referenced, but contain constructors and destructors that have nontrivial bookkeeping functions.</source>
          <target state="translated">Cuando se adjunta a un tipo (incluida una &lt;code&gt;union&lt;/code&gt; o una &lt;code&gt;struct&lt;/code&gt; ), este atributo significa que las variables de ese tipo deben aparecer posiblemente sin usar. GCC no genera una advertencia para ninguna variable de ese tipo, incluso si la variable parece no hacer nada. Este suele ser el caso de las clases de bloqueo o subproceso, que generalmente se definen y luego no se hace referencia, pero contienen constructores y destructores que tienen funciones de contabilidad no triviales.</target>
        </trans-unit>
        <trans-unit id="607b6b9a753f4dcb8aa6e646687045411231d9db" translate="yes" xml:space="preserve">
          <source>When attached to an &lt;code&gt;enum&lt;/code&gt; definition, the &lt;code&gt;packed&lt;/code&gt; attribute indicates that the smallest integral type should be used. Specifying the</source>
          <target state="translated">Cuando se adjunta a una definici&amp;oacute;n de &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n , el atributo &lt;code&gt;packed&lt;/code&gt; indica que se debe usar el tipo integral m&amp;aacute;s peque&amp;ntilde;o. Especificando el</target>
        </trans-unit>
        <trans-unit id="3212c36750452527c536dd1eddfa9228aa24bc41" translate="yes" xml:space="preserve">
          <source>When branch is predicted to be taken with probability lower than this threshold (in percent), then it is considered well predictable.</source>
          <target state="translated">Cuando se predice que la rama se tomará con una probabilidad inferior a este umbral (en porcentaje),entonces se considera bien previsible.</target>
        </trans-unit>
        <trans-unit id="f92818ac1f6c1cf9820bd7ad2460f0b770895e75" translate="yes" xml:space="preserve">
          <source>When branch probabilities are given, include those of unconditional branches. Unconditional branches are normally not interesting.</source>
          <target state="translated">Cuando se dan las probabilidades de las ramas,se incluyen las de las ramas incondicionales.Las ramas incondicionales normalmente no son interesantes.</target>
        </trans-unit>
        <trans-unit id="0ae42b215512052c2cadc23355c16f5c5dd443cf" translate="yes" xml:space="preserve">
          <source>When calling routines that are not aware of the reservation, be cautious if those routines call back into code which uses them. As an example, if you call the system library version of &lt;code&gt;qsort&lt;/code&gt;, it may clobber your registers during execution, but (if you have selected appropriate registers) it will restore them before returning. However it will &lt;em&gt;not&lt;/em&gt; restore them before calling &lt;code&gt;qsort&lt;/code&gt;&amp;rsquo;s comparison function. As a result, global values will not reliably be available to the comparison function unless the &lt;code&gt;qsort&lt;/code&gt; function itself is rebuilt.</source>
          <target state="translated">Cuando llame a rutinas que no son conscientes de la reserva, tenga cuidado si esas rutinas vuelven a llamar al c&amp;oacute;digo que las usa. Como ejemplo, si llama a la versi&amp;oacute;n de la biblioteca del sistema de &lt;code&gt;qsort&lt;/code&gt; , es posible que golpee sus registros durante la ejecuci&amp;oacute;n, pero (si ha seleccionado los registros apropiados) los restaurar&amp;aacute; antes de regresar. Sin embargo, &lt;em&gt;no los&lt;/em&gt; restaurar&amp;aacute; antes de llamar a la funci&amp;oacute;n de comparaci&amp;oacute;n de &lt;code&gt;qsort&lt;/code&gt; . Como resultado, los valores globales no estar&amp;aacute;n disponibles de manera confiable para la funci&amp;oacute;n de comparaci&amp;oacute;n a menos que se reconstruya la funci&amp;oacute;n &lt;code&gt;qsort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce64a23abaaddcfa5831e43098fffe47be4e539" translate="yes" xml:space="preserve">
          <source>When casting from pointer to integer and back again, the resulting pointer must reference the same object as the original pointer, otherwise the behavior is undefined. That is, one may not use integer arithmetic to avoid the undefined behavior of pointer arithmetic as proscribed in C99 and C11 6.5.6/8.</source>
          <target state="translated">Al lanzar de puntero a entero y de nuevo,el puntero resultante debe hacer referencia al mismo objeto que el puntero original,de lo contrario el comportamiento es indefinido.Es decir,no se puede utilizar la aritmética de números enteros para evitar el comportamiento indefinido de la aritmética de punteros como se prescribe en C99 y C11 6.5.6/8.</target>
        </trans-unit>
        <trans-unit id="4a6770a95cb182eb94130a66a137214e2a89e539" translate="yes" xml:space="preserve">
          <source>When code compiled with</source>
          <target state="translated">Cuando el código compilado con</target>
        </trans-unit>
        <trans-unit id="2694a5fd19642dc29f67abfd4afa306ec8d78457" translate="yes" xml:space="preserve">
          <source>When compiling C++, warn about the deprecated conversion from string literals to &lt;code&gt;char *&lt;/code&gt;. This warning is enabled by default for C++ programs.</source>
          <target state="translated">Al compilar C ++, advierta sobre la conversi&amp;oacute;n obsoleta de literales de cadena a &lt;code&gt;char *&lt;/code&gt; . Esta advertencia est&amp;aacute; habilitada de forma predeterminada para los programas C ++.</target>
        </trans-unit>
        <trans-unit id="b58e8f8f470141f0b7d65fa2b304a55713649c15" translate="yes" xml:space="preserve">
          <source>When compiling C, give string constants the type &lt;code&gt;const
char[&lt;var&gt;length&lt;/var&gt;]&lt;/code&gt; so that copying the address of one into a non-&lt;code&gt;const&lt;/code&gt;&lt;code&gt;char *&lt;/code&gt; pointer produces a warning. These warnings help you find at compile time code that can try to write into a string constant, but only if you have been very careful about using &lt;code&gt;const&lt;/code&gt; in declarations and prototypes. Otherwise, it is just a nuisance. This is why we did not make</source>
          <target state="translated">Al compilar C, asigne a las constantes de cadena el tipo &lt;code&gt;const char[&lt;var&gt;length&lt;/var&gt;]&lt;/code&gt; para que copiar la direcci&amp;oacute;n de uno en un puntero &lt;code&gt;char *&lt;/code&gt; no &lt;code&gt;const&lt;/code&gt; ante produzca una advertencia. Estas advertencias le ayudan a encontrar en tiempo de compilaci&amp;oacute;n c&amp;oacute;digo que puede intentar escribir en una constante de cadena, pero solo si ha tenido mucho cuidado con el uso de &lt;code&gt;const&lt;/code&gt; en declaraciones y prototipos. De lo contrario, es solo una molestia. Por eso no hicimos</target>
        </trans-unit>
        <trans-unit id="cd87062968fd1ca6c15b5a9b85fba86d8a5ccfc2" translate="yes" xml:space="preserve">
          <source>When compiling code for single processor systems, it is generally safe to use &lt;code&gt;synci&lt;/code&gt;. However, on many multi-core (SMP) systems, it does not invalidate the instruction caches on all cores and may lead to undefined behavior.</source>
          <target state="translated">Al compilar c&amp;oacute;digo para sistemas de un solo procesador, generalmente es seguro usar &lt;code&gt;synci&lt;/code&gt; . Sin embargo, en muchos sistemas de m&amp;uacute;ltiples n&amp;uacute;cleos (SMP), no invalida los cach&amp;eacute;s de instrucciones en todos los n&amp;uacute;cleos y puede dar lugar a un comportamiento indefinido.</target>
        </trans-unit>
        <trans-unit id="7c10c0020a810534faa4083bee532dbff326c982" translate="yes" xml:space="preserve">
          <source>When compiling files containing mixed MIPS16 and non-MIPS16 code, the preprocessor symbol &lt;code&gt;__mips16&lt;/code&gt; reflects the setting on the command line, not that within individual functions. Mixed MIPS16 and non-MIPS16 code may interact badly with some GCC extensions such as &lt;code&gt;__builtin_apply&lt;/code&gt; (see &lt;a href=&quot;constructing-calls#Constructing-Calls&quot;&gt;Constructing Calls&lt;/a&gt;).</source>
          <target state="translated">Al compilar archivos que contienen c&amp;oacute;digo MIPS16 y no MIPS16 mixto, el s&amp;iacute;mbolo del preprocesador &lt;code&gt;__mips16&lt;/code&gt; refleja la configuraci&amp;oacute;n en la l&amp;iacute;nea de comando, no dentro de las funciones individuales. El c&amp;oacute;digo MIPS16 y no MIPS16 mixto puede interactuar mal con algunas extensiones de GCC como &lt;code&gt;__builtin_apply&lt;/code&gt; (ver &lt;a href=&quot;constructing-calls#Constructing-Calls&quot;&gt;Construcci&amp;oacute;n de llamadas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="60deff215e04b72131ce496d836442fb3376a9ed" translate="yes" xml:space="preserve">
          <source>When compiling files containing mixed microMIPS and non-microMIPS code, the preprocessor symbol &lt;code&gt;__mips_micromips&lt;/code&gt; reflects the setting on the command line, not that within individual functions. Mixed microMIPS and non-microMIPS code may interact badly with some GCC extensions such as &lt;code&gt;__builtin_apply&lt;/code&gt; (see &lt;a href=&quot;constructing-calls#Constructing-Calls&quot;&gt;Constructing Calls&lt;/a&gt;).</source>
          <target state="translated">Cuando se compilan archivos que contienen una mezcla de c&amp;oacute;digo microMIPS y no microMIPS, el s&amp;iacute;mbolo del preprocesador &lt;code&gt;__mips_micromips&lt;/code&gt; refleja la configuraci&amp;oacute;n en la l&amp;iacute;nea de comando, no dentro de las funciones individuales. El c&amp;oacute;digo mixto microMIPS y no microMIPS puede interactuar mal con algunas extensiones de GCC como &lt;code&gt;__builtin_apply&lt;/code&gt; (ver &lt;a href=&quot;constructing-calls#Constructing-Calls&quot;&gt;Construcci&amp;oacute;n de llamadas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b21353af5c286cba09d175d058607a98bab9646" translate="yes" xml:space="preserve">
          <source>When compiling files residing in directory</source>
          <target state="translated">Al compilar los archivos que residen en el directorio</target>
        </trans-unit>
        <trans-unit id="fb1c662fe80e2a5daa84889e9b20929141a1f39e" translate="yes" xml:space="preserve">
          <source>When compiling for Nios II, the following options are allowed:</source>
          <target state="translated">Cuando se compila para Nios II,se permiten las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="47a745ce02eda6e5b8af0283813b8d27ac893e5a" translate="yes" xml:space="preserve">
          <source>When compiling for the NeXT runtime, the compiler ordinarily replaces calls to &lt;code&gt;objc_getClass(&quot;&amp;hellip;&quot;)&lt;/code&gt; (when the name of the class is known at compile time) with static class references that get initialized at load time, which improves run-time performance. Specifying the</source>
          <target state="translated">Al compilar para el tiempo de ejecuci&amp;oacute;n de NeXT, el compilador normalmente reemplaza las llamadas a &lt;code&gt;objc_getClass(&quot;&amp;hellip;&quot;)&lt;/code&gt; (cuando el nombre de la clase se conoce en el tiempo de compilaci&amp;oacute;n) con referencias de clases est&amp;aacute;ticas que se inicializan en el tiempo de carga, lo que mejora el rendimiento en tiempo de ejecuci&amp;oacute;n. Especificando el</target>
        </trans-unit>
        <trans-unit id="7acd9f9e9a72745fc09c352c58646de2d43a5f5e" translate="yes" xml:space="preserve">
          <source>When compiling functions that return &lt;code id=&quot;index-float-as-function-value-type&quot;&gt;float&lt;/code&gt;, PCC converts it to a double. GCC actually returns a &lt;code&gt;float&lt;/code&gt;. If you are concerned with PCC compatibility, you should declare your functions to return &lt;code&gt;double&lt;/code&gt;; you might as well say what you mean.</source>
          <target state="translated">Al compilar funciones que devuelven &lt;code id=&quot;index-float-as-function-value-type&quot;&gt;float&lt;/code&gt; , PCC lo convierte en un doble. GCC en realidad devuelve un &lt;code&gt;float&lt;/code&gt; . Si le preocupa la compatibilidad con PCC, debe declarar que sus funciones devuelvan &lt;code&gt;double&lt;/code&gt; ; bien podr&amp;iacute;a decir lo que quiere decir.</target>
        </trans-unit>
        <trans-unit id="d5db0043541449725fbfb6c49474d3dea04ea8f6" translate="yes" xml:space="preserve">
          <source>When compiling functions that return structures or unions, GCC output code normally uses a method different from that used on most versions of Unix. As a result, code compiled with GCC cannot call a structure-returning function compiled with PCC, and vice versa.</source>
          <target state="translated">Al compilar funciones que devuelven estructuras o uniones,el código de salida de GCC normalmente utiliza un método diferente al utilizado en la mayoría de las versiones de Unix.Como resultado,el código compilado con GCC no puede llamar a una función de retorno de estructura compilada con PCC,y viceversa.</target>
        </trans-unit>
        <trans-unit id="42802196182be1a26f30e794627d93f753ad7250" translate="yes" xml:space="preserve">
          <source>When compiling using the AAPCS ABI (or a variant of it) then valid values for the argument are &lt;code&gt;&quot;aapcs&quot;&lt;/code&gt; and &lt;code&gt;&quot;aapcs-vfp&quot;&lt;/code&gt;. In order to use a variant other than &lt;code&gt;&quot;aapcs&quot;&lt;/code&gt; then the compiler must be permitted to use the appropriate co-processor registers (i.e., the VFP registers must be available in order to use &lt;code&gt;&quot;aapcs-vfp&quot;&lt;/code&gt;). For example,</source>
          <target state="translated">Cuando se compila utilizando la ABI de AAPCS (o una variante de ella), los valores v&amp;aacute;lidos para el argumento son &lt;code&gt;&quot;aapcs&quot;&lt;/code&gt; y &lt;code&gt;&quot;aapcs-vfp&quot;&lt;/code&gt; . Para utilizar una variante distinta de &lt;code&gt;&quot;aapcs&quot;&lt;/code&gt; , entonces el compilador debe poder utilizar los registros de coprocesador adecuados (es decir, los registros VFP deben estar disponibles para utilizar &lt;code&gt;&quot;aapcs-vfp&quot;&lt;/code&gt; ). Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="6f269c2c80bc0b6cd00bdccd1a4ad395d3f1e317" translate="yes" xml:space="preserve">
          <source>When compiling, this option enables</source>
          <target state="translated">Al compilar,esta opción permite</target>
        </trans-unit>
        <trans-unit id="315f128e4ce30c782f28bfb565507bc8d99b6552" translate="yes" xml:space="preserve">
          <source>When doing debugging dumps (see</source>
          <target state="translated">Al hacer la depuración de vertederos (ver</target>
        </trans-unit>
        <trans-unit id="dce8f6e7dddb2ada38853381a56083f98e91e173" translate="yes" xml:space="preserve">
          <source>When doing debugging dumps, suppress address output. This makes it more feasible to use diff on debugging dumps for compiler invocations with different compiler binaries and/or different text / bss / data / heap / stack / dso start locations.</source>
          <target state="translated">Al hacer la depuración de volcados,suprima la salida de la dirección.Esto hace más factible el uso de diff en los volcados de depuración para las invocaciones del compilador con diferentes binarios del compilador y/o diferentes ubicaciones de inicio de text/bss/data/heap/stack/dso.</target>
        </trans-unit>
        <trans-unit id="5cb94325a71b749cb8e5d8b4041d1d7a131d0f11" translate="yes" xml:space="preserve">
          <source>When doing debugging dumps, suppress instruction numbers and address output. This makes it more feasible to use diff on debugging dumps for compiler invocations with different options, in particular with and without</source>
          <target state="translated">Al hacer la depuración de volcados,suprima los números de instrucción y la salida de direcciones.Esto hace más factible el uso de diff en los volcados de depuración para las invocaciones del compilador con diferentes opciones,en particular con y sin</target>
        </trans-unit>
        <trans-unit id="6a3f0b550d9291ec66729667f3f7ca83fd2f4d8b" translate="yes" xml:space="preserve">
          <source>When dumping RTL, print the RTL in slim (condensed) form instead of the default LISP-like representation.</source>
          <target state="translated">Al tirar la RTL,imprima la RTL en forma delgada (condensada)en lugar de la representación predeterminada tipo LISP.</target>
        </trans-unit>
        <trans-unit id="74301d6d6862291588f10bf29b45b4967ce13d2f" translate="yes" xml:space="preserve">
          <source>When dumping front-end intermediate representations, inhibit dumping of members of a scope or body of a function merely because that scope has been reached. Only dump such items when they are directly reachable by some other path.</source>
          <target state="translated">Cuando se vierten representaciones intermedias frontales,inhibir el vertido de miembros de un ámbito o cuerpo de una función simplemente porque se ha alcanzado ese ámbito.Sólo vierte esos elementos cuando son directamente alcanzables por algún otro camino.</target>
        </trans-unit>
        <trans-unit id="f945883699fc9792ba3afeb26f744a7773586ecc" translate="yes" xml:space="preserve">
          <source>When dumping pretty-printed trees, this option inhibits dumping the bodies of control structures.</source>
          <target state="translated">Cuando se arrojan árboles bien impresos,esta opción inhibe el arrojo de los cuerpos de las estructuras de control.</target>
        </trans-unit>
        <trans-unit id="6fc1555729570caee324aa057f7026754c896f3e" translate="yes" xml:space="preserve">
          <source>When enabled, perform interprocedural bitwise constant propagation. This flag is enabled by default at</source>
          <target state="translated">Cuando esté habilitado,realice una propagación constante interprocedimental de bits.Este indicador se activa por defecto en</target>
        </trans-unit>
        <trans-unit id="bf82f180e269afc159377aa835c2b162d457aecd" translate="yes" xml:space="preserve">
          <source>When enabled, perform interprocedural propagation of value ranges. This flag is enabled by default at</source>
          <target state="translated">Cuando esté habilitado,realice la propagación interprocedimental de los rangos de valores.Este indicador se activa por defecto en</target>
        </trans-unit>
        <trans-unit id="5a6db9d98413978e8951a290a39c293b6dbce38a" translate="yes" xml:space="preserve">
          <source>When enabled, the compiler ensures that the generated code does not contain CSYNC or SSYNC instructions too soon after conditional branches. If this option is used, &lt;code&gt;__WORKAROUND_SPECULATIVE_SYNCS&lt;/code&gt; is defined.</source>
          <target state="translated">Cuando est&amp;aacute; habilitado, el compilador garantiza que el c&amp;oacute;digo generado no contenga instrucciones CSYNC o SSYNC demasiado pronto despu&amp;eacute;s de las ramas condicionales. Si se utiliza esta opci&amp;oacute;n, se define &lt;code&gt;__WORKAROUND_SPECULATIVE_SYNCS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cabeafae5f5d65fb548beb5767960c04d9a35b8" translate="yes" xml:space="preserve">
          <source>When enabled, the compiler ensures that the generated code does not contain speculative loads after jump instructions. If this option is used, &lt;code&gt;__WORKAROUND_SPECULATIVE_LOADS&lt;/code&gt; is defined.</source>
          <target state="translated">Cuando est&amp;aacute; habilitado, el compilador asegura que el c&amp;oacute;digo generado no contiene cargas especulativas despu&amp;eacute;s de las instrucciones de salto. Si se utiliza esta opci&amp;oacute;n, se define &lt;code&gt;__WORKAROUND_SPECULATIVE_LOADS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="177174ed256fb1fc5ac1ff6e0a69365e95922527" translate="yes" xml:space="preserve">
          <source>When enabled, the compiler is free to take advantage of the knowledge that the entire program fits into the low 64k of memory.</source>
          <target state="translated">Cuando se activa,el compilador es libre de aprovechar el conocimiento de que todo el programa cabe en los bajos 64k de memoria.</target>
        </trans-unit>
        <trans-unit id="f1158beec156e6a8ecff5cd217a56a66d53e95d9" translate="yes" xml:space="preserve">
          <source>When enabled, this option states that a range reduction step is not needed when performing complex division. Also, there is no checking whether the result of a complex multiplication or division is &lt;code&gt;NaN
+ I*NaN&lt;/code&gt;, with an attempt to rescue the situation in that case. The default is</source>
          <target state="translated">Cuando est&amp;aacute; habilitada, esta opci&amp;oacute;n indica que no se necesita un paso de reducci&amp;oacute;n de rango al realizar una divisi&amp;oacute;n compleja. Adem&amp;aacute;s, no se puede comprobar si el resultado de una multiplicaci&amp;oacute;n o divisi&amp;oacute;n compleja es &lt;code&gt;NaN + I*NaN&lt;/code&gt; , con un intento de rescatar la situaci&amp;oacute;n en ese caso. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="5c41cf550423b99323059ab9102f75c243821bb0" translate="yes" xml:space="preserve">
          <source>When estimated performance improvement of caller + callee runtime exceeds this threshold (in percent), the function can be inlined regardless of the limit on</source>
          <target state="translated">Cuando la mejora estimada del rendimiento del tiempo de ejecución de la llamada+callee supera este umbral (en porcentaje),la función puede ser alineada independientemente del límite de</target>
        </trans-unit>
        <trans-unit id="0546498041d4ec0ccfc5ce36934cf27647842a41" translate="yes" xml:space="preserve">
          <source>When generating PIC code, do or don&amp;rsquo;t allow the use of PLTs. Ignored for non-PIC. The default is</source>
          <target state="translated">Al generar c&amp;oacute;digo PIC, permita o no permita el uso de PLT. Ignorado para no PIC. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="511bcbbf68adbe04ec79792863471cde6b014863" translate="yes" xml:space="preserve">
          <source>When generating a function that returns a pointer, return the pointer in both &lt;code&gt;a0&lt;/code&gt; and &lt;code&gt;d0&lt;/code&gt;. Otherwise, the pointer is returned only in &lt;code&gt;a0&lt;/code&gt;, and attempts to call such functions without a prototype result in errors. Note that this option is on by default; use</source>
          <target state="translated">Al generar una funci&amp;oacute;n que devuelve un puntero, devuelve el puntero tanto en &lt;code&gt;a0&lt;/code&gt; como en &lt;code&gt;d0&lt;/code&gt; . De lo contrario, el puntero se devuelve solo en &lt;code&gt;a0&lt;/code&gt; y los intentos de llamar a tales funciones sin un prototipo dan como resultado errores. Tenga en cuenta que esta opci&amp;oacute;n est&amp;aacute; activada de forma predeterminada; utilizar</target>
        </trans-unit>
        <trans-unit id="dd2029500976920c4504065ca16226229e4f7c22" translate="yes" xml:space="preserve">
          <source>When generating assembler output use a syntax that is compatible with Renesas&amp;rsquo;s AS100 assembler. This syntax can also be handled by the GAS assembler, but it has some restrictions so it is not generated by default.</source>
          <target state="translated">Al generar la salida del ensamblador, use una sintaxis que sea compatible con el ensamblador AS100 de Renesas. Esta sintaxis tambi&amp;eacute;n puede ser manejada por el ensamblador GAS, pero tiene algunas restricciones por lo que no se genera de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="34010eecdc80bda1996b3453a5842eca5948c6ad" translate="yes" xml:space="preserve">
          <source>When generating code for shared libraries,</source>
          <target state="translated">Al generar código para las bibliotecas compartidas,</target>
        </trans-unit>
        <trans-unit id="ee57ba558572772d8e7d0fd148c855146cc649ba" translate="yes" xml:space="preserve">
          <source>When generating code for the x86-64 architecture with SSE extensions disabled,</source>
          <target state="translated">Al generar código para la arquitectura x86-64 con las extensiones SSE desactivadas,</target>
        </trans-unit>
        <trans-unit id="8c85713507dce4f24637fdca8c9dd42ecd242b3b" translate="yes" xml:space="preserve">
          <source>When generating position-independent code for ColdFire, generate code that works if the GOT has more than 8192 entries. This code is larger and slower than code generated without this option. On M680x0 processors, this option is not needed;</source>
          <target state="translated">Al generar el código independiente de la posición para el ColdFire,genera el código que funciona si el GOT tiene más de 8192 entradas.Este código es más grande y más lento que el código generado sin esta opción.En los procesadores M680x0,esta opción no es necesaria;</target>
        </trans-unit>
        <trans-unit id="ddb821edf6cd4d8eabb391980c4305801a4dd35b" translate="yes" xml:space="preserve">
          <source>When generating position-independent code, emit function calls using the Global Offset Table instead of the Procedure Linkage Table.</source>
          <target state="translated">Al generar un código independiente de la posición,emita llamadas de función utilizando la Tabla de Compensación Global en lugar de la Tabla de Enlace de Procedimientos.</target>
        </trans-unit>
        <trans-unit id="58318867846389e3f00483e730d9cdc45f04b844" translate="yes" xml:space="preserve">
          <source>When implementing patterns for these built-in functions, the memory order parameter can be ignored as long as the pattern implements the most restrictive &lt;code&gt;__ATOMIC_SEQ_CST&lt;/code&gt; memory order. Any of the other memory orders execute correctly with this memory order but they may not execute as efficiently as they could with a more appropriate implementation of the relaxed requirements.</source>
          <target state="translated">Al implementar patrones para estas funciones integradas, el par&amp;aacute;metro de orden de memoria se puede ignorar siempre que el patr&amp;oacute;n implemente el orden de memoria &lt;code&gt;__ATOMIC_SEQ_CST&lt;/code&gt; m&amp;aacute;s restrictivo . Cualquiera de las otras &amp;oacute;rdenes de memoria se ejecuta correctamente con esta orden de memoria, pero es posible que no se ejecuten tan eficientemente como podr&amp;iacute;an con una implementaci&amp;oacute;n m&amp;aacute;s apropiada de los requisitos relajados.</target>
        </trans-unit>
        <trans-unit id="e9af953ed4f40761c964f415712e4b881671dfb2" translate="yes" xml:space="preserve">
          <source>When linking a big-endian image select between BE8 and BE32 formats. The option has no effect for little-endian images and is ignored. The default is dependent on the selected target architecture. For ARMv6 and later architectures the default is BE8, for older architectures the default is BE32. BE32 format has been deprecated by ARM.</source>
          <target state="translated">Al vincular una imagen big-endian selecciona entre los formatos BE8 y BE32.La opción no tiene efecto para las imágenes little-endian y es ignorada.El valor por defecto depende de la arquitectura de destino seleccionada.Para ARMv6 y arquitecturas posteriores el valor por defecto es BE8,para arquitecturas más antiguas el valor por defecto es BE32.El formato BE32 ha sido desaprobado por ARM.</target>
        </trans-unit>
        <trans-unit id="920068058745daad77bac4500e9d9b0ac2200c05" translate="yes" xml:space="preserve">
          <source>When making copies of thread-local variables in a transaction, this parameter specifies the size in bytes after which variables are saved with the logging functions as opposed to save/restore code sequence pairs. This option only applies when using</source>
          <target state="translated">Cuando se hacen copias de variables locales de hilos en una transacción,este parámetro especifica el tamaño en bytes tras el cual se guardan las variables con las funciones de registro,en contraposición a los pares de secuencias de códigos de guardar/restaurar.Esta opción sólo se aplica cuando se utiliza</target>
        </trans-unit>
        <trans-unit id="20fd5eb54a80ab92bcf13e1600542aa28ff5d13b" translate="yes" xml:space="preserve">
          <source>When mangling a function type with function-cv-qualifiers, the un-qualified function type was incorrectly treated as a substitution candidate.</source>
          <target state="translated">Al mezclar un tipo de función con los calificadores de funciones,el tipo de función no calificado fue tratado incorrectamente como un candidato a la sustitución.</target>
        </trans-unit>
        <trans-unit id="6e16f38a870c014c4bf05a4ba66aff0d8f015c53" translate="yes" xml:space="preserve">
          <source>When not using an &lt;var&gt;asmSymbolicName&lt;/var&gt;, use the (zero-based) position of the operand in the list of operands in the assembler template. For example if there are three output operands, use &amp;lsquo;</source>
          <target state="translated">Cuando no use un &lt;var&gt;asmSymbolicName&lt;/var&gt; , use la posici&amp;oacute;n (de base cero) del operando en la lista de operandos en la plantilla del ensamblador. Por ejemplo, si hay tres operandos de salida, use '</target>
        </trans-unit>
        <trans-unit id="f7f108470bcf6e6b304f3263a3362bac9bf0990f" translate="yes" xml:space="preserve">
          <source>When not using an &lt;var&gt;asmSymbolicName&lt;/var&gt;, use the (zero-based) position of the operand in the list of operands in the assembler template. For example if there are two output operands and three inputs, use &amp;lsquo;</source>
          <target state="translated">Cuando no use un &lt;var&gt;asmSymbolicName&lt;/var&gt; , use la posici&amp;oacute;n (de base cero) del operando en la lista de operandos en la plantilla del ensamblador. Por ejemplo, si hay dos operandos de salida y tres entradas, use '</target>
        </trans-unit>
        <trans-unit id="9ab94547949a5e4c3215ae42df94303adb7916f4" translate="yes" xml:space="preserve">
          <source>When optimizing for size (using</source>
          <target state="translated">Cuando se optimiza el tamaño (usando</target>
        </trans-unit>
        <trans-unit id="97bc78492cc0f58dc12735620055de6a1daa4843" translate="yes" xml:space="preserve">
          <source>When passed this option, GCC produces a dynamic library instead of an executable when linking, using the Darwin</source>
          <target state="translated">Cuando se pasa esta opción,GCC produce una biblioteca dinámica en lugar de un ejecutable al enlazar,usando el Darwin</target>
        </trans-unit>
        <trans-unit id="f2411855bc2157c02295a4d406d5bb74f6ed2885" translate="yes" xml:space="preserve">
          <source>When performing a stack backtrace, code can inspect the value of &lt;code&gt;pc&lt;/code&gt; stored at &lt;code&gt;fp + 0&lt;/code&gt;. If the trace function then looks at location &lt;code&gt;pc - 12&lt;/code&gt; and the top 8 bits are set, then we know that there is a function name embedded immediately preceding this location and has length &lt;code&gt;((pc[-3]) &amp;amp; 0xff000000)&lt;/code&gt;.</source>
          <target state="translated">Al realizar un seguimiento de pila, el c&amp;oacute;digo puede inspeccionar el valor de &lt;code&gt;pc&lt;/code&gt; almacenado en &lt;code&gt;fp + 0&lt;/code&gt; . Si la funci&amp;oacute;n trace luego mira la ubicaci&amp;oacute;n &lt;code&gt;pc - 12&lt;/code&gt; y los 8 bits superiores est&amp;aacute;n configurados, entonces sabemos que hay un nombre de funci&amp;oacute;n incrustado inmediatamente antes de esta ubicaci&amp;oacute;n y tiene la longitud &lt;code&gt;((pc[-3]) &amp;amp; 0xff000000)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f597a9e8b63ff1121b0842bcdb388264d1b3c5ff" translate="yes" xml:space="preserve">
          <source>When performing branch target register load optimization, don&amp;rsquo;t reuse branch target registers within any basic block.</source>
          <target state="translated">Al realizar la optimizaci&amp;oacute;n de carga de registros de destino de rama, no reutilice los registros de destino de rama dentro de ning&amp;uacute;n bloque b&amp;aacute;sico.</target>
        </trans-unit>
        <trans-unit id="9c01537a52102dd8946fc5982208fe491740f320" translate="yes" xml:space="preserve">
          <source>When pipelining loops during selective scheduling, also pipeline outer loops. This option has no effect unless</source>
          <target state="translated">Cuando se canalicen los bucles durante la programación selectiva,también se canalicen los bucles exteriores.Esta opción no tiene efecto a menos que</target>
        </trans-unit>
        <trans-unit id="1280e31b08d3497c525b6d236dd8d4d87c36c837" translate="yes" xml:space="preserve">
          <source>When preprocessing files residing in directory</source>
          <target state="translated">Al preprocesar los archivos que residen en el directorio</target>
        </trans-unit>
        <trans-unit id="18019b7cb63563a2a1382c41adbfffdfc589112f" translate="yes" xml:space="preserve">
          <source>When preprocessing, do not shorten system header paths with canonicalization.</source>
          <target state="translated">Al preprocesar,no acorte los caminos de la cabecera del sistema con la canonización.</target>
        </trans-unit>
        <trans-unit id="2727468a8d8ea18794592843d12955ca0144b622" translate="yes" xml:space="preserve">
          <source>When preprocessing, handle directives, but do not expand macros.</source>
          <target state="translated">Al preprocesar,maneje las directivas,pero no amplíe las macros.</target>
        </trans-unit>
        <trans-unit id="bb09a7ade548f20e19021a30661ff4362be9b030" translate="yes" xml:space="preserve">
          <source>When printing percentages, 0% and 100% are only printed when the values are &lt;em&gt;exactly&lt;/em&gt; 0% and 100% respectively. Other values which would conventionally be rounded to 0% or 100% are instead printed as the nearest non-boundary value.</source>
          <target state="translated">Al imprimir porcentajes, 0% y 100% solo se imprimen cuando los valores son &lt;em&gt;exactamente&lt;/em&gt; 0% y 100% respectivamente. Otros valores que convencionalmente se redondear&amp;iacute;an al 0% o al 100% se imprimen en cambio como el valor no l&amp;iacute;mite m&amp;aacute;s cercano.</target>
        </trans-unit>
        <trans-unit id="814abd66e9c273530f2d56ad0a0cd6cc246294fd" translate="yes" xml:space="preserve">
          <source>When producing the final binary, GCC only applies link-time optimizations to those files that contain bytecode. Therefore, you can mix and match object files and libraries with GIMPLE bytecodes and final object code. GCC automatically selects which files to optimize in LTO mode and which files to link without further processing.</source>
          <target state="translated">Al producir el binario final,GCC sólo aplica optimizaciones de tiempo de enlace a aquellos archivos que contienen código de bytes.Por lo tanto,puede mezclar y combinar archivos y bibliotecas de objetos con códigos de bytes y código de objeto final del GIMPLE.GCC selecciona automáticamente los archivos que se van a optimizar en el modo LTO y los archivos que se van a enlazar sin necesidad de un procesamiento posterior.</target>
        </trans-unit>
        <trans-unit id="b96765bcbef2cdc563af58e2e7b14e500edcf025" translate="yes" xml:space="preserve">
          <source>When profile feedback is available (see</source>
          <target state="translated">Cuando se dispone de información sobre el perfil (véase</target>
        </trans-unit>
        <trans-unit id="21ec7c5b40c9ae6af5acdf4a048ad5c0d3bce4e5" translate="yes" xml:space="preserve">
          <source>When profile feedback is available, via</source>
          <target state="translated">Cuando se dispone de información sobre el perfil,a través de</target>
        </trans-unit>
        <trans-unit id="2f272057236473f0d19fb086d6183a38dfbd5bad" translate="yes" xml:space="preserve">
          <source>When reading data from memory in sizes shorter than 64 bits, use (do not use) zero-extending load instructions by default, rather than sign-extending ones.</source>
          <target state="translated">Al leer datos de la memoria en tamaños inferiores a 64 bits,utilice (no use)instrucciones de carga de extensión cero por defecto,en lugar de instrucciones de extensión de signos.</target>
        </trans-unit>
        <trans-unit id="f96511339203319c533d1e5bb317204cec489683" translate="yes" xml:space="preserve">
          <source>When scheduling after register allocation, use superblock scheduling. This allows motion across basic block boundaries, resulting in faster schedules. This option is experimental, as not all machine descriptions used by GCC model the CPU closely enough to avoid unreliable results from the algorithm.</source>
          <target state="translated">Cuando programe después de la asignación de registros,utilice la programación de superbloques.Esto permite el movimiento a través de los límites de los bloques básicos,lo que resulta en una programación más rápida.Esta opción es experimental,ya que no todas las descripciones de máquinas utilizadas por GCC modelan la CPU lo suficientemente cerca como para evitar resultados poco fiables del algoritmo.</target>
        </trans-unit>
        <trans-unit id="711283accf977e698dde3a25dc400a61116947e3" translate="yes" xml:space="preserve">
          <source>When selecting a register, choose one that is normally saved and restored by function calls on your machine. This ensures that code which is unaware of this reservation (such as library routines) will restore it before returning.</source>
          <target state="translated">Al seleccionar un registro,elija uno que normalmente se guarde y se restaure mediante llamadas de función en su máquina.Esto asegura que el código que no conoce esta reserva (como las rutinas de la biblioteca)la restaurará antes de volver.</target>
        </trans-unit>
        <trans-unit id="935d1b181ddc0bd3e6f68299a5752f8a09580e76" translate="yes" xml:space="preserve">
          <source>When selecting this option, be aware that the standard library headers do not obey all of these guidelines; use &amp;lsquo;</source>
          <target state="translated">Al seleccionar esta opci&amp;oacute;n, tenga en cuenta que los encabezados de biblioteca est&amp;aacute;ndar no obedecen todas estas pautas; utilizar '</target>
        </trans-unit>
        <trans-unit id="30da98647c378a61b9ead522311838c64d97cf26" translate="yes" xml:space="preserve">
          <source>When supplied with a 128-bit first argument, the &lt;code&gt;scalar_insert_exp&lt;/code&gt; built-in function returns a quad-precision ieee floating point value. The sign bit of the result is copied from the most significant bit of the &lt;code&gt;significand&lt;/code&gt; argument. The significand and exponent components of the result are composed of the least significant 15 bits of the &lt;code&gt;exponent&lt;/code&gt; argument and the least significant 112 bits of the &lt;code&gt;significand&lt;/code&gt; argument respectively.</source>
          <target state="translated">Cuando se suministra con un primer argumento de 128 bits, la &lt;code&gt;scalar_insert_exp&lt;/code&gt; incorporada scalar_insert_exp devuelve un valor de coma flotante ieee de precisi&amp;oacute;n cu&amp;aacute;druple. El bit de signo del resultado se copia del bit m&amp;aacute;s significativo del argumento de &lt;code&gt;significand&lt;/code&gt; . Los componentes significando y exponente del resultado est&amp;aacute;n compuestos por los 15 bits menos significativos del argumento &lt;code&gt;exponent&lt;/code&gt; e y los 112 bits menos significativos del argumento &lt;code&gt;significand&lt;/code&gt; respectivamente.</target>
        </trans-unit>
        <trans-unit id="55f3e3f1e06a97818ce0ffb33865599309fb29ae" translate="yes" xml:space="preserve">
          <source>When the</source>
          <target state="translated">Cuando el</target>
        </trans-unit>
        <trans-unit id="82085de4f0e784cd78a6493470847db57c3b16cf" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;g++&lt;/code&gt; program is used to link a C++ program, it normally automatically links against</source>
          <target state="translated">Cuando el programa &lt;code&gt;g++&lt;/code&gt; se utiliza para vincular un programa C ++, normalmente se vincula autom&amp;aacute;ticamente contra</target>
        </trans-unit>
        <trans-unit id="9d1f5e646a4aa7fceb07c0207db652e826f24dbb" translate="yes" xml:space="preserve">
          <source>When the address-of operator is applied to a thread-local variable, it is evaluated at run time and returns the address of the current thread&amp;rsquo;s instance of that variable. An address so obtained may be used by any thread. When a thread terminates, any pointers to thread-local variables in that thread become invalid.</source>
          <target state="translated">Cuando el operador address-of se aplica a una variable local de subproceso, se eval&amp;uacute;a en tiempo de ejecuci&amp;oacute;n y devuelve la direcci&amp;oacute;n de la instancia de subproceso actual de esa variable. Una direcci&amp;oacute;n as&amp;iacute; obtenida puede ser utilizada por cualquier hilo. Cuando un hilo termina, cualquier puntero a las variables locales del hilo en ese hilo se vuelve inv&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="0b679da0a8fd732962aaaa73513d25a32daf4775" translate="yes" xml:space="preserve">
          <source>When the compiled program exits it saves this data to a file called</source>
          <target state="translated">Cuando el programa compilado sale,guarda estos datos en un archivo llamado</target>
        </trans-unit>
        <trans-unit id="ba14367decd6810d3de98e37ab796a274e5fcb83" translate="yes" xml:space="preserve">
          <source>When the compiler creates the statically allocated constant string object, the &lt;code&gt;c_string&lt;/code&gt; field will be filled by the compiler with the string; the &lt;code&gt;length&lt;/code&gt; field will be filled by the compiler with the string length; the &lt;code&gt;isa&lt;/code&gt; pointer will be filled with &lt;code&gt;NULL&lt;/code&gt; by the compiler, and it will later be fixed up automatically at runtime by the GNU Objective-C runtime library to point to the class which was set by the</source>
          <target state="translated">Cuando el compilador crea el objeto de cadena constante asignado est&amp;aacute;ticamente, el campo &lt;code&gt;c_string&lt;/code&gt; ser&amp;aacute; llenado por el compilador con la cadena; el compilador rellenar&amp;aacute; el campo de &lt;code&gt;length&lt;/code&gt; con la longitud de la cadena; el puntero &lt;code&gt;isa&lt;/code&gt; ser&amp;aacute; llenado con &lt;code&gt;NULL&lt;/code&gt; por el compilador, y luego ser&amp;aacute; arreglado autom&amp;aacute;ticamente en tiempo de ejecuci&amp;oacute;n por la biblioteca de tiempo de ejecuci&amp;oacute;n GNU Objective-C para apuntar a la clase que fue establecida por el</target>
        </trans-unit>
        <trans-unit id="75d541d9bedf275908dc64ccacf78982bc497338" translate="yes" xml:space="preserve">
          <source>When the compiler fixes up the operands to satisfy the constraints, it needs to know which operands are read by the instruction and which are written by it. &amp;lsquo;</source>
          <target state="translated">Cuando el compilador corrige los operandos para satisfacer las restricciones, necesita saber qu&amp;eacute; operandos lee la instrucci&amp;oacute;n y cu&amp;aacute;les escribe. '</target>
        </trans-unit>
        <trans-unit id="fe9038c60a954d7fa872648aae2a7292450a7e26" translate="yes" xml:space="preserve">
          <source>When the compiler selects the registers to use to represent the input operands, it does not use any of the clobbered registers (see &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;Clobbers and Scratch Registers&lt;/a&gt;).</source>
          <target state="translated">Cuando el compilador selecciona los registros a usar para representar los operandos de entrada, no usa ninguno de los registros &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;clobbered&lt;/a&gt; (vea Clobbers y Scratch Registers ).</target>
        </trans-unit>
        <trans-unit id="fc0664d7c952e60ae422d980b70454766a66b5fe" translate="yes" xml:space="preserve">
          <source>When the compiler selects the registers to use to represent the output operands, it does not use any of the clobbered registers (see &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;Clobbers and Scratch Registers&lt;/a&gt;).</source>
          <target state="translated">Cuando el compilador selecciona los registros a usar para representar los operandos de salida, no usa ninguno de los registros &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;clobbered&lt;/a&gt; (vea Clobbers y Scratch Registers ).</target>
        </trans-unit>
        <trans-unit id="9af3756142eed3c562da1e3a657ce9b62976062a" translate="yes" xml:space="preserve">
          <source>When the compiler selects which registers to use to represent input and output operands, it does not use any of the clobbered registers. As a result, clobbered registers are available for any use in the assembler code.</source>
          <target state="translated">Cuando el compilador selecciona qué registros utilizar para representar operandos de entrada y de salida,no utiliza ninguno de los registros de golpe.Como resultado,los registros &quot;clobbered&quot; están disponibles para cualquier uso en el código del compilador.</target>
        </trans-unit>
        <trans-unit id="c3d75a61bee977e603b0ea8873c523597d8f39fa" translate="yes" xml:space="preserve">
          <source>When the garbage collector is used, the objects are allocated using the so-called typed memory allocation mechanism available in the Boehm-Demers-Weiser collector. This mode requires precise information on where pointers are located inside objects. This information is computed once per class, immediately after the class has been initialized.</source>
          <target state="translated">Cuando se utiliza el recolector de basura,los objetos se asignan mediante el llamado mecanismo de asignación de memoria mecanizada disponible en el recolector Boehm-Demers-Weiser.Este modo requiere información precisa sobre dónde se encuentran los punteros dentro de los objetos.Esta información se calcula una vez por clase,inmediatamente después de que la clase haya sido inicializada.</target>
        </trans-unit>
        <trans-unit id="ce04df43b58d0607f55d930a3e25d2b0c0d86fd3" translate="yes" xml:space="preserve">
          <source>When the instructions are enabled GCC defines the C preprocessor symbol &lt;code&gt;__RX_ALLOW_STRING_INSNS__&lt;/code&gt;, otherwise it defines the symbol &lt;code&gt;__RX_DISALLOW_STRING_INSNS__&lt;/code&gt;.</source>
          <target state="translated">Cuando las instrucciones est&amp;aacute;n habilitadas, GCC define el s&amp;iacute;mbolo del preprocesador C &lt;code&gt;__RX_ALLOW_STRING_INSNS__&lt;/code&gt; , en caso contrario define el s&amp;iacute;mbolo &lt;code&gt;__RX_DISALLOW_STRING_INSNS__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="237034d602a7895e4b871df52b8d8208437c1b5e" translate="yes" xml:space="preserve">
          <source>When the option</source>
          <target state="translated">Cuando la opción</target>
        </trans-unit>
        <trans-unit id="f59a2028d7f7059c14cfbb4f7cac2e937416cda2" translate="yes" xml:space="preserve">
          <source>When the value of a decimal floating type cannot be represented in the integer type to which it is being converted, the result is undefined rather than the result value specified by the draft technical report.</source>
          <target state="translated">Cuando el valor de un tipo flotante decimal no puede representarse en el tipo entero al que se está convirtiendo,el resultado es indefinido en lugar del valor de resultado especificado por el proyecto de informe técnico.</target>
        </trans-unit>
        <trans-unit id="43dfcc6f2fffee0a3a2515bfa1a37e71e51242de" translate="yes" xml:space="preserve">
          <source>When this flag is set, the macros &lt;code&gt;__pic__&lt;/code&gt; and &lt;code&gt;__PIC__&lt;/code&gt; are defined to 1.</source>
          <target state="translated">Cuando se establece esta bandera, las macros &lt;code&gt;__pic__&lt;/code&gt; y &lt;code&gt;__PIC__&lt;/code&gt; se definen en 1.</target>
        </trans-unit>
        <trans-unit id="44c57deb401735025dc176c7c63debf58618c2fc" translate="yes" xml:space="preserve">
          <source>When this flag is set, the macros &lt;code&gt;__pic__&lt;/code&gt; and &lt;code&gt;__PIC__&lt;/code&gt; are defined to 2.</source>
          <target state="translated">Cuando se establece este indicador, las macros &lt;code&gt;__pic__&lt;/code&gt; y &lt;code&gt;__PIC__&lt;/code&gt; se definen en 2.</target>
        </trans-unit>
        <trans-unit id="4a1317c4b8d2af979d94b62164c9d7ecd9184a36" translate="yes" xml:space="preserve">
          <source>When this option is enabled, GCC inserts &lt;code&gt;MEMW&lt;/code&gt; instructions before &lt;code&gt;volatile&lt;/code&gt; memory references to guarantee sequential consistency. The default is</source>
          <target state="translated">Cuando esta opci&amp;oacute;n est&amp;aacute; habilitada, GCC inserta instrucciones &lt;code&gt;MEMW&lt;/code&gt; antes de &lt;code&gt;volatile&lt;/code&gt; referencias de memoria vol&amp;aacute;til para garantizar la coherencia secuencial. El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="4f8fad713a34ff4dd67014e2a8d65e863876b686" translate="yes" xml:space="preserve">
          <source>When this option is enabled, GCC instructs the assembler to automatically align instructions to reduce branch penalties at the expense of some code density. The assembler attempts to widen density instructions to align branch targets and the instructions following call instructions. If there are not enough preceding safe density instructions to align a target, no widening is performed. The default is</source>
          <target state="translated">Cuando esta opción está activada,GCC instruye al ensamblador para que alinee automáticamente las instrucciones para reducir las penalizaciones de las ramas a expensas de cierta densidad de código.El ensamblador intenta ampliar las instrucciones de densidad para alinear los objetivos de las ramas y las instrucciones que siguen a las instrucciones de llamada.Si no hay suficientes instrucciones previas de densidad segura para alinear un objetivo,no se realiza ningún ensanchamiento.El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="6aace4cd615149f89dea8fcd082fb55d9878fa43" translate="yes" xml:space="preserve">
          <source>When this option is enabled, GCC instructs the assembler to translate direct calls to indirect calls unless it can determine that the target of a direct call is in the range allowed by the call instruction. This translation typically occurs for calls to functions in other source files. Specifically, the assembler translates a direct &lt;code&gt;CALL&lt;/code&gt; instruction into an &lt;code&gt;L32R&lt;/code&gt; followed by a &lt;code&gt;CALLX&lt;/code&gt; instruction. The default is</source>
          <target state="translated">Cuando esta opci&amp;oacute;n est&amp;aacute; habilitada, GCC le indica al ensamblador que traduzca las llamadas directas en llamadas indirectas a menos que pueda determinar que el objetivo de una llamada directa est&amp;aacute; en el rango permitido por la instrucci&amp;oacute;n de llamada. Esta traducci&amp;oacute;n suele producirse para llamadas a funciones en otros archivos fuente. Espec&amp;iacute;ficamente, el ensamblador traduce una instrucci&amp;oacute;n &lt;code&gt;CALL&lt;/code&gt; directa en un &lt;code&gt;L32R&lt;/code&gt; seguida de una instrucci&amp;oacute;n &lt;code&gt;CALLX&lt;/code&gt; . El valor predeterminado es</target>
        </trans-unit>
        <trans-unit id="932f419fffb4962ea09a2d68b7d48f6dd70fbe9a" translate="yes" xml:space="preserve">
          <source>When this option is not used, GCC optimizes for the processor specified by</source>
          <target state="translated">Cuando no se utiliza esta opción,GCC optimiza para el procesador especificado por</target>
        </trans-unit>
        <trans-unit id="d8e1351858aa322f0a55264f24813443d8991eb4" translate="yes" xml:space="preserve">
          <source>When this option is passed to the compiler driver, it causes the &lt;em&gt;first&lt;/em&gt; compilation to be skipped, which makes it useful for little other than debugging the compiler proper.</source>
          <target state="translated">Cuando esta opci&amp;oacute;n se pasa al controlador del compilador, hace que se omita la &lt;em&gt;primera&lt;/em&gt; compilaci&amp;oacute;n, lo que la hace &amp;uacute;til para poco m&amp;aacute;s que para depurar el compilador propiamente dicho.</target>
        </trans-unit>
        <trans-unit id="9e23f54eaa8f9101922e305be1e7015dd6fc78fe" translate="yes" xml:space="preserve">
          <source>When this version of the ABI is enabled the C preprocessor symbol &lt;code&gt;__V850_GCC_ABI__&lt;/code&gt; is defined.</source>
          <target state="translated">Cuando esta versi&amp;oacute;n de la ABI est&amp;aacute; habilitada, se define el s&amp;iacute;mbolo del preprocesador C &lt;code&gt;__V850_GCC_ABI__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a3a63e7e68adaacd52d22d0fef6ef4e247546c7" translate="yes" xml:space="preserve">
          <source>When this version of the ABI is enabled the C preprocessor symbol &lt;code&gt;__V850_RH850_ABI__&lt;/code&gt; is defined.</source>
          <target state="translated">Cuando esta versi&amp;oacute;n de ABI est&amp;aacute; habilitada, se define el s&amp;iacute;mbolo del preprocesador C &lt;code&gt;__V850_RH850_ABI__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffcbc5063df93d534e3fd1a9be3948f3d608cc53" translate="yes" xml:space="preserve">
          <source>When trying to fill delay slots, the maximum number of instructions to consider when searching for a block with valid live register information. Increasing this arbitrarily chosen value means more aggressive optimization, increasing the compilation time. This parameter should be removed when the delay slot code is rewritten to maintain the control-flow graph.</source>
          <target state="translated">Al tratar de llenar las ranuras de retraso,el número máximo de instrucciones a considerar cuando se busca un bloque con información válida de registro en vivo.Aumentar este valor elegido arbitrariamente significa una optimización más agresiva,aumentando el tiempo de compilación.Este parámetro debe eliminarse cuando se reescribe el código de la ranura de retardo para mantener el gráfico de flujo de control.</target>
        </trans-unit>
        <trans-unit id="ca1100086e04f30d15e50b0b6ef7fef7de69d02a" translate="yes" xml:space="preserve">
          <source>When used as part of the register variable extension, see &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Explicit Register Variables&lt;/a&gt;.</source>
          <target state="translated">Cuando se utiliza como parte de la extensi&amp;oacute;n de la variable de registro, consulte &lt;a href=&quot;explicit-register-variables#Explicit-Register-Variables&quot;&gt;Variables de registro expl&amp;iacute;citas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="106a6c1a466d5af73cd467f48ab954141e8dae1a" translate="yes" xml:space="preserve">
          <source>When used as the pattern of a pack expansion within a template definition, expands to a template argument pack containing integers from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length-1&lt;/code&gt;. This is provided for efficient implementation of &lt;code&gt;std::make_integer_sequence&lt;/code&gt;.</source>
          <target state="translated">Cuando se utiliza como patr&amp;oacute;n de expansi&amp;oacute;n de paquete dentro de una definici&amp;oacute;n de plantilla, se expande a un paquete de argumentos de plantilla que contiene n&amp;uacute;meros enteros de &lt;code&gt;0&lt;/code&gt; a &lt;code&gt;length-1&lt;/code&gt; . Esto se proporciona para una implementaci&amp;oacute;n eficiente de &lt;code&gt;std::make_integer_sequence&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="780fee7b38bbbc14d6460730fc730c12ac99a32c" translate="yes" xml:space="preserve">
          <source>When used from GCC without</source>
          <target state="translated">Cuando se usa desde GCC sin</target>
        </trans-unit>
        <trans-unit id="0e9e8833e240e4ed56f0fb1a36eb014753411cc2" translate="yes" xml:space="preserve">
          <source>When used in combination with</source>
          <target state="translated">Cuando se utiliza en combinación con</target>
        </trans-unit>
        <trans-unit id="4ec2dc1132b93e0ccc417d346f716fa8317dce1d" translate="yes" xml:space="preserve">
          <source>When used in combination with the</source>
          <target state="translated">Cuando se utiliza en combinación con el</target>
        </trans-unit>
        <trans-unit id="7e7b12188944613e3ecc2fd00ed8b819fb8ad2ca" translate="yes" xml:space="preserve">
          <source>When used in conjunction with</source>
          <target state="translated">Cuando se utiliza junto con</target>
        </trans-unit>
        <trans-unit id="49cb60ae0da0fc7302708101bdf54d1b69871514" translate="yes" xml:space="preserve">
          <source>When used on a struct, or struct member, the &lt;code&gt;aligned&lt;/code&gt; attribute can only increase the alignment; in order to decrease it, the &lt;code&gt;packed&lt;/code&gt; attribute must be specified as well. When used as part of a typedef, the &lt;code&gt;aligned&lt;/code&gt; attribute can both increase and decrease alignment, and specifying the &lt;code&gt;packed&lt;/code&gt; attribute generates a warning.</source>
          <target state="translated">Cuando se usa en una estructura, o miembro de estructura, el atributo &lt;code&gt;aligned&lt;/code&gt; solo puede aumentar la alineaci&amp;oacute;n; para disminuirlo, tambi&amp;eacute;n debe especificarse el atributo &lt;code&gt;packed&lt;/code&gt; . Cuando se usa como parte de una typedef, el atributo &lt;code&gt;aligned&lt;/code&gt; puede aumentar y disminuir la alineaci&amp;oacute;n, y especificar el atributo &lt;code&gt;packed&lt;/code&gt; genera una advertencia.</target>
        </trans-unit>
        <trans-unit id="9e5e1c3d3ae3ca589eb9e745a2edd3f0de6b0b04" translate="yes" xml:space="preserve">
          <source>When used together with &lt;code&gt;interrupt_handler&lt;/code&gt;, &lt;code&gt;exception_handler&lt;/code&gt; or &lt;code&gt;nmi_handler&lt;/code&gt;, code is generated to load the stack pointer from the USP register in the function prologue.</source>
          <target state="translated">Cuando se usa junto con &lt;code&gt;interrupt_handler&lt;/code&gt; , &lt;code&gt;exception_handler&lt;/code&gt; o &lt;code&gt;nmi_handler&lt;/code&gt; , se genera c&amp;oacute;digo para cargar el puntero de pila desde el registro USP en el pr&amp;oacute;logo de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0fa555d9978b74bbd46ce823e883fc5dc96ece10" translate="yes" xml:space="preserve">
          <source>When used together,</source>
          <target state="translated">Cuando se usan juntos,</target>
        </trans-unit>
        <trans-unit id="dd9e3fff8e9f3de600aeb120c0ac434ae6e8fd7f" translate="yes" xml:space="preserve">
          <source>When used with</source>
          <target state="translated">Cuando se usa con</target>
        </trans-unit>
        <trans-unit id="92cecb0d71e3d06f0f2ee726aec0670791ccea60" translate="yes" xml:space="preserve">
          <source>When used with GNU ld version 2.8 or later on an ELF system such as GNU/Linux or Solaris 2, or on Microsoft Windows, duplicate copies of these constructs will be discarded at link time. This is known as COMDAT support.</source>
          <target state="translated">Cuando se usa con la versión 2.8 o posterior de GNU ld en un sistema ELF como GNU/Linux o Solaris 2,o en Microsoft Windows,las copias duplicadas de estas construcciones serán descartadas en el momento del enlace.Esto se conoce como soporte COMDAT.</target>
        </trans-unit>
        <trans-unit id="3e4af787046ae7ade38ea86db68f50943f9b708f" translate="yes" xml:space="preserve">
          <source>When used with the driver options</source>
          <target state="translated">Cuando se usa con las opciones del conductor</target>
        </trans-unit>
        <trans-unit id="c37b9bb49622ff1b2c39fa2ca14e91b87c1c3e6e" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;__vector&lt;/code&gt; instead of &lt;code&gt;vector&lt;/code&gt;; for example,</source>
          <target state="translated">Cuando se usa &lt;code&gt;__vector&lt;/code&gt; en lugar de &lt;code&gt;vector&lt;/code&gt; ; por ejemplo,</target>
        </trans-unit>
        <trans-unit id="6b2bcfc1c3c9cde870c3782ea70e6faf69a223bd" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;gcov&lt;/code&gt;, you must first compile your program with a special GCC option &amp;lsquo;</source>
          <target state="translated">Al usar &lt;code&gt;gcov&lt;/code&gt; , primero debe compilar su programa con una opci&amp;oacute;n especial de GCC '</target>
        </trans-unit>
        <trans-unit id="813ae21e068ea720242cb9123e52a1c2bfc86b90" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;vector&lt;/code&gt; in keyword-and-predefine mode; for example,</source>
          <target state="translated">Cuando se usa &lt;code&gt;vector&lt;/code&gt; en modo de palabra clave y predefinir; por ejemplo,</target>
        </trans-unit>
        <trans-unit id="5643f8856029d91e0b316af45e590b017e03b023" translate="yes" xml:space="preserve">
          <source>When using &lt;var&gt;&amp;ndash;preserve-paths&lt;/var&gt;, gcov uses the full pathname of the source files to create an output filename. This can lead to long filenames that can overflow filesystem limits. This option creates names of the form</source>
          <target state="translated">Al usar &lt;var&gt;&amp;ndash;preserve-paths&lt;/var&gt; -path, gcov usa el nombre de ruta completo de los archivos de origen para crear un nombre de archivo de salida. Esto puede llevar a nombres de archivo largos que pueden sobrepasar los l&amp;iacute;mites del sistema de archivos. Esta opci&amp;oacute;n crea nombres del formulario</target>
        </trans-unit>
        <trans-unit id="86e384abcdbbd0ac6dda953fb252a5fa852b9cab" translate="yes" xml:space="preserve">
          <source>When using DWARF Version 4 or higher, type DIEs can be put into their own &lt;code&gt;.debug_types&lt;/code&gt; section instead of making them part of the &lt;code&gt;.debug_info&lt;/code&gt; section. It is more efficient to put them in a separate comdat section since the linker can then remove duplicates. But not all DWARF consumers support &lt;code&gt;.debug_types&lt;/code&gt; sections yet and on some objects &lt;code&gt;.debug_types&lt;/code&gt; produces larger instead of smaller debugging information.</source>
          <target state="translated">Cuando se usa DWARF Versi&amp;oacute;n 4 o superior, los DIE de tipo se pueden colocar en su propia secci&amp;oacute;n &lt;code&gt;.debug_types&lt;/code&gt; en lugar de hacerlos parte de la secci&amp;oacute;n &lt;code&gt;.debug_info&lt;/code&gt; . Es m&amp;aacute;s eficaz colocarlos en una secci&amp;oacute;n de comando separada, ya que el enlazador puede eliminar los duplicados. Pero no todos los consumidores DWARF admiten &lt;code&gt;.debug_types&lt;/code&gt; secciones .debug_types todav&amp;iacute;a y en algunos objetos &lt;code&gt;.debug_types&lt;/code&gt; produce informaci&amp;oacute;n de depuraci&amp;oacute;n m&amp;aacute;s grande en lugar de m&amp;aacute;s peque&amp;ntilde;a.</target>
        </trans-unit>
        <trans-unit id="7fb27cfc2abe0d594f6b16d8710a96a8aeba9d2c" translate="yes" xml:space="preserve">
          <source>When using a reference to volatile, G++ does not treat equivalent expressions as accesses to volatiles, but instead issues a warning that no volatile is accessed. The rationale for this is that otherwise it becomes difficult to determine where volatile access occur, and not possible to ignore the return value from functions returning volatile references. Again, if you wish to force a read, cast the reference to an rvalue.</source>
          <target state="translated">Cuando se utiliza una referencia a los volátiles,G++no trata las expresiones equivalentes como accesos a los volátiles,sino que emite una advertencia de que no se accede a los volátiles.La razón de ello es que,de lo contrario,resulta difícil determinar dónde se produce el acceso a los volátiles,y no es posible ignorar el valor de retorno de las funciones que devuelven las referencias a los volátiles.Una vez más,si desea forzar una lectura,lance la referencia a un valor de retorno.</target>
        </trans-unit>
        <trans-unit id="ffb95a64a466d2bd4851566c5320aa64fa40418e" translate="yes" xml:space="preserve">
          <source>When using a type that occupies multiple registers, such as &lt;code&gt;long
long&lt;/code&gt; on a 32-bit system, split the registers apart and allocate them independently. This normally generates better code for those types, but may make debugging more difficult.</source>
          <target state="translated">Cuando utilice un tipo que ocupa varios registros, como &lt;code&gt;long long&lt;/code&gt; en un sistema de 32 bits, divida los registros y as&amp;iacute;gnelos de forma independiente. Esto normalmente genera un mejor c&amp;oacute;digo para esos tipos, pero puede dificultar la depuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f38f792e072335436a4ef70d8d149701336de24f" translate="yes" xml:space="preserve">
          <source>When using any of the register constraints (&lt;code&gt;wa&lt;/code&gt;, &lt;code&gt;wd&lt;/code&gt;, &lt;code&gt;wf&lt;/code&gt;, &lt;code&gt;wg&lt;/code&gt;, &lt;code&gt;wh&lt;/code&gt;, &lt;code&gt;wi&lt;/code&gt;, &lt;code&gt;wj&lt;/code&gt;, &lt;code&gt;wk&lt;/code&gt;, &lt;code&gt;wl&lt;/code&gt;, &lt;code&gt;wm&lt;/code&gt;, &lt;code&gt;wo&lt;/code&gt;, &lt;code&gt;wp&lt;/code&gt;, &lt;code&gt;wq&lt;/code&gt;, &lt;code&gt;ws&lt;/code&gt;, &lt;code&gt;wt&lt;/code&gt;, &lt;code&gt;wu&lt;/code&gt;, &lt;code&gt;wv&lt;/code&gt;, &lt;code&gt;ww&lt;/code&gt;, or &lt;code&gt;wy&lt;/code&gt;) that take VSX registers, you must use &lt;code&gt;%x&amp;lt;n&amp;gt;&lt;/code&gt; in the template so that the correct register is used. Otherwise the register number output in the assembly file will be incorrect if an Altivec register is an operand of a VSX instruction that expects VSX register numbering.</source>
          <target state="translated">Cuando se usa cualquiera de las restricciones de registro ( &lt;code&gt;wa&lt;/code&gt; , &lt;code&gt;wd&lt;/code&gt; , &lt;code&gt;wf&lt;/code&gt; , &lt;code&gt;wg&lt;/code&gt; , &lt;code&gt;wh&lt;/code&gt; , &lt;code&gt;wi&lt;/code&gt; , &lt;code&gt;wj&lt;/code&gt; , &lt;code&gt;wk&lt;/code&gt; , &lt;code&gt;wl&lt;/code&gt; , &lt;code&gt;wm&lt;/code&gt; , &lt;code&gt;wo&lt;/code&gt; , &lt;code&gt;wp&lt;/code&gt; , &lt;code&gt;wq&lt;/code&gt; , &lt;code&gt;ws&lt;/code&gt; , &lt;code&gt;wt&lt;/code&gt; , &lt;code&gt;wu&lt;/code&gt; , &lt;code&gt;wv&lt;/code&gt; , &lt;code&gt;ww&lt;/code&gt; o &lt;code&gt;wy&lt;/code&gt; ) que toman VSX registros, debe usar &lt;code&gt;%x&amp;lt;n&amp;gt;&lt;/code&gt; en la plantilla para que se utilice el registro correcto. De lo contrario, la salida del n&amp;uacute;mero de registro en el archivo de ensamblaje ser&amp;aacute; incorrecta si un registro Altivec es un operando de una instrucci&amp;oacute;n VSX que espera la numeraci&amp;oacute;n del registro VSX.</target>
        </trans-unit>
        <trans-unit id="c184ccdd41991ac034a44b8741c7f1fabbb85a41" translate="yes" xml:space="preserve">
          <source>When using precompiled headers (see &lt;a href=&quot;precompiled-headers#Precompiled-Headers&quot;&gt;Precompiled Headers&lt;/a&gt;), this flag causes the dependency-output flags to also list the files from the precompiled header&amp;rsquo;s dependencies. If not specified, only the precompiled header are listed and not the files that were used to create it, because those files are not consulted when a precompiled header is used.</source>
          <target state="translated">Cuando se utilizan encabezados precompilados (consulte &lt;a href=&quot;precompiled-headers#Precompiled-Headers&quot;&gt;Encabezados precompilados&lt;/a&gt; ), este indicador hace que los indicadores de salida de dependencia tambi&amp;eacute;n enumeren los archivos de las dependencias del encabezado precompilado. Si no se especifica, solo se muestra el encabezado precompilado y no los archivos que se usaron para crearlo, porque esos archivos no se consultan cuando se usa un encabezado precompilado.</target>
        </trans-unit>
        <trans-unit id="4d73200be5ca0030ca174cac8ec7eb66631895c5" translate="yes" xml:space="preserve">
          <source>When using the GNU linker, it is usually more convenient to pass arguments to linker options using the</source>
          <target state="translated">Cuando se usa el enlazador GNU,normalmente es más conveniente pasar argumentos a las opciones del enlazador usando el</target>
        </trans-unit>
        <trans-unit id="07d62f57e8744ee5ede23dc9a1e4cfca2395afa4" translate="yes" xml:space="preserve">
          <source>When you are using the &lt;code&gt;goto&lt;/code&gt; form of &lt;code&gt;asm&lt;/code&gt;, this section contains the list of all C labels to which the code in the &lt;var&gt;AssemblerTemplate&lt;/var&gt; may jump. See &lt;a href=&quot;#GotoLabels&quot;&gt;GotoLabels&lt;/a&gt;.</source>
          <target state="translated">Cuando utiliza la forma &lt;code&gt;goto&lt;/code&gt; de &lt;code&gt;asm&lt;/code&gt; , esta secci&amp;oacute;n contiene la lista de todas las etiquetas C a las que puede saltar el c&amp;oacute;digo de &lt;var&gt;AssemblerTemplate&lt;/var&gt; . Consulte &lt;a href=&quot;#GotoLabels&quot;&gt;GotoLabels&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1da9d83d815287fc18f851fe43c98fefdf50af5" translate="yes" xml:space="preserve">
          <source>When you compile C++ programs, you may specify many of the same command-line options that you use for compiling programs in any language; or command-line options meaningful for C and related languages; or options that are meaningful only for C++ programs. See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;, for explanations of options for languages related to C. See &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Options Controlling C++ Dialect&lt;/a&gt;, for explanations of options that are meaningful only for C++ programs.</source>
          <target state="translated">Cuando compila programas en C ++, puede especificar muchas de las mismas opciones de l&amp;iacute;nea de comandos que usa para compilar programas en cualquier idioma; u opciones de l&amp;iacute;nea de comandos significativas para C y lenguajes relacionados; u opciones que son significativas solo para programas C ++. Consulte &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Opciones que controlan el dialecto C&lt;/a&gt; , para obtener explicaciones de las opciones para los lenguajes relacionados con C. Consulte &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Opciones que controlan el dialecto C ++&lt;/a&gt; , para obtener explicaciones de las opciones que son significativas solo para los programas C ++.</target>
        </trans-unit>
        <trans-unit id="628daae8697f91bc17f481bc0199bf74cc7f3f93" translate="yes" xml:space="preserve">
          <source>When you invoke GCC, it normally does preprocessing, compilation, assembly and linking. The &amp;ldquo;overall options&amp;rdquo; allow you to stop this process at an intermediate stage. For example, the</source>
          <target state="translated">Cuando invoca GCC, normalmente realiza preprocesamiento, compilaci&amp;oacute;n, ensamblaje y vinculaci&amp;oacute;n. Las &quot;opciones generales&quot; le permiten detener este proceso en una etapa intermedia. Por ejemplo, el</target>
        </trans-unit>
        <trans-unit id="dc4bcf9de739295968f25374fa0b9b82393e8d47" translate="yes" xml:space="preserve">
          <source>When you use</source>
          <target state="translated">Cuando usas</target>
        </trans-unit>
        <trans-unit id="8bb9a5cb938f4f893dfe56300e7991ff5d9ac371" translate="yes" xml:space="preserve">
          <source>When you use &lt;code id=&quot;index-longjmp-incompatibilities&quot;&gt;setjmp&lt;/code&gt; and &lt;code&gt;longjmp&lt;/code&gt;, the only automatic variables guaranteed to remain valid are those declared &lt;code&gt;volatile&lt;/code&gt;. This is a consequence of automatic register allocation. Consider this function:</source>
          <target state="translated">Cuando usa &lt;code id=&quot;index-longjmp-incompatibilities&quot;&gt;setjmp&lt;/code&gt; y &lt;code&gt;longjmp&lt;/code&gt; , las &amp;uacute;nicas variables autom&amp;aacute;ticas que se garantiza que seguir&amp;aacute;n siendo v&amp;aacute;lidas son las declaradas &lt;code&gt;volatile&lt;/code&gt; . Esto es una consecuencia de la asignaci&amp;oacute;n autom&amp;aacute;tica de registros. Considere esta funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="4f5a87979f362a282d672c1cd391334d27dc161a" translate="yes" xml:space="preserve">
          <source>When you use the</source>
          <target state="translated">Cuando usas el</target>
        </trans-unit>
        <trans-unit id="cef8b3831d50a66f25ff90c61c375348a6eba6bf" translate="yes" xml:space="preserve">
          <source>Whenever possible, you should use the general-purpose constraint letters in &lt;code&gt;asm&lt;/code&gt; arguments, since they will convey meaning more readily to people reading your code. Failing that, use the constraint letters that usually have very similar meanings across architectures. The most commonly used constraints are &amp;lsquo;</source>
          <target state="translated">Siempre que sea posible, debe usar las letras de restricci&amp;oacute;n de prop&amp;oacute;sito general en los argumentos &lt;code&gt;asm&lt;/code&gt; , ya que transmitir&amp;aacute;n el significado m&amp;aacute;s f&amp;aacute;cilmente a las personas que lean su c&amp;oacute;digo. De lo contrario, use las letras de restricci&amp;oacute;n que generalmente tienen significados muy similares en todas las arquitecturas. Las restricciones m&amp;aacute;s utilizadas son '</target>
        </trans-unit>
        <trans-unit id="3a4007ba3fafc819a7924ea3b2d8632c8709039c" translate="yes" xml:space="preserve">
          <source>Whenever you leave out the alignment factor in an &lt;code&gt;aligned&lt;/code&gt; attribute specification, the compiler automatically sets the alignment for the type to the largest alignment that is ever used for any data type on the target machine you are compiling for. Doing this can often make copy operations more efficient, because the compiler can use whatever instructions copy the biggest chunks of memory when performing copies to or from the variables that have types that you have aligned this way.</source>
          <target state="translated">Siempre que omita el factor de alineaci&amp;oacute;n en una especificaci&amp;oacute;n de atributo &lt;code&gt;aligned&lt;/code&gt; , el compilador establece autom&amp;aacute;ticamente la alineaci&amp;oacute;n para el tipo en la alineaci&amp;oacute;n m&amp;aacute;s grande que se haya usado para cualquier tipo de datos en la m&amp;aacute;quina de destino para la que est&amp;aacute; compilando. Hacer esto a menudo puede hacer que las operaciones de copia sean m&amp;aacute;s eficientes, porque el compilador puede usar cualquier instrucci&amp;oacute;n que copie la mayor parte de la memoria al realizar copias hacia o desde las variables que tienen tipos que ha alineado de esta manera.</target>
        </trans-unit>
        <trans-unit id="08306a1126e7ec7f2d356c52bfc279fbbf71d360" translate="yes" xml:space="preserve">
          <source>Where &lt;var&gt;op&lt;/var&gt; is the name of the instruction. Refer to the ISA manual for the complete list of instructions.</source>
          <target state="translated">Donde &lt;var&gt;op&lt;/var&gt; es el nombre de la instrucci&amp;oacute;n. Consulte el manual de ISA para obtener la lista completa de instrucciones.</target>
        </trans-unit>
        <trans-unit id="a66402f17809117f1d29c4b80df406d4e2f11bba" translate="yes" xml:space="preserve">
          <source>Where G++ puts inlines, vtables and such.</source>
          <target state="translated">Donde G++pone en línea,vtables y demás.</target>
        </trans-unit>
        <trans-unit id="f97bcbccf23129ffc3f54b71abd0f18cfe88a7d0" translate="yes" xml:space="preserve">
          <source>Where none of</source>
          <target state="translated">Donde ninguno de los</target>
        </trans-unit>
        <trans-unit id="18ba47ae48773e2f3f0699ad79e05aa7bd3185d2" translate="yes" xml:space="preserve">
          <source>Where the standard specified with</source>
          <target state="translated">Cuando la norma especificada con</target>
        </trans-unit>
        <trans-unit id="7c95dc097ed9e81e390e81810c6f3d829c025cc5" translate="yes" xml:space="preserve">
          <source>Where the unused arguments lie between used arguments that are specified with &amp;lsquo;</source>
          <target state="translated">Donde los argumentos no utilizados se encuentran entre los argumentos utilizados que se especifican con '</target>
        </trans-unit>
        <trans-unit id="b3e4d8bab3e588a9e2b728940ccf589c5438a70e" translate="yes" xml:space="preserve">
          <source>Where the value in &lt;var&gt;dest&lt;/var&gt; will be the result returned from the built-in.</source>
          <target state="translated">Donde el valor en &lt;var&gt;dest&lt;/var&gt; ser&amp;aacute; el resultado devuelto por el archivo integrado.</target>
        </trans-unit>
        <trans-unit id="e57ba6952af402ae437a5e3309d0cfb54d03b1f3" translate="yes" xml:space="preserve">
          <source>Where to find header files and libraries. Where to find the compiler executable files.</source>
          <target state="translated">Dónde encontrar archivos de encabezamiento y bibliotecas.Dónde encontrar los archivos ejecutables del compilador.</target>
        </trans-unit>
        <trans-unit id="3c00f7db25c9cf9b37e3952008b0e2f58aade5fa" translate="yes" xml:space="preserve">
          <source>Whether a &amp;ldquo;plain&amp;rdquo; &lt;code&gt;int&lt;/code&gt; bit-field is treated as a &lt;code&gt;signed int&lt;/code&gt; bit-field or as an &lt;code&gt;unsigned int&lt;/code&gt; bit-field (C90 6.5.2, C90 6.5.2.1, C99 and C11 6.7.2, C99 and C11 6.7.2.1).</source>
          <target state="translated">Si un campo de bits &lt;code&gt;int&lt;/code&gt; &quot;plano&quot; se trata como un campo de bits &lt;code&gt;signed int&lt;/code&gt; o como un campo de bits &lt;code&gt;unsigned int&lt;/code&gt; (C90 6.5.2, C90 6.5.2.1, C99 y C11 6.7.2, C99 y C11 6.7.2.1 ).</target>
        </trans-unit>
        <trans-unit id="7531059d0a25c98e7ca278e75f82acc76daa9a55" translate="yes" xml:space="preserve">
          <source>Whether a bit-field can straddle a storage-unit boundary (C90 6.5.2.1, C99 and C11 6.7.2.1).</source>
          <target state="translated">Si un campo de bits puede atravesar el límite de una unidad de almacenamiento (C90 6.5.2.1,C99 y C11 6.7.2.1).</target>
        </trans-unit>
        <trans-unit id="fe2aebfc599d584921175261d958d43ef0f0aec0" translate="yes" xml:space="preserve">
          <source>Whether a function in a binary built by one set of tools can call a function in a binary built by a different set of tools is a subset of interoperability.</source>
          <target state="translated">El hecho de que una función en un binario construido por un conjunto de herramientas pueda llamar a una función en un binario construido por un conjunto diferente de herramientas es un subconjunto de la interoperabilidad.</target>
        </trans-unit>
        <trans-unit id="c06b8898733d76cc9dce4e56a21efa3845ac1918" translate="yes" xml:space="preserve">
          <source>Whether an argument of class type with a non-trivial copy constructor or destructor can be passed to ... (C++0x 5.2.2).</source>
          <target state="translated">Si un argumento de tipo clase con un constructor o destructor de copias no triviales puede ser pasado a ...(C++0x 5.2.2).</target>
        </trans-unit>
        <trans-unit id="f086235b38a936fb8979e808d23b4c24d86f5d9b" translate="yes" xml:space="preserve">
          <source>Whether and how floating expressions are contracted when not disallowed by the &lt;code&gt;FP_CONTRACT&lt;/code&gt; pragma (C99 and C11 6.5).</source>
          <target state="translated">Si y c&amp;oacute;mo se contraen las expresiones flotantes cuando no las rechaza el pragma &lt;code&gt;FP_CONTRACT&lt;/code&gt; (C99 y C11 6.5).</target>
        </trans-unit>
        <trans-unit id="f8840ea94992b3ba6df4412ec15b47848948aba5" translate="yes" xml:space="preserve">
          <source>Whether any extended alignments are supported and the contexts in which they are supported (C11 6.2.8).</source>
          <target state="translated">Si se apoyan las alineaciones extendidas y los contextos en los que se apoyan (C11 6.2.8).</target>
        </trans-unit>
        <trans-unit id="5e7ac927cf9e33f4c488cef419402e9a193f27f2" translate="yes" xml:space="preserve">
          <source>Whether atomic types are permitted for bit-fields (C11 6.7.2.1).</source>
          <target state="translated">Si se permiten los tipos atómicos para los campos de bits (C11 6.7.2.1).</target>
        </trans-unit>
        <trans-unit id="1b73e138d1b7cf4eb52da0986b7749369200c235" translate="yes" xml:space="preserve">
          <source>Whether case distinctions are significant in an identifier with external linkage (C90 6.1.2).</source>
          <target state="translated">Si las distinciones de casos son significativas en un identificador con vinculación externa (C90 6.1.2).</target>
        </trans-unit>
        <trans-unit id="f11ebb9d3de47abc2e0ca0f87e800f9634ac636f" translate="yes" xml:space="preserve">
          <source>Whether codegen errors should be ICEs when</source>
          <target state="translated">Si los errores del codegen deben ser ICEs cuando</target>
        </trans-unit>
        <trans-unit id="354a46344b75f29340cafb16fbb91450a8587db2" translate="yes" xml:space="preserve">
          <source>Whether differently-prefixed wide string literal tokens can be concatenated and, if so, the treatment of the resulting multibyte character sequence (C11 6.4.5).</source>
          <target state="translated">Si se pueden concatenar fichas literales de cadena ancha de diferente prefijo y,en caso afirmativo,el tratamiento de la secuencia de caracteres multibyte resultante (C11 6.4.5).</target>
        </trans-unit>
        <trans-unit id="3b5528cb4a8a2228a3304685d15fcf34a763a7fb" translate="yes" xml:space="preserve">
          <source>Whether each nonempty sequence of white-space characters other than new-line is retained or replaced by one space character in translation phase 3 (C90, C99 and C11 5.1.1.2).</source>
          <target state="translated">Si cada secuencia no vacía de caracteres de espacio en blanco que no sea de nueva línea se conserva o se sustituye por un carácter de espacio en la fase de traducción 3 (C90,C99 y C11 5.1.1.2).</target>
        </trans-unit>
        <trans-unit id="599547a438479475d1d2cda798d15d3f35866c27" translate="yes" xml:space="preserve">
          <source>Whether signed integer types are represented using sign and magnitude, two&amp;rsquo;s complement, or one&amp;rsquo;s complement, and whether the extraordinary value is a trap representation or an ordinary value (C99 and C11 6.2.6.2).</source>
          <target state="translated">Si los tipos enteros con signo se representan mediante el signo y la magnitud, el complemento a dos o el complemento a uno, y si el valor extraordinario es una representaci&amp;oacute;n trampa o un valor ordinario (C99 y C11 6.2.6.2).</target>
        </trans-unit>
        <trans-unit id="40b6d1461dda1b8f55b388b60612f0a1c5dc15ae" translate="yes" xml:space="preserve">
          <source>Whether the &amp;ldquo;inexact&amp;rdquo; floating-point exception can be raised when the rounded result actually does equal the mathematical result in an IEC 60559 conformant implementation (C99 F.9).</source>
          <target state="translated">Si la excepci&amp;oacute;n de punto flotante &amp;ldquo;inexacto&amp;rdquo; puede surgir cuando el resultado redondeado realmente es igual al resultado matem&amp;aacute;tico en una implementaci&amp;oacute;n conforme a IEC 60559 (C99 F.9).</target>
        </trans-unit>
        <trans-unit id="c1f63f009e459571f2431bd617b7dca64a11adca" translate="yes" xml:space="preserve">
          <source>Whether the &amp;ldquo;underflow&amp;rdquo; (and &amp;ldquo;inexact&amp;rdquo;) floating-point exception can be raised when a result is tiny but not inexact in an IEC 60559 conformant implementation (C99 F.9).</source>
          <target state="translated">Si la excepci&amp;oacute;n de punto flotante de &amp;ldquo;subdesbordamiento&amp;rdquo; (e &amp;ldquo;inexacta&amp;rdquo;) se puede generar cuando un resultado es peque&amp;ntilde;o pero no inexacto en una implementaci&amp;oacute;n conforme a IEC 60559 (C99 F.9).</target>
        </trans-unit>
        <trans-unit id="945b6d4fa9a5ecbaf6bafbdb8d0d89ae5b700edc" translate="yes" xml:space="preserve">
          <source>Whether the &amp;lsquo;</source>
          <target state="translated">Si el '</target>
        </trans-unit>
        <trans-unit id="bba97b060da98c792876d4d0754d818ca89f0204" translate="yes" xml:space="preserve">
          <source>Whether the compiler should use the &amp;ldquo;canonical&amp;rdquo; type system. Should always be 1, which uses a more efficient internal mechanism for comparing types in C++ and Objective-C++. However, if bugs in the canonical type system are causing compilation failures, set this value to 0 to disable canonical types.</source>
          <target state="translated">Si el compilador debe utilizar el sistema de tipos &quot;can&amp;oacute;nico&quot;. Siempre debe ser 1, que utiliza un mecanismo interno m&amp;aacute;s eficiente para comparar tipos en C ++ y Objective-C ++. Sin embargo, si los errores en el sistema de tipos can&amp;oacute;nicos est&amp;aacute;n causando fallas de compilaci&amp;oacute;n, establezca este valor en 0 para deshabilitar los tipos can&amp;oacute;nicos.</target>
        </trans-unit>
        <trans-unit id="9bf07719435931f48daf3148b7f591b08eee6622" translate="yes" xml:space="preserve">
          <source>Whether the loop array prefetch pass should issue software prefetch hints for strides that are non-constant. In some cases this may be beneficial, though the fact the stride is non-constant may make it hard to predict when there is clear benefit to issuing these hints.</source>
          <target state="translated">Si el pase de prefetch de la matriz de bucles debe emitir pistas de prefetch de software para las zancadas que no son constantes.En algunos casos esto puede ser beneficioso,aunque el hecho de que la zancada no sea constante puede hacer difícil predecir cuándo hay un beneficio claro en la emisión de estas pistas.</target>
        </trans-unit>
        <trans-unit id="3783705a05be7fc566fd28d14a20893e46a49fb1" translate="yes" xml:space="preserve">
          <source>Whether the value of a character constant in a constant expression that controls conditional inclusion matches the value of the same character constant in the execution character set (C90 6.8.1, C99 and C11 6.10.1).</source>
          <target state="translated">Si el valor de una constante de carácter en una expresión constante que controla la inclusión condicional coincide con el valor de la misma constante de carácter en el conjunto de caracteres de ejecución (C90 6.8.1,C99 y C11 6.10.1).</target>
        </trans-unit>
        <trans-unit id="c36d4d5da07291b1b8267749102489e31d3d638e" translate="yes" xml:space="preserve">
          <source>Whether the value of a single-character character constant in a constant expression that controls conditional inclusion may have a negative value (C90 6.8.1, C99 and C11 6.10.1).</source>
          <target state="translated">Si el valor de una constante de carácter único en una expresión constante que controla la inclusión condicional puede tener un valor negativo (C90 6.8.1,C99 y C11 6.10.1).</target>
        </trans-unit>
        <trans-unit id="9cb3bdf69d2ad24cba5875ebe4f0cafed80a2719" translate="yes" xml:space="preserve">
          <source>Which additional multibyte characters may appear in identifiers and their correspondence to universal character names (C99 and C11 6.4.2).</source>
          <target state="translated">Qué caracteres multibyte adicionales pueden aparecer en los identificadores y su correspondencia con los nombres de caracteres universales (C99 y C11 6.4.2).</target>
        </trans-unit>
        <trans-unit id="d42124c28b1baab39d06e79c2e6fbc80bcb8c3b0" translate="yes" xml:space="preserve">
          <source>Which of &lt;code&gt;signed char&lt;/code&gt; or &lt;code&gt;unsigned char&lt;/code&gt; has the same range, representation, and behavior as &amp;ldquo;plain&amp;rdquo; &lt;code&gt;char&lt;/code&gt; (C90 6.1.2.5, C90 6.2.1.1, C99 and C11 6.2.5, C99 and C11 6.3.1.1).</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l de &lt;code&gt;signed char&lt;/code&gt; o &lt;code&gt;unsigned char&lt;/code&gt; tiene el mismo rango, la representaci&amp;oacute;n y comportamiento como &amp;ldquo;normal&amp;rdquo; &lt;code&gt;char&lt;/code&gt; (C90 6.1.2.5, 6.2.1.1 C90, C99 y C11 6.2.5, C99 y C11 6.3.1.1).</target>
        </trans-unit>
        <trans-unit id="a3f8e01950ee5a5eeec136d809212bfccead4676" translate="yes" xml:space="preserve">
          <source>Which problems in your code get warnings, and which get errors.</source>
          <target state="translated">Qué problemas en tu código reciben advertencias,y cuáles errores.</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="78cfea135064bce5a81b5bd15458f3f64f56702d" translate="yes" xml:space="preserve">
          <source>While it is possible to leave the function undefined and thus invoke a link failure (to define the function with a message in &lt;code&gt;.gnu.warning*&lt;/code&gt; section), when using these attributes the problem is diagnosed earlier and with exact location of the call even in presence of inline functions or when not emitting debugging information.</source>
          <target state="translated">Si bien es posible dejar la funci&amp;oacute;n sin definir y as&amp;iacute; invocar una falla de enlace (para definir la funci&amp;oacute;n con un mensaje en la secci&amp;oacute;n &lt;code&gt;.gnu.warning*&lt;/code&gt; ), al usar estos atributos el problema se diagnostica antes y con la ubicaci&amp;oacute;n exacta de la llamada incluso en presencia de funciones en l&amp;iacute;nea o cuando no se emite informaci&amp;oacute;n de depuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="652d59cea2004903b4f313a4a1b258897728e71e" translate="yes" xml:space="preserve">
          <source>While the compiler is aware of changes to entries listed in the output operands, the inline &lt;code&gt;asm&lt;/code&gt; code may modify more than just the outputs. For example, calculations may require additional registers, or the processor may overwrite a register as a side effect of a particular assembler instruction. In order to inform the compiler of these changes, list them in the clobber list. Clobber list items are either register names or the special clobbers (listed below). Each clobber list item is a string constant enclosed in double quotes and separated by commas.</source>
          <target state="translated">Si bien el compilador est&amp;aacute; al tanto de los cambios en las entradas enumeradas en los operandos de salida, el c&amp;oacute;digo &lt;code&gt;asm&lt;/code&gt; l&amp;iacute;nea puede modificar m&amp;aacute;s que solo las salidas. Por ejemplo, los c&amp;aacute;lculos pueden requerir registros adicionales o el procesador puede sobrescribir un registro como efecto secundario de una instrucci&amp;oacute;n particular del ensamblador. Para informar al compilador de estos cambios, ind&amp;iacute;quelos en la lista clobber. Los elementos de la lista Clobber son nombres de registro o los clobbers especiales (enumerados a continuaci&amp;oacute;n). Cada elemento de la lista clobber es una constante de cadena encerrada entre comillas dobles y separada por comas.</target>
        </trans-unit>
        <trans-unit id="e21fa2c7a90a60eea68201dc97480d9a5390c69c" translate="yes" xml:space="preserve">
          <source>While the uses of &lt;code&gt;asm&lt;/code&gt; are many and varied, it may help to think of an &lt;code&gt;asm&lt;/code&gt; statement as a series of low-level instructions that convert input parameters to output parameters. So a simple (if not particularly useful) example for i386 using &lt;code&gt;asm&lt;/code&gt; might look like this:</source>
          <target state="translated">Si bien los usos de &lt;code&gt;asm&lt;/code&gt; son muchos y variados, puede ser &amp;uacute;til pensar en una declaraci&amp;oacute;n de &lt;code&gt;asm&lt;/code&gt; como una serie de instrucciones de bajo nivel que convierten los par&amp;aacute;metros de entrada en par&amp;aacute;metros de salida. Entonces, un ejemplo simple (si no particularmente &amp;uacute;til) para i386 usando &lt;code&gt;asm&lt;/code&gt; podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="39d000e8aa5910f6d9ef12595235838dbefbbb8c" translate="yes" xml:space="preserve">
          <source>While transforming the program out of the SSA representation, attempt to reduce copying by coalescing versions of different user-defined variables, instead of just compiler temporaries. This may severely limit the ability to debug an optimized program compiled with</source>
          <target state="translated">Al transformar el programa fuera de la representación SSA,intente reducir la copia coalescenteando versiones de diferentes variables definidas por el usuario,en lugar de sólo compilar temporales.Esto puede limitar severamente la capacidad de depurar un programa optimizado compilado con</target>
        </trans-unit>
        <trans-unit id="91e29563eb1f68f27cd54dba1d78ec9cc5f02f0e" translate="yes" xml:space="preserve">
          <source>Whitespace characters are ignored and can be inserted at any position except the first. This enables each alternative for different operands to be visually aligned in the machine description even if they have different number of constraints and modifiers.</source>
          <target state="translated">Los caracteres de espacio en blanco son ignorados y pueden ser insertados en cualquier posición excepto en la primera.Esto permite alinear visualmente cada alternativa para diferentes operandos en la descripción de la máquina,incluso si tienen un número diferente de restricciones y modificadores.</target>
        </trans-unit>
        <trans-unit id="45faa4599697b06106508c630a671752d1b455fb" translate="yes" xml:space="preserve">
          <source>Wint-to-pointer-cast</source>
          <target state="translated">Wint-to-pointer-cast</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="db41302cf4b363b4a1378448e9a36c920e1a7fca" translate="yes" xml:space="preserve">
          <source>With both</source>
          <target state="translated">Con ambos</target>
        </trans-unit>
        <trans-unit id="a29e68e9d153083133283a2db9d7b73482a032a4" translate="yes" xml:space="preserve">
          <source>With extended &lt;code&gt;asm&lt;/code&gt; you can read and write C variables from assembler and perform jumps from assembler code to C labels. Extended &lt;code&gt;asm&lt;/code&gt; syntax uses colons (&amp;lsquo;</source>
          <target state="translated">Con &lt;code&gt;asm&lt;/code&gt; extendido , puede leer y escribir variables C desde ensamblador y realizar saltos desde c&amp;oacute;digo ensamblador a etiquetas C. La sintaxis extendida de &lt;code&gt;asm&lt;/code&gt; usa dos puntos ('</target>
        </trans-unit>
        <trans-unit id="b2027ec70d531c569c806c46a0ed0d35bbfbe374" translate="yes" xml:space="preserve">
          <source>With no modifiers, this is what the output from the operands would be for the &amp;lsquo;</source>
          <target state="translated">Sin modificadores, esto es lo que ser&amp;iacute;a la salida de los operandos para el '</target>
        </trans-unit>
        <trans-unit id="d8a4b9d08d97e45adb4da87468c9bc15fb87e195" translate="yes" xml:space="preserve">
          <source>With the</source>
          <target state="translated">Con el</target>
        </trans-unit>
        <trans-unit id="9cd37ca8139ba8f0077df8728d69e1509b46cb93" translate="yes" xml:space="preserve">
          <source>With the GNU C++ front end, for x86 targets, you may specify multiple versions of a function, where each function is specialized for a specific target feature. At runtime, the appropriate version of the function is automatically executed depending on the characteristics of the execution platform. Here is an example.</source>
          <target state="translated">Con la interfaz C++de GNU,para objetivos x86,se pueden especificar múltiples versiones de una función,donde cada función está especializada para una característica específica del objetivo.En tiempo de ejecución,la versión apropiada de la función se ejecuta automáticamente dependiendo de las características de la plataforma de ejecución.He aquí un ejemplo.</target>
        </trans-unit>
        <trans-unit id="872450a8fc748ddfde2cdc81d3d1bdedfaa16509" translate="yes" xml:space="preserve">
          <source>With the GNU runtime, exceptions are always implemented as &amp;ldquo;native&amp;rdquo; exceptions and it is recommended that the</source>
          <target state="translated">Con el tiempo de ejecuci&amp;oacute;n de GNU, las excepciones siempre se implementan como excepciones &quot;nativas&quot; y se recomienda que el</target>
        </trans-unit>
        <trans-unit id="ede352de48f14dbfe64db09513e522c73f079435" translate="yes" xml:space="preserve">
          <source>With the NeXT runtime, although currently designed to be binary compatible with &lt;code&gt;NS_HANDLER&lt;/code&gt;-style idioms provided by the &lt;code&gt;NSException&lt;/code&gt; class, the new exceptions can only be used on Mac OS X 10.3 (Panther) and later systems, due to additional functionality needed in the NeXT Objective-C runtime.</source>
          <target state="translated">Con el tiempo de ejecuci&amp;oacute;n de NeXT, aunque actualmente est&amp;aacute; dise&amp;ntilde;ado para ser binario compatible con los modismos de estilo &lt;code&gt;NS_HANDLER&lt;/code&gt; proporcionados por la clase &lt;code&gt;NSException&lt;/code&gt; , las nuevas excepciones solo se pueden usar en Mac OS X 10.3 (Panther) y sistemas posteriores, debido a la funcionalidad adicional necesaria en NeXT. Tiempo de ejecuci&amp;oacute;n de Objective-C.</target>
        </trans-unit>
        <trans-unit id="dab61d2e9aaa3623f28b2c32d76967b2c680ed03" translate="yes" xml:space="preserve">
          <source>With the exception of &lt;code&gt;__thread&lt;/code&gt;, at most one &lt;var&gt;storage-class-specifier&lt;/var&gt; shall appear in a given &lt;var&gt;decl-specifier-seq&lt;/var&gt;. The &lt;code&gt;__thread&lt;/code&gt; specifier may be used alone, or immediately following the &lt;code&gt;extern&lt;/code&gt; or &lt;code&gt;static&lt;/code&gt; specifiers. [&amp;hellip;]</source>
          <target state="translated">Con la excepci&amp;oacute;n de &lt;code&gt;__thread&lt;/code&gt; , como m&amp;aacute;ximo un &lt;var&gt;storage-class-specifier&lt;/var&gt; debe aparecer en una &lt;var&gt;decl-specifier-seq&lt;/var&gt; dada . El especificador &lt;code&gt;__thread&lt;/code&gt; se puede usar solo o inmediatamente despu&amp;eacute;s de los especificadores &lt;code&gt;extern&lt;/code&gt; os o &lt;code&gt;static&lt;/code&gt; . [&amp;hellip;]</target>
        </trans-unit>
        <trans-unit id="292a47839ebc29dbb70ec7b25cc162b60e68673e" translate="yes" xml:space="preserve">
          <source>With the exception of &lt;code&gt;__thread&lt;/code&gt;, at most one storage-class specifier may be given [&amp;hellip;]. The &lt;code&gt;__thread&lt;/code&gt; specifier may be used alone, or immediately following &lt;code&gt;extern&lt;/code&gt; or &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="translated">Con la excepci&amp;oacute;n de &lt;code&gt;__thread&lt;/code&gt; , como m&amp;aacute;ximo se puede dar un especificador de clase de almacenamiento [&amp;hellip;]. El especificador &lt;code&gt;__thread&lt;/code&gt; se puede utilizar solo o inmediatamente despu&amp;eacute;s de &lt;code&gt;extern&lt;/code&gt; o &lt;code&gt;static&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a3f5b76de67732f25dfbe9b7ab3c5b977a603b2" translate="yes" xml:space="preserve">
          <source>With the exception of built-ins that have library equivalents such as the standard C library functions discussed below, or that expand to library calls, GCC built-in functions are always expanded inline and thus do not have corresponding entry points and their address cannot be obtained. Attempting to use them in an expression other than a function call results in a compile-time error.</source>
          <target state="translated">Con excepción de los incorporados que tienen equivalentes de biblioteca,como las funciones estándar de biblioteca C que se examinan a continuación,o que se amplían a las llamadas de biblioteca,las funciones incorporadas de GCC siempre se amplían en línea y,por lo tanto,no tienen puntos de entrada correspondientes y no se puede obtener su dirección.El intento de utilizarlas en una expresión distinta de la llamada a una función da lugar a un error en tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="e736ee71288d11d1b230f0b89bdd35b5282b45ac" translate="yes" xml:space="preserve">
          <source>With the latter choice the options</source>
          <target state="translated">Con esta última opción las opciones</target>
        </trans-unit>
        <trans-unit id="a6637ce41dda1dbfc19245d823fa7fce4d91f90f" translate="yes" xml:space="preserve">
          <source>With the linker plugin enabled, the linker extracts the needed GIMPLE files from</source>
          <target state="translated">Con el plugin del enlazador activado,el enlazador extrae los archivos GIMPLE necesarios de</target>
        </trans-unit>
        <trans-unit id="8b0e7753b83f2f64fc1212f98878b05c847daa5e" translate="yes" xml:space="preserve">
          <source>With the specification of an output file, the output is appended to the named file, and it looks like this:</source>
          <target state="translated">Con la especificación de un archivo de salida,la salida se agrega al archivo nombrado,y se ve así:</target>
        </trans-unit>
        <trans-unit id="51ee435d4a40a1b09c0e1be2e1a80aec4607b86e" translate="yes" xml:space="preserve">
          <source>With this interface, &lt;code&gt;wait&lt;/code&gt;&amp;rsquo;s implementation might look like this:</source>
          <target state="translated">Con esta interfaz, la implementaci&amp;oacute;n de &lt;code&gt;wait&lt;/code&gt; podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="901e3b5288c53d25410e3fbe70a050954297b494" translate="yes" xml:space="preserve">
          <source>With this option, the compiler creates multiple copies of some local variables when unrolling a loop, which can result in superior code.</source>
          <target state="translated">Con esta opción,el compilador crea múltiples copias de algunas variables locales al desenrollar un bucle,lo que puede resultar en un código superior.</target>
        </trans-unit>
        <trans-unit id="ce8a418995461de4210630163f948f5da9423e89" translate="yes" xml:space="preserve">
          <source>With this option, the compiler turns the &lt;code&gt;__builtin_unreachable&lt;/code&gt; call into a diagnostics message call instead. When reaching the &lt;code&gt;__builtin_unreachable&lt;/code&gt; call, the behavior is undefined.</source>
          <target state="translated">Con esta opci&amp;oacute;n, el compilador convierte la llamada &lt;code&gt;__builtin_unreachable&lt;/code&gt; en una llamada de mensaje de diagn&amp;oacute;stico. Al llegar a la llamada &lt;code&gt;__builtin_unreachable&lt;/code&gt; , el comportamiento no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="756db1c4a886455bb3e77429e2aacb2477c5e4e1" translate="yes" xml:space="preserve">
          <source>With this pragma, the programmer asserts that there are no loop-carried dependencies which would prevent consecutive iterations of the following loop from executing concurrently with SIMD (single instruction multiple data) instructions.</source>
          <target state="translated">Con esta pragmática,el programador afirma que no hay dependencias de bucle que impidan que las iteraciones consecutivas del siguiente bucle se ejecuten simultáneamente con las instrucciones SIMD (single instruction multiple data).</target>
        </trans-unit>
        <trans-unit id="a8d9a31f26b7d1b3f16e1e66c83efb3ffbd755c5" translate="yes" xml:space="preserve">
          <source>Within either execution environment, a &lt;em&gt;thread&lt;/em&gt; is a flow of control within a program. It is implementation defined whether or not there may be more than one thread associated with a program. It is implementation defined how threads beyond the first are created, the name and type of the function called at thread startup, and how threads may be terminated. However, objects with thread storage duration shall be initialized before thread startup.</source>
          <target state="translated">Dentro de cualquier entorno de ejecuci&amp;oacute;n, un &lt;em&gt;hilo&lt;/em&gt; es un flujo de control dentro de un programa. Se define la implementaci&amp;oacute;n si puede haber o no m&amp;aacute;s de un hilo asociado con un programa. Se define la implementaci&amp;oacute;n c&amp;oacute;mo se crean los subprocesos m&amp;aacute;s all&amp;aacute; del primero, el nombre y tipo de la funci&amp;oacute;n llamada al inicio del subproceso y c&amp;oacute;mo se pueden terminar los subprocesos. Sin embargo, los objetos con duraci&amp;oacute;n de almacenamiento de subprocesos se inicializar&amp;aacute;n antes del inicio del subproceso.</target>
        </trans-unit>
        <trans-unit id="0e894809a49c1ed8c2eb1cfd50b560eb03dca15f" translate="yes" xml:space="preserve">
          <source>Within the body of &lt;code&gt;T::fn&lt;/code&gt;, &lt;var&gt;this&lt;/var&gt; has the effective definition &lt;code&gt;T *__restrict__ const this&lt;/code&gt;. Notice that the interpretation of a &lt;code&gt;__restrict__&lt;/code&gt; member function qualifier is different to that of &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;volatile&lt;/code&gt; qualifier, in that it is applied to the pointer rather than the object. This is consistent with other compilers that implement restricted pointers.</source>
          <target state="translated">Dentro del cuerpo de &lt;code&gt;T::fn&lt;/code&gt; , &lt;var&gt;this&lt;/var&gt; tiene la definici&amp;oacute;n efectiva &lt;code&gt;T *__restrict__ const this&lt;/code&gt; . Observe que la interpretaci&amp;oacute;n de un calificador de funci&amp;oacute;n de miembro &lt;code&gt;__restrict__&lt;/code&gt; es diferente a la del calificador &lt;code&gt;const&lt;/code&gt; ante o &lt;code&gt;volatile&lt;/code&gt; , en que se aplica al puntero en lugar del objeto. Esto es consistente con otros compiladores que implementan punteros restringidos.</target>
        </trans-unit>
        <trans-unit id="06d91320f48b09da02ef917261dcfd59521156ff" translate="yes" xml:space="preserve">
          <source>Without a value specified, pack all structure members together without holes. When a value is specified (which must be a small power of two), pack structure members according to this value, representing the maximum alignment (that is, objects with default alignment requirements larger than this are output potentially unaligned at the next fitting location.</source>
          <target state="translated">Sin un valor especificado,agrupa todos los miembros de la estructura sin agujeros.Cuando se especifica un valor (que debe ser una pequeña potencia de dos),empaque los miembros de la estructura de acuerdo con este valor,representando la alineación máxima (es decir,los objetos con requisitos de alineación predeterminados más grandes que esto se producen potencialmente sin alinear en el siguiente lugar de ajuste.</target>
        </trans-unit>
        <trans-unit id="4610e8cd3674760f9e34246c3335f6375dea470e" translate="yes" xml:space="preserve">
          <source>Without any optimization option, the compiler&amp;rsquo;s goal is to reduce the cost of compilation and to make debugging produce the expected results. Statements are independent: if you stop the program with a breakpoint between statements, you can then assign a new value to any variable or change the program counter to any other statement in the function and get exactly the results you expect from the source code.</source>
          <target state="translated">Sin ninguna opci&amp;oacute;n de optimizaci&amp;oacute;n, el objetivo del compilador es reducir el costo de compilaci&amp;oacute;n y hacer que la depuraci&amp;oacute;n produzca los resultados esperados. Las declaraciones son independientes: si detiene el programa con un punto de interrupci&amp;oacute;n entre declaraciones, puede asignar un nuevo valor a cualquier variable o cambiar el contador del programa a cualquier otra declaraci&amp;oacute;n en la funci&amp;oacute;n y obtener exactamente los resultados que espera del c&amp;oacute;digo fuente.</target>
        </trans-unit>
        <trans-unit id="d8d4a33aae2a07ecc8c812bfec17c5e5d451e08a" translate="yes" xml:space="preserve">
          <source>Without the specification of an output file, the output looks like this:</source>
          <target state="translated">Sin la especificación de un archivo de salida,la salida se ve así:</target>
        </trans-unit>
        <trans-unit id="5f36069c670576f1745c3bcd64036649a26fba3f" translate="yes" xml:space="preserve">
          <source>Without this option, &amp;lsquo;</source>
          <target state="translated">Sin esta opci&amp;oacute;n, '</target>
        </trans-unit>
        <trans-unit id="810b49b99b225fdb366e04ce850176fc78b9dace" translate="yes" xml:space="preserve">
          <source>Without this option, the &lt;code&gt;X&lt;/code&gt; register may be used in the same way as &lt;code&gt;Y&lt;/code&gt; or &lt;code&gt;Z&lt;/code&gt; which then is emulated by additional instructions. For example, loading a value with &lt;code&gt;X+const&lt;/code&gt; addressing with a small non-negative &lt;code&gt;const &amp;lt; 64&lt;/code&gt; to a register &lt;var&gt;Rn&lt;/var&gt; is performed as</source>
          <target state="translated">Sin esta opci&amp;oacute;n, el registro &lt;code&gt;X&lt;/code&gt; se puede usar de la misma manera que &lt;code&gt;Y&lt;/code&gt; o &lt;code&gt;Z&lt;/code&gt; , que luego se emula con instrucciones adicionales. Por ejemplo, cargar un valor con direccionamiento &lt;code&gt;X+const&lt;/code&gt; ante con una constante peque&amp;ntilde;a no negativa &lt;code&gt;const &amp;lt; 64&lt;/code&gt; en un registro &lt;var&gt;Rn&lt;/var&gt; se realiza como</target>
        </trans-unit>
        <trans-unit id="4c7069fd8666957ba9eac9efad054fa1d2f74644" translate="yes" xml:space="preserve">
          <source>Work around a bug in the &lt;code&gt;muls&lt;/code&gt; and &lt;code&gt;mulu&lt;/code&gt; instructions for CPU models where it applies. This option is active by default.</source>
          <target state="translated">&lt;code&gt;muls&lt;/code&gt; un error en las instrucciones muls y &lt;code&gt;mulu&lt;/code&gt; para los modelos de CPU donde se aplique. Esta opci&amp;oacute;n est&amp;aacute; activa por defecto.</target>
        </trans-unit>
        <trans-unit id="9517982144bf04b0b47a4d85a09581d177ba1cbb" translate="yes" xml:space="preserve">
          <source>Work around a hardware bug that causes the SPU to stall indefinitely. By default, GCC inserts the &lt;code&gt;hbrp&lt;/code&gt; instruction to make sure this stall won&amp;rsquo;t happen.</source>
          <target state="translated">Solucione un error de hardware que hace que la SPU se bloquee indefinidamente. De forma predeterminada, GCC inserta la instrucci&amp;oacute;n &lt;code&gt;hbrp&lt;/code&gt; para asegurarse de que este bloqueo no ocurra.</target>
        </trans-unit>
        <trans-unit id="8c4b8e3f13ae11240c809eb84fd3edb5d1bba62a" translate="yes" xml:space="preserve">
          <source>Work around certain R10000 errata:</source>
          <target state="translated">Trabaja alrededor de cierta errata de R10000:</target>
        </trans-unit>
        <trans-unit id="9074be04c7616416ed213f212eeb7c6c7c183d4c" translate="yes" xml:space="preserve">
          <source>Work around certain R4000 CPU errata:</source>
          <target state="translated">Trabaja alrededor de ciertas erratas de la CPU del R4000:</target>
        </trans-unit>
        <trans-unit id="fd709a4ced203846b02db64672dd131b123d5504" translate="yes" xml:space="preserve">
          <source>Work around certain R4400 CPU errata:</source>
          <target state="translated">Trabaja en torno a ciertas erratas de la CPU del R4400:</target>
        </trans-unit>
        <trans-unit id="9c76802dfaf86b35388bb6eac2a9a428f20a7a39" translate="yes" xml:space="preserve">
          <source>Work around certain SB-1 CPU core errata. (This flag currently works around the SB-1 revision 2 &amp;ldquo;F1&amp;rdquo; and &amp;ldquo;F2&amp;rdquo; floating-point errata.)</source>
          <target state="translated">Resuelva ciertas erratas del n&amp;uacute;cleo de la CPU SB-1. (Este indicador actualmente funciona con las erratas de punto flotante &amp;ldquo;F1&amp;rdquo; y &amp;ldquo;F2&amp;rdquo; de SB-1 revisi&amp;oacute;n 2).</target>
        </trans-unit>
        <trans-unit id="f1322c2c26c7f8a2ae0c4abcf920ab6e36d8883e" translate="yes" xml:space="preserve">
          <source>Work around certain VR4120 errata:</source>
          <target state="translated">Trabaja en torno a cierta errata del VR4120:</target>
        </trans-unit>
        <trans-unit id="70f65ee28d3f60e1570e5c0565d3bacdc0372408" translate="yes" xml:space="preserve">
          <source>Work around the 24K E48 (lost data on stores during refill) errata. The workarounds are implemented by the assembler rather than by GCC.</source>
          <target state="translated">Trabaja en torno a la errata 24K E48 (datos perdidos de los almacenes durante el relleno).Las soluciones provisionales son implementadas por el ensamblador en lugar de por GCC.</target>
        </trans-unit>
        <trans-unit id="eecdf3e0ad9c1e4373885008c446ef1d15e0de5a" translate="yes" xml:space="preserve">
          <source>Work around the RM7000 &lt;code&gt;dmult&lt;/code&gt;/&lt;code&gt;dmultu&lt;/code&gt; errata. The workarounds are implemented by the assembler rather than by GCC.</source>
          <target state="translated">Evite las erratas &lt;code&gt;dmult&lt;/code&gt; / &lt;code&gt;dmultu&lt;/code&gt; de RM7000 . Las soluciones alternativas las implementa el ensamblador en lugar de GCC.</target>
        </trans-unit>
        <trans-unit id="f514e8f6d3c8232406871016402b0b519b9f1bff" translate="yes" xml:space="preserve">
          <source>Work around the VR4130 &lt;code&gt;mflo&lt;/code&gt;/&lt;code&gt;mfhi&lt;/code&gt; errata. The workarounds are implemented by the assembler rather than by GCC, although GCC avoids using &lt;code&gt;mflo&lt;/code&gt; and &lt;code&gt;mfhi&lt;/code&gt; if the VR4130 &lt;code&gt;macc&lt;/code&gt;, &lt;code&gt;macchi&lt;/code&gt;, &lt;code&gt;dmacc&lt;/code&gt; and &lt;code&gt;dmacchi&lt;/code&gt; instructions are available instead.</source>
          <target state="translated">Trabaje alrededor de la errata &lt;code&gt;mflo&lt;/code&gt; / &lt;code&gt;mfhi&lt;/code&gt; . Las soluciones alternativas las implementa el ensamblador en lugar de GCC, aunque GCC evita el uso de &lt;code&gt;mflo&lt;/code&gt; y &lt;code&gt;mfhi&lt;/code&gt; si las instrucciones &lt;code&gt;macc&lt;/code&gt; , &lt;code&gt;macchi&lt;/code&gt; , &lt;code&gt;dmacc&lt;/code&gt; y &lt;code&gt;dmacchi&lt;/code&gt; est&amp;aacute;n disponibles en su lugar.</target>
        </trans-unit>
        <trans-unit id="0a937c64e2a5b7eba62b666d7ca837eb48731984" translate="yes" xml:space="preserve">
          <source>Write &lt;var&gt;src1&lt;/var&gt; into Y.</source>
          <target state="translated">Escriba &lt;var&gt;src1&lt;/var&gt; en Y.</target>
        </trans-unit>
        <trans-unit id="b99c5ddd130a32b9357572f70d99408237dc24f1" translate="yes" xml:space="preserve">
          <source>Write &lt;var&gt;src1&lt;/var&gt; into the least significant half of X and &lt;var&gt;src2&lt;/var&gt; into the most significant half of X.</source>
          <target state="translated">Escriba &lt;var&gt;src1&lt;/var&gt; en la mitad menos significativa de X y &lt;var&gt;src2&lt;/var&gt; en la mitad m&amp;aacute;s significativa de X.</target>
        </trans-unit>
        <trans-unit id="282a09ed773c8ef9852a2c6377ed12597d3a9c69" translate="yes" xml:space="preserve">
          <source>Write a SRCFILE.opt-record.json.gz file detailing what optimizations were performed, for those optimizations that support</source>
          <target state="translated">Escriba un archivo SRCFILE.opt-record.json.gz detallando qué optimizaciones se realizaron,para aquellas optimizaciones que soporten</target>
        </trans-unit>
        <trans-unit id="40d1ca8852e0dec6c7d4fad7e6bc0514fe5d1c54" translate="yes" xml:space="preserve">
          <source>Write branch frequencies as the number of branches taken, rather than the percentage of branches taken.</source>
          <target state="translated">Escriba las frecuencias de las ramas como el número de ramas tomadas,en lugar del porcentaje de ramas tomadas.</target>
        </trans-unit>
        <trans-unit id="1423ee2af8243360b137ebe26d7ad382ca0b3b1e" translate="yes" xml:space="preserve">
          <source>Write branch frequencies to the output file, and write branch summary info to the standard output. This option allows you to see how often each branch in your program was taken. Unconditional branches will not be shown, unless the</source>
          <target state="translated">Escriba las frecuencias de las ramas en el archivo de salida,y escriba la información de resumen de las ramas en la salida estándar.Esta opción te permite ver con qué frecuencia se tomó cada rama de tu programa.Las ramas incondicionales no se mostrarán,a menos que el</target>
        </trans-unit>
        <trans-unit id="1fecc6871d15f561a1a398ebd76fa3a7a1663e9e" translate="yes" xml:space="preserve">
          <source>Write counts in human readable format (like 24.6k).</source>
          <target state="translated">Los recuentos de escritura en formato legible para los humanos (como 24.6k).</target>
        </trans-unit>
        <trans-unit id="e00e26a5662df1b01236462f99618d8089824cf9" translate="yes" xml:space="preserve">
          <source>Write individual execution counts for every basic block. Normally gcov outputs execution counts only for the main blocks of a line. With this option you can determine if blocks within a single line are not being executed.</source>
          <target state="translated">Escriba los recuentos de ejecución individuales para cada bloque básico.Normalmente,la GCOV emite recuentos de ejecución sólo para los bloques principales de una línea.Con esta opción se puede determinar si los bloques dentro de una sola línea no se están ejecutando.</target>
        </trans-unit>
        <trans-unit id="27b79e5dd909fed4a63697002ecabe6d4fcefd2b" translate="yes" xml:space="preserve">
          <source>Write the name of each function into the text section, directly preceding the function prologue. The generated code is similar to this:</source>
          <target state="translated">Escriba el nombre de cada función en la sección de texto que precede directamente al prólogo de la función.El código generado es similar a esto:</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="2c144edd2dd673b9ae13db81c4f7c41356844426" translate="yes" xml:space="preserve">
          <source>XER[CA]</source>
          <target state="translated">XER[CA]</target>
        </trans-unit>
        <trans-unit id="edd05eca97855bc49145e43cb3ab5438e61cd98b" translate="yes" xml:space="preserve">
          <source>XOP instructions.</source>
          <target state="translated">Instrucciones XOP.</target>
        </trans-unit>
        <trans-unit id="e69dd5b634eb9535ab5de7682e5d1e10df284ccf" translate="yes" xml:space="preserve">
          <source>Xstormy16&amp;mdash;</source>
          <target state="translated">Xstormy16&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="8341de0a85a327eb2d7c97b77086eb0bff937ecb" translate="yes" xml:space="preserve">
          <source>Xtensa&amp;mdash;</source>
          <target state="translated">Xtensa&amp;mdash;</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="cbfadbe232364f5b4cd1f9250a9cda7fadbb0042" translate="yes" xml:space="preserve">
          <source>You can additionally specify a string parameter: &amp;lsquo;</source>
          <target state="translated">Adem&amp;aacute;s, puede especificar un par&amp;aacute;metro de cadena: '</target>
        </trans-unit>
        <trans-unit id="37f047474bb2991bbc870836a4b1dc7ea6a7e179" translate="yes" xml:space="preserve">
          <source>You can also construct an array, though this is dangerous in C++, as explained below. If all the elements of the compound literal are (made up of) simple constant expressions suitable for use in initializers of objects of static storage duration, then the compound literal can be coerced to a pointer to its first element and used in such an initializer, as shown here:</source>
          <target state="translated">También puedes construir una matriz,aunque esto es peligroso en C++,como se explica a continuación.Si todos los elementos del literal compuesto son (compuestos de)expresiones constantes simples adecuadas para su uso en inicializadores de objetos de duración de almacenamiento estático,entonces el literal compuesto puede ser coaccionado a un puntero a su primer elemento y utilizado en tal inicializador,como se muestra aquí:</target>
        </trans-unit>
        <trans-unit id="7e3923b44bbc7d66662628b3637d89fe21e428bc" translate="yes" xml:space="preserve">
          <source>You can also include type attributes in a &lt;code&gt;typedef&lt;/code&gt; declaration. See &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Attribute Syntax&lt;/a&gt;, for details of the exact syntax for using attributes.</source>
          <target state="translated">Tambi&amp;eacute;n puede incluir atributos de tipo en una declaraci&amp;oacute;n &lt;code&gt;typedef&lt;/code&gt; . Consulte &lt;a href=&quot;attribute-syntax#Attribute-Syntax&quot;&gt;Sintaxis de atributos&lt;/a&gt; para obtener detalles sobre la sintaxis exacta para usar atributos.</target>
        </trans-unit>
        <trans-unit id="c36aaae0a5a83266e8e76c432773d2ebb3588799" translate="yes" xml:space="preserve">
          <source>You can also override the ARM and Thumb mode for each function by using the &lt;code&gt;target(&quot;thumb&quot;)&lt;/code&gt; and &lt;code&gt;target(&quot;arm&quot;)&lt;/code&gt; function attributes (see &lt;a href=&quot;arm-function-attributes#ARM-Function-Attributes&quot;&gt;ARM Function Attributes&lt;/a&gt;) or pragmas (see &lt;a href=&quot;function-specific-option-pragmas#Function-Specific-Option-Pragmas&quot;&gt;Function Specific Option Pragmas&lt;/a&gt;).</source>
          <target state="translated">Tambi&amp;eacute;n puede anular el modo ARM y Thumb para cada funci&amp;oacute;n utilizando los atributos de funci&amp;oacute;n &lt;code&gt;target(&quot;thumb&quot;)&lt;/code&gt; y &lt;code&gt;target(&quot;arm&quot;)&lt;/code&gt; (consulte &lt;a href=&quot;arm-function-attributes#ARM-Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n ARM&lt;/a&gt; ) o pragmas (consulte &lt;a href=&quot;function-specific-option-pragmas#Function-Specific-Option-Pragmas&quot;&gt;Pragmas de opciones espec&amp;iacute;ficas de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="70f9f23d58cf9ce6f889493d1bc7a0c90625f3a7" translate="yes" xml:space="preserve">
          <source>You can also record the return value of that function call, and later return that value, without knowing what data type the function tried to return (as long as your caller expects that data type).</source>
          <target state="translated">También puede registrar el valor de retorno de esa llamada a la función,y posteriormente devolver ese valor,sin saber qué tipo de datos intentó devolver la función (siempre que la persona que llama espere ese tipo de datos).</target>
        </trans-unit>
        <trans-unit id="1165641e4d4b9af84b909635ee9d9e9c442957c3" translate="yes" xml:space="preserve">
          <source>You can also set the fpu name at function level by using the &lt;code&gt;target(&quot;fpu=&quot;)&lt;/code&gt; function attributes (see &lt;a href=&quot;arm-function-attributes#ARM-Function-Attributes&quot;&gt;ARM Function Attributes&lt;/a&gt;) or pragmas (see &lt;a href=&quot;function-specific-option-pragmas#Function-Specific-Option-Pragmas&quot;&gt;Function Specific Option Pragmas&lt;/a&gt;).</source>
          <target state="translated">Tambi&amp;eacute;n puede establecer el nombre de la fpu a nivel de funci&amp;oacute;n utilizando los atributos de funci&amp;oacute;n de &lt;code&gt;target(&quot;fpu=&quot;)&lt;/code&gt; (consulte &lt;a href=&quot;arm-function-attributes#ARM-Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n ARM&lt;/a&gt; ) o pragmas (consulte &lt;a href=&quot;function-specific-option-pragmas#Function-Specific-Option-Pragmas&quot;&gt;Pragmas de opciones espec&amp;iacute;ficas de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7268dd0eaeb17935e5094a8029ba22d93c31a1ac" translate="yes" xml:space="preserve">
          <source>You can also specify</source>
          <target state="translated">También puede especificar</target>
        </trans-unit>
        <trans-unit id="08bf03c9c6ff7624c857011e74954c5c6f9f4300" translate="yes" xml:space="preserve">
          <source>You can also specify the alignment of structure fields. For example, to create a double-word aligned &lt;code&gt;int&lt;/code&gt; pair, you could write:</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar la alineaci&amp;oacute;n de los campos de estructura. Por ejemplo, para crear un par &lt;code&gt;int&lt;/code&gt; alineado con dos palabras , podr&amp;iacute;a escribir:</target>
        </trans-unit>
        <trans-unit id="22d0b06ab6697336780029eb518e6cdd2c05382e" translate="yes" xml:space="preserve">
          <source>You can also use</source>
          <target state="translated">También puedes usar</target>
        </trans-unit>
        <trans-unit id="282b6d022cb9c27fb3bb9103220d6eb51129f71a" translate="yes" xml:space="preserve">
          <source>You can also use attributes to control memory placement, code generation options or call/return conventions within the function being annotated. Many of these attributes are target-specific. For example, many targets support attributes for defining interrupt handler functions, which typically must follow special register usage and return conventions. Such attributes are described in the subsection for each target. However, a considerable number of attributes are supported by most, if not all targets. Those are described in the &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt; section.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar atributos para controlar la ubicaci&amp;oacute;n de la memoria, las opciones de generaci&amp;oacute;n de c&amp;oacute;digo o las convenciones de llamada / devoluci&amp;oacute;n dentro de la funci&amp;oacute;n que se est&amp;aacute; anotando. Muchos de estos atributos son espec&amp;iacute;ficos del objetivo. Por ejemplo, muchos destinos admiten atributos para definir funciones de manejador de interrupciones, que normalmente deben seguir convenciones de retorno y uso de registros especiales. Estos atributos se describen en la subsecci&amp;oacute;n de cada objetivo. Sin embargo, la mayor&amp;iacute;a, si no todos los destinos, admiten un n&amp;uacute;mero considerable de atributos. Estos se describen en la secci&amp;oacute;n &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Atributos de funciones comunes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="972bfbc14b560aee91d8b7d5cfbc635d959441aa" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;asm&lt;/code&gt; keyword to override the assembler name for a C symbol, or to place a C variable in a specific register.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar la palabra clave &lt;code&gt;asm&lt;/code&gt; para anular el nombre del ensamblador de un s&amp;iacute;mbolo C o para colocar una variable C en un registro espec&amp;iacute;fico.</target>
        </trans-unit>
        <trans-unit id="354710c3fd8ed8d70c6d2f210156da0243dc4ade" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;nocf_check&lt;/code&gt; attribute to identify which functions and calls should be skipped from instrumentation (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;).</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el atributo &lt;code&gt;nocf_check&lt;/code&gt; para identificar qu&amp;eacute; funciones y llamadas deben omitirse de la instrumentaci&amp;oacute;n (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d1c6ca2bbbe80bcabecefea25be4aa8fafd6e4d0" translate="yes" xml:space="preserve">
          <source>You can also use the union cast as a function argument:</source>
          <target state="translated">También puedes usar el elenco de la unión como argumento de función:</target>
        </trans-unit>
        <trans-unit id="66b750e5491b307807c28732748047266dbd8e2a" translate="yes" xml:space="preserve">
          <source>You can also use variable-length arrays as arguments to functions:</source>
          <target state="translated">También puede usar arreglos de longitud variable como argumentos para las funciones:</target>
        </trans-unit>
        <trans-unit id="3ed04a1e1ec2d18dcef36c3f37e8523ec33398b1" translate="yes" xml:space="preserve">
          <source>You can also write a series of &amp;lsquo;</source>
          <target state="translated">Tambi&amp;eacute;n puede escribir una serie de '</target>
        </trans-unit>
        <trans-unit id="9a5d42d9b4feab1feb11ac3d7558132f70441d15" translate="yes" xml:space="preserve">
          <source>You can combine this technique of naming elements with ordinary C initialization of successive elements. Each initializer element that does not have a designator applies to the next consecutive element of the array or structure. For example,</source>
          <target state="translated">Se puede combinar esta técnica de nombrar elementos con la inicialización C ordinaria de elementos sucesivos.Cada elemento inicializador que no tiene un designador se aplica al siguiente elemento consecutivo de la matriz o estructura.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="dafe9f6d4d43d75c6afd7b0ee12396460454db2d" translate="yes" xml:space="preserve">
          <source>You can compile C or C++ programs.</source>
          <target state="translated">Puedes compilar programas en C o C++.</target>
        </trans-unit>
        <trans-unit id="54a148541552bb61abf1cc1bf716d6d5d34812ff" translate="yes" xml:space="preserve">
          <source>You can declare variables and use them in function calls and returns, as well as in assignments and some casts. You can specify a vector type as a return type for a function. Vector types can also be used as function arguments. It is possible to cast from one vector type to another, provided they are of the same size (in fact, you can also cast vectors to and from other datatypes of the same size).</source>
          <target state="translated">Puedes declarar variables y usarlas en llamadas y devoluciones de funciones,así como en asignaciones y algunos yesos.Puedes especificar un tipo de vector como tipo de retorno para una función.Los tipos de vector también pueden ser utilizados como argumentos de la función.Es posible lanzar de un tipo de vector a otro,siempre y cuando sean del mismo tamaño (de hecho,también se pueden lanzar vectores hacia y desde otros tipos de datos del mismo tamaño).</target>
        </trans-unit>
        <trans-unit id="1ab5d021681ed2c7cdd4c44a866c9249ac2dea29" translate="yes" xml:space="preserve">
          <source>You can define a global register variable and associate it with a specified register like this:</source>
          <target state="translated">Puedes definir una variable de registro global y asociarla a un registro específico como este:</target>
        </trans-unit>
        <trans-unit id="77ca46933320ecebc543d5687d368957991075a9" translate="yes" xml:space="preserve">
          <source>You can define a local register variable and associate it with a specified register like this:</source>
          <target state="translated">Puedes definir una variable de registro local y asociarla a un registro específico como este:</target>
        </trans-unit>
        <trans-unit id="ca45e2aac1a5f53872ccff8b57eb4700a2d304e0" translate="yes" xml:space="preserve">
          <source>You can define an &lt;code&gt;enum&lt;/code&gt; tag without specifying its possible values. This results in an incomplete type, much like what you get if you write &lt;code&gt;struct foo&lt;/code&gt; without describing the elements. A later declaration that does specify the possible values completes the type.</source>
          <target state="translated">Puede definir una etiqueta de &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n sin especificar sus posibles valores. Esto da como resultado un tipo incompleto, muy parecido a lo que obtiene si escribe &lt;code&gt;struct foo&lt;/code&gt; sin describir los elementos. Una declaraci&amp;oacute;n posterior que especifica los valores posibles completa el tipo.</target>
        </trans-unit>
        <trans-unit id="fb2a1d08a5c520db79d7874dd1dd146adad124cb" translate="yes" xml:space="preserve">
          <source>You can easily find more examples by running the &amp;ldquo;strings&amp;rdquo; program on an Objective-C object file compiled by GCC. You&amp;rsquo;ll see a lot of strings that look very much like &lt;code&gt;i8@0:4&lt;/code&gt;. They are signatures of Objective-C methods.</source>
          <target state="translated">Puede encontrar f&amp;aacute;cilmente m&amp;aacute;s ejemplos ejecutando el programa &quot;strings&quot; en un archivo de objeto Objective-C compilado por GCC. Ver&amp;aacute; muchas cadenas que se parecen mucho a &lt;code&gt;i8@0:4&lt;/code&gt; . Son firmas de los m&amp;eacute;todos Objective-C.</target>
        </trans-unit>
        <trans-unit id="c91ff1d5bc0072fabb3f73c5cf99e1426b54e8b7" translate="yes" xml:space="preserve">
          <source>You can extract a function pointer to the method denoted by a &amp;lsquo;</source>
          <target state="translated">Puede extraer un puntero de funci&amp;oacute;n al m&amp;eacute;todo denotado por un '</target>
        </trans-unit>
        <trans-unit id="8a467dff38136e5694516c0b9fa42d9b5384c2d1" translate="yes" xml:space="preserve">
          <source>You can get the address of a label defined in the current function (or a containing function) with the unary operator &amp;lsquo;</source>
          <target state="translated">Puede obtener la direcci&amp;oacute;n de una etiqueta definida en la funci&amp;oacute;n actual (o una funci&amp;oacute;n contenedora) con el operador unario '</target>
        </trans-unit>
        <trans-unit id="66a39a597ab8644152ae7afe5488f241a221884a" translate="yes" xml:space="preserve">
          <source>You can locally override stack limit checking by using the &lt;code&gt;no_stack_limit&lt;/code&gt; function attribute (see &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt;).</source>
          <target state="translated">Puede anular localmente la comprobaci&amp;oacute;n del l&amp;iacute;mite de pila mediante el &lt;code&gt;no_stack_limit&lt;/code&gt; funci&amp;oacute;n no_stack_limit (consulte &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Atributos de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="017844d9ef74d08a2197a10acca046c6aa9a28bc" translate="yes" xml:space="preserve">
          <source>You can make</source>
          <target state="translated">Puedes hacer</target>
        </trans-unit>
        <trans-unit id="f287c383d16164fdc862549b5e329c619384b24c" translate="yes" xml:space="preserve">
          <source>You can mix options and other arguments. For the most part, the order you use doesn&amp;rsquo;t matter. Order does matter when you use several options of the same kind; for example, if you specify</source>
          <target state="translated">Puede mezclar opciones y otros argumentos. En su mayor parte, el orden que use no importa. El orden importa cuando utiliza varias opciones del mismo tipo; por ejemplo, si especifica</target>
        </trans-unit>
        <trans-unit id="a60d360fa80936234f5b0e4eae813689b9ce29d9" translate="yes" xml:space="preserve">
          <source>You can partially avoid this problem by using the</source>
          <target state="translated">Puede evitar parcialmente este problema usando el</target>
        </trans-unit>
        <trans-unit id="dd9e0967154278910b1a4d13c152f96dcaf35354" translate="yes" xml:space="preserve">
          <source>You can pass options to the assembler.</source>
          <target state="translated">Puedes pasar opciones al ensamblador.</target>
        </trans-unit>
        <trans-unit id="394017d54ef624457656b3872471fba70d98d59b" translate="yes" xml:space="preserve">
          <source>You can provide an argument to the interrupt attribute which specifies a name or number. If the argument is a number it indicates the slot in the interrupt vector table (0 - 31) to which this handler should be assigned. If the argument is a name it is treated as a symbolic name for the vector slot. These names should match up with appropriate entries in the linker script. By default the names &lt;code&gt;watchdog&lt;/code&gt; for vector 26, &lt;code&gt;nmi&lt;/code&gt; for vector 30 and &lt;code&gt;reset&lt;/code&gt; for vector 31 are recognized.</source>
          <target state="translated">Puede proporcionar un argumento al atributo de interrupci&amp;oacute;n que especifica un nombre o n&amp;uacute;mero. Si el argumento es un n&amp;uacute;mero, indica el espacio en la tabla de vectores de interrupci&amp;oacute;n (0 - 31) al que se debe asignar este manejador. Si el argumento es un nombre, se trata como un nombre simb&amp;oacute;lico para el espacio vectorial. Estos nombres deben coincidir con las entradas adecuadas en el script del vinculador. De forma predeterminada, se reconocen los nombres de &lt;code&gt;watchdog&lt;/code&gt; para el vector 26, &lt;code&gt;nmi&lt;/code&gt; para el vector 30 y &lt;code&gt;reset&lt;/code&gt; para el vector 31.</target>
        </trans-unit>
        <trans-unit id="21a34f7c6e1539af9716888a85e0e6ebdfedbecf" translate="yes" xml:space="preserve">
          <source>You can request many specific warnings with options beginning with &amp;lsquo;</source>
          <target state="translated">Puede solicitar muchas advertencias espec&amp;iacute;ficas con opciones que comienzan con '</target>
        </trans-unit>
        <trans-unit id="7fbbe3966a5814f26c4830b1276b72ab5f2dc01c" translate="yes" xml:space="preserve">
          <source>You can specify a range of consecutive values in a single &lt;code&gt;case&lt;/code&gt; label, like this:</source>
          <target state="translated">Puede especificar un rango de valores consecutivos en una sola etiqueta de &lt;code&gt;case&lt;/code&gt; , como esta:</target>
        </trans-unit>
        <trans-unit id="97b79ea591cef9266e325e711531c14dffd1c998" translate="yes" xml:space="preserve">
          <source>You can specify any number or combination of these options on the command line to search for header files in several directories. The lookup order is as follows:</source>
          <target state="translated">Puede especificar cualquier número o combinación de estas opciones en la línea de comandos para buscar archivos de encabezamiento en varios directorios.El orden de búsqueda es el siguiente:</target>
        </trans-unit>
        <trans-unit id="0856d34db6c364c78838eb5dc1f8a6703a890626" translate="yes" xml:space="preserve">
          <source>You can specify that an individual function is called with this calling sequence with the function attribute &lt;code&gt;stdcall&lt;/code&gt;. You can also override the</source>
          <target state="translated">Puede especificar que se llame a una funci&amp;oacute;n individual con esta secuencia de llamada con el atributo de funci&amp;oacute;n &lt;code&gt;stdcall&lt;/code&gt; . Tambi&amp;eacute;n puede anular el</target>
        </trans-unit>
        <trans-unit id="e32757ea6fc6362ed46b9b724d574c0143bee986" translate="yes" xml:space="preserve">
          <source>You can specify the input language explicitly with the</source>
          <target state="translated">Puede especificar el idioma de entrada explícitamente con el</target>
        </trans-unit>
        <trans-unit id="5a6c68a45d3cab174002900881189fc68df355b1" translate="yes" xml:space="preserve">
          <source>You can specify the kind of interrupt to be handled by adding an optional parameter to the interrupt attribute like this:</source>
          <target state="translated">Puede especificar el tipo de interrupción que se manejará agregando un parámetro opcional al atributo de interrupción de esta manera:</target>
        </trans-unit>
        <trans-unit id="eee1f7bf9410ab86d8dd30e2bec2be1b2b043010" translate="yes" xml:space="preserve">
          <source>You can specify the name to be used in the assembler code for a C function or variable by writing the &lt;code&gt;asm&lt;/code&gt; (or &lt;code&gt;__asm__&lt;/code&gt;) keyword after the declarator. It is up to you to make sure that the assembler names you choose do not conflict with any other assembler symbols, or reference registers.</source>
          <target state="translated">Puede especificar el nombre que se utilizar&amp;aacute; en el c&amp;oacute;digo ensamblador para una funci&amp;oacute;n o variable de C escribiendo la palabra clave &lt;code&gt;asm&lt;/code&gt; (o &lt;code&gt;__asm__&lt;/code&gt; ) despu&amp;eacute;s del declarador. Depende de usted asegurarse de que los nombres de ensamblador que elija no entren en conflicto con ning&amp;uacute;n otro s&amp;iacute;mbolo de ensamblador o registros de referencia.</target>
        </trans-unit>
        <trans-unit id="30703f7905f24c8604a78167a64a5e3a31da9d67" translate="yes" xml:space="preserve">
          <source>You can switch the warning off for all characters by writing</source>
          <target state="translated">Puedes desactivar la advertencia para todos los personajes escribiendo</target>
        </trans-unit>
        <trans-unit id="95dff15ddf46fdf8429aae6e46c8c16ce4977196" translate="yes" xml:space="preserve">
          <source>You can tell GCC to use a compatible convention for all structure and union returning with the option</source>
          <target state="translated">Puedes decirle al GCC que use una convención compatible para todas las estructuras y sindicatos que regresen con la opción</target>
        </trans-unit>
        <trans-unit id="3c94090f45521fa505560d818d146d87684fe4b4" translate="yes" xml:space="preserve">
          <source>You can use</source>
          <target state="translated">Puedes usar</target>
        </trans-unit>
        <trans-unit id="4f81d4b126c2797fc5e8e7dc1694c11a9c296047" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;__declspec(dllexport)&lt;/code&gt; as a synonym for &lt;code&gt;__attribute__ ((dllexport))&lt;/code&gt; for compatibility with other compilers.</source>
          <target state="translated">Puede usar &lt;code&gt;__declspec(dllexport)&lt;/code&gt; como sin&amp;oacute;nimo de &lt;code&gt;__attribute__ ((dllexport))&lt;/code&gt; para compatibilidad con otros compiladores.</target>
        </trans-unit>
        <trans-unit id="50005d4562495b37fc24571844dc1743ca746f4c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;__declspec(dllimport)&lt;/code&gt; as a synonym for &lt;code&gt;__attribute__ ((dllimport))&lt;/code&gt; for compatibility with other compilers.</source>
          <target state="translated">Puede usar &lt;code&gt;__declspec(dllimport)&lt;/code&gt; como sin&amp;oacute;nimo de &lt;code&gt;__attribute__ ((dllimport))&lt;/code&gt; para compatibilidad con otros compiladores.</target>
        </trans-unit>
        <trans-unit id="86cd667b81efa67cbffa6feec930a1fbdb8eae9f" translate="yes" xml:space="preserve">
          <source>You can use a single C++ header file for both declarations and definitions.</source>
          <target state="translated">Se puede utilizar un solo archivo de encabezamiento C++tanto para las declaraciones como para las definiciones.</target>
        </trans-unit>
        <trans-unit id="9d208552bb3a27bb1eed945c45c53009e9054861" translate="yes" xml:space="preserve">
          <source>You can use any combination of these attributes, as shown below:</source>
          <target state="translated">Puede utilizar cualquier combinación de estos atributos,como se muestra a continuación:</target>
        </trans-unit>
        <trans-unit id="db76755964be4e6b6be71f9e85d1a8d93663640f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;copy&lt;/code&gt; attribute to apply the same set of attributes to a declaration as that on another declaration without explicitly enumerating the attributes. This attribute can be applied to declarations of functions (see &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt;), variables (see &lt;a href=&quot;common-variable-attributes#Common-Variable-Attributes&quot;&gt;Common Variable Attributes&lt;/a&gt;), or types (see &lt;a href=&quot;common-type-attributes#Common-Type-Attributes&quot;&gt;Common Type Attributes&lt;/a&gt;).</source>
          <target state="translated">Puede utilizar el atributo de &lt;code&gt;copy&lt;/code&gt; para aplicar el mismo conjunto de atributos a una declaraci&amp;oacute;n que en otra declaraci&amp;oacute;n sin enumerar expl&amp;iacute;citamente los atributos. Este atributo se puede aplicar a declaraciones de funciones (consulte &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Atributos de funciones comunes&lt;/a&gt; ), variables (consulte &lt;a href=&quot;common-variable-attributes#Common-Variable-Attributes&quot;&gt;Atributos de variables comunes&lt;/a&gt; ) o tipos (consulte &lt;a href=&quot;common-type-attributes#Common-Type-Attributes&quot;&gt;Atributos de tipo com&amp;uacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="89b5b15d997a3489b69c6b152372fee0f86bbdac" translate="yes" xml:space="preserve">
          <source>You can use the built-in function &lt;code&gt;__builtin_choose_expr&lt;/code&gt; to evaluate code depending on the value of a constant expression. This built-in function returns &lt;var&gt;exp1&lt;/var&gt; if &lt;var&gt;const_exp&lt;/var&gt;, which is an integer constant expression, is nonzero. Otherwise it returns &lt;var&gt;exp2&lt;/var&gt;.</source>
          <target state="translated">Puede utilizar la funci&amp;oacute;n &lt;code&gt;__builtin_choose_expr&lt;/code&gt; para evaluar el c&amp;oacute;digo seg&amp;uacute;n el valor de una expresi&amp;oacute;n constante. Esta funci&amp;oacute;n &lt;var&gt;exp1&lt;/var&gt; devuelve exp1 si &lt;var&gt;const_exp&lt;/var&gt; , que es una expresi&amp;oacute;n constante entera, es distinta de cero. De lo contrario, devuelve &lt;var&gt;exp2&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5fd9fec295629e67098066cf6cb3c9ec92e5bb68" translate="yes" xml:space="preserve">
          <source>You can use the built-in function &lt;code&gt;__builtin_constant_p&lt;/code&gt; to determine if a value is known to be constant at compile time and hence that GCC can perform constant-folding on expressions involving that value. The argument of the function is the value to test. The function returns the integer 1 if the argument is known to be a compile-time constant and 0 if it is not known to be a compile-time constant. A return of 0 does not indicate that the value is &lt;em&gt;not&lt;/em&gt; a constant, but merely that GCC cannot prove it is a constant with the specified value of the</source>
          <target state="translated">Puede usar la funci&amp;oacute;n &lt;code&gt;__builtin_constant_p&lt;/code&gt; para determinar si se sabe que un valor es constante en el momento de la compilaci&amp;oacute;n y, por lo tanto, GCC puede realizar un plegado constante en expresiones que involucren ese valor. El argumento de la funci&amp;oacute;n es el valor a probar. La funci&amp;oacute;n devuelve el entero 1 si se sabe que el argumento es una constante en tiempo de compilaci&amp;oacute;n y 0 si no se sabe que sea una constante en tiempo de compilaci&amp;oacute;n. Un retorno de 0 no indica que el valor &lt;em&gt;no sea&lt;/em&gt; una constante, sino simplemente que GCC no puede probar que es una constante con el valor especificado de la</target>
        </trans-unit>
        <trans-unit id="9782a2381707d838ed59767d72501592b95036b5" translate="yes" xml:space="preserve">
          <source>You can use the built-in function &lt;code&gt;__builtin_types_compatible_p&lt;/code&gt; to determine whether two types are the same.</source>
          <target state="translated">Puede utilizar la funci&amp;oacute;n &lt;code&gt;__builtin_types_compatible_p&lt;/code&gt; para determinar si dos tipos son iguales.</target>
        </trans-unit>
        <trans-unit id="43fa60b9360490e7ba0b03452edb689c2650070f" translate="yes" xml:space="preserve">
          <source>You can use the following attributes to modify the behavior of an interrupt handler:</source>
          <target state="translated">Puedes usar los siguientes atributos para modificar el comportamiento de un manejador de interrupciones:</target>
        </trans-unit>
        <trans-unit id="02c72ec7b7bacac9ecd4a1fee983fedeb76ad118" translate="yes" xml:space="preserve">
          <source>You can use the function &lt;code&gt;alloca&lt;/code&gt; to get an effect much like variable-length arrays. The function &lt;code&gt;alloca&lt;/code&gt; is available in many other C implementations (but not in all). On the other hand, variable-length arrays are more elegant.</source>
          <target state="translated">Puede usar la funci&amp;oacute;n &lt;code&gt;alloca&lt;/code&gt; para obtener un efecto muy parecido a las matrices de longitud variable. La funci&amp;oacute;n &lt;code&gt;alloca&lt;/code&gt; est&amp;aacute; disponible en muchas otras implementaciones de C (pero no en todas). Por otro lado, las matrices de longitud variable son m&amp;aacute;s elegantes.</target>
        </trans-unit>
        <trans-unit id="50e67953531648188b117541d8b8b4fa30e96296" translate="yes" xml:space="preserve">
          <source>You can use the function attribute &lt;code&gt;no_instrument_function&lt;/code&gt; to suppress profiling of individual functions when compiling with these options. See &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt;.</source>
          <target state="translated">Puede utilizar el atributo de funci&amp;oacute;n &lt;code&gt;no_instrument_function&lt;/code&gt; para suprimir la creaci&amp;oacute;n de perfiles de funciones individuales al compilar con estas opciones. Consulte &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Atributos de funciones comunes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0525436fc5cc0248b7f78e573bd26eb006c5427" translate="yes" xml:space="preserve">
          <source>You can use the sequence &amp;lsquo;</source>
          <target state="translated">Puedes usar la secuencia '</target>
        </trans-unit>
        <trans-unit id="25c48302e37cab0b76739d2efc98f5300353b6c4" translate="yes" xml:space="preserve">
          <source>You can use these attributes on Microsoft Windows targets. &lt;a href=&quot;variable-attributes#x86-Variable-Attributes&quot;&gt;x86 Variable Attributes&lt;/a&gt; for additional Windows compatibility attributes available on all x86 targets.</source>
          <target state="translated">Puede utilizar estos atributos en destinos de Microsoft Windows. &lt;a href=&quot;variable-attributes#x86-Variable-Attributes&quot;&gt;Atributos variables x86&lt;/a&gt; para atributos adicionales de compatibilidad de Windows disponibles en todos los destinos x86.</target>
        </trans-unit>
        <trans-unit id="349076840f0960c3892315d6f39c00e2e8d77252" translate="yes" xml:space="preserve">
          <source>You can use these types in arithmetic like any other integer types. Addition, subtraction, and bitwise boolean operations on these types are open-coded on all types of machines. Multiplication is open-coded if the machine supports a fullword-to-doubleword widening multiply instruction. Division and shifts are open-coded only on machines that provide special support. The operations that are not open-coded use special library routines that come with GCC.</source>
          <target state="translated">Puedes usar estos tipos en aritmética como cualquier otro tipo de números enteros.Las operaciones de suma,resta y operaciones booleanas de estos tipos son de código abierto en todos los tipos de máquinas.La multiplicación es de código abierto si la máquina soporta una instrucción de multiplicación de ensanchamiento de palabra a palabra.La división y los turnos son de código abierto sólo en las máquinas que proporcionan un apoyo especial.Las operaciones que no son de código abierto utilizan rutinas especiales de biblioteca que vienen con GCC.</target>
        </trans-unit>
        <trans-unit id="5aa1044e05ab82d1a453a9feb88c6b31c8d70c35" translate="yes" xml:space="preserve">
          <source>You can use this pragma to control how many times a loop should be unrolled. It must be placed immediately before a &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt; loop or a &lt;code&gt;#pragma GCC ivdep&lt;/code&gt;, and applies only to the loop that follows. &lt;var&gt;n&lt;/var&gt; is an integer constant expression specifying the unrolling factor. The values of &lt;em&gt;0&lt;/em&gt; and &lt;em&gt;1&lt;/em&gt; block any unrolling of the loop.</source>
          <target state="translated">Puede usar este pragma para controlar cu&amp;aacute;ntas veces se debe desenrollar un bucle. Debe colocarse inmediatamente antes de un bucle &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; o &lt;code&gt;do&lt;/code&gt; o un &lt;code&gt;#pragma GCC ivdep&lt;/code&gt; , y se aplica solo al bucle que sigue. &lt;var&gt;n&lt;/var&gt; es una expresi&amp;oacute;n constante entera que especifica el factor de desenrollado. Los valores de &lt;em&gt;0&lt;/em&gt; y &lt;em&gt;1&lt;/em&gt; bloquean cualquier desenrollado del bucle.</target>
        </trans-unit>
        <trans-unit id="d29715d375c9f43b63580c5f152e79229b459a6b" translate="yes" xml:space="preserve">
          <source>You can write any number of such parameter forward declarations in the parameter list. They can be separated by commas or semicolons, but the last one must end with a semicolon, which is followed by the &amp;ldquo;real&amp;rdquo; parameter declarations. Each forward declaration must match a &amp;ldquo;real&amp;rdquo; declaration in parameter name and data type. ISO C99 does not support parameter forward declarations.</source>
          <target state="translated">Puede escribir cualquier n&amp;uacute;mero de dichas declaraciones de reenv&amp;iacute;o de par&amp;aacute;metros en la lista de par&amp;aacute;metros. Pueden estar separados por comas o punto y coma, pero el &amp;uacute;ltimo debe terminar con punto y coma, seguido de las declaraciones de par&amp;aacute;metros &amp;ldquo;reales&amp;rdquo;. Cada declaraci&amp;oacute;n hacia adelante debe coincidir con una declaraci&amp;oacute;n &quot;real&quot; en el nombre del par&amp;aacute;metro y el tipo de datos. ISO C99 no admite declaraciones de reenv&amp;iacute;o de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="4d285fcb57d29c445f5c75a81399654db437434b" translate="yes" xml:space="preserve">
          <source>You cannot allocate variables or storage using the type while it is incomplete. However, you can work with pointers to that type.</source>
          <target state="translated">No se pueden asignar variables o almacenamiento utilizando el tipo mientras esté incompleto.Sin embargo,puedes trabajar con punteros a ese tipo.</target>
        </trans-unit>
        <trans-unit id="53335da409471fbe7935a617fd9f6ebf473abc26" translate="yes" xml:space="preserve">
          <source>You cannot operate between vectors of different lengths or different signedness without a cast.</source>
          <target state="translated">No se puede operar entre vectores de diferente longitud o diferente significación sin un molde.</target>
        </trans-unit>
        <trans-unit id="13abf1800307e25590d2602f0489f433955f9bc6" translate="yes" xml:space="preserve">
          <source>You have freedom to copy and modify this GNU Manual, like GNU software. Copies published by the Free Software Foundation raise funds for GNU development.</source>
          <target state="translated">Tiene libertad para copiar y modificar este Manual de GNU,como el software de GNU.Las copias publicadas por la Fundación para el Software Libre recaudan fondos para el desarrollo de GNU.</target>
        </trans-unit>
        <trans-unit id="35918096a4cd3290ec21ef1581f71b03f35bc6de" translate="yes" xml:space="preserve">
          <source>You have the following options for dealing with template instantiations:</source>
          <target state="translated">Tiene las siguientes opciones para tratar con las instancias de la plantilla:</target>
        </trans-unit>
        <trans-unit id="83ae29ebda55f943f2de3641f83fdea66157c750" translate="yes" xml:space="preserve">
          <source>You have to expect a certain amount of disagreement between the executable and your source code, when you use optimization.</source>
          <target state="translated">Tienes que esperar un cierto desacuerdo entre el ejecutable y tu código fuente,cuando usas la optimización.</target>
        </trans-unit>
        <trans-unit id="c18143538d54c0195224945ef42bc5ea23853737" translate="yes" xml:space="preserve">
          <source>You may also specify whether a member function&amp;rsquo;s &lt;var&gt;this&lt;/var&gt; pointer is unaliased by using &lt;code&gt;__restrict__&lt;/code&gt; as a member function qualifier.</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar si de una funci&amp;oacute;n miembro de &lt;var&gt;this&lt;/var&gt; puntero es unaliased utilizando &lt;code&gt;__restrict__&lt;/code&gt; como calificador funci&amp;oacute;n miembro.</target>
        </trans-unit>
        <trans-unit id="3c9c1785a9b73c6c0c84000e89963aae3de9c571" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;__builtin_constant_p&lt;/code&gt; in initializers for static data. For instance, you can write</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;__builtin_constant_p&lt;/code&gt; en inicializadores para datos est&amp;aacute;ticos. Por ejemplo, puedes escribir</target>
        </trans-unit>
        <trans-unit id="77816405062bcfbd54b0c2d088c0cfe9f5a2c604" translate="yes" xml:space="preserve">
          <source>You may mark a method as having a visibility explicitly to negate the effect of the switch for that method. For example, if you do want to compare pointers to a particular inline method, you might mark it as having default visibility. Marking the enclosing class with explicit visibility has no effect.</source>
          <target state="translated">Puede marcar un método como visible explícitamente para negar el efecto del interruptor de ese método.Por ejemplo,si desea comparar punteros con un método en línea particular,puede marcarlo como de visibilidad predeterminada.Marcar la clase cerrada con visibilidad explícita no tiene ningún efecto.</target>
        </trans-unit>
        <trans-unit id="e445da5feb655d87cca8dbc770cb3f7e24dc970f" translate="yes" xml:space="preserve">
          <source>You may need to experiment to determine the best settings for your application.</source>
          <target state="translated">Es posible que tenga que experimentar para determinar los mejores ajustes para su aplicación.</target>
        </trans-unit>
        <trans-unit id="bad95174418ab8218d171a6375d9166859a034cf" translate="yes" xml:space="preserve">
          <source>You may need to specify</source>
          <target state="translated">Es posible que tenga que especificar</target>
        </trans-unit>
        <trans-unit id="48a08602699410d27da97f57d05daf9841a17a43" translate="yes" xml:space="preserve">
          <source>You may not use this mechanism to jump to code in a different function. If you do that, totally unpredictable things happen. The best way to avoid this is to store the label address only in automatic variables and never pass it as an argument.</source>
          <target state="translated">No puedes usar este mecanismo para saltar al código en una función diferente.Si lo haces,ocurren cosas totalmente impredecibles.La mejor manera de evitar esto es almacenar la dirección de la etiqueta sólo en variables automáticas y nunca pasarla como argumento.</target>
        </trans-unit>
        <trans-unit id="bff5113fa76e9e5005f3a00a7843919b5149c765" translate="yes" xml:space="preserve">
          <source>You may only specify the &lt;code&gt;packed&lt;/code&gt; attribute on the definition of an &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, or &lt;code&gt;class&lt;/code&gt;, not on a &lt;code&gt;typedef&lt;/code&gt; that does not also define the enumerated type, structure, union, or class.</source>
          <target state="translated">S&amp;oacute;lo se puede especificar el &lt;code&gt;packed&lt;/code&gt; atributo en la definici&amp;oacute;n de una &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n , &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; , o &lt;code&gt;class&lt;/code&gt; , no en un &lt;code&gt;typedef&lt;/code&gt; que no lo hace tambi&amp;eacute;n a definir el tipo, la estructura, uni&amp;oacute;n o tipo enumerado.</target>
        </trans-unit>
        <trans-unit id="54442d3018c5bf124a5cec286579f5b0f4a37809" translate="yes" xml:space="preserve">
          <source>You may only use the &lt;code&gt;shared&lt;/code&gt; attribute along with &lt;code&gt;section&lt;/code&gt; attribute with a fully-initialized global definition because of the way linkers work. See &lt;code&gt;section&lt;/code&gt; attribute for more information.</source>
          <target state="translated">Solo puede usar el atributo &lt;code&gt;shared&lt;/code&gt; junto con el atributo de &lt;code&gt;section&lt;/code&gt; con una definici&amp;oacute;n global completamente inicializada debido a la forma en que funcionan los enlazadores. Consulte el atributo de &lt;code&gt;section&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9c7b80e390300159d4993b9cd813e610830fb794" translate="yes" xml:space="preserve">
          <source>You may optionally specify attribute names with &amp;lsquo;</source>
          <target state="translated">Opcionalmente, puede especificar nombres de atributos con '</target>
        </trans-unit>
        <trans-unit id="b744bc45d5f9c7b517250c91d7d9ce559fd58615" translate="yes" xml:space="preserve">
          <source>You may place multiple assembler instructions together in a single &lt;code&gt;asm&lt;/code&gt; string, separated by the characters normally used in assembly code for the system. A combination that works in most places is a newline to break the line, plus a tab character (written as &amp;lsquo;</source>
          <target state="translated">Es posible colocar varias instrucciones de ensamblador juntos en un solo &lt;code&gt;asm&lt;/code&gt; cadena, separados por los caracteres utilizados normalmente en c&amp;oacute;digo ensamblador para el sistema. Una combinaci&amp;oacute;n que funciona en la mayor&amp;iacute;a de los lugares es una nueva l&amp;iacute;nea para romper la l&amp;iacute;nea, m&amp;aacute;s un car&amp;aacute;cter de tabulaci&amp;oacute;n (escrito como '</target>
        </trans-unit>
        <trans-unit id="c17cdd78fed8e2f19f13ed7c6a72d4082d16e577" translate="yes" xml:space="preserve">
          <source>You may place multiple assembler instructions together in a single &lt;code&gt;asm&lt;/code&gt; string, separated by the characters normally used in assembly code for the system. A combination that works in most places is a newline to break the line, plus a tab character to move to the instruction field (written as &amp;lsquo;</source>
          <target state="translated">Es posible colocar varias instrucciones de ensamblador juntos en un solo &lt;code&gt;asm&lt;/code&gt; cadena, separados por los caracteres utilizados normalmente en c&amp;oacute;digo ensamblador para el sistema. Una combinaci&amp;oacute;n que funciona en la mayor&amp;iacute;a de los lugares es una nueva l&amp;iacute;nea para romper la l&amp;iacute;nea, m&amp;aacute;s un car&amp;aacute;cter de tabulaci&amp;oacute;n para moverse al campo de instrucci&amp;oacute;n (escrito como '</target>
        </trans-unit>
        <trans-unit id="f0570114f2ecbb2dbeed78e2cafecfaebd377566" translate="yes" xml:space="preserve">
          <source>You may specify type attributes in an enum, struct or union type declaration or definition by placing them immediately after the &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt; keyword. You can also place them just past the closing curly brace of the definition, but this is less preferred because logically the type should be fully defined at the closing brace.</source>
          <target state="translated">Puede especificar atributos de tipo en una declaraci&amp;oacute;n o definici&amp;oacute;n de tipo enum, struct o union coloc&amp;aacute;ndolos inmediatamente despu&amp;eacute;s de la palabra clave &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; o &lt;code&gt;enum&lt;/code&gt; . Tambi&amp;eacute;n puede colocarlos justo despu&amp;eacute;s de la llave de cierre de la definici&amp;oacute;n, pero esto es menos preferido porque, l&amp;oacute;gicamente, el tipo debe estar completamente definido en la llave de cierre.</target>
        </trans-unit>
        <trans-unit id="1fcc73998e38d45743d93a8c5804d34b2fb5bae5" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;__builtin_expect&lt;/code&gt; to provide the compiler with branch prediction information. In general, you should prefer to use actual profile feedback for this (</source>
          <target state="translated">Puede usar &lt;code&gt;__builtin_expect&lt;/code&gt; para proporcionar al compilador informaci&amp;oacute;n de predicci&amp;oacute;n de rama. En general, deber&amp;iacute;a preferir utilizar comentarios de perfil reales para esto (</target>
        </trans-unit>
        <trans-unit id="dd9213edd154d9e31cb91aff441ba460289ac018" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;section&lt;/code&gt; attribute with initialized or uninitialized global variables but the linker requires each object be defined once, with the exception that uninitialized variables tentatively go in the &lt;code&gt;common&lt;/code&gt; (or &lt;code&gt;bss&lt;/code&gt;) section and can be multiply &amp;ldquo;defined&amp;rdquo;. Using the &lt;code&gt;section&lt;/code&gt; attribute changes what section the variable goes into and may cause the linker to issue an error if an uninitialized variable has multiple definitions. You can force a variable to be initialized with the</source>
          <target state="translated">Puede utilizar el atributo de &lt;code&gt;section&lt;/code&gt; con variables globales inicializadas o no inicializadas, pero el vinculador requiere que cada objeto se defina una vez, con la excepci&amp;oacute;n de que las variables no inicializadas van provisionalmente en la secci&amp;oacute;n &lt;code&gt;common&lt;/code&gt; (o &lt;code&gt;bss&lt;/code&gt; ) y se pueden &amp;ldquo;definir&amp;rdquo; multiplicar. El uso del atributo de &lt;code&gt;section&lt;/code&gt; cambia la secci&amp;oacute;n en la que entra la variable y puede hacer que el vinculador emita un error si una variable no inicializada tiene varias definiciones. Puede forzar la inicializaci&amp;oacute;n de una variable con el</target>
        </trans-unit>
        <trans-unit id="0897ffec25d2d3e9ff5e4c9a12cc715a05821b36" translate="yes" xml:space="preserve">
          <source>You may use this built-in function in either a macro or an inline function. However, if you use it in an inlined function and pass an argument of the function as the argument to the built-in, GCC never returns 1 when you call the inline function with a string constant or compound literal (see &lt;a href=&quot;compound-literals#Compound-Literals&quot;&gt;Compound Literals&lt;/a&gt;) and does not return 1 when you pass a constant numeric value to the inline function unless you specify the</source>
          <target state="translated">Puede utilizar esta funci&amp;oacute;n incorporada en una macro o en una funci&amp;oacute;n en l&amp;iacute;nea. Sin embargo, si lo usa en una funci&amp;oacute;n en l&amp;iacute;nea y pasa un argumento de la funci&amp;oacute;n como argumento a la funci&amp;oacute;n incorporada, GCC nunca devuelve 1 cuando llama a la funci&amp;oacute;n en l&amp;iacute;nea con una constante de cadena o un literal compuesto (consulte &lt;a href=&quot;compound-literals#Compound-Literals&quot;&gt;Literales compuestos&lt;/a&gt; ) y no no devolver 1 cuando pasa un valor num&amp;eacute;rico constante a la funci&amp;oacute;n en l&amp;iacute;nea a menos que especifique el</target>
        </trans-unit>
        <trans-unit id="179c17b93d49191ff63b1b0b1b00b166383a79b3" translate="yes" xml:space="preserve">
          <source>You must move the data files to the expected directory tree in order to use them for profile directed optimizations (</source>
          <target state="translated">Debe mover los archivos de datos al árbol de directorios previsto para utilizarlos en las optimizaciones dirigidas al perfil (</target>
        </trans-unit>
        <trans-unit id="65535d14a26d4547fe9b855313a51330599397c9" translate="yes" xml:space="preserve">
          <source>You must never create such structures that cause ambiguous field definitions. For example, in this structure:</source>
          <target state="translated">Nunca debe crear tales estructuras que causen definiciones de campo ambiguas.Por ejemplo,en esta estructura:</target>
        </trans-unit>
        <trans-unit id="364d53586a93cb7dd4166336e04c54defad73c15" translate="yes" xml:space="preserve">
          <source>You must specify</source>
          <target state="translated">Debe especificar</target>
        </trans-unit>
        <trans-unit id="a0fd70e362d1f4b760a9cd038d96c07ea7f21b49" translate="yes" xml:space="preserve">
          <source>You must use GAS and GLD from GNU binutils version 2.7 or later for this attribute to work correctly.</source>
          <target state="translated">Debes usar GAS y GLD de GNU binutils versión 2.7 o posterior para que este atributo funcione correctamente.</target>
        </trans-unit>
        <trans-unit id="6993ebfa9e3b6b6d6560ac8997eeb7ede6d0e9b1" translate="yes" xml:space="preserve">
          <source>You need this special case of the</source>
          <target state="translated">Necesitas este caso especial de la</target>
        </trans-unit>
        <trans-unit id="5a83a0c884ced5b1afbf8e0b73de9c85e4e8c7bb" translate="yes" xml:space="preserve">
          <source>You should be prepared for side effects when using</source>
          <target state="translated">Debe estar preparado para los efectos secundarios cuando use</target>
        </trans-unit>
        <trans-unit id="fc2603d33fd81fe37c5c600db9786f0599bb7f89" translate="yes" xml:space="preserve">
          <source>You should compile your code without optimization if you plan to use &lt;code&gt;gcov&lt;/code&gt; because the optimization, by combining some lines of code into one function, may not give you as much information as you need to look for &amp;lsquo;hot spots&amp;rsquo; where the code is using a great deal of computer time. Likewise, because &lt;code&gt;gcov&lt;/code&gt; accumulates statistics by line (at the lowest resolution), it works best with a programming style that places only one statement on each line. If you use complicated macros that expand to loops or to other control structures, the statistics are less helpful&amp;mdash;they only report on the line where the macro call appears. If your complex macros behave like functions, you can replace them with inline functions to solve this problem.</source>
          <target state="translated">Debe compilar su c&amp;oacute;digo sin optimizaci&amp;oacute;n si planea usar &lt;code&gt;gcov&lt;/code&gt; porque la optimizaci&amp;oacute;n, al combinar algunas l&amp;iacute;neas de c&amp;oacute;digo en una funci&amp;oacute;n, puede no brindarle tanta informaci&amp;oacute;n como necesita para buscar 'puntos calientes' donde el c&amp;oacute;digo usa un gran cantidad de tiempo en la computadora. Del mismo modo, debido a que &lt;code&gt;gcov&lt;/code&gt; acumula estad&amp;iacute;sticas por l&amp;iacute;nea (a la resoluci&amp;oacute;n m&amp;aacute;s baja), funciona mejor con un estilo de programaci&amp;oacute;n que coloca solo una declaraci&amp;oacute;n en cada l&amp;iacute;nea. Si utiliza macros complicadas que se expanden a bucles u otras estructuras de control, las estad&amp;iacute;sticas son menos &amp;uacute;tiles: solo informan sobre la l&amp;iacute;nea donde aparece la llamada de macro. Si sus macros complejas se comportan como funciones, puede reemplazarlas con funciones en l&amp;iacute;nea para resolver este problema.</target>
        </trans-unit>
        <trans-unit id="fe80fe3d98f647e191798f4bf1cd85c0708a7905" translate="yes" xml:space="preserve">
          <source>You should declare the jump buffer argument &lt;var&gt;buf&lt;/var&gt; to the built-in functions as:</source>
          <target state="translated">Usted debe declarar el argumento buffer de salto &lt;var&gt;buf&lt;/var&gt; a la incorporada en funciones como:</target>
        </trans-unit>
        <trans-unit id="7d1fbba229a2654e9c51633205d301f0603b772d" translate="yes" xml:space="preserve">
          <source>You should make no assumptions about receiving &lt;code&gt;+load&lt;/code&gt; in sibling classes when you write &lt;code&gt;+load&lt;/code&gt; of a class. The order in which sibling classes receive &lt;code&gt;+load&lt;/code&gt; is not guaranteed.</source>
          <target state="translated">No debe hacer suposiciones acerca de recibir &lt;code&gt;+load&lt;/code&gt; en clases de hermanos cuando escribe &lt;code&gt;+load&lt;/code&gt; de una clase. El orden en el que las clases de hermanos reciben &lt;code&gt;+load&lt;/code&gt; no est&amp;aacute; garantizado.</target>
        </trans-unit>
        <trans-unit id="3a466242a3e9760eaada5a308649a4f792fde67b" translate="yes" xml:space="preserve">
          <source>You should not write this &lt;code&gt;#pragma&lt;/code&gt; in your own code, but it is safe to edit the filename if the PCH file is available in a different location. The filename may be absolute or it may be relative to GCC&amp;rsquo;s current directory.</source>
          <target state="translated">No debe escribir este &lt;code&gt;#pragma&lt;/code&gt; en su propio c&amp;oacute;digo, pero es seguro editar el nombre del archivo si el archivo PCH est&amp;aacute; disponible en una ubicaci&amp;oacute;n diferente. El nombre del archivo puede ser absoluto o puede ser relativo al directorio actual de GCC.</target>
        </trans-unit>
        <trans-unit id="b5b58bacb34de248a5caa9e1d70684a5e3e9e81a" translate="yes" xml:space="preserve">
          <source>You should rewrite your code to avoid these warnings if you are concerned about the fact that code generated by G++ may not be binary compatible with code generated by other compilers.</source>
          <target state="translated">Debería reescribir su código para evitar estas advertencias si le preocupa el hecho de que el código generado por G++puede no ser binario compatible con el código generado por otros compiladores.</target>
        </trans-unit>
        <trans-unit id="3200321f5c777dbbacc4f9ef21ac598c37fa6c47" translate="yes" xml:space="preserve">
          <source>You typically use this function in an embedded application where memory is a critical resource. If you have some complex calculation, you may want it to be folded if it involves constants, but need to call a function if it does not. For example:</source>
          <target state="translated">Normalmente se utiliza esta función en una aplicación integrada donde la memoria es un recurso crítico.Si tiene algún cálculo complejo,puede querer que se pliegue si implica constantes,pero necesita llamar a una función si no lo hace.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b1963db30d39d58a295ec397d230925d0854ee73" translate="yes" xml:space="preserve">
          <source>You typically use this function in code whose execution varies depending on the arguments&amp;rsquo; types. For example:</source>
          <target state="translated">Normalmente utiliza esta funci&amp;oacute;n en c&amp;oacute;digo cuya ejecuci&amp;oacute;n var&amp;iacute;a seg&amp;uacute;n los tipos de argumentos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a382ebf878d522cc46ae079d7811d40f2d546d5e" translate="yes" xml:space="preserve">
          <source>You typically use this option to build a shared library dynamic loader. Itself a shared library, it must relocate itself in memory before it can find the variables and constants in its own data segment.</source>
          <target state="translated">Normalmente se usa esta opción para construir un cargador dinámico de biblioteca compartida.Al ser una biblioteca compartida,debe reubicarse en la memoria antes de poder encontrar las variables y constantes en su propio segmento de datos.</target>
        </trans-unit>
        <trans-unit id="ff2858040c7368b4f7687d2e4605dbe04fb48ce1" translate="yes" xml:space="preserve">
          <source>You use these options to specify which instructions are available on the processor you are using. The default value of these options is determined when configuring GCC. Specifying the</source>
          <target state="translated">Estas opciones se utilizan para especificar qué instrucciones están disponibles en el procesador que se está utilizando.El valor predeterminado de estas opciones se determina al configurar GCC.Especificar el</target>
        </trans-unit>
        <trans-unit id="afc6c45769ec18ef9f8f79510ff88d4f56540059" translate="yes" xml:space="preserve">
          <source>Zero</source>
          <target state="translated">Zero</target>
        </trans-unit>
        <trans-unit id="553f12b0c01c796a9c01fbfbed6d38920ed5b259" translate="yes" xml:space="preserve">
          <source>Zero-length arrays.</source>
          <target state="translated">Matrices de longitud cero.</target>
        </trans-unit>
        <trans-unit id="258478ec83495aa79136f18ffc9233ee1f0db5ed" translate="yes" xml:space="preserve">
          <source>Zero-length bit-fields following non-bit-field members are ignored:</source>
          <target state="translated">Los campos de bits de longitud cero que siguen a los miembros que no son de campo de bits son ignorados:</target>
        </trans-unit>
        <trans-unit id="0c2ceddaf3c2e5b315ce6df93a6d703e090097e2" translate="yes" xml:space="preserve">
          <source>[.A-Za-z]*</source>
          <target state="translated">[.A-Za-z]*</target>
        </trans-unit>
        <trans-unit id="abf3f56fd4893df51cec0f301e1d141ec4cf5a54" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;first&lt;/var&gt; ... &lt;var&gt;last&lt;/var&gt;] = &lt;var&gt;value&lt;/var&gt;</source>
          <target state="translated">[ &lt;var&gt;first&lt;/var&gt; ... &lt;var&gt;last&lt;/var&gt; ] = &lt;var&gt;value&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="893b2523426b47e65f5145303772e8166d192d46" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;index&lt;/var&gt;]</source>
          <target state="translated">[&lt;var&gt;index&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="96a90e0b102b000a44c98efbcdab9b6dee99bbd8" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;index&lt;/var&gt;] =</source>
          <target state="translated">[ &lt;var&gt;index&lt;/var&gt; ] =</target>
        </trans-unit>
        <trans-unit id="aaf8c573d70607ca295cc0cde78f8a6154aa6363" translate="yes" xml:space="preserve">
          <source>[&lt;var&gt;suffix&lt;/var&gt;] spec</source>
          <target state="translated">[ &lt;var&gt;suffix&lt;/var&gt; ] especificaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="323d9668ca564c93e740198e5fd45fcacecbe669" translate="yes" xml:space="preserve">
          <source>[dir/]include</source>
          <target state="translated">[dir/]include</target>
        </trans-unit>
        <trans-unit id="14aee59b80f3ae18852c214fd35ef6a55a3b42a6" translate="yes" xml:space="preserve">
          <source>[dir/]stage&lt;var&gt;N&lt;/var&gt;/</source>
          <target state="translated">[dir/]stage&lt;var&gt;N&lt;/var&gt;/</target>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="translated">\</target>
        </trans-unit>
        <trans-unit id="ec24514fcd2c759e6e733c1219e798f6a27080dd" translate="yes" xml:space="preserve">
          <source>\,</source>
          <target state="translated">\,</target>
        </trans-unit>
        <trans-unit id="80bcc8b02cd875c9c7b9dc9e6159a6cd886a4b36" translate="yes" xml:space="preserve">
          <source>\e</source>
          <target state="translated">\e</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="5260fdfe19fbab22b26fb10a5b1cdaa4e4d5fa1f" translate="yes" xml:space="preserve">
          <source>\n\t</source>
          <target state="translated">\n\t</target>
        </trans-unit>
        <trans-unit id="dd56ac3bfe32e89d0b9eada9071564fe17a96c3a" translate="yes" xml:space="preserve">
          <source>_&lt;var&gt;L&lt;/var&gt;</source>
          <target state="translated">_&lt;var&gt;L&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="f2b8017c21a3fa06728ebdd896c9f0840460e437" translate="yes" xml:space="preserve">
          <source>_&lt;var&gt;n&lt;/var&gt;</source>
          <target state="translated">_&lt;var&gt;n&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="bef0f1b1eda1a69cc6d7593689c6ad7764f8486b" translate="yes" xml:space="preserve">
          <source>_Complex double x;</source>
          <target state="translated">_Complejo doble x;</target>
        </trans-unit>
        <trans-unit id="be1a596019bc728455ca6e661ae186a03fbaf2a6" translate="yes" xml:space="preserve">
          <source>_Complex short int y;</source>
          <target state="translated">_Complex short int y;</target>
        </trans-unit>
        <trans-unit id="4efeab93d874226b7c2975a5130348c4a300a2cf" translate="yes" xml:space="preserve">
          <source>_MAX</source>
          <target state="translated">_MAX</target>
        </trans-unit>
        <trans-unit id="dde95929ec72357d1a78e9ef9086ad031a0699b2" translate="yes" xml:space="preserve">
          <source>_MIN</source>
          <target state="translated">_MIN</target>
        </trans-unit>
        <trans-unit id="9624af4051d439e5359b9152ec698ceaa0261659" translate="yes" xml:space="preserve">
          <source>__atomic</source>
          <target state="translated">__atomic</target>
        </trans-unit>
        <trans-unit id="011657d58155e0e3541069c651cbe40aace6f116" translate="yes" xml:space="preserve">
          <source>__atomic_thread_fence</source>
          <target state="translated">__atomic_thread_fence</target>
        </trans-unit>
        <trans-unit id="b5190ca2a20962ff5fe42fd3d915ec20ed74f142" translate="yes" xml:space="preserve">
          <source>__attribute__ ((aligned (16), packed))</source>
          <target state="translated">__attribute__ ((alineado (16), empaquetado))</target>
        </trans-unit>
        <trans-unit id="9763de6eac5cd7741fca26ac575ae576079de73c" translate="yes" xml:space="preserve">
          <source>__builtin_</source>
          <target state="translated">__builtin_</target>
        </trans-unit>
        <trans-unit id="9ffdd3b639dbcc260c36604d951401b356ebdfa9" translate="yes" xml:space="preserve">
          <source>__builtin_frame_address</source>
          <target state="translated">__builtin_frame_address</target>
        </trans-unit>
        <trans-unit id="77d71c429ddc63ee19bd5fc63e5f0770c3745449" translate="yes" xml:space="preserve">
          <source>__builtin_return_address</source>
          <target state="translated">__builtin_return_address</target>
        </trans-unit>
        <trans-unit id="090f89da9d6d5b98fdd005c2ae6006ce69c1facf" translate="yes" xml:space="preserve">
          <source>__f</source>
          <target state="translated">__f</target>
        </trans-unit>
        <trans-unit id="3535355516b8a7449fdf619b53778778636b0eea" translate="yes" xml:space="preserve">
          <source>__int128</source>
          <target state="translated">__int128</target>
        </trans-unit>
        <trans-unit id="39a41d9f01352f9be126d019a0f55223b6f117ec" translate="yes" xml:space="preserve">
          <source>__sync</source>
          <target state="translated">__sync</target>
        </trans-unit>
        <trans-unit id="36fb58f934823421b6f9498810790aeee97de129" translate="yes" xml:space="preserve">
          <source>__v850*__</source>
          <target state="translated">__v850*__</target>
        </trans-unit>
        <trans-unit id="e748065bbc4c0e6c0efc4285894458b89aaf5dff" translate="yes" xml:space="preserve">
          <source>_flush_cache</source>
          <target state="translated">_flush_cache</target>
        </trans-unit>
        <trans-unit id="43bf149a9ed61bc94557723db25e4af7f39d8d75" translate="yes" xml:space="preserve">
          <source>_foo</source>
          <target state="translated">_foo</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="20276f54b2fb0d6340042fdc1e284afc48a41106" translate="yes" xml:space="preserve">
          <source>a hard limit, disallowing more than that number in an instruction group. Otherwise, the limit is &amp;ldquo;soft&amp;rdquo;, meaning that non-memory operations are preferred when the limit is reached, but memory operations may still be scheduled.</source>
          <target state="translated">un l&amp;iacute;mite estricto, que rechaza m&amp;aacute;s de ese n&amp;uacute;mero en un grupo de instrucci&amp;oacute;n. De lo contrario, el l&amp;iacute;mite es &quot;suave&quot;, lo que significa que se prefieren las operaciones sin memoria cuando se alcanza el l&amp;iacute;mite, pero las operaciones con memoria a&amp;uacute;n pueden programarse.</target>
        </trans-unit>
        <trans-unit id="4d45fbf9e18e03187144f653f6c867ab6a4cb2ce" translate="yes" xml:space="preserve">
          <source>a signed doubleword</source>
          <target state="translated">una palabra doble firmada</target>
        </trans-unit>
        <trans-unit id="9efaa9ee2486d205847ff7f6eb2734e13064b3d6" translate="yes" xml:space="preserve">
          <source>a signed word</source>
          <target state="translated">una palabra firmada</target>
        </trans-unit>
        <trans-unit id="2e5e828ebf29441ab1d17abe9b59440764703bd5" translate="yes" xml:space="preserve">
          <source>a.c</source>
          <target state="translated">a.c</target>
        </trans-unit>
        <trans-unit id="2ef04052181a3bcb9eb40398327d275b7122b76b" translate="yes" xml:space="preserve">
          <source>a.c##x.h.gcov</source>
          <target state="translated">a.c##x.h.gcov</target>
        </trans-unit>
        <trans-unit id="937373b898e354572539c11778b8369b6021d02b" translate="yes" xml:space="preserve">
          <source>a.out</source>
          <target state="translated">a.out</target>
        </trans-unit>
        <trans-unit id="b9f85daa6f83cf02ce5c31913d1f64d3f5c8fade" translate="yes" xml:space="preserve">
          <source>a2</source>
          <target state="translated">a2</target>
        </trans-unit>
        <trans-unit id="62352d3d034a492b743d85067daad3ede5b2104b" translate="yes" xml:space="preserve">
          <source>aapcs</source>
          <target state="translated">aapcs</target>
        </trans-unit>
        <trans-unit id="cb76f70bd27803c92785136c45fbc376f9dd2652" translate="yes" xml:space="preserve">
          <source>aapcs-linux</source>
          <target state="translated">aapcs-linux</target>
        </trans-unit>
        <trans-unit id="973eb567623a16af6cc4b072efcf2388a12b9404" translate="yes" xml:space="preserve">
          <source>aarch64-*-*</source>
          <target state="translated">aarch64-*-*</target>
        </trans-unit>
        <trans-unit id="c10ebf10559ad9cfd389b344d22aa0551d5fd166" translate="yes" xml:space="preserve">
          <source>aarch64_be-*-*</source>
          <target state="translated">aarch64_be-*-*</target>
        </trans-unit>
        <trans-unit id="715a5d4d840064196cfa2f6763ef29067adb4d87" translate="yes" xml:space="preserve">
          <source>abi</source>
          <target state="translated">abi</target>
        </trans-unit>
        <trans-unit id="dcd67d1087e07b87a59bb90a9324a369479ccb75" translate="yes" xml:space="preserve">
          <source>abm</source>
          <target state="translated">abm</target>
        </trans-unit>
        <trans-unit id="f3bf4a18bc12d3fd665f34273aa77398ca033388" translate="yes" xml:space="preserve">
          <source>about invoking</source>
          <target state="translated">sobre la invocación</target>
        </trans-unit>
        <trans-unit id="de671ae4cf4c6f58efe6bf4db141ff43ea23375f" translate="yes" xml:space="preserve">
          <source>above). Currently, the following sets are defined:</source>
          <target state="translated">arriba).Actualmente,los siguientes conjuntos están definidos:</target>
        </trans-unit>
        <trans-unit id="614cd09c5357289d30936d7b18d4378a9149026f" translate="yes" xml:space="preserve">
          <source>above, generate Ada specs as child units of parent &lt;var&gt;unit&lt;/var&gt;.</source>
          <target state="translated">arriba, genere especificaciones de Ada como unidades secundarias de la &lt;var&gt;unit&lt;/var&gt; principal .</target>
        </trans-unit>
        <trans-unit id="76726f07acaef7a675fe282314fc6d7f44669323" translate="yes" xml:space="preserve">
          <source>accidentally contains floating-point operations, it is likely to suffer a link-time or run-time failure.</source>
          <target state="translated">contiene accidentalmente operaciones de punto flotante,es probable que sufra un fallo en el tiempo de enlace o en el tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="466afffe5fc6585663064937defed67d00d3e3b4" translate="yes" xml:space="preserve">
          <source>acml</source>
          <target state="translated">acml</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="798db27fb8836547e7eae5cbf51a015317e5a479" translate="yes" xml:space="preserve">
          <source>adds keywords &lt;code&gt;__vector&lt;/code&gt;, &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;__pixel&lt;/code&gt;, &lt;code&gt;pixel&lt;/code&gt;, &lt;code&gt;__bool&lt;/code&gt; and &lt;code&gt;bool&lt;/code&gt;. When compiling ISO C, the context-sensitive substitution of the keywords &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;pixel&lt;/code&gt; and &lt;code&gt;bool&lt;/code&gt; is disabled. To use them, you must include &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">agrega palabras clave &lt;code&gt;__vector&lt;/code&gt; , &lt;code&gt;vector&lt;/code&gt; , &lt;code&gt;__pixel&lt;/code&gt; , &lt;code&gt;pixel&lt;/code&gt; , &lt;code&gt;__bool&lt;/code&gt; y &lt;code&gt;bool&lt;/code&gt; . Al compilar ISO C, la sustituci&amp;oacute;n sensible al contexto de las palabras clave &lt;code&gt;vector&lt;/code&gt; , &lt;code&gt;pixel&lt;/code&gt; y &lt;code&gt;bool&lt;/code&gt; est&amp;aacute; deshabilitada. Para usarlos, debe incluir &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="6a4611cf85989cfb032315de1816f14ac9f3517b" translate="yes" xml:space="preserve">
          <source>adiw</source>
          <target state="translated">adiw</target>
        </trans-unit>
        <trans-unit id="70115ea66975f8392735da74af10a532c95caaf7" translate="yes" xml:space="preserve">
          <source>adx</source>
          <target state="translated">adx</target>
        </trans-unit>
        <trans-unit id="9b214a0fbc91794f9b2f7c03b2ffdadc705bb106" translate="yes" xml:space="preserve">
          <source>aes</source>
          <target state="translated">aes</target>
        </trans-unit>
        <trans-unit id="1ba7d6d2d5d6b99ecac4784439f26289cba856d4" translate="yes" xml:space="preserve">
          <source>align-stringops</source>
          <target state="translated">align-stringops</target>
        </trans-unit>
        <trans-unit id="3bea4606b8381d936b8f862d721bc4422652b565" translate="yes" xml:space="preserve">
          <source>aligned</source>
          <target state="translated">aligned</target>
        </trans-unit>
        <trans-unit id="a8d2e4967b2627fcbbcd7bab5490853d70874e12" translate="yes" xml:space="preserve">
          <source>aligns &lt;code&gt;long double&lt;/code&gt; to a 16-byte boundary by padding the &lt;code&gt;long double&lt;/code&gt; with an additional 32-bit zero.</source>
          <target state="translated">alinea el &lt;code&gt;long double&lt;/code&gt; con un l&amp;iacute;mite de 16 bytes rellenando el &lt;code&gt;long double&lt;/code&gt; con un cero adicional de 32 bits.</target>
        </trans-unit>
        <trans-unit id="3efdc33c698275c6bba0bfe0a5cc4bb1ae2af995" translate="yes" xml:space="preserve">
          <source>aligns functions to the next 32-byte boundary,</source>
          <target state="translated">alinea las funciones con el siguiente límite de 32 bytes,</target>
        </trans-unit>
        <trans-unit id="244280ce7bd1f8e5d39e22b8ef0ce1ca3d784e6f" translate="yes" xml:space="preserve">
          <source>aligns to the next 32-byte boundary only if this can be done by skipping 23 bytes or less,</source>
          <target state="translated">se alinea con el siguiente límite de 32 bytes sólo si esto puede hacerse saltándose 23 bytes o menos,</target>
        </trans-unit>
        <trans-unit id="cfa7e3dfee8e7262fa433d58f986a5d3347143cb" translate="yes" xml:space="preserve">
          <source>aligns to the next 32-byte boundary only if this can be done by skipping 6 bytes or less.</source>
          <target state="translated">se alinea con el siguiente límite de 32 bytes sólo si esto se puede hacer saltándose 6 bytes o menos.</target>
        </trans-unit>
        <trans-unit id="79635748432e8322454f167c344ee1a5dee023d5" translate="yes" xml:space="preserve">
          <source>aligns to the next 64-byte boundary if this can be done by skipping 6 bytes or less, otherwise aligns to the next 32-byte boundary if this can be done by skipping 2 bytes or less. If &lt;var&gt;m2&lt;/var&gt; is not specified, it defaults to &lt;var&gt;n2&lt;/var&gt;.</source>
          <target state="translated">se alinea con el siguiente l&amp;iacute;mite de 64 bytes si esto se puede hacer omitiendo 6 bytes o menos; de lo contrario, se alinea con el siguiente l&amp;iacute;mite de 32 bytes si esto se puede hacer omitiendo 2 bytes o menos. Si no se especifica &lt;var&gt;m2&lt;/var&gt; , el valor predeterminado es &lt;var&gt;n2&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="a8901683ad5f4f61f902c68d29d69c8b1ad5d90d" translate="yes" xml:space="preserve">
          <source>all external symbols are resolved at load time.</source>
          <target state="translated">todos los símbolos externos se resuelven en el momento de la carga.</target>
        </trans-unit>
        <trans-unit id="bbe28b8276e31a373247e1c8a94a3beb37c5b6fa" translate="yes" xml:space="preserve">
          <source>all.h</source>
          <target state="translated">all.h</target>
        </trans-unit>
        <trans-unit id="3b0a792c2b1703577a069f12d469a0473536a471" translate="yes" xml:space="preserve">
          <source>all.h.gch</source>
          <target state="translated">all.h.gch</target>
        </trans-unit>
        <trans-unit id="b9bf38b9b4d225abc840bc0ee7480fcc2434e2b3" translate="yes" xml:space="preserve">
          <source>allclass.cc</source>
          <target state="translated">allclass.cc</target>
        </trans-unit>
        <trans-unit id="ca4599448f2501f9fa384de7b7038a3e242e0dfb" translate="yes" xml:space="preserve">
          <source>allocation of or sending messages to arbitrary objects;</source>
          <target state="translated">asignación o envío de mensajes a objetos arbitrarios;</target>
        </trans-unit>
        <trans-unit id="32b74672543fdbbdcfc868ba07acb1ff2110d200" translate="yes" xml:space="preserve">
          <source>allocation of or sending messages to objects whose classes have a category implemented in the same file;</source>
          <target state="translated">asignación o envío de mensajes a objetos cuyas clases tienen una categoría implementada en el mismo archivo;</target>
        </trans-unit>
        <trans-unit id="453b7342a6d3f523c8d652e090720e4f47db0bd8" translate="yes" xml:space="preserve">
          <source>allow you to switch between producing output that works with the GNU Objective-C runtime library and output that works with the Apple/NeXT Objective-C runtime library.</source>
          <target state="translated">le permiten cambiar entre la producción de salida que funciona con la biblioteca de tiempo de ejecución de Objective-C de GNU y la salida que funciona con la biblioteca de tiempo de ejecución de Objective-C de Apple/NeXT.</target>
        </trans-unit>
        <trans-unit id="dd4aebec0f6653650ee91987b02de80dc8963201" translate="yes" xml:space="preserve">
          <source>allowing the user to call &lt;code&gt;memcpy&lt;/code&gt; as a regular function, unaware of the actual implementation. Finally, the indirect function needs to be defined in the same translation unit as the resolver function:</source>
          <target state="translated">permitiendo al usuario llamar a &lt;code&gt;memcpy&lt;/code&gt; como una funci&amp;oacute;n regular, sin darse cuenta de la implementaci&amp;oacute;n real. Finalmente, la funci&amp;oacute;n indirecta debe definirse en la misma unidad de traducci&amp;oacute;n que la funci&amp;oacute;n de resoluci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="66438aaa4bea9ecc573f56890befc19245624f30" translate="yes" xml:space="preserve">
          <source>allows GCC to generate code that may not run at all on processors other than the one indicated. Specifying</source>
          <target state="translated">permite a GCC generar un código que puede no funcionar en absoluto en procesadores distintos del indicado.Especificando</target>
        </trans-unit>
        <trans-unit id="cf49e111caf7da05b98404623112872b82a367f9" translate="yes" xml:space="preserve">
          <source>allows GCC to use the optional PowerPC architecture instructions in the General Purpose group, including floating-point square root. Specifying</source>
          <target state="translated">permite a GCC utilizar las instrucciones opcionales de la arquitectura PowerPC en el grupo de Propósito General,incluyendo la raíz cuadrada de punto flotante.Especificando</target>
        </trans-unit>
        <trans-unit id="f5666aaba4ff4d9843997efb2fce32365976d352" translate="yes" xml:space="preserve">
          <source>allows GCC to use the optional PowerPC architecture instructions in the Graphics group, including floating-point select.</source>
          <target state="translated">permite a GCC utilizar las instrucciones opcionales de la arquitectura PowerPC en el grupo de Gráficos,incluyendo la selección de punto flotante.</target>
        </trans-unit>
        <trans-unit id="2abc9f7d66d3a1198b14bbaa01458338cdf813bd" translate="yes" xml:space="preserve">
          <source>allows some nonconforming code to compile.</source>
          <target state="translated">permite que se compile algún código no conforme.</target>
        </trans-unit>
        <trans-unit id="bedf43ad0a95e8d3ef4a98d57277220a9905abdc" translate="yes" xml:space="preserve">
          <source>along with</source>
          <target state="translated">junto con</target>
        </trans-unit>
        <trans-unit id="eec221c0b71d49bdac9cb852917ed960c85ad0a8" translate="yes" xml:space="preserve">
          <source>also being enabled.</source>
          <target state="translated">también está siendo habilitado.</target>
        </trans-unit>
        <trans-unit id="5fad31864ed398f45dae03d45460e898d7d29f7e" translate="yes" xml:space="preserve">
          <source>also being specified, the code is tuned to perform well across a range of target processors implementing the target architecture.</source>
          <target state="translated">También se especifica que el código se ajusta para que funcione bien en toda la gama de procesadores de destino que implementan la arquitectura de destino.</target>
        </trans-unit>
        <trans-unit id="8d6a07b9735308ca8e95431227809c536d7831ad" translate="yes" xml:space="preserve">
          <source>also by</source>
          <target state="translated">también por</target>
        </trans-unit>
        <trans-unit id="187a158ae4568f3cc3e2b692351e6276268ce95b" translate="yes" xml:space="preserve">
          <source>also checks for null format arguments for several functions,</source>
          <target state="translated">también comprueba si hay argumentos de formato nulo para varias funciones,</target>
        </trans-unit>
        <trans-unit id="f587f4ff38f8c2cccf85ae4104732656fd8bb96d" translate="yes" xml:space="preserve">
          <source>also diagnoses cases where the attributes of the alias declaration are more restrictive than the attributes applied to its target. These mismatches can potentially result in incorrect code generation. In other cases they may be benign and could be resolved simply by adding the missing attribute to the target. For comparison, see the</source>
          <target state="translated">también diagnostica los casos en que los atributos de la declaración del alias son más restrictivos que los atributos aplicados a su objetivo.Estas incompatibilidades pueden dar lugar a la generación de códigos incorrectos.En otros casos pueden ser benignos y podrían resolverse simplemente añadiendo el atributo que falta al objetivo.Para la comparación,véase el</target>
        </trans-unit>
        <trans-unit id="cb860f8821c8635791611ff058e7157ab855da31" translate="yes" xml:space="preserve">
          <source>also implies</source>
          <target state="translated">también implica</target>
        </trans-unit>
        <trans-unit id="6f42e4ce494f5b76f2544a0f03b983119cfbce78" translate="yes" xml:space="preserve">
          <source>also includes dependence info.</source>
          <target state="translated">también incluye información sobre la dependencia.</target>
        </trans-unit>
        <trans-unit id="be3f59c6748c3a9b4a7ae21f5715d657a72eeb15" translate="yes" xml:space="preserve">
          <source>also prints warning messages for the following cases:</source>
          <target state="translated">también imprime mensajes de advertencia para los siguientes casos:</target>
        </trans-unit>
        <trans-unit id="2e5682119037273f933c083ad00d7701aba2cf5c" translate="yes" xml:space="preserve">
          <source>also provides equivalent macros called &lt;code&gt;_&lt;var&gt;someinsn&lt;/var&gt;&lt;/code&gt; that can be used for programming ease and improved readability. The following macros for DMA control are also provided:</source>
          <target state="translated">tambi&amp;eacute;n proporciona macros equivalentes llamadas &lt;code&gt;_&lt;var&gt;someinsn&lt;/var&gt;&lt;/code&gt; que se pueden utilizar para facilitar la programaci&amp;oacute;n y mejorar la legibilidad. Tambi&amp;eacute;n se proporcionan las siguientes macros para el control DMA:</target>
        </trans-unit>
        <trans-unit id="f34eaf4f6ae89eb9588e134559245afad4e138e4" translate="yes" xml:space="preserve">
          <source>also sets</source>
          <target state="translated">también establece</target>
        </trans-unit>
        <trans-unit id="e117a2e5dfc7efe817347989346d6cd665ab904c" translate="yes" xml:space="preserve">
          <source>also suppresses preprocessed output, as a missing header file renders this useless.</source>
          <target state="translated">también suprime la salida preprocesada,ya que la falta de un archivo de cabecera lo hace inútil.</target>
        </trans-unit>
        <trans-unit id="63a0640542d5918d3932396f482586803338d771" translate="yes" xml:space="preserve">
          <source>also takes into account control flow statements, such as ifs, and only warns when appropriate. E.g.</source>
          <target state="translated">también tiene en cuenta los estados de flujo de control,como ifs,y sólo advierte cuando es apropiado.Por ejemplo</target>
        </trans-unit>
        <trans-unit id="30f35ed6e318ea969ed59edf47b9b26381d2be26" translate="yes" xml:space="preserve">
          <source>also warns about calls to bounded string copy functions like &lt;code&gt;strncat&lt;/code&gt; or &lt;code&gt;strncpy&lt;/code&gt; that specify as the bound a &lt;code&gt;sizeof&lt;/code&gt; expression of the source array. For example, in the following function the call to &lt;code&gt;strncat&lt;/code&gt; specifies the size of the source string as the bound. That is almost certainly a mistake and so the call is diagnosed.</source>
          <target state="translated">tambi&amp;eacute;n advierte sobre llamadas a funciones de copia de cadenas limitadas como &lt;code&gt;strncat&lt;/code&gt; o &lt;code&gt;strncpy&lt;/code&gt; que especifican como l&amp;iacute;mite una expresi&amp;oacute;n de &lt;code&gt;sizeof&lt;/code&gt; de la matriz fuente. Por ejemplo, en la siguiente funci&amp;oacute;n, la llamada a &lt;code&gt;strncat&lt;/code&gt; especifica el tama&amp;ntilde;o de la cadena de origen como l&amp;iacute;mite. Es casi seguro que se trata de un error, por lo que se diagnostica la llamada.</target>
        </trans-unit>
        <trans-unit id="4f244ab7b0dd86244a85d676a4e7e6a378a2f85e" translate="yes" xml:space="preserve">
          <source>also warns about class member allocation functions.</source>
          <target state="translated">también advierte sobre las funciones de asignación de los miembros de la clase.</target>
        </trans-unit>
        <trans-unit id="b62db011fc5c4e0ddffda8c03fb7a1020abe09e6" translate="yes" xml:space="preserve">
          <source>also warns about this situation; this warning can be avoided by explicitly tagging the variable or function or moving it into a tagged inline namespace.</source>
          <target state="translated">también advierte sobre esta situación;esta advertencia puede evitarse etiquetando explícitamente la variable o la función o moviéndola a un espacio de nombres etiquetado en línea.</target>
        </trans-unit>
        <trans-unit id="816d63e63c53fbbcdc73b605731fb850111597ab" translate="yes" xml:space="preserve">
          <source>alternative</source>
          <target state="translated">alternative</target>
        </trans-unit>
        <trans-unit id="cbcd5fa05a97da31161499a40e885c28da334f58" translate="yes" xml:space="preserve">
          <source>altivec</source>
          <target state="translated">altivec</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="a17ce9b6918e1f1ff5f858aa6106831fa7297c8c" translate="yes" xml:space="preserve">
          <source>always has a large stack. Support for this is implemented in the gold linker in GNU binutils release 2.21 and later.</source>
          <target state="translated">siempre tiene una gran pila.El soporte para esto está implementado en el enlazador dorado de la versión 2.21 y posteriores de GNU binutils.</target>
        </trans-unit>
        <trans-unit id="80e7ce3e370a6dda4a9fb0810b8685ac34fc5708" translate="yes" xml:space="preserve">
          <source>always_inline</source>
          <target state="translated">always_inline</target>
        </trans-unit>
        <trans-unit id="8dbe12ece6858c4818dac43b3d526c9a1f59fee3" translate="yes" xml:space="preserve">
          <source>am33</source>
          <target state="translated">am33</target>
        </trans-unit>
        <trans-unit id="11b883c428dac39d27e1d63b6df041f0638d659b" translate="yes" xml:space="preserve">
          <source>am33-2</source>
          <target state="translated">am33-2</target>
        </trans-unit>
        <trans-unit id="534aa547f58efe57e7088bffcb38a66eaac8a75f" translate="yes" xml:space="preserve">
          <source>am34</source>
          <target state="translated">am34</target>
        </trans-unit>
        <trans-unit id="1ea0b794e1acd33fc0e733b79c72bf9252569c11" translate="yes" xml:space="preserve">
          <source>amd</source>
          <target state="translated">amd</target>
        </trans-unit>
        <trans-unit id="2395059e740ec74ddaadf44ba1fd6be5abeb4f3f" translate="yes" xml:space="preserve">
          <source>amd64</source>
          <target state="translated">amd64</target>
        </trans-unit>
        <trans-unit id="b35a515e5c6e1bbc58411f2be892a9ab16847ea8" translate="yes" xml:space="preserve">
          <source>amdfam10</source>
          <target state="translated">amdfam10</target>
        </trans-unit>
        <trans-unit id="3a6d03b94ef74592e176a5d5190e78a646119762" translate="yes" xml:space="preserve">
          <source>amdfam10h</source>
          <target state="translated">amdfam10h</target>
        </trans-unit>
        <trans-unit id="261cb5d6b8474d348d7cc4b9daa4299477e3581e" translate="yes" xml:space="preserve">
          <source>amdfam15h</source>
          <target state="translated">amdfam15h</target>
        </trans-unit>
        <trans-unit id="77c479bd3bd5a6e9817c756457f45b3383bfda8b" translate="yes" xml:space="preserve">
          <source>amdfam17h</source>
          <target state="translated">amdfam17h</target>
        </trans-unit>
        <trans-unit id="fd4a625a31a18d16fe04662ffe5a54c9d06947f3" translate="yes" xml:space="preserve">
          <source>an &lt;code&gt;enum&lt;/code&gt; is encoded exactly as the integer type that the compiler uses for it, which depends on the enumeration values. Often the compiler users &lt;code&gt;unsigned int&lt;/code&gt;, which is then encoded as &lt;code&gt;I&lt;/code&gt;.</source>
          <target state="translated">una &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n se codifica exactamente como el tipo de entero que usa el compilador, que depende de los valores de enumeraci&amp;oacute;n. A menudo, los usuarios del compilador &lt;code&gt;unsigned int&lt;/code&gt; , que se codifica entonces como &lt;code&gt;I&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a2ad1f0fd30a224aa1740e4739fe7eb9ee94f86" translate="yes" xml:space="preserve">
          <source>an ACC register number</source>
          <target state="translated">un número de registro del ACC</target>
        </trans-unit>
        <trans-unit id="45bc278ac53a1060e69cab091ecac756552d2721" translate="yes" xml:space="preserve">
          <source>an IACC register number</source>
          <target state="translated">un número de registro de la IACC</target>
        </trans-unit>
        <trans-unit id="0666bd4cf85f6a8a3d638122033f89aff472392a" translate="yes" xml:space="preserve">
          <source>an integer constant</source>
          <target state="translated">una constante entera</target>
        </trans-unit>
        <trans-unit id="6d3c084323cc6197a38855b1039213d1fa5e3a22" translate="yes" xml:space="preserve">
          <source>an unsigned doubleword</source>
          <target state="translated">una palabra doble sin firmar</target>
        </trans-unit>
        <trans-unit id="3657f24217b612273b00133ebb412d287de01a77" translate="yes" xml:space="preserve">
          <source>an unsigned halfword</source>
          <target state="translated">una media palabra sin firmar</target>
        </trans-unit>
        <trans-unit id="1773204396a38972d97d6f1c14d98973abbaa970" translate="yes" xml:space="preserve">
          <source>an unsigned word</source>
          <target state="translated">una palabra sin firmar</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="70913d37024f402445c0df52a7fadf651367bc49" translate="yes" xml:space="preserve">
          <source>and &amp;ldquo;on&amp;rdquo; for</source>
          <target state="translated">y &quot;encendido&quot; para</target>
        </trans-unit>
        <trans-unit id="16ef79c113045b4dd6e920ca55a6a62dad230d8e" translate="yes" xml:space="preserve">
          <source>and 2 for</source>
          <target state="translated">y 2 para</target>
        </trans-unit>
        <trans-unit id="6e8bd910160e77b35630d8e9ecd21b71ad3f3f1e" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;__attribute__ ((visibility(&quot;default&quot;)))&lt;/code&gt; instead of &lt;code&gt;__declspec(dllexport)&lt;/code&gt; you get almost identical semantics with identical syntax. This is a great boon to those working with cross-platform projects.</source>
          <target state="translated">y &lt;code&gt;__attribute__ ((visibility(&quot;default&quot;)))&lt;/code&gt; lugar de &lt;code&gt;__declspec(dllexport)&lt;/code&gt; obtienes sem&amp;aacute;nticas casi id&amp;eacute;nticas con sintaxis id&amp;eacute;ntica. Esta es una gran ayuda para quienes trabajan con proyectos multiplataforma.</target>
        </trans-unit>
        <trans-unit id="ecd7bafc40d24575da004f86f8a90c2aaf8b6d10" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;gold&lt;/code&gt; is used as the linker plugin, &lt;code&gt;externally_visible&lt;/code&gt; attributes are automatically added to functions (not variable yet due to a current &lt;code&gt;gold&lt;/code&gt; issue) that are accessed outside of LTO objects according to resolution file produced by &lt;code&gt;gold&lt;/code&gt;. For other linkers that cannot generate resolution file, explicit &lt;code&gt;externally_visible&lt;/code&gt; attributes are still necessary.</source>
          <target state="translated">y el &lt;code&gt;gold&lt;/code&gt; se usa como el complemento del vinculador, &lt;code&gt;externally_visible&lt;/code&gt; atributos externally_visible se agregan autom&amp;aacute;ticamente a las funciones (a&amp;uacute;n no variables debido a un problema de &lt;code&gt;gold&lt;/code&gt; actual ) a las que se accede fuera de los objetos LTO de acuerdo con el archivo de resoluci&amp;oacute;n producido por &lt;code&gt;gold&lt;/code&gt; . Para otros enlazadores que no pueden generar archivos de resoluci&amp;oacute;n, a&amp;uacute;n son necesarios atributos expl&amp;iacute;citos &lt;code&gt;externally_visible&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc057aa007baa6ea326398d0908a19dee419f14d" translate="yes" xml:space="preserve">
          <source>and CSE is often sufficient to obtain the same effect. However, that is not reliable in cases where the loop body is more complicated than a single basic block. It also does not work at all on some architectures due to restrictions in the CSE pass.</source>
          <target state="translated">y el CSE es a menudo suficiente para obtener el mismo efecto.Sin embargo,eso no es fiable en los casos en que el cuerpo del bucle es más complicado que un solo bloque básico.Tampoco funciona en absoluto en algunas arquitecturas debido a las restricciones en el pase CSE.</target>
        </trans-unit>
        <trans-unit id="2d730a90936bf795bf3e3ee8f9ba908c353e4fdf" translate="yes" xml:space="preserve">
          <source>and PowerPC64 ELFv1 (big-endian) do not support inline PLT calls.</source>
          <target state="translated">y PowerPC64 ELFv1 (big-endian)no soportan llamadas PLT en línea.</target>
        </trans-unit>
        <trans-unit id="b187d89af0f244b0d50df4ccd6e399a3d2177284" translate="yes" xml:space="preserve">
          <source>and above).</source>
          <target state="translated">y arriba).</target>
        </trans-unit>
        <trans-unit id="540943c2bc2692326429df85dfa3348df4f1b753" translate="yes" xml:space="preserve">
          <source>and above). It warns about subscripts to arrays that are always out of bounds. This warning is enabled by</source>
          <target state="translated">y arriba).Advierte sobre las subscripciones a matrices que siempre están fuera de los límites.Esta advertencia está habilitada por</target>
        </trans-unit>
        <trans-unit id="3763092639f876f5583517a9d0eb30243e45a887" translate="yes" xml:space="preserve">
          <source>and above.</source>
          <target state="translated">y arriba.</target>
        </trans-unit>
        <trans-unit id="e116e2dfbcfa1008e272a76654ceabd0ae9dcd52" translate="yes" xml:space="preserve">
          <source>and above. For some sorts of source code the enhanced partial redundancy elimination optimization can run away, consuming all of the memory available on the host machine. This parameter sets a limit on the length of the sets that are computed, which prevents the runaway behavior. Setting a value of 0 for this parameter allows an unlimited set length.</source>
          <target state="translated">y arriba.Para algunos tipos de código fuente,la optimización de la eliminación de la redundancia parcial mejorada puede agotar toda la memoria disponible en la máquina anfitriona.Este parámetro establece un límite en la longitud de los conjuntos que se computan,lo que evita el comportamiento de fuga.Establecer un valor de 0 para este parámetro permite una longitud de conjunto ilimitada.</target>
        </trans-unit>
        <trans-unit id="d4c36d2256d758a63a43d0d687d1ad18856d0f48" translate="yes" xml:space="preserve">
          <source>and above. It is included in</source>
          <target state="translated">y arriba.Está incluido en</target>
        </trans-unit>
        <trans-unit id="8ca6f8b65a307f3565d2bdeac5195f1e6675246e" translate="yes" xml:space="preserve">
          <source>and above. It works in tandem with the</source>
          <target state="translated">y arriba.Funciona en conjunto con el</target>
        </trans-unit>
        <trans-unit id="196478f2d301e69e64852ded07da61f6a1994c32" translate="yes" xml:space="preserve">
          <source>and above. The flag</source>
          <target state="translated">y arriba.La bandera</target>
        </trans-unit>
        <trans-unit id="16cca3a59f077ac790f119f67104a42b8a0ffc3d" translate="yes" xml:space="preserve">
          <source>and accordingly for the postamble of the epilogue &amp;mdash; no matter whether the mentioned registers are actually used in the ISR or not. Situations where you might want to use this attribute include:</source>
          <target state="translated">y en consecuencia para el ep&amp;iacute;logo del ep&amp;iacute;logo, sin importar si los registros mencionados se utilizan realmente en el ISR o no. Las situaciones en las que es posible que desee utilizar este atributo incluyen:</target>
        </trans-unit>
        <trans-unit id="0cba2aa225bdda89770493d09134f7ac4e9d6a51" translate="yes" xml:space="preserve">
          <source>and all C files starting with &amp;rsquo;module&amp;rsquo;.</source>
          <target state="translated">y todos los archivos C que comienzan con 'm&amp;oacute;dulo'.</target>
        </trans-unit>
        <trans-unit id="bab3e293e424c711fb965241b4ac9719742de334" translate="yes" xml:space="preserve">
          <source>and all the</source>
          <target state="translated">y todos los</target>
        </trans-unit>
        <trans-unit id="c05c88d23f63de9b36f3b812e4c3b3636aa4477a" translate="yes" xml:space="preserve">
          <source>and also turns on the following optimization flags:</source>
          <target state="translated">y también enciende las siguientes banderas de optimización:</target>
        </trans-unit>
        <trans-unit id="2ebde484284695bea6e3641a94d76fb9524875f9" translate="yes" xml:space="preserve">
          <source>and another with</source>
          <target state="translated">y otro con</target>
        </trans-unit>
        <trans-unit id="a66594753907e18391761122d0c6251f7905b621" translate="yes" xml:space="preserve">
          <source>and another with the default options. GCC must be configured to use GLIBC 2.23 or newer in order to use the &lt;code&gt;target_clones&lt;/code&gt; attribute.</source>
          <target state="translated">y otro con las opciones predeterminadas. GCC debe configurarse para usar GLIBC 2.23 o m&amp;aacute;s reciente para poder usar el atributo &lt;code&gt;target_clones&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be06f33f42d5fdd847c8ef1a054178ef64e8d724" translate="yes" xml:space="preserve">
          <source>and by</source>
          <target state="translated">y por</target>
        </trans-unit>
        <trans-unit id="bd91aa685e568528bf96de5c3a56f0d28ba7fac2" translate="yes" xml:space="preserve">
          <source>and by default a cost model defined with</source>
          <target state="translated">y por defecto un modelo de costos definido con</target>
        </trans-unit>
        <trans-unit id="b58b6b69e9a6e2dffafda6e336f4d4562a450054" translate="yes" xml:space="preserve">
          <source>and code compiled with</source>
          <target state="translated">y el código compilado con</target>
        </trans-unit>
        <trans-unit id="5f781abb49c37ac3e1988d7f276013bdf87a40b0" translate="yes" xml:space="preserve">
          <source>and either</source>
          <target state="translated">y o bien</target>
        </trans-unit>
        <trans-unit id="db999ebc24b4a98f48dfa65e6948013de37b01d1" translate="yes" xml:space="preserve">
          <source>and emitting the result direct to stdout via</source>
          <target state="translated">y emitiendo el resultado directamente al stdout vía</target>
        </trans-unit>
        <trans-unit id="1769c9699ef4ab291d81bfc70d0f12e25b85fd42" translate="yes" xml:space="preserve">
          <source>and export those classes that are intended to be externally visible. Unfortunately it is possible for code to rely, perhaps accidentally, on the Visual Studio behavior.</source>
          <target state="translated">y exportar las clases que se pretende que sean visibles externamente.Desafortunadamente es posible que el código dependa,quizás accidentalmente,del comportamiento del Estudio Visual.</target>
        </trans-unit>
        <trans-unit id="36b302c13ab3c153e6cac498496443414d3fce07" translate="yes" xml:space="preserve">
          <source>and finally</source>
          <target state="translated">y finalmente</target>
        </trans-unit>
        <trans-unit id="8b3b299fce213f2a1e237365ea4fcb9e5607c1e3" translate="yes" xml:space="preserve">
          <source>and higher and depends on</source>
          <target state="translated">y más alto y depende de</target>
        </trans-unit>
        <trans-unit id="d3ee9cb1836394c3283e4bf670015859583e15fc" translate="yes" xml:space="preserve">
          <source>and higher as well as</source>
          <target state="translated">y más alto,así como</target>
        </trans-unit>
        <trans-unit id="5a9bec14cd65cb6407309dcf8b220e22883b3c85" translate="yes" xml:space="preserve">
          <source>and higher if</source>
          <target state="translated">y más alto si</target>
        </trans-unit>
        <trans-unit id="bcbf9cf724baaa2c05cb8d8ef447ba9db9b1d32e" translate="yes" xml:space="preserve">
          <source>and higher on architectures that support this.</source>
          <target state="translated">y más alto en las arquitecturas que apoyan esto.</target>
        </trans-unit>
        <trans-unit id="5652f51541248dfcd407bf27224a828b6323954d" translate="yes" xml:space="preserve">
          <source>and higher,</source>
          <target state="translated">y más alto,</target>
        </trans-unit>
        <trans-unit id="20df9f0858c9d558bdf3ec73ab7b30c8be3693c7" translate="yes" xml:space="preserve">
          <source>and higher, and also at</source>
          <target state="translated">y más alto,y también en</target>
        </trans-unit>
        <trans-unit id="d997e6f0b5d9397ce43f624b10d7171a88e8eab8" translate="yes" xml:space="preserve">
          <source>and higher, except for</source>
          <target state="translated">y más alto,excepto por</target>
        </trans-unit>
        <trans-unit id="de9609e65fe8304aa2b84c02990d0ddd0b347ca8" translate="yes" xml:space="preserve">
          <source>and higher.</source>
          <target state="translated">y más alto.</target>
        </trans-unit>
        <trans-unit id="4822df6fd07924d846e61249bdf13788d9ead31a" translate="yes" xml:space="preserve">
          <source>and higher. Higher optimization levels improve the accuracy of the analysis.</source>
          <target state="translated">y más alto.Los niveles de optimización más altos mejoran la precisión del análisis.</target>
        </trans-unit>
        <trans-unit id="afc0a14fb13d8311f68301c0ecd98042f1e9800d" translate="yes" xml:space="preserve">
          <source>and higher. It is not enabled for</source>
          <target state="translated">y más alto.No está habilitado para</target>
        </trans-unit>
        <trans-unit id="a76fab721d9a45aaff56d37fa7059d4d07c6bf05" translate="yes" xml:space="preserve">
          <source>and higher. Null pointer check elimination is only done if</source>
          <target state="translated">y más alto.La eliminación de los punteros nulos sólo se hace si</target>
        </trans-unit>
        <trans-unit id="17f12a1567309243f3153a113c5c9b0dc8b04f9a" translate="yes" xml:space="preserve">
          <source>and higher. The compilation time in this pass can be limited using</source>
          <target state="translated">y más alto.El tiempo de compilación en este pase puede ser limitado usando</target>
        </trans-unit>
        <trans-unit id="1352c6defb413a9629f8a883262aafbdf1d73c3e" translate="yes" xml:space="preserve">
          <source>and if the variable arguments are omitted or empty, the &amp;lsquo;</source>
          <target state="translated">y si los argumentos de las variables se omiten o est&amp;aacute;n vac&amp;iacute;os, el '</target>
        </trans-unit>
        <trans-unit id="97253136342a86d551cb8f938043a04fa09b8e17" translate="yes" xml:space="preserve">
          <source>and in the</source>
          <target state="translated">y en el</target>
        </trans-unit>
        <trans-unit id="71e7f852efd77608e67d67f4769c27771f643624" translate="yes" xml:space="preserve">
          <source>and in the cases of</source>
          <target state="translated">y en los casos de</target>
        </trans-unit>
        <trans-unit id="8e1a25c4625f2b80697437af8a97194c0476ac2c" translate="yes" xml:space="preserve">
          <source>and introduces new signatures for user-defined literals:</source>
          <target state="translated">e introduce nuevas firmas para los literales definidos por el usuario:</target>
        </trans-unit>
        <trans-unit id="4a1b1d4b275aa98ab0a4a65283ca64d508b23283" translate="yes" xml:space="preserve">
          <source>and is defined for compatibility with Diab.</source>
          <target state="translated">y está definido para la compatibilidad con Diab.</target>
        </trans-unit>
        <trans-unit id="b6b1e55ec15f2cb25e78716d325961ca33806bb5" translate="yes" xml:space="preserve">
          <source>and is deprecated.</source>
          <target state="translated">y está desaprobado.</target>
        </trans-unit>
        <trans-unit id="9c32e4dd09aae4d64ecbad3933f8c85c732ca5ff" translate="yes" xml:space="preserve">
          <source>and is enabled by</source>
          <target state="translated">y está habilitado por</target>
        </trans-unit>
        <trans-unit id="60f868f3a7c169f71793f02a83a16555d3150a50" translate="yes" xml:space="preserve">
          <source>and is enabled by default in C99 and C++11 modes (and newer). This warning level does not warn about left-shifting 1 into the sign bit. (However, in C, such an overflow is still rejected in contexts where an integer constant expression is required.) No warning is emitted in C++2A mode (and newer), as signed left shifts always wrap.</source>
          <target state="translated">y está activado por defecto en los modos C99 y C++11 (y más recientes).Este nivel de advertencia no advierte sobre el desplazamiento a la izquierda 1 en el bit de la señal.(Sin embargo,en C,tal desbordamiento sigue siendo rechazado en contextos en los que se requiere una expresión constante entera).No se emite ninguna advertencia en el modo C++2A (y más reciente),ya que los desplazamientos a la izquierda del signo siempre se envuelven.</target>
        </trans-unit>
        <trans-unit id="18a6194526a99bc8a75aa2625ef50b249a3cc54a" translate="yes" xml:space="preserve">
          <source>and is ignored at link time.</source>
          <target state="translated">y se ignora en el momento del enlace.</target>
        </trans-unit>
        <trans-unit id="8cdd0a931822d69709608b564b7f6b552ac906b1" translate="yes" xml:space="preserve">
          <source>and its related options. Both absolute and relative paths can be used. By default, GCC uses the current directory as &lt;var&gt;path&lt;/var&gt;, thus the profile data file appears in the same directory as the object file. In order to prevent the file name clashing, if the object file name is not an absolute path, we mangle the absolute path of the</source>
          <target state="translated">y sus opciones relacionadas. Se pueden utilizar rutas absolutas y relativas. De forma predeterminada, GCC utiliza el directorio actual como &lt;var&gt;path&lt;/var&gt; , por lo que el archivo de datos de perfil aparece en el mismo directorio que el archivo objeto. Para evitar que el nombre del archivo entre en conflicto, si el nombre del archivo del objeto no es una ruta absoluta, modificamos la ruta absoluta del</target>
        </trans-unit>
        <trans-unit id="8aaeb495a9e5b482acebee2f5a8a0a37a7e8745c" translate="yes" xml:space="preserve">
          <source>and joined by spaces. This list is intended to be passed to the LTO linker plugin.</source>
          <target state="translated">y unidos por los espacios.Esta lista está pensada para ser pasada al plugin del enlazador LTO.</target>
        </trans-unit>
        <trans-unit id="c7acf5a5b05ac0929c1671052424680580734fbc" translate="yes" xml:space="preserve">
          <source>and let the driver handle the options instead.</source>
          <target state="translated">y dejar que el conductor maneje las opciones en su lugar.</target>
        </trans-unit>
        <trans-unit id="bfccb2c5c250efe79e7d9930697e9b24c391e2ac" translate="yes" xml:space="preserve">
          <source>and libraries in</source>
          <target state="translated">y bibliotecas en</target>
        </trans-unit>
        <trans-unit id="f0e01a5c55ee31dbcc71234d1f7dd13b04392356" translate="yes" xml:space="preserve">
          <source>and must be explicitly requested since in C++ this isn&amp;rsquo;t an error and in C it might be harder to clean up all headers included.</source>
          <target state="translated">y debe solicitarse expl&amp;iacute;citamente ya que en C ++ esto no es un error y en C puede ser m&amp;aacute;s dif&amp;iacute;cil limpiar todos los encabezados incluidos.</target>
        </trans-unit>
        <trans-unit id="c8b774402ab6984eabd550c359a10ea00ca9ffbe" translate="yes" xml:space="preserve">
          <source>and optimization options should be specified at compile time and during the final link. It is recommended that you compile all the files participating in the same link with the same options and also specify those options at link time. For example:</source>
          <target state="translated">y las opciones de optimización deben especificarse en el momento de la compilación y durante el enlace final.Se recomienda compilar todos los archivos que participan en el mismo enlace con las mismas opciones y también especificar esas opciones en el momento del enlace.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c7904d214a56c9420eebba683732a4bd59f75475" translate="yes" xml:space="preserve">
          <source>and other options cause warnings for many GNU C extensions. You can prevent such warnings within one expression by writing &lt;code&gt;__extension__&lt;/code&gt; before the expression. &lt;code&gt;__extension__&lt;/code&gt; has no effect aside from this.</source>
          <target state="translated">y otras opciones generan advertencias para muchas extensiones GNU C. Puede evitar tales advertencias dentro de una expresi&amp;oacute;n escribiendo &lt;code&gt;__extension__&lt;/code&gt; antes de la expresi&amp;oacute;n. &lt;code&gt;__extension__&lt;/code&gt; no tiene ning&amp;uacute;n efecto aparte de esto.</target>
        </trans-unit>
        <trans-unit id="737b71e6d8426b3fda4249cd8c1165da4988f20d" translate="yes" xml:space="preserve">
          <source>and outputs the command-line option</source>
          <target state="translated">y da la salida a la opción de línea de comando</target>
        </trans-unit>
        <trans-unit id="4a51075a2d63bdd9c031332e64282ebb86738b8f" translate="yes" xml:space="preserve">
          <source>and passes them on to the running GCC to make them part of the aggregated GIMPLE image to be optimized.</source>
          <target state="translated">y los pasa al GCC en funcionamiento para hacerlos parte de la imagen agregada del GIMPLE para ser optimizados.</target>
        </trans-unit>
        <trans-unit id="b7483c73e6a38e6274495270d12341498eeacbbb" translate="yes" xml:space="preserve">
          <source>and prevents linking with the shared libraries. On other systems, this option has no effect.</source>
          <target state="translated">e impide la vinculación con las bibliotecas compartidas.En otros sistemas,esta opción no tiene ningún efecto.</target>
        </trans-unit>
        <trans-unit id="123217ee99d19efe020f3f3466fda26930ff804c" translate="yes" xml:space="preserve">
          <source>and remove the</source>
          <target state="translated">y quitar el</target>
        </trans-unit>
        <trans-unit id="d0ba1984262756dc3e97eba7054a343cd95b906e" translate="yes" xml:space="preserve">
          <source>and sets the start address of the program to 0x800.</source>
          <target state="translated">y establece la dirección de inicio del programa a 0x800.</target>
        </trans-unit>
        <trans-unit id="ca533d5e239b86c5bce8e5223c75d9799ce24658" translate="yes" xml:space="preserve">
          <source>and so on. Most of these have both positive and negative forms; the negative form of</source>
          <target state="translated">y así sucesivamente.La mayoría de ellas tienen formas positivas y negativas;la forma negativa de</target>
        </trans-unit>
        <trans-unit id="8448c2525daee3e2e6799cb7b66fc64c9ee09e88" translate="yes" xml:space="preserve">
          <source>and that the standard C libraries are</source>
          <target state="translated">y que las bibliotecas C estándar son</target>
        </trans-unit>
        <trans-unit id="673968187c298fea9b969fc56a05d8e49cf79c7d" translate="yes" xml:space="preserve">
          <source>and the Fortran-specific</source>
          <target state="translated">y el específico de Fortran</target>
        </trans-unit>
        <trans-unit id="584bb0d053da62487d41fcb63d90a5569011ef09" translate="yes" xml:space="preserve">
          <source>and the application be linked with</source>
          <target state="translated">y que la aplicación se vincule con</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
